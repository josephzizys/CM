/* Generated from ChickenBridge.scm by the CHICKEN compiler
   http://www.call-with-current-continuation.org
   2008-03-25 19:48
   Version 3.0.0 - macosx-unix-gnu-x86	[ manyargs dload ptables applyhook ]
   (c)2000-2008 Felix L. Winkelmann	compiled 2008-02-24 on zippy.local (Darwin)
   command line: ChickenBridge.scm -output-file ChickenBridge.cpp -quiet
   unit: grace
*/

#include "chicken.h"


/*************************************************************************
 * Copyright (C) 2007 Todd Ingalls, Rick Taube.                          *
 * This program is free software; you can redistribute it and/or modify  *
 * it under the terms of the Lisp Lesser Gnu Public License. The text of *
 * this agreement is available at http://www.cliki.net/LLGPL             *
 *************************************************************************/

#include "Grace.h"
#include "Scheme.h"
#include "Syntax.h"
#include "Midi.h"
#include <juce.h>

//
// Console Window code
//

void print_message(char * st) {
  // attempt at buffering: if string ends with #\Return, send string
  // AND trigger update else send string without triggering update
  String s=String(st);
  if ( s.endsWithChar('\n') )
    ((GraceApp *)GraceApp::getInstance())->getConsole()->postConsoleTextMessage(s, ConsoleMessage::TEXT, true);
  else
    ((GraceApp *)GraceApp::getInstance())->getConsole()->postConsoleTextMessage(s, ConsoleMessage::TEXT, false);
}

void print_error(char * st) {
  // attempt at buffering: if string ends with #\Return, send string
  // AND trigger update else send string without triggering update
  String s=String(st);
  if ( s.endsWithChar('\n') )
    ((GraceApp *)GraceApp::getInstance())->getConsole()->postConsoleTextMessage(s, ConsoleMessage::ERROR, true);
  else
    ((GraceApp *)GraceApp::getInstance())->getConsole()->postConsoleTextMessage(s, ConsoleMessage::ERROR, false);
}

//
// Scheduler code
//

void scheduler_sprout( C_word proc, double time, int id)
{
  ((GraceApp *)
   GraceApp::getInstance())->schemeProcess->addNode(0, time, proc, id);
}

bool scheduler_is_paused () {
  ((GraceApp *)GraceApp::getInstance())->schemeProcess->isPaused();
}

void scheduler_pause() {
  ((GraceApp *)GraceApp::getInstance())->schemeProcess->setPaused(true);
}

void scheduler_cont () {
  ((GraceApp *)GraceApp::getInstance())->schemeProcess->setPaused(false);
}

void scheduler_stop (int id) {
  ((GraceApp *)GraceApp::getInstance())->schemeProcess->stop(id);
}

void scheduler_hush () {
  ((GraceApp *)GraceApp::getInstance())->schemeProcess->stop(-1);
  ((GraceApp *)GraceApp::getInstance())->midiOutPort->clear();
}

bool scheduler_is_time_milliseconds () {
  ((GraceApp *)GraceApp::getInstance())->schemeProcess->isTimeMilliseconds();
}
 
void scheduler_set_time_milliseconds (bool b) {
  ((GraceApp *)GraceApp::getInstance())->schemeProcess->setTimeMilliseconds(b);
}

//void print_current_directory() {
//  String s=File::getCurrentWorkingDirectory().getFullPathName().quoted() + T("\n");
//  ((GraceApp *)GraceApp::getInstance())->getConsole()->postConsoleTextMessage(s, ConsoleMessage::TEXT, true);
//}

char *get_current_directory() {
  return (char *)File::getCurrentWorkingDirectory().getFullPathName().toUTF8();
}

void set_current_directory (char *path) {
  File dir=File(String(path));
  if ( dir.isDirectory() ) {
    dir.setAsCurrentWorkingDirectory();
    //print_working_directory();
  }
  else {
    String s=T(">>> Error: ") + dir.getFullPathName().quoted() + T(" is not a directory.\n");
    ((GraceApp *)GraceApp::getInstance())->getConsole()->postConsoleTextMessage(s, ConsoleMessage::ERROR, true);
  }			 
}

void load_sal_file(char *path) {
  SalSyntax::getInstance()->loadFile( String(path) );  
}



#include "Toolbox.h"



void mp_note(double time, double dur, float key, float vel, float chan) {
 ((GraceApp *)GraceApp::getInstance())->midiOutPort->sendNote(time, dur, key, vel, chan); 
}

void mp_data(int type, double time, float chan, float data1, float data2) {
 ((GraceApp *)GraceApp::getInstance())->midiOutPort->sendData(type, time, chan, data1, data2) ;
}

void mp_message(MidiMessage *m) {
 ((GraceApp *)GraceApp::getInstance())->midiOutPort->sendMessage(m) ;
}

/// MidiMessage accessors

MidiMessage *mm_make(int type, double time, int chan, 
		     int data1, int data2 ) {
  MidiMessage *m;
  chan++; // juce channels are 1 based
  switch (type) {
  case MidiNode::MM_OFF :
    m=new MidiMessage(MidiMessage::noteOff(chan, data1));
    break;
  case MidiNode::MM_ON :
    m=new MidiMessage(MidiMessage::noteOn(chan, data1, (juce::uint8)data2));
    break;
  case MidiNode::MM_TOUCH :
    m=new MidiMessage(MidiMessage::aftertouchChange(chan, data1, data2));
    break;
  case MidiNode::MM_CTRL :
    m=new MidiMessage(MidiMessage::controllerEvent(chan, data1, data2));
    break;
  case MidiNode::MM_PROG :
    m=new MidiMessage(MidiMessage::programChange(chan, data1));
    break;
  case MidiNode::MM_PRESS :
    m=new MidiMessage(MidiMessage::channelPressureChange(chan, data1));
    break;
  case MidiNode::MM_BEND :
    m=new MidiMessage(MidiMessage::pitchWheel(chan, data1));
    break;
  default:
    return NULL;
  }
  return m;
}

MidiMessage *mm_copy(MidiMessage *m) {
  return new MidiMessage(*m);
}

void mm_free(MidiMessage *m) {
  delete m;
}

bool mm_is_type(MidiMessage *m, int typ) {
  switch (typ) {
  case MidiNode::MM_OFF :
    return m->isNoteOff();
    break;
  case MidiNode::MM_ON :
    return m->isNoteOn();
    break;
  case MidiNode::MM_TOUCH :
    return m->isAftertouch();
    break;
  case MidiNode::MM_CTRL :
    return m->isController();
    break;
  case MidiNode::MM_PROG :
    return m->isProgramChange();
    break;
  case MidiNode::MM_PRESS :
    return m->isChannelPressure();
    break;
  case MidiNode::MM_BEND :
    return m->isPitchWheel();
    break;
  default:
    return false;
  }
}

double mm_time(MidiMessage *m) {
  return m->getTimeStamp();
}

void mm_set_time(MidiMessage *m, double t) {
  m->setTimeStamp(t);
  return ;		
}

int mm_chan(MidiMessage *m) {
  // juce channels are 1 based
  return m->getChannel()-1;
}

void mm_set_chan(MidiMessage *m, int chan) {
  // juce channels are 1 based
  m->setChannel(chan+1);
}

int mm_data(MidiMessage *m, int n ) {
  juce::uint8 *data=m->getRawData();
  return (int)data[n];
}

void mm_set_data(MidiMessage *m, int n, int v ) {
  juce::uint8 *data=m->getRawData();
  data[n]=(v & 0x7f);
}

//INput Hook Code
void set_input_hook( C_word proc )
{
 // FIX
 ((GraceApp *)GraceApp::getInstance())->schemeProcess->setInputHook( proc);
}



#include "Csound.h"

void cs_send_score_event (int type, int len, C_word lyst) {
  MYFLT buf[len];
  int i=0;
  for ( ; C_SCHEME_END_OF_LIST != lyst; lyst = C_u_i_cdr( lyst ) ) {
    if (i==len) break;
    C_word w = C_u_i_car( lyst );
    if ( C_immediatep(w) ) {
      if ( C_truep(C_fixnump(w)) ) {
	// printf("FIX: buf[%d]=%d\n", i, C_unfix(w) );
	buf[i++] = (MYFLT)C_unfix(w);
      }
      else
        buf[i++] = 0.0;
    }
    else if ( C_truep(C_blockp(w)) && C_truep( C_flonump( w ) )) {
      // printf("FLO: buf[%d]=%f\n", i, (float)C_flonum_magnitude( w ));
      buf[i++] = (MYFLT)C_flonum_magnitude( w );
    }
    else {
      buf[i++] = 0.0;
    }
  }
  ((GraceApp *)GraceApp::getInstance())->getCsoundPort()->sendScoreEvent( ((type==2) ? 'f' : 'i'), len, buf);  
}

void cs_clear_score () {
  ((GraceApp *)GraceApp::getInstance())->getCsoundPort()->clearScore();
}



static C_PTABLE_ENTRY *create_ptable(void);
C_noret_decl(C_library_toplevel)
C_externimport void C_ccall C_library_toplevel(C_word c,C_word d,C_word k) C_noret;
C_noret_decl(C_eval_toplevel)
C_externimport void C_ccall C_eval_toplevel(C_word c,C_word d,C_word k) C_noret;
C_noret_decl(C_extras_toplevel)
C_externimport void C_ccall C_extras_toplevel(C_word c,C_word d,C_word k) C_noret;
C_noret_decl(C_extras_toplevel)
C_externimport void C_ccall C_extras_toplevel(C_word c,C_word d,C_word k) C_noret;

static C_TLS C_word lf[835];
static double C_possibly_force_alignment;
static C_char C_TLS li0[] C_aligned={C_lihdr(0,0,11),40,97,53,53,51,50,32,105,51,50,41,0,0,0};
static C_char C_TLS li1[] C_aligned={C_lihdr(0,0,11),40,97,53,53,53,52,32,105,51,49,41,0,0,0};
static C_char C_TLS li2[] C_aligned={C_lihdr(0,0,11),40,97,53,53,54,52,32,105,51,48,41,0,0,0};
static C_char C_TLS li3[] C_aligned={C_lihdr(0,0,11),40,97,53,53,55,48,32,118,50,54,41,0,0,0};
static C_char C_TLS li4[] C_aligned={C_lihdr(0,0,34),40,101,120,112,97,110,100,45,111,112,116,107,101,121,115,32,117,115,101,114,48,32,115,112,101,99,49,32,98,111,100,121,50,41,0,0};
static C_char C_TLS li5[] C_aligned={C_lihdr(0,0,23),40,102,95,53,56,57,54,32,115,116,114,53,48,32,46,32,97,114,103,115,53,49,41,0,0,0,0,0,0,0};
static C_char C_TLS li6[] C_aligned={C_lihdr(0,0,12),40,102,95,53,56,56,53,32,107,53,52,41,0,0,0,0};
static C_char C_TLS li7[] C_aligned={C_lihdr(0,0,12),40,102,95,53,56,57,52,32,107,53,53,41,0,0,0,0};
static C_char C_TLS li8[] C_aligned={C_lihdr(0,0,13),40,100,111,54,57,32,116,97,105,108,55,49,41,0,0,0,0,0};
static C_char C_TLS li9[] C_aligned={C_lihdr(0,0,11),40,97,53,56,51,50,32,120,55,55,41,0,0,0};
static C_char C_TLS li10[] C_aligned={C_lihdr(0,0,31),40,100,111,54,51,32,97,114,103,115,54,53,32,107,101,121,54,54,32,97,114,103,54,55,32,112,111,115,54,56,41,0,0,0,0,0,0,0};
static C_char C_TLS li11[] C_aligned={C_lihdr(0,0,7),40,97,53,56,55,54,41,0,0,0,0,0,0,0};
static C_char C_TLS li12[] C_aligned={C_lihdr(0,0,34),40,101,120,112,97,110,100,45,115,101,110,100,32,109,101,115,103,52,52,32,100,97,116,97,52,53,32,101,114,114,102,52,54,41,0,0};
static C_char C_TLS li13[] C_aligned={C_lihdr(0,0,8),40,102,95,53,57,49,52,41};
static C_char C_TLS li14[] C_aligned={C_lihdr(0,0,5),40,99,119,100,41,0,0,0,0,0};
static C_char C_TLS li15[] C_aligned={C_lihdr(0,0,14),40,102,95,53,57,50,57,32,97,57,52,57,56,41,0,0,0,0,0,0};
static C_char C_TLS li16[] C_aligned={C_lihdr(0,0,15),40,99,104,100,105,114,32,46,32,100,105,114,57,51,41,0,0,0,0,0,0,0};
static C_char C_TLS li17[] C_aligned={C_lihdr(0,0,12),40,102,105,102,116,104,32,108,49,48,48,41,0,0,0,0};
static C_char C_TLS li18[] C_aligned={C_lihdr(0,0,12),40,115,105,120,116,104,32,108,49,48,49,41,0,0,0,0};
static C_char C_TLS li19[] C_aligned={C_lihdr(0,0,14),40,115,101,118,101,110,116,104,32,108,49,48,50,41,0,0,0,0,0,0};
static C_char C_TLS li20[] C_aligned={C_lihdr(0,0,13),40,101,105,103,104,116,104,32,108,49,48,51,41,0,0,0,0,0};
static C_char C_TLS li21[] C_aligned={C_lihdr(0,0,12),40,110,105,110,116,104,32,108,49,48,52,41,0,0,0,0};
static C_char C_TLS li22[] C_aligned={C_lihdr(0,0,12),40,116,101,110,116,104,32,108,49,48,53,41,0,0,0,0};
static C_char C_TLS li23[] C_aligned={C_lihdr(0,0,11),40,114,101,115,116,32,108,49,48,54,41,0,0,0};
static C_char C_TLS li24[] C_aligned={C_lihdr(0,0,11),40,108,97,115,116,32,108,49,48,55,41,0,0,0};
static C_char C_TLS li25[] C_aligned={C_lihdr(0,0,14),40,98,117,116,108,97,115,116,32,108,49,48,56,41,0,0,0,0,0,0};
static C_char C_TLS li26[] C_aligned={C_lihdr(0,0,17),40,108,105,115,116,42,32,46,32,97,114,103,115,49,49,48,41,0};
static C_char C_TLS li27[] C_aligned={C_lihdr(0,0,32),40,108,105,115,116,45,115,101,116,33,32,108,105,115,49,49,49,32,112,111,115,49,49,50,32,118,97,108,49,49,51,41};
static C_char C_TLS li28[] C_aligned={C_lihdr(0,0,14),40,109,107,32,97,49,49,56,32,98,49,49,57,41,0,0,0,0,0,0};
static C_char C_TLS li29[] C_aligned={C_lihdr(0,0,25),40,109,97,107,101,45,108,105,115,116,32,110,49,49,53,32,46,32,111,98,106,49,49,54,41,0};
static C_char C_TLS li30[] C_aligned={C_lihdr(0,0,35),40,108,105,115,116,45,112,114,111,112,32,108,105,115,49,50,49,32,112,114,111,112,49,50,50,32,46,32,100,101,102,49,50,51,41,0,0,0};
static C_char C_TLS li31[] C_aligned={C_lihdr(0,0,12),40,100,111,49,50,57,32,102,49,51,49,41,0,0,0,0};
static C_char C_TLS li32[] C_aligned={C_lihdr(0,0,24),40,98,105,116,119,105,115,101,45,116,101,115,116,32,97,49,50,55,32,98,49,50,56,41};
static C_char C_TLS li33[] C_aligned={C_lihdr(0,0,60),40,116,98,58,114,101,115,99,97,108,101,32,97,49,53,56,49,54,49,32,97,49,53,55,49,54,50,32,97,49,53,54,49,54,51,32,97,49,53,53,49,54,52,32,97,49,53,52,49,54,53,32,97,49,53,51,49,54,54,41,0,0,0,0};
static C_char C_TLS li34[] C_aligned={C_lihdr(0,0,61),40,116,98,58,100,105,115,99,114,101,116,101,32,97,49,55,51,49,55,54,32,97,49,55,50,49,55,55,32,97,49,55,49,49,55,56,32,97,49,55,48,49,55,57,32,97,49,54,57,49,56,48,32,97,49,54,56,49,56,49,41,0,0,0,0,0};
static C_char C_TLS li35[] C_aligned={C_lihdr(0,0,16),40,116,98,58,105,110,116,32,97,49,56,50,49,56,53,41};
static C_char C_TLS li36[] C_aligned={C_lihdr(0,0,29),40,116,98,58,100,101,99,105,109,97,108,115,32,97,49,56,55,49,57,48,32,97,49,56,54,49,57,49,41,0,0,0,0,0};
static C_char C_TLS li37[] C_aligned={C_lihdr(0,0,29),40,116,98,58,113,117,97,110,116,105,122,101,32,97,49,57,52,49,57,55,32,97,49,57,51,49,57,56,41,0,0,0,0,0};
static C_char C_TLS li38[] C_aligned={C_lihdr(0,0,44),40,116,98,58,114,104,121,116,104,109,45,62,115,101,99,111,110,100,115,32,97,50,48,50,50,48,53,32,97,50,48,49,50,48,54,32,97,50,48,48,50,48,55,41,0,0,0,0};
static C_char C_TLS li39[] C_aligned={C_lihdr(0,0,26),40,116,98,58,99,101,110,116,115,45,62,115,99,97,108,101,114,32,97,50,48,57,50,49,50,41,0,0};
static C_char C_TLS li40[] C_aligned={C_lihdr(0,0,26),40,116,98,58,115,99,97,108,101,114,45,62,99,101,110,116,115,32,97,50,49,52,50,49,55,41,0,0};
static C_char C_TLS li41[] C_aligned={C_lihdr(0,0,26),40,116,98,58,107,101,121,110,117,109,45,62,104,101,114,116,122,32,97,50,49,56,50,50,49,41,0,0};
static C_char C_TLS li42[] C_aligned={C_lihdr(0,0,21),40,116,98,58,114,97,110,45,115,101,116,33,32,97,50,51,50,50,51,53,41,0,0,0,0,0};
static C_char C_TLS li43[] C_aligned={C_lihdr(0,0,17),40,116,98,58,114,97,110,105,32,97,50,51,54,50,51,57,41,0};
static C_char C_TLS li44[] C_aligned={C_lihdr(0,0,17),40,116,98,58,114,97,110,102,32,97,50,52,48,50,52,51,41,0};
static C_char C_TLS li45[] C_aligned={C_lihdr(0,0,11),40,116,98,58,114,97,110,108,111,119,41,0,0,0};
static C_char C_TLS li46[] C_aligned={C_lihdr(0,0,12),40,116,98,58,114,97,110,104,105,103,104,41,0,0,0,0};
static C_char C_TLS li47[] C_aligned={C_lihdr(0,0,14),40,116,98,58,114,97,110,109,105,100,100,108,101,41,0,0,0,0,0,0};
static C_char C_TLS li48[] C_aligned={C_lihdr(0,0,29),40,116,98,58,114,97,110,103,97,117,115,115,32,97,50,54,56,50,55,49,32,97,50,54,55,50,55,50,41,0,0,0,0,0};
static C_char C_TLS li49[] C_aligned={C_lihdr(0,0,19),40,116,98,58,114,97,110,101,120,112,32,97,50,55,52,50,55,55,41,0,0,0};
static C_char C_TLS li50[] C_aligned={C_lihdr(0,0,21),40,116,98,58,114,97,110,103,97,109,109,97,32,97,50,56,54,50,56,57,41,0,0,0,0,0};
static C_char C_TLS li51[] C_aligned={C_lihdr(0,0,14),40,116,98,58,114,97,110,99,97,117,99,104,121,41,0,0,0,0,0,0};
static C_char C_TLS li52[] C_aligned={C_lihdr(0,0,23),40,116,98,58,114,97,110,112,111,105,115,115,111,110,32,97,50,57,52,50,57,55,41,0,0,0,0,0,0,0};
static C_char C_TLS li53[] C_aligned={C_lihdr(0,0,12),40,116,98,58,114,97,110,112,105,110,107,41,0,0,0,0};
static C_char C_TLS li54[] C_aligned={C_lihdr(0,0,13),40,116,98,58,114,97,110,98,114,111,119,110,41,0,0,0,0,0};
static C_char C_TLS li55[] C_aligned={C_lihdr(0,0,12),40,97,54,53,56,52,32,122,51,49,48,41,0,0,0,0};
static C_char C_TLS li56[] C_aligned={C_lihdr(0,0,45),40,114,101,115,99,97,108,101,32,120,51,48,52,32,120,49,51,48,53,32,120,50,51,48,54,32,121,49,51,48,55,32,121,50,51,48,56,32,46,32,98,51,48,57,41,0,0,0,0,0};
static C_char C_TLS li57[] C_aligned={C_lihdr(0,0,43),40,100,105,115,99,114,101,116,101,32,120,51,49,49,32,120,49,51,49,50,32,120,50,51,49,51,32,105,49,51,49,52,32,46,32,97,114,103,115,51,49,53,41,0,0,0};
static C_char C_TLS li58[] C_aligned={C_lihdr(0,0,10),40,105,110,116,32,102,51,49,54,41,0,0};
static C_char C_TLS li59[] C_aligned={C_lihdr(0,0,16),40,112,108,117,115,32,46,32,97,114,103,115,51,49,55,41};
static C_char C_TLS li60[] C_aligned={C_lihdr(0,0,24),40,109,105,110,117,115,32,97,114,103,51,49,56,32,46,32,97,114,103,115,51,49,57,41};
static C_char C_TLS li61[] C_aligned={C_lihdr(0,0,12),40,97,54,55,56,51,32,110,51,50,50,41,0,0,0,0};
static C_char C_TLS li62[] C_aligned={C_lihdr(0,0,26),40,113,117,97,110,116,105,122,101,32,110,117,109,51,50,48,32,115,116,101,112,115,51,50,49,41,0,0};
static C_char C_TLS li63[] C_aligned={C_lihdr(0,0,29),40,100,101,99,105,109,97,108,115,32,110,117,109,51,50,51,32,46,32,100,105,103,105,116,115,51,50,52,41,0,0,0,0,0};
static C_char C_TLS li64[] C_aligned={C_lihdr(0,0,12),40,97,54,56,51,50,32,120,51,54,53,41,0,0,0,0};
static C_char C_TLS li65[] C_aligned={C_lihdr(0,0,36),40,114,104,121,116,104,109,45,62,115,101,99,111,110,100,115,32,98,101,97,116,115,51,50,53,32,46,32,97,114,103,115,51,50,54,41,0,0,0,0};
static C_char C_TLS li66[] C_aligned={C_lihdr(0,0,24),40,99,101,110,116,115,45,62,115,99,97,108,101,114,32,99,101,110,116,115,51,54,57,41};
static C_char C_TLS li67[] C_aligned={C_lihdr(0,0,22),40,115,99,97,108,101,114,45,62,99,101,110,116,115,32,110,117,109,51,55,48,41,0,0,0,0,0,0};
static C_char C_TLS li68[] C_aligned={C_lihdr(0,0,15),40,100,111,51,55,57,32,116,97,105,108,51,56,49,41,0,0,0,0,0,0,0};
static C_char C_TLS li69[] C_aligned={C_lihdr(0,0,34),40,105,110,116,101,114,112,108,32,120,51,55,49,32,99,111,111,114,100,115,51,55,50,32,46,32,98,97,115,101,51,55,51,41,0,0};
static C_char C_TLS li70[] C_aligned={C_lihdr(0,0,23),40,105,110,116,101,114,112,32,120,51,56,57,32,46,32,97,114,103,115,51,57,48,41,0,0,0,0,0,0,0};
static C_char C_TLS li71[] C_aligned={C_lihdr(0,0,27),40,100,111,51,57,53,32,105,51,57,55,32,107,51,57,56,32,108,51,57,57,32,116,52,48,48,41,0,0,0};
static C_char C_TLS li72[] C_aligned={C_lihdr(0,0,34),40,115,99,97,108,101,32,108,101,110,51,57,49,32,107,101,121,110,117,109,51,57,50,32,46,32,97,114,103,115,51,57,51,41,0,0};
static C_char C_TLS li73[] C_aligned={C_lihdr(0,0,12),40,114,97,110,32,110,117,109,52,48,54,41,0,0,0,0};
static C_char C_TLS li74[] C_aligned={C_lihdr(0,0,19),40,98,101,116,119,101,101,110,32,97,52,48,55,32,98,52,48,56,41,0,0,0};
static C_char C_TLS li75[] C_aligned={C_lihdr(0,0,16),40,112,105,99,107,32,46,32,97,114,103,115,52,48,57,41};
static C_char C_TLS li76[] C_aligned={C_lihdr(0,0,21),40,111,100,100,115,32,110,52,49,48,32,46,32,97,114,103,115,52,49,49,41,0,0,0,0,0};
static C_char C_TLS li77[] C_aligned={C_lihdr(0,0,19),40,114,97,110,98,101,116,97,32,46,32,97,114,103,115,52,53,51,41,0,0,0};
static C_char C_TLS li78[] C_aligned={C_lihdr(0,0,18),40,114,97,110,101,120,112,32,46,32,97,114,103,115,52,57,54,41,0,0};
static C_char C_TLS li79[] C_aligned={C_lihdr(0,0,20),40,114,97,110,103,97,117,115,115,32,46,32,97,114,103,115,52,57,55,41,0,0,0,0};
static C_char C_TLS li80[] C_aligned={C_lihdr(0,0,22),40,114,97,110,112,111,105,115,115,111,110,32,46,32,97,114,103,115,52,57,56,41,0,0,0,0,0,0};
static C_char C_TLS li81[] C_aligned={C_lihdr(0,0,20),40,114,97,110,103,97,109,109,97,32,46,32,97,114,103,115,52,57,57,41,0,0,0,0};
static C_char C_TLS li82[] C_aligned={C_lihdr(0,0,7),40,97,55,57,52,57,41,0,0,0,0,0,0,0};
static C_char C_TLS li83[] C_aligned={C_lihdr(0,0,7),40,97,55,57,54,52,41,0,0,0,0,0,0,0};
static C_char C_TLS li84[] C_aligned={C_lihdr(0,0,41),40,115,116,114,105,110,103,45,62,110,111,116,101,45,101,110,116,114,121,32,115,116,114,53,52,49,32,111,99,116,53,52,50,32,101,114,114,53,52,51,41,0};
static C_char C_TLS li85[] C_aligned={C_lihdr(0,0,7),40,97,55,57,55,57,41,0,0,0,0,0,0,0};
static C_char C_TLS li86[] C_aligned={C_lihdr(0,0,7),40,97,56,48,48,49,41,0,0,0,0,0,0,0};
static C_char C_TLS li87[] C_aligned={C_lihdr(0,0,34),40,110,111,116,101,45,97,117,120,32,102,114,101,113,53,52,57,32,100,111,99,116,53,53,48,32,101,114,114,63,53,53,49,41,0,0};
static C_char C_TLS li88[] C_aligned={C_lihdr(0,0,39),40,100,111,53,53,52,32,116,97,105,108,53,53,54,32,100,101,102,111,53,53,55,32,116,104,105,115,53,53,56,32,114,101,115,108,53,53,57,41,0,0,0,0,0,0,0};
static C_char C_TLS li89[] C_aligned={C_lihdr(0,0,14),40,110,111,116,101,32,102,114,101,113,53,53,50,41,0,0,0,0,0,0};
static C_char C_TLS li90[] C_aligned={C_lihdr(0,0,39),40,100,111,53,54,56,32,116,97,105,108,53,55,48,32,100,101,102,111,53,55,49,32,116,104,105,115,53,55,50,32,114,101,115,108,53,55,51,41,0,0,0,0,0,0,0};
static C_char C_TLS li91[] C_aligned={C_lihdr(0,0,13),40,107,101,121,32,102,114,101,113,53,54,54,41,0,0,0,0,0};
static C_char C_TLS li92[] C_aligned={C_lihdr(0,0,39),40,100,111,53,56,52,32,116,97,105,108,53,56,54,32,100,101,102,111,53,56,55,32,116,104,105,115,53,56,56,32,114,101,115,108,53,56,57,41,0,0,0,0,0,0,0};
static C_char C_TLS li93[] C_aligned={C_lihdr(0,0,12),40,104,122,32,102,114,101,113,53,56,50,41,0,0,0,0};
static C_char C_TLS li94[] C_aligned={C_lihdr(0,0,9),40,112,99,32,120,53,57,56,41,0};
static C_char C_TLS li95[] C_aligned={C_lihdr(0,0,23),40,100,111,54,48,52,32,116,97,105,108,54,48,54,32,108,97,115,116,54,48,55,41,0,0,0,0,0,0,0};
static C_char C_TLS li96[] C_aligned={C_lihdr(0,0,17),40,105,110,118,107,101,121,115,32,107,101,121,115,54,48,49,41,0};
static C_char C_TLS li97[] C_aligned={C_lihdr(0,0,12),40,97,56,53,54,50,32,122,54,49,49,41,0,0,0,0};
static C_char C_TLS li98[] C_aligned={C_lihdr(0,0,13),40,105,110,118,101,114,116,32,120,53,57,57,41,0,0,0,0,0};
static C_char C_TLS li99[] C_aligned={C_lihdr(0,0,23),40,100,111,54,49,57,32,116,97,105,108,54,50,49,32,108,97,115,116,54,50,50,41,0,0,0,0,0,0,0};
static C_char C_TLS li100[] C_aligned={C_lihdr(0,0,28),40,116,114,97,110,115,112,107,101,121,115,32,107,101,121,115,54,49,54,32,111,114,105,103,54,49,55,41,0,0,0,0};
static C_char C_TLS li101[] C_aligned={C_lihdr(0,0,12),40,97,56,55,49,53,32,122,54,50,54,41,0,0,0,0};
static C_char C_TLS li102[] C_aligned={C_lihdr(0,0,21),40,116,114,97,110,115,112,111,115,101,32,120,54,49,50,32,121,54,49,51,41,0,0,0,0,0};
static C_char C_TLS li103[] C_aligned={C_lihdr(0,0,69),40,109,97,107,101,45,112,101,114,105,111,100,32,99,111,117,110,116,54,57,54,32,108,101,110,103,116,104,54,57,55,32,115,116,114,101,97,109,54,57,56,32,100,101,102,97,117,108,116,54,57,57,32,111,109,105,116,55,48,48,32,114,101,112,115,55,48,49,41,0,0,0,0,0};
static C_char C_TLS li104[] C_aligned={C_lihdr(0,0,31),40,112,101,114,105,111,100,45,99,111,117,110,116,45,115,101,116,33,32,120,55,48,51,32,118,97,108,55,48,52,41,0,0,0,0,0,0,0};
static C_char C_TLS li105[] C_aligned={C_lihdr(0,0,19),40,112,101,114,105,111,100,45,99,111,117,110,116,32,120,55,48,54,41,0,0,0};
static C_char C_TLS li106[] C_aligned={C_lihdr(0,0,20),40,112,101,114,105,111,100,45,108,101,110,103,116,104,32,120,55,49,50,41,0,0,0,0};
static C_char C_TLS li107[] C_aligned={C_lihdr(0,0,20),40,112,101,114,105,111,100,45,115,116,114,101,97,109,32,120,55,49,56,41,0,0,0,0};
static C_char C_TLS li108[] C_aligned={C_lihdr(0,0,30),40,112,101,114,105,111,100,45,111,109,105,116,45,115,101,116,33,32,120,55,50,55,32,118,97,108,55,50,56,41,0,0,0,0,0,0};
static C_char C_TLS li109[] C_aligned={C_lihdr(0,0,18),40,112,101,114,105,111,100,45,111,109,105,116,32,120,55,51,48,41,0,0};
static C_char C_TLS li110[] C_aligned={C_lihdr(0,0,18),40,112,101,114,105,111,100,45,114,101,112,115,32,120,55,51,54,41,0,0};
static C_char C_TLS li111[] C_aligned={C_lihdr(0,0,15),40,112,97,116,116,101,114,110,63,32,120,55,54,50,41,0,0,0,0,0,0,0};
static C_char C_TLS li112[] C_aligned={C_lihdr(0,0,20),40,112,97,116,116,101,114,110,45,102,108,97,103,115,32,120,55,54,54,41,0,0,0,0};
static C_char C_TLS li113[] C_aligned={C_lihdr(0,0,31),40,112,97,116,116,101,114,110,45,100,97,116,97,45,115,101,116,33,32,120,55,54,57,32,118,97,108,55,55,48,41,0,0,0,0,0,0,0};
static C_char C_TLS li114[] C_aligned={C_lihdr(0,0,19),40,112,97,116,116,101,114,110,45,100,97,116,97,32,120,55,55,50,41,0,0,0};
static C_char C_TLS li115[] C_aligned={C_lihdr(0,0,21),40,112,97,116,116,101,114,110,45,108,101,110,103,116,104,32,120,55,55,56,41,0,0,0,0,0};
static C_char C_TLS li116[] C_aligned={C_lihdr(0,0,32),40,112,97,116,116,101,114,110,45,100,97,116,117,109,45,115,101,116,33,32,120,55,56,49,32,118,97,108,55,56,50,41};
static C_char C_TLS li117[] C_aligned={C_lihdr(0,0,20),40,112,97,116,116,101,114,110,45,100,97,116,117,109,32,120,55,56,52,41,0,0,0,0};
static C_char C_TLS li118[] C_aligned={C_lihdr(0,0,21),40,112,97,116,116,101,114,110,45,112,101,114,105,111,100,32,120,55,57,48,41,0,0,0,0,0};
static C_char C_TLS li119[] C_aligned={C_lihdr(0,0,32),40,112,97,116,116,101,114,110,45,118,97,108,117,101,45,115,101,116,33,32,120,55,57,51,32,118,97,108,55,57,52,41};
static C_char C_TLS li120[] C_aligned={C_lihdr(0,0,13),40,102,95,57,48,50,53,32,120,55,57,54,41,0,0,0,0,0};
static C_char C_TLS li121[] C_aligned={C_lihdr(0,0,32),40,112,97,116,116,101,114,110,45,115,116,97,116,101,45,115,101,116,33,32,120,55,57,57,32,118,97,108,56,48,48,41};
static C_char C_TLS li122[] C_aligned={C_lihdr(0,0,20),40,112,97,116,116,101,114,110,45,115,116,97,116,101,32,120,56,48,50,41,0,0,0,0};
static C_char C_TLS li123[] C_aligned={C_lihdr(0,0,32),40,112,97,116,116,101,114,110,45,99,97,99,104,101,45,115,101,116,33,32,120,56,52,49,32,118,97,108,56,52,50,41};
static C_char C_TLS li124[] C_aligned={C_lihdr(0,0,20),40,112,97,116,116,101,114,110,45,99,97,99,104,101,32,120,56,52,52,41,0,0,0,0};
static C_char C_TLS li125[] C_aligned={C_lihdr(0,0,16),40,37,97,108,108,111,99,45,112,97,116,116,101,114,110,41};
static C_char C_TLS li126[] C_aligned={C_lihdr(0,0,12),40,97,57,52,48,51,32,120,56,55,52,41,0,0,0,0};
static C_char C_TLS li127[] C_aligned={C_lihdr(0,0,89),40,105,110,105,116,105,97,108,105,122,101,45,112,97,116,116,101,114,110,32,111,98,106,56,54,52,32,100,97,116,97,56,54,53,32,102,111,114,56,54,54,32,114,101,112,56,54,55,32,102,108,97,103,115,56,54,56,32,108,101,110,56,54,57,32,100,112,101,114,56,55,48,32,103,101,116,114,56,55,49,32,109,97,112,114,56,55,50,41,0};
static C_char C_TLS li128[] C_aligned={C_lihdr(0,0,11),40,101,111,112,63,32,120,56,57,57,41,0,0,0};
static C_char C_TLS li129[] C_aligned={C_lihdr(0,0,11),40,101,111,100,63,32,120,57,48,48,41,0,0,0};
static C_char C_TLS li130[] C_aligned={C_lihdr(0,0,17),40,100,111,57,48,53,32,105,57,48,55,32,101,57,48,56,41,0};
static C_char C_TLS li131[] C_aligned={C_lihdr(0,0,22),40,100,111,57,49,50,32,110,57,49,52,32,101,57,49,53,32,102,57,49,54,41,0,0,0,0,0,0};
static C_char C_TLS li132[] C_aligned={C_lihdr(0,0,23),40,110,101,120,116,32,111,98,106,57,48,49,32,46,32,97,114,103,115,57,48,50,41,0,0,0,0,0,0,0};
static C_char C_TLS li133[] C_aligned={C_lihdr(0,0,7),40,100,111,57,52,48,41,0,0,0,0,0,0,0};
static C_char C_TLS li134[] C_aligned={C_lihdr(0,0,23),40,100,111,57,51,54,32,100,121,110,63,57,51,56,32,115,116,111,112,57,51,57,41,0,0,0,0,0,0,0};
static C_char C_TLS li135[] C_aligned={C_lihdr(0,0,15),40,110,101,120,116,45,49,32,111,98,106,57,50,50,41,0,0,0,0,0,0,0};
static C_char C_TLS li136[] C_aligned={C_lihdr(0,0,24),40,110,101,120,116,45,105,110,45,112,97,116,116,101,114,110,32,111,98,106,57,54,48,41};
static C_char C_TLS li137[] C_aligned={C_lihdr(0,0,31),40,109,97,112,45,112,97,116,116,101,114,110,45,100,97,116,97,32,102,110,57,54,49,32,111,98,106,57,54,50,41,0,0,0,0,0,0,0};
static C_char C_TLS li138[] C_aligned={C_lihdr(0,0,12),40,97,57,57,55,57,32,120,57,55,49,41,0,0,0,0};
static C_char C_TLS li139[] C_aligned={C_lihdr(0,0,21),40,114,101,115,101,116,45,112,101,114,105,111,100,32,111,98,106,57,54,54,41,0,0,0,0,0};
static C_char C_TLS li140[] C_aligned={C_lihdr(0,0,23),40,97,49,48,48,55,51,32,102,110,49,48,50,51,32,111,98,106,49,48,50,52,41,0,0,0,0,0,0,0};
static C_char C_TLS li141[] C_aligned={C_lihdr(0,0,30),40,109,97,107,101,45,99,121,99,108,101,32,100,97,116,97,57,56,48,32,46,32,97,114,103,115,57,56,49,41,0,0,0,0,0,0};
static C_char C_TLS li142[] C_aligned={C_lihdr(0,0,23),40,110,101,120,116,45,105,110,45,99,121,99,108,101,32,111,98,106,49,48,51,48,41,0,0,0,0,0,0,0};
static C_char C_TLS li143[] C_aligned={C_lihdr(0,0,17),40,112,97,108,105,110,45,108,101,110,32,120,49,48,53,48,41,0};
static C_char C_TLS li144[] C_aligned={C_lihdr(0,0,30),40,112,97,108,105,110,45,105,110,99,45,115,101,116,33,32,120,49,48,53,51,32,118,97,108,49,48,53,52,41,0,0,0,0,0,0};
static C_char C_TLS li145[] C_aligned={C_lihdr(0,0,23),40,97,49,48,53,48,51,32,102,110,49,49,53,49,32,111,98,106,49,49,53,50,41,0,0,0,0,0,0,0};
static C_char C_TLS li146[] C_aligned={C_lihdr(0,0,37),40,109,97,107,101,45,112,97,108,105,110,100,114,111,109,101,32,100,97,116,97,49,48,55,57,32,46,32,97,114,103,115,49,48,56,48,41,0,0,0,0,0};
static C_char C_TLS li147[] C_aligned={C_lihdr(0,0,28),40,110,101,120,116,45,105,110,45,112,97,108,105,110,100,114,111,109,101,32,111,98,106,49,49,54,48,41,0,0,0,0};
static C_char C_TLS li148[] C_aligned={C_lihdr(0,0,23),40,97,49,49,49,55,48,32,102,110,49,50,50,50,32,111,98,106,49,50,50,51,41,0,0,0,0,0,0,0};
static C_char C_TLS li149[] C_aligned={C_lihdr(0,0,31),40,109,97,107,101,45,108,105,110,101,32,100,97,116,97,49,49,55,57,32,46,32,97,114,103,115,49,49,56,48,41,0,0,0,0,0,0,0};
static C_char C_TLS li150[] C_aligned={C_lihdr(0,0,22),40,110,101,120,116,45,105,110,45,108,105,110,101,32,111,98,106,49,50,50,57,41,0,0,0,0,0,0};
static C_char C_TLS li151[] C_aligned={C_lihdr(0,0,23),40,97,49,49,52,53,55,32,102,110,49,50,55,55,32,111,98,106,49,50,55,56,41,0,0,0,0,0,0,0};
static C_char C_TLS li152[] C_aligned={C_lihdr(0,0,31),40,109,97,107,101,45,104,101,97,112,32,100,97,116,97,49,50,51,52,32,46,32,97,114,103,115,49,50,51,53,41,0,0,0,0,0,0,0};
static C_char C_TLS li153[] C_aligned={C_lihdr(0,0,26),40,100,111,49,50,56,56,32,105,49,50,57,48,32,106,49,50,57,49,32,118,49,50,57,50,41,0,0};
static C_char C_TLS li154[] C_aligned={C_lihdr(0,0,22),40,110,101,120,116,45,105,110,45,104,101,97,112,32,111,98,106,49,50,56,52,41,0,0,0,0,0,0};
static C_char C_TLS li155[] C_aligned={C_lihdr(0,0,23),40,97,49,49,56,48,50,32,102,110,49,51,55,50,32,111,98,106,49,51,55,51,41,0,0,0,0,0,0,0};
static C_char C_TLS li156[] C_aligned={C_lihdr(0,0,35),40,109,97,107,101,45,114,111,116,97,116,105,111,110,32,100,97,116,97,49,51,48,48,32,46,32,97,114,103,115,49,51,48,49,41,0,0,0};
static C_char C_TLS li157[] C_aligned={C_lihdr(0,0,14),40,100,111,49,51,56,56,32,105,49,51,57,48,41,0,0,0,0,0,0};
static C_char C_TLS li158[] C_aligned={C_lihdr(0,0,61),40,114,111,116,97,116,101,45,105,116,101,109,115,32,105,116,101,109,115,49,51,56,51,32,115,116,97,114,116,49,51,56,52,32,115,116,101,112,49,51,56,53,32,119,105,100,116,104,49,51,56,54,32,101,110,100,49,51,56,55,41,0,0,0,0,0};
static C_char C_TLS li159[] C_aligned={C_lihdr(0,0,26),40,110,101,120,116,45,105,110,45,114,111,116,97,116,105,111,110,32,111,98,106,49,51,56,49,41,0,0};
static C_char C_TLS li160[] C_aligned={C_lihdr(0,0,25),40,114,97,110,100,111,109,45,105,116,101,109,45,100,97,116,117,109,32,120,49,52,49,53,41,0};
static C_char C_TLS li161[] C_aligned={C_lihdr(0,0,38),40,114,97,110,100,111,109,45,105,116,101,109,45,105,110,100,101,120,45,115,101,116,33,32,120,49,52,49,56,32,118,97,108,49,52,49,57,41,0,0,0,0,0,0};
static C_char C_TLS li162[] C_aligned={C_lihdr(0,0,25),40,114,97,110,100,111,109,45,105,116,101,109,45,105,110,100,101,120,32,120,49,52,50,49,41,0};
static C_char C_TLS li163[] C_aligned={C_lihdr(0,0,26),40,114,97,110,100,111,109,45,105,116,101,109,45,119,101,105,103,104,116,32,120,49,52,50,55,41,0,0};
static C_char C_TLS li164[] C_aligned={C_lihdr(0,0,23),40,114,97,110,100,111,109,45,105,116,101,109,45,109,105,110,32,120,49,52,51,51,41,0,0,0,0,0,0,0};
static C_char C_TLS li165[] C_aligned={C_lihdr(0,0,23),40,114,97,110,100,111,109,45,105,116,101,109,45,109,97,120,32,120,49,52,51,57,41,0,0,0,0,0,0,0};
static C_char C_TLS li166[] C_aligned={C_lihdr(0,0,38),40,114,97,110,100,111,109,45,105,116,101,109,45,99,111,117,110,116,45,115,101,116,33,32,120,49,52,52,50,32,118,97,108,49,52,52,51,41,0,0,0,0,0,0};
static C_char C_TLS li167[] C_aligned={C_lihdr(0,0,25),40,114,97,110,100,111,109,45,105,116,101,109,45,99,111,117,110,116,32,120,49,52,52,53,41,0};
static C_char C_TLS li168[] C_aligned={C_lihdr(0,0,14),40,97,49,50,54,56,55,32,105,49,53,50,56,41,0,0,0,0,0,0};
static C_char C_TLS li169[] C_aligned={C_lihdr(0,0,23),40,97,49,50,54,56,49,32,102,110,49,53,50,54,32,111,98,106,49,53,50,55,41,0,0,0,0,0,0,0};
static C_char C_TLS li170[] C_aligned={C_lihdr(0,0,17),40,97,49,50,57,49,56,32,105,116,101,109,49,52,56,49,41,0};
static C_char C_TLS li171[] C_aligned={C_lihdr(0,0,25),40,37,109,97,107,101,45,114,97,110,100,111,109,45,105,116,101,109,32,119,49,53,51,57,41,0};
static C_char C_TLS li172[] C_aligned={C_lihdr(0,0,36),40,109,97,107,101,45,119,101,105,103,104,116,105,110,103,32,100,97,116,97,49,52,55,49,32,46,32,97,114,103,115,49,52,55,50,41,0,0,0,0};
static C_char C_TLS li173[] C_aligned={C_lihdr(0,0,37),40,100,111,49,54,50,54,32,116,97,105,108,49,54,50,56,32,105,110,100,101,120,49,54,50,57,32,116,111,116,97,108,49,54,51,48,41,0,0,0,0,0};
static C_char C_TLS li174[] C_aligned={C_lihdr(0,0,17),40,100,111,49,54,50,48,32,116,97,105,108,49,54,50,50,41,0};
static C_char C_TLS li175[] C_aligned={C_lihdr(0,0,36),40,114,101,99,97,108,99,45,119,101,105,103,104,116,105,110,103,115,32,111,98,106,49,54,49,54,32,102,105,120,63,49,54,49,55,41,0,0,0,0};
static C_char C_TLS li176[] C_aligned={C_lihdr(0,0,27),40,100,111,49,54,52,56,32,116,97,105,108,49,54,53,48,32,105,110,100,101,120,49,54,53,49,41,0,0,0};
static C_char C_TLS li177[] C_aligned={C_lihdr(0,0,18),40,112,105,99,107,32,99,49,54,52,54,32,114,49,54,52,55,41,0,0};
static C_char C_TLS li178[] C_aligned={C_lihdr(0,0,17),40,100,111,49,54,53,55,32,116,97,105,108,49,54,53,57,41,0};
static C_char C_TLS li179[] C_aligned={C_lihdr(0,0,17),40,100,111,49,54,53,51,32,105,116,101,109,49,54,53,53,41,0};
static C_char C_TLS li180[] C_aligned={C_lihdr(0,0,27),40,110,101,120,116,45,105,110,45,119,101,105,103,104,116,105,110,103,32,111,98,106,49,54,51,54,41,0,0,0};
static C_char C_TLS li181[] C_aligned={C_lihdr(0,0,23),40,97,49,52,48,48,49,32,102,110,49,55,56,53,32,111,98,106,49,55,56,54,41,0,0,0,0,0,0,0};
static C_char C_TLS li182[] C_aligned={C_lihdr(0,0,14),40,97,49,51,55,53,53,32,115,49,54,56,54,41,0,0,0,0,0,0};
static C_char C_TLS li183[] C_aligned={C_lihdr(0,0,8),40,100,111,49,54,55,57,41};
static C_char C_TLS li184[] C_aligned={C_lihdr(0,0,41),40,100,111,49,55,48,49,32,116,97,105,108,49,55,48,51,32,111,114,100,101,114,49,55,48,52,32,108,105,115,49,55,48,53,32,112,49,55,48,54,41,0};
static C_char C_TLS li185[] C_aligned={C_lihdr(0,0,33),40,109,97,107,101,45,109,97,114,107,111,118,32,100,97,116,97,49,55,49,51,32,46,32,97,114,103,115,49,55,49,52,41,0};
static C_char C_TLS li186[] C_aligned={C_lihdr(0,0,17),40,100,111,49,56,49,48,32,116,97,105,108,49,56,49,50,41,0};
static C_char C_TLS li187[] C_aligned={C_lihdr(0,0,33),40,100,111,49,56,48,48,32,116,97,105,108,49,56,48,50,32,111,117,116,49,56,48,51,32,115,117,109,49,56,48,52,41,0};
static C_char C_TLS li188[] C_aligned={C_lihdr(0,0,37),40,115,101,108,101,99,116,45,111,117,116,112,117,116,32,114,97,110,103,101,49,55,57,56,32,111,117,116,112,117,116,115,49,55,57,57,41,0,0,0,0,0};
static C_char C_TLS li189[] C_aligned={C_lihdr(0,0,17),40,100,111,49,56,52,48,32,108,97,115,116,49,56,52,50,41,0};
static C_char C_TLS li190[] C_aligned={C_lihdr(0,0,26),40,100,111,49,56,49,54,32,105,49,56,49,56,32,106,49,56,49,57,32,102,49,56,50,48,41,0,0};
static C_char C_TLS li191[] C_aligned={C_lihdr(0,0,35),40,100,111,49,56,51,49,32,116,97,105,108,49,56,51,51,32,112,97,115,116,49,56,51,52,32,105,116,101,109,49,56,51,53,41,0,0,0};
static C_char C_TLS li192[] C_aligned={C_lihdr(0,0,24),40,110,101,120,116,45,105,110,45,109,97,114,107,111,118,32,111,98,106,49,55,57,53,41};
static C_char C_TLS li193[] C_aligned={C_lihdr(0,0,24),40,103,114,97,112,104,45,110,111,100,101,45,100,97,116,117,109,32,120,49,56,54,48,41};
static C_char C_TLS li194[] C_aligned={C_lihdr(0,0,14),40,97,49,52,56,55,51,32,110,49,57,50,54,41,0,0,0,0,0,0};
static C_char C_TLS li195[] C_aligned={C_lihdr(0,0,23),40,97,49,52,56,54,55,32,102,110,49,57,50,52,32,111,98,106,49,57,50,53,41,0,0,0,0,0,0,0};
static C_char C_TLS li196[] C_aligned={C_lihdr(0,0,28),40,97,49,53,49,49,57,32,105,116,101,109,49,57,51,54,32,46,32,97,114,103,115,49,57,51,55,41,0,0,0,0};
static C_char C_TLS li197[] C_aligned={C_lihdr(0,0,29),40,112,97,114,115,101,45,103,114,97,112,104,45,105,116,101,109,32,101,120,116,101,114,110,49,57,51,53,41,0,0,0,0,0};
static C_char C_TLS li198[] C_aligned={C_lihdr(0,0,32),40,109,97,107,101,45,103,114,97,112,104,32,100,97,116,97,49,56,56,49,32,46,32,97,114,103,115,49,56,56,50,41};
static C_char C_TLS li199[] C_aligned={C_lihdr(0,0,17),40,100,111,49,57,57,48,32,116,97,105,108,49,57,57,50,41,0};
static C_char C_TLS li200[] C_aligned={C_lihdr(0,0,23),40,110,101,120,116,45,105,110,45,103,114,97,112,104,32,111,98,106,49,57,56,51,41,0,0,0,0,0,0,0};
static C_char C_TLS li201[] C_aligned={C_lihdr(0,0,45),40,109,97,107,101,45,116,111,107,101,110,32,116,121,112,101,50,48,51,55,32,115,116,114,105,110,103,50,48,51,56,32,112,111,115,105,116,105,111,110,50,48,51,57,41,0,0,0,0,0};
static C_char C_TLS li202[] C_aligned={C_lihdr(0,0,18),40,116,111,107,101,110,45,116,121,112,101,32,120,50,48,52,52,41,0,0};
static C_char C_TLS li203[] C_aligned={C_lihdr(0,0,20),40,116,111,107,101,110,45,115,116,114,105,110,103,32,120,50,48,53,48,41,0,0,0,0};
static C_char C_TLS li204[] C_aligned={C_lihdr(0,0,22),40,116,111,107,101,110,45,112,111,115,105,116,105,111,110,32,120,50,48,53,54,41,0,0,0,0,0,0};
static C_char C_TLS li205[] C_aligned={C_lihdr(0,0,19),40,108,105,115,116,45,62,116,111,107,101,110,32,108,50,48,54,53,41,0,0,0};
static C_char C_TLS li206[] C_aligned={C_lihdr(0,0,22),40,102,105,114,115,116,45,116,111,107,101,110,32,116,111,107,115,50,48,54,55,41,0,0,0,0,0,0};
static C_char C_TLS li207[] C_aligned={C_lihdr(0,0,23),40,110,117,108,108,45,116,111,107,101,110,115,63,32,116,111,107,115,50,48,54,57,41,0,0,0,0,0,0,0};
static C_char C_TLS li208[] C_aligned={C_lihdr(0,0,63),40,109,97,107,101,45,114,117,108,101,32,110,97,109,101,50,48,55,48,32,116,121,112,101,50,48,55,49,32,112,97,116,116,101,114,110,50,48,55,50,32,112,97,114,115,101,114,50,48,55,51,32,101,109,105,116,101,114,50,48,55,52,41,0,0,0,0,0,0,0};
static C_char C_TLS li209[] C_aligned={C_lihdr(0,0,17),40,114,117,108,101,45,110,97,109,101,32,120,50,48,55,57,41,0};
static C_char C_TLS li210[] C_aligned={C_lihdr(0,0,26),40,103,101,116,45,114,117,108,101,32,116,121,112,50,49,50,51,32,100,101,102,50,49,50,52,41,0,0};
static C_char C_TLS li211[] C_aligned={C_lihdr(0,0,21),40,112,97,116,116,101,114,110,45,118,97,108,117,101,32,120,50,49,50,54,41,0,0,0,0,0};
static C_char C_TLS li212[] C_aligned={C_lihdr(0,0,23),40,112,97,116,116,101,114,110,45,99,108,97,117,115,101,63,32,120,50,49,50,55,41,0,0,0,0,0,0,0};
static C_char C_TLS li213[] C_aligned={C_lihdr(0,0,20),40,112,97,116,116,101,114,110,45,115,117,98,115,32,120,50,49,50,57,41,0,0,0,0};
static C_char C_TLS li214[] C_aligned={C_lihdr(0,0,21),40,112,97,116,116,101,114,110,45,110,115,117,98,115,32,120,50,49,51,48,41,0,0,0,0,0};
static C_char C_TLS li215[] C_aligned={C_lihdr(0,0,25),40,112,97,116,116,101,114,110,45,115,117,98,32,120,50,49,51,49,32,105,50,49,51,50,41,0};
static C_char C_TLS li216[] C_aligned={C_lihdr(0,0,29),40,112,97,116,116,101,114,110,45,122,101,114,111,45,111,114,45,109,111,114,101,63,32,120,50,49,51,54,41,0,0,0,0,0};
static C_char C_TLS li217[] C_aligned={C_lihdr(0,0,42),40,109,97,107,101,45,112,97,114,115,101,45,101,114,114,111,114,32,115,116,114,105,110,103,50,49,51,56,32,112,111,115,105,116,105,111,110,50,49,51,57,41,0,0};
static C_char C_TLS li218[] C_aligned={C_lihdr(0,0,26),40,112,97,114,115,101,45,101,114,114,111,114,45,115,116,114,105,110,103,32,120,50,49,52,52,41,0,0};
static C_char C_TLS li219[] C_aligned={C_lihdr(0,0,28),40,112,97,114,115,101,45,101,114,114,111,114,45,112,111,115,105,116,105,111,110,32,120,50,49,53,48,41,0,0,0,0};
static C_char C_TLS li220[] C_aligned={C_lihdr(0,0,50),40,109,97,107,101,45,112,97,114,115,101,45,117,110,105,116,32,116,121,112,101,50,49,53,56,32,112,97,114,115,101,100,50,49,53,57,32,112,111,115,105,116,105,111,110,50,49,54,48,41,0,0};
static C_char C_TLS li221[] C_aligned={C_lihdr(0,0,19),40,112,97,114,115,101,45,117,110,105,116,63,32,120,50,49,54,49,41,0,0,0};
static C_char C_TLS li222[] C_aligned={C_lihdr(0,0,23),40,112,97,114,115,101,45,117,110,105,116,45,116,121,112,101,32,120,50,49,54,53,41,0,0,0,0,0,0,0};
static C_char C_TLS li223[] C_aligned={C_lihdr(0,0,25),40,112,97,114,115,101,45,117,110,105,116,45,112,97,114,115,101,100,32,120,50,49,55,49,41,0};
static C_char C_TLS li224[] C_aligned={C_lihdr(0,0,27),40,112,97,114,115,101,45,117,110,105,116,45,112,111,115,105,116,105,111,110,32,120,50,49,55,55,41,0,0,0};
static C_char C_TLS li225[] C_aligned={C_lihdr(0,0,19),40,116,111,107,101,110,45,117,110,105,116,63,32,120,50,49,56,55,41,0,0,0};
static C_char C_TLS li226[] C_aligned={C_lihdr(0,0,33),40,116,111,107,101,110,45,117,110,105,116,45,116,121,112,101,61,63,32,120,50,49,56,56,32,116,121,112,50,49,56,57,41,0};
static C_char C_TLS li227[] C_aligned={C_lihdr(0,0,33),40,103,101,116,45,101,109,105,116,45,105,110,102,111,32,110,97,109,101,50,49,57,49,32,105,110,102,111,50,49,57,50,41,0};
static C_char C_TLS li228[] C_aligned={C_lihdr(0,0,42),40,97,100,100,45,101,109,105,116,45,105,110,102,111,32,110,97,109,101,50,49,57,52,32,100,97,116,97,50,49,57,53,32,105,110,102,111,50,49,57,54,41,0,0};
static C_char C_TLS li229[] C_aligned={C_lihdr(0,0,43),40,115,101,116,45,101,109,105,116,45,105,110,102,111,33,32,110,97,109,101,50,49,57,55,32,100,97,116,97,50,49,57,56,32,105,110,102,111,50,49,57,57,41,0,0,0};
static C_char C_TLS li230[] C_aligned={C_lihdr(0,0,30),40,101,109,105,116,32,120,50,50,48,50,32,105,110,102,111,50,50,48,51,32,101,114,114,102,50,50,48,52,41,0,0,0,0,0,0};
static C_char C_TLS li231[] C_aligned={C_lihdr(0,0,37),40,101,109,105,116,45,108,105,115,116,32,108,105,115,50,50,48,53,32,105,110,102,111,50,50,48,54,32,101,114,114,102,50,50,48,55,41,0,0,0,0,0};
static C_char C_TLS li232[] C_aligned={C_lihdr(0,0,27),40,102,95,49,54,50,55,51,32,97,114,103,115,50,50,50,48,32,101,114,114,102,50,50,50,49,41,0,0,0};
static C_char C_TLS li233[] C_aligned={C_lihdr(0,0,29),40,115,105,109,112,108,101,45,117,110,105,116,45,112,97,114,115,101,114,32,116,121,112,101,50,50,49,57,41,0,0,0,0,0};
static C_char C_TLS li234[] C_aligned={C_lihdr(0,0,17),40,100,111,50,50,50,57,32,116,97,105,108,50,50,51,49,41,0};
static C_char C_TLS li235[] C_aligned={C_lihdr(0,0,36),40,102,95,49,54,50,56,49,32,117,110,105,116,50,50,50,51,32,105,110,102,111,50,50,50,52,32,101,114,114,102,50,50,50,53,41,0,0,0,0};
static C_char C_TLS li236[] C_aligned={C_lihdr(0,0,30),40,115,105,109,112,108,101,45,117,110,105,116,45,101,109,105,116,116,101,114,32,102,117,110,99,50,50,50,50,41,0,0,0,0,0,0};
static C_char C_TLS li237[] C_aligned={C_lihdr(0,0,8),40,97,49,54,52,55,57,41};
static C_char C_TLS li238[] C_aligned={C_lihdr(0,0,26),40,97,49,54,52,56,57,32,97,50,50,54,49,32,98,50,50,54,50,32,99,50,50,54,51,41,0,0};
static C_char C_TLS li239[] C_aligned={C_lihdr(0,0,8),40,97,49,54,53,56,53,41};
static C_char C_TLS li240[] C_aligned={C_lihdr(0,0,26),40,97,49,54,53,57,57,32,97,50,50,55,55,32,98,50,50,55,56,32,99,50,50,55,57,41,0,0};
static C_char C_TLS li241[] C_aligned={C_lihdr(0,0,14),40,100,111,50,50,55,50,32,105,50,50,55,52,41,0,0,0,0,0,0};
static C_char C_TLS li242[] C_aligned={C_lihdr(0,0,8),40,97,49,54,54,53,50,41};
static C_char C_TLS li243[] C_aligned={C_lihdr(0,0,26),40,97,49,54,54,54,54,32,97,50,50,57,57,32,98,50,51,48,48,32,99,50,51,48,49,41,0,0};
static C_char C_TLS li244[] C_aligned={C_lihdr(0,0,14),40,100,111,50,50,57,52,32,105,50,50,57,54,41,0,0,0,0,0,0};
static C_char C_TLS li245[] C_aligned={C_lihdr(0,0,8),40,97,49,54,55,52,49,41};
static C_char C_TLS li246[] C_aligned={C_lihdr(0,0,26),40,97,49,54,55,52,55,32,97,50,51,49,56,32,98,50,51,49,57,32,99,50,51,50,48,41,0,0};
static C_char C_TLS li247[] C_aligned={C_lihdr(0,0,8),40,100,111,50,51,49,52,41};
static C_char C_TLS li248[] C_aligned={C_lihdr(0,0,8),40,97,49,54,55,56,48,41};
static C_char C_TLS li249[] C_aligned={C_lihdr(0,0,26),40,97,49,54,55,56,54,32,97,50,51,51,54,32,98,50,51,51,55,32,99,50,51,51,56,41,0,0};
static C_char C_TLS li250[] C_aligned={C_lihdr(0,0,70),40,112,97,114,115,101,114,32,112,97,116,50,50,52,56,32,116,111,107,101,110,115,50,50,52,57,32,102,111,114,99,101,45,97,110,100,50,50,53,48,32,108,101,118,101,108,50,50,53,49,32,116,114,97,99,101,50,50,53,50,32,101,114,114,102,50,50,53,51,41,0,0,0,0,0,0};
static C_char C_TLS li251[] C_aligned={C_lihdr(0,0,21),40,83,97,108,84,111,107,101,110,84,121,112,101,63,32,105,50,53,49,51,41,0,0,0,0,0};
static C_char C_TLS li252[] C_aligned={C_lihdr(0,0,18),40,83,97,108,79,112,84,121,112,101,63,32,105,50,53,49,55,41,0,0};
static C_char C_TLS li253[] C_aligned={C_lihdr(0,0,20),40,83,97,108,82,117,108,101,84,121,112,101,63,32,105,50,53,50,54,41,0,0,0,0};
static C_char C_TLS li254[] C_aligned={C_lihdr(0,0,29),40,83,97,108,84,121,112,101,61,63,32,116,121,112,49,50,53,50,55,32,116,121,112,50,50,53,50,56,41,0,0,0,0,0};
static C_char C_TLS li255[] C_aligned={C_lihdr(0,0,17),40,100,111,50,53,55,55,32,116,111,107,115,50,53,55,57,41,0};
static C_char C_TLS li256[] C_aligned={C_lihdr(0,0,36),40,114,101,109,111,118,101,45,116,111,107,101,110,45,116,121,112,101,32,116,111,107,115,50,53,55,51,32,116,121,112,50,53,55,52,41,0,0,0,0};
static C_char C_TLS li257[] C_aligned={C_lihdr(0,0,14),40,105,115,45,111,112,63,32,120,50,54,48,52,41,0,0,0,0,0,0};
static C_char C_TLS li258[] C_aligned={C_lihdr(0,0,29),40,100,111,50,54,49,51,32,119,50,50,54,49,53,32,111,107,50,54,49,54,32,108,105,50,54,49,55,41,0,0,0,0,0};
static C_char C_TLS li259[] C_aligned={C_lihdr(0,0,8),40,100,111,50,54,49,49,41};
static C_char C_TLS li260[] C_aligned={C_lihdr(0,0,18),40,105,110,102,45,62,112,114,101,32,105,110,102,50,54,48,54,41,0,0};
static C_char C_TLS li261[] C_aligned={C_lihdr(0,0,38),40,115,97,108,45,112,97,114,115,101,45,115,116,101,112,112,105,110,103,32,97,114,103,115,50,55,55,50,32,101,114,114,102,50,55,55,51,41,0,0,0,0,0,0};
static C_char C_TLS li262[] C_aligned={C_lihdr(0,0,14),40,100,111,50,57,56,49,32,102,50,57,56,51,41,0,0,0,0,0,0};
static C_char C_TLS li263[] C_aligned={C_lihdr(0,0,14),40,100,111,50,57,55,52,32,102,50,57,55,54,41,0,0,0,0,0,0};
static C_char C_TLS li264[] C_aligned={C_lihdr(0,0,8),40,97,49,54,51,53,48,41};
static C_char C_TLS li265[] C_aligned={C_lihdr(0,0,44),40,97,49,54,51,53,55,32,115,117,99,99,101,115,115,50,50,52,51,32,114,101,115,117,108,116,115,50,50,52,52,32,114,101,109,97,105,110,115,50,50,52,53,41,0,0,0,0};
static C_char C_TLS li266[] C_aligned={C_lihdr(0,0,17),40,97,49,54,51,52,52,32,101,114,114,102,50,50,52,49,41,0};
static C_char C_TLS li267[] C_aligned={C_lihdr(0,0,47),40,115,97,108,32,115,116,114,105,110,103,50,57,53,57,32,114,117,108,101,50,57,54,48,32,116,111,107,101,110,115,50,57,54,49,32,116,114,97,99,101,63,50,57,54,50,41,0,0,0,0,0,0,0};
static C_char C_TLS li268[] C_aligned={C_lihdr(0,0,17),40,100,111,51,48,48,49,32,116,97,105,108,51,48,48,51,41,0};
static C_char C_TLS li269[] C_aligned={C_lihdr(0,0,27),40,112,114,105,110,116,101,114,32,116,104,105,110,103,50,57,57,57,32,108,101,118,51,48,48,48,41,0,0,0};
static C_char C_TLS li270[] C_aligned={C_lihdr(0,0,17),40,100,111,51,48,48,57,32,116,97,105,108,51,48,49,49,41,0};
static C_char C_TLS li271[] C_aligned={C_lihdr(0,0,22),40,115,97,108,58,112,114,105,110,116,32,46,32,97,114,103,115,50,57,57,55,41,0,0,0,0,0,0};
static C_char C_TLS li272[] C_aligned={C_lihdr(0,0,20),40,115,97,108,58,99,104,100,105,114,32,112,97,116,104,51,48,49,54,41,0,0,0,0};
static C_char C_TLS li273[] C_aligned={C_lihdr(0,0,19),40,115,97,108,58,108,111,97,100,32,102,105,108,101,51,48,49,56,41,0,0,0};
static C_char C_TLS li274[] C_aligned={C_lihdr(0,0,21),40,115,97,108,58,111,112,101,110,32,46,32,97,114,103,115,51,48,50,50,41,0,0,0,0,0};
static C_char C_TLS li275[] C_aligned={C_lihdr(0,0,23),40,115,97,108,58,111,117,116,112,117,116,32,46,32,97,114,103,115,51,48,50,51,41,0,0,0,0,0,0,0};
static C_char C_TLS li276[] C_aligned={C_lihdr(0,0,32),40,108,111,111,112,45,111,112,101,114,97,116,111,114,45,115,101,116,33,32,99,51,49,53,51,32,120,51,49,53,52,41};
static C_char C_TLS li277[] C_aligned={C_lihdr(0,0,21),40,108,111,111,112,45,98,105,110,100,105,110,103,115,32,99,51,49,53,53,41,0,0,0,0,0};
static C_char C_TLS li278[] C_aligned={C_lihdr(0,0,23),40,108,111,111,112,45,99,111,108,108,101,99,116,111,114,115,32,99,51,49,53,56,41,0,0,0,0,0,0,0};
static C_char C_TLS li279[] C_aligned={C_lihdr(0,0,22),40,108,111,111,112,45,105,110,105,116,105,97,108,108,121,32,99,51,49,54,49,41,0,0,0,0,0,0};
static C_char C_TLS li280[] C_aligned={C_lihdr(0,0,22),40,108,111,111,112,45,101,110,100,45,116,101,115,116,115,32,99,51,49,54,52,41,0,0,0,0,0,0};
static C_char C_TLS li281[] C_aligned={C_lihdr(0,0,20),40,108,111,111,112,45,108,111,111,112,105,110,103,32,99,51,49,54,55,41,0,0,0,0};
static C_char C_TLS li282[] C_aligned={C_lihdr(0,0,31),40,108,111,111,112,45,108,111,111,112,105,110,103,45,115,101,116,33,32,99,51,49,54,56,32,120,51,49,54,57,41,0,0,0,0,0,0,0};
static C_char C_TLS li283[] C_aligned={C_lihdr(0,0,21),40,108,111,111,112,45,115,116,101,112,112,105,110,103,32,99,51,49,55,48,41,0,0,0,0,0};
static C_char C_TLS li284[] C_aligned={C_lihdr(0,0,20),40,108,111,111,112,45,102,105,110,97,108,108,121,32,99,51,49,55,51,41,0,0,0,0};
static C_char C_TLS li285[] C_aligned={C_lihdr(0,0,22),40,108,111,111,112,45,114,101,116,117,114,110,105,110,103,32,99,51,49,55,54,41,0,0,0,0,0,0};
static C_char C_TLS li286[] C_aligned={C_lihdr(0,0,14),40,100,111,51,49,56,49,32,97,51,49,56,51,41,0,0,0,0,0,0};
static C_char C_TLS li287[] C_aligned={C_lihdr(0,0,27),40,109,97,107,101,45,108,111,111,112,45,99,108,97,117,115,101,32,97,114,103,115,51,49,55,57,41,0,0,0};
static C_char C_TLS li288[] C_aligned={C_lihdr(0,0,14),40,100,111,51,49,57,51,32,108,51,49,57,53,41,0,0,0,0,0,0};
static C_char C_TLS li289[] C_aligned={C_lihdr(0,0,40),40,103,97,116,104,101,114,45,99,108,97,117,115,101,32,99,108,97,117,115,101,115,51,49,57,49,32,97,99,99,101,115,115,111,114,51,49,57,50,41};
static C_char C_TLS li290[] C_aligned={C_lihdr(0,0,39),40,103,97,116,104,101,114,45,99,108,97,117,115,101,115,32,99,97,108,108,101,114,51,49,56,56,32,99,108,97,117,115,101,115,51,49,56,57,41,0,0,0,0,0,0,0};
static C_char C_TLS li291[] C_aligned={C_lihdr(0,0,24),40,108,111,111,112,45,111,112,63,32,120,51,49,57,57,32,111,112,115,51,50,48,48,41};
static C_char C_TLS li292[] C_aligned={C_lihdr(0,0,22),40,108,111,111,112,45,118,97,114,105,97,98,108,101,63,32,120,51,50,48,49,41,0,0,0,0,0,0};
static C_char C_TLS li293[] C_aligned={C_lihdr(0,0,30),40,109,97,107,101,45,98,105,110,100,105,110,103,32,118,97,114,51,50,48,50,32,118,97,108,51,50,48,51,41,0,0,0,0,0,0};
static C_char C_TLS li294[] C_aligned={C_lihdr(0,0,17),40,100,111,51,50,50,53,32,116,97,105,108,51,50,50,55,41,0};
static C_char C_TLS li295[] C_aligned={C_lihdr(0,0,17),40,100,111,51,50,50,48,32,116,97,105,108,51,50,50,50,41,0};
static C_char C_TLS li296[] C_aligned={C_lihdr(0,0,20),40,100,111,51,50,49,48,32,104,51,50,49,50,32,108,51,50,49,51,41,0,0,0,0};
static C_char C_TLS li297[] C_aligned={C_lihdr(0,0,39),40,108,111,111,112,45,101,114,114,111,114,32,111,112,115,51,50,48,52,32,102,111,114,109,115,51,50,48,53,32,97,114,103,115,51,50,48,54,41,0,0,0,0,0,0,0};
static C_char C_TLS li298[] C_aligned={C_lihdr(0,0,41),40,112,97,114,115,101,45,102,111,114,32,102,111,114,109,115,51,50,51,57,32,99,108,97,117,115,101,115,51,50,52,48,32,111,112,115,51,50,52,49,41,0};
static C_char C_TLS li299[] C_aligned={C_lihdr(0,0,17),40,100,111,51,50,53,57,32,110,101,120,116,51,50,54,49,41,0};
static C_char C_TLS li300[] C_aligned={C_lihdr(0,0,51),40,112,97,114,115,101,45,110,117,109,101,114,105,99,97,108,45,102,111,114,32,102,111,114,109,115,51,50,52,53,32,99,108,97,117,115,101,115,51,50,52,54,32,111,112,115,51,50,52,55,41,0,0,0};
static C_char C_TLS li301[] C_aligned={C_lihdr(0,0,8),40,97,49,57,57,51,56,41};
static C_char C_TLS li302[] C_aligned={C_lihdr(0,0,30),40,97,49,57,57,53,54,32,99,108,97,117,115,101,51,51,52,48,32,105,103,110,111,114,101,51,51,52,49,41,0,0,0,0,0,0};
static C_char C_TLS li303[] C_aligned={C_lihdr(0,0,44),40,112,97,114,115,101,45,114,101,112,101,97,116,32,102,111,114,109,115,51,51,51,55,32,99,108,97,117,115,101,115,51,51,51,56,32,111,112,115,51,51,51,57,41,0,0,0,0};
static C_char C_TLS li304[] C_aligned={C_lihdr(0,0,17),40,100,111,51,51,53,56,32,110,101,120,116,51,51,54,48,41,0};
static C_char C_TLS li305[] C_aligned={C_lihdr(0,0,56),40,112,97,114,115,101,45,115,101,113,117,101,110,99,101,45,105,116,101,114,97,116,105,111,110,32,102,111,114,109,115,51,51,52,51,32,99,108,97,117,115,101,115,51,51,52,52,32,111,112,115,51,51,52,53,41};
static C_char C_TLS li306[] C_aligned={C_lihdr(0,0,17),40,100,111,51,52,50,53,32,110,101,120,116,51,52,50,55,41,0};
static C_char C_TLS li307[] C_aligned={C_lihdr(0,0,55),40,112,97,114,115,101,45,103,101,110,101,114,97,108,45,105,116,101,114,97,116,105,111,110,32,102,111,114,109,115,51,52,49,53,32,99,108,97,117,115,101,115,51,52,49,54,32,111,112,115,51,52,49,55,41,0,0,0,0,0,0,0};
static C_char C_TLS li308[] C_aligned={C_lihdr(0,0,26),40,100,111,51,52,54,51,32,110,101,101,100,51,52,54,53,32,110,101,120,116,51,52,54,54,41,0,0};
static C_char C_TLS li309[] C_aligned={C_lihdr(0,0,42),40,112,97,114,115,101,45,119,105,116,104,32,102,111,114,109,115,51,52,53,51,32,99,108,97,117,115,101,115,51,52,53,52,32,111,112,115,51,52,53,53,41,0,0};
static C_char C_TLS li310[] C_aligned={C_lihdr(0,0,8),40,100,111,51,53,48,55,41};
static C_char C_TLS li311[] C_aligned={C_lihdr(0,0,40),40,112,97,114,115,101,45,100,111,32,102,111,114,109,115,51,52,57,56,32,99,108,97,117,115,101,115,51,52,57,57,32,111,112,115,51,53,48,48,41};
static C_char C_TLS li312[] C_aligned={C_lihdr(0,0,45),40,112,97,114,115,101,45,102,105,110,97,108,108,121,32,102,111,114,109,115,51,53,49,55,32,99,108,97,117,115,101,115,51,53,49,56,32,111,112,115,51,53,49,57,41,0,0,0,0,0};
static C_char C_TLS li313[] C_aligned={C_lihdr(0,0,47),40,112,97,114,115,101,45,105,110,105,116,105,97,108,108,121,32,102,111,114,109,115,51,53,51,49,32,99,108,97,117,115,101,115,51,53,51,50,32,111,112,115,51,53,51,51,41,0,0,0,0,0,0,0};
static C_char C_TLS li314[] C_aligned={C_lihdr(0,0,50),40,109,97,107,101,45,99,111,108,108,101,99,116,111,114,32,118,97,114,51,53,57,56,32,116,121,112,101,51,53,57,57,32,97,99,99,51,54,48,48,32,104,101,97,100,51,54,48,49,41,0,0};
static C_char C_TLS li315[] C_aligned={C_lihdr(0,0,24),40,99,111,108,108,101,99,116,111,114,45,116,121,112,101,32,99,111,108,51,54,48,50,41};
static C_char C_TLS li316[] C_aligned={C_lihdr(0,0,23),40,99,111,108,108,101,99,116,111,114,45,97,99,99,32,99,111,108,51,54,48,51,41,0,0,0,0,0,0,0};
static C_char C_TLS li317[] C_aligned={C_lihdr(0,0,14),40,100,111,51,53,53,48,32,97,51,53,53,50,41,0,0,0,0,0,0};
static C_char C_TLS li318[] C_aligned={C_lihdr(0,0,14),40,100,111,51,53,53,56,32,99,51,53,54,48,41,0,0,0,0,0,0};
static C_char C_TLS li319[] C_aligned={C_lihdr(0,0,50),40,112,97,114,115,101,45,97,99,99,117,109,117,108,97,116,105,111,110,32,102,111,114,109,115,51,53,55,55,32,99,108,97,117,115,101,115,51,53,55,56,32,111,112,115,51,53,55,57,41,0,0};
static C_char C_TLS li320[] C_aligned={C_lihdr(0,0,22),40,108,111,111,112,45,114,101,116,117,114,110,32,101,120,112,114,51,54,55,56,41,0,0,0,0,0,0};
static C_char C_TLS li321[] C_aligned={C_lihdr(0,0,49),40,112,97,114,115,101,45,119,104,105,108,101,45,117,110,116,105,108,32,102,111,114,109,115,51,54,55,57,32,99,108,97,117,115,101,115,51,54,56,48,32,111,112,115,51,54,56,49,41,0};
static C_char C_TLS li322[] C_aligned={C_lihdr(0,0,45),40,112,97,114,115,101,45,116,104,101,114,101,105,115,32,102,111,114,109,115,51,55,48,48,32,99,108,97,117,115,101,115,51,55,48,49,32,111,112,115,51,55,48,50,41,0,0,0,0,0};
static C_char C_TLS li323[] C_aligned={C_lihdr(0,0,44),40,112,97,114,115,101,45,114,101,116,117,114,110,32,102,111,114,109,115,51,55,49,54,32,99,108,97,117,115,101,115,51,55,49,55,32,111,112,115,51,55,49,56,41,0,0,0,0};
static C_char C_TLS li324[] C_aligned={C_lihdr(0,0,8),40,97,50,49,56,50,57,41};
static C_char C_TLS li325[] C_aligned={C_lihdr(0,0,20),40,97,50,49,56,52,50,32,97,51,55,52,51,32,98,51,55,52,52,41,0,0,0,0};
static C_char C_TLS li326[] C_aligned={C_lihdr(0,0,38),40,100,111,51,55,51,54,32,111,112,51,55,51,56,32,99,108,97,117,115,101,51,55,51,57,32,114,101,109,97,105,110,115,51,55,52,48,41,0,0,0,0,0,0};
static C_char C_TLS li327[] C_aligned={C_lihdr(0,0,58),40,112,97,114,115,101,45,116,104,101,110,45,101,108,115,101,45,100,101,112,101,110,100,101,110,116,115,32,102,111,114,109,115,51,55,51,48,32,99,108,97,117,115,101,115,51,55,51,49,32,111,112,115,51,55,51,50,41,0,0};
static C_char C_TLS li328[] C_aligned={C_lihdr(0,0,8),40,97,50,49,57,57,51,41};
static C_char C_TLS li329[] C_aligned={C_lihdr(0,0,20),40,97,50,50,48,48,55,32,97,51,55,55,50,32,98,51,55,55,51,41,0,0,0,0};
static C_char C_TLS li330[] C_aligned={C_lihdr(0,0,8),40,97,50,50,48,55,49,41};
static C_char C_TLS li331[] C_aligned={C_lihdr(0,0,20),40,97,50,50,48,55,55,32,97,51,55,54,57,32,98,51,55,55,48,41,0,0,0,0};
static C_char C_TLS li332[] C_aligned={C_lihdr(0,0,49),40,112,97,114,115,101,45,99,111,110,100,105,116,105,111,110,97,108,32,102,111,114,109,115,51,55,53,54,32,99,108,97,117,115,101,115,51,55,53,55,32,111,112,115,51,55,53,56,41,0};
static C_char C_TLS li333[] C_aligned={C_lihdr(0,0,26),40,111,112,45,116,121,112,101,63,32,111,112,51,55,57,57,32,116,121,112,101,51,56,48,48,41,0,0};
static C_char C_TLS li334[] C_aligned={C_lihdr(0,0,8),40,97,50,50,50,49,57,41};
static C_char C_TLS li335[] C_aligned={C_lihdr(0,0,20),40,97,50,50,50,50,56,32,97,51,56,49,50,32,98,51,56,49,51,41,0,0,0,0};
static C_char C_TLS li336[] C_aligned={C_lihdr(0,0,47),40,100,111,51,56,48,51,32,111,112,51,56,48,53,32,99,108,97,117,115,101,51,56,48,54,32,114,101,109,97,105,110,115,51,56,48,55,32,98,111,100,121,51,56,48,56,41,0,0,0,0,0,0,0};
static C_char C_TLS li337[] C_aligned={C_lihdr(0,0,46),40,112,97,114,115,101,45,105,116,101,114,97,116,105,111,110,32,99,97,108,108,101,114,51,56,50,53,32,102,111,114,109,115,51,56,50,54,32,111,112,115,51,56,50,55,41,0,0,0,0,0,0};
static C_char C_TLS li338[] C_aligned={C_lihdr(0,0,59),40,102,95,50,50,54,51,52,32,97,52,48,48,52,52,48,48,55,32,97,52,48,48,51,52,48,48,56,32,97,52,48,48,50,52,48,48,57,32,97,52,48,48,49,52,48,49,48,32,97,52,48,48,48,52,48,49,49,41,0,0,0};
static C_char C_TLS li339[] C_aligned={C_lihdr(0,0,23),40,109,109,58,109,97,107,101,45,111,110,32,46,32,97,114,103,115,51,56,57,53,41,0,0,0,0,0,0,0};
static C_char C_TLS li340[] C_aligned={C_lihdr(0,0,29),40,102,95,50,51,51,52,56,32,97,52,48,50,48,52,48,50,52,32,97,52,48,49,57,52,48,50,53,41,0,0,0,0,0};
static C_char C_TLS li341[] C_aligned={C_lihdr(0,0,14),40,109,109,58,111,110,63,32,109,52,48,49,56,41,0,0,0,0,0,0};
static C_char C_TLS li342[] C_aligned={C_lihdr(0,0,59),40,102,95,50,51,51,55,57,32,97,52,48,57,57,52,49,48,50,32,97,52,48,57,56,52,49,48,51,32,97,52,48,57,55,52,49,48,52,32,97,52,48,57,54,52,49,48,53,32,97,52,48,57,53,52,49,48,54,41,0,0,0};
static C_char C_TLS li343[] C_aligned={C_lihdr(0,0,24),40,109,109,58,109,97,107,101,45,111,102,102,32,46,32,97,114,103,115,52,48,50,55,41};
static C_char C_TLS li344[] C_aligned={C_lihdr(0,0,29),40,102,95,50,51,56,49,56,32,97,52,49,49,52,52,49,49,56,32,97,52,49,49,51,52,49,49,57,41,0,0,0,0,0};
static C_char C_TLS li345[] C_aligned={C_lihdr(0,0,15),40,109,109,58,111,102,102,63,32,109,52,49,49,50,41,0,0,0,0,0,0,0};
static C_char C_TLS li346[] C_aligned={C_lihdr(0,0,59),40,102,95,50,51,56,53,50,32,97,52,50,51,48,52,50,51,51,32,97,52,50,50,57,52,50,51,52,32,97,52,50,50,56,52,50,51,53,32,97,52,50,50,55,52,50,51,54,32,97,52,50,50,54,52,50,51,55,41,0,0,0};
static C_char C_TLS li347[] C_aligned={C_lihdr(0,0,26),40,109,109,58,109,97,107,101,45,116,111,117,99,104,32,46,32,97,114,103,115,52,49,50,49,41,0,0};
static C_char C_TLS li348[] C_aligned={C_lihdr(0,0,29),40,102,95,50,52,53,54,54,32,97,52,50,52,54,52,50,53,48,32,97,52,50,52,53,52,50,53,49,41,0,0,0,0,0};
static C_char C_TLS li349[] C_aligned={C_lihdr(0,0,17),40,109,109,58,116,111,117,99,104,63,32,109,52,50,52,52,41,0};
static C_char C_TLS li350[] C_aligned={C_lihdr(0,0,59),40,102,95,50,52,54,48,48,32,97,52,51,54,50,52,51,54,53,32,97,52,51,54,49,52,51,54,54,32,97,52,51,54,48,52,51,54,55,32,97,52,51,53,57,52,51,54,56,32,97,52,51,53,56,52,51,54,57,41,0,0,0};
static C_char C_TLS li351[] C_aligned={C_lihdr(0,0,25),40,109,109,58,109,97,107,101,45,99,116,114,108,32,46,32,97,114,103,115,52,50,53,51,41,0};
static C_char C_TLS li352[] C_aligned={C_lihdr(0,0,29),40,102,95,50,53,51,49,52,32,97,52,51,55,56,52,51,56,50,32,97,52,51,55,55,52,51,56,51,41,0,0,0,0,0};
static C_char C_TLS li353[] C_aligned={C_lihdr(0,0,16),40,109,109,58,99,116,114,108,63,32,109,52,51,55,54,41};
static C_char C_TLS li354[] C_aligned={C_lihdr(0,0,59),40,102,95,50,53,51,52,53,32,97,52,52,53,55,52,52,54,48,32,97,52,52,53,54,52,52,54,49,32,97,52,52,53,53,52,52,54,50,32,97,52,52,53,52,52,52,54,51,32,97,52,52,53,51,52,52,54,52,41,0,0,0};
static C_char C_TLS li355[] C_aligned={C_lihdr(0,0,25),40,109,109,58,109,97,107,101,45,112,114,111,103,32,46,32,97,114,103,115,52,51,56,53,41,0};
static C_char C_TLS li356[] C_aligned={C_lihdr(0,0,29),40,102,95,50,53,55,56,52,32,97,52,52,55,50,52,52,55,54,32,97,52,52,55,49,52,52,55,55,41,0,0,0,0,0};
static C_char C_TLS li357[] C_aligned={C_lihdr(0,0,16),40,109,109,58,112,114,111,103,63,32,109,52,52,55,48,41};
static C_char C_TLS li358[] C_aligned={C_lihdr(0,0,59),40,102,95,50,53,56,49,53,32,97,52,53,53,49,52,53,53,52,32,97,52,53,53,48,52,53,53,53,32,97,52,53,52,57,52,53,53,54,32,97,52,53,52,56,52,53,53,55,32,97,52,53,52,55,52,53,53,56,41,0,0,0};
static C_char C_TLS li359[] C_aligned={C_lihdr(0,0,26),40,109,109,58,109,97,107,101,45,112,114,101,115,115,32,46,32,97,114,103,115,52,52,55,57,41,0,0};
static C_char C_TLS li360[] C_aligned={C_lihdr(0,0,29),40,102,95,50,54,50,53,52,32,97,52,53,54,54,52,53,55,48,32,97,52,53,54,53,52,53,55,49,41,0,0,0,0,0};
static C_char C_TLS li361[] C_aligned={C_lihdr(0,0,17),40,109,109,58,112,114,101,115,115,63,32,109,52,53,54,52,41,0};
static C_char C_TLS li362[] C_aligned={C_lihdr(0,0,59),40,102,95,50,54,50,56,53,32,97,52,54,52,53,52,54,52,56,32,97,52,54,52,52,52,54,52,57,32,97,52,54,52,51,52,54,53,48,32,97,52,54,52,50,52,54,53,49,32,97,52,54,52,49,52,54,53,50,41,0,0,0};
static C_char C_TLS li363[] C_aligned={C_lihdr(0,0,25),40,109,109,58,109,97,107,101,45,98,101,110,100,32,46,32,97,114,103,115,52,53,55,51,41,0};
static C_char C_TLS li364[] C_aligned={C_lihdr(0,0,19),40,102,95,50,54,55,52,54,32,97,52,54,54,56,52,54,55,50,41,0,0,0};
static C_char C_TLS li365[] C_aligned={C_lihdr(0,0,15),40,109,109,58,102,114,101,101,32,109,52,54,54,55,41,0,0,0,0,0,0,0};
static C_char C_TLS li366[] C_aligned={C_lihdr(0,0,19),40,102,95,50,54,55,54,49,32,97,52,54,55,54,52,54,56,48,41,0,0,0};
static C_char C_TLS li367[] C_aligned={C_lihdr(0,0,15),40,109,109,58,99,111,112,121,32,109,52,54,55,53,41,0,0,0,0,0,0,0};
static C_char C_TLS li368[] C_aligned={C_lihdr(0,0,19),40,102,95,50,54,55,55,54,32,97,52,54,56,52,52,54,56,56,41,0,0,0};
static C_char C_TLS li369[] C_aligned={C_lihdr(0,0,15),40,109,109,58,116,105,109,101,32,109,52,54,56,51,41,0,0,0,0,0,0,0};
static C_char C_TLS li370[] C_aligned={C_lihdr(0,0,29),40,102,95,50,54,55,57,49,32,97,52,54,57,52,52,54,57,56,32,97,52,54,57,51,52,54,57,57,41,0,0,0,0,0};
static C_char C_TLS li371[] C_aligned={C_lihdr(0,0,26),40,109,109,58,116,105,109,101,45,115,101,116,33,32,109,52,54,57,49,32,116,52,54,57,50,41,0,0};
static C_char C_TLS li372[] C_aligned={C_lihdr(0,0,19),40,102,95,50,54,56,49,48,32,97,52,55,48,51,52,55,48,55,41,0,0,0};
static C_char C_TLS li373[] C_aligned={C_lihdr(0,0,15),40,109,109,58,99,104,97,110,32,109,52,55,48,50,41,0,0,0,0,0,0,0};
static C_char C_TLS li374[] C_aligned={C_lihdr(0,0,29),40,102,95,50,54,56,50,53,32,97,52,55,49,50,52,55,49,54,32,97,52,55,49,49,52,55,49,55,41,0,0,0,0,0};
static C_char C_TLS li375[] C_aligned={C_lihdr(0,0,26),40,109,109,58,99,104,97,110,45,115,101,116,33,32,109,52,55,48,57,32,99,52,55,49,48,41,0,0};
static C_char C_TLS li376[] C_aligned={C_lihdr(0,0,29),40,102,95,50,54,56,52,52,32,97,52,55,50,50,52,55,50,54,32,97,52,55,50,49,52,55,50,55,41,0,0,0,0,0};
static C_char C_TLS li377[] C_aligned={C_lihdr(0,0,14),40,109,109,58,107,101,121,32,109,52,55,50,48,41,0,0,0,0,0,0};
static C_char C_TLS li378[] C_aligned={C_lihdr(0,0,39),40,102,95,50,54,56,54,51,32,97,52,55,51,51,52,55,51,55,32,97,52,55,51,50,52,55,51,56,32,97,52,55,51,49,52,55,51,57,41,0,0,0,0,0,0,0};
static C_char C_TLS li379[] C_aligned={C_lihdr(0,0,25),40,109,109,58,107,101,121,45,115,101,116,33,32,109,52,55,50,57,32,107,52,55,51,48,41,0};
static C_char C_TLS li380[] C_aligned={C_lihdr(0,0,29),40,102,95,50,54,56,56,54,32,97,52,55,52,52,52,55,52,56,32,97,52,55,52,51,52,55,52,57,41,0,0,0,0,0};
static C_char C_TLS li381[] C_aligned={C_lihdr(0,0,14),40,109,109,58,118,101,108,32,109,52,55,52,50,41,0,0,0,0,0,0};
static C_char C_TLS li382[] C_aligned={C_lihdr(0,0,39),40,102,95,50,54,57,48,53,32,97,52,55,53,53,52,55,53,57,32,97,52,55,53,52,52,55,54,48,32,97,52,55,53,51,52,55,54,49,41,0,0,0,0,0,0,0};
static C_char C_TLS li383[] C_aligned={C_lihdr(0,0,25),40,109,109,58,118,101,108,45,115,101,116,33,32,109,52,55,53,49,32,118,52,55,53,50,41,0};
static C_char C_TLS li384[] C_aligned={C_lihdr(0,0,29),40,102,95,50,54,57,51,55,32,97,52,55,54,56,52,55,55,50,32,97,52,55,54,55,52,55,55,51,41,0,0,0,0,0};
static C_char C_TLS li385[] C_aligned={C_lihdr(0,0,29),40,102,95,50,54,57,53,51,32,97,52,55,55,54,52,55,56,48,32,97,52,55,55,53,52,55,56,49,41,0,0,0,0,0};
static C_char C_TLS li386[] C_aligned={C_lihdr(0,0,14),40,109,109,58,118,97,108,32,109,52,55,54,52,41,0,0,0,0,0,0};
static C_char C_TLS li387[] C_aligned={C_lihdr(0,0,39),40,102,95,50,54,57,56,52,32,97,52,55,56,57,52,55,57,51,32,97,52,55,56,56,52,55,57,52,32,97,52,55,56,55,52,55,57,53,41,0,0,0,0,0,0,0};
static C_char C_TLS li388[] C_aligned={C_lihdr(0,0,39),40,102,95,50,55,48,48,52,32,97,52,55,57,57,52,56,48,51,32,97,52,55,57,56,52,56,48,52,32,97,52,55,57,55,52,56,48,53,41,0,0,0,0,0,0,0};
static C_char C_TLS li389[] C_aligned={C_lihdr(0,0,25),40,109,109,58,118,97,108,45,115,101,116,33,32,109,52,55,56,51,32,118,52,55,56,52,41,0};
static C_char C_TLS li390[] C_aligned={C_lihdr(0,0,29),40,102,95,50,55,48,51,48,32,97,52,56,49,48,52,56,49,52,32,97,52,56,48,57,52,56,49,53,41,0,0,0,0,0};
static C_char C_TLS li391[] C_aligned={C_lihdr(0,0,14),40,109,109,58,110,117,109,32,109,52,56,48,56,41,0,0,0,0,0,0};
static C_char C_TLS li392[] C_aligned={C_lihdr(0,0,39),40,102,95,50,55,48,52,57,32,97,52,56,50,49,52,56,50,53,32,97,52,56,50,48,52,56,50,54,32,97,52,56,49,57,52,56,50,55,41,0,0,0,0,0,0,0};
static C_char C_TLS li393[] C_aligned={C_lihdr(0,0,25),40,109,109,58,110,117,109,45,115,101,116,33,32,109,52,56,49,55,32,118,52,56,49,56,41,0};
static C_char C_TLS li394[] C_aligned={C_lihdr(0,0,59),40,102,95,50,55,48,55,50,32,97,52,56,51,57,52,56,52,50,32,97,52,56,51,56,52,56,52,51,32,97,52,56,51,55,52,56,52,52,32,97,52,56,51,54,52,56,52,53,32,97,52,56,51,53,52,56,52,54,41,0,0,0};
static C_char C_TLS li395[] C_aligned={C_lihdr(0,0,51),40,109,112,58,110,111,116,101,32,116,105,109,101,52,56,51,48,32,100,117,114,52,56,51,49,32,107,101,121,52,56,51,50,32,97,109,112,52,56,51,51,32,99,104,97,110,52,56,51,52,41,0,0,0};
static C_char C_TLS li396[] C_aligned={C_lihdr(0,0,59),40,102,95,50,55,49,48,48,32,97,52,56,53,54,52,56,53,57,32,97,52,56,53,53,52,56,54,48,32,97,52,56,53,52,52,56,54,49,32,97,52,56,53,51,52,56,54,50,32,97,52,56,53,50,52,56,54,51,41,0,0,0};
static C_char C_TLS li397[] C_aligned={C_lihdr(0,0,51),40,109,112,58,109,105,100,105,32,116,105,109,101,52,56,52,55,32,100,117,114,52,56,52,56,32,107,101,121,52,56,52,57,32,97,109,112,52,56,53,48,32,99,104,97,110,52,56,53,49,41,0,0,0};
static C_char C_TLS li398[] C_aligned={C_lihdr(0,0,59),40,102,95,50,55,49,50,56,32,97,52,56,55,49,52,56,55,52,32,97,52,56,55,48,52,56,55,53,32,97,52,56,54,57,52,56,55,54,32,97,52,56,54,56,52,56,55,55,32,97,52,56,54,55,52,56,55,56,41,0,0,0};
static C_char C_TLS li399[] C_aligned={C_lihdr(0,0,34),40,109,112,58,111,102,102,32,116,105,109,101,52,56,54,52,32,107,101,121,52,56,54,53,32,99,104,97,110,52,56,54,54,41,0,0};
static C_char C_TLS li400[] C_aligned={C_lihdr(0,0,59),40,102,95,50,55,49,53,54,32,97,52,56,56,55,52,56,57,48,32,97,52,56,56,54,52,56,57,49,32,97,52,56,56,53,52,56,57,50,32,97,52,56,56,52,52,56,57,51,32,97,52,56,56,51,52,56,57,52,41,0,0,0};
static C_char C_TLS li401[] C_aligned={C_lihdr(0,0,41),40,109,112,58,111,110,32,116,105,109,101,52,56,55,57,32,107,101,121,52,56,56,48,32,118,101,108,52,56,56,49,32,99,104,97,110,52,56,56,50,41,0};
static C_char C_TLS li402[] C_aligned={C_lihdr(0,0,59),40,102,95,50,55,49,56,52,32,97,52,57,48,51,52,57,48,54,32,97,52,57,48,50,52,57,48,55,32,97,52,57,48,49,52,57,48,56,32,97,52,57,48,48,52,57,48,57,32,97,52,56,57,57,52,57,49,48,41,0,0,0};
static C_char C_TLS li403[] C_aligned={C_lihdr(0,0,44),40,109,112,58,116,111,117,99,104,32,116,105,109,101,52,56,57,53,32,107,101,121,52,56,57,54,32,118,97,108,52,56,57,55,32,99,104,97,110,52,56,57,56,41,0,0,0,0};
static C_char C_TLS li404[] C_aligned={C_lihdr(0,0,59),40,102,95,50,55,50,49,50,32,97,52,57,49,57,52,57,50,50,32,97,52,57,49,56,52,57,50,51,32,97,52,57,49,55,52,57,50,52,32,97,52,57,49,54,52,57,50,53,32,97,52,57,49,53,52,57,50,54,41,0,0,0};
static C_char C_TLS li405[] C_aligned={C_lihdr(0,0,43),40,109,112,58,99,116,114,108,32,116,105,109,101,52,57,49,49,32,110,117,109,52,57,49,50,32,118,97,108,52,57,49,51,32,99,104,97,110,52,57,49,52,41,0,0,0};
static C_char C_TLS li406[] C_aligned={C_lihdr(0,0,59),40,102,95,50,55,50,52,48,32,97,52,57,51,52,52,57,51,55,32,97,52,57,51,51,52,57,51,56,32,97,52,57,51,50,52,57,51,57,32,97,52,57,51,49,52,57,52,48,32,97,52,57,51,48,52,57,52,49,41,0,0,0};
static C_char C_TLS li407[] C_aligned={C_lihdr(0,0,35),40,109,112,58,112,114,111,103,32,116,105,109,101,52,57,50,55,32,118,97,108,52,57,50,56,32,99,104,97,110,52,57,50,57,41,0,0,0};
static C_char C_TLS li408[] C_aligned={C_lihdr(0,0,59),40,102,95,50,55,50,54,56,32,97,52,57,52,57,52,57,53,50,32,97,52,57,52,56,52,57,53,51,32,97,52,57,52,55,52,57,53,52,32,97,52,57,52,54,52,57,53,53,32,97,52,57,52,53,52,57,53,54,41,0,0,0};
static C_char C_TLS li409[] C_aligned={C_lihdr(0,0,36),40,109,112,58,112,114,101,115,115,32,116,105,109,101,52,57,52,50,32,118,97,108,52,57,52,51,32,99,104,97,110,52,57,52,52,41,0,0,0,0};
static C_char C_TLS li410[] C_aligned={C_lihdr(0,0,59),40,102,95,50,55,50,57,54,32,97,52,57,54,52,52,57,54,55,32,97,52,57,54,51,52,57,54,56,32,97,52,57,54,50,52,57,54,57,32,97,52,57,54,49,52,57,55,48,32,97,52,57,54,48,52,57,55,49,41,0,0,0};
static C_char C_TLS li411[] C_aligned={C_lihdr(0,0,35),40,109,112,58,98,101,110,100,32,116,105,109,101,52,57,53,55,32,118,97,108,52,57,53,56,32,99,104,97,110,52,57,53,57,41,0,0,0};
static C_char C_TLS li412[] C_aligned={C_lihdr(0,0,19),40,102,95,50,55,51,50,52,32,97,52,57,55,51,52,57,55,55,41,0,0,0};
static C_char C_TLS li413[] C_aligned={C_lihdr(0,0,15),40,109,112,58,109,109,32,112,116,114,52,57,55,50,41,0,0,0,0,0,0,0};
static C_char C_TLS li414[] C_aligned={C_lihdr(0,0,17),40,97,50,55,51,53,55,32,37,101,114,114,52,57,56,54,41,0};
static C_char C_TLS li415[] C_aligned={C_lihdr(0,0,8),40,97,50,55,51,55,55,41};
static C_char C_TLS li416[] C_aligned={C_lihdr(0,0,18),40,97,50,55,51,53,49,32,37,99,111,110,116,52,57,56,53,41,0,0};
static C_char C_TLS li417[] C_aligned={C_lihdr(0,0,17),40,97,50,55,51,52,53,32,37,109,115,103,52,57,56,52,41,0};
static C_char C_TLS li418[] C_aligned={C_lihdr(0,0,19),40,102,95,50,55,51,56,51,32,97,52,57,56,48,52,57,56,51,41,0,0,0};
static C_char C_TLS li419[] C_aligned={C_lihdr(0,0,19),40,102,95,50,55,51,56,56,32,97,52,57,56,57,52,57,57,50,41,0,0,0};
static C_char C_TLS li420[] C_aligned={C_lihdr(0,0,21),40,109,112,58,105,110,104,111,111,107,32,37,104,111,111,107,52,57,55,57,41,0,0,0,0,0};
static C_char C_TLS li421[] C_aligned={C_lihdr(0,0,39),40,102,95,50,55,52,52,53,32,97,53,48,52,53,53,48,52,56,32,97,53,48,52,52,53,48,52,57,32,97,53,48,52,51,53,48,53,48,41,0,0,0,0,0,0,0};
static C_char C_TLS li422[] C_aligned={C_lihdr(0,0,17),40,99,115,58,105,32,46,32,97,114,103,115,53,48,52,50,41,0};
static C_char C_TLS li423[] C_aligned={C_lihdr(0,0,39),40,102,95,50,55,53,48,50,32,97,53,48,53,54,53,48,53,57,32,97,53,48,53,53,53,48,54,48,32,97,53,48,53,52,53,48,54,49,41,0,0,0,0,0,0,0};
static C_char C_TLS li424[] C_aligned={C_lihdr(0,0,17),40,99,115,58,102,32,46,32,97,114,103,115,53,48,53,51,41,0};
static C_char C_TLS li425[] C_aligned={C_lihdr(0,0,9),40,102,95,50,55,53,52,51,41,0};
static C_char C_TLS li426[] C_aligned={C_lihdr(0,0,10),40,99,115,58,99,108,101,97,114,41,0,0};
static C_char C_TLS li427[] C_aligned={C_lihdr(0,0,14),40,100,111,53,48,56,54,32,120,53,48,56,56,41,0,0,0,0,0,0};
static C_char C_TLS li428[] C_aligned={C_lihdr(0,0,26),40,100,111,53,48,55,50,32,101,53,48,56,51,32,118,53,48,56,52,32,121,53,48,56,53,41,0,0};
static C_char C_TLS li429[] C_aligned={C_lihdr(0,0,18),40,99,109,45,108,111,103,111,32,118,101,114,115,53,48,55,49,41,0,0};
static C_char C_TLS li430[] C_aligned={C_lihdr(0,0,25),40,112,114,105,110,116,45,109,101,115,115,97,103,101,32,97,53,48,57,55,53,49,48,49,41,0};
static C_char C_TLS li431[] C_aligned={C_lihdr(0,0,23),40,112,114,105,110,116,45,101,114,114,111,114,32,97,53,49,48,51,53,49,48,55,41,0,0,0,0,0,0,0};
static C_char C_TLS li432[] C_aligned={C_lihdr(0,0,27),40,99,117,114,114,101,110,116,45,116,105,109,101,45,109,105,108,108,105,115,101,99,111,110,100,115,41,0,0,0};
static C_char C_TLS li433[] C_aligned={C_lihdr(0,0,22),40,99,117,114,114,101,110,116,45,116,105,109,101,45,115,101,99,111,110,100,115,41,0,0,0,0,0,0};
static C_char C_TLS li434[] C_aligned={C_lihdr(0,0,3),46,0,0,0,0,0};
static C_char C_TLS li435[] C_aligned={C_lihdr(0,0,43),40,115,99,104,101,100,117,108,101,114,45,115,101,116,45,116,105,109,101,45,109,105,108,108,105,115,101,99,111,110,100,115,32,97,53,49,49,57,53,49,50,50,41,0,0,0};
static C_char C_TLS li436[] C_aligned={C_lihdr(0,0,3),46,0,0,0,0,0};
static C_char C_TLS li437[] C_aligned={C_lihdr(0,0,48),40,115,99,104,101,100,117,108,101,114,45,115,112,114,111,117,116,32,97,53,49,50,55,53,49,51,48,32,97,53,49,50,54,53,49,51,49,32,97,53,49,50,53,53,49,51,50,41};
static C_char C_TLS li438[] C_aligned={C_lihdr(0,0,3),46,0,0,0,0,0};
static C_char C_TLS li439[] C_aligned={C_lihdr(0,0,26),40,115,99,104,101,100,117,108,101,114,45,115,116,111,112,32,97,53,49,52,55,53,49,53,48,41,0,0};
static C_char C_TLS li440[] C_aligned={C_lihdr(0,0,19),40,102,95,50,55,56,54,56,32,97,53,49,53,56,53,49,54,50,41,0,0,0};
static C_char C_TLS li441[] C_aligned={C_lihdr(0,0,24),40,108,111,97,100,45,115,97,108,45,102,105,108,101,32,102,105,108,101,53,49,53,55,41};
static C_char C_TLS li442[] C_aligned={C_lihdr(0,0,11),40,110,101,120,116,115,116,97,114,116,41,0,0,0};
static C_char C_TLS li443[] C_aligned={C_lihdr(0,0,8),40,110,101,120,116,105,100,41};
static C_char C_TLS li444[] C_aligned={C_lihdr(0,0,14),40,100,111,53,49,56,50,32,112,53,49,56,52,41,0,0,0,0,0,0};
static C_char C_TLS li445[] C_aligned={C_lihdr(0,0,27),40,98,111,100,121,53,49,54,56,32,115,116,97,114,116,53,49,55,52,32,105,100,53,49,55,53,41,0,0,0};
static C_char C_TLS li446[] C_aligned={C_lihdr(0,0,27),40,100,101,102,45,105,100,53,49,55,49,32,37,115,116,97,114,116,53,49,54,54,53,49,57,48,41,0,0,0};
static C_char C_TLS li447[] C_aligned={C_lihdr(0,0,15),40,100,101,102,45,115,116,97,114,116,53,49,55,48,41,0,0,0,0,0,0,0};
static C_char C_TLS li448[] C_aligned={C_lihdr(0,0,28),40,115,112,114,111,117,116,32,112,114,111,99,53,49,54,52,32,46,32,97,114,103,115,53,49,54,53,41,0,0,0,0};
static C_char C_TLS li449[] C_aligned={C_lihdr(0,0,3),46,0,0,0,0,0};
static C_char C_TLS li450[] C_aligned={C_lihdr(0,0,23),40,116,105,109,101,45,102,111,114,109,97,116,32,46,32,97,114,103,53,49,57,55,41,0,0,0,0,0,0,0};
static C_char C_TLS li451[] C_aligned={C_lihdr(0,0,3),46,0,0,0,0,0};
static C_char C_TLS li452[] C_aligned={C_lihdr(0,0,7),40,112,97,117,115,101,41,0,0,0,0,0,0,0};
static C_char C_TLS li453[] C_aligned={C_lihdr(0,0,3),46,0,0,0,0,0};
static C_char C_TLS li454[] C_aligned={C_lihdr(0,0,9),40,112,97,117,115,101,100,63,41,0};
static C_char C_TLS li455[] C_aligned={C_lihdr(0,0,3),46,0,0,0,0,0};
static C_char C_TLS li456[] C_aligned={C_lihdr(0,0,6),40,99,111,110,116,41,0,0,0,0,0,0};
static C_char C_TLS li457[] C_aligned={C_lihdr(0,0,17),40,100,111,53,50,49,49,32,116,97,105,108,53,50,49,51,41,0};
static C_char C_TLS li458[] C_aligned={C_lihdr(0,0,19),40,115,116,111,112,32,46,32,112,114,111,99,105,100,53,50,49,48,41,0,0,0};
static C_char C_TLS li459[] C_aligned={C_lihdr(0,0,3),46,0,0,0,0,0};
static C_char C_TLS li460[] C_aligned={C_lihdr(0,0,6),40,104,117,115,104,41,0,0,0,0,0,0};
static C_char C_TLS li461[] C_aligned={C_lihdr(0,0,17),40,100,111,53,50,52,51,32,100,101,99,108,53,50,52,53,41,0};
static C_char C_TLS li462[] C_aligned={C_lihdr(0,0,17),40,100,111,53,50,50,55,32,116,97,105,108,53,50,50,57,41,0};
static C_char C_TLS li463[] C_aligned={C_lihdr(0,0,46),40,97,50,56,54,54,53,32,98,105,110,100,105,110,103,115,53,50,49,56,32,116,101,114,109,105,110,97,116,101,53,50,49,57,32,46,32,98,111,100,121,53,50,50,48,41,0,0,0,0,0,0};
static C_char C_TLS li464[] C_aligned={C_lihdr(0,0,17),40,97,50,56,54,55,49,32,97,114,103,115,51,56,51,56,41,0};
static C_char C_TLS li465[] C_aligned={C_lihdr(0,0,16),40,97,50,56,56,49,51,32,115,121,109,51,49,53,49,41};
static C_char C_TLS li466[] C_aligned={C_lihdr(0,0,16),40,97,50,56,56,49,54,32,115,121,109,51,49,52,57,41};
static C_char C_TLS li467[] C_aligned={C_lihdr(0,0,24),40,97,50,56,56,52,53,32,118,97,108,51,49,52,55,32,115,121,109,51,49,52,56,41};
static C_char C_TLS li468[] C_aligned={C_lihdr(0,0,17),40,97,50,56,56,53,57,32,97,114,103,115,51,49,52,54,41,0};
static C_char C_TLS li469[] C_aligned={C_lihdr(0,0,26),40,97,50,56,56,55,51,32,97,114,103,115,50,57,53,52,32,101,114,114,102,50,57,53,53,41,0,0};
static C_char C_TLS li470[] C_aligned={C_lihdr(0,0,35),40,97,50,56,56,56,55,32,117,110,105,116,50,57,53,54,32,105,110,102,111,50,57,53,55,32,101,114,114,102,50,57,53,56,41,0,0,0};
static C_char C_TLS li471[] C_aligned={C_lihdr(0,0,26),40,97,50,56,57,57,51,32,97,114,103,115,50,57,48,51,32,101,114,114,102,50,57,48,52,41,0,0};
static C_char C_TLS li472[] C_aligned={C_lihdr(0,0,17),40,100,111,50,57,49,53,32,114,101,115,116,50,57,49,55,41,0};
static C_char C_TLS li473[] C_aligned={C_lihdr(0,0,26),40,100,111,50,57,52,49,32,97,114,103,115,50,57,52,51,32,116,97,105,108,50,57,52,52,41,0,0};
static C_char C_TLS li474[] C_aligned={C_lihdr(0,0,35),40,97,50,57,48,51,50,32,117,110,105,116,50,57,48,56,32,105,110,102,111,50,57,48,57,32,101,114,114,102,50,57,49,48,41,0,0,0};
static C_char C_TLS li475[] C_aligned={C_lihdr(0,0,26),40,97,50,57,52,53,48,32,97,114,103,115,50,56,57,54,32,101,114,114,102,50,56,57,55,41,0,0};
static C_char C_TLS li476[] C_aligned={C_lihdr(0,0,26),40,97,50,57,53,57,53,32,97,114,103,115,50,56,56,50,32,101,114,114,102,50,56,56,51,41,0,0};
static C_char C_TLS li477[] C_aligned={C_lihdr(0,0,17),40,100,111,50,56,53,57,32,116,97,105,108,50,56,54,49,41,0};
static C_char C_TLS li478[] C_aligned={C_lihdr(0,0,17),40,100,111,50,56,53,52,32,116,97,105,108,50,56,53,54,41,0};
static C_char C_TLS li479[] C_aligned={C_lihdr(0,0,20),40,100,111,50,56,52,51,32,99,108,97,117,115,101,115,50,56,52,53,41,0,0,0,0};
static C_char C_TLS li480[] C_aligned={C_lihdr(0,0,17),40,100,111,50,56,52,48,32,116,97,105,108,50,56,52,50,41,0};
static C_char C_TLS li481[] C_aligned={C_lihdr(0,0,35),40,97,50,57,54,52,49,32,117,110,105,116,50,56,57,50,32,105,110,102,111,50,56,57,51,32,101,114,114,102,50,56,57,52,41,0,0,0};
static C_char C_TLS li482[] C_aligned={C_lihdr(0,0,26),40,97,51,48,48,57,53,32,97,114,103,115,50,55,53,54,32,101,114,114,102,50,55,53,55,41,0,0};
static C_char C_TLS li483[] C_aligned={C_lihdr(0,0,35),40,97,51,48,49,54,51,32,117,110,105,116,50,55,54,56,32,105,110,102,111,50,55,54,57,32,101,114,114,102,50,55,55,48,41,0,0,0};
static C_char C_TLS li484[] C_aligned={C_lihdr(0,0,26),40,97,51,48,50,57,50,32,97,114,103,115,50,55,52,52,32,101,114,114,102,50,55,52,53,41,0,0};
static C_char C_TLS li485[] C_aligned={C_lihdr(0,0,35),40,97,51,48,51,49,56,32,117,110,105,116,50,55,52,57,32,105,110,102,111,50,55,53,48,32,101,114,114,102,50,55,53,49,41,0,0,0};
static C_char C_TLS li486[] C_aligned={C_lihdr(0,0,26),40,97,51,48,52,48,54,32,97,114,103,115,50,55,50,50,32,101,114,114,102,50,55,50,51,41,0,0};
static C_char C_TLS li487[] C_aligned={C_lihdr(0,0,17),40,100,111,50,55,51,48,32,105,116,101,114,50,55,51,50,41,0};
static C_char C_TLS li488[] C_aligned={C_lihdr(0,0,35),40,97,51,48,52,52,57,32,117,110,105,116,50,55,50,52,32,105,110,102,111,50,55,50,53,32,101,114,114,102,50,55,50,54,41,0,0,0};
static C_char C_TLS li489[] C_aligned={C_lihdr(0,0,26),40,97,51,48,54,56,54,32,97,114,103,115,50,55,49,57,32,101,114,114,102,50,55,50,48,41,0,0};
static C_char C_TLS li490[] C_aligned={C_lihdr(0,0,26),40,97,51,48,55,55,50,32,97,114,103,115,50,55,49,49,32,101,114,114,102,50,55,49,50,41,0,0};
static C_char C_TLS li491[] C_aligned={C_lihdr(0,0,14),40,97,51,48,56,50,52,32,101,50,55,49,55,41,0,0,0,0,0,0};
static C_char C_TLS li492[] C_aligned={C_lihdr(0,0,35),40,97,51,48,56,49,53,32,117,110,105,116,50,55,49,51,32,105,110,102,111,50,55,49,52,32,101,114,114,102,50,55,49,53,41,0,0,0};
static C_char C_TLS li493[] C_aligned={C_lihdr(0,0,26),40,97,51,48,56,55,52,32,97,114,103,115,50,55,48,52,32,101,114,114,102,50,55,48,53,41,0,0};
static C_char C_TLS li494[] C_aligned={C_lihdr(0,0,14),40,97,51,48,57,49,53,32,101,50,55,48,57,41,0,0,0,0,0,0};
static C_char C_TLS li495[] C_aligned={C_lihdr(0,0,35),40,97,51,48,57,48,57,32,117,110,105,116,50,55,48,54,32,105,110,102,111,50,55,48,55,32,101,114,114,102,50,55,48,56,41,0,0,0};
static C_char C_TLS li496[] C_aligned={C_lihdr(0,0,35),40,97,51,48,57,54,57,32,117,110,105,116,50,54,57,55,32,105,110,102,111,50,54,57,56,32,101,114,114,102,50,54,57,57,41,0,0,0};
static C_char C_TLS li497[] C_aligned={C_lihdr(0,0,35),40,97,51,49,48,51,48,32,117,110,105,116,50,54,57,49,32,105,110,102,111,50,54,57,50,32,101,114,114,102,50,54,57,51,41,0,0,0};
static C_char C_TLS li498[] C_aligned={C_lihdr(0,0,26),40,97,51,49,48,56,52,32,97,114,103,115,50,54,56,53,32,101,114,114,102,50,54,56,54,41,0,0};
static C_char C_TLS li499[] C_aligned={C_lihdr(0,0,35),40,97,51,49,49,49,52,32,117,110,105,116,50,54,56,55,32,105,110,102,111,50,54,56,56,32,101,114,114,102,50,54,56,57,41,0,0,0};
static C_char C_TLS li500[] C_aligned={C_lihdr(0,0,26),40,97,51,49,51,51,51,32,97,114,103,115,50,54,55,56,32,101,114,114,102,50,54,55,57,41,0,0};
static C_char C_TLS li501[] C_aligned={C_lihdr(0,0,26),40,97,51,49,51,53,57,32,97,114,103,115,50,54,54,53,32,101,114,114,102,50,54,54,54,41,0,0};
static C_char C_TLS li502[] C_aligned={C_lihdr(0,0,27),40,97,51,49,52,52,48,32,115,116,114,50,54,55,53,32,46,32,97,114,103,115,50,54,55,54,41,0,0,0};
static C_char C_TLS li503[] C_aligned={C_lihdr(0,0,35),40,97,51,49,52,50,48,32,117,110,105,116,50,54,55,48,32,105,110,102,111,50,54,55,49,32,101,114,114,102,50,54,55,50,41,0,0,0};
static C_char C_TLS li504[] C_aligned={C_lihdr(0,0,26),40,97,51,49,53,53,56,32,97,114,103,115,50,54,53,56,32,101,114,114,102,50,54,53,57,41,0,0};
static C_char C_TLS li505[] C_aligned={C_lihdr(0,0,35),40,97,51,49,53,56,48,32,117,110,105,116,50,54,54,48,32,105,110,102,111,50,54,54,49,32,101,114,114,102,50,54,54,50,41,0,0,0};
static C_char C_TLS li506[] C_aligned={C_lihdr(0,0,26),40,97,51,49,54,51,51,32,97,114,103,115,50,54,52,52,32,101,114,114,102,50,54,52,53,41,0,0};
static C_char C_TLS li507[] C_aligned={C_lihdr(0,0,17),40,100,111,50,54,53,49,32,97,114,103,115,50,54,53,51,41,0};
static C_char C_TLS li508[] C_aligned={C_lihdr(0,0,35),40,97,51,49,54,53,53,32,117,110,105,116,50,54,52,54,32,105,110,102,111,50,54,52,55,32,101,114,114,102,50,54,52,56,41,0,0,0};
static C_char C_TLS li509[] C_aligned={C_lihdr(0,0,26),40,97,51,49,55,56,55,32,97,114,103,115,50,54,51,55,32,101,114,114,102,50,54,51,56,41,0,0};
static C_char C_TLS li510[] C_aligned={C_lihdr(0,0,35),40,97,51,49,56,49,51,32,117,110,105,116,50,54,51,57,32,105,110,102,111,50,54,52,48,32,101,114,114,102,50,54,52,49,41,0,0,0};
static C_char C_TLS li511[] C_aligned={C_lihdr(0,0,26),40,97,51,49,57,50,51,32,97,114,103,115,50,54,51,51,32,101,114,114,102,50,54,51,52,41,0,0};
static C_char C_TLS li512[] C_aligned={C_lihdr(0,0,26),40,97,51,50,48,55,57,32,97,114,103,115,50,53,57,54,32,101,114,114,102,50,53,57,55,41,0,0};
static C_char C_TLS li513[] C_aligned={C_lihdr(0,0,35),40,97,51,50,48,57,55,32,117,110,105,116,50,53,57,56,32,105,110,102,111,50,53,57,57,32,101,114,114,102,50,54,48,48,41,0,0,0};
static C_char C_TLS li514[] C_aligned={C_lihdr(0,0,26),40,97,51,50,49,53,48,32,97,114,103,115,50,53,57,48,32,101,114,114,102,50,53,57,49,41,0,0};
static C_char C_TLS li515[] C_aligned={C_lihdr(0,0,26),40,97,51,50,51,48,50,32,97,114,103,115,50,53,56,55,32,101,114,114,102,50,53,56,56,41,0,0};
static C_char C_TLS li516[] C_aligned={C_lihdr(0,0,26),40,97,51,50,52,52,49,32,97,114,103,115,50,53,56,52,32,101,114,114,102,50,53,56,53,41,0,0};
static C_char C_TLS li517[] C_aligned={C_lihdr(0,0,26),40,97,51,50,53,54,49,32,97,114,103,115,50,53,54,51,32,101,114,114,102,50,53,54,52,41,0,0};
static C_char C_TLS li518[] C_aligned={C_lihdr(0,0,35),40,97,51,50,53,57,50,32,117,110,105,116,50,53,54,54,32,105,110,102,111,50,53,54,55,32,101,114,114,102,50,53,54,56,41,0,0,0};
static C_char C_TLS li519[] C_aligned={C_lihdr(0,0,26),40,97,51,50,54,56,52,32,97,114,103,115,50,53,53,55,32,101,114,114,102,50,53,53,56,41,0,0};
static C_char C_TLS li520[] C_aligned={C_lihdr(0,0,35),40,97,51,50,55,48,50,32,117,110,105,116,50,53,53,57,32,105,110,102,111,50,53,54,48,32,101,114,114,102,50,53,54,49,41,0,0,0};
static C_char C_TLS li521[] C_aligned={C_lihdr(0,0,35),40,97,51,50,55,55,54,32,117,110,105,116,50,53,52,54,32,105,110,102,111,50,53,52,55,32,101,114,114,102,50,53,52,56,41,0,0,0};
static C_char C_TLS li522[] C_aligned={C_lihdr(0,0,26),40,97,51,50,56,55,50,32,97,114,103,115,50,53,51,52,32,101,114,114,102,50,53,51,53,41,0,0};
static C_char C_TLS li523[] C_aligned={C_lihdr(0,0,35),40,97,51,50,56,56,50,32,117,110,105,116,50,53,51,54,32,105,110,102,111,50,53,51,55,32,101,114,114,102,50,53,51,56,41,0,0,0};
static C_char C_TLS li524[] C_aligned={C_lihdr(0,0,20),40,97,51,51,48,53,56,32,117,50,49,56,52,32,112,50,49,56,53,41,0,0,0,0};
static C_char C_TLS li525[] C_aligned={C_lihdr(0,0,20),40,97,51,51,48,56,52,32,101,50,49,53,54,32,112,50,49,53,55,41,0,0,0,0};
static C_char C_TLS li526[] C_aligned={C_lihdr(0,0,12),40,112,112,97,116,32,112,50,49,49,57,41,0,0,0,0};
static C_char C_TLS li527[] C_aligned={C_lihdr(0,0,35),40,97,51,51,48,57,56,32,116,121,112,50,49,49,53,32,112,97,116,50,49,49,54,32,46,32,97,114,103,115,50,49,49,55,41,0,0,0};
static C_char C_TLS li528[] C_aligned={C_lihdr(0,0,20),40,97,51,51,50,48,49,32,114,50,49,49,50,32,112,50,49,49,51,41,0,0,0,0};
static C_char C_TLS li529[] C_aligned={C_lihdr(0,0,20),40,97,51,51,50,49,49,32,116,50,48,54,51,32,112,50,48,54,52,41,0,0,0,0};
static C_char C_TLS li530[] C_aligned={C_lihdr(0,0,71),40,100,111,53,48,57,32,100,53,49,49,32,107,53,49,50,32,112,53,49,51,32,107,60,53,49,52,32,107,62,53,49,53,32,102,53,49,54,32,102,62,53,49,55,32,102,60,53,49,56,32,111,53,49,57,32,120,53,50,48,32,110,53,50,49,32,101,53,50,50,41,0,0,0,0,0,0,0};
static C_char C_TLS li531[] C_aligned={C_lihdr(0,0,14),40,100,111,53,48,51,32,107,101,121,53,48,53,41,0,0,0,0,0,0};
static C_char C_TLS li532[] C_aligned={C_lihdr(0,0,24),40,97,51,51,52,52,49,32,109,101,115,115,56,56,32,46,32,100,97,116,97,56,57,41};
static C_char C_TLS li533[] C_aligned={C_lihdr(0,0,22),40,97,51,51,52,52,55,32,102,117,110,99,51,56,32,105,110,102,111,51,57,41,0,0,0,0,0,0};
static C_char C_TLS li534[] C_aligned={C_lihdr(0,0,24),40,97,51,51,52,57,57,32,115,112,101,99,51,54,32,46,32,98,111,100,121,51,55,41};
static C_char C_TLS li535[] C_aligned={C_lihdr(0,0,10),40,116,111,112,108,101,118,101,108,41,0,0};


/* from k27871 */
static C_word C_fcall stub5159(C_word C_buf,C_word C_a0) C_regparm;
C_regparm static C_word C_fcall stub5159(C_word C_buf,C_word C_a0){
C_word C_r=C_SCHEME_UNDEFINED,*C_a=(C_word*)C_buf;
char * t0=(char * )C_string_or_null(C_a0);
load_sal_file(t0);
return C_r;}

/* from k27856 in hush in k27551 in k27548 in k27545 in k27420 in k27417 in k27414 in k27411 in k27408 in k27405 in k27402 in k27399 in k27396 in k27393 in k27390 in k22468 in k18948 in k18945 in k18942 in k18939 in k18528 in k18525 in k18522 in k18519 in k18516 in k17994 in k17991 in k17468 in k17465 in k17462 in k17459 in k17456 in k17453 in k17450 in k17447 in k17444 in k17441 in k17438 in k17435 in k17432 in k17429 in k17426 in k17423 in k17420 in k17417 in k17414 in k17411 in k17408 in k17269 in k17266 in k17263 in k17260 in k17204 in k17201 in k17198 in k17195 in k17192 in k17189 in k17186 in k17183 in k15938 in k15869 in k15676 in k15673 in k15568 in k15517 in k7924 in k7921 in k5905 in k5612 in k5609 in k5605 in k5314 in k5311 in k5308 in k5305 */
C_noret_decl(stub5153)
static void C_ccall stub5153(C_word C_c,C_word C_self,C_word C_k,C_word C_buf) C_noret;
static void C_ccall stub5153(C_word C_c,C_word C_self,C_word C_k,C_word C_buf){
C_word C_r=C_SCHEME_UNDEFINED,*C_a=(C_word*)C_buf;
int C_level=C_save_callback_continuation(&C_a,C_k);
scheduler_hush();
C_k=C_restore_callback_continuation2(C_level);
C_kontinue(C_k,C_r);}

/* from k27850 */
C_noret_decl(stub5148)
static void C_ccall stub5148(C_word C_c,C_word C_self,C_word C_k,C_word C_buf,C_word C_a0) C_noret;
static void C_ccall stub5148(C_word C_c,C_word C_self,C_word C_k,C_word C_buf,C_word C_a0){
C_word C_r=C_SCHEME_UNDEFINED,*C_a=(C_word*)C_buf;
int t0=(int )C_unfix(C_a0);
int C_level=C_save_callback_continuation(&C_a,C_k);
scheduler_stop(t0);
C_k=C_restore_callback_continuation2(C_level);
C_kontinue(C_k,C_r);}

/* from k27834 in cont in k27551 in k27548 in k27545 in k27420 in k27417 in k27414 in k27411 in k27408 in k27405 in k27402 in k27399 in k27396 in k27393 in k27390 in k22468 in k18948 in k18945 in k18942 in k18939 in k18528 in k18525 in k18522 in k18519 in k18516 in k17994 in k17991 in k17468 in k17465 in k17462 in k17459 in k17456 in k17453 in k17450 in k17447 in k17444 in k17441 in k17438 in k17435 in k17432 in k17429 in k17426 in k17423 in k17420 in k17417 in k17414 in k17411 in k17408 in k17269 in k17266 in k17263 in k17260 in k17204 in k17201 in k17198 in k17195 in k17192 in k17189 in k17186 in k17183 in k15938 in k15869 in k15676 in k15673 in k15568 in k15517 in k7924 in k7921 in k5905 in k5612 in k5609 in k5605 in k5314 in k5311 in k5308 in k5305 */
C_noret_decl(stub5143)
static void C_ccall stub5143(C_word C_c,C_word C_self,C_word C_k,C_word C_buf) C_noret;
static void C_ccall stub5143(C_word C_c,C_word C_self,C_word C_k,C_word C_buf){
C_word C_r=C_SCHEME_UNDEFINED,*C_a=(C_word*)C_buf;
int C_level=C_save_callback_continuation(&C_a,C_k);
scheduler_cont();
C_k=C_restore_callback_continuation2(C_level);
C_kontinue(C_k,C_r);}

/* from k27825 in pause in k27551 in k27548 in k27545 in k27420 in k27417 in k27414 in k27411 in k27408 in k27405 in k27402 in k27399 in k27396 in k27393 in k27390 in k22468 in k18948 in k18945 in k18942 in k18939 in k18528 in k18525 in k18522 in k18519 in k18516 in k17994 in k17991 in k17468 in k17465 in k17462 in k17459 in k17456 in k17453 in k17450 in k17447 in k17444 in k17441 in k17438 in k17435 in k17432 in k17429 in k17426 in k17423 in k17420 in k17417 in k17414 in k17411 in k17408 in k17269 in k17266 in k17263 in k17260 in k17204 in k17201 in k17198 in k17195 in k17192 in k17189 in k17186 in k17183 in k15938 in k15869 in k15676 in k15673 in k15568 in k15517 in k7924 in k7921 in k5905 in k5612 in k5609 in k5605 in k5314 in k5311 in k5308 in k5305 */
C_noret_decl(stub5139)
static void C_ccall stub5139(C_word C_c,C_word C_self,C_word C_k,C_word C_buf) C_noret;
static void C_ccall stub5139(C_word C_c,C_word C_self,C_word C_k,C_word C_buf){
C_word C_r=C_SCHEME_UNDEFINED,*C_a=(C_word*)C_buf;
int C_level=C_save_callback_continuation(&C_a,C_k);
scheduler_pause();
C_k=C_restore_callback_continuation2(C_level);
C_kontinue(C_k,C_r);}

/* from k27816 in paused? in k27551 in k27548 in k27545 in k27420 in k27417 in k27414 in k27411 in k27408 in k27405 in k27402 in k27399 in k27396 in k27393 in k27390 in k22468 in k18948 in k18945 in k18942 in k18939 in k18528 in k18525 in k18522 in k18519 in k18516 in k17994 in k17991 in k17468 in k17465 in k17462 in k17459 in k17456 in k17453 in k17450 in k17447 in k17444 in k17441 in k17438 in k17435 in k17432 in k17429 in k17426 in k17423 in k17420 in k17417 in k17414 in k17411 in k17408 in k17269 in k17266 in k17263 in k17260 in k17204 in k17201 in k17198 in k17195 in k17192 in k17189 in k17186 in k17183 in k15938 in k15869 in k15676 in k15673 in k15568 in k15517 in k7924 in k7921 in k5905 in k5612 in k5609 in k5605 in k5314 in k5311 in k5308 in k5305 */
C_noret_decl(stub5135)
static void C_ccall stub5135(C_word C_c,C_word C_self,C_word C_k,C_word C_buf) C_noret;
static void C_ccall stub5135(C_word C_c,C_word C_self,C_word C_k,C_word C_buf){
C_word C_r=C_SCHEME_UNDEFINED,*C_a=(C_word*)C_buf;
int C_level=C_save_callback_continuation(&C_a,C_k);
C_r=C_mk_bool(scheduler_is_paused());
C_k=C_restore_callback_continuation2(C_level);
C_kontinue(C_k,C_r);}

/* from k27810 */
C_noret_decl(stub5128)
static void C_ccall stub5128(C_word C_c,C_word C_self,C_word C_k,C_word C_buf,C_word C_a0,C_word C_a1,C_word C_a2) C_noret;
static void C_ccall stub5128(C_word C_c,C_word C_self,C_word C_k,C_word C_buf,C_word C_a0,C_word C_a1,C_word C_a2){
C_word C_r=C_SCHEME_UNDEFINED,*C_a=(C_word*)C_buf;
C_word t0=(C_word )(C_a0);
double t1=(double )C_c_double(C_a1);
int t2=(int )C_unfix(C_a2);
int C_level=C_save_callback_continuation(&C_a,C_k);
scheduler_sprout(t0,t1,t2);
C_k=C_restore_callback_continuation2(C_level);
C_kontinue(C_k,C_r);}

/* from k27790 in scheduler-set-time-milliseconds in k27551 in k27548 in k27545 in k27420 in k27417 in k27414 in k27411 in k27408 in k27405 in k27402 in k27399 in k27396 in k27393 in k27390 in k22468 in k18948 in k18945 in k18942 in k18939 in k18528 in k18525 in k18522 in k18519 in k18516 in k17994 in k17991 in k17468 in k17465 in k17462 in k17459 in k17456 in k17453 in k17450 in k17447 in k17444 in k17441 in k17438 in k17435 in k17432 in k17429 in k17426 in k17423 in k17420 in k17417 in k17414 in k17411 in k17408 in k17269 in k17266 in k17263 in k17260 in k17204 in k17201 in k17198 in k17195 in k17192 in k17189 in k17186 in k17183 in k15938 in k15869 in k15676 in k15673 in k15568 in k15517 in k7924 in k7921 in k5905 in k5612 in k5609 in k5605 in k5314 in k5311 in k5308 in k5305 */
C_noret_decl(stub5120)
static void C_ccall stub5120(C_word C_c,C_word C_self,C_word C_k,C_word C_buf,C_word C_a0) C_noret;
static void C_ccall stub5120(C_word C_c,C_word C_self,C_word C_k,C_word C_buf,C_word C_a0){
C_word C_r=C_SCHEME_UNDEFINED,*C_a=(C_word*)C_buf;
int t0=(int )C_truep(C_a0);
int C_level=C_save_callback_continuation(&C_a,C_k);
scheduler_set_time_milliseconds(t0);
C_k=C_restore_callback_continuation2(C_level);
C_kontinue(C_k,C_r);}

/* from k27781 in time-format in k27551 in k27548 in k27545 in k27420 in k27417 in k27414 in k27411 in k27408 in k27405 in k27402 in k27399 in k27396 in k27393 in k27390 in k22468 in k18948 in k18945 in k18942 in k18939 in k18528 in k18525 in k18522 in k18519 in k18516 in k17994 in k17991 in k17468 in k17465 in k17462 in k17459 in k17456 in k17453 in k17450 in k17447 in k17444 in k17441 in k17438 in k17435 in k17432 in k17429 in k17426 in k17423 in k17420 in k17417 in k17414 in k17411 in k17408 in k17269 in k17266 in k17263 in k17260 in k17204 in k17201 in k17198 in k17195 in k17192 in k17189 in k17186 in k17183 in k15938 in k15869 in k15676 in k15673 in k15568 in k15517 in k7924 in k7921 in k5905 in k5612 in k5609 in k5605 in k5314 in k5311 in k5308 in k5305 */
C_noret_decl(stub5115)
static void C_ccall stub5115(C_word C_c,C_word C_self,C_word C_k,C_word C_buf) C_noret;
static void C_ccall stub5115(C_word C_c,C_word C_self,C_word C_k,C_word C_buf){
C_word C_r=C_SCHEME_UNDEFINED,*C_a=(C_word*)C_buf;
int C_level=C_save_callback_continuation(&C_a,C_k);
C_r=C_mk_bool(scheduler_is_time_milliseconds());
C_k=C_restore_callback_continuation2(C_level);
C_kontinue(C_k,C_r);}

/* from current-time-seconds in k27551 in k27548 in k27545 in k27420 in k27417 in k27414 in k27411 in k27408 in k27405 in k27402 in k27399 in k27396 in k27393 in k27390 in k22468 in k18948 in k18945 in k18942 in k18939 in k18528 in k18525 in k18522 in k18519 in k18516 in k17994 in k17991 in k17468 in k17465 in k17462 in k17459 in k17456 in k17453 in k17450 in k17447 in k17444 in k17441 in k17438 in k17435 in k17432 in k17429 in k17426 in k17423 in k17420 in k17417 in k17414 in k17411 in k17408 in k17269 in k17266 in k17263 in k17260 in k17204 in k17201 in k17198 in k17195 in k17192 in k17189 in k17186 in k17183 in k15938 in k15869 in k15676 in k15673 in k15568 in k15517 in k7924 in k7921 in k5905 in k5612 in k5609 in k5605 in k5314 in k5311 in k5308 in k5305 */
#define return(x) C_cblock C_r = (C_flonum(&C_a,(x))); goto C_ret; C_cblockend
static C_word C_fcall stub5112(C_word C_buf) C_regparm;
C_regparm static C_word C_fcall stub5112(C_word C_buf){
C_word C_r=C_SCHEME_UNDEFINED,*C_a=(C_word*)C_buf;
 C_return( (Time::getMillisecondCounterHiRes() / 1000.0) );
C_ret:
#undef return

return C_r;}

/* from current-time-milliseconds in k27551 in k27548 in k27545 in k27420 in k27417 in k27414 in k27411 in k27408 in k27405 in k27402 in k27399 in k27396 in k27393 in k27390 in k22468 in k18948 in k18945 in k18942 in k18939 in k18528 in k18525 in k18522 in k18519 in k18516 in k17994 in k17991 in k17468 in k17465 in k17462 in k17459 in k17456 in k17453 in k17450 in k17447 in k17444 in k17441 in k17438 in k17435 in k17432 in k17429 in k17426 in k17423 in k17420 in k17417 in k17414 in k17411 in k17408 in k17269 in k17266 in k17263 in k17260 in k17204 in k17201 in k17198 in k17195 in k17192 in k17189 in k17186 in k17183 in k15938 in k15869 in k15676 in k15673 in k15568 in k15517 in k7924 in k7921 in k5905 in k5612 in k5609 in k5605 in k5314 in k5311 in k5308 in k5305 */
#define return(x) C_cblock C_r = (C_flonum(&C_a,(x))); goto C_ret; C_cblockend
static C_word C_fcall stub5109(C_word C_buf) C_regparm;
C_regparm static C_word C_fcall stub5109(C_word C_buf){
C_word C_r=C_SCHEME_UNDEFINED,*C_a=(C_word*)C_buf;
 C_return( Time::getMillisecondCounterHiRes());
C_ret:
#undef return

return C_r;}

/* from k27762 in print-error in k27551 in k27548 in k27545 in k27420 in k27417 in k27414 in k27411 in k27408 in k27405 in k27402 in k27399 in k27396 in k27393 in k27390 in k22468 in k18948 in k18945 in k18942 in k18939 in k18528 in k18525 in k18522 in k18519 in k18516 in k17994 in k17991 in k17468 in k17465 in k17462 in k17459 in k17456 in k17453 in k17450 in k17447 in k17444 in k17441 in k17438 in k17435 in k17432 in k17429 in k17426 in k17423 in k17420 in k17417 in k17414 in k17411 in k17408 in k17269 in k17266 in k17263 in k17260 in k17204 in k17201 in k17198 in k17195 in k17192 in k17189 in k17186 in k17183 in k15938 in k15869 in k15676 in k15673 in k15568 in k15517 in k7924 in k7921 in k5905 in k5612 in k5609 in k5605 in k5314 in k5311 in k5308 in k5305 */
static C_word C_fcall stub5104(C_word C_buf,C_word C_a0) C_regparm;
C_regparm static C_word C_fcall stub5104(C_word C_buf,C_word C_a0){
C_word C_r=C_SCHEME_UNDEFINED,*C_a=(C_word*)C_buf;
char * t0=(char * )C_string_or_null(C_a0);
print_error(t0);
return C_r;}

/* from k27748 in print-message in k27551 in k27548 in k27545 in k27420 in k27417 in k27414 in k27411 in k27408 in k27405 in k27402 in k27399 in k27396 in k27393 in k27390 in k22468 in k18948 in k18945 in k18942 in k18939 in k18528 in k18525 in k18522 in k18519 in k18516 in k17994 in k17991 in k17468 in k17465 in k17462 in k17459 in k17456 in k17453 in k17450 in k17447 in k17444 in k17441 in k17438 in k17435 in k17432 in k17429 in k17426 in k17423 in k17420 in k17417 in k17414 in k17411 in k17408 in k17269 in k17266 in k17263 in k17260 in k17204 in k17201 in k17198 in k17195 in k17192 in k17189 in k17186 in k17183 in k15938 in k15869 in k15676 in k15673 in k15568 in k15517 in k7924 in k7921 in k5905 in k5612 in k5609 in k5605 in k5314 in k5311 in k5308 in k5305 */
static C_word C_fcall stub5098(C_word C_buf,C_word C_a0) C_regparm;
C_regparm static C_word C_fcall stub5098(C_word C_buf,C_word C_a0){
C_word C_r=C_SCHEME_UNDEFINED,*C_a=(C_word*)C_buf;
char * t0=(char * )C_string_or_null(C_a0);
print_message(t0);
return C_r;}

/* from f_27543 in cs:clear in k27420 in k27417 in k27414 in k27411 in k27408 in k27405 in k27402 in k27399 in k27396 in k27393 in k27390 in k22468 in k18948 in k18945 in k18942 in k18939 in k18528 in k18525 in k18522 in k18519 in k18516 in k17994 in k17991 in k17468 in k17465 in k17462 in k17459 in k17456 in k17453 in k17450 in k17447 in k17444 in k17441 in k17438 in k17435 in k17432 in k17429 in k17426 in k17423 in k17420 in k17417 in k17414 in k17411 in k17408 in k17269 in k17266 in k17263 in k17260 in k17204 in k17201 in k17198 in k17195 in k17192 in k17189 in k17186 in k17183 in k15938 in k15869 in k15676 in k15673 in k15568 in k15517 in k7924 in k7921 in k5905 in k5612 in k5609 in k5605 in k5314 in k5311 in k5308 in k5305 */
static C_word C_fcall stub5064(C_word C_buf) C_regparm;
C_regparm static C_word C_fcall stub5064(C_word C_buf){
C_word C_r=C_SCHEME_UNDEFINED,*C_a=(C_word*)C_buf;
cs_clear_score();
return C_r;}

/* from k27509 */
static C_word C_fcall stub5057(C_word C_buf,C_word C_a0,C_word C_a1,C_word C_a2) C_regparm;
C_regparm static C_word C_fcall stub5057(C_word C_buf,C_word C_a0,C_word C_a1,C_word C_a2){
C_word C_r=C_SCHEME_UNDEFINED,*C_a=(C_word*)C_buf;
int t0=(int )C_unfix(C_a0);
int t1=(int )C_unfix(C_a1);
C_word t2=(C_word )(C_a2);
cs_send_score_event(t0,t1,t2);
return C_r;}

/* from k27452 */
static C_word C_fcall stub5046(C_word C_buf,C_word C_a0,C_word C_a1,C_word C_a2) C_regparm;
C_regparm static C_word C_fcall stub5046(C_word C_buf,C_word C_a0,C_word C_a1,C_word C_a2){
C_word C_r=C_SCHEME_UNDEFINED,*C_a=(C_word*)C_buf;
int t0=(int )C_unfix(C_a0);
int t1=(int )C_unfix(C_a1);
C_word t2=(C_word )(C_a2);
cs_send_score_event(t0,t1,t2);
return C_r;}

/* from f_27388 in mp:inhook in k22468 in k18948 in k18945 in k18942 in k18939 in k18528 in k18525 in k18522 in k18519 in k18516 in k17994 in k17991 in k17468 in k17465 in k17462 in k17459 in k17456 in k17453 in k17450 in k17447 in k17444 in k17441 in k17438 in k17435 in k17432 in k17429 in k17426 in k17423 in k17420 in k17417 in k17414 in k17411 in k17408 in k17269 in k17266 in k17263 in k17260 in k17204 in k17201 in k17198 in k17195 in k17192 in k17189 in k17186 in k17183 in k15938 in k15869 in k15676 in k15673 in k15568 in k15517 in k7924 in k7921 in k5905 in k5612 in k5609 in k5605 in k5314 in k5311 in k5308 in k5305 */
static C_word C_fcall stub4990(C_word C_buf,C_word C_a0) C_regparm;
C_regparm static C_word C_fcall stub4990(C_word C_buf,C_word C_a0){
C_word C_r=C_SCHEME_UNDEFINED,*C_a=(C_word*)C_buf;
C_word t0=(C_word )(C_a0);
set_input_hook(t0);
return C_r;}

/* from f_27383 in mp:inhook in k22468 in k18948 in k18945 in k18942 in k18939 in k18528 in k18525 in k18522 in k18519 in k18516 in k17994 in k17991 in k17468 in k17465 in k17462 in k17459 in k17456 in k17453 in k17450 in k17447 in k17444 in k17441 in k17438 in k17435 in k17432 in k17429 in k17426 in k17423 in k17420 in k17417 in k17414 in k17411 in k17408 in k17269 in k17266 in k17263 in k17260 in k17204 in k17201 in k17198 in k17195 in k17192 in k17189 in k17186 in k17183 in k15938 in k15869 in k15676 in k15673 in k15568 in k15517 in k7924 in k7921 in k5905 in k5612 in k5609 in k5605 in k5314 in k5311 in k5308 in k5305 */
static C_word C_fcall stub4981(C_word C_buf,C_word C_a0) C_regparm;
C_regparm static C_word C_fcall stub4981(C_word C_buf,C_word C_a0){
C_word C_r=C_SCHEME_UNDEFINED,*C_a=(C_word*)C_buf;
C_word t0=(C_word )(C_a0);
set_input_hook(t0);
return C_r;}

/* from k27327 */
static C_word C_fcall stub4974(C_word C_buf,C_word C_a0) C_regparm;
C_regparm static C_word C_fcall stub4974(C_word C_buf,C_word C_a0){
C_word C_r=C_SCHEME_UNDEFINED,*C_a=(C_word*)C_buf;
MidiMessage *t0=(MidiMessage *)C_c_pointer_or_null(C_a0);
mp_message(t0);
return C_r;}

/* from k27315 */
static C_word C_fcall stub4965(C_word C_buf,C_word C_a0,C_word C_a1,C_word C_a2,C_word C_a3,C_word C_a4) C_regparm;
C_regparm static C_word C_fcall stub4965(C_word C_buf,C_word C_a0,C_word C_a1,C_word C_a2,C_word C_a3,C_word C_a4){
C_word C_r=C_SCHEME_UNDEFINED,*C_a=(C_word*)C_buf;
int t0=(int )C_unfix(C_a0);
double t1=(double )C_c_double(C_a1);
float t2=(float )C_c_double(C_a2);
float t3=(float )C_c_double(C_a3);
float t4=(float )C_c_double(C_a4);
mp_data(t0,t1,t2,t3,t4);
return C_r;}

/* from k27287 */
static C_word C_fcall stub4950(C_word C_buf,C_word C_a0,C_word C_a1,C_word C_a2,C_word C_a3,C_word C_a4) C_regparm;
C_regparm static C_word C_fcall stub4950(C_word C_buf,C_word C_a0,C_word C_a1,C_word C_a2,C_word C_a3,C_word C_a4){
C_word C_r=C_SCHEME_UNDEFINED,*C_a=(C_word*)C_buf;
int t0=(int )C_unfix(C_a0);
double t1=(double )C_c_double(C_a1);
float t2=(float )C_c_double(C_a2);
float t3=(float )C_c_double(C_a3);
float t4=(float )C_c_double(C_a4);
mp_data(t0,t1,t2,t3,t4);
return C_r;}

/* from k27259 */
static C_word C_fcall stub4935(C_word C_buf,C_word C_a0,C_word C_a1,C_word C_a2,C_word C_a3,C_word C_a4) C_regparm;
C_regparm static C_word C_fcall stub4935(C_word C_buf,C_word C_a0,C_word C_a1,C_word C_a2,C_word C_a3,C_word C_a4){
C_word C_r=C_SCHEME_UNDEFINED,*C_a=(C_word*)C_buf;
int t0=(int )C_unfix(C_a0);
double t1=(double )C_c_double(C_a1);
float t2=(float )C_c_double(C_a2);
float t3=(float )C_c_double(C_a3);
float t4=(float )C_c_double(C_a4);
mp_data(t0,t1,t2,t3,t4);
return C_r;}

/* from k27231 */
static C_word C_fcall stub4920(C_word C_buf,C_word C_a0,C_word C_a1,C_word C_a2,C_word C_a3,C_word C_a4) C_regparm;
C_regparm static C_word C_fcall stub4920(C_word C_buf,C_word C_a0,C_word C_a1,C_word C_a2,C_word C_a3,C_word C_a4){
C_word C_r=C_SCHEME_UNDEFINED,*C_a=(C_word*)C_buf;
int t0=(int )C_unfix(C_a0);
double t1=(double )C_c_double(C_a1);
float t2=(float )C_c_double(C_a2);
float t3=(float )C_c_double(C_a3);
float t4=(float )C_c_double(C_a4);
mp_data(t0,t1,t2,t3,t4);
return C_r;}

/* from k27203 */
static C_word C_fcall stub4904(C_word C_buf,C_word C_a0,C_word C_a1,C_word C_a2,C_word C_a3,C_word C_a4) C_regparm;
C_regparm static C_word C_fcall stub4904(C_word C_buf,C_word C_a0,C_word C_a1,C_word C_a2,C_word C_a3,C_word C_a4){
C_word C_r=C_SCHEME_UNDEFINED,*C_a=(C_word*)C_buf;
int t0=(int )C_unfix(C_a0);
double t1=(double )C_c_double(C_a1);
float t2=(float )C_c_double(C_a2);
float t3=(float )C_c_double(C_a3);
float t4=(float )C_c_double(C_a4);
mp_data(t0,t1,t2,t3,t4);
return C_r;}

/* from k27175 */
static C_word C_fcall stub4888(C_word C_buf,C_word C_a0,C_word C_a1,C_word C_a2,C_word C_a3,C_word C_a4) C_regparm;
C_regparm static C_word C_fcall stub4888(C_word C_buf,C_word C_a0,C_word C_a1,C_word C_a2,C_word C_a3,C_word C_a4){
C_word C_r=C_SCHEME_UNDEFINED,*C_a=(C_word*)C_buf;
int t0=(int )C_unfix(C_a0);
double t1=(double )C_c_double(C_a1);
float t2=(float )C_c_double(C_a2);
float t3=(float )C_c_double(C_a3);
float t4=(float )C_c_double(C_a4);
mp_data(t0,t1,t2,t3,t4);
return C_r;}

/* from k27147 */
static C_word C_fcall stub4872(C_word C_buf,C_word C_a0,C_word C_a1,C_word C_a2,C_word C_a3,C_word C_a4) C_regparm;
C_regparm static C_word C_fcall stub4872(C_word C_buf,C_word C_a0,C_word C_a1,C_word C_a2,C_word C_a3,C_word C_a4){
C_word C_r=C_SCHEME_UNDEFINED,*C_a=(C_word*)C_buf;
int t0=(int )C_unfix(C_a0);
double t1=(double )C_c_double(C_a1);
float t2=(float )C_c_double(C_a2);
float t3=(float )C_c_double(C_a3);
float t4=(float )C_c_double(C_a4);
mp_data(t0,t1,t2,t3,t4);
return C_r;}

/* from k27119 */
static C_word C_fcall stub4857(C_word C_buf,C_word C_a0,C_word C_a1,C_word C_a2,C_word C_a3,C_word C_a4) C_regparm;
C_regparm static C_word C_fcall stub4857(C_word C_buf,C_word C_a0,C_word C_a1,C_word C_a2,C_word C_a3,C_word C_a4){
C_word C_r=C_SCHEME_UNDEFINED,*C_a=(C_word*)C_buf;
double t0=(double )C_c_double(C_a0);
double t1=(double )C_c_double(C_a1);
float t2=(float )C_c_double(C_a2);
float t3=(float )C_c_double(C_a3);
float t4=(float )C_c_double(C_a4);
mp_note(t0,t1,t2,t3,t4);
return C_r;}

/* from k27091 */
static C_word C_fcall stub4840(C_word C_buf,C_word C_a0,C_word C_a1,C_word C_a2,C_word C_a3,C_word C_a4) C_regparm;
C_regparm static C_word C_fcall stub4840(C_word C_buf,C_word C_a0,C_word C_a1,C_word C_a2,C_word C_a3,C_word C_a4){
C_word C_r=C_SCHEME_UNDEFINED,*C_a=(C_word*)C_buf;
double t0=(double )C_c_double(C_a0);
double t1=(double )C_c_double(C_a1);
float t2=(float )C_c_double(C_a2);
float t3=(float )C_c_double(C_a3);
float t4=(float )C_c_double(C_a4);
mp_note(t0,t1,t2,t3,t4);
return C_r;}

/* from k27060 */
static C_word C_fcall stub4822(C_word C_buf,C_word C_a0,C_word C_a1,C_word C_a2) C_regparm;
C_regparm static C_word C_fcall stub4822(C_word C_buf,C_word C_a0,C_word C_a1,C_word C_a2){
C_word C_r=C_SCHEME_UNDEFINED,*C_a=(C_word*)C_buf;
MidiMessage *t0=(MidiMessage *)C_c_pointer_or_null(C_a0);
int t1=(int )C_unfix(C_a1);
int t2=(int )C_unfix(C_a2);
mm_set_data(t0,t1,t2);
return C_r;}

/* from k27037 */
static C_word C_fcall stub4811(C_word C_buf,C_word C_a0,C_word C_a1) C_regparm;
C_regparm static C_word C_fcall stub4811(C_word C_buf,C_word C_a0,C_word C_a1){
C_word C_r=C_SCHEME_UNDEFINED,*C_a=(C_word*)C_buf;
MidiMessage *t0=(MidiMessage *)C_c_pointer_or_null(C_a0);
int t1=(int )C_unfix(C_a1);
C_r=C_fix((C_word)mm_data(t0,t1));
return C_r;}

/* from k27015 */
static C_word C_fcall stub4800(C_word C_buf,C_word C_a0,C_word C_a1,C_word C_a2) C_regparm;
C_regparm static C_word C_fcall stub4800(C_word C_buf,C_word C_a0,C_word C_a1,C_word C_a2){
C_word C_r=C_SCHEME_UNDEFINED,*C_a=(C_word*)C_buf;
MidiMessage *t0=(MidiMessage *)C_c_pointer_or_null(C_a0);
int t1=(int )C_unfix(C_a1);
int t2=(int )C_unfix(C_a2);
mm_set_data(t0,t1,t2);
return C_r;}

/* from k26995 */
static C_word C_fcall stub4790(C_word C_buf,C_word C_a0,C_word C_a1,C_word C_a2) C_regparm;
C_regparm static C_word C_fcall stub4790(C_word C_buf,C_word C_a0,C_word C_a1,C_word C_a2){
C_word C_r=C_SCHEME_UNDEFINED,*C_a=(C_word*)C_buf;
MidiMessage *t0=(MidiMessage *)C_c_pointer_or_null(C_a0);
int t1=(int )C_unfix(C_a1);
int t2=(int )C_unfix(C_a2);
mm_set_data(t0,t1,t2);
return C_r;}

/* from k26960 */
static C_word C_fcall stub4777(C_word C_buf,C_word C_a0,C_word C_a1) C_regparm;
C_regparm static C_word C_fcall stub4777(C_word C_buf,C_word C_a0,C_word C_a1){
C_word C_r=C_SCHEME_UNDEFINED,*C_a=(C_word*)C_buf;
MidiMessage *t0=(MidiMessage *)C_c_pointer_or_null(C_a0);
int t1=(int )C_unfix(C_a1);
C_r=C_fix((C_word)mm_data(t0,t1));
return C_r;}

/* from k26944 */
static C_word C_fcall stub4769(C_word C_buf,C_word C_a0,C_word C_a1) C_regparm;
C_regparm static C_word C_fcall stub4769(C_word C_buf,C_word C_a0,C_word C_a1){
C_word C_r=C_SCHEME_UNDEFINED,*C_a=(C_word*)C_buf;
MidiMessage *t0=(MidiMessage *)C_c_pointer_or_null(C_a0);
int t1=(int )C_unfix(C_a1);
C_r=C_fix((C_word)mm_data(t0,t1));
return C_r;}

/* from k26916 */
static C_word C_fcall stub4756(C_word C_buf,C_word C_a0,C_word C_a1,C_word C_a2) C_regparm;
C_regparm static C_word C_fcall stub4756(C_word C_buf,C_word C_a0,C_word C_a1,C_word C_a2){
C_word C_r=C_SCHEME_UNDEFINED,*C_a=(C_word*)C_buf;
MidiMessage *t0=(MidiMessage *)C_c_pointer_or_null(C_a0);
int t1=(int )C_unfix(C_a1);
int t2=(int )C_unfix(C_a2);
mm_set_data(t0,t1,t2);
return C_r;}

/* from k26893 */
static C_word C_fcall stub4745(C_word C_buf,C_word C_a0,C_word C_a1) C_regparm;
C_regparm static C_word C_fcall stub4745(C_word C_buf,C_word C_a0,C_word C_a1){
C_word C_r=C_SCHEME_UNDEFINED,*C_a=(C_word*)C_buf;
MidiMessage *t0=(MidiMessage *)C_c_pointer_or_null(C_a0);
int t1=(int )C_unfix(C_a1);
C_r=C_fix((C_word)mm_data(t0,t1));
return C_r;}

/* from k26874 */
static C_word C_fcall stub4734(C_word C_buf,C_word C_a0,C_word C_a1,C_word C_a2) C_regparm;
C_regparm static C_word C_fcall stub4734(C_word C_buf,C_word C_a0,C_word C_a1,C_word C_a2){
C_word C_r=C_SCHEME_UNDEFINED,*C_a=(C_word*)C_buf;
MidiMessage *t0=(MidiMessage *)C_c_pointer_or_null(C_a0);
int t1=(int )C_unfix(C_a1);
int t2=(int )C_unfix(C_a2);
mm_set_data(t0,t1,t2);
return C_r;}

/* from k26851 */
static C_word C_fcall stub4723(C_word C_buf,C_word C_a0,C_word C_a1) C_regparm;
C_regparm static C_word C_fcall stub4723(C_word C_buf,C_word C_a0,C_word C_a1){
C_word C_r=C_SCHEME_UNDEFINED,*C_a=(C_word*)C_buf;
MidiMessage *t0=(MidiMessage *)C_c_pointer_or_null(C_a0);
int t1=(int )C_unfix(C_a1);
C_r=C_fix((C_word)mm_data(t0,t1));
return C_r;}

/* from k26832 */
static C_word C_fcall stub4713(C_word C_buf,C_word C_a0,C_word C_a1) C_regparm;
C_regparm static C_word C_fcall stub4713(C_word C_buf,C_word C_a0,C_word C_a1){
C_word C_r=C_SCHEME_UNDEFINED,*C_a=(C_word*)C_buf;
MidiMessage *t0=(MidiMessage *)C_c_pointer_or_null(C_a0);
int t1=(int )C_unfix(C_a1);
mm_set_chan(t0,t1);
return C_r;}

/* from k26813 */
static C_word C_fcall stub4704(C_word C_buf,C_word C_a0) C_regparm;
C_regparm static C_word C_fcall stub4704(C_word C_buf,C_word C_a0){
C_word C_r=C_SCHEME_UNDEFINED,*C_a=(C_word*)C_buf;
MidiMessage *t0=(MidiMessage *)C_c_pointer_or_null(C_a0);
C_r=C_fix((C_word)mm_chan(t0));
return C_r;}

/* from k26798 */
static C_word C_fcall stub4695(C_word C_buf,C_word C_a0,C_word C_a1) C_regparm;
C_regparm static C_word C_fcall stub4695(C_word C_buf,C_word C_a0,C_word C_a1){
C_word C_r=C_SCHEME_UNDEFINED,*C_a=(C_word*)C_buf;
MidiMessage *t0=(MidiMessage *)C_c_pointer_or_null(C_a0);
double t1=(double )C_c_double(C_a1);
mm_set_time(t0,t1);
return C_r;}

/* from k26779 */
static C_word C_fcall stub4685(C_word C_buf,C_word C_a0) C_regparm;
C_regparm static C_word C_fcall stub4685(C_word C_buf,C_word C_a0){
C_word C_r=C_SCHEME_UNDEFINED,*C_a=(C_word*)C_buf;
MidiMessage *t0=(MidiMessage *)C_c_pointer_or_null(C_a0);
C_r=C_flonum(&C_a,mm_time(t0));
return C_r;}

/* from k26764 */
static C_word C_fcall stub4677(C_word C_buf,C_word C_a0) C_regparm;
C_regparm static C_word C_fcall stub4677(C_word C_buf,C_word C_a0){
C_word C_r=C_SCHEME_UNDEFINED,*C_a=(C_word*)C_buf;
MidiMessage *t0=(MidiMessage *)C_c_pointer_or_null(C_a0);
C_r=C_mpointer_or_false(&C_a,(void*)mm_copy(t0));
return C_r;}

/* from k26749 */
static C_word C_fcall stub4669(C_word C_buf,C_word C_a0) C_regparm;
C_regparm static C_word C_fcall stub4669(C_word C_buf,C_word C_a0){
C_word C_r=C_SCHEME_UNDEFINED,*C_a=(C_word*)C_buf;
MidiMessage *t0=(MidiMessage *)C_c_pointer_or_null(C_a0);
mm_free(t0);
return C_r;}

/* from k26731 */
static C_word C_fcall stub4661(C_word C_buf,C_word C_a0,C_word C_a1) C_regparm;
C_regparm static C_word C_fcall stub4661(C_word C_buf,C_word C_a0,C_word C_a1){
C_word C_r=C_SCHEME_UNDEFINED,*C_a=(C_word*)C_buf;
MidiMessage *t0=(MidiMessage *)C_c_pointer_or_null(C_a0);
int t1=(int )C_unfix(C_a1);
C_r=C_mk_bool(mm_is_type(t0,t1));
return C_r;}

/* from k26304 */
static C_word C_fcall stub4646(C_word C_buf,C_word C_a0,C_word C_a1,C_word C_a2,C_word C_a3,C_word C_a4) C_regparm;
C_regparm static C_word C_fcall stub4646(C_word C_buf,C_word C_a0,C_word C_a1,C_word C_a2,C_word C_a3,C_word C_a4){
C_word C_r=C_SCHEME_UNDEFINED,*C_a=(C_word*)C_buf;
int t0=(int )C_unfix(C_a0);
double t1=(double )C_c_double(C_a1);
int t2=(int )C_unfix(C_a2);
int t3=(int )C_unfix(C_a3);
int t4=(int )C_unfix(C_a4);
C_r=C_mpointer_or_false(&C_a,(void*)mm_make(t0,t1,t2,t3,t4));
return C_r;}

/* from k26261 */
static C_word C_fcall stub4567(C_word C_buf,C_word C_a0,C_word C_a1) C_regparm;
C_regparm static C_word C_fcall stub4567(C_word C_buf,C_word C_a0,C_word C_a1){
C_word C_r=C_SCHEME_UNDEFINED,*C_a=(C_word*)C_buf;
MidiMessage *t0=(MidiMessage *)C_c_pointer_or_null(C_a0);
int t1=(int )C_unfix(C_a1);
C_r=C_mk_bool(mm_is_type(t0,t1));
return C_r;}

/* from k25834 */
static C_word C_fcall stub4552(C_word C_buf,C_word C_a0,C_word C_a1,C_word C_a2,C_word C_a3,C_word C_a4) C_regparm;
C_regparm static C_word C_fcall stub4552(C_word C_buf,C_word C_a0,C_word C_a1,C_word C_a2,C_word C_a3,C_word C_a4){
C_word C_r=C_SCHEME_UNDEFINED,*C_a=(C_word*)C_buf;
int t0=(int )C_unfix(C_a0);
double t1=(double )C_c_double(C_a1);
int t2=(int )C_unfix(C_a2);
int t3=(int )C_unfix(C_a3);
int t4=(int )C_unfix(C_a4);
C_r=C_mpointer_or_false(&C_a,(void*)mm_make(t0,t1,t2,t3,t4));
return C_r;}

/* from k25791 */
static C_word C_fcall stub4473(C_word C_buf,C_word C_a0,C_word C_a1) C_regparm;
C_regparm static C_word C_fcall stub4473(C_word C_buf,C_word C_a0,C_word C_a1){
C_word C_r=C_SCHEME_UNDEFINED,*C_a=(C_word*)C_buf;
MidiMessage *t0=(MidiMessage *)C_c_pointer_or_null(C_a0);
int t1=(int )C_unfix(C_a1);
C_r=C_mk_bool(mm_is_type(t0,t1));
return C_r;}

/* from k25364 */
static C_word C_fcall stub4458(C_word C_buf,C_word C_a0,C_word C_a1,C_word C_a2,C_word C_a3,C_word C_a4) C_regparm;
C_regparm static C_word C_fcall stub4458(C_word C_buf,C_word C_a0,C_word C_a1,C_word C_a2,C_word C_a3,C_word C_a4){
C_word C_r=C_SCHEME_UNDEFINED,*C_a=(C_word*)C_buf;
int t0=(int )C_unfix(C_a0);
double t1=(double )C_c_double(C_a1);
int t2=(int )C_unfix(C_a2);
int t3=(int )C_unfix(C_a3);
int t4=(int )C_unfix(C_a4);
C_r=C_mpointer_or_false(&C_a,(void*)mm_make(t0,t1,t2,t3,t4));
return C_r;}

/* from k25321 */
static C_word C_fcall stub4379(C_word C_buf,C_word C_a0,C_word C_a1) C_regparm;
C_regparm static C_word C_fcall stub4379(C_word C_buf,C_word C_a0,C_word C_a1){
C_word C_r=C_SCHEME_UNDEFINED,*C_a=(C_word*)C_buf;
MidiMessage *t0=(MidiMessage *)C_c_pointer_or_null(C_a0);
int t1=(int )C_unfix(C_a1);
C_r=C_mk_bool(mm_is_type(t0,t1));
return C_r;}

/* from k24619 */
static C_word C_fcall stub4363(C_word C_buf,C_word C_a0,C_word C_a1,C_word C_a2,C_word C_a3,C_word C_a4) C_regparm;
C_regparm static C_word C_fcall stub4363(C_word C_buf,C_word C_a0,C_word C_a1,C_word C_a2,C_word C_a3,C_word C_a4){
C_word C_r=C_SCHEME_UNDEFINED,*C_a=(C_word*)C_buf;
int t0=(int )C_unfix(C_a0);
double t1=(double )C_c_double(C_a1);
int t2=(int )C_unfix(C_a2);
int t3=(int )C_unfix(C_a3);
int t4=(int )C_unfix(C_a4);
C_r=C_mpointer_or_false(&C_a,(void*)mm_make(t0,t1,t2,t3,t4));
return C_r;}

/* from k24573 */
static C_word C_fcall stub4247(C_word C_buf,C_word C_a0,C_word C_a1) C_regparm;
C_regparm static C_word C_fcall stub4247(C_word C_buf,C_word C_a0,C_word C_a1){
C_word C_r=C_SCHEME_UNDEFINED,*C_a=(C_word*)C_buf;
MidiMessage *t0=(MidiMessage *)C_c_pointer_or_null(C_a0);
int t1=(int )C_unfix(C_a1);
C_r=C_mk_bool(mm_is_type(t0,t1));
return C_r;}

/* from k23871 */
static C_word C_fcall stub4231(C_word C_buf,C_word C_a0,C_word C_a1,C_word C_a2,C_word C_a3,C_word C_a4) C_regparm;
C_regparm static C_word C_fcall stub4231(C_word C_buf,C_word C_a0,C_word C_a1,C_word C_a2,C_word C_a3,C_word C_a4){
C_word C_r=C_SCHEME_UNDEFINED,*C_a=(C_word*)C_buf;
int t0=(int )C_unfix(C_a0);
double t1=(double )C_c_double(C_a1);
int t2=(int )C_unfix(C_a2);
int t3=(int )C_unfix(C_a3);
int t4=(int )C_unfix(C_a4);
C_r=C_mpointer_or_false(&C_a,(void*)mm_make(t0,t1,t2,t3,t4));
return C_r;}

/* from k23825 */
static C_word C_fcall stub4115(C_word C_buf,C_word C_a0,C_word C_a1) C_regparm;
C_regparm static C_word C_fcall stub4115(C_word C_buf,C_word C_a0,C_word C_a1){
C_word C_r=C_SCHEME_UNDEFINED,*C_a=(C_word*)C_buf;
MidiMessage *t0=(MidiMessage *)C_c_pointer_or_null(C_a0);
int t1=(int )C_unfix(C_a1);
C_r=C_mk_bool(mm_is_type(t0,t1));
return C_r;}

/* from k23398 */
static C_word C_fcall stub4100(C_word C_buf,C_word C_a0,C_word C_a1,C_word C_a2,C_word C_a3,C_word C_a4) C_regparm;
C_regparm static C_word C_fcall stub4100(C_word C_buf,C_word C_a0,C_word C_a1,C_word C_a2,C_word C_a3,C_word C_a4){
C_word C_r=C_SCHEME_UNDEFINED,*C_a=(C_word*)C_buf;
int t0=(int )C_unfix(C_a0);
double t1=(double )C_c_double(C_a1);
int t2=(int )C_unfix(C_a2);
int t3=(int )C_unfix(C_a3);
int t4=(int )C_unfix(C_a4);
C_r=C_mpointer_or_false(&C_a,(void*)mm_make(t0,t1,t2,t3,t4));
return C_r;}

/* from k23355 */
static C_word C_fcall stub4021(C_word C_buf,C_word C_a0,C_word C_a1) C_regparm;
C_regparm static C_word C_fcall stub4021(C_word C_buf,C_word C_a0,C_word C_a1){
C_word C_r=C_SCHEME_UNDEFINED,*C_a=(C_word*)C_buf;
MidiMessage *t0=(MidiMessage *)C_c_pointer_or_null(C_a0);
int t1=(int )C_unfix(C_a1);
C_r=C_mk_bool(mm_is_type(t0,t1));
return C_r;}

/* from k22653 */
static C_word C_fcall stub4005(C_word C_buf,C_word C_a0,C_word C_a1,C_word C_a2,C_word C_a3,C_word C_a4) C_regparm;
C_regparm static C_word C_fcall stub4005(C_word C_buf,C_word C_a0,C_word C_a1,C_word C_a2,C_word C_a3,C_word C_a4){
C_word C_r=C_SCHEME_UNDEFINED,*C_a=(C_word*)C_buf;
int t0=(int )C_unfix(C_a0);
double t1=(double )C_c_double(C_a1);
int t2=(int )C_unfix(C_a2);
int t3=(int )C_unfix(C_a3);
int t4=(int )C_unfix(C_a4);
C_r=C_mpointer_or_false(&C_a,(void*)mm_make(t0,t1,t2,t3,t4));
return C_r;}

/* from tb:ranbrown in k5905 in k5612 in k5609 in k5605 in k5314 in k5311 in k5308 in k5305 */
static C_word C_fcall stub301(C_word C_buf) C_regparm;
C_regparm static C_word C_fcall stub301(C_word C_buf){
C_word C_r=C_SCHEME_UNDEFINED,*C_a=(C_word*)C_buf;
C_r=C_flonum(&C_a,Toolbox::ranbrown());
return C_r;}

/* from tb:ranpink in k5905 in k5612 in k5609 in k5605 in k5314 in k5311 in k5308 in k5305 */
static C_word C_fcall stub298(C_word C_buf) C_regparm;
C_regparm static C_word C_fcall stub298(C_word C_buf){
C_word C_r=C_SCHEME_UNDEFINED,*C_a=(C_word*)C_buf;
C_r=C_flonum(&C_a,Toolbox::ranpink());
return C_r;}

/* from k6563 */
static C_word C_fcall stub295(C_word C_buf,C_word C_a0) C_regparm;
C_regparm static C_word C_fcall stub295(C_word C_buf,C_word C_a0){
C_word C_r=C_SCHEME_UNDEFINED,*C_a=(C_word*)C_buf;
float t0=(float )C_c_double(C_a0);
C_r=C_fix((C_word)Toolbox::ranpoisson(t0));
return C_r;}

/* from tb:rancauchy in k5905 in k5612 in k5609 in k5605 in k5314 in k5311 in k5308 in k5305 */
static C_word C_fcall stub291(C_word C_buf) C_regparm;
C_regparm static C_word C_fcall stub291(C_word C_buf){
C_word C_r=C_SCHEME_UNDEFINED,*C_a=(C_word*)C_buf;
C_r=C_flonum(&C_a,Toolbox::rancauchy());
return C_r;}

/* from k6553 */
static C_word C_fcall stub287(C_word C_buf,C_word C_a0) C_regparm;
C_regparm static C_word C_fcall stub287(C_word C_buf,C_word C_a0){
C_word C_r=C_SCHEME_UNDEFINED,*C_a=(C_word*)C_buf;
float t0=(float )C_c_double(C_a0);
C_r=C_flonum(&C_a,Toolbox::rangamma(t0));
return C_r;}

/* from k6546 */
static C_word C_fcall stub281(C_word C_buf,C_word C_a0,C_word C_a1) C_regparm;
C_regparm static C_word C_fcall stub281(C_word C_buf,C_word C_a0,C_word C_a1){
C_word C_r=C_SCHEME_UNDEFINED,*C_a=(C_word*)C_buf;
float t0=(float )C_c_double(C_a0);
float t1=(float )C_c_double(C_a1);
C_r=C_flonum(&C_a,Toolbox::ranbeta(t0,t1));
return C_r;}

/* from k6535 */
static C_word C_fcall stub275(C_word C_buf,C_word C_a0) C_regparm;
C_regparm static C_word C_fcall stub275(C_word C_buf,C_word C_a0){
C_word C_r=C_SCHEME_UNDEFINED,*C_a=(C_word*)C_buf;
float t0=(float )C_c_double(C_a0);
C_r=C_flonum(&C_a,Toolbox::ranexp(t0));
return C_r;}

/* from k6528 */
static C_word C_fcall stub269(C_word C_buf,C_word C_a0,C_word C_a1) C_regparm;
C_regparm static C_word C_fcall stub269(C_word C_buf,C_word C_a0,C_word C_a1){
C_word C_r=C_SCHEME_UNDEFINED,*C_a=(C_word*)C_buf;
float t0=(float )C_c_double(C_a0);
float t1=(float )C_c_double(C_a1);
C_r=C_flonum(&C_a,Toolbox::rangauss(t0,t1));
return C_r;}

/* from tb:ranmiddle in k5905 in k5612 in k5609 in k5605 in k5314 in k5311 in k5308 in k5305 */
static C_word C_fcall stub264(C_word C_buf) C_regparm;
C_regparm static C_word C_fcall stub264(C_word C_buf){
C_word C_r=C_SCHEME_UNDEFINED,*C_a=(C_word*)C_buf;
C_r=C_flonum(&C_a,Toolbox::ranmiddle());
return C_r;}

/* from tb:ranhigh in k5905 in k5612 in k5609 in k5605 in k5314 in k5311 in k5308 in k5305 */
static C_word C_fcall stub261(C_word C_buf) C_regparm;
C_regparm static C_word C_fcall stub261(C_word C_buf){
C_word C_r=C_SCHEME_UNDEFINED,*C_a=(C_word*)C_buf;
C_r=C_flonum(&C_a,Toolbox::ranhigh());
return C_r;}

/* from tb:ranlow in k5905 in k5612 in k5609 in k5605 in k5314 in k5311 in k5308 in k5305 */
static C_word C_fcall stub258(C_word C_buf) C_regparm;
C_regparm static C_word C_fcall stub258(C_word C_buf){
C_word C_r=C_SCHEME_UNDEFINED,*C_a=(C_word*)C_buf;
C_r=C_flonum(&C_a,Toolbox::ranlow());
return C_r;}

/* from k6508 */
static C_word C_fcall stub253(C_word C_buf,C_word C_a0,C_word C_a1) C_regparm;
C_regparm static C_word C_fcall stub253(C_word C_buf,C_word C_a0,C_word C_a1){
C_word C_r=C_SCHEME_UNDEFINED,*C_a=(C_word*)C_buf;
float t0=(float )C_c_double(C_a0);
float t1=(float )C_c_double(C_a1);
C_r=C_flonum(&C_a,Toolbox::ran(t0,t1));
return C_r;}

/* from k6497 */
static C_word C_fcall stub247(C_word C_buf,C_word C_a0,C_word C_a1) C_regparm;
C_regparm static C_word C_fcall stub247(C_word C_buf,C_word C_a0,C_word C_a1){
C_word C_r=C_SCHEME_UNDEFINED,*C_a=(C_word*)C_buf;
int t0=(int )C_unfix(C_a0);
int t1=(int )C_unfix(C_a1);
C_r=C_fix((C_word)Toolbox::ran(t0,t1));
return C_r;}

/* from k6486 */
static C_word C_fcall stub241(C_word C_buf,C_word C_a0) C_regparm;
C_regparm static C_word C_fcall stub241(C_word C_buf,C_word C_a0){
C_word C_r=C_SCHEME_UNDEFINED,*C_a=(C_word*)C_buf;
float t0=(float )C_c_double(C_a0);
C_r=C_flonum(&C_a,Toolbox::ran(t0));
return C_r;}

/* from k6479 */
static C_word C_fcall stub237(C_word C_buf,C_word C_a0) C_regparm;
C_regparm static C_word C_fcall stub237(C_word C_buf,C_word C_a0){
C_word C_r=C_SCHEME_UNDEFINED,*C_a=(C_word*)C_buf;
int t0=(int )C_unfix(C_a0);
C_r=C_fix((C_word)Toolbox::ran(t0));
return C_r;}

/* from tb:ran-set! in k5905 in k5612 in k5609 in k5605 in k5314 in k5311 in k5308 in k5305 */
static C_word C_fcall stub233(C_word C_buf,C_word C_a0) C_regparm;
C_regparm static C_word C_fcall stub233(C_word C_buf,C_word C_a0){
C_word C_r=C_SCHEME_UNDEFINED,*C_a=(C_word*)C_buf;
C_s64 t0=(C_s64 )C_num_to_int64(C_a0);
Toolbox::ranstate_set(t0);
return C_r;}

/* from k6469 */
static C_word C_fcall stub228(C_word C_buf,C_word C_a0) C_regparm;
C_regparm static C_word C_fcall stub228(C_word C_buf,C_word C_a0){
C_word C_r=C_SCHEME_UNDEFINED,*C_a=(C_word*)C_buf;
float t0=(float )C_c_double(C_a0);
C_r=C_flonum(&C_a,Toolbox::hertz_to_keynum(t0));
return C_r;}

/* from k6462 */
static C_word C_fcall stub224(C_word C_buf,C_word C_a0) C_regparm;
C_regparm static C_word C_fcall stub224(C_word C_buf,C_word C_a0){
C_word C_r=C_SCHEME_UNDEFINED,*C_a=(C_word*)C_buf;
float t0=(float )C_c_double(C_a0);
C_r=C_fix((C_word)Toolbox::keynum_to_pc(t0));
return C_r;}

/* from k6455 */
static C_word C_fcall stub219(C_word C_buf,C_word C_a0) C_regparm;
C_regparm static C_word C_fcall stub219(C_word C_buf,C_word C_a0){
C_word C_r=C_SCHEME_UNDEFINED,*C_a=(C_word*)C_buf;
float t0=(float )C_c_double(C_a0);
C_r=C_flonum(&C_a,Toolbox::keynum_to_hertz(t0));
return C_r;}

/* from k6448 */
static C_word C_fcall stub215(C_word C_buf,C_word C_a0) C_regparm;
C_regparm static C_word C_fcall stub215(C_word C_buf,C_word C_a0){
C_word C_r=C_SCHEME_UNDEFINED,*C_a=(C_word*)C_buf;
float t0=(float )C_c_double(C_a0);
C_r=C_fix((C_word)Toolbox::scaler_to_cents(t0));
return C_r;}

/* from k6441 */
static C_word C_fcall stub210(C_word C_buf,C_word C_a0) C_regparm;
C_regparm static C_word C_fcall stub210(C_word C_buf,C_word C_a0){
C_word C_r=C_SCHEME_UNDEFINED,*C_a=(C_word*)C_buf;
int t0=(int )C_unfix(C_a0);
C_r=C_flonum(&C_a,Toolbox::cents_to_scaler(t0));
return C_r;}

/* from k6434 */
static C_word C_fcall stub203(C_word C_buf,C_word C_a0,C_word C_a1,C_word C_a2) C_regparm;
C_regparm static C_word C_fcall stub203(C_word C_buf,C_word C_a0,C_word C_a1,C_word C_a2){
C_word C_r=C_SCHEME_UNDEFINED,*C_a=(C_word*)C_buf;
float t0=(float )C_c_double(C_a0);
float t1=(float )C_c_double(C_a1);
float t2=(float )C_c_double(C_a2);
C_r=C_flonum(&C_a,Toolbox::rhythm_to_seconds(t0,t1,t2));
return C_r;}

/* from k6419 */
static C_word C_fcall stub195(C_word C_buf,C_word C_a0,C_word C_a1) C_regparm;
C_regparm static C_word C_fcall stub195(C_word C_buf,C_word C_a0,C_word C_a1){
C_word C_r=C_SCHEME_UNDEFINED,*C_a=(C_word*)C_buf;
float t0=(float )C_c_double(C_a0);
float t1=(float )C_c_double(C_a1);
C_r=C_flonum(&C_a,Toolbox::quantize(t0,t1));
return C_r;}

/* from k6408 */
static C_word C_fcall stub188(C_word C_buf,C_word C_a0,C_word C_a1) C_regparm;
C_regparm static C_word C_fcall stub188(C_word C_buf,C_word C_a0,C_word C_a1){
C_word C_r=C_SCHEME_UNDEFINED,*C_a=(C_word*)C_buf;
float t0=(float )C_c_double(C_a0);
int t1=(int )C_unfix(C_a1);
C_r=C_flonum(&C_a,Toolbox::decimals(t0,t1));
return C_r;}

/* from k6397 */
static C_word C_fcall stub183(C_word C_buf,C_word C_a0) C_regparm;
C_regparm static C_word C_fcall stub183(C_word C_buf,C_word C_a0){
C_word C_r=C_SCHEME_UNDEFINED,*C_a=(C_word*)C_buf;
float t0=(float )C_c_double(C_a0);
C_r=C_fix((C_word)Toolbox::float_to_fixnum(t0));
return C_r;}

/* from k6390 */
static C_word C_fcall stub174(C_word C_buf,C_word C_a0,C_word C_a1,C_word C_a2,C_word C_a3,C_word C_a4,C_word C_a5) C_regparm;
C_regparm static C_word C_fcall stub174(C_word C_buf,C_word C_a0,C_word C_a1,C_word C_a2,C_word C_a3,C_word C_a4,C_word C_a5){
C_word C_r=C_SCHEME_UNDEFINED,*C_a=(C_word*)C_buf;
float t0=(float )C_c_double(C_a0);
float t1=(float )C_c_double(C_a1);
float t2=(float )C_c_double(C_a2);
int t3=(int )C_unfix(C_a3);
int t4=(int )C_unfix(C_a4);
float t5=(float )C_c_double(C_a5);
C_r=C_fix((C_word)Toolbox::discrete(t0,t1,t2,t3,t4,t5));
return C_r;}

/* from k6363 */
static C_word C_fcall stub159(C_word C_buf,C_word C_a0,C_word C_a1,C_word C_a2,C_word C_a3,C_word C_a4,C_word C_a5) C_regparm;
C_regparm static C_word C_fcall stub159(C_word C_buf,C_word C_a0,C_word C_a1,C_word C_a2,C_word C_a3,C_word C_a4,C_word C_a5){
C_word C_r=C_SCHEME_UNDEFINED,*C_a=(C_word*)C_buf;
float t0=(float )C_c_double(C_a0);
float t1=(float )C_c_double(C_a1);
float t2=(float )C_c_double(C_a2);
float t3=(float )C_c_double(C_a3);
float t4=(float )C_c_double(C_a4);
float t5=(float )C_c_double(C_a5);
C_r=C_flonum(&C_a,Toolbox::rescale(t0,t1,t2,t3,t4,t5));
return C_r;}

/* from k5932 */
static C_word C_fcall stub95(C_word C_buf,C_word C_a0) C_regparm;
C_regparm static C_word C_fcall stub95(C_word C_buf,C_word C_a0){
C_word C_r=C_SCHEME_UNDEFINED,*C_a=(C_word*)C_buf;
char * t0=(char * )C_string_or_null(C_a0);
set_current_directory(t0);
return C_r;}

/* from f_5914 in cwd in k5905 in k5612 in k5609 in k5605 in k5314 in k5311 in k5308 in k5305 */
static C_word C_fcall stub90(C_word C_buf) C_regparm;
C_regparm static C_word C_fcall stub90(C_word C_buf){
C_word C_r=C_SCHEME_UNDEFINED,*C_a=(C_word*)C_buf;
C_r=C_mpointer(&C_a,(void*)get_current_directory());
return C_r;}

C_noret_decl(C_grace_toplevel)
C_externexport void C_ccall C_grace_toplevel(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_5307)
static void C_ccall f_5307(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_5310)
static void C_ccall f_5310(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_5313)
static void C_ccall f_5313(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_5316)
static void C_ccall f_5316(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_33500)
static void C_ccall f_33500(C_word c,C_word t0,C_word t1,C_word t2,...) C_noret;
C_noret_decl(f_33500)
static void C_ccall f_33500r(C_word t0,C_word t1,C_word t2,C_word t4) C_noret;
C_noret_decl(f_5607)
static void C_ccall f_5607(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_5611)
static void C_ccall f_5611(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_33448)
static void C_ccall f_33448(C_word c,C_word t0,C_word t1,C_word t2,C_word t3) C_noret;
C_noret_decl(f_33495)
static void C_ccall f_33495(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_33485)
static void C_ccall f_33485(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_33452)
static void C_ccall f_33452(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_5614)
static void C_ccall f_5614(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_33442)
static void C_ccall f_33442(C_word c,C_word t0,C_word t1,C_word t2,...) C_noret;
C_noret_decl(f_33442)
static void C_ccall f_33442r(C_word t0,C_word t1,C_word t2,C_word t4) C_noret;
C_noret_decl(f_5907)
static void C_ccall f_5907(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_7923)
static void C_ccall f_7923(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_33226)
static void C_fcall f_33226(C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_33440)
static void C_ccall f_33440(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_33260)
static void C_ccall f_33260(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_33272)
static void C_ccall f_33272(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_33276)
static void C_ccall f_33276(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_33280)
static void C_ccall f_33280(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_33424)
static void C_ccall f_33424(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_33286)
static void C_fcall f_33286(C_word t0,C_word t1,C_word t2,C_word t3,C_word t4,C_word t5,C_word t6,C_word t7,C_word t8,C_word t9,C_word t10,C_word t11,C_word t12,C_word t13) C_noret;
C_noret_decl(f_33306)
static void C_fcall f_33306(C_word t0,C_word t1) C_noret;
C_noret_decl(f_33309)
static void C_fcall f_33309(C_word t0,C_word t1) C_noret;
C_noret_decl(f_33317)
static void C_ccall f_33317(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_33324)
static void C_ccall f_33324(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_33327)
static void C_ccall f_33327(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_33331)
static void C_ccall f_33331(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_33338)
static void C_ccall f_33338(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_33341)
static void C_ccall f_33341(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_33345)
static void C_ccall f_33345(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_33352)
static void C_ccall f_33352(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_33296)
static void C_ccall f_33296(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_33249)
static void C_ccall f_33249(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_33239)
static void C_ccall f_33239(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_33242)
static void C_ccall f_33242(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_7926)
static void C_ccall f_7926(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_33212)
static void C_ccall f_33212(C_word c,C_word t0,C_word t1,C_word t2,C_word t3) C_noret;
C_noret_decl(f_33220)
static void C_ccall f_33220(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_33224)
static void C_ccall f_33224(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_15519)
static void C_ccall f_15519(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_15570)
static void C_ccall f_15570(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_33202)
static void C_ccall f_33202(C_word c,C_word t0,C_word t1,C_word t2,C_word t3) C_noret;
C_noret_decl(f_33210)
static void C_ccall f_33210(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_15675)
static void C_ccall f_15675(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_33099)
static void C_ccall f_33099(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,...) C_noret;
C_noret_decl(f_33099)
static void C_ccall f_33099r(C_word t0,C_word t1,C_word t2,C_word t3,C_word t5) C_noret;
C_noret_decl(f_33162)
static void C_ccall f_33162(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_33166)
static void C_ccall f_33166(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_33180)
static void C_fcall f_33180(C_word t0,C_word t1) C_noret;
C_noret_decl(f_33102)
static void C_fcall f_33102(C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_33122)
static void C_ccall f_33122(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_33126)
static void C_ccall f_33126(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_15678)
static void C_ccall f_15678(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_33085)
static void C_ccall f_33085(C_word c,C_word t0,C_word t1,C_word t2,C_word t3) C_noret;
C_noret_decl(f_33093)
static void C_ccall f_33093(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_33097)
static void C_ccall f_33097(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_15871)
static void C_ccall f_15871(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_33059)
static void C_ccall f_33059(C_word c,C_word t0,C_word t1,C_word t2,C_word t3) C_noret;
C_noret_decl(f_33063)
static void C_ccall f_33063(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_33069)
static void C_ccall f_33069(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_33080)
static void C_ccall f_33080(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_33076)
static void C_ccall f_33076(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_15940)
static void C_ccall f_15940(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_33037)
static void C_ccall f_33037(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_17185)
static void C_ccall f_17185(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_33017)
static void C_ccall f_33017(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_17188)
static void C_ccall f_17188(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_32977)
static void C_ccall f_32977(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_17191)
static void C_ccall f_17191(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_32883)
static void C_ccall f_32883(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4) C_noret;
C_noret_decl(f_32887)
static void C_ccall f_32887(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_32890)
static void C_ccall f_32890(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_32908)
static void C_ccall f_32908(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_32911)
static void C_ccall f_32911(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_32942)
static void C_ccall f_32942(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_32914)
static void C_fcall f_32914(C_word t0,C_word t1) C_noret;
C_noret_decl(f_32920)
static void C_ccall f_32920(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_32873)
static void C_ccall f_32873(C_word c,C_word t0,C_word t1,C_word t2,C_word t3) C_noret;
C_noret_decl(f_32867)
static void C_ccall f_32867(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_17194)
static void C_ccall f_17194(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_32775)
static void C_ccall f_32775(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_32777)
static void C_ccall f_32777(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4) C_noret;
C_noret_decl(f_32781)
static void C_ccall f_32781(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_32784)
static void C_ccall f_32784(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_32787)
static void C_ccall f_32787(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_32827)
static void C_ccall f_32827(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_32819)
static void C_ccall f_32819(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_32790)
static void C_ccall f_32790(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_32793)
static void C_ccall f_32793(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_32796)
static void C_ccall f_32796(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_32767)
static void C_ccall f_32767(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_17197)
static void C_ccall f_17197(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_32739)
static void C_ccall f_32739(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_17200)
static void C_ccall f_17200(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_32703)
static void C_ccall f_32703(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4) C_noret;
C_noret_decl(f_32715)
static void C_ccall f_32715(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_32711)
static void C_ccall f_32711(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_32685)
static void C_ccall f_32685(C_word c,C_word t0,C_word t1,C_word t2,C_word t3) C_noret;
C_noret_decl(f_32679)
static void C_ccall f_32679(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_17203)
static void C_ccall f_17203(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_32593)
static void C_ccall f_32593(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4) C_noret;
C_noret_decl(f_32597)
static void C_ccall f_32597(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_32600)
static void C_ccall f_32600(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_32603)
static void C_ccall f_32603(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_32616)
static void C_ccall f_32616(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_32562)
static void C_ccall f_32562(C_word c,C_word t0,C_word t1,C_word t2,C_word t3) C_noret;
C_noret_decl(f_32566)
static void C_ccall f_32566(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_32581)
static void C_ccall f_32581(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_32556)
static void C_ccall f_32556(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_17206)
static void C_ccall f_17206(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_32442)
static void C_ccall f_32442(C_word c,C_word t0,C_word t1,C_word t2,C_word t3) C_noret;
C_noret_decl(f_32458)
static void C_ccall f_32458(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_32469)
static void C_ccall f_32469(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_32436)
static void C_ccall f_32436(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_17262)
static void C_ccall f_17262(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_32303)
static void C_ccall f_32303(C_word c,C_word t0,C_word t1,C_word t2,C_word t3) C_noret;
C_noret_decl(f_32326)
static void C_ccall f_32326(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_32323)
static void C_ccall f_32323(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_32297)
static void C_ccall f_32297(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_17265)
static void C_ccall f_17265(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_32151)
static void C_ccall f_32151(C_word c,C_word t0,C_word t1,C_word t2,C_word t3) C_noret;
C_noret_decl(f_32169)
static void C_ccall f_32169(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_32178)
static void C_ccall f_32178(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_32145)
static void C_ccall f_32145(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_17268)
static void C_ccall f_17268(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_32098)
static void C_ccall f_32098(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4) C_noret;
C_noret_decl(f_32102)
static void C_ccall f_32102(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_32105)
static void C_ccall f_32105(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_32121)
static void C_ccall f_32121(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_32080)
static void C_ccall f_32080(C_word c,C_word t0,C_word t1,C_word t2,C_word t3) C_noret;
C_noret_decl(f_32074)
static void C_ccall f_32074(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_17271)
static void C_ccall f_17271(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_31998)
static void C_ccall f_31998(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_17410)
static void C_ccall f_17410(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_31924)
static void C_ccall f_31924(C_word c,C_word t0,C_word t1,C_word t2,C_word t3) C_noret;
C_noret_decl(f_31931)
static void C_ccall f_31931(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_31918)
static void C_ccall f_31918(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_17413)
static void C_ccall f_17413(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_31814)
static void C_ccall f_31814(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4) C_noret;
C_noret_decl(f_31822)
static void C_ccall f_31822(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_31788)
static void C_ccall f_31788(C_word c,C_word t0,C_word t1,C_word t2,C_word t3) C_noret;
C_noret_decl(f_31805)
static void C_ccall f_31805(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_31796)
static void C_fcall f_31796(C_word t0,C_word t1) C_noret;
C_noret_decl(f_31782)
static void C_ccall f_31782(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_17416)
static void C_ccall f_17416(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_31738)
static void C_ccall f_31738(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_17419)
static void C_ccall f_17419(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_31656)
static void C_ccall f_31656(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4) C_noret;
C_noret_decl(f_31667)
static void C_ccall f_31667(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_31669)
static void C_fcall f_31669(C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_31698)
static void C_ccall f_31698(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_31634)
static void C_ccall f_31634(C_word c,C_word t0,C_word t1,C_word t2,C_word t3) C_noret;
C_noret_decl(f_31650)
static void C_ccall f_31650(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_31628)
static void C_ccall f_31628(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_17422)
static void C_ccall f_17422(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_31581)
static void C_ccall f_31581(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4) C_noret;
C_noret_decl(f_31585)
static void C_ccall f_31585(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_31592)
static void C_ccall f_31592(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_31559)
static void C_ccall f_31559(C_word c,C_word t0,C_word t1,C_word t2,C_word t3) C_noret;
C_noret_decl(f_31575)
static void C_ccall f_31575(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_31553)
static void C_ccall f_31553(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_17425)
static void C_ccall f_17425(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_31421)
static void C_ccall f_31421(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4) C_noret;
C_noret_decl(f_31461)
static void C_ccall f_31461(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_31425)
static void C_ccall f_31425(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_31441)
static void C_ccall f_31441(C_word c,C_word t0,C_word t1,C_word t2,...) C_noret;
C_noret_decl(f_31441)
static void C_ccall f_31441r(C_word t0,C_word t1,C_word t2,C_word t4) C_noret;
C_noret_decl(f_31453)
static void C_ccall f_31453(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_31457)
static void C_ccall f_31457(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_31449)
static void C_ccall f_31449(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_31360)
static void C_ccall f_31360(C_word c,C_word t0,C_word t1,C_word t2,C_word t3) C_noret;
C_noret_decl(f_31407)
static void C_ccall f_31407(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_31367)
static void C_fcall f_31367(C_word t0,C_word t1) C_noret;
C_noret_decl(f_31378)
static void C_ccall f_31378(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_31354)
static void C_ccall f_31354(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_17428)
static void C_ccall f_17428(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_31334)
static void C_ccall f_31334(C_word c,C_word t0,C_word t1,C_word t2,C_word t3) C_noret;
C_noret_decl(f_31328)
static void C_ccall f_31328(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_17431)
static void C_ccall f_17431(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_31308)
static void C_ccall f_31308(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_31312)
static void C_ccall f_31312(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_31300)
static void C_ccall f_31300(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_17434)
static void C_ccall f_17434(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_31280)
static void C_ccall f_31280(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_31284)
static void C_ccall f_31284(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_31272)
static void C_ccall f_31272(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_17437)
static void C_ccall f_17437(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_31252)
static void C_ccall f_31252(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_31256)
static void C_ccall f_31256(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_31244)
static void C_ccall f_31244(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_17440)
static void C_ccall f_17440(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_31224)
static void C_ccall f_31224(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_31228)
static void C_ccall f_31228(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_31216)
static void C_ccall f_31216(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_17443)
static void C_ccall f_17443(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_31115)
static void C_ccall f_31115(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4) C_noret;
C_noret_decl(f_31085)
static void C_ccall f_31085(C_word c,C_word t0,C_word t1,C_word t2,C_word t3) C_noret;
C_noret_decl(f_31109)
static void C_ccall f_31109(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_31079)
static void C_ccall f_31079(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_17446)
static void C_ccall f_17446(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_31029)
static void C_ccall f_31029(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_31031)
static void C_ccall f_31031(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4) C_noret;
C_noret_decl(f_31035)
static void C_ccall f_31035(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_31063)
static void C_ccall f_31063(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_31055)
static void C_ccall f_31055(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_31051)
static void C_ccall f_31051(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_31038)
static void C_ccall f_31038(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_31021)
static void C_ccall f_31021(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_17449)
static void C_ccall f_17449(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_30968)
static void C_ccall f_30968(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_30970)
static void C_ccall f_30970(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4) C_noret;
C_noret_decl(f_30974)
static void C_ccall f_30974(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_31005)
static void C_ccall f_31005(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_30997)
static void C_ccall f_30997(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_30993)
static void C_ccall f_30993(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_30977)
static void C_ccall f_30977(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_30980)
static void C_ccall f_30980(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_30960)
static void C_ccall f_30960(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_17452)
static void C_ccall f_17452(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_30910)
static void C_ccall f_30910(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4) C_noret;
C_noret_decl(f_30924)
static void C_ccall f_30924(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_30916)
static void C_ccall f_30916(C_word c,C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_30875)
static void C_ccall f_30875(C_word c,C_word t0,C_word t1,C_word t2,C_word t3) C_noret;
C_noret_decl(f_30908)
static void C_ccall f_30908(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_30869)
static void C_ccall f_30869(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_17455)
static void C_ccall f_17455(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_30816)
static void C_ccall f_30816(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4) C_noret;
C_noret_decl(f_30820)
static void C_ccall f_30820(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_30833)
static void C_ccall f_30833(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_30825)
static void C_ccall f_30825(C_word c,C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_30773)
static void C_ccall f_30773(C_word c,C_word t0,C_word t1,C_word t2,C_word t3) C_noret;
C_noret_decl(f_30806)
static void C_ccall f_30806(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_30767)
static void C_ccall f_30767(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_17458)
static void C_ccall f_17458(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_30687)
static void C_ccall f_30687(C_word c,C_word t0,C_word t1,C_word t2,C_word t3) C_noret;
C_noret_decl(f_30681)
static void C_ccall f_30681(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_17461)
static void C_ccall f_17461(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_30450)
static void C_ccall f_30450(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4) C_noret;
C_noret_decl(f_30454)
static void C_ccall f_30454(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_30462)
static void C_fcall f_30462(C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_30485)
static void C_ccall f_30485(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_30488)
static void C_ccall f_30488(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_30491)
static void C_ccall f_30491(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_30494)
static void C_ccall f_30494(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_30554)
static void C_ccall f_30554(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_30561)
static void C_ccall f_30561(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_30571)
static void C_ccall f_30571(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_30581)
static void C_ccall f_30581(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_30595)
static void C_ccall f_30595(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_30605)
static void C_ccall f_30605(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_30615)
static void C_ccall f_30615(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_30625)
static void C_ccall f_30625(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_30497)
static void C_fcall f_30497(C_word t0,C_word t1) C_noret;
C_noret_decl(f_30521)
static void C_fcall f_30521(C_word t0,C_word t1) C_noret;
C_noret_decl(f_30500)
static void C_fcall f_30500(C_word t0,C_word t1) C_noret;
C_noret_decl(f_30407)
static void C_ccall f_30407(C_word c,C_word t0,C_word t1,C_word t2,C_word t3) C_noret;
C_noret_decl(f_30440)
static void C_ccall f_30440(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_30401)
static void C_ccall f_30401(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_17464)
static void C_ccall f_17464(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_30319)
static void C_ccall f_30319(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4) C_noret;
C_noret_decl(f_30323)
static void C_ccall f_30323(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_30329)
static void C_ccall f_30329(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_30349)
static void C_ccall f_30349(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_30293)
static void C_ccall f_30293(C_word c,C_word t0,C_word t1,C_word t2,C_word t3) C_noret;
C_noret_decl(f_30303)
static void C_fcall f_30303(C_word t0,C_word t1) C_noret;
C_noret_decl(f_30287)
static void C_ccall f_30287(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_17467)
static void C_ccall f_17467(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_30164)
static void C_ccall f_30164(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4) C_noret;
C_noret_decl(f_30168)
static void C_ccall f_30168(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_30096)
static void C_ccall f_30096(C_word c,C_word t0,C_word t1,C_word t2,C_word t3) C_noret;
C_noret_decl(f_30115)
static void C_ccall f_30115(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_30150)
static void C_ccall f_30150(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_30121)
static void C_fcall f_30121(C_word t0,C_word t1) C_noret;
C_noret_decl(f_30125)
static void C_ccall f_30125(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_30139)
static void C_ccall f_30139(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_30128)
static void C_fcall f_30128(C_word t0,C_word t1) C_noret;
C_noret_decl(f_30109)
static void C_fcall f_30109(C_word t0,C_word t1) C_noret;
C_noret_decl(f_30090)
static void C_ccall f_30090(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_17470)
static void C_ccall f_17470(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_29818)
static void C_ccall f_29818(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_17993)
static void C_ccall f_17993(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_29770)
static void C_ccall f_29770(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_29762)
static void C_ccall f_29762(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_17996)
static void C_ccall f_17996(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_29642)
static void C_ccall f_29642(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4) C_noret;
C_noret_decl(f_18002)
static void C_ccall f_18002(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_18477)
static void C_ccall f_18477(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_18511)
static void C_ccall f_18511(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_18503)
static void C_ccall f_18503(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_18499)
static void C_ccall f_18499(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_18484)
static void C_ccall f_18484(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_18488)
static void C_ccall f_18488(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_18481)
static void C_ccall f_18481(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_18020)
static void C_fcall f_18020(C_word t0,C_word t1) C_noret;
C_noret_decl(f_18470)
static void C_ccall f_18470(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_18466)
static void C_ccall f_18466(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_18027)
static void C_fcall f_18027(C_word t0,C_word t1) C_noret;
C_noret_decl(f_18341)
static void C_fcall f_18341(C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_18362)
static void C_ccall f_18362(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_18364)
static void C_fcall f_18364(C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_18378)
static void C_ccall f_18378(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_18431)
static void C_ccall f_18431(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_18381)
static void C_fcall f_18381(C_word t0,C_word t1) C_noret;
C_noret_decl(f_18416)
static void C_ccall f_18416(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_18384)
static void C_fcall f_18384(C_word t0,C_word t1) C_noret;
C_noret_decl(f_18397)
static void C_ccall f_18397(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_18409)
static void C_ccall f_18409(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_18401)
static void C_ccall f_18401(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_18387)
static void C_fcall f_18387(C_word t0,C_word t1) C_noret;
C_noret_decl(f_18351)
static void C_ccall f_18351(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_18030)
static void C_ccall f_18030(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_18305)
static void C_fcall f_18305(C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_18331)
static void C_ccall f_18331(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_18316)
static void C_ccall f_18316(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_18033)
static void C_ccall f_18033(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_18037)
static void C_ccall f_18037(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_18249)
static void C_fcall f_18249(C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_18259)
static void C_ccall f_18259(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_18262)
static void C_ccall f_18262(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_18283)
static void C_ccall f_18283(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_18265)
static void C_fcall f_18265(C_word t0,C_word t1) C_noret;
C_noret_decl(f_18269)
static void C_ccall f_18269(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_18040)
static void C_ccall f_18040(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_18043)
static void C_fcall f_18043(C_word t0,C_word t1) C_noret;
C_noret_decl(f_18212)
static void C_ccall f_18212(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_18220)
static void C_ccall f_18220(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_18216)
static void C_ccall f_18216(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_18046)
static void C_fcall f_18046(C_word t0,C_word t1) C_noret;
C_noret_decl(f_18074)
static void C_ccall f_18074(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_18077)
static void C_ccall f_18077(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_18080)
static void C_ccall f_18080(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_18083)
static void C_ccall f_18083(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_18086)
static void C_ccall f_18086(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_18145)
static void C_ccall f_18145(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_29596)
static void C_ccall f_29596(C_word c,C_word t0,C_word t1,C_word t2,C_word t3) C_noret;
C_noret_decl(f_29612)
static void C_ccall f_29612(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_29615)
static void C_ccall f_29615(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_29618)
static void C_fcall f_29618(C_word t0,C_word t1) C_noret;
C_noret_decl(f_29621)
static void C_fcall f_29621(C_word t0,C_word t1) C_noret;
C_noret_decl(f_29632)
static void C_ccall f_29632(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_29590)
static void C_ccall f_29590(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_18518)
static void C_ccall f_18518(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_29451)
static void C_ccall f_29451(C_word c,C_word t0,C_word t1,C_word t2,C_word t3) C_noret;
C_noret_decl(f_29490)
static void C_ccall f_29490(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_29464)
static void C_fcall f_29464(C_word t0,C_word t1) C_noret;
C_noret_decl(f_29445)
static void C_ccall f_29445(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_18521)
static void C_ccall f_18521(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_29033)
static void C_ccall f_29033(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4) C_noret;
C_noret_decl(f_29037)
static void C_ccall f_29037(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_29049)
static void C_ccall f_29049(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_29107)
static void C_ccall f_29107(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_29110)
static void C_ccall f_29110(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_29113)
static void C_ccall f_29113(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_29325)
static void C_ccall f_29325(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_29263)
static void C_ccall f_29263(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_29297)
static void C_ccall f_29297(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_29272)
static void C_fcall f_29272(C_word t0,C_word t1) C_noret;
C_noret_decl(f_29283)
static void C_ccall f_29283(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_29279)
static void C_ccall f_29279(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_29122)
static void C_fcall f_29122(C_word t0,C_word t1) C_noret;
C_noret_decl(f_29200)
static void C_ccall f_29200(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_29241)
static void C_ccall f_29241(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_29245)
static void C_ccall f_29245(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_29249)
static void C_ccall f_29249(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_29204)
static void C_ccall f_29204(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_29208)
static void C_ccall f_29208(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_29235)
static void C_ccall f_29235(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_29211)
static void C_fcall f_29211(C_word t0,C_word t1) C_noret;
C_noret_decl(f_29125)
static void C_fcall f_29125(C_word t0,C_word t1) C_noret;
C_noret_decl(f_29197)
static void C_ccall f_29197(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_29139)
static void C_ccall f_29139(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_29141)
static void C_fcall f_29141(C_word t0,C_word t1,C_word t2,C_word t3) C_noret;
C_noret_decl(f_29189)
static void C_ccall f_29189(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_29160)
static void C_ccall f_29160(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_29177)
static void C_ccall f_29177(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_29163)
static void C_fcall f_29163(C_word t0,C_word t1) C_noret;
C_noret_decl(f_29156)
static void C_ccall f_29156(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_29128)
static void C_ccall f_29128(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_29058)
static void C_fcall f_29058(C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_29068)
static void C_ccall f_29068(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_29074)
static void C_ccall f_29074(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_29046)
static void C_ccall f_29046(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_28994)
static void C_ccall f_28994(C_word c,C_word t0,C_word t1,C_word t2,C_word t3) C_noret;
C_noret_decl(f_29011)
static void C_ccall f_29011(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_29027)
static void C_ccall f_29027(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_29005)
static void C_fcall f_29005(C_word t0,C_word t1) C_noret;
C_noret_decl(f_28988)
static void C_ccall f_28988(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_18524)
static void C_ccall f_18524(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_28912)
static void C_ccall f_28912(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_18527)
static void C_ccall f_18527(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_28888)
static void C_ccall f_28888(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4) C_noret;
C_noret_decl(f_28900)
static void C_ccall f_28900(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_28896)
static void C_ccall f_28896(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_28874)
static void C_ccall f_28874(C_word c,C_word t0,C_word t1,C_word t2,C_word t3) C_noret;
C_noret_decl(f_28882)
static void C_ccall f_28882(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_28868)
static void C_ccall f_28868(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_18530)
static void C_ccall f_18530(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_28860)
static void C_ccall f_28860(C_word c,C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_22294)
static void C_ccall f_22294(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_22297)
static void C_ccall f_22297(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_22463)
static void C_ccall f_22463(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_22459)
static void C_ccall f_22459(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_22449)
static void C_fcall f_22449(C_word t0,C_word t1) C_noret;
C_noret_decl(f_22304)
static void C_ccall f_22304(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_22308)
static void C_ccall f_22308(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_22311)
static void C_fcall f_22311(C_word t0,C_word t1) C_noret;
C_noret_decl(f_22322)
static void C_ccall f_22322(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_22330)
static void C_ccall f_22330(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_22402)
static void C_ccall f_22402(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_22410)
static void C_ccall f_22410(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_22406)
static void C_ccall f_22406(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_22398)
static void C_ccall f_22398(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_22394)
static void C_ccall f_22394(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_22366)
static void C_ccall f_22366(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_22362)
static void C_ccall f_22362(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_22326)
static void C_ccall f_22326(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_18941)
static void C_ccall f_18941(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_28846)
static void C_ccall f_28846(C_word c,C_word t0,C_word t1,C_word t2,C_word t3) C_noret;
C_noret_decl(f_18944)
static void C_ccall f_18944(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_28817)
static void C_ccall f_28817(C_word c,C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_28821)
static void C_ccall f_28821(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_18947)
static void C_ccall f_18947(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_28814)
static void C_ccall f_28814(C_word c,C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_18950)
static void C_ccall f_18950(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_28672)
static void C_ccall f_28672(C_word c,C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_22476)
static void C_ccall f_22476(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_22608)
static void C_ccall f_22608(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_22479)
static void C_ccall f_22479(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_22490)
static void C_ccall f_22490(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_22498)
static void C_ccall f_22498(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_22522)
static void C_ccall f_22522(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_22525)
static void C_fcall f_22525(C_word t0,C_word t1) C_noret;
C_noret_decl(f_22533)
static void C_ccall f_22533(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_22541)
static void C_ccall f_22541(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_22561)
static void C_ccall f_22561(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_22557)
static void C_ccall f_22557(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_22537)
static void C_ccall f_22537(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_22529)
static void C_ccall f_22529(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_22518)
static void C_ccall f_22518(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_22494)
static void C_ccall f_22494(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_22470)
static void C_ccall f_22470(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_27392)
static void C_ccall f_27392(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_27395)
static void C_ccall f_27395(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_27398)
static void C_ccall f_27398(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_27401)
static void C_ccall f_27401(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_27404)
static void C_ccall f_27404(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_27407)
static void C_ccall f_27407(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_27410)
static void C_ccall f_27410(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_27413)
static void C_ccall f_27413(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_27416)
static void C_ccall f_27416(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_27419)
static void C_ccall f_27419(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_27422)
static void C_ccall f_27422(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_27547)
static void C_ccall f_27547(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_27550)
static void C_ccall f_27550(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_27553)
static void C_ccall f_27553(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_28666)
static void C_ccall f_28666(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,...) C_noret;
C_noret_decl(f_28666)
static void C_ccall f_28666r(C_word t0,C_word t1,C_word t2,C_word t3,C_word t5) C_noret;
C_noret_decl(f_28220)
static void C_ccall f_28220(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_28223)
static void C_ccall f_28223(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_28501)
static void C_fcall f_28501(C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_28609)
static void C_ccall f_28609(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_28521)
static void C_fcall f_28521(C_word t0,C_word t1) C_noret;
C_noret_decl(f_28530)
static void C_fcall f_28530(C_word t0,C_word t1) C_noret;
C_noret_decl(f_28534)
static void C_ccall f_28534(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_28538)
static void C_ccall f_28538(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_28546)
static void C_fcall f_28546(C_word t0,C_word t1) C_noret;
C_noret_decl(f_28542)
static void C_ccall f_28542(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_28511)
static void C_ccall f_28511(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_28226)
static void C_ccall f_28226(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_28229)
static void C_ccall f_28229(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_28232)
static void C_ccall f_28232(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_28235)
static void C_ccall f_28235(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_28238)
static void C_ccall f_28238(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_28495)
static void C_ccall f_28495(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_28394)
static void C_fcall f_28394(C_word t0,C_word t1) C_noret;
C_noret_decl(f_28401)
static void C_ccall f_28401(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_28403)
static void C_fcall f_28403(C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_28475)
static void C_ccall f_28475(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_28427)
static void C_fcall f_28427(C_word t0,C_word t1) C_noret;
C_noret_decl(f_28430)
static void C_ccall f_28430(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_28451)
static void C_ccall f_28451(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_28417)
static void C_ccall f_28417(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_28241)
static void C_ccall f_28241(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_28383)
static void C_ccall f_28383(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_28371)
static void C_ccall f_28371(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_28367)
static void C_ccall f_28367(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_28248)
static void C_fcall f_28248(C_word t0,C_word t1) C_noret;
C_noret_decl(f_28205)
static void C_ccall f_28205(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_28664)
static void C_ccall f_28664(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_28195)
static void C_ccall f_28195(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_27858)
static void C_ccall f_27858(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_28199)
static void C_ccall f_28199(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_28137)
static void C_ccall f_28137(C_word c,C_word t0,C_word t1,...) C_noret;
C_noret_decl(f_28137)
static void C_ccall f_28137r(C_word t0,C_word t1,C_word t3) C_noret;
C_noret_decl(f_28155)
static void C_fcall f_28155(C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_28165)
static void C_ccall f_28165(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_28141)
static void C_ccall f_28141(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_28128)
static void C_ccall f_28128(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_27836)
static void C_ccall f_27836(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_28132)
static void C_ccall f_28132(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_28122)
static void C_ccall f_28122(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_27818)
static void C_ccall f_27818(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_28113)
static void C_ccall f_28113(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_27827)
static void C_ccall f_27827(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_28117)
static void C_ccall f_28117(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_28050)
static void C_ccall f_28050(C_word c,C_word t0,C_word t1,...) C_noret;
C_noret_decl(f_28050)
static void C_ccall f_28050r(C_word t0,C_word t1,C_word t3) C_noret;
C_noret_decl(f_28075)
static void C_fcall f_28075(C_word t0,C_word t1) C_noret;
C_noret_decl(f_27783)
static void C_ccall f_27783(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_28063)
static void C_ccall f_28063(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_27882)
static void C_ccall f_27882(C_word c,C_word t0,C_word t1,C_word t2,...) C_noret;
C_noret_decl(f_27882)
static void C_ccall f_27882r(C_word t0,C_word t1,C_word t2,C_word t4) C_noret;
C_noret_decl(f_28001)
static void C_fcall f_28001(C_word t0,C_word t1) C_noret;
C_noret_decl(f_27996)
static void C_fcall f_27996(C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_27884)
static void C_fcall f_27884(C_word t0,C_word t1,C_word t2,C_word t3) C_noret;
C_noret_decl(f_27991)
static void C_ccall f_27991(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_27995)
static void C_ccall f_27995(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_27987)
static void C_ccall f_27987(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_27955)
static void C_fcall f_27955(C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_27980)
static void C_ccall f_27980(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_27984)
static void C_ccall f_27984(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_27965)
static void C_ccall f_27965(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_27944)
static void C_ccall f_27944(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_27914)
static void C_fcall f_27914(C_word t0,C_word t1) C_noret;
C_noret_decl(f_27886)
static void C_fcall f_27886(C_word t0,C_word t1) C_noret;
C_noret_decl(f_27863)
static void C_ccall f_27863(C_word c,C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_27868)
static void C_ccall f_27868(C_word c,C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_27873)
static void C_ccall f_27873(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_27841)
static void C_fcall f_27841(C_word t0,C_word t1) C_noret;
C_noret_decl(f_27845)
static void C_ccall f_27845(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_27797)
static void C_fcall f_27797(C_word t0,C_word t1,C_word t2,C_word t3) C_noret;
C_noret_decl(f_27801)
static void C_ccall f_27801(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_27788)
static void C_fcall f_27788(C_word t0,C_word t1) C_noret;
C_noret_decl(f_27792)
static void C_ccall f_27792(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_27776)
static void C_ccall f_27776(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_27773)
static void C_ccall f_27773(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_27759)
static void C_ccall f_27759(C_word c,C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_27764)
static void C_ccall f_27764(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_27745)
static void C_ccall f_27745(C_word c,C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_27750)
static void C_ccall f_27750(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_27555)
static void C_ccall f_27555(C_word c,C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_27616)
static void C_ccall f_27616(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_27618)
static void C_fcall f_27618(C_word t0,C_word t1,C_word t2,C_word t3,C_word t4) C_noret;
C_noret_decl(f_27628)
static void C_ccall f_27628(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_27647)
static void C_fcall f_27647(C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_27687)
static void C_ccall f_27687(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_27729)
static void C_ccall f_27729(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_27699)
static void C_ccall f_27699(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_27684)
static void C_fcall f_27684(C_word t0,C_word t1) C_noret;
C_noret_decl(f_27602)
static void C_ccall f_27602(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_27567)
static void C_ccall f_27567(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_27594)
static void C_ccall f_27594(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_27575)
static void C_ccall f_27575(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_27582)
static void C_ccall f_27582(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_27586)
static void C_ccall f_27586(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_27590)
static void C_ccall f_27590(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_27667)
static void C_ccall f_27667(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_27645)
static void C_ccall f_27645(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_27631)
static void C_ccall f_27631(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_27634)
static void C_ccall f_27634(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_27609)
static void C_ccall f_27609(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_27538)
static void C_ccall f_27538(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_27543)
static void C_ccall f_27543(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_27481)
static void C_ccall f_27481(C_word c,C_word t0,C_word t1,...) C_noret;
C_noret_decl(f_27481)
static void C_ccall f_27481r(C_word t0,C_word t1,C_word t3) C_noret;
C_noret_decl(f_27514)
static void C_fcall f_27514(C_word t0,C_word t1) C_noret;
C_noret_decl(f_27494)
static void C_fcall f_27494(C_word t0,C_word t1) C_noret;
C_noret_decl(f_27502)
static void C_ccall f_27502(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4) C_noret;
C_noret_decl(f_27485)
static void C_ccall f_27485(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_27424)
static void C_ccall f_27424(C_word c,C_word t0,C_word t1,...) C_noret;
C_noret_decl(f_27424)
static void C_ccall f_27424r(C_word t0,C_word t1,C_word t3) C_noret;
C_noret_decl(f_27457)
static void C_fcall f_27457(C_word t0,C_word t1) C_noret;
C_noret_decl(f_27437)
static void C_fcall f_27437(C_word t0,C_word t1) C_noret;
C_noret_decl(f_27445)
static void C_ccall f_27445(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4) C_noret;
C_noret_decl(f_27428)
static void C_ccall f_27428(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_27334)
static void C_ccall f_27334(C_word c,C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_27388)
static void C_ccall f_27388(C_word c,C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_27383)
static void C_ccall f_27383(C_word c,C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_27346)
static void C_ccall f_27346(C_word c,C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_27352)
static void C_ccall f_27352(C_word c,C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_27378)
static void C_ccall f_27378(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_27382)
static void C_ccall f_27382(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_27358)
static void C_ccall f_27358(C_word c,C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_27376)
static void C_ccall f_27376(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_27373)
static void C_ccall f_27373(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_27369)
static void C_ccall f_27369(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_27362)
static void C_ccall f_27362(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_27319)
static void C_ccall f_27319(C_word c,C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_27324)
static void C_ccall f_27324(C_word c,C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_27291)
static void C_ccall f_27291(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4) C_noret;
C_noret_decl(f_27296)
static void C_ccall f_27296(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4,C_word t5,C_word t6) C_noret;
C_noret_decl(f_27263)
static void C_ccall f_27263(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4) C_noret;
C_noret_decl(f_27268)
static void C_ccall f_27268(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4,C_word t5,C_word t6) C_noret;
C_noret_decl(f_27235)
static void C_ccall f_27235(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4) C_noret;
C_noret_decl(f_27240)
static void C_ccall f_27240(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4,C_word t5,C_word t6) C_noret;
C_noret_decl(f_27207)
static void C_ccall f_27207(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4,C_word t5) C_noret;
C_noret_decl(f_27212)
static void C_ccall f_27212(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4,C_word t5,C_word t6) C_noret;
C_noret_decl(f_27179)
static void C_ccall f_27179(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4,C_word t5) C_noret;
C_noret_decl(f_27184)
static void C_ccall f_27184(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4,C_word t5,C_word t6) C_noret;
C_noret_decl(f_27151)
static void C_ccall f_27151(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4,C_word t5) C_noret;
C_noret_decl(f_27156)
static void C_ccall f_27156(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4,C_word t5,C_word t6) C_noret;
C_noret_decl(f_27123)
static void C_ccall f_27123(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4) C_noret;
C_noret_decl(f_27128)
static void C_ccall f_27128(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4,C_word t5,C_word t6) C_noret;
C_noret_decl(f_27095)
static void C_ccall f_27095(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4,C_word t5,C_word t6) C_noret;
C_noret_decl(f_27100)
static void C_ccall f_27100(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4,C_word t5,C_word t6) C_noret;
C_noret_decl(f_27067)
static void C_ccall f_27067(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4,C_word t5,C_word t6) C_noret;
C_noret_decl(f_27072)
static void C_ccall f_27072(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4,C_word t5,C_word t6) C_noret;
C_noret_decl(f_27044)
static void C_ccall f_27044(C_word c,C_word t0,C_word t1,C_word t2,C_word t3) C_noret;
C_noret_decl(f_27049)
static void C_ccall f_27049(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4) C_noret;
C_noret_decl(f_27048)
static void C_ccall f_27048(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_27025)
static void C_ccall f_27025(C_word c,C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_27030)
static void C_ccall f_27030(C_word c,C_word t0,C_word t1,C_word t2,C_word t3) C_noret;
C_noret_decl(f_26970)
static void C_ccall f_26970(C_word c,C_word t0,C_word t1,C_word t2,C_word t3) C_noret;
C_noret_decl(f_26977)
static void C_ccall f_26977(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_26980)
static void C_ccall f_26980(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_27004)
static void C_ccall f_27004(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4) C_noret;
C_noret_decl(f_26984)
static void C_ccall f_26984(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4) C_noret;
C_noret_decl(f_26974)
static void C_ccall f_26974(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_26923)
static void C_ccall f_26923(C_word c,C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_26930)
static void C_ccall f_26930(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_26933)
static void C_ccall f_26933(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_26953)
static void C_ccall f_26953(C_word c,C_word t0,C_word t1,C_word t2,C_word t3) C_noret;
C_noret_decl(f_26937)
static void C_ccall f_26937(C_word c,C_word t0,C_word t1,C_word t2,C_word t3) C_noret;
C_noret_decl(f_26900)
static void C_ccall f_26900(C_word c,C_word t0,C_word t1,C_word t2,C_word t3) C_noret;
C_noret_decl(f_26905)
static void C_ccall f_26905(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4) C_noret;
C_noret_decl(f_26904)
static void C_ccall f_26904(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_26881)
static void C_ccall f_26881(C_word c,C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_26886)
static void C_ccall f_26886(C_word c,C_word t0,C_word t1,C_word t2,C_word t3) C_noret;
C_noret_decl(f_26858)
static void C_ccall f_26858(C_word c,C_word t0,C_word t1,C_word t2,C_word t3) C_noret;
C_noret_decl(f_26863)
static void C_ccall f_26863(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4) C_noret;
C_noret_decl(f_26862)
static void C_ccall f_26862(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_26839)
static void C_ccall f_26839(C_word c,C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_26844)
static void C_ccall f_26844(C_word c,C_word t0,C_word t1,C_word t2,C_word t3) C_noret;
C_noret_decl(f_26820)
static void C_ccall f_26820(C_word c,C_word t0,C_word t1,C_word t2,C_word t3) C_noret;
C_noret_decl(f_26825)
static void C_ccall f_26825(C_word c,C_word t0,C_word t1,C_word t2,C_word t3) C_noret;
C_noret_decl(f_26824)
static void C_ccall f_26824(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_26805)
static void C_ccall f_26805(C_word c,C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_26810)
static void C_ccall f_26810(C_word c,C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_26786)
static void C_ccall f_26786(C_word c,C_word t0,C_word t1,C_word t2,C_word t3) C_noret;
C_noret_decl(f_26791)
static void C_ccall f_26791(C_word c,C_word t0,C_word t1,C_word t2,C_word t3) C_noret;
C_noret_decl(f_26790)
static void C_ccall f_26790(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_26771)
static void C_ccall f_26771(C_word c,C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_26776)
static void C_ccall f_26776(C_word c,C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_26756)
static void C_ccall f_26756(C_word c,C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_26761)
static void C_ccall f_26761(C_word c,C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_26738)
static void C_ccall f_26738(C_word c,C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_26746)
static void C_ccall f_26746(C_word c,C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_26742)
static void C_ccall f_26742(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_26268)
static void C_ccall f_26268(C_word c,C_word t0,C_word t1,...) C_noret;
C_noret_decl(f_26268)
static void C_ccall f_26268r(C_word t0,C_word t1,C_word t3) C_noret;
C_noret_decl(f_26696)
static void C_ccall f_26696(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_26711)
static void C_ccall f_26711(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_26703)
static void C_ccall f_26703(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_26667)
static void C_ccall f_26667(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_26671)
static void C_ccall f_26671(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_26632)
static void C_ccall f_26632(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_26636)
static void C_ccall f_26636(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_26597)
static void C_ccall f_26597(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_26601)
static void C_ccall f_26601(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_26272)
static void C_fcall f_26272(C_word t0,C_word t1) C_noret;
C_noret_decl(f_26561)
static void C_ccall f_26561(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_26576)
static void C_ccall f_26576(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_26568)
static void C_ccall f_26568(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_26532)
static void C_ccall f_26532(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_26536)
static void C_ccall f_26536(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_26497)
static void C_ccall f_26497(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_26501)
static void C_ccall f_26501(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_26462)
static void C_ccall f_26462(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_26466)
static void C_ccall f_26466(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_26275)
static void C_fcall f_26275(C_word t0,C_word t1) C_noret;
C_noret_decl(f_26426)
static void C_ccall f_26426(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_26441)
static void C_ccall f_26441(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_26433)
static void C_ccall f_26433(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_26397)
static void C_ccall f_26397(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_26401)
static void C_ccall f_26401(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_26362)
static void C_ccall f_26362(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_26366)
static void C_ccall f_26366(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_26327)
static void C_ccall f_26327(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_26331)
static void C_ccall f_26331(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_26278)
static void C_fcall f_26278(C_word t0,C_word t1) C_noret;
C_noret_decl(f_26281)
static void C_ccall f_26281(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_26285)
static void C_ccall f_26285(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4,C_word t5,C_word t6) C_noret;
C_noret_decl(f_26249)
static void C_ccall f_26249(C_word c,C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_26254)
static void C_ccall f_26254(C_word c,C_word t0,C_word t1,C_word t2,C_word t3) C_noret;
C_noret_decl(f_25798)
static void C_ccall f_25798(C_word c,C_word t0,C_word t1,...) C_noret;
C_noret_decl(f_25798)
static void C_ccall f_25798r(C_word t0,C_word t1,C_word t3) C_noret;
C_noret_decl(f_26226)
static void C_ccall f_26226(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_26241)
static void C_ccall f_26241(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_26233)
static void C_ccall f_26233(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_26197)
static void C_ccall f_26197(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_26201)
static void C_ccall f_26201(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_26162)
static void C_ccall f_26162(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_26166)
static void C_ccall f_26166(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_26127)
static void C_ccall f_26127(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_26131)
static void C_ccall f_26131(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_25802)
static void C_fcall f_25802(C_word t0,C_word t1) C_noret;
C_noret_decl(f_26091)
static void C_ccall f_26091(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_26106)
static void C_ccall f_26106(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_26098)
static void C_ccall f_26098(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_26062)
static void C_ccall f_26062(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_26066)
static void C_ccall f_26066(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_26027)
static void C_ccall f_26027(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_26031)
static void C_ccall f_26031(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_25992)
static void C_ccall f_25992(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_25996)
static void C_ccall f_25996(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_25805)
static void C_fcall f_25805(C_word t0,C_word t1) C_noret;
C_noret_decl(f_25956)
static void C_ccall f_25956(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_25971)
static void C_ccall f_25971(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_25963)
static void C_ccall f_25963(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_25927)
static void C_ccall f_25927(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_25931)
static void C_ccall f_25931(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_25892)
static void C_ccall f_25892(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_25896)
static void C_ccall f_25896(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_25857)
static void C_ccall f_25857(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_25861)
static void C_ccall f_25861(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_25808)
static void C_fcall f_25808(C_word t0,C_word t1) C_noret;
C_noret_decl(f_25811)
static void C_ccall f_25811(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_25815)
static void C_ccall f_25815(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4,C_word t5,C_word t6) C_noret;
C_noret_decl(f_25779)
static void C_ccall f_25779(C_word c,C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_25784)
static void C_ccall f_25784(C_word c,C_word t0,C_word t1,C_word t2,C_word t3) C_noret;
C_noret_decl(f_25328)
static void C_ccall f_25328(C_word c,C_word t0,C_word t1,...) C_noret;
C_noret_decl(f_25328)
static void C_ccall f_25328r(C_word t0,C_word t1,C_word t3) C_noret;
C_noret_decl(f_25756)
static void C_ccall f_25756(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_25771)
static void C_ccall f_25771(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_25763)
static void C_ccall f_25763(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_25727)
static void C_ccall f_25727(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_25731)
static void C_ccall f_25731(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_25692)
static void C_ccall f_25692(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_25696)
static void C_ccall f_25696(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_25657)
static void C_ccall f_25657(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_25661)
static void C_ccall f_25661(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_25332)
static void C_fcall f_25332(C_word t0,C_word t1) C_noret;
C_noret_decl(f_25621)
static void C_ccall f_25621(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_25636)
static void C_ccall f_25636(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_25628)
static void C_ccall f_25628(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_25592)
static void C_ccall f_25592(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_25596)
static void C_ccall f_25596(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_25557)
static void C_ccall f_25557(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_25561)
static void C_ccall f_25561(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_25522)
static void C_ccall f_25522(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_25526)
static void C_ccall f_25526(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_25335)
static void C_fcall f_25335(C_word t0,C_word t1) C_noret;
C_noret_decl(f_25486)
static void C_ccall f_25486(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_25501)
static void C_ccall f_25501(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_25493)
static void C_ccall f_25493(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_25457)
static void C_ccall f_25457(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_25461)
static void C_ccall f_25461(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_25422)
static void C_ccall f_25422(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_25426)
static void C_ccall f_25426(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_25387)
static void C_ccall f_25387(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_25391)
static void C_ccall f_25391(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_25338)
static void C_fcall f_25338(C_word t0,C_word t1) C_noret;
C_noret_decl(f_25341)
static void C_ccall f_25341(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_25345)
static void C_ccall f_25345(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4,C_word t5,C_word t6) C_noret;
C_noret_decl(f_25309)
static void C_ccall f_25309(C_word c,C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_25314)
static void C_ccall f_25314(C_word c,C_word t0,C_word t1,C_word t2,C_word t3) C_noret;
C_noret_decl(f_24580)
static void C_ccall f_24580(C_word c,C_word t0,C_word t1,...) C_noret;
C_noret_decl(f_24580)
static void C_ccall f_24580r(C_word t0,C_word t1,C_word t3) C_noret;
C_noret_decl(f_25286)
static void C_ccall f_25286(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_25301)
static void C_ccall f_25301(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_25293)
static void C_ccall f_25293(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_25257)
static void C_ccall f_25257(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_25261)
static void C_ccall f_25261(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_25222)
static void C_ccall f_25222(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_25226)
static void C_ccall f_25226(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_25187)
static void C_ccall f_25187(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_25191)
static void C_ccall f_25191(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_25152)
static void C_ccall f_25152(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_25156)
static void C_ccall f_25156(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_24584)
static void C_fcall f_24584(C_word t0,C_word t1) C_noret;
C_noret_decl(f_25116)
static void C_ccall f_25116(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_25131)
static void C_ccall f_25131(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_25123)
static void C_ccall f_25123(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_25087)
static void C_ccall f_25087(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_25091)
static void C_ccall f_25091(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_25052)
static void C_ccall f_25052(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_25056)
static void C_ccall f_25056(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_25017)
static void C_ccall f_25017(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_25021)
static void C_ccall f_25021(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_24982)
static void C_ccall f_24982(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_24986)
static void C_ccall f_24986(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_24587)
static void C_fcall f_24587(C_word t0,C_word t1) C_noret;
C_noret_decl(f_24946)
static void C_ccall f_24946(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_24961)
static void C_ccall f_24961(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_24953)
static void C_ccall f_24953(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_24917)
static void C_ccall f_24917(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_24921)
static void C_ccall f_24921(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_24882)
static void C_ccall f_24882(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_24886)
static void C_ccall f_24886(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_24847)
static void C_ccall f_24847(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_24851)
static void C_ccall f_24851(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_24812)
static void C_ccall f_24812(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_24816)
static void C_ccall f_24816(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_24590)
static void C_fcall f_24590(C_word t0,C_word t1) C_noret;
C_noret_decl(f_24776)
static void C_ccall f_24776(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_24791)
static void C_ccall f_24791(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_24783)
static void C_ccall f_24783(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_24747)
static void C_ccall f_24747(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_24751)
static void C_ccall f_24751(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_24712)
static void C_ccall f_24712(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_24716)
static void C_ccall f_24716(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_24677)
static void C_ccall f_24677(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_24681)
static void C_ccall f_24681(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_24642)
static void C_ccall f_24642(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_24646)
static void C_ccall f_24646(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_24593)
static void C_fcall f_24593(C_word t0,C_word t1) C_noret;
C_noret_decl(f_24596)
static void C_ccall f_24596(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_24600)
static void C_ccall f_24600(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4,C_word t5,C_word t6) C_noret;
C_noret_decl(f_24561)
static void C_ccall f_24561(C_word c,C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_24566)
static void C_ccall f_24566(C_word c,C_word t0,C_word t1,C_word t2,C_word t3) C_noret;
C_noret_decl(f_23832)
static void C_ccall f_23832(C_word c,C_word t0,C_word t1,...) C_noret;
C_noret_decl(f_23832)
static void C_ccall f_23832r(C_word t0,C_word t1,C_word t3) C_noret;
C_noret_decl(f_24538)
static void C_ccall f_24538(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_24553)
static void C_ccall f_24553(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_24545)
static void C_ccall f_24545(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_24509)
static void C_ccall f_24509(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_24513)
static void C_ccall f_24513(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_24474)
static void C_ccall f_24474(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_24478)
static void C_ccall f_24478(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_24439)
static void C_ccall f_24439(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_24443)
static void C_ccall f_24443(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_24404)
static void C_ccall f_24404(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_24408)
static void C_ccall f_24408(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_23836)
static void C_fcall f_23836(C_word t0,C_word t1) C_noret;
C_noret_decl(f_24368)
static void C_ccall f_24368(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_24383)
static void C_ccall f_24383(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_24375)
static void C_ccall f_24375(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_24339)
static void C_ccall f_24339(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_24343)
static void C_ccall f_24343(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_24304)
static void C_ccall f_24304(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_24308)
static void C_ccall f_24308(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_24269)
static void C_ccall f_24269(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_24273)
static void C_ccall f_24273(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_24234)
static void C_ccall f_24234(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_24238)
static void C_ccall f_24238(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_23839)
static void C_fcall f_23839(C_word t0,C_word t1) C_noret;
C_noret_decl(f_24198)
static void C_ccall f_24198(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_24213)
static void C_ccall f_24213(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_24205)
static void C_ccall f_24205(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_24169)
static void C_ccall f_24169(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_24173)
static void C_ccall f_24173(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_24134)
static void C_ccall f_24134(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_24138)
static void C_ccall f_24138(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_24099)
static void C_ccall f_24099(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_24103)
static void C_ccall f_24103(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_24064)
static void C_ccall f_24064(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_24068)
static void C_ccall f_24068(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_23842)
static void C_fcall f_23842(C_word t0,C_word t1) C_noret;
C_noret_decl(f_24028)
static void C_ccall f_24028(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_24043)
static void C_ccall f_24043(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_24035)
static void C_ccall f_24035(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_23999)
static void C_ccall f_23999(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_24003)
static void C_ccall f_24003(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_23964)
static void C_ccall f_23964(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_23968)
static void C_ccall f_23968(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_23929)
static void C_ccall f_23929(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_23933)
static void C_ccall f_23933(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_23894)
static void C_ccall f_23894(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_23898)
static void C_ccall f_23898(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_23845)
static void C_fcall f_23845(C_word t0,C_word t1) C_noret;
C_noret_decl(f_23848)
static void C_ccall f_23848(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_23852)
static void C_ccall f_23852(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4,C_word t5,C_word t6) C_noret;
C_noret_decl(f_23813)
static void C_ccall f_23813(C_word c,C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_23818)
static void C_ccall f_23818(C_word c,C_word t0,C_word t1,C_word t2,C_word t3) C_noret;
C_noret_decl(f_23362)
static void C_ccall f_23362(C_word c,C_word t0,C_word t1,...) C_noret;
C_noret_decl(f_23362)
static void C_ccall f_23362r(C_word t0,C_word t1,C_word t3) C_noret;
C_noret_decl(f_23790)
static void C_ccall f_23790(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_23805)
static void C_ccall f_23805(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_23797)
static void C_ccall f_23797(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_23761)
static void C_ccall f_23761(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_23765)
static void C_ccall f_23765(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_23726)
static void C_ccall f_23726(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_23730)
static void C_ccall f_23730(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_23691)
static void C_ccall f_23691(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_23695)
static void C_ccall f_23695(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_23366)
static void C_fcall f_23366(C_word t0,C_word t1) C_noret;
C_noret_decl(f_23655)
static void C_ccall f_23655(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_23670)
static void C_ccall f_23670(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_23662)
static void C_ccall f_23662(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_23626)
static void C_ccall f_23626(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_23630)
static void C_ccall f_23630(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_23591)
static void C_ccall f_23591(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_23595)
static void C_ccall f_23595(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_23556)
static void C_ccall f_23556(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_23560)
static void C_ccall f_23560(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_23369)
static void C_fcall f_23369(C_word t0,C_word t1) C_noret;
C_noret_decl(f_23520)
static void C_ccall f_23520(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_23535)
static void C_ccall f_23535(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_23527)
static void C_ccall f_23527(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_23491)
static void C_ccall f_23491(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_23495)
static void C_ccall f_23495(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_23456)
static void C_ccall f_23456(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_23460)
static void C_ccall f_23460(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_23421)
static void C_ccall f_23421(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_23425)
static void C_ccall f_23425(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_23372)
static void C_fcall f_23372(C_word t0,C_word t1) C_noret;
C_noret_decl(f_23375)
static void C_ccall f_23375(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_23379)
static void C_ccall f_23379(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4,C_word t5,C_word t6) C_noret;
C_noret_decl(f_23343)
static void C_ccall f_23343(C_word c,C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_23348)
static void C_ccall f_23348(C_word c,C_word t0,C_word t1,C_word t2,C_word t3) C_noret;
C_noret_decl(f_22614)
static void C_ccall f_22614(C_word c,C_word t0,C_word t1,...) C_noret;
C_noret_decl(f_22614)
static void C_ccall f_22614r(C_word t0,C_word t1,C_word t3) C_noret;
C_noret_decl(f_23320)
static void C_ccall f_23320(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_23335)
static void C_ccall f_23335(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_23327)
static void C_ccall f_23327(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_23291)
static void C_ccall f_23291(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_23295)
static void C_ccall f_23295(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_23256)
static void C_ccall f_23256(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_23260)
static void C_ccall f_23260(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_23221)
static void C_ccall f_23221(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_23225)
static void C_ccall f_23225(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_23186)
static void C_ccall f_23186(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_23190)
static void C_ccall f_23190(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_22618)
static void C_fcall f_22618(C_word t0,C_word t1) C_noret;
C_noret_decl(f_23150)
static void C_ccall f_23150(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_23165)
static void C_ccall f_23165(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_23157)
static void C_ccall f_23157(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_23121)
static void C_ccall f_23121(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_23125)
static void C_ccall f_23125(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_23086)
static void C_ccall f_23086(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_23090)
static void C_ccall f_23090(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_23051)
static void C_ccall f_23051(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_23055)
static void C_ccall f_23055(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_23016)
static void C_ccall f_23016(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_23020)
static void C_ccall f_23020(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_22621)
static void C_fcall f_22621(C_word t0,C_word t1) C_noret;
C_noret_decl(f_22980)
static void C_ccall f_22980(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_22995)
static void C_ccall f_22995(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_22987)
static void C_ccall f_22987(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_22951)
static void C_ccall f_22951(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_22955)
static void C_ccall f_22955(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_22916)
static void C_ccall f_22916(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_22920)
static void C_ccall f_22920(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_22881)
static void C_ccall f_22881(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_22885)
static void C_ccall f_22885(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_22846)
static void C_ccall f_22846(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_22850)
static void C_ccall f_22850(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_22624)
static void C_fcall f_22624(C_word t0,C_word t1) C_noret;
C_noret_decl(f_22810)
static void C_ccall f_22810(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_22825)
static void C_ccall f_22825(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_22817)
static void C_ccall f_22817(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_22781)
static void C_ccall f_22781(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_22785)
static void C_ccall f_22785(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_22746)
static void C_ccall f_22746(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_22750)
static void C_ccall f_22750(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_22711)
static void C_ccall f_22711(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_22715)
static void C_ccall f_22715(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_22676)
static void C_ccall f_22676(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_22680)
static void C_ccall f_22680(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_22627)
static void C_fcall f_22627(C_word t0,C_word t1) C_noret;
C_noret_decl(f_22630)
static void C_ccall f_22630(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_22634)
static void C_ccall f_22634(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4,C_word t5,C_word t6) C_noret;
C_noret_decl(f_22276)
static void C_fcall f_22276(C_word t0,C_word t1,C_word t2,C_word t3) C_noret;
C_noret_decl(f_22116)
static void C_fcall f_22116(C_word t0,C_word t1) C_noret;
C_noret_decl(f_22151)
static void C_fcall f_22151(C_word t0,C_word t1,C_word t2,C_word t3,C_word t4,C_word t5) C_noret;
C_noret_decl(f_22161)
static void C_fcall f_22161(C_word t0,C_word t1) C_noret;
C_noret_decl(f_22165)
static void C_ccall f_22165(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_22168)
static void C_ccall f_22168(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_22229)
static void C_ccall f_22229(C_word c,C_word t0,C_word t1,C_word t2,C_word t3) C_noret;
C_noret_decl(f_22220)
static void C_ccall f_22220(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_22171)
static void C_ccall f_22171(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_22190)
static void C_ccall f_22190(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_22197)
static void C_ccall f_22197(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_22174)
static void C_ccall f_22174(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_22180)
static void C_ccall f_22180(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_22149)
static void C_ccall f_22149(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_22124)
static void C_fcall f_22124(C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_22123)
static void C_ccall f_22123(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_22284)
static void C_fcall f_22284(C_word t0,C_word t1) C_noret;
C_noret_decl(f_21862)
static void C_ccall f_21862(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4) C_noret;
C_noret_decl(f_21884)
static void C_ccall f_21884(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_21899)
static void C_ccall f_21899(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_21902)
static void C_fcall f_21902(C_word t0,C_word t1) C_noret;
C_noret_decl(f_22078)
static void C_ccall f_22078(C_word c,C_word t0,C_word t1,C_word t2,C_word t3) C_noret;
C_noret_decl(f_22072)
static void C_ccall f_22072(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_21905)
static void C_ccall f_21905(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_22054)
static void C_ccall f_22054(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_21908)
static void C_fcall f_21908(C_word t0,C_word t1) C_noret;
C_noret_decl(f_21911)
static void C_ccall f_21911(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_22047)
static void C_ccall f_22047(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_22035)
static void C_ccall f_22035(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_21931)
static void C_fcall f_21931(C_word t0,C_word t1) C_noret;
C_noret_decl(f_21938)
static void C_ccall f_21938(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_22008)
static void C_ccall f_22008(C_word c,C_word t0,C_word t1,C_word t2,C_word t3) C_noret;
C_noret_decl(f_21994)
static void C_ccall f_21994(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_22002)
static void C_ccall f_22002(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_21941)
static void C_ccall f_21941(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_21980)
static void C_ccall f_21980(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_21944)
static void C_fcall f_21944(C_word t0,C_word t1) C_noret;
C_noret_decl(f_21973)
static void C_ccall f_21973(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_21950)
static void C_ccall f_21950(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_21953)
static void C_ccall f_21953(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_21957)
static void C_ccall f_21957(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_21918)
static void C_fcall f_21918(C_word t0,C_word t1) C_noret;
C_noret_decl(f_21921)
static void C_ccall f_21921(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_21731)
static void C_fcall f_21731(C_word t0,C_word t1,C_word t2,C_word t3) C_noret;
C_noret_decl(f_21740)
static void C_fcall f_21740(C_word t0,C_word t1,C_word t2,C_word t3,C_word t4) C_noret;
C_noret_decl(f_21688)
static void C_ccall f_21688(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_21694)
static void C_fcall f_21694(C_word t0,C_word t1) C_noret;
C_noret_decl(f_21757)
static void C_ccall f_21757(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_21843)
static void C_ccall f_21843(C_word c,C_word t0,C_word t1,C_word t2,C_word t3) C_noret;
C_noret_decl(f_21830)
static void C_ccall f_21830(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_21838)
static void C_ccall f_21838(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_21760)
static void C_ccall f_21760(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_21764)
static void C_ccall f_21764(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_21807)
static void C_ccall f_21807(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_21769)
static void C_ccall f_21769(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_21735)
static void C_ccall f_21735(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_21630)
static void C_ccall f_21630(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4) C_noret;
C_noret_decl(f_21637)
static void C_ccall f_21637(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_21668)
static void C_ccall f_21668(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_21664)
static void C_ccall f_21664(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_21656)
static void C_ccall f_21656(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_21539)
static void C_ccall f_21539(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4) C_noret;
C_noret_decl(f_21546)
static void C_ccall f_21546(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_21614)
static void C_ccall f_21614(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_21557)
static void C_fcall f_21557(C_word t0,C_word t1) C_noret;
C_noret_decl(f_21584)
static void C_ccall f_21584(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_21568)
static void C_ccall f_21568(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_21473)
static void C_ccall f_21473(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4) C_noret;
C_noret_decl(f_21484)
static void C_ccall f_21484(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_21487)
static void C_fcall f_21487(C_word t0,C_word t1) C_noret;
C_noret_decl(f_21494)
static void C_ccall f_21494(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_21467)
static void C_ccall f_21467(C_word c,C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_20921)
static void C_ccall f_20921(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4) C_noret;
C_noret_decl(f_20952)
static void C_ccall f_20952(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_21416)
static void C_ccall f_21416(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_21422)
static void C_ccall f_21422(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_20963)
static void C_ccall f_20963(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_20848)
static void C_fcall f_20848(C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_20873)
static void C_ccall f_20873(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_20808)
static void C_fcall f_20808(C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_20821)
static void C_fcall f_20821(C_word t0,C_word t1) C_noret;
C_noret_decl(f_20862)
static void C_ccall f_20862(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_20967)
static void C_ccall f_20967(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_21404)
static void C_ccall f_21404(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_21400)
static void C_fcall f_21400(C_word t0,C_word t1) C_noret;
C_noret_decl(f_21396)
static void C_ccall f_21396(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_20970)
static void C_ccall f_20970(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_21190)
static void C_fcall f_21190(C_word t0,C_word t1) C_noret;
C_noret_decl(f_21299)
static void C_ccall f_21299(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_21364)
static void C_ccall f_21364(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_21306)
static void C_fcall f_21306(C_word t0,C_word t1) C_noret;
C_noret_decl(f_21310)
static void C_ccall f_21310(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_21314)
static void C_ccall f_21314(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_21356)
static void C_ccall f_21356(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_21352)
static void C_ccall f_21352(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_21330)
static void C_ccall f_21330(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_21193)
static void C_fcall f_21193(C_word t0,C_word t1) C_noret;
C_noret_decl(f_21196)
static void C_fcall f_21196(C_word t0,C_word t1) C_noret;
C_noret_decl(f_21095)
static void C_ccall f_21095(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_21178)
static void C_ccall f_21178(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_21145)
static void C_ccall f_21145(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_21171)
static void C_ccall f_21171(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_21153)
static void C_ccall f_21153(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_21101)
static void C_fcall f_21101(C_word t0,C_word t1) C_noret;
C_noret_decl(f_21141)
static void C_ccall f_21141(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_21083)
static void C_ccall f_21083(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_21054)
static void C_ccall f_21054(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_21076)
static void C_ccall f_21076(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_21062)
static void C_ccall f_21062(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_21016)
static void C_fcall f_21016(C_word t0,C_word t1) C_noret;
C_noret_decl(f_20973)
static void C_fcall f_20973(C_word t0,C_word t1) C_noret;
C_noret_decl(f_20984)
static void C_ccall f_20984(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_20988)
static void C_ccall f_20988(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_20992)
static void C_ccall f_20992(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_20996)
static void C_ccall f_20996(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_20980)
static void C_ccall f_20980(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_20940)
static void C_fcall f_20940(C_word t0,C_word t1) C_noret;
C_noret_decl(f_20935)
static void C_fcall f_20935(C_word t0,C_word t1) C_noret;
C_noret_decl(f_20930)
static void C_fcall f_20930(C_word t0,C_word t1,C_word t2,C_word t3,C_word t4) C_noret;
C_noret_decl(f_20762)
static void C_ccall f_20762(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4) C_noret;
C_noret_decl(f_20773)
static void C_ccall f_20773(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_20788)
static void C_ccall f_20788(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_20724)
static void C_ccall f_20724(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4) C_noret;
C_noret_decl(f_20735)
static void C_ccall f_20735(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_20750)
static void C_ccall f_20750(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_20657)
static void C_ccall f_20657(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4) C_noret;
C_noret_decl(f_20677)
static void C_fcall f_20677(C_word t0,C_word t1) C_noret;
C_noret_decl(f_20687)
static void C_ccall f_20687(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_20700)
static void C_ccall f_20700(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_20668)
static void C_ccall f_20668(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_20675)
static void C_ccall f_20675(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_20464)
static void C_ccall f_20464(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4) C_noret;
C_noret_decl(f_20524)
static void C_fcall f_20524(C_word t0,C_word t1,C_word t2,C_word t3) C_noret;
C_noret_decl(f_20534)
static void C_ccall f_20534(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_20648)
static void C_ccall f_20648(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_20613)
static void C_ccall f_20613(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_20605)
static void C_ccall f_20605(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_20576)
static void C_ccall f_20576(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_20554)
static void C_ccall f_20554(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_20557)
static void C_ccall f_20557(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_20545)
static void C_ccall f_20545(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_20471)
static void C_ccall f_20471(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_20522)
static void C_ccall f_20522(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_20514)
static void C_ccall f_20514(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_20474)
static void C_ccall f_20474(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_20485)
static void C_ccall f_20485(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_20489)
static void C_ccall f_20489(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_20481)
static void C_ccall f_20481(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_20322)
static void C_ccall f_20322(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4) C_noret;
C_noret_decl(f_20370)
static void C_fcall f_20370(C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_20380)
static void C_ccall f_20380(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_20391)
static void C_ccall f_20391(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_20428)
static void C_ccall f_20428(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_20403)
static void C_ccall f_20403(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_20394)
static void C_ccall f_20394(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_20332)
static void C_ccall f_20332(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_20368)
static void C_ccall f_20368(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_20339)
static void C_ccall f_20339(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_19971)
static void C_ccall f_19971(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4) C_noret;
C_noret_decl(f_19978)
static void C_ccall f_19978(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_20212)
static void C_fcall f_20212(C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_20222)
static void C_ccall f_20222(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_20233)
static void C_ccall f_20233(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_20245)
static void C_fcall f_20245(C_word t0,C_word t1) C_noret;
C_noret_decl(f_20248)
static void C_ccall f_20248(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_20236)
static void C_ccall f_20236(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_19984)
static void C_ccall f_19984(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_20210)
static void C_ccall f_20210(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_20206)
static void C_ccall f_20206(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_20152)
static void C_fcall f_20152(C_word t0,C_word t1) C_noret;
C_noret_decl(f_20117)
static void C_fcall f_20117(C_word t0,C_word t1) C_noret;
C_noret_decl(f_20133)
static void C_fcall f_20133(C_word t0,C_word t1) C_noret;
C_noret_decl(f_20088)
static void C_fcall f_20088(C_word t0,C_word t1) C_noret;
C_noret_decl(f_20012)
static void C_ccall f_20012(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_20015)
static void C_ccall f_20015(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_20079)
static void C_ccall f_20079(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_20075)
static void C_ccall f_20075(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_19995)
static void C_fcall f_19995(C_word t0,C_word t1) C_noret;
C_noret_decl(f_20006)
static void C_ccall f_20006(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_20002)
static void C_ccall f_20002(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_19924)
static void C_ccall f_19924(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4) C_noret;
C_noret_decl(f_19957)
static void C_ccall f_19957(C_word c,C_word t0,C_word t1,C_word t2,C_word t3) C_noret;
C_noret_decl(f_19939)
static void C_ccall f_19939(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_19951)
static void C_ccall f_19951(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_19542)
static void C_ccall f_19542(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4) C_noret;
C_noret_decl(f_19751)
static void C_fcall f_19751(C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_19761)
static void C_ccall f_19761(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_19772)
static void C_ccall f_19772(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_19892)
static void C_ccall f_19892(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_19871)
static void C_ccall f_19871(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_19850)
static void C_ccall f_19850(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_19829)
static void C_ccall f_19829(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_19808)
static void C_ccall f_19808(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_19787)
static void C_ccall f_19787(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_19775)
static void C_ccall f_19775(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_19552)
static void C_ccall f_19552(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_19555)
static void C_fcall f_19555(C_word t0,C_word t1) C_noret;
C_noret_decl(f_19718)
static void C_fcall f_19718(C_word t0,C_word t1) C_noret;
C_noret_decl(f_19558)
static void C_fcall f_19558(C_word t0,C_word t1) C_noret;
C_noret_decl(f_19709)
static void C_ccall f_19709(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_19689)
static void C_ccall f_19689(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_19561)
static void C_fcall f_19561(C_word t0,C_word t1) C_noret;
C_noret_decl(f_19654)
static void C_ccall f_19654(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_19671)
static void C_ccall f_19671(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_19564)
static void C_fcall f_19564(C_word t0,C_word t1) C_noret;
C_noret_decl(f_19603)
static void C_ccall f_19603(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_19637)
static void C_ccall f_19637(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_19621)
static void C_ccall f_19621(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_19606)
static void C_fcall f_19606(C_word t0,C_word t1) C_noret;
C_noret_decl(f_19571)
static void C_fcall f_19571(C_word t0,C_word t1) C_noret;
C_noret_decl(f_19582)
static void C_ccall f_19582(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_19586)
static void C_ccall f_19586(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_19578)
static void C_ccall f_19578(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_19460)
static void C_ccall f_19460(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4) C_noret;
C_noret_decl(f_19464)
static void C_ccall f_19464(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_19482)
static void C_ccall f_19482(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_19300)
static void C_fcall f_19300(C_word t0,C_word t1,C_word t2,C_word t3) C_noret;
C_noret_decl(f_19308)
static void C_fcall f_19308(C_word t0,C_word t1,C_word t2,C_word t3) C_noret;
C_noret_decl(f_19318)
static void C_ccall f_19318(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_19356)
static void C_ccall f_19356(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_19359)
static void C_ccall f_19359(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_19362)
static void C_ccall f_19362(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_19437)
static void C_fcall f_19437(C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_19447)
static void C_ccall f_19447(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_19365)
static void C_ccall f_19365(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_19368)
static void C_ccall f_19368(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_19371)
static void C_ccall f_19371(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_19391)
static void C_fcall f_19391(C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_19401)
static void C_ccall f_19401(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_19404)
static void C_ccall f_19404(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_19407)
static void C_ccall f_19407(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_19374)
static void C_ccall f_19374(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_19377)
static void C_ccall f_19377(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_19294)
static void C_fcall f_19294(C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_19288)
static void C_fcall f_19288(C_word t0,C_word t1) C_noret;
C_noret_decl(f_19282)
static void C_fcall f_19282(C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_19211)
static void C_fcall f_19211(C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_19252)
static void C_ccall f_19252(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_19256)
static void C_ccall f_19256(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_19260)
static void C_ccall f_19260(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_19264)
static void C_ccall f_19264(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_19268)
static void C_ccall f_19268(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_19272)
static void C_ccall f_19272(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_19276)
static void C_ccall f_19276(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_19280)
static void C_ccall f_19280(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_19213)
static void C_fcall f_19213(C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_19219)
static void C_fcall f_19219(C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_19241)
static void C_ccall f_19241(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_19230)
static void C_ccall f_19230(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_19060)
static void C_fcall f_19060(C_word t0,C_word t1) C_noret;
C_noret_decl(f_19075)
static void C_fcall f_19075(C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_19088)
static void C_ccall f_19088(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_19048)
static void C_ccall f_19048(C_word c,C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_19036)
static void C_ccall f_19036(C_word c,C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_19024)
static void C_ccall f_19024(C_word c,C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_19018)
static void C_fcall f_19018(C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_19012)
static void C_ccall f_19012(C_word c,C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_19000)
static void C_ccall f_19000(C_word c,C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_18988)
static void C_ccall f_18988(C_word c,C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_18976)
static void C_ccall f_18976(C_word c,C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_18964)
static void C_ccall f_18964(C_word c,C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_18958)
static void C_fcall f_18958(C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_18922)
static void C_ccall f_18922(C_word c,C_word t0,C_word t1,...) C_noret;
C_noret_decl(f_18916)
static void C_ccall f_18916(C_word c,C_word t0,C_word t1,...) C_noret;
C_noret_decl(f_18869)
static void C_ccall f_18869(C_word c,C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_18873)
static void C_ccall f_18873(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_18889)
static void C_ccall f_18889(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_18898)
static void C_ccall f_18898(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_18876)
static void C_ccall f_18876(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_18860)
static void C_ccall f_18860(C_word c,C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_18864)
static void C_ccall f_18864(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_18707)
static void C_ccall f_18707(C_word c,C_word t0,C_word t1,...) C_noret;
C_noret_decl(f_18707)
static void C_ccall f_18707r(C_word t0,C_word t1,C_word t3) C_noret;
C_noret_decl(f_18834)
static void C_fcall f_18834(C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_18847)
static void C_ccall f_18847(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_18829)
static void C_ccall f_18829(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_18710)
static void C_fcall f_18710(C_word t0,C_word t1,C_word t2,C_word t3) C_noret;
C_noret_decl(f_18826)
static void C_ccall f_18826(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_18810)
static void C_ccall f_18810(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_18738)
static void C_ccall f_18738(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_18746)
static void C_fcall f_18746(C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_18756)
static void C_ccall f_18756(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_18759)
static void C_ccall f_18759(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_18741)
static void C_ccall f_18741(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_18536)
static void C_ccall f_18536(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4,C_word t5) C_noret;
C_noret_decl(f_18542)
static void C_ccall f_18542(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_18545)
static void C_fcall f_18545(C_word t0,C_word t1) C_noret;
C_noret_decl(f_16345)
static void C_ccall f_16345(C_word c,C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_16358)
static void C_ccall f_16358(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4) C_noret;
C_noret_decl(f_16365)
static void C_fcall f_16365(C_word t0,C_word t1) C_noret;
C_noret_decl(f_16372)
static void C_ccall f_16372(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_16351)
static void C_ccall f_16351(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_18549)
static void C_ccall f_18549(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_18583)
static void C_ccall f_18583(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_18676)
static void C_fcall f_18676(C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_18686)
static void C_fcall f_18686(C_word t0,C_word t1) C_noret;
C_noret_decl(f_18589)
static void C_ccall f_18589(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_18646)
static void C_fcall f_18646(C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_18656)
static void C_fcall f_18656(C_word t0,C_word t1) C_noret;
C_noret_decl(f_18597)
static void C_ccall f_18597(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_18611)
static void C_ccall f_18611(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_18615)
static void C_ccall f_18615(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_18619)
static void C_ccall f_18619(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_18623)
static void C_ccall f_18623(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_18630)
static void C_ccall f_18630(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_18607)
static void C_ccall f_18607(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_18600)
static void C_ccall f_18600(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_18552)
static void C_ccall f_18552(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_17472)
static void C_ccall f_17472(C_word c,C_word t0,C_word t1,C_word t2,C_word t3) C_noret;
C_noret_decl(f_17485)
static void C_ccall f_17485(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_17535)
static void C_ccall f_17535(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_17632)
static void C_ccall f_17632(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_17700)
static void C_ccall f_17700(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_17957)
static void C_ccall f_17957(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_17707)
static void C_fcall f_17707(C_word t0,C_word t1) C_noret;
C_noret_decl(f_17945)
static void C_ccall f_17945(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_17896)
static void C_ccall f_17896(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_17902)
static void C_ccall f_17902(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_17926)
static void C_ccall f_17926(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_17922)
static void C_ccall f_17922(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_17910)
static void C_ccall f_17910(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_17710)
static void C_fcall f_17710(C_word t0,C_word t1) C_noret;
C_noret_decl(f_17872)
static void C_ccall f_17872(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_17876)
static void C_ccall f_17876(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_17713)
static void C_fcall f_17713(C_word t0,C_word t1) C_noret;
C_noret_decl(f_17849)
static void C_ccall f_17849(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_17853)
static void C_ccall f_17853(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_17716)
static void C_fcall f_17716(C_word t0,C_word t1) C_noret;
C_noret_decl(f_17826)
static void C_ccall f_17826(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_17830)
static void C_ccall f_17830(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_17719)
static void C_fcall f_17719(C_word t0,C_word t1) C_noret;
C_noret_decl(f_17751)
static void C_ccall f_17751(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_17769)
static void C_ccall f_17769(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_17787)
static void C_ccall f_17787(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_17805)
static void C_ccall f_17805(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_17722)
static void C_fcall f_17722(C_word t0,C_word t1) C_noret;
C_noret_decl(f_17726)
static void C_ccall f_17726(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_17636)
static void C_ccall f_17636(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_17640)
static void C_ccall f_17640(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_17644)
static void C_ccall f_17644(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_17539)
static void C_ccall f_17539(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_17543)
static void C_ccall f_17543(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_17547)
static void C_ccall f_17547(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_17566)
static void C_ccall f_17566(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_17570)
static void C_ccall f_17570(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_17550)
static void C_fcall f_17550(C_word t0,C_word t1) C_noret;
C_noret_decl(f_17554)
static void C_ccall f_17554(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_17489)
static void C_ccall f_17489(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_17493)
static void C_ccall f_17493(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_17497)
static void C_ccall f_17497(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_17479)
static void C_fcall f_17479(C_word t0,C_word t1) C_noret;
C_noret_decl(f_17294)
static void C_fcall f_17294(C_word t0,C_word t1) C_noret;
C_noret_decl(f_17306)
static void C_fcall f_17306(C_word t0,C_word t1) C_noret;
C_noret_decl(f_17325)
static void C_ccall f_17325(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_17343)
static void C_fcall f_17343(C_word t0,C_word t1,C_word t2,C_word t3,C_word t4) C_noret;
C_noret_decl(f_17375)
static void C_ccall f_17375(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_17378)
static void C_fcall f_17378(C_word t0,C_word t1) C_noret;
C_noret_decl(f_17371)
static void C_ccall f_17371(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_17357)
static void C_ccall f_17357(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_17328)
static void C_ccall f_17328(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_17273)
static void C_fcall f_17273(C_word t0,C_word t1) C_noret;
C_noret_decl(f_17280)
static void C_ccall f_17280(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_17283)
static void C_ccall f_17283(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_17289)
static void C_ccall f_17289(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_17208)
static void C_fcall f_17208(C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_17217)
static void C_fcall f_17217(C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_17240)
static void C_ccall f_17240(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_17230)
static void C_fcall f_17230(C_word t0,C_word t1) C_noret;
C_noret_decl(f_17164)
static void C_fcall f_17164(C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_17152)
static void C_fcall f_17152(C_word t0,C_word t1) C_noret;
C_noret_decl(f_17050)
static void C_fcall f_17050(C_word t0,C_word t1) C_noret;
C_noret_decl(f_17002)
static void C_fcall f_17002(C_word t0,C_word t1) C_noret;
C_noret_decl(f_16383)
static void C_fcall f_16383(C_word t0,C_word t1,C_word t2,C_word t3,C_word t4,C_word t5,C_word t6) C_noret;
C_noret_decl(f_16387)
static void C_ccall f_16387(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_16390)
static void C_ccall f_16390(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_16816)
static void C_ccall f_16816(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_16812)
static void C_ccall f_16812(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_16808)
static void C_ccall f_16808(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_16393)
static void C_fcall f_16393(C_word t0,C_word t1) C_noret;
C_noret_decl(f_16516)
static void C_ccall f_16516(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_15749)
static void C_ccall f_15749(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_16522)
static void C_fcall f_16522(C_word t0,C_word t1) C_noret;
C_noret_decl(f_15765)
static void C_ccall f_15765(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_16610)
static void C_fcall f_16610(C_word t0,C_word t1) C_noret;
C_noret_decl(f_16680)
static void C_ccall f_16680(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_15781)
static void C_ccall f_15781(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_16683)
static void C_fcall f_16683(C_word t0,C_word t1) C_noret;
C_noret_decl(f_15813)
static void C_ccall f_15813(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_16761)
static void C_fcall f_16761(C_word t0,C_word t1) C_noret;
C_noret_decl(f_16787)
static void C_ccall f_16787(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4) C_noret;
C_noret_decl(f_16781)
static void C_ccall f_16781(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_16770)
static void C_ccall f_16770(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_16712)
static void C_fcall f_16712(C_word t0,C_word t1) C_noret;
C_noret_decl(f_16722)
static void C_ccall f_16722(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_16748)
static void C_ccall f_16748(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4) C_noret;
C_noret_decl(f_16742)
static void C_ccall f_16742(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_16725)
static void C_ccall f_16725(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_16735)
static void C_ccall f_16735(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_16728)
static void C_fcall f_16728(C_word t0,C_word t1) C_noret;
C_noret_decl(f_16689)
static void C_ccall f_16689(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_16698)
static void C_ccall f_16698(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_16692)
static void C_fcall f_16692(C_word t0,C_word t1) C_noret;
C_noret_decl(f_16616)
static void C_ccall f_16616(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_16634)
static void C_fcall f_16634(C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_16667)
static void C_ccall f_16667(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4) C_noret;
C_noret_decl(f_16653)
static void C_ccall f_16653(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_16661)
static void C_ccall f_16661(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_16644)
static void C_ccall f_16644(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_16619)
static void C_ccall f_16619(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_16531)
static void C_ccall f_16531(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_16553)
static void C_fcall f_16553(C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_16600)
static void C_ccall f_16600(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4) C_noret;
C_noret_decl(f_16586)
static void C_ccall f_16586(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_16594)
static void C_ccall f_16594(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_16566)
static void C_ccall f_16566(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_16569)
static void C_fcall f_16569(C_word t0,C_word t1) C_noret;
C_noret_decl(f_16534)
static void C_ccall f_16534(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_16551)
static void C_ccall f_16551(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_16537)
static void C_fcall f_16537(C_word t0,C_word t1) C_noret;
C_noret_decl(f_16402)
static void C_ccall f_16402(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_16408)
static void C_ccall f_16408(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_16466)
static void C_ccall f_16466(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_16469)
static void C_ccall f_16469(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_16490)
static void C_ccall f_16490(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4) C_noret;
C_noret_decl(f_16501)
static void C_ccall f_16501(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_16480)
static void C_ccall f_16480(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_16414)
static void C_ccall f_16414(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_16424)
static void C_ccall f_16424(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_16460)
static void C_ccall f_16460(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_16430)
static void C_ccall f_16430(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_16445)
static void C_ccall f_16445(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_16449)
static void C_ccall f_16449(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_16453)
static void C_ccall f_16453(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_16437)
static void C_ccall f_16437(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_16279)
static void C_fcall f_16279(C_word t0,C_word t1) C_noret;
C_noret_decl(f_16281)
static void C_ccall f_16281(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4) C_noret;
C_noret_decl(f_16329)
static void C_ccall f_16329(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_16285)
static void C_ccall f_16285(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_16288)
static void C_fcall f_16288(C_word t0,C_word t1) C_noret;
C_noret_decl(f_16293)
static void C_fcall f_16293(C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_16314)
static void C_ccall f_16314(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_16271)
static void C_fcall f_16271(C_word t0,C_word t1) C_noret;
C_noret_decl(f_16273)
static void C_ccall f_16273(C_word c,C_word t0,C_word t1,C_word t2,C_word t3) C_noret;
C_noret_decl(f_16063)
static void C_fcall f_16063(C_word t0,C_word t1,C_word t2,C_word t3) C_noret;
C_noret_decl(f_16080)
static void C_ccall f_16080(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_16084)
static void C_ccall f_16084(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_16030)
static void C_fcall f_16030(C_word t0,C_word t1,C_word t2,C_word t3) C_noret;
C_noret_decl(f_16037)
static void C_ccall f_16037(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_15981)
static void C_ccall f_15981(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_15988)
static void C_ccall f_15988(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_16046)
static void C_ccall f_16046(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_16269)
static void C_ccall f_16269(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_16246)
static void C_ccall f_16246(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_16262)
static void C_ccall f_16262(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_16108)
static void C_ccall f_16108(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_16111)
static void C_ccall f_16111(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_16135)
static void C_ccall f_16135(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_16192)
static void C_ccall f_16192(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_16198)
static void C_ccall f_16198(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_16207)
static void C_ccall f_16207(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_16216)
static void C_ccall f_16216(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_16225)
static void C_ccall f_16225(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_16234)
static void C_ccall f_16234(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_16186)
static void C_ccall f_16186(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_16141)
static void C_ccall f_16141(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_16147)
static void C_ccall f_16147(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_16153)
static void C_ccall f_16153(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_16159)
static void C_ccall f_16159(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_16165)
static void C_ccall f_16165(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_16171)
static void C_ccall f_16171(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_16012)
static void C_fcall f_16012(C_word t0,C_word t1,C_word t2,C_word t3) C_noret;
C_noret_decl(f_16019)
static void C_ccall f_16019(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_16002)
static void C_fcall f_16002(C_word t0,C_word t1,C_word t2,C_word t3) C_noret;
C_noret_decl(f_15990)
static void C_fcall f_15990(C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_15958)
static void C_fcall f_15958(C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_15965)
static void C_ccall f_15965(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_15972)
static void C_ccall f_15972(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_15942)
static void C_fcall f_15942(C_word t0,C_word t1) C_noret;
C_noret_decl(f_15949)
static void C_ccall f_15949(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_15956)
static void C_ccall f_15956(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_15930)
static void C_fcall f_15930(C_word t0,C_word t1) C_noret;
C_noret_decl(f_15912)
static void C_fcall f_15912(C_word t0,C_word t1) C_noret;
C_noret_decl(f_15894)
static void C_fcall f_15894(C_word t0,C_word t1) C_noret;
C_noret_decl(f_15879)
static void C_fcall f_15879(C_word t0,C_word t1) C_noret;
C_noret_decl(f_15873)
static void C_fcall f_15873(C_word t0,C_word t1,C_word t2,C_word t3) C_noret;
C_noret_decl(f_15861)
static void C_fcall f_15861(C_word t0,C_word t1) C_noret;
C_noret_decl(f_15843)
static void C_fcall f_15843(C_word t0,C_word t1) C_noret;
C_noret_decl(f_15822)
static void C_fcall f_15822(C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_15790)
static void C_fcall f_15790(C_word t0,C_word t1) C_noret;
C_noret_decl(f_15797)
static void C_ccall f_15797(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_15732)
static void C_fcall f_15732(C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_15740)
static void C_ccall f_15740(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_15722)
static void C_fcall f_15722(C_word t0,C_word t1) C_noret;
C_noret_decl(f_15730)
static void C_ccall f_15730(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_15716)
static void C_fcall f_15716(C_word t0,C_word t1) C_noret;
C_noret_decl(f_15704)
static void C_fcall f_15704(C_word t0,C_word t1) C_noret;
C_noret_decl(f_15701)
static void C_ccall f_15701(C_word c,C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_15680)
static void C_fcall f_15680(C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_15593)
static void C_fcall f_15593(C_word t0,C_word t1) C_noret;
C_noret_decl(f_15572)
static void C_fcall f_15572(C_word t0,C_word t1,C_word t2,C_word t3,C_word t4,C_word t5) C_noret;
C_noret_decl(f_15562)
static void C_fcall f_15562(C_word t0,C_word t1) C_noret;
C_noret_decl(f_15550)
static void C_fcall f_15550(C_word t0,C_word t1) C_noret;
C_noret_decl(f_15521)
static void C_ccall f_15521(C_word c,C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_15509)
static void C_fcall f_15509(C_word t0,C_word t1) C_noret;
C_noret_decl(f_15491)
static void C_fcall f_15491(C_word t0,C_word t1) C_noret;
C_noret_decl(f_15473)
static void C_fcall f_15473(C_word t0,C_word t1) C_noret;
C_noret_decl(f_15452)
static void C_ccall f_15452(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4) C_noret;
C_noret_decl(f_15358)
static void C_ccall f_15358(C_word c,C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_15362)
static void C_ccall f_15362(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_15391)
static void C_ccall f_15391(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_15396)
static void C_fcall f_15396(C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_15421)
static void C_fcall f_15421(C_word t0,C_word t1) C_noret;
C_noret_decl(f_15406)
static void C_ccall f_15406(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_14840)
static void C_ccall f_14840(C_word c,C_word t0,C_word t1,C_word t2,...) C_noret;
C_noret_decl(f_14840)
static void C_ccall f_14840r(C_word t0,C_word t1,C_word t2,C_word t4) C_noret;
C_noret_decl(f_15111)
static void C_ccall f_15111(C_word c,C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_15115)
static void C_ccall f_15115(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_15120)
static void C_ccall f_15120(C_word c,C_word t0,C_word t1,C_word t2,...) C_noret;
C_noret_decl(f_15120)
static void C_ccall f_15120r(C_word t0,C_word t1,C_word t2,C_word t4) C_noret;
C_noret_decl(f_15326)
static void C_ccall f_15326(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_15341)
static void C_ccall f_15341(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_15333)
static void C_ccall f_15333(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_15297)
static void C_ccall f_15297(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_15301)
static void C_ccall f_15301(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_15262)
static void C_ccall f_15262(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_15266)
static void C_ccall f_15266(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_15124)
static void C_fcall f_15124(C_word t0,C_word t1) C_noret;
C_noret_decl(f_15226)
static void C_ccall f_15226(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_15241)
static void C_ccall f_15241(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_15233)
static void C_ccall f_15233(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_15197)
static void C_ccall f_15197(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_15201)
static void C_ccall f_15201(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_15162)
static void C_ccall f_15162(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_15166)
static void C_ccall f_15166(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_15127)
static void C_fcall f_15127(C_word t0,C_word t1) C_noret;
C_noret_decl(f_15130)
static void C_ccall f_15130(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_15133)
static void C_fcall f_15133(C_word t0,C_word t1) C_noret;
C_noret_decl(f_15102)
static void C_ccall f_15102(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_14844)
static void C_ccall f_14844(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_15071)
static void C_ccall f_15071(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_15086)
static void C_ccall f_15086(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_15078)
static void C_ccall f_15078(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_15042)
static void C_ccall f_15042(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_15046)
static void C_ccall f_15046(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_15007)
static void C_ccall f_15007(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_15011)
static void C_ccall f_15011(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_14847)
static void C_fcall f_14847(C_word t0,C_word t1) C_noret;
C_noret_decl(f_14971)
static void C_ccall f_14971(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_14986)
static void C_ccall f_14986(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_14978)
static void C_ccall f_14978(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_14942)
static void C_ccall f_14942(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_14946)
static void C_ccall f_14946(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_14907)
static void C_ccall f_14907(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_14911)
static void C_ccall f_14911(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_14850)
static void C_fcall f_14850(C_word t0,C_word t1) C_noret;
C_noret_decl(f_14853)
static void C_ccall f_14853(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_14856)
static void C_ccall f_14856(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_14868)
static void C_ccall f_14868(C_word c,C_word t0,C_word t1,C_word t2,C_word t3) C_noret;
C_noret_decl(f_14886)
static void C_ccall f_14886(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_14874)
static void C_ccall f_14874(C_word c,C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_14862)
static void C_ccall f_14862(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_14777)
static void C_fcall f_14777(C_word t0,C_word t1) C_noret;
C_noret_decl(f_14437)
static void C_ccall f_14437(C_word c,C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_14619)
static void C_ccall f_14619(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_14623)
static void C_ccall f_14623(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_14625)
static void C_fcall f_14625(C_word t0,C_word t1,C_word t2,C_word t3,C_word t4) C_noret;
C_noret_decl(f_14550)
static void C_fcall f_14550(C_word t0,C_word t1,C_word t2,C_word t3,C_word t4) C_noret;
C_noret_decl(f_14560)
static void C_fcall f_14560(C_word t0,C_word t1) C_noret;
C_noret_decl(f_14567)
static void C_fcall f_14567(C_word t0,C_word t1) C_noret;
C_noret_decl(f_14635)
static void C_ccall f_14635(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_14638)
static void C_ccall f_14638(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_14642)
static void C_ccall f_14642(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_14662)
static void C_fcall f_14662(C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_14678)
static void C_ccall f_14678(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_14645)
static void C_ccall f_14645(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_14440)
static void C_fcall f_14440(C_word t0,C_word t1,C_word t2,C_word t3) C_noret;
C_noret_decl(f_14452)
static void C_fcall f_14452(C_word t0,C_word t1,C_word t2,C_word t3,C_word t4) C_noret;
C_noret_decl(f_14488)
static void C_ccall f_14488(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_14508)
static void C_ccall f_14508(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_14513)
static void C_fcall f_14513(C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_13950)
static void C_ccall f_13950(C_word c,C_word t0,C_word t1,C_word t2,...) C_noret;
C_noret_decl(f_13950)
static void C_ccall f_13950r(C_word t0,C_word t1,C_word t2,C_word t4) C_noret;
C_noret_decl(f_13877)
static void C_fcall f_13877(C_word t0,C_word t1,C_word t2,C_word t3,C_word t4,C_word t5) C_noret;
C_noret_decl(f_13722)
static void C_ccall f_13722(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_13728)
static void C_ccall f_13728(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_13813)
static void C_fcall f_13813(C_word t0,C_word t1) C_noret;
C_noret_decl(f_13740)
static void C_ccall f_13740(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_13756)
static void C_ccall f_13756(C_word c,C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_13760)
static void C_fcall f_13760(C_word t0,C_word t1) C_noret;
C_noret_decl(f_13763)
static void C_fcall f_13763(C_word t0,C_word t1) C_noret;
C_noret_decl(f_13743)
static void C_ccall f_13743(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_13754)
static void C_ccall f_13754(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_13894)
static void C_ccall f_13894(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_14431)
static void C_ccall f_14431(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_13954)
static void C_ccall f_13954(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_14400)
static void C_ccall f_14400(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_14415)
static void C_ccall f_14415(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_14407)
static void C_ccall f_14407(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_14371)
static void C_ccall f_14371(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_14375)
static void C_ccall f_14375(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_14336)
static void C_ccall f_14336(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_14340)
static void C_ccall f_14340(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_14301)
static void C_ccall f_14301(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_14305)
static void C_ccall f_14305(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_13957)
static void C_fcall f_13957(C_word t0,C_word t1) C_noret;
C_noret_decl(f_14265)
static void C_ccall f_14265(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_14280)
static void C_ccall f_14280(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_14272)
static void C_ccall f_14272(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_14236)
static void C_ccall f_14236(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_14240)
static void C_ccall f_14240(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_14201)
static void C_ccall f_14201(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_14205)
static void C_ccall f_14205(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_14166)
static void C_ccall f_14166(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_14170)
static void C_ccall f_14170(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_13960)
static void C_fcall f_13960(C_word t0,C_word t1) C_noret;
C_noret_decl(f_14130)
static void C_ccall f_14130(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_14145)
static void C_ccall f_14145(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_14137)
static void C_ccall f_14137(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_14101)
static void C_ccall f_14101(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_14105)
static void C_ccall f_14105(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_14066)
static void C_ccall f_14066(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_14070)
static void C_ccall f_14070(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_14031)
static void C_ccall f_14031(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_14035)
static void C_ccall f_14035(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_13963)
static void C_fcall f_13963(C_word t0,C_word t1) C_noret;
C_noret_decl(f_13966)
static void C_ccall f_13966(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_13969)
static void C_ccall f_13969(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_14002)
static void C_ccall f_14002(C_word c,C_word t0,C_word t1,C_word t2,C_word t3) C_noret;
C_noret_decl(f_14010)
static void C_ccall f_14010(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_13975)
static void C_ccall f_13975(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_13988)
static void C_ccall f_13988(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_13978)
static void C_fcall f_13978(C_word t0,C_word t1) C_noret;
C_noret_decl(f_13981)
static void C_ccall f_13981(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_13517)
static void C_ccall f_13517(C_word c,C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_13521)
static void C_ccall f_13521(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_13524)
static void C_ccall f_13524(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_13527)
static void C_ccall f_13527(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_13696)
static void C_ccall f_13696(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_13709)
static void C_ccall f_13709(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_13713)
static void C_ccall f_13713(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_13533)
static void C_ccall f_13533(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_13689)
static void C_ccall f_13689(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_13670)
static void C_ccall f_13670(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_13677)
static void C_ccall f_13677(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_13681)
static void C_ccall f_13681(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_13539)
static void C_fcall f_13539(C_word t0,C_word t1) C_noret;
C_noret_decl(f_13545)
static void C_ccall f_13545(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_13629)
static void C_ccall f_13629(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_13631)
static void C_fcall f_13631(C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_13653)
static void C_ccall f_13653(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_13660)
static void C_ccall f_13660(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_13664)
static void C_ccall f_13664(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_13650)
static void C_fcall f_13650(C_word t0,C_word t1) C_noret;
C_noret_decl(f_13646)
static void C_ccall f_13646(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_13587)
static void C_ccall f_13587(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_13604)
static void C_fcall f_13604(C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_13614)
static void C_ccall f_13614(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_13590)
static void C_ccall f_13590(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_13549)
static void C_fcall f_13549(C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_13557)
static void C_ccall f_13557(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_13559)
static void C_fcall f_13559(C_word t0,C_word t1,C_word t2,C_word t3) C_noret;
C_noret_decl(f_13580)
static void C_ccall f_13580(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_13405)
static void C_fcall f_13405(C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_13515)
static void C_ccall f_13515(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_13474)
static void C_fcall f_13474(C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_13507)
static void C_ccall f_13507(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_13503)
static void C_ccall f_13503(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_13488)
static void C_ccall f_13488(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_13412)
static void C_ccall f_13412(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_13420)
static void C_fcall f_13420(C_word t0,C_word t1,C_word t2,C_word t3,C_word t4) C_noret;
C_noret_decl(f_13465)
static void C_ccall f_13465(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_13453)
static void C_ccall f_13453(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_13437)
static void C_ccall f_13437(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_12638)
static void C_ccall f_12638(C_word c,C_word t0,C_word t1,C_word t2,...) C_noret;
C_noret_decl(f_12638)
static void C_ccall f_12638r(C_word t0,C_word t1,C_word t2,C_word t4) C_noret;
C_noret_decl(f_12955)
static void C_ccall f_12955(C_word c,C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_12962)
static void C_fcall f_12962(C_word t0,C_word t1) C_noret;
C_noret_decl(f_13367)
static void C_ccall f_13367(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_13382)
static void C_ccall f_13382(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_13374)
static void C_ccall f_13374(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_13338)
static void C_ccall f_13338(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_13342)
static void C_ccall f_13342(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_13303)
static void C_ccall f_13303(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_13307)
static void C_ccall f_13307(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_13268)
static void C_ccall f_13268(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_13272)
static void C_ccall f_13272(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_12965)
static void C_fcall f_12965(C_word t0,C_word t1) C_noret;
C_noret_decl(f_13232)
static void C_ccall f_13232(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_13247)
static void C_ccall f_13247(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_13239)
static void C_ccall f_13239(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_13203)
static void C_ccall f_13203(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_13207)
static void C_ccall f_13207(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_13168)
static void C_ccall f_13168(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_13172)
static void C_ccall f_13172(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_13133)
static void C_ccall f_13133(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_13137)
static void C_ccall f_13137(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_12968)
static void C_fcall f_12968(C_word t0,C_word t1) C_noret;
C_noret_decl(f_13097)
static void C_ccall f_13097(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_13112)
static void C_ccall f_13112(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_13104)
static void C_ccall f_13104(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_13068)
static void C_ccall f_13068(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_13072)
static void C_ccall f_13072(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_13033)
static void C_ccall f_13033(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_13037)
static void C_ccall f_13037(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_12998)
static void C_ccall f_12998(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_13002)
static void C_ccall f_13002(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_12971)
static void C_fcall f_12971(C_word t0,C_word t1) C_noret;
C_noret_decl(f_12974)
static void C_ccall f_12974(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_12642)
static void C_ccall f_12642(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_12645)
static void C_ccall f_12645(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_12919)
static void C_ccall f_12919(C_word c,C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_12923)
static void C_ccall f_12923(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_12926)
static void C_ccall f_12926(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_12929)
static void C_ccall f_12929(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_12932)
static void C_ccall f_12932(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_12945)
static void C_ccall f_12945(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_12935)
static void C_fcall f_12935(C_word t0,C_word t1) C_noret;
C_noret_decl(f_12651)
static void C_ccall f_12651(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_12658)
static void C_fcall f_12658(C_word t0,C_word t1) C_noret;
C_noret_decl(f_12889)
static void C_ccall f_12889(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_12904)
static void C_ccall f_12904(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_12896)
static void C_ccall f_12896(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_12860)
static void C_ccall f_12860(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_12864)
static void C_ccall f_12864(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_12825)
static void C_ccall f_12825(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_12829)
static void C_ccall f_12829(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_12661)
static void C_fcall f_12661(C_word t0,C_word t1) C_noret;
C_noret_decl(f_12789)
static void C_ccall f_12789(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_12804)
static void C_ccall f_12804(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_12796)
static void C_ccall f_12796(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_12760)
static void C_ccall f_12760(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_12764)
static void C_ccall f_12764(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_12725)
static void C_ccall f_12725(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_12729)
static void C_ccall f_12729(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_12664)
static void C_fcall f_12664(C_word t0,C_word t1) C_noret;
C_noret_decl(f_12667)
static void C_ccall f_12667(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_12682)
static void C_ccall f_12682(C_word c,C_word t0,C_word t1,C_word t2,C_word t3) C_noret;
C_noret_decl(f_12704)
static void C_ccall f_12704(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_12688)
static void C_ccall f_12688(C_word c,C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_12696)
static void C_ccall f_12696(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_12670)
static void C_ccall f_12670(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_12673)
static void C_ccall f_12673(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_12555)
static void C_fcall f_12555(C_word t0,C_word t1) C_noret;
C_noret_decl(f_12546)
static void C_fcall f_12546(C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_12537)
static void C_fcall f_12537(C_word t0,C_word t1) C_noret;
C_noret_decl(f_12519)
static void C_fcall f_12519(C_word t0,C_word t1) C_noret;
C_noret_decl(f_12501)
static void C_fcall f_12501(C_word t0,C_word t1) C_noret;
C_noret_decl(f_12483)
static void C_fcall f_12483(C_word t0,C_word t1) C_noret;
C_noret_decl(f_12474)
static void C_fcall f_12474(C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_12465)
static void C_fcall f_12465(C_word t0,C_word t1) C_noret;
C_noret_decl(f_12243)
static void C_ccall f_12243(C_word c,C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_12293)
static void C_ccall f_12293(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_12438)
static void C_ccall f_12438(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_12319)
static void C_ccall f_12319(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_12434)
static void C_ccall f_12434(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_12419)
static void C_ccall f_12419(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_12400)
static void C_ccall f_12400(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_12373)
static void C_ccall f_12373(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_12326)
static void C_ccall f_12326(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_12296)
static void C_fcall f_12296(C_word t0,C_word t1) C_noret;
C_noret_decl(f_12246)
static void C_ccall f_12246(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4,C_word t5,C_word t6) C_noret;
C_noret_decl(f_12252)
static void C_fcall f_12252(C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_12268)
static void C_ccall f_12268(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_12271)
static void C_ccall f_12271(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_11769)
static void C_ccall f_11769(C_word c,C_word t0,C_word t1,C_word t2,...) C_noret;
C_noret_decl(f_11769)
static void C_ccall f_11769r(C_word t0,C_word t1,C_word t2,C_word t4) C_noret;
C_noret_decl(f_12233)
static void C_ccall f_12233(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_11773)
static void C_fcall f_11773(C_word t0,C_word t1) C_noret;
C_noret_decl(f_12205)
static void C_ccall f_12205(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_12220)
static void C_ccall f_12220(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_12212)
static void C_ccall f_12212(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_12176)
static void C_ccall f_12176(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_12180)
static void C_ccall f_12180(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_12141)
static void C_ccall f_12141(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_12145)
static void C_ccall f_12145(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_12106)
static void C_ccall f_12106(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_12110)
static void C_ccall f_12110(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_11776)
static void C_fcall f_11776(C_word t0,C_word t1) C_noret;
C_noret_decl(f_12070)
static void C_ccall f_12070(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_12085)
static void C_ccall f_12085(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_12077)
static void C_ccall f_12077(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_12041)
static void C_ccall f_12041(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_12045)
static void C_ccall f_12045(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_12006)
static void C_ccall f_12006(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_12010)
static void C_ccall f_12010(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_11971)
static void C_ccall f_11971(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_11975)
static void C_ccall f_11975(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_11779)
static void C_fcall f_11779(C_word t0,C_word t1) C_noret;
C_noret_decl(f_11935)
static void C_ccall f_11935(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_11950)
static void C_ccall f_11950(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_11942)
static void C_ccall f_11942(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_11906)
static void C_ccall f_11906(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_11910)
static void C_ccall f_11910(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_11871)
static void C_ccall f_11871(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_11875)
static void C_ccall f_11875(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_11836)
static void C_ccall f_11836(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_11840)
static void C_ccall f_11840(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_11782)
static void C_fcall f_11782(C_word t0,C_word t1) C_noret;
C_noret_decl(f_11785)
static void C_ccall f_11785(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_11788)
static void C_ccall f_11788(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_11803)
static void C_ccall f_11803(C_word c,C_word t0,C_word t1,C_word t2,C_word t3) C_noret;
C_noret_decl(f_11815)
static void C_ccall f_11815(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_11794)
static void C_ccall f_11794(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_11797)
static void C_ccall f_11797(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_11693)
static void C_ccall f_11693(C_word c,C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_11697)
static void C_ccall f_11697(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_11716)
static void C_ccall f_11716(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_11726)
static void C_ccall f_11726(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_11728)
static void C_fcall f_11728(C_word t0,C_word t1,C_word t2,C_word t3,C_word t4) C_noret;
C_noret_decl(f_11745)
static void C_ccall f_11745(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_11748)
static void C_ccall f_11748(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_11759)
static void C_ccall f_11759(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_11700)
static void C_ccall f_11700(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_11430)
static void C_ccall f_11430(C_word c,C_word t0,C_word t1,C_word t2,...) C_noret;
C_noret_decl(f_11430)
static void C_ccall f_11430r(C_word t0,C_word t1,C_word t2,C_word t4) C_noret;
C_noret_decl(f_11683)
static void C_ccall f_11683(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_11434)
static void C_fcall f_11434(C_word t0,C_word t1) C_noret;
C_noret_decl(f_11655)
static void C_ccall f_11655(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_11670)
static void C_ccall f_11670(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_11662)
static void C_ccall f_11662(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_11626)
static void C_ccall f_11626(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_11630)
static void C_ccall f_11630(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_11591)
static void C_ccall f_11591(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_11595)
static void C_ccall f_11595(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_11437)
static void C_fcall f_11437(C_word t0,C_word t1) C_noret;
C_noret_decl(f_11555)
static void C_ccall f_11555(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_11570)
static void C_ccall f_11570(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_11562)
static void C_ccall f_11562(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_11526)
static void C_ccall f_11526(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_11530)
static void C_ccall f_11530(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_11491)
static void C_ccall f_11491(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_11495)
static void C_ccall f_11495(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_11440)
static void C_fcall f_11440(C_word t0,C_word t1) C_noret;
C_noret_decl(f_11443)
static void C_ccall f_11443(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_11446)
static void C_ccall f_11446(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_11458)
static void C_ccall f_11458(C_word c,C_word t0,C_word t1,C_word t2,C_word t3) C_noret;
C_noret_decl(f_11470)
static void C_ccall f_11470(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_11452)
static void C_ccall f_11452(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_11394)
static void C_ccall f_11394(C_word c,C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_11398)
static void C_ccall f_11398(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_11420)
static void C_ccall f_11420(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_11414)
static void C_ccall f_11414(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_11407)
static void C_ccall f_11407(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_11147)
static void C_ccall f_11147(C_word c,C_word t0,C_word t1,C_word t2,...) C_noret;
C_noret_decl(f_11147)
static void C_ccall f_11147r(C_word t0,C_word t1,C_word t2,C_word t4) C_noret;
C_noret_decl(f_11151)
static void C_fcall f_11151(C_word t0,C_word t1) C_noret;
C_noret_decl(f_11364)
static void C_ccall f_11364(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_11379)
static void C_ccall f_11379(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_11371)
static void C_ccall f_11371(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_11335)
static void C_ccall f_11335(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_11339)
static void C_ccall f_11339(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_11300)
static void C_ccall f_11300(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_11304)
static void C_ccall f_11304(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_11154)
static void C_fcall f_11154(C_word t0,C_word t1) C_noret;
C_noret_decl(f_11264)
static void C_ccall f_11264(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_11279)
static void C_ccall f_11279(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_11271)
static void C_ccall f_11271(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_11235)
static void C_ccall f_11235(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_11239)
static void C_ccall f_11239(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_11200)
static void C_ccall f_11200(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_11204)
static void C_ccall f_11204(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_11157)
static void C_fcall f_11157(C_word t0,C_word t1) C_noret;
C_noret_decl(f_11160)
static void C_ccall f_11160(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_11163)
static void C_ccall f_11163(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_11171)
static void C_ccall f_11171(C_word c,C_word t0,C_word t1,C_word t2,C_word t3) C_noret;
C_noret_decl(f_11179)
static void C_ccall f_11179(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_11169)
static void C_ccall f_11169(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_10932)
static void C_ccall f_10932(C_word c,C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_10936)
static void C_ccall f_10936(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_11145)
static void C_ccall f_11145(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_11098)
static void C_ccall f_11098(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_11110)
static void C_fcall f_11110(C_word t0,C_word t1) C_noret;
C_noret_decl(f_10966)
static void C_ccall f_10966(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_10969)
static void C_ccall f_10969(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_10975)
static void C_ccall f_10975(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_10978)
static void C_ccall f_10978(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_11066)
static void C_fcall f_11066(C_word t0,C_word t1) C_noret;
C_noret_decl(f_10981)
static void C_fcall f_10981(C_word t0,C_word t1) C_noret;
C_noret_decl(f_11060)
static void C_ccall f_11060(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_10987)
static void C_ccall f_10987(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_10990)
static void C_ccall f_10990(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_10942)
static void C_ccall f_10942(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_10945)
static void C_ccall f_10945(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_10952)
static void C_ccall f_10952(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_10462)
static void C_ccall f_10462(C_word c,C_word t0,C_word t1,C_word t2,...) C_noret;
C_noret_decl(f_10462)
static void C_ccall f_10462r(C_word t0,C_word t1,C_word t2,C_word t4) C_noret;
C_noret_decl(f_10466)
static void C_fcall f_10466(C_word t0,C_word t1) C_noret;
C_noret_decl(f_10902)
static void C_ccall f_10902(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_10917)
static void C_ccall f_10917(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_10909)
static void C_ccall f_10909(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_10873)
static void C_ccall f_10873(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_10877)
static void C_ccall f_10877(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_10838)
static void C_ccall f_10838(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_10842)
static void C_ccall f_10842(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_10803)
static void C_ccall f_10803(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_10807)
static void C_ccall f_10807(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_10469)
static void C_fcall f_10469(C_word t0,C_word t1) C_noret;
C_noret_decl(f_10767)
static void C_ccall f_10767(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_10782)
static void C_ccall f_10782(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_10774)
static void C_ccall f_10774(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_10738)
static void C_ccall f_10738(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_10742)
static void C_ccall f_10742(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_10703)
static void C_ccall f_10703(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_10707)
static void C_ccall f_10707(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_10668)
static void C_ccall f_10668(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_10672)
static void C_ccall f_10672(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_10472)
static void C_fcall f_10472(C_word t0,C_word t1) C_noret;
C_noret_decl(f_10632)
static void C_ccall f_10632(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_10647)
static void C_ccall f_10647(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_10639)
static void C_ccall f_10639(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_10603)
static void C_ccall f_10603(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_10607)
static void C_ccall f_10607(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_10568)
static void C_ccall f_10568(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_10572)
static void C_ccall f_10572(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_10533)
static void C_ccall f_10533(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_10537)
static void C_ccall f_10537(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_10475)
static void C_fcall f_10475(C_word t0,C_word t1) C_noret;
C_noret_decl(f_10478)
static void C_ccall f_10478(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_10481)
static void C_ccall f_10481(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_10504)
static void C_ccall f_10504(C_word c,C_word t0,C_word t1,C_word t2,C_word t3) C_noret;
C_noret_decl(f_10512)
static void C_ccall f_10512(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_10487)
static void C_ccall f_10487(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_10490)
static void C_ccall f_10490(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_10382)
static void C_fcall f_10382(C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_10373)
static void C_fcall f_10373(C_word t0,C_word t1) C_noret;
C_noret_decl(f_10301)
static void C_ccall f_10301(C_word c,C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_10305)
static void C_ccall f_10305(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_10308)
static void C_fcall f_10308(C_word t0,C_word t1) C_noret;
C_noret_decl(f_10046)
static void C_ccall f_10046(C_word c,C_word t0,C_word t1,C_word t2,...) C_noret;
C_noret_decl(f_10046)
static void C_ccall f_10046r(C_word t0,C_word t1,C_word t2,C_word t4) C_noret;
C_noret_decl(f_10050)
static void C_fcall f_10050(C_word t0,C_word t1) C_noret;
C_noret_decl(f_10271)
static void C_ccall f_10271(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_10286)
static void C_ccall f_10286(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_10278)
static void C_ccall f_10278(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_10242)
static void C_ccall f_10242(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_10246)
static void C_ccall f_10246(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_10207)
static void C_ccall f_10207(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_10211)
static void C_ccall f_10211(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_10053)
static void C_fcall f_10053(C_word t0,C_word t1) C_noret;
C_noret_decl(f_10171)
static void C_ccall f_10171(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_10186)
static void C_ccall f_10186(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_10178)
static void C_ccall f_10178(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_10142)
static void C_ccall f_10142(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_10146)
static void C_ccall f_10146(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_10107)
static void C_ccall f_10107(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_10111)
static void C_ccall f_10111(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_10056)
static void C_fcall f_10056(C_word t0,C_word t1) C_noret;
C_noret_decl(f_10059)
static void C_ccall f_10059(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_10062)
static void C_ccall f_10062(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_10074)
static void C_ccall f_10074(C_word c,C_word t0,C_word t1,C_word t2,C_word t3) C_noret;
C_noret_decl(f_10086)
static void C_ccall f_10086(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_10068)
static void C_ccall f_10068(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_9931)
static void C_fcall f_9931(C_word t0,C_word t1) C_noret;
C_noret_decl(f_10044)
static void C_ccall f_10044(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_9941)
static void C_ccall f_9941(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_10029)
static void C_ccall f_10029(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_10040)
static void C_ccall f_10040(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_10036)
static void C_ccall f_10036(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_9944)
static void C_ccall f_9944(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_10026)
static void C_ccall f_10026(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_9952)
static void C_ccall f_9952(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_10016)
static void C_ccall f_10016(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_9961)
static void C_ccall f_9961(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_9980)
static void C_ccall f_9980(C_word c,C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_10009)
static void C_ccall f_10009(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_9990)
static void C_ccall f_9990(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_10005)
static void C_ccall f_10005(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_9993)
static void C_ccall f_9993(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_9964)
static void C_ccall f_9964(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_9974)
static void C_ccall f_9974(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_9955)
static void C_fcall f_9955(C_word t0,C_word t1) C_noret;
C_noret_decl(f_9958)
static void C_ccall f_9958(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_9885)
static void C_fcall f_9885(C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_9876)
static void C_fcall f_9876(C_word t0,C_word t1) C_noret;
C_noret_decl(f_9575)
static void C_fcall f_9575(C_word t0,C_word t1) C_noret;
C_noret_decl(f_9582)
static void C_ccall f_9582(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_9871)
static void C_ccall f_9871(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_9585)
static void C_ccall f_9585(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_9856)
static void C_ccall f_9856(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_9848)
static void C_ccall f_9848(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_9840)
static void C_ccall f_9840(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_9843)
static void C_ccall f_9843(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_9811)
static void C_fcall f_9811(C_word t0,C_word t1) C_noret;
C_noret_decl(f_9834)
static void C_ccall f_9834(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_9817)
static void C_fcall f_9817(C_word t0,C_word t1) C_noret;
C_noret_decl(f_9821)
static void C_ccall f_9821(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_9588)
static void C_ccall f_9588(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_9594)
static void C_ccall f_9594(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_9686)
static void C_ccall f_9686(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_9798)
static void C_ccall f_9798(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_9805)
static void C_ccall f_9805(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_9709)
static void C_fcall f_9709(C_word t0,C_word t1) C_noret;
C_noret_decl(f_9711)
static void C_fcall f_9711(C_word t0,C_word t1,C_word t2,C_word t3) C_noret;
C_noret_decl(f_9760)
static void C_fcall f_9760(C_word t0,C_word t1) C_noret;
C_noret_decl(f_9795)
static void C_ccall f_9795(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_9784)
static void C_ccall f_9784(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_9929)
static void C_ccall f_9929(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_9904)
static void C_ccall f_9904(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_9925)
static void C_ccall f_9925(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_9921)
static void C_ccall f_9921(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_9913)
static void C_ccall f_9913(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_9777)
static void C_ccall f_9777(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_9770)
static void C_ccall f_9770(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_9718)
static void C_ccall f_9718(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_9758)
static void C_ccall f_9758(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_9722)
static void C_ccall f_9722(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_9754)
static void C_ccall f_9754(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_9741)
static void C_ccall f_9741(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_9749)
static void C_ccall f_9749(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_9745)
static void C_ccall f_9745(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_9725)
static void C_fcall f_9725(C_word t0,C_word t1) C_noret;
C_noret_decl(f_9728)
static void C_ccall f_9728(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_9702)
static void C_ccall f_9702(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_9689)
static void C_ccall f_9689(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_9698)
static void C_ccall f_9698(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_9693)
static void C_ccall f_9693(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_9600)
static void C_ccall f_9600(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_9680)
static void C_ccall f_9680(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_9660)
static void C_ccall f_9660(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_9666)
static void C_ccall f_9666(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_9677)
static void C_ccall f_9677(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_9657)
static void C_ccall f_9657(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_9645)
static void C_ccall f_9645(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_9648)
static void C_ccall f_9648(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_9603)
static void C_ccall f_9603(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_9639)
static void C_ccall f_9639(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_9634)
static void C_ccall f_9634(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_9606)
static void C_ccall f_9606(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_9619)
static void C_ccall f_9619(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_9609)
static void C_fcall f_9609(C_word t0,C_word t1) C_noret;
C_noret_decl(f_9612)
static void C_ccall f_9612(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_9615)
static void C_ccall f_9615(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_9452)
static void C_ccall f_9452(C_word c,C_word t0,C_word t1,C_word t2,...) C_noret;
C_noret_decl(f_9452)
static void C_ccall f_9452r(C_word t0,C_word t1,C_word t2,C_word t4) C_noret;
C_noret_decl(f_9511)
static void C_ccall f_9511(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_9521)
static void C_ccall f_9521(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_9523)
static void C_fcall f_9523(C_word t0,C_word t1,C_word t2,C_word t3,C_word t4) C_noret;
C_noret_decl(f_9552)
static void C_ccall f_9552(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_9557)
static void C_ccall f_9557(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_9542)
static void C_fcall f_9542(C_word t0,C_word t1) C_noret;
C_noret_decl(f_9473)
static void C_fcall f_9473(C_word t0,C_word t1,C_word t2,C_word t3) C_noret;
C_noret_decl(f_9505)
static void C_ccall f_9505(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_9433)
static void C_ccall f_9433(C_word c,C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_9440)
static void C_ccall f_9440(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_9447)
static void C_ccall f_9447(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_9414)
static void C_ccall f_9414(C_word c,C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_9421)
static void C_ccall f_9421(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_9428)
static void C_ccall f_9428(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_9234)
static void C_fcall f_9234(C_word t0,C_word t1,C_word t2,C_word t3,C_word t4,C_word t5,C_word t6,C_word t7,C_word t8,C_word t9) C_noret;
C_noret_decl(f_9238)
static void C_ccall f_9238(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_9241)
static void C_ccall f_9241(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_9244)
static void C_ccall f_9244(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_9247)
static void C_ccall f_9247(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_9404)
static void C_ccall f_9404(C_word c,C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_9411)
static void C_ccall f_9411(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_9250)
static void C_ccall f_9250(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_9253)
static void C_fcall f_9253(C_word t0,C_word t1) C_noret;
C_noret_decl(f_9259)
static void C_ccall f_9259(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_9265)
static void C_ccall f_9265(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_9328)
static void C_ccall f_9328(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_9342)
static void C_ccall f_9342(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_9268)
static void C_fcall f_9268(C_word t0,C_word t1) C_noret;
C_noret_decl(f_9271)
static void C_ccall f_9271(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_9277)
static void C_fcall f_9277(C_word t0,C_word t1) C_noret;
C_noret_decl(f_9290)
static void C_ccall f_9290(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_9280)
static void C_ccall f_9280(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_9283)
static void C_ccall f_9283(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_9224)
static void C_fcall f_9224(C_word t0) C_noret;
C_noret_decl(f_9169)
static void C_fcall f_9169(C_word t0,C_word t1) C_noret;
C_noret_decl(f_9160)
static void C_fcall f_9160(C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_9043)
static void C_fcall f_9043(C_word t0,C_word t1) C_noret;
C_noret_decl(f_9034)
static void C_fcall f_9034(C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_9025)
static void C_ccall f_9025(C_word c,C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_9016)
static void C_fcall f_9016(C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_9007)
static void C_fcall f_9007(C_word t0,C_word t1) C_noret;
C_noret_decl(f_8989)
static void C_fcall f_8989(C_word t0,C_word t1) C_noret;
C_noret_decl(f_8980)
static void C_fcall f_8980(C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_8971)
static void C_fcall f_8971(C_word t0,C_word t1) C_noret;
C_noret_decl(f_8953)
static void C_fcall f_8953(C_word t0,C_word t1) C_noret;
C_noret_decl(f_8944)
static void C_fcall f_8944(C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_8935)
static void C_fcall f_8935(C_word t0,C_word t1) C_noret;
C_noret_decl(f_8920)
static void C_fcall f_8920(C_word t0,C_word t1) C_noret;
C_noret_decl(f_8875)
static void C_fcall f_8875(C_word t0,C_word t1) C_noret;
C_noret_decl(f_8857)
static void C_fcall f_8857(C_word t0,C_word t1) C_noret;
C_noret_decl(f_8848)
static void C_fcall f_8848(C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_8821)
static void C_fcall f_8821(C_word t0,C_word t1) C_noret;
C_noret_decl(f_8803)
static void C_fcall f_8803(C_word t0,C_word t1) C_noret;
C_noret_decl(f_8785)
static void C_fcall f_8785(C_word t0,C_word t1) C_noret;
C_noret_decl(f_8776)
static void C_fcall f_8776(C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_8764)
static void C_fcall f_8764(C_word t0,C_word t1,C_word t2,C_word t3,C_word t4,C_word t5,C_word t6) C_noret;
C_noret_decl(f_8598)
static void C_ccall f_8598(C_word c,C_word t0,C_word t1,C_word t2,C_word t3) C_noret;
C_noret_decl(f_8699)
static void C_ccall f_8699(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_8748)
static void C_ccall f_8748(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_8744)
static void C_ccall f_8744(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_8716)
static void C_ccall f_8716(C_word c,C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_8651)
static void C_fcall f_8651(C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_8660)
static void C_fcall f_8660(C_word t0,C_word t1,C_word t2,C_word t3) C_noret;
C_noret_decl(f_8644)
static void C_ccall f_8644(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_8463)
static void C_ccall f_8463(C_word c,C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_8589)
static void C_ccall f_8589(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_8585)
static void C_ccall f_8585(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_8563)
static void C_ccall f_8563(C_word c,C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_8493)
static void C_fcall f_8493(C_word t0,C_word t1) C_noret;
C_noret_decl(f_8509)
static void C_fcall f_8509(C_word t0,C_word t1,C_word t2,C_word t3) C_noret;
C_noret_decl(f_8418)
static void C_ccall f_8418(C_word c,C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_8461)
static void C_ccall f_8461(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_8450)
static void C_ccall f_8450(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_8302)
static void C_ccall f_8302(C_word c,C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_8416)
static void C_ccall f_8416(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_8317)
static void C_fcall f_8317(C_word t0,C_word t1,C_word t2,C_word t3,C_word t4,C_word t5) C_noret;
C_noret_decl(f_8347)
static void C_fcall f_8347(C_word t0,C_word t1) C_noret;
C_noret_decl(f_8366)
static void C_ccall f_8366(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_8351)
static void C_ccall f_8351(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_8330)
static void C_fcall f_8330(C_word t0,C_word t1) C_noret;
C_noret_decl(f_8180)
static void C_ccall f_8180(C_word c,C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_8300)
static void C_ccall f_8300(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_8195)
static void C_fcall f_8195(C_word t0,C_word t1,C_word t2,C_word t3,C_word t4,C_word t5) C_noret;
C_noret_decl(f_8225)
static void C_fcall f_8225(C_word t0,C_word t1) C_noret;
C_noret_decl(f_8244)
static void C_ccall f_8244(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_8229)
static void C_ccall f_8229(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_8208)
static void C_fcall f_8208(C_word t0,C_word t1) C_noret;
C_noret_decl(f_8083)
static void C_ccall f_8083(C_word c,C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_8178)
static void C_ccall f_8178(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_8098)
static void C_fcall f_8098(C_word t0,C_word t1,C_word t2,C_word t3,C_word t4,C_word t5) C_noret;
C_noret_decl(f_8144)
static void C_ccall f_8144(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_8129)
static void C_ccall f_8129(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_8111)
static void C_fcall f_8111(C_word t0,C_word t1) C_noret;
C_noret_decl(f_8030)
static void C_fcall f_8030(C_word t0,C_word t1,C_word t2,C_word t3) C_noret;
C_noret_decl(f_8068)
static void C_ccall f_8068(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_8075)
static void C_ccall f_8075(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_8053)
static void C_ccall f_8053(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_8028)
static void C_ccall f_8028(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_8000)
static void C_fcall f_8000(C_word t0,C_word t1) C_noret;
C_noret_decl(f_8002)
static void C_ccall f_8002(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_7980)
static void C_ccall f_7980(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_7928)
static void C_fcall f_7928(C_word t0,C_word t1,C_word t2,C_word t3) C_noret;
C_noret_decl(f_7965)
static void C_ccall f_7965(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_7932)
static void C_ccall f_7932(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_7948)
static void C_ccall f_7948(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_7950)
static void C_ccall f_7950(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_7900)
static void C_ccall f_7900(C_word c,C_word t0,C_word t1,...) C_noret;
C_noret_decl(f_7900)
static void C_ccall f_7900r(C_word t0,C_word t1,C_word t3) C_noret;
C_noret_decl(f_7881)
static void C_ccall f_7881(C_word c,C_word t0,C_word t1,...) C_noret;
C_noret_decl(f_7881)
static void C_ccall f_7881r(C_word t0,C_word t1,C_word t3) C_noret;
C_noret_decl(f_7840)
static void C_ccall f_7840(C_word c,C_word t0,C_word t1,...) C_noret;
C_noret_decl(f_7840)
static void C_ccall f_7840r(C_word t0,C_word t1,C_word t3) C_noret;
C_noret_decl(f_7821)
static void C_ccall f_7821(C_word c,C_word t0,C_word t1,...) C_noret;
C_noret_decl(f_7821)
static void C_ccall f_7821r(C_word t0,C_word t1,C_word t3) C_noret;
C_noret_decl(f_7593)
static void C_ccall f_7593(C_word c,C_word t0,C_word t1,...) C_noret;
C_noret_decl(f_7593)
static void C_ccall f_7593r(C_word t0,C_word t1,C_word t3) C_noret;
C_noret_decl(f_7798)
static void C_ccall f_7798(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_7813)
static void C_ccall f_7813(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_7805)
static void C_ccall f_7805(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_7769)
static void C_ccall f_7769(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_7773)
static void C_ccall f_7773(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_7734)
static void C_ccall f_7734(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_7738)
static void C_ccall f_7738(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_7597)
static void C_fcall f_7597(C_word t0,C_word t1) C_noret;
C_noret_decl(f_7698)
static void C_ccall f_7698(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_7713)
static void C_ccall f_7713(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_7705)
static void C_ccall f_7705(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_7669)
static void C_ccall f_7669(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_7673)
static void C_ccall f_7673(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_7634)
static void C_ccall f_7634(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_7638)
static void C_ccall f_7638(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_7600)
static void C_fcall f_7600(C_word t0,C_word t1) C_noret;
C_noret_decl(f_7603)
static void C_ccall f_7603(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_7606)
static void C_fcall f_7606(C_word t0,C_word t1) C_noret;
C_noret_decl(f_7362)
static void C_ccall f_7362(C_word c,C_word t0,C_word t1,C_word t2,...) C_noret;
C_noret_decl(f_7362)
static void C_ccall f_7362r(C_word t0,C_word t1,C_word t2,C_word t4) C_noret;
C_noret_decl(f_7567)
static void C_ccall f_7567(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_7582)
static void C_ccall f_7582(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_7574)
static void C_ccall f_7574(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_7538)
static void C_ccall f_7538(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_7542)
static void C_ccall f_7542(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_7503)
static void C_ccall f_7503(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_7507)
static void C_ccall f_7507(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_7366)
static void C_fcall f_7366(C_word t0,C_word t1) C_noret;
C_noret_decl(f_7467)
static void C_ccall f_7467(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_7482)
static void C_ccall f_7482(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_7474)
static void C_ccall f_7474(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_7438)
static void C_ccall f_7438(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_7442)
static void C_ccall f_7442(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_7403)
static void C_ccall f_7403(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_7407)
static void C_ccall f_7407(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_7369)
static void C_fcall f_7369(C_word t0,C_word t1) C_noret;
C_noret_decl(f_7372)
static void C_ccall f_7372(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_7382)
static void C_ccall f_7382(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_7319)
static void C_ccall f_7319(C_word c,C_word t0,C_word t1,...) C_noret;
C_noret_decl(f_7319)
static void C_ccall f_7319r(C_word t0,C_word t1,C_word t3) C_noret;
C_noret_decl(f_7352)
static void C_ccall f_7352(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_7337)
static void C_ccall f_7337(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_7298)
static void C_ccall f_7298(C_word c,C_word t0,C_word t1,C_word t2,C_word t3) C_noret;
C_noret_decl(f_7274)
static void C_ccall f_7274(C_word c,C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_7200)
static void C_ccall f_7200(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,...) C_noret;
C_noret_decl(f_7200)
static void C_ccall f_7200r(C_word t0,C_word t1,C_word t2,C_word t3,C_word t5) C_noret;
C_noret_decl(f_7207)
static void C_fcall f_7207(C_word t0,C_word t1) C_noret;
C_noret_decl(f_7216)
static void C_fcall f_7216(C_word t0,C_word t1,C_word t2,C_word t3,C_word t4,C_word t5) C_noret;
C_noret_decl(f_7252)
static void C_ccall f_7252(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_7173)
static void C_ccall f_7173(C_word c,C_word t0,C_word t1,C_word t2,...) C_noret;
C_noret_decl(f_7173)
static void C_ccall f_7173r(C_word t0,C_word t1,C_word t2,C_word t4) C_noret;
C_noret_decl(f_7078)
static void C_ccall f_7078(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,...) C_noret;
C_noret_decl(f_7078)
static void C_ccall f_7078r(C_word t0,C_word t1,C_word t2,C_word t3,C_word t5) C_noret;
C_noret_decl(f_7082)
static void C_ccall f_7082(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_7085)
static void C_ccall f_7085(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_7097)
static void C_fcall f_7097(C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_7119)
static void C_ccall f_7119(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_7063)
static void C_ccall f_7063(C_word c,C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_7048)
static void C_ccall f_7048(C_word c,C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_6812)
static void C_ccall f_6812(C_word c,C_word t0,C_word t1,C_word t2,...) C_noret;
C_noret_decl(f_6812)
static void C_ccall f_6812r(C_word t0,C_word t1,C_word t2,C_word t4) C_noret;
C_noret_decl(f_7025)
static void C_ccall f_7025(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_7040)
static void C_ccall f_7040(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_7032)
static void C_ccall f_7032(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_6996)
static void C_ccall f_6996(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_7000)
static void C_ccall f_7000(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_6961)
static void C_ccall f_6961(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_6965)
static void C_ccall f_6965(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_6816)
static void C_fcall f_6816(C_word t0,C_word t1) C_noret;
C_noret_decl(f_6925)
static void C_ccall f_6925(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_6940)
static void C_ccall f_6940(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_6932)
static void C_ccall f_6932(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_6896)
static void C_ccall f_6896(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_6900)
static void C_ccall f_6900(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_6861)
static void C_ccall f_6861(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_6865)
static void C_ccall f_6865(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_6819)
static void C_fcall f_6819(C_word t0,C_word t1) C_noret;
C_noret_decl(f_6822)
static void C_ccall f_6822(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_6833)
static void C_ccall f_6833(C_word c,C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_6793)
static void C_ccall f_6793(C_word c,C_word t0,C_word t1,C_word t2,...) C_noret;
C_noret_decl(f_6793)
static void C_ccall f_6793r(C_word t0,C_word t1,C_word t2,C_word t4) C_noret;
C_noret_decl(f_6772)
static void C_ccall f_6772(C_word c,C_word t0,C_word t1,C_word t2,C_word t3) C_noret;
C_noret_decl(f_6784)
static void C_ccall f_6784(C_word c,C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_6746)
static void C_ccall f_6746(C_word c,C_word t0,C_word t1,C_word t2,...) C_noret;
C_noret_decl(f_6746)
static void C_ccall f_6746r(C_word t0,C_word t1,C_word t2,C_word t4) C_noret;
C_noret_decl(f_6704)
static void C_ccall f_6704(C_word c,C_word t0,C_word t1,...) C_noret;
C_noret_decl(f_6704)
static void C_ccall f_6704r(C_word t0,C_word t1,C_word t3) C_noret;
C_noret_decl(f_6689)
static void C_ccall f_6689(C_word c,C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_6607)
static void C_ccall f_6607(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4,C_word t5,...) C_noret;
C_noret_decl(f_6607)
static void C_ccall f_6607r(C_word t0,C_word t1,C_word t2,C_word t3,C_word t4,C_word t5,C_word t7) C_noret;
C_noret_decl(f_6621)
static void C_ccall f_6621(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_6573)
static void C_ccall f_6573(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4,C_word t5,C_word t6,...) C_noret;
C_noret_decl(f_6573)
static void C_ccall f_6573r(C_word t0,C_word t1,C_word t2,C_word t3,C_word t4,C_word t5,C_word t6,C_word t8) C_noret;
C_noret_decl(f_6585)
static void C_ccall f_6585(C_word c,C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_6570)
static void C_ccall f_6570(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_6567)
static void C_ccall f_6567(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_6560)
static void C_fcall f_6560(C_word t0,C_word t1) C_noret;
C_noret_decl(f_6557)
static void C_ccall f_6557(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_6550)
static void C_fcall f_6550(C_word t0,C_word t1) C_noret;
C_noret_decl(f_6532)
static void C_fcall f_6532(C_word t0,C_word t1) C_noret;
C_noret_decl(f_6521)
static void C_fcall f_6521(C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_6518)
static void C_ccall f_6518(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_6515)
static void C_ccall f_6515(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_6512)
static void C_ccall f_6512(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_6483)
static void C_fcall f_6483(C_word t0,C_word t1) C_noret;
C_noret_decl(f_6476)
static void C_fcall f_6476(C_word t0,C_word t1) C_noret;
C_noret_decl(f_6473)
static void C_ccall f_6473(C_word c,C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_6452)
static void C_fcall f_6452(C_word t0,C_word t1) C_noret;
C_noret_decl(f_6445)
static void C_ccall f_6445(C_word c,C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_6438)
static void C_ccall f_6438(C_word c,C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_6423)
static void C_fcall f_6423(C_word t0,C_word t1,C_word t2,C_word t3) C_noret;
C_noret_decl(f_6412)
static void C_fcall f_6412(C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_6401)
static void C_fcall f_6401(C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_6394)
static void C_ccall f_6394(C_word c,C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_6367)
static void C_fcall f_6367(C_word t0,C_word t1,C_word t2,C_word t3,C_word t4,C_word t5,C_word t6) C_noret;
C_noret_decl(f_6340)
static void C_fcall f_6340(C_word t0,C_word t1,C_word t2,C_word t3,C_word t4,C_word t5,C_word t6) C_noret;
C_noret_decl(f_6299)
static void C_fcall f_6299(C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_6305)
static void C_fcall f_6305(C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_6315)
static void C_fcall f_6315(C_word t0,C_word t1) C_noret;
C_noret_decl(f_6213)
static void C_ccall f_6213(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,...) C_noret;
C_noret_decl(f_6213)
static void C_ccall f_6213r(C_word t0,C_word t1,C_word t2,C_word t3,C_word t5) C_noret;
C_noret_decl(f_6165)
static void C_ccall f_6165(C_word c,C_word t0,C_word t1,C_word t2,...) C_noret;
C_noret_decl(f_6165)
static void C_ccall f_6165r(C_word t0,C_word t1,C_word t2,C_word t4) C_noret;
C_noret_decl(f_6177)
static void C_fcall f_6177(C_word t0,C_word t1,C_word t2,C_word t3) C_noret;
C_noret_decl(f_6194)
static void C_ccall f_6194(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_6155)
static void C_ccall f_6155(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4) C_noret;
C_noret_decl(f_6115)
static void C_ccall f_6115(C_word c,C_word t0,C_word t1,...) C_noret;
C_noret_decl(f_6115)
static void C_ccall f_6115r(C_word t0,C_word t1,C_word t3) C_noret;
C_noret_decl(f_6145)
static void C_ccall f_6145(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_6047)
static void C_ccall f_6047(C_word c,C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_6081)
static void C_ccall f_6081(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_6024)
static void C_ccall f_6024(C_word c,C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_6018)
static void C_ccall f_6018(C_word c,C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_6003)
static void C_ccall f_6003(C_word c,C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_5989)
static void C_ccall f_5989(C_word c,C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_5979)
static void C_ccall f_5979(C_word c,C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_5969)
static void C_ccall f_5969(C_word c,C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_5959)
static void C_ccall f_5959(C_word c,C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_5949)
static void C_ccall f_5949(C_word c,C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_5920)
static void C_ccall f_5920(C_word c,C_word t0,C_word t1,...) C_noret;
C_noret_decl(f_5920)
static void C_ccall f_5920r(C_word t0,C_word t1,C_word t3) C_noret;
C_noret_decl(f_5929)
static void C_ccall f_5929(C_word c,C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_5934)
static void C_ccall f_5934(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_5909)
static void C_ccall f_5909(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_5914)
static void C_ccall f_5914(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_5616)
static void C_ccall f_5616(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4) C_noret;
C_noret_decl(f_5626)
static void C_ccall f_5626(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_5877)
static void C_ccall f_5877(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_5629)
static void C_ccall f_5629(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_5632)
static void C_ccall f_5632(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_5647)
static void C_fcall f_5647(C_word t0,C_word t1) C_noret;
C_noret_decl(f_5657)
static void C_ccall f_5657(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_5659)
static void C_fcall f_5659(C_word t0,C_word t1,C_word t2,C_word t3,C_word t4,C_word t5) C_noret;
C_noret_decl(f_5718)
static void C_ccall f_5718(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_5728)
static void C_ccall f_5728(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_5845)
static void C_ccall f_5845(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_5833)
static void C_ccall f_5833(C_word c,C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_5831)
static void C_ccall f_5831(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_5818)
static void C_ccall f_5818(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_5772)
static void C_ccall f_5772(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_5799)
static void C_ccall f_5799(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_5778)
static void C_ccall f_5778(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_5712)
static void C_fcall f_5712(C_word t0,C_word t1) C_noret;
C_noret_decl(f_5671)
static void C_fcall f_5671(C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_5684)
static void C_fcall f_5684(C_word t0,C_word t1) C_noret;
C_noret_decl(f_5894)
static void C_ccall f_5894(C_word c,C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_5885)
static void C_ccall f_5885(C_word c,C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_5893)
static void C_ccall f_5893(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_5896)
static void C_ccall f_5896(C_word c,C_word t0,C_word t1,C_word t2,...) C_noret;
C_noret_decl(f_5896)
static void C_ccall f_5896r(C_word t0,C_word t1,C_word t2,C_word t4) C_noret;
C_noret_decl(f_5904)
static void C_ccall f_5904(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_5318)
static void C_ccall f_5318(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4) C_noret;
C_noret_decl(f_5571)
static void C_ccall f_5571(C_word c,C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_5604)
static void C_ccall f_5604(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_5600)
static void C_ccall f_5600(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_5589)
static void C_ccall f_5589(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_5585)
static void C_ccall f_5585(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_5479)
static void C_ccall f_5479(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_5482)
static void C_ccall f_5482(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_5485)
static void C_ccall f_5485(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_5565)
static void C_ccall f_5565(C_word c,C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_5390)
static void C_ccall f_5390(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_5331)
static void C_ccall f_5331(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_5488)
static void C_ccall f_5488(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_5495)
static void C_ccall f_5495(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_5555)
static void C_ccall f_5555(C_word c,C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_5541)
static void C_ccall f_5541(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_5507)
static void C_ccall f_5507(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_5533)
static void C_ccall f_5533(C_word c,C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_5468)
static void C_ccall f_5468(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_5515)
static void C_ccall f_5515(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_5511)
static void C_ccall f_5511(C_word c,C_word t0,C_word t1) C_noret;

C_noret_decl(trf_33226)
static void C_fcall trf_33226(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_33226(void *dummy){
C_word t2=C_pick(0);
C_word t1=C_pick(1);
C_word t0=C_pick(2);
C_adjust_stack(-3);
f_33226(t0,t1,t2);}

C_noret_decl(trf_33286)
static void C_fcall trf_33286(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_33286(void *dummy){
C_word t13=C_pick(0);
C_word t12=C_pick(1);
C_word t11=C_pick(2);
C_word t10=C_pick(3);
C_word t9=C_pick(4);
C_word t8=C_pick(5);
C_word t7=C_pick(6);
C_word t6=C_pick(7);
C_word t5=C_pick(8);
C_word t4=C_pick(9);
C_word t3=C_pick(10);
C_word t2=C_pick(11);
C_word t1=C_pick(12);
C_word t0=C_pick(13);
C_adjust_stack(-14);
f_33286(t0,t1,t2,t3,t4,t5,t6,t7,t8,t9,t10,t11,t12,t13);}

C_noret_decl(trf_33306)
static void C_fcall trf_33306(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_33306(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_33306(t0,t1);}

C_noret_decl(trf_33309)
static void C_fcall trf_33309(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_33309(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_33309(t0,t1);}

C_noret_decl(trf_33180)
static void C_fcall trf_33180(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_33180(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_33180(t0,t1);}

C_noret_decl(trf_33102)
static void C_fcall trf_33102(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_33102(void *dummy){
C_word t2=C_pick(0);
C_word t1=C_pick(1);
C_word t0=C_pick(2);
C_adjust_stack(-3);
f_33102(t0,t1,t2);}

C_noret_decl(trf_32914)
static void C_fcall trf_32914(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_32914(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_32914(t0,t1);}

C_noret_decl(trf_31796)
static void C_fcall trf_31796(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_31796(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_31796(t0,t1);}

C_noret_decl(trf_31669)
static void C_fcall trf_31669(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_31669(void *dummy){
C_word t2=C_pick(0);
C_word t1=C_pick(1);
C_word t0=C_pick(2);
C_adjust_stack(-3);
f_31669(t0,t1,t2);}

C_noret_decl(trf_31367)
static void C_fcall trf_31367(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_31367(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_31367(t0,t1);}

C_noret_decl(trf_30462)
static void C_fcall trf_30462(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_30462(void *dummy){
C_word t2=C_pick(0);
C_word t1=C_pick(1);
C_word t0=C_pick(2);
C_adjust_stack(-3);
f_30462(t0,t1,t2);}

C_noret_decl(trf_30497)
static void C_fcall trf_30497(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_30497(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_30497(t0,t1);}

C_noret_decl(trf_30521)
static void C_fcall trf_30521(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_30521(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_30521(t0,t1);}

C_noret_decl(trf_30500)
static void C_fcall trf_30500(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_30500(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_30500(t0,t1);}

C_noret_decl(trf_30303)
static void C_fcall trf_30303(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_30303(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_30303(t0,t1);}

C_noret_decl(trf_30121)
static void C_fcall trf_30121(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_30121(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_30121(t0,t1);}

C_noret_decl(trf_30128)
static void C_fcall trf_30128(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_30128(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_30128(t0,t1);}

C_noret_decl(trf_30109)
static void C_fcall trf_30109(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_30109(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_30109(t0,t1);}

C_noret_decl(trf_18020)
static void C_fcall trf_18020(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_18020(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_18020(t0,t1);}

C_noret_decl(trf_18027)
static void C_fcall trf_18027(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_18027(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_18027(t0,t1);}

C_noret_decl(trf_18341)
static void C_fcall trf_18341(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_18341(void *dummy){
C_word t2=C_pick(0);
C_word t1=C_pick(1);
C_word t0=C_pick(2);
C_adjust_stack(-3);
f_18341(t0,t1,t2);}

C_noret_decl(trf_18364)
static void C_fcall trf_18364(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_18364(void *dummy){
C_word t2=C_pick(0);
C_word t1=C_pick(1);
C_word t0=C_pick(2);
C_adjust_stack(-3);
f_18364(t0,t1,t2);}

C_noret_decl(trf_18381)
static void C_fcall trf_18381(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_18381(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_18381(t0,t1);}

C_noret_decl(trf_18384)
static void C_fcall trf_18384(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_18384(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_18384(t0,t1);}

C_noret_decl(trf_18387)
static void C_fcall trf_18387(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_18387(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_18387(t0,t1);}

C_noret_decl(trf_18305)
static void C_fcall trf_18305(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_18305(void *dummy){
C_word t2=C_pick(0);
C_word t1=C_pick(1);
C_word t0=C_pick(2);
C_adjust_stack(-3);
f_18305(t0,t1,t2);}

C_noret_decl(trf_18249)
static void C_fcall trf_18249(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_18249(void *dummy){
C_word t2=C_pick(0);
C_word t1=C_pick(1);
C_word t0=C_pick(2);
C_adjust_stack(-3);
f_18249(t0,t1,t2);}

C_noret_decl(trf_18265)
static void C_fcall trf_18265(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_18265(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_18265(t0,t1);}

C_noret_decl(trf_18043)
static void C_fcall trf_18043(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_18043(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_18043(t0,t1);}

C_noret_decl(trf_18046)
static void C_fcall trf_18046(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_18046(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_18046(t0,t1);}

C_noret_decl(trf_29618)
static void C_fcall trf_29618(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_29618(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_29618(t0,t1);}

C_noret_decl(trf_29621)
static void C_fcall trf_29621(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_29621(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_29621(t0,t1);}

C_noret_decl(trf_29464)
static void C_fcall trf_29464(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_29464(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_29464(t0,t1);}

C_noret_decl(trf_29272)
static void C_fcall trf_29272(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_29272(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_29272(t0,t1);}

C_noret_decl(trf_29122)
static void C_fcall trf_29122(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_29122(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_29122(t0,t1);}

C_noret_decl(trf_29211)
static void C_fcall trf_29211(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_29211(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_29211(t0,t1);}

C_noret_decl(trf_29125)
static void C_fcall trf_29125(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_29125(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_29125(t0,t1);}

C_noret_decl(trf_29141)
static void C_fcall trf_29141(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_29141(void *dummy){
C_word t3=C_pick(0);
C_word t2=C_pick(1);
C_word t1=C_pick(2);
C_word t0=C_pick(3);
C_adjust_stack(-4);
f_29141(t0,t1,t2,t3);}

C_noret_decl(trf_29163)
static void C_fcall trf_29163(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_29163(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_29163(t0,t1);}

C_noret_decl(trf_29058)
static void C_fcall trf_29058(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_29058(void *dummy){
C_word t2=C_pick(0);
C_word t1=C_pick(1);
C_word t0=C_pick(2);
C_adjust_stack(-3);
f_29058(t0,t1,t2);}

C_noret_decl(trf_29005)
static void C_fcall trf_29005(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_29005(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_29005(t0,t1);}

C_noret_decl(trf_22449)
static void C_fcall trf_22449(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_22449(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_22449(t0,t1);}

C_noret_decl(trf_22311)
static void C_fcall trf_22311(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_22311(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_22311(t0,t1);}

C_noret_decl(trf_22525)
static void C_fcall trf_22525(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_22525(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_22525(t0,t1);}

C_noret_decl(trf_28501)
static void C_fcall trf_28501(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_28501(void *dummy){
C_word t2=C_pick(0);
C_word t1=C_pick(1);
C_word t0=C_pick(2);
C_adjust_stack(-3);
f_28501(t0,t1,t2);}

C_noret_decl(trf_28521)
static void C_fcall trf_28521(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_28521(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_28521(t0,t1);}

C_noret_decl(trf_28530)
static void C_fcall trf_28530(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_28530(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_28530(t0,t1);}

C_noret_decl(trf_28546)
static void C_fcall trf_28546(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_28546(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_28546(t0,t1);}

C_noret_decl(trf_28394)
static void C_fcall trf_28394(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_28394(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_28394(t0,t1);}

C_noret_decl(trf_28403)
static void C_fcall trf_28403(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_28403(void *dummy){
C_word t2=C_pick(0);
C_word t1=C_pick(1);
C_word t0=C_pick(2);
C_adjust_stack(-3);
f_28403(t0,t1,t2);}

C_noret_decl(trf_28427)
static void C_fcall trf_28427(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_28427(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_28427(t0,t1);}

C_noret_decl(trf_28248)
static void C_fcall trf_28248(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_28248(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_28248(t0,t1);}

C_noret_decl(trf_28155)
static void C_fcall trf_28155(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_28155(void *dummy){
C_word t2=C_pick(0);
C_word t1=C_pick(1);
C_word t0=C_pick(2);
C_adjust_stack(-3);
f_28155(t0,t1,t2);}

C_noret_decl(trf_28075)
static void C_fcall trf_28075(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_28075(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_28075(t0,t1);}

C_noret_decl(trf_28001)
static void C_fcall trf_28001(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_28001(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_28001(t0,t1);}

C_noret_decl(trf_27996)
static void C_fcall trf_27996(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_27996(void *dummy){
C_word t2=C_pick(0);
C_word t1=C_pick(1);
C_word t0=C_pick(2);
C_adjust_stack(-3);
f_27996(t0,t1,t2);}

C_noret_decl(trf_27884)
static void C_fcall trf_27884(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_27884(void *dummy){
C_word t3=C_pick(0);
C_word t2=C_pick(1);
C_word t1=C_pick(2);
C_word t0=C_pick(3);
C_adjust_stack(-4);
f_27884(t0,t1,t2,t3);}

C_noret_decl(trf_27955)
static void C_fcall trf_27955(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_27955(void *dummy){
C_word t2=C_pick(0);
C_word t1=C_pick(1);
C_word t0=C_pick(2);
C_adjust_stack(-3);
f_27955(t0,t1,t2);}

C_noret_decl(trf_27914)
static void C_fcall trf_27914(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_27914(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_27914(t0,t1);}

C_noret_decl(trf_27886)
static void C_fcall trf_27886(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_27886(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_27886(t0,t1);}

C_noret_decl(trf_27841)
static void C_fcall trf_27841(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_27841(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_27841(t0,t1);}

C_noret_decl(trf_27797)
static void C_fcall trf_27797(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_27797(void *dummy){
C_word t3=C_pick(0);
C_word t2=C_pick(1);
C_word t1=C_pick(2);
C_word t0=C_pick(3);
C_adjust_stack(-4);
f_27797(t0,t1,t2,t3);}

C_noret_decl(trf_27788)
static void C_fcall trf_27788(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_27788(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_27788(t0,t1);}

C_noret_decl(trf_27618)
static void C_fcall trf_27618(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_27618(void *dummy){
C_word t4=C_pick(0);
C_word t3=C_pick(1);
C_word t2=C_pick(2);
C_word t1=C_pick(3);
C_word t0=C_pick(4);
C_adjust_stack(-5);
f_27618(t0,t1,t2,t3,t4);}

C_noret_decl(trf_27647)
static void C_fcall trf_27647(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_27647(void *dummy){
C_word t2=C_pick(0);
C_word t1=C_pick(1);
C_word t0=C_pick(2);
C_adjust_stack(-3);
f_27647(t0,t1,t2);}

C_noret_decl(trf_27684)
static void C_fcall trf_27684(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_27684(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_27684(t0,t1);}

C_noret_decl(trf_27514)
static void C_fcall trf_27514(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_27514(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_27514(t0,t1);}

C_noret_decl(trf_27494)
static void C_fcall trf_27494(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_27494(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_27494(t0,t1);}

C_noret_decl(trf_27457)
static void C_fcall trf_27457(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_27457(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_27457(t0,t1);}

C_noret_decl(trf_27437)
static void C_fcall trf_27437(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_27437(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_27437(t0,t1);}

C_noret_decl(trf_26272)
static void C_fcall trf_26272(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_26272(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_26272(t0,t1);}

C_noret_decl(trf_26275)
static void C_fcall trf_26275(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_26275(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_26275(t0,t1);}

C_noret_decl(trf_26278)
static void C_fcall trf_26278(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_26278(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_26278(t0,t1);}

C_noret_decl(trf_25802)
static void C_fcall trf_25802(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_25802(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_25802(t0,t1);}

C_noret_decl(trf_25805)
static void C_fcall trf_25805(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_25805(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_25805(t0,t1);}

C_noret_decl(trf_25808)
static void C_fcall trf_25808(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_25808(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_25808(t0,t1);}

C_noret_decl(trf_25332)
static void C_fcall trf_25332(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_25332(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_25332(t0,t1);}

C_noret_decl(trf_25335)
static void C_fcall trf_25335(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_25335(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_25335(t0,t1);}

C_noret_decl(trf_25338)
static void C_fcall trf_25338(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_25338(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_25338(t0,t1);}

C_noret_decl(trf_24584)
static void C_fcall trf_24584(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_24584(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_24584(t0,t1);}

C_noret_decl(trf_24587)
static void C_fcall trf_24587(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_24587(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_24587(t0,t1);}

C_noret_decl(trf_24590)
static void C_fcall trf_24590(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_24590(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_24590(t0,t1);}

C_noret_decl(trf_24593)
static void C_fcall trf_24593(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_24593(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_24593(t0,t1);}

C_noret_decl(trf_23836)
static void C_fcall trf_23836(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_23836(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_23836(t0,t1);}

C_noret_decl(trf_23839)
static void C_fcall trf_23839(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_23839(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_23839(t0,t1);}

C_noret_decl(trf_23842)
static void C_fcall trf_23842(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_23842(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_23842(t0,t1);}

C_noret_decl(trf_23845)
static void C_fcall trf_23845(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_23845(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_23845(t0,t1);}

C_noret_decl(trf_23366)
static void C_fcall trf_23366(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_23366(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_23366(t0,t1);}

C_noret_decl(trf_23369)
static void C_fcall trf_23369(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_23369(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_23369(t0,t1);}

C_noret_decl(trf_23372)
static void C_fcall trf_23372(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_23372(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_23372(t0,t1);}

C_noret_decl(trf_22618)
static void C_fcall trf_22618(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_22618(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_22618(t0,t1);}

C_noret_decl(trf_22621)
static void C_fcall trf_22621(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_22621(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_22621(t0,t1);}

C_noret_decl(trf_22624)
static void C_fcall trf_22624(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_22624(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_22624(t0,t1);}

C_noret_decl(trf_22627)
static void C_fcall trf_22627(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_22627(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_22627(t0,t1);}

C_noret_decl(trf_22276)
static void C_fcall trf_22276(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_22276(void *dummy){
C_word t3=C_pick(0);
C_word t2=C_pick(1);
C_word t1=C_pick(2);
C_word t0=C_pick(3);
C_adjust_stack(-4);
f_22276(t0,t1,t2,t3);}

C_noret_decl(trf_22116)
static void C_fcall trf_22116(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_22116(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_22116(t0,t1);}

C_noret_decl(trf_22151)
static void C_fcall trf_22151(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_22151(void *dummy){
C_word t5=C_pick(0);
C_word t4=C_pick(1);
C_word t3=C_pick(2);
C_word t2=C_pick(3);
C_word t1=C_pick(4);
C_word t0=C_pick(5);
C_adjust_stack(-6);
f_22151(t0,t1,t2,t3,t4,t5);}

C_noret_decl(trf_22161)
static void C_fcall trf_22161(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_22161(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_22161(t0,t1);}

C_noret_decl(trf_22124)
static void C_fcall trf_22124(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_22124(void *dummy){
C_word t2=C_pick(0);
C_word t1=C_pick(1);
C_word t0=C_pick(2);
C_adjust_stack(-3);
f_22124(t0,t1,t2);}

C_noret_decl(trf_22284)
static void C_fcall trf_22284(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_22284(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_22284(t0,t1);}

C_noret_decl(trf_21902)
static void C_fcall trf_21902(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_21902(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_21902(t0,t1);}

C_noret_decl(trf_21908)
static void C_fcall trf_21908(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_21908(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_21908(t0,t1);}

C_noret_decl(trf_21931)
static void C_fcall trf_21931(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_21931(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_21931(t0,t1);}

C_noret_decl(trf_21944)
static void C_fcall trf_21944(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_21944(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_21944(t0,t1);}

C_noret_decl(trf_21918)
static void C_fcall trf_21918(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_21918(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_21918(t0,t1);}

C_noret_decl(trf_21731)
static void C_fcall trf_21731(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_21731(void *dummy){
C_word t3=C_pick(0);
C_word t2=C_pick(1);
C_word t1=C_pick(2);
C_word t0=C_pick(3);
C_adjust_stack(-4);
f_21731(t0,t1,t2,t3);}

C_noret_decl(trf_21740)
static void C_fcall trf_21740(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_21740(void *dummy){
C_word t4=C_pick(0);
C_word t3=C_pick(1);
C_word t2=C_pick(2);
C_word t1=C_pick(3);
C_word t0=C_pick(4);
C_adjust_stack(-5);
f_21740(t0,t1,t2,t3,t4);}

C_noret_decl(trf_21694)
static void C_fcall trf_21694(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_21694(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_21694(t0,t1);}

C_noret_decl(trf_21557)
static void C_fcall trf_21557(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_21557(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_21557(t0,t1);}

C_noret_decl(trf_21487)
static void C_fcall trf_21487(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_21487(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_21487(t0,t1);}

C_noret_decl(trf_20848)
static void C_fcall trf_20848(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_20848(void *dummy){
C_word t2=C_pick(0);
C_word t1=C_pick(1);
C_word t0=C_pick(2);
C_adjust_stack(-3);
f_20848(t0,t1,t2);}

C_noret_decl(trf_20808)
static void C_fcall trf_20808(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_20808(void *dummy){
C_word t2=C_pick(0);
C_word t1=C_pick(1);
C_word t0=C_pick(2);
C_adjust_stack(-3);
f_20808(t0,t1,t2);}

C_noret_decl(trf_20821)
static void C_fcall trf_20821(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_20821(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_20821(t0,t1);}

C_noret_decl(trf_21400)
static void C_fcall trf_21400(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_21400(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_21400(t0,t1);}

C_noret_decl(trf_21190)
static void C_fcall trf_21190(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_21190(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_21190(t0,t1);}

C_noret_decl(trf_21306)
static void C_fcall trf_21306(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_21306(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_21306(t0,t1);}

C_noret_decl(trf_21193)
static void C_fcall trf_21193(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_21193(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_21193(t0,t1);}

C_noret_decl(trf_21196)
static void C_fcall trf_21196(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_21196(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_21196(t0,t1);}

C_noret_decl(trf_21101)
static void C_fcall trf_21101(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_21101(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_21101(t0,t1);}

C_noret_decl(trf_21016)
static void C_fcall trf_21016(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_21016(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_21016(t0,t1);}

C_noret_decl(trf_20973)
static void C_fcall trf_20973(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_20973(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_20973(t0,t1);}

C_noret_decl(trf_20940)
static void C_fcall trf_20940(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_20940(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_20940(t0,t1);}

C_noret_decl(trf_20935)
static void C_fcall trf_20935(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_20935(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_20935(t0,t1);}

C_noret_decl(trf_20930)
static void C_fcall trf_20930(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_20930(void *dummy){
C_word t4=C_pick(0);
C_word t3=C_pick(1);
C_word t2=C_pick(2);
C_word t1=C_pick(3);
C_word t0=C_pick(4);
C_adjust_stack(-5);
f_20930(t0,t1,t2,t3,t4);}

C_noret_decl(trf_20677)
static void C_fcall trf_20677(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_20677(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_20677(t0,t1);}

C_noret_decl(trf_20524)
static void C_fcall trf_20524(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_20524(void *dummy){
C_word t3=C_pick(0);
C_word t2=C_pick(1);
C_word t1=C_pick(2);
C_word t0=C_pick(3);
C_adjust_stack(-4);
f_20524(t0,t1,t2,t3);}

C_noret_decl(trf_20370)
static void C_fcall trf_20370(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_20370(void *dummy){
C_word t2=C_pick(0);
C_word t1=C_pick(1);
C_word t0=C_pick(2);
C_adjust_stack(-3);
f_20370(t0,t1,t2);}

C_noret_decl(trf_20212)
static void C_fcall trf_20212(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_20212(void *dummy){
C_word t2=C_pick(0);
C_word t1=C_pick(1);
C_word t0=C_pick(2);
C_adjust_stack(-3);
f_20212(t0,t1,t2);}

C_noret_decl(trf_20245)
static void C_fcall trf_20245(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_20245(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_20245(t0,t1);}

C_noret_decl(trf_20152)
static void C_fcall trf_20152(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_20152(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_20152(t0,t1);}

C_noret_decl(trf_20117)
static void C_fcall trf_20117(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_20117(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_20117(t0,t1);}

C_noret_decl(trf_20133)
static void C_fcall trf_20133(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_20133(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_20133(t0,t1);}

C_noret_decl(trf_20088)
static void C_fcall trf_20088(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_20088(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_20088(t0,t1);}

C_noret_decl(trf_19995)
static void C_fcall trf_19995(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_19995(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_19995(t0,t1);}

C_noret_decl(trf_19751)
static void C_fcall trf_19751(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_19751(void *dummy){
C_word t2=C_pick(0);
C_word t1=C_pick(1);
C_word t0=C_pick(2);
C_adjust_stack(-3);
f_19751(t0,t1,t2);}

C_noret_decl(trf_19555)
static void C_fcall trf_19555(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_19555(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_19555(t0,t1);}

C_noret_decl(trf_19718)
static void C_fcall trf_19718(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_19718(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_19718(t0,t1);}

C_noret_decl(trf_19558)
static void C_fcall trf_19558(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_19558(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_19558(t0,t1);}

C_noret_decl(trf_19561)
static void C_fcall trf_19561(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_19561(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_19561(t0,t1);}

C_noret_decl(trf_19564)
static void C_fcall trf_19564(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_19564(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_19564(t0,t1);}

C_noret_decl(trf_19606)
static void C_fcall trf_19606(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_19606(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_19606(t0,t1);}

C_noret_decl(trf_19571)
static void C_fcall trf_19571(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_19571(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_19571(t0,t1);}

C_noret_decl(trf_19300)
static void C_fcall trf_19300(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_19300(void *dummy){
C_word t3=C_pick(0);
C_word t2=C_pick(1);
C_word t1=C_pick(2);
C_word t0=C_pick(3);
C_adjust_stack(-4);
f_19300(t0,t1,t2,t3);}

C_noret_decl(trf_19308)
static void C_fcall trf_19308(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_19308(void *dummy){
C_word t3=C_pick(0);
C_word t2=C_pick(1);
C_word t1=C_pick(2);
C_word t0=C_pick(3);
C_adjust_stack(-4);
f_19308(t0,t1,t2,t3);}

C_noret_decl(trf_19437)
static void C_fcall trf_19437(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_19437(void *dummy){
C_word t2=C_pick(0);
C_word t1=C_pick(1);
C_word t0=C_pick(2);
C_adjust_stack(-3);
f_19437(t0,t1,t2);}

C_noret_decl(trf_19391)
static void C_fcall trf_19391(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_19391(void *dummy){
C_word t2=C_pick(0);
C_word t1=C_pick(1);
C_word t0=C_pick(2);
C_adjust_stack(-3);
f_19391(t0,t1,t2);}

C_noret_decl(trf_19294)
static void C_fcall trf_19294(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_19294(void *dummy){
C_word t2=C_pick(0);
C_word t1=C_pick(1);
C_word t0=C_pick(2);
C_adjust_stack(-3);
f_19294(t0,t1,t2);}

C_noret_decl(trf_19288)
static void C_fcall trf_19288(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_19288(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_19288(t0,t1);}

C_noret_decl(trf_19282)
static void C_fcall trf_19282(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_19282(void *dummy){
C_word t2=C_pick(0);
C_word t1=C_pick(1);
C_word t0=C_pick(2);
C_adjust_stack(-3);
f_19282(t0,t1,t2);}

C_noret_decl(trf_19211)
static void C_fcall trf_19211(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_19211(void *dummy){
C_word t2=C_pick(0);
C_word t1=C_pick(1);
C_word t0=C_pick(2);
C_adjust_stack(-3);
f_19211(t0,t1,t2);}

C_noret_decl(trf_19213)
static void C_fcall trf_19213(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_19213(void *dummy){
C_word t2=C_pick(0);
C_word t1=C_pick(1);
C_word t0=C_pick(2);
C_adjust_stack(-3);
f_19213(t0,t1,t2);}

C_noret_decl(trf_19219)
static void C_fcall trf_19219(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_19219(void *dummy){
C_word t2=C_pick(0);
C_word t1=C_pick(1);
C_word t0=C_pick(2);
C_adjust_stack(-3);
f_19219(t0,t1,t2);}

C_noret_decl(trf_19060)
static void C_fcall trf_19060(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_19060(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_19060(t0,t1);}

C_noret_decl(trf_19075)
static void C_fcall trf_19075(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_19075(void *dummy){
C_word t2=C_pick(0);
C_word t1=C_pick(1);
C_word t0=C_pick(2);
C_adjust_stack(-3);
f_19075(t0,t1,t2);}

C_noret_decl(trf_19018)
static void C_fcall trf_19018(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_19018(void *dummy){
C_word t2=C_pick(0);
C_word t1=C_pick(1);
C_word t0=C_pick(2);
C_adjust_stack(-3);
f_19018(t0,t1,t2);}

C_noret_decl(trf_18958)
static void C_fcall trf_18958(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_18958(void *dummy){
C_word t2=C_pick(0);
C_word t1=C_pick(1);
C_word t0=C_pick(2);
C_adjust_stack(-3);
f_18958(t0,t1,t2);}

C_noret_decl(trf_18834)
static void C_fcall trf_18834(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_18834(void *dummy){
C_word t2=C_pick(0);
C_word t1=C_pick(1);
C_word t0=C_pick(2);
C_adjust_stack(-3);
f_18834(t0,t1,t2);}

C_noret_decl(trf_18710)
static void C_fcall trf_18710(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_18710(void *dummy){
C_word t3=C_pick(0);
C_word t2=C_pick(1);
C_word t1=C_pick(2);
C_word t0=C_pick(3);
C_adjust_stack(-4);
f_18710(t0,t1,t2,t3);}

C_noret_decl(trf_18746)
static void C_fcall trf_18746(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_18746(void *dummy){
C_word t2=C_pick(0);
C_word t1=C_pick(1);
C_word t0=C_pick(2);
C_adjust_stack(-3);
f_18746(t0,t1,t2);}

C_noret_decl(trf_18545)
static void C_fcall trf_18545(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_18545(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_18545(t0,t1);}

C_noret_decl(trf_16365)
static void C_fcall trf_16365(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_16365(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_16365(t0,t1);}

C_noret_decl(trf_18676)
static void C_fcall trf_18676(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_18676(void *dummy){
C_word t2=C_pick(0);
C_word t1=C_pick(1);
C_word t0=C_pick(2);
C_adjust_stack(-3);
f_18676(t0,t1,t2);}

C_noret_decl(trf_18686)
static void C_fcall trf_18686(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_18686(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_18686(t0,t1);}

C_noret_decl(trf_18646)
static void C_fcall trf_18646(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_18646(void *dummy){
C_word t2=C_pick(0);
C_word t1=C_pick(1);
C_word t0=C_pick(2);
C_adjust_stack(-3);
f_18646(t0,t1,t2);}

C_noret_decl(trf_18656)
static void C_fcall trf_18656(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_18656(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_18656(t0,t1);}

C_noret_decl(trf_17707)
static void C_fcall trf_17707(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_17707(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_17707(t0,t1);}

C_noret_decl(trf_17710)
static void C_fcall trf_17710(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_17710(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_17710(t0,t1);}

C_noret_decl(trf_17713)
static void C_fcall trf_17713(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_17713(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_17713(t0,t1);}

C_noret_decl(trf_17716)
static void C_fcall trf_17716(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_17716(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_17716(t0,t1);}

C_noret_decl(trf_17719)
static void C_fcall trf_17719(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_17719(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_17719(t0,t1);}

C_noret_decl(trf_17722)
static void C_fcall trf_17722(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_17722(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_17722(t0,t1);}

C_noret_decl(trf_17550)
static void C_fcall trf_17550(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_17550(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_17550(t0,t1);}

C_noret_decl(trf_17479)
static void C_fcall trf_17479(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_17479(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_17479(t0,t1);}

C_noret_decl(trf_17294)
static void C_fcall trf_17294(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_17294(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_17294(t0,t1);}

C_noret_decl(trf_17306)
static void C_fcall trf_17306(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_17306(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_17306(t0,t1);}

C_noret_decl(trf_17343)
static void C_fcall trf_17343(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_17343(void *dummy){
C_word t4=C_pick(0);
C_word t3=C_pick(1);
C_word t2=C_pick(2);
C_word t1=C_pick(3);
C_word t0=C_pick(4);
C_adjust_stack(-5);
f_17343(t0,t1,t2,t3,t4);}

C_noret_decl(trf_17378)
static void C_fcall trf_17378(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_17378(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_17378(t0,t1);}

C_noret_decl(trf_17273)
static void C_fcall trf_17273(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_17273(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_17273(t0,t1);}

C_noret_decl(trf_17208)
static void C_fcall trf_17208(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_17208(void *dummy){
C_word t2=C_pick(0);
C_word t1=C_pick(1);
C_word t0=C_pick(2);
C_adjust_stack(-3);
f_17208(t0,t1,t2);}

C_noret_decl(trf_17217)
static void C_fcall trf_17217(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_17217(void *dummy){
C_word t2=C_pick(0);
C_word t1=C_pick(1);
C_word t0=C_pick(2);
C_adjust_stack(-3);
f_17217(t0,t1,t2);}

C_noret_decl(trf_17230)
static void C_fcall trf_17230(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_17230(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_17230(t0,t1);}

C_noret_decl(trf_17164)
static void C_fcall trf_17164(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_17164(void *dummy){
C_word t2=C_pick(0);
C_word t1=C_pick(1);
C_word t0=C_pick(2);
C_adjust_stack(-3);
f_17164(t0,t1,t2);}

C_noret_decl(trf_17152)
static void C_fcall trf_17152(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_17152(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_17152(t0,t1);}

C_noret_decl(trf_17050)
static void C_fcall trf_17050(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_17050(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_17050(t0,t1);}

C_noret_decl(trf_17002)
static void C_fcall trf_17002(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_17002(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_17002(t0,t1);}

C_noret_decl(trf_16383)
static void C_fcall trf_16383(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_16383(void *dummy){
C_word t6=C_pick(0);
C_word t5=C_pick(1);
C_word t4=C_pick(2);
C_word t3=C_pick(3);
C_word t2=C_pick(4);
C_word t1=C_pick(5);
C_word t0=C_pick(6);
C_adjust_stack(-7);
f_16383(t0,t1,t2,t3,t4,t5,t6);}

C_noret_decl(trf_16393)
static void C_fcall trf_16393(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_16393(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_16393(t0,t1);}

C_noret_decl(trf_16522)
static void C_fcall trf_16522(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_16522(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_16522(t0,t1);}

C_noret_decl(trf_16610)
static void C_fcall trf_16610(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_16610(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_16610(t0,t1);}

C_noret_decl(trf_16683)
static void C_fcall trf_16683(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_16683(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_16683(t0,t1);}

C_noret_decl(trf_16761)
static void C_fcall trf_16761(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_16761(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_16761(t0,t1);}

C_noret_decl(trf_16712)
static void C_fcall trf_16712(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_16712(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_16712(t0,t1);}

C_noret_decl(trf_16728)
static void C_fcall trf_16728(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_16728(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_16728(t0,t1);}

C_noret_decl(trf_16692)
static void C_fcall trf_16692(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_16692(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_16692(t0,t1);}

C_noret_decl(trf_16634)
static void C_fcall trf_16634(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_16634(void *dummy){
C_word t2=C_pick(0);
C_word t1=C_pick(1);
C_word t0=C_pick(2);
C_adjust_stack(-3);
f_16634(t0,t1,t2);}

C_noret_decl(trf_16553)
static void C_fcall trf_16553(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_16553(void *dummy){
C_word t2=C_pick(0);
C_word t1=C_pick(1);
C_word t0=C_pick(2);
C_adjust_stack(-3);
f_16553(t0,t1,t2);}

C_noret_decl(trf_16569)
static void C_fcall trf_16569(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_16569(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_16569(t0,t1);}

C_noret_decl(trf_16537)
static void C_fcall trf_16537(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_16537(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_16537(t0,t1);}

C_noret_decl(trf_16279)
static void C_fcall trf_16279(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_16279(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_16279(t0,t1);}

C_noret_decl(trf_16288)
static void C_fcall trf_16288(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_16288(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_16288(t0,t1);}

C_noret_decl(trf_16293)
static void C_fcall trf_16293(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_16293(void *dummy){
C_word t2=C_pick(0);
C_word t1=C_pick(1);
C_word t0=C_pick(2);
C_adjust_stack(-3);
f_16293(t0,t1,t2);}

C_noret_decl(trf_16271)
static void C_fcall trf_16271(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_16271(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_16271(t0,t1);}

C_noret_decl(trf_16063)
static void C_fcall trf_16063(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_16063(void *dummy){
C_word t3=C_pick(0);
C_word t2=C_pick(1);
C_word t1=C_pick(2);
C_word t0=C_pick(3);
C_adjust_stack(-4);
f_16063(t0,t1,t2,t3);}

C_noret_decl(trf_16030)
static void C_fcall trf_16030(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_16030(void *dummy){
C_word t3=C_pick(0);
C_word t2=C_pick(1);
C_word t1=C_pick(2);
C_word t0=C_pick(3);
C_adjust_stack(-4);
f_16030(t0,t1,t2,t3);}

C_noret_decl(trf_16012)
static void C_fcall trf_16012(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_16012(void *dummy){
C_word t3=C_pick(0);
C_word t2=C_pick(1);
C_word t1=C_pick(2);
C_word t0=C_pick(3);
C_adjust_stack(-4);
f_16012(t0,t1,t2,t3);}

C_noret_decl(trf_16002)
static void C_fcall trf_16002(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_16002(void *dummy){
C_word t3=C_pick(0);
C_word t2=C_pick(1);
C_word t1=C_pick(2);
C_word t0=C_pick(3);
C_adjust_stack(-4);
f_16002(t0,t1,t2,t3);}

C_noret_decl(trf_15990)
static void C_fcall trf_15990(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_15990(void *dummy){
C_word t2=C_pick(0);
C_word t1=C_pick(1);
C_word t0=C_pick(2);
C_adjust_stack(-3);
f_15990(t0,t1,t2);}

C_noret_decl(trf_15958)
static void C_fcall trf_15958(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_15958(void *dummy){
C_word t2=C_pick(0);
C_word t1=C_pick(1);
C_word t0=C_pick(2);
C_adjust_stack(-3);
f_15958(t0,t1,t2);}

C_noret_decl(trf_15942)
static void C_fcall trf_15942(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_15942(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_15942(t0,t1);}

C_noret_decl(trf_15930)
static void C_fcall trf_15930(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_15930(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_15930(t0,t1);}

C_noret_decl(trf_15912)
static void C_fcall trf_15912(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_15912(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_15912(t0,t1);}

C_noret_decl(trf_15894)
static void C_fcall trf_15894(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_15894(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_15894(t0,t1);}

C_noret_decl(trf_15879)
static void C_fcall trf_15879(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_15879(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_15879(t0,t1);}

C_noret_decl(trf_15873)
static void C_fcall trf_15873(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_15873(void *dummy){
C_word t3=C_pick(0);
C_word t2=C_pick(1);
C_word t1=C_pick(2);
C_word t0=C_pick(3);
C_adjust_stack(-4);
f_15873(t0,t1,t2,t3);}

C_noret_decl(trf_15861)
static void C_fcall trf_15861(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_15861(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_15861(t0,t1);}

C_noret_decl(trf_15843)
static void C_fcall trf_15843(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_15843(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_15843(t0,t1);}

C_noret_decl(trf_15822)
static void C_fcall trf_15822(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_15822(void *dummy){
C_word t2=C_pick(0);
C_word t1=C_pick(1);
C_word t0=C_pick(2);
C_adjust_stack(-3);
f_15822(t0,t1,t2);}

C_noret_decl(trf_15790)
static void C_fcall trf_15790(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_15790(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_15790(t0,t1);}

C_noret_decl(trf_15732)
static void C_fcall trf_15732(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_15732(void *dummy){
C_word t2=C_pick(0);
C_word t1=C_pick(1);
C_word t0=C_pick(2);
C_adjust_stack(-3);
f_15732(t0,t1,t2);}

C_noret_decl(trf_15722)
static void C_fcall trf_15722(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_15722(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_15722(t0,t1);}

C_noret_decl(trf_15716)
static void C_fcall trf_15716(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_15716(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_15716(t0,t1);}

C_noret_decl(trf_15704)
static void C_fcall trf_15704(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_15704(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_15704(t0,t1);}

C_noret_decl(trf_15680)
static void C_fcall trf_15680(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_15680(void *dummy){
C_word t2=C_pick(0);
C_word t1=C_pick(1);
C_word t0=C_pick(2);
C_adjust_stack(-3);
f_15680(t0,t1,t2);}

C_noret_decl(trf_15593)
static void C_fcall trf_15593(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_15593(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_15593(t0,t1);}

C_noret_decl(trf_15572)
static void C_fcall trf_15572(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_15572(void *dummy){
C_word t5=C_pick(0);
C_word t4=C_pick(1);
C_word t3=C_pick(2);
C_word t2=C_pick(3);
C_word t1=C_pick(4);
C_word t0=C_pick(5);
C_adjust_stack(-6);
f_15572(t0,t1,t2,t3,t4,t5);}

C_noret_decl(trf_15562)
static void C_fcall trf_15562(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_15562(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_15562(t0,t1);}

C_noret_decl(trf_15550)
static void C_fcall trf_15550(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_15550(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_15550(t0,t1);}

C_noret_decl(trf_15509)
static void C_fcall trf_15509(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_15509(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_15509(t0,t1);}

C_noret_decl(trf_15491)
static void C_fcall trf_15491(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_15491(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_15491(t0,t1);}

C_noret_decl(trf_15473)
static void C_fcall trf_15473(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_15473(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_15473(t0,t1);}

C_noret_decl(trf_15396)
static void C_fcall trf_15396(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_15396(void *dummy){
C_word t2=C_pick(0);
C_word t1=C_pick(1);
C_word t0=C_pick(2);
C_adjust_stack(-3);
f_15396(t0,t1,t2);}

C_noret_decl(trf_15421)
static void C_fcall trf_15421(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_15421(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_15421(t0,t1);}

C_noret_decl(trf_15124)
static void C_fcall trf_15124(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_15124(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_15124(t0,t1);}

C_noret_decl(trf_15127)
static void C_fcall trf_15127(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_15127(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_15127(t0,t1);}

C_noret_decl(trf_15133)
static void C_fcall trf_15133(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_15133(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_15133(t0,t1);}

C_noret_decl(trf_14847)
static void C_fcall trf_14847(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_14847(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_14847(t0,t1);}

C_noret_decl(trf_14850)
static void C_fcall trf_14850(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_14850(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_14850(t0,t1);}

C_noret_decl(trf_14777)
static void C_fcall trf_14777(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_14777(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_14777(t0,t1);}

C_noret_decl(trf_14625)
static void C_fcall trf_14625(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_14625(void *dummy){
C_word t4=C_pick(0);
C_word t3=C_pick(1);
C_word t2=C_pick(2);
C_word t1=C_pick(3);
C_word t0=C_pick(4);
C_adjust_stack(-5);
f_14625(t0,t1,t2,t3,t4);}

C_noret_decl(trf_14550)
static void C_fcall trf_14550(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_14550(void *dummy){
C_word t4=C_pick(0);
C_word t3=C_pick(1);
C_word t2=C_pick(2);
C_word t1=C_pick(3);
C_word t0=C_pick(4);
C_adjust_stack(-5);
f_14550(t0,t1,t2,t3,t4);}

C_noret_decl(trf_14560)
static void C_fcall trf_14560(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_14560(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_14560(t0,t1);}

C_noret_decl(trf_14567)
static void C_fcall trf_14567(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_14567(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_14567(t0,t1);}

C_noret_decl(trf_14662)
static void C_fcall trf_14662(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_14662(void *dummy){
C_word t2=C_pick(0);
C_word t1=C_pick(1);
C_word t0=C_pick(2);
C_adjust_stack(-3);
f_14662(t0,t1,t2);}

C_noret_decl(trf_14440)
static void C_fcall trf_14440(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_14440(void *dummy){
C_word t3=C_pick(0);
C_word t2=C_pick(1);
C_word t1=C_pick(2);
C_word t0=C_pick(3);
C_adjust_stack(-4);
f_14440(t0,t1,t2,t3);}

C_noret_decl(trf_14452)
static void C_fcall trf_14452(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_14452(void *dummy){
C_word t4=C_pick(0);
C_word t3=C_pick(1);
C_word t2=C_pick(2);
C_word t1=C_pick(3);
C_word t0=C_pick(4);
C_adjust_stack(-5);
f_14452(t0,t1,t2,t3,t4);}

C_noret_decl(trf_14513)
static void C_fcall trf_14513(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_14513(void *dummy){
C_word t2=C_pick(0);
C_word t1=C_pick(1);
C_word t0=C_pick(2);
C_adjust_stack(-3);
f_14513(t0,t1,t2);}

C_noret_decl(trf_13877)
static void C_fcall trf_13877(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_13877(void *dummy){
C_word t5=C_pick(0);
C_word t4=C_pick(1);
C_word t3=C_pick(2);
C_word t2=C_pick(3);
C_word t1=C_pick(4);
C_word t0=C_pick(5);
C_adjust_stack(-6);
f_13877(t0,t1,t2,t3,t4,t5);}

C_noret_decl(trf_13813)
static void C_fcall trf_13813(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_13813(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_13813(t0,t1);}

C_noret_decl(trf_13760)
static void C_fcall trf_13760(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_13760(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_13760(t0,t1);}

C_noret_decl(trf_13763)
static void C_fcall trf_13763(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_13763(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_13763(t0,t1);}

C_noret_decl(trf_13957)
static void C_fcall trf_13957(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_13957(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_13957(t0,t1);}

C_noret_decl(trf_13960)
static void C_fcall trf_13960(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_13960(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_13960(t0,t1);}

C_noret_decl(trf_13963)
static void C_fcall trf_13963(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_13963(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_13963(t0,t1);}

C_noret_decl(trf_13978)
static void C_fcall trf_13978(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_13978(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_13978(t0,t1);}

C_noret_decl(trf_13539)
static void C_fcall trf_13539(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_13539(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_13539(t0,t1);}

C_noret_decl(trf_13631)
static void C_fcall trf_13631(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_13631(void *dummy){
C_word t2=C_pick(0);
C_word t1=C_pick(1);
C_word t0=C_pick(2);
C_adjust_stack(-3);
f_13631(t0,t1,t2);}

C_noret_decl(trf_13650)
static void C_fcall trf_13650(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_13650(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_13650(t0,t1);}

C_noret_decl(trf_13604)
static void C_fcall trf_13604(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_13604(void *dummy){
C_word t2=C_pick(0);
C_word t1=C_pick(1);
C_word t0=C_pick(2);
C_adjust_stack(-3);
f_13604(t0,t1,t2);}

C_noret_decl(trf_13549)
static void C_fcall trf_13549(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_13549(void *dummy){
C_word t2=C_pick(0);
C_word t1=C_pick(1);
C_word t0=C_pick(2);
C_adjust_stack(-3);
f_13549(t0,t1,t2);}

C_noret_decl(trf_13559)
static void C_fcall trf_13559(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_13559(void *dummy){
C_word t3=C_pick(0);
C_word t2=C_pick(1);
C_word t1=C_pick(2);
C_word t0=C_pick(3);
C_adjust_stack(-4);
f_13559(t0,t1,t2,t3);}

C_noret_decl(trf_13405)
static void C_fcall trf_13405(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_13405(void *dummy){
C_word t2=C_pick(0);
C_word t1=C_pick(1);
C_word t0=C_pick(2);
C_adjust_stack(-3);
f_13405(t0,t1,t2);}

C_noret_decl(trf_13474)
static void C_fcall trf_13474(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_13474(void *dummy){
C_word t2=C_pick(0);
C_word t1=C_pick(1);
C_word t0=C_pick(2);
C_adjust_stack(-3);
f_13474(t0,t1,t2);}

C_noret_decl(trf_13420)
static void C_fcall trf_13420(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_13420(void *dummy){
C_word t4=C_pick(0);
C_word t3=C_pick(1);
C_word t2=C_pick(2);
C_word t1=C_pick(3);
C_word t0=C_pick(4);
C_adjust_stack(-5);
f_13420(t0,t1,t2,t3,t4);}

C_noret_decl(trf_12962)
static void C_fcall trf_12962(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_12962(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_12962(t0,t1);}

C_noret_decl(trf_12965)
static void C_fcall trf_12965(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_12965(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_12965(t0,t1);}

C_noret_decl(trf_12968)
static void C_fcall trf_12968(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_12968(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_12968(t0,t1);}

C_noret_decl(trf_12971)
static void C_fcall trf_12971(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_12971(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_12971(t0,t1);}

C_noret_decl(trf_12935)
static void C_fcall trf_12935(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_12935(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_12935(t0,t1);}

C_noret_decl(trf_12658)
static void C_fcall trf_12658(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_12658(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_12658(t0,t1);}

C_noret_decl(trf_12661)
static void C_fcall trf_12661(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_12661(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_12661(t0,t1);}

C_noret_decl(trf_12664)
static void C_fcall trf_12664(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_12664(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_12664(t0,t1);}

C_noret_decl(trf_12555)
static void C_fcall trf_12555(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_12555(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_12555(t0,t1);}

C_noret_decl(trf_12546)
static void C_fcall trf_12546(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_12546(void *dummy){
C_word t2=C_pick(0);
C_word t1=C_pick(1);
C_word t0=C_pick(2);
C_adjust_stack(-3);
f_12546(t0,t1,t2);}

C_noret_decl(trf_12537)
static void C_fcall trf_12537(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_12537(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_12537(t0,t1);}

C_noret_decl(trf_12519)
static void C_fcall trf_12519(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_12519(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_12519(t0,t1);}

C_noret_decl(trf_12501)
static void C_fcall trf_12501(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_12501(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_12501(t0,t1);}

C_noret_decl(trf_12483)
static void C_fcall trf_12483(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_12483(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_12483(t0,t1);}

C_noret_decl(trf_12474)
static void C_fcall trf_12474(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_12474(void *dummy){
C_word t2=C_pick(0);
C_word t1=C_pick(1);
C_word t0=C_pick(2);
C_adjust_stack(-3);
f_12474(t0,t1,t2);}

C_noret_decl(trf_12465)
static void C_fcall trf_12465(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_12465(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_12465(t0,t1);}

C_noret_decl(trf_12296)
static void C_fcall trf_12296(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_12296(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_12296(t0,t1);}

C_noret_decl(trf_12252)
static void C_fcall trf_12252(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_12252(void *dummy){
C_word t2=C_pick(0);
C_word t1=C_pick(1);
C_word t0=C_pick(2);
C_adjust_stack(-3);
f_12252(t0,t1,t2);}

C_noret_decl(trf_11773)
static void C_fcall trf_11773(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_11773(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_11773(t0,t1);}

C_noret_decl(trf_11776)
static void C_fcall trf_11776(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_11776(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_11776(t0,t1);}

C_noret_decl(trf_11779)
static void C_fcall trf_11779(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_11779(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_11779(t0,t1);}

C_noret_decl(trf_11782)
static void C_fcall trf_11782(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_11782(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_11782(t0,t1);}

C_noret_decl(trf_11728)
static void C_fcall trf_11728(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_11728(void *dummy){
C_word t4=C_pick(0);
C_word t3=C_pick(1);
C_word t2=C_pick(2);
C_word t1=C_pick(3);
C_word t0=C_pick(4);
C_adjust_stack(-5);
f_11728(t0,t1,t2,t3,t4);}

C_noret_decl(trf_11434)
static void C_fcall trf_11434(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_11434(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_11434(t0,t1);}

C_noret_decl(trf_11437)
static void C_fcall trf_11437(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_11437(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_11437(t0,t1);}

C_noret_decl(trf_11440)
static void C_fcall trf_11440(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_11440(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_11440(t0,t1);}

C_noret_decl(trf_11151)
static void C_fcall trf_11151(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_11151(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_11151(t0,t1);}

C_noret_decl(trf_11154)
static void C_fcall trf_11154(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_11154(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_11154(t0,t1);}

C_noret_decl(trf_11157)
static void C_fcall trf_11157(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_11157(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_11157(t0,t1);}

C_noret_decl(trf_11110)
static void C_fcall trf_11110(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_11110(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_11110(t0,t1);}

C_noret_decl(trf_11066)
static void C_fcall trf_11066(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_11066(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_11066(t0,t1);}

C_noret_decl(trf_10981)
static void C_fcall trf_10981(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_10981(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_10981(t0,t1);}

C_noret_decl(trf_10466)
static void C_fcall trf_10466(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_10466(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_10466(t0,t1);}

C_noret_decl(trf_10469)
static void C_fcall trf_10469(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_10469(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_10469(t0,t1);}

C_noret_decl(trf_10472)
static void C_fcall trf_10472(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_10472(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_10472(t0,t1);}

C_noret_decl(trf_10475)
static void C_fcall trf_10475(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_10475(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_10475(t0,t1);}

C_noret_decl(trf_10382)
static void C_fcall trf_10382(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_10382(void *dummy){
C_word t2=C_pick(0);
C_word t1=C_pick(1);
C_word t0=C_pick(2);
C_adjust_stack(-3);
f_10382(t0,t1,t2);}

C_noret_decl(trf_10373)
static void C_fcall trf_10373(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_10373(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_10373(t0,t1);}

C_noret_decl(trf_10308)
static void C_fcall trf_10308(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_10308(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_10308(t0,t1);}

C_noret_decl(trf_10050)
static void C_fcall trf_10050(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_10050(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_10050(t0,t1);}

C_noret_decl(trf_10053)
static void C_fcall trf_10053(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_10053(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_10053(t0,t1);}

C_noret_decl(trf_10056)
static void C_fcall trf_10056(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_10056(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_10056(t0,t1);}

C_noret_decl(trf_9931)
static void C_fcall trf_9931(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_9931(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_9931(t0,t1);}

C_noret_decl(trf_9955)
static void C_fcall trf_9955(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_9955(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_9955(t0,t1);}

C_noret_decl(trf_9885)
static void C_fcall trf_9885(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_9885(void *dummy){
C_word t2=C_pick(0);
C_word t1=C_pick(1);
C_word t0=C_pick(2);
C_adjust_stack(-3);
f_9885(t0,t1,t2);}

C_noret_decl(trf_9876)
static void C_fcall trf_9876(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_9876(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_9876(t0,t1);}

C_noret_decl(trf_9575)
static void C_fcall trf_9575(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_9575(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_9575(t0,t1);}

C_noret_decl(trf_9811)
static void C_fcall trf_9811(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_9811(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_9811(t0,t1);}

C_noret_decl(trf_9817)
static void C_fcall trf_9817(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_9817(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_9817(t0,t1);}

C_noret_decl(trf_9709)
static void C_fcall trf_9709(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_9709(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_9709(t0,t1);}

C_noret_decl(trf_9711)
static void C_fcall trf_9711(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_9711(void *dummy){
C_word t3=C_pick(0);
C_word t2=C_pick(1);
C_word t1=C_pick(2);
C_word t0=C_pick(3);
C_adjust_stack(-4);
f_9711(t0,t1,t2,t3);}

C_noret_decl(trf_9760)
static void C_fcall trf_9760(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_9760(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_9760(t0,t1);}

C_noret_decl(trf_9725)
static void C_fcall trf_9725(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_9725(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_9725(t0,t1);}

C_noret_decl(trf_9609)
static void C_fcall trf_9609(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_9609(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_9609(t0,t1);}

C_noret_decl(trf_9523)
static void C_fcall trf_9523(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_9523(void *dummy){
C_word t4=C_pick(0);
C_word t3=C_pick(1);
C_word t2=C_pick(2);
C_word t1=C_pick(3);
C_word t0=C_pick(4);
C_adjust_stack(-5);
f_9523(t0,t1,t2,t3,t4);}

C_noret_decl(trf_9542)
static void C_fcall trf_9542(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_9542(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_9542(t0,t1);}

C_noret_decl(trf_9473)
static void C_fcall trf_9473(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_9473(void *dummy){
C_word t3=C_pick(0);
C_word t2=C_pick(1);
C_word t1=C_pick(2);
C_word t0=C_pick(3);
C_adjust_stack(-4);
f_9473(t0,t1,t2,t3);}

C_noret_decl(trf_9234)
static void C_fcall trf_9234(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_9234(void *dummy){
C_word t9=C_pick(0);
C_word t8=C_pick(1);
C_word t7=C_pick(2);
C_word t6=C_pick(3);
C_word t5=C_pick(4);
C_word t4=C_pick(5);
C_word t3=C_pick(6);
C_word t2=C_pick(7);
C_word t1=C_pick(8);
C_word t0=C_pick(9);
C_adjust_stack(-10);
f_9234(t0,t1,t2,t3,t4,t5,t6,t7,t8,t9);}

C_noret_decl(trf_9253)
static void C_fcall trf_9253(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_9253(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_9253(t0,t1);}

C_noret_decl(trf_9268)
static void C_fcall trf_9268(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_9268(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_9268(t0,t1);}

C_noret_decl(trf_9277)
static void C_fcall trf_9277(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_9277(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_9277(t0,t1);}

C_noret_decl(trf_9224)
static void C_fcall trf_9224(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_9224(void *dummy){
C_word t0=C_pick(0);
C_adjust_stack(-1);
f_9224(t0);}

C_noret_decl(trf_9169)
static void C_fcall trf_9169(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_9169(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_9169(t0,t1);}

C_noret_decl(trf_9160)
static void C_fcall trf_9160(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_9160(void *dummy){
C_word t2=C_pick(0);
C_word t1=C_pick(1);
C_word t0=C_pick(2);
C_adjust_stack(-3);
f_9160(t0,t1,t2);}

C_noret_decl(trf_9043)
static void C_fcall trf_9043(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_9043(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_9043(t0,t1);}

C_noret_decl(trf_9034)
static void C_fcall trf_9034(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_9034(void *dummy){
C_word t2=C_pick(0);
C_word t1=C_pick(1);
C_word t0=C_pick(2);
C_adjust_stack(-3);
f_9034(t0,t1,t2);}

C_noret_decl(trf_9016)
static void C_fcall trf_9016(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_9016(void *dummy){
C_word t2=C_pick(0);
C_word t1=C_pick(1);
C_word t0=C_pick(2);
C_adjust_stack(-3);
f_9016(t0,t1,t2);}

C_noret_decl(trf_9007)
static void C_fcall trf_9007(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_9007(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_9007(t0,t1);}

C_noret_decl(trf_8989)
static void C_fcall trf_8989(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_8989(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_8989(t0,t1);}

C_noret_decl(trf_8980)
static void C_fcall trf_8980(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_8980(void *dummy){
C_word t2=C_pick(0);
C_word t1=C_pick(1);
C_word t0=C_pick(2);
C_adjust_stack(-3);
f_8980(t0,t1,t2);}

C_noret_decl(trf_8971)
static void C_fcall trf_8971(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_8971(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_8971(t0,t1);}

C_noret_decl(trf_8953)
static void C_fcall trf_8953(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_8953(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_8953(t0,t1);}

C_noret_decl(trf_8944)
static void C_fcall trf_8944(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_8944(void *dummy){
C_word t2=C_pick(0);
C_word t1=C_pick(1);
C_word t0=C_pick(2);
C_adjust_stack(-3);
f_8944(t0,t1,t2);}

C_noret_decl(trf_8935)
static void C_fcall trf_8935(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_8935(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_8935(t0,t1);}

C_noret_decl(trf_8920)
static void C_fcall trf_8920(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_8920(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_8920(t0,t1);}

C_noret_decl(trf_8875)
static void C_fcall trf_8875(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_8875(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_8875(t0,t1);}

C_noret_decl(trf_8857)
static void C_fcall trf_8857(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_8857(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_8857(t0,t1);}

C_noret_decl(trf_8848)
static void C_fcall trf_8848(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_8848(void *dummy){
C_word t2=C_pick(0);
C_word t1=C_pick(1);
C_word t0=C_pick(2);
C_adjust_stack(-3);
f_8848(t0,t1,t2);}

C_noret_decl(trf_8821)
static void C_fcall trf_8821(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_8821(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_8821(t0,t1);}

C_noret_decl(trf_8803)
static void C_fcall trf_8803(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_8803(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_8803(t0,t1);}

C_noret_decl(trf_8785)
static void C_fcall trf_8785(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_8785(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_8785(t0,t1);}

C_noret_decl(trf_8776)
static void C_fcall trf_8776(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_8776(void *dummy){
C_word t2=C_pick(0);
C_word t1=C_pick(1);
C_word t0=C_pick(2);
C_adjust_stack(-3);
f_8776(t0,t1,t2);}

C_noret_decl(trf_8764)
static void C_fcall trf_8764(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_8764(void *dummy){
C_word t6=C_pick(0);
C_word t5=C_pick(1);
C_word t4=C_pick(2);
C_word t3=C_pick(3);
C_word t2=C_pick(4);
C_word t1=C_pick(5);
C_word t0=C_pick(6);
C_adjust_stack(-7);
f_8764(t0,t1,t2,t3,t4,t5,t6);}

C_noret_decl(trf_8651)
static void C_fcall trf_8651(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_8651(void *dummy){
C_word t2=C_pick(0);
C_word t1=C_pick(1);
C_word t0=C_pick(2);
C_adjust_stack(-3);
f_8651(t0,t1,t2);}

C_noret_decl(trf_8660)
static void C_fcall trf_8660(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_8660(void *dummy){
C_word t3=C_pick(0);
C_word t2=C_pick(1);
C_word t1=C_pick(2);
C_word t0=C_pick(3);
C_adjust_stack(-4);
f_8660(t0,t1,t2,t3);}

C_noret_decl(trf_8493)
static void C_fcall trf_8493(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_8493(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_8493(t0,t1);}

C_noret_decl(trf_8509)
static void C_fcall trf_8509(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_8509(void *dummy){
C_word t3=C_pick(0);
C_word t2=C_pick(1);
C_word t1=C_pick(2);
C_word t0=C_pick(3);
C_adjust_stack(-4);
f_8509(t0,t1,t2,t3);}

C_noret_decl(trf_8317)
static void C_fcall trf_8317(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_8317(void *dummy){
C_word t5=C_pick(0);
C_word t4=C_pick(1);
C_word t3=C_pick(2);
C_word t2=C_pick(3);
C_word t1=C_pick(4);
C_word t0=C_pick(5);
C_adjust_stack(-6);
f_8317(t0,t1,t2,t3,t4,t5);}

C_noret_decl(trf_8347)
static void C_fcall trf_8347(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_8347(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_8347(t0,t1);}

C_noret_decl(trf_8330)
static void C_fcall trf_8330(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_8330(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_8330(t0,t1);}

C_noret_decl(trf_8195)
static void C_fcall trf_8195(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_8195(void *dummy){
C_word t5=C_pick(0);
C_word t4=C_pick(1);
C_word t3=C_pick(2);
C_word t2=C_pick(3);
C_word t1=C_pick(4);
C_word t0=C_pick(5);
C_adjust_stack(-6);
f_8195(t0,t1,t2,t3,t4,t5);}

C_noret_decl(trf_8225)
static void C_fcall trf_8225(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_8225(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_8225(t0,t1);}

C_noret_decl(trf_8208)
static void C_fcall trf_8208(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_8208(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_8208(t0,t1);}

C_noret_decl(trf_8098)
static void C_fcall trf_8098(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_8098(void *dummy){
C_word t5=C_pick(0);
C_word t4=C_pick(1);
C_word t3=C_pick(2);
C_word t2=C_pick(3);
C_word t1=C_pick(4);
C_word t0=C_pick(5);
C_adjust_stack(-6);
f_8098(t0,t1,t2,t3,t4,t5);}

C_noret_decl(trf_8111)
static void C_fcall trf_8111(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_8111(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_8111(t0,t1);}

C_noret_decl(trf_8030)
static void C_fcall trf_8030(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_8030(void *dummy){
C_word t3=C_pick(0);
C_word t2=C_pick(1);
C_word t1=C_pick(2);
C_word t0=C_pick(3);
C_adjust_stack(-4);
f_8030(t0,t1,t2,t3);}

C_noret_decl(trf_8000)
static void C_fcall trf_8000(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_8000(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_8000(t0,t1);}

C_noret_decl(trf_7928)
static void C_fcall trf_7928(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_7928(void *dummy){
C_word t3=C_pick(0);
C_word t2=C_pick(1);
C_word t1=C_pick(2);
C_word t0=C_pick(3);
C_adjust_stack(-4);
f_7928(t0,t1,t2,t3);}

C_noret_decl(trf_7597)
static void C_fcall trf_7597(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_7597(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_7597(t0,t1);}

C_noret_decl(trf_7600)
static void C_fcall trf_7600(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_7600(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_7600(t0,t1);}

C_noret_decl(trf_7606)
static void C_fcall trf_7606(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_7606(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_7606(t0,t1);}

C_noret_decl(trf_7366)
static void C_fcall trf_7366(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_7366(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_7366(t0,t1);}

C_noret_decl(trf_7369)
static void C_fcall trf_7369(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_7369(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_7369(t0,t1);}

C_noret_decl(trf_7207)
static void C_fcall trf_7207(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_7207(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_7207(t0,t1);}

C_noret_decl(trf_7216)
static void C_fcall trf_7216(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_7216(void *dummy){
C_word t5=C_pick(0);
C_word t4=C_pick(1);
C_word t3=C_pick(2);
C_word t2=C_pick(3);
C_word t1=C_pick(4);
C_word t0=C_pick(5);
C_adjust_stack(-6);
f_7216(t0,t1,t2,t3,t4,t5);}

C_noret_decl(trf_7097)
static void C_fcall trf_7097(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_7097(void *dummy){
C_word t2=C_pick(0);
C_word t1=C_pick(1);
C_word t0=C_pick(2);
C_adjust_stack(-3);
f_7097(t0,t1,t2);}

C_noret_decl(trf_6816)
static void C_fcall trf_6816(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_6816(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_6816(t0,t1);}

C_noret_decl(trf_6819)
static void C_fcall trf_6819(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_6819(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_6819(t0,t1);}

C_noret_decl(trf_6560)
static void C_fcall trf_6560(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_6560(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_6560(t0,t1);}

C_noret_decl(trf_6550)
static void C_fcall trf_6550(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_6550(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_6550(t0,t1);}

C_noret_decl(trf_6532)
static void C_fcall trf_6532(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_6532(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_6532(t0,t1);}

C_noret_decl(trf_6521)
static void C_fcall trf_6521(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_6521(void *dummy){
C_word t2=C_pick(0);
C_word t1=C_pick(1);
C_word t0=C_pick(2);
C_adjust_stack(-3);
f_6521(t0,t1,t2);}

C_noret_decl(trf_6483)
static void C_fcall trf_6483(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_6483(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_6483(t0,t1);}

C_noret_decl(trf_6476)
static void C_fcall trf_6476(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_6476(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_6476(t0,t1);}

C_noret_decl(trf_6452)
static void C_fcall trf_6452(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_6452(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_6452(t0,t1);}

C_noret_decl(trf_6423)
static void C_fcall trf_6423(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_6423(void *dummy){
C_word t3=C_pick(0);
C_word t2=C_pick(1);
C_word t1=C_pick(2);
C_word t0=C_pick(3);
C_adjust_stack(-4);
f_6423(t0,t1,t2,t3);}

C_noret_decl(trf_6412)
static void C_fcall trf_6412(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_6412(void *dummy){
C_word t2=C_pick(0);
C_word t1=C_pick(1);
C_word t0=C_pick(2);
C_adjust_stack(-3);
f_6412(t0,t1,t2);}

C_noret_decl(trf_6401)
static void C_fcall trf_6401(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_6401(void *dummy){
C_word t2=C_pick(0);
C_word t1=C_pick(1);
C_word t0=C_pick(2);
C_adjust_stack(-3);
f_6401(t0,t1,t2);}

C_noret_decl(trf_6367)
static void C_fcall trf_6367(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_6367(void *dummy){
C_word t6=C_pick(0);
C_word t5=C_pick(1);
C_word t4=C_pick(2);
C_word t3=C_pick(3);
C_word t2=C_pick(4);
C_word t1=C_pick(5);
C_word t0=C_pick(6);
C_adjust_stack(-7);
f_6367(t0,t1,t2,t3,t4,t5,t6);}

C_noret_decl(trf_6340)
static void C_fcall trf_6340(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_6340(void *dummy){
C_word t6=C_pick(0);
C_word t5=C_pick(1);
C_word t4=C_pick(2);
C_word t3=C_pick(3);
C_word t2=C_pick(4);
C_word t1=C_pick(5);
C_word t0=C_pick(6);
C_adjust_stack(-7);
f_6340(t0,t1,t2,t3,t4,t5,t6);}

C_noret_decl(trf_6299)
static void C_fcall trf_6299(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_6299(void *dummy){
C_word t2=C_pick(0);
C_word t1=C_pick(1);
C_word t0=C_pick(2);
C_adjust_stack(-3);
f_6299(t0,t1,t2);}

C_noret_decl(trf_6305)
static void C_fcall trf_6305(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_6305(void *dummy){
C_word t2=C_pick(0);
C_word t1=C_pick(1);
C_word t0=C_pick(2);
C_adjust_stack(-3);
f_6305(t0,t1,t2);}

C_noret_decl(trf_6315)
static void C_fcall trf_6315(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_6315(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_6315(t0,t1);}

C_noret_decl(trf_6177)
static void C_fcall trf_6177(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_6177(void *dummy){
C_word t3=C_pick(0);
C_word t2=C_pick(1);
C_word t1=C_pick(2);
C_word t0=C_pick(3);
C_adjust_stack(-4);
f_6177(t0,t1,t2,t3);}

C_noret_decl(trf_5647)
static void C_fcall trf_5647(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_5647(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_5647(t0,t1);}

C_noret_decl(trf_5659)
static void C_fcall trf_5659(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_5659(void *dummy){
C_word t5=C_pick(0);
C_word t4=C_pick(1);
C_word t3=C_pick(2);
C_word t2=C_pick(3);
C_word t1=C_pick(4);
C_word t0=C_pick(5);
C_adjust_stack(-6);
f_5659(t0,t1,t2,t3,t4,t5);}

C_noret_decl(trf_5712)
static void C_fcall trf_5712(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_5712(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_5712(t0,t1);}

C_noret_decl(trf_5671)
static void C_fcall trf_5671(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_5671(void *dummy){
C_word t2=C_pick(0);
C_word t1=C_pick(1);
C_word t0=C_pick(2);
C_adjust_stack(-3);
f_5671(t0,t1,t2);}

C_noret_decl(trf_5684)
static void C_fcall trf_5684(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_5684(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_5684(t0,t1);}

C_noret_decl(tr6)
static void C_fcall tr6(C_proc6 k) C_regparm C_noret;
C_regparm static void C_fcall tr6(C_proc6 k){
C_word t5=C_pick(0);
C_word t4=C_pick(1);
C_word t3=C_pick(2);
C_word t2=C_pick(3);
C_word t1=C_pick(4);
C_word t0=C_pick(5);
C_adjust_stack(-6);
(k)(6,t0,t1,t2,t3,t4,t5);}

C_noret_decl(tr7)
static void C_fcall tr7(C_proc7 k) C_regparm C_noret;
C_regparm static void C_fcall tr7(C_proc7 k){
C_word t6=C_pick(0);
C_word t5=C_pick(1);
C_word t4=C_pick(2);
C_word t3=C_pick(3);
C_word t2=C_pick(4);
C_word t1=C_pick(5);
C_word t0=C_pick(6);
C_adjust_stack(-7);
(k)(7,t0,t1,t2,t3,t4,t5,t6);}

C_noret_decl(tr3)
static void C_fcall tr3(C_proc3 k) C_regparm C_noret;
C_regparm static void C_fcall tr3(C_proc3 k){
C_word t2=C_pick(0);
C_word t1=C_pick(1);
C_word t0=C_pick(2);
C_adjust_stack(-3);
(k)(3,t0,t1,t2);}

C_noret_decl(tr5)
static void C_fcall tr5(C_proc5 k) C_regparm C_noret;
C_regparm static void C_fcall tr5(C_proc5 k){
C_word t4=C_pick(0);
C_word t3=C_pick(1);
C_word t2=C_pick(2);
C_word t1=C_pick(3);
C_word t0=C_pick(4);
C_adjust_stack(-5);
(k)(5,t0,t1,t2,t3,t4);}

C_noret_decl(tr4)
static void C_fcall tr4(C_proc4 k) C_regparm C_noret;
C_regparm static void C_fcall tr4(C_proc4 k){
C_word t3=C_pick(0);
C_word t2=C_pick(1);
C_word t1=C_pick(2);
C_word t0=C_pick(3);
C_adjust_stack(-4);
(k)(4,t0,t1,t2,t3);}

C_noret_decl(tr2)
static void C_fcall tr2(C_proc2 k) C_regparm C_noret;
C_regparm static void C_fcall tr2(C_proc2 k){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
(k)(2,t0,t1);}

C_noret_decl(tr7r)
static void C_fcall tr7r(C_proc7 k) C_regparm C_noret;
C_regparm static void C_fcall tr7r(C_proc7 k){
int n;
C_word *a,t7;
C_word t6=C_pick(0);
C_word t5=C_pick(1);
C_word t4=C_pick(2);
C_word t3=C_pick(3);
C_word t2=C_pick(4);
C_word t1=C_pick(5);
C_word t0=C_pick(6);
C_adjust_stack(-7);
n=C_rest_count(0);
a=C_alloc(n*3);
t7=C_restore_rest(a,n);
(k)(t0,t1,t2,t3,t4,t5,t6,t7);}

C_noret_decl(tr6r)
static void C_fcall tr6r(C_proc6 k) C_regparm C_noret;
C_regparm static void C_fcall tr6r(C_proc6 k){
int n;
C_word *a,t6;
C_word t5=C_pick(0);
C_word t4=C_pick(1);
C_word t3=C_pick(2);
C_word t2=C_pick(3);
C_word t1=C_pick(4);
C_word t0=C_pick(5);
C_adjust_stack(-6);
n=C_rest_count(0);
a=C_alloc(n*3);
t6=C_restore_rest(a,n);
(k)(t0,t1,t2,t3,t4,t5,t6);}

C_noret_decl(tr2r)
static void C_fcall tr2r(C_proc2 k) C_regparm C_noret;
C_regparm static void C_fcall tr2r(C_proc2 k){
int n;
C_word *a,t2;
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
n=C_rest_count(0);
a=C_alloc(n*3);
t2=C_restore_rest(a,n);
(k)(t0,t1,t2);}

C_noret_decl(tr4r)
static void C_fcall tr4r(C_proc4 k) C_regparm C_noret;
C_regparm static void C_fcall tr4r(C_proc4 k){
int n;
C_word *a,t4;
C_word t3=C_pick(0);
C_word t2=C_pick(1);
C_word t1=C_pick(2);
C_word t0=C_pick(3);
C_adjust_stack(-4);
n=C_rest_count(0);
a=C_alloc(n*3);
t4=C_restore_rest(a,n);
(k)(t0,t1,t2,t3,t4);}

C_noret_decl(tr3r)
static void C_fcall tr3r(C_proc3 k) C_regparm C_noret;
C_regparm static void C_fcall tr3r(C_proc3 k){
int n;
C_word *a,t3;
C_word t2=C_pick(0);
C_word t1=C_pick(1);
C_word t0=C_pick(2);
C_adjust_stack(-3);
n=C_rest_count(0);
a=C_alloc(n*3);
t3=C_restore_rest(a,n);
(k)(t0,t1,t2,t3);}

C_noret_decl(tr4rv)
static void C_fcall tr4rv(C_proc4 k) C_regparm C_noret;
C_regparm static void C_fcall tr4rv(C_proc4 k){
int n;
C_word *a,t4;
C_word t3=C_pick(0);
C_word t2=C_pick(1);
C_word t1=C_pick(2);
C_word t0=C_pick(3);
C_adjust_stack(-4);
n=C_rest_count(0);
a=C_alloc(n+1);
t4=C_restore_rest_vector(a,n);
(k)(t0,t1,t2,t3,t4);}

C_noret_decl(tr3rv)
static void C_fcall tr3rv(C_proc3 k) C_regparm C_noret;
C_regparm static void C_fcall tr3rv(C_proc3 k){
int n;
C_word *a,t3;
C_word t2=C_pick(0);
C_word t1=C_pick(1);
C_word t0=C_pick(2);
C_adjust_stack(-3);
n=C_rest_count(0);
a=C_alloc(n+1);
t3=C_restore_rest_vector(a,n);
(k)(t0,t1,t2,t3);}

C_noret_decl(tr2rv)
static void C_fcall tr2rv(C_proc2 k) C_regparm C_noret;
C_regparm static void C_fcall tr2rv(C_proc2 k){
int n;
C_word *a,t2;
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
n=C_rest_count(0);
a=C_alloc(n+1);
t2=C_restore_rest_vector(a,n);
(k)(t0,t1,t2);}

/* toplevel */
static C_TLS int toplevel_initialized=0;
C_noret_decl(toplevel_trampoline)
static void C_fcall toplevel_trampoline(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall toplevel_trampoline(void *dummy){
C_grace_toplevel(2,C_SCHEME_UNDEFINED,C_restore);}

void C_ccall C_grace_toplevel(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word *a;
if(toplevel_initialized) C_kontinue(t1,C_SCHEME_UNDEFINED);
else C_toplevel_entry(C_text("grace_toplevel"));
C_check_nursery_minimum(3);
if(!C_demand(3)){
C_save(t1);
C_reclaim((void*)toplevel_trampoline,NULL);}
toplevel_initialized=1;
if(!C_demand_2(4918)){
C_save(t1);
C_rereclaim2(4918*sizeof(C_word), 1);
t1=C_restore;}
a=C_alloc(3);
C_initialize_lf(lf,835);
lf[0]=C_h_intern(&lf[0],14,"expand-optkeys");
lf[1]=C_h_intern(&lf[1],3,"let");
lf[2]=C_h_intern(&lf[2],4,"let*");
lf[3]=C_h_intern(&lf[3],5,"null\077");
lf[4]=C_h_intern(&lf[4],5,"error");
lf[5]=C_decode_literal(C_heaptop,"\376B\000\000\022Too many arguments");
lf[6]=C_h_intern(&lf[6],6,"unless");
lf[7]=C_h_intern(&lf[7],10,"\003sysappend");
lf[8]=C_h_intern(&lf[8],3,"car");
lf[9]=C_h_intern(&lf[9],4,"case");
lf[10]=C_decode_literal(C_heaptop,"\376B\000\000\031Positional after keywords");
lf[11]=C_h_intern(&lf[11],4,"when");
lf[12]=C_h_intern(&lf[12],4,"set!");
lf[13]=C_h_intern(&lf[13],8,"keyword\077");
lf[14]=C_decode_literal(C_heaptop,"\376B\000\000\017Unknown keyword");
lf[15]=C_h_intern(&lf[15],3,"cdr");
lf[16]=C_h_intern(&lf[16],4,"else");
lf[17]=C_h_intern(&lf[17],7,"\003sysmap");
lf[18]=C_h_intern(&lf[18],6,"append");
lf[19]=C_decode_literal(C_heaptop,"\376B\000\000\021Redundant keyword");
lf[20]=C_h_intern(&lf[20],2,"if");
lf[21]=C_decode_literal(C_heaptop,"\376B\000\000\030Missing keyword value in");
lf[22]=C_h_intern(&lf[22],4,"cadr");
lf[23]=C_h_intern(&lf[23],4,"cddr");
lf[24]=C_h_intern(&lf[24],15,"string->keyword");
lf[25]=C_h_intern(&lf[25],14,"symbol->string");
lf[26]=C_h_intern(&lf[26],6,"gensym");
lf[27]=C_decode_literal(C_heaptop,"\376B\000\000\004keyp");
lf[28]=C_decode_literal(C_heaptop,"\376B\000\000\004args");
lf[29]=C_h_intern(&lf[29],10,"*messages*");
lf[30]=C_h_intern(&lf[30],11,"expand-send");
lf[31]=C_h_intern(&lf[31],7,"sprintf");
lf[32]=C_decode_literal(C_heaptop,"\376B\000\000\003~A:");
lf[33]=C_h_intern(&lf[33],15,"keyword->string");
lf[34]=C_decode_literal(C_heaptop,"\376B\000\000\031~S duplicate keyword \047~S\047");
lf[35]=C_decode_literal(C_heaptop,"\376B\000\000!~S missing value for keyword \047~A\047");
lf[36]=C_decode_literal(C_heaptop,"\376B\000\000/~S invalid keyword \047~A\047~%Available keywords: ~A");
lf[37]=C_decode_literal(C_heaptop,"\376B\000\000 ~S expected keyword but got \047~S\047");
lf[38]=C_decode_literal(C_heaptop,"\376B\000\000#~S expected ~A arguments but got ~A");
lf[39]=C_h_intern(&lf[39],5,"&rest");
lf[40]=C_decode_literal(C_heaptop,"\376B\000\000\030~S is an invalid message");
lf[41]=C_h_intern(&lf[41],14,"hash-table-ref");
lf[42]=C_h_intern(&lf[42],3,"cwd");
lf[43]=C_h_intern(&lf[43],17,"\003syspeek-c-string");
lf[44]=C_h_intern(&lf[44],5,"chdir");
lf[45]=C_decode_literal(C_heaptop,"\376B\000\000\002~/");
lf[46]=C_h_intern(&lf[46],17,"\003sysmake-c-string");
lf[47]=C_h_intern(&lf[47],5,"fifth");
lf[48]=C_h_intern(&lf[48],5,"sixth");
lf[49]=C_h_intern(&lf[49],7,"seventh");
lf[50]=C_h_intern(&lf[50],6,"eighth");
lf[51]=C_h_intern(&lf[51],5,"ninth");
lf[52]=C_h_intern(&lf[52],5,"tenth");
lf[53]=C_h_intern(&lf[53],3,"nth");
lf[54]=C_h_intern(&lf[54],8,"list-ref");
lf[55]=C_h_intern(&lf[55],4,"rest");
lf[56]=C_h_intern(&lf[56],4,"last");
lf[57]=C_h_intern(&lf[57],7,"butlast");
lf[58]=C_h_intern(&lf[58],5,"list*");
lf[59]=C_decode_literal(C_heaptop,"\376B\000\000&>>> Error: too few arguments to list*.");
lf[60]=C_h_intern(&lf[60],9,"list-set!");
lf[61]=C_h_intern(&lf[61],9,"make-list");
lf[62]=C_decode_literal(C_heaptop,"\376B\000\000\034Negative length to make-list");
lf[87]=C_h_intern(&lf[87],7,"rescale");
lf[88]=C_h_intern(&lf[88],8,"discrete");
lf[89]=C_h_intern(&lf[89],3,"int");
lf[90]=C_h_intern(&lf[90],4,"plus");
lf[91]=C_h_intern(&lf[91],1,"+");
lf[92]=C_h_intern(&lf[92],5,"minus");
lf[93]=C_h_intern(&lf[93],1,"-");
lf[94]=C_h_intern(&lf[94],5,"times");
lf[95]=C_h_intern(&lf[95],1,"*");
lf[96]=C_h_intern(&lf[96],6,"divide");
lf[97]=C_h_intern(&lf[97],1,"/");
lf[98]=C_h_intern(&lf[98],8,"quantize");
lf[99]=C_h_intern(&lf[99],8,"decimals");
lf[100]=C_h_intern(&lf[100],15,"rhythm->seconds");
lf[101]=C_decode_literal(C_heaptop,"\376U60.0\000");
lf[102]=C_decode_literal(C_heaptop,"\376U0.25\000");
lf[103]=C_h_intern(&lf[103],6,"\000tempo");
lf[104]=C_h_intern(&lf[104],5,"\000beat");
lf[105]=C_h_intern(&lf[105],13,"cents->scaler");
lf[106]=C_h_intern(&lf[106],13,"scaler->cents");
lf[107]=C_h_intern(&lf[107],7,"interpl");
lf[108]=C_decode_literal(C_heaptop,"\376B\000\000\033not an x y coordinate list:");
lf[109]=C_h_intern(&lf[109],3,"err");
lf[110]=C_decode_literal(C_heaptop,"\376B\000\000\033not an x y coordinate list:");
lf[111]=C_decode_literal(C_heaptop,"\376B\000\000\033not an x y coordinate list:");
lf[112]=C_h_intern(&lf[112],6,"interp");
lf[113]=C_h_intern(&lf[113],5,"scale");
lf[114]=C_h_intern(&lf[114],6,"modulo");
lf[115]=C_h_intern(&lf[115],8,"ran-set!");
lf[116]=C_h_intern(&lf[116],3,"ran");
lf[117]=C_h_intern(&lf[117],7,"between");
lf[118]=C_h_intern(&lf[118],4,"pick");
lf[119]=C_h_intern(&lf[119],4,"odds");
lf[120]=C_decode_literal(C_heaptop,"\376U1.0\000");
lf[121]=C_h_intern(&lf[121],5,"\000true");
lf[122]=C_h_intern(&lf[122],6,"\000false");
lf[123]=C_h_intern(&lf[123],6,"ranlow");
lf[124]=C_h_intern(&lf[124],7,"ranhigh");
lf[125]=C_h_intern(&lf[125],9,"ranmiddle");
lf[126]=C_h_intern(&lf[126],7,"ranbeta");
lf[127]=C_decode_literal(C_heaptop,"\376U0.5\000");
lf[128]=C_h_intern(&lf[128],2,"\000a");
lf[129]=C_h_intern(&lf[129],2,"\000b");
lf[130]=C_h_intern(&lf[130],6,"ranexp");
lf[131]=C_h_intern(&lf[131],8,"rangauss");
lf[132]=C_h_intern(&lf[132],9,"rancauchy");
lf[133]=C_h_intern(&lf[133],10,"ranpoisson");
lf[134]=C_h_intern(&lf[134],3,"arg");
lf[135]=C_h_intern(&lf[135],8,"rangamma");
lf[136]=C_h_intern(&lf[136],8,"ranbrown");
lf[137]=C_h_intern(&lf[137],7,"ranpink");
lf[140]=C_decode_literal(C_heaptop,"\376B\000\000\021Not a note or key");
lf[141]=C_h_intern(&lf[141],13,"string-append");
lf[142]=C_decode_literal(C_heaptop,"\376B\000\000\021Not a note or key");
lf[144]=C_decode_literal(C_heaptop,"\376B\000\000\021Not a note or key");
lf[145]=C_decode_literal(C_heaptop,"\376B\000\000\021Not a note or key");
lf[146]=C_decode_literal(C_heaptop,"\376U0.333333333333333\000");
lf[147]=C_decode_literal(C_heaptop,"\376U0.666666666666667\000");
lf[148]=C_decode_literal(C_heaptop,"\376U0.5\000");
lf[149]=C_h_intern(&lf[149],5,"floor");
lf[150]=C_decode_literal(C_heaptop,"\376B\000\000\021Not a note or key");
lf[151]=C_h_intern(&lf[151],4,"note");
lf[152]=C_decode_literal(C_heaptop,"\376B\000\000\0014");
lf[153]=C_h_intern(&lf[153],3,"key");
lf[154]=C_decode_literal(C_heaptop,"\376B\000\000\0014");
lf[155]=C_h_intern(&lf[155],2,"hz");
lf[156]=C_decode_literal(C_heaptop,"\376B\000\000\0014");
lf[157]=C_h_intern(&lf[157],2,"pc");
lf[158]=C_h_intern(&lf[158],6,"invert");
lf[159]=C_decode_literal(C_heaptop,"\376B\000\000\020No inversion for");
lf[160]=C_decode_literal(C_heaptop,"\376B\000\000\020No inversion for");
lf[161]=C_h_intern(&lf[161],9,"transpose");
lf[162]=C_decode_literal(C_heaptop,"\376B\000\000\022No transposion for");
lf[163]=C_h_intern(&lf[163],10,"retrograde");
lf[164]=C_h_intern(&lf[164],7,"reverse");
lf[166]=C_h_intern(&lf[166],6,"period");
lf[168]=C_h_intern(&lf[168],14,"\003sysblock-set!");
lf[176]=C_h_intern(&lf[176],7,"pattern");
lf[191]=C_h_intern(&lf[191],4,"\000nad");
lf[192]=C_h_intern(&lf[192],8,"\000periods");
lf[193]=C_h_intern(&lf[193],12,"\000depth-first");
lf[195]=C_decode_literal(C_heaptop,"\376U4294967287.0\000");
lf[196]=C_decode_literal(C_heaptop,"\376U4294967287.0\000");
lf[197]=C_h_intern(&lf[197],14,"\000breadth-first");
lf[198]=C_decode_literal(C_heaptop,"\376B\000\000\026Illegal for traversing");
lf[199]=C_h_intern(&lf[199],7,"\000values");
lf[200]=C_decode_literal(C_heaptop,"\376B\000\000\024Illegal for counting");
lf[202]=C_h_intern(&lf[202],4,"eop\077");
lf[203]=C_h_intern(&lf[203],4,"\000eop");
lf[204]=C_h_intern(&lf[204],4,"eod\077");
lf[205]=C_h_intern(&lf[205],4,"\000eod");
lf[206]=C_h_intern(&lf[206],4,"next");
lf[210]=C_h_intern(&lf[210],5,"force");
lf[211]=C_h_intern(&lf[211],8,"promise\077");
lf[212]=C_h_intern(&lf[212],3,"max");
lf[213]=C_h_intern(&lf[213],10,"make-cycle");
lf[214]=C_h_intern(&lf[214],12,"\003sysfor-each");
lf[216]=C_h_intern(&lf[216],4,"\000for");
lf[217]=C_h_intern(&lf[217],7,"\000repeat");
lf[219]=C_h_intern(&lf[219],5,"palin");
lf[221]=C_h_intern(&lf[221],15,"make-palindrome");
lf[223]=C_h_intern(&lf[223],6,"\000elide");
lf[224]=C_decode_literal(C_heaptop,"\376\003\000\000\002\376\377\006\000\376\003\000\000\002\376\377\006\001\376\377\016");
lf[225]=C_decode_literal(C_heaptop,"\376\003\000\000\002\376\377\006\001\376\003\000\000\002\376\377\006\000\376\377\016");
lf[226]=C_h_intern(&lf[226],9,"make-line");
lf[228]=C_h_intern(&lf[228],9,"make-heap");
lf[230]=C_h_intern(&lf[230],13,"make-rotation");
lf[232]=C_h_intern(&lf[232],7,"\000rotate");
lf[234]=C_h_intern(&lf[234],11,"random-item");
lf[242]=C_h_intern(&lf[242],14,"make-weighting");
lf[245]=C_h_intern(&lf[245],7,"\000weight");
lf[246]=C_h_intern(&lf[246],4,"\000min");
lf[247]=C_h_intern(&lf[247],4,"\000max");
lf[248]=C_decode_literal(C_heaptop,"\376U0.0\000");
lf[249]=C_h_intern(&lf[249],11,"make-markov");
lf[251]=C_h_intern(&lf[251],5,"\000past");
lf[252]=C_h_intern(&lf[252],2,"->");
lf[253]=C_decode_literal(C_heaptop,"\376B\000\000.Left hand sides have different number of items");
lf[254]=C_h_intern(&lf[254],3,"\000->");
lf[255]=C_decode_literal(C_heaptop,"\376B\000\000\042Transition missing right hand side");
lf[256]=C_decode_literal(C_heaptop,"\376B\000\000\030Transition is not a list");
lf[257]=C_decode_literal(C_heaptop,"\376B\000\000 Not a list of Markov transitions");
lf[258]=C_decode_literal(C_heaptop,"\376B\000\000\032No transition matches past");
lf[260]=C_h_intern(&lf[260],10,"graph-node");
lf[261]=C_h_intern(&lf[261],10,"make-graph");
lf[263]=C_h_intern(&lf[263],3,"\000to");
lf[264]=C_h_intern(&lf[264],3,"\000id");
lf[265]=C_decode_literal(C_heaptop,"\376B\000\000\025Graph node not a list");
lf[266]=C_decode_literal(C_heaptop,"\376B\000\000\016Not graph data");
lf[267]=C_decode_literal(C_heaptop,"\376B\000\000\024No graph node for id");
lf[269]=C_h_intern(&lf[269],5,"token");
lf[274]=C_h_intern(&lf[274],1,"t");
lf[279]=C_h_intern(&lf[279],4,"rule");
lf[282]=C_h_intern(&lf[282],22,"hash-table-ref/default");
lf[289]=C_h_intern(&lf[289],11,"parse-error");
lf[293]=C_h_intern(&lf[293],10,"parse-unit");
lf[305]=C_decode_literal(C_heaptop,"\376B\000\000\014no info for ");
lf[307]=C_h_intern(&lf[307],14,"string->symbol");
lf[308]=C_h_intern(&lf[308],4,"expt");
lf[309]=C_h_intern(&lf[309],5,"equal");
lf[310]=C_h_intern(&lf[310],3,"and");
lf[311]=C_h_intern(&lf[311],2,"or");
lf[312]=C_h_intern(&lf[312],3,"not");
lf[313]=C_decode_literal(C_heaptop,"\376B\000\0005emit-token-unit: dont know how to emit slotref token ");
lf[314]=C_decode_literal(C_heaptop,"\376B\000\000\047emit-token-unit: dont know how to emit ");
lf[317]=C_decode_literal(C_heaptop,"\376B\000\000\033emit: dont know how to emit");
lf[323]=C_decode_literal(C_heaptop,"\376B\000\000\035Not a token type or rule type");
lf[324]=C_decode_literal(C_heaptop,"\376B\000\000\047Pattern opr not one of and, or, *, +, @");
lf[325]=C_h_intern(&lf[325],1,"@");
lf[326]=C_decode_literal(C_heaptop,"\376B\000\000\047Not a pattern value or pattern operator");
lf[327]=C_h_intern(&lf[327],6,"printf");
lf[328]=C_decode_literal(C_heaptop,"\376B\000\000!~%parse[~A]: pattern=~S tokens=~S");
lf[333]=C_h_intern(&lf[333],2,">=");
lf[334]=C_decode_literal(C_heaptop,"\376B\000\000\004stop");
lf[335]=C_decode_literal(C_heaptop,"\376B\000\000\004temp");
lf[336]=C_h_intern(&lf[336],5,"begin");
lf[337]=C_decode_literal(C_heaptop,"\376B\000\000\004bool");
lf[338]=C_decode_literal(C_heaptop,"\376B\000\000\004tail");
lf[339]=C_h_intern(&lf[339],1,">");
lf[340]=C_h_intern(&lf[340],2,"<=");
lf[341]=C_h_intern(&lf[341],1,"<");
lf[342]=C_decode_literal(C_heaptop,"\376B\000\000\004goal");
lf[343]=C_decode_literal(C_heaptop,"\376B\000\000\004from");
lf[344]=C_decode_literal(C_heaptop,"\376B\000\000\004step");
lf[348]=C_h_intern(&lf[348],3,"sal");
lf[349]=C_h_intern(&lf[349],11,"print-error");
lf[350]=C_decode_literal(C_heaptop,"\376B\000\000\013>>> Error: ");
lf[351]=C_h_intern(&lf[351],11,"make-string");
lf[352]=C_h_intern(&lf[352],9,"substring");
lf[353]=C_h_intern(&lf[353],2,"pp");
lf[354]=C_h_intern(&lf[354],4,"eval");
lf[355]=C_h_intern(&lf[355],7,"\000syntax");
lf[356]=C_h_intern(&lf[356],7,"\000scheme");
lf[357]=C_decode_literal(C_heaptop,"\376B\000\000\023Illegal statement: ");
lf[358]=C_h_intern(&lf[358],7,"call/cc");
lf[359]=C_h_intern(&lf[359],9,"sal:print");
lf[360]=C_h_intern(&lf[360],13,"print-message");
lf[361]=C_decode_literal(C_heaptop,"\376B\000\000\002{}");
lf[362]=C_decode_literal(C_heaptop,"\376B\000\000\001}");
lf[363]=C_decode_literal(C_heaptop,"\376B\000\000\001 ");
lf[364]=C_decode_literal(C_heaptop,"\376B\000\000\001{");
lf[365]=C_decode_literal(C_heaptop,"\376B\000\000\002#t");
lf[366]=C_decode_literal(C_heaptop,"\376B\000\000\002~S");
lf[367]=C_decode_literal(C_heaptop,"\376B\000\000\002#f");
lf[368]=C_decode_literal(C_heaptop,"\376B\000\000\001\012");
lf[369]=C_h_intern(&lf[369],9,"sal:chdir");
lf[370]=C_h_intern(&lf[370],8,"sal:load");
lf[371]=C_h_intern(&lf[371],13,"load-sal-file");
lf[372]=C_h_intern(&lf[372],4,"load");
lf[373]=C_h_intern(&lf[373],15,"\003syssubstring=\077");
lf[374]=C_decode_literal(C_heaptop,"\376B\000\000\004.sal");
lf[375]=C_decode_literal(C_heaptop,"\376B\000\000\021>>> Error: file \042");
lf[376]=C_decode_literal(C_heaptop,"\376B\000\000\020\042does not exist\012");
lf[377]=C_h_intern(&lf[377],12,"file-exists\077");
lf[378]=C_h_intern(&lf[378],8,"sal:open");
lf[379]=C_decode_literal(C_heaptop,"\376B\000\000)>>> Error: open command not implemented.\012");
lf[380]=C_h_intern(&lf[380],10,"sal:output");
lf[381]=C_decode_literal(C_heaptop,"\376B\000\000+>>> Error: output command not implemented.\012");
lf[393]=C_h_intern(&lf[393],8,"operator");
lf[394]=C_h_intern(&lf[394],8,"bindings");
lf[395]=C_h_intern(&lf[395],10,"collectors");
lf[396]=C_h_intern(&lf[396],9,"initially");
lf[397]=C_h_intern(&lf[397],9,"end-tests");
lf[398]=C_h_intern(&lf[398],7,"looping");
lf[399]=C_h_intern(&lf[399],8,"stepping");
lf[400]=C_h_intern(&lf[400],7,"finally");
lf[401]=C_h_intern(&lf[401],9,"returning");
lf[407]=C_decode_literal(C_heaptop,"\376B\000\000\023illegal loop syntax");
lf[408]=C_h_intern(&lf[408],7,"newline");
lf[409]=C_h_intern(&lf[409],7,"display");
lf[410]=C_decode_literal(C_heaptop,"\376B\000\000\002()");
lf[411]=C_decode_literal(C_heaptop,"\376B\000\000\001\047");
lf[412]=C_decode_literal(C_heaptop,"\376B\000\000\001 ");
lf[413]=C_decode_literal(C_heaptop,"\376B\000\000\001\047");
lf[414]=C_decode_literal(C_heaptop,"\376B\000\000\020clause context: ");
lf[415]=C_decode_literal(C_heaptop,"\376B\000\000\014LOOP ERROR: ");
lf[417]=C_decode_literal(C_heaptop,"\376B\000\000*Variable expected but source code ran out.");
lf[418]=C_decode_literal(C_heaptop,"\376B\000\000.\047for\047 clause expected but source code ran out.");
lf[419]=C_decode_literal(C_heaptop,"\376B\000\000\001\047");
lf[420]=C_decode_literal(C_heaptop,"\376B\000\000\001\047");
lf[421]=C_decode_literal(C_heaptop,"\376B\000\000\031 is not valid with \047for\047.");
lf[422]=C_decode_literal(C_heaptop,"\376B\000\000\007Found \047");
lf[423]=C_decode_literal(C_heaptop,"\376B\000\000\034\047 where a variable expected.");
lf[425]=C_h_intern(&lf[425],3,"for");
lf[426]=C_decode_literal(C_heaptop,"\376B\000\000\001v");
lf[427]=C_decode_literal(C_heaptop,"\376B\000\000\001v");
lf[428]=C_h_intern(&lf[428],8,"downfrom");
lf[429]=C_h_intern(&lf[429],5,"above");
lf[430]=C_h_intern(&lf[430],5,"below");
lf[431]=C_h_intern(&lf[431],6,"downto");
lf[432]=C_h_intern(&lf[432],4,"from");
lf[433]=C_decode_literal(C_heaptop,"\376B\000\000\007Found \047");
lf[434]=C_decode_literal(C_heaptop,"\376B\000\000\010\047 when \047");
lf[435]=C_decode_literal(C_heaptop,"\376B\000\000\014\047 in effect.");
lf[436]=C_decode_literal(C_heaptop,"\376B\000\000\007Found \047");
lf[437]=C_decode_literal(C_heaptop,"\376B\000\000\010\047 when \047");
lf[438]=C_decode_literal(C_heaptop,"\376B\000\000\014\047 in effect.");
lf[439]=C_h_intern(&lf[439],2,"to");
lf[440]=C_decode_literal(C_heaptop,"\376B\000\000\007Found \047");
lf[441]=C_decode_literal(C_heaptop,"\376B\000\000\010\047 when \047");
lf[442]=C_decode_literal(C_heaptop,"\376B\000\000\014\047 in effect.");
lf[443]=C_decode_literal(C_heaptop,"\376B\000\000\007Found \047");
lf[444]=C_decode_literal(C_heaptop,"\376B\000\000\010\047 when \047");
lf[445]=C_decode_literal(C_heaptop,"\376B\000\000\014\047 in effect.");
lf[446]=C_decode_literal(C_heaptop,"\376B\000\000\007Found \047");
lf[447]=C_decode_literal(C_heaptop,"\376B\000\000\010\047 when \047");
lf[448]=C_decode_literal(C_heaptop,"\376B\000\000\014\047 in effect.");
lf[449]=C_h_intern(&lf[449],2,"by");
lf[450]=C_decode_literal(C_heaptop,"\376B\000\000\025Found duplicate \047by\047.");
lf[451]=C_decode_literal(C_heaptop,"\376B\000\000\001\047");
lf[452]=C_decode_literal(C_heaptop,"\376B\000\000\032\047 is not valid with \047for\047.");
lf[453]=C_decode_literal(C_heaptop,"\376B\000\000,Expected expression but source code ran out.");
lf[455]=C_decode_literal(C_heaptop,"\376B\000\0001\047repeat\047 clause expected but source code ran out.");
lf[456]=C_decode_literal(C_heaptop,"\376B\000\000\001v");
lf[458]=C_h_intern(&lf[458],6,"across");
lf[459]=C_h_intern(&lf[459],13,"vector-length");
lf[460]=C_h_intern(&lf[460],10,"vector-ref");
lf[461]=C_decode_literal(C_heaptop,"\376B\000\000\001v");
lf[462]=C_decode_literal(C_heaptop,"\376B\000\000\001v");
lf[463]=C_h_intern(&lf[463],4,"over");
lf[464]=C_h_intern(&lf[464],2,"in");
lf[465]=C_h_intern(&lf[465],5,"quote");
lf[466]=C_decode_literal(C_heaptop,"\376B\000\000\014Extraneous \047");
lf[467]=C_decode_literal(C_heaptop,"\376B\000\000\010\047 when \047");
lf[468]=C_decode_literal(C_heaptop,"\376B\000\000\014\047 in effect.");
lf[469]=C_decode_literal(C_heaptop,"\376B\000\000\017Duplicate \047by\047.");
lf[470]=C_decode_literal(C_heaptop,"\376B\000\000\036\047by\047 is invalid with \047across\047.");
lf[471]=C_decode_literal(C_heaptop,"\376B\000\000\001\047");
lf[472]=C_decode_literal(C_heaptop,"\376B\000\000\032\047 is not valid with \047for\047.");
lf[473]=C_h_intern(&lf[473],2,"on");
lf[474]=C_decode_literal(C_heaptop,"\376B\000\000,Expression expected but source code ran out.");
lf[475]=C_decode_literal(C_heaptop,"\376B\000\000\001v");
lf[477]=C_h_intern(&lf[477],1,"=");
lf[478]=C_decode_literal(C_heaptop,"\376B\000\000\016Duplicate \047=\047.");
lf[479]=C_h_intern(&lf[479],4,"then");
lf[480]=C_decode_literal(C_heaptop,"\376B\000\000\021Duplicate \047then\047.");
lf[481]=C_decode_literal(C_heaptop,"\376B\000\000\001\047");
lf[482]=C_decode_literal(C_heaptop,"\376B\000\000\032\047 is not valid with \047for\047.");
lf[483]=C_decode_literal(C_heaptop,"\376B\000\000,Expression expected but source code ran out.");
lf[485]=C_h_intern(&lf[485],4,"with");
lf[486]=C_decode_literal(C_heaptop,"\376B\000\000\021Extraneous \047and\047.");
lf[487]=C_decode_literal(C_heaptop,"\376B\000\000\007Found \047");
lf[488]=C_decode_literal(C_heaptop,"\376B\000\000\027\047 where \047and\047 expected.");
lf[489]=C_decode_literal(C_heaptop,"\376B\000\000\007Found \047");
lf[490]=C_decode_literal(C_heaptop,"\376B\000\000\027\047 where \047and\047 expected.");
lf[491]=C_decode_literal(C_heaptop,"\376B\000\000\020Duplicate \047and\047.");
lf[492]=C_decode_literal(C_heaptop,"\376B\000\000\021Extraneous \047and\047.");
lf[493]=C_decode_literal(C_heaptop,"\376B\000\000\037Found \047=\047 where \047and\047 expected.");
lf[494]=C_decode_literal(C_heaptop,"\376B\000\000\007Found \047");
lf[495]=C_decode_literal(C_heaptop,"\376B\000\000\032\047 where variable expected.");
lf[496]=C_decode_literal(C_heaptop,"\376B\000\000\007Found \047");
lf[497]=C_decode_literal(C_heaptop,"\376B\000\000\036\047 where \047=\047 or \047and\047 expected.");
lf[499]=C_decode_literal(C_heaptop,"\376B\000\000\011Missing \047");
lf[500]=C_decode_literal(C_heaptop,"\376B\000\000\015\047 expression.");
lf[502]=C_decode_literal(C_heaptop,"\376B\000\000\011Missing \047");
lf[503]=C_decode_literal(C_heaptop,"\376B\000\000\015\047 expression.");
lf[505]=C_decode_literal(C_heaptop,"\376B\000\000\011Missing \047");
lf[506]=C_decode_literal(C_heaptop,"\376B\000\000\015\047 expression.");
lf[508]=C_h_intern(&lf[508],3,"sum");
lf[509]=C_h_intern(&lf[509],5,"count");
lf[510]=C_decode_literal(C_heaptop,"\376B\000\000\001v");
lf[511]=C_h_intern(&lf[511],8,"minimize");
lf[512]=C_h_intern(&lf[512],8,"maximize");
lf[513]=C_decode_literal(C_heaptop,"\376B\000\000\001v");
lf[514]=C_decode_literal(C_heaptop,"\376B\000\000\001v");
lf[515]=C_h_intern(&lf[515],4,"list");
lf[516]=C_h_intern(&lf[516],8,"set-cdr!");
lf[517]=C_h_intern(&lf[517],9,"last-pair");
lf[518]=C_h_intern(&lf[518],7,"collect");
lf[519]=C_decode_literal(C_heaptop,"\376\003\000\000\002\376\001\000\000\004list\376\003\000\000\002\376\377\006\000\376\377\016");
lf[520]=C_decode_literal(C_heaptop,"\376B\000\000\001v");
lf[521]=C_decode_literal(C_heaptop,"\376B\000\000\001v");
lf[522]=C_decode_literal(C_heaptop,"\376\003\000\000\002\376\001\000\000\004list\376\377\016");
lf[523]=C_h_intern(&lf[523],5,"nconc");
lf[524]=C_decode_literal(C_heaptop,"\376B\000\000\001\047");
lf[525]=C_decode_literal(C_heaptop,"\376B\000\000\007\047 and \047");
lf[526]=C_decode_literal(C_heaptop,"\376B\000\000 \047 are incompatible accumulators.");
lf[527]=C_decode_literal(C_heaptop,"\376\003\000\000\002\376\001\000\000\007collect\376\003\000\000\002\376\001\000\000\006append\376\003\000\000\002\376\001\000\000\005nconc\376\377\016");
lf[528]=C_decode_literal(C_heaptop,"\376\003\000\000\002\376\001\000\000\005never\376\003\000\000\002\376\001\000\000\006always\376\377\016");
lf[529]=C_decode_literal(C_heaptop,"\376\003\000\000\002\376\001\000\000\010minimize\376\003\000\000\002\376\001\000\000\010maximize\376\377\016");
lf[530]=C_h_intern(&lf[530],4,"into");
lf[531]=C_decode_literal(C_heaptop,"\376B\000\000\007Found \047");
lf[532]=C_decode_literal(C_heaptop,"\376B\000\000!\047 where \047into\047 variable expected.");
lf[533]=C_decode_literal(C_heaptop,"\376B\000\000\030Missing \047into\047 variable.");
lf[534]=C_decode_literal(C_heaptop,"\376B\000\000\011Missing \047");
lf[535]=C_decode_literal(C_heaptop,"\376B\000\000\015\047 expression.");
lf[537]=C_h_intern(&lf[537],6,"return");
lf[539]=C_decode_literal(C_heaptop,"\376\003\000\000\002\376\001\000\000\002go\376\003\000\000\002\376\377\006\001\376\377\016");
lf[540]=C_h_intern(&lf[540],5,"until");
lf[541]=C_h_intern(&lf[541],5,"while");
lf[542]=C_decode_literal(C_heaptop,"\376B\000\000\011Missing \047");
lf[543]=C_decode_literal(C_heaptop,"\376B\000\000\015\047 expression.");
lf[545]=C_h_intern(&lf[545],7,"thereis");
lf[546]=C_h_intern(&lf[546],6,"always");
lf[547]=C_h_intern(&lf[547],5,"never");
lf[548]=C_decode_literal(C_heaptop,"\376B\000\000\011Missing \047");
lf[549]=C_decode_literal(C_heaptop,"\376B\000\000\015\047 expression.");
lf[551]=C_decode_literal(C_heaptop,"\376B\000\000\011Missing \047");
lf[552]=C_decode_literal(C_heaptop,"\376B\000\000\015\047 expression.");
lf[554]=C_decode_literal(C_heaptop,"\376B\000\000\025Missing \047and\047 clause.");
lf[555]=C_decode_literal(C_heaptop,"\376B\000\000\001\047");
lf[556]=C_decode_literal(C_heaptop,"\376B\000\000\036\047 is not conditional operator.");
lf[557]=C_h_intern(&lf[557],4,"task");
lf[558]=C_decode_literal(C_heaptop,"\376\003\000\000\002\376\001\000\000\007thereis\376\003\000\000\002\376\001\000\000\005never\376\003\000\000\002\376\001\000\000\006always\376\377\016");
lf[560]=C_decode_literal(C_heaptop,"\376\003\000\000\002\376\001\000\000\004else\376\377\016");
lf[561]=C_decode_literal(C_heaptop,"\376B\000\000\026Missing \047else\047 clause.");
lf[562]=C_decode_literal(C_heaptop,"\376B\000\000\033Missing conditional clause.");
lf[563]=C_decode_literal(C_heaptop,"\376B\000\000\011Missing \047");
lf[564]=C_decode_literal(C_heaptop,"\376B\000\000\015\047 expression.");
lf[566]=C_h_intern(&lf[566],2,"do");
lf[567]=C_decode_literal(C_heaptop,"\376B\000\000\001\047");
lf[568]=C_decode_literal(C_heaptop,"\376B\000\000\030\047 clause cannot follow \047");
lf[569]=C_decode_literal(C_heaptop,"\376B\000\000\002\047.");
lf[570]=C_h_intern(&lf[570],4,"iter");
lf[571]=C_decode_literal(C_heaptop,"\376B\000\000\007Found \047");
lf[572]=C_decode_literal(C_heaptop,"\376B\000\000\032\047 where operator expected.");
lf[573]=C_h_intern(&lf[573],6,"repeat");
lf[574]=C_h_intern(&lf[574],2,"as");
lf[576]=C_h_intern(&lf[576],10,"mm:make-on");
lf[577]=C_h_intern(&lf[577],5,"\000time");
lf[578]=C_h_intern(&lf[578],4,"\000key");
lf[579]=C_h_intern(&lf[579],4,"\000vel");
lf[580]=C_h_intern(&lf[580],5,"\000chan");
lf[581]=C_h_intern(&lf[581],6,"mm:on\077");
lf[582]=C_h_intern(&lf[582],11,"mm:make-off");
lf[583]=C_h_intern(&lf[583],7,"mm:off\077");
lf[584]=C_h_intern(&lf[584],13,"mm:make-touch");
lf[585]=C_h_intern(&lf[585],4,"\000val");
lf[586]=C_h_intern(&lf[586],9,"mm:touch\077");
lf[587]=C_h_intern(&lf[587],12,"mm:make-ctrl");
lf[588]=C_h_intern(&lf[588],4,"\000num");
lf[589]=C_h_intern(&lf[589],8,"mm:ctrl\077");
lf[590]=C_h_intern(&lf[590],12,"mm:make-prog");
lf[591]=C_h_intern(&lf[591],8,"mm:prog\077");
lf[592]=C_h_intern(&lf[592],13,"mm:make-press");
lf[593]=C_h_intern(&lf[593],9,"mm:press\077");
lf[594]=C_h_intern(&lf[594],12,"mm:make-bend");
lf[595]=C_h_intern(&lf[595],7,"mm:free");
lf[596]=C_h_intern(&lf[596],7,"mm:copy");
lf[597]=C_h_intern(&lf[597],7,"mm:time");
lf[598]=C_h_intern(&lf[598],12,"mm:time-set!");
lf[599]=C_h_intern(&lf[599],7,"mm:chan");
lf[600]=C_h_intern(&lf[600],12,"mm:chan-set!");
lf[601]=C_h_intern(&lf[601],6,"mm:key");
lf[602]=C_h_intern(&lf[602],11,"mm:key-set!");
lf[603]=C_h_intern(&lf[603],6,"mm:vel");
lf[604]=C_h_intern(&lf[604],11,"mm:vel-set!");
lf[605]=C_h_intern(&lf[605],6,"mm:val");
lf[606]=C_h_intern(&lf[606],8,"mm:type\077");
lf[607]=C_h_intern(&lf[607],11,"mm:val-set!");
lf[608]=C_h_intern(&lf[608],1,"k");
lf[609]=C_h_intern(&lf[609],6,"mm:num");
lf[610]=C_h_intern(&lf[610],11,"mm:num-set!");
lf[611]=C_h_intern(&lf[611],7,"mp:note");
lf[612]=C_h_intern(&lf[612],7,"mp:midi");
lf[613]=C_h_intern(&lf[613],6,"mp:off");
lf[614]=C_h_intern(&lf[614],5,"mp:on");
lf[615]=C_h_intern(&lf[615],8,"mp:touch");
lf[616]=C_h_intern(&lf[616],7,"mp:ctrl");
lf[617]=C_h_intern(&lf[617],7,"mp:prog");
lf[618]=C_h_intern(&lf[618],8,"mp:press");
lf[619]=C_h_intern(&lf[619],7,"mp:bend");
lf[620]=C_h_intern(&lf[620],5,"mp:mm");
lf[621]=C_h_intern(&lf[621],9,"mp:inhook");
lf[622]=C_decode_literal(C_heaptop,"\376B\000\000*>>> Error: ~A~%    Aborting MIDI inhook.~%");
lf[623]=C_h_intern(&lf[623],27,"condition-property-accessor");
lf[624]=C_h_intern(&lf[624],3,"exn");
lf[625]=C_h_intern(&lf[625],7,"message");
lf[626]=C_h_intern(&lf[626],22,"with-exception-handler");
lf[627]=C_h_intern(&lf[627],30,"call-with-current-continuation");
lf[628]=C_h_intern(&lf[628],4,"cs:i");
lf[629]=C_h_intern(&lf[629],4,"cs:f");
lf[630]=C_h_intern(&lf[630],8,"cs:clear");
lf[631]=C_h_intern(&lf[631],7,"cm-logo");
lf[632]=C_decode_literal(C_heaptop,"\376B\000\000\001 ");
lf[633]=C_decode_literal(C_heaptop,"\376B\000\000\000");
lf[634]=C_decode_literal(C_heaptop,"\376B\000\000\015Common Music ");
lf[635]=C_decode_literal(C_heaptop,"\376B\000\000\001.");
lf[636]=C_decode_literal(C_heaptop,"\376B\000\000\001.");
lf[637]=C_decode_literal(C_heaptop,"\376B\000\000\000");
lf[638]=C_decode_literal(C_heaptop,"\376B\000\000\002~%");
lf[639]=C_h_intern(&lf[639],25,"current-time-milliseconds");
lf[640]=C_h_intern(&lf[640],20,"current-time-seconds");
lf[642]=C_h_intern(&lf[642],6,"\003sysgc");
lf[645]=C_h_intern(&lf[645],6,"sprout");
lf[646]=C_h_intern(&lf[646],9,"\003syserror");
lf[647]=C_decode_literal(C_heaptop,"\376B\000\000\033too many optional arguments");
lf[648]=C_h_intern(&lf[648],3,"now");
lf[649]=C_h_intern(&lf[649],11,"time-format");
lf[650]=C_decode_literal(C_heaptop,"\376U1.0\000");
lf[651]=C_decode_literal(C_heaptop,"\376U1.0\000");
lf[652]=C_h_intern(&lf[652],1,"m");
lf[653]=C_decode_literal(C_heaptop,"\376B\000\000\021not a time-format");
lf[654]=C_h_intern(&lf[654],1,"s");
lf[655]=C_h_intern(&lf[655],5,"pause");
lf[656]=C_h_intern(&lf[656],7,"paused\077");
lf[657]=C_h_intern(&lf[657],4,"cont");
lf[658]=C_h_intern(&lf[658],4,"stop");
lf[659]=C_decode_literal(C_heaptop,"\376B\000\000\021Not an integer id");
lf[660]=C_h_intern(&lf[660],4,"hush");
lf[661]=C_h_intern(&lf[661],14,"return-to-host");
lf[662]=C_h_intern(&lf[662],4,"cond");
lf[663]=C_h_intern(&lf[663],6,"lambda");
lf[664]=C_h_intern(&lf[664],7,"elapsed");
lf[665]=C_h_intern(&lf[665],1,"x");
lf[666]=C_h_intern(&lf[666],4,"wait");
lf[667]=C_decode_literal(C_heaptop,"\376B\000\0000>>> Error: ~A~%    Aborting process at time ~S~%");
lf[668]=C_h_intern(&lf[668],6,"safety");
lf[669]=C_h_intern(&lf[669],4,"cdar");
lf[670]=C_decode_literal(C_heaptop,"\376B\000\000\023unknown declaration");
lf[671]=C_h_intern(&lf[671],4,"caar");
lf[672]=C_decode_literal(C_heaptop,"\376B\000\000\037declaration not list (decl val)");
lf[673]=C_h_intern(&lf[673],7,"declare");
lf[674]=C_h_intern(&lf[674],5,"\000null");
lf[675]=C_decode_literal(C_heaptop,"\376B\000\000)binding clause not list (var init [step])");
lf[676]=C_decode_literal(C_heaptop,"\376B\000\000$go stopping clause missing test form");
lf[677]=C_decode_literal(C_heaptop,"\376B\000\000\035go stopping clause not a list");
lf[678]=C_decode_literal(C_heaptop,"\376B\000\000\026go bindings not a list");
lf[679]=C_h_intern(&lf[679],18,"\003sysregister-macro");
lf[680]=C_h_intern(&lf[680],2,"go");
lf[681]=C_h_intern(&lf[681],15,"hash-table-set!");
lf[682]=C_decode_literal(C_heaptop,"\376B\000\000\010cs:clear");
lf[683]=C_decode_literal(C_heaptop,"\376\003\000\000\002\376\001\000\000\010cs:clear\376\377\016");
lf[684]=C_decode_literal(C_heaptop,"\376B\000\000\004cs:f");
lf[685]=C_decode_literal(C_heaptop,"\376\003\000\000\002\376\001\000\000\004cs:f\376\003\000\000\002\376\001\000\000\005&rest\376\377\016");
lf[686]=C_decode_literal(C_heaptop,"\376B\000\000\004cs:i");
lf[687]=C_decode_literal(C_heaptop,"\376\003\000\000\002\376\001\000\000\004cs:i\376\003\000\000\002\376\001\000\000\005&rest\376\377\016");
lf[688]=C_decode_literal(C_heaptop,"\376B\000\000\011mp:inhook");
lf[689]=C_decode_literal(C_heaptop,"\376\003\000\000\002\376\001\000\000\011mp:inhook\376\003\000\000\002\376\003\000\000\002\376\001\000\000\005\000func\376\003\000\000\002\376\377\006\000\376\377\016\376\377\016");
lf[690]=C_decode_literal(C_heaptop,"\376B\000\000\005mp:mm");
lf[691]=C_decode_literal(C_heaptop,"\376\003\000\000\002\376\001\000\000\005mp:mm\376\003\000\000\002\376\003\000\000\002\376\001\000\000\003\000mm\376\003\000\000\002\376\377\006\000\376\377\016\376\377\016");
lf[692]=C_decode_literal(C_heaptop,"\376B\000\000\007mp:bend");
lf[693]=C_decode_literal(C_heaptop,"\376\003\000\000\002\376\001\000\000\007mp:bend\376\003\000\000\002\376\003\000\000\002\376\001\000\000\005\000time\376\003\000\000\002\376\377\001\000\000\000\000\376\377\016\376\003\000\000\002\376\003\000\000\002\376\001\000\000\004\000val\376\003\000\000\002\376\377\001\000"
"\000 \000\376\377\016\376\003\000\000\002\376\003\000\000\002\376\001\000\000\005\000chan\376\003\000\000\002\376\377\001\000\000\000\000\376\377\016\376\377\016");
lf[694]=C_decode_literal(C_heaptop,"\376B\000\000\010mp:press");
lf[695]=C_decode_literal(C_heaptop,"\376\003\000\000\002\376\001\000\000\010mp:press\376\003\000\000\002\376\003\000\000\002\376\001\000\000\005\000time\376\003\000\000\002\376\377\001\000\000\000\000\376\377\016\376\003\000\000\002\376\003\000\000\002\376\001\000\000\004\000val\376\003\000\000\002\376\377\001"
"\000\000\000\000\376\377\016\376\003\000\000\002\376\003\000\000\002\376\001\000\000\005\000chan\376\003\000\000\002\376\377\001\000\000\000\000\376\377\016\376\377\016");
lf[696]=C_decode_literal(C_heaptop,"\376B\000\000\007mp:prog");
lf[697]=C_decode_literal(C_heaptop,"\376\003\000\000\002\376\001\000\000\007mp:prog\376\003\000\000\002\376\003\000\000\002\376\001\000\000\005\000time\376\003\000\000\002\376\377\001\000\000\000\000\376\377\016\376\003\000\000\002\376\003\000\000\002\376\001\000\000\004\000val\376\003\000\000\002\376\377\001\000"
"\000\000\000\376\377\016\376\003\000\000\002\376\003\000\000\002\376\001\000\000\005\000chan\376\003\000\000\002\376\377\001\000\000\000\000\376\377\016\376\377\016");
lf[698]=C_decode_literal(C_heaptop,"\376B\000\000\007mp:ctrl");
lf[699]=C_decode_literal(C_heaptop,"\376\003\000\000\002\376\001\000\000\007mp:ctrl\376\003\000\000\002\376\003\000\000\002\376\001\000\000\005\000time\376\003\000\000\002\376\377\001\000\000\000\000\376\377\016\376\003\000\000\002\376\003\000\000\002\376\001\000\000\004\000num\376\003\000\000\002\376\377\001\000"
"\000\000\000\376\377\016\376\003\000\000\002\376\003\000\000\002\376\001\000\000\004\000val\376\003\000\000\002\376\377\001\000\000\000\000\376\377\016\376\003\000\000\002\376\003\000\000\002\376\001\000\000\005\000chan\376\003\000\000\002\376\377\001\000\000\000\000\376\377\016\376\377\016");
lf[700]=C_decode_literal(C_heaptop,"\376B\000\000\010mp:touch");
lf[701]=C_decode_literal(C_heaptop,"\376\003\000\000\002\376\001\000\000\010mp:touch\376\003\000\000\002\376\003\000\000\002\376\001\000\000\005\000time\376\003\000\000\002\376\377\001\000\000\000\000\376\377\016\376\003\000\000\002\376\003\000\000\002\376\001\000\000\004\000key\376\003\000\000\002\376\377\001"
"\000\000\000\000\376\377\016\376\003\000\000\002\376\003\000\000\002\376\001\000\000\004\000val\376\003\000\000\002\376\377\001\000\000\000\000\376\377\016\376\003\000\000\002\376\003\000\000\002\376\001\000\000\005\000chan\376\003\000\000\002\376\377\001\000\000\000\000\376\377\016\376\377\016");
lf[702]=C_decode_literal(C_heaptop,"\376B\000\000\005mp:on");
lf[703]=C_decode_literal(C_heaptop,"\376\003\000\000\002\376\001\000\000\005mp:on\376\003\000\000\002\376\003\000\000\002\376\001\000\000\005\000time\376\003\000\000\002\376\377\001\000\000\000\000\376\377\016\376\003\000\000\002\376\003\000\000\002\376\001\000\000\004\000key\376\003\000\000\002\376\377\001\000\000\000"
"<\376\377\016\376\003\000\000\002\376\003\000\000\002\376\001\000\000\004\000vel\376\003\000\000\002\376\377\001\000\000\000@\376\377\016\376\003\000\000\002\376\003\000\000\002\376\001\000\000\005\000chan\376\003\000\000\002\376\377\001\000\000\000\000\376\377\016\376\377\016");
lf[704]=C_decode_literal(C_heaptop,"\376B\000\000\006mp:off");
lf[705]=C_decode_literal(C_heaptop,"\376\003\000\000\002\376\001\000\000\006mp:off\376\003\000\000\002\376\003\000\000\002\376\001\000\000\005\000time\376\003\000\000\002\376\377\001\000\000\000\000\376\377\016\376\003\000\000\002\376\003\000\000\002\376\001\000\000\004\000key\376\003\000\000\002\376\377\001\000\000"
"\000<\376\377\016\376\003\000\000\002\376\003\000\000\002\376\001\000\000\005\000chan\376\003\000\000\002\376\377\001\000\000\000\000\376\377\016\376\377\016");
lf[706]=C_decode_literal(C_heaptop,"\376B\000\000\007mp:midi");
lf[707]=C_decode_literal(C_heaptop,"\376\003\000\000\002\376\001\000\000\007mp:midi\376\003\000\000\002\376\003\000\000\002\376\001\000\000\005\000time\376\003\000\000\002\376\377\001\000\000\000\000\376\377\016\376\003\000\000\002\376\003\000\000\002\376\001\000\000\004\000dur\376\003\000\000\002\376U0."
"5\000\376\377\016\376\003\000\000\002\376\003\000\000\002\376\001\000\000\004\000key\376\003\000\000\002\376\377\001\000\000\000<\376\377\016\376\003\000\000\002\376\003\000\000\002\376\001\000\000\004\000amp\376\003\000\000\002\376U0.5\000\376\377\016\376\003\000\000\002\376\003\000"
"\000\002\376\001\000\000\005\000chan\376\003\000\000\002\376\377\001\000\000\000\000\376\377\016\376\377\016");
lf[708]=C_decode_literal(C_heaptop,"\376B\000\000\007mp:note");
lf[709]=C_decode_literal(C_heaptop,"\376\003\000\000\002\376\001\000\000\007mp:note\376\003\000\000\002\376\003\000\000\002\376\001\000\000\005\000time\376\003\000\000\002\376\377\001\000\000\000\000\376\377\016\376\003\000\000\002\376\003\000\000\002\376\001\000\000\004\000dur\376\003\000\000\002\376U0."
"5\000\376\377\016\376\003\000\000\002\376\003\000\000\002\376\001\000\000\004\000key\376\003\000\000\002\376\377\001\000\000\000<\376\377\016\376\003\000\000\002\376\003\000\000\002\376\001\000\000\004\000amp\376\003\000\000\002\376U0.5\000\376\377\016\376\003\000\000\002\376\003\000"
"\000\002\376\001\000\000\005\000chan\376\003\000\000\002\376\377\001\000\000\000\000\376\377\016\376\377\016");
lf[710]=C_h_intern(&lf[710],5,":loop");
lf[711]=C_h_intern(&lf[711],7,"tagbody");
lf[712]=C_h_intern(&lf[712],5,"block");
lf[713]=C_h_intern(&lf[713],3,"nil");
lf[714]=C_h_intern(&lf[714],20,"\003sysregister-macro-2");
lf[715]=C_h_intern(&lf[715],8,"function");
lf[716]=C_decode_literal(C_heaptop,"\376B\000\000\001v");
lf[717]=C_h_intern(&lf[717],3,"pop");
lf[718]=C_h_intern(&lf[718],4,"cons");
lf[719]=C_h_intern(&lf[719],4,"push");
lf[720]=C_decode_literal(C_heaptop,"\376\003\000\000\002\376\001\000\000\002go\376\003\000\000\002\376\377\006\001\376\377\016");
lf[721]=C_h_intern(&lf[721],4,"loop");
lf[722]=C_decode_literal(C_heaptop,"\376B\000\000\001v");
lf[723]=C_decode_literal(C_heaptop,"\376B\000\000\030SalStatementSequenceRule");
lf[724]=C_decode_literal(C_heaptop,"\376B\000\000\020SalStatementRule");
lf[725]=C_h_intern(&lf[725],6,"define");
lf[726]=C_decode_literal(C_heaptop,"\376B\000\000\017Variable: ~A = ");
lf[727]=C_decode_literal(C_heaptop,"\376B\000\000\002)\012");
lf[728]=C_decode_literal(C_heaptop,"\376B\000\000\002, ");
lf[729]=C_decode_literal(C_heaptop,"\376B\000\000\002 (");
lf[730]=C_decode_literal(C_heaptop,"\376B\000\000\012Function: ");
lf[731]=C_h_intern(&lf[731],7,"\000return");
lf[732]=C_h_intern(&lf[732],9,"\000function");
lf[733]=C_decode_literal(C_heaptop,"\376B\000\000\011Process: ");
lf[734]=C_h_intern(&lf[734],8,"\000process");
lf[735]=C_decode_literal(C_heaptop,"\376B\000\000\003...");
lf[736]=C_decode_literal(C_heaptop,"\376B\000\000\026SalDefineStatementRule");
lf[737]=C_decode_literal(C_heaptop,"\376B\000\000\016SalFunDeclRule");
lf[738]=C_decode_literal(C_heaptop,"\376B\000\000/>>> Error: ~A~%    process aborted at time ~S~%");
lf[739]=C_decode_literal(C_heaptop,"\376B\000\000\005abort");
lf[740]=C_decode_literal(C_heaptop,"\376B\000\000\005error");
lf[741]=C_decode_literal(C_heaptop,"\376B\000\000\004wait");
lf[742]=C_decode_literal(C_heaptop,"\376B\000\000\004wait");
lf[743]=C_decode_literal(C_heaptop,"\376B\000\000\004time");
lf[744]=C_h_intern(&lf[744],5,"\000loop");
lf[745]=C_h_intern(&lf[745],4,"\000run");
lf[746]=C_decode_literal(C_heaptop,"\376B\000\000\035run statement outside process");
lf[747]=C_decode_literal(C_heaptop,"\376B\000\000\024SalLoopStatementRule");
lf[748]=C_decode_literal(C_heaptop,"\376B\000\000\022SalTerminationRule");
lf[749]=C_decode_literal(C_heaptop,"\376B\000\000\017SalSteppingRule");
lf[750]=C_decode_literal(C_heaptop,"\376B\000\000\002#f");
lf[751]=C_decode_literal(C_heaptop,"\376B\000\000\002#f");
lf[752]=C_decode_literal(C_heaptop,"\376B\000\000\022SalConditionalRule");
lf[753]=C_decode_literal(C_heaptop,"\376B\000\000\014SalBlockRule");
lf[754]=C_h_intern(&lf[754],9,"list-tail");
lf[755]=C_h_intern(&lf[755],8,"set-car!");
lf[756]=C_h_intern(&lf[756],3,"min");
lf[757]=C_decode_literal(C_heaptop,"\376B\000\000\021SalAssignmentRule");
lf[758]=C_decode_literal(C_heaptop,"\376B\000\000\015SalAssignRule");
lf[759]=C_h_intern(&lf[759],9,"\000bindings");
lf[760]=C_decode_literal(C_heaptop,"\376B\000\000\017SalBindingsRule");
lf[761]=C_decode_literal(C_heaptop,"\376B\000\000\002#f");
lf[762]=C_decode_literal(C_heaptop,"\376B\000\000\013SalBindRule");
lf[763]=C_decode_literal(C_heaptop,"\376B\000\000!return statement outside function");
lf[764]=C_decode_literal(C_heaptop,"\376B\000\000\025SalFunctionReturnRule");
lf[765]=C_decode_literal(C_heaptop,"\376B\000\000 wait statement outside run block");
lf[766]=C_decode_literal(C_heaptop,"\376B\000\000\022SalProcessWaitRule");
lf[767]=C_decode_literal(C_heaptop,"\376\003\000\000\002\376\001\000\000\006fix-me\376\003\000\000\002\376\001\000\000\004plot\376\377\016");
lf[768]=C_decode_literal(C_heaptop,"\376B\000\000\024SalPlotStatementRule");
lf[769]=C_decode_literal(C_heaptop,"\376B\000\000\026SalOutputStatementRule");
lf[770]=C_decode_literal(C_heaptop,"\376B\000\000\026SalSystemStatementRule");
lf[771]=C_h_intern(&lf[771],10,"sal:system");
lf[772]=C_decode_literal(C_heaptop,"\376B\000\000\025SalChdirStatementRule");
lf[773]=C_decode_literal(C_heaptop,"\376B\000\000\024SalLoadStatementRule");
lf[774]=C_decode_literal(C_heaptop,"\376B\000\000\024SalExecStatementRule");
lf[775]=C_decode_literal(C_heaptop,"\376B\000\000\024SalSendStatementRule");
lf[776]=C_decode_literal(C_heaptop,"\376B\000\000\026SalSproutStatementRule");
lf[777]=C_decode_literal(C_heaptop,"\376B\000\000\025SalPrintStatementRule");
lf[778]=C_decode_literal(C_heaptop,"\376B\000\000\014SalSexprRule");
lf[779]=C_decode_literal(C_heaptop,"\376B\000\000\013SalTermRule");
lf[780]=C_decode_literal(C_heaptop,"\376B\000\000\014SalMexprRule");
lf[781]=C_decode_literal(C_heaptop,"\376B\000\000\011SalOpRule");
lf[782]=C_decode_literal(C_heaptop,"\376B\000\000\016SalFuncallRule");
lf[783]=C_decode_literal(C_heaptop,"\376B\000\000\016SalFunargsRule");
lf[784]=C_decode_literal(C_heaptop,"\376B\000\000\014SalKargsRule");
lf[785]=C_decode_literal(C_heaptop,"\376B\000\000\014SalPargsRule");
lf[786]=C_decode_literal(C_heaptop,"\376B\000\000\015SalIfExprRule");
lf[787]=C_decode_literal(C_heaptop,"\376B\000\000\013SalArefRule");
lf[788]=C_decode_literal(C_heaptop,"\376B\000\000\012SalEltRule");
lf[789]=C_h_intern(&lf[789],7,"unquote");
lf[790]=C_h_intern(&lf[790],16,"unquote-splicing");
lf[791]=C_h_intern(&lf[791],5,"\000list");
lf[792]=C_h_intern(&lf[792],8,"\000unquote");
lf[793]=C_decode_literal(C_heaptop,"\376B\000\000\023#$ outside of list.");
lf[794]=C_decode_literal(C_heaptop,"\376B\000\000\023#^ outside of list.");
lf[795]=C_decode_literal(C_heaptop,"\376B\000\000\016SalUnquoteRule");
lf[796]=C_h_intern(&lf[796],10,"quasiquote");
lf[797]=C_decode_literal(C_heaptop,"\376B\000\000\013SalListRule");
lf[798]=C_decode_literal(C_heaptop,"\376B\000\000\013SalAtomRule");
lf[799]=C_decode_literal(C_heaptop,"\376B\000\000\013SalBoolRule");
lf[800]=C_decode_literal(C_heaptop,"\376B\000\000\015SalNumberRule");
lf[801]=C_h_intern(&lf[801],7,"fprintf");
lf[802]=C_decode_literal(C_heaptop,"\376B\000\000\007#<u ~A>");
lf[803]=C_decode_literal(C_heaptop,"\376B\000\000\010#<u x~X>");
lf[804]=C_h_intern(&lf[804],27,"\003sysregister-record-printer");
lf[805]=C_decode_literal(C_heaptop,"\376B\000\000\030#<parse-error ~S (@ ~S)>");
lf[806]=C_decode_literal(C_heaptop,"\376\003\000\000\002\376\001\000\000\004list\376\377\016");
lf[807]=C_decode_literal(C_heaptop,"\376\003\000\000\002\376\001\000\000\001+\376\003\000\000\002\376\001\000\000\001*\376\003\000\000\002\376\001\000\000\001@\376\003\000\000\002\376\001\000\000\003and\376\003\000\000\002\376\001\000\000\002or\376\377\016");
lf[808]=C_h_intern(&lf[808],6,"ruleid");
lf[809]=C_h_intern(&lf[809],9,"make-rule");
lf[810]=C_h_intern(&lf[810],7,"*rules*");
lf[811]=C_h_intern(&lf[811],7,"defrule");
lf[812]=C_decode_literal(C_heaptop,"\376B\000\000\007#<r ~A>");
lf[813]=C_h_intern(&lf[813],15,"make-hash-table");
lf[814]=C_h_intern(&lf[814],3,"eq\077");
lf[815]=C_decode_literal(C_heaptop,"\376B\000\000\013#<t x~X ~S>");
lf[816]=C_decode_literal(C_heaptop,"\376B\000\000\001r");
lf[817]=C_decode_literal(C_heaptop,"\376U0.0\000");
lf[818]=C_decode_literal(C_heaptop,"\376B\000\000\001r");
lf[819]=C_decode_literal(C_heaptop,"\376\003\000\000\002\376\003\000\000\002\376B\000\000\001c\376\003\000\000\002\376B\000\000\002bs\376\377\016\376\003\000\000\002\376\003\000\000\002\376B\000\000\002df\376\003\000\000\002\376B\000\000\002cs\376\377\016\376\003\000\000\002\376\003\000\000\002\376B\000\000\001d\376"
"\377\016\376\003\000\000\002\376\003\000\000\002\376B\000\000\002ef\376\003\000\000\002\376B\000\000\002ds\376\377\016\376\003\000\000\002\376\003\000\000\002\376B\000\000\001e\376\003\000\000\002\376B\000\000\002ff\376\377\016\376\003\000\000\002\376\003\000\000\002\376B\000\000\001"
"f\376\003\000\000\002\376B\000\000\002es\376\377\016\376\003\000\000\002\376\003\000\000\002\376B\000\000\002fs\376\003\000\000\002\376B\000\000\002gf\376\377\016\376\003\000\000\002\376\003\000\000\002\376B\000\000\001g\376\377\016\376\003\000\000\002\376\003\000\000\002\376B\000"
"\000\002af\376\003\000\000\002\376B\000\000\002gs\376\377\016\376\003\000\000\002\376\003\000\000\002\376B\000\000\001a\376\377\016\376\003\000\000\002\376\003\000\000\002\376B\000\000\002bf\376\003\000\000\002\376B\000\000\002as\376\377\016\376\003\000\000\002\376\003\000\000\002"
"\376B\000\000\001b\376\003\000\000\002\376B\000\000\002cf\376\377\016\376\377\016");
lf[820]=C_decode_literal(C_heaptop,"\376U0.5\000");
lf[821]=C_decode_literal(C_heaptop,"\376U0.5\000");
lf[822]=C_decode_literal(C_heaptop,"\376\003\000\000\002\376B\000\000\00200\376\003\000\000\002\376B\000\000\0010\376\003\000\000\002\376B\000\000\0011\376\003\000\000\002\376B\000\000\0012\376\003\000\000\002\376B\000\000\0013\376\003\000\000\002\376B\000\000\0014\376\003\000\000\002\376B\000\000\0015\376\003"
"\000\000\002\376B\000\000\0016\376\003\000\000\002\376B\000\000\0017\376\003\000\000\002\376B\000\000\0018\376\003\000\000\002\376B\000\000\0019\376\377\016");
lf[823]=C_decode_literal(C_heaptop,"\376B\000\000\001>");
lf[824]=C_decode_literal(C_heaptop,"\376B\000\000\001<");
lf[825]=C_decode_literal(C_heaptop,"\376B\000\000\002bs");
lf[826]=C_decode_literal(C_heaptop,"\376B\000\000\002cf");
lf[827]=C_decode_literal(C_heaptop,"\376B\000\000\002bs");
lf[828]=C_decode_literal(C_heaptop,"\376U0.5\000");
lf[829]=C_decode_literal(C_heaptop,"\376U0.5\000");
lf[830]=C_h_intern(&lf[830],6,"equal\077");
lf[831]=C_h_intern(&lf[831],4,"send");
lf[832]=C_decode_literal(C_heaptop,"\376B\000\0003message function not string, symbol or list of both");
lf[833]=C_h_intern(&lf[833],19,"define-send-message");
lf[834]=C_h_intern(&lf[834],12,"with-optkeys");
C_register_lf2(lf,835,create_ptable());
t2=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_5307,a[2]=t1,tmp=(C_word)a,a+=3,tmp);
C_library_toplevel(2,C_SCHEME_UNDEFINED,t2);}

/* k5305 */
static void C_ccall f_5307(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[3],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_5307,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_5310,a[2]=((C_word*)t0)[2],tmp=(C_word)a,a+=3,tmp);
C_eval_toplevel(2,C_SCHEME_UNDEFINED,t2);}

/* k5308 in k5305 */
static void C_ccall f_5310(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[3],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_5310,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_5313,a[2]=((C_word*)t0)[2],tmp=(C_word)a,a+=3,tmp);
C_extras_toplevel(2,C_SCHEME_UNDEFINED,t2);}

/* k5311 in k5308 in k5305 */
static void C_ccall f_5313(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[3],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_5313,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_5316,a[2]=((C_word*)t0)[2],tmp=(C_word)a,a+=3,tmp);
C_extras_toplevel(2,C_SCHEME_UNDEFINED,t2);}

/* k5314 in k5311 in k5308 in k5305 */
static void C_ccall f_5316(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_5316,2,t0,t1);}
t2=C_mutate((C_word*)lf[0]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_5318,a[2]=((C_word)li4),tmp=(C_word)a,a+=3,tmp));
t3=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_5607,a[2]=((C_word*)t0)[2],tmp=(C_word)a,a+=3,tmp);
t4=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_33500,a[2]=((C_word)li534),tmp=(C_word)a,a+=3,tmp);
C_trace("ChickenBridge.scm: 240  ##sys#register-macro");
t5=C_retrieve(lf[679]);
((C_proc4)C_retrieve_proc(t5))(4,t5,t3,lf[834],t4);}

/* a33499 in k5314 in k5311 in k5308 in k5305 */
static void C_ccall f_33500(C_word c,C_word t0,C_word t1,C_word t2,...){
C_word tmp;
C_word t3;
va_list v;
C_word *a,c2=c;
C_save_rest(t2,c2,3);
if(c<3) C_bad_min_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_demand(c*C_SIZEOF_PAIR+0)){
C_save_and_reclaim((void*)tr3r,(void*)f_33500r,3,t0,t1,t2);}
else{
a=C_alloc((c-3)*3);
t3=C_restore_rest(a,C_rest_count(0));
f_33500r(t0,t1,t2,t3);}}

static void C_ccall f_33500r(C_word t0,C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word t6;
t4=(C_word)C_i_car(t2);
t5=(C_word)C_i_cdr(t2);
C_trace("ChickenBridge.scm: 241  expand-optkeys");
t6=*((C_word*)lf[0]+1);
((C_proc5)C_retrieve_proc(t6))(5,t6,t1,t4,t5,t3);}

/* k5605 in k5314 in k5311 in k5308 in k5305 */
static void C_ccall f_5607(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[3],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_5607,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_5611,a[2]=((C_word*)t0)[2],tmp=(C_word)a,a+=3,tmp);
C_trace("ChickenBridge.scm: 247  make-hash-table");
t3=C_retrieve(lf[813]);
((C_proc3)C_retrieve_proc(t3))(3,t3,t2,*((C_word*)lf[830]+1));}

/* k5609 in k5605 in k5314 in k5311 in k5308 in k5305 */
static void C_ccall f_5611(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[6],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_5611,2,t0,t1);}
t2=C_mutate((C_word*)lf[29]+1,t1);
t3=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_5614,a[2]=((C_word*)t0)[2],tmp=(C_word)a,a+=3,tmp);
t4=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_33448,a[2]=((C_word)li533),tmp=(C_word)a,a+=3,tmp);
C_trace("ChickenBridge.scm: 249  ##sys#register-macro");
t5=C_retrieve(lf[679]);
((C_proc4)C_retrieve_proc(t5))(4,t5,t3,lf[833],t4);}

/* a33447 in k5609 in k5605 in k5314 in k5311 in k5308 in k5305 */
static void C_ccall f_33448(C_word c,C_word t0,C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word t14;
C_word t15;
C_word ab[18],*a=ab;
if(c!=4) C_bad_argc_2(c,4,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr4,(void*)f_33448,4,t0,t1,t2,t3);}
t4=(*a=C_VECTOR_TYPE|1,a[1]=t2,tmp=(C_word)a,a+=2,tmp);
t5=C_SCHEME_FALSE;
t6=(*a=C_VECTOR_TYPE|1,a[1]=t5,tmp=(C_word)a,a+=2,tmp);
t7=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_33452,a[2]=t6,a[3]=t1,a[4]=t3,a[5]=t4,tmp=(C_word)a,a+=6,tmp);
if(C_truep((C_word)C_i_pairp(((C_word*)t4)[1]))){
t8=(C_word)C_i_car(((C_word*)t4)[1]);
t9=C_set_block_item(t6,0,t8);
t10=(C_word)C_i_cadr(((C_word*)t4)[1]);
t11=C_set_block_item(t4,0,t10);
t12=t7;
f_33452(2,t12,t11);}
else{
if(C_truep((C_word)C_i_stringp(((C_word*)t4)[1]))){
t8=C_set_block_item(t6,0,((C_word*)t4)[1]);
t9=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_33485,a[2]=t7,a[3]=t4,tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 256  string->symbol");
t10=*((C_word*)lf[307]+1);
((C_proc3)C_retrieve_proc(t10))(3,t10,t9,((C_word*)t4)[1]);}
else{
if(C_truep((C_word)C_i_symbolp(((C_word*)t4)[1]))){
t8=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_33495,a[2]=t7,a[3]=t6,tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 258  symbol->string");
t9=*((C_word*)lf[25]+1);
((C_proc3)C_retrieve_proc(t9))(3,t9,t8,((C_word*)t4)[1]);}
else{
C_trace("ChickenBridge.scm: 260  error");
t8=*((C_word*)lf[4]+1);
((C_proc3)C_retrieve_proc(t8))(3,t8,t7,lf[832]);}}}}

/* k33493 in a33447 in k5609 in k5605 in k5314 in k5311 in k5308 in k5305 */
static void C_ccall f_33495(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[3])+1,t1);
t3=((C_word*)t0)[2];
f_33452(2,t3,t2);}

/* k33483 in a33447 in k5609 in k5605 in k5314 in k5311 in k5308 in k5305 */
static void C_ccall f_33485(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[3])+1,t1);
t3=((C_word*)t0)[2];
f_33452(2,t3,t2);}

/* k33450 in a33447 in k5609 in k5605 in k5314 in k5311 in k5308 in k5305 */
static void C_ccall f_33452(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[21],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_33452,2,t0,t1);}
t2=(C_word)C_a_i_cons(&a,2,((C_word*)((C_word*)t0)[5])[1],((C_word*)t0)[4]);
t3=(C_word)C_a_i_list(&a,2,lf[465],t2);
t4=((C_word*)t0)[3];
((C_proc2)(void*)(*((C_word*)t4+1)))(2,t4,(C_word)C_a_i_list(&a,4,lf[681],lf[29],((C_word*)((C_word*)t0)[2])[1],t3));}

/* k5612 in k5609 in k5605 in k5314 in k5311 in k5308 in k5305 */
static void C_ccall f_5614(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_5614,2,t0,t1);}
t2=C_mutate((C_word*)lf[30]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_5616,a[2]=((C_word)li12),tmp=(C_word)a,a+=3,tmp));
t3=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_5907,a[2]=((C_word*)t0)[2],tmp=(C_word)a,a+=3,tmp);
t4=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_33442,a[2]=((C_word)li532),tmp=(C_word)a,a+=3,tmp);
C_trace("ChickenBridge.scm: 345  ##sys#register-macro");
t5=C_retrieve(lf[679]);
((C_proc4)C_retrieve_proc(t5))(4,t5,t3,lf[831],t4);}

/* a33441 in k5612 in k5609 in k5605 in k5314 in k5311 in k5308 in k5305 */
static void C_ccall f_33442(C_word c,C_word t0,C_word t1,C_word t2,...){
C_word tmp;
C_word t3;
va_list v;
C_word *a,c2=c;
C_save_rest(t2,c2,3);
if(c<3) C_bad_min_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_demand(c*C_SIZEOF_PAIR+0)){
C_save_and_reclaim((void*)tr3r,(void*)f_33442r,3,t0,t1,t2);}
else{
a=C_alloc((c-3)*3);
t3=C_restore_rest(a,C_rest_count(0));
f_33442r(t0,t1,t2,t3);}}

static void C_ccall f_33442r(C_word t0,C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_trace("ChickenBridge.scm: 346  expand-send");
t4=C_retrieve(lf[30]);
((C_proc5)C_retrieve_proc(t4))(5,t4,t1,t2,t3,C_SCHEME_FALSE);}

/* k5905 in k5612 in k5609 in k5605 in k5314 in k5311 in k5308 in k5305 */
static void C_ccall f_5907(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word t14;
C_word t15;
C_word t16;
C_word t17;
C_word t18;
C_word t19;
C_word t20;
C_word t21;
C_word t22;
C_word t23;
C_word t24;
C_word t25;
C_word t26;
C_word t27;
C_word t28;
C_word t29;
C_word t30;
C_word t31;
C_word t32;
C_word t33;
C_word t34;
C_word t35;
C_word t36;
C_word t37;
C_word t38;
C_word t39;
C_word t40;
C_word t41;
C_word t42;
C_word t43;
C_word t44;
C_word t45;
C_word t46;
C_word t47;
C_word t48;
C_word t49;
C_word t50;
C_word t51;
C_word t52;
C_word t53;
C_word t54;
C_word t55;
C_word t56;
C_word t57;
C_word t58;
C_word t59;
C_word t60;
C_word t61;
C_word t62;
C_word t63;
C_word t64;
C_word t65;
C_word t66;
C_word t67;
C_word t68;
C_word t69;
C_word t70;
C_word t71;
C_word t72;
C_word t73;
C_word ab[183],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_5907,2,t0,t1);}
t2=C_mutate((C_word*)lf[42]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_5909,a[2]=((C_word)li14),tmp=(C_word)a,a+=3,tmp));
t3=C_mutate((C_word*)lf[44]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_5920,a[2]=((C_word)li16),tmp=(C_word)a,a+=3,tmp));
t4=C_mutate((C_word*)lf[47]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_5949,a[2]=((C_word)li17),tmp=(C_word)a,a+=3,tmp));
t5=C_mutate((C_word*)lf[48]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_5959,a[2]=((C_word)li18),tmp=(C_word)a,a+=3,tmp));
t6=C_mutate((C_word*)lf[49]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_5969,a[2]=((C_word)li19),tmp=(C_word)a,a+=3,tmp));
t7=C_mutate((C_word*)lf[50]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_5979,a[2]=((C_word)li20),tmp=(C_word)a,a+=3,tmp));
t8=C_mutate((C_word*)lf[51]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_5989,a[2]=((C_word)li21),tmp=(C_word)a,a+=3,tmp));
t9=C_mutate((C_word*)lf[52]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_6003,a[2]=((C_word)li22),tmp=(C_word)a,a+=3,tmp));
t10=C_mutate((C_word*)lf[53]+1,*((C_word*)lf[54]+1));
t11=C_mutate((C_word*)lf[55]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_6018,a[2]=((C_word)li23),tmp=(C_word)a,a+=3,tmp));
t12=C_mutate((C_word*)lf[56]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_6024,a[2]=((C_word)li24),tmp=(C_word)a,a+=3,tmp));
t13=C_mutate((C_word*)lf[57]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_6047,a[2]=((C_word)li25),tmp=(C_word)a,a+=3,tmp));
t14=C_mutate((C_word*)lf[58]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_6115,a[2]=((C_word)li26),tmp=(C_word)a,a+=3,tmp));
t15=C_mutate((C_word*)lf[60]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_6155,a[2]=((C_word)li27),tmp=(C_word)a,a+=3,tmp));
t16=C_mutate((C_word*)lf[61]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_6165,a[2]=((C_word)li29),tmp=(C_word)a,a+=3,tmp));
t17=C_mutate(&lf[63],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_6213,a[2]=((C_word)li30),tmp=(C_word)a,a+=3,tmp));
t18=C_mutate(&lf[64],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_6299,a[2]=((C_word)li32),tmp=(C_word)a,a+=3,tmp));
t19=C_mutate(&lf[65],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_6340,a[2]=((C_word)li33),tmp=(C_word)a,a+=3,tmp));
t20=C_mutate(&lf[66],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_6367,a[2]=((C_word)li34),tmp=(C_word)a,a+=3,tmp));
t21=C_mutate(&lf[67],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_6394,a[2]=((C_word)li35),tmp=(C_word)a,a+=3,tmp));
t22=C_mutate(&lf[68],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_6401,a[2]=((C_word)li36),tmp=(C_word)a,a+=3,tmp));
t23=C_mutate(&lf[69],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_6412,a[2]=((C_word)li37),tmp=(C_word)a,a+=3,tmp));
t24=C_mutate(&lf[70],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_6423,a[2]=((C_word)li38),tmp=(C_word)a,a+=3,tmp));
t25=C_mutate(&lf[71],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_6438,a[2]=((C_word)li39),tmp=(C_word)a,a+=3,tmp));
t26=C_mutate(&lf[72],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_6445,a[2]=((C_word)li40),tmp=(C_word)a,a+=3,tmp));
t27=C_mutate(&lf[73],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_6452,a[2]=((C_word)li41),tmp=(C_word)a,a+=3,tmp));
t28=C_mutate(&lf[74],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_6473,a[2]=((C_word)li42),tmp=(C_word)a,a+=3,tmp));
t29=C_mutate(&lf[75],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_6476,a[2]=((C_word)li43),tmp=(C_word)a,a+=3,tmp));
t30=C_mutate(&lf[76],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_6483,a[2]=((C_word)li44),tmp=(C_word)a,a+=3,tmp));
t31=C_mutate(&lf[77],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_6512,a[2]=((C_word)li45),tmp=(C_word)a,a+=3,tmp));
t32=C_mutate(&lf[78],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_6515,a[2]=((C_word)li46),tmp=(C_word)a,a+=3,tmp));
t33=C_mutate(&lf[79],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_6518,a[2]=((C_word)li47),tmp=(C_word)a,a+=3,tmp));
t34=C_mutate(&lf[80],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_6521,a[2]=((C_word)li48),tmp=(C_word)a,a+=3,tmp));
t35=C_mutate(&lf[81],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_6532,a[2]=((C_word)li49),tmp=(C_word)a,a+=3,tmp));
t36=C_mutate(&lf[82],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_6550,a[2]=((C_word)li50),tmp=(C_word)a,a+=3,tmp));
t37=C_mutate(&lf[83],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_6557,a[2]=((C_word)li51),tmp=(C_word)a,a+=3,tmp));
t38=C_mutate(&lf[84],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_6560,a[2]=((C_word)li52),tmp=(C_word)a,a+=3,tmp));
t39=C_mutate(&lf[85],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_6567,a[2]=((C_word)li53),tmp=(C_word)a,a+=3,tmp));
t40=C_mutate(&lf[86],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_6570,a[2]=((C_word)li54),tmp=(C_word)a,a+=3,tmp));
t41=C_mutate((C_word*)lf[87]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_6573,a[2]=((C_word)li56),tmp=(C_word)a,a+=3,tmp));
t42=C_mutate((C_word*)lf[88]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_6607,a[2]=((C_word)li57),tmp=(C_word)a,a+=3,tmp));
t43=C_mutate((C_word*)lf[89]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_6689,a[2]=((C_word)li58),tmp=(C_word)a,a+=3,tmp));
t44=C_mutate((C_word*)lf[90]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_6704,a[2]=((C_word)li59),tmp=(C_word)a,a+=3,tmp));
t45=C_mutate((C_word*)lf[92]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_6746,a[2]=((C_word)li60),tmp=(C_word)a,a+=3,tmp));
t46=C_mutate((C_word*)lf[94]+1,*((C_word*)lf[95]+1));
t47=C_mutate((C_word*)lf[96]+1,*((C_word*)lf[97]+1));
t48=C_mutate((C_word*)lf[98]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_6772,a[2]=((C_word)li62),tmp=(C_word)a,a+=3,tmp));
t49=C_mutate((C_word*)lf[99]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_6793,a[2]=((C_word)li63),tmp=(C_word)a,a+=3,tmp));
t50=C_mutate((C_word*)lf[100]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_6812,a[2]=((C_word)li65),tmp=(C_word)a,a+=3,tmp));
t51=C_mutate((C_word*)lf[105]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_7048,a[2]=((C_word)li66),tmp=(C_word)a,a+=3,tmp));
t52=C_mutate((C_word*)lf[106]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_7063,a[2]=((C_word)li67),tmp=(C_word)a,a+=3,tmp));
t53=C_mutate((C_word*)lf[107]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_7078,a[2]=((C_word)li69),tmp=(C_word)a,a+=3,tmp));
t54=C_mutate((C_word*)lf[112]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_7173,a[2]=((C_word)li70),tmp=(C_word)a,a+=3,tmp));
t55=C_mutate((C_word*)lf[113]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_7200,a[2]=((C_word)li72),tmp=(C_word)a,a+=3,tmp));
t56=C_mutate((C_word*)lf[115]+1,C_retrieve2(lf[74],"tb:ran-set!"));
t57=C_mutate((C_word*)lf[116]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_7274,a[2]=((C_word)li73),tmp=(C_word)a,a+=3,tmp));
t58=C_mutate((C_word*)lf[117]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_7298,a[2]=((C_word)li74),tmp=(C_word)a,a+=3,tmp));
t59=C_mutate((C_word*)lf[118]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_7319,a[2]=((C_word)li75),tmp=(C_word)a,a+=3,tmp));
t60=C_mutate((C_word*)lf[119]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_7362,a[2]=((C_word)li76),tmp=(C_word)a,a+=3,tmp));
t61=C_mutate((C_word*)lf[123]+1,C_retrieve2(lf[77],"tb:ranlow"));
t62=C_mutate((C_word*)lf[124]+1,C_retrieve2(lf[78],"tb:ranhigh"));
t63=C_mutate((C_word*)lf[125]+1,C_retrieve2(lf[79],"tb:ranmiddle"));
t64=C_mutate((C_word*)lf[126]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_7593,a[2]=((C_word)li77),tmp=(C_word)a,a+=3,tmp));
t65=C_mutate((C_word*)lf[130]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_7821,a[2]=((C_word)li78),tmp=(C_word)a,a+=3,tmp));
t66=C_mutate((C_word*)lf[131]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_7840,a[2]=((C_word)li79),tmp=(C_word)a,a+=3,tmp));
t67=C_mutate((C_word*)lf[132]+1,C_retrieve2(lf[83],"tb:rancauchy"));
t68=C_mutate((C_word*)lf[133]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_7881,a[2]=((C_word)li80),tmp=(C_word)a,a+=3,tmp));
t69=C_mutate((C_word*)lf[135]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_7900,a[2]=((C_word)li81),tmp=(C_word)a,a+=3,tmp));
t70=C_mutate((C_word*)lf[136]+1,C_retrieve2(lf[86],"tb:ranbrown"));
t71=C_mutate((C_word*)lf[137]+1,C_retrieve2(lf[85],"tb:ranpink"));
t72=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_7923,a[2]=((C_word*)t0)[2],tmp=(C_word)a,a+=3,tmp);
C_trace("ChickenBridge.scm: 367  make-hash-table");
t73=C_retrieve(lf[813]);
((C_proc3)C_retrieve_proc(t73))(3,t73,t72,*((C_word*)lf[830]+1));}

/* k7921 in k5905 in k5612 in k5609 in k5605 in k5314 in k5311 in k5308 in k5305 */
static void C_ccall f_7923(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word ab[12],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_7923,2,t0,t1);}
t2=C_mutate(&lf[138],t1);
t3=C_SCHEME_END_OF_LIST;
t4=(*a=C_VECTOR_TYPE|1,a[1]=t3,tmp=(C_word)a,a+=2,tmp);
t5=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_7926,a[2]=((C_word*)t0)[2],tmp=(C_word)a,a+=3,tmp);
t6=C_SCHEME_UNDEFINED;
t7=(*a=C_VECTOR_TYPE|1,a[1]=t6,tmp=(C_word)a,a+=2,tmp);
t8=C_set_block_item(t7,0,(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_33226,a[2]=t7,a[3]=t4,a[4]=((C_word)li531),tmp=(C_word)a,a+=5,tmp));
t9=((C_word*)t7)[1];
f_33226(t9,t5,C_fix(0));}

/* do503 in k7921 in k5905 in k5612 in k5609 in k5605 in k5314 in k5311 in k5308 in k5305 */
static void C_fcall f_33226(C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[25],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_33226,NULL,3,t0,t1,t2);}
if(C_truep((C_word)C_i_nequalp(t2,C_fix(128)))){
t3=(C_word)C_a_i_list(&a,5,lf[816],C_fix(-1),lf[817],C_SCHEME_FALSE,C_SCHEME_FALSE);
t4=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_33239,a[2]=t3,a[3]=t1,tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 367  hash-table-set!");
t5=C_retrieve(lf[681]);
((C_proc5)C_retrieve_proc(t5))(5,t5,t4,C_retrieve2(lf[138],"*notes*"),lf[818],t3);}
else{
t3=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_33440,a[2]=t1,a[3]=((C_word*)t0)[2],a[4]=t2,a[5]=((C_word*)t0)[3],tmp=(C_word)a,a+=6,tmp);
C_trace("ChickenBridge.scm: 367  modulo");
t4=*((C_word*)lf[114]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t3,t2,C_fix(12));}}

/* k33438 in do503 in k7921 in k5905 in k5612 in k5609 in k5605 in k5314 in k5311 in k5308 in k5305 */
static void C_ccall f_33440(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[10],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_33440,2,t0,t1);}
t2=(C_word)C_i_list_ref(lf[819],t1);
t3=C_mutate(((C_word *)((C_word*)t0)[5])+1,t2);
t4=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_33249,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],tmp=(C_word)a,a+=5,tmp);
t5=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_33260,a[2]=t4,a[3]=((C_word*)t0)[5],a[4]=((C_word*)t0)[4],tmp=(C_word)a,a+=5,tmp);
C_trace("ChickenBridge.scm: 367  modulo");
t6=*((C_word*)lf[114]+1);
((C_proc4)C_retrieve_proc(t6))(4,t6,t5,((C_word*)t0)[4],C_fix(12));}

/* k33258 in k33438 in do503 in k7921 in k5905 in k5612 in k5609 in k5605 in k5314 in k5311 in k5308 in k5305 */
static void C_ccall f_33260(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[16],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_33260,2,t0,t1);}
t2=(C_word)C_a_i_minus(&a,2,((C_word*)t0)[4],lf[820]);
t3=(C_word)C_a_i_plus(&a,2,((C_word*)t0)[4],lf[821]);
t4=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_33272,a[2]=t3,a[3]=t2,a[4]=t1,a[5]=((C_word*)t0)[4],a[6]=((C_word*)t0)[2],a[7]=((C_word*)t0)[3],tmp=(C_word)a,a+=8,tmp);
C_trace("ChickenBridge.scm: 367  tb:keynum->hertz");
f_6452(t4,((C_word*)t0)[4]);}

/* k33270 in k33258 in k33438 in do503 in k7921 in k5905 in k5612 in k5609 in k5605 in k5314 in k5311 in k5308 in k5305 */
static void C_ccall f_33272(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[13],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_33272,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|8,a[1]=(C_word)f_33276,a[2]=t1,a[3]=((C_word*)t0)[2],a[4]=((C_word*)t0)[3],a[5]=((C_word*)t0)[4],a[6]=((C_word*)t0)[5],a[7]=((C_word*)t0)[6],a[8]=((C_word*)t0)[7],tmp=(C_word)a,a+=9,tmp);
t3=(C_word)C_a_i_plus(&a,2,((C_word*)t0)[5],lf[829]);
C_trace("ChickenBridge.scm: 367  tb:keynum->hertz");
f_6452(t2,t3);}

/* k33274 in k33270 in k33258 in k33438 in do503 in k7921 in k5905 in k5612 in k5609 in k5605 in k5314 in k5311 in k5308 in k5305 */
static void C_ccall f_33276(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[14],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_33276,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|9,a[1]=(C_word)f_33280,a[2]=t1,a[3]=((C_word*)t0)[2],a[4]=((C_word*)t0)[3],a[5]=((C_word*)t0)[4],a[6]=((C_word*)t0)[5],a[7]=((C_word*)t0)[6],a[8]=((C_word*)t0)[7],a[9]=((C_word*)t0)[8],tmp=(C_word)a,a+=10,tmp);
t3=(C_word)C_a_i_minus(&a,2,((C_word*)t0)[6],lf[828]);
C_trace("ChickenBridge.scm: 367  tb:keynum->hertz");
f_6452(t2,t3);}

/* k33278 in k33274 in k33270 in k33258 in k33438 in do503 in k7921 in k5905 in k5612 in k5609 in k5605 in k5314 in k5311 in k5308 in k5305 */
static void C_ccall f_33280(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[15],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_33280,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|10,a[1]=(C_word)f_33424,a[2]=t1,a[3]=((C_word*)t0)[2],a[4]=((C_word*)t0)[3],a[5]=((C_word*)t0)[4],a[6]=((C_word*)t0)[5],a[7]=((C_word*)t0)[6],a[8]=((C_word*)t0)[7],a[9]=((C_word*)t0)[8],a[10]=((C_word*)t0)[9],tmp=(C_word)a,a+=11,tmp);
t3=(C_word)C_a_i_divide(&a,2,((C_word*)t0)[7],C_fix(12));
C_trace("ChickenBridge.scm: 367  floor");
t4=*((C_word*)lf[149]+1);
((C_proc3)C_retrieve_proc(t4))(3,t4,t2,t3);}

/* k33422 in k33278 in k33274 in k33270 in k33258 in k33438 in do503 in k7921 in k5905 in k5612 in k5609 in k5605 in k5314 in k5311 in k5308 in k5305 */
static void C_ccall f_33424(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_33424,2,t0,t1);}
t2=(C_word)C_i_inexact_to_exact(t1);
t3=C_SCHEME_UNDEFINED;
t4=(*a=C_VECTOR_TYPE|1,a[1]=t3,tmp=(C_word)a,a+=2,tmp);
t5=C_set_block_item(t4,0,(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_33286,a[2]=((C_word*)t0)[10],a[3]=t4,a[4]=((C_word)li530),tmp=(C_word)a,a+=5,tmp));
t6=((C_word*)t4)[1];
f_33286(t6,((C_word*)t0)[9],((C_word*)((C_word*)t0)[10])[1],((C_word*)t0)[8],((C_word*)t0)[7],((C_word*)t0)[6],((C_word*)t0)[5],((C_word*)t0)[4],((C_word*)t0)[3],((C_word*)t0)[2],t2,C_SCHEME_FALSE,C_SCHEME_FALSE,C_SCHEME_FALSE);}

/* do509 in k33422 in k33278 in k33274 in k33270 in k33258 in k33438 in do503 in k7921 in k5905 in k5612 in k5609 in k5605 in k5314 in k5311 in k5308 in k5305 */
static void C_fcall f_33286(C_word t0,C_word t1,C_word t2,C_word t3,C_word t4,C_word t5,C_word t6,C_word t7,C_word t8,C_word t9,C_word t10,C_word t11,C_word t12,C_word t13){
C_word tmp;
C_word t14;
C_word t15;
C_word t16;
C_word t17;
C_word t18;
C_word t19;
C_word t20;
C_word t21;
C_word ab[40],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_33286,NULL,14,t0,t1,t2,t3,t4,t5,t6,t7,t8,t9,t10,t11,t12,t13);}
t14=(*a=C_VECTOR_TYPE|1,a[1]=t10,tmp=(C_word)a,a+=2,tmp);
t15=(*a=C_VECTOR_TYPE|1,a[1]=t11,tmp=(C_word)a,a+=2,tmp);
t16=(*a=C_VECTOR_TYPE|1,a[1]=t12,tmp=(C_word)a,a+=2,tmp);
t17=(*a=C_VECTOR_TYPE|1,a[1]=t13,tmp=(C_word)a,a+=2,tmp);
if(C_truep((C_word)C_i_nullp(t2))){
t18=t1;
((C_proc2)(void*)(*((C_word*)t18+1)))(2,t18,C_SCHEME_FALSE);}
else{
t18=(*a=C_CLOSURE_TYPE|15,a[1]=(C_word)f_33296,a[2]=t17,a[3]=t16,a[4]=t15,a[5]=t14,a[6]=t9,a[7]=t8,a[8]=t7,a[9]=t6,a[10]=t5,a[11]=t4,a[12]=t3,a[13]=t1,a[14]=((C_word*)t0)[3],a[15]=t2,tmp=(C_word)a,a+=16,tmp);
t19=(*a=C_CLOSURE_TYPE|15,a[1]=(C_word)f_33306,a[2]=((C_word*)t0)[2],a[3]=t2,a[4]=t8,a[5]=t6,a[6]=t9,a[7]=t5,a[8]=t17,a[9]=t4,a[10]=t7,a[11]=t3,a[12]=t16,a[13]=t15,a[14]=t14,a[15]=t18,tmp=(C_word)a,a+=16,tmp);
if(C_truep((C_word)C_i_nequalp(t3,C_fix(0)))){
t20=(C_word)C_i_car(t2);
t21=t19;
f_33306(t21,(C_word)C_i_string_equal_p(t20,lf[827]));}
else{
t20=t19;
f_33306(t20,C_SCHEME_FALSE);}}}

/* k33304 in do509 in k33422 in k33278 in k33274 in k33270 in k33258 in k33438 in do503 in k7921 in k5905 in k5612 in k5609 in k5605 in k5314 in k5311 in k5308 in k5305 */
static void C_fcall f_33306(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word ab[24],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_33306,NULL,2,t0,t1);}
if(C_truep(t1)){
t2=((C_word*)t0)[15];
f_33296(2,t2,C_SCHEME_UNDEFINED);}
else{
t2=(*a=C_CLOSURE_TYPE|15,a[1]=(C_word)f_33309,a[2]=((C_word*)t0)[15],a[3]=((C_word*)t0)[2],a[4]=((C_word*)t0)[3],a[5]=((C_word*)t0)[4],a[6]=((C_word*)t0)[5],a[7]=((C_word*)t0)[6],a[8]=((C_word*)t0)[7],a[9]=((C_word*)t0)[8],a[10]=((C_word*)t0)[9],a[11]=((C_word*)t0)[10],a[12]=((C_word*)t0)[11],a[13]=((C_word*)t0)[12],a[14]=((C_word*)t0)[13],a[15]=((C_word*)t0)[14],tmp=(C_word)a,a+=16,tmp);
t3=(C_word)C_i_car(((C_word*)t0)[3]);
if(C_truep((C_word)C_i_string_equal_p(t3,lf[825]))){
t4=(C_word)C_a_i_minus(&a,2,((C_word*)((C_word*)t0)[14])[1],C_fix(1));
t5=C_mutate(((C_word *)((C_word*)t0)[14])+1,t4);
t6=t2;
f_33309(t6,t5);}
else{
t4=(C_word)C_i_car(((C_word*)t0)[3]);
if(C_truep((C_word)C_i_string_equal_p(t4,lf[826]))){
t5=(C_word)C_a_i_plus(&a,2,((C_word*)((C_word*)t0)[14])[1],C_fix(1));
t6=C_mutate(((C_word *)((C_word*)t0)[14])+1,t5);
t7=t2;
f_33309(t7,t6);}
else{
t5=t2;
f_33309(t5,C_SCHEME_UNDEFINED);}}}}

/* k33307 in k33304 in do509 in k33422 in k33278 in k33274 in k33270 in k33258 in k33438 in do503 in k7921 in k5905 in k5612 in k5609 in k5605 in k5314 in k5311 in k5308 in k5305 */
static void C_fcall f_33309(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[15],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_33309,NULL,2,t0,t1);}
t2=(C_word)C_i_list_ref(lf[822],((C_word*)((C_word*)t0)[15])[1]);
t3=C_mutate(((C_word *)((C_word*)t0)[14])+1,t2);
t4=(*a=C_CLOSURE_TYPE|14,a[1]=(C_word)f_33317,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],a[7]=((C_word*)t0)[7],a[8]=((C_word*)t0)[8],a[9]=((C_word*)t0)[9],a[10]=((C_word*)t0)[14],a[11]=((C_word*)t0)[10],a[12]=((C_word*)t0)[11],a[13]=((C_word*)t0)[12],a[14]=((C_word*)t0)[13],tmp=(C_word)a,a+=15,tmp);
t5=(C_word)C_i_car(((C_word*)t0)[4]);
C_trace("ChickenBridge.scm: 367  string-append");
t6=*((C_word*)lf[141]+1);
((C_proc4)C_retrieve_proc(t6))(4,t6,t4,t5,((C_word*)((C_word*)t0)[14])[1]);}

/* k33315 in k33307 in k33304 in do509 in k33422 in k33278 in k33274 in k33270 in k33258 in k33438 in do503 in k7921 in k5905 in k5612 in k5609 in k5605 in k5314 in k5311 in k5308 in k5305 */
static void C_ccall f_33317(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[28],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_33317,2,t0,t1);}
t2=C_mutate(((C_word *)((C_word*)t0)[14])+1,t1);
t3=(C_word)C_a_i_list(&a,5,((C_word*)((C_word*)t0)[14])[1],((C_word*)t0)[13],((C_word*)t0)[12],((C_word*)t0)[11],((C_word*)((C_word*)t0)[10])[1]);
t4=C_mutate(((C_word *)((C_word*)t0)[9])+1,t3);
t5=(*a=C_CLOSURE_TYPE|12,a[1]=(C_word)f_33324,a[2]=((C_word*)t0)[13],a[3]=((C_word*)t0)[2],a[4]=((C_word*)t0)[3],a[5]=((C_word*)t0)[4],a[6]=((C_word*)t0)[5],a[7]=((C_word*)t0)[6],a[8]=((C_word*)t0)[9],a[9]=((C_word*)t0)[10],a[10]=((C_word*)t0)[7],a[11]=((C_word*)t0)[8],a[12]=((C_word*)t0)[14],tmp=(C_word)a,a+=13,tmp);
C_trace("ChickenBridge.scm: 367  hash-table-set!");
t6=C_retrieve(lf[681]);
((C_proc5)C_retrieve_proc(t6))(5,t6,t5,C_retrieve2(lf[138],"*notes*"),((C_word*)((C_word*)t0)[14])[1],((C_word*)((C_word*)t0)[9])[1]);}

/* k33322 in k33315 in k33307 in k33304 in do509 in k33422 in k33278 in k33274 in k33270 in k33258 in k33438 in do503 in k7921 in k5905 in k5612 in k5609 in k5605 in k5314 in k5311 in k5308 in k5305 */
static void C_ccall f_33324(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[12],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_33324,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|11,a[1]=(C_word)f_33327,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],a[7]=((C_word*)t0)[8],a[8]=((C_word*)t0)[9],a[9]=((C_word*)t0)[10],a[10]=((C_word*)t0)[11],a[11]=((C_word*)t0)[12],tmp=(C_word)a,a+=12,tmp);
t3=(C_word)C_eqp(((C_word*)t0)[5],((C_word*)((C_word*)t0)[4])[1]);
if(C_truep(t3)){
C_trace("ChickenBridge.scm: 367  hash-table-set!");
t4=C_retrieve(lf[681]);
((C_proc5)C_retrieve_proc(t4))(5,t4,t2,C_retrieve2(lf[138],"*notes*"),((C_word*)t0)[2],((C_word*)((C_word*)t0)[8])[1]);}
else{
t4=t2;
f_33327(2,t4,C_SCHEME_UNDEFINED);}}

/* k33325 in k33322 in k33315 in k33307 in k33304 in do509 in k33422 in k33278 in k33274 in k33270 in k33258 in k33438 in do503 in k7921 in k5905 in k5612 in k5609 in k5605 in k5314 in k5311 in k5308 in k5305 */
static void C_ccall f_33327(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[12],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_33327,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|11,a[1]=(C_word)f_33331,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],a[7]=((C_word*)t0)[7],a[8]=((C_word*)t0)[8],a[9]=((C_word*)t0)[9],a[10]=((C_word*)t0)[10],a[11]=((C_word*)t0)[11],tmp=(C_word)a,a+=12,tmp);
t3=(C_word)C_i_car(((C_word*)t0)[4]);
C_trace("ChickenBridge.scm: 367  string-append");
t4=*((C_word*)lf[141]+1);
((C_proc5)C_retrieve_proc(t4))(5,t4,t2,t3,lf[824],((C_word*)((C_word*)t0)[8])[1]);}

/* k33329 in k33325 in k33322 in k33315 in k33307 in k33304 in do509 in k33422 in k33278 in k33274 in k33270 in k33258 in k33438 in do503 in k7921 in k5905 in k5612 in k5609 in k5605 in k5314 in k5311 in k5308 in k5305 */
static void C_ccall f_33331(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[26],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_33331,2,t0,t1);}
t2=C_mutate(((C_word *)((C_word*)t0)[11])+1,t1);
t3=(C_word)C_a_i_list(&a,5,((C_word*)((C_word*)t0)[11])[1],((C_word*)t0)[10],((C_word*)t0)[9],C_SCHEME_FALSE,((C_word*)((C_word*)t0)[8])[1]);
t4=C_mutate(((C_word *)((C_word*)t0)[7])+1,t3);
t5=(*a=C_CLOSURE_TYPE|10,a[1]=(C_word)f_33338,a[2]=((C_word*)t0)[10],a[3]=((C_word*)t0)[2],a[4]=((C_word*)t0)[3],a[5]=((C_word*)t0)[4],a[6]=((C_word*)t0)[7],a[7]=((C_word*)t0)[8],a[8]=((C_word*)t0)[5],a[9]=((C_word*)t0)[6],a[10]=((C_word*)t0)[11],tmp=(C_word)a,a+=11,tmp);
C_trace("ChickenBridge.scm: 367  hash-table-set!");
t6=C_retrieve(lf[681]);
((C_proc5)C_retrieve_proc(t6))(5,t6,t5,C_retrieve2(lf[138],"*notes*"),((C_word*)((C_word*)t0)[11])[1],((C_word*)((C_word*)t0)[7])[1]);}

/* k33336 in k33329 in k33325 in k33322 in k33315 in k33307 in k33304 in do509 in k33422 in k33278 in k33274 in k33270 in k33258 in k33438 in do503 in k7921 in k5905 in k5612 in k5609 in k5605 in k5314 in k5311 in k5308 in k5305 */
static void C_ccall f_33338(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[10],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_33338,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|9,a[1]=(C_word)f_33341,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],a[7]=((C_word*)t0)[8],a[8]=((C_word*)t0)[9],a[9]=((C_word*)t0)[10],tmp=(C_word)a,a+=10,tmp);
t3=(C_word)C_eqp(((C_word*)t0)[5],((C_word*)((C_word*)t0)[4])[1]);
if(C_truep(t3)){
C_trace("ChickenBridge.scm: 367  hash-table-set!");
t4=C_retrieve(lf[681]);
((C_proc5)C_retrieve_proc(t4))(5,t4,t2,C_retrieve2(lf[138],"*notes*"),((C_word*)t0)[2],((C_word*)((C_word*)t0)[6])[1]);}
else{
t4=t2;
f_33341(2,t4,C_SCHEME_UNDEFINED);}}

/* k33339 in k33336 in k33329 in k33325 in k33322 in k33315 in k33307 in k33304 in do509 in k33422 in k33278 in k33274 in k33270 in k33258 in k33438 in do503 in k7921 in k5905 in k5612 in k5609 in k5605 in k5314 in k5311 in k5308 in k5305 */
static void C_ccall f_33341(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[10],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_33341,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|9,a[1]=(C_word)f_33345,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],a[7]=((C_word*)t0)[7],a[8]=((C_word*)t0)[8],a[9]=((C_word*)t0)[9],tmp=(C_word)a,a+=10,tmp);
t3=(C_word)C_i_car(((C_word*)t0)[4]);
C_trace("ChickenBridge.scm: 367  string-append");
t4=*((C_word*)lf[141]+1);
((C_proc5)C_retrieve_proc(t4))(5,t4,t2,t3,lf[823],((C_word*)((C_word*)t0)[6])[1]);}

/* k33343 in k33339 in k33336 in k33329 in k33325 in k33322 in k33315 in k33307 in k33304 in do509 in k33422 in k33278 in k33274 in k33270 in k33258 in k33438 in do503 in k7921 in k5905 in k5612 in k5609 in k5605 in k5314 in k5311 in k5308 in k5305 */
static void C_ccall f_33345(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[22],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_33345,2,t0,t1);}
t2=C_mutate(((C_word *)((C_word*)t0)[9])+1,t1);
t3=(C_word)C_a_i_list(&a,5,((C_word*)((C_word*)t0)[9])[1],((C_word*)t0)[8],((C_word*)t0)[7],C_SCHEME_FALSE,((C_word*)((C_word*)t0)[6])[1]);
t4=C_mutate(((C_word *)((C_word*)t0)[5])+1,t3);
t5=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_33352,a[2]=((C_word*)t0)[5],a[3]=((C_word*)t0)[8],a[4]=((C_word*)t0)[2],a[5]=((C_word*)t0)[3],a[6]=((C_word*)t0)[4],tmp=(C_word)a,a+=7,tmp);
C_trace("ChickenBridge.scm: 367  hash-table-set!");
t6=C_retrieve(lf[681]);
((C_proc5)C_retrieve_proc(t6))(5,t6,t5,C_retrieve2(lf[138],"*notes*"),((C_word*)((C_word*)t0)[9])[1],((C_word*)((C_word*)t0)[5])[1]);}

/* k33350 in k33343 in k33339 in k33336 in k33329 in k33325 in k33322 in k33315 in k33307 in k33304 in do509 in k33422 in k33278 in k33274 in k33270 in k33258 in k33438 in do503 in k7921 in k5905 in k5612 in k5609 in k5605 in k5314 in k5311 in k5308 in k5305 */
static void C_ccall f_33352(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word *a;
t2=(C_word)C_eqp(((C_word*)t0)[6],((C_word*)((C_word*)t0)[5])[1]);
if(C_truep(t2)){
C_trace("ChickenBridge.scm: 367  hash-table-set!");
t3=C_retrieve(lf[681]);
((C_proc5)C_retrieve_proc(t3))(5,t3,((C_word*)t0)[4],C_retrieve2(lf[138],"*notes*"),((C_word*)t0)[3],((C_word*)((C_word*)t0)[2])[1]);}
else{
t3=((C_word*)t0)[4];
f_33296(2,t3,C_SCHEME_UNDEFINED);}}

/* k33294 in do509 in k33422 in k33278 in k33274 in k33270 in k33258 in k33438 in do503 in k7921 in k5905 in k5612 in k5609 in k5605 in k5314 in k5311 in k5308 in k5305 */
static void C_ccall f_33296(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word *a;
t2=(C_word)C_i_cdr(((C_word*)t0)[15]);
t3=((C_word*)((C_word*)t0)[14])[1];
f_33286(t3,((C_word*)t0)[13],t2,((C_word*)t0)[12],((C_word*)t0)[11],((C_word*)t0)[10],((C_word*)t0)[9],((C_word*)t0)[8],((C_word*)t0)[7],((C_word*)t0)[6],((C_word*)((C_word*)t0)[5])[1],((C_word*)((C_word*)t0)[4])[1],((C_word*)((C_word*)t0)[3])[1],((C_word*)((C_word*)t0)[2])[1]);}

/* k33247 in k33438 in do503 in k7921 in k5905 in k5612 in k5609 in k5605 in k5314 in k5311 in k5308 in k5305 */
static void C_ccall f_33249(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[4],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_33249,2,t0,t1);}
t2=(C_word)C_a_i_plus(&a,2,((C_word*)t0)[4],C_fix(1));
t3=((C_word*)((C_word*)t0)[3])[1];
f_33226(t3,((C_word*)t0)[2],t2);}

/* k33237 in do503 in k7921 in k5905 in k5612 in k5609 in k5605 in k5314 in k5311 in k5308 in k5305 */
static void C_ccall f_33239(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[3],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_33239,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_33242,a[2]=((C_word*)t0)[3],tmp=(C_word)a,a+=3,tmp);
C_trace("ChickenBridge.scm: 367  hash-table-set!");
t3=C_retrieve(lf[681]);
((C_proc5)C_retrieve_proc(t3))(5,t3,t2,C_retrieve2(lf[138],"*notes*"),C_fix(-1),((C_word*)t0)[2]);}

/* k33240 in k33237 in do503 in k7921 in k5905 in k5612 in k5609 in k5605 in k5314 in k5311 in k5308 in k5305 */
static void C_ccall f_33242(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
t2=((C_word*)t0)[2];
((C_proc2)(void*)(*((C_word*)t2+1)))(2,t2,C_SCHEME_TRUE);}

/* k7924 in k7921 in k5905 in k5612 in k5609 in k5605 in k5314 in k5311 in k5308 in k5305 */
static void C_ccall f_7926(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word t14;
C_word t15;
C_word t16;
C_word t17;
C_word t18;
C_word t19;
C_word t20;
C_word t21;
C_word t22;
C_word t23;
C_word t24;
C_word t25;
C_word t26;
C_word t27;
C_word t28;
C_word t29;
C_word t30;
C_word t31;
C_word t32;
C_word t33;
C_word t34;
C_word t35;
C_word t36;
C_word t37;
C_word t38;
C_word t39;
C_word t40;
C_word t41;
C_word t42;
C_word t43;
C_word t44;
C_word t45;
C_word t46;
C_word t47;
C_word t48;
C_word t49;
C_word t50;
C_word t51;
C_word t52;
C_word t53;
C_word t54;
C_word t55;
C_word t56;
C_word t57;
C_word t58;
C_word t59;
C_word t60;
C_word t61;
C_word t62;
C_word t63;
C_word t64;
C_word t65;
C_word t66;
C_word t67;
C_word t68;
C_word t69;
C_word t70;
C_word t71;
C_word t72;
C_word t73;
C_word t74;
C_word t75;
C_word t76;
C_word ab[219],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_7926,2,t0,t1);}
t2=C_mutate(&lf[139],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_7928,a[2]=((C_word)li84),tmp=(C_word)a,a+=3,tmp));
t3=C_mutate(&lf[143],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_8030,a[2]=((C_word)li87),tmp=(C_word)a,a+=3,tmp));
t4=C_mutate((C_word*)lf[151]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_8083,a[2]=((C_word)li89),tmp=(C_word)a,a+=3,tmp));
t5=C_mutate((C_word*)lf[153]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_8180,a[2]=((C_word)li91),tmp=(C_word)a,a+=3,tmp));
t6=C_mutate((C_word*)lf[155]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_8302,a[2]=((C_word)li93),tmp=(C_word)a,a+=3,tmp));
t7=C_mutate((C_word*)lf[157]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_8418,a[2]=((C_word)li94),tmp=(C_word)a,a+=3,tmp));
t8=C_mutate((C_word*)lf[158]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_8463,a[2]=((C_word)li98),tmp=(C_word)a,a+=3,tmp));
t9=C_mutate((C_word*)lf[161]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_8598,a[2]=((C_word)li102),tmp=(C_word)a,a+=3,tmp));
t10=C_mutate((C_word*)lf[163]+1,*((C_word*)lf[164]+1));
t11=C_mutate(&lf[165],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_8764,a[2]=((C_word)li103),tmp=(C_word)a,a+=3,tmp));
t12=C_mutate(&lf[167],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_8776,a[2]=((C_word)li104),tmp=(C_word)a,a+=3,tmp));
t13=C_mutate(&lf[169],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_8785,a[2]=((C_word)li105),tmp=(C_word)a,a+=3,tmp));
t14=C_mutate(&lf[170],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_8803,a[2]=((C_word)li106),tmp=(C_word)a,a+=3,tmp));
t15=C_mutate(&lf[171],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_8821,a[2]=((C_word)li107),tmp=(C_word)a,a+=3,tmp));
t16=C_mutate(&lf[172],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_8848,a[2]=((C_word)li108),tmp=(C_word)a,a+=3,tmp));
t17=C_mutate(&lf[173],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_8857,a[2]=((C_word)li109),tmp=(C_word)a,a+=3,tmp));
t18=C_mutate(&lf[174],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_8875,a[2]=((C_word)li110),tmp=(C_word)a,a+=3,tmp));
t19=C_mutate(&lf[175],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_8920,a[2]=((C_word)li111),tmp=(C_word)a,a+=3,tmp));
t20=C_mutate(&lf[177],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_8935,a[2]=((C_word)li112),tmp=(C_word)a,a+=3,tmp));
t21=C_mutate(&lf[178],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_8944,a[2]=((C_word)li113),tmp=(C_word)a,a+=3,tmp));
t22=C_mutate(&lf[179],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_8953,a[2]=((C_word)li114),tmp=(C_word)a,a+=3,tmp));
t23=C_mutate(&lf[180],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_8971,a[2]=((C_word)li115),tmp=(C_word)a,a+=3,tmp));
t24=C_mutate(&lf[181],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_8980,a[2]=((C_word)li116),tmp=(C_word)a,a+=3,tmp));
t25=C_mutate(&lf[182],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_8989,a[2]=((C_word)li117),tmp=(C_word)a,a+=3,tmp));
t26=C_mutate(&lf[183],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_9007,a[2]=((C_word)li118),tmp=(C_word)a,a+=3,tmp));
t27=C_mutate(&lf[184],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_9016,a[2]=((C_word)li119),tmp=(C_word)a,a+=3,tmp));
t28=C_mutate(&lf[185],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_9025,a[2]=((C_word)li120),tmp=(C_word)a,a+=3,tmp));
t29=C_mutate(&lf[186],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_9034,a[2]=((C_word)li121),tmp=(C_word)a,a+=3,tmp));
t30=C_mutate(&lf[187],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_9043,a[2]=((C_word)li122),tmp=(C_word)a,a+=3,tmp));
t31=C_mutate(&lf[188],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_9160,a[2]=((C_word)li123),tmp=(C_word)a,a+=3,tmp));
t32=C_mutate(&lf[189],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_9169,a[2]=((C_word)li124),tmp=(C_word)a,a+=3,tmp));
t33=C_mutate(&lf[190],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_9224,a[2]=((C_word)li125),tmp=(C_word)a,a+=3,tmp));
t34=C_mutate(&lf[194],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_9234,a[2]=((C_word)li127),tmp=(C_word)a,a+=3,tmp));
t35=C_mutate((C_word*)lf[202]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_9414,a[2]=((C_word)li128),tmp=(C_word)a,a+=3,tmp));
t36=C_mutate((C_word*)lf[204]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_9433,a[2]=((C_word)li129),tmp=(C_word)a,a+=3,tmp));
t37=C_mutate((C_word*)lf[206]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_9452,a[2]=((C_word)li132),tmp=(C_word)a,a+=3,tmp));
t38=C_mutate(&lf[207],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_9575,a[2]=((C_word)li135),tmp=(C_word)a,a+=3,tmp));
t39=C_mutate(&lf[208],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_9876,a[2]=((C_word)li136),tmp=(C_word)a,a+=3,tmp));
t40=C_mutate(&lf[201],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_9885,a[2]=((C_word)li137),tmp=(C_word)a,a+=3,tmp));
t41=C_mutate(&lf[209],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_9931,a[2]=((C_word)li139),tmp=(C_word)a,a+=3,tmp));
t42=C_mutate((C_word*)lf[213]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_10046,a[2]=((C_word)li141),tmp=(C_word)a,a+=3,tmp));
t43=C_mutate(&lf[215],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_10301,a[2]=((C_word)li142),tmp=(C_word)a,a+=3,tmp));
t44=C_mutate(&lf[218],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_10373,a[2]=((C_word)li143),tmp=(C_word)a,a+=3,tmp));
t45=C_mutate(&lf[220],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_10382,a[2]=((C_word)li144),tmp=(C_word)a,a+=3,tmp));
t46=C_mutate((C_word*)lf[221]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_10462,a[2]=((C_word)li146),tmp=(C_word)a,a+=3,tmp));
t47=C_mutate(&lf[222],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_10932,a[2]=((C_word)li147),tmp=(C_word)a,a+=3,tmp));
t48=C_mutate((C_word*)lf[226]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_11147,a[2]=((C_word)li149),tmp=(C_word)a,a+=3,tmp));
t49=C_mutate(&lf[227],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_11394,a[2]=((C_word)li150),tmp=(C_word)a,a+=3,tmp));
t50=C_mutate((C_word*)lf[228]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_11430,a[2]=((C_word)li152),tmp=(C_word)a,a+=3,tmp));
t51=C_mutate(&lf[229],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_11693,a[2]=((C_word)li154),tmp=(C_word)a,a+=3,tmp));
t52=C_mutate((C_word*)lf[230]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_11769,a[2]=((C_word)li156),tmp=(C_word)a,a+=3,tmp));
t53=C_mutate(&lf[231],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_12243,a[2]=((C_word)li159),tmp=(C_word)a,a+=3,tmp));
t54=C_mutate(&lf[233],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_12465,a[2]=((C_word)li160),tmp=(C_word)a,a+=3,tmp));
t55=C_mutate(&lf[235],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_12474,a[2]=((C_word)li161),tmp=(C_word)a,a+=3,tmp));
t56=C_mutate(&lf[236],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_12483,a[2]=((C_word)li162),tmp=(C_word)a,a+=3,tmp));
t57=C_mutate(&lf[237],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_12501,a[2]=((C_word)li163),tmp=(C_word)a,a+=3,tmp));
t58=C_mutate(&lf[238],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_12519,a[2]=((C_word)li164),tmp=(C_word)a,a+=3,tmp));
t59=C_mutate(&lf[239],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_12537,a[2]=((C_word)li165),tmp=(C_word)a,a+=3,tmp));
t60=C_mutate(&lf[240],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_12546,a[2]=((C_word)li166),tmp=(C_word)a,a+=3,tmp));
t61=C_mutate(&lf[241],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_12555,a[2]=((C_word)li167),tmp=(C_word)a,a+=3,tmp));
t62=C_mutate((C_word*)lf[242]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_12638,a[2]=((C_word)li172),tmp=(C_word)a,a+=3,tmp));
t63=C_mutate(&lf[243],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_13405,a[2]=((C_word)li175),tmp=(C_word)a,a+=3,tmp));
t64=C_mutate(&lf[244],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_13517,a[2]=((C_word)li180),tmp=(C_word)a,a+=3,tmp));
t65=C_mutate((C_word*)lf[249]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_13950,a[2]=((C_word)li185),tmp=(C_word)a,a+=3,tmp));
t66=C_mutate(&lf[250],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_14437,a[2]=((C_word)li192),tmp=(C_word)a,a+=3,tmp));
t67=C_mutate(&lf[259],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_14777,a[2]=((C_word)li193),tmp=(C_word)a,a+=3,tmp));
t68=C_mutate((C_word*)lf[261]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_14840,a[2]=((C_word)li198),tmp=(C_word)a,a+=3,tmp));
t69=C_mutate(&lf[262],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_15358,a[2]=((C_word)li200),tmp=(C_word)a,a+=3,tmp));
t70=C_mutate(&lf[268],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_15452,a[2]=((C_word)li201),tmp=(C_word)a,a+=3,tmp));
t71=C_mutate(&lf[270],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_15473,a[2]=((C_word)li202),tmp=(C_word)a,a+=3,tmp));
t72=C_mutate(&lf[271],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_15491,a[2]=((C_word)li203),tmp=(C_word)a,a+=3,tmp));
t73=C_mutate(&lf[272],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_15509,a[2]=((C_word)li204),tmp=(C_word)a,a+=3,tmp));
t74=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_15519,a[2]=((C_word*)t0)[2],tmp=(C_word)a,a+=3,tmp);
t75=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_33212,a[2]=((C_word)li529),tmp=(C_word)a,a+=3,tmp);
C_trace("ChickenBridge.scm: 369  ##sys#register-record-printer");
t76=C_retrieve(lf[804]);
((C_proc4)C_retrieve_proc(t76))(4,t76,t74,lf[269],t75);}

/* a33211 in k7924 in k7921 in k5905 in k5612 in k5609 in k5605 in k5314 in k5311 in k5308 in k5305 */
static void C_ccall f_33212(C_word c,C_word t0,C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word ab[5],*a=ab;
if(c!=4) C_bad_argc_2(c,4,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr4,(void*)f_33212,4,t0,t1,t2,t3);}
t4=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_33220,a[2]=t2,a[3]=t3,a[4]=t1,tmp=(C_word)a,a+=5,tmp);
C_trace("ChickenBridge.scm: 369  token-type");
f_15473(t4,t2);}

/* k33218 in a33211 in k7924 in k7921 in k5905 in k5612 in k5609 in k5605 in k5314 in k5311 in k5308 in k5305 */
static void C_ccall f_33220(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[5],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_33220,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_33224,a[2]=t1,a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],tmp=(C_word)a,a+=5,tmp);
C_trace("ChickenBridge.scm: 369  token-string");
f_15491(t2,((C_word*)t0)[2]);}

/* k33222 in k33218 in a33211 in k7924 in k7921 in k5905 in k5612 in k5609 in k5605 in k5314 in k5311 in k5308 in k5305 */
static void C_ccall f_33224(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 369  fprintf");
t2=C_retrieve(lf[801]);
((C_proc6)C_retrieve_proc(t2))(6,t2,((C_word*)t0)[4],((C_word*)t0)[3],lf[815],((C_word*)t0)[2],t1);}

/* k15517 in k7924 in k7921 in k5905 in k5612 in k5609 in k5605 in k5314 in k5311 in k5308 in k5305 */
static void C_ccall f_15519(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[12],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_15519,2,t0,t1);}
t2=C_mutate(&lf[273],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_15521,a[2]=((C_word)li205),tmp=(C_word)a,a+=3,tmp));
t3=C_mutate(&lf[275],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_15550,a[2]=((C_word)li206),tmp=(C_word)a,a+=3,tmp));
t4=C_mutate(&lf[276],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_15562,a[2]=((C_word)li207),tmp=(C_word)a,a+=3,tmp));
t5=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_15570,a[2]=((C_word*)t0)[2],tmp=(C_word)a,a+=3,tmp);
C_trace("ChickenBridge.scm: 369  make-hash-table");
t6=C_retrieve(lf[813]);
((C_proc3)C_retrieve_proc(t6))(3,t6,t5,*((C_word*)lf[814]+1));}

/* k15568 in k15517 in k7924 in k7921 in k5905 in k5612 in k5609 in k5605 in k5314 in k5311 in k5308 in k5305 */
static void C_ccall f_15570(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word ab[12],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_15570,2,t0,t1);}
t2=C_mutate(&lf[277],t1);
t3=C_mutate(&lf[278],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_15572,a[2]=((C_word)li208),tmp=(C_word)a,a+=3,tmp));
t4=C_mutate(&lf[280],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_15593,a[2]=((C_word)li209),tmp=(C_word)a,a+=3,tmp));
t5=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_15675,a[2]=((C_word*)t0)[2],tmp=(C_word)a,a+=3,tmp);
t6=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_33202,a[2]=((C_word)li528),tmp=(C_word)a,a+=3,tmp);
C_trace("ChickenBridge.scm: 369  ##sys#register-record-printer");
t7=C_retrieve(lf[804]);
((C_proc4)C_retrieve_proc(t7))(4,t7,t5,lf[279],t6);}

/* a33201 in k15568 in k15517 in k7924 in k7921 in k5905 in k5612 in k5609 in k5605 in k5314 in k5311 in k5308 in k5305 */
static void C_ccall f_33202(C_word c,C_word t0,C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word ab[4],*a=ab;
if(c!=4) C_bad_argc_2(c,4,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr4,(void*)f_33202,4,t0,t1,t2,t3);}
t4=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_33210,a[2]=t3,a[3]=t1,tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 369  rule-name");
f_15593(t4,t2);}

/* k33208 in a33201 in k15568 in k15517 in k7924 in k7921 in k5905 in k5612 in k5609 in k5605 in k5314 in k5311 in k5308 in k5305 */
static void C_ccall f_33210(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 369  fprintf");
t2=C_retrieve(lf[801]);
((C_proc5)C_retrieve_proc(t2))(5,t2,((C_word*)t0)[3],((C_word*)t0)[2],lf[812],t1);}

/* k15673 in k15568 in k15517 in k7924 in k7921 in k5905 in k5612 in k5609 in k5605 in k5314 in k5311 in k5308 in k5305 */
static void C_ccall f_15675(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[6],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_15675,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_15678,a[2]=((C_word*)t0)[2],tmp=(C_word)a,a+=3,tmp);
t3=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_33099,a[2]=((C_word)li527),tmp=(C_word)a,a+=3,tmp);
C_trace("ChickenBridge.scm: 369  ##sys#register-macro");
t4=C_retrieve(lf[679]);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[811],t3);}

/* a33098 in k15673 in k15568 in k15517 in k7924 in k7921 in k5905 in k5612 in k5609 in k5605 in k5314 in k5311 in k5308 in k5305 */
static void C_ccall f_33099(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,...){
C_word tmp;
C_word t4;
va_list v;
C_word *a,c2=c;
C_save_rest(t3,c2,4);
if(c<4) C_bad_min_argc_2(c,4,t0);
C_check_for_interrupt;
if(!C_demand(c*C_SIZEOF_PAIR+22)){
C_save_and_reclaim((void*)tr4r,(void*)f_33099r,4,t0,t1,t2,t3);}
else{
a=C_alloc((c-4)*3);
t4=C_restore_rest(a,C_rest_count(0));
f_33099r(t0,t1,t2,t3,t4);}}

static void C_ccall f_33099r(C_word t0,C_word t1,C_word t2,C_word t3,C_word t4){
C_word tmp;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word *a=C_alloc(22);
t5=C_SCHEME_UNDEFINED;
t6=(*a=C_VECTOR_TYPE|1,a[1]=t5,tmp=(C_word)a,a+=2,tmp);
t7=C_set_block_item(t6,0,(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_33102,a[2]=t6,a[3]=((C_word)li526),tmp=(C_word)a,a+=4,tmp));
t8=(C_word)C_a_i_list(&a,2,lf[808],t2);
t9=(C_word)C_a_i_list(&a,1,t8);
t10=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_33162,a[2]=t3,a[3]=t6,a[4]=t9,a[5]=t1,a[6]=t4,tmp=(C_word)a,a+=7,tmp);
C_trace("ChickenBridge.scm: 369  symbol->string");
t11=*((C_word*)lf[25]+1);
((C_proc3)C_retrieve_proc(t11))(3,t11,t10,t2);}

/* k33160 in a33098 in k15673 in k15568 in k15517 in k7924 in k7921 in k5905 in k5612 in k5609 in k5605 in k5314 in k5311 in k5308 in k5305 */
static void C_ccall f_33162(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[6],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_33162,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_33166,a[2]=((C_word*)t0)[4],a[3]=((C_word*)t0)[5],a[4]=t1,a[5]=((C_word*)t0)[6],tmp=(C_word)a,a+=6,tmp);
C_trace("ChickenBridge.scm: 369  ppat");
t3=((C_word*)((C_word*)t0)[3])[1];
f_33102(t3,t2,((C_word*)t0)[2]);}

/* k33164 in k33160 in a33098 in k15673 in k15568 in k15517 in k7924 in k7921 in k5905 in k5612 in k5609 in k5605 in k5314 in k5311 in k5308 in k5305 */
static void C_ccall f_33166(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word ab[8],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_33166,2,t0,t1);}
t2=(C_word)C_i_nullp(((C_word*)t0)[5]);
t3=(C_truep(t2)?C_SCHEME_FALSE:(C_word)C_i_car(((C_word*)t0)[5]));
t4=(C_word)C_i_nullp(((C_word*)t0)[5]);
t5=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_33180,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=t3,a[5]=t1,a[6]=((C_word*)t0)[4],a[7]=((C_word*)t0)[5],tmp=(C_word)a,a+=8,tmp);
if(C_truep(t4)){
t6=t5;
f_33180(t6,t4);}
else{
t6=(C_word)C_i_cdr(((C_word*)t0)[5]);
t7=t5;
f_33180(t7,(C_word)C_i_nullp(t6));}}

/* k33178 in k33164 in k33160 in a33098 in k15673 in k15568 in k15517 in k7924 in k7921 in k5905 in k5612 in k5609 in k5605 in k5314 in k5311 in k5308 in k5305 */
static void C_fcall f_33180(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[39],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_33180,NULL,2,t0,t1);}
t2=(C_truep(t1)?C_SCHEME_FALSE:(C_word)C_i_cadr(((C_word*)t0)[7]));
t3=(C_word)C_a_i_list(&a,6,lf[809],((C_word*)t0)[6],lf[808],((C_word*)t0)[5],((C_word*)t0)[4],t2);
t4=(C_word)C_a_i_list(&a,4,lf[681],lf[810],lf[808],t3);
t5=((C_word*)t0)[3];
((C_proc2)(void*)(*((C_word*)t5+1)))(2,t5,(C_word)C_a_i_list(&a,3,lf[1],((C_word*)t0)[2],t4));}

/* ppat in a33098 in k15673 in k15568 in k15517 in k7924 in k7921 in k5905 in k5612 in k5609 in k5605 in k5314 in k5311 in k5308 in k5305 */
static void C_fcall f_33102(C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word *a;
loop:
a=C_alloc(11);
C_check_for_interrupt;
if(!C_stack_probe(a)){
C_save_and_reclaim((void*)trf_33102,NULL,3,t0,t1,t2);}
if(C_truep((C_word)C_i_nullp(t2))){
t3=t1;
((C_proc2)(void*)(*((C_word*)t3+1)))(2,t3,lf[806]);}
else{
if(C_truep((C_word)C_i_pairp(t2))){
t3=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_33122,a[2]=((C_word*)t0)[2],a[3]=t2,a[4]=t1,tmp=(C_word)a,a+=5,tmp);
t4=(C_word)C_i_car(t2);
C_trace("ChickenBridge.scm: 369  ppat");
t7=t3;
t8=t4;
t1=t7;
t2=t8;
goto loop;}
else{
t3=(C_word)C_i_member(t2,lf[807]);
t4=t1;
((C_proc2)(void*)(*((C_word*)t4+1)))(2,t4,(C_truep(t3)?(C_word)C_a_i_list(&a,2,lf[465],t2):t2));}}}

/* k33120 in ppat in a33098 in k15673 in k15568 in k15517 in k7924 in k7921 in k5905 in k5612 in k5609 in k5605 in k5314 in k5311 in k5308 in k5305 */
static void C_ccall f_33122(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[4],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_33122,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_33126,a[2]=t1,a[3]=((C_word*)t0)[4],tmp=(C_word)a,a+=4,tmp);
t3=(C_word)C_i_cdr(((C_word*)t0)[3]);
C_trace("ChickenBridge.scm: 369  ppat");
t4=((C_word*)((C_word*)t0)[2])[1];
f_33102(t4,t2,t3);}

/* k33124 in k33120 in ppat in a33098 in k15673 in k15568 in k15517 in k7924 in k7921 in k5905 in k5612 in k5609 in k5605 in k5314 in k5311 in k5308 in k5305 */
static void C_ccall f_33126(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_33126,2,t0,t1);}
t2=((C_word*)t0)[3];
((C_proc2)(void*)(*((C_word*)t2+1)))(2,t2,(C_word)C_a_i_list(&a,3,lf[718],((C_word*)t0)[2],t1));}

/* k15676 in k15673 in k15568 in k15517 in k7924 in k7921 in k5905 in k5612 in k5609 in k5605 in k5314 in k5311 in k5308 in k5305 */
static void C_ccall f_15678(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word t14;
C_word ab[36],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_15678,2,t0,t1);}
t2=C_mutate(&lf[281],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_15680,a[2]=((C_word)li210),tmp=(C_word)a,a+=3,tmp));
t3=C_mutate(&lf[185],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_15701,a[2]=((C_word)li211),tmp=(C_word)a,a+=3,tmp));
t4=C_mutate(&lf[283],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_15704,a[2]=((C_word)li212),tmp=(C_word)a,a+=3,tmp));
t5=C_mutate(&lf[284],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_15716,a[2]=((C_word)li213),tmp=(C_word)a,a+=3,tmp));
t6=C_mutate(&lf[285],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_15722,a[2]=((C_word)li214),tmp=(C_word)a,a+=3,tmp));
t7=C_mutate(&lf[286],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_15732,a[2]=((C_word)li215),tmp=(C_word)a,a+=3,tmp));
t8=C_mutate(&lf[287],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_15790,a[2]=((C_word)li216),tmp=(C_word)a,a+=3,tmp));
t9=C_mutate(&lf[288],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_15822,a[2]=((C_word)li217),tmp=(C_word)a,a+=3,tmp));
t10=C_mutate(&lf[290],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_15843,a[2]=((C_word)li218),tmp=(C_word)a,a+=3,tmp));
t11=C_mutate(&lf[291],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_15861,a[2]=((C_word)li219),tmp=(C_word)a,a+=3,tmp));
t12=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_15871,a[2]=((C_word*)t0)[2],tmp=(C_word)a,a+=3,tmp);
t13=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_33085,a[2]=((C_word)li525),tmp=(C_word)a,a+=3,tmp);
C_trace("ChickenBridge.scm: 369  ##sys#register-record-printer");
t14=C_retrieve(lf[804]);
((C_proc4)C_retrieve_proc(t14))(4,t14,t12,lf[289],t13);}

/* a33084 in k15676 in k15673 in k15568 in k15517 in k7924 in k7921 in k5905 in k5612 in k5609 in k5605 in k5314 in k5311 in k5308 in k5305 */
static void C_ccall f_33085(C_word c,C_word t0,C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word ab[5],*a=ab;
if(c!=4) C_bad_argc_2(c,4,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr4,(void*)f_33085,4,t0,t1,t2,t3);}
t4=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_33093,a[2]=t2,a[3]=t3,a[4]=t1,tmp=(C_word)a,a+=5,tmp);
C_trace("ChickenBridge.scm: 369  parse-error-string");
f_15843(t4,t2);}

/* k33091 in a33084 in k15676 in k15673 in k15568 in k15517 in k7924 in k7921 in k5905 in k5612 in k5609 in k5605 in k5314 in k5311 in k5308 in k5305 */
static void C_ccall f_33093(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[5],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_33093,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_33097,a[2]=t1,a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],tmp=(C_word)a,a+=5,tmp);
C_trace("ChickenBridge.scm: 369  parse-error-position");
f_15861(t2,((C_word*)t0)[2]);}

/* k33095 in k33091 in a33084 in k15676 in k15673 in k15568 in k15517 in k7924 in k7921 in k5905 in k5612 in k5609 in k5605 in k5314 in k5311 in k5308 in k5305 */
static void C_ccall f_33097(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 369  fprintf");
t2=C_retrieve(lf[801]);
((C_proc6)C_retrieve_proc(t2))(6,t2,((C_word*)t0)[4],((C_word*)t0)[3],lf[805],((C_word*)t0)[2],t1);}

/* k15869 in k15676 in k15673 in k15568 in k15517 in k7924 in k7921 in k5905 in k5612 in k5609 in k5605 in k5314 in k5311 in k5308 in k5305 */
static void C_ccall f_15871(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word ab[21],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_15871,2,t0,t1);}
t2=C_mutate(&lf[292],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_15873,a[2]=((C_word)li220),tmp=(C_word)a,a+=3,tmp));
t3=C_mutate(&lf[294],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_15879,a[2]=((C_word)li221),tmp=(C_word)a,a+=3,tmp));
t4=C_mutate(&lf[295],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_15894,a[2]=((C_word)li222),tmp=(C_word)a,a+=3,tmp));
t5=C_mutate(&lf[296],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_15912,a[2]=((C_word)li223),tmp=(C_word)a,a+=3,tmp));
t6=C_mutate(&lf[297],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_15930,a[2]=((C_word)li224),tmp=(C_word)a,a+=3,tmp));
t7=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_15940,a[2]=((C_word*)t0)[2],tmp=(C_word)a,a+=3,tmp);
t8=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_33059,a[2]=((C_word)li524),tmp=(C_word)a,a+=3,tmp);
C_trace("ChickenBridge.scm: 369  ##sys#register-record-printer");
t9=C_retrieve(lf[804]);
((C_proc4)C_retrieve_proc(t9))(4,t9,t7,lf[293],t8);}

/* a33058 in k15869 in k15676 in k15673 in k15568 in k15517 in k7924 in k7921 in k5905 in k5612 in k5609 in k5605 in k5314 in k5311 in k5308 in k5305 */
static void C_ccall f_33059(C_word c,C_word t0,C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word ab[4],*a=ab;
if(c!=4) C_bad_argc_2(c,4,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr4,(void*)f_33059,4,t0,t1,t2,t3);}
t4=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_33063,a[2]=t3,a[3]=t1,tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 369  parse-unit-type");
f_15894(t4,t2);}

/* k33061 in a33058 in k15869 in k15676 in k15673 in k15568 in k15517 in k7924 in k7921 in k5905 in k5612 in k5609 in k5605 in k5314 in k5311 in k5308 in k5305 */
static void C_ccall f_33063(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[5],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_33063,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_33069,a[2]=t1,a[3]=((C_word*)t0)[2],a[4]=((C_word*)t0)[3],tmp=(C_word)a,a+=5,tmp);
C_trace("ChickenBridge.scm: 369  SalRuleType?");
f_17152(t2,t1);}

/* k33067 in k33061 in a33058 in k15869 in k15676 in k15673 in k15568 in k15517 in k7924 in k7921 in k5905 in k5612 in k5609 in k5605 in k5314 in k5311 in k5308 in k5305 */
static void C_ccall f_33069(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_33069,2,t0,t1);}
if(C_truep(t1)){
t2=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_33076,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],tmp=(C_word)a,a+=4,tmp);
t3=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_33080,a[2]=t2,tmp=(C_word)a,a+=3,tmp);
C_trace("ChickenBridge.scm: 369  get-rule");
f_15680(t3,((C_word*)t0)[2],C_SCHEME_END_OF_LIST);}
else{
C_trace("ChickenBridge.scm: 369  fprintf");
t2=C_retrieve(lf[801]);
((C_proc5)C_retrieve_proc(t2))(5,t2,((C_word*)t0)[4],((C_word*)t0)[3],lf[803],((C_word*)t0)[2]);}}

/* k33078 in k33067 in k33061 in a33058 in k15869 in k15676 in k15673 in k15568 in k15517 in k7924 in k7921 in k5905 in k5612 in k5609 in k5605 in k5314 in k5311 in k5308 in k5305 */
static void C_ccall f_33080(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 369  rule-name");
f_15593(((C_word*)t0)[2],t1);}

/* k33074 in k33067 in k33061 in a33058 in k15869 in k15676 in k15673 in k15568 in k15517 in k7924 in k7921 in k5905 in k5612 in k5609 in k5605 in k5314 in k5311 in k5308 in k5305 */
static void C_ccall f_33076(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 369  fprintf");
t2=C_retrieve(lf[801]);
((C_proc5)C_retrieve_proc(t2))(5,t2,((C_word*)t0)[3],((C_word*)t0)[2],lf[802],t1);}

/* k15938 in k15869 in k15676 in k15673 in k15568 in k15517 in k7924 in k7921 in k5905 in k5612 in k5609 in k5605 in k5314 in k5311 in k5308 in k5305 */
static void C_ccall f_15940(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word t14;
C_word t15;
C_word t16;
C_word t17;
C_word t18;
C_word t19;
C_word t20;
C_word t21;
C_word t22;
C_word t23;
C_word ab[60],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_15940,2,t0,t1);}
t2=C_mutate(&lf[298],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_15942,a[2]=((C_word)li225),tmp=(C_word)a,a+=3,tmp));
t3=C_mutate(&lf[300],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_15958,a[2]=((C_word)li226),tmp=(C_word)a,a+=3,tmp));
t4=C_mutate(&lf[302],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_15990,a[2]=((C_word)li227),tmp=(C_word)a,a+=3,tmp));
t5=C_mutate(&lf[303],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_16002,a[2]=((C_word)li228),tmp=(C_word)a,a+=3,tmp));
t6=C_mutate(&lf[304],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_16012,a[2]=((C_word)li229),tmp=(C_word)a,a+=3,tmp));
t7=C_mutate(&lf[306],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_16030,a[2]=((C_word)li230),tmp=(C_word)a,a+=3,tmp));
t8=C_mutate(&lf[316],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_16063,a[2]=((C_word)li231),tmp=(C_word)a,a+=3,tmp));
t9=C_mutate(&lf[319],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_16271,a[2]=((C_word)li233),tmp=(C_word)a,a+=3,tmp));
t10=C_mutate(&lf[320],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_16279,a[2]=((C_word)li236),tmp=(C_word)a,a+=3,tmp));
t11=lf[321]=C_SCHEME_FALSE;;
t12=C_mutate(&lf[322],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_16383,a[2]=((C_word)li250),tmp=(C_word)a,a+=3,tmp));
t13=C_mutate(&lf[299],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_17002,a[2]=((C_word)li251),tmp=(C_word)a,a+=3,tmp));
t14=C_mutate(&lf[315],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_17050,a[2]=((C_word)li252),tmp=(C_word)a,a+=3,tmp));
t15=C_mutate(&lf[318],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_17152,a[2]=((C_word)li253),tmp=(C_word)a,a+=3,tmp));
t16=C_mutate(&lf[301],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_17164,a[2]=((C_word)li254),tmp=(C_word)a,a+=3,tmp));
t17=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_17185,a[2]=((C_word*)t0)[2],tmp=(C_word)a,a+=3,tmp);
t18=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_33037,a[2]=t17,tmp=(C_word)a,a+=3,tmp);
t19=(C_word)C_a_i_cons(&a,2,C_fix(3072),C_SCHEME_END_OF_LIST);
t20=(C_word)C_a_i_cons(&a,2,C_fix(3328),t19);
t21=(C_word)C_a_i_cons(&a,2,C_fix(2816),t20);
t22=(C_word)C_a_i_cons(&a,2,lf[311],t21);
C_trace("ChickenBridge.scm: 369  make-rule");
f_15572(t18,lf[800],C_fix(25856),t22,C_SCHEME_FALSE,C_SCHEME_FALSE);}

/* k33035 in k15938 in k15869 in k15676 in k15673 in k15568 in k15517 in k7924 in k7921 in k5905 in k5612 in k5609 in k5605 in k5314 in k5311 in k5308 in k5305 */
static void C_ccall f_33037(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 369  hash-table-set!");
t2=C_retrieve(lf[681]);
((C_proc5)C_retrieve_proc(t2))(5,t2,((C_word*)t0)[2],C_retrieve2(lf[277],"*rules*"),C_fix(25856),t1);}

/* k17183 in k15938 in k15869 in k15676 in k15673 in k15568 in k15517 in k7924 in k7921 in k5905 in k5612 in k5609 in k5605 in k5314 in k5311 in k5308 in k5305 */
static void C_ccall f_17185(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word ab[15],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_17185,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_17188,a[2]=((C_word*)t0)[2],tmp=(C_word)a,a+=3,tmp);
t3=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_33017,a[2]=t2,tmp=(C_word)a,a+=3,tmp);
t4=(C_word)C_a_i_cons(&a,2,C_fix(4608),C_SCHEME_END_OF_LIST);
t5=(C_word)C_a_i_cons(&a,2,C_fix(4352),t4);
t6=(C_word)C_a_i_cons(&a,2,lf[311],t5);
C_trace("ChickenBridge.scm: 369  make-rule");
f_15572(t3,lf[799],C_fix(26112),t6,C_SCHEME_FALSE,C_SCHEME_FALSE);}

/* k33015 in k17183 in k15938 in k15869 in k15676 in k15673 in k15568 in k15517 in k7924 in k7921 in k5905 in k5612 in k5609 in k5605 in k5314 in k5311 in k5308 in k5305 */
static void C_ccall f_33017(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 369  hash-table-set!");
t2=C_retrieve(lf[681]);
((C_proc5)C_retrieve_proc(t2))(5,t2,((C_word*)t0)[2],C_retrieve2(lf[277],"*rules*"),C_fix(26112),t1);}

/* k17186 in k17183 in k15938 in k15869 in k15676 in k15673 in k15568 in k15517 in k7924 in k7921 in k5905 in k5612 in k5609 in k5605 in k5314 in k5311 in k5308 in k5305 */
static void C_ccall f_17188(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word ab[30],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_17188,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_17191,a[2]=((C_word*)t0)[2],tmp=(C_word)a,a+=3,tmp);
t3=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_32977,a[2]=t2,tmp=(C_word)a,a+=3,tmp);
t4=(C_word)C_a_i_cons(&a,2,C_fix(4608),C_SCHEME_END_OF_LIST);
t5=(C_word)C_a_i_cons(&a,2,C_fix(4352),t4);
t6=(C_word)C_a_i_cons(&a,2,C_fix(25088),t5);
t7=(C_word)C_a_i_cons(&a,2,C_fix(3840),t6);
t8=(C_word)C_a_i_cons(&a,2,C_fix(3072),t7);
t9=(C_word)C_a_i_cons(&a,2,C_fix(3328),t8);
t10=(C_word)C_a_i_cons(&a,2,C_fix(2816),t9);
t11=(C_word)C_a_i_cons(&a,2,lf[311],t10);
C_trace("ChickenBridge.scm: 369  make-rule");
f_15572(t3,lf[798],C_fix(26368),t11,C_SCHEME_FALSE,C_SCHEME_FALSE);}

/* k32975 in k17186 in k17183 in k15938 in k15869 in k15676 in k15673 in k15568 in k15517 in k7924 in k7921 in k5905 in k5612 in k5609 in k5605 in k5314 in k5311 in k5308 in k5305 */
static void C_ccall f_32977(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 369  hash-table-set!");
t2=C_retrieve(lf[681]);
((C_proc5)C_retrieve_proc(t2))(5,t2,((C_word*)t0)[2],C_retrieve2(lf[277],"*rules*"),C_fix(26368),t1);}

/* k17189 in k17186 in k17183 in k15938 in k15869 in k15676 in k15673 in k15568 in k15517 in k7924 in k7921 in k5905 in k5612 in k5609 in k5605 in k5314 in k5311 in k5308 in k5305 */
static void C_ccall f_17191(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word ab[30],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_17191,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_17194,a[2]=((C_word*)t0)[2],tmp=(C_word)a,a+=3,tmp);
t3=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_32867,a[2]=t2,tmp=(C_word)a,a+=3,tmp);
t4=(C_word)C_a_i_cons(&a,2,C_fix(26880),C_SCHEME_END_OF_LIST);
t5=(C_word)C_a_i_cons(&a,2,lf[95],t4);
t6=(C_word)C_a_i_cons(&a,2,C_fix(1280),C_SCHEME_END_OF_LIST);
t7=(C_word)C_a_i_cons(&a,2,t5,t6);
t8=(C_word)C_a_i_cons(&a,2,C_fix(1024),t7);
t9=(C_word)C_a_i_cons(&a,2,lf[310],t8);
t10=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_32873,a[2]=((C_word)li522),tmp=(C_word)a,a+=3,tmp);
t11=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_32883,a[2]=((C_word)li523),tmp=(C_word)a,a+=3,tmp);
C_trace("ChickenBridge.scm: 369  make-rule");
f_15572(t3,lf[797],C_fix(26624),t9,t10,t11);}

/* a32882 in k17189 in k17186 in k17183 in k15938 in k15869 in k15676 in k15673 in k15568 in k15517 in k7924 in k7921 in k5905 in k5612 in k5609 in k5605 in k5314 in k5311 in k5308 in k5305 */
static void C_ccall f_32883(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4){
C_word tmp;
C_word t5;
C_word t6;
C_word ab[6],*a=ab;
if(c!=5) C_bad_argc_2(c,5,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr5,(void*)f_32883,5,t0,t1,t2,t3,t4);}
t5=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_32887,a[2]=t2,a[3]=t4,a[4]=t3,a[5]=t1,tmp=(C_word)a,a+=6,tmp);
C_trace("ChickenBridge.scm: 369  get-emit-info");
f_15990(t5,lf[791],t3);}

/* k32885 in a32882 in k17189 in k17186 in k17183 in k15938 in k15869 in k15676 in k15673 in k15568 in k15517 in k7924 in k7921 in k5905 in k5612 in k5609 in k5605 in k5314 in k5311 in k5308 in k5305 */
static void C_ccall f_32887(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[6],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_32887,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_32890,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=t1,tmp=(C_word)a,a+=6,tmp);
C_trace("ChickenBridge.scm: 369  parse-unit-parsed");
f_15912(t2,((C_word*)t0)[2]);}

/* k32888 in k32885 in a32882 in k17189 in k17186 in k17183 in k15938 in k15869 in k15676 in k15673 in k15568 in k15517 in k7924 in k7921 in k5905 in k5612 in k5609 in k5605 in k5314 in k5311 in k5308 in k5305 */
static void C_ccall f_32890(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_32890,2,t0,t1);}
t2=((C_word*)t0)[5];
if(C_truep(t2)){
C_trace("ChickenBridge.scm: 369  emit");
f_16030(((C_word*)t0)[4],t1,((C_word*)t0)[3],((C_word*)t0)[2]);}
else{
if(C_truep((C_word)C_i_nullp(t1))){
t3=((C_word*)t0)[4];
((C_proc2)(void*)(*((C_word*)t3+1)))(2,t3,(C_word)C_a_i_list(&a,1,lf[515]));}
else{
t3=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_32908,a[2]=((C_word*)t0)[2],a[3]=t1,a[4]=((C_word*)t0)[3],a[5]=((C_word*)t0)[4],tmp=(C_word)a,a+=6,tmp);
C_trace("ChickenBridge.scm: 369  add-emit-info");
f_16002(t3,lf[791],C_SCHEME_TRUE,((C_word*)t0)[3]);}}}

/* k32906 in k32888 in k32885 in a32882 in k17189 in k17186 in k17183 in k15938 in k15869 in k15676 in k15673 in k15568 in k15517 in k7924 in k7921 in k5905 in k5612 in k5609 in k5605 in k5314 in k5311 in k5308 in k5305 */
static void C_ccall f_32908(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[5],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_32908,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_32911,a[2]=t1,a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],tmp=(C_word)a,a+=5,tmp);
C_trace("ChickenBridge.scm: 369  emit");
f_16030(t2,((C_word*)t0)[3],t1,((C_word*)t0)[2]);}

/* k32909 in k32906 in k32888 in k32885 in a32882 in k17189 in k17186 in k17183 in k15938 in k15869 in k15676 in k15673 in k15568 in k15517 in k7924 in k7921 in k5905 in k5612 in k5609 in k5605 in k5314 in k5311 in k5308 in k5305 */
static void C_ccall f_32911(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[12],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_32911,2,t0,t1);}
t2=C_SCHEME_FALSE;
t3=(*a=C_VECTOR_TYPE|1,a[1]=t2,tmp=(C_word)a,a+=2,tmp);
t4=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_32914,a[2]=((C_word*)t0)[3],a[3]=t3,a[4]=((C_word*)t0)[4],tmp=(C_word)a,a+=5,tmp);
t5=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_32942,a[2]=t4,a[3]=t3,a[4]=t1,tmp=(C_word)a,a+=5,tmp);
C_trace("ChickenBridge.scm: 369  get-emit-info");
f_15990(t5,lf[791],((C_word*)t0)[2]);}

/* k32940 in k32909 in k32906 in k32888 in k32885 in a32882 in k17189 in k17186 in k17183 in k15938 in k15869 in k15676 in k15673 in k15568 in k15517 in k7924 in k7921 in k5905 in k5612 in k5609 in k5605 in k5314 in k5311 in k5308 in k5305 */
static void C_ccall f_32942(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word ab[12],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_32942,2,t0,t1);}
t2=(C_word)C_eqp(t1,lf[792]);
if(C_truep(t2)){
t3=(C_word)C_a_i_list(&a,2,lf[796],((C_word*)t0)[4]);
t4=C_mutate(((C_word *)((C_word*)t0)[3])+1,t3);
t5=((C_word*)t0)[2];
f_32914(t5,t4);}
else{
t3=(C_word)C_a_i_list(&a,2,lf[465],((C_word*)t0)[4]);
t4=C_mutate(((C_word *)((C_word*)t0)[3])+1,t3);
t5=((C_word*)t0)[2];
f_32914(t5,t4);}}

/* k32912 in k32909 in k32906 in k32888 in k32885 in a32882 in k17189 in k17186 in k17183 in k15938 in k15869 in k15676 in k15673 in k15568 in k15517 in k7924 in k7921 in k5905 in k5612 in k5609 in k5605 in k5314 in k5311 in k5308 in k5305 */
static void C_fcall f_32914(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[4],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_32914,NULL,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_32920,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 369  get-emit-info");
f_15990(t2,lf[759],((C_word*)t0)[2]);}

/* k32918 in k32912 in k32909 in k32906 in k32888 in k32885 in a32882 in k17189 in k17186 in k17183 in k15938 in k15869 in k15676 in k15673 in k15568 in k15517 in k7924 in k7921 in k5905 in k5612 in k5609 in k5605 in k5314 in k5311 in k5308 in k5305 */
static void C_ccall f_32920(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[12],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_32920,2,t0,t1);}
if(C_truep(t1)){
t2=(C_word)C_a_i_list(&a,1,lf[515]);
t3=((C_word*)t0)[3];
((C_proc2)(void*)(*((C_word*)t3+1)))(2,t3,(C_word)C_a_i_list(&a,3,lf[18],((C_word*)((C_word*)t0)[2])[1],t2));}
else{
t2=((C_word*)t0)[3];
((C_proc2)(void*)(*((C_word*)t2+1)))(2,t2,((C_word*)((C_word*)t0)[2])[1]);}}

/* a32872 in k17189 in k17186 in k17183 in k15938 in k15869 in k15676 in k15673 in k15568 in k15517 in k7924 in k7921 in k5905 in k5612 in k5609 in k5605 in k5314 in k5311 in k5308 in k5305 */
static void C_ccall f_32873(C_word c,C_word t0,C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word *a;
if(c!=4) C_bad_argc_2(c,4,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr4,(void*)f_32873,4,t0,t1,t2,t3);}
t4=(C_word)C_i_cadr(t2);
C_trace("ChickenBridge.scm: 369  make-parse-unit");
f_15873(t1,C_fix(26624),t4,C_SCHEME_FALSE);}

/* k32865 in k17189 in k17186 in k17183 in k15938 in k15869 in k15676 in k15673 in k15568 in k15517 in k7924 in k7921 in k5905 in k5612 in k5609 in k5605 in k5314 in k5311 in k5308 in k5305 */
static void C_ccall f_32867(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 369  hash-table-set!");
t2=C_retrieve(lf[681]);
((C_proc5)C_retrieve_proc(t2))(5,t2,((C_word*)t0)[2],C_retrieve2(lf[277],"*rules*"),C_fix(26624),t1);}

/* k17192 in k17189 in k17186 in k17183 in k15938 in k15869 in k15676 in k15673 in k15568 in k15517 in k7924 in k7921 in k5905 in k5612 in k5609 in k5605 in k5314 in k5311 in k5308 in k5305 */
static void C_ccall f_17194(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word ab[28],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_17194,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_17197,a[2]=((C_word*)t0)[2],tmp=(C_word)a,a+=3,tmp);
t3=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_32767,a[2]=t2,tmp=(C_word)a,a+=3,tmp);
t4=(C_word)C_a_i_cons(&a,2,C_fix(5632),C_SCHEME_END_OF_LIST);
t5=(C_word)C_a_i_cons(&a,2,C_fix(5376),t4);
t6=(C_word)C_a_i_cons(&a,2,lf[311],t5);
t7=(C_word)C_a_i_cons(&a,2,C_fix(29696),C_SCHEME_END_OF_LIST);
t8=(C_word)C_a_i_cons(&a,2,t6,t7);
t9=(C_word)C_a_i_cons(&a,2,lf[310],t8);
t10=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_32775,a[2]=t9,a[3]=t3,tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 369  simple-unit-parser");
f_16271(t10,C_fix(27648));}

/* k32773 in k17192 in k17189 in k17186 in k17183 in k15938 in k15869 in k15676 in k15673 in k15568 in k15517 in k7924 in k7921 in k5905 in k5612 in k5609 in k5605 in k5314 in k5311 in k5308 in k5305 */
static void C_ccall f_32775(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[3],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_32775,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_32777,a[2]=((C_word)li521),tmp=(C_word)a,a+=3,tmp);
C_trace("ChickenBridge.scm: 369  make-rule");
f_15572(((C_word*)t0)[3],lf[795],C_fix(27648),((C_word*)t0)[2],t1,t2);}

/* a32776 in k32773 in k17192 in k17189 in k17186 in k17183 in k15938 in k15869 in k15676 in k15673 in k15568 in k15517 in k7924 in k7921 in k5905 in k5612 in k5609 in k5605 in k5314 in k5311 in k5308 in k5305 */
static void C_ccall f_32777(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4){
C_word tmp;
C_word t5;
C_word t6;
C_word ab[5],*a=ab;
if(c!=5) C_bad_argc_2(c,5,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr5,(void*)f_32777,5,t0,t1,t2,t3,t4);}
t5=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_32781,a[2]=t4,a[3]=t3,a[4]=t1,tmp=(C_word)a,a+=5,tmp);
C_trace("ChickenBridge.scm: 369  parse-unit-parsed");
f_15912(t5,t2);}

/* k32779 in a32776 in k32773 in k17192 in k17189 in k17186 in k17183 in k15938 in k15869 in k15676 in k15673 in k15568 in k15517 in k7924 in k7921 in k5905 in k5612 in k5609 in k5605 in k5314 in k5311 in k5308 in k5305 */
static void C_ccall f_32781(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[6],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_32781,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_32784,a[2]=((C_word*)t0)[2],a[3]=t1,a[4]=((C_word*)t0)[3],a[5]=((C_word*)t0)[4],tmp=(C_word)a,a+=6,tmp);
t3=(C_word)C_i_car(t1);
C_trace("ChickenBridge.scm: 369  token-unit-type=?");
f_15958(t2,t3,C_fix(5376));}

/* k32782 in k32779 in a32776 in k32773 in k17192 in k17189 in k17186 in k17183 in k15938 in k15869 in k15676 in k15673 in k15568 in k15517 in k7924 in k7921 in k5905 in k5612 in k5609 in k5605 in k5314 in k5311 in k5308 in k5305 */
static void C_ccall f_32784(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_32784,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_32787,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=t1,a[6]=((C_word*)t0)[5],tmp=(C_word)a,a+=7,tmp);
C_trace("ChickenBridge.scm: 369  get-emit-info");
f_15990(t2,lf[791],((C_word*)t0)[4]);}

/* k32785 in k32782 in k32779 in a32776 in k32773 in k17192 in k17189 in k17186 in k17183 in k15938 in k15869 in k15676 in k15673 in k15568 in k15517 in k7924 in k7921 in k5905 in k5612 in k5609 in k5605 in k5314 in k5311 in k5308 in k5305 */
static void C_ccall f_32787(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word ab[15],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_32787,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_32790,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],tmp=(C_word)a,a+=7,tmp);
if(C_truep(t1)){
t3=t2;
f_32790(2,t3,C_SCHEME_UNDEFINED);}
else{
t3=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_32819,a[2]=t2,a[3]=((C_word*)t0)[2],tmp=(C_word)a,a+=4,tmp);
t4=(C_truep(((C_word*)t0)[5])?lf[793]:lf[794]);
t5=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_32827,a[2]=t4,a[3]=t3,tmp=(C_word)a,a+=4,tmp);
t6=(C_word)C_i_car(((C_word*)t0)[3]);
C_trace("ChickenBridge.scm: 369  parse-unit-position");
f_15930(t5,t6);}}

/* k32825 in k32785 in k32782 in k32779 in a32776 in k32773 in k17192 in k17189 in k17186 in k17183 in k15938 in k15869 in k15676 in k15673 in k15568 in k15517 in k7924 in k7921 in k5905 in k5612 in k5609 in k5605 in k5314 in k5311 in k5308 in k5305 */
static void C_ccall f_32827(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 369  make-parse-error");
f_15822(((C_word*)t0)[3],((C_word*)t0)[2],t1);}

/* k32817 in k32785 in k32782 in k32779 in a32776 in k32773 in k17192 in k17189 in k17186 in k17183 in k15938 in k15869 in k15676 in k15673 in k15568 in k15517 in k7924 in k7921 in k5905 in k5612 in k5609 in k5605 in k5314 in k5311 in k5308 in k5305 */
static void C_ccall f_32819(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 369  errf");
t2=((C_word*)t0)[3];
((C_proc3)C_retrieve_proc(t2))(3,t2,((C_word*)t0)[2],t1);}

/* k32788 in k32785 in k32782 in k32779 in a32776 in k32773 in k17192 in k17189 in k17186 in k17183 in k15938 in k15869 in k15676 in k15673 in k15568 in k15517 in k7924 in k7921 in k5905 in k5612 in k5609 in k5605 in k5314 in k5311 in k5308 in k5305 */
static void C_ccall f_32790(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[5],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_32790,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_32793,a[2]=((C_word*)t0)[4],a[3]=((C_word*)t0)[5],a[4]=((C_word*)t0)[6],tmp=(C_word)a,a+=5,tmp);
t3=(C_word)C_i_cadr(((C_word*)t0)[3]);
C_trace("ChickenBridge.scm: 369  emit");
f_16030(t2,t3,((C_word*)t0)[4],((C_word*)t0)[2]);}

/* k32791 in k32788 in k32785 in k32782 in k32779 in a32776 in k32773 in k17192 in k17189 in k17186 in k17183 in k15938 in k15869 in k15676 in k15673 in k15568 in k15517 in k7924 in k7921 in k5905 in k5612 in k5609 in k5605 in k5314 in k5311 in k5308 in k5305 */
static void C_ccall f_32793(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[5],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_32793,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_32796,a[2]=t1,a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],tmp=(C_word)a,a+=5,tmp);
C_trace("ChickenBridge.scm: 369  set-emit-info!");
f_16012(t2,lf[791],lf[792],((C_word*)t0)[2]);}

/* k32794 in k32791 in k32788 in k32785 in k32782 in k32779 in a32776 in k32773 in k17192 in k17189 in k17186 in k17183 in k15938 in k15869 in k15676 in k15673 in k15568 in k15517 in k7924 in k7921 in k5905 in k5612 in k5609 in k5605 in k5314 in k5311 in k5308 in k5305 */
static void C_ccall f_32796(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word ab[12],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_32796,2,t0,t1);}
t2=((C_word*)t0)[4];
((C_proc2)(void*)(*((C_word*)t2+1)))(2,t2,(C_truep(((C_word*)t0)[3])?(C_word)C_a_i_list(&a,2,lf[789],((C_word*)t0)[2]):(C_word)C_a_i_list(&a,2,lf[790],((C_word*)t0)[2])));}

/* k32765 in k17192 in k17189 in k17186 in k17183 in k15938 in k15869 in k15676 in k15673 in k15568 in k15517 in k7924 in k7921 in k5905 in k5612 in k5609 in k5605 in k5314 in k5311 in k5308 in k5305 */
static void C_ccall f_32767(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 369  hash-table-set!");
t2=C_retrieve(lf[681]);
((C_proc5)C_retrieve_proc(t2))(5,t2,((C_word*)t0)[2],C_retrieve2(lf[277],"*rules*"),C_fix(27648),t1);}

/* k17195 in k17192 in k17189 in k17186 in k17183 in k15938 in k15869 in k15676 in k15673 in k15568 in k15517 in k7924 in k7921 in k5905 in k5612 in k5609 in k5605 in k5314 in k5311 in k5308 in k5305 */
static void C_ccall f_17197(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word ab[21],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_17197,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_17200,a[2]=((C_word*)t0)[2],tmp=(C_word)a,a+=3,tmp);
t3=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_32739,a[2]=t2,tmp=(C_word)a,a+=3,tmp);
t4=(C_word)C_a_i_cons(&a,2,C_fix(27648),C_SCHEME_END_OF_LIST);
t5=(C_word)C_a_i_cons(&a,2,C_fix(2304),t4);
t6=(C_word)C_a_i_cons(&a,2,C_fix(26624),t5);
t7=(C_word)C_a_i_cons(&a,2,C_fix(26368),t6);
t8=(C_word)C_a_i_cons(&a,2,lf[311],t7);
C_trace("ChickenBridge.scm: 369  make-rule");
f_15572(t3,lf[788],C_fix(26880),t8,C_SCHEME_FALSE,C_SCHEME_FALSE);}

/* k32737 in k17195 in k17192 in k17189 in k17186 in k17183 in k15938 in k15869 in k15676 in k15673 in k15568 in k15517 in k7924 in k7921 in k5905 in k5612 in k5609 in k5605 in k5314 in k5311 in k5308 in k5305 */
static void C_ccall f_32739(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 369  hash-table-set!");
t2=C_retrieve(lf[681]);
((C_proc5)C_retrieve_proc(t2))(5,t2,((C_word*)t0)[2],C_retrieve2(lf[277],"*rules*"),C_fix(26880),t1);}

/* k17198 in k17195 in k17192 in k17189 in k17186 in k17183 in k15938 in k15869 in k15676 in k15673 in k15568 in k15517 in k7924 in k7921 in k5905 in k5612 in k5609 in k5605 in k5314 in k5311 in k5308 in k5305 */
static void C_ccall f_17200(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word ab[27],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_17200,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_17203,a[2]=((C_word*)t0)[2],tmp=(C_word)a,a+=3,tmp);
t3=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_32679,a[2]=t2,tmp=(C_word)a,a+=3,tmp);
t4=(C_word)C_a_i_cons(&a,2,C_fix(1792),C_SCHEME_END_OF_LIST);
t5=(C_word)C_a_i_cons(&a,2,C_fix(29696),t4);
t6=(C_word)C_a_i_cons(&a,2,C_fix(1536),t5);
t7=(C_word)C_a_i_cons(&a,2,C_fix(25088),t6);
t8=(C_word)C_a_i_cons(&a,2,lf[310],t7);
t9=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_32685,a[2]=((C_word)li519),tmp=(C_word)a,a+=3,tmp);
t10=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_32703,a[2]=((C_word)li520),tmp=(C_word)a,a+=3,tmp);
C_trace("ChickenBridge.scm: 369  make-rule");
f_15572(t3,lf[787],C_fix(27136),t8,t9,t10);}

/* a32702 in k17198 in k17195 in k17192 in k17189 in k17186 in k17183 in k15938 in k15869 in k15676 in k15673 in k15568 in k15517 in k7924 in k7921 in k5905 in k5612 in k5609 in k5605 in k5314 in k5311 in k5308 in k5305 */
static void C_ccall f_32703(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4){
C_word tmp;
C_word t5;
C_word t6;
C_word t7;
C_word ab[8],*a=ab;
if(c!=5) C_bad_argc_2(c,5,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr5,(void*)f_32703,5,t0,t1,t2,t3,t4);}
t5=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_32711,a[2]=t1,tmp=(C_word)a,a+=3,tmp);
t6=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_32715,a[2]=t4,a[3]=t3,a[4]=t5,tmp=(C_word)a,a+=5,tmp);
C_trace("ChickenBridge.scm: 369  parse-unit-parsed");
f_15912(t6,t2);}

/* k32713 in a32702 in k17198 in k17195 in k17192 in k17189 in k17186 in k17183 in k15938 in k15869 in k15676 in k15673 in k15568 in k15517 in k7924 in k7921 in k5905 in k5612 in k5609 in k5605 in k5314 in k5311 in k5308 in k5305 */
static void C_ccall f_32715(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 369  emit");
f_16030(((C_word*)t0)[4],t1,((C_word*)t0)[3],((C_word*)t0)[2]);}

/* k32709 in a32702 in k17198 in k17195 in k17192 in k17189 in k17186 in k17183 in k15938 in k15869 in k15676 in k15673 in k15568 in k15517 in k7924 in k7921 in k5905 in k5612 in k5609 in k5605 in k5314 in k5311 in k5308 in k5305 */
static void C_ccall f_32711(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word ab[3],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_32711,2,t0,t1);}
t2=((C_word*)t0)[2];
((C_proc2)(void*)(*((C_word*)t2+1)))(2,t2,(C_word)C_a_i_cons(&a,2,lf[54],t1));}

/* a32684 in k17198 in k17195 in k17192 in k17189 in k17186 in k17183 in k15938 in k15869 in k15676 in k15673 in k15568 in k15517 in k7924 in k7921 in k5905 in k5612 in k5609 in k5605 in k5314 in k5311 in k5308 in k5305 */
static void C_ccall f_32685(C_word c,C_word t0,C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word ab[6],*a=ab;
if(c!=4) C_bad_argc_2(c,4,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr4,(void*)f_32685,4,t0,t1,t2,t3);}
t4=(C_word)C_i_car(t2);
t5=(C_word)C_i_caddr(t2);
t6=(C_word)C_a_i_list(&a,2,t4,t5);
C_trace("ChickenBridge.scm: 369  make-parse-unit");
f_15873(t1,C_fix(27136),t6,C_SCHEME_FALSE);}

/* k32677 in k17198 in k17195 in k17192 in k17189 in k17186 in k17183 in k15938 in k15869 in k15676 in k15673 in k15568 in k15517 in k7924 in k7921 in k5905 in k5612 in k5609 in k5605 in k5314 in k5311 in k5308 in k5305 */
static void C_ccall f_32679(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 369  hash-table-set!");
t2=C_retrieve(lf[681]);
((C_proc5)C_retrieve_proc(t2))(5,t2,((C_word*)t0)[2],C_retrieve2(lf[277],"*rules*"),C_fix(27136),t1);}

/* k17201 in k17198 in k17195 in k17192 in k17189 in k17186 in k17183 in k15938 in k15869 in k15676 in k15673 in k15568 in k15517 in k7924 in k7921 in k5905 in k5612 in k5609 in k5605 in k5314 in k5311 in k5308 in k5305 */
static void C_ccall f_17203(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word t14;
C_word t15;
C_word t16;
C_word t17;
C_word ab[45],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_17203,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_17206,a[2]=((C_word*)t0)[2],tmp=(C_word)a,a+=3,tmp);
t3=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_32556,a[2]=t2,tmp=(C_word)a,a+=3,tmp);
t4=(C_word)C_a_i_cons(&a,2,C_fix(29696),C_SCHEME_END_OF_LIST);
t5=(C_word)C_a_i_cons(&a,2,C_fix(256),t4);
t6=(C_word)C_a_i_cons(&a,2,lf[325],t5);
t7=(C_word)C_a_i_cons(&a,2,C_fix(768),C_SCHEME_END_OF_LIST);
t8=(C_word)C_a_i_cons(&a,2,t6,t7);
t9=(C_word)C_a_i_cons(&a,2,C_fix(29696),t8);
t10=(C_word)C_a_i_cons(&a,2,C_fix(256),t9);
t11=(C_word)C_a_i_cons(&a,2,C_fix(29696),t10);
t12=(C_word)C_a_i_cons(&a,2,C_fix(512),t11);
t13=(C_word)C_a_i_cons(&a,2,C_fix(5120),t12);
t14=(C_word)C_a_i_cons(&a,2,lf[310],t13);
t15=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_32562,a[2]=((C_word)li517),tmp=(C_word)a,a+=3,tmp);
t16=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_32593,a[2]=((C_word)li518),tmp=(C_word)a,a+=3,tmp);
C_trace("ChickenBridge.scm: 369  make-rule");
f_15572(t3,lf[786],C_fix(27392),t14,t15,t16);}

/* a32592 in k17201 in k17198 in k17195 in k17192 in k17189 in k17186 in k17183 in k15938 in k15869 in k15676 in k15673 in k15568 in k15517 in k7924 in k7921 in k5905 in k5612 in k5609 in k5605 in k5314 in k5311 in k5308 in k5305 */
static void C_ccall f_32593(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4){
C_word tmp;
C_word t5;
C_word t6;
C_word ab[5],*a=ab;
if(c!=5) C_bad_argc_2(c,5,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr5,(void*)f_32593,5,t0,t1,t2,t3,t4);}
t5=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_32597,a[2]=t4,a[3]=t3,a[4]=t1,tmp=(C_word)a,a+=5,tmp);
C_trace("ChickenBridge.scm: 369  parse-unit-parsed");
f_15912(t5,t2);}

/* k32595 in a32592 in k17201 in k17198 in k17195 in k17192 in k17189 in k17186 in k17183 in k15938 in k15869 in k15676 in k15673 in k15568 in k15517 in k7924 in k7921 in k5905 in k5612 in k5609 in k5605 in k5314 in k5311 in k5308 in k5305 */
static void C_ccall f_32597(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[6],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_32597,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_32600,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=t1,tmp=(C_word)a,a+=6,tmp);
t3=(C_word)C_i_car(t1);
C_trace("ChickenBridge.scm: 369  emit");
f_16030(t2,t3,((C_word*)t0)[3],((C_word*)t0)[2]);}

/* k32598 in k32595 in a32592 in k17201 in k17198 in k17195 in k17192 in k17189 in k17186 in k17183 in k15938 in k15869 in k15676 in k15673 in k15568 in k15517 in k7924 in k7921 in k5905 in k5612 in k5609 in k5605 in k5314 in k5311 in k5308 in k5305 */
static void C_ccall f_32600(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_32600,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_32603,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=t1,a[5]=((C_word*)t0)[4],a[6]=((C_word*)t0)[5],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cadr(((C_word*)t0)[5]);
C_trace("ChickenBridge.scm: 369  emit");
f_16030(t2,t3,((C_word*)t0)[3],((C_word*)t0)[2]);}

/* k32601 in k32598 in k32595 in a32592 in k17201 in k17198 in k17195 in k17192 in k17189 in k17186 in k17183 in k15938 in k15869 in k15676 in k15673 in k15568 in k15517 in k7924 in k7921 in k5905 in k5612 in k5609 in k5605 in k5314 in k5311 in k5308 in k5305 */
static void C_ccall f_32603(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[17],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_32603,2,t0,t1);}
t2=(C_word)C_i_caddr(((C_word*)t0)[6]);
if(C_truep(t2)){
t3=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_32616,a[2]=t1,a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],tmp=(C_word)a,a+=5,tmp);
C_trace("ChickenBridge.scm: 369  emit");
f_16030(t3,t2,((C_word*)t0)[3],((C_word*)t0)[2]);}
else{
t3=((C_word*)t0)[5];
((C_proc2)(void*)(*((C_word*)t3+1)))(2,t3,(C_word)C_a_i_list(&a,4,lf[20],((C_word*)t0)[4],t1,C_SCHEME_FALSE));}}

/* k32614 in k32601 in k32598 in k32595 in a32592 in k17201 in k17198 in k17195 in k17192 in k17189 in k17186 in k17183 in k15938 in k15869 in k15676 in k15673 in k15568 in k15517 in k7924 in k7921 in k5905 in k5612 in k5609 in k5605 in k5314 in k5311 in k5308 in k5305 */
static void C_ccall f_32616(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word ab[12],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_32616,2,t0,t1);}
t2=((C_word*)t0)[4];
((C_proc2)(void*)(*((C_word*)t2+1)))(2,t2,(C_word)C_a_i_list(&a,4,lf[20],((C_word*)t0)[3],((C_word*)t0)[2],t1));}

/* a32561 in k17201 in k17198 in k17195 in k17192 in k17189 in k17186 in k17183 in k15938 in k15869 in k15676 in k15673 in k15568 in k15517 in k7924 in k7921 in k5905 in k5612 in k5609 in k5605 in k5314 in k5311 in k5308 in k5305 */
static void C_ccall f_32562(C_word c,C_word t0,C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word ab[4],*a=ab;
if(c!=4) C_bad_argc_2(c,4,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr4,(void*)f_32562,4,t0,t1,t2,t3);}
t4=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_32566,a[2]=t1,a[3]=t2,tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 369  sixth");
t5=C_retrieve(lf[48]);
((C_proc3)C_retrieve_proc(t5))(3,t5,t4,t2);}

/* k32564 in a32561 in k17201 in k17198 in k17195 in k17192 in k17189 in k17186 in k17183 in k15938 in k15869 in k15676 in k15673 in k15568 in k15517 in k7924 in k7921 in k5905 in k5612 in k5609 in k5605 in k5314 in k5311 in k5308 in k5305 */
static void C_ccall f_32566(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[5],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_32566,2,t0,t1);}
t2=(C_word)C_i_caddr(((C_word*)t0)[3]);
t3=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_32581,a[2]=((C_word*)t0)[2],a[3]=t2,a[4]=t1,tmp=(C_word)a,a+=5,tmp);
C_trace("ChickenBridge.scm: 369  fifth");
t4=C_retrieve(lf[47]);
((C_proc3)C_retrieve_proc(t4))(3,t4,t3,((C_word*)t0)[3]);}

/* k32579 in k32564 in a32561 in k17201 in k17198 in k17195 in k17192 in k17189 in k17186 in k17183 in k15938 in k15869 in k15676 in k15673 in k15568 in k15517 in k7924 in k7921 in k5905 in k5612 in k5609 in k5605 in k5314 in k5311 in k5308 in k5305 */
static void C_ccall f_32581(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_32581,2,t0,t1);}
t2=(C_word)C_i_pairp(((C_word*)t0)[4]);
t3=(C_truep(t2)?(C_word)C_i_cadr(((C_word*)t0)[4]):C_SCHEME_FALSE);
t4=(C_word)C_a_i_list(&a,3,((C_word*)t0)[3],t1,t3);
C_trace("ChickenBridge.scm: 369  make-parse-unit");
f_15873(((C_word*)t0)[2],C_fix(27392),t4,C_SCHEME_FALSE);}

/* k32554 in k17201 in k17198 in k17195 in k17192 in k17189 in k17186 in k17183 in k15938 in k15869 in k15676 in k15673 in k15568 in k15517 in k7924 in k7921 in k5905 in k5612 in k5609 in k5605 in k5314 in k5311 in k5308 in k5305 */
static void C_ccall f_32556(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 369  hash-table-set!");
t2=C_retrieve(lf[681]);
((C_proc5)C_retrieve_proc(t2))(5,t2,((C_word*)t0)[2],C_retrieve2(lf[277],"*rules*"),C_fix(27392),t1);}

/* k17204 in k17201 in k17198 in k17195 in k17192 in k17189 in k17186 in k17183 in k15938 in k15869 in k15676 in k15673 in k15568 in k15517 in k7924 in k7921 in k5905 in k5612 in k5609 in k5605 in k5314 in k5311 in k5308 in k5305 */
static void C_ccall f_17206(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word t14;
C_word t15;
C_word ab[39],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_17206,2,t0,t1);}
t2=C_mutate(&lf[329],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_17208,a[2]=((C_word)li256),tmp=(C_word)a,a+=3,tmp));
t3=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_17262,a[2]=((C_word*)t0)[2],tmp=(C_word)a,a+=3,tmp);
t4=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_32436,a[2]=t3,tmp=(C_word)a,a+=3,tmp);
t5=(C_word)C_a_i_cons(&a,2,C_fix(29696),C_SCHEME_END_OF_LIST);
t6=(C_word)C_a_i_cons(&a,2,C_fix(256),t5);
t7=(C_word)C_a_i_cons(&a,2,lf[91],t6);
t8=(C_word)C_a_i_cons(&a,2,t7,C_SCHEME_END_OF_LIST);
t9=(C_word)C_a_i_cons(&a,2,C_fix(29696),t8);
t10=(C_word)C_a_i_cons(&a,2,lf[310],t9);
t11=(C_word)C_a_i_cons(&a,2,C_fix(29696),C_SCHEME_END_OF_LIST);
t12=(C_word)C_a_i_cons(&a,2,t10,t11);
t13=(C_word)C_a_i_cons(&a,2,lf[311],t12);
t14=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_32442,a[2]=((C_word)li516),tmp=(C_word)a,a+=3,tmp);
C_trace("ChickenBridge.scm: 369  make-rule");
f_15572(t4,lf[785],C_fix(28416),t13,t14,C_SCHEME_FALSE);}

/* a32441 in k17204 in k17201 in k17198 in k17195 in k17192 in k17189 in k17186 in k17183 in k15938 in k15869 in k15676 in k15673 in k15568 in k15517 in k7924 in k7921 in k5905 in k5612 in k5609 in k5605 in k5314 in k5311 in k5308 in k5305 */
static void C_ccall f_32442(C_word c,C_word t0,C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word ab[7],*a=ab;
if(c!=4) C_bad_argc_2(c,4,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr4,(void*)f_32442,4,t0,t1,t2,t3);}
if(C_truep((C_word)C_i_pairp(t2))){
t4=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_32458,a[2]=t1,a[3]=t2,tmp=(C_word)a,a+=4,tmp);
t5=(C_word)C_i_cdr(t2);
if(C_truep((C_word)C_i_pairp(t5))){
t6=(C_word)C_i_cadr(t2);
if(C_truep((C_word)C_i_pairp(t6))){
t7=(C_word)C_i_cadr(t2);
t8=(C_word)C_i_car(t7);
C_trace("ChickenBridge.scm: 369  token-unit-type=?");
f_15958(t4,t8,C_fix(256));}
else{
t7=t4;
f_32458(2,t7,C_SCHEME_FALSE);}}
else{
t6=t4;
f_32458(2,t6,C_SCHEME_FALSE);}}
else{
t4=t1;
((C_proc2)(void*)(*((C_word*)t4+1)))(2,t4,(C_word)C_a_i_list(&a,1,t2));}}

/* k32456 in a32441 in k17204 in k17201 in k17198 in k17195 in k17192 in k17189 in k17186 in k17183 in k15938 in k15869 in k15676 in k15673 in k15568 in k15517 in k7924 in k7921 in k5905 in k5612 in k5609 in k5605 in k5314 in k5311 in k5308 in k5305 */
static void C_ccall f_32458(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_32458,2,t0,t1);}
if(C_truep(t1)){
t2=(C_word)C_i_car(((C_word*)t0)[3]);
t3=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_32469,a[2]=t2,a[3]=((C_word*)t0)[2],tmp=(C_word)a,a+=4,tmp);
t4=(C_word)C_i_cadr(((C_word*)t0)[3]);
C_trace("ChickenBridge.scm: 369  remove-token-type");
f_17208(t3,t4,C_fix(256));}
else{
t2=((C_word*)t0)[2];
((C_proc2)(void*)(*((C_word*)t2+1)))(2,t2,(C_word)C_a_i_list(&a,1,((C_word*)t0)[3]));}}

/* k32467 in k32456 in a32441 in k17204 in k17201 in k17198 in k17195 in k17192 in k17189 in k17186 in k17183 in k15938 in k15869 in k15676 in k15673 in k15568 in k15517 in k7924 in k7921 in k5905 in k5612 in k5609 in k5605 in k5314 in k5311 in k5308 in k5305 */
static void C_ccall f_32469(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word ab[3],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_32469,2,t0,t1);}
t2=((C_word*)t0)[3];
((C_proc2)(void*)(*((C_word*)t2+1)))(2,t2,(C_word)C_a_i_cons(&a,2,((C_word*)t0)[2],t1));}

/* k32434 in k17204 in k17201 in k17198 in k17195 in k17192 in k17189 in k17186 in k17183 in k15938 in k15869 in k15676 in k15673 in k15568 in k15517 in k7924 in k7921 in k5905 in k5612 in k5609 in k5605 in k5314 in k5311 in k5308 in k5305 */
static void C_ccall f_32436(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 369  hash-table-set!");
t2=C_retrieve(lf[681]);
((C_proc5)C_retrieve_proc(t2))(5,t2,((C_word*)t0)[2],C_retrieve2(lf[277],"*rules*"),C_fix(28416),t1);}

/* k17260 in k17204 in k17201 in k17198 in k17195 in k17192 in k17189 in k17186 in k17183 in k15938 in k15869 in k15676 in k15673 in k15568 in k15517 in k7924 in k7921 in k5905 in k5612 in k5609 in k5605 in k5314 in k5311 in k5308 in k5305 */
static void C_ccall f_17262(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word t14;
C_word t15;
C_word t16;
C_word t17;
C_word t18;
C_word t19;
C_word ab[51],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_17262,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_17265,a[2]=((C_word*)t0)[2],tmp=(C_word)a,a+=3,tmp);
t3=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_32297,a[2]=t2,tmp=(C_word)a,a+=3,tmp);
t4=(C_word)C_a_i_cons(&a,2,C_fix(29696),C_SCHEME_END_OF_LIST);
t5=(C_word)C_a_i_cons(&a,2,C_fix(6144),t4);
t6=(C_word)C_a_i_cons(&a,2,C_fix(256),t5);
t7=(C_word)C_a_i_cons(&a,2,lf[91],t6);
t8=(C_word)C_a_i_cons(&a,2,t7,C_SCHEME_END_OF_LIST);
t9=(C_word)C_a_i_cons(&a,2,C_fix(29696),t8);
t10=(C_word)C_a_i_cons(&a,2,C_fix(6144),t9);
t11=(C_word)C_a_i_cons(&a,2,lf[310],t10);
t12=(C_word)C_a_i_cons(&a,2,C_fix(29696),C_SCHEME_END_OF_LIST);
t13=(C_word)C_a_i_cons(&a,2,C_fix(6144),t12);
t14=(C_word)C_a_i_cons(&a,2,lf[310],t13);
t15=(C_word)C_a_i_cons(&a,2,t14,C_SCHEME_END_OF_LIST);
t16=(C_word)C_a_i_cons(&a,2,t11,t15);
t17=(C_word)C_a_i_cons(&a,2,lf[311],t16);
t18=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_32303,a[2]=((C_word)li515),tmp=(C_word)a,a+=3,tmp);
C_trace("ChickenBridge.scm: 369  make-rule");
f_15572(t3,lf[784],C_fix(28672),t17,t18,C_SCHEME_FALSE);}

/* a32302 in k17260 in k17204 in k17201 in k17198 in k17195 in k17192 in k17189 in k17186 in k17183 in k15938 in k15869 in k15676 in k15673 in k15568 in k15517 in k7924 in k7921 in k5905 in k5612 in k5609 in k5605 in k5314 in k5311 in k5308 in k5305 */
static void C_ccall f_32303(C_word c,C_word t0,C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word ab[9],*a=ab;
if(c!=4) C_bad_argc_2(c,4,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr4,(void*)f_32303,4,t0,t1,t2,t3);}
t4=(C_word)C_i_car(t2);
t5=(C_word)C_i_cadr(t2);
t6=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_32323,a[2]=t4,a[3]=t1,a[4]=t5,tmp=(C_word)a,a+=5,tmp);
t7=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_32326,a[2]=t6,a[3]=t2,tmp=(C_word)a,a+=4,tmp);
t8=(C_word)C_i_cddr(t2);
if(C_truep((C_word)C_i_pairp(t8))){
t9=(C_word)C_i_caddr(t2);
if(C_truep((C_word)C_i_pairp(t9))){
t10=(C_word)C_i_caddr(t2);
t11=(C_word)C_i_car(t10);
C_trace("ChickenBridge.scm: 369  token-unit-type=?");
f_15958(t7,t11,C_fix(256));}
else{
t10=t7;
f_32326(2,t10,C_SCHEME_FALSE);}}
else{
t9=t7;
f_32326(2,t9,C_SCHEME_FALSE);}}

/* k32324 in a32302 in k17260 in k17204 in k17201 in k17198 in k17195 in k17192 in k17189 in k17186 in k17183 in k15938 in k15869 in k15676 in k15673 in k15568 in k15517 in k7924 in k7921 in k5905 in k5612 in k5609 in k5605 in k5314 in k5311 in k5308 in k5305 */
static void C_ccall f_32326(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word *a;
if(C_truep(t1)){
t2=(C_word)C_i_caddr(((C_word*)t0)[3]);
C_trace("ChickenBridge.scm: 369  remove-token-type");
f_17208(((C_word*)t0)[2],t2,C_fix(256));}
else{
t2=((C_word*)t0)[2];
f_32323(2,t2,C_SCHEME_END_OF_LIST);}}

/* k32321 in a32302 in k17260 in k17204 in k17201 in k17198 in k17195 in k17192 in k17189 in k17186 in k17183 in k15938 in k15869 in k15676 in k15673 in k15568 in k15517 in k7924 in k7921 in k5905 in k5612 in k5609 in k5605 in k5314 in k5311 in k5308 in k5305 */
static void C_ccall f_32323(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[6],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_32323,2,t0,t1);}
t2=(C_word)C_a_i_cons(&a,2,((C_word*)t0)[4],t1);
t3=((C_word*)t0)[3];
((C_proc2)(void*)(*((C_word*)t3+1)))(2,t3,(C_word)C_a_i_cons(&a,2,((C_word*)t0)[2],t2));}

/* k32295 in k17260 in k17204 in k17201 in k17198 in k17195 in k17192 in k17189 in k17186 in k17183 in k15938 in k15869 in k15676 in k15673 in k15568 in k15517 in k7924 in k7921 in k5905 in k5612 in k5609 in k5605 in k5314 in k5311 in k5308 in k5305 */
static void C_ccall f_32297(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 369  hash-table-set!");
t2=C_retrieve(lf[681]);
((C_proc5)C_retrieve_proc(t2))(5,t2,((C_word*)t0)[2],C_retrieve2(lf[277],"*rules*"),C_fix(28672),t1);}

/* k17263 in k17260 in k17204 in k17201 in k17198 in k17195 in k17192 in k17189 in k17186 in k17183 in k15938 in k15869 in k15676 in k15673 in k15568 in k15517 in k7924 in k7921 in k5905 in k5612 in k5609 in k5605 in k5314 in k5311 in k5308 in k5305 */
static void C_ccall f_17265(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word t14;
C_word t15;
C_word t16;
C_word t17;
C_word t18;
C_word t19;
C_word t20;
C_word t21;
C_word t22;
C_word t23;
C_word t24;
C_word t25;
C_word t26;
C_word t27;
C_word ab[75],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_17265,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_17268,a[2]=((C_word*)t0)[2],tmp=(C_word)a,a+=3,tmp);
t3=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_32145,a[2]=t2,tmp=(C_word)a,a+=3,tmp);
t4=(C_word)C_a_i_cons(&a,2,C_fix(768),C_SCHEME_END_OF_LIST);
t5=(C_word)C_a_i_cons(&a,2,C_fix(512),t4);
t6=(C_word)C_a_i_cons(&a,2,lf[310],t5);
t7=(C_word)C_a_i_cons(&a,2,C_fix(768),C_SCHEME_END_OF_LIST);
t8=(C_word)C_a_i_cons(&a,2,C_fix(28416),t7);
t9=(C_word)C_a_i_cons(&a,2,C_fix(512),t8);
t10=(C_word)C_a_i_cons(&a,2,lf[310],t9);
t11=(C_word)C_a_i_cons(&a,2,C_fix(768),C_SCHEME_END_OF_LIST);
t12=(C_word)C_a_i_cons(&a,2,C_fix(28672),t11);
t13=(C_word)C_a_i_cons(&a,2,C_fix(512),t12);
t14=(C_word)C_a_i_cons(&a,2,lf[310],t13);
t15=(C_word)C_a_i_cons(&a,2,C_fix(768),C_SCHEME_END_OF_LIST);
t16=(C_word)C_a_i_cons(&a,2,C_fix(28672),t15);
t17=(C_word)C_a_i_cons(&a,2,C_fix(256),t16);
t18=(C_word)C_a_i_cons(&a,2,C_fix(28416),t17);
t19=(C_word)C_a_i_cons(&a,2,C_fix(512),t18);
t20=(C_word)C_a_i_cons(&a,2,lf[310],t19);
t21=(C_word)C_a_i_cons(&a,2,t20,C_SCHEME_END_OF_LIST);
t22=(C_word)C_a_i_cons(&a,2,t14,t21);
t23=(C_word)C_a_i_cons(&a,2,t10,t22);
t24=(C_word)C_a_i_cons(&a,2,t6,t23);
t25=(C_word)C_a_i_cons(&a,2,lf[311],t24);
t26=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_32151,a[2]=((C_word)li514),tmp=(C_word)a,a+=3,tmp);
C_trace("ChickenBridge.scm: 369  make-rule");
f_15572(t3,lf[783],C_fix(28160),t25,t26,C_SCHEME_FALSE);}

/* a32150 in k17263 in k17260 in k17204 in k17201 in k17198 in k17195 in k17192 in k17189 in k17186 in k17183 in k15938 in k15869 in k15676 in k15673 in k15568 in k15517 in k7924 in k7921 in k5905 in k5612 in k5609 in k5605 in k5314 in k5311 in k5308 in k5305 */
static void C_ccall f_32151(C_word c,C_word t0,C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word ab[7],*a=ab;
if(c!=4) C_bad_argc_2(c,4,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr4,(void*)f_32151,4,t0,t1,t2,t3);}
t4=(*a=C_VECTOR_TYPE|1,a[1]=t2,tmp=(C_word)a,a+=2,tmp);
t5=(C_word)C_i_cdr(((C_word*)t4)[1]);
t6=C_set_block_item(t4,0,t5);
t7=(C_word)C_i_car(((C_word*)t4)[1]);
t8=(C_word)C_i_cdr(((C_word*)t4)[1]);
t9=C_set_block_item(t4,0,t8);
t10=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_32169,a[2]=t7,a[3]=t4,a[4]=t1,tmp=(C_word)a,a+=5,tmp);
C_trace("ChickenBridge.scm: 369  token-unit-type=?");
f_15958(t10,t7,C_fix(768));}

/* k32167 in a32150 in k17263 in k17260 in k17204 in k17201 in k17198 in k17195 in k17192 in k17189 in k17186 in k17183 in k15938 in k15869 in k15676 in k15673 in k15568 in k15517 in k7924 in k7921 in k5905 in k5612 in k5609 in k5605 in k5314 in k5311 in k5308 in k5305 */
static void C_ccall f_32169(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[5],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_32169,2,t0,t1);}
if(C_truep(t1)){
t2=((C_word*)t0)[4];
((C_proc2)(void*)(*((C_word*)t2+1)))(2,t2,C_SCHEME_END_OF_LIST);}
else{
t2=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_32178,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[3],tmp=(C_word)a,a+=5,tmp);
t3=(C_word)C_i_car(((C_word*)((C_word*)t0)[3])[1]);
C_trace("ChickenBridge.scm: 369  token-unit-type=?");
f_15958(t2,t3,C_fix(256));}}

/* k32176 in k32167 in a32150 in k17263 in k17260 in k17204 in k17201 in k17198 in k17195 in k17192 in k17189 in k17186 in k17183 in k15938 in k15869 in k15676 in k15673 in k15568 in k15517 in k7924 in k7921 in k5905 in k5612 in k5609 in k5605 in k5314 in k5311 in k5308 in k5305 */
static void C_ccall f_32178(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word *a;
if(C_truep(t1)){
t2=(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]);
C_trace("ChickenBridge.scm: 369  append");
t3=*((C_word*)lf[18]+1);
((C_proc4)C_retrieve_proc(t3))(4,t3,((C_word*)t0)[3],((C_word*)t0)[2],t2);}
else{
t2=((C_word*)t0)[3];
((C_proc2)(void*)(*((C_word*)t2+1)))(2,t2,((C_word*)t0)[2]);}}

/* k32143 in k17263 in k17260 in k17204 in k17201 in k17198 in k17195 in k17192 in k17189 in k17186 in k17183 in k15938 in k15869 in k15676 in k15673 in k15568 in k15517 in k7924 in k7921 in k5905 in k5612 in k5609 in k5605 in k5314 in k5311 in k5308 in k5305 */
static void C_ccall f_32145(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 369  hash-table-set!");
t2=C_retrieve(lf[681]);
((C_proc5)C_retrieve_proc(t2))(5,t2,((C_word*)t0)[2],C_retrieve2(lf[277],"*rules*"),C_fix(28160),t1);}

/* k17266 in k17263 in k17260 in k17204 in k17201 in k17198 in k17195 in k17192 in k17189 in k17186 in k17183 in k15938 in k15869 in k15676 in k15673 in k15568 in k15517 in k7924 in k7921 in k5905 in k5612 in k5609 in k5605 in k5314 in k5311 in k5308 in k5305 */
static void C_ccall f_17268(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word ab[21],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_17268,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_17271,a[2]=((C_word*)t0)[2],tmp=(C_word)a,a+=3,tmp);
t3=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_32074,a[2]=t2,tmp=(C_word)a,a+=3,tmp);
t4=(C_word)C_a_i_cons(&a,2,C_fix(28160),C_SCHEME_END_OF_LIST);
t5=(C_word)C_a_i_cons(&a,2,C_fix(25088),t4);
t6=(C_word)C_a_i_cons(&a,2,lf[310],t5);
t7=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_32080,a[2]=((C_word)li512),tmp=(C_word)a,a+=3,tmp);
t8=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_32098,a[2]=((C_word)li513),tmp=(C_word)a,a+=3,tmp);
C_trace("ChickenBridge.scm: 369  make-rule");
f_15572(t3,lf[782],C_fix(27904),t6,t7,t8);}

/* a32097 in k17266 in k17263 in k17260 in k17204 in k17201 in k17198 in k17195 in k17192 in k17189 in k17186 in k17183 in k15938 in k15869 in k15676 in k15673 in k15568 in k15517 in k7924 in k7921 in k5905 in k5612 in k5609 in k5605 in k5314 in k5311 in k5308 in k5305 */
static void C_ccall f_32098(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4){
C_word tmp;
C_word t5;
C_word t6;
C_word ab[5],*a=ab;
if(c!=5) C_bad_argc_2(c,5,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr5,(void*)f_32098,5,t0,t1,t2,t3,t4);}
t5=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_32102,a[2]=t4,a[3]=t3,a[4]=t1,tmp=(C_word)a,a+=5,tmp);
C_trace("ChickenBridge.scm: 369  parse-unit-parsed");
f_15912(t5,t2);}

/* k32100 in a32097 in k17266 in k17263 in k17260 in k17204 in k17201 in k17198 in k17195 in k17192 in k17189 in k17186 in k17183 in k15938 in k15869 in k15676 in k15673 in k15568 in k15517 in k7924 in k7921 in k5905 in k5612 in k5609 in k5605 in k5314 in k5311 in k5308 in k5305 */
static void C_ccall f_32102(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[6],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_32102,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_32105,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=t1,a[5]=((C_word*)t0)[4],tmp=(C_word)a,a+=6,tmp);
t3=(C_word)C_i_car(t1);
C_trace("ChickenBridge.scm: 369  emit");
f_16030(t2,t3,((C_word*)t0)[3],((C_word*)t0)[2]);}

/* k32103 in k32100 in a32097 in k17266 in k17263 in k17260 in k17204 in k17201 in k17198 in k17195 in k17192 in k17189 in k17186 in k17183 in k15938 in k15869 in k15676 in k15673 in k15568 in k15517 in k7924 in k7921 in k5905 in k5612 in k5609 in k5605 in k5314 in k5311 in k5308 in k5305 */
static void C_ccall f_32105(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[4],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_32105,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_32121,a[2]=t1,a[3]=((C_word*)t0)[5],tmp=(C_word)a,a+=4,tmp);
t3=(C_word)C_i_cdr(((C_word*)t0)[4]);
C_trace("ChickenBridge.scm: 369  emit");
f_16030(t2,t3,((C_word*)t0)[3],((C_word*)t0)[2]);}

/* k32119 in k32103 in k32100 in a32097 in k17266 in k17263 in k17260 in k17204 in k17201 in k17198 in k17195 in k17192 in k17189 in k17186 in k17183 in k15938 in k15869 in k15676 in k15673 in k15568 in k15517 in k7924 in k7921 in k5905 in k5612 in k5609 in k5605 in k5314 in k5311 in k5308 in k5305 */
static void C_ccall f_32121(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word ab[3],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_32121,2,t0,t1);}
t2=((C_word*)t0)[3];
((C_proc2)(void*)(*((C_word*)t2+1)))(2,t2,(C_word)C_a_i_cons(&a,2,((C_word*)t0)[2],t1));}

/* a32079 in k17266 in k17263 in k17260 in k17204 in k17201 in k17198 in k17195 in k17192 in k17189 in k17186 in k17183 in k15938 in k15869 in k15676 in k15673 in k15568 in k15517 in k7924 in k7921 in k5905 in k5612 in k5609 in k5605 in k5314 in k5311 in k5308 in k5305 */
static void C_ccall f_32080(C_word c,C_word t0,C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word ab[3],*a=ab;
if(c!=4) C_bad_argc_2(c,4,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr4,(void*)f_32080,4,t0,t1,t2,t3);}
t4=(C_word)C_i_car(t2);
t5=(C_word)C_i_cadr(t2);
t6=(C_word)C_a_i_cons(&a,2,t4,t5);
C_trace("ChickenBridge.scm: 369  make-parse-unit");
f_15873(t1,C_fix(27904),t6,C_SCHEME_FALSE);}

/* k32072 in k17266 in k17263 in k17260 in k17204 in k17201 in k17198 in k17195 in k17192 in k17189 in k17186 in k17183 in k15938 in k15869 in k15676 in k15673 in k15568 in k15517 in k7924 in k7921 in k5905 in k5612 in k5609 in k5605 in k5314 in k5311 in k5308 in k5305 */
static void C_ccall f_32074(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 369  hash-table-set!");
t2=C_retrieve(lf[681]);
((C_proc5)C_retrieve_proc(t2))(5,t2,((C_word*)t0)[2],C_retrieve2(lf[277],"*rules*"),C_fix(27904),t1);}

/* k17269 in k17266 in k17263 in k17260 in k17204 in k17201 in k17198 in k17195 in k17192 in k17189 in k17186 in k17183 in k15938 in k15869 in k15676 in k15673 in k15568 in k15517 in k7924 in k7921 in k5905 in k5612 in k5609 in k5605 in k5314 in k5311 in k5308 in k5305 */
static void C_ccall f_17271(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word t14;
C_word t15;
C_word t16;
C_word t17;
C_word t18;
C_word t19;
C_word t20;
C_word t21;
C_word t22;
C_word t23;
C_word ab[63],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_17271,2,t0,t1);}
t2=C_mutate(&lf[330],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_17273,a[2]=((C_word)li257),tmp=(C_word)a,a+=3,tmp));
t3=C_mutate(&lf[331],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_17294,a[2]=((C_word)li260),tmp=(C_word)a,a+=3,tmp));
t4=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_17410,a[2]=((C_word*)t0)[2],tmp=(C_word)a,a+=3,tmp);
t5=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_31998,a[2]=t4,tmp=(C_word)a,a+=3,tmp);
t6=(C_word)C_a_i_cons(&a,2,C_fix(8705),C_SCHEME_END_OF_LIST);
t7=(C_word)C_a_i_cons(&a,2,C_fix(8450),t6);
t8=(C_word)C_a_i_cons(&a,2,C_fix(8963),t7);
t9=(C_word)C_a_i_cons(&a,2,C_fix(10244),t8);
t10=(C_word)C_a_i_cons(&a,2,C_fix(11268),t9);
t11=(C_word)C_a_i_cons(&a,2,C_fix(11012),t10);
t12=(C_word)C_a_i_cons(&a,2,C_fix(9732),t11);
t13=(C_word)C_a_i_cons(&a,2,C_fix(9476),t12);
t14=(C_word)C_a_i_cons(&a,2,C_fix(9988),t13);
t15=(C_word)C_a_i_cons(&a,2,C_fix(10756),t14);
t16=(C_word)C_a_i_cons(&a,2,C_fix(8199),t15);
t17=(C_word)C_a_i_cons(&a,2,C_fix(7941),t16);
t18=(C_word)C_a_i_cons(&a,2,C_fix(7686),t17);
t19=(C_word)C_a_i_cons(&a,2,C_fix(7430),t18);
t20=(C_word)C_a_i_cons(&a,2,C_fix(7173),t19);
t21=(C_word)C_a_i_cons(&a,2,C_fix(6917),t20);
t22=(C_word)C_a_i_cons(&a,2,lf[311],t21);
C_trace("ChickenBridge.scm: 369  make-rule");
f_15572(t5,lf[781],C_fix(28928),t22,C_SCHEME_FALSE,C_SCHEME_FALSE);}

/* k31996 in k17269 in k17266 in k17263 in k17260 in k17204 in k17201 in k17198 in k17195 in k17192 in k17189 in k17186 in k17183 in k15938 in k15869 in k15676 in k15673 in k15568 in k15517 in k7924 in k7921 in k5905 in k5612 in k5609 in k5605 in k5314 in k5311 in k5308 in k5305 */
static void C_ccall f_31998(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 369  hash-table-set!");
t2=C_retrieve(lf[681]);
((C_proc5)C_retrieve_proc(t2))(5,t2,((C_word*)t0)[2],C_retrieve2(lf[277],"*rules*"),C_fix(28928),t1);}

/* k17408 in k17269 in k17266 in k17263 in k17260 in k17204 in k17201 in k17198 in k17195 in k17192 in k17189 in k17186 in k17183 in k15938 in k15869 in k15676 in k15673 in k15568 in k15517 in k7924 in k7921 in k5905 in k5612 in k5609 in k5605 in k5314 in k5311 in k5308 in k5305 */
static void C_ccall f_17410(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word ab[27],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_17410,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_17413,a[2]=((C_word*)t0)[2],tmp=(C_word)a,a+=3,tmp);
t3=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_31918,a[2]=t2,tmp=(C_word)a,a+=3,tmp);
t4=(C_word)C_a_i_cons(&a,2,C_fix(29440),C_SCHEME_END_OF_LIST);
t5=(C_word)C_a_i_cons(&a,2,C_fix(28928),t4);
t6=(C_word)C_a_i_cons(&a,2,lf[95],t5);
t7=(C_word)C_a_i_cons(&a,2,t6,C_SCHEME_END_OF_LIST);
t8=(C_word)C_a_i_cons(&a,2,C_fix(29440),t7);
t9=(C_word)C_a_i_cons(&a,2,lf[310],t8);
t10=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_31924,a[2]=((C_word)li511),tmp=(C_word)a,a+=3,tmp);
C_trace("ChickenBridge.scm: 369  make-rule");
f_15572(t3,lf[780],C_fix(29184),t9,t10,C_SCHEME_FALSE);}

/* a31923 in k17408 in k17269 in k17266 in k17263 in k17260 in k17204 in k17201 in k17198 in k17195 in k17192 in k17189 in k17186 in k17183 in k15938 in k15869 in k15676 in k15673 in k15568 in k15517 in k7924 in k7921 in k5905 in k5612 in k5609 in k5605 in k5314 in k5311 in k5308 in k5305 */
static void C_ccall f_31924(C_word c,C_word t0,C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word ab[4],*a=ab;
if(c!=4) C_bad_argc_2(c,4,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr4,(void*)f_31924,4,t0,t1,t2,t3);}
t4=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_31931,a[2]=t1,a[3]=t2,tmp=(C_word)a,a+=4,tmp);
t5=(C_word)C_i_cadr(t2);
if(C_truep((C_word)C_i_pairp(t5))){
t6=(C_word)C_i_cadr(t2);
t7=(C_word)C_i_car(t6);
C_trace("ChickenBridge.scm: 369  is-op?");
f_17273(t4,t7);}
else{
t6=t4;
f_31931(2,t6,C_SCHEME_FALSE);}}

/* k31929 in a31923 in k17408 in k17269 in k17266 in k17263 in k17260 in k17204 in k17201 in k17198 in k17195 in k17192 in k17189 in k17186 in k17183 in k15938 in k15869 in k15676 in k15673 in k15568 in k15517 in k7924 in k7921 in k5905 in k5612 in k5609 in k5605 in k5314 in k5311 in k5308 in k5305 */
static void C_ccall f_31931(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[3],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_31931,2,t0,t1);}
if(C_truep(t1)){
t2=(C_word)C_i_car(((C_word*)t0)[3]);
t3=(C_word)C_i_cadr(((C_word*)t0)[3]);
t4=(C_word)C_a_i_cons(&a,2,t2,t3);
C_trace("ChickenBridge.scm: 369  inf->pre");
f_17294(((C_word*)t0)[2],t4);}
else{
t2=((C_word*)t0)[2];
((C_proc2)(void*)(*((C_word*)t2+1)))(2,t2,(C_word)C_i_car(((C_word*)t0)[3]));}}

/* k31916 in k17408 in k17269 in k17266 in k17263 in k17260 in k17204 in k17201 in k17198 in k17195 in k17192 in k17189 in k17186 in k17183 in k15938 in k15869 in k15676 in k15673 in k15568 in k15517 in k7924 in k7921 in k5905 in k5612 in k5609 in k5605 in k5314 in k5311 in k5308 in k5305 */
static void C_ccall f_31918(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 369  hash-table-set!");
t2=C_retrieve(lf[681]);
((C_proc5)C_retrieve_proc(t2))(5,t2,((C_word*)t0)[2],C_retrieve2(lf[277],"*rules*"),C_fix(29184),t1);}

/* k17411 in k17408 in k17269 in k17266 in k17263 in k17260 in k17204 in k17201 in k17198 in k17195 in k17192 in k17189 in k17186 in k17183 in k15938 in k15869 in k15676 in k15673 in k15568 in k15517 in k7924 in k7921 in k5905 in k5612 in k5609 in k5605 in k5314 in k5311 in k5308 in k5305 */
static void C_ccall f_17413(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word t14;
C_word t15;
C_word t16;
C_word t17;
C_word t18;
C_word t19;
C_word t20;
C_word t21;
C_word t22;
C_word t23;
C_word t24;
C_word t25;
C_word t26;
C_word ab[72],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_17413,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_17416,a[2]=((C_word*)t0)[2],tmp=(C_word)a,a+=3,tmp);
t3=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_31782,a[2]=t2,tmp=(C_word)a,a+=3,tmp);
t4=(C_word)C_a_i_cons(&a,2,C_fix(29440),C_SCHEME_END_OF_LIST);
t5=(C_word)C_a_i_cons(&a,2,C_fix(7173),t4);
t6=(C_word)C_a_i_cons(&a,2,lf[310],t5);
t7=(C_word)C_a_i_cons(&a,2,C_fix(29440),C_SCHEME_END_OF_LIST);
t8=(C_word)C_a_i_cons(&a,2,C_fix(8963),t7);
t9=(C_word)C_a_i_cons(&a,2,lf[310],t8);
t10=(C_word)C_a_i_cons(&a,2,C_fix(768),C_SCHEME_END_OF_LIST);
t11=(C_word)C_a_i_cons(&a,2,C_fix(29184),t10);
t12=(C_word)C_a_i_cons(&a,2,C_fix(512),t11);
t13=(C_word)C_a_i_cons(&a,2,lf[310],t12);
t14=(C_word)C_a_i_cons(&a,2,C_fix(2304),C_SCHEME_END_OF_LIST);
t15=(C_word)C_a_i_cons(&a,2,C_fix(26624),t14);
t16=(C_word)C_a_i_cons(&a,2,C_fix(26368),t15);
t17=(C_word)C_a_i_cons(&a,2,C_fix(27136),t16);
t18=(C_word)C_a_i_cons(&a,2,C_fix(27904),t17);
t19=(C_word)C_a_i_cons(&a,2,C_fix(27392),t18);
t20=(C_word)C_a_i_cons(&a,2,t13,t19);
t21=(C_word)C_a_i_cons(&a,2,t9,t20);
t22=(C_word)C_a_i_cons(&a,2,t6,t21);
t23=(C_word)C_a_i_cons(&a,2,lf[311],t22);
t24=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_31788,a[2]=((C_word)li509),tmp=(C_word)a,a+=3,tmp);
t25=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_31814,a[2]=((C_word)li510),tmp=(C_word)a,a+=3,tmp);
C_trace("ChickenBridge.scm: 369  make-rule");
f_15572(t3,lf[779],C_fix(29440),t23,t24,t25);}

/* a31813 in k17411 in k17408 in k17269 in k17266 in k17263 in k17260 in k17204 in k17201 in k17198 in k17195 in k17192 in k17189 in k17186 in k17183 in k15938 in k15869 in k15676 in k15673 in k15568 in k15517 in k7924 in k7921 in k5905 in k5612 in k5609 in k5605 in k5314 in k5311 in k5308 in k5305 */
static void C_ccall f_31814(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4){
C_word tmp;
C_word t5;
C_word t6;
C_word ab[5],*a=ab;
if(c!=5) C_bad_argc_2(c,5,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr5,(void*)f_31814,5,t0,t1,t2,t3,t4);}
t5=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_31822,a[2]=t4,a[3]=t3,a[4]=t1,tmp=(C_word)a,a+=5,tmp);
C_trace("ChickenBridge.scm: 369  parse-unit-parsed");
f_15912(t5,t2);}

/* k31820 in a31813 in k17411 in k17408 in k17269 in k17266 in k17263 in k17260 in k17204 in k17201 in k17198 in k17195 in k17192 in k17189 in k17186 in k17183 in k15938 in k15869 in k15676 in k15673 in k15568 in k15517 in k7924 in k7921 in k5905 in k5612 in k5609 in k5605 in k5314 in k5311 in k5308 in k5305 */
static void C_ccall f_31822(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 369  emit");
f_16030(((C_word*)t0)[4],t1,((C_word*)t0)[3],((C_word*)t0)[2]);}

/* a31787 in k17411 in k17408 in k17269 in k17266 in k17263 in k17260 in k17204 in k17201 in k17198 in k17195 in k17192 in k17189 in k17186 in k17183 in k15938 in k15869 in k15676 in k15673 in k15568 in k15517 in k7924 in k7921 in k5905 in k5612 in k5609 in k5605 in k5314 in k5311 in k5308 in k5305 */
static void C_ccall f_31788(C_word c,C_word t0,C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word ab[7],*a=ab;
if(c!=4) C_bad_argc_2(c,4,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr4,(void*)f_31788,4,t0,t1,t2,t3);}
t4=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_31796,a[2]=t1,tmp=(C_word)a,a+=3,tmp);
if(C_truep((C_word)C_i_pairp(t2))){
t5=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_31805,a[2]=t2,a[3]=t4,tmp=(C_word)a,a+=4,tmp);
t6=(C_word)C_i_car(t2);
C_trace("ChickenBridge.scm: 369  token-unit-type=?");
f_15958(t5,t6,C_fix(512));}
else{
t5=t4;
f_31796(t5,t2);}}

/* k31803 in a31787 in k17411 in k17408 in k17269 in k17266 in k17263 in k17260 in k17204 in k17201 in k17198 in k17195 in k17192 in k17189 in k17186 in k17183 in k15938 in k15869 in k15676 in k15673 in k15568 in k15517 in k7924 in k7921 in k5905 in k5612 in k5609 in k5605 in k5314 in k5311 in k5308 in k5305 */
static void C_ccall f_31805(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
t2=((C_word*)t0)[3];
f_31796(t2,(C_truep(t1)?(C_word)C_i_cadr(((C_word*)t0)[2]):((C_word*)t0)[2]));}

/* k31794 in a31787 in k17411 in k17408 in k17269 in k17266 in k17263 in k17260 in k17204 in k17201 in k17198 in k17195 in k17192 in k17189 in k17186 in k17183 in k15938 in k15869 in k15676 in k15673 in k15568 in k15517 in k7924 in k7921 in k5905 in k5612 in k5609 in k5605 in k5314 in k5311 in k5308 in k5305 */
static void C_fcall f_31796(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 369  make-parse-unit");
f_15873(((C_word*)t0)[2],C_fix(29440),t1,C_SCHEME_FALSE);}

/* k31780 in k17411 in k17408 in k17269 in k17266 in k17263 in k17260 in k17204 in k17201 in k17198 in k17195 in k17192 in k17189 in k17186 in k17183 in k15938 in k15869 in k15676 in k15673 in k15568 in k15517 in k7924 in k7921 in k5905 in k5612 in k5609 in k5605 in k5314 in k5311 in k5308 in k5305 */
static void C_ccall f_31782(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 369  hash-table-set!");
t2=C_retrieve(lf[681]);
((C_proc5)C_retrieve_proc(t2))(5,t2,((C_word*)t0)[2],C_retrieve2(lf[277],"*rules*"),C_fix(29440),t1);}

/* k17414 in k17411 in k17408 in k17269 in k17266 in k17263 in k17260 in k17204 in k17201 in k17198 in k17195 in k17192 in k17189 in k17186 in k17183 in k15938 in k15869 in k15676 in k15673 in k15568 in k15517 in k7924 in k7921 in k5905 in k5612 in k5609 in k5605 in k5314 in k5311 in k5308 in k5305 */
static void C_ccall f_17416(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word ab[33],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_17416,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_17419,a[2]=((C_word*)t0)[2],tmp=(C_word)a,a+=3,tmp);
t3=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_31738,a[2]=t2,tmp=(C_word)a,a+=3,tmp);
t4=(C_word)C_a_i_cons(&a,2,C_fix(26368),C_SCHEME_END_OF_LIST);
t5=(C_word)C_a_i_cons(&a,2,C_fix(6400),t4);
t6=(C_word)C_a_i_cons(&a,2,C_fix(2304),t5);
t7=(C_word)C_a_i_cons(&a,2,C_fix(26624),t6);
t8=(C_word)C_a_i_cons(&a,2,C_fix(27136),t7);
t9=(C_word)C_a_i_cons(&a,2,C_fix(27904),t8);
t10=(C_word)C_a_i_cons(&a,2,C_fix(27392),t9);
t11=(C_word)C_a_i_cons(&a,2,C_fix(29184),t10);
t12=(C_word)C_a_i_cons(&a,2,lf[311],t11);
C_trace("ChickenBridge.scm: 369  make-rule");
f_15572(t3,lf[778],C_fix(29696),t12,C_SCHEME_FALSE,C_SCHEME_FALSE);}

/* k31736 in k17414 in k17411 in k17408 in k17269 in k17266 in k17263 in k17260 in k17204 in k17201 in k17198 in k17195 in k17192 in k17189 in k17186 in k17183 in k15938 in k15869 in k15676 in k15673 in k15568 in k15517 in k7924 in k7921 in k5905 in k5612 in k5609 in k5605 in k5314 in k5311 in k5308 in k5305 */
static void C_ccall f_31738(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 369  hash-table-set!");
t2=C_retrieve(lf[681]);
((C_proc5)C_retrieve_proc(t2))(5,t2,((C_word*)t0)[2],C_retrieve2(lf[277],"*rules*"),C_fix(29696),t1);}

/* k17417 in k17414 in k17411 in k17408 in k17269 in k17266 in k17263 in k17260 in k17204 in k17201 in k17198 in k17195 in k17192 in k17189 in k17186 in k17183 in k15938 in k15869 in k15676 in k15673 in k15568 in k15517 in k7924 in k7921 in k5905 in k5612 in k5609 in k5605 in k5314 in k5311 in k5308 in k5305 */
static void C_ccall f_17419(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word ab[33],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_17419,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_17422,a[2]=((C_word*)t0)[2],tmp=(C_word)a,a+=3,tmp);
t3=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_31628,a[2]=t2,tmp=(C_word)a,a+=3,tmp);
t4=(C_word)C_a_i_cons(&a,2,C_fix(29696),C_SCHEME_END_OF_LIST);
t5=(C_word)C_a_i_cons(&a,2,C_fix(256),t4);
t6=(C_word)C_a_i_cons(&a,2,lf[95],t5);
t7=(C_word)C_a_i_cons(&a,2,t6,C_SCHEME_END_OF_LIST);
t8=(C_word)C_a_i_cons(&a,2,C_fix(29696),t7);
t9=(C_word)C_a_i_cons(&a,2,C_fix(15872),t8);
t10=(C_word)C_a_i_cons(&a,2,lf[310],t9);
t11=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_31634,a[2]=((C_word)li506),tmp=(C_word)a,a+=3,tmp);
t12=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_31656,a[2]=((C_word)li508),tmp=(C_word)a,a+=3,tmp);
C_trace("ChickenBridge.scm: 369  make-rule");
f_15572(t3,lf[777],C_fix(33536),t10,t11,t12);}

/* a31655 in k17417 in k17414 in k17411 in k17408 in k17269 in k17266 in k17263 in k17260 in k17204 in k17201 in k17198 in k17195 in k17192 in k17189 in k17186 in k17183 in k15938 in k15869 in k15676 in k15673 in k15568 in k15517 in k7924 in k7921 in k5905 in k5612 in k5609 in k5605 in k5314 in k5311 in k5308 in k5305 */
static void C_ccall f_31656(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4){
C_word tmp;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word ab[12],*a=ab;
if(c!=5) C_bad_argc_2(c,5,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr5,(void*)f_31656,5,t0,t1,t2,t3,t4);}
t5=(C_word)C_a_i_list(&a,1,lf[359]);
t6=t5;
t7=(*a=C_VECTOR_TYPE|1,a[1]=t6,tmp=(C_word)a,a+=2,tmp);
t8=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_31667,a[2]=t1,a[3]=t4,a[4]=t3,a[5]=t7,a[6]=t5,tmp=(C_word)a,a+=7,tmp);
C_trace("ChickenBridge.scm: 369  parse-unit-parsed");
f_15912(t8,t2);}

/* k31665 in a31655 in k17417 in k17414 in k17411 in k17408 in k17269 in k17266 in k17263 in k17260 in k17204 in k17201 in k17198 in k17195 in k17192 in k17189 in k17186 in k17183 in k15938 in k15869 in k15676 in k15673 in k15568 in k15517 in k7924 in k7921 in k5905 in k5612 in k5609 in k5605 in k5314 in k5311 in k5308 in k5305 */
static void C_ccall f_31667(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[10],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_31667,2,t0,t1);}
t2=C_SCHEME_UNDEFINED;
t3=(*a=C_VECTOR_TYPE|1,a[1]=t2,tmp=(C_word)a,a+=2,tmp);
t4=C_set_block_item(t3,0,(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_31669,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=t3,a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],a[7]=((C_word)li507),tmp=(C_word)a,a+=8,tmp));
t5=((C_word*)t3)[1];
f_31669(t5,((C_word*)t0)[2],t1);}

/* do2651 in k31665 in a31655 in k17417 in k17414 in k17411 in k17408 in k17269 in k17266 in k17263 in k17260 in k17204 in k17201 in k17198 in k17195 in k17192 in k17189 in k17186 in k17183 in k15938 in k15869 in k15676 in k15673 in k15568 in k15517 in k7924 in k7921 in k5905 in k5612 in k5609 in k5605 in k5314 in k5311 in k5308 in k5305 */
static void C_fcall f_31669(C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word t5;
C_word ab[6],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_31669,NULL,3,t0,t1,t2);}
if(C_truep((C_word)C_i_nullp(t2))){
t3=t1;
((C_proc2)(void*)(*((C_word*)t3+1)))(2,t3,((C_word*)t0)[6]);}
else{
t3=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_31698,a[2]=t1,a[3]=((C_word*)t0)[4],a[4]=t2,a[5]=((C_word*)t0)[5],tmp=(C_word)a,a+=6,tmp);
t4=(C_word)C_i_car(t2);
C_trace("ChickenBridge.scm: 369  emit");
f_16030(t3,t4,((C_word*)t0)[3],((C_word*)t0)[2]);}}

/* k31696 in do2651 in k31665 in a31655 in k17417 in k17414 in k17411 in k17408 in k17269 in k17266 in k17263 in k17260 in k17204 in k17201 in k17198 in k17195 in k17192 in k17189 in k17186 in k17183 in k15938 in k15869 in k15676 in k15673 in k15568 in k15517 in k7924 in k7921 in k5905 in k5612 in k5609 in k5605 in k5314 in k5311 in k5308 in k5305 */
static void C_ccall f_31698(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word ab[3],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_31698,2,t0,t1);}
t2=(C_word)C_a_i_list(&a,1,t1);
t3=(C_word)C_i_set_cdr(((C_word*)((C_word*)t0)[5])[1],t2);
t4=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[5])[1]);
t5=C_mutate(((C_word *)((C_word*)t0)[5])+1,t4);
t6=(C_word)C_i_cdr(((C_word*)t0)[4]);
t7=((C_word*)((C_word*)t0)[3])[1];
f_31669(t7,((C_word*)t0)[2],t6);}

/* a31633 in k17417 in k17414 in k17411 in k17408 in k17269 in k17266 in k17263 in k17260 in k17204 in k17201 in k17198 in k17195 in k17192 in k17189 in k17186 in k17183 in k15938 in k15869 in k15676 in k15673 in k15568 in k15517 in k7924 in k7921 in k5905 in k5612 in k5609 in k5605 in k5314 in k5311 in k5308 in k5305 */
static void C_ccall f_31634(C_word c,C_word t0,C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word ab[4],*a=ab;
if(c!=4) C_bad_argc_2(c,4,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr4,(void*)f_31634,4,t0,t1,t2,t3);}
t4=(C_word)C_i_cadr(t2);
t5=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_31650,a[2]=t1,a[3]=t4,tmp=(C_word)a,a+=4,tmp);
t6=(C_word)C_i_caddr(t2);
C_trace("ChickenBridge.scm: 369  remove-token-type");
f_17208(t5,t6,C_fix(256));}

/* k31648 in a31633 in k17417 in k17414 in k17411 in k17408 in k17269 in k17266 in k17263 in k17260 in k17204 in k17201 in k17198 in k17195 in k17192 in k17189 in k17186 in k17183 in k15938 in k15869 in k15676 in k15673 in k15568 in k15517 in k7924 in k7921 in k5905 in k5612 in k5609 in k5605 in k5314 in k5311 in k5308 in k5305 */
static void C_ccall f_31650(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[3],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_31650,2,t0,t1);}
t2=(C_word)C_a_i_cons(&a,2,((C_word*)t0)[3],t1);
C_trace("ChickenBridge.scm: 369  make-parse-unit");
f_15873(((C_word*)t0)[2],C_fix(33536),t2,C_SCHEME_FALSE);}

/* k31626 in k17417 in k17414 in k17411 in k17408 in k17269 in k17266 in k17263 in k17260 in k17204 in k17201 in k17198 in k17195 in k17192 in k17189 in k17186 in k17183 in k15938 in k15869 in k15676 in k15673 in k15568 in k15517 in k7924 in k7921 in k5905 in k5612 in k5609 in k5605 in k5314 in k5311 in k5308 in k5305 */
static void C_ccall f_31628(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 369  hash-table-set!");
t2=C_retrieve(lf[681]);
((C_proc5)C_retrieve_proc(t2))(5,t2,((C_word*)t0)[2],C_retrieve2(lf[277],"*rules*"),C_fix(33536),t1);}

/* k17420 in k17417 in k17414 in k17411 in k17408 in k17269 in k17266 in k17263 in k17260 in k17204 in k17201 in k17198 in k17195 in k17192 in k17189 in k17186 in k17183 in k15938 in k15869 in k15676 in k15673 in k15568 in k15517 in k7924 in k7921 in k5905 in k5612 in k5609 in k5605 in k5314 in k5311 in k5308 in k5305 */
static void C_ccall f_17422(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word ab[33],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_17422,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_17425,a[2]=((C_word*)t0)[2],tmp=(C_word)a,a+=3,tmp);
t3=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_31553,a[2]=t2,tmp=(C_word)a,a+=3,tmp);
t4=(C_word)C_a_i_cons(&a,2,C_fix(29696),C_SCHEME_END_OF_LIST);
t5=(C_word)C_a_i_cons(&a,2,C_fix(256),t4);
t6=(C_word)C_a_i_cons(&a,2,lf[95],t5);
t7=(C_word)C_a_i_cons(&a,2,t6,C_SCHEME_END_OF_LIST);
t8=(C_word)C_a_i_cons(&a,2,C_fix(29696),t7);
t9=(C_word)C_a_i_cons(&a,2,C_fix(16896),t8);
t10=(C_word)C_a_i_cons(&a,2,lf[310],t9);
t11=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_31559,a[2]=((C_word)li504),tmp=(C_word)a,a+=3,tmp);
t12=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_31581,a[2]=((C_word)li505),tmp=(C_word)a,a+=3,tmp);
C_trace("ChickenBridge.scm: 369  make-rule");
f_15572(t3,lf[776],C_fix(34560),t10,t11,t12);}

/* a31580 in k17420 in k17417 in k17414 in k17411 in k17408 in k17269 in k17266 in k17263 in k17260 in k17204 in k17201 in k17198 in k17195 in k17192 in k17189 in k17186 in k17183 in k15938 in k15869 in k15676 in k15673 in k15568 in k15517 in k7924 in k7921 in k5905 in k5612 in k5609 in k5605 in k5314 in k5311 in k5308 in k5305 */
static void C_ccall f_31581(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4){
C_word tmp;
C_word t5;
C_word t6;
C_word ab[5],*a=ab;
if(c!=5) C_bad_argc_2(c,5,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr5,(void*)f_31581,5,t0,t1,t2,t3,t4);}
t5=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_31585,a[2]=t4,a[3]=t3,a[4]=t1,tmp=(C_word)a,a+=5,tmp);
C_trace("ChickenBridge.scm: 369  parse-unit-parsed");
f_15912(t5,t2);}

/* k31583 in a31580 in k17420 in k17417 in k17414 in k17411 in k17408 in k17269 in k17266 in k17263 in k17260 in k17204 in k17201 in k17198 in k17195 in k17192 in k17189 in k17186 in k17183 in k15938 in k15869 in k15676 in k15673 in k15568 in k15517 in k7924 in k7921 in k5905 in k5612 in k5609 in k5605 in k5314 in k5311 in k5308 in k5305 */
static void C_ccall f_31585(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[3],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_31585,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_31592,a[2]=((C_word*)t0)[4],tmp=(C_word)a,a+=3,tmp);
C_trace("ChickenBridge.scm: 369  emit");
f_16030(t2,t1,((C_word*)t0)[3],((C_word*)t0)[2]);}

/* k31590 in k31583 in a31580 in k17420 in k17417 in k17414 in k17411 in k17408 in k17269 in k17266 in k17263 in k17260 in k17204 in k17201 in k17198 in k17195 in k17192 in k17189 in k17186 in k17183 in k15938 in k15869 in k15676 in k15673 in k15568 in k15517 in k7924 in k7921 in k5905 in k5612 in k5609 in k5605 in k5314 in k5311 in k5308 in k5305 */
static void C_ccall f_31592(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word ab[3],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_31592,2,t0,t1);}
t2=((C_word*)t0)[2];
((C_proc2)(void*)(*((C_word*)t2+1)))(2,t2,(C_word)C_a_i_cons(&a,2,lf[645],t1));}

/* a31558 in k17420 in k17417 in k17414 in k17411 in k17408 in k17269 in k17266 in k17263 in k17260 in k17204 in k17201 in k17198 in k17195 in k17192 in k17189 in k17186 in k17183 in k15938 in k15869 in k15676 in k15673 in k15568 in k15517 in k7924 in k7921 in k5905 in k5612 in k5609 in k5605 in k5314 in k5311 in k5308 in k5305 */
static void C_ccall f_31559(C_word c,C_word t0,C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word ab[4],*a=ab;
if(c!=4) C_bad_argc_2(c,4,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr4,(void*)f_31559,4,t0,t1,t2,t3);}
t4=(C_word)C_i_cadr(t2);
t5=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_31575,a[2]=t1,a[3]=t4,tmp=(C_word)a,a+=4,tmp);
t6=(C_word)C_i_caddr(t2);
C_trace("ChickenBridge.scm: 369  remove-token-type");
f_17208(t5,t6,C_fix(256));}

/* k31573 in a31558 in k17420 in k17417 in k17414 in k17411 in k17408 in k17269 in k17266 in k17263 in k17260 in k17204 in k17201 in k17198 in k17195 in k17192 in k17189 in k17186 in k17183 in k15938 in k15869 in k15676 in k15673 in k15568 in k15517 in k7924 in k7921 in k5905 in k5612 in k5609 in k5605 in k5314 in k5311 in k5308 in k5305 */
static void C_ccall f_31575(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[3],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_31575,2,t0,t1);}
t2=(C_word)C_a_i_cons(&a,2,((C_word*)t0)[3],t1);
C_trace("ChickenBridge.scm: 369  make-parse-unit");
f_15873(((C_word*)t0)[2],C_fix(34560),t2,C_SCHEME_FALSE);}

/* k31551 in k17420 in k17417 in k17414 in k17411 in k17408 in k17269 in k17266 in k17263 in k17260 in k17204 in k17201 in k17198 in k17195 in k17192 in k17189 in k17186 in k17183 in k15938 in k15869 in k15676 in k15673 in k15568 in k15517 in k7924 in k7921 in k5905 in k5612 in k5609 in k5605 in k5314 in k5311 in k5308 in k5305 */
static void C_ccall f_31553(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 369  hash-table-set!");
t2=C_retrieve(lf[681]);
((C_proc5)C_retrieve_proc(t2))(5,t2,((C_word*)t0)[2],C_retrieve2(lf[277],"*rules*"),C_fix(34560),t1);}

/* k17423 in k17420 in k17417 in k17414 in k17411 in k17408 in k17269 in k17266 in k17263 in k17260 in k17204 in k17201 in k17198 in k17195 in k17192 in k17189 in k17186 in k17183 in k15938 in k15869 in k15676 in k15673 in k15568 in k15517 in k7924 in k7921 in k5905 in k5612 in k5609 in k5605 in k5314 in k5311 in k5308 in k5305 */
static void C_ccall f_17425(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word t14;
C_word t15;
C_word t16;
C_word t17;
C_word t18;
C_word t19;
C_word t20;
C_word t21;
C_word t22;
C_word t23;
C_word t24;
C_word ab[66],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_17425,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_17428,a[2]=((C_word*)t0)[2],tmp=(C_word)a,a+=3,tmp);
t3=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_31354,a[2]=t2,tmp=(C_word)a,a+=3,tmp);
t4=(C_word)C_a_i_cons(&a,2,C_fix(25088),C_SCHEME_END_OF_LIST);
t5=(C_word)C_a_i_cons(&a,2,C_fix(2304),t4);
t6=(C_word)C_a_i_cons(&a,2,lf[311],t5);
t7=(C_word)C_a_i_cons(&a,2,C_fix(28672),C_SCHEME_END_OF_LIST);
t8=(C_word)C_a_i_cons(&a,2,C_fix(256),t7);
t9=(C_word)C_a_i_cons(&a,2,C_fix(28416),t8);
t10=(C_word)C_a_i_cons(&a,2,lf[310],t9);
t11=(C_word)C_a_i_cons(&a,2,C_fix(28672),C_SCHEME_END_OF_LIST);
t12=(C_word)C_a_i_cons(&a,2,C_fix(28416),t11);
t13=(C_word)C_a_i_cons(&a,2,t10,t12);
t14=(C_word)C_a_i_cons(&a,2,lf[311],t13);
t15=(C_word)C_a_i_cons(&a,2,t14,C_SCHEME_END_OF_LIST);
t16=(C_word)C_a_i_cons(&a,2,C_fix(256),t15);
t17=(C_word)C_a_i_cons(&a,2,lf[325],t16);
t18=(C_word)C_a_i_cons(&a,2,t17,C_SCHEME_END_OF_LIST);
t19=(C_word)C_a_i_cons(&a,2,t6,t18);
t20=(C_word)C_a_i_cons(&a,2,C_fix(16384),t19);
t21=(C_word)C_a_i_cons(&a,2,lf[310],t20);
t22=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_31360,a[2]=((C_word)li501),tmp=(C_word)a,a+=3,tmp);
t23=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_31421,a[2]=((C_word)li503),tmp=(C_word)a,a+=3,tmp);
C_trace("ChickenBridge.scm: 369  make-rule");
f_15572(t3,lf[775],C_fix(34304),t21,t22,t23);}

/* a31420 in k17423 in k17420 in k17417 in k17414 in k17411 in k17408 in k17269 in k17266 in k17263 in k17260 in k17204 in k17201 in k17198 in k17195 in k17192 in k17189 in k17186 in k17183 in k15938 in k15869 in k15676 in k15673 in k15568 in k15517 in k7924 in k7921 in k5905 in k5612 in k5609 in k5605 in k5314 in k5311 in k5308 in k5305 */
static void C_ccall f_31421(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4){
C_word tmp;
C_word t5;
C_word t6;
C_word t7;
C_word ab[10],*a=ab;
if(c!=5) C_bad_argc_2(c,5,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr5,(void*)f_31421,5,t0,t1,t2,t3,t4);}
t5=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_31425,a[2]=t1,a[3]=t2,a[4]=t4,tmp=(C_word)a,a+=5,tmp);
t6=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_31461,a[2]=t4,a[3]=t3,a[4]=t5,tmp=(C_word)a,a+=5,tmp);
C_trace("ChickenBridge.scm: 369  parse-unit-parsed");
f_15912(t6,t2);}

/* k31459 in a31420 in k17423 in k17420 in k17417 in k17414 in k17411 in k17408 in k17269 in k17266 in k17263 in k17260 in k17204 in k17201 in k17198 in k17195 in k17192 in k17189 in k17186 in k17183 in k15938 in k15869 in k15676 in k15673 in k15568 in k15517 in k7924 in k7921 in k5905 in k5612 in k5609 in k5605 in k5314 in k5311 in k5308 in k5305 */
static void C_ccall f_31461(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 369  emit");
f_16030(((C_word*)t0)[4],t1,((C_word*)t0)[3],((C_word*)t0)[2]);}

/* k31423 in a31420 in k17423 in k17420 in k17417 in k17414 in k17411 in k17408 in k17269 in k17266 in k17263 in k17260 in k17204 in k17201 in k17198 in k17195 in k17192 in k17189 in k17186 in k17183 in k15938 in k15869 in k15676 in k15673 in k15568 in k15517 in k7924 in k7921 in k5905 in k5612 in k5609 in k5605 in k5314 in k5311 in k5308 in k5305 */
static void C_ccall f_31425(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[5],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_31425,2,t0,t1);}
t2=(C_word)C_i_car(t1);
t3=(C_word)C_i_car(t1);
t4=(C_word)C_i_cdr(t1);
t5=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_31441,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word)li502),tmp=(C_word)a,a+=5,tmp);
C_trace("ChickenBridge.scm: 369  expand-send");
t6=C_retrieve(lf[30]);
((C_proc5)C_retrieve_proc(t6))(5,t6,((C_word*)t0)[2],t3,t4,t5);}

/* a31440 in k31423 in a31420 in k17423 in k17420 in k17417 in k17414 in k17411 in k17408 in k17269 in k17266 in k17263 in k17260 in k17204 in k17201 in k17198 in k17195 in k17192 in k17189 in k17186 in k17183 in k15938 in k15869 in k15676 in k15673 in k15568 in k15517 in k7924 in k7921 in k5905 in k5612 in k5609 in k5605 in k5314 in k5311 in k5308 in k5305 */
static void C_ccall f_31441(C_word c,C_word t0,C_word t1,C_word t2,...){
C_word tmp;
C_word t3;
va_list v;
C_word *a,c2=c;
C_save_rest(t2,c2,3);
if(c<3) C_bad_min_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_demand(c*C_SIZEOF_PAIR+8)){
C_save_and_reclaim((void*)tr3r,(void*)f_31441r,3,t0,t1,t2);}
else{
a=C_alloc((c-3)*3);
t3=C_restore_rest(a,C_rest_count(0));
f_31441r(t0,t1,t2,t3);}}

static void C_ccall f_31441r(C_word t0,C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word t6;
C_word *a=C_alloc(8);
t4=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_31449,a[2]=t1,a[3]=((C_word*)t0)[3],tmp=(C_word)a,a+=4,tmp);
t5=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_31453,a[2]=((C_word*)t0)[2],a[3]=t4,tmp=(C_word)a,a+=4,tmp);
C_apply(5,0,t5,C_retrieve(lf[31]),t2,t3);}

/* k31451 in a31440 in k31423 in a31420 in k17423 in k17420 in k17417 in k17414 in k17411 in k17408 in k17269 in k17266 in k17263 in k17260 in k17204 in k17201 in k17198 in k17195 in k17192 in k17189 in k17186 in k17183 in k15938 in k15869 in k15676 in k15673 in k15568 in k15517 in k7924 in k7921 in k5905 in k5612 in k5609 in k5605 in k5314 in k5311 in k5308 in k5305 */
static void C_ccall f_31453(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[4],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_31453,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_31457,a[2]=t1,a[3]=((C_word*)t0)[3],tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 369  parse-unit-position");
f_15930(t2,((C_word*)t0)[2]);}

/* k31455 in k31451 in a31440 in k31423 in a31420 in k17423 in k17420 in k17417 in k17414 in k17411 in k17408 in k17269 in k17266 in k17263 in k17260 in k17204 in k17201 in k17198 in k17195 in k17192 in k17189 in k17186 in k17183 in k15938 in k15869 in k15676 in k15673 in k15568 in k15517 in k7924 in k7921 in k5905 in k5612 in k5609 in k5605 in k5314 in k5311 in k5308 in k5305 */
static void C_ccall f_31457(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 369  make-parse-error");
f_15822(((C_word*)t0)[3],((C_word*)t0)[2],t1);}

/* k31447 in a31440 in k31423 in a31420 in k17423 in k17420 in k17417 in k17414 in k17411 in k17408 in k17269 in k17266 in k17263 in k17260 in k17204 in k17201 in k17198 in k17195 in k17192 in k17189 in k17186 in k17183 in k15938 in k15869 in k15676 in k15673 in k15568 in k15517 in k7924 in k7921 in k5905 in k5612 in k5609 in k5605 in k5314 in k5311 in k5308 in k5305 */
static void C_ccall f_31449(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 369  errf");
t2=((C_word*)t0)[3];
((C_proc3)C_retrieve_proc(t2))(3,t2,((C_word*)t0)[2],t1);}

/* a31359 in k17423 in k17420 in k17417 in k17414 in k17411 in k17408 in k17269 in k17266 in k17263 in k17260 in k17204 in k17201 in k17198 in k17195 in k17192 in k17189 in k17186 in k17183 in k15938 in k15869 in k15676 in k15673 in k15568 in k15517 in k7924 in k7921 in k5905 in k5612 in k5609 in k5605 in k5314 in k5311 in k5308 in k5305 */
static void C_ccall f_31360(C_word c,C_word t0,C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word t14;
C_word t15;
C_word t16;
C_word ab[11],*a=ab;
if(c!=4) C_bad_argc_2(c,4,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr4,(void*)f_31360,4,t0,t1,t2,t3);}
t4=(C_word)C_i_caddr(t2);
t5=t4;
t6=(*a=C_VECTOR_TYPE|1,a[1]=t5,tmp=(C_word)a,a+=2,tmp);
t7=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_31367,a[2]=t1,a[3]=t6,a[4]=t2,tmp=(C_word)a,a+=5,tmp);
t8=((C_word*)t6)[1];
if(C_truep(t8)){
t9=(C_word)C_i_cadr(((C_word*)t6)[1]);
t10=C_set_block_item(t6,0,t9);
t11=(C_word)C_i_car(((C_word*)t6)[1]);
if(C_truep((C_word)C_i_pairp(t11))){
t12=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_31407,a[2]=t7,a[3]=t6,tmp=(C_word)a,a+=4,tmp);
t13=(C_word)C_i_car(((C_word*)t6)[1]);
t14=(C_word)C_i_caddr(((C_word*)t6)[1]);
C_trace("ChickenBridge.scm: 369  append");
t15=*((C_word*)lf[18]+1);
((C_proc4)C_retrieve_proc(t15))(4,t15,t12,t13,t14);}
else{
t12=t7;
f_31367(t12,C_SCHEME_UNDEFINED);}}
else{
t9=C_set_block_item(t6,0,C_SCHEME_END_OF_LIST);
t10=t7;
f_31367(t10,t9);}}

/* k31405 in a31359 in k17423 in k17420 in k17417 in k17414 in k17411 in k17408 in k17269 in k17266 in k17263 in k17260 in k17204 in k17201 in k17198 in k17195 in k17192 in k17189 in k17186 in k17183 in k15938 in k15869 in k15676 in k15673 in k15568 in k15517 in k7924 in k7921 in k5905 in k5612 in k5609 in k5605 in k5314 in k5311 in k5308 in k5305 */
static void C_ccall f_31407(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[3])+1,t1);
t3=((C_word*)t0)[2];
f_31367(t3,t2);}

/* k31365 in a31359 in k17423 in k17420 in k17417 in k17414 in k17411 in k17408 in k17269 in k17266 in k17263 in k17260 in k17204 in k17201 in k17198 in k17195 in k17192 in k17189 in k17186 in k17183 in k15938 in k15869 in k15676 in k15673 in k15568 in k15517 in k7924 in k7921 in k5905 in k5612 in k5609 in k5605 in k5314 in k5311 in k5308 in k5305 */
static void C_fcall f_31367(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_31367,NULL,2,t0,t1);}
t2=(C_word)C_i_cadr(((C_word*)t0)[4]);
t3=(C_word)C_a_i_cons(&a,2,t2,((C_word*)((C_word*)t0)[3])[1]);
t4=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_31378,a[2]=t3,a[3]=((C_word*)t0)[2],tmp=(C_word)a,a+=4,tmp);
t5=(C_word)C_i_car(((C_word*)t0)[4]);
C_trace("ChickenBridge.scm: 369  parse-unit-position");
f_15930(t4,t5);}

/* k31376 in k31365 in a31359 in k17423 in k17420 in k17417 in k17414 in k17411 in k17408 in k17269 in k17266 in k17263 in k17260 in k17204 in k17201 in k17198 in k17195 in k17192 in k17189 in k17186 in k17183 in k15938 in k15869 in k15676 in k15673 in k15568 in k15517 in k7924 in k7921 in k5905 in k5612 in k5609 in k5605 in k5314 in k5311 in k5308 in k5305 */
static void C_ccall f_31378(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 369  make-parse-unit");
f_15873(((C_word*)t0)[3],C_fix(34304),((C_word*)t0)[2],t1);}

/* k31352 in k17423 in k17420 in k17417 in k17414 in k17411 in k17408 in k17269 in k17266 in k17263 in k17260 in k17204 in k17201 in k17198 in k17195 in k17192 in k17189 in k17186 in k17183 in k15938 in k15869 in k15676 in k15673 in k15568 in k15517 in k7924 in k7921 in k5905 in k5612 in k5609 in k5605 in k5314 in k5311 in k5308 in k5305 */
static void C_ccall f_31354(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 369  hash-table-set!");
t2=C_retrieve(lf[681]);
((C_proc5)C_retrieve_proc(t2))(5,t2,((C_word*)t0)[2],C_retrieve2(lf[277],"*rules*"),C_fix(34304),t1);}

/* k17426 in k17423 in k17420 in k17417 in k17414 in k17411 in k17408 in k17269 in k17266 in k17263 in k17260 in k17204 in k17201 in k17198 in k17195 in k17192 in k17189 in k17186 in k17183 in k15938 in k15869 in k15676 in k15673 in k15568 in k15517 in k7924 in k7921 in k5905 in k5612 in k5609 in k5605 in k5314 in k5311 in k5308 in k5305 */
static void C_ccall f_17428(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word ab[18],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_17428,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_17431,a[2]=((C_word*)t0)[2],tmp=(C_word)a,a+=3,tmp);
t3=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_31328,a[2]=t2,tmp=(C_word)a,a+=3,tmp);
t4=(C_word)C_a_i_cons(&a,2,C_fix(29696),C_SCHEME_END_OF_LIST);
t5=(C_word)C_a_i_cons(&a,2,C_fix(14080),t4);
t6=(C_word)C_a_i_cons(&a,2,lf[310],t5);
t7=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_31334,a[2]=((C_word)li500),tmp=(C_word)a,a+=3,tmp);
C_trace("ChickenBridge.scm: 369  make-rule");
f_15572(t3,lf[774],C_fix(33792),t6,t7,C_SCHEME_FALSE);}

/* a31333 in k17426 in k17423 in k17420 in k17417 in k17414 in k17411 in k17408 in k17269 in k17266 in k17263 in k17260 in k17204 in k17201 in k17198 in k17195 in k17192 in k17189 in k17186 in k17183 in k15938 in k15869 in k15676 in k15673 in k15568 in k15517 in k7924 in k7921 in k5905 in k5612 in k5609 in k5605 in k5314 in k5311 in k5308 in k5305 */
static void C_ccall f_31334(C_word c,C_word t0,C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word *a;
if(c!=4) C_bad_argc_2(c,4,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr4,(void*)f_31334,4,t0,t1,t2,t3);}
t4=t1;
((C_proc2)(void*)(*((C_word*)t4+1)))(2,t4,(C_word)C_i_cadr(t2));}

/* k31326 in k17426 in k17423 in k17420 in k17417 in k17414 in k17411 in k17408 in k17269 in k17266 in k17263 in k17260 in k17204 in k17201 in k17198 in k17195 in k17192 in k17189 in k17186 in k17183 in k15938 in k15869 in k15676 in k15673 in k15568 in k15517 in k7924 in k7921 in k5905 in k5612 in k5609 in k5605 in k5314 in k5311 in k5308 in k5305 */
static void C_ccall f_31328(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 369  hash-table-set!");
t2=C_retrieve(lf[681]);
((C_proc5)C_retrieve_proc(t2))(5,t2,((C_word*)t0)[2],C_retrieve2(lf[277],"*rules*"),C_fix(33792),t1);}

/* k17429 in k17426 in k17423 in k17420 in k17417 in k17414 in k17411 in k17408 in k17269 in k17266 in k17263 in k17260 in k17204 in k17201 in k17198 in k17195 in k17192 in k17189 in k17186 in k17183 in k15938 in k15869 in k15676 in k15673 in k15568 in k15517 in k7924 in k7921 in k5905 in k5612 in k5609 in k5605 in k5314 in k5311 in k5308 in k5305 */
static void C_ccall f_17431(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word ab[19],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_17431,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_17434,a[2]=((C_word*)t0)[2],tmp=(C_word)a,a+=3,tmp);
t3=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_31300,a[2]=t2,tmp=(C_word)a,a+=3,tmp);
t4=(C_word)C_a_i_cons(&a,2,C_fix(29696),C_SCHEME_END_OF_LIST);
t5=(C_word)C_a_i_cons(&a,2,C_fix(14592),t4);
t6=(C_word)C_a_i_cons(&a,2,lf[310],t5);
t7=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_31308,a[2]=t6,a[3]=t3,tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 369  simple-unit-parser");
f_16271(t7,C_fix(35072));}

/* k31306 in k17429 in k17426 in k17423 in k17420 in k17417 in k17414 in k17411 in k17408 in k17269 in k17266 in k17263 in k17260 in k17204 in k17201 in k17198 in k17195 in k17192 in k17189 in k17186 in k17183 in k15938 in k15869 in k15676 in k15673 in k15568 in k15517 in k7924 in k7921 in k5905 in k5612 in k5609 in k5605 in k5314 in k5311 in k5308 in k5305 */
static void C_ccall f_31308(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[5],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_31308,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_31312,a[2]=t1,a[3]=((C_word*)t0)[2],a[4]=((C_word*)t0)[3],tmp=(C_word)a,a+=5,tmp);
C_trace("ChickenBridge.scm: 369  simple-unit-emitter");
f_16279(t2,lf[370]);}

/* k31310 in k31306 in k17429 in k17426 in k17423 in k17420 in k17417 in k17414 in k17411 in k17408 in k17269 in k17266 in k17263 in k17260 in k17204 in k17201 in k17198 in k17195 in k17192 in k17189 in k17186 in k17183 in k15938 in k15869 in k15676 in k15673 in k15568 in k15517 in k7924 in k7921 in k5905 in k5612 in k5609 in k5605 in k5314 in k5311 in k5308 in k5305 */
static void C_ccall f_31312(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 369  make-rule");
f_15572(((C_word*)t0)[4],lf[773],C_fix(35072),((C_word*)t0)[3],((C_word*)t0)[2],t1);}

/* k31298 in k17429 in k17426 in k17423 in k17420 in k17417 in k17414 in k17411 in k17408 in k17269 in k17266 in k17263 in k17260 in k17204 in k17201 in k17198 in k17195 in k17192 in k17189 in k17186 in k17183 in k15938 in k15869 in k15676 in k15673 in k15568 in k15517 in k7924 in k7921 in k5905 in k5612 in k5609 in k5605 in k5314 in k5311 in k5308 in k5305 */
static void C_ccall f_31300(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 369  hash-table-set!");
t2=C_retrieve(lf[681]);
((C_proc5)C_retrieve_proc(t2))(5,t2,((C_word*)t0)[2],C_retrieve2(lf[277],"*rules*"),C_fix(35072),t1);}

/* k17432 in k17429 in k17426 in k17423 in k17420 in k17417 in k17414 in k17411 in k17408 in k17269 in k17266 in k17263 in k17260 in k17204 in k17201 in k17198 in k17195 in k17192 in k17189 in k17186 in k17183 in k15938 in k15869 in k15676 in k15673 in k15568 in k15517 in k7924 in k7921 in k5905 in k5612 in k5609 in k5605 in k5314 in k5311 in k5308 in k5305 */
static void C_ccall f_17434(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word ab[19],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_17434,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_17437,a[2]=((C_word*)t0)[2],tmp=(C_word)a,a+=3,tmp);
t3=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_31272,a[2]=t2,tmp=(C_word)a,a+=3,tmp);
t4=(C_word)C_a_i_cons(&a,2,C_fix(29696),C_SCHEME_END_OF_LIST);
t5=(C_word)C_a_i_cons(&a,2,C_fix(13568),t4);
t6=(C_word)C_a_i_cons(&a,2,lf[310],t5);
t7=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_31280,a[2]=t6,a[3]=t3,tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 369  simple-unit-parser");
f_16271(t7,C_fix(35584));}

/* k31278 in k17432 in k17429 in k17426 in k17423 in k17420 in k17417 in k17414 in k17411 in k17408 in k17269 in k17266 in k17263 in k17260 in k17204 in k17201 in k17198 in k17195 in k17192 in k17189 in k17186 in k17183 in k15938 in k15869 in k15676 in k15673 in k15568 in k15517 in k7924 in k7921 in k5905 in k5612 in k5609 in k5605 in k5314 in k5311 in k5308 in k5305 */
static void C_ccall f_31280(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[5],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_31280,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_31284,a[2]=t1,a[3]=((C_word*)t0)[2],a[4]=((C_word*)t0)[3],tmp=(C_word)a,a+=5,tmp);
C_trace("ChickenBridge.scm: 369  simple-unit-emitter");
f_16279(t2,lf[369]);}

/* k31282 in k31278 in k17432 in k17429 in k17426 in k17423 in k17420 in k17417 in k17414 in k17411 in k17408 in k17269 in k17266 in k17263 in k17260 in k17204 in k17201 in k17198 in k17195 in k17192 in k17189 in k17186 in k17183 in k15938 in k15869 in k15676 in k15673 in k15568 in k15517 in k7924 in k7921 in k5905 in k5612 in k5609 in k5605 in k5314 in k5311 in k5308 in k5305 */
static void C_ccall f_31284(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 369  make-rule");
f_15572(((C_word*)t0)[4],lf[772],C_fix(35584),((C_word*)t0)[3],((C_word*)t0)[2],t1);}

/* k31270 in k17432 in k17429 in k17426 in k17423 in k17420 in k17417 in k17414 in k17411 in k17408 in k17269 in k17266 in k17263 in k17260 in k17204 in k17201 in k17198 in k17195 in k17192 in k17189 in k17186 in k17183 in k15938 in k15869 in k15676 in k15673 in k15568 in k15517 in k7924 in k7921 in k5905 in k5612 in k5609 in k5605 in k5314 in k5311 in k5308 in k5305 */
static void C_ccall f_31272(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 369  hash-table-set!");
t2=C_retrieve(lf[681]);
((C_proc5)C_retrieve_proc(t2))(5,t2,((C_word*)t0)[2],C_retrieve2(lf[277],"*rules*"),C_fix(35584),t1);}

/* k17435 in k17432 in k17429 in k17426 in k17423 in k17420 in k17417 in k17414 in k17411 in k17408 in k17269 in k17266 in k17263 in k17260 in k17204 in k17201 in k17198 in k17195 in k17192 in k17189 in k17186 in k17183 in k15938 in k15869 in k15676 in k15673 in k15568 in k15517 in k7924 in k7921 in k5905 in k5612 in k5609 in k5605 in k5314 in k5311 in k5308 in k5305 */
static void C_ccall f_17437(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word ab[19],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_17437,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_17440,a[2]=((C_word*)t0)[2],tmp=(C_word)a,a+=3,tmp);
t3=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_31244,a[2]=t2,tmp=(C_word)a,a+=3,tmp);
t4=(C_word)C_a_i_cons(&a,2,C_fix(29696),C_SCHEME_END_OF_LIST);
t5=(C_word)C_a_i_cons(&a,2,C_fix(17152),t4);
t6=(C_word)C_a_i_cons(&a,2,lf[310],t5);
t7=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_31252,a[2]=t6,a[3]=t3,tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 369  simple-unit-parser");
f_16271(t7,C_fix(35328));}

/* k31250 in k17435 in k17432 in k17429 in k17426 in k17423 in k17420 in k17417 in k17414 in k17411 in k17408 in k17269 in k17266 in k17263 in k17260 in k17204 in k17201 in k17198 in k17195 in k17192 in k17189 in k17186 in k17183 in k15938 in k15869 in k15676 in k15673 in k15568 in k15517 in k7924 in k7921 in k5905 in k5612 in k5609 in k5605 in k5314 in k5311 in k5308 in k5305 */
static void C_ccall f_31252(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[5],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_31252,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_31256,a[2]=t1,a[3]=((C_word*)t0)[2],a[4]=((C_word*)t0)[3],tmp=(C_word)a,a+=5,tmp);
C_trace("ChickenBridge.scm: 369  simple-unit-emitter");
f_16279(t2,lf[771]);}

/* k31254 in k31250 in k17435 in k17432 in k17429 in k17426 in k17423 in k17420 in k17417 in k17414 in k17411 in k17408 in k17269 in k17266 in k17263 in k17260 in k17204 in k17201 in k17198 in k17195 in k17192 in k17189 in k17186 in k17183 in k15938 in k15869 in k15676 in k15673 in k15568 in k15517 in k7924 in k7921 in k5905 in k5612 in k5609 in k5605 in k5314 in k5311 in k5308 in k5305 */
static void C_ccall f_31256(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 369  make-rule");
f_15572(((C_word*)t0)[4],lf[770],C_fix(35328),((C_word*)t0)[3],((C_word*)t0)[2],t1);}

/* k31242 in k17435 in k17432 in k17429 in k17426 in k17423 in k17420 in k17417 in k17414 in k17411 in k17408 in k17269 in k17266 in k17263 in k17260 in k17204 in k17201 in k17198 in k17195 in k17192 in k17189 in k17186 in k17183 in k15938 in k15869 in k15676 in k15673 in k15568 in k15517 in k7924 in k7921 in k5905 in k5612 in k5609 in k5605 in k5314 in k5311 in k5308 in k5305 */
static void C_ccall f_31244(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 369  hash-table-set!");
t2=C_retrieve(lf[681]);
((C_proc5)C_retrieve_proc(t2))(5,t2,((C_word*)t0)[2],C_retrieve2(lf[277],"*rules*"),C_fix(35328),t1);}

/* k17438 in k17435 in k17432 in k17429 in k17426 in k17423 in k17420 in k17417 in k17414 in k17411 in k17408 in k17269 in k17266 in k17263 in k17260 in k17204 in k17201 in k17198 in k17195 in k17192 in k17189 in k17186 in k17183 in k15938 in k15869 in k15676 in k15673 in k15568 in k15517 in k7924 in k7921 in k5905 in k5612 in k5609 in k5605 in k5314 in k5311 in k5308 in k5305 */
static void C_ccall f_17440(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word ab[19],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_17440,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_17443,a[2]=((C_word*)t0)[2],tmp=(C_word)a,a+=3,tmp);
t3=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_31216,a[2]=t2,tmp=(C_word)a,a+=3,tmp);
t4=(C_word)C_a_i_cons(&a,2,C_fix(29696),C_SCHEME_END_OF_LIST);
t5=(C_word)C_a_i_cons(&a,2,C_fix(18432),t4);
t6=(C_word)C_a_i_cons(&a,2,lf[310],t5);
t7=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_31224,a[2]=t6,a[3]=t3,tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 369  simple-unit-parser");
f_16271(t7,C_fix(34816));}

/* k31222 in k17438 in k17435 in k17432 in k17429 in k17426 in k17423 in k17420 in k17417 in k17414 in k17411 in k17408 in k17269 in k17266 in k17263 in k17260 in k17204 in k17201 in k17198 in k17195 in k17192 in k17189 in k17186 in k17183 in k15938 in k15869 in k15676 in k15673 in k15568 in k15517 in k7924 in k7921 in k5905 in k5612 in k5609 in k5605 in k5314 in k5311 in k5308 in k5305 */
static void C_ccall f_31224(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[5],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_31224,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_31228,a[2]=t1,a[3]=((C_word*)t0)[2],a[4]=((C_word*)t0)[3],tmp=(C_word)a,a+=5,tmp);
C_trace("ChickenBridge.scm: 369  simple-unit-emitter");
f_16279(t2,lf[380]);}

/* k31226 in k31222 in k17438 in k17435 in k17432 in k17429 in k17426 in k17423 in k17420 in k17417 in k17414 in k17411 in k17408 in k17269 in k17266 in k17263 in k17260 in k17204 in k17201 in k17198 in k17195 in k17192 in k17189 in k17186 in k17183 in k15938 in k15869 in k15676 in k15673 in k15568 in k15517 in k7924 in k7921 in k5905 in k5612 in k5609 in k5605 in k5314 in k5311 in k5308 in k5305 */
static void C_ccall f_31228(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 369  make-rule");
f_15572(((C_word*)t0)[4],lf[769],C_fix(34816),((C_word*)t0)[3],((C_word*)t0)[2],t1);}

/* k31214 in k17438 in k17435 in k17432 in k17429 in k17426 in k17423 in k17420 in k17417 in k17414 in k17411 in k17408 in k17269 in k17266 in k17263 in k17260 in k17204 in k17201 in k17198 in k17195 in k17192 in k17189 in k17186 in k17183 in k15938 in k15869 in k15676 in k15673 in k15568 in k15517 in k7924 in k7921 in k5905 in k5612 in k5609 in k5605 in k5314 in k5311 in k5308 in k5305 */
static void C_ccall f_31216(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 369  hash-table-set!");
t2=C_retrieve(lf[681]);
((C_proc5)C_retrieve_proc(t2))(5,t2,((C_word*)t0)[2],C_retrieve2(lf[277],"*rules*"),C_fix(34816),t1);}

/* k17441 in k17438 in k17435 in k17432 in k17429 in k17426 in k17423 in k17420 in k17417 in k17414 in k17411 in k17408 in k17269 in k17266 in k17263 in k17260 in k17204 in k17201 in k17198 in k17195 in k17192 in k17189 in k17186 in k17183 in k15938 in k15869 in k15676 in k15673 in k15568 in k15517 in k7924 in k7921 in k5905 in k5612 in k5609 in k5605 in k5314 in k5311 in k5308 in k5305 */
static void C_ccall f_17443(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word t14;
C_word t15;
C_word t16;
C_word t17;
C_word t18;
C_word t19;
C_word t20;
C_word t21;
C_word t22;
C_word t23;
C_word t24;
C_word t25;
C_word ab[69],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_17443,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_17446,a[2]=((C_word*)t0)[2],tmp=(C_word)a,a+=3,tmp);
t3=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_31079,a[2]=t2,tmp=(C_word)a,a+=3,tmp);
t4=(C_word)C_a_i_cons(&a,2,C_fix(29696),C_SCHEME_END_OF_LIST);
t5=(C_word)C_a_i_cons(&a,2,C_fix(6144),t4);
t6=(C_word)C_a_i_cons(&a,2,lf[310],t5);
t7=(C_word)C_a_i_cons(&a,2,C_fix(29696),C_SCHEME_END_OF_LIST);
t8=(C_word)C_a_i_cons(&a,2,t6,t7);
t9=(C_word)C_a_i_cons(&a,2,lf[311],t8);
t10=(C_word)C_a_i_cons(&a,2,C_fix(29696),C_SCHEME_END_OF_LIST);
t11=(C_word)C_a_i_cons(&a,2,C_fix(6144),t10);
t12=(C_word)C_a_i_cons(&a,2,lf[310],t11);
t13=(C_word)C_a_i_cons(&a,2,C_fix(29696),C_SCHEME_END_OF_LIST);
t14=(C_word)C_a_i_cons(&a,2,t12,t13);
t15=(C_word)C_a_i_cons(&a,2,lf[311],t14);
t16=(C_word)C_a_i_cons(&a,2,t15,C_SCHEME_END_OF_LIST);
t17=(C_word)C_a_i_cons(&a,2,C_fix(256),t16);
t18=(C_word)C_a_i_cons(&a,2,lf[95],t17);
t19=(C_word)C_a_i_cons(&a,2,t18,C_SCHEME_END_OF_LIST);
t20=(C_word)C_a_i_cons(&a,2,t9,t19);
t21=(C_word)C_a_i_cons(&a,2,C_fix(15616),t20);
t22=(C_word)C_a_i_cons(&a,2,lf[310],t21);
t23=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_31085,a[2]=((C_word)li498),tmp=(C_word)a,a+=3,tmp);
t24=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_31115,a[2]=((C_word)li499),tmp=(C_word)a,a+=3,tmp);
C_trace("ChickenBridge.scm: 369  make-rule");
f_15572(t3,lf[768],C_fix(36096),t22,t23,t24);}

/* a31114 in k17441 in k17438 in k17435 in k17432 in k17429 in k17426 in k17423 in k17420 in k17417 in k17414 in k17411 in k17408 in k17269 in k17266 in k17263 in k17260 in k17204 in k17201 in k17198 in k17195 in k17192 in k17189 in k17186 in k17183 in k15938 in k15869 in k15676 in k15673 in k15568 in k15517 in k7924 in k7921 in k5905 in k5612 in k5609 in k5605 in k5314 in k5311 in k5308 in k5305 */
static void C_ccall f_31115(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4){
C_word tmp;
C_word t5;
C_word *a;
if(c!=5) C_bad_argc_2(c,5,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr5,(void*)f_31115,5,t0,t1,t2,t3,t4);}
t5=t1;
((C_proc2)(void*)(*((C_word*)t5+1)))(2,t5,lf[767]);}

/* a31084 in k17441 in k17438 in k17435 in k17432 in k17429 in k17426 in k17423 in k17420 in k17417 in k17414 in k17411 in k17408 in k17269 in k17266 in k17263 in k17260 in k17204 in k17201 in k17198 in k17195 in k17192 in k17189 in k17186 in k17183 in k15938 in k15869 in k15676 in k15673 in k15568 in k15517 in k7924 in k7921 in k5905 in k5612 in k5609 in k5605 in k5314 in k5311 in k5308 in k5305 */
static void C_ccall f_31085(C_word c,C_word t0,C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word ab[5],*a=ab;
if(c!=4) C_bad_argc_2(c,4,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr4,(void*)f_31085,4,t0,t1,t2,t3);}
t4=(C_word)C_i_car(t2);
t5=(C_word)C_i_cadr(t2);
t6=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_31109,a[2]=t1,a[3]=t4,a[4]=t5,tmp=(C_word)a,a+=5,tmp);
t7=(C_word)C_i_caddr(t2);
C_trace("ChickenBridge.scm: 369  remove-token-type");
f_17208(t6,t7,C_fix(256));}

/* k31107 in a31084 in k17441 in k17438 in k17435 in k17432 in k17429 in k17426 in k17423 in k17420 in k17417 in k17414 in k17411 in k17408 in k17269 in k17266 in k17263 in k17260 in k17204 in k17201 in k17198 in k17195 in k17192 in k17189 in k17186 in k17183 in k15938 in k15869 in k15676 in k15673 in k15568 in k15517 in k7924 in k7921 in k5905 in k5612 in k5609 in k5605 in k5314 in k5311 in k5308 in k5305 */
static void C_ccall f_31109(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[6],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_31109,2,t0,t1);}
t2=(C_word)C_a_i_cons(&a,2,((C_word*)t0)[4],t1);
t3=(C_word)C_a_i_cons(&a,2,((C_word*)t0)[3],t2);
C_trace("ChickenBridge.scm: 369  make-parse-unit");
f_15873(((C_word*)t0)[2],C_fix(36096),t3,C_SCHEME_FALSE);}

/* k31077 in k17441 in k17438 in k17435 in k17432 in k17429 in k17426 in k17423 in k17420 in k17417 in k17414 in k17411 in k17408 in k17269 in k17266 in k17263 in k17260 in k17204 in k17201 in k17198 in k17195 in k17192 in k17189 in k17186 in k17183 in k15938 in k15869 in k15676 in k15673 in k15568 in k15517 in k7924 in k7921 in k5905 in k5612 in k5609 in k5605 in k5314 in k5311 in k5308 in k5305 */
static void C_ccall f_31079(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 369  hash-table-set!");
t2=C_retrieve(lf[681]);
((C_proc5)C_retrieve_proc(t2))(5,t2,((C_word*)t0)[2],C_retrieve2(lf[277],"*rules*"),C_fix(36096),t1);}

/* k17444 in k17441 in k17438 in k17435 in k17432 in k17429 in k17426 in k17423 in k17420 in k17417 in k17414 in k17411 in k17408 in k17269 in k17266 in k17263 in k17260 in k17204 in k17201 in k17198 in k17195 in k17192 in k17189 in k17186 in k17183 in k15938 in k15869 in k15676 in k15673 in k15568 in k15517 in k7924 in k7921 in k5905 in k5612 in k5609 in k5605 in k5314 in k5311 in k5308 in k5305 */
static void C_ccall f_17446(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word ab[19],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_17446,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_17449,a[2]=((C_word*)t0)[2],tmp=(C_word)a,a+=3,tmp);
t3=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_31021,a[2]=t2,tmp=(C_word)a,a+=3,tmp);
t4=(C_word)C_a_i_cons(&a,2,C_fix(29696),C_SCHEME_END_OF_LIST);
t5=(C_word)C_a_i_cons(&a,2,C_fix(19712),t4);
t6=(C_word)C_a_i_cons(&a,2,lf[310],t5);
t7=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_31029,a[2]=t6,a[3]=t3,tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 369  simple-unit-parser");
f_16271(t7,C_fix(31744));}

/* k31027 in k17444 in k17441 in k17438 in k17435 in k17432 in k17429 in k17426 in k17423 in k17420 in k17417 in k17414 in k17411 in k17408 in k17269 in k17266 in k17263 in k17260 in k17204 in k17201 in k17198 in k17195 in k17192 in k17189 in k17186 in k17183 in k15938 in k15869 in k15676 in k15673 in k15568 in k15517 in k7924 in k7921 in k5905 in k5612 in k5609 in k5605 in k5314 in k5311 in k5308 in k5305 */
static void C_ccall f_31029(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[3],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_31029,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_31031,a[2]=((C_word)li497),tmp=(C_word)a,a+=3,tmp);
C_trace("ChickenBridge.scm: 369  make-rule");
f_15572(((C_word*)t0)[3],lf[766],C_fix(31744),((C_word*)t0)[2],t1,t2);}

/* a31030 in k31027 in k17444 in k17441 in k17438 in k17435 in k17432 in k17429 in k17426 in k17423 in k17420 in k17417 in k17414 in k17411 in k17408 in k17269 in k17266 in k17263 in k17260 in k17204 in k17201 in k17198 in k17195 in k17192 in k17189 in k17186 in k17183 in k15938 in k15869 in k15676 in k15673 in k15568 in k15517 in k7924 in k7921 in k5905 in k5612 in k5609 in k5605 in k5314 in k5311 in k5308 in k5305 */
static void C_ccall f_31031(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4){
C_word tmp;
C_word t5;
C_word t6;
C_word ab[5],*a=ab;
if(c!=5) C_bad_argc_2(c,5,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr5,(void*)f_31031,5,t0,t1,t2,t3,t4);}
t5=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_31035,a[2]=t4,a[3]=t3,a[4]=t1,tmp=(C_word)a,a+=5,tmp);
C_trace("ChickenBridge.scm: 369  parse-unit-parsed");
f_15912(t5,t2);}

/* k31033 in a31030 in k31027 in k17444 in k17441 in k17438 in k17435 in k17432 in k17429 in k17426 in k17423 in k17420 in k17417 in k17414 in k17411 in k17408 in k17269 in k17266 in k17263 in k17260 in k17204 in k17201 in k17198 in k17195 in k17192 in k17189 in k17186 in k17183 in k15938 in k15869 in k15676 in k15673 in k15568 in k15517 in k7924 in k7921 in k5905 in k5612 in k5609 in k5605 in k5314 in k5311 in k5308 in k5305 */
static void C_ccall f_31035(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[11],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_31035,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_31038,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=t1,a[5]=((C_word*)t0)[4],tmp=(C_word)a,a+=6,tmp);
t3=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_31063,a[2]=t1,a[3]=((C_word*)t0)[2],a[4]=t2,tmp=(C_word)a,a+=5,tmp);
C_trace("ChickenBridge.scm: 369  get-emit-info");
f_15990(t3,lf[745],((C_word*)t0)[3]);}

/* k31061 in k31033 in a31030 in k31027 in k17444 in k17441 in k17438 in k17435 in k17432 in k17429 in k17426 in k17423 in k17420 in k17417 in k17414 in k17411 in k17408 in k17269 in k17266 in k17263 in k17260 in k17204 in k17201 in k17198 in k17195 in k17192 in k17189 in k17186 in k17183 in k15938 in k15869 in k15676 in k15673 in k15568 in k15517 in k7924 in k7921 in k5905 in k5612 in k5609 in k5605 in k5314 in k5311 in k5308 in k5305 */
static void C_ccall f_31063(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_31063,2,t0,t1);}
if(C_truep(t1)){
t2=((C_word*)t0)[4];
f_31038(2,t2,C_SCHEME_UNDEFINED);}
else{
t2=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_31051,a[2]=((C_word*)t0)[4],a[3]=((C_word*)t0)[3],tmp=(C_word)a,a+=4,tmp);
t3=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_31055,a[2]=t2,tmp=(C_word)a,a+=3,tmp);
t4=(C_word)C_i_car(((C_word*)t0)[2]);
C_trace("ChickenBridge.scm: 369  parse-unit-position");
f_15930(t3,t4);}}

/* k31053 in k31061 in k31033 in a31030 in k31027 in k17444 in k17441 in k17438 in k17435 in k17432 in k17429 in k17426 in k17423 in k17420 in k17417 in k17414 in k17411 in k17408 in k17269 in k17266 in k17263 in k17260 in k17204 in k17201 in k17198 in k17195 in k17192 in k17189 in k17186 in k17183 in k15938 in k15869 in k15676 in k15673 in k15568 in k15517 in k7924 in k7921 in k5905 in k5612 in k5609 in k5605 in k5314 in k5311 in k5308 in k5305 */
static void C_ccall f_31055(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 369  make-parse-error");
f_15822(((C_word*)t0)[2],lf[765],t1);}

/* k31049 in k31061 in k31033 in a31030 in k31027 in k17444 in k17441 in k17438 in k17435 in k17432 in k17429 in k17426 in k17423 in k17420 in k17417 in k17414 in k17411 in k17408 in k17269 in k17266 in k17263 in k17260 in k17204 in k17201 in k17198 in k17195 in k17192 in k17189 in k17186 in k17183 in k15938 in k15869 in k15676 in k15673 in k15568 in k15517 in k7924 in k7921 in k5905 in k5612 in k5609 in k5605 in k5314 in k5311 in k5308 in k5305 */
static void C_ccall f_31051(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 369  errf");
t2=((C_word*)t0)[3];
((C_proc3)C_retrieve_proc(t2))(3,t2,((C_word*)t0)[2],t1);}

/* k31036 in k31033 in a31030 in k31027 in k17444 in k17441 in k17438 in k17435 in k17432 in k17429 in k17426 in k17423 in k17420 in k17417 in k17414 in k17411 in k17408 in k17269 in k17266 in k17263 in k17260 in k17204 in k17201 in k17198 in k17195 in k17192 in k17189 in k17186 in k17183 in k15938 in k15869 in k15676 in k15673 in k15568 in k15517 in k7924 in k7921 in k5905 in k5612 in k5609 in k5605 in k5314 in k5311 in k5308 in k5305 */
static void C_ccall f_31038(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 369  emit");
f_16030(((C_word*)t0)[5],((C_word*)t0)[4],((C_word*)t0)[3],((C_word*)t0)[2]);}

/* k31019 in k17444 in k17441 in k17438 in k17435 in k17432 in k17429 in k17426 in k17423 in k17420 in k17417 in k17414 in k17411 in k17408 in k17269 in k17266 in k17263 in k17260 in k17204 in k17201 in k17198 in k17195 in k17192 in k17189 in k17186 in k17183 in k15938 in k15869 in k15676 in k15673 in k15568 in k15517 in k7924 in k7921 in k5905 in k5612 in k5609 in k5605 in k5314 in k5311 in k5308 in k5305 */
static void C_ccall f_31021(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 369  hash-table-set!");
t2=C_retrieve(lf[681]);
((C_proc5)C_retrieve_proc(t2))(5,t2,((C_word*)t0)[2],C_retrieve2(lf[277],"*rules*"),C_fix(31744),t1);}

/* k17447 in k17444 in k17441 in k17438 in k17435 in k17432 in k17429 in k17426 in k17423 in k17420 in k17417 in k17414 in k17411 in k17408 in k17269 in k17266 in k17263 in k17260 in k17204 in k17201 in k17198 in k17195 in k17192 in k17189 in k17186 in k17183 in k15938 in k15869 in k15676 in k15673 in k15568 in k15517 in k7924 in k7921 in k5905 in k5612 in k5609 in k5605 in k5314 in k5311 in k5308 in k5305 */
static void C_ccall f_17449(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word ab[19],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_17449,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_17452,a[2]=((C_word*)t0)[2],tmp=(C_word)a,a+=3,tmp);
t3=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_30960,a[2]=t2,tmp=(C_word)a,a+=3,tmp);
t4=(C_word)C_a_i_cons(&a,2,C_fix(29696),C_SCHEME_END_OF_LIST);
t5=(C_word)C_a_i_cons(&a,2,C_fix(18688),t4);
t6=(C_word)C_a_i_cons(&a,2,lf[310],t5);
t7=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_30968,a[2]=t6,a[3]=t3,tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 369  simple-unit-parser");
f_16271(t7,C_fix(31488));}

/* k30966 in k17447 in k17444 in k17441 in k17438 in k17435 in k17432 in k17429 in k17426 in k17423 in k17420 in k17417 in k17414 in k17411 in k17408 in k17269 in k17266 in k17263 in k17260 in k17204 in k17201 in k17198 in k17195 in k17192 in k17189 in k17186 in k17183 in k15938 in k15869 in k15676 in k15673 in k15568 in k15517 in k7924 in k7921 in k5905 in k5612 in k5609 in k5605 in k5314 in k5311 in k5308 in k5305 */
static void C_ccall f_30968(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[3],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_30968,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_30970,a[2]=((C_word)li496),tmp=(C_word)a,a+=3,tmp);
C_trace("ChickenBridge.scm: 369  make-rule");
f_15572(((C_word*)t0)[3],lf[764],C_fix(31488),((C_word*)t0)[2],t1,t2);}

/* a30969 in k30966 in k17447 in k17444 in k17441 in k17438 in k17435 in k17432 in k17429 in k17426 in k17423 in k17420 in k17417 in k17414 in k17411 in k17408 in k17269 in k17266 in k17263 in k17260 in k17204 in k17201 in k17198 in k17195 in k17192 in k17189 in k17186 in k17183 in k15938 in k15869 in k15676 in k15673 in k15568 in k15517 in k7924 in k7921 in k5905 in k5612 in k5609 in k5605 in k5314 in k5311 in k5308 in k5305 */
static void C_ccall f_30970(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4){
C_word tmp;
C_word t5;
C_word t6;
C_word ab[5],*a=ab;
if(c!=5) C_bad_argc_2(c,5,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr5,(void*)f_30970,5,t0,t1,t2,t3,t4);}
t5=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_30974,a[2]=t4,a[3]=t3,a[4]=t1,tmp=(C_word)a,a+=5,tmp);
C_trace("ChickenBridge.scm: 369  parse-unit-parsed");
f_15912(t5,t2);}

/* k30972 in a30969 in k30966 in k17447 in k17444 in k17441 in k17438 in k17435 in k17432 in k17429 in k17426 in k17423 in k17420 in k17417 in k17414 in k17411 in k17408 in k17269 in k17266 in k17263 in k17260 in k17204 in k17201 in k17198 in k17195 in k17192 in k17189 in k17186 in k17183 in k15938 in k15869 in k15676 in k15673 in k15568 in k15517 in k7924 in k7921 in k5905 in k5612 in k5609 in k5605 in k5314 in k5311 in k5308 in k5305 */
static void C_ccall f_30974(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[11],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_30974,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_30977,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=t1,a[5]=((C_word*)t0)[4],tmp=(C_word)a,a+=6,tmp);
t3=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_31005,a[2]=t1,a[3]=((C_word*)t0)[2],a[4]=t2,tmp=(C_word)a,a+=5,tmp);
C_trace("ChickenBridge.scm: 369  get-emit-info");
f_15990(t3,lf[732],((C_word*)t0)[3]);}

/* k31003 in k30972 in a30969 in k30966 in k17447 in k17444 in k17441 in k17438 in k17435 in k17432 in k17429 in k17426 in k17423 in k17420 in k17417 in k17414 in k17411 in k17408 in k17269 in k17266 in k17263 in k17260 in k17204 in k17201 in k17198 in k17195 in k17192 in k17189 in k17186 in k17183 in k15938 in k15869 in k15676 in k15673 in k15568 in k15517 in k7924 in k7921 in k5905 in k5612 in k5609 in k5605 in k5314 in k5311 in k5308 in k5305 */
static void C_ccall f_31005(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_31005,2,t0,t1);}
if(C_truep(t1)){
t2=((C_word*)t0)[4];
f_30977(2,t2,C_SCHEME_UNDEFINED);}
else{
t2=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_30993,a[2]=((C_word*)t0)[4],a[3]=((C_word*)t0)[3],tmp=(C_word)a,a+=4,tmp);
t3=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_30997,a[2]=t2,tmp=(C_word)a,a+=3,tmp);
t4=(C_word)C_i_car(((C_word*)t0)[2]);
C_trace("ChickenBridge.scm: 369  parse-unit-position");
f_15930(t3,t4);}}

/* k30995 in k31003 in k30972 in a30969 in k30966 in k17447 in k17444 in k17441 in k17438 in k17435 in k17432 in k17429 in k17426 in k17423 in k17420 in k17417 in k17414 in k17411 in k17408 in k17269 in k17266 in k17263 in k17260 in k17204 in k17201 in k17198 in k17195 in k17192 in k17189 in k17186 in k17183 in k15938 in k15869 in k15676 in k15673 in k15568 in k15517 in k7924 in k7921 in k5905 in k5612 in k5609 in k5605 in k5314 in k5311 in k5308 in k5305 */
static void C_ccall f_30997(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 369  make-parse-error");
f_15822(((C_word*)t0)[2],lf[763],t1);}

/* k30991 in k31003 in k30972 in a30969 in k30966 in k17447 in k17444 in k17441 in k17438 in k17435 in k17432 in k17429 in k17426 in k17423 in k17420 in k17417 in k17414 in k17411 in k17408 in k17269 in k17266 in k17263 in k17260 in k17204 in k17201 in k17198 in k17195 in k17192 in k17189 in k17186 in k17183 in k15938 in k15869 in k15676 in k15673 in k15568 in k15517 in k7924 in k7921 in k5905 in k5612 in k5609 in k5605 in k5314 in k5311 in k5308 in k5305 */
static void C_ccall f_30993(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 369  errf");
t2=((C_word*)t0)[3];
((C_proc3)C_retrieve_proc(t2))(3,t2,((C_word*)t0)[2],t1);}

/* k30975 in k30972 in a30969 in k30966 in k17447 in k17444 in k17441 in k17438 in k17435 in k17432 in k17429 in k17426 in k17423 in k17420 in k17417 in k17414 in k17411 in k17408 in k17269 in k17266 in k17263 in k17260 in k17204 in k17201 in k17198 in k17195 in k17192 in k17189 in k17186 in k17183 in k15938 in k15869 in k15676 in k15673 in k15568 in k15517 in k7924 in k7921 in k5905 in k5612 in k5609 in k5605 in k5314 in k5311 in k5308 in k5305 */
static void C_ccall f_30977(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[6],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_30977,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_30980,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],tmp=(C_word)a,a+=6,tmp);
C_trace("ChickenBridge.scm: 369  set-emit-info!");
f_16012(t2,lf[732],lf[731],((C_word*)t0)[3]);}

/* k30978 in k30975 in k30972 in a30969 in k30966 in k17447 in k17444 in k17441 in k17438 in k17435 in k17432 in k17429 in k17426 in k17423 in k17420 in k17417 in k17414 in k17411 in k17408 in k17269 in k17266 in k17263 in k17260 in k17204 in k17201 in k17198 in k17195 in k17192 in k17189 in k17186 in k17183 in k15938 in k15869 in k15676 in k15673 in k15568 in k15517 in k7924 in k7921 in k5905 in k5612 in k5609 in k5605 in k5314 in k5311 in k5308 in k5305 */
static void C_ccall f_30980(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 369  emit");
f_16030(((C_word*)t0)[5],((C_word*)t0)[4],((C_word*)t0)[3],((C_word*)t0)[2]);}

/* k30958 in k17447 in k17444 in k17441 in k17438 in k17435 in k17432 in k17429 in k17426 in k17423 in k17420 in k17417 in k17414 in k17411 in k17408 in k17269 in k17266 in k17263 in k17260 in k17204 in k17201 in k17198 in k17195 in k17192 in k17189 in k17186 in k17183 in k15938 in k15869 in k15676 in k15673 in k15568 in k15517 in k7924 in k7921 in k5905 in k5612 in k5609 in k5605 in k5314 in k5311 in k5308 in k5305 */
static void C_ccall f_30960(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 369  hash-table-set!");
t2=C_retrieve(lf[681]);
((C_proc5)C_retrieve_proc(t2))(5,t2,((C_word*)t0)[2],C_retrieve2(lf[277],"*rules*"),C_fix(31488),t1);}

/* k17450 in k17447 in k17444 in k17441 in k17438 in k17435 in k17432 in k17429 in k17426 in k17423 in k17420 in k17417 in k17414 in k17411 in k17408 in k17269 in k17266 in k17263 in k17260 in k17204 in k17201 in k17198 in k17195 in k17192 in k17189 in k17186 in k17183 in k15938 in k15869 in k15676 in k15673 in k15568 in k15517 in k7924 in k7921 in k5905 in k5612 in k5609 in k5605 in k5314 in k5311 in k5308 in k5305 */
static void C_ccall f_17452(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word ab[33],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_17452,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_17455,a[2]=((C_word*)t0)[2],tmp=(C_word)a,a+=3,tmp);
t3=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_30869,a[2]=t2,tmp=(C_word)a,a+=3,tmp);
t4=(C_word)C_a_i_cons(&a,2,C_fix(29696),C_SCHEME_END_OF_LIST);
t5=(C_word)C_a_i_cons(&a,2,C_fix(10756),t4);
t6=(C_word)C_a_i_cons(&a,2,C_fix(25088),t5);
t7=(C_word)C_a_i_cons(&a,2,lf[310],t6);
t8=(C_word)C_a_i_cons(&a,2,C_fix(25088),C_SCHEME_END_OF_LIST);
t9=(C_word)C_a_i_cons(&a,2,t7,t8);
t10=(C_word)C_a_i_cons(&a,2,lf[311],t9);
t11=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_30875,a[2]=((C_word)li493),tmp=(C_word)a,a+=3,tmp);
t12=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_30910,a[2]=((C_word)li495),tmp=(C_word)a,a+=3,tmp);
C_trace("ChickenBridge.scm: 369  make-rule");
f_15572(t3,lf[762],C_fix(30208),t10,t11,t12);}

/* a30909 in k17450 in k17447 in k17444 in k17441 in k17438 in k17435 in k17432 in k17429 in k17426 in k17423 in k17420 in k17417 in k17414 in k17411 in k17408 in k17269 in k17266 in k17263 in k17260 in k17204 in k17201 in k17198 in k17195 in k17192 in k17189 in k17186 in k17183 in k15938 in k15869 in k15676 in k15673 in k15568 in k15517 in k7924 in k7921 in k5905 in k5612 in k5609 in k5605 in k5314 in k5311 in k5308 in k5305 */
static void C_ccall f_30910(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4){
C_word tmp;
C_word t5;
C_word t6;
C_word t7;
C_word ab[9],*a=ab;
if(c!=5) C_bad_argc_2(c,5,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr5,(void*)f_30910,5,t0,t1,t2,t3,t4);}
t5=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_30916,a[2]=t4,a[3]=t3,a[4]=((C_word)li494),tmp=(C_word)a,a+=5,tmp);
t6=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_30924,a[2]=t5,a[3]=t1,tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 369  parse-unit-parsed");
f_15912(t6,t2);}

/* k30922 in a30909 in k17450 in k17447 in k17444 in k17441 in k17438 in k17435 in k17432 in k17429 in k17426 in k17423 in k17420 in k17417 in k17414 in k17411 in k17408 in k17269 in k17266 in k17263 in k17260 in k17204 in k17201 in k17198 in k17195 in k17192 in k17189 in k17186 in k17183 in k15938 in k15869 in k15676 in k15673 in k15568 in k15517 in k7924 in k7921 in k5905 in k5612 in k5609 in k5605 in k5314 in k5311 in k5308 in k5305 */
static void C_ccall f_30924(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("map");
t2=*((C_word*)lf[17]+1);
((C_proc4)(void*)(*((C_word*)t2+1)))(4,t2,((C_word*)t0)[3],((C_word*)t0)[2],t1);}

/* a30915 in a30909 in k17450 in k17447 in k17444 in k17441 in k17438 in k17435 in k17432 in k17429 in k17426 in k17423 in k17420 in k17417 in k17414 in k17411 in k17408 in k17269 in k17266 in k17263 in k17260 in k17204 in k17201 in k17198 in k17195 in k17192 in k17189 in k17186 in k17183 in k15938 in k15869 in k15676 in k15673 in k15568 in k15517 in k7924 in k7921 in k5905 in k5612 in k5609 in k5605 in k5314 in k5311 in k5308 in k5305 */
static void C_ccall f_30916(C_word c,C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word *a;
if(c!=3) C_bad_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr3,(void*)f_30916,3,t0,t1,t2);}
C_trace("ChickenBridge.scm: 369  emit");
f_16030(t1,t2,((C_word*)t0)[3],((C_word*)t0)[2]);}

/* a30874 in k17450 in k17447 in k17444 in k17441 in k17438 in k17435 in k17432 in k17429 in k17426 in k17423 in k17420 in k17417 in k17414 in k17411 in k17408 in k17269 in k17266 in k17263 in k17260 in k17204 in k17201 in k17198 in k17195 in k17192 in k17189 in k17186 in k17183 in k15938 in k15869 in k15676 in k15673 in k15568 in k15517 in k7924 in k7921 in k5905 in k5612 in k5609 in k5605 in k5314 in k5311 in k5308 in k5305 */
static void C_ccall f_30875(C_word c,C_word t0,C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word ab[10],*a=ab;
if(c!=4) C_bad_argc_2(c,4,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr4,(void*)f_30875,4,t0,t1,t2,t3);}
if(C_truep((C_word)C_i_pairp(t2))){
t4=(C_word)C_i_car(t2);
t5=(C_word)C_i_caddr(t2);
t6=(C_word)C_a_i_list(&a,2,t4,t5);
C_trace("ChickenBridge.scm: 369  make-parse-unit");
f_15873(t1,C_fix(30208),t6,C_SCHEME_FALSE);}
else{
t4=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_30908,a[2]=t1,a[3]=t2,tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 369  make-parse-unit");
f_15873(t4,C_fix(4608),lf[761],C_SCHEME_FALSE);}}

/* k30906 in a30874 in k17450 in k17447 in k17444 in k17441 in k17438 in k17435 in k17432 in k17429 in k17426 in k17423 in k17420 in k17417 in k17414 in k17411 in k17408 in k17269 in k17266 in k17263 in k17260 in k17204 in k17201 in k17198 in k17195 in k17192 in k17189 in k17186 in k17183 in k15938 in k15869 in k15676 in k15673 in k15568 in k15517 in k7924 in k7921 in k5905 in k5612 in k5609 in k5605 in k5314 in k5311 in k5308 in k5305 */
static void C_ccall f_30908(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[6],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_30908,2,t0,t1);}
t2=(C_word)C_a_i_list(&a,2,((C_word*)t0)[3],t1);
C_trace("ChickenBridge.scm: 369  make-parse-unit");
f_15873(((C_word*)t0)[2],C_fix(30208),t2,C_SCHEME_FALSE);}

/* k30867 in k17450 in k17447 in k17444 in k17441 in k17438 in k17435 in k17432 in k17429 in k17426 in k17423 in k17420 in k17417 in k17414 in k17411 in k17408 in k17269 in k17266 in k17263 in k17260 in k17204 in k17201 in k17198 in k17195 in k17192 in k17189 in k17186 in k17183 in k15938 in k15869 in k15676 in k15673 in k15568 in k15517 in k7924 in k7921 in k5905 in k5612 in k5609 in k5605 in k5314 in k5311 in k5308 in k5305 */
static void C_ccall f_30869(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 369  hash-table-set!");
t2=C_retrieve(lf[681]);
((C_proc5)C_retrieve_proc(t2))(5,t2,((C_word*)t0)[2],C_retrieve2(lf[277],"*rules*"),C_fix(30208),t1);}

/* k17453 in k17450 in k17447 in k17444 in k17441 in k17438 in k17435 in k17432 in k17429 in k17426 in k17423 in k17420 in k17417 in k17414 in k17411 in k17408 in k17269 in k17266 in k17263 in k17260 in k17204 in k17201 in k17198 in k17195 in k17192 in k17189 in k17186 in k17183 in k15938 in k15869 in k15676 in k15673 in k15568 in k15517 in k7924 in k7921 in k5905 in k5612 in k5609 in k5605 in k5314 in k5311 in k5308 in k5305 */
static void C_ccall f_17455(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word ab[33],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_17455,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_17458,a[2]=((C_word*)t0)[2],tmp=(C_word)a,a+=3,tmp);
t3=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_30767,a[2]=t2,tmp=(C_word)a,a+=3,tmp);
t4=(C_word)C_a_i_cons(&a,2,C_fix(30208),C_SCHEME_END_OF_LIST);
t5=(C_word)C_a_i_cons(&a,2,C_fix(256),t4);
t6=(C_word)C_a_i_cons(&a,2,lf[95],t5);
t7=(C_word)C_a_i_cons(&a,2,t6,C_SCHEME_END_OF_LIST);
t8=(C_word)C_a_i_cons(&a,2,C_fix(30208),t7);
t9=(C_word)C_a_i_cons(&a,2,C_fix(20480),t8);
t10=(C_word)C_a_i_cons(&a,2,lf[310],t9);
t11=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_30773,a[2]=((C_word)li490),tmp=(C_word)a,a+=3,tmp);
t12=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_30816,a[2]=((C_word)li492),tmp=(C_word)a,a+=3,tmp);
C_trace("ChickenBridge.scm: 369  make-rule");
f_15572(t3,lf[760],C_fix(29952),t10,t11,t12);}

/* a30815 in k17453 in k17450 in k17447 in k17444 in k17441 in k17438 in k17435 in k17432 in k17429 in k17426 in k17423 in k17420 in k17417 in k17414 in k17411 in k17408 in k17269 in k17266 in k17263 in k17260 in k17204 in k17201 in k17198 in k17195 in k17192 in k17189 in k17186 in k17183 in k15938 in k15869 in k15676 in k15673 in k15568 in k15517 in k7924 in k7921 in k5905 in k5612 in k5609 in k5605 in k5314 in k5311 in k5308 in k5305 */
static void C_ccall f_30816(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4){
C_word tmp;
C_word t5;
C_word t6;
C_word ab[5],*a=ab;
if(c!=5) C_bad_argc_2(c,5,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr5,(void*)f_30816,5,t0,t1,t2,t3,t4);}
t5=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_30820,a[2]=t2,a[3]=t1,a[4]=t4,tmp=(C_word)a,a+=5,tmp);
C_trace("ChickenBridge.scm: 369  add-emit-info");
f_16002(t5,lf[759],C_SCHEME_TRUE,t3);}

/* k30818 in a30815 in k17453 in k17450 in k17447 in k17444 in k17441 in k17438 in k17435 in k17432 in k17429 in k17426 in k17423 in k17420 in k17417 in k17414 in k17411 in k17408 in k17269 in k17266 in k17263 in k17260 in k17204 in k17201 in k17198 in k17195 in k17192 in k17189 in k17186 in k17183 in k15938 in k15869 in k15676 in k15673 in k15568 in k15517 in k7924 in k7921 in k5905 in k5612 in k5609 in k5605 in k5314 in k5311 in k5308 in k5305 */
static void C_ccall f_30820(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_30820,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_30825,a[2]=((C_word*)t0)[4],a[3]=t1,a[4]=((C_word)li491),tmp=(C_word)a,a+=5,tmp);
t3=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_30833,a[2]=t2,a[3]=((C_word*)t0)[3],tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 369  parse-unit-parsed");
f_15912(t3,((C_word*)t0)[2]);}

/* k30831 in k30818 in a30815 in k17453 in k17450 in k17447 in k17444 in k17441 in k17438 in k17435 in k17432 in k17429 in k17426 in k17423 in k17420 in k17417 in k17414 in k17411 in k17408 in k17269 in k17266 in k17263 in k17260 in k17204 in k17201 in k17198 in k17195 in k17192 in k17189 in k17186 in k17183 in k15938 in k15869 in k15676 in k15673 in k15568 in k15517 in k7924 in k7921 in k5905 in k5612 in k5609 in k5605 in k5314 in k5311 in k5308 in k5305 */
static void C_ccall f_30833(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("map");
t2=*((C_word*)lf[17]+1);
((C_proc4)(void*)(*((C_word*)t2+1)))(4,t2,((C_word*)t0)[3],((C_word*)t0)[2],t1);}

/* a30824 in k30818 in a30815 in k17453 in k17450 in k17447 in k17444 in k17441 in k17438 in k17435 in k17432 in k17429 in k17426 in k17423 in k17420 in k17417 in k17414 in k17411 in k17408 in k17269 in k17266 in k17263 in k17260 in k17204 in k17201 in k17198 in k17195 in k17192 in k17189 in k17186 in k17183 in k15938 in k15869 in k15676 in k15673 in k15568 in k15517 in k7924 in k7921 in k5905 in k5612 in k5609 in k5605 in k5314 in k5311 in k5308 in k5305 */
static void C_ccall f_30825(C_word c,C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word *a;
if(c!=3) C_bad_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr3,(void*)f_30825,3,t0,t1,t2);}
C_trace("ChickenBridge.scm: 369  emit");
f_16030(t1,t2,((C_word*)t0)[3],((C_word*)t0)[2]);}

/* a30772 in k17453 in k17450 in k17447 in k17444 in k17441 in k17438 in k17435 in k17432 in k17429 in k17426 in k17423 in k17420 in k17417 in k17414 in k17411 in k17408 in k17269 in k17266 in k17263 in k17260 in k17204 in k17201 in k17198 in k17195 in k17192 in k17189 in k17186 in k17183 in k15938 in k15869 in k15676 in k15673 in k15568 in k15517 in k7924 in k7921 in k5905 in k5612 in k5609 in k5605 in k5314 in k5311 in k5308 in k5305 */
static void C_ccall f_30773(C_word c,C_word t0,C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word ab[7],*a=ab;
if(c!=4) C_bad_argc_2(c,4,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr4,(void*)f_30773,4,t0,t1,t2,t3);}
if(C_truep((C_word)C_i_caddr(t2))){
t4=(C_word)C_i_cadr(t2);
t5=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_30806,a[2]=t1,a[3]=t4,tmp=(C_word)a,a+=4,tmp);
t6=(C_word)C_i_caddr(t2);
C_trace("ChickenBridge.scm: 369  remove-token-type");
f_17208(t5,t6,C_fix(256));}
else{
t4=(C_word)C_i_cadr(t2);
t5=(C_word)C_a_i_list(&a,1,t4);
C_trace("ChickenBridge.scm: 369  make-parse-unit");
f_15873(t1,C_fix(29952),t5,C_SCHEME_FALSE);}}

/* k30804 in a30772 in k17453 in k17450 in k17447 in k17444 in k17441 in k17438 in k17435 in k17432 in k17429 in k17426 in k17423 in k17420 in k17417 in k17414 in k17411 in k17408 in k17269 in k17266 in k17263 in k17260 in k17204 in k17201 in k17198 in k17195 in k17192 in k17189 in k17186 in k17183 in k15938 in k15869 in k15676 in k15673 in k15568 in k15517 in k7924 in k7921 in k5905 in k5612 in k5609 in k5605 in k5314 in k5311 in k5308 in k5305 */
static void C_ccall f_30806(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[3],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_30806,2,t0,t1);}
t2=(C_word)C_a_i_cons(&a,2,((C_word*)t0)[3],t1);
C_trace("ChickenBridge.scm: 369  make-parse-unit");
f_15873(((C_word*)t0)[2],C_fix(29952),t2,C_SCHEME_FALSE);}

/* k30765 in k17453 in k17450 in k17447 in k17444 in k17441 in k17438 in k17435 in k17432 in k17429 in k17426 in k17423 in k17420 in k17417 in k17414 in k17411 in k17408 in k17269 in k17266 in k17263 in k17260 in k17204 in k17201 in k17198 in k17195 in k17192 in k17189 in k17186 in k17183 in k15938 in k15869 in k15676 in k15673 in k15568 in k15517 in k7924 in k7921 in k5905 in k5612 in k5609 in k5605 in k5314 in k5311 in k5308 in k5305 */
static void C_ccall f_30767(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 369  hash-table-set!");
t2=C_retrieve(lf[681]);
((C_proc5)C_retrieve_proc(t2))(5,t2,((C_word*)t0)[2],C_retrieve2(lf[277],"*rules*"),C_fix(29952),t1);}

/* k17456 in k17453 in k17450 in k17447 in k17444 in k17441 in k17438 in k17435 in k17432 in k17429 in k17426 in k17423 in k17420 in k17417 in k17414 in k17411 in k17408 in k17269 in k17266 in k17263 in k17260 in k17204 in k17201 in k17198 in k17195 in k17192 in k17189 in k17186 in k17183 in k15938 in k15869 in k15676 in k15673 in k15568 in k15517 in k7924 in k7921 in k5905 in k5612 in k5609 in k5605 in k5314 in k5311 in k5308 in k5305 */
static void C_ccall f_17458(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word t14;
C_word t15;
C_word t16;
C_word t17;
C_word t18;
C_word t19;
C_word t20;
C_word t21;
C_word ab[57],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_17458,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_17461,a[2]=((C_word*)t0)[2],tmp=(C_word)a,a+=3,tmp);
t3=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_30681,a[2]=t2,tmp=(C_word)a,a+=3,tmp);
t4=(C_word)C_a_i_cons(&a,2,C_fix(25088),C_SCHEME_END_OF_LIST);
t5=(C_word)C_a_i_cons(&a,2,C_fix(27136),t4);
t6=(C_word)C_a_i_cons(&a,2,lf[311],t5);
t7=(C_word)C_a_i_cons(&a,2,C_fix(12800),C_SCHEME_END_OF_LIST);
t8=(C_word)C_a_i_cons(&a,2,C_fix(12544),t7);
t9=(C_word)C_a_i_cons(&a,2,C_fix(12288),t8);
t10=(C_word)C_a_i_cons(&a,2,C_fix(12032),t9);
t11=(C_word)C_a_i_cons(&a,2,C_fix(11776),t10);
t12=(C_word)C_a_i_cons(&a,2,C_fix(11268),t11);
t13=(C_word)C_a_i_cons(&a,2,C_fix(11012),t12);
t14=(C_word)C_a_i_cons(&a,2,C_fix(10756),t13);
t15=(C_word)C_a_i_cons(&a,2,lf[311],t14);
t16=(C_word)C_a_i_cons(&a,2,C_fix(29696),C_SCHEME_END_OF_LIST);
t17=(C_word)C_a_i_cons(&a,2,t15,t16);
t18=(C_word)C_a_i_cons(&a,2,t6,t17);
t19=(C_word)C_a_i_cons(&a,2,lf[310],t18);
t20=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_30687,a[2]=((C_word)li489),tmp=(C_word)a,a+=3,tmp);
C_trace("ChickenBridge.scm: 369  make-rule");
f_15572(t3,lf[758],C_fix(30720),t19,t20,C_SCHEME_FALSE);}

/* a30686 in k17456 in k17453 in k17450 in k17447 in k17444 in k17441 in k17438 in k17435 in k17432 in k17429 in k17426 in k17423 in k17420 in k17417 in k17414 in k17411 in k17408 in k17269 in k17266 in k17263 in k17260 in k17204 in k17201 in k17198 in k17195 in k17192 in k17189 in k17186 in k17183 in k15938 in k15869 in k15676 in k15673 in k15568 in k15517 in k7924 in k7921 in k5905 in k5612 in k5609 in k5605 in k5314 in k5311 in k5308 in k5305 */
static void C_ccall f_30687(C_word c,C_word t0,C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word *a;
if(c!=4) C_bad_argc_2(c,4,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr4,(void*)f_30687,4,t0,t1,t2,t3);}
C_trace("ChickenBridge.scm: 369  make-parse-unit");
f_15873(t1,C_fix(30720),t2,C_SCHEME_FALSE);}

/* k30679 in k17456 in k17453 in k17450 in k17447 in k17444 in k17441 in k17438 in k17435 in k17432 in k17429 in k17426 in k17423 in k17420 in k17417 in k17414 in k17411 in k17408 in k17269 in k17266 in k17263 in k17260 in k17204 in k17201 in k17198 in k17195 in k17192 in k17189 in k17186 in k17183 in k15938 in k15869 in k15676 in k15673 in k15568 in k15517 in k7924 in k7921 in k5905 in k5612 in k5609 in k5605 in k5314 in k5311 in k5308 in k5305 */
static void C_ccall f_30681(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 369  hash-table-set!");
t2=C_retrieve(lf[681]);
((C_proc5)C_retrieve_proc(t2))(5,t2,((C_word*)t0)[2],C_retrieve2(lf[277],"*rules*"),C_fix(30720),t1);}

/* k17459 in k17456 in k17453 in k17450 in k17447 in k17444 in k17441 in k17438 in k17435 in k17432 in k17429 in k17426 in k17423 in k17420 in k17417 in k17414 in k17411 in k17408 in k17269 in k17266 in k17263 in k17260 in k17204 in k17201 in k17198 in k17195 in k17192 in k17189 in k17186 in k17183 in k15938 in k15869 in k15676 in k15673 in k15568 in k15517 in k7924 in k7921 in k5905 in k5612 in k5609 in k5605 in k5314 in k5311 in k5308 in k5305 */
static void C_ccall f_17461(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word ab[33],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_17461,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_17464,a[2]=((C_word*)t0)[2],tmp=(C_word)a,a+=3,tmp);
t3=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_30401,a[2]=t2,tmp=(C_word)a,a+=3,tmp);
t4=(C_word)C_a_i_cons(&a,2,C_fix(30720),C_SCHEME_END_OF_LIST);
t5=(C_word)C_a_i_cons(&a,2,C_fix(256),t4);
t6=(C_word)C_a_i_cons(&a,2,lf[95],t5);
t7=(C_word)C_a_i_cons(&a,2,t6,C_SCHEME_END_OF_LIST);
t8=(C_word)C_a_i_cons(&a,2,C_fix(30720),t7);
t9=(C_word)C_a_i_cons(&a,2,C_fix(16640),t8);
t10=(C_word)C_a_i_cons(&a,2,lf[310],t9);
t11=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_30407,a[2]=((C_word)li486),tmp=(C_word)a,a+=3,tmp);
t12=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_30450,a[2]=((C_word)li488),tmp=(C_word)a,a+=3,tmp);
C_trace("ChickenBridge.scm: 369  make-rule");
f_15572(t3,lf[757],C_fix(30464),t10,t11,t12);}

/* a30449 in k17459 in k17456 in k17453 in k17450 in k17447 in k17444 in k17441 in k17438 in k17435 in k17432 in k17429 in k17426 in k17423 in k17420 in k17417 in k17414 in k17411 in k17408 in k17269 in k17266 in k17263 in k17260 in k17204 in k17201 in k17198 in k17195 in k17192 in k17189 in k17186 in k17183 in k15938 in k15869 in k15676 in k15673 in k15568 in k15517 in k7924 in k7921 in k5905 in k5612 in k5609 in k5605 in k5314 in k5311 in k5308 in k5305 */
static void C_ccall f_30450(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4){
C_word tmp;
C_word t5;
C_word t6;
C_word ab[5],*a=ab;
if(c!=5) C_bad_argc_2(c,5,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr5,(void*)f_30450,5,t0,t1,t2,t3,t4);}
t5=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_30454,a[2]=t1,a[3]=t4,a[4]=t3,tmp=(C_word)a,a+=5,tmp);
C_trace("ChickenBridge.scm: 369  parse-unit-parsed");
f_15912(t5,t2);}

/* k30452 in a30449 in k17459 in k17456 in k17453 in k17450 in k17447 in k17444 in k17441 in k17438 in k17435 in k17432 in k17429 in k17426 in k17423 in k17420 in k17417 in k17414 in k17411 in k17408 in k17269 in k17266 in k17263 in k17260 in k17204 in k17201 in k17198 in k17195 in k17192 in k17189 in k17186 in k17183 in k15938 in k15869 in k15676 in k15673 in k15568 in k15517 in k7924 in k7921 in k5905 in k5612 in k5609 in k5605 in k5314 in k5311 in k5308 in k5305 */
static void C_ccall f_30454(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word ab[15],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_30454,2,t0,t1);}
t2=(C_word)C_a_i_list(&a,1,lf[336]);
t3=t2;
t4=(*a=C_VECTOR_TYPE|1,a[1]=t3,tmp=(C_word)a,a+=2,tmp);
t5=C_SCHEME_UNDEFINED;
t6=(*a=C_VECTOR_TYPE|1,a[1]=t5,tmp=(C_word)a,a+=2,tmp);
t7=C_set_block_item(t6,0,(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_30462,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=t6,a[5]=t4,a[6]=t2,a[7]=((C_word)li487),tmp=(C_word)a,a+=8,tmp));
t8=((C_word*)t6)[1];
f_30462(t8,((C_word*)t0)[2],t1);}

/* do2730 in k30452 in a30449 in k17459 in k17456 in k17453 in k17450 in k17447 in k17444 in k17441 in k17438 in k17435 in k17432 in k17429 in k17426 in k17423 in k17420 in k17417 in k17414 in k17411 in k17408 in k17269 in k17266 in k17263 in k17260 in k17204 in k17201 in k17198 in k17195 in k17192 in k17189 in k17186 in k17183 in k15938 in k15869 in k15676 in k15673 in k15568 in k15517 in k7924 in k7921 in k5905 in k5612 in k5609 in k5605 in k5314 in k5311 in k5308 in k5305 */
static void C_fcall f_30462(C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word ab[8],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_30462,NULL,3,t0,t1,t2);}
if(C_truep((C_word)C_i_nullp(t2))){
t3=(C_word)C_i_cddr(((C_word*)t0)[6]);
t4=(C_word)C_i_nullp(t3);
t5=t1;
((C_proc2)(void*)(*((C_word*)t5+1)))(2,t5,(C_truep(t4)?(C_word)C_i_cadr(((C_word*)t0)[6]):((C_word*)t0)[6]));}
else{
t3=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_30485,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=t1,a[5]=((C_word*)t0)[4],a[6]=t2,a[7]=((C_word*)t0)[5],tmp=(C_word)a,a+=8,tmp);
t4=(C_word)C_i_car(t2);
C_trace("ChickenBridge.scm: 369  parse-unit-parsed");
f_15912(t3,t4);}}

/* k30483 in do2730 in k30452 in a30449 in k17459 in k17456 in k17453 in k17450 in k17447 in k17444 in k17441 in k17438 in k17435 in k17432 in k17429 in k17426 in k17423 in k17420 in k17417 in k17414 in k17411 in k17408 in k17269 in k17266 in k17263 in k17260 in k17204 in k17201 in k17198 in k17195 in k17192 in k17189 in k17186 in k17183 in k15938 in k15869 in k15676 in k15673 in k15568 in k15517 in k7924 in k7921 in k5905 in k5612 in k5609 in k5605 in k5314 in k5311 in k5308 in k5305 */
static void C_ccall f_30485(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_30485,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|8,a[1]=(C_word)f_30488,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=t1,a[5]=((C_word*)t0)[4],a[6]=((C_word*)t0)[5],a[7]=((C_word*)t0)[6],a[8]=((C_word*)t0)[7],tmp=(C_word)a,a+=9,tmp);
t3=(C_word)C_i_car(t1);
C_trace("ChickenBridge.scm: 369  emit");
f_16030(t2,t3,((C_word*)t0)[3],((C_word*)t0)[2]);}

/* k30486 in k30483 in do2730 in k30452 in a30449 in k17459 in k17456 in k17453 in k17450 in k17447 in k17444 in k17441 in k17438 in k17435 in k17432 in k17429 in k17426 in k17423 in k17420 in k17417 in k17414 in k17411 in k17408 in k17269 in k17266 in k17263 in k17260 in k17204 in k17201 in k17198 in k17195 in k17192 in k17189 in k17186 in k17183 in k15938 in k15869 in k15676 in k15673 in k15568 in k15517 in k7924 in k7921 in k5905 in k5612 in k5609 in k5605 in k5314 in k5311 in k5308 in k5305 */
static void C_ccall f_30488(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[10],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_30488,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|9,a[1]=(C_word)f_30491,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=t1,a[6]=((C_word*)t0)[5],a[7]=((C_word*)t0)[6],a[8]=((C_word*)t0)[7],a[9]=((C_word*)t0)[8],tmp=(C_word)a,a+=10,tmp);
t3=(C_word)C_i_cadr(((C_word*)t0)[4]);
C_trace("ChickenBridge.scm: 369  parse-unit-type");
f_15894(t2,t3);}

/* k30489 in k30486 in k30483 in do2730 in k30452 in a30449 in k17459 in k17456 in k17453 in k17450 in k17447 in k17444 in k17441 in k17438 in k17435 in k17432 in k17429 in k17426 in k17423 in k17420 in k17417 in k17414 in k17411 in k17408 in k17269 in k17266 in k17263 in k17260 in k17204 in k17201 in k17198 in k17195 in k17192 in k17189 in k17186 in k17183 in k15938 in k15869 in k15676 in k15673 in k15568 in k15517 in k7924 in k7921 in k5905 in k5612 in k5609 in k5605 in k5314 in k5311 in k5308 in k5305 */
static void C_ccall f_30491(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[8],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_30491,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_30494,a[2]=t1,a[3]=((C_word*)t0)[5],a[4]=((C_word*)t0)[6],a[5]=((C_word*)t0)[7],a[6]=((C_word*)t0)[8],a[7]=((C_word*)t0)[9],tmp=(C_word)a,a+=8,tmp);
t3=(C_word)C_i_caddr(((C_word*)t0)[4]);
C_trace("ChickenBridge.scm: 369  emit");
f_16030(t2,t3,((C_word*)t0)[3],((C_word*)t0)[2]);}

/* k30492 in k30489 in k30486 in k30483 in do2730 in k30452 in a30449 in k17459 in k17456 in k17453 in k17450 in k17447 in k17444 in k17441 in k17438 in k17435 in k17432 in k17429 in k17426 in k17423 in k17420 in k17417 in k17414 in k17411 in k17408 in k17269 in k17266 in k17263 in k17260 in k17204 in k17201 in k17198 in k17195 in k17192 in k17189 in k17186 in k17183 in k15938 in k15869 in k15676 in k15673 in k15568 in k15517 in k7924 in k7921 in k5905 in k5612 in k5609 in k5605 in k5314 in k5311 in k5308 in k5305 */
static void C_ccall f_30494(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[17],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_30494,2,t0,t1);}
t2=C_SCHEME_FALSE;
t3=(*a=C_VECTOR_TYPE|1,a[1]=t2,tmp=(C_word)a,a+=2,tmp);
t4=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_30497,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],a[7]=t3,tmp=(C_word)a,a+=8,tmp);
t5=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_30554,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=t4,a[5]=t1,a[6]=t3,tmp=(C_word)a,a+=7,tmp);
C_trace("ChickenBridge.scm: 369  SalType=?");
f_17164(t5,((C_word*)t0)[2],C_fix(10756));}

/* k30552 in k30492 in k30489 in k30486 in k30483 in do2730 in k30452 in a30449 in k17459 in k17456 in k17453 in k17450 in k17447 in k17444 in k17441 in k17438 in k17435 in k17432 in k17429 in k17426 in k17423 in k17420 in k17417 in k17414 in k17411 in k17408 in k17269 in k17266 in k17263 in k17260 in k17204 in k17201 in k17198 in k17195 in k17192 in k17189 in k17186 in k17183 in k15938 in k15869 in k15676 in k15673 in k15568 in k15517 in k7924 in k7921 in k5905 in k5612 in k5609 in k5605 in k5314 in k5311 in k5308 in k5305 */
static void C_ccall f_30554(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_30554,2,t0,t1);}
if(C_truep(t1)){
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,((C_word*)t0)[5]);
t3=((C_word*)t0)[4];
f_30497(t3,t2);}
else{
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_30561,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[6],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[3],tmp=(C_word)a,a+=7,tmp);
C_trace("ChickenBridge.scm: 369  SalType=?");
f_17164(t2,((C_word*)t0)[2],C_fix(11776));}}

/* k30559 in k30552 in k30492 in k30489 in k30486 in k30483 in do2730 in k30452 in a30449 in k17459 in k17456 in k17453 in k17450 in k17447 in k17444 in k17441 in k17438 in k17435 in k17432 in k17429 in k17426 in k17423 in k17420 in k17417 in k17414 in k17411 in k17408 in k17269 in k17266 in k17263 in k17260 in k17204 in k17201 in k17198 in k17195 in k17192 in k17189 in k17186 in k17183 in k15938 in k15869 in k15676 in k15673 in k15568 in k15517 in k7924 in k7921 in k5905 in k5612 in k5609 in k5605 in k5314 in k5311 in k5308 in k5305 */
static void C_ccall f_30561(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[16],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_30561,2,t0,t1);}
if(C_truep(t1)){
t2=(C_word)C_a_i_list(&a,3,lf[91],((C_word*)t0)[6],((C_word*)t0)[5]);
t3=C_mutate(((C_word *)((C_word*)t0)[4])+1,t2);
t4=((C_word*)t0)[3];
f_30497(t4,t3);}
else{
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_30571,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],tmp=(C_word)a,a+=7,tmp);
C_trace("ChickenBridge.scm: 369  SalType=?");
f_17164(t2,((C_word*)t0)[2],C_fix(12032));}}

/* k30569 in k30559 in k30552 in k30492 in k30489 in k30486 in k30483 in do2730 in k30452 in a30449 in k17459 in k17456 in k17453 in k17450 in k17447 in k17444 in k17441 in k17438 in k17435 in k17432 in k17429 in k17426 in k17423 in k17420 in k17417 in k17414 in k17411 in k17408 in k17269 in k17266 in k17263 in k17260 in k17204 in k17201 in k17198 in k17195 in k17192 in k17189 in k17186 in k17183 in k15938 in k15869 in k15676 in k15673 in k15568 in k15517 in k7924 in k7921 in k5905 in k5612 in k5609 in k5605 in k5314 in k5311 in k5308 in k5305 */
static void C_ccall f_30571(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[16],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_30571,2,t0,t1);}
if(C_truep(t1)){
t2=(C_word)C_a_i_list(&a,3,lf[95],((C_word*)t0)[6],((C_word*)t0)[5]);
t3=C_mutate(((C_word *)((C_word*)t0)[4])+1,t2);
t4=((C_word*)t0)[3];
f_30497(t4,t3);}
else{
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_30581,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[5],tmp=(C_word)a,a+=7,tmp);
C_trace("ChickenBridge.scm: 369  SalType=?");
f_17164(t2,((C_word*)t0)[2],C_fix(12288));}}

/* k30579 in k30569 in k30559 in k30552 in k30492 in k30489 in k30486 in k30483 in do2730 in k30452 in a30449 in k17459 in k17456 in k17453 in k17450 in k17447 in k17444 in k17441 in k17438 in k17435 in k17432 in k17429 in k17426 in k17423 in k17420 in k17417 in k17414 in k17411 in k17408 in k17269 in k17266 in k17263 in k17260 in k17204 in k17201 in k17198 in k17195 in k17192 in k17189 in k17186 in k17183 in k15938 in k15869 in k15676 in k15673 in k15568 in k15517 in k7924 in k7921 in k5905 in k5612 in k5609 in k5605 in k5314 in k5311 in k5308 in k5305 */
static void C_ccall f_30581(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[22],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_30581,2,t0,t1);}
if(C_truep(t1)){
t2=(C_word)C_a_i_list(&a,2,lf[515],((C_word*)t0)[6]);
t3=(C_word)C_a_i_list(&a,3,lf[18],((C_word*)t0)[5],t2);
t4=C_mutate(((C_word *)((C_word*)t0)[4])+1,t3);
t5=((C_word*)t0)[3];
f_30497(t5,t4);}
else{
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_30595,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],tmp=(C_word)a,a+=7,tmp);
C_trace("ChickenBridge.scm: 369  SalType=?");
f_17164(t2,((C_word*)t0)[2],C_fix(12544));}}

/* k30593 in k30579 in k30569 in k30559 in k30552 in k30492 in k30489 in k30486 in k30483 in do2730 in k30452 in a30449 in k17459 in k17456 in k17453 in k17450 in k17447 in k17444 in k17441 in k17438 in k17435 in k17432 in k17429 in k17426 in k17423 in k17420 in k17417 in k17414 in k17411 in k17408 in k17269 in k17266 in k17263 in k17260 in k17204 in k17201 in k17198 in k17195 in k17192 in k17189 in k17186 in k17183 in k15938 in k15869 in k15676 in k15673 in k15568 in k15517 in k7924 in k7921 in k5905 in k5612 in k5609 in k5605 in k5314 in k5311 in k5308 in k5305 */
static void C_ccall f_30595(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[16],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_30595,2,t0,t1);}
if(C_truep(t1)){
t2=(C_word)C_a_i_list(&a,3,lf[718],((C_word*)t0)[6],((C_word*)t0)[5]);
t3=C_mutate(((C_word *)((C_word*)t0)[4])+1,t2);
t4=((C_word*)t0)[3];
f_30497(t4,t3);}
else{
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_30605,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[5],tmp=(C_word)a,a+=7,tmp);
C_trace("ChickenBridge.scm: 369  SalType=?");
f_17164(t2,((C_word*)t0)[2],C_fix(12800));}}

/* k30603 in k30593 in k30579 in k30569 in k30559 in k30552 in k30492 in k30489 in k30486 in k30483 in do2730 in k30452 in a30449 in k17459 in k17456 in k17453 in k17450 in k17447 in k17444 in k17441 in k17438 in k17435 in k17432 in k17429 in k17426 in k17423 in k17420 in k17417 in k17414 in k17411 in k17408 in k17269 in k17266 in k17263 in k17260 in k17204 in k17201 in k17198 in k17195 in k17192 in k17189 in k17186 in k17183 in k15938 in k15869 in k15676 in k15673 in k15568 in k15517 in k7924 in k7921 in k5905 in k5612 in k5609 in k5605 in k5314 in k5311 in k5308 in k5305 */
static void C_ccall f_30605(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[16],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_30605,2,t0,t1);}
if(C_truep(t1)){
t2=(C_word)C_a_i_list(&a,3,lf[18],((C_word*)t0)[6],((C_word*)t0)[5]);
t3=C_mutate(((C_word *)((C_word*)t0)[4])+1,t2);
t4=((C_word*)t0)[3];
f_30497(t4,t3);}
else{
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_30615,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],tmp=(C_word)a,a+=7,tmp);
C_trace("ChickenBridge.scm: 369  SalType=?");
f_17164(t2,((C_word*)t0)[2],C_fix(11012));}}

/* k30613 in k30603 in k30593 in k30579 in k30569 in k30559 in k30552 in k30492 in k30489 in k30486 in k30483 in do2730 in k30452 in a30449 in k17459 in k17456 in k17453 in k17450 in k17447 in k17444 in k17441 in k17438 in k17435 in k17432 in k17429 in k17426 in k17423 in k17420 in k17417 in k17414 in k17411 in k17408 in k17269 in k17266 in k17263 in k17260 in k17204 in k17201 in k17198 in k17195 in k17192 in k17189 in k17186 in k17183 in k15938 in k15869 in k15676 in k15673 in k15568 in k15517 in k7924 in k7921 in k5905 in k5612 in k5609 in k5605 in k5314 in k5311 in k5308 in k5305 */
static void C_ccall f_30615(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[15],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_30615,2,t0,t1);}
if(C_truep(t1)){
t2=(C_word)C_a_i_list(&a,3,lf[756],((C_word*)t0)[6],((C_word*)t0)[5]);
t3=C_mutate(((C_word *)((C_word*)t0)[4])+1,t2);
t4=((C_word*)t0)[3];
f_30497(t4,t3);}
else{
t2=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_30625,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],tmp=(C_word)a,a+=6,tmp);
C_trace("ChickenBridge.scm: 369  SalType=?");
f_17164(t2,((C_word*)t0)[2],C_fix(11268));}}

/* k30623 in k30613 in k30603 in k30593 in k30579 in k30569 in k30559 in k30552 in k30492 in k30489 in k30486 in k30483 in do2730 in k30452 in a30449 in k17459 in k17456 in k17453 in k17450 in k17447 in k17444 in k17441 in k17438 in k17435 in k17432 in k17429 in k17426 in k17423 in k17420 in k17417 in k17414 in k17411 in k17408 in k17269 in k17266 in k17263 in k17260 in k17204 in k17201 in k17198 in k17195 in k17192 in k17189 in k17186 in k17183 in k15938 in k15869 in k15676 in k15673 in k15568 in k15517 in k7924 in k7921 in k5905 in k5612 in k5609 in k5605 in k5314 in k5311 in k5308 in k5305 */
static void C_ccall f_30625(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_30625,2,t0,t1);}
if(C_truep(t1)){
t2=(C_word)C_a_i_list(&a,3,lf[212],((C_word*)t0)[5],((C_word*)t0)[4]);
t3=C_mutate(((C_word *)((C_word*)t0)[3])+1,t2);
t4=((C_word*)t0)[2];
f_30497(t4,t3);}
else{
t2=((C_word*)t0)[2];
f_30497(t2,C_SCHEME_UNDEFINED);}}

/* k30495 in k30492 in k30489 in k30486 in k30483 in do2730 in k30452 in a30449 in k17459 in k17456 in k17453 in k17450 in k17447 in k17444 in k17441 in k17438 in k17435 in k17432 in k17429 in k17426 in k17423 in k17420 in k17417 in k17414 in k17411 in k17408 in k17269 in k17266 in k17263 in k17260 in k17204 in k17201 in k17198 in k17195 in k17192 in k17189 in k17186 in k17183 in k15938 in k15869 in k15676 in k15673 in k15568 in k15517 in k7924 in k7921 in k5905 in k5612 in k5609 in k5605 in k5314 in k5311 in k5308 in k5305 */
static void C_fcall f_30497(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[12],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_30497,NULL,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_30500,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_30521,a[2]=t2,a[3]=((C_word*)t0)[7],a[4]=((C_word*)t0)[2],tmp=(C_word)a,a+=5,tmp);
if(C_truep((C_word)C_i_pairp(((C_word*)t0)[2]))){
t4=(C_word)C_i_car(((C_word*)t0)[2]);
t5=t3;
f_30521(t5,(C_word)C_eqp(t4,lf[54]));}
else{
t4=t3;
f_30521(t4,C_SCHEME_FALSE);}}

/* k30519 in k30495 in k30492 in k30489 in k30486 in k30483 in do2730 in k30452 in a30449 in k17459 in k17456 in k17453 in k17450 in k17447 in k17444 in k17441 in k17438 in k17435 in k17432 in k17429 in k17426 in k17423 in k17420 in k17417 in k17414 in k17411 in k17408 in k17269 in k17266 in k17263 in k17260 in k17204 in k17201 in k17198 in k17195 in k17192 in k17189 in k17186 in k17183 in k15938 in k15869 in k15676 in k15673 in k15568 in k15517 in k7924 in k7921 in k5905 in k5612 in k5609 in k5605 in k5314 in k5311 in k5308 in k5305 */
static void C_fcall f_30521(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word ab[27],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_30521,NULL,2,t0,t1);}
if(C_truep(t1)){
t2=(C_word)C_i_cadr(((C_word*)t0)[4]);
t3=(C_word)C_i_caddr(((C_word*)t0)[4]);
t4=(C_word)C_a_i_list(&a,3,lf[754],t2,t3);
t5=(C_word)C_a_i_list(&a,3,lf[755],t4,((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_30500(t7,t6);}
else{
t2=(C_word)C_a_i_list(&a,3,lf[12],((C_word*)t0)[4],((C_word*)((C_word*)t0)[3])[1]);
t3=C_mutate(((C_word *)((C_word*)t0)[3])+1,t2);
t4=((C_word*)t0)[2];
f_30500(t4,t3);}}

/* k30498 in k30495 in k30492 in k30489 in k30486 in k30483 in do2730 in k30452 in a30449 in k17459 in k17456 in k17453 in k17450 in k17447 in k17444 in k17441 in k17438 in k17435 in k17432 in k17429 in k17426 in k17423 in k17420 in k17417 in k17414 in k17411 in k17408 in k17269 in k17266 in k17263 in k17260 in k17204 in k17201 in k17198 in k17195 in k17192 in k17189 in k17186 in k17183 in k15938 in k15869 in k15676 in k15673 in k15568 in k15517 in k7924 in k7921 in k5905 in k5612 in k5609 in k5605 in k5314 in k5311 in k5308 in k5305 */
static void C_fcall f_30500(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word ab[3],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_30500,NULL,2,t0,t1);}
t2=(C_word)C_a_i_list(&a,1,((C_word*)((C_word*)t0)[6])[1]);
t3=(C_word)C_i_set_cdr(((C_word*)((C_word*)t0)[5])[1],t2);
t4=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[5])[1]);
t5=C_mutate(((C_word *)((C_word*)t0)[5])+1,t4);
t6=(C_word)C_i_cdr(((C_word*)t0)[4]);
t7=((C_word*)((C_word*)t0)[3])[1];
f_30462(t7,((C_word*)t0)[2],t6);}

/* a30406 in k17459 in k17456 in k17453 in k17450 in k17447 in k17444 in k17441 in k17438 in k17435 in k17432 in k17429 in k17426 in k17423 in k17420 in k17417 in k17414 in k17411 in k17408 in k17269 in k17266 in k17263 in k17260 in k17204 in k17201 in k17198 in k17195 in k17192 in k17189 in k17186 in k17183 in k15938 in k15869 in k15676 in k15673 in k15568 in k15517 in k7924 in k7921 in k5905 in k5612 in k5609 in k5605 in k5314 in k5311 in k5308 in k5305 */
static void C_ccall f_30407(C_word c,C_word t0,C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word ab[7],*a=ab;
if(c!=4) C_bad_argc_2(c,4,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr4,(void*)f_30407,4,t0,t1,t2,t3);}
if(C_truep((C_word)C_i_caddr(t2))){
t4=(C_word)C_i_cadr(t2);
t5=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_30440,a[2]=t1,a[3]=t4,tmp=(C_word)a,a+=4,tmp);
t6=(C_word)C_i_caddr(t2);
C_trace("ChickenBridge.scm: 369  remove-token-type");
f_17208(t5,t6,C_fix(256));}
else{
t4=(C_word)C_i_cadr(t2);
t5=(C_word)C_a_i_list(&a,1,t4);
C_trace("ChickenBridge.scm: 369  make-parse-unit");
f_15873(t1,C_fix(30464),t5,C_SCHEME_FALSE);}}

/* k30438 in a30406 in k17459 in k17456 in k17453 in k17450 in k17447 in k17444 in k17441 in k17438 in k17435 in k17432 in k17429 in k17426 in k17423 in k17420 in k17417 in k17414 in k17411 in k17408 in k17269 in k17266 in k17263 in k17260 in k17204 in k17201 in k17198 in k17195 in k17192 in k17189 in k17186 in k17183 in k15938 in k15869 in k15676 in k15673 in k15568 in k15517 in k7924 in k7921 in k5905 in k5612 in k5609 in k5605 in k5314 in k5311 in k5308 in k5305 */
static void C_ccall f_30440(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[3],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_30440,2,t0,t1);}
t2=(C_word)C_a_i_cons(&a,2,((C_word*)t0)[3],t1);
C_trace("ChickenBridge.scm: 369  make-parse-unit");
f_15873(((C_word*)t0)[2],C_fix(30464),t2,C_SCHEME_FALSE);}

/* k30399 in k17459 in k17456 in k17453 in k17450 in k17447 in k17444 in k17441 in k17438 in k17435 in k17432 in k17429 in k17426 in k17423 in k17420 in k17417 in k17414 in k17411 in k17408 in k17269 in k17266 in k17263 in k17260 in k17204 in k17201 in k17198 in k17195 in k17192 in k17189 in k17186 in k17183 in k15938 in k15869 in k15676 in k15673 in k15568 in k15517 in k7924 in k7921 in k5905 in k5612 in k5609 in k5605 in k5314 in k5311 in k5308 in k5305 */
static void C_ccall f_30401(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 369  hash-table-set!");
t2=C_retrieve(lf[681]);
((C_proc5)C_retrieve_proc(t2))(5,t2,((C_word*)t0)[2],C_retrieve2(lf[277],"*rules*"),C_fix(30464),t1);}

/* k17462 in k17459 in k17456 in k17453 in k17450 in k17447 in k17444 in k17441 in k17438 in k17435 in k17432 in k17429 in k17426 in k17423 in k17420 in k17417 in k17414 in k17411 in k17408 in k17269 in k17266 in k17263 in k17260 in k17204 in k17201 in k17198 in k17195 in k17192 in k17189 in k17186 in k17183 in k15938 in k15869 in k15676 in k15673 in k15568 in k15517 in k7924 in k7921 in k5905 in k5612 in k5609 in k5605 in k5314 in k5311 in k5308 in k5305 */
static void C_ccall f_17464(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word t14;
C_word t15;
C_word ab[39],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_17464,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_17467,a[2]=((C_word*)t0)[2],tmp=(C_word)a,a+=3,tmp);
t3=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_30287,a[2]=t2,tmp=(C_word)a,a+=3,tmp);
t4=(C_word)C_a_i_cons(&a,2,C_fix(29952),C_SCHEME_END_OF_LIST);
t5=(C_word)C_a_i_cons(&a,2,lf[325],t4);
t6=(C_word)C_a_i_cons(&a,2,C_fix(36608),C_SCHEME_END_OF_LIST);
t7=(C_word)C_a_i_cons(&a,2,lf[95],t6);
t8=(C_word)C_a_i_cons(&a,2,C_fix(18193),C_SCHEME_END_OF_LIST);
t9=(C_word)C_a_i_cons(&a,2,t7,t8);
t10=(C_word)C_a_i_cons(&a,2,t5,t9);
t11=(C_word)C_a_i_cons(&a,2,C_fix(13328),t10);
t12=(C_word)C_a_i_cons(&a,2,lf[310],t11);
t13=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_30293,a[2]=((C_word)li484),tmp=(C_word)a,a+=3,tmp);
t14=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_30319,a[2]=((C_word)li485),tmp=(C_word)a,a+=3,tmp);
C_trace("ChickenBridge.scm: 369  make-rule");
f_15572(t3,lf[753],C_fix(32000),t12,t13,t14);}

/* a30318 in k17462 in k17459 in k17456 in k17453 in k17450 in k17447 in k17444 in k17441 in k17438 in k17435 in k17432 in k17429 in k17426 in k17423 in k17420 in k17417 in k17414 in k17411 in k17408 in k17269 in k17266 in k17263 in k17260 in k17204 in k17201 in k17198 in k17195 in k17192 in k17189 in k17186 in k17183 in k15938 in k15869 in k15676 in k15673 in k15568 in k15517 in k7924 in k7921 in k5905 in k5612 in k5609 in k5605 in k5314 in k5311 in k5308 in k5305 */
static void C_ccall f_30319(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4){
C_word tmp;
C_word t5;
C_word t6;
C_word ab[5],*a=ab;
if(c!=5) C_bad_argc_2(c,5,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr5,(void*)f_30319,5,t0,t1,t2,t3,t4);}
t5=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_30323,a[2]=t4,a[3]=t3,a[4]=t1,tmp=(C_word)a,a+=5,tmp);
C_trace("ChickenBridge.scm: 369  parse-unit-parsed");
f_15912(t5,t2);}

/* k30321 in a30318 in k17462 in k17459 in k17456 in k17453 in k17450 in k17447 in k17444 in k17441 in k17438 in k17435 in k17432 in k17429 in k17426 in k17423 in k17420 in k17417 in k17414 in k17411 in k17408 in k17269 in k17266 in k17263 in k17260 in k17204 in k17201 in k17198 in k17195 in k17192 in k17189 in k17186 in k17183 in k15938 in k15869 in k15676 in k15673 in k15568 in k15517 in k7924 in k7921 in k5905 in k5612 in k5609 in k5605 in k5314 in k5311 in k5308 in k5305 */
static void C_ccall f_30323(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[6],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_30323,2,t0,t1);}
t2=(C_word)C_i_car(t1);
t3=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_30329,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=t2,tmp=(C_word)a,a+=6,tmp);
t4=(C_word)C_i_cdr(t1);
C_trace("ChickenBridge.scm: 369  emit");
f_16030(t3,t4,((C_word*)t0)[3],((C_word*)t0)[2]);}

/* k30327 in k30321 in a30318 in k17462 in k17459 in k17456 in k17453 in k17450 in k17447 in k17444 in k17441 in k17438 in k17435 in k17432 in k17429 in k17426 in k17423 in k17420 in k17417 in k17414 in k17411 in k17408 in k17269 in k17266 in k17263 in k17260 in k17204 in k17201 in k17198 in k17195 in k17192 in k17189 in k17186 in k17183 in k15938 in k15869 in k15676 in k15673 in k15568 in k15517 in k7924 in k7921 in k5905 in k5612 in k5609 in k5605 in k5314 in k5311 in k5308 in k5305 */
static void C_ccall f_30329(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_30329,2,t0,t1);}
if(C_truep(((C_word*)t0)[5])){
t2=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_30349,a[2]=((C_word*)t0)[4],a[3]=t1,tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 369  emit");
f_16030(t2,((C_word*)t0)[5],((C_word*)t0)[3],((C_word*)t0)[2]);}
else{
t2=((C_word*)t0)[4];
((C_proc2)(void*)(*((C_word*)t2+1)))(2,t2,(C_word)C_a_i_cons(&a,2,lf[336],t1));}}

/* k30347 in k30327 in k30321 in a30318 in k17462 in k17459 in k17456 in k17453 in k17450 in k17447 in k17444 in k17441 in k17438 in k17435 in k17432 in k17429 in k17426 in k17423 in k17420 in k17417 in k17414 in k17411 in k17408 in k17269 in k17266 in k17263 in k17260 in k17204 in k17201 in k17198 in k17195 in k17192 in k17189 in k17186 in k17183 in k15938 in k15869 in k15676 in k15673 in k15568 in k15517 in k7924 in k7921 in k5905 in k5612 in k5609 in k5605 in k5314 in k5311 in k5308 in k5305 */
static void C_ccall f_30349(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[6],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_30349,2,t0,t1);}
t2=(C_word)C_a_i_cons(&a,2,t1,((C_word*)t0)[3]);
t3=((C_word*)t0)[2];
((C_proc2)(void*)(*((C_word*)t3+1)))(2,t3,(C_word)C_a_i_cons(&a,2,lf[2],t2));}

/* a30292 in k17462 in k17459 in k17456 in k17453 in k17450 in k17447 in k17444 in k17441 in k17438 in k17435 in k17432 in k17429 in k17426 in k17423 in k17420 in k17417 in k17414 in k17411 in k17408 in k17269 in k17266 in k17263 in k17260 in k17204 in k17201 in k17198 in k17195 in k17192 in k17189 in k17186 in k17183 in k15938 in k15869 in k15676 in k15673 in k15568 in k15517 in k7924 in k7921 in k5905 in k5612 in k5609 in k5605 in k5314 in k5311 in k5308 in k5305 */
static void C_ccall f_30293(C_word c,C_word t0,C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word ab[7],*a=ab;
if(c!=4) C_bad_argc_2(c,4,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr4,(void*)f_30293,4,t0,t1,t2,t3);}
t4=(C_word)C_i_cadr(t2);
t5=t4;
t6=(*a=C_VECTOR_TYPE|1,a[1]=t5,tmp=(C_word)a,a+=2,tmp);
t7=(C_word)C_i_caddr(t2);
t8=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_30303,a[2]=t1,a[3]=t7,a[4]=t6,tmp=(C_word)a,a+=5,tmp);
t9=((C_word*)t6)[1];
if(C_truep(t9)){
t10=(C_word)C_i_car(((C_word*)t6)[1]);
t11=C_set_block_item(t6,0,t10);
t12=t8;
f_30303(t12,t11);}
else{
t10=t8;
f_30303(t10,C_SCHEME_FALSE);}}

/* k30301 in a30292 in k17462 in k17459 in k17456 in k17453 in k17450 in k17447 in k17444 in k17441 in k17438 in k17435 in k17432 in k17429 in k17426 in k17423 in k17420 in k17417 in k17414 in k17411 in k17408 in k17269 in k17266 in k17263 in k17260 in k17204 in k17201 in k17198 in k17195 in k17192 in k17189 in k17186 in k17183 in k15938 in k15869 in k15676 in k15673 in k15568 in k15517 in k7924 in k7921 in k5905 in k5612 in k5609 in k5605 in k5314 in k5311 in k5308 in k5305 */
static void C_fcall f_30303(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[3],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_30303,NULL,2,t0,t1);}
t2=(C_word)C_a_i_cons(&a,2,((C_word*)((C_word*)t0)[4])[1],((C_word*)t0)[3]);
C_trace("ChickenBridge.scm: 369  make-parse-unit");
f_15873(((C_word*)t0)[2],C_fix(32000),t2,C_SCHEME_FALSE);}

/* k30285 in k17462 in k17459 in k17456 in k17453 in k17450 in k17447 in k17444 in k17441 in k17438 in k17435 in k17432 in k17429 in k17426 in k17423 in k17420 in k17417 in k17414 in k17411 in k17408 in k17269 in k17266 in k17263 in k17260 in k17204 in k17201 in k17198 in k17195 in k17192 in k17189 in k17186 in k17183 in k15938 in k15869 in k15676 in k15673 in k15568 in k15517 in k7924 in k7921 in k5905 in k5612 in k5609 in k5605 in k5314 in k5311 in k5308 in k5305 */
static void C_ccall f_30287(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 369  hash-table-set!");
t2=C_retrieve(lf[681]);
((C_proc5)C_retrieve_proc(t2))(5,t2,((C_word*)t0)[2],C_retrieve2(lf[277],"*rules*"),C_fix(32000),t1);}

/* k17465 in k17462 in k17459 in k17456 in k17453 in k17450 in k17447 in k17444 in k17441 in k17438 in k17435 in k17432 in k17429 in k17426 in k17423 in k17420 in k17417 in k17414 in k17411 in k17408 in k17269 in k17266 in k17263 in k17260 in k17204 in k17201 in k17198 in k17195 in k17192 in k17189 in k17186 in k17183 in k15938 in k15869 in k15676 in k15673 in k15568 in k15517 in k7924 in k7921 in k5905 in k5612 in k5609 in k5605 in k5314 in k5311 in k5308 in k5305 */
static void C_ccall f_17467(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word t14;
C_word t15;
C_word t16;
C_word t17;
C_word t18;
C_word t19;
C_word t20;
C_word t21;
C_word t22;
C_word t23;
C_word t24;
C_word t25;
C_word t26;
C_word t27;
C_word t28;
C_word t29;
C_word ab[81],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_17467,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_17470,a[2]=((C_word*)t0)[2],tmp=(C_word)a,a+=3,tmp);
t3=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_30090,a[2]=t2,tmp=(C_word)a,a+=3,tmp);
t4=(C_word)C_a_i_cons(&a,2,C_fix(36608),C_SCHEME_END_OF_LIST);
t5=(C_word)C_a_i_cons(&a,2,lf[325],t4);
t6=(C_word)C_a_i_cons(&a,2,C_fix(36608),C_SCHEME_END_OF_LIST);
t7=(C_word)C_a_i_cons(&a,2,C_fix(17920),t6);
t8=(C_word)C_a_i_cons(&a,2,lf[325],t7);
t9=(C_word)C_a_i_cons(&a,2,t8,C_SCHEME_END_OF_LIST);
t10=(C_word)C_a_i_cons(&a,2,t5,t9);
t11=(C_word)C_a_i_cons(&a,2,C_fix(18944),t10);
t12=(C_word)C_a_i_cons(&a,2,C_fix(29696),t11);
t13=(C_word)C_a_i_cons(&a,2,C_fix(14336),t12);
t14=(C_word)C_a_i_cons(&a,2,lf[310],t13);
t15=(C_word)C_a_i_cons(&a,2,C_fix(36608),C_SCHEME_END_OF_LIST);
t16=(C_word)C_a_i_cons(&a,2,C_fix(29696),t15);
t17=(C_word)C_a_i_cons(&a,2,C_fix(19968),t16);
t18=(C_word)C_a_i_cons(&a,2,lf[310],t17);
t19=(C_word)C_a_i_cons(&a,2,C_fix(36608),C_SCHEME_END_OF_LIST);
t20=(C_word)C_a_i_cons(&a,2,C_fix(29696),t19);
t21=(C_word)C_a_i_cons(&a,2,C_fix(19200),t20);
t22=(C_word)C_a_i_cons(&a,2,lf[310],t21);
t23=(C_word)C_a_i_cons(&a,2,t22,C_SCHEME_END_OF_LIST);
t24=(C_word)C_a_i_cons(&a,2,t18,t23);
t25=(C_word)C_a_i_cons(&a,2,t14,t24);
t26=(C_word)C_a_i_cons(&a,2,lf[311],t25);
t27=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_30096,a[2]=((C_word)li482),tmp=(C_word)a,a+=3,tmp);
t28=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_30164,a[2]=((C_word)li483),tmp=(C_word)a,a+=3,tmp);
C_trace("ChickenBridge.scm: 369  make-rule");
f_15572(t3,lf[752],C_fix(32256),t26,t27,t28);}

/* a30163 in k17465 in k17462 in k17459 in k17456 in k17453 in k17450 in k17447 in k17444 in k17441 in k17438 in k17435 in k17432 in k17429 in k17426 in k17423 in k17420 in k17417 in k17414 in k17411 in k17408 in k17269 in k17266 in k17263 in k17260 in k17204 in k17201 in k17198 in k17195 in k17192 in k17189 in k17186 in k17183 in k15938 in k15869 in k15676 in k15673 in k15568 in k15517 in k7924 in k7921 in k5905 in k5612 in k5609 in k5605 in k5314 in k5311 in k5308 in k5305 */
static void C_ccall f_30164(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4){
C_word tmp;
C_word t5;
C_word t6;
C_word ab[5],*a=ab;
if(c!=5) C_bad_argc_2(c,5,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr5,(void*)f_30164,5,t0,t1,t2,t3,t4);}
t5=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_30168,a[2]=t4,a[3]=t3,a[4]=t1,tmp=(C_word)a,a+=5,tmp);
C_trace("ChickenBridge.scm: 369  parse-unit-parsed");
f_15912(t5,t2);}

/* k30166 in a30163 in k17465 in k17462 in k17459 in k17456 in k17453 in k17450 in k17447 in k17444 in k17441 in k17438 in k17435 in k17432 in k17429 in k17426 in k17423 in k17420 in k17417 in k17414 in k17411 in k17408 in k17269 in k17266 in k17263 in k17260 in k17204 in k17201 in k17198 in k17195 in k17192 in k17189 in k17186 in k17183 in k15938 in k15869 in k15676 in k15673 in k15568 in k15517 in k7924 in k7921 in k5905 in k5612 in k5609 in k5605 in k5314 in k5311 in k5308 in k5305 */
static void C_ccall f_30168(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 369  emit");
f_16030(((C_word*)t0)[4],t1,((C_word*)t0)[3],((C_word*)t0)[2]);}

/* a30095 in k17465 in k17462 in k17459 in k17456 in k17453 in k17450 in k17447 in k17444 in k17441 in k17438 in k17435 in k17432 in k17429 in k17426 in k17423 in k17420 in k17417 in k17414 in k17411 in k17408 in k17269 in k17266 in k17263 in k17260 in k17204 in k17201 in k17198 in k17195 in k17192 in k17189 in k17186 in k17183 in k15938 in k15869 in k15676 in k15673 in k15568 in k15517 in k7924 in k7921 in k5905 in k5612 in k5609 in k5605 in k5314 in k5311 in k5308 in k5305 */
static void C_ccall f_30096(C_word c,C_word t0,C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word ab[13],*a=ab;
if(c!=4) C_bad_argc_2(c,4,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr4,(void*)f_30096,4,t0,t1,t2,t3);}
t4=(C_word)C_i_car(t2);
t5=(C_word)C_i_cadr(t2);
t6=C_SCHEME_END_OF_LIST;
t7=(*a=C_VECTOR_TYPE|1,a[1]=t6,tmp=(C_word)a,a+=2,tmp);
t8=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_30109,a[2]=t7,a[3]=t1,tmp=(C_word)a,a+=4,tmp);
t9=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_30115,a[2]=t8,a[3]=t7,a[4]=t5,a[5]=t4,a[6]=t2,tmp=(C_word)a,a+=7,tmp);
C_trace("ChickenBridge.scm: 369  token-unit-type=?");
f_15958(t9,t4,C_fix(14336));}

/* k30113 in a30095 in k17465 in k17462 in k17459 in k17456 in k17453 in k17450 in k17447 in k17444 in k17441 in k17438 in k17435 in k17432 in k17429 in k17426 in k17423 in k17420 in k17417 in k17414 in k17411 in k17408 in k17269 in k17266 in k17263 in k17260 in k17204 in k17201 in k17198 in k17195 in k17192 in k17189 in k17186 in k17183 in k15938 in k15869 in k15676 in k15673 in k15568 in k15517 in k7924 in k7921 in k5905 in k5612 in k5609 in k5605 in k5314 in k5311 in k5308 in k5305 */
static void C_ccall f_30115(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word t14;
C_word t15;
C_word t16;
C_word t17;
C_word ab[29],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_30115,2,t0,t1);}
if(C_truep(t1)){
t2=(C_word)C_i_cadddr(((C_word*)t0)[6]);
t3=t2;
t4=(*a=C_VECTOR_TYPE|1,a[1]=t3,tmp=(C_word)a,a+=2,tmp);
t5=C_SCHEME_FALSE;
t6=(*a=C_VECTOR_TYPE|1,a[1]=t5,tmp=(C_word)a,a+=2,tmp);
t7=C_SCHEME_FALSE;
t8=(*a=C_VECTOR_TYPE|1,a[1]=t7,tmp=(C_word)a,a+=2,tmp);
t9=(*a=C_CLOSURE_TYPE|9,a[1]=(C_word)f_30121,a[2]=((C_word*)t0)[6],a[3]=((C_word*)t0)[2],a[4]=((C_word*)t0)[3],a[5]=t8,a[6]=t6,a[7]=((C_word*)t0)[4],a[8]=((C_word*)t0)[5],a[9]=t4,tmp=(C_word)a,a+=10,tmp);
t10=((C_word*)t4)[1];
if(C_truep(t10)){
t11=(C_word)C_i_car(((C_word*)t4)[1]);
t12=C_set_block_item(t6,0,t11);
t13=t9;
f_30121(t13,t12);}
else{
t11=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_30150,a[2]=t9,a[3]=t6,tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 369  make-parse-unit");
f_15873(t11,C_fix(4608),lf[751],C_SCHEME_FALSE);}}
else{
t2=(C_word)C_i_caddr(((C_word*)t0)[6]);
t3=(C_word)C_a_i_list(&a,3,((C_word*)t0)[5],((C_word*)t0)[4],t2);
t4=C_mutate(((C_word *)((C_word*)t0)[3])+1,t3);
t5=((C_word*)t0)[2];
f_30109(t5,t4);}}

/* k30148 in k30113 in a30095 in k17465 in k17462 in k17459 in k17456 in k17453 in k17450 in k17447 in k17444 in k17441 in k17438 in k17435 in k17432 in k17429 in k17426 in k17423 in k17420 in k17417 in k17414 in k17411 in k17408 in k17269 in k17266 in k17263 in k17260 in k17204 in k17201 in k17198 in k17195 in k17192 in k17189 in k17186 in k17183 in k15938 in k15869 in k15676 in k15673 in k15568 in k15517 in k7924 in k7921 in k5905 in k5612 in k5609 in k5605 in k5314 in k5311 in k5308 in k5305 */
static void C_ccall f_30150(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[3])+1,t1);
t3=((C_word*)t0)[2];
f_30121(t3,t2);}

/* k30119 in k30113 in a30095 in k17465 in k17462 in k17459 in k17456 in k17453 in k17450 in k17447 in k17444 in k17441 in k17438 in k17435 in k17432 in k17429 in k17426 in k17423 in k17420 in k17417 in k17414 in k17411 in k17408 in k17269 in k17266 in k17263 in k17260 in k17204 in k17201 in k17198 in k17195 in k17192 in k17189 in k17186 in k17183 in k15938 in k15869 in k15676 in k15673 in k15568 in k15517 in k7924 in k7921 in k5905 in k5612 in k5609 in k5605 in k5314 in k5311 in k5308 in k5305 */
static void C_fcall f_30121(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_30121,NULL,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|8,a[1]=(C_word)f_30125,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],a[7]=((C_word*)t0)[8],a[8]=((C_word*)t0)[9],tmp=(C_word)a,a+=9,tmp);
C_trace("ChickenBridge.scm: 369  fifth");
t3=C_retrieve(lf[47]);
((C_proc3)C_retrieve_proc(t3))(3,t3,t2,((C_word*)t0)[2]);}

/* k30123 in k30119 in k30113 in a30095 in k17465 in k17462 in k17459 in k17456 in k17453 in k17450 in k17447 in k17444 in k17441 in k17438 in k17435 in k17432 in k17429 in k17426 in k17423 in k17420 in k17417 in k17414 in k17411 in k17408 in k17269 in k17266 in k17263 in k17260 in k17204 in k17201 in k17198 in k17195 in k17192 in k17189 in k17186 in k17183 in k15938 in k15869 in k15676 in k15673 in k15568 in k15517 in k7924 in k7921 in k5905 in k5612 in k5609 in k5605 in k5314 in k5311 in k5308 in k5305 */
static void C_ccall f_30125(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word ab[12],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_30125,2,t0,t1);}
t2=C_mutate(((C_word *)((C_word*)t0)[8])+1,t1);
t3=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_30128,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],a[7]=((C_word*)t0)[7],tmp=(C_word)a,a+=8,tmp);
t4=((C_word*)((C_word*)t0)[8])[1];
if(C_truep(t4)){
t5=(C_word)C_i_cadr(((C_word*)((C_word*)t0)[8])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[4])+1,t5);
t7=t3;
f_30128(t7,t6);}
else{
t5=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_30139,a[2]=t3,a[3]=((C_word*)t0)[4],tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 369  make-parse-unit");
f_15873(t5,C_fix(4608),lf[750],C_SCHEME_FALSE);}}

/* k30137 in k30123 in k30119 in k30113 in a30095 in k17465 in k17462 in k17459 in k17456 in k17453 in k17450 in k17447 in k17444 in k17441 in k17438 in k17435 in k17432 in k17429 in k17426 in k17423 in k17420 in k17417 in k17414 in k17411 in k17408 in k17269 in k17266 in k17263 in k17260 in k17204 in k17201 in k17198 in k17195 in k17192 in k17189 in k17186 in k17183 in k15938 in k15869 in k15676 in k15673 in k15568 in k15517 in k7924 in k7921 in k5905 in k5612 in k5609 in k5605 in k5314 in k5311 in k5308 in k5305 */
static void C_ccall f_30139(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[3])+1,t1);
t3=((C_word*)t0)[2];
f_30128(t3,t2);}

/* k30126 in k30123 in k30119 in k30113 in a30095 in k17465 in k17462 in k17459 in k17456 in k17453 in k17450 in k17447 in k17444 in k17441 in k17438 in k17435 in k17432 in k17429 in k17426 in k17423 in k17420 in k17417 in k17414 in k17411 in k17408 in k17269 in k17266 in k17263 in k17260 in k17204 in k17201 in k17198 in k17195 in k17192 in k17189 in k17186 in k17183 in k15938 in k15869 in k15676 in k15673 in k15568 in k15517 in k7924 in k7921 in k5905 in k5612 in k5609 in k5605 in k5314 in k5311 in k5308 in k5305 */
static void C_fcall f_30128(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[12],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_30128,NULL,2,t0,t1);}
t2=(C_word)C_a_i_list(&a,4,((C_word*)t0)[7],((C_word*)t0)[6],((C_word*)((C_word*)t0)[5])[1],((C_word*)((C_word*)t0)[4])[1]);
t3=C_mutate(((C_word *)((C_word*)t0)[3])+1,t2);
t4=((C_word*)t0)[2];
f_30109(t4,t3);}

/* k30107 in a30095 in k17465 in k17462 in k17459 in k17456 in k17453 in k17450 in k17447 in k17444 in k17441 in k17438 in k17435 in k17432 in k17429 in k17426 in k17423 in k17420 in k17417 in k17414 in k17411 in k17408 in k17269 in k17266 in k17263 in k17260 in k17204 in k17201 in k17198 in k17195 in k17192 in k17189 in k17186 in k17183 in k15938 in k15869 in k15676 in k15673 in k15568 in k15517 in k7924 in k7921 in k5905 in k5612 in k5609 in k5605 in k5314 in k5311 in k5308 in k5305 */
static void C_fcall f_30109(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 369  make-parse-unit");
f_15873(((C_word*)t0)[3],C_fix(32256),((C_word*)((C_word*)t0)[2])[1],C_SCHEME_FALSE);}

/* k30088 in k17465 in k17462 in k17459 in k17456 in k17453 in k17450 in k17447 in k17444 in k17441 in k17438 in k17435 in k17432 in k17429 in k17426 in k17423 in k17420 in k17417 in k17414 in k17411 in k17408 in k17269 in k17266 in k17263 in k17260 in k17204 in k17201 in k17198 in k17195 in k17192 in k17189 in k17186 in k17183 in k15938 in k15869 in k15676 in k15673 in k15568 in k15517 in k7924 in k7921 in k5905 in k5612 in k5609 in k5605 in k5314 in k5311 in k5308 in k5305 */
static void C_ccall f_30090(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 369  hash-table-set!");
t2=C_retrieve(lf[681]);
((C_proc5)C_retrieve_proc(t2))(5,t2,((C_word*)t0)[2],C_retrieve2(lf[277],"*rules*"),C_fix(32256),t1);}

/* k17468 in k17465 in k17462 in k17459 in k17456 in k17453 in k17450 in k17447 in k17444 in k17441 in k17438 in k17435 in k17432 in k17429 in k17426 in k17423 in k17420 in k17417 in k17414 in k17411 in k17408 in k17269 in k17266 in k17263 in k17260 in k17204 in k17201 in k17198 in k17195 in k17192 in k17189 in k17186 in k17183 in k15938 in k15869 in k15676 in k15673 in k15568 in k15517 in k7924 in k7921 in k5905 in k5612 in k5609 in k5605 in k5314 in k5311 in k5308 in k5305 */
static void C_ccall f_17470(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word t14;
C_word t15;
C_word t16;
C_word t17;
C_word t18;
C_word t19;
C_word t20;
C_word t21;
C_word t22;
C_word t23;
C_word t24;
C_word t25;
C_word t26;
C_word t27;
C_word t28;
C_word t29;
C_word t30;
C_word t31;
C_word t32;
C_word t33;
C_word t34;
C_word t35;
C_word t36;
C_word t37;
C_word t38;
C_word t39;
C_word t40;
C_word t41;
C_word t42;
C_word t43;
C_word t44;
C_word t45;
C_word t46;
C_word t47;
C_word t48;
C_word t49;
C_word t50;
C_word t51;
C_word t52;
C_word t53;
C_word t54;
C_word t55;
C_word t56;
C_word t57;
C_word t58;
C_word t59;
C_word t60;
C_word ab[174],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_17470,2,t0,t1);}
t2=C_mutate(&lf[332],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_17472,a[2]=((C_word)li261),tmp=(C_word)a,a+=3,tmp));
t3=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_17993,a[2]=((C_word*)t0)[2],tmp=(C_word)a,a+=3,tmp);
t4=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_29818,a[2]=t3,tmp=(C_word)a,a+=3,tmp);
t5=(C_word)C_a_i_cons(&a,2,C_fix(29696),C_SCHEME_END_OF_LIST);
t6=(C_word)C_a_i_cons(&a,2,C_fix(23296),t5);
t7=(C_word)C_a_i_cons(&a,2,lf[310],t6);
t8=(C_word)C_a_i_cons(&a,2,C_fix(29696),C_SCHEME_END_OF_LIST);
t9=(C_word)C_a_i_cons(&a,2,C_fix(18944),t8);
t10=(C_word)C_a_i_cons(&a,2,lf[325],t9);
t11=(C_word)C_a_i_cons(&a,2,t10,C_SCHEME_END_OF_LIST);
t12=(C_word)C_a_i_cons(&a,2,C_fix(29696),t11);
t13=(C_word)C_a_i_cons(&a,2,C_fix(10756),t12);
t14=(C_word)C_a_i_cons(&a,2,C_fix(25088),t13);
t15=(C_word)C_a_i_cons(&a,2,C_fix(22272),t14);
t16=(C_word)C_a_i_cons(&a,2,lf[310],t15);
t17=(C_word)C_a_i_cons(&a,2,C_fix(29696),C_SCHEME_END_OF_LIST);
t18=(C_word)C_a_i_cons(&a,2,C_fix(22784),t17);
t19=(C_word)C_a_i_cons(&a,2,C_fix(25088),t18);
t20=(C_word)C_a_i_cons(&a,2,C_fix(22272),t19);
t21=(C_word)C_a_i_cons(&a,2,lf[310],t20);
t22=(C_word)C_a_i_cons(&a,2,C_fix(21760),C_SCHEME_END_OF_LIST);
t23=(C_word)C_a_i_cons(&a,2,C_fix(20992),t22);
t24=(C_word)C_a_i_cons(&a,2,C_fix(23552),t23);
t25=(C_word)C_a_i_cons(&a,2,C_fix(21248),t24);
t26=(C_word)C_a_i_cons(&a,2,lf[311],t25);
t27=(C_word)C_a_i_cons(&a,2,C_fix(29696),C_SCHEME_END_OF_LIST);
t28=(C_word)C_a_i_cons(&a,2,t26,t27);
t29=(C_word)C_a_i_cons(&a,2,lf[325],t28);
t30=(C_word)C_a_i_cons(&a,2,C_fix(29696),C_SCHEME_END_OF_LIST);
t31=(C_word)C_a_i_cons(&a,2,C_fix(21504),t30);
t32=(C_word)C_a_i_cons(&a,2,lf[325],t31);
t33=(C_word)C_a_i_cons(&a,2,t32,C_SCHEME_END_OF_LIST);
t34=(C_word)C_a_i_cons(&a,2,t29,t33);
t35=(C_word)C_a_i_cons(&a,2,C_fix(29696),t34);
t36=(C_word)C_a_i_cons(&a,2,C_fix(22528),t35);
t37=(C_word)C_a_i_cons(&a,2,C_fix(25088),t36);
t38=(C_word)C_a_i_cons(&a,2,C_fix(22272),t37);
t39=(C_word)C_a_i_cons(&a,2,lf[310],t38);
t40=(C_word)C_a_i_cons(&a,2,C_fix(21760),C_SCHEME_END_OF_LIST);
t41=(C_word)C_a_i_cons(&a,2,C_fix(20992),t40);
t42=(C_word)C_a_i_cons(&a,2,C_fix(23552),t41);
t43=(C_word)C_a_i_cons(&a,2,C_fix(21248),t42);
t44=(C_word)C_a_i_cons(&a,2,lf[311],t43);
t45=(C_word)C_a_i_cons(&a,2,C_fix(29696),C_SCHEME_END_OF_LIST);
t46=(C_word)C_a_i_cons(&a,2,C_fix(21504),t45);
t47=(C_word)C_a_i_cons(&a,2,lf[325],t46);
t48=(C_word)C_a_i_cons(&a,2,t47,C_SCHEME_END_OF_LIST);
t49=(C_word)C_a_i_cons(&a,2,C_fix(29696),t48);
t50=(C_word)C_a_i_cons(&a,2,t44,t49);
t51=(C_word)C_a_i_cons(&a,2,C_fix(25088),t50);
t52=(C_word)C_a_i_cons(&a,2,C_fix(22272),t51);
t53=(C_word)C_a_i_cons(&a,2,lf[310],t52);
t54=(C_word)C_a_i_cons(&a,2,t53,C_SCHEME_END_OF_LIST);
t55=(C_word)C_a_i_cons(&a,2,t39,t54);
t56=(C_word)C_a_i_cons(&a,2,t21,t55);
t57=(C_word)C_a_i_cons(&a,2,t16,t56);
t58=(C_word)C_a_i_cons(&a,2,t7,t57);
t59=(C_word)C_a_i_cons(&a,2,lf[311],t58);
C_trace("ChickenBridge.scm: 369  make-rule");
f_15572(t4,lf[749],C_fix(33024),t59,C_retrieve2(lf[332],"sal-parse-stepping"),C_SCHEME_FALSE);}

/* k29816 in k17468 in k17465 in k17462 in k17459 in k17456 in k17453 in k17450 in k17447 in k17444 in k17441 in k17438 in k17435 in k17432 in k17429 in k17426 in k17423 in k17420 in k17417 in k17414 in k17411 in k17408 in k17269 in k17266 in k17263 in k17260 in k17204 in k17201 in k17198 in k17195 in k17192 in k17189 in k17186 in k17183 in k15938 in k15869 in k15676 in k15673 in k15568 in k15517 in k7924 in k7921 in k5905 in k5612 in k5609 in k5605 in k5314 in k5311 in k5308 in k5305 */
static void C_ccall f_29818(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 369  hash-table-set!");
t2=C_retrieve(lf[681]);
((C_proc5)C_retrieve_proc(t2))(5,t2,((C_word*)t0)[2],C_retrieve2(lf[277],"*rules*"),C_fix(33024),t1);}

/* k17991 in k17468 in k17465 in k17462 in k17459 in k17456 in k17453 in k17450 in k17447 in k17444 in k17441 in k17438 in k17435 in k17432 in k17429 in k17426 in k17423 in k17420 in k17417 in k17414 in k17411 in k17408 in k17269 in k17266 in k17263 in k17260 in k17204 in k17201 in k17198 in k17195 in k17192 in k17189 in k17186 in k17183 in k15938 in k15869 in k15676 in k15673 in k15568 in k15517 in k7924 in k7921 in k5905 in k5612 in k5609 in k5605 in k5314 in k5311 in k5308 in k5305 */
static void C_ccall f_17993(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word t14;
C_word ab[37],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_17993,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_17996,a[2]=((C_word*)t0)[2],tmp=(C_word)a,a+=3,tmp);
t3=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_29762,a[2]=t2,tmp=(C_word)a,a+=3,tmp);
t4=(C_word)C_a_i_cons(&a,2,C_fix(29696),C_SCHEME_END_OF_LIST);
t5=(C_word)C_a_i_cons(&a,2,C_fix(20224),t4);
t6=(C_word)C_a_i_cons(&a,2,lf[310],t5);
t7=(C_word)C_a_i_cons(&a,2,C_fix(29696),C_SCHEME_END_OF_LIST);
t8=(C_word)C_a_i_cons(&a,2,C_fix(19456),t7);
t9=(C_word)C_a_i_cons(&a,2,lf[310],t8);
t10=(C_word)C_a_i_cons(&a,2,t9,C_SCHEME_END_OF_LIST);
t11=(C_word)C_a_i_cons(&a,2,t6,t10);
t12=(C_word)C_a_i_cons(&a,2,lf[311],t11);
t13=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_29770,a[2]=t12,a[3]=t3,tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 369  simple-unit-parser");
f_16271(t13,C_fix(33280));}

/* k29768 in k17991 in k17468 in k17465 in k17462 in k17459 in k17456 in k17453 in k17450 in k17447 in k17444 in k17441 in k17438 in k17435 in k17432 in k17429 in k17426 in k17423 in k17420 in k17417 in k17414 in k17411 in k17408 in k17269 in k17266 in k17263 in k17260 in k17204 in k17201 in k17198 in k17195 in k17192 in k17189 in k17186 in k17183 in k15938 in k15869 in k15676 in k15673 in k15568 in k15517 in k7924 in k7921 in k5905 in k5612 in k5609 in k5605 in k5314 in k5311 in k5308 in k5305 */
static void C_ccall f_29770(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 369  make-rule");
f_15572(((C_word*)t0)[3],lf[748],C_fix(33280),((C_word*)t0)[2],t1,C_SCHEME_FALSE);}

/* k29760 in k17991 in k17468 in k17465 in k17462 in k17459 in k17456 in k17453 in k17450 in k17447 in k17444 in k17441 in k17438 in k17435 in k17432 in k17429 in k17426 in k17423 in k17420 in k17417 in k17414 in k17411 in k17408 in k17269 in k17266 in k17263 in k17260 in k17204 in k17201 in k17198 in k17195 in k17192 in k17189 in k17186 in k17183 in k15938 in k15869 in k15676 in k15673 in k15568 in k15517 in k7924 in k7921 in k5905 in k5612 in k5609 in k5605 in k5314 in k5311 in k5308 in k5305 */
static void C_ccall f_29762(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 369  hash-table-set!");
t2=C_retrieve(lf[681]);
((C_proc5)C_retrieve_proc(t2))(5,t2,((C_word*)t0)[2],C_retrieve2(lf[277],"*rules*"),C_fix(33280),t1);}

/* k17994 in k17991 in k17468 in k17465 in k17462 in k17459 in k17456 in k17453 in k17450 in k17447 in k17444 in k17441 in k17438 in k17435 in k17432 in k17429 in k17426 in k17423 in k17420 in k17417 in k17414 in k17411 in k17408 in k17269 in k17266 in k17263 in k17260 in k17204 in k17201 in k17198 in k17195 in k17192 in k17189 in k17186 in k17183 in k15938 in k15869 in k15676 in k15673 in k15568 in k15517 in k7924 in k7921 in k5905 in k5612 in k5609 in k5605 in k5314 in k5311 in k5308 in k5305 */
static void C_ccall f_17996(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word t14;
C_word t15;
C_word t16;
C_word t17;
C_word t18;
C_word t19;
C_word t20;
C_word t21;
C_word t22;
C_word t23;
C_word t24;
C_word t25;
C_word t26;
C_word t27;
C_word t28;
C_word ab[78],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_17996,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_18518,a[2]=((C_word*)t0)[2],tmp=(C_word)a,a+=3,tmp);
t3=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_29590,a[2]=t2,tmp=(C_word)a,a+=3,tmp);
t4=(C_word)C_a_i_cons(&a,2,C_fix(16144),C_SCHEME_END_OF_LIST);
t5=(C_word)C_a_i_cons(&a,2,C_fix(14864),t4);
t6=(C_word)C_a_i_cons(&a,2,lf[311],t5);
t7=(C_word)C_a_i_cons(&a,2,C_fix(29952),C_SCHEME_END_OF_LIST);
t8=(C_word)C_a_i_cons(&a,2,lf[325],t7);
t9=(C_word)C_a_i_cons(&a,2,C_fix(33024),C_SCHEME_END_OF_LIST);
t10=(C_word)C_a_i_cons(&a,2,lf[95],t9);
t11=(C_word)C_a_i_cons(&a,2,C_fix(33280),C_SCHEME_END_OF_LIST);
t12=(C_word)C_a_i_cons(&a,2,lf[95],t11);
t13=(C_word)C_a_i_cons(&a,2,C_fix(36608),C_SCHEME_END_OF_LIST);
t14=(C_word)C_a_i_cons(&a,2,lf[91],t13);
t15=(C_word)C_a_i_cons(&a,2,C_fix(36608),C_SCHEME_END_OF_LIST);
t16=(C_word)C_a_i_cons(&a,2,C_fix(22016),t15);
t17=(C_word)C_a_i_cons(&a,2,lf[325],t16);
t18=(C_word)C_a_i_cons(&a,2,C_fix(18193),C_SCHEME_END_OF_LIST);
t19=(C_word)C_a_i_cons(&a,2,t17,t18);
t20=(C_word)C_a_i_cons(&a,2,t14,t19);
t21=(C_word)C_a_i_cons(&a,2,t12,t20);
t22=(C_word)C_a_i_cons(&a,2,t10,t21);
t23=(C_word)C_a_i_cons(&a,2,t8,t22);
t24=(C_word)C_a_i_cons(&a,2,t6,t23);
t25=(C_word)C_a_i_cons(&a,2,lf[310],t24);
t26=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_29596,a[2]=((C_word)li476),tmp=(C_word)a,a+=3,tmp);
t27=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_29642,a[2]=((C_word)li481),tmp=(C_word)a,a+=3,tmp);
C_trace("ChickenBridge.scm: 369  make-rule");
f_15572(t3,lf[747],C_fix(32512),t25,t26,t27);}

/* a29641 in k17994 in k17991 in k17468 in k17465 in k17462 in k17459 in k17456 in k17453 in k17450 in k17447 in k17444 in k17441 in k17438 in k17435 in k17432 in k17429 in k17426 in k17423 in k17420 in k17417 in k17414 in k17411 in k17408 in k17269 in k17266 in k17263 in k17260 in k17204 in k17201 in k17198 in k17195 in k17192 in k17189 in k17186 in k17183 in k15938 in k15869 in k15676 in k15673 in k15568 in k15517 in k7924 in k7921 in k5905 in k5612 in k5609 in k5605 in k5314 in k5311 in k5308 in k5305 */
static void C_ccall f_29642(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4){
C_word tmp;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word ab[7],*a=ab;
if(c!=5) C_bad_argc_2(c,5,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr5,(void*)f_29642,5,t0,t1,t2,t3,t4);}
t5=t3;
t6=(*a=C_VECTOR_TYPE|1,a[1]=t5,tmp=(C_word)a,a+=2,tmp);
t7=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_18002,a[2]=t4,a[3]=t6,a[4]=t1,tmp=(C_word)a,a+=5,tmp);
C_trace("ChickenBridge.scm: 369  parse-unit-parsed");
f_15912(t7,t2);}

/* k18000 in a29641 in k17994 in k17991 in k17468 in k17465 in k17462 in k17459 in k17456 in k17453 in k17450 in k17447 in k17444 in k17441 in k17438 in k17435 in k17432 in k17429 in k17426 in k17423 in k17420 in k17417 in k17414 in k17411 in k17408 in k17269 in k17266 in k17263 in k17260 in k17204 in k17201 in k17198 in k17195 in k17192 in k17189 in k17186 in k17183 in k15938 in k15869 in k15676 in k15673 in k15568 in k15517 in k7924 in k7921 in k5905 in k5612 in k5609 in k5605 in k5314 in k5311 in k5308 in k5305 */
static void C_ccall f_18002(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word t14;
C_word t15;
C_word t16;
C_word t17;
C_word t18;
C_word t19;
C_word ab[33],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_18002,2,t0,t1);}
t2=t1;
t3=(*a=C_VECTOR_TYPE|1,a[1]=t2,tmp=(C_word)a,a+=2,tmp);
t4=C_SCHEME_FALSE;
t5=(*a=C_VECTOR_TYPE|1,a[1]=t4,tmp=(C_word)a,a+=2,tmp);
t6=C_SCHEME_END_OF_LIST;
t7=(*a=C_VECTOR_TYPE|1,a[1]=t6,tmp=(C_word)a,a+=2,tmp);
t8=C_SCHEME_END_OF_LIST;
t9=(*a=C_VECTOR_TYPE|1,a[1]=t8,tmp=(C_word)a,a+=2,tmp);
t10=C_SCHEME_END_OF_LIST;
t11=(*a=C_VECTOR_TYPE|1,a[1]=t10,tmp=(C_word)a,a+=2,tmp);
t12=C_SCHEME_END_OF_LIST;
t13=(*a=C_VECTOR_TYPE|1,a[1]=t12,tmp=(C_word)a,a+=2,tmp);
t14=C_SCHEME_END_OF_LIST;
t15=(*a=C_VECTOR_TYPE|1,a[1]=t14,tmp=(C_word)a,a+=2,tmp);
t16=(*a=C_CLOSURE_TYPE|11,a[1]=(C_word)f_18020,a[2]=t11,a[3]=((C_word*)t0)[2],a[4]=((C_word*)t0)[3],a[5]=t7,a[6]=((C_word*)t0)[4],a[7]=t15,a[8]=t13,a[9]=t5,a[10]=t9,a[11]=t3,tmp=(C_word)a,a+=12,tmp);
t17=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_18477,a[2]=t3,a[3]=((C_word*)t0)[2],a[4]=t5,a[5]=t16,a[6]=((C_word*)t0)[3],tmp=(C_word)a,a+=7,tmp);
t18=(C_word)C_i_car(((C_word*)t3)[1]);
C_trace("ChickenBridge.scm: 369  token-unit-type=?");
f_15958(t17,t18,C_fix(14864));}

/* k18475 in k18000 in a29641 in k17994 in k17991 in k17468 in k17465 in k17462 in k17459 in k17456 in k17453 in k17450 in k17447 in k17444 in k17441 in k17438 in k17435 in k17432 in k17429 in k17426 in k17423 in k17420 in k17417 in k17414 in k17411 in k17408 in k17269 in k17266 in k17263 in k17260 in k17204 in k17201 in k17198 in k17195 in k17192 in k17189 in k17186 in k17183 in k15938 in k15869 in k15676 in k15673 in k15568 in k15517 in k7924 in k7921 in k5905 in k5612 in k5609 in k5605 in k5314 in k5311 in k5308 in k5305 */
static void C_ccall f_18477(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[14],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_18477,2,t0,t1);}
if(C_truep(t1)){
t2=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_18481,a[2]=((C_word*)t0)[5],a[3]=((C_word*)t0)[6],tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 369  add-emit-info");
f_16002(t2,lf[744],C_SCHEME_TRUE,((C_word*)((C_word*)t0)[6])[1]);}
else{
t2=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_18484,a[2]=((C_word*)t0)[5],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[6],tmp=(C_word)a,a+=5,tmp);
t3=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_18511,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=t2,tmp=(C_word)a,a+=5,tmp);
C_trace("ChickenBridge.scm: 369  get-emit-info");
f_15990(t3,lf[734],((C_word*)((C_word*)t0)[6])[1]);}}

/* k18509 in k18475 in k18000 in a29641 in k17994 in k17991 in k17468 in k17465 in k17462 in k17459 in k17456 in k17453 in k17450 in k17447 in k17444 in k17441 in k17438 in k17435 in k17432 in k17429 in k17426 in k17423 in k17420 in k17417 in k17414 in k17411 in k17408 in k17269 in k17266 in k17263 in k17260 in k17204 in k17201 in k17198 in k17195 in k17192 in k17189 in k17186 in k17183 in k15938 in k15869 in k15676 in k15673 in k15568 in k15517 in k7924 in k7921 in k5905 in k5612 in k5609 in k5605 in k5314 in k5311 in k5308 in k5305 */
static void C_ccall f_18511(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_18511,2,t0,t1);}
if(C_truep(t1)){
t2=((C_word*)t0)[4];
f_18484(2,t2,C_SCHEME_UNDEFINED);}
else{
t2=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_18499,a[2]=((C_word*)t0)[4],a[3]=((C_word*)t0)[3],tmp=(C_word)a,a+=4,tmp);
t3=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_18503,a[2]=t2,tmp=(C_word)a,a+=3,tmp);
t4=(C_word)C_i_car(((C_word*)((C_word*)t0)[2])[1]);
C_trace("ChickenBridge.scm: 369  parse-unit-position");
f_15930(t3,t4);}}

/* k18501 in k18509 in k18475 in k18000 in a29641 in k17994 in k17991 in k17468 in k17465 in k17462 in k17459 in k17456 in k17453 in k17450 in k17447 in k17444 in k17441 in k17438 in k17435 in k17432 in k17429 in k17426 in k17423 in k17420 in k17417 in k17414 in k17411 in k17408 in k17269 in k17266 in k17263 in k17260 in k17204 in k17201 in k17198 in k17195 in k17192 in k17189 in k17186 in k17183 in k15938 in k15869 in k15676 in k15673 in k15568 in k15517 in k7924 in k7921 in k5905 in k5612 in k5609 in k5605 in k5314 in k5311 in k5308 in k5305 */
static void C_ccall f_18503(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 369  make-parse-error");
f_15822(((C_word*)t0)[2],lf[746],t1);}

/* k18497 in k18509 in k18475 in k18000 in a29641 in k17994 in k17991 in k17468 in k17465 in k17462 in k17459 in k17456 in k17453 in k17450 in k17447 in k17444 in k17441 in k17438 in k17435 in k17432 in k17429 in k17426 in k17423 in k17420 in k17417 in k17414 in k17411 in k17408 in k17269 in k17266 in k17263 in k17260 in k17204 in k17201 in k17198 in k17195 in k17192 in k17189 in k17186 in k17183 in k15938 in k15869 in k15676 in k15673 in k15568 in k15517 in k7924 in k7921 in k5905 in k5612 in k5609 in k5605 in k5314 in k5311 in k5308 in k5305 */
static void C_ccall f_18499(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 369  errf");
t2=((C_word*)t0)[3];
((C_proc3)C_retrieve_proc(t2))(3,t2,((C_word*)t0)[2],t1);}

/* k18482 in k18475 in k18000 in a29641 in k17994 in k17991 in k17468 in k17465 in k17462 in k17459 in k17456 in k17453 in k17450 in k17447 in k17444 in k17441 in k17438 in k17435 in k17432 in k17429 in k17426 in k17423 in k17420 in k17417 in k17414 in k17411 in k17408 in k17269 in k17266 in k17263 in k17260 in k17204 in k17201 in k17198 in k17195 in k17192 in k17189 in k17186 in k17183 in k15938 in k15869 in k15676 in k15673 in k15568 in k15517 in k7924 in k7921 in k5905 in k5612 in k5609 in k5605 in k5314 in k5311 in k5308 in k5305 */
static void C_ccall f_18484(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[5],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_18484,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_18488,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],tmp=(C_word)a,a+=5,tmp);
C_trace("ChickenBridge.scm: 369  add-emit-info");
f_16002(t2,lf[745],C_SCHEME_TRUE,((C_word*)((C_word*)t0)[4])[1]);}

/* k18486 in k18482 in k18475 in k18000 in a29641 in k17994 in k17991 in k17468 in k17465 in k17462 in k17459 in k17456 in k17453 in k17450 in k17447 in k17444 in k17441 in k17438 in k17435 in k17432 in k17429 in k17426 in k17423 in k17420 in k17417 in k17414 in k17411 in k17408 in k17269 in k17266 in k17263 in k17260 in k17204 in k17201 in k17198 in k17195 in k17192 in k17189 in k17186 in k17183 in k15938 in k15869 in k15676 in k15673 in k15568 in k15517 in k7924 in k7921 in k5905 in k5612 in k5609 in k5605 in k5314 in k5311 in k5308 in k5305 */
static void C_ccall f_18488(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[4])+1,t1);
t3=C_set_block_item(((C_word*)t0)[3],0,C_SCHEME_TRUE);
t4=((C_word*)t0)[2];
f_18020(t4,t3);}

/* k18479 in k18475 in k18000 in a29641 in k17994 in k17991 in k17468 in k17465 in k17462 in k17459 in k17456 in k17453 in k17450 in k17447 in k17444 in k17441 in k17438 in k17435 in k17432 in k17429 in k17426 in k17423 in k17420 in k17417 in k17414 in k17411 in k17408 in k17269 in k17266 in k17263 in k17260 in k17204 in k17201 in k17198 in k17195 in k17192 in k17189 in k17186 in k17183 in k15938 in k15869 in k15676 in k15673 in k15568 in k15517 in k7924 in k7921 in k5905 in k5612 in k5609 in k5605 in k5314 in k5311 in k5308 in k5305 */
static void C_ccall f_18481(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[3])+1,t1);
t3=((C_word*)t0)[2];
f_18020(t3,t2);}

/* k18018 in k18000 in a29641 in k17994 in k17991 in k17468 in k17465 in k17462 in k17459 in k17456 in k17453 in k17450 in k17447 in k17444 in k17441 in k17438 in k17435 in k17432 in k17429 in k17426 in k17423 in k17420 in k17417 in k17414 in k17411 in k17408 in k17269 in k17266 in k17263 in k17260 in k17204 in k17201 in k17198 in k17195 in k17192 in k17189 in k17186 in k17183 in k15938 in k15869 in k15676 in k15673 in k15568 in k15517 in k7924 in k7921 in k5905 in k5612 in k5609 in k5605 in k5314 in k5311 in k5308 in k5305 */
static void C_fcall f_18020(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word ab[20],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_18020,NULL,2,t0,t1);}
t2=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[11])[1]);
t3=C_mutate(((C_word *)((C_word*)t0)[11])+1,t2);
t4=(*a=C_CLOSURE_TYPE|11,a[1]=(C_word)f_18027,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[11],a[4]=((C_word*)t0)[3],a[5]=((C_word*)t0)[4],a[6]=((C_word*)t0)[5],a[7]=((C_word*)t0)[6],a[8]=((C_word*)t0)[7],a[9]=((C_word*)t0)[8],a[10]=((C_word*)t0)[9],a[11]=((C_word*)t0)[10],tmp=(C_word)a,a+=12,tmp);
if(C_truep((C_word)C_i_car(((C_word*)((C_word*)t0)[11])[1]))){
t5=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_18466,a[2]=t4,a[3]=((C_word*)t0)[5],tmp=(C_word)a,a+=4,tmp);
t6=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_18470,a[2]=((C_word*)t0)[5],a[3]=t5,tmp=(C_word)a,a+=4,tmp);
t7=(C_word)C_i_car(((C_word*)((C_word*)t0)[11])[1]);
C_trace("ChickenBridge.scm: 369  emit");
f_16030(t6,t7,((C_word*)((C_word*)t0)[4])[1],((C_word*)t0)[3]);}
else{
t5=t4;
f_18027(t5,C_SCHEME_UNDEFINED);}}

/* k18468 in k18018 in k18000 in a29641 in k17994 in k17991 in k17468 in k17465 in k17462 in k17459 in k17456 in k17453 in k17450 in k17447 in k17444 in k17441 in k17438 in k17435 in k17432 in k17429 in k17426 in k17423 in k17420 in k17417 in k17414 in k17411 in k17408 in k17269 in k17266 in k17263 in k17260 in k17204 in k17201 in k17198 in k17195 in k17192 in k17189 in k17186 in k17183 in k15938 in k15869 in k15676 in k15673 in k15568 in k15517 in k7924 in k7921 in k5905 in k5612 in k5609 in k5605 in k5314 in k5311 in k5308 in k5305 */
static void C_ccall f_18470(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 369  append");
t2=*((C_word*)lf[18]+1);
((C_proc4)C_retrieve_proc(t2))(4,t2,((C_word*)t0)[3],((C_word*)((C_word*)t0)[2])[1],t1);}

/* k18464 in k18018 in k18000 in a29641 in k17994 in k17991 in k17468 in k17465 in k17462 in k17459 in k17456 in k17453 in k17450 in k17447 in k17444 in k17441 in k17438 in k17435 in k17432 in k17429 in k17426 in k17423 in k17420 in k17417 in k17414 in k17411 in k17408 in k17269 in k17266 in k17263 in k17260 in k17204 in k17201 in k17198 in k17195 in k17192 in k17189 in k17186 in k17183 in k15938 in k15869 in k15676 in k15673 in k15568 in k15517 in k7924 in k7921 in k5905 in k5612 in k5609 in k5605 in k5314 in k5311 in k5308 in k5305 */
static void C_ccall f_18466(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[3])+1,t1);
t3=((C_word*)t0)[2];
f_18027(t3,t2);}

/* k18025 in k18018 in k18000 in a29641 in k17994 in k17991 in k17468 in k17465 in k17462 in k17459 in k17456 in k17453 in k17450 in k17447 in k17444 in k17441 in k17438 in k17435 in k17432 in k17429 in k17426 in k17423 in k17420 in k17417 in k17414 in k17411 in k17408 in k17269 in k17266 in k17263 in k17260 in k17204 in k17201 in k17198 in k17195 in k17192 in k17189 in k17186 in k17183 in k15938 in k15869 in k15676 in k15673 in k15568 in k15517 in k7924 in k7921 in k5905 in k5612 in k5609 in k5605 in k5314 in k5311 in k5308 in k5305 */
static void C_fcall f_18027(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word ab[22],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_18027,NULL,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|11,a[1]=(C_word)f_18030,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],a[7]=((C_word*)t0)[7],a[8]=((C_word*)t0)[8],a[9]=((C_word*)t0)[9],a[10]=((C_word*)t0)[10],a[11]=((C_word*)t0)[11],tmp=(C_word)a,a+=12,tmp);
t3=(C_word)C_i_cadr(((C_word*)((C_word*)t0)[3])[1]);
t4=C_SCHEME_UNDEFINED;
t5=(*a=C_VECTOR_TYPE|1,a[1]=t4,tmp=(C_word)a,a+=2,tmp);
t6=C_set_block_item(t5,0,(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_18341,a[2]=((C_word*)t0)[11],a[3]=((C_word*)t0)[2],a[4]=((C_word*)t0)[9],a[5]=((C_word*)t0)[6],a[6]=t5,a[7]=((C_word)li480),tmp=(C_word)a,a+=8,tmp));
t7=((C_word*)t5)[1];
f_18341(t7,t2,t3);}

/* do2840 in k18025 in k18018 in k18000 in a29641 in k17994 in k17991 in k17468 in k17465 in k17462 in k17459 in k17456 in k17453 in k17450 in k17447 in k17444 in k17441 in k17438 in k17435 in k17432 in k17429 in k17426 in k17423 in k17420 in k17417 in k17414 in k17411 in k17408 in k17269 in k17266 in k17263 in k17260 in k17204 in k17201 in k17198 in k17195 in k17192 in k17189 in k17186 in k17183 in k15938 in k15869 in k15676 in k15673 in k15568 in k15517 in k7924 in k7921 in k5905 in k5612 in k5609 in k5605 in k5314 in k5311 in k5308 in k5305 */
static void C_fcall f_18341(C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[12],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_18341,NULL,3,t0,t1,t2);}
if(C_truep((C_word)C_i_nullp(t2))){
t3=t1;
((C_proc2)(void*)(*((C_word*)t3+1)))(2,t3,C_SCHEME_FALSE);}
else{
t3=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_18351,a[2]=t1,a[3]=((C_word*)t0)[6],a[4]=t2,tmp=(C_word)a,a+=5,tmp);
t4=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_18362,a[2]=t3,a[3]=((C_word*)t0)[2],a[4]=((C_word*)t0)[3],a[5]=((C_word*)t0)[4],a[6]=((C_word*)t0)[5],tmp=(C_word)a,a+=7,tmp);
t5=(C_word)C_i_car(t2);
C_trace("ChickenBridge.scm: 369  parse-unit-parsed");
f_15912(t4,t5);}}

/* k18360 in do2840 in k18025 in k18018 in k18000 in a29641 in k17994 in k17991 in k17468 in k17465 in k17462 in k17459 in k17456 in k17453 in k17450 in k17447 in k17444 in k17441 in k17438 in k17435 in k17432 in k17429 in k17426 in k17423 in k17420 in k17417 in k17414 in k17411 in k17408 in k17269 in k17266 in k17263 in k17260 in k17204 in k17201 in k17198 in k17195 in k17192 in k17189 in k17186 in k17183 in k15938 in k15869 in k15676 in k15673 in k15568 in k15517 in k7924 in k7921 in k5905 in k5612 in k5609 in k5605 in k5314 in k5311 in k5308 in k5305 */
static void C_ccall f_18362(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[10],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_18362,2,t0,t1);}
t2=C_SCHEME_UNDEFINED;
t3=(*a=C_VECTOR_TYPE|1,a[1]=t2,tmp=(C_word)a,a+=2,tmp);
t4=C_set_block_item(t3,0,(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_18364,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=t3,a[6]=((C_word*)t0)[6],a[7]=((C_word)li479),tmp=(C_word)a,a+=8,tmp));
t5=((C_word*)t3)[1];
f_18364(t5,((C_word*)t0)[2],t1);}

/* do2843 in k18360 in do2840 in k18025 in k18018 in k18000 in a29641 in k17994 in k17991 in k17468 in k17465 in k17462 in k17459 in k17456 in k17453 in k17450 in k17447 in k17444 in k17441 in k17438 in k17435 in k17432 in k17429 in k17426 in k17423 in k17420 in k17417 in k17414 in k17411 in k17408 in k17269 in k17266 in k17263 in k17260 in k17204 in k17201 in k17198 in k17195 in k17192 in k17189 in k17186 in k17183 in k15938 in k15869 in k15676 in k15673 in k15568 in k15517 in k7924 in k7921 in k5905 in k5612 in k5609 in k5605 in k5314 in k5311 in k5308 in k5305 */
static void C_fcall f_18364(C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word ab[19],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_18364,NULL,3,t0,t1,t2);}
if(C_truep((C_word)C_i_nullp(t2))){
t3=t1;
((C_proc2)(void*)(*((C_word*)t3+1)))(2,t3,C_SCHEME_FALSE);}
else{
t3=(C_word)C_i_car(t2);
t4=(*a=C_CLOSURE_TYPE|9,a[1]=(C_word)f_18378,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=t3,a[5]=((C_word*)t0)[4],a[6]=t1,a[7]=((C_word*)t0)[5],a[8]=t2,a[9]=((C_word*)t0)[6],tmp=(C_word)a,a+=10,tmp);
t5=(C_word)C_i_car(t3);
t6=(C_word)C_i_cadr(t3);
t7=(C_word)C_a_i_list(&a,2,t5,t6);
t8=(C_word)C_a_i_list(&a,1,t7);
C_trace("ChickenBridge.scm: 369  append");
t9=*((C_word*)lf[18]+1);
((C_proc4)C_retrieve_proc(t9))(4,t9,t4,((C_word*)((C_word*)t0)[6])[1],t8);}}

/* k18376 in do2843 in k18360 in do2840 in k18025 in k18018 in k18000 in a29641 in k17994 in k17991 in k17468 in k17465 in k17462 in k17459 in k17456 in k17453 in k17450 in k17447 in k17444 in k17441 in k17438 in k17435 in k17432 in k17429 in k17426 in k17423 in k17420 in k17417 in k17414 in k17411 in k17408 in k17269 in k17266 in k17263 in k17260 in k17204 in k17201 in k17198 in k17195 in k17192 in k17189 in k17186 in k17183 in k15938 in k15869 in k15676 in k15673 in k15568 in k15517 in k7924 in k7921 in k5905 in k5612 in k5609 in k5605 in k5314 in k5311 in k5308 in k5305 */
static void C_ccall f_18378(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word ab[15],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_18378,2,t0,t1);}
t2=C_mutate(((C_word *)((C_word*)t0)[9])+1,t1);
t3=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_18381,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],a[7]=((C_word*)t0)[8],tmp=(C_word)a,a+=8,tmp);
if(C_truep((C_word)C_i_caddr(((C_word*)t0)[4]))){
t4=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_18431,a[2]=t3,a[3]=((C_word*)t0)[2],tmp=(C_word)a,a+=4,tmp);
t5=(C_word)C_i_caddr(((C_word*)t0)[4]);
t6=(C_word)C_a_i_list(&a,1,t5);
C_trace("ChickenBridge.scm: 369  append");
t7=*((C_word*)lf[18]+1);
((C_proc4)C_retrieve_proc(t7))(4,t7,t4,((C_word*)((C_word*)t0)[2])[1],t6);}
else{
t4=t3;
f_18381(t4,C_SCHEME_UNDEFINED);}}

/* k18429 in k18376 in do2843 in k18360 in do2840 in k18025 in k18018 in k18000 in a29641 in k17994 in k17991 in k17468 in k17465 in k17462 in k17459 in k17456 in k17453 in k17450 in k17447 in k17444 in k17441 in k17438 in k17435 in k17432 in k17429 in k17426 in k17423 in k17420 in k17417 in k17414 in k17411 in k17408 in k17269 in k17266 in k17263 in k17260 in k17204 in k17201 in k17198 in k17195 in k17192 in k17189 in k17186 in k17183 in k15938 in k15869 in k15676 in k15673 in k15568 in k15517 in k7924 in k7921 in k5905 in k5612 in k5609 in k5605 in k5314 in k5311 in k5308 in k5305 */
static void C_ccall f_18431(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[3])+1,t1);
t3=((C_word*)t0)[2];
f_18381(t3,t2);}

/* k18379 in k18376 in do2843 in k18360 in do2840 in k18025 in k18018 in k18000 in a29641 in k17994 in k17991 in k17468 in k17465 in k17462 in k17459 in k17456 in k17453 in k17450 in k17447 in k17444 in k17441 in k17438 in k17435 in k17432 in k17429 in k17426 in k17423 in k17420 in k17417 in k17414 in k17411 in k17408 in k17269 in k17266 in k17263 in k17260 in k17204 in k17201 in k17198 in k17195 in k17192 in k17189 in k17186 in k17183 in k15938 in k15869 in k15676 in k15673 in k15568 in k15517 in k7924 in k7921 in k5905 in k5612 in k5609 in k5605 in k5314 in k5311 in k5308 in k5305 */
static void C_fcall f_18381(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[14],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_18381,NULL,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_18384,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
if(C_truep((C_word)C_i_cadddr(((C_word*)t0)[3]))){
t3=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_18416,a[2]=t2,a[3]=((C_word*)t0)[2],tmp=(C_word)a,a+=4,tmp);
t4=(C_word)C_i_cadddr(((C_word*)t0)[3]);
t5=(C_word)C_a_i_list(&a,1,t4);
C_trace("ChickenBridge.scm: 369  append");
t6=*((C_word*)lf[18]+1);
((C_proc4)C_retrieve_proc(t6))(4,t6,t3,((C_word*)((C_word*)t0)[2])[1],t5);}
else{
t3=t2;
f_18384(t3,C_SCHEME_UNDEFINED);}}

/* k18414 in k18379 in k18376 in do2843 in k18360 in do2840 in k18025 in k18018 in k18000 in a29641 in k17994 in k17991 in k17468 in k17465 in k17462 in k17459 in k17456 in k17453 in k17450 in k17447 in k17444 in k17441 in k17438 in k17435 in k17432 in k17429 in k17426 in k17423 in k17420 in k17417 in k17414 in k17411 in k17408 in k17269 in k17266 in k17263 in k17260 in k17204 in k17201 in k17198 in k17195 in k17192 in k17189 in k17186 in k17183 in k15938 in k15869 in k15676 in k15673 in k15568 in k15517 in k7924 in k7921 in k5905 in k5612 in k5609 in k5605 in k5314 in k5311 in k5308 in k5305 */
static void C_ccall f_18416(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[3])+1,t1);
t3=((C_word*)t0)[2];
f_18384(t3,t2);}

/* k18382 in k18379 in k18376 in do2843 in k18360 in do2840 in k18025 in k18018 in k18000 in a29641 in k17994 in k17991 in k17468 in k17465 in k17462 in k17459 in k17456 in k17453 in k17450 in k17447 in k17444 in k17441 in k17438 in k17435 in k17432 in k17429 in k17426 in k17423 in k17420 in k17417 in k17414 in k17411 in k17408 in k17269 in k17266 in k17263 in k17260 in k17204 in k17201 in k17198 in k17195 in k17192 in k17189 in k17186 in k17183 in k15938 in k15869 in k15676 in k15673 in k15568 in k15517 in k7924 in k7921 in k5905 in k5612 in k5609 in k5605 in k5314 in k5311 in k5308 in k5305 */
static void C_fcall f_18384(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[10],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_18384,NULL,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_18387,a[2]=((C_word*)t0)[4],a[3]=((C_word*)t0)[5],a[4]=((C_word*)t0)[6],tmp=(C_word)a,a+=5,tmp);
t3=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_18397,a[2]=((C_word*)t0)[2],a[3]=t2,a[4]=((C_word*)t0)[3],tmp=(C_word)a,a+=5,tmp);
C_trace("ChickenBridge.scm: 369  fifth");
t4=C_retrieve(lf[47]);
((C_proc3)C_retrieve_proc(t4))(3,t4,t3,((C_word*)t0)[2]);}

/* k18395 in k18382 in k18379 in k18376 in do2843 in k18360 in do2840 in k18025 in k18018 in k18000 in a29641 in k17994 in k17991 in k17468 in k17465 in k17462 in k17459 in k17456 in k17453 in k17450 in k17447 in k17444 in k17441 in k17438 in k17435 in k17432 in k17429 in k17426 in k17423 in k17420 in k17417 in k17414 in k17411 in k17408 in k17269 in k17266 in k17263 in k17260 in k17204 in k17201 in k17198 in k17195 in k17192 in k17189 in k17186 in k17183 in k15938 in k15869 in k15676 in k15673 in k15568 in k15517 in k7924 in k7921 in k5905 in k5612 in k5609 in k5605 in k5314 in k5311 in k5308 in k5305 */
static void C_ccall f_18397(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[8],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_18397,2,t0,t1);}
if(C_truep(t1)){
t2=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_18401,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],tmp=(C_word)a,a+=4,tmp);
t3=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_18409,a[2]=((C_word*)t0)[4],a[3]=t2,tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 369  fifth");
t4=C_retrieve(lf[47]);
((C_proc3)C_retrieve_proc(t4))(3,t4,t3,((C_word*)t0)[2]);}
else{
t2=((C_word*)t0)[3];
f_18387(t2,C_SCHEME_UNDEFINED);}}

/* k18407 in k18395 in k18382 in k18379 in k18376 in do2843 in k18360 in do2840 in k18025 in k18018 in k18000 in a29641 in k17994 in k17991 in k17468 in k17465 in k17462 in k17459 in k17456 in k17453 in k17450 in k17447 in k17444 in k17441 in k17438 in k17435 in k17432 in k17429 in k17426 in k17423 in k17420 in k17417 in k17414 in k17411 in k17408 in k17269 in k17266 in k17263 in k17260 in k17204 in k17201 in k17198 in k17195 in k17192 in k17189 in k17186 in k17183 in k15938 in k15869 in k15676 in k15673 in k15568 in k15517 in k7924 in k7921 in k5905 in k5612 in k5609 in k5605 in k5314 in k5311 in k5308 in k5305 */
static void C_ccall f_18409(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[3],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_18409,2,t0,t1);}
t2=(C_word)C_a_i_list(&a,1,t1);
C_trace("ChickenBridge.scm: 369  append");
t3=*((C_word*)lf[18]+1);
((C_proc4)C_retrieve_proc(t3))(4,t3,((C_word*)t0)[3],((C_word*)((C_word*)t0)[2])[1],t2);}

/* k18399 in k18395 in k18382 in k18379 in k18376 in do2843 in k18360 in do2840 in k18025 in k18018 in k18000 in a29641 in k17994 in k17991 in k17468 in k17465 in k17462 in k17459 in k17456 in k17453 in k17450 in k17447 in k17444 in k17441 in k17438 in k17435 in k17432 in k17429 in k17426 in k17423 in k17420 in k17417 in k17414 in k17411 in k17408 in k17269 in k17266 in k17263 in k17260 in k17204 in k17201 in k17198 in k17195 in k17192 in k17189 in k17186 in k17183 in k15938 in k15869 in k15676 in k15673 in k15568 in k15517 in k7924 in k7921 in k5905 in k5612 in k5609 in k5605 in k5314 in k5311 in k5308 in k5305 */
static void C_ccall f_18401(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[3])+1,t1);
t3=((C_word*)t0)[2];
f_18387(t3,t2);}

/* k18385 in k18382 in k18379 in k18376 in do2843 in k18360 in do2840 in k18025 in k18018 in k18000 in a29641 in k17994 in k17991 in k17468 in k17465 in k17462 in k17459 in k17456 in k17453 in k17450 in k17447 in k17444 in k17441 in k17438 in k17435 in k17432 in k17429 in k17426 in k17423 in k17420 in k17417 in k17414 in k17411 in k17408 in k17269 in k17266 in k17263 in k17260 in k17204 in k17201 in k17198 in k17195 in k17192 in k17189 in k17186 in k17183 in k15938 in k15869 in k15676 in k15673 in k15568 in k15517 in k7924 in k7921 in k5905 in k5612 in k5609 in k5605 in k5314 in k5311 in k5308 in k5305 */
static void C_fcall f_18387(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word *a;
t2=(C_word)C_i_cdr(((C_word*)t0)[4]);
t3=((C_word*)((C_word*)t0)[3])[1];
f_18364(t3,((C_word*)t0)[2],t2);}

/* k18349 in do2840 in k18025 in k18018 in k18000 in a29641 in k17994 in k17991 in k17468 in k17465 in k17462 in k17459 in k17456 in k17453 in k17450 in k17447 in k17444 in k17441 in k17438 in k17435 in k17432 in k17429 in k17426 in k17423 in k17420 in k17417 in k17414 in k17411 in k17408 in k17269 in k17266 in k17263 in k17260 in k17204 in k17201 in k17198 in k17195 in k17192 in k17189 in k17186 in k17183 in k15938 in k15869 in k15676 in k15673 in k15568 in k15517 in k7924 in k7921 in k5905 in k5612 in k5609 in k5605 in k5314 in k5311 in k5308 in k5305 */
static void C_ccall f_18351(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word *a;
t2=(C_word)C_i_cdr(((C_word*)t0)[4]);
t3=((C_word*)((C_word*)t0)[3])[1];
f_18341(t3,((C_word*)t0)[2],t2);}

/* k18028 in k18025 in k18018 in k18000 in a29641 in k17994 in k17991 in k17468 in k17465 in k17462 in k17459 in k17456 in k17453 in k17450 in k17447 in k17444 in k17441 in k17438 in k17435 in k17432 in k17429 in k17426 in k17423 in k17420 in k17417 in k17414 in k17411 in k17408 in k17269 in k17266 in k17263 in k17260 in k17204 in k17201 in k17198 in k17195 in k17192 in k17189 in k17186 in k17183 in k15938 in k15869 in k15676 in k15673 in k15568 in k15517 in k7924 in k7921 in k5905 in k5612 in k5609 in k5605 in k5314 in k5311 in k5308 in k5305 */
static void C_ccall f_18030(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word ab[21],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_18030,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|11,a[1]=(C_word)f_18033,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],a[7]=((C_word*)t0)[7],a[8]=((C_word*)t0)[8],a[9]=((C_word*)t0)[9],a[10]=((C_word*)t0)[10],a[11]=((C_word*)t0)[11],tmp=(C_word)a,a+=12,tmp);
t3=(C_word)C_i_cadddr(((C_word*)((C_word*)t0)[3])[1]);
t4=C_SCHEME_UNDEFINED;
t5=(*a=C_VECTOR_TYPE|1,a[1]=t4,tmp=(C_word)a,a+=2,tmp);
t6=C_set_block_item(t5,0,(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_18305,a[2]=((C_word*)t0)[4],a[3]=((C_word*)t0)[5],a[4]=t5,a[5]=((C_word*)t0)[11],a[6]=((C_word)li478),tmp=(C_word)a,a+=7,tmp));
t7=((C_word*)t5)[1];
f_18305(t7,t2,t3);}

/* do2854 in k18028 in k18025 in k18018 in k18000 in a29641 in k17994 in k17991 in k17468 in k17465 in k17462 in k17459 in k17456 in k17453 in k17450 in k17447 in k17444 in k17441 in k17438 in k17435 in k17432 in k17429 in k17426 in k17423 in k17420 in k17417 in k17414 in k17411 in k17408 in k17269 in k17266 in k17263 in k17260 in k17204 in k17201 in k17198 in k17195 in k17192 in k17189 in k17186 in k17183 in k15938 in k15869 in k15676 in k15673 in k15568 in k15517 in k7924 in k7921 in k5905 in k5612 in k5609 in k5605 in k5314 in k5311 in k5308 in k5305 */
static void C_fcall f_18305(C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[10],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_18305,NULL,3,t0,t1,t2);}
if(C_truep((C_word)C_i_nullp(t2))){
t3=t1;
((C_proc2)(void*)(*((C_word*)t3+1)))(2,t3,C_SCHEME_FALSE);}
else{
t3=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_18316,a[2]=t1,a[3]=((C_word*)t0)[4],a[4]=t2,a[5]=((C_word*)t0)[5],tmp=(C_word)a,a+=6,tmp);
t4=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_18331,a[2]=((C_word*)t0)[5],a[3]=t3,tmp=(C_word)a,a+=4,tmp);
t5=(C_word)C_i_car(t2);
C_trace("ChickenBridge.scm: 369  emit");
f_16030(t4,t5,((C_word*)((C_word*)t0)[3])[1],((C_word*)t0)[2]);}}

/* k18329 in do2854 in k18028 in k18025 in k18018 in k18000 in a29641 in k17994 in k17991 in k17468 in k17465 in k17462 in k17459 in k17456 in k17453 in k17450 in k17447 in k17444 in k17441 in k17438 in k17435 in k17432 in k17429 in k17426 in k17423 in k17420 in k17417 in k17414 in k17411 in k17408 in k17269 in k17266 in k17263 in k17260 in k17204 in k17201 in k17198 in k17195 in k17192 in k17189 in k17186 in k17183 in k15938 in k15869 in k15676 in k15673 in k15568 in k15517 in k7924 in k7921 in k5905 in k5612 in k5609 in k5605 in k5314 in k5311 in k5308 in k5305 */
static void C_ccall f_18331(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[3],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_18331,2,t0,t1);}
t2=(C_word)C_a_i_list(&a,1,t1);
C_trace("ChickenBridge.scm: 369  append");
t3=*((C_word*)lf[18]+1);
((C_proc4)C_retrieve_proc(t3))(4,t3,((C_word*)t0)[3],((C_word*)((C_word*)t0)[2])[1],t2);}

/* k18314 in do2854 in k18028 in k18025 in k18018 in k18000 in a29641 in k17994 in k17991 in k17468 in k17465 in k17462 in k17459 in k17456 in k17453 in k17450 in k17447 in k17444 in k17441 in k17438 in k17435 in k17432 in k17429 in k17426 in k17423 in k17420 in k17417 in k17414 in k17411 in k17408 in k17269 in k17266 in k17263 in k17260 in k17204 in k17201 in k17198 in k17195 in k17192 in k17189 in k17186 in k17183 in k15938 in k15869 in k15676 in k15673 in k15568 in k15517 in k7924 in k7921 in k5905 in k5612 in k5609 in k5605 in k5314 in k5311 in k5308 in k5305 */
static void C_ccall f_18316(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[5])+1,t1);
t3=(C_word)C_i_cdr(((C_word*)t0)[4]);
t4=((C_word*)((C_word*)t0)[3])[1];
f_18305(t4,((C_word*)t0)[2],t3);}

/* k18031 in k18028 in k18025 in k18018 in k18000 in a29641 in k17994 in k17991 in k17468 in k17465 in k17462 in k17459 in k17456 in k17453 in k17450 in k17447 in k17444 in k17441 in k17438 in k17435 in k17432 in k17429 in k17426 in k17423 in k17420 in k17417 in k17414 in k17411 in k17408 in k17269 in k17266 in k17263 in k17260 in k17204 in k17201 in k17198 in k17195 in k17192 in k17189 in k17186 in k17183 in k15938 in k15869 in k15676 in k15673 in k15568 in k15517 in k7924 in k7921 in k5905 in k5612 in k5609 in k5605 in k5314 in k5311 in k5308 in k5305 */
static void C_ccall f_18033(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[11],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_18033,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|10,a[1]=(C_word)f_18037,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],a[7]=((C_word*)t0)[8],a[8]=((C_word*)t0)[9],a[9]=((C_word*)t0)[10],a[10]=((C_word*)t0)[11],tmp=(C_word)a,a+=11,tmp);
C_trace("ChickenBridge.scm: 369  append");
t3=*((C_word*)lf[18]+1);
((C_proc4)C_retrieve_proc(t3))(4,t3,t2,((C_word*)((C_word*)t0)[11])[1],((C_word*)((C_word*)t0)[2])[1]);}

/* k18035 in k18031 in k18028 in k18025 in k18018 in k18000 in a29641 in k17994 in k17991 in k17468 in k17465 in k17462 in k17459 in k17456 in k17453 in k17450 in k17447 in k17444 in k17441 in k17438 in k17435 in k17432 in k17429 in k17426 in k17423 in k17420 in k17417 in k17414 in k17411 in k17408 in k17269 in k17266 in k17263 in k17260 in k17204 in k17201 in k17198 in k17195 in k17192 in k17189 in k17186 in k17183 in k15938 in k15869 in k15676 in k15673 in k15568 in k15517 in k7924 in k7921 in k5905 in k5612 in k5609 in k5605 in k5314 in k5311 in k5308 in k5305 */
static void C_ccall f_18037(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word ab[20],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_18037,2,t0,t1);}
t2=C_mutate(((C_word *)((C_word*)t0)[10])+1,t1);
t3=(*a=C_CLOSURE_TYPE|10,a[1]=(C_word)f_18040,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[10],a[6]=((C_word*)t0)[5],a[7]=((C_word*)t0)[6],a[8]=((C_word*)t0)[7],a[9]=((C_word*)t0)[8],a[10]=((C_word*)t0)[9],tmp=(C_word)a,a+=11,tmp);
t4=(C_word)C_i_caddr(((C_word*)((C_word*)t0)[2])[1]);
t5=C_SCHEME_UNDEFINED;
t6=(*a=C_VECTOR_TYPE|1,a[1]=t5,tmp=(C_word)a,a+=2,tmp);
t7=C_set_block_item(t6,0,(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_18249,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=t6,a[5]=((C_word*)t0)[8],a[6]=((C_word)li477),tmp=(C_word)a,a+=7,tmp));
t8=((C_word*)t6)[1];
f_18249(t8,t3,t4);}

/* do2859 in k18035 in k18031 in k18028 in k18025 in k18018 in k18000 in a29641 in k17994 in k17991 in k17468 in k17465 in k17462 in k17459 in k17456 in k17453 in k17450 in k17447 in k17444 in k17441 in k17438 in k17435 in k17432 in k17429 in k17426 in k17423 in k17420 in k17417 in k17414 in k17411 in k17408 in k17269 in k17266 in k17263 in k17260 in k17204 in k17201 in k17198 in k17195 in k17192 in k17189 in k17186 in k17183 in k15938 in k15869 in k15676 in k15673 in k15568 in k15517 in k7924 in k7921 in k5905 in k5612 in k5609 in k5605 in k5314 in k5311 in k5308 in k5305 */
static void C_fcall f_18249(C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word t5;
C_word ab[8],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_18249,NULL,3,t0,t1,t2);}
if(C_truep((C_word)C_i_nullp(t2))){
t3=t1;
((C_proc2)(void*)(*((C_word*)t3+1)))(2,t3,C_SCHEME_FALSE);}
else{
t3=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_18259,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=t1,a[5]=((C_word*)t0)[4],a[6]=t2,a[7]=((C_word*)t0)[5],tmp=(C_word)a,a+=8,tmp);
t4=(C_word)C_i_car(t2);
C_trace("ChickenBridge.scm: 369  parse-unit-parsed");
f_15912(t3,t4);}}

/* k18257 in do2859 in k18035 in k18031 in k18028 in k18025 in k18018 in k18000 in a29641 in k17994 in k17991 in k17468 in k17465 in k17462 in k17459 in k17456 in k17453 in k17450 in k17447 in k17444 in k17441 in k17438 in k17435 in k17432 in k17429 in k17426 in k17423 in k17420 in k17417 in k17414 in k17411 in k17408 in k17269 in k17266 in k17263 in k17260 in k17204 in k17201 in k17198 in k17195 in k17192 in k17189 in k17186 in k17183 in k15938 in k15869 in k15676 in k15673 in k15568 in k15517 in k7924 in k7921 in k5905 in k5612 in k5609 in k5605 in k5314 in k5311 in k5308 in k5305 */
static void C_ccall f_18259(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_18259,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_18262,a[2]=t1,a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cadr(t1);
C_trace("ChickenBridge.scm: 369  emit");
f_16030(t2,t3,((C_word*)((C_word*)t0)[3])[1],((C_word*)t0)[2]);}

/* k18260 in k18257 in do2859 in k18035 in k18031 in k18028 in k18025 in k18018 in k18000 in a29641 in k17994 in k17991 in k17468 in k17465 in k17462 in k17459 in k17456 in k17453 in k17450 in k17447 in k17444 in k17441 in k17438 in k17435 in k17432 in k17429 in k17426 in k17423 in k17420 in k17417 in k17414 in k17411 in k17408 in k17269 in k17266 in k17263 in k17260 in k17204 in k17201 in k17198 in k17195 in k17192 in k17189 in k17186 in k17183 in k15938 in k15869 in k15676 in k15673 in k15568 in k15517 in k7924 in k7921 in k5905 in k5612 in k5609 in k5605 in k5314 in k5311 in k5308 in k5305 */
static void C_ccall f_18262(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word ab[13],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_18262,2,t0,t1);}
t2=t1;
t3=(*a=C_VECTOR_TYPE|1,a[1]=t2,tmp=(C_word)a,a+=2,tmp);
t4=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_18265,a[2]=t3,a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],tmp=(C_word)a,a+=7,tmp);
t5=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_18283,a[2]=t4,a[3]=t3,tmp=(C_word)a,a+=4,tmp);
t6=(C_word)C_i_car(((C_word*)t0)[2]);
C_trace("ChickenBridge.scm: 369  token-unit-type=?");
f_15958(t5,t6,C_fix(20224));}

/* k18281 in k18260 in k18257 in do2859 in k18035 in k18031 in k18028 in k18025 in k18018 in k18000 in a29641 in k17994 in k17991 in k17468 in k17465 in k17462 in k17459 in k17456 in k17453 in k17450 in k17447 in k17444 in k17441 in k17438 in k17435 in k17432 in k17429 in k17426 in k17423 in k17420 in k17417 in k17414 in k17411 in k17408 in k17269 in k17266 in k17263 in k17260 in k17204 in k17201 in k17198 in k17195 in k17192 in k17189 in k17186 in k17183 in k15938 in k15869 in k15676 in k15673 in k15568 in k15517 in k7924 in k7921 in k5905 in k5612 in k5609 in k5605 in k5314 in k5311 in k5308 in k5305 */
static void C_ccall f_18283(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[6],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_18283,2,t0,t1);}
if(C_truep(t1)){
t2=(C_word)C_a_i_list(&a,2,lf[312],((C_word*)((C_word*)t0)[3])[1]);
t3=C_mutate(((C_word *)((C_word*)t0)[3])+1,t2);
t4=((C_word*)t0)[2];
f_18265(t4,t3);}
else{
t2=((C_word*)t0)[2];
f_18265(t2,C_SCHEME_UNDEFINED);}}

/* k18263 in k18260 in k18257 in do2859 in k18035 in k18031 in k18028 in k18025 in k18018 in k18000 in a29641 in k17994 in k17991 in k17468 in k17465 in k17462 in k17459 in k17456 in k17453 in k17450 in k17447 in k17444 in k17441 in k17438 in k17435 in k17432 in k17429 in k17426 in k17423 in k17420 in k17417 in k17414 in k17411 in k17408 in k17269 in k17266 in k17263 in k17260 in k17204 in k17201 in k17198 in k17195 in k17192 in k17189 in k17186 in k17183 in k15938 in k15869 in k15676 in k15673 in k15568 in k15517 in k7924 in k7921 in k5905 in k5612 in k5609 in k5605 in k5314 in k5311 in k5308 in k5305 */
static void C_fcall f_18265(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_18265,NULL,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_18269,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],tmp=(C_word)a,a+=6,tmp);
t3=(C_word)C_a_i_list(&a,1,((C_word*)((C_word*)t0)[2])[1]);
C_trace("ChickenBridge.scm: 369  append");
t4=*((C_word*)lf[18]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,((C_word*)((C_word*)t0)[6])[1],t3);}

/* k18267 in k18263 in k18260 in k18257 in do2859 in k18035 in k18031 in k18028 in k18025 in k18018 in k18000 in a29641 in k17994 in k17991 in k17468 in k17465 in k17462 in k17459 in k17456 in k17453 in k17450 in k17447 in k17444 in k17441 in k17438 in k17435 in k17432 in k17429 in k17426 in k17423 in k17420 in k17417 in k17414 in k17411 in k17408 in k17269 in k17266 in k17263 in k17260 in k17204 in k17201 in k17198 in k17195 in k17192 in k17189 in k17186 in k17183 in k15938 in k15869 in k15676 in k15673 in k15568 in k15517 in k7924 in k7921 in k5905 in k5612 in k5609 in k5605 in k5314 in k5311 in k5308 in k5305 */
static void C_ccall f_18269(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[5])+1,t1);
t3=(C_word)C_i_cdr(((C_word*)t0)[4]);
t4=((C_word*)((C_word*)t0)[3])[1];
f_18249(t4,((C_word*)t0)[2],t3);}

/* k18038 in k18035 in k18031 in k18028 in k18025 in k18018 in k18000 in a29641 in k17994 in k17991 in k17468 in k17465 in k17462 in k17459 in k17456 in k17453 in k17450 in k17447 in k17444 in k17441 in k17438 in k17435 in k17432 in k17429 in k17426 in k17423 in k17420 in k17417 in k17414 in k17411 in k17408 in k17269 in k17266 in k17263 in k17260 in k17204 in k17201 in k17198 in k17195 in k17192 in k17189 in k17186 in k17183 in k15938 in k15869 in k15676 in k15673 in k15568 in k15517 in k7924 in k7921 in k5905 in k5612 in k5609 in k5605 in k5314 in k5311 in k5308 in k5305 */
static void C_ccall f_18040(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word ab[14],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_18040,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|10,a[1]=(C_word)f_18043,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],a[7]=((C_word*)t0)[7],a[8]=((C_word*)t0)[8],a[9]=((C_word*)t0)[9],a[10]=((C_word*)t0)[10],tmp=(C_word)a,a+=11,tmp);
if(C_truep((C_word)C_i_pairp(((C_word*)((C_word*)t0)[9])[1]))){
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[9])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
t4=(C_word)C_i_car(((C_word*)((C_word*)t0)[9])[1]);
t5=C_mutate(((C_word *)((C_word*)t0)[9])+1,t4);
t6=t2;
f_18043(t6,t5);}
else{
t4=(C_word)C_a_i_cons(&a,2,lf[311],((C_word*)((C_word*)t0)[9])[1]);
t5=C_mutate(((C_word *)((C_word*)t0)[9])+1,t4);
t6=t2;
f_18043(t6,t5);}}
else{
t3=C_set_block_item(((C_word*)t0)[9],0,C_SCHEME_FALSE);
t4=t2;
f_18043(t4,t3);}}

/* k18041 in k18038 in k18035 in k18031 in k18028 in k18025 in k18018 in k18000 in a29641 in k17994 in k17991 in k17468 in k17465 in k17462 in k17459 in k17456 in k17453 in k17450 in k17447 in k17444 in k17441 in k17438 in k17435 in k17432 in k17429 in k17426 in k17423 in k17420 in k17417 in k17414 in k17411 in k17408 in k17269 in k17266 in k17263 in k17260 in k17204 in k17201 in k17198 in k17195 in k17192 in k17189 in k17186 in k17183 in k15938 in k15869 in k15676 in k15673 in k15568 in k15517 in k7924 in k7921 in k5905 in k5612 in k5609 in k5605 in k5314 in k5311 in k5308 in k5305 */
static void C_fcall f_18043(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[15],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_18043,NULL,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_18046,a[2]=((C_word*)t0)[5],a[3]=((C_word*)t0)[6],a[4]=((C_word*)t0)[7],a[5]=((C_word*)t0)[8],a[6]=((C_word*)t0)[9],a[7]=((C_word*)t0)[10],tmp=(C_word)a,a+=8,tmp);
t3=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_18212,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=t2,a[6]=((C_word*)t0)[8],tmp=(C_word)a,a+=7,tmp);
C_trace("ChickenBridge.scm: 369  fifth");
t4=C_retrieve(lf[47]);
((C_proc3)C_retrieve_proc(t4))(3,t4,t3,((C_word*)((C_word*)t0)[2])[1]);}

/* k18210 in k18041 in k18038 in k18035 in k18031 in k18028 in k18025 in k18018 in k18000 in a29641 in k17994 in k17991 in k17468 in k17465 in k17462 in k17459 in k17456 in k17453 in k17450 in k17447 in k17444 in k17441 in k17438 in k17435 in k17432 in k17429 in k17426 in k17423 in k17420 in k17417 in k17414 in k17411 in k17408 in k17269 in k17266 in k17263 in k17260 in k17204 in k17201 in k17198 in k17195 in k17192 in k17189 in k17186 in k17183 in k15938 in k15869 in k15676 in k15673 in k15568 in k15517 in k7924 in k7921 in k5905 in k5612 in k5609 in k5605 in k5314 in k5311 in k5308 in k5305 */
static void C_ccall f_18212(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_18212,2,t0,t1);}
if(C_truep(t1)){
t2=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_18216,a[2]=((C_word*)t0)[5],a[3]=((C_word*)t0)[6],tmp=(C_word)a,a+=4,tmp);
t3=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_18220,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=t2,tmp=(C_word)a,a+=5,tmp);
C_trace("ChickenBridge.scm: 369  fifth");
t4=C_retrieve(lf[47]);
((C_proc3)C_retrieve_proc(t4))(3,t4,t3,((C_word*)((C_word*)t0)[2])[1]);}
else{
t2=C_set_block_item(((C_word*)t0)[6],0,C_SCHEME_FALSE);
t3=((C_word*)t0)[5];
f_18046(t3,t2);}}

/* k18218 in k18210 in k18041 in k18038 in k18035 in k18031 in k18028 in k18025 in k18018 in k18000 in a29641 in k17994 in k17991 in k17468 in k17465 in k17462 in k17459 in k17456 in k17453 in k17450 in k17447 in k17444 in k17441 in k17438 in k17435 in k17432 in k17429 in k17426 in k17423 in k17420 in k17417 in k17414 in k17411 in k17408 in k17269 in k17266 in k17263 in k17260 in k17204 in k17201 in k17198 in k17195 in k17192 in k17189 in k17186 in k17183 in k15938 in k15869 in k15676 in k15673 in k15568 in k15517 in k7924 in k7921 in k5905 in k5612 in k5609 in k5605 in k5314 in k5311 in k5308 in k5305 */
static void C_ccall f_18220(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 369  emit");
f_16030(((C_word*)t0)[4],t1,((C_word*)((C_word*)t0)[3])[1],((C_word*)t0)[2]);}

/* k18214 in k18210 in k18041 in k18038 in k18035 in k18031 in k18028 in k18025 in k18018 in k18000 in a29641 in k17994 in k17991 in k17468 in k17465 in k17462 in k17459 in k17456 in k17453 in k17450 in k17447 in k17444 in k17441 in k17438 in k17435 in k17432 in k17429 in k17426 in k17423 in k17420 in k17417 in k17414 in k17411 in k17408 in k17269 in k17266 in k17263 in k17260 in k17204 in k17201 in k17198 in k17195 in k17192 in k17189 in k17186 in k17183 in k15938 in k15869 in k15676 in k15673 in k15568 in k15517 in k7924 in k7921 in k5905 in k5612 in k5609 in k5605 in k5314 in k5311 in k5308 in k5305 */
static void C_ccall f_18216(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[3])+1,t1);
t3=((C_word*)t0)[2];
f_18046(t3,t2);}

/* k18044 in k18041 in k18038 in k18035 in k18031 in k18028 in k18025 in k18018 in k18000 in a29641 in k17994 in k17991 in k17468 in k17465 in k17462 in k17459 in k17456 in k17453 in k17450 in k17447 in k17444 in k17441 in k17438 in k17435 in k17432 in k17429 in k17426 in k17423 in k17420 in k17417 in k17414 in k17411 in k17408 in k17269 in k17266 in k17263 in k17260 in k17204 in k17201 in k17198 in k17195 in k17192 in k17189 in k17186 in k17183 in k15938 in k15869 in k15676 in k15673 in k15568 in k15517 in k7924 in k7921 in k5905 in k5612 in k5609 in k5605 in k5314 in k5311 in k5308 in k5305 */
static void C_fcall f_18046(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word ab[31],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_18046,NULL,2,t0,t1);}
t2=((C_word*)((C_word*)t0)[7])[1];
if(C_truep(t2)){
t3=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_18074,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],tmp=(C_word)a,a+=7,tmp);
C_trace("ChickenBridge.scm: 369  gensym");
t4=C_retrieve(lf[26]);
((C_proc3)C_retrieve_proc(t4))(3,t4,t3,lf[743]);}
else{
t3=(C_word)C_a_i_list(&a,2,((C_word*)((C_word*)t0)[6])[1],((C_word*)((C_word*)t0)[5])[1]);
t4=(C_word)C_a_i_cons(&a,2,t3,((C_word*)((C_word*)t0)[2])[1]);
t5=(C_word)C_a_i_cons(&a,2,C_SCHEME_END_OF_LIST,t4);
t6=(C_word)C_a_i_cons(&a,2,lf[566],t5);
t7=((C_word*)t0)[4];
((C_proc2)(void*)(*((C_word*)t7+1)))(2,t7,(C_word)C_a_i_list(&a,3,lf[2],((C_word*)((C_word*)t0)[3])[1],t6));}}

/* k18072 in k18044 in k18041 in k18038 in k18035 in k18031 in k18028 in k18025 in k18018 in k18000 in a29641 in k17994 in k17991 in k17468 in k17465 in k17462 in k17459 in k17456 in k17453 in k17450 in k17447 in k17444 in k17441 in k17438 in k17435 in k17432 in k17429 in k17426 in k17423 in k17420 in k17417 in k17414 in k17411 in k17408 in k17269 in k17266 in k17263 in k17260 in k17204 in k17201 in k17198 in k17195 in k17192 in k17189 in k17186 in k17183 in k15938 in k15869 in k15676 in k15673 in k15568 in k15517 in k7924 in k7921 in k5905 in k5612 in k5609 in k5605 in k5314 in k5311 in k5308 in k5305 */
static void C_ccall f_18074(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[8],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_18074,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_18077,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],a[7]=t1,tmp=(C_word)a,a+=8,tmp);
C_trace("ChickenBridge.scm: 369  gensym");
t3=C_retrieve(lf[26]);
((C_proc3)C_retrieve_proc(t3))(3,t3,t2,lf[742]);}

/* k18075 in k18072 in k18044 in k18041 in k18038 in k18035 in k18031 in k18028 in k18025 in k18018 in k18000 in a29641 in k17994 in k17991 in k17468 in k17465 in k17462 in k17459 in k17456 in k17453 in k17450 in k17447 in k17444 in k17441 in k17438 in k17435 in k17432 in k17429 in k17426 in k17423 in k17420 in k17417 in k17414 in k17411 in k17408 in k17269 in k17266 in k17263 in k17260 in k17204 in k17201 in k17198 in k17195 in k17192 in k17189 in k17186 in k17183 in k15938 in k15869 in k15676 in k15673 in k15568 in k15517 in k7924 in k7921 in k5905 in k5612 in k5609 in k5605 in k5314 in k5311 in k5308 in k5305 */
static void C_ccall f_18077(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_18077,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|8,a[1]=(C_word)f_18080,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],a[7]=t1,a[8]=((C_word*)t0)[7],tmp=(C_word)a,a+=9,tmp);
C_trace("ChickenBridge.scm: 369  gensym");
t3=C_retrieve(lf[26]);
((C_proc3)C_retrieve_proc(t3))(3,t3,t2,lf[741]);}

/* k18078 in k18075 in k18072 in k18044 in k18041 in k18038 in k18035 in k18031 in k18028 in k18025 in k18018 in k18000 in a29641 in k17994 in k17991 in k17468 in k17465 in k17462 in k17459 in k17456 in k17453 in k17450 in k17447 in k17444 in k17441 in k17438 in k17435 in k17432 in k17429 in k17426 in k17423 in k17420 in k17417 in k17414 in k17411 in k17408 in k17269 in k17266 in k17263 in k17260 in k17204 in k17201 in k17198 in k17195 in k17192 in k17189 in k17186 in k17183 in k15938 in k15869 in k15676 in k15673 in k15568 in k15517 in k7924 in k7921 in k5905 in k5612 in k5609 in k5605 in k5314 in k5311 in k5308 in k5305 */
static void C_ccall f_18080(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[10],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_18080,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|9,a[1]=(C_word)f_18083,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],a[7]=t1,a[8]=((C_word*)t0)[7],a[9]=((C_word*)t0)[8],tmp=(C_word)a,a+=10,tmp);
C_trace("ChickenBridge.scm: 369  gensym");
t3=C_retrieve(lf[26]);
((C_proc3)C_retrieve_proc(t3))(3,t3,t2,lf[740]);}

/* k18081 in k18078 in k18075 in k18072 in k18044 in k18041 in k18038 in k18035 in k18031 in k18028 in k18025 in k18018 in k18000 in a29641 in k17994 in k17991 in k17468 in k17465 in k17462 in k17459 in k17456 in k17453 in k17450 in k17447 in k17444 in k17441 in k17438 in k17435 in k17432 in k17429 in k17426 in k17423 in k17420 in k17417 in k17414 in k17411 in k17408 in k17269 in k17266 in k17263 in k17260 in k17204 in k17201 in k17198 in k17195 in k17192 in k17189 in k17186 in k17183 in k15938 in k15869 in k15676 in k15673 in k15568 in k15517 in k7924 in k7921 in k5905 in k5612 in k5609 in k5605 in k5314 in k5311 in k5308 in k5305 */
static void C_ccall f_18083(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[11],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_18083,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|10,a[1]=(C_word)f_18086,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],a[7]=t1,a[8]=((C_word*)t0)[7],a[9]=((C_word*)t0)[8],a[10]=((C_word*)t0)[9],tmp=(C_word)a,a+=11,tmp);
C_trace("ChickenBridge.scm: 369  gensym");
t3=C_retrieve(lf[26]);
((C_proc3)C_retrieve_proc(t3))(3,t3,t2,lf[739]);}

/* k18084 in k18081 in k18078 in k18075 in k18072 in k18044 in k18041 in k18038 in k18035 in k18031 in k18028 in k18025 in k18018 in k18000 in a29641 in k17994 in k17991 in k17468 in k17465 in k17462 in k17459 in k17456 in k17453 in k17450 in k17447 in k17444 in k17441 in k17438 in k17435 in k17432 in k17429 in k17426 in k17423 in k17420 in k17417 in k17414 in k17411 in k17408 in k17269 in k17266 in k17263 in k17260 in k17204 in k17201 in k17198 in k17195 in k17192 in k17189 in k17186 in k17183 in k15938 in k15869 in k15676 in k15673 in k15568 in k15517 in k7924 in k7921 in k5905 in k5612 in k5609 in k5605 in k5314 in k5311 in k5308 in k5305 */
static void C_ccall f_18086(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word t14;
C_word t15;
C_word t16;
C_word t17;
C_word t18;
C_word t19;
C_word t20;
C_word t21;
C_word t22;
C_word t23;
C_word t24;
C_word ab[150],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_18086,2,t0,t1);}
t2=(C_word)C_a_i_list(&a,1,((C_word*)t0)[10]);
t3=(C_word)C_a_i_list(&a,2,((C_word*)t0)[9],C_fix(0));
t4=(C_word)C_a_i_list(&a,3,lf[663],C_SCHEME_END_OF_LIST,((C_word*)t0)[10]);
t5=(C_word)C_a_i_list(&a,2,lf[664],t4);
t6=(C_word)C_a_i_list(&a,1,((C_word*)t0)[8]);
t7=(C_word)C_a_i_list(&a,3,lf[12],((C_word*)t0)[9],((C_word*)t0)[8]);
t8=(C_word)C_a_i_list(&a,3,lf[663],t6,t7);
t9=(C_word)C_a_i_list(&a,2,lf[666],t8);
t10=(C_word)C_a_i_list(&a,3,t3,t5,t9);
t11=(C_word)C_a_i_list(&a,1,t1);
t12=(C_word)C_a_i_list(&a,1,((C_word*)t0)[7]);
t13=(C_word)C_a_i_list(&a,2,lf[465],lf[624]);
t14=(C_word)C_a_i_list(&a,2,lf[465],lf[625]);
t15=(C_word)C_a_i_list(&a,3,lf[623],t13,t14);
t16=(C_word)C_a_i_list(&a,2,t15,((C_word*)t0)[7]);
t17=(C_word)C_a_i_list(&a,4,lf[31],lf[738],t16,((C_word*)t0)[10]);
t18=(C_word)C_a_i_list(&a,2,lf[349],t17);
t19=(C_word)C_a_i_list(&a,2,t1,C_fix(-2));
t20=(C_word)C_a_i_list(&a,4,lf[663],t12,t18,t19);
t21=(C_word)C_a_i_list(&a,3,((C_word*)((C_word*)t0)[6])[1],((C_word*)((C_word*)t0)[5])[1],C_fix(-1));
t22=(*a=C_CLOSURE_TYPE|8,a[1]=(C_word)f_18145,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=t2,a[5]=t10,a[6]=t11,a[7]=t20,a[8]=t21,tmp=(C_word)a,a+=9,tmp);
t23=(C_word)C_a_i_list(&a,1,((C_word*)t0)[9]);
C_trace("##sys#append");
t24=*((C_word*)lf[7]+1);
((C_proc4)(void*)(*((C_word*)t24+1)))(4,t24,t22,((C_word*)((C_word*)t0)[2])[1],t23);}

/* k18143 in k18084 in k18081 in k18078 in k18075 in k18072 in k18044 in k18041 in k18038 in k18035 in k18031 in k18028 in k18025 in k18018 in k18000 in a29641 in k17994 in k17991 in k17468 in k17465 in k17462 in k17459 in k17456 in k17453 in k17450 in k17447 in k17444 in k17441 in k17438 in k17435 in k17432 in k17429 in k17426 in k17423 in k17420 in k17417 in k17414 in k17411 in k17408 in k17269 in k17266 in k17263 in k17260 in k17204 in k17201 in k17198 in k17195 in k17192 in k17189 in k17186 in k17183 in k15938 in k15869 in k15676 in k15673 in k15568 in k15517 in k7924 in k7921 in k5905 in k5612 in k5609 in k5605 in k5314 in k5311 in k5308 in k5305 */
static void C_ccall f_18145(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word ab[72],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_18145,2,t0,t1);}
t2=(C_word)C_a_i_cons(&a,2,lf[16],t1);
t3=(C_word)C_a_i_list(&a,3,lf[662],((C_word*)t0)[8],t2);
t4=(C_word)C_a_i_list(&a,3,lf[663],C_SCHEME_END_OF_LIST,t3);
t5=(C_word)C_a_i_list(&a,3,lf[626],((C_word*)t0)[7],t4);
t6=(C_word)C_a_i_list(&a,3,lf[663],((C_word*)t0)[6],t5);
t7=(C_word)C_a_i_list(&a,2,lf[627],t6);
t8=(C_word)C_a_i_list(&a,3,lf[2],((C_word*)t0)[5],t7);
t9=(C_word)C_a_i_list(&a,3,lf[663],((C_word*)t0)[4],t8);
t10=((C_word*)t0)[3];
((C_proc2)(void*)(*((C_word*)t10+1)))(2,t10,(C_word)C_a_i_list(&a,3,lf[2],((C_word*)((C_word*)t0)[2])[1],t9));}

/* a29595 in k17994 in k17991 in k17468 in k17465 in k17462 in k17459 in k17456 in k17453 in k17450 in k17447 in k17444 in k17441 in k17438 in k17435 in k17432 in k17429 in k17426 in k17423 in k17420 in k17417 in k17414 in k17411 in k17408 in k17269 in k17266 in k17263 in k17260 in k17204 in k17201 in k17198 in k17195 in k17192 in k17189 in k17186 in k17183 in k15938 in k15869 in k15676 in k15673 in k15568 in k15517 in k7924 in k7921 in k5905 in k5612 in k5609 in k5605 in k5314 in k5311 in k5308 in k5305 */
static void C_ccall f_29596(C_word c,C_word t0,C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word ab[10],*a=ab;
if(c!=4) C_bad_argc_2(c,4,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr4,(void*)f_29596,4,t0,t1,t2,t3);}
t4=(C_word)C_i_car(t2);
t5=(C_word)C_i_cadr(t2);
t6=t5;
t7=(*a=C_VECTOR_TYPE|1,a[1]=t6,tmp=(C_word)a,a+=2,tmp);
t8=(C_word)C_i_caddr(t2);
t9=(C_word)C_i_cadddr(t2);
t10=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_29612,a[2]=t2,a[3]=t1,a[4]=t9,a[5]=t8,a[6]=t7,a[7]=t4,tmp=(C_word)a,a+=8,tmp);
C_trace("ChickenBridge.scm: 369  fifth");
t11=C_retrieve(lf[47]);
((C_proc3)C_retrieve_proc(t11))(3,t11,t10,t2);}

/* k29610 in a29595 in k17994 in k17991 in k17468 in k17465 in k17462 in k17459 in k17456 in k17453 in k17450 in k17447 in k17444 in k17441 in k17438 in k17435 in k17432 in k17429 in k17426 in k17423 in k17420 in k17417 in k17414 in k17411 in k17408 in k17269 in k17266 in k17263 in k17260 in k17204 in k17201 in k17198 in k17195 in k17192 in k17189 in k17186 in k17183 in k15938 in k15869 in k15676 in k15673 in k15568 in k15517 in k7924 in k7921 in k5905 in k5612 in k5609 in k5605 in k5314 in k5311 in k5308 in k5305 */
static void C_ccall f_29612(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[8],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_29612,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_29615,a[2]=((C_word*)t0)[3],a[3]=t1,a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],a[7]=((C_word*)t0)[7],tmp=(C_word)a,a+=8,tmp);
C_trace("ChickenBridge.scm: 369  sixth");
t3=C_retrieve(lf[48]);
((C_proc3)C_retrieve_proc(t3))(3,t3,t2,((C_word*)t0)[2]);}

/* k29613 in k29610 in a29595 in k17994 in k17991 in k17468 in k17465 in k17462 in k17459 in k17456 in k17453 in k17450 in k17447 in k17444 in k17441 in k17438 in k17435 in k17432 in k17429 in k17426 in k17423 in k17420 in k17417 in k17414 in k17411 in k17408 in k17269 in k17266 in k17263 in k17260 in k17204 in k17201 in k17198 in k17195 in k17192 in k17189 in k17186 in k17183 in k15938 in k15869 in k15676 in k15673 in k15568 in k15517 in k7924 in k7921 in k5905 in k5612 in k5609 in k5605 in k5314 in k5311 in k5308 in k5305 */
static void C_ccall f_29615(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word ab[11],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_29615,2,t0,t1);}
t2=t1;
t3=(*a=C_VECTOR_TYPE|1,a[1]=t2,tmp=(C_word)a,a+=2,tmp);
t4=(*a=C_CLOSURE_TYPE|8,a[1]=(C_word)f_29618,a[2]=((C_word*)t0)[2],a[3]=t3,a[4]=((C_word*)t0)[3],a[5]=((C_word*)t0)[4],a[6]=((C_word*)t0)[5],a[7]=((C_word*)t0)[6],a[8]=((C_word*)t0)[7],tmp=(C_word)a,a+=9,tmp);
if(C_truep(((C_word*)((C_word*)t0)[6])[1])){
t5=(C_word)C_i_car(((C_word*)((C_word*)t0)[6])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[6])+1,t5);
t7=t4;
f_29618(t7,t6);}
else{
t5=t4;
f_29618(t5,C_SCHEME_UNDEFINED);}}

/* k29616 in k29613 in k29610 in a29595 in k17994 in k17991 in k17468 in k17465 in k17462 in k17459 in k17456 in k17453 in k17450 in k17447 in k17444 in k17441 in k17438 in k17435 in k17432 in k17429 in k17426 in k17423 in k17420 in k17417 in k17414 in k17411 in k17408 in k17269 in k17266 in k17263 in k17260 in k17204 in k17201 in k17198 in k17195 in k17192 in k17189 in k17186 in k17183 in k15938 in k15869 in k15676 in k15673 in k15568 in k15517 in k7924 in k7921 in k5905 in k5612 in k5609 in k5605 in k5314 in k5311 in k5308 in k5305 */
static void C_fcall f_29618(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_29618,NULL,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|8,a[1]=(C_word)f_29621,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],a[7]=((C_word*)t0)[7],a[8]=((C_word*)t0)[8],tmp=(C_word)a,a+=9,tmp);
if(C_truep(((C_word*)((C_word*)t0)[3])[1])){
t3=(C_word)C_i_cadr(((C_word*)((C_word*)t0)[3])[1]);
t4=C_mutate(((C_word *)((C_word*)t0)[3])+1,t3);
t5=t2;
f_29621(t5,t4);}
else{
t3=t2;
f_29621(t3,C_SCHEME_UNDEFINED);}}

/* k29619 in k29616 in k29613 in k29610 in a29595 in k17994 in k17991 in k17468 in k17465 in k17462 in k17459 in k17456 in k17453 in k17450 in k17447 in k17444 in k17441 in k17438 in k17435 in k17432 in k17429 in k17426 in k17423 in k17420 in k17417 in k17414 in k17411 in k17408 in k17269 in k17266 in k17263 in k17260 in k17204 in k17201 in k17198 in k17195 in k17192 in k17189 in k17186 in k17183 in k15938 in k15869 in k15676 in k15673 in k15568 in k15517 in k7924 in k7921 in k5905 in k5612 in k5609 in k5605 in k5314 in k5311 in k5308 in k5305 */
static void C_fcall f_29621(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[22],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_29621,NULL,2,t0,t1);}
t2=(C_word)C_a_i_list(&a,6,((C_word*)t0)[8],((C_word*)((C_word*)t0)[7])[1],((C_word*)t0)[6],((C_word*)t0)[5],((C_word*)t0)[4],((C_word*)((C_word*)t0)[3])[1]);
t3=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_29632,a[2]=t2,a[3]=((C_word*)t0)[2],tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 369  parse-unit-position");
f_15930(t3,((C_word*)t0)[8]);}

/* k29630 in k29619 in k29616 in k29613 in k29610 in a29595 in k17994 in k17991 in k17468 in k17465 in k17462 in k17459 in k17456 in k17453 in k17450 in k17447 in k17444 in k17441 in k17438 in k17435 in k17432 in k17429 in k17426 in k17423 in k17420 in k17417 in k17414 in k17411 in k17408 in k17269 in k17266 in k17263 in k17260 in k17204 in k17201 in k17198 in k17195 in k17192 in k17189 in k17186 in k17183 in k15938 in k15869 in k15676 in k15673 in k15568 in k15517 in k7924 in k7921 in k5905 in k5612 in k5609 in k5605 in k5314 in k5311 in k5308 in k5305 */
static void C_ccall f_29632(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 369  make-parse-unit");
f_15873(((C_word*)t0)[3],C_fix(32512),((C_word*)t0)[2],t1);}

/* k29588 in k17994 in k17991 in k17468 in k17465 in k17462 in k17459 in k17456 in k17453 in k17450 in k17447 in k17444 in k17441 in k17438 in k17435 in k17432 in k17429 in k17426 in k17423 in k17420 in k17417 in k17414 in k17411 in k17408 in k17269 in k17266 in k17263 in k17260 in k17204 in k17201 in k17198 in k17195 in k17192 in k17189 in k17186 in k17183 in k15938 in k15869 in k15676 in k15673 in k15568 in k15517 in k7924 in k7921 in k5905 in k5612 in k5609 in k5605 in k5314 in k5311 in k5308 in k5305 */
static void C_ccall f_29590(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 369  hash-table-set!");
t2=C_retrieve(lf[681]);
((C_proc5)C_retrieve_proc(t2))(5,t2,((C_word*)t0)[2],C_retrieve2(lf[277],"*rules*"),C_fix(32512),t1);}

/* k18516 in k17994 in k17991 in k17468 in k17465 in k17462 in k17459 in k17456 in k17453 in k17450 in k17447 in k17444 in k17441 in k17438 in k17435 in k17432 in k17429 in k17426 in k17423 in k17420 in k17417 in k17414 in k17411 in k17408 in k17269 in k17266 in k17263 in k17260 in k17204 in k17201 in k17198 in k17195 in k17192 in k17189 in k17186 in k17183 in k15938 in k15869 in k15676 in k15673 in k15568 in k15517 in k7924 in k7921 in k5905 in k5612 in k5609 in k5605 in k5314 in k5311 in k5308 in k5305 */
static void C_ccall f_18518(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word t14;
C_word t15;
C_word t16;
C_word t17;
C_word t18;
C_word t19;
C_word t20;
C_word t21;
C_word t22;
C_word t23;
C_word ab[63],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_18518,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_18521,a[2]=((C_word*)t0)[2],tmp=(C_word)a,a+=3,tmp);
t3=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_29445,a[2]=t2,tmp=(C_word)a,a+=3,tmp);
t4=(C_word)C_a_i_cons(&a,2,C_fix(768),C_SCHEME_END_OF_LIST);
t5=(C_word)C_a_i_cons(&a,2,C_fix(512),t4);
t6=(C_word)C_a_i_cons(&a,2,lf[310],t5);
t7=(C_word)C_a_i_cons(&a,2,C_fix(25088),C_SCHEME_END_OF_LIST);
t8=(C_word)C_a_i_cons(&a,2,C_fix(256),t7);
t9=(C_word)C_a_i_cons(&a,2,lf[95],t8);
t10=(C_word)C_a_i_cons(&a,2,C_fix(768),C_SCHEME_END_OF_LIST);
t11=(C_word)C_a_i_cons(&a,2,t9,t10);
t12=(C_word)C_a_i_cons(&a,2,C_fix(25088),t11);
t13=(C_word)C_a_i_cons(&a,2,C_fix(512),t12);
t14=(C_word)C_a_i_cons(&a,2,lf[310],t13);
t15=(C_word)C_a_i_cons(&a,2,t14,C_SCHEME_END_OF_LIST);
t16=(C_word)C_a_i_cons(&a,2,t6,t15);
t17=(C_word)C_a_i_cons(&a,2,lf[311],t16);
t18=(C_word)C_a_i_cons(&a,2,C_fix(36608),C_SCHEME_END_OF_LIST);
t19=(C_word)C_a_i_cons(&a,2,t17,t18);
t20=(C_word)C_a_i_cons(&a,2,C_fix(25088),t19);
t21=(C_word)C_a_i_cons(&a,2,lf[310],t20);
t22=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_29451,a[2]=((C_word)li475),tmp=(C_word)a,a+=3,tmp);
C_trace("ChickenBridge.scm: 369  make-rule");
f_15572(t3,lf[737],C_fix(37632),t21,t22,C_SCHEME_FALSE);}

/* a29450 in k18516 in k17994 in k17991 in k17468 in k17465 in k17462 in k17459 in k17456 in k17453 in k17450 in k17447 in k17444 in k17441 in k17438 in k17435 in k17432 in k17429 in k17426 in k17423 in k17420 in k17417 in k17414 in k17411 in k17408 in k17269 in k17266 in k17263 in k17260 in k17204 in k17201 in k17198 in k17195 in k17192 in k17189 in k17186 in k17183 in k15938 in k15869 in k15676 in k15673 in k15568 in k15517 in k7924 in k7921 in k5905 in k5612 in k5609 in k5605 in k5314 in k5311 in k5308 in k5305 */
static void C_ccall f_29451(C_word c,C_word t0,C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word t14;
C_word t15;
C_word ab[13],*a=ab;
if(c!=4) C_bad_argc_2(c,4,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr4,(void*)f_29451,4,t0,t1,t2,t3);}
t4=(C_word)C_i_car(t2);
t5=(C_word)C_i_cadr(t2);
t6=t5;
t7=(*a=C_VECTOR_TYPE|1,a[1]=t6,tmp=(C_word)a,a+=2,tmp);
t8=(C_word)C_i_caddr(t2);
t9=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_29464,a[2]=t1,a[3]=t8,a[4]=t7,a[5]=t4,tmp=(C_word)a,a+=6,tmp);
t10=(C_word)C_i_length(((C_word*)t7)[1]);
if(C_truep((C_word)C_i_nequalp(t10,C_fix(2)))){
t11=C_set_block_item(t7,0,C_SCHEME_END_OF_LIST);
t12=t9;
f_29464(t12,t11);}
else{
t11=(C_word)C_i_cadr(((C_word*)t7)[1]);
t12=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_29490,a[2]=t9,a[3]=t7,a[4]=t11,tmp=(C_word)a,a+=5,tmp);
t13=(C_word)C_i_caddr(((C_word*)t7)[1]);
C_trace("ChickenBridge.scm: 369  remove-token-type");
f_17208(t12,t13,C_fix(256));}}

/* k29488 in a29450 in k18516 in k17994 in k17991 in k17468 in k17465 in k17462 in k17459 in k17456 in k17453 in k17450 in k17447 in k17444 in k17441 in k17438 in k17435 in k17432 in k17429 in k17426 in k17423 in k17420 in k17417 in k17414 in k17411 in k17408 in k17269 in k17266 in k17263 in k17260 in k17204 in k17201 in k17198 in k17195 in k17192 in k17189 in k17186 in k17183 in k15938 in k15869 in k15676 in k15673 in k15568 in k15517 in k7924 in k7921 in k5905 in k5612 in k5609 in k5605 in k5314 in k5311 in k5308 in k5305 */
static void C_ccall f_29490(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[3],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_29490,2,t0,t1);}
t2=(C_word)C_a_i_cons(&a,2,((C_word*)t0)[4],t1);
t3=C_mutate(((C_word *)((C_word*)t0)[3])+1,t2);
t4=((C_word*)t0)[2];
f_29464(t4,t3);}

/* k29462 in a29450 in k18516 in k17994 in k17991 in k17468 in k17465 in k17462 in k17459 in k17456 in k17453 in k17450 in k17447 in k17444 in k17441 in k17438 in k17435 in k17432 in k17429 in k17426 in k17423 in k17420 in k17417 in k17414 in k17411 in k17408 in k17269 in k17266 in k17263 in k17260 in k17204 in k17201 in k17198 in k17195 in k17192 in k17189 in k17186 in k17183 in k15938 in k15869 in k15676 in k15673 in k15568 in k15517 in k7924 in k7921 in k5905 in k5612 in k5609 in k5605 in k5314 in k5311 in k5308 in k5305 */
static void C_fcall f_29464(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_29464,NULL,2,t0,t1);}
t2=(C_word)C_a_i_list(&a,3,((C_word*)t0)[5],((C_word*)((C_word*)t0)[4])[1],((C_word*)t0)[3]);
C_trace("ChickenBridge.scm: 369  make-parse-unit");
f_15873(((C_word*)t0)[2],C_fix(37632),t2,C_SCHEME_FALSE);}

/* k29443 in k18516 in k17994 in k17991 in k17468 in k17465 in k17462 in k17459 in k17456 in k17453 in k17450 in k17447 in k17444 in k17441 in k17438 in k17435 in k17432 in k17429 in k17426 in k17423 in k17420 in k17417 in k17414 in k17411 in k17408 in k17269 in k17266 in k17263 in k17260 in k17204 in k17201 in k17198 in k17195 in k17192 in k17189 in k17186 in k17183 in k15938 in k15869 in k15676 in k15673 in k15568 in k15517 in k7924 in k7921 in k5905 in k5612 in k5609 in k5605 in k5314 in k5311 in k5308 in k5305 */
static void C_ccall f_29445(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 369  hash-table-set!");
t2=C_retrieve(lf[681]);
((C_proc5)C_retrieve_proc(t2))(5,t2,((C_word*)t0)[2],C_retrieve2(lf[277],"*rules*"),C_fix(37632),t1);}

/* k18519 in k18516 in k17994 in k17991 in k17468 in k17465 in k17462 in k17459 in k17456 in k17453 in k17450 in k17447 in k17444 in k17441 in k17438 in k17435 in k17432 in k17429 in k17426 in k17423 in k17420 in k17417 in k17414 in k17411 in k17408 in k17269 in k17266 in k17263 in k17260 in k17204 in k17201 in k17198 in k17195 in k17192 in k17189 in k17186 in k17183 in k15938 in k15869 in k15676 in k15673 in k15568 in k15517 in k7924 in k7921 in k5905 in k5612 in k5609 in k5605 in k5314 in k5311 in k5308 in k5305 */
static void C_ccall f_18521(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word t14;
C_word t15;
C_word t16;
C_word t17;
C_word t18;
C_word t19;
C_word t20;
C_word t21;
C_word t22;
C_word t23;
C_word t24;
C_word t25;
C_word t26;
C_word ab[72],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_18521,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_18524,a[2]=((C_word*)t0)[2],tmp=(C_word)a,a+=3,tmp);
t3=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_28988,a[2]=t2,tmp=(C_word)a,a+=3,tmp);
t4=(C_word)C_a_i_cons(&a,2,C_fix(30208),C_SCHEME_END_OF_LIST);
t5=(C_word)C_a_i_cons(&a,2,C_fix(256),t4);
t6=(C_word)C_a_i_cons(&a,2,lf[95],t5);
t7=(C_word)C_a_i_cons(&a,2,t6,C_SCHEME_END_OF_LIST);
t8=(C_word)C_a_i_cons(&a,2,C_fix(30208),t7);
t9=(C_word)C_a_i_cons(&a,2,C_fix(24576),t8);
t10=(C_word)C_a_i_cons(&a,2,lf[310],t9);
t11=(C_word)C_a_i_cons(&a,2,C_fix(37632),C_SCHEME_END_OF_LIST);
t12=(C_word)C_a_i_cons(&a,2,C_fix(24064),t11);
t13=(C_word)C_a_i_cons(&a,2,lf[310],t12);
t14=(C_word)C_a_i_cons(&a,2,C_fix(37632),C_SCHEME_END_OF_LIST);
t15=(C_word)C_a_i_cons(&a,2,C_fix(24320),t14);
t16=(C_word)C_a_i_cons(&a,2,lf[310],t15);
t17=(C_word)C_a_i_cons(&a,2,t16,C_SCHEME_END_OF_LIST);
t18=(C_word)C_a_i_cons(&a,2,t13,t17);
t19=(C_word)C_a_i_cons(&a,2,t10,t18);
t20=(C_word)C_a_i_cons(&a,2,lf[311],t19);
t21=(C_word)C_a_i_cons(&a,2,t20,C_SCHEME_END_OF_LIST);
t22=(C_word)C_a_i_cons(&a,2,C_fix(13824),t21);
t23=(C_word)C_a_i_cons(&a,2,lf[310],t22);
t24=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_28994,a[2]=((C_word)li471),tmp=(C_word)a,a+=3,tmp);
t25=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_29033,a[2]=((C_word)li474),tmp=(C_word)a,a+=3,tmp);
C_trace("ChickenBridge.scm: 369  make-rule");
f_15572(t3,lf[736],C_fix(36352),t23,t24,t25);}

/* a29032 in k18519 in k18516 in k17994 in k17991 in k17468 in k17465 in k17462 in k17459 in k17456 in k17453 in k17450 in k17447 in k17444 in k17441 in k17438 in k17435 in k17432 in k17429 in k17426 in k17423 in k17420 in k17417 in k17414 in k17411 in k17408 in k17269 in k17266 in k17263 in k17260 in k17204 in k17201 in k17198 in k17195 in k17192 in k17189 in k17186 in k17183 in k15938 in k15869 in k15676 in k15673 in k15568 in k15517 in k7924 in k7921 in k5905 in k5612 in k5609 in k5605 in k5314 in k5311 in k5308 in k5305 */
static void C_ccall f_29033(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4){
C_word tmp;
C_word t5;
C_word t6;
C_word t7;
C_word ab[7],*a=ab;
if(c!=5) C_bad_argc_2(c,5,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr5,(void*)f_29033,5,t0,t1,t2,t3,t4);}
t5=(*a=C_VECTOR_TYPE|1,a[1]=t3,tmp=(C_word)a,a+=2,tmp);
t6=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_29037,a[2]=t4,a[3]=t5,a[4]=t1,tmp=(C_word)a,a+=5,tmp);
C_trace("ChickenBridge.scm: 369  parse-unit-parsed");
f_15912(t6,t2);}

/* k29035 in a29032 in k18519 in k18516 in k17994 in k17991 in k17468 in k17465 in k17462 in k17459 in k17456 in k17453 in k17450 in k17447 in k17444 in k17441 in k17438 in k17435 in k17432 in k17429 in k17426 in k17423 in k17420 in k17417 in k17414 in k17411 in k17408 in k17269 in k17266 in k17263 in k17260 in k17204 in k17201 in k17198 in k17195 in k17192 in k17189 in k17186 in k17183 in k15938 in k15869 in k15676 in k15673 in k15568 in k15517 in k7924 in k7921 in k5905 in k5612 in k5609 in k5605 in k5314 in k5311 in k5308 in k5305 */
static void C_ccall f_29037(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word ab[18],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_29037,2,t0,t1);}
t2=(C_word)C_i_car(t1);
t3=(C_word)C_a_i_list(&a,1,lf[336]);
t4=t3;
t5=(*a=C_VECTOR_TYPE|1,a[1]=t4,tmp=(C_word)a,a+=2,tmp);
t6=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_29046,a[2]=t3,a[3]=((C_word*)t0)[4],tmp=(C_word)a,a+=4,tmp);
t7=(*a=C_CLOSURE_TYPE|8,a[1]=(C_word)f_29049,a[2]=t2,a[3]=t3,a[4]=t6,a[5]=((C_word*)t0)[2],a[6]=((C_word*)t0)[3],a[7]=t5,a[8]=t1,tmp=(C_word)a,a+=9,tmp);
C_trace("ChickenBridge.scm: 369  token-unit-type=?");
f_15958(t7,t2,C_fix(24576));}

/* k29047 in k29035 in a29032 in k18519 in k18516 in k17994 in k17991 in k17468 in k17465 in k17462 in k17459 in k17456 in k17453 in k17450 in k17447 in k17444 in k17441 in k17438 in k17435 in k17432 in k17429 in k17426 in k17423 in k17420 in k17417 in k17414 in k17411 in k17408 in k17269 in k17266 in k17263 in k17260 in k17204 in k17201 in k17198 in k17195 in k17192 in k17189 in k17186 in k17183 in k15938 in k15869 in k15676 in k15673 in k15568 in k15517 in k7924 in k7921 in k5905 in k5612 in k5609 in k5605 in k5314 in k5311 in k5308 in k5305 */
static void C_ccall f_29049(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word ab[16],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_29049,2,t0,t1);}
if(C_truep(t1)){
t2=(C_word)C_i_cdr(((C_word*)t0)[8]);
t3=C_SCHEME_UNDEFINED;
t4=(*a=C_VECTOR_TYPE|1,a[1]=t3,tmp=(C_word)a,a+=2,tmp);
t5=C_set_block_item(t4,0,(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_29058,a[2]=((C_word*)t0)[5],a[3]=((C_word*)t0)[6],a[4]=t4,a[5]=((C_word*)t0)[7],a[6]=((C_word)li472),tmp=(C_word)a,a+=7,tmp));
t6=((C_word*)t4)[1];
f_29058(t6,((C_word*)t0)[4],t2);}
else{
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_29107,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[5],a[4]=((C_word*)t0)[6],a[5]=((C_word*)t0)[3],a[6]=((C_word*)t0)[4],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cadr(((C_word*)t0)[8]);
C_trace("ChickenBridge.scm: 369  parse-unit-parsed");
f_15912(t2,t3);}}

/* k29105 in k29047 in k29035 in a29032 in k18519 in k18516 in k17994 in k17991 in k17468 in k17465 in k17462 in k17459 in k17456 in k17453 in k17450 in k17447 in k17444 in k17441 in k17438 in k17435 in k17432 in k17429 in k17426 in k17423 in k17420 in k17417 in k17414 in k17411 in k17408 in k17269 in k17266 in k17263 in k17260 in k17204 in k17201 in k17198 in k17195 in k17192 in k17189 in k17186 in k17183 in k15938 in k15869 in k15676 in k15673 in k15568 in k15517 in k7924 in k7921 in k5905 in k5612 in k5609 in k5605 in k5314 in k5311 in k5308 in k5305 */
static void C_ccall f_29107(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[8],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_29107,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_29110,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],a[7]=t1,tmp=(C_word)a,a+=8,tmp);
t3=(C_word)C_i_car(t1);
C_trace("ChickenBridge.scm: 369  emit");
f_16030(t2,t3,((C_word*)((C_word*)t0)[4])[1],((C_word*)t0)[3]);}

/* k29108 in k29105 in k29047 in k29035 in a29032 in k18519 in k18516 in k17994 in k17991 in k17468 in k17465 in k17462 in k17459 in k17456 in k17453 in k17450 in k17447 in k17444 in k17441 in k17438 in k17435 in k17432 in k17429 in k17426 in k17423 in k17420 in k17417 in k17414 in k17411 in k17408 in k17269 in k17266 in k17263 in k17260 in k17204 in k17201 in k17198 in k17195 in k17192 in k17189 in k17186 in k17183 in k15938 in k15869 in k15676 in k15673 in k15568 in k15517 in k7924 in k7921 in k5905 in k5612 in k5609 in k5605 in k5314 in k5311 in k5308 in k5305 */
static void C_ccall f_29110(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_29110,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|8,a[1]=(C_word)f_29113,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],a[7]=((C_word*)t0)[7],a[8]=t1,tmp=(C_word)a,a+=9,tmp);
t3=(C_word)C_i_cadr(((C_word*)t0)[7]);
C_trace("ChickenBridge.scm: 369  emit");
f_16030(t2,t3,((C_word*)((C_word*)t0)[4])[1],((C_word*)t0)[3]);}

/* k29111 in k29108 in k29105 in k29047 in k29035 in a29032 in k18519 in k18516 in k17994 in k17991 in k17468 in k17465 in k17462 in k17459 in k17456 in k17453 in k17450 in k17447 in k17444 in k17441 in k17438 in k17435 in k17432 in k17429 in k17426 in k17423 in k17420 in k17417 in k17414 in k17411 in k17408 in k17269 in k17266 in k17263 in k17260 in k17204 in k17201 in k17198 in k17195 in k17192 in k17189 in k17186 in k17183 in k15938 in k15869 in k15676 in k15673 in k15568 in k15517 in k7924 in k7921 in k5905 in k5612 in k5609 in k5605 in k5314 in k5311 in k5308 in k5305 */
static void C_ccall f_29113(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[10],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_29113,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|9,a[1]=(C_word)f_29325,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=t1,a[6]=((C_word*)t0)[5],a[7]=((C_word*)t0)[6],a[8]=((C_word*)t0)[7],a[9]=((C_word*)t0)[8],tmp=(C_word)a,a+=10,tmp);
C_trace("ChickenBridge.scm: 369  append");
t3=*((C_word*)lf[18]+1);
((C_proc4)C_retrieve_proc(t3))(4,t3,t2,t1,C_SCHEME_END_OF_LIST);}

/* k29323 in k29111 in k29108 in k29105 in k29047 in k29035 in a29032 in k18519 in k18516 in k17994 in k17991 in k17468 in k17465 in k17462 in k17459 in k17456 in k17453 in k17450 in k17447 in k17444 in k17441 in k17438 in k17435 in k17432 in k17429 in k17426 in k17423 in k17420 in k17417 in k17414 in k17411 in k17408 in k17269 in k17266 in k17263 in k17260 in k17204 in k17201 in k17198 in k17195 in k17192 in k17189 in k17186 in k17183 in k15938 in k15869 in k15676 in k15673 in k15568 in k15517 in k7924 in k7921 in k5905 in k5612 in k5609 in k5605 in k5314 in k5311 in k5308 in k5305 */
static void C_ccall f_29325(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word t14;
C_word t15;
C_word ab[28],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_29325,2,t0,t1);}
t2=(C_word)C_a_i_cons(&a,2,((C_word*)t0)[9],t1);
t3=(C_word)C_i_caddr(((C_word*)t0)[8]);
t4=C_SCHEME_FALSE;
t5=(*a=C_VECTOR_TYPE|1,a[1]=t4,tmp=(C_word)a,a+=2,tmp);
t6=C_SCHEME_FALSE;
t7=(*a=C_VECTOR_TYPE|1,a[1]=t6,tmp=(C_word)a,a+=2,tmp);
t8=(*a=C_CLOSURE_TYPE|12,a[1]=(C_word)f_29122,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=t3,a[5]=t2,a[6]=((C_word*)t0)[4],a[7]=((C_word*)t0)[9],a[8]=((C_word*)t0)[5],a[9]=((C_word*)t0)[6],a[10]=((C_word*)t0)[7],a[11]=t7,a[12]=t5,tmp=(C_word)a,a+=13,tmp);
t9=(C_word)C_i_cdr(t2);
if(C_truep((C_word)C_i_nullp(t9))){
t10=t8;
f_29122(t10,C_SCHEME_UNDEFINED);}
else{
t10=(C_word)C_i_length(t2);
t11=(C_word)C_a_i_minus(&a,2,t10,C_fix(2));
t12=(C_word)C_i_list_tail(t2,t11);
t13=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_29263,a[2]=t12,a[3]=t8,tmp=(C_word)a,a+=4,tmp);
t14=(C_word)C_i_cadr(t12);
C_trace("ChickenBridge.scm: 369  symbol->string");
t15=*((C_word*)lf[25]+1);
((C_proc3)C_retrieve_proc(t15))(3,t15,t13,t14);}}

/* k29261 in k29323 in k29111 in k29108 in k29105 in k29047 in k29035 in a29032 in k18519 in k18516 in k17994 in k17991 in k17468 in k17465 in k17462 in k17459 in k17456 in k17453 in k17450 in k17447 in k17444 in k17441 in k17438 in k17435 in k17432 in k17429 in k17426 in k17423 in k17420 in k17417 in k17414 in k17411 in k17408 in k17269 in k17266 in k17263 in k17260 in k17204 in k17201 in k17198 in k17195 in k17192 in k17189 in k17186 in k17183 in k15938 in k15869 in k15676 in k15673 in k15568 in k15517 in k7924 in k7921 in k5905 in k5612 in k5609 in k5605 in k5314 in k5311 in k5308 in k5305 */
static void C_ccall f_29263(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[13],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_29263,2,t0,t1);}
t2=(C_word)C_i_string_length(t1);
t3=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_29272,a[2]=t1,a[3]=t2,a[4]=((C_word*)t0)[2],a[5]=((C_word*)t0)[3],tmp=(C_word)a,a+=6,tmp);
if(C_truep((C_word)C_i_greaterp(t2,C_fix(3)))){
t4=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_29297,a[2]=t3,tmp=(C_word)a,a+=3,tmp);
t5=(C_word)C_a_i_minus(&a,2,t2,C_fix(3));
C_trace("ChickenBridge.scm: 369  substring");
t6=*((C_word*)lf[352]+1);
((C_proc4)C_retrieve_proc(t6))(4,t6,t4,t1,t5);}
else{
t4=t3;
f_29272(t4,C_SCHEME_FALSE);}}

/* k29295 in k29261 in k29323 in k29111 in k29108 in k29105 in k29047 in k29035 in a29032 in k18519 in k18516 in k17994 in k17991 in k17468 in k17465 in k17462 in k17459 in k17456 in k17453 in k17450 in k17447 in k17444 in k17441 in k17438 in k17435 in k17432 in k17429 in k17426 in k17423 in k17420 in k17417 in k17414 in k17411 in k17408 in k17269 in k17266 in k17263 in k17260 in k17204 in k17201 in k17198 in k17195 in k17192 in k17189 in k17186 in k17183 in k15938 in k15869 in k15676 in k15673 in k15568 in k15517 in k7924 in k7921 in k5905 in k5612 in k5609 in k5605 in k5314 in k5311 in k5308 in k5305 */
static void C_ccall f_29297(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
t2=((C_word*)t0)[2];
f_29272(t2,(C_word)C_i_string_equal_p(t1,lf[735]));}

/* k29270 in k29261 in k29323 in k29111 in k29108 in k29105 in k29047 in k29035 in a29032 in k18519 in k18516 in k17994 in k17991 in k17468 in k17465 in k17462 in k17459 in k17456 in k17453 in k17450 in k17447 in k17444 in k17441 in k17438 in k17435 in k17432 in k17429 in k17426 in k17423 in k17420 in k17417 in k17414 in k17411 in k17408 in k17269 in k17266 in k17263 in k17260 in k17204 in k17201 in k17198 in k17195 in k17192 in k17189 in k17186 in k17183 in k15938 in k15869 in k15676 in k15673 in k15568 in k15517 in k7924 in k7921 in k5905 in k5612 in k5609 in k5605 in k5314 in k5311 in k5308 in k5305 */
static void C_fcall f_29272(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[11],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_29272,NULL,2,t0,t1);}
if(C_truep(t1)){
t2=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_29279,a[2]=((C_word*)t0)[4],a[3]=((C_word*)t0)[5],tmp=(C_word)a,a+=4,tmp);
t3=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_29283,a[2]=t2,tmp=(C_word)a,a+=3,tmp);
t4=(C_word)C_a_i_minus(&a,2,((C_word*)t0)[3],C_fix(3));
C_trace("ChickenBridge.scm: 369  substring");
t5=*((C_word*)lf[352]+1);
((C_proc5)C_retrieve_proc(t5))(5,t5,t3,((C_word*)t0)[2],C_fix(0),t4);}
else{
t2=((C_word*)t0)[5];
f_29122(t2,C_SCHEME_UNDEFINED);}}

/* k29281 in k29270 in k29261 in k29323 in k29111 in k29108 in k29105 in k29047 in k29035 in a29032 in k18519 in k18516 in k17994 in k17991 in k17468 in k17465 in k17462 in k17459 in k17456 in k17453 in k17450 in k17447 in k17444 in k17441 in k17438 in k17435 in k17432 in k17429 in k17426 in k17423 in k17420 in k17417 in k17414 in k17411 in k17408 in k17269 in k17266 in k17263 in k17260 in k17204 in k17201 in k17198 in k17195 in k17192 in k17189 in k17186 in k17183 in k15938 in k15869 in k15676 in k15673 in k15568 in k15517 in k7924 in k7921 in k5905 in k5612 in k5609 in k5605 in k5314 in k5311 in k5308 in k5305 */
static void C_ccall f_29283(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 369  string->symbol");
t2=*((C_word*)lf[307]+1);
((C_proc3)C_retrieve_proc(t2))(3,t2,((C_word*)t0)[2],t1);}

/* k29277 in k29270 in k29261 in k29323 in k29111 in k29108 in k29105 in k29047 in k29035 in a29032 in k18519 in k18516 in k17994 in k17991 in k17468 in k17465 in k17462 in k17459 in k17456 in k17453 in k17450 in k17447 in k17444 in k17441 in k17438 in k17435 in k17432 in k17429 in k17426 in k17423 in k17420 in k17417 in k17414 in k17411 in k17408 in k17269 in k17266 in k17263 in k17260 in k17204 in k17201 in k17198 in k17195 in k17192 in k17189 in k17186 in k17183 in k15938 in k15869 in k15676 in k15673 in k15568 in k15517 in k7924 in k7921 in k5905 in k5612 in k5609 in k5605 in k5314 in k5311 in k5308 in k5305 */
static void C_ccall f_29279(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
t2=((C_word*)t0)[3];
f_29122(t2,(C_word)C_i_set_cdr(((C_word*)t0)[2],t1));}

/* k29120 in k29323 in k29111 in k29108 in k29105 in k29047 in k29035 in a29032 in k18519 in k18516 in k17994 in k17991 in k17468 in k17465 in k17462 in k17459 in k17456 in k17453 in k17450 in k17447 in k17444 in k17441 in k17438 in k17435 in k17432 in k17429 in k17426 in k17423 in k17420 in k17417 in k17414 in k17411 in k17408 in k17269 in k17266 in k17263 in k17260 in k17204 in k17201 in k17198 in k17195 in k17192 in k17189 in k17186 in k17183 in k15938 in k15869 in k15676 in k15673 in k15568 in k15517 in k7924 in k7921 in k5905 in k5612 in k5609 in k5605 in k5314 in k5311 in k5308 in k5305 */
static void C_fcall f_29122(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[18],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_29122,NULL,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_29125,a[2]=((C_word*)t0)[7],a[3]=((C_word*)t0)[8],a[4]=((C_word*)t0)[9],a[5]=((C_word*)t0)[10],a[6]=((C_word*)t0)[11],a[7]=((C_word*)t0)[12],tmp=(C_word)a,a+=8,tmp);
t3=(*a=C_CLOSURE_TYPE|9,a[1]=(C_word)f_29200,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=t2,a[6]=((C_word*)t0)[12],a[7]=((C_word*)t0)[5],a[8]=((C_word*)t0)[11],a[9]=((C_word*)t0)[6],tmp=(C_word)a,a+=10,tmp);
C_trace("ChickenBridge.scm: 369  token-unit-type=?");
f_15958(t3,((C_word*)t0)[2],C_fix(24064));}

/* k29198 in k29120 in k29323 in k29111 in k29108 in k29105 in k29047 in k29035 in a29032 in k18519 in k18516 in k17994 in k17991 in k17468 in k17465 in k17462 in k17459 in k17456 in k17453 in k17450 in k17447 in k17444 in k17441 in k17438 in k17435 in k17432 in k17429 in k17426 in k17423 in k17420 in k17417 in k17414 in k17411 in k17408 in k17269 in k17266 in k17263 in k17260 in k17204 in k17201 in k17198 in k17195 in k17192 in k17189 in k17186 in k17183 in k15938 in k15869 in k15676 in k15673 in k15568 in k15517 in k7924 in k7921 in k5905 in k5612 in k5609 in k5605 in k5314 in k5311 in k5308 in k5305 */
static void C_ccall f_29200(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[18],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_29200,2,t0,t1);}
if(C_truep(t1)){
t2=(*a=C_CLOSURE_TYPE|8,a[1]=(C_word)f_29204,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],a[7]=((C_word*)t0)[8],a[8]=((C_word*)t0)[9],tmp=(C_word)a,a+=9,tmp);
C_trace("ChickenBridge.scm: 369  add-emit-info");
f_16002(t2,lf[732],C_SCHEME_TRUE,((C_word*)((C_word*)t0)[9])[1]);}
else{
t2=(*a=C_CLOSURE_TYPE|8,a[1]=(C_word)f_29241,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],a[7]=((C_word*)t0)[8],a[8]=((C_word*)t0)[9],tmp=(C_word)a,a+=9,tmp);
C_trace("ChickenBridge.scm: 369  token-unit-type=?");
f_15958(t2,((C_word*)t0)[2],C_fix(24320));}}

/* k29239 in k29198 in k29120 in k29323 in k29111 in k29108 in k29105 in k29047 in k29035 in a29032 in k18519 in k18516 in k17994 in k17991 in k17468 in k17465 in k17462 in k17459 in k17456 in k17453 in k17450 in k17447 in k17444 in k17441 in k17438 in k17435 in k17432 in k17429 in k17426 in k17423 in k17420 in k17417 in k17414 in k17411 in k17408 in k17269 in k17266 in k17263 in k17260 in k17204 in k17201 in k17198 in k17195 in k17192 in k17189 in k17186 in k17183 in k15938 in k15869 in k15676 in k15673 in k15568 in k15517 in k7924 in k7921 in k5905 in k5612 in k5609 in k5605 in k5314 in k5311 in k5308 in k5305 */
static void C_ccall f_29241(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_29241,2,t0,t1);}
if(C_truep(t1)){
t2=(*a=C_CLOSURE_TYPE|8,a[1]=(C_word)f_29245,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],a[7]=((C_word*)t0)[7],a[8]=((C_word*)t0)[8],tmp=(C_word)a,a+=9,tmp);
C_trace("ChickenBridge.scm: 369  add-emit-info");
f_16002(t2,lf[734],C_SCHEME_TRUE,((C_word*)((C_word*)t0)[8])[1]);}
else{
t2=((C_word*)t0)[4];
f_29125(t2,C_SCHEME_UNDEFINED);}}

/* k29243 in k29239 in k29198 in k29120 in k29323 in k29111 in k29108 in k29105 in k29047 in k29035 in a29032 in k18519 in k18516 in k17994 in k17991 in k17468 in k17465 in k17462 in k17459 in k17456 in k17453 in k17450 in k17447 in k17444 in k17441 in k17438 in k17435 in k17432 in k17429 in k17426 in k17423 in k17420 in k17417 in k17414 in k17411 in k17408 in k17269 in k17266 in k17263 in k17260 in k17204 in k17201 in k17198 in k17195 in k17192 in k17189 in k17186 in k17183 in k15938 in k15869 in k15676 in k15673 in k15568 in k15517 in k7924 in k7921 in k5905 in k5612 in k5609 in k5605 in k5314 in k5311 in k5308 in k5305 */
static void C_ccall f_29245(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[6],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_29245,2,t0,t1);}
t2=C_mutate(((C_word *)((C_word*)t0)[8])+1,t1);
t3=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_29249,a[2]=((C_word*)t0)[4],a[3]=((C_word*)t0)[5],a[4]=((C_word*)t0)[6],a[5]=((C_word*)t0)[7],tmp=(C_word)a,a+=6,tmp);
C_trace("ChickenBridge.scm: 369  emit");
f_16030(t3,((C_word*)t0)[3],((C_word*)((C_word*)t0)[8])[1],((C_word*)t0)[2]);}

/* k29247 in k29243 in k29239 in k29198 in k29120 in k29323 in k29111 in k29108 in k29105 in k29047 in k29035 in a29032 in k18519 in k18516 in k17994 in k17991 in k17468 in k17465 in k17462 in k17459 in k17456 in k17453 in k17450 in k17447 in k17444 in k17441 in k17438 in k17435 in k17432 in k17429 in k17426 in k17423 in k17420 in k17417 in k17414 in k17411 in k17408 in k17269 in k17266 in k17263 in k17260 in k17204 in k17201 in k17198 in k17195 in k17192 in k17189 in k17186 in k17183 in k15938 in k15869 in k15676 in k15673 in k15568 in k15517 in k7924 in k7921 in k5905 in k5612 in k5609 in k5605 in k5314 in k5311 in k5308 in k5305 */
static void C_ccall f_29249(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_29249,2,t0,t1);}
t2=C_mutate(((C_word *)((C_word*)t0)[5])+1,t1);
t3=(C_word)C_a_i_list(&a,3,lf[725],((C_word*)t0)[4],((C_word*)((C_word*)t0)[5])[1]);
t4=C_mutate(((C_word *)((C_word*)t0)[5])+1,t3);
t5=C_mutate(((C_word *)((C_word*)t0)[3])+1,lf[733]);
t6=((C_word*)t0)[2];
f_29125(t6,t5);}

/* k29202 in k29198 in k29120 in k29323 in k29111 in k29108 in k29105 in k29047 in k29035 in a29032 in k18519 in k18516 in k17994 in k17991 in k17468 in k17465 in k17462 in k17459 in k17456 in k17453 in k17450 in k17447 in k17444 in k17441 in k17438 in k17435 in k17432 in k17429 in k17426 in k17423 in k17420 in k17417 in k17414 in k17411 in k17408 in k17269 in k17266 in k17263 in k17260 in k17204 in k17201 in k17198 in k17195 in k17192 in k17189 in k17186 in k17183 in k15938 in k15869 in k15676 in k15673 in k15568 in k15517 in k7924 in k7921 in k5905 in k5612 in k5609 in k5605 in k5314 in k5311 in k5308 in k5305 */
static void C_ccall f_29204(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_29204,2,t0,t1);}
t2=C_mutate(((C_word *)((C_word*)t0)[8])+1,t1);
t3=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_29208,a[2]=((C_word*)t0)[8],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
C_trace("ChickenBridge.scm: 369  emit");
f_16030(t3,((C_word*)t0)[3],((C_word*)((C_word*)t0)[8])[1],((C_word*)t0)[2]);}

/* k29206 in k29202 in k29198 in k29120 in k29323 in k29111 in k29108 in k29105 in k29047 in k29035 in a29032 in k18519 in k18516 in k17994 in k17991 in k17468 in k17465 in k17462 in k17459 in k17456 in k17453 in k17450 in k17447 in k17444 in k17441 in k17438 in k17435 in k17432 in k17429 in k17426 in k17423 in k17420 in k17417 in k17414 in k17411 in k17408 in k17269 in k17266 in k17263 in k17260 in k17204 in k17201 in k17198 in k17195 in k17192 in k17189 in k17186 in k17183 in k15938 in k15869 in k15676 in k15673 in k15568 in k15517 in k7924 in k7921 in k5905 in k5612 in k5609 in k5605 in k5314 in k5311 in k5308 in k5305 */
static void C_ccall f_29208(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[10],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_29208,2,t0,t1);}
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_29211,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[6],a[5]=((C_word*)t0)[5],tmp=(C_word)a,a+=6,tmp);
t4=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_29235,a[2]=t3,a[3]=((C_word*)t0)[6],tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 369  get-emit-info");
f_15990(t4,lf[732],((C_word*)((C_word*)t0)[2])[1]);}

/* k29233 in k29206 in k29202 in k29198 in k29120 in k29323 in k29111 in k29108 in k29105 in k29047 in k29035 in a29032 in k18519 in k18516 in k17994 in k17991 in k17468 in k17465 in k17462 in k17459 in k17456 in k17453 in k17450 in k17447 in k17444 in k17441 in k17438 in k17435 in k17432 in k17429 in k17426 in k17423 in k17420 in k17417 in k17414 in k17411 in k17408 in k17269 in k17266 in k17263 in k17260 in k17204 in k17201 in k17198 in k17195 in k17192 in k17189 in k17186 in k17183 in k15938 in k15869 in k15676 in k15673 in k15568 in k15517 in k7924 in k7921 in k5905 in k5612 in k5609 in k5605 in k5314 in k5311 in k5308 in k5305 */
static void C_ccall f_29235(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word ab[18],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_29235,2,t0,t1);}
t2=(C_word)C_eqp(lf[731],t1);
if(C_truep(t2)){
t3=(C_word)C_a_i_list(&a,1,lf[537]);
t4=(C_word)C_a_i_list(&a,3,lf[663],t3,((C_word*)((C_word*)t0)[3])[1]);
t5=(C_word)C_a_i_list(&a,2,lf[627],t4);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_29211(t7,t6);}
else{
t3=((C_word*)t0)[2];
f_29211(t3,C_SCHEME_UNDEFINED);}}

/* k29209 in k29206 in k29202 in k29198 in k29120 in k29323 in k29111 in k29108 in k29105 in k29047 in k29035 in a29032 in k18519 in k18516 in k17994 in k17991 in k17468 in k17465 in k17462 in k17459 in k17456 in k17453 in k17450 in k17447 in k17444 in k17441 in k17438 in k17435 in k17432 in k17429 in k17426 in k17423 in k17420 in k17417 in k17414 in k17411 in k17408 in k17269 in k17266 in k17263 in k17260 in k17204 in k17201 in k17198 in k17195 in k17192 in k17189 in k17186 in k17183 in k15938 in k15869 in k15676 in k15673 in k15568 in k15517 in k7924 in k7921 in k5905 in k5612 in k5609 in k5605 in k5314 in k5311 in k5308 in k5305 */
static void C_fcall f_29211(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_29211,NULL,2,t0,t1);}
t2=(C_word)C_a_i_list(&a,3,lf[725],((C_word*)t0)[5],((C_word*)((C_word*)t0)[4])[1]);
t3=C_mutate(((C_word *)((C_word*)t0)[4])+1,t2);
t4=C_mutate(((C_word *)((C_word*)t0)[3])+1,lf[730]);
t5=((C_word*)t0)[2];
f_29125(t5,t4);}

/* k29123 in k29120 in k29323 in k29111 in k29108 in k29105 in k29047 in k29035 in a29032 in k18519 in k18516 in k17994 in k17991 in k17468 in k17465 in k17462 in k17459 in k17456 in k17453 in k17450 in k17447 in k17444 in k17441 in k17438 in k17435 in k17432 in k17429 in k17426 in k17423 in k17420 in k17417 in k17414 in k17411 in k17408 in k17269 in k17266 in k17263 in k17260 in k17204 in k17201 in k17198 in k17195 in k17192 in k17189 in k17186 in k17183 in k15938 in k15869 in k15676 in k15673 in k15568 in k15517 in k7924 in k7921 in k5905 in k5612 in k5609 in k5605 in k5314 in k5311 in k5308 in k5305 */
static void C_fcall f_29125(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[15],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_29125,NULL,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_29128,a[2]=((C_word*)t0)[4],a[3]=((C_word*)t0)[5],a[4]=((C_word*)t0)[6],a[5]=((C_word*)t0)[7],tmp=(C_word)a,a+=6,tmp);
t3=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_29139,a[2]=((C_word*)t0)[3],a[3]=t2,a[4]=((C_word*)t0)[7],tmp=(C_word)a,a+=5,tmp);
t4=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_29197,a[2]=((C_word*)t0)[7],a[3]=t3,tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 369  symbol->string");
t5=*((C_word*)lf[25]+1);
((C_proc3)C_retrieve_proc(t5))(3,t5,t4,((C_word*)t0)[2]);}

/* k29195 in k29123 in k29120 in k29323 in k29111 in k29108 in k29105 in k29047 in k29035 in a29032 in k18519 in k18516 in k17994 in k17991 in k17468 in k17465 in k17462 in k17459 in k17456 in k17453 in k17450 in k17447 in k17444 in k17441 in k17438 in k17435 in k17432 in k17429 in k17426 in k17423 in k17420 in k17417 in k17414 in k17411 in k17408 in k17269 in k17266 in k17263 in k17260 in k17204 in k17201 in k17198 in k17195 in k17192 in k17189 in k17186 in k17183 in k15938 in k15869 in k15676 in k15673 in k15568 in k15517 in k7924 in k7921 in k5905 in k5612 in k5609 in k5605 in k5314 in k5311 in k5308 in k5305 */
static void C_ccall f_29197(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 369  string-append");
t2=*((C_word*)lf[141]+1);
((C_proc5)C_retrieve_proc(t2))(5,t2,((C_word*)t0)[3],((C_word*)((C_word*)t0)[2])[1],t1,lf[729]);}

/* k29137 in k29123 in k29120 in k29323 in k29111 in k29108 in k29105 in k29047 in k29035 in a29032 in k18519 in k18516 in k17994 in k17991 in k17468 in k17465 in k17462 in k17459 in k17456 in k17453 in k17450 in k17447 in k17444 in k17441 in k17438 in k17435 in k17432 in k17429 in k17426 in k17423 in k17420 in k17417 in k17414 in k17411 in k17408 in k17269 in k17266 in k17263 in k17260 in k17204 in k17201 in k17198 in k17195 in k17192 in k17189 in k17186 in k17183 in k15938 in k15869 in k15676 in k15673 in k15568 in k15517 in k7924 in k7921 in k5905 in k5612 in k5609 in k5605 in k5314 in k5311 in k5308 in k5305 */
static void C_ccall f_29139(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_29139,2,t0,t1);}
t2=C_SCHEME_UNDEFINED;
t3=(*a=C_VECTOR_TYPE|1,a[1]=t2,tmp=(C_word)a,a+=2,tmp);
t4=C_set_block_item(t3,0,(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_29141,a[2]=t3,a[3]=((C_word*)t0)[4],a[4]=((C_word)li473),tmp=(C_word)a,a+=5,tmp));
t5=((C_word*)t3)[1];
f_29141(t5,((C_word*)t0)[3],t1,((C_word*)t0)[2]);}

/* do2941 in k29137 in k29123 in k29120 in k29323 in k29111 in k29108 in k29105 in k29047 in k29035 in a29032 in k18519 in k18516 in k17994 in k17991 in k17468 in k17465 in k17462 in k17459 in k17456 in k17453 in k17450 in k17447 in k17444 in k17441 in k17438 in k17435 in k17432 in k17429 in k17426 in k17423 in k17420 in k17417 in k17414 in k17411 in k17408 in k17269 in k17266 in k17263 in k17260 in k17204 in k17201 in k17198 in k17195 in k17192 in k17189 in k17186 in k17183 in k15938 in k15869 in k15676 in k15673 in k15568 in k15517 in k7924 in k7921 in k5905 in k5612 in k5609 in k5605 in k5314 in k5311 in k5308 in k5305 */
static void C_fcall f_29141(C_word t0,C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word ab[16],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_29141,NULL,4,t0,t1,t2,t3);}
t4=(*a=C_VECTOR_TYPE|1,a[1]=t2,tmp=(C_word)a,a+=2,tmp);
if(C_truep((C_word)C_i_nullp(t3))){
t5=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_29156,a[2]=t1,a[3]=((C_word*)t0)[3],tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 369  string-append");
t6=*((C_word*)lf[141]+1);
((C_proc4)C_retrieve_proc(t6))(4,t6,t5,((C_word*)t4)[1],lf[727]);}
else{
t5=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_29160,a[2]=t1,a[3]=((C_word*)t0)[2],a[4]=t3,a[5]=t4,tmp=(C_word)a,a+=6,tmp);
t6=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_29189,a[2]=t4,a[3]=t5,tmp=(C_word)a,a+=4,tmp);
t7=(C_word)C_i_car(t3);
C_trace("ChickenBridge.scm: 369  symbol->string");
t8=*((C_word*)lf[25]+1);
((C_proc3)C_retrieve_proc(t8))(3,t8,t6,t7);}}

/* k29187 in do2941 in k29137 in k29123 in k29120 in k29323 in k29111 in k29108 in k29105 in k29047 in k29035 in a29032 in k18519 in k18516 in k17994 in k17991 in k17468 in k17465 in k17462 in k17459 in k17456 in k17453 in k17450 in k17447 in k17444 in k17441 in k17438 in k17435 in k17432 in k17429 in k17426 in k17423 in k17420 in k17417 in k17414 in k17411 in k17408 in k17269 in k17266 in k17263 in k17260 in k17204 in k17201 in k17198 in k17195 in k17192 in k17189 in k17186 in k17183 in k15938 in k15869 in k15676 in k15673 in k15568 in k15517 in k7924 in k7921 in k5905 in k5612 in k5609 in k5605 in k5314 in k5311 in k5308 in k5305 */
static void C_ccall f_29189(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 369  string-append");
t2=*((C_word*)lf[141]+1);
((C_proc4)C_retrieve_proc(t2))(4,t2,((C_word*)t0)[3],((C_word*)((C_word*)t0)[2])[1],t1);}

/* k29158 in do2941 in k29137 in k29123 in k29120 in k29323 in k29111 in k29108 in k29105 in k29047 in k29035 in a29032 in k18519 in k18516 in k17994 in k17991 in k17468 in k17465 in k17462 in k17459 in k17456 in k17453 in k17450 in k17447 in k17444 in k17441 in k17438 in k17435 in k17432 in k17429 in k17426 in k17423 in k17420 in k17417 in k17414 in k17411 in k17408 in k17269 in k17266 in k17263 in k17260 in k17204 in k17201 in k17198 in k17195 in k17192 in k17189 in k17186 in k17183 in k15938 in k15869 in k15676 in k15673 in k15568 in k15517 in k7924 in k7921 in k5905 in k5612 in k5609 in k5605 in k5314 in k5311 in k5308 in k5305 */
static void C_ccall f_29160(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[10],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_29160,2,t0,t1);}
t2=C_mutate(((C_word *)((C_word*)t0)[5])+1,t1);
t3=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_29163,a[2]=((C_word*)t0)[5],a[3]=((C_word*)t0)[2],a[4]=((C_word*)t0)[3],a[5]=((C_word*)t0)[4],tmp=(C_word)a,a+=6,tmp);
t4=(C_word)C_i_cdr(((C_word*)t0)[4]);
if(C_truep((C_word)C_i_nullp(t4))){
t5=t3;
f_29163(t5,C_SCHEME_UNDEFINED);}
else{
t5=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_29177,a[2]=t3,a[3]=((C_word*)t0)[5],tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 369  string-append");
t6=*((C_word*)lf[141]+1);
((C_proc4)C_retrieve_proc(t6))(4,t6,t5,((C_word*)((C_word*)t0)[5])[1],lf[728]);}}

/* k29175 in k29158 in do2941 in k29137 in k29123 in k29120 in k29323 in k29111 in k29108 in k29105 in k29047 in k29035 in a29032 in k18519 in k18516 in k17994 in k17991 in k17468 in k17465 in k17462 in k17459 in k17456 in k17453 in k17450 in k17447 in k17444 in k17441 in k17438 in k17435 in k17432 in k17429 in k17426 in k17423 in k17420 in k17417 in k17414 in k17411 in k17408 in k17269 in k17266 in k17263 in k17260 in k17204 in k17201 in k17198 in k17195 in k17192 in k17189 in k17186 in k17183 in k15938 in k15869 in k15676 in k15673 in k15568 in k15517 in k7924 in k7921 in k5905 in k5612 in k5609 in k5605 in k5314 in k5311 in k5308 in k5305 */
static void C_ccall f_29177(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[3])+1,t1);
t3=((C_word*)t0)[2];
f_29163(t3,t2);}

/* k29161 in k29158 in do2941 in k29137 in k29123 in k29120 in k29323 in k29111 in k29108 in k29105 in k29047 in k29035 in a29032 in k18519 in k18516 in k17994 in k17991 in k17468 in k17465 in k17462 in k17459 in k17456 in k17453 in k17450 in k17447 in k17444 in k17441 in k17438 in k17435 in k17432 in k17429 in k17426 in k17423 in k17420 in k17417 in k17414 in k17411 in k17408 in k17269 in k17266 in k17263 in k17260 in k17204 in k17201 in k17198 in k17195 in k17192 in k17189 in k17186 in k17183 in k15938 in k15869 in k15676 in k15673 in k15568 in k15517 in k7924 in k7921 in k5905 in k5612 in k5609 in k5605 in k5314 in k5311 in k5308 in k5305 */
static void C_fcall f_29163(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word *a;
t2=(C_word)C_i_cdr(((C_word*)t0)[5]);
t3=((C_word*)((C_word*)t0)[4])[1];
f_29141(t3,((C_word*)t0)[3],((C_word*)((C_word*)t0)[2])[1],t2);}

/* k29154 in do2941 in k29137 in k29123 in k29120 in k29323 in k29111 in k29108 in k29105 in k29047 in k29035 in a29032 in k18519 in k18516 in k17994 in k17991 in k17468 in k17465 in k17462 in k17459 in k17456 in k17453 in k17450 in k17447 in k17444 in k17441 in k17438 in k17435 in k17432 in k17429 in k17426 in k17423 in k17420 in k17417 in k17414 in k17411 in k17408 in k17269 in k17266 in k17263 in k17260 in k17204 in k17201 in k17198 in k17195 in k17192 in k17189 in k17186 in k17183 in k15938 in k15869 in k15676 in k15673 in k15568 in k15517 in k7924 in k7921 in k5905 in k5612 in k5609 in k5605 in k5314 in k5311 in k5308 in k5305 */
static void C_ccall f_29156(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[6],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_29156,2,t0,t1);}
t2=(C_word)C_a_i_list(&a,2,lf[360],t1);
t3=C_mutate(((C_word *)((C_word*)t0)[3])+1,t2);
t4=((C_word*)t0)[2];
((C_proc2)(void*)(*((C_word*)t4+1)))(2,t4,t3);}

/* k29126 in k29123 in k29120 in k29323 in k29111 in k29108 in k29105 in k29047 in k29035 in a29032 in k18519 in k18516 in k17994 in k17991 in k17468 in k17465 in k17462 in k17459 in k17456 in k17453 in k17450 in k17447 in k17444 in k17441 in k17438 in k17435 in k17432 in k17429 in k17426 in k17423 in k17420 in k17417 in k17414 in k17411 in k17408 in k17269 in k17266 in k17263 in k17260 in k17204 in k17201 in k17198 in k17195 in k17192 in k17189 in k17186 in k17183 in k15938 in k15869 in k15676 in k15673 in k15568 in k15517 in k7924 in k7921 in k5905 in k5612 in k5609 in k5605 in k5314 in k5311 in k5308 in k5305 */
static void C_ccall f_29128(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[6],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_29128,2,t0,t1);}
t2=(C_word)C_a_i_list(&a,2,((C_word*)((C_word*)t0)[5])[1],((C_word*)((C_word*)t0)[4])[1]);
t3=((C_word*)t0)[3];
f_29046(2,t3,(C_word)C_i_set_cdr(((C_word*)t0)[2],t2));}

/* do2915 in k29047 in k29035 in a29032 in k18519 in k18516 in k17994 in k17991 in k17468 in k17465 in k17462 in k17459 in k17456 in k17453 in k17450 in k17447 in k17444 in k17441 in k17438 in k17435 in k17432 in k17429 in k17426 in k17423 in k17420 in k17417 in k17414 in k17411 in k17408 in k17269 in k17266 in k17263 in k17260 in k17204 in k17201 in k17198 in k17195 in k17192 in k17189 in k17186 in k17183 in k15938 in k15869 in k15676 in k15673 in k15568 in k15517 in k7924 in k7921 in k5905 in k5612 in k5609 in k5605 in k5314 in k5311 in k5308 in k5305 */
static void C_fcall f_29058(C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word t5;
C_word ab[6],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_29058,NULL,3,t0,t1,t2);}
if(C_truep((C_word)C_i_nullp(t2))){
t3=t1;
((C_proc2)(void*)(*((C_word*)t3+1)))(2,t3,C_SCHEME_FALSE);}
else{
t3=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_29068,a[2]=t1,a[3]=((C_word*)t0)[4],a[4]=t2,a[5]=((C_word*)t0)[5],tmp=(C_word)a,a+=6,tmp);
t4=(C_word)C_i_car(t2);
C_trace("ChickenBridge.scm: 369  emit");
f_16030(t3,t4,((C_word*)((C_word*)t0)[3])[1],((C_word*)t0)[2]);}}

/* k29066 in do2915 in k29047 in k29035 in a29032 in k18519 in k18516 in k17994 in k17991 in k17468 in k17465 in k17462 in k17459 in k17456 in k17453 in k17450 in k17447 in k17444 in k17441 in k17438 in k17435 in k17432 in k17429 in k17426 in k17423 in k17420 in k17417 in k17414 in k17411 in k17408 in k17269 in k17266 in k17263 in k17260 in k17204 in k17201 in k17198 in k17195 in k17192 in k17189 in k17186 in k17183 in k15938 in k15869 in k15676 in k15673 in k15568 in k15517 in k7924 in k7921 in k5905 in k5612 in k5609 in k5605 in k5314 in k5311 in k5308 in k5305 */
static void C_ccall f_29068(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[8],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_29068,2,t0,t1);}
t2=(C_word)C_i_car(t1);
t3=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_29074,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=t2,a[7]=t1,tmp=(C_word)a,a+=8,tmp);
C_trace("ChickenBridge.scm: 369  sprintf");
t4=C_retrieve(lf[31]);
((C_proc4)C_retrieve_proc(t4))(4,t4,t3,lf[726],t2);}

/* k29072 in k29066 in do2915 in k29047 in k29035 in a29032 in k18519 in k18516 in k17994 in k17991 in k17468 in k17465 in k17462 in k17459 in k17456 in k17453 in k17450 in k17447 in k17444 in k17441 in k17438 in k17435 in k17432 in k17429 in k17426 in k17423 in k17420 in k17417 in k17414 in k17411 in k17408 in k17269 in k17266 in k17263 in k17260 in k17204 in k17201 in k17198 in k17195 in k17192 in k17189 in k17186 in k17183 in k15938 in k15869 in k15676 in k15673 in k15568 in k15517 in k7924 in k7921 in k5905 in k5612 in k5609 in k5605 in k5314 in k5311 in k5308 in k5305 */
static void C_ccall f_29074(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word ab[18],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_29074,2,t0,t1);}
t2=(C_word)C_a_i_cons(&a,2,lf[725],((C_word*)t0)[7]);
t3=(C_word)C_a_i_list(&a,3,lf[359],t1,((C_word*)t0)[6]);
t4=(C_word)C_a_i_list(&a,2,t2,t3);
t5=(C_word)C_i_set_cdr(((C_word*)((C_word*)t0)[5])[1],t4);
t6=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[5])[1]);
t7=C_mutate(((C_word *)((C_word*)t0)[5])+1,t6);
t8=(C_word)C_i_cdr(((C_word*)t0)[4]);
t9=((C_word*)((C_word*)t0)[3])[1];
f_29058(t9,((C_word*)t0)[2],t8);}

/* k29044 in k29035 in a29032 in k18519 in k18516 in k17994 in k17991 in k17468 in k17465 in k17462 in k17459 in k17456 in k17453 in k17450 in k17447 in k17444 in k17441 in k17438 in k17435 in k17432 in k17429 in k17426 in k17423 in k17420 in k17417 in k17414 in k17411 in k17408 in k17269 in k17266 in k17263 in k17260 in k17204 in k17201 in k17198 in k17195 in k17192 in k17189 in k17186 in k17183 in k15938 in k15869 in k15676 in k15673 in k15568 in k15517 in k7924 in k7921 in k5905 in k5612 in k5609 in k5605 in k5314 in k5311 in k5308 in k5305 */
static void C_ccall f_29046(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
t2=((C_word*)t0)[3];
((C_proc2)(void*)(*((C_word*)t2+1)))(2,t2,((C_word*)t0)[2]);}

/* a28993 in k18519 in k18516 in k17994 in k17991 in k17468 in k17465 in k17462 in k17459 in k17456 in k17453 in k17450 in k17447 in k17444 in k17441 in k17438 in k17435 in k17432 in k17429 in k17426 in k17423 in k17420 in k17417 in k17414 in k17411 in k17408 in k17269 in k17266 in k17263 in k17260 in k17204 in k17201 in k17198 in k17195 in k17192 in k17189 in k17186 in k17183 in k15938 in k15869 in k15676 in k15673 in k15568 in k15517 in k7924 in k7921 in k5905 in k5612 in k5609 in k5605 in k5314 in k5311 in k5308 in k5305 */
static void C_ccall f_28994(C_word c,C_word t0,C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word ab[11],*a=ab;
if(c!=4) C_bad_argc_2(c,4,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr4,(void*)f_28994,4,t0,t1,t2,t3);}
t4=(*a=C_VECTOR_TYPE|1,a[1]=t2,tmp=(C_word)a,a+=2,tmp);
t5=(C_word)C_i_cadr(((C_word*)t4)[1]);
t6=C_set_block_item(t4,0,t5);
t7=(C_word)C_i_car(((C_word*)t4)[1]);
t8=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_29005,a[2]=t4,a[3]=t1,tmp=(C_word)a,a+=4,tmp);
t9=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_29011,a[2]=t8,a[3]=t7,a[4]=t4,tmp=(C_word)a,a+=5,tmp);
C_trace("ChickenBridge.scm: 369  token-unit-type=?");
f_15958(t9,t7,C_fix(24576));}

/* k29009 in a28993 in k18519 in k18516 in k17994 in k17991 in k17468 in k17465 in k17462 in k17459 in k17456 in k17453 in k17450 in k17447 in k17444 in k17441 in k17438 in k17435 in k17432 in k17429 in k17426 in k17423 in k17420 in k17417 in k17414 in k17411 in k17408 in k17269 in k17266 in k17263 in k17260 in k17204 in k17201 in k17198 in k17195 in k17192 in k17189 in k17186 in k17183 in k15938 in k15869 in k15676 in k15673 in k15568 in k15517 in k7924 in k7921 in k5905 in k5612 in k5609 in k5605 in k5314 in k5311 in k5308 in k5305 */
static void C_ccall f_29011(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[6],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_29011,2,t0,t1);}
if(C_truep(t1)){
t2=(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]);
t3=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_29027,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[3],a[5]=t2,tmp=(C_word)a,a+=6,tmp);
t4=(C_word)C_i_caddr(((C_word*)((C_word*)t0)[4])[1]);
C_trace("ChickenBridge.scm: 369  remove-token-type");
f_17208(t3,t4,C_fix(256));}
else{
t2=((C_word*)t0)[2];
f_29005(t2,C_SCHEME_UNDEFINED);}}

/* k29025 in k29009 in a28993 in k18519 in k18516 in k17994 in k17991 in k17468 in k17465 in k17462 in k17459 in k17456 in k17453 in k17450 in k17447 in k17444 in k17441 in k17438 in k17435 in k17432 in k17429 in k17426 in k17423 in k17420 in k17417 in k17414 in k17411 in k17408 in k17269 in k17266 in k17263 in k17260 in k17204 in k17201 in k17198 in k17195 in k17192 in k17189 in k17186 in k17183 in k15938 in k15869 in k15676 in k15673 in k15568 in k15517 in k7924 in k7921 in k5905 in k5612 in k5609 in k5605 in k5314 in k5311 in k5308 in k5305 */
static void C_ccall f_29027(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[6],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_29027,2,t0,t1);}
t2=(C_word)C_a_i_cons(&a,2,((C_word*)t0)[5],t1);
t3=(C_word)C_a_i_cons(&a,2,((C_word*)t0)[4],t2);
t4=C_mutate(((C_word *)((C_word*)t0)[3])+1,t3);
t5=((C_word*)t0)[2];
f_29005(t5,t4);}

/* k29003 in a28993 in k18519 in k18516 in k17994 in k17991 in k17468 in k17465 in k17462 in k17459 in k17456 in k17453 in k17450 in k17447 in k17444 in k17441 in k17438 in k17435 in k17432 in k17429 in k17426 in k17423 in k17420 in k17417 in k17414 in k17411 in k17408 in k17269 in k17266 in k17263 in k17260 in k17204 in k17201 in k17198 in k17195 in k17192 in k17189 in k17186 in k17183 in k15938 in k15869 in k15676 in k15673 in k15568 in k15517 in k7924 in k7921 in k5905 in k5612 in k5609 in k5605 in k5314 in k5311 in k5308 in k5305 */
static void C_fcall f_29005(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 369  make-parse-unit");
f_15873(((C_word*)t0)[3],C_fix(36352),((C_word*)((C_word*)t0)[2])[1],C_SCHEME_FALSE);}

/* k28986 in k18519 in k18516 in k17994 in k17991 in k17468 in k17465 in k17462 in k17459 in k17456 in k17453 in k17450 in k17447 in k17444 in k17441 in k17438 in k17435 in k17432 in k17429 in k17426 in k17423 in k17420 in k17417 in k17414 in k17411 in k17408 in k17269 in k17266 in k17263 in k17260 in k17204 in k17201 in k17198 in k17195 in k17192 in k17189 in k17186 in k17183 in k15938 in k15869 in k15676 in k15673 in k15568 in k15517 in k7924 in k7921 in k5905 in k5612 in k5609 in k5605 in k5314 in k5311 in k5308 in k5305 */
static void C_ccall f_28988(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 369  hash-table-set!");
t2=C_retrieve(lf[681]);
((C_proc5)C_retrieve_proc(t2))(5,t2,((C_word*)t0)[2],C_retrieve2(lf[277],"*rules*"),C_fix(36352),t1);}

/* k18522 in k18519 in k18516 in k17994 in k17991 in k17468 in k17465 in k17462 in k17459 in k17456 in k17453 in k17450 in k17447 in k17444 in k17441 in k17438 in k17435 in k17432 in k17429 in k17426 in k17423 in k17420 in k17417 in k17414 in k17411 in k17408 in k17269 in k17266 in k17263 in k17260 in k17204 in k17201 in k17198 in k17195 in k17192 in k17189 in k17186 in k17183 in k15938 in k15869 in k15676 in k15673 in k15568 in k15517 in k7924 in k7921 in k5905 in k5612 in k5609 in k5605 in k5314 in k5311 in k5308 in k5305 */
static void C_ccall f_18524(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word t14;
C_word t15;
C_word t16;
C_word t17;
C_word t18;
C_word t19;
C_word t20;
C_word t21;
C_word ab[57],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_18524,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_18527,a[2]=((C_word*)t0)[2],tmp=(C_word)a,a+=3,tmp);
t3=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_28912,a[2]=t2,tmp=(C_word)a,a+=3,tmp);
t4=(C_word)C_a_i_cons(&a,2,C_fix(33792),C_SCHEME_END_OF_LIST);
t5=(C_word)C_a_i_cons(&a,2,C_fix(35584),t4);
t6=(C_word)C_a_i_cons(&a,2,C_fix(35072),t5);
t7=(C_word)C_a_i_cons(&a,2,C_fix(36096),t6);
t8=(C_word)C_a_i_cons(&a,2,C_fix(34816),t7);
t9=(C_word)C_a_i_cons(&a,2,C_fix(35328),t8);
t10=(C_word)C_a_i_cons(&a,2,C_fix(31488),t9);
t11=(C_word)C_a_i_cons(&a,2,C_fix(31744),t10);
t12=(C_word)C_a_i_cons(&a,2,C_fix(32512),t11);
t13=(C_word)C_a_i_cons(&a,2,C_fix(32256),t12);
t14=(C_word)C_a_i_cons(&a,2,C_fix(30464),t13);
t15=(C_word)C_a_i_cons(&a,2,C_fix(34304),t14);
t16=(C_word)C_a_i_cons(&a,2,C_fix(34560),t15);
t17=(C_word)C_a_i_cons(&a,2,C_fix(33536),t16);
t18=(C_word)C_a_i_cons(&a,2,C_fix(32000),t17);
t19=(C_word)C_a_i_cons(&a,2,C_fix(36352),t18);
t20=(C_word)C_a_i_cons(&a,2,lf[311],t19);
C_trace("ChickenBridge.scm: 369  make-rule");
f_15572(t3,lf[724],C_fix(36608),t20,C_SCHEME_FALSE,C_SCHEME_FALSE);}

/* k28910 in k18522 in k18519 in k18516 in k17994 in k17991 in k17468 in k17465 in k17462 in k17459 in k17456 in k17453 in k17450 in k17447 in k17444 in k17441 in k17438 in k17435 in k17432 in k17429 in k17426 in k17423 in k17420 in k17417 in k17414 in k17411 in k17408 in k17269 in k17266 in k17263 in k17260 in k17204 in k17201 in k17198 in k17195 in k17192 in k17189 in k17186 in k17183 in k15938 in k15869 in k15676 in k15673 in k15568 in k15517 in k7924 in k7921 in k5905 in k5612 in k5609 in k5605 in k5314 in k5311 in k5308 in k5305 */
static void C_ccall f_28912(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 369  hash-table-set!");
t2=C_retrieve(lf[681]);
((C_proc5)C_retrieve_proc(t2))(5,t2,((C_word*)t0)[2],C_retrieve2(lf[277],"*rules*"),C_fix(36608),t1);}

/* k18525 in k18522 in k18519 in k18516 in k17994 in k17991 in k17468 in k17465 in k17462 in k17459 in k17456 in k17453 in k17450 in k17447 in k17444 in k17441 in k17438 in k17435 in k17432 in k17429 in k17426 in k17423 in k17420 in k17417 in k17414 in k17411 in k17408 in k17269 in k17266 in k17263 in k17260 in k17204 in k17201 in k17198 in k17195 in k17192 in k17189 in k17186 in k17183 in k15938 in k15869 in k15676 in k15673 in k15568 in k15517 in k7924 in k7921 in k5905 in k5612 in k5609 in k5605 in k5314 in k5311 in k5308 in k5305 */
static void C_ccall f_18527(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word ab[18],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_18527,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_18530,a[2]=((C_word*)t0)[2],tmp=(C_word)a,a+=3,tmp);
t3=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_28868,a[2]=t2,tmp=(C_word)a,a+=3,tmp);
t4=(C_word)C_a_i_cons(&a,2,C_fix(36608),C_SCHEME_END_OF_LIST);
t5=(C_word)C_a_i_cons(&a,2,lf[91],t4);
t6=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_28874,a[2]=((C_word)li469),tmp=(C_word)a,a+=3,tmp);
t7=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_28888,a[2]=((C_word)li470),tmp=(C_word)a,a+=3,tmp);
C_trace("ChickenBridge.scm: 369  make-rule");
f_15572(t3,lf[723],C_fix(36864),t5,t6,t7);}

/* a28887 in k18525 in k18522 in k18519 in k18516 in k17994 in k17991 in k17468 in k17465 in k17462 in k17459 in k17456 in k17453 in k17450 in k17447 in k17444 in k17441 in k17438 in k17435 in k17432 in k17429 in k17426 in k17423 in k17420 in k17417 in k17414 in k17411 in k17408 in k17269 in k17266 in k17263 in k17260 in k17204 in k17201 in k17198 in k17195 in k17192 in k17189 in k17186 in k17183 in k15938 in k15869 in k15676 in k15673 in k15568 in k15517 in k7924 in k7921 in k5905 in k5612 in k5609 in k5605 in k5314 in k5311 in k5308 in k5305 */
static void C_ccall f_28888(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4){
C_word tmp;
C_word t5;
C_word t6;
C_word t7;
C_word ab[8],*a=ab;
if(c!=5) C_bad_argc_2(c,5,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr5,(void*)f_28888,5,t0,t1,t2,t3,t4);}
t5=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_28896,a[2]=t1,tmp=(C_word)a,a+=3,tmp);
t6=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_28900,a[2]=t4,a[3]=t3,a[4]=t5,tmp=(C_word)a,a+=5,tmp);
C_trace("ChickenBridge.scm: 369  parse-unit-parsed");
f_15912(t6,t2);}

/* k28898 in a28887 in k18525 in k18522 in k18519 in k18516 in k17994 in k17991 in k17468 in k17465 in k17462 in k17459 in k17456 in k17453 in k17450 in k17447 in k17444 in k17441 in k17438 in k17435 in k17432 in k17429 in k17426 in k17423 in k17420 in k17417 in k17414 in k17411 in k17408 in k17269 in k17266 in k17263 in k17260 in k17204 in k17201 in k17198 in k17195 in k17192 in k17189 in k17186 in k17183 in k15938 in k15869 in k15676 in k15673 in k15568 in k15517 in k7924 in k7921 in k5905 in k5612 in k5609 in k5605 in k5314 in k5311 in k5308 in k5305 */
static void C_ccall f_28900(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 369  emit");
f_16030(((C_word*)t0)[4],t1,((C_word*)t0)[3],((C_word*)t0)[2]);}

/* k28894 in a28887 in k18525 in k18522 in k18519 in k18516 in k17994 in k17991 in k17468 in k17465 in k17462 in k17459 in k17456 in k17453 in k17450 in k17447 in k17444 in k17441 in k17438 in k17435 in k17432 in k17429 in k17426 in k17423 in k17420 in k17417 in k17414 in k17411 in k17408 in k17269 in k17266 in k17263 in k17260 in k17204 in k17201 in k17198 in k17195 in k17192 in k17189 in k17186 in k17183 in k15938 in k15869 in k15676 in k15673 in k15568 in k15517 in k7924 in k7921 in k5905 in k5612 in k5609 in k5605 in k5314 in k5311 in k5308 in k5305 */
static void C_ccall f_28896(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word ab[3],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_28896,2,t0,t1);}
t2=((C_word*)t0)[2];
((C_proc2)(void*)(*((C_word*)t2+1)))(2,t2,(C_word)C_a_i_cons(&a,2,lf[336],t1));}

/* a28873 in k18525 in k18522 in k18519 in k18516 in k17994 in k17991 in k17468 in k17465 in k17462 in k17459 in k17456 in k17453 in k17450 in k17447 in k17444 in k17441 in k17438 in k17435 in k17432 in k17429 in k17426 in k17423 in k17420 in k17417 in k17414 in k17411 in k17408 in k17269 in k17266 in k17263 in k17260 in k17204 in k17201 in k17198 in k17195 in k17192 in k17189 in k17186 in k17183 in k15938 in k15869 in k15676 in k15673 in k15568 in k15517 in k7924 in k7921 in k5905 in k5612 in k5609 in k5605 in k5314 in k5311 in k5308 in k5305 */
static void C_ccall f_28874(C_word c,C_word t0,C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word t6;
C_word ab[4],*a=ab;
if(c!=4) C_bad_argc_2(c,4,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr4,(void*)f_28874,4,t0,t1,t2,t3);}
t4=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_28882,a[2]=t2,a[3]=t1,tmp=(C_word)a,a+=4,tmp);
t5=(C_word)C_i_car(t2);
C_trace("ChickenBridge.scm: 369  parse-unit-position");
f_15930(t4,t5);}

/* k28880 in a28873 in k18525 in k18522 in k18519 in k18516 in k17994 in k17991 in k17468 in k17465 in k17462 in k17459 in k17456 in k17453 in k17450 in k17447 in k17444 in k17441 in k17438 in k17435 in k17432 in k17429 in k17426 in k17423 in k17420 in k17417 in k17414 in k17411 in k17408 in k17269 in k17266 in k17263 in k17260 in k17204 in k17201 in k17198 in k17195 in k17192 in k17189 in k17186 in k17183 in k15938 in k15869 in k15676 in k15673 in k15568 in k15517 in k7924 in k7921 in k5905 in k5612 in k5609 in k5605 in k5314 in k5311 in k5308 in k5305 */
static void C_ccall f_28882(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 369  make-parse-unit");
f_15873(((C_word*)t0)[3],C_fix(36864),((C_word*)t0)[2],t1);}

/* k28866 in k18525 in k18522 in k18519 in k18516 in k17994 in k17991 in k17468 in k17465 in k17462 in k17459 in k17456 in k17453 in k17450 in k17447 in k17444 in k17441 in k17438 in k17435 in k17432 in k17429 in k17426 in k17423 in k17420 in k17417 in k17414 in k17411 in k17408 in k17269 in k17266 in k17263 in k17260 in k17204 in k17201 in k17198 in k17195 in k17192 in k17189 in k17186 in k17183 in k15938 in k15869 in k15676 in k15673 in k15568 in k15517 in k7924 in k7921 in k5905 in k5612 in k5609 in k5605 in k5314 in k5311 in k5308 in k5305 */
static void C_ccall f_28868(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 369  hash-table-set!");
t2=C_retrieve(lf[681]);
((C_proc5)C_retrieve_proc(t2))(5,t2,((C_word*)t0)[2],C_retrieve2(lf[277],"*rules*"),C_fix(36864),t1);}

/* k18528 in k18525 in k18522 in k18519 in k18516 in k17994 in k17991 in k17468 in k17465 in k17462 in k17459 in k17456 in k17453 in k17450 in k17447 in k17444 in k17441 in k17438 in k17435 in k17432 in k17429 in k17426 in k17423 in k17420 in k17417 in k17414 in k17411 in k17408 in k17269 in k17266 in k17263 in k17260 in k17204 in k17201 in k17198 in k17195 in k17192 in k17189 in k17186 in k17183 in k15938 in k15869 in k15676 in k15673 in k15568 in k15517 in k7924 in k7921 in k5905 in k5612 in k5609 in k5605 in k5314 in k5311 in k5308 in k5305 */
static void C_ccall f_18530(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word ab[24],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_18530,2,t0,t1);}
t2=lf[345]=C_SCHEME_FALSE;;
t3=lf[346]=C_SCHEME_FALSE;;
t4=lf[347]=C_SCHEME_FALSE;;
t5=C_mutate((C_word*)lf[348]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_18536,a[2]=((C_word)li267),tmp=(C_word)a,a+=3,tmp));
t6=C_mutate((C_word*)lf[359]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_18707,a[2]=((C_word)li271),tmp=(C_word)a,a+=3,tmp));
t7=C_mutate((C_word*)lf[369]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_18860,a[2]=((C_word)li272),tmp=(C_word)a,a+=3,tmp));
t8=C_mutate((C_word*)lf[370]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_18869,a[2]=((C_word)li273),tmp=(C_word)a,a+=3,tmp));
t9=C_mutate((C_word*)lf[378]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_18916,a[2]=((C_word)li274),tmp=(C_word)a,a+=3,tmp));
t10=C_mutate((C_word*)lf[380]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_18922,a[2]=((C_word)li275),tmp=(C_word)a,a+=3,tmp));
t11=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_18941,a[2]=((C_word*)t0)[2],tmp=(C_word)a,a+=3,tmp);
t12=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_28860,a[2]=((C_word)li468),tmp=(C_word)a,a+=3,tmp);
C_trace("ChickenBridge.scm: 370  ##sys#register-macro-2");
t13=C_retrieve(lf[714]);
((C_proc4)C_retrieve_proc(t13))(4,t13,t11,lf[721],t12);}

/* a28859 in k18528 in k18525 in k18522 in k18519 in k18516 in k17994 in k17991 in k17468 in k17465 in k17462 in k17459 in k17456 in k17453 in k17450 in k17447 in k17444 in k17441 in k17438 in k17435 in k17432 in k17429 in k17426 in k17423 in k17420 in k17417 in k17414 in k17411 in k17408 in k17269 in k17266 in k17263 in k17260 in k17204 in k17201 in k17198 in k17195 in k17192 in k17189 in k17186 in k17183 in k15938 in k15869 in k15676 in k15673 in k15568 in k15517 in k7924 in k7921 in k5905 in k5612 in k5609 in k5605 in k5314 in k5311 in k5308 in k5305 */
static void C_ccall f_28860(C_word c,C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word ab[4],*a=ab;
if(c!=3) C_bad_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr3,(void*)f_28860,3,t0,t1,t2);}
t3=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_22294,a[2]=t2,a[3]=t1,tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 370  gensym");
t4=C_retrieve(lf[26]);
((C_proc3)C_retrieve_proc(t4))(3,t4,t3,lf[722]);}

/* k22292 in a28859 in k18528 in k18525 in k18522 in k18519 in k18516 in k17994 in k17991 in k17468 in k17465 in k17462 in k17459 in k17456 in k17453 in k17450 in k17447 in k17444 in k17441 in k17438 in k17435 in k17432 in k17429 in k17426 in k17423 in k17420 in k17417 in k17414 in k17411 in k17408 in k17269 in k17266 in k17263 in k17260 in k17204 in k17201 in k17198 in k17195 in k17192 in k17189 in k17186 in k17183 in k15938 in k15869 in k15676 in k15673 in k15568 in k15517 in k7924 in k7921 in k5905 in k5612 in k5609 in k5605 in k5314 in k5311 in k5308 in k5305 */
static void C_ccall f_22294(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[4],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_22294,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_22297,a[2]=t1,a[3]=((C_word*)t0)[3],tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 370  parse-iteration");
f_22276(t2,lf[721],((C_word*)t0)[2],C_retrieve2(lf[575],"*loop-operators*"));}

/* k22295 in k22292 in a28859 in k18528 in k18525 in k18522 in k18519 in k18516 in k17994 in k17991 in k17468 in k17465 in k17462 in k17459 in k17456 in k17453 in k17450 in k17447 in k17444 in k17441 in k17438 in k17435 in k17432 in k17429 in k17426 in k17423 in k17420 in k17417 in k17414 in k17411 in k17408 in k17269 in k17266 in k17263 in k17260 in k17204 in k17201 in k17198 in k17195 in k17192 in k17189 in k17186 in k17183 in k15938 in k15869 in k15676 in k15673 in k15568 in k15517 in k7924 in k7921 in k5905 in k5612 in k5609 in k5605 in k5314 in k5311 in k5308 in k5305 */
static void C_ccall f_22297(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word ab[19],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_22297,2,t0,t1);}
t2=C_SCHEME_END_OF_LIST;
t3=(*a=C_VECTOR_TYPE|1,a[1]=t2,tmp=(C_word)a,a+=2,tmp);
t4=C_SCHEME_FALSE;
t5=(*a=C_VECTOR_TYPE|1,a[1]=t4,tmp=(C_word)a,a+=2,tmp);
t6=(C_word)C_i_assoc(lf[537],C_retrieve2(lf[575],"*loop-operators*"));
t7=(C_word)C_i_cadddr(t6);
t8=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_22304,a[2]=t1,a[3]=((C_word*)t0)[2],a[4]=((C_word*)t0)[3],a[5]=t3,a[6]=t5,tmp=(C_word)a,a+=7,tmp);
t9=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_22449,a[2]=t8,a[3]=t7,tmp=(C_word)a,a+=4,tmp);
t10=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_22463,a[2]=t1,a[3]=t9,tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 370  loop-returning");
t11=C_retrieve2(lf[391],"loop-returning");
f_19048(3,t11,t10,t1);}

/* k22461 in k22295 in k22292 in a28859 in k18528 in k18525 in k18522 in k18519 in k18516 in k17994 in k17991 in k17468 in k17465 in k17462 in k17459 in k17456 in k17453 in k17450 in k17447 in k17444 in k17441 in k17438 in k17435 in k17432 in k17429 in k17426 in k17423 in k17420 in k17417 in k17414 in k17411 in k17408 in k17269 in k17266 in k17263 in k17260 in k17204 in k17201 in k17198 in k17195 in k17192 in k17189 in k17186 in k17183 in k15938 in k15869 in k15676 in k15673 in k15568 in k15517 in k7924 in k7921 in k5905 in k5612 in k5609 in k5605 in k5314 in k5311 in k5308 in k5305 */
static void C_ccall f_22463(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[3],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_22463,2,t0,t1);}
if(C_truep((C_word)C_i_nullp(t1))){
t2=((C_word*)t0)[3];
f_22449(t2,C_SCHEME_FALSE);}
else{
t2=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_22459,a[2]=((C_word*)t0)[3],tmp=(C_word)a,a+=3,tmp);
C_trace("ChickenBridge.scm: 370  loop-returning");
t3=C_retrieve2(lf[391],"loop-returning");
f_19048(3,t3,t2,((C_word*)t0)[2]);}}

/* k22457 in k22461 in k22295 in k22292 in a28859 in k18528 in k18525 in k18522 in k18519 in k18516 in k17994 in k17991 in k17468 in k17465 in k17462 in k17459 in k17456 in k17453 in k17450 in k17447 in k17444 in k17441 in k17438 in k17435 in k17432 in k17429 in k17426 in k17423 in k17420 in k17417 in k17414 in k17411 in k17408 in k17269 in k17266 in k17263 in k17260 in k17204 in k17201 in k17198 in k17195 in k17192 in k17189 in k17186 in k17183 in k15938 in k15869 in k15676 in k15673 in k15568 in k15517 in k7924 in k7921 in k5905 in k5612 in k5609 in k5605 in k5314 in k5311 in k5308 in k5305 */
static void C_ccall f_22459(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
t2=((C_word*)t0)[2];
f_22449(t2,(C_word)C_i_car(t1));}

/* k22447 in k22295 in k22292 in a28859 in k18528 in k18525 in k18522 in k18519 in k18516 in k17994 in k17991 in k17468 in k17465 in k17462 in k17459 in k17456 in k17453 in k17450 in k17447 in k17444 in k17441 in k17438 in k17435 in k17432 in k17429 in k17426 in k17423 in k17420 in k17417 in k17414 in k17411 in k17408 in k17269 in k17266 in k17263 in k17260 in k17204 in k17201 in k17198 in k17195 in k17192 in k17189 in k17186 in k17183 in k15938 in k15869 in k15676 in k15673 in k15568 in k15517 in k7924 in k7921 in k5905 in k5612 in k5609 in k5605 in k5314 in k5311 in k5308 in k5305 */
static void C_fcall f_22449(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 370  returnfn");
t2=((C_word*)t0)[3];
((C_proc3)C_retrieve_proc(t2))(3,t2,((C_word*)t0)[2],t1);}

/* k22302 in k22295 in k22292 in a28859 in k18528 in k18525 in k18522 in k18519 in k18516 in k17994 in k17991 in k17468 in k17465 in k17462 in k17459 in k17456 in k17453 in k17450 in k17447 in k17444 in k17441 in k17438 in k17435 in k17432 in k17429 in k17426 in k17423 in k17420 in k17417 in k17414 in k17411 in k17408 in k17269 in k17266 in k17263 in k17260 in k17204 in k17201 in k17198 in k17195 in k17192 in k17189 in k17186 in k17183 in k15938 in k15869 in k15676 in k15673 in k15568 in k15517 in k7924 in k7921 in k5905 in k5612 in k5609 in k5605 in k5314 in k5311 in k5308 in k5305 */
static void C_ccall f_22304(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_22304,2,t0,t1);}
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_22308,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[6],a[4]=((C_word*)t0)[3],a[5]=((C_word*)t0)[4],a[6]=((C_word*)t0)[5],tmp=(C_word)a,a+=7,tmp);
C_trace("ChickenBridge.scm: 370  loop-end-tests");
t4=C_retrieve2(lf[386],"loop-end-tests");
f_19000(3,t4,t3,((C_word*)t0)[2]);}

/* k22306 in k22302 in k22295 in k22292 in a28859 in k18528 in k18525 in k18522 in k18519 in k18516 in k17994 in k17991 in k17468 in k17465 in k17462 in k17459 in k17456 in k17453 in k17450 in k17447 in k17444 in k17441 in k17438 in k17435 in k17432 in k17429 in k17426 in k17423 in k17420 in k17417 in k17414 in k17411 in k17408 in k17269 in k17266 in k17263 in k17260 in k17204 in k17201 in k17198 in k17195 in k17192 in k17189 in k17186 in k17183 in k15938 in k15869 in k15676 in k15673 in k15568 in k15517 in k7924 in k7921 in k5905 in k5612 in k5609 in k5605 in k5314 in k5311 in k5308 in k5305 */
static void C_ccall f_22308(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word ab[25],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_22308,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_22311,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],tmp=(C_word)a,a+=7,tmp);
if(C_truep((C_word)C_i_nullp(t1))){
t3=t2;
f_22311(t3,C_SCHEME_END_OF_LIST);}
else{
t3=(C_word)C_i_cdr(t1);
t4=(C_word)C_i_nullp(t3);
t5=(C_truep(t4)?(C_word)C_i_car(t1):(C_word)C_a_i_cons(&a,2,lf[311],t1));
t6=(C_word)C_a_i_list(&a,4,lf[20],t5,lf[720],C_SCHEME_FALSE);
t7=t2;
f_22311(t7,(C_word)C_a_i_list(&a,1,t6));}}

/* k22309 in k22306 in k22302 in k22295 in k22292 in a28859 in k18528 in k18525 in k18522 in k18519 in k18516 in k17994 in k17991 in k17468 in k17465 in k17462 in k17459 in k17456 in k17453 in k17450 in k17447 in k17444 in k17441 in k17438 in k17435 in k17432 in k17429 in k17426 in k17423 in k17420 in k17417 in k17414 in k17411 in k17408 in k17269 in k17266 in k17263 in k17260 in k17204 in k17201 in k17198 in k17195 in k17192 in k17189 in k17186 in k17183 in k15938 in k15869 in k15676 in k15673 in k15568 in k15517 in k7924 in k7921 in k5905 in k5612 in k5609 in k5605 in k5314 in k5311 in k5308 in k5305 */
static void C_fcall f_22311(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_22311,NULL,2,t0,t1);}
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_22322,a[2]=((C_word*)t0)[6],a[3]=((C_word*)t0)[2],a[4]=((C_word*)t0)[3],a[5]=((C_word*)t0)[4],a[6]=((C_word*)t0)[5],tmp=(C_word)a,a+=7,tmp);
C_trace("ChickenBridge.scm: 370  loop-bindings");
t4=C_retrieve2(lf[383],"loop-bindings");
f_18964(3,t4,t3,((C_word*)t0)[2]);}

/* k22320 in k22309 in k22306 in k22302 in k22295 in k22292 in a28859 in k18528 in k18525 in k18522 in k18519 in k18516 in k17994 in k17991 in k17468 in k17465 in k17462 in k17459 in k17456 in k17453 in k17450 in k17447 in k17444 in k17441 in k17438 in k17435 in k17432 in k17429 in k17426 in k17423 in k17420 in k17417 in k17414 in k17411 in k17408 in k17269 in k17266 in k17263 in k17260 in k17204 in k17201 in k17198 in k17195 in k17192 in k17189 in k17186 in k17183 in k15938 in k15869 in k15676 in k15673 in k15568 in k15517 in k7924 in k7921 in k5905 in k5612 in k5609 in k5605 in k5314 in k5311 in k5308 in k5305 */
static void C_ccall f_22322(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[11],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_22322,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_22326,a[2]=((C_word*)t0)[6],a[3]=t1,tmp=(C_word)a,a+=4,tmp);
t3=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_22330,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=t2,a[6]=((C_word*)t0)[5],tmp=(C_word)a,a+=7,tmp);
C_trace("ChickenBridge.scm: 370  loop-initially");
t4=C_retrieve2(lf[385],"loop-initially");
f_18988(3,t4,t3,((C_word*)t0)[3]);}

/* k22328 in k22320 in k22309 in k22306 in k22302 in k22295 in k22292 in a28859 in k18528 in k18525 in k18522 in k18519 in k18516 in k17994 in k17991 in k17468 in k17465 in k17462 in k17459 in k17456 in k17453 in k17450 in k17447 in k17444 in k17441 in k17438 in k17435 in k17432 in k17429 in k17426 in k17423 in k17420 in k17417 in k17414 in k17411 in k17408 in k17269 in k17266 in k17263 in k17260 in k17204 in k17201 in k17198 in k17195 in k17192 in k17189 in k17186 in k17183 in k15938 in k15869 in k15676 in k15673 in k15568 in k15517 in k7924 in k7921 in k5905 in k5612 in k5609 in k5605 in k5314 in k5311 in k5308 in k5305 */
static void C_ccall f_22330(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word ab[24],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_22330,2,t0,t1);}
t2=(C_word)C_a_i_list(&a,1,lf[537]);
t3=(C_word)C_a_i_list(&a,1,lf[680]);
t4=(*a=C_CLOSURE_TYPE|8,a[1]=(C_word)f_22394,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=t1,a[5]=((C_word*)t0)[5],a[6]=t2,a[7]=t3,a[8]=((C_word*)t0)[6],tmp=(C_word)a,a+=9,tmp);
t5=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_22398,a[2]=((C_word*)t0)[2],a[3]=t4,tmp=(C_word)a,a+=4,tmp);
t6=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_22402,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[6],a[4]=t5,tmp=(C_word)a,a+=5,tmp);
C_trace("ChickenBridge.scm: 370  loop-looping");
t7=C_retrieve2(lf[387],"loop-looping");
f_19012(3,t7,t6,((C_word*)t0)[3]);}

/* k22400 in k22328 in k22320 in k22309 in k22306 in k22302 in k22295 in k22292 in a28859 in k18528 in k18525 in k18522 in k18519 in k18516 in k17994 in k17991 in k17468 in k17465 in k17462 in k17459 in k17456 in k17453 in k17450 in k17447 in k17444 in k17441 in k17438 in k17435 in k17432 in k17429 in k17426 in k17423 in k17420 in k17417 in k17414 in k17411 in k17408 in k17269 in k17266 in k17263 in k17260 in k17204 in k17201 in k17198 in k17195 in k17192 in k17189 in k17186 in k17183 in k15938 in k15869 in k15676 in k15673 in k15568 in k15517 in k7924 in k7921 in k5905 in k5612 in k5609 in k5605 in k5314 in k5311 in k5308 in k5305 */
static void C_ccall f_22402(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[8],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_22402,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_22406,a[2]=t1,a[3]=((C_word*)t0)[4],tmp=(C_word)a,a+=4,tmp);
t3=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_22410,a[2]=t2,a[3]=((C_word*)t0)[3],tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 370  loop-stepping");
t4=C_retrieve2(lf[389],"loop-stepping");
f_19024(3,t4,t3,((C_word*)t0)[2]);}

/* k22408 in k22400 in k22328 in k22320 in k22309 in k22306 in k22302 in k22295 in k22292 in a28859 in k18528 in k18525 in k18522 in k18519 in k18516 in k17994 in k17991 in k17468 in k17465 in k17462 in k17459 in k17456 in k17453 in k17450 in k17447 in k17444 in k17441 in k17438 in k17435 in k17432 in k17429 in k17426 in k17423 in k17420 in k17417 in k17414 in k17411 in k17408 in k17269 in k17266 in k17263 in k17260 in k17204 in k17201 in k17198 in k17195 in k17192 in k17189 in k17186 in k17183 in k15938 in k15869 in k15676 in k15673 in k15568 in k15517 in k7924 in k7921 in k5905 in k5612 in k5609 in k5605 in k5314 in k5311 in k5308 in k5305 */
static void C_ccall f_22410(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[6],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_22410,2,t0,t1);}
t2=(C_word)C_a_i_list(&a,1,((C_word*)t0)[3]);
t3=(C_word)C_a_i_list(&a,1,t2);
C_trace("ChickenBridge.scm: 370  ##sys#append");
t4=*((C_word*)lf[7]+1);
((C_proc4)(void*)(*((C_word*)t4+1)))(4,t4,((C_word*)t0)[2],t1,t3);}

/* k22404 in k22400 in k22328 in k22320 in k22309 in k22306 in k22302 in k22295 in k22292 in a28859 in k18528 in k18525 in k18522 in k18519 in k18516 in k17994 in k17991 in k17468 in k17465 in k17462 in k17459 in k17456 in k17453 in k17450 in k17447 in k17444 in k17441 in k17438 in k17435 in k17432 in k17429 in k17426 in k17423 in k17420 in k17417 in k17414 in k17411 in k17408 in k17269 in k17266 in k17263 in k17260 in k17204 in k17201 in k17198 in k17195 in k17192 in k17189 in k17186 in k17183 in k15938 in k15869 in k15676 in k15673 in k15568 in k15517 in k7924 in k7921 in k5905 in k5612 in k5609 in k5605 in k5314 in k5311 in k5308 in k5305 */
static void C_ccall f_22406(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 370  ##sys#append");
t2=*((C_word*)lf[7]+1);
((C_proc4)(void*)(*((C_word*)t2+1)))(4,t2,((C_word*)t0)[3],((C_word*)t0)[2],t1);}

/* k22396 in k22328 in k22320 in k22309 in k22306 in k22302 in k22295 in k22292 in a28859 in k18528 in k18525 in k18522 in k18519 in k18516 in k17994 in k17991 in k17468 in k17465 in k17462 in k17459 in k17456 in k17453 in k17450 in k17447 in k17444 in k17441 in k17438 in k17435 in k17432 in k17429 in k17426 in k17423 in k17420 in k17417 in k17414 in k17411 in k17408 in k17269 in k17266 in k17263 in k17260 in k17204 in k17201 in k17198 in k17195 in k17192 in k17189 in k17186 in k17183 in k15938 in k15869 in k15676 in k15673 in k15568 in k15517 in k7924 in k7921 in k5905 in k5612 in k5609 in k5605 in k5314 in k5311 in k5308 in k5305 */
static void C_ccall f_22398(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 370  ##sys#append");
t2=*((C_word*)lf[7]+1);
((C_proc4)(void*)(*((C_word*)t2+1)))(4,t2,((C_word*)t0)[3],((C_word*)((C_word*)t0)[2])[1],t1);}

/* k22392 in k22328 in k22320 in k22309 in k22306 in k22302 in k22295 in k22292 in a28859 in k18528 in k18525 in k18522 in k18519 in k18516 in k17994 in k17991 in k17468 in k17465 in k17462 in k17459 in k17456 in k17453 in k17450 in k17447 in k17444 in k17441 in k17438 in k17435 in k17432 in k17429 in k17426 in k17423 in k17420 in k17417 in k17414 in k17411 in k17408 in k17269 in k17266 in k17263 in k17260 in k17204 in k17201 in k17198 in k17195 in k17192 in k17189 in k17186 in k17183 in k15938 in k15869 in k15676 in k15673 in k15568 in k15517 in k7924 in k7921 in k5905 in k5612 in k5609 in k5605 in k5314 in k5311 in k5308 in k5305 */
static void C_ccall f_22394(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word ab[34],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_22394,2,t0,t1);}
t2=(C_word)C_a_i_cons(&a,2,C_SCHEME_END_OF_LIST,t1);
t3=(C_word)C_a_i_cons(&a,2,((C_word*)t0)[8],t2);
t4=(C_word)C_a_i_cons(&a,2,lf[1],t3);
t5=(C_word)C_a_i_list(&a,3,lf[663],((C_word*)t0)[7],t4);
t6=(C_word)C_a_i_list(&a,2,lf[627],t5);
t7=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_22362,a[2]=((C_word*)t0)[4],a[3]=((C_word*)t0)[5],a[4]=((C_word*)t0)[6],a[5]=t6,tmp=(C_word)a,a+=6,tmp);
t8=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_22366,a[2]=t7,a[3]=((C_word*)t0)[3],tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 370  loop-finally");
t9=C_retrieve2(lf[390],"loop-finally");
f_19036(3,t9,t8,((C_word*)t0)[2]);}

/* k22364 in k22392 in k22328 in k22320 in k22309 in k22306 in k22302 in k22295 in k22292 in a28859 in k18528 in k18525 in k18522 in k18519 in k18516 in k17994 in k17991 in k17468 in k17465 in k17462 in k17459 in k17456 in k17453 in k17450 in k17447 in k17444 in k17441 in k17438 in k17435 in k17432 in k17429 in k17426 in k17423 in k17420 in k17417 in k17414 in k17411 in k17408 in k17269 in k17266 in k17263 in k17260 in k17204 in k17201 in k17198 in k17195 in k17192 in k17189 in k17186 in k17183 in k15938 in k15869 in k15676 in k15673 in k15568 in k15517 in k7924 in k7921 in k5905 in k5612 in k5609 in k5605 in k5314 in k5311 in k5308 in k5305 */
static void C_ccall f_22366(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[3],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_22366,2,t0,t1);}
t2=(C_word)C_a_i_list(&a,1,((C_word*)((C_word*)t0)[3])[1]);
C_trace("ChickenBridge.scm: 370  ##sys#append");
t3=*((C_word*)lf[7]+1);
((C_proc4)(void*)(*((C_word*)t3+1)))(4,t3,((C_word*)t0)[2],t1,t2);}

/* k22360 in k22392 in k22328 in k22320 in k22309 in k22306 in k22302 in k22295 in k22292 in a28859 in k18528 in k18525 in k18522 in k18519 in k18516 in k17994 in k17991 in k17468 in k17465 in k17462 in k17459 in k17456 in k17453 in k17450 in k17447 in k17444 in k17441 in k17438 in k17435 in k17432 in k17429 in k17426 in k17423 in k17420 in k17417 in k17414 in k17411 in k17408 in k17269 in k17266 in k17263 in k17260 in k17204 in k17201 in k17198 in k17195 in k17192 in k17189 in k17186 in k17183 in k15938 in k15869 in k15676 in k15673 in k15568 in k15517 in k7924 in k7921 in k5905 in k5612 in k5609 in k5605 in k5314 in k5311 in k5308 in k5305 */
static void C_ccall f_22362(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word ab[18],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_22362,2,t0,t1);}
t2=(C_word)C_a_i_cons(&a,2,((C_word*)t0)[5],t1);
t3=(C_word)C_a_i_cons(&a,2,((C_word*)t0)[4],t2);
t4=(C_word)C_a_i_cons(&a,2,lf[663],t3);
t5=(C_word)C_a_i_list(&a,2,lf[627],t4);
t6=(C_word)C_a_i_list(&a,1,t5);
C_trace("ChickenBridge.scm: 370  ##sys#append");
t7=*((C_word*)lf[7]+1);
((C_proc4)(void*)(*((C_word*)t7+1)))(4,t7,((C_word*)t0)[3],((C_word*)t0)[2],t6);}

/* k22324 in k22320 in k22309 in k22306 in k22302 in k22295 in k22292 in a28859 in k18528 in k18525 in k18522 in k18519 in k18516 in k17994 in k17991 in k17468 in k17465 in k17462 in k17459 in k17456 in k17453 in k17450 in k17447 in k17444 in k17441 in k17438 in k17435 in k17432 in k17429 in k17426 in k17423 in k17420 in k17417 in k17414 in k17411 in k17408 in k17269 in k17266 in k17263 in k17260 in k17204 in k17201 in k17198 in k17195 in k17192 in k17189 in k17186 in k17183 in k15938 in k15869 in k15676 in k15673 in k15568 in k15517 in k7924 in k7921 in k5905 in k5612 in k5609 in k5605 in k5314 in k5311 in k5308 in k5305 */
static void C_ccall f_22326(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[6],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_22326,2,t0,t1);}
t2=(C_word)C_a_i_cons(&a,2,((C_word*)t0)[3],t1);
t3=((C_word*)t0)[2];
((C_proc2)(void*)(*((C_word*)t3+1)))(2,t3,(C_word)C_a_i_cons(&a,2,lf[1],t2));}

/* k18939 in k18528 in k18525 in k18522 in k18519 in k18516 in k17994 in k17991 in k17468 in k17465 in k17462 in k17459 in k17456 in k17453 in k17450 in k17447 in k17444 in k17441 in k17438 in k17435 in k17432 in k17429 in k17426 in k17423 in k17420 in k17417 in k17414 in k17411 in k17408 in k17269 in k17266 in k17263 in k17260 in k17204 in k17201 in k17198 in k17195 in k17192 in k17189 in k17186 in k17183 in k15938 in k15869 in k15676 in k15673 in k15568 in k15517 in k7924 in k7921 in k5905 in k5612 in k5609 in k5605 in k5314 in k5311 in k5308 in k5305 */
static void C_ccall f_18941(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[6],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_18941,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_18944,a[2]=((C_word*)t0)[2],tmp=(C_word)a,a+=3,tmp);
t3=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_28846,a[2]=((C_word)li467),tmp=(C_word)a,a+=3,tmp);
C_trace("ChickenBridge.scm: 370  ##sys#register-macro");
t4=C_retrieve(lf[679]);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[719],t3);}

/* a28845 in k18939 in k18528 in k18525 in k18522 in k18519 in k18516 in k17994 in k17991 in k17468 in k17465 in k17462 in k17459 in k17456 in k17453 in k17450 in k17447 in k17444 in k17441 in k17438 in k17435 in k17432 in k17429 in k17426 in k17423 in k17420 in k17417 in k17414 in k17411 in k17408 in k17269 in k17266 in k17263 in k17260 in k17204 in k17201 in k17198 in k17195 in k17192 in k17189 in k17186 in k17183 in k15938 in k15869 in k15676 in k15673 in k15568 in k15517 in k7924 in k7921 in k5905 in k5612 in k5609 in k5605 in k5314 in k5311 in k5308 in k5305 */
static void C_ccall f_28846(C_word c,C_word t0,C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word t6;
C_word ab[27],*a=ab;
if(c!=4) C_bad_argc_2(c,4,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr4,(void*)f_28846,4,t0,t1,t2,t3);}
t4=(C_word)C_a_i_list(&a,3,lf[718],t2,t3);
t5=(C_word)C_a_i_list(&a,3,lf[12],t3,t4);
t6=t1;
((C_proc2)(void*)(*((C_word*)t6+1)))(2,t6,(C_word)C_a_i_list(&a,3,lf[336],t5,t3));}

/* k18942 in k18939 in k18528 in k18525 in k18522 in k18519 in k18516 in k17994 in k17991 in k17468 in k17465 in k17462 in k17459 in k17456 in k17453 in k17450 in k17447 in k17444 in k17441 in k17438 in k17435 in k17432 in k17429 in k17426 in k17423 in k17420 in k17417 in k17414 in k17411 in k17408 in k17269 in k17266 in k17263 in k17260 in k17204 in k17201 in k17198 in k17195 in k17192 in k17189 in k17186 in k17183 in k15938 in k15869 in k15676 in k15673 in k15568 in k15517 in k7924 in k7921 in k5905 in k5612 in k5609 in k5605 in k5314 in k5311 in k5308 in k5305 */
static void C_ccall f_18944(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[6],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_18944,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_18947,a[2]=((C_word*)t0)[2],tmp=(C_word)a,a+=3,tmp);
t3=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_28817,a[2]=((C_word)li466),tmp=(C_word)a,a+=3,tmp);
C_trace("ChickenBridge.scm: 370  ##sys#register-macro");
t4=C_retrieve(lf[679]);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[717],t3);}

/* a28816 in k18942 in k18939 in k18528 in k18525 in k18522 in k18519 in k18516 in k17994 in k17991 in k17468 in k17465 in k17462 in k17459 in k17456 in k17453 in k17450 in k17447 in k17444 in k17441 in k17438 in k17435 in k17432 in k17429 in k17426 in k17423 in k17420 in k17417 in k17414 in k17411 in k17408 in k17269 in k17266 in k17263 in k17260 in k17204 in k17201 in k17198 in k17195 in k17192 in k17189 in k17186 in k17183 in k15938 in k15869 in k15676 in k15673 in k15568 in k15517 in k7924 in k7921 in k5905 in k5612 in k5609 in k5605 in k5314 in k5311 in k5308 in k5305 */
static void C_ccall f_28817(C_word c,C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word ab[4],*a=ab;
if(c!=3) C_bad_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr3,(void*)f_28817,3,t0,t1,t2);}
t3=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_28821,a[2]=t1,a[3]=t2,tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 370  gensym");
t4=C_retrieve(lf[26]);
((C_proc3)C_retrieve_proc(t4))(3,t4,t3,lf[716]);}

/* k28819 in a28816 in k18942 in k18939 in k18528 in k18525 in k18522 in k18519 in k18516 in k17994 in k17991 in k17468 in k17465 in k17462 in k17459 in k17456 in k17453 in k17450 in k17447 in k17444 in k17441 in k17438 in k17435 in k17432 in k17429 in k17426 in k17423 in k17420 in k17417 in k17414 in k17411 in k17408 in k17269 in k17266 in k17263 in k17260 in k17204 in k17201 in k17198 in k17195 in k17192 in k17189 in k17186 in k17183 in k15938 in k15869 in k15676 in k15673 in k15568 in k15517 in k7924 in k7921 in k5905 in k5612 in k5609 in k5605 in k5314 in k5311 in k5308 in k5305 */
static void C_ccall f_28821(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word ab[42],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_28821,2,t0,t1);}
t2=(C_word)C_a_i_list(&a,2,lf[8],((C_word*)t0)[3]);
t3=(C_word)C_a_i_list(&a,2,t1,t2);
t4=(C_word)C_a_i_list(&a,1,t3);
t5=(C_word)C_a_i_list(&a,2,lf[15],((C_word*)t0)[3]);
t6=(C_word)C_a_i_list(&a,3,lf[12],((C_word*)t0)[3],t5);
t7=((C_word*)t0)[2];
((C_proc2)(void*)(*((C_word*)t7+1)))(2,t7,(C_word)C_a_i_list(&a,4,lf[1],t4,t6,t1));}

/* k18945 in k18942 in k18939 in k18528 in k18525 in k18522 in k18519 in k18516 in k17994 in k17991 in k17468 in k17465 in k17462 in k17459 in k17456 in k17453 in k17450 in k17447 in k17444 in k17441 in k17438 in k17435 in k17432 in k17429 in k17426 in k17423 in k17420 in k17417 in k17414 in k17411 in k17408 in k17269 in k17266 in k17263 in k17260 in k17204 in k17201 in k17198 in k17195 in k17192 in k17189 in k17186 in k17183 in k15938 in k15869 in k15676 in k15673 in k15568 in k15517 in k7924 in k7921 in k5905 in k5612 in k5609 in k5605 in k5314 in k5311 in k5308 in k5305 */
static void C_ccall f_18947(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[6],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_18947,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_18950,a[2]=((C_word*)t0)[2],tmp=(C_word)a,a+=3,tmp);
t3=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_28814,a[2]=((C_word)li465),tmp=(C_word)a,a+=3,tmp);
C_trace("ChickenBridge.scm: 370  ##sys#register-macro");
t4=C_retrieve(lf[679]);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[715],t3);}

/* a28813 in k18945 in k18942 in k18939 in k18528 in k18525 in k18522 in k18519 in k18516 in k17994 in k17991 in k17468 in k17465 in k17462 in k17459 in k17456 in k17453 in k17450 in k17447 in k17444 in k17441 in k17438 in k17435 in k17432 in k17429 in k17426 in k17423 in k17420 in k17417 in k17414 in k17411 in k17408 in k17269 in k17266 in k17263 in k17260 in k17204 in k17201 in k17198 in k17195 in k17192 in k17189 in k17186 in k17183 in k15938 in k15869 in k15676 in k15673 in k15568 in k15517 in k7924 in k7921 in k5905 in k5612 in k5609 in k5605 in k5314 in k5311 in k5308 in k5305 */
static void C_ccall f_28814(C_word c,C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word *a;
if(c!=3) C_bad_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr3,(void*)f_28814,3,t0,t1,t2);}
t3=t1;
((C_proc2)(void*)(*((C_word*)t3+1)))(2,t3,t2);}

/* k18948 in k18945 in k18942 in k18939 in k18528 in k18525 in k18522 in k18519 in k18516 in k17994 in k17991 in k17468 in k17465 in k17462 in k17459 in k17456 in k17453 in k17450 in k17447 in k17444 in k17441 in k17438 in k17435 in k17432 in k17429 in k17426 in k17423 in k17420 in k17417 in k17414 in k17411 in k17408 in k17269 in k17266 in k17263 in k17260 in k17204 in k17201 in k17198 in k17195 in k17192 in k17189 in k17186 in k17183 in k15938 in k15869 in k15676 in k15673 in k15568 in k15517 in k7924 in k7921 in k5905 in k5612 in k5609 in k5605 in k5314 in k5311 in k5308 in k5305 */
static void C_ccall f_18950(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word t14;
C_word t15;
C_word t16;
C_word t17;
C_word t18;
C_word t19;
C_word t20;
C_word t21;
C_word t22;
C_word t23;
C_word t24;
C_word t25;
C_word t26;
C_word t27;
C_word t28;
C_word t29;
C_word t30;
C_word t31;
C_word t32;
C_word t33;
C_word t34;
C_word t35;
C_word t36;
C_word t37;
C_word t38;
C_word t39;
C_word t40;
C_word t41;
C_word t42;
C_word t43;
C_word t44;
C_word t45;
C_word t46;
C_word t47;
C_word t48;
C_word t49;
C_word t50;
C_word t51;
C_word t52;
C_word t53;
C_word t54;
C_word t55;
C_word t56;
C_word t57;
C_word t58;
C_word t59;
C_word t60;
C_word t61;
C_word t62;
C_word t63;
C_word t64;
C_word t65;
C_word t66;
C_word t67;
C_word t68;
C_word t69;
C_word t70;
C_word t71;
C_word t72;
C_word t73;
C_word ab[492],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_18950,2,t0,t1);}
t2=C_mutate(&lf[382],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_18958,a[2]=((C_word)li276),tmp=(C_word)a,a+=3,tmp));
t3=C_mutate(&lf[383],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_18964,a[2]=((C_word)li277),tmp=(C_word)a,a+=3,tmp));
t4=C_mutate(&lf[384],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_18976,a[2]=((C_word)li278),tmp=(C_word)a,a+=3,tmp));
t5=C_mutate(&lf[385],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_18988,a[2]=((C_word)li279),tmp=(C_word)a,a+=3,tmp));
t6=C_mutate(&lf[386],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_19000,a[2]=((C_word)li280),tmp=(C_word)a,a+=3,tmp));
t7=C_mutate(&lf[387],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_19012,a[2]=((C_word)li281),tmp=(C_word)a,a+=3,tmp));
t8=C_mutate(&lf[388],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_19018,a[2]=((C_word)li282),tmp=(C_word)a,a+=3,tmp));
t9=C_mutate(&lf[389],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_19024,a[2]=((C_word)li283),tmp=(C_word)a,a+=3,tmp));
t10=C_mutate(&lf[390],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_19036,a[2]=((C_word)li284),tmp=(C_word)a,a+=3,tmp));
t11=C_mutate(&lf[391],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_19048,a[2]=((C_word)li285),tmp=(C_word)a,a+=3,tmp));
t12=C_mutate(&lf[392],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_19060,a[2]=((C_word)li287),tmp=(C_word)a,a+=3,tmp));
t13=C_mutate(&lf[402],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_19211,a[2]=((C_word)li290),tmp=(C_word)a,a+=3,tmp));
t14=C_mutate(&lf[403],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_19282,a[2]=((C_word)li291),tmp=(C_word)a,a+=3,tmp));
t15=C_mutate(&lf[404],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_19288,a[2]=((C_word)li292),tmp=(C_word)a,a+=3,tmp));
t16=C_mutate(&lf[405],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_19294,a[2]=((C_word)li293),tmp=(C_word)a,a+=3,tmp));
t17=C_mutate(&lf[406],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_19300,a[2]=((C_word)li297),tmp=(C_word)a,a+=3,tmp));
t18=C_mutate(&lf[416],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_19460,a[2]=((C_word)li298),tmp=(C_word)a,a+=3,tmp));
t19=C_mutate(&lf[424],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_19542,a[2]=((C_word)li300),tmp=(C_word)a,a+=3,tmp));
t20=C_mutate(&lf[454],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_19924,a[2]=((C_word)li303),tmp=(C_word)a,a+=3,tmp));
t21=C_mutate(&lf[457],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_19971,a[2]=((C_word)li305),tmp=(C_word)a,a+=3,tmp));
t22=C_mutate(&lf[476],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_20322,a[2]=((C_word)li307),tmp=(C_word)a,a+=3,tmp));
t23=C_mutate(&lf[484],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_20464,a[2]=((C_word)li309),tmp=(C_word)a,a+=3,tmp));
t24=C_mutate(&lf[498],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_20657,a[2]=((C_word)li311),tmp=(C_word)a,a+=3,tmp));
t25=C_mutate(&lf[501],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_20724,a[2]=((C_word)li312),tmp=(C_word)a,a+=3,tmp));
t26=C_mutate(&lf[504],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_20762,a[2]=((C_word)li313),tmp=(C_word)a,a+=3,tmp));
t27=C_mutate(&lf[507],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_20921,a[2]=((C_word)li319),tmp=(C_word)a,a+=3,tmp));
t28=C_mutate(&lf[536],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_21467,a[2]=((C_word)li320),tmp=(C_word)a,a+=3,tmp));
t29=C_mutate(&lf[538],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_21473,a[2]=((C_word)li321),tmp=(C_word)a,a+=3,tmp));
t30=C_mutate(&lf[544],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_21539,a[2]=((C_word)li322),tmp=(C_word)a,a+=3,tmp));
t31=C_mutate(&lf[550],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_21630,a[2]=((C_word)li323),tmp=(C_word)a,a+=3,tmp));
t32=C_mutate(&lf[553],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_21731,a[2]=((C_word)li327),tmp=(C_word)a,a+=3,tmp));
t33=C_mutate(&lf[559],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_21862,a[2]=((C_word)li332),tmp=(C_word)a,a+=3,tmp));
t34=C_mutate(&lf[565],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_22276,a[2]=((C_word)li337),tmp=(C_word)a,a+=3,tmp));
t35=(C_word)C_a_i_list(&a,3,lf[485],C_retrieve2(lf[484],"parse-with"),C_SCHEME_FALSE);
t36=(C_word)C_a_i_list(&a,3,lf[396],C_retrieve2(lf[504],"parse-initially"),C_SCHEME_FALSE);
t37=(C_word)C_a_i_list(&a,3,lf[573],C_retrieve2(lf[454],"parse-repeat"),lf[570]);
t38=(C_word)C_a_i_list(&a,2,lf[432],C_retrieve2(lf[424],"parse-numerical-for"));
t39=(C_word)C_a_i_list(&a,2,lf[428],C_retrieve2(lf[424],"parse-numerical-for"));
t40=(C_word)C_a_i_list(&a,2,lf[430],C_retrieve2(lf[424],"parse-numerical-for"));
t41=(C_word)C_a_i_list(&a,2,lf[439],C_retrieve2(lf[424],"parse-numerical-for"));
t42=(C_word)C_a_i_list(&a,2,lf[429],C_retrieve2(lf[424],"parse-numerical-for"));
t43=(C_word)C_a_i_list(&a,2,lf[431],C_retrieve2(lf[424],"parse-numerical-for"));
t44=(C_word)C_a_i_list(&a,2,lf[464],C_retrieve2(lf[457],"parse-sequence-iteration"));
t45=(C_word)C_a_i_list(&a,2,lf[473],C_retrieve2(lf[457],"parse-sequence-iteration"));
t46=(C_word)C_a_i_list(&a,2,lf[458],C_retrieve2(lf[457],"parse-sequence-iteration"));
t47=(C_word)C_a_i_list(&a,2,lf[477],C_retrieve2(lf[476],"parse-general-iteration"));
t48=(C_word)C_a_i_list(&a,2,lf[463],C_retrieve2(lf[457],"parse-sequence-iteration"));
t49=(C_word)C_a_i_list(&a,14,lf[425],C_retrieve2(lf[416],"parse-for"),lf[570],t38,t39,t40,t41,t42,t43,t44,t45,t46,t47,t48);
t50=(C_word)C_a_i_list(&a,3,lf[574],C_retrieve2(lf[416],"parse-for"),lf[570]);
t51=(C_word)C_a_i_list(&a,3,lf[566],C_retrieve2(lf[498],"parse-do"),lf[557]);
t52=(C_word)C_a_i_list(&a,3,lf[518],C_retrieve2(lf[507],"parse-accumulation"),lf[557]);
t53=(C_word)C_a_i_list(&a,3,lf[18],C_retrieve2(lf[507],"parse-accumulation"),lf[557]);
t54=(C_word)C_a_i_list(&a,3,lf[523],C_retrieve2(lf[507],"parse-accumulation"),lf[557]);
t55=(C_word)C_a_i_list(&a,3,lf[508],C_retrieve2(lf[507],"parse-accumulation"),lf[557]);
t56=(C_word)C_a_i_list(&a,3,lf[509],C_retrieve2(lf[507],"parse-accumulation"),lf[557]);
t57=(C_word)C_a_i_list(&a,3,lf[511],C_retrieve2(lf[507],"parse-accumulation"),lf[557]);
t58=(C_word)C_a_i_list(&a,3,lf[512],C_retrieve2(lf[507],"parse-accumulation"),lf[557]);
t59=(C_word)C_a_i_list(&a,4,lf[545],C_retrieve2(lf[544],"parse-thereis"),lf[557],C_retrieve2(lf[536],"loop-return"));
t60=(C_word)C_a_i_list(&a,4,lf[546],C_retrieve2(lf[544],"parse-thereis"),lf[557],C_retrieve2(lf[536],"loop-return"));
t61=(C_word)C_a_i_list(&a,4,lf[547],C_retrieve2(lf[544],"parse-thereis"),lf[557],C_retrieve2(lf[536],"loop-return"));
t62=(C_word)C_a_i_list(&a,4,lf[537],C_retrieve2(lf[550],"parse-return"),lf[557],C_retrieve2(lf[536],"loop-return"));
t63=(C_word)C_a_i_list(&a,3,lf[541],C_retrieve2(lf[538],"parse-while-until"),C_SCHEME_FALSE);
t64=(C_word)C_a_i_list(&a,3,lf[540],C_retrieve2(lf[538],"parse-while-until"),C_SCHEME_FALSE);
t65=(C_word)C_a_i_list(&a,3,lf[11],C_retrieve2(lf[559],"parse-conditional"),lf[557]);
t66=(C_word)C_a_i_list(&a,3,lf[6],C_retrieve2(lf[559],"parse-conditional"),lf[557]);
t67=(C_word)C_a_i_list(&a,3,lf[20],C_retrieve2(lf[559],"parse-conditional"),lf[557]);
t68=(C_word)C_a_i_list(&a,3,lf[400],C_retrieve2(lf[501],"parse-finally"),C_SCHEME_FALSE);
t69=(C_word)C_a_i_list(&a,23,t35,t36,t37,t49,t50,t51,t52,t53,t54,t55,t56,t57,t58,t59,t60,t61,t62,t63,t64,t65,t66,t67,t68);
t70=C_mutate(&lf[575],t69);
t71=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_22470,a[2]=((C_word*)t0)[2],tmp=(C_word)a,a+=3,tmp);
t72=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_28672,a[2]=((C_word)li464),tmp=(C_word)a,a+=3,tmp);
C_trace("ChickenBridge.scm: 370  ##sys#register-macro-2");
t73=C_retrieve(lf[714]);
((C_proc4)C_retrieve_proc(t73))(4,t73,t71,lf[570],t72);}

/* a28671 in k18948 in k18945 in k18942 in k18939 in k18528 in k18525 in k18522 in k18519 in k18516 in k17994 in k17991 in k17468 in k17465 in k17462 in k17459 in k17456 in k17453 in k17450 in k17447 in k17444 in k17441 in k17438 in k17435 in k17432 in k17429 in k17426 in k17423 in k17420 in k17417 in k17414 in k17411 in k17408 in k17269 in k17266 in k17263 in k17260 in k17204 in k17201 in k17198 in k17195 in k17192 in k17189 in k17186 in k17183 in k15938 in k15869 in k15676 in k15673 in k15568 in k15517 in k7924 in k7921 in k5905 in k5612 in k5609 in k5605 in k5314 in k5311 in k5308 in k5305 */
static void C_ccall f_28672(C_word c,C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word ab[3],*a=ab;
if(c!=3) C_bad_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr3,(void*)f_28672,3,t0,t1,t2);}
t3=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_22476,a[2]=t1,tmp=(C_word)a,a+=3,tmp);
C_trace("ChickenBridge.scm: 370  parse-iteration");
f_22276(t3,lf[570],t2,C_retrieve2(lf[575],"*loop-operators*"));}

/* k22474 in a28671 in k18948 in k18945 in k18942 in k18939 in k18528 in k18525 in k18522 in k18519 in k18516 in k17994 in k17991 in k17468 in k17465 in k17462 in k17459 in k17456 in k17453 in k17450 in k17447 in k17444 in k17441 in k17438 in k17435 in k17432 in k17429 in k17426 in k17423 in k17420 in k17417 in k17414 in k17411 in k17408 in k17269 in k17266 in k17263 in k17260 in k17204 in k17201 in k17198 in k17195 in k17192 in k17189 in k17186 in k17183 in k15938 in k15869 in k15676 in k15673 in k15568 in k15517 in k7924 in k7921 in k5905 in k5612 in k5609 in k5605 in k5314 in k5311 in k5308 in k5305 */
static void C_ccall f_22476(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[8],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_22476,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_22479,a[2]=t1,a[3]=((C_word*)t0)[2],tmp=(C_word)a,a+=4,tmp);
t3=(C_word)C_i_assoc(lf[537],C_retrieve2(lf[575],"*loop-operators*"));
t4=(C_word)C_i_cadddr(t3);
t5=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_22608,a[2]=t4,a[3]=t2,tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 370  loop-returning");
t6=C_retrieve2(lf[391],"loop-returning");
f_19048(3,t6,t5,t1);}

/* k22606 in k22474 in a28671 in k18948 in k18945 in k18942 in k18939 in k18528 in k18525 in k18522 in k18519 in k18516 in k17994 in k17991 in k17468 in k17465 in k17462 in k17459 in k17456 in k17453 in k17450 in k17447 in k17444 in k17441 in k17438 in k17435 in k17432 in k17429 in k17426 in k17423 in k17420 in k17417 in k17414 in k17411 in k17408 in k17269 in k17266 in k17263 in k17260 in k17204 in k17201 in k17198 in k17195 in k17192 in k17189 in k17186 in k17183 in k15938 in k15869 in k15676 in k15673 in k15568 in k15517 in k7924 in k7921 in k5905 in k5612 in k5609 in k5605 in k5314 in k5311 in k5308 in k5305 */
static void C_ccall f_22608(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[3],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_22608,2,t0,t1);}
t2=(C_word)C_i_car(t1);
t3=(C_word)C_a_i_list(&a,1,t2);
C_apply(4,0,((C_word*)t0)[3],((C_word*)t0)[2],t3);}

/* k22477 in k22474 in a28671 in k18948 in k18945 in k18942 in k18939 in k18528 in k18525 in k18522 in k18519 in k18516 in k17994 in k17991 in k17468 in k17465 in k17462 in k17459 in k17456 in k17453 in k17450 in k17447 in k17444 in k17441 in k17438 in k17435 in k17432 in k17429 in k17426 in k17423 in k17420 in k17417 in k17414 in k17411 in k17408 in k17269 in k17266 in k17263 in k17260 in k17204 in k17201 in k17198 in k17195 in k17192 in k17189 in k17186 in k17183 in k15938 in k15869 in k15676 in k15673 in k15568 in k15517 in k7924 in k7921 in k5905 in k5612 in k5609 in k5605 in k5314 in k5311 in k5308 in k5305 */
static void C_ccall f_22479(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[5],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_22479,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_22490,a[2]=((C_word*)t0)[2],a[3]=t1,a[4]=((C_word*)t0)[3],tmp=(C_word)a,a+=5,tmp);
C_trace("ChickenBridge.scm: 370  loop-bindings");
t3=C_retrieve2(lf[383],"loop-bindings");
f_18964(3,t3,t2,((C_word*)t0)[2]);}

/* k22488 in k22477 in k22474 in a28671 in k18948 in k18945 in k18942 in k18939 in k18528 in k18525 in k18522 in k18519 in k18516 in k17994 in k17991 in k17468 in k17465 in k17462 in k17459 in k17456 in k17453 in k17450 in k17447 in k17444 in k17441 in k17438 in k17435 in k17432 in k17429 in k17426 in k17423 in k17420 in k17417 in k17414 in k17411 in k17408 in k17269 in k17266 in k17263 in k17260 in k17204 in k17201 in k17198 in k17195 in k17192 in k17189 in k17186 in k17183 in k15938 in k15869 in k15676 in k15673 in k15568 in k15517 in k7924 in k7921 in k5905 in k5612 in k5609 in k5605 in k5314 in k5311 in k5308 in k5305 */
static void C_ccall f_22490(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_22490,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_22494,a[2]=((C_word*)t0)[4],a[3]=t1,tmp=(C_word)a,a+=4,tmp);
t3=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_22498,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=t2,tmp=(C_word)a,a+=5,tmp);
C_trace("ChickenBridge.scm: 370  loop-initially");
t4=C_retrieve2(lf[385],"loop-initially");
f_18988(3,t4,t3,((C_word*)t0)[2]);}

/* k22496 in k22488 in k22477 in k22474 in a28671 in k18948 in k18945 in k18942 in k18939 in k18528 in k18525 in k18522 in k18519 in k18516 in k17994 in k17991 in k17468 in k17465 in k17462 in k17459 in k17456 in k17453 in k17450 in k17447 in k17444 in k17441 in k17438 in k17435 in k17432 in k17429 in k17426 in k17423 in k17420 in k17417 in k17414 in k17411 in k17408 in k17269 in k17266 in k17263 in k17260 in k17204 in k17201 in k17198 in k17195 in k17192 in k17189 in k17186 in k17183 in k15938 in k15869 in k15676 in k15673 in k15568 in k15517 in k7924 in k7921 in k5905 in k5612 in k5609 in k5605 in k5314 in k5311 in k5308 in k5305 */
static void C_ccall f_22498(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_22498,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_22518,a[2]=t1,a[3]=((C_word*)t0)[4],tmp=(C_word)a,a+=4,tmp);
t3=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_22522,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=t2,tmp=(C_word)a,a+=5,tmp);
C_trace("ChickenBridge.scm: 370  loop-end-tests");
t4=C_retrieve2(lf[386],"loop-end-tests");
f_19000(3,t4,t3,((C_word*)t0)[2]);}

/* k22520 in k22496 in k22488 in k22477 in k22474 in a28671 in k18948 in k18945 in k18942 in k18939 in k18528 in k18525 in k18522 in k18519 in k18516 in k17994 in k17991 in k17468 in k17465 in k17462 in k17459 in k17456 in k17453 in k17450 in k17447 in k17444 in k17441 in k17438 in k17435 in k17432 in k17429 in k17426 in k17423 in k17420 in k17417 in k17414 in k17411 in k17408 in k17269 in k17266 in k17263 in k17260 in k17204 in k17201 in k17198 in k17195 in k17192 in k17189 in k17186 in k17183 in k15938 in k15869 in k15676 in k15673 in k15568 in k15517 in k7924 in k7921 in k5905 in k5612 in k5609 in k5605 in k5314 in k5311 in k5308 in k5305 */
static void C_ccall f_22522(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word ab[26],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_22522,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_22525,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],tmp=(C_word)a,a+=5,tmp);
if(C_truep(t1)){
t3=(C_word)C_i_cdr(t1);
t4=(C_truep(t3)?(C_word)C_a_i_cons(&a,2,lf[311],t1):(C_word)C_i_car(t1));
t5=(C_word)C_a_i_list(&a,2,lf[680],lf[274]);
t6=(C_word)C_a_i_list(&a,3,lf[20],t4,t5);
t7=t2;
f_22525(t7,(C_word)C_a_i_list(&a,1,t6));}
else{
t3=t2;
f_22525(t3,C_SCHEME_END_OF_LIST);}}

/* k22523 in k22520 in k22496 in k22488 in k22477 in k22474 in a28671 in k18948 in k18945 in k18942 in k18939 in k18528 in k18525 in k18522 in k18519 in k18516 in k17994 in k17991 in k17468 in k17465 in k17462 in k17459 in k17456 in k17453 in k17450 in k17447 in k17444 in k17441 in k17438 in k17435 in k17432 in k17429 in k17426 in k17423 in k17420 in k17417 in k17414 in k17411 in k17408 in k17269 in k17266 in k17263 in k17260 in k17204 in k17201 in k17198 in k17195 in k17192 in k17189 in k17186 in k17183 in k15938 in k15869 in k15676 in k15673 in k15568 in k15517 in k7924 in k7921 in k5905 in k5612 in k5609 in k5605 in k5314 in k5311 in k5308 in k5305 */
static void C_fcall f_22525(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_22525,NULL,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_22529,a[2]=t1,a[3]=((C_word*)t0)[4],tmp=(C_word)a,a+=4,tmp);
t3=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_22533,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=t2,tmp=(C_word)a,a+=5,tmp);
C_trace("ChickenBridge.scm: 370  loop-looping");
t4=C_retrieve2(lf[387],"loop-looping");
f_19012(3,t4,t3,((C_word*)t0)[2]);}

/* k22531 in k22523 in k22520 in k22496 in k22488 in k22477 in k22474 in a28671 in k18948 in k18945 in k18942 in k18939 in k18528 in k18525 in k18522 in k18519 in k18516 in k17994 in k17991 in k17468 in k17465 in k17462 in k17459 in k17456 in k17453 in k17450 in k17447 in k17444 in k17441 in k17438 in k17435 in k17432 in k17429 in k17426 in k17423 in k17420 in k17417 in k17414 in k17411 in k17408 in k17269 in k17266 in k17263 in k17260 in k17204 in k17201 in k17198 in k17195 in k17192 in k17189 in k17186 in k17183 in k15938 in k15869 in k15676 in k15673 in k15568 in k15517 in k7924 in k7921 in k5905 in k5612 in k5609 in k5605 in k5314 in k5311 in k5308 in k5305 */
static void C_ccall f_22533(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_22533,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_22537,a[2]=t1,a[3]=((C_word*)t0)[4],tmp=(C_word)a,a+=4,tmp);
t3=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_22541,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=t2,tmp=(C_word)a,a+=5,tmp);
C_trace("ChickenBridge.scm: 370  loop-stepping");
t4=C_retrieve2(lf[389],"loop-stepping");
f_19024(3,t4,t3,((C_word*)t0)[2]);}

/* k22539 in k22531 in k22523 in k22520 in k22496 in k22488 in k22477 in k22474 in a28671 in k18948 in k18945 in k18942 in k18939 in k18528 in k18525 in k18522 in k18519 in k18516 in k17994 in k17991 in k17468 in k17465 in k17462 in k17459 in k17456 in k17453 in k17450 in k17447 in k17444 in k17441 in k17438 in k17435 in k17432 in k17429 in k17426 in k17423 in k17420 in k17417 in k17414 in k17411 in k17408 in k17269 in k17266 in k17263 in k17260 in k17204 in k17201 in k17198 in k17195 in k17192 in k17189 in k17186 in k17183 in k15938 in k15869 in k15676 in k15673 in k15568 in k15517 in k7924 in k7921 in k5905 in k5612 in k5609 in k5605 in k5314 in k5311 in k5308 in k5305 */
static void C_ccall f_22541(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[15],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_22541,2,t0,t1);}
t2=(C_word)C_a_i_list(&a,2,lf[680],lf[710]);
t3=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_22557,a[2]=t1,a[3]=((C_word*)t0)[4],a[4]=t2,tmp=(C_word)a,a+=5,tmp);
t4=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_22561,a[2]=t3,a[3]=((C_word*)t0)[3],tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 370  loop-finally");
t5=C_retrieve2(lf[390],"loop-finally");
f_19036(3,t5,t4,((C_word*)t0)[2]);}

/* k22559 in k22539 in k22531 in k22523 in k22520 in k22496 in k22488 in k22477 in k22474 in a28671 in k18948 in k18945 in k18942 in k18939 in k18528 in k18525 in k18522 in k18519 in k18516 in k17994 in k17991 in k17468 in k17465 in k17462 in k17459 in k17456 in k17453 in k17450 in k17447 in k17444 in k17441 in k17438 in k17435 in k17432 in k17429 in k17426 in k17423 in k17420 in k17417 in k17414 in k17411 in k17408 in k17269 in k17266 in k17263 in k17260 in k17204 in k17201 in k17198 in k17195 in k17192 in k17189 in k17186 in k17183 in k15938 in k15869 in k15676 in k15673 in k15568 in k15517 in k7924 in k7921 in k5905 in k5612 in k5609 in k5605 in k5314 in k5311 in k5308 in k5305 */
static void C_ccall f_22561(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[3],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_22561,2,t0,t1);}
t2=(C_word)C_a_i_list(&a,1,((C_word*)t0)[3]);
C_trace("##sys#append");
t3=*((C_word*)lf[7]+1);
((C_proc4)(void*)(*((C_word*)t3+1)))(4,t3,((C_word*)t0)[2],t1,t2);}

/* k22555 in k22539 in k22531 in k22523 in k22520 in k22496 in k22488 in k22477 in k22474 in a28671 in k18948 in k18945 in k18942 in k18939 in k18528 in k18525 in k18522 in k18519 in k18516 in k17994 in k17991 in k17468 in k17465 in k17462 in k17459 in k17456 in k17453 in k17450 in k17447 in k17444 in k17441 in k17438 in k17435 in k17432 in k17429 in k17426 in k17423 in k17420 in k17417 in k17414 in k17411 in k17408 in k17269 in k17266 in k17263 in k17260 in k17204 in k17201 in k17198 in k17195 in k17192 in k17189 in k17186 in k17183 in k15938 in k15869 in k15676 in k15673 in k15568 in k15517 in k7924 in k7921 in k5905 in k5612 in k5609 in k5605 in k5314 in k5311 in k5308 in k5305 */
static void C_ccall f_22557(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[6],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_22557,2,t0,t1);}
t2=(C_word)C_a_i_cons(&a,2,lf[274],t1);
t3=(C_word)C_a_i_cons(&a,2,((C_word*)t0)[4],t2);
C_trace("##sys#append");
t4=*((C_word*)lf[7]+1);
((C_proc4)(void*)(*((C_word*)t4+1)))(4,t4,((C_word*)t0)[3],((C_word*)t0)[2],t3);}

/* k22535 in k22531 in k22523 in k22520 in k22496 in k22488 in k22477 in k22474 in a28671 in k18948 in k18945 in k18942 in k18939 in k18528 in k18525 in k18522 in k18519 in k18516 in k17994 in k17991 in k17468 in k17465 in k17462 in k17459 in k17456 in k17453 in k17450 in k17447 in k17444 in k17441 in k17438 in k17435 in k17432 in k17429 in k17426 in k17423 in k17420 in k17417 in k17414 in k17411 in k17408 in k17269 in k17266 in k17263 in k17260 in k17204 in k17201 in k17198 in k17195 in k17192 in k17189 in k17186 in k17183 in k15938 in k15869 in k15676 in k15673 in k15568 in k15517 in k7924 in k7921 in k5905 in k5612 in k5609 in k5605 in k5314 in k5311 in k5308 in k5305 */
static void C_ccall f_22537(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("##sys#append");
t2=*((C_word*)lf[7]+1);
((C_proc4)(void*)(*((C_word*)t2+1)))(4,t2,((C_word*)t0)[3],((C_word*)t0)[2],t1);}

/* k22527 in k22523 in k22520 in k22496 in k22488 in k22477 in k22474 in a28671 in k18948 in k18945 in k18942 in k18939 in k18528 in k18525 in k18522 in k18519 in k18516 in k17994 in k17991 in k17468 in k17465 in k17462 in k17459 in k17456 in k17453 in k17450 in k17447 in k17444 in k17441 in k17438 in k17435 in k17432 in k17429 in k17426 in k17423 in k17420 in k17417 in k17414 in k17411 in k17408 in k17269 in k17266 in k17263 in k17260 in k17204 in k17201 in k17198 in k17195 in k17192 in k17189 in k17186 in k17183 in k15938 in k15869 in k15676 in k15673 in k15568 in k15517 in k7924 in k7921 in k5905 in k5612 in k5609 in k5605 in k5314 in k5311 in k5308 in k5305 */
static void C_ccall f_22529(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("##sys#append");
t2=*((C_word*)lf[7]+1);
((C_proc4)(void*)(*((C_word*)t2+1)))(4,t2,((C_word*)t0)[3],((C_word*)t0)[2],t1);}

/* k22516 in k22496 in k22488 in k22477 in k22474 in a28671 in k18948 in k18945 in k18942 in k18939 in k18528 in k18525 in k18522 in k18519 in k18516 in k17994 in k17991 in k17468 in k17465 in k17462 in k17459 in k17456 in k17453 in k17450 in k17447 in k17444 in k17441 in k17438 in k17435 in k17432 in k17429 in k17426 in k17423 in k17420 in k17417 in k17414 in k17411 in k17408 in k17269 in k17266 in k17263 in k17260 in k17204 in k17201 in k17198 in k17195 in k17192 in k17189 in k17186 in k17183 in k15938 in k15869 in k15676 in k15673 in k15568 in k15517 in k7924 in k7921 in k5905 in k5612 in k5609 in k5605 in k5314 in k5311 in k5308 in k5305 */
static void C_ccall f_22518(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[18],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_22518,2,t0,t1);}
t2=(C_word)C_a_i_cons(&a,2,lf[710],t1);
t3=(C_word)C_a_i_cons(&a,2,lf[711],t2);
t4=(C_word)C_a_i_list(&a,3,lf[712],lf[713],t3);
t5=(C_word)C_a_i_list(&a,1,t4);
C_trace("##sys#append");
t6=*((C_word*)lf[7]+1);
((C_proc4)(void*)(*((C_word*)t6+1)))(4,t6,((C_word*)t0)[3],((C_word*)t0)[2],t5);}

/* k22492 in k22488 in k22477 in k22474 in a28671 in k18948 in k18945 in k18942 in k18939 in k18528 in k18525 in k18522 in k18519 in k18516 in k17994 in k17991 in k17468 in k17465 in k17462 in k17459 in k17456 in k17453 in k17450 in k17447 in k17444 in k17441 in k17438 in k17435 in k17432 in k17429 in k17426 in k17423 in k17420 in k17417 in k17414 in k17411 in k17408 in k17269 in k17266 in k17263 in k17260 in k17204 in k17201 in k17198 in k17195 in k17192 in k17189 in k17186 in k17183 in k15938 in k15869 in k15676 in k15673 in k15568 in k15517 in k7924 in k7921 in k5905 in k5612 in k5609 in k5605 in k5314 in k5311 in k5308 in k5305 */
static void C_ccall f_22494(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[6],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_22494,2,t0,t1);}
t2=(C_word)C_a_i_cons(&a,2,((C_word*)t0)[3],t1);
t3=((C_word*)t0)[2];
((C_proc2)(void*)(*((C_word*)t3+1)))(2,t3,(C_word)C_a_i_cons(&a,2,lf[1],t2));}

/* k22468 in k18948 in k18945 in k18942 in k18939 in k18528 in k18525 in k18522 in k18519 in k18516 in k17994 in k17991 in k17468 in k17465 in k17462 in k17459 in k17456 in k17453 in k17450 in k17447 in k17444 in k17441 in k17438 in k17435 in k17432 in k17429 in k17426 in k17423 in k17420 in k17417 in k17414 in k17411 in k17408 in k17269 in k17266 in k17263 in k17260 in k17204 in k17201 in k17198 in k17195 in k17192 in k17189 in k17186 in k17183 in k15938 in k15869 in k15676 in k15673 in k15568 in k15517 in k7924 in k7921 in k5905 in k5612 in k5609 in k5605 in k5314 in k5311 in k5308 in k5305 */
static void C_ccall f_22470(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word t14;
C_word t15;
C_word t16;
C_word t17;
C_word t18;
C_word t19;
C_word t20;
C_word t21;
C_word t22;
C_word t23;
C_word t24;
C_word t25;
C_word t26;
C_word t27;
C_word t28;
C_word t29;
C_word t30;
C_word t31;
C_word t32;
C_word t33;
C_word t34;
C_word t35;
C_word t36;
C_word t37;
C_word t38;
C_word t39;
C_word t40;
C_word t41;
C_word ab[117],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_22470,2,t0,t1);}
t2=C_mutate((C_word*)lf[576]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_22614,a[2]=((C_word)li339),tmp=(C_word)a,a+=3,tmp));
t3=C_mutate((C_word*)lf[581]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_23343,a[2]=((C_word)li341),tmp=(C_word)a,a+=3,tmp));
t4=C_mutate((C_word*)lf[582]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_23362,a[2]=((C_word)li343),tmp=(C_word)a,a+=3,tmp));
t5=C_mutate((C_word*)lf[583]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_23813,a[2]=((C_word)li345),tmp=(C_word)a,a+=3,tmp));
t6=C_mutate((C_word*)lf[584]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_23832,a[2]=((C_word)li347),tmp=(C_word)a,a+=3,tmp));
t7=C_mutate((C_word*)lf[586]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_24561,a[2]=((C_word)li349),tmp=(C_word)a,a+=3,tmp));
t8=C_mutate((C_word*)lf[587]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_24580,a[2]=((C_word)li351),tmp=(C_word)a,a+=3,tmp));
t9=C_mutate((C_word*)lf[589]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_25309,a[2]=((C_word)li353),tmp=(C_word)a,a+=3,tmp));
t10=C_mutate((C_word*)lf[590]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_25328,a[2]=((C_word)li355),tmp=(C_word)a,a+=3,tmp));
t11=C_mutate((C_word*)lf[591]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_25779,a[2]=((C_word)li357),tmp=(C_word)a,a+=3,tmp));
t12=C_mutate((C_word*)lf[592]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_25798,a[2]=((C_word)li359),tmp=(C_word)a,a+=3,tmp));
t13=C_mutate((C_word*)lf[593]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_26249,a[2]=((C_word)li361),tmp=(C_word)a,a+=3,tmp));
t14=C_mutate((C_word*)lf[594]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_26268,a[2]=((C_word)li363),tmp=(C_word)a,a+=3,tmp));
t15=C_mutate((C_word*)lf[595]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_26738,a[2]=((C_word)li365),tmp=(C_word)a,a+=3,tmp));
t16=C_mutate((C_word*)lf[596]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_26756,a[2]=((C_word)li367),tmp=(C_word)a,a+=3,tmp));
t17=C_mutate((C_word*)lf[597]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_26771,a[2]=((C_word)li369),tmp=(C_word)a,a+=3,tmp));
t18=C_mutate((C_word*)lf[598]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_26786,a[2]=((C_word)li371),tmp=(C_word)a,a+=3,tmp));
t19=C_mutate((C_word*)lf[599]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_26805,a[2]=((C_word)li373),tmp=(C_word)a,a+=3,tmp));
t20=C_mutate((C_word*)lf[600]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_26820,a[2]=((C_word)li375),tmp=(C_word)a,a+=3,tmp));
t21=C_mutate((C_word*)lf[601]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_26839,a[2]=((C_word)li377),tmp=(C_word)a,a+=3,tmp));
t22=C_mutate((C_word*)lf[602]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_26858,a[2]=((C_word)li379),tmp=(C_word)a,a+=3,tmp));
t23=C_mutate((C_word*)lf[603]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_26881,a[2]=((C_word)li381),tmp=(C_word)a,a+=3,tmp));
t24=C_mutate((C_word*)lf[604]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_26900,a[2]=((C_word)li383),tmp=(C_word)a,a+=3,tmp));
t25=C_mutate((C_word*)lf[605]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_26923,a[2]=((C_word)li386),tmp=(C_word)a,a+=3,tmp));
t26=C_mutate((C_word*)lf[607]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_26970,a[2]=((C_word)li389),tmp=(C_word)a,a+=3,tmp));
t27=C_mutate((C_word*)lf[609]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_27025,a[2]=((C_word)li391),tmp=(C_word)a,a+=3,tmp));
t28=C_mutate((C_word*)lf[610]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_27044,a[2]=((C_word)li393),tmp=(C_word)a,a+=3,tmp));
t29=C_mutate((C_word*)lf[611]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_27067,a[2]=((C_word)li395),tmp=(C_word)a,a+=3,tmp));
t30=C_mutate((C_word*)lf[612]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_27095,a[2]=((C_word)li397),tmp=(C_word)a,a+=3,tmp));
t31=C_mutate((C_word*)lf[613]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_27123,a[2]=((C_word)li399),tmp=(C_word)a,a+=3,tmp));
t32=C_mutate((C_word*)lf[614]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_27151,a[2]=((C_word)li401),tmp=(C_word)a,a+=3,tmp));
t33=C_mutate((C_word*)lf[615]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_27179,a[2]=((C_word)li403),tmp=(C_word)a,a+=3,tmp));
t34=C_mutate((C_word*)lf[616]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_27207,a[2]=((C_word)li405),tmp=(C_word)a,a+=3,tmp));
t35=C_mutate((C_word*)lf[617]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_27235,a[2]=((C_word)li407),tmp=(C_word)a,a+=3,tmp));
t36=C_mutate((C_word*)lf[618]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_27263,a[2]=((C_word)li409),tmp=(C_word)a,a+=3,tmp));
t37=C_mutate((C_word*)lf[619]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_27291,a[2]=((C_word)li411),tmp=(C_word)a,a+=3,tmp));
t38=C_mutate((C_word*)lf[620]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_27319,a[2]=((C_word)li413),tmp=(C_word)a,a+=3,tmp));
t39=C_mutate((C_word*)lf[621]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_27334,a[2]=((C_word)li420),tmp=(C_word)a,a+=3,tmp));
t40=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_27392,a[2]=((C_word*)t0)[2],tmp=(C_word)a,a+=3,tmp);
C_trace("ChickenBridge.scm: 371  hash-table-set!");
t41=C_retrieve(lf[681]);
((C_proc5)C_retrieve_proc(t41))(5,t41,t40,C_retrieve(lf[29]),lf[708],lf[709]);}

/* k27390 in k22468 in k18948 in k18945 in k18942 in k18939 in k18528 in k18525 in k18522 in k18519 in k18516 in k17994 in k17991 in k17468 in k17465 in k17462 in k17459 in k17456 in k17453 in k17450 in k17447 in k17444 in k17441 in k17438 in k17435 in k17432 in k17429 in k17426 in k17423 in k17420 in k17417 in k17414 in k17411 in k17408 in k17269 in k17266 in k17263 in k17260 in k17204 in k17201 in k17198 in k17195 in k17192 in k17189 in k17186 in k17183 in k15938 in k15869 in k15676 in k15673 in k15568 in k15517 in k7924 in k7921 in k5905 in k5612 in k5609 in k5605 in k5314 in k5311 in k5308 in k5305 */
static void C_ccall f_27392(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[3],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_27392,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_27395,a[2]=((C_word*)t0)[2],tmp=(C_word)a,a+=3,tmp);
C_trace("ChickenBridge.scm: 371  hash-table-set!");
t3=C_retrieve(lf[681]);
((C_proc5)C_retrieve_proc(t3))(5,t3,t2,C_retrieve(lf[29]),lf[706],lf[707]);}

/* k27393 in k27390 in k22468 in k18948 in k18945 in k18942 in k18939 in k18528 in k18525 in k18522 in k18519 in k18516 in k17994 in k17991 in k17468 in k17465 in k17462 in k17459 in k17456 in k17453 in k17450 in k17447 in k17444 in k17441 in k17438 in k17435 in k17432 in k17429 in k17426 in k17423 in k17420 in k17417 in k17414 in k17411 in k17408 in k17269 in k17266 in k17263 in k17260 in k17204 in k17201 in k17198 in k17195 in k17192 in k17189 in k17186 in k17183 in k15938 in k15869 in k15676 in k15673 in k15568 in k15517 in k7924 in k7921 in k5905 in k5612 in k5609 in k5605 in k5314 in k5311 in k5308 in k5305 */
static void C_ccall f_27395(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[3],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_27395,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_27398,a[2]=((C_word*)t0)[2],tmp=(C_word)a,a+=3,tmp);
C_trace("ChickenBridge.scm: 371  hash-table-set!");
t3=C_retrieve(lf[681]);
((C_proc5)C_retrieve_proc(t3))(5,t3,t2,C_retrieve(lf[29]),lf[704],lf[705]);}

/* k27396 in k27393 in k27390 in k22468 in k18948 in k18945 in k18942 in k18939 in k18528 in k18525 in k18522 in k18519 in k18516 in k17994 in k17991 in k17468 in k17465 in k17462 in k17459 in k17456 in k17453 in k17450 in k17447 in k17444 in k17441 in k17438 in k17435 in k17432 in k17429 in k17426 in k17423 in k17420 in k17417 in k17414 in k17411 in k17408 in k17269 in k17266 in k17263 in k17260 in k17204 in k17201 in k17198 in k17195 in k17192 in k17189 in k17186 in k17183 in k15938 in k15869 in k15676 in k15673 in k15568 in k15517 in k7924 in k7921 in k5905 in k5612 in k5609 in k5605 in k5314 in k5311 in k5308 in k5305 */
static void C_ccall f_27398(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[3],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_27398,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_27401,a[2]=((C_word*)t0)[2],tmp=(C_word)a,a+=3,tmp);
C_trace("ChickenBridge.scm: 371  hash-table-set!");
t3=C_retrieve(lf[681]);
((C_proc5)C_retrieve_proc(t3))(5,t3,t2,C_retrieve(lf[29]),lf[702],lf[703]);}

/* k27399 in k27396 in k27393 in k27390 in k22468 in k18948 in k18945 in k18942 in k18939 in k18528 in k18525 in k18522 in k18519 in k18516 in k17994 in k17991 in k17468 in k17465 in k17462 in k17459 in k17456 in k17453 in k17450 in k17447 in k17444 in k17441 in k17438 in k17435 in k17432 in k17429 in k17426 in k17423 in k17420 in k17417 in k17414 in k17411 in k17408 in k17269 in k17266 in k17263 in k17260 in k17204 in k17201 in k17198 in k17195 in k17192 in k17189 in k17186 in k17183 in k15938 in k15869 in k15676 in k15673 in k15568 in k15517 in k7924 in k7921 in k5905 in k5612 in k5609 in k5605 in k5314 in k5311 in k5308 in k5305 */
static void C_ccall f_27401(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[3],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_27401,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_27404,a[2]=((C_word*)t0)[2],tmp=(C_word)a,a+=3,tmp);
C_trace("ChickenBridge.scm: 371  hash-table-set!");
t3=C_retrieve(lf[681]);
((C_proc5)C_retrieve_proc(t3))(5,t3,t2,C_retrieve(lf[29]),lf[700],lf[701]);}

/* k27402 in k27399 in k27396 in k27393 in k27390 in k22468 in k18948 in k18945 in k18942 in k18939 in k18528 in k18525 in k18522 in k18519 in k18516 in k17994 in k17991 in k17468 in k17465 in k17462 in k17459 in k17456 in k17453 in k17450 in k17447 in k17444 in k17441 in k17438 in k17435 in k17432 in k17429 in k17426 in k17423 in k17420 in k17417 in k17414 in k17411 in k17408 in k17269 in k17266 in k17263 in k17260 in k17204 in k17201 in k17198 in k17195 in k17192 in k17189 in k17186 in k17183 in k15938 in k15869 in k15676 in k15673 in k15568 in k15517 in k7924 in k7921 in k5905 in k5612 in k5609 in k5605 in k5314 in k5311 in k5308 in k5305 */
static void C_ccall f_27404(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[3],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_27404,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_27407,a[2]=((C_word*)t0)[2],tmp=(C_word)a,a+=3,tmp);
C_trace("ChickenBridge.scm: 371  hash-table-set!");
t3=C_retrieve(lf[681]);
((C_proc5)C_retrieve_proc(t3))(5,t3,t2,C_retrieve(lf[29]),lf[698],lf[699]);}

/* k27405 in k27402 in k27399 in k27396 in k27393 in k27390 in k22468 in k18948 in k18945 in k18942 in k18939 in k18528 in k18525 in k18522 in k18519 in k18516 in k17994 in k17991 in k17468 in k17465 in k17462 in k17459 in k17456 in k17453 in k17450 in k17447 in k17444 in k17441 in k17438 in k17435 in k17432 in k17429 in k17426 in k17423 in k17420 in k17417 in k17414 in k17411 in k17408 in k17269 in k17266 in k17263 in k17260 in k17204 in k17201 in k17198 in k17195 in k17192 in k17189 in k17186 in k17183 in k15938 in k15869 in k15676 in k15673 in k15568 in k15517 in k7924 in k7921 in k5905 in k5612 in k5609 in k5605 in k5314 in k5311 in k5308 in k5305 */
static void C_ccall f_27407(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[3],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_27407,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_27410,a[2]=((C_word*)t0)[2],tmp=(C_word)a,a+=3,tmp);
C_trace("ChickenBridge.scm: 371  hash-table-set!");
t3=C_retrieve(lf[681]);
((C_proc5)C_retrieve_proc(t3))(5,t3,t2,C_retrieve(lf[29]),lf[696],lf[697]);}

/* k27408 in k27405 in k27402 in k27399 in k27396 in k27393 in k27390 in k22468 in k18948 in k18945 in k18942 in k18939 in k18528 in k18525 in k18522 in k18519 in k18516 in k17994 in k17991 in k17468 in k17465 in k17462 in k17459 in k17456 in k17453 in k17450 in k17447 in k17444 in k17441 in k17438 in k17435 in k17432 in k17429 in k17426 in k17423 in k17420 in k17417 in k17414 in k17411 in k17408 in k17269 in k17266 in k17263 in k17260 in k17204 in k17201 in k17198 in k17195 in k17192 in k17189 in k17186 in k17183 in k15938 in k15869 in k15676 in k15673 in k15568 in k15517 in k7924 in k7921 in k5905 in k5612 in k5609 in k5605 in k5314 in k5311 in k5308 in k5305 */
static void C_ccall f_27410(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[3],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_27410,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_27413,a[2]=((C_word*)t0)[2],tmp=(C_word)a,a+=3,tmp);
C_trace("ChickenBridge.scm: 371  hash-table-set!");
t3=C_retrieve(lf[681]);
((C_proc5)C_retrieve_proc(t3))(5,t3,t2,C_retrieve(lf[29]),lf[694],lf[695]);}

/* k27411 in k27408 in k27405 in k27402 in k27399 in k27396 in k27393 in k27390 in k22468 in k18948 in k18945 in k18942 in k18939 in k18528 in k18525 in k18522 in k18519 in k18516 in k17994 in k17991 in k17468 in k17465 in k17462 in k17459 in k17456 in k17453 in k17450 in k17447 in k17444 in k17441 in k17438 in k17435 in k17432 in k17429 in k17426 in k17423 in k17420 in k17417 in k17414 in k17411 in k17408 in k17269 in k17266 in k17263 in k17260 in k17204 in k17201 in k17198 in k17195 in k17192 in k17189 in k17186 in k17183 in k15938 in k15869 in k15676 in k15673 in k15568 in k15517 in k7924 in k7921 in k5905 in k5612 in k5609 in k5605 in k5314 in k5311 in k5308 in k5305 */
static void C_ccall f_27413(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[3],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_27413,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_27416,a[2]=((C_word*)t0)[2],tmp=(C_word)a,a+=3,tmp);
C_trace("ChickenBridge.scm: 371  hash-table-set!");
t3=C_retrieve(lf[681]);
((C_proc5)C_retrieve_proc(t3))(5,t3,t2,C_retrieve(lf[29]),lf[692],lf[693]);}

/* k27414 in k27411 in k27408 in k27405 in k27402 in k27399 in k27396 in k27393 in k27390 in k22468 in k18948 in k18945 in k18942 in k18939 in k18528 in k18525 in k18522 in k18519 in k18516 in k17994 in k17991 in k17468 in k17465 in k17462 in k17459 in k17456 in k17453 in k17450 in k17447 in k17444 in k17441 in k17438 in k17435 in k17432 in k17429 in k17426 in k17423 in k17420 in k17417 in k17414 in k17411 in k17408 in k17269 in k17266 in k17263 in k17260 in k17204 in k17201 in k17198 in k17195 in k17192 in k17189 in k17186 in k17183 in k15938 in k15869 in k15676 in k15673 in k15568 in k15517 in k7924 in k7921 in k5905 in k5612 in k5609 in k5605 in k5314 in k5311 in k5308 in k5305 */
static void C_ccall f_27416(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[3],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_27416,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_27419,a[2]=((C_word*)t0)[2],tmp=(C_word)a,a+=3,tmp);
C_trace("ChickenBridge.scm: 371  hash-table-set!");
t3=C_retrieve(lf[681]);
((C_proc5)C_retrieve_proc(t3))(5,t3,t2,C_retrieve(lf[29]),lf[690],lf[691]);}

/* k27417 in k27414 in k27411 in k27408 in k27405 in k27402 in k27399 in k27396 in k27393 in k27390 in k22468 in k18948 in k18945 in k18942 in k18939 in k18528 in k18525 in k18522 in k18519 in k18516 in k17994 in k17991 in k17468 in k17465 in k17462 in k17459 in k17456 in k17453 in k17450 in k17447 in k17444 in k17441 in k17438 in k17435 in k17432 in k17429 in k17426 in k17423 in k17420 in k17417 in k17414 in k17411 in k17408 in k17269 in k17266 in k17263 in k17260 in k17204 in k17201 in k17198 in k17195 in k17192 in k17189 in k17186 in k17183 in k15938 in k15869 in k15676 in k15673 in k15568 in k15517 in k7924 in k7921 in k5905 in k5612 in k5609 in k5605 in k5314 in k5311 in k5308 in k5305 */
static void C_ccall f_27419(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[3],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_27419,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_27422,a[2]=((C_word*)t0)[2],tmp=(C_word)a,a+=3,tmp);
C_trace("ChickenBridge.scm: 371  hash-table-set!");
t3=C_retrieve(lf[681]);
((C_proc5)C_retrieve_proc(t3))(5,t3,t2,C_retrieve(lf[29]),lf[688],lf[689]);}

/* k27420 in k27417 in k27414 in k27411 in k27408 in k27405 in k27402 in k27399 in k27396 in k27393 in k27390 in k22468 in k18948 in k18945 in k18942 in k18939 in k18528 in k18525 in k18522 in k18519 in k18516 in k17994 in k17991 in k17468 in k17465 in k17462 in k17459 in k17456 in k17453 in k17450 in k17447 in k17444 in k17441 in k17438 in k17435 in k17432 in k17429 in k17426 in k17423 in k17420 in k17417 in k17414 in k17411 in k17408 in k17269 in k17266 in k17263 in k17260 in k17204 in k17201 in k17198 in k17195 in k17192 in k17189 in k17186 in k17183 in k15938 in k15869 in k15676 in k15673 in k15568 in k15517 in k7924 in k7921 in k5905 in k5612 in k5609 in k5605 in k5314 in k5311 in k5308 in k5305 */
static void C_ccall f_27422(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[12],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_27422,2,t0,t1);}
t2=C_mutate((C_word*)lf[628]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_27424,a[2]=((C_word)li422),tmp=(C_word)a,a+=3,tmp));
t3=C_mutate((C_word*)lf[629]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_27481,a[2]=((C_word)li424),tmp=(C_word)a,a+=3,tmp));
t4=C_mutate((C_word*)lf[630]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_27538,a[2]=((C_word)li426),tmp=(C_word)a,a+=3,tmp));
t5=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_27547,a[2]=((C_word*)t0)[2],tmp=(C_word)a,a+=3,tmp);
C_trace("ChickenBridge.scm: 372  hash-table-set!");
t6=C_retrieve(lf[681]);
((C_proc5)C_retrieve_proc(t6))(5,t6,t5,C_retrieve(lf[29]),lf[686],lf[687]);}

/* k27545 in k27420 in k27417 in k27414 in k27411 in k27408 in k27405 in k27402 in k27399 in k27396 in k27393 in k27390 in k22468 in k18948 in k18945 in k18942 in k18939 in k18528 in k18525 in k18522 in k18519 in k18516 in k17994 in k17991 in k17468 in k17465 in k17462 in k17459 in k17456 in k17453 in k17450 in k17447 in k17444 in k17441 in k17438 in k17435 in k17432 in k17429 in k17426 in k17423 in k17420 in k17417 in k17414 in k17411 in k17408 in k17269 in k17266 in k17263 in k17260 in k17204 in k17201 in k17198 in k17195 in k17192 in k17189 in k17186 in k17183 in k15938 in k15869 in k15676 in k15673 in k15568 in k15517 in k7924 in k7921 in k5905 in k5612 in k5609 in k5605 in k5314 in k5311 in k5308 in k5305 */
static void C_ccall f_27547(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[3],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_27547,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_27550,a[2]=((C_word*)t0)[2],tmp=(C_word)a,a+=3,tmp);
C_trace("ChickenBridge.scm: 372  hash-table-set!");
t3=C_retrieve(lf[681]);
((C_proc5)C_retrieve_proc(t3))(5,t3,t2,C_retrieve(lf[29]),lf[684],lf[685]);}

/* k27548 in k27545 in k27420 in k27417 in k27414 in k27411 in k27408 in k27405 in k27402 in k27399 in k27396 in k27393 in k27390 in k22468 in k18948 in k18945 in k18942 in k18939 in k18528 in k18525 in k18522 in k18519 in k18516 in k17994 in k17991 in k17468 in k17465 in k17462 in k17459 in k17456 in k17453 in k17450 in k17447 in k17444 in k17441 in k17438 in k17435 in k17432 in k17429 in k17426 in k17423 in k17420 in k17417 in k17414 in k17411 in k17408 in k17269 in k17266 in k17263 in k17260 in k17204 in k17201 in k17198 in k17195 in k17192 in k17189 in k17186 in k17183 in k15938 in k15869 in k15676 in k15673 in k15568 in k15517 in k7924 in k7921 in k5905 in k5612 in k5609 in k5605 in k5314 in k5311 in k5308 in k5305 */
static void C_ccall f_27550(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[3],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_27550,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_27553,a[2]=((C_word*)t0)[2],tmp=(C_word)a,a+=3,tmp);
C_trace("ChickenBridge.scm: 372  hash-table-set!");
t3=C_retrieve(lf[681]);
((C_proc5)C_retrieve_proc(t3))(5,t3,t2,C_retrieve(lf[29]),lf[682],lf[683]);}

/* k27551 in k27548 in k27545 in k27420 in k27417 in k27414 in k27411 in k27408 in k27405 in k27402 in k27399 in k27396 in k27393 in k27390 in k22468 in k18948 in k18945 in k18942 in k18939 in k18528 in k18525 in k18522 in k18519 in k18516 in k17994 in k17991 in k17468 in k17465 in k17462 in k17459 in k17456 in k17453 in k17450 in k17447 in k17444 in k17441 in k17438 in k17435 in k17432 in k17429 in k17426 in k17423 in k17420 in k17417 in k17414 in k17411 in k17408 in k17269 in k17266 in k17263 in k17260 in k17204 in k17201 in k17198 in k17195 in k17192 in k17189 in k17186 in k17183 in k15938 in k15869 in k15676 in k15673 in k15568 in k15517 in k7924 in k7921 in k5905 in k5612 in k5609 in k5605 in k5314 in k5311 in k5308 in k5305 */
static void C_ccall f_27553(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word t14;
C_word t15;
C_word t16;
C_word t17;
C_word t18;
C_word t19;
C_word t20;
C_word t21;
C_word ab[54],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_27553,2,t0,t1);}
t2=C_mutate((C_word*)lf[631]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_27555,a[2]=((C_word)li429),tmp=(C_word)a,a+=3,tmp));
t3=C_mutate((C_word*)lf[360]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_27745,a[2]=((C_word)li430),tmp=(C_word)a,a+=3,tmp));
t4=C_mutate((C_word*)lf[349]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_27759,a[2]=((C_word)li431),tmp=(C_word)a,a+=3,tmp));
t5=C_mutate((C_word*)lf[639]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_27773,a[2]=((C_word)li432),tmp=(C_word)a,a+=3,tmp));
t6=C_mutate((C_word*)lf[640]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_27776,a[2]=((C_word)li433),tmp=(C_word)a,a+=3,tmp));
t7=C_mutate(&lf[641],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_27788,a[2]=((C_word)li435),tmp=(C_word)a,a+=3,tmp));
t8=C_mutate(&lf[643],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_27797,a[2]=((C_word)li437),tmp=(C_word)a,a+=3,tmp));
t9=C_mutate(&lf[644],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_27841,a[2]=((C_word)li439),tmp=(C_word)a,a+=3,tmp));
t10=C_mutate((C_word*)lf[371]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_27863,a[2]=((C_word)li441),tmp=(C_word)a,a+=3,tmp));
t11=C_mutate((C_word*)lf[645]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_27882,a[2]=((C_word)li448),tmp=(C_word)a,a+=3,tmp));
t12=C_mutate((C_word*)lf[648]+1,C_retrieve(lf[640]));
t13=C_mutate((C_word*)lf[649]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_28050,a[2]=((C_word)li450),tmp=(C_word)a,a+=3,tmp));
t14=C_mutate((C_word*)lf[655]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_28113,a[2]=((C_word)li452),tmp=(C_word)a,a+=3,tmp));
t15=C_mutate((C_word*)lf[656]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_28122,a[2]=((C_word)li454),tmp=(C_word)a,a+=3,tmp));
t16=C_mutate((C_word*)lf[657]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_28128,a[2]=((C_word)li456),tmp=(C_word)a,a+=3,tmp));
t17=C_mutate((C_word*)lf[658]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_28137,a[2]=((C_word)li458),tmp=(C_word)a,a+=3,tmp));
t18=C_mutate((C_word*)lf[660]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_28195,a[2]=((C_word)li460),tmp=(C_word)a,a+=3,tmp));
t19=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_28205,a[2]=((C_word*)t0)[2],tmp=(C_word)a,a+=3,tmp);
t20=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_28666,a[2]=((C_word)li463),tmp=(C_word)a,a+=3,tmp);
C_trace("ChickenBridge.scm: 547  ##sys#register-macro");
t21=C_retrieve(lf[679]);
((C_proc4)C_retrieve_proc(t21))(4,t21,t19,lf[680],t20);}

/* a28665 in k27551 in k27548 in k27545 in k27420 in k27417 in k27414 in k27411 in k27408 in k27405 in k27402 in k27399 in k27396 in k27393 in k27390 in k22468 in k18948 in k18945 in k18942 in k18939 in k18528 in k18525 in k18522 in k18519 in k18516 in k17994 in k17991 in k17468 in k17465 in k17462 in k17459 in k17456 in k17453 in k17450 in k17447 in k17444 in k17441 in k17438 in k17435 in k17432 in k17429 in k17426 in k17423 in k17420 in k17417 in k17414 in k17411 in k17408 in k17269 in k17266 in k17263 in k17260 in k17204 in k17201 in k17198 in k17195 in k17192 in k17189 in k17186 in k17183 in k15938 in k15869 in k15676 in k15673 in k15568 in k15517 in k7924 in k7921 in k5905 in k5612 in k5609 in k5605 in k5314 in k5311 in k5308 in k5305 */
static void C_ccall f_28666(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,...){
C_word tmp;
C_word t4;
va_list v;
C_word *a,c2=c;
C_save_rest(t3,c2,4);
if(c<4) C_bad_min_argc_2(c,4,t0);
C_check_for_interrupt;
if(!C_demand(c*C_SIZEOF_PAIR+17)){
C_save_and_reclaim((void*)tr4r,(void*)f_28666r,4,t0,t1,t2,t3);}
else{
a=C_alloc((c-4)*3);
t4=C_restore_rest(a,C_rest_count(0));
f_28666r(t0,t1,t2,t3,t4);}}

static void C_ccall f_28666r(C_word t0,C_word t1,C_word t2,C_word t3,C_word t4){
C_word tmp;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word t14;
C_word *a=C_alloc(17);
t5=t4;
t6=(*a=C_VECTOR_TYPE|1,a[1]=t5,tmp=(C_word)a,a+=2,tmp);
t7=C_SCHEME_END_OF_LIST;
t8=(*a=C_VECTOR_TYPE|1,a[1]=t7,tmp=(C_word)a,a+=2,tmp);
t9=C_SCHEME_END_OF_LIST;
t10=(*a=C_VECTOR_TYPE|1,a[1]=t9,tmp=(C_word)a,a+=2,tmp);
t11=C_SCHEME_END_OF_LIST;
t12=(*a=C_VECTOR_TYPE|1,a[1]=t11,tmp=(C_word)a,a+=2,tmp);
t13=(*a=C_CLOSURE_TYPE|8,a[1]=(C_word)f_28220,a[2]=t2,a[3]=t12,a[4]=t6,a[5]=t10,a[6]=t1,a[7]=t8,a[8]=t3,tmp=(C_word)a,a+=9,tmp);
if(C_truep((C_word)C_i_listp(t2))){
t14=t13;
f_28220(2,t14,C_SCHEME_UNDEFINED);}
else{
C_trace("ChickenBridge.scm: 556  error");
t14=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t14))(4,t14,t13,lf[678],t2);}}

/* k28218 in a28665 in k27551 in k27548 in k27545 in k27420 in k27417 in k27414 in k27411 in k27408 in k27405 in k27402 in k27399 in k27396 in k27393 in k27390 in k22468 in k18948 in k18945 in k18942 in k18939 in k18528 in k18525 in k18522 in k18519 in k18516 in k17994 in k17991 in k17468 in k17465 in k17462 in k17459 in k17456 in k17453 in k17450 in k17447 in k17444 in k17441 in k17438 in k17435 in k17432 in k17429 in k17426 in k17423 in k17420 in k17417 in k17414 in k17411 in k17408 in k17269 in k17266 in k17263 in k17260 in k17204 in k17201 in k17198 in k17195 in k17192 in k17189 in k17186 in k17183 in k15938 in k15869 in k15676 in k15673 in k15568 in k15517 in k7924 in k7921 in k5905 in k5612 in k5609 in k5605 in k5314 in k5311 in k5308 in k5305 */
static void C_ccall f_28220(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_28220,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|8,a[1]=(C_word)f_28223,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],a[7]=((C_word*)t0)[7],a[8]=((C_word*)t0)[8],tmp=(C_word)a,a+=9,tmp);
if(C_truep((C_word)C_i_listp(((C_word*)t0)[8]))){
if(C_truep((C_word)C_i_nullp(((C_word*)t0)[8]))){
C_trace("ChickenBridge.scm: 560  error");
t3=*((C_word*)lf[4]+1);
((C_proc3)C_retrieve_proc(t3))(3,t3,t2,lf[676]);}
else{
t3=t2;
f_28223(2,t3,C_SCHEME_UNDEFINED);}}
else{
C_trace("ChickenBridge.scm: 558  error");
t3=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t3))(4,t3,t2,lf[677],((C_word*)t0)[8]);}}

/* k28221 in k28218 in a28665 in k27551 in k27548 in k27545 in k27420 in k27417 in k27414 in k27411 in k27408 in k27405 in k27402 in k27399 in k27396 in k27393 in k27390 in k22468 in k18948 in k18945 in k18942 in k18939 in k18528 in k18525 in k18522 in k18519 in k18516 in k17994 in k17991 in k17468 in k17465 in k17462 in k17459 in k17456 in k17453 in k17450 in k17447 in k17444 in k17441 in k17438 in k17435 in k17432 in k17429 in k17426 in k17423 in k17420 in k17417 in k17414 in k17411 in k17408 in k17269 in k17266 in k17263 in k17260 in k17204 in k17201 in k17198 in k17195 in k17192 in k17189 in k17186 in k17183 in k15938 in k15869 in k15676 in k15673 in k15568 in k15517 in k7924 in k7921 in k5905 in k5612 in k5609 in k5605 in k5314 in k5311 in k5308 in k5305 */
static void C_ccall f_28223(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[17],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_28223,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_28226,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],a[7]=((C_word*)t0)[8],tmp=(C_word)a,a+=8,tmp);
t3=C_SCHEME_UNDEFINED;
t4=(*a=C_VECTOR_TYPE|1,a[1]=t3,tmp=(C_word)a,a+=2,tmp);
t5=C_set_block_item(t4,0,(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_28501,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[5],a[4]=((C_word*)t0)[7],a[5]=t4,a[6]=((C_word)li462),tmp=(C_word)a,a+=7,tmp));
t6=((C_word*)t4)[1];
f_28501(t6,t2,((C_word*)t0)[2]);}

/* do5227 in k28221 in k28218 in a28665 in k27551 in k27548 in k27545 in k27420 in k27417 in k27414 in k27411 in k27408 in k27405 in k27402 in k27399 in k27396 in k27393 in k27390 in k22468 in k18948 in k18945 in k18942 in k18939 in k18528 in k18525 in k18522 in k18519 in k18516 in k17994 in k17991 in k17468 in k17465 in k17462 in k17459 in k17456 in k17453 in k17450 in k17447 in k17444 in k17441 in k17438 in k17435 in k17432 in k17429 in k17426 in k17423 in k17420 in k17417 in k17414 in k17411 in k17408 in k17269 in k17266 in k17263 in k17260 in k17204 in k17201 in k17198 in k17195 in k17192 in k17189 in k17186 in k17183 in k15938 in k15869 in k15676 in k15673 in k15568 in k15517 in k7924 in k7921 in k5905 in k5612 in k5609 in k5605 in k5314 in k5311 in k5308 in k5305 */
static void C_fcall f_28501(C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word ab[16],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_28501,NULL,3,t0,t1,t2);}
if(C_truep((C_word)C_i_nullp(t2))){
t3=t1;
((C_proc2)(void*)(*((C_word*)t3+1)))(2,t3,C_SCHEME_FALSE);}
else{
t3=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_28511,a[2]=t1,a[3]=((C_word*)t0)[5],a[4]=t2,tmp=(C_word)a,a+=5,tmp);
t4=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_28521,a[2]=t3,a[3]=((C_word*)t0)[2],a[4]=((C_word*)t0)[3],a[5]=((C_word*)t0)[4],a[6]=t2,tmp=(C_word)a,a+=7,tmp);
t5=(C_word)C_i_car(t2);
if(C_truep((C_word)C_i_pairp(t5))){
t6=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_28609,a[2]=t4,a[3]=t2,tmp=(C_word)a,a+=4,tmp);
t7=(C_word)C_i_car(t2);
t8=(C_word)C_i_length(t7);
C_trace("ChickenBridge.scm: 564  <");
C_lessp(5,0,t6,C_fix(0),t8,C_fix(4));}
else{
t6=t4;
f_28521(t6,C_SCHEME_FALSE);}}}

/* k28607 in do5227 in k28221 in k28218 in a28665 in k27551 in k27548 in k27545 in k27420 in k27417 in k27414 in k27411 in k27408 in k27405 in k27402 in k27399 in k27396 in k27393 in k27390 in k22468 in k18948 in k18945 in k18942 in k18939 in k18528 in k18525 in k18522 in k18519 in k18516 in k17994 in k17991 in k17468 in k17465 in k17462 in k17459 in k17456 in k17453 in k17450 in k17447 in k17444 in k17441 in k17438 in k17435 in k17432 in k17429 in k17426 in k17423 in k17420 in k17417 in k17414 in k17411 in k17408 in k17269 in k17266 in k17263 in k17260 in k17204 in k17201 in k17198 in k17195 in k17192 in k17189 in k17186 in k17183 in k15938 in k15869 in k15676 in k15673 in k15568 in k15517 in k7924 in k7921 in k5905 in k5612 in k5609 in k5605 in k5314 in k5311 in k5308 in k5305 */
static void C_ccall f_28609(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word *a;
if(C_truep(t1)){
t2=(C_word)C_i_car(((C_word*)t0)[3]);
t3=(C_word)C_i_car(t2);
t4=((C_word*)t0)[2];
f_28521(t4,(C_word)C_i_symbolp(t3));}
else{
t2=((C_word*)t0)[2];
f_28521(t2,C_SCHEME_FALSE);}}

/* k28519 in do5227 in k28221 in k28218 in a28665 in k27551 in k27548 in k27545 in k27420 in k27417 in k27414 in k27411 in k27408 in k27405 in k27402 in k27399 in k27396 in k27393 in k27390 in k22468 in k18948 in k18945 in k18942 in k18939 in k18528 in k18525 in k18522 in k18519 in k18516 in k17994 in k17991 in k17468 in k17465 in k17462 in k17459 in k17456 in k17453 in k17450 in k17447 in k17444 in k17441 in k17438 in k17435 in k17432 in k17429 in k17426 in k17423 in k17420 in k17417 in k17414 in k17411 in k17408 in k17269 in k17266 in k17263 in k17260 in k17204 in k17201 in k17198 in k17195 in k17192 in k17189 in k17186 in k17183 in k15938 in k15869 in k15676 in k15673 in k15568 in k15517 in k7924 in k7921 in k5905 in k5612 in k5609 in k5605 in k5314 in k5311 in k5308 in k5305 */
static void C_fcall f_28521(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word ab[8],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_28521,NULL,2,t0,t1);}
if(C_truep(t1)){
t2=(C_word)C_i_car(((C_word*)t0)[6]);
t3=(C_word)C_i_car(t2);
t4=(C_word)C_i_car(((C_word*)t0)[6]);
t5=(C_word)C_i_cadr(t4);
t6=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_28530,a[2]=t5,a[3]=t3,a[4]=((C_word*)t0)[2],a[5]=((C_word*)t0)[3],a[6]=((C_word*)t0)[4],a[7]=((C_word*)t0)[5],tmp=(C_word)a,a+=8,tmp);
t7=(C_word)C_i_car(((C_word*)t0)[6]);
t8=(C_word)C_i_cddr(t7);
if(C_truep((C_word)C_i_nullp(t8))){
t9=t6;
f_28530(t9,lf[674]);}
else{
t9=(C_word)C_i_car(((C_word*)t0)[6]);
t10=t6;
f_28530(t10,(C_word)C_i_caddr(t9));}}
else{
t2=(C_word)C_i_car(((C_word*)t0)[6]);
C_trace("ChickenBridge.scm: 577  error");
t3=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t3))(4,t3,((C_word*)t0)[2],lf[675],t2);}}

/* k28528 in k28519 in do5227 in k28221 in k28218 in a28665 in k27551 in k27548 in k27545 in k27420 in k27417 in k27414 in k27411 in k27408 in k27405 in k27402 in k27399 in k27396 in k27393 in k27390 in k22468 in k18948 in k18945 in k18942 in k18939 in k18528 in k18525 in k18522 in k18519 in k18516 in k17994 in k17991 in k17468 in k17465 in k17462 in k17459 in k17456 in k17453 in k17450 in k17447 in k17444 in k17441 in k17438 in k17435 in k17432 in k17429 in k17426 in k17423 in k17420 in k17417 in k17414 in k17411 in k17408 in k17269 in k17266 in k17263 in k17260 in k17204 in k17201 in k17198 in k17195 in k17192 in k17189 in k17186 in k17183 in k15938 in k15869 in k15676 in k15673 in k15568 in k15517 in k7924 in k7921 in k5905 in k5612 in k5609 in k5605 in k5314 in k5311 in k5308 in k5305 */
static void C_fcall f_28530(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[12],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_28530,NULL,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|8,a[1]=(C_word)f_28534,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=t1,a[5]=((C_word*)t0)[4],a[6]=((C_word*)t0)[5],a[7]=((C_word*)t0)[6],a[8]=((C_word*)t0)[7],tmp=(C_word)a,a+=9,tmp);
t3=(C_word)C_a_i_list(&a,1,((C_word*)t0)[3]);
C_trace("ChickenBridge.scm: 572  append");
t4=*((C_word*)lf[18]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,((C_word*)((C_word*)t0)[7])[1],t3);}

/* k28532 in k28528 in k28519 in do5227 in k28221 in k28218 in a28665 in k27551 in k27548 in k27545 in k27420 in k27417 in k27414 in k27411 in k27408 in k27405 in k27402 in k27399 in k27396 in k27393 in k27390 in k22468 in k18948 in k18945 in k18942 in k18939 in k18528 in k18525 in k18522 in k18519 in k18516 in k17994 in k17991 in k17468 in k17465 in k17462 in k17459 in k17456 in k17453 in k17450 in k17447 in k17444 in k17441 in k17438 in k17435 in k17432 in k17429 in k17426 in k17423 in k17420 in k17417 in k17414 in k17411 in k17408 in k17269 in k17266 in k17263 in k17260 in k17204 in k17201 in k17198 in k17195 in k17192 in k17189 in k17186 in k17183 in k15938 in k15869 in k15676 in k15673 in k15568 in k15517 in k7924 in k7921 in k5905 in k5612 in k5609 in k5605 in k5314 in k5311 in k5308 in k5305 */
static void C_ccall f_28534(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[10],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_28534,2,t0,t1);}
t2=C_mutate(((C_word *)((C_word*)t0)[8])+1,t1);
t3=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_28538,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t4=(C_word)C_a_i_list(&a,1,((C_word*)t0)[2]);
C_trace("ChickenBridge.scm: 573  append");
t5=*((C_word*)lf[18]+1);
((C_proc4)C_retrieve_proc(t5))(4,t5,t3,((C_word*)((C_word*)t0)[7])[1],t4);}

/* k28536 in k28532 in k28528 in k28519 in do5227 in k28221 in k28218 in a28665 in k27551 in k27548 in k27545 in k27420 in k27417 in k27414 in k27411 in k27408 in k27405 in k27402 in k27399 in k27396 in k27393 in k27390 in k22468 in k18948 in k18945 in k18942 in k18939 in k18528 in k18525 in k18522 in k18519 in k18516 in k17994 in k17991 in k17468 in k17465 in k17462 in k17459 in k17456 in k17453 in k17450 in k17447 in k17444 in k17441 in k17438 in k17435 in k17432 in k17429 in k17426 in k17423 in k17420 in k17417 in k17414 in k17411 in k17408 in k17269 in k17266 in k17263 in k17260 in k17204 in k17201 in k17198 in k17195 in k17192 in k17189 in k17186 in k17183 in k15938 in k15869 in k15676 in k15673 in k15568 in k15517 in k7924 in k7921 in k5905 in k5612 in k5609 in k5605 in k5314 in k5311 in k5308 in k5305 */
static void C_ccall f_28538(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word ab[20],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_28538,2,t0,t1);}
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_28542,a[2]=((C_word*)t0)[4],a[3]=((C_word*)t0)[5],tmp=(C_word)a,a+=4,tmp);
t4=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_28546,a[2]=((C_word*)t0)[5],a[3]=t3,tmp=(C_word)a,a+=4,tmp);
t5=(C_word)C_eqp(((C_word*)t0)[3],lf[674]);
if(C_truep(t5)){
t6=t4;
f_28546(t6,C_SCHEME_END_OF_LIST);}
else{
t6=(C_word)C_a_i_list(&a,3,lf[12],((C_word*)t0)[2],((C_word*)t0)[3]);
t7=t4;
f_28546(t7,(C_word)C_a_i_list(&a,1,t6));}}

/* k28544 in k28536 in k28532 in k28528 in k28519 in do5227 in k28221 in k28218 in a28665 in k27551 in k27548 in k27545 in k27420 in k27417 in k27414 in k27411 in k27408 in k27405 in k27402 in k27399 in k27396 in k27393 in k27390 in k22468 in k18948 in k18945 in k18942 in k18939 in k18528 in k18525 in k18522 in k18519 in k18516 in k17994 in k17991 in k17468 in k17465 in k17462 in k17459 in k17456 in k17453 in k17450 in k17447 in k17444 in k17441 in k17438 in k17435 in k17432 in k17429 in k17426 in k17423 in k17420 in k17417 in k17414 in k17411 in k17408 in k17269 in k17266 in k17263 in k17260 in k17204 in k17201 in k17198 in k17195 in k17192 in k17189 in k17186 in k17183 in k15938 in k15869 in k15676 in k15673 in k15568 in k15517 in k7924 in k7921 in k5905 in k5612 in k5609 in k5605 in k5314 in k5311 in k5308 in k5305 */
static void C_fcall f_28546(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 574  append");
t2=*((C_word*)lf[18]+1);
((C_proc4)C_retrieve_proc(t2))(4,t2,((C_word*)t0)[3],((C_word*)((C_word*)t0)[2])[1],t1);}

/* k28540 in k28536 in k28532 in k28528 in k28519 in do5227 in k28221 in k28218 in a28665 in k27551 in k27548 in k27545 in k27420 in k27417 in k27414 in k27411 in k27408 in k27405 in k27402 in k27399 in k27396 in k27393 in k27390 in k22468 in k18948 in k18945 in k18942 in k18939 in k18528 in k18525 in k18522 in k18519 in k18516 in k17994 in k17991 in k17468 in k17465 in k17462 in k17459 in k17456 in k17453 in k17450 in k17447 in k17444 in k17441 in k17438 in k17435 in k17432 in k17429 in k17426 in k17423 in k17420 in k17417 in k17414 in k17411 in k17408 in k17269 in k17266 in k17263 in k17260 in k17204 in k17201 in k17198 in k17195 in k17192 in k17189 in k17186 in k17183 in k15938 in k15869 in k15676 in k15673 in k15568 in k15517 in k7924 in k7921 in k5905 in k5612 in k5609 in k5605 in k5314 in k5311 in k5308 in k5305 */
static void C_ccall f_28542(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[3])+1,t1);
t3=((C_word*)t0)[2];
f_28511(2,t3,t2);}

/* k28509 in do5227 in k28221 in k28218 in a28665 in k27551 in k27548 in k27545 in k27420 in k27417 in k27414 in k27411 in k27408 in k27405 in k27402 in k27399 in k27396 in k27393 in k27390 in k22468 in k18948 in k18945 in k18942 in k18939 in k18528 in k18525 in k18522 in k18519 in k18516 in k17994 in k17991 in k17468 in k17465 in k17462 in k17459 in k17456 in k17453 in k17450 in k17447 in k17444 in k17441 in k17438 in k17435 in k17432 in k17429 in k17426 in k17423 in k17420 in k17417 in k17414 in k17411 in k17408 in k17269 in k17266 in k17263 in k17260 in k17204 in k17201 in k17198 in k17195 in k17192 in k17189 in k17186 in k17183 in k15938 in k15869 in k15676 in k15673 in k15568 in k15517 in k7924 in k7921 in k5905 in k5612 in k5609 in k5605 in k5314 in k5311 in k5308 in k5305 */
static void C_ccall f_28511(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word *a;
t2=(C_word)C_i_cdr(((C_word*)t0)[4]);
t3=((C_word*)((C_word*)t0)[3])[1];
f_28501(t3,((C_word*)t0)[2],t2);}

/* k28224 in k28221 in k28218 in a28665 in k27551 in k27548 in k27545 in k27420 in k27417 in k27414 in k27411 in k27408 in k27405 in k27402 in k27399 in k27396 in k27393 in k27390 in k22468 in k18948 in k18945 in k18942 in k18939 in k18528 in k18525 in k18522 in k18519 in k18516 in k17994 in k17991 in k17468 in k17465 in k17462 in k17459 in k17456 in k17453 in k17450 in k17447 in k17444 in k17441 in k17438 in k17435 in k17432 in k17429 in k17426 in k17423 in k17420 in k17417 in k17414 in k17411 in k17408 in k17269 in k17266 in k17263 in k17260 in k17204 in k17201 in k17198 in k17195 in k17192 in k17189 in k17186 in k17183 in k15938 in k15869 in k15676 in k15673 in k15568 in k15517 in k7924 in k7921 in k5905 in k5612 in k5609 in k5605 in k5314 in k5311 in k5308 in k5305 */
static void C_ccall f_28226(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[8],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_28226,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_28229,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],a[7]=((C_word*)t0)[7],tmp=(C_word)a,a+=8,tmp);
C_trace("ChickenBridge.scm: 579  gensym");
t3=C_retrieve(lf[26]);
((C_proc2)C_retrieve_proc(t3))(2,t3,t2);}

/* k28227 in k28224 in k28221 in k28218 in a28665 in k27551 in k27548 in k27545 in k27420 in k27417 in k27414 in k27411 in k27408 in k27405 in k27402 in k27399 in k27396 in k27393 in k27390 in k22468 in k18948 in k18945 in k18942 in k18939 in k18528 in k18525 in k18522 in k18519 in k18516 in k17994 in k17991 in k17468 in k17465 in k17462 in k17459 in k17456 in k17453 in k17450 in k17447 in k17444 in k17441 in k17438 in k17435 in k17432 in k17429 in k17426 in k17423 in k17420 in k17417 in k17414 in k17411 in k17408 in k17269 in k17266 in k17263 in k17260 in k17204 in k17201 in k17198 in k17195 in k17192 in k17189 in k17186 in k17183 in k15938 in k15869 in k15676 in k15673 in k15568 in k15517 in k7924 in k7921 in k5905 in k5612 in k5609 in k5605 in k5314 in k5311 in k5308 in k5305 */
static void C_ccall f_28229(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_28229,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|8,a[1]=(C_word)f_28232,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],a[7]=t1,a[8]=((C_word*)t0)[7],tmp=(C_word)a,a+=9,tmp);
C_trace("ChickenBridge.scm: 580  gensym");
t3=C_retrieve(lf[26]);
((C_proc2)C_retrieve_proc(t3))(2,t3,t2);}

/* k28230 in k28227 in k28224 in k28221 in k28218 in a28665 in k27551 in k27548 in k27545 in k27420 in k27417 in k27414 in k27411 in k27408 in k27405 in k27402 in k27399 in k27396 in k27393 in k27390 in k22468 in k18948 in k18945 in k18942 in k18939 in k18528 in k18525 in k18522 in k18519 in k18516 in k17994 in k17991 in k17468 in k17465 in k17462 in k17459 in k17456 in k17453 in k17450 in k17447 in k17444 in k17441 in k17438 in k17435 in k17432 in k17429 in k17426 in k17423 in k17420 in k17417 in k17414 in k17411 in k17408 in k17269 in k17266 in k17263 in k17260 in k17204 in k17201 in k17198 in k17195 in k17192 in k17189 in k17186 in k17183 in k15938 in k15869 in k15676 in k15673 in k15568 in k15517 in k7924 in k7921 in k5905 in k5612 in k5609 in k5605 in k5314 in k5311 in k5308 in k5305 */
static void C_ccall f_28232(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[10],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_28232,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|9,a[1]=(C_word)f_28235,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],a[7]=t1,a[8]=((C_word*)t0)[7],a[9]=((C_word*)t0)[8],tmp=(C_word)a,a+=10,tmp);
C_trace("ChickenBridge.scm: 581  gensym");
t3=C_retrieve(lf[26]);
((C_proc2)C_retrieve_proc(t3))(2,t3,t2);}

/* k28233 in k28230 in k28227 in k28224 in k28221 in k28218 in a28665 in k27551 in k27548 in k27545 in k27420 in k27417 in k27414 in k27411 in k27408 in k27405 in k27402 in k27399 in k27396 in k27393 in k27390 in k22468 in k18948 in k18945 in k18942 in k18939 in k18528 in k18525 in k18522 in k18519 in k18516 in k17994 in k17991 in k17468 in k17465 in k17462 in k17459 in k17456 in k17453 in k17450 in k17447 in k17444 in k17441 in k17438 in k17435 in k17432 in k17429 in k17426 in k17423 in k17420 in k17417 in k17414 in k17411 in k17408 in k17269 in k17266 in k17263 in k17260 in k17204 in k17201 in k17198 in k17195 in k17192 in k17189 in k17186 in k17183 in k15938 in k15869 in k15676 in k15673 in k15568 in k15517 in k7924 in k7921 in k5905 in k5612 in k5609 in k5605 in k5314 in k5311 in k5308 in k5305 */
static void C_ccall f_28235(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[11],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_28235,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|10,a[1]=(C_word)f_28238,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=t1,a[5]=((C_word*)t0)[4],a[6]=((C_word*)t0)[5],a[7]=((C_word*)t0)[6],a[8]=((C_word*)t0)[7],a[9]=((C_word*)t0)[8],a[10]=((C_word*)t0)[9],tmp=(C_word)a,a+=11,tmp);
C_trace("ChickenBridge.scm: 582  gensym");
t3=C_retrieve(lf[26]);
((C_proc2)C_retrieve_proc(t3))(2,t3,t2);}

/* k28236 in k28233 in k28230 in k28227 in k28224 in k28221 in k28218 in a28665 in k27551 in k27548 in k27545 in k27420 in k27417 in k27414 in k27411 in k27408 in k27405 in k27402 in k27399 in k27396 in k27393 in k27390 in k22468 in k18948 in k18945 in k18942 in k18939 in k18528 in k18525 in k18522 in k18519 in k18516 in k17994 in k17991 in k17468 in k17465 in k17462 in k17459 in k17456 in k17453 in k17450 in k17447 in k17444 in k17441 in k17438 in k17435 in k17432 in k17429 in k17426 in k17423 in k17420 in k17417 in k17414 in k17411 in k17408 in k17269 in k17266 in k17263 in k17260 in k17204 in k17201 in k17198 in k17195 in k17192 in k17189 in k17186 in k17183 in k15938 in k15869 in k15676 in k15673 in k15568 in k15517 in k7924 in k7921 in k5905 in k5612 in k5609 in k5605 in k5314 in k5311 in k5308 in k5305 */
static void C_ccall f_28238(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word ab[26],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_28238,2,t0,t1);}
t2=C_SCHEME_TRUE;
t3=(*a=C_VECTOR_TYPE|1,a[1]=t2,tmp=(C_word)a,a+=2,tmp);
t4=C_SCHEME_END_OF_LIST;
t5=(*a=C_VECTOR_TYPE|1,a[1]=t4,tmp=(C_word)a,a+=2,tmp);
t6=(*a=C_CLOSURE_TYPE|13,a[1]=(C_word)f_28241,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=t1,a[6]=t3,a[7]=((C_word*)t0)[5],a[8]=((C_word*)t0)[6],a[9]=((C_word*)t0)[7],a[10]=((C_word*)t0)[8],a[11]=((C_word*)t0)[9],a[12]=t5,a[13]=((C_word*)t0)[10],tmp=(C_word)a,a+=14,tmp);
t7=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_28394,a[2]=t6,a[3]=t3,a[4]=((C_word*)t0)[3],tmp=(C_word)a,a+=5,tmp);
if(C_truep((C_word)C_i_pairp(((C_word*)((C_word*)t0)[3])[1]))){
t8=(C_word)C_i_car(((C_word*)((C_word*)t0)[3])[1]);
if(C_truep((C_word)C_i_pairp(t8))){
t9=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_28495,a[2]=t7,tmp=(C_word)a,a+=3,tmp);
C_trace("ChickenBridge.scm: 588  caar");
t10=*((C_word*)lf[671]+1);
((C_proc3)C_retrieve_proc(t10))(3,t10,t9,((C_word*)((C_word*)t0)[3])[1]);}
else{
t9=t7;
f_28394(t9,C_SCHEME_FALSE);}}
else{
t8=t7;
f_28394(t8,C_SCHEME_FALSE);}}

/* k28493 in k28236 in k28233 in k28230 in k28227 in k28224 in k28221 in k28218 in a28665 in k27551 in k27548 in k27545 in k27420 in k27417 in k27414 in k27411 in k27408 in k27405 in k27402 in k27399 in k27396 in k27393 in k27390 in k22468 in k18948 in k18945 in k18942 in k18939 in k18528 in k18525 in k18522 in k18519 in k18516 in k17994 in k17991 in k17468 in k17465 in k17462 in k17459 in k17456 in k17453 in k17450 in k17447 in k17444 in k17441 in k17438 in k17435 in k17432 in k17429 in k17426 in k17423 in k17420 in k17417 in k17414 in k17411 in k17408 in k17269 in k17266 in k17263 in k17260 in k17204 in k17201 in k17198 in k17195 in k17192 in k17189 in k17186 in k17183 in k15938 in k15869 in k15676 in k15673 in k15568 in k15517 in k7924 in k7921 in k5905 in k5612 in k5609 in k5605 in k5314 in k5311 in k5308 in k5305 */
static void C_ccall f_28495(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
t2=((C_word*)t0)[2];
f_28394(t2,(C_word)C_eqp(t1,lf[673]));}

/* k28392 in k28236 in k28233 in k28230 in k28227 in k28224 in k28221 in k28218 in a28665 in k27551 in k27548 in k27545 in k27420 in k27417 in k27414 in k27411 in k27408 in k27405 in k27402 in k27399 in k27396 in k27393 in k27390 in k22468 in k18948 in k18945 in k18942 in k18939 in k18528 in k18525 in k18522 in k18519 in k18516 in k17994 in k17991 in k17468 in k17465 in k17462 in k17459 in k17456 in k17453 in k17450 in k17447 in k17444 in k17441 in k17438 in k17435 in k17432 in k17429 in k17426 in k17423 in k17420 in k17417 in k17414 in k17411 in k17408 in k17269 in k17266 in k17263 in k17260 in k17204 in k17201 in k17198 in k17195 in k17192 in k17189 in k17186 in k17183 in k15938 in k15869 in k15676 in k15673 in k15568 in k15517 in k7924 in k7921 in k5905 in k5612 in k5609 in k5605 in k5314 in k5311 in k5308 in k5305 */
static void C_fcall f_28394(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[5],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_28394,NULL,2,t0,t1);}
if(C_truep(t1)){
t2=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_28401,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],tmp=(C_word)a,a+=5,tmp);
C_trace("ChickenBridge.scm: 589  cdar");
t3=*((C_word*)lf[669]+1);
((C_proc3)C_retrieve_proc(t3))(3,t3,t2,((C_word*)((C_word*)t0)[4])[1]);}
else{
t2=((C_word*)t0)[2];
f_28241(2,t2,C_SCHEME_UNDEFINED);}}

/* k28399 in k28392 in k28236 in k28233 in k28230 in k28227 in k28224 in k28221 in k28218 in a28665 in k27551 in k27548 in k27545 in k27420 in k27417 in k27414 in k27411 in k27408 in k27405 in k27402 in k27399 in k27396 in k27393 in k27390 in k22468 in k18948 in k18945 in k18942 in k18939 in k18528 in k18525 in k18522 in k18519 in k18516 in k17994 in k17991 in k17468 in k17465 in k17462 in k17459 in k17456 in k17453 in k17450 in k17447 in k17444 in k17441 in k17438 in k17435 in k17432 in k17429 in k17426 in k17423 in k17420 in k17417 in k17414 in k17411 in k17408 in k17269 in k17266 in k17263 in k17260 in k17204 in k17201 in k17198 in k17195 in k17192 in k17189 in k17186 in k17183 in k15938 in k15869 in k15676 in k15673 in k15568 in k15517 in k7924 in k7921 in k5905 in k5612 in k5609 in k5605 in k5314 in k5311 in k5308 in k5305 */
static void C_ccall f_28401(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[8],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_28401,2,t0,t1);}
t2=C_SCHEME_UNDEFINED;
t3=(*a=C_VECTOR_TYPE|1,a[1]=t2,tmp=(C_word)a,a+=2,tmp);
t4=C_set_block_item(t3,0,(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_28403,a[2]=((C_word*)t0)[3],a[3]=t3,a[4]=((C_word*)t0)[4],a[5]=((C_word)li461),tmp=(C_word)a,a+=6,tmp));
t5=((C_word*)t3)[1];
f_28403(t5,((C_word*)t0)[2],t1);}

/* do5243 in k28399 in k28392 in k28236 in k28233 in k28230 in k28227 in k28224 in k28221 in k28218 in a28665 in k27551 in k27548 in k27545 in k27420 in k27417 in k27414 in k27411 in k27408 in k27405 in k27402 in k27399 in k27396 in k27393 in k27390 in k22468 in k18948 in k18945 in k18942 in k18939 in k18528 in k18525 in k18522 in k18519 in k18516 in k17994 in k17991 in k17468 in k17465 in k17462 in k17459 in k17456 in k17453 in k17450 in k17447 in k17444 in k17441 in k17438 in k17435 in k17432 in k17429 in k17426 in k17423 in k17420 in k17417 in k17414 in k17411 in k17408 in k17269 in k17266 in k17263 in k17260 in k17204 in k17201 in k17198 in k17195 in k17192 in k17189 in k17186 in k17183 in k15938 in k15869 in k15676 in k15673 in k15568 in k15517 in k7924 in k7921 in k5905 in k5612 in k5609 in k5605 in k5314 in k5311 in k5308 in k5305 */
static void C_fcall f_28403(C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word ab[13],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_28403,NULL,3,t0,t1,t2);}
if(C_truep((C_word)C_i_nullp(t2))){
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
t4=C_mutate(((C_word *)((C_word*)t0)[4])+1,t3);
t5=t1;
((C_proc2)(void*)(*((C_word*)t5+1)))(2,t5,t4);}
else{
t3=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_28417,a[2]=t1,a[3]=((C_word*)t0)[3],a[4]=t2,tmp=(C_word)a,a+=5,tmp);
t4=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_28427,a[2]=t2,a[3]=((C_word*)t0)[2],a[4]=t3,tmp=(C_word)a,a+=5,tmp);
t5=(C_word)C_i_car(t2);
if(C_truep((C_word)C_i_pairp(t5))){
t6=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_28475,a[2]=t4,tmp=(C_word)a,a+=3,tmp);
C_trace("ChickenBridge.scm: 593  cdar");
t7=*((C_word*)lf[669]+1);
((C_proc3)C_retrieve_proc(t7))(3,t7,t6,t2);}
else{
t6=t4;
f_28427(t6,C_SCHEME_FALSE);}}}

/* k28473 in do5243 in k28399 in k28392 in k28236 in k28233 in k28230 in k28227 in k28224 in k28221 in k28218 in a28665 in k27551 in k27548 in k27545 in k27420 in k27417 in k27414 in k27411 in k27408 in k27405 in k27402 in k27399 in k27396 in k27393 in k27390 in k22468 in k18948 in k18945 in k18942 in k18939 in k18528 in k18525 in k18522 in k18519 in k18516 in k17994 in k17991 in k17468 in k17465 in k17462 in k17459 in k17456 in k17453 in k17450 in k17447 in k17444 in k17441 in k17438 in k17435 in k17432 in k17429 in k17426 in k17423 in k17420 in k17417 in k17414 in k17411 in k17408 in k17269 in k17266 in k17263 in k17260 in k17204 in k17201 in k17198 in k17195 in k17192 in k17189 in k17186 in k17183 in k15938 in k15869 in k15676 in k15673 in k15568 in k15517 in k7924 in k7921 in k5905 in k5612 in k5609 in k5605 in k5314 in k5311 in k5308 in k5305 */
static void C_ccall f_28475(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
t2=((C_word*)t0)[2];
f_28427(t2,(C_word)C_i_pairp(t1));}

/* k28425 in do5243 in k28399 in k28392 in k28236 in k28233 in k28230 in k28227 in k28224 in k28221 in k28218 in a28665 in k27551 in k27548 in k27545 in k27420 in k27417 in k27414 in k27411 in k27408 in k27405 in k27402 in k27399 in k27396 in k27393 in k27390 in k22468 in k18948 in k18945 in k18942 in k18939 in k18528 in k18525 in k18522 in k18519 in k18516 in k17994 in k17991 in k17468 in k17465 in k17462 in k17459 in k17456 in k17453 in k17450 in k17447 in k17444 in k17441 in k17438 in k17435 in k17432 in k17429 in k17426 in k17423 in k17420 in k17417 in k17414 in k17411 in k17408 in k17269 in k17266 in k17263 in k17260 in k17204 in k17201 in k17198 in k17195 in k17192 in k17189 in k17186 in k17183 in k15938 in k15869 in k15676 in k15673 in k15568 in k15517 in k7924 in k7921 in k5905 in k5612 in k5609 in k5605 in k5314 in k5311 in k5308 in k5305 */
static void C_fcall f_28427(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[5],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_28427,NULL,2,t0,t1);}
if(C_truep(t1)){
t2=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_28430,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],tmp=(C_word)a,a+=5,tmp);
C_trace("ChickenBridge.scm: 594  caar");
t3=*((C_word*)lf[671]+1);
((C_proc3)C_retrieve_proc(t3))(3,t3,t2,((C_word*)t0)[2]);}
else{
t2=(C_word)C_i_car(((C_word*)t0)[2]);
C_trace("ChickenBridge.scm: 600  error");
t3=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t3))(4,t3,((C_word*)t0)[4],lf[672],t2);}}

/* k28428 in k28425 in do5243 in k28399 in k28392 in k28236 in k28233 in k28230 in k28227 in k28224 in k28221 in k28218 in a28665 in k27551 in k27548 in k27545 in k27420 in k27417 in k27414 in k27411 in k27408 in k27405 in k27402 in k27399 in k27396 in k27393 in k27390 in k22468 in k18948 in k18945 in k18942 in k18939 in k18528 in k18525 in k18522 in k18519 in k18516 in k17994 in k17991 in k17468 in k17465 in k17462 in k17459 in k17456 in k17453 in k17450 in k17447 in k17444 in k17441 in k17438 in k17435 in k17432 in k17429 in k17426 in k17423 in k17420 in k17417 in k17414 in k17411 in k17408 in k17269 in k17266 in k17263 in k17260 in k17204 in k17201 in k17198 in k17195 in k17192 in k17189 in k17186 in k17183 in k15938 in k15869 in k15676 in k15673 in k15568 in k15517 in k7924 in k7921 in k5905 in k5612 in k5609 in k5605 in k5314 in k5311 in k5308 in k5305 */
static void C_ccall f_28430(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[4],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_28430,2,t0,t1);}
t2=(C_word)C_eqp(t1,lf[668]);
if(C_truep(t2)){
t3=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_28451,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 596  cdar");
t4=*((C_word*)lf[669]+1);
((C_proc3)C_retrieve_proc(t4))(3,t4,t3,((C_word*)t0)[2]);}
else{
t3=(C_word)C_i_car(((C_word*)t0)[2]);
C_trace("ChickenBridge.scm: 599  error");
t4=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,((C_word*)t0)[4],lf[670],t3);}}

/* k28449 in k28428 in k28425 in do5243 in k28399 in k28392 in k28236 in k28233 in k28230 in k28227 in k28224 in k28221 in k28218 in a28665 in k27551 in k27548 in k27545 in k27420 in k27417 in k27414 in k27411 in k27408 in k27405 in k27402 in k27399 in k27396 in k27393 in k27390 in k22468 in k18948 in k18945 in k18942 in k18939 in k18528 in k18525 in k18522 in k18519 in k18516 in k17994 in k17991 in k17468 in k17465 in k17462 in k17459 in k17456 in k17453 in k17450 in k17447 in k17444 in k17441 in k17438 in k17435 in k17432 in k17429 in k17426 in k17423 in k17420 in k17417 in k17414 in k17411 in k17408 in k17269 in k17266 in k17263 in k17260 in k17204 in k17201 in k17198 in k17195 in k17192 in k17189 in k17186 in k17183 in k15938 in k15869 in k15676 in k15673 in k15568 in k15517 in k7924 in k7921 in k5905 in k5612 in k5609 in k5605 in k5314 in k5311 in k5308 in k5305 */
static void C_ccall f_28451(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word *a;
if(C_truep((C_word)C_i_car(t1))){
t2=((C_word*)t0)[3];
f_28417(2,t2,C_SCHEME_UNDEFINED);}
else{
t2=C_set_block_item(((C_word*)t0)[2],0,C_SCHEME_FALSE);
t3=((C_word*)t0)[3];
f_28417(2,t3,t2);}}

/* k28415 in do5243 in k28399 in k28392 in k28236 in k28233 in k28230 in k28227 in k28224 in k28221 in k28218 in a28665 in k27551 in k27548 in k27545 in k27420 in k27417 in k27414 in k27411 in k27408 in k27405 in k27402 in k27399 in k27396 in k27393 in k27390 in k22468 in k18948 in k18945 in k18942 in k18939 in k18528 in k18525 in k18522 in k18519 in k18516 in k17994 in k17991 in k17468 in k17465 in k17462 in k17459 in k17456 in k17453 in k17450 in k17447 in k17444 in k17441 in k17438 in k17435 in k17432 in k17429 in k17426 in k17423 in k17420 in k17417 in k17414 in k17411 in k17408 in k17269 in k17266 in k17263 in k17260 in k17204 in k17201 in k17198 in k17195 in k17192 in k17189 in k17186 in k17183 in k15938 in k15869 in k15676 in k15673 in k15568 in k15517 in k7924 in k7921 in k5905 in k5612 in k5609 in k5605 in k5314 in k5311 in k5308 in k5305 */
static void C_ccall f_28417(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word *a;
t2=(C_word)C_i_cdr(((C_word*)t0)[4]);
t3=((C_word*)((C_word*)t0)[3])[1];
f_28403(t3,((C_word*)t0)[2],t2);}

/* k28239 in k28236 in k28233 in k28230 in k28227 in k28224 in k28221 in k28218 in a28665 in k27551 in k27548 in k27545 in k27420 in k27417 in k27414 in k27411 in k27408 in k27405 in k27402 in k27399 in k27396 in k27393 in k27390 in k22468 in k18948 in k18945 in k18942 in k18939 in k18528 in k18525 in k18522 in k18519 in k18516 in k17994 in k17991 in k17468 in k17465 in k17462 in k17459 in k17456 in k17453 in k17450 in k17447 in k17444 in k17441 in k17438 in k17435 in k17432 in k17429 in k17426 in k17423 in k17420 in k17417 in k17414 in k17411 in k17408 in k17269 in k17266 in k17263 in k17260 in k17204 in k17201 in k17198 in k17195 in k17192 in k17189 in k17186 in k17183 in k15938 in k15869 in k15676 in k15673 in k15568 in k15517 in k7924 in k7921 in k5905 in k5612 in k5609 in k5605 in k5314 in k5311 in k5308 in k5305 */
static void C_ccall f_28241(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[17],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_28241,2,t0,t1);}
t2=(C_word)C_i_car(((C_word*)t0)[13]);
t3=(*a=C_CLOSURE_TYPE|13,a[1]=(C_word)f_28383,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],a[7]=((C_word*)t0)[7],a[8]=((C_word*)t0)[8],a[9]=((C_word*)t0)[9],a[10]=((C_word*)t0)[10],a[11]=((C_word*)t0)[11],a[12]=((C_word*)t0)[12],a[13]=t2,tmp=(C_word)a,a+=14,tmp);
t4=(C_word)C_i_cdr(((C_word*)t0)[13]);
t5=(C_word)C_a_i_list(&a,1,C_fix(-1));
C_trace("ChickenBridge.scm: 551  ##sys#append");
t6=*((C_word*)lf[7]+1);
((C_proc4)(void*)(*((C_word*)t6+1)))(4,t6,t3,t4,t5);}

/* k28381 in k28239 in k28236 in k28233 in k28230 in k28227 in k28224 in k28221 in k28218 in a28665 in k27551 in k27548 in k27545 in k27420 in k27417 in k27414 in k27411 in k27408 in k27405 in k27402 in k27399 in k27396 in k27393 in k27390 in k22468 in k18948 in k18945 in k18942 in k18939 in k18528 in k18525 in k18522 in k18519 in k18516 in k17994 in k17991 in k17468 in k17465 in k17462 in k17459 in k17456 in k17453 in k17450 in k17447 in k17444 in k17441 in k17438 in k17435 in k17432 in k17429 in k17426 in k17423 in k17420 in k17417 in k17414 in k17411 in k17408 in k17269 in k17266 in k17263 in k17260 in k17204 in k17201 in k17198 in k17195 in k17192 in k17189 in k17186 in k17183 in k15938 in k15869 in k15676 in k15673 in k15568 in k15517 in k7924 in k7921 in k5905 in k5612 in k5609 in k5605 in k5314 in k5311 in k5308 in k5305 */
static void C_ccall f_28383(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[22],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_28383,2,t0,t1);}
t2=(C_word)C_a_i_cons(&a,2,((C_word*)t0)[13],t1);
t3=(*a=C_CLOSURE_TYPE|11,a[1]=(C_word)f_28367,a[2]=((C_word*)t0)[4],a[3]=((C_word*)t0)[5],a[4]=((C_word*)t0)[6],a[5]=((C_word*)t0)[7],a[6]=((C_word*)t0)[8],a[7]=((C_word*)t0)[9],a[8]=((C_word*)t0)[10],a[9]=((C_word*)t0)[11],a[10]=((C_word*)t0)[12],a[11]=t2,tmp=(C_word)a,a+=12,tmp);
t4=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_28371,a[2]=((C_word*)t0)[3],a[3]=t3,tmp=(C_word)a,a+=4,tmp);
t5=(C_word)C_a_i_list(&a,1,((C_word*)t0)[10]);
C_trace("ChickenBridge.scm: 551  ##sys#append");
t6=*((C_word*)lf[7]+1);
((C_proc4)(void*)(*((C_word*)t6+1)))(4,t6,t4,((C_word*)((C_word*)t0)[2])[1],t5);}

/* k28369 in k28381 in k28239 in k28236 in k28233 in k28230 in k28227 in k28224 in k28221 in k28218 in a28665 in k27551 in k27548 in k27545 in k27420 in k27417 in k27414 in k27411 in k27408 in k27405 in k27402 in k27399 in k27396 in k27393 in k27390 in k22468 in k18948 in k18945 in k18942 in k18939 in k18528 in k18525 in k18522 in k18519 in k18516 in k17994 in k17991 in k17468 in k17465 in k17462 in k17459 in k17456 in k17453 in k17450 in k17447 in k17444 in k17441 in k17438 in k17435 in k17432 in k17429 in k17426 in k17423 in k17420 in k17417 in k17414 in k17411 in k17408 in k17269 in k17266 in k17263 in k17260 in k17204 in k17201 in k17198 in k17195 in k17192 in k17189 in k17186 in k17183 in k15938 in k15869 in k15676 in k15673 in k15568 in k15517 in k7924 in k7921 in k5905 in k5612 in k5609 in k5605 in k5314 in k5311 in k5308 in k5305 */
static void C_ccall f_28371(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 551  ##sys#append");
t2=*((C_word*)lf[7]+1);
((C_proc4)(void*)(*((C_word*)t2+1)))(4,t2,((C_word*)t0)[3],((C_word*)((C_word*)t0)[2])[1],t1);}

/* k28365 in k28381 in k28239 in k28236 in k28233 in k28230 in k28227 in k28224 in k28221 in k28218 in a28665 in k27551 in k27548 in k27545 in k27420 in k27417 in k27414 in k27411 in k27408 in k27405 in k27402 in k27399 in k27396 in k27393 in k27390 in k22468 in k18948 in k18945 in k18942 in k18939 in k18528 in k18525 in k18522 in k18519 in k18516 in k17994 in k17991 in k17468 in k17465 in k17462 in k17459 in k17456 in k17453 in k17450 in k17447 in k17444 in k17441 in k17438 in k17435 in k17432 in k17429 in k17426 in k17423 in k17420 in k17417 in k17414 in k17411 in k17408 in k17269 in k17266 in k17263 in k17260 in k17204 in k17201 in k17198 in k17195 in k17192 in k17189 in k17186 in k17183 in k15938 in k15869 in k15676 in k15673 in k15568 in k15517 in k7924 in k7921 in k5905 in k5612 in k5609 in k5605 in k5314 in k5311 in k5308 in k5305 */
static void C_ccall f_28367(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word t14;
C_word t15;
C_word t16;
C_word t17;
C_word t18;
C_word t19;
C_word t20;
C_word t21;
C_word ab[122],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_28367,2,t0,t1);}
t2=(C_word)C_a_i_cons(&a,2,lf[16],t1);
t3=(C_word)C_a_i_list(&a,3,lf[662],((C_word*)t0)[11],t2);
t4=C_mutate(((C_word *)((C_word*)t0)[10])+1,t3);
t5=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_28248,a[2]=((C_word*)t0)[5],a[3]=((C_word*)t0)[6],a[4]=((C_word*)t0)[7],a[5]=((C_word*)t0)[10],a[6]=((C_word*)t0)[8],a[7]=((C_word*)t0)[9],tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)((C_word*)t0)[4])[1])){
t6=(C_word)C_a_i_list(&a,1,((C_word*)t0)[3]);
t7=(C_word)C_a_i_list(&a,1,((C_word*)t0)[2]);
t8=(C_word)C_a_i_list(&a,2,lf[465],lf[624]);
t9=(C_word)C_a_i_list(&a,2,lf[465],lf[625]);
t10=(C_word)C_a_i_list(&a,3,lf[623],t8,t9);
t11=(C_word)C_a_i_list(&a,2,t10,((C_word*)t0)[2]);
t12=(C_word)C_a_i_list(&a,4,lf[31],lf[667],t11,((C_word*)t0)[9]);
t13=(C_word)C_a_i_list(&a,2,lf[349],t12);
t14=(C_word)C_a_i_list(&a,2,((C_word*)t0)[3],C_fix(-2));
t15=(C_word)C_a_i_list(&a,4,lf[663],t7,t13,t14);
t16=(C_word)C_a_i_list(&a,3,lf[663],C_SCHEME_END_OF_LIST,((C_word*)((C_word*)t0)[10])[1]);
t17=(C_word)C_a_i_list(&a,3,lf[626],t15,t16);
t18=(C_word)C_a_i_list(&a,3,lf[663],t6,t17);
t19=(C_word)C_a_i_list(&a,2,lf[627],t18);
t20=C_mutate(((C_word *)((C_word*)t0)[10])+1,t19);
t21=t5;
f_28248(t21,t20);}
else{
t6=t5;
f_28248(t6,C_SCHEME_UNDEFINED);}}

/* k28246 in k28365 in k28381 in k28239 in k28236 in k28233 in k28230 in k28227 in k28224 in k28221 in k28218 in a28665 in k27551 in k27548 in k27545 in k27420 in k27417 in k27414 in k27411 in k27408 in k27405 in k27402 in k27399 in k27396 in k27393 in k27390 in k22468 in k18948 in k18945 in k18942 in k18939 in k18528 in k18525 in k18522 in k18519 in k18516 in k17994 in k17991 in k17468 in k17465 in k17462 in k17459 in k17456 in k17453 in k17450 in k17447 in k17444 in k17441 in k17438 in k17435 in k17432 in k17429 in k17426 in k17423 in k17420 in k17417 in k17414 in k17411 in k17408 in k17269 in k17266 in k17263 in k17260 in k17204 in k17201 in k17198 in k17195 in k17192 in k17189 in k17186 in k17183 in k15938 in k15869 in k15676 in k15673 in k15568 in k15517 in k7924 in k7921 in k5905 in k5612 in k5609 in k5605 in k5314 in k5311 in k5308 in k5305 */
static void C_fcall f_28248(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word t14;
C_word ab[90],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_28248,NULL,2,t0,t1);}
t2=(C_word)C_a_i_list(&a,1,((C_word*)t0)[7]);
t3=(C_word)C_a_i_list(&a,2,((C_word*)t0)[6],C_fix(0));
t4=(C_word)C_a_i_list(&a,3,lf[663],C_SCHEME_END_OF_LIST,((C_word*)t0)[7]);
t5=(C_word)C_a_i_list(&a,2,lf[664],t4);
t6=(C_word)C_a_i_list(&a,1,lf[665]);
t7=(C_word)C_a_i_list(&a,3,lf[12],((C_word*)t0)[6],lf[665]);
t8=(C_word)C_a_i_list(&a,3,lf[663],t6,t7);
t9=(C_word)C_a_i_list(&a,2,lf[666],t8);
t10=(C_word)C_a_i_list(&a,3,t3,t5,t9);
t11=(C_word)C_a_i_list(&a,3,lf[2],t10,((C_word*)((C_word*)t0)[5])[1]);
t12=(C_word)C_a_i_list(&a,3,lf[663],t2,t11);
t13=(C_word)C_a_i_list(&a,3,lf[663],((C_word*)((C_word*)t0)[4])[1],t12);
t14=((C_word*)t0)[3];
((C_proc2)(void*)(*((C_word*)t14+1)))(2,t14,(C_word)C_a_i_cons(&a,2,t13,((C_word*)((C_word*)t0)[2])[1]));}

/* k28203 in k27551 in k27548 in k27545 in k27420 in k27417 in k27414 in k27411 in k27408 in k27405 in k27402 in k27399 in k27396 in k27393 in k27390 in k22468 in k18948 in k18945 in k18942 in k18939 in k18528 in k18525 in k18522 in k18519 in k18516 in k17994 in k17991 in k17468 in k17465 in k17462 in k17459 in k17456 in k17453 in k17450 in k17447 in k17444 in k17441 in k17438 in k17435 in k17432 in k17429 in k17426 in k17423 in k17420 in k17417 in k17414 in k17411 in k17408 in k17269 in k17266 in k17263 in k17260 in k17204 in k17201 in k17198 in k17195 in k17192 in k17189 in k17186 in k17183 in k15938 in k15869 in k15676 in k15673 in k15568 in k15517 in k7924 in k7921 in k5905 in k5612 in k5609 in k5605 in k5314 in k5311 in k5308 in k5305 */
static void C_ccall f_28205(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[3],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_28205,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_28664,a[2]=((C_word*)t0)[2],tmp=(C_word)a,a+=3,tmp);
C_trace("ChickenBridge.scm: 645  return-to-host");
t3=C_retrieve(lf[661]);
((C_proc2)C_retrieve_proc(t3))(2,t3,t2);}

/* k28662 in k28203 in k27551 in k27548 in k27545 in k27420 in k27417 in k27414 in k27411 in k27408 in k27405 in k27402 in k27399 in k27396 in k27393 in k27390 in k22468 in k18948 in k18945 in k18942 in k18939 in k18528 in k18525 in k18522 in k18519 in k18516 in k17994 in k17991 in k17468 in k17465 in k17462 in k17459 in k17456 in k17453 in k17450 in k17447 in k17444 in k17441 in k17438 in k17435 in k17432 in k17429 in k17426 in k17423 in k17420 in k17417 in k17414 in k17411 in k17408 in k17269 in k17266 in k17263 in k17260 in k17204 in k17201 in k17198 in k17195 in k17192 in k17189 in k17186 in k17183 in k15938 in k15869 in k15676 in k15673 in k15568 in k15517 in k7924 in k7921 in k5905 in k5612 in k5609 in k5605 in k5314 in k5311 in k5308 in k5305 */
static void C_ccall f_28664(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
t2=((C_word*)t0)[2];
((C_proc2)(void*)(*((C_word*)t2+1)))(2,t2,C_SCHEME_UNDEFINED);}

/* hush in k27551 in k27548 in k27545 in k27420 in k27417 in k27414 in k27411 in k27408 in k27405 in k27402 in k27399 in k27396 in k27393 in k27390 in k22468 in k18948 in k18945 in k18942 in k18939 in k18528 in k18525 in k18522 in k18519 in k18516 in k17994 in k17991 in k17468 in k17465 in k17462 in k17459 in k17456 in k17453 in k17450 in k17447 in k17444 in k17441 in k17438 in k17435 in k17432 in k17429 in k17426 in k17423 in k17420 in k17417 in k17414 in k17411 in k17408 in k17269 in k17266 in k17263 in k17260 in k17204 in k17201 in k17198 in k17195 in k17192 in k17189 in k17186 in k17183 in k15938 in k15869 in k15676 in k15673 in k15568 in k15517 in k7924 in k7921 in k5905 in k5612 in k5609 in k5605 in k5314 in k5311 in k5308 in k5305 */
static void C_ccall f_28195(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[6],*a=ab;
if(c!=2) C_bad_argc_2(c,2,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_28195,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_28199,a[2]=t1,tmp=(C_word)a,a+=3,tmp);
t3=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_27858,a[2]=t2,tmp=(C_word)a,a+=3,tmp);
C_trace("##sys#gc");
t4=C_retrieve(lf[642]);
((C_proc3)C_retrieve_proc(t4))(3,t4,t3,C_SCHEME_FALSE);}

/* k27856 in hush in k27551 in k27548 in k27545 in k27420 in k27417 in k27414 in k27411 in k27408 in k27405 in k27402 in k27399 in k27396 in k27393 in k27390 in k22468 in k18948 in k18945 in k18942 in k18939 in k18528 in k18525 in k18522 in k18519 in k18516 in k17994 in k17991 in k17468 in k17465 in k17462 in k17459 in k17456 in k17453 in k17450 in k17447 in k17444 in k17441 in k17438 in k17435 in k17432 in k17429 in k17426 in k17423 in k17420 in k17417 in k17414 in k17411 in k17408 in k17269 in k17266 in k17263 in k17260 in k17204 in k17201 in k17198 in k17195 in k17192 in k17189 in k17186 in k17183 in k15938 in k15869 in k15676 in k15673 in k15568 in k15517 in k7924 in k7921 in k5905 in k5612 in k5609 in k5605 in k5314 in k5311 in k5308 in k5305 */
static void C_ccall f_27858(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[11],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_27858,2,t0,t1);}
t2=(C_word)C_a_i_bytevector(&a,1,C_fix(6));
t3=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)stub5153,a[2]=((C_word)li459),tmp=(C_word)a,a+=3,tmp);
((C_proc3)C_retrieve_proc(t3))(3,t3,((C_word*)t0)[2],t2);}

/* k28197 in hush in k27551 in k27548 in k27545 in k27420 in k27417 in k27414 in k27411 in k27408 in k27405 in k27402 in k27399 in k27396 in k27393 in k27390 in k22468 in k18948 in k18945 in k18942 in k18939 in k18528 in k18525 in k18522 in k18519 in k18516 in k17994 in k17991 in k17468 in k17465 in k17462 in k17459 in k17456 in k17453 in k17450 in k17447 in k17444 in k17441 in k17438 in k17435 in k17432 in k17429 in k17426 in k17423 in k17420 in k17417 in k17414 in k17411 in k17408 in k17269 in k17266 in k17263 in k17260 in k17204 in k17201 in k17198 in k17195 in k17192 in k17189 in k17186 in k17183 in k15938 in k15869 in k15676 in k15673 in k15568 in k15517 in k7924 in k7921 in k5905 in k5612 in k5609 in k5605 in k5314 in k5311 in k5308 in k5305 */
static void C_ccall f_28199(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 541  values");
C_values(2,0,((C_word*)t0)[2]);}

/* stop in k27551 in k27548 in k27545 in k27420 in k27417 in k27414 in k27411 in k27408 in k27405 in k27402 in k27399 in k27396 in k27393 in k27390 in k22468 in k18948 in k18945 in k18942 in k18939 in k18528 in k18525 in k18522 in k18519 in k18516 in k17994 in k17991 in k17468 in k17465 in k17462 in k17459 in k17456 in k17453 in k17450 in k17447 in k17444 in k17441 in k17438 in k17435 in k17432 in k17429 in k17426 in k17423 in k17420 in k17417 in k17414 in k17411 in k17408 in k17269 in k17266 in k17263 in k17260 in k17204 in k17201 in k17198 in k17195 in k17192 in k17189 in k17186 in k17183 in k15938 in k15869 in k15676 in k15673 in k15568 in k15517 in k7924 in k7921 in k5905 in k5612 in k5609 in k5605 in k5314 in k5311 in k5308 in k5305 */
static void C_ccall f_28137(C_word c,C_word t0,C_word t1,...){
C_word tmp;
C_word t2;
va_list v;
C_word *a,c2=c;
C_save_rest(t1,c2,2);
C_check_for_interrupt;
if(!C_demand(c*C_SIZEOF_PAIR+9)){
C_save_and_reclaim((void*)tr2r,(void*)f_28137r,2,t0,t1);}
else{
a=C_alloc((c-2)*3);
t2=C_restore_rest(a,C_rest_count(0));
f_28137r(t0,t1,t2);}}

static void C_ccall f_28137r(C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a=C_alloc(9);
t3=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_28141,a[2]=t1,tmp=(C_word)a,a+=3,tmp);
if(C_truep((C_word)C_i_nullp(t2))){
C_trace("ChickenBridge.scm: 531  scheduler-stop");
f_27841(t3,C_fix(-1));}
else{
t4=C_SCHEME_UNDEFINED;
t5=(*a=C_VECTOR_TYPE|1,a[1]=t4,tmp=(C_word)a,a+=2,tmp);
t6=C_set_block_item(t5,0,(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_28155,a[2]=t5,a[3]=((C_word)li457),tmp=(C_word)a,a+=4,tmp));
t7=((C_word*)t5)[1];
f_28155(t7,t3,t2);}}

/* do5211 in stop in k27551 in k27548 in k27545 in k27420 in k27417 in k27414 in k27411 in k27408 in k27405 in k27402 in k27399 in k27396 in k27393 in k27390 in k22468 in k18948 in k18945 in k18942 in k18939 in k18528 in k18525 in k18522 in k18519 in k18516 in k17994 in k17991 in k17468 in k17465 in k17462 in k17459 in k17456 in k17453 in k17450 in k17447 in k17444 in k17441 in k17438 in k17435 in k17432 in k17429 in k17426 in k17423 in k17420 in k17417 in k17414 in k17411 in k17408 in k17269 in k17266 in k17263 in k17260 in k17204 in k17201 in k17198 in k17195 in k17192 in k17189 in k17186 in k17183 in k15938 in k15869 in k15676 in k15673 in k15568 in k15517 in k7924 in k7921 in k5905 in k5612 in k5609 in k5605 in k5314 in k5311 in k5308 in k5305 */
static void C_fcall f_28155(C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word ab[5],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_28155,NULL,3,t0,t1,t2);}
if(C_truep((C_word)C_i_nullp(t2))){
t3=t1;
((C_proc2)(void*)(*((C_word*)t3+1)))(2,t3,C_SCHEME_FALSE);}
else{
t3=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_28165,a[2]=t1,a[3]=((C_word*)t0)[2],a[4]=t2,tmp=(C_word)a,a+=5,tmp);
t4=(C_word)C_i_car(t2);
if(C_truep((C_word)C_fixnump(t4))){
t5=(C_word)C_i_car(t2);
C_trace("ChickenBridge.scm: 535  scheduler-stop");
f_27841(t3,t5);}
else{
t5=(C_word)C_i_car(t2);
C_trace("ChickenBridge.scm: 536  error");
t6=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t6))(4,t6,t3,lf[659],t5);}}}

/* k28163 in do5211 in stop in k27551 in k27548 in k27545 in k27420 in k27417 in k27414 in k27411 in k27408 in k27405 in k27402 in k27399 in k27396 in k27393 in k27390 in k22468 in k18948 in k18945 in k18942 in k18939 in k18528 in k18525 in k18522 in k18519 in k18516 in k17994 in k17991 in k17468 in k17465 in k17462 in k17459 in k17456 in k17453 in k17450 in k17447 in k17444 in k17441 in k17438 in k17435 in k17432 in k17429 in k17426 in k17423 in k17420 in k17417 in k17414 in k17411 in k17408 in k17269 in k17266 in k17263 in k17260 in k17204 in k17201 in k17198 in k17195 in k17192 in k17189 in k17186 in k17183 in k15938 in k15869 in k15676 in k15673 in k15568 in k15517 in k7924 in k7921 in k5905 in k5612 in k5609 in k5605 in k5314 in k5311 in k5308 in k5305 */
static void C_ccall f_28165(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word *a;
t2=(C_word)C_i_cdr(((C_word*)t0)[4]);
t3=((C_word*)((C_word*)t0)[3])[1];
f_28155(t3,((C_word*)t0)[2],t2);}

/* k28139 in stop in k27551 in k27548 in k27545 in k27420 in k27417 in k27414 in k27411 in k27408 in k27405 in k27402 in k27399 in k27396 in k27393 in k27390 in k22468 in k18948 in k18945 in k18942 in k18939 in k18528 in k18525 in k18522 in k18519 in k18516 in k17994 in k17991 in k17468 in k17465 in k17462 in k17459 in k17456 in k17453 in k17450 in k17447 in k17444 in k17441 in k17438 in k17435 in k17432 in k17429 in k17426 in k17423 in k17420 in k17417 in k17414 in k17411 in k17408 in k17269 in k17266 in k17263 in k17260 in k17204 in k17201 in k17198 in k17195 in k17192 in k17189 in k17186 in k17183 in k15938 in k15869 in k15676 in k15673 in k15568 in k15517 in k7924 in k7921 in k5905 in k5612 in k5609 in k5605 in k5314 in k5311 in k5308 in k5305 */
static void C_ccall f_28141(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 537  values");
C_values(2,0,((C_word*)t0)[2]);}

/* cont in k27551 in k27548 in k27545 in k27420 in k27417 in k27414 in k27411 in k27408 in k27405 in k27402 in k27399 in k27396 in k27393 in k27390 in k22468 in k18948 in k18945 in k18942 in k18939 in k18528 in k18525 in k18522 in k18519 in k18516 in k17994 in k17991 in k17468 in k17465 in k17462 in k17459 in k17456 in k17453 in k17450 in k17447 in k17444 in k17441 in k17438 in k17435 in k17432 in k17429 in k17426 in k17423 in k17420 in k17417 in k17414 in k17411 in k17408 in k17269 in k17266 in k17263 in k17260 in k17204 in k17201 in k17198 in k17195 in k17192 in k17189 in k17186 in k17183 in k15938 in k15869 in k15676 in k15673 in k15568 in k15517 in k7924 in k7921 in k5905 in k5612 in k5609 in k5605 in k5314 in k5311 in k5308 in k5305 */
static void C_ccall f_28128(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[6],*a=ab;
if(c!=2) C_bad_argc_2(c,2,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_28128,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_28132,a[2]=t1,tmp=(C_word)a,a+=3,tmp);
t3=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_27836,a[2]=t2,tmp=(C_word)a,a+=3,tmp);
C_trace("##sys#gc");
t4=C_retrieve(lf[642]);
((C_proc3)C_retrieve_proc(t4))(3,t4,t3,C_SCHEME_FALSE);}

/* k27834 in cont in k27551 in k27548 in k27545 in k27420 in k27417 in k27414 in k27411 in k27408 in k27405 in k27402 in k27399 in k27396 in k27393 in k27390 in k22468 in k18948 in k18945 in k18942 in k18939 in k18528 in k18525 in k18522 in k18519 in k18516 in k17994 in k17991 in k17468 in k17465 in k17462 in k17459 in k17456 in k17453 in k17450 in k17447 in k17444 in k17441 in k17438 in k17435 in k17432 in k17429 in k17426 in k17423 in k17420 in k17417 in k17414 in k17411 in k17408 in k17269 in k17266 in k17263 in k17260 in k17204 in k17201 in k17198 in k17195 in k17192 in k17189 in k17186 in k17183 in k15938 in k15869 in k15676 in k15673 in k15568 in k15517 in k7924 in k7921 in k5905 in k5612 in k5609 in k5605 in k5314 in k5311 in k5308 in k5305 */
static void C_ccall f_27836(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[11],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_27836,2,t0,t1);}
t2=(C_word)C_a_i_bytevector(&a,1,C_fix(6));
t3=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)stub5143,a[2]=((C_word)li455),tmp=(C_word)a,a+=3,tmp);
((C_proc3)C_retrieve_proc(t3))(3,t3,((C_word*)t0)[2],t2);}

/* k28130 in cont in k27551 in k27548 in k27545 in k27420 in k27417 in k27414 in k27411 in k27408 in k27405 in k27402 in k27399 in k27396 in k27393 in k27390 in k22468 in k18948 in k18945 in k18942 in k18939 in k18528 in k18525 in k18522 in k18519 in k18516 in k17994 in k17991 in k17468 in k17465 in k17462 in k17459 in k17456 in k17453 in k17450 in k17447 in k17444 in k17441 in k17438 in k17435 in k17432 in k17429 in k17426 in k17423 in k17420 in k17417 in k17414 in k17411 in k17408 in k17269 in k17266 in k17263 in k17260 in k17204 in k17201 in k17198 in k17195 in k17192 in k17189 in k17186 in k17183 in k15938 in k15869 in k15676 in k15673 in k15568 in k15517 in k7924 in k7921 in k5905 in k5612 in k5609 in k5605 in k5314 in k5311 in k5308 in k5305 */
static void C_ccall f_28132(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 527  values");
C_values(2,0,((C_word*)t0)[2]);}

/* paused? in k27551 in k27548 in k27545 in k27420 in k27417 in k27414 in k27411 in k27408 in k27405 in k27402 in k27399 in k27396 in k27393 in k27390 in k22468 in k18948 in k18945 in k18942 in k18939 in k18528 in k18525 in k18522 in k18519 in k18516 in k17994 in k17991 in k17468 in k17465 in k17462 in k17459 in k17456 in k17453 in k17450 in k17447 in k17444 in k17441 in k17438 in k17435 in k17432 in k17429 in k17426 in k17423 in k17420 in k17417 in k17414 in k17411 in k17408 in k17269 in k17266 in k17263 in k17260 in k17204 in k17201 in k17198 in k17195 in k17192 in k17189 in k17186 in k17183 in k15938 in k15869 in k15676 in k15673 in k15568 in k15517 in k7924 in k7921 in k5905 in k5612 in k5609 in k5605 in k5314 in k5311 in k5308 in k5305 */
static void C_ccall f_28122(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[3],*a=ab;
if(c!=2) C_bad_argc_2(c,2,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_28122,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_27818,a[2]=t1,tmp=(C_word)a,a+=3,tmp);
C_trace("##sys#gc");
t3=C_retrieve(lf[642]);
((C_proc3)C_retrieve_proc(t3))(3,t3,t2,C_SCHEME_FALSE);}

/* k27816 in paused? in k27551 in k27548 in k27545 in k27420 in k27417 in k27414 in k27411 in k27408 in k27405 in k27402 in k27399 in k27396 in k27393 in k27390 in k22468 in k18948 in k18945 in k18942 in k18939 in k18528 in k18525 in k18522 in k18519 in k18516 in k17994 in k17991 in k17468 in k17465 in k17462 in k17459 in k17456 in k17453 in k17450 in k17447 in k17444 in k17441 in k17438 in k17435 in k17432 in k17429 in k17426 in k17423 in k17420 in k17417 in k17414 in k17411 in k17408 in k17269 in k17266 in k17263 in k17260 in k17204 in k17201 in k17198 in k17195 in k17192 in k17189 in k17186 in k17183 in k15938 in k15869 in k15676 in k15673 in k15568 in k15517 in k7924 in k7921 in k5905 in k5612 in k5609 in k5605 in k5314 in k5311 in k5308 in k5305 */
static void C_ccall f_27818(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[11],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_27818,2,t0,t1);}
t2=(C_word)C_a_i_bytevector(&a,1,C_fix(6));
t3=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)stub5135,a[2]=((C_word)li453),tmp=(C_word)a,a+=3,tmp);
((C_proc3)C_retrieve_proc(t3))(3,t3,((C_word*)t0)[2],t2);}

/* pause in k27551 in k27548 in k27545 in k27420 in k27417 in k27414 in k27411 in k27408 in k27405 in k27402 in k27399 in k27396 in k27393 in k27390 in k22468 in k18948 in k18945 in k18942 in k18939 in k18528 in k18525 in k18522 in k18519 in k18516 in k17994 in k17991 in k17468 in k17465 in k17462 in k17459 in k17456 in k17453 in k17450 in k17447 in k17444 in k17441 in k17438 in k17435 in k17432 in k17429 in k17426 in k17423 in k17420 in k17417 in k17414 in k17411 in k17408 in k17269 in k17266 in k17263 in k17260 in k17204 in k17201 in k17198 in k17195 in k17192 in k17189 in k17186 in k17183 in k15938 in k15869 in k15676 in k15673 in k15568 in k15517 in k7924 in k7921 in k5905 in k5612 in k5609 in k5605 in k5314 in k5311 in k5308 in k5305 */
static void C_ccall f_28113(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[6],*a=ab;
if(c!=2) C_bad_argc_2(c,2,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_28113,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_28117,a[2]=t1,tmp=(C_word)a,a+=3,tmp);
t3=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_27827,a[2]=t2,tmp=(C_word)a,a+=3,tmp);
C_trace("##sys#gc");
t4=C_retrieve(lf[642]);
((C_proc3)C_retrieve_proc(t4))(3,t4,t3,C_SCHEME_FALSE);}

/* k27825 in pause in k27551 in k27548 in k27545 in k27420 in k27417 in k27414 in k27411 in k27408 in k27405 in k27402 in k27399 in k27396 in k27393 in k27390 in k22468 in k18948 in k18945 in k18942 in k18939 in k18528 in k18525 in k18522 in k18519 in k18516 in k17994 in k17991 in k17468 in k17465 in k17462 in k17459 in k17456 in k17453 in k17450 in k17447 in k17444 in k17441 in k17438 in k17435 in k17432 in k17429 in k17426 in k17423 in k17420 in k17417 in k17414 in k17411 in k17408 in k17269 in k17266 in k17263 in k17260 in k17204 in k17201 in k17198 in k17195 in k17192 in k17189 in k17186 in k17183 in k15938 in k15869 in k15676 in k15673 in k15568 in k15517 in k7924 in k7921 in k5905 in k5612 in k5609 in k5605 in k5314 in k5311 in k5308 in k5305 */
static void C_ccall f_27827(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[11],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_27827,2,t0,t1);}
t2=(C_word)C_a_i_bytevector(&a,1,C_fix(6));
t3=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)stub5139,a[2]=((C_word)li451),tmp=(C_word)a,a+=3,tmp);
((C_proc3)C_retrieve_proc(t3))(3,t3,((C_word*)t0)[2],t2);}

/* k28115 in pause in k27551 in k27548 in k27545 in k27420 in k27417 in k27414 in k27411 in k27408 in k27405 in k27402 in k27399 in k27396 in k27393 in k27390 in k22468 in k18948 in k18945 in k18942 in k18939 in k18528 in k18525 in k18522 in k18519 in k18516 in k17994 in k17991 in k17468 in k17465 in k17462 in k17459 in k17456 in k17453 in k17450 in k17447 in k17444 in k17441 in k17438 in k17435 in k17432 in k17429 in k17426 in k17423 in k17420 in k17417 in k17414 in k17411 in k17408 in k17269 in k17266 in k17263 in k17260 in k17204 in k17201 in k17198 in k17195 in k17192 in k17189 in k17186 in k17183 in k15938 in k15869 in k15676 in k15673 in k15568 in k15517 in k7924 in k7921 in k5905 in k5612 in k5609 in k5605 in k5314 in k5311 in k5308 in k5305 */
static void C_ccall f_28117(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 520  values");
C_values(2,0,((C_word*)t0)[2]);}

/* time-format in k27551 in k27548 in k27545 in k27420 in k27417 in k27414 in k27411 in k27408 in k27405 in k27402 in k27399 in k27396 in k27393 in k27390 in k22468 in k18948 in k18945 in k18942 in k18939 in k18528 in k18525 in k18522 in k18519 in k18516 in k17994 in k17991 in k17468 in k17465 in k17462 in k17459 in k17456 in k17453 in k17450 in k17447 in k17444 in k17441 in k17438 in k17435 in k17432 in k17429 in k17426 in k17423 in k17420 in k17417 in k17414 in k17411 in k17408 in k17269 in k17266 in k17263 in k17260 in k17204 in k17201 in k17198 in k17195 in k17192 in k17189 in k17186 in k17183 in k15938 in k15869 in k15676 in k15673 in k15568 in k15517 in k7924 in k7921 in k5905 in k5612 in k5609 in k5605 in k5314 in k5311 in k5308 in k5305 */
static void C_ccall f_28050(C_word c,C_word t0,C_word t1,...){
C_word tmp;
C_word t2;
va_list v;
C_word *a,c2=c;
C_save_rest(t1,c2,2);
C_check_for_interrupt;
if(!C_demand(c*C_SIZEOF_PAIR+11)){
C_save_and_reclaim((void*)tr2rv,(void*)f_28050r,2,t0,t1);}
else{
a=C_alloc((c-2)*3);
t2=C_restore_rest_vector(a,C_rest_count(0));
f_28050r(t0,t1,t2);}}

static void C_ccall f_28050r(C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word *a=C_alloc(11);
if(C_truep((C_word)C_vemptyp(t2))){
t3=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_28063,a[2]=t1,tmp=(C_word)a,a+=3,tmp);
t4=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_27783,a[2]=t3,tmp=(C_word)a,a+=3,tmp);
C_trace("##sys#gc");
t5=C_retrieve(lf[642]);
((C_proc3)C_retrieve_proc(t5))(3,t5,t4,C_SCHEME_FALSE);}
else{
t3=(C_word)C_i_vector_ref(t2,C_fix(0));
t4=(C_word)C_i_eqvp(t3,lf[651]);
t5=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_28075,a[2]=t2,a[3]=t3,a[4]=t1,tmp=(C_word)a,a+=5,tmp);
if(C_truep(t4)){
t6=t5;
f_28075(t6,t4);}
else{
t6=(C_word)C_eqp(t3,C_fix(1));
t7=t5;
f_28075(t7,(C_truep(t6)?t6:(C_word)C_eqp(t3,lf[654])));}}}

/* k28073 in time-format in k27551 in k27548 in k27545 in k27420 in k27417 in k27414 in k27411 in k27408 in k27405 in k27402 in k27399 in k27396 in k27393 in k27390 in k22468 in k18948 in k18945 in k18942 in k18939 in k18528 in k18525 in k18522 in k18519 in k18516 in k17994 in k17991 in k17468 in k17465 in k17462 in k17459 in k17456 in k17453 in k17450 in k17447 in k17444 in k17441 in k17438 in k17435 in k17432 in k17429 in k17426 in k17423 in k17420 in k17417 in k17414 in k17411 in k17408 in k17269 in k17266 in k17263 in k17260 in k17204 in k17201 in k17198 in k17195 in k17192 in k17189 in k17186 in k17183 in k15938 in k15869 in k15676 in k15673 in k15568 in k15517 in k7924 in k7921 in k5905 in k5612 in k5609 in k5605 in k5314 in k5311 in k5308 in k5305 */
static void C_fcall f_28075(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
if(C_truep(t1)){
t2=C_mutate((C_word*)lf[648]+1,C_retrieve(lf[640]));
C_trace("ChickenBridge.scm: 509  scheduler-set-time-milliseconds");
f_27788(((C_word*)t0)[4],C_SCHEME_FALSE);}
else{
t2=(C_word)C_eqp(((C_word*)t0)[3],C_fix(1000));
t3=(C_truep(t2)?t2:(C_word)C_eqp(((C_word*)t0)[3],lf[652]));
if(C_truep(t3)){
t4=C_mutate((C_word*)lf[648]+1,C_retrieve(lf[639]));
C_trace("ChickenBridge.scm: 513  scheduler-set-time-milliseconds");
f_27788(((C_word*)t0)[4],C_SCHEME_TRUE);}
else{
t4=(C_word)C_i_vector_ref(((C_word*)t0)[2],C_fix(0));
C_trace("ChickenBridge.scm: 516  error");
t5=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t5))(4,t5,((C_word*)t0)[4],lf[653],t4);}}}

/* k27781 in time-format in k27551 in k27548 in k27545 in k27420 in k27417 in k27414 in k27411 in k27408 in k27405 in k27402 in k27399 in k27396 in k27393 in k27390 in k22468 in k18948 in k18945 in k18942 in k18939 in k18528 in k18525 in k18522 in k18519 in k18516 in k17994 in k17991 in k17468 in k17465 in k17462 in k17459 in k17456 in k17453 in k17450 in k17447 in k17444 in k17441 in k17438 in k17435 in k17432 in k17429 in k17426 in k17423 in k17420 in k17417 in k17414 in k17411 in k17408 in k17269 in k17266 in k17263 in k17260 in k17204 in k17201 in k17198 in k17195 in k17192 in k17189 in k17186 in k17183 in k15938 in k15869 in k15676 in k15673 in k15568 in k15517 in k7924 in k7921 in k5905 in k5612 in k5609 in k5605 in k5314 in k5311 in k5308 in k5305 */
static void C_ccall f_27783(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[11],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_27783,2,t0,t1);}
t2=(C_word)C_a_i_bytevector(&a,1,C_fix(6));
t3=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)stub5115,a[2]=((C_word)li449),tmp=(C_word)a,a+=3,tmp);
((C_proc3)C_retrieve_proc(t3))(3,t3,((C_word*)t0)[2],t2);}

/* k28061 in time-format in k27551 in k27548 in k27545 in k27420 in k27417 in k27414 in k27411 in k27408 in k27405 in k27402 in k27399 in k27396 in k27393 in k27390 in k22468 in k18948 in k18945 in k18942 in k18939 in k18528 in k18525 in k18522 in k18519 in k18516 in k17994 in k17991 in k17468 in k17465 in k17462 in k17459 in k17456 in k17453 in k17450 in k17447 in k17444 in k17441 in k17438 in k17435 in k17432 in k17429 in k17426 in k17423 in k17420 in k17417 in k17414 in k17411 in k17408 in k17269 in k17266 in k17263 in k17260 in k17204 in k17201 in k17198 in k17195 in k17192 in k17189 in k17186 in k17183 in k15938 in k15869 in k15676 in k15673 in k15568 in k15517 in k7924 in k7921 in k5905 in k5612 in k5609 in k5605 in k5314 in k5311 in k5308 in k5305 */
static void C_ccall f_28063(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
t2=((C_word*)t0)[2];
((C_proc2)(void*)(*((C_word*)t2+1)))(2,t2,(C_truep(t1)?C_fix(1000):lf[650]));}

/* sprout in k27551 in k27548 in k27545 in k27420 in k27417 in k27414 in k27411 in k27408 in k27405 in k27402 in k27399 in k27396 in k27393 in k27390 in k22468 in k18948 in k18945 in k18942 in k18939 in k18528 in k18525 in k18522 in k18519 in k18516 in k17994 in k17991 in k17468 in k17465 in k17462 in k17459 in k17456 in k17453 in k17450 in k17447 in k17444 in k17441 in k17438 in k17435 in k17432 in k17429 in k17426 in k17423 in k17420 in k17417 in k17414 in k17411 in k17408 in k17269 in k17266 in k17263 in k17260 in k17204 in k17201 in k17198 in k17195 in k17192 in k17189 in k17186 in k17183 in k15938 in k15869 in k15676 in k15673 in k15568 in k15517 in k7924 in k7921 in k5905 in k5612 in k5609 in k5605 in k5314 in k5311 in k5308 in k5305 */
static void C_ccall f_27882(C_word c,C_word t0,C_word t1,C_word t2,...){
C_word tmp;
C_word t3;
va_list v;
C_word *a,c2=c;
C_save_rest(t2,c2,3);
if(c<3) C_bad_min_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_demand(c*C_SIZEOF_PAIR+12)){
C_save_and_reclaim((void*)tr3r,(void*)f_27882r,3,t0,t1,t2);}
else{
a=C_alloc((c-3)*3);
t3=C_restore_rest(a,C_rest_count(0));
f_27882r(t0,t1,t2,t3);}}

static void C_ccall f_27882r(C_word t0,C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word *a=C_alloc(12);
t4=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_27884,a[2]=t2,a[3]=((C_word)li445),tmp=(C_word)a,a+=4,tmp);
t5=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_27996,a[2]=t4,a[3]=((C_word)li446),tmp=(C_word)a,a+=4,tmp);
t6=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_28001,a[2]=t5,a[3]=((C_word)li447),tmp=(C_word)a,a+=4,tmp);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("def-start51705191");
t7=t6;
f_28001(t7,t1);}
else{
t7=(C_word)C_i_car(t3);
t8=(C_word)C_i_cdr(t3);
if(C_truep((C_word)C_i_nullp(t8))){
C_trace("def-id51715189");
t9=t5;
f_27996(t9,t1,t7);}
else{
t9=(C_word)C_i_car(t8);
t10=(C_word)C_i_cdr(t8);
if(C_truep((C_word)C_i_nullp(t10))){
C_trace("body51685173");
t11=t4;
f_27884(t11,t1,t7,t9);}
else{
C_trace("##sys#error");
t11=*((C_word*)lf[646]+1);
((C_proc4)(void*)(*((C_word*)t11+1)))(4,t11,t1,lf[647],t10);}}}}

/* def-start5170 in sprout in k27551 in k27548 in k27545 in k27420 in k27417 in k27414 in k27411 in k27408 in k27405 in k27402 in k27399 in k27396 in k27393 in k27390 in k22468 in k18948 in k18945 in k18942 in k18939 in k18528 in k18525 in k18522 in k18519 in k18516 in k17994 in k17991 in k17468 in k17465 in k17462 in k17459 in k17456 in k17453 in k17450 in k17447 in k17444 in k17441 in k17438 in k17435 in k17432 in k17429 in k17426 in k17423 in k17420 in k17417 in k17414 in k17411 in k17408 in k17269 in k17266 in k17263 in k17260 in k17204 in k17201 in k17198 in k17195 in k17192 in k17189 in k17186 in k17183 in k15938 in k15869 in k15676 in k15673 in k15568 in k15517 in k7924 in k7921 in k5905 in k5612 in k5609 in k5605 in k5314 in k5311 in k5308 in k5305 */
static void C_fcall f_28001(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_28001,NULL,2,t0,t1);}
C_trace("def-id51715189");
t2=((C_word*)t0)[2];
f_27996(t2,t1,C_fix(0));}

/* def-id5171 in sprout in k27551 in k27548 in k27545 in k27420 in k27417 in k27414 in k27411 in k27408 in k27405 in k27402 in k27399 in k27396 in k27393 in k27390 in k22468 in k18948 in k18945 in k18942 in k18939 in k18528 in k18525 in k18522 in k18519 in k18516 in k17994 in k17991 in k17468 in k17465 in k17462 in k17459 in k17456 in k17453 in k17450 in k17447 in k17444 in k17441 in k17438 in k17435 in k17432 in k17429 in k17426 in k17423 in k17420 in k17417 in k17414 in k17411 in k17408 in k17269 in k17266 in k17263 in k17260 in k17204 in k17201 in k17198 in k17195 in k17192 in k17189 in k17186 in k17183 in k15938 in k15869 in k15676 in k15673 in k15568 in k15517 in k7924 in k7921 in k5905 in k5612 in k5609 in k5605 in k5314 in k5311 in k5308 in k5305 */
static void C_fcall f_27996(C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word *a;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_27996,NULL,3,t0,t1,t2);}
C_trace("body51685173");
t3=((C_word*)t0)[2];
f_27884(t3,t1,t2,C_fix(-1));}

/* body5168 in sprout in k27551 in k27548 in k27545 in k27420 in k27417 in k27414 in k27411 in k27408 in k27405 in k27402 in k27399 in k27396 in k27393 in k27390 in k22468 in k18948 in k18945 in k18942 in k18939 in k18528 in k18525 in k18522 in k18519 in k18516 in k17994 in k17991 in k17468 in k17465 in k17462 in k17459 in k17456 in k17453 in k17450 in k17447 in k17444 in k17441 in k17438 in k17435 in k17432 in k17429 in k17426 in k17423 in k17420 in k17417 in k17414 in k17411 in k17408 in k17269 in k17266 in k17263 in k17260 in k17204 in k17201 in k17198 in k17195 in k17192 in k17189 in k17186 in k17183 in k15938 in k15869 in k15676 in k15673 in k15568 in k15517 in k7924 in k7921 in k5905 in k5612 in k5609 in k5605 in k5314 in k5311 in k5308 in k5305 */
static void C_fcall f_27884(C_word t0,C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word t14;
C_word ab[33],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_27884,NULL,4,t0,t1,t2,t3);}
t4=(*a=C_VECTOR_TYPE|1,a[1]=t2,tmp=(C_word)a,a+=2,tmp);
t5=(*a=C_VECTOR_TYPE|1,a[1]=t3,tmp=(C_word)a,a+=2,tmp);
t6=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_27886,a[2]=t4,a[3]=((C_word)li442),tmp=(C_word)a,a+=4,tmp);
t7=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_27914,a[2]=t5,a[3]=((C_word)li443),tmp=(C_word)a,a+=4,tmp);
t8=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_27944,a[2]=t1,tmp=(C_word)a,a+=3,tmp);
if(C_truep((C_word)C_i_pairp(((C_word*)t0)[2]))){
t9=C_SCHEME_UNDEFINED;
t10=(*a=C_VECTOR_TYPE|1,a[1]=t9,tmp=(C_word)a,a+=2,tmp);
t11=C_set_block_item(t10,0,(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_27955,a[2]=t6,a[3]=t7,a[4]=t10,a[5]=((C_word*)t0)[2],a[6]=((C_word)li444),tmp=(C_word)a,a+=7,tmp));
t12=((C_word*)t10)[1];
f_27955(t12,t8,((C_word*)t0)[2]);}
else{
t9=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_27987,a[2]=((C_word*)t0)[2],a[3]=t8,tmp=(C_word)a,a+=4,tmp);
t10=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_27991,a[2]=t7,a[3]=((C_word*)t0)[2],a[4]=t9,tmp=(C_word)a,a+=5,tmp);
C_trace("ChickenBridge.scm: 493  nextstart");
t11=t6;
f_27886(t11,t10);}}

/* k27989 in body5168 in sprout in k27551 in k27548 in k27545 in k27420 in k27417 in k27414 in k27411 in k27408 in k27405 in k27402 in k27399 in k27396 in k27393 in k27390 in k22468 in k18948 in k18945 in k18942 in k18939 in k18528 in k18525 in k18522 in k18519 in k18516 in k17994 in k17991 in k17468 in k17465 in k17462 in k17459 in k17456 in k17453 in k17450 in k17447 in k17444 in k17441 in k17438 in k17435 in k17432 in k17429 in k17426 in k17423 in k17420 in k17417 in k17414 in k17411 in k17408 in k17269 in k17266 in k17263 in k17260 in k17204 in k17201 in k17198 in k17195 in k17192 in k17189 in k17186 in k17183 in k15938 in k15869 in k15676 in k15673 in k15568 in k15517 in k7924 in k7921 in k5905 in k5612 in k5609 in k5605 in k5314 in k5311 in k5308 in k5305 */
static void C_ccall f_27991(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[5],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_27991,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_27995,a[2]=t1,a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],tmp=(C_word)a,a+=5,tmp);
C_trace("ChickenBridge.scm: 493  nextid");
t3=((C_word*)t0)[2];
f_27914(t3,t2);}

/* k27993 in k27989 in body5168 in sprout in k27551 in k27548 in k27545 in k27420 in k27417 in k27414 in k27411 in k27408 in k27405 in k27402 in k27399 in k27396 in k27393 in k27390 in k22468 in k18948 in k18945 in k18942 in k18939 in k18528 in k18525 in k18522 in k18519 in k18516 in k17994 in k17991 in k17468 in k17465 in k17462 in k17459 in k17456 in k17453 in k17450 in k17447 in k17444 in k17441 in k17438 in k17435 in k17432 in k17429 in k17426 in k17423 in k17420 in k17417 in k17414 in k17411 in k17408 in k17269 in k17266 in k17263 in k17260 in k17204 in k17201 in k17198 in k17195 in k17192 in k17189 in k17186 in k17183 in k15938 in k15869 in k15676 in k15673 in k15568 in k15517 in k7924 in k7921 in k5905 in k5612 in k5609 in k5605 in k5314 in k5311 in k5308 in k5305 */
static void C_ccall f_27995(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 493  scheduler-sprout");
f_27797(((C_word*)t0)[4],((C_word*)t0)[3],((C_word*)t0)[2],t1);}

/* k27985 in body5168 in sprout in k27551 in k27548 in k27545 in k27420 in k27417 in k27414 in k27411 in k27408 in k27405 in k27402 in k27399 in k27396 in k27393 in k27390 in k22468 in k18948 in k18945 in k18942 in k18939 in k18528 in k18525 in k18522 in k18519 in k18516 in k17994 in k17991 in k17468 in k17465 in k17462 in k17459 in k17456 in k17453 in k17450 in k17447 in k17444 in k17441 in k17438 in k17435 in k17432 in k17429 in k17426 in k17423 in k17420 in k17417 in k17414 in k17411 in k17408 in k17269 in k17266 in k17263 in k17260 in k17204 in k17201 in k17198 in k17195 in k17192 in k17189 in k17186 in k17183 in k15938 in k15869 in k15676 in k15673 in k15568 in k15517 in k7924 in k7921 in k5905 in k5612 in k5609 in k5605 in k5314 in k5311 in k5308 in k5305 */
static void C_ccall f_27987(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
t2=((C_word*)t0)[3];
f_27944(2,t2,((C_word*)t0)[2]);}

/* do5182 in body5168 in sprout in k27551 in k27548 in k27545 in k27420 in k27417 in k27414 in k27411 in k27408 in k27405 in k27402 in k27399 in k27396 in k27393 in k27390 in k22468 in k18948 in k18945 in k18942 in k18939 in k18528 in k18525 in k18522 in k18519 in k18516 in k17994 in k17991 in k17468 in k17465 in k17462 in k17459 in k17456 in k17453 in k17450 in k17447 in k17444 in k17441 in k17438 in k17435 in k17432 in k17429 in k17426 in k17423 in k17420 in k17417 in k17414 in k17411 in k17408 in k17269 in k17266 in k17263 in k17260 in k17204 in k17201 in k17198 in k17195 in k17192 in k17189 in k17186 in k17183 in k15938 in k15869 in k15676 in k15673 in k15568 in k15517 in k7924 in k7921 in k5905 in k5612 in k5609 in k5605 in k5314 in k5311 in k5308 in k5305 */
static void C_fcall f_27955(C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[10],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_27955,NULL,3,t0,t1,t2);}
if(C_truep((C_word)C_i_nullp(t2))){
t3=t1;
((C_proc2)(void*)(*((C_word*)t3+1)))(2,t3,((C_word*)t0)[5]);}
else{
t3=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_27965,a[2]=t1,a[3]=((C_word*)t0)[4],a[4]=t2,tmp=(C_word)a,a+=5,tmp);
t4=(C_word)C_i_car(t2);
t5=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_27980,a[2]=((C_word*)t0)[3],a[3]=t4,a[4]=t3,tmp=(C_word)a,a+=5,tmp);
C_trace("ChickenBridge.scm: 491  nextstart");
t6=((C_word*)t0)[2];
f_27886(t6,t5);}}

/* k27978 in do5182 in body5168 in sprout in k27551 in k27548 in k27545 in k27420 in k27417 in k27414 in k27411 in k27408 in k27405 in k27402 in k27399 in k27396 in k27393 in k27390 in k22468 in k18948 in k18945 in k18942 in k18939 in k18528 in k18525 in k18522 in k18519 in k18516 in k17994 in k17991 in k17468 in k17465 in k17462 in k17459 in k17456 in k17453 in k17450 in k17447 in k17444 in k17441 in k17438 in k17435 in k17432 in k17429 in k17426 in k17423 in k17420 in k17417 in k17414 in k17411 in k17408 in k17269 in k17266 in k17263 in k17260 in k17204 in k17201 in k17198 in k17195 in k17192 in k17189 in k17186 in k17183 in k15938 in k15869 in k15676 in k15673 in k15568 in k15517 in k7924 in k7921 in k5905 in k5612 in k5609 in k5605 in k5314 in k5311 in k5308 in k5305 */
static void C_ccall f_27980(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[5],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_27980,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_27984,a[2]=t1,a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],tmp=(C_word)a,a+=5,tmp);
C_trace("ChickenBridge.scm: 491  nextid");
t3=((C_word*)t0)[2];
f_27914(t3,t2);}

/* k27982 in k27978 in do5182 in body5168 in sprout in k27551 in k27548 in k27545 in k27420 in k27417 in k27414 in k27411 in k27408 in k27405 in k27402 in k27399 in k27396 in k27393 in k27390 in k22468 in k18948 in k18945 in k18942 in k18939 in k18528 in k18525 in k18522 in k18519 in k18516 in k17994 in k17991 in k17468 in k17465 in k17462 in k17459 in k17456 in k17453 in k17450 in k17447 in k17444 in k17441 in k17438 in k17435 in k17432 in k17429 in k17426 in k17423 in k17420 in k17417 in k17414 in k17411 in k17408 in k17269 in k17266 in k17263 in k17260 in k17204 in k17201 in k17198 in k17195 in k17192 in k17189 in k17186 in k17183 in k15938 in k15869 in k15676 in k15673 in k15568 in k15517 in k7924 in k7921 in k5905 in k5612 in k5609 in k5605 in k5314 in k5311 in k5308 in k5305 */
static void C_ccall f_27984(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 491  scheduler-sprout");
f_27797(((C_word*)t0)[4],((C_word*)t0)[3],((C_word*)t0)[2],t1);}

/* k27963 in do5182 in body5168 in sprout in k27551 in k27548 in k27545 in k27420 in k27417 in k27414 in k27411 in k27408 in k27405 in k27402 in k27399 in k27396 in k27393 in k27390 in k22468 in k18948 in k18945 in k18942 in k18939 in k18528 in k18525 in k18522 in k18519 in k18516 in k17994 in k17991 in k17468 in k17465 in k17462 in k17459 in k17456 in k17453 in k17450 in k17447 in k17444 in k17441 in k17438 in k17435 in k17432 in k17429 in k17426 in k17423 in k17420 in k17417 in k17414 in k17411 in k17408 in k17269 in k17266 in k17263 in k17260 in k17204 in k17201 in k17198 in k17195 in k17192 in k17189 in k17186 in k17183 in k15938 in k15869 in k15676 in k15673 in k15568 in k15517 in k7924 in k7921 in k5905 in k5612 in k5609 in k5605 in k5314 in k5311 in k5308 in k5305 */
static void C_ccall f_27965(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word *a;
t2=(C_word)C_i_cdr(((C_word*)t0)[4]);
t3=((C_word*)((C_word*)t0)[3])[1];
f_27955(t3,((C_word*)t0)[2],t2);}

/* k27942 in body5168 in sprout in k27551 in k27548 in k27545 in k27420 in k27417 in k27414 in k27411 in k27408 in k27405 in k27402 in k27399 in k27396 in k27393 in k27390 in k22468 in k18948 in k18945 in k18942 in k18939 in k18528 in k18525 in k18522 in k18519 in k18516 in k17994 in k17991 in k17468 in k17465 in k17462 in k17459 in k17456 in k17453 in k17450 in k17447 in k17444 in k17441 in k17438 in k17435 in k17432 in k17429 in k17426 in k17423 in k17420 in k17417 in k17414 in k17411 in k17408 in k17269 in k17266 in k17263 in k17260 in k17204 in k17201 in k17198 in k17195 in k17192 in k17189 in k17186 in k17183 in k15938 in k15869 in k15676 in k15673 in k15568 in k15517 in k7924 in k7921 in k5905 in k5612 in k5609 in k5605 in k5314 in k5311 in k5308 in k5305 */
static void C_ccall f_27944(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 497  values");
C_values(2,0,((C_word*)t0)[2]);}

/* nextid in body5168 in sprout in k27551 in k27548 in k27545 in k27420 in k27417 in k27414 in k27411 in k27408 in k27405 in k27402 in k27399 in k27396 in k27393 in k27390 in k22468 in k18948 in k18945 in k18942 in k18939 in k18528 in k18525 in k18522 in k18519 in k18516 in k17994 in k17991 in k17468 in k17465 in k17462 in k17459 in k17456 in k17453 in k17450 in k17447 in k17444 in k17441 in k17438 in k17435 in k17432 in k17429 in k17426 in k17423 in k17420 in k17417 in k17414 in k17411 in k17408 in k17269 in k17266 in k17263 in k17260 in k17204 in k17201 in k17198 in k17195 in k17192 in k17189 in k17186 in k17183 in k15938 in k15869 in k15676 in k15673 in k15568 in k15517 in k7924 in k7921 in k5905 in k5612 in k5609 in k5605 in k5314 in k5311 in k5308 in k5305 */
static void C_fcall f_27914(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_27914,NULL,2,t0,t1);}
if(C_truep((C_word)C_i_pairp(((C_word*)((C_word*)t0)[2])[1]))){
t2=(C_word)C_i_car(((C_word*)((C_word*)t0)[2])[1]);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[2])[1]);
t4=(C_word)C_i_nullp(t3);
t5=(C_truep(t4)?(C_word)C_i_car(((C_word*)((C_word*)t0)[2])[1]):(C_word)C_i_cdr(((C_word*)((C_word*)t0)[2])[1]));
t6=C_mutate(((C_word *)((C_word*)t0)[2])+1,t5);
t7=t1;
((C_proc2)(void*)(*((C_word*)t7+1)))(2,t7,t2);}
else{
t2=t1;
((C_proc2)(void*)(*((C_word*)t2+1)))(2,t2,((C_word*)((C_word*)t0)[2])[1]);}}

/* nextstart in body5168 in sprout in k27551 in k27548 in k27545 in k27420 in k27417 in k27414 in k27411 in k27408 in k27405 in k27402 in k27399 in k27396 in k27393 in k27390 in k22468 in k18948 in k18945 in k18942 in k18939 in k18528 in k18525 in k18522 in k18519 in k18516 in k17994 in k17991 in k17468 in k17465 in k17462 in k17459 in k17456 in k17453 in k17450 in k17447 in k17444 in k17441 in k17438 in k17435 in k17432 in k17429 in k17426 in k17423 in k17420 in k17417 in k17414 in k17411 in k17408 in k17269 in k17266 in k17263 in k17260 in k17204 in k17201 in k17198 in k17195 in k17192 in k17189 in k17186 in k17183 in k15938 in k15869 in k15676 in k15673 in k15568 in k15517 in k7924 in k7921 in k5905 in k5612 in k5609 in k5605 in k5314 in k5311 in k5308 in k5305 */
static void C_fcall f_27886(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_27886,NULL,2,t0,t1);}
if(C_truep((C_word)C_i_pairp(((C_word*)((C_word*)t0)[2])[1]))){
t2=(C_word)C_i_car(((C_word*)((C_word*)t0)[2])[1]);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[2])[1]);
t4=(C_word)C_i_nullp(t3);
t5=(C_truep(t4)?(C_word)C_i_car(((C_word*)((C_word*)t0)[2])[1]):(C_word)C_i_cdr(((C_word*)((C_word*)t0)[2])[1]));
t6=C_mutate(((C_word *)((C_word*)t0)[2])+1,t5);
t7=t1;
((C_proc2)(void*)(*((C_word*)t7+1)))(2,t7,t2);}
else{
t2=t1;
((C_proc2)(void*)(*((C_word*)t2+1)))(2,t2,((C_word*)((C_word*)t0)[2])[1]);}}

/* load-sal-file in k27551 in k27548 in k27545 in k27420 in k27417 in k27414 in k27411 in k27408 in k27405 in k27402 in k27399 in k27396 in k27393 in k27390 in k22468 in k18948 in k18945 in k18942 in k18939 in k18528 in k18525 in k18522 in k18519 in k18516 in k17994 in k17991 in k17468 in k17465 in k17462 in k17459 in k17456 in k17453 in k17450 in k17447 in k17444 in k17441 in k17438 in k17435 in k17432 in k17429 in k17426 in k17423 in k17420 in k17417 in k17414 in k17411 in k17408 in k17269 in k17266 in k17263 in k17260 in k17204 in k17201 in k17198 in k17195 in k17192 in k17189 in k17186 in k17183 in k15938 in k15869 in k15676 in k15673 in k15568 in k15517 in k7924 in k7921 in k5905 in k5612 in k5609 in k5605 in k5314 in k5311 in k5308 in k5305 */
static void C_ccall f_27863(C_word c,C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word ab[3],*a=ab;
if(c!=3) C_bad_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr3,(void*)f_27863,3,t0,t1,t2);}
t3=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_27868,a[2]=((C_word)li440),tmp=(C_word)a,a+=3,tmp);
((C_proc3)(void*)(*((C_word*)t3+1)))(3,t3,t1,t2);}

/* f_27868 in load-sal-file in k27551 in k27548 in k27545 in k27420 in k27417 in k27414 in k27411 in k27408 in k27405 in k27402 in k27399 in k27396 in k27393 in k27390 in k22468 in k18948 in k18945 in k18942 in k18939 in k18528 in k18525 in k18522 in k18519 in k18516 in k17994 in k17991 in k17468 in k17465 in k17462 in k17459 in k17456 in k17453 in k17450 in k17447 in k17444 in k17441 in k17438 in k17435 in k17432 in k17429 in k17426 in k17423 in k17420 in k17417 in k17414 in k17411 in k17408 in k17269 in k17266 in k17263 in k17260 in k17204 in k17201 in k17198 in k17195 in k17192 in k17189 in k17186 in k17183 in k15938 in k15869 in k15676 in k15673 in k15568 in k15517 in k7924 in k7921 in k5905 in k5612 in k5609 in k5605 in k5314 in k5311 in k5308 in k5305 */
static void C_ccall f_27868(C_word c,C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word t5;
C_word ab[3],*a=ab;
if(c!=3) C_bad_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr3,(void*)f_27868,3,t0,t1,t2);}
t3=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_27873,a[2]=t1,tmp=(C_word)a,a+=3,tmp);
if(C_truep(t2)){
t4=(C_word)C_i_foreign_string_argumentp(t2);
C_trace("##sys#make-c-string");
t5=C_retrieve(lf[46]);
((C_proc3)C_retrieve_proc(t5))(3,t5,t3,t4);}
else{
t4=t3;
f_27873(2,t4,C_SCHEME_FALSE);}}

/* k27871 */
static void C_ccall f_27873(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
t2=((C_word*)t0)[2];
((C_proc2)(void*)(*((C_word*)t2+1)))(2,t2,(C_word)stub5159(C_SCHEME_UNDEFINED,t1));}

/* scheduler-stop in k27551 in k27548 in k27545 in k27420 in k27417 in k27414 in k27411 in k27408 in k27405 in k27402 in k27399 in k27396 in k27393 in k27390 in k22468 in k18948 in k18945 in k18942 in k18939 in k18528 in k18525 in k18522 in k18519 in k18516 in k17994 in k17991 in k17468 in k17465 in k17462 in k17459 in k17456 in k17453 in k17450 in k17447 in k17444 in k17441 in k17438 in k17435 in k17432 in k17429 in k17426 in k17423 in k17420 in k17417 in k17414 in k17411 in k17408 in k17269 in k17266 in k17263 in k17260 in k17204 in k17201 in k17198 in k17195 in k17192 in k17189 in k17186 in k17183 in k15938 in k15869 in k15676 in k15673 in k15568 in k15517 in k7924 in k7921 in k5905 in k5612 in k5609 in k5605 in k5314 in k5311 in k5308 in k5305 */
static void C_fcall f_27841(C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word ab[4],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_27841,NULL,2,t1,t2);}
t3=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_27845,a[2]=t1,a[3]=t2,tmp=(C_word)a,a+=4,tmp);
C_trace("##sys#gc");
t4=C_retrieve(lf[642]);
((C_proc3)C_retrieve_proc(t4))(3,t4,t3,C_SCHEME_FALSE);}

/* k27843 in scheduler-stop in k27551 in k27548 in k27545 in k27420 in k27417 in k27414 in k27411 in k27408 in k27405 in k27402 in k27399 in k27396 in k27393 in k27390 in k22468 in k18948 in k18945 in k18942 in k18939 in k18528 in k18525 in k18522 in k18519 in k18516 in k17994 in k17991 in k17468 in k17465 in k17462 in k17459 in k17456 in k17453 in k17450 in k17447 in k17444 in k17441 in k17438 in k17435 in k17432 in k17429 in k17426 in k17423 in k17420 in k17417 in k17414 in k17411 in k17408 in k17269 in k17266 in k17263 in k17260 in k17204 in k17201 in k17198 in k17195 in k17192 in k17189 in k17186 in k17183 in k15938 in k15869 in k15676 in k15673 in k15568 in k15517 in k7924 in k7921 in k5905 in k5612 in k5609 in k5605 in k5314 in k5311 in k5308 in k5305 */
static void C_ccall f_27845(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[11],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_27845,2,t0,t1);}
t2=(C_word)C_a_i_bytevector(&a,1,C_fix(6));
t3=(C_word)C_i_foreign_fixnum_argumentp(((C_word*)t0)[3]);
t4=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)stub5148,a[2]=((C_word)li438),tmp=(C_word)a,a+=3,tmp);
((C_proc4)C_retrieve_proc(t4))(4,t4,((C_word*)t0)[2],t2,t3);}

/* scheduler-sprout in k27551 in k27548 in k27545 in k27420 in k27417 in k27414 in k27411 in k27408 in k27405 in k27402 in k27399 in k27396 in k27393 in k27390 in k22468 in k18948 in k18945 in k18942 in k18939 in k18528 in k18525 in k18522 in k18519 in k18516 in k17994 in k17991 in k17468 in k17465 in k17462 in k17459 in k17456 in k17453 in k17450 in k17447 in k17444 in k17441 in k17438 in k17435 in k17432 in k17429 in k17426 in k17423 in k17420 in k17417 in k17414 in k17411 in k17408 in k17269 in k17266 in k17263 in k17260 in k17204 in k17201 in k17198 in k17195 in k17192 in k17189 in k17186 in k17183 in k15938 in k15869 in k15676 in k15673 in k15568 in k15517 in k7924 in k7921 in k5905 in k5612 in k5609 in k5605 in k5314 in k5311 in k5308 in k5305 */
static void C_fcall f_27797(C_word t1,C_word t2,C_word t3,C_word t4){
C_word tmp;
C_word t5;
C_word t6;
C_word ab[6],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_27797,NULL,4,t1,t2,t3,t4);}
t5=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_27801,a[2]=t2,a[3]=t1,a[4]=t4,a[5]=t3,tmp=(C_word)a,a+=6,tmp);
C_trace("##sys#gc");
t6=C_retrieve(lf[642]);
((C_proc3)C_retrieve_proc(t6))(3,t6,t5,C_SCHEME_FALSE);}

/* k27799 in scheduler-sprout in k27551 in k27548 in k27545 in k27420 in k27417 in k27414 in k27411 in k27408 in k27405 in k27402 in k27399 in k27396 in k27393 in k27390 in k22468 in k18948 in k18945 in k18942 in k18939 in k18528 in k18525 in k18522 in k18519 in k18516 in k17994 in k17991 in k17468 in k17465 in k17462 in k17459 in k17456 in k17453 in k17450 in k17447 in k17444 in k17441 in k17438 in k17435 in k17432 in k17429 in k17426 in k17423 in k17420 in k17417 in k17414 in k17411 in k17408 in k17269 in k17266 in k17263 in k17260 in k17204 in k17201 in k17198 in k17195 in k17192 in k17189 in k17186 in k17183 in k15938 in k15869 in k15676 in k15673 in k15568 in k15517 in k7924 in k7921 in k5905 in k5612 in k5609 in k5605 in k5314 in k5311 in k5308 in k5305 */
static void C_ccall f_27801(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[11],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_27801,2,t0,t1);}
t2=(C_word)C_a_i_bytevector(&a,1,C_fix(6));
t3=(C_word)C_i_foreign_flonum_argumentp(((C_word*)t0)[5]);
t4=(C_word)C_i_foreign_fixnum_argumentp(((C_word*)t0)[4]);
t5=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)stub5128,a[2]=((C_word)li436),tmp=(C_word)a,a+=3,tmp);
((C_proc6)C_retrieve_proc(t5))(6,t5,((C_word*)t0)[3],t2,((C_word*)t0)[2],t3,t4);}

/* scheduler-set-time-milliseconds in k27551 in k27548 in k27545 in k27420 in k27417 in k27414 in k27411 in k27408 in k27405 in k27402 in k27399 in k27396 in k27393 in k27390 in k22468 in k18948 in k18945 in k18942 in k18939 in k18528 in k18525 in k18522 in k18519 in k18516 in k17994 in k17991 in k17468 in k17465 in k17462 in k17459 in k17456 in k17453 in k17450 in k17447 in k17444 in k17441 in k17438 in k17435 in k17432 in k17429 in k17426 in k17423 in k17420 in k17417 in k17414 in k17411 in k17408 in k17269 in k17266 in k17263 in k17260 in k17204 in k17201 in k17198 in k17195 in k17192 in k17189 in k17186 in k17183 in k15938 in k15869 in k15676 in k15673 in k15568 in k15517 in k7924 in k7921 in k5905 in k5612 in k5609 in k5605 in k5314 in k5311 in k5308 in k5305 */
static void C_fcall f_27788(C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word ab[4],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_27788,NULL,2,t1,t2);}
t3=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_27792,a[2]=t2,a[3]=t1,tmp=(C_word)a,a+=4,tmp);
C_trace("##sys#gc");
t4=C_retrieve(lf[642]);
((C_proc3)C_retrieve_proc(t4))(3,t4,t3,C_SCHEME_FALSE);}

/* k27790 in scheduler-set-time-milliseconds in k27551 in k27548 in k27545 in k27420 in k27417 in k27414 in k27411 in k27408 in k27405 in k27402 in k27399 in k27396 in k27393 in k27390 in k22468 in k18948 in k18945 in k18942 in k18939 in k18528 in k18525 in k18522 in k18519 in k18516 in k17994 in k17991 in k17468 in k17465 in k17462 in k17459 in k17456 in k17453 in k17450 in k17447 in k17444 in k17441 in k17438 in k17435 in k17432 in k17429 in k17426 in k17423 in k17420 in k17417 in k17414 in k17411 in k17408 in k17269 in k17266 in k17263 in k17260 in k17204 in k17201 in k17198 in k17195 in k17192 in k17189 in k17186 in k17183 in k15938 in k15869 in k15676 in k15673 in k15568 in k15517 in k7924 in k7921 in k5905 in k5612 in k5609 in k5605 in k5314 in k5311 in k5308 in k5305 */
static void C_ccall f_27792(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[11],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_27792,2,t0,t1);}
t2=(C_word)C_a_i_bytevector(&a,1,C_fix(6));
t3=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)stub5120,a[2]=((C_word)li434),tmp=(C_word)a,a+=3,tmp);
((C_proc4)C_retrieve_proc(t3))(4,t3,((C_word*)t0)[3],t2,((C_word*)t0)[2]);}

/* current-time-seconds in k27551 in k27548 in k27545 in k27420 in k27417 in k27414 in k27411 in k27408 in k27405 in k27402 in k27399 in k27396 in k27393 in k27390 in k22468 in k18948 in k18945 in k18942 in k18939 in k18528 in k18525 in k18522 in k18519 in k18516 in k17994 in k17991 in k17468 in k17465 in k17462 in k17459 in k17456 in k17453 in k17450 in k17447 in k17444 in k17441 in k17438 in k17435 in k17432 in k17429 in k17426 in k17423 in k17420 in k17417 in k17414 in k17411 in k17408 in k17269 in k17266 in k17263 in k17260 in k17204 in k17201 in k17198 in k17195 in k17192 in k17189 in k17186 in k17183 in k15938 in k15869 in k15676 in k15673 in k15568 in k15517 in k7924 in k7921 in k5905 in k5612 in k5609 in k5605 in k5314 in k5311 in k5308 in k5305 */
static void C_ccall f_27776(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[6],*a=ab;
if(c!=2) C_bad_argc_2(c,2,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_27776,2,t0,t1);}
t2=(C_word)C_a_i_bytevector(&a,1,C_fix(4));
t3=t1;
((C_proc2)(void*)(*((C_word*)t3+1)))(2,t3,(C_word)stub5112(t2));}

/* current-time-milliseconds in k27551 in k27548 in k27545 in k27420 in k27417 in k27414 in k27411 in k27408 in k27405 in k27402 in k27399 in k27396 in k27393 in k27390 in k22468 in k18948 in k18945 in k18942 in k18939 in k18528 in k18525 in k18522 in k18519 in k18516 in k17994 in k17991 in k17468 in k17465 in k17462 in k17459 in k17456 in k17453 in k17450 in k17447 in k17444 in k17441 in k17438 in k17435 in k17432 in k17429 in k17426 in k17423 in k17420 in k17417 in k17414 in k17411 in k17408 in k17269 in k17266 in k17263 in k17260 in k17204 in k17201 in k17198 in k17195 in k17192 in k17189 in k17186 in k17183 in k15938 in k15869 in k15676 in k15673 in k15568 in k15517 in k7924 in k7921 in k5905 in k5612 in k5609 in k5605 in k5314 in k5311 in k5308 in k5305 */
static void C_ccall f_27773(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[6],*a=ab;
if(c!=2) C_bad_argc_2(c,2,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_27773,2,t0,t1);}
t2=(C_word)C_a_i_bytevector(&a,1,C_fix(4));
t3=t1;
((C_proc2)(void*)(*((C_word*)t3+1)))(2,t3,(C_word)stub5109(t2));}

/* print-error in k27551 in k27548 in k27545 in k27420 in k27417 in k27414 in k27411 in k27408 in k27405 in k27402 in k27399 in k27396 in k27393 in k27390 in k22468 in k18948 in k18945 in k18942 in k18939 in k18528 in k18525 in k18522 in k18519 in k18516 in k17994 in k17991 in k17468 in k17465 in k17462 in k17459 in k17456 in k17453 in k17450 in k17447 in k17444 in k17441 in k17438 in k17435 in k17432 in k17429 in k17426 in k17423 in k17420 in k17417 in k17414 in k17411 in k17408 in k17269 in k17266 in k17263 in k17260 in k17204 in k17201 in k17198 in k17195 in k17192 in k17189 in k17186 in k17183 in k15938 in k15869 in k15676 in k15673 in k15568 in k15517 in k7924 in k7921 in k5905 in k5612 in k5609 in k5605 in k5314 in k5311 in k5308 in k5305 */
static void C_ccall f_27759(C_word c,C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word t5;
C_word ab[3],*a=ab;
if(c!=3) C_bad_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr3,(void*)f_27759,3,t0,t1,t2);}
t3=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_27764,a[2]=t1,tmp=(C_word)a,a+=3,tmp);
if(C_truep(t2)){
t4=(C_word)C_i_foreign_string_argumentp(t2);
C_trace("##sys#make-c-string");
t5=C_retrieve(lf[46]);
((C_proc3)C_retrieve_proc(t5))(3,t5,t3,t4);}
else{
t4=t3;
f_27764(2,t4,C_SCHEME_FALSE);}}

/* k27762 in print-error in k27551 in k27548 in k27545 in k27420 in k27417 in k27414 in k27411 in k27408 in k27405 in k27402 in k27399 in k27396 in k27393 in k27390 in k22468 in k18948 in k18945 in k18942 in k18939 in k18528 in k18525 in k18522 in k18519 in k18516 in k17994 in k17991 in k17468 in k17465 in k17462 in k17459 in k17456 in k17453 in k17450 in k17447 in k17444 in k17441 in k17438 in k17435 in k17432 in k17429 in k17426 in k17423 in k17420 in k17417 in k17414 in k17411 in k17408 in k17269 in k17266 in k17263 in k17260 in k17204 in k17201 in k17198 in k17195 in k17192 in k17189 in k17186 in k17183 in k15938 in k15869 in k15676 in k15673 in k15568 in k15517 in k7924 in k7921 in k5905 in k5612 in k5609 in k5605 in k5314 in k5311 in k5308 in k5305 */
static void C_ccall f_27764(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
t2=((C_word*)t0)[2];
((C_proc2)(void*)(*((C_word*)t2+1)))(2,t2,(C_word)stub5104(C_SCHEME_UNDEFINED,t1));}

/* print-message in k27551 in k27548 in k27545 in k27420 in k27417 in k27414 in k27411 in k27408 in k27405 in k27402 in k27399 in k27396 in k27393 in k27390 in k22468 in k18948 in k18945 in k18942 in k18939 in k18528 in k18525 in k18522 in k18519 in k18516 in k17994 in k17991 in k17468 in k17465 in k17462 in k17459 in k17456 in k17453 in k17450 in k17447 in k17444 in k17441 in k17438 in k17435 in k17432 in k17429 in k17426 in k17423 in k17420 in k17417 in k17414 in k17411 in k17408 in k17269 in k17266 in k17263 in k17260 in k17204 in k17201 in k17198 in k17195 in k17192 in k17189 in k17186 in k17183 in k15938 in k15869 in k15676 in k15673 in k15568 in k15517 in k7924 in k7921 in k5905 in k5612 in k5609 in k5605 in k5314 in k5311 in k5308 in k5305 */
static void C_ccall f_27745(C_word c,C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word t5;
C_word ab[3],*a=ab;
if(c!=3) C_bad_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr3,(void*)f_27745,3,t0,t1,t2);}
t3=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_27750,a[2]=t1,tmp=(C_word)a,a+=3,tmp);
if(C_truep(t2)){
t4=(C_word)C_i_foreign_string_argumentp(t2);
C_trace("##sys#make-c-string");
t5=C_retrieve(lf[46]);
((C_proc3)C_retrieve_proc(t5))(3,t5,t3,t4);}
else{
t4=t3;
f_27750(2,t4,C_SCHEME_FALSE);}}

/* k27748 in print-message in k27551 in k27548 in k27545 in k27420 in k27417 in k27414 in k27411 in k27408 in k27405 in k27402 in k27399 in k27396 in k27393 in k27390 in k22468 in k18948 in k18945 in k18942 in k18939 in k18528 in k18525 in k18522 in k18519 in k18516 in k17994 in k17991 in k17468 in k17465 in k17462 in k17459 in k17456 in k17453 in k17450 in k17447 in k17444 in k17441 in k17438 in k17435 in k17432 in k17429 in k17426 in k17423 in k17420 in k17417 in k17414 in k17411 in k17408 in k17269 in k17266 in k17263 in k17260 in k17204 in k17201 in k17198 in k17195 in k17192 in k17189 in k17186 in k17183 in k15938 in k15869 in k15676 in k15673 in k15568 in k15517 in k7924 in k7921 in k5905 in k5612 in k5609 in k5605 in k5314 in k5311 in k5308 in k5305 */
static void C_ccall f_27750(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
t2=((C_word*)t0)[2];
((C_proc2)(void*)(*((C_word*)t2+1)))(2,t2,(C_word)stub5098(C_SCHEME_UNDEFINED,t1));}

/* cm-logo in k27551 in k27548 in k27545 in k27420 in k27417 in k27414 in k27411 in k27408 in k27405 in k27402 in k27399 in k27396 in k27393 in k27390 in k22468 in k18948 in k18945 in k18942 in k18939 in k18528 in k18525 in k18522 in k18519 in k18516 in k17994 in k17991 in k17468 in k17465 in k17462 in k17459 in k17456 in k17453 in k17450 in k17447 in k17444 in k17441 in k17438 in k17435 in k17432 in k17429 in k17426 in k17423 in k17420 in k17417 in k17414 in k17411 in k17408 in k17269 in k17266 in k17263 in k17260 in k17204 in k17201 in k17198 in k17195 in k17192 in k17189 in k17186 in k17183 in k15938 in k15869 in k15676 in k15673 in k15568 in k15517 in k7924 in k7921 in k5905 in k5612 in k5609 in k5605 in k5314 in k5311 in k5308 in k5305 */
static void C_ccall f_27555(C_word c,C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word t5;
C_word ab[7],*a=ab;
if(c!=3) C_bad_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr3,(void*)f_27555,3,t0,t1,t2);}
t3=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_27609,a[2]=t1,tmp=(C_word)a,a+=3,tmp);
t4=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_27616,a[2]=t3,a[3]=t2,tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 388  make-string");
t5=*((C_word*)lf[351]+1);
((C_proc3)C_retrieve_proc(t5))(3,t5,t4,C_fix(15));}

/* k27614 in cm-logo in k27551 in k27548 in k27545 in k27420 in k27417 in k27414 in k27411 in k27408 in k27405 in k27402 in k27399 in k27396 in k27393 in k27390 in k22468 in k18948 in k18945 in k18942 in k18939 in k18528 in k18525 in k18522 in k18519 in k18516 in k17994 in k17991 in k17468 in k17465 in k17462 in k17459 in k17456 in k17453 in k17450 in k17447 in k17444 in k17441 in k17438 in k17435 in k17432 in k17429 in k17426 in k17423 in k17420 in k17417 in k17414 in k17411 in k17408 in k17269 in k17266 in k17263 in k17260 in k17204 in k17201 in k17198 in k17195 in k17192 in k17189 in k17186 in k17183 in k15938 in k15869 in k15676 in k15673 in k15568 in k15517 in k7924 in k7921 in k5905 in k5612 in k5609 in k5605 in k5314 in k5311 in k5308 in k5305 */
static void C_ccall f_27616(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_27616,2,t0,t1);}
t2=C_SCHEME_UNDEFINED;
t3=(*a=C_VECTOR_TYPE|1,a[1]=t2,tmp=(C_word)a,a+=2,tmp);
t4=C_set_block_item(t3,0,(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_27618,a[2]=((C_word*)t0)[3],a[3]=t3,a[4]=((C_word)li428),tmp=(C_word)a,a+=5,tmp));
t5=((C_word*)t3)[1];
f_27618(t5,((C_word*)t0)[2],lf[638],t1,C_fix(0));}

/* do5072 in k27614 in cm-logo in k27551 in k27548 in k27545 in k27420 in k27417 in k27414 in k27411 in k27408 in k27405 in k27402 in k27399 in k27396 in k27393 in k27390 in k22468 in k18948 in k18945 in k18942 in k18939 in k18528 in k18525 in k18522 in k18519 in k18516 in k17994 in k17991 in k17468 in k17465 in k17462 in k17459 in k17456 in k17453 in k17450 in k17447 in k17444 in k17441 in k17438 in k17435 in k17432 in k17429 in k17426 in k17423 in k17420 in k17417 in k17414 in k17411 in k17408 in k17269 in k17266 in k17263 in k17260 in k17204 in k17201 in k17198 in k17195 in k17192 in k17189 in k17186 in k17183 in k15938 in k15869 in k15676 in k15673 in k15568 in k15517 in k7924 in k7921 in k5905 in k5612 in k5609 in k5605 in k5314 in k5311 in k5308 in k5305 */
static void C_fcall f_27618(C_word t0,C_word t1,C_word t2,C_word t3,C_word t4){
C_word tmp;
C_word t5;
C_word t6;
C_word ab[8],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_27618,NULL,5,t0,t1,t2,t3,t4);}
if(C_truep((C_word)C_i_nequalp(t4,C_fix(7)))){
t5=t1;
((C_proc2)(void*)(*((C_word*)t5+1)))(2,t5,C_SCHEME_FALSE);}
else{
t5=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_27628,a[2]=((C_word*)t0)[2],a[3]=t3,a[4]=t2,a[5]=t1,a[6]=((C_word*)t0)[3],a[7]=t4,tmp=(C_word)a,a+=8,tmp);
if(C_truep((C_word)C_i_nequalp(t4,C_fix(0)))){
C_trace("ChickenBridge.scm: 391  printf");
t6=C_retrieve(lf[327]);
((C_proc3)C_retrieve_proc(t6))(3,t6,t5,t2);}
else{
t6=t5;
f_27628(2,t6,C_SCHEME_UNDEFINED);}}}

/* k27626 in do5072 in k27614 in cm-logo in k27551 in k27548 in k27545 in k27420 in k27417 in k27414 in k27411 in k27408 in k27405 in k27402 in k27399 in k27396 in k27393 in k27390 in k22468 in k18948 in k18945 in k18942 in k18939 in k18528 in k18525 in k18522 in k18519 in k18516 in k17994 in k17991 in k17468 in k17465 in k17462 in k17459 in k17456 in k17453 in k17450 in k17447 in k17444 in k17441 in k17438 in k17435 in k17432 in k17429 in k17426 in k17423 in k17420 in k17417 in k17414 in k17411 in k17408 in k17269 in k17266 in k17263 in k17260 in k17204 in k17201 in k17198 in k17195 in k17192 in k17189 in k17186 in k17183 in k15938 in k15869 in k15676 in k15673 in k15568 in k15517 in k7924 in k7921 in k5905 in k5612 in k5609 in k5605 in k5314 in k5311 in k5308 in k5305 */
static void C_ccall f_27628(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word ab[19],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_27628,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_27631,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_27645,a[2]=t2,tmp=(C_word)a,a+=3,tmp);
t4=C_SCHEME_UNDEFINED;
t5=(*a=C_VECTOR_TYPE|1,a[1]=t4,tmp=(C_word)a,a+=2,tmp);
t6=C_set_block_item(t5,0,(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_27647,a[2]=t5,a[3]=((C_word*)t0)[2],a[4]=((C_word*)t0)[3],a[5]=((C_word*)t0)[7],a[6]=((C_word)li427),tmp=(C_word)a,a+=7,tmp));
t7=((C_word*)t5)[1];
f_27647(t7,t3,C_fix(0));}

/* do5086 in k27626 in do5072 in k27614 in cm-logo in k27551 in k27548 in k27545 in k27420 in k27417 in k27414 in k27411 in k27408 in k27405 in k27402 in k27399 in k27396 in k27393 in k27390 in k22468 in k18948 in k18945 in k18942 in k18939 in k18528 in k18525 in k18522 in k18519 in k18516 in k17994 in k17991 in k17468 in k17465 in k17462 in k17459 in k17456 in k17453 in k17450 in k17447 in k17444 in k17441 in k17438 in k17435 in k17432 in k17429 in k17426 in k17423 in k17420 in k17417 in k17414 in k17411 in k17408 in k17269 in k17266 in k17263 in k17260 in k17204 in k17201 in k17198 in k17195 in k17192 in k17189 in k17186 in k17183 in k15938 in k15869 in k15676 in k15673 in k15568 in k15517 in k7924 in k7921 in k5905 in k5612 in k5609 in k5605 in k5314 in k5311 in k5308 in k5305 */
static void C_fcall f_27647(C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word t14;
C_word t15;
C_word t16;
C_word t17;
C_word ab[38],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_27647,NULL,3,t0,t1,t2);}
if(C_truep((C_word)C_i_nequalp(t2,C_fix(15)))){
if(C_truep((C_word)C_i_nequalp(((C_word*)t0)[5],C_fix(3)))){
t3=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_27667,a[2]=((C_word*)t0)[4],a[3]=t1,tmp=(C_word)a,a+=4,tmp);
t4=((C_word*)t0)[3];
t5=(*a=C_VECTOR_TYPE|1,a[1]=t4,tmp=(C_word)a,a+=2,tmp);
t6=C_fix(0);
t7=(*a=C_VECTOR_TYPE|1,a[1]=t6,tmp=(C_word)a,a+=2,tmp);
t8=C_fix(0);
t9=(*a=C_VECTOR_TYPE|1,a[1]=t8,tmp=(C_word)a,a+=2,tmp);
t10=C_fix(0);
t11=(*a=C_VECTOR_TYPE|1,a[1]=t10,tmp=(C_word)a,a+=2,tmp);
t12=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_27602,a[2]=t3,a[3]=t11,a[4]=t9,a[5]=t5,a[6]=t7,tmp=(C_word)a,a+=7,tmp);
t13=(C_word)C_a_i_divide(&a,2,((C_word*)t5)[1],C_fix(10000));
C_trace("ChickenBridge.scm: 380  floor");
t14=*((C_word*)lf[149]+1);
((C_proc3)C_retrieve_proc(t14))(3,t14,t12,t13);}
else{
C_trace("ChickenBridge.scm: 396  string-append");
t3=*((C_word*)lf[141]+1);
((C_proc4)C_retrieve_proc(t3))(4,t3,t1,((C_word*)t0)[4],lf[637]);}}
else{
t3=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_27684,a[2]=t1,a[3]=((C_word*)t0)[2],a[4]=t2,a[5]=((C_word*)t0)[4],tmp=(C_word)a,a+=6,tmp);
t4=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_27687,a[2]=((C_word*)t0)[5],a[3]=t2,a[4]=t3,tmp=(C_word)a,a+=5,tmp);
t5=(C_word)C_a_i_minus(&a,2,t2,((C_word*)t0)[5]);
C_trace("ChickenBridge.scm: 398  <=");
C_less_or_equal_p(5,0,t4,C_fix(2),t5,C_fix(4));}}

/* k27685 in do5086 in k27626 in do5072 in k27614 in cm-logo in k27551 in k27548 in k27545 in k27420 in k27417 in k27414 in k27411 in k27408 in k27405 in k27402 in k27399 in k27396 in k27393 in k27390 in k22468 in k18948 in k18945 in k18942 in k18939 in k18528 in k18525 in k18522 in k18519 in k18516 in k17994 in k17991 in k17468 in k17465 in k17462 in k17459 in k17456 in k17453 in k17450 in k17447 in k17444 in k17441 in k17438 in k17435 in k17432 in k17429 in k17426 in k17423 in k17420 in k17417 in k17414 in k17411 in k17408 in k17269 in k17266 in k17263 in k17260 in k17204 in k17201 in k17198 in k17195 in k17192 in k17189 in k17186 in k17183 in k15938 in k15869 in k15676 in k15673 in k15568 in k15517 in k7924 in k7921 in k5905 in k5612 in k5609 in k5605 in k5314 in k5311 in k5308 in k5305 */
static void C_ccall f_27687(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_27687,2,t0,t1);}
if(C_truep(t1)){
t2=((C_word*)t0)[4];
f_27684(t2,C_make_character(92));}
else{
t2=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_27729,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[3],tmp=(C_word)a,a+=5,tmp);
t3=(C_word)C_a_i_plus(&a,2,C_fix(13),((C_word*)t0)[2]);
C_trace("ChickenBridge.scm: 399  modulo");
t4=*((C_word*)lf[114]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,t3,C_fix(15));}}

/* k27727 in k27685 in do5086 in k27626 in do5072 in k27614 in cm-logo in k27551 in k27548 in k27545 in k27420 in k27417 in k27414 in k27411 in k27408 in k27405 in k27402 in k27399 in k27396 in k27393 in k27390 in k22468 in k18948 in k18945 in k18942 in k18939 in k18528 in k18525 in k18522 in k18519 in k18516 in k17994 in k17991 in k17468 in k17465 in k17462 in k17459 in k17456 in k17453 in k17450 in k17447 in k17444 in k17441 in k17438 in k17435 in k17432 in k17429 in k17426 in k17423 in k17420 in k17417 in k17414 in k17411 in k17408 in k17269 in k17266 in k17263 in k17260 in k17204 in k17201 in k17198 in k17195 in k17192 in k17189 in k17186 in k17183 in k15938 in k15869 in k15676 in k15673 in k15568 in k15517 in k7924 in k7921 in k5905 in k5612 in k5609 in k5605 in k5314 in k5311 in k5308 in k5305 */
static void C_ccall f_27729(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[13],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_27729,2,t0,t1);}
t2=(C_word)C_a_i_minus(&a,2,C_fix(4),t1);
t3=(C_word)C_a_i_minus(&a,2,((C_word*)t0)[4],t2);
if(C_truep((C_word)C_i_nequalp(t3,C_fix(1)))){
t4=((C_word*)t0)[3];
f_27684(t4,C_make_character(47));}
else{
t4=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_27699,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[3],tmp=(C_word)a,a+=5,tmp);
C_trace("ChickenBridge.scm: 401  <=");
C_less_or_equal_p(5,0,t4,C_fix(1),((C_word*)t0)[2],C_fix(5));}}

/* k27697 in k27727 in k27685 in do5086 in k27626 in do5072 in k27614 in cm-logo in k27551 in k27548 in k27545 in k27420 in k27417 in k27414 in k27411 in k27408 in k27405 in k27402 in k27399 in k27396 in k27393 in k27390 in k22468 in k18948 in k18945 in k18942 in k18939 in k18528 in k18525 in k18522 in k18519 in k18516 in k17994 in k17991 in k17468 in k17465 in k17462 in k17459 in k17456 in k17453 in k17450 in k17447 in k17444 in k17441 in k17438 in k17435 in k17432 in k17429 in k17426 in k17423 in k17420 in k17417 in k17414 in k17411 in k17408 in k17269 in k17266 in k17263 in k17260 in k17204 in k17201 in k17198 in k17195 in k17192 in k17189 in k17186 in k17183 in k15938 in k15869 in k15676 in k15673 in k15568 in k15517 in k7924 in k7921 in k5905 in k5612 in k5609 in k5605 in k5314 in k5311 in k5308 in k5305 */
static void C_ccall f_27699(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[12],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_27699,2,t0,t1);}
if(C_truep(t1)){
t2=((C_word*)t0)[4];
f_27684(t2,C_make_character(45));}
else{
t2=(C_word)C_a_i_minus(&a,2,((C_word*)t0)[3],C_fix(6));
t3=(C_word)C_a_i_minus(&a,2,((C_word*)t0)[2],C_fix(3));
t4=(C_word)C_a_i_times(&a,2,t2,t3);
t5=(C_word)C_i_nequalp(t4,C_fix(15));
t6=((C_word*)t0)[4];
f_27684(t6,(C_truep(t5)?C_make_character(47):C_make_character(32)));}}

/* k27682 in do5086 in k27626 in do5072 in k27614 in cm-logo in k27551 in k27548 in k27545 in k27420 in k27417 in k27414 in k27411 in k27408 in k27405 in k27402 in k27399 in k27396 in k27393 in k27390 in k22468 in k18948 in k18945 in k18942 in k18939 in k18528 in k18525 in k18522 in k18519 in k18516 in k17994 in k17991 in k17468 in k17465 in k17462 in k17459 in k17456 in k17453 in k17450 in k17447 in k17444 in k17441 in k17438 in k17435 in k17432 in k17429 in k17426 in k17423 in k17420 in k17417 in k17414 in k17411 in k17408 in k17269 in k17266 in k17263 in k17260 in k17204 in k17201 in k17198 in k17195 in k17192 in k17189 in k17186 in k17183 in k15938 in k15869 in k15676 in k15673 in k15568 in k15517 in k7924 in k7921 in k5905 in k5612 in k5609 in k5605 in k5314 in k5311 in k5308 in k5305 */
static void C_fcall f_27684(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[4],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_27684,NULL,2,t0,t1);}
t2=(C_word)C_i_string_set(((C_word*)t0)[5],((C_word*)t0)[4],t1);
t3=(C_word)C_a_i_plus(&a,2,((C_word*)t0)[4],C_fix(1));
t4=((C_word*)((C_word*)t0)[3])[1];
f_27647(t4,((C_word*)t0)[2],t3);}

/* k27600 in do5086 in k27626 in do5072 in k27614 in cm-logo in k27551 in k27548 in k27545 in k27420 in k27417 in k27414 in k27411 in k27408 in k27405 in k27402 in k27399 in k27396 in k27393 in k27390 in k22468 in k18948 in k18945 in k18942 in k18939 in k18528 in k18525 in k18522 in k18519 in k18516 in k17994 in k17991 in k17468 in k17465 in k17462 in k17459 in k17456 in k17453 in k17450 in k17447 in k17444 in k17441 in k17438 in k17435 in k17432 in k17429 in k17426 in k17423 in k17420 in k17417 in k17414 in k17411 in k17408 in k17269 in k17266 in k17263 in k17260 in k17204 in k17201 in k17198 in k17195 in k17192 in k17189 in k17186 in k17183 in k15938 in k15869 in k15676 in k15673 in k15568 in k15517 in k7924 in k7921 in k5905 in k5612 in k5609 in k5605 in k5314 in k5311 in k5308 in k5305 */
static void C_ccall f_27602(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_27602,2,t0,t1);}
t2=(C_word)C_i_inexact_to_exact(t1);
t3=C_mutate(((C_word *)((C_word*)t0)[6])+1,t2);
t4=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_27567,a[2]=((C_word*)t0)[6],a[3]=((C_word*)t0)[2],a[4]=((C_word*)t0)[3],a[5]=((C_word*)t0)[4],a[6]=((C_word*)t0)[5],tmp=(C_word)a,a+=7,tmp);
C_trace("ChickenBridge.scm: 381  modulo");
t5=*((C_word*)lf[114]+1);
((C_proc4)C_retrieve_proc(t5))(4,t5,t4,((C_word*)((C_word*)t0)[5])[1],C_fix(10000));}

/* k27565 in k27600 in do5086 in k27626 in do5072 in k27614 in cm-logo in k27551 in k27548 in k27545 in k27420 in k27417 in k27414 in k27411 in k27408 in k27405 in k27402 in k27399 in k27396 in k27393 in k27390 in k22468 in k18948 in k18945 in k18942 in k18939 in k18528 in k18525 in k18522 in k18519 in k18516 in k17994 in k17991 in k17468 in k17465 in k17462 in k17459 in k17456 in k17453 in k17450 in k17447 in k17444 in k17441 in k17438 in k17435 in k17432 in k17429 in k17426 in k17423 in k17420 in k17417 in k17414 in k17411 in k17408 in k17269 in k17266 in k17263 in k17260 in k17204 in k17201 in k17198 in k17195 in k17192 in k17189 in k17186 in k17183 in k15938 in k15869 in k15676 in k15673 in k15568 in k15517 in k7924 in k7921 in k5905 in k5612 in k5609 in k5605 in k5314 in k5311 in k5308 in k5305 */
static void C_ccall f_27567(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[11],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_27567,2,t0,t1);}
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_27594,a[2]=((C_word*)t0)[6],a[3]=((C_word*)t0)[2],a[4]=((C_word*)t0)[3],a[5]=((C_word*)t0)[4],a[6]=((C_word*)t0)[5],tmp=(C_word)a,a+=7,tmp);
t4=(C_word)C_a_i_divide(&a,2,((C_word*)((C_word*)t0)[6])[1],C_fix(100));
C_trace("ChickenBridge.scm: 382  floor");
t5=*((C_word*)lf[149]+1);
((C_proc3)C_retrieve_proc(t5))(3,t5,t3,t4);}

/* k27592 in k27565 in k27600 in do5086 in k27626 in do5072 in k27614 in cm-logo in k27551 in k27548 in k27545 in k27420 in k27417 in k27414 in k27411 in k27408 in k27405 in k27402 in k27399 in k27396 in k27393 in k27390 in k22468 in k18948 in k18945 in k18942 in k18939 in k18528 in k18525 in k18522 in k18519 in k18516 in k17994 in k17991 in k17468 in k17465 in k17462 in k17459 in k17456 in k17453 in k17450 in k17447 in k17444 in k17441 in k17438 in k17435 in k17432 in k17429 in k17426 in k17423 in k17420 in k17417 in k17414 in k17411 in k17408 in k17269 in k17266 in k17263 in k17260 in k17204 in k17201 in k17198 in k17195 in k17192 in k17189 in k17186 in k17183 in k15938 in k15869 in k15676 in k15673 in k15568 in k15517 in k7924 in k7921 in k5905 in k5612 in k5609 in k5605 in k5314 in k5311 in k5308 in k5305 */
static void C_ccall f_27594(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[6],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_27594,2,t0,t1);}
t2=(C_word)C_i_inexact_to_exact(t1);
t3=C_mutate(((C_word *)((C_word*)t0)[6])+1,t2);
t4=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_27575,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[6],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],tmp=(C_word)a,a+=6,tmp);
C_trace("ChickenBridge.scm: 383  modulo");
t5=*((C_word*)lf[114]+1);
((C_proc4)C_retrieve_proc(t5))(4,t5,t4,((C_word*)((C_word*)t0)[2])[1],C_fix(100));}

/* k27573 in k27592 in k27565 in k27600 in do5086 in k27626 in do5072 in k27614 in cm-logo in k27551 in k27548 in k27545 in k27420 in k27417 in k27414 in k27411 in k27408 in k27405 in k27402 in k27399 in k27396 in k27393 in k27390 in k22468 in k18948 in k18945 in k18942 in k18939 in k18528 in k18525 in k18522 in k18519 in k18516 in k17994 in k17991 in k17468 in k17465 in k17462 in k17459 in k17456 in k17453 in k17450 in k17447 in k17444 in k17441 in k17438 in k17435 in k17432 in k17429 in k17426 in k17423 in k17420 in k17417 in k17414 in k17411 in k17408 in k17269 in k17266 in k17263 in k17260 in k17204 in k17201 in k17198 in k17195 in k17192 in k17189 in k17186 in k17183 in k15938 in k15869 in k15676 in k15673 in k15568 in k15517 in k7924 in k7921 in k5905 in k5612 in k5609 in k5605 in k5314 in k5311 in k5308 in k5305 */
static void C_ccall f_27575(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[5],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_27575,2,t0,t1);}
t2=C_mutate(((C_word *)((C_word*)t0)[5])+1,t1);
t3=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_27582,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[5],a[4]=((C_word*)t0)[4],tmp=(C_word)a,a+=5,tmp);
C_trace("ChickenBridge.scm: 384  number->string");
C_number_to_string(3,0,t3,((C_word*)((C_word*)t0)[2])[1]);}

/* k27580 in k27573 in k27592 in k27565 in k27600 in do5086 in k27626 in do5072 in k27614 in cm-logo in k27551 in k27548 in k27545 in k27420 in k27417 in k27414 in k27411 in k27408 in k27405 in k27402 in k27399 in k27396 in k27393 in k27390 in k22468 in k18948 in k18945 in k18942 in k18939 in k18528 in k18525 in k18522 in k18519 in k18516 in k17994 in k17991 in k17468 in k17465 in k17462 in k17459 in k17456 in k17453 in k17450 in k17447 in k17444 in k17441 in k17438 in k17435 in k17432 in k17429 in k17426 in k17423 in k17420 in k17417 in k17414 in k17411 in k17408 in k17269 in k17266 in k17263 in k17260 in k17204 in k17201 in k17198 in k17195 in k17192 in k17189 in k17186 in k17183 in k15938 in k15869 in k15676 in k15673 in k15568 in k15517 in k7924 in k7921 in k5905 in k5612 in k5609 in k5605 in k5314 in k5311 in k5308 in k5305 */
static void C_ccall f_27582(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[5],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_27582,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_27586,a[2]=((C_word*)t0)[3],a[3]=t1,a[4]=((C_word*)t0)[4],tmp=(C_word)a,a+=5,tmp);
C_trace("ChickenBridge.scm: 385  number->string");
C_number_to_string(3,0,t2,((C_word*)((C_word*)t0)[2])[1]);}

/* k27584 in k27580 in k27573 in k27592 in k27565 in k27600 in do5086 in k27626 in do5072 in k27614 in cm-logo in k27551 in k27548 in k27545 in k27420 in k27417 in k27414 in k27411 in k27408 in k27405 in k27402 in k27399 in k27396 in k27393 in k27390 in k22468 in k18948 in k18945 in k18942 in k18939 in k18528 in k18525 in k18522 in k18519 in k18516 in k17994 in k17991 in k17468 in k17465 in k17462 in k17459 in k17456 in k17453 in k17450 in k17447 in k17444 in k17441 in k17438 in k17435 in k17432 in k17429 in k17426 in k17423 in k17420 in k17417 in k17414 in k17411 in k17408 in k17269 in k17266 in k17263 in k17260 in k17204 in k17201 in k17198 in k17195 in k17192 in k17189 in k17186 in k17183 in k15938 in k15869 in k15676 in k15673 in k15568 in k15517 in k7924 in k7921 in k5905 in k5612 in k5609 in k5605 in k5314 in k5311 in k5308 in k5305 */
static void C_ccall f_27586(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[5],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_27586,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_27590,a[2]=t1,a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],tmp=(C_word)a,a+=5,tmp);
C_trace("ChickenBridge.scm: 386  number->string");
C_number_to_string(3,0,t2,((C_word*)((C_word*)t0)[2])[1]);}

/* k27588 in k27584 in k27580 in k27573 in k27592 in k27565 in k27600 in do5086 in k27626 in do5072 in k27614 in cm-logo in k27551 in k27548 in k27545 in k27420 in k27417 in k27414 in k27411 in k27408 in k27405 in k27402 in k27399 in k27396 in k27393 in k27390 in k22468 in k18948 in k18945 in k18942 in k18939 in k18528 in k18525 in k18522 in k18519 in k18516 in k17994 in k17991 in k17468 in k17465 in k17462 in k17459 in k17456 in k17453 in k17450 in k17447 in k17444 in k17441 in k17438 in k17435 in k17432 in k17429 in k17426 in k17423 in k17420 in k17417 in k17414 in k17411 in k17408 in k17269 in k17266 in k17263 in k17260 in k17204 in k17201 in k17198 in k17195 in k17192 in k17189 in k17186 in k17183 in k15938 in k15869 in k15676 in k15673 in k15568 in k15517 in k7924 in k7921 in k5905 in k5612 in k5609 in k5605 in k5314 in k5311 in k5308 in k5305 */
static void C_ccall f_27590(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 384  string-append");
t2=*((C_word*)lf[141]+1);
((C_proc8)C_retrieve_proc(t2))(8,t2,((C_word*)t0)[4],lf[634],((C_word*)t0)[3],lf[635],((C_word*)t0)[2],lf[636],t1);}

/* k27665 in do5086 in k27626 in do5072 in k27614 in cm-logo in k27551 in k27548 in k27545 in k27420 in k27417 in k27414 in k27411 in k27408 in k27405 in k27402 in k27399 in k27396 in k27393 in k27390 in k22468 in k18948 in k18945 in k18942 in k18939 in k18528 in k18525 in k18522 in k18519 in k18516 in k17994 in k17991 in k17468 in k17465 in k17462 in k17459 in k17456 in k17453 in k17450 in k17447 in k17444 in k17441 in k17438 in k17435 in k17432 in k17429 in k17426 in k17423 in k17420 in k17417 in k17414 in k17411 in k17408 in k17269 in k17266 in k17263 in k17260 in k17204 in k17201 in k17198 in k17195 in k17192 in k17189 in k17186 in k17183 in k15938 in k15869 in k15676 in k15673 in k15568 in k15517 in k7924 in k7921 in k5905 in k5612 in k5609 in k5605 in k5314 in k5311 in k5308 in k5305 */
static void C_ccall f_27667(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 395  string-append");
t2=*((C_word*)lf[141]+1);
((C_proc6)C_retrieve_proc(t2))(6,t2,((C_word*)t0)[3],((C_word*)t0)[2],lf[632],t1,lf[633]);}

/* k27643 in k27626 in do5072 in k27614 in cm-logo in k27551 in k27548 in k27545 in k27420 in k27417 in k27414 in k27411 in k27408 in k27405 in k27402 in k27399 in k27396 in k27393 in k27390 in k22468 in k18948 in k18945 in k18942 in k18939 in k18528 in k18525 in k18522 in k18519 in k18516 in k17994 in k17991 in k17468 in k17465 in k17462 in k17459 in k17456 in k17453 in k17450 in k17447 in k17444 in k17441 in k17438 in k17435 in k17432 in k17429 in k17426 in k17423 in k17420 in k17417 in k17414 in k17411 in k17408 in k17269 in k17266 in k17263 in k17260 in k17204 in k17201 in k17198 in k17195 in k17192 in k17189 in k17186 in k17183 in k15938 in k15869 in k15676 in k15673 in k15568 in k15517 in k7924 in k7921 in k5905 in k5612 in k5609 in k5605 in k5314 in k5311 in k5308 in k5305 */
static void C_ccall f_27645(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 392  printf");
t2=C_retrieve(lf[327]);
((C_proc3)C_retrieve_proc(t2))(3,t2,((C_word*)t0)[2],t1);}

/* k27629 in k27626 in do5072 in k27614 in cm-logo in k27551 in k27548 in k27545 in k27420 in k27417 in k27414 in k27411 in k27408 in k27405 in k27402 in k27399 in k27396 in k27393 in k27390 in k22468 in k18948 in k18945 in k18942 in k18939 in k18528 in k18525 in k18522 in k18519 in k18516 in k17994 in k17991 in k17468 in k17465 in k17462 in k17459 in k17456 in k17453 in k17450 in k17447 in k17444 in k17441 in k17438 in k17435 in k17432 in k17429 in k17426 in k17423 in k17420 in k17417 in k17414 in k17411 in k17408 in k17269 in k17266 in k17263 in k17260 in k17204 in k17201 in k17198 in k17195 in k17192 in k17189 in k17186 in k17183 in k15938 in k15869 in k15676 in k15673 in k15568 in k15517 in k7924 in k7921 in k5905 in k5612 in k5609 in k5605 in k5314 in k5311 in k5308 in k5305 */
static void C_ccall f_27631(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_27631,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_27634,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],tmp=(C_word)a,a+=7,tmp);
C_trace("ChickenBridge.scm: 404  printf");
t3=C_retrieve(lf[327]);
((C_proc3)C_retrieve_proc(t3))(3,t3,t2,((C_word*)t0)[3]);}

/* k27632 in k27629 in k27626 in do5072 in k27614 in cm-logo in k27551 in k27548 in k27545 in k27420 in k27417 in k27414 in k27411 in k27408 in k27405 in k27402 in k27399 in k27396 in k27393 in k27390 in k22468 in k18948 in k18945 in k18942 in k18939 in k18528 in k18525 in k18522 in k18519 in k18516 in k17994 in k17991 in k17468 in k17465 in k17462 in k17459 in k17456 in k17453 in k17450 in k17447 in k17444 in k17441 in k17438 in k17435 in k17432 in k17429 in k17426 in k17423 in k17420 in k17417 in k17414 in k17411 in k17408 in k17269 in k17266 in k17263 in k17260 in k17204 in k17201 in k17198 in k17195 in k17192 in k17189 in k17186 in k17183 in k15938 in k15869 in k15676 in k15673 in k15568 in k15517 in k7924 in k7921 in k5905 in k5612 in k5609 in k5605 in k5314 in k5311 in k5308 in k5305 */
static void C_ccall f_27634(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[4],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_27634,2,t0,t1);}
t2=(C_word)C_a_i_plus(&a,2,((C_word*)t0)[6],C_fix(1));
t3=((C_word*)((C_word*)t0)[5])[1];
f_27618(t3,((C_word*)t0)[4],((C_word*)t0)[3],((C_word*)t0)[2],t2);}

/* k27607 in cm-logo in k27551 in k27548 in k27545 in k27420 in k27417 in k27414 in k27411 in k27408 in k27405 in k27402 in k27399 in k27396 in k27393 in k27390 in k22468 in k18948 in k18945 in k18942 in k18939 in k18528 in k18525 in k18522 in k18519 in k18516 in k17994 in k17991 in k17468 in k17465 in k17462 in k17459 in k17456 in k17453 in k17450 in k17447 in k17444 in k17441 in k17438 in k17435 in k17432 in k17429 in k17426 in k17423 in k17420 in k17417 in k17414 in k17411 in k17408 in k17269 in k17266 in k17263 in k17260 in k17204 in k17201 in k17198 in k17195 in k17192 in k17189 in k17186 in k17183 in k15938 in k15869 in k15676 in k15673 in k15568 in k15517 in k7924 in k7921 in k5905 in k5612 in k5609 in k5605 in k5314 in k5311 in k5308 in k5305 */
static void C_ccall f_27609(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 405  values");
C_values(2,0,((C_word*)t0)[2]);}

/* cs:clear in k27420 in k27417 in k27414 in k27411 in k27408 in k27405 in k27402 in k27399 in k27396 in k27393 in k27390 in k22468 in k18948 in k18945 in k18942 in k18939 in k18528 in k18525 in k18522 in k18519 in k18516 in k17994 in k17991 in k17468 in k17465 in k17462 in k17459 in k17456 in k17453 in k17450 in k17447 in k17444 in k17441 in k17438 in k17435 in k17432 in k17429 in k17426 in k17423 in k17420 in k17417 in k17414 in k17411 in k17408 in k17269 in k17266 in k17263 in k17260 in k17204 in k17201 in k17198 in k17195 in k17192 in k17189 in k17186 in k17183 in k15938 in k15869 in k15676 in k15673 in k15568 in k15517 in k7924 in k7921 in k5905 in k5612 in k5609 in k5605 in k5314 in k5311 in k5308 in k5305 */
static void C_ccall f_27538(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word ab[3],*a=ab;
if(c!=2) C_bad_argc_2(c,2,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_27538,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_27543,a[2]=((C_word)li425),tmp=(C_word)a,a+=3,tmp);
((C_proc2)(void*)(*((C_word*)t2+1)))(2,t2,t1);}

/* f_27543 in cs:clear in k27420 in k27417 in k27414 in k27411 in k27408 in k27405 in k27402 in k27399 in k27396 in k27393 in k27390 in k22468 in k18948 in k18945 in k18942 in k18939 in k18528 in k18525 in k18522 in k18519 in k18516 in k17994 in k17991 in k17468 in k17465 in k17462 in k17459 in k17456 in k17453 in k17450 in k17447 in k17444 in k17441 in k17438 in k17435 in k17432 in k17429 in k17426 in k17423 in k17420 in k17417 in k17414 in k17411 in k17408 in k17269 in k17266 in k17263 in k17260 in k17204 in k17201 in k17198 in k17195 in k17192 in k17189 in k17186 in k17183 in k15938 in k15869 in k15676 in k15673 in k15568 in k15517 in k7924 in k7921 in k5905 in k5612 in k5609 in k5605 in k5314 in k5311 in k5308 in k5305 */
static void C_ccall f_27543(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
if(c!=2) C_bad_argc_2(c,2,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_27543,2,t0,t1);}
t2=t1;
((C_proc2)(void*)(*((C_word*)t2+1)))(2,t2,(C_word)stub5064(C_SCHEME_UNDEFINED));}

/* cs:f in k27420 in k27417 in k27414 in k27411 in k27408 in k27405 in k27402 in k27399 in k27396 in k27393 in k27390 in k22468 in k18948 in k18945 in k18942 in k18939 in k18528 in k18525 in k18522 in k18519 in k18516 in k17994 in k17991 in k17468 in k17465 in k17462 in k17459 in k17456 in k17453 in k17450 in k17447 in k17444 in k17441 in k17438 in k17435 in k17432 in k17429 in k17426 in k17423 in k17420 in k17417 in k17414 in k17411 in k17408 in k17269 in k17266 in k17263 in k17260 in k17204 in k17201 in k17198 in k17195 in k17192 in k17189 in k17186 in k17183 in k15938 in k15869 in k15676 in k15673 in k15568 in k15517 in k7924 in k7921 in k5905 in k5612 in k5609 in k5605 in k5314 in k5311 in k5308 in k5305 */
static void C_ccall f_27481(C_word c,C_word t0,C_word t1,...){
C_word tmp;
C_word t2;
va_list v;
C_word *a,c2=c;
C_save_rest(t1,c2,2);
C_check_for_interrupt;
if(!C_demand(c*C_SIZEOF_PAIR+13)){
C_save_and_reclaim((void*)tr2r,(void*)f_27481r,2,t0,t1);}
else{
a=C_alloc((c-2)*3);
t2=C_restore_rest(a,C_rest_count(0));
f_27481r(t0,t1,t2);}}

static void C_ccall f_27481r(C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word *a=C_alloc(13);
t3=(*a=C_VECTOR_TYPE|1,a[1]=t2,tmp=(C_word)a,a+=2,tmp);
t4=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_27485,a[2]=t1,tmp=(C_word)a,a+=3,tmp);
if(C_truep((C_word)C_i_nullp(((C_word*)t3)[1]))){
t5=t4;
f_27485(2,t5,C_SCHEME_UNDEFINED);}
else{
t5=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_27494,a[2]=t4,a[3]=t3,tmp=(C_word)a,a+=4,tmp);
t6=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_27514,a[2]=t5,a[3]=t3,tmp=(C_word)a,a+=4,tmp);
t7=(C_word)C_i_cdr(((C_word*)t3)[1]);
if(C_truep((C_word)C_i_nullp(t7))){
t8=(C_word)C_i_car(((C_word*)t3)[1]);
t9=t6;
f_27514(t9,(C_word)C_i_pairp(t8));}
else{
t8=t6;
f_27514(t8,C_SCHEME_FALSE);}}}

/* k27512 in cs:f in k27420 in k27417 in k27414 in k27411 in k27408 in k27405 in k27402 in k27399 in k27396 in k27393 in k27390 in k22468 in k18948 in k18945 in k18942 in k18939 in k18528 in k18525 in k18522 in k18519 in k18516 in k17994 in k17991 in k17468 in k17465 in k17462 in k17459 in k17456 in k17453 in k17450 in k17447 in k17444 in k17441 in k17438 in k17435 in k17432 in k17429 in k17426 in k17423 in k17420 in k17417 in k17414 in k17411 in k17408 in k17269 in k17266 in k17263 in k17260 in k17204 in k17201 in k17198 in k17195 in k17192 in k17189 in k17186 in k17183 in k15938 in k15869 in k15676 in k15673 in k15568 in k15517 in k7924 in k7921 in k5905 in k5612 in k5609 in k5605 in k5314 in k5311 in k5308 in k5305 */
static void C_fcall f_27514(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word *a;
if(C_truep(t1)){
t2=(C_word)C_i_car(((C_word*)((C_word*)t0)[3])[1]);
t3=C_mutate(((C_word *)((C_word*)t0)[3])+1,t2);
t4=((C_word*)t0)[2];
f_27494(t4,t3);}
else{
t2=((C_word*)t0)[2];
f_27494(t2,C_SCHEME_UNDEFINED);}}

/* k27492 in cs:f in k27420 in k27417 in k27414 in k27411 in k27408 in k27405 in k27402 in k27399 in k27396 in k27393 in k27390 in k22468 in k18948 in k18945 in k18942 in k18939 in k18528 in k18525 in k18522 in k18519 in k18516 in k17994 in k17991 in k17468 in k17465 in k17462 in k17459 in k17456 in k17453 in k17450 in k17447 in k17444 in k17441 in k17438 in k17435 in k17432 in k17429 in k17426 in k17423 in k17420 in k17417 in k17414 in k17411 in k17408 in k17269 in k17266 in k17263 in k17260 in k17204 in k17201 in k17198 in k17195 in k17192 in k17189 in k17186 in k17183 in k15938 in k15869 in k15676 in k15673 in k15568 in k15517 in k7924 in k7921 in k5905 in k5612 in k5609 in k5605 in k5314 in k5311 in k5308 in k5305 */
static void C_fcall f_27494(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[3],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_27494,NULL,2,t0,t1);}
t2=(C_word)C_i_length(((C_word*)((C_word*)t0)[3])[1]);
t3=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_27502,a[2]=((C_word)li423),tmp=(C_word)a,a+=3,tmp);
((C_proc5)(void*)(*((C_word*)t3+1)))(5,t3,((C_word*)t0)[2],C_fix(2),t2,((C_word*)((C_word*)t0)[3])[1]);}

/* f_27502 in k27492 in cs:f in k27420 in k27417 in k27414 in k27411 in k27408 in k27405 in k27402 in k27399 in k27396 in k27393 in k27390 in k22468 in k18948 in k18945 in k18942 in k18939 in k18528 in k18525 in k18522 in k18519 in k18516 in k17994 in k17991 in k17468 in k17465 in k17462 in k17459 in k17456 in k17453 in k17450 in k17447 in k17444 in k17441 in k17438 in k17435 in k17432 in k17429 in k17426 in k17423 in k17420 in k17417 in k17414 in k17411 in k17408 in k17269 in k17266 in k17263 in k17260 in k17204 in k17201 in k17198 in k17195 in k17192 in k17189 in k17186 in k17183 in k15938 in k15869 in k15676 in k15673 in k15568 in k15517 in k7924 in k7921 in k5905 in k5612 in k5609 in k5605 in k5314 in k5311 in k5308 in k5305 */
static void C_ccall f_27502(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4){
C_word tmp;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
if(c!=5) C_bad_argc_2(c,5,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr5,(void*)f_27502,5,t0,t1,t2,t3,t4);}
t5=(C_word)C_i_foreign_fixnum_argumentp(t2);
t6=(C_word)C_i_foreign_fixnum_argumentp(t3);
t7=t1;
((C_proc2)(void*)(*((C_word*)t7+1)))(2,t7,(C_word)stub5057(C_SCHEME_UNDEFINED,t5,t6,t4));}

/* k27483 in cs:f in k27420 in k27417 in k27414 in k27411 in k27408 in k27405 in k27402 in k27399 in k27396 in k27393 in k27390 in k22468 in k18948 in k18945 in k18942 in k18939 in k18528 in k18525 in k18522 in k18519 in k18516 in k17994 in k17991 in k17468 in k17465 in k17462 in k17459 in k17456 in k17453 in k17450 in k17447 in k17444 in k17441 in k17438 in k17435 in k17432 in k17429 in k17426 in k17423 in k17420 in k17417 in k17414 in k17411 in k17408 in k17269 in k17266 in k17263 in k17260 in k17204 in k17201 in k17198 in k17195 in k17192 in k17189 in k17186 in k17183 in k15938 in k15869 in k15676 in k15673 in k15568 in k15517 in k7924 in k7921 in k5905 in k5612 in k5609 in k5605 in k5314 in k5311 in k5308 in k5305 */
static void C_ccall f_27485(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 372  values");
C_values(2,0,((C_word*)t0)[2]);}

/* cs:i in k27420 in k27417 in k27414 in k27411 in k27408 in k27405 in k27402 in k27399 in k27396 in k27393 in k27390 in k22468 in k18948 in k18945 in k18942 in k18939 in k18528 in k18525 in k18522 in k18519 in k18516 in k17994 in k17991 in k17468 in k17465 in k17462 in k17459 in k17456 in k17453 in k17450 in k17447 in k17444 in k17441 in k17438 in k17435 in k17432 in k17429 in k17426 in k17423 in k17420 in k17417 in k17414 in k17411 in k17408 in k17269 in k17266 in k17263 in k17260 in k17204 in k17201 in k17198 in k17195 in k17192 in k17189 in k17186 in k17183 in k15938 in k15869 in k15676 in k15673 in k15568 in k15517 in k7924 in k7921 in k5905 in k5612 in k5609 in k5605 in k5314 in k5311 in k5308 in k5305 */
static void C_ccall f_27424(C_word c,C_word t0,C_word t1,...){
C_word tmp;
C_word t2;
va_list v;
C_word *a,c2=c;
C_save_rest(t1,c2,2);
C_check_for_interrupt;
if(!C_demand(c*C_SIZEOF_PAIR+13)){
C_save_and_reclaim((void*)tr2r,(void*)f_27424r,2,t0,t1);}
else{
a=C_alloc((c-2)*3);
t2=C_restore_rest(a,C_rest_count(0));
f_27424r(t0,t1,t2);}}

static void C_ccall f_27424r(C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word *a=C_alloc(13);
t3=(*a=C_VECTOR_TYPE|1,a[1]=t2,tmp=(C_word)a,a+=2,tmp);
t4=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_27428,a[2]=t1,tmp=(C_word)a,a+=3,tmp);
if(C_truep((C_word)C_i_nullp(((C_word*)t3)[1]))){
t5=t4;
f_27428(2,t5,C_SCHEME_UNDEFINED);}
else{
t5=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_27437,a[2]=t4,a[3]=t3,tmp=(C_word)a,a+=4,tmp);
t6=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_27457,a[2]=t5,a[3]=t3,tmp=(C_word)a,a+=4,tmp);
t7=(C_word)C_i_cdr(((C_word*)t3)[1]);
if(C_truep((C_word)C_i_nullp(t7))){
t8=(C_word)C_i_car(((C_word*)t3)[1]);
t9=t6;
f_27457(t9,(C_word)C_i_pairp(t8));}
else{
t8=t6;
f_27457(t8,C_SCHEME_FALSE);}}}

/* k27455 in cs:i in k27420 in k27417 in k27414 in k27411 in k27408 in k27405 in k27402 in k27399 in k27396 in k27393 in k27390 in k22468 in k18948 in k18945 in k18942 in k18939 in k18528 in k18525 in k18522 in k18519 in k18516 in k17994 in k17991 in k17468 in k17465 in k17462 in k17459 in k17456 in k17453 in k17450 in k17447 in k17444 in k17441 in k17438 in k17435 in k17432 in k17429 in k17426 in k17423 in k17420 in k17417 in k17414 in k17411 in k17408 in k17269 in k17266 in k17263 in k17260 in k17204 in k17201 in k17198 in k17195 in k17192 in k17189 in k17186 in k17183 in k15938 in k15869 in k15676 in k15673 in k15568 in k15517 in k7924 in k7921 in k5905 in k5612 in k5609 in k5605 in k5314 in k5311 in k5308 in k5305 */
static void C_fcall f_27457(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word *a;
if(C_truep(t1)){
t2=(C_word)C_i_car(((C_word*)((C_word*)t0)[3])[1]);
t3=C_mutate(((C_word *)((C_word*)t0)[3])+1,t2);
t4=((C_word*)t0)[2];
f_27437(t4,t3);}
else{
t2=((C_word*)t0)[2];
f_27437(t2,C_SCHEME_UNDEFINED);}}

/* k27435 in cs:i in k27420 in k27417 in k27414 in k27411 in k27408 in k27405 in k27402 in k27399 in k27396 in k27393 in k27390 in k22468 in k18948 in k18945 in k18942 in k18939 in k18528 in k18525 in k18522 in k18519 in k18516 in k17994 in k17991 in k17468 in k17465 in k17462 in k17459 in k17456 in k17453 in k17450 in k17447 in k17444 in k17441 in k17438 in k17435 in k17432 in k17429 in k17426 in k17423 in k17420 in k17417 in k17414 in k17411 in k17408 in k17269 in k17266 in k17263 in k17260 in k17204 in k17201 in k17198 in k17195 in k17192 in k17189 in k17186 in k17183 in k15938 in k15869 in k15676 in k15673 in k15568 in k15517 in k7924 in k7921 in k5905 in k5612 in k5609 in k5605 in k5314 in k5311 in k5308 in k5305 */
static void C_fcall f_27437(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[3],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_27437,NULL,2,t0,t1);}
t2=(C_word)C_i_length(((C_word*)((C_word*)t0)[3])[1]);
t3=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_27445,a[2]=((C_word)li421),tmp=(C_word)a,a+=3,tmp);
((C_proc5)(void*)(*((C_word*)t3+1)))(5,t3,((C_word*)t0)[2],C_fix(1),t2,((C_word*)((C_word*)t0)[3])[1]);}

/* f_27445 in k27435 in cs:i in k27420 in k27417 in k27414 in k27411 in k27408 in k27405 in k27402 in k27399 in k27396 in k27393 in k27390 in k22468 in k18948 in k18945 in k18942 in k18939 in k18528 in k18525 in k18522 in k18519 in k18516 in k17994 in k17991 in k17468 in k17465 in k17462 in k17459 in k17456 in k17453 in k17450 in k17447 in k17444 in k17441 in k17438 in k17435 in k17432 in k17429 in k17426 in k17423 in k17420 in k17417 in k17414 in k17411 in k17408 in k17269 in k17266 in k17263 in k17260 in k17204 in k17201 in k17198 in k17195 in k17192 in k17189 in k17186 in k17183 in k15938 in k15869 in k15676 in k15673 in k15568 in k15517 in k7924 in k7921 in k5905 in k5612 in k5609 in k5605 in k5314 in k5311 in k5308 in k5305 */
static void C_ccall f_27445(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4){
C_word tmp;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
if(c!=5) C_bad_argc_2(c,5,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr5,(void*)f_27445,5,t0,t1,t2,t3,t4);}
t5=(C_word)C_i_foreign_fixnum_argumentp(t2);
t6=(C_word)C_i_foreign_fixnum_argumentp(t3);
t7=t1;
((C_proc2)(void*)(*((C_word*)t7+1)))(2,t7,(C_word)stub5046(C_SCHEME_UNDEFINED,t5,t6,t4));}

/* k27426 in cs:i in k27420 in k27417 in k27414 in k27411 in k27408 in k27405 in k27402 in k27399 in k27396 in k27393 in k27390 in k22468 in k18948 in k18945 in k18942 in k18939 in k18528 in k18525 in k18522 in k18519 in k18516 in k17994 in k17991 in k17468 in k17465 in k17462 in k17459 in k17456 in k17453 in k17450 in k17447 in k17444 in k17441 in k17438 in k17435 in k17432 in k17429 in k17426 in k17423 in k17420 in k17417 in k17414 in k17411 in k17408 in k17269 in k17266 in k17263 in k17260 in k17204 in k17201 in k17198 in k17195 in k17192 in k17189 in k17186 in k17183 in k15938 in k15869 in k15676 in k15673 in k15568 in k15517 in k7924 in k7921 in k5905 in k5612 in k5609 in k5605 in k5314 in k5311 in k5308 in k5305 */
static void C_ccall f_27428(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 372  values");
C_values(2,0,((C_word*)t0)[2]);}

/* mp:inhook in k22468 in k18948 in k18945 in k18942 in k18939 in k18528 in k18525 in k18522 in k18519 in k18516 in k17994 in k17991 in k17468 in k17465 in k17462 in k17459 in k17456 in k17453 in k17450 in k17447 in k17444 in k17441 in k17438 in k17435 in k17432 in k17429 in k17426 in k17423 in k17420 in k17417 in k17414 in k17411 in k17408 in k17269 in k17266 in k17263 in k17260 in k17204 in k17201 in k17198 in k17195 in k17192 in k17189 in k17186 in k17183 in k15938 in k15869 in k15676 in k15673 in k15568 in k15517 in k7924 in k7921 in k5905 in k5612 in k5609 in k5605 in k5314 in k5311 in k5308 in k5305 */
static void C_ccall f_27334(C_word c,C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word ab[10],*a=ab;
if(c!=3) C_bad_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr3,(void*)f_27334,3,t0,t1,t2);}
if(C_truep((C_word)C_i_closurep(t2))){
t3=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_27346,a[2]=t2,a[3]=((C_word)li417),tmp=(C_word)a,a+=4,tmp);
t4=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_27383,a[2]=((C_word)li418),tmp=(C_word)a,a+=3,tmp);
((C_proc3)(void*)(*((C_word*)t4+1)))(3,t4,t1,t3);}
else{
t3=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_27388,a[2]=((C_word)li419),tmp=(C_word)a,a+=3,tmp);
((C_proc3)(void*)(*((C_word*)t3+1)))(3,t3,t1,C_SCHEME_FALSE);}}

/* f_27388 in mp:inhook in k22468 in k18948 in k18945 in k18942 in k18939 in k18528 in k18525 in k18522 in k18519 in k18516 in k17994 in k17991 in k17468 in k17465 in k17462 in k17459 in k17456 in k17453 in k17450 in k17447 in k17444 in k17441 in k17438 in k17435 in k17432 in k17429 in k17426 in k17423 in k17420 in k17417 in k17414 in k17411 in k17408 in k17269 in k17266 in k17263 in k17260 in k17204 in k17201 in k17198 in k17195 in k17192 in k17189 in k17186 in k17183 in k15938 in k15869 in k15676 in k15673 in k15568 in k15517 in k7924 in k7921 in k5905 in k5612 in k5609 in k5605 in k5314 in k5311 in k5308 in k5305 */
static void C_ccall f_27388(C_word c,C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word *a;
if(c!=3) C_bad_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr3,(void*)f_27388,3,t0,t1,t2);}
t3=t1;
((C_proc2)(void*)(*((C_word*)t3+1)))(2,t3,(C_word)stub4990(C_SCHEME_UNDEFINED,t2));}

/* f_27383 in mp:inhook in k22468 in k18948 in k18945 in k18942 in k18939 in k18528 in k18525 in k18522 in k18519 in k18516 in k17994 in k17991 in k17468 in k17465 in k17462 in k17459 in k17456 in k17453 in k17450 in k17447 in k17444 in k17441 in k17438 in k17435 in k17432 in k17429 in k17426 in k17423 in k17420 in k17417 in k17414 in k17411 in k17408 in k17269 in k17266 in k17263 in k17260 in k17204 in k17201 in k17198 in k17195 in k17192 in k17189 in k17186 in k17183 in k15938 in k15869 in k15676 in k15673 in k15568 in k15517 in k7924 in k7921 in k5905 in k5612 in k5609 in k5605 in k5314 in k5311 in k5308 in k5305 */
static void C_ccall f_27383(C_word c,C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word *a;
if(c!=3) C_bad_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr3,(void*)f_27383,3,t0,t1,t2);}
t3=t1;
((C_proc2)(void*)(*((C_word*)t3+1)))(2,t3,(C_word)stub4981(C_SCHEME_UNDEFINED,t2));}

/* a27345 in mp:inhook in k22468 in k18948 in k18945 in k18942 in k18939 in k18528 in k18525 in k18522 in k18519 in k18516 in k17994 in k17991 in k17468 in k17465 in k17462 in k17459 in k17456 in k17453 in k17450 in k17447 in k17444 in k17441 in k17438 in k17435 in k17432 in k17429 in k17426 in k17423 in k17420 in k17417 in k17414 in k17411 in k17408 in k17269 in k17266 in k17263 in k17260 in k17204 in k17201 in k17198 in k17195 in k17192 in k17189 in k17186 in k17183 in k15938 in k15869 in k15676 in k15673 in k15568 in k15517 in k7924 in k7921 in k5905 in k5612 in k5609 in k5605 in k5314 in k5311 in k5308 in k5305 */
static void C_ccall f_27346(C_word c,C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word ab[5],*a=ab;
if(c!=3) C_bad_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr3,(void*)f_27346,3,t0,t1,t2);}
t3=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_27352,a[2]=t2,a[3]=((C_word*)t0)[2],a[4]=((C_word)li416),tmp=(C_word)a,a+=5,tmp);
C_trace("ChickenBridge.scm: 371  call-with-current-continuation");
t4=*((C_word*)lf[627]+1);
((C_proc3)C_retrieve_proc(t4))(3,t4,t1,t3);}

/* a27351 in a27345 in mp:inhook in k22468 in k18948 in k18945 in k18942 in k18939 in k18528 in k18525 in k18522 in k18519 in k18516 in k17994 in k17991 in k17468 in k17465 in k17462 in k17459 in k17456 in k17453 in k17450 in k17447 in k17444 in k17441 in k17438 in k17435 in k17432 in k17429 in k17426 in k17423 in k17420 in k17417 in k17414 in k17411 in k17408 in k17269 in k17266 in k17263 in k17260 in k17204 in k17201 in k17198 in k17195 in k17192 in k17189 in k17186 in k17183 in k15938 in k15869 in k15676 in k15673 in k15568 in k15517 in k7924 in k7921 in k5905 in k5612 in k5609 in k5605 in k5314 in k5311 in k5308 in k5305 */
static void C_ccall f_27352(C_word c,C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word t5;
C_word ab[9],*a=ab;
if(c!=3) C_bad_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr3,(void*)f_27352,3,t0,t1,t2);}
t3=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_27358,a[2]=t2,a[3]=((C_word)li414),tmp=(C_word)a,a+=4,tmp);
t4=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_27378,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word)li415),tmp=(C_word)a,a+=5,tmp);
C_trace("ChickenBridge.scm: 371  with-exception-handler");
t5=C_retrieve(lf[626]);
((C_proc4)C_retrieve_proc(t5))(4,t5,t1,t3,t4);}

/* a27377 in a27351 in a27345 in mp:inhook in k22468 in k18948 in k18945 in k18942 in k18939 in k18528 in k18525 in k18522 in k18519 in k18516 in k17994 in k17991 in k17468 in k17465 in k17462 in k17459 in k17456 in k17453 in k17450 in k17447 in k17444 in k17441 in k17438 in k17435 in k17432 in k17429 in k17426 in k17423 in k17420 in k17417 in k17414 in k17411 in k17408 in k17269 in k17266 in k17263 in k17260 in k17204 in k17201 in k17198 in k17195 in k17192 in k17189 in k17186 in k17183 in k15938 in k15869 in k15676 in k15673 in k15568 in k15517 in k7924 in k7921 in k5905 in k5612 in k5609 in k5605 in k5314 in k5311 in k5308 in k5305 */
static void C_ccall f_27378(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[3],*a=ab;
if(c!=2) C_bad_argc_2(c,2,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_27378,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_27382,a[2]=t1,tmp=(C_word)a,a+=3,tmp);
C_trace("ChickenBridge.scm: 371  %hook");
t3=((C_word*)t0)[3];
((C_proc3)C_retrieve_proc(t3))(3,t3,t2,((C_word*)t0)[2]);}

/* k27380 in a27377 in a27351 in a27345 in mp:inhook in k22468 in k18948 in k18945 in k18942 in k18939 in k18528 in k18525 in k18522 in k18519 in k18516 in k17994 in k17991 in k17468 in k17465 in k17462 in k17459 in k17456 in k17453 in k17450 in k17447 in k17444 in k17441 in k17438 in k17435 in k17432 in k17429 in k17426 in k17423 in k17420 in k17417 in k17414 in k17411 in k17408 in k17269 in k17266 in k17263 in k17260 in k17204 in k17201 in k17198 in k17195 in k17192 in k17189 in k17186 in k17183 in k15938 in k15869 in k15676 in k15673 in k15568 in k15517 in k7924 in k7921 in k5905 in k5612 in k5609 in k5605 in k5314 in k5311 in k5308 in k5305 */
static void C_ccall f_27382(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
t2=((C_word*)t0)[2];
((C_proc2)(void*)(*((C_word*)t2+1)))(2,t2,C_fix(0));}

/* a27357 in a27351 in a27345 in mp:inhook in k22468 in k18948 in k18945 in k18942 in k18939 in k18528 in k18525 in k18522 in k18519 in k18516 in k17994 in k17991 in k17468 in k17465 in k17462 in k17459 in k17456 in k17453 in k17450 in k17447 in k17444 in k17441 in k17438 in k17435 in k17432 in k17429 in k17426 in k17423 in k17420 in k17417 in k17414 in k17411 in k17408 in k17269 in k17266 in k17263 in k17260 in k17204 in k17201 in k17198 in k17195 in k17192 in k17189 in k17186 in k17183 in k15938 in k15869 in k15676 in k15673 in k15568 in k15517 in k7924 in k7921 in k5905 in k5612 in k5609 in k5605 in k5314 in k5311 in k5308 in k5305 */
static void C_ccall f_27358(C_word c,C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word ab[14],*a=ab;
if(c!=3) C_bad_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr3,(void*)f_27358,3,t0,t1,t2);}
t3=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_27362,a[2]=t1,a[3]=((C_word*)t0)[2],tmp=(C_word)a,a+=4,tmp);
t4=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_27369,a[2]=t3,tmp=(C_word)a,a+=3,tmp);
t5=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_27373,a[2]=t4,tmp=(C_word)a,a+=3,tmp);
t6=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_27376,a[2]=t2,a[3]=t5,tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 371  condition-property-accessor");
t7=C_retrieve(lf[623]);
((C_proc4)C_retrieve_proc(t7))(4,t7,t6,lf[624],lf[625]);}

/* k27374 in a27357 in a27351 in a27345 in mp:inhook in k22468 in k18948 in k18945 in k18942 in k18939 in k18528 in k18525 in k18522 in k18519 in k18516 in k17994 in k17991 in k17468 in k17465 in k17462 in k17459 in k17456 in k17453 in k17450 in k17447 in k17444 in k17441 in k17438 in k17435 in k17432 in k17429 in k17426 in k17423 in k17420 in k17417 in k17414 in k17411 in k17408 in k17269 in k17266 in k17263 in k17260 in k17204 in k17201 in k17198 in k17195 in k17192 in k17189 in k17186 in k17183 in k15938 in k15869 in k15676 in k15673 in k15568 in k15517 in k7924 in k7921 in k5905 in k5612 in k5609 in k5605 in k5314 in k5311 in k5308 in k5305 */
static void C_ccall f_27376(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
t2=t1;
((C_proc3)C_retrieve_proc(t2))(3,t2,((C_word*)t0)[3],((C_word*)t0)[2]);}

/* k27371 in a27357 in a27351 in a27345 in mp:inhook in k22468 in k18948 in k18945 in k18942 in k18939 in k18528 in k18525 in k18522 in k18519 in k18516 in k17994 in k17991 in k17468 in k17465 in k17462 in k17459 in k17456 in k17453 in k17450 in k17447 in k17444 in k17441 in k17438 in k17435 in k17432 in k17429 in k17426 in k17423 in k17420 in k17417 in k17414 in k17411 in k17408 in k17269 in k17266 in k17263 in k17260 in k17204 in k17201 in k17198 in k17195 in k17192 in k17189 in k17186 in k17183 in k15938 in k15869 in k15676 in k15673 in k15568 in k15517 in k7924 in k7921 in k5905 in k5612 in k5609 in k5605 in k5314 in k5311 in k5308 in k5305 */
static void C_ccall f_27373(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 371  sprintf");
t2=C_retrieve(lf[31]);
((C_proc4)C_retrieve_proc(t2))(4,t2,((C_word*)t0)[2],lf[622],t1);}

/* k27367 in a27357 in a27351 in a27345 in mp:inhook in k22468 in k18948 in k18945 in k18942 in k18939 in k18528 in k18525 in k18522 in k18519 in k18516 in k17994 in k17991 in k17468 in k17465 in k17462 in k17459 in k17456 in k17453 in k17450 in k17447 in k17444 in k17441 in k17438 in k17435 in k17432 in k17429 in k17426 in k17423 in k17420 in k17417 in k17414 in k17411 in k17408 in k17269 in k17266 in k17263 in k17260 in k17204 in k17201 in k17198 in k17195 in k17192 in k17189 in k17186 in k17183 in k15938 in k15869 in k15676 in k15673 in k15568 in k15517 in k7924 in k7921 in k5905 in k5612 in k5609 in k5605 in k5314 in k5311 in k5308 in k5305 */
static void C_ccall f_27369(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 371  print-error");
t2=C_retrieve(lf[349]);
((C_proc3)C_retrieve_proc(t2))(3,t2,((C_word*)t0)[2],t1);}

/* k27360 in a27357 in a27351 in a27345 in mp:inhook in k22468 in k18948 in k18945 in k18942 in k18939 in k18528 in k18525 in k18522 in k18519 in k18516 in k17994 in k17991 in k17468 in k17465 in k17462 in k17459 in k17456 in k17453 in k17450 in k17447 in k17444 in k17441 in k17438 in k17435 in k17432 in k17429 in k17426 in k17423 in k17420 in k17417 in k17414 in k17411 in k17408 in k17269 in k17266 in k17263 in k17260 in k17204 in k17201 in k17198 in k17195 in k17192 in k17189 in k17186 in k17183 in k15938 in k15869 in k15676 in k15673 in k15568 in k15517 in k7924 in k7921 in k5905 in k5612 in k5609 in k5605 in k5314 in k5311 in k5308 in k5305 */
static void C_ccall f_27362(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 371  %cont");
t2=((C_word*)t0)[3];
((C_proc3)C_retrieve_proc(t2))(3,t2,((C_word*)t0)[2],C_fix(-1));}

/* mp:mm in k22468 in k18948 in k18945 in k18942 in k18939 in k18528 in k18525 in k18522 in k18519 in k18516 in k17994 in k17991 in k17468 in k17465 in k17462 in k17459 in k17456 in k17453 in k17450 in k17447 in k17444 in k17441 in k17438 in k17435 in k17432 in k17429 in k17426 in k17423 in k17420 in k17417 in k17414 in k17411 in k17408 in k17269 in k17266 in k17263 in k17260 in k17204 in k17201 in k17198 in k17195 in k17192 in k17189 in k17186 in k17183 in k15938 in k15869 in k15676 in k15673 in k15568 in k15517 in k7924 in k7921 in k5905 in k5612 in k5609 in k5605 in k5314 in k5311 in k5308 in k5305 */
static void C_ccall f_27319(C_word c,C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word ab[3],*a=ab;
if(c!=3) C_bad_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr3,(void*)f_27319,3,t0,t1,t2);}
t3=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_27324,a[2]=((C_word)li412),tmp=(C_word)a,a+=3,tmp);
((C_proc3)(void*)(*((C_word*)t3+1)))(3,t3,t1,t2);}

/* f_27324 in mp:mm in k22468 in k18948 in k18945 in k18942 in k18939 in k18528 in k18525 in k18522 in k18519 in k18516 in k17994 in k17991 in k17468 in k17465 in k17462 in k17459 in k17456 in k17453 in k17450 in k17447 in k17444 in k17441 in k17438 in k17435 in k17432 in k17429 in k17426 in k17423 in k17420 in k17417 in k17414 in k17411 in k17408 in k17269 in k17266 in k17263 in k17260 in k17204 in k17201 in k17198 in k17195 in k17192 in k17189 in k17186 in k17183 in k15938 in k15869 in k15676 in k15673 in k15568 in k15517 in k7924 in k7921 in k5905 in k5612 in k5609 in k5605 in k5314 in k5311 in k5308 in k5305 */
static void C_ccall f_27324(C_word c,C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word *a;
if(c!=3) C_bad_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr3,(void*)f_27324,3,t0,t1,t2);}
t3=(C_truep(t2)?(C_word)C_i_foreign_pointer_argumentp(t2):C_SCHEME_FALSE);
t4=t1;
((C_proc2)(void*)(*((C_word*)t4+1)))(2,t4,(C_word)stub4974(C_SCHEME_UNDEFINED,t3));}

/* mp:bend in k22468 in k18948 in k18945 in k18942 in k18939 in k18528 in k18525 in k18522 in k18519 in k18516 in k17994 in k17991 in k17468 in k17465 in k17462 in k17459 in k17456 in k17453 in k17450 in k17447 in k17444 in k17441 in k17438 in k17435 in k17432 in k17429 in k17426 in k17423 in k17420 in k17417 in k17414 in k17411 in k17408 in k17269 in k17266 in k17263 in k17260 in k17204 in k17201 in k17198 in k17195 in k17192 in k17189 in k17186 in k17183 in k15938 in k15869 in k15676 in k15673 in k15568 in k15517 in k7924 in k7921 in k5905 in k5612 in k5609 in k5605 in k5314 in k5311 in k5308 in k5305 */
static void C_ccall f_27291(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4){
C_word tmp;
C_word t5;
C_word ab[3],*a=ab;
if(c!=5) C_bad_argc_2(c,5,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr5,(void*)f_27291,5,t0,t1,t2,t3,t4);}
t5=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_27296,a[2]=((C_word)li410),tmp=(C_word)a,a+=3,tmp);
((C_proc7)(void*)(*((C_word*)t5+1)))(7,t5,t1,C_fix(14),t2,t4,t3,C_fix(0));}

/* f_27296 in mp:bend in k22468 in k18948 in k18945 in k18942 in k18939 in k18528 in k18525 in k18522 in k18519 in k18516 in k17994 in k17991 in k17468 in k17465 in k17462 in k17459 in k17456 in k17453 in k17450 in k17447 in k17444 in k17441 in k17438 in k17435 in k17432 in k17429 in k17426 in k17423 in k17420 in k17417 in k17414 in k17411 in k17408 in k17269 in k17266 in k17263 in k17260 in k17204 in k17201 in k17198 in k17195 in k17192 in k17189 in k17186 in k17183 in k15938 in k15869 in k15676 in k15673 in k15568 in k15517 in k7924 in k7921 in k5905 in k5612 in k5609 in k5605 in k5314 in k5311 in k5308 in k5305 */
static void C_ccall f_27296(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4,C_word t5,C_word t6){
C_word tmp;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word *a;
if(c!=7) C_bad_argc_2(c,7,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr7,(void*)f_27296,7,t0,t1,t2,t3,t4,t5,t6);}
t7=(C_word)C_i_foreign_fixnum_argumentp(t2);
t8=(C_word)C_i_foreign_flonum_argumentp(t3);
t9=(C_word)C_i_foreign_flonum_argumentp(t4);
t10=(C_word)C_i_foreign_flonum_argumentp(t5);
t11=(C_word)C_i_foreign_flonum_argumentp(t6);
t12=t1;
((C_proc2)(void*)(*((C_word*)t12+1)))(2,t12,(C_word)stub4965(C_SCHEME_UNDEFINED,t7,t8,t9,t10,t11));}

/* mp:press in k22468 in k18948 in k18945 in k18942 in k18939 in k18528 in k18525 in k18522 in k18519 in k18516 in k17994 in k17991 in k17468 in k17465 in k17462 in k17459 in k17456 in k17453 in k17450 in k17447 in k17444 in k17441 in k17438 in k17435 in k17432 in k17429 in k17426 in k17423 in k17420 in k17417 in k17414 in k17411 in k17408 in k17269 in k17266 in k17263 in k17260 in k17204 in k17201 in k17198 in k17195 in k17192 in k17189 in k17186 in k17183 in k15938 in k15869 in k15676 in k15673 in k15568 in k15517 in k7924 in k7921 in k5905 in k5612 in k5609 in k5605 in k5314 in k5311 in k5308 in k5305 */
static void C_ccall f_27263(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4){
C_word tmp;
C_word t5;
C_word ab[3],*a=ab;
if(c!=5) C_bad_argc_2(c,5,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr5,(void*)f_27263,5,t0,t1,t2,t3,t4);}
t5=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_27268,a[2]=((C_word)li408),tmp=(C_word)a,a+=3,tmp);
((C_proc7)(void*)(*((C_word*)t5+1)))(7,t5,t1,C_fix(13),t2,t4,t3,C_fix(0));}

/* f_27268 in mp:press in k22468 in k18948 in k18945 in k18942 in k18939 in k18528 in k18525 in k18522 in k18519 in k18516 in k17994 in k17991 in k17468 in k17465 in k17462 in k17459 in k17456 in k17453 in k17450 in k17447 in k17444 in k17441 in k17438 in k17435 in k17432 in k17429 in k17426 in k17423 in k17420 in k17417 in k17414 in k17411 in k17408 in k17269 in k17266 in k17263 in k17260 in k17204 in k17201 in k17198 in k17195 in k17192 in k17189 in k17186 in k17183 in k15938 in k15869 in k15676 in k15673 in k15568 in k15517 in k7924 in k7921 in k5905 in k5612 in k5609 in k5605 in k5314 in k5311 in k5308 in k5305 */
static void C_ccall f_27268(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4,C_word t5,C_word t6){
C_word tmp;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word *a;
if(c!=7) C_bad_argc_2(c,7,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr7,(void*)f_27268,7,t0,t1,t2,t3,t4,t5,t6);}
t7=(C_word)C_i_foreign_fixnum_argumentp(t2);
t8=(C_word)C_i_foreign_flonum_argumentp(t3);
t9=(C_word)C_i_foreign_flonum_argumentp(t4);
t10=(C_word)C_i_foreign_flonum_argumentp(t5);
t11=(C_word)C_i_foreign_flonum_argumentp(t6);
t12=t1;
((C_proc2)(void*)(*((C_word*)t12+1)))(2,t12,(C_word)stub4950(C_SCHEME_UNDEFINED,t7,t8,t9,t10,t11));}

/* mp:prog in k22468 in k18948 in k18945 in k18942 in k18939 in k18528 in k18525 in k18522 in k18519 in k18516 in k17994 in k17991 in k17468 in k17465 in k17462 in k17459 in k17456 in k17453 in k17450 in k17447 in k17444 in k17441 in k17438 in k17435 in k17432 in k17429 in k17426 in k17423 in k17420 in k17417 in k17414 in k17411 in k17408 in k17269 in k17266 in k17263 in k17260 in k17204 in k17201 in k17198 in k17195 in k17192 in k17189 in k17186 in k17183 in k15938 in k15869 in k15676 in k15673 in k15568 in k15517 in k7924 in k7921 in k5905 in k5612 in k5609 in k5605 in k5314 in k5311 in k5308 in k5305 */
static void C_ccall f_27235(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4){
C_word tmp;
C_word t5;
C_word ab[3],*a=ab;
if(c!=5) C_bad_argc_2(c,5,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr5,(void*)f_27235,5,t0,t1,t2,t3,t4);}
t5=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_27240,a[2]=((C_word)li406),tmp=(C_word)a,a+=3,tmp);
((C_proc7)(void*)(*((C_word*)t5+1)))(7,t5,t1,C_fix(12),t2,t4,t3,C_fix(0));}

/* f_27240 in mp:prog in k22468 in k18948 in k18945 in k18942 in k18939 in k18528 in k18525 in k18522 in k18519 in k18516 in k17994 in k17991 in k17468 in k17465 in k17462 in k17459 in k17456 in k17453 in k17450 in k17447 in k17444 in k17441 in k17438 in k17435 in k17432 in k17429 in k17426 in k17423 in k17420 in k17417 in k17414 in k17411 in k17408 in k17269 in k17266 in k17263 in k17260 in k17204 in k17201 in k17198 in k17195 in k17192 in k17189 in k17186 in k17183 in k15938 in k15869 in k15676 in k15673 in k15568 in k15517 in k7924 in k7921 in k5905 in k5612 in k5609 in k5605 in k5314 in k5311 in k5308 in k5305 */
static void C_ccall f_27240(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4,C_word t5,C_word t6){
C_word tmp;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word *a;
if(c!=7) C_bad_argc_2(c,7,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr7,(void*)f_27240,7,t0,t1,t2,t3,t4,t5,t6);}
t7=(C_word)C_i_foreign_fixnum_argumentp(t2);
t8=(C_word)C_i_foreign_flonum_argumentp(t3);
t9=(C_word)C_i_foreign_flonum_argumentp(t4);
t10=(C_word)C_i_foreign_flonum_argumentp(t5);
t11=(C_word)C_i_foreign_flonum_argumentp(t6);
t12=t1;
((C_proc2)(void*)(*((C_word*)t12+1)))(2,t12,(C_word)stub4935(C_SCHEME_UNDEFINED,t7,t8,t9,t10,t11));}

/* mp:ctrl in k22468 in k18948 in k18945 in k18942 in k18939 in k18528 in k18525 in k18522 in k18519 in k18516 in k17994 in k17991 in k17468 in k17465 in k17462 in k17459 in k17456 in k17453 in k17450 in k17447 in k17444 in k17441 in k17438 in k17435 in k17432 in k17429 in k17426 in k17423 in k17420 in k17417 in k17414 in k17411 in k17408 in k17269 in k17266 in k17263 in k17260 in k17204 in k17201 in k17198 in k17195 in k17192 in k17189 in k17186 in k17183 in k15938 in k15869 in k15676 in k15673 in k15568 in k15517 in k7924 in k7921 in k5905 in k5612 in k5609 in k5605 in k5314 in k5311 in k5308 in k5305 */
static void C_ccall f_27207(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4,C_word t5){
C_word tmp;
C_word t6;
C_word ab[3],*a=ab;
if(c!=6) C_bad_argc_2(c,6,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr6,(void*)f_27207,6,t0,t1,t2,t3,t4,t5);}
t6=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_27212,a[2]=((C_word)li404),tmp=(C_word)a,a+=3,tmp);
((C_proc7)(void*)(*((C_word*)t6+1)))(7,t6,t1,C_fix(11),t2,t5,t3,t4);}

/* f_27212 in mp:ctrl in k22468 in k18948 in k18945 in k18942 in k18939 in k18528 in k18525 in k18522 in k18519 in k18516 in k17994 in k17991 in k17468 in k17465 in k17462 in k17459 in k17456 in k17453 in k17450 in k17447 in k17444 in k17441 in k17438 in k17435 in k17432 in k17429 in k17426 in k17423 in k17420 in k17417 in k17414 in k17411 in k17408 in k17269 in k17266 in k17263 in k17260 in k17204 in k17201 in k17198 in k17195 in k17192 in k17189 in k17186 in k17183 in k15938 in k15869 in k15676 in k15673 in k15568 in k15517 in k7924 in k7921 in k5905 in k5612 in k5609 in k5605 in k5314 in k5311 in k5308 in k5305 */
static void C_ccall f_27212(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4,C_word t5,C_word t6){
C_word tmp;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word *a;
if(c!=7) C_bad_argc_2(c,7,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr7,(void*)f_27212,7,t0,t1,t2,t3,t4,t5,t6);}
t7=(C_word)C_i_foreign_fixnum_argumentp(t2);
t8=(C_word)C_i_foreign_flonum_argumentp(t3);
t9=(C_word)C_i_foreign_flonum_argumentp(t4);
t10=(C_word)C_i_foreign_flonum_argumentp(t5);
t11=(C_word)C_i_foreign_flonum_argumentp(t6);
t12=t1;
((C_proc2)(void*)(*((C_word*)t12+1)))(2,t12,(C_word)stub4920(C_SCHEME_UNDEFINED,t7,t8,t9,t10,t11));}

/* mp:touch in k22468 in k18948 in k18945 in k18942 in k18939 in k18528 in k18525 in k18522 in k18519 in k18516 in k17994 in k17991 in k17468 in k17465 in k17462 in k17459 in k17456 in k17453 in k17450 in k17447 in k17444 in k17441 in k17438 in k17435 in k17432 in k17429 in k17426 in k17423 in k17420 in k17417 in k17414 in k17411 in k17408 in k17269 in k17266 in k17263 in k17260 in k17204 in k17201 in k17198 in k17195 in k17192 in k17189 in k17186 in k17183 in k15938 in k15869 in k15676 in k15673 in k15568 in k15517 in k7924 in k7921 in k5905 in k5612 in k5609 in k5605 in k5314 in k5311 in k5308 in k5305 */
static void C_ccall f_27179(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4,C_word t5){
C_word tmp;
C_word t6;
C_word ab[3],*a=ab;
if(c!=6) C_bad_argc_2(c,6,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr6,(void*)f_27179,6,t0,t1,t2,t3,t4,t5);}
t6=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_27184,a[2]=((C_word)li402),tmp=(C_word)a,a+=3,tmp);
((C_proc7)(void*)(*((C_word*)t6+1)))(7,t6,t1,C_fix(10),t2,t5,t3,t4);}

/* f_27184 in mp:touch in k22468 in k18948 in k18945 in k18942 in k18939 in k18528 in k18525 in k18522 in k18519 in k18516 in k17994 in k17991 in k17468 in k17465 in k17462 in k17459 in k17456 in k17453 in k17450 in k17447 in k17444 in k17441 in k17438 in k17435 in k17432 in k17429 in k17426 in k17423 in k17420 in k17417 in k17414 in k17411 in k17408 in k17269 in k17266 in k17263 in k17260 in k17204 in k17201 in k17198 in k17195 in k17192 in k17189 in k17186 in k17183 in k15938 in k15869 in k15676 in k15673 in k15568 in k15517 in k7924 in k7921 in k5905 in k5612 in k5609 in k5605 in k5314 in k5311 in k5308 in k5305 */
static void C_ccall f_27184(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4,C_word t5,C_word t6){
C_word tmp;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word *a;
if(c!=7) C_bad_argc_2(c,7,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr7,(void*)f_27184,7,t0,t1,t2,t3,t4,t5,t6);}
t7=(C_word)C_i_foreign_fixnum_argumentp(t2);
t8=(C_word)C_i_foreign_flonum_argumentp(t3);
t9=(C_word)C_i_foreign_flonum_argumentp(t4);
t10=(C_word)C_i_foreign_flonum_argumentp(t5);
t11=(C_word)C_i_foreign_flonum_argumentp(t6);
t12=t1;
((C_proc2)(void*)(*((C_word*)t12+1)))(2,t12,(C_word)stub4904(C_SCHEME_UNDEFINED,t7,t8,t9,t10,t11));}

/* mp:on in k22468 in k18948 in k18945 in k18942 in k18939 in k18528 in k18525 in k18522 in k18519 in k18516 in k17994 in k17991 in k17468 in k17465 in k17462 in k17459 in k17456 in k17453 in k17450 in k17447 in k17444 in k17441 in k17438 in k17435 in k17432 in k17429 in k17426 in k17423 in k17420 in k17417 in k17414 in k17411 in k17408 in k17269 in k17266 in k17263 in k17260 in k17204 in k17201 in k17198 in k17195 in k17192 in k17189 in k17186 in k17183 in k15938 in k15869 in k15676 in k15673 in k15568 in k15517 in k7924 in k7921 in k5905 in k5612 in k5609 in k5605 in k5314 in k5311 in k5308 in k5305 */
static void C_ccall f_27151(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4,C_word t5){
C_word tmp;
C_word t6;
C_word ab[3],*a=ab;
if(c!=6) C_bad_argc_2(c,6,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr6,(void*)f_27151,6,t0,t1,t2,t3,t4,t5);}
t6=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_27156,a[2]=((C_word)li400),tmp=(C_word)a,a+=3,tmp);
((C_proc7)(void*)(*((C_word*)t6+1)))(7,t6,t1,C_fix(9),t2,t5,t3,t4);}

/* f_27156 in mp:on in k22468 in k18948 in k18945 in k18942 in k18939 in k18528 in k18525 in k18522 in k18519 in k18516 in k17994 in k17991 in k17468 in k17465 in k17462 in k17459 in k17456 in k17453 in k17450 in k17447 in k17444 in k17441 in k17438 in k17435 in k17432 in k17429 in k17426 in k17423 in k17420 in k17417 in k17414 in k17411 in k17408 in k17269 in k17266 in k17263 in k17260 in k17204 in k17201 in k17198 in k17195 in k17192 in k17189 in k17186 in k17183 in k15938 in k15869 in k15676 in k15673 in k15568 in k15517 in k7924 in k7921 in k5905 in k5612 in k5609 in k5605 in k5314 in k5311 in k5308 in k5305 */
static void C_ccall f_27156(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4,C_word t5,C_word t6){
C_word tmp;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word *a;
if(c!=7) C_bad_argc_2(c,7,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr7,(void*)f_27156,7,t0,t1,t2,t3,t4,t5,t6);}
t7=(C_word)C_i_foreign_fixnum_argumentp(t2);
t8=(C_word)C_i_foreign_flonum_argumentp(t3);
t9=(C_word)C_i_foreign_flonum_argumentp(t4);
t10=(C_word)C_i_foreign_flonum_argumentp(t5);
t11=(C_word)C_i_foreign_flonum_argumentp(t6);
t12=t1;
((C_proc2)(void*)(*((C_word*)t12+1)))(2,t12,(C_word)stub4888(C_SCHEME_UNDEFINED,t7,t8,t9,t10,t11));}

/* mp:off in k22468 in k18948 in k18945 in k18942 in k18939 in k18528 in k18525 in k18522 in k18519 in k18516 in k17994 in k17991 in k17468 in k17465 in k17462 in k17459 in k17456 in k17453 in k17450 in k17447 in k17444 in k17441 in k17438 in k17435 in k17432 in k17429 in k17426 in k17423 in k17420 in k17417 in k17414 in k17411 in k17408 in k17269 in k17266 in k17263 in k17260 in k17204 in k17201 in k17198 in k17195 in k17192 in k17189 in k17186 in k17183 in k15938 in k15869 in k15676 in k15673 in k15568 in k15517 in k7924 in k7921 in k5905 in k5612 in k5609 in k5605 in k5314 in k5311 in k5308 in k5305 */
static void C_ccall f_27123(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4){
C_word tmp;
C_word t5;
C_word ab[3],*a=ab;
if(c!=5) C_bad_argc_2(c,5,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr5,(void*)f_27123,5,t0,t1,t2,t3,t4);}
t5=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_27128,a[2]=((C_word)li398),tmp=(C_word)a,a+=3,tmp);
((C_proc7)(void*)(*((C_word*)t5+1)))(7,t5,t1,C_fix(8),t2,t4,t3,C_fix(0));}

/* f_27128 in mp:off in k22468 in k18948 in k18945 in k18942 in k18939 in k18528 in k18525 in k18522 in k18519 in k18516 in k17994 in k17991 in k17468 in k17465 in k17462 in k17459 in k17456 in k17453 in k17450 in k17447 in k17444 in k17441 in k17438 in k17435 in k17432 in k17429 in k17426 in k17423 in k17420 in k17417 in k17414 in k17411 in k17408 in k17269 in k17266 in k17263 in k17260 in k17204 in k17201 in k17198 in k17195 in k17192 in k17189 in k17186 in k17183 in k15938 in k15869 in k15676 in k15673 in k15568 in k15517 in k7924 in k7921 in k5905 in k5612 in k5609 in k5605 in k5314 in k5311 in k5308 in k5305 */
static void C_ccall f_27128(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4,C_word t5,C_word t6){
C_word tmp;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word *a;
if(c!=7) C_bad_argc_2(c,7,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr7,(void*)f_27128,7,t0,t1,t2,t3,t4,t5,t6);}
t7=(C_word)C_i_foreign_fixnum_argumentp(t2);
t8=(C_word)C_i_foreign_flonum_argumentp(t3);
t9=(C_word)C_i_foreign_flonum_argumentp(t4);
t10=(C_word)C_i_foreign_flonum_argumentp(t5);
t11=(C_word)C_i_foreign_flonum_argumentp(t6);
t12=t1;
((C_proc2)(void*)(*((C_word*)t12+1)))(2,t12,(C_word)stub4872(C_SCHEME_UNDEFINED,t7,t8,t9,t10,t11));}

/* mp:midi in k22468 in k18948 in k18945 in k18942 in k18939 in k18528 in k18525 in k18522 in k18519 in k18516 in k17994 in k17991 in k17468 in k17465 in k17462 in k17459 in k17456 in k17453 in k17450 in k17447 in k17444 in k17441 in k17438 in k17435 in k17432 in k17429 in k17426 in k17423 in k17420 in k17417 in k17414 in k17411 in k17408 in k17269 in k17266 in k17263 in k17260 in k17204 in k17201 in k17198 in k17195 in k17192 in k17189 in k17186 in k17183 in k15938 in k15869 in k15676 in k15673 in k15568 in k15517 in k7924 in k7921 in k5905 in k5612 in k5609 in k5605 in k5314 in k5311 in k5308 in k5305 */
static void C_ccall f_27095(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4,C_word t5,C_word t6){
C_word tmp;
C_word t7;
C_word ab[3],*a=ab;
if(c!=7) C_bad_argc_2(c,7,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr7,(void*)f_27095,7,t0,t1,t2,t3,t4,t5,t6);}
t7=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_27100,a[2]=((C_word)li396),tmp=(C_word)a,a+=3,tmp);
((C_proc7)(void*)(*((C_word*)t7+1)))(7,t7,t1,t2,t3,t4,t5,t6);}

/* f_27100 in mp:midi in k22468 in k18948 in k18945 in k18942 in k18939 in k18528 in k18525 in k18522 in k18519 in k18516 in k17994 in k17991 in k17468 in k17465 in k17462 in k17459 in k17456 in k17453 in k17450 in k17447 in k17444 in k17441 in k17438 in k17435 in k17432 in k17429 in k17426 in k17423 in k17420 in k17417 in k17414 in k17411 in k17408 in k17269 in k17266 in k17263 in k17260 in k17204 in k17201 in k17198 in k17195 in k17192 in k17189 in k17186 in k17183 in k15938 in k15869 in k15676 in k15673 in k15568 in k15517 in k7924 in k7921 in k5905 in k5612 in k5609 in k5605 in k5314 in k5311 in k5308 in k5305 */
static void C_ccall f_27100(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4,C_word t5,C_word t6){
C_word tmp;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word *a;
if(c!=7) C_bad_argc_2(c,7,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr7,(void*)f_27100,7,t0,t1,t2,t3,t4,t5,t6);}
t7=(C_word)C_i_foreign_flonum_argumentp(t2);
t8=(C_word)C_i_foreign_flonum_argumentp(t3);
t9=(C_word)C_i_foreign_flonum_argumentp(t4);
t10=(C_word)C_i_foreign_flonum_argumentp(t5);
t11=(C_word)C_i_foreign_flonum_argumentp(t6);
t12=t1;
((C_proc2)(void*)(*((C_word*)t12+1)))(2,t12,(C_word)stub4857(C_SCHEME_UNDEFINED,t7,t8,t9,t10,t11));}

/* mp:note in k22468 in k18948 in k18945 in k18942 in k18939 in k18528 in k18525 in k18522 in k18519 in k18516 in k17994 in k17991 in k17468 in k17465 in k17462 in k17459 in k17456 in k17453 in k17450 in k17447 in k17444 in k17441 in k17438 in k17435 in k17432 in k17429 in k17426 in k17423 in k17420 in k17417 in k17414 in k17411 in k17408 in k17269 in k17266 in k17263 in k17260 in k17204 in k17201 in k17198 in k17195 in k17192 in k17189 in k17186 in k17183 in k15938 in k15869 in k15676 in k15673 in k15568 in k15517 in k7924 in k7921 in k5905 in k5612 in k5609 in k5605 in k5314 in k5311 in k5308 in k5305 */
static void C_ccall f_27067(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4,C_word t5,C_word t6){
C_word tmp;
C_word t7;
C_word ab[3],*a=ab;
if(c!=7) C_bad_argc_2(c,7,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr7,(void*)f_27067,7,t0,t1,t2,t3,t4,t5,t6);}
t7=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_27072,a[2]=((C_word)li394),tmp=(C_word)a,a+=3,tmp);
((C_proc7)(void*)(*((C_word*)t7+1)))(7,t7,t1,t2,t3,t4,t5,t6);}

/* f_27072 in mp:note in k22468 in k18948 in k18945 in k18942 in k18939 in k18528 in k18525 in k18522 in k18519 in k18516 in k17994 in k17991 in k17468 in k17465 in k17462 in k17459 in k17456 in k17453 in k17450 in k17447 in k17444 in k17441 in k17438 in k17435 in k17432 in k17429 in k17426 in k17423 in k17420 in k17417 in k17414 in k17411 in k17408 in k17269 in k17266 in k17263 in k17260 in k17204 in k17201 in k17198 in k17195 in k17192 in k17189 in k17186 in k17183 in k15938 in k15869 in k15676 in k15673 in k15568 in k15517 in k7924 in k7921 in k5905 in k5612 in k5609 in k5605 in k5314 in k5311 in k5308 in k5305 */
static void C_ccall f_27072(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4,C_word t5,C_word t6){
C_word tmp;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word *a;
if(c!=7) C_bad_argc_2(c,7,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr7,(void*)f_27072,7,t0,t1,t2,t3,t4,t5,t6);}
t7=(C_word)C_i_foreign_flonum_argumentp(t2);
t8=(C_word)C_i_foreign_flonum_argumentp(t3);
t9=(C_word)C_i_foreign_flonum_argumentp(t4);
t10=(C_word)C_i_foreign_flonum_argumentp(t5);
t11=(C_word)C_i_foreign_flonum_argumentp(t6);
t12=t1;
((C_proc2)(void*)(*((C_word*)t12+1)))(2,t12,(C_word)stub4840(C_SCHEME_UNDEFINED,t7,t8,t9,t10,t11));}

/* mm:num-set! in k22468 in k18948 in k18945 in k18942 in k18939 in k18528 in k18525 in k18522 in k18519 in k18516 in k17994 in k17991 in k17468 in k17465 in k17462 in k17459 in k17456 in k17453 in k17450 in k17447 in k17444 in k17441 in k17438 in k17435 in k17432 in k17429 in k17426 in k17423 in k17420 in k17417 in k17414 in k17411 in k17408 in k17269 in k17266 in k17263 in k17260 in k17204 in k17201 in k17198 in k17195 in k17192 in k17189 in k17186 in k17183 in k15938 in k15869 in k15676 in k15673 in k15568 in k15517 in k7924 in k7921 in k5905 in k5612 in k5609 in k5605 in k5314 in k5311 in k5308 in k5305 */
static void C_ccall f_27044(C_word c,C_word t0,C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word ab[7],*a=ab;
if(c!=4) C_bad_argc_2(c,4,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr4,(void*)f_27044,4,t0,t1,t2,t3);}
t4=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_27048,a[2]=t3,a[3]=t1,tmp=(C_word)a,a+=4,tmp);
t5=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_27049,a[2]=((C_word)li392),tmp=(C_word)a,a+=3,tmp);
((C_proc5)(void*)(*((C_word*)t5+1)))(5,t5,t4,t2,C_fix(1),t3);}

/* f_27049 in mm:num-set! in k22468 in k18948 in k18945 in k18942 in k18939 in k18528 in k18525 in k18522 in k18519 in k18516 in k17994 in k17991 in k17468 in k17465 in k17462 in k17459 in k17456 in k17453 in k17450 in k17447 in k17444 in k17441 in k17438 in k17435 in k17432 in k17429 in k17426 in k17423 in k17420 in k17417 in k17414 in k17411 in k17408 in k17269 in k17266 in k17263 in k17260 in k17204 in k17201 in k17198 in k17195 in k17192 in k17189 in k17186 in k17183 in k15938 in k15869 in k15676 in k15673 in k15568 in k15517 in k7924 in k7921 in k5905 in k5612 in k5609 in k5605 in k5314 in k5311 in k5308 in k5305 */
static void C_ccall f_27049(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4){
C_word tmp;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word *a;
if(c!=5) C_bad_argc_2(c,5,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr5,(void*)f_27049,5,t0,t1,t2,t3,t4);}
t5=(C_truep(t2)?(C_word)C_i_foreign_pointer_argumentp(t2):C_SCHEME_FALSE);
t6=(C_word)C_i_foreign_fixnum_argumentp(t3);
t7=(C_word)C_i_foreign_fixnum_argumentp(t4);
t8=t1;
((C_proc2)(void*)(*((C_word*)t8+1)))(2,t8,(C_word)stub4822(C_SCHEME_UNDEFINED,t5,t6,t7));}

/* k27046 in mm:num-set! in k22468 in k18948 in k18945 in k18942 in k18939 in k18528 in k18525 in k18522 in k18519 in k18516 in k17994 in k17991 in k17468 in k17465 in k17462 in k17459 in k17456 in k17453 in k17450 in k17447 in k17444 in k17441 in k17438 in k17435 in k17432 in k17429 in k17426 in k17423 in k17420 in k17417 in k17414 in k17411 in k17408 in k17269 in k17266 in k17263 in k17260 in k17204 in k17201 in k17198 in k17195 in k17192 in k17189 in k17186 in k17183 in k15938 in k15869 in k15676 in k15673 in k15568 in k15517 in k7924 in k7921 in k5905 in k5612 in k5609 in k5605 in k5314 in k5311 in k5308 in k5305 */
static void C_ccall f_27048(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
t2=((C_word*)t0)[3];
((C_proc2)(void*)(*((C_word*)t2+1)))(2,t2,((C_word*)t0)[2]);}

/* mm:num in k22468 in k18948 in k18945 in k18942 in k18939 in k18528 in k18525 in k18522 in k18519 in k18516 in k17994 in k17991 in k17468 in k17465 in k17462 in k17459 in k17456 in k17453 in k17450 in k17447 in k17444 in k17441 in k17438 in k17435 in k17432 in k17429 in k17426 in k17423 in k17420 in k17417 in k17414 in k17411 in k17408 in k17269 in k17266 in k17263 in k17260 in k17204 in k17201 in k17198 in k17195 in k17192 in k17189 in k17186 in k17183 in k15938 in k15869 in k15676 in k15673 in k15568 in k15517 in k7924 in k7921 in k5905 in k5612 in k5609 in k5605 in k5314 in k5311 in k5308 in k5305 */
static void C_ccall f_27025(C_word c,C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word ab[3],*a=ab;
if(c!=3) C_bad_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr3,(void*)f_27025,3,t0,t1,t2);}
t3=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_27030,a[2]=((C_word)li390),tmp=(C_word)a,a+=3,tmp);
((C_proc4)(void*)(*((C_word*)t3+1)))(4,t3,t1,t2,C_fix(1));}

/* f_27030 in mm:num in k22468 in k18948 in k18945 in k18942 in k18939 in k18528 in k18525 in k18522 in k18519 in k18516 in k17994 in k17991 in k17468 in k17465 in k17462 in k17459 in k17456 in k17453 in k17450 in k17447 in k17444 in k17441 in k17438 in k17435 in k17432 in k17429 in k17426 in k17423 in k17420 in k17417 in k17414 in k17411 in k17408 in k17269 in k17266 in k17263 in k17260 in k17204 in k17201 in k17198 in k17195 in k17192 in k17189 in k17186 in k17183 in k15938 in k15869 in k15676 in k15673 in k15568 in k15517 in k7924 in k7921 in k5905 in k5612 in k5609 in k5605 in k5314 in k5311 in k5308 in k5305 */
static void C_ccall f_27030(C_word c,C_word t0,C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word t6;
C_word *a;
if(c!=4) C_bad_argc_2(c,4,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr4,(void*)f_27030,4,t0,t1,t2,t3);}
t4=(C_truep(t2)?(C_word)C_i_foreign_pointer_argumentp(t2):C_SCHEME_FALSE);
t5=(C_word)C_i_foreign_fixnum_argumentp(t3);
t6=t1;
((C_proc2)(void*)(*((C_word*)t6+1)))(2,t6,(C_word)stub4811(C_SCHEME_UNDEFINED,t4,t5));}

/* mm:val-set! in k22468 in k18948 in k18945 in k18942 in k18939 in k18528 in k18525 in k18522 in k18519 in k18516 in k17994 in k17991 in k17468 in k17465 in k17462 in k17459 in k17456 in k17453 in k17450 in k17447 in k17444 in k17441 in k17438 in k17435 in k17432 in k17429 in k17426 in k17423 in k17420 in k17417 in k17414 in k17411 in k17408 in k17269 in k17266 in k17263 in k17260 in k17204 in k17201 in k17198 in k17195 in k17192 in k17189 in k17186 in k17183 in k15938 in k15869 in k15676 in k15673 in k15568 in k15517 in k7924 in k7921 in k5905 in k5612 in k5609 in k5605 in k5314 in k5311 in k5308 in k5305 */
static void C_ccall f_26970(C_word c,C_word t0,C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word t6;
C_word ab[9],*a=ab;
if(c!=4) C_bad_argc_2(c,4,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr4,(void*)f_26970,4,t0,t1,t2,t3);}
t4=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_26974,a[2]=t3,a[3]=t1,tmp=(C_word)a,a+=4,tmp);
t5=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_26977,a[2]=t3,a[3]=t2,a[4]=t4,tmp=(C_word)a,a+=5,tmp);
C_trace("ChickenBridge.scm: 371  mm:type?");
t6=C_retrieve(lf[606]);
((C_proc4)C_retrieve_proc(t6))(4,t6,t5,t2,C_fix(11));}

/* k26975 in mm:val-set! in k22468 in k18948 in k18945 in k18942 in k18939 in k18528 in k18525 in k18522 in k18519 in k18516 in k17994 in k17991 in k17468 in k17465 in k17462 in k17459 in k17456 in k17453 in k17450 in k17447 in k17444 in k17441 in k17438 in k17435 in k17432 in k17429 in k17426 in k17423 in k17420 in k17417 in k17414 in k17411 in k17408 in k17269 in k17266 in k17263 in k17260 in k17204 in k17201 in k17198 in k17195 in k17192 in k17189 in k17186 in k17183 in k15938 in k15869 in k15676 in k15673 in k15568 in k15517 in k7924 in k7921 in k5905 in k5612 in k5609 in k5605 in k5314 in k5311 in k5308 in k5305 */
static void C_ccall f_26977(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[5],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_26977,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_26980,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],tmp=(C_word)a,a+=5,tmp);
if(C_truep(t1)){
t3=t2;
f_26980(2,t3,t1);}
else{
C_trace("ChickenBridge.scm: 371  mm:type?");
t3=C_retrieve(lf[606]);
((C_proc4)C_retrieve_proc(t3))(4,t3,t2,((C_word*)t0)[3],C_fix(10));}}

/* k26978 in k26975 in mm:val-set! in k22468 in k18948 in k18945 in k18942 in k18939 in k18528 in k18525 in k18522 in k18519 in k18516 in k17994 in k17991 in k17468 in k17465 in k17462 in k17459 in k17456 in k17453 in k17450 in k17447 in k17444 in k17441 in k17438 in k17435 in k17432 in k17429 in k17426 in k17423 in k17420 in k17417 in k17414 in k17411 in k17408 in k17269 in k17266 in k17263 in k17260 in k17204 in k17201 in k17198 in k17195 in k17192 in k17189 in k17186 in k17183 in k15938 in k15869 in k15676 in k15673 in k15568 in k15517 in k7924 in k7921 in k5905 in k5612 in k5609 in k5605 in k5314 in k5311 in k5308 in k5305 */
static void C_ccall f_26980(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word ab[6],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_26980,2,t0,t1);}
if(C_truep(t1)){
t2=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_26984,a[2]=((C_word)li387),tmp=(C_word)a,a+=3,tmp);
((C_proc5)(void*)(*((C_word*)t2+1)))(5,t2,((C_word*)t0)[4],((C_word*)t0)[3],C_fix(2),((C_word*)t0)[2]);}
else{
t2=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_27004,a[2]=((C_word)li388),tmp=(C_word)a,a+=3,tmp);
((C_proc5)(void*)(*((C_word*)t2+1)))(5,t2,((C_word*)t0)[4],((C_word*)t0)[3],C_fix(1),C_retrieve(lf[608]));}}

/* f_27004 in k26978 in k26975 in mm:val-set! in k22468 in k18948 in k18945 in k18942 in k18939 in k18528 in k18525 in k18522 in k18519 in k18516 in k17994 in k17991 in k17468 in k17465 in k17462 in k17459 in k17456 in k17453 in k17450 in k17447 in k17444 in k17441 in k17438 in k17435 in k17432 in k17429 in k17426 in k17423 in k17420 in k17417 in k17414 in k17411 in k17408 in k17269 in k17266 in k17263 in k17260 in k17204 in k17201 in k17198 in k17195 in k17192 in k17189 in k17186 in k17183 in k15938 in k15869 in k15676 in k15673 in k15568 in k15517 in k7924 in k7921 in k5905 in k5612 in k5609 in k5605 in k5314 in k5311 in k5308 in k5305 */
static void C_ccall f_27004(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4){
C_word tmp;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word *a;
if(c!=5) C_bad_argc_2(c,5,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr5,(void*)f_27004,5,t0,t1,t2,t3,t4);}
t5=(C_truep(t2)?(C_word)C_i_foreign_pointer_argumentp(t2):C_SCHEME_FALSE);
t6=(C_word)C_i_foreign_fixnum_argumentp(t3);
t7=(C_word)C_i_foreign_fixnum_argumentp(t4);
t8=t1;
((C_proc2)(void*)(*((C_word*)t8+1)))(2,t8,(C_word)stub4800(C_SCHEME_UNDEFINED,t5,t6,t7));}

/* f_26984 in k26978 in k26975 in mm:val-set! in k22468 in k18948 in k18945 in k18942 in k18939 in k18528 in k18525 in k18522 in k18519 in k18516 in k17994 in k17991 in k17468 in k17465 in k17462 in k17459 in k17456 in k17453 in k17450 in k17447 in k17444 in k17441 in k17438 in k17435 in k17432 in k17429 in k17426 in k17423 in k17420 in k17417 in k17414 in k17411 in k17408 in k17269 in k17266 in k17263 in k17260 in k17204 in k17201 in k17198 in k17195 in k17192 in k17189 in k17186 in k17183 in k15938 in k15869 in k15676 in k15673 in k15568 in k15517 in k7924 in k7921 in k5905 in k5612 in k5609 in k5605 in k5314 in k5311 in k5308 in k5305 */
static void C_ccall f_26984(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4){
C_word tmp;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word *a;
if(c!=5) C_bad_argc_2(c,5,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr5,(void*)f_26984,5,t0,t1,t2,t3,t4);}
t5=(C_truep(t2)?(C_word)C_i_foreign_pointer_argumentp(t2):C_SCHEME_FALSE);
t6=(C_word)C_i_foreign_fixnum_argumentp(t3);
t7=(C_word)C_i_foreign_fixnum_argumentp(t4);
t8=t1;
((C_proc2)(void*)(*((C_word*)t8+1)))(2,t8,(C_word)stub4790(C_SCHEME_UNDEFINED,t5,t6,t7));}

/* k26972 in mm:val-set! in k22468 in k18948 in k18945 in k18942 in k18939 in k18528 in k18525 in k18522 in k18519 in k18516 in k17994 in k17991 in k17468 in k17465 in k17462 in k17459 in k17456 in k17453 in k17450 in k17447 in k17444 in k17441 in k17438 in k17435 in k17432 in k17429 in k17426 in k17423 in k17420 in k17417 in k17414 in k17411 in k17408 in k17269 in k17266 in k17263 in k17260 in k17204 in k17201 in k17198 in k17195 in k17192 in k17189 in k17186 in k17183 in k15938 in k15869 in k15676 in k15673 in k15568 in k15517 in k7924 in k7921 in k5905 in k5612 in k5609 in k5605 in k5314 in k5311 in k5308 in k5305 */
static void C_ccall f_26974(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
t2=((C_word*)t0)[3];
((C_proc2)(void*)(*((C_word*)t2+1)))(2,t2,((C_word*)t0)[2]);}

/* mm:val in k22468 in k18948 in k18945 in k18942 in k18939 in k18528 in k18525 in k18522 in k18519 in k18516 in k17994 in k17991 in k17468 in k17465 in k17462 in k17459 in k17456 in k17453 in k17450 in k17447 in k17444 in k17441 in k17438 in k17435 in k17432 in k17429 in k17426 in k17423 in k17420 in k17417 in k17414 in k17411 in k17408 in k17269 in k17266 in k17263 in k17260 in k17204 in k17201 in k17198 in k17195 in k17192 in k17189 in k17186 in k17183 in k15938 in k15869 in k15676 in k15673 in k15568 in k15517 in k7924 in k7921 in k5905 in k5612 in k5609 in k5605 in k5314 in k5311 in k5308 in k5305 */
static void C_ccall f_26923(C_word c,C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word ab[4],*a=ab;
if(c!=3) C_bad_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr3,(void*)f_26923,3,t0,t1,t2);}
t3=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_26930,a[2]=t2,a[3]=t1,tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 371  mm:type?");
t4=C_retrieve(lf[606]);
((C_proc4)C_retrieve_proc(t4))(4,t4,t3,t2,C_fix(11));}

/* k26928 in mm:val in k22468 in k18948 in k18945 in k18942 in k18939 in k18528 in k18525 in k18522 in k18519 in k18516 in k17994 in k17991 in k17468 in k17465 in k17462 in k17459 in k17456 in k17453 in k17450 in k17447 in k17444 in k17441 in k17438 in k17435 in k17432 in k17429 in k17426 in k17423 in k17420 in k17417 in k17414 in k17411 in k17408 in k17269 in k17266 in k17263 in k17260 in k17204 in k17201 in k17198 in k17195 in k17192 in k17189 in k17186 in k17183 in k15938 in k15869 in k15676 in k15673 in k15568 in k15517 in k7924 in k7921 in k5905 in k5612 in k5609 in k5605 in k5314 in k5311 in k5308 in k5305 */
static void C_ccall f_26930(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[4],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_26930,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_26933,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],tmp=(C_word)a,a+=4,tmp);
if(C_truep(t1)){
t3=t2;
f_26933(2,t3,t1);}
else{
C_trace("ChickenBridge.scm: 371  mm:type?");
t3=C_retrieve(lf[606]);
((C_proc4)C_retrieve_proc(t3))(4,t3,t2,((C_word*)t0)[2],C_fix(10));}}

/* k26931 in k26928 in mm:val in k22468 in k18948 in k18945 in k18942 in k18939 in k18528 in k18525 in k18522 in k18519 in k18516 in k17994 in k17991 in k17468 in k17465 in k17462 in k17459 in k17456 in k17453 in k17450 in k17447 in k17444 in k17441 in k17438 in k17435 in k17432 in k17429 in k17426 in k17423 in k17420 in k17417 in k17414 in k17411 in k17408 in k17269 in k17266 in k17263 in k17260 in k17204 in k17201 in k17198 in k17195 in k17192 in k17189 in k17186 in k17183 in k15938 in k15869 in k15676 in k15673 in k15568 in k15517 in k7924 in k7921 in k5905 in k5612 in k5609 in k5605 in k5314 in k5311 in k5308 in k5305 */
static void C_ccall f_26933(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word ab[6],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_26933,2,t0,t1);}
if(C_truep(t1)){
t2=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_26937,a[2]=((C_word)li384),tmp=(C_word)a,a+=3,tmp);
((C_proc4)(void*)(*((C_word*)t2+1)))(4,t2,((C_word*)t0)[3],((C_word*)t0)[2],C_fix(2));}
else{
t2=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_26953,a[2]=((C_word)li385),tmp=(C_word)a,a+=3,tmp);
((C_proc4)(void*)(*((C_word*)t2+1)))(4,t2,((C_word*)t0)[3],((C_word*)t0)[2],C_fix(1));}}

/* f_26953 in k26931 in k26928 in mm:val in k22468 in k18948 in k18945 in k18942 in k18939 in k18528 in k18525 in k18522 in k18519 in k18516 in k17994 in k17991 in k17468 in k17465 in k17462 in k17459 in k17456 in k17453 in k17450 in k17447 in k17444 in k17441 in k17438 in k17435 in k17432 in k17429 in k17426 in k17423 in k17420 in k17417 in k17414 in k17411 in k17408 in k17269 in k17266 in k17263 in k17260 in k17204 in k17201 in k17198 in k17195 in k17192 in k17189 in k17186 in k17183 in k15938 in k15869 in k15676 in k15673 in k15568 in k15517 in k7924 in k7921 in k5905 in k5612 in k5609 in k5605 in k5314 in k5311 in k5308 in k5305 */
static void C_ccall f_26953(C_word c,C_word t0,C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word t6;
C_word *a;
if(c!=4) C_bad_argc_2(c,4,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr4,(void*)f_26953,4,t0,t1,t2,t3);}
t4=(C_truep(t2)?(C_word)C_i_foreign_pointer_argumentp(t2):C_SCHEME_FALSE);
t5=(C_word)C_i_foreign_fixnum_argumentp(t3);
t6=t1;
((C_proc2)(void*)(*((C_word*)t6+1)))(2,t6,(C_word)stub4777(C_SCHEME_UNDEFINED,t4,t5));}

/* f_26937 in k26931 in k26928 in mm:val in k22468 in k18948 in k18945 in k18942 in k18939 in k18528 in k18525 in k18522 in k18519 in k18516 in k17994 in k17991 in k17468 in k17465 in k17462 in k17459 in k17456 in k17453 in k17450 in k17447 in k17444 in k17441 in k17438 in k17435 in k17432 in k17429 in k17426 in k17423 in k17420 in k17417 in k17414 in k17411 in k17408 in k17269 in k17266 in k17263 in k17260 in k17204 in k17201 in k17198 in k17195 in k17192 in k17189 in k17186 in k17183 in k15938 in k15869 in k15676 in k15673 in k15568 in k15517 in k7924 in k7921 in k5905 in k5612 in k5609 in k5605 in k5314 in k5311 in k5308 in k5305 */
static void C_ccall f_26937(C_word c,C_word t0,C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word t6;
C_word *a;
if(c!=4) C_bad_argc_2(c,4,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr4,(void*)f_26937,4,t0,t1,t2,t3);}
t4=(C_truep(t2)?(C_word)C_i_foreign_pointer_argumentp(t2):C_SCHEME_FALSE);
t5=(C_word)C_i_foreign_fixnum_argumentp(t3);
t6=t1;
((C_proc2)(void*)(*((C_word*)t6+1)))(2,t6,(C_word)stub4769(C_SCHEME_UNDEFINED,t4,t5));}

/* mm:vel-set! in k22468 in k18948 in k18945 in k18942 in k18939 in k18528 in k18525 in k18522 in k18519 in k18516 in k17994 in k17991 in k17468 in k17465 in k17462 in k17459 in k17456 in k17453 in k17450 in k17447 in k17444 in k17441 in k17438 in k17435 in k17432 in k17429 in k17426 in k17423 in k17420 in k17417 in k17414 in k17411 in k17408 in k17269 in k17266 in k17263 in k17260 in k17204 in k17201 in k17198 in k17195 in k17192 in k17189 in k17186 in k17183 in k15938 in k15869 in k15676 in k15673 in k15568 in k15517 in k7924 in k7921 in k5905 in k5612 in k5609 in k5605 in k5314 in k5311 in k5308 in k5305 */
static void C_ccall f_26900(C_word c,C_word t0,C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word ab[7],*a=ab;
if(c!=4) C_bad_argc_2(c,4,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr4,(void*)f_26900,4,t0,t1,t2,t3);}
t4=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_26904,a[2]=t3,a[3]=t1,tmp=(C_word)a,a+=4,tmp);
t5=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_26905,a[2]=((C_word)li382),tmp=(C_word)a,a+=3,tmp);
((C_proc5)(void*)(*((C_word*)t5+1)))(5,t5,t4,t2,C_fix(2),t3);}

/* f_26905 in mm:vel-set! in k22468 in k18948 in k18945 in k18942 in k18939 in k18528 in k18525 in k18522 in k18519 in k18516 in k17994 in k17991 in k17468 in k17465 in k17462 in k17459 in k17456 in k17453 in k17450 in k17447 in k17444 in k17441 in k17438 in k17435 in k17432 in k17429 in k17426 in k17423 in k17420 in k17417 in k17414 in k17411 in k17408 in k17269 in k17266 in k17263 in k17260 in k17204 in k17201 in k17198 in k17195 in k17192 in k17189 in k17186 in k17183 in k15938 in k15869 in k15676 in k15673 in k15568 in k15517 in k7924 in k7921 in k5905 in k5612 in k5609 in k5605 in k5314 in k5311 in k5308 in k5305 */
static void C_ccall f_26905(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4){
C_word tmp;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word *a;
if(c!=5) C_bad_argc_2(c,5,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr5,(void*)f_26905,5,t0,t1,t2,t3,t4);}
t5=(C_truep(t2)?(C_word)C_i_foreign_pointer_argumentp(t2):C_SCHEME_FALSE);
t6=(C_word)C_i_foreign_fixnum_argumentp(t3);
t7=(C_word)C_i_foreign_fixnum_argumentp(t4);
t8=t1;
((C_proc2)(void*)(*((C_word*)t8+1)))(2,t8,(C_word)stub4756(C_SCHEME_UNDEFINED,t5,t6,t7));}

/* k26902 in mm:vel-set! in k22468 in k18948 in k18945 in k18942 in k18939 in k18528 in k18525 in k18522 in k18519 in k18516 in k17994 in k17991 in k17468 in k17465 in k17462 in k17459 in k17456 in k17453 in k17450 in k17447 in k17444 in k17441 in k17438 in k17435 in k17432 in k17429 in k17426 in k17423 in k17420 in k17417 in k17414 in k17411 in k17408 in k17269 in k17266 in k17263 in k17260 in k17204 in k17201 in k17198 in k17195 in k17192 in k17189 in k17186 in k17183 in k15938 in k15869 in k15676 in k15673 in k15568 in k15517 in k7924 in k7921 in k5905 in k5612 in k5609 in k5605 in k5314 in k5311 in k5308 in k5305 */
static void C_ccall f_26904(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
t2=((C_word*)t0)[3];
((C_proc2)(void*)(*((C_word*)t2+1)))(2,t2,((C_word*)t0)[2]);}

/* mm:vel in k22468 in k18948 in k18945 in k18942 in k18939 in k18528 in k18525 in k18522 in k18519 in k18516 in k17994 in k17991 in k17468 in k17465 in k17462 in k17459 in k17456 in k17453 in k17450 in k17447 in k17444 in k17441 in k17438 in k17435 in k17432 in k17429 in k17426 in k17423 in k17420 in k17417 in k17414 in k17411 in k17408 in k17269 in k17266 in k17263 in k17260 in k17204 in k17201 in k17198 in k17195 in k17192 in k17189 in k17186 in k17183 in k15938 in k15869 in k15676 in k15673 in k15568 in k15517 in k7924 in k7921 in k5905 in k5612 in k5609 in k5605 in k5314 in k5311 in k5308 in k5305 */
static void C_ccall f_26881(C_word c,C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word ab[3],*a=ab;
if(c!=3) C_bad_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr3,(void*)f_26881,3,t0,t1,t2);}
t3=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_26886,a[2]=((C_word)li380),tmp=(C_word)a,a+=3,tmp);
((C_proc4)(void*)(*((C_word*)t3+1)))(4,t3,t1,t2,C_fix(2));}

/* f_26886 in mm:vel in k22468 in k18948 in k18945 in k18942 in k18939 in k18528 in k18525 in k18522 in k18519 in k18516 in k17994 in k17991 in k17468 in k17465 in k17462 in k17459 in k17456 in k17453 in k17450 in k17447 in k17444 in k17441 in k17438 in k17435 in k17432 in k17429 in k17426 in k17423 in k17420 in k17417 in k17414 in k17411 in k17408 in k17269 in k17266 in k17263 in k17260 in k17204 in k17201 in k17198 in k17195 in k17192 in k17189 in k17186 in k17183 in k15938 in k15869 in k15676 in k15673 in k15568 in k15517 in k7924 in k7921 in k5905 in k5612 in k5609 in k5605 in k5314 in k5311 in k5308 in k5305 */
static void C_ccall f_26886(C_word c,C_word t0,C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word t6;
C_word *a;
if(c!=4) C_bad_argc_2(c,4,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr4,(void*)f_26886,4,t0,t1,t2,t3);}
t4=(C_truep(t2)?(C_word)C_i_foreign_pointer_argumentp(t2):C_SCHEME_FALSE);
t5=(C_word)C_i_foreign_fixnum_argumentp(t3);
t6=t1;
((C_proc2)(void*)(*((C_word*)t6+1)))(2,t6,(C_word)stub4745(C_SCHEME_UNDEFINED,t4,t5));}

/* mm:key-set! in k22468 in k18948 in k18945 in k18942 in k18939 in k18528 in k18525 in k18522 in k18519 in k18516 in k17994 in k17991 in k17468 in k17465 in k17462 in k17459 in k17456 in k17453 in k17450 in k17447 in k17444 in k17441 in k17438 in k17435 in k17432 in k17429 in k17426 in k17423 in k17420 in k17417 in k17414 in k17411 in k17408 in k17269 in k17266 in k17263 in k17260 in k17204 in k17201 in k17198 in k17195 in k17192 in k17189 in k17186 in k17183 in k15938 in k15869 in k15676 in k15673 in k15568 in k15517 in k7924 in k7921 in k5905 in k5612 in k5609 in k5605 in k5314 in k5311 in k5308 in k5305 */
static void C_ccall f_26858(C_word c,C_word t0,C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word ab[7],*a=ab;
if(c!=4) C_bad_argc_2(c,4,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr4,(void*)f_26858,4,t0,t1,t2,t3);}
t4=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_26862,a[2]=t3,a[3]=t1,tmp=(C_word)a,a+=4,tmp);
t5=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_26863,a[2]=((C_word)li378),tmp=(C_word)a,a+=3,tmp);
((C_proc5)(void*)(*((C_word*)t5+1)))(5,t5,t4,t2,C_fix(1),t3);}

/* f_26863 in mm:key-set! in k22468 in k18948 in k18945 in k18942 in k18939 in k18528 in k18525 in k18522 in k18519 in k18516 in k17994 in k17991 in k17468 in k17465 in k17462 in k17459 in k17456 in k17453 in k17450 in k17447 in k17444 in k17441 in k17438 in k17435 in k17432 in k17429 in k17426 in k17423 in k17420 in k17417 in k17414 in k17411 in k17408 in k17269 in k17266 in k17263 in k17260 in k17204 in k17201 in k17198 in k17195 in k17192 in k17189 in k17186 in k17183 in k15938 in k15869 in k15676 in k15673 in k15568 in k15517 in k7924 in k7921 in k5905 in k5612 in k5609 in k5605 in k5314 in k5311 in k5308 in k5305 */
static void C_ccall f_26863(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4){
C_word tmp;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word *a;
if(c!=5) C_bad_argc_2(c,5,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr5,(void*)f_26863,5,t0,t1,t2,t3,t4);}
t5=(C_truep(t2)?(C_word)C_i_foreign_pointer_argumentp(t2):C_SCHEME_FALSE);
t6=(C_word)C_i_foreign_fixnum_argumentp(t3);
t7=(C_word)C_i_foreign_fixnum_argumentp(t4);
t8=t1;
((C_proc2)(void*)(*((C_word*)t8+1)))(2,t8,(C_word)stub4734(C_SCHEME_UNDEFINED,t5,t6,t7));}

/* k26860 in mm:key-set! in k22468 in k18948 in k18945 in k18942 in k18939 in k18528 in k18525 in k18522 in k18519 in k18516 in k17994 in k17991 in k17468 in k17465 in k17462 in k17459 in k17456 in k17453 in k17450 in k17447 in k17444 in k17441 in k17438 in k17435 in k17432 in k17429 in k17426 in k17423 in k17420 in k17417 in k17414 in k17411 in k17408 in k17269 in k17266 in k17263 in k17260 in k17204 in k17201 in k17198 in k17195 in k17192 in k17189 in k17186 in k17183 in k15938 in k15869 in k15676 in k15673 in k15568 in k15517 in k7924 in k7921 in k5905 in k5612 in k5609 in k5605 in k5314 in k5311 in k5308 in k5305 */
static void C_ccall f_26862(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
t2=((C_word*)t0)[3];
((C_proc2)(void*)(*((C_word*)t2+1)))(2,t2,((C_word*)t0)[2]);}

/* mm:key in k22468 in k18948 in k18945 in k18942 in k18939 in k18528 in k18525 in k18522 in k18519 in k18516 in k17994 in k17991 in k17468 in k17465 in k17462 in k17459 in k17456 in k17453 in k17450 in k17447 in k17444 in k17441 in k17438 in k17435 in k17432 in k17429 in k17426 in k17423 in k17420 in k17417 in k17414 in k17411 in k17408 in k17269 in k17266 in k17263 in k17260 in k17204 in k17201 in k17198 in k17195 in k17192 in k17189 in k17186 in k17183 in k15938 in k15869 in k15676 in k15673 in k15568 in k15517 in k7924 in k7921 in k5905 in k5612 in k5609 in k5605 in k5314 in k5311 in k5308 in k5305 */
static void C_ccall f_26839(C_word c,C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word ab[3],*a=ab;
if(c!=3) C_bad_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr3,(void*)f_26839,3,t0,t1,t2);}
t3=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_26844,a[2]=((C_word)li376),tmp=(C_word)a,a+=3,tmp);
((C_proc4)(void*)(*((C_word*)t3+1)))(4,t3,t1,t2,C_fix(1));}

/* f_26844 in mm:key in k22468 in k18948 in k18945 in k18942 in k18939 in k18528 in k18525 in k18522 in k18519 in k18516 in k17994 in k17991 in k17468 in k17465 in k17462 in k17459 in k17456 in k17453 in k17450 in k17447 in k17444 in k17441 in k17438 in k17435 in k17432 in k17429 in k17426 in k17423 in k17420 in k17417 in k17414 in k17411 in k17408 in k17269 in k17266 in k17263 in k17260 in k17204 in k17201 in k17198 in k17195 in k17192 in k17189 in k17186 in k17183 in k15938 in k15869 in k15676 in k15673 in k15568 in k15517 in k7924 in k7921 in k5905 in k5612 in k5609 in k5605 in k5314 in k5311 in k5308 in k5305 */
static void C_ccall f_26844(C_word c,C_word t0,C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word t6;
C_word *a;
if(c!=4) C_bad_argc_2(c,4,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr4,(void*)f_26844,4,t0,t1,t2,t3);}
t4=(C_truep(t2)?(C_word)C_i_foreign_pointer_argumentp(t2):C_SCHEME_FALSE);
t5=(C_word)C_i_foreign_fixnum_argumentp(t3);
t6=t1;
((C_proc2)(void*)(*((C_word*)t6+1)))(2,t6,(C_word)stub4723(C_SCHEME_UNDEFINED,t4,t5));}

/* mm:chan-set! in k22468 in k18948 in k18945 in k18942 in k18939 in k18528 in k18525 in k18522 in k18519 in k18516 in k17994 in k17991 in k17468 in k17465 in k17462 in k17459 in k17456 in k17453 in k17450 in k17447 in k17444 in k17441 in k17438 in k17435 in k17432 in k17429 in k17426 in k17423 in k17420 in k17417 in k17414 in k17411 in k17408 in k17269 in k17266 in k17263 in k17260 in k17204 in k17201 in k17198 in k17195 in k17192 in k17189 in k17186 in k17183 in k15938 in k15869 in k15676 in k15673 in k15568 in k15517 in k7924 in k7921 in k5905 in k5612 in k5609 in k5605 in k5314 in k5311 in k5308 in k5305 */
static void C_ccall f_26820(C_word c,C_word t0,C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word ab[7],*a=ab;
if(c!=4) C_bad_argc_2(c,4,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr4,(void*)f_26820,4,t0,t1,t2,t3);}
t4=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_26824,a[2]=t3,a[3]=t1,tmp=(C_word)a,a+=4,tmp);
t5=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_26825,a[2]=((C_word)li374),tmp=(C_word)a,a+=3,tmp);
((C_proc4)(void*)(*((C_word*)t5+1)))(4,t5,t4,t2,t3);}

/* f_26825 in mm:chan-set! in k22468 in k18948 in k18945 in k18942 in k18939 in k18528 in k18525 in k18522 in k18519 in k18516 in k17994 in k17991 in k17468 in k17465 in k17462 in k17459 in k17456 in k17453 in k17450 in k17447 in k17444 in k17441 in k17438 in k17435 in k17432 in k17429 in k17426 in k17423 in k17420 in k17417 in k17414 in k17411 in k17408 in k17269 in k17266 in k17263 in k17260 in k17204 in k17201 in k17198 in k17195 in k17192 in k17189 in k17186 in k17183 in k15938 in k15869 in k15676 in k15673 in k15568 in k15517 in k7924 in k7921 in k5905 in k5612 in k5609 in k5605 in k5314 in k5311 in k5308 in k5305 */
static void C_ccall f_26825(C_word c,C_word t0,C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word t6;
C_word *a;
if(c!=4) C_bad_argc_2(c,4,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr4,(void*)f_26825,4,t0,t1,t2,t3);}
t4=(C_truep(t2)?(C_word)C_i_foreign_pointer_argumentp(t2):C_SCHEME_FALSE);
t5=(C_word)C_i_foreign_fixnum_argumentp(t3);
t6=t1;
((C_proc2)(void*)(*((C_word*)t6+1)))(2,t6,(C_word)stub4713(C_SCHEME_UNDEFINED,t4,t5));}

/* k26822 in mm:chan-set! in k22468 in k18948 in k18945 in k18942 in k18939 in k18528 in k18525 in k18522 in k18519 in k18516 in k17994 in k17991 in k17468 in k17465 in k17462 in k17459 in k17456 in k17453 in k17450 in k17447 in k17444 in k17441 in k17438 in k17435 in k17432 in k17429 in k17426 in k17423 in k17420 in k17417 in k17414 in k17411 in k17408 in k17269 in k17266 in k17263 in k17260 in k17204 in k17201 in k17198 in k17195 in k17192 in k17189 in k17186 in k17183 in k15938 in k15869 in k15676 in k15673 in k15568 in k15517 in k7924 in k7921 in k5905 in k5612 in k5609 in k5605 in k5314 in k5311 in k5308 in k5305 */
static void C_ccall f_26824(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
t2=((C_word*)t0)[3];
((C_proc2)(void*)(*((C_word*)t2+1)))(2,t2,((C_word*)t0)[2]);}

/* mm:chan in k22468 in k18948 in k18945 in k18942 in k18939 in k18528 in k18525 in k18522 in k18519 in k18516 in k17994 in k17991 in k17468 in k17465 in k17462 in k17459 in k17456 in k17453 in k17450 in k17447 in k17444 in k17441 in k17438 in k17435 in k17432 in k17429 in k17426 in k17423 in k17420 in k17417 in k17414 in k17411 in k17408 in k17269 in k17266 in k17263 in k17260 in k17204 in k17201 in k17198 in k17195 in k17192 in k17189 in k17186 in k17183 in k15938 in k15869 in k15676 in k15673 in k15568 in k15517 in k7924 in k7921 in k5905 in k5612 in k5609 in k5605 in k5314 in k5311 in k5308 in k5305 */
static void C_ccall f_26805(C_word c,C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word ab[3],*a=ab;
if(c!=3) C_bad_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr3,(void*)f_26805,3,t0,t1,t2);}
t3=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_26810,a[2]=((C_word)li372),tmp=(C_word)a,a+=3,tmp);
((C_proc3)(void*)(*((C_word*)t3+1)))(3,t3,t1,t2);}

/* f_26810 in mm:chan in k22468 in k18948 in k18945 in k18942 in k18939 in k18528 in k18525 in k18522 in k18519 in k18516 in k17994 in k17991 in k17468 in k17465 in k17462 in k17459 in k17456 in k17453 in k17450 in k17447 in k17444 in k17441 in k17438 in k17435 in k17432 in k17429 in k17426 in k17423 in k17420 in k17417 in k17414 in k17411 in k17408 in k17269 in k17266 in k17263 in k17260 in k17204 in k17201 in k17198 in k17195 in k17192 in k17189 in k17186 in k17183 in k15938 in k15869 in k15676 in k15673 in k15568 in k15517 in k7924 in k7921 in k5905 in k5612 in k5609 in k5605 in k5314 in k5311 in k5308 in k5305 */
static void C_ccall f_26810(C_word c,C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word *a;
if(c!=3) C_bad_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr3,(void*)f_26810,3,t0,t1,t2);}
t3=(C_truep(t2)?(C_word)C_i_foreign_pointer_argumentp(t2):C_SCHEME_FALSE);
t4=t1;
((C_proc2)(void*)(*((C_word*)t4+1)))(2,t4,(C_word)stub4704(C_SCHEME_UNDEFINED,t3));}

/* mm:time-set! in k22468 in k18948 in k18945 in k18942 in k18939 in k18528 in k18525 in k18522 in k18519 in k18516 in k17994 in k17991 in k17468 in k17465 in k17462 in k17459 in k17456 in k17453 in k17450 in k17447 in k17444 in k17441 in k17438 in k17435 in k17432 in k17429 in k17426 in k17423 in k17420 in k17417 in k17414 in k17411 in k17408 in k17269 in k17266 in k17263 in k17260 in k17204 in k17201 in k17198 in k17195 in k17192 in k17189 in k17186 in k17183 in k15938 in k15869 in k15676 in k15673 in k15568 in k15517 in k7924 in k7921 in k5905 in k5612 in k5609 in k5605 in k5314 in k5311 in k5308 in k5305 */
static void C_ccall f_26786(C_word c,C_word t0,C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word ab[7],*a=ab;
if(c!=4) C_bad_argc_2(c,4,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr4,(void*)f_26786,4,t0,t1,t2,t3);}
t4=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_26790,a[2]=t3,a[3]=t1,tmp=(C_word)a,a+=4,tmp);
t5=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_26791,a[2]=((C_word)li370),tmp=(C_word)a,a+=3,tmp);
((C_proc4)(void*)(*((C_word*)t5+1)))(4,t5,t4,t2,t3);}

/* f_26791 in mm:time-set! in k22468 in k18948 in k18945 in k18942 in k18939 in k18528 in k18525 in k18522 in k18519 in k18516 in k17994 in k17991 in k17468 in k17465 in k17462 in k17459 in k17456 in k17453 in k17450 in k17447 in k17444 in k17441 in k17438 in k17435 in k17432 in k17429 in k17426 in k17423 in k17420 in k17417 in k17414 in k17411 in k17408 in k17269 in k17266 in k17263 in k17260 in k17204 in k17201 in k17198 in k17195 in k17192 in k17189 in k17186 in k17183 in k15938 in k15869 in k15676 in k15673 in k15568 in k15517 in k7924 in k7921 in k5905 in k5612 in k5609 in k5605 in k5314 in k5311 in k5308 in k5305 */
static void C_ccall f_26791(C_word c,C_word t0,C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word t6;
C_word *a;
if(c!=4) C_bad_argc_2(c,4,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr4,(void*)f_26791,4,t0,t1,t2,t3);}
t4=(C_truep(t2)?(C_word)C_i_foreign_pointer_argumentp(t2):C_SCHEME_FALSE);
t5=(C_word)C_i_foreign_flonum_argumentp(t3);
t6=t1;
((C_proc2)(void*)(*((C_word*)t6+1)))(2,t6,(C_word)stub4695(C_SCHEME_UNDEFINED,t4,t5));}

/* k26788 in mm:time-set! in k22468 in k18948 in k18945 in k18942 in k18939 in k18528 in k18525 in k18522 in k18519 in k18516 in k17994 in k17991 in k17468 in k17465 in k17462 in k17459 in k17456 in k17453 in k17450 in k17447 in k17444 in k17441 in k17438 in k17435 in k17432 in k17429 in k17426 in k17423 in k17420 in k17417 in k17414 in k17411 in k17408 in k17269 in k17266 in k17263 in k17260 in k17204 in k17201 in k17198 in k17195 in k17192 in k17189 in k17186 in k17183 in k15938 in k15869 in k15676 in k15673 in k15568 in k15517 in k7924 in k7921 in k5905 in k5612 in k5609 in k5605 in k5314 in k5311 in k5308 in k5305 */
static void C_ccall f_26790(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
t2=((C_word*)t0)[3];
((C_proc2)(void*)(*((C_word*)t2+1)))(2,t2,((C_word*)t0)[2]);}

/* mm:time in k22468 in k18948 in k18945 in k18942 in k18939 in k18528 in k18525 in k18522 in k18519 in k18516 in k17994 in k17991 in k17468 in k17465 in k17462 in k17459 in k17456 in k17453 in k17450 in k17447 in k17444 in k17441 in k17438 in k17435 in k17432 in k17429 in k17426 in k17423 in k17420 in k17417 in k17414 in k17411 in k17408 in k17269 in k17266 in k17263 in k17260 in k17204 in k17201 in k17198 in k17195 in k17192 in k17189 in k17186 in k17183 in k15938 in k15869 in k15676 in k15673 in k15568 in k15517 in k7924 in k7921 in k5905 in k5612 in k5609 in k5605 in k5314 in k5311 in k5308 in k5305 */
static void C_ccall f_26771(C_word c,C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word ab[3],*a=ab;
if(c!=3) C_bad_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr3,(void*)f_26771,3,t0,t1,t2);}
t3=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_26776,a[2]=((C_word)li368),tmp=(C_word)a,a+=3,tmp);
((C_proc3)(void*)(*((C_word*)t3+1)))(3,t3,t1,t2);}

/* f_26776 in mm:time in k22468 in k18948 in k18945 in k18942 in k18939 in k18528 in k18525 in k18522 in k18519 in k18516 in k17994 in k17991 in k17468 in k17465 in k17462 in k17459 in k17456 in k17453 in k17450 in k17447 in k17444 in k17441 in k17438 in k17435 in k17432 in k17429 in k17426 in k17423 in k17420 in k17417 in k17414 in k17411 in k17408 in k17269 in k17266 in k17263 in k17260 in k17204 in k17201 in k17198 in k17195 in k17192 in k17189 in k17186 in k17183 in k15938 in k15869 in k15676 in k15673 in k15568 in k15517 in k7924 in k7921 in k5905 in k5612 in k5609 in k5605 in k5314 in k5311 in k5308 in k5305 */
static void C_ccall f_26776(C_word c,C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word t5;
C_word ab[6],*a=ab;
if(c!=3) C_bad_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr3,(void*)f_26776,3,t0,t1,t2);}
t3=(C_word)C_a_i_bytevector(&a,1,C_fix(4));
t4=(C_truep(t2)?(C_word)C_i_foreign_pointer_argumentp(t2):C_SCHEME_FALSE);
t5=t1;
((C_proc2)(void*)(*((C_word*)t5+1)))(2,t5,(C_word)stub4685(t3,t4));}

/* mm:copy in k22468 in k18948 in k18945 in k18942 in k18939 in k18528 in k18525 in k18522 in k18519 in k18516 in k17994 in k17991 in k17468 in k17465 in k17462 in k17459 in k17456 in k17453 in k17450 in k17447 in k17444 in k17441 in k17438 in k17435 in k17432 in k17429 in k17426 in k17423 in k17420 in k17417 in k17414 in k17411 in k17408 in k17269 in k17266 in k17263 in k17260 in k17204 in k17201 in k17198 in k17195 in k17192 in k17189 in k17186 in k17183 in k15938 in k15869 in k15676 in k15673 in k15568 in k15517 in k7924 in k7921 in k5905 in k5612 in k5609 in k5605 in k5314 in k5311 in k5308 in k5305 */
static void C_ccall f_26756(C_word c,C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word ab[3],*a=ab;
if(c!=3) C_bad_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr3,(void*)f_26756,3,t0,t1,t2);}
t3=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_26761,a[2]=((C_word)li366),tmp=(C_word)a,a+=3,tmp);
((C_proc3)(void*)(*((C_word*)t3+1)))(3,t3,t1,t2);}

/* f_26761 in mm:copy in k22468 in k18948 in k18945 in k18942 in k18939 in k18528 in k18525 in k18522 in k18519 in k18516 in k17994 in k17991 in k17468 in k17465 in k17462 in k17459 in k17456 in k17453 in k17450 in k17447 in k17444 in k17441 in k17438 in k17435 in k17432 in k17429 in k17426 in k17423 in k17420 in k17417 in k17414 in k17411 in k17408 in k17269 in k17266 in k17263 in k17260 in k17204 in k17201 in k17198 in k17195 in k17192 in k17189 in k17186 in k17183 in k15938 in k15869 in k15676 in k15673 in k15568 in k15517 in k7924 in k7921 in k5905 in k5612 in k5609 in k5605 in k5314 in k5311 in k5308 in k5305 */
static void C_ccall f_26761(C_word c,C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word t5;
C_word ab[5],*a=ab;
if(c!=3) C_bad_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr3,(void*)f_26761,3,t0,t1,t2);}
t3=(C_word)C_a_i_bytevector(&a,1,C_fix(3));
t4=(C_truep(t2)?(C_word)C_i_foreign_pointer_argumentp(t2):C_SCHEME_FALSE);
t5=t1;
((C_proc2)(void*)(*((C_word*)t5+1)))(2,t5,(C_word)stub4677(t3,t4));}

/* mm:free in k22468 in k18948 in k18945 in k18942 in k18939 in k18528 in k18525 in k18522 in k18519 in k18516 in k17994 in k17991 in k17468 in k17465 in k17462 in k17459 in k17456 in k17453 in k17450 in k17447 in k17444 in k17441 in k17438 in k17435 in k17432 in k17429 in k17426 in k17423 in k17420 in k17417 in k17414 in k17411 in k17408 in k17269 in k17266 in k17263 in k17260 in k17204 in k17201 in k17198 in k17195 in k17192 in k17189 in k17186 in k17183 in k15938 in k15869 in k15676 in k15673 in k15568 in k15517 in k7924 in k7921 in k5905 in k5612 in k5609 in k5605 in k5314 in k5311 in k5308 in k5305 */
static void C_ccall f_26738(C_word c,C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word ab[6],*a=ab;
if(c!=3) C_bad_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr3,(void*)f_26738,3,t0,t1,t2);}
t3=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_26742,a[2]=t1,tmp=(C_word)a,a+=3,tmp);
t4=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_26746,a[2]=((C_word)li364),tmp=(C_word)a,a+=3,tmp);
((C_proc3)(void*)(*((C_word*)t4+1)))(3,t4,t3,t2);}

/* f_26746 in mm:free in k22468 in k18948 in k18945 in k18942 in k18939 in k18528 in k18525 in k18522 in k18519 in k18516 in k17994 in k17991 in k17468 in k17465 in k17462 in k17459 in k17456 in k17453 in k17450 in k17447 in k17444 in k17441 in k17438 in k17435 in k17432 in k17429 in k17426 in k17423 in k17420 in k17417 in k17414 in k17411 in k17408 in k17269 in k17266 in k17263 in k17260 in k17204 in k17201 in k17198 in k17195 in k17192 in k17189 in k17186 in k17183 in k15938 in k15869 in k15676 in k15673 in k15568 in k15517 in k7924 in k7921 in k5905 in k5612 in k5609 in k5605 in k5314 in k5311 in k5308 in k5305 */
static void C_ccall f_26746(C_word c,C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word *a;
if(c!=3) C_bad_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr3,(void*)f_26746,3,t0,t1,t2);}
t3=(C_truep(t2)?(C_word)C_i_foreign_pointer_argumentp(t2):C_SCHEME_FALSE);
t4=t1;
((C_proc2)(void*)(*((C_word*)t4+1)))(2,t4,(C_word)stub4669(C_SCHEME_UNDEFINED,t3));}

/* k26740 in mm:free in k22468 in k18948 in k18945 in k18942 in k18939 in k18528 in k18525 in k18522 in k18519 in k18516 in k17994 in k17991 in k17468 in k17465 in k17462 in k17459 in k17456 in k17453 in k17450 in k17447 in k17444 in k17441 in k17438 in k17435 in k17432 in k17429 in k17426 in k17423 in k17420 in k17417 in k17414 in k17411 in k17408 in k17269 in k17266 in k17263 in k17260 in k17204 in k17201 in k17198 in k17195 in k17192 in k17189 in k17186 in k17183 in k15938 in k15869 in k15676 in k15673 in k15568 in k15517 in k7924 in k7921 in k5905 in k5612 in k5609 in k5605 in k5314 in k5311 in k5308 in k5305 */
static void C_ccall f_26742(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 371  values");
C_values(2,0,((C_word*)t0)[2]);}

/* mm:make-bend in k22468 in k18948 in k18945 in k18942 in k18939 in k18528 in k18525 in k18522 in k18519 in k18516 in k17994 in k17991 in k17468 in k17465 in k17462 in k17459 in k17456 in k17453 in k17450 in k17447 in k17444 in k17441 in k17438 in k17435 in k17432 in k17429 in k17426 in k17423 in k17420 in k17417 in k17414 in k17411 in k17408 in k17269 in k17266 in k17263 in k17260 in k17204 in k17201 in k17198 in k17195 in k17192 in k17189 in k17186 in k17183 in k15938 in k15869 in k15676 in k15673 in k15568 in k15517 in k7924 in k7921 in k5905 in k5612 in k5609 in k5605 in k5314 in k5311 in k5308 in k5305 */
static void C_ccall f_26268(C_word c,C_word t0,C_word t1,...){
C_word tmp;
C_word t2;
va_list v;
C_word *a,c2=c;
C_save_rest(t1,c2,2);
C_check_for_interrupt;
if(!C_demand(c*C_SIZEOF_PAIR+58)){
C_save_and_reclaim((void*)tr2r,(void*)f_26268r,2,t0,t1);}
else{
a=C_alloc((c-2)*3);
t2=C_restore_rest(a,C_rest_count(0));
f_26268r(t0,t1,t2);}}

static void C_ccall f_26268r(C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word t14;
C_word t15;
C_word t16;
C_word t17;
C_word t18;
C_word t19;
C_word t20;
C_word t21;
C_word t22;
C_word t23;
C_word t24;
C_word t25;
C_word t26;
C_word t27;
C_word t28;
C_word *a=C_alloc(58);
t3=C_fix(0);
t4=(*a=C_VECTOR_TYPE|1,a[1]=t3,tmp=(C_word)a,a+=2,tmp);
t5=C_fix(8192);
t6=(*a=C_VECTOR_TYPE|1,a[1]=t5,tmp=(C_word)a,a+=2,tmp);
t7=C_fix(0);
t8=(*a=C_VECTOR_TYPE|1,a[1]=t7,tmp=(C_word)a,a+=2,tmp);
t9=C_SCHEME_FALSE;
t10=(*a=C_VECTOR_TYPE|1,a[1]=t9,tmp=(C_word)a,a+=2,tmp);
t11=C_SCHEME_FALSE;
t12=(*a=C_VECTOR_TYPE|1,a[1]=t11,tmp=(C_word)a,a+=2,tmp);
t13=C_SCHEME_FALSE;
t14=(*a=C_VECTOR_TYPE|1,a[1]=t13,tmp=(C_word)a,a+=2,tmp);
t15=t2;
t16=(*a=C_VECTOR_TYPE|1,a[1]=t15,tmp=(C_word)a,a+=2,tmp);
t17=C_SCHEME_FALSE;
t18=(*a=C_VECTOR_TYPE|1,a[1]=t17,tmp=(C_word)a,a+=2,tmp);
t19=(*a=C_CLOSURE_TYPE|11,a[1]=(C_word)f_26272,a[2]=t14,a[3]=t12,a[4]=t18,a[5]=t10,a[6]=t2,a[7]=t16,a[8]=t6,a[9]=t8,a[10]=t4,a[11]=t1,tmp=(C_word)a,a+=12,tmp);
if(C_truep((C_word)C_i_nullp(((C_word*)t16)[1]))){
t20=t19;
f_26272(t20,C_SCHEME_UNDEFINED);}
else{
t20=(C_word)C_i_car(((C_word*)t16)[1]);
t21=(C_word)C_eqp(t20,lf[577]);
if(C_truep(t21)){
t22=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_26597,a[2]=t2,a[3]=t19,a[4]=t16,a[5]=t18,a[6]=t10,a[7]=t4,tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)t10)[1])){
C_trace("error");
t23=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t23))(4,t23,t22,lf[19],lf[577]);}
else{
t23=t22;
f_26597(2,t23,C_SCHEME_UNDEFINED);}}
else{
t22=(C_word)C_eqp(t20,lf[585]);
if(C_truep(t22)){
t23=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_26632,a[2]=t2,a[3]=t19,a[4]=t16,a[5]=t18,a[6]=t12,a[7]=t6,tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)t12)[1])){
C_trace("error");
t24=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t24))(4,t24,t23,lf[19],lf[585]);}
else{
t24=t23;
f_26632(2,t24,C_SCHEME_UNDEFINED);}}
else{
t23=(C_word)C_eqp(t20,lf[580]);
if(C_truep(t23)){
t24=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_26667,a[2]=t2,a[3]=t19,a[4]=t16,a[5]=t18,a[6]=t14,a[7]=t8,tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)t14)[1])){
C_trace("error");
t25=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t25))(4,t25,t24,lf[19],lf[580]);}
else{
t25=t24;
f_26667(2,t25,C_SCHEME_UNDEFINED);}}
else{
t24=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_26696,a[2]=t19,a[3]=t10,a[4]=t4,a[5]=t16,tmp=(C_word)a,a+=6,tmp);
if(C_truep(((C_word*)t18)[1])){
C_trace("error");
t25=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t25))(4,t25,t24,lf[10],t2);}
else{
t25=t24;
f_26696(2,t25,C_SCHEME_UNDEFINED);}}}}}}

/* k26694 in mm:make-bend in k22468 in k18948 in k18945 in k18942 in k18939 in k18528 in k18525 in k18522 in k18519 in k18516 in k17994 in k17991 in k17468 in k17465 in k17462 in k17459 in k17456 in k17453 in k17450 in k17447 in k17444 in k17441 in k17438 in k17435 in k17432 in k17429 in k17426 in k17423 in k17420 in k17417 in k17414 in k17411 in k17408 in k17269 in k17266 in k17263 in k17260 in k17204 in k17201 in k17198 in k17195 in k17192 in k17189 in k17186 in k17183 in k15938 in k15869 in k15676 in k15673 in k15568 in k15517 in k7924 in k7921 in k5905 in k5612 in k5609 in k5605 in k5314 in k5311 in k5308 in k5305 */
static void C_ccall f_26696(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_26696,2,t0,t1);}
t2=(C_word)C_i_car(((C_word*)((C_word*)t0)[5])[1]);
t3=C_mutate(((C_word *)((C_word*)t0)[4])+1,t2);
t4=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_26703,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[5],a[4]=((C_word*)t0)[3],tmp=(C_word)a,a+=5,tmp);
t5=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_26711,a[2]=((C_word*)t0)[4],a[3]=t4,tmp=(C_word)a,a+=4,tmp);
C_trace("keyword?");
t6=C_retrieve(lf[13]);
((C_proc3)C_retrieve_proc(t6))(3,t6,t5,((C_word*)((C_word*)t0)[4])[1]);}

/* k26709 in k26694 in mm:make-bend in k22468 in k18948 in k18945 in k18942 in k18939 in k18528 in k18525 in k18522 in k18519 in k18516 in k17994 in k17991 in k17468 in k17465 in k17462 in k17459 in k17456 in k17453 in k17450 in k17447 in k17444 in k17441 in k17438 in k17435 in k17432 in k17429 in k17426 in k17423 in k17420 in k17417 in k17414 in k17411 in k17408 in k17269 in k17266 in k17263 in k17260 in k17204 in k17201 in k17198 in k17195 in k17192 in k17189 in k17186 in k17183 in k15938 in k15869 in k15676 in k15673 in k15568 in k15517 in k7924 in k7921 in k5905 in k5612 in k5609 in k5605 in k5314 in k5311 in k5308 in k5305 */
static void C_ccall f_26711(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
if(C_truep(t1)){
C_trace("error");
t2=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t2))(4,t2,((C_word*)t0)[3],lf[14],((C_word*)((C_word*)t0)[2])[1]);}
else{
t2=((C_word*)t0)[3];
f_26703(2,t2,C_SCHEME_UNDEFINED);}}

/* k26701 in k26694 in mm:make-bend in k22468 in k18948 in k18945 in k18942 in k18939 in k18528 in k18525 in k18522 in k18519 in k18516 in k17994 in k17991 in k17468 in k17465 in k17462 in k17459 in k17456 in k17453 in k17450 in k17447 in k17444 in k17441 in k17438 in k17435 in k17432 in k17429 in k17426 in k17423 in k17420 in k17417 in k17414 in k17411 in k17408 in k17269 in k17266 in k17263 in k17260 in k17204 in k17201 in k17198 in k17195 in k17192 in k17189 in k17186 in k17183 in k15938 in k15869 in k15676 in k15673 in k15568 in k15517 in k7924 in k7921 in k5905 in k5612 in k5609 in k5605 in k5314 in k5311 in k5308 in k5305 */
static void C_ccall f_26703(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word *a;
t2=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[3])[1]);
t4=C_mutate(((C_word *)((C_word*)t0)[3])+1,t3);
t5=((C_word*)t0)[2];
f_26272(t5,t4);}

/* k26665 in mm:make-bend in k22468 in k18948 in k18945 in k18942 in k18939 in k18528 in k18525 in k18522 in k18519 in k18516 in k17994 in k17991 in k17468 in k17465 in k17462 in k17459 in k17456 in k17453 in k17450 in k17447 in k17444 in k17441 in k17438 in k17435 in k17432 in k17429 in k17426 in k17423 in k17420 in k17417 in k17414 in k17411 in k17408 in k17269 in k17266 in k17263 in k17260 in k17204 in k17201 in k17198 in k17195 in k17192 in k17189 in k17186 in k17183 in k15938 in k15869 in k15676 in k15673 in k15568 in k15517 in k7924 in k7921 in k5905 in k5612 in k5609 in k5605 in k5314 in k5311 in k5308 in k5305 */
static void C_ccall f_26667(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_26667,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_26671,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("error");
t4=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[21],((C_word*)t0)[2]);}
else{
t4=t2;
f_26671(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k26669 in k26665 in mm:make-bend in k22468 in k18948 in k18945 in k18942 in k18939 in k18528 in k18525 in k18522 in k18519 in k18516 in k17994 in k17991 in k17468 in k17465 in k17462 in k17459 in k17456 in k17453 in k17450 in k17447 in k17444 in k17441 in k17438 in k17435 in k17432 in k17429 in k17426 in k17423 in k17420 in k17417 in k17414 in k17411 in k17408 in k17269 in k17266 in k17263 in k17260 in k17204 in k17201 in k17198 in k17195 in k17192 in k17189 in k17186 in k17183 in k15938 in k15869 in k15676 in k15673 in k15568 in k15517 in k7924 in k7921 in k5905 in k5612 in k5609 in k5605 in k5314 in k5311 in k5308 in k5305 */
static void C_ccall f_26671(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_26272(t7,t6);}

/* k26630 in mm:make-bend in k22468 in k18948 in k18945 in k18942 in k18939 in k18528 in k18525 in k18522 in k18519 in k18516 in k17994 in k17991 in k17468 in k17465 in k17462 in k17459 in k17456 in k17453 in k17450 in k17447 in k17444 in k17441 in k17438 in k17435 in k17432 in k17429 in k17426 in k17423 in k17420 in k17417 in k17414 in k17411 in k17408 in k17269 in k17266 in k17263 in k17260 in k17204 in k17201 in k17198 in k17195 in k17192 in k17189 in k17186 in k17183 in k15938 in k15869 in k15676 in k15673 in k15568 in k15517 in k7924 in k7921 in k5905 in k5612 in k5609 in k5605 in k5314 in k5311 in k5308 in k5305 */
static void C_ccall f_26632(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_26632,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_26636,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("error");
t4=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[21],((C_word*)t0)[2]);}
else{
t4=t2;
f_26636(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k26634 in k26630 in mm:make-bend in k22468 in k18948 in k18945 in k18942 in k18939 in k18528 in k18525 in k18522 in k18519 in k18516 in k17994 in k17991 in k17468 in k17465 in k17462 in k17459 in k17456 in k17453 in k17450 in k17447 in k17444 in k17441 in k17438 in k17435 in k17432 in k17429 in k17426 in k17423 in k17420 in k17417 in k17414 in k17411 in k17408 in k17269 in k17266 in k17263 in k17260 in k17204 in k17201 in k17198 in k17195 in k17192 in k17189 in k17186 in k17183 in k15938 in k15869 in k15676 in k15673 in k15568 in k15517 in k7924 in k7921 in k5905 in k5612 in k5609 in k5605 in k5314 in k5311 in k5308 in k5305 */
static void C_ccall f_26636(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_26272(t7,t6);}

/* k26595 in mm:make-bend in k22468 in k18948 in k18945 in k18942 in k18939 in k18528 in k18525 in k18522 in k18519 in k18516 in k17994 in k17991 in k17468 in k17465 in k17462 in k17459 in k17456 in k17453 in k17450 in k17447 in k17444 in k17441 in k17438 in k17435 in k17432 in k17429 in k17426 in k17423 in k17420 in k17417 in k17414 in k17411 in k17408 in k17269 in k17266 in k17263 in k17260 in k17204 in k17201 in k17198 in k17195 in k17192 in k17189 in k17186 in k17183 in k15938 in k15869 in k15676 in k15673 in k15568 in k15517 in k7924 in k7921 in k5905 in k5612 in k5609 in k5605 in k5314 in k5311 in k5308 in k5305 */
static void C_ccall f_26597(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_26597,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_26601,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("error");
t4=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[21],((C_word*)t0)[2]);}
else{
t4=t2;
f_26601(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k26599 in k26595 in mm:make-bend in k22468 in k18948 in k18945 in k18942 in k18939 in k18528 in k18525 in k18522 in k18519 in k18516 in k17994 in k17991 in k17468 in k17465 in k17462 in k17459 in k17456 in k17453 in k17450 in k17447 in k17444 in k17441 in k17438 in k17435 in k17432 in k17429 in k17426 in k17423 in k17420 in k17417 in k17414 in k17411 in k17408 in k17269 in k17266 in k17263 in k17260 in k17204 in k17201 in k17198 in k17195 in k17192 in k17189 in k17186 in k17183 in k15938 in k15869 in k15676 in k15673 in k15568 in k15517 in k7924 in k7921 in k5905 in k5612 in k5609 in k5605 in k5314 in k5311 in k5308 in k5305 */
static void C_ccall f_26601(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_26272(t7,t6);}

/* k26270 in mm:make-bend in k22468 in k18948 in k18945 in k18942 in k18939 in k18528 in k18525 in k18522 in k18519 in k18516 in k17994 in k17991 in k17468 in k17465 in k17462 in k17459 in k17456 in k17453 in k17450 in k17447 in k17444 in k17441 in k17438 in k17435 in k17432 in k17429 in k17426 in k17423 in k17420 in k17417 in k17414 in k17411 in k17408 in k17269 in k17266 in k17263 in k17260 in k17204 in k17201 in k17198 in k17195 in k17192 in k17189 in k17186 in k17183 in k15938 in k15869 in k15676 in k15673 in k15568 in k15517 in k7924 in k7921 in k5905 in k5612 in k5609 in k5605 in k5314 in k5311 in k5308 in k5305 */
static void C_fcall f_26272(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word ab[42],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_26272,NULL,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|11,a[1]=(C_word)f_26275,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],a[7]=((C_word*)t0)[7],a[8]=((C_word*)t0)[8],a[9]=((C_word*)t0)[9],a[10]=((C_word*)t0)[10],a[11]=((C_word*)t0)[11],tmp=(C_word)a,a+=12,tmp);
if(C_truep((C_word)C_i_nullp(((C_word*)((C_word*)t0)[7])[1]))){
t3=t2;
f_26275(t3,C_SCHEME_UNDEFINED);}
else{
t3=(C_word)C_i_car(((C_word*)((C_word*)t0)[7])[1]);
t4=(C_word)C_eqp(t3,lf[577]);
if(C_truep(t4)){
t5=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_26462,a[2]=((C_word*)t0)[6],a[3]=t2,a[4]=((C_word*)t0)[7],a[5]=((C_word*)t0)[4],a[6]=((C_word*)t0)[5],a[7]=((C_word*)t0)[10],tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)((C_word*)t0)[5])[1])){
C_trace("error");
t6=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t6))(4,t6,t5,lf[19],lf[577]);}
else{
t6=t5;
f_26462(2,t6,C_SCHEME_UNDEFINED);}}
else{
t5=(C_word)C_eqp(t3,lf[585]);
if(C_truep(t5)){
t6=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_26497,a[2]=((C_word*)t0)[6],a[3]=t2,a[4]=((C_word*)t0)[7],a[5]=((C_word*)t0)[4],a[6]=((C_word*)t0)[3],a[7]=((C_word*)t0)[8],tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)((C_word*)t0)[3])[1])){
C_trace("error");
t7=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t7))(4,t7,t6,lf[19],lf[585]);}
else{
t7=t6;
f_26497(2,t7,C_SCHEME_UNDEFINED);}}
else{
t6=(C_word)C_eqp(t3,lf[580]);
if(C_truep(t6)){
t7=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_26532,a[2]=((C_word*)t0)[6],a[3]=t2,a[4]=((C_word*)t0)[7],a[5]=((C_word*)t0)[4],a[6]=((C_word*)t0)[2],a[7]=((C_word*)t0)[9],tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)((C_word*)t0)[2])[1])){
C_trace("error");
t8=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t8))(4,t8,t7,lf[19],lf[580]);}
else{
t8=t7;
f_26532(2,t8,C_SCHEME_UNDEFINED);}}
else{
t7=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_26561,a[2]=t2,a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[8],a[5]=((C_word*)t0)[7],tmp=(C_word)a,a+=6,tmp);
if(C_truep(((C_word*)((C_word*)t0)[4])[1])){
C_trace("error");
t8=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t8))(4,t8,t7,lf[10],((C_word*)t0)[6]);}
else{
t8=t7;
f_26561(2,t8,C_SCHEME_UNDEFINED);}}}}}}

/* k26559 in k26270 in mm:make-bend in k22468 in k18948 in k18945 in k18942 in k18939 in k18528 in k18525 in k18522 in k18519 in k18516 in k17994 in k17991 in k17468 in k17465 in k17462 in k17459 in k17456 in k17453 in k17450 in k17447 in k17444 in k17441 in k17438 in k17435 in k17432 in k17429 in k17426 in k17423 in k17420 in k17417 in k17414 in k17411 in k17408 in k17269 in k17266 in k17263 in k17260 in k17204 in k17201 in k17198 in k17195 in k17192 in k17189 in k17186 in k17183 in k15938 in k15869 in k15676 in k15673 in k15568 in k15517 in k7924 in k7921 in k5905 in k5612 in k5609 in k5605 in k5314 in k5311 in k5308 in k5305 */
static void C_ccall f_26561(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_26561,2,t0,t1);}
t2=(C_word)C_i_car(((C_word*)((C_word*)t0)[5])[1]);
t3=C_mutate(((C_word *)((C_word*)t0)[4])+1,t2);
t4=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_26568,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[5],a[4]=((C_word*)t0)[3],tmp=(C_word)a,a+=5,tmp);
t5=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_26576,a[2]=((C_word*)t0)[4],a[3]=t4,tmp=(C_word)a,a+=4,tmp);
C_trace("keyword?");
t6=C_retrieve(lf[13]);
((C_proc3)C_retrieve_proc(t6))(3,t6,t5,((C_word*)((C_word*)t0)[4])[1]);}

/* k26574 in k26559 in k26270 in mm:make-bend in k22468 in k18948 in k18945 in k18942 in k18939 in k18528 in k18525 in k18522 in k18519 in k18516 in k17994 in k17991 in k17468 in k17465 in k17462 in k17459 in k17456 in k17453 in k17450 in k17447 in k17444 in k17441 in k17438 in k17435 in k17432 in k17429 in k17426 in k17423 in k17420 in k17417 in k17414 in k17411 in k17408 in k17269 in k17266 in k17263 in k17260 in k17204 in k17201 in k17198 in k17195 in k17192 in k17189 in k17186 in k17183 in k15938 in k15869 in k15676 in k15673 in k15568 in k15517 in k7924 in k7921 in k5905 in k5612 in k5609 in k5605 in k5314 in k5311 in k5308 in k5305 */
static void C_ccall f_26576(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
if(C_truep(t1)){
C_trace("error");
t2=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t2))(4,t2,((C_word*)t0)[3],lf[14],((C_word*)((C_word*)t0)[2])[1]);}
else{
t2=((C_word*)t0)[3];
f_26568(2,t2,C_SCHEME_UNDEFINED);}}

/* k26566 in k26559 in k26270 in mm:make-bend in k22468 in k18948 in k18945 in k18942 in k18939 in k18528 in k18525 in k18522 in k18519 in k18516 in k17994 in k17991 in k17468 in k17465 in k17462 in k17459 in k17456 in k17453 in k17450 in k17447 in k17444 in k17441 in k17438 in k17435 in k17432 in k17429 in k17426 in k17423 in k17420 in k17417 in k17414 in k17411 in k17408 in k17269 in k17266 in k17263 in k17260 in k17204 in k17201 in k17198 in k17195 in k17192 in k17189 in k17186 in k17183 in k15938 in k15869 in k15676 in k15673 in k15568 in k15517 in k7924 in k7921 in k5905 in k5612 in k5609 in k5605 in k5314 in k5311 in k5308 in k5305 */
static void C_ccall f_26568(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word *a;
t2=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[3])[1]);
t4=C_mutate(((C_word *)((C_word*)t0)[3])+1,t3);
t5=((C_word*)t0)[2];
f_26275(t5,t4);}

/* k26530 in k26270 in mm:make-bend in k22468 in k18948 in k18945 in k18942 in k18939 in k18528 in k18525 in k18522 in k18519 in k18516 in k17994 in k17991 in k17468 in k17465 in k17462 in k17459 in k17456 in k17453 in k17450 in k17447 in k17444 in k17441 in k17438 in k17435 in k17432 in k17429 in k17426 in k17423 in k17420 in k17417 in k17414 in k17411 in k17408 in k17269 in k17266 in k17263 in k17260 in k17204 in k17201 in k17198 in k17195 in k17192 in k17189 in k17186 in k17183 in k15938 in k15869 in k15676 in k15673 in k15568 in k15517 in k7924 in k7921 in k5905 in k5612 in k5609 in k5605 in k5314 in k5311 in k5308 in k5305 */
static void C_ccall f_26532(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_26532,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_26536,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("error");
t4=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[21],((C_word*)t0)[2]);}
else{
t4=t2;
f_26536(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k26534 in k26530 in k26270 in mm:make-bend in k22468 in k18948 in k18945 in k18942 in k18939 in k18528 in k18525 in k18522 in k18519 in k18516 in k17994 in k17991 in k17468 in k17465 in k17462 in k17459 in k17456 in k17453 in k17450 in k17447 in k17444 in k17441 in k17438 in k17435 in k17432 in k17429 in k17426 in k17423 in k17420 in k17417 in k17414 in k17411 in k17408 in k17269 in k17266 in k17263 in k17260 in k17204 in k17201 in k17198 in k17195 in k17192 in k17189 in k17186 in k17183 in k15938 in k15869 in k15676 in k15673 in k15568 in k15517 in k7924 in k7921 in k5905 in k5612 in k5609 in k5605 in k5314 in k5311 in k5308 in k5305 */
static void C_ccall f_26536(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_26275(t7,t6);}

/* k26495 in k26270 in mm:make-bend in k22468 in k18948 in k18945 in k18942 in k18939 in k18528 in k18525 in k18522 in k18519 in k18516 in k17994 in k17991 in k17468 in k17465 in k17462 in k17459 in k17456 in k17453 in k17450 in k17447 in k17444 in k17441 in k17438 in k17435 in k17432 in k17429 in k17426 in k17423 in k17420 in k17417 in k17414 in k17411 in k17408 in k17269 in k17266 in k17263 in k17260 in k17204 in k17201 in k17198 in k17195 in k17192 in k17189 in k17186 in k17183 in k15938 in k15869 in k15676 in k15673 in k15568 in k15517 in k7924 in k7921 in k5905 in k5612 in k5609 in k5605 in k5314 in k5311 in k5308 in k5305 */
static void C_ccall f_26497(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_26497,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_26501,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("error");
t4=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[21],((C_word*)t0)[2]);}
else{
t4=t2;
f_26501(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k26499 in k26495 in k26270 in mm:make-bend in k22468 in k18948 in k18945 in k18942 in k18939 in k18528 in k18525 in k18522 in k18519 in k18516 in k17994 in k17991 in k17468 in k17465 in k17462 in k17459 in k17456 in k17453 in k17450 in k17447 in k17444 in k17441 in k17438 in k17435 in k17432 in k17429 in k17426 in k17423 in k17420 in k17417 in k17414 in k17411 in k17408 in k17269 in k17266 in k17263 in k17260 in k17204 in k17201 in k17198 in k17195 in k17192 in k17189 in k17186 in k17183 in k15938 in k15869 in k15676 in k15673 in k15568 in k15517 in k7924 in k7921 in k5905 in k5612 in k5609 in k5605 in k5314 in k5311 in k5308 in k5305 */
static void C_ccall f_26501(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_26275(t7,t6);}

/* k26460 in k26270 in mm:make-bend in k22468 in k18948 in k18945 in k18942 in k18939 in k18528 in k18525 in k18522 in k18519 in k18516 in k17994 in k17991 in k17468 in k17465 in k17462 in k17459 in k17456 in k17453 in k17450 in k17447 in k17444 in k17441 in k17438 in k17435 in k17432 in k17429 in k17426 in k17423 in k17420 in k17417 in k17414 in k17411 in k17408 in k17269 in k17266 in k17263 in k17260 in k17204 in k17201 in k17198 in k17195 in k17192 in k17189 in k17186 in k17183 in k15938 in k15869 in k15676 in k15673 in k15568 in k15517 in k7924 in k7921 in k5905 in k5612 in k5609 in k5605 in k5314 in k5311 in k5308 in k5305 */
static void C_ccall f_26462(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_26462,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_26466,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("error");
t4=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[21],((C_word*)t0)[2]);}
else{
t4=t2;
f_26466(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k26464 in k26460 in k26270 in mm:make-bend in k22468 in k18948 in k18945 in k18942 in k18939 in k18528 in k18525 in k18522 in k18519 in k18516 in k17994 in k17991 in k17468 in k17465 in k17462 in k17459 in k17456 in k17453 in k17450 in k17447 in k17444 in k17441 in k17438 in k17435 in k17432 in k17429 in k17426 in k17423 in k17420 in k17417 in k17414 in k17411 in k17408 in k17269 in k17266 in k17263 in k17260 in k17204 in k17201 in k17198 in k17195 in k17192 in k17189 in k17186 in k17183 in k15938 in k15869 in k15676 in k15673 in k15568 in k15517 in k7924 in k7921 in k5905 in k5612 in k5609 in k5605 in k5314 in k5311 in k5308 in k5305 */
static void C_ccall f_26466(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_26275(t7,t6);}

/* k26273 in k26270 in mm:make-bend in k22468 in k18948 in k18945 in k18942 in k18939 in k18528 in k18525 in k18522 in k18519 in k18516 in k17994 in k17991 in k17468 in k17465 in k17462 in k17459 in k17456 in k17453 in k17450 in k17447 in k17444 in k17441 in k17438 in k17435 in k17432 in k17429 in k17426 in k17423 in k17420 in k17417 in k17414 in k17411 in k17408 in k17269 in k17266 in k17263 in k17260 in k17204 in k17201 in k17198 in k17195 in k17192 in k17189 in k17186 in k17183 in k15938 in k15869 in k15676 in k15673 in k15568 in k15517 in k7924 in k7921 in k5905 in k5612 in k5609 in k5605 in k5314 in k5311 in k5308 in k5305 */
static void C_fcall f_26275(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word ab[38],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_26275,NULL,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_26278,a[2]=((C_word*)t0)[6],a[3]=((C_word*)t0)[7],a[4]=((C_word*)t0)[8],a[5]=((C_word*)t0)[9],a[6]=((C_word*)t0)[10],a[7]=((C_word*)t0)[11],tmp=(C_word)a,a+=8,tmp);
if(C_truep((C_word)C_i_nullp(((C_word*)((C_word*)t0)[7])[1]))){
t3=t2;
f_26278(t3,C_SCHEME_UNDEFINED);}
else{
t3=(C_word)C_i_car(((C_word*)((C_word*)t0)[7])[1]);
t4=(C_word)C_eqp(t3,lf[577]);
if(C_truep(t4)){
t5=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_26327,a[2]=((C_word*)t0)[6],a[3]=t2,a[4]=((C_word*)t0)[7],a[5]=((C_word*)t0)[4],a[6]=((C_word*)t0)[5],a[7]=((C_word*)t0)[10],tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)((C_word*)t0)[5])[1])){
C_trace("error");
t6=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t6))(4,t6,t5,lf[19],lf[577]);}
else{
t6=t5;
f_26327(2,t6,C_SCHEME_UNDEFINED);}}
else{
t5=(C_word)C_eqp(t3,lf[585]);
if(C_truep(t5)){
t6=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_26362,a[2]=((C_word*)t0)[6],a[3]=t2,a[4]=((C_word*)t0)[7],a[5]=((C_word*)t0)[4],a[6]=((C_word*)t0)[3],a[7]=((C_word*)t0)[8],tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)((C_word*)t0)[3])[1])){
C_trace("error");
t7=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t7))(4,t7,t6,lf[19],lf[585]);}
else{
t7=t6;
f_26362(2,t7,C_SCHEME_UNDEFINED);}}
else{
t6=(C_word)C_eqp(t3,lf[580]);
if(C_truep(t6)){
t7=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_26397,a[2]=((C_word*)t0)[6],a[3]=t2,a[4]=((C_word*)t0)[7],a[5]=((C_word*)t0)[4],a[6]=((C_word*)t0)[2],a[7]=((C_word*)t0)[9],tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)((C_word*)t0)[2])[1])){
C_trace("error");
t8=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t8))(4,t8,t7,lf[19],lf[580]);}
else{
t8=t7;
f_26397(2,t8,C_SCHEME_UNDEFINED);}}
else{
t7=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_26426,a[2]=t2,a[3]=((C_word*)t0)[2],a[4]=((C_word*)t0)[9],a[5]=((C_word*)t0)[7],tmp=(C_word)a,a+=6,tmp);
if(C_truep(((C_word*)((C_word*)t0)[4])[1])){
C_trace("error");
t8=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t8))(4,t8,t7,lf[10],((C_word*)t0)[6]);}
else{
t8=t7;
f_26426(2,t8,C_SCHEME_UNDEFINED);}}}}}}

/* k26424 in k26273 in k26270 in mm:make-bend in k22468 in k18948 in k18945 in k18942 in k18939 in k18528 in k18525 in k18522 in k18519 in k18516 in k17994 in k17991 in k17468 in k17465 in k17462 in k17459 in k17456 in k17453 in k17450 in k17447 in k17444 in k17441 in k17438 in k17435 in k17432 in k17429 in k17426 in k17423 in k17420 in k17417 in k17414 in k17411 in k17408 in k17269 in k17266 in k17263 in k17260 in k17204 in k17201 in k17198 in k17195 in k17192 in k17189 in k17186 in k17183 in k15938 in k15869 in k15676 in k15673 in k15568 in k15517 in k7924 in k7921 in k5905 in k5612 in k5609 in k5605 in k5314 in k5311 in k5308 in k5305 */
static void C_ccall f_26426(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_26426,2,t0,t1);}
t2=(C_word)C_i_car(((C_word*)((C_word*)t0)[5])[1]);
t3=C_mutate(((C_word *)((C_word*)t0)[4])+1,t2);
t4=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_26433,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[5],a[4]=((C_word*)t0)[3],tmp=(C_word)a,a+=5,tmp);
t5=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_26441,a[2]=((C_word*)t0)[4],a[3]=t4,tmp=(C_word)a,a+=4,tmp);
C_trace("keyword?");
t6=C_retrieve(lf[13]);
((C_proc3)C_retrieve_proc(t6))(3,t6,t5,((C_word*)((C_word*)t0)[4])[1]);}

/* k26439 in k26424 in k26273 in k26270 in mm:make-bend in k22468 in k18948 in k18945 in k18942 in k18939 in k18528 in k18525 in k18522 in k18519 in k18516 in k17994 in k17991 in k17468 in k17465 in k17462 in k17459 in k17456 in k17453 in k17450 in k17447 in k17444 in k17441 in k17438 in k17435 in k17432 in k17429 in k17426 in k17423 in k17420 in k17417 in k17414 in k17411 in k17408 in k17269 in k17266 in k17263 in k17260 in k17204 in k17201 in k17198 in k17195 in k17192 in k17189 in k17186 in k17183 in k15938 in k15869 in k15676 in k15673 in k15568 in k15517 in k7924 in k7921 in k5905 in k5612 in k5609 in k5605 in k5314 in k5311 in k5308 in k5305 */
static void C_ccall f_26441(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
if(C_truep(t1)){
C_trace("error");
t2=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t2))(4,t2,((C_word*)t0)[3],lf[14],((C_word*)((C_word*)t0)[2])[1]);}
else{
t2=((C_word*)t0)[3];
f_26433(2,t2,C_SCHEME_UNDEFINED);}}

/* k26431 in k26424 in k26273 in k26270 in mm:make-bend in k22468 in k18948 in k18945 in k18942 in k18939 in k18528 in k18525 in k18522 in k18519 in k18516 in k17994 in k17991 in k17468 in k17465 in k17462 in k17459 in k17456 in k17453 in k17450 in k17447 in k17444 in k17441 in k17438 in k17435 in k17432 in k17429 in k17426 in k17423 in k17420 in k17417 in k17414 in k17411 in k17408 in k17269 in k17266 in k17263 in k17260 in k17204 in k17201 in k17198 in k17195 in k17192 in k17189 in k17186 in k17183 in k15938 in k15869 in k15676 in k15673 in k15568 in k15517 in k7924 in k7921 in k5905 in k5612 in k5609 in k5605 in k5314 in k5311 in k5308 in k5305 */
static void C_ccall f_26433(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word *a;
t2=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[3])[1]);
t4=C_mutate(((C_word *)((C_word*)t0)[3])+1,t3);
t5=((C_word*)t0)[2];
f_26278(t5,t4);}

/* k26395 in k26273 in k26270 in mm:make-bend in k22468 in k18948 in k18945 in k18942 in k18939 in k18528 in k18525 in k18522 in k18519 in k18516 in k17994 in k17991 in k17468 in k17465 in k17462 in k17459 in k17456 in k17453 in k17450 in k17447 in k17444 in k17441 in k17438 in k17435 in k17432 in k17429 in k17426 in k17423 in k17420 in k17417 in k17414 in k17411 in k17408 in k17269 in k17266 in k17263 in k17260 in k17204 in k17201 in k17198 in k17195 in k17192 in k17189 in k17186 in k17183 in k15938 in k15869 in k15676 in k15673 in k15568 in k15517 in k7924 in k7921 in k5905 in k5612 in k5609 in k5605 in k5314 in k5311 in k5308 in k5305 */
static void C_ccall f_26397(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_26397,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_26401,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("error");
t4=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[21],((C_word*)t0)[2]);}
else{
t4=t2;
f_26401(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k26399 in k26395 in k26273 in k26270 in mm:make-bend in k22468 in k18948 in k18945 in k18942 in k18939 in k18528 in k18525 in k18522 in k18519 in k18516 in k17994 in k17991 in k17468 in k17465 in k17462 in k17459 in k17456 in k17453 in k17450 in k17447 in k17444 in k17441 in k17438 in k17435 in k17432 in k17429 in k17426 in k17423 in k17420 in k17417 in k17414 in k17411 in k17408 in k17269 in k17266 in k17263 in k17260 in k17204 in k17201 in k17198 in k17195 in k17192 in k17189 in k17186 in k17183 in k15938 in k15869 in k15676 in k15673 in k15568 in k15517 in k7924 in k7921 in k5905 in k5612 in k5609 in k5605 in k5314 in k5311 in k5308 in k5305 */
static void C_ccall f_26401(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_26278(t7,t6);}

/* k26360 in k26273 in k26270 in mm:make-bend in k22468 in k18948 in k18945 in k18942 in k18939 in k18528 in k18525 in k18522 in k18519 in k18516 in k17994 in k17991 in k17468 in k17465 in k17462 in k17459 in k17456 in k17453 in k17450 in k17447 in k17444 in k17441 in k17438 in k17435 in k17432 in k17429 in k17426 in k17423 in k17420 in k17417 in k17414 in k17411 in k17408 in k17269 in k17266 in k17263 in k17260 in k17204 in k17201 in k17198 in k17195 in k17192 in k17189 in k17186 in k17183 in k15938 in k15869 in k15676 in k15673 in k15568 in k15517 in k7924 in k7921 in k5905 in k5612 in k5609 in k5605 in k5314 in k5311 in k5308 in k5305 */
static void C_ccall f_26362(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_26362,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_26366,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("error");
t4=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[21],((C_word*)t0)[2]);}
else{
t4=t2;
f_26366(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k26364 in k26360 in k26273 in k26270 in mm:make-bend in k22468 in k18948 in k18945 in k18942 in k18939 in k18528 in k18525 in k18522 in k18519 in k18516 in k17994 in k17991 in k17468 in k17465 in k17462 in k17459 in k17456 in k17453 in k17450 in k17447 in k17444 in k17441 in k17438 in k17435 in k17432 in k17429 in k17426 in k17423 in k17420 in k17417 in k17414 in k17411 in k17408 in k17269 in k17266 in k17263 in k17260 in k17204 in k17201 in k17198 in k17195 in k17192 in k17189 in k17186 in k17183 in k15938 in k15869 in k15676 in k15673 in k15568 in k15517 in k7924 in k7921 in k5905 in k5612 in k5609 in k5605 in k5314 in k5311 in k5308 in k5305 */
static void C_ccall f_26366(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_26278(t7,t6);}

/* k26325 in k26273 in k26270 in mm:make-bend in k22468 in k18948 in k18945 in k18942 in k18939 in k18528 in k18525 in k18522 in k18519 in k18516 in k17994 in k17991 in k17468 in k17465 in k17462 in k17459 in k17456 in k17453 in k17450 in k17447 in k17444 in k17441 in k17438 in k17435 in k17432 in k17429 in k17426 in k17423 in k17420 in k17417 in k17414 in k17411 in k17408 in k17269 in k17266 in k17263 in k17260 in k17204 in k17201 in k17198 in k17195 in k17192 in k17189 in k17186 in k17183 in k15938 in k15869 in k15676 in k15673 in k15568 in k15517 in k7924 in k7921 in k5905 in k5612 in k5609 in k5605 in k5314 in k5311 in k5308 in k5305 */
static void C_ccall f_26327(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_26327,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_26331,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("error");
t4=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[21],((C_word*)t0)[2]);}
else{
t4=t2;
f_26331(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k26329 in k26325 in k26273 in k26270 in mm:make-bend in k22468 in k18948 in k18945 in k18942 in k18939 in k18528 in k18525 in k18522 in k18519 in k18516 in k17994 in k17991 in k17468 in k17465 in k17462 in k17459 in k17456 in k17453 in k17450 in k17447 in k17444 in k17441 in k17438 in k17435 in k17432 in k17429 in k17426 in k17423 in k17420 in k17417 in k17414 in k17411 in k17408 in k17269 in k17266 in k17263 in k17260 in k17204 in k17201 in k17198 in k17195 in k17192 in k17189 in k17186 in k17183 in k15938 in k15869 in k15676 in k15673 in k15568 in k15517 in k7924 in k7921 in k5905 in k5612 in k5609 in k5605 in k5314 in k5311 in k5308 in k5305 */
static void C_ccall f_26331(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_26278(t7,t6);}

/* k26276 in k26273 in k26270 in mm:make-bend in k22468 in k18948 in k18945 in k18942 in k18939 in k18528 in k18525 in k18522 in k18519 in k18516 in k17994 in k17991 in k17468 in k17465 in k17462 in k17459 in k17456 in k17453 in k17450 in k17447 in k17444 in k17441 in k17438 in k17435 in k17432 in k17429 in k17426 in k17423 in k17420 in k17417 in k17414 in k17411 in k17408 in k17269 in k17266 in k17263 in k17260 in k17204 in k17201 in k17198 in k17195 in k17192 in k17189 in k17186 in k17183 in k15938 in k15869 in k15676 in k15673 in k15568 in k15517 in k7924 in k7921 in k5905 in k5612 in k5609 in k5605 in k5314 in k5311 in k5308 in k5305 */
static void C_fcall f_26278(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[6],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_26278,NULL,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_26281,a[2]=((C_word*)t0)[4],a[3]=((C_word*)t0)[5],a[4]=((C_word*)t0)[6],a[5]=((C_word*)t0)[7],tmp=(C_word)a,a+=6,tmp);
if(C_truep((C_word)C_i_nullp(((C_word*)((C_word*)t0)[3])[1]))){
t3=t2;
f_26281(2,t3,C_SCHEME_UNDEFINED);}
else{
C_trace("error");
t3=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t3))(4,t3,t2,lf[5],((C_word*)t0)[2]);}}

/* k26279 in k26276 in k26273 in k26270 in mm:make-bend in k22468 in k18948 in k18945 in k18942 in k18939 in k18528 in k18525 in k18522 in k18519 in k18516 in k17994 in k17991 in k17468 in k17465 in k17462 in k17459 in k17456 in k17453 in k17450 in k17447 in k17444 in k17441 in k17438 in k17435 in k17432 in k17429 in k17426 in k17423 in k17420 in k17417 in k17414 in k17411 in k17408 in k17269 in k17266 in k17263 in k17260 in k17204 in k17201 in k17198 in k17195 in k17192 in k17189 in k17186 in k17183 in k15938 in k15869 in k15676 in k15673 in k15568 in k15517 in k7924 in k7921 in k5905 in k5612 in k5609 in k5605 in k5314 in k5311 in k5308 in k5305 */
static void C_ccall f_26281(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word ab[3],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_26281,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_26285,a[2]=((C_word)li362),tmp=(C_word)a,a+=3,tmp);
((C_proc7)(void*)(*((C_word*)t2+1)))(7,t2,((C_word*)t0)[5],C_fix(14),((C_word*)((C_word*)t0)[4])[1],((C_word*)((C_word*)t0)[3])[1],((C_word*)((C_word*)t0)[2])[1],C_fix(0));}

/* f_26285 in k26279 in k26276 in k26273 in k26270 in mm:make-bend in k22468 in k18948 in k18945 in k18942 in k18939 in k18528 in k18525 in k18522 in k18519 in k18516 in k17994 in k17991 in k17468 in k17465 in k17462 in k17459 in k17456 in k17453 in k17450 in k17447 in k17444 in k17441 in k17438 in k17435 in k17432 in k17429 in k17426 in k17423 in k17420 in k17417 in k17414 in k17411 in k17408 in k17269 in k17266 in k17263 in k17260 in k17204 in k17201 in k17198 in k17195 in k17192 in k17189 in k17186 in k17183 in k15938 in k15869 in k15676 in k15673 in k15568 in k15517 in k7924 in k7921 in k5905 in k5612 in k5609 in k5605 in k5314 in k5311 in k5308 in k5305 */
static void C_ccall f_26285(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4,C_word t5,C_word t6){
C_word tmp;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word ab[5],*a=ab;
if(c!=7) C_bad_argc_2(c,7,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr7,(void*)f_26285,7,t0,t1,t2,t3,t4,t5,t6);}
t7=(C_word)C_a_i_bytevector(&a,1,C_fix(3));
t8=(C_word)C_i_foreign_fixnum_argumentp(t2);
t9=(C_word)C_i_foreign_flonum_argumentp(t3);
t10=(C_word)C_i_foreign_fixnum_argumentp(t4);
t11=(C_word)C_i_foreign_fixnum_argumentp(t5);
t12=(C_word)C_i_foreign_fixnum_argumentp(t6);
t13=t1;
((C_proc2)(void*)(*((C_word*)t13+1)))(2,t13,(C_word)stub4646(t7,t8,t9,t10,t11,t12));}

/* mm:press? in k22468 in k18948 in k18945 in k18942 in k18939 in k18528 in k18525 in k18522 in k18519 in k18516 in k17994 in k17991 in k17468 in k17465 in k17462 in k17459 in k17456 in k17453 in k17450 in k17447 in k17444 in k17441 in k17438 in k17435 in k17432 in k17429 in k17426 in k17423 in k17420 in k17417 in k17414 in k17411 in k17408 in k17269 in k17266 in k17263 in k17260 in k17204 in k17201 in k17198 in k17195 in k17192 in k17189 in k17186 in k17183 in k15938 in k15869 in k15676 in k15673 in k15568 in k15517 in k7924 in k7921 in k5905 in k5612 in k5609 in k5605 in k5314 in k5311 in k5308 in k5305 */
static void C_ccall f_26249(C_word c,C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word ab[3],*a=ab;
if(c!=3) C_bad_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr3,(void*)f_26249,3,t0,t1,t2);}
t3=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_26254,a[2]=((C_word)li360),tmp=(C_word)a,a+=3,tmp);
((C_proc4)(void*)(*((C_word*)t3+1)))(4,t3,t1,t2,C_fix(13));}

/* f_26254 in mm:press? in k22468 in k18948 in k18945 in k18942 in k18939 in k18528 in k18525 in k18522 in k18519 in k18516 in k17994 in k17991 in k17468 in k17465 in k17462 in k17459 in k17456 in k17453 in k17450 in k17447 in k17444 in k17441 in k17438 in k17435 in k17432 in k17429 in k17426 in k17423 in k17420 in k17417 in k17414 in k17411 in k17408 in k17269 in k17266 in k17263 in k17260 in k17204 in k17201 in k17198 in k17195 in k17192 in k17189 in k17186 in k17183 in k15938 in k15869 in k15676 in k15673 in k15568 in k15517 in k7924 in k7921 in k5905 in k5612 in k5609 in k5605 in k5314 in k5311 in k5308 in k5305 */
static void C_ccall f_26254(C_word c,C_word t0,C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word t6;
C_word *a;
if(c!=4) C_bad_argc_2(c,4,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr4,(void*)f_26254,4,t0,t1,t2,t3);}
t4=(C_truep(t2)?(C_word)C_i_foreign_pointer_argumentp(t2):C_SCHEME_FALSE);
t5=(C_word)C_i_foreign_fixnum_argumentp(t3);
t6=t1;
((C_proc2)(void*)(*((C_word*)t6+1)))(2,t6,(C_word)stub4567(C_SCHEME_UNDEFINED,t4,t5));}

/* mm:make-press in k22468 in k18948 in k18945 in k18942 in k18939 in k18528 in k18525 in k18522 in k18519 in k18516 in k17994 in k17991 in k17468 in k17465 in k17462 in k17459 in k17456 in k17453 in k17450 in k17447 in k17444 in k17441 in k17438 in k17435 in k17432 in k17429 in k17426 in k17423 in k17420 in k17417 in k17414 in k17411 in k17408 in k17269 in k17266 in k17263 in k17260 in k17204 in k17201 in k17198 in k17195 in k17192 in k17189 in k17186 in k17183 in k15938 in k15869 in k15676 in k15673 in k15568 in k15517 in k7924 in k7921 in k5905 in k5612 in k5609 in k5605 in k5314 in k5311 in k5308 in k5305 */
static void C_ccall f_25798(C_word c,C_word t0,C_word t1,...){
C_word tmp;
C_word t2;
va_list v;
C_word *a,c2=c;
C_save_rest(t1,c2,2);
C_check_for_interrupt;
if(!C_demand(c*C_SIZEOF_PAIR+58)){
C_save_and_reclaim((void*)tr2r,(void*)f_25798r,2,t0,t1);}
else{
a=C_alloc((c-2)*3);
t2=C_restore_rest(a,C_rest_count(0));
f_25798r(t0,t1,t2);}}

static void C_ccall f_25798r(C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word t14;
C_word t15;
C_word t16;
C_word t17;
C_word t18;
C_word t19;
C_word t20;
C_word t21;
C_word t22;
C_word t23;
C_word t24;
C_word t25;
C_word t26;
C_word t27;
C_word t28;
C_word *a=C_alloc(58);
t3=C_fix(0);
t4=(*a=C_VECTOR_TYPE|1,a[1]=t3,tmp=(C_word)a,a+=2,tmp);
t5=C_fix(0);
t6=(*a=C_VECTOR_TYPE|1,a[1]=t5,tmp=(C_word)a,a+=2,tmp);
t7=C_fix(0);
t8=(*a=C_VECTOR_TYPE|1,a[1]=t7,tmp=(C_word)a,a+=2,tmp);
t9=C_SCHEME_FALSE;
t10=(*a=C_VECTOR_TYPE|1,a[1]=t9,tmp=(C_word)a,a+=2,tmp);
t11=C_SCHEME_FALSE;
t12=(*a=C_VECTOR_TYPE|1,a[1]=t11,tmp=(C_word)a,a+=2,tmp);
t13=C_SCHEME_FALSE;
t14=(*a=C_VECTOR_TYPE|1,a[1]=t13,tmp=(C_word)a,a+=2,tmp);
t15=t2;
t16=(*a=C_VECTOR_TYPE|1,a[1]=t15,tmp=(C_word)a,a+=2,tmp);
t17=C_SCHEME_FALSE;
t18=(*a=C_VECTOR_TYPE|1,a[1]=t17,tmp=(C_word)a,a+=2,tmp);
t19=(*a=C_CLOSURE_TYPE|11,a[1]=(C_word)f_25802,a[2]=t14,a[3]=t12,a[4]=t18,a[5]=t10,a[6]=t2,a[7]=t16,a[8]=t6,a[9]=t8,a[10]=t4,a[11]=t1,tmp=(C_word)a,a+=12,tmp);
if(C_truep((C_word)C_i_nullp(((C_word*)t16)[1]))){
t20=t19;
f_25802(t20,C_SCHEME_UNDEFINED);}
else{
t20=(C_word)C_i_car(((C_word*)t16)[1]);
t21=(C_word)C_eqp(t20,lf[577]);
if(C_truep(t21)){
t22=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_26127,a[2]=t2,a[3]=t19,a[4]=t16,a[5]=t18,a[6]=t10,a[7]=t4,tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)t10)[1])){
C_trace("error");
t23=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t23))(4,t23,t22,lf[19],lf[577]);}
else{
t23=t22;
f_26127(2,t23,C_SCHEME_UNDEFINED);}}
else{
t22=(C_word)C_eqp(t20,lf[585]);
if(C_truep(t22)){
t23=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_26162,a[2]=t2,a[3]=t19,a[4]=t16,a[5]=t18,a[6]=t12,a[7]=t6,tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)t12)[1])){
C_trace("error");
t24=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t24))(4,t24,t23,lf[19],lf[585]);}
else{
t24=t23;
f_26162(2,t24,C_SCHEME_UNDEFINED);}}
else{
t23=(C_word)C_eqp(t20,lf[580]);
if(C_truep(t23)){
t24=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_26197,a[2]=t2,a[3]=t19,a[4]=t16,a[5]=t18,a[6]=t14,a[7]=t8,tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)t14)[1])){
C_trace("error");
t25=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t25))(4,t25,t24,lf[19],lf[580]);}
else{
t25=t24;
f_26197(2,t25,C_SCHEME_UNDEFINED);}}
else{
t24=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_26226,a[2]=t19,a[3]=t10,a[4]=t4,a[5]=t16,tmp=(C_word)a,a+=6,tmp);
if(C_truep(((C_word*)t18)[1])){
C_trace("error");
t25=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t25))(4,t25,t24,lf[10],t2);}
else{
t25=t24;
f_26226(2,t25,C_SCHEME_UNDEFINED);}}}}}}

/* k26224 in mm:make-press in k22468 in k18948 in k18945 in k18942 in k18939 in k18528 in k18525 in k18522 in k18519 in k18516 in k17994 in k17991 in k17468 in k17465 in k17462 in k17459 in k17456 in k17453 in k17450 in k17447 in k17444 in k17441 in k17438 in k17435 in k17432 in k17429 in k17426 in k17423 in k17420 in k17417 in k17414 in k17411 in k17408 in k17269 in k17266 in k17263 in k17260 in k17204 in k17201 in k17198 in k17195 in k17192 in k17189 in k17186 in k17183 in k15938 in k15869 in k15676 in k15673 in k15568 in k15517 in k7924 in k7921 in k5905 in k5612 in k5609 in k5605 in k5314 in k5311 in k5308 in k5305 */
static void C_ccall f_26226(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_26226,2,t0,t1);}
t2=(C_word)C_i_car(((C_word*)((C_word*)t0)[5])[1]);
t3=C_mutate(((C_word *)((C_word*)t0)[4])+1,t2);
t4=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_26233,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[5],a[4]=((C_word*)t0)[3],tmp=(C_word)a,a+=5,tmp);
t5=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_26241,a[2]=((C_word*)t0)[4],a[3]=t4,tmp=(C_word)a,a+=4,tmp);
C_trace("keyword?");
t6=C_retrieve(lf[13]);
((C_proc3)C_retrieve_proc(t6))(3,t6,t5,((C_word*)((C_word*)t0)[4])[1]);}

/* k26239 in k26224 in mm:make-press in k22468 in k18948 in k18945 in k18942 in k18939 in k18528 in k18525 in k18522 in k18519 in k18516 in k17994 in k17991 in k17468 in k17465 in k17462 in k17459 in k17456 in k17453 in k17450 in k17447 in k17444 in k17441 in k17438 in k17435 in k17432 in k17429 in k17426 in k17423 in k17420 in k17417 in k17414 in k17411 in k17408 in k17269 in k17266 in k17263 in k17260 in k17204 in k17201 in k17198 in k17195 in k17192 in k17189 in k17186 in k17183 in k15938 in k15869 in k15676 in k15673 in k15568 in k15517 in k7924 in k7921 in k5905 in k5612 in k5609 in k5605 in k5314 in k5311 in k5308 in k5305 */
static void C_ccall f_26241(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
if(C_truep(t1)){
C_trace("error");
t2=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t2))(4,t2,((C_word*)t0)[3],lf[14],((C_word*)((C_word*)t0)[2])[1]);}
else{
t2=((C_word*)t0)[3];
f_26233(2,t2,C_SCHEME_UNDEFINED);}}

/* k26231 in k26224 in mm:make-press in k22468 in k18948 in k18945 in k18942 in k18939 in k18528 in k18525 in k18522 in k18519 in k18516 in k17994 in k17991 in k17468 in k17465 in k17462 in k17459 in k17456 in k17453 in k17450 in k17447 in k17444 in k17441 in k17438 in k17435 in k17432 in k17429 in k17426 in k17423 in k17420 in k17417 in k17414 in k17411 in k17408 in k17269 in k17266 in k17263 in k17260 in k17204 in k17201 in k17198 in k17195 in k17192 in k17189 in k17186 in k17183 in k15938 in k15869 in k15676 in k15673 in k15568 in k15517 in k7924 in k7921 in k5905 in k5612 in k5609 in k5605 in k5314 in k5311 in k5308 in k5305 */
static void C_ccall f_26233(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word *a;
t2=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[3])[1]);
t4=C_mutate(((C_word *)((C_word*)t0)[3])+1,t3);
t5=((C_word*)t0)[2];
f_25802(t5,t4);}

/* k26195 in mm:make-press in k22468 in k18948 in k18945 in k18942 in k18939 in k18528 in k18525 in k18522 in k18519 in k18516 in k17994 in k17991 in k17468 in k17465 in k17462 in k17459 in k17456 in k17453 in k17450 in k17447 in k17444 in k17441 in k17438 in k17435 in k17432 in k17429 in k17426 in k17423 in k17420 in k17417 in k17414 in k17411 in k17408 in k17269 in k17266 in k17263 in k17260 in k17204 in k17201 in k17198 in k17195 in k17192 in k17189 in k17186 in k17183 in k15938 in k15869 in k15676 in k15673 in k15568 in k15517 in k7924 in k7921 in k5905 in k5612 in k5609 in k5605 in k5314 in k5311 in k5308 in k5305 */
static void C_ccall f_26197(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_26197,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_26201,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("error");
t4=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[21],((C_word*)t0)[2]);}
else{
t4=t2;
f_26201(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k26199 in k26195 in mm:make-press in k22468 in k18948 in k18945 in k18942 in k18939 in k18528 in k18525 in k18522 in k18519 in k18516 in k17994 in k17991 in k17468 in k17465 in k17462 in k17459 in k17456 in k17453 in k17450 in k17447 in k17444 in k17441 in k17438 in k17435 in k17432 in k17429 in k17426 in k17423 in k17420 in k17417 in k17414 in k17411 in k17408 in k17269 in k17266 in k17263 in k17260 in k17204 in k17201 in k17198 in k17195 in k17192 in k17189 in k17186 in k17183 in k15938 in k15869 in k15676 in k15673 in k15568 in k15517 in k7924 in k7921 in k5905 in k5612 in k5609 in k5605 in k5314 in k5311 in k5308 in k5305 */
static void C_ccall f_26201(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_25802(t7,t6);}

/* k26160 in mm:make-press in k22468 in k18948 in k18945 in k18942 in k18939 in k18528 in k18525 in k18522 in k18519 in k18516 in k17994 in k17991 in k17468 in k17465 in k17462 in k17459 in k17456 in k17453 in k17450 in k17447 in k17444 in k17441 in k17438 in k17435 in k17432 in k17429 in k17426 in k17423 in k17420 in k17417 in k17414 in k17411 in k17408 in k17269 in k17266 in k17263 in k17260 in k17204 in k17201 in k17198 in k17195 in k17192 in k17189 in k17186 in k17183 in k15938 in k15869 in k15676 in k15673 in k15568 in k15517 in k7924 in k7921 in k5905 in k5612 in k5609 in k5605 in k5314 in k5311 in k5308 in k5305 */
static void C_ccall f_26162(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_26162,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_26166,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("error");
t4=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[21],((C_word*)t0)[2]);}
else{
t4=t2;
f_26166(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k26164 in k26160 in mm:make-press in k22468 in k18948 in k18945 in k18942 in k18939 in k18528 in k18525 in k18522 in k18519 in k18516 in k17994 in k17991 in k17468 in k17465 in k17462 in k17459 in k17456 in k17453 in k17450 in k17447 in k17444 in k17441 in k17438 in k17435 in k17432 in k17429 in k17426 in k17423 in k17420 in k17417 in k17414 in k17411 in k17408 in k17269 in k17266 in k17263 in k17260 in k17204 in k17201 in k17198 in k17195 in k17192 in k17189 in k17186 in k17183 in k15938 in k15869 in k15676 in k15673 in k15568 in k15517 in k7924 in k7921 in k5905 in k5612 in k5609 in k5605 in k5314 in k5311 in k5308 in k5305 */
static void C_ccall f_26166(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_25802(t7,t6);}

/* k26125 in mm:make-press in k22468 in k18948 in k18945 in k18942 in k18939 in k18528 in k18525 in k18522 in k18519 in k18516 in k17994 in k17991 in k17468 in k17465 in k17462 in k17459 in k17456 in k17453 in k17450 in k17447 in k17444 in k17441 in k17438 in k17435 in k17432 in k17429 in k17426 in k17423 in k17420 in k17417 in k17414 in k17411 in k17408 in k17269 in k17266 in k17263 in k17260 in k17204 in k17201 in k17198 in k17195 in k17192 in k17189 in k17186 in k17183 in k15938 in k15869 in k15676 in k15673 in k15568 in k15517 in k7924 in k7921 in k5905 in k5612 in k5609 in k5605 in k5314 in k5311 in k5308 in k5305 */
static void C_ccall f_26127(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_26127,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_26131,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("error");
t4=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[21],((C_word*)t0)[2]);}
else{
t4=t2;
f_26131(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k26129 in k26125 in mm:make-press in k22468 in k18948 in k18945 in k18942 in k18939 in k18528 in k18525 in k18522 in k18519 in k18516 in k17994 in k17991 in k17468 in k17465 in k17462 in k17459 in k17456 in k17453 in k17450 in k17447 in k17444 in k17441 in k17438 in k17435 in k17432 in k17429 in k17426 in k17423 in k17420 in k17417 in k17414 in k17411 in k17408 in k17269 in k17266 in k17263 in k17260 in k17204 in k17201 in k17198 in k17195 in k17192 in k17189 in k17186 in k17183 in k15938 in k15869 in k15676 in k15673 in k15568 in k15517 in k7924 in k7921 in k5905 in k5612 in k5609 in k5605 in k5314 in k5311 in k5308 in k5305 */
static void C_ccall f_26131(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_25802(t7,t6);}

/* k25800 in mm:make-press in k22468 in k18948 in k18945 in k18942 in k18939 in k18528 in k18525 in k18522 in k18519 in k18516 in k17994 in k17991 in k17468 in k17465 in k17462 in k17459 in k17456 in k17453 in k17450 in k17447 in k17444 in k17441 in k17438 in k17435 in k17432 in k17429 in k17426 in k17423 in k17420 in k17417 in k17414 in k17411 in k17408 in k17269 in k17266 in k17263 in k17260 in k17204 in k17201 in k17198 in k17195 in k17192 in k17189 in k17186 in k17183 in k15938 in k15869 in k15676 in k15673 in k15568 in k15517 in k7924 in k7921 in k5905 in k5612 in k5609 in k5605 in k5314 in k5311 in k5308 in k5305 */
static void C_fcall f_25802(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word ab[42],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_25802,NULL,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|11,a[1]=(C_word)f_25805,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],a[7]=((C_word*)t0)[7],a[8]=((C_word*)t0)[8],a[9]=((C_word*)t0)[9],a[10]=((C_word*)t0)[10],a[11]=((C_word*)t0)[11],tmp=(C_word)a,a+=12,tmp);
if(C_truep((C_word)C_i_nullp(((C_word*)((C_word*)t0)[7])[1]))){
t3=t2;
f_25805(t3,C_SCHEME_UNDEFINED);}
else{
t3=(C_word)C_i_car(((C_word*)((C_word*)t0)[7])[1]);
t4=(C_word)C_eqp(t3,lf[577]);
if(C_truep(t4)){
t5=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_25992,a[2]=((C_word*)t0)[6],a[3]=t2,a[4]=((C_word*)t0)[7],a[5]=((C_word*)t0)[4],a[6]=((C_word*)t0)[5],a[7]=((C_word*)t0)[10],tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)((C_word*)t0)[5])[1])){
C_trace("error");
t6=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t6))(4,t6,t5,lf[19],lf[577]);}
else{
t6=t5;
f_25992(2,t6,C_SCHEME_UNDEFINED);}}
else{
t5=(C_word)C_eqp(t3,lf[585]);
if(C_truep(t5)){
t6=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_26027,a[2]=((C_word*)t0)[6],a[3]=t2,a[4]=((C_word*)t0)[7],a[5]=((C_word*)t0)[4],a[6]=((C_word*)t0)[3],a[7]=((C_word*)t0)[8],tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)((C_word*)t0)[3])[1])){
C_trace("error");
t7=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t7))(4,t7,t6,lf[19],lf[585]);}
else{
t7=t6;
f_26027(2,t7,C_SCHEME_UNDEFINED);}}
else{
t6=(C_word)C_eqp(t3,lf[580]);
if(C_truep(t6)){
t7=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_26062,a[2]=((C_word*)t0)[6],a[3]=t2,a[4]=((C_word*)t0)[7],a[5]=((C_word*)t0)[4],a[6]=((C_word*)t0)[2],a[7]=((C_word*)t0)[9],tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)((C_word*)t0)[2])[1])){
C_trace("error");
t8=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t8))(4,t8,t7,lf[19],lf[580]);}
else{
t8=t7;
f_26062(2,t8,C_SCHEME_UNDEFINED);}}
else{
t7=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_26091,a[2]=t2,a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[8],a[5]=((C_word*)t0)[7],tmp=(C_word)a,a+=6,tmp);
if(C_truep(((C_word*)((C_word*)t0)[4])[1])){
C_trace("error");
t8=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t8))(4,t8,t7,lf[10],((C_word*)t0)[6]);}
else{
t8=t7;
f_26091(2,t8,C_SCHEME_UNDEFINED);}}}}}}

/* k26089 in k25800 in mm:make-press in k22468 in k18948 in k18945 in k18942 in k18939 in k18528 in k18525 in k18522 in k18519 in k18516 in k17994 in k17991 in k17468 in k17465 in k17462 in k17459 in k17456 in k17453 in k17450 in k17447 in k17444 in k17441 in k17438 in k17435 in k17432 in k17429 in k17426 in k17423 in k17420 in k17417 in k17414 in k17411 in k17408 in k17269 in k17266 in k17263 in k17260 in k17204 in k17201 in k17198 in k17195 in k17192 in k17189 in k17186 in k17183 in k15938 in k15869 in k15676 in k15673 in k15568 in k15517 in k7924 in k7921 in k5905 in k5612 in k5609 in k5605 in k5314 in k5311 in k5308 in k5305 */
static void C_ccall f_26091(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_26091,2,t0,t1);}
t2=(C_word)C_i_car(((C_word*)((C_word*)t0)[5])[1]);
t3=C_mutate(((C_word *)((C_word*)t0)[4])+1,t2);
t4=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_26098,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[5],a[4]=((C_word*)t0)[3],tmp=(C_word)a,a+=5,tmp);
t5=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_26106,a[2]=((C_word*)t0)[4],a[3]=t4,tmp=(C_word)a,a+=4,tmp);
C_trace("keyword?");
t6=C_retrieve(lf[13]);
((C_proc3)C_retrieve_proc(t6))(3,t6,t5,((C_word*)((C_word*)t0)[4])[1]);}

/* k26104 in k26089 in k25800 in mm:make-press in k22468 in k18948 in k18945 in k18942 in k18939 in k18528 in k18525 in k18522 in k18519 in k18516 in k17994 in k17991 in k17468 in k17465 in k17462 in k17459 in k17456 in k17453 in k17450 in k17447 in k17444 in k17441 in k17438 in k17435 in k17432 in k17429 in k17426 in k17423 in k17420 in k17417 in k17414 in k17411 in k17408 in k17269 in k17266 in k17263 in k17260 in k17204 in k17201 in k17198 in k17195 in k17192 in k17189 in k17186 in k17183 in k15938 in k15869 in k15676 in k15673 in k15568 in k15517 in k7924 in k7921 in k5905 in k5612 in k5609 in k5605 in k5314 in k5311 in k5308 in k5305 */
static void C_ccall f_26106(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
if(C_truep(t1)){
C_trace("error");
t2=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t2))(4,t2,((C_word*)t0)[3],lf[14],((C_word*)((C_word*)t0)[2])[1]);}
else{
t2=((C_word*)t0)[3];
f_26098(2,t2,C_SCHEME_UNDEFINED);}}

/* k26096 in k26089 in k25800 in mm:make-press in k22468 in k18948 in k18945 in k18942 in k18939 in k18528 in k18525 in k18522 in k18519 in k18516 in k17994 in k17991 in k17468 in k17465 in k17462 in k17459 in k17456 in k17453 in k17450 in k17447 in k17444 in k17441 in k17438 in k17435 in k17432 in k17429 in k17426 in k17423 in k17420 in k17417 in k17414 in k17411 in k17408 in k17269 in k17266 in k17263 in k17260 in k17204 in k17201 in k17198 in k17195 in k17192 in k17189 in k17186 in k17183 in k15938 in k15869 in k15676 in k15673 in k15568 in k15517 in k7924 in k7921 in k5905 in k5612 in k5609 in k5605 in k5314 in k5311 in k5308 in k5305 */
static void C_ccall f_26098(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word *a;
t2=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[3])[1]);
t4=C_mutate(((C_word *)((C_word*)t0)[3])+1,t3);
t5=((C_word*)t0)[2];
f_25805(t5,t4);}

/* k26060 in k25800 in mm:make-press in k22468 in k18948 in k18945 in k18942 in k18939 in k18528 in k18525 in k18522 in k18519 in k18516 in k17994 in k17991 in k17468 in k17465 in k17462 in k17459 in k17456 in k17453 in k17450 in k17447 in k17444 in k17441 in k17438 in k17435 in k17432 in k17429 in k17426 in k17423 in k17420 in k17417 in k17414 in k17411 in k17408 in k17269 in k17266 in k17263 in k17260 in k17204 in k17201 in k17198 in k17195 in k17192 in k17189 in k17186 in k17183 in k15938 in k15869 in k15676 in k15673 in k15568 in k15517 in k7924 in k7921 in k5905 in k5612 in k5609 in k5605 in k5314 in k5311 in k5308 in k5305 */
static void C_ccall f_26062(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_26062,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_26066,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("error");
t4=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[21],((C_word*)t0)[2]);}
else{
t4=t2;
f_26066(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k26064 in k26060 in k25800 in mm:make-press in k22468 in k18948 in k18945 in k18942 in k18939 in k18528 in k18525 in k18522 in k18519 in k18516 in k17994 in k17991 in k17468 in k17465 in k17462 in k17459 in k17456 in k17453 in k17450 in k17447 in k17444 in k17441 in k17438 in k17435 in k17432 in k17429 in k17426 in k17423 in k17420 in k17417 in k17414 in k17411 in k17408 in k17269 in k17266 in k17263 in k17260 in k17204 in k17201 in k17198 in k17195 in k17192 in k17189 in k17186 in k17183 in k15938 in k15869 in k15676 in k15673 in k15568 in k15517 in k7924 in k7921 in k5905 in k5612 in k5609 in k5605 in k5314 in k5311 in k5308 in k5305 */
static void C_ccall f_26066(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_25805(t7,t6);}

/* k26025 in k25800 in mm:make-press in k22468 in k18948 in k18945 in k18942 in k18939 in k18528 in k18525 in k18522 in k18519 in k18516 in k17994 in k17991 in k17468 in k17465 in k17462 in k17459 in k17456 in k17453 in k17450 in k17447 in k17444 in k17441 in k17438 in k17435 in k17432 in k17429 in k17426 in k17423 in k17420 in k17417 in k17414 in k17411 in k17408 in k17269 in k17266 in k17263 in k17260 in k17204 in k17201 in k17198 in k17195 in k17192 in k17189 in k17186 in k17183 in k15938 in k15869 in k15676 in k15673 in k15568 in k15517 in k7924 in k7921 in k5905 in k5612 in k5609 in k5605 in k5314 in k5311 in k5308 in k5305 */
static void C_ccall f_26027(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_26027,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_26031,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("error");
t4=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[21],((C_word*)t0)[2]);}
else{
t4=t2;
f_26031(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k26029 in k26025 in k25800 in mm:make-press in k22468 in k18948 in k18945 in k18942 in k18939 in k18528 in k18525 in k18522 in k18519 in k18516 in k17994 in k17991 in k17468 in k17465 in k17462 in k17459 in k17456 in k17453 in k17450 in k17447 in k17444 in k17441 in k17438 in k17435 in k17432 in k17429 in k17426 in k17423 in k17420 in k17417 in k17414 in k17411 in k17408 in k17269 in k17266 in k17263 in k17260 in k17204 in k17201 in k17198 in k17195 in k17192 in k17189 in k17186 in k17183 in k15938 in k15869 in k15676 in k15673 in k15568 in k15517 in k7924 in k7921 in k5905 in k5612 in k5609 in k5605 in k5314 in k5311 in k5308 in k5305 */
static void C_ccall f_26031(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_25805(t7,t6);}

/* k25990 in k25800 in mm:make-press in k22468 in k18948 in k18945 in k18942 in k18939 in k18528 in k18525 in k18522 in k18519 in k18516 in k17994 in k17991 in k17468 in k17465 in k17462 in k17459 in k17456 in k17453 in k17450 in k17447 in k17444 in k17441 in k17438 in k17435 in k17432 in k17429 in k17426 in k17423 in k17420 in k17417 in k17414 in k17411 in k17408 in k17269 in k17266 in k17263 in k17260 in k17204 in k17201 in k17198 in k17195 in k17192 in k17189 in k17186 in k17183 in k15938 in k15869 in k15676 in k15673 in k15568 in k15517 in k7924 in k7921 in k5905 in k5612 in k5609 in k5605 in k5314 in k5311 in k5308 in k5305 */
static void C_ccall f_25992(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_25992,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_25996,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("error");
t4=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[21],((C_word*)t0)[2]);}
else{
t4=t2;
f_25996(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k25994 in k25990 in k25800 in mm:make-press in k22468 in k18948 in k18945 in k18942 in k18939 in k18528 in k18525 in k18522 in k18519 in k18516 in k17994 in k17991 in k17468 in k17465 in k17462 in k17459 in k17456 in k17453 in k17450 in k17447 in k17444 in k17441 in k17438 in k17435 in k17432 in k17429 in k17426 in k17423 in k17420 in k17417 in k17414 in k17411 in k17408 in k17269 in k17266 in k17263 in k17260 in k17204 in k17201 in k17198 in k17195 in k17192 in k17189 in k17186 in k17183 in k15938 in k15869 in k15676 in k15673 in k15568 in k15517 in k7924 in k7921 in k5905 in k5612 in k5609 in k5605 in k5314 in k5311 in k5308 in k5305 */
static void C_ccall f_25996(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_25805(t7,t6);}

/* k25803 in k25800 in mm:make-press in k22468 in k18948 in k18945 in k18942 in k18939 in k18528 in k18525 in k18522 in k18519 in k18516 in k17994 in k17991 in k17468 in k17465 in k17462 in k17459 in k17456 in k17453 in k17450 in k17447 in k17444 in k17441 in k17438 in k17435 in k17432 in k17429 in k17426 in k17423 in k17420 in k17417 in k17414 in k17411 in k17408 in k17269 in k17266 in k17263 in k17260 in k17204 in k17201 in k17198 in k17195 in k17192 in k17189 in k17186 in k17183 in k15938 in k15869 in k15676 in k15673 in k15568 in k15517 in k7924 in k7921 in k5905 in k5612 in k5609 in k5605 in k5314 in k5311 in k5308 in k5305 */
static void C_fcall f_25805(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word ab[38],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_25805,NULL,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_25808,a[2]=((C_word*)t0)[6],a[3]=((C_word*)t0)[7],a[4]=((C_word*)t0)[8],a[5]=((C_word*)t0)[9],a[6]=((C_word*)t0)[10],a[7]=((C_word*)t0)[11],tmp=(C_word)a,a+=8,tmp);
if(C_truep((C_word)C_i_nullp(((C_word*)((C_word*)t0)[7])[1]))){
t3=t2;
f_25808(t3,C_SCHEME_UNDEFINED);}
else{
t3=(C_word)C_i_car(((C_word*)((C_word*)t0)[7])[1]);
t4=(C_word)C_eqp(t3,lf[577]);
if(C_truep(t4)){
t5=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_25857,a[2]=((C_word*)t0)[6],a[3]=t2,a[4]=((C_word*)t0)[7],a[5]=((C_word*)t0)[4],a[6]=((C_word*)t0)[5],a[7]=((C_word*)t0)[10],tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)((C_word*)t0)[5])[1])){
C_trace("error");
t6=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t6))(4,t6,t5,lf[19],lf[577]);}
else{
t6=t5;
f_25857(2,t6,C_SCHEME_UNDEFINED);}}
else{
t5=(C_word)C_eqp(t3,lf[585]);
if(C_truep(t5)){
t6=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_25892,a[2]=((C_word*)t0)[6],a[3]=t2,a[4]=((C_word*)t0)[7],a[5]=((C_word*)t0)[4],a[6]=((C_word*)t0)[3],a[7]=((C_word*)t0)[8],tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)((C_word*)t0)[3])[1])){
C_trace("error");
t7=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t7))(4,t7,t6,lf[19],lf[585]);}
else{
t7=t6;
f_25892(2,t7,C_SCHEME_UNDEFINED);}}
else{
t6=(C_word)C_eqp(t3,lf[580]);
if(C_truep(t6)){
t7=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_25927,a[2]=((C_word*)t0)[6],a[3]=t2,a[4]=((C_word*)t0)[7],a[5]=((C_word*)t0)[4],a[6]=((C_word*)t0)[2],a[7]=((C_word*)t0)[9],tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)((C_word*)t0)[2])[1])){
C_trace("error");
t8=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t8))(4,t8,t7,lf[19],lf[580]);}
else{
t8=t7;
f_25927(2,t8,C_SCHEME_UNDEFINED);}}
else{
t7=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_25956,a[2]=t2,a[3]=((C_word*)t0)[2],a[4]=((C_word*)t0)[9],a[5]=((C_word*)t0)[7],tmp=(C_word)a,a+=6,tmp);
if(C_truep(((C_word*)((C_word*)t0)[4])[1])){
C_trace("error");
t8=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t8))(4,t8,t7,lf[10],((C_word*)t0)[6]);}
else{
t8=t7;
f_25956(2,t8,C_SCHEME_UNDEFINED);}}}}}}

/* k25954 in k25803 in k25800 in mm:make-press in k22468 in k18948 in k18945 in k18942 in k18939 in k18528 in k18525 in k18522 in k18519 in k18516 in k17994 in k17991 in k17468 in k17465 in k17462 in k17459 in k17456 in k17453 in k17450 in k17447 in k17444 in k17441 in k17438 in k17435 in k17432 in k17429 in k17426 in k17423 in k17420 in k17417 in k17414 in k17411 in k17408 in k17269 in k17266 in k17263 in k17260 in k17204 in k17201 in k17198 in k17195 in k17192 in k17189 in k17186 in k17183 in k15938 in k15869 in k15676 in k15673 in k15568 in k15517 in k7924 in k7921 in k5905 in k5612 in k5609 in k5605 in k5314 in k5311 in k5308 in k5305 */
static void C_ccall f_25956(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_25956,2,t0,t1);}
t2=(C_word)C_i_car(((C_word*)((C_word*)t0)[5])[1]);
t3=C_mutate(((C_word *)((C_word*)t0)[4])+1,t2);
t4=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_25963,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[5],a[4]=((C_word*)t0)[3],tmp=(C_word)a,a+=5,tmp);
t5=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_25971,a[2]=((C_word*)t0)[4],a[3]=t4,tmp=(C_word)a,a+=4,tmp);
C_trace("keyword?");
t6=C_retrieve(lf[13]);
((C_proc3)C_retrieve_proc(t6))(3,t6,t5,((C_word*)((C_word*)t0)[4])[1]);}

/* k25969 in k25954 in k25803 in k25800 in mm:make-press in k22468 in k18948 in k18945 in k18942 in k18939 in k18528 in k18525 in k18522 in k18519 in k18516 in k17994 in k17991 in k17468 in k17465 in k17462 in k17459 in k17456 in k17453 in k17450 in k17447 in k17444 in k17441 in k17438 in k17435 in k17432 in k17429 in k17426 in k17423 in k17420 in k17417 in k17414 in k17411 in k17408 in k17269 in k17266 in k17263 in k17260 in k17204 in k17201 in k17198 in k17195 in k17192 in k17189 in k17186 in k17183 in k15938 in k15869 in k15676 in k15673 in k15568 in k15517 in k7924 in k7921 in k5905 in k5612 in k5609 in k5605 in k5314 in k5311 in k5308 in k5305 */
static void C_ccall f_25971(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
if(C_truep(t1)){
C_trace("error");
t2=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t2))(4,t2,((C_word*)t0)[3],lf[14],((C_word*)((C_word*)t0)[2])[1]);}
else{
t2=((C_word*)t0)[3];
f_25963(2,t2,C_SCHEME_UNDEFINED);}}

/* k25961 in k25954 in k25803 in k25800 in mm:make-press in k22468 in k18948 in k18945 in k18942 in k18939 in k18528 in k18525 in k18522 in k18519 in k18516 in k17994 in k17991 in k17468 in k17465 in k17462 in k17459 in k17456 in k17453 in k17450 in k17447 in k17444 in k17441 in k17438 in k17435 in k17432 in k17429 in k17426 in k17423 in k17420 in k17417 in k17414 in k17411 in k17408 in k17269 in k17266 in k17263 in k17260 in k17204 in k17201 in k17198 in k17195 in k17192 in k17189 in k17186 in k17183 in k15938 in k15869 in k15676 in k15673 in k15568 in k15517 in k7924 in k7921 in k5905 in k5612 in k5609 in k5605 in k5314 in k5311 in k5308 in k5305 */
static void C_ccall f_25963(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word *a;
t2=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[3])[1]);
t4=C_mutate(((C_word *)((C_word*)t0)[3])+1,t3);
t5=((C_word*)t0)[2];
f_25808(t5,t4);}

/* k25925 in k25803 in k25800 in mm:make-press in k22468 in k18948 in k18945 in k18942 in k18939 in k18528 in k18525 in k18522 in k18519 in k18516 in k17994 in k17991 in k17468 in k17465 in k17462 in k17459 in k17456 in k17453 in k17450 in k17447 in k17444 in k17441 in k17438 in k17435 in k17432 in k17429 in k17426 in k17423 in k17420 in k17417 in k17414 in k17411 in k17408 in k17269 in k17266 in k17263 in k17260 in k17204 in k17201 in k17198 in k17195 in k17192 in k17189 in k17186 in k17183 in k15938 in k15869 in k15676 in k15673 in k15568 in k15517 in k7924 in k7921 in k5905 in k5612 in k5609 in k5605 in k5314 in k5311 in k5308 in k5305 */
static void C_ccall f_25927(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_25927,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_25931,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("error");
t4=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[21],((C_word*)t0)[2]);}
else{
t4=t2;
f_25931(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k25929 in k25925 in k25803 in k25800 in mm:make-press in k22468 in k18948 in k18945 in k18942 in k18939 in k18528 in k18525 in k18522 in k18519 in k18516 in k17994 in k17991 in k17468 in k17465 in k17462 in k17459 in k17456 in k17453 in k17450 in k17447 in k17444 in k17441 in k17438 in k17435 in k17432 in k17429 in k17426 in k17423 in k17420 in k17417 in k17414 in k17411 in k17408 in k17269 in k17266 in k17263 in k17260 in k17204 in k17201 in k17198 in k17195 in k17192 in k17189 in k17186 in k17183 in k15938 in k15869 in k15676 in k15673 in k15568 in k15517 in k7924 in k7921 in k5905 in k5612 in k5609 in k5605 in k5314 in k5311 in k5308 in k5305 */
static void C_ccall f_25931(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_25808(t7,t6);}

/* k25890 in k25803 in k25800 in mm:make-press in k22468 in k18948 in k18945 in k18942 in k18939 in k18528 in k18525 in k18522 in k18519 in k18516 in k17994 in k17991 in k17468 in k17465 in k17462 in k17459 in k17456 in k17453 in k17450 in k17447 in k17444 in k17441 in k17438 in k17435 in k17432 in k17429 in k17426 in k17423 in k17420 in k17417 in k17414 in k17411 in k17408 in k17269 in k17266 in k17263 in k17260 in k17204 in k17201 in k17198 in k17195 in k17192 in k17189 in k17186 in k17183 in k15938 in k15869 in k15676 in k15673 in k15568 in k15517 in k7924 in k7921 in k5905 in k5612 in k5609 in k5605 in k5314 in k5311 in k5308 in k5305 */
static void C_ccall f_25892(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_25892,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_25896,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("error");
t4=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[21],((C_word*)t0)[2]);}
else{
t4=t2;
f_25896(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k25894 in k25890 in k25803 in k25800 in mm:make-press in k22468 in k18948 in k18945 in k18942 in k18939 in k18528 in k18525 in k18522 in k18519 in k18516 in k17994 in k17991 in k17468 in k17465 in k17462 in k17459 in k17456 in k17453 in k17450 in k17447 in k17444 in k17441 in k17438 in k17435 in k17432 in k17429 in k17426 in k17423 in k17420 in k17417 in k17414 in k17411 in k17408 in k17269 in k17266 in k17263 in k17260 in k17204 in k17201 in k17198 in k17195 in k17192 in k17189 in k17186 in k17183 in k15938 in k15869 in k15676 in k15673 in k15568 in k15517 in k7924 in k7921 in k5905 in k5612 in k5609 in k5605 in k5314 in k5311 in k5308 in k5305 */
static void C_ccall f_25896(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_25808(t7,t6);}

/* k25855 in k25803 in k25800 in mm:make-press in k22468 in k18948 in k18945 in k18942 in k18939 in k18528 in k18525 in k18522 in k18519 in k18516 in k17994 in k17991 in k17468 in k17465 in k17462 in k17459 in k17456 in k17453 in k17450 in k17447 in k17444 in k17441 in k17438 in k17435 in k17432 in k17429 in k17426 in k17423 in k17420 in k17417 in k17414 in k17411 in k17408 in k17269 in k17266 in k17263 in k17260 in k17204 in k17201 in k17198 in k17195 in k17192 in k17189 in k17186 in k17183 in k15938 in k15869 in k15676 in k15673 in k15568 in k15517 in k7924 in k7921 in k5905 in k5612 in k5609 in k5605 in k5314 in k5311 in k5308 in k5305 */
static void C_ccall f_25857(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_25857,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_25861,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("error");
t4=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[21],((C_word*)t0)[2]);}
else{
t4=t2;
f_25861(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k25859 in k25855 in k25803 in k25800 in mm:make-press in k22468 in k18948 in k18945 in k18942 in k18939 in k18528 in k18525 in k18522 in k18519 in k18516 in k17994 in k17991 in k17468 in k17465 in k17462 in k17459 in k17456 in k17453 in k17450 in k17447 in k17444 in k17441 in k17438 in k17435 in k17432 in k17429 in k17426 in k17423 in k17420 in k17417 in k17414 in k17411 in k17408 in k17269 in k17266 in k17263 in k17260 in k17204 in k17201 in k17198 in k17195 in k17192 in k17189 in k17186 in k17183 in k15938 in k15869 in k15676 in k15673 in k15568 in k15517 in k7924 in k7921 in k5905 in k5612 in k5609 in k5605 in k5314 in k5311 in k5308 in k5305 */
static void C_ccall f_25861(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_25808(t7,t6);}

/* k25806 in k25803 in k25800 in mm:make-press in k22468 in k18948 in k18945 in k18942 in k18939 in k18528 in k18525 in k18522 in k18519 in k18516 in k17994 in k17991 in k17468 in k17465 in k17462 in k17459 in k17456 in k17453 in k17450 in k17447 in k17444 in k17441 in k17438 in k17435 in k17432 in k17429 in k17426 in k17423 in k17420 in k17417 in k17414 in k17411 in k17408 in k17269 in k17266 in k17263 in k17260 in k17204 in k17201 in k17198 in k17195 in k17192 in k17189 in k17186 in k17183 in k15938 in k15869 in k15676 in k15673 in k15568 in k15517 in k7924 in k7921 in k5905 in k5612 in k5609 in k5605 in k5314 in k5311 in k5308 in k5305 */
static void C_fcall f_25808(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[6],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_25808,NULL,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_25811,a[2]=((C_word*)t0)[4],a[3]=((C_word*)t0)[5],a[4]=((C_word*)t0)[6],a[5]=((C_word*)t0)[7],tmp=(C_word)a,a+=6,tmp);
if(C_truep((C_word)C_i_nullp(((C_word*)((C_word*)t0)[3])[1]))){
t3=t2;
f_25811(2,t3,C_SCHEME_UNDEFINED);}
else{
C_trace("error");
t3=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t3))(4,t3,t2,lf[5],((C_word*)t0)[2]);}}

/* k25809 in k25806 in k25803 in k25800 in mm:make-press in k22468 in k18948 in k18945 in k18942 in k18939 in k18528 in k18525 in k18522 in k18519 in k18516 in k17994 in k17991 in k17468 in k17465 in k17462 in k17459 in k17456 in k17453 in k17450 in k17447 in k17444 in k17441 in k17438 in k17435 in k17432 in k17429 in k17426 in k17423 in k17420 in k17417 in k17414 in k17411 in k17408 in k17269 in k17266 in k17263 in k17260 in k17204 in k17201 in k17198 in k17195 in k17192 in k17189 in k17186 in k17183 in k15938 in k15869 in k15676 in k15673 in k15568 in k15517 in k7924 in k7921 in k5905 in k5612 in k5609 in k5605 in k5314 in k5311 in k5308 in k5305 */
static void C_ccall f_25811(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word ab[3],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_25811,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_25815,a[2]=((C_word)li358),tmp=(C_word)a,a+=3,tmp);
((C_proc7)(void*)(*((C_word*)t2+1)))(7,t2,((C_word*)t0)[5],C_fix(13),((C_word*)((C_word*)t0)[4])[1],((C_word*)((C_word*)t0)[3])[1],((C_word*)((C_word*)t0)[2])[1],C_fix(0));}

/* f_25815 in k25809 in k25806 in k25803 in k25800 in mm:make-press in k22468 in k18948 in k18945 in k18942 in k18939 in k18528 in k18525 in k18522 in k18519 in k18516 in k17994 in k17991 in k17468 in k17465 in k17462 in k17459 in k17456 in k17453 in k17450 in k17447 in k17444 in k17441 in k17438 in k17435 in k17432 in k17429 in k17426 in k17423 in k17420 in k17417 in k17414 in k17411 in k17408 in k17269 in k17266 in k17263 in k17260 in k17204 in k17201 in k17198 in k17195 in k17192 in k17189 in k17186 in k17183 in k15938 in k15869 in k15676 in k15673 in k15568 in k15517 in k7924 in k7921 in k5905 in k5612 in k5609 in k5605 in k5314 in k5311 in k5308 in k5305 */
static void C_ccall f_25815(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4,C_word t5,C_word t6){
C_word tmp;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word ab[5],*a=ab;
if(c!=7) C_bad_argc_2(c,7,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr7,(void*)f_25815,7,t0,t1,t2,t3,t4,t5,t6);}
t7=(C_word)C_a_i_bytevector(&a,1,C_fix(3));
t8=(C_word)C_i_foreign_fixnum_argumentp(t2);
t9=(C_word)C_i_foreign_flonum_argumentp(t3);
t10=(C_word)C_i_foreign_fixnum_argumentp(t4);
t11=(C_word)C_i_foreign_fixnum_argumentp(t5);
t12=(C_word)C_i_foreign_fixnum_argumentp(t6);
t13=t1;
((C_proc2)(void*)(*((C_word*)t13+1)))(2,t13,(C_word)stub4552(t7,t8,t9,t10,t11,t12));}

/* mm:prog? in k22468 in k18948 in k18945 in k18942 in k18939 in k18528 in k18525 in k18522 in k18519 in k18516 in k17994 in k17991 in k17468 in k17465 in k17462 in k17459 in k17456 in k17453 in k17450 in k17447 in k17444 in k17441 in k17438 in k17435 in k17432 in k17429 in k17426 in k17423 in k17420 in k17417 in k17414 in k17411 in k17408 in k17269 in k17266 in k17263 in k17260 in k17204 in k17201 in k17198 in k17195 in k17192 in k17189 in k17186 in k17183 in k15938 in k15869 in k15676 in k15673 in k15568 in k15517 in k7924 in k7921 in k5905 in k5612 in k5609 in k5605 in k5314 in k5311 in k5308 in k5305 */
static void C_ccall f_25779(C_word c,C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word ab[3],*a=ab;
if(c!=3) C_bad_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr3,(void*)f_25779,3,t0,t1,t2);}
t3=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_25784,a[2]=((C_word)li356),tmp=(C_word)a,a+=3,tmp);
((C_proc4)(void*)(*((C_word*)t3+1)))(4,t3,t1,t2,C_fix(12));}

/* f_25784 in mm:prog? in k22468 in k18948 in k18945 in k18942 in k18939 in k18528 in k18525 in k18522 in k18519 in k18516 in k17994 in k17991 in k17468 in k17465 in k17462 in k17459 in k17456 in k17453 in k17450 in k17447 in k17444 in k17441 in k17438 in k17435 in k17432 in k17429 in k17426 in k17423 in k17420 in k17417 in k17414 in k17411 in k17408 in k17269 in k17266 in k17263 in k17260 in k17204 in k17201 in k17198 in k17195 in k17192 in k17189 in k17186 in k17183 in k15938 in k15869 in k15676 in k15673 in k15568 in k15517 in k7924 in k7921 in k5905 in k5612 in k5609 in k5605 in k5314 in k5311 in k5308 in k5305 */
static void C_ccall f_25784(C_word c,C_word t0,C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word t6;
C_word *a;
if(c!=4) C_bad_argc_2(c,4,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr4,(void*)f_25784,4,t0,t1,t2,t3);}
t4=(C_truep(t2)?(C_word)C_i_foreign_pointer_argumentp(t2):C_SCHEME_FALSE);
t5=(C_word)C_i_foreign_fixnum_argumentp(t3);
t6=t1;
((C_proc2)(void*)(*((C_word*)t6+1)))(2,t6,(C_word)stub4473(C_SCHEME_UNDEFINED,t4,t5));}

/* mm:make-prog in k22468 in k18948 in k18945 in k18942 in k18939 in k18528 in k18525 in k18522 in k18519 in k18516 in k17994 in k17991 in k17468 in k17465 in k17462 in k17459 in k17456 in k17453 in k17450 in k17447 in k17444 in k17441 in k17438 in k17435 in k17432 in k17429 in k17426 in k17423 in k17420 in k17417 in k17414 in k17411 in k17408 in k17269 in k17266 in k17263 in k17260 in k17204 in k17201 in k17198 in k17195 in k17192 in k17189 in k17186 in k17183 in k15938 in k15869 in k15676 in k15673 in k15568 in k15517 in k7924 in k7921 in k5905 in k5612 in k5609 in k5605 in k5314 in k5311 in k5308 in k5305 */
static void C_ccall f_25328(C_word c,C_word t0,C_word t1,...){
C_word tmp;
C_word t2;
va_list v;
C_word *a,c2=c;
C_save_rest(t1,c2,2);
C_check_for_interrupt;
if(!C_demand(c*C_SIZEOF_PAIR+58)){
C_save_and_reclaim((void*)tr2r,(void*)f_25328r,2,t0,t1);}
else{
a=C_alloc((c-2)*3);
t2=C_restore_rest(a,C_rest_count(0));
f_25328r(t0,t1,t2);}}

static void C_ccall f_25328r(C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word t14;
C_word t15;
C_word t16;
C_word t17;
C_word t18;
C_word t19;
C_word t20;
C_word t21;
C_word t22;
C_word t23;
C_word t24;
C_word t25;
C_word t26;
C_word t27;
C_word t28;
C_word *a=C_alloc(58);
t3=C_fix(0);
t4=(*a=C_VECTOR_TYPE|1,a[1]=t3,tmp=(C_word)a,a+=2,tmp);
t5=C_fix(0);
t6=(*a=C_VECTOR_TYPE|1,a[1]=t5,tmp=(C_word)a,a+=2,tmp);
t7=C_fix(0);
t8=(*a=C_VECTOR_TYPE|1,a[1]=t7,tmp=(C_word)a,a+=2,tmp);
t9=C_SCHEME_FALSE;
t10=(*a=C_VECTOR_TYPE|1,a[1]=t9,tmp=(C_word)a,a+=2,tmp);
t11=C_SCHEME_FALSE;
t12=(*a=C_VECTOR_TYPE|1,a[1]=t11,tmp=(C_word)a,a+=2,tmp);
t13=C_SCHEME_FALSE;
t14=(*a=C_VECTOR_TYPE|1,a[1]=t13,tmp=(C_word)a,a+=2,tmp);
t15=t2;
t16=(*a=C_VECTOR_TYPE|1,a[1]=t15,tmp=(C_word)a,a+=2,tmp);
t17=C_SCHEME_FALSE;
t18=(*a=C_VECTOR_TYPE|1,a[1]=t17,tmp=(C_word)a,a+=2,tmp);
t19=(*a=C_CLOSURE_TYPE|11,a[1]=(C_word)f_25332,a[2]=t14,a[3]=t12,a[4]=t18,a[5]=t10,a[6]=t2,a[7]=t16,a[8]=t6,a[9]=t8,a[10]=t4,a[11]=t1,tmp=(C_word)a,a+=12,tmp);
if(C_truep((C_word)C_i_nullp(((C_word*)t16)[1]))){
t20=t19;
f_25332(t20,C_SCHEME_UNDEFINED);}
else{
t20=(C_word)C_i_car(((C_word*)t16)[1]);
t21=(C_word)C_eqp(t20,lf[577]);
if(C_truep(t21)){
t22=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_25657,a[2]=t2,a[3]=t19,a[4]=t16,a[5]=t18,a[6]=t10,a[7]=t4,tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)t10)[1])){
C_trace("error");
t23=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t23))(4,t23,t22,lf[19],lf[577]);}
else{
t23=t22;
f_25657(2,t23,C_SCHEME_UNDEFINED);}}
else{
t22=(C_word)C_eqp(t20,lf[585]);
if(C_truep(t22)){
t23=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_25692,a[2]=t2,a[3]=t19,a[4]=t16,a[5]=t18,a[6]=t12,a[7]=t6,tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)t12)[1])){
C_trace("error");
t24=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t24))(4,t24,t23,lf[19],lf[585]);}
else{
t24=t23;
f_25692(2,t24,C_SCHEME_UNDEFINED);}}
else{
t23=(C_word)C_eqp(t20,lf[580]);
if(C_truep(t23)){
t24=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_25727,a[2]=t2,a[3]=t19,a[4]=t16,a[5]=t18,a[6]=t14,a[7]=t8,tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)t14)[1])){
C_trace("error");
t25=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t25))(4,t25,t24,lf[19],lf[580]);}
else{
t25=t24;
f_25727(2,t25,C_SCHEME_UNDEFINED);}}
else{
t24=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_25756,a[2]=t19,a[3]=t10,a[4]=t4,a[5]=t16,tmp=(C_word)a,a+=6,tmp);
if(C_truep(((C_word*)t18)[1])){
C_trace("error");
t25=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t25))(4,t25,t24,lf[10],t2);}
else{
t25=t24;
f_25756(2,t25,C_SCHEME_UNDEFINED);}}}}}}

/* k25754 in mm:make-prog in k22468 in k18948 in k18945 in k18942 in k18939 in k18528 in k18525 in k18522 in k18519 in k18516 in k17994 in k17991 in k17468 in k17465 in k17462 in k17459 in k17456 in k17453 in k17450 in k17447 in k17444 in k17441 in k17438 in k17435 in k17432 in k17429 in k17426 in k17423 in k17420 in k17417 in k17414 in k17411 in k17408 in k17269 in k17266 in k17263 in k17260 in k17204 in k17201 in k17198 in k17195 in k17192 in k17189 in k17186 in k17183 in k15938 in k15869 in k15676 in k15673 in k15568 in k15517 in k7924 in k7921 in k5905 in k5612 in k5609 in k5605 in k5314 in k5311 in k5308 in k5305 */
static void C_ccall f_25756(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_25756,2,t0,t1);}
t2=(C_word)C_i_car(((C_word*)((C_word*)t0)[5])[1]);
t3=C_mutate(((C_word *)((C_word*)t0)[4])+1,t2);
t4=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_25763,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[5],a[4]=((C_word*)t0)[3],tmp=(C_word)a,a+=5,tmp);
t5=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_25771,a[2]=((C_word*)t0)[4],a[3]=t4,tmp=(C_word)a,a+=4,tmp);
C_trace("keyword?");
t6=C_retrieve(lf[13]);
((C_proc3)C_retrieve_proc(t6))(3,t6,t5,((C_word*)((C_word*)t0)[4])[1]);}

/* k25769 in k25754 in mm:make-prog in k22468 in k18948 in k18945 in k18942 in k18939 in k18528 in k18525 in k18522 in k18519 in k18516 in k17994 in k17991 in k17468 in k17465 in k17462 in k17459 in k17456 in k17453 in k17450 in k17447 in k17444 in k17441 in k17438 in k17435 in k17432 in k17429 in k17426 in k17423 in k17420 in k17417 in k17414 in k17411 in k17408 in k17269 in k17266 in k17263 in k17260 in k17204 in k17201 in k17198 in k17195 in k17192 in k17189 in k17186 in k17183 in k15938 in k15869 in k15676 in k15673 in k15568 in k15517 in k7924 in k7921 in k5905 in k5612 in k5609 in k5605 in k5314 in k5311 in k5308 in k5305 */
static void C_ccall f_25771(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
if(C_truep(t1)){
C_trace("error");
t2=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t2))(4,t2,((C_word*)t0)[3],lf[14],((C_word*)((C_word*)t0)[2])[1]);}
else{
t2=((C_word*)t0)[3];
f_25763(2,t2,C_SCHEME_UNDEFINED);}}

/* k25761 in k25754 in mm:make-prog in k22468 in k18948 in k18945 in k18942 in k18939 in k18528 in k18525 in k18522 in k18519 in k18516 in k17994 in k17991 in k17468 in k17465 in k17462 in k17459 in k17456 in k17453 in k17450 in k17447 in k17444 in k17441 in k17438 in k17435 in k17432 in k17429 in k17426 in k17423 in k17420 in k17417 in k17414 in k17411 in k17408 in k17269 in k17266 in k17263 in k17260 in k17204 in k17201 in k17198 in k17195 in k17192 in k17189 in k17186 in k17183 in k15938 in k15869 in k15676 in k15673 in k15568 in k15517 in k7924 in k7921 in k5905 in k5612 in k5609 in k5605 in k5314 in k5311 in k5308 in k5305 */
static void C_ccall f_25763(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word *a;
t2=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[3])[1]);
t4=C_mutate(((C_word *)((C_word*)t0)[3])+1,t3);
t5=((C_word*)t0)[2];
f_25332(t5,t4);}

/* k25725 in mm:make-prog in k22468 in k18948 in k18945 in k18942 in k18939 in k18528 in k18525 in k18522 in k18519 in k18516 in k17994 in k17991 in k17468 in k17465 in k17462 in k17459 in k17456 in k17453 in k17450 in k17447 in k17444 in k17441 in k17438 in k17435 in k17432 in k17429 in k17426 in k17423 in k17420 in k17417 in k17414 in k17411 in k17408 in k17269 in k17266 in k17263 in k17260 in k17204 in k17201 in k17198 in k17195 in k17192 in k17189 in k17186 in k17183 in k15938 in k15869 in k15676 in k15673 in k15568 in k15517 in k7924 in k7921 in k5905 in k5612 in k5609 in k5605 in k5314 in k5311 in k5308 in k5305 */
static void C_ccall f_25727(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_25727,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_25731,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("error");
t4=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[21],((C_word*)t0)[2]);}
else{
t4=t2;
f_25731(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k25729 in k25725 in mm:make-prog in k22468 in k18948 in k18945 in k18942 in k18939 in k18528 in k18525 in k18522 in k18519 in k18516 in k17994 in k17991 in k17468 in k17465 in k17462 in k17459 in k17456 in k17453 in k17450 in k17447 in k17444 in k17441 in k17438 in k17435 in k17432 in k17429 in k17426 in k17423 in k17420 in k17417 in k17414 in k17411 in k17408 in k17269 in k17266 in k17263 in k17260 in k17204 in k17201 in k17198 in k17195 in k17192 in k17189 in k17186 in k17183 in k15938 in k15869 in k15676 in k15673 in k15568 in k15517 in k7924 in k7921 in k5905 in k5612 in k5609 in k5605 in k5314 in k5311 in k5308 in k5305 */
static void C_ccall f_25731(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_25332(t7,t6);}

/* k25690 in mm:make-prog in k22468 in k18948 in k18945 in k18942 in k18939 in k18528 in k18525 in k18522 in k18519 in k18516 in k17994 in k17991 in k17468 in k17465 in k17462 in k17459 in k17456 in k17453 in k17450 in k17447 in k17444 in k17441 in k17438 in k17435 in k17432 in k17429 in k17426 in k17423 in k17420 in k17417 in k17414 in k17411 in k17408 in k17269 in k17266 in k17263 in k17260 in k17204 in k17201 in k17198 in k17195 in k17192 in k17189 in k17186 in k17183 in k15938 in k15869 in k15676 in k15673 in k15568 in k15517 in k7924 in k7921 in k5905 in k5612 in k5609 in k5605 in k5314 in k5311 in k5308 in k5305 */
static void C_ccall f_25692(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_25692,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_25696,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("error");
t4=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[21],((C_word*)t0)[2]);}
else{
t4=t2;
f_25696(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k25694 in k25690 in mm:make-prog in k22468 in k18948 in k18945 in k18942 in k18939 in k18528 in k18525 in k18522 in k18519 in k18516 in k17994 in k17991 in k17468 in k17465 in k17462 in k17459 in k17456 in k17453 in k17450 in k17447 in k17444 in k17441 in k17438 in k17435 in k17432 in k17429 in k17426 in k17423 in k17420 in k17417 in k17414 in k17411 in k17408 in k17269 in k17266 in k17263 in k17260 in k17204 in k17201 in k17198 in k17195 in k17192 in k17189 in k17186 in k17183 in k15938 in k15869 in k15676 in k15673 in k15568 in k15517 in k7924 in k7921 in k5905 in k5612 in k5609 in k5605 in k5314 in k5311 in k5308 in k5305 */
static void C_ccall f_25696(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_25332(t7,t6);}

/* k25655 in mm:make-prog in k22468 in k18948 in k18945 in k18942 in k18939 in k18528 in k18525 in k18522 in k18519 in k18516 in k17994 in k17991 in k17468 in k17465 in k17462 in k17459 in k17456 in k17453 in k17450 in k17447 in k17444 in k17441 in k17438 in k17435 in k17432 in k17429 in k17426 in k17423 in k17420 in k17417 in k17414 in k17411 in k17408 in k17269 in k17266 in k17263 in k17260 in k17204 in k17201 in k17198 in k17195 in k17192 in k17189 in k17186 in k17183 in k15938 in k15869 in k15676 in k15673 in k15568 in k15517 in k7924 in k7921 in k5905 in k5612 in k5609 in k5605 in k5314 in k5311 in k5308 in k5305 */
static void C_ccall f_25657(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_25657,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_25661,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("error");
t4=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[21],((C_word*)t0)[2]);}
else{
t4=t2;
f_25661(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k25659 in k25655 in mm:make-prog in k22468 in k18948 in k18945 in k18942 in k18939 in k18528 in k18525 in k18522 in k18519 in k18516 in k17994 in k17991 in k17468 in k17465 in k17462 in k17459 in k17456 in k17453 in k17450 in k17447 in k17444 in k17441 in k17438 in k17435 in k17432 in k17429 in k17426 in k17423 in k17420 in k17417 in k17414 in k17411 in k17408 in k17269 in k17266 in k17263 in k17260 in k17204 in k17201 in k17198 in k17195 in k17192 in k17189 in k17186 in k17183 in k15938 in k15869 in k15676 in k15673 in k15568 in k15517 in k7924 in k7921 in k5905 in k5612 in k5609 in k5605 in k5314 in k5311 in k5308 in k5305 */
static void C_ccall f_25661(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_25332(t7,t6);}

/* k25330 in mm:make-prog in k22468 in k18948 in k18945 in k18942 in k18939 in k18528 in k18525 in k18522 in k18519 in k18516 in k17994 in k17991 in k17468 in k17465 in k17462 in k17459 in k17456 in k17453 in k17450 in k17447 in k17444 in k17441 in k17438 in k17435 in k17432 in k17429 in k17426 in k17423 in k17420 in k17417 in k17414 in k17411 in k17408 in k17269 in k17266 in k17263 in k17260 in k17204 in k17201 in k17198 in k17195 in k17192 in k17189 in k17186 in k17183 in k15938 in k15869 in k15676 in k15673 in k15568 in k15517 in k7924 in k7921 in k5905 in k5612 in k5609 in k5605 in k5314 in k5311 in k5308 in k5305 */
static void C_fcall f_25332(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word ab[42],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_25332,NULL,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|11,a[1]=(C_word)f_25335,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],a[7]=((C_word*)t0)[7],a[8]=((C_word*)t0)[8],a[9]=((C_word*)t0)[9],a[10]=((C_word*)t0)[10],a[11]=((C_word*)t0)[11],tmp=(C_word)a,a+=12,tmp);
if(C_truep((C_word)C_i_nullp(((C_word*)((C_word*)t0)[7])[1]))){
t3=t2;
f_25335(t3,C_SCHEME_UNDEFINED);}
else{
t3=(C_word)C_i_car(((C_word*)((C_word*)t0)[7])[1]);
t4=(C_word)C_eqp(t3,lf[577]);
if(C_truep(t4)){
t5=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_25522,a[2]=((C_word*)t0)[6],a[3]=t2,a[4]=((C_word*)t0)[7],a[5]=((C_word*)t0)[4],a[6]=((C_word*)t0)[5],a[7]=((C_word*)t0)[10],tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)((C_word*)t0)[5])[1])){
C_trace("error");
t6=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t6))(4,t6,t5,lf[19],lf[577]);}
else{
t6=t5;
f_25522(2,t6,C_SCHEME_UNDEFINED);}}
else{
t5=(C_word)C_eqp(t3,lf[585]);
if(C_truep(t5)){
t6=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_25557,a[2]=((C_word*)t0)[6],a[3]=t2,a[4]=((C_word*)t0)[7],a[5]=((C_word*)t0)[4],a[6]=((C_word*)t0)[3],a[7]=((C_word*)t0)[8],tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)((C_word*)t0)[3])[1])){
C_trace("error");
t7=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t7))(4,t7,t6,lf[19],lf[585]);}
else{
t7=t6;
f_25557(2,t7,C_SCHEME_UNDEFINED);}}
else{
t6=(C_word)C_eqp(t3,lf[580]);
if(C_truep(t6)){
t7=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_25592,a[2]=((C_word*)t0)[6],a[3]=t2,a[4]=((C_word*)t0)[7],a[5]=((C_word*)t0)[4],a[6]=((C_word*)t0)[2],a[7]=((C_word*)t0)[9],tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)((C_word*)t0)[2])[1])){
C_trace("error");
t8=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t8))(4,t8,t7,lf[19],lf[580]);}
else{
t8=t7;
f_25592(2,t8,C_SCHEME_UNDEFINED);}}
else{
t7=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_25621,a[2]=t2,a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[8],a[5]=((C_word*)t0)[7],tmp=(C_word)a,a+=6,tmp);
if(C_truep(((C_word*)((C_word*)t0)[4])[1])){
C_trace("error");
t8=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t8))(4,t8,t7,lf[10],((C_word*)t0)[6]);}
else{
t8=t7;
f_25621(2,t8,C_SCHEME_UNDEFINED);}}}}}}

/* k25619 in k25330 in mm:make-prog in k22468 in k18948 in k18945 in k18942 in k18939 in k18528 in k18525 in k18522 in k18519 in k18516 in k17994 in k17991 in k17468 in k17465 in k17462 in k17459 in k17456 in k17453 in k17450 in k17447 in k17444 in k17441 in k17438 in k17435 in k17432 in k17429 in k17426 in k17423 in k17420 in k17417 in k17414 in k17411 in k17408 in k17269 in k17266 in k17263 in k17260 in k17204 in k17201 in k17198 in k17195 in k17192 in k17189 in k17186 in k17183 in k15938 in k15869 in k15676 in k15673 in k15568 in k15517 in k7924 in k7921 in k5905 in k5612 in k5609 in k5605 in k5314 in k5311 in k5308 in k5305 */
static void C_ccall f_25621(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_25621,2,t0,t1);}
t2=(C_word)C_i_car(((C_word*)((C_word*)t0)[5])[1]);
t3=C_mutate(((C_word *)((C_word*)t0)[4])+1,t2);
t4=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_25628,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[5],a[4]=((C_word*)t0)[3],tmp=(C_word)a,a+=5,tmp);
t5=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_25636,a[2]=((C_word*)t0)[4],a[3]=t4,tmp=(C_word)a,a+=4,tmp);
C_trace("keyword?");
t6=C_retrieve(lf[13]);
((C_proc3)C_retrieve_proc(t6))(3,t6,t5,((C_word*)((C_word*)t0)[4])[1]);}

/* k25634 in k25619 in k25330 in mm:make-prog in k22468 in k18948 in k18945 in k18942 in k18939 in k18528 in k18525 in k18522 in k18519 in k18516 in k17994 in k17991 in k17468 in k17465 in k17462 in k17459 in k17456 in k17453 in k17450 in k17447 in k17444 in k17441 in k17438 in k17435 in k17432 in k17429 in k17426 in k17423 in k17420 in k17417 in k17414 in k17411 in k17408 in k17269 in k17266 in k17263 in k17260 in k17204 in k17201 in k17198 in k17195 in k17192 in k17189 in k17186 in k17183 in k15938 in k15869 in k15676 in k15673 in k15568 in k15517 in k7924 in k7921 in k5905 in k5612 in k5609 in k5605 in k5314 in k5311 in k5308 in k5305 */
static void C_ccall f_25636(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
if(C_truep(t1)){
C_trace("error");
t2=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t2))(4,t2,((C_word*)t0)[3],lf[14],((C_word*)((C_word*)t0)[2])[1]);}
else{
t2=((C_word*)t0)[3];
f_25628(2,t2,C_SCHEME_UNDEFINED);}}

/* k25626 in k25619 in k25330 in mm:make-prog in k22468 in k18948 in k18945 in k18942 in k18939 in k18528 in k18525 in k18522 in k18519 in k18516 in k17994 in k17991 in k17468 in k17465 in k17462 in k17459 in k17456 in k17453 in k17450 in k17447 in k17444 in k17441 in k17438 in k17435 in k17432 in k17429 in k17426 in k17423 in k17420 in k17417 in k17414 in k17411 in k17408 in k17269 in k17266 in k17263 in k17260 in k17204 in k17201 in k17198 in k17195 in k17192 in k17189 in k17186 in k17183 in k15938 in k15869 in k15676 in k15673 in k15568 in k15517 in k7924 in k7921 in k5905 in k5612 in k5609 in k5605 in k5314 in k5311 in k5308 in k5305 */
static void C_ccall f_25628(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word *a;
t2=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[3])[1]);
t4=C_mutate(((C_word *)((C_word*)t0)[3])+1,t3);
t5=((C_word*)t0)[2];
f_25335(t5,t4);}

/* k25590 in k25330 in mm:make-prog in k22468 in k18948 in k18945 in k18942 in k18939 in k18528 in k18525 in k18522 in k18519 in k18516 in k17994 in k17991 in k17468 in k17465 in k17462 in k17459 in k17456 in k17453 in k17450 in k17447 in k17444 in k17441 in k17438 in k17435 in k17432 in k17429 in k17426 in k17423 in k17420 in k17417 in k17414 in k17411 in k17408 in k17269 in k17266 in k17263 in k17260 in k17204 in k17201 in k17198 in k17195 in k17192 in k17189 in k17186 in k17183 in k15938 in k15869 in k15676 in k15673 in k15568 in k15517 in k7924 in k7921 in k5905 in k5612 in k5609 in k5605 in k5314 in k5311 in k5308 in k5305 */
static void C_ccall f_25592(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_25592,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_25596,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("error");
t4=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[21],((C_word*)t0)[2]);}
else{
t4=t2;
f_25596(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k25594 in k25590 in k25330 in mm:make-prog in k22468 in k18948 in k18945 in k18942 in k18939 in k18528 in k18525 in k18522 in k18519 in k18516 in k17994 in k17991 in k17468 in k17465 in k17462 in k17459 in k17456 in k17453 in k17450 in k17447 in k17444 in k17441 in k17438 in k17435 in k17432 in k17429 in k17426 in k17423 in k17420 in k17417 in k17414 in k17411 in k17408 in k17269 in k17266 in k17263 in k17260 in k17204 in k17201 in k17198 in k17195 in k17192 in k17189 in k17186 in k17183 in k15938 in k15869 in k15676 in k15673 in k15568 in k15517 in k7924 in k7921 in k5905 in k5612 in k5609 in k5605 in k5314 in k5311 in k5308 in k5305 */
static void C_ccall f_25596(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_25335(t7,t6);}

/* k25555 in k25330 in mm:make-prog in k22468 in k18948 in k18945 in k18942 in k18939 in k18528 in k18525 in k18522 in k18519 in k18516 in k17994 in k17991 in k17468 in k17465 in k17462 in k17459 in k17456 in k17453 in k17450 in k17447 in k17444 in k17441 in k17438 in k17435 in k17432 in k17429 in k17426 in k17423 in k17420 in k17417 in k17414 in k17411 in k17408 in k17269 in k17266 in k17263 in k17260 in k17204 in k17201 in k17198 in k17195 in k17192 in k17189 in k17186 in k17183 in k15938 in k15869 in k15676 in k15673 in k15568 in k15517 in k7924 in k7921 in k5905 in k5612 in k5609 in k5605 in k5314 in k5311 in k5308 in k5305 */
static void C_ccall f_25557(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_25557,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_25561,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("error");
t4=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[21],((C_word*)t0)[2]);}
else{
t4=t2;
f_25561(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k25559 in k25555 in k25330 in mm:make-prog in k22468 in k18948 in k18945 in k18942 in k18939 in k18528 in k18525 in k18522 in k18519 in k18516 in k17994 in k17991 in k17468 in k17465 in k17462 in k17459 in k17456 in k17453 in k17450 in k17447 in k17444 in k17441 in k17438 in k17435 in k17432 in k17429 in k17426 in k17423 in k17420 in k17417 in k17414 in k17411 in k17408 in k17269 in k17266 in k17263 in k17260 in k17204 in k17201 in k17198 in k17195 in k17192 in k17189 in k17186 in k17183 in k15938 in k15869 in k15676 in k15673 in k15568 in k15517 in k7924 in k7921 in k5905 in k5612 in k5609 in k5605 in k5314 in k5311 in k5308 in k5305 */
static void C_ccall f_25561(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_25335(t7,t6);}

/* k25520 in k25330 in mm:make-prog in k22468 in k18948 in k18945 in k18942 in k18939 in k18528 in k18525 in k18522 in k18519 in k18516 in k17994 in k17991 in k17468 in k17465 in k17462 in k17459 in k17456 in k17453 in k17450 in k17447 in k17444 in k17441 in k17438 in k17435 in k17432 in k17429 in k17426 in k17423 in k17420 in k17417 in k17414 in k17411 in k17408 in k17269 in k17266 in k17263 in k17260 in k17204 in k17201 in k17198 in k17195 in k17192 in k17189 in k17186 in k17183 in k15938 in k15869 in k15676 in k15673 in k15568 in k15517 in k7924 in k7921 in k5905 in k5612 in k5609 in k5605 in k5314 in k5311 in k5308 in k5305 */
static void C_ccall f_25522(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_25522,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_25526,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("error");
t4=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[21],((C_word*)t0)[2]);}
else{
t4=t2;
f_25526(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k25524 in k25520 in k25330 in mm:make-prog in k22468 in k18948 in k18945 in k18942 in k18939 in k18528 in k18525 in k18522 in k18519 in k18516 in k17994 in k17991 in k17468 in k17465 in k17462 in k17459 in k17456 in k17453 in k17450 in k17447 in k17444 in k17441 in k17438 in k17435 in k17432 in k17429 in k17426 in k17423 in k17420 in k17417 in k17414 in k17411 in k17408 in k17269 in k17266 in k17263 in k17260 in k17204 in k17201 in k17198 in k17195 in k17192 in k17189 in k17186 in k17183 in k15938 in k15869 in k15676 in k15673 in k15568 in k15517 in k7924 in k7921 in k5905 in k5612 in k5609 in k5605 in k5314 in k5311 in k5308 in k5305 */
static void C_ccall f_25526(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_25335(t7,t6);}

/* k25333 in k25330 in mm:make-prog in k22468 in k18948 in k18945 in k18942 in k18939 in k18528 in k18525 in k18522 in k18519 in k18516 in k17994 in k17991 in k17468 in k17465 in k17462 in k17459 in k17456 in k17453 in k17450 in k17447 in k17444 in k17441 in k17438 in k17435 in k17432 in k17429 in k17426 in k17423 in k17420 in k17417 in k17414 in k17411 in k17408 in k17269 in k17266 in k17263 in k17260 in k17204 in k17201 in k17198 in k17195 in k17192 in k17189 in k17186 in k17183 in k15938 in k15869 in k15676 in k15673 in k15568 in k15517 in k7924 in k7921 in k5905 in k5612 in k5609 in k5605 in k5314 in k5311 in k5308 in k5305 */
static void C_fcall f_25335(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word ab[38],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_25335,NULL,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_25338,a[2]=((C_word*)t0)[6],a[3]=((C_word*)t0)[7],a[4]=((C_word*)t0)[8],a[5]=((C_word*)t0)[9],a[6]=((C_word*)t0)[10],a[7]=((C_word*)t0)[11],tmp=(C_word)a,a+=8,tmp);
if(C_truep((C_word)C_i_nullp(((C_word*)((C_word*)t0)[7])[1]))){
t3=t2;
f_25338(t3,C_SCHEME_UNDEFINED);}
else{
t3=(C_word)C_i_car(((C_word*)((C_word*)t0)[7])[1]);
t4=(C_word)C_eqp(t3,lf[577]);
if(C_truep(t4)){
t5=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_25387,a[2]=((C_word*)t0)[6],a[3]=t2,a[4]=((C_word*)t0)[7],a[5]=((C_word*)t0)[4],a[6]=((C_word*)t0)[5],a[7]=((C_word*)t0)[10],tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)((C_word*)t0)[5])[1])){
C_trace("error");
t6=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t6))(4,t6,t5,lf[19],lf[577]);}
else{
t6=t5;
f_25387(2,t6,C_SCHEME_UNDEFINED);}}
else{
t5=(C_word)C_eqp(t3,lf[585]);
if(C_truep(t5)){
t6=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_25422,a[2]=((C_word*)t0)[6],a[3]=t2,a[4]=((C_word*)t0)[7],a[5]=((C_word*)t0)[4],a[6]=((C_word*)t0)[3],a[7]=((C_word*)t0)[8],tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)((C_word*)t0)[3])[1])){
C_trace("error");
t7=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t7))(4,t7,t6,lf[19],lf[585]);}
else{
t7=t6;
f_25422(2,t7,C_SCHEME_UNDEFINED);}}
else{
t6=(C_word)C_eqp(t3,lf[580]);
if(C_truep(t6)){
t7=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_25457,a[2]=((C_word*)t0)[6],a[3]=t2,a[4]=((C_word*)t0)[7],a[5]=((C_word*)t0)[4],a[6]=((C_word*)t0)[2],a[7]=((C_word*)t0)[9],tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)((C_word*)t0)[2])[1])){
C_trace("error");
t8=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t8))(4,t8,t7,lf[19],lf[580]);}
else{
t8=t7;
f_25457(2,t8,C_SCHEME_UNDEFINED);}}
else{
t7=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_25486,a[2]=t2,a[3]=((C_word*)t0)[2],a[4]=((C_word*)t0)[9],a[5]=((C_word*)t0)[7],tmp=(C_word)a,a+=6,tmp);
if(C_truep(((C_word*)((C_word*)t0)[4])[1])){
C_trace("error");
t8=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t8))(4,t8,t7,lf[10],((C_word*)t0)[6]);}
else{
t8=t7;
f_25486(2,t8,C_SCHEME_UNDEFINED);}}}}}}

/* k25484 in k25333 in k25330 in mm:make-prog in k22468 in k18948 in k18945 in k18942 in k18939 in k18528 in k18525 in k18522 in k18519 in k18516 in k17994 in k17991 in k17468 in k17465 in k17462 in k17459 in k17456 in k17453 in k17450 in k17447 in k17444 in k17441 in k17438 in k17435 in k17432 in k17429 in k17426 in k17423 in k17420 in k17417 in k17414 in k17411 in k17408 in k17269 in k17266 in k17263 in k17260 in k17204 in k17201 in k17198 in k17195 in k17192 in k17189 in k17186 in k17183 in k15938 in k15869 in k15676 in k15673 in k15568 in k15517 in k7924 in k7921 in k5905 in k5612 in k5609 in k5605 in k5314 in k5311 in k5308 in k5305 */
static void C_ccall f_25486(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_25486,2,t0,t1);}
t2=(C_word)C_i_car(((C_word*)((C_word*)t0)[5])[1]);
t3=C_mutate(((C_word *)((C_word*)t0)[4])+1,t2);
t4=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_25493,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[5],a[4]=((C_word*)t0)[3],tmp=(C_word)a,a+=5,tmp);
t5=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_25501,a[2]=((C_word*)t0)[4],a[3]=t4,tmp=(C_word)a,a+=4,tmp);
C_trace("keyword?");
t6=C_retrieve(lf[13]);
((C_proc3)C_retrieve_proc(t6))(3,t6,t5,((C_word*)((C_word*)t0)[4])[1]);}

/* k25499 in k25484 in k25333 in k25330 in mm:make-prog in k22468 in k18948 in k18945 in k18942 in k18939 in k18528 in k18525 in k18522 in k18519 in k18516 in k17994 in k17991 in k17468 in k17465 in k17462 in k17459 in k17456 in k17453 in k17450 in k17447 in k17444 in k17441 in k17438 in k17435 in k17432 in k17429 in k17426 in k17423 in k17420 in k17417 in k17414 in k17411 in k17408 in k17269 in k17266 in k17263 in k17260 in k17204 in k17201 in k17198 in k17195 in k17192 in k17189 in k17186 in k17183 in k15938 in k15869 in k15676 in k15673 in k15568 in k15517 in k7924 in k7921 in k5905 in k5612 in k5609 in k5605 in k5314 in k5311 in k5308 in k5305 */
static void C_ccall f_25501(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
if(C_truep(t1)){
C_trace("error");
t2=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t2))(4,t2,((C_word*)t0)[3],lf[14],((C_word*)((C_word*)t0)[2])[1]);}
else{
t2=((C_word*)t0)[3];
f_25493(2,t2,C_SCHEME_UNDEFINED);}}

/* k25491 in k25484 in k25333 in k25330 in mm:make-prog in k22468 in k18948 in k18945 in k18942 in k18939 in k18528 in k18525 in k18522 in k18519 in k18516 in k17994 in k17991 in k17468 in k17465 in k17462 in k17459 in k17456 in k17453 in k17450 in k17447 in k17444 in k17441 in k17438 in k17435 in k17432 in k17429 in k17426 in k17423 in k17420 in k17417 in k17414 in k17411 in k17408 in k17269 in k17266 in k17263 in k17260 in k17204 in k17201 in k17198 in k17195 in k17192 in k17189 in k17186 in k17183 in k15938 in k15869 in k15676 in k15673 in k15568 in k15517 in k7924 in k7921 in k5905 in k5612 in k5609 in k5605 in k5314 in k5311 in k5308 in k5305 */
static void C_ccall f_25493(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word *a;
t2=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[3])[1]);
t4=C_mutate(((C_word *)((C_word*)t0)[3])+1,t3);
t5=((C_word*)t0)[2];
f_25338(t5,t4);}

/* k25455 in k25333 in k25330 in mm:make-prog in k22468 in k18948 in k18945 in k18942 in k18939 in k18528 in k18525 in k18522 in k18519 in k18516 in k17994 in k17991 in k17468 in k17465 in k17462 in k17459 in k17456 in k17453 in k17450 in k17447 in k17444 in k17441 in k17438 in k17435 in k17432 in k17429 in k17426 in k17423 in k17420 in k17417 in k17414 in k17411 in k17408 in k17269 in k17266 in k17263 in k17260 in k17204 in k17201 in k17198 in k17195 in k17192 in k17189 in k17186 in k17183 in k15938 in k15869 in k15676 in k15673 in k15568 in k15517 in k7924 in k7921 in k5905 in k5612 in k5609 in k5605 in k5314 in k5311 in k5308 in k5305 */
static void C_ccall f_25457(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_25457,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_25461,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("error");
t4=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[21],((C_word*)t0)[2]);}
else{
t4=t2;
f_25461(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k25459 in k25455 in k25333 in k25330 in mm:make-prog in k22468 in k18948 in k18945 in k18942 in k18939 in k18528 in k18525 in k18522 in k18519 in k18516 in k17994 in k17991 in k17468 in k17465 in k17462 in k17459 in k17456 in k17453 in k17450 in k17447 in k17444 in k17441 in k17438 in k17435 in k17432 in k17429 in k17426 in k17423 in k17420 in k17417 in k17414 in k17411 in k17408 in k17269 in k17266 in k17263 in k17260 in k17204 in k17201 in k17198 in k17195 in k17192 in k17189 in k17186 in k17183 in k15938 in k15869 in k15676 in k15673 in k15568 in k15517 in k7924 in k7921 in k5905 in k5612 in k5609 in k5605 in k5314 in k5311 in k5308 in k5305 */
static void C_ccall f_25461(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_25338(t7,t6);}

/* k25420 in k25333 in k25330 in mm:make-prog in k22468 in k18948 in k18945 in k18942 in k18939 in k18528 in k18525 in k18522 in k18519 in k18516 in k17994 in k17991 in k17468 in k17465 in k17462 in k17459 in k17456 in k17453 in k17450 in k17447 in k17444 in k17441 in k17438 in k17435 in k17432 in k17429 in k17426 in k17423 in k17420 in k17417 in k17414 in k17411 in k17408 in k17269 in k17266 in k17263 in k17260 in k17204 in k17201 in k17198 in k17195 in k17192 in k17189 in k17186 in k17183 in k15938 in k15869 in k15676 in k15673 in k15568 in k15517 in k7924 in k7921 in k5905 in k5612 in k5609 in k5605 in k5314 in k5311 in k5308 in k5305 */
static void C_ccall f_25422(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_25422,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_25426,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("error");
t4=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[21],((C_word*)t0)[2]);}
else{
t4=t2;
f_25426(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k25424 in k25420 in k25333 in k25330 in mm:make-prog in k22468 in k18948 in k18945 in k18942 in k18939 in k18528 in k18525 in k18522 in k18519 in k18516 in k17994 in k17991 in k17468 in k17465 in k17462 in k17459 in k17456 in k17453 in k17450 in k17447 in k17444 in k17441 in k17438 in k17435 in k17432 in k17429 in k17426 in k17423 in k17420 in k17417 in k17414 in k17411 in k17408 in k17269 in k17266 in k17263 in k17260 in k17204 in k17201 in k17198 in k17195 in k17192 in k17189 in k17186 in k17183 in k15938 in k15869 in k15676 in k15673 in k15568 in k15517 in k7924 in k7921 in k5905 in k5612 in k5609 in k5605 in k5314 in k5311 in k5308 in k5305 */
static void C_ccall f_25426(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_25338(t7,t6);}

/* k25385 in k25333 in k25330 in mm:make-prog in k22468 in k18948 in k18945 in k18942 in k18939 in k18528 in k18525 in k18522 in k18519 in k18516 in k17994 in k17991 in k17468 in k17465 in k17462 in k17459 in k17456 in k17453 in k17450 in k17447 in k17444 in k17441 in k17438 in k17435 in k17432 in k17429 in k17426 in k17423 in k17420 in k17417 in k17414 in k17411 in k17408 in k17269 in k17266 in k17263 in k17260 in k17204 in k17201 in k17198 in k17195 in k17192 in k17189 in k17186 in k17183 in k15938 in k15869 in k15676 in k15673 in k15568 in k15517 in k7924 in k7921 in k5905 in k5612 in k5609 in k5605 in k5314 in k5311 in k5308 in k5305 */
static void C_ccall f_25387(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_25387,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_25391,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("error");
t4=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[21],((C_word*)t0)[2]);}
else{
t4=t2;
f_25391(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k25389 in k25385 in k25333 in k25330 in mm:make-prog in k22468 in k18948 in k18945 in k18942 in k18939 in k18528 in k18525 in k18522 in k18519 in k18516 in k17994 in k17991 in k17468 in k17465 in k17462 in k17459 in k17456 in k17453 in k17450 in k17447 in k17444 in k17441 in k17438 in k17435 in k17432 in k17429 in k17426 in k17423 in k17420 in k17417 in k17414 in k17411 in k17408 in k17269 in k17266 in k17263 in k17260 in k17204 in k17201 in k17198 in k17195 in k17192 in k17189 in k17186 in k17183 in k15938 in k15869 in k15676 in k15673 in k15568 in k15517 in k7924 in k7921 in k5905 in k5612 in k5609 in k5605 in k5314 in k5311 in k5308 in k5305 */
static void C_ccall f_25391(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_25338(t7,t6);}

/* k25336 in k25333 in k25330 in mm:make-prog in k22468 in k18948 in k18945 in k18942 in k18939 in k18528 in k18525 in k18522 in k18519 in k18516 in k17994 in k17991 in k17468 in k17465 in k17462 in k17459 in k17456 in k17453 in k17450 in k17447 in k17444 in k17441 in k17438 in k17435 in k17432 in k17429 in k17426 in k17423 in k17420 in k17417 in k17414 in k17411 in k17408 in k17269 in k17266 in k17263 in k17260 in k17204 in k17201 in k17198 in k17195 in k17192 in k17189 in k17186 in k17183 in k15938 in k15869 in k15676 in k15673 in k15568 in k15517 in k7924 in k7921 in k5905 in k5612 in k5609 in k5605 in k5314 in k5311 in k5308 in k5305 */
static void C_fcall f_25338(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[6],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_25338,NULL,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_25341,a[2]=((C_word*)t0)[4],a[3]=((C_word*)t0)[5],a[4]=((C_word*)t0)[6],a[5]=((C_word*)t0)[7],tmp=(C_word)a,a+=6,tmp);
if(C_truep((C_word)C_i_nullp(((C_word*)((C_word*)t0)[3])[1]))){
t3=t2;
f_25341(2,t3,C_SCHEME_UNDEFINED);}
else{
C_trace("error");
t3=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t3))(4,t3,t2,lf[5],((C_word*)t0)[2]);}}

/* k25339 in k25336 in k25333 in k25330 in mm:make-prog in k22468 in k18948 in k18945 in k18942 in k18939 in k18528 in k18525 in k18522 in k18519 in k18516 in k17994 in k17991 in k17468 in k17465 in k17462 in k17459 in k17456 in k17453 in k17450 in k17447 in k17444 in k17441 in k17438 in k17435 in k17432 in k17429 in k17426 in k17423 in k17420 in k17417 in k17414 in k17411 in k17408 in k17269 in k17266 in k17263 in k17260 in k17204 in k17201 in k17198 in k17195 in k17192 in k17189 in k17186 in k17183 in k15938 in k15869 in k15676 in k15673 in k15568 in k15517 in k7924 in k7921 in k5905 in k5612 in k5609 in k5605 in k5314 in k5311 in k5308 in k5305 */
static void C_ccall f_25341(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word ab[3],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_25341,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_25345,a[2]=((C_word)li354),tmp=(C_word)a,a+=3,tmp);
((C_proc7)(void*)(*((C_word*)t2+1)))(7,t2,((C_word*)t0)[5],C_fix(12),((C_word*)((C_word*)t0)[4])[1],((C_word*)((C_word*)t0)[3])[1],((C_word*)((C_word*)t0)[2])[1],C_fix(0));}

/* f_25345 in k25339 in k25336 in k25333 in k25330 in mm:make-prog in k22468 in k18948 in k18945 in k18942 in k18939 in k18528 in k18525 in k18522 in k18519 in k18516 in k17994 in k17991 in k17468 in k17465 in k17462 in k17459 in k17456 in k17453 in k17450 in k17447 in k17444 in k17441 in k17438 in k17435 in k17432 in k17429 in k17426 in k17423 in k17420 in k17417 in k17414 in k17411 in k17408 in k17269 in k17266 in k17263 in k17260 in k17204 in k17201 in k17198 in k17195 in k17192 in k17189 in k17186 in k17183 in k15938 in k15869 in k15676 in k15673 in k15568 in k15517 in k7924 in k7921 in k5905 in k5612 in k5609 in k5605 in k5314 in k5311 in k5308 in k5305 */
static void C_ccall f_25345(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4,C_word t5,C_word t6){
C_word tmp;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word ab[5],*a=ab;
if(c!=7) C_bad_argc_2(c,7,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr7,(void*)f_25345,7,t0,t1,t2,t3,t4,t5,t6);}
t7=(C_word)C_a_i_bytevector(&a,1,C_fix(3));
t8=(C_word)C_i_foreign_fixnum_argumentp(t2);
t9=(C_word)C_i_foreign_flonum_argumentp(t3);
t10=(C_word)C_i_foreign_fixnum_argumentp(t4);
t11=(C_word)C_i_foreign_fixnum_argumentp(t5);
t12=(C_word)C_i_foreign_fixnum_argumentp(t6);
t13=t1;
((C_proc2)(void*)(*((C_word*)t13+1)))(2,t13,(C_word)stub4458(t7,t8,t9,t10,t11,t12));}

/* mm:ctrl? in k22468 in k18948 in k18945 in k18942 in k18939 in k18528 in k18525 in k18522 in k18519 in k18516 in k17994 in k17991 in k17468 in k17465 in k17462 in k17459 in k17456 in k17453 in k17450 in k17447 in k17444 in k17441 in k17438 in k17435 in k17432 in k17429 in k17426 in k17423 in k17420 in k17417 in k17414 in k17411 in k17408 in k17269 in k17266 in k17263 in k17260 in k17204 in k17201 in k17198 in k17195 in k17192 in k17189 in k17186 in k17183 in k15938 in k15869 in k15676 in k15673 in k15568 in k15517 in k7924 in k7921 in k5905 in k5612 in k5609 in k5605 in k5314 in k5311 in k5308 in k5305 */
static void C_ccall f_25309(C_word c,C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word ab[3],*a=ab;
if(c!=3) C_bad_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr3,(void*)f_25309,3,t0,t1,t2);}
t3=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_25314,a[2]=((C_word)li352),tmp=(C_word)a,a+=3,tmp);
((C_proc4)(void*)(*((C_word*)t3+1)))(4,t3,t1,t2,C_fix(11));}

/* f_25314 in mm:ctrl? in k22468 in k18948 in k18945 in k18942 in k18939 in k18528 in k18525 in k18522 in k18519 in k18516 in k17994 in k17991 in k17468 in k17465 in k17462 in k17459 in k17456 in k17453 in k17450 in k17447 in k17444 in k17441 in k17438 in k17435 in k17432 in k17429 in k17426 in k17423 in k17420 in k17417 in k17414 in k17411 in k17408 in k17269 in k17266 in k17263 in k17260 in k17204 in k17201 in k17198 in k17195 in k17192 in k17189 in k17186 in k17183 in k15938 in k15869 in k15676 in k15673 in k15568 in k15517 in k7924 in k7921 in k5905 in k5612 in k5609 in k5605 in k5314 in k5311 in k5308 in k5305 */
static void C_ccall f_25314(C_word c,C_word t0,C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word t6;
C_word *a;
if(c!=4) C_bad_argc_2(c,4,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr4,(void*)f_25314,4,t0,t1,t2,t3);}
t4=(C_truep(t2)?(C_word)C_i_foreign_pointer_argumentp(t2):C_SCHEME_FALSE);
t5=(C_word)C_i_foreign_fixnum_argumentp(t3);
t6=t1;
((C_proc2)(void*)(*((C_word*)t6+1)))(2,t6,(C_word)stub4379(C_SCHEME_UNDEFINED,t4,t5));}

/* mm:make-ctrl in k22468 in k18948 in k18945 in k18942 in k18939 in k18528 in k18525 in k18522 in k18519 in k18516 in k17994 in k17991 in k17468 in k17465 in k17462 in k17459 in k17456 in k17453 in k17450 in k17447 in k17444 in k17441 in k17438 in k17435 in k17432 in k17429 in k17426 in k17423 in k17420 in k17417 in k17414 in k17411 in k17408 in k17269 in k17266 in k17263 in k17260 in k17204 in k17201 in k17198 in k17195 in k17192 in k17189 in k17186 in k17183 in k15938 in k15869 in k15676 in k15673 in k15568 in k15517 in k7924 in k7921 in k5905 in k5612 in k5609 in k5605 in k5314 in k5311 in k5308 in k5305 */
static void C_ccall f_24580(C_word c,C_word t0,C_word t1,...){
C_word tmp;
C_word t2;
va_list v;
C_word *a,c2=c;
C_save_rest(t1,c2,2);
C_check_for_interrupt;
if(!C_demand(c*C_SIZEOF_PAIR+72)){
C_save_and_reclaim((void*)tr2r,(void*)f_24580r,2,t0,t1);}
else{
a=C_alloc((c-2)*3);
t2=C_restore_rest(a,C_rest_count(0));
f_24580r(t0,t1,t2);}}

static void C_ccall f_24580r(C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word t14;
C_word t15;
C_word t16;
C_word t17;
C_word t18;
C_word t19;
C_word t20;
C_word t21;
C_word t22;
C_word t23;
C_word t24;
C_word t25;
C_word t26;
C_word t27;
C_word t28;
C_word t29;
C_word t30;
C_word t31;
C_word t32;
C_word t33;
C_word t34;
C_word *a=C_alloc(72);
t3=C_fix(0);
t4=(*a=C_VECTOR_TYPE|1,a[1]=t3,tmp=(C_word)a,a+=2,tmp);
t5=C_fix(0);
t6=(*a=C_VECTOR_TYPE|1,a[1]=t5,tmp=(C_word)a,a+=2,tmp);
t7=C_fix(0);
t8=(*a=C_VECTOR_TYPE|1,a[1]=t7,tmp=(C_word)a,a+=2,tmp);
t9=C_fix(0);
t10=(*a=C_VECTOR_TYPE|1,a[1]=t9,tmp=(C_word)a,a+=2,tmp);
t11=C_SCHEME_FALSE;
t12=(*a=C_VECTOR_TYPE|1,a[1]=t11,tmp=(C_word)a,a+=2,tmp);
t13=C_SCHEME_FALSE;
t14=(*a=C_VECTOR_TYPE|1,a[1]=t13,tmp=(C_word)a,a+=2,tmp);
t15=C_SCHEME_FALSE;
t16=(*a=C_VECTOR_TYPE|1,a[1]=t15,tmp=(C_word)a,a+=2,tmp);
t17=C_SCHEME_FALSE;
t18=(*a=C_VECTOR_TYPE|1,a[1]=t17,tmp=(C_word)a,a+=2,tmp);
t19=t2;
t20=(*a=C_VECTOR_TYPE|1,a[1]=t19,tmp=(C_word)a,a+=2,tmp);
t21=C_SCHEME_FALSE;
t22=(*a=C_VECTOR_TYPE|1,a[1]=t21,tmp=(C_word)a,a+=2,tmp);
t23=(*a=C_CLOSURE_TYPE|13,a[1]=(C_word)f_24584,a[2]=t18,a[3]=t16,a[4]=t14,a[5]=t22,a[6]=t12,a[7]=t2,a[8]=t20,a[9]=t8,a[10]=t6,a[11]=t10,a[12]=t4,a[13]=t1,tmp=(C_word)a,a+=14,tmp);
if(C_truep((C_word)C_i_nullp(((C_word*)t20)[1]))){
t24=t23;
f_24584(t24,C_SCHEME_UNDEFINED);}
else{
t24=(C_word)C_i_car(((C_word*)t20)[1]);
t25=(C_word)C_eqp(t24,lf[577]);
if(C_truep(t25)){
t26=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_25152,a[2]=t2,a[3]=t23,a[4]=t20,a[5]=t22,a[6]=t12,a[7]=t4,tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)t12)[1])){
C_trace("error");
t27=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t27))(4,t27,t26,lf[19],lf[577]);}
else{
t27=t26;
f_25152(2,t27,C_SCHEME_UNDEFINED);}}
else{
t26=(C_word)C_eqp(t24,lf[588]);
if(C_truep(t26)){
t27=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_25187,a[2]=t2,a[3]=t23,a[4]=t20,a[5]=t22,a[6]=t14,a[7]=t6,tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)t14)[1])){
C_trace("error");
t28=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t28))(4,t28,t27,lf[19],lf[588]);}
else{
t28=t27;
f_25187(2,t28,C_SCHEME_UNDEFINED);}}
else{
t27=(C_word)C_eqp(t24,lf[585]);
if(C_truep(t27)){
t28=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_25222,a[2]=t2,a[3]=t23,a[4]=t20,a[5]=t22,a[6]=t16,a[7]=t8,tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)t16)[1])){
C_trace("error");
t29=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t29))(4,t29,t28,lf[19],lf[585]);}
else{
t29=t28;
f_25222(2,t29,C_SCHEME_UNDEFINED);}}
else{
t28=(C_word)C_eqp(t24,lf[580]);
if(C_truep(t28)){
t29=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_25257,a[2]=t2,a[3]=t23,a[4]=t20,a[5]=t22,a[6]=t18,a[7]=t10,tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)t18)[1])){
C_trace("error");
t30=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t30))(4,t30,t29,lf[19],lf[580]);}
else{
t30=t29;
f_25257(2,t30,C_SCHEME_UNDEFINED);}}
else{
t29=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_25286,a[2]=t23,a[3]=t12,a[4]=t4,a[5]=t20,tmp=(C_word)a,a+=6,tmp);
if(C_truep(((C_word*)t22)[1])){
C_trace("error");
t30=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t30))(4,t30,t29,lf[10],t2);}
else{
t30=t29;
f_25286(2,t30,C_SCHEME_UNDEFINED);}}}}}}}

/* k25284 in mm:make-ctrl in k22468 in k18948 in k18945 in k18942 in k18939 in k18528 in k18525 in k18522 in k18519 in k18516 in k17994 in k17991 in k17468 in k17465 in k17462 in k17459 in k17456 in k17453 in k17450 in k17447 in k17444 in k17441 in k17438 in k17435 in k17432 in k17429 in k17426 in k17423 in k17420 in k17417 in k17414 in k17411 in k17408 in k17269 in k17266 in k17263 in k17260 in k17204 in k17201 in k17198 in k17195 in k17192 in k17189 in k17186 in k17183 in k15938 in k15869 in k15676 in k15673 in k15568 in k15517 in k7924 in k7921 in k5905 in k5612 in k5609 in k5605 in k5314 in k5311 in k5308 in k5305 */
static void C_ccall f_25286(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_25286,2,t0,t1);}
t2=(C_word)C_i_car(((C_word*)((C_word*)t0)[5])[1]);
t3=C_mutate(((C_word *)((C_word*)t0)[4])+1,t2);
t4=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_25293,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[5],a[4]=((C_word*)t0)[3],tmp=(C_word)a,a+=5,tmp);
t5=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_25301,a[2]=((C_word*)t0)[4],a[3]=t4,tmp=(C_word)a,a+=4,tmp);
C_trace("keyword?");
t6=C_retrieve(lf[13]);
((C_proc3)C_retrieve_proc(t6))(3,t6,t5,((C_word*)((C_word*)t0)[4])[1]);}

/* k25299 in k25284 in mm:make-ctrl in k22468 in k18948 in k18945 in k18942 in k18939 in k18528 in k18525 in k18522 in k18519 in k18516 in k17994 in k17991 in k17468 in k17465 in k17462 in k17459 in k17456 in k17453 in k17450 in k17447 in k17444 in k17441 in k17438 in k17435 in k17432 in k17429 in k17426 in k17423 in k17420 in k17417 in k17414 in k17411 in k17408 in k17269 in k17266 in k17263 in k17260 in k17204 in k17201 in k17198 in k17195 in k17192 in k17189 in k17186 in k17183 in k15938 in k15869 in k15676 in k15673 in k15568 in k15517 in k7924 in k7921 in k5905 in k5612 in k5609 in k5605 in k5314 in k5311 in k5308 in k5305 */
static void C_ccall f_25301(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
if(C_truep(t1)){
C_trace("error");
t2=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t2))(4,t2,((C_word*)t0)[3],lf[14],((C_word*)((C_word*)t0)[2])[1]);}
else{
t2=((C_word*)t0)[3];
f_25293(2,t2,C_SCHEME_UNDEFINED);}}

/* k25291 in k25284 in mm:make-ctrl in k22468 in k18948 in k18945 in k18942 in k18939 in k18528 in k18525 in k18522 in k18519 in k18516 in k17994 in k17991 in k17468 in k17465 in k17462 in k17459 in k17456 in k17453 in k17450 in k17447 in k17444 in k17441 in k17438 in k17435 in k17432 in k17429 in k17426 in k17423 in k17420 in k17417 in k17414 in k17411 in k17408 in k17269 in k17266 in k17263 in k17260 in k17204 in k17201 in k17198 in k17195 in k17192 in k17189 in k17186 in k17183 in k15938 in k15869 in k15676 in k15673 in k15568 in k15517 in k7924 in k7921 in k5905 in k5612 in k5609 in k5605 in k5314 in k5311 in k5308 in k5305 */
static void C_ccall f_25293(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word *a;
t2=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[3])[1]);
t4=C_mutate(((C_word *)((C_word*)t0)[3])+1,t3);
t5=((C_word*)t0)[2];
f_24584(t5,t4);}

/* k25255 in mm:make-ctrl in k22468 in k18948 in k18945 in k18942 in k18939 in k18528 in k18525 in k18522 in k18519 in k18516 in k17994 in k17991 in k17468 in k17465 in k17462 in k17459 in k17456 in k17453 in k17450 in k17447 in k17444 in k17441 in k17438 in k17435 in k17432 in k17429 in k17426 in k17423 in k17420 in k17417 in k17414 in k17411 in k17408 in k17269 in k17266 in k17263 in k17260 in k17204 in k17201 in k17198 in k17195 in k17192 in k17189 in k17186 in k17183 in k15938 in k15869 in k15676 in k15673 in k15568 in k15517 in k7924 in k7921 in k5905 in k5612 in k5609 in k5605 in k5314 in k5311 in k5308 in k5305 */
static void C_ccall f_25257(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_25257,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_25261,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("error");
t4=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[21],((C_word*)t0)[2]);}
else{
t4=t2;
f_25261(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k25259 in k25255 in mm:make-ctrl in k22468 in k18948 in k18945 in k18942 in k18939 in k18528 in k18525 in k18522 in k18519 in k18516 in k17994 in k17991 in k17468 in k17465 in k17462 in k17459 in k17456 in k17453 in k17450 in k17447 in k17444 in k17441 in k17438 in k17435 in k17432 in k17429 in k17426 in k17423 in k17420 in k17417 in k17414 in k17411 in k17408 in k17269 in k17266 in k17263 in k17260 in k17204 in k17201 in k17198 in k17195 in k17192 in k17189 in k17186 in k17183 in k15938 in k15869 in k15676 in k15673 in k15568 in k15517 in k7924 in k7921 in k5905 in k5612 in k5609 in k5605 in k5314 in k5311 in k5308 in k5305 */
static void C_ccall f_25261(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_24584(t7,t6);}

/* k25220 in mm:make-ctrl in k22468 in k18948 in k18945 in k18942 in k18939 in k18528 in k18525 in k18522 in k18519 in k18516 in k17994 in k17991 in k17468 in k17465 in k17462 in k17459 in k17456 in k17453 in k17450 in k17447 in k17444 in k17441 in k17438 in k17435 in k17432 in k17429 in k17426 in k17423 in k17420 in k17417 in k17414 in k17411 in k17408 in k17269 in k17266 in k17263 in k17260 in k17204 in k17201 in k17198 in k17195 in k17192 in k17189 in k17186 in k17183 in k15938 in k15869 in k15676 in k15673 in k15568 in k15517 in k7924 in k7921 in k5905 in k5612 in k5609 in k5605 in k5314 in k5311 in k5308 in k5305 */
static void C_ccall f_25222(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_25222,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_25226,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("error");
t4=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[21],((C_word*)t0)[2]);}
else{
t4=t2;
f_25226(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k25224 in k25220 in mm:make-ctrl in k22468 in k18948 in k18945 in k18942 in k18939 in k18528 in k18525 in k18522 in k18519 in k18516 in k17994 in k17991 in k17468 in k17465 in k17462 in k17459 in k17456 in k17453 in k17450 in k17447 in k17444 in k17441 in k17438 in k17435 in k17432 in k17429 in k17426 in k17423 in k17420 in k17417 in k17414 in k17411 in k17408 in k17269 in k17266 in k17263 in k17260 in k17204 in k17201 in k17198 in k17195 in k17192 in k17189 in k17186 in k17183 in k15938 in k15869 in k15676 in k15673 in k15568 in k15517 in k7924 in k7921 in k5905 in k5612 in k5609 in k5605 in k5314 in k5311 in k5308 in k5305 */
static void C_ccall f_25226(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_24584(t7,t6);}

/* k25185 in mm:make-ctrl in k22468 in k18948 in k18945 in k18942 in k18939 in k18528 in k18525 in k18522 in k18519 in k18516 in k17994 in k17991 in k17468 in k17465 in k17462 in k17459 in k17456 in k17453 in k17450 in k17447 in k17444 in k17441 in k17438 in k17435 in k17432 in k17429 in k17426 in k17423 in k17420 in k17417 in k17414 in k17411 in k17408 in k17269 in k17266 in k17263 in k17260 in k17204 in k17201 in k17198 in k17195 in k17192 in k17189 in k17186 in k17183 in k15938 in k15869 in k15676 in k15673 in k15568 in k15517 in k7924 in k7921 in k5905 in k5612 in k5609 in k5605 in k5314 in k5311 in k5308 in k5305 */
static void C_ccall f_25187(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_25187,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_25191,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("error");
t4=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[21],((C_word*)t0)[2]);}
else{
t4=t2;
f_25191(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k25189 in k25185 in mm:make-ctrl in k22468 in k18948 in k18945 in k18942 in k18939 in k18528 in k18525 in k18522 in k18519 in k18516 in k17994 in k17991 in k17468 in k17465 in k17462 in k17459 in k17456 in k17453 in k17450 in k17447 in k17444 in k17441 in k17438 in k17435 in k17432 in k17429 in k17426 in k17423 in k17420 in k17417 in k17414 in k17411 in k17408 in k17269 in k17266 in k17263 in k17260 in k17204 in k17201 in k17198 in k17195 in k17192 in k17189 in k17186 in k17183 in k15938 in k15869 in k15676 in k15673 in k15568 in k15517 in k7924 in k7921 in k5905 in k5612 in k5609 in k5605 in k5314 in k5311 in k5308 in k5305 */
static void C_ccall f_25191(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_24584(t7,t6);}

/* k25150 in mm:make-ctrl in k22468 in k18948 in k18945 in k18942 in k18939 in k18528 in k18525 in k18522 in k18519 in k18516 in k17994 in k17991 in k17468 in k17465 in k17462 in k17459 in k17456 in k17453 in k17450 in k17447 in k17444 in k17441 in k17438 in k17435 in k17432 in k17429 in k17426 in k17423 in k17420 in k17417 in k17414 in k17411 in k17408 in k17269 in k17266 in k17263 in k17260 in k17204 in k17201 in k17198 in k17195 in k17192 in k17189 in k17186 in k17183 in k15938 in k15869 in k15676 in k15673 in k15568 in k15517 in k7924 in k7921 in k5905 in k5612 in k5609 in k5605 in k5314 in k5311 in k5308 in k5305 */
static void C_ccall f_25152(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_25152,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_25156,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("error");
t4=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[21],((C_word*)t0)[2]);}
else{
t4=t2;
f_25156(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k25154 in k25150 in mm:make-ctrl in k22468 in k18948 in k18945 in k18942 in k18939 in k18528 in k18525 in k18522 in k18519 in k18516 in k17994 in k17991 in k17468 in k17465 in k17462 in k17459 in k17456 in k17453 in k17450 in k17447 in k17444 in k17441 in k17438 in k17435 in k17432 in k17429 in k17426 in k17423 in k17420 in k17417 in k17414 in k17411 in k17408 in k17269 in k17266 in k17263 in k17260 in k17204 in k17201 in k17198 in k17195 in k17192 in k17189 in k17186 in k17183 in k15938 in k15869 in k15676 in k15673 in k15568 in k15517 in k7924 in k7921 in k5905 in k5612 in k5609 in k5605 in k5314 in k5311 in k5308 in k5305 */
static void C_ccall f_25156(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_24584(t7,t6);}

/* k24582 in mm:make-ctrl in k22468 in k18948 in k18945 in k18942 in k18939 in k18528 in k18525 in k18522 in k18519 in k18516 in k17994 in k17991 in k17468 in k17465 in k17462 in k17459 in k17456 in k17453 in k17450 in k17447 in k17444 in k17441 in k17438 in k17435 in k17432 in k17429 in k17426 in k17423 in k17420 in k17417 in k17414 in k17411 in k17408 in k17269 in k17266 in k17263 in k17260 in k17204 in k17201 in k17198 in k17195 in k17192 in k17189 in k17186 in k17183 in k15938 in k15869 in k15676 in k15673 in k15568 in k15517 in k7924 in k7921 in k5905 in k5612 in k5609 in k5605 in k5314 in k5311 in k5308 in k5305 */
static void C_fcall f_24584(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word ab[52],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_24584,NULL,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|13,a[1]=(C_word)f_24587,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],a[7]=((C_word*)t0)[7],a[8]=((C_word*)t0)[8],a[9]=((C_word*)t0)[9],a[10]=((C_word*)t0)[10],a[11]=((C_word*)t0)[11],a[12]=((C_word*)t0)[12],a[13]=((C_word*)t0)[13],tmp=(C_word)a,a+=14,tmp);
if(C_truep((C_word)C_i_nullp(((C_word*)((C_word*)t0)[8])[1]))){
t3=t2;
f_24587(t3,C_SCHEME_UNDEFINED);}
else{
t3=(C_word)C_i_car(((C_word*)((C_word*)t0)[8])[1]);
t4=(C_word)C_eqp(t3,lf[577]);
if(C_truep(t4)){
t5=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_24982,a[2]=((C_word*)t0)[7],a[3]=t2,a[4]=((C_word*)t0)[8],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],a[7]=((C_word*)t0)[12],tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)((C_word*)t0)[6])[1])){
C_trace("error");
t6=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t6))(4,t6,t5,lf[19],lf[577]);}
else{
t6=t5;
f_24982(2,t6,C_SCHEME_UNDEFINED);}}
else{
t5=(C_word)C_eqp(t3,lf[588]);
if(C_truep(t5)){
t6=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_25017,a[2]=((C_word*)t0)[7],a[3]=t2,a[4]=((C_word*)t0)[8],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[4],a[7]=((C_word*)t0)[10],tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)((C_word*)t0)[4])[1])){
C_trace("error");
t7=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t7))(4,t7,t6,lf[19],lf[588]);}
else{
t7=t6;
f_25017(2,t7,C_SCHEME_UNDEFINED);}}
else{
t6=(C_word)C_eqp(t3,lf[585]);
if(C_truep(t6)){
t7=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_25052,a[2]=((C_word*)t0)[7],a[3]=t2,a[4]=((C_word*)t0)[8],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[3],a[7]=((C_word*)t0)[9],tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)((C_word*)t0)[3])[1])){
C_trace("error");
t8=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t8))(4,t8,t7,lf[19],lf[585]);}
else{
t8=t7;
f_25052(2,t8,C_SCHEME_UNDEFINED);}}
else{
t7=(C_word)C_eqp(t3,lf[580]);
if(C_truep(t7)){
t8=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_25087,a[2]=((C_word*)t0)[7],a[3]=t2,a[4]=((C_word*)t0)[8],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[2],a[7]=((C_word*)t0)[11],tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)((C_word*)t0)[2])[1])){
C_trace("error");
t9=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t9))(4,t9,t8,lf[19],lf[580]);}
else{
t9=t8;
f_25087(2,t9,C_SCHEME_UNDEFINED);}}
else{
t8=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_25116,a[2]=t2,a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[10],a[5]=((C_word*)t0)[8],tmp=(C_word)a,a+=6,tmp);
if(C_truep(((C_word*)((C_word*)t0)[5])[1])){
C_trace("error");
t9=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t9))(4,t9,t8,lf[10],((C_word*)t0)[7]);}
else{
t9=t8;
f_25116(2,t9,C_SCHEME_UNDEFINED);}}}}}}}

/* k25114 in k24582 in mm:make-ctrl in k22468 in k18948 in k18945 in k18942 in k18939 in k18528 in k18525 in k18522 in k18519 in k18516 in k17994 in k17991 in k17468 in k17465 in k17462 in k17459 in k17456 in k17453 in k17450 in k17447 in k17444 in k17441 in k17438 in k17435 in k17432 in k17429 in k17426 in k17423 in k17420 in k17417 in k17414 in k17411 in k17408 in k17269 in k17266 in k17263 in k17260 in k17204 in k17201 in k17198 in k17195 in k17192 in k17189 in k17186 in k17183 in k15938 in k15869 in k15676 in k15673 in k15568 in k15517 in k7924 in k7921 in k5905 in k5612 in k5609 in k5605 in k5314 in k5311 in k5308 in k5305 */
static void C_ccall f_25116(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_25116,2,t0,t1);}
t2=(C_word)C_i_car(((C_word*)((C_word*)t0)[5])[1]);
t3=C_mutate(((C_word *)((C_word*)t0)[4])+1,t2);
t4=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_25123,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[5],a[4]=((C_word*)t0)[3],tmp=(C_word)a,a+=5,tmp);
t5=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_25131,a[2]=((C_word*)t0)[4],a[3]=t4,tmp=(C_word)a,a+=4,tmp);
C_trace("keyword?");
t6=C_retrieve(lf[13]);
((C_proc3)C_retrieve_proc(t6))(3,t6,t5,((C_word*)((C_word*)t0)[4])[1]);}

/* k25129 in k25114 in k24582 in mm:make-ctrl in k22468 in k18948 in k18945 in k18942 in k18939 in k18528 in k18525 in k18522 in k18519 in k18516 in k17994 in k17991 in k17468 in k17465 in k17462 in k17459 in k17456 in k17453 in k17450 in k17447 in k17444 in k17441 in k17438 in k17435 in k17432 in k17429 in k17426 in k17423 in k17420 in k17417 in k17414 in k17411 in k17408 in k17269 in k17266 in k17263 in k17260 in k17204 in k17201 in k17198 in k17195 in k17192 in k17189 in k17186 in k17183 in k15938 in k15869 in k15676 in k15673 in k15568 in k15517 in k7924 in k7921 in k5905 in k5612 in k5609 in k5605 in k5314 in k5311 in k5308 in k5305 */
static void C_ccall f_25131(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
if(C_truep(t1)){
C_trace("error");
t2=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t2))(4,t2,((C_word*)t0)[3],lf[14],((C_word*)((C_word*)t0)[2])[1]);}
else{
t2=((C_word*)t0)[3];
f_25123(2,t2,C_SCHEME_UNDEFINED);}}

/* k25121 in k25114 in k24582 in mm:make-ctrl in k22468 in k18948 in k18945 in k18942 in k18939 in k18528 in k18525 in k18522 in k18519 in k18516 in k17994 in k17991 in k17468 in k17465 in k17462 in k17459 in k17456 in k17453 in k17450 in k17447 in k17444 in k17441 in k17438 in k17435 in k17432 in k17429 in k17426 in k17423 in k17420 in k17417 in k17414 in k17411 in k17408 in k17269 in k17266 in k17263 in k17260 in k17204 in k17201 in k17198 in k17195 in k17192 in k17189 in k17186 in k17183 in k15938 in k15869 in k15676 in k15673 in k15568 in k15517 in k7924 in k7921 in k5905 in k5612 in k5609 in k5605 in k5314 in k5311 in k5308 in k5305 */
static void C_ccall f_25123(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word *a;
t2=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[3])[1]);
t4=C_mutate(((C_word *)((C_word*)t0)[3])+1,t3);
t5=((C_word*)t0)[2];
f_24587(t5,t4);}

/* k25085 in k24582 in mm:make-ctrl in k22468 in k18948 in k18945 in k18942 in k18939 in k18528 in k18525 in k18522 in k18519 in k18516 in k17994 in k17991 in k17468 in k17465 in k17462 in k17459 in k17456 in k17453 in k17450 in k17447 in k17444 in k17441 in k17438 in k17435 in k17432 in k17429 in k17426 in k17423 in k17420 in k17417 in k17414 in k17411 in k17408 in k17269 in k17266 in k17263 in k17260 in k17204 in k17201 in k17198 in k17195 in k17192 in k17189 in k17186 in k17183 in k15938 in k15869 in k15676 in k15673 in k15568 in k15517 in k7924 in k7921 in k5905 in k5612 in k5609 in k5605 in k5314 in k5311 in k5308 in k5305 */
static void C_ccall f_25087(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_25087,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_25091,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("error");
t4=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[21],((C_word*)t0)[2]);}
else{
t4=t2;
f_25091(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k25089 in k25085 in k24582 in mm:make-ctrl in k22468 in k18948 in k18945 in k18942 in k18939 in k18528 in k18525 in k18522 in k18519 in k18516 in k17994 in k17991 in k17468 in k17465 in k17462 in k17459 in k17456 in k17453 in k17450 in k17447 in k17444 in k17441 in k17438 in k17435 in k17432 in k17429 in k17426 in k17423 in k17420 in k17417 in k17414 in k17411 in k17408 in k17269 in k17266 in k17263 in k17260 in k17204 in k17201 in k17198 in k17195 in k17192 in k17189 in k17186 in k17183 in k15938 in k15869 in k15676 in k15673 in k15568 in k15517 in k7924 in k7921 in k5905 in k5612 in k5609 in k5605 in k5314 in k5311 in k5308 in k5305 */
static void C_ccall f_25091(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_24587(t7,t6);}

/* k25050 in k24582 in mm:make-ctrl in k22468 in k18948 in k18945 in k18942 in k18939 in k18528 in k18525 in k18522 in k18519 in k18516 in k17994 in k17991 in k17468 in k17465 in k17462 in k17459 in k17456 in k17453 in k17450 in k17447 in k17444 in k17441 in k17438 in k17435 in k17432 in k17429 in k17426 in k17423 in k17420 in k17417 in k17414 in k17411 in k17408 in k17269 in k17266 in k17263 in k17260 in k17204 in k17201 in k17198 in k17195 in k17192 in k17189 in k17186 in k17183 in k15938 in k15869 in k15676 in k15673 in k15568 in k15517 in k7924 in k7921 in k5905 in k5612 in k5609 in k5605 in k5314 in k5311 in k5308 in k5305 */
static void C_ccall f_25052(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_25052,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_25056,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("error");
t4=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[21],((C_word*)t0)[2]);}
else{
t4=t2;
f_25056(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k25054 in k25050 in k24582 in mm:make-ctrl in k22468 in k18948 in k18945 in k18942 in k18939 in k18528 in k18525 in k18522 in k18519 in k18516 in k17994 in k17991 in k17468 in k17465 in k17462 in k17459 in k17456 in k17453 in k17450 in k17447 in k17444 in k17441 in k17438 in k17435 in k17432 in k17429 in k17426 in k17423 in k17420 in k17417 in k17414 in k17411 in k17408 in k17269 in k17266 in k17263 in k17260 in k17204 in k17201 in k17198 in k17195 in k17192 in k17189 in k17186 in k17183 in k15938 in k15869 in k15676 in k15673 in k15568 in k15517 in k7924 in k7921 in k5905 in k5612 in k5609 in k5605 in k5314 in k5311 in k5308 in k5305 */
static void C_ccall f_25056(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_24587(t7,t6);}

/* k25015 in k24582 in mm:make-ctrl in k22468 in k18948 in k18945 in k18942 in k18939 in k18528 in k18525 in k18522 in k18519 in k18516 in k17994 in k17991 in k17468 in k17465 in k17462 in k17459 in k17456 in k17453 in k17450 in k17447 in k17444 in k17441 in k17438 in k17435 in k17432 in k17429 in k17426 in k17423 in k17420 in k17417 in k17414 in k17411 in k17408 in k17269 in k17266 in k17263 in k17260 in k17204 in k17201 in k17198 in k17195 in k17192 in k17189 in k17186 in k17183 in k15938 in k15869 in k15676 in k15673 in k15568 in k15517 in k7924 in k7921 in k5905 in k5612 in k5609 in k5605 in k5314 in k5311 in k5308 in k5305 */
static void C_ccall f_25017(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_25017,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_25021,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("error");
t4=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[21],((C_word*)t0)[2]);}
else{
t4=t2;
f_25021(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k25019 in k25015 in k24582 in mm:make-ctrl in k22468 in k18948 in k18945 in k18942 in k18939 in k18528 in k18525 in k18522 in k18519 in k18516 in k17994 in k17991 in k17468 in k17465 in k17462 in k17459 in k17456 in k17453 in k17450 in k17447 in k17444 in k17441 in k17438 in k17435 in k17432 in k17429 in k17426 in k17423 in k17420 in k17417 in k17414 in k17411 in k17408 in k17269 in k17266 in k17263 in k17260 in k17204 in k17201 in k17198 in k17195 in k17192 in k17189 in k17186 in k17183 in k15938 in k15869 in k15676 in k15673 in k15568 in k15517 in k7924 in k7921 in k5905 in k5612 in k5609 in k5605 in k5314 in k5311 in k5308 in k5305 */
static void C_ccall f_25021(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_24587(t7,t6);}

/* k24980 in k24582 in mm:make-ctrl in k22468 in k18948 in k18945 in k18942 in k18939 in k18528 in k18525 in k18522 in k18519 in k18516 in k17994 in k17991 in k17468 in k17465 in k17462 in k17459 in k17456 in k17453 in k17450 in k17447 in k17444 in k17441 in k17438 in k17435 in k17432 in k17429 in k17426 in k17423 in k17420 in k17417 in k17414 in k17411 in k17408 in k17269 in k17266 in k17263 in k17260 in k17204 in k17201 in k17198 in k17195 in k17192 in k17189 in k17186 in k17183 in k15938 in k15869 in k15676 in k15673 in k15568 in k15517 in k7924 in k7921 in k5905 in k5612 in k5609 in k5605 in k5314 in k5311 in k5308 in k5305 */
static void C_ccall f_24982(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_24982,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_24986,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("error");
t4=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[21],((C_word*)t0)[2]);}
else{
t4=t2;
f_24986(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k24984 in k24980 in k24582 in mm:make-ctrl in k22468 in k18948 in k18945 in k18942 in k18939 in k18528 in k18525 in k18522 in k18519 in k18516 in k17994 in k17991 in k17468 in k17465 in k17462 in k17459 in k17456 in k17453 in k17450 in k17447 in k17444 in k17441 in k17438 in k17435 in k17432 in k17429 in k17426 in k17423 in k17420 in k17417 in k17414 in k17411 in k17408 in k17269 in k17266 in k17263 in k17260 in k17204 in k17201 in k17198 in k17195 in k17192 in k17189 in k17186 in k17183 in k15938 in k15869 in k15676 in k15673 in k15568 in k15517 in k7924 in k7921 in k5905 in k5612 in k5609 in k5605 in k5314 in k5311 in k5308 in k5305 */
static void C_ccall f_24986(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_24587(t7,t6);}

/* k24585 in k24582 in mm:make-ctrl in k22468 in k18948 in k18945 in k18942 in k18939 in k18528 in k18525 in k18522 in k18519 in k18516 in k17994 in k17991 in k17468 in k17465 in k17462 in k17459 in k17456 in k17453 in k17450 in k17447 in k17444 in k17441 in k17438 in k17435 in k17432 in k17429 in k17426 in k17423 in k17420 in k17417 in k17414 in k17411 in k17408 in k17269 in k17266 in k17263 in k17260 in k17204 in k17201 in k17198 in k17195 in k17192 in k17189 in k17186 in k17183 in k15938 in k15869 in k15676 in k15673 in k15568 in k15517 in k7924 in k7921 in k5905 in k5612 in k5609 in k5605 in k5314 in k5311 in k5308 in k5305 */
static void C_fcall f_24587(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word ab[52],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_24587,NULL,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|13,a[1]=(C_word)f_24590,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],a[7]=((C_word*)t0)[7],a[8]=((C_word*)t0)[8],a[9]=((C_word*)t0)[9],a[10]=((C_word*)t0)[10],a[11]=((C_word*)t0)[11],a[12]=((C_word*)t0)[12],a[13]=((C_word*)t0)[13],tmp=(C_word)a,a+=14,tmp);
if(C_truep((C_word)C_i_nullp(((C_word*)((C_word*)t0)[8])[1]))){
t3=t2;
f_24590(t3,C_SCHEME_UNDEFINED);}
else{
t3=(C_word)C_i_car(((C_word*)((C_word*)t0)[8])[1]);
t4=(C_word)C_eqp(t3,lf[577]);
if(C_truep(t4)){
t5=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_24812,a[2]=((C_word*)t0)[7],a[3]=t2,a[4]=((C_word*)t0)[8],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],a[7]=((C_word*)t0)[12],tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)((C_word*)t0)[6])[1])){
C_trace("error");
t6=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t6))(4,t6,t5,lf[19],lf[577]);}
else{
t6=t5;
f_24812(2,t6,C_SCHEME_UNDEFINED);}}
else{
t5=(C_word)C_eqp(t3,lf[588]);
if(C_truep(t5)){
t6=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_24847,a[2]=((C_word*)t0)[7],a[3]=t2,a[4]=((C_word*)t0)[8],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[4],a[7]=((C_word*)t0)[10],tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)((C_word*)t0)[4])[1])){
C_trace("error");
t7=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t7))(4,t7,t6,lf[19],lf[588]);}
else{
t7=t6;
f_24847(2,t7,C_SCHEME_UNDEFINED);}}
else{
t6=(C_word)C_eqp(t3,lf[585]);
if(C_truep(t6)){
t7=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_24882,a[2]=((C_word*)t0)[7],a[3]=t2,a[4]=((C_word*)t0)[8],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[3],a[7]=((C_word*)t0)[9],tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)((C_word*)t0)[3])[1])){
C_trace("error");
t8=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t8))(4,t8,t7,lf[19],lf[585]);}
else{
t8=t7;
f_24882(2,t8,C_SCHEME_UNDEFINED);}}
else{
t7=(C_word)C_eqp(t3,lf[580]);
if(C_truep(t7)){
t8=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_24917,a[2]=((C_word*)t0)[7],a[3]=t2,a[4]=((C_word*)t0)[8],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[2],a[7]=((C_word*)t0)[11],tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)((C_word*)t0)[2])[1])){
C_trace("error");
t9=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t9))(4,t9,t8,lf[19],lf[580]);}
else{
t9=t8;
f_24917(2,t9,C_SCHEME_UNDEFINED);}}
else{
t8=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_24946,a[2]=t2,a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[9],a[5]=((C_word*)t0)[8],tmp=(C_word)a,a+=6,tmp);
if(C_truep(((C_word*)((C_word*)t0)[5])[1])){
C_trace("error");
t9=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t9))(4,t9,t8,lf[10],((C_word*)t0)[7]);}
else{
t9=t8;
f_24946(2,t9,C_SCHEME_UNDEFINED);}}}}}}}

/* k24944 in k24585 in k24582 in mm:make-ctrl in k22468 in k18948 in k18945 in k18942 in k18939 in k18528 in k18525 in k18522 in k18519 in k18516 in k17994 in k17991 in k17468 in k17465 in k17462 in k17459 in k17456 in k17453 in k17450 in k17447 in k17444 in k17441 in k17438 in k17435 in k17432 in k17429 in k17426 in k17423 in k17420 in k17417 in k17414 in k17411 in k17408 in k17269 in k17266 in k17263 in k17260 in k17204 in k17201 in k17198 in k17195 in k17192 in k17189 in k17186 in k17183 in k15938 in k15869 in k15676 in k15673 in k15568 in k15517 in k7924 in k7921 in k5905 in k5612 in k5609 in k5605 in k5314 in k5311 in k5308 in k5305 */
static void C_ccall f_24946(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_24946,2,t0,t1);}
t2=(C_word)C_i_car(((C_word*)((C_word*)t0)[5])[1]);
t3=C_mutate(((C_word *)((C_word*)t0)[4])+1,t2);
t4=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_24953,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[5],a[4]=((C_word*)t0)[3],tmp=(C_word)a,a+=5,tmp);
t5=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_24961,a[2]=((C_word*)t0)[4],a[3]=t4,tmp=(C_word)a,a+=4,tmp);
C_trace("keyword?");
t6=C_retrieve(lf[13]);
((C_proc3)C_retrieve_proc(t6))(3,t6,t5,((C_word*)((C_word*)t0)[4])[1]);}

/* k24959 in k24944 in k24585 in k24582 in mm:make-ctrl in k22468 in k18948 in k18945 in k18942 in k18939 in k18528 in k18525 in k18522 in k18519 in k18516 in k17994 in k17991 in k17468 in k17465 in k17462 in k17459 in k17456 in k17453 in k17450 in k17447 in k17444 in k17441 in k17438 in k17435 in k17432 in k17429 in k17426 in k17423 in k17420 in k17417 in k17414 in k17411 in k17408 in k17269 in k17266 in k17263 in k17260 in k17204 in k17201 in k17198 in k17195 in k17192 in k17189 in k17186 in k17183 in k15938 in k15869 in k15676 in k15673 in k15568 in k15517 in k7924 in k7921 in k5905 in k5612 in k5609 in k5605 in k5314 in k5311 in k5308 in k5305 */
static void C_ccall f_24961(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
if(C_truep(t1)){
C_trace("error");
t2=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t2))(4,t2,((C_word*)t0)[3],lf[14],((C_word*)((C_word*)t0)[2])[1]);}
else{
t2=((C_word*)t0)[3];
f_24953(2,t2,C_SCHEME_UNDEFINED);}}

/* k24951 in k24944 in k24585 in k24582 in mm:make-ctrl in k22468 in k18948 in k18945 in k18942 in k18939 in k18528 in k18525 in k18522 in k18519 in k18516 in k17994 in k17991 in k17468 in k17465 in k17462 in k17459 in k17456 in k17453 in k17450 in k17447 in k17444 in k17441 in k17438 in k17435 in k17432 in k17429 in k17426 in k17423 in k17420 in k17417 in k17414 in k17411 in k17408 in k17269 in k17266 in k17263 in k17260 in k17204 in k17201 in k17198 in k17195 in k17192 in k17189 in k17186 in k17183 in k15938 in k15869 in k15676 in k15673 in k15568 in k15517 in k7924 in k7921 in k5905 in k5612 in k5609 in k5605 in k5314 in k5311 in k5308 in k5305 */
static void C_ccall f_24953(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word *a;
t2=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[3])[1]);
t4=C_mutate(((C_word *)((C_word*)t0)[3])+1,t3);
t5=((C_word*)t0)[2];
f_24590(t5,t4);}

/* k24915 in k24585 in k24582 in mm:make-ctrl in k22468 in k18948 in k18945 in k18942 in k18939 in k18528 in k18525 in k18522 in k18519 in k18516 in k17994 in k17991 in k17468 in k17465 in k17462 in k17459 in k17456 in k17453 in k17450 in k17447 in k17444 in k17441 in k17438 in k17435 in k17432 in k17429 in k17426 in k17423 in k17420 in k17417 in k17414 in k17411 in k17408 in k17269 in k17266 in k17263 in k17260 in k17204 in k17201 in k17198 in k17195 in k17192 in k17189 in k17186 in k17183 in k15938 in k15869 in k15676 in k15673 in k15568 in k15517 in k7924 in k7921 in k5905 in k5612 in k5609 in k5605 in k5314 in k5311 in k5308 in k5305 */
static void C_ccall f_24917(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_24917,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_24921,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("error");
t4=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[21],((C_word*)t0)[2]);}
else{
t4=t2;
f_24921(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k24919 in k24915 in k24585 in k24582 in mm:make-ctrl in k22468 in k18948 in k18945 in k18942 in k18939 in k18528 in k18525 in k18522 in k18519 in k18516 in k17994 in k17991 in k17468 in k17465 in k17462 in k17459 in k17456 in k17453 in k17450 in k17447 in k17444 in k17441 in k17438 in k17435 in k17432 in k17429 in k17426 in k17423 in k17420 in k17417 in k17414 in k17411 in k17408 in k17269 in k17266 in k17263 in k17260 in k17204 in k17201 in k17198 in k17195 in k17192 in k17189 in k17186 in k17183 in k15938 in k15869 in k15676 in k15673 in k15568 in k15517 in k7924 in k7921 in k5905 in k5612 in k5609 in k5605 in k5314 in k5311 in k5308 in k5305 */
static void C_ccall f_24921(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_24590(t7,t6);}

/* k24880 in k24585 in k24582 in mm:make-ctrl in k22468 in k18948 in k18945 in k18942 in k18939 in k18528 in k18525 in k18522 in k18519 in k18516 in k17994 in k17991 in k17468 in k17465 in k17462 in k17459 in k17456 in k17453 in k17450 in k17447 in k17444 in k17441 in k17438 in k17435 in k17432 in k17429 in k17426 in k17423 in k17420 in k17417 in k17414 in k17411 in k17408 in k17269 in k17266 in k17263 in k17260 in k17204 in k17201 in k17198 in k17195 in k17192 in k17189 in k17186 in k17183 in k15938 in k15869 in k15676 in k15673 in k15568 in k15517 in k7924 in k7921 in k5905 in k5612 in k5609 in k5605 in k5314 in k5311 in k5308 in k5305 */
static void C_ccall f_24882(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_24882,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_24886,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("error");
t4=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[21],((C_word*)t0)[2]);}
else{
t4=t2;
f_24886(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k24884 in k24880 in k24585 in k24582 in mm:make-ctrl in k22468 in k18948 in k18945 in k18942 in k18939 in k18528 in k18525 in k18522 in k18519 in k18516 in k17994 in k17991 in k17468 in k17465 in k17462 in k17459 in k17456 in k17453 in k17450 in k17447 in k17444 in k17441 in k17438 in k17435 in k17432 in k17429 in k17426 in k17423 in k17420 in k17417 in k17414 in k17411 in k17408 in k17269 in k17266 in k17263 in k17260 in k17204 in k17201 in k17198 in k17195 in k17192 in k17189 in k17186 in k17183 in k15938 in k15869 in k15676 in k15673 in k15568 in k15517 in k7924 in k7921 in k5905 in k5612 in k5609 in k5605 in k5314 in k5311 in k5308 in k5305 */
static void C_ccall f_24886(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_24590(t7,t6);}

/* k24845 in k24585 in k24582 in mm:make-ctrl in k22468 in k18948 in k18945 in k18942 in k18939 in k18528 in k18525 in k18522 in k18519 in k18516 in k17994 in k17991 in k17468 in k17465 in k17462 in k17459 in k17456 in k17453 in k17450 in k17447 in k17444 in k17441 in k17438 in k17435 in k17432 in k17429 in k17426 in k17423 in k17420 in k17417 in k17414 in k17411 in k17408 in k17269 in k17266 in k17263 in k17260 in k17204 in k17201 in k17198 in k17195 in k17192 in k17189 in k17186 in k17183 in k15938 in k15869 in k15676 in k15673 in k15568 in k15517 in k7924 in k7921 in k5905 in k5612 in k5609 in k5605 in k5314 in k5311 in k5308 in k5305 */
static void C_ccall f_24847(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_24847,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_24851,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("error");
t4=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[21],((C_word*)t0)[2]);}
else{
t4=t2;
f_24851(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k24849 in k24845 in k24585 in k24582 in mm:make-ctrl in k22468 in k18948 in k18945 in k18942 in k18939 in k18528 in k18525 in k18522 in k18519 in k18516 in k17994 in k17991 in k17468 in k17465 in k17462 in k17459 in k17456 in k17453 in k17450 in k17447 in k17444 in k17441 in k17438 in k17435 in k17432 in k17429 in k17426 in k17423 in k17420 in k17417 in k17414 in k17411 in k17408 in k17269 in k17266 in k17263 in k17260 in k17204 in k17201 in k17198 in k17195 in k17192 in k17189 in k17186 in k17183 in k15938 in k15869 in k15676 in k15673 in k15568 in k15517 in k7924 in k7921 in k5905 in k5612 in k5609 in k5605 in k5314 in k5311 in k5308 in k5305 */
static void C_ccall f_24851(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_24590(t7,t6);}

/* k24810 in k24585 in k24582 in mm:make-ctrl in k22468 in k18948 in k18945 in k18942 in k18939 in k18528 in k18525 in k18522 in k18519 in k18516 in k17994 in k17991 in k17468 in k17465 in k17462 in k17459 in k17456 in k17453 in k17450 in k17447 in k17444 in k17441 in k17438 in k17435 in k17432 in k17429 in k17426 in k17423 in k17420 in k17417 in k17414 in k17411 in k17408 in k17269 in k17266 in k17263 in k17260 in k17204 in k17201 in k17198 in k17195 in k17192 in k17189 in k17186 in k17183 in k15938 in k15869 in k15676 in k15673 in k15568 in k15517 in k7924 in k7921 in k5905 in k5612 in k5609 in k5605 in k5314 in k5311 in k5308 in k5305 */
static void C_ccall f_24812(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_24812,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_24816,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("error");
t4=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[21],((C_word*)t0)[2]);}
else{
t4=t2;
f_24816(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k24814 in k24810 in k24585 in k24582 in mm:make-ctrl in k22468 in k18948 in k18945 in k18942 in k18939 in k18528 in k18525 in k18522 in k18519 in k18516 in k17994 in k17991 in k17468 in k17465 in k17462 in k17459 in k17456 in k17453 in k17450 in k17447 in k17444 in k17441 in k17438 in k17435 in k17432 in k17429 in k17426 in k17423 in k17420 in k17417 in k17414 in k17411 in k17408 in k17269 in k17266 in k17263 in k17260 in k17204 in k17201 in k17198 in k17195 in k17192 in k17189 in k17186 in k17183 in k15938 in k15869 in k15676 in k15673 in k15568 in k15517 in k7924 in k7921 in k5905 in k5612 in k5609 in k5605 in k5314 in k5311 in k5308 in k5305 */
static void C_ccall f_24816(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_24590(t7,t6);}

/* k24588 in k24585 in k24582 in mm:make-ctrl in k22468 in k18948 in k18945 in k18942 in k18939 in k18528 in k18525 in k18522 in k18519 in k18516 in k17994 in k17991 in k17468 in k17465 in k17462 in k17459 in k17456 in k17453 in k17450 in k17447 in k17444 in k17441 in k17438 in k17435 in k17432 in k17429 in k17426 in k17423 in k17420 in k17417 in k17414 in k17411 in k17408 in k17269 in k17266 in k17263 in k17260 in k17204 in k17201 in k17198 in k17195 in k17192 in k17189 in k17186 in k17183 in k15938 in k15869 in k15676 in k15673 in k15568 in k15517 in k7924 in k7921 in k5905 in k5612 in k5609 in k5605 in k5314 in k5311 in k5308 in k5305 */
static void C_fcall f_24590(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word ab[47],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_24590,NULL,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|8,a[1]=(C_word)f_24593,a[2]=((C_word*)t0)[7],a[3]=((C_word*)t0)[8],a[4]=((C_word*)t0)[9],a[5]=((C_word*)t0)[10],a[6]=((C_word*)t0)[11],a[7]=((C_word*)t0)[12],a[8]=((C_word*)t0)[13],tmp=(C_word)a,a+=9,tmp);
if(C_truep((C_word)C_i_nullp(((C_word*)((C_word*)t0)[8])[1]))){
t3=t2;
f_24593(t3,C_SCHEME_UNDEFINED);}
else{
t3=(C_word)C_i_car(((C_word*)((C_word*)t0)[8])[1]);
t4=(C_word)C_eqp(t3,lf[577]);
if(C_truep(t4)){
t5=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_24642,a[2]=((C_word*)t0)[7],a[3]=t2,a[4]=((C_word*)t0)[8],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],a[7]=((C_word*)t0)[12],tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)((C_word*)t0)[6])[1])){
C_trace("error");
t6=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t6))(4,t6,t5,lf[19],lf[577]);}
else{
t6=t5;
f_24642(2,t6,C_SCHEME_UNDEFINED);}}
else{
t5=(C_word)C_eqp(t3,lf[588]);
if(C_truep(t5)){
t6=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_24677,a[2]=((C_word*)t0)[7],a[3]=t2,a[4]=((C_word*)t0)[8],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[4],a[7]=((C_word*)t0)[10],tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)((C_word*)t0)[4])[1])){
C_trace("error");
t7=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t7))(4,t7,t6,lf[19],lf[588]);}
else{
t7=t6;
f_24677(2,t7,C_SCHEME_UNDEFINED);}}
else{
t6=(C_word)C_eqp(t3,lf[585]);
if(C_truep(t6)){
t7=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_24712,a[2]=((C_word*)t0)[7],a[3]=t2,a[4]=((C_word*)t0)[8],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[3],a[7]=((C_word*)t0)[9],tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)((C_word*)t0)[3])[1])){
C_trace("error");
t8=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t8))(4,t8,t7,lf[19],lf[585]);}
else{
t8=t7;
f_24712(2,t8,C_SCHEME_UNDEFINED);}}
else{
t7=(C_word)C_eqp(t3,lf[580]);
if(C_truep(t7)){
t8=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_24747,a[2]=((C_word*)t0)[7],a[3]=t2,a[4]=((C_word*)t0)[8],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[2],a[7]=((C_word*)t0)[11],tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)((C_word*)t0)[2])[1])){
C_trace("error");
t9=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t9))(4,t9,t8,lf[19],lf[580]);}
else{
t9=t8;
f_24747(2,t9,C_SCHEME_UNDEFINED);}}
else{
t8=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_24776,a[2]=t2,a[3]=((C_word*)t0)[2],a[4]=((C_word*)t0)[11],a[5]=((C_word*)t0)[8],tmp=(C_word)a,a+=6,tmp);
if(C_truep(((C_word*)((C_word*)t0)[5])[1])){
C_trace("error");
t9=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t9))(4,t9,t8,lf[10],((C_word*)t0)[7]);}
else{
t9=t8;
f_24776(2,t9,C_SCHEME_UNDEFINED);}}}}}}}

/* k24774 in k24588 in k24585 in k24582 in mm:make-ctrl in k22468 in k18948 in k18945 in k18942 in k18939 in k18528 in k18525 in k18522 in k18519 in k18516 in k17994 in k17991 in k17468 in k17465 in k17462 in k17459 in k17456 in k17453 in k17450 in k17447 in k17444 in k17441 in k17438 in k17435 in k17432 in k17429 in k17426 in k17423 in k17420 in k17417 in k17414 in k17411 in k17408 in k17269 in k17266 in k17263 in k17260 in k17204 in k17201 in k17198 in k17195 in k17192 in k17189 in k17186 in k17183 in k15938 in k15869 in k15676 in k15673 in k15568 in k15517 in k7924 in k7921 in k5905 in k5612 in k5609 in k5605 in k5314 in k5311 in k5308 in k5305 */
static void C_ccall f_24776(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_24776,2,t0,t1);}
t2=(C_word)C_i_car(((C_word*)((C_word*)t0)[5])[1]);
t3=C_mutate(((C_word *)((C_word*)t0)[4])+1,t2);
t4=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_24783,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[5],a[4]=((C_word*)t0)[3],tmp=(C_word)a,a+=5,tmp);
t5=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_24791,a[2]=((C_word*)t0)[4],a[3]=t4,tmp=(C_word)a,a+=4,tmp);
C_trace("keyword?");
t6=C_retrieve(lf[13]);
((C_proc3)C_retrieve_proc(t6))(3,t6,t5,((C_word*)((C_word*)t0)[4])[1]);}

/* k24789 in k24774 in k24588 in k24585 in k24582 in mm:make-ctrl in k22468 in k18948 in k18945 in k18942 in k18939 in k18528 in k18525 in k18522 in k18519 in k18516 in k17994 in k17991 in k17468 in k17465 in k17462 in k17459 in k17456 in k17453 in k17450 in k17447 in k17444 in k17441 in k17438 in k17435 in k17432 in k17429 in k17426 in k17423 in k17420 in k17417 in k17414 in k17411 in k17408 in k17269 in k17266 in k17263 in k17260 in k17204 in k17201 in k17198 in k17195 in k17192 in k17189 in k17186 in k17183 in k15938 in k15869 in k15676 in k15673 in k15568 in k15517 in k7924 in k7921 in k5905 in k5612 in k5609 in k5605 in k5314 in k5311 in k5308 in k5305 */
static void C_ccall f_24791(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
if(C_truep(t1)){
C_trace("error");
t2=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t2))(4,t2,((C_word*)t0)[3],lf[14],((C_word*)((C_word*)t0)[2])[1]);}
else{
t2=((C_word*)t0)[3];
f_24783(2,t2,C_SCHEME_UNDEFINED);}}

/* k24781 in k24774 in k24588 in k24585 in k24582 in mm:make-ctrl in k22468 in k18948 in k18945 in k18942 in k18939 in k18528 in k18525 in k18522 in k18519 in k18516 in k17994 in k17991 in k17468 in k17465 in k17462 in k17459 in k17456 in k17453 in k17450 in k17447 in k17444 in k17441 in k17438 in k17435 in k17432 in k17429 in k17426 in k17423 in k17420 in k17417 in k17414 in k17411 in k17408 in k17269 in k17266 in k17263 in k17260 in k17204 in k17201 in k17198 in k17195 in k17192 in k17189 in k17186 in k17183 in k15938 in k15869 in k15676 in k15673 in k15568 in k15517 in k7924 in k7921 in k5905 in k5612 in k5609 in k5605 in k5314 in k5311 in k5308 in k5305 */
static void C_ccall f_24783(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word *a;
t2=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[3])[1]);
t4=C_mutate(((C_word *)((C_word*)t0)[3])+1,t3);
t5=((C_word*)t0)[2];
f_24593(t5,t4);}

/* k24745 in k24588 in k24585 in k24582 in mm:make-ctrl in k22468 in k18948 in k18945 in k18942 in k18939 in k18528 in k18525 in k18522 in k18519 in k18516 in k17994 in k17991 in k17468 in k17465 in k17462 in k17459 in k17456 in k17453 in k17450 in k17447 in k17444 in k17441 in k17438 in k17435 in k17432 in k17429 in k17426 in k17423 in k17420 in k17417 in k17414 in k17411 in k17408 in k17269 in k17266 in k17263 in k17260 in k17204 in k17201 in k17198 in k17195 in k17192 in k17189 in k17186 in k17183 in k15938 in k15869 in k15676 in k15673 in k15568 in k15517 in k7924 in k7921 in k5905 in k5612 in k5609 in k5605 in k5314 in k5311 in k5308 in k5305 */
static void C_ccall f_24747(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_24747,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_24751,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("error");
t4=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[21],((C_word*)t0)[2]);}
else{
t4=t2;
f_24751(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k24749 in k24745 in k24588 in k24585 in k24582 in mm:make-ctrl in k22468 in k18948 in k18945 in k18942 in k18939 in k18528 in k18525 in k18522 in k18519 in k18516 in k17994 in k17991 in k17468 in k17465 in k17462 in k17459 in k17456 in k17453 in k17450 in k17447 in k17444 in k17441 in k17438 in k17435 in k17432 in k17429 in k17426 in k17423 in k17420 in k17417 in k17414 in k17411 in k17408 in k17269 in k17266 in k17263 in k17260 in k17204 in k17201 in k17198 in k17195 in k17192 in k17189 in k17186 in k17183 in k15938 in k15869 in k15676 in k15673 in k15568 in k15517 in k7924 in k7921 in k5905 in k5612 in k5609 in k5605 in k5314 in k5311 in k5308 in k5305 */
static void C_ccall f_24751(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_24593(t7,t6);}

/* k24710 in k24588 in k24585 in k24582 in mm:make-ctrl in k22468 in k18948 in k18945 in k18942 in k18939 in k18528 in k18525 in k18522 in k18519 in k18516 in k17994 in k17991 in k17468 in k17465 in k17462 in k17459 in k17456 in k17453 in k17450 in k17447 in k17444 in k17441 in k17438 in k17435 in k17432 in k17429 in k17426 in k17423 in k17420 in k17417 in k17414 in k17411 in k17408 in k17269 in k17266 in k17263 in k17260 in k17204 in k17201 in k17198 in k17195 in k17192 in k17189 in k17186 in k17183 in k15938 in k15869 in k15676 in k15673 in k15568 in k15517 in k7924 in k7921 in k5905 in k5612 in k5609 in k5605 in k5314 in k5311 in k5308 in k5305 */
static void C_ccall f_24712(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_24712,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_24716,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("error");
t4=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[21],((C_word*)t0)[2]);}
else{
t4=t2;
f_24716(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k24714 in k24710 in k24588 in k24585 in k24582 in mm:make-ctrl in k22468 in k18948 in k18945 in k18942 in k18939 in k18528 in k18525 in k18522 in k18519 in k18516 in k17994 in k17991 in k17468 in k17465 in k17462 in k17459 in k17456 in k17453 in k17450 in k17447 in k17444 in k17441 in k17438 in k17435 in k17432 in k17429 in k17426 in k17423 in k17420 in k17417 in k17414 in k17411 in k17408 in k17269 in k17266 in k17263 in k17260 in k17204 in k17201 in k17198 in k17195 in k17192 in k17189 in k17186 in k17183 in k15938 in k15869 in k15676 in k15673 in k15568 in k15517 in k7924 in k7921 in k5905 in k5612 in k5609 in k5605 in k5314 in k5311 in k5308 in k5305 */
static void C_ccall f_24716(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_24593(t7,t6);}

/* k24675 in k24588 in k24585 in k24582 in mm:make-ctrl in k22468 in k18948 in k18945 in k18942 in k18939 in k18528 in k18525 in k18522 in k18519 in k18516 in k17994 in k17991 in k17468 in k17465 in k17462 in k17459 in k17456 in k17453 in k17450 in k17447 in k17444 in k17441 in k17438 in k17435 in k17432 in k17429 in k17426 in k17423 in k17420 in k17417 in k17414 in k17411 in k17408 in k17269 in k17266 in k17263 in k17260 in k17204 in k17201 in k17198 in k17195 in k17192 in k17189 in k17186 in k17183 in k15938 in k15869 in k15676 in k15673 in k15568 in k15517 in k7924 in k7921 in k5905 in k5612 in k5609 in k5605 in k5314 in k5311 in k5308 in k5305 */
static void C_ccall f_24677(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_24677,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_24681,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("error");
t4=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[21],((C_word*)t0)[2]);}
else{
t4=t2;
f_24681(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k24679 in k24675 in k24588 in k24585 in k24582 in mm:make-ctrl in k22468 in k18948 in k18945 in k18942 in k18939 in k18528 in k18525 in k18522 in k18519 in k18516 in k17994 in k17991 in k17468 in k17465 in k17462 in k17459 in k17456 in k17453 in k17450 in k17447 in k17444 in k17441 in k17438 in k17435 in k17432 in k17429 in k17426 in k17423 in k17420 in k17417 in k17414 in k17411 in k17408 in k17269 in k17266 in k17263 in k17260 in k17204 in k17201 in k17198 in k17195 in k17192 in k17189 in k17186 in k17183 in k15938 in k15869 in k15676 in k15673 in k15568 in k15517 in k7924 in k7921 in k5905 in k5612 in k5609 in k5605 in k5314 in k5311 in k5308 in k5305 */
static void C_ccall f_24681(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_24593(t7,t6);}

/* k24640 in k24588 in k24585 in k24582 in mm:make-ctrl in k22468 in k18948 in k18945 in k18942 in k18939 in k18528 in k18525 in k18522 in k18519 in k18516 in k17994 in k17991 in k17468 in k17465 in k17462 in k17459 in k17456 in k17453 in k17450 in k17447 in k17444 in k17441 in k17438 in k17435 in k17432 in k17429 in k17426 in k17423 in k17420 in k17417 in k17414 in k17411 in k17408 in k17269 in k17266 in k17263 in k17260 in k17204 in k17201 in k17198 in k17195 in k17192 in k17189 in k17186 in k17183 in k15938 in k15869 in k15676 in k15673 in k15568 in k15517 in k7924 in k7921 in k5905 in k5612 in k5609 in k5605 in k5314 in k5311 in k5308 in k5305 */
static void C_ccall f_24642(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_24642,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_24646,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("error");
t4=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[21],((C_word*)t0)[2]);}
else{
t4=t2;
f_24646(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k24644 in k24640 in k24588 in k24585 in k24582 in mm:make-ctrl in k22468 in k18948 in k18945 in k18942 in k18939 in k18528 in k18525 in k18522 in k18519 in k18516 in k17994 in k17991 in k17468 in k17465 in k17462 in k17459 in k17456 in k17453 in k17450 in k17447 in k17444 in k17441 in k17438 in k17435 in k17432 in k17429 in k17426 in k17423 in k17420 in k17417 in k17414 in k17411 in k17408 in k17269 in k17266 in k17263 in k17260 in k17204 in k17201 in k17198 in k17195 in k17192 in k17189 in k17186 in k17183 in k15938 in k15869 in k15676 in k15673 in k15568 in k15517 in k7924 in k7921 in k5905 in k5612 in k5609 in k5605 in k5314 in k5311 in k5308 in k5305 */
static void C_ccall f_24646(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_24593(t7,t6);}

/* k24591 in k24588 in k24585 in k24582 in mm:make-ctrl in k22468 in k18948 in k18945 in k18942 in k18939 in k18528 in k18525 in k18522 in k18519 in k18516 in k17994 in k17991 in k17468 in k17465 in k17462 in k17459 in k17456 in k17453 in k17450 in k17447 in k17444 in k17441 in k17438 in k17435 in k17432 in k17429 in k17426 in k17423 in k17420 in k17417 in k17414 in k17411 in k17408 in k17269 in k17266 in k17263 in k17260 in k17204 in k17201 in k17198 in k17195 in k17192 in k17189 in k17186 in k17183 in k15938 in k15869 in k15676 in k15673 in k15568 in k15517 in k7924 in k7921 in k5905 in k5612 in k5609 in k5605 in k5314 in k5311 in k5308 in k5305 */
static void C_fcall f_24593(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_24593,NULL,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_24596,a[2]=((C_word*)t0)[4],a[3]=((C_word*)t0)[5],a[4]=((C_word*)t0)[6],a[5]=((C_word*)t0)[7],a[6]=((C_word*)t0)[8],tmp=(C_word)a,a+=7,tmp);
if(C_truep((C_word)C_i_nullp(((C_word*)((C_word*)t0)[3])[1]))){
t3=t2;
f_24596(2,t3,C_SCHEME_UNDEFINED);}
else{
C_trace("error");
t3=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t3))(4,t3,t2,lf[5],((C_word*)t0)[2]);}}

/* k24594 in k24591 in k24588 in k24585 in k24582 in mm:make-ctrl in k22468 in k18948 in k18945 in k18942 in k18939 in k18528 in k18525 in k18522 in k18519 in k18516 in k17994 in k17991 in k17468 in k17465 in k17462 in k17459 in k17456 in k17453 in k17450 in k17447 in k17444 in k17441 in k17438 in k17435 in k17432 in k17429 in k17426 in k17423 in k17420 in k17417 in k17414 in k17411 in k17408 in k17269 in k17266 in k17263 in k17260 in k17204 in k17201 in k17198 in k17195 in k17192 in k17189 in k17186 in k17183 in k15938 in k15869 in k15676 in k15673 in k15568 in k15517 in k7924 in k7921 in k5905 in k5612 in k5609 in k5605 in k5314 in k5311 in k5308 in k5305 */
static void C_ccall f_24596(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word ab[3],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_24596,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_24600,a[2]=((C_word)li350),tmp=(C_word)a,a+=3,tmp);
((C_proc7)(void*)(*((C_word*)t2+1)))(7,t2,((C_word*)t0)[6],C_fix(11),((C_word*)((C_word*)t0)[5])[1],((C_word*)((C_word*)t0)[4])[1],((C_word*)((C_word*)t0)[3])[1],((C_word*)((C_word*)t0)[2])[1]);}

/* f_24600 in k24594 in k24591 in k24588 in k24585 in k24582 in mm:make-ctrl in k22468 in k18948 in k18945 in k18942 in k18939 in k18528 in k18525 in k18522 in k18519 in k18516 in k17994 in k17991 in k17468 in k17465 in k17462 in k17459 in k17456 in k17453 in k17450 in k17447 in k17444 in k17441 in k17438 in k17435 in k17432 in k17429 in k17426 in k17423 in k17420 in k17417 in k17414 in k17411 in k17408 in k17269 in k17266 in k17263 in k17260 in k17204 in k17201 in k17198 in k17195 in k17192 in k17189 in k17186 in k17183 in k15938 in k15869 in k15676 in k15673 in k15568 in k15517 in k7924 in k7921 in k5905 in k5612 in k5609 in k5605 in k5314 in k5311 in k5308 in k5305 */
static void C_ccall f_24600(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4,C_word t5,C_word t6){
C_word tmp;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word ab[5],*a=ab;
if(c!=7) C_bad_argc_2(c,7,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr7,(void*)f_24600,7,t0,t1,t2,t3,t4,t5,t6);}
t7=(C_word)C_a_i_bytevector(&a,1,C_fix(3));
t8=(C_word)C_i_foreign_fixnum_argumentp(t2);
t9=(C_word)C_i_foreign_flonum_argumentp(t3);
t10=(C_word)C_i_foreign_fixnum_argumentp(t4);
t11=(C_word)C_i_foreign_fixnum_argumentp(t5);
t12=(C_word)C_i_foreign_fixnum_argumentp(t6);
t13=t1;
((C_proc2)(void*)(*((C_word*)t13+1)))(2,t13,(C_word)stub4363(t7,t8,t9,t10,t11,t12));}

/* mm:touch? in k22468 in k18948 in k18945 in k18942 in k18939 in k18528 in k18525 in k18522 in k18519 in k18516 in k17994 in k17991 in k17468 in k17465 in k17462 in k17459 in k17456 in k17453 in k17450 in k17447 in k17444 in k17441 in k17438 in k17435 in k17432 in k17429 in k17426 in k17423 in k17420 in k17417 in k17414 in k17411 in k17408 in k17269 in k17266 in k17263 in k17260 in k17204 in k17201 in k17198 in k17195 in k17192 in k17189 in k17186 in k17183 in k15938 in k15869 in k15676 in k15673 in k15568 in k15517 in k7924 in k7921 in k5905 in k5612 in k5609 in k5605 in k5314 in k5311 in k5308 in k5305 */
static void C_ccall f_24561(C_word c,C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word ab[3],*a=ab;
if(c!=3) C_bad_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr3,(void*)f_24561,3,t0,t1,t2);}
t3=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_24566,a[2]=((C_word)li348),tmp=(C_word)a,a+=3,tmp);
((C_proc4)(void*)(*((C_word*)t3+1)))(4,t3,t1,t2,C_fix(10));}

/* f_24566 in mm:touch? in k22468 in k18948 in k18945 in k18942 in k18939 in k18528 in k18525 in k18522 in k18519 in k18516 in k17994 in k17991 in k17468 in k17465 in k17462 in k17459 in k17456 in k17453 in k17450 in k17447 in k17444 in k17441 in k17438 in k17435 in k17432 in k17429 in k17426 in k17423 in k17420 in k17417 in k17414 in k17411 in k17408 in k17269 in k17266 in k17263 in k17260 in k17204 in k17201 in k17198 in k17195 in k17192 in k17189 in k17186 in k17183 in k15938 in k15869 in k15676 in k15673 in k15568 in k15517 in k7924 in k7921 in k5905 in k5612 in k5609 in k5605 in k5314 in k5311 in k5308 in k5305 */
static void C_ccall f_24566(C_word c,C_word t0,C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word t6;
C_word *a;
if(c!=4) C_bad_argc_2(c,4,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr4,(void*)f_24566,4,t0,t1,t2,t3);}
t4=(C_truep(t2)?(C_word)C_i_foreign_pointer_argumentp(t2):C_SCHEME_FALSE);
t5=(C_word)C_i_foreign_fixnum_argumentp(t3);
t6=t1;
((C_proc2)(void*)(*((C_word*)t6+1)))(2,t6,(C_word)stub4247(C_SCHEME_UNDEFINED,t4,t5));}

/* mm:make-touch in k22468 in k18948 in k18945 in k18942 in k18939 in k18528 in k18525 in k18522 in k18519 in k18516 in k17994 in k17991 in k17468 in k17465 in k17462 in k17459 in k17456 in k17453 in k17450 in k17447 in k17444 in k17441 in k17438 in k17435 in k17432 in k17429 in k17426 in k17423 in k17420 in k17417 in k17414 in k17411 in k17408 in k17269 in k17266 in k17263 in k17260 in k17204 in k17201 in k17198 in k17195 in k17192 in k17189 in k17186 in k17183 in k15938 in k15869 in k15676 in k15673 in k15568 in k15517 in k7924 in k7921 in k5905 in k5612 in k5609 in k5605 in k5314 in k5311 in k5308 in k5305 */
static void C_ccall f_23832(C_word c,C_word t0,C_word t1,...){
C_word tmp;
C_word t2;
va_list v;
C_word *a,c2=c;
C_save_rest(t1,c2,2);
C_check_for_interrupt;
if(!C_demand(c*C_SIZEOF_PAIR+72)){
C_save_and_reclaim((void*)tr2r,(void*)f_23832r,2,t0,t1);}
else{
a=C_alloc((c-2)*3);
t2=C_restore_rest(a,C_rest_count(0));
f_23832r(t0,t1,t2);}}

static void C_ccall f_23832r(C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word t14;
C_word t15;
C_word t16;
C_word t17;
C_word t18;
C_word t19;
C_word t20;
C_word t21;
C_word t22;
C_word t23;
C_word t24;
C_word t25;
C_word t26;
C_word t27;
C_word t28;
C_word t29;
C_word t30;
C_word t31;
C_word t32;
C_word t33;
C_word t34;
C_word *a=C_alloc(72);
t3=C_fix(0);
t4=(*a=C_VECTOR_TYPE|1,a[1]=t3,tmp=(C_word)a,a+=2,tmp);
t5=C_fix(0);
t6=(*a=C_VECTOR_TYPE|1,a[1]=t5,tmp=(C_word)a,a+=2,tmp);
t7=C_fix(0);
t8=(*a=C_VECTOR_TYPE|1,a[1]=t7,tmp=(C_word)a,a+=2,tmp);
t9=C_fix(0);
t10=(*a=C_VECTOR_TYPE|1,a[1]=t9,tmp=(C_word)a,a+=2,tmp);
t11=C_SCHEME_FALSE;
t12=(*a=C_VECTOR_TYPE|1,a[1]=t11,tmp=(C_word)a,a+=2,tmp);
t13=C_SCHEME_FALSE;
t14=(*a=C_VECTOR_TYPE|1,a[1]=t13,tmp=(C_word)a,a+=2,tmp);
t15=C_SCHEME_FALSE;
t16=(*a=C_VECTOR_TYPE|1,a[1]=t15,tmp=(C_word)a,a+=2,tmp);
t17=C_SCHEME_FALSE;
t18=(*a=C_VECTOR_TYPE|1,a[1]=t17,tmp=(C_word)a,a+=2,tmp);
t19=t2;
t20=(*a=C_VECTOR_TYPE|1,a[1]=t19,tmp=(C_word)a,a+=2,tmp);
t21=C_SCHEME_FALSE;
t22=(*a=C_VECTOR_TYPE|1,a[1]=t21,tmp=(C_word)a,a+=2,tmp);
t23=(*a=C_CLOSURE_TYPE|13,a[1]=(C_word)f_23836,a[2]=t18,a[3]=t16,a[4]=t14,a[5]=t22,a[6]=t12,a[7]=t2,a[8]=t20,a[9]=t8,a[10]=t6,a[11]=t10,a[12]=t4,a[13]=t1,tmp=(C_word)a,a+=14,tmp);
if(C_truep((C_word)C_i_nullp(((C_word*)t20)[1]))){
t24=t23;
f_23836(t24,C_SCHEME_UNDEFINED);}
else{
t24=(C_word)C_i_car(((C_word*)t20)[1]);
t25=(C_word)C_eqp(t24,lf[577]);
if(C_truep(t25)){
t26=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_24404,a[2]=t2,a[3]=t23,a[4]=t20,a[5]=t22,a[6]=t12,a[7]=t4,tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)t12)[1])){
C_trace("error");
t27=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t27))(4,t27,t26,lf[19],lf[577]);}
else{
t27=t26;
f_24404(2,t27,C_SCHEME_UNDEFINED);}}
else{
t26=(C_word)C_eqp(t24,lf[578]);
if(C_truep(t26)){
t27=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_24439,a[2]=t2,a[3]=t23,a[4]=t20,a[5]=t22,a[6]=t14,a[7]=t6,tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)t14)[1])){
C_trace("error");
t28=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t28))(4,t28,t27,lf[19],lf[578]);}
else{
t28=t27;
f_24439(2,t28,C_SCHEME_UNDEFINED);}}
else{
t27=(C_word)C_eqp(t24,lf[585]);
if(C_truep(t27)){
t28=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_24474,a[2]=t2,a[3]=t23,a[4]=t20,a[5]=t22,a[6]=t16,a[7]=t8,tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)t16)[1])){
C_trace("error");
t29=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t29))(4,t29,t28,lf[19],lf[585]);}
else{
t29=t28;
f_24474(2,t29,C_SCHEME_UNDEFINED);}}
else{
t28=(C_word)C_eqp(t24,lf[580]);
if(C_truep(t28)){
t29=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_24509,a[2]=t2,a[3]=t23,a[4]=t20,a[5]=t22,a[6]=t18,a[7]=t10,tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)t18)[1])){
C_trace("error");
t30=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t30))(4,t30,t29,lf[19],lf[580]);}
else{
t30=t29;
f_24509(2,t30,C_SCHEME_UNDEFINED);}}
else{
t29=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_24538,a[2]=t23,a[3]=t12,a[4]=t4,a[5]=t20,tmp=(C_word)a,a+=6,tmp);
if(C_truep(((C_word*)t22)[1])){
C_trace("error");
t30=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t30))(4,t30,t29,lf[10],t2);}
else{
t30=t29;
f_24538(2,t30,C_SCHEME_UNDEFINED);}}}}}}}

/* k24536 in mm:make-touch in k22468 in k18948 in k18945 in k18942 in k18939 in k18528 in k18525 in k18522 in k18519 in k18516 in k17994 in k17991 in k17468 in k17465 in k17462 in k17459 in k17456 in k17453 in k17450 in k17447 in k17444 in k17441 in k17438 in k17435 in k17432 in k17429 in k17426 in k17423 in k17420 in k17417 in k17414 in k17411 in k17408 in k17269 in k17266 in k17263 in k17260 in k17204 in k17201 in k17198 in k17195 in k17192 in k17189 in k17186 in k17183 in k15938 in k15869 in k15676 in k15673 in k15568 in k15517 in k7924 in k7921 in k5905 in k5612 in k5609 in k5605 in k5314 in k5311 in k5308 in k5305 */
static void C_ccall f_24538(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_24538,2,t0,t1);}
t2=(C_word)C_i_car(((C_word*)((C_word*)t0)[5])[1]);
t3=C_mutate(((C_word *)((C_word*)t0)[4])+1,t2);
t4=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_24545,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[5],a[4]=((C_word*)t0)[3],tmp=(C_word)a,a+=5,tmp);
t5=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_24553,a[2]=((C_word*)t0)[4],a[3]=t4,tmp=(C_word)a,a+=4,tmp);
C_trace("keyword?");
t6=C_retrieve(lf[13]);
((C_proc3)C_retrieve_proc(t6))(3,t6,t5,((C_word*)((C_word*)t0)[4])[1]);}

/* k24551 in k24536 in mm:make-touch in k22468 in k18948 in k18945 in k18942 in k18939 in k18528 in k18525 in k18522 in k18519 in k18516 in k17994 in k17991 in k17468 in k17465 in k17462 in k17459 in k17456 in k17453 in k17450 in k17447 in k17444 in k17441 in k17438 in k17435 in k17432 in k17429 in k17426 in k17423 in k17420 in k17417 in k17414 in k17411 in k17408 in k17269 in k17266 in k17263 in k17260 in k17204 in k17201 in k17198 in k17195 in k17192 in k17189 in k17186 in k17183 in k15938 in k15869 in k15676 in k15673 in k15568 in k15517 in k7924 in k7921 in k5905 in k5612 in k5609 in k5605 in k5314 in k5311 in k5308 in k5305 */
static void C_ccall f_24553(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
if(C_truep(t1)){
C_trace("error");
t2=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t2))(4,t2,((C_word*)t0)[3],lf[14],((C_word*)((C_word*)t0)[2])[1]);}
else{
t2=((C_word*)t0)[3];
f_24545(2,t2,C_SCHEME_UNDEFINED);}}

/* k24543 in k24536 in mm:make-touch in k22468 in k18948 in k18945 in k18942 in k18939 in k18528 in k18525 in k18522 in k18519 in k18516 in k17994 in k17991 in k17468 in k17465 in k17462 in k17459 in k17456 in k17453 in k17450 in k17447 in k17444 in k17441 in k17438 in k17435 in k17432 in k17429 in k17426 in k17423 in k17420 in k17417 in k17414 in k17411 in k17408 in k17269 in k17266 in k17263 in k17260 in k17204 in k17201 in k17198 in k17195 in k17192 in k17189 in k17186 in k17183 in k15938 in k15869 in k15676 in k15673 in k15568 in k15517 in k7924 in k7921 in k5905 in k5612 in k5609 in k5605 in k5314 in k5311 in k5308 in k5305 */
static void C_ccall f_24545(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word *a;
t2=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[3])[1]);
t4=C_mutate(((C_word *)((C_word*)t0)[3])+1,t3);
t5=((C_word*)t0)[2];
f_23836(t5,t4);}

/* k24507 in mm:make-touch in k22468 in k18948 in k18945 in k18942 in k18939 in k18528 in k18525 in k18522 in k18519 in k18516 in k17994 in k17991 in k17468 in k17465 in k17462 in k17459 in k17456 in k17453 in k17450 in k17447 in k17444 in k17441 in k17438 in k17435 in k17432 in k17429 in k17426 in k17423 in k17420 in k17417 in k17414 in k17411 in k17408 in k17269 in k17266 in k17263 in k17260 in k17204 in k17201 in k17198 in k17195 in k17192 in k17189 in k17186 in k17183 in k15938 in k15869 in k15676 in k15673 in k15568 in k15517 in k7924 in k7921 in k5905 in k5612 in k5609 in k5605 in k5314 in k5311 in k5308 in k5305 */
static void C_ccall f_24509(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_24509,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_24513,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("error");
t4=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[21],((C_word*)t0)[2]);}
else{
t4=t2;
f_24513(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k24511 in k24507 in mm:make-touch in k22468 in k18948 in k18945 in k18942 in k18939 in k18528 in k18525 in k18522 in k18519 in k18516 in k17994 in k17991 in k17468 in k17465 in k17462 in k17459 in k17456 in k17453 in k17450 in k17447 in k17444 in k17441 in k17438 in k17435 in k17432 in k17429 in k17426 in k17423 in k17420 in k17417 in k17414 in k17411 in k17408 in k17269 in k17266 in k17263 in k17260 in k17204 in k17201 in k17198 in k17195 in k17192 in k17189 in k17186 in k17183 in k15938 in k15869 in k15676 in k15673 in k15568 in k15517 in k7924 in k7921 in k5905 in k5612 in k5609 in k5605 in k5314 in k5311 in k5308 in k5305 */
static void C_ccall f_24513(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_23836(t7,t6);}

/* k24472 in mm:make-touch in k22468 in k18948 in k18945 in k18942 in k18939 in k18528 in k18525 in k18522 in k18519 in k18516 in k17994 in k17991 in k17468 in k17465 in k17462 in k17459 in k17456 in k17453 in k17450 in k17447 in k17444 in k17441 in k17438 in k17435 in k17432 in k17429 in k17426 in k17423 in k17420 in k17417 in k17414 in k17411 in k17408 in k17269 in k17266 in k17263 in k17260 in k17204 in k17201 in k17198 in k17195 in k17192 in k17189 in k17186 in k17183 in k15938 in k15869 in k15676 in k15673 in k15568 in k15517 in k7924 in k7921 in k5905 in k5612 in k5609 in k5605 in k5314 in k5311 in k5308 in k5305 */
static void C_ccall f_24474(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_24474,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_24478,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("error");
t4=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[21],((C_word*)t0)[2]);}
else{
t4=t2;
f_24478(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k24476 in k24472 in mm:make-touch in k22468 in k18948 in k18945 in k18942 in k18939 in k18528 in k18525 in k18522 in k18519 in k18516 in k17994 in k17991 in k17468 in k17465 in k17462 in k17459 in k17456 in k17453 in k17450 in k17447 in k17444 in k17441 in k17438 in k17435 in k17432 in k17429 in k17426 in k17423 in k17420 in k17417 in k17414 in k17411 in k17408 in k17269 in k17266 in k17263 in k17260 in k17204 in k17201 in k17198 in k17195 in k17192 in k17189 in k17186 in k17183 in k15938 in k15869 in k15676 in k15673 in k15568 in k15517 in k7924 in k7921 in k5905 in k5612 in k5609 in k5605 in k5314 in k5311 in k5308 in k5305 */
static void C_ccall f_24478(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_23836(t7,t6);}

/* k24437 in mm:make-touch in k22468 in k18948 in k18945 in k18942 in k18939 in k18528 in k18525 in k18522 in k18519 in k18516 in k17994 in k17991 in k17468 in k17465 in k17462 in k17459 in k17456 in k17453 in k17450 in k17447 in k17444 in k17441 in k17438 in k17435 in k17432 in k17429 in k17426 in k17423 in k17420 in k17417 in k17414 in k17411 in k17408 in k17269 in k17266 in k17263 in k17260 in k17204 in k17201 in k17198 in k17195 in k17192 in k17189 in k17186 in k17183 in k15938 in k15869 in k15676 in k15673 in k15568 in k15517 in k7924 in k7921 in k5905 in k5612 in k5609 in k5605 in k5314 in k5311 in k5308 in k5305 */
static void C_ccall f_24439(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_24439,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_24443,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("error");
t4=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[21],((C_word*)t0)[2]);}
else{
t4=t2;
f_24443(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k24441 in k24437 in mm:make-touch in k22468 in k18948 in k18945 in k18942 in k18939 in k18528 in k18525 in k18522 in k18519 in k18516 in k17994 in k17991 in k17468 in k17465 in k17462 in k17459 in k17456 in k17453 in k17450 in k17447 in k17444 in k17441 in k17438 in k17435 in k17432 in k17429 in k17426 in k17423 in k17420 in k17417 in k17414 in k17411 in k17408 in k17269 in k17266 in k17263 in k17260 in k17204 in k17201 in k17198 in k17195 in k17192 in k17189 in k17186 in k17183 in k15938 in k15869 in k15676 in k15673 in k15568 in k15517 in k7924 in k7921 in k5905 in k5612 in k5609 in k5605 in k5314 in k5311 in k5308 in k5305 */
static void C_ccall f_24443(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_23836(t7,t6);}

/* k24402 in mm:make-touch in k22468 in k18948 in k18945 in k18942 in k18939 in k18528 in k18525 in k18522 in k18519 in k18516 in k17994 in k17991 in k17468 in k17465 in k17462 in k17459 in k17456 in k17453 in k17450 in k17447 in k17444 in k17441 in k17438 in k17435 in k17432 in k17429 in k17426 in k17423 in k17420 in k17417 in k17414 in k17411 in k17408 in k17269 in k17266 in k17263 in k17260 in k17204 in k17201 in k17198 in k17195 in k17192 in k17189 in k17186 in k17183 in k15938 in k15869 in k15676 in k15673 in k15568 in k15517 in k7924 in k7921 in k5905 in k5612 in k5609 in k5605 in k5314 in k5311 in k5308 in k5305 */
static void C_ccall f_24404(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_24404,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_24408,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("error");
t4=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[21],((C_word*)t0)[2]);}
else{
t4=t2;
f_24408(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k24406 in k24402 in mm:make-touch in k22468 in k18948 in k18945 in k18942 in k18939 in k18528 in k18525 in k18522 in k18519 in k18516 in k17994 in k17991 in k17468 in k17465 in k17462 in k17459 in k17456 in k17453 in k17450 in k17447 in k17444 in k17441 in k17438 in k17435 in k17432 in k17429 in k17426 in k17423 in k17420 in k17417 in k17414 in k17411 in k17408 in k17269 in k17266 in k17263 in k17260 in k17204 in k17201 in k17198 in k17195 in k17192 in k17189 in k17186 in k17183 in k15938 in k15869 in k15676 in k15673 in k15568 in k15517 in k7924 in k7921 in k5905 in k5612 in k5609 in k5605 in k5314 in k5311 in k5308 in k5305 */
static void C_ccall f_24408(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_23836(t7,t6);}

/* k23834 in mm:make-touch in k22468 in k18948 in k18945 in k18942 in k18939 in k18528 in k18525 in k18522 in k18519 in k18516 in k17994 in k17991 in k17468 in k17465 in k17462 in k17459 in k17456 in k17453 in k17450 in k17447 in k17444 in k17441 in k17438 in k17435 in k17432 in k17429 in k17426 in k17423 in k17420 in k17417 in k17414 in k17411 in k17408 in k17269 in k17266 in k17263 in k17260 in k17204 in k17201 in k17198 in k17195 in k17192 in k17189 in k17186 in k17183 in k15938 in k15869 in k15676 in k15673 in k15568 in k15517 in k7924 in k7921 in k5905 in k5612 in k5609 in k5605 in k5314 in k5311 in k5308 in k5305 */
static void C_fcall f_23836(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word ab[52],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_23836,NULL,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|13,a[1]=(C_word)f_23839,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],a[7]=((C_word*)t0)[7],a[8]=((C_word*)t0)[8],a[9]=((C_word*)t0)[9],a[10]=((C_word*)t0)[10],a[11]=((C_word*)t0)[11],a[12]=((C_word*)t0)[12],a[13]=((C_word*)t0)[13],tmp=(C_word)a,a+=14,tmp);
if(C_truep((C_word)C_i_nullp(((C_word*)((C_word*)t0)[8])[1]))){
t3=t2;
f_23839(t3,C_SCHEME_UNDEFINED);}
else{
t3=(C_word)C_i_car(((C_word*)((C_word*)t0)[8])[1]);
t4=(C_word)C_eqp(t3,lf[577]);
if(C_truep(t4)){
t5=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_24234,a[2]=((C_word*)t0)[7],a[3]=t2,a[4]=((C_word*)t0)[8],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],a[7]=((C_word*)t0)[12],tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)((C_word*)t0)[6])[1])){
C_trace("error");
t6=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t6))(4,t6,t5,lf[19],lf[577]);}
else{
t6=t5;
f_24234(2,t6,C_SCHEME_UNDEFINED);}}
else{
t5=(C_word)C_eqp(t3,lf[578]);
if(C_truep(t5)){
t6=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_24269,a[2]=((C_word*)t0)[7],a[3]=t2,a[4]=((C_word*)t0)[8],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[4],a[7]=((C_word*)t0)[10],tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)((C_word*)t0)[4])[1])){
C_trace("error");
t7=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t7))(4,t7,t6,lf[19],lf[578]);}
else{
t7=t6;
f_24269(2,t7,C_SCHEME_UNDEFINED);}}
else{
t6=(C_word)C_eqp(t3,lf[585]);
if(C_truep(t6)){
t7=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_24304,a[2]=((C_word*)t0)[7],a[3]=t2,a[4]=((C_word*)t0)[8],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[3],a[7]=((C_word*)t0)[9],tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)((C_word*)t0)[3])[1])){
C_trace("error");
t8=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t8))(4,t8,t7,lf[19],lf[585]);}
else{
t8=t7;
f_24304(2,t8,C_SCHEME_UNDEFINED);}}
else{
t7=(C_word)C_eqp(t3,lf[580]);
if(C_truep(t7)){
t8=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_24339,a[2]=((C_word*)t0)[7],a[3]=t2,a[4]=((C_word*)t0)[8],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[2],a[7]=((C_word*)t0)[11],tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)((C_word*)t0)[2])[1])){
C_trace("error");
t9=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t9))(4,t9,t8,lf[19],lf[580]);}
else{
t9=t8;
f_24339(2,t9,C_SCHEME_UNDEFINED);}}
else{
t8=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_24368,a[2]=t2,a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[10],a[5]=((C_word*)t0)[8],tmp=(C_word)a,a+=6,tmp);
if(C_truep(((C_word*)((C_word*)t0)[5])[1])){
C_trace("error");
t9=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t9))(4,t9,t8,lf[10],((C_word*)t0)[7]);}
else{
t9=t8;
f_24368(2,t9,C_SCHEME_UNDEFINED);}}}}}}}

/* k24366 in k23834 in mm:make-touch in k22468 in k18948 in k18945 in k18942 in k18939 in k18528 in k18525 in k18522 in k18519 in k18516 in k17994 in k17991 in k17468 in k17465 in k17462 in k17459 in k17456 in k17453 in k17450 in k17447 in k17444 in k17441 in k17438 in k17435 in k17432 in k17429 in k17426 in k17423 in k17420 in k17417 in k17414 in k17411 in k17408 in k17269 in k17266 in k17263 in k17260 in k17204 in k17201 in k17198 in k17195 in k17192 in k17189 in k17186 in k17183 in k15938 in k15869 in k15676 in k15673 in k15568 in k15517 in k7924 in k7921 in k5905 in k5612 in k5609 in k5605 in k5314 in k5311 in k5308 in k5305 */
static void C_ccall f_24368(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_24368,2,t0,t1);}
t2=(C_word)C_i_car(((C_word*)((C_word*)t0)[5])[1]);
t3=C_mutate(((C_word *)((C_word*)t0)[4])+1,t2);
t4=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_24375,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[5],a[4]=((C_word*)t0)[3],tmp=(C_word)a,a+=5,tmp);
t5=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_24383,a[2]=((C_word*)t0)[4],a[3]=t4,tmp=(C_word)a,a+=4,tmp);
C_trace("keyword?");
t6=C_retrieve(lf[13]);
((C_proc3)C_retrieve_proc(t6))(3,t6,t5,((C_word*)((C_word*)t0)[4])[1]);}

/* k24381 in k24366 in k23834 in mm:make-touch in k22468 in k18948 in k18945 in k18942 in k18939 in k18528 in k18525 in k18522 in k18519 in k18516 in k17994 in k17991 in k17468 in k17465 in k17462 in k17459 in k17456 in k17453 in k17450 in k17447 in k17444 in k17441 in k17438 in k17435 in k17432 in k17429 in k17426 in k17423 in k17420 in k17417 in k17414 in k17411 in k17408 in k17269 in k17266 in k17263 in k17260 in k17204 in k17201 in k17198 in k17195 in k17192 in k17189 in k17186 in k17183 in k15938 in k15869 in k15676 in k15673 in k15568 in k15517 in k7924 in k7921 in k5905 in k5612 in k5609 in k5605 in k5314 in k5311 in k5308 in k5305 */
static void C_ccall f_24383(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
if(C_truep(t1)){
C_trace("error");
t2=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t2))(4,t2,((C_word*)t0)[3],lf[14],((C_word*)((C_word*)t0)[2])[1]);}
else{
t2=((C_word*)t0)[3];
f_24375(2,t2,C_SCHEME_UNDEFINED);}}

/* k24373 in k24366 in k23834 in mm:make-touch in k22468 in k18948 in k18945 in k18942 in k18939 in k18528 in k18525 in k18522 in k18519 in k18516 in k17994 in k17991 in k17468 in k17465 in k17462 in k17459 in k17456 in k17453 in k17450 in k17447 in k17444 in k17441 in k17438 in k17435 in k17432 in k17429 in k17426 in k17423 in k17420 in k17417 in k17414 in k17411 in k17408 in k17269 in k17266 in k17263 in k17260 in k17204 in k17201 in k17198 in k17195 in k17192 in k17189 in k17186 in k17183 in k15938 in k15869 in k15676 in k15673 in k15568 in k15517 in k7924 in k7921 in k5905 in k5612 in k5609 in k5605 in k5314 in k5311 in k5308 in k5305 */
static void C_ccall f_24375(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word *a;
t2=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[3])[1]);
t4=C_mutate(((C_word *)((C_word*)t0)[3])+1,t3);
t5=((C_word*)t0)[2];
f_23839(t5,t4);}

/* k24337 in k23834 in mm:make-touch in k22468 in k18948 in k18945 in k18942 in k18939 in k18528 in k18525 in k18522 in k18519 in k18516 in k17994 in k17991 in k17468 in k17465 in k17462 in k17459 in k17456 in k17453 in k17450 in k17447 in k17444 in k17441 in k17438 in k17435 in k17432 in k17429 in k17426 in k17423 in k17420 in k17417 in k17414 in k17411 in k17408 in k17269 in k17266 in k17263 in k17260 in k17204 in k17201 in k17198 in k17195 in k17192 in k17189 in k17186 in k17183 in k15938 in k15869 in k15676 in k15673 in k15568 in k15517 in k7924 in k7921 in k5905 in k5612 in k5609 in k5605 in k5314 in k5311 in k5308 in k5305 */
static void C_ccall f_24339(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_24339,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_24343,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("error");
t4=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[21],((C_word*)t0)[2]);}
else{
t4=t2;
f_24343(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k24341 in k24337 in k23834 in mm:make-touch in k22468 in k18948 in k18945 in k18942 in k18939 in k18528 in k18525 in k18522 in k18519 in k18516 in k17994 in k17991 in k17468 in k17465 in k17462 in k17459 in k17456 in k17453 in k17450 in k17447 in k17444 in k17441 in k17438 in k17435 in k17432 in k17429 in k17426 in k17423 in k17420 in k17417 in k17414 in k17411 in k17408 in k17269 in k17266 in k17263 in k17260 in k17204 in k17201 in k17198 in k17195 in k17192 in k17189 in k17186 in k17183 in k15938 in k15869 in k15676 in k15673 in k15568 in k15517 in k7924 in k7921 in k5905 in k5612 in k5609 in k5605 in k5314 in k5311 in k5308 in k5305 */
static void C_ccall f_24343(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_23839(t7,t6);}

/* k24302 in k23834 in mm:make-touch in k22468 in k18948 in k18945 in k18942 in k18939 in k18528 in k18525 in k18522 in k18519 in k18516 in k17994 in k17991 in k17468 in k17465 in k17462 in k17459 in k17456 in k17453 in k17450 in k17447 in k17444 in k17441 in k17438 in k17435 in k17432 in k17429 in k17426 in k17423 in k17420 in k17417 in k17414 in k17411 in k17408 in k17269 in k17266 in k17263 in k17260 in k17204 in k17201 in k17198 in k17195 in k17192 in k17189 in k17186 in k17183 in k15938 in k15869 in k15676 in k15673 in k15568 in k15517 in k7924 in k7921 in k5905 in k5612 in k5609 in k5605 in k5314 in k5311 in k5308 in k5305 */
static void C_ccall f_24304(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_24304,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_24308,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("error");
t4=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[21],((C_word*)t0)[2]);}
else{
t4=t2;
f_24308(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k24306 in k24302 in k23834 in mm:make-touch in k22468 in k18948 in k18945 in k18942 in k18939 in k18528 in k18525 in k18522 in k18519 in k18516 in k17994 in k17991 in k17468 in k17465 in k17462 in k17459 in k17456 in k17453 in k17450 in k17447 in k17444 in k17441 in k17438 in k17435 in k17432 in k17429 in k17426 in k17423 in k17420 in k17417 in k17414 in k17411 in k17408 in k17269 in k17266 in k17263 in k17260 in k17204 in k17201 in k17198 in k17195 in k17192 in k17189 in k17186 in k17183 in k15938 in k15869 in k15676 in k15673 in k15568 in k15517 in k7924 in k7921 in k5905 in k5612 in k5609 in k5605 in k5314 in k5311 in k5308 in k5305 */
static void C_ccall f_24308(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_23839(t7,t6);}

/* k24267 in k23834 in mm:make-touch in k22468 in k18948 in k18945 in k18942 in k18939 in k18528 in k18525 in k18522 in k18519 in k18516 in k17994 in k17991 in k17468 in k17465 in k17462 in k17459 in k17456 in k17453 in k17450 in k17447 in k17444 in k17441 in k17438 in k17435 in k17432 in k17429 in k17426 in k17423 in k17420 in k17417 in k17414 in k17411 in k17408 in k17269 in k17266 in k17263 in k17260 in k17204 in k17201 in k17198 in k17195 in k17192 in k17189 in k17186 in k17183 in k15938 in k15869 in k15676 in k15673 in k15568 in k15517 in k7924 in k7921 in k5905 in k5612 in k5609 in k5605 in k5314 in k5311 in k5308 in k5305 */
static void C_ccall f_24269(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_24269,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_24273,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("error");
t4=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[21],((C_word*)t0)[2]);}
else{
t4=t2;
f_24273(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k24271 in k24267 in k23834 in mm:make-touch in k22468 in k18948 in k18945 in k18942 in k18939 in k18528 in k18525 in k18522 in k18519 in k18516 in k17994 in k17991 in k17468 in k17465 in k17462 in k17459 in k17456 in k17453 in k17450 in k17447 in k17444 in k17441 in k17438 in k17435 in k17432 in k17429 in k17426 in k17423 in k17420 in k17417 in k17414 in k17411 in k17408 in k17269 in k17266 in k17263 in k17260 in k17204 in k17201 in k17198 in k17195 in k17192 in k17189 in k17186 in k17183 in k15938 in k15869 in k15676 in k15673 in k15568 in k15517 in k7924 in k7921 in k5905 in k5612 in k5609 in k5605 in k5314 in k5311 in k5308 in k5305 */
static void C_ccall f_24273(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_23839(t7,t6);}

/* k24232 in k23834 in mm:make-touch in k22468 in k18948 in k18945 in k18942 in k18939 in k18528 in k18525 in k18522 in k18519 in k18516 in k17994 in k17991 in k17468 in k17465 in k17462 in k17459 in k17456 in k17453 in k17450 in k17447 in k17444 in k17441 in k17438 in k17435 in k17432 in k17429 in k17426 in k17423 in k17420 in k17417 in k17414 in k17411 in k17408 in k17269 in k17266 in k17263 in k17260 in k17204 in k17201 in k17198 in k17195 in k17192 in k17189 in k17186 in k17183 in k15938 in k15869 in k15676 in k15673 in k15568 in k15517 in k7924 in k7921 in k5905 in k5612 in k5609 in k5605 in k5314 in k5311 in k5308 in k5305 */
static void C_ccall f_24234(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_24234,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_24238,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("error");
t4=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[21],((C_word*)t0)[2]);}
else{
t4=t2;
f_24238(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k24236 in k24232 in k23834 in mm:make-touch in k22468 in k18948 in k18945 in k18942 in k18939 in k18528 in k18525 in k18522 in k18519 in k18516 in k17994 in k17991 in k17468 in k17465 in k17462 in k17459 in k17456 in k17453 in k17450 in k17447 in k17444 in k17441 in k17438 in k17435 in k17432 in k17429 in k17426 in k17423 in k17420 in k17417 in k17414 in k17411 in k17408 in k17269 in k17266 in k17263 in k17260 in k17204 in k17201 in k17198 in k17195 in k17192 in k17189 in k17186 in k17183 in k15938 in k15869 in k15676 in k15673 in k15568 in k15517 in k7924 in k7921 in k5905 in k5612 in k5609 in k5605 in k5314 in k5311 in k5308 in k5305 */
static void C_ccall f_24238(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_23839(t7,t6);}

/* k23837 in k23834 in mm:make-touch in k22468 in k18948 in k18945 in k18942 in k18939 in k18528 in k18525 in k18522 in k18519 in k18516 in k17994 in k17991 in k17468 in k17465 in k17462 in k17459 in k17456 in k17453 in k17450 in k17447 in k17444 in k17441 in k17438 in k17435 in k17432 in k17429 in k17426 in k17423 in k17420 in k17417 in k17414 in k17411 in k17408 in k17269 in k17266 in k17263 in k17260 in k17204 in k17201 in k17198 in k17195 in k17192 in k17189 in k17186 in k17183 in k15938 in k15869 in k15676 in k15673 in k15568 in k15517 in k7924 in k7921 in k5905 in k5612 in k5609 in k5605 in k5314 in k5311 in k5308 in k5305 */
static void C_fcall f_23839(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word ab[52],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_23839,NULL,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|13,a[1]=(C_word)f_23842,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],a[7]=((C_word*)t0)[7],a[8]=((C_word*)t0)[8],a[9]=((C_word*)t0)[9],a[10]=((C_word*)t0)[10],a[11]=((C_word*)t0)[11],a[12]=((C_word*)t0)[12],a[13]=((C_word*)t0)[13],tmp=(C_word)a,a+=14,tmp);
if(C_truep((C_word)C_i_nullp(((C_word*)((C_word*)t0)[8])[1]))){
t3=t2;
f_23842(t3,C_SCHEME_UNDEFINED);}
else{
t3=(C_word)C_i_car(((C_word*)((C_word*)t0)[8])[1]);
t4=(C_word)C_eqp(t3,lf[577]);
if(C_truep(t4)){
t5=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_24064,a[2]=((C_word*)t0)[7],a[3]=t2,a[4]=((C_word*)t0)[8],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],a[7]=((C_word*)t0)[12],tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)((C_word*)t0)[6])[1])){
C_trace("error");
t6=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t6))(4,t6,t5,lf[19],lf[577]);}
else{
t6=t5;
f_24064(2,t6,C_SCHEME_UNDEFINED);}}
else{
t5=(C_word)C_eqp(t3,lf[578]);
if(C_truep(t5)){
t6=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_24099,a[2]=((C_word*)t0)[7],a[3]=t2,a[4]=((C_word*)t0)[8],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[4],a[7]=((C_word*)t0)[10],tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)((C_word*)t0)[4])[1])){
C_trace("error");
t7=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t7))(4,t7,t6,lf[19],lf[578]);}
else{
t7=t6;
f_24099(2,t7,C_SCHEME_UNDEFINED);}}
else{
t6=(C_word)C_eqp(t3,lf[585]);
if(C_truep(t6)){
t7=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_24134,a[2]=((C_word*)t0)[7],a[3]=t2,a[4]=((C_word*)t0)[8],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[3],a[7]=((C_word*)t0)[9],tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)((C_word*)t0)[3])[1])){
C_trace("error");
t8=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t8))(4,t8,t7,lf[19],lf[585]);}
else{
t8=t7;
f_24134(2,t8,C_SCHEME_UNDEFINED);}}
else{
t7=(C_word)C_eqp(t3,lf[580]);
if(C_truep(t7)){
t8=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_24169,a[2]=((C_word*)t0)[7],a[3]=t2,a[4]=((C_word*)t0)[8],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[2],a[7]=((C_word*)t0)[11],tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)((C_word*)t0)[2])[1])){
C_trace("error");
t9=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t9))(4,t9,t8,lf[19],lf[580]);}
else{
t9=t8;
f_24169(2,t9,C_SCHEME_UNDEFINED);}}
else{
t8=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_24198,a[2]=t2,a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[9],a[5]=((C_word*)t0)[8],tmp=(C_word)a,a+=6,tmp);
if(C_truep(((C_word*)((C_word*)t0)[5])[1])){
C_trace("error");
t9=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t9))(4,t9,t8,lf[10],((C_word*)t0)[7]);}
else{
t9=t8;
f_24198(2,t9,C_SCHEME_UNDEFINED);}}}}}}}

/* k24196 in k23837 in k23834 in mm:make-touch in k22468 in k18948 in k18945 in k18942 in k18939 in k18528 in k18525 in k18522 in k18519 in k18516 in k17994 in k17991 in k17468 in k17465 in k17462 in k17459 in k17456 in k17453 in k17450 in k17447 in k17444 in k17441 in k17438 in k17435 in k17432 in k17429 in k17426 in k17423 in k17420 in k17417 in k17414 in k17411 in k17408 in k17269 in k17266 in k17263 in k17260 in k17204 in k17201 in k17198 in k17195 in k17192 in k17189 in k17186 in k17183 in k15938 in k15869 in k15676 in k15673 in k15568 in k15517 in k7924 in k7921 in k5905 in k5612 in k5609 in k5605 in k5314 in k5311 in k5308 in k5305 */
static void C_ccall f_24198(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_24198,2,t0,t1);}
t2=(C_word)C_i_car(((C_word*)((C_word*)t0)[5])[1]);
t3=C_mutate(((C_word *)((C_word*)t0)[4])+1,t2);
t4=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_24205,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[5],a[4]=((C_word*)t0)[3],tmp=(C_word)a,a+=5,tmp);
t5=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_24213,a[2]=((C_word*)t0)[4],a[3]=t4,tmp=(C_word)a,a+=4,tmp);
C_trace("keyword?");
t6=C_retrieve(lf[13]);
((C_proc3)C_retrieve_proc(t6))(3,t6,t5,((C_word*)((C_word*)t0)[4])[1]);}

/* k24211 in k24196 in k23837 in k23834 in mm:make-touch in k22468 in k18948 in k18945 in k18942 in k18939 in k18528 in k18525 in k18522 in k18519 in k18516 in k17994 in k17991 in k17468 in k17465 in k17462 in k17459 in k17456 in k17453 in k17450 in k17447 in k17444 in k17441 in k17438 in k17435 in k17432 in k17429 in k17426 in k17423 in k17420 in k17417 in k17414 in k17411 in k17408 in k17269 in k17266 in k17263 in k17260 in k17204 in k17201 in k17198 in k17195 in k17192 in k17189 in k17186 in k17183 in k15938 in k15869 in k15676 in k15673 in k15568 in k15517 in k7924 in k7921 in k5905 in k5612 in k5609 in k5605 in k5314 in k5311 in k5308 in k5305 */
static void C_ccall f_24213(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
if(C_truep(t1)){
C_trace("error");
t2=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t2))(4,t2,((C_word*)t0)[3],lf[14],((C_word*)((C_word*)t0)[2])[1]);}
else{
t2=((C_word*)t0)[3];
f_24205(2,t2,C_SCHEME_UNDEFINED);}}

/* k24203 in k24196 in k23837 in k23834 in mm:make-touch in k22468 in k18948 in k18945 in k18942 in k18939 in k18528 in k18525 in k18522 in k18519 in k18516 in k17994 in k17991 in k17468 in k17465 in k17462 in k17459 in k17456 in k17453 in k17450 in k17447 in k17444 in k17441 in k17438 in k17435 in k17432 in k17429 in k17426 in k17423 in k17420 in k17417 in k17414 in k17411 in k17408 in k17269 in k17266 in k17263 in k17260 in k17204 in k17201 in k17198 in k17195 in k17192 in k17189 in k17186 in k17183 in k15938 in k15869 in k15676 in k15673 in k15568 in k15517 in k7924 in k7921 in k5905 in k5612 in k5609 in k5605 in k5314 in k5311 in k5308 in k5305 */
static void C_ccall f_24205(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word *a;
t2=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[3])[1]);
t4=C_mutate(((C_word *)((C_word*)t0)[3])+1,t3);
t5=((C_word*)t0)[2];
f_23842(t5,t4);}

/* k24167 in k23837 in k23834 in mm:make-touch in k22468 in k18948 in k18945 in k18942 in k18939 in k18528 in k18525 in k18522 in k18519 in k18516 in k17994 in k17991 in k17468 in k17465 in k17462 in k17459 in k17456 in k17453 in k17450 in k17447 in k17444 in k17441 in k17438 in k17435 in k17432 in k17429 in k17426 in k17423 in k17420 in k17417 in k17414 in k17411 in k17408 in k17269 in k17266 in k17263 in k17260 in k17204 in k17201 in k17198 in k17195 in k17192 in k17189 in k17186 in k17183 in k15938 in k15869 in k15676 in k15673 in k15568 in k15517 in k7924 in k7921 in k5905 in k5612 in k5609 in k5605 in k5314 in k5311 in k5308 in k5305 */
static void C_ccall f_24169(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_24169,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_24173,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("error");
t4=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[21],((C_word*)t0)[2]);}
else{
t4=t2;
f_24173(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k24171 in k24167 in k23837 in k23834 in mm:make-touch in k22468 in k18948 in k18945 in k18942 in k18939 in k18528 in k18525 in k18522 in k18519 in k18516 in k17994 in k17991 in k17468 in k17465 in k17462 in k17459 in k17456 in k17453 in k17450 in k17447 in k17444 in k17441 in k17438 in k17435 in k17432 in k17429 in k17426 in k17423 in k17420 in k17417 in k17414 in k17411 in k17408 in k17269 in k17266 in k17263 in k17260 in k17204 in k17201 in k17198 in k17195 in k17192 in k17189 in k17186 in k17183 in k15938 in k15869 in k15676 in k15673 in k15568 in k15517 in k7924 in k7921 in k5905 in k5612 in k5609 in k5605 in k5314 in k5311 in k5308 in k5305 */
static void C_ccall f_24173(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_23842(t7,t6);}

/* k24132 in k23837 in k23834 in mm:make-touch in k22468 in k18948 in k18945 in k18942 in k18939 in k18528 in k18525 in k18522 in k18519 in k18516 in k17994 in k17991 in k17468 in k17465 in k17462 in k17459 in k17456 in k17453 in k17450 in k17447 in k17444 in k17441 in k17438 in k17435 in k17432 in k17429 in k17426 in k17423 in k17420 in k17417 in k17414 in k17411 in k17408 in k17269 in k17266 in k17263 in k17260 in k17204 in k17201 in k17198 in k17195 in k17192 in k17189 in k17186 in k17183 in k15938 in k15869 in k15676 in k15673 in k15568 in k15517 in k7924 in k7921 in k5905 in k5612 in k5609 in k5605 in k5314 in k5311 in k5308 in k5305 */
static void C_ccall f_24134(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_24134,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_24138,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("error");
t4=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[21],((C_word*)t0)[2]);}
else{
t4=t2;
f_24138(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k24136 in k24132 in k23837 in k23834 in mm:make-touch in k22468 in k18948 in k18945 in k18942 in k18939 in k18528 in k18525 in k18522 in k18519 in k18516 in k17994 in k17991 in k17468 in k17465 in k17462 in k17459 in k17456 in k17453 in k17450 in k17447 in k17444 in k17441 in k17438 in k17435 in k17432 in k17429 in k17426 in k17423 in k17420 in k17417 in k17414 in k17411 in k17408 in k17269 in k17266 in k17263 in k17260 in k17204 in k17201 in k17198 in k17195 in k17192 in k17189 in k17186 in k17183 in k15938 in k15869 in k15676 in k15673 in k15568 in k15517 in k7924 in k7921 in k5905 in k5612 in k5609 in k5605 in k5314 in k5311 in k5308 in k5305 */
static void C_ccall f_24138(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_23842(t7,t6);}

/* k24097 in k23837 in k23834 in mm:make-touch in k22468 in k18948 in k18945 in k18942 in k18939 in k18528 in k18525 in k18522 in k18519 in k18516 in k17994 in k17991 in k17468 in k17465 in k17462 in k17459 in k17456 in k17453 in k17450 in k17447 in k17444 in k17441 in k17438 in k17435 in k17432 in k17429 in k17426 in k17423 in k17420 in k17417 in k17414 in k17411 in k17408 in k17269 in k17266 in k17263 in k17260 in k17204 in k17201 in k17198 in k17195 in k17192 in k17189 in k17186 in k17183 in k15938 in k15869 in k15676 in k15673 in k15568 in k15517 in k7924 in k7921 in k5905 in k5612 in k5609 in k5605 in k5314 in k5311 in k5308 in k5305 */
static void C_ccall f_24099(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_24099,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_24103,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("error");
t4=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[21],((C_word*)t0)[2]);}
else{
t4=t2;
f_24103(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k24101 in k24097 in k23837 in k23834 in mm:make-touch in k22468 in k18948 in k18945 in k18942 in k18939 in k18528 in k18525 in k18522 in k18519 in k18516 in k17994 in k17991 in k17468 in k17465 in k17462 in k17459 in k17456 in k17453 in k17450 in k17447 in k17444 in k17441 in k17438 in k17435 in k17432 in k17429 in k17426 in k17423 in k17420 in k17417 in k17414 in k17411 in k17408 in k17269 in k17266 in k17263 in k17260 in k17204 in k17201 in k17198 in k17195 in k17192 in k17189 in k17186 in k17183 in k15938 in k15869 in k15676 in k15673 in k15568 in k15517 in k7924 in k7921 in k5905 in k5612 in k5609 in k5605 in k5314 in k5311 in k5308 in k5305 */
static void C_ccall f_24103(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_23842(t7,t6);}

/* k24062 in k23837 in k23834 in mm:make-touch in k22468 in k18948 in k18945 in k18942 in k18939 in k18528 in k18525 in k18522 in k18519 in k18516 in k17994 in k17991 in k17468 in k17465 in k17462 in k17459 in k17456 in k17453 in k17450 in k17447 in k17444 in k17441 in k17438 in k17435 in k17432 in k17429 in k17426 in k17423 in k17420 in k17417 in k17414 in k17411 in k17408 in k17269 in k17266 in k17263 in k17260 in k17204 in k17201 in k17198 in k17195 in k17192 in k17189 in k17186 in k17183 in k15938 in k15869 in k15676 in k15673 in k15568 in k15517 in k7924 in k7921 in k5905 in k5612 in k5609 in k5605 in k5314 in k5311 in k5308 in k5305 */
static void C_ccall f_24064(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_24064,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_24068,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("error");
t4=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[21],((C_word*)t0)[2]);}
else{
t4=t2;
f_24068(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k24066 in k24062 in k23837 in k23834 in mm:make-touch in k22468 in k18948 in k18945 in k18942 in k18939 in k18528 in k18525 in k18522 in k18519 in k18516 in k17994 in k17991 in k17468 in k17465 in k17462 in k17459 in k17456 in k17453 in k17450 in k17447 in k17444 in k17441 in k17438 in k17435 in k17432 in k17429 in k17426 in k17423 in k17420 in k17417 in k17414 in k17411 in k17408 in k17269 in k17266 in k17263 in k17260 in k17204 in k17201 in k17198 in k17195 in k17192 in k17189 in k17186 in k17183 in k15938 in k15869 in k15676 in k15673 in k15568 in k15517 in k7924 in k7921 in k5905 in k5612 in k5609 in k5605 in k5314 in k5311 in k5308 in k5305 */
static void C_ccall f_24068(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_23842(t7,t6);}

/* k23840 in k23837 in k23834 in mm:make-touch in k22468 in k18948 in k18945 in k18942 in k18939 in k18528 in k18525 in k18522 in k18519 in k18516 in k17994 in k17991 in k17468 in k17465 in k17462 in k17459 in k17456 in k17453 in k17450 in k17447 in k17444 in k17441 in k17438 in k17435 in k17432 in k17429 in k17426 in k17423 in k17420 in k17417 in k17414 in k17411 in k17408 in k17269 in k17266 in k17263 in k17260 in k17204 in k17201 in k17198 in k17195 in k17192 in k17189 in k17186 in k17183 in k15938 in k15869 in k15676 in k15673 in k15568 in k15517 in k7924 in k7921 in k5905 in k5612 in k5609 in k5605 in k5314 in k5311 in k5308 in k5305 */
static void C_fcall f_23842(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word ab[47],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_23842,NULL,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|8,a[1]=(C_word)f_23845,a[2]=((C_word*)t0)[7],a[3]=((C_word*)t0)[8],a[4]=((C_word*)t0)[9],a[5]=((C_word*)t0)[10],a[6]=((C_word*)t0)[11],a[7]=((C_word*)t0)[12],a[8]=((C_word*)t0)[13],tmp=(C_word)a,a+=9,tmp);
if(C_truep((C_word)C_i_nullp(((C_word*)((C_word*)t0)[8])[1]))){
t3=t2;
f_23845(t3,C_SCHEME_UNDEFINED);}
else{
t3=(C_word)C_i_car(((C_word*)((C_word*)t0)[8])[1]);
t4=(C_word)C_eqp(t3,lf[577]);
if(C_truep(t4)){
t5=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_23894,a[2]=((C_word*)t0)[7],a[3]=t2,a[4]=((C_word*)t0)[8],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],a[7]=((C_word*)t0)[12],tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)((C_word*)t0)[6])[1])){
C_trace("error");
t6=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t6))(4,t6,t5,lf[19],lf[577]);}
else{
t6=t5;
f_23894(2,t6,C_SCHEME_UNDEFINED);}}
else{
t5=(C_word)C_eqp(t3,lf[578]);
if(C_truep(t5)){
t6=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_23929,a[2]=((C_word*)t0)[7],a[3]=t2,a[4]=((C_word*)t0)[8],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[4],a[7]=((C_word*)t0)[10],tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)((C_word*)t0)[4])[1])){
C_trace("error");
t7=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t7))(4,t7,t6,lf[19],lf[578]);}
else{
t7=t6;
f_23929(2,t7,C_SCHEME_UNDEFINED);}}
else{
t6=(C_word)C_eqp(t3,lf[585]);
if(C_truep(t6)){
t7=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_23964,a[2]=((C_word*)t0)[7],a[3]=t2,a[4]=((C_word*)t0)[8],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[3],a[7]=((C_word*)t0)[9],tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)((C_word*)t0)[3])[1])){
C_trace("error");
t8=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t8))(4,t8,t7,lf[19],lf[585]);}
else{
t8=t7;
f_23964(2,t8,C_SCHEME_UNDEFINED);}}
else{
t7=(C_word)C_eqp(t3,lf[580]);
if(C_truep(t7)){
t8=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_23999,a[2]=((C_word*)t0)[7],a[3]=t2,a[4]=((C_word*)t0)[8],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[2],a[7]=((C_word*)t0)[11],tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)((C_word*)t0)[2])[1])){
C_trace("error");
t9=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t9))(4,t9,t8,lf[19],lf[580]);}
else{
t9=t8;
f_23999(2,t9,C_SCHEME_UNDEFINED);}}
else{
t8=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_24028,a[2]=t2,a[3]=((C_word*)t0)[2],a[4]=((C_word*)t0)[11],a[5]=((C_word*)t0)[8],tmp=(C_word)a,a+=6,tmp);
if(C_truep(((C_word*)((C_word*)t0)[5])[1])){
C_trace("error");
t9=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t9))(4,t9,t8,lf[10],((C_word*)t0)[7]);}
else{
t9=t8;
f_24028(2,t9,C_SCHEME_UNDEFINED);}}}}}}}

/* k24026 in k23840 in k23837 in k23834 in mm:make-touch in k22468 in k18948 in k18945 in k18942 in k18939 in k18528 in k18525 in k18522 in k18519 in k18516 in k17994 in k17991 in k17468 in k17465 in k17462 in k17459 in k17456 in k17453 in k17450 in k17447 in k17444 in k17441 in k17438 in k17435 in k17432 in k17429 in k17426 in k17423 in k17420 in k17417 in k17414 in k17411 in k17408 in k17269 in k17266 in k17263 in k17260 in k17204 in k17201 in k17198 in k17195 in k17192 in k17189 in k17186 in k17183 in k15938 in k15869 in k15676 in k15673 in k15568 in k15517 in k7924 in k7921 in k5905 in k5612 in k5609 in k5605 in k5314 in k5311 in k5308 in k5305 */
static void C_ccall f_24028(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_24028,2,t0,t1);}
t2=(C_word)C_i_car(((C_word*)((C_word*)t0)[5])[1]);
t3=C_mutate(((C_word *)((C_word*)t0)[4])+1,t2);
t4=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_24035,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[5],a[4]=((C_word*)t0)[3],tmp=(C_word)a,a+=5,tmp);
t5=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_24043,a[2]=((C_word*)t0)[4],a[3]=t4,tmp=(C_word)a,a+=4,tmp);
C_trace("keyword?");
t6=C_retrieve(lf[13]);
((C_proc3)C_retrieve_proc(t6))(3,t6,t5,((C_word*)((C_word*)t0)[4])[1]);}

/* k24041 in k24026 in k23840 in k23837 in k23834 in mm:make-touch in k22468 in k18948 in k18945 in k18942 in k18939 in k18528 in k18525 in k18522 in k18519 in k18516 in k17994 in k17991 in k17468 in k17465 in k17462 in k17459 in k17456 in k17453 in k17450 in k17447 in k17444 in k17441 in k17438 in k17435 in k17432 in k17429 in k17426 in k17423 in k17420 in k17417 in k17414 in k17411 in k17408 in k17269 in k17266 in k17263 in k17260 in k17204 in k17201 in k17198 in k17195 in k17192 in k17189 in k17186 in k17183 in k15938 in k15869 in k15676 in k15673 in k15568 in k15517 in k7924 in k7921 in k5905 in k5612 in k5609 in k5605 in k5314 in k5311 in k5308 in k5305 */
static void C_ccall f_24043(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
if(C_truep(t1)){
C_trace("error");
t2=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t2))(4,t2,((C_word*)t0)[3],lf[14],((C_word*)((C_word*)t0)[2])[1]);}
else{
t2=((C_word*)t0)[3];
f_24035(2,t2,C_SCHEME_UNDEFINED);}}

/* k24033 in k24026 in k23840 in k23837 in k23834 in mm:make-touch in k22468 in k18948 in k18945 in k18942 in k18939 in k18528 in k18525 in k18522 in k18519 in k18516 in k17994 in k17991 in k17468 in k17465 in k17462 in k17459 in k17456 in k17453 in k17450 in k17447 in k17444 in k17441 in k17438 in k17435 in k17432 in k17429 in k17426 in k17423 in k17420 in k17417 in k17414 in k17411 in k17408 in k17269 in k17266 in k17263 in k17260 in k17204 in k17201 in k17198 in k17195 in k17192 in k17189 in k17186 in k17183 in k15938 in k15869 in k15676 in k15673 in k15568 in k15517 in k7924 in k7921 in k5905 in k5612 in k5609 in k5605 in k5314 in k5311 in k5308 in k5305 */
static void C_ccall f_24035(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word *a;
t2=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[3])[1]);
t4=C_mutate(((C_word *)((C_word*)t0)[3])+1,t3);
t5=((C_word*)t0)[2];
f_23845(t5,t4);}

/* k23997 in k23840 in k23837 in k23834 in mm:make-touch in k22468 in k18948 in k18945 in k18942 in k18939 in k18528 in k18525 in k18522 in k18519 in k18516 in k17994 in k17991 in k17468 in k17465 in k17462 in k17459 in k17456 in k17453 in k17450 in k17447 in k17444 in k17441 in k17438 in k17435 in k17432 in k17429 in k17426 in k17423 in k17420 in k17417 in k17414 in k17411 in k17408 in k17269 in k17266 in k17263 in k17260 in k17204 in k17201 in k17198 in k17195 in k17192 in k17189 in k17186 in k17183 in k15938 in k15869 in k15676 in k15673 in k15568 in k15517 in k7924 in k7921 in k5905 in k5612 in k5609 in k5605 in k5314 in k5311 in k5308 in k5305 */
static void C_ccall f_23999(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_23999,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_24003,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("error");
t4=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[21],((C_word*)t0)[2]);}
else{
t4=t2;
f_24003(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k24001 in k23997 in k23840 in k23837 in k23834 in mm:make-touch in k22468 in k18948 in k18945 in k18942 in k18939 in k18528 in k18525 in k18522 in k18519 in k18516 in k17994 in k17991 in k17468 in k17465 in k17462 in k17459 in k17456 in k17453 in k17450 in k17447 in k17444 in k17441 in k17438 in k17435 in k17432 in k17429 in k17426 in k17423 in k17420 in k17417 in k17414 in k17411 in k17408 in k17269 in k17266 in k17263 in k17260 in k17204 in k17201 in k17198 in k17195 in k17192 in k17189 in k17186 in k17183 in k15938 in k15869 in k15676 in k15673 in k15568 in k15517 in k7924 in k7921 in k5905 in k5612 in k5609 in k5605 in k5314 in k5311 in k5308 in k5305 */
static void C_ccall f_24003(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_23845(t7,t6);}

/* k23962 in k23840 in k23837 in k23834 in mm:make-touch in k22468 in k18948 in k18945 in k18942 in k18939 in k18528 in k18525 in k18522 in k18519 in k18516 in k17994 in k17991 in k17468 in k17465 in k17462 in k17459 in k17456 in k17453 in k17450 in k17447 in k17444 in k17441 in k17438 in k17435 in k17432 in k17429 in k17426 in k17423 in k17420 in k17417 in k17414 in k17411 in k17408 in k17269 in k17266 in k17263 in k17260 in k17204 in k17201 in k17198 in k17195 in k17192 in k17189 in k17186 in k17183 in k15938 in k15869 in k15676 in k15673 in k15568 in k15517 in k7924 in k7921 in k5905 in k5612 in k5609 in k5605 in k5314 in k5311 in k5308 in k5305 */
static void C_ccall f_23964(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_23964,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_23968,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("error");
t4=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[21],((C_word*)t0)[2]);}
else{
t4=t2;
f_23968(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k23966 in k23962 in k23840 in k23837 in k23834 in mm:make-touch in k22468 in k18948 in k18945 in k18942 in k18939 in k18528 in k18525 in k18522 in k18519 in k18516 in k17994 in k17991 in k17468 in k17465 in k17462 in k17459 in k17456 in k17453 in k17450 in k17447 in k17444 in k17441 in k17438 in k17435 in k17432 in k17429 in k17426 in k17423 in k17420 in k17417 in k17414 in k17411 in k17408 in k17269 in k17266 in k17263 in k17260 in k17204 in k17201 in k17198 in k17195 in k17192 in k17189 in k17186 in k17183 in k15938 in k15869 in k15676 in k15673 in k15568 in k15517 in k7924 in k7921 in k5905 in k5612 in k5609 in k5605 in k5314 in k5311 in k5308 in k5305 */
static void C_ccall f_23968(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_23845(t7,t6);}

/* k23927 in k23840 in k23837 in k23834 in mm:make-touch in k22468 in k18948 in k18945 in k18942 in k18939 in k18528 in k18525 in k18522 in k18519 in k18516 in k17994 in k17991 in k17468 in k17465 in k17462 in k17459 in k17456 in k17453 in k17450 in k17447 in k17444 in k17441 in k17438 in k17435 in k17432 in k17429 in k17426 in k17423 in k17420 in k17417 in k17414 in k17411 in k17408 in k17269 in k17266 in k17263 in k17260 in k17204 in k17201 in k17198 in k17195 in k17192 in k17189 in k17186 in k17183 in k15938 in k15869 in k15676 in k15673 in k15568 in k15517 in k7924 in k7921 in k5905 in k5612 in k5609 in k5605 in k5314 in k5311 in k5308 in k5305 */
static void C_ccall f_23929(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_23929,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_23933,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("error");
t4=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[21],((C_word*)t0)[2]);}
else{
t4=t2;
f_23933(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k23931 in k23927 in k23840 in k23837 in k23834 in mm:make-touch in k22468 in k18948 in k18945 in k18942 in k18939 in k18528 in k18525 in k18522 in k18519 in k18516 in k17994 in k17991 in k17468 in k17465 in k17462 in k17459 in k17456 in k17453 in k17450 in k17447 in k17444 in k17441 in k17438 in k17435 in k17432 in k17429 in k17426 in k17423 in k17420 in k17417 in k17414 in k17411 in k17408 in k17269 in k17266 in k17263 in k17260 in k17204 in k17201 in k17198 in k17195 in k17192 in k17189 in k17186 in k17183 in k15938 in k15869 in k15676 in k15673 in k15568 in k15517 in k7924 in k7921 in k5905 in k5612 in k5609 in k5605 in k5314 in k5311 in k5308 in k5305 */
static void C_ccall f_23933(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_23845(t7,t6);}

/* k23892 in k23840 in k23837 in k23834 in mm:make-touch in k22468 in k18948 in k18945 in k18942 in k18939 in k18528 in k18525 in k18522 in k18519 in k18516 in k17994 in k17991 in k17468 in k17465 in k17462 in k17459 in k17456 in k17453 in k17450 in k17447 in k17444 in k17441 in k17438 in k17435 in k17432 in k17429 in k17426 in k17423 in k17420 in k17417 in k17414 in k17411 in k17408 in k17269 in k17266 in k17263 in k17260 in k17204 in k17201 in k17198 in k17195 in k17192 in k17189 in k17186 in k17183 in k15938 in k15869 in k15676 in k15673 in k15568 in k15517 in k7924 in k7921 in k5905 in k5612 in k5609 in k5605 in k5314 in k5311 in k5308 in k5305 */
static void C_ccall f_23894(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_23894,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_23898,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("error");
t4=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[21],((C_word*)t0)[2]);}
else{
t4=t2;
f_23898(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k23896 in k23892 in k23840 in k23837 in k23834 in mm:make-touch in k22468 in k18948 in k18945 in k18942 in k18939 in k18528 in k18525 in k18522 in k18519 in k18516 in k17994 in k17991 in k17468 in k17465 in k17462 in k17459 in k17456 in k17453 in k17450 in k17447 in k17444 in k17441 in k17438 in k17435 in k17432 in k17429 in k17426 in k17423 in k17420 in k17417 in k17414 in k17411 in k17408 in k17269 in k17266 in k17263 in k17260 in k17204 in k17201 in k17198 in k17195 in k17192 in k17189 in k17186 in k17183 in k15938 in k15869 in k15676 in k15673 in k15568 in k15517 in k7924 in k7921 in k5905 in k5612 in k5609 in k5605 in k5314 in k5311 in k5308 in k5305 */
static void C_ccall f_23898(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_23845(t7,t6);}

/* k23843 in k23840 in k23837 in k23834 in mm:make-touch in k22468 in k18948 in k18945 in k18942 in k18939 in k18528 in k18525 in k18522 in k18519 in k18516 in k17994 in k17991 in k17468 in k17465 in k17462 in k17459 in k17456 in k17453 in k17450 in k17447 in k17444 in k17441 in k17438 in k17435 in k17432 in k17429 in k17426 in k17423 in k17420 in k17417 in k17414 in k17411 in k17408 in k17269 in k17266 in k17263 in k17260 in k17204 in k17201 in k17198 in k17195 in k17192 in k17189 in k17186 in k17183 in k15938 in k15869 in k15676 in k15673 in k15568 in k15517 in k7924 in k7921 in k5905 in k5612 in k5609 in k5605 in k5314 in k5311 in k5308 in k5305 */
static void C_fcall f_23845(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_23845,NULL,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_23848,a[2]=((C_word*)t0)[4],a[3]=((C_word*)t0)[5],a[4]=((C_word*)t0)[6],a[5]=((C_word*)t0)[7],a[6]=((C_word*)t0)[8],tmp=(C_word)a,a+=7,tmp);
if(C_truep((C_word)C_i_nullp(((C_word*)((C_word*)t0)[3])[1]))){
t3=t2;
f_23848(2,t3,C_SCHEME_UNDEFINED);}
else{
C_trace("error");
t3=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t3))(4,t3,t2,lf[5],((C_word*)t0)[2]);}}

/* k23846 in k23843 in k23840 in k23837 in k23834 in mm:make-touch in k22468 in k18948 in k18945 in k18942 in k18939 in k18528 in k18525 in k18522 in k18519 in k18516 in k17994 in k17991 in k17468 in k17465 in k17462 in k17459 in k17456 in k17453 in k17450 in k17447 in k17444 in k17441 in k17438 in k17435 in k17432 in k17429 in k17426 in k17423 in k17420 in k17417 in k17414 in k17411 in k17408 in k17269 in k17266 in k17263 in k17260 in k17204 in k17201 in k17198 in k17195 in k17192 in k17189 in k17186 in k17183 in k15938 in k15869 in k15676 in k15673 in k15568 in k15517 in k7924 in k7921 in k5905 in k5612 in k5609 in k5605 in k5314 in k5311 in k5308 in k5305 */
static void C_ccall f_23848(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word ab[3],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_23848,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_23852,a[2]=((C_word)li346),tmp=(C_word)a,a+=3,tmp);
((C_proc7)(void*)(*((C_word*)t2+1)))(7,t2,((C_word*)t0)[6],C_fix(10),((C_word*)((C_word*)t0)[5])[1],((C_word*)((C_word*)t0)[4])[1],((C_word*)((C_word*)t0)[3])[1],((C_word*)((C_word*)t0)[2])[1]);}

/* f_23852 in k23846 in k23843 in k23840 in k23837 in k23834 in mm:make-touch in k22468 in k18948 in k18945 in k18942 in k18939 in k18528 in k18525 in k18522 in k18519 in k18516 in k17994 in k17991 in k17468 in k17465 in k17462 in k17459 in k17456 in k17453 in k17450 in k17447 in k17444 in k17441 in k17438 in k17435 in k17432 in k17429 in k17426 in k17423 in k17420 in k17417 in k17414 in k17411 in k17408 in k17269 in k17266 in k17263 in k17260 in k17204 in k17201 in k17198 in k17195 in k17192 in k17189 in k17186 in k17183 in k15938 in k15869 in k15676 in k15673 in k15568 in k15517 in k7924 in k7921 in k5905 in k5612 in k5609 in k5605 in k5314 in k5311 in k5308 in k5305 */
static void C_ccall f_23852(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4,C_word t5,C_word t6){
C_word tmp;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word ab[5],*a=ab;
if(c!=7) C_bad_argc_2(c,7,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr7,(void*)f_23852,7,t0,t1,t2,t3,t4,t5,t6);}
t7=(C_word)C_a_i_bytevector(&a,1,C_fix(3));
t8=(C_word)C_i_foreign_fixnum_argumentp(t2);
t9=(C_word)C_i_foreign_flonum_argumentp(t3);
t10=(C_word)C_i_foreign_fixnum_argumentp(t4);
t11=(C_word)C_i_foreign_fixnum_argumentp(t5);
t12=(C_word)C_i_foreign_fixnum_argumentp(t6);
t13=t1;
((C_proc2)(void*)(*((C_word*)t13+1)))(2,t13,(C_word)stub4231(t7,t8,t9,t10,t11,t12));}

/* mm:off? in k22468 in k18948 in k18945 in k18942 in k18939 in k18528 in k18525 in k18522 in k18519 in k18516 in k17994 in k17991 in k17468 in k17465 in k17462 in k17459 in k17456 in k17453 in k17450 in k17447 in k17444 in k17441 in k17438 in k17435 in k17432 in k17429 in k17426 in k17423 in k17420 in k17417 in k17414 in k17411 in k17408 in k17269 in k17266 in k17263 in k17260 in k17204 in k17201 in k17198 in k17195 in k17192 in k17189 in k17186 in k17183 in k15938 in k15869 in k15676 in k15673 in k15568 in k15517 in k7924 in k7921 in k5905 in k5612 in k5609 in k5605 in k5314 in k5311 in k5308 in k5305 */
static void C_ccall f_23813(C_word c,C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word ab[3],*a=ab;
if(c!=3) C_bad_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr3,(void*)f_23813,3,t0,t1,t2);}
t3=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_23818,a[2]=((C_word)li344),tmp=(C_word)a,a+=3,tmp);
((C_proc4)(void*)(*((C_word*)t3+1)))(4,t3,t1,t2,C_fix(8));}

/* f_23818 in mm:off? in k22468 in k18948 in k18945 in k18942 in k18939 in k18528 in k18525 in k18522 in k18519 in k18516 in k17994 in k17991 in k17468 in k17465 in k17462 in k17459 in k17456 in k17453 in k17450 in k17447 in k17444 in k17441 in k17438 in k17435 in k17432 in k17429 in k17426 in k17423 in k17420 in k17417 in k17414 in k17411 in k17408 in k17269 in k17266 in k17263 in k17260 in k17204 in k17201 in k17198 in k17195 in k17192 in k17189 in k17186 in k17183 in k15938 in k15869 in k15676 in k15673 in k15568 in k15517 in k7924 in k7921 in k5905 in k5612 in k5609 in k5605 in k5314 in k5311 in k5308 in k5305 */
static void C_ccall f_23818(C_word c,C_word t0,C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word t6;
C_word *a;
if(c!=4) C_bad_argc_2(c,4,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr4,(void*)f_23818,4,t0,t1,t2,t3);}
t4=(C_truep(t2)?(C_word)C_i_foreign_pointer_argumentp(t2):C_SCHEME_FALSE);
t5=(C_word)C_i_foreign_fixnum_argumentp(t3);
t6=t1;
((C_proc2)(void*)(*((C_word*)t6+1)))(2,t6,(C_word)stub4115(C_SCHEME_UNDEFINED,t4,t5));}

/* mm:make-off in k22468 in k18948 in k18945 in k18942 in k18939 in k18528 in k18525 in k18522 in k18519 in k18516 in k17994 in k17991 in k17468 in k17465 in k17462 in k17459 in k17456 in k17453 in k17450 in k17447 in k17444 in k17441 in k17438 in k17435 in k17432 in k17429 in k17426 in k17423 in k17420 in k17417 in k17414 in k17411 in k17408 in k17269 in k17266 in k17263 in k17260 in k17204 in k17201 in k17198 in k17195 in k17192 in k17189 in k17186 in k17183 in k15938 in k15869 in k15676 in k15673 in k15568 in k15517 in k7924 in k7921 in k5905 in k5612 in k5609 in k5605 in k5314 in k5311 in k5308 in k5305 */
static void C_ccall f_23362(C_word c,C_word t0,C_word t1,...){
C_word tmp;
C_word t2;
va_list v;
C_word *a,c2=c;
C_save_rest(t1,c2,2);
C_check_for_interrupt;
if(!C_demand(c*C_SIZEOF_PAIR+58)){
C_save_and_reclaim((void*)tr2r,(void*)f_23362r,2,t0,t1);}
else{
a=C_alloc((c-2)*3);
t2=C_restore_rest(a,C_rest_count(0));
f_23362r(t0,t1,t2);}}

static void C_ccall f_23362r(C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word t14;
C_word t15;
C_word t16;
C_word t17;
C_word t18;
C_word t19;
C_word t20;
C_word t21;
C_word t22;
C_word t23;
C_word t24;
C_word t25;
C_word t26;
C_word t27;
C_word t28;
C_word *a=C_alloc(58);
t3=C_fix(0);
t4=(*a=C_VECTOR_TYPE|1,a[1]=t3,tmp=(C_word)a,a+=2,tmp);
t5=C_fix(60);
t6=(*a=C_VECTOR_TYPE|1,a[1]=t5,tmp=(C_word)a,a+=2,tmp);
t7=C_fix(0);
t8=(*a=C_VECTOR_TYPE|1,a[1]=t7,tmp=(C_word)a,a+=2,tmp);
t9=C_SCHEME_FALSE;
t10=(*a=C_VECTOR_TYPE|1,a[1]=t9,tmp=(C_word)a,a+=2,tmp);
t11=C_SCHEME_FALSE;
t12=(*a=C_VECTOR_TYPE|1,a[1]=t11,tmp=(C_word)a,a+=2,tmp);
t13=C_SCHEME_FALSE;
t14=(*a=C_VECTOR_TYPE|1,a[1]=t13,tmp=(C_word)a,a+=2,tmp);
t15=t2;
t16=(*a=C_VECTOR_TYPE|1,a[1]=t15,tmp=(C_word)a,a+=2,tmp);
t17=C_SCHEME_FALSE;
t18=(*a=C_VECTOR_TYPE|1,a[1]=t17,tmp=(C_word)a,a+=2,tmp);
t19=(*a=C_CLOSURE_TYPE|11,a[1]=(C_word)f_23366,a[2]=t14,a[3]=t12,a[4]=t18,a[5]=t10,a[6]=t2,a[7]=t16,a[8]=t6,a[9]=t8,a[10]=t4,a[11]=t1,tmp=(C_word)a,a+=12,tmp);
if(C_truep((C_word)C_i_nullp(((C_word*)t16)[1]))){
t20=t19;
f_23366(t20,C_SCHEME_UNDEFINED);}
else{
t20=(C_word)C_i_car(((C_word*)t16)[1]);
t21=(C_word)C_eqp(t20,lf[577]);
if(C_truep(t21)){
t22=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_23691,a[2]=t2,a[3]=t19,a[4]=t16,a[5]=t18,a[6]=t10,a[7]=t4,tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)t10)[1])){
C_trace("error");
t23=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t23))(4,t23,t22,lf[19],lf[577]);}
else{
t23=t22;
f_23691(2,t23,C_SCHEME_UNDEFINED);}}
else{
t22=(C_word)C_eqp(t20,lf[578]);
if(C_truep(t22)){
t23=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_23726,a[2]=t2,a[3]=t19,a[4]=t16,a[5]=t18,a[6]=t12,a[7]=t6,tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)t12)[1])){
C_trace("error");
t24=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t24))(4,t24,t23,lf[19],lf[578]);}
else{
t24=t23;
f_23726(2,t24,C_SCHEME_UNDEFINED);}}
else{
t23=(C_word)C_eqp(t20,lf[580]);
if(C_truep(t23)){
t24=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_23761,a[2]=t2,a[3]=t19,a[4]=t16,a[5]=t18,a[6]=t14,a[7]=t8,tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)t14)[1])){
C_trace("error");
t25=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t25))(4,t25,t24,lf[19],lf[580]);}
else{
t25=t24;
f_23761(2,t25,C_SCHEME_UNDEFINED);}}
else{
t24=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_23790,a[2]=t19,a[3]=t10,a[4]=t4,a[5]=t16,tmp=(C_word)a,a+=6,tmp);
if(C_truep(((C_word*)t18)[1])){
C_trace("error");
t25=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t25))(4,t25,t24,lf[10],t2);}
else{
t25=t24;
f_23790(2,t25,C_SCHEME_UNDEFINED);}}}}}}

/* k23788 in mm:make-off in k22468 in k18948 in k18945 in k18942 in k18939 in k18528 in k18525 in k18522 in k18519 in k18516 in k17994 in k17991 in k17468 in k17465 in k17462 in k17459 in k17456 in k17453 in k17450 in k17447 in k17444 in k17441 in k17438 in k17435 in k17432 in k17429 in k17426 in k17423 in k17420 in k17417 in k17414 in k17411 in k17408 in k17269 in k17266 in k17263 in k17260 in k17204 in k17201 in k17198 in k17195 in k17192 in k17189 in k17186 in k17183 in k15938 in k15869 in k15676 in k15673 in k15568 in k15517 in k7924 in k7921 in k5905 in k5612 in k5609 in k5605 in k5314 in k5311 in k5308 in k5305 */
static void C_ccall f_23790(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_23790,2,t0,t1);}
t2=(C_word)C_i_car(((C_word*)((C_word*)t0)[5])[1]);
t3=C_mutate(((C_word *)((C_word*)t0)[4])+1,t2);
t4=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_23797,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[5],a[4]=((C_word*)t0)[3],tmp=(C_word)a,a+=5,tmp);
t5=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_23805,a[2]=((C_word*)t0)[4],a[3]=t4,tmp=(C_word)a,a+=4,tmp);
C_trace("keyword?");
t6=C_retrieve(lf[13]);
((C_proc3)C_retrieve_proc(t6))(3,t6,t5,((C_word*)((C_word*)t0)[4])[1]);}

/* k23803 in k23788 in mm:make-off in k22468 in k18948 in k18945 in k18942 in k18939 in k18528 in k18525 in k18522 in k18519 in k18516 in k17994 in k17991 in k17468 in k17465 in k17462 in k17459 in k17456 in k17453 in k17450 in k17447 in k17444 in k17441 in k17438 in k17435 in k17432 in k17429 in k17426 in k17423 in k17420 in k17417 in k17414 in k17411 in k17408 in k17269 in k17266 in k17263 in k17260 in k17204 in k17201 in k17198 in k17195 in k17192 in k17189 in k17186 in k17183 in k15938 in k15869 in k15676 in k15673 in k15568 in k15517 in k7924 in k7921 in k5905 in k5612 in k5609 in k5605 in k5314 in k5311 in k5308 in k5305 */
static void C_ccall f_23805(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
if(C_truep(t1)){
C_trace("error");
t2=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t2))(4,t2,((C_word*)t0)[3],lf[14],((C_word*)((C_word*)t0)[2])[1]);}
else{
t2=((C_word*)t0)[3];
f_23797(2,t2,C_SCHEME_UNDEFINED);}}

/* k23795 in k23788 in mm:make-off in k22468 in k18948 in k18945 in k18942 in k18939 in k18528 in k18525 in k18522 in k18519 in k18516 in k17994 in k17991 in k17468 in k17465 in k17462 in k17459 in k17456 in k17453 in k17450 in k17447 in k17444 in k17441 in k17438 in k17435 in k17432 in k17429 in k17426 in k17423 in k17420 in k17417 in k17414 in k17411 in k17408 in k17269 in k17266 in k17263 in k17260 in k17204 in k17201 in k17198 in k17195 in k17192 in k17189 in k17186 in k17183 in k15938 in k15869 in k15676 in k15673 in k15568 in k15517 in k7924 in k7921 in k5905 in k5612 in k5609 in k5605 in k5314 in k5311 in k5308 in k5305 */
static void C_ccall f_23797(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word *a;
t2=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[3])[1]);
t4=C_mutate(((C_word *)((C_word*)t0)[3])+1,t3);
t5=((C_word*)t0)[2];
f_23366(t5,t4);}

/* k23759 in mm:make-off in k22468 in k18948 in k18945 in k18942 in k18939 in k18528 in k18525 in k18522 in k18519 in k18516 in k17994 in k17991 in k17468 in k17465 in k17462 in k17459 in k17456 in k17453 in k17450 in k17447 in k17444 in k17441 in k17438 in k17435 in k17432 in k17429 in k17426 in k17423 in k17420 in k17417 in k17414 in k17411 in k17408 in k17269 in k17266 in k17263 in k17260 in k17204 in k17201 in k17198 in k17195 in k17192 in k17189 in k17186 in k17183 in k15938 in k15869 in k15676 in k15673 in k15568 in k15517 in k7924 in k7921 in k5905 in k5612 in k5609 in k5605 in k5314 in k5311 in k5308 in k5305 */
static void C_ccall f_23761(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_23761,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_23765,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("error");
t4=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[21],((C_word*)t0)[2]);}
else{
t4=t2;
f_23765(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k23763 in k23759 in mm:make-off in k22468 in k18948 in k18945 in k18942 in k18939 in k18528 in k18525 in k18522 in k18519 in k18516 in k17994 in k17991 in k17468 in k17465 in k17462 in k17459 in k17456 in k17453 in k17450 in k17447 in k17444 in k17441 in k17438 in k17435 in k17432 in k17429 in k17426 in k17423 in k17420 in k17417 in k17414 in k17411 in k17408 in k17269 in k17266 in k17263 in k17260 in k17204 in k17201 in k17198 in k17195 in k17192 in k17189 in k17186 in k17183 in k15938 in k15869 in k15676 in k15673 in k15568 in k15517 in k7924 in k7921 in k5905 in k5612 in k5609 in k5605 in k5314 in k5311 in k5308 in k5305 */
static void C_ccall f_23765(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_23366(t7,t6);}

/* k23724 in mm:make-off in k22468 in k18948 in k18945 in k18942 in k18939 in k18528 in k18525 in k18522 in k18519 in k18516 in k17994 in k17991 in k17468 in k17465 in k17462 in k17459 in k17456 in k17453 in k17450 in k17447 in k17444 in k17441 in k17438 in k17435 in k17432 in k17429 in k17426 in k17423 in k17420 in k17417 in k17414 in k17411 in k17408 in k17269 in k17266 in k17263 in k17260 in k17204 in k17201 in k17198 in k17195 in k17192 in k17189 in k17186 in k17183 in k15938 in k15869 in k15676 in k15673 in k15568 in k15517 in k7924 in k7921 in k5905 in k5612 in k5609 in k5605 in k5314 in k5311 in k5308 in k5305 */
static void C_ccall f_23726(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_23726,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_23730,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("error");
t4=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[21],((C_word*)t0)[2]);}
else{
t4=t2;
f_23730(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k23728 in k23724 in mm:make-off in k22468 in k18948 in k18945 in k18942 in k18939 in k18528 in k18525 in k18522 in k18519 in k18516 in k17994 in k17991 in k17468 in k17465 in k17462 in k17459 in k17456 in k17453 in k17450 in k17447 in k17444 in k17441 in k17438 in k17435 in k17432 in k17429 in k17426 in k17423 in k17420 in k17417 in k17414 in k17411 in k17408 in k17269 in k17266 in k17263 in k17260 in k17204 in k17201 in k17198 in k17195 in k17192 in k17189 in k17186 in k17183 in k15938 in k15869 in k15676 in k15673 in k15568 in k15517 in k7924 in k7921 in k5905 in k5612 in k5609 in k5605 in k5314 in k5311 in k5308 in k5305 */
static void C_ccall f_23730(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_23366(t7,t6);}

/* k23689 in mm:make-off in k22468 in k18948 in k18945 in k18942 in k18939 in k18528 in k18525 in k18522 in k18519 in k18516 in k17994 in k17991 in k17468 in k17465 in k17462 in k17459 in k17456 in k17453 in k17450 in k17447 in k17444 in k17441 in k17438 in k17435 in k17432 in k17429 in k17426 in k17423 in k17420 in k17417 in k17414 in k17411 in k17408 in k17269 in k17266 in k17263 in k17260 in k17204 in k17201 in k17198 in k17195 in k17192 in k17189 in k17186 in k17183 in k15938 in k15869 in k15676 in k15673 in k15568 in k15517 in k7924 in k7921 in k5905 in k5612 in k5609 in k5605 in k5314 in k5311 in k5308 in k5305 */
static void C_ccall f_23691(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_23691,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_23695,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("error");
t4=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[21],((C_word*)t0)[2]);}
else{
t4=t2;
f_23695(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k23693 in k23689 in mm:make-off in k22468 in k18948 in k18945 in k18942 in k18939 in k18528 in k18525 in k18522 in k18519 in k18516 in k17994 in k17991 in k17468 in k17465 in k17462 in k17459 in k17456 in k17453 in k17450 in k17447 in k17444 in k17441 in k17438 in k17435 in k17432 in k17429 in k17426 in k17423 in k17420 in k17417 in k17414 in k17411 in k17408 in k17269 in k17266 in k17263 in k17260 in k17204 in k17201 in k17198 in k17195 in k17192 in k17189 in k17186 in k17183 in k15938 in k15869 in k15676 in k15673 in k15568 in k15517 in k7924 in k7921 in k5905 in k5612 in k5609 in k5605 in k5314 in k5311 in k5308 in k5305 */
static void C_ccall f_23695(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_23366(t7,t6);}

/* k23364 in mm:make-off in k22468 in k18948 in k18945 in k18942 in k18939 in k18528 in k18525 in k18522 in k18519 in k18516 in k17994 in k17991 in k17468 in k17465 in k17462 in k17459 in k17456 in k17453 in k17450 in k17447 in k17444 in k17441 in k17438 in k17435 in k17432 in k17429 in k17426 in k17423 in k17420 in k17417 in k17414 in k17411 in k17408 in k17269 in k17266 in k17263 in k17260 in k17204 in k17201 in k17198 in k17195 in k17192 in k17189 in k17186 in k17183 in k15938 in k15869 in k15676 in k15673 in k15568 in k15517 in k7924 in k7921 in k5905 in k5612 in k5609 in k5605 in k5314 in k5311 in k5308 in k5305 */
static void C_fcall f_23366(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word ab[42],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_23366,NULL,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|11,a[1]=(C_word)f_23369,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],a[7]=((C_word*)t0)[7],a[8]=((C_word*)t0)[8],a[9]=((C_word*)t0)[9],a[10]=((C_word*)t0)[10],a[11]=((C_word*)t0)[11],tmp=(C_word)a,a+=12,tmp);
if(C_truep((C_word)C_i_nullp(((C_word*)((C_word*)t0)[7])[1]))){
t3=t2;
f_23369(t3,C_SCHEME_UNDEFINED);}
else{
t3=(C_word)C_i_car(((C_word*)((C_word*)t0)[7])[1]);
t4=(C_word)C_eqp(t3,lf[577]);
if(C_truep(t4)){
t5=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_23556,a[2]=((C_word*)t0)[6],a[3]=t2,a[4]=((C_word*)t0)[7],a[5]=((C_word*)t0)[4],a[6]=((C_word*)t0)[5],a[7]=((C_word*)t0)[10],tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)((C_word*)t0)[5])[1])){
C_trace("error");
t6=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t6))(4,t6,t5,lf[19],lf[577]);}
else{
t6=t5;
f_23556(2,t6,C_SCHEME_UNDEFINED);}}
else{
t5=(C_word)C_eqp(t3,lf[578]);
if(C_truep(t5)){
t6=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_23591,a[2]=((C_word*)t0)[6],a[3]=t2,a[4]=((C_word*)t0)[7],a[5]=((C_word*)t0)[4],a[6]=((C_word*)t0)[3],a[7]=((C_word*)t0)[8],tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)((C_word*)t0)[3])[1])){
C_trace("error");
t7=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t7))(4,t7,t6,lf[19],lf[578]);}
else{
t7=t6;
f_23591(2,t7,C_SCHEME_UNDEFINED);}}
else{
t6=(C_word)C_eqp(t3,lf[580]);
if(C_truep(t6)){
t7=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_23626,a[2]=((C_word*)t0)[6],a[3]=t2,a[4]=((C_word*)t0)[7],a[5]=((C_word*)t0)[4],a[6]=((C_word*)t0)[2],a[7]=((C_word*)t0)[9],tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)((C_word*)t0)[2])[1])){
C_trace("error");
t8=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t8))(4,t8,t7,lf[19],lf[580]);}
else{
t8=t7;
f_23626(2,t8,C_SCHEME_UNDEFINED);}}
else{
t7=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_23655,a[2]=t2,a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[8],a[5]=((C_word*)t0)[7],tmp=(C_word)a,a+=6,tmp);
if(C_truep(((C_word*)((C_word*)t0)[4])[1])){
C_trace("error");
t8=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t8))(4,t8,t7,lf[10],((C_word*)t0)[6]);}
else{
t8=t7;
f_23655(2,t8,C_SCHEME_UNDEFINED);}}}}}}

/* k23653 in k23364 in mm:make-off in k22468 in k18948 in k18945 in k18942 in k18939 in k18528 in k18525 in k18522 in k18519 in k18516 in k17994 in k17991 in k17468 in k17465 in k17462 in k17459 in k17456 in k17453 in k17450 in k17447 in k17444 in k17441 in k17438 in k17435 in k17432 in k17429 in k17426 in k17423 in k17420 in k17417 in k17414 in k17411 in k17408 in k17269 in k17266 in k17263 in k17260 in k17204 in k17201 in k17198 in k17195 in k17192 in k17189 in k17186 in k17183 in k15938 in k15869 in k15676 in k15673 in k15568 in k15517 in k7924 in k7921 in k5905 in k5612 in k5609 in k5605 in k5314 in k5311 in k5308 in k5305 */
static void C_ccall f_23655(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_23655,2,t0,t1);}
t2=(C_word)C_i_car(((C_word*)((C_word*)t0)[5])[1]);
t3=C_mutate(((C_word *)((C_word*)t0)[4])+1,t2);
t4=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_23662,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[5],a[4]=((C_word*)t0)[3],tmp=(C_word)a,a+=5,tmp);
t5=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_23670,a[2]=((C_word*)t0)[4],a[3]=t4,tmp=(C_word)a,a+=4,tmp);
C_trace("keyword?");
t6=C_retrieve(lf[13]);
((C_proc3)C_retrieve_proc(t6))(3,t6,t5,((C_word*)((C_word*)t0)[4])[1]);}

/* k23668 in k23653 in k23364 in mm:make-off in k22468 in k18948 in k18945 in k18942 in k18939 in k18528 in k18525 in k18522 in k18519 in k18516 in k17994 in k17991 in k17468 in k17465 in k17462 in k17459 in k17456 in k17453 in k17450 in k17447 in k17444 in k17441 in k17438 in k17435 in k17432 in k17429 in k17426 in k17423 in k17420 in k17417 in k17414 in k17411 in k17408 in k17269 in k17266 in k17263 in k17260 in k17204 in k17201 in k17198 in k17195 in k17192 in k17189 in k17186 in k17183 in k15938 in k15869 in k15676 in k15673 in k15568 in k15517 in k7924 in k7921 in k5905 in k5612 in k5609 in k5605 in k5314 in k5311 in k5308 in k5305 */
static void C_ccall f_23670(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
if(C_truep(t1)){
C_trace("error");
t2=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t2))(4,t2,((C_word*)t0)[3],lf[14],((C_word*)((C_word*)t0)[2])[1]);}
else{
t2=((C_word*)t0)[3];
f_23662(2,t2,C_SCHEME_UNDEFINED);}}

/* k23660 in k23653 in k23364 in mm:make-off in k22468 in k18948 in k18945 in k18942 in k18939 in k18528 in k18525 in k18522 in k18519 in k18516 in k17994 in k17991 in k17468 in k17465 in k17462 in k17459 in k17456 in k17453 in k17450 in k17447 in k17444 in k17441 in k17438 in k17435 in k17432 in k17429 in k17426 in k17423 in k17420 in k17417 in k17414 in k17411 in k17408 in k17269 in k17266 in k17263 in k17260 in k17204 in k17201 in k17198 in k17195 in k17192 in k17189 in k17186 in k17183 in k15938 in k15869 in k15676 in k15673 in k15568 in k15517 in k7924 in k7921 in k5905 in k5612 in k5609 in k5605 in k5314 in k5311 in k5308 in k5305 */
static void C_ccall f_23662(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word *a;
t2=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[3])[1]);
t4=C_mutate(((C_word *)((C_word*)t0)[3])+1,t3);
t5=((C_word*)t0)[2];
f_23369(t5,t4);}

/* k23624 in k23364 in mm:make-off in k22468 in k18948 in k18945 in k18942 in k18939 in k18528 in k18525 in k18522 in k18519 in k18516 in k17994 in k17991 in k17468 in k17465 in k17462 in k17459 in k17456 in k17453 in k17450 in k17447 in k17444 in k17441 in k17438 in k17435 in k17432 in k17429 in k17426 in k17423 in k17420 in k17417 in k17414 in k17411 in k17408 in k17269 in k17266 in k17263 in k17260 in k17204 in k17201 in k17198 in k17195 in k17192 in k17189 in k17186 in k17183 in k15938 in k15869 in k15676 in k15673 in k15568 in k15517 in k7924 in k7921 in k5905 in k5612 in k5609 in k5605 in k5314 in k5311 in k5308 in k5305 */
static void C_ccall f_23626(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_23626,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_23630,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("error");
t4=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[21],((C_word*)t0)[2]);}
else{
t4=t2;
f_23630(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k23628 in k23624 in k23364 in mm:make-off in k22468 in k18948 in k18945 in k18942 in k18939 in k18528 in k18525 in k18522 in k18519 in k18516 in k17994 in k17991 in k17468 in k17465 in k17462 in k17459 in k17456 in k17453 in k17450 in k17447 in k17444 in k17441 in k17438 in k17435 in k17432 in k17429 in k17426 in k17423 in k17420 in k17417 in k17414 in k17411 in k17408 in k17269 in k17266 in k17263 in k17260 in k17204 in k17201 in k17198 in k17195 in k17192 in k17189 in k17186 in k17183 in k15938 in k15869 in k15676 in k15673 in k15568 in k15517 in k7924 in k7921 in k5905 in k5612 in k5609 in k5605 in k5314 in k5311 in k5308 in k5305 */
static void C_ccall f_23630(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_23369(t7,t6);}

/* k23589 in k23364 in mm:make-off in k22468 in k18948 in k18945 in k18942 in k18939 in k18528 in k18525 in k18522 in k18519 in k18516 in k17994 in k17991 in k17468 in k17465 in k17462 in k17459 in k17456 in k17453 in k17450 in k17447 in k17444 in k17441 in k17438 in k17435 in k17432 in k17429 in k17426 in k17423 in k17420 in k17417 in k17414 in k17411 in k17408 in k17269 in k17266 in k17263 in k17260 in k17204 in k17201 in k17198 in k17195 in k17192 in k17189 in k17186 in k17183 in k15938 in k15869 in k15676 in k15673 in k15568 in k15517 in k7924 in k7921 in k5905 in k5612 in k5609 in k5605 in k5314 in k5311 in k5308 in k5305 */
static void C_ccall f_23591(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_23591,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_23595,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("error");
t4=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[21],((C_word*)t0)[2]);}
else{
t4=t2;
f_23595(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k23593 in k23589 in k23364 in mm:make-off in k22468 in k18948 in k18945 in k18942 in k18939 in k18528 in k18525 in k18522 in k18519 in k18516 in k17994 in k17991 in k17468 in k17465 in k17462 in k17459 in k17456 in k17453 in k17450 in k17447 in k17444 in k17441 in k17438 in k17435 in k17432 in k17429 in k17426 in k17423 in k17420 in k17417 in k17414 in k17411 in k17408 in k17269 in k17266 in k17263 in k17260 in k17204 in k17201 in k17198 in k17195 in k17192 in k17189 in k17186 in k17183 in k15938 in k15869 in k15676 in k15673 in k15568 in k15517 in k7924 in k7921 in k5905 in k5612 in k5609 in k5605 in k5314 in k5311 in k5308 in k5305 */
static void C_ccall f_23595(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_23369(t7,t6);}

/* k23554 in k23364 in mm:make-off in k22468 in k18948 in k18945 in k18942 in k18939 in k18528 in k18525 in k18522 in k18519 in k18516 in k17994 in k17991 in k17468 in k17465 in k17462 in k17459 in k17456 in k17453 in k17450 in k17447 in k17444 in k17441 in k17438 in k17435 in k17432 in k17429 in k17426 in k17423 in k17420 in k17417 in k17414 in k17411 in k17408 in k17269 in k17266 in k17263 in k17260 in k17204 in k17201 in k17198 in k17195 in k17192 in k17189 in k17186 in k17183 in k15938 in k15869 in k15676 in k15673 in k15568 in k15517 in k7924 in k7921 in k5905 in k5612 in k5609 in k5605 in k5314 in k5311 in k5308 in k5305 */
static void C_ccall f_23556(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_23556,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_23560,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("error");
t4=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[21],((C_word*)t0)[2]);}
else{
t4=t2;
f_23560(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k23558 in k23554 in k23364 in mm:make-off in k22468 in k18948 in k18945 in k18942 in k18939 in k18528 in k18525 in k18522 in k18519 in k18516 in k17994 in k17991 in k17468 in k17465 in k17462 in k17459 in k17456 in k17453 in k17450 in k17447 in k17444 in k17441 in k17438 in k17435 in k17432 in k17429 in k17426 in k17423 in k17420 in k17417 in k17414 in k17411 in k17408 in k17269 in k17266 in k17263 in k17260 in k17204 in k17201 in k17198 in k17195 in k17192 in k17189 in k17186 in k17183 in k15938 in k15869 in k15676 in k15673 in k15568 in k15517 in k7924 in k7921 in k5905 in k5612 in k5609 in k5605 in k5314 in k5311 in k5308 in k5305 */
static void C_ccall f_23560(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_23369(t7,t6);}

/* k23367 in k23364 in mm:make-off in k22468 in k18948 in k18945 in k18942 in k18939 in k18528 in k18525 in k18522 in k18519 in k18516 in k17994 in k17991 in k17468 in k17465 in k17462 in k17459 in k17456 in k17453 in k17450 in k17447 in k17444 in k17441 in k17438 in k17435 in k17432 in k17429 in k17426 in k17423 in k17420 in k17417 in k17414 in k17411 in k17408 in k17269 in k17266 in k17263 in k17260 in k17204 in k17201 in k17198 in k17195 in k17192 in k17189 in k17186 in k17183 in k15938 in k15869 in k15676 in k15673 in k15568 in k15517 in k7924 in k7921 in k5905 in k5612 in k5609 in k5605 in k5314 in k5311 in k5308 in k5305 */
static void C_fcall f_23369(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word ab[38],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_23369,NULL,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_23372,a[2]=((C_word*)t0)[6],a[3]=((C_word*)t0)[7],a[4]=((C_word*)t0)[8],a[5]=((C_word*)t0)[9],a[6]=((C_word*)t0)[10],a[7]=((C_word*)t0)[11],tmp=(C_word)a,a+=8,tmp);
if(C_truep((C_word)C_i_nullp(((C_word*)((C_word*)t0)[7])[1]))){
t3=t2;
f_23372(t3,C_SCHEME_UNDEFINED);}
else{
t3=(C_word)C_i_car(((C_word*)((C_word*)t0)[7])[1]);
t4=(C_word)C_eqp(t3,lf[577]);
if(C_truep(t4)){
t5=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_23421,a[2]=((C_word*)t0)[6],a[3]=t2,a[4]=((C_word*)t0)[7],a[5]=((C_word*)t0)[4],a[6]=((C_word*)t0)[5],a[7]=((C_word*)t0)[10],tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)((C_word*)t0)[5])[1])){
C_trace("error");
t6=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t6))(4,t6,t5,lf[19],lf[577]);}
else{
t6=t5;
f_23421(2,t6,C_SCHEME_UNDEFINED);}}
else{
t5=(C_word)C_eqp(t3,lf[578]);
if(C_truep(t5)){
t6=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_23456,a[2]=((C_word*)t0)[6],a[3]=t2,a[4]=((C_word*)t0)[7],a[5]=((C_word*)t0)[4],a[6]=((C_word*)t0)[3],a[7]=((C_word*)t0)[8],tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)((C_word*)t0)[3])[1])){
C_trace("error");
t7=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t7))(4,t7,t6,lf[19],lf[578]);}
else{
t7=t6;
f_23456(2,t7,C_SCHEME_UNDEFINED);}}
else{
t6=(C_word)C_eqp(t3,lf[580]);
if(C_truep(t6)){
t7=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_23491,a[2]=((C_word*)t0)[6],a[3]=t2,a[4]=((C_word*)t0)[7],a[5]=((C_word*)t0)[4],a[6]=((C_word*)t0)[2],a[7]=((C_word*)t0)[9],tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)((C_word*)t0)[2])[1])){
C_trace("error");
t8=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t8))(4,t8,t7,lf[19],lf[580]);}
else{
t8=t7;
f_23491(2,t8,C_SCHEME_UNDEFINED);}}
else{
t7=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_23520,a[2]=t2,a[3]=((C_word*)t0)[2],a[4]=((C_word*)t0)[9],a[5]=((C_word*)t0)[7],tmp=(C_word)a,a+=6,tmp);
if(C_truep(((C_word*)((C_word*)t0)[4])[1])){
C_trace("error");
t8=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t8))(4,t8,t7,lf[10],((C_word*)t0)[6]);}
else{
t8=t7;
f_23520(2,t8,C_SCHEME_UNDEFINED);}}}}}}

/* k23518 in k23367 in k23364 in mm:make-off in k22468 in k18948 in k18945 in k18942 in k18939 in k18528 in k18525 in k18522 in k18519 in k18516 in k17994 in k17991 in k17468 in k17465 in k17462 in k17459 in k17456 in k17453 in k17450 in k17447 in k17444 in k17441 in k17438 in k17435 in k17432 in k17429 in k17426 in k17423 in k17420 in k17417 in k17414 in k17411 in k17408 in k17269 in k17266 in k17263 in k17260 in k17204 in k17201 in k17198 in k17195 in k17192 in k17189 in k17186 in k17183 in k15938 in k15869 in k15676 in k15673 in k15568 in k15517 in k7924 in k7921 in k5905 in k5612 in k5609 in k5605 in k5314 in k5311 in k5308 in k5305 */
static void C_ccall f_23520(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_23520,2,t0,t1);}
t2=(C_word)C_i_car(((C_word*)((C_word*)t0)[5])[1]);
t3=C_mutate(((C_word *)((C_word*)t0)[4])+1,t2);
t4=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_23527,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[5],a[4]=((C_word*)t0)[3],tmp=(C_word)a,a+=5,tmp);
t5=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_23535,a[2]=((C_word*)t0)[4],a[3]=t4,tmp=(C_word)a,a+=4,tmp);
C_trace("keyword?");
t6=C_retrieve(lf[13]);
((C_proc3)C_retrieve_proc(t6))(3,t6,t5,((C_word*)((C_word*)t0)[4])[1]);}

/* k23533 in k23518 in k23367 in k23364 in mm:make-off in k22468 in k18948 in k18945 in k18942 in k18939 in k18528 in k18525 in k18522 in k18519 in k18516 in k17994 in k17991 in k17468 in k17465 in k17462 in k17459 in k17456 in k17453 in k17450 in k17447 in k17444 in k17441 in k17438 in k17435 in k17432 in k17429 in k17426 in k17423 in k17420 in k17417 in k17414 in k17411 in k17408 in k17269 in k17266 in k17263 in k17260 in k17204 in k17201 in k17198 in k17195 in k17192 in k17189 in k17186 in k17183 in k15938 in k15869 in k15676 in k15673 in k15568 in k15517 in k7924 in k7921 in k5905 in k5612 in k5609 in k5605 in k5314 in k5311 in k5308 in k5305 */
static void C_ccall f_23535(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
if(C_truep(t1)){
C_trace("error");
t2=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t2))(4,t2,((C_word*)t0)[3],lf[14],((C_word*)((C_word*)t0)[2])[1]);}
else{
t2=((C_word*)t0)[3];
f_23527(2,t2,C_SCHEME_UNDEFINED);}}

/* k23525 in k23518 in k23367 in k23364 in mm:make-off in k22468 in k18948 in k18945 in k18942 in k18939 in k18528 in k18525 in k18522 in k18519 in k18516 in k17994 in k17991 in k17468 in k17465 in k17462 in k17459 in k17456 in k17453 in k17450 in k17447 in k17444 in k17441 in k17438 in k17435 in k17432 in k17429 in k17426 in k17423 in k17420 in k17417 in k17414 in k17411 in k17408 in k17269 in k17266 in k17263 in k17260 in k17204 in k17201 in k17198 in k17195 in k17192 in k17189 in k17186 in k17183 in k15938 in k15869 in k15676 in k15673 in k15568 in k15517 in k7924 in k7921 in k5905 in k5612 in k5609 in k5605 in k5314 in k5311 in k5308 in k5305 */
static void C_ccall f_23527(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word *a;
t2=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[3])[1]);
t4=C_mutate(((C_word *)((C_word*)t0)[3])+1,t3);
t5=((C_word*)t0)[2];
f_23372(t5,t4);}

/* k23489 in k23367 in k23364 in mm:make-off in k22468 in k18948 in k18945 in k18942 in k18939 in k18528 in k18525 in k18522 in k18519 in k18516 in k17994 in k17991 in k17468 in k17465 in k17462 in k17459 in k17456 in k17453 in k17450 in k17447 in k17444 in k17441 in k17438 in k17435 in k17432 in k17429 in k17426 in k17423 in k17420 in k17417 in k17414 in k17411 in k17408 in k17269 in k17266 in k17263 in k17260 in k17204 in k17201 in k17198 in k17195 in k17192 in k17189 in k17186 in k17183 in k15938 in k15869 in k15676 in k15673 in k15568 in k15517 in k7924 in k7921 in k5905 in k5612 in k5609 in k5605 in k5314 in k5311 in k5308 in k5305 */
static void C_ccall f_23491(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_23491,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_23495,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("error");
t4=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[21],((C_word*)t0)[2]);}
else{
t4=t2;
f_23495(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k23493 in k23489 in k23367 in k23364 in mm:make-off in k22468 in k18948 in k18945 in k18942 in k18939 in k18528 in k18525 in k18522 in k18519 in k18516 in k17994 in k17991 in k17468 in k17465 in k17462 in k17459 in k17456 in k17453 in k17450 in k17447 in k17444 in k17441 in k17438 in k17435 in k17432 in k17429 in k17426 in k17423 in k17420 in k17417 in k17414 in k17411 in k17408 in k17269 in k17266 in k17263 in k17260 in k17204 in k17201 in k17198 in k17195 in k17192 in k17189 in k17186 in k17183 in k15938 in k15869 in k15676 in k15673 in k15568 in k15517 in k7924 in k7921 in k5905 in k5612 in k5609 in k5605 in k5314 in k5311 in k5308 in k5305 */
static void C_ccall f_23495(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_23372(t7,t6);}

/* k23454 in k23367 in k23364 in mm:make-off in k22468 in k18948 in k18945 in k18942 in k18939 in k18528 in k18525 in k18522 in k18519 in k18516 in k17994 in k17991 in k17468 in k17465 in k17462 in k17459 in k17456 in k17453 in k17450 in k17447 in k17444 in k17441 in k17438 in k17435 in k17432 in k17429 in k17426 in k17423 in k17420 in k17417 in k17414 in k17411 in k17408 in k17269 in k17266 in k17263 in k17260 in k17204 in k17201 in k17198 in k17195 in k17192 in k17189 in k17186 in k17183 in k15938 in k15869 in k15676 in k15673 in k15568 in k15517 in k7924 in k7921 in k5905 in k5612 in k5609 in k5605 in k5314 in k5311 in k5308 in k5305 */
static void C_ccall f_23456(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_23456,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_23460,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("error");
t4=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[21],((C_word*)t0)[2]);}
else{
t4=t2;
f_23460(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k23458 in k23454 in k23367 in k23364 in mm:make-off in k22468 in k18948 in k18945 in k18942 in k18939 in k18528 in k18525 in k18522 in k18519 in k18516 in k17994 in k17991 in k17468 in k17465 in k17462 in k17459 in k17456 in k17453 in k17450 in k17447 in k17444 in k17441 in k17438 in k17435 in k17432 in k17429 in k17426 in k17423 in k17420 in k17417 in k17414 in k17411 in k17408 in k17269 in k17266 in k17263 in k17260 in k17204 in k17201 in k17198 in k17195 in k17192 in k17189 in k17186 in k17183 in k15938 in k15869 in k15676 in k15673 in k15568 in k15517 in k7924 in k7921 in k5905 in k5612 in k5609 in k5605 in k5314 in k5311 in k5308 in k5305 */
static void C_ccall f_23460(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_23372(t7,t6);}

/* k23419 in k23367 in k23364 in mm:make-off in k22468 in k18948 in k18945 in k18942 in k18939 in k18528 in k18525 in k18522 in k18519 in k18516 in k17994 in k17991 in k17468 in k17465 in k17462 in k17459 in k17456 in k17453 in k17450 in k17447 in k17444 in k17441 in k17438 in k17435 in k17432 in k17429 in k17426 in k17423 in k17420 in k17417 in k17414 in k17411 in k17408 in k17269 in k17266 in k17263 in k17260 in k17204 in k17201 in k17198 in k17195 in k17192 in k17189 in k17186 in k17183 in k15938 in k15869 in k15676 in k15673 in k15568 in k15517 in k7924 in k7921 in k5905 in k5612 in k5609 in k5605 in k5314 in k5311 in k5308 in k5305 */
static void C_ccall f_23421(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_23421,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_23425,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("error");
t4=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[21],((C_word*)t0)[2]);}
else{
t4=t2;
f_23425(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k23423 in k23419 in k23367 in k23364 in mm:make-off in k22468 in k18948 in k18945 in k18942 in k18939 in k18528 in k18525 in k18522 in k18519 in k18516 in k17994 in k17991 in k17468 in k17465 in k17462 in k17459 in k17456 in k17453 in k17450 in k17447 in k17444 in k17441 in k17438 in k17435 in k17432 in k17429 in k17426 in k17423 in k17420 in k17417 in k17414 in k17411 in k17408 in k17269 in k17266 in k17263 in k17260 in k17204 in k17201 in k17198 in k17195 in k17192 in k17189 in k17186 in k17183 in k15938 in k15869 in k15676 in k15673 in k15568 in k15517 in k7924 in k7921 in k5905 in k5612 in k5609 in k5605 in k5314 in k5311 in k5308 in k5305 */
static void C_ccall f_23425(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_23372(t7,t6);}

/* k23370 in k23367 in k23364 in mm:make-off in k22468 in k18948 in k18945 in k18942 in k18939 in k18528 in k18525 in k18522 in k18519 in k18516 in k17994 in k17991 in k17468 in k17465 in k17462 in k17459 in k17456 in k17453 in k17450 in k17447 in k17444 in k17441 in k17438 in k17435 in k17432 in k17429 in k17426 in k17423 in k17420 in k17417 in k17414 in k17411 in k17408 in k17269 in k17266 in k17263 in k17260 in k17204 in k17201 in k17198 in k17195 in k17192 in k17189 in k17186 in k17183 in k15938 in k15869 in k15676 in k15673 in k15568 in k15517 in k7924 in k7921 in k5905 in k5612 in k5609 in k5605 in k5314 in k5311 in k5308 in k5305 */
static void C_fcall f_23372(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[6],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_23372,NULL,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_23375,a[2]=((C_word*)t0)[4],a[3]=((C_word*)t0)[5],a[4]=((C_word*)t0)[6],a[5]=((C_word*)t0)[7],tmp=(C_word)a,a+=6,tmp);
if(C_truep((C_word)C_i_nullp(((C_word*)((C_word*)t0)[3])[1]))){
t3=t2;
f_23375(2,t3,C_SCHEME_UNDEFINED);}
else{
C_trace("error");
t3=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t3))(4,t3,t2,lf[5],((C_word*)t0)[2]);}}

/* k23373 in k23370 in k23367 in k23364 in mm:make-off in k22468 in k18948 in k18945 in k18942 in k18939 in k18528 in k18525 in k18522 in k18519 in k18516 in k17994 in k17991 in k17468 in k17465 in k17462 in k17459 in k17456 in k17453 in k17450 in k17447 in k17444 in k17441 in k17438 in k17435 in k17432 in k17429 in k17426 in k17423 in k17420 in k17417 in k17414 in k17411 in k17408 in k17269 in k17266 in k17263 in k17260 in k17204 in k17201 in k17198 in k17195 in k17192 in k17189 in k17186 in k17183 in k15938 in k15869 in k15676 in k15673 in k15568 in k15517 in k7924 in k7921 in k5905 in k5612 in k5609 in k5605 in k5314 in k5311 in k5308 in k5305 */
static void C_ccall f_23375(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word ab[3],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_23375,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_23379,a[2]=((C_word)li342),tmp=(C_word)a,a+=3,tmp);
((C_proc7)(void*)(*((C_word*)t2+1)))(7,t2,((C_word*)t0)[5],C_fix(8),((C_word*)((C_word*)t0)[4])[1],((C_word*)((C_word*)t0)[3])[1],((C_word*)((C_word*)t0)[2])[1],C_fix(0));}

/* f_23379 in k23373 in k23370 in k23367 in k23364 in mm:make-off in k22468 in k18948 in k18945 in k18942 in k18939 in k18528 in k18525 in k18522 in k18519 in k18516 in k17994 in k17991 in k17468 in k17465 in k17462 in k17459 in k17456 in k17453 in k17450 in k17447 in k17444 in k17441 in k17438 in k17435 in k17432 in k17429 in k17426 in k17423 in k17420 in k17417 in k17414 in k17411 in k17408 in k17269 in k17266 in k17263 in k17260 in k17204 in k17201 in k17198 in k17195 in k17192 in k17189 in k17186 in k17183 in k15938 in k15869 in k15676 in k15673 in k15568 in k15517 in k7924 in k7921 in k5905 in k5612 in k5609 in k5605 in k5314 in k5311 in k5308 in k5305 */
static void C_ccall f_23379(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4,C_word t5,C_word t6){
C_word tmp;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word ab[5],*a=ab;
if(c!=7) C_bad_argc_2(c,7,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr7,(void*)f_23379,7,t0,t1,t2,t3,t4,t5,t6);}
t7=(C_word)C_a_i_bytevector(&a,1,C_fix(3));
t8=(C_word)C_i_foreign_fixnum_argumentp(t2);
t9=(C_word)C_i_foreign_flonum_argumentp(t3);
t10=(C_word)C_i_foreign_fixnum_argumentp(t4);
t11=(C_word)C_i_foreign_fixnum_argumentp(t5);
t12=(C_word)C_i_foreign_fixnum_argumentp(t6);
t13=t1;
((C_proc2)(void*)(*((C_word*)t13+1)))(2,t13,(C_word)stub4100(t7,t8,t9,t10,t11,t12));}

/* mm:on? in k22468 in k18948 in k18945 in k18942 in k18939 in k18528 in k18525 in k18522 in k18519 in k18516 in k17994 in k17991 in k17468 in k17465 in k17462 in k17459 in k17456 in k17453 in k17450 in k17447 in k17444 in k17441 in k17438 in k17435 in k17432 in k17429 in k17426 in k17423 in k17420 in k17417 in k17414 in k17411 in k17408 in k17269 in k17266 in k17263 in k17260 in k17204 in k17201 in k17198 in k17195 in k17192 in k17189 in k17186 in k17183 in k15938 in k15869 in k15676 in k15673 in k15568 in k15517 in k7924 in k7921 in k5905 in k5612 in k5609 in k5605 in k5314 in k5311 in k5308 in k5305 */
static void C_ccall f_23343(C_word c,C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word ab[3],*a=ab;
if(c!=3) C_bad_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr3,(void*)f_23343,3,t0,t1,t2);}
t3=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_23348,a[2]=((C_word)li340),tmp=(C_word)a,a+=3,tmp);
((C_proc4)(void*)(*((C_word*)t3+1)))(4,t3,t1,t2,C_fix(9));}

/* f_23348 in mm:on? in k22468 in k18948 in k18945 in k18942 in k18939 in k18528 in k18525 in k18522 in k18519 in k18516 in k17994 in k17991 in k17468 in k17465 in k17462 in k17459 in k17456 in k17453 in k17450 in k17447 in k17444 in k17441 in k17438 in k17435 in k17432 in k17429 in k17426 in k17423 in k17420 in k17417 in k17414 in k17411 in k17408 in k17269 in k17266 in k17263 in k17260 in k17204 in k17201 in k17198 in k17195 in k17192 in k17189 in k17186 in k17183 in k15938 in k15869 in k15676 in k15673 in k15568 in k15517 in k7924 in k7921 in k5905 in k5612 in k5609 in k5605 in k5314 in k5311 in k5308 in k5305 */
static void C_ccall f_23348(C_word c,C_word t0,C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word t6;
C_word *a;
if(c!=4) C_bad_argc_2(c,4,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr4,(void*)f_23348,4,t0,t1,t2,t3);}
t4=(C_truep(t2)?(C_word)C_i_foreign_pointer_argumentp(t2):C_SCHEME_FALSE);
t5=(C_word)C_i_foreign_fixnum_argumentp(t3);
t6=t1;
((C_proc2)(void*)(*((C_word*)t6+1)))(2,t6,(C_word)stub4021(C_SCHEME_UNDEFINED,t4,t5));}

/* mm:make-on in k22468 in k18948 in k18945 in k18942 in k18939 in k18528 in k18525 in k18522 in k18519 in k18516 in k17994 in k17991 in k17468 in k17465 in k17462 in k17459 in k17456 in k17453 in k17450 in k17447 in k17444 in k17441 in k17438 in k17435 in k17432 in k17429 in k17426 in k17423 in k17420 in k17417 in k17414 in k17411 in k17408 in k17269 in k17266 in k17263 in k17260 in k17204 in k17201 in k17198 in k17195 in k17192 in k17189 in k17186 in k17183 in k15938 in k15869 in k15676 in k15673 in k15568 in k15517 in k7924 in k7921 in k5905 in k5612 in k5609 in k5605 in k5314 in k5311 in k5308 in k5305 */
static void C_ccall f_22614(C_word c,C_word t0,C_word t1,...){
C_word tmp;
C_word t2;
va_list v;
C_word *a,c2=c;
C_save_rest(t1,c2,2);
C_check_for_interrupt;
if(!C_demand(c*C_SIZEOF_PAIR+72)){
C_save_and_reclaim((void*)tr2r,(void*)f_22614r,2,t0,t1);}
else{
a=C_alloc((c-2)*3);
t2=C_restore_rest(a,C_rest_count(0));
f_22614r(t0,t1,t2);}}

static void C_ccall f_22614r(C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word t14;
C_word t15;
C_word t16;
C_word t17;
C_word t18;
C_word t19;
C_word t20;
C_word t21;
C_word t22;
C_word t23;
C_word t24;
C_word t25;
C_word t26;
C_word t27;
C_word t28;
C_word t29;
C_word t30;
C_word t31;
C_word t32;
C_word t33;
C_word t34;
C_word *a=C_alloc(72);
t3=C_fix(0);
t4=(*a=C_VECTOR_TYPE|1,a[1]=t3,tmp=(C_word)a,a+=2,tmp);
t5=C_fix(60);
t6=(*a=C_VECTOR_TYPE|1,a[1]=t5,tmp=(C_word)a,a+=2,tmp);
t7=C_fix(64);
t8=(*a=C_VECTOR_TYPE|1,a[1]=t7,tmp=(C_word)a,a+=2,tmp);
t9=C_fix(0);
t10=(*a=C_VECTOR_TYPE|1,a[1]=t9,tmp=(C_word)a,a+=2,tmp);
t11=C_SCHEME_FALSE;
t12=(*a=C_VECTOR_TYPE|1,a[1]=t11,tmp=(C_word)a,a+=2,tmp);
t13=C_SCHEME_FALSE;
t14=(*a=C_VECTOR_TYPE|1,a[1]=t13,tmp=(C_word)a,a+=2,tmp);
t15=C_SCHEME_FALSE;
t16=(*a=C_VECTOR_TYPE|1,a[1]=t15,tmp=(C_word)a,a+=2,tmp);
t17=C_SCHEME_FALSE;
t18=(*a=C_VECTOR_TYPE|1,a[1]=t17,tmp=(C_word)a,a+=2,tmp);
t19=t2;
t20=(*a=C_VECTOR_TYPE|1,a[1]=t19,tmp=(C_word)a,a+=2,tmp);
t21=C_SCHEME_FALSE;
t22=(*a=C_VECTOR_TYPE|1,a[1]=t21,tmp=(C_word)a,a+=2,tmp);
t23=(*a=C_CLOSURE_TYPE|13,a[1]=(C_word)f_22618,a[2]=t18,a[3]=t16,a[4]=t14,a[5]=t22,a[6]=t12,a[7]=t2,a[8]=t20,a[9]=t8,a[10]=t6,a[11]=t10,a[12]=t4,a[13]=t1,tmp=(C_word)a,a+=14,tmp);
if(C_truep((C_word)C_i_nullp(((C_word*)t20)[1]))){
t24=t23;
f_22618(t24,C_SCHEME_UNDEFINED);}
else{
t24=(C_word)C_i_car(((C_word*)t20)[1]);
t25=(C_word)C_eqp(t24,lf[577]);
if(C_truep(t25)){
t26=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_23186,a[2]=t2,a[3]=t23,a[4]=t20,a[5]=t22,a[6]=t12,a[7]=t4,tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)t12)[1])){
C_trace("error");
t27=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t27))(4,t27,t26,lf[19],lf[577]);}
else{
t27=t26;
f_23186(2,t27,C_SCHEME_UNDEFINED);}}
else{
t26=(C_word)C_eqp(t24,lf[578]);
if(C_truep(t26)){
t27=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_23221,a[2]=t2,a[3]=t23,a[4]=t20,a[5]=t22,a[6]=t14,a[7]=t6,tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)t14)[1])){
C_trace("error");
t28=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t28))(4,t28,t27,lf[19],lf[578]);}
else{
t28=t27;
f_23221(2,t28,C_SCHEME_UNDEFINED);}}
else{
t27=(C_word)C_eqp(t24,lf[579]);
if(C_truep(t27)){
t28=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_23256,a[2]=t2,a[3]=t23,a[4]=t20,a[5]=t22,a[6]=t16,a[7]=t8,tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)t16)[1])){
C_trace("error");
t29=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t29))(4,t29,t28,lf[19],lf[579]);}
else{
t29=t28;
f_23256(2,t29,C_SCHEME_UNDEFINED);}}
else{
t28=(C_word)C_eqp(t24,lf[580]);
if(C_truep(t28)){
t29=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_23291,a[2]=t2,a[3]=t23,a[4]=t20,a[5]=t22,a[6]=t18,a[7]=t10,tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)t18)[1])){
C_trace("error");
t30=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t30))(4,t30,t29,lf[19],lf[580]);}
else{
t30=t29;
f_23291(2,t30,C_SCHEME_UNDEFINED);}}
else{
t29=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_23320,a[2]=t23,a[3]=t12,a[4]=t4,a[5]=t20,tmp=(C_word)a,a+=6,tmp);
if(C_truep(((C_word*)t22)[1])){
C_trace("error");
t30=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t30))(4,t30,t29,lf[10],t2);}
else{
t30=t29;
f_23320(2,t30,C_SCHEME_UNDEFINED);}}}}}}}

/* k23318 in mm:make-on in k22468 in k18948 in k18945 in k18942 in k18939 in k18528 in k18525 in k18522 in k18519 in k18516 in k17994 in k17991 in k17468 in k17465 in k17462 in k17459 in k17456 in k17453 in k17450 in k17447 in k17444 in k17441 in k17438 in k17435 in k17432 in k17429 in k17426 in k17423 in k17420 in k17417 in k17414 in k17411 in k17408 in k17269 in k17266 in k17263 in k17260 in k17204 in k17201 in k17198 in k17195 in k17192 in k17189 in k17186 in k17183 in k15938 in k15869 in k15676 in k15673 in k15568 in k15517 in k7924 in k7921 in k5905 in k5612 in k5609 in k5605 in k5314 in k5311 in k5308 in k5305 */
static void C_ccall f_23320(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_23320,2,t0,t1);}
t2=(C_word)C_i_car(((C_word*)((C_word*)t0)[5])[1]);
t3=C_mutate(((C_word *)((C_word*)t0)[4])+1,t2);
t4=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_23327,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[5],a[4]=((C_word*)t0)[3],tmp=(C_word)a,a+=5,tmp);
t5=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_23335,a[2]=((C_word*)t0)[4],a[3]=t4,tmp=(C_word)a,a+=4,tmp);
C_trace("keyword?");
t6=C_retrieve(lf[13]);
((C_proc3)C_retrieve_proc(t6))(3,t6,t5,((C_word*)((C_word*)t0)[4])[1]);}

/* k23333 in k23318 in mm:make-on in k22468 in k18948 in k18945 in k18942 in k18939 in k18528 in k18525 in k18522 in k18519 in k18516 in k17994 in k17991 in k17468 in k17465 in k17462 in k17459 in k17456 in k17453 in k17450 in k17447 in k17444 in k17441 in k17438 in k17435 in k17432 in k17429 in k17426 in k17423 in k17420 in k17417 in k17414 in k17411 in k17408 in k17269 in k17266 in k17263 in k17260 in k17204 in k17201 in k17198 in k17195 in k17192 in k17189 in k17186 in k17183 in k15938 in k15869 in k15676 in k15673 in k15568 in k15517 in k7924 in k7921 in k5905 in k5612 in k5609 in k5605 in k5314 in k5311 in k5308 in k5305 */
static void C_ccall f_23335(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
if(C_truep(t1)){
C_trace("error");
t2=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t2))(4,t2,((C_word*)t0)[3],lf[14],((C_word*)((C_word*)t0)[2])[1]);}
else{
t2=((C_word*)t0)[3];
f_23327(2,t2,C_SCHEME_UNDEFINED);}}

/* k23325 in k23318 in mm:make-on in k22468 in k18948 in k18945 in k18942 in k18939 in k18528 in k18525 in k18522 in k18519 in k18516 in k17994 in k17991 in k17468 in k17465 in k17462 in k17459 in k17456 in k17453 in k17450 in k17447 in k17444 in k17441 in k17438 in k17435 in k17432 in k17429 in k17426 in k17423 in k17420 in k17417 in k17414 in k17411 in k17408 in k17269 in k17266 in k17263 in k17260 in k17204 in k17201 in k17198 in k17195 in k17192 in k17189 in k17186 in k17183 in k15938 in k15869 in k15676 in k15673 in k15568 in k15517 in k7924 in k7921 in k5905 in k5612 in k5609 in k5605 in k5314 in k5311 in k5308 in k5305 */
static void C_ccall f_23327(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word *a;
t2=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[3])[1]);
t4=C_mutate(((C_word *)((C_word*)t0)[3])+1,t3);
t5=((C_word*)t0)[2];
f_22618(t5,t4);}

/* k23289 in mm:make-on in k22468 in k18948 in k18945 in k18942 in k18939 in k18528 in k18525 in k18522 in k18519 in k18516 in k17994 in k17991 in k17468 in k17465 in k17462 in k17459 in k17456 in k17453 in k17450 in k17447 in k17444 in k17441 in k17438 in k17435 in k17432 in k17429 in k17426 in k17423 in k17420 in k17417 in k17414 in k17411 in k17408 in k17269 in k17266 in k17263 in k17260 in k17204 in k17201 in k17198 in k17195 in k17192 in k17189 in k17186 in k17183 in k15938 in k15869 in k15676 in k15673 in k15568 in k15517 in k7924 in k7921 in k5905 in k5612 in k5609 in k5605 in k5314 in k5311 in k5308 in k5305 */
static void C_ccall f_23291(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_23291,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_23295,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("error");
t4=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[21],((C_word*)t0)[2]);}
else{
t4=t2;
f_23295(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k23293 in k23289 in mm:make-on in k22468 in k18948 in k18945 in k18942 in k18939 in k18528 in k18525 in k18522 in k18519 in k18516 in k17994 in k17991 in k17468 in k17465 in k17462 in k17459 in k17456 in k17453 in k17450 in k17447 in k17444 in k17441 in k17438 in k17435 in k17432 in k17429 in k17426 in k17423 in k17420 in k17417 in k17414 in k17411 in k17408 in k17269 in k17266 in k17263 in k17260 in k17204 in k17201 in k17198 in k17195 in k17192 in k17189 in k17186 in k17183 in k15938 in k15869 in k15676 in k15673 in k15568 in k15517 in k7924 in k7921 in k5905 in k5612 in k5609 in k5605 in k5314 in k5311 in k5308 in k5305 */
static void C_ccall f_23295(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_22618(t7,t6);}

/* k23254 in mm:make-on in k22468 in k18948 in k18945 in k18942 in k18939 in k18528 in k18525 in k18522 in k18519 in k18516 in k17994 in k17991 in k17468 in k17465 in k17462 in k17459 in k17456 in k17453 in k17450 in k17447 in k17444 in k17441 in k17438 in k17435 in k17432 in k17429 in k17426 in k17423 in k17420 in k17417 in k17414 in k17411 in k17408 in k17269 in k17266 in k17263 in k17260 in k17204 in k17201 in k17198 in k17195 in k17192 in k17189 in k17186 in k17183 in k15938 in k15869 in k15676 in k15673 in k15568 in k15517 in k7924 in k7921 in k5905 in k5612 in k5609 in k5605 in k5314 in k5311 in k5308 in k5305 */
static void C_ccall f_23256(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_23256,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_23260,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("error");
t4=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[21],((C_word*)t0)[2]);}
else{
t4=t2;
f_23260(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k23258 in k23254 in mm:make-on in k22468 in k18948 in k18945 in k18942 in k18939 in k18528 in k18525 in k18522 in k18519 in k18516 in k17994 in k17991 in k17468 in k17465 in k17462 in k17459 in k17456 in k17453 in k17450 in k17447 in k17444 in k17441 in k17438 in k17435 in k17432 in k17429 in k17426 in k17423 in k17420 in k17417 in k17414 in k17411 in k17408 in k17269 in k17266 in k17263 in k17260 in k17204 in k17201 in k17198 in k17195 in k17192 in k17189 in k17186 in k17183 in k15938 in k15869 in k15676 in k15673 in k15568 in k15517 in k7924 in k7921 in k5905 in k5612 in k5609 in k5605 in k5314 in k5311 in k5308 in k5305 */
static void C_ccall f_23260(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_22618(t7,t6);}

/* k23219 in mm:make-on in k22468 in k18948 in k18945 in k18942 in k18939 in k18528 in k18525 in k18522 in k18519 in k18516 in k17994 in k17991 in k17468 in k17465 in k17462 in k17459 in k17456 in k17453 in k17450 in k17447 in k17444 in k17441 in k17438 in k17435 in k17432 in k17429 in k17426 in k17423 in k17420 in k17417 in k17414 in k17411 in k17408 in k17269 in k17266 in k17263 in k17260 in k17204 in k17201 in k17198 in k17195 in k17192 in k17189 in k17186 in k17183 in k15938 in k15869 in k15676 in k15673 in k15568 in k15517 in k7924 in k7921 in k5905 in k5612 in k5609 in k5605 in k5314 in k5311 in k5308 in k5305 */
static void C_ccall f_23221(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_23221,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_23225,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("error");
t4=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[21],((C_word*)t0)[2]);}
else{
t4=t2;
f_23225(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k23223 in k23219 in mm:make-on in k22468 in k18948 in k18945 in k18942 in k18939 in k18528 in k18525 in k18522 in k18519 in k18516 in k17994 in k17991 in k17468 in k17465 in k17462 in k17459 in k17456 in k17453 in k17450 in k17447 in k17444 in k17441 in k17438 in k17435 in k17432 in k17429 in k17426 in k17423 in k17420 in k17417 in k17414 in k17411 in k17408 in k17269 in k17266 in k17263 in k17260 in k17204 in k17201 in k17198 in k17195 in k17192 in k17189 in k17186 in k17183 in k15938 in k15869 in k15676 in k15673 in k15568 in k15517 in k7924 in k7921 in k5905 in k5612 in k5609 in k5605 in k5314 in k5311 in k5308 in k5305 */
static void C_ccall f_23225(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_22618(t7,t6);}

/* k23184 in mm:make-on in k22468 in k18948 in k18945 in k18942 in k18939 in k18528 in k18525 in k18522 in k18519 in k18516 in k17994 in k17991 in k17468 in k17465 in k17462 in k17459 in k17456 in k17453 in k17450 in k17447 in k17444 in k17441 in k17438 in k17435 in k17432 in k17429 in k17426 in k17423 in k17420 in k17417 in k17414 in k17411 in k17408 in k17269 in k17266 in k17263 in k17260 in k17204 in k17201 in k17198 in k17195 in k17192 in k17189 in k17186 in k17183 in k15938 in k15869 in k15676 in k15673 in k15568 in k15517 in k7924 in k7921 in k5905 in k5612 in k5609 in k5605 in k5314 in k5311 in k5308 in k5305 */
static void C_ccall f_23186(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_23186,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_23190,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("error");
t4=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[21],((C_word*)t0)[2]);}
else{
t4=t2;
f_23190(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k23188 in k23184 in mm:make-on in k22468 in k18948 in k18945 in k18942 in k18939 in k18528 in k18525 in k18522 in k18519 in k18516 in k17994 in k17991 in k17468 in k17465 in k17462 in k17459 in k17456 in k17453 in k17450 in k17447 in k17444 in k17441 in k17438 in k17435 in k17432 in k17429 in k17426 in k17423 in k17420 in k17417 in k17414 in k17411 in k17408 in k17269 in k17266 in k17263 in k17260 in k17204 in k17201 in k17198 in k17195 in k17192 in k17189 in k17186 in k17183 in k15938 in k15869 in k15676 in k15673 in k15568 in k15517 in k7924 in k7921 in k5905 in k5612 in k5609 in k5605 in k5314 in k5311 in k5308 in k5305 */
static void C_ccall f_23190(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_22618(t7,t6);}

/* k22616 in mm:make-on in k22468 in k18948 in k18945 in k18942 in k18939 in k18528 in k18525 in k18522 in k18519 in k18516 in k17994 in k17991 in k17468 in k17465 in k17462 in k17459 in k17456 in k17453 in k17450 in k17447 in k17444 in k17441 in k17438 in k17435 in k17432 in k17429 in k17426 in k17423 in k17420 in k17417 in k17414 in k17411 in k17408 in k17269 in k17266 in k17263 in k17260 in k17204 in k17201 in k17198 in k17195 in k17192 in k17189 in k17186 in k17183 in k15938 in k15869 in k15676 in k15673 in k15568 in k15517 in k7924 in k7921 in k5905 in k5612 in k5609 in k5605 in k5314 in k5311 in k5308 in k5305 */
static void C_fcall f_22618(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word ab[52],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_22618,NULL,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|13,a[1]=(C_word)f_22621,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],a[7]=((C_word*)t0)[7],a[8]=((C_word*)t0)[8],a[9]=((C_word*)t0)[9],a[10]=((C_word*)t0)[10],a[11]=((C_word*)t0)[11],a[12]=((C_word*)t0)[12],a[13]=((C_word*)t0)[13],tmp=(C_word)a,a+=14,tmp);
if(C_truep((C_word)C_i_nullp(((C_word*)((C_word*)t0)[8])[1]))){
t3=t2;
f_22621(t3,C_SCHEME_UNDEFINED);}
else{
t3=(C_word)C_i_car(((C_word*)((C_word*)t0)[8])[1]);
t4=(C_word)C_eqp(t3,lf[577]);
if(C_truep(t4)){
t5=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_23016,a[2]=((C_word*)t0)[7],a[3]=t2,a[4]=((C_word*)t0)[8],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],a[7]=((C_word*)t0)[12],tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)((C_word*)t0)[6])[1])){
C_trace("error");
t6=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t6))(4,t6,t5,lf[19],lf[577]);}
else{
t6=t5;
f_23016(2,t6,C_SCHEME_UNDEFINED);}}
else{
t5=(C_word)C_eqp(t3,lf[578]);
if(C_truep(t5)){
t6=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_23051,a[2]=((C_word*)t0)[7],a[3]=t2,a[4]=((C_word*)t0)[8],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[4],a[7]=((C_word*)t0)[10],tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)((C_word*)t0)[4])[1])){
C_trace("error");
t7=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t7))(4,t7,t6,lf[19],lf[578]);}
else{
t7=t6;
f_23051(2,t7,C_SCHEME_UNDEFINED);}}
else{
t6=(C_word)C_eqp(t3,lf[579]);
if(C_truep(t6)){
t7=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_23086,a[2]=((C_word*)t0)[7],a[3]=t2,a[4]=((C_word*)t0)[8],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[3],a[7]=((C_word*)t0)[9],tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)((C_word*)t0)[3])[1])){
C_trace("error");
t8=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t8))(4,t8,t7,lf[19],lf[579]);}
else{
t8=t7;
f_23086(2,t8,C_SCHEME_UNDEFINED);}}
else{
t7=(C_word)C_eqp(t3,lf[580]);
if(C_truep(t7)){
t8=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_23121,a[2]=((C_word*)t0)[7],a[3]=t2,a[4]=((C_word*)t0)[8],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[2],a[7]=((C_word*)t0)[11],tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)((C_word*)t0)[2])[1])){
C_trace("error");
t9=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t9))(4,t9,t8,lf[19],lf[580]);}
else{
t9=t8;
f_23121(2,t9,C_SCHEME_UNDEFINED);}}
else{
t8=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_23150,a[2]=t2,a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[10],a[5]=((C_word*)t0)[8],tmp=(C_word)a,a+=6,tmp);
if(C_truep(((C_word*)((C_word*)t0)[5])[1])){
C_trace("error");
t9=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t9))(4,t9,t8,lf[10],((C_word*)t0)[7]);}
else{
t9=t8;
f_23150(2,t9,C_SCHEME_UNDEFINED);}}}}}}}

/* k23148 in k22616 in mm:make-on in k22468 in k18948 in k18945 in k18942 in k18939 in k18528 in k18525 in k18522 in k18519 in k18516 in k17994 in k17991 in k17468 in k17465 in k17462 in k17459 in k17456 in k17453 in k17450 in k17447 in k17444 in k17441 in k17438 in k17435 in k17432 in k17429 in k17426 in k17423 in k17420 in k17417 in k17414 in k17411 in k17408 in k17269 in k17266 in k17263 in k17260 in k17204 in k17201 in k17198 in k17195 in k17192 in k17189 in k17186 in k17183 in k15938 in k15869 in k15676 in k15673 in k15568 in k15517 in k7924 in k7921 in k5905 in k5612 in k5609 in k5605 in k5314 in k5311 in k5308 in k5305 */
static void C_ccall f_23150(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_23150,2,t0,t1);}
t2=(C_word)C_i_car(((C_word*)((C_word*)t0)[5])[1]);
t3=C_mutate(((C_word *)((C_word*)t0)[4])+1,t2);
t4=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_23157,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[5],a[4]=((C_word*)t0)[3],tmp=(C_word)a,a+=5,tmp);
t5=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_23165,a[2]=((C_word*)t0)[4],a[3]=t4,tmp=(C_word)a,a+=4,tmp);
C_trace("keyword?");
t6=C_retrieve(lf[13]);
((C_proc3)C_retrieve_proc(t6))(3,t6,t5,((C_word*)((C_word*)t0)[4])[1]);}

/* k23163 in k23148 in k22616 in mm:make-on in k22468 in k18948 in k18945 in k18942 in k18939 in k18528 in k18525 in k18522 in k18519 in k18516 in k17994 in k17991 in k17468 in k17465 in k17462 in k17459 in k17456 in k17453 in k17450 in k17447 in k17444 in k17441 in k17438 in k17435 in k17432 in k17429 in k17426 in k17423 in k17420 in k17417 in k17414 in k17411 in k17408 in k17269 in k17266 in k17263 in k17260 in k17204 in k17201 in k17198 in k17195 in k17192 in k17189 in k17186 in k17183 in k15938 in k15869 in k15676 in k15673 in k15568 in k15517 in k7924 in k7921 in k5905 in k5612 in k5609 in k5605 in k5314 in k5311 in k5308 in k5305 */
static void C_ccall f_23165(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
if(C_truep(t1)){
C_trace("error");
t2=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t2))(4,t2,((C_word*)t0)[3],lf[14],((C_word*)((C_word*)t0)[2])[1]);}
else{
t2=((C_word*)t0)[3];
f_23157(2,t2,C_SCHEME_UNDEFINED);}}

/* k23155 in k23148 in k22616 in mm:make-on in k22468 in k18948 in k18945 in k18942 in k18939 in k18528 in k18525 in k18522 in k18519 in k18516 in k17994 in k17991 in k17468 in k17465 in k17462 in k17459 in k17456 in k17453 in k17450 in k17447 in k17444 in k17441 in k17438 in k17435 in k17432 in k17429 in k17426 in k17423 in k17420 in k17417 in k17414 in k17411 in k17408 in k17269 in k17266 in k17263 in k17260 in k17204 in k17201 in k17198 in k17195 in k17192 in k17189 in k17186 in k17183 in k15938 in k15869 in k15676 in k15673 in k15568 in k15517 in k7924 in k7921 in k5905 in k5612 in k5609 in k5605 in k5314 in k5311 in k5308 in k5305 */
static void C_ccall f_23157(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word *a;
t2=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[3])[1]);
t4=C_mutate(((C_word *)((C_word*)t0)[3])+1,t3);
t5=((C_word*)t0)[2];
f_22621(t5,t4);}

/* k23119 in k22616 in mm:make-on in k22468 in k18948 in k18945 in k18942 in k18939 in k18528 in k18525 in k18522 in k18519 in k18516 in k17994 in k17991 in k17468 in k17465 in k17462 in k17459 in k17456 in k17453 in k17450 in k17447 in k17444 in k17441 in k17438 in k17435 in k17432 in k17429 in k17426 in k17423 in k17420 in k17417 in k17414 in k17411 in k17408 in k17269 in k17266 in k17263 in k17260 in k17204 in k17201 in k17198 in k17195 in k17192 in k17189 in k17186 in k17183 in k15938 in k15869 in k15676 in k15673 in k15568 in k15517 in k7924 in k7921 in k5905 in k5612 in k5609 in k5605 in k5314 in k5311 in k5308 in k5305 */
static void C_ccall f_23121(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_23121,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_23125,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("error");
t4=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[21],((C_word*)t0)[2]);}
else{
t4=t2;
f_23125(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k23123 in k23119 in k22616 in mm:make-on in k22468 in k18948 in k18945 in k18942 in k18939 in k18528 in k18525 in k18522 in k18519 in k18516 in k17994 in k17991 in k17468 in k17465 in k17462 in k17459 in k17456 in k17453 in k17450 in k17447 in k17444 in k17441 in k17438 in k17435 in k17432 in k17429 in k17426 in k17423 in k17420 in k17417 in k17414 in k17411 in k17408 in k17269 in k17266 in k17263 in k17260 in k17204 in k17201 in k17198 in k17195 in k17192 in k17189 in k17186 in k17183 in k15938 in k15869 in k15676 in k15673 in k15568 in k15517 in k7924 in k7921 in k5905 in k5612 in k5609 in k5605 in k5314 in k5311 in k5308 in k5305 */
static void C_ccall f_23125(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_22621(t7,t6);}

/* k23084 in k22616 in mm:make-on in k22468 in k18948 in k18945 in k18942 in k18939 in k18528 in k18525 in k18522 in k18519 in k18516 in k17994 in k17991 in k17468 in k17465 in k17462 in k17459 in k17456 in k17453 in k17450 in k17447 in k17444 in k17441 in k17438 in k17435 in k17432 in k17429 in k17426 in k17423 in k17420 in k17417 in k17414 in k17411 in k17408 in k17269 in k17266 in k17263 in k17260 in k17204 in k17201 in k17198 in k17195 in k17192 in k17189 in k17186 in k17183 in k15938 in k15869 in k15676 in k15673 in k15568 in k15517 in k7924 in k7921 in k5905 in k5612 in k5609 in k5605 in k5314 in k5311 in k5308 in k5305 */
static void C_ccall f_23086(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_23086,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_23090,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("error");
t4=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[21],((C_word*)t0)[2]);}
else{
t4=t2;
f_23090(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k23088 in k23084 in k22616 in mm:make-on in k22468 in k18948 in k18945 in k18942 in k18939 in k18528 in k18525 in k18522 in k18519 in k18516 in k17994 in k17991 in k17468 in k17465 in k17462 in k17459 in k17456 in k17453 in k17450 in k17447 in k17444 in k17441 in k17438 in k17435 in k17432 in k17429 in k17426 in k17423 in k17420 in k17417 in k17414 in k17411 in k17408 in k17269 in k17266 in k17263 in k17260 in k17204 in k17201 in k17198 in k17195 in k17192 in k17189 in k17186 in k17183 in k15938 in k15869 in k15676 in k15673 in k15568 in k15517 in k7924 in k7921 in k5905 in k5612 in k5609 in k5605 in k5314 in k5311 in k5308 in k5305 */
static void C_ccall f_23090(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_22621(t7,t6);}

/* k23049 in k22616 in mm:make-on in k22468 in k18948 in k18945 in k18942 in k18939 in k18528 in k18525 in k18522 in k18519 in k18516 in k17994 in k17991 in k17468 in k17465 in k17462 in k17459 in k17456 in k17453 in k17450 in k17447 in k17444 in k17441 in k17438 in k17435 in k17432 in k17429 in k17426 in k17423 in k17420 in k17417 in k17414 in k17411 in k17408 in k17269 in k17266 in k17263 in k17260 in k17204 in k17201 in k17198 in k17195 in k17192 in k17189 in k17186 in k17183 in k15938 in k15869 in k15676 in k15673 in k15568 in k15517 in k7924 in k7921 in k5905 in k5612 in k5609 in k5605 in k5314 in k5311 in k5308 in k5305 */
static void C_ccall f_23051(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_23051,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_23055,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("error");
t4=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[21],((C_word*)t0)[2]);}
else{
t4=t2;
f_23055(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k23053 in k23049 in k22616 in mm:make-on in k22468 in k18948 in k18945 in k18942 in k18939 in k18528 in k18525 in k18522 in k18519 in k18516 in k17994 in k17991 in k17468 in k17465 in k17462 in k17459 in k17456 in k17453 in k17450 in k17447 in k17444 in k17441 in k17438 in k17435 in k17432 in k17429 in k17426 in k17423 in k17420 in k17417 in k17414 in k17411 in k17408 in k17269 in k17266 in k17263 in k17260 in k17204 in k17201 in k17198 in k17195 in k17192 in k17189 in k17186 in k17183 in k15938 in k15869 in k15676 in k15673 in k15568 in k15517 in k7924 in k7921 in k5905 in k5612 in k5609 in k5605 in k5314 in k5311 in k5308 in k5305 */
static void C_ccall f_23055(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_22621(t7,t6);}

/* k23014 in k22616 in mm:make-on in k22468 in k18948 in k18945 in k18942 in k18939 in k18528 in k18525 in k18522 in k18519 in k18516 in k17994 in k17991 in k17468 in k17465 in k17462 in k17459 in k17456 in k17453 in k17450 in k17447 in k17444 in k17441 in k17438 in k17435 in k17432 in k17429 in k17426 in k17423 in k17420 in k17417 in k17414 in k17411 in k17408 in k17269 in k17266 in k17263 in k17260 in k17204 in k17201 in k17198 in k17195 in k17192 in k17189 in k17186 in k17183 in k15938 in k15869 in k15676 in k15673 in k15568 in k15517 in k7924 in k7921 in k5905 in k5612 in k5609 in k5605 in k5314 in k5311 in k5308 in k5305 */
static void C_ccall f_23016(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_23016,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_23020,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("error");
t4=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[21],((C_word*)t0)[2]);}
else{
t4=t2;
f_23020(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k23018 in k23014 in k22616 in mm:make-on in k22468 in k18948 in k18945 in k18942 in k18939 in k18528 in k18525 in k18522 in k18519 in k18516 in k17994 in k17991 in k17468 in k17465 in k17462 in k17459 in k17456 in k17453 in k17450 in k17447 in k17444 in k17441 in k17438 in k17435 in k17432 in k17429 in k17426 in k17423 in k17420 in k17417 in k17414 in k17411 in k17408 in k17269 in k17266 in k17263 in k17260 in k17204 in k17201 in k17198 in k17195 in k17192 in k17189 in k17186 in k17183 in k15938 in k15869 in k15676 in k15673 in k15568 in k15517 in k7924 in k7921 in k5905 in k5612 in k5609 in k5605 in k5314 in k5311 in k5308 in k5305 */
static void C_ccall f_23020(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_22621(t7,t6);}

/* k22619 in k22616 in mm:make-on in k22468 in k18948 in k18945 in k18942 in k18939 in k18528 in k18525 in k18522 in k18519 in k18516 in k17994 in k17991 in k17468 in k17465 in k17462 in k17459 in k17456 in k17453 in k17450 in k17447 in k17444 in k17441 in k17438 in k17435 in k17432 in k17429 in k17426 in k17423 in k17420 in k17417 in k17414 in k17411 in k17408 in k17269 in k17266 in k17263 in k17260 in k17204 in k17201 in k17198 in k17195 in k17192 in k17189 in k17186 in k17183 in k15938 in k15869 in k15676 in k15673 in k15568 in k15517 in k7924 in k7921 in k5905 in k5612 in k5609 in k5605 in k5314 in k5311 in k5308 in k5305 */
static void C_fcall f_22621(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word ab[52],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_22621,NULL,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|13,a[1]=(C_word)f_22624,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],a[7]=((C_word*)t0)[7],a[8]=((C_word*)t0)[8],a[9]=((C_word*)t0)[9],a[10]=((C_word*)t0)[10],a[11]=((C_word*)t0)[11],a[12]=((C_word*)t0)[12],a[13]=((C_word*)t0)[13],tmp=(C_word)a,a+=14,tmp);
if(C_truep((C_word)C_i_nullp(((C_word*)((C_word*)t0)[8])[1]))){
t3=t2;
f_22624(t3,C_SCHEME_UNDEFINED);}
else{
t3=(C_word)C_i_car(((C_word*)((C_word*)t0)[8])[1]);
t4=(C_word)C_eqp(t3,lf[577]);
if(C_truep(t4)){
t5=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_22846,a[2]=((C_word*)t0)[7],a[3]=t2,a[4]=((C_word*)t0)[8],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],a[7]=((C_word*)t0)[12],tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)((C_word*)t0)[6])[1])){
C_trace("error");
t6=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t6))(4,t6,t5,lf[19],lf[577]);}
else{
t6=t5;
f_22846(2,t6,C_SCHEME_UNDEFINED);}}
else{
t5=(C_word)C_eqp(t3,lf[578]);
if(C_truep(t5)){
t6=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_22881,a[2]=((C_word*)t0)[7],a[3]=t2,a[4]=((C_word*)t0)[8],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[4],a[7]=((C_word*)t0)[10],tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)((C_word*)t0)[4])[1])){
C_trace("error");
t7=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t7))(4,t7,t6,lf[19],lf[578]);}
else{
t7=t6;
f_22881(2,t7,C_SCHEME_UNDEFINED);}}
else{
t6=(C_word)C_eqp(t3,lf[579]);
if(C_truep(t6)){
t7=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_22916,a[2]=((C_word*)t0)[7],a[3]=t2,a[4]=((C_word*)t0)[8],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[3],a[7]=((C_word*)t0)[9],tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)((C_word*)t0)[3])[1])){
C_trace("error");
t8=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t8))(4,t8,t7,lf[19],lf[579]);}
else{
t8=t7;
f_22916(2,t8,C_SCHEME_UNDEFINED);}}
else{
t7=(C_word)C_eqp(t3,lf[580]);
if(C_truep(t7)){
t8=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_22951,a[2]=((C_word*)t0)[7],a[3]=t2,a[4]=((C_word*)t0)[8],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[2],a[7]=((C_word*)t0)[11],tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)((C_word*)t0)[2])[1])){
C_trace("error");
t9=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t9))(4,t9,t8,lf[19],lf[580]);}
else{
t9=t8;
f_22951(2,t9,C_SCHEME_UNDEFINED);}}
else{
t8=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_22980,a[2]=t2,a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[9],a[5]=((C_word*)t0)[8],tmp=(C_word)a,a+=6,tmp);
if(C_truep(((C_word*)((C_word*)t0)[5])[1])){
C_trace("error");
t9=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t9))(4,t9,t8,lf[10],((C_word*)t0)[7]);}
else{
t9=t8;
f_22980(2,t9,C_SCHEME_UNDEFINED);}}}}}}}

/* k22978 in k22619 in k22616 in mm:make-on in k22468 in k18948 in k18945 in k18942 in k18939 in k18528 in k18525 in k18522 in k18519 in k18516 in k17994 in k17991 in k17468 in k17465 in k17462 in k17459 in k17456 in k17453 in k17450 in k17447 in k17444 in k17441 in k17438 in k17435 in k17432 in k17429 in k17426 in k17423 in k17420 in k17417 in k17414 in k17411 in k17408 in k17269 in k17266 in k17263 in k17260 in k17204 in k17201 in k17198 in k17195 in k17192 in k17189 in k17186 in k17183 in k15938 in k15869 in k15676 in k15673 in k15568 in k15517 in k7924 in k7921 in k5905 in k5612 in k5609 in k5605 in k5314 in k5311 in k5308 in k5305 */
static void C_ccall f_22980(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_22980,2,t0,t1);}
t2=(C_word)C_i_car(((C_word*)((C_word*)t0)[5])[1]);
t3=C_mutate(((C_word *)((C_word*)t0)[4])+1,t2);
t4=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_22987,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[5],a[4]=((C_word*)t0)[3],tmp=(C_word)a,a+=5,tmp);
t5=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_22995,a[2]=((C_word*)t0)[4],a[3]=t4,tmp=(C_word)a,a+=4,tmp);
C_trace("keyword?");
t6=C_retrieve(lf[13]);
((C_proc3)C_retrieve_proc(t6))(3,t6,t5,((C_word*)((C_word*)t0)[4])[1]);}

/* k22993 in k22978 in k22619 in k22616 in mm:make-on in k22468 in k18948 in k18945 in k18942 in k18939 in k18528 in k18525 in k18522 in k18519 in k18516 in k17994 in k17991 in k17468 in k17465 in k17462 in k17459 in k17456 in k17453 in k17450 in k17447 in k17444 in k17441 in k17438 in k17435 in k17432 in k17429 in k17426 in k17423 in k17420 in k17417 in k17414 in k17411 in k17408 in k17269 in k17266 in k17263 in k17260 in k17204 in k17201 in k17198 in k17195 in k17192 in k17189 in k17186 in k17183 in k15938 in k15869 in k15676 in k15673 in k15568 in k15517 in k7924 in k7921 in k5905 in k5612 in k5609 in k5605 in k5314 in k5311 in k5308 in k5305 */
static void C_ccall f_22995(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
if(C_truep(t1)){
C_trace("error");
t2=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t2))(4,t2,((C_word*)t0)[3],lf[14],((C_word*)((C_word*)t0)[2])[1]);}
else{
t2=((C_word*)t0)[3];
f_22987(2,t2,C_SCHEME_UNDEFINED);}}

/* k22985 in k22978 in k22619 in k22616 in mm:make-on in k22468 in k18948 in k18945 in k18942 in k18939 in k18528 in k18525 in k18522 in k18519 in k18516 in k17994 in k17991 in k17468 in k17465 in k17462 in k17459 in k17456 in k17453 in k17450 in k17447 in k17444 in k17441 in k17438 in k17435 in k17432 in k17429 in k17426 in k17423 in k17420 in k17417 in k17414 in k17411 in k17408 in k17269 in k17266 in k17263 in k17260 in k17204 in k17201 in k17198 in k17195 in k17192 in k17189 in k17186 in k17183 in k15938 in k15869 in k15676 in k15673 in k15568 in k15517 in k7924 in k7921 in k5905 in k5612 in k5609 in k5605 in k5314 in k5311 in k5308 in k5305 */
static void C_ccall f_22987(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word *a;
t2=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[3])[1]);
t4=C_mutate(((C_word *)((C_word*)t0)[3])+1,t3);
t5=((C_word*)t0)[2];
f_22624(t5,t4);}

/* k22949 in k22619 in k22616 in mm:make-on in k22468 in k18948 in k18945 in k18942 in k18939 in k18528 in k18525 in k18522 in k18519 in k18516 in k17994 in k17991 in k17468 in k17465 in k17462 in k17459 in k17456 in k17453 in k17450 in k17447 in k17444 in k17441 in k17438 in k17435 in k17432 in k17429 in k17426 in k17423 in k17420 in k17417 in k17414 in k17411 in k17408 in k17269 in k17266 in k17263 in k17260 in k17204 in k17201 in k17198 in k17195 in k17192 in k17189 in k17186 in k17183 in k15938 in k15869 in k15676 in k15673 in k15568 in k15517 in k7924 in k7921 in k5905 in k5612 in k5609 in k5605 in k5314 in k5311 in k5308 in k5305 */
static void C_ccall f_22951(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_22951,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_22955,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("error");
t4=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[21],((C_word*)t0)[2]);}
else{
t4=t2;
f_22955(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k22953 in k22949 in k22619 in k22616 in mm:make-on in k22468 in k18948 in k18945 in k18942 in k18939 in k18528 in k18525 in k18522 in k18519 in k18516 in k17994 in k17991 in k17468 in k17465 in k17462 in k17459 in k17456 in k17453 in k17450 in k17447 in k17444 in k17441 in k17438 in k17435 in k17432 in k17429 in k17426 in k17423 in k17420 in k17417 in k17414 in k17411 in k17408 in k17269 in k17266 in k17263 in k17260 in k17204 in k17201 in k17198 in k17195 in k17192 in k17189 in k17186 in k17183 in k15938 in k15869 in k15676 in k15673 in k15568 in k15517 in k7924 in k7921 in k5905 in k5612 in k5609 in k5605 in k5314 in k5311 in k5308 in k5305 */
static void C_ccall f_22955(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_22624(t7,t6);}

/* k22914 in k22619 in k22616 in mm:make-on in k22468 in k18948 in k18945 in k18942 in k18939 in k18528 in k18525 in k18522 in k18519 in k18516 in k17994 in k17991 in k17468 in k17465 in k17462 in k17459 in k17456 in k17453 in k17450 in k17447 in k17444 in k17441 in k17438 in k17435 in k17432 in k17429 in k17426 in k17423 in k17420 in k17417 in k17414 in k17411 in k17408 in k17269 in k17266 in k17263 in k17260 in k17204 in k17201 in k17198 in k17195 in k17192 in k17189 in k17186 in k17183 in k15938 in k15869 in k15676 in k15673 in k15568 in k15517 in k7924 in k7921 in k5905 in k5612 in k5609 in k5605 in k5314 in k5311 in k5308 in k5305 */
static void C_ccall f_22916(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_22916,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_22920,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("error");
t4=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[21],((C_word*)t0)[2]);}
else{
t4=t2;
f_22920(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k22918 in k22914 in k22619 in k22616 in mm:make-on in k22468 in k18948 in k18945 in k18942 in k18939 in k18528 in k18525 in k18522 in k18519 in k18516 in k17994 in k17991 in k17468 in k17465 in k17462 in k17459 in k17456 in k17453 in k17450 in k17447 in k17444 in k17441 in k17438 in k17435 in k17432 in k17429 in k17426 in k17423 in k17420 in k17417 in k17414 in k17411 in k17408 in k17269 in k17266 in k17263 in k17260 in k17204 in k17201 in k17198 in k17195 in k17192 in k17189 in k17186 in k17183 in k15938 in k15869 in k15676 in k15673 in k15568 in k15517 in k7924 in k7921 in k5905 in k5612 in k5609 in k5605 in k5314 in k5311 in k5308 in k5305 */
static void C_ccall f_22920(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_22624(t7,t6);}

/* k22879 in k22619 in k22616 in mm:make-on in k22468 in k18948 in k18945 in k18942 in k18939 in k18528 in k18525 in k18522 in k18519 in k18516 in k17994 in k17991 in k17468 in k17465 in k17462 in k17459 in k17456 in k17453 in k17450 in k17447 in k17444 in k17441 in k17438 in k17435 in k17432 in k17429 in k17426 in k17423 in k17420 in k17417 in k17414 in k17411 in k17408 in k17269 in k17266 in k17263 in k17260 in k17204 in k17201 in k17198 in k17195 in k17192 in k17189 in k17186 in k17183 in k15938 in k15869 in k15676 in k15673 in k15568 in k15517 in k7924 in k7921 in k5905 in k5612 in k5609 in k5605 in k5314 in k5311 in k5308 in k5305 */
static void C_ccall f_22881(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_22881,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_22885,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("error");
t4=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[21],((C_word*)t0)[2]);}
else{
t4=t2;
f_22885(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k22883 in k22879 in k22619 in k22616 in mm:make-on in k22468 in k18948 in k18945 in k18942 in k18939 in k18528 in k18525 in k18522 in k18519 in k18516 in k17994 in k17991 in k17468 in k17465 in k17462 in k17459 in k17456 in k17453 in k17450 in k17447 in k17444 in k17441 in k17438 in k17435 in k17432 in k17429 in k17426 in k17423 in k17420 in k17417 in k17414 in k17411 in k17408 in k17269 in k17266 in k17263 in k17260 in k17204 in k17201 in k17198 in k17195 in k17192 in k17189 in k17186 in k17183 in k15938 in k15869 in k15676 in k15673 in k15568 in k15517 in k7924 in k7921 in k5905 in k5612 in k5609 in k5605 in k5314 in k5311 in k5308 in k5305 */
static void C_ccall f_22885(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_22624(t7,t6);}

/* k22844 in k22619 in k22616 in mm:make-on in k22468 in k18948 in k18945 in k18942 in k18939 in k18528 in k18525 in k18522 in k18519 in k18516 in k17994 in k17991 in k17468 in k17465 in k17462 in k17459 in k17456 in k17453 in k17450 in k17447 in k17444 in k17441 in k17438 in k17435 in k17432 in k17429 in k17426 in k17423 in k17420 in k17417 in k17414 in k17411 in k17408 in k17269 in k17266 in k17263 in k17260 in k17204 in k17201 in k17198 in k17195 in k17192 in k17189 in k17186 in k17183 in k15938 in k15869 in k15676 in k15673 in k15568 in k15517 in k7924 in k7921 in k5905 in k5612 in k5609 in k5605 in k5314 in k5311 in k5308 in k5305 */
static void C_ccall f_22846(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_22846,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_22850,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("error");
t4=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[21],((C_word*)t0)[2]);}
else{
t4=t2;
f_22850(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k22848 in k22844 in k22619 in k22616 in mm:make-on in k22468 in k18948 in k18945 in k18942 in k18939 in k18528 in k18525 in k18522 in k18519 in k18516 in k17994 in k17991 in k17468 in k17465 in k17462 in k17459 in k17456 in k17453 in k17450 in k17447 in k17444 in k17441 in k17438 in k17435 in k17432 in k17429 in k17426 in k17423 in k17420 in k17417 in k17414 in k17411 in k17408 in k17269 in k17266 in k17263 in k17260 in k17204 in k17201 in k17198 in k17195 in k17192 in k17189 in k17186 in k17183 in k15938 in k15869 in k15676 in k15673 in k15568 in k15517 in k7924 in k7921 in k5905 in k5612 in k5609 in k5605 in k5314 in k5311 in k5308 in k5305 */
static void C_ccall f_22850(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_22624(t7,t6);}

/* k22622 in k22619 in k22616 in mm:make-on in k22468 in k18948 in k18945 in k18942 in k18939 in k18528 in k18525 in k18522 in k18519 in k18516 in k17994 in k17991 in k17468 in k17465 in k17462 in k17459 in k17456 in k17453 in k17450 in k17447 in k17444 in k17441 in k17438 in k17435 in k17432 in k17429 in k17426 in k17423 in k17420 in k17417 in k17414 in k17411 in k17408 in k17269 in k17266 in k17263 in k17260 in k17204 in k17201 in k17198 in k17195 in k17192 in k17189 in k17186 in k17183 in k15938 in k15869 in k15676 in k15673 in k15568 in k15517 in k7924 in k7921 in k5905 in k5612 in k5609 in k5605 in k5314 in k5311 in k5308 in k5305 */
static void C_fcall f_22624(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word ab[47],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_22624,NULL,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|8,a[1]=(C_word)f_22627,a[2]=((C_word*)t0)[7],a[3]=((C_word*)t0)[8],a[4]=((C_word*)t0)[9],a[5]=((C_word*)t0)[10],a[6]=((C_word*)t0)[11],a[7]=((C_word*)t0)[12],a[8]=((C_word*)t0)[13],tmp=(C_word)a,a+=9,tmp);
if(C_truep((C_word)C_i_nullp(((C_word*)((C_word*)t0)[8])[1]))){
t3=t2;
f_22627(t3,C_SCHEME_UNDEFINED);}
else{
t3=(C_word)C_i_car(((C_word*)((C_word*)t0)[8])[1]);
t4=(C_word)C_eqp(t3,lf[577]);
if(C_truep(t4)){
t5=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_22676,a[2]=((C_word*)t0)[7],a[3]=t2,a[4]=((C_word*)t0)[8],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],a[7]=((C_word*)t0)[12],tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)((C_word*)t0)[6])[1])){
C_trace("error");
t6=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t6))(4,t6,t5,lf[19],lf[577]);}
else{
t6=t5;
f_22676(2,t6,C_SCHEME_UNDEFINED);}}
else{
t5=(C_word)C_eqp(t3,lf[578]);
if(C_truep(t5)){
t6=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_22711,a[2]=((C_word*)t0)[7],a[3]=t2,a[4]=((C_word*)t0)[8],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[4],a[7]=((C_word*)t0)[10],tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)((C_word*)t0)[4])[1])){
C_trace("error");
t7=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t7))(4,t7,t6,lf[19],lf[578]);}
else{
t7=t6;
f_22711(2,t7,C_SCHEME_UNDEFINED);}}
else{
t6=(C_word)C_eqp(t3,lf[579]);
if(C_truep(t6)){
t7=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_22746,a[2]=((C_word*)t0)[7],a[3]=t2,a[4]=((C_word*)t0)[8],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[3],a[7]=((C_word*)t0)[9],tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)((C_word*)t0)[3])[1])){
C_trace("error");
t8=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t8))(4,t8,t7,lf[19],lf[579]);}
else{
t8=t7;
f_22746(2,t8,C_SCHEME_UNDEFINED);}}
else{
t7=(C_word)C_eqp(t3,lf[580]);
if(C_truep(t7)){
t8=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_22781,a[2]=((C_word*)t0)[7],a[3]=t2,a[4]=((C_word*)t0)[8],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[2],a[7]=((C_word*)t0)[11],tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)((C_word*)t0)[2])[1])){
C_trace("error");
t9=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t9))(4,t9,t8,lf[19],lf[580]);}
else{
t9=t8;
f_22781(2,t9,C_SCHEME_UNDEFINED);}}
else{
t8=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_22810,a[2]=t2,a[3]=((C_word*)t0)[2],a[4]=((C_word*)t0)[11],a[5]=((C_word*)t0)[8],tmp=(C_word)a,a+=6,tmp);
if(C_truep(((C_word*)((C_word*)t0)[5])[1])){
C_trace("error");
t9=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t9))(4,t9,t8,lf[10],((C_word*)t0)[7]);}
else{
t9=t8;
f_22810(2,t9,C_SCHEME_UNDEFINED);}}}}}}}

/* k22808 in k22622 in k22619 in k22616 in mm:make-on in k22468 in k18948 in k18945 in k18942 in k18939 in k18528 in k18525 in k18522 in k18519 in k18516 in k17994 in k17991 in k17468 in k17465 in k17462 in k17459 in k17456 in k17453 in k17450 in k17447 in k17444 in k17441 in k17438 in k17435 in k17432 in k17429 in k17426 in k17423 in k17420 in k17417 in k17414 in k17411 in k17408 in k17269 in k17266 in k17263 in k17260 in k17204 in k17201 in k17198 in k17195 in k17192 in k17189 in k17186 in k17183 in k15938 in k15869 in k15676 in k15673 in k15568 in k15517 in k7924 in k7921 in k5905 in k5612 in k5609 in k5605 in k5314 in k5311 in k5308 in k5305 */
static void C_ccall f_22810(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_22810,2,t0,t1);}
t2=(C_word)C_i_car(((C_word*)((C_word*)t0)[5])[1]);
t3=C_mutate(((C_word *)((C_word*)t0)[4])+1,t2);
t4=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_22817,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[5],a[4]=((C_word*)t0)[3],tmp=(C_word)a,a+=5,tmp);
t5=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_22825,a[2]=((C_word*)t0)[4],a[3]=t4,tmp=(C_word)a,a+=4,tmp);
C_trace("keyword?");
t6=C_retrieve(lf[13]);
((C_proc3)C_retrieve_proc(t6))(3,t6,t5,((C_word*)((C_word*)t0)[4])[1]);}

/* k22823 in k22808 in k22622 in k22619 in k22616 in mm:make-on in k22468 in k18948 in k18945 in k18942 in k18939 in k18528 in k18525 in k18522 in k18519 in k18516 in k17994 in k17991 in k17468 in k17465 in k17462 in k17459 in k17456 in k17453 in k17450 in k17447 in k17444 in k17441 in k17438 in k17435 in k17432 in k17429 in k17426 in k17423 in k17420 in k17417 in k17414 in k17411 in k17408 in k17269 in k17266 in k17263 in k17260 in k17204 in k17201 in k17198 in k17195 in k17192 in k17189 in k17186 in k17183 in k15938 in k15869 in k15676 in k15673 in k15568 in k15517 in k7924 in k7921 in k5905 in k5612 in k5609 in k5605 in k5314 in k5311 in k5308 in k5305 */
static void C_ccall f_22825(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
if(C_truep(t1)){
C_trace("error");
t2=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t2))(4,t2,((C_word*)t0)[3],lf[14],((C_word*)((C_word*)t0)[2])[1]);}
else{
t2=((C_word*)t0)[3];
f_22817(2,t2,C_SCHEME_UNDEFINED);}}

/* k22815 in k22808 in k22622 in k22619 in k22616 in mm:make-on in k22468 in k18948 in k18945 in k18942 in k18939 in k18528 in k18525 in k18522 in k18519 in k18516 in k17994 in k17991 in k17468 in k17465 in k17462 in k17459 in k17456 in k17453 in k17450 in k17447 in k17444 in k17441 in k17438 in k17435 in k17432 in k17429 in k17426 in k17423 in k17420 in k17417 in k17414 in k17411 in k17408 in k17269 in k17266 in k17263 in k17260 in k17204 in k17201 in k17198 in k17195 in k17192 in k17189 in k17186 in k17183 in k15938 in k15869 in k15676 in k15673 in k15568 in k15517 in k7924 in k7921 in k5905 in k5612 in k5609 in k5605 in k5314 in k5311 in k5308 in k5305 */
static void C_ccall f_22817(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word *a;
t2=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[3])[1]);
t4=C_mutate(((C_word *)((C_word*)t0)[3])+1,t3);
t5=((C_word*)t0)[2];
f_22627(t5,t4);}

/* k22779 in k22622 in k22619 in k22616 in mm:make-on in k22468 in k18948 in k18945 in k18942 in k18939 in k18528 in k18525 in k18522 in k18519 in k18516 in k17994 in k17991 in k17468 in k17465 in k17462 in k17459 in k17456 in k17453 in k17450 in k17447 in k17444 in k17441 in k17438 in k17435 in k17432 in k17429 in k17426 in k17423 in k17420 in k17417 in k17414 in k17411 in k17408 in k17269 in k17266 in k17263 in k17260 in k17204 in k17201 in k17198 in k17195 in k17192 in k17189 in k17186 in k17183 in k15938 in k15869 in k15676 in k15673 in k15568 in k15517 in k7924 in k7921 in k5905 in k5612 in k5609 in k5605 in k5314 in k5311 in k5308 in k5305 */
static void C_ccall f_22781(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_22781,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_22785,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("error");
t4=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[21],((C_word*)t0)[2]);}
else{
t4=t2;
f_22785(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k22783 in k22779 in k22622 in k22619 in k22616 in mm:make-on in k22468 in k18948 in k18945 in k18942 in k18939 in k18528 in k18525 in k18522 in k18519 in k18516 in k17994 in k17991 in k17468 in k17465 in k17462 in k17459 in k17456 in k17453 in k17450 in k17447 in k17444 in k17441 in k17438 in k17435 in k17432 in k17429 in k17426 in k17423 in k17420 in k17417 in k17414 in k17411 in k17408 in k17269 in k17266 in k17263 in k17260 in k17204 in k17201 in k17198 in k17195 in k17192 in k17189 in k17186 in k17183 in k15938 in k15869 in k15676 in k15673 in k15568 in k15517 in k7924 in k7921 in k5905 in k5612 in k5609 in k5605 in k5314 in k5311 in k5308 in k5305 */
static void C_ccall f_22785(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_22627(t7,t6);}

/* k22744 in k22622 in k22619 in k22616 in mm:make-on in k22468 in k18948 in k18945 in k18942 in k18939 in k18528 in k18525 in k18522 in k18519 in k18516 in k17994 in k17991 in k17468 in k17465 in k17462 in k17459 in k17456 in k17453 in k17450 in k17447 in k17444 in k17441 in k17438 in k17435 in k17432 in k17429 in k17426 in k17423 in k17420 in k17417 in k17414 in k17411 in k17408 in k17269 in k17266 in k17263 in k17260 in k17204 in k17201 in k17198 in k17195 in k17192 in k17189 in k17186 in k17183 in k15938 in k15869 in k15676 in k15673 in k15568 in k15517 in k7924 in k7921 in k5905 in k5612 in k5609 in k5605 in k5314 in k5311 in k5308 in k5305 */
static void C_ccall f_22746(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_22746,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_22750,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("error");
t4=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[21],((C_word*)t0)[2]);}
else{
t4=t2;
f_22750(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k22748 in k22744 in k22622 in k22619 in k22616 in mm:make-on in k22468 in k18948 in k18945 in k18942 in k18939 in k18528 in k18525 in k18522 in k18519 in k18516 in k17994 in k17991 in k17468 in k17465 in k17462 in k17459 in k17456 in k17453 in k17450 in k17447 in k17444 in k17441 in k17438 in k17435 in k17432 in k17429 in k17426 in k17423 in k17420 in k17417 in k17414 in k17411 in k17408 in k17269 in k17266 in k17263 in k17260 in k17204 in k17201 in k17198 in k17195 in k17192 in k17189 in k17186 in k17183 in k15938 in k15869 in k15676 in k15673 in k15568 in k15517 in k7924 in k7921 in k5905 in k5612 in k5609 in k5605 in k5314 in k5311 in k5308 in k5305 */
static void C_ccall f_22750(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_22627(t7,t6);}

/* k22709 in k22622 in k22619 in k22616 in mm:make-on in k22468 in k18948 in k18945 in k18942 in k18939 in k18528 in k18525 in k18522 in k18519 in k18516 in k17994 in k17991 in k17468 in k17465 in k17462 in k17459 in k17456 in k17453 in k17450 in k17447 in k17444 in k17441 in k17438 in k17435 in k17432 in k17429 in k17426 in k17423 in k17420 in k17417 in k17414 in k17411 in k17408 in k17269 in k17266 in k17263 in k17260 in k17204 in k17201 in k17198 in k17195 in k17192 in k17189 in k17186 in k17183 in k15938 in k15869 in k15676 in k15673 in k15568 in k15517 in k7924 in k7921 in k5905 in k5612 in k5609 in k5605 in k5314 in k5311 in k5308 in k5305 */
static void C_ccall f_22711(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_22711,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_22715,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("error");
t4=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[21],((C_word*)t0)[2]);}
else{
t4=t2;
f_22715(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k22713 in k22709 in k22622 in k22619 in k22616 in mm:make-on in k22468 in k18948 in k18945 in k18942 in k18939 in k18528 in k18525 in k18522 in k18519 in k18516 in k17994 in k17991 in k17468 in k17465 in k17462 in k17459 in k17456 in k17453 in k17450 in k17447 in k17444 in k17441 in k17438 in k17435 in k17432 in k17429 in k17426 in k17423 in k17420 in k17417 in k17414 in k17411 in k17408 in k17269 in k17266 in k17263 in k17260 in k17204 in k17201 in k17198 in k17195 in k17192 in k17189 in k17186 in k17183 in k15938 in k15869 in k15676 in k15673 in k15568 in k15517 in k7924 in k7921 in k5905 in k5612 in k5609 in k5605 in k5314 in k5311 in k5308 in k5305 */
static void C_ccall f_22715(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_22627(t7,t6);}

/* k22674 in k22622 in k22619 in k22616 in mm:make-on in k22468 in k18948 in k18945 in k18942 in k18939 in k18528 in k18525 in k18522 in k18519 in k18516 in k17994 in k17991 in k17468 in k17465 in k17462 in k17459 in k17456 in k17453 in k17450 in k17447 in k17444 in k17441 in k17438 in k17435 in k17432 in k17429 in k17426 in k17423 in k17420 in k17417 in k17414 in k17411 in k17408 in k17269 in k17266 in k17263 in k17260 in k17204 in k17201 in k17198 in k17195 in k17192 in k17189 in k17186 in k17183 in k15938 in k15869 in k15676 in k15673 in k15568 in k15517 in k7924 in k7921 in k5905 in k5612 in k5609 in k5605 in k5314 in k5311 in k5308 in k5305 */
static void C_ccall f_22676(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_22676,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_22680,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("error");
t4=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[21],((C_word*)t0)[2]);}
else{
t4=t2;
f_22680(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k22678 in k22674 in k22622 in k22619 in k22616 in mm:make-on in k22468 in k18948 in k18945 in k18942 in k18939 in k18528 in k18525 in k18522 in k18519 in k18516 in k17994 in k17991 in k17468 in k17465 in k17462 in k17459 in k17456 in k17453 in k17450 in k17447 in k17444 in k17441 in k17438 in k17435 in k17432 in k17429 in k17426 in k17423 in k17420 in k17417 in k17414 in k17411 in k17408 in k17269 in k17266 in k17263 in k17260 in k17204 in k17201 in k17198 in k17195 in k17192 in k17189 in k17186 in k17183 in k15938 in k15869 in k15676 in k15673 in k15568 in k15517 in k7924 in k7921 in k5905 in k5612 in k5609 in k5605 in k5314 in k5311 in k5308 in k5305 */
static void C_ccall f_22680(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_22627(t7,t6);}

/* k22625 in k22622 in k22619 in k22616 in mm:make-on in k22468 in k18948 in k18945 in k18942 in k18939 in k18528 in k18525 in k18522 in k18519 in k18516 in k17994 in k17991 in k17468 in k17465 in k17462 in k17459 in k17456 in k17453 in k17450 in k17447 in k17444 in k17441 in k17438 in k17435 in k17432 in k17429 in k17426 in k17423 in k17420 in k17417 in k17414 in k17411 in k17408 in k17269 in k17266 in k17263 in k17260 in k17204 in k17201 in k17198 in k17195 in k17192 in k17189 in k17186 in k17183 in k15938 in k15869 in k15676 in k15673 in k15568 in k15517 in k7924 in k7921 in k5905 in k5612 in k5609 in k5605 in k5314 in k5311 in k5308 in k5305 */
static void C_fcall f_22627(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_22627,NULL,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_22630,a[2]=((C_word*)t0)[4],a[3]=((C_word*)t0)[5],a[4]=((C_word*)t0)[6],a[5]=((C_word*)t0)[7],a[6]=((C_word*)t0)[8],tmp=(C_word)a,a+=7,tmp);
if(C_truep((C_word)C_i_nullp(((C_word*)((C_word*)t0)[3])[1]))){
t3=t2;
f_22630(2,t3,C_SCHEME_UNDEFINED);}
else{
C_trace("error");
t3=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t3))(4,t3,t2,lf[5],((C_word*)t0)[2]);}}

/* k22628 in k22625 in k22622 in k22619 in k22616 in mm:make-on in k22468 in k18948 in k18945 in k18942 in k18939 in k18528 in k18525 in k18522 in k18519 in k18516 in k17994 in k17991 in k17468 in k17465 in k17462 in k17459 in k17456 in k17453 in k17450 in k17447 in k17444 in k17441 in k17438 in k17435 in k17432 in k17429 in k17426 in k17423 in k17420 in k17417 in k17414 in k17411 in k17408 in k17269 in k17266 in k17263 in k17260 in k17204 in k17201 in k17198 in k17195 in k17192 in k17189 in k17186 in k17183 in k15938 in k15869 in k15676 in k15673 in k15568 in k15517 in k7924 in k7921 in k5905 in k5612 in k5609 in k5605 in k5314 in k5311 in k5308 in k5305 */
static void C_ccall f_22630(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word ab[3],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_22630,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_22634,a[2]=((C_word)li338),tmp=(C_word)a,a+=3,tmp);
((C_proc7)(void*)(*((C_word*)t2+1)))(7,t2,((C_word*)t0)[6],C_fix(9),((C_word*)((C_word*)t0)[5])[1],((C_word*)((C_word*)t0)[4])[1],((C_word*)((C_word*)t0)[3])[1],((C_word*)((C_word*)t0)[2])[1]);}

/* f_22634 in k22628 in k22625 in k22622 in k22619 in k22616 in mm:make-on in k22468 in k18948 in k18945 in k18942 in k18939 in k18528 in k18525 in k18522 in k18519 in k18516 in k17994 in k17991 in k17468 in k17465 in k17462 in k17459 in k17456 in k17453 in k17450 in k17447 in k17444 in k17441 in k17438 in k17435 in k17432 in k17429 in k17426 in k17423 in k17420 in k17417 in k17414 in k17411 in k17408 in k17269 in k17266 in k17263 in k17260 in k17204 in k17201 in k17198 in k17195 in k17192 in k17189 in k17186 in k17183 in k15938 in k15869 in k15676 in k15673 in k15568 in k15517 in k7924 in k7921 in k5905 in k5612 in k5609 in k5605 in k5314 in k5311 in k5308 in k5305 */
static void C_ccall f_22634(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4,C_word t5,C_word t6){
C_word tmp;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word ab[5],*a=ab;
if(c!=7) C_bad_argc_2(c,7,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr7,(void*)f_22634,7,t0,t1,t2,t3,t4,t5,t6);}
t7=(C_word)C_a_i_bytevector(&a,1,C_fix(3));
t8=(C_word)C_i_foreign_fixnum_argumentp(t2);
t9=(C_word)C_i_foreign_flonum_argumentp(t3);
t10=(C_word)C_i_foreign_fixnum_argumentp(t4);
t11=(C_word)C_i_foreign_fixnum_argumentp(t5);
t12=(C_word)C_i_foreign_fixnum_argumentp(t6);
t13=t1;
((C_proc2)(void*)(*((C_word*)t13+1)))(2,t13,(C_word)stub4005(t7,t8,t9,t10,t11,t12));}

/* parse-iteration in k18948 in k18945 in k18942 in k18939 in k18528 in k18525 in k18522 in k18519 in k18516 in k17994 in k17991 in k17468 in k17465 in k17462 in k17459 in k17456 in k17453 in k17450 in k17447 in k17444 in k17441 in k17438 in k17435 in k17432 in k17429 in k17426 in k17423 in k17420 in k17417 in k17414 in k17411 in k17408 in k17269 in k17266 in k17263 in k17260 in k17204 in k17201 in k17198 in k17195 in k17192 in k17189 in k17186 in k17183 in k15938 in k15869 in k15676 in k15673 in k15568 in k15517 in k7924 in k7921 in k5905 in k5612 in k5609 in k5605 in k5314 in k5311 in k5308 in k5305 */
static void C_fcall f_22276(C_word t1,C_word t2,C_word t3,C_word t4){
C_word tmp;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word ab[11],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_22276,NULL,4,t1,t2,t3,t4);}
t5=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_22284,a[2]=t2,a[3]=t1,tmp=(C_word)a,a+=4,tmp);
t6=t3;
t7=(*a=C_VECTOR_TYPE|1,a[1]=t6,tmp=(C_word)a,a+=2,tmp);
t8=(C_word)C_i_nullp(((C_word*)t7)[1]);
t9=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_22116,a[2]=t4,a[3]=t7,a[4]=t5,tmp=(C_word)a,a+=5,tmp);
if(C_truep(t8)){
t10=t9;
f_22116(t10,t8);}
else{
t10=(C_word)C_i_car(((C_word*)t7)[1]);
t11=(C_word)C_i_symbolp(t10);
t12=t9;
f_22116(t12,(C_word)C_i_not(t11));}}

/* k22114 in parse-iteration in k18948 in k18945 in k18942 in k18939 in k18528 in k18525 in k18522 in k18519 in k18516 in k17994 in k17991 in k17468 in k17465 in k17462 in k17459 in k17456 in k17453 in k17450 in k17447 in k17444 in k17441 in k17438 in k17435 in k17432 in k17429 in k17426 in k17423 in k17420 in k17417 in k17414 in k17411 in k17408 in k17269 in k17266 in k17263 in k17260 in k17204 in k17201 in k17198 in k17195 in k17192 in k17189 in k17186 in k17183 in k15938 in k15869 in k15676 in k15673 in k15568 in k15517 in k7924 in k7921 in k5905 in k5612 in k5609 in k5605 in k5314 in k5311 in k5308 in k5305 */
static void C_fcall f_22116(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word ab[37],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_22116,NULL,2,t0,t1);}
if(C_truep(t1)){
t2=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_22123,a[2]=((C_word*)t0)[4],tmp=(C_word)a,a+=3,tmp);
C_trace("ChickenBridge.scm: 370  make-loop-clause");
f_19060(t2,(C_word)C_a_i_list(&a,4,lf[393],lf[566],lf[398],((C_word*)((C_word*)t0)[3])[1]));}
else{
t2=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_22124,a[2]=((C_word)li333),tmp=(C_word)a,a+=3,tmp);
t3=((C_word*)((C_word*)t0)[3])[1];
t4=(*a=C_VECTOR_TYPE|1,a[1]=t3,tmp=(C_word)a,a+=2,tmp);
t5=C_SCHEME_END_OF_LIST;
t6=(*a=C_VECTOR_TYPE|1,a[1]=t5,tmp=(C_word)a,a+=2,tmp);
t7=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_22149,a[2]=t6,a[3]=((C_word*)t0)[4],tmp=(C_word)a,a+=4,tmp);
t8=C_SCHEME_UNDEFINED;
t9=(*a=C_VECTOR_TYPE|1,a[1]=t8,tmp=(C_word)a,a+=2,tmp);
t10=C_set_block_item(t9,0,(*a=C_CLOSURE_TYPE|8,a[1]=(C_word)f_22151,a[2]=t2,a[3]=((C_word*)t0)[2],a[4]=t9,a[5]=t6,a[6]=t4,a[7]=((C_word*)t0)[3],a[8]=((C_word)li336),tmp=(C_word)a,a+=9,tmp));
t11=((C_word*)t9)[1];
f_22151(t11,t7,C_SCHEME_FALSE,C_SCHEME_FALSE,C_SCHEME_END_OF_LIST,C_SCHEME_END_OF_LIST);}}

/* do3803 in k22114 in parse-iteration in k18948 in k18945 in k18942 in k18939 in k18528 in k18525 in k18522 in k18519 in k18516 in k17994 in k17991 in k17468 in k17465 in k17462 in k17459 in k17456 in k17453 in k17450 in k17447 in k17444 in k17441 in k17438 in k17435 in k17432 in k17429 in k17426 in k17423 in k17420 in k17417 in k17414 in k17411 in k17408 in k17269 in k17266 in k17263 in k17260 in k17204 in k17201 in k17198 in k17195 in k17192 in k17189 in k17186 in k17183 in k15938 in k15869 in k15676 in k15673 in k15568 in k15517 in k7924 in k7921 in k5905 in k5612 in k5609 in k5605 in k5314 in k5311 in k5308 in k5305 */
static void C_fcall f_22151(C_word t0,C_word t1,C_word t2,C_word t3,C_word t4,C_word t5){
C_word tmp;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word t14;
C_word t15;
C_word t16;
C_word ab[21],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_22151,NULL,6,t0,t1,t2,t3,t4,t5);}
t6=(*a=C_VECTOR_TYPE|1,a[1]=t2,tmp=(C_word)a,a+=2,tmp);
t7=(*a=C_VECTOR_TYPE|1,a[1]=t3,tmp=(C_word)a,a+=2,tmp);
t8=(*a=C_VECTOR_TYPE|1,a[1]=t4,tmp=(C_word)a,a+=2,tmp);
t9=(*a=C_VECTOR_TYPE|1,a[1]=t5,tmp=(C_word)a,a+=2,tmp);
if(C_truep((C_word)C_i_nullp(((C_word*)((C_word*)t0)[7])[1]))){
t10=t1;
((C_proc2)(void*)(*((C_word*)t10+1)))(2,t10,C_SCHEME_UNDEFINED);}
else{
t10=(*a=C_CLOSURE_TYPE|12,a[1]=(C_word)f_22161,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=t9,a[5]=t7,a[6]=t1,a[7]=((C_word*)t0)[4],a[8]=((C_word*)t0)[5],a[9]=t8,a[10]=((C_word*)t0)[7],a[11]=((C_word*)t0)[6],a[12]=t6,tmp=(C_word)a,a+=13,tmp);
t11=(C_word)C_i_car(((C_word*)((C_word*)t0)[7])[1]);
t12=(C_word)C_eqp(t11,lf[310]);
if(C_truep(t12)){
t13=(C_word)C_i_car(((C_word*)((C_word*)t0)[7])[1]);
t14=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[7])[1]);
t15=C_mutate(((C_word *)((C_word*)t0)[7])+1,t14);
t16=t10;
f_22161(t16,t13);}
else{
t13=t10;
f_22161(t13,C_SCHEME_UNDEFINED);}}}

/* k22159 in do3803 in k22114 in parse-iteration in k18948 in k18945 in k18942 in k18939 in k18528 in k18525 in k18522 in k18519 in k18516 in k17994 in k17991 in k17468 in k17465 in k17462 in k17459 in k17456 in k17453 in k17450 in k17447 in k17444 in k17441 in k17438 in k17435 in k17432 in k17429 in k17426 in k17423 in k17420 in k17417 in k17414 in k17411 in k17408 in k17269 in k17266 in k17263 in k17260 in k17204 in k17201 in k17198 in k17195 in k17192 in k17189 in k17186 in k17183 in k15938 in k15869 in k15676 in k15673 in k15568 in k15517 in k7924 in k7921 in k5905 in k5612 in k5609 in k5605 in k5314 in k5311 in k5308 in k5305 */
static void C_fcall f_22161(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[13],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_22161,NULL,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|12,a[1]=(C_word)f_22165,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],a[7]=((C_word*)t0)[7],a[8]=((C_word*)t0)[8],a[9]=((C_word*)t0)[9],a[10]=((C_word*)t0)[10],a[11]=((C_word*)t0)[11],a[12]=((C_word*)t0)[12],tmp=(C_word)a,a+=13,tmp);
t3=(C_word)C_i_car(((C_word*)((C_word*)t0)[10])[1]);
C_trace("ChickenBridge.scm: 370  loop-op?");
f_19282(t2,t3,((C_word*)t0)[3]);}

/* k22163 in k22159 in do3803 in k22114 in parse-iteration in k18948 in k18945 in k18942 in k18939 in k18528 in k18525 in k18522 in k18519 in k18516 in k17994 in k17991 in k17468 in k17465 in k17462 in k17459 in k17456 in k17453 in k17450 in k17447 in k17444 in k17441 in k17438 in k17435 in k17432 in k17429 in k17426 in k17423 in k17420 in k17417 in k17414 in k17411 in k17408 in k17269 in k17266 in k17263 in k17260 in k17204 in k17201 in k17198 in k17195 in k17192 in k17189 in k17186 in k17183 in k15938 in k15869 in k15676 in k15673 in k15568 in k15517 in k7924 in k7921 in k5905 in k5612 in k5609 in k5605 in k5314 in k5311 in k5308 in k5305 */
static void C_ccall f_22165(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[22],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_22165,2,t0,t1);}
t2=C_mutate(((C_word *)((C_word*)t0)[12])+1,t1);
t3=(*a=C_CLOSURE_TYPE|12,a[1]=(C_word)f_22168,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[12],a[7]=((C_word*)t0)[6],a[8]=((C_word*)t0)[7],a[9]=((C_word*)t0)[8],a[10]=((C_word*)t0)[9],a[11]=((C_word*)t0)[10],a[12]=((C_word*)t0)[11],tmp=(C_word)a,a+=13,tmp);
t4=((C_word*)((C_word*)t0)[12])[1];
if(C_truep(t4)){
t5=t3;
f_22168(2,t5,C_SCHEME_UNDEFINED);}
else{
t5=(C_word)C_i_car(((C_word*)((C_word*)t0)[10])[1]);
C_trace("ChickenBridge.scm: 370  loop-error");
f_19300(t3,((C_word*)t0)[3],((C_word*)((C_word*)t0)[11])[1],(C_word)C_a_i_list(&a,3,lf[571],t5,lf[572]));}}

/* k22166 in k22163 in k22159 in do3803 in k22114 in parse-iteration in k18948 in k18945 in k18942 in k18939 in k18528 in k18525 in k18522 in k18519 in k18516 in k17994 in k17991 in k17468 in k17465 in k17462 in k17459 in k17456 in k17453 in k17450 in k17447 in k17444 in k17441 in k17438 in k17435 in k17432 in k17429 in k17426 in k17423 in k17420 in k17417 in k17414 in k17411 in k17408 in k17269 in k17266 in k17263 in k17260 in k17204 in k17201 in k17198 in k17195 in k17192 in k17189 in k17186 in k17183 in k15938 in k15869 in k15676 in k15673 in k15568 in k15517 in k7924 in k7921 in k5905 in k5612 in k5609 in k5605 in k5314 in k5311 in k5308 in k5305 */
static void C_ccall f_22168(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[25],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_22168,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|12,a[1]=(C_word)f_22171,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],a[7]=((C_word*)t0)[7],a[8]=((C_word*)t0)[8],a[9]=((C_word*)t0)[9],a[10]=((C_word*)t0)[10],a[11]=((C_word*)t0)[11],a[12]=((C_word*)t0)[12],tmp=(C_word)a,a+=13,tmp);
t3=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_22220,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[9],a[4]=((C_word*)t0)[11],a[5]=((C_word*)t0)[6],a[6]=((C_word)li334),tmp=(C_word)a,a+=7,tmp);
t4=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_22229,a[2]=((C_word*)t0)[10],a[3]=((C_word*)t0)[5],a[4]=((C_word)li335),tmp=(C_word)a,a+=5,tmp);
C_trace("ChickenBridge.scm: 370  call-with-values");
C_call_with_values(4,0,t2,t3,t4);}

/* a22228 in k22166 in k22163 in k22159 in do3803 in k22114 in parse-iteration in k18948 in k18945 in k18942 in k18939 in k18528 in k18525 in k18522 in k18519 in k18516 in k17994 in k17991 in k17468 in k17465 in k17462 in k17459 in k17456 in k17453 in k17450 in k17447 in k17444 in k17441 in k17438 in k17435 in k17432 in k17429 in k17426 in k17423 in k17420 in k17417 in k17414 in k17411 in k17408 in k17269 in k17266 in k17263 in k17260 in k17204 in k17201 in k17198 in k17195 in k17192 in k17189 in k17186 in k17183 in k15938 in k15869 in k15676 in k15673 in k15568 in k15517 in k7924 in k7921 in k5905 in k5612 in k5609 in k5605 in k5314 in k5311 in k5308 in k5305 */
static void C_ccall f_22229(C_word c,C_word t0,C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word t6;
C_word *a;
if(c!=4) C_bad_argc_2(c,4,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr4,(void*)f_22229,4,t0,t1,t2,t3);}
t4=C_mutate(((C_word *)((C_word*)t0)[3])+1,t2);
t5=C_mutate(((C_word *)((C_word*)t0)[2])+1,t3);
t6=t1;
((C_proc2)(void*)(*((C_word*)t6+1)))(2,t6,t5);}

/* a22219 in k22166 in k22163 in k22159 in do3803 in k22114 in parse-iteration in k18948 in k18945 in k18942 in k18939 in k18528 in k18525 in k18522 in k18519 in k18516 in k17994 in k17991 in k17468 in k17465 in k17462 in k17459 in k17456 in k17453 in k17450 in k17447 in k17444 in k17441 in k17438 in k17435 in k17432 in k17429 in k17426 in k17423 in k17420 in k17417 in k17414 in k17411 in k17408 in k17269 in k17266 in k17263 in k17260 in k17204 in k17201 in k17198 in k17195 in k17192 in k17189 in k17186 in k17183 in k15938 in k15869 in k15676 in k15673 in k15568 in k15517 in k7924 in k7921 in k5905 in k5612 in k5609 in k5605 in k5314 in k5311 in k5308 in k5305 */
static void C_ccall f_22220(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word *a;
if(c!=2) C_bad_argc_2(c,2,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_22220,2,t0,t1);}
t2=(C_word)C_i_cadr(((C_word*)((C_word*)t0)[5])[1]);
t3=t2;
((C_proc5)C_retrieve_proc(t3))(5,t3,t1,((C_word*)((C_word*)t0)[4])[1],((C_word*)((C_word*)t0)[3])[1],((C_word*)t0)[2]);}

/* k22169 in k22166 in k22163 in k22159 in do3803 in k22114 in parse-iteration in k18948 in k18945 in k18942 in k18939 in k18528 in k18525 in k18522 in k18519 in k18516 in k17994 in k17991 in k17468 in k17465 in k17462 in k17459 in k17456 in k17453 in k17450 in k17447 in k17444 in k17441 in k17438 in k17435 in k17432 in k17429 in k17426 in k17423 in k17420 in k17417 in k17414 in k17411 in k17408 in k17269 in k17266 in k17263 in k17260 in k17204 in k17201 in k17198 in k17195 in k17192 in k17189 in k17186 in k17183 in k15938 in k15869 in k15676 in k15673 in k15568 in k15517 in k7924 in k7921 in k5905 in k5612 in k5609 in k5605 in k5314 in k5311 in k5308 in k5305 */
static void C_ccall f_22171(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[19],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_22171,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|10,a[1]=(C_word)f_22174,a[2]=((C_word*)t0)[4],a[3]=((C_word*)t0)[5],a[4]=((C_word*)t0)[6],a[5]=((C_word*)t0)[7],a[6]=((C_word*)t0)[8],a[7]=((C_word*)t0)[9],a[8]=((C_word*)t0)[10],a[9]=((C_word*)t0)[11],a[10]=((C_word*)t0)[12],tmp=(C_word)a,a+=11,tmp);
t3=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_22190,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[12],a[4]=((C_word*)t0)[3],a[5]=t2,a[6]=((C_word*)t0)[6],a[7]=((C_word*)t0)[4],tmp=(C_word)a,a+=8,tmp);
C_trace("ChickenBridge.scm: 370  op-type?");
f_22124(t3,((C_word*)((C_word*)t0)[6])[1],lf[557]);}

/* k22188 in k22169 in k22166 in k22163 in k22159 in do3803 in k22114 in parse-iteration in k18948 in k18945 in k18942 in k18939 in k18528 in k18525 in k18522 in k18519 in k18516 in k17994 in k17991 in k17468 in k17465 in k17462 in k17459 in k17456 in k17453 in k17450 in k17447 in k17444 in k17441 in k17438 in k17435 in k17432 in k17429 in k17426 in k17423 in k17420 in k17417 in k17414 in k17411 in k17408 in k17269 in k17266 in k17263 in k17260 in k17204 in k17201 in k17198 in k17195 in k17192 in k17189 in k17186 in k17183 in k15938 in k15869 in k15676 in k15673 in k15568 in k15517 in k7924 in k7921 in k5905 in k5612 in k5609 in k5605 in k5314 in k5311 in k5308 in k5305 */
static void C_ccall f_22190(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_22190,2,t0,t1);}
if(C_truep(t1)){
t2=C_mutate(((C_word *)((C_word*)t0)[7])+1,((C_word*)((C_word*)t0)[6])[1]);
t3=((C_word*)t0)[5];
f_22174(2,t3,t2);}
else{
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_22197,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[6],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
C_trace("ChickenBridge.scm: 370  op-type?");
f_22124(t2,((C_word*)((C_word*)t0)[6])[1],lf[570]);}}

/* k22195 in k22188 in k22169 in k22166 in k22163 in k22159 in do3803 in k22114 in parse-iteration in k18948 in k18945 in k18942 in k18939 in k18528 in k18525 in k18522 in k18519 in k18516 in k17994 in k17991 in k17468 in k17465 in k17462 in k17459 in k17456 in k17453 in k17450 in k17447 in k17444 in k17441 in k17438 in k17435 in k17432 in k17429 in k17426 in k17423 in k17420 in k17417 in k17414 in k17411 in k17408 in k17269 in k17266 in k17263 in k17260 in k17204 in k17201 in k17198 in k17195 in k17192 in k17189 in k17186 in k17183 in k15938 in k15869 in k15676 in k15673 in k15568 in k15517 in k7924 in k7921 in k5905 in k5612 in k5609 in k5605 in k5314 in k5311 in k5308 in k5305 */
static void C_ccall f_22197(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[15],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_22197,2,t0,t1);}
if(C_truep(t1)){
if(C_truep((C_word)C_i_nullp(((C_word*)((C_word*)t0)[6])[1]))){
t2=((C_word*)t0)[5];
f_22174(2,t2,C_SCHEME_UNDEFINED);}
else{
t2=(C_word)C_i_car(((C_word*)((C_word*)t0)[4])[1]);
t3=(C_word)C_i_car(((C_word*)((C_word*)t0)[6])[1]);
C_trace("ChickenBridge.scm: 370  loop-error");
f_19300(((C_word*)t0)[5],((C_word*)t0)[3],((C_word*)((C_word*)t0)[2])[1],(C_word)C_a_i_list(&a,5,lf[567],t2,lf[568],t3,lf[569]));}}
else{
t2=((C_word*)t0)[5];
f_22174(2,t2,C_SCHEME_UNDEFINED);}}

/* k22172 in k22169 in k22166 in k22163 in k22159 in do3803 in k22114 in parse-iteration in k18948 in k18945 in k18942 in k18939 in k18528 in k18525 in k18522 in k18519 in k18516 in k17994 in k17991 in k17468 in k17465 in k17462 in k17459 in k17456 in k17453 in k17450 in k17447 in k17444 in k17441 in k17438 in k17435 in k17432 in k17429 in k17426 in k17423 in k17420 in k17417 in k17414 in k17411 in k17408 in k17269 in k17266 in k17263 in k17260 in k17204 in k17201 in k17198 in k17195 in k17192 in k17189 in k17186 in k17183 in k15938 in k15869 in k15676 in k15673 in k15568 in k15517 in k7924 in k7921 in k5905 in k5612 in k5609 in k5605 in k5314 in k5311 in k5308 in k5305 */
static void C_ccall f_22174(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[12],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_22174,2,t0,t1);}
t2=C_mutate(((C_word *)((C_word*)t0)[10])+1,((C_word*)((C_word*)t0)[9])[1]);
t3=C_mutate(((C_word *)((C_word*)t0)[9])+1,((C_word*)((C_word*)t0)[8])[1]);
t4=(*a=C_CLOSURE_TYPE|8,a[1]=(C_word)f_22180,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[8],a[4]=((C_word*)t0)[3],a[5]=((C_word*)t0)[4],a[6]=((C_word*)t0)[5],a[7]=((C_word*)t0)[6],a[8]=((C_word*)t0)[7],tmp=(C_word)a,a+=9,tmp);
t5=(C_word)C_a_i_list(&a,1,((C_word*)((C_word*)t0)[3])[1]);
C_trace("ChickenBridge.scm: 370  append");
t6=*((C_word*)lf[18]+1);
((C_proc4)C_retrieve_proc(t6))(4,t6,t4,((C_word*)((C_word*)t0)[7])[1],t5);}

/* k22178 in k22172 in k22169 in k22166 in k22163 in k22159 in do3803 in k22114 in parse-iteration in k18948 in k18945 in k18942 in k18939 in k18528 in k18525 in k18522 in k18519 in k18516 in k17994 in k17991 in k17468 in k17465 in k17462 in k17459 in k17456 in k17453 in k17450 in k17447 in k17444 in k17441 in k17438 in k17435 in k17432 in k17429 in k17426 in k17423 in k17420 in k17417 in k17414 in k17411 in k17408 in k17269 in k17266 in k17263 in k17260 in k17204 in k17201 in k17198 in k17195 in k17192 in k17189 in k17186 in k17183 in k15938 in k15869 in k15676 in k15673 in k15568 in k15517 in k7924 in k7921 in k5905 in k5612 in k5609 in k5605 in k5314 in k5311 in k5308 in k5305 */
static void C_ccall f_22180(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[8])+1,t1);
t3=((C_word*)((C_word*)t0)[7])[1];
f_22151(t3,((C_word*)t0)[6],((C_word*)((C_word*)t0)[5])[1],((C_word*)((C_word*)t0)[4])[1],((C_word*)((C_word*)t0)[3])[1],((C_word*)((C_word*)t0)[2])[1]);}

/* k22147 in k22114 in parse-iteration in k18948 in k18945 in k18942 in k18939 in k18528 in k18525 in k18522 in k18519 in k18516 in k17994 in k17991 in k17468 in k17465 in k17462 in k17459 in k17456 in k17453 in k17450 in k17447 in k17444 in k17441 in k17438 in k17435 in k17432 in k17429 in k17426 in k17423 in k17420 in k17417 in k17414 in k17411 in k17408 in k17269 in k17266 in k17263 in k17260 in k17204 in k17201 in k17198 in k17195 in k17192 in k17189 in k17186 in k17183 in k15938 in k15869 in k15676 in k15673 in k15568 in k15517 in k7924 in k7921 in k5905 in k5612 in k5609 in k5605 in k5314 in k5311 in k5308 in k5305 */
static void C_ccall f_22149(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
t2=((C_word*)t0)[3];
f_22284(t2,((C_word*)((C_word*)t0)[2])[1]);}

/* op-type? in k22114 in parse-iteration in k18948 in k18945 in k18942 in k18939 in k18528 in k18525 in k18522 in k18519 in k18516 in k17994 in k17991 in k17468 in k17465 in k17462 in k17459 in k17456 in k17453 in k17450 in k17447 in k17444 in k17441 in k17438 in k17435 in k17432 in k17429 in k17426 in k17423 in k17420 in k17417 in k17414 in k17411 in k17408 in k17269 in k17266 in k17263 in k17260 in k17204 in k17201 in k17198 in k17195 in k17192 in k17189 in k17186 in k17183 in k15938 in k15869 in k15676 in k15673 in k15568 in k15517 in k7924 in k7921 in k5905 in k5612 in k5609 in k5605 in k5314 in k5311 in k5308 in k5305 */
static void C_fcall f_22124(C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word t6;
C_word *a;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_22124,NULL,3,t1,t2,t3);}
t4=(C_word)C_i_cddr(t2);
if(C_truep((C_word)C_i_nullp(t4))){
t5=t1;
((C_proc2)(void*)(*((C_word*)t5+1)))(2,t5,C_SCHEME_FALSE);}
else{
t5=(C_word)C_i_caddr(t2);
t6=t1;
((C_proc2)(void*)(*((C_word*)t6+1)))(2,t6,(C_word)C_eqp(t5,t3));}}

/* k22121 in k22114 in parse-iteration in k18948 in k18945 in k18942 in k18939 in k18528 in k18525 in k18522 in k18519 in k18516 in k17994 in k17991 in k17468 in k17465 in k17462 in k17459 in k17456 in k17453 in k17450 in k17447 in k17444 in k17441 in k17438 in k17435 in k17432 in k17429 in k17426 in k17423 in k17420 in k17417 in k17414 in k17411 in k17408 in k17269 in k17266 in k17263 in k17260 in k17204 in k17201 in k17198 in k17195 in k17192 in k17189 in k17186 in k17183 in k15938 in k15869 in k15676 in k15673 in k15568 in k15517 in k7924 in k7921 in k5905 in k5612 in k5609 in k5605 in k5314 in k5311 in k5308 in k5305 */
static void C_ccall f_22123(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word ab[3],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_22123,2,t0,t1);}
t2=((C_word*)t0)[2];
f_22284(t2,(C_word)C_a_i_list(&a,1,t1));}

/* k22282 in parse-iteration in k18948 in k18945 in k18942 in k18939 in k18528 in k18525 in k18522 in k18519 in k18516 in k17994 in k17991 in k17468 in k17465 in k17462 in k17459 in k17456 in k17453 in k17450 in k17447 in k17444 in k17441 in k17438 in k17435 in k17432 in k17429 in k17426 in k17423 in k17420 in k17417 in k17414 in k17411 in k17408 in k17269 in k17266 in k17263 in k17260 in k17204 in k17201 in k17198 in k17195 in k17192 in k17189 in k17186 in k17183 in k15938 in k15869 in k15676 in k15673 in k15568 in k15517 in k7924 in k7921 in k5905 in k5612 in k5609 in k5605 in k5314 in k5311 in k5308 in k5305 */
static void C_fcall f_22284(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 370  gather-clauses");
f_19211(((C_word*)t0)[3],((C_word*)t0)[2],t1);}

/* parse-conditional in k18948 in k18945 in k18942 in k18939 in k18528 in k18525 in k18522 in k18519 in k18516 in k17994 in k17991 in k17468 in k17465 in k17462 in k17459 in k17456 in k17453 in k17450 in k17447 in k17444 in k17441 in k17438 in k17435 in k17432 in k17429 in k17426 in k17423 in k17420 in k17417 in k17414 in k17411 in k17408 in k17269 in k17266 in k17263 in k17260 in k17204 in k17201 in k17198 in k17195 in k17192 in k17189 in k17186 in k17183 in k15938 in k15869 in k15676 in k15673 in k15568 in k15517 in k7924 in k7921 in k5905 in k5612 in k5609 in k5605 in k5314 in k5311 in k5308 in k5305 */
static void C_ccall f_21862(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4){
C_word tmp;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word t14;
C_word t15;
C_word t16;
C_word t17;
C_word t18;
C_word t19;
C_word ab[34],*a=ab;
if(c!=5) C_bad_argc_2(c,5,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr5,(void*)f_21862,5,t0,t1,t2,t3,t4);}
t5=(*a=C_VECTOR_TYPE|1,a[1]=t2,tmp=(C_word)a,a+=2,tmp);
t6=(C_word)C_a_i_cons(&a,2,lf[560],t4);
t7=((C_word*)t5)[1];
t8=(C_word)C_i_car(((C_word*)t5)[1]);
t9=C_SCHEME_END_OF_LIST;
t10=(*a=C_VECTOR_TYPE|1,a[1]=t9,tmp=(C_word)a,a+=2,tmp);
t11=C_SCHEME_END_OF_LIST;
t12=(*a=C_VECTOR_TYPE|1,a[1]=t11,tmp=(C_word)a,a+=2,tmp);
t13=C_SCHEME_END_OF_LIST;
t14=(*a=C_VECTOR_TYPE|1,a[1]=t13,tmp=(C_word)a,a+=2,tmp);
t15=C_SCHEME_END_OF_LIST;
t16=(*a=C_VECTOR_TYPE|1,a[1]=t15,tmp=(C_word)a,a+=2,tmp);
t17=(*a=C_CLOSURE_TYPE|11,a[1]=(C_word)f_21884,a[2]=t8,a[3]=t7,a[4]=t3,a[5]=t6,a[6]=t16,a[7]=t14,a[8]=t1,a[9]=t10,a[10]=t12,a[11]=t5,tmp=(C_word)a,a+=12,tmp);
t18=(C_word)C_i_cdr(((C_word*)t5)[1]);
if(C_truep((C_word)C_i_nullp(t18))){
C_trace("ChickenBridge.scm: 370  loop-error");
f_19300(t17,t6,t7,(C_word)C_a_i_list(&a,3,lf[563],t8,lf[564]));}
else{
t19=t17;
f_21884(2,t19,C_SCHEME_UNDEFINED);}}

/* k21882 in parse-conditional in k18948 in k18945 in k18942 in k18939 in k18528 in k18525 in k18522 in k18519 in k18516 in k17994 in k17991 in k17468 in k17465 in k17462 in k17459 in k17456 in k17453 in k17450 in k17447 in k17444 in k17441 in k17438 in k17435 in k17432 in k17429 in k17426 in k17423 in k17420 in k17417 in k17414 in k17411 in k17408 in k17269 in k17266 in k17263 in k17260 in k17204 in k17201 in k17198 in k17195 in k17192 in k17189 in k17186 in k17183 in k15938 in k15869 in k15676 in k15673 in k15568 in k15517 in k7924 in k7921 in k5905 in k5612 in k5609 in k5605 in k5314 in k5311 in k5308 in k5305 */
static void C_ccall f_21884(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word ab[15],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_21884,2,t0,t1);}
t2=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[11])[1]);
t3=C_mutate(((C_word *)((C_word*)t0)[11])+1,t2);
t4=(C_word)C_i_car(((C_word*)((C_word*)t0)[11])[1]);
t5=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[11])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[11])+1,t5);
t7=C_mutate(((C_word *)((C_word*)t0)[10])+1,t4);
t8=(*a=C_CLOSURE_TYPE|11,a[1]=(C_word)f_21899,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],a[7]=((C_word*)t0)[11],a[8]=((C_word*)t0)[7],a[9]=((C_word*)t0)[8],a[10]=((C_word*)t0)[9],a[11]=((C_word*)t0)[10],tmp=(C_word)a,a+=12,tmp);
if(C_truep((C_word)C_i_nullp(((C_word*)((C_word*)t0)[11])[1]))){
C_trace("ChickenBridge.scm: 370  loop-error");
f_19300(t8,((C_word*)t0)[5],((C_word*)((C_word*)t0)[11])[1],(C_word)C_a_i_list(&a,1,lf[562]));}
else{
t9=t8;
f_21899(2,t9,C_SCHEME_UNDEFINED);}}

/* k21897 in k21882 in parse-conditional in k18948 in k18945 in k18942 in k18939 in k18528 in k18525 in k18522 in k18519 in k18516 in k17994 in k17991 in k17468 in k17465 in k17462 in k17459 in k17456 in k17453 in k17450 in k17447 in k17444 in k17441 in k17438 in k17435 in k17432 in k17429 in k17426 in k17423 in k17420 in k17417 in k17414 in k17411 in k17408 in k17269 in k17266 in k17263 in k17260 in k17204 in k17201 in k17198 in k17195 in k17192 in k17189 in k17186 in k17183 in k15938 in k15869 in k15676 in k15673 in k15568 in k15517 in k7924 in k7921 in k5905 in k5612 in k5609 in k5605 in k5314 in k5311 in k5308 in k5305 */
static void C_ccall f_21899(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[17],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_21899,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|10,a[1]=(C_word)f_21902,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],a[7]=((C_word*)t0)[8],a[8]=((C_word*)t0)[9],a[9]=((C_word*)t0)[10],a[10]=((C_word*)t0)[11],tmp=(C_word)a,a+=11,tmp);
t3=(C_word)C_eqp(((C_word*)t0)[2],lf[6]);
if(C_truep(t3)){
t4=(C_word)C_a_i_list(&a,2,lf[312],((C_word*)((C_word*)t0)[11])[1]);
t5=C_mutate(((C_word *)((C_word*)t0)[11])+1,t4);
t6=t2;
f_21902(t6,t5);}
else{
t4=t2;
f_21902(t4,C_SCHEME_UNDEFINED);}}

/* k21900 in k21897 in k21882 in parse-conditional in k18948 in k18945 in k18942 in k18939 in k18528 in k18525 in k18522 in k18519 in k18516 in k17994 in k17991 in k17468 in k17465 in k17462 in k17459 in k17456 in k17453 in k17450 in k17447 in k17444 in k17441 in k17438 in k17435 in k17432 in k17429 in k17426 in k17423 in k17420 in k17417 in k17414 in k17411 in k17408 in k17269 in k17266 in k17263 in k17260 in k17204 in k17201 in k17198 in k17195 in k17192 in k17189 in k17186 in k17183 in k15938 in k15869 in k15676 in k15673 in k15568 in k15517 in k7924 in k7921 in k5905 in k5612 in k5609 in k5605 in k5314 in k5311 in k5308 in k5305 */
static void C_fcall f_21902(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[22],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_21902,NULL,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|10,a[1]=(C_word)f_21905,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],a[7]=((C_word*)t0)[7],a[8]=((C_word*)t0)[8],a[9]=((C_word*)t0)[9],a[10]=((C_word*)t0)[10],tmp=(C_word)a,a+=11,tmp);
t3=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_22072,a[2]=((C_word*)t0)[4],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[6],a[5]=((C_word)li330),tmp=(C_word)a,a+=6,tmp);
t4=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_22078,a[2]=((C_word*)t0)[6],a[3]=((C_word*)t0)[7],a[4]=((C_word)li331),tmp=(C_word)a,a+=5,tmp);
C_trace("ChickenBridge.scm: 370  call-with-values");
C_call_with_values(4,0,t2,t3,t4);}

/* a22077 in k21900 in k21897 in k21882 in parse-conditional in k18948 in k18945 in k18942 in k18939 in k18528 in k18525 in k18522 in k18519 in k18516 in k17994 in k17991 in k17468 in k17465 in k17462 in k17459 in k17456 in k17453 in k17450 in k17447 in k17444 in k17441 in k17438 in k17435 in k17432 in k17429 in k17426 in k17423 in k17420 in k17417 in k17414 in k17411 in k17408 in k17269 in k17266 in k17263 in k17260 in k17204 in k17201 in k17198 in k17195 in k17192 in k17189 in k17186 in k17183 in k15938 in k15869 in k15676 in k15673 in k15568 in k15517 in k7924 in k7921 in k5905 in k5612 in k5609 in k5605 in k5314 in k5311 in k5308 in k5305 */
static void C_ccall f_22078(C_word c,C_word t0,C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word t6;
C_word *a;
if(c!=4) C_bad_argc_2(c,4,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr4,(void*)f_22078,4,t0,t1,t2,t3);}
t4=C_mutate(((C_word *)((C_word*)t0)[3])+1,t2);
t5=C_mutate(((C_word *)((C_word*)t0)[2])+1,t3);
t6=t1;
((C_proc2)(void*)(*((C_word*)t6+1)))(2,t6,t5);}

/* a22071 in k21900 in k21897 in k21882 in parse-conditional in k18948 in k18945 in k18942 in k18939 in k18528 in k18525 in k18522 in k18519 in k18516 in k17994 in k17991 in k17468 in k17465 in k17462 in k17459 in k17456 in k17453 in k17450 in k17447 in k17444 in k17441 in k17438 in k17435 in k17432 in k17429 in k17426 in k17423 in k17420 in k17417 in k17414 in k17411 in k17408 in k17269 in k17266 in k17263 in k17260 in k17204 in k17201 in k17198 in k17195 in k17192 in k17189 in k17186 in k17183 in k15938 in k15869 in k15676 in k15673 in k15568 in k15517 in k7924 in k7921 in k5905 in k5612 in k5609 in k5605 in k5314 in k5311 in k5308 in k5305 */
static void C_ccall f_22072(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
if(c!=2) C_bad_argc_2(c,2,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_22072,2,t0,t1);}
C_trace("ChickenBridge.scm: 370  parse-then-else-dependents");
f_21731(t1,((C_word*)((C_word*)t0)[4])[1],((C_word*)t0)[3],((C_word*)t0)[2]);}

/* k21903 in k21900 in k21897 in k21882 in parse-conditional in k18948 in k18945 in k18942 in k18939 in k18528 in k18525 in k18522 in k18519 in k18516 in k17994 in k17991 in k17468 in k17465 in k17462 in k17459 in k17456 in k17453 in k17450 in k17447 in k17444 in k17441 in k17438 in k17435 in k17432 in k17429 in k17426 in k17423 in k17420 in k17417 in k17414 in k17411 in k17408 in k17269 in k17266 in k17263 in k17260 in k17204 in k17201 in k17198 in k17195 in k17192 in k17189 in k17186 in k17183 in k15938 in k15869 in k15676 in k15673 in k15568 in k15517 in k7924 in k7921 in k5905 in k5612 in k5609 in k5605 in k5314 in k5311 in k5308 in k5305 */
static void C_ccall f_21905(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word ab[15],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_21905,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|10,a[1]=(C_word)f_21908,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],a[7]=((C_word*)t0)[7],a[8]=((C_word*)t0)[8],a[9]=((C_word*)t0)[9],a[10]=((C_word*)t0)[10],tmp=(C_word)a,a+=11,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[7])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
t4=(C_word)C_i_car(((C_word*)((C_word*)t0)[7])[1]);
t5=C_mutate(((C_word *)((C_word*)t0)[7])+1,t4);
t6=t2;
f_21908(t6,t5);}
else{
t4=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_22054,a[2]=t2,a[3]=((C_word*)t0)[7],tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 370  gather-clauses");
f_19211(t4,C_SCHEME_END_OF_LIST,((C_word*)((C_word*)t0)[7])[1]);}}

/* k22052 in k21903 in k21900 in k21897 in k21882 in parse-conditional in k18948 in k18945 in k18942 in k18939 in k18528 in k18525 in k18522 in k18519 in k18516 in k17994 in k17991 in k17468 in k17465 in k17462 in k17459 in k17456 in k17453 in k17450 in k17447 in k17444 in k17441 in k17438 in k17435 in k17432 in k17429 in k17426 in k17423 in k17420 in k17417 in k17414 in k17411 in k17408 in k17269 in k17266 in k17263 in k17260 in k17204 in k17201 in k17198 in k17195 in k17192 in k17189 in k17186 in k17183 in k15938 in k15869 in k15676 in k15673 in k15568 in k15517 in k7924 in k7921 in k5905 in k5612 in k5609 in k5605 in k5314 in k5311 in k5308 in k5305 */
static void C_ccall f_22054(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[3])+1,t1);
t3=((C_word*)t0)[2];
f_21908(t3,t2);}

/* k21906 in k21903 in k21900 in k21897 in k21882 in parse-conditional in k18948 in k18945 in k18942 in k18939 in k18528 in k18525 in k18522 in k18519 in k18516 in k17994 in k17991 in k17468 in k17465 in k17462 in k17459 in k17456 in k17453 in k17450 in k17447 in k17444 in k17441 in k17438 in k17435 in k17432 in k17429 in k17426 in k17423 in k17420 in k17417 in k17414 in k17411 in k17408 in k17269 in k17266 in k17263 in k17260 in k17204 in k17201 in k17198 in k17195 in k17192 in k17189 in k17186 in k17183 in k15938 in k15869 in k15676 in k15673 in k15568 in k15517 in k7924 in k7921 in k5905 in k5612 in k5609 in k5605 in k5314 in k5311 in k5308 in k5305 */
static void C_fcall f_21908(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[11],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_21908,NULL,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|10,a[1]=(C_word)f_21911,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],a[7]=((C_word*)t0)[7],a[8]=((C_word*)t0)[8],a[9]=((C_word*)t0)[9],a[10]=((C_word*)t0)[10],tmp=(C_word)a,a+=11,tmp);
C_trace("ChickenBridge.scm: 370  loop-operator-set!");
f_18958(t2,((C_word*)((C_word*)t0)[7])[1],lf[20]);}

/* k21909 in k21906 in k21903 in k21900 in k21897 in k21882 in parse-conditional in k18948 in k18945 in k18942 in k18939 in k18528 in k18525 in k18522 in k18519 in k18516 in k17994 in k17991 in k17468 in k17465 in k17462 in k17459 in k17456 in k17453 in k17450 in k17447 in k17444 in k17441 in k17438 in k17435 in k17432 in k17429 in k17426 in k17423 in k17420 in k17417 in k17414 in k17411 in k17408 in k17269 in k17266 in k17263 in k17260 in k17204 in k17201 in k17198 in k17195 in k17192 in k17189 in k17186 in k17183 in k15938 in k15869 in k15676 in k15673 in k15568 in k15517 in k7924 in k7921 in k5905 in k5612 in k5609 in k5605 in k5314 in k5311 in k5308 in k5305 */
static void C_ccall f_21911(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[14],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_21911,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|10,a[1]=(C_word)f_22035,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],a[7]=((C_word*)t0)[7],a[8]=((C_word*)t0)[8],a[9]=((C_word*)t0)[9],a[10]=((C_word*)t0)[10],tmp=(C_word)a,a+=11,tmp);
t3=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_22047,a[2]=t2,tmp=(C_word)a,a+=3,tmp);
C_trace("ChickenBridge.scm: 370  loop-looping");
t4=C_retrieve2(lf[387],"loop-looping");
f_19012(3,t4,t3,((C_word*)((C_word*)t0)[7])[1]);}

/* k22045 in k21909 in k21906 in k21903 in k21900 in k21897 in k21882 in parse-conditional in k18948 in k18945 in k18942 in k18939 in k18528 in k18525 in k18522 in k18519 in k18516 in k17994 in k17991 in k17468 in k17465 in k17462 in k17459 in k17456 in k17453 in k17450 in k17447 in k17444 in k17441 in k17438 in k17435 in k17432 in k17429 in k17426 in k17423 in k17420 in k17417 in k17414 in k17411 in k17408 in k17269 in k17266 in k17263 in k17260 in k17204 in k17201 in k17198 in k17195 in k17192 in k17189 in k17186 in k17183 in k15938 in k15869 in k15676 in k15673 in k15568 in k15517 in k7924 in k7921 in k5905 in k5612 in k5609 in k5605 in k5314 in k5311 in k5308 in k5305 */
static void C_ccall f_22047(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[3],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_22047,2,t0,t1);}
t2=(C_word)C_a_i_cons(&a,2,lf[336],t1);
C_trace("ChickenBridge.scm: 370  append");
t3=*((C_word*)lf[18]+1);
((C_proc4)C_retrieve_proc(t3))(4,t3,((C_word*)t0)[2],t2,C_SCHEME_END_OF_LIST);}

/* k22033 in k21909 in k21906 in k21903 in k21900 in k21897 in k21882 in parse-conditional in k18948 in k18945 in k18942 in k18939 in k18528 in k18525 in k18522 in k18519 in k18516 in k17994 in k17991 in k17468 in k17465 in k17462 in k17459 in k17456 in k17453 in k17450 in k17447 in k17444 in k17441 in k17438 in k17435 in k17432 in k17429 in k17426 in k17423 in k17420 in k17417 in k17414 in k17411 in k17408 in k17269 in k17266 in k17263 in k17260 in k17204 in k17201 in k17198 in k17195 in k17192 in k17189 in k17186 in k17183 in k15938 in k15869 in k15676 in k15673 in k15568 in k15517 in k7924 in k7921 in k5905 in k5612 in k5609 in k5605 in k5314 in k5311 in k5308 in k5305 */
static void C_ccall f_22035(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word ab[28],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_22035,2,t0,t1);}
t2=(C_word)C_a_i_list(&a,4,lf[20],((C_word*)((C_word*)t0)[10])[1],t1,C_SCHEME_FALSE);
t3=C_mutate(((C_word *)((C_word*)t0)[9])+1,t2);
t4=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_21918,a[2]=((C_word*)t0)[9],a[3]=((C_word*)t0)[6],a[4]=((C_word*)t0)[7],a[5]=((C_word*)t0)[8],tmp=(C_word)a,a+=6,tmp);
t5=(*a=C_CLOSURE_TYPE|9,a[1]=(C_word)f_21931,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=t4,a[7]=((C_word*)t0)[7],a[8]=((C_word*)t0)[9],a[9]=((C_word*)t0)[6],tmp=(C_word)a,a+=10,tmp);
if(C_truep((C_word)C_i_nullp(((C_word*)((C_word*)t0)[6])[1]))){
t6=t5;
f_21931(t6,C_SCHEME_FALSE);}
else{
t6=(C_word)C_i_car(((C_word*)((C_word*)t0)[6])[1]);
t7=t5;
f_21931(t7,(C_word)C_eqp(t6,lf[16]));}}

/* k21929 in k22033 in k21909 in k21906 in k21903 in k21900 in k21897 in k21882 in parse-conditional in k18948 in k18945 in k18942 in k18939 in k18528 in k18525 in k18522 in k18519 in k18516 in k17994 in k17991 in k17468 in k17465 in k17462 in k17459 in k17456 in k17453 in k17450 in k17447 in k17444 in k17441 in k17438 in k17435 in k17432 in k17429 in k17426 in k17423 in k17420 in k17417 in k17414 in k17411 in k17408 in k17269 in k17266 in k17263 in k17260 in k17204 in k17201 in k17198 in k17195 in k17192 in k17189 in k17186 in k17183 in k15938 in k15869 in k15676 in k15673 in k15568 in k15517 in k7924 in k7921 in k5905 in k5612 in k5609 in k5605 in k5314 in k5311 in k5308 in k5305 */
static void C_fcall f_21931(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[12],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_21931,NULL,2,t0,t1);}
if(C_truep(t1)){
t2=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[9])[1]);
t3=C_mutate(((C_word *)((C_word*)t0)[9])+1,t2);
t4=(*a=C_CLOSURE_TYPE|8,a[1]=(C_word)f_21938,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[9],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],a[7]=((C_word*)t0)[7],a[8]=((C_word*)t0)[8],tmp=(C_word)a,a+=9,tmp);
if(C_truep((C_word)C_i_nullp(((C_word*)((C_word*)t0)[9])[1]))){
C_trace("ChickenBridge.scm: 370  loop-error");
f_19300(t4,((C_word*)t0)[4],((C_word*)t0)[2],(C_word)C_a_i_list(&a,1,lf[561]));}
else{
t5=t4;
f_21938(2,t5,C_SCHEME_UNDEFINED);}}
else{
t2=((C_word*)t0)[6];
f_21918(t2,C_SCHEME_UNDEFINED);}}

/* k21936 in k21929 in k22033 in k21909 in k21906 in k21903 in k21900 in k21897 in k21882 in parse-conditional in k18948 in k18945 in k18942 in k18939 in k18528 in k18525 in k18522 in k18519 in k18516 in k17994 in k17991 in k17468 in k17465 in k17462 in k17459 in k17456 in k17453 in k17450 in k17447 in k17444 in k17441 in k17438 in k17435 in k17432 in k17429 in k17426 in k17423 in k17420 in k17417 in k17414 in k17411 in k17408 in k17269 in k17266 in k17263 in k17260 in k17204 in k17201 in k17198 in k17195 in k17192 in k17189 in k17186 in k17183 in k15938 in k15869 in k15676 in k15673 in k15568 in k15517 in k7924 in k7921 in k5905 in k5612 in k5609 in k5605 in k5314 in k5311 in k5308 in k5305 */
static void C_ccall f_21938(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[18],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_21938,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_21941,a[2]=((C_word*)t0)[5],a[3]=((C_word*)t0)[6],a[4]=((C_word*)t0)[7],a[5]=((C_word*)t0)[8],tmp=(C_word)a,a+=6,tmp);
t3=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_21994,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[7],a[4]=((C_word*)t0)[3],a[5]=((C_word*)t0)[4],a[6]=((C_word)li328),tmp=(C_word)a,a+=7,tmp);
t4=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_22008,a[2]=((C_word*)t0)[4],a[3]=((C_word*)t0)[5],a[4]=((C_word)li329),tmp=(C_word)a,a+=5,tmp);
C_trace("ChickenBridge.scm: 370  call-with-values");
C_call_with_values(4,0,t2,t3,t4);}

/* a22007 in k21936 in k21929 in k22033 in k21909 in k21906 in k21903 in k21900 in k21897 in k21882 in parse-conditional in k18948 in k18945 in k18942 in k18939 in k18528 in k18525 in k18522 in k18519 in k18516 in k17994 in k17991 in k17468 in k17465 in k17462 in k17459 in k17456 in k17453 in k17450 in k17447 in k17444 in k17441 in k17438 in k17435 in k17432 in k17429 in k17426 in k17423 in k17420 in k17417 in k17414 in k17411 in k17408 in k17269 in k17266 in k17263 in k17260 in k17204 in k17201 in k17198 in k17195 in k17192 in k17189 in k17186 in k17183 in k15938 in k15869 in k15676 in k15673 in k15568 in k15517 in k7924 in k7921 in k5905 in k5612 in k5609 in k5605 in k5314 in k5311 in k5308 in k5305 */
static void C_ccall f_22008(C_word c,C_word t0,C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word t6;
C_word *a;
if(c!=4) C_bad_argc_2(c,4,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr4,(void*)f_22008,4,t0,t1,t2,t3);}
t4=C_mutate(((C_word *)((C_word*)t0)[3])+1,t2);
t5=C_mutate(((C_word *)((C_word*)t0)[2])+1,t3);
t6=t1;
((C_proc2)(void*)(*((C_word*)t6+1)))(2,t6,t5);}

/* a21993 in k21936 in k21929 in k22033 in k21909 in k21906 in k21903 in k21900 in k21897 in k21882 in parse-conditional in k18948 in k18945 in k18942 in k18939 in k18528 in k18525 in k18522 in k18519 in k18516 in k17994 in k17991 in k17468 in k17465 in k17462 in k17459 in k17456 in k17453 in k17450 in k17447 in k17444 in k17441 in k17438 in k17435 in k17432 in k17429 in k17426 in k17423 in k17420 in k17417 in k17414 in k17411 in k17408 in k17269 in k17266 in k17263 in k17260 in k17204 in k17201 in k17198 in k17195 in k17192 in k17189 in k17186 in k17183 in k15938 in k15869 in k15676 in k15673 in k15568 in k15517 in k7924 in k7921 in k5905 in k5612 in k5609 in k5605 in k5314 in k5311 in k5308 in k5305 */
static void C_ccall f_21994(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[8],*a=ab;
if(c!=2) C_bad_argc_2(c,2,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_21994,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_22002,a[2]=((C_word*)t0)[4],a[3]=((C_word*)t0)[5],a[4]=t1,tmp=(C_word)a,a+=5,tmp);
t3=(C_word)C_a_i_list(&a,1,((C_word*)((C_word*)t0)[3])[1]);
C_trace("ChickenBridge.scm: 370  append");
t4=*((C_word*)lf[18]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,((C_word*)t0)[2],t3);}

/* k22000 in a21993 in k21936 in k21929 in k22033 in k21909 in k21906 in k21903 in k21900 in k21897 in k21882 in parse-conditional in k18948 in k18945 in k18942 in k18939 in k18528 in k18525 in k18522 in k18519 in k18516 in k17994 in k17991 in k17468 in k17465 in k17462 in k17459 in k17456 in k17453 in k17450 in k17447 in k17444 in k17441 in k17438 in k17435 in k17432 in k17429 in k17426 in k17423 in k17420 in k17417 in k17414 in k17411 in k17408 in k17269 in k17266 in k17263 in k17260 in k17204 in k17201 in k17198 in k17195 in k17192 in k17189 in k17186 in k17183 in k15938 in k15869 in k15676 in k15673 in k15568 in k15517 in k7924 in k7921 in k5905 in k5612 in k5609 in k5605 in k5314 in k5311 in k5308 in k5305 */
static void C_ccall f_22002(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 370  parse-then-else-dependents");
f_21731(((C_word*)t0)[4],((C_word*)((C_word*)t0)[3])[1],t1,((C_word*)t0)[2]);}

/* k21939 in k21936 in k21929 in k22033 in k21909 in k21906 in k21903 in k21900 in k21897 in k21882 in parse-conditional in k18948 in k18945 in k18942 in k18939 in k18528 in k18525 in k18522 in k18519 in k18516 in k17994 in k17991 in k17468 in k17465 in k17462 in k17459 in k17456 in k17453 in k17450 in k17447 in k17444 in k17441 in k17438 in k17435 in k17432 in k17429 in k17426 in k17423 in k17420 in k17417 in k17414 in k17411 in k17408 in k17269 in k17266 in k17263 in k17260 in k17204 in k17201 in k17198 in k17195 in k17192 in k17189 in k17186 in k17183 in k15938 in k15869 in k15676 in k15673 in k15568 in k15517 in k7924 in k7921 in k5905 in k5612 in k5609 in k5605 in k5314 in k5311 in k5308 in k5305 */
static void C_ccall f_21941(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word ab[10],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_21941,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_21944,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],tmp=(C_word)a,a+=6,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[2])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
t4=(C_word)C_i_car(((C_word*)((C_word*)t0)[2])[1]);
t5=C_mutate(((C_word *)((C_word*)t0)[2])+1,t4);
t6=t2;
f_21944(t6,t5);}
else{
t4=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_21980,a[2]=t2,a[3]=((C_word*)t0)[2],tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 370  gather-clauses");
f_19211(t4,C_SCHEME_END_OF_LIST,((C_word*)((C_word*)t0)[2])[1]);}}

/* k21978 in k21939 in k21936 in k21929 in k22033 in k21909 in k21906 in k21903 in k21900 in k21897 in k21882 in parse-conditional in k18948 in k18945 in k18942 in k18939 in k18528 in k18525 in k18522 in k18519 in k18516 in k17994 in k17991 in k17468 in k17465 in k17462 in k17459 in k17456 in k17453 in k17450 in k17447 in k17444 in k17441 in k17438 in k17435 in k17432 in k17429 in k17426 in k17423 in k17420 in k17417 in k17414 in k17411 in k17408 in k17269 in k17266 in k17263 in k17260 in k17204 in k17201 in k17198 in k17195 in k17192 in k17189 in k17186 in k17183 in k15938 in k15869 in k15676 in k15673 in k15568 in k15517 in k7924 in k7921 in k5905 in k5612 in k5609 in k5605 in k5314 in k5311 in k5308 in k5305 */
static void C_ccall f_21980(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[3])+1,t1);
t3=((C_word*)t0)[2];
f_21944(t3,t2);}

/* k21942 in k21939 in k21936 in k21929 in k22033 in k21909 in k21906 in k21903 in k21900 in k21897 in k21882 in parse-conditional in k18948 in k18945 in k18942 in k18939 in k18528 in k18525 in k18522 in k18519 in k18516 in k17994 in k17991 in k17468 in k17465 in k17462 in k17459 in k17456 in k17453 in k17450 in k17447 in k17444 in k17441 in k17438 in k17435 in k17432 in k17429 in k17426 in k17423 in k17420 in k17417 in k17414 in k17411 in k17408 in k17269 in k17266 in k17263 in k17260 in k17204 in k17201 in k17198 in k17195 in k17192 in k17189 in k17186 in k17183 in k15938 in k15869 in k15676 in k15673 in k15568 in k15517 in k7924 in k7921 in k5905 in k5612 in k5609 in k5605 in k5314 in k5311 in k5308 in k5305 */
static void C_fcall f_21944(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[6],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_21944,NULL,2,t0,t1);}
t2=(C_word)C_i_cdddr(((C_word*)((C_word*)t0)[5])[1]);
t3=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_21973,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=t2,tmp=(C_word)a,a+=6,tmp);
C_trace("ChickenBridge.scm: 370  loop-looping");
t4=C_retrieve2(lf[387],"loop-looping");
f_19012(3,t4,t3,((C_word*)((C_word*)t0)[2])[1]);}

/* k21971 in k21942 in k21939 in k21936 in k21929 in k22033 in k21909 in k21906 in k21903 in k21900 in k21897 in k21882 in parse-conditional in k18948 in k18945 in k18942 in k18939 in k18528 in k18525 in k18522 in k18519 in k18516 in k17994 in k17991 in k17468 in k17465 in k17462 in k17459 in k17456 in k17453 in k17450 in k17447 in k17444 in k17441 in k17438 in k17435 in k17432 in k17429 in k17426 in k17423 in k17420 in k17417 in k17414 in k17411 in k17408 in k17269 in k17266 in k17263 in k17260 in k17204 in k17201 in k17198 in k17195 in k17192 in k17189 in k17186 in k17183 in k15938 in k15869 in k15676 in k15673 in k15568 in k15517 in k7924 in k7921 in k5905 in k5612 in k5609 in k5605 in k5314 in k5311 in k5308 in k5305 */
static void C_ccall f_21973(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[8],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_21973,2,t0,t1);}
t2=(C_word)C_a_i_cons(&a,2,lf[336],t1);
t3=(C_word)C_i_set_car(((C_word*)t0)[5],t2);
t4=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_21950,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],tmp=(C_word)a,a+=5,tmp);
C_trace("ChickenBridge.scm: 370  loop-looping-set!");
f_19018(t4,((C_word*)((C_word*)t0)[4])[1],C_SCHEME_END_OF_LIST);}

/* k21948 in k21971 in k21942 in k21939 in k21936 in k21929 in k22033 in k21909 in k21906 in k21903 in k21900 in k21897 in k21882 in parse-conditional in k18948 in k18945 in k18942 in k18939 in k18528 in k18525 in k18522 in k18519 in k18516 in k17994 in k17991 in k17468 in k17465 in k17462 in k17459 in k17456 in k17453 in k17450 in k17447 in k17444 in k17441 in k17438 in k17435 in k17432 in k17429 in k17426 in k17423 in k17420 in k17417 in k17414 in k17411 in k17408 in k17269 in k17266 in k17263 in k17260 in k17204 in k17201 in k17198 in k17195 in k17192 in k17189 in k17186 in k17183 in k15938 in k15869 in k15676 in k15673 in k15568 in k15517 in k7924 in k7921 in k5905 in k5612 in k5609 in k5605 in k5314 in k5311 in k5308 in k5305 */
static void C_ccall f_21950(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[5],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_21950,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_21953,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],tmp=(C_word)a,a+=5,tmp);
C_trace("ChickenBridge.scm: 370  loop-looping-set!");
f_19018(t2,((C_word*)((C_word*)t0)[2])[1],C_SCHEME_END_OF_LIST);}

/* k21951 in k21948 in k21971 in k21942 in k21939 in k21936 in k21929 in k22033 in k21909 in k21906 in k21903 in k21900 in k21897 in k21882 in parse-conditional in k18948 in k18945 in k18942 in k18939 in k18528 in k18525 in k18522 in k18519 in k18516 in k17994 in k17991 in k17468 in k17465 in k17462 in k17459 in k17456 in k17453 in k17450 in k17447 in k17444 in k17441 in k17438 in k17435 in k17432 in k17429 in k17426 in k17423 in k17420 in k17417 in k17414 in k17411 in k17408 in k17269 in k17266 in k17263 in k17260 in k17204 in k17201 in k17198 in k17195 in k17192 in k17189 in k17186 in k17183 in k15938 in k15869 in k15676 in k15673 in k15568 in k15517 in k7924 in k7921 in k5905 in k5612 in k5609 in k5605 in k5314 in k5311 in k5308 in k5305 */
static void C_ccall f_21953(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[10],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_21953,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_21957,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],tmp=(C_word)a,a+=4,tmp);
t3=(C_word)C_a_i_list(&a,2,((C_word*)((C_word*)t0)[4])[1],((C_word*)((C_word*)t0)[2])[1]);
C_trace("ChickenBridge.scm: 370  gather-clauses");
f_19211(t2,lf[20],t3);}

/* k21955 in k21951 in k21948 in k21971 in k21942 in k21939 in k21936 in k21929 in k22033 in k21909 in k21906 in k21903 in k21900 in k21897 in k21882 in parse-conditional in k18948 in k18945 in k18942 in k18939 in k18528 in k18525 in k18522 in k18519 in k18516 in k17994 in k17991 in k17468 in k17465 in k17462 in k17459 in k17456 in k17453 in k17450 in k17447 in k17444 in k17441 in k17438 in k17435 in k17432 in k17429 in k17426 in k17423 in k17420 in k17417 in k17414 in k17411 in k17408 in k17269 in k17266 in k17263 in k17260 in k17204 in k17201 in k17198 in k17195 in k17192 in k17189 in k17186 in k17183 in k15938 in k15869 in k15676 in k15673 in k15568 in k15517 in k7924 in k7921 in k5905 in k5612 in k5609 in k5605 in k5314 in k5311 in k5308 in k5305 */
static void C_ccall f_21957(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[3])+1,t1);
t3=((C_word*)t0)[2];
f_21918(t3,t2);}

/* k21916 in k22033 in k21909 in k21906 in k21903 in k21900 in k21897 in k21882 in parse-conditional in k18948 in k18945 in k18942 in k18939 in k18528 in k18525 in k18522 in k18519 in k18516 in k17994 in k17991 in k17468 in k17465 in k17462 in k17459 in k17456 in k17453 in k17450 in k17447 in k17444 in k17441 in k17438 in k17435 in k17432 in k17429 in k17426 in k17423 in k17420 in k17417 in k17414 in k17411 in k17408 in k17269 in k17266 in k17263 in k17260 in k17204 in k17201 in k17198 in k17195 in k17192 in k17189 in k17186 in k17183 in k15938 in k15869 in k15676 in k15673 in k15568 in k15517 in k7924 in k7921 in k5905 in k5612 in k5609 in k5605 in k5314 in k5311 in k5308 in k5305 */
static void C_fcall f_21918(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[8],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_21918,NULL,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_21921,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],tmp=(C_word)a,a+=5,tmp);
t3=(C_word)C_a_i_list(&a,1,((C_word*)((C_word*)t0)[2])[1]);
C_trace("ChickenBridge.scm: 370  loop-looping-set!");
f_19018(t2,((C_word*)((C_word*)t0)[4])[1],t3);}

/* k21919 in k21916 in k22033 in k21909 in k21906 in k21903 in k21900 in k21897 in k21882 in parse-conditional in k18948 in k18945 in k18942 in k18939 in k18528 in k18525 in k18522 in k18519 in k18516 in k17994 in k17991 in k17468 in k17465 in k17462 in k17459 in k17456 in k17453 in k17450 in k17447 in k17444 in k17441 in k17438 in k17435 in k17432 in k17429 in k17426 in k17423 in k17420 in k17417 in k17414 in k17411 in k17408 in k17269 in k17266 in k17263 in k17260 in k17204 in k17201 in k17198 in k17195 in k17192 in k17189 in k17186 in k17183 in k15938 in k15869 in k15676 in k15673 in k15568 in k15517 in k7924 in k7921 in k5905 in k5612 in k5609 in k5605 in k5314 in k5311 in k5308 in k5305 */
static void C_ccall f_21921(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 370  values");
C_values(4,0,((C_word*)t0)[4],((C_word*)((C_word*)t0)[3])[1],((C_word*)((C_word*)t0)[2])[1]);}

/* parse-then-else-dependents in k18948 in k18945 in k18942 in k18939 in k18528 in k18525 in k18522 in k18519 in k18516 in k17994 in k17991 in k17468 in k17465 in k17462 in k17459 in k17456 in k17453 in k17450 in k17447 in k17444 in k17441 in k17438 in k17435 in k17432 in k17429 in k17426 in k17423 in k17420 in k17417 in k17414 in k17411 in k17408 in k17269 in k17266 in k17263 in k17260 in k17204 in k17201 in k17198 in k17195 in k17192 in k17189 in k17186 in k17183 in k15938 in k15869 in k15676 in k15673 in k15568 in k15517 in k7924 in k7921 in k5905 in k5612 in k5609 in k5605 in k5314 in k5311 in k5308 in k5305 */
static void C_fcall f_21731(C_word t1,C_word t2,C_word t3,C_word t4){
C_word tmp;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word t14;
C_word t15;
C_word t16;
C_word ab[25],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_21731,NULL,4,t1,t2,t3,t4);}
t5=(*a=C_VECTOR_TYPE|1,a[1]=t2,tmp=(C_word)a,a+=2,tmp);
t6=((C_word*)t5)[1];
t7=(*a=C_VECTOR_TYPE|1,a[1]=t6,tmp=(C_word)a,a+=2,tmp);
t8=C_SCHEME_FALSE;
t9=(*a=C_VECTOR_TYPE|1,a[1]=t8,tmp=(C_word)a,a+=2,tmp);
t10=C_SCHEME_END_OF_LIST;
t11=(*a=C_VECTOR_TYPE|1,a[1]=t10,tmp=(C_word)a,a+=2,tmp);
t12=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_21735,a[2]=t5,a[3]=t11,a[4]=t1,tmp=(C_word)a,a+=5,tmp);
t13=C_SCHEME_UNDEFINED;
t14=(*a=C_VECTOR_TYPE|1,a[1]=t13,tmp=(C_word)a,a+=2,tmp);
t15=C_set_block_item(t14,0,(*a=C_CLOSURE_TYPE|9,a[1]=(C_word)f_21740,a[2]=t3,a[3]=t14,a[4]=t7,a[5]=t11,a[6]=t4,a[7]=t9,a[8]=t5,a[9]=((C_word)li326),tmp=(C_word)a,a+=10,tmp));
t16=((C_word*)t14)[1];
f_21740(t16,t12,C_SCHEME_FALSE,C_SCHEME_FALSE,C_SCHEME_FALSE);}

/* do3736 in parse-then-else-dependents in k18948 in k18945 in k18942 in k18939 in k18528 in k18525 in k18522 in k18519 in k18516 in k17994 in k17991 in k17468 in k17465 in k17462 in k17459 in k17456 in k17453 in k17450 in k17447 in k17444 in k17441 in k17438 in k17435 in k17432 in k17429 in k17426 in k17423 in k17420 in k17417 in k17414 in k17411 in k17408 in k17269 in k17266 in k17263 in k17260 in k17204 in k17201 in k17198 in k17195 in k17192 in k17189 in k17186 in k17183 in k15938 in k15869 in k15676 in k15673 in k15568 in k15517 in k7924 in k7921 in k5905 in k5612 in k5609 in k5605 in k5314 in k5311 in k5308 in k5305 */
static void C_fcall f_21740(C_word t0,C_word t1,C_word t2,C_word t3,C_word t4){
C_word tmp;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word ab[19],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_21740,NULL,5,t0,t1,t2,t3,t4);}
t5=(*a=C_VECTOR_TYPE|1,a[1]=t2,tmp=(C_word)a,a+=2,tmp);
t6=(*a=C_VECTOR_TYPE|1,a[1]=t3,tmp=(C_word)a,a+=2,tmp);
t7=(*a=C_VECTOR_TYPE|1,a[1]=t4,tmp=(C_word)a,a+=2,tmp);
t8=(C_word)C_i_nullp(((C_word*)((C_word*)t0)[8])[1]);
t9=(C_truep(t8)?t8:((C_word*)((C_word*)t0)[7])[1]);
if(C_truep(t9)){
t10=t1;
((C_proc2)(void*)(*((C_word*)t10+1)))(2,t10,C_SCHEME_UNDEFINED);}
else{
t10=(C_word)C_i_car(((C_word*)((C_word*)t0)[8])[1]);
t11=((C_word*)t0)[6];
t12=(*a=C_CLOSURE_TYPE|12,a[1]=(C_word)f_21688,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[7],a[4]=((C_word*)t0)[6],a[5]=t6,a[6]=t1,a[7]=((C_word*)t0)[3],a[8]=t7,a[9]=((C_word*)t0)[8],a[10]=((C_word*)t0)[4],a[11]=((C_word*)t0)[5],a[12]=t5,tmp=(C_word)a,a+=13,tmp);
C_trace("ChickenBridge.scm: 370  loop-op?");
f_19282(t12,t10,t11);}}

/* k21686 in do3736 in parse-then-else-dependents in k18948 in k18945 in k18942 in k18939 in k18528 in k18525 in k18522 in k18519 in k18516 in k17994 in k17991 in k17468 in k17465 in k17462 in k17459 in k17456 in k17453 in k17450 in k17447 in k17444 in k17441 in k17438 in k17435 in k17432 in k17429 in k17426 in k17423 in k17420 in k17417 in k17414 in k17411 in k17408 in k17269 in k17266 in k17263 in k17260 in k17204 in k17201 in k17198 in k17195 in k17192 in k17189 in k17186 in k17183 in k15938 in k15869 in k15676 in k15673 in k15568 in k15517 in k7924 in k7921 in k5905 in k5612 in k5609 in k5605 in k5314 in k5311 in k5308 in k5305 */
static void C_ccall f_21688(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word ab[14],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_21688,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|13,a[1]=(C_word)f_21694,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],a[7]=((C_word*)t0)[7],a[8]=((C_word*)t0)[8],a[9]=((C_word*)t0)[9],a[10]=((C_word*)t0)[10],a[11]=((C_word*)t0)[11],a[12]=((C_word*)t0)[12],a[13]=t1,tmp=(C_word)a,a+=14,tmp);
if(C_truep(t1)){
t3=(C_word)C_i_cddr(t1);
if(C_truep((C_word)C_i_nullp(t3))){
t4=t2;
f_21694(t4,C_SCHEME_FALSE);}
else{
t4=(C_word)C_i_caddr(t1);
t5=(C_word)C_eqp(t4,lf[557]);
if(C_truep(t5)){
t6=(C_word)C_i_car(t1);
t7=(C_word)C_i_member(t6,lf[558]);
t8=t2;
f_21694(t8,(C_word)C_i_not(t7));}
else{
t6=t2;
f_21694(t6,C_SCHEME_FALSE);}}}
else{
t3=t2;
f_21694(t3,C_SCHEME_FALSE);}}

/* k21692 in k21686 in do3736 in parse-then-else-dependents in k18948 in k18945 in k18942 in k18939 in k18528 in k18525 in k18522 in k18519 in k18516 in k17994 in k17991 in k17468 in k17465 in k17462 in k17459 in k17456 in k17453 in k17450 in k17447 in k17444 in k17441 in k17438 in k17435 in k17432 in k17429 in k17426 in k17423 in k17420 in k17417 in k17414 in k17411 in k17408 in k17269 in k17266 in k17263 in k17260 in k17204 in k17201 in k17198 in k17195 in k17192 in k17189 in k17186 in k17183 in k15938 in k15869 in k15676 in k15673 in k15568 in k15517 in k7924 in k7921 in k5905 in k5612 in k5609 in k5605 in k5314 in k5311 in k5308 in k5305 */
static void C_fcall f_21694(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word ab[22],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_21694,NULL,2,t0,t1);}
t2=(C_truep(t1)?((C_word*)t0)[13]:C_SCHEME_FALSE);
t3=C_mutate(((C_word *)((C_word*)t0)[12])+1,t2);
t4=(*a=C_CLOSURE_TYPE|12,a[1]=(C_word)f_21757,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[12],a[7]=((C_word*)t0)[6],a[8]=((C_word*)t0)[7],a[9]=((C_word*)t0)[8],a[10]=((C_word*)t0)[9],a[11]=((C_word*)t0)[10],a[12]=((C_word*)t0)[11],tmp=(C_word)a,a+=13,tmp);
t5=((C_word*)((C_word*)t0)[12])[1];
if(C_truep(t5)){
t6=t4;
f_21757(2,t6,C_SCHEME_UNDEFINED);}
else{
t6=(C_word)C_i_car(((C_word*)((C_word*)t0)[9])[1]);
C_trace("ChickenBridge.scm: 370  loop-error");
f_19300(t4,((C_word*)t0)[4],((C_word*)((C_word*)t0)[10])[1],(C_word)C_a_i_list(&a,3,lf[555],t6,lf[556]));}}

/* k21755 in k21692 in k21686 in do3736 in parse-then-else-dependents in k18948 in k18945 in k18942 in k18939 in k18528 in k18525 in k18522 in k18519 in k18516 in k17994 in k17991 in k17468 in k17465 in k17462 in k17459 in k17456 in k17453 in k17450 in k17447 in k17444 in k17441 in k17438 in k17435 in k17432 in k17429 in k17426 in k17423 in k17420 in k17417 in k17414 in k17411 in k17408 in k17269 in k17266 in k17263 in k17260 in k17204 in k17201 in k17198 in k17195 in k17192 in k17189 in k17186 in k17183 in k15938 in k15869 in k15676 in k15673 in k15568 in k15517 in k7924 in k7921 in k5905 in k5612 in k5609 in k5605 in k5314 in k5311 in k5308 in k5305 */
static void C_ccall f_21757(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[25],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_21757,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|11,a[1]=(C_word)f_21760,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],a[7]=((C_word*)t0)[8],a[8]=((C_word*)t0)[9],a[9]=((C_word*)t0)[10],a[10]=((C_word*)t0)[11],a[11]=((C_word*)t0)[12],tmp=(C_word)a,a+=12,tmp);
t3=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_21830,a[2]=((C_word*)t0)[12],a[3]=((C_word*)t0)[2],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[10],a[6]=((C_word*)t0)[6],a[7]=((C_word)li324),tmp=(C_word)a,a+=8,tmp);
t4=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_21843,a[2]=((C_word*)t0)[9],a[3]=((C_word*)t0)[5],a[4]=((C_word)li325),tmp=(C_word)a,a+=5,tmp);
C_trace("ChickenBridge.scm: 370  call-with-values");
C_call_with_values(4,0,t2,t3,t4);}

/* a21842 in k21755 in k21692 in k21686 in do3736 in parse-then-else-dependents in k18948 in k18945 in k18942 in k18939 in k18528 in k18525 in k18522 in k18519 in k18516 in k17994 in k17991 in k17468 in k17465 in k17462 in k17459 in k17456 in k17453 in k17450 in k17447 in k17444 in k17441 in k17438 in k17435 in k17432 in k17429 in k17426 in k17423 in k17420 in k17417 in k17414 in k17411 in k17408 in k17269 in k17266 in k17263 in k17260 in k17204 in k17201 in k17198 in k17195 in k17192 in k17189 in k17186 in k17183 in k15938 in k15869 in k15676 in k15673 in k15568 in k15517 in k7924 in k7921 in k5905 in k5612 in k5609 in k5605 in k5314 in k5311 in k5308 in k5305 */
static void C_ccall f_21843(C_word c,C_word t0,C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word t6;
C_word *a;
if(c!=4) C_bad_argc_2(c,4,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr4,(void*)f_21843,4,t0,t1,t2,t3);}
t4=C_mutate(((C_word *)((C_word*)t0)[3])+1,t2);
t5=C_mutate(((C_word *)((C_word*)t0)[2])+1,t3);
t6=t1;
((C_proc2)(void*)(*((C_word*)t6+1)))(2,t6,t5);}

/* a21829 in k21755 in k21692 in k21686 in do3736 in parse-then-else-dependents in k18948 in k18945 in k18942 in k18939 in k18528 in k18525 in k18522 in k18519 in k18516 in k17994 in k17991 in k17468 in k17465 in k17462 in k17459 in k17456 in k17453 in k17450 in k17447 in k17444 in k17441 in k17438 in k17435 in k17432 in k17429 in k17426 in k17423 in k17420 in k17417 in k17414 in k17411 in k17408 in k17269 in k17266 in k17263 in k17260 in k17204 in k17201 in k17198 in k17195 in k17192 in k17189 in k17186 in k17183 in k15938 in k15869 in k15676 in k15673 in k15568 in k15517 in k7924 in k7921 in k5905 in k5612 in k5609 in k5605 in k5314 in k5311 in k5308 in k5305 */
static void C_ccall f_21830(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[6],*a=ab;
if(c!=2) C_bad_argc_2(c,2,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_21830,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_21838,a[2]=((C_word*)t0)[4],a[3]=((C_word*)t0)[5],a[4]=t1,a[5]=((C_word*)t0)[6],tmp=(C_word)a,a+=6,tmp);
C_trace("ChickenBridge.scm: 370  append");
t3=*((C_word*)lf[18]+1);
((C_proc4)C_retrieve_proc(t3))(4,t3,t2,((C_word*)t0)[3],((C_word*)((C_word*)t0)[2])[1]);}

/* k21836 in a21829 in k21755 in k21692 in k21686 in do3736 in parse-then-else-dependents in k18948 in k18945 in k18942 in k18939 in k18528 in k18525 in k18522 in k18519 in k18516 in k17994 in k17991 in k17468 in k17465 in k17462 in k17459 in k17456 in k17453 in k17450 in k17447 in k17444 in k17441 in k17438 in k17435 in k17432 in k17429 in k17426 in k17423 in k17420 in k17417 in k17414 in k17411 in k17408 in k17269 in k17266 in k17263 in k17260 in k17204 in k17201 in k17198 in k17195 in k17192 in k17189 in k17186 in k17183 in k15938 in k15869 in k15676 in k15673 in k15568 in k15517 in k7924 in k7921 in k5905 in k5612 in k5609 in k5605 in k5314 in k5311 in k5308 in k5305 */
static void C_ccall f_21838(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word *a;
t2=(C_word)C_i_cadr(((C_word*)((C_word*)t0)[5])[1]);
t3=t2;
((C_proc5)C_retrieve_proc(t3))(5,t3,((C_word*)t0)[4],((C_word*)((C_word*)t0)[3])[1],t1,((C_word*)t0)[2]);}

/* k21758 in k21755 in k21692 in k21686 in do3736 in parse-then-else-dependents in k18948 in k18945 in k18942 in k18939 in k18528 in k18525 in k18522 in k18519 in k18516 in k17994 in k17991 in k17468 in k17465 in k17462 in k17459 in k17456 in k17453 in k17450 in k17447 in k17444 in k17441 in k17438 in k17435 in k17432 in k17429 in k17426 in k17423 in k17420 in k17417 in k17414 in k17411 in k17408 in k17269 in k17266 in k17263 in k17260 in k17204 in k17201 in k17198 in k17195 in k17192 in k17189 in k17186 in k17183 in k15938 in k15869 in k15676 in k15673 in k15568 in k15517 in k7924 in k7921 in k5905 in k5612 in k5609 in k5605 in k5314 in k5311 in k5308 in k5305 */
static void C_ccall f_21760(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[15],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_21760,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|11,a[1]=(C_word)f_21764,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],a[7]=((C_word*)t0)[7],a[8]=((C_word*)t0)[8],a[9]=((C_word*)t0)[9],a[10]=((C_word*)t0)[10],a[11]=((C_word*)t0)[11],tmp=(C_word)a,a+=12,tmp);
t3=(C_word)C_a_i_list(&a,1,((C_word*)((C_word*)t0)[4])[1]);
C_trace("ChickenBridge.scm: 370  append");
t4=*((C_word*)lf[18]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,((C_word*)((C_word*)t0)[11])[1],t3);}

/* k21762 in k21758 in k21755 in k21692 in k21686 in do3736 in parse-then-else-dependents in k18948 in k18945 in k18942 in k18939 in k18528 in k18525 in k18522 in k18519 in k18516 in k17994 in k17991 in k17468 in k17465 in k17462 in k17459 in k17456 in k17453 in k17450 in k17447 in k17444 in k17441 in k17438 in k17435 in k17432 in k17429 in k17426 in k17423 in k17420 in k17417 in k17414 in k17411 in k17408 in k17269 in k17266 in k17263 in k17260 in k17204 in k17201 in k17198 in k17195 in k17192 in k17189 in k17186 in k17183 in k15938 in k15869 in k15676 in k15673 in k15568 in k15517 in k7924 in k7921 in k5905 in k5612 in k5609 in k5605 in k5314 in k5311 in k5308 in k5305 */
static void C_ccall f_21764(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word t14;
C_word t15;
C_word ab[14],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_21764,2,t0,t1);}
t2=C_mutate(((C_word *)((C_word*)t0)[11])+1,t1);
t3=C_mutate(((C_word *)((C_word*)t0)[10])+1,((C_word*)((C_word*)t0)[9])[1]);
t4=C_mutate(((C_word *)((C_word*)t0)[9])+1,((C_word*)((C_word*)t0)[8])[1]);
t5=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_21769,a[2]=((C_word*)t0)[8],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
if(C_truep((C_word)C_i_nullp(((C_word*)((C_word*)t0)[9])[1]))){
t6=t5;
f_21769(2,t6,C_SCHEME_UNDEFINED);}
else{
t6=(C_word)C_i_car(((C_word*)((C_word*)t0)[9])[1]);
t7=(C_word)C_eqp(t6,lf[310]);
if(C_truep(t7)){
t8=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[9])[1]);
t9=C_mutate(((C_word *)((C_word*)t0)[9])+1,t8);
if(C_truep((C_word)C_i_nullp(((C_word*)((C_word*)t0)[9])[1]))){
C_trace("ChickenBridge.scm: 370  loop-error");
f_19300(t5,((C_word*)t0)[3],((C_word*)((C_word*)t0)[10])[1],(C_word)C_a_i_list(&a,1,lf[554]));}
else{
t10=t5;
f_21769(2,t10,C_SCHEME_UNDEFINED);}}
else{
t8=(C_word)C_i_car(((C_word*)((C_word*)t0)[9])[1]);
t9=(C_word)C_eqp(t8,lf[16]);
if(C_truep(t9)){
t10=C_set_block_item(((C_word*)t0)[2],0,C_SCHEME_TRUE);
t11=t5;
f_21769(2,t11,t10);}
else{
t10=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_21807,a[2]=t5,a[3]=((C_word*)t0)[2],tmp=(C_word)a,a+=4,tmp);
t11=(C_word)C_i_car(((C_word*)((C_word*)t0)[9])[1]);
C_trace("ChickenBridge.scm: 370  loop-op?");
f_19282(t10,t11,((C_word*)t0)[3]);}}}}

/* k21805 in k21762 in k21758 in k21755 in k21692 in k21686 in do3736 in parse-then-else-dependents in k18948 in k18945 in k18942 in k18939 in k18528 in k18525 in k18522 in k18519 in k18516 in k17994 in k17991 in k17468 in k17465 in k17462 in k17459 in k17456 in k17453 in k17450 in k17447 in k17444 in k17441 in k17438 in k17435 in k17432 in k17429 in k17426 in k17423 in k17420 in k17417 in k17414 in k17411 in k17408 in k17269 in k17266 in k17263 in k17260 in k17204 in k17201 in k17198 in k17195 in k17192 in k17189 in k17186 in k17183 in k15938 in k15869 in k15676 in k15673 in k15568 in k15517 in k7924 in k7921 in k5905 in k5612 in k5609 in k5605 in k5314 in k5311 in k5308 in k5305 */
static void C_ccall f_21807(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word *a;
if(C_truep(t1)){
t2=C_set_block_item(((C_word*)t0)[3],0,C_SCHEME_TRUE);
t3=((C_word*)t0)[2];
f_21769(2,t3,t2);}
else{
t2=((C_word*)t0)[2];
f_21769(2,t2,C_SCHEME_UNDEFINED);}}

/* k21767 in k21762 in k21758 in k21755 in k21692 in k21686 in do3736 in parse-then-else-dependents in k18948 in k18945 in k18942 in k18939 in k18528 in k18525 in k18522 in k18519 in k18516 in k17994 in k17991 in k17468 in k17465 in k17462 in k17459 in k17456 in k17453 in k17450 in k17447 in k17444 in k17441 in k17438 in k17435 in k17432 in k17429 in k17426 in k17423 in k17420 in k17417 in k17414 in k17411 in k17408 in k17269 in k17266 in k17263 in k17260 in k17204 in k17201 in k17198 in k17195 in k17192 in k17189 in k17186 in k17183 in k15938 in k15869 in k15676 in k15673 in k15568 in k15517 in k7924 in k7921 in k5905 in k5612 in k5609 in k5605 in k5314 in k5311 in k5308 in k5305 */
static void C_ccall f_21769(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
t2=((C_word*)((C_word*)t0)[6])[1];
f_21740(t2,((C_word*)t0)[5],((C_word*)((C_word*)t0)[4])[1],((C_word*)((C_word*)t0)[3])[1],((C_word*)((C_word*)t0)[2])[1]);}

/* k21733 in parse-then-else-dependents in k18948 in k18945 in k18942 in k18939 in k18528 in k18525 in k18522 in k18519 in k18516 in k17994 in k17991 in k17468 in k17465 in k17462 in k17459 in k17456 in k17453 in k17450 in k17447 in k17444 in k17441 in k17438 in k17435 in k17432 in k17429 in k17426 in k17423 in k17420 in k17417 in k17414 in k17411 in k17408 in k17269 in k17266 in k17263 in k17260 in k17204 in k17201 in k17198 in k17195 in k17192 in k17189 in k17186 in k17183 in k15938 in k15869 in k15676 in k15673 in k15568 in k15517 in k7924 in k7921 in k5905 in k5612 in k5609 in k5605 in k5314 in k5311 in k5308 in k5305 */
static void C_ccall f_21735(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 370  values");
C_values(4,0,((C_word*)t0)[4],((C_word*)((C_word*)t0)[3])[1],((C_word*)((C_word*)t0)[2])[1]);}

/* parse-return in k18948 in k18945 in k18942 in k18939 in k18528 in k18525 in k18522 in k18519 in k18516 in k17994 in k17991 in k17468 in k17465 in k17462 in k17459 in k17456 in k17453 in k17450 in k17447 in k17444 in k17441 in k17438 in k17435 in k17432 in k17429 in k17426 in k17423 in k17420 in k17417 in k17414 in k17411 in k17408 in k17269 in k17266 in k17263 in k17260 in k17204 in k17201 in k17198 in k17195 in k17192 in k17189 in k17186 in k17183 in k15938 in k15869 in k15676 in k15673 in k15568 in k15517 in k7924 in k7921 in k5905 in k5612 in k5609 in k5605 in k5314 in k5311 in k5308 in k5305 */
static void C_ccall f_21630(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4){
C_word tmp;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word t14;
C_word ab[23],*a=ab;
if(c!=5) C_bad_argc_2(c,5,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr5,(void*)f_21630,5,t0,t1,t2,t3,t4);}
t5=(*a=C_VECTOR_TYPE|1,a[1]=t2,tmp=(C_word)a,a+=2,tmp);
t6=(C_word)C_i_car(((C_word*)t5)[1]);
t7=C_SCHEME_FALSE;
t8=(*a=C_VECTOR_TYPE|1,a[1]=t7,tmp=(C_word)a,a+=2,tmp);
t9=C_SCHEME_FALSE;
t10=(*a=C_VECTOR_TYPE|1,a[1]=t9,tmp=(C_word)a,a+=2,tmp);
t11=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_21637,a[2]=t4,a[3]=t6,a[4]=t1,a[5]=t10,a[6]=t8,a[7]=t5,tmp=(C_word)a,a+=8,tmp);
t12=(C_word)C_i_cdr(((C_word*)t5)[1]);
if(C_truep((C_word)C_i_nullp(t12))){
t13=(C_word)C_i_car(((C_word*)t5)[1]);
C_trace("ChickenBridge.scm: 370  loop-error");
f_19300(t11,t4,((C_word*)t5)[1],(C_word)C_a_i_list(&a,3,lf[551],t13,lf[552]));}
else{
t13=t11;
f_21637(2,t13,C_SCHEME_UNDEFINED);}}

/* k21635 in parse-return in k18948 in k18945 in k18942 in k18939 in k18528 in k18525 in k18522 in k18519 in k18516 in k17994 in k17991 in k17468 in k17465 in k17462 in k17459 in k17456 in k17453 in k17450 in k17447 in k17444 in k17441 in k17438 in k17435 in k17432 in k17429 in k17426 in k17423 in k17420 in k17417 in k17414 in k17411 in k17408 in k17269 in k17266 in k17263 in k17260 in k17204 in k17201 in k17198 in k17195 in k17192 in k17189 in k17186 in k17183 in k15938 in k15869 in k15676 in k15673 in k15568 in k15517 in k7924 in k7921 in k5905 in k5612 in k5609 in k5605 in k5314 in k5311 in k5308 in k5305 */
static void C_ccall f_21637(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word ab[6],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_21637,2,t0,t1);}
t2=(C_word)C_i_cadr(((C_word*)((C_word*)t0)[7])[1]);
t3=C_mutate(((C_word *)((C_word*)t0)[6])+1,t2);
t4=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[7])[1]);
t5=C_mutate(((C_word *)((C_word*)t0)[7])+1,t4);
t6=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_21668,a[2]=((C_word*)t0)[6],a[3]=((C_word*)t0)[7],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],tmp=(C_word)a,a+=6,tmp);
C_trace("ChickenBridge.scm: 370  loop-op?");
f_19282(t6,((C_word*)t0)[3],((C_word*)t0)[2]);}

/* k21666 in k21635 in parse-return in k18948 in k18945 in k18942 in k18939 in k18528 in k18525 in k18522 in k18519 in k18516 in k17994 in k17991 in k17468 in k17465 in k17462 in k17459 in k17456 in k17453 in k17450 in k17447 in k17444 in k17441 in k17438 in k17435 in k17432 in k17429 in k17426 in k17423 in k17420 in k17417 in k17414 in k17411 in k17408 in k17269 in k17266 in k17263 in k17260 in k17204 in k17201 in k17198 in k17195 in k17192 in k17189 in k17186 in k17183 in k15938 in k15869 in k15676 in k15673 in k15568 in k15517 in k7924 in k7921 in k5905 in k5612 in k5609 in k5605 in k5314 in k5311 in k5308 in k5305 */
static void C_ccall f_21668(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_21668,2,t0,t1);}
t2=(C_word)C_i_cadddr(t1);
t3=C_mutate(((C_word *)((C_word*)t0)[5])+1,t2);
t4=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_21656,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],tmp=(C_word)a,a+=4,tmp);
t5=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_21664,a[2]=t4,tmp=(C_word)a,a+=3,tmp);
C_trace("ChickenBridge.scm: 370  func");
t6=((C_word*)((C_word*)t0)[5])[1];
((C_proc3)C_retrieve_proc(t6))(3,t6,t5,((C_word*)((C_word*)t0)[2])[1]);}

/* k21662 in k21666 in k21635 in parse-return in k18948 in k18945 in k18942 in k18939 in k18528 in k18525 in k18522 in k18519 in k18516 in k17994 in k17991 in k17468 in k17465 in k17462 in k17459 in k17456 in k17453 in k17450 in k17447 in k17444 in k17441 in k17438 in k17435 in k17432 in k17429 in k17426 in k17423 in k17420 in k17417 in k17414 in k17411 in k17408 in k17269 in k17266 in k17263 in k17260 in k17204 in k17201 in k17198 in k17195 in k17192 in k17189 in k17186 in k17183 in k15938 in k15869 in k15676 in k15673 in k15568 in k15517 in k7924 in k7921 in k5905 in k5612 in k5609 in k5605 in k5314 in k5311 in k5308 in k5305 */
static void C_ccall f_21664(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[15],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_21664,2,t0,t1);}
t2=(C_word)C_a_i_list(&a,1,t1);
C_trace("ChickenBridge.scm: 370  make-loop-clause");
f_19060(((C_word*)t0)[2],(C_word)C_a_i_list(&a,4,lf[393],lf[537],lf[398],t2));}

/* k21654 in k21666 in k21635 in parse-return in k18948 in k18945 in k18942 in k18939 in k18528 in k18525 in k18522 in k18519 in k18516 in k17994 in k17991 in k17468 in k17465 in k17462 in k17459 in k17456 in k17453 in k17450 in k17447 in k17444 in k17441 in k17438 in k17435 in k17432 in k17429 in k17426 in k17423 in k17420 in k17417 in k17414 in k17411 in k17408 in k17269 in k17266 in k17263 in k17260 in k17204 in k17201 in k17198 in k17195 in k17192 in k17189 in k17186 in k17183 in k15938 in k15869 in k15676 in k15673 in k15568 in k15517 in k7924 in k7921 in k5905 in k5612 in k5609 in k5605 in k5314 in k5311 in k5308 in k5305 */
static void C_ccall f_21656(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 370  values");
C_values(4,0,((C_word*)t0)[3],t1,((C_word*)((C_word*)t0)[2])[1]);}

/* parse-thereis in k18948 in k18945 in k18942 in k18939 in k18528 in k18525 in k18522 in k18519 in k18516 in k17994 in k17991 in k17468 in k17465 in k17462 in k17459 in k17456 in k17453 in k17450 in k17447 in k17444 in k17441 in k17438 in k17435 in k17432 in k17429 in k17426 in k17423 in k17420 in k17417 in k17414 in k17411 in k17408 in k17269 in k17266 in k17263 in k17260 in k17204 in k17201 in k17198 in k17195 in k17192 in k17189 in k17186 in k17183 in k15938 in k15869 in k15676 in k15673 in k15568 in k15517 in k7924 in k7921 in k5905 in k5612 in k5609 in k5605 in k5314 in k5311 in k5308 in k5305 */
static void C_ccall f_21539(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4){
C_word tmp;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word t14;
C_word t15;
C_word t16;
C_word ab[26],*a=ab;
if(c!=5) C_bad_argc_2(c,5,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr5,(void*)f_21539,5,t0,t1,t2,t3,t4);}
t5=(*a=C_VECTOR_TYPE|1,a[1]=t2,tmp=(C_word)a,a+=2,tmp);
t6=(C_word)C_i_car(((C_word*)t5)[1]);
t7=C_SCHEME_FALSE;
t8=(*a=C_VECTOR_TYPE|1,a[1]=t7,tmp=(C_word)a,a+=2,tmp);
t9=C_SCHEME_FALSE;
t10=(*a=C_VECTOR_TYPE|1,a[1]=t9,tmp=(C_word)a,a+=2,tmp);
t11=C_SCHEME_FALSE;
t12=(*a=C_VECTOR_TYPE|1,a[1]=t11,tmp=(C_word)a,a+=2,tmp);
t13=(*a=C_CLOSURE_TYPE|8,a[1]=(C_word)f_21546,a[2]=t4,a[3]=t6,a[4]=t10,a[5]=t1,a[6]=t12,a[7]=t8,a[8]=t5,tmp=(C_word)a,a+=9,tmp);
t14=(C_word)C_i_cdr(((C_word*)t5)[1]);
if(C_truep((C_word)C_i_nullp(t14))){
t15=(C_word)C_i_car(((C_word*)t5)[1]);
C_trace("ChickenBridge.scm: 370  loop-error");
f_19300(t13,t4,((C_word*)t5)[1],(C_word)C_a_i_list(&a,3,lf[548],t15,lf[549]));}
else{
t15=t13;
f_21546(2,t15,C_SCHEME_UNDEFINED);}}

/* k21544 in parse-thereis in k18948 in k18945 in k18942 in k18939 in k18528 in k18525 in k18522 in k18519 in k18516 in k17994 in k17991 in k17468 in k17465 in k17462 in k17459 in k17456 in k17453 in k17450 in k17447 in k17444 in k17441 in k17438 in k17435 in k17432 in k17429 in k17426 in k17423 in k17420 in k17417 in k17414 in k17411 in k17408 in k17269 in k17266 in k17263 in k17260 in k17204 in k17201 in k17198 in k17195 in k17192 in k17189 in k17186 in k17183 in k15938 in k15869 in k15676 in k15673 in k15568 in k15517 in k7924 in k7921 in k5905 in k5612 in k5609 in k5605 in k5314 in k5311 in k5308 in k5305 */
static void C_ccall f_21546(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[8],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_21546,2,t0,t1);}
t2=(C_word)C_i_cadr(((C_word*)((C_word*)t0)[8])[1]);
t3=C_mutate(((C_word *)((C_word*)t0)[7])+1,t2);
t4=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_21614,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[7],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[8],a[7]=((C_word*)t0)[6],tmp=(C_word)a,a+=8,tmp);
C_trace("ChickenBridge.scm: 370  loop-op?");
f_19282(t4,((C_word*)t0)[3],((C_word*)t0)[2]);}

/* k21612 in k21544 in parse-thereis in k18948 in k18945 in k18942 in k18939 in k18528 in k18525 in k18522 in k18519 in k18516 in k17994 in k17991 in k17468 in k17465 in k17462 in k17459 in k17456 in k17453 in k17450 in k17447 in k17444 in k17441 in k17438 in k17435 in k17432 in k17429 in k17426 in k17423 in k17420 in k17417 in k17414 in k17411 in k17408 in k17269 in k17266 in k17263 in k17260 in k17204 in k17201 in k17198 in k17195 in k17192 in k17189 in k17186 in k17183 in k15938 in k15869 in k15676 in k15673 in k15568 in k15517 in k7924 in k7921 in k5905 in k5612 in k5609 in k5605 in k5314 in k5311 in k5308 in k5305 */
static void C_ccall f_21614(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word ab[13],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_21614,2,t0,t1);}
t2=(C_word)C_i_cadddr(t1);
t3=C_mutate(((C_word *)((C_word*)t0)[7])+1,t2);
t4=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_21557,a[2]=((C_word*)t0)[7],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],tmp=(C_word)a,a+=7,tmp);
t5=(C_word)C_eqp(((C_word*)t0)[2],lf[545]);
if(C_truep(t5)){
t6=C_set_block_item(((C_word*)t0)[3],0,C_SCHEME_FALSE);
t7=t4;
f_21557(t7,t6);}
else{
t6=(C_word)C_eqp(((C_word*)t0)[2],lf[546]);
if(C_truep(t6)){
t7=(C_word)C_a_i_list(&a,2,lf[312],((C_word*)((C_word*)t0)[4])[1]);
t8=C_mutate(((C_word *)((C_word*)t0)[4])+1,t7);
t9=C_set_block_item(((C_word*)t0)[3],0,C_SCHEME_TRUE);
t10=t4;
f_21557(t10,t9);}
else{
t7=(C_word)C_eqp(((C_word*)t0)[2],lf[547]);
if(C_truep(t7)){
t8=C_set_block_item(((C_word*)t0)[3],0,C_SCHEME_TRUE);
t9=t4;
f_21557(t9,t8);}
else{
t8=t4;
f_21557(t8,C_SCHEME_UNDEFINED);}}}}

/* k21555 in k21612 in k21544 in parse-thereis in k18948 in k18945 in k18942 in k18939 in k18528 in k18525 in k18522 in k18519 in k18516 in k17994 in k17991 in k17468 in k17465 in k17462 in k17459 in k17456 in k17453 in k17450 in k17447 in k17444 in k17441 in k17438 in k17435 in k17432 in k17429 in k17426 in k17423 in k17420 in k17417 in k17414 in k17411 in k17408 in k17269 in k17266 in k17263 in k17260 in k17204 in k17201 in k17198 in k17195 in k17192 in k17189 in k17186 in k17183 in k15938 in k15869 in k15676 in k15673 in k15568 in k15517 in k7924 in k7921 in k5905 in k5612 in k5609 in k5605 in k5314 in k5311 in k5308 in k5305 */
static void C_fcall f_21557(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_21557,NULL,2,t0,t1);}
t2=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[6])[1]);
t3=C_mutate(((C_word *)((C_word*)t0)[6])+1,t2);
t4=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_21568,a[2]=((C_word*)t0)[6],a[3]=((C_word*)t0)[5],tmp=(C_word)a,a+=4,tmp);
t5=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_21584,a[2]=t4,a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],tmp=(C_word)a,a+=5,tmp);
t6=(C_word)C_i_not(((C_word*)((C_word*)t0)[3])[1]);
C_trace("ChickenBridge.scm: 370  func");
t7=((C_word*)((C_word*)t0)[2])[1];
((C_proc3)C_retrieve_proc(t7))(3,t7,t5,t6);}

/* k21582 in k21555 in k21612 in k21544 in parse-thereis in k18948 in k18945 in k18942 in k18939 in k18528 in k18525 in k18522 in k18519 in k18516 in k17994 in k17991 in k17468 in k17465 in k17462 in k17459 in k17456 in k17453 in k17450 in k17447 in k17444 in k17441 in k17438 in k17435 in k17432 in k17429 in k17426 in k17423 in k17420 in k17417 in k17414 in k17411 in k17408 in k17269 in k17266 in k17263 in k17260 in k17204 in k17201 in k17198 in k17195 in k17192 in k17189 in k17186 in k17183 in k15938 in k15869 in k15676 in k15673 in k15568 in k15517 in k7924 in k7921 in k5905 in k5612 in k5609 in k5605 in k5314 in k5311 in k5308 in k5305 */
static void C_ccall f_21584(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[33],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_21584,2,t0,t1);}
t2=(C_word)C_a_i_list(&a,3,lf[20],((C_word*)((C_word*)t0)[4])[1],t1);
t3=(C_word)C_a_i_list(&a,1,t2);
t4=(C_word)C_a_i_list(&a,1,((C_word*)((C_word*)t0)[3])[1]);
C_trace("ChickenBridge.scm: 370  make-loop-clause");
f_19060(((C_word*)t0)[2],(C_word)C_a_i_list(&a,6,lf[393],lf[545],lf[398],t3,lf[401],t4));}

/* k21566 in k21555 in k21612 in k21544 in parse-thereis in k18948 in k18945 in k18942 in k18939 in k18528 in k18525 in k18522 in k18519 in k18516 in k17994 in k17991 in k17468 in k17465 in k17462 in k17459 in k17456 in k17453 in k17450 in k17447 in k17444 in k17441 in k17438 in k17435 in k17432 in k17429 in k17426 in k17423 in k17420 in k17417 in k17414 in k17411 in k17408 in k17269 in k17266 in k17263 in k17260 in k17204 in k17201 in k17198 in k17195 in k17192 in k17189 in k17186 in k17183 in k15938 in k15869 in k15676 in k15673 in k15568 in k15517 in k7924 in k7921 in k5905 in k5612 in k5609 in k5605 in k5314 in k5311 in k5308 in k5305 */
static void C_ccall f_21568(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 370  values");
C_values(4,0,((C_word*)t0)[3],t1,((C_word*)((C_word*)t0)[2])[1]);}

/* parse-while-until in k18948 in k18945 in k18942 in k18939 in k18528 in k18525 in k18522 in k18519 in k18516 in k17994 in k17991 in k17468 in k17465 in k17462 in k17459 in k17456 in k17453 in k17450 in k17447 in k17444 in k17441 in k17438 in k17435 in k17432 in k17429 in k17426 in k17423 in k17420 in k17417 in k17414 in k17411 in k17408 in k17269 in k17266 in k17263 in k17260 in k17204 in k17201 in k17198 in k17195 in k17192 in k17189 in k17186 in k17183 in k15938 in k15869 in k15676 in k15673 in k15568 in k15517 in k7924 in k7921 in k5905 in k5612 in k5609 in k5605 in k5314 in k5311 in k5308 in k5305 */
static void C_ccall f_21473(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4){
C_word tmp;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word ab[19],*a=ab;
if(c!=5) C_bad_argc_2(c,5,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr5,(void*)f_21473,5,t0,t1,t2,t3,t4);}
t5=(*a=C_VECTOR_TYPE|1,a[1]=t2,tmp=(C_word)a,a+=2,tmp);
t6=((C_word*)t5)[1];
t7=(C_word)C_i_car(((C_word*)t5)[1]);
t8=(C_word)C_i_cdr(((C_word*)t5)[1]);
t9=C_set_block_item(t5,0,t8);
t10=C_SCHEME_FALSE;
t11=(*a=C_VECTOR_TYPE|1,a[1]=t10,tmp=(C_word)a,a+=2,tmp);
t12=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_21484,a[2]=t7,a[3]=t11,a[4]=t5,a[5]=t1,tmp=(C_word)a,a+=6,tmp);
if(C_truep((C_word)C_i_nullp(((C_word*)t5)[1]))){
C_trace("ChickenBridge.scm: 370  loop-error");
f_19300(t12,t4,t6,(C_word)C_a_i_list(&a,3,lf[542],t7,lf[543]));}
else{
t13=t12;
f_21484(2,t13,C_SCHEME_UNDEFINED);}}

/* k21482 in parse-while-until in k18948 in k18945 in k18942 in k18939 in k18528 in k18525 in k18522 in k18519 in k18516 in k17994 in k17991 in k17468 in k17465 in k17462 in k17459 in k17456 in k17453 in k17450 in k17447 in k17444 in k17441 in k17438 in k17435 in k17432 in k17429 in k17426 in k17423 in k17420 in k17417 in k17414 in k17411 in k17408 in k17269 in k17266 in k17263 in k17260 in k17204 in k17201 in k17198 in k17195 in k17192 in k17189 in k17186 in k17183 in k15938 in k15869 in k15676 in k15673 in k15568 in k15517 in k7924 in k7921 in k5905 in k5612 in k5609 in k5605 in k5314 in k5311 in k5308 in k5305 */
static void C_ccall f_21484(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word t14;
C_word ab[12],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_21484,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_21487,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],tmp=(C_word)a,a+=6,tmp);
t3=(C_word)C_eqp(((C_word*)t0)[2],lf[540]);
if(C_truep(t3)){
t4=(C_word)C_i_car(((C_word*)((C_word*)t0)[4])[1]);
t5=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[4])+1,t5);
t7=C_mutate(((C_word *)((C_word*)t0)[3])+1,t4);
t8=t2;
f_21487(t8,t7);}
else{
t4=(C_word)C_eqp(((C_word*)t0)[2],lf[541]);
if(C_truep(t4)){
t5=(C_word)C_i_car(((C_word*)((C_word*)t0)[4])[1]);
t6=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
t7=C_mutate(((C_word *)((C_word*)t0)[4])+1,t6);
t8=(C_word)C_a_i_list(&a,2,lf[312],t5);
t9=C_mutate(((C_word *)((C_word*)t0)[3])+1,t8);
t10=t2;
f_21487(t10,t9);}
else{
t5=t2;
f_21487(t5,C_SCHEME_UNDEFINED);}}}

/* k21485 in k21482 in parse-while-until in k18948 in k18945 in k18942 in k18939 in k18528 in k18525 in k18522 in k18519 in k18516 in k17994 in k17991 in k17468 in k17465 in k17462 in k17459 in k17456 in k17453 in k17450 in k17447 in k17444 in k17441 in k17438 in k17435 in k17432 in k17429 in k17426 in k17423 in k17420 in k17417 in k17414 in k17411 in k17408 in k17269 in k17266 in k17263 in k17260 in k17204 in k17201 in k17198 in k17195 in k17192 in k17189 in k17186 in k17183 in k15938 in k15869 in k15676 in k15673 in k15568 in k15517 in k7924 in k7921 in k5905 in k5612 in k5609 in k5605 in k5314 in k5311 in k5308 in k5305 */
static void C_fcall f_21487(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[28],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_21487,NULL,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_21494,a[2]=((C_word*)t0)[4],a[3]=((C_word*)t0)[5],tmp=(C_word)a,a+=4,tmp);
t3=(C_word)C_a_i_list(&a,3,lf[20],((C_word*)((C_word*)t0)[3])[1],lf[539]);
t4=(C_word)C_a_i_list(&a,1,t3);
C_trace("ChickenBridge.scm: 370  make-loop-clause");
f_19060(t2,(C_word)C_a_i_list(&a,4,lf[393],((C_word*)t0)[2],lf[398],t4));}

/* k21492 in k21485 in k21482 in parse-while-until in k18948 in k18945 in k18942 in k18939 in k18528 in k18525 in k18522 in k18519 in k18516 in k17994 in k17991 in k17468 in k17465 in k17462 in k17459 in k17456 in k17453 in k17450 in k17447 in k17444 in k17441 in k17438 in k17435 in k17432 in k17429 in k17426 in k17423 in k17420 in k17417 in k17414 in k17411 in k17408 in k17269 in k17266 in k17263 in k17260 in k17204 in k17201 in k17198 in k17195 in k17192 in k17189 in k17186 in k17183 in k15938 in k15869 in k15676 in k15673 in k15568 in k15517 in k7924 in k7921 in k5905 in k5612 in k5609 in k5605 in k5314 in k5311 in k5308 in k5305 */
static void C_ccall f_21494(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 370  values");
C_values(4,0,((C_word*)t0)[3],t1,((C_word*)((C_word*)t0)[2])[1]);}

/* loop-return in k18948 in k18945 in k18942 in k18939 in k18528 in k18525 in k18522 in k18519 in k18516 in k17994 in k17991 in k17468 in k17465 in k17462 in k17459 in k17456 in k17453 in k17450 in k17447 in k17444 in k17441 in k17438 in k17435 in k17432 in k17429 in k17426 in k17423 in k17420 in k17417 in k17414 in k17411 in k17408 in k17269 in k17266 in k17263 in k17260 in k17204 in k17201 in k17198 in k17195 in k17192 in k17189 in k17186 in k17183 in k15938 in k15869 in k15676 in k15673 in k15568 in k15517 in k7924 in k7921 in k5905 in k5612 in k5609 in k5605 in k5314 in k5311 in k5308 in k5305 */
static void C_ccall f_21467(C_word c,C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word ab[6],*a=ab;
if(c!=3) C_bad_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr3,(void*)f_21467,3,t0,t1,t2);}
t3=t1;
((C_proc2)(void*)(*((C_word*)t3+1)))(2,t3,(C_word)C_a_i_list(&a,2,lf[537],t2));}

/* parse-accumulation in k18948 in k18945 in k18942 in k18939 in k18528 in k18525 in k18522 in k18519 in k18516 in k17994 in k17991 in k17468 in k17465 in k17462 in k17459 in k17456 in k17453 in k17450 in k17447 in k17444 in k17441 in k17438 in k17435 in k17432 in k17429 in k17426 in k17423 in k17420 in k17417 in k17414 in k17411 in k17408 in k17269 in k17266 in k17263 in k17260 in k17204 in k17201 in k17198 in k17195 in k17192 in k17189 in k17186 in k17183 in k15938 in k15869 in k15676 in k15673 in k15568 in k15517 in k7924 in k7921 in k5905 in k5612 in k5609 in k5605 in k5314 in k5311 in k5308 in k5305 */
static void C_ccall f_20921(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4){
C_word tmp;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word t14;
C_word t15;
C_word t16;
C_word t17;
C_word t18;
C_word t19;
C_word t20;
C_word t21;
C_word t22;
C_word t23;
C_word t24;
C_word t25;
C_word t26;
C_word t27;
C_word t28;
C_word t29;
C_word t30;
C_word ab[55],*a=ab;
if(c!=5) C_bad_argc_2(c,5,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr5,(void*)f_20921,5,t0,t1,t2,t3,t4);}
t5=(*a=C_VECTOR_TYPE|1,a[1]=t2,tmp=(C_word)a,a+=2,tmp);
t6=((C_word*)t5)[1];
t7=(C_word)C_i_car(((C_word*)t5)[1]);
t8=(C_word)C_i_cdr(((C_word*)t5)[1]);
t9=C_set_block_item(t5,0,t8);
t10=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_20930,a[2]=((C_word)li314),tmp=(C_word)a,a+=3,tmp);
t11=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_20935,a[2]=((C_word)li315),tmp=(C_word)a,a+=3,tmp);
t12=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_20940,a[2]=((C_word)li316),tmp=(C_word)a,a+=3,tmp);
t13=C_SCHEME_FALSE;
t14=(*a=C_VECTOR_TYPE|1,a[1]=t13,tmp=(C_word)a,a+=2,tmp);
t15=C_SCHEME_FALSE;
t16=(*a=C_VECTOR_TYPE|1,a[1]=t15,tmp=(C_word)a,a+=2,tmp);
t17=C_SCHEME_FALSE;
t18=(*a=C_VECTOR_TYPE|1,a[1]=t17,tmp=(C_word)a,a+=2,tmp);
t19=C_SCHEME_FALSE;
t20=(*a=C_VECTOR_TYPE|1,a[1]=t19,tmp=(C_word)a,a+=2,tmp);
t21=C_SCHEME_END_OF_LIST;
t22=(*a=C_VECTOR_TYPE|1,a[1]=t21,tmp=(C_word)a,a+=2,tmp);
t23=C_SCHEME_END_OF_LIST;
t24=(*a=C_VECTOR_TYPE|1,a[1]=t23,tmp=(C_word)a,a+=2,tmp);
t25=C_SCHEME_END_OF_LIST;
t26=(*a=C_VECTOR_TYPE|1,a[1]=t25,tmp=(C_word)a,a+=2,tmp);
t27=C_SCHEME_END_OF_LIST;
t28=(*a=C_VECTOR_TYPE|1,a[1]=t27,tmp=(C_word)a,a+=2,tmp);
t29=(*a=C_CLOSURE_TYPE|18,a[1]=(C_word)f_20952,a[2]=t3,a[3]=t11,a[4]=t6,a[5]=t4,a[6]=t12,a[7]=t10,a[8]=t20,a[9]=t24,a[10]=t26,a[11]=t22,a[12]=t28,a[13]=t7,a[14]=t18,a[15]=t1,a[16]=t16,a[17]=t14,a[18]=t5,tmp=(C_word)a,a+=19,tmp);
if(C_truep((C_word)C_i_nullp(((C_word*)t5)[1]))){
C_trace("ChickenBridge.scm: 370  loop-error");
f_19300(t29,t4,((C_word*)t5)[1],(C_word)C_a_i_list(&a,3,lf[534],t7,lf[535]));}
else{
t30=t29;
f_20952(2,t30,C_SCHEME_UNDEFINED);}}

/* k20950 in parse-accumulation in k18948 in k18945 in k18942 in k18939 in k18528 in k18525 in k18522 in k18519 in k18516 in k17994 in k17991 in k17468 in k17465 in k17462 in k17459 in k17456 in k17453 in k17450 in k17447 in k17444 in k17441 in k17438 in k17435 in k17432 in k17429 in k17426 in k17423 in k17420 in k17417 in k17414 in k17411 in k17408 in k17269 in k17266 in k17263 in k17260 in k17204 in k17201 in k17198 in k17195 in k17192 in k17189 in k17186 in k17183 in k15938 in k15869 in k15676 in k15673 in k15568 in k15517 in k7924 in k7921 in k5905 in k5612 in k5609 in k5605 in k5314 in k5311 in k5308 in k5305 */
static void C_ccall f_20952(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word ab[29],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_20952,2,t0,t1);}
t2=(C_word)C_i_car(((C_word*)((C_word*)t0)[18])[1]);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[18])[1]);
t4=C_mutate(((C_word *)((C_word*)t0)[18])+1,t3);
t5=C_mutate(((C_word *)((C_word*)t0)[17])+1,t2);
t6=(*a=C_CLOSURE_TYPE|18,a[1]=(C_word)f_20963,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],a[7]=((C_word*)t0)[7],a[8]=((C_word*)t0)[8],a[9]=((C_word*)t0)[17],a[10]=((C_word*)t0)[9],a[11]=((C_word*)t0)[10],a[12]=((C_word*)t0)[11],a[13]=((C_word*)t0)[12],a[14]=((C_word*)t0)[13],a[15]=((C_word*)t0)[14],a[16]=((C_word*)t0)[18],a[17]=((C_word*)t0)[15],a[18]=((C_word*)t0)[16],tmp=(C_word)a,a+=19,tmp);
if(C_truep((C_word)C_i_nullp(((C_word*)((C_word*)t0)[18])[1]))){
t7=t6;
f_20963(2,t7,C_SCHEME_UNDEFINED);}
else{
t7=(C_word)C_i_car(((C_word*)((C_word*)t0)[18])[1]);
t8=(C_word)C_eqp(t7,lf[530]);
if(C_truep(t8)){
t9=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_21416,a[2]=((C_word*)t0)[4],a[3]=((C_word*)t0)[5],a[4]=t6,a[5]=((C_word*)t0)[8],a[6]=((C_word*)t0)[18],tmp=(C_word)a,a+=7,tmp);
t10=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[18])[1]);
if(C_truep((C_word)C_i_nullp(t10))){
C_trace("ChickenBridge.scm: 370  loop-error");
f_19300(t9,((C_word*)t0)[5],((C_word*)t0)[4],(C_word)C_a_i_list(&a,1,lf[533]));}
else{
t11=t9;
f_21416(2,t11,C_SCHEME_UNDEFINED);}}
else{
t9=t6;
f_20963(2,t9,C_SCHEME_UNDEFINED);}}}

/* k21414 in k20950 in parse-accumulation in k18948 in k18945 in k18942 in k18939 in k18528 in k18525 in k18522 in k18519 in k18516 in k17994 in k17991 in k17468 in k17465 in k17462 in k17459 in k17456 in k17453 in k17450 in k17447 in k17444 in k17441 in k17438 in k17435 in k17432 in k17429 in k17426 in k17423 in k17420 in k17417 in k17414 in k17411 in k17408 in k17269 in k17266 in k17263 in k17260 in k17204 in k17201 in k17198 in k17195 in k17192 in k17189 in k17186 in k17183 in k15938 in k15869 in k15676 in k15673 in k15568 in k15517 in k7924 in k7921 in k5905 in k5612 in k5609 in k5605 in k5314 in k5311 in k5308 in k5305 */
static void C_ccall f_21416(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_21416,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_21422,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cadr(((C_word*)((C_word*)t0)[6])[1]);
C_trace("ChickenBridge.scm: 370  loop-variable?");
f_19288(t2,t3);}

/* k21420 in k21414 in k20950 in parse-accumulation in k18948 in k18945 in k18942 in k18939 in k18528 in k18525 in k18522 in k18519 in k18516 in k17994 in k17991 in k17468 in k17465 in k17462 in k17459 in k17456 in k17453 in k17450 in k17447 in k17444 in k17441 in k17438 in k17435 in k17432 in k17429 in k17426 in k17423 in k17420 in k17417 in k17414 in k17411 in k17408 in k17269 in k17266 in k17263 in k17260 in k17204 in k17201 in k17198 in k17195 in k17192 in k17189 in k17186 in k17183 in k15938 in k15869 in k15676 in k15673 in k15568 in k15517 in k7924 in k7921 in k5905 in k5612 in k5609 in k5605 in k5314 in k5311 in k5308 in k5305 */
static void C_ccall f_21422(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_21422,2,t0,t1);}
if(C_truep(t1)){
t2=(C_word)C_i_cadr(((C_word*)((C_word*)t0)[6])[1]);
t3=C_mutate(((C_word *)((C_word*)t0)[5])+1,t2);
t4=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[6])[1]);
t5=C_mutate(((C_word *)((C_word*)t0)[6])+1,t4);
t6=((C_word*)t0)[4];
f_20963(2,t6,t5);}
else{
t2=(C_word)C_i_car(((C_word*)((C_word*)t0)[6])[1]);
C_trace("ChickenBridge.scm: 370  loop-error");
f_19300(((C_word*)t0)[4],((C_word*)t0)[3],((C_word*)t0)[2],(C_word)C_a_i_list(&a,3,lf[531],t2,lf[532]));}}

/* k20961 in k20950 in parse-accumulation in k18948 in k18945 in k18942 in k18939 in k18528 in k18525 in k18522 in k18519 in k18516 in k17994 in k17991 in k17468 in k17465 in k17462 in k17459 in k17456 in k17453 in k17450 in k17447 in k17444 in k17441 in k17438 in k17435 in k17432 in k17429 in k17426 in k17423 in k17420 in k17417 in k17414 in k17411 in k17408 in k17269 in k17266 in k17263 in k17260 in k17204 in k17201 in k17198 in k17195 in k17192 in k17189 in k17186 in k17183 in k15938 in k15869 in k15676 in k15673 in k15568 in k15517 in k7924 in k7921 in k5905 in k5612 in k5609 in k5605 in k5314 in k5311 in k5308 in k5305 */
static void C_ccall f_20963(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word ab[28],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_20963,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|17,a[1]=(C_word)f_20967,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],a[7]=((C_word*)t0)[8],a[8]=((C_word*)t0)[9],a[9]=((C_word*)t0)[10],a[10]=((C_word*)t0)[11],a[11]=((C_word*)t0)[12],a[12]=((C_word*)t0)[13],a[13]=((C_word*)t0)[14],a[14]=((C_word*)t0)[15],a[15]=((C_word*)t0)[16],a[16]=((C_word*)t0)[17],a[17]=((C_word*)t0)[18],tmp=(C_word)a,a+=18,tmp);
t3=((C_word*)((C_word*)t0)[8])[1];
t4=((C_word*)t0)[2];
t5=(*a=C_VECTOR_TYPE|1,a[1]=t4,tmp=(C_word)a,a+=2,tmp);
t6=C_SCHEME_UNDEFINED;
t7=(*a=C_VECTOR_TYPE|1,a[1]=t6,tmp=(C_word)a,a+=2,tmp);
t8=C_set_block_item(t7,0,(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_20848,a[2]=t3,a[3]=t7,a[4]=t5,a[5]=((C_word)li318),tmp=(C_word)a,a+=6,tmp));
t9=((C_word*)t7)[1];
f_20848(t9,t2,C_SCHEME_FALSE);}

/* do3558 in k20961 in k20950 in parse-accumulation in k18948 in k18945 in k18942 in k18939 in k18528 in k18525 in k18522 in k18519 in k18516 in k17994 in k17991 in k17468 in k17465 in k17462 in k17459 in k17456 in k17453 in k17450 in k17447 in k17444 in k17441 in k17438 in k17435 in k17432 in k17429 in k17426 in k17423 in k17420 in k17417 in k17414 in k17411 in k17408 in k17269 in k17266 in k17263 in k17260 in k17204 in k17201 in k17198 in k17195 in k17192 in k17189 in k17186 in k17183 in k15938 in k15869 in k15676 in k15673 in k15568 in k15517 in k7924 in k7921 in k5905 in k5612 in k5609 in k5605 in k5314 in k5311 in k5308 in k5305 */
static void C_fcall f_20848(C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word ab[12],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_20848,NULL,3,t0,t1,t2);}
t3=(*a=C_VECTOR_TYPE|1,a[1]=t2,tmp=(C_word)a,a+=2,tmp);
t4=(C_word)C_i_nullp(((C_word*)((C_word*)t0)[4])[1]);
t5=(C_truep(t4)?t4:((C_word*)t3)[1]);
if(C_truep(t5)){
t6=t1;
((C_proc2)(void*)(*((C_word*)t6+1)))(2,t6,((C_word*)t3)[1]);}
else{
t6=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_20862,a[2]=t1,a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=t3,tmp=(C_word)a,a+=6,tmp);
t7=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_20873,a[2]=t6,a[3]=((C_word*)t0)[2],tmp=(C_word)a,a+=4,tmp);
t8=(C_word)C_i_car(((C_word*)((C_word*)t0)[4])[1]);
C_trace("ChickenBridge.scm: 370  loop-collectors");
t9=C_retrieve2(lf[384],"loop-collectors");
f_18976(3,t9,t7,t8);}}

/* k20871 in do3558 in k20961 in k20950 in parse-accumulation in k18948 in k18945 in k18942 in k18939 in k18528 in k18525 in k18522 in k18519 in k18516 in k17994 in k17991 in k17468 in k17465 in k17462 in k17459 in k17456 in k17453 in k17450 in k17447 in k17444 in k17441 in k17438 in k17435 in k17432 in k17429 in k17426 in k17423 in k17420 in k17417 in k17414 in k17411 in k17408 in k17269 in k17266 in k17263 in k17260 in k17204 in k17201 in k17198 in k17195 in k17192 in k17189 in k17186 in k17183 in k15938 in k15869 in k15676 in k15673 in k15568 in k15517 in k7924 in k7921 in k5905 in k5612 in k5609 in k5605 in k5314 in k5311 in k5308 in k5305 */
static void C_ccall f_20873(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word ab[10],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_20873,2,t0,t1);}
t2=t1;
t3=(*a=C_VECTOR_TYPE|1,a[1]=t2,tmp=(C_word)a,a+=2,tmp);
t4=C_SCHEME_UNDEFINED;
t5=(*a=C_VECTOR_TYPE|1,a[1]=t4,tmp=(C_word)a,a+=2,tmp);
t6=C_set_block_item(t5,0,(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_20808,a[2]=((C_word*)t0)[3],a[3]=t5,a[4]=t3,a[5]=((C_word)li317),tmp=(C_word)a,a+=6,tmp));
t7=((C_word*)t5)[1];
f_20808(t7,((C_word*)t0)[2],C_SCHEME_FALSE);}

/* do3550 in k20871 in do3558 in k20961 in k20950 in parse-accumulation in k18948 in k18945 in k18942 in k18939 in k18528 in k18525 in k18522 in k18519 in k18516 in k17994 in k17991 in k17468 in k17465 in k17462 in k17459 in k17456 in k17453 in k17450 in k17447 in k17444 in k17441 in k17438 in k17435 in k17432 in k17429 in k17426 in k17423 in k17420 in k17417 in k17414 in k17411 in k17408 in k17269 in k17266 in k17263 in k17260 in k17204 in k17201 in k17198 in k17195 in k17192 in k17189 in k17186 in k17183 in k15938 in k15869 in k15676 in k15673 in k15568 in k15517 in k7924 in k7921 in k5905 in k5612 in k5609 in k5605 in k5314 in k5311 in k5308 in k5305 */
static void C_fcall f_20808(C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word ab[8],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_20808,NULL,3,t0,t1,t2);}
t3=(*a=C_VECTOR_TYPE|1,a[1]=t2,tmp=(C_word)a,a+=2,tmp);
t4=(C_word)C_i_nullp(((C_word*)((C_word*)t0)[4])[1]);
t5=(C_truep(t4)?t4:((C_word*)t3)[1]);
if(C_truep(t5)){
t6=t1;
((C_proc2)(void*)(*((C_word*)t6+1)))(2,t6,((C_word*)t3)[1]);}
else{
t6=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_20821,a[2]=t3,a[3]=t1,a[4]=((C_word*)t0)[3],a[5]=((C_word*)t0)[4],tmp=(C_word)a,a+=6,tmp);
t7=(C_word)C_i_car(((C_word*)((C_word*)t0)[4])[1]);
t8=(C_word)C_i_car(t7);
t9=(C_word)C_eqp(((C_word*)t0)[2],t8);
if(C_truep(t9)){
t10=(C_word)C_i_car(((C_word*)((C_word*)t0)[4])[1]);
t11=C_set_block_item(t3,0,t10);
t12=t6;
f_20821(t12,t11);}
else{
t10=t6;
f_20821(t10,C_SCHEME_UNDEFINED);}}}

/* k20819 in do3550 in k20871 in do3558 in k20961 in k20950 in parse-accumulation in k18948 in k18945 in k18942 in k18939 in k18528 in k18525 in k18522 in k18519 in k18516 in k17994 in k17991 in k17468 in k17465 in k17462 in k17459 in k17456 in k17453 in k17450 in k17447 in k17444 in k17441 in k17438 in k17435 in k17432 in k17429 in k17426 in k17423 in k17420 in k17417 in k17414 in k17411 in k17408 in k17269 in k17266 in k17263 in k17260 in k17204 in k17201 in k17198 in k17195 in k17192 in k17189 in k17186 in k17183 in k15938 in k15869 in k15676 in k15673 in k15568 in k15517 in k7924 in k7921 in k5905 in k5612 in k5609 in k5605 in k5314 in k5311 in k5308 in k5305 */
static void C_fcall f_20821(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word *a;
t2=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[5])[1]);
t3=C_mutate(((C_word *)((C_word*)t0)[5])+1,t2);
t4=((C_word*)((C_word*)t0)[4])[1];
f_20808(t4,((C_word*)t0)[3],((C_word*)((C_word*)t0)[2])[1]);}

/* k20860 in do3558 in k20961 in k20950 in parse-accumulation in k18948 in k18945 in k18942 in k18939 in k18528 in k18525 in k18522 in k18519 in k18516 in k17994 in k17991 in k17468 in k17465 in k17462 in k17459 in k17456 in k17453 in k17450 in k17447 in k17444 in k17441 in k17438 in k17435 in k17432 in k17429 in k17426 in k17423 in k17420 in k17417 in k17414 in k17411 in k17408 in k17269 in k17266 in k17263 in k17260 in k17204 in k17201 in k17198 in k17195 in k17192 in k17189 in k17186 in k17183 in k15938 in k15869 in k15676 in k15673 in k15568 in k15517 in k7924 in k7921 in k5905 in k5612 in k5609 in k5605 in k5314 in k5311 in k5308 in k5305 */
static void C_ccall f_20862(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[5])+1,t1);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
t4=C_mutate(((C_word *)((C_word*)t0)[4])+1,t3);
t5=((C_word*)((C_word*)t0)[3])[1];
f_20848(t5,((C_word*)t0)[2],((C_word*)((C_word*)t0)[5])[1]);}

/* k20965 in k20961 in k20950 in parse-accumulation in k18948 in k18945 in k18942 in k18939 in k18528 in k18525 in k18522 in k18519 in k18516 in k17994 in k17991 in k17468 in k17465 in k17462 in k17459 in k17456 in k17453 in k17450 in k17447 in k17444 in k17441 in k17438 in k17435 in k17432 in k17429 in k17426 in k17423 in k17420 in k17417 in k17414 in k17411 in k17408 in k17269 in k17266 in k17263 in k17260 in k17204 in k17201 in k17198 in k17195 in k17192 in k17189 in k17186 in k17183 in k15938 in k15869 in k15676 in k15673 in k15568 in k15517 in k7924 in k7921 in k5905 in k5612 in k5609 in k5605 in k5314 in k5311 in k5308 in k5305 */
static void C_ccall f_20967(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word ab[27],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_20967,2,t0,t1);}
t2=C_mutate(((C_word *)((C_word*)t0)[17])+1,t1);
t3=(*a=C_CLOSURE_TYPE|14,a[1]=(C_word)f_20970,a[2]=((C_word*)t0)[5],a[3]=((C_word*)t0)[6],a[4]=((C_word*)t0)[7],a[5]=((C_word*)t0)[8],a[6]=((C_word*)t0)[9],a[7]=((C_word*)t0)[10],a[8]=((C_word*)t0)[11],a[9]=((C_word*)t0)[12],a[10]=((C_word*)t0)[13],a[11]=((C_word*)t0)[17],a[12]=((C_word*)t0)[14],a[13]=((C_word*)t0)[15],a[14]=((C_word*)t0)[16],tmp=(C_word)a,a+=15,tmp);
t4=((C_word*)((C_word*)t0)[17])[1];
if(C_truep(t4)){
t5=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_21400,a[2]=((C_word*)t0)[17],a[3]=((C_word*)t0)[2],a[4]=((C_word*)t0)[13],a[5]=((C_word*)t0)[3],a[6]=((C_word*)t0)[4],a[7]=t3,tmp=(C_word)a,a+=8,tmp);
t6=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_21404,a[2]=t5,a[3]=((C_word*)t0)[13],tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 370  collector-type");
f_20935(t6,((C_word*)((C_word*)t0)[17])[1]);}
else{
t5=C_set_block_item(((C_word*)t0)[14],0,C_SCHEME_TRUE);
t6=t3;
f_20970(2,t6,t5);}}

/* k21402 in k20965 in k20961 in k20950 in parse-accumulation in k18948 in k18945 in k18942 in k18939 in k18528 in k18525 in k18522 in k18519 in k18516 in k17994 in k17991 in k17468 in k17465 in k17462 in k17459 in k17456 in k17453 in k17450 in k17447 in k17444 in k17441 in k17438 in k17435 in k17432 in k17429 in k17426 in k17423 in k17420 in k17417 in k17414 in k17411 in k17408 in k17269 in k17266 in k17263 in k17260 in k17204 in k17201 in k17198 in k17195 in k17192 in k17189 in k17186 in k17183 in k15938 in k15869 in k15676 in k15673 in k15568 in k15517 in k7924 in k7921 in k5905 in k5612 in k5609 in k5605 in k5314 in k5311 in k5308 in k5305 */
static void C_ccall f_21404(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word *a;
t2=lf[527];
t3=lf[528];
t4=lf[529];
t5=(C_word)C_eqp(((C_word*)t0)[3],t1);
if(C_truep(t5)){
t6=((C_word*)t0)[2];
f_21400(t6,t5);}
else{
t6=(C_word)C_i_member(((C_word*)t0)[3],t2);
t7=(C_truep(t6)?(C_word)C_i_member(t1,t2):C_SCHEME_FALSE);
if(C_truep(t7)){
t8=((C_word*)t0)[2];
f_21400(t8,t7);}
else{
t8=(C_word)C_i_member(((C_word*)t0)[3],t3);
t9=(C_truep(t8)?(C_word)C_i_member(t1,t3):C_SCHEME_FALSE);
if(C_truep(t9)){
t10=((C_word*)t0)[2];
f_21400(t10,t9);}
else{
t10=(C_word)C_i_member(((C_word*)t0)[3],t4);
t11=((C_word*)t0)[2];
f_21400(t11,(C_truep(t10)?(C_word)C_i_member(t1,t4):C_SCHEME_FALSE));}}}}

/* k21398 in k20965 in k20961 in k20950 in parse-accumulation in k18948 in k18945 in k18942 in k18939 in k18528 in k18525 in k18522 in k18519 in k18516 in k17994 in k17991 in k17468 in k17465 in k17462 in k17459 in k17456 in k17453 in k17450 in k17447 in k17444 in k17441 in k17438 in k17435 in k17432 in k17429 in k17426 in k17423 in k17420 in k17417 in k17414 in k17411 in k17408 in k17269 in k17266 in k17263 in k17260 in k17204 in k17201 in k17198 in k17195 in k17192 in k17189 in k17186 in k17183 in k15938 in k15869 in k15676 in k15673 in k15568 in k15517 in k7924 in k7921 in k5905 in k5612 in k5609 in k5605 in k5314 in k5311 in k5308 in k5305 */
static void C_fcall f_21400(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[6],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_21400,NULL,2,t0,t1);}
if(C_truep(t1)){
t2=((C_word*)t0)[7];
f_20970(2,t2,C_SCHEME_UNDEFINED);}
else{
t2=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_21396,a[2]=((C_word*)t0)[4],a[3]=((C_word*)t0)[5],a[4]=((C_word*)t0)[6],a[5]=((C_word*)t0)[7],tmp=(C_word)a,a+=6,tmp);
C_trace("ChickenBridge.scm: 370  collector-type");
f_20935(t2,((C_word*)((C_word*)t0)[2])[1]);}}

/* k21394 in k21398 in k20965 in k20961 in k20950 in parse-accumulation in k18948 in k18945 in k18942 in k18939 in k18528 in k18525 in k18522 in k18519 in k18516 in k17994 in k17991 in k17468 in k17465 in k17462 in k17459 in k17456 in k17453 in k17450 in k17447 in k17444 in k17441 in k17438 in k17435 in k17432 in k17429 in k17426 in k17423 in k17420 in k17417 in k17414 in k17411 in k17408 in k17269 in k17266 in k17263 in k17260 in k17204 in k17201 in k17198 in k17195 in k17192 in k17189 in k17186 in k17183 in k15938 in k15869 in k15676 in k15673 in k15568 in k15517 in k7924 in k7921 in k5905 in k5612 in k5609 in k5605 in k5314 in k5311 in k5308 in k5305 */
static void C_ccall f_21396(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word ab[15],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_21396,2,t0,t1);}
C_trace("ChickenBridge.scm: 370  loop-error");
f_19300(((C_word*)t0)[5],((C_word*)t0)[4],((C_word*)t0)[3],(C_word)C_a_i_list(&a,5,lf[524],t1,lf[525],((C_word*)t0)[2],lf[526]));}

/* k20968 in k20965 in k20961 in k20950 in parse-accumulation in k18948 in k18945 in k18942 in k18939 in k18528 in k18525 in k18522 in k18519 in k18516 in k17994 in k17991 in k17468 in k17465 in k17462 in k17459 in k17456 in k17453 in k17450 in k17447 in k17444 in k17441 in k17438 in k17435 in k17432 in k17429 in k17426 in k17423 in k17420 in k17417 in k17414 in k17411 in k17408 in k17269 in k17266 in k17263 in k17260 in k17204 in k17201 in k17198 in k17195 in k17192 in k17189 in k17186 in k17183 in k15938 in k15869 in k15676 in k15673 in k15568 in k15517 in k7924 in k7921 in k5905 in k5612 in k5609 in k5605 in k5314 in k5311 in k5308 in k5305 */
static void C_ccall f_20970(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word t14;
C_word t15;
C_word t16;
C_word t17;
C_word ab[61],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_20970,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|10,a[1]=(C_word)f_20973,a[2]=((C_word*)t0)[6],a[3]=((C_word*)t0)[7],a[4]=((C_word*)t0)[8],a[5]=((C_word*)t0)[9],a[6]=((C_word*)t0)[10],a[7]=((C_word*)t0)[11],a[8]=((C_word*)t0)[12],a[9]=((C_word*)t0)[13],a[10]=((C_word*)t0)[14],tmp=(C_word)a,a+=11,tmp);
t3=(C_word)C_eqp(((C_word*)t0)[10],lf[508]);
t4=(C_truep(t3)?t3:(C_word)C_eqp(((C_word*)t0)[10],lf[509]));
if(C_truep(t4)){
t5=C_SCHEME_FALSE;
t6=(*a=C_VECTOR_TYPE|1,a[1]=t5,tmp=(C_word)a,a+=2,tmp);
t7=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_21016,a[2]=t2,a[3]=((C_word*)t0)[8],a[4]=((C_word*)t0)[5],a[5]=t6,a[6]=((C_word*)t0)[10],tmp=(C_word)a,a+=7,tmp);
if(C_truep(((C_word*)((C_word*)t0)[12])[1])){
t8=((C_word*)((C_word*)t0)[4])[1];
t9=(*a=C_CLOSURE_TYPE|9,a[1]=(C_word)f_21054,a[2]=((C_word*)t0)[10],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[9],a[5]=t7,a[6]=((C_word*)t0)[4],a[7]=((C_word*)t0)[11],a[8]=((C_word*)t0)[6],a[9]=t6,tmp=(C_word)a,a+=10,tmp);
if(C_truep(t8)){
t10=t9;
f_21054(2,t10,t8);}
else{
C_trace("ChickenBridge.scm: 370  gensym");
t10=C_retrieve(lf[26]);
((C_proc3)C_retrieve_proc(t10))(3,t10,t9,lf[510]);}}
else{
t8=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_21083,a[2]=t7,a[3]=t6,tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 370  collector-acc");
f_20940(t8,((C_word*)((C_word*)t0)[11])[1]);}}
else{
t5=(C_word)C_eqp(((C_word*)t0)[10],lf[511]);
t6=(C_truep(t5)?t5:(C_word)C_eqp(((C_word*)t0)[10],lf[512]));
if(C_truep(t6)){
t7=(*a=C_CLOSURE_TYPE|12,a[1]=(C_word)f_21095,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[9],a[5]=((C_word*)t0)[11],a[6]=((C_word*)t0)[4],a[7]=((C_word*)t0)[12],a[8]=t2,a[9]=((C_word*)t0)[8],a[10]=((C_word*)t0)[5],a[11]=((C_word*)t0)[6],a[12]=((C_word*)t0)[10],tmp=(C_word)a,a+=13,tmp);
C_trace("ChickenBridge.scm: 370  gensym");
t8=C_retrieve(lf[26]);
((C_proc3)C_retrieve_proc(t8))(3,t8,t7,lf[514]);}
else{
t7=(C_word)C_eqp(((C_word*)t0)[10],lf[18]);
t8=(*a=C_CLOSURE_TYPE|13,a[1]=(C_word)f_21190,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[9],a[5]=((C_word*)t0)[11],a[6]=((C_word*)t0)[7],a[7]=((C_word*)t0)[6],a[8]=((C_word*)t0)[12],a[9]=((C_word*)t0)[5],a[10]=((C_word*)t0)[10],a[11]=t2,a[12]=((C_word*)t0)[8],a[13]=((C_word*)t0)[4],tmp=(C_word)a,a+=14,tmp);
if(C_truep(t7)){
t9=t8;
f_21190(t9,t7);}
else{
t9=(C_word)C_eqp(((C_word*)t0)[10],lf[518]);
t10=t8;
f_21190(t10,(C_truep(t9)?t9:(C_word)C_eqp(((C_word*)t0)[10],lf[523])));}}}}

/* k21188 in k20968 in k20965 in k20961 in k20950 in parse-accumulation in k18948 in k18945 in k18942 in k18939 in k18528 in k18525 in k18522 in k18519 in k18516 in k17994 in k17991 in k17468 in k17465 in k17462 in k17459 in k17456 in k17453 in k17450 in k17447 in k17444 in k17441 in k17438 in k17435 in k17432 in k17429 in k17426 in k17423 in k17420 in k17417 in k17414 in k17411 in k17408 in k17269 in k17266 in k17263 in k17260 in k17204 in k17201 in k17198 in k17195 in k17192 in k17189 in k17186 in k17183 in k15938 in k15869 in k15676 in k15673 in k15568 in k15517 in k7924 in k7921 in k5905 in k5612 in k5609 in k5605 in k5314 in k5311 in k5308 in k5305 */
static void C_fcall f_21190(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word ab[35],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_21190,NULL,2,t0,t1);}
if(C_truep(t1)){
t2=C_SCHEME_FALSE;
t3=(*a=C_VECTOR_TYPE|1,a[1]=t2,tmp=(C_word)a,a+=2,tmp);
t4=C_SCHEME_FALSE;
t5=(*a=C_VECTOR_TYPE|1,a[1]=t4,tmp=(C_word)a,a+=2,tmp);
t6=(*a=C_CLOSURE_TYPE|8,a[1]=(C_word)f_21193,a[2]=t5,a[3]=((C_word*)t0)[9],a[4]=((C_word*)t0)[10],a[5]=((C_word*)t0)[11],a[6]=((C_word*)t0)[12],a[7]=t3,a[8]=((C_word*)t0)[13],tmp=(C_word)a,a+=9,tmp);
t7=((C_word*)((C_word*)t0)[8])[1];
if(C_truep(t7)){
t8=(*a=C_CLOSURE_TYPE|11,a[1]=(C_word)f_21306,a[2]=((C_word*)t0)[10],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=t6,a[6]=((C_word*)t0)[13],a[7]=((C_word*)t0)[5],a[8]=((C_word*)t0)[6],a[9]=((C_word*)t0)[7],a[10]=t3,a[11]=t5,tmp=(C_word)a,a+=12,tmp);
if(C_truep(((C_word*)((C_word*)t0)[13])[1])){
t9=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_21364,a[2]=t8,a[3]=((C_word*)t0)[7],tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 370  make-binding");
f_19294(t9,((C_word*)((C_word*)t0)[13])[1],lf[522]);}
else{
t9=t8;
f_21306(t9,C_SCHEME_UNDEFINED);}}
else{
t8=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_21299,a[2]=t6,a[3]=t3,a[4]=((C_word*)t0)[5],a[5]=t5,tmp=(C_word)a,a+=6,tmp);
C_trace("ChickenBridge.scm: 370  collector-acc");
f_20940(t8,((C_word*)((C_word*)t0)[5])[1]);}}
else{
t2=((C_word*)t0)[11];
f_20973(t2,C_SCHEME_UNDEFINED);}}

/* k21297 in k21188 in k20968 in k20965 in k20961 in k20950 in parse-accumulation in k18948 in k18945 in k18942 in k18939 in k18528 in k18525 in k18522 in k18519 in k18516 in k17994 in k17991 in k17468 in k17465 in k17462 in k17459 in k17456 in k17453 in k17450 in k17447 in k17444 in k17441 in k17438 in k17435 in k17432 in k17429 in k17426 in k17423 in k17420 in k17417 in k17414 in k17411 in k17408 in k17269 in k17266 in k17263 in k17260 in k17204 in k17201 in k17198 in k17195 in k17192 in k17189 in k17186 in k17183 in k15938 in k15869 in k15676 in k15673 in k15568 in k15517 in k7924 in k7921 in k5905 in k5612 in k5609 in k5605 in k5314 in k5311 in k5308 in k5305 */
static void C_ccall f_21299(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[5])+1,t1);
t3=((C_word*)((C_word*)t0)[4])[1];
t4=(C_word)C_i_cadddr(t3);
t5=C_mutate(((C_word *)((C_word*)t0)[3])+1,t4);
t6=((C_word*)t0)[2];
f_21193(t6,t5);}

/* k21362 in k21188 in k20968 in k20965 in k20961 in k20950 in parse-accumulation in k18948 in k18945 in k18942 in k18939 in k18528 in k18525 in k18522 in k18519 in k18516 in k17994 in k17991 in k17468 in k17465 in k17462 in k17459 in k17456 in k17453 in k17450 in k17447 in k17444 in k17441 in k17438 in k17435 in k17432 in k17429 in k17426 in k17423 in k17420 in k17417 in k17414 in k17411 in k17408 in k17269 in k17266 in k17263 in k17260 in k17204 in k17201 in k17198 in k17195 in k17192 in k17189 in k17186 in k17183 in k15938 in k15869 in k15676 in k15673 in k15568 in k15517 in k7924 in k7921 in k5905 in k5612 in k5609 in k5605 in k5314 in k5311 in k5308 in k5305 */
static void C_ccall f_21364(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[3],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_21364,2,t0,t1);}
t2=(C_word)C_a_i_cons(&a,2,t1,((C_word*)((C_word*)t0)[3])[1]);
t3=C_mutate(((C_word *)((C_word*)t0)[3])+1,t2);
t4=((C_word*)t0)[2];
f_21306(t4,((C_word*)((C_word*)t0)[3])[1]);}

/* k21304 in k21188 in k20968 in k20965 in k20961 in k20950 in parse-accumulation in k18948 in k18945 in k18942 in k18939 in k18528 in k18525 in k18522 in k18519 in k18516 in k17994 in k17991 in k17468 in k17465 in k17462 in k17459 in k17456 in k17453 in k17450 in k17447 in k17444 in k17441 in k17438 in k17435 in k17432 in k17429 in k17426 in k17423 in k17420 in k17417 in k17414 in k17411 in k17408 in k17269 in k17266 in k17263 in k17260 in k17204 in k17201 in k17198 in k17195 in k17192 in k17189 in k17186 in k17183 in k15938 in k15869 in k15676 in k15673 in k15568 in k15517 in k7924 in k7921 in k5905 in k5612 in k5609 in k5605 in k5314 in k5311 in k5308 in k5305 */
static void C_fcall f_21306(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[12],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_21306,NULL,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|11,a[1]=(C_word)f_21310,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],a[7]=((C_word*)t0)[7],a[8]=((C_word*)t0)[8],a[9]=((C_word*)t0)[9],a[10]=((C_word*)t0)[10],a[11]=((C_word*)t0)[11],tmp=(C_word)a,a+=12,tmp);
C_trace("ChickenBridge.scm: 370  gensym");
t3=C_retrieve(lf[26]);
((C_proc3)C_retrieve_proc(t3))(3,t3,t2,lf[521]);}

/* k21308 in k21304 in k21188 in k20968 in k20965 in k20961 in k20950 in parse-accumulation in k18948 in k18945 in k18942 in k18939 in k18528 in k18525 in k18522 in k18519 in k18516 in k17994 in k17991 in k17468 in k17465 in k17462 in k17459 in k17456 in k17453 in k17450 in k17447 in k17444 in k17441 in k17438 in k17435 in k17432 in k17429 in k17426 in k17423 in k17420 in k17417 in k17414 in k17411 in k17408 in k17269 in k17266 in k17263 in k17260 in k17204 in k17201 in k17198 in k17195 in k17192 in k17189 in k17186 in k17183 in k15938 in k15869 in k15676 in k15673 in k15568 in k15517 in k7924 in k7921 in k5905 in k5612 in k5609 in k5605 in k5314 in k5311 in k5308 in k5305 */
static void C_ccall f_21310(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[12],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_21310,2,t0,t1);}
t2=C_mutate(((C_word *)((C_word*)t0)[11])+1,t1);
t3=(*a=C_CLOSURE_TYPE|11,a[1]=(C_word)f_21314,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],a[7]=((C_word*)t0)[7],a[8]=((C_word*)t0)[8],a[9]=((C_word*)t0)[11],a[10]=((C_word*)t0)[9],a[11]=((C_word*)t0)[10],tmp=(C_word)a,a+=12,tmp);
C_trace("ChickenBridge.scm: 370  gensym");
t4=C_retrieve(lf[26]);
((C_proc3)C_retrieve_proc(t4))(3,t4,t3,lf[520]);}

/* k21312 in k21308 in k21304 in k21188 in k20968 in k20965 in k20961 in k20950 in parse-accumulation in k18948 in k18945 in k18942 in k18939 in k18528 in k18525 in k18522 in k18519 in k18516 in k17994 in k17991 in k17468 in k17465 in k17462 in k17459 in k17456 in k17453 in k17450 in k17447 in k17444 in k17441 in k17438 in k17435 in k17432 in k17429 in k17426 in k17423 in k17420 in k17417 in k17414 in k17411 in k17408 in k17269 in k17266 in k17263 in k17260 in k17204 in k17201 in k17198 in k17195 in k17192 in k17189 in k17186 in k17183 in k15938 in k15869 in k15676 in k15673 in k15568 in k15517 in k7924 in k7921 in k5905 in k5612 in k5609 in k5605 in k5314 in k5311 in k5308 in k5305 */
static void C_ccall f_21314(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[12],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_21314,2,t0,t1);}
t2=C_mutate(((C_word *)((C_word*)t0)[11])+1,t1);
t3=(*a=C_CLOSURE_TYPE|11,a[1]=(C_word)f_21356,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],a[7]=((C_word*)t0)[7],a[8]=((C_word*)t0)[8],a[9]=((C_word*)t0)[11],a[10]=((C_word*)t0)[9],a[11]=((C_word*)t0)[10],tmp=(C_word)a,a+=12,tmp);
C_trace("ChickenBridge.scm: 370  make-binding");
f_19294(t3,((C_word*)((C_word*)t0)[11])[1],lf[519]);}

/* k21354 in k21312 in k21308 in k21304 in k21188 in k20968 in k20965 in k20961 in k20950 in parse-accumulation in k18948 in k18945 in k18942 in k18939 in k18528 in k18525 in k18522 in k18519 in k18516 in k17994 in k17991 in k17468 in k17465 in k17462 in k17459 in k17456 in k17453 in k17450 in k17447 in k17444 in k17441 in k17438 in k17435 in k17432 in k17429 in k17426 in k17423 in k17420 in k17417 in k17414 in k17411 in k17408 in k17269 in k17266 in k17263 in k17260 in k17204 in k17201 in k17198 in k17195 in k17192 in k17189 in k17186 in k17183 in k15938 in k15869 in k15676 in k15673 in k15568 in k15517 in k7924 in k7921 in k5905 in k5612 in k5609 in k5605 in k5314 in k5311 in k5308 in k5305 */
static void C_ccall f_21356(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[15],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_21356,2,t0,t1);}
t2=(C_word)C_a_i_cons(&a,2,t1,((C_word*)((C_word*)t0)[11])[1]);
t3=C_mutate(((C_word *)((C_word*)t0)[11])+1,t2);
t4=(*a=C_CLOSURE_TYPE|11,a[1]=(C_word)f_21352,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],a[7]=((C_word*)t0)[7],a[8]=((C_word*)t0)[8],a[9]=((C_word*)t0)[9],a[10]=((C_word*)t0)[10],a[11]=((C_word*)t0)[11],tmp=(C_word)a,a+=12,tmp);
C_trace("ChickenBridge.scm: 370  make-binding");
f_19294(t4,((C_word*)((C_word*)t0)[10])[1],C_SCHEME_FALSE);}

/* k21350 in k21354 in k21312 in k21308 in k21304 in k21188 in k20968 in k20965 in k20961 in k20950 in parse-accumulation in k18948 in k18945 in k18942 in k18939 in k18528 in k18525 in k18522 in k18519 in k18516 in k17994 in k17991 in k17468 in k17465 in k17462 in k17459 in k17456 in k17453 in k17450 in k17447 in k17444 in k17441 in k17438 in k17435 in k17432 in k17429 in k17426 in k17423 in k17420 in k17417 in k17414 in k17411 in k17408 in k17269 in k17266 in k17263 in k17260 in k17204 in k17201 in k17198 in k17195 in k17192 in k17189 in k17186 in k17183 in k15938 in k15869 in k15676 in k15673 in k15568 in k15517 in k7924 in k7921 in k5905 in k5612 in k5609 in k5605 in k5314 in k5311 in k5308 in k5305 */
static void C_ccall f_21352(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word ab[22],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_21352,2,t0,t1);}
t2=(C_word)C_a_i_cons(&a,2,t1,((C_word*)((C_word*)t0)[11])[1]);
t3=C_mutate(((C_word *)((C_word*)t0)[11])+1,t2);
t4=(C_word)C_a_i_list(&a,3,lf[12],((C_word*)((C_word*)t0)[10])[1],((C_word*)((C_word*)t0)[9])[1]);
t5=(C_word)C_a_i_cons(&a,2,t4,((C_word*)((C_word*)t0)[8])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[8])+1,t5);
t7=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_21330,a[2]=((C_word*)t0)[4],a[3]=((C_word*)t0)[9],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
C_trace("ChickenBridge.scm: 370  make-collector");
f_20930(t7,((C_word*)((C_word*)t0)[6])[1],((C_word*)t0)[2],((C_word*)((C_word*)t0)[10])[1],((C_word*)((C_word*)t0)[9])[1]);}

/* k21328 in k21350 in k21354 in k21312 in k21308 in k21304 in k21188 in k20968 in k20965 in k20961 in k20950 in parse-accumulation in k18948 in k18945 in k18942 in k18939 in k18528 in k18525 in k18522 in k18519 in k18516 in k17994 in k17991 in k17468 in k17465 in k17462 in k17459 in k17456 in k17453 in k17450 in k17447 in k17444 in k17441 in k17438 in k17435 in k17432 in k17429 in k17426 in k17423 in k17420 in k17417 in k17414 in k17411 in k17408 in k17269 in k17266 in k17263 in k17260 in k17204 in k17201 in k17198 in k17195 in k17192 in k17189 in k17186 in k17183 in k15938 in k15869 in k15676 in k15673 in k15568 in k15517 in k7924 in k7921 in k5905 in k5612 in k5609 in k5605 in k5314 in k5311 in k5308 in k5305 */
static void C_ccall f_21330(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_21330,2,t0,t1);}
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=((C_word*)((C_word*)t0)[5])[1];
if(C_truep(t3)){
t4=((C_word*)t0)[4];
f_21193(t4,C_SCHEME_UNDEFINED);}
else{
t4=(C_word)C_a_i_list(&a,2,lf[15],((C_word*)((C_word*)t0)[3])[1]);
t5=(C_word)C_a_i_cons(&a,2,t4,((C_word*)((C_word*)t0)[2])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[2])+1,t5);
t7=((C_word*)t0)[4];
f_21193(t7,((C_word*)((C_word*)t0)[2])[1]);}}

/* k21191 in k21188 in k20968 in k20965 in k20961 in k20950 in parse-accumulation in k18948 in k18945 in k18942 in k18939 in k18528 in k18525 in k18522 in k18519 in k18516 in k17994 in k17991 in k17468 in k17465 in k17462 in k17459 in k17456 in k17453 in k17450 in k17447 in k17444 in k17441 in k17438 in k17435 in k17432 in k17429 in k17426 in k17423 in k17420 in k17417 in k17414 in k17411 in k17408 in k17269 in k17266 in k17263 in k17260 in k17204 in k17201 in k17198 in k17195 in k17192 in k17189 in k17186 in k17183 in k15938 in k15869 in k15676 in k15673 in k15568 in k15517 in k7924 in k7921 in k5905 in k5612 in k5609 in k5605 in k5314 in k5311 in k5308 in k5305 */
static void C_fcall f_21193(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word t14;
C_word t15;
C_word t16;
C_word t17;
C_word t18;
C_word t19;
C_word t20;
C_word t21;
C_word t22;
C_word t23;
C_word t24;
C_word t25;
C_word t26;
C_word t27;
C_word t28;
C_word t29;
C_word ab[114],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_21193,NULL,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_21196,a[2]=((C_word*)t0)[5],a[3]=((C_word*)t0)[6],a[4]=((C_word*)t0)[7],a[5]=((C_word*)t0)[8],tmp=(C_word)a,a+=6,tmp);
t3=(C_word)C_eqp(((C_word*)t0)[4],lf[18]);
if(C_truep(t3)){
t4=(C_word)C_a_i_list(&a,1,lf[515]);
t5=(C_word)C_a_i_list(&a,3,lf[18],((C_word*)((C_word*)t0)[3])[1],t4);
t6=(C_word)C_a_i_list(&a,3,lf[516],((C_word*)((C_word*)t0)[2])[1],t5);
t7=(C_word)C_a_i_cons(&a,2,t6,((C_word*)((C_word*)t0)[6])[1]);
t8=C_mutate(((C_word *)((C_word*)t0)[6])+1,t7);
t9=(C_word)C_a_i_list(&a,2,lf[517],((C_word*)((C_word*)t0)[2])[1]);
t10=(C_word)C_a_i_list(&a,3,lf[12],((C_word*)((C_word*)t0)[2])[1],t9);
t11=(C_word)C_a_i_cons(&a,2,t10,((C_word*)((C_word*)t0)[6])[1]);
t12=C_mutate(((C_word *)((C_word*)t0)[6])+1,t11);
t13=t2;
f_21196(t13,((C_word*)((C_word*)t0)[6])[1]);}
else{
t4=(C_word)C_eqp(((C_word*)t0)[4],lf[518]);
if(C_truep(t4)){
t5=(C_word)C_a_i_list(&a,2,lf[515],((C_word*)((C_word*)t0)[3])[1]);
t6=(C_word)C_a_i_list(&a,3,lf[516],((C_word*)((C_word*)t0)[2])[1],t5);
t7=(C_word)C_a_i_cons(&a,2,t6,((C_word*)((C_word*)t0)[6])[1]);
t8=C_mutate(((C_word *)((C_word*)t0)[6])+1,t7);
t9=(C_word)C_a_i_list(&a,2,lf[15],((C_word*)((C_word*)t0)[2])[1]);
t10=(C_word)C_a_i_list(&a,3,lf[12],((C_word*)((C_word*)t0)[2])[1],t9);
t11=(C_word)C_a_i_cons(&a,2,t10,((C_word*)((C_word*)t0)[6])[1]);
t12=C_mutate(((C_word *)((C_word*)t0)[6])+1,t11);
t13=t2;
f_21196(t13,((C_word*)((C_word*)t0)[6])[1]);}
else{
t5=(C_word)C_a_i_list(&a,3,lf[516],((C_word*)((C_word*)t0)[2])[1],((C_word*)((C_word*)t0)[3])[1]);
t6=(C_word)C_a_i_cons(&a,2,t5,((C_word*)((C_word*)t0)[6])[1]);
t7=C_mutate(((C_word *)((C_word*)t0)[6])+1,t6);
t8=(C_word)C_a_i_list(&a,2,lf[517],((C_word*)((C_word*)t0)[2])[1]);
t9=(C_word)C_a_i_list(&a,3,lf[12],((C_word*)((C_word*)t0)[2])[1],t8);
t10=(C_word)C_a_i_cons(&a,2,t9,((C_word*)((C_word*)t0)[6])[1]);
t11=C_mutate(((C_word *)((C_word*)t0)[6])+1,t10);
t12=t2;
f_21196(t12,((C_word*)((C_word*)t0)[6])[1]);}}}

/* k21194 in k21191 in k21188 in k20968 in k20965 in k20961 in k20950 in parse-accumulation in k18948 in k18945 in k18942 in k18939 in k18528 in k18525 in k18522 in k18519 in k18516 in k17994 in k17991 in k17468 in k17465 in k17462 in k17459 in k17456 in k17453 in k17450 in k17447 in k17444 in k17441 in k17438 in k17435 in k17432 in k17429 in k17426 in k17423 in k17420 in k17417 in k17414 in k17411 in k17408 in k17269 in k17266 in k17263 in k17260 in k17204 in k17201 in k17198 in k17195 in k17192 in k17189 in k17186 in k17183 in k15938 in k15869 in k15676 in k15673 in k15568 in k15517 in k7924 in k7921 in k5905 in k5612 in k5609 in k5605 in k5314 in k5311 in k5308 in k5305 */
static void C_fcall f_21196(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[18],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_21196,NULL,2,t0,t1);}
if(C_truep(((C_word*)((C_word*)t0)[5])[1])){
t2=(C_word)C_a_i_list(&a,2,lf[15],((C_word*)((C_word*)t0)[4])[1]);
t3=(C_word)C_a_i_list(&a,3,lf[12],((C_word*)((C_word*)t0)[5])[1],t2);
t4=(C_word)C_a_i_cons(&a,2,t3,((C_word*)((C_word*)t0)[3])[1]);
t5=C_mutate(((C_word *)((C_word*)t0)[3])+1,t4);
t6=((C_word*)t0)[2];
f_20973(t6,((C_word*)((C_word*)t0)[3])[1]);}
else{
t2=((C_word*)t0)[2];
f_20973(t2,C_SCHEME_UNDEFINED);}}

/* k21093 in k20968 in k20965 in k20961 in k20950 in parse-accumulation in k18948 in k18945 in k18942 in k18939 in k18528 in k18525 in k18522 in k18519 in k18516 in k17994 in k17991 in k17468 in k17465 in k17462 in k17459 in k17456 in k17453 in k17450 in k17447 in k17444 in k17441 in k17438 in k17435 in k17432 in k17429 in k17426 in k17423 in k17420 in k17417 in k17414 in k17411 in k17408 in k17269 in k17266 in k17263 in k17260 in k17204 in k17201 in k17198 in k17195 in k17192 in k17189 in k17186 in k17183 in k15938 in k15869 in k15676 in k15673 in k15568 in k15517 in k7924 in k7921 in k5905 in k5612 in k5609 in k5605 in k5314 in k5311 in k5308 in k5305 */
static void C_ccall f_21095(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word ab[25],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_21095,2,t0,t1);}
t2=(C_word)C_eqp(((C_word*)t0)[12],lf[511]);
t3=(C_truep(t2)?lf[341]:lf[339]);
t4=C_SCHEME_FALSE;
t5=(*a=C_VECTOR_TYPE|1,a[1]=t4,tmp=(C_word)a,a+=2,tmp);
t6=(*a=C_CLOSURE_TYPE|8,a[1]=(C_word)f_21101,a[2]=((C_word*)t0)[8],a[3]=((C_word*)t0)[9],a[4]=t3,a[5]=t5,a[6]=((C_word*)t0)[10],a[7]=t1,a[8]=((C_word*)t0)[11],tmp=(C_word)a,a+=9,tmp);
if(C_truep(((C_word*)((C_word*)t0)[7])[1])){
t7=((C_word*)((C_word*)t0)[6])[1];
t8=(*a=C_CLOSURE_TYPE|9,a[1]=(C_word)f_21145,a[2]=((C_word*)t0)[12],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=t6,a[6]=((C_word*)t0)[6],a[7]=((C_word*)t0)[5],a[8]=((C_word*)t0)[11],a[9]=t5,tmp=(C_word)a,a+=10,tmp);
if(C_truep(t7)){
t9=t8;
f_21145(2,t9,t7);}
else{
C_trace("ChickenBridge.scm: 370  gensym");
t9=C_retrieve(lf[26]);
((C_proc3)C_retrieve_proc(t9))(3,t9,t8,lf[513]);}}
else{
t7=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_21178,a[2]=t6,a[3]=t5,tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 370  collector-acc");
f_20940(t7,((C_word*)((C_word*)t0)[5])[1]);}}

/* k21176 in k21093 in k20968 in k20965 in k20961 in k20950 in parse-accumulation in k18948 in k18945 in k18942 in k18939 in k18528 in k18525 in k18522 in k18519 in k18516 in k17994 in k17991 in k17468 in k17465 in k17462 in k17459 in k17456 in k17453 in k17450 in k17447 in k17444 in k17441 in k17438 in k17435 in k17432 in k17429 in k17426 in k17423 in k17420 in k17417 in k17414 in k17411 in k17408 in k17269 in k17266 in k17263 in k17260 in k17204 in k17201 in k17198 in k17195 in k17192 in k17189 in k17186 in k17183 in k15938 in k15869 in k15676 in k15673 in k15568 in k15517 in k7924 in k7921 in k5905 in k5612 in k5609 in k5605 in k5314 in k5311 in k5308 in k5305 */
static void C_ccall f_21178(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[3])+1,t1);
t3=((C_word*)t0)[2];
f_21101(t3,t2);}

/* k21143 in k21093 in k20968 in k20965 in k20961 in k20950 in parse-accumulation in k18948 in k18945 in k18942 in k18939 in k18528 in k18525 in k18522 in k18519 in k18516 in k17994 in k17991 in k17468 in k17465 in k17462 in k17459 in k17456 in k17453 in k17450 in k17447 in k17444 in k17441 in k17438 in k17435 in k17432 in k17429 in k17426 in k17423 in k17420 in k17417 in k17414 in k17411 in k17408 in k17269 in k17266 in k17263 in k17260 in k17204 in k17201 in k17198 in k17195 in k17192 in k17189 in k17186 in k17183 in k15938 in k15869 in k15676 in k15673 in k15568 in k15517 in k7924 in k7921 in k5905 in k5612 in k5609 in k5605 in k5314 in k5311 in k5308 in k5305 */
static void C_ccall f_21145(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[10],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_21145,2,t0,t1);}
t2=C_mutate(((C_word *)((C_word*)t0)[9])+1,t1);
t3=(*a=C_CLOSURE_TYPE|9,a[1]=(C_word)f_21171,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[9],a[6]=((C_word*)t0)[5],a[7]=((C_word*)t0)[6],a[8]=((C_word*)t0)[7],a[9]=((C_word*)t0)[8],tmp=(C_word)a,a+=10,tmp);
C_trace("ChickenBridge.scm: 370  make-binding");
f_19294(t3,((C_word*)((C_word*)t0)[9])[1],C_SCHEME_FALSE);}

/* k21169 in k21143 in k21093 in k20968 in k20965 in k20961 in k20950 in parse-accumulation in k18948 in k18945 in k18942 in k18939 in k18528 in k18525 in k18522 in k18519 in k18516 in k17994 in k17991 in k17468 in k17465 in k17462 in k17459 in k17456 in k17453 in k17450 in k17447 in k17444 in k17441 in k17438 in k17435 in k17432 in k17429 in k17426 in k17423 in k17420 in k17417 in k17414 in k17411 in k17408 in k17269 in k17266 in k17263 in k17260 in k17204 in k17201 in k17198 in k17195 in k17192 in k17189 in k17186 in k17183 in k15938 in k15869 in k15676 in k15673 in k15568 in k15517 in k7924 in k7921 in k5905 in k5612 in k5609 in k5605 in k5314 in k5311 in k5308 in k5305 */
static void C_ccall f_21171(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[10],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_21171,2,t0,t1);}
t2=(C_word)C_a_i_cons(&a,2,t1,((C_word*)((C_word*)t0)[9])[1]);
t3=C_mutate(((C_word *)((C_word*)t0)[9])+1,t2);
t4=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_21153,a[2]=((C_word*)t0)[4],a[3]=((C_word*)t0)[5],a[4]=((C_word*)t0)[6],a[5]=((C_word*)t0)[7],a[6]=((C_word*)t0)[8],tmp=(C_word)a,a+=7,tmp);
C_trace("ChickenBridge.scm: 370  make-collector");
f_20930(t4,((C_word*)((C_word*)t0)[7])[1],((C_word*)t0)[2],((C_word*)((C_word*)t0)[5])[1],C_SCHEME_FALSE);}

/* k21151 in k21169 in k21143 in k21093 in k20968 in k20965 in k20961 in k20950 in parse-accumulation in k18948 in k18945 in k18942 in k18939 in k18528 in k18525 in k18522 in k18519 in k18516 in k17994 in k17991 in k17468 in k17465 in k17462 in k17459 in k17456 in k17453 in k17450 in k17447 in k17444 in k17441 in k17438 in k17435 in k17432 in k17429 in k17426 in k17423 in k17420 in k17417 in k17414 in k17411 in k17408 in k17269 in k17266 in k17263 in k17260 in k17204 in k17201 in k17198 in k17195 in k17192 in k17189 in k17186 in k17183 in k15938 in k15869 in k15676 in k15673 in k15568 in k15517 in k7924 in k7921 in k5905 in k5612 in k5609 in k5605 in k5314 in k5311 in k5308 in k5305 */
static void C_ccall f_21153(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word ab[12],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_21153,2,t0,t1);}
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=((C_word*)((C_word*)t0)[5])[1];
if(C_truep(t3)){
t4=((C_word*)t0)[4];
f_21101(t4,C_SCHEME_UNDEFINED);}
else{
t4=(C_word)C_a_i_list(&a,3,lf[311],((C_word*)((C_word*)t0)[3])[1],C_fix(0));
t5=(C_word)C_a_i_cons(&a,2,t4,((C_word*)((C_word*)t0)[2])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[2])+1,t5);
t7=((C_word*)t0)[4];
f_21101(t7,((C_word*)((C_word*)t0)[2])[1]);}}

/* k21099 in k21093 in k20968 in k20965 in k20961 in k20950 in parse-accumulation in k18948 in k18945 in k18942 in k18939 in k18528 in k18525 in k18522 in k18519 in k18516 in k17994 in k17991 in k17468 in k17465 in k17462 in k17459 in k17456 in k17453 in k17450 in k17447 in k17444 in k17441 in k17438 in k17435 in k17432 in k17429 in k17426 in k17423 in k17420 in k17417 in k17414 in k17411 in k17408 in k17269 in k17266 in k17263 in k17260 in k17204 in k17201 in k17198 in k17195 in k17192 in k17189 in k17186 in k17183 in k15938 in k15869 in k15676 in k15673 in k15568 in k15517 in k7924 in k7921 in k5905 in k5612 in k5609 in k5605 in k5314 in k5311 in k5308 in k5305 */
static void C_fcall f_21101(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_21101,NULL,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|8,a[1]=(C_word)f_21141,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],a[7]=((C_word*)t0)[7],a[8]=((C_word*)t0)[8],tmp=(C_word)a,a+=9,tmp);
C_trace("ChickenBridge.scm: 370  make-binding");
f_19294(t2,((C_word*)t0)[7],C_SCHEME_FALSE);}

/* k21139 in k21099 in k21093 in k20968 in k20965 in k20961 in k20950 in parse-accumulation in k18948 in k18945 in k18942 in k18939 in k18528 in k18525 in k18522 in k18519 in k18516 in k17994 in k17991 in k17468 in k17465 in k17462 in k17459 in k17456 in k17453 in k17450 in k17447 in k17444 in k17441 in k17438 in k17435 in k17432 in k17429 in k17426 in k17423 in k17420 in k17417 in k17414 in k17411 in k17408 in k17269 in k17266 in k17263 in k17260 in k17204 in k17201 in k17198 in k17195 in k17192 in k17189 in k17186 in k17183 in k15938 in k15869 in k15676 in k15673 in k15568 in k15517 in k7924 in k7921 in k5905 in k5612 in k5609 in k5605 in k5314 in k5311 in k5308 in k5305 */
static void C_ccall f_21141(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word ab[66],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_21141,2,t0,t1);}
t2=(C_word)C_a_i_cons(&a,2,t1,((C_word*)((C_word*)t0)[8])[1]);
t3=C_mutate(((C_word *)((C_word*)t0)[8])+1,t2);
t4=(C_word)C_a_i_list(&a,3,lf[12],((C_word*)t0)[7],((C_word*)((C_word*)t0)[6])[1]);
t5=(C_word)C_a_i_list(&a,2,lf[312],((C_word*)((C_word*)t0)[5])[1]);
t6=(C_word)C_a_i_list(&a,3,((C_word*)t0)[4],((C_word*)t0)[7],((C_word*)((C_word*)t0)[5])[1]);
t7=(C_word)C_a_i_list(&a,3,lf[311],t5,t6);
t8=(C_word)C_a_i_list(&a,3,lf[12],((C_word*)((C_word*)t0)[5])[1],((C_word*)t0)[7]);
t9=(C_word)C_a_i_list(&a,3,lf[20],t7,t8);
t10=(C_word)C_a_i_list(&a,3,lf[336],t4,t9);
t11=(C_word)C_a_i_cons(&a,2,t10,((C_word*)((C_word*)t0)[3])[1]);
t12=C_mutate(((C_word *)((C_word*)t0)[3])+1,t11);
t13=((C_word*)t0)[2];
f_20973(t13,((C_word*)((C_word*)t0)[3])[1]);}

/* k21081 in k20968 in k20965 in k20961 in k20950 in parse-accumulation in k18948 in k18945 in k18942 in k18939 in k18528 in k18525 in k18522 in k18519 in k18516 in k17994 in k17991 in k17468 in k17465 in k17462 in k17459 in k17456 in k17453 in k17450 in k17447 in k17444 in k17441 in k17438 in k17435 in k17432 in k17429 in k17426 in k17423 in k17420 in k17417 in k17414 in k17411 in k17408 in k17269 in k17266 in k17263 in k17260 in k17204 in k17201 in k17198 in k17195 in k17192 in k17189 in k17186 in k17183 in k15938 in k15869 in k15676 in k15673 in k15568 in k15517 in k7924 in k7921 in k5905 in k5612 in k5609 in k5605 in k5314 in k5311 in k5308 in k5305 */
static void C_ccall f_21083(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[3])+1,t1);
t3=((C_word*)t0)[2];
f_21016(t3,t2);}

/* k21052 in k20968 in k20965 in k20961 in k20950 in parse-accumulation in k18948 in k18945 in k18942 in k18939 in k18528 in k18525 in k18522 in k18519 in k18516 in k17994 in k17991 in k17468 in k17465 in k17462 in k17459 in k17456 in k17453 in k17450 in k17447 in k17444 in k17441 in k17438 in k17435 in k17432 in k17429 in k17426 in k17423 in k17420 in k17417 in k17414 in k17411 in k17408 in k17269 in k17266 in k17263 in k17260 in k17204 in k17201 in k17198 in k17195 in k17192 in k17189 in k17186 in k17183 in k15938 in k15869 in k15676 in k15673 in k15568 in k15517 in k7924 in k7921 in k5905 in k5612 in k5609 in k5605 in k5314 in k5311 in k5308 in k5305 */
static void C_ccall f_21054(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[10],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_21054,2,t0,t1);}
t2=C_mutate(((C_word *)((C_word*)t0)[9])+1,t1);
t3=(*a=C_CLOSURE_TYPE|9,a[1]=(C_word)f_21076,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[9],a[6]=((C_word*)t0)[5],a[7]=((C_word*)t0)[6],a[8]=((C_word*)t0)[7],a[9]=((C_word*)t0)[8],tmp=(C_word)a,a+=10,tmp);
C_trace("ChickenBridge.scm: 370  make-binding");
f_19294(t3,((C_word*)((C_word*)t0)[9])[1],C_fix(0));}

/* k21074 in k21052 in k20968 in k20965 in k20961 in k20950 in parse-accumulation in k18948 in k18945 in k18942 in k18939 in k18528 in k18525 in k18522 in k18519 in k18516 in k17994 in k17991 in k17468 in k17465 in k17462 in k17459 in k17456 in k17453 in k17450 in k17447 in k17444 in k17441 in k17438 in k17435 in k17432 in k17429 in k17426 in k17423 in k17420 in k17417 in k17414 in k17411 in k17408 in k17269 in k17266 in k17263 in k17260 in k17204 in k17201 in k17198 in k17195 in k17192 in k17189 in k17186 in k17183 in k15938 in k15869 in k15676 in k15673 in k15568 in k15517 in k7924 in k7921 in k5905 in k5612 in k5609 in k5605 in k5314 in k5311 in k5308 in k5305 */
static void C_ccall f_21076(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[10],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_21076,2,t0,t1);}
t2=(C_word)C_a_i_cons(&a,2,t1,((C_word*)((C_word*)t0)[9])[1]);
t3=C_mutate(((C_word *)((C_word*)t0)[9])+1,t2);
t4=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_21062,a[2]=((C_word*)t0)[4],a[3]=((C_word*)t0)[5],a[4]=((C_word*)t0)[6],a[5]=((C_word*)t0)[7],a[6]=((C_word*)t0)[8],tmp=(C_word)a,a+=7,tmp);
C_trace("ChickenBridge.scm: 370  make-collector");
f_20930(t4,((C_word*)((C_word*)t0)[7])[1],((C_word*)t0)[2],((C_word*)((C_word*)t0)[5])[1],C_SCHEME_FALSE);}

/* k21060 in k21074 in k21052 in k20968 in k20965 in k20961 in k20950 in parse-accumulation in k18948 in k18945 in k18942 in k18939 in k18528 in k18525 in k18522 in k18519 in k18516 in k17994 in k17991 in k17468 in k17465 in k17462 in k17459 in k17456 in k17453 in k17450 in k17447 in k17444 in k17441 in k17438 in k17435 in k17432 in k17429 in k17426 in k17423 in k17420 in k17417 in k17414 in k17411 in k17408 in k17269 in k17266 in k17263 in k17260 in k17204 in k17201 in k17198 in k17195 in k17192 in k17189 in k17186 in k17183 in k15938 in k15869 in k15676 in k15673 in k15568 in k15517 in k7924 in k7921 in k5905 in k5612 in k5609 in k5605 in k5314 in k5311 in k5308 in k5305 */
static void C_ccall f_21062(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[3],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_21062,2,t0,t1);}
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=((C_word*)((C_word*)t0)[5])[1];
if(C_truep(t3)){
t4=((C_word*)t0)[4];
f_21016(t4,C_SCHEME_UNDEFINED);}
else{
t4=(C_word)C_a_i_cons(&a,2,((C_word*)((C_word*)t0)[3])[1],((C_word*)((C_word*)t0)[2])[1]);
t5=C_mutate(((C_word *)((C_word*)t0)[2])+1,t4);
t6=((C_word*)t0)[4];
f_21016(t6,((C_word*)((C_word*)t0)[2])[1]);}}

/* k21014 in k20968 in k20965 in k20961 in k20950 in parse-accumulation in k18948 in k18945 in k18942 in k18939 in k18528 in k18525 in k18522 in k18519 in k18516 in k17994 in k17991 in k17468 in k17465 in k17462 in k17459 in k17456 in k17453 in k17450 in k17447 in k17444 in k17441 in k17438 in k17435 in k17432 in k17429 in k17426 in k17423 in k17420 in k17417 in k17414 in k17411 in k17408 in k17269 in k17266 in k17263 in k17260 in k17204 in k17201 in k17198 in k17195 in k17192 in k17189 in k17186 in k17183 in k15938 in k15869 in k15676 in k15673 in k15568 in k15517 in k7924 in k7921 in k5905 in k5612 in k5609 in k5605 in k5314 in k5311 in k5308 in k5305 */
static void C_fcall f_21016(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word ab[51],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_21016,NULL,2,t0,t1);}
t2=(C_word)C_eqp(((C_word*)t0)[6],lf[508]);
if(C_truep(t2)){
t3=(C_word)C_a_i_list(&a,3,lf[91],((C_word*)((C_word*)t0)[5])[1],((C_word*)((C_word*)t0)[4])[1]);
t4=(C_word)C_a_i_list(&a,3,lf[12],((C_word*)((C_word*)t0)[5])[1],t3);
t5=(C_word)C_a_i_cons(&a,2,t4,((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_20973(t7,((C_word*)((C_word*)t0)[3])[1]);}
else{
t3=(C_word)C_a_i_list(&a,3,lf[91],((C_word*)((C_word*)t0)[5])[1],C_fix(1));
t4=(C_word)C_a_i_list(&a,3,lf[12],((C_word*)((C_word*)t0)[5])[1],t3);
t5=(C_word)C_a_i_list(&a,3,lf[20],((C_word*)((C_word*)t0)[4])[1],t4);
t6=(C_word)C_a_i_cons(&a,2,t5,((C_word*)((C_word*)t0)[3])[1]);
t7=C_mutate(((C_word *)((C_word*)t0)[3])+1,t6);
t8=((C_word*)t0)[2];
f_20973(t8,((C_word*)((C_word*)t0)[3])[1]);}}

/* k20971 in k20968 in k20965 in k20961 in k20950 in parse-accumulation in k18948 in k18945 in k18942 in k18939 in k18528 in k18525 in k18522 in k18519 in k18516 in k17994 in k17991 in k17468 in k17465 in k17462 in k17459 in k17456 in k17453 in k17450 in k17447 in k17444 in k17441 in k17438 in k17435 in k17432 in k17429 in k17426 in k17423 in k17420 in k17417 in k17414 in k17411 in k17408 in k17269 in k17266 in k17263 in k17260 in k17204 in k17201 in k17198 in k17195 in k17192 in k17189 in k17186 in k17183 in k15938 in k15869 in k15676 in k15673 in k15568 in k15517 in k7924 in k7921 in k5905 in k5612 in k5609 in k5605 in k5314 in k5311 in k5308 in k5305 */
static void C_fcall f_20973(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[13],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_20973,NULL,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_20980,a[2]=((C_word*)t0)[9],a[3]=((C_word*)t0)[10],tmp=(C_word)a,a+=4,tmp);
t3=(*a=C_CLOSURE_TYPE|8,a[1]=(C_word)f_20984,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=t2,a[7]=((C_word*)t0)[7],a[8]=((C_word*)t0)[8],tmp=(C_word)a,a+=9,tmp);
C_trace("ChickenBridge.scm: 370  reverse");
t4=*((C_word*)lf[164]+1);
((C_proc3)C_retrieve_proc(t4))(3,t4,t3,((C_word*)((C_word*)t0)[2])[1]);}

/* k20982 in k20971 in k20968 in k20965 in k20961 in k20950 in parse-accumulation in k18948 in k18945 in k18942 in k18939 in k18528 in k18525 in k18522 in k18519 in k18516 in k17994 in k17991 in k17468 in k17465 in k17462 in k17459 in k17456 in k17453 in k17450 in k17447 in k17444 in k17441 in k17438 in k17435 in k17432 in k17429 in k17426 in k17423 in k17420 in k17417 in k17414 in k17411 in k17408 in k17269 in k17266 in k17263 in k17260 in k17204 in k17201 in k17198 in k17195 in k17192 in k17189 in k17186 in k17183 in k15938 in k15869 in k15676 in k15673 in k15568 in k15517 in k7924 in k7921 in k5905 in k5612 in k5609 in k5605 in k5314 in k5311 in k5308 in k5305 */
static void C_ccall f_20984(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_20984,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|8,a[1]=(C_word)f_20988,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=t1,a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],a[7]=((C_word*)t0)[7],a[8]=((C_word*)t0)[8],tmp=(C_word)a,a+=9,tmp);
C_trace("ChickenBridge.scm: 370  reverse");
t3=*((C_word*)lf[164]+1);
((C_proc3)C_retrieve_proc(t3))(3,t3,t2,((C_word*)((C_word*)t0)[2])[1]);}

/* k20986 in k20982 in k20971 in k20968 in k20965 in k20961 in k20950 in parse-accumulation in k18948 in k18945 in k18942 in k18939 in k18528 in k18525 in k18522 in k18519 in k18516 in k17994 in k17991 in k17468 in k17465 in k17462 in k17459 in k17456 in k17453 in k17450 in k17447 in k17444 in k17441 in k17438 in k17435 in k17432 in k17429 in k17426 in k17423 in k17420 in k17417 in k17414 in k17411 in k17408 in k17269 in k17266 in k17263 in k17260 in k17204 in k17201 in k17198 in k17195 in k17192 in k17189 in k17186 in k17183 in k15938 in k15869 in k15676 in k15673 in k15568 in k15517 in k7924 in k7921 in k5905 in k5612 in k5609 in k5605 in k5314 in k5311 in k5308 in k5305 */
static void C_ccall f_20988(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_20988,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|8,a[1]=(C_word)f_20992,a[2]=((C_word*)t0)[3],a[3]=t1,a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],a[7]=((C_word*)t0)[7],a[8]=((C_word*)t0)[8],tmp=(C_word)a,a+=9,tmp);
C_trace("ChickenBridge.scm: 370  reverse");
t3=*((C_word*)lf[164]+1);
((C_proc3)C_retrieve_proc(t3))(3,t3,t2,((C_word*)((C_word*)t0)[2])[1]);}

/* k20990 in k20986 in k20982 in k20971 in k20968 in k20965 in k20961 in k20950 in parse-accumulation in k18948 in k18945 in k18942 in k18939 in k18528 in k18525 in k18522 in k18519 in k18516 in k17994 in k17991 in k17468 in k17465 in k17462 in k17459 in k17456 in k17453 in k17450 in k17447 in k17444 in k17441 in k17438 in k17435 in k17432 in k17429 in k17426 in k17423 in k17420 in k17417 in k17414 in k17411 in k17408 in k17269 in k17266 in k17263 in k17260 in k17204 in k17201 in k17198 in k17195 in k17192 in k17189 in k17186 in k17183 in k15938 in k15869 in k15676 in k15673 in k15568 in k15517 in k7924 in k7921 in k5905 in k5612 in k5609 in k5605 in k5314 in k5311 in k5308 in k5305 */
static void C_ccall f_20992(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_20992,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|8,a[1]=(C_word)f_20996,a[2]=t1,a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],a[7]=((C_word*)t0)[7],a[8]=((C_word*)t0)[8],tmp=(C_word)a,a+=9,tmp);
C_trace("ChickenBridge.scm: 370  reverse");
t3=*((C_word*)lf[164]+1);
((C_proc3)C_retrieve_proc(t3))(3,t3,t2,((C_word*)((C_word*)t0)[2])[1]);}

/* k20994 in k20990 in k20986 in k20982 in k20971 in k20968 in k20965 in k20961 in k20950 in parse-accumulation in k18948 in k18945 in k18942 in k18939 in k18528 in k18525 in k18522 in k18519 in k18516 in k17994 in k17991 in k17468 in k17465 in k17462 in k17459 in k17456 in k17453 in k17450 in k17447 in k17444 in k17441 in k17438 in k17435 in k17432 in k17429 in k17426 in k17423 in k17420 in k17417 in k17414 in k17411 in k17408 in k17269 in k17266 in k17263 in k17260 in k17204 in k17201 in k17198 in k17195 in k17192 in k17189 in k17186 in k17183 in k15938 in k15869 in k15676 in k15673 in k15568 in k15517 in k7924 in k7921 in k5905 in k5612 in k5609 in k5605 in k5314 in k5311 in k5308 in k5305 */
static void C_ccall f_20996(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[45],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_20996,2,t0,t1);}
t2=(C_truep(((C_word*)((C_word*)t0)[8])[1])?(C_word)C_a_i_list(&a,1,((C_word*)((C_word*)t0)[7])[1]):C_SCHEME_END_OF_LIST);
C_trace("ChickenBridge.scm: 370  make-loop-clause");
f_19060(((C_word*)t0)[6],(C_word)C_a_i_list(&a,14,lf[393],((C_word*)t0)[5],lf[394],((C_word*)t0)[4],lf[396],((C_word*)t0)[3],lf[398],((C_word*)t0)[2],lf[401],t1,lf[395],t2,lf[397],C_SCHEME_END_OF_LIST));}

/* k20978 in k20971 in k20968 in k20965 in k20961 in k20950 in parse-accumulation in k18948 in k18945 in k18942 in k18939 in k18528 in k18525 in k18522 in k18519 in k18516 in k17994 in k17991 in k17468 in k17465 in k17462 in k17459 in k17456 in k17453 in k17450 in k17447 in k17444 in k17441 in k17438 in k17435 in k17432 in k17429 in k17426 in k17423 in k17420 in k17417 in k17414 in k17411 in k17408 in k17269 in k17266 in k17263 in k17260 in k17204 in k17201 in k17198 in k17195 in k17192 in k17189 in k17186 in k17183 in k15938 in k15869 in k15676 in k15673 in k15568 in k15517 in k7924 in k7921 in k5905 in k5612 in k5609 in k5605 in k5314 in k5311 in k5308 in k5305 */
static void C_ccall f_20980(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 370  values");
C_values(4,0,((C_word*)t0)[3],t1,((C_word*)((C_word*)t0)[2])[1]);}

/* collector-acc in parse-accumulation in k18948 in k18945 in k18942 in k18939 in k18528 in k18525 in k18522 in k18519 in k18516 in k17994 in k17991 in k17468 in k17465 in k17462 in k17459 in k17456 in k17453 in k17450 in k17447 in k17444 in k17441 in k17438 in k17435 in k17432 in k17429 in k17426 in k17423 in k17420 in k17417 in k17414 in k17411 in k17408 in k17269 in k17266 in k17263 in k17260 in k17204 in k17201 in k17198 in k17195 in k17192 in k17189 in k17186 in k17183 in k15938 in k15869 in k15676 in k15673 in k15568 in k15517 in k7924 in k7921 in k5905 in k5612 in k5609 in k5605 in k5314 in k5311 in k5308 in k5305 */
static void C_fcall f_20940(C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word *a;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_20940,NULL,2,t1,t2);}
t3=t1;
((C_proc2)(void*)(*((C_word*)t3+1)))(2,t3,(C_word)C_i_caddr(t2));}

/* collector-type in parse-accumulation in k18948 in k18945 in k18942 in k18939 in k18528 in k18525 in k18522 in k18519 in k18516 in k17994 in k17991 in k17468 in k17465 in k17462 in k17459 in k17456 in k17453 in k17450 in k17447 in k17444 in k17441 in k17438 in k17435 in k17432 in k17429 in k17426 in k17423 in k17420 in k17417 in k17414 in k17411 in k17408 in k17269 in k17266 in k17263 in k17260 in k17204 in k17201 in k17198 in k17195 in k17192 in k17189 in k17186 in k17183 in k15938 in k15869 in k15676 in k15673 in k15568 in k15517 in k7924 in k7921 in k5905 in k5612 in k5609 in k5605 in k5314 in k5311 in k5308 in k5305 */
static void C_fcall f_20935(C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word *a;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_20935,NULL,2,t1,t2);}
t3=t1;
((C_proc2)(void*)(*((C_word*)t3+1)))(2,t3,(C_word)C_i_cadr(t2));}

/* make-collector in parse-accumulation in k18948 in k18945 in k18942 in k18939 in k18528 in k18525 in k18522 in k18519 in k18516 in k17994 in k17991 in k17468 in k17465 in k17462 in k17459 in k17456 in k17453 in k17450 in k17447 in k17444 in k17441 in k17438 in k17435 in k17432 in k17429 in k17426 in k17423 in k17420 in k17417 in k17414 in k17411 in k17408 in k17269 in k17266 in k17263 in k17260 in k17204 in k17201 in k17198 in k17195 in k17192 in k17189 in k17186 in k17183 in k15938 in k15869 in k15676 in k15673 in k15568 in k15517 in k7924 in k7921 in k5905 in k5612 in k5609 in k5605 in k5314 in k5311 in k5308 in k5305 */
static void C_fcall f_20930(C_word t1,C_word t2,C_word t3,C_word t4,C_word t5){
C_word tmp;
C_word t6;
C_word ab[12],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_20930,NULL,5,t1,t2,t3,t4,t5);}
t6=t1;
((C_proc2)(void*)(*((C_word*)t6+1)))(2,t6,(C_word)C_a_i_list(&a,4,t2,t3,t4,t5));}

/* parse-initially in k18948 in k18945 in k18942 in k18939 in k18528 in k18525 in k18522 in k18519 in k18516 in k17994 in k17991 in k17468 in k17465 in k17462 in k17459 in k17456 in k17453 in k17450 in k17447 in k17444 in k17441 in k17438 in k17435 in k17432 in k17429 in k17426 in k17423 in k17420 in k17417 in k17414 in k17411 in k17408 in k17269 in k17266 in k17263 in k17260 in k17204 in k17201 in k17198 in k17195 in k17192 in k17189 in k17186 in k17183 in k15938 in k15869 in k15676 in k15673 in k15568 in k15517 in k7924 in k7921 in k5905 in k5612 in k5609 in k5605 in k5314 in k5311 in k5308 in k5305 */
static void C_ccall f_20762(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4){
C_word tmp;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word ab[19],*a=ab;
if(c!=5) C_bad_argc_2(c,5,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr5,(void*)f_20762,5,t0,t1,t2,t3,t4);}
t5=(*a=C_VECTOR_TYPE|1,a[1]=t2,tmp=(C_word)a,a+=2,tmp);
t6=(C_word)C_i_car(((C_word*)t5)[1]);
t7=(C_word)C_i_cdr(((C_word*)t5)[1]);
t8=C_set_block_item(t5,0,t7);
t9=C_SCHEME_FALSE;
t10=(*a=C_VECTOR_TYPE|1,a[1]=t9,tmp=(C_word)a,a+=2,tmp);
t11=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_20773,a[2]=t6,a[3]=t1,a[4]=t10,a[5]=t5,tmp=(C_word)a,a+=6,tmp);
if(C_truep((C_word)C_i_nullp(((C_word*)t5)[1]))){
C_trace("ChickenBridge.scm: 370  loop-error");
f_19300(t11,t4,((C_word*)t5)[1],(C_word)C_a_i_list(&a,3,lf[505],t6,lf[506]));}
else{
t12=t11;
f_20773(2,t12,C_SCHEME_UNDEFINED);}}

/* k20771 in parse-initially in k18948 in k18945 in k18942 in k18939 in k18528 in k18525 in k18522 in k18519 in k18516 in k17994 in k17991 in k17468 in k17465 in k17462 in k17459 in k17456 in k17453 in k17450 in k17447 in k17444 in k17441 in k17438 in k17435 in k17432 in k17429 in k17426 in k17423 in k17420 in k17417 in k17414 in k17411 in k17408 in k17269 in k17266 in k17263 in k17260 in k17204 in k17201 in k17198 in k17195 in k17192 in k17189 in k17186 in k17183 in k15938 in k15869 in k15676 in k15673 in k15568 in k15517 in k7924 in k7921 in k5905 in k5612 in k5609 in k5605 in k5314 in k5311 in k5308 in k5305 */
static void C_ccall f_20773(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word ab[19],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_20773,2,t0,t1);}
t2=(C_word)C_i_car(((C_word*)((C_word*)t0)[5])[1]);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[5])[1]);
t4=C_mutate(((C_word *)((C_word*)t0)[5])+1,t3);
t5=C_mutate(((C_word *)((C_word*)t0)[4])+1,t2);
t6=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_20788,a[2]=((C_word*)t0)[5],a[3]=((C_word*)t0)[3],tmp=(C_word)a,a+=4,tmp);
t7=(C_word)C_a_i_list(&a,1,((C_word*)((C_word*)t0)[4])[1]);
C_trace("ChickenBridge.scm: 370  make-loop-clause");
f_19060(t6,(C_word)C_a_i_list(&a,4,lf[393],((C_word*)t0)[2],lf[396],t7));}

/* k20786 in k20771 in parse-initially in k18948 in k18945 in k18942 in k18939 in k18528 in k18525 in k18522 in k18519 in k18516 in k17994 in k17991 in k17468 in k17465 in k17462 in k17459 in k17456 in k17453 in k17450 in k17447 in k17444 in k17441 in k17438 in k17435 in k17432 in k17429 in k17426 in k17423 in k17420 in k17417 in k17414 in k17411 in k17408 in k17269 in k17266 in k17263 in k17260 in k17204 in k17201 in k17198 in k17195 in k17192 in k17189 in k17186 in k17183 in k15938 in k15869 in k15676 in k15673 in k15568 in k15517 in k7924 in k7921 in k5905 in k5612 in k5609 in k5605 in k5314 in k5311 in k5308 in k5305 */
static void C_ccall f_20788(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 370  values");
C_values(4,0,((C_word*)t0)[3],t1,((C_word*)((C_word*)t0)[2])[1]);}

/* parse-finally in k18948 in k18945 in k18942 in k18939 in k18528 in k18525 in k18522 in k18519 in k18516 in k17994 in k17991 in k17468 in k17465 in k17462 in k17459 in k17456 in k17453 in k17450 in k17447 in k17444 in k17441 in k17438 in k17435 in k17432 in k17429 in k17426 in k17423 in k17420 in k17417 in k17414 in k17411 in k17408 in k17269 in k17266 in k17263 in k17260 in k17204 in k17201 in k17198 in k17195 in k17192 in k17189 in k17186 in k17183 in k15938 in k15869 in k15676 in k15673 in k15568 in k15517 in k7924 in k7921 in k5905 in k5612 in k5609 in k5605 in k5314 in k5311 in k5308 in k5305 */
static void C_ccall f_20724(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4){
C_word tmp;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word ab[19],*a=ab;
if(c!=5) C_bad_argc_2(c,5,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr5,(void*)f_20724,5,t0,t1,t2,t3,t4);}
t5=(*a=C_VECTOR_TYPE|1,a[1]=t2,tmp=(C_word)a,a+=2,tmp);
t6=(C_word)C_i_car(((C_word*)t5)[1]);
t7=(C_word)C_i_cdr(((C_word*)t5)[1]);
t8=C_set_block_item(t5,0,t7);
t9=C_SCHEME_FALSE;
t10=(*a=C_VECTOR_TYPE|1,a[1]=t9,tmp=(C_word)a,a+=2,tmp);
t11=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_20735,a[2]=t6,a[3]=t1,a[4]=t10,a[5]=t5,tmp=(C_word)a,a+=6,tmp);
if(C_truep((C_word)C_i_nullp(((C_word*)t5)[1]))){
C_trace("ChickenBridge.scm: 370  loop-error");
f_19300(t11,t4,((C_word*)t5)[1],(C_word)C_a_i_list(&a,3,lf[502],t6,lf[503]));}
else{
t12=t11;
f_20735(2,t12,C_SCHEME_UNDEFINED);}}

/* k20733 in parse-finally in k18948 in k18945 in k18942 in k18939 in k18528 in k18525 in k18522 in k18519 in k18516 in k17994 in k17991 in k17468 in k17465 in k17462 in k17459 in k17456 in k17453 in k17450 in k17447 in k17444 in k17441 in k17438 in k17435 in k17432 in k17429 in k17426 in k17423 in k17420 in k17417 in k17414 in k17411 in k17408 in k17269 in k17266 in k17263 in k17260 in k17204 in k17201 in k17198 in k17195 in k17192 in k17189 in k17186 in k17183 in k15938 in k15869 in k15676 in k15673 in k15568 in k15517 in k7924 in k7921 in k5905 in k5612 in k5609 in k5605 in k5314 in k5311 in k5308 in k5305 */
static void C_ccall f_20735(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word ab[19],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_20735,2,t0,t1);}
t2=(C_word)C_i_car(((C_word*)((C_word*)t0)[5])[1]);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[5])[1]);
t4=C_mutate(((C_word *)((C_word*)t0)[5])+1,t3);
t5=C_mutate(((C_word *)((C_word*)t0)[4])+1,t2);
t6=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_20750,a[2]=((C_word*)t0)[5],a[3]=((C_word*)t0)[3],tmp=(C_word)a,a+=4,tmp);
t7=(C_word)C_a_i_list(&a,1,((C_word*)((C_word*)t0)[4])[1]);
C_trace("ChickenBridge.scm: 370  make-loop-clause");
f_19060(t6,(C_word)C_a_i_list(&a,4,lf[393],((C_word*)t0)[2],lf[400],t7));}

/* k20748 in k20733 in parse-finally in k18948 in k18945 in k18942 in k18939 in k18528 in k18525 in k18522 in k18519 in k18516 in k17994 in k17991 in k17468 in k17465 in k17462 in k17459 in k17456 in k17453 in k17450 in k17447 in k17444 in k17441 in k17438 in k17435 in k17432 in k17429 in k17426 in k17423 in k17420 in k17417 in k17414 in k17411 in k17408 in k17269 in k17266 in k17263 in k17260 in k17204 in k17201 in k17198 in k17195 in k17192 in k17189 in k17186 in k17183 in k15938 in k15869 in k15676 in k15673 in k15568 in k15517 in k7924 in k7921 in k5905 in k5612 in k5609 in k5605 in k5314 in k5311 in k5308 in k5305 */
static void C_ccall f_20750(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 370  values");
C_values(4,0,((C_word*)t0)[3],t1,((C_word*)((C_word*)t0)[2])[1]);}

/* parse-do in k18948 in k18945 in k18942 in k18939 in k18528 in k18525 in k18522 in k18519 in k18516 in k17994 in k17991 in k17468 in k17465 in k17462 in k17459 in k17456 in k17453 in k17450 in k17447 in k17444 in k17441 in k17438 in k17435 in k17432 in k17429 in k17426 in k17423 in k17420 in k17417 in k17414 in k17411 in k17408 in k17269 in k17266 in k17263 in k17260 in k17204 in k17201 in k17198 in k17195 in k17192 in k17189 in k17186 in k17183 in k15938 in k15869 in k15676 in k15673 in k15568 in k15517 in k7924 in k7921 in k5905 in k5612 in k5609 in k5605 in k5314 in k5311 in k5308 in k5305 */
static void C_ccall f_20657(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4){
C_word tmp;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word t14;
C_word t15;
C_word t16;
C_word ab[21],*a=ab;
if(c!=5) C_bad_argc_2(c,5,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr5,(void*)f_20657,5,t0,t1,t2,t3,t4);}
t5=(*a=C_VECTOR_TYPE|1,a[1]=t2,tmp=(C_word)a,a+=2,tmp);
t6=((C_word*)t5)[1];
t7=(C_word)C_i_car(((C_word*)t5)[1]);
t8=(C_word)C_i_cdr(((C_word*)t5)[1]);
t9=C_set_block_item(t5,0,t8);
t10=C_SCHEME_END_OF_LIST;
t11=(*a=C_VECTOR_TYPE|1,a[1]=t10,tmp=(C_word)a,a+=2,tmp);
t12=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_20668,a[2]=t11,a[3]=t7,a[4]=t5,a[5]=t1,tmp=(C_word)a,a+=6,tmp);
t13=C_SCHEME_UNDEFINED;
t14=(*a=C_VECTOR_TYPE|1,a[1]=t13,tmp=(C_word)a,a+=2,tmp);
t15=C_set_block_item(t14,0,(*a=C_CLOSURE_TYPE|8,a[1]=(C_word)f_20677,a[2]=t14,a[3]=t7,a[4]=t6,a[5]=t4,a[6]=t11,a[7]=t5,a[8]=((C_word)li310),tmp=(C_word)a,a+=9,tmp));
t16=((C_word*)t14)[1];
f_20677(t16,t12);}

/* do3507 in parse-do in k18948 in k18945 in k18942 in k18939 in k18528 in k18525 in k18522 in k18519 in k18516 in k17994 in k17991 in k17468 in k17465 in k17462 in k17459 in k17456 in k17453 in k17450 in k17447 in k17444 in k17441 in k17438 in k17435 in k17432 in k17429 in k17426 in k17423 in k17420 in k17417 in k17414 in k17411 in k17408 in k17269 in k17266 in k17263 in k17260 in k17204 in k17201 in k17198 in k17195 in k17192 in k17189 in k17186 in k17183 in k15938 in k15869 in k15676 in k15673 in k15568 in k15517 in k7924 in k7921 in k5905 in k5612 in k5609 in k5605 in k5314 in k5311 in k5308 in k5305 */
static void C_fcall f_20677(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_20677,NULL,2,t0,t1);}
t2=(C_word)C_i_nullp(((C_word*)((C_word*)t0)[7])[1]);
t3=(*a=C_CLOSURE_TYPE|8,a[1]=(C_word)f_20687,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[7],a[4]=((C_word*)t0)[3],a[5]=((C_word*)t0)[4],a[6]=((C_word*)t0)[5],a[7]=t1,a[8]=((C_word*)t0)[6],tmp=(C_word)a,a+=9,tmp);
if(C_truep(t2)){
t4=t3;
f_20687(2,t4,t2);}
else{
t4=(C_word)C_i_car(((C_word*)((C_word*)t0)[7])[1]);
C_trace("ChickenBridge.scm: 370  loop-op?");
f_19282(t3,t4,((C_word*)t0)[5]);}}

/* k20685 in do3507 in parse-do in k18948 in k18945 in k18942 in k18939 in k18528 in k18525 in k18522 in k18519 in k18516 in k17994 in k17991 in k17468 in k17465 in k17462 in k17459 in k17456 in k17453 in k17450 in k17447 in k17444 in k17441 in k17438 in k17435 in k17432 in k17429 in k17426 in k17423 in k17420 in k17417 in k17414 in k17411 in k17408 in k17269 in k17266 in k17263 in k17260 in k17204 in k17201 in k17198 in k17195 in k17192 in k17189 in k17186 in k17183 in k15938 in k15869 in k15676 in k15673 in k15568 in k15517 in k7924 in k7921 in k5905 in k5612 in k5609 in k5605 in k5314 in k5311 in k5308 in k5305 */
static void C_ccall f_20687(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word ab[16],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_20687,2,t0,t1);}
if(C_truep(t1)){
if(C_truep((C_word)C_i_nullp(((C_word*)((C_word*)t0)[8])[1]))){
C_trace("ChickenBridge.scm: 370  loop-error");
f_19300(((C_word*)t0)[7],((C_word*)t0)[6],((C_word*)t0)[5],(C_word)C_a_i_list(&a,3,lf[499],((C_word*)t0)[4],lf[500]));}
else{
t2=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_20700,a[2]=((C_word*)t0)[7],a[3]=((C_word*)t0)[8],tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 370  reverse");
t3=*((C_word*)lf[164]+1);
((C_proc3)C_retrieve_proc(t3))(3,t3,t2,((C_word*)((C_word*)t0)[8])[1]);}}
else{
t2=(C_word)C_i_car(((C_word*)((C_word*)t0)[3])[1]);
t3=(C_word)C_a_i_cons(&a,2,t2,((C_word*)((C_word*)t0)[8])[1]);
t4=C_mutate(((C_word *)((C_word*)t0)[8])+1,t3);
t5=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)((C_word*)t0)[2])[1];
f_20677(t7,((C_word*)t0)[7]);}}

/* k20698 in k20685 in do3507 in parse-do in k18948 in k18945 in k18942 in k18939 in k18528 in k18525 in k18522 in k18519 in k18516 in k17994 in k17991 in k17468 in k17465 in k17462 in k17459 in k17456 in k17453 in k17450 in k17447 in k17444 in k17441 in k17438 in k17435 in k17432 in k17429 in k17426 in k17423 in k17420 in k17417 in k17414 in k17411 in k17408 in k17269 in k17266 in k17263 in k17260 in k17204 in k17201 in k17198 in k17195 in k17192 in k17189 in k17186 in k17183 in k15938 in k15869 in k15676 in k15673 in k15568 in k15517 in k7924 in k7921 in k5905 in k5612 in k5609 in k5605 in k5314 in k5311 in k5308 in k5305 */
static void C_ccall f_20700(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[3])+1,t1);
t3=((C_word*)t0)[2];
((C_proc2)(void*)(*((C_word*)t3+1)))(2,t3,t2);}

/* k20666 in parse-do in k18948 in k18945 in k18942 in k18939 in k18528 in k18525 in k18522 in k18519 in k18516 in k17994 in k17991 in k17468 in k17465 in k17462 in k17459 in k17456 in k17453 in k17450 in k17447 in k17444 in k17441 in k17438 in k17435 in k17432 in k17429 in k17426 in k17423 in k17420 in k17417 in k17414 in k17411 in k17408 in k17269 in k17266 in k17263 in k17260 in k17204 in k17201 in k17198 in k17195 in k17192 in k17189 in k17186 in k17183 in k15938 in k15869 in k15676 in k15673 in k15568 in k15517 in k7924 in k7921 in k5905 in k5612 in k5609 in k5605 in k5314 in k5311 in k5308 in k5305 */
static void C_ccall f_20668(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[16],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_20668,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_20675,a[2]=((C_word*)t0)[4],a[3]=((C_word*)t0)[5],tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 370  make-loop-clause");
f_19060(t2,(C_word)C_a_i_list(&a,4,lf[393],((C_word*)t0)[3],lf[398],((C_word*)((C_word*)t0)[2])[1]));}

/* k20673 in k20666 in parse-do in k18948 in k18945 in k18942 in k18939 in k18528 in k18525 in k18522 in k18519 in k18516 in k17994 in k17991 in k17468 in k17465 in k17462 in k17459 in k17456 in k17453 in k17450 in k17447 in k17444 in k17441 in k17438 in k17435 in k17432 in k17429 in k17426 in k17423 in k17420 in k17417 in k17414 in k17411 in k17408 in k17269 in k17266 in k17263 in k17260 in k17204 in k17201 in k17198 in k17195 in k17192 in k17189 in k17186 in k17183 in k15938 in k15869 in k15676 in k15673 in k15568 in k15517 in k7924 in k7921 in k5905 in k5612 in k5609 in k5605 in k5314 in k5311 in k5308 in k5305 */
static void C_ccall f_20675(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 370  values");
C_values(4,0,((C_word*)t0)[3],t1,((C_word*)((C_word*)t0)[2])[1]);}

/* parse-with in k18948 in k18945 in k18942 in k18939 in k18528 in k18525 in k18522 in k18519 in k18516 in k17994 in k17991 in k17468 in k17465 in k17462 in k17459 in k17456 in k17453 in k17450 in k17447 in k17444 in k17441 in k17438 in k17435 in k17432 in k17429 in k17426 in k17423 in k17420 in k17417 in k17414 in k17411 in k17408 in k17269 in k17266 in k17263 in k17260 in k17204 in k17201 in k17198 in k17195 in k17192 in k17189 in k17186 in k17183 in k15938 in k15869 in k15676 in k15673 in k15568 in k15517 in k7924 in k7921 in k5905 in k5612 in k5609 in k5605 in k5314 in k5311 in k5308 in k5305 */
static void C_ccall f_20464(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4){
C_word tmp;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word t14;
C_word t15;
C_word t16;
C_word t17;
C_word t18;
C_word t19;
C_word t20;
C_word t21;
C_word t22;
C_word t23;
C_word ab[37],*a=ab;
if(c!=5) C_bad_argc_2(c,5,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr5,(void*)f_20464,5,t0,t1,t2,t3,t4);}
t5=t2;
t6=(C_word)C_i_cdr(t2);
t7=t6;
t8=(*a=C_VECTOR_TYPE|1,a[1]=t7,tmp=(C_word)a,a+=2,tmp);
t9=C_SCHEME_FALSE;
t10=(*a=C_VECTOR_TYPE|1,a[1]=t9,tmp=(C_word)a,a+=2,tmp);
t11=C_SCHEME_FALSE;
t12=(*a=C_VECTOR_TYPE|1,a[1]=t11,tmp=(C_word)a,a+=2,tmp);
t13=C_SCHEME_FALSE;
t14=(*a=C_VECTOR_TYPE|1,a[1]=t13,tmp=(C_word)a,a+=2,tmp);
t15=C_SCHEME_END_OF_LIST;
t16=(*a=C_VECTOR_TYPE|1,a[1]=t15,tmp=(C_word)a,a+=2,tmp);
t17=C_SCHEME_END_OF_LIST;
t18=(*a=C_VECTOR_TYPE|1,a[1]=t17,tmp=(C_word)a,a+=2,tmp);
t19=(*a=C_CLOSURE_TYPE|10,a[1]=(C_word)f_20471,a[2]=t12,a[3]=t10,a[4]=t5,a[5]=t4,a[6]=t14,a[7]=t16,a[8]=t18,a[9]=t8,a[10]=t1,tmp=(C_word)a,a+=11,tmp);
t20=C_SCHEME_UNDEFINED;
t21=(*a=C_VECTOR_TYPE|1,a[1]=t20,tmp=(C_word)a,a+=2,tmp);
t22=C_set_block_item(t21,0,(*a=C_CLOSURE_TYPE|11,a[1]=(C_word)f_20524,a[2]=t18,a[3]=t16,a[4]=t5,a[5]=t4,a[6]=t14,a[7]=t12,a[8]=t10,a[9]=t21,a[10]=t8,a[11]=((C_word)li308),tmp=(C_word)a,a+=12,tmp));
t23=((C_word*)t21)[1];
f_20524(t23,t19,C_SCHEME_TRUE,C_SCHEME_FALSE);}

/* do3463 in parse-with in k18948 in k18945 in k18942 in k18939 in k18528 in k18525 in k18522 in k18519 in k18516 in k17994 in k17991 in k17468 in k17465 in k17462 in k17459 in k17456 in k17453 in k17450 in k17447 in k17444 in k17441 in k17438 in k17435 in k17432 in k17429 in k17426 in k17423 in k17420 in k17417 in k17414 in k17411 in k17408 in k17269 in k17266 in k17263 in k17260 in k17204 in k17201 in k17198 in k17195 in k17192 in k17189 in k17186 in k17183 in k15938 in k15869 in k15676 in k15673 in k15568 in k15517 in k7924 in k7921 in k5905 in k5612 in k5609 in k5605 in k5314 in k5311 in k5308 in k5305 */
static void C_fcall f_20524(C_word t0,C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word ab[18],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_20524,NULL,4,t0,t1,t2,t3);}
t4=(*a=C_VECTOR_TYPE|1,a[1]=t2,tmp=(C_word)a,a+=2,tmp);
t5=(*a=C_VECTOR_TYPE|1,a[1]=t3,tmp=(C_word)a,a+=2,tmp);
t6=(C_word)C_i_nullp(((C_word*)((C_word*)t0)[10])[1]);
t7=(*a=C_CLOSURE_TYPE|13,a[1]=(C_word)f_20534,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],a[7]=((C_word*)t0)[7],a[8]=((C_word*)t0)[8],a[9]=t4,a[10]=((C_word*)t0)[9],a[11]=t5,a[12]=((C_word*)t0)[10],a[13]=t1,tmp=(C_word)a,a+=14,tmp);
if(C_truep(t6)){
t8=t7;
f_20534(2,t8,t6);}
else{
t8=(C_word)C_i_car(((C_word*)((C_word*)t0)[10])[1]);
C_trace("ChickenBridge.scm: 370  loop-op?");
f_19282(t7,t8,((C_word*)t0)[5]);}}

/* k20532 in do3463 in parse-with in k18948 in k18945 in k18942 in k18939 in k18528 in k18525 in k18522 in k18519 in k18516 in k17994 in k17991 in k17468 in k17465 in k17462 in k17459 in k17456 in k17453 in k17450 in k17447 in k17444 in k17441 in k17438 in k17435 in k17432 in k17429 in k17426 in k17423 in k17420 in k17417 in k17414 in k17411 in k17408 in k17269 in k17266 in k17263 in k17260 in k17204 in k17201 in k17198 in k17195 in k17192 in k17189 in k17186 in k17183 in k15938 in k15869 in k15676 in k15673 in k15568 in k15517 in k7924 in k7921 in k5905 in k5612 in k5609 in k5605 in k5314 in k5311 in k5308 in k5305 */
static void C_ccall f_20534(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word ab[19],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_20534,2,t0,t1);}
if(C_truep(t1)){
t2=((C_word*)t0)[13];
((C_proc2)(void*)(*((C_word*)t2+1)))(2,t2,C_SCHEME_UNDEFINED);}
else{
t2=(C_word)C_i_car(((C_word*)((C_word*)t0)[12])[1]);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[12])[1]);
t4=C_mutate(((C_word *)((C_word*)t0)[12])+1,t3);
t5=C_mutate(((C_word *)((C_word*)t0)[11])+1,t2);
t6=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_20545,a[2]=((C_word*)t0)[11],a[3]=((C_word*)t0)[9],a[4]=((C_word*)t0)[13],a[5]=((C_word*)t0)[10],tmp=(C_word)a,a+=6,tmp);
t7=(*a=C_CLOSURE_TYPE|12,a[1]=(C_word)f_20648,a[2]=((C_word*)t0)[12],a[3]=((C_word*)t0)[2],a[4]=((C_word*)t0)[3],a[5]=((C_word*)t0)[4],a[6]=((C_word*)t0)[5],a[7]=t6,a[8]=((C_word*)t0)[6],a[9]=((C_word*)t0)[7],a[10]=((C_word*)t0)[11],a[11]=((C_word*)t0)[8],a[12]=((C_word*)t0)[9],tmp=(C_word)a,a+=13,tmp);
C_trace("ChickenBridge.scm: 370  loop-variable?");
f_19288(t7,((C_word*)((C_word*)t0)[11])[1]);}}

/* k20646 in k20532 in do3463 in parse-with in k18948 in k18945 in k18942 in k18939 in k18528 in k18525 in k18522 in k18519 in k18516 in k17994 in k17991 in k17468 in k17465 in k17462 in k17459 in k17456 in k17453 in k17450 in k17447 in k17444 in k17441 in k17438 in k17435 in k17432 in k17429 in k17426 in k17423 in k17420 in k17417 in k17414 in k17411 in k17408 in k17269 in k17266 in k17263 in k17260 in k17204 in k17201 in k17198 in k17195 in k17192 in k17189 in k17186 in k17183 in k15938 in k15869 in k15676 in k15673 in k15568 in k15517 in k7924 in k7921 in k5905 in k5612 in k5609 in k5605 in k5314 in k5311 in k5308 in k5305 */
static void C_ccall f_20648(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word ab[64],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_20648,2,t0,t1);}
t2=(C_truep(t1)?((C_word*)((C_word*)t0)[12])[1]:C_SCHEME_FALSE);
if(C_truep(t2)){
t3=(*a=C_CLOSURE_TYPE|9,a[1]=(C_word)f_20554,a[2]=((C_word*)t0)[5],a[3]=((C_word*)t0)[6],a[4]=((C_word*)t0)[7],a[5]=((C_word*)t0)[12],a[6]=((C_word*)t0)[8],a[7]=((C_word*)t0)[9],a[8]=((C_word*)t0)[10],a[9]=((C_word*)t0)[11],tmp=(C_word)a,a+=10,tmp);
if(C_truep(((C_word*)((C_word*)t0)[11])[1])){
C_trace("ChickenBridge.scm: 370  loop-error");
f_19300(t3,((C_word*)t0)[6],((C_word*)t0)[5],(C_word)C_a_i_list(&a,3,lf[489],((C_word*)((C_word*)t0)[10])[1],lf[490]));}
else{
t4=t3;
f_20554(2,t4,C_SCHEME_UNDEFINED);}}
else{
t3=(C_word)C_eqp(((C_word*)((C_word*)t0)[10])[1],lf[310]);
if(C_truep(t3)){
t4=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_20576,a[2]=((C_word*)t0)[7],a[3]=((C_word*)t0)[12],a[4]=((C_word*)t0)[8],a[5]=((C_word*)t0)[9],a[6]=((C_word*)t0)[11],tmp=(C_word)a,a+=7,tmp);
if(C_truep(((C_word*)((C_word*)t0)[8])[1])){
C_trace("ChickenBridge.scm: 370  loop-error");
f_19300(t4,((C_word*)t0)[6],((C_word*)t0)[5],(C_word)C_a_i_list(&a,1,lf[491]));}
else{
if(C_truep(((C_word*)((C_word*)t0)[11])[1])){
if(C_truep(((C_word*)((C_word*)t0)[9])[1])){
t5=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_20605,a[2]=t4,a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[9],a[5]=((C_word*)t0)[11],a[6]=((C_word*)t0)[4],tmp=(C_word)a,a+=7,tmp);
C_trace("ChickenBridge.scm: 370  make-binding");
f_19294(t5,((C_word*)((C_word*)t0)[11])[1],C_SCHEME_FALSE);}
else{
t5=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_20613,a[2]=t4,a[3]=((C_word*)t0)[4],tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 370  make-binding");
f_19294(t5,((C_word*)((C_word*)t0)[11])[1],C_SCHEME_FALSE);}}
else{
C_trace("ChickenBridge.scm: 370  loop-error");
f_19300(t4,((C_word*)t0)[6],((C_word*)t0)[5],(C_word)C_a_i_list(&a,1,lf[492]));}}}
else{
t4=(C_word)C_eqp(((C_word*)((C_word*)t0)[10])[1],lf[477]);
if(C_truep(t4)){
if(C_truep(((C_word*)((C_word*)t0)[9])[1])){
C_trace("ChickenBridge.scm: 370  loop-error");
f_19300(((C_word*)t0)[7],((C_word*)t0)[6],((C_word*)t0)[5],(C_word)C_a_i_list(&a,1,lf[493]));}
else{
t5=(C_word)C_i_car(((C_word*)((C_word*)t0)[2])[1]);
t6=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[2])[1]);
t7=C_mutate(((C_word *)((C_word*)t0)[2])+1,t6);
t8=C_mutate(((C_word *)((C_word*)t0)[9])+1,t5);
t9=((C_word*)t0)[7];
f_20545(2,t9,t8);}}
else{
if(C_truep(((C_word*)((C_word*)t0)[12])[1])){
C_trace("ChickenBridge.scm: 370  loop-error");
f_19300(((C_word*)t0)[7],((C_word*)t0)[6],((C_word*)t0)[5],(C_word)C_a_i_list(&a,3,lf[494],((C_word*)((C_word*)t0)[10])[1],lf[495]));}
else{
C_trace("ChickenBridge.scm: 370  loop-error");
f_19300(((C_word*)t0)[7],((C_word*)t0)[6],((C_word*)t0)[5],(C_word)C_a_i_list(&a,3,lf[496],((C_word*)((C_word*)t0)[10])[1],lf[497]));}}}}}

/* k20611 in k20646 in k20532 in do3463 in parse-with in k18948 in k18945 in k18942 in k18939 in k18528 in k18525 in k18522 in k18519 in k18516 in k17994 in k17991 in k17468 in k17465 in k17462 in k17459 in k17456 in k17453 in k17450 in k17447 in k17444 in k17441 in k17438 in k17435 in k17432 in k17429 in k17426 in k17423 in k17420 in k17417 in k17414 in k17411 in k17408 in k17269 in k17266 in k17263 in k17260 in k17204 in k17201 in k17198 in k17195 in k17192 in k17189 in k17186 in k17183 in k15938 in k15869 in k15676 in k15673 in k15568 in k15517 in k7924 in k7921 in k5905 in k5612 in k5609 in k5605 in k5314 in k5311 in k5308 in k5305 */
static void C_ccall f_20613(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[3],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_20613,2,t0,t1);}
t2=(C_word)C_a_i_cons(&a,2,t1,((C_word*)((C_word*)t0)[3])[1]);
t3=C_mutate(((C_word *)((C_word*)t0)[3])+1,t2);
t4=((C_word*)t0)[2];
f_20576(2,t4,((C_word*)((C_word*)t0)[3])[1]);}

/* k20603 in k20646 in k20532 in do3463 in parse-with in k18948 in k18945 in k18942 in k18939 in k18528 in k18525 in k18522 in k18519 in k18516 in k17994 in k17991 in k17468 in k17465 in k17462 in k17459 in k17456 in k17453 in k17450 in k17447 in k17444 in k17441 in k17438 in k17435 in k17432 in k17429 in k17426 in k17423 in k17420 in k17417 in k17414 in k17411 in k17408 in k17269 in k17266 in k17263 in k17260 in k17204 in k17201 in k17198 in k17195 in k17192 in k17189 in k17186 in k17183 in k15938 in k15869 in k15676 in k15673 in k15568 in k15517 in k7924 in k7921 in k5905 in k5612 in k5609 in k5605 in k5314 in k5311 in k5308 in k5305 */
static void C_ccall f_20605(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word ab[15],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_20605,2,t0,t1);}
t2=(C_word)C_a_i_cons(&a,2,t1,((C_word*)((C_word*)t0)[6])[1]);
t3=C_mutate(((C_word *)((C_word*)t0)[6])+1,t2);
t4=(C_word)C_a_i_list(&a,3,lf[12],((C_word*)((C_word*)t0)[5])[1],((C_word*)((C_word*)t0)[4])[1]);
t5=(C_word)C_a_i_cons(&a,2,t4,((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_20576(2,t7,((C_word*)((C_word*)t0)[3])[1]);}

/* k20574 in k20646 in k20532 in do3463 in parse-with in k18948 in k18945 in k18942 in k18939 in k18528 in k18525 in k18522 in k18519 in k18516 in k17994 in k17991 in k17468 in k17465 in k17462 in k17459 in k17456 in k17453 in k17450 in k17447 in k17444 in k17441 in k17438 in k17435 in k17432 in k17429 in k17426 in k17423 in k17420 in k17417 in k17414 in k17411 in k17408 in k17269 in k17266 in k17263 in k17260 in k17204 in k17201 in k17198 in k17195 in k17192 in k17189 in k17186 in k17183 in k15938 in k15869 in k15676 in k15673 in k15568 in k15517 in k7924 in k7921 in k5905 in k5612 in k5609 in k5605 in k5314 in k5311 in k5308 in k5305 */
static void C_ccall f_20576(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word *a;
t2=C_set_block_item(((C_word*)t0)[6],0,C_SCHEME_FALSE);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_FALSE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=C_set_block_item(((C_word*)t0)[3],0,C_SCHEME_TRUE);
t6=((C_word*)t0)[2];
f_20545(2,t6,t5);}

/* k20552 in k20646 in k20532 in do3463 in parse-with in k18948 in k18945 in k18942 in k18939 in k18528 in k18525 in k18522 in k18519 in k18516 in k17994 in k17991 in k17468 in k17465 in k17462 in k17459 in k17456 in k17453 in k17450 in k17447 in k17444 in k17441 in k17438 in k17435 in k17432 in k17429 in k17426 in k17423 in k17420 in k17417 in k17414 in k17411 in k17408 in k17269 in k17266 in k17263 in k17260 in k17204 in k17201 in k17198 in k17195 in k17192 in k17189 in k17186 in k17183 in k15938 in k15869 in k15676 in k15673 in k15568 in k15517 in k7924 in k7921 in k5905 in k5612 in k5609 in k5605 in k5314 in k5311 in k5308 in k5305 */
static void C_ccall f_20554(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[17],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_20554,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_20557,a[2]=((C_word*)t0)[4],a[3]=((C_word*)t0)[5],a[4]=((C_word*)t0)[6],a[5]=((C_word*)t0)[7],a[6]=((C_word*)t0)[8],a[7]=((C_word*)t0)[9],tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)((C_word*)t0)[7])[1])){
C_trace("ChickenBridge.scm: 370  loop-error");
f_19300(t2,((C_word*)t0)[3],((C_word*)t0)[2],(C_word)C_a_i_list(&a,3,lf[487],((C_word*)((C_word*)t0)[8])[1],lf[488]));}
else{
t3=t2;
f_20557(2,t3,C_SCHEME_UNDEFINED);}}

/* k20555 in k20552 in k20646 in k20532 in do3463 in parse-with in k18948 in k18945 in k18942 in k18939 in k18528 in k18525 in k18522 in k18519 in k18516 in k17994 in k17991 in k17468 in k17465 in k17462 in k17459 in k17456 in k17453 in k17450 in k17447 in k17444 in k17441 in k17438 in k17435 in k17432 in k17429 in k17426 in k17423 in k17420 in k17417 in k17414 in k17411 in k17408 in k17269 in k17266 in k17263 in k17260 in k17204 in k17201 in k17198 in k17195 in k17192 in k17189 in k17186 in k17183 in k15938 in k15869 in k15676 in k15673 in k15568 in k15517 in k7924 in k7921 in k5905 in k5612 in k5609 in k5605 in k5314 in k5311 in k5308 in k5305 */
static void C_ccall f_20557(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[7])+1,((C_word*)((C_word*)t0)[6])[1]);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_FALSE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_FALSE);
t5=C_set_block_item(((C_word*)t0)[3],0,C_SCHEME_FALSE);
t6=((C_word*)t0)[2];
f_20545(2,t6,t5);}

/* k20543 in k20532 in do3463 in parse-with in k18948 in k18945 in k18942 in k18939 in k18528 in k18525 in k18522 in k18519 in k18516 in k17994 in k17991 in k17468 in k17465 in k17462 in k17459 in k17456 in k17453 in k17450 in k17447 in k17444 in k17441 in k17438 in k17435 in k17432 in k17429 in k17426 in k17423 in k17420 in k17417 in k17414 in k17411 in k17408 in k17269 in k17266 in k17263 in k17260 in k17204 in k17201 in k17198 in k17195 in k17192 in k17189 in k17186 in k17183 in k15938 in k15869 in k15676 in k15673 in k15568 in k15517 in k7924 in k7921 in k5905 in k5612 in k5609 in k5605 in k5314 in k5311 in k5308 in k5305 */
static void C_ccall f_20545(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
t2=((C_word*)((C_word*)t0)[5])[1];
f_20524(t2,((C_word*)t0)[4],((C_word*)((C_word*)t0)[3])[1],((C_word*)((C_word*)t0)[2])[1]);}

/* k20469 in parse-with in k18948 in k18945 in k18942 in k18939 in k18528 in k18525 in k18522 in k18519 in k18516 in k17994 in k17991 in k17468 in k17465 in k17462 in k17459 in k17456 in k17453 in k17450 in k17447 in k17444 in k17441 in k17438 in k17435 in k17432 in k17429 in k17426 in k17423 in k17420 in k17417 in k17414 in k17411 in k17408 in k17269 in k17266 in k17263 in k17260 in k17204 in k17201 in k17198 in k17195 in k17192 in k17189 in k17186 in k17183 in k15938 in k15869 in k15676 in k15673 in k15568 in k15517 in k7924 in k7921 in k5905 in k5612 in k5609 in k5605 in k5314 in k5311 in k5308 in k5305 */
static void C_ccall f_20471(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[20],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_20471,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_20474,a[2]=((C_word*)t0)[7],a[3]=((C_word*)t0)[8],a[4]=((C_word*)t0)[9],a[5]=((C_word*)t0)[10],tmp=(C_word)a,a+=6,tmp);
if(C_truep(((C_word*)((C_word*)t0)[6])[1])){
C_trace("ChickenBridge.scm: 370  loop-error");
f_19300(t2,((C_word*)t0)[5],((C_word*)t0)[4],(C_word)C_a_i_list(&a,1,lf[486]));}
else{
if(C_truep(((C_word*)((C_word*)t0)[3])[1])){
if(C_truep(((C_word*)((C_word*)t0)[2])[1])){
t3=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_20514,a[2]=t2,a[3]=((C_word*)t0)[8],a[4]=((C_word*)t0)[2],a[5]=((C_word*)t0)[3],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
C_trace("ChickenBridge.scm: 370  make-binding");
f_19294(t3,((C_word*)((C_word*)t0)[3])[1],C_SCHEME_FALSE);}
else{
t3=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_20522,a[2]=t2,a[3]=((C_word*)t0)[7],tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 370  make-binding");
f_19294(t3,((C_word*)((C_word*)t0)[3])[1],C_SCHEME_FALSE);}}
else{
t3=t2;
f_20474(2,t3,C_SCHEME_UNDEFINED);}}}

/* k20520 in k20469 in parse-with in k18948 in k18945 in k18942 in k18939 in k18528 in k18525 in k18522 in k18519 in k18516 in k17994 in k17991 in k17468 in k17465 in k17462 in k17459 in k17456 in k17453 in k17450 in k17447 in k17444 in k17441 in k17438 in k17435 in k17432 in k17429 in k17426 in k17423 in k17420 in k17417 in k17414 in k17411 in k17408 in k17269 in k17266 in k17263 in k17260 in k17204 in k17201 in k17198 in k17195 in k17192 in k17189 in k17186 in k17183 in k15938 in k15869 in k15676 in k15673 in k15568 in k15517 in k7924 in k7921 in k5905 in k5612 in k5609 in k5605 in k5314 in k5311 in k5308 in k5305 */
static void C_ccall f_20522(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[3],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_20522,2,t0,t1);}
t2=(C_word)C_a_i_cons(&a,2,t1,((C_word*)((C_word*)t0)[3])[1]);
t3=C_mutate(((C_word *)((C_word*)t0)[3])+1,t2);
t4=((C_word*)t0)[2];
f_20474(2,t4,((C_word*)((C_word*)t0)[3])[1]);}

/* k20512 in k20469 in parse-with in k18948 in k18945 in k18942 in k18939 in k18528 in k18525 in k18522 in k18519 in k18516 in k17994 in k17991 in k17468 in k17465 in k17462 in k17459 in k17456 in k17453 in k17450 in k17447 in k17444 in k17441 in k17438 in k17435 in k17432 in k17429 in k17426 in k17423 in k17420 in k17417 in k17414 in k17411 in k17408 in k17269 in k17266 in k17263 in k17260 in k17204 in k17201 in k17198 in k17195 in k17192 in k17189 in k17186 in k17183 in k15938 in k15869 in k15676 in k15673 in k15568 in k15517 in k7924 in k7921 in k5905 in k5612 in k5609 in k5605 in k5314 in k5311 in k5308 in k5305 */
static void C_ccall f_20514(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word ab[15],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_20514,2,t0,t1);}
t2=(C_word)C_a_i_cons(&a,2,t1,((C_word*)((C_word*)t0)[6])[1]);
t3=C_mutate(((C_word *)((C_word*)t0)[6])+1,t2);
t4=(C_word)C_a_i_list(&a,3,lf[12],((C_word*)((C_word*)t0)[5])[1],((C_word*)((C_word*)t0)[4])[1]);
t5=(C_word)C_a_i_cons(&a,2,t4,((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_20474(2,t7,((C_word*)((C_word*)t0)[3])[1]);}

/* k20472 in k20469 in parse-with in k18948 in k18945 in k18942 in k18939 in k18528 in k18525 in k18522 in k18519 in k18516 in k17994 in k17991 in k17468 in k17465 in k17462 in k17459 in k17456 in k17453 in k17450 in k17447 in k17444 in k17441 in k17438 in k17435 in k17432 in k17429 in k17426 in k17423 in k17420 in k17417 in k17414 in k17411 in k17408 in k17269 in k17266 in k17263 in k17260 in k17204 in k17201 in k17198 in k17195 in k17192 in k17189 in k17186 in k17183 in k15938 in k15869 in k15676 in k15673 in k15568 in k15517 in k7924 in k7921 in k5905 in k5612 in k5609 in k5605 in k5314 in k5311 in k5308 in k5305 */
static void C_ccall f_20474(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[8],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_20474,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_20481,a[2]=((C_word*)t0)[4],a[3]=((C_word*)t0)[5],tmp=(C_word)a,a+=4,tmp);
t3=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_20485,a[2]=((C_word*)t0)[3],a[3]=t2,tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 370  reverse");
t4=*((C_word*)lf[164]+1);
((C_proc3)C_retrieve_proc(t4))(3,t4,t3,((C_word*)((C_word*)t0)[2])[1]);}

/* k20483 in k20472 in k20469 in parse-with in k18948 in k18945 in k18942 in k18939 in k18528 in k18525 in k18522 in k18519 in k18516 in k17994 in k17991 in k17468 in k17465 in k17462 in k17459 in k17456 in k17453 in k17450 in k17447 in k17444 in k17441 in k17438 in k17435 in k17432 in k17429 in k17426 in k17423 in k17420 in k17417 in k17414 in k17411 in k17408 in k17269 in k17266 in k17263 in k17260 in k17204 in k17201 in k17198 in k17195 in k17192 in k17189 in k17186 in k17183 in k15938 in k15869 in k15676 in k15673 in k15568 in k15517 in k7924 in k7921 in k5905 in k5612 in k5609 in k5605 in k5314 in k5311 in k5308 in k5305 */
static void C_ccall f_20485(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[4],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_20485,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_20489,a[2]=t1,a[3]=((C_word*)t0)[3],tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 370  reverse");
t3=*((C_word*)lf[164]+1);
((C_proc3)C_retrieve_proc(t3))(3,t3,t2,((C_word*)((C_word*)t0)[2])[1]);}

/* k20487 in k20483 in k20472 in k20469 in parse-with in k18948 in k18945 in k18942 in k18939 in k18528 in k18525 in k18522 in k18519 in k18516 in k17994 in k17991 in k17468 in k17465 in k17462 in k17459 in k17456 in k17453 in k17450 in k17447 in k17444 in k17441 in k17438 in k17435 in k17432 in k17429 in k17426 in k17423 in k17420 in k17417 in k17414 in k17411 in k17408 in k17269 in k17266 in k17263 in k17260 in k17204 in k17201 in k17198 in k17195 in k17192 in k17189 in k17186 in k17183 in k15938 in k15869 in k15676 in k15673 in k15568 in k15517 in k7924 in k7921 in k5905 in k5612 in k5609 in k5605 in k5314 in k5311 in k5308 in k5305 */
static void C_ccall f_20489(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word ab[18],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_20489,2,t0,t1);}
C_trace("ChickenBridge.scm: 370  make-loop-clause");
f_19060(((C_word*)t0)[3],(C_word)C_a_i_list(&a,6,lf[393],lf[485],lf[394],((C_word*)t0)[2],lf[396],t1));}

/* k20479 in k20472 in k20469 in parse-with in k18948 in k18945 in k18942 in k18939 in k18528 in k18525 in k18522 in k18519 in k18516 in k17994 in k17991 in k17468 in k17465 in k17462 in k17459 in k17456 in k17453 in k17450 in k17447 in k17444 in k17441 in k17438 in k17435 in k17432 in k17429 in k17426 in k17423 in k17420 in k17417 in k17414 in k17411 in k17408 in k17269 in k17266 in k17263 in k17260 in k17204 in k17201 in k17198 in k17195 in k17192 in k17189 in k17186 in k17183 in k15938 in k15869 in k15676 in k15673 in k15568 in k15517 in k7924 in k7921 in k5905 in k5612 in k5609 in k5605 in k5314 in k5311 in k5308 in k5305 */
static void C_ccall f_20481(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 370  values");
C_values(4,0,((C_word*)t0)[3],t1,((C_word*)((C_word*)t0)[2])[1]);}

/* parse-general-iteration in k18948 in k18945 in k18942 in k18939 in k18528 in k18525 in k18522 in k18519 in k18516 in k17994 in k17991 in k17468 in k17465 in k17462 in k17459 in k17456 in k17453 in k17450 in k17447 in k17444 in k17441 in k17438 in k17435 in k17432 in k17429 in k17426 in k17423 in k17420 in k17417 in k17414 in k17411 in k17408 in k17269 in k17266 in k17263 in k17260 in k17204 in k17201 in k17198 in k17195 in k17192 in k17189 in k17186 in k17183 in k15938 in k15869 in k15676 in k15673 in k15568 in k15517 in k7924 in k7921 in k5905 in k5612 in k5609 in k5605 in k5314 in k5311 in k5308 in k5305 */
static void C_ccall f_20322(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4){
C_word tmp;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word t14;
C_word t15;
C_word t16;
C_word t17;
C_word t18;
C_word t19;
C_word t20;
C_word t21;
C_word t22;
C_word ab[32],*a=ab;
if(c!=5) C_bad_argc_2(c,5,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr5,(void*)f_20322,5,t0,t1,t2,t3,t4);}
t5=t2;
t6=(C_word)C_i_cadr(t2);
t7=(C_word)C_i_cddr(t2);
t8=t7;
t9=(*a=C_VECTOR_TYPE|1,a[1]=t8,tmp=(C_word)a,a+=2,tmp);
t10=C_SCHEME_FALSE;
t11=(*a=C_VECTOR_TYPE|1,a[1]=t10,tmp=(C_word)a,a+=2,tmp);
t12=C_SCHEME_FALSE;
t13=(*a=C_VECTOR_TYPE|1,a[1]=t12,tmp=(C_word)a,a+=2,tmp);
t14=C_SCHEME_FALSE;
t15=(*a=C_VECTOR_TYPE|1,a[1]=t14,tmp=(C_word)a,a+=2,tmp);
t16=C_SCHEME_FALSE;
t17=(*a=C_VECTOR_TYPE|1,a[1]=t16,tmp=(C_word)a,a+=2,tmp);
t18=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_20332,a[2]=t6,a[3]=t17,a[4]=t15,a[5]=t11,a[6]=t9,a[7]=t1,tmp=(C_word)a,a+=8,tmp);
t19=C_SCHEME_UNDEFINED;
t20=(*a=C_VECTOR_TYPE|1,a[1]=t19,tmp=(C_word)a,a+=2,tmp);
t21=C_set_block_item(t20,0,(*a=C_CLOSURE_TYPE|11,a[1]=(C_word)f_20370,a[2]=t17,a[3]=t11,a[4]=t5,a[5]=t4,a[6]=t13,a[7]=t15,a[8]=t6,a[9]=t20,a[10]=t9,a[11]=((C_word)li306),tmp=(C_word)a,a+=12,tmp));
t22=((C_word*)t20)[1];
f_20370(t22,t18,C_SCHEME_FALSE);}

/* do3425 in parse-general-iteration in k18948 in k18945 in k18942 in k18939 in k18528 in k18525 in k18522 in k18519 in k18516 in k17994 in k17991 in k17468 in k17465 in k17462 in k17459 in k17456 in k17453 in k17450 in k17447 in k17444 in k17441 in k17438 in k17435 in k17432 in k17429 in k17426 in k17423 in k17420 in k17417 in k17414 in k17411 in k17408 in k17269 in k17266 in k17263 in k17260 in k17204 in k17201 in k17198 in k17195 in k17192 in k17189 in k17186 in k17183 in k15938 in k15869 in k15676 in k15673 in k15568 in k15517 in k7924 in k7921 in k5905 in k5612 in k5609 in k5605 in k5314 in k5311 in k5308 in k5305 */
static void C_fcall f_20370(C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word ab[15],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_20370,NULL,3,t0,t1,t2);}
t3=(*a=C_VECTOR_TYPE|1,a[1]=t2,tmp=(C_word)a,a+=2,tmp);
t4=(C_word)C_i_nullp(((C_word*)((C_word*)t0)[10])[1]);
t5=(*a=C_CLOSURE_TYPE|12,a[1]=(C_word)f_20380,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],a[7]=((C_word*)t0)[7],a[8]=((C_word*)t0)[8],a[9]=((C_word*)t0)[9],a[10]=t3,a[11]=((C_word*)t0)[10],a[12]=t1,tmp=(C_word)a,a+=13,tmp);
if(C_truep(t4)){
t6=t5;
f_20380(2,t6,t4);}
else{
t6=(C_word)C_i_car(((C_word*)((C_word*)t0)[10])[1]);
C_trace("ChickenBridge.scm: 370  loop-op?");
f_19282(t5,t6,((C_word*)t0)[5]);}}

/* k20378 in do3425 in parse-general-iteration in k18948 in k18945 in k18942 in k18939 in k18528 in k18525 in k18522 in k18519 in k18516 in k17994 in k17991 in k17468 in k17465 in k17462 in k17459 in k17456 in k17453 in k17450 in k17447 in k17444 in k17441 in k17438 in k17435 in k17432 in k17429 in k17426 in k17423 in k17420 in k17417 in k17414 in k17411 in k17408 in k17269 in k17266 in k17263 in k17260 in k17204 in k17201 in k17198 in k17195 in k17192 in k17189 in k17186 in k17183 in k15938 in k15869 in k15676 in k15673 in k15568 in k15517 in k7924 in k7921 in k5905 in k5612 in k5609 in k5605 in k5314 in k5311 in k5308 in k5305 */
static void C_ccall f_20380(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word ab[16],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_20380,2,t0,t1);}
if(C_truep(t1)){
t2=((C_word*)t0)[12];
((C_proc2)(void*)(*((C_word*)t2+1)))(2,t2,C_SCHEME_UNDEFINED);}
else{
t2=(C_word)C_i_car(((C_word*)((C_word*)t0)[11])[1]);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[11])[1]);
t4=C_mutate(((C_word *)((C_word*)t0)[11])+1,t3);
t5=C_mutate(((C_word *)((C_word*)t0)[10])+1,t2);
t6=(*a=C_CLOSURE_TYPE|12,a[1]=(C_word)f_20391,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],a[7]=((C_word*)t0)[7],a[8]=((C_word*)t0)[8],a[9]=((C_word*)t0)[11],a[10]=((C_word*)t0)[12],a[11]=((C_word*)t0)[9],a[12]=((C_word*)t0)[10],tmp=(C_word)a,a+=13,tmp);
if(C_truep((C_word)C_i_nullp(((C_word*)((C_word*)t0)[11])[1]))){
C_trace("ChickenBridge.scm: 370  loop-error");
f_19300(t6,((C_word*)t0)[5],((C_word*)t0)[4],(C_word)C_a_i_list(&a,1,lf[483]));}
else{
t7=t6;
f_20391(2,t7,C_SCHEME_UNDEFINED);}}}

/* k20389 in k20378 in do3425 in parse-general-iteration in k18948 in k18945 in k18942 in k18939 in k18528 in k18525 in k18522 in k18519 in k18516 in k17994 in k17991 in k17468 in k17465 in k17462 in k17459 in k17456 in k17453 in k17450 in k17447 in k17444 in k17441 in k17438 in k17435 in k17432 in k17429 in k17426 in k17423 in k17420 in k17417 in k17414 in k17411 in k17408 in k17269 in k17266 in k17263 in k17260 in k17204 in k17201 in k17198 in k17195 in k17192 in k17189 in k17186 in k17183 in k15938 in k15869 in k15676 in k15673 in k15568 in k15517 in k7924 in k7921 in k5905 in k5612 in k5609 in k5605 in k5314 in k5311 in k5308 in k5305 */
static void C_ccall f_20391(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word ab[38],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_20391,2,t0,t1);}
t2=((C_word*)((C_word*)t0)[12])[1];
t3=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_20394,a[2]=((C_word*)t0)[12],a[3]=((C_word*)t0)[10],a[4]=((C_word*)t0)[11],tmp=(C_word)a,a+=5,tmp);
t4=(C_word)C_eqp(t2,lf[477]);
if(C_truep(t4)){
t5=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_20403,a[2]=t3,a[3]=((C_word*)t0)[12],a[4]=((C_word*)t0)[6],a[5]=((C_word*)t0)[7],a[6]=((C_word*)t0)[8],a[7]=((C_word*)t0)[9],tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)((C_word*)t0)[6])[1])){
C_trace("ChickenBridge.scm: 370  loop-error");
f_19300(t5,((C_word*)t0)[5],((C_word*)t0)[4],(C_word)C_a_i_list(&a,1,lf[478]));}
else{
t6=t5;
f_20403(2,t6,C_SCHEME_UNDEFINED);}}
else{
t5=(C_word)C_eqp(t2,lf[479]);
if(C_truep(t5)){
t6=(*a=C_CLOSURE_TYPE|9,a[1]=(C_word)f_20428,a[2]=t3,a[3]=((C_word*)t0)[12],a[4]=((C_word*)t0)[6],a[5]=((C_word*)t0)[2],a[6]=((C_word*)t0)[8],a[7]=((C_word*)t0)[9],a[8]=((C_word*)t0)[7],a[9]=((C_word*)t0)[3],tmp=(C_word)a,a+=10,tmp);
if(C_truep(((C_word*)((C_word*)t0)[3])[1])){
C_trace("ChickenBridge.scm: 370  loop-error");
f_19300(t6,((C_word*)t0)[5],((C_word*)t0)[4],(C_word)C_a_i_list(&a,1,lf[480]));}
else{
t7=t6;
f_20428(2,t7,C_SCHEME_UNDEFINED);}}
else{
C_trace("ChickenBridge.scm: 370  loop-error");
f_19300(t3,((C_word*)t0)[5],((C_word*)t0)[4],(C_word)C_a_i_list(&a,3,lf[481],((C_word*)((C_word*)t0)[12])[1],lf[482]));}}}

/* k20426 in k20389 in k20378 in do3425 in parse-general-iteration in k18948 in k18945 in k18942 in k18939 in k18528 in k18525 in k18522 in k18519 in k18516 in k17994 in k17991 in k17468 in k17465 in k17462 in k17459 in k17456 in k17453 in k17450 in k17447 in k17444 in k17441 in k17438 in k17435 in k17432 in k17429 in k17426 in k17423 in k17420 in k17417 in k17414 in k17411 in k17408 in k17269 in k17266 in k17263 in k17260 in k17204 in k17201 in k17198 in k17195 in k17192 in k17189 in k17186 in k17183 in k15938 in k15869 in k15676 in k15673 in k15568 in k15517 in k7924 in k7921 in k5905 in k5612 in k5609 in k5605 in k5314 in k5311 in k5308 in k5305 */
static void C_ccall f_20428(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_20428,2,t0,t1);}
t2=C_mutate(((C_word *)((C_word*)t0)[9])+1,((C_word*)((C_word*)t0)[8])[1]);
t3=C_set_block_item(((C_word*)t0)[8],0,C_SCHEME_FALSE);
t4=(C_word)C_i_car(((C_word*)((C_word*)t0)[7])[1]);
t5=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[7])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[7])+1,t5);
t7=(C_word)C_a_i_list(&a,3,lf[12],((C_word*)t0)[6],t4);
t8=C_mutate(((C_word *)((C_word*)t0)[5])+1,t7);
t9=C_mutate(((C_word *)((C_word*)t0)[4])+1,((C_word*)((C_word*)t0)[3])[1]);
t10=((C_word*)t0)[2];
f_20394(2,t10,t9);}

/* k20401 in k20389 in k20378 in do3425 in parse-general-iteration in k18948 in k18945 in k18942 in k18939 in k18528 in k18525 in k18522 in k18519 in k18516 in k17994 in k17991 in k17468 in k17465 in k17462 in k17459 in k17456 in k17453 in k17450 in k17447 in k17444 in k17441 in k17438 in k17435 in k17432 in k17429 in k17426 in k17423 in k17420 in k17417 in k17414 in k17411 in k17408 in k17269 in k17266 in k17263 in k17260 in k17204 in k17201 in k17198 in k17195 in k17192 in k17189 in k17186 in k17183 in k15938 in k15869 in k15676 in k15673 in k15568 in k15517 in k7924 in k7921 in k5905 in k5612 in k5609 in k5605 in k5314 in k5311 in k5308 in k5305 */
static void C_ccall f_20403(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_20403,2,t0,t1);}
t2=(C_word)C_i_car(((C_word*)((C_word*)t0)[7])[1]);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[7])[1]);
t4=C_mutate(((C_word *)((C_word*)t0)[7])+1,t3);
t5=(C_word)C_a_i_list(&a,3,lf[12],((C_word*)t0)[6],t2);
t6=C_mutate(((C_word *)((C_word*)t0)[5])+1,t5);
t7=C_mutate(((C_word *)((C_word*)t0)[4])+1,((C_word*)((C_word*)t0)[3])[1]);
t8=((C_word*)t0)[2];
f_20394(2,t8,t7);}

/* k20392 in k20389 in k20378 in do3425 in parse-general-iteration in k18948 in k18945 in k18942 in k18939 in k18528 in k18525 in k18522 in k18519 in k18516 in k17994 in k17991 in k17468 in k17465 in k17462 in k17459 in k17456 in k17453 in k17450 in k17447 in k17444 in k17441 in k17438 in k17435 in k17432 in k17429 in k17426 in k17423 in k17420 in k17417 in k17414 in k17411 in k17408 in k17269 in k17266 in k17263 in k17260 in k17204 in k17201 in k17198 in k17195 in k17192 in k17189 in k17186 in k17183 in k15938 in k15869 in k15676 in k15673 in k15568 in k15517 in k7924 in k7921 in k5905 in k5612 in k5609 in k5605 in k5314 in k5311 in k5308 in k5305 */
static void C_ccall f_20394(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
t2=((C_word*)((C_word*)t0)[4])[1];
f_20370(t2,((C_word*)t0)[3],((C_word*)((C_word*)t0)[2])[1]);}

/* k20330 in parse-general-iteration in k18948 in k18945 in k18942 in k18939 in k18528 in k18525 in k18522 in k18519 in k18516 in k17994 in k17991 in k17468 in k17465 in k17462 in k17459 in k17456 in k17453 in k17450 in k17447 in k17444 in k17441 in k17438 in k17435 in k17432 in k17429 in k17426 in k17423 in k17420 in k17417 in k17414 in k17411 in k17408 in k17269 in k17266 in k17263 in k17260 in k17204 in k17201 in k17198 in k17195 in k17192 in k17189 in k17186 in k17183 in k15938 in k15869 in k15676 in k15673 in k15568 in k15517 in k7924 in k7921 in k5905 in k5612 in k5609 in k5605 in k5314 in k5311 in k5308 in k5305 */
static void C_ccall f_20332(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[10],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_20332,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_20339,a[2]=((C_word*)t0)[6],a[3]=((C_word*)t0)[7],tmp=(C_word)a,a+=4,tmp);
t3=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_20368,a[2]=t2,a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],tmp=(C_word)a,a+=6,tmp);
C_trace("ChickenBridge.scm: 370  make-binding");
f_19294(t3,((C_word*)t0)[2],C_SCHEME_FALSE);}

/* k20366 in k20330 in parse-general-iteration in k18948 in k18945 in k18942 in k18939 in k18528 in k18525 in k18522 in k18519 in k18516 in k17994 in k17991 in k17468 in k17465 in k17462 in k17459 in k17456 in k17453 in k17450 in k17447 in k17444 in k17441 in k17438 in k17435 in k17432 in k17429 in k17426 in k17423 in k17420 in k17417 in k17414 in k17411 in k17408 in k17269 in k17266 in k17263 in k17260 in k17204 in k17201 in k17198 in k17195 in k17192 in k17189 in k17186 in k17183 in k15938 in k15869 in k15676 in k15673 in k15568 in k15517 in k7924 in k7921 in k5905 in k5612 in k5609 in k5605 in k5314 in k5311 in k5308 in k5305 */
static void C_ccall f_20368(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[42],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_20368,2,t0,t1);}
t2=(C_word)C_a_i_list(&a,1,t1);
t3=(C_truep(((C_word*)((C_word*)t0)[5])[1])?(C_word)C_a_i_list(&a,1,((C_word*)((C_word*)t0)[5])[1]):C_SCHEME_END_OF_LIST);
t4=(C_truep(((C_word*)((C_word*)t0)[4])[1])?(C_word)C_a_i_list(&a,1,((C_word*)((C_word*)t0)[4])[1]):C_SCHEME_END_OF_LIST);
t5=(C_truep(((C_word*)((C_word*)t0)[3])[1])?(C_word)C_a_i_list(&a,1,((C_word*)((C_word*)t0)[3])[1]):C_SCHEME_END_OF_LIST);
C_trace("ChickenBridge.scm: 370  make-loop-clause");
f_19060(((C_word*)t0)[2],(C_word)C_a_i_list(&a,10,lf[393],lf[425],lf[394],t2,lf[396],t3,lf[398],t4,lf[399],t5));}

/* k20337 in k20330 in parse-general-iteration in k18948 in k18945 in k18942 in k18939 in k18528 in k18525 in k18522 in k18519 in k18516 in k17994 in k17991 in k17468 in k17465 in k17462 in k17459 in k17456 in k17453 in k17450 in k17447 in k17444 in k17441 in k17438 in k17435 in k17432 in k17429 in k17426 in k17423 in k17420 in k17417 in k17414 in k17411 in k17408 in k17269 in k17266 in k17263 in k17260 in k17204 in k17201 in k17198 in k17195 in k17192 in k17189 in k17186 in k17183 in k15938 in k15869 in k15676 in k15673 in k15568 in k15517 in k7924 in k7921 in k5905 in k5612 in k5609 in k5605 in k5314 in k5311 in k5308 in k5305 */
static void C_ccall f_20339(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 370  values");
C_values(4,0,((C_word*)t0)[3],t1,((C_word*)((C_word*)t0)[2])[1]);}

/* parse-sequence-iteration in k18948 in k18945 in k18942 in k18939 in k18528 in k18525 in k18522 in k18519 in k18516 in k17994 in k17991 in k17468 in k17465 in k17462 in k17459 in k17456 in k17453 in k17450 in k17447 in k17444 in k17441 in k17438 in k17435 in k17432 in k17429 in k17426 in k17423 in k17420 in k17417 in k17414 in k17411 in k17408 in k17269 in k17266 in k17263 in k17260 in k17204 in k17201 in k17198 in k17195 in k17192 in k17189 in k17186 in k17183 in k15938 in k15869 in k15676 in k15673 in k15568 in k15517 in k7924 in k7921 in k5905 in k5612 in k5609 in k5605 in k5314 in k5311 in k5308 in k5305 */
static void C_ccall f_19971(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4){
C_word tmp;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word ab[7],*a=ab;
if(c!=5) C_bad_argc_2(c,5,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr5,(void*)f_19971,5,t0,t1,t2,t3,t4);}
t5=t2;
t6=(C_word)C_i_cadr(t2);
t7=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_19978,a[2]=t5,a[3]=t4,a[4]=t6,a[5]=t1,a[6]=t2,tmp=(C_word)a,a+=7,tmp);
C_trace("ChickenBridge.scm: 370  gensym");
t8=C_retrieve(lf[26]);
((C_proc3)C_retrieve_proc(t8))(3,t8,t7,lf[475]);}

/* k19976 in parse-sequence-iteration in k18948 in k18945 in k18942 in k18939 in k18528 in k18525 in k18522 in k18519 in k18516 in k17994 in k17991 in k17468 in k17465 in k17462 in k17459 in k17456 in k17453 in k17450 in k17447 in k17444 in k17441 in k17438 in k17435 in k17432 in k17429 in k17426 in k17423 in k17420 in k17417 in k17414 in k17411 in k17408 in k17269 in k17266 in k17263 in k17260 in k17204 in k17201 in k17198 in k17195 in k17192 in k17189 in k17186 in k17183 in k15938 in k15869 in k15676 in k15673 in k15568 in k15517 in k7924 in k7921 in k5905 in k5612 in k5609 in k5605 in k5314 in k5311 in k5308 in k5305 */
static void C_ccall f_19978(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word t14;
C_word t15;
C_word t16;
C_word t17;
C_word t18;
C_word t19;
C_word t20;
C_word t21;
C_word t22;
C_word t23;
C_word t24;
C_word t25;
C_word ab[44],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_19978,2,t0,t1);}
t2=(C_word)C_i_cddr(((C_word*)t0)[6]);
t3=t2;
t4=(*a=C_VECTOR_TYPE|1,a[1]=t3,tmp=(C_word)a,a+=2,tmp);
t5=C_SCHEME_END_OF_LIST;
t6=(*a=C_VECTOR_TYPE|1,a[1]=t5,tmp=(C_word)a,a+=2,tmp);
t7=C_SCHEME_FALSE;
t8=(*a=C_VECTOR_TYPE|1,a[1]=t7,tmp=(C_word)a,a+=2,tmp);
t9=C_SCHEME_END_OF_LIST;
t10=(*a=C_VECTOR_TYPE|1,a[1]=t9,tmp=(C_word)a,a+=2,tmp);
t11=C_SCHEME_END_OF_LIST;
t12=(*a=C_VECTOR_TYPE|1,a[1]=t11,tmp=(C_word)a,a+=2,tmp);
t13=C_SCHEME_FALSE;
t14=(*a=C_VECTOR_TYPE|1,a[1]=t13,tmp=(C_word)a,a+=2,tmp);
t15=C_SCHEME_END_OF_LIST;
t16=(*a=C_VECTOR_TYPE|1,a[1]=t15,tmp=(C_word)a,a+=2,tmp);
t17=C_SCHEME_END_OF_LIST;
t18=(*a=C_VECTOR_TYPE|1,a[1]=t17,tmp=(C_word)a,a+=2,tmp);
t19=C_SCHEME_FALSE;
t20=(*a=C_VECTOR_TYPE|1,a[1]=t19,tmp=(C_word)a,a+=2,tmp);
t21=(*a=C_CLOSURE_TYPE|13,a[1]=(C_word)f_19984,a[2]=t8,a[3]=t14,a[4]=((C_word*)t0)[4],a[5]=t1,a[6]=t20,a[7]=t18,a[8]=t12,a[9]=t10,a[10]=t16,a[11]=t4,a[12]=((C_word*)t0)[5],a[13]=t6,tmp=(C_word)a,a+=14,tmp);
t22=C_SCHEME_UNDEFINED;
t23=(*a=C_VECTOR_TYPE|1,a[1]=t22,tmp=(C_word)a,a+=2,tmp);
t24=C_set_block_item(t23,0,(*a=C_CLOSURE_TYPE|9,a[1]=(C_word)f_20212,a[2]=t14,a[3]=((C_word*)t0)[2],a[4]=((C_word*)t0)[3],a[5]=t8,a[6]=t20,a[7]=t23,a[8]=t4,a[9]=((C_word)li304),tmp=(C_word)a,a+=10,tmp));
t25=((C_word*)t23)[1];
f_20212(t25,t21,C_SCHEME_FALSE);}

/* do3358 in k19976 in parse-sequence-iteration in k18948 in k18945 in k18942 in k18939 in k18528 in k18525 in k18522 in k18519 in k18516 in k17994 in k17991 in k17468 in k17465 in k17462 in k17459 in k17456 in k17453 in k17450 in k17447 in k17444 in k17441 in k17438 in k17435 in k17432 in k17429 in k17426 in k17423 in k17420 in k17417 in k17414 in k17411 in k17408 in k17269 in k17266 in k17263 in k17260 in k17204 in k17201 in k17198 in k17195 in k17192 in k17189 in k17186 in k17183 in k15938 in k15869 in k15676 in k15673 in k15568 in k15517 in k7924 in k7921 in k5905 in k5612 in k5609 in k5605 in k5314 in k5311 in k5308 in k5305 */
static void C_fcall f_20212(C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word ab[13],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_20212,NULL,3,t0,t1,t2);}
t3=(*a=C_VECTOR_TYPE|1,a[1]=t2,tmp=(C_word)a,a+=2,tmp);
t4=(C_word)C_i_nullp(((C_word*)((C_word*)t0)[8])[1]);
t5=(*a=C_CLOSURE_TYPE|10,a[1]=(C_word)f_20222,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],a[7]=((C_word*)t0)[7],a[8]=t3,a[9]=((C_word*)t0)[8],a[10]=t1,tmp=(C_word)a,a+=11,tmp);
if(C_truep(t4)){
t6=t5;
f_20222(2,t6,t4);}
else{
t6=(C_word)C_i_car(((C_word*)((C_word*)t0)[8])[1]);
C_trace("ChickenBridge.scm: 370  loop-op?");
f_19282(t5,t6,((C_word*)t0)[4]);}}

/* k20220 in do3358 in k19976 in parse-sequence-iteration in k18948 in k18945 in k18942 in k18939 in k18528 in k18525 in k18522 in k18519 in k18516 in k17994 in k17991 in k17468 in k17465 in k17462 in k17459 in k17456 in k17453 in k17450 in k17447 in k17444 in k17441 in k17438 in k17435 in k17432 in k17429 in k17426 in k17423 in k17420 in k17417 in k17414 in k17411 in k17408 in k17269 in k17266 in k17263 in k17260 in k17204 in k17201 in k17198 in k17195 in k17192 in k17189 in k17186 in k17183 in k15938 in k15869 in k15676 in k15673 in k15568 in k15517 in k7924 in k7921 in k5905 in k5612 in k5609 in k5605 in k5314 in k5311 in k5308 in k5305 */
static void C_ccall f_20222(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word ab[14],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_20222,2,t0,t1);}
if(C_truep(t1)){
t2=((C_word*)t0)[10];
((C_proc2)(void*)(*((C_word*)t2+1)))(2,t2,C_SCHEME_UNDEFINED);}
else{
t2=(C_word)C_i_car(((C_word*)((C_word*)t0)[9])[1]);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[9])[1]);
t4=C_mutate(((C_word *)((C_word*)t0)[9])+1,t3);
t5=C_mutate(((C_word *)((C_word*)t0)[8])+1,t2);
t6=(*a=C_CLOSURE_TYPE|10,a[1]=(C_word)f_20233,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[9],a[7]=((C_word*)t0)[6],a[8]=((C_word*)t0)[10],a[9]=((C_word*)t0)[7],a[10]=((C_word*)t0)[8],tmp=(C_word)a,a+=11,tmp);
if(C_truep((C_word)C_i_nullp(((C_word*)((C_word*)t0)[9])[1]))){
C_trace("ChickenBridge.scm: 370  loop-error");
f_19300(t6,((C_word*)t0)[4],((C_word*)t0)[3],(C_word)C_a_i_list(&a,1,lf[474]));}
else{
t7=t6;
f_20233(2,t7,C_SCHEME_UNDEFINED);}}}

/* k20231 in k20220 in do3358 in k19976 in parse-sequence-iteration in k18948 in k18945 in k18942 in k18939 in k18528 in k18525 in k18522 in k18519 in k18516 in k17994 in k17991 in k17468 in k17465 in k17462 in k17459 in k17456 in k17453 in k17450 in k17447 in k17444 in k17441 in k17438 in k17435 in k17432 in k17429 in k17426 in k17423 in k17420 in k17417 in k17414 in k17411 in k17408 in k17269 in k17266 in k17263 in k17260 in k17204 in k17201 in k17198 in k17195 in k17192 in k17189 in k17186 in k17183 in k15938 in k15869 in k15676 in k15673 in k15568 in k15517 in k7924 in k7921 in k5905 in k5612 in k5609 in k5605 in k5314 in k5311 in k5308 in k5305 */
static void C_ccall f_20233(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word ab[16],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_20233,2,t0,t1);}
t2=((C_word*)((C_word*)t0)[10])[1];
t3=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_20236,a[2]=((C_word*)t0)[10],a[3]=((C_word*)t0)[8],a[4]=((C_word*)t0)[9],tmp=(C_word)a,a+=5,tmp);
t4=(C_word)C_eqp(t2,lf[464]);
t5=(*a=C_CLOSURE_TYPE|10,a[1]=(C_word)f_20245,a[2]=((C_word*)t0)[2],a[3]=t2,a[4]=((C_word*)t0)[3],a[5]=((C_word*)t0)[4],a[6]=t3,a[7]=((C_word*)t0)[5],a[8]=((C_word*)t0)[6],a[9]=((C_word*)t0)[10],a[10]=((C_word*)t0)[7],tmp=(C_word)a,a+=11,tmp);
if(C_truep(t4)){
t6=t5;
f_20245(t6,t4);}
else{
t6=(C_word)C_eqp(t2,lf[473]);
if(C_truep(t6)){
t7=t5;
f_20245(t7,t6);}
else{
t7=(C_word)C_eqp(t2,lf[458]);
t8=t5;
f_20245(t8,(C_truep(t7)?t7:(C_word)C_eqp(t2,lf[463])));}}}

/* k20243 in k20231 in k20220 in do3358 in k19976 in parse-sequence-iteration in k18948 in k18945 in k18942 in k18939 in k18528 in k18525 in k18522 in k18519 in k18516 in k17994 in k17991 in k17468 in k17465 in k17462 in k17459 in k17456 in k17453 in k17450 in k17447 in k17444 in k17441 in k17438 in k17435 in k17432 in k17429 in k17426 in k17423 in k17420 in k17417 in k17414 in k17411 in k17408 in k17269 in k17266 in k17263 in k17260 in k17204 in k17201 in k17198 in k17195 in k17192 in k17189 in k17186 in k17183 in k15938 in k15869 in k15676 in k15673 in k15568 in k15517 in k7924 in k7921 in k5905 in k5612 in k5609 in k5605 in k5314 in k5311 in k5308 in k5305 */
static void C_fcall f_20245(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word ab[37],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_20245,NULL,2,t0,t1);}
if(C_truep(t1)){
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_20248,a[2]=((C_word*)t0)[6],a[3]=((C_word*)t0)[7],a[4]=((C_word*)t0)[8],a[5]=((C_word*)t0)[9],a[6]=((C_word*)t0)[10],tmp=(C_word)a,a+=7,tmp);
if(C_truep(((C_word*)((C_word*)t0)[10])[1])){
C_trace("ChickenBridge.scm: 370  loop-error");
f_19300(t2,((C_word*)t0)[5],((C_word*)t0)[4],(C_word)C_a_i_list(&a,5,lf[466],((C_word*)((C_word*)t0)[9])[1],lf[467],((C_word*)((C_word*)t0)[10])[1],lf[468]));}
else{
t3=t2;
f_20248(2,t3,C_SCHEME_UNDEFINED);}}
else{
t2=(C_word)C_eqp(((C_word*)t0)[3],lf[449]);
if(C_truep(t2)){
if(C_truep(((C_word*)((C_word*)t0)[2])[1])){
C_trace("ChickenBridge.scm: 370  loop-error");
f_19300(((C_word*)t0)[6],((C_word*)t0)[5],((C_word*)t0)[4],(C_word)C_a_i_list(&a,1,lf[469]));}
else{
t3=(C_word)C_eqp(((C_word*)((C_word*)t0)[10])[1],lf[458]);
if(C_truep(t3)){
C_trace("ChickenBridge.scm: 370  loop-error");
f_19300(((C_word*)t0)[6],((C_word*)t0)[5],((C_word*)t0)[4],(C_word)C_a_i_list(&a,1,lf[470]));}
else{
t4=(C_word)C_i_car(((C_word*)((C_word*)t0)[8])[1]);
t5=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[8])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[8])+1,t5);
t7=C_mutate(((C_word *)((C_word*)t0)[2])+1,t4);
t8=((C_word*)t0)[6];
f_20236(2,t8,t7);}}}
else{
C_trace("ChickenBridge.scm: 370  loop-error");
f_19300(((C_word*)t0)[6],((C_word*)t0)[5],((C_word*)t0)[4],(C_word)C_a_i_list(&a,3,lf[471],((C_word*)((C_word*)t0)[9])[1],lf[472]));}}}

/* k20246 in k20243 in k20231 in k20220 in do3358 in k19976 in parse-sequence-iteration in k18948 in k18945 in k18942 in k18939 in k18528 in k18525 in k18522 in k18519 in k18516 in k17994 in k17991 in k17468 in k17465 in k17462 in k17459 in k17456 in k17453 in k17450 in k17447 in k17444 in k17441 in k17438 in k17435 in k17432 in k17429 in k17426 in k17423 in k17420 in k17417 in k17414 in k17411 in k17408 in k17269 in k17266 in k17263 in k17260 in k17204 in k17201 in k17198 in k17195 in k17192 in k17189 in k17186 in k17183 in k15938 in k15869 in k15676 in k15673 in k15568 in k15517 in k7924 in k7921 in k5905 in k5612 in k5609 in k5605 in k5314 in k5311 in k5308 in k5305 */
static void C_ccall f_20248(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,((C_word*)((C_word*)t0)[5])[1]);
t3=(C_word)C_i_car(((C_word*)((C_word*)t0)[4])[1]);
t4=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
t5=C_mutate(((C_word *)((C_word*)t0)[4])+1,t4);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t3);
t7=((C_word*)t0)[2];
f_20236(2,t7,t6);}

/* k20234 in k20231 in k20220 in do3358 in k19976 in parse-sequence-iteration in k18948 in k18945 in k18942 in k18939 in k18528 in k18525 in k18522 in k18519 in k18516 in k17994 in k17991 in k17468 in k17465 in k17462 in k17459 in k17456 in k17453 in k17450 in k17447 in k17444 in k17441 in k17438 in k17435 in k17432 in k17429 in k17426 in k17423 in k17420 in k17417 in k17414 in k17411 in k17408 in k17269 in k17266 in k17263 in k17260 in k17204 in k17201 in k17198 in k17195 in k17192 in k17189 in k17186 in k17183 in k15938 in k15869 in k15676 in k15673 in k15568 in k15517 in k7924 in k7921 in k5905 in k5612 in k5609 in k5605 in k5314 in k5311 in k5308 in k5305 */
static void C_ccall f_20236(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
t2=((C_word*)((C_word*)t0)[4])[1];
f_20212(t2,((C_word*)t0)[3],((C_word*)((C_word*)t0)[2])[1]);}

/* k19982 in k19976 in parse-sequence-iteration in k18948 in k18945 in k18942 in k18939 in k18528 in k18525 in k18522 in k18519 in k18516 in k17994 in k17991 in k17468 in k17465 in k17462 in k17459 in k17456 in k17453 in k17450 in k17447 in k17444 in k17441 in k17438 in k17435 in k17432 in k17429 in k17426 in k17423 in k17420 in k17417 in k17414 in k17411 in k17408 in k17269 in k17266 in k17263 in k17260 in k17204 in k17201 in k17198 in k17195 in k17192 in k17189 in k17186 in k17183 in k15938 in k15869 in k15676 in k15673 in k15568 in k15517 in k7924 in k7921 in k5905 in k5612 in k5609 in k5605 in k5314 in k5311 in k5308 in k5305 */
static void C_ccall f_19984(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[14],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_19984,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|13,a[1]=(C_word)f_20210,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],a[7]=((C_word*)t0)[7],a[8]=((C_word*)t0)[8],a[9]=((C_word*)t0)[9],a[10]=((C_word*)t0)[10],a[11]=((C_word*)t0)[11],a[12]=((C_word*)t0)[12],a[13]=((C_word*)t0)[13],tmp=(C_word)a,a+=14,tmp);
C_trace("ChickenBridge.scm: 370  make-binding");
f_19294(t2,((C_word*)t0)[4],C_SCHEME_FALSE);}

/* k20208 in k19982 in k19976 in parse-sequence-iteration in k18948 in k18945 in k18942 in k18939 in k18528 in k18525 in k18522 in k18519 in k18516 in k17994 in k17991 in k17468 in k17465 in k17462 in k17459 in k17456 in k17453 in k17450 in k17447 in k17444 in k17441 in k17438 in k17435 in k17432 in k17429 in k17426 in k17423 in k17420 in k17417 in k17414 in k17411 in k17408 in k17269 in k17266 in k17263 in k17260 in k17204 in k17201 in k17198 in k17195 in k17192 in k17189 in k17186 in k17183 in k15938 in k15869 in k15676 in k15673 in k15568 in k15517 in k7924 in k7921 in k5905 in k5612 in k5609 in k5605 in k5314 in k5311 in k5308 in k5305 */
static void C_ccall f_20210(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[16],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_20210,2,t0,t1);}
t2=(C_word)C_a_i_cons(&a,2,t1,((C_word*)((C_word*)t0)[13])[1]);
t3=C_mutate(((C_word *)((C_word*)t0)[13])+1,t2);
t4=(*a=C_CLOSURE_TYPE|12,a[1]=(C_word)f_20206,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],a[7]=((C_word*)t0)[8],a[8]=((C_word*)t0)[9],a[9]=((C_word*)t0)[10],a[10]=((C_word*)t0)[11],a[11]=((C_word*)t0)[12],a[12]=((C_word*)t0)[13],tmp=(C_word)a,a+=13,tmp);
C_trace("ChickenBridge.scm: 370  make-binding");
f_19294(t4,((C_word*)t0)[5],((C_word*)((C_word*)t0)[2])[1]);}

/* k20204 in k20208 in k19982 in k19976 in parse-sequence-iteration in k18948 in k18945 in k18942 in k18939 in k18528 in k18525 in k18522 in k18519 in k18516 in k17994 in k17991 in k17468 in k17465 in k17462 in k17459 in k17456 in k17453 in k17450 in k17447 in k17444 in k17441 in k17438 in k17435 in k17432 in k17429 in k17426 in k17423 in k17420 in k17417 in k17414 in k17411 in k17408 in k17269 in k17266 in k17263 in k17260 in k17204 in k17201 in k17198 in k17195 in k17192 in k17189 in k17186 in k17183 in k15938 in k15869 in k15676 in k15673 in k15568 in k15517 in k7924 in k7921 in k5905 in k5612 in k5609 in k5605 in k5314 in k5311 in k5308 in k5305 */
static void C_ccall f_20206(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word t14;
C_word t15;
C_word t16;
C_word t17;
C_word t18;
C_word ab[92],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_20206,2,t0,t1);}
t2=(C_word)C_a_i_cons(&a,2,t1,((C_word*)((C_word*)t0)[12])[1]);
t3=C_mutate(((C_word *)((C_word*)t0)[12])+1,t2);
t4=(*a=C_CLOSURE_TYPE|8,a[1]=(C_word)f_19995,a[2]=((C_word*)t0)[12],a[3]=((C_word*)t0)[6],a[4]=((C_word*)t0)[7],a[5]=((C_word*)t0)[8],a[6]=((C_word*)t0)[9],a[7]=((C_word*)t0)[10],a[8]=((C_word*)t0)[11],tmp=(C_word)a,a+=9,tmp);
t5=(C_word)C_eqp(((C_word*)((C_word*)t0)[5])[1],lf[458]);
if(C_truep(t5)){
t6=(*a=C_CLOSURE_TYPE|9,a[1]=(C_word)f_20012,a[2]=t4,a[3]=((C_word*)t0)[9],a[4]=((C_word*)t0)[7],a[5]=((C_word*)t0)[3],a[6]=((C_word*)t0)[6],a[7]=((C_word*)t0)[8],a[8]=((C_word*)t0)[4],a[9]=((C_word*)t0)[12],tmp=(C_word)a,a+=10,tmp);
C_trace("ChickenBridge.scm: 370  gensym");
t7=C_retrieve(lf[26]);
((C_proc3)C_retrieve_proc(t7))(3,t7,t6,lf[462]);}
else{
t6=(C_word)C_eqp(((C_word*)((C_word*)t0)[5])[1],lf[463]);
if(C_truep(t6)){
t7=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_20088,a[2]=t4,a[3]=((C_word*)t0)[9],a[4]=((C_word*)t0)[4],tmp=(C_word)a,a+=5,tmp);
if(C_truep(((C_word*)((C_word*)t0)[2])[1])){
t8=(C_word)C_a_i_list(&a,3,lf[206],((C_word*)t0)[4],((C_word*)((C_word*)t0)[2])[1]);
t9=t7;
f_20088(t9,(C_word)C_a_i_list(&a,3,lf[12],((C_word*)t0)[3],t8));}
else{
t8=(C_word)C_a_i_list(&a,2,lf[206],((C_word*)t0)[4]);
t9=t7;
f_20088(t9,(C_word)C_a_i_list(&a,3,lf[12],((C_word*)t0)[3],t8));}}
else{
t7=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_20117,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[5],a[4]=t4,a[5]=((C_word*)t0)[9],a[6]=((C_word*)t0)[4],a[7]=((C_word*)t0)[7],tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)((C_word*)t0)[2])[1])){
t8=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_20152,a[2]=t7,a[3]=((C_word*)t0)[6],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[2],tmp=(C_word)a,a+=6,tmp);
if(C_truep((C_word)C_i_listp(((C_word*)((C_word*)t0)[2])[1]))){
t9=(C_word)C_i_car(((C_word*)((C_word*)t0)[2])[1]);
t10=t8;
f_20152(t10,(C_word)C_eqp(t9,lf[465]));}
else{
t9=t8;
f_20152(t9,C_SCHEME_FALSE);}}
else{
t8=(C_word)C_a_i_list(&a,2,lf[15],((C_word*)t0)[4]);
t9=(C_word)C_a_i_list(&a,3,lf[12],((C_word*)t0)[4],t8);
t10=(C_word)C_a_i_cons(&a,2,t9,((C_word*)((C_word*)t0)[6])[1]);
t11=C_mutate(((C_word *)((C_word*)t0)[6])+1,t10);
t12=t7;
f_20117(t12,((C_word*)((C_word*)t0)[6])[1]);}}}}

/* k20150 in k20204 in k20208 in k19982 in k19976 in parse-sequence-iteration in k18948 in k18945 in k18942 in k18939 in k18528 in k18525 in k18522 in k18519 in k18516 in k17994 in k17991 in k17468 in k17465 in k17462 in k17459 in k17456 in k17453 in k17450 in k17447 in k17444 in k17441 in k17438 in k17435 in k17432 in k17429 in k17426 in k17423 in k17420 in k17417 in k17414 in k17411 in k17408 in k17269 in k17266 in k17263 in k17260 in k17204 in k17201 in k17198 in k17195 in k17192 in k17189 in k17186 in k17183 in k15938 in k15869 in k15676 in k15673 in k15568 in k15517 in k7924 in k7921 in k5905 in k5612 in k5609 in k5605 in k5314 in k5311 in k5308 in k5305 */
static void C_fcall f_20152(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word ab[36],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_20152,NULL,2,t0,t1);}
if(C_truep(t1)){
t2=(C_word)C_i_cadr(((C_word*)((C_word*)t0)[5])[1]);
t3=(C_word)C_a_i_list(&a,2,t2,((C_word*)t0)[4]);
t4=(C_word)C_a_i_list(&a,3,lf[12],((C_word*)t0)[4],t3);
t5=(C_word)C_a_i_cons(&a,2,t4,((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_20117(t7,((C_word*)((C_word*)t0)[3])[1]);}
else{
t2=(C_word)C_a_i_list(&a,2,((C_word*)((C_word*)t0)[5])[1],((C_word*)t0)[4]);
t3=(C_word)C_a_i_list(&a,3,lf[12],((C_word*)t0)[4],t2);
t4=(C_word)C_a_i_cons(&a,2,t3,((C_word*)((C_word*)t0)[3])[1]);
t5=C_mutate(((C_word *)((C_word*)t0)[3])+1,t4);
t6=((C_word*)t0)[2];
f_20117(t6,((C_word*)((C_word*)t0)[3])[1]);}}

/* k20115 in k20204 in k20208 in k19982 in k19976 in parse-sequence-iteration in k18948 in k18945 in k18942 in k18939 in k18528 in k18525 in k18522 in k18519 in k18516 in k17994 in k17991 in k17468 in k17465 in k17462 in k17459 in k17456 in k17453 in k17450 in k17447 in k17444 in k17441 in k17438 in k17435 in k17432 in k17429 in k17426 in k17423 in k17420 in k17417 in k17414 in k17411 in k17408 in k17269 in k17266 in k17263 in k17260 in k17204 in k17201 in k17198 in k17195 in k17192 in k17189 in k17186 in k17183 in k15938 in k15869 in k15676 in k15673 in k15568 in k15517 in k7924 in k7921 in k5905 in k5612 in k5609 in k5605 in k5314 in k5311 in k5308 in k5305 */
static void C_fcall f_20117(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[30],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_20117,NULL,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_20133,a[2]=((C_word*)t0)[4],a[3]=((C_word*)t0)[5],a[4]=((C_word*)t0)[6],a[5]=((C_word*)t0)[7],tmp=(C_word)a,a+=6,tmp);
t3=(C_word)C_eqp(((C_word*)((C_word*)t0)[3])[1],lf[464]);
if(C_truep(t3)){
t4=(C_word)C_a_i_list(&a,2,lf[8],((C_word*)t0)[6]);
t5=t2;
f_20133(t5,(C_word)C_a_i_list(&a,3,lf[12],((C_word*)t0)[2],t4));}
else{
t4=t2;
f_20133(t4,(C_word)C_a_i_list(&a,3,lf[12],((C_word*)t0)[2],((C_word*)t0)[6]));}}

/* k20131 in k20115 in k20204 in k20208 in k19982 in k19976 in parse-sequence-iteration in k18948 in k18945 in k18942 in k18939 in k18528 in k18525 in k18522 in k18519 in k18516 in k17994 in k17991 in k17468 in k17465 in k17462 in k17459 in k17456 in k17453 in k17450 in k17447 in k17444 in k17441 in k17438 in k17435 in k17432 in k17429 in k17426 in k17423 in k17420 in k17417 in k17414 in k17411 in k17408 in k17269 in k17266 in k17263 in k17260 in k17204 in k17201 in k17198 in k17195 in k17192 in k17189 in k17186 in k17183 in k15938 in k15869 in k15676 in k15673 in k15568 in k15517 in k7924 in k7921 in k5905 in k5612 in k5609 in k5605 in k5314 in k5311 in k5308 in k5305 */
static void C_fcall f_20133(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word ab[12],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_20133,NULL,2,t0,t1);}
t2=(C_word)C_a_i_cons(&a,2,t1,((C_word*)((C_word*)t0)[5])[1]);
t3=C_mutate(((C_word *)((C_word*)t0)[5])+1,t2);
t4=(C_word)C_a_i_list(&a,2,lf[3],((C_word*)t0)[4]);
t5=(C_word)C_a_i_cons(&a,2,t4,((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_19995(t7,((C_word*)((C_word*)t0)[3])[1]);}

/* k20086 in k20204 in k20208 in k19982 in k19976 in parse-sequence-iteration in k18948 in k18945 in k18942 in k18939 in k18528 in k18525 in k18522 in k18519 in k18516 in k17994 in k17991 in k17468 in k17465 in k17462 in k17459 in k17456 in k17453 in k17450 in k17447 in k17444 in k17441 in k17438 in k17435 in k17432 in k17429 in k17426 in k17423 in k17420 in k17417 in k17414 in k17411 in k17408 in k17269 in k17266 in k17263 in k17260 in k17204 in k17201 in k17198 in k17195 in k17192 in k17189 in k17186 in k17183 in k15938 in k15869 in k15676 in k15673 in k15568 in k15517 in k7924 in k7921 in k5905 in k5612 in k5609 in k5605 in k5314 in k5311 in k5308 in k5305 */
static void C_fcall f_20088(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[18],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_20088,NULL,2,t0,t1);}
t2=(C_word)C_a_i_list(&a,2,lf[204],((C_word*)t0)[4]);
t3=(C_word)C_a_i_list(&a,3,lf[336],t1,t2);
t4=(C_word)C_a_i_cons(&a,2,t3,((C_word*)((C_word*)t0)[3])[1]);
t5=C_mutate(((C_word *)((C_word*)t0)[3])+1,t4);
t6=((C_word*)t0)[2];
f_19995(t6,((C_word*)((C_word*)t0)[3])[1]);}

/* k20010 in k20204 in k20208 in k19982 in k19976 in parse-sequence-iteration in k18948 in k18945 in k18942 in k18939 in k18528 in k18525 in k18522 in k18519 in k18516 in k17994 in k17991 in k17468 in k17465 in k17462 in k17459 in k17456 in k17453 in k17450 in k17447 in k17444 in k17441 in k17438 in k17435 in k17432 in k17429 in k17426 in k17423 in k17420 in k17417 in k17414 in k17411 in k17408 in k17269 in k17266 in k17263 in k17260 in k17204 in k17201 in k17198 in k17195 in k17192 in k17189 in k17186 in k17183 in k15938 in k15869 in k15676 in k15673 in k15568 in k15517 in k7924 in k7921 in k5905 in k5612 in k5609 in k5605 in k5314 in k5311 in k5308 in k5305 */
static void C_ccall f_20012(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[11],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_20012,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|10,a[1]=(C_word)f_20015,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],a[7]=t1,a[8]=((C_word*)t0)[7],a[9]=((C_word*)t0)[8],a[10]=((C_word*)t0)[9],tmp=(C_word)a,a+=11,tmp);
C_trace("ChickenBridge.scm: 370  gensym");
t3=C_retrieve(lf[26]);
((C_proc3)C_retrieve_proc(t3))(3,t3,t2,lf[461]);}

/* k20013 in k20010 in k20204 in k20208 in k19982 in k19976 in parse-sequence-iteration in k18948 in k18945 in k18942 in k18939 in k18528 in k18525 in k18522 in k18519 in k18516 in k17994 in k17991 in k17468 in k17465 in k17462 in k17459 in k17456 in k17453 in k17450 in k17447 in k17444 in k17441 in k17438 in k17435 in k17432 in k17429 in k17426 in k17423 in k17420 in k17417 in k17414 in k17411 in k17408 in k17269 in k17266 in k17263 in k17260 in k17204 in k17201 in k17198 in k17195 in k17192 in k17189 in k17186 in k17183 in k15938 in k15869 in k15676 in k15673 in k15568 in k15517 in k7924 in k7921 in k5905 in k5612 in k5609 in k5605 in k5314 in k5311 in k5308 in k5305 */
static void C_ccall f_20015(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[12],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_20015,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|11,a[1]=(C_word)f_20079,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],a[7]=((C_word*)t0)[7],a[8]=((C_word*)t0)[8],a[9]=t1,a[10]=((C_word*)t0)[9],a[11]=((C_word*)t0)[10],tmp=(C_word)a,a+=12,tmp);
C_trace("ChickenBridge.scm: 370  make-binding");
f_19294(t2,((C_word*)t0)[7],C_fix(0));}

/* k20077 in k20013 in k20010 in k20204 in k20208 in k19982 in k19976 in parse-sequence-iteration in k18948 in k18945 in k18942 in k18939 in k18528 in k18525 in k18522 in k18519 in k18516 in k17994 in k17991 in k17468 in k17465 in k17462 in k17459 in k17456 in k17453 in k17450 in k17447 in k17444 in k17441 in k17438 in k17435 in k17432 in k17429 in k17426 in k17423 in k17420 in k17417 in k17414 in k17411 in k17408 in k17269 in k17266 in k17263 in k17260 in k17204 in k17201 in k17198 in k17195 in k17192 in k17189 in k17186 in k17183 in k15938 in k15869 in k15676 in k15673 in k15568 in k15517 in k7924 in k7921 in k5905 in k5612 in k5609 in k5605 in k5314 in k5311 in k5308 in k5305 */
static void C_ccall f_20079(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[15],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_20079,2,t0,t1);}
t2=(C_word)C_a_i_cons(&a,2,t1,((C_word*)((C_word*)t0)[11])[1]);
t3=C_mutate(((C_word *)((C_word*)t0)[11])+1,t2);
t4=(*a=C_CLOSURE_TYPE|11,a[1]=(C_word)f_20075,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],a[7]=((C_word*)t0)[7],a[8]=((C_word*)t0)[8],a[9]=((C_word*)t0)[9],a[10]=((C_word*)t0)[10],a[11]=((C_word*)t0)[11],tmp=(C_word)a,a+=12,tmp);
C_trace("ChickenBridge.scm: 370  make-binding");
f_19294(t4,((C_word*)t0)[9],C_SCHEME_FALSE);}

/* k20073 in k20077 in k20013 in k20010 in k20204 in k20208 in k19982 in k19976 in parse-sequence-iteration in k18948 in k18945 in k18942 in k18939 in k18528 in k18525 in k18522 in k18519 in k18516 in k17994 in k17991 in k17468 in k17465 in k17462 in k17459 in k17456 in k17453 in k17450 in k17447 in k17444 in k17441 in k17438 in k17435 in k17432 in k17429 in k17426 in k17423 in k17420 in k17417 in k17414 in k17411 in k17408 in k17269 in k17266 in k17263 in k17260 in k17204 in k17201 in k17198 in k17195 in k17192 in k17189 in k17186 in k17183 in k15938 in k15869 in k15676 in k15673 in k15568 in k15517 in k7924 in k7921 in k5905 in k5612 in k5609 in k5605 in k5314 in k5311 in k5308 in k5305 */
static void C_ccall f_20075(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word t14;
C_word t15;
C_word t16;
C_word t17;
C_word t18;
C_word t19;
C_word t20;
C_word ab[81],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_20075,2,t0,t1);}
t2=(C_word)C_a_i_cons(&a,2,t1,((C_word*)((C_word*)t0)[11])[1]);
t3=C_mutate(((C_word *)((C_word*)t0)[11])+1,t2);
t4=(C_word)C_a_i_list(&a,2,lf[459],((C_word*)t0)[10]);
t5=(C_word)C_a_i_list(&a,3,lf[12],((C_word*)t0)[9],t4);
t6=(C_word)C_a_i_cons(&a,2,t5,((C_word*)((C_word*)t0)[8])[1]);
t7=C_mutate(((C_word *)((C_word*)t0)[8])+1,t6);
t8=(C_word)C_a_i_list(&a,3,lf[91],C_fix(1),((C_word*)t0)[7]);
t9=(C_word)C_a_i_list(&a,3,lf[12],((C_word*)t0)[7],t8);
t10=(C_word)C_a_i_cons(&a,2,t9,((C_word*)((C_word*)t0)[6])[1]);
t11=C_mutate(((C_word *)((C_word*)t0)[6])+1,t10);
t12=(C_word)C_a_i_list(&a,3,lf[460],((C_word*)t0)[10],((C_word*)t0)[7]);
t13=(C_word)C_a_i_list(&a,3,lf[12],((C_word*)t0)[5],t12);
t14=(C_word)C_a_i_cons(&a,2,t13,((C_word*)((C_word*)t0)[4])[1]);
t15=C_mutate(((C_word *)((C_word*)t0)[4])+1,t14);
t16=(C_word)C_a_i_list(&a,3,lf[341],((C_word*)t0)[7],((C_word*)t0)[9]);
t17=(C_word)C_a_i_list(&a,2,lf[312],t16);
t18=(C_word)C_a_i_cons(&a,2,t17,((C_word*)((C_word*)t0)[3])[1]);
t19=C_mutate(((C_word *)((C_word*)t0)[3])+1,t18);
t20=((C_word*)t0)[2];
f_19995(t20,((C_word*)((C_word*)t0)[3])[1]);}

/* k19993 in k20204 in k20208 in k19982 in k19976 in parse-sequence-iteration in k18948 in k18945 in k18942 in k18939 in k18528 in k18525 in k18522 in k18519 in k18516 in k17994 in k17991 in k17468 in k17465 in k17462 in k17459 in k17456 in k17453 in k17450 in k17447 in k17444 in k17441 in k17438 in k17435 in k17432 in k17429 in k17426 in k17423 in k17420 in k17417 in k17414 in k17411 in k17408 in k17269 in k17266 in k17263 in k17260 in k17204 in k17201 in k17198 in k17195 in k17192 in k17189 in k17186 in k17183 in k15938 in k15869 in k15676 in k15673 in k15568 in k15517 in k7924 in k7921 in k5905 in k5612 in k5609 in k5605 in k5314 in k5311 in k5308 in k5305 */
static void C_fcall f_19995(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[11],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_19995,NULL,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_20002,a[2]=((C_word*)t0)[7],a[3]=((C_word*)t0)[8],tmp=(C_word)a,a+=4,tmp);
t3=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_20006,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=t2,tmp=(C_word)a,a+=7,tmp);
C_trace("ChickenBridge.scm: 370  reverse");
t4=*((C_word*)lf[164]+1);
((C_proc3)C_retrieve_proc(t4))(3,t4,t3,((C_word*)((C_word*)t0)[2])[1]);}

/* k20004 in k19993 in k20204 in k20208 in k19982 in k19976 in parse-sequence-iteration in k18948 in k18945 in k18942 in k18939 in k18528 in k18525 in k18522 in k18519 in k18516 in k17994 in k17991 in k17468 in k17465 in k17462 in k17459 in k17456 in k17453 in k17450 in k17447 in k17444 in k17441 in k17438 in k17435 in k17432 in k17429 in k17426 in k17423 in k17420 in k17417 in k17414 in k17411 in k17408 in k17269 in k17266 in k17263 in k17260 in k17204 in k17201 in k17198 in k17195 in k17192 in k17189 in k17186 in k17183 in k15938 in k15869 in k15676 in k15673 in k15568 in k15517 in k7924 in k7921 in k5905 in k5612 in k5609 in k5605 in k5314 in k5311 in k5308 in k5305 */
static void C_ccall f_20006(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word ab[36],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_20006,2,t0,t1);}
C_trace("ChickenBridge.scm: 370  make-loop-clause");
f_19060(((C_word*)t0)[6],(C_word)C_a_i_list(&a,12,lf[393],lf[425],lf[394],t1,lf[397],((C_word*)((C_word*)t0)[5])[1],lf[396],((C_word*)((C_word*)t0)[4])[1],lf[398],((C_word*)((C_word*)t0)[3])[1],lf[399],((C_word*)((C_word*)t0)[2])[1]));}

/* k20000 in k19993 in k20204 in k20208 in k19982 in k19976 in parse-sequence-iteration in k18948 in k18945 in k18942 in k18939 in k18528 in k18525 in k18522 in k18519 in k18516 in k17994 in k17991 in k17468 in k17465 in k17462 in k17459 in k17456 in k17453 in k17450 in k17447 in k17444 in k17441 in k17438 in k17435 in k17432 in k17429 in k17426 in k17423 in k17420 in k17417 in k17414 in k17411 in k17408 in k17269 in k17266 in k17263 in k17260 in k17204 in k17201 in k17198 in k17195 in k17192 in k17189 in k17186 in k17183 in k15938 in k15869 in k15676 in k15673 in k15568 in k15517 in k7924 in k7921 in k5905 in k5612 in k5609 in k5605 in k5314 in k5311 in k5308 in k5305 */
static void C_ccall f_20002(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 370  values");
C_values(4,0,((C_word*)t0)[3],t1,((C_word*)((C_word*)t0)[2])[1]);}

/* parse-repeat in k18948 in k18945 in k18942 in k18939 in k18528 in k18525 in k18522 in k18519 in k18516 in k17994 in k17991 in k17468 in k17465 in k17462 in k17459 in k17456 in k17453 in k17450 in k17447 in k17444 in k17441 in k17438 in k17435 in k17432 in k17429 in k17426 in k17423 in k17420 in k17417 in k17414 in k17411 in k17408 in k17269 in k17266 in k17263 in k17260 in k17204 in k17201 in k17198 in k17195 in k17192 in k17189 in k17186 in k17183 in k15938 in k15869 in k15676 in k15673 in k15568 in k15517 in k7924 in k7921 in k5905 in k5612 in k5609 in k5605 in k5314 in k5311 in k5308 in k5305 */
static void C_ccall f_19924(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4){
C_word tmp;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word ab[13],*a=ab;
if(c!=5) C_bad_argc_2(c,5,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr5,(void*)f_19924,5,t0,t1,t2,t3,t4);}
t5=(C_word)C_i_cdr(t2);
if(C_truep((C_word)C_i_nullp(t5))){
C_trace("ChickenBridge.scm: 370  loop-error");
f_19300(t1,t4,t2,(C_word)C_a_i_list(&a,1,lf[455]));}
else{
t6=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_19939,a[2]=t4,a[3]=t3,a[4]=t2,a[5]=((C_word)li301),tmp=(C_word)a,a+=6,tmp);
t7=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_19957,a[2]=t2,a[3]=((C_word)li302),tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 370  call-with-values");
C_call_with_values(4,0,t1,t6,t7);}}

/* a19956 in parse-repeat in k18948 in k18945 in k18942 in k18939 in k18528 in k18525 in k18522 in k18519 in k18516 in k17994 in k17991 in k17468 in k17465 in k17462 in k17459 in k17456 in k17453 in k17450 in k17447 in k17444 in k17441 in k17438 in k17435 in k17432 in k17429 in k17426 in k17423 in k17420 in k17417 in k17414 in k17411 in k17408 in k17269 in k17266 in k17263 in k17260 in k17204 in k17201 in k17198 in k17195 in k17192 in k17189 in k17186 in k17183 in k15938 in k15869 in k15676 in k15673 in k15568 in k15517 in k7924 in k7921 in k5905 in k5612 in k5609 in k5605 in k5314 in k5311 in k5308 in k5305 */
static void C_ccall f_19957(C_word c,C_word t0,C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word *a;
if(c!=4) C_bad_argc_2(c,4,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr4,(void*)f_19957,4,t0,t1,t2,t3);}
t4=(C_word)C_i_cddr(((C_word*)t0)[2]);
C_trace("ChickenBridge.scm: 370  values");
C_values(4,0,t1,t2,t4);}

/* a19938 in parse-repeat in k18948 in k18945 in k18942 in k18939 in k18528 in k18525 in k18522 in k18519 in k18516 in k17994 in k17991 in k17468 in k17465 in k17462 in k17459 in k17456 in k17453 in k17450 in k17447 in k17444 in k17441 in k17438 in k17435 in k17432 in k17429 in k17426 in k17423 in k17420 in k17417 in k17414 in k17411 in k17408 in k17269 in k17266 in k17263 in k17260 in k17204 in k17201 in k17198 in k17195 in k17192 in k17189 in k17186 in k17183 in k15938 in k15869 in k15676 in k15673 in k15568 in k15517 in k7924 in k7921 in k5905 in k5612 in k5609 in k5605 in k5314 in k5311 in k5308 in k5305 */
static void C_ccall f_19939(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[6],*a=ab;
if(c!=2) C_bad_argc_2(c,2,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_19939,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_19951,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=t1,a[5]=((C_word*)t0)[4],tmp=(C_word)a,a+=6,tmp);
C_trace("ChickenBridge.scm: 370  gensym");
t3=C_retrieve(lf[26]);
((C_proc3)C_retrieve_proc(t3))(3,t3,t2,lf[456]);}

/* k19949 in a19938 in parse-repeat in k18948 in k18945 in k18942 in k18939 in k18528 in k18525 in k18522 in k18519 in k18516 in k17994 in k17991 in k17468 in k17465 in k17462 in k17459 in k17456 in k17453 in k17450 in k17447 in k17444 in k17441 in k17438 in k17435 in k17432 in k17429 in k17426 in k17423 in k17420 in k17417 in k17414 in k17411 in k17408 in k17269 in k17266 in k17263 in k17260 in k17204 in k17201 in k17198 in k17195 in k17192 in k17189 in k17186 in k17183 in k15938 in k15869 in k15676 in k15673 in k15568 in k15517 in k7924 in k7921 in k5905 in k5612 in k5609 in k5605 in k5314 in k5311 in k5308 in k5305 */
static void C_ccall f_19951(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[12],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_19951,2,t0,t1);}
t2=(C_word)C_i_cadr(((C_word*)t0)[5]);
t3=(C_word)C_a_i_list(&a,4,lf[425],t1,lf[430],t2);
C_trace("ChickenBridge.scm: 370  parse-numerical-for");
t4=C_retrieve2(lf[424],"parse-numerical-for");
f_19542(5,t4,((C_word*)t0)[4],t3,((C_word*)t0)[3],((C_word*)t0)[2]);}

/* parse-numerical-for in k18948 in k18945 in k18942 in k18939 in k18528 in k18525 in k18522 in k18519 in k18516 in k17994 in k17991 in k17468 in k17465 in k17462 in k17459 in k17456 in k17453 in k17450 in k17447 in k17444 in k17441 in k17438 in k17435 in k17432 in k17429 in k17426 in k17423 in k17420 in k17417 in k17414 in k17411 in k17408 in k17269 in k17266 in k17263 in k17260 in k17204 in k17201 in k17198 in k17195 in k17192 in k17189 in k17186 in k17183 in k15938 in k15869 in k15676 in k15673 in k15568 in k15517 in k7924 in k7921 in k5905 in k5612 in k5609 in k5605 in k5314 in k5311 in k5308 in k5305 */
static void C_ccall f_19542(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4){
C_word tmp;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word t14;
C_word t15;
C_word t16;
C_word t17;
C_word t18;
C_word t19;
C_word t20;
C_word t21;
C_word t22;
C_word t23;
C_word t24;
C_word t25;
C_word t26;
C_word t27;
C_word t28;
C_word t29;
C_word t30;
C_word t31;
C_word ab[48],*a=ab;
if(c!=5) C_bad_argc_2(c,5,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr5,(void*)f_19542,5,t0,t1,t2,t3,t4);}
t5=(C_word)C_i_cadr(t2);
t6=(C_word)C_i_cddr(t2);
t7=t6;
t8=(*a=C_VECTOR_TYPE|1,a[1]=t7,tmp=(C_word)a,a+=2,tmp);
t9=C_SCHEME_END_OF_LIST;
t10=(*a=C_VECTOR_TYPE|1,a[1]=t9,tmp=(C_word)a,a+=2,tmp);
t11=C_SCHEME_END_OF_LIST;
t12=(*a=C_VECTOR_TYPE|1,a[1]=t11,tmp=(C_word)a,a+=2,tmp);
t13=C_SCHEME_FALSE;
t14=(*a=C_VECTOR_TYPE|1,a[1]=t13,tmp=(C_word)a,a+=2,tmp);
t15=C_SCHEME_FALSE;
t16=(*a=C_VECTOR_TYPE|1,a[1]=t15,tmp=(C_word)a,a+=2,tmp);
t17=C_SCHEME_FALSE;
t18=(*a=C_VECTOR_TYPE|1,a[1]=t17,tmp=(C_word)a,a+=2,tmp);
t19=C_SCHEME_FALSE;
t20=(*a=C_VECTOR_TYPE|1,a[1]=t19,tmp=(C_word)a,a+=2,tmp);
t21=C_SCHEME_FALSE;
t22=(*a=C_VECTOR_TYPE|1,a[1]=t21,tmp=(C_word)a,a+=2,tmp);
t23=C_SCHEME_FALSE;
t24=(*a=C_VECTOR_TYPE|1,a[1]=t23,tmp=(C_word)a,a+=2,tmp);
t25=C_SCHEME_FALSE;
t26=(*a=C_VECTOR_TYPE|1,a[1]=t25,tmp=(C_word)a,a+=2,tmp);
t27=(*a=C_CLOSURE_TYPE|13,a[1]=(C_word)f_19552,a[2]=t18,a[3]=t16,a[4]=t14,a[5]=t24,a[6]=t10,a[7]=t12,a[8]=t20,a[9]=t8,a[10]=t1,a[11]=t22,a[12]=t5,a[13]=t26,tmp=(C_word)a,a+=14,tmp);
t28=C_SCHEME_UNDEFINED;
t29=(*a=C_VECTOR_TYPE|1,a[1]=t28,tmp=(C_word)a,a+=2,tmp);
t30=C_set_block_item(t29,0,(*a=C_CLOSURE_TYPE|11,a[1]=(C_word)f_19751,a[2]=t22,a[3]=t18,a[4]=t20,a[5]=t2,a[6]=t4,a[7]=t14,a[8]=t16,a[9]=t29,a[10]=t8,a[11]=((C_word)li299),tmp=(C_word)a,a+=12,tmp));
t31=((C_word*)t29)[1];
f_19751(t31,t27,C_SCHEME_FALSE);}

/* do3259 in parse-numerical-for in k18948 in k18945 in k18942 in k18939 in k18528 in k18525 in k18522 in k18519 in k18516 in k17994 in k17991 in k17468 in k17465 in k17462 in k17459 in k17456 in k17453 in k17450 in k17447 in k17444 in k17441 in k17438 in k17435 in k17432 in k17429 in k17426 in k17423 in k17420 in k17417 in k17414 in k17411 in k17408 in k17269 in k17266 in k17263 in k17260 in k17204 in k17201 in k17198 in k17195 in k17192 in k17189 in k17186 in k17183 in k15938 in k15869 in k15676 in k15673 in k15568 in k15517 in k7924 in k7921 in k5905 in k5612 in k5609 in k5605 in k5314 in k5311 in k5308 in k5305 */
static void C_fcall f_19751(C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word ab[15],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_19751,NULL,3,t0,t1,t2);}
t3=(*a=C_VECTOR_TYPE|1,a[1]=t2,tmp=(C_word)a,a+=2,tmp);
t4=(C_word)C_i_nullp(((C_word*)((C_word*)t0)[10])[1]);
t5=(*a=C_CLOSURE_TYPE|12,a[1]=(C_word)f_19761,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],a[7]=((C_word*)t0)[7],a[8]=((C_word*)t0)[8],a[9]=((C_word*)t0)[9],a[10]=t3,a[11]=((C_word*)t0)[10],a[12]=t1,tmp=(C_word)a,a+=13,tmp);
if(C_truep(t4)){
t6=t5;
f_19761(2,t6,t4);}
else{
t6=(C_word)C_i_car(((C_word*)((C_word*)t0)[10])[1]);
C_trace("ChickenBridge.scm: 370  loop-op?");
f_19282(t5,t6,((C_word*)t0)[6]);}}

/* k19759 in do3259 in parse-numerical-for in k18948 in k18945 in k18942 in k18939 in k18528 in k18525 in k18522 in k18519 in k18516 in k17994 in k17991 in k17468 in k17465 in k17462 in k17459 in k17456 in k17453 in k17450 in k17447 in k17444 in k17441 in k17438 in k17435 in k17432 in k17429 in k17426 in k17423 in k17420 in k17417 in k17414 in k17411 in k17408 in k17269 in k17266 in k17263 in k17260 in k17204 in k17201 in k17198 in k17195 in k17192 in k17189 in k17186 in k17183 in k15938 in k15869 in k15676 in k15673 in k15568 in k15517 in k7924 in k7921 in k5905 in k5612 in k5609 in k5605 in k5314 in k5311 in k5308 in k5305 */
static void C_ccall f_19761(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word ab[16],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_19761,2,t0,t1);}
if(C_truep(t1)){
t2=((C_word*)t0)[12];
((C_proc2)(void*)(*((C_word*)t2+1)))(2,t2,C_SCHEME_UNDEFINED);}
else{
t2=(C_word)C_i_car(((C_word*)((C_word*)t0)[11])[1]);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[11])[1]);
t4=C_mutate(((C_word *)((C_word*)t0)[11])+1,t3);
t5=C_mutate(((C_word *)((C_word*)t0)[10])+1,t2);
t6=(*a=C_CLOSURE_TYPE|12,a[1]=(C_word)f_19772,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],a[7]=((C_word*)t0)[7],a[8]=((C_word*)t0)[11],a[9]=((C_word*)t0)[8],a[10]=((C_word*)t0)[12],a[11]=((C_word*)t0)[9],a[12]=((C_word*)t0)[10],tmp=(C_word)a,a+=13,tmp);
if(C_truep((C_word)C_i_nullp(((C_word*)((C_word*)t0)[11])[1]))){
C_trace("ChickenBridge.scm: 370  loop-error");
f_19300(t6,((C_word*)t0)[6],((C_word*)t0)[5],(C_word)C_a_i_list(&a,1,lf[453]));}
else{
t7=t6;
f_19772(2,t7,C_SCHEME_UNDEFINED);}}}

/* k19770 in k19759 in do3259 in parse-numerical-for in k18948 in k18945 in k18942 in k18939 in k18528 in k18525 in k18522 in k18519 in k18516 in k17994 in k17991 in k17468 in k17465 in k17462 in k17459 in k17456 in k17453 in k17450 in k17447 in k17444 in k17441 in k17438 in k17435 in k17432 in k17429 in k17426 in k17423 in k17420 in k17417 in k17414 in k17411 in k17408 in k17269 in k17266 in k17263 in k17260 in k17204 in k17201 in k17198 in k17195 in k17192 in k17189 in k17186 in k17183 in k15938 in k15869 in k15676 in k15673 in k15568 in k15517 in k7924 in k7921 in k5905 in k5612 in k5609 in k5605 in k5314 in k5311 in k5308 in k5305 */
static void C_ccall f_19772(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word t14;
C_word t15;
C_word t16;
C_word t17;
C_word ab[132],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_19772,2,t0,t1);}
t2=((C_word*)((C_word*)t0)[12])[1];
t3=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_19775,a[2]=((C_word*)t0)[12],a[3]=((C_word*)t0)[10],a[4]=((C_word*)t0)[11],tmp=(C_word)a,a+=5,tmp);
t4=(C_word)C_eqp(t2,lf[432]);
t5=(C_truep(t4)?t4:(C_word)C_eqp(t2,lf[428]));
if(C_truep(t5)){
t6=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_19787,a[2]=t3,a[3]=((C_word*)t0)[7],a[4]=((C_word*)t0)[8],a[5]=((C_word*)t0)[12],a[6]=((C_word*)t0)[9],tmp=(C_word)a,a+=7,tmp);
if(C_truep(((C_word*)((C_word*)t0)[9])[1])){
C_trace("ChickenBridge.scm: 370  loop-error");
f_19300(t6,((C_word*)t0)[6],((C_word*)t0)[5],(C_word)C_a_i_list(&a,5,lf[433],((C_word*)((C_word*)t0)[12])[1],lf[434],((C_word*)((C_word*)t0)[9])[1],lf[435]));}
else{
t7=t6;
f_19787(2,t7,C_SCHEME_UNDEFINED);}}
else{
t6=(C_word)C_eqp(t2,lf[430]);
if(C_truep(t6)){
t7=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_19808,a[2]=t3,a[3]=((C_word*)t0)[12],a[4]=((C_word*)t0)[3],a[5]=((C_word*)t0)[4],a[6]=((C_word*)t0)[8],tmp=(C_word)a,a+=7,tmp);
if(C_truep(((C_word*)((C_word*)t0)[3])[1])){
C_trace("ChickenBridge.scm: 370  loop-error");
f_19300(t7,((C_word*)t0)[6],((C_word*)t0)[5],(C_word)C_a_i_list(&a,5,lf[436],((C_word*)((C_word*)t0)[12])[1],lf[437],((C_word*)((C_word*)t0)[3])[1],lf[438]));}
else{
t8=t7;
f_19808(2,t8,C_SCHEME_UNDEFINED);}}
else{
t7=(C_word)C_eqp(t2,lf[439]);
if(C_truep(t7)){
t8=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_19829,a[2]=t3,a[3]=((C_word*)t0)[12],a[4]=((C_word*)t0)[3],a[5]=((C_word*)t0)[4],a[6]=((C_word*)t0)[8],tmp=(C_word)a,a+=7,tmp);
if(C_truep(((C_word*)((C_word*)t0)[3])[1])){
C_trace("ChickenBridge.scm: 370  loop-error");
f_19300(t8,((C_word*)t0)[6],((C_word*)t0)[5],(C_word)C_a_i_list(&a,5,lf[440],((C_word*)((C_word*)t0)[12])[1],lf[441],((C_word*)((C_word*)t0)[3])[1],lf[442]));}
else{
t9=t8;
f_19829(2,t9,C_SCHEME_UNDEFINED);}}
else{
t8=(C_word)C_eqp(t2,lf[429]);
if(C_truep(t8)){
t9=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_19850,a[2]=t3,a[3]=((C_word*)t0)[12],a[4]=((C_word*)t0)[3],a[5]=((C_word*)t0)[4],a[6]=((C_word*)t0)[8],tmp=(C_word)a,a+=7,tmp);
if(C_truep(((C_word*)((C_word*)t0)[3])[1])){
C_trace("ChickenBridge.scm: 370  loop-error");
f_19300(t9,((C_word*)t0)[6],((C_word*)t0)[5],(C_word)C_a_i_list(&a,5,lf[443],((C_word*)((C_word*)t0)[12])[1],lf[444],((C_word*)((C_word*)t0)[3])[1],lf[445]));}
else{
t10=t9;
f_19850(2,t10,C_SCHEME_UNDEFINED);}}
else{
t9=(C_word)C_eqp(t2,lf[431]);
if(C_truep(t9)){
t10=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_19871,a[2]=t3,a[3]=((C_word*)t0)[12],a[4]=((C_word*)t0)[3],a[5]=((C_word*)t0)[4],a[6]=((C_word*)t0)[8],tmp=(C_word)a,a+=7,tmp);
if(C_truep(((C_word*)((C_word*)t0)[3])[1])){
C_trace("ChickenBridge.scm: 370  loop-error");
f_19300(t10,((C_word*)t0)[6],((C_word*)t0)[5],(C_word)C_a_i_list(&a,5,lf[446],((C_word*)((C_word*)t0)[12])[1],lf[447],((C_word*)((C_word*)t0)[3])[1],lf[448]));}
else{
t11=t10;
f_19871(2,t11,C_SCHEME_UNDEFINED);}}
else{
t10=(C_word)C_eqp(t2,lf[449]);
if(C_truep(t10)){
t11=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_19892,a[2]=t3,a[3]=((C_word*)t0)[2],a[4]=((C_word*)t0)[8],tmp=(C_word)a,a+=5,tmp);
if(C_truep(((C_word*)((C_word*)t0)[2])[1])){
C_trace("ChickenBridge.scm: 370  loop-error");
f_19300(t11,((C_word*)t0)[6],((C_word*)t0)[5],(C_word)C_a_i_list(&a,1,lf[450]));}
else{
t12=t11;
f_19892(2,t12,C_SCHEME_UNDEFINED);}}
else{
C_trace("ChickenBridge.scm: 370  loop-error");
f_19300(t3,((C_word*)t0)[6],((C_word*)t0)[5],(C_word)C_a_i_list(&a,3,lf[451],((C_word*)((C_word*)t0)[12])[1],lf[452]));}}}}}}}

/* k19890 in k19770 in k19759 in do3259 in parse-numerical-for in k18948 in k18945 in k18942 in k18939 in k18528 in k18525 in k18522 in k18519 in k18516 in k17994 in k17991 in k17468 in k17465 in k17462 in k17459 in k17456 in k17453 in k17450 in k17447 in k17444 in k17441 in k17438 in k17435 in k17432 in k17429 in k17426 in k17423 in k17420 in k17417 in k17414 in k17411 in k17408 in k17269 in k17266 in k17263 in k17260 in k17204 in k17201 in k17198 in k17195 in k17192 in k17189 in k17186 in k17183 in k15938 in k15869 in k15676 in k15673 in k15568 in k15517 in k7924 in k7921 in k5905 in k5612 in k5609 in k5605 in k5314 in k5311 in k5308 in k5305 */
static void C_ccall f_19892(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word *a;
t2=(C_word)C_i_car(((C_word*)((C_word*)t0)[4])[1]);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
t4=C_mutate(((C_word *)((C_word*)t0)[4])+1,t3);
t5=C_mutate(((C_word *)((C_word*)t0)[3])+1,t2);
t6=((C_word*)t0)[2];
f_19775(2,t6,t5);}

/* k19869 in k19770 in k19759 in do3259 in parse-numerical-for in k18948 in k18945 in k18942 in k18939 in k18528 in k18525 in k18522 in k18519 in k18516 in k17994 in k17991 in k17468 in k17465 in k17462 in k17459 in k17456 in k17453 in k17450 in k17447 in k17444 in k17441 in k17438 in k17435 in k17432 in k17429 in k17426 in k17423 in k17420 in k17417 in k17414 in k17411 in k17408 in k17269 in k17266 in k17263 in k17260 in k17204 in k17201 in k17198 in k17195 in k17192 in k17189 in k17186 in k17183 in k15938 in k15869 in k15676 in k15673 in k15568 in k15517 in k7924 in k7921 in k5905 in k5612 in k5609 in k5605 in k5314 in k5311 in k5308 in k5305 */
static void C_ccall f_19871(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=(C_word)C_i_car(((C_word*)((C_word*)t0)[6])[1]);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[6])[1]);
t4=C_mutate(((C_word *)((C_word*)t0)[6])+1,t3);
t5=C_mutate(((C_word *)((C_word*)t0)[5])+1,t2);
t6=C_mutate(((C_word *)((C_word*)t0)[4])+1,((C_word*)((C_word*)t0)[3])[1]);
t7=((C_word*)t0)[2];
f_19775(2,t7,t6);}

/* k19848 in k19770 in k19759 in do3259 in parse-numerical-for in k18948 in k18945 in k18942 in k18939 in k18528 in k18525 in k18522 in k18519 in k18516 in k17994 in k17991 in k17468 in k17465 in k17462 in k17459 in k17456 in k17453 in k17450 in k17447 in k17444 in k17441 in k17438 in k17435 in k17432 in k17429 in k17426 in k17423 in k17420 in k17417 in k17414 in k17411 in k17408 in k17269 in k17266 in k17263 in k17260 in k17204 in k17201 in k17198 in k17195 in k17192 in k17189 in k17186 in k17183 in k15938 in k15869 in k15676 in k15673 in k15568 in k15517 in k7924 in k7921 in k5905 in k5612 in k5609 in k5605 in k5314 in k5311 in k5308 in k5305 */
static void C_ccall f_19850(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=(C_word)C_i_car(((C_word*)((C_word*)t0)[6])[1]);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[6])[1]);
t4=C_mutate(((C_word *)((C_word*)t0)[6])+1,t3);
t5=C_mutate(((C_word *)((C_word*)t0)[5])+1,t2);
t6=C_mutate(((C_word *)((C_word*)t0)[4])+1,((C_word*)((C_word*)t0)[3])[1]);
t7=((C_word*)t0)[2];
f_19775(2,t7,t6);}

/* k19827 in k19770 in k19759 in do3259 in parse-numerical-for in k18948 in k18945 in k18942 in k18939 in k18528 in k18525 in k18522 in k18519 in k18516 in k17994 in k17991 in k17468 in k17465 in k17462 in k17459 in k17456 in k17453 in k17450 in k17447 in k17444 in k17441 in k17438 in k17435 in k17432 in k17429 in k17426 in k17423 in k17420 in k17417 in k17414 in k17411 in k17408 in k17269 in k17266 in k17263 in k17260 in k17204 in k17201 in k17198 in k17195 in k17192 in k17189 in k17186 in k17183 in k15938 in k15869 in k15676 in k15673 in k15568 in k15517 in k7924 in k7921 in k5905 in k5612 in k5609 in k5605 in k5314 in k5311 in k5308 in k5305 */
static void C_ccall f_19829(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=(C_word)C_i_car(((C_word*)((C_word*)t0)[6])[1]);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[6])[1]);
t4=C_mutate(((C_word *)((C_word*)t0)[6])+1,t3);
t5=C_mutate(((C_word *)((C_word*)t0)[5])+1,t2);
t6=C_mutate(((C_word *)((C_word*)t0)[4])+1,((C_word*)((C_word*)t0)[3])[1]);
t7=((C_word*)t0)[2];
f_19775(2,t7,t6);}

/* k19806 in k19770 in k19759 in do3259 in parse-numerical-for in k18948 in k18945 in k18942 in k18939 in k18528 in k18525 in k18522 in k18519 in k18516 in k17994 in k17991 in k17468 in k17465 in k17462 in k17459 in k17456 in k17453 in k17450 in k17447 in k17444 in k17441 in k17438 in k17435 in k17432 in k17429 in k17426 in k17423 in k17420 in k17417 in k17414 in k17411 in k17408 in k17269 in k17266 in k17263 in k17260 in k17204 in k17201 in k17198 in k17195 in k17192 in k17189 in k17186 in k17183 in k15938 in k15869 in k15676 in k15673 in k15568 in k15517 in k7924 in k7921 in k5905 in k5612 in k5609 in k5605 in k5314 in k5311 in k5308 in k5305 */
static void C_ccall f_19808(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=(C_word)C_i_car(((C_word*)((C_word*)t0)[6])[1]);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[6])[1]);
t4=C_mutate(((C_word *)((C_word*)t0)[6])+1,t3);
t5=C_mutate(((C_word *)((C_word*)t0)[5])+1,t2);
t6=C_mutate(((C_word *)((C_word*)t0)[4])+1,((C_word*)((C_word*)t0)[3])[1]);
t7=((C_word*)t0)[2];
f_19775(2,t7,t6);}

/* k19785 in k19770 in k19759 in do3259 in parse-numerical-for in k18948 in k18945 in k18942 in k18939 in k18528 in k18525 in k18522 in k18519 in k18516 in k17994 in k17991 in k17468 in k17465 in k17462 in k17459 in k17456 in k17453 in k17450 in k17447 in k17444 in k17441 in k17438 in k17435 in k17432 in k17429 in k17426 in k17423 in k17420 in k17417 in k17414 in k17411 in k17408 in k17269 in k17266 in k17263 in k17260 in k17204 in k17201 in k17198 in k17195 in k17192 in k17189 in k17186 in k17183 in k15938 in k15869 in k15676 in k15673 in k15568 in k15517 in k7924 in k7921 in k5905 in k5612 in k5609 in k5605 in k5314 in k5311 in k5308 in k5305 */
static void C_ccall f_19787(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,((C_word*)((C_word*)t0)[5])[1]);
t3=(C_word)C_i_car(((C_word*)((C_word*)t0)[4])[1]);
t4=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
t5=C_mutate(((C_word *)((C_word*)t0)[4])+1,t4);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t3);
t7=((C_word*)t0)[2];
f_19775(2,t7,t6);}

/* k19773 in k19770 in k19759 in do3259 in parse-numerical-for in k18948 in k18945 in k18942 in k18939 in k18528 in k18525 in k18522 in k18519 in k18516 in k17994 in k17991 in k17468 in k17465 in k17462 in k17459 in k17456 in k17453 in k17450 in k17447 in k17444 in k17441 in k17438 in k17435 in k17432 in k17429 in k17426 in k17423 in k17420 in k17417 in k17414 in k17411 in k17408 in k17269 in k17266 in k17263 in k17260 in k17204 in k17201 in k17198 in k17195 in k17192 in k17189 in k17186 in k17183 in k15938 in k15869 in k15676 in k15673 in k15568 in k15517 in k7924 in k7921 in k5905 in k5612 in k5609 in k5605 in k5314 in k5311 in k5308 in k5305 */
static void C_ccall f_19775(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
t2=((C_word*)((C_word*)t0)[4])[1];
f_19751(t2,((C_word*)t0)[3],((C_word*)((C_word*)t0)[2])[1]);}

/* k19550 in parse-numerical-for in k18948 in k18945 in k18942 in k18939 in k18528 in k18525 in k18522 in k18519 in k18516 in k17994 in k17991 in k17468 in k17465 in k17462 in k17459 in k17456 in k17453 in k17450 in k17447 in k17444 in k17441 in k17438 in k17435 in k17432 in k17429 in k17426 in k17423 in k17420 in k17417 in k17414 in k17411 in k17408 in k17269 in k17266 in k17263 in k17260 in k17204 in k17201 in k17198 in k17195 in k17192 in k17189 in k17186 in k17183 in k15938 in k15869 in k15676 in k15673 in k15568 in k15517 in k7924 in k7921 in k5905 in k5612 in k5609 in k5605 in k5314 in k5311 in k5308 in k5305 */
static void C_ccall f_19552(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[14],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_19552,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|13,a[1]=(C_word)f_19555,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],a[7]=((C_word*)t0)[7],a[8]=((C_word*)t0)[8],a[9]=((C_word*)t0)[9],a[10]=((C_word*)t0)[10],a[11]=((C_word*)t0)[11],a[12]=((C_word*)t0)[12],a[13]=((C_word*)t0)[13],tmp=(C_word)a,a+=14,tmp);
t3=((C_word*)((C_word*)t0)[3])[1];
if(C_truep(t3)){
t4=t2;
f_19555(t4,C_SCHEME_UNDEFINED);}
else{
t4=C_mutate(((C_word *)((C_word*)t0)[3])+1,lf[432]);
t5=t2;
f_19555(t5,t4);}}

/* k19553 in k19550 in parse-numerical-for in k18948 in k18945 in k18942 in k18939 in k18528 in k18525 in k18522 in k18519 in k18516 in k17994 in k17991 in k17468 in k17465 in k17462 in k17459 in k17456 in k17453 in k17450 in k17447 in k17444 in k17441 in k17438 in k17435 in k17432 in k17429 in k17426 in k17423 in k17420 in k17417 in k17414 in k17411 in k17408 in k17269 in k17266 in k17263 in k17260 in k17204 in k17201 in k17198 in k17195 in k17192 in k17189 in k17186 in k17183 in k15938 in k15869 in k15676 in k15673 in k15568 in k15517 in k7924 in k7921 in k5905 in k5612 in k5609 in k5605 in k5314 in k5311 in k5308 in k5305 */
static void C_fcall f_19555(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[18],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_19555,NULL,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|11,a[1]=(C_word)f_19558,a[2]=((C_word*)t0)[4],a[3]=((C_word*)t0)[5],a[4]=((C_word*)t0)[6],a[5]=((C_word*)t0)[7],a[6]=((C_word*)t0)[8],a[7]=((C_word*)t0)[9],a[8]=((C_word*)t0)[10],a[9]=((C_word*)t0)[11],a[10]=((C_word*)t0)[12],a[11]=((C_word*)t0)[13],tmp=(C_word)a,a+=12,tmp);
t3=(C_word)C_eqp(((C_word*)((C_word*)t0)[3])[1],lf[428]);
t4=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_19718,a[2]=t2,a[3]=((C_word*)t0)[5],a[4]=((C_word*)t0)[2],a[5]=((C_word*)t0)[13],tmp=(C_word)a,a+=6,tmp);
if(C_truep(t3)){
t5=t4;
f_19718(t5,t3);}
else{
t5=(C_word)C_eqp(((C_word*)((C_word*)t0)[2])[1],lf[431]);
t6=t4;
f_19718(t6,(C_truep(t5)?t5:(C_word)C_eqp(((C_word*)((C_word*)t0)[2])[1],lf[429])));}}

/* k19716 in k19553 in k19550 in parse-numerical-for in k18948 in k18945 in k18942 in k18939 in k18528 in k18525 in k18522 in k18519 in k18516 in k17994 in k17991 in k17468 in k17465 in k17462 in k17459 in k17456 in k17453 in k17450 in k17447 in k17444 in k17441 in k17438 in k17435 in k17432 in k17429 in k17426 in k17423 in k17420 in k17417 in k17414 in k17411 in k17408 in k17269 in k17266 in k17263 in k17260 in k17204 in k17201 in k17198 in k17195 in k17192 in k17189 in k17186 in k17183 in k15938 in k15869 in k15676 in k15673 in k15568 in k15517 in k7924 in k7921 in k5905 in k5612 in k5609 in k5605 in k5314 in k5311 in k5308 in k5305 */
static void C_fcall f_19718(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word *a;
if(C_truep(t1)){
t2=C_mutate(((C_word *)((C_word*)t0)[5])+1,lf[93]);
t3=(C_word)C_eqp(((C_word*)((C_word*)t0)[4])[1],lf[429]);
if(C_truep(t3)){
t4=C_mutate(((C_word *)((C_word*)t0)[3])+1,lf[340]);
t5=((C_word*)t0)[2];
f_19558(t5,t4);}
else{
t4=C_mutate(((C_word *)((C_word*)t0)[3])+1,lf[341]);
t5=((C_word*)t0)[2];
f_19558(t5,t4);}}
else{
t2=C_mutate(((C_word *)((C_word*)t0)[5])+1,lf[91]);
t3=(C_word)C_eqp(((C_word*)((C_word*)t0)[4])[1],lf[430]);
if(C_truep(t3)){
t4=C_mutate(((C_word *)((C_word*)t0)[3])+1,lf[333]);
t5=((C_word*)t0)[2];
f_19558(t5,t4);}
else{
t4=C_mutate(((C_word *)((C_word*)t0)[3])+1,lf[339]);
t5=((C_word*)t0)[2];
f_19558(t5,t4);}}}

/* k19556 in k19553 in k19550 in parse-numerical-for in k18948 in k18945 in k18942 in k18939 in k18528 in k18525 in k18522 in k18519 in k18516 in k17994 in k17991 in k17468 in k17465 in k17462 in k17459 in k17456 in k17453 in k17450 in k17447 in k17444 in k17441 in k17438 in k17435 in k17432 in k17429 in k17426 in k17423 in k17420 in k17417 in k17414 in k17411 in k17408 in k17269 in k17266 in k17263 in k17260 in k17204 in k17201 in k17198 in k17195 in k17192 in k17189 in k17186 in k17183 in k15938 in k15869 in k15676 in k15673 in k15568 in k15517 in k7924 in k7921 in k5905 in k5612 in k5609 in k5605 in k5314 in k5311 in k5308 in k5305 */
static void C_fcall f_19558(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word ab[22],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_19558,NULL,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|10,a[1]=(C_word)f_19561,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],a[7]=((C_word*)t0)[8],a[8]=((C_word*)t0)[9],a[9]=((C_word*)t0)[10],a[10]=((C_word*)t0)[11],tmp=(C_word)a,a+=11,tmp);
t3=(C_word)C_i_not(((C_word*)((C_word*)t0)[2])[1]);
t4=(C_truep(t3)?t3:(C_word)C_i_numberp(((C_word*)((C_word*)t0)[2])[1]));
if(C_truep(t4)){
t5=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_19689,a[2]=t2,a[3]=((C_word*)t0)[4],tmp=(C_word)a,a+=4,tmp);
t6=((C_word*)((C_word*)t0)[2])[1];
t7=(C_truep(t6)?t6:C_fix(0));
C_trace("ChickenBridge.scm: 370  make-binding");
f_19294(t5,((C_word*)t0)[10],t7);}
else{
t5=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_19709,a[2]=t2,a[3]=((C_word*)t0)[5],a[4]=((C_word*)t0)[2],a[5]=((C_word*)t0)[10],a[6]=((C_word*)t0)[4],tmp=(C_word)a,a+=7,tmp);
C_trace("ChickenBridge.scm: 370  make-binding");
f_19294(t5,((C_word*)t0)[10],C_SCHEME_FALSE);}}

/* k19707 in k19556 in k19553 in k19550 in parse-numerical-for in k18948 in k18945 in k18942 in k18939 in k18528 in k18525 in k18522 in k18519 in k18516 in k17994 in k17991 in k17468 in k17465 in k17462 in k17459 in k17456 in k17453 in k17450 in k17447 in k17444 in k17441 in k17438 in k17435 in k17432 in k17429 in k17426 in k17423 in k17420 in k17417 in k17414 in k17411 in k17408 in k17269 in k17266 in k17263 in k17260 in k17204 in k17201 in k17198 in k17195 in k17192 in k17189 in k17186 in k17183 in k15938 in k15869 in k15676 in k15673 in k15568 in k15517 in k7924 in k7921 in k5905 in k5612 in k5609 in k5605 in k5314 in k5311 in k5308 in k5305 */
static void C_ccall f_19709(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word ab[15],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_19709,2,t0,t1);}
t2=(C_word)C_a_i_cons(&a,2,t1,((C_word*)((C_word*)t0)[6])[1]);
t3=C_mutate(((C_word *)((C_word*)t0)[6])+1,t2);
t4=(C_word)C_a_i_list(&a,3,lf[12],((C_word*)t0)[5],((C_word*)((C_word*)t0)[4])[1]);
t5=(C_word)C_a_i_cons(&a,2,t4,((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_19561(t7,((C_word*)((C_word*)t0)[3])[1]);}

/* k19687 in k19556 in k19553 in k19550 in parse-numerical-for in k18948 in k18945 in k18942 in k18939 in k18528 in k18525 in k18522 in k18519 in k18516 in k17994 in k17991 in k17468 in k17465 in k17462 in k17459 in k17456 in k17453 in k17450 in k17447 in k17444 in k17441 in k17438 in k17435 in k17432 in k17429 in k17426 in k17423 in k17420 in k17417 in k17414 in k17411 in k17408 in k17269 in k17266 in k17263 in k17260 in k17204 in k17201 in k17198 in k17195 in k17192 in k17189 in k17186 in k17183 in k15938 in k15869 in k15676 in k15673 in k15568 in k15517 in k7924 in k7921 in k5905 in k5612 in k5609 in k5605 in k5314 in k5311 in k5308 in k5305 */
static void C_ccall f_19689(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[3],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_19689,2,t0,t1);}
t2=(C_word)C_a_i_cons(&a,2,t1,((C_word*)((C_word*)t0)[3])[1]);
t3=C_mutate(((C_word *)((C_word*)t0)[3])+1,t2);
t4=((C_word*)t0)[2];
f_19561(t4,((C_word*)((C_word*)t0)[3])[1]);}

/* k19559 in k19556 in k19553 in k19550 in parse-numerical-for in k18948 in k18945 in k18942 in k18939 in k18528 in k18525 in k18522 in k18519 in k18516 in k17994 in k17991 in k17468 in k17465 in k17462 in k17459 in k17456 in k17453 in k17450 in k17447 in k17444 in k17441 in k17438 in k17435 in k17432 in k17429 in k17426 in k17423 in k17420 in k17417 in k17414 in k17411 in k17408 in k17269 in k17266 in k17263 in k17260 in k17204 in k17201 in k17198 in k17195 in k17192 in k17189 in k17186 in k17183 in k15938 in k15869 in k15676 in k15673 in k15568 in k15517 in k7924 in k7921 in k5905 in k5612 in k5609 in k5605 in k5314 in k5311 in k5308 in k5305 */
static void C_fcall f_19561(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[17],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_19561,NULL,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|10,a[1]=(C_word)f_19564,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],a[7]=((C_word*)t0)[7],a[8]=((C_word*)t0)[8],a[9]=((C_word*)t0)[9],a[10]=((C_word*)t0)[10],tmp=(C_word)a,a+=11,tmp);
t3=((C_word*)((C_word*)t0)[8])[1];
if(C_truep(t3)){
if(C_truep((C_word)C_i_numberp(((C_word*)((C_word*)t0)[8])[1]))){
t4=t2;
f_19564(t4,C_SCHEME_UNDEFINED);}
else{
t4=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_19654,a[2]=t2,a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[8],a[5]=((C_word*)t0)[3],tmp=(C_word)a,a+=6,tmp);
C_trace("ChickenBridge.scm: 370  gensym");
t5=C_retrieve(lf[26]);
((C_proc3)C_retrieve_proc(t5))(3,t5,t4,lf[427]);}}
else{
t4=C_set_block_item(((C_word*)t0)[8],0,C_fix(1));
t5=t2;
f_19564(t5,t4);}}

/* k19652 in k19559 in k19556 in k19553 in k19550 in parse-numerical-for in k18948 in k18945 in k18942 in k18939 in k18528 in k18525 in k18522 in k18519 in k18516 in k17994 in k17991 in k17468 in k17465 in k17462 in k17459 in k17456 in k17453 in k17450 in k17447 in k17444 in k17441 in k17438 in k17435 in k17432 in k17429 in k17426 in k17423 in k17420 in k17417 in k17414 in k17411 in k17408 in k17269 in k17266 in k17263 in k17260 in k17204 in k17201 in k17198 in k17195 in k17192 in k17189 in k17186 in k17183 in k15938 in k15869 in k15676 in k15673 in k15568 in k15517 in k7924 in k7921 in k5905 in k5612 in k5609 in k5605 in k5314 in k5311 in k5308 in k5305 */
static void C_ccall f_19654(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_19654,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_19671,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=t1,a[6]=((C_word*)t0)[5],tmp=(C_word)a,a+=7,tmp);
C_trace("ChickenBridge.scm: 370  make-binding");
f_19294(t2,t1,C_SCHEME_FALSE);}

/* k19669 in k19652 in k19559 in k19556 in k19553 in k19550 in parse-numerical-for in k18948 in k18945 in k18942 in k18939 in k18528 in k18525 in k18522 in k18519 in k18516 in k17994 in k17991 in k17468 in k17465 in k17462 in k17459 in k17456 in k17453 in k17450 in k17447 in k17444 in k17441 in k17438 in k17435 in k17432 in k17429 in k17426 in k17423 in k17420 in k17417 in k17414 in k17411 in k17408 in k17269 in k17266 in k17263 in k17260 in k17204 in k17201 in k17198 in k17195 in k17192 in k17189 in k17186 in k17183 in k15938 in k15869 in k15676 in k15673 in k15568 in k15517 in k7924 in k7921 in k5905 in k5612 in k5609 in k5605 in k5314 in k5311 in k5308 in k5305 */
static void C_ccall f_19671(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word ab[15],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_19671,2,t0,t1);}
t2=(C_word)C_a_i_cons(&a,2,t1,((C_word*)((C_word*)t0)[6])[1]);
t3=C_mutate(((C_word *)((C_word*)t0)[6])+1,t2);
t4=(C_word)C_a_i_list(&a,3,lf[12],((C_word*)t0)[5],((C_word*)((C_word*)t0)[4])[1]);
t5=(C_word)C_a_i_cons(&a,2,t4,((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=C_mutate(((C_word *)((C_word*)t0)[4])+1,((C_word*)t0)[5]);
t8=((C_word*)t0)[2];
f_19564(t8,t7);}

/* k19562 in k19559 in k19556 in k19553 in k19550 in parse-numerical-for in k18948 in k18945 in k18942 in k18939 in k18528 in k18525 in k18522 in k18519 in k18516 in k17994 in k17991 in k17468 in k17465 in k17462 in k17459 in k17456 in k17453 in k17450 in k17447 in k17444 in k17441 in k17438 in k17435 in k17432 in k17429 in k17426 in k17423 in k17420 in k17417 in k17414 in k17411 in k17408 in k17269 in k17266 in k17263 in k17260 in k17204 in k17201 in k17198 in k17195 in k17192 in k17189 in k17186 in k17183 in k15938 in k15869 in k15676 in k15673 in k15568 in k15517 in k7924 in k7921 in k5905 in k5612 in k5609 in k5605 in k5314 in k5311 in k5308 in k5305 */
static void C_fcall f_19564(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word ab[34],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_19564,NULL,2,t0,t1);}
t2=(C_word)C_a_i_list(&a,3,((C_word*)((C_word*)t0)[10])[1],((C_word*)t0)[9],((C_word*)((C_word*)t0)[8])[1]);
t3=(C_word)C_a_i_list(&a,3,lf[12],((C_word*)t0)[9],t2);
t4=C_mutate(((C_word *)((C_word*)t0)[8])+1,t3);
t5=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_19571,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[8],a[6]=((C_word*)t0)[6],a[7]=((C_word*)t0)[7],tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)((C_word*)t0)[5])[1])){
t6=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_19603,a[2]=((C_word*)t0)[4],a[3]=((C_word*)t0)[3],a[4]=t5,a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[9],a[7]=((C_word*)t0)[2],tmp=(C_word)a,a+=8,tmp);
C_trace("ChickenBridge.scm: 370  gensym");
t7=C_retrieve(lf[26]);
((C_proc3)C_retrieve_proc(t7))(3,t7,t6,lf[426]);}
else{
t6=t5;
f_19571(t6,C_SCHEME_UNDEFINED);}}

/* k19601 in k19562 in k19559 in k19556 in k19553 in k19550 in parse-numerical-for in k18948 in k18945 in k18942 in k18939 in k18528 in k18525 in k18522 in k18519 in k18516 in k17994 in k17991 in k17468 in k17465 in k17462 in k17459 in k17456 in k17453 in k17450 in k17447 in k17444 in k17441 in k17438 in k17435 in k17432 in k17429 in k17426 in k17423 in k17420 in k17417 in k17414 in k17411 in k17408 in k17269 in k17266 in k17263 in k17260 in k17204 in k17201 in k17198 in k17195 in k17192 in k17189 in k17186 in k17183 in k15938 in k15869 in k15676 in k15673 in k15568 in k15517 in k7924 in k7921 in k5905 in k5612 in k5609 in k5605 in k5314 in k5311 in k5308 in k5305 */
static void C_ccall f_19603(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[18],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_19603,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_19606,a[2]=((C_word*)t0)[4],a[3]=((C_word*)t0)[5],a[4]=t1,a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
if(C_truep((C_word)C_i_numberp(((C_word*)((C_word*)t0)[5])[1]))){
t3=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_19621,a[2]=t2,a[3]=((C_word*)t0)[3],tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 370  make-binding");
f_19294(t3,t1,((C_word*)((C_word*)t0)[5])[1]);}
else{
t3=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_19637,a[2]=t2,a[3]=((C_word*)t0)[2],a[4]=((C_word*)t0)[5],a[5]=t1,a[6]=((C_word*)t0)[3],tmp=(C_word)a,a+=7,tmp);
C_trace("ChickenBridge.scm: 370  make-binding");
f_19294(t3,t1,C_SCHEME_FALSE);}}

/* k19635 in k19601 in k19562 in k19559 in k19556 in k19553 in k19550 in parse-numerical-for in k18948 in k18945 in k18942 in k18939 in k18528 in k18525 in k18522 in k18519 in k18516 in k17994 in k17991 in k17468 in k17465 in k17462 in k17459 in k17456 in k17453 in k17450 in k17447 in k17444 in k17441 in k17438 in k17435 in k17432 in k17429 in k17426 in k17423 in k17420 in k17417 in k17414 in k17411 in k17408 in k17269 in k17266 in k17263 in k17260 in k17204 in k17201 in k17198 in k17195 in k17192 in k17189 in k17186 in k17183 in k15938 in k15869 in k15676 in k15673 in k15568 in k15517 in k7924 in k7921 in k5905 in k5612 in k5609 in k5605 in k5314 in k5311 in k5308 in k5305 */
static void C_ccall f_19637(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word ab[15],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_19637,2,t0,t1);}
t2=(C_word)C_a_i_cons(&a,2,t1,((C_word*)((C_word*)t0)[6])[1]);
t3=C_mutate(((C_word *)((C_word*)t0)[6])+1,t2);
t4=(C_word)C_a_i_list(&a,3,lf[12],((C_word*)t0)[5],((C_word*)((C_word*)t0)[4])[1]);
t5=(C_word)C_a_i_cons(&a,2,t4,((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_19606(t7,((C_word*)((C_word*)t0)[3])[1]);}

/* k19619 in k19601 in k19562 in k19559 in k19556 in k19553 in k19550 in parse-numerical-for in k18948 in k18945 in k18942 in k18939 in k18528 in k18525 in k18522 in k18519 in k18516 in k17994 in k17991 in k17468 in k17465 in k17462 in k17459 in k17456 in k17453 in k17450 in k17447 in k17444 in k17441 in k17438 in k17435 in k17432 in k17429 in k17426 in k17423 in k17420 in k17417 in k17414 in k17411 in k17408 in k17269 in k17266 in k17263 in k17260 in k17204 in k17201 in k17198 in k17195 in k17192 in k17189 in k17186 in k17183 in k15938 in k15869 in k15676 in k15673 in k15568 in k15517 in k7924 in k7921 in k5905 in k5612 in k5609 in k5605 in k5314 in k5311 in k5308 in k5305 */
static void C_ccall f_19621(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[3],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_19621,2,t0,t1);}
t2=(C_word)C_a_i_cons(&a,2,t1,((C_word*)((C_word*)t0)[3])[1]);
t3=C_mutate(((C_word *)((C_word*)t0)[3])+1,t2);
t4=((C_word*)t0)[2];
f_19606(t4,((C_word*)((C_word*)t0)[3])[1]);}

/* k19604 in k19601 in k19562 in k19559 in k19556 in k19553 in k19550 in parse-numerical-for in k18948 in k18945 in k18942 in k18939 in k18528 in k18525 in k18522 in k18519 in k18516 in k17994 in k17991 in k17468 in k17465 in k17462 in k17459 in k17456 in k17453 in k17450 in k17447 in k17444 in k17441 in k17438 in k17435 in k17432 in k17429 in k17426 in k17423 in k17420 in k17417 in k17414 in k17411 in k17408 in k17269 in k17266 in k17263 in k17260 in k17204 in k17201 in k17198 in k17195 in k17192 in k17189 in k17186 in k17183 in k15938 in k15869 in k15676 in k15673 in k15568 in k15517 in k7924 in k7921 in k5905 in k5612 in k5609 in k5605 in k5314 in k5311 in k5308 in k5305 */
static void C_fcall f_19606(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_19606,NULL,2,t0,t1);}
t2=(C_word)C_a_i_list(&a,3,((C_word*)((C_word*)t0)[6])[1],((C_word*)t0)[5],((C_word*)t0)[4]);
t3=C_mutate(((C_word *)((C_word*)t0)[3])+1,t2);
t4=((C_word*)t0)[2];
f_19571(t4,t3);}

/* k19569 in k19562 in k19559 in k19556 in k19553 in k19550 in parse-numerical-for in k18948 in k18945 in k18942 in k18939 in k18528 in k18525 in k18522 in k18519 in k18516 in k17994 in k17991 in k17468 in k17465 in k17462 in k17459 in k17456 in k17453 in k17450 in k17447 in k17444 in k17441 in k17438 in k17435 in k17432 in k17429 in k17426 in k17423 in k17420 in k17417 in k17414 in k17411 in k17408 in k17269 in k17266 in k17263 in k17260 in k17204 in k17201 in k17198 in k17195 in k17192 in k17189 in k17186 in k17183 in k15938 in k15869 in k15676 in k15673 in k15568 in k15517 in k7924 in k7921 in k5905 in k5612 in k5609 in k5605 in k5314 in k5311 in k5308 in k5305 */
static void C_fcall f_19571(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[10],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_19571,NULL,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_19578,a[2]=((C_word*)t0)[6],a[3]=((C_word*)t0)[7],tmp=(C_word)a,a+=4,tmp);
t3=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_19582,a[2]=((C_word*)t0)[3],a[3]=t2,a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],tmp=(C_word)a,a+=6,tmp);
C_trace("ChickenBridge.scm: 370  reverse");
t4=*((C_word*)lf[164]+1);
((C_proc3)C_retrieve_proc(t4))(3,t4,t3,((C_word*)((C_word*)t0)[2])[1]);}

/* k19580 in k19569 in k19562 in k19559 in k19556 in k19553 in k19550 in parse-numerical-for in k18948 in k18945 in k18942 in k18939 in k18528 in k18525 in k18522 in k18519 in k18516 in k17994 in k17991 in k17468 in k17465 in k17462 in k17459 in k17456 in k17453 in k17450 in k17447 in k17444 in k17441 in k17438 in k17435 in k17432 in k17429 in k17426 in k17423 in k17420 in k17417 in k17414 in k17411 in k17408 in k17269 in k17266 in k17263 in k17260 in k17204 in k17201 in k17198 in k17195 in k17192 in k17189 in k17186 in k17183 in k15938 in k15869 in k15676 in k15673 in k15568 in k15517 in k7924 in k7921 in k5905 in k5612 in k5609 in k5605 in k5314 in k5311 in k5308 in k5305 */
static void C_ccall f_19582(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[6],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_19582,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_19586,a[2]=t1,a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],tmp=(C_word)a,a+=6,tmp);
C_trace("ChickenBridge.scm: 370  reverse");
t3=*((C_word*)lf[164]+1);
((C_proc3)C_retrieve_proc(t3))(3,t3,t2,((C_word*)((C_word*)t0)[2])[1]);}

/* k19584 in k19580 in k19569 in k19562 in k19559 in k19556 in k19553 in k19550 in parse-numerical-for in k18948 in k18945 in k18942 in k18939 in k18528 in k18525 in k18522 in k18519 in k18516 in k17994 in k17991 in k17468 in k17465 in k17462 in k17459 in k17456 in k17453 in k17450 in k17447 in k17444 in k17441 in k17438 in k17435 in k17432 in k17429 in k17426 in k17423 in k17420 in k17417 in k17414 in k17411 in k17408 in k17269 in k17266 in k17263 in k17260 in k17204 in k17201 in k17198 in k17195 in k17192 in k17189 in k17186 in k17183 in k15938 in k15869 in k15676 in k15673 in k15568 in k15517 in k7924 in k7921 in k5905 in k5612 in k5609 in k5605 in k5314 in k5311 in k5308 in k5305 */
static void C_ccall f_19586(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[36],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_19586,2,t0,t1);}
t2=(C_word)C_a_i_list(&a,1,((C_word*)((C_word*)t0)[5])[1]);
t3=((C_word*)((C_word*)t0)[4])[1];
t4=(C_truep(t3)?(C_word)C_a_i_list(&a,1,((C_word*)((C_word*)t0)[4])[1]):C_SCHEME_END_OF_LIST);
C_trace("ChickenBridge.scm: 370  make-loop-clause");
f_19060(((C_word*)t0)[3],(C_word)C_a_i_list(&a,10,lf[393],lf[425],lf[394],((C_word*)t0)[2],lf[396],t1,lf[399],t2,lf[397],t4));}

/* k19576 in k19569 in k19562 in k19559 in k19556 in k19553 in k19550 in parse-numerical-for in k18948 in k18945 in k18942 in k18939 in k18528 in k18525 in k18522 in k18519 in k18516 in k17994 in k17991 in k17468 in k17465 in k17462 in k17459 in k17456 in k17453 in k17450 in k17447 in k17444 in k17441 in k17438 in k17435 in k17432 in k17429 in k17426 in k17423 in k17420 in k17417 in k17414 in k17411 in k17408 in k17269 in k17266 in k17263 in k17260 in k17204 in k17201 in k17198 in k17195 in k17192 in k17189 in k17186 in k17183 in k15938 in k15869 in k15676 in k15673 in k15568 in k15517 in k7924 in k7921 in k5905 in k5612 in k5609 in k5605 in k5314 in k5311 in k5308 in k5305 */
static void C_ccall f_19578(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 370  values");
C_values(4,0,((C_word*)t0)[3],t1,((C_word*)((C_word*)t0)[2])[1]);}

/* parse-for in k18948 in k18945 in k18942 in k18939 in k18528 in k18525 in k18522 in k18519 in k18516 in k17994 in k17991 in k17468 in k17465 in k17462 in k17459 in k17456 in k17453 in k17450 in k17447 in k17444 in k17441 in k17438 in k17435 in k17432 in k17429 in k17426 in k17423 in k17420 in k17417 in k17414 in k17411 in k17408 in k17269 in k17266 in k17263 in k17260 in k17204 in k17201 in k17198 in k17195 in k17192 in k17189 in k17186 in k17183 in k15938 in k15869 in k15676 in k15673 in k15568 in k15517 in k7924 in k7921 in k5905 in k5612 in k5609 in k5605 in k5314 in k5311 in k5308 in k5305 */
static void C_ccall f_19460(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4){
C_word tmp;
C_word t5;
C_word t6;
C_word t7;
C_word ab[6],*a=ab;
if(c!=5) C_bad_argc_2(c,5,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr5,(void*)f_19460,5,t0,t1,t2,t3,t4);}
t5=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_19464,a[2]=t3,a[3]=t4,a[4]=t1,a[5]=t2,tmp=(C_word)a,a+=6,tmp);
t6=(C_word)C_i_car(t2);
C_trace("ChickenBridge.scm: 370  loop-op?");
f_19282(t5,t6,t4);}

/* k19462 in parse-for in k18948 in k18945 in k18942 in k18939 in k18528 in k18525 in k18522 in k18519 in k18516 in k17994 in k17991 in k17468 in k17465 in k17462 in k17459 in k17456 in k17453 in k17450 in k17447 in k17444 in k17441 in k17438 in k17435 in k17432 in k17429 in k17426 in k17423 in k17420 in k17417 in k17414 in k17411 in k17408 in k17269 in k17266 in k17263 in k17260 in k17204 in k17201 in k17198 in k17195 in k17192 in k17189 in k17186 in k17183 in k15938 in k15869 in k15676 in k15673 in k15568 in k15517 in k7924 in k7921 in k5905 in k5612 in k5609 in k5605 in k5314 in k5311 in k5308 in k5305 */
static void C_ccall f_19464(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[10],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_19464,2,t0,t1);}
t2=(C_word)C_i_cdr(((C_word*)t0)[5]);
if(C_truep((C_word)C_i_nullp(t2))){
C_trace("ChickenBridge.scm: 370  loop-error");
f_19300(((C_word*)t0)[4],((C_word*)t0)[3],((C_word*)t0)[5],(C_word)C_a_i_list(&a,1,lf[417]));}
else{
t3=(C_word)C_i_cadr(((C_word*)t0)[5]);
t4=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_19482,a[2]=((C_word*)t0)[2],a[3]=t1,a[4]=((C_word*)t0)[3],a[5]=((C_word*)t0)[4],a[6]=((C_word*)t0)[5],tmp=(C_word)a,a+=7,tmp);
C_trace("ChickenBridge.scm: 370  loop-variable?");
f_19288(t4,t3);}}

/* k19480 in k19462 in parse-for in k18948 in k18945 in k18942 in k18939 in k18528 in k18525 in k18522 in k18519 in k18516 in k17994 in k17991 in k17468 in k17465 in k17462 in k17459 in k17456 in k17453 in k17450 in k17447 in k17444 in k17441 in k17438 in k17435 in k17432 in k17429 in k17426 in k17423 in k17420 in k17417 in k17414 in k17411 in k17408 in k17269 in k17266 in k17263 in k17260 in k17204 in k17201 in k17198 in k17195 in k17192 in k17189 in k17186 in k17183 in k15938 in k15869 in k15676 in k15673 in k15568 in k15517 in k7924 in k7921 in k5905 in k5612 in k5609 in k5605 in k5314 in k5311 in k5308 in k5305 */
static void C_ccall f_19482(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word ab[24],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_19482,2,t0,t1);}
if(C_truep(t1)){
t2=(C_word)C_i_cddr(((C_word*)t0)[6]);
if(C_truep((C_word)C_i_nullp(t2))){
C_trace("ChickenBridge.scm: 370  loop-error");
f_19300(((C_word*)t0)[5],((C_word*)t0)[4],((C_word*)t0)[6],(C_word)C_a_i_list(&a,1,lf[418]));}
else{
t3=(C_word)C_i_caddr(((C_word*)t0)[6]);
t4=(C_word)C_i_cdddr(((C_word*)t0)[3]);
t5=(C_word)C_i_assoc(t3,t4);
if(C_truep(t5)){
t6=(C_word)C_i_cadr(t5);
t7=t6;
((C_proc5)C_retrieve_proc(t7))(5,t7,((C_word*)t0)[5],((C_word*)t0)[6],((C_word*)t0)[2],((C_word*)t0)[4]);}
else{
t6=(C_word)C_i_caddr(((C_word*)t0)[6]);
C_trace("ChickenBridge.scm: 370  loop-error");
f_19300(((C_word*)t0)[5],((C_word*)t0)[4],((C_word*)t0)[6],(C_word)C_a_i_list(&a,4,lf[419],t6,lf[420],lf[421]));}}}
else{
t2=(C_word)C_i_cadr(((C_word*)t0)[6]);
C_trace("ChickenBridge.scm: 370  loop-error");
f_19300(((C_word*)t0)[5],((C_word*)t0)[4],((C_word*)t0)[6],(C_word)C_a_i_list(&a,3,lf[422],t2,lf[423]));}}

/* loop-error in k18948 in k18945 in k18942 in k18939 in k18528 in k18525 in k18522 in k18519 in k18516 in k17994 in k17991 in k17468 in k17465 in k17462 in k17459 in k17456 in k17453 in k17450 in k17447 in k17444 in k17441 in k17438 in k17435 in k17432 in k17429 in k17426 in k17423 in k17420 in k17417 in k17414 in k17411 in k17408 in k17269 in k17266 in k17263 in k17260 in k17204 in k17201 in k17198 in k17195 in k17192 in k17189 in k17186 in k17183 in k15938 in k15869 in k15676 in k15673 in k15568 in k15517 in k7924 in k7921 in k5905 in k5612 in k5609 in k5605 in k5314 in k5311 in k5308 in k5305 */
static void C_fcall f_19300(C_word t1,C_word t2,C_word t3,C_word t4){
C_word tmp;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word ab[14],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_19300,NULL,4,t1,t2,t3,t4);}
t5=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_19356,a[2]=t4,a[3]=t1,tmp=(C_word)a,a+=4,tmp);
t6=t3;
t7=(*a=C_VECTOR_TYPE|1,a[1]=t6,tmp=(C_word)a,a+=2,tmp);
t8=C_SCHEME_UNDEFINED;
t9=(*a=C_VECTOR_TYPE|1,a[1]=t8,tmp=(C_word)a,a+=2,tmp);
t10=C_set_block_item(t9,0,(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_19308,a[2]=t2,a[3]=t9,a[4]=t7,a[5]=((C_word)li296),tmp=(C_word)a,a+=6,tmp));
t11=((C_word*)t9)[1];
f_19308(t11,t5,((C_word*)t7)[1],C_SCHEME_END_OF_LIST);}

/* do3210 in loop-error in k18948 in k18945 in k18942 in k18939 in k18528 in k18525 in k18522 in k18519 in k18516 in k17994 in k17991 in k17468 in k17465 in k17462 in k17459 in k17456 in k17453 in k17450 in k17447 in k17444 in k17441 in k17438 in k17435 in k17432 in k17429 in k17426 in k17423 in k17420 in k17417 in k17414 in k17411 in k17408 in k17269 in k17266 in k17263 in k17260 in k17204 in k17201 in k17198 in k17195 in k17192 in k17189 in k17186 in k17183 in k15938 in k15869 in k15676 in k15673 in k15568 in k15517 in k7924 in k7921 in k5905 in k5612 in k5609 in k5605 in k5314 in k5311 in k5308 in k5305 */
static void C_fcall f_19308(C_word t0,C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_19308,NULL,4,t0,t1,t2,t3);}
t4=(*a=C_VECTOR_TYPE|1,a[1]=t3,tmp=(C_word)a,a+=2,tmp);
t5=(C_word)C_i_nullp(((C_word*)((C_word*)t0)[4])[1]);
t6=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_19318,a[2]=t2,a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=t4,a[6]=t1,tmp=(C_word)a,a+=7,tmp);
if(C_truep(t5)){
t7=t6;
f_19318(2,t7,t5);}
else{
t7=(C_word)C_eqp(t2,((C_word*)((C_word*)t0)[4])[1]);
if(C_truep(t7)){
t8=t6;
f_19318(2,t8,C_SCHEME_FALSE);}
else{
t8=(C_word)C_i_car(((C_word*)((C_word*)t0)[4])[1]);
C_trace("ChickenBridge.scm: 370  loop-op?");
f_19282(t6,t8,((C_word*)t0)[2]);}}}

/* k19316 in do3210 in loop-error in k18948 in k18945 in k18942 in k18939 in k18528 in k18525 in k18522 in k18519 in k18516 in k17994 in k17991 in k17468 in k17465 in k17462 in k17459 in k17456 in k17453 in k17450 in k17447 in k17444 in k17441 in k17438 in k17435 in k17432 in k17429 in k17426 in k17423 in k17420 in k17417 in k17414 in k17411 in k17408 in k17269 in k17266 in k17263 in k17260 in k17204 in k17201 in k17198 in k17195 in k17192 in k17189 in k17186 in k17183 in k15938 in k15869 in k15676 in k15673 in k15568 in k15517 in k7924 in k7921 in k5905 in k5612 in k5609 in k5605 in k5314 in k5311 in k5308 in k5305 */
static void C_ccall f_19318(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word ab[3],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_19318,2,t0,t1);}
if(C_truep(t1)){
C_trace("ChickenBridge.scm: 370  reverse");
t2=*((C_word*)lf[164]+1);
((C_proc3)C_retrieve_proc(t2))(3,t2,((C_word*)t0)[6],((C_word*)((C_word*)t0)[5])[1]);}
else{
t2=(C_word)C_i_car(((C_word*)((C_word*)t0)[4])[1]);
t3=(C_word)C_a_i_cons(&a,2,t2,((C_word*)((C_word*)t0)[5])[1]);
t4=C_mutate(((C_word *)((C_word*)t0)[5])+1,t3);
t5=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[4])+1,t5);
t7=((C_word*)((C_word*)t0)[3])[1];
f_19308(t7,((C_word*)t0)[6],((C_word*)t0)[2],((C_word*)((C_word*)t0)[5])[1]);}}

/* k19354 in loop-error in k18948 in k18945 in k18942 in k18939 in k18528 in k18525 in k18522 in k18519 in k18516 in k17994 in k17991 in k17468 in k17465 in k17462 in k17459 in k17456 in k17453 in k17450 in k17447 in k17444 in k17441 in k17438 in k17435 in k17432 in k17429 in k17426 in k17423 in k17420 in k17417 in k17414 in k17411 in k17408 in k17269 in k17266 in k17263 in k17260 in k17204 in k17201 in k17198 in k17195 in k17192 in k17189 in k17186 in k17183 in k15938 in k15869 in k15676 in k15673 in k15568 in k15517 in k7924 in k7921 in k5905 in k5612 in k5609 in k5605 in k5314 in k5311 in k5308 in k5305 */
static void C_ccall f_19356(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[5],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_19356,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_19359,a[2]=((C_word*)t0)[2],a[3]=t1,a[4]=((C_word*)t0)[3],tmp=(C_word)a,a+=5,tmp);
C_trace("ChickenBridge.scm: 370  newline");
t3=*((C_word*)lf[408]+1);
((C_proc2)C_retrieve_proc(t3))(2,t3,t2);}

/* k19357 in k19354 in loop-error in k18948 in k18945 in k18942 in k18939 in k18528 in k18525 in k18522 in k18519 in k18516 in k17994 in k17991 in k17468 in k17465 in k17462 in k17459 in k17456 in k17453 in k17450 in k17447 in k17444 in k17441 in k17438 in k17435 in k17432 in k17429 in k17426 in k17423 in k17420 in k17417 in k17414 in k17411 in k17408 in k17269 in k17266 in k17263 in k17260 in k17204 in k17201 in k17198 in k17195 in k17192 in k17189 in k17186 in k17183 in k15938 in k15869 in k15676 in k15673 in k15568 in k15517 in k7924 in k7921 in k5905 in k5612 in k5609 in k5605 in k5314 in k5311 in k5308 in k5305 */
static void C_ccall f_19359(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[5],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_19359,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_19362,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],tmp=(C_word)a,a+=5,tmp);
C_trace("ChickenBridge.scm: 370  display");
t3=*((C_word*)lf[409]+1);
((C_proc3)C_retrieve_proc(t3))(3,t3,t2,lf[415]);}

/* k19360 in k19357 in k19354 in loop-error in k18948 in k18945 in k18942 in k18939 in k18528 in k18525 in k18522 in k18519 in k18516 in k17994 in k17991 in k17468 in k17465 in k17462 in k17459 in k17456 in k17453 in k17450 in k17447 in k17444 in k17441 in k17438 in k17435 in k17432 in k17429 in k17426 in k17423 in k17420 in k17417 in k17414 in k17411 in k17408 in k17269 in k17266 in k17263 in k17260 in k17204 in k17201 in k17198 in k17195 in k17192 in k17189 in k17186 in k17183 in k15938 in k15869 in k15676 in k15673 in k15568 in k15517 in k7924 in k7921 in k5905 in k5612 in k5609 in k5605 in k5314 in k5311 in k5308 in k5305 */
static void C_ccall f_19362(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[10],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_19362,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_19365,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],tmp=(C_word)a,a+=4,tmp);
t3=C_SCHEME_UNDEFINED;
t4=(*a=C_VECTOR_TYPE|1,a[1]=t3,tmp=(C_word)a,a+=2,tmp);
t5=C_set_block_item(t4,0,(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_19437,a[2]=t4,a[3]=((C_word)li295),tmp=(C_word)a,a+=4,tmp));
t6=((C_word*)t4)[1];
f_19437(t6,t2,((C_word*)t0)[2]);}

/* do3220 in k19360 in k19357 in k19354 in loop-error in k18948 in k18945 in k18942 in k18939 in k18528 in k18525 in k18522 in k18519 in k18516 in k17994 in k17991 in k17468 in k17465 in k17462 in k17459 in k17456 in k17453 in k17450 in k17447 in k17444 in k17441 in k17438 in k17435 in k17432 in k17429 in k17426 in k17423 in k17420 in k17417 in k17414 in k17411 in k17408 in k17269 in k17266 in k17263 in k17260 in k17204 in k17201 in k17198 in k17195 in k17192 in k17189 in k17186 in k17183 in k15938 in k15869 in k15676 in k15673 in k15568 in k15517 in k7924 in k7921 in k5905 in k5612 in k5609 in k5605 in k5314 in k5311 in k5308 in k5305 */
static void C_fcall f_19437(C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word t5;
C_word ab[5],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_19437,NULL,3,t0,t1,t2);}
if(C_truep((C_word)C_i_nullp(t2))){
t3=t1;
((C_proc2)(void*)(*((C_word*)t3+1)))(2,t3,C_SCHEME_FALSE);}
else{
t3=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_19447,a[2]=t1,a[3]=((C_word*)t0)[2],a[4]=t2,tmp=(C_word)a,a+=5,tmp);
t4=(C_word)C_i_car(t2);
C_trace("ChickenBridge.scm: 370  display");
t5=*((C_word*)lf[409]+1);
((C_proc3)C_retrieve_proc(t5))(3,t5,t3,t4);}}

/* k19445 in do3220 in k19360 in k19357 in k19354 in loop-error in k18948 in k18945 in k18942 in k18939 in k18528 in k18525 in k18522 in k18519 in k18516 in k17994 in k17991 in k17468 in k17465 in k17462 in k17459 in k17456 in k17453 in k17450 in k17447 in k17444 in k17441 in k17438 in k17435 in k17432 in k17429 in k17426 in k17423 in k17420 in k17417 in k17414 in k17411 in k17408 in k17269 in k17266 in k17263 in k17260 in k17204 in k17201 in k17198 in k17195 in k17192 in k17189 in k17186 in k17183 in k15938 in k15869 in k15676 in k15673 in k15568 in k15517 in k7924 in k7921 in k5905 in k5612 in k5609 in k5605 in k5314 in k5311 in k5308 in k5305 */
static void C_ccall f_19447(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word *a;
t2=(C_word)C_i_cdr(((C_word*)t0)[4]);
t3=((C_word*)((C_word*)t0)[3])[1];
f_19437(t3,((C_word*)t0)[2],t2);}

/* k19363 in k19360 in k19357 in k19354 in loop-error in k18948 in k18945 in k18942 in k18939 in k18528 in k18525 in k18522 in k18519 in k18516 in k17994 in k17991 in k17468 in k17465 in k17462 in k17459 in k17456 in k17453 in k17450 in k17447 in k17444 in k17441 in k17438 in k17435 in k17432 in k17429 in k17426 in k17423 in k17420 in k17417 in k17414 in k17411 in k17408 in k17269 in k17266 in k17263 in k17260 in k17204 in k17201 in k17198 in k17195 in k17192 in k17189 in k17186 in k17183 in k15938 in k15869 in k15676 in k15673 in k15568 in k15517 in k7924 in k7921 in k5905 in k5612 in k5609 in k5605 in k5314 in k5311 in k5308 in k5305 */
static void C_ccall f_19365(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[4],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_19365,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_19368,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 370  newline");
t3=*((C_word*)lf[408]+1);
((C_proc2)C_retrieve_proc(t3))(2,t3,t2);}

/* k19366 in k19363 in k19360 in k19357 in k19354 in loop-error in k18948 in k18945 in k18942 in k18939 in k18528 in k18525 in k18522 in k18519 in k18516 in k17994 in k17991 in k17468 in k17465 in k17462 in k17459 in k17456 in k17453 in k17450 in k17447 in k17444 in k17441 in k17438 in k17435 in k17432 in k17429 in k17426 in k17423 in k17420 in k17417 in k17414 in k17411 in k17408 in k17269 in k17266 in k17263 in k17260 in k17204 in k17201 in k17198 in k17195 in k17192 in k17189 in k17186 in k17183 in k15938 in k15869 in k15676 in k15673 in k15568 in k15517 in k7924 in k7921 in k5905 in k5612 in k5609 in k5605 in k5314 in k5311 in k5308 in k5305 */
static void C_ccall f_19368(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[4],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_19368,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_19371,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 370  display");
t3=*((C_word*)lf[409]+1);
((C_proc3)C_retrieve_proc(t3))(3,t3,t2,lf[414]);}

/* k19369 in k19366 in k19363 in k19360 in k19357 in k19354 in loop-error in k18948 in k18945 in k18942 in k18939 in k18528 in k18525 in k18522 in k18519 in k18516 in k17994 in k17991 in k17468 in k17465 in k17462 in k17459 in k17456 in k17453 in k17450 in k17447 in k17444 in k17441 in k17438 in k17435 in k17432 in k17429 in k17426 in k17423 in k17420 in k17417 in k17414 in k17411 in k17408 in k17269 in k17266 in k17263 in k17260 in k17204 in k17201 in k17198 in k17195 in k17192 in k17189 in k17186 in k17183 in k15938 in k15869 in k15676 in k15673 in k15568 in k15517 in k7924 in k7921 in k5905 in k5612 in k5609 in k5605 in k5314 in k5311 in k5308 in k5305 */
static void C_ccall f_19371(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[10],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_19371,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_19374,a[2]=((C_word*)t0)[3],tmp=(C_word)a,a+=3,tmp);
if(C_truep((C_word)C_i_nullp(((C_word*)t0)[2]))){
C_trace("ChickenBridge.scm: 370  display");
t3=*((C_word*)lf[409]+1);
((C_proc3)C_retrieve_proc(t3))(3,t3,t2,lf[410]);}
else{
t3=C_SCHEME_UNDEFINED;
t4=(*a=C_VECTOR_TYPE|1,a[1]=t3,tmp=(C_word)a,a+=2,tmp);
t5=C_set_block_item(t4,0,(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_19391,a[2]=((C_word*)t0)[2],a[3]=t4,a[4]=((C_word)li294),tmp=(C_word)a,a+=5,tmp));
t6=((C_word*)t4)[1];
f_19391(t6,t2,((C_word*)t0)[2]);}}

/* do3225 in k19369 in k19366 in k19363 in k19360 in k19357 in k19354 in loop-error in k18948 in k18945 in k18942 in k18939 in k18528 in k18525 in k18522 in k18519 in k18516 in k17994 in k17991 in k17468 in k17465 in k17462 in k17459 in k17456 in k17453 in k17450 in k17447 in k17444 in k17441 in k17438 in k17435 in k17432 in k17429 in k17426 in k17423 in k17420 in k17417 in k17414 in k17411 in k17408 in k17269 in k17266 in k17263 in k17260 in k17204 in k17201 in k17198 in k17195 in k17192 in k17189 in k17186 in k17183 in k15938 in k15869 in k15676 in k15673 in k15568 in k15517 in k7924 in k7921 in k5905 in k5612 in k5609 in k5605 in k5314 in k5311 in k5308 in k5305 */
static void C_fcall f_19391(C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word t5;
C_word ab[5],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_19391,NULL,3,t0,t1,t2);}
if(C_truep((C_word)C_i_nullp(t2))){
t3=t1;
((C_proc2)(void*)(*((C_word*)t3+1)))(2,t3,C_SCHEME_FALSE);}
else{
t3=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_19401,a[2]=t1,a[3]=((C_word*)t0)[3],a[4]=t2,tmp=(C_word)a,a+=5,tmp);
t4=(C_word)C_eqp(t2,((C_word*)t0)[2]);
if(C_truep(t4)){
C_trace("ChickenBridge.scm: 370  display");
t5=*((C_word*)lf[409]+1);
((C_proc3)C_retrieve_proc(t5))(3,t5,t3,lf[413]);}
else{
t5=t3;
f_19401(2,t5,C_SCHEME_UNDEFINED);}}}

/* k19399 in do3225 in k19369 in k19366 in k19363 in k19360 in k19357 in k19354 in loop-error in k18948 in k18945 in k18942 in k18939 in k18528 in k18525 in k18522 in k18519 in k18516 in k17994 in k17991 in k17468 in k17465 in k17462 in k17459 in k17456 in k17453 in k17450 in k17447 in k17444 in k17441 in k17438 in k17435 in k17432 in k17429 in k17426 in k17423 in k17420 in k17417 in k17414 in k17411 in k17408 in k17269 in k17266 in k17263 in k17260 in k17204 in k17201 in k17198 in k17195 in k17192 in k17189 in k17186 in k17183 in k15938 in k15869 in k15676 in k15673 in k15568 in k15517 in k7924 in k7921 in k5905 in k5612 in k5609 in k5605 in k5314 in k5311 in k5308 in k5305 */
static void C_ccall f_19401(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[5],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_19401,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_19404,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],tmp=(C_word)a,a+=5,tmp);
t3=(C_word)C_i_car(((C_word*)t0)[4]);
C_trace("ChickenBridge.scm: 370  display");
t4=*((C_word*)lf[409]+1);
((C_proc3)C_retrieve_proc(t4))(3,t4,t2,t3);}

/* k19402 in k19399 in do3225 in k19369 in k19366 in k19363 in k19360 in k19357 in k19354 in loop-error in k18948 in k18945 in k18942 in k18939 in k18528 in k18525 in k18522 in k18519 in k18516 in k17994 in k17991 in k17468 in k17465 in k17462 in k17459 in k17456 in k17453 in k17450 in k17447 in k17444 in k17441 in k17438 in k17435 in k17432 in k17429 in k17426 in k17423 in k17420 in k17417 in k17414 in k17411 in k17408 in k17269 in k17266 in k17263 in k17260 in k17204 in k17201 in k17198 in k17195 in k17192 in k17189 in k17186 in k17183 in k15938 in k15869 in k15676 in k15673 in k15568 in k15517 in k7924 in k7921 in k5905 in k5612 in k5609 in k5605 in k5314 in k5311 in k5308 in k5305 */
static void C_ccall f_19404(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[5],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_19404,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_19407,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],tmp=(C_word)a,a+=5,tmp);
t3=(C_word)C_i_cdr(((C_word*)t0)[4]);
t4=(C_word)C_i_nullp(t3);
t5=(C_truep(t4)?lf[411]:lf[412]);
C_trace("ChickenBridge.scm: 370  display");
t6=*((C_word*)lf[409]+1);
((C_proc3)C_retrieve_proc(t6))(3,t6,t2,t5);}

/* k19405 in k19402 in k19399 in do3225 in k19369 in k19366 in k19363 in k19360 in k19357 in k19354 in loop-error in k18948 in k18945 in k18942 in k18939 in k18528 in k18525 in k18522 in k18519 in k18516 in k17994 in k17991 in k17468 in k17465 in k17462 in k17459 in k17456 in k17453 in k17450 in k17447 in k17444 in k17441 in k17438 in k17435 in k17432 in k17429 in k17426 in k17423 in k17420 in k17417 in k17414 in k17411 in k17408 in k17269 in k17266 in k17263 in k17260 in k17204 in k17201 in k17198 in k17195 in k17192 in k17189 in k17186 in k17183 in k15938 in k15869 in k15676 in k15673 in k15568 in k15517 in k7924 in k7921 in k5905 in k5612 in k5609 in k5605 in k5314 in k5311 in k5308 in k5305 */
static void C_ccall f_19407(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word *a;
t2=(C_word)C_i_cdr(((C_word*)t0)[4]);
t3=((C_word*)((C_word*)t0)[3])[1];
f_19391(t3,((C_word*)t0)[2],t2);}

/* k19372 in k19369 in k19366 in k19363 in k19360 in k19357 in k19354 in loop-error in k18948 in k18945 in k18942 in k18939 in k18528 in k18525 in k18522 in k18519 in k18516 in k17994 in k17991 in k17468 in k17465 in k17462 in k17459 in k17456 in k17453 in k17450 in k17447 in k17444 in k17441 in k17438 in k17435 in k17432 in k17429 in k17426 in k17423 in k17420 in k17417 in k17414 in k17411 in k17408 in k17269 in k17266 in k17263 in k17260 in k17204 in k17201 in k17198 in k17195 in k17192 in k17189 in k17186 in k17183 in k15938 in k15869 in k15676 in k15673 in k15568 in k15517 in k7924 in k7921 in k5905 in k5612 in k5609 in k5605 in k5314 in k5311 in k5308 in k5305 */
static void C_ccall f_19374(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[3],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_19374,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_19377,a[2]=((C_word*)t0)[2],tmp=(C_word)a,a+=3,tmp);
C_trace("ChickenBridge.scm: 370  newline");
t3=*((C_word*)lf[408]+1);
((C_proc2)C_retrieve_proc(t3))(2,t3,t2);}

/* k19375 in k19372 in k19369 in k19366 in k19363 in k19360 in k19357 in k19354 in loop-error in k18948 in k18945 in k18942 in k18939 in k18528 in k18525 in k18522 in k18519 in k18516 in k17994 in k17991 in k17468 in k17465 in k17462 in k17459 in k17456 in k17453 in k17450 in k17447 in k17444 in k17441 in k17438 in k17435 in k17432 in k17429 in k17426 in k17423 in k17420 in k17417 in k17414 in k17411 in k17408 in k17269 in k17266 in k17263 in k17260 in k17204 in k17201 in k17198 in k17195 in k17192 in k17189 in k17186 in k17183 in k15938 in k15869 in k15676 in k15673 in k15568 in k15517 in k7924 in k7921 in k5905 in k5612 in k5609 in k5605 in k5314 in k5311 in k5308 in k5305 */
static void C_ccall f_19377(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 370  error");
t2=*((C_word*)lf[4]+1);
((C_proc3)C_retrieve_proc(t2))(3,t2,((C_word*)t0)[2],lf[407]);}

/* make-binding in k18948 in k18945 in k18942 in k18939 in k18528 in k18525 in k18522 in k18519 in k18516 in k17994 in k17991 in k17468 in k17465 in k17462 in k17459 in k17456 in k17453 in k17450 in k17447 in k17444 in k17441 in k17438 in k17435 in k17432 in k17429 in k17426 in k17423 in k17420 in k17417 in k17414 in k17411 in k17408 in k17269 in k17266 in k17263 in k17260 in k17204 in k17201 in k17198 in k17195 in k17192 in k17189 in k17186 in k17183 in k15938 in k15869 in k15676 in k15673 in k15568 in k15517 in k7924 in k7921 in k5905 in k5612 in k5609 in k5605 in k5314 in k5311 in k5308 in k5305 */
static void C_fcall f_19294(C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word ab[6],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_19294,NULL,3,t1,t2,t3);}
t4=t1;
((C_proc2)(void*)(*((C_word*)t4+1)))(2,t4,(C_word)C_a_i_list(&a,2,t2,t3));}

/* loop-variable? in k18948 in k18945 in k18942 in k18939 in k18528 in k18525 in k18522 in k18519 in k18516 in k17994 in k17991 in k17468 in k17465 in k17462 in k17459 in k17456 in k17453 in k17450 in k17447 in k17444 in k17441 in k17438 in k17435 in k17432 in k17429 in k17426 in k17423 in k17420 in k17417 in k17414 in k17411 in k17408 in k17269 in k17266 in k17263 in k17260 in k17204 in k17201 in k17198 in k17195 in k17192 in k17189 in k17186 in k17183 in k15938 in k15869 in k15676 in k15673 in k15568 in k15517 in k7924 in k7921 in k5905 in k5612 in k5609 in k5605 in k5314 in k5311 in k5308 in k5305 */
static void C_fcall f_19288(C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word *a;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_19288,NULL,2,t1,t2);}
t3=t1;
((C_proc2)(void*)(*((C_word*)t3+1)))(2,t3,(C_word)C_i_symbolp(t2));}

/* loop-op? in k18948 in k18945 in k18942 in k18939 in k18528 in k18525 in k18522 in k18519 in k18516 in k17994 in k17991 in k17468 in k17465 in k17462 in k17459 in k17456 in k17453 in k17450 in k17447 in k17444 in k17441 in k17438 in k17435 in k17432 in k17429 in k17426 in k17423 in k17420 in k17417 in k17414 in k17411 in k17408 in k17269 in k17266 in k17263 in k17260 in k17204 in k17201 in k17198 in k17195 in k17192 in k17189 in k17186 in k17183 in k15938 in k15869 in k15676 in k15673 in k15568 in k15517 in k7924 in k7921 in k5905 in k5612 in k5609 in k5605 in k5314 in k5311 in k5308 in k5305 */
static void C_fcall f_19282(C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word *a;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_19282,NULL,3,t1,t2,t3);}
t4=t1;
((C_proc2)(void*)(*((C_word*)t4+1)))(2,t4,(C_word)C_i_assoc(t2,t3));}

/* gather-clauses in k18948 in k18945 in k18942 in k18939 in k18528 in k18525 in k18522 in k18519 in k18516 in k17994 in k17991 in k17468 in k17465 in k17462 in k17459 in k17456 in k17453 in k17450 in k17447 in k17444 in k17441 in k17438 in k17435 in k17432 in k17429 in k17426 in k17423 in k17420 in k17417 in k17414 in k17411 in k17408 in k17269 in k17266 in k17263 in k17260 in k17204 in k17201 in k17198 in k17195 in k17192 in k17189 in k17186 in k17183 in k15938 in k15869 in k15676 in k15673 in k15568 in k15517 in k7924 in k7921 in k5905 in k5612 in k5609 in k5605 in k5314 in k5311 in k5308 in k5305 */
static void C_fcall f_19211(C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word t6;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_19211,NULL,3,t1,t2,t3);}
t4=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_19213,a[2]=((C_word)li289),tmp=(C_word)a,a+=3,tmp);
t5=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_19252,a[2]=t3,a[3]=t4,a[4]=t2,a[5]=t1,tmp=(C_word)a,a+=6,tmp);
C_trace("ChickenBridge.scm: 370  gather-clause");
f_19213(t5,t3,C_retrieve2(lf[383],"loop-bindings"));}

/* k19250 in gather-clauses in k18948 in k18945 in k18942 in k18939 in k18528 in k18525 in k18522 in k18519 in k18516 in k17994 in k17991 in k17468 in k17465 in k17462 in k17459 in k17456 in k17453 in k17450 in k17447 in k17444 in k17441 in k17438 in k17435 in k17432 in k17429 in k17426 in k17423 in k17420 in k17417 in k17414 in k17411 in k17408 in k17269 in k17266 in k17263 in k17260 in k17204 in k17201 in k17198 in k17195 in k17192 in k17189 in k17186 in k17183 in k15938 in k15869 in k15676 in k15673 in k15568 in k15517 in k7924 in k7921 in k5905 in k5612 in k5609 in k5605 in k5314 in k5311 in k5308 in k5305 */
static void C_ccall f_19252(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_19252,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_19256,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=t1,a[5]=((C_word*)t0)[4],a[6]=((C_word*)t0)[5],tmp=(C_word)a,a+=7,tmp);
C_trace("ChickenBridge.scm: 370  gather-clause");
f_19213(t2,((C_word*)t0)[2],C_retrieve2(lf[384],"loop-collectors"));}

/* k19254 in k19250 in gather-clauses in k18948 in k18945 in k18942 in k18939 in k18528 in k18525 in k18522 in k18519 in k18516 in k17994 in k17991 in k17468 in k17465 in k17462 in k17459 in k17456 in k17453 in k17450 in k17447 in k17444 in k17441 in k17438 in k17435 in k17432 in k17429 in k17426 in k17423 in k17420 in k17417 in k17414 in k17411 in k17408 in k17269 in k17266 in k17263 in k17260 in k17204 in k17201 in k17198 in k17195 in k17192 in k17189 in k17186 in k17183 in k15938 in k15869 in k15676 in k15673 in k15568 in k15517 in k7924 in k7921 in k5905 in k5612 in k5609 in k5605 in k5314 in k5311 in k5308 in k5305 */
static void C_ccall f_19256(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[8],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_19256,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_19260,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=t1,a[5]=((C_word*)t0)[4],a[6]=((C_word*)t0)[5],a[7]=((C_word*)t0)[6],tmp=(C_word)a,a+=8,tmp);
C_trace("ChickenBridge.scm: 370  gather-clause");
f_19213(t2,((C_word*)t0)[2],C_retrieve2(lf[385],"loop-initially"));}

/* k19258 in k19254 in k19250 in gather-clauses in k18948 in k18945 in k18942 in k18939 in k18528 in k18525 in k18522 in k18519 in k18516 in k17994 in k17991 in k17468 in k17465 in k17462 in k17459 in k17456 in k17453 in k17450 in k17447 in k17444 in k17441 in k17438 in k17435 in k17432 in k17429 in k17426 in k17423 in k17420 in k17417 in k17414 in k17411 in k17408 in k17269 in k17266 in k17263 in k17260 in k17204 in k17201 in k17198 in k17195 in k17192 in k17189 in k17186 in k17183 in k15938 in k15869 in k15676 in k15673 in k15568 in k15517 in k7924 in k7921 in k5905 in k5612 in k5609 in k5605 in k5314 in k5311 in k5308 in k5305 */
static void C_ccall f_19260(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_19260,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|8,a[1]=(C_word)f_19264,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=t1,a[5]=((C_word*)t0)[4],a[6]=((C_word*)t0)[5],a[7]=((C_word*)t0)[6],a[8]=((C_word*)t0)[7],tmp=(C_word)a,a+=9,tmp);
C_trace("ChickenBridge.scm: 370  gather-clause");
f_19213(t2,((C_word*)t0)[2],C_retrieve2(lf[386],"loop-end-tests"));}

/* k19262 in k19258 in k19254 in k19250 in gather-clauses in k18948 in k18945 in k18942 in k18939 in k18528 in k18525 in k18522 in k18519 in k18516 in k17994 in k17991 in k17468 in k17465 in k17462 in k17459 in k17456 in k17453 in k17450 in k17447 in k17444 in k17441 in k17438 in k17435 in k17432 in k17429 in k17426 in k17423 in k17420 in k17417 in k17414 in k17411 in k17408 in k17269 in k17266 in k17263 in k17260 in k17204 in k17201 in k17198 in k17195 in k17192 in k17189 in k17186 in k17183 in k15938 in k15869 in k15676 in k15673 in k15568 in k15517 in k7924 in k7921 in k5905 in k5612 in k5609 in k5605 in k5314 in k5311 in k5308 in k5305 */
static void C_ccall f_19264(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[10],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_19264,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|9,a[1]=(C_word)f_19268,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=t1,a[5]=((C_word*)t0)[4],a[6]=((C_word*)t0)[5],a[7]=((C_word*)t0)[6],a[8]=((C_word*)t0)[7],a[9]=((C_word*)t0)[8],tmp=(C_word)a,a+=10,tmp);
C_trace("ChickenBridge.scm: 370  gather-clause");
f_19213(t2,((C_word*)t0)[2],C_retrieve2(lf[387],"loop-looping"));}

/* k19266 in k19262 in k19258 in k19254 in k19250 in gather-clauses in k18948 in k18945 in k18942 in k18939 in k18528 in k18525 in k18522 in k18519 in k18516 in k17994 in k17991 in k17468 in k17465 in k17462 in k17459 in k17456 in k17453 in k17450 in k17447 in k17444 in k17441 in k17438 in k17435 in k17432 in k17429 in k17426 in k17423 in k17420 in k17417 in k17414 in k17411 in k17408 in k17269 in k17266 in k17263 in k17260 in k17204 in k17201 in k17198 in k17195 in k17192 in k17189 in k17186 in k17183 in k15938 in k15869 in k15676 in k15673 in k15568 in k15517 in k7924 in k7921 in k5905 in k5612 in k5609 in k5605 in k5314 in k5311 in k5308 in k5305 */
static void C_ccall f_19268(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[11],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_19268,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|10,a[1]=(C_word)f_19272,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=t1,a[5]=((C_word*)t0)[4],a[6]=((C_word*)t0)[5],a[7]=((C_word*)t0)[6],a[8]=((C_word*)t0)[7],a[9]=((C_word*)t0)[8],a[10]=((C_word*)t0)[9],tmp=(C_word)a,a+=11,tmp);
C_trace("ChickenBridge.scm: 370  gather-clause");
f_19213(t2,((C_word*)t0)[2],C_retrieve2(lf[389],"loop-stepping"));}

/* k19270 in k19266 in k19262 in k19258 in k19254 in k19250 in gather-clauses in k18948 in k18945 in k18942 in k18939 in k18528 in k18525 in k18522 in k18519 in k18516 in k17994 in k17991 in k17468 in k17465 in k17462 in k17459 in k17456 in k17453 in k17450 in k17447 in k17444 in k17441 in k17438 in k17435 in k17432 in k17429 in k17426 in k17423 in k17420 in k17417 in k17414 in k17411 in k17408 in k17269 in k17266 in k17263 in k17260 in k17204 in k17201 in k17198 in k17195 in k17192 in k17189 in k17186 in k17183 in k15938 in k15869 in k15676 in k15673 in k15568 in k15517 in k7924 in k7921 in k5905 in k5612 in k5609 in k5605 in k5314 in k5311 in k5308 in k5305 */
static void C_ccall f_19272(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[12],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_19272,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|11,a[1]=(C_word)f_19276,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=t1,a[5]=((C_word*)t0)[4],a[6]=((C_word*)t0)[5],a[7]=((C_word*)t0)[6],a[8]=((C_word*)t0)[7],a[9]=((C_word*)t0)[8],a[10]=((C_word*)t0)[9],a[11]=((C_word*)t0)[10],tmp=(C_word)a,a+=12,tmp);
C_trace("ChickenBridge.scm: 370  gather-clause");
f_19213(t2,((C_word*)t0)[2],C_retrieve2(lf[390],"loop-finally"));}

/* k19274 in k19270 in k19266 in k19262 in k19258 in k19254 in k19250 in gather-clauses in k18948 in k18945 in k18942 in k18939 in k18528 in k18525 in k18522 in k18519 in k18516 in k17994 in k17991 in k17468 in k17465 in k17462 in k17459 in k17456 in k17453 in k17450 in k17447 in k17444 in k17441 in k17438 in k17435 in k17432 in k17429 in k17426 in k17423 in k17420 in k17417 in k17414 in k17411 in k17408 in k17269 in k17266 in k17263 in k17260 in k17204 in k17201 in k17198 in k17195 in k17192 in k17189 in k17186 in k17183 in k15938 in k15869 in k15676 in k15673 in k15568 in k15517 in k7924 in k7921 in k5905 in k5612 in k5609 in k5605 in k5314 in k5311 in k5308 in k5305 */
static void C_ccall f_19276(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[11],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_19276,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|10,a[1]=(C_word)f_19280,a[2]=t1,a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],a[7]=((C_word*)t0)[8],a[8]=((C_word*)t0)[9],a[9]=((C_word*)t0)[10],a[10]=((C_word*)t0)[11],tmp=(C_word)a,a+=11,tmp);
C_trace("ChickenBridge.scm: 370  gather-clause");
f_19213(t2,((C_word*)t0)[2],C_retrieve2(lf[391],"loop-returning"));}

/* k19278 in k19274 in k19270 in k19266 in k19262 in k19258 in k19254 in k19250 in gather-clauses in k18948 in k18945 in k18942 in k18939 in k18528 in k18525 in k18522 in k18519 in k18516 in k17994 in k17991 in k17468 in k17465 in k17462 in k17459 in k17456 in k17453 in k17450 in k17447 in k17444 in k17441 in k17438 in k17435 in k17432 in k17429 in k17426 in k17423 in k17420 in k17417 in k17414 in k17411 in k17408 in k17269 in k17266 in k17263 in k17260 in k17204 in k17201 in k17198 in k17195 in k17192 in k17189 in k17186 in k17183 in k15938 in k15869 in k15676 in k15673 in k15568 in k15517 in k7924 in k7921 in k5905 in k5612 in k5609 in k5605 in k5314 in k5311 in k5308 in k5305 */
static void C_ccall f_19280(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word ab[54],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_19280,2,t0,t1);}
C_trace("ChickenBridge.scm: 370  make-loop-clause");
f_19060(((C_word*)t0)[10],(C_word)C_a_i_list(&a,18,lf[393],((C_word*)t0)[9],lf[394],((C_word*)t0)[8],lf[395],((C_word*)t0)[7],lf[396],((C_word*)t0)[6],lf[397],((C_word*)t0)[5],lf[398],((C_word*)t0)[4],lf[399],((C_word*)t0)[3],lf[400],((C_word*)t0)[2],lf[401],t1));}

/* gather-clause in gather-clauses in k18948 in k18945 in k18942 in k18939 in k18528 in k18525 in k18522 in k18519 in k18516 in k17994 in k17991 in k17468 in k17465 in k17462 in k17459 in k17456 in k17453 in k17450 in k17447 in k17444 in k17441 in k17438 in k17435 in k17432 in k17429 in k17426 in k17423 in k17420 in k17417 in k17414 in k17411 in k17408 in k17269 in k17266 in k17263 in k17260 in k17204 in k17201 in k17198 in k17195 in k17192 in k17189 in k17186 in k17183 in k15938 in k15869 in k15676 in k15673 in k15568 in k15517 in k7924 in k7921 in k5905 in k5612 in k5609 in k5605 in k5314 in k5311 in k5308 in k5305 */
static void C_fcall f_19213(C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word ab[10],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_19213,NULL,3,t1,t2,t3);}
t4=(*a=C_VECTOR_TYPE|1,a[1]=t2,tmp=(C_word)a,a+=2,tmp);
t5=C_SCHEME_UNDEFINED;
t6=(*a=C_VECTOR_TYPE|1,a[1]=t5,tmp=(C_word)a,a+=2,tmp);
t7=C_set_block_item(t6,0,(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_19219,a[2]=t3,a[3]=t6,a[4]=t4,a[5]=((C_word)li288),tmp=(C_word)a,a+=6,tmp));
t8=((C_word*)t6)[1];
f_19219(t8,t1,C_SCHEME_END_OF_LIST);}

/* do3193 in gather-clause in gather-clauses in k18948 in k18945 in k18942 in k18939 in k18528 in k18525 in k18522 in k18519 in k18516 in k17994 in k17991 in k17468 in k17465 in k17462 in k17459 in k17456 in k17453 in k17450 in k17447 in k17444 in k17441 in k17438 in k17435 in k17432 in k17429 in k17426 in k17423 in k17420 in k17417 in k17414 in k17411 in k17408 in k17269 in k17266 in k17263 in k17260 in k17204 in k17201 in k17198 in k17195 in k17192 in k17189 in k17186 in k17183 in k15938 in k15869 in k15676 in k15673 in k15568 in k15517 in k7924 in k7921 in k5905 in k5612 in k5609 in k5605 in k5314 in k5311 in k5308 in k5305 */
static void C_fcall f_19219(C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word ab[12],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_19219,NULL,3,t0,t1,t2);}
t3=(*a=C_VECTOR_TYPE|1,a[1]=t2,tmp=(C_word)a,a+=2,tmp);
if(C_truep((C_word)C_i_nullp(((C_word*)((C_word*)t0)[4])[1]))){
t4=t1;
((C_proc2)(void*)(*((C_word*)t4+1)))(2,t4,((C_word*)t3)[1]);}
else{
t4=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_19230,a[2]=t1,a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=t3,tmp=(C_word)a,a+=6,tmp);
t5=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_19241,a[2]=t3,a[3]=t4,tmp=(C_word)a,a+=4,tmp);
t6=(C_word)C_i_car(((C_word*)((C_word*)t0)[4])[1]);
C_trace("ChickenBridge.scm: 370  accessor");
t7=((C_word*)t0)[2];
((C_proc3)C_retrieve_proc(t7))(3,t7,t5,t6);}}

/* k19239 in do3193 in gather-clause in gather-clauses in k18948 in k18945 in k18942 in k18939 in k18528 in k18525 in k18522 in k18519 in k18516 in k17994 in k17991 in k17468 in k17465 in k17462 in k17459 in k17456 in k17453 in k17450 in k17447 in k17444 in k17441 in k17438 in k17435 in k17432 in k17429 in k17426 in k17423 in k17420 in k17417 in k17414 in k17411 in k17408 in k17269 in k17266 in k17263 in k17260 in k17204 in k17201 in k17198 in k17195 in k17192 in k17189 in k17186 in k17183 in k15938 in k15869 in k15676 in k15673 in k15568 in k15517 in k7924 in k7921 in k5905 in k5612 in k5609 in k5605 in k5314 in k5311 in k5308 in k5305 */
static void C_ccall f_19241(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 370  append");
t2=*((C_word*)lf[18]+1);
((C_proc4)C_retrieve_proc(t2))(4,t2,((C_word*)t0)[3],((C_word*)((C_word*)t0)[2])[1],t1);}

/* k19228 in do3193 in gather-clause in gather-clauses in k18948 in k18945 in k18942 in k18939 in k18528 in k18525 in k18522 in k18519 in k18516 in k17994 in k17991 in k17468 in k17465 in k17462 in k17459 in k17456 in k17453 in k17450 in k17447 in k17444 in k17441 in k17438 in k17435 in k17432 in k17429 in k17426 in k17423 in k17420 in k17417 in k17414 in k17411 in k17408 in k17269 in k17266 in k17263 in k17260 in k17204 in k17201 in k17198 in k17195 in k17192 in k17189 in k17186 in k17183 in k15938 in k15869 in k15676 in k15673 in k15568 in k15517 in k7924 in k7921 in k5905 in k5612 in k5609 in k5605 in k5314 in k5311 in k5308 in k5305 */
static void C_ccall f_19230(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[5])+1,t1);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
t4=C_mutate(((C_word *)((C_word*)t0)[4])+1,t3);
t5=((C_word*)((C_word*)t0)[3])[1];
f_19219(t5,((C_word*)t0)[2],((C_word*)((C_word*)t0)[5])[1]);}

/* make-loop-clause in k18948 in k18945 in k18942 in k18939 in k18528 in k18525 in k18522 in k18519 in k18516 in k17994 in k17991 in k17468 in k17465 in k17462 in k17459 in k17456 in k17453 in k17450 in k17447 in k17444 in k17441 in k17438 in k17435 in k17432 in k17429 in k17426 in k17423 in k17420 in k17417 in k17414 in k17411 in k17408 in k17269 in k17266 in k17263 in k17260 in k17204 in k17201 in k17198 in k17195 in k17192 in k17189 in k17186 in k17183 in k15938 in k15869 in k15676 in k15673 in k15568 in k15517 in k7924 in k7921 in k5905 in k5612 in k5609 in k5605 in k5314 in k5311 in k5308 in k5305 */
static void C_fcall f_19060(C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word ab[17],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_19060,NULL,2,t1,t2);}
t3=(C_word)C_a_i_vector(&a,9,C_SCHEME_FALSE,C_SCHEME_END_OF_LIST,C_SCHEME_END_OF_LIST,C_SCHEME_END_OF_LIST,C_SCHEME_END_OF_LIST,C_SCHEME_END_OF_LIST,C_SCHEME_END_OF_LIST,C_SCHEME_END_OF_LIST,C_SCHEME_END_OF_LIST);
if(C_truep((C_word)C_i_nullp(t2))){
t4=t1;
((C_proc2)(void*)(*((C_word*)t4+1)))(2,t4,t3);}
else{
t4=C_SCHEME_UNDEFINED;
t5=(*a=C_VECTOR_TYPE|1,a[1]=t4,tmp=(C_word)a,a+=2,tmp);
t6=C_set_block_item(t5,0,(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_19075,a[2]=t5,a[3]=t3,a[4]=((C_word)li286),tmp=(C_word)a,a+=5,tmp));
t7=((C_word*)t5)[1];
f_19075(t7,t1,t2);}}

/* do3181 in make-loop-clause in k18948 in k18945 in k18942 in k18939 in k18528 in k18525 in k18522 in k18519 in k18516 in k17994 in k17991 in k17468 in k17465 in k17462 in k17459 in k17456 in k17453 in k17450 in k17447 in k17444 in k17441 in k17438 in k17435 in k17432 in k17429 in k17426 in k17423 in k17420 in k17417 in k17414 in k17411 in k17408 in k17269 in k17266 in k17263 in k17260 in k17204 in k17201 in k17198 in k17195 in k17192 in k17189 in k17186 in k17183 in k15938 in k15869 in k15676 in k15673 in k15568 in k15517 in k7924 in k7921 in k5905 in k5612 in k5609 in k5605 in k5314 in k5311 in k5308 in k5305 */
static void C_fcall f_19075(C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word t14;
C_word t15;
C_word t16;
C_word t17;
C_word t18;
C_word t19;
C_word t20;
C_word t21;
C_word t22;
C_word t23;
C_word ab[5],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_19075,NULL,3,t0,t1,t2);}
if(C_truep((C_word)C_i_nullp(t2))){
t3=t1;
((C_proc2)(void*)(*((C_word*)t3+1)))(2,t3,((C_word*)t0)[3]);}
else{
t3=(C_word)C_i_car(t2);
t4=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_19088,a[2]=t1,a[3]=((C_word*)t0)[2],a[4]=t2,tmp=(C_word)a,a+=5,tmp);
t5=(C_word)C_eqp(t3,lf[393]);
if(C_truep(t5)){
t6=(C_word)C_i_cadr(t2);
C_trace("ChickenBridge.scm: 370  loop-operator-set!");
f_18958(t4,((C_word*)t0)[3],t6);}
else{
t6=(C_word)C_eqp(t3,lf[394]);
if(C_truep(t6)){
t7=(C_word)C_i_cadr(t2);
t8=t4;
f_19088(2,t8,(C_word)C_i_vector_set(((C_word*)t0)[3],C_fix(1),t7));}
else{
t7=(C_word)C_eqp(t3,lf[395]);
if(C_truep(t7)){
t8=(C_word)C_i_cadr(t2);
t9=t4;
f_19088(2,t9,(C_word)C_i_vector_set(((C_word*)t0)[3],C_fix(2),t8));}
else{
t8=(C_word)C_eqp(t3,lf[396]);
if(C_truep(t8)){
t9=(C_word)C_i_cadr(t2);
t10=t4;
f_19088(2,t10,(C_word)C_i_vector_set(((C_word*)t0)[3],C_fix(3),t9));}
else{
t9=(C_word)C_eqp(t3,lf[397]);
if(C_truep(t9)){
t10=(C_word)C_i_cadr(t2);
t11=t4;
f_19088(2,t11,(C_word)C_i_vector_set(((C_word*)t0)[3],C_fix(4),t10));}
else{
t10=(C_word)C_eqp(t3,lf[398]);
if(C_truep(t10)){
t11=(C_word)C_i_cadr(t2);
C_trace("ChickenBridge.scm: 370  loop-looping-set!");
f_19018(t4,((C_word*)t0)[3],t11);}
else{
t11=(C_word)C_eqp(t3,lf[399]);
if(C_truep(t11)){
t12=(C_word)C_i_cadr(t2);
t13=t4;
f_19088(2,t13,(C_word)C_i_vector_set(((C_word*)t0)[3],C_fix(6),t12));}
else{
t12=(C_word)C_eqp(t3,lf[400]);
if(C_truep(t12)){
t13=(C_word)C_i_cadr(t2);
t14=t4;
f_19088(2,t14,(C_word)C_i_vector_set(((C_word*)t0)[3],C_fix(7),t13));}
else{
t13=(C_word)C_eqp(t3,lf[401]);
if(C_truep(t13)){
t14=(C_word)C_i_cadr(t2);
t15=t4;
f_19088(2,t15,(C_word)C_i_vector_set(((C_word*)t0)[3],C_fix(8),t14));}
else{
t14=t4;
f_19088(2,t14,C_SCHEME_UNDEFINED);}}}}}}}}}}}

/* k19086 in do3181 in make-loop-clause in k18948 in k18945 in k18942 in k18939 in k18528 in k18525 in k18522 in k18519 in k18516 in k17994 in k17991 in k17468 in k17465 in k17462 in k17459 in k17456 in k17453 in k17450 in k17447 in k17444 in k17441 in k17438 in k17435 in k17432 in k17429 in k17426 in k17423 in k17420 in k17417 in k17414 in k17411 in k17408 in k17269 in k17266 in k17263 in k17260 in k17204 in k17201 in k17198 in k17195 in k17192 in k17189 in k17186 in k17183 in k15938 in k15869 in k15676 in k15673 in k15568 in k15517 in k7924 in k7921 in k5905 in k5612 in k5609 in k5605 in k5314 in k5311 in k5308 in k5305 */
static void C_ccall f_19088(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word *a;
t2=(C_word)C_i_cddr(((C_word*)t0)[4]);
t3=((C_word*)((C_word*)t0)[3])[1];
f_19075(t3,((C_word*)t0)[2],t2);}

/* loop-returning in k18948 in k18945 in k18942 in k18939 in k18528 in k18525 in k18522 in k18519 in k18516 in k17994 in k17991 in k17468 in k17465 in k17462 in k17459 in k17456 in k17453 in k17450 in k17447 in k17444 in k17441 in k17438 in k17435 in k17432 in k17429 in k17426 in k17423 in k17420 in k17417 in k17414 in k17411 in k17408 in k17269 in k17266 in k17263 in k17260 in k17204 in k17201 in k17198 in k17195 in k17192 in k17189 in k17186 in k17183 in k15938 in k15869 in k15676 in k15673 in k15568 in k15517 in k7924 in k7921 in k5905 in k5612 in k5609 in k5605 in k5314 in k5311 in k5308 in k5305 */
static void C_ccall f_19048(C_word c,C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word *a;
if(c!=3) C_bad_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr3,(void*)f_19048,3,t0,t1,t2);}
t3=t1;
((C_proc2)(void*)(*((C_word*)t3+1)))(2,t3,(C_word)C_i_vector_ref(t2,C_fix(8)));}

/* loop-finally in k18948 in k18945 in k18942 in k18939 in k18528 in k18525 in k18522 in k18519 in k18516 in k17994 in k17991 in k17468 in k17465 in k17462 in k17459 in k17456 in k17453 in k17450 in k17447 in k17444 in k17441 in k17438 in k17435 in k17432 in k17429 in k17426 in k17423 in k17420 in k17417 in k17414 in k17411 in k17408 in k17269 in k17266 in k17263 in k17260 in k17204 in k17201 in k17198 in k17195 in k17192 in k17189 in k17186 in k17183 in k15938 in k15869 in k15676 in k15673 in k15568 in k15517 in k7924 in k7921 in k5905 in k5612 in k5609 in k5605 in k5314 in k5311 in k5308 in k5305 */
static void C_ccall f_19036(C_word c,C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word *a;
if(c!=3) C_bad_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr3,(void*)f_19036,3,t0,t1,t2);}
t3=t1;
((C_proc2)(void*)(*((C_word*)t3+1)))(2,t3,(C_word)C_i_vector_ref(t2,C_fix(7)));}

/* loop-stepping in k18948 in k18945 in k18942 in k18939 in k18528 in k18525 in k18522 in k18519 in k18516 in k17994 in k17991 in k17468 in k17465 in k17462 in k17459 in k17456 in k17453 in k17450 in k17447 in k17444 in k17441 in k17438 in k17435 in k17432 in k17429 in k17426 in k17423 in k17420 in k17417 in k17414 in k17411 in k17408 in k17269 in k17266 in k17263 in k17260 in k17204 in k17201 in k17198 in k17195 in k17192 in k17189 in k17186 in k17183 in k15938 in k15869 in k15676 in k15673 in k15568 in k15517 in k7924 in k7921 in k5905 in k5612 in k5609 in k5605 in k5314 in k5311 in k5308 in k5305 */
static void C_ccall f_19024(C_word c,C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word *a;
if(c!=3) C_bad_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr3,(void*)f_19024,3,t0,t1,t2);}
t3=t1;
((C_proc2)(void*)(*((C_word*)t3+1)))(2,t3,(C_word)C_i_vector_ref(t2,C_fix(6)));}

/* loop-looping-set! in k18948 in k18945 in k18942 in k18939 in k18528 in k18525 in k18522 in k18519 in k18516 in k17994 in k17991 in k17468 in k17465 in k17462 in k17459 in k17456 in k17453 in k17450 in k17447 in k17444 in k17441 in k17438 in k17435 in k17432 in k17429 in k17426 in k17423 in k17420 in k17417 in k17414 in k17411 in k17408 in k17269 in k17266 in k17263 in k17260 in k17204 in k17201 in k17198 in k17195 in k17192 in k17189 in k17186 in k17183 in k15938 in k15869 in k15676 in k15673 in k15568 in k15517 in k7924 in k7921 in k5905 in k5612 in k5609 in k5605 in k5314 in k5311 in k5308 in k5305 */
static void C_fcall f_19018(C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word *a;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_19018,NULL,3,t1,t2,t3);}
t4=t1;
((C_proc2)(void*)(*((C_word*)t4+1)))(2,t4,(C_word)C_i_vector_set(t2,C_fix(5),t3));}

/* loop-looping in k18948 in k18945 in k18942 in k18939 in k18528 in k18525 in k18522 in k18519 in k18516 in k17994 in k17991 in k17468 in k17465 in k17462 in k17459 in k17456 in k17453 in k17450 in k17447 in k17444 in k17441 in k17438 in k17435 in k17432 in k17429 in k17426 in k17423 in k17420 in k17417 in k17414 in k17411 in k17408 in k17269 in k17266 in k17263 in k17260 in k17204 in k17201 in k17198 in k17195 in k17192 in k17189 in k17186 in k17183 in k15938 in k15869 in k15676 in k15673 in k15568 in k15517 in k7924 in k7921 in k5905 in k5612 in k5609 in k5605 in k5314 in k5311 in k5308 in k5305 */
static void C_ccall f_19012(C_word c,C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word *a;
if(c!=3) C_bad_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr3,(void*)f_19012,3,t0,t1,t2);}
t3=t1;
((C_proc2)(void*)(*((C_word*)t3+1)))(2,t3,(C_word)C_i_vector_ref(t2,C_fix(5)));}

/* loop-end-tests in k18948 in k18945 in k18942 in k18939 in k18528 in k18525 in k18522 in k18519 in k18516 in k17994 in k17991 in k17468 in k17465 in k17462 in k17459 in k17456 in k17453 in k17450 in k17447 in k17444 in k17441 in k17438 in k17435 in k17432 in k17429 in k17426 in k17423 in k17420 in k17417 in k17414 in k17411 in k17408 in k17269 in k17266 in k17263 in k17260 in k17204 in k17201 in k17198 in k17195 in k17192 in k17189 in k17186 in k17183 in k15938 in k15869 in k15676 in k15673 in k15568 in k15517 in k7924 in k7921 in k5905 in k5612 in k5609 in k5605 in k5314 in k5311 in k5308 in k5305 */
static void C_ccall f_19000(C_word c,C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word *a;
if(c!=3) C_bad_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr3,(void*)f_19000,3,t0,t1,t2);}
t3=t1;
((C_proc2)(void*)(*((C_word*)t3+1)))(2,t3,(C_word)C_i_vector_ref(t2,C_fix(4)));}

/* loop-initially in k18948 in k18945 in k18942 in k18939 in k18528 in k18525 in k18522 in k18519 in k18516 in k17994 in k17991 in k17468 in k17465 in k17462 in k17459 in k17456 in k17453 in k17450 in k17447 in k17444 in k17441 in k17438 in k17435 in k17432 in k17429 in k17426 in k17423 in k17420 in k17417 in k17414 in k17411 in k17408 in k17269 in k17266 in k17263 in k17260 in k17204 in k17201 in k17198 in k17195 in k17192 in k17189 in k17186 in k17183 in k15938 in k15869 in k15676 in k15673 in k15568 in k15517 in k7924 in k7921 in k5905 in k5612 in k5609 in k5605 in k5314 in k5311 in k5308 in k5305 */
static void C_ccall f_18988(C_word c,C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word *a;
if(c!=3) C_bad_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr3,(void*)f_18988,3,t0,t1,t2);}
t3=t1;
((C_proc2)(void*)(*((C_word*)t3+1)))(2,t3,(C_word)C_i_vector_ref(t2,C_fix(3)));}

/* loop-collectors in k18948 in k18945 in k18942 in k18939 in k18528 in k18525 in k18522 in k18519 in k18516 in k17994 in k17991 in k17468 in k17465 in k17462 in k17459 in k17456 in k17453 in k17450 in k17447 in k17444 in k17441 in k17438 in k17435 in k17432 in k17429 in k17426 in k17423 in k17420 in k17417 in k17414 in k17411 in k17408 in k17269 in k17266 in k17263 in k17260 in k17204 in k17201 in k17198 in k17195 in k17192 in k17189 in k17186 in k17183 in k15938 in k15869 in k15676 in k15673 in k15568 in k15517 in k7924 in k7921 in k5905 in k5612 in k5609 in k5605 in k5314 in k5311 in k5308 in k5305 */
static void C_ccall f_18976(C_word c,C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word *a;
if(c!=3) C_bad_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr3,(void*)f_18976,3,t0,t1,t2);}
t3=t1;
((C_proc2)(void*)(*((C_word*)t3+1)))(2,t3,(C_word)C_i_vector_ref(t2,C_fix(2)));}

/* loop-bindings in k18948 in k18945 in k18942 in k18939 in k18528 in k18525 in k18522 in k18519 in k18516 in k17994 in k17991 in k17468 in k17465 in k17462 in k17459 in k17456 in k17453 in k17450 in k17447 in k17444 in k17441 in k17438 in k17435 in k17432 in k17429 in k17426 in k17423 in k17420 in k17417 in k17414 in k17411 in k17408 in k17269 in k17266 in k17263 in k17260 in k17204 in k17201 in k17198 in k17195 in k17192 in k17189 in k17186 in k17183 in k15938 in k15869 in k15676 in k15673 in k15568 in k15517 in k7924 in k7921 in k5905 in k5612 in k5609 in k5605 in k5314 in k5311 in k5308 in k5305 */
static void C_ccall f_18964(C_word c,C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word *a;
if(c!=3) C_bad_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr3,(void*)f_18964,3,t0,t1,t2);}
t3=t1;
((C_proc2)(void*)(*((C_word*)t3+1)))(2,t3,(C_word)C_i_vector_ref(t2,C_fix(1)));}

/* loop-operator-set! in k18948 in k18945 in k18942 in k18939 in k18528 in k18525 in k18522 in k18519 in k18516 in k17994 in k17991 in k17468 in k17465 in k17462 in k17459 in k17456 in k17453 in k17450 in k17447 in k17444 in k17441 in k17438 in k17435 in k17432 in k17429 in k17426 in k17423 in k17420 in k17417 in k17414 in k17411 in k17408 in k17269 in k17266 in k17263 in k17260 in k17204 in k17201 in k17198 in k17195 in k17192 in k17189 in k17186 in k17183 in k15938 in k15869 in k15676 in k15673 in k15568 in k15517 in k7924 in k7921 in k5905 in k5612 in k5609 in k5605 in k5314 in k5311 in k5308 in k5305 */
static void C_fcall f_18958(C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word *a;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_18958,NULL,3,t1,t2,t3);}
t4=t1;
((C_proc2)(void*)(*((C_word*)t4+1)))(2,t4,(C_word)C_i_vector_set(t2,C_fix(0),t3));}

/* sal:output in k18528 in k18525 in k18522 in k18519 in k18516 in k17994 in k17991 in k17468 in k17465 in k17462 in k17459 in k17456 in k17453 in k17450 in k17447 in k17444 in k17441 in k17438 in k17435 in k17432 in k17429 in k17426 in k17423 in k17420 in k17417 in k17414 in k17411 in k17408 in k17269 in k17266 in k17263 in k17260 in k17204 in k17201 in k17198 in k17195 in k17192 in k17189 in k17186 in k17183 in k15938 in k15869 in k15676 in k15673 in k15568 in k15517 in k7924 in k7921 in k5905 in k5612 in k5609 in k5605 in k5314 in k5311 in k5308 in k5305 */
static void C_ccall f_18922(C_word c,C_word t0,C_word t1,...){
C_word tmp;
C_word t2;
C_word *a;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_18922,2,t0,t1);}
C_trace("ChickenBridge.scm: 369  print-error");
t2=C_retrieve(lf[349]);
((C_proc3)C_retrieve_proc(t2))(3,t2,t1,lf[381]);}

/* sal:open in k18528 in k18525 in k18522 in k18519 in k18516 in k17994 in k17991 in k17468 in k17465 in k17462 in k17459 in k17456 in k17453 in k17450 in k17447 in k17444 in k17441 in k17438 in k17435 in k17432 in k17429 in k17426 in k17423 in k17420 in k17417 in k17414 in k17411 in k17408 in k17269 in k17266 in k17263 in k17260 in k17204 in k17201 in k17198 in k17195 in k17192 in k17189 in k17186 in k17183 in k15938 in k15869 in k15676 in k15673 in k15568 in k15517 in k7924 in k7921 in k5905 in k5612 in k5609 in k5605 in k5314 in k5311 in k5308 in k5305 */
static void C_ccall f_18916(C_word c,C_word t0,C_word t1,...){
C_word tmp;
C_word t2;
C_word *a;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_18916,2,t0,t1);}
C_trace("ChickenBridge.scm: 369  print-error");
t2=C_retrieve(lf[349]);
((C_proc3)C_retrieve_proc(t2))(3,t2,t1,lf[379]);}

/* sal:load in k18528 in k18525 in k18522 in k18519 in k18516 in k17994 in k17991 in k17468 in k17465 in k17462 in k17459 in k17456 in k17453 in k17450 in k17447 in k17444 in k17441 in k17438 in k17435 in k17432 in k17429 in k17426 in k17423 in k17420 in k17417 in k17414 in k17411 in k17408 in k17269 in k17266 in k17263 in k17260 in k17204 in k17201 in k17198 in k17195 in k17192 in k17189 in k17186 in k17183 in k15938 in k15869 in k15676 in k15673 in k15568 in k15517 in k7924 in k7921 in k5905 in k5612 in k5609 in k5605 in k5314 in k5311 in k5308 in k5305 */
static void C_ccall f_18869(C_word c,C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word ab[4],*a=ab;
if(c!=3) C_bad_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr3,(void*)f_18869,3,t0,t1,t2);}
t3=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_18873,a[2]=t2,a[3]=t1,tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 369  file-exists?");
t4=C_retrieve(lf[377]);
((C_proc3)C_retrieve_proc(t4))(3,t4,t3,t2);}

/* k18871 in sal:load in k18528 in k18525 in k18522 in k18519 in k18516 in k17994 in k17991 in k17468 in k17465 in k17462 in k17459 in k17456 in k17453 in k17450 in k17447 in k17444 in k17441 in k17438 in k17435 in k17432 in k17429 in k17426 in k17423 in k17420 in k17417 in k17414 in k17411 in k17408 in k17269 in k17266 in k17263 in k17260 in k17204 in k17201 in k17198 in k17195 in k17192 in k17189 in k17186 in k17183 in k15938 in k15869 in k15676 in k15673 in k15568 in k15517 in k7924 in k7921 in k5905 in k5612 in k5609 in k5605 in k5314 in k5311 in k5308 in k5305 */
static void C_ccall f_18873(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word ab[14],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_18873,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_18876,a[2]=((C_word*)t0)[3],tmp=(C_word)a,a+=3,tmp);
if(C_truep(t1)){
t3=(C_word)C_i_string_length(((C_word*)t0)[2]);
t4=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_18898,a[2]=((C_word*)t0)[2],a[3]=t2,tmp=(C_word)a,a+=4,tmp);
if(C_truep((C_word)C_i_greaterp(t3,C_fix(4)))){
t5=(C_word)C_a_i_minus(&a,2,t3,C_fix(4));
C_trace("substring=?");
t6=C_retrieve(lf[373]);
((C_proc7)(void*)(*((C_word*)t6+1)))(7,t6,t4,((C_word*)t0)[2],lf[374],t5,C_fix(0),C_SCHEME_FALSE);}
else{
t5=t4;
f_18898(2,t5,C_SCHEME_FALSE);}}
else{
t3=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_18889,a[2]=t2,tmp=(C_word)a,a+=3,tmp);
C_trace("ChickenBridge.scm: 369  string-append");
t4=*((C_word*)lf[141]+1);
((C_proc5)C_retrieve_proc(t4))(5,t4,t3,lf[375],((C_word*)t0)[2],lf[376]);}}

/* k18887 in k18871 in sal:load in k18528 in k18525 in k18522 in k18519 in k18516 in k17994 in k17991 in k17468 in k17465 in k17462 in k17459 in k17456 in k17453 in k17450 in k17447 in k17444 in k17441 in k17438 in k17435 in k17432 in k17429 in k17426 in k17423 in k17420 in k17417 in k17414 in k17411 in k17408 in k17269 in k17266 in k17263 in k17260 in k17204 in k17201 in k17198 in k17195 in k17192 in k17189 in k17186 in k17183 in k15938 in k15869 in k15676 in k15673 in k15568 in k15517 in k7924 in k7921 in k5905 in k5612 in k5609 in k5605 in k5314 in k5311 in k5308 in k5305 */
static void C_ccall f_18889(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 369  print-error");
t2=C_retrieve(lf[349]);
((C_proc3)C_retrieve_proc(t2))(3,t2,((C_word*)t0)[2],t1);}

/* k18896 in k18871 in sal:load in k18528 in k18525 in k18522 in k18519 in k18516 in k17994 in k17991 in k17468 in k17465 in k17462 in k17459 in k17456 in k17453 in k17450 in k17447 in k17444 in k17441 in k17438 in k17435 in k17432 in k17429 in k17426 in k17423 in k17420 in k17417 in k17414 in k17411 in k17408 in k17269 in k17266 in k17263 in k17260 in k17204 in k17201 in k17198 in k17195 in k17192 in k17189 in k17186 in k17183 in k15938 in k15869 in k15676 in k15673 in k15568 in k15517 in k7924 in k7921 in k5905 in k5612 in k5609 in k5605 in k5314 in k5311 in k5308 in k5305 */
static void C_ccall f_18898(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
if(C_truep(t1)){
C_trace("ChickenBridge.scm: 369  load-sal-file");
t2=C_retrieve(lf[371]);
((C_proc3)C_retrieve_proc(t2))(3,t2,((C_word*)t0)[3],((C_word*)t0)[2]);}
else{
C_trace("ChickenBridge.scm: 369  load");
t2=C_retrieve(lf[372]);
((C_proc3)C_retrieve_proc(t2))(3,t2,((C_word*)t0)[3],((C_word*)t0)[2]);}}

/* k18874 in k18871 in sal:load in k18528 in k18525 in k18522 in k18519 in k18516 in k17994 in k17991 in k17468 in k17465 in k17462 in k17459 in k17456 in k17453 in k17450 in k17447 in k17444 in k17441 in k17438 in k17435 in k17432 in k17429 in k17426 in k17423 in k17420 in k17417 in k17414 in k17411 in k17408 in k17269 in k17266 in k17263 in k17260 in k17204 in k17201 in k17198 in k17195 in k17192 in k17189 in k17186 in k17183 in k15938 in k15869 in k15676 in k15673 in k15568 in k15517 in k7924 in k7921 in k5905 in k5612 in k5609 in k5605 in k5314 in k5311 in k5308 in k5305 */
static void C_ccall f_18876(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 369  values");
C_values(2,0,((C_word*)t0)[2]);}

/* sal:chdir in k18528 in k18525 in k18522 in k18519 in k18516 in k17994 in k17991 in k17468 in k17465 in k17462 in k17459 in k17456 in k17453 in k17450 in k17447 in k17444 in k17441 in k17438 in k17435 in k17432 in k17429 in k17426 in k17423 in k17420 in k17417 in k17414 in k17411 in k17408 in k17269 in k17266 in k17263 in k17260 in k17204 in k17201 in k17198 in k17195 in k17192 in k17189 in k17186 in k17183 in k15938 in k15869 in k15676 in k15673 in k15568 in k15517 in k7924 in k7921 in k5905 in k5612 in k5609 in k5605 in k5314 in k5311 in k5308 in k5305 */
static void C_ccall f_18860(C_word c,C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word ab[3],*a=ab;
if(c!=3) C_bad_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr3,(void*)f_18860,3,t0,t1,t2);}
t3=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_18864,a[2]=t1,tmp=(C_word)a,a+=3,tmp);
C_trace("ChickenBridge.scm: 369  chdir");
t4=C_retrieve(lf[44]);
((C_proc3)C_retrieve_proc(t4))(3,t4,t3,t2);}

/* k18862 in sal:chdir in k18528 in k18525 in k18522 in k18519 in k18516 in k17994 in k17991 in k17468 in k17465 in k17462 in k17459 in k17456 in k17453 in k17450 in k17447 in k17444 in k17441 in k17438 in k17435 in k17432 in k17429 in k17426 in k17423 in k17420 in k17417 in k17414 in k17411 in k17408 in k17269 in k17266 in k17263 in k17260 in k17204 in k17201 in k17198 in k17195 in k17192 in k17189 in k17186 in k17183 in k15938 in k15869 in k15676 in k15673 in k15568 in k15517 in k7924 in k7921 in k5905 in k5612 in k5609 in k5605 in k5314 in k5311 in k5308 in k5305 */
static void C_ccall f_18864(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 369  values");
C_values(2,0,((C_word*)t0)[2]);}

/* sal:print in k18528 in k18525 in k18522 in k18519 in k18516 in k17994 in k17991 in k17468 in k17465 in k17462 in k17459 in k17456 in k17453 in k17450 in k17447 in k17444 in k17441 in k17438 in k17435 in k17432 in k17429 in k17426 in k17423 in k17420 in k17417 in k17414 in k17411 in k17408 in k17269 in k17266 in k17263 in k17260 in k17204 in k17201 in k17198 in k17195 in k17192 in k17189 in k17186 in k17183 in k15938 in k15869 in k15676 in k15673 in k15568 in k15517 in k7924 in k7921 in k5905 in k5612 in k5609 in k5605 in k5314 in k5311 in k5308 in k5305 */
static void C_ccall f_18707(C_word c,C_word t0,C_word t1,...){
C_word tmp;
C_word t2;
va_list v;
C_word *a,c2=c;
C_save_rest(t1,c2,2);
C_check_for_interrupt;
if(!C_demand(c*C_SIZEOF_PAIR+16)){
C_save_and_reclaim((void*)tr2r,(void*)f_18707r,2,t0,t1);}
else{
a=C_alloc((c-2)*3);
t2=C_restore_rest(a,C_rest_count(0));
f_18707r(t0,t1,t2);}}

static void C_ccall f_18707r(C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word *a=C_alloc(16);
t3=C_SCHEME_UNDEFINED;
t4=(*a=C_VECTOR_TYPE|1,a[1]=t3,tmp=(C_word)a,a+=2,tmp);
t5=C_set_block_item(t4,0,(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_18710,a[2]=t4,a[3]=((C_word)li269),tmp=(C_word)a,a+=4,tmp));
t6=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_18829,a[2]=t1,tmp=(C_word)a,a+=3,tmp);
t7=C_SCHEME_UNDEFINED;
t8=(*a=C_VECTOR_TYPE|1,a[1]=t7,tmp=(C_word)a,a+=2,tmp);
t9=C_set_block_item(t8,0,(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_18834,a[2]=t4,a[3]=t8,a[4]=((C_word)li270),tmp=(C_word)a,a+=5,tmp));
t10=((C_word*)t8)[1];
f_18834(t10,t6,t2);}

/* do3009 in sal:print in k18528 in k18525 in k18522 in k18519 in k18516 in k17994 in k17991 in k17468 in k17465 in k17462 in k17459 in k17456 in k17453 in k17450 in k17447 in k17444 in k17441 in k17438 in k17435 in k17432 in k17429 in k17426 in k17423 in k17420 in k17417 in k17414 in k17411 in k17408 in k17269 in k17266 in k17263 in k17260 in k17204 in k17201 in k17198 in k17195 in k17192 in k17189 in k17186 in k17183 in k15938 in k15869 in k15676 in k15673 in k15568 in k15517 in k7924 in k7921 in k5905 in k5612 in k5609 in k5605 in k5314 in k5311 in k5308 in k5305 */
static void C_fcall f_18834(C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word t5;
C_word ab[5],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_18834,NULL,3,t0,t1,t2);}
if(C_truep((C_word)C_i_nullp(t2))){
C_trace("ChickenBridge.scm: 369  print-message");
t3=C_retrieve(lf[360]);
((C_proc3)C_retrieve_proc(t3))(3,t3,t1,lf[368]);}
else{
t3=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_18847,a[2]=t1,a[3]=((C_word*)t0)[3],a[4]=t2,tmp=(C_word)a,a+=5,tmp);
t4=(C_word)C_i_car(t2);
C_trace("ChickenBridge.scm: 369  printer");
t5=((C_word*)((C_word*)t0)[2])[1];
f_18710(t5,t3,t4,C_fix(0));}}

/* k18845 in do3009 in sal:print in k18528 in k18525 in k18522 in k18519 in k18516 in k17994 in k17991 in k17468 in k17465 in k17462 in k17459 in k17456 in k17453 in k17450 in k17447 in k17444 in k17441 in k17438 in k17435 in k17432 in k17429 in k17426 in k17423 in k17420 in k17417 in k17414 in k17411 in k17408 in k17269 in k17266 in k17263 in k17260 in k17204 in k17201 in k17198 in k17195 in k17192 in k17189 in k17186 in k17183 in k15938 in k15869 in k15676 in k15673 in k15568 in k15517 in k7924 in k7921 in k5905 in k5612 in k5609 in k5605 in k5314 in k5311 in k5308 in k5305 */
static void C_ccall f_18847(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word *a;
t2=(C_word)C_i_cdr(((C_word*)t0)[4]);
t3=((C_word*)((C_word*)t0)[3])[1];
f_18834(t3,((C_word*)t0)[2],t2);}

/* k18827 in sal:print in k18528 in k18525 in k18522 in k18519 in k18516 in k17994 in k17991 in k17468 in k17465 in k17462 in k17459 in k17456 in k17453 in k17450 in k17447 in k17444 in k17441 in k17438 in k17435 in k17432 in k17429 in k17426 in k17423 in k17420 in k17417 in k17414 in k17411 in k17408 in k17269 in k17266 in k17263 in k17260 in k17204 in k17201 in k17198 in k17195 in k17192 in k17189 in k17186 in k17183 in k15938 in k15869 in k15676 in k15673 in k15568 in k15517 in k7924 in k7921 in k5905 in k5612 in k5609 in k5605 in k5314 in k5311 in k5308 in k5305 */
static void C_ccall f_18829(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 369  values");
C_values(2,0,((C_word*)t0)[2]);}

/* printer in sal:print in k18528 in k18525 in k18522 in k18519 in k18516 in k17994 in k17991 in k17468 in k17465 in k17462 in k17459 in k17456 in k17453 in k17450 in k17447 in k17444 in k17441 in k17438 in k17435 in k17432 in k17429 in k17426 in k17423 in k17420 in k17417 in k17414 in k17411 in k17408 in k17269 in k17266 in k17263 in k17260 in k17204 in k17201 in k17198 in k17195 in k17192 in k17189 in k17186 in k17183 in k15938 in k15869 in k15676 in k15673 in k15568 in k15517 in k7924 in k7921 in k5905 in k5612 in k5609 in k5605 in k5314 in k5311 in k5308 in k5305 */
static void C_fcall f_18710(C_word t0,C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word ab[12],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_18710,NULL,4,t0,t1,t2,t3);}
t4=t2;
if(C_truep(t4)){
if(C_truep((C_word)C_i_nullp(t2))){
C_trace("ChickenBridge.scm: 369  print-message");
t5=C_retrieve(lf[360]);
((C_proc3)C_retrieve_proc(t5))(3,t5,t1,lf[361]);}
else{
if(C_truep((C_word)C_i_pairp(t2))){
t5=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_18738,a[2]=t2,a[3]=((C_word*)t0)[2],a[4]=t3,a[5]=t1,tmp=(C_word)a,a+=6,tmp);
C_trace("ChickenBridge.scm: 369  print-message");
t6=C_retrieve(lf[360]);
((C_proc3)C_retrieve_proc(t6))(3,t6,t5,lf[364]);}
else{
t5=(C_word)C_eqp(t2,C_SCHEME_TRUE);
if(C_truep(t5)){
C_trace("ChickenBridge.scm: 369  print-message");
t6=C_retrieve(lf[360]);
((C_proc3)C_retrieve_proc(t6))(3,t6,t1,lf[365]);}
else{
if(C_truep((C_word)C_i_numberp(t2))){
t6=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_18810,a[2]=t1,tmp=(C_word)a,a+=3,tmp);
C_trace("ChickenBridge.scm: 369  number->string");
C_number_to_string(3,0,t6,t2);}
else{
if(C_truep((C_word)C_i_stringp(t2))){
C_trace("ChickenBridge.scm: 369  print-message");
t6=C_retrieve(lf[360]);
((C_proc3)C_retrieve_proc(t6))(3,t6,t1,t2);}
else{
t6=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_18826,a[2]=t1,tmp=(C_word)a,a+=3,tmp);
C_trace("ChickenBridge.scm: 369  sprintf");
t7=C_retrieve(lf[31]);
((C_proc4)C_retrieve_proc(t7))(4,t7,t6,lf[366],t2);}}}}}}
else{
C_trace("ChickenBridge.scm: 369  print-message");
t5=C_retrieve(lf[360]);
((C_proc3)C_retrieve_proc(t5))(3,t5,t1,lf[367]);}}

/* k18824 in printer in sal:print in k18528 in k18525 in k18522 in k18519 in k18516 in k17994 in k17991 in k17468 in k17465 in k17462 in k17459 in k17456 in k17453 in k17450 in k17447 in k17444 in k17441 in k17438 in k17435 in k17432 in k17429 in k17426 in k17423 in k17420 in k17417 in k17414 in k17411 in k17408 in k17269 in k17266 in k17263 in k17260 in k17204 in k17201 in k17198 in k17195 in k17192 in k17189 in k17186 in k17183 in k15938 in k15869 in k15676 in k15673 in k15568 in k15517 in k7924 in k7921 in k5905 in k5612 in k5609 in k5605 in k5314 in k5311 in k5308 in k5305 */
static void C_ccall f_18826(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 369  print-message");
t2=C_retrieve(lf[360]);
((C_proc3)C_retrieve_proc(t2))(3,t2,((C_word*)t0)[2],t1);}

/* k18808 in printer in sal:print in k18528 in k18525 in k18522 in k18519 in k18516 in k17994 in k17991 in k17468 in k17465 in k17462 in k17459 in k17456 in k17453 in k17450 in k17447 in k17444 in k17441 in k17438 in k17435 in k17432 in k17429 in k17426 in k17423 in k17420 in k17417 in k17414 in k17411 in k17408 in k17269 in k17266 in k17263 in k17260 in k17204 in k17201 in k17198 in k17195 in k17192 in k17189 in k17186 in k17183 in k15938 in k15869 in k15676 in k15673 in k15568 in k15517 in k7924 in k7921 in k5905 in k5612 in k5609 in k5605 in k5314 in k5311 in k5308 in k5305 */
static void C_ccall f_18810(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 369  print-message");
t2=C_retrieve(lf[360]);
((C_proc3)C_retrieve_proc(t2))(3,t2,((C_word*)t0)[2],t1);}

/* k18736 in printer in sal:print in k18528 in k18525 in k18522 in k18519 in k18516 in k17994 in k17991 in k17468 in k17465 in k17462 in k17459 in k17456 in k17453 in k17450 in k17447 in k17444 in k17441 in k17438 in k17435 in k17432 in k17429 in k17426 in k17423 in k17420 in k17417 in k17414 in k17411 in k17408 in k17269 in k17266 in k17263 in k17260 in k17204 in k17201 in k17198 in k17195 in k17192 in k17189 in k17186 in k17183 in k15938 in k15869 in k15676 in k15673 in k15568 in k15517 in k7924 in k7921 in k5905 in k5612 in k5609 in k5605 in k5314 in k5311 in k5308 in k5305 */
static void C_ccall f_18738(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[11],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_18738,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_18741,a[2]=((C_word*)t0)[5],tmp=(C_word)a,a+=3,tmp);
t3=C_SCHEME_UNDEFINED;
t4=(*a=C_VECTOR_TYPE|1,a[1]=t3,tmp=(C_word)a,a+=2,tmp);
t5=C_set_block_item(t4,0,(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_18746,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=t4,a[5]=((C_word)li268),tmp=(C_word)a,a+=6,tmp));
t6=((C_word*)t4)[1];
f_18746(t6,t2,((C_word*)t0)[2]);}

/* do3001 in k18736 in printer in sal:print in k18528 in k18525 in k18522 in k18519 in k18516 in k17994 in k17991 in k17468 in k17465 in k17462 in k17459 in k17456 in k17453 in k17450 in k17447 in k17444 in k17441 in k17438 in k17435 in k17432 in k17429 in k17426 in k17423 in k17420 in k17417 in k17414 in k17411 in k17408 in k17269 in k17266 in k17263 in k17260 in k17204 in k17201 in k17198 in k17195 in k17192 in k17189 in k17186 in k17183 in k15938 in k15869 in k15676 in k15673 in k15568 in k15517 in k7924 in k7921 in k5905 in k5612 in k5609 in k5605 in k5314 in k5311 in k5308 in k5305 */
static void C_fcall f_18746(C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_18746,NULL,3,t0,t1,t2);}
if(C_truep((C_word)C_i_nullp(t2))){
t3=t1;
((C_proc2)(void*)(*((C_word*)t3+1)))(2,t3,C_SCHEME_FALSE);}
else{
t3=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_18756,a[2]=t1,a[3]=((C_word*)t0)[4],a[4]=t2,tmp=(C_word)a,a+=5,tmp);
t4=(C_word)C_i_car(t2);
t5=(C_word)C_a_i_plus(&a,2,((C_word*)t0)[3],C_fix(1));
C_trace("ChickenBridge.scm: 369  printer");
t6=((C_word*)((C_word*)t0)[2])[1];
f_18710(t6,t3,t4,t5);}}

/* k18754 in do3001 in k18736 in printer in sal:print in k18528 in k18525 in k18522 in k18519 in k18516 in k17994 in k17991 in k17468 in k17465 in k17462 in k17459 in k17456 in k17453 in k17450 in k17447 in k17444 in k17441 in k17438 in k17435 in k17432 in k17429 in k17426 in k17423 in k17420 in k17417 in k17414 in k17411 in k17408 in k17269 in k17266 in k17263 in k17260 in k17204 in k17201 in k17198 in k17195 in k17192 in k17189 in k17186 in k17183 in k15938 in k15869 in k15676 in k15673 in k15568 in k15517 in k7924 in k7921 in k5905 in k5612 in k5609 in k5605 in k5314 in k5311 in k5308 in k5305 */
static void C_ccall f_18756(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[5],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_18756,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_18759,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],tmp=(C_word)a,a+=5,tmp);
t3=(C_word)C_i_cdr(((C_word*)t0)[4]);
if(C_truep((C_word)C_i_nullp(t3))){
t4=t2;
f_18759(2,t4,C_SCHEME_UNDEFINED);}
else{
C_trace("ChickenBridge.scm: 369  print-message");
t4=C_retrieve(lf[360]);
((C_proc3)C_retrieve_proc(t4))(3,t4,t2,lf[363]);}}

/* k18757 in k18754 in do3001 in k18736 in printer in sal:print in k18528 in k18525 in k18522 in k18519 in k18516 in k17994 in k17991 in k17468 in k17465 in k17462 in k17459 in k17456 in k17453 in k17450 in k17447 in k17444 in k17441 in k17438 in k17435 in k17432 in k17429 in k17426 in k17423 in k17420 in k17417 in k17414 in k17411 in k17408 in k17269 in k17266 in k17263 in k17260 in k17204 in k17201 in k17198 in k17195 in k17192 in k17189 in k17186 in k17183 in k15938 in k15869 in k15676 in k15673 in k15568 in k15517 in k7924 in k7921 in k5905 in k5612 in k5609 in k5605 in k5314 in k5311 in k5308 in k5305 */
static void C_ccall f_18759(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word *a;
t2=(C_word)C_i_cdr(((C_word*)t0)[4]);
t3=((C_word*)((C_word*)t0)[3])[1];
f_18746(t3,((C_word*)t0)[2],t2);}

/* k18739 in k18736 in printer in sal:print in k18528 in k18525 in k18522 in k18519 in k18516 in k17994 in k17991 in k17468 in k17465 in k17462 in k17459 in k17456 in k17453 in k17450 in k17447 in k17444 in k17441 in k17438 in k17435 in k17432 in k17429 in k17426 in k17423 in k17420 in k17417 in k17414 in k17411 in k17408 in k17269 in k17266 in k17263 in k17260 in k17204 in k17201 in k17198 in k17195 in k17192 in k17189 in k17186 in k17183 in k15938 in k15869 in k15676 in k15673 in k15568 in k15517 in k7924 in k7921 in k5905 in k5612 in k5609 in k5605 in k5314 in k5311 in k5308 in k5305 */
static void C_ccall f_18741(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 369  print-message");
t2=C_retrieve(lf[360]);
((C_proc3)C_retrieve_proc(t2))(3,t2,((C_word*)t0)[2],lf[362]);}

/* sal in k18528 in k18525 in k18522 in k18519 in k18516 in k17994 in k17991 in k17468 in k17465 in k17462 in k17459 in k17456 in k17453 in k17450 in k17447 in k17444 in k17441 in k17438 in k17435 in k17432 in k17429 in k17426 in k17423 in k17420 in k17417 in k17414 in k17411 in k17408 in k17269 in k17266 in k17263 in k17260 in k17204 in k17201 in k17198 in k17195 in k17192 in k17189 in k17186 in k17183 in k15938 in k15869 in k15676 in k15673 in k15568 in k15517 in k7924 in k7921 in k5905 in k5612 in k5609 in k5605 in k5314 in k5311 in k5308 in k5305 */
static void C_ccall f_18536(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4,C_word t5){
C_word tmp;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word ab[7],*a=ab;
if(c!=6) C_bad_argc_2(c,6,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr6,(void*)f_18536,6,t0,t1,t2,t3,t4,t5);}
t6=(*a=C_VECTOR_TYPE|1,a[1]=t3,tmp=(C_word)a,a+=2,tmp);
t7=C_mutate(&lf[345],t2);
t8=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_18542,a[2]=t6,a[3]=t5,a[4]=t1,tmp=(C_word)a,a+=5,tmp);
C_trace("map");
t9=*((C_word*)lf[17]+1);
((C_proc4)(void*)(*((C_word*)t9+1)))(4,t9,t8,C_retrieve2(lf[273],"list->token"),t4);}

/* k18540 in sal in k18528 in k18525 in k18522 in k18519 in k18516 in k17994 in k17991 in k17468 in k17465 in k17462 in k17459 in k17456 in k17453 in k17450 in k17447 in k17444 in k17441 in k17438 in k17435 in k17432 in k17429 in k17426 in k17423 in k17420 in k17417 in k17414 in k17411 in k17408 in k17269 in k17266 in k17263 in k17260 in k17204 in k17201 in k17198 in k17195 in k17192 in k17189 in k17186 in k17183 in k15938 in k15869 in k15676 in k15673 in k15568 in k15517 in k7924 in k7921 in k5905 in k5612 in k5609 in k5605 in k5314 in k5311 in k5308 in k5305 */
static void C_ccall f_18542(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[5],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_18542,2,t0,t1);}
t2=C_mutate(&lf[346],t1);
t3=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_18545,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],tmp=(C_word)a,a+=5,tmp);
if(C_truep((C_word)C_i_nequalp(((C_word*)((C_word*)t0)[2])[1],C_fix(0)))){
t4=C_set_block_item(((C_word*)t0)[2],0,C_fix(36608));
t5=t3;
f_18545(t5,t4);}
else{
t4=t3;
f_18545(t4,C_SCHEME_FALSE);}}

/* k18543 in k18540 in sal in k18528 in k18525 in k18522 in k18519 in k18516 in k17994 in k17991 in k17468 in k17465 in k17462 in k17459 in k17456 in k17453 in k17450 in k17447 in k17444 in k17441 in k17438 in k17435 in k17432 in k17429 in k17426 in k17423 in k17420 in k17417 in k17414 in k17411 in k17408 in k17269 in k17266 in k17263 in k17260 in k17204 in k17201 in k17198 in k17195 in k17192 in k17189 in k17186 in k17183 in k15938 in k15869 in k15676 in k15673 in k15568 in k15517 in k7924 in k7921 in k5905 in k5612 in k5609 in k5605 in k5314 in k5311 in k5308 in k5305 */
static void C_fcall f_18545(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word ab[21],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_18545,NULL,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_18549,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],tmp=(C_word)a,a+=4,tmp);
t3=((C_word*)((C_word*)t0)[2])[1];
t4=C_retrieve2(lf[346],"*sal-tokens*");
t5=(C_word)C_a_i_list(&a,4,C_SCHEME_FALSE,C_fix(0),C_SCHEME_FALSE,C_SCHEME_FALSE);
t6=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_16345,a[2]=t4,a[3]=t3,a[4]=((C_word)li266),tmp=(C_word)a,a+=5,tmp);
C_trace("ChickenBridge.scm: 369  call/cc");
t7=*((C_word*)lf[358]+1);
((C_proc3)C_retrieve_proc(t7))(3,t7,t2,t6);}

/* a16344 in k18543 in k18540 in sal in k18528 in k18525 in k18522 in k18519 in k18516 in k17994 in k17991 in k17468 in k17465 in k17462 in k17459 in k17456 in k17453 in k17450 in k17447 in k17444 in k17441 in k17438 in k17435 in k17432 in k17429 in k17426 in k17423 in k17420 in k17417 in k17414 in k17411 in k17408 in k17269 in k17266 in k17263 in k17260 in k17204 in k17201 in k17198 in k17195 in k17192 in k17189 in k17186 in k17183 in k15938 in k15869 in k15676 in k15673 in k15568 in k15517 in k7924 in k7921 in k5905 in k5612 in k5609 in k5605 in k5314 in k5311 in k5308 in k5305 */
static void C_ccall f_16345(C_word c,C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word t5;
C_word ab[10],*a=ab;
if(c!=3) C_bad_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr3,(void*)f_16345,3,t0,t1,t2);}
t3=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_16351,a[2]=t2,a[3]=((C_word*)t0)[2],a[4]=((C_word*)t0)[3],a[5]=((C_word)li264),tmp=(C_word)a,a+=6,tmp);
t4=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_16358,a[2]=t2,a[3]=((C_word)li265),tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 369  call-with-values");
C_call_with_values(4,0,t1,t3,t4);}

/* a16357 in a16344 in k18543 in k18540 in sal in k18528 in k18525 in k18522 in k18519 in k18516 in k17994 in k17991 in k17468 in k17465 in k17462 in k17459 in k17456 in k17453 in k17450 in k17447 in k17444 in k17441 in k17438 in k17435 in k17432 in k17429 in k17426 in k17423 in k17420 in k17417 in k17414 in k17411 in k17408 in k17269 in k17266 in k17263 in k17260 in k17204 in k17201 in k17198 in k17195 in k17192 in k17189 in k17186 in k17183 in k15938 in k15869 in k15676 in k15673 in k15568 in k15517 in k7924 in k7921 in k5905 in k5612 in k5609 in k5605 in k5314 in k5311 in k5308 in k5305 */
static void C_ccall f_16358(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4){
C_word tmp;
C_word t5;
C_word t6;
C_word t7;
C_word ab[5],*a=ab;
if(c!=5) C_bad_argc_2(c,5,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr5,(void*)f_16358,5,t0,t1,t2,t3,t4);}
t5=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_16365,a[2]=((C_word*)t0)[2],a[3]=t3,a[4]=t1,tmp=(C_word)a,a+=5,tmp);
if(C_truep(t2)){
t6=(C_word)C_i_nullp(t4);
t7=t5;
f_16365(t7,(C_truep(t6)?t6:C_SCHEME_FALSE));}
else{
t6=t5;
f_16365(t6,C_SCHEME_FALSE);}}

/* k16363 in a16357 in a16344 in k18543 in k18540 in sal in k18528 in k18525 in k18522 in k18519 in k18516 in k17994 in k17991 in k17468 in k17465 in k17462 in k17459 in k17456 in k17453 in k17450 in k17447 in k17444 in k17441 in k17438 in k17435 in k17432 in k17429 in k17426 in k17423 in k17420 in k17417 in k17414 in k17411 in k17408 in k17269 in k17266 in k17263 in k17260 in k17204 in k17201 in k17198 in k17195 in k17192 in k17189 in k17186 in k17183 in k15938 in k15869 in k15676 in k15673 in k15568 in k15517 in k7924 in k7921 in k5905 in k5612 in k5609 in k5605 in k5314 in k5311 in k5308 in k5305 */
static void C_fcall f_16365(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[5],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_16365,NULL,2,t0,t1);}
if(C_truep(t1)){
t2=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_16372,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],tmp=(C_word)a,a+=5,tmp);
C_trace("ChickenBridge.scm: 369  add-emit-info");
f_16002(t2,lf[355],lf[356],C_SCHEME_END_OF_LIST);}
else{
C_trace("ChickenBridge.scm: 369  make-parse-error");
f_15822(((C_word*)t0)[4],lf[357],C_retrieve2(lf[321],"*maxtokpos*"));}}

/* k16370 in k16363 in a16357 in a16344 in k18543 in k18540 in sal in k18528 in k18525 in k18522 in k18519 in k18516 in k17994 in k17991 in k17468 in k17465 in k17462 in k17459 in k17456 in k17453 in k17450 in k17447 in k17444 in k17441 in k17438 in k17435 in k17432 in k17429 in k17426 in k17423 in k17420 in k17417 in k17414 in k17411 in k17408 in k17269 in k17266 in k17263 in k17260 in k17204 in k17201 in k17198 in k17195 in k17192 in k17189 in k17186 in k17183 in k15938 in k15869 in k15676 in k15673 in k15568 in k15517 in k7924 in k7921 in k5905 in k5612 in k5609 in k5605 in k5314 in k5311 in k5308 in k5305 */
static void C_ccall f_16372(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 369  emit");
f_16030(((C_word*)t0)[4],((C_word*)t0)[3],t1,((C_word*)t0)[2]);}

/* a16350 in a16344 in k18543 in k18540 in sal in k18528 in k18525 in k18522 in k18519 in k18516 in k17994 in k17991 in k17468 in k17465 in k17462 in k17459 in k17456 in k17453 in k17450 in k17447 in k17444 in k17441 in k17438 in k17435 in k17432 in k17429 in k17426 in k17423 in k17420 in k17417 in k17414 in k17411 in k17408 in k17269 in k17266 in k17263 in k17260 in k17204 in k17201 in k17198 in k17195 in k17192 in k17189 in k17186 in k17183 in k15938 in k15869 in k15676 in k15673 in k15568 in k15517 in k7924 in k7921 in k5905 in k5612 in k5609 in k5605 in k5314 in k5311 in k5308 in k5305 */
static void C_ccall f_16351(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word *a;
if(c!=2) C_bad_argc_2(c,2,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_16351,2,t0,t1);}
t2=lf[321]=C_fix(0);;
C_trace("ChickenBridge.scm: 369  parser");
f_16383(t1,((C_word*)t0)[4],((C_word*)t0)[3],C_SCHEME_FALSE,C_fix(0),C_SCHEME_FALSE,((C_word*)t0)[2]);}

/* k18547 in k18543 in k18540 in sal in k18528 in k18525 in k18522 in k18519 in k18516 in k17994 in k17991 in k17468 in k17465 in k17462 in k17459 in k17456 in k17453 in k17450 in k17447 in k17444 in k17441 in k17438 in k17435 in k17432 in k17429 in k17426 in k17423 in k17420 in k17417 in k17414 in k17411 in k17408 in k17269 in k17266 in k17263 in k17260 in k17204 in k17201 in k17198 in k17195 in k17192 in k17189 in k17186 in k17183 in k15938 in k15869 in k15676 in k15673 in k15568 in k15517 in k7924 in k7921 in k5905 in k5612 in k5609 in k5605 in k5314 in k5311 in k5308 in k5305 */
static void C_ccall f_18549(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_18549,2,t0,t1);}
t2=C_mutate(&lf[347],t1);
t3=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_18552,a[2]=((C_word*)t0)[3],tmp=(C_word)a,a+=3,tmp);
t4=C_retrieve2(lf[347],"*sal-output*");
if(C_truep((C_word)C_i_structurep(t4,lf[289]))){
t5=C_retrieve2(lf[345],"*sal-string*");
t6=C_retrieve2(lf[347],"*sal-output*");
t7=(C_word)C_i_string_length(t5);
t8=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_18583,a[2]=t7,a[3]=t6,a[4]=t5,a[5]=t3,tmp=(C_word)a,a+=6,tmp);
C_trace("ChickenBridge.scm: 369  parse-error-position");
f_15861(t8,t6);}
else{
if(C_truep(((C_word*)t0)[2])){
C_trace("ChickenBridge.scm: 369  pp");
t5=C_retrieve(lf[353]);
((C_proc3)C_retrieve_proc(t5))(3,t5,t3,C_retrieve2(lf[347],"*sal-output*"));}
else{
C_trace("ChickenBridge.scm: 369  eval");
t5=C_retrieve(lf[354]);
((C_proc3)C_retrieve_proc(t5))(3,t5,t3,C_retrieve2(lf[347],"*sal-output*"));}}}

/* k18581 in k18547 in k18543 in k18540 in sal in k18528 in k18525 in k18522 in k18519 in k18516 in k17994 in k17991 in k17468 in k17465 in k17462 in k17459 in k17456 in k17453 in k17450 in k17447 in k17444 in k17441 in k17438 in k17435 in k17432 in k17429 in k17426 in k17423 in k17420 in k17417 in k17414 in k17411 in k17408 in k17269 in k17266 in k17263 in k17260 in k17204 in k17201 in k17198 in k17195 in k17192 in k17189 in k17186 in k17183 in k15938 in k15869 in k15676 in k15673 in k15568 in k15517 in k7924 in k7921 in k5905 in k5612 in k5609 in k5605 in k5314 in k5311 in k5308 in k5305 */
static void C_ccall f_18583(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word ab[25],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_18583,2,t0,t1);}
t2=(C_word)C_a_i_minus(&a,2,t1,C_fix(1));
t3=t2;
t4=(*a=C_VECTOR_TYPE|1,a[1]=t3,tmp=(C_word)a,a+=2,tmp);
t5=C_fix(0);
t6=(*a=C_VECTOR_TYPE|1,a[1]=t5,tmp=(C_word)a,a+=2,tmp);
t7=(*a=C_CLOSURE_TYPE|8,a[1]=(C_word)f_18589,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=t1,a[7]=t6,a[8]=t4,tmp=(C_word)a,a+=9,tmp);
t8=C_SCHEME_UNDEFINED;
t9=(*a=C_VECTOR_TYPE|1,a[1]=t8,tmp=(C_word)a,a+=2,tmp);
t10=C_set_block_item(t9,0,(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_18676,a[2]=((C_word*)t0)[4],a[3]=t9,a[4]=t4,a[5]=((C_word)li263),tmp=(C_word)a,a+=6,tmp));
t11=((C_word*)t9)[1];
f_18676(t11,t7,C_SCHEME_FALSE);}

/* do2974 in k18581 in k18547 in k18543 in k18540 in sal in k18528 in k18525 in k18522 in k18519 in k18516 in k17994 in k17991 in k17468 in k17465 in k17462 in k17459 in k17456 in k17453 in k17450 in k17447 in k17444 in k17441 in k17438 in k17435 in k17432 in k17429 in k17426 in k17423 in k17420 in k17417 in k17414 in k17411 in k17408 in k17269 in k17266 in k17263 in k17260 in k17204 in k17201 in k17198 in k17195 in k17192 in k17189 in k17186 in k17183 in k15938 in k15869 in k15676 in k15673 in k15568 in k15517 in k7924 in k7921 in k5905 in k5612 in k5609 in k5605 in k5314 in k5311 in k5308 in k5305 */
static void C_fcall f_18676(C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word ab[11],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_18676,NULL,3,t0,t1,t2);}
t3=(*a=C_VECTOR_TYPE|1,a[1]=t2,tmp=(C_word)a,a+=2,tmp);
t4=((C_word*)t3)[1];
t5=(C_truep(t4)?t4:(C_word)C_i_nequalp(((C_word*)((C_word*)t0)[4])[1],C_fix(-1)));
if(C_truep(t5)){
t6=t1;
((C_proc2)(void*)(*((C_word*)t6+1)))(2,t6,C_SCHEME_FALSE);}
else{
t6=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_18686,a[2]=t3,a[3]=t1,a[4]=((C_word*)t0)[3],tmp=(C_word)a,a+=5,tmp);
t7=(C_word)C_i_string_ref(((C_word*)t0)[2],((C_word*)((C_word*)t0)[4])[1]);
t8=(C_word)C_eqp(t7,C_make_character(10));
if(C_truep(t8)){
t9=C_set_block_item(t3,0,C_SCHEME_TRUE);
t10=t6;
f_18686(t10,t9);}
else{
t9=(C_word)C_a_i_minus(&a,2,((C_word*)((C_word*)t0)[4])[1],C_fix(1));
t10=C_mutate(((C_word *)((C_word*)t0)[4])+1,t9);
t11=t6;
f_18686(t11,t10);}}}

/* k18684 in do2974 in k18581 in k18547 in k18543 in k18540 in sal in k18528 in k18525 in k18522 in k18519 in k18516 in k17994 in k17991 in k17468 in k17465 in k17462 in k17459 in k17456 in k17453 in k17450 in k17447 in k17444 in k17441 in k17438 in k17435 in k17432 in k17429 in k17426 in k17423 in k17420 in k17417 in k17414 in k17411 in k17408 in k17269 in k17266 in k17263 in k17260 in k17204 in k17201 in k17198 in k17195 in k17192 in k17189 in k17186 in k17183 in k15938 in k15869 in k15676 in k15673 in k15568 in k15517 in k7924 in k7921 in k5905 in k5612 in k5609 in k5605 in k5314 in k5311 in k5308 in k5305 */
static void C_fcall f_18686(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
t2=((C_word*)((C_word*)t0)[4])[1];
f_18676(t2,((C_word*)t0)[3],((C_word*)((C_word*)t0)[2])[1]);}

/* k18587 in k18581 in k18547 in k18543 in k18540 in sal in k18528 in k18525 in k18522 in k18519 in k18516 in k17994 in k17991 in k17468 in k17465 in k17462 in k17459 in k17456 in k17453 in k17450 in k17447 in k17444 in k17441 in k17438 in k17435 in k17432 in k17429 in k17426 in k17423 in k17420 in k17417 in k17414 in k17411 in k17408 in k17269 in k17266 in k17263 in k17260 in k17204 in k17201 in k17198 in k17195 in k17192 in k17189 in k17186 in k17183 in k15938 in k15869 in k15676 in k15673 in k15568 in k15517 in k7924 in k7921 in k5905 in k5612 in k5609 in k5605 in k5314 in k5311 in k5308 in k5305 */
static void C_ccall f_18589(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word ab[21],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_18589,2,t0,t1);}
t2=(C_word)C_a_i_plus(&a,2,((C_word*)((C_word*)t0)[8])[1],C_fix(1));
t3=C_mutate(((C_word *)((C_word*)t0)[8])+1,t2);
t4=C_mutate(((C_word *)((C_word*)t0)[7])+1,((C_word*)t0)[6]);
t5=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_18597,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[7],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[8],a[6]=((C_word*)t0)[6],a[7]=((C_word*)t0)[5],tmp=(C_word)a,a+=8,tmp);
t6=C_SCHEME_UNDEFINED;
t7=(*a=C_VECTOR_TYPE|1,a[1]=t6,tmp=(C_word)a,a+=2,tmp);
t8=C_set_block_item(t7,0,(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_18646,a[2]=((C_word*)t0)[4],a[3]=t7,a[4]=((C_word*)t0)[2],a[5]=((C_word*)t0)[7],a[6]=((C_word)li262),tmp=(C_word)a,a+=7,tmp));
t9=((C_word*)t7)[1];
f_18646(t9,t5,C_SCHEME_FALSE);}

/* do2981 in k18587 in k18581 in k18547 in k18543 in k18540 in sal in k18528 in k18525 in k18522 in k18519 in k18516 in k17994 in k17991 in k17468 in k17465 in k17462 in k17459 in k17456 in k17453 in k17450 in k17447 in k17444 in k17441 in k17438 in k17435 in k17432 in k17429 in k17426 in k17423 in k17420 in k17417 in k17414 in k17411 in k17408 in k17269 in k17266 in k17263 in k17260 in k17204 in k17201 in k17198 in k17195 in k17192 in k17189 in k17186 in k17183 in k15938 in k15869 in k15676 in k15673 in k15568 in k15517 in k7924 in k7921 in k5905 in k5612 in k5609 in k5605 in k5314 in k5311 in k5308 in k5305 */
static void C_fcall f_18646(C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word ab[11],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_18646,NULL,3,t0,t1,t2);}
t3=(*a=C_VECTOR_TYPE|1,a[1]=t2,tmp=(C_word)a,a+=2,tmp);
t4=((C_word*)t3)[1];
t5=(C_truep(t4)?t4:(C_word)C_i_nequalp(((C_word*)((C_word*)t0)[5])[1],((C_word*)t0)[4]));
if(C_truep(t5)){
t6=t1;
((C_proc2)(void*)(*((C_word*)t6+1)))(2,t6,C_SCHEME_FALSE);}
else{
t6=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_18656,a[2]=t3,a[3]=t1,a[4]=((C_word*)t0)[3],tmp=(C_word)a,a+=5,tmp);
t7=(C_word)C_i_string_ref(((C_word*)t0)[2],((C_word*)((C_word*)t0)[5])[1]);
t8=(C_word)C_eqp(t7,C_make_character(10));
if(C_truep(t8)){
t9=C_set_block_item(t3,0,C_SCHEME_TRUE);
t10=t6;
f_18656(t10,t9);}
else{
t9=(C_word)C_a_i_plus(&a,2,((C_word*)((C_word*)t0)[5])[1],C_fix(1));
t10=C_mutate(((C_word *)((C_word*)t0)[5])+1,t9);
t11=t6;
f_18656(t11,t10);}}}

/* k18654 in do2981 in k18587 in k18581 in k18547 in k18543 in k18540 in sal in k18528 in k18525 in k18522 in k18519 in k18516 in k17994 in k17991 in k17468 in k17465 in k17462 in k17459 in k17456 in k17453 in k17450 in k17447 in k17444 in k17441 in k17438 in k17435 in k17432 in k17429 in k17426 in k17423 in k17420 in k17417 in k17414 in k17411 in k17408 in k17269 in k17266 in k17263 in k17260 in k17204 in k17201 in k17198 in k17195 in k17192 in k17189 in k17186 in k17183 in k15938 in k15869 in k15676 in k15673 in k15568 in k15517 in k7924 in k7921 in k5905 in k5612 in k5609 in k5605 in k5314 in k5311 in k5308 in k5305 */
static void C_fcall f_18656(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
t2=((C_word*)((C_word*)t0)[4])[1];
f_18646(t2,((C_word*)t0)[3],((C_word*)((C_word*)t0)[2])[1]);}

/* k18595 in k18587 in k18581 in k18547 in k18543 in k18540 in sal in k18528 in k18525 in k18522 in k18519 in k18516 in k17994 in k17991 in k17468 in k17465 in k17462 in k17459 in k17456 in k17453 in k17450 in k17447 in k17444 in k17441 in k17438 in k17435 in k17432 in k17429 in k17426 in k17423 in k17420 in k17417 in k17414 in k17411 in k17408 in k17269 in k17266 in k17263 in k17260 in k17204 in k17201 in k17198 in k17195 in k17192 in k17189 in k17186 in k17183 in k15938 in k15869 in k15676 in k15673 in k15568 in k15517 in k7924 in k7921 in k5905 in k5612 in k5609 in k5605 in k5314 in k5311 in k5308 in k5305 */
static void C_ccall f_18597(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[13],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_18597,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_18600,a[2]=((C_word*)t0)[7],tmp=(C_word)a,a+=3,tmp);
t3=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_18607,a[2]=t2,tmp=(C_word)a,a+=3,tmp);
t4=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_18611,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=t3,a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],tmp=(C_word)a,a+=7,tmp);
C_trace("ChickenBridge.scm: 369  parse-error-string");
f_15843(t4,((C_word*)t0)[2]);}

/* k18609 in k18595 in k18587 in k18581 in k18547 in k18543 in k18540 in sal in k18528 in k18525 in k18522 in k18519 in k18516 in k17994 in k17991 in k17468 in k17465 in k17462 in k17459 in k17456 in k17453 in k17450 in k17447 in k17444 in k17441 in k17438 in k17435 in k17432 in k17429 in k17426 in k17423 in k17420 in k17417 in k17414 in k17411 in k17408 in k17269 in k17266 in k17263 in k17260 in k17204 in k17201 in k17198 in k17195 in k17192 in k17189 in k17186 in k17183 in k15938 in k15869 in k15676 in k15673 in k15568 in k15517 in k7924 in k7921 in k5905 in k5612 in k5609 in k5605 in k5314 in k5311 in k5308 in k5305 */
static void C_ccall f_18611(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[8],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_18611,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_18615,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=t1,a[5]=((C_word*)t0)[4],a[6]=((C_word*)t0)[5],a[7]=((C_word*)t0)[6],tmp=(C_word)a,a+=8,tmp);
C_trace("ChickenBridge.scm: 369  make-string");
t3=*((C_word*)lf[351]+1);
((C_proc4)C_retrieve_proc(t3))(4,t3,t2,C_fix(1),C_make_character(10));}

/* k18613 in k18609 in k18595 in k18587 in k18581 in k18547 in k18543 in k18540 in sal in k18528 in k18525 in k18522 in k18519 in k18516 in k17994 in k17991 in k17468 in k17465 in k17462 in k17459 in k17456 in k17453 in k17450 in k17447 in k17444 in k17441 in k17438 in k17435 in k17432 in k17429 in k17426 in k17423 in k17420 in k17417 in k17414 in k17411 in k17408 in k17269 in k17266 in k17263 in k17260 in k17204 in k17201 in k17198 in k17195 in k17192 in k17189 in k17186 in k17183 in k15938 in k15869 in k15676 in k15673 in k15568 in k15517 in k7924 in k7921 in k5905 in k5612 in k5609 in k5605 in k5314 in k5311 in k5308 in k5305 */
static void C_ccall f_18615(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_18615,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_18619,a[2]=t1,a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
C_trace("ChickenBridge.scm: 369  substring");
t3=*((C_word*)lf[352]+1);
((C_proc5)C_retrieve_proc(t3))(5,t3,t2,((C_word*)t0)[3],((C_word*)((C_word*)t0)[6])[1],((C_word*)((C_word*)t0)[2])[1]);}

/* k18617 in k18613 in k18609 in k18595 in k18587 in k18581 in k18547 in k18543 in k18540 in sal in k18528 in k18525 in k18522 in k18519 in k18516 in k17994 in k17991 in k17468 in k17465 in k17462 in k17459 in k17456 in k17453 in k17450 in k17447 in k17444 in k17441 in k17438 in k17435 in k17432 in k17429 in k17426 in k17423 in k17420 in k17417 in k17414 in k17411 in k17408 in k17269 in k17266 in k17263 in k17260 in k17204 in k17201 in k17198 in k17195 in k17192 in k17189 in k17186 in k17183 in k15938 in k15869 in k15676 in k15673 in k15568 in k15517 in k7924 in k7921 in k5905 in k5612 in k5609 in k5605 in k5314 in k5311 in k5308 in k5305 */
static void C_ccall f_18619(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[8],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_18619,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_18623,a[2]=t1,a[3]=((C_word*)t0)[2],a[4]=((C_word*)t0)[3],a[5]=((C_word*)t0)[4],a[6]=((C_word*)t0)[5],a[7]=((C_word*)t0)[6],tmp=(C_word)a,a+=8,tmp);
C_trace("ChickenBridge.scm: 369  make-string");
t3=*((C_word*)lf[351]+1);
((C_proc4)C_retrieve_proc(t3))(4,t3,t2,C_fix(1),C_make_character(10));}

/* k18621 in k18617 in k18613 in k18609 in k18595 in k18587 in k18581 in k18547 in k18543 in k18540 in sal in k18528 in k18525 in k18522 in k18519 in k18516 in k17994 in k17991 in k17468 in k17465 in k17462 in k17459 in k17456 in k17453 in k17450 in k17447 in k17444 in k17441 in k17438 in k17435 in k17432 in k17429 in k17426 in k17423 in k17420 in k17417 in k17414 in k17411 in k17408 in k17269 in k17266 in k17263 in k17260 in k17204 in k17201 in k17198 in k17195 in k17192 in k17189 in k17186 in k17183 in k15938 in k15869 in k15676 in k15673 in k15568 in k15517 in k7924 in k7921 in k5905 in k5612 in k5609 in k5605 in k5314 in k5311 in k5308 in k5305 */
static void C_ccall f_18623(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[16],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_18623,2,t0,t1);}
t2=(C_word)C_a_i_minus(&a,2,((C_word*)t0)[7],((C_word*)((C_word*)t0)[6])[1]);
t3=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_18630,a[2]=t1,a[3]=((C_word*)t0)[2],a[4]=((C_word*)t0)[3],a[5]=((C_word*)t0)[4],a[6]=((C_word*)t0)[5],a[7]=t2,tmp=(C_word)a,a+=8,tmp);
t4=(C_word)C_a_i_plus(&a,2,t2,C_fix(2));
C_trace("ChickenBridge.scm: 369  make-string");
t5=*((C_word*)lf[351]+1);
((C_proc4)C_retrieve_proc(t5))(4,t5,t3,t4,C_make_character(32));}

/* k18628 in k18621 in k18617 in k18613 in k18609 in k18595 in k18587 in k18581 in k18547 in k18543 in k18540 in sal in k18528 in k18525 in k18522 in k18519 in k18516 in k17994 in k17991 in k17468 in k17465 in k17462 in k17459 in k17456 in k17453 in k17450 in k17447 in k17444 in k17441 in k17438 in k17435 in k17432 in k17429 in k17426 in k17423 in k17420 in k17417 in k17414 in k17411 in k17408 in k17269 in k17266 in k17263 in k17260 in k17204 in k17201 in k17198 in k17195 in k17192 in k17189 in k17186 in k17183 in k15938 in k15869 in k15676 in k15673 in k15568 in k15517 in k7924 in k7921 in k5905 in k5612 in k5609 in k5605 in k5314 in k5311 in k5308 in k5305 */
static void C_ccall f_18630(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[4],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_18630,2,t0,t1);}
t2=(C_word)C_i_string_set(t1,((C_word*)t0)[7],C_make_character(94));
t3=(C_word)C_a_i_plus(&a,2,((C_word*)t0)[7],C_fix(1));
t4=(C_word)C_i_string_set(t1,t3,C_make_character(10));
C_trace("ChickenBridge.scm: 369  string-append");
t5=*((C_word*)lf[141]+1);
((C_proc8)C_retrieve_proc(t5))(8,t5,((C_word*)t0)[6],lf[350],((C_word*)t0)[5],((C_word*)t0)[4],((C_word*)t0)[3],((C_word*)t0)[2],t1);}

/* k18605 in k18595 in k18587 in k18581 in k18547 in k18543 in k18540 in sal in k18528 in k18525 in k18522 in k18519 in k18516 in k17994 in k17991 in k17468 in k17465 in k17462 in k17459 in k17456 in k17453 in k17450 in k17447 in k17444 in k17441 in k17438 in k17435 in k17432 in k17429 in k17426 in k17423 in k17420 in k17417 in k17414 in k17411 in k17408 in k17269 in k17266 in k17263 in k17260 in k17204 in k17201 in k17198 in k17195 in k17192 in k17189 in k17186 in k17183 in k15938 in k15869 in k15676 in k15673 in k15568 in k15517 in k7924 in k7921 in k5905 in k5612 in k5609 in k5605 in k5314 in k5311 in k5308 in k5305 */
static void C_ccall f_18607(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 369  print-error");
t2=C_retrieve(lf[349]);
((C_proc3)C_retrieve_proc(t2))(3,t2,((C_word*)t0)[2],t1);}

/* k18598 in k18595 in k18587 in k18581 in k18547 in k18543 in k18540 in sal in k18528 in k18525 in k18522 in k18519 in k18516 in k17994 in k17991 in k17468 in k17465 in k17462 in k17459 in k17456 in k17453 in k17450 in k17447 in k17444 in k17441 in k17438 in k17435 in k17432 in k17429 in k17426 in k17423 in k17420 in k17417 in k17414 in k17411 in k17408 in k17269 in k17266 in k17263 in k17260 in k17204 in k17201 in k17198 in k17195 in k17192 in k17189 in k17186 in k17183 in k15938 in k15869 in k15676 in k15673 in k15568 in k15517 in k7924 in k7921 in k5905 in k5612 in k5609 in k5605 in k5314 in k5311 in k5308 in k5305 */
static void C_ccall f_18600(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 369  values");
C_values(2,0,((C_word*)t0)[2]);}

/* k18550 in k18547 in k18543 in k18540 in sal in k18528 in k18525 in k18522 in k18519 in k18516 in k17994 in k17991 in k17468 in k17465 in k17462 in k17459 in k17456 in k17453 in k17450 in k17447 in k17444 in k17441 in k17438 in k17435 in k17432 in k17429 in k17426 in k17423 in k17420 in k17417 in k17414 in k17411 in k17408 in k17269 in k17266 in k17263 in k17260 in k17204 in k17201 in k17198 in k17195 in k17192 in k17189 in k17186 in k17183 in k15938 in k15869 in k15676 in k15673 in k15568 in k15517 in k7924 in k7921 in k5905 in k5612 in k5609 in k5605 in k5314 in k5311 in k5308 in k5305 */
static void C_ccall f_18552(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 369  values");
C_values(2,0,((C_word*)t0)[2]);}

/* sal-parse-stepping in k17468 in k17465 in k17462 in k17459 in k17456 in k17453 in k17450 in k17447 in k17444 in k17441 in k17438 in k17435 in k17432 in k17429 in k17426 in k17423 in k17420 in k17417 in k17414 in k17411 in k17408 in k17269 in k17266 in k17263 in k17260 in k17204 in k17201 in k17198 in k17195 in k17192 in k17189 in k17186 in k17183 in k15938 in k15869 in k15676 in k15673 in k15568 in k15517 in k7924 in k7921 in k5905 in k5612 in k5609 in k5605 in k5314 in k5311 in k5308 in k5305 */
static void C_ccall f_17472(C_word c,C_word t0,C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word t14;
C_word t15;
C_word t16;
C_word t17;
C_word t18;
C_word t19;
C_word t20;
C_word t21;
C_word t22;
C_word t23;
C_word t24;
C_word t25;
C_word t26;
C_word t27;
C_word t28;
C_word t29;
C_word t30;
C_word t31;
C_word t32;
C_word t33;
C_word t34;
C_word t35;
C_word ab[51],*a=ab;
if(c!=4) C_bad_argc_2(c,4,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr4,(void*)f_17472,4,t0,t1,t2,t3);}
t4=C_SCHEME_END_OF_LIST;
t5=(*a=C_VECTOR_TYPE|1,a[1]=t4,tmp=(C_word)a,a+=2,tmp);
t6=C_SCHEME_FALSE;
t7=(*a=C_VECTOR_TYPE|1,a[1]=t6,tmp=(C_word)a,a+=2,tmp);
t8=C_SCHEME_FALSE;
t9=(*a=C_VECTOR_TYPE|1,a[1]=t8,tmp=(C_word)a,a+=2,tmp);
t10=C_SCHEME_FALSE;
t11=(*a=C_VECTOR_TYPE|1,a[1]=t10,tmp=(C_word)a,a+=2,tmp);
t12=C_SCHEME_FALSE;
t13=(*a=C_VECTOR_TYPE|1,a[1]=t12,tmp=(C_word)a,a+=2,tmp);
t14=C_SCHEME_FALSE;
t15=(*a=C_VECTOR_TYPE|1,a[1]=t14,tmp=(C_word)a,a+=2,tmp);
t16=C_SCHEME_FALSE;
t17=(*a=C_VECTOR_TYPE|1,a[1]=t16,tmp=(C_word)a,a+=2,tmp);
t18=C_SCHEME_FALSE;
t19=(*a=C_VECTOR_TYPE|1,a[1]=t18,tmp=(C_word)a,a+=2,tmp);
t20=C_SCHEME_FALSE;
t21=(*a=C_VECTOR_TYPE|1,a[1]=t20,tmp=(C_word)a,a+=2,tmp);
t22=C_SCHEME_FALSE;
t23=(*a=C_VECTOR_TYPE|1,a[1]=t22,tmp=(C_word)a,a+=2,tmp);
t24=C_SCHEME_FALSE;
t25=(*a=C_VECTOR_TYPE|1,a[1]=t24,tmp=(C_word)a,a+=2,tmp);
t26=C_SCHEME_FALSE;
t27=(*a=C_VECTOR_TYPE|1,a[1]=t26,tmp=(C_word)a,a+=2,tmp);
t28=C_SCHEME_FALSE;
t29=(*a=C_VECTOR_TYPE|1,a[1]=t28,tmp=(C_word)a,a+=2,tmp);
t30=C_SCHEME_FALSE;
t31=(*a=C_VECTOR_TYPE|1,a[1]=t30,tmp=(C_word)a,a+=2,tmp);
t32=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_17479,a[2]=t5,a[3]=t1,tmp=(C_word)a,a+=4,tmp);
t33=(*a=C_CLOSURE_TYPE|18,a[1]=(C_word)f_17485,a[2]=t27,a[3]=t25,a[4]=t29,a[5]=t31,a[6]=t23,a[7]=t19,a[8]=t17,a[9]=t21,a[10]=t15,a[11]=t7,a[12]=t3,a[13]=t2,a[14]=t32,a[15]=t5,a[16]=t13,a[17]=t11,a[18]=t9,tmp=(C_word)a,a+=19,tmp);
t34=(C_word)C_i_car(t2);
C_trace("ChickenBridge.scm: 369  token-unit-type=?");
f_15958(t33,t34,C_fix(23296));}

/* k17483 in sal-parse-stepping in k17468 in k17465 in k17462 in k17459 in k17456 in k17453 in k17450 in k17447 in k17444 in k17441 in k17438 in k17435 in k17432 in k17429 in k17426 in k17423 in k17420 in k17417 in k17414 in k17411 in k17408 in k17269 in k17266 in k17263 in k17260 in k17204 in k17201 in k17198 in k17195 in k17192 in k17189 in k17186 in k17183 in k15938 in k15869 in k15676 in k15673 in k15568 in k15517 in k7924 in k7921 in k5905 in k5612 in k5609 in k5605 in k5314 in k5311 in k5308 in k5305 */
static void C_ccall f_17485(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[25],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_17485,2,t0,t1);}
if(C_truep(t1)){
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_17489,a[2]=((C_word*)t0)[14],a[3]=((C_word*)t0)[15],a[4]=((C_word*)t0)[16],a[5]=((C_word*)t0)[17],a[6]=((C_word*)t0)[18],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cadr(((C_word*)t0)[13]);
C_trace("ChickenBridge.scm: 369  emit");
f_16030(t2,t3,C_SCHEME_END_OF_LIST,((C_word*)t0)[12]);}
else{
t2=(*a=C_CLOSURE_TYPE|17,a[1]=(C_word)f_17535,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[16],a[5]=((C_word*)t0)[4],a[6]=((C_word*)t0)[5],a[7]=((C_word*)t0)[6],a[8]=((C_word*)t0)[7],a[9]=((C_word*)t0)[13],a[10]=((C_word*)t0)[12],a[11]=((C_word*)t0)[8],a[12]=((C_word*)t0)[9],a[13]=((C_word*)t0)[14],a[14]=((C_word*)t0)[15],a[15]=((C_word*)t0)[10],a[16]=((C_word*)t0)[18],a[17]=((C_word*)t0)[11],tmp=(C_word)a,a+=18,tmp);
t3=(C_word)C_i_caddr(((C_word*)t0)[13]);
C_trace("ChickenBridge.scm: 369  token-unit-type=?");
f_15958(t2,t3,C_fix(10756));}}

/* k17533 in k17483 in sal-parse-stepping in k17468 in k17465 in k17462 in k17459 in k17456 in k17453 in k17450 in k17447 in k17444 in k17441 in k17438 in k17435 in k17432 in k17429 in k17426 in k17423 in k17420 in k17417 in k17414 in k17411 in k17408 in k17269 in k17266 in k17263 in k17260 in k17204 in k17201 in k17198 in k17195 in k17192 in k17189 in k17186 in k17183 in k15938 in k15869 in k15676 in k15673 in k15568 in k15517 in k7924 in k7921 in k5905 in k5612 in k5609 in k5605 in k5314 in k5311 in k5308 in k5305 */
static void C_ccall f_17535(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[26],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_17535,2,t0,t1);}
if(C_truep(t1)){
t2=(*a=C_CLOSURE_TYPE|10,a[1]=(C_word)f_17539,a[2]=((C_word*)t0)[9],a[3]=((C_word*)t0)[10],a[4]=((C_word*)t0)[11],a[5]=((C_word*)t0)[12],a[6]=((C_word*)t0)[13],a[7]=((C_word*)t0)[14],a[8]=((C_word*)t0)[15],a[9]=((C_word*)t0)[16],a[10]=((C_word*)t0)[17],tmp=(C_word)a,a+=11,tmp);
t3=(C_word)C_i_cadr(((C_word*)t0)[9]);
C_trace("ChickenBridge.scm: 369  emit");
f_16030(t2,t3,C_SCHEME_END_OF_LIST,((C_word*)t0)[10]);}
else{
t2=(*a=C_CLOSURE_TYPE|14,a[1]=(C_word)f_17632,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],a[7]=((C_word*)t0)[7],a[8]=((C_word*)t0)[10],a[9]=((C_word*)t0)[9],a[10]=((C_word*)t0)[13],a[11]=((C_word*)t0)[14],a[12]=((C_word*)t0)[8],a[13]=((C_word*)t0)[16],a[14]=((C_word*)t0)[17],tmp=(C_word)a,a+=15,tmp);
t3=(C_word)C_i_caddr(((C_word*)t0)[9]);
C_trace("ChickenBridge.scm: 369  token-unit-type=?");
f_15958(t2,t3,C_fix(22784));}}

/* k17630 in k17533 in k17483 in sal-parse-stepping in k17468 in k17465 in k17462 in k17459 in k17456 in k17453 in k17450 in k17447 in k17444 in k17441 in k17438 in k17435 in k17432 in k17429 in k17426 in k17423 in k17420 in k17417 in k17414 in k17411 in k17408 in k17269 in k17266 in k17263 in k17260 in k17204 in k17201 in k17198 in k17195 in k17192 in k17189 in k17186 in k17183 in k15938 in k15869 in k15676 in k15673 in k15568 in k15517 in k7924 in k7921 in k5905 in k5612 in k5609 in k5605 in k5314 in k5311 in k5308 in k5305 */
static void C_ccall f_17632(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word ab[22],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_17632,2,t0,t1);}
if(C_truep(t1)){
t2=(*a=C_CLOSURE_TYPE|8,a[1]=(C_word)f_17636,a[2]=((C_word*)t0)[8],a[3]=((C_word*)t0)[9],a[4]=((C_word*)t0)[10],a[5]=((C_word*)t0)[11],a[6]=((C_word*)t0)[12],a[7]=((C_word*)t0)[13],a[8]=((C_word*)t0)[14],tmp=(C_word)a,a+=9,tmp);
t3=(C_word)C_i_cadr(((C_word*)t0)[9]);
C_trace("ChickenBridge.scm: 369  emit");
f_16030(t2,t3,C_SCHEME_END_OF_LIST,((C_word*)t0)[8]);}
else{
t2=(C_word)C_i_length(((C_word*)t0)[9]);
t3=C_mutate(((C_word *)((C_word*)t0)[7])+1,t2);
t4=(*a=C_CLOSURE_TYPE|12,a[1]=(C_word)f_17700,a[2]=((C_word*)t0)[8],a[3]=((C_word*)t0)[2],a[4]=((C_word*)t0)[3],a[5]=((C_word*)t0)[4],a[6]=((C_word*)t0)[5],a[7]=((C_word*)t0)[10],a[8]=((C_word*)t0)[11],a[9]=((C_word*)t0)[6],a[10]=((C_word*)t0)[9],a[11]=((C_word*)t0)[7],a[12]=((C_word*)t0)[14],tmp=(C_word)a,a+=13,tmp);
t5=(C_word)C_i_cadr(((C_word*)t0)[9]);
C_trace("ChickenBridge.scm: 369  emit");
f_16030(t4,t5,C_SCHEME_END_OF_LIST,((C_word*)t0)[8]);}}

/* k17698 in k17630 in k17533 in k17483 in sal-parse-stepping in k17468 in k17465 in k17462 in k17459 in k17456 in k17453 in k17450 in k17447 in k17444 in k17441 in k17438 in k17435 in k17432 in k17429 in k17426 in k17423 in k17420 in k17417 in k17414 in k17411 in k17408 in k17269 in k17266 in k17263 in k17260 in k17204 in k17201 in k17198 in k17195 in k17192 in k17189 in k17186 in k17183 in k15938 in k15869 in k15676 in k15673 in k15568 in k15517 in k7924 in k7921 in k5905 in k5612 in k5609 in k5605 in k5314 in k5311 in k5308 in k5305 */
static void C_ccall f_17700(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word ab[21],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_17700,2,t0,t1);}
t2=C_mutate(((C_word *)((C_word*)t0)[12])+1,t1);
t3=(C_word)C_a_i_minus(&a,2,((C_word*)((C_word*)t0)[11])[1],C_fix(1));
t4=(C_word)C_i_list_ref(((C_word*)t0)[10],t3);
t5=C_mutate(((C_word *)((C_word*)t0)[9])+1,t4);
t6=(*a=C_CLOSURE_TYPE|12,a[1]=(C_word)f_17707,a[2]=((C_word*)t0)[10],a[3]=((C_word*)t0)[2],a[4]=((C_word*)t0)[11],a[5]=((C_word*)t0)[3],a[6]=((C_word*)t0)[4],a[7]=((C_word*)t0)[5],a[8]=((C_word*)t0)[9],a[9]=((C_word*)t0)[6],a[10]=((C_word*)t0)[12],a[11]=((C_word*)t0)[7],a[12]=((C_word*)t0)[8],tmp=(C_word)a,a+=13,tmp);
if(C_truep(((C_word*)((C_word*)t0)[9])[1])){
t7=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_17957,a[2]=t6,a[3]=((C_word*)t0)[9],tmp=(C_word)a,a+=4,tmp);
t8=(C_word)C_i_cadr(((C_word*)((C_word*)t0)[9])[1]);
C_trace("ChickenBridge.scm: 369  emit");
f_16030(t7,t8,C_SCHEME_END_OF_LIST,((C_word*)t0)[2]);}
else{
t7=C_set_block_item(((C_word*)t0)[9],0,C_fix(1));
t8=t6;
f_17707(t8,t7);}}

/* k17955 in k17698 in k17630 in k17533 in k17483 in sal-parse-stepping in k17468 in k17465 in k17462 in k17459 in k17456 in k17453 in k17450 in k17447 in k17444 in k17441 in k17438 in k17435 in k17432 in k17429 in k17426 in k17423 in k17420 in k17417 in k17414 in k17411 in k17408 in k17269 in k17266 in k17263 in k17260 in k17204 in k17201 in k17198 in k17195 in k17192 in k17189 in k17186 in k17183 in k15938 in k15869 in k15676 in k15673 in k15568 in k15517 in k7924 in k7921 in k5905 in k5612 in k5609 in k5605 in k5314 in k5311 in k5308 in k5305 */
static void C_ccall f_17957(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[3])+1,t1);
t3=((C_word*)t0)[2];
f_17707(t3,t2);}

/* k17705 in k17698 in k17630 in k17533 in k17483 in sal-parse-stepping in k17468 in k17465 in k17462 in k17459 in k17456 in k17453 in k17450 in k17447 in k17444 in k17441 in k17438 in k17435 in k17432 in k17429 in k17426 in k17423 in k17420 in k17417 in k17414 in k17411 in k17408 in k17269 in k17266 in k17263 in k17260 in k17204 in k17201 in k17198 in k17195 in k17192 in k17189 in k17186 in k17183 in k15938 in k15869 in k15676 in k15673 in k15568 in k15517 in k7924 in k7921 in k5905 in k5612 in k5609 in k5605 in k5314 in k5311 in k5308 in k5305 */
static void C_fcall f_17707(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word ab[22],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_17707,NULL,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|9,a[1]=(C_word)f_17710,a[2]=((C_word*)t0)[5],a[3]=((C_word*)t0)[6],a[4]=((C_word*)t0)[7],a[5]=((C_word*)t0)[8],a[6]=((C_word*)t0)[9],a[7]=((C_word*)t0)[10],a[8]=((C_word*)t0)[11],a[9]=((C_word*)t0)[12],tmp=(C_word)a,a+=10,tmp);
if(C_truep((C_word)C_i_nequalp(((C_word*)((C_word*)t0)[4])[1],C_fix(6)))){
t3=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_17896,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=t2,a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],a[7]=((C_word*)t0)[9],tmp=(C_word)a,a+=8,tmp);
t4=(C_word)C_i_cadddr(((C_word*)t0)[2]);
C_trace("ChickenBridge.scm: 369  emit");
f_16030(t3,t4,C_SCHEME_END_OF_LIST,((C_word*)t0)[3]);}
else{
t3=C_set_block_item(((C_word*)t0)[9],0,C_fix(0));
t4=(C_word)C_i_caddr(((C_word*)t0)[2]);
t5=C_mutate(((C_word *)((C_word*)t0)[6])+1,t4);
t6=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_17945,a[2]=t2,a[3]=((C_word*)t0)[5],tmp=(C_word)a,a+=4,tmp);
t7=(C_word)C_i_cadddr(((C_word*)t0)[2]);
C_trace("ChickenBridge.scm: 369  emit");
f_16030(t6,t7,C_SCHEME_END_OF_LIST,((C_word*)t0)[3]);}}

/* k17943 in k17705 in k17698 in k17630 in k17533 in k17483 in sal-parse-stepping in k17468 in k17465 in k17462 in k17459 in k17456 in k17453 in k17450 in k17447 in k17444 in k17441 in k17438 in k17435 in k17432 in k17429 in k17426 in k17423 in k17420 in k17417 in k17414 in k17411 in k17408 in k17269 in k17266 in k17263 in k17260 in k17204 in k17201 in k17198 in k17195 in k17192 in k17189 in k17186 in k17183 in k15938 in k15869 in k15676 in k15673 in k15568 in k15517 in k7924 in k7921 in k5905 in k5612 in k5609 in k5605 in k5314 in k5311 in k5308 in k5305 */
static void C_ccall f_17945(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[3])+1,t1);
t3=((C_word*)t0)[2];
f_17710(t3,t2);}

/* k17894 in k17705 in k17698 in k17630 in k17533 in k17483 in sal-parse-stepping in k17468 in k17465 in k17462 in k17459 in k17456 in k17453 in k17450 in k17447 in k17444 in k17441 in k17438 in k17435 in k17432 in k17429 in k17426 in k17423 in k17420 in k17417 in k17414 in k17411 in k17408 in k17269 in k17266 in k17263 in k17260 in k17204 in k17201 in k17198 in k17195 in k17192 in k17189 in k17186 in k17183 in k15938 in k15869 in k15676 in k15673 in k15568 in k15517 in k7924 in k7921 in k5905 in k5612 in k5609 in k5605 in k5314 in k5311 in k5308 in k5305 */
static void C_ccall f_17896(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_17896,2,t0,t1);}
t2=C_mutate(((C_word *)((C_word*)t0)[7])+1,t1);
t3=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_17902,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],tmp=(C_word)a,a+=7,tmp);
C_trace("ChickenBridge.scm: 369  fifth");
t4=C_retrieve(lf[47]);
((C_proc3)C_retrieve_proc(t4))(3,t4,t3,((C_word*)t0)[2]);}

/* k17900 in k17894 in k17705 in k17698 in k17630 in k17533 in k17483 in sal-parse-stepping in k17468 in k17465 in k17462 in k17459 in k17456 in k17453 in k17450 in k17447 in k17444 in k17441 in k17438 in k17435 in k17432 in k17429 in k17426 in k17423 in k17420 in k17417 in k17414 in k17411 in k17408 in k17269 in k17266 in k17263 in k17260 in k17204 in k17201 in k17198 in k17195 in k17192 in k17189 in k17186 in k17183 in k15938 in k15869 in k15676 in k15673 in k15568 in k15517 in k7924 in k7921 in k5905 in k5612 in k5609 in k5605 in k5314 in k5311 in k5308 in k5305 */
static void C_ccall f_17902(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_17902,2,t0,t1);}
if(C_truep(t1)){
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_17926,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],tmp=(C_word)a,a+=7,tmp);
C_trace("ChickenBridge.scm: 369  fifth");
t3=C_retrieve(lf[47]);
((C_proc3)C_retrieve_proc(t3))(3,t3,t2,((C_word*)t0)[2]);}
else{
t2=C_set_block_item(((C_word*)t0)[6],0,C_SCHEME_FALSE);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_FALSE);
t4=((C_word*)t0)[4];
f_17710(t4,t3);}}

/* k17924 in k17900 in k17894 in k17705 in k17698 in k17630 in k17533 in k17483 in sal-parse-stepping in k17468 in k17465 in k17462 in k17459 in k17456 in k17453 in k17450 in k17447 in k17444 in k17441 in k17438 in k17435 in k17432 in k17429 in k17426 in k17423 in k17420 in k17417 in k17414 in k17411 in k17408 in k17269 in k17266 in k17263 in k17260 in k17204 in k17201 in k17198 in k17195 in k17192 in k17189 in k17186 in k17183 in k15938 in k15869 in k15676 in k15673 in k15568 in k15517 in k7924 in k7921 in k5905 in k5612 in k5609 in k5605 in k5314 in k5311 in k5308 in k5305 */
static void C_ccall f_17926(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[8],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_17926,2,t0,t1);}
t2=(C_word)C_i_car(t1);
t3=C_mutate(((C_word *)((C_word*)t0)[6])+1,t2);
t4=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_17910,a[2]=((C_word*)t0)[4],a[3]=((C_word*)t0)[5],tmp=(C_word)a,a+=4,tmp);
t5=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_17922,a[2]=((C_word*)t0)[3],a[3]=t4,tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 369  fifth");
t6=C_retrieve(lf[47]);
((C_proc3)C_retrieve_proc(t6))(3,t6,t5,((C_word*)t0)[2]);}

/* k17920 in k17924 in k17900 in k17894 in k17705 in k17698 in k17630 in k17533 in k17483 in sal-parse-stepping in k17468 in k17465 in k17462 in k17459 in k17456 in k17453 in k17450 in k17447 in k17444 in k17441 in k17438 in k17435 in k17432 in k17429 in k17426 in k17423 in k17420 in k17417 in k17414 in k17411 in k17408 in k17269 in k17266 in k17263 in k17260 in k17204 in k17201 in k17198 in k17195 in k17192 in k17189 in k17186 in k17183 in k15938 in k15869 in k15676 in k15673 in k15568 in k15517 in k7924 in k7921 in k5905 in k5612 in k5609 in k5605 in k5314 in k5311 in k5308 in k5305 */
static void C_ccall f_17922(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word *a;
t2=(C_word)C_i_cadr(t1);
C_trace("ChickenBridge.scm: 369  emit");
f_16030(((C_word*)t0)[3],t2,C_SCHEME_END_OF_LIST,((C_word*)t0)[2]);}

/* k17908 in k17924 in k17900 in k17894 in k17705 in k17698 in k17630 in k17533 in k17483 in sal-parse-stepping in k17468 in k17465 in k17462 in k17459 in k17456 in k17453 in k17450 in k17447 in k17444 in k17441 in k17438 in k17435 in k17432 in k17429 in k17426 in k17423 in k17420 in k17417 in k17414 in k17411 in k17408 in k17269 in k17266 in k17263 in k17260 in k17204 in k17201 in k17198 in k17195 in k17192 in k17189 in k17186 in k17183 in k15938 in k15869 in k15676 in k15673 in k15568 in k15517 in k7924 in k7921 in k5905 in k5612 in k5609 in k5605 in k5314 in k5311 in k5308 in k5305 */
static void C_ccall f_17910(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[3])+1,t1);
t3=((C_word*)t0)[2];
f_17710(t3,t2);}

/* k17708 in k17705 in k17698 in k17630 in k17533 in k17483 in sal-parse-stepping in k17468 in k17465 in k17462 in k17459 in k17456 in k17453 in k17450 in k17447 in k17444 in k17441 in k17438 in k17435 in k17432 in k17429 in k17426 in k17423 in k17420 in k17417 in k17414 in k17411 in k17408 in k17269 in k17266 in k17263 in k17260 in k17204 in k17201 in k17198 in k17195 in k17192 in k17189 in k17186 in k17183 in k15938 in k15869 in k15676 in k15673 in k15568 in k15517 in k7924 in k7921 in k5905 in k5612 in k5609 in k5605 in k5314 in k5311 in k5308 in k5305 */
static void C_fcall f_17710(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[15],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_17710,NULL,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|9,a[1]=(C_word)f_17713,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],a[7]=((C_word*)t0)[7],a[8]=((C_word*)t0)[8],a[9]=((C_word*)t0)[9],tmp=(C_word)a,a+=10,tmp);
if(C_truep((C_word)C_i_numberp(((C_word*)((C_word*)t0)[5])[1]))){
t3=t2;
f_17713(t3,C_SCHEME_UNDEFINED);}
else{
t3=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_17872,a[2]=t2,a[3]=((C_word*)t0)[5],a[4]=((C_word*)t0)[9],tmp=(C_word)a,a+=5,tmp);
C_trace("ChickenBridge.scm: 369  gensym");
t4=C_retrieve(lf[26]);
((C_proc3)C_retrieve_proc(t4))(3,t4,t3,lf[344]);}}

/* k17870 in k17708 in k17705 in k17698 in k17630 in k17533 in k17483 in sal-parse-stepping in k17468 in k17465 in k17462 in k17459 in k17456 in k17453 in k17450 in k17447 in k17444 in k17441 in k17438 in k17435 in k17432 in k17429 in k17426 in k17423 in k17420 in k17417 in k17414 in k17411 in k17408 in k17269 in k17266 in k17263 in k17260 in k17204 in k17201 in k17198 in k17195 in k17192 in k17189 in k17186 in k17183 in k15938 in k15869 in k15676 in k15673 in k15568 in k15517 in k7924 in k7921 in k5905 in k5612 in k5609 in k5605 in k5314 in k5311 in k5308 in k5305 */
static void C_ccall f_17872(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[24],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_17872,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_17876,a[2]=((C_word*)t0)[2],a[3]=t1,a[4]=((C_word*)t0)[3],a[5]=((C_word*)t0)[4],tmp=(C_word)a,a+=6,tmp);
t3=(C_word)C_a_i_list(&a,5,t1,((C_word*)((C_word*)t0)[3])[1],C_SCHEME_FALSE,C_SCHEME_FALSE,C_SCHEME_FALSE);
t4=(C_word)C_a_i_list(&a,1,t3);
C_trace("ChickenBridge.scm: 369  append");
t5=*((C_word*)lf[18]+1);
((C_proc4)C_retrieve_proc(t5))(4,t5,t2,((C_word*)((C_word*)t0)[4])[1],t4);}

/* k17874 in k17870 in k17708 in k17705 in k17698 in k17630 in k17533 in k17483 in sal-parse-stepping in k17468 in k17465 in k17462 in k17459 in k17456 in k17453 in k17450 in k17447 in k17444 in k17441 in k17438 in k17435 in k17432 in k17429 in k17426 in k17423 in k17420 in k17417 in k17414 in k17411 in k17408 in k17269 in k17266 in k17263 in k17260 in k17204 in k17201 in k17198 in k17195 in k17192 in k17189 in k17186 in k17183 in k15938 in k15869 in k15676 in k15673 in k15568 in k15517 in k7924 in k7921 in k5905 in k5612 in k5609 in k5605 in k5314 in k5311 in k5308 in k5305 */
static void C_ccall f_17876(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[5])+1,t1);
t3=C_mutate(((C_word *)((C_word*)t0)[4])+1,((C_word*)t0)[3]);
t4=((C_word*)t0)[2];
f_17713(t4,t3);}

/* k17711 in k17708 in k17705 in k17698 in k17630 in k17533 in k17483 in sal-parse-stepping in k17468 in k17465 in k17462 in k17459 in k17456 in k17453 in k17450 in k17447 in k17444 in k17441 in k17438 in k17435 in k17432 in k17429 in k17426 in k17423 in k17420 in k17417 in k17414 in k17411 in k17408 in k17269 in k17266 in k17263 in k17260 in k17204 in k17201 in k17198 in k17195 in k17192 in k17189 in k17186 in k17183 in k15938 in k15869 in k15676 in k15673 in k15568 in k15517 in k7924 in k7921 in k5905 in k5612 in k5609 in k5605 in k5314 in k5311 in k5308 in k5305 */
static void C_fcall f_17713(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[15],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_17713,NULL,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|9,a[1]=(C_word)f_17716,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],a[7]=((C_word*)t0)[7],a[8]=((C_word*)t0)[8],a[9]=((C_word*)t0)[9],tmp=(C_word)a,a+=10,tmp);
if(C_truep((C_word)C_i_numberp(((C_word*)((C_word*)t0)[6])[1]))){
t3=t2;
f_17716(t3,C_SCHEME_UNDEFINED);}
else{
t3=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_17849,a[2]=t2,a[3]=((C_word*)t0)[6],a[4]=((C_word*)t0)[9],tmp=(C_word)a,a+=5,tmp);
C_trace("ChickenBridge.scm: 369  gensym");
t4=C_retrieve(lf[26]);
((C_proc3)C_retrieve_proc(t4))(3,t4,t3,lf[343]);}}

/* k17847 in k17711 in k17708 in k17705 in k17698 in k17630 in k17533 in k17483 in sal-parse-stepping in k17468 in k17465 in k17462 in k17459 in k17456 in k17453 in k17450 in k17447 in k17444 in k17441 in k17438 in k17435 in k17432 in k17429 in k17426 in k17423 in k17420 in k17417 in k17414 in k17411 in k17408 in k17269 in k17266 in k17263 in k17260 in k17204 in k17201 in k17198 in k17195 in k17192 in k17189 in k17186 in k17183 in k15938 in k15869 in k15676 in k15673 in k15568 in k15517 in k7924 in k7921 in k5905 in k5612 in k5609 in k5605 in k5314 in k5311 in k5308 in k5305 */
static void C_ccall f_17849(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[24],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_17849,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_17853,a[2]=((C_word*)t0)[2],a[3]=t1,a[4]=((C_word*)t0)[3],a[5]=((C_word*)t0)[4],tmp=(C_word)a,a+=6,tmp);
t3=(C_word)C_a_i_list(&a,5,t1,((C_word*)((C_word*)t0)[3])[1],C_SCHEME_FALSE,C_SCHEME_FALSE,C_SCHEME_FALSE);
t4=(C_word)C_a_i_list(&a,1,t3);
C_trace("ChickenBridge.scm: 369  append");
t5=*((C_word*)lf[18]+1);
((C_proc4)C_retrieve_proc(t5))(4,t5,t2,((C_word*)((C_word*)t0)[4])[1],t4);}

/* k17851 in k17847 in k17711 in k17708 in k17705 in k17698 in k17630 in k17533 in k17483 in sal-parse-stepping in k17468 in k17465 in k17462 in k17459 in k17456 in k17453 in k17450 in k17447 in k17444 in k17441 in k17438 in k17435 in k17432 in k17429 in k17426 in k17423 in k17420 in k17417 in k17414 in k17411 in k17408 in k17269 in k17266 in k17263 in k17260 in k17204 in k17201 in k17198 in k17195 in k17192 in k17189 in k17186 in k17183 in k15938 in k15869 in k15676 in k15673 in k15568 in k15517 in k7924 in k7921 in k5905 in k5612 in k5609 in k5605 in k5314 in k5311 in k5308 in k5305 */
static void C_ccall f_17853(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[5])+1,t1);
t3=C_mutate(((C_word *)((C_word*)t0)[4])+1,((C_word*)t0)[3]);
t4=((C_word*)t0)[2];
f_17716(t4,t3);}

/* k17714 in k17711 in k17708 in k17705 in k17698 in k17630 in k17533 in k17483 in sal-parse-stepping in k17468 in k17465 in k17462 in k17459 in k17456 in k17453 in k17450 in k17447 in k17444 in k17441 in k17438 in k17435 in k17432 in k17429 in k17426 in k17423 in k17420 in k17417 in k17414 in k17411 in k17408 in k17269 in k17266 in k17263 in k17260 in k17204 in k17201 in k17198 in k17195 in k17192 in k17189 in k17186 in k17183 in k15938 in k15869 in k15676 in k15673 in k15568 in k15517 in k7924 in k7921 in k5905 in k5612 in k5609 in k5605 in k5314 in k5311 in k5308 in k5305 */
static void C_fcall f_17716(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[15],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_17716,NULL,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|9,a[1]=(C_word)f_17719,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],a[7]=((C_word*)t0)[7],a[8]=((C_word*)t0)[8],a[9]=((C_word*)t0)[9],tmp=(C_word)a,a+=10,tmp);
if(C_truep(((C_word*)((C_word*)t0)[2])[1])){
if(C_truep((C_word)C_i_numberp(((C_word*)((C_word*)t0)[2])[1]))){
t3=t2;
f_17719(t3,C_SCHEME_UNDEFINED);}
else{
t3=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_17826,a[2]=t2,a[3]=((C_word*)t0)[2],a[4]=((C_word*)t0)[9],tmp=(C_word)a,a+=5,tmp);
C_trace("ChickenBridge.scm: 369  gensym");
t4=C_retrieve(lf[26]);
((C_proc3)C_retrieve_proc(t4))(3,t4,t3,lf[342]);}}
else{
t3=t2;
f_17719(t3,C_SCHEME_UNDEFINED);}}

/* k17824 in k17714 in k17711 in k17708 in k17705 in k17698 in k17630 in k17533 in k17483 in sal-parse-stepping in k17468 in k17465 in k17462 in k17459 in k17456 in k17453 in k17450 in k17447 in k17444 in k17441 in k17438 in k17435 in k17432 in k17429 in k17426 in k17423 in k17420 in k17417 in k17414 in k17411 in k17408 in k17269 in k17266 in k17263 in k17260 in k17204 in k17201 in k17198 in k17195 in k17192 in k17189 in k17186 in k17183 in k15938 in k15869 in k15676 in k15673 in k15568 in k15517 in k7924 in k7921 in k5905 in k5612 in k5609 in k5605 in k5314 in k5311 in k5308 in k5305 */
static void C_ccall f_17826(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[24],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_17826,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_17830,a[2]=((C_word*)t0)[2],a[3]=t1,a[4]=((C_word*)t0)[3],a[5]=((C_word*)t0)[4],tmp=(C_word)a,a+=6,tmp);
t3=(C_word)C_a_i_list(&a,5,t1,((C_word*)((C_word*)t0)[3])[1],C_SCHEME_FALSE,C_SCHEME_FALSE,C_SCHEME_FALSE);
t4=(C_word)C_a_i_list(&a,1,t3);
C_trace("ChickenBridge.scm: 369  append");
t5=*((C_word*)lf[18]+1);
((C_proc4)C_retrieve_proc(t5))(4,t5,t2,((C_word*)((C_word*)t0)[4])[1],t4);}

/* k17828 in k17824 in k17714 in k17711 in k17708 in k17705 in k17698 in k17630 in k17533 in k17483 in sal-parse-stepping in k17468 in k17465 in k17462 in k17459 in k17456 in k17453 in k17450 in k17447 in k17444 in k17441 in k17438 in k17435 in k17432 in k17429 in k17426 in k17423 in k17420 in k17417 in k17414 in k17411 in k17408 in k17269 in k17266 in k17263 in k17260 in k17204 in k17201 in k17198 in k17195 in k17192 in k17189 in k17186 in k17183 in k15938 in k15869 in k15676 in k15673 in k15568 in k15517 in k7924 in k7921 in k5905 in k5612 in k5609 in k5605 in k5314 in k5311 in k5308 in k5305 */
static void C_ccall f_17830(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[5])+1,t1);
t3=C_mutate(((C_word *)((C_word*)t0)[4])+1,((C_word*)t0)[3]);
t4=((C_word*)t0)[2];
f_17719(t4,t3);}

/* k17717 in k17714 in k17711 in k17708 in k17705 in k17698 in k17630 in k17533 in k17483 in sal-parse-stepping in k17468 in k17465 in k17462 in k17459 in k17456 in k17453 in k17450 in k17447 in k17444 in k17441 in k17438 in k17435 in k17432 in k17429 in k17426 in k17423 in k17420 in k17417 in k17414 in k17411 in k17408 in k17269 in k17266 in k17263 in k17260 in k17204 in k17201 in k17198 in k17195 in k17192 in k17189 in k17186 in k17183 in k15938 in k15869 in k15676 in k15673 in k15568 in k15517 in k7924 in k7921 in k5905 in k5612 in k5609 in k5605 in k5314 in k5311 in k5308 in k5305 */
static void C_fcall f_17719(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word ab[34],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_17719,NULL,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_17722,a[2]=((C_word*)t0)[4],a[3]=((C_word*)t0)[5],a[4]=((C_word*)t0)[6],a[5]=((C_word*)t0)[7],a[6]=((C_word*)t0)[8],a[7]=((C_word*)t0)[9],tmp=(C_word)a,a+=8,tmp);
t3=((C_word*)((C_word*)t0)[3])[1];
if(C_truep(t3)){
t4=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_17751,a[2]=((C_word*)t0)[3],a[3]=t2,a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[4],a[6]=((C_word*)t0)[2],a[7]=((C_word*)t0)[7],tmp=(C_word)a,a+=8,tmp);
C_trace("ChickenBridge.scm: 369  token-unit-type=?");
f_15958(t4,((C_word*)((C_word*)t0)[3])[1],C_fix(21248));}
else{
t4=(C_word)C_a_i_list(&a,3,lf[91],((C_word*)((C_word*)t0)[7])[1],((C_word*)((C_word*)t0)[5])[1]);
t5=(C_word)C_a_i_list(&a,3,lf[12],((C_word*)((C_word*)t0)[7])[1],t4);
t6=C_mutate(((C_word *)((C_word*)t0)[5])+1,t5);
t7=t2;
f_17722(t7,t6);}}

/* k17749 in k17717 in k17714 in k17711 in k17708 in k17705 in k17698 in k17630 in k17533 in k17483 in sal-parse-stepping in k17468 in k17465 in k17462 in k17459 in k17456 in k17453 in k17450 in k17447 in k17444 in k17441 in k17438 in k17435 in k17432 in k17429 in k17426 in k17423 in k17420 in k17417 in k17414 in k17411 in k17408 in k17269 in k17266 in k17263 in k17260 in k17204 in k17201 in k17198 in k17195 in k17192 in k17189 in k17186 in k17183 in k15938 in k15869 in k15676 in k15673 in k15568 in k15517 in k7924 in k7921 in k5905 in k5612 in k5609 in k5605 in k5314 in k5311 in k5308 in k5305 */
static void C_ccall f_17751(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word ab[35],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_17751,2,t0,t1);}
if(C_truep(t1)){
t2=(C_word)C_a_i_list(&a,3,lf[333],((C_word*)((C_word*)t0)[7])[1],((C_word*)((C_word*)t0)[6])[1]);
t3=C_mutate(((C_word *)((C_word*)t0)[5])+1,t2);
t4=(C_word)C_a_i_list(&a,3,lf[91],((C_word*)((C_word*)t0)[7])[1],((C_word*)((C_word*)t0)[4])[1]);
t5=(C_word)C_a_i_list(&a,3,lf[12],((C_word*)((C_word*)t0)[7])[1],t4);
t6=C_mutate(((C_word *)((C_word*)t0)[4])+1,t5);
t7=((C_word*)t0)[3];
f_17722(t7,t6);}
else{
t2=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_17769,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],a[7]=((C_word*)t0)[7],tmp=(C_word)a,a+=8,tmp);
C_trace("ChickenBridge.scm: 369  token-unit-type=?");
f_15958(t2,((C_word*)((C_word*)t0)[2])[1],C_fix(23552));}}

/* k17767 in k17749 in k17717 in k17714 in k17711 in k17708 in k17705 in k17698 in k17630 in k17533 in k17483 in sal-parse-stepping in k17468 in k17465 in k17462 in k17459 in k17456 in k17453 in k17450 in k17447 in k17444 in k17441 in k17438 in k17435 in k17432 in k17429 in k17426 in k17423 in k17420 in k17417 in k17414 in k17411 in k17408 in k17269 in k17266 in k17263 in k17260 in k17204 in k17201 in k17198 in k17195 in k17192 in k17189 in k17186 in k17183 in k15938 in k15869 in k15676 in k15673 in k15568 in k15517 in k7924 in k7921 in k5905 in k5612 in k5609 in k5605 in k5314 in k5311 in k5308 in k5305 */
static void C_ccall f_17769(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word ab[35],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_17769,2,t0,t1);}
if(C_truep(t1)){
t2=(C_word)C_a_i_list(&a,3,lf[339],((C_word*)((C_word*)t0)[7])[1],((C_word*)((C_word*)t0)[6])[1]);
t3=C_mutate(((C_word *)((C_word*)t0)[5])+1,t2);
t4=(C_word)C_a_i_list(&a,3,lf[91],((C_word*)((C_word*)t0)[7])[1],((C_word*)((C_word*)t0)[4])[1]);
t5=(C_word)C_a_i_list(&a,3,lf[12],((C_word*)((C_word*)t0)[7])[1],t4);
t6=C_mutate(((C_word *)((C_word*)t0)[4])+1,t5);
t7=((C_word*)t0)[3];
f_17722(t7,t6);}
else{
t2=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_17787,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],a[7]=((C_word*)t0)[7],tmp=(C_word)a,a+=8,tmp);
C_trace("ChickenBridge.scm: 369  token-unit-type=?");
f_15958(t2,((C_word*)((C_word*)t0)[2])[1],C_fix(20992));}}

/* k17785 in k17767 in k17749 in k17717 in k17714 in k17711 in k17708 in k17705 in k17698 in k17630 in k17533 in k17483 in sal-parse-stepping in k17468 in k17465 in k17462 in k17459 in k17456 in k17453 in k17450 in k17447 in k17444 in k17441 in k17438 in k17435 in k17432 in k17429 in k17426 in k17423 in k17420 in k17417 in k17414 in k17411 in k17408 in k17269 in k17266 in k17263 in k17260 in k17204 in k17201 in k17198 in k17195 in k17192 in k17189 in k17186 in k17183 in k15938 in k15869 in k15676 in k15673 in k15568 in k15517 in k7924 in k7921 in k5905 in k5612 in k5609 in k5605 in k5314 in k5311 in k5308 in k5305 */
static void C_ccall f_17787(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word ab[34],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_17787,2,t0,t1);}
if(C_truep(t1)){
t2=(C_word)C_a_i_list(&a,3,lf[340],((C_word*)((C_word*)t0)[7])[1],((C_word*)((C_word*)t0)[6])[1]);
t3=C_mutate(((C_word *)((C_word*)t0)[5])+1,t2);
t4=(C_word)C_a_i_list(&a,3,lf[93],((C_word*)((C_word*)t0)[7])[1],((C_word*)((C_word*)t0)[4])[1]);
t5=(C_word)C_a_i_list(&a,3,lf[12],((C_word*)((C_word*)t0)[7])[1],t4);
t6=C_mutate(((C_word *)((C_word*)t0)[4])+1,t5);
t7=((C_word*)t0)[3];
f_17722(t7,t6);}
else{
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_17805,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
C_trace("ChickenBridge.scm: 369  token-unit-type=?");
f_15958(t2,((C_word*)((C_word*)t0)[2])[1],C_fix(21760));}}

/* k17803 in k17785 in k17767 in k17749 in k17717 in k17714 in k17711 in k17708 in k17705 in k17698 in k17630 in k17533 in k17483 in sal-parse-stepping in k17468 in k17465 in k17462 in k17459 in k17456 in k17453 in k17450 in k17447 in k17444 in k17441 in k17438 in k17435 in k17432 in k17429 in k17426 in k17423 in k17420 in k17417 in k17414 in k17411 in k17408 in k17269 in k17266 in k17263 in k17260 in k17204 in k17201 in k17198 in k17195 in k17192 in k17189 in k17186 in k17183 in k15938 in k15869 in k15676 in k15673 in k15568 in k15517 in k7924 in k7921 in k5905 in k5612 in k5609 in k5605 in k5314 in k5311 in k5308 in k5305 */
static void C_ccall f_17805(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word ab[27],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_17805,2,t0,t1);}
if(C_truep(t1)){
t2=(C_word)C_a_i_list(&a,3,lf[341],((C_word*)((C_word*)t0)[6])[1],((C_word*)((C_word*)t0)[5])[1]);
t3=C_mutate(((C_word *)((C_word*)t0)[4])+1,t2);
t4=(C_word)C_a_i_list(&a,3,lf[93],((C_word*)((C_word*)t0)[6])[1],((C_word*)((C_word*)t0)[3])[1]);
t5=(C_word)C_a_i_list(&a,3,lf[12],((C_word*)((C_word*)t0)[6])[1],t4);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_17722(t7,t6);}
else{
t2=((C_word*)t0)[2];
f_17722(t2,C_SCHEME_UNDEFINED);}}

/* k17720 in k17717 in k17714 in k17711 in k17708 in k17705 in k17698 in k17630 in k17533 in k17483 in sal-parse-stepping in k17468 in k17465 in k17462 in k17459 in k17456 in k17453 in k17450 in k17447 in k17444 in k17441 in k17438 in k17435 in k17432 in k17429 in k17426 in k17423 in k17420 in k17417 in k17414 in k17411 in k17408 in k17269 in k17266 in k17263 in k17260 in k17204 in k17201 in k17198 in k17195 in k17192 in k17189 in k17186 in k17183 in k15938 in k15869 in k15676 in k15673 in k15568 in k15517 in k7924 in k7921 in k5905 in k5612 in k5609 in k5605 in k5314 in k5311 in k5308 in k5305 */
static void C_fcall f_17722(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[22],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_17722,NULL,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_17726,a[2]=((C_word*)t0)[6],a[3]=((C_word*)t0)[7],tmp=(C_word)a,a+=4,tmp);
t3=(C_word)C_a_i_list(&a,5,((C_word*)((C_word*)t0)[5])[1],((C_word*)((C_word*)t0)[4])[1],C_SCHEME_FALSE,((C_word*)((C_word*)t0)[3])[1],((C_word*)((C_word*)t0)[2])[1]);
t4=(C_word)C_a_i_list(&a,1,t3);
C_trace("ChickenBridge.scm: 369  append");
t5=*((C_word*)lf[18]+1);
((C_proc4)C_retrieve_proc(t5))(4,t5,t2,((C_word*)((C_word*)t0)[7])[1],t4);}

/* k17724 in k17720 in k17717 in k17714 in k17711 in k17708 in k17705 in k17698 in k17630 in k17533 in k17483 in sal-parse-stepping in k17468 in k17465 in k17462 in k17459 in k17456 in k17453 in k17450 in k17447 in k17444 in k17441 in k17438 in k17435 in k17432 in k17429 in k17426 in k17423 in k17420 in k17417 in k17414 in k17411 in k17408 in k17269 in k17266 in k17263 in k17260 in k17204 in k17201 in k17198 in k17195 in k17192 in k17189 in k17186 in k17183 in k15938 in k15869 in k15676 in k15673 in k15568 in k15517 in k7924 in k7921 in k5905 in k5612 in k5609 in k5605 in k5314 in k5311 in k5308 in k5305 */
static void C_ccall f_17726(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[3])+1,t1);
t3=((C_word*)t0)[2];
f_17479(t3,t2);}

/* k17634 in k17630 in k17533 in k17483 in sal-parse-stepping in k17468 in k17465 in k17462 in k17459 in k17456 in k17453 in k17450 in k17447 in k17444 in k17441 in k17438 in k17435 in k17432 in k17429 in k17426 in k17423 in k17420 in k17417 in k17414 in k17411 in k17408 in k17269 in k17266 in k17263 in k17260 in k17204 in k17201 in k17198 in k17195 in k17192 in k17189 in k17186 in k17183 in k15938 in k15869 in k15676 in k15673 in k15568 in k15517 in k7924 in k7921 in k5905 in k5612 in k5609 in k5605 in k5314 in k5311 in k5308 in k5305 */
static void C_ccall f_17636(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_17636,2,t0,t1);}
t2=C_mutate(((C_word *)((C_word*)t0)[8])+1,t1);
t3=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_17640,a[2]=((C_word*)t0)[4],a[3]=((C_word*)t0)[5],a[4]=((C_word*)t0)[8],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t4=(C_word)C_i_cadddr(((C_word*)t0)[3]);
C_trace("ChickenBridge.scm: 369  emit");
f_16030(t3,t4,C_SCHEME_END_OF_LIST,((C_word*)t0)[2]);}

/* k17638 in k17634 in k17630 in k17533 in k17483 in sal-parse-stepping in k17468 in k17465 in k17462 in k17459 in k17456 in k17453 in k17450 in k17447 in k17444 in k17441 in k17438 in k17435 in k17432 in k17429 in k17426 in k17423 in k17420 in k17417 in k17414 in k17411 in k17408 in k17269 in k17266 in k17263 in k17260 in k17204 in k17201 in k17198 in k17195 in k17192 in k17189 in k17186 in k17183 in k15938 in k15869 in k15676 in k15673 in k15568 in k15517 in k7924 in k7921 in k5905 in k5612 in k5609 in k5605 in k5314 in k5311 in k5308 in k5305 */
static void C_ccall f_17640(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_17640,2,t0,t1);}
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_17644,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[5],tmp=(C_word)a,a+=7,tmp);
C_trace("ChickenBridge.scm: 369  gensym");
t4=C_retrieve(lf[26]);
((C_proc3)C_retrieve_proc(t4))(3,t4,t3,lf[338]);}

/* k17642 in k17638 in k17634 in k17630 in k17533 in k17483 in sal-parse-stepping in k17468 in k17465 in k17462 in k17459 in k17456 in k17453 in k17450 in k17447 in k17444 in k17441 in k17438 in k17435 in k17432 in k17429 in k17426 in k17423 in k17420 in k17417 in k17414 in k17411 in k17408 in k17269 in k17266 in k17263 in k17260 in k17204 in k17201 in k17198 in k17195 in k17192 in k17189 in k17186 in k17183 in k15938 in k15869 in k15676 in k15673 in k15568 in k15517 in k7924 in k7921 in k5905 in k5612 in k5609 in k5605 in k5314 in k5311 in k5308 in k5305 */
static void C_ccall f_17644(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word ab[72],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_17644,2,t0,t1);}
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=(C_word)C_a_i_list(&a,2,lf[15],((C_word*)((C_word*)t0)[6])[1]);
t4=(C_word)C_a_i_list(&a,3,lf[12],((C_word*)((C_word*)t0)[6])[1],t3);
t5=(C_word)C_a_i_list(&a,2,lf[3],((C_word*)((C_word*)t0)[6])[1]);
t6=(C_word)C_a_i_list(&a,5,((C_word*)((C_word*)t0)[6])[1],((C_word*)((C_word*)t0)[5])[1],C_SCHEME_FALSE,t4,t5);
t7=(C_word)C_a_i_list(&a,2,lf[8],((C_word*)((C_word*)t0)[6])[1]);
t8=(C_word)C_a_i_list(&a,3,lf[12],((C_word*)((C_word*)t0)[4])[1],t7);
t9=(C_word)C_a_i_list(&a,5,((C_word*)((C_word*)t0)[4])[1],C_SCHEME_FALSE,t8,C_SCHEME_FALSE,C_SCHEME_FALSE);
t10=(C_word)C_a_i_list(&a,2,t6,t9);
t11=C_mutate(((C_word *)((C_word*)t0)[3])+1,t10);
t12=((C_word*)t0)[2];
f_17479(t12,t11);}

/* k17537 in k17533 in k17483 in sal-parse-stepping in k17468 in k17465 in k17462 in k17459 in k17456 in k17453 in k17450 in k17447 in k17444 in k17441 in k17438 in k17435 in k17432 in k17429 in k17426 in k17423 in k17420 in k17417 in k17414 in k17411 in k17408 in k17269 in k17266 in k17263 in k17260 in k17204 in k17201 in k17198 in k17195 in k17192 in k17189 in k17186 in k17183 in k15938 in k15869 in k15676 in k15673 in k15568 in k15517 in k7924 in k7921 in k5905 in k5612 in k5609 in k5605 in k5314 in k5311 in k5308 in k5305 */
static void C_ccall f_17539(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[11],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_17539,2,t0,t1);}
t2=C_mutate(((C_word *)((C_word*)t0)[10])+1,t1);
t3=(*a=C_CLOSURE_TYPE|10,a[1]=(C_word)f_17543,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[10],a[7]=((C_word*)t0)[6],a[8]=((C_word*)t0)[7],a[9]=((C_word*)t0)[8],a[10]=((C_word*)t0)[9],tmp=(C_word)a,a+=11,tmp);
t4=(C_word)C_i_cadddr(((C_word*)t0)[2]);
C_trace("ChickenBridge.scm: 369  emit");
f_16030(t3,t4,C_SCHEME_END_OF_LIST,((C_word*)t0)[3]);}

/* k17541 in k17537 in k17533 in k17483 in sal-parse-stepping in k17468 in k17465 in k17462 in k17459 in k17456 in k17453 in k17450 in k17447 in k17444 in k17441 in k17438 in k17435 in k17432 in k17429 in k17426 in k17423 in k17420 in k17417 in k17414 in k17411 in k17408 in k17269 in k17266 in k17263 in k17260 in k17204 in k17201 in k17198 in k17195 in k17192 in k17189 in k17186 in k17183 in k15938 in k15869 in k15676 in k15673 in k15568 in k15517 in k7924 in k7921 in k5905 in k5612 in k5609 in k5605 in k5314 in k5311 in k5308 in k5305 */
static void C_ccall f_17543(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[10],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_17543,2,t0,t1);}
t2=C_mutate(((C_word *)((C_word*)t0)[10])+1,t1);
t3=(*a=C_CLOSURE_TYPE|9,a[1]=(C_word)f_17547,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[10],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],a[7]=((C_word*)t0)[7],a[8]=((C_word*)t0)[8],a[9]=((C_word*)t0)[9],tmp=(C_word)a,a+=10,tmp);
C_trace("ChickenBridge.scm: 369  fifth");
t4=C_retrieve(lf[47]);
((C_proc3)C_retrieve_proc(t4))(3,t4,t3,((C_word*)t0)[2]);}

/* k17545 in k17541 in k17537 in k17533 in k17483 in sal-parse-stepping in k17468 in k17465 in k17462 in k17459 in k17456 in k17453 in k17450 in k17447 in k17444 in k17441 in k17438 in k17435 in k17432 in k17429 in k17426 in k17423 in k17420 in k17417 in k17414 in k17411 in k17408 in k17269 in k17266 in k17263 in k17260 in k17204 in k17201 in k17198 in k17195 in k17192 in k17189 in k17186 in k17183 in k15938 in k15869 in k15676 in k15673 in k15568 in k15517 in k7924 in k7921 in k5905 in k5612 in k5609 in k5605 in k5314 in k5311 in k5308 in k5305 */
static void C_ccall f_17547(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word ab[24],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_17547,2,t0,t1);}
t2=C_mutate(((C_word *)((C_word*)t0)[9])+1,t1);
t3=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_17550,a[2]=((C_word*)t0)[5],a[3]=((C_word*)t0)[6],a[4]=((C_word*)t0)[7],a[5]=((C_word*)t0)[8],tmp=(C_word)a,a+=6,tmp);
if(C_truep(((C_word*)((C_word*)t0)[9])[1])){
t4=(*a=C_CLOSURE_TYPE|8,a[1]=(C_word)f_17566,a[2]=t3,a[3]=((C_word*)t0)[8],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[3],a[6]=((C_word*)t0)[6],a[7]=((C_word*)t0)[4],a[8]=((C_word*)t0)[9],tmp=(C_word)a,a+=9,tmp);
t5=(C_word)C_i_cadr(((C_word*)((C_word*)t0)[9])[1]);
C_trace("ChickenBridge.scm: 369  emit");
f_16030(t4,t5,C_SCHEME_END_OF_LIST,((C_word*)t0)[2]);}
else{
t4=(C_word)C_a_i_list(&a,3,lf[12],((C_word*)((C_word*)t0)[6])[1],((C_word*)((C_word*)t0)[3])[1]);
t5=C_mutate(((C_word *)((C_word*)t0)[5])+1,t4);
t6=t3;
f_17550(t6,t5);}}

/* k17564 in k17545 in k17541 in k17537 in k17533 in k17483 in sal-parse-stepping in k17468 in k17465 in k17462 in k17459 in k17456 in k17453 in k17450 in k17447 in k17444 in k17441 in k17438 in k17435 in k17432 in k17429 in k17426 in k17423 in k17420 in k17417 in k17414 in k17411 in k17408 in k17269 in k17266 in k17263 in k17260 in k17204 in k17201 in k17198 in k17195 in k17192 in k17189 in k17186 in k17183 in k15938 in k15869 in k15676 in k15673 in k15568 in k15517 in k7924 in k7921 in k5905 in k5612 in k5609 in k5605 in k5314 in k5311 in k5308 in k5305 */
static void C_ccall f_17566(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_17566,2,t0,t1);}
t2=C_mutate(((C_word *)((C_word*)t0)[8])+1,t1);
t3=(*a=C_CLOSURE_TYPE|8,a[1]=(C_word)f_17570,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[8],a[6]=((C_word*)t0)[5],a[7]=((C_word*)t0)[6],a[8]=((C_word*)t0)[7],tmp=(C_word)a,a+=9,tmp);
C_trace("ChickenBridge.scm: 369  gensym");
t4=C_retrieve(lf[26]);
((C_proc3)C_retrieve_proc(t4))(3,t4,t3,lf[337]);}

/* k17568 in k17564 in k17545 in k17541 in k17537 in k17533 in k17483 in sal-parse-stepping in k17468 in k17465 in k17462 in k17459 in k17456 in k17453 in k17450 in k17447 in k17444 in k17441 in k17438 in k17435 in k17432 in k17429 in k17426 in k17423 in k17420 in k17417 in k17414 in k17411 in k17408 in k17269 in k17266 in k17263 in k17260 in k17204 in k17201 in k17198 in k17195 in k17192 in k17189 in k17186 in k17183 in k15938 in k15869 in k15676 in k15673 in k15568 in k15517 in k7924 in k7921 in k5905 in k5612 in k5609 in k5605 in k5314 in k5311 in k5308 in k5305 */
static void C_ccall f_17570(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word ab[66],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_17570,2,t0,t1);}
t2=C_mutate(((C_word *)((C_word*)t0)[8])+1,t1);
t3=(C_word)C_a_i_list(&a,3,lf[12],((C_word*)((C_word*)t0)[8])[1],C_SCHEME_FALSE);
t4=(C_word)C_a_i_list(&a,3,lf[12],((C_word*)((C_word*)t0)[7])[1],((C_word*)((C_word*)t0)[6])[1]);
t5=(C_word)C_a_i_list(&a,3,lf[336],t3,t4);
t6=(C_word)C_a_i_list(&a,3,lf[12],((C_word*)((C_word*)t0)[7])[1],((C_word*)((C_word*)t0)[5])[1]);
t7=(C_word)C_a_i_list(&a,4,lf[20],((C_word*)((C_word*)t0)[8])[1],t5,t6);
t8=C_mutate(((C_word *)((C_word*)t0)[4])+1,t7);
t9=(C_word)C_a_i_list(&a,5,((C_word*)((C_word*)t0)[8])[1],C_SCHEME_TRUE,C_SCHEME_FALSE,C_SCHEME_FALSE,C_SCHEME_FALSE);
t10=(C_word)C_a_i_list(&a,1,t9);
t11=C_mutate(((C_word *)((C_word*)t0)[3])+1,t10);
t12=((C_word*)t0)[2];
f_17550(t12,t11);}

/* k17548 in k17545 in k17541 in k17537 in k17533 in k17483 in sal-parse-stepping in k17468 in k17465 in k17462 in k17459 in k17456 in k17453 in k17450 in k17447 in k17444 in k17441 in k17438 in k17435 in k17432 in k17429 in k17426 in k17423 in k17420 in k17417 in k17414 in k17411 in k17408 in k17269 in k17266 in k17263 in k17260 in k17204 in k17201 in k17198 in k17195 in k17192 in k17189 in k17186 in k17183 in k15938 in k15869 in k15676 in k15673 in k15568 in k15517 in k7924 in k7921 in k5905 in k5612 in k5609 in k5605 in k5314 in k5311 in k5308 in k5305 */
static void C_fcall f_17550(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[22],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_17550,NULL,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_17554,a[2]=((C_word*)t0)[4],a[3]=((C_word*)t0)[5],tmp=(C_word)a,a+=4,tmp);
t3=(C_word)C_a_i_list(&a,5,((C_word*)((C_word*)t0)[3])[1],C_SCHEME_FALSE,((C_word*)((C_word*)t0)[2])[1],C_SCHEME_FALSE,C_SCHEME_FALSE);
t4=(C_word)C_a_i_list(&a,1,t3);
C_trace("ChickenBridge.scm: 369  append");
t5=*((C_word*)lf[18]+1);
((C_proc4)C_retrieve_proc(t5))(4,t5,t2,((C_word*)((C_word*)t0)[5])[1],t4);}

/* k17552 in k17548 in k17545 in k17541 in k17537 in k17533 in k17483 in sal-parse-stepping in k17468 in k17465 in k17462 in k17459 in k17456 in k17453 in k17450 in k17447 in k17444 in k17441 in k17438 in k17435 in k17432 in k17429 in k17426 in k17423 in k17420 in k17417 in k17414 in k17411 in k17408 in k17269 in k17266 in k17263 in k17260 in k17204 in k17201 in k17198 in k17195 in k17192 in k17189 in k17186 in k17183 in k15938 in k15869 in k15676 in k15673 in k15568 in k15517 in k7924 in k7921 in k5905 in k5612 in k5609 in k5605 in k5314 in k5311 in k5308 in k5305 */
static void C_ccall f_17554(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[3])+1,t1);
t3=((C_word*)t0)[2];
f_17479(t3,t2);}

/* k17487 in k17483 in sal-parse-stepping in k17468 in k17465 in k17462 in k17459 in k17456 in k17453 in k17450 in k17447 in k17444 in k17441 in k17438 in k17435 in k17432 in k17429 in k17426 in k17423 in k17420 in k17417 in k17414 in k17411 in k17408 in k17269 in k17266 in k17263 in k17260 in k17204 in k17201 in k17198 in k17195 in k17192 in k17189 in k17186 in k17183 in k15938 in k15869 in k15676 in k15673 in k15568 in k15517 in k7924 in k7921 in k5905 in k5612 in k5609 in k5605 in k5314 in k5311 in k5308 in k5305 */
static void C_ccall f_17489(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_17489,2,t0,t1);}
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_17493,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[6],a[5]=((C_word*)t0)[4],a[6]=((C_word*)t0)[5],tmp=(C_word)a,a+=7,tmp);
C_trace("ChickenBridge.scm: 369  gensym");
t4=C_retrieve(lf[26]);
((C_proc3)C_retrieve_proc(t4))(3,t4,t3,lf[335]);}

/* k17491 in k17487 in k17483 in sal-parse-stepping in k17468 in k17465 in k17462 in k17459 in k17456 in k17453 in k17450 in k17447 in k17444 in k17441 in k17438 in k17435 in k17432 in k17429 in k17426 in k17423 in k17420 in k17417 in k17414 in k17411 in k17408 in k17269 in k17266 in k17263 in k17260 in k17204 in k17201 in k17198 in k17195 in k17192 in k17189 in k17186 in k17183 in k15938 in k15869 in k15676 in k15673 in k15568 in k15517 in k7924 in k7921 in k5905 in k5612 in k5609 in k5605 in k5314 in k5311 in k5308 in k5305 */
static void C_ccall f_17493(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_17493,2,t0,t1);}
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_17497,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[6],a[5]=((C_word*)t0)[4],a[6]=((C_word*)t0)[5],tmp=(C_word)a,a+=7,tmp);
C_trace("ChickenBridge.scm: 369  gensym");
t4=C_retrieve(lf[26]);
((C_proc3)C_retrieve_proc(t4))(3,t4,t3,lf[334]);}

/* k17495 in k17491 in k17487 in k17483 in sal-parse-stepping in k17468 in k17465 in k17462 in k17459 in k17456 in k17453 in k17450 in k17447 in k17444 in k17441 in k17438 in k17435 in k17432 in k17429 in k17426 in k17423 in k17420 in k17417 in k17414 in k17411 in k17408 in k17269 in k17266 in k17263 in k17260 in k17204 in k17201 in k17198 in k17195 in k17192 in k17189 in k17186 in k17183 in k15938 in k15869 in k15676 in k15673 in k15568 in k15517 in k7924 in k7921 in k5905 in k5612 in k5609 in k5605 in k5314 in k5311 in k5308 in k5305 */
static void C_ccall f_17497(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word ab[63],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_17497,2,t0,t1);}
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=(C_word)C_a_i_list(&a,5,((C_word*)((C_word*)t0)[6])[1],((C_word*)((C_word*)t0)[5])[1],C_SCHEME_FALSE,C_SCHEME_FALSE,C_SCHEME_FALSE);
t4=(C_word)C_a_i_list(&a,3,lf[91],((C_word*)((C_word*)t0)[4])[1],C_fix(1));
t5=(C_word)C_a_i_list(&a,3,lf[12],((C_word*)((C_word*)t0)[4])[1],t4);
t6=(C_word)C_a_i_list(&a,3,lf[333],((C_word*)((C_word*)t0)[4])[1],((C_word*)((C_word*)t0)[6])[1]);
t7=(C_word)C_a_i_list(&a,5,((C_word*)((C_word*)t0)[4])[1],C_fix(0),C_SCHEME_FALSE,t5,t6);
t8=(C_word)C_a_i_list(&a,2,t3,t7);
t9=C_mutate(((C_word *)((C_word*)t0)[3])+1,t8);
t10=((C_word*)t0)[2];
f_17479(t10,t9);}

/* k17477 in sal-parse-stepping in k17468 in k17465 in k17462 in k17459 in k17456 in k17453 in k17450 in k17447 in k17444 in k17441 in k17438 in k17435 in k17432 in k17429 in k17426 in k17423 in k17420 in k17417 in k17414 in k17411 in k17408 in k17269 in k17266 in k17263 in k17260 in k17204 in k17201 in k17198 in k17195 in k17192 in k17189 in k17186 in k17183 in k15938 in k15869 in k15676 in k15673 in k15568 in k15517 in k7924 in k7921 in k5905 in k5612 in k5609 in k5605 in k5314 in k5311 in k5308 in k5305 */
static void C_fcall f_17479(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 369  make-parse-unit");
f_15873(((C_word*)t0)[3],C_fix(33024),((C_word*)((C_word*)t0)[2])[1],C_SCHEME_FALSE);}

/* inf->pre in k17269 in k17266 in k17263 in k17260 in k17204 in k17201 in k17198 in k17195 in k17192 in k17189 in k17186 in k17183 in k15938 in k15869 in k15676 in k15673 in k15568 in k15517 in k7924 in k7921 in k5905 in k5612 in k5609 in k5605 in k5314 in k5311 in k5308 in k5305 */
static void C_fcall f_17294(C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word t14;
C_word t15;
C_word ab[21],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_17294,NULL,2,t1,t2);}
t3=(*a=C_VECTOR_TYPE|1,a[1]=t2,tmp=(C_word)a,a+=2,tmp);
t4=C_SCHEME_FALSE;
t5=(*a=C_VECTOR_TYPE|1,a[1]=t4,tmp=(C_word)a,a+=2,tmp);
t6=C_SCHEME_FALSE;
t7=(*a=C_VECTOR_TYPE|1,a[1]=t6,tmp=(C_word)a,a+=2,tmp);
t8=C_SCHEME_FALSE;
t9=(*a=C_VECTOR_TYPE|1,a[1]=t8,tmp=(C_word)a,a+=2,tmp);
t10=C_SCHEME_FALSE;
t11=(*a=C_VECTOR_TYPE|1,a[1]=t10,tmp=(C_word)a,a+=2,tmp);
if(C_truep((C_word)C_i_pairp(((C_word*)t3)[1]))){
t12=C_SCHEME_UNDEFINED;
t13=(*a=C_VECTOR_TYPE|1,a[1]=t12,tmp=(C_word)a,a+=2,tmp);
t14=C_set_block_item(t13,0,(*a=C_CLOSURE_TYPE|8,a[1]=(C_word)f_17306,a[2]=t9,a[3]=t13,a[4]=t11,a[5]=t5,a[6]=t7,a[7]=t3,a[8]=((C_word)li259),tmp=(C_word)a,a+=9,tmp));
t15=((C_word*)t13)[1];
f_17306(t15,t1);}
else{
t12=t1;
((C_proc2)(void*)(*((C_word*)t12+1)))(2,t12,((C_word*)t3)[1]);}}

/* do2611 in inf->pre in k17269 in k17266 in k17263 in k17260 in k17204 in k17201 in k17198 in k17195 in k17192 in k17189 in k17186 in k17183 in k15938 in k15869 in k15676 in k15673 in k15568 in k15517 in k7924 in k7921 in k5905 in k5612 in k5609 in k5605 in k5314 in k5311 in k5308 in k5305 */
static void C_fcall f_17306(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_17306,NULL,2,t0,t1);}
if(C_truep((C_word)C_i_nullp(((C_word*)((C_word*)t0)[7])[1]))){
t2=t1;
((C_proc2)(void*)(*((C_word*)t2+1)))(2,t2,((C_word*)((C_word*)t0)[6])[1]);}
else{
t2=(C_word)C_i_car(((C_word*)((C_word*)t0)[7])[1]);
t3=C_mutate(((C_word *)((C_word*)t0)[5])+1,t2);
t4=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[7])[1]);
t5=C_mutate(((C_word *)((C_word*)t0)[7])+1,t4);
t6=(*a=C_CLOSURE_TYPE|8,a[1]=(C_word)f_17325,a[2]=((C_word*)t0)[5],a[3]=((C_word*)t0)[6],a[4]=((C_word*)t0)[2],a[5]=((C_word*)t0)[7],a[6]=t1,a[7]=((C_word*)t0)[3],a[8]=((C_word*)t0)[4],tmp=(C_word)a,a+=9,tmp);
C_trace("ChickenBridge.scm: 369  is-op?");
f_17273(t6,((C_word*)((C_word*)t0)[5])[1]);}}

/* k17323 in do2611 in inf->pre in k17269 in k17266 in k17263 in k17260 in k17204 in k17201 in k17198 in k17195 in k17192 in k17189 in k17186 in k17183 in k15938 in k15869 in k15676 in k15673 in k15568 in k15517 in k7924 in k7921 in k5905 in k5612 in k5609 in k5605 in k5314 in k5311 in k5308 in k5305 */
static void C_ccall f_17325(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word ab[15],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_17325,2,t0,t1);}
t2=C_mutate(((C_word *)((C_word*)t0)[8])+1,t1);
t3=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_17328,a[2]=((C_word*)t0)[6],a[3]=((C_word*)t0)[7],tmp=(C_word)a,a+=4,tmp);
if(C_truep((C_word)C_i_numberp(((C_word*)((C_word*)t0)[8])[1]))){
t4=C_SCHEME_UNDEFINED;
t5=(*a=C_VECTOR_TYPE|1,a[1]=t4,tmp=(C_word)a,a+=2,tmp);
t6=C_set_block_item(t5,0,(*a=C_CLOSURE_TYPE|8,a[1]=(C_word)f_17343,a[2]=((C_word*)t0)[8],a[3]=t5,a[4]=((C_word*)t0)[2],a[5]=((C_word*)t0)[3],a[6]=((C_word*)t0)[4],a[7]=((C_word*)t0)[5],a[8]=((C_word)li258),tmp=(C_word)a,a+=9,tmp));
t7=((C_word*)t5)[1];
f_17343(t7,t3,C_SCHEME_FALSE,C_SCHEME_TRUE,C_SCHEME_END_OF_LIST);}
else{
t4=C_mutate(((C_word *)((C_word*)t0)[3])+1,((C_word*)((C_word*)t0)[2])[1]);
t5=t3;
f_17328(2,t5,t4);}}

/* do2613 in k17323 in do2611 in inf->pre in k17269 in k17266 in k17263 in k17260 in k17204 in k17201 in k17198 in k17195 in k17192 in k17189 in k17186 in k17183 in k15938 in k15869 in k15676 in k15673 in k15568 in k15517 in k7924 in k7921 in k5905 in k5612 in k5609 in k5605 in k5314 in k5311 in k5308 in k5305 */
static void C_fcall f_17343(C_word t0,C_word t1,C_word t2,C_word t3,C_word t4){
C_word tmp;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word t14;
C_word ab[24],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_17343,NULL,5,t0,t1,t2,t3,t4);}
t5=(*a=C_VECTOR_TYPE|1,a[1]=t2,tmp=(C_word)a,a+=2,tmp);
t6=(*a=C_VECTOR_TYPE|1,a[1]=t3,tmp=(C_word)a,a+=2,tmp);
t7=(*a=C_VECTOR_TYPE|1,a[1]=t4,tmp=(C_word)a,a+=2,tmp);
t8=(C_word)C_i_nullp(((C_word*)((C_word*)t0)[7])[1]);
t9=(C_truep(t8)?t8:(C_word)C_i_not(((C_word*)t6)[1]));
if(C_truep(t9)){
t10=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_17357,a[2]=t1,a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],tmp=(C_word)a,a+=6,tmp);
t11=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_17371,a[2]=t10,tmp=(C_word)a,a+=3,tmp);
C_trace("ChickenBridge.scm: 369  reverse");
t12=*((C_word*)lf[164]+1);
((C_proc3)C_retrieve_proc(t12))(3,t12,t11,((C_word*)t7)[1]);}
else{
t10=(*a=C_CLOSURE_TYPE|8,a[1]=(C_word)f_17375,a[2]=((C_word*)t0)[7],a[3]=((C_word*)t0)[2],a[4]=t7,a[5]=t6,a[6]=t1,a[7]=((C_word*)t0)[3],a[8]=t5,tmp=(C_word)a,a+=9,tmp);
t11=(C_word)C_i_car(((C_word*)((C_word*)t0)[7])[1]);
C_trace("ChickenBridge.scm: 369  is-op?");
f_17273(t10,t11);}}

/* k17373 in do2613 in k17323 in do2611 in inf->pre in k17269 in k17266 in k17263 in k17260 in k17204 in k17201 in k17198 in k17195 in k17192 in k17189 in k17186 in k17183 in k15938 in k15869 in k15676 in k15673 in k15568 in k15517 in k7924 in k7921 in k5905 in k5612 in k5609 in k5605 in k5314 in k5311 in k5308 in k5305 */
static void C_ccall f_17375(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word ab[10],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_17375,2,t0,t1);}
t2=C_mutate(((C_word *)((C_word*)t0)[8])+1,t1);
t3=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_17378,a[2]=((C_word*)t0)[4],a[3]=((C_word*)t0)[5],a[4]=((C_word*)t0)[8],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t4=(C_truep(((C_word*)((C_word*)t0)[8])[1])?(C_word)C_i_less_or_equalp(((C_word*)((C_word*)t0)[8])[1],((C_word*)((C_word*)t0)[3])[1]):C_SCHEME_FALSE);
if(C_truep(t4)){
t5=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_FALSE);
t6=t3;
f_17378(t6,t5);}
else{
t5=(C_word)C_i_car(((C_word*)((C_word*)t0)[2])[1]);
t6=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[2])[1]);
t7=C_mutate(((C_word *)((C_word*)t0)[2])+1,t6);
t8=(C_word)C_a_i_cons(&a,2,t5,((C_word*)((C_word*)t0)[4])[1]);
t9=C_mutate(((C_word *)((C_word*)t0)[4])+1,t8);
t10=t3;
f_17378(t10,t9);}}

/* k17376 in k17373 in do2613 in k17323 in do2611 in inf->pre in k17269 in k17266 in k17263 in k17260 in k17204 in k17201 in k17198 in k17195 in k17192 in k17189 in k17186 in k17183 in k15938 in k15869 in k15676 in k15673 in k15568 in k15517 in k7924 in k7921 in k5905 in k5612 in k5609 in k5605 in k5314 in k5311 in k5308 in k5305 */
static void C_fcall f_17378(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
t2=((C_word*)((C_word*)t0)[6])[1];
f_17343(t2,((C_word*)t0)[5],((C_word*)((C_word*)t0)[4])[1],((C_word*)((C_word*)t0)[3])[1],((C_word*)((C_word*)t0)[2])[1]);}

/* k17369 in do2613 in k17323 in do2611 in inf->pre in k17269 in k17266 in k17263 in k17260 in k17204 in k17201 in k17198 in k17195 in k17192 in k17189 in k17186 in k17183 in k15938 in k15869 in k15676 in k15673 in k15568 in k15517 in k7924 in k7921 in k5905 in k5612 in k5609 in k5605 in k5314 in k5311 in k5308 in k5305 */
static void C_ccall f_17371(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 369  inf->pre");
f_17294(((C_word*)t0)[2],t1);}

/* k17355 in do2613 in k17323 in do2611 in inf->pre in k17269 in k17266 in k17263 in k17260 in k17204 in k17201 in k17198 in k17195 in k17192 in k17189 in k17186 in k17183 in k15938 in k15869 in k15676 in k15673 in k15568 in k15517 in k7924 in k7921 in k5905 in k5612 in k5609 in k5605 in k5314 in k5311 in k5308 in k5305 */
static void C_ccall f_17357(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[18],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_17357,2,t0,t1);}
t2=C_mutate(((C_word *)((C_word*)t0)[5])+1,t1);
t3=(C_truep(((C_word*)((C_word*)t0)[4])[1])?(C_word)C_a_i_list(&a,3,((C_word*)((C_word*)t0)[3])[1],((C_word*)((C_word*)t0)[4])[1],((C_word*)((C_word*)t0)[5])[1]):(C_word)C_a_i_list(&a,3,((C_word*)((C_word*)t0)[3])[1],((C_word*)((C_word*)t0)[5])[1],C_SCHEME_FALSE));
t4=C_mutate(((C_word *)((C_word*)t0)[4])+1,t3);
t5=((C_word*)t0)[2];
((C_proc2)(void*)(*((C_word*)t5+1)))(2,t5,t4);}

/* k17326 in k17323 in do2611 in inf->pre in k17269 in k17266 in k17263 in k17260 in k17204 in k17201 in k17198 in k17195 in k17192 in k17189 in k17186 in k17183 in k15938 in k15869 in k15676 in k15673 in k15568 in k15517 in k7924 in k7921 in k5905 in k5612 in k5609 in k5605 in k5314 in k5311 in k5308 in k5305 */
static void C_ccall f_17328(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
t2=((C_word*)((C_word*)t0)[3])[1];
f_17306(t2,((C_word*)t0)[2]);}

/* is-op? in k17269 in k17266 in k17263 in k17260 in k17204 in k17201 in k17198 in k17195 in k17192 in k17189 in k17186 in k17183 in k15938 in k15869 in k15676 in k15673 in k15568 in k15517 in k7924 in k7921 in k5905 in k5612 in k5609 in k5605 in k5314 in k5311 in k5308 in k5305 */
static void C_fcall f_17273(C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word ab[4],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_17273,NULL,2,t1,t2);}
t3=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_17280,a[2]=t2,a[3]=t1,tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 369  token-unit?");
f_15942(t3,t2);}

/* k17278 in is-op? in k17269 in k17266 in k17263 in k17260 in k17204 in k17201 in k17198 in k17195 in k17192 in k17189 in k17186 in k17183 in k15938 in k15869 in k15676 in k15673 in k15568 in k15517 in k7924 in k7921 in k5905 in k5612 in k5609 in k5605 in k5314 in k5311 in k5308 in k5305 */
static void C_ccall f_17280(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[3],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_17280,2,t0,t1);}
if(C_truep(t1)){
t2=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_17283,a[2]=((C_word*)t0)[3],tmp=(C_word)a,a+=3,tmp);
C_trace("ChickenBridge.scm: 369  parse-unit-type");
f_15894(t2,((C_word*)t0)[2]);}
else{
t2=((C_word*)t0)[3];
((C_proc2)(void*)(*((C_word*)t2+1)))(2,t2,C_SCHEME_FALSE);}}

/* k17281 in k17278 in is-op? in k17269 in k17266 in k17263 in k17260 in k17204 in k17201 in k17198 in k17195 in k17192 in k17189 in k17186 in k17183 in k15938 in k15869 in k15676 in k15673 in k15568 in k15517 in k7924 in k7921 in k5905 in k5612 in k5609 in k5605 in k5314 in k5311 in k5308 in k5305 */
static void C_ccall f_17283(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[4],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_17283,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_17289,a[2]=t1,a[3]=((C_word*)t0)[2],tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 369  SalOpType?");
f_17050(t2,t1);}

/* k17287 in k17281 in k17278 in is-op? in k17269 in k17266 in k17263 in k17260 in k17204 in k17201 in k17198 in k17195 in k17192 in k17189 in k17186 in k17183 in k15938 in k15869 in k15676 in k15673 in k15568 in k15517 in k7924 in k7921 in k5905 in k5612 in k5609 in k5605 in k5314 in k5311 in k5308 in k5305 */
static void C_ccall f_17289(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[4],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_17289,2,t0,t1);}
if(C_truep(t1)){
t2=((C_word*)t0)[3];
t3=((C_word*)t0)[2];
t4=t2;
((C_proc2)(void*)(*((C_word*)t4+1)))(2,t4,(C_word)C_a_i_bitwise_and(&a,2,t3,C_fix(255)));}
else{
t2=((C_word*)t0)[3];
((C_proc2)(void*)(*((C_word*)t2+1)))(2,t2,C_SCHEME_FALSE);}}

/* remove-token-type in k17204 in k17201 in k17198 in k17195 in k17192 in k17189 in k17186 in k17183 in k15938 in k15869 in k15676 in k15673 in k15568 in k15517 in k7924 in k7921 in k5905 in k5612 in k5609 in k5605 in k5314 in k5311 in k5308 in k5305 */
static void C_fcall f_17208(C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word ab[14],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_17208,NULL,3,t1,t2,t3);}
t4=(C_word)C_a_i_list(&a,1,C_SCHEME_TRUE);
t5=t4;
t6=(*a=C_VECTOR_TYPE|1,a[1]=t5,tmp=(C_word)a,a+=2,tmp);
t7=C_SCHEME_UNDEFINED;
t8=(*a=C_VECTOR_TYPE|1,a[1]=t7,tmp=(C_word)a,a+=2,tmp);
t9=C_set_block_item(t8,0,(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_17217,a[2]=t3,a[3]=t6,a[4]=t8,a[5]=t4,a[6]=((C_word)li255),tmp=(C_word)a,a+=7,tmp));
t10=((C_word*)t8)[1];
f_17217(t10,t1,t2);}

/* do2577 in remove-token-type in k17204 in k17201 in k17198 in k17195 in k17192 in k17189 in k17186 in k17183 in k15938 in k15869 in k15676 in k15673 in k15568 in k15517 in k7924 in k7921 in k5905 in k5612 in k5609 in k5605 in k5314 in k5311 in k5308 in k5305 */
static void C_fcall f_17217(C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[10],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_17217,NULL,3,t0,t1,t2);}
if(C_truep((C_word)C_i_nullp(t2))){
t3=t1;
((C_proc2)(void*)(*((C_word*)t3+1)))(2,t3,(C_word)C_i_cdr(((C_word*)t0)[5]));}
else{
t3=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_17230,a[2]=t1,a[3]=((C_word*)t0)[4],a[4]=t2,tmp=(C_word)a,a+=5,tmp);
t4=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_17240,a[2]=((C_word*)t0)[3],a[3]=t2,a[4]=t3,tmp=(C_word)a,a+=5,tmp);
t5=(C_word)C_i_car(t2);
C_trace("ChickenBridge.scm: 369  token-unit-type=?");
f_15958(t4,t5,((C_word*)t0)[2]);}}

/* k17238 in do2577 in remove-token-type in k17204 in k17201 in k17198 in k17195 in k17192 in k17189 in k17186 in k17183 in k15938 in k15869 in k15676 in k15673 in k15568 in k15517 in k7924 in k7921 in k5905 in k5612 in k5609 in k5605 in k5314 in k5311 in k5308 in k5305 */
static void C_ccall f_17240(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word ab[3],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_17240,2,t0,t1);}
if(C_truep(t1)){
t2=((C_word*)t0)[4];
f_17230(t2,C_SCHEME_FALSE);}
else{
t2=(C_word)C_i_car(((C_word*)t0)[3]);
t3=(C_word)C_a_i_list(&a,1,t2);
t4=(C_word)C_i_set_cdr(((C_word*)((C_word*)t0)[2])[1],t3);
t5=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[2])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[2])+1,t5);
t7=((C_word*)t0)[4];
f_17230(t7,t6);}}

/* k17228 in do2577 in remove-token-type in k17204 in k17201 in k17198 in k17195 in k17192 in k17189 in k17186 in k17183 in k15938 in k15869 in k15676 in k15673 in k15568 in k15517 in k7924 in k7921 in k5905 in k5612 in k5609 in k5605 in k5314 in k5311 in k5308 in k5305 */
static void C_fcall f_17230(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word *a;
t2=(C_word)C_i_cdr(((C_word*)t0)[4]);
t3=((C_word*)((C_word*)t0)[3])[1];
f_17217(t3,((C_word*)t0)[2],t2);}

/* SalType=? in k15938 in k15869 in k15676 in k15673 in k15568 in k15517 in k7924 in k7921 in k5905 in k5612 in k5609 in k5605 in k5314 in k5311 in k5308 in k5305 */
static void C_fcall f_17164(C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word t6;
C_word ab[8],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_17164,NULL,3,t1,t2,t3);}
t4=(C_word)C_a_i_arithmetic_shift(&a,2,t2,C_fix(-8));
t5=(C_word)C_a_i_arithmetic_shift(&a,2,t3,C_fix(-8));
t6=t1;
((C_proc2)(void*)(*((C_word*)t6+1)))(2,t6,(C_word)C_i_nequalp(t4,t5));}

/* SalRuleType? in k15938 in k15869 in k15676 in k15673 in k15568 in k15517 in k7924 in k7921 in k5905 in k5612 in k5609 in k5605 in k5314 in k5311 in k5308 in k5305 */
static void C_fcall f_17152(C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word *a;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_17152,NULL,2,t1,t2);}
t3=(C_word)C_i_lessp(C_fix(25600),t2);
t4=t1;
((C_proc2)(void*)(*((C_word*)t4+1)))(2,t4,(C_truep(t3)?(C_word)C_i_lessp(t2,C_fix(38400)):C_SCHEME_FALSE));}

/* SalOpType? in k15938 in k15869 in k15676 in k15673 in k15568 in k15517 in k7924 in k7921 in k5905 in k5612 in k5609 in k5605 in k5314 in k5311 in k5308 in k5305 */
static void C_fcall f_17050(C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word *a;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_17050,NULL,2,t1,t2);}
t3=(C_word)C_i_lessp(C_fix(6656),t2);
t4=t1;
((C_proc2)(void*)(*((C_word*)t4+1)))(2,t4,(C_truep(t3)?(C_word)C_i_lessp(t2,C_fix(11520)):C_SCHEME_FALSE));}

/* SalTokenType? in k15938 in k15869 in k15676 in k15673 in k15568 in k15517 in k7924 in k7921 in k5905 in k5612 in k5609 in k5605 in k5314 in k5311 in k5308 in k5305 */
static void C_fcall f_17002(C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word *a;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_17002,NULL,2,t1,t2);}
t3=(C_word)C_i_lessp(C_fix(0),t2);
t4=t1;
((C_proc2)(void*)(*((C_word*)t4+1)))(2,t4,(C_truep(t3)?(C_word)C_i_lessp(t2,C_fix(25600)):C_SCHEME_FALSE));}

/* parser in k15938 in k15869 in k15676 in k15673 in k15568 in k15517 in k7924 in k7921 in k5905 in k5612 in k5609 in k5605 in k5314 in k5311 in k5308 in k5305 */
static void C_fcall f_16383(C_word t1,C_word t2,C_word t3,C_word t4,C_word t5,C_word t6,C_word t7){
C_word tmp;
C_word t8;
C_word t9;
C_word t10;
C_word ab[11],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_16383,NULL,7,t1,t2,t3,t4,t5,t6,t7);}
t8=(*a=C_VECTOR_TYPE|1,a[1]=t3,tmp=(C_word)a,a+=2,tmp);
t9=(*a=C_CLOSURE_TYPE|8,a[1]=(C_word)f_16387,a[2]=t4,a[3]=t7,a[4]=t6,a[5]=t5,a[6]=t8,a[7]=t1,a[8]=t2,tmp=(C_word)a,a+=9,tmp);
if(C_truep(t6)){
C_trace("ChickenBridge.scm: 369  printf");
t10=C_retrieve(lf[327]);
((C_proc6)C_retrieve_proc(t10))(6,t10,t9,lf[328],t5,t2,((C_word*)t8)[1]);}
else{
t10=t9;
f_16387(2,t10,C_SCHEME_UNDEFINED);}}

/* k16385 in parser in k15938 in k15869 in k15676 in k15673 in k15568 in k15517 in k7924 in k7921 in k5905 in k5612 in k5609 in k5605 in k5314 in k5311 in k5308 in k5305 */
static void C_ccall f_16387(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_16387,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|8,a[1]=(C_word)f_16390,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],a[7]=((C_word*)t0)[7],a[8]=((C_word*)t0)[8],tmp=(C_word)a,a+=9,tmp);
C_trace("ChickenBridge.scm: 369  null-tokens?");
f_15562(t2,((C_word*)((C_word*)t0)[6])[1]);}

/* k16388 in k16385 in parser in k15938 in k15869 in k15676 in k15673 in k15568 in k15517 in k7924 in k7921 in k5905 in k5612 in k5609 in k5605 in k5314 in k5311 in k5308 in k5305 */
static void C_ccall f_16390(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[18],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_16390,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|8,a[1]=(C_word)f_16393,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],a[7]=((C_word*)t0)[7],a[8]=((C_word*)t0)[8],tmp=(C_word)a,a+=9,tmp);
if(C_truep(t1)){
t3=t2;
f_16393(t3,t1);}
else{
t3=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_16808,a[2]=t2,tmp=(C_word)a,a+=3,tmp);
t4=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_16812,a[2]=t3,tmp=(C_word)a,a+=3,tmp);
t5=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_16816,a[2]=t4,tmp=(C_word)a,a+=3,tmp);
C_trace("ChickenBridge.scm: 369  first-token");
f_15550(t5,((C_word*)((C_word*)t0)[6])[1]);}}

/* k16814 in k16388 in k16385 in parser in k15938 in k15869 in k15676 in k15673 in k15568 in k15517 in k7924 in k7921 in k5905 in k5612 in k5609 in k5605 in k5314 in k5311 in k5308 in k5305 */
static void C_ccall f_16816(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 369  token-position");
f_15509(((C_word*)t0)[2],t1);}

/* k16810 in k16388 in k16385 in parser in k15938 in k15869 in k15676 in k15673 in k15568 in k15517 in k7924 in k7921 in k5905 in k5612 in k5609 in k5605 in k5314 in k5311 in k5308 in k5305 */
static void C_ccall f_16812(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 369  max");
t2=*((C_word*)lf[212]+1);
((C_proc4)C_retrieve_proc(t2))(4,t2,((C_word*)t0)[2],C_retrieve2(lf[321],"*maxtokpos*"),t1);}

/* k16806 in k16388 in k16385 in parser in k15938 in k15869 in k15676 in k15673 in k15568 in k15517 in k7924 in k7921 in k5905 in k5612 in k5609 in k5605 in k5314 in k5311 in k5308 in k5305 */
static void C_ccall f_16808(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word *a;
t2=C_mutate(&lf[321],t1);
t3=((C_word*)t0)[2];
f_16393(t3,t2);}

/* k16391 in k16388 in k16385 in parser in k15938 in k15869 in k15676 in k15673 in k15568 in k15517 in k7924 in k7921 in k5905 in k5612 in k5609 in k5605 in k5314 in k5311 in k5308 in k5305 */
static void C_fcall f_16393(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[16],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_16393,NULL,2,t0,t1);}
t2=((C_word*)t0)[8];
if(C_truep((C_word)C_i_numberp(t2))){
t3=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_16402,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
C_trace("ChickenBridge.scm: 369  pattern-value");
t4=C_retrieve2(lf[185],"pattern-value");
((C_proc3)C_retrieve_proc(t4))(3,t4,t3,((C_word*)t0)[8]);}
else{
t3=(*a=C_CLOSURE_TYPE|8,a[1]=(C_word)f_16516,a[2]=((C_word*)t0)[8],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[7],a[7]=((C_word*)t0)[6],a[8]=((C_word*)t0)[2],tmp=(C_word)a,a+=9,tmp);
C_trace("ChickenBridge.scm: 369  pattern-clause?");
f_15704(t3,((C_word*)t0)[8]);}}

/* k16514 in k16391 in k16388 in k16385 in parser in k15938 in k15869 in k15676 in k15673 in k15568 in k15517 in k7924 in k7921 in k5905 in k5612 in k5609 in k5605 in k5314 in k5311 in k5308 in k5305 */
static void C_ccall f_16516(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[13],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_16516,2,t0,t1);}
if(C_truep(t1)){
t2=(*a=C_CLOSURE_TYPE|8,a[1]=(C_word)f_16522,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],a[7]=((C_word*)t0)[7],a[8]=((C_word*)t0)[8],tmp=(C_word)a,a+=9,tmp);
t3=((C_word*)t0)[2];
t4=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_15749,a[2]=t2,a[3]=t3,tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 369  pattern-clause?");
f_15704(t4,t3);}
else{
C_trace("ChickenBridge.scm: 369  error");
t2=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t2))(4,t2,((C_word*)t0)[6],lf[326],((C_word*)t0)[2]);}}

/* k15747 in k16514 in k16391 in k16388 in k16385 in parser in k15938 in k15869 in k15676 in k15673 in k15568 in k15517 in k7924 in k7921 in k5905 in k5612 in k5609 in k5605 in k5314 in k5311 in k5308 in k5305 */
static void C_ccall f_15749(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word *a;
if(C_truep(t1)){
t2=(C_word)C_i_car(((C_word*)t0)[3]);
t3=((C_word*)t0)[2];
f_16522(t3,(C_word)C_eqp(t2,lf[310]));}
else{
t2=((C_word*)t0)[2];
f_16522(t2,C_SCHEME_FALSE);}}

/* k16520 in k16514 in k16391 in k16388 in k16385 in parser in k15938 in k15869 in k15676 in k15673 in k15568 in k15517 in k7924 in k7921 in k5905 in k5612 in k5609 in k5605 in k5314 in k5311 in k5308 in k5305 */
static void C_fcall f_16522(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word t14;
C_word t15;
C_word ab[32],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_16522,NULL,2,t0,t1);}
t2=(C_truep(t1)?t1:((C_word*)t0)[8]);
if(C_truep(t2)){
t3=C_SCHEME_FALSE;
t4=(*a=C_VECTOR_TYPE|1,a[1]=t3,tmp=(C_word)a,a+=2,tmp);
t5=((C_word*)((C_word*)t0)[7])[1];
t6=(*a=C_VECTOR_TYPE|1,a[1]=t5,tmp=(C_word)a,a+=2,tmp);
t7=C_SCHEME_END_OF_LIST;
t8=(*a=C_VECTOR_TYPE|1,a[1]=t7,tmp=(C_word)a,a+=2,tmp);
t9=C_SCHEME_FALSE;
t10=(*a=C_VECTOR_TYPE|1,a[1]=t9,tmp=(C_word)a,a+=2,tmp);
t11=(*a=C_CLOSURE_TYPE|11,a[1]=(C_word)f_16531,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=t10,a[7]=((C_word*)t0)[7],a[8]=t6,a[9]=t8,a[10]=t4,a[11]=((C_word*)t0)[6],tmp=(C_word)a,a+=12,tmp);
C_trace("ChickenBridge.scm: 369  pattern-nsubs");
f_15722(t11,((C_word*)t0)[2]);}
else{
t3=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_16610,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[7],a[7]=((C_word*)t0)[6],tmp=(C_word)a,a+=8,tmp);
t4=((C_word*)t0)[2];
t5=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_15765,a[2]=t3,a[3]=t4,tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 369  pattern-clause?");
f_15704(t5,t4);}}

/* k15763 in k16520 in k16514 in k16391 in k16388 in k16385 in parser in k15938 in k15869 in k15676 in k15673 in k15568 in k15517 in k7924 in k7921 in k5905 in k5612 in k5609 in k5605 in k5314 in k5311 in k5308 in k5305 */
static void C_ccall f_15765(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word *a;
if(C_truep(t1)){
t2=(C_word)C_i_car(((C_word*)t0)[3]);
t3=((C_word*)t0)[2];
f_16610(t3,(C_word)C_eqp(t2,lf[311]));}
else{
t2=((C_word*)t0)[2];
f_16610(t2,C_SCHEME_FALSE);}}

/* k16608 in k16520 in k16514 in k16391 in k16388 in k16385 in parser in k15938 in k15869 in k15676 in k15673 in k15568 in k15517 in k7924 in k7921 in k5905 in k5612 in k5609 in k5605 in k5314 in k5311 in k5308 in k5305 */
static void C_fcall f_16610(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word ab[25],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_16610,NULL,2,t0,t1);}
if(C_truep(t1)){
t2=C_SCHEME_FALSE;
t3=(*a=C_VECTOR_TYPE|1,a[1]=t2,tmp=(C_word)a,a+=2,tmp);
t4=C_SCHEME_FALSE;
t5=(*a=C_VECTOR_TYPE|1,a[1]=t4,tmp=(C_word)a,a+=2,tmp);
t6=C_SCHEME_END_OF_LIST;
t7=(*a=C_VECTOR_TYPE|1,a[1]=t6,tmp=(C_word)a,a+=2,tmp);
t8=(*a=C_CLOSURE_TYPE|10,a[1]=(C_word)f_16616,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],a[7]=t7,a[8]=t5,a[9]=((C_word*)t0)[7],a[10]=t3,tmp=(C_word)a,a+=11,tmp);
C_trace("ChickenBridge.scm: 369  pattern-nsubs");
f_15722(t8,((C_word*)t0)[2]);}
else{
t2=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_16680,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[2],a[6]=((C_word*)t0)[7],a[7]=((C_word*)t0)[6],tmp=(C_word)a,a+=8,tmp);
C_trace("ChickenBridge.scm: 369  pattern-zero-or-more?");
f_15790(t2,((C_word*)t0)[2]);}}

/* k16678 in k16608 in k16520 in k16514 in k16391 in k16388 in k16385 in parser in k15938 in k15869 in k15676 in k15673 in k15568 in k15517 in k7924 in k7921 in k5905 in k5612 in k5609 in k5605 in k5314 in k5311 in k5308 in k5305 */
static void C_ccall f_16680(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[12],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_16680,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_16683,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],a[7]=((C_word*)t0)[7],tmp=(C_word)a,a+=8,tmp);
if(C_truep(t1)){
t3=t2;
f_16683(t3,t1);}
else{
t3=((C_word*)t0)[5];
t4=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_15781,a[2]=t2,a[3]=t3,tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 369  pattern-clause?");
f_15704(t4,t3);}}

/* k15779 in k16678 in k16608 in k16520 in k16514 in k16391 in k16388 in k16385 in parser in k15938 in k15869 in k15676 in k15673 in k15568 in k15517 in k7924 in k7921 in k5905 in k5612 in k5609 in k5605 in k5314 in k5311 in k5308 in k5305 */
static void C_ccall f_15781(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word *a;
if(C_truep(t1)){
t2=(C_word)C_i_car(((C_word*)t0)[3]);
t3=((C_word*)t0)[2];
f_16683(t3,(C_word)C_eqp(t2,lf[91]));}
else{
t2=((C_word*)t0)[2];
f_16683(t2,C_SCHEME_FALSE);}}

/* k16681 in k16678 in k16608 in k16520 in k16514 in k16391 in k16388 in k16385 in parser in k15938 in k15869 in k15676 in k15673 in k15568 in k15517 in k7924 in k7921 in k5905 in k5612 in k5609 in k5605 in k5314 in k5311 in k5308 in k5305 */
static void C_fcall f_16683(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word t14;
C_word t15;
C_word t16;
C_word t17;
C_word t18;
C_word t19;
C_word ab[46],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_16683,NULL,2,t0,t1);}
if(C_truep(t1)){
t2=C_SCHEME_TRUE;
t3=(*a=C_VECTOR_TYPE|1,a[1]=t2,tmp=(C_word)a,a+=2,tmp);
t4=C_SCHEME_FALSE;
t5=(*a=C_VECTOR_TYPE|1,a[1]=t4,tmp=(C_word)a,a+=2,tmp);
t6=((C_word*)((C_word*)t0)[7])[1];
t7=(*a=C_VECTOR_TYPE|1,a[1]=t6,tmp=(C_word)a,a+=2,tmp);
t8=C_SCHEME_END_OF_LIST;
t9=(*a=C_VECTOR_TYPE|1,a[1]=t8,tmp=(C_word)a,a+=2,tmp);
t10=C_fix(0);
t11=(*a=C_VECTOR_TYPE|1,a[1]=t10,tmp=(C_word)a,a+=2,tmp);
t12=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_16689,a[2]=((C_word*)t0)[5],a[3]=t11,a[4]=((C_word*)t0)[7],a[5]=t9,a[6]=t3,a[7]=((C_word*)t0)[6],tmp=(C_word)a,a+=8,tmp);
t13=C_SCHEME_UNDEFINED;
t14=(*a=C_VECTOR_TYPE|1,a[1]=t13,tmp=(C_word)a,a+=2,tmp);
t15=C_set_block_item(t14,0,(*a=C_CLOSURE_TYPE|13,a[1]=(C_word)f_16712,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=t5,a[7]=t11,a[8]=t7,a[9]=((C_word*)t0)[7],a[10]=t9,a[11]=t14,a[12]=t3,a[13]=((C_word)li247),tmp=(C_word)a,a+=14,tmp));
t16=((C_word*)t14)[1];
f_16712(t16,t12);}
else{
t2=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_16761,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[7],a[7]=((C_word*)t0)[6],tmp=(C_word)a,a+=8,tmp);
t3=((C_word*)t0)[5];
t4=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_15813,a[2]=t2,a[3]=t3,tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 369  pattern-clause?");
f_15704(t4,t3);}}

/* k15811 in k16681 in k16678 in k16608 in k16520 in k16514 in k16391 in k16388 in k16385 in parser in k15938 in k15869 in k15676 in k15673 in k15568 in k15517 in k7924 in k7921 in k5905 in k5612 in k5609 in k5605 in k5314 in k5311 in k5308 in k5305 */
static void C_ccall f_15813(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word *a;
if(C_truep(t1)){
t2=(C_word)C_i_car(((C_word*)t0)[3]);
t3=((C_word*)t0)[2];
f_16761(t3,(C_word)C_eqp(t2,lf[325]));}
else{
t2=((C_word*)t0)[2];
f_16761(t2,C_SCHEME_FALSE);}}

/* k16759 in k16681 in k16678 in k16608 in k16520 in k16514 in k16391 in k16388 in k16385 in parser in k15938 in k15869 in k15676 in k15673 in k15568 in k15517 in k7924 in k7921 in k5905 in k5612 in k5609 in k5605 in k5314 in k5311 in k5308 in k5305 */
static void C_fcall f_16761(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word ab[27],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_16761,NULL,2,t0,t1);}
if(C_truep(t1)){
t2=C_SCHEME_FALSE;
t3=(*a=C_VECTOR_TYPE|1,a[1]=t2,tmp=(C_word)a,a+=2,tmp);
t4=C_SCHEME_END_OF_LIST;
t5=(*a=C_VECTOR_TYPE|1,a[1]=t4,tmp=(C_word)a,a+=2,tmp);
t6=C_SCHEME_END_OF_LIST;
t7=(*a=C_VECTOR_TYPE|1,a[1]=t6,tmp=(C_word)a,a+=2,tmp);
t8=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_16770,a[2]=((C_word*)t0)[6],a[3]=t7,a[4]=t5,a[5]=((C_word*)t0)[7],a[6]=t3,tmp=(C_word)a,a+=7,tmp);
t9=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_16781,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[5],a[7]=((C_word)li248),tmp=(C_word)a,a+=8,tmp);
t10=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_16787,a[2]=t7,a[3]=t5,a[4]=t3,a[5]=((C_word)li249),tmp=(C_word)a,a+=6,tmp);
C_trace("ChickenBridge.scm: 369  call-with-values");
C_call_with_values(4,0,t8,t9,t10);}
else{
t2=((C_word*)t0)[5];
t3=(C_word)C_i_car(t2);
C_trace("ChickenBridge.scm: 369  error");
t4=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,((C_word*)t0)[7],lf[324],t3);}}

/* a16786 in k16759 in k16681 in k16678 in k16608 in k16520 in k16514 in k16391 in k16388 in k16385 in parser in k15938 in k15869 in k15676 in k15673 in k15568 in k15517 in k7924 in k7921 in k5905 in k5612 in k5609 in k5605 in k5314 in k5311 in k5308 in k5305 */
static void C_ccall f_16787(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4){
C_word tmp;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word *a;
if(c!=5) C_bad_argc_2(c,5,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr5,(void*)f_16787,5,t0,t1,t2,t3,t4);}
t5=C_mutate(((C_word *)((C_word*)t0)[4])+1,t2);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t3);
t7=C_mutate(((C_word *)((C_word*)t0)[2])+1,t4);
t8=t1;
((C_proc2)(void*)(*((C_word*)t8+1)))(2,t8,t7);}

/* a16780 in k16759 in k16681 in k16678 in k16608 in k16520 in k16514 in k16391 in k16388 in k16385 in parser in k15938 in k15869 in k15676 in k15673 in k15568 in k15517 in k7924 in k7921 in k5905 in k5612 in k5609 in k5605 in k5314 in k5311 in k5308 in k5305 */
static void C_ccall f_16781(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
if(c!=2) C_bad_argc_2(c,2,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_16781,2,t0,t1);}
C_trace("ChickenBridge.scm: 369  parser");
f_16383(t1,((C_word*)t0)[6],((C_word*)((C_word*)t0)[5])[1],C_SCHEME_TRUE,((C_word*)t0)[4],((C_word*)t0)[3],((C_word*)t0)[2]);}

/* k16768 in k16759 in k16681 in k16678 in k16608 in k16520 in k16514 in k16391 in k16388 in k16385 in parser in k15938 in k15869 in k15676 in k15673 in k15568 in k15517 in k7924 in k7921 in k5905 in k5612 in k5609 in k5605 in k5314 in k5311 in k5308 in k5305 */
static void C_ccall f_16770(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
if(C_truep(((C_word*)((C_word*)t0)[6])[1])){
C_trace("ChickenBridge.scm: 369  values");
C_values(5,0,((C_word*)t0)[5],((C_word*)((C_word*)t0)[6])[1],((C_word*)((C_word*)t0)[4])[1],((C_word*)((C_word*)t0)[3])[1]);}
else{
C_trace("ChickenBridge.scm: 369  values");
C_values(5,0,((C_word*)t0)[5],C_SCHEME_TRUE,C_SCHEME_FALSE,((C_word*)((C_word*)t0)[2])[1]);}}

/* do2314 in k16681 in k16678 in k16608 in k16520 in k16514 in k16391 in k16388 in k16385 in parser in k15938 in k15869 in k15676 in k15673 in k15568 in k15517 in k7924 in k7921 in k5905 in k5612 in k5609 in k5605 in k5314 in k5311 in k5308 in k5305 */
static void C_fcall f_16712(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[14],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_16712,NULL,2,t0,t1);}
t2=(C_word)C_i_not(((C_word*)((C_word*)t0)[12])[1]);
t3=(*a=C_CLOSURE_TYPE|13,a[1]=(C_word)f_16722,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],a[7]=((C_word*)t0)[7],a[8]=((C_word*)t0)[8],a[9]=((C_word*)t0)[9],a[10]=((C_word*)t0)[10],a[11]=((C_word*)t0)[12],a[12]=((C_word*)t0)[11],a[13]=t1,tmp=(C_word)a,a+=14,tmp);
if(C_truep(t2)){
t4=t3;
f_16722(2,t4,t2);}
else{
C_trace("ChickenBridge.scm: 369  null-tokens?");
f_15562(t3,((C_word*)((C_word*)t0)[8])[1]);}}

/* k16720 in do2314 in k16681 in k16678 in k16608 in k16520 in k16514 in k16391 in k16388 in k16385 in parser in k15938 in k15869 in k15676 in k15673 in k15568 in k15517 in k7924 in k7921 in k5905 in k5612 in k5609 in k5605 in k5314 in k5311 in k5308 in k5305 */
static void C_ccall f_16722(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[24],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_16722,2,t0,t1);}
if(C_truep(t1)){
t2=((C_word*)t0)[13];
((C_proc2)(void*)(*((C_word*)t2+1)))(2,t2,C_SCHEME_FALSE);}
else{
t2=(*a=C_CLOSURE_TYPE|9,a[1]=(C_word)f_16725,a[2]=((C_word*)t0)[6],a[3]=((C_word*)t0)[7],a[4]=((C_word*)t0)[8],a[5]=((C_word*)t0)[9],a[6]=((C_word*)t0)[10],a[7]=((C_word*)t0)[11],a[8]=((C_word*)t0)[13],a[9]=((C_word*)t0)[12],tmp=(C_word)a,a+=10,tmp);
t3=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_16742,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[8],a[6]=((C_word*)t0)[5],a[7]=((C_word)li245),tmp=(C_word)a,a+=8,tmp);
t4=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_16748,a[2]=((C_word*)t0)[8],a[3]=((C_word*)t0)[6],a[4]=((C_word*)t0)[11],a[5]=((C_word)li246),tmp=(C_word)a,a+=6,tmp);
C_trace("ChickenBridge.scm: 369  call-with-values");
C_call_with_values(4,0,t2,t3,t4);}}

/* a16747 in k16720 in do2314 in k16681 in k16678 in k16608 in k16520 in k16514 in k16391 in k16388 in k16385 in parser in k15938 in k15869 in k15676 in k15673 in k15568 in k15517 in k7924 in k7921 in k5905 in k5612 in k5609 in k5605 in k5314 in k5311 in k5308 in k5305 */
static void C_ccall f_16748(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4){
C_word tmp;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word *a;
if(c!=5) C_bad_argc_2(c,5,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr5,(void*)f_16748,5,t0,t1,t2,t3,t4);}
t5=C_mutate(((C_word *)((C_word*)t0)[4])+1,t2);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t3);
t7=C_mutate(((C_word *)((C_word*)t0)[2])+1,t4);
t8=t1;
((C_proc2)(void*)(*((C_word*)t8+1)))(2,t8,t7);}

/* a16741 in k16720 in do2314 in k16681 in k16678 in k16608 in k16520 in k16514 in k16391 in k16388 in k16385 in parser in k15938 in k15869 in k15676 in k15673 in k15568 in k15517 in k7924 in k7921 in k5905 in k5612 in k5609 in k5605 in k5314 in k5311 in k5308 in k5305 */
static void C_ccall f_16742(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
if(c!=2) C_bad_argc_2(c,2,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_16742,2,t0,t1);}
C_trace("ChickenBridge.scm: 369  parser");
f_16383(t1,((C_word*)t0)[6],((C_word*)((C_word*)t0)[5])[1],C_SCHEME_TRUE,((C_word*)t0)[4],((C_word*)t0)[3],((C_word*)t0)[2]);}

/* k16723 in k16720 in do2314 in k16681 in k16678 in k16608 in k16520 in k16514 in k16391 in k16388 in k16385 in parser in k15938 in k15869 in k15676 in k15673 in k15568 in k15517 in k7924 in k7921 in k5905 in k5612 in k5609 in k5605 in k5314 in k5311 in k5308 in k5305 */
static void C_ccall f_16725(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[11],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_16725,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_16728,a[2]=((C_word*)t0)[8],a[3]=((C_word*)t0)[9],tmp=(C_word)a,a+=4,tmp);
if(C_truep(((C_word*)((C_word*)t0)[7])[1])){
t3=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_16735,a[2]=t2,a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],tmp=(C_word)a,a+=7,tmp);
C_trace("ChickenBridge.scm: 369  append");
t4=*((C_word*)lf[18]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t3,((C_word*)((C_word*)t0)[6])[1],((C_word*)((C_word*)t0)[2])[1]);}
else{
t3=t2;
f_16728(t3,C_SCHEME_UNDEFINED);}}

/* k16733 in k16723 in k16720 in do2314 in k16681 in k16678 in k16608 in k16520 in k16514 in k16391 in k16388 in k16385 in parser in k15938 in k15869 in k15676 in k15673 in k15568 in k15517 in k7924 in k7921 in k5905 in k5612 in k5609 in k5605 in k5314 in k5311 in k5308 in k5305 */
static void C_ccall f_16735(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[4],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_16735,2,t0,t1);}
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_mutate(((C_word *)((C_word*)t0)[5])+1,((C_word*)((C_word*)t0)[4])[1]);
t4=(C_word)C_a_i_plus(&a,2,((C_word*)((C_word*)t0)[3])[1],C_fix(1));
t5=C_mutate(((C_word *)((C_word*)t0)[3])+1,t4);
t6=((C_word*)t0)[2];
f_16728(t6,t5);}

/* k16726 in k16723 in k16720 in do2314 in k16681 in k16678 in k16608 in k16520 in k16514 in k16391 in k16388 in k16385 in parser in k15938 in k15869 in k15676 in k15673 in k15568 in k15517 in k7924 in k7921 in k5905 in k5612 in k5609 in k5605 in k5314 in k5311 in k5308 in k5305 */
static void C_fcall f_16728(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
t2=((C_word*)((C_word*)t0)[3])[1];
f_16712(t2,((C_word*)t0)[2]);}

/* k16687 in k16681 in k16678 in k16608 in k16520 in k16514 in k16391 in k16388 in k16385 in parser in k15938 in k15869 in k15676 in k15673 in k15568 in k15517 in k7924 in k7921 in k5905 in k5612 in k5609 in k5605 in k5314 in k5311 in k5308 in k5305 */
static void C_ccall f_16689(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[12],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_16689,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_16692,a[2]=((C_word*)t0)[4],a[3]=((C_word*)t0)[5],a[4]=((C_word*)t0)[6],a[5]=((C_word*)t0)[7],tmp=(C_word)a,a+=6,tmp);
t3=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_16698,a[2]=((C_word*)t0)[5],a[3]=t2,a[4]=((C_word*)t0)[6],a[5]=((C_word*)t0)[3],tmp=(C_word)a,a+=6,tmp);
C_trace("ChickenBridge.scm: 369  pattern-zero-or-more?");
f_15790(t3,((C_word*)t0)[2]);}

/* k16696 in k16687 in k16681 in k16678 in k16608 in k16520 in k16514 in k16391 in k16388 in k16385 in parser in k15938 in k15869 in k15676 in k15673 in k15568 in k15517 in k7924 in k7921 in k5905 in k5612 in k5609 in k5605 in k5314 in k5311 in k5308 in k5305 */
static void C_ccall f_16698(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word *a;
t2=(C_truep(t1)?t1:(C_word)C_i_greaterp(((C_word*)((C_word*)t0)[5])[1],C_fix(0)));
if(C_truep(t2)){
t3=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t4=((C_word*)t0)[3];
f_16692(t4,t3);}
else{
t3=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_FALSE);
t4=C_set_block_item(((C_word*)t0)[2],0,C_SCHEME_END_OF_LIST);
t5=((C_word*)t0)[3];
f_16692(t5,t4);}}

/* k16690 in k16687 in k16681 in k16678 in k16608 in k16520 in k16514 in k16391 in k16388 in k16385 in parser in k15938 in k15869 in k15676 in k15673 in k15568 in k15517 in k7924 in k7921 in k5905 in k5612 in k5609 in k5605 in k5314 in k5311 in k5308 in k5305 */
static void C_fcall f_16692(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 369  values");
C_values(5,0,((C_word*)t0)[5],((C_word*)((C_word*)t0)[4])[1],((C_word*)((C_word*)t0)[3])[1],((C_word*)((C_word*)t0)[2])[1]);}

/* k16614 in k16608 in k16520 in k16514 in k16391 in k16388 in k16385 in parser in k15938 in k15869 in k15676 in k15673 in k15568 in k15517 in k7924 in k7921 in k5905 in k5612 in k5609 in k5605 in k5314 in k5311 in k5308 in k5305 */
static void C_ccall f_16616(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[22],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_16616,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_16619,a[2]=((C_word*)t0)[6],a[3]=((C_word*)t0)[7],a[4]=((C_word*)t0)[8],a[5]=((C_word*)t0)[9],a[6]=((C_word*)t0)[10],tmp=(C_word)a,a+=7,tmp);
t3=C_SCHEME_UNDEFINED;
t4=(*a=C_VECTOR_TYPE|1,a[1]=t3,tmp=(C_word)a,a+=2,tmp);
t5=C_set_block_item(t4,0,(*a=C_CLOSURE_TYPE|12,a[1]=(C_word)f_16634,a[2]=((C_word*)t0)[7],a[3]=((C_word*)t0)[8],a[4]=((C_word*)t0)[2],a[5]=((C_word*)t0)[3],a[6]=((C_word*)t0)[4],a[7]=((C_word*)t0)[6],a[8]=((C_word*)t0)[5],a[9]=t4,a[10]=t1,a[11]=((C_word*)t0)[10],a[12]=((C_word)li244),tmp=(C_word)a,a+=13,tmp));
t6=((C_word*)t4)[1];
f_16634(t6,t2,C_fix(0));}

/* do2294 in k16614 in k16608 in k16520 in k16514 in k16391 in k16388 in k16385 in parser in k15938 in k15869 in k15676 in k15673 in k15568 in k15517 in k7924 in k7921 in k5905 in k5612 in k5609 in k5605 in k5314 in k5311 in k5308 in k5305 */
static void C_fcall f_16634(C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word ab[20],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_16634,NULL,3,t0,t1,t2);}
t3=((C_word*)((C_word*)t0)[11])[1];
t4=(C_truep(t3)?t3:(C_word)C_i_nequalp(t2,((C_word*)t0)[10]));
if(C_truep(t4)){
t5=t1;
((C_proc2)(void*)(*((C_word*)t5+1)))(2,t5,C_SCHEME_FALSE);}
else{
t5=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_16644,a[2]=t1,a[3]=((C_word*)t0)[9],a[4]=t2,tmp=(C_word)a,a+=5,tmp);
t6=(*a=C_CLOSURE_TYPE|8,a[1]=(C_word)f_16653,a[2]=t2,a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],a[7]=((C_word*)t0)[8],a[8]=((C_word)li242),tmp=(C_word)a,a+=9,tmp);
t7=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_16667,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[11],a[5]=((C_word)li243),tmp=(C_word)a,a+=6,tmp);
C_trace("ChickenBridge.scm: 369  call-with-values");
C_call_with_values(4,0,t5,t6,t7);}}

/* a16666 in do2294 in k16614 in k16608 in k16520 in k16514 in k16391 in k16388 in k16385 in parser in k15938 in k15869 in k15676 in k15673 in k15568 in k15517 in k7924 in k7921 in k5905 in k5612 in k5609 in k5605 in k5314 in k5311 in k5308 in k5305 */
static void C_ccall f_16667(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4){
C_word tmp;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word *a;
if(c!=5) C_bad_argc_2(c,5,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr5,(void*)f_16667,5,t0,t1,t2,t3,t4);}
t5=C_mutate(((C_word *)((C_word*)t0)[4])+1,t2);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t3);
t7=C_mutate(((C_word *)((C_word*)t0)[2])+1,t4);
t8=t1;
((C_proc2)(void*)(*((C_word*)t8+1)))(2,t8,t7);}

/* a16652 in do2294 in k16614 in k16608 in k16520 in k16514 in k16391 in k16388 in k16385 in parser in k15938 in k15869 in k15676 in k15673 in k15568 in k15517 in k7924 in k7921 in k5905 in k5612 in k5609 in k5605 in k5314 in k5311 in k5308 in k5305 */
static void C_ccall f_16653(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[7],*a=ab;
if(c!=2) C_bad_argc_2(c,2,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_16653,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_16661,a[2]=((C_word*)t0)[4],a[3]=((C_word*)t0)[5],a[4]=((C_word*)t0)[6],a[5]=t1,a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
C_trace("ChickenBridge.scm: 369  pattern-sub");
f_15732(t2,((C_word*)t0)[3],((C_word*)t0)[2]);}

/* k16659 in a16652 in do2294 in k16614 in k16608 in k16520 in k16514 in k16391 in k16388 in k16385 in parser in k15938 in k15869 in k15676 in k15673 in k15568 in k15517 in k7924 in k7921 in k5905 in k5612 in k5609 in k5605 in k5314 in k5311 in k5308 in k5305 */
static void C_ccall f_16661(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[4],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_16661,2,t0,t1);}
t2=(C_word)C_a_i_plus(&a,2,((C_word*)t0)[6],C_fix(1));
C_trace("ChickenBridge.scm: 369  parser");
f_16383(((C_word*)t0)[5],t1,((C_word*)((C_word*)t0)[4])[1],C_SCHEME_FALSE,t2,((C_word*)t0)[3],((C_word*)t0)[2]);}

/* k16642 in do2294 in k16614 in k16608 in k16520 in k16514 in k16391 in k16388 in k16385 in parser in k15938 in k15869 in k15676 in k15673 in k15568 in k15517 in k7924 in k7921 in k5905 in k5612 in k5609 in k5605 in k5314 in k5311 in k5308 in k5305 */
static void C_ccall f_16644(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[4],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_16644,2,t0,t1);}
t2=(C_word)C_a_i_plus(&a,2,((C_word*)t0)[4],C_fix(1));
t3=((C_word*)((C_word*)t0)[3])[1];
f_16634(t3,((C_word*)t0)[2],t2);}

/* k16617 in k16614 in k16608 in k16520 in k16514 in k16391 in k16388 in k16385 in parser in k15938 in k15869 in k15676 in k15673 in k15568 in k15517 in k7924 in k7921 in k5905 in k5612 in k5609 in k5605 in k5314 in k5311 in k5308 in k5305 */
static void C_ccall f_16619(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
if(C_truep(((C_word*)((C_word*)t0)[6])[1])){
C_trace("ChickenBridge.scm: 369  values");
C_values(5,0,((C_word*)t0)[5],((C_word*)((C_word*)t0)[6])[1],((C_word*)((C_word*)t0)[4])[1],((C_word*)((C_word*)t0)[3])[1]);}
else{
C_trace("ChickenBridge.scm: 369  values");
C_values(5,0,((C_word*)t0)[5],C_SCHEME_FALSE,C_SCHEME_END_OF_LIST,((C_word*)((C_word*)t0)[2])[1]);}}

/* k16529 in k16520 in k16514 in k16391 in k16388 in k16385 in parser in k15938 in k15869 in k15676 in k15673 in k15568 in k15517 in k7924 in k7921 in k5905 in k5612 in k5609 in k5605 in k5314 in k5311 in k5308 in k5305 */
static void C_ccall f_16531(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word ab[26],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_16531,2,t0,t1);}
t2=C_SCHEME_FALSE;
t3=(*a=C_VECTOR_TYPE|1,a[1]=t2,tmp=(C_word)a,a+=2,tmp);
t4=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_16534,a[2]=((C_word*)t0)[7],a[3]=t3,a[4]=((C_word*)t0)[8],a[5]=((C_word*)t0)[9],a[6]=((C_word*)t0)[10],a[7]=((C_word*)t0)[11],tmp=(C_word)a,a+=8,tmp);
t5=C_SCHEME_UNDEFINED;
t6=(*a=C_VECTOR_TYPE|1,a[1]=t5,tmp=(C_word)a,a+=2,tmp);
t7=C_set_block_item(t6,0,(*a=C_CLOSURE_TYPE|13,a[1]=(C_word)f_16553,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[8],a[6]=((C_word*)t0)[5],a[7]=((C_word*)t0)[9],a[8]=((C_word*)t0)[6],a[9]=((C_word*)t0)[10],a[10]=t6,a[11]=t3,a[12]=t1,a[13]=((C_word)li241),tmp=(C_word)a,a+=14,tmp));
t8=((C_word*)t6)[1];
f_16553(t8,t4,C_fix(0));}

/* do2272 in k16529 in k16520 in k16514 in k16391 in k16388 in k16385 in parser in k15938 in k15869 in k15676 in k15673 in k15568 in k15517 in k7924 in k7921 in k5905 in k5612 in k5609 in k5605 in k5314 in k5311 in k5308 in k5305 */
static void C_fcall f_16553(C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word ab[24],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_16553,NULL,3,t0,t1,t2);}
t3=(C_word)C_i_nequalp(t2,((C_word*)t0)[12]);
t4=(C_truep(t3)?t3:((C_word*)((C_word*)t0)[11])[1]);
if(C_truep(t4)){
t5=t1;
((C_proc2)(void*)(*((C_word*)t5+1)))(2,t5,C_SCHEME_FALSE);}
else{
t5=(*a=C_CLOSURE_TYPE|8,a[1]=(C_word)f_16566,a[2]=((C_word*)t0)[11],a[3]=((C_word*)t0)[7],a[4]=((C_word*)t0)[8],a[5]=((C_word*)t0)[9],a[6]=t1,a[7]=((C_word*)t0)[10],a[8]=t2,tmp=(C_word)a,a+=9,tmp);
t6=(*a=C_CLOSURE_TYPE|8,a[1]=(C_word)f_16586,a[2]=t2,a[3]=((C_word*)t0)[2],a[4]=((C_word*)t0)[3],a[5]=((C_word*)t0)[4],a[6]=((C_word*)t0)[5],a[7]=((C_word*)t0)[6],a[8]=((C_word)li239),tmp=(C_word)a,a+=9,tmp);
t7=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_16600,a[2]=((C_word*)t0)[5],a[3]=((C_word*)t0)[8],a[4]=((C_word*)t0)[9],a[5]=((C_word)li240),tmp=(C_word)a,a+=6,tmp);
C_trace("ChickenBridge.scm: 369  call-with-values");
C_call_with_values(4,0,t5,t6,t7);}}

/* a16599 in do2272 in k16529 in k16520 in k16514 in k16391 in k16388 in k16385 in parser in k15938 in k15869 in k15676 in k15673 in k15568 in k15517 in k7924 in k7921 in k5905 in k5612 in k5609 in k5605 in k5314 in k5311 in k5308 in k5305 */
static void C_ccall f_16600(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4){
C_word tmp;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word *a;
if(c!=5) C_bad_argc_2(c,5,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr5,(void*)f_16600,5,t0,t1,t2,t3,t4);}
t5=C_mutate(((C_word *)((C_word*)t0)[4])+1,t2);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t3);
t7=C_mutate(((C_word *)((C_word*)t0)[2])+1,t4);
t8=t1;
((C_proc2)(void*)(*((C_word*)t8+1)))(2,t8,t7);}

/* a16585 in do2272 in k16529 in k16520 in k16514 in k16391 in k16388 in k16385 in parser in k15938 in k15869 in k15676 in k15673 in k15568 in k15517 in k7924 in k7921 in k5905 in k5612 in k5609 in k5605 in k5314 in k5311 in k5308 in k5305 */
static void C_ccall f_16586(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[7],*a=ab;
if(c!=2) C_bad_argc_2(c,2,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_16586,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_16594,a[2]=((C_word*)t0)[4],a[3]=((C_word*)t0)[5],a[4]=((C_word*)t0)[6],a[5]=t1,a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
C_trace("ChickenBridge.scm: 369  pattern-sub");
f_15732(t2,((C_word*)t0)[3],((C_word*)t0)[2]);}

/* k16592 in a16585 in do2272 in k16529 in k16520 in k16514 in k16391 in k16388 in k16385 in parser in k15938 in k15869 in k15676 in k15673 in k15568 in k15517 in k7924 in k7921 in k5905 in k5612 in k5609 in k5605 in k5314 in k5311 in k5308 in k5305 */
static void C_ccall f_16594(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[4],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_16594,2,t0,t1);}
t2=(C_word)C_a_i_plus(&a,2,((C_word*)t0)[6],C_fix(1));
C_trace("ChickenBridge.scm: 369  parser");
f_16383(((C_word*)t0)[5],t1,((C_word*)((C_word*)t0)[4])[1],C_SCHEME_FALSE,t2,((C_word*)t0)[3],((C_word*)t0)[2]);}

/* k16564 in do2272 in k16529 in k16520 in k16514 in k16391 in k16388 in k16385 in parser in k15938 in k15869 in k15676 in k15673 in k15568 in k15517 in k7924 in k7921 in k5905 in k5612 in k5609 in k5605 in k5314 in k5311 in k5308 in k5305 */
static void C_ccall f_16566(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word ab[8],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_16566,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_16569,a[2]=((C_word*)t0)[6],a[3]=((C_word*)t0)[7],a[4]=((C_word*)t0)[8],tmp=(C_word)a,a+=5,tmp);
t3=((C_word*)((C_word*)t0)[5])[1];
if(C_truep(t3)){
t4=(C_word)C_a_i_cons(&a,2,((C_word*)((C_word*)t0)[4])[1],((C_word*)((C_word*)t0)[3])[1]);
t5=C_mutate(((C_word *)((C_word*)t0)[3])+1,t4);
t6=t2;
f_16569(t6,t5);}
else{
t4=C_set_block_item(((C_word*)t0)[2],0,C_SCHEME_TRUE);
t5=t2;
f_16569(t5,t4);}}

/* k16567 in k16564 in do2272 in k16529 in k16520 in k16514 in k16391 in k16388 in k16385 in parser in k15938 in k15869 in k15676 in k15673 in k15568 in k15517 in k7924 in k7921 in k5905 in k5612 in k5609 in k5605 in k5314 in k5311 in k5308 in k5305 */
static void C_fcall f_16569(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[4],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_16569,NULL,2,t0,t1);}
t2=(C_word)C_a_i_plus(&a,2,((C_word*)t0)[4],C_fix(1));
t3=((C_word*)((C_word*)t0)[3])[1];
f_16553(t3,((C_word*)t0)[2],t2);}

/* k16532 in k16529 in k16520 in k16514 in k16391 in k16388 in k16385 in parser in k15938 in k15869 in k15676 in k15673 in k15568 in k15517 in k7924 in k7921 in k5905 in k5612 in k5609 in k5605 in k5314 in k5311 in k5308 in k5305 */
static void C_ccall f_16534(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word ab[10],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_16534,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_16537,a[2]=((C_word*)t0)[4],a[3]=((C_word*)t0)[5],a[4]=((C_word*)t0)[6],a[5]=((C_word*)t0)[7],tmp=(C_word)a,a+=6,tmp);
if(C_truep(((C_word*)((C_word*)t0)[3])[1])){
t3=C_set_block_item(((C_word*)t0)[6],0,C_SCHEME_FALSE);
t4=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_END_OF_LIST);
t5=C_mutate(((C_word *)((C_word*)t0)[4])+1,((C_word*)((C_word*)t0)[2])[1]);
t6=t2;
f_16537(t6,t5);}
else{
t3=C_set_block_item(((C_word*)t0)[6],0,C_SCHEME_TRUE);
t4=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_16551,a[2]=t2,a[3]=((C_word*)t0)[5],tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 369  reverse");
t5=*((C_word*)lf[164]+1);
((C_proc3)C_retrieve_proc(t5))(3,t5,t4,((C_word*)((C_word*)t0)[5])[1]);}}

/* k16549 in k16532 in k16529 in k16520 in k16514 in k16391 in k16388 in k16385 in parser in k15938 in k15869 in k15676 in k15673 in k15568 in k15517 in k7924 in k7921 in k5905 in k5612 in k5609 in k5605 in k5314 in k5311 in k5308 in k5305 */
static void C_ccall f_16551(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[3])+1,t1);
t3=((C_word*)t0)[2];
f_16537(t3,t2);}

/* k16535 in k16532 in k16529 in k16520 in k16514 in k16391 in k16388 in k16385 in parser in k15938 in k15869 in k15676 in k15673 in k15568 in k15517 in k7924 in k7921 in k5905 in k5612 in k5609 in k5605 in k5314 in k5311 in k5308 in k5305 */
static void C_fcall f_16537(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 369  values");
C_values(5,0,((C_word*)t0)[5],((C_word*)((C_word*)t0)[4])[1],((C_word*)((C_word*)t0)[3])[1],((C_word*)((C_word*)t0)[2])[1]);}

/* k16400 in k16391 in k16388 in k16385 in parser in k15938 in k15869 in k15676 in k15673 in k15568 in k15517 in k7924 in k7921 in k5905 in k5612 in k5609 in k5605 in k5314 in k5311 in k5308 in k5305 */
static void C_ccall f_16402(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[8],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_16402,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_16408,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=t1,a[6]=((C_word*)t0)[5],a[7]=((C_word*)t0)[6],tmp=(C_word)a,a+=8,tmp);
C_trace("ChickenBridge.scm: 369  SalTokenType?");
f_17002(t2,t1);}

/* k16406 in k16400 in k16391 in k16388 in k16385 in parser in k15938 in k15869 in k15676 in k15673 in k15568 in k15517 in k7924 in k7921 in k5905 in k5612 in k5609 in k5605 in k5314 in k5311 in k5308 in k5305 */
static void C_ccall f_16408(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[13],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_16408,2,t0,t1);}
if(C_truep(t1)){
t2=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_16414,a[2]=((C_word*)t0)[5],a[3]=((C_word*)t0)[6],a[4]=((C_word*)t0)[7],tmp=(C_word)a,a+=5,tmp);
C_trace("ChickenBridge.scm: 369  null-tokens?");
f_15562(t2,((C_word*)((C_word*)t0)[6])[1]);}
else{
t2=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_16466,a[2]=((C_word*)t0)[5],a[3]=((C_word*)t0)[7],a[4]=((C_word*)t0)[2],a[5]=((C_word*)t0)[3],a[6]=((C_word*)t0)[6],a[7]=((C_word*)t0)[4],tmp=(C_word)a,a+=8,tmp);
C_trace("ChickenBridge.scm: 369  SalRuleType?");
f_17152(t2,((C_word*)t0)[5]);}}

/* k16464 in k16406 in k16400 in k16391 in k16388 in k16385 in parser in k15938 in k15869 in k15676 in k15673 in k15568 in k15517 in k7924 in k7921 in k5905 in k5612 in k5609 in k5605 in k5314 in k5311 in k5308 in k5305 */
static void C_ccall f_16466(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_16466,2,t0,t1);}
if(C_truep(t1)){
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_16469,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
C_trace("ChickenBridge.scm: 369  get-rule");
f_15680(t2,((C_word*)t0)[2],C_SCHEME_END_OF_LIST);}
else{
C_trace("ChickenBridge.scm: 369  error");
t2=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t2))(4,t2,((C_word*)t0)[3],lf[323],((C_word*)t0)[2]);}}

/* k16467 in k16464 in k16406 in k16400 in k16391 in k16388 in k16385 in parser in k15938 in k15869 in k15676 in k15673 in k15568 in k15517 in k7924 in k7921 in k5905 in k5612 in k5609 in k5605 in k5314 in k5311 in k5308 in k5305 */
static void C_ccall f_16469(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word ab[13],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_16469,2,t0,t1);}
t2=t1;
t3=(C_word)C_i_check_structure(t2,lf[279]);
t4=(C_word)C_i_block_ref(t2,C_fix(3));
t5=t1;
t6=(C_word)C_i_check_structure(t5,lf[279]);
t7=(C_word)C_i_block_ref(t5,C_fix(4));
t8=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_16480,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=t4,a[6]=((C_word*)t0)[6],a[7]=((C_word)li237),tmp=(C_word)a,a+=8,tmp);
t9=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_16490,a[2]=((C_word*)t0)[3],a[3]=t7,a[4]=((C_word)li238),tmp=(C_word)a,a+=5,tmp);
C_trace("ChickenBridge.scm: 369  call-with-values");
C_call_with_values(4,0,((C_word*)t0)[2],t8,t9);}

/* a16489 in k16467 in k16464 in k16406 in k16400 in k16391 in k16388 in k16385 in parser in k15938 in k15869 in k15676 in k15673 in k15568 in k15517 in k7924 in k7921 in k5905 in k5612 in k5609 in k5605 in k5314 in k5311 in k5308 in k5305 */
static void C_ccall f_16490(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4){
C_word tmp;
C_word t5;
C_word t6;
C_word ab[5],*a=ab;
if(c!=5) C_bad_argc_2(c,5,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr5,(void*)f_16490,5,t0,t1,t2,t3,t4);}
if(C_truep(t2)){
t5=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_16501,a[2]=t4,a[3]=t2,a[4]=t1,tmp=(C_word)a,a+=5,tmp);
if(C_truep(((C_word*)t0)[3])){
C_trace("ChickenBridge.scm: 369  func");
t6=((C_word*)t0)[3];
((C_proc4)C_retrieve_proc(t6))(4,t6,t5,t3,((C_word*)t0)[2]);}
else{
t6=t5;
f_16501(2,t6,t3);}}
else{
C_trace("ChickenBridge.scm: 369  values");
C_values(5,0,t1,C_SCHEME_FALSE,C_SCHEME_FALSE,t4);}}

/* k16499 in a16489 in k16467 in k16464 in k16406 in k16400 in k16391 in k16388 in k16385 in parser in k15938 in k15869 in k15676 in k15673 in k15568 in k15517 in k7924 in k7921 in k5905 in k5612 in k5609 in k5605 in k5314 in k5311 in k5308 in k5305 */
static void C_ccall f_16501(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 369  values");
C_values(5,0,((C_word*)t0)[4],((C_word*)t0)[3],t1,((C_word*)t0)[2]);}

/* a16479 in k16467 in k16464 in k16406 in k16400 in k16391 in k16388 in k16385 in parser in k15938 in k15869 in k15676 in k15673 in k15568 in k15517 in k7924 in k7921 in k5905 in k5612 in k5609 in k5605 in k5314 in k5311 in k5308 in k5305 */
static void C_ccall f_16480(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[4],*a=ab;
if(c!=2) C_bad_argc_2(c,2,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_16480,2,t0,t1);}
t2=(C_word)C_a_i_plus(&a,2,((C_word*)t0)[6],C_fix(1));
C_trace("ChickenBridge.scm: 369  parser");
f_16383(t1,((C_word*)t0)[5],((C_word*)((C_word*)t0)[4])[1],C_SCHEME_FALSE,t2,((C_word*)t0)[3],((C_word*)t0)[2]);}

/* k16412 in k16406 in k16400 in k16391 in k16388 in k16385 in parser in k15938 in k15869 in k15676 in k15673 in k15568 in k15517 in k7924 in k7921 in k5905 in k5612 in k5609 in k5605 in k5314 in k5311 in k5308 in k5305 */
static void C_ccall f_16414(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[5],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_16414,2,t0,t1);}
if(C_truep(t1)){
C_trace("ChickenBridge.scm: 369  values");
C_values(5,0,((C_word*)t0)[4],C_SCHEME_FALSE,C_SCHEME_FALSE,C_SCHEME_END_OF_LIST);}
else{
t2=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_16424,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[3],tmp=(C_word)a,a+=5,tmp);
C_trace("ChickenBridge.scm: 369  first-token");
f_15550(t2,((C_word*)((C_word*)t0)[3])[1]);}}

/* k16422 in k16412 in k16406 in k16400 in k16391 in k16388 in k16385 in parser in k15938 in k15869 in k15676 in k15673 in k15568 in k15517 in k7924 in k7921 in k5905 in k5612 in k5609 in k5605 in k5314 in k5311 in k5308 in k5305 */
static void C_ccall f_16424(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_16424,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_16430,a[2]=t1,a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],tmp=(C_word)a,a+=5,tmp);
t3=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_16460,a[2]=((C_word*)t0)[2],a[3]=t2,tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 369  token-type");
f_15473(t3,t1);}

/* k16458 in k16422 in k16412 in k16406 in k16400 in k16391 in k16388 in k16385 in parser in k15938 in k15869 in k15676 in k15673 in k15568 in k15517 in k7924 in k7921 in k5905 in k5612 in k5609 in k5605 in k5314 in k5311 in k5308 in k5305 */
static void C_ccall f_16460(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 369  SalType=?");
f_17164(((C_word*)t0)[3],t1,((C_word*)t0)[2]);}

/* k16428 in k16422 in k16412 in k16406 in k16400 in k16391 in k16388 in k16385 in parser in k15938 in k15869 in k15676 in k15673 in k15568 in k15517 in k7924 in k7921 in k5905 in k5612 in k5609 in k5605 in k5314 in k5311 in k5308 in k5305 */
static void C_ccall f_16430(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[8],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_16430,2,t0,t1);}
if(C_truep(t1)){
t2=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_16437,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],tmp=(C_word)a,a+=4,tmp);
t3=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_16445,a[2]=((C_word*)t0)[2],a[3]=t2,tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 369  token-type");
f_15473(t3,((C_word*)t0)[2]);}
else{
C_trace("ChickenBridge.scm: 369  values");
C_values(5,0,((C_word*)t0)[3],C_SCHEME_FALSE,C_SCHEME_FALSE,((C_word*)((C_word*)t0)[4])[1]);}}

/* k16443 in k16428 in k16422 in k16412 in k16406 in k16400 in k16391 in k16388 in k16385 in parser in k15938 in k15869 in k15676 in k15673 in k15568 in k15517 in k7924 in k7921 in k5905 in k5612 in k5609 in k5605 in k5314 in k5311 in k5308 in k5305 */
static void C_ccall f_16445(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[5],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_16445,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_16449,a[2]=((C_word*)t0)[2],a[3]=t1,a[4]=((C_word*)t0)[3],tmp=(C_word)a,a+=5,tmp);
C_trace("ChickenBridge.scm: 369  token-string");
f_15491(t2,((C_word*)t0)[2]);}

/* k16447 in k16443 in k16428 in k16422 in k16412 in k16406 in k16400 in k16391 in k16388 in k16385 in parser in k15938 in k15869 in k15676 in k15673 in k15568 in k15517 in k7924 in k7921 in k5905 in k5612 in k5609 in k5605 in k5314 in k5311 in k5308 in k5305 */
static void C_ccall f_16449(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[5],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_16449,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_16453,a[2]=t1,a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],tmp=(C_word)a,a+=5,tmp);
C_trace("ChickenBridge.scm: 369  token-position");
f_15509(t2,((C_word*)t0)[2]);}

/* k16451 in k16447 in k16443 in k16428 in k16422 in k16412 in k16406 in k16400 in k16391 in k16388 in k16385 in parser in k15938 in k15869 in k15676 in k15673 in k15568 in k15517 in k7924 in k7921 in k5905 in k5612 in k5609 in k5605 in k5314 in k5311 in k5308 in k5305 */
static void C_ccall f_16453(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 369  make-parse-unit");
f_15873(((C_word*)t0)[4],((C_word*)t0)[3],((C_word*)t0)[2],t1);}

/* k16435 in k16428 in k16422 in k16412 in k16406 in k16400 in k16391 in k16388 in k16385 in parser in k15938 in k15869 in k15676 in k15673 in k15568 in k15517 in k7924 in k7921 in k5905 in k5612 in k5609 in k5605 in k5314 in k5311 in k5308 in k5305 */
static void C_ccall f_16437(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word *a;
t2=((C_word*)((C_word*)t0)[3])[1];
t3=(C_word)C_i_cdr(t2);
C_trace("ChickenBridge.scm: 369  values");
C_values(5,0,((C_word*)t0)[2],C_SCHEME_TRUE,t1,t3);}

/* simple-unit-emitter in k15938 in k15869 in k15676 in k15673 in k15568 in k15517 in k7924 in k7921 in k5905 in k5612 in k5609 in k5605 in k5314 in k5311 in k5308 in k5305 */
static void C_fcall f_16279(C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word ab[4],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_16279,NULL,2,t1,t2);}
t3=t1;
((C_proc2)(void*)(*((C_word*)t3+1)))(2,t3,(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_16281,a[2]=t2,a[3]=((C_word)li235),tmp=(C_word)a,a+=4,tmp));}

/* f_16281 in simple-unit-emitter in k15938 in k15869 in k15676 in k15673 in k15568 in k15517 in k7924 in k7921 in k5905 in k5612 in k5609 in k5605 in k5314 in k5311 in k5308 in k5305 */
static void C_ccall f_16281(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4){
C_word tmp;
C_word t5;
C_word t6;
C_word t7;
C_word ab[9],*a=ab;
if(c!=5) C_bad_argc_2(c,5,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr5,(void*)f_16281,5,t0,t1,t2,t3,t4);}
t5=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_16285,a[2]=((C_word*)t0)[2],a[3]=t1,a[4]=t4,a[5]=t3,tmp=(C_word)a,a+=6,tmp);
t6=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_16329,a[2]=t5,tmp=(C_word)a,a+=3,tmp);
C_trace("ChickenBridge.scm: 369  parse-unit-parsed");
f_15912(t6,t2);}

/* k16327 */
static void C_ccall f_16329(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 369  append");
t2=*((C_word*)lf[18]+1);
((C_proc4)C_retrieve_proc(t2))(4,t2,((C_word*)t0)[2],t1,C_SCHEME_END_OF_LIST);}

/* k16283 */
static void C_ccall f_16285(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_16285,2,t0,t1);}
t2=t1;
t3=(*a=C_VECTOR_TYPE|1,a[1]=t2,tmp=(C_word)a,a+=2,tmp);
t4=((C_word*)t3)[1];
t5=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_16288,a[2]=t3,a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=t4,tmp=(C_word)a,a+=7,tmp);
if(C_truep(((C_word*)t0)[2])){
t6=(C_word)C_i_set_car(((C_word*)t3)[1],((C_word*)t0)[2]);
t7=(C_word)C_i_cdr(((C_word*)t3)[1]);
t8=C_set_block_item(t3,0,t7);
t9=t5;
f_16288(t9,t8);}
else{
t6=t5;
f_16288(t6,C_SCHEME_UNDEFINED);}}

/* k16286 in k16283 */
static void C_fcall f_16288(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_16288,NULL,2,t0,t1);}
t2=C_SCHEME_UNDEFINED;
t3=(*a=C_VECTOR_TYPE|1,a[1]=t2,tmp=(C_word)a,a+=2,tmp);
t4=C_set_block_item(t3,0,(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_16293,a[2]=((C_word*)t0)[4],a[3]=((C_word*)t0)[5],a[4]=t3,a[5]=((C_word*)t0)[6],a[6]=((C_word)li234),tmp=(C_word)a,a+=7,tmp));
t5=((C_word*)t3)[1];
f_16293(t5,((C_word*)t0)[3],((C_word*)((C_word*)t0)[2])[1]);}

/* do2229 in k16286 in k16283 */
static void C_fcall f_16293(C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word t5;
C_word ab[5],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_16293,NULL,3,t0,t1,t2);}
if(C_truep((C_word)C_i_nullp(t2))){
t3=t1;
((C_proc2)(void*)(*((C_word*)t3+1)))(2,t3,((C_word*)t0)[5]);}
else{
t3=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_16314,a[2]=t1,a[3]=((C_word*)t0)[4],a[4]=t2,tmp=(C_word)a,a+=5,tmp);
t4=(C_word)C_i_car(t2);
C_trace("ChickenBridge.scm: 369  emit");
f_16030(t3,t4,((C_word*)t0)[3],((C_word*)t0)[2]);}}

/* k16312 in do2229 in k16286 in k16283 */
static void C_ccall f_16314(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word *a;
t2=(C_word)C_i_set_car(((C_word*)t0)[4],t1);
t3=(C_word)C_i_cdr(((C_word*)t0)[4]);
t4=((C_word*)((C_word*)t0)[3])[1];
f_16293(t4,((C_word*)t0)[2],t3);}

/* simple-unit-parser in k15938 in k15869 in k15676 in k15673 in k15568 in k15517 in k7924 in k7921 in k5905 in k5612 in k5609 in k5605 in k5314 in k5311 in k5308 in k5305 */
static void C_fcall f_16271(C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word ab[4],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_16271,NULL,2,t1,t2);}
t3=t1;
((C_proc2)(void*)(*((C_word*)t3+1)))(2,t3,(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_16273,a[2]=t2,a[3]=((C_word)li232),tmp=(C_word)a,a+=4,tmp));}

/* f_16273 in simple-unit-parser in k15938 in k15869 in k15676 in k15673 in k15568 in k15517 in k7924 in k7921 in k5905 in k5612 in k5609 in k5605 in k5314 in k5311 in k5308 in k5305 */
static void C_ccall f_16273(C_word c,C_word t0,C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word *a;
if(c!=4) C_bad_argc_2(c,4,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr4,(void*)f_16273,4,t0,t1,t2,t3);}
C_trace("ChickenBridge.scm: 369  make-parse-unit");
f_15873(t1,((C_word*)t0)[2],t2,C_SCHEME_FALSE);}

/* emit-list in k15938 in k15869 in k15676 in k15673 in k15568 in k15517 in k7924 in k7921 in k5905 in k5612 in k5609 in k5605 in k5314 in k5311 in k5308 in k5305 */
static void C_fcall f_16063(C_word t1,C_word t2,C_word t3,C_word t4){
C_word tmp;
C_word t5;
C_word t6;
C_word t7;
C_word ab[6],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_16063,NULL,4,t1,t2,t3,t4);}
if(C_truep((C_word)C_i_nullp(t2))){
t5=t1;
((C_proc2)(void*)(*((C_word*)t5+1)))(2,t5,C_SCHEME_END_OF_LIST);}
else{
t5=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_16080,a[2]=t4,a[3]=t3,a[4]=t2,a[5]=t1,tmp=(C_word)a,a+=6,tmp);
t6=(C_word)C_i_car(t2);
C_trace("ChickenBridge.scm: 369  emit");
f_16030(t5,t6,t3,t4);}}

/* k16078 in emit-list in k15938 in k15869 in k15676 in k15673 in k15568 in k15517 in k7924 in k7921 in k5905 in k5612 in k5609 in k5605 in k5314 in k5311 in k5308 in k5305 */
static void C_ccall f_16080(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[4],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_16080,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_16084,a[2]=t1,a[3]=((C_word*)t0)[5],tmp=(C_word)a,a+=4,tmp);
t3=(C_word)C_i_cdr(((C_word*)t0)[4]);
C_trace("ChickenBridge.scm: 369  emit-list");
f_16063(t2,t3,((C_word*)t0)[3],((C_word*)t0)[2]);}

/* k16082 in k16078 in emit-list in k15938 in k15869 in k15676 in k15673 in k15568 in k15517 in k7924 in k7921 in k5905 in k5612 in k5609 in k5605 in k5314 in k5311 in k5308 in k5305 */
static void C_ccall f_16084(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word ab[3],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_16084,2,t0,t1);}
t2=((C_word*)t0)[3];
((C_proc2)(void*)(*((C_word*)t2+1)))(2,t2,(C_word)C_a_i_cons(&a,2,((C_word*)t0)[2],t1));}

/* emit in k15938 in k15869 in k15676 in k15673 in k15568 in k15517 in k7924 in k7921 in k5905 in k5612 in k5609 in k5605 in k5314 in k5311 in k5308 in k5305 */
static void C_fcall f_16030(C_word t1,C_word t2,C_word t3,C_word t4){
C_word tmp;
C_word t5;
C_word t6;
C_word ab[6],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_16030,NULL,4,t1,t2,t3,t4);}
t5=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_16037,a[2]=t4,a[3]=t3,a[4]=t2,a[5]=t1,tmp=(C_word)a,a+=6,tmp);
C_trace("ChickenBridge.scm: 369  token-unit?");
f_15942(t5,t2);}

/* k16035 in emit in k15938 in k15869 in k15676 in k15673 in k15568 in k15517 in k7924 in k7921 in k5905 in k5612 in k5609 in k5605 in k5314 in k5311 in k5308 in k5305 */
static void C_ccall f_16037(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word ab[14],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_16037,2,t0,t1);}
if(C_truep(t1)){
t2=((C_word*)t0)[5];
t3=((C_word*)t0)[4];
t4=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_16108,a[2]=t3,a[3]=t2,tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 369  parse-unit-type");
f_15894(t4,t3);}
else{
t2=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_16046,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],tmp=(C_word)a,a+=6,tmp);
t3=((C_word*)t0)[4];
t4=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_15981,a[2]=t3,a[3]=t2,tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 369  parse-unit?");
f_15879(t4,t3);}}

/* k15979 in k16035 in emit in k15938 in k15869 in k15676 in k15673 in k15568 in k15517 in k7924 in k7921 in k5905 in k5612 in k5609 in k5605 in k5314 in k5311 in k5308 in k5305 */
static void C_ccall f_15981(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[3],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_15981,2,t0,t1);}
if(C_truep(t1)){
t2=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_15988,a[2]=((C_word*)t0)[3],tmp=(C_word)a,a+=3,tmp);
C_trace("ChickenBridge.scm: 369  parse-unit-type");
f_15894(t2,((C_word*)t0)[2]);}
else{
t2=((C_word*)t0)[3];
f_16046(2,t2,C_SCHEME_FALSE);}}

/* k15986 in k15979 in k16035 in emit in k15938 in k15869 in k15676 in k15673 in k15568 in k15517 in k7924 in k7921 in k5905 in k5612 in k5609 in k5605 in k5314 in k5311 in k5308 in k5305 */
static void C_ccall f_15988(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 369  SalRuleType?");
f_17152(((C_word*)t0)[2],t1);}

/* k16044 in k16035 in emit in k15938 in k15869 in k15676 in k15673 in k15568 in k15517 in k7924 in k7921 in k5905 in k5612 in k5609 in k5605 in k5314 in k5311 in k5308 in k5305 */
static void C_ccall f_16046(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_16046,2,t0,t1);}
if(C_truep(t1)){
t2=((C_word*)t0)[5];
t3=((C_word*)t0)[4];
t4=((C_word*)t0)[3];
t5=((C_word*)t0)[2];
t6=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_16246,a[2]=t5,a[3]=t4,a[4]=t3,a[5]=t2,tmp=(C_word)a,a+=6,tmp);
t7=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_16269,a[2]=t6,tmp=(C_word)a,a+=3,tmp);
C_trace("ChickenBridge.scm: 369  parse-unit-type");
f_15894(t7,t3);}
else{
if(C_truep((C_word)C_i_listp(((C_word*)t0)[4]))){
C_trace("ChickenBridge.scm: 369  emit-list");
f_16063(((C_word*)t0)[5],((C_word*)t0)[4],((C_word*)t0)[3],((C_word*)t0)[2]);}
else{
C_trace("ChickenBridge.scm: 369  error");
t2=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t2))(4,t2,((C_word*)t0)[5],lf[317],((C_word*)t0)[4]);}}}

/* k16267 in k16044 in k16035 in emit in k15938 in k15869 in k15676 in k15673 in k15568 in k15517 in k7924 in k7921 in k5905 in k5612 in k5609 in k5605 in k5314 in k5311 in k5308 in k5305 */
static void C_ccall f_16269(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 369  get-rule");
f_15680(((C_word*)t0)[2],t1,C_SCHEME_END_OF_LIST);}

/* k16244 in k16044 in k16035 in emit in k15938 in k15869 in k15676 in k15673 in k15568 in k15517 in k7924 in k7921 in k5905 in k5612 in k5609 in k5605 in k5314 in k5311 in k5308 in k5305 */
static void C_ccall f_16246(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[5],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_16246,2,t0,t1);}
t2=(C_word)C_i_check_structure(t1,lf[279]);
t3=(C_word)C_i_block_ref(t1,C_fix(5));
if(C_truep(t3)){
C_trace("ChickenBridge.scm: 369  meth");
t4=t3;
((C_proc5)C_retrieve_proc(t4))(5,t4,((C_word*)t0)[5],((C_word*)t0)[4],((C_word*)t0)[3],((C_word*)t0)[2]);}
else{
t4=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_16262,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[5],tmp=(C_word)a,a+=5,tmp);
C_trace("ChickenBridge.scm: 369  parse-unit-parsed");
f_15912(t4,((C_word*)t0)[4]);}}

/* k16260 in k16244 in k16044 in k16035 in emit in k15938 in k15869 in k15676 in k15673 in k15568 in k15517 in k7924 in k7921 in k5905 in k5612 in k5609 in k5605 in k5314 in k5311 in k5308 in k5305 */
static void C_ccall f_16262(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 369  emit");
f_16030(((C_word*)t0)[4],t1,((C_word*)t0)[3],((C_word*)t0)[2]);}

/* k16106 in k16035 in emit in k15938 in k15869 in k15676 in k15673 in k15568 in k15517 in k7924 in k7921 in k5905 in k5612 in k5609 in k5605 in k5314 in k5311 in k5308 in k5305 */
static void C_ccall f_16108(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[5],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_16108,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_16111,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=t1,tmp=(C_word)a,a+=5,tmp);
C_trace("ChickenBridge.scm: 369  parse-unit-parsed");
f_15912(t2,((C_word*)t0)[2]);}

/* k16109 in k16106 in k16035 in emit in k15938 in k15869 in k15676 in k15673 in k15568 in k15517 in k7924 in k7921 in k5905 in k5612 in k5609 in k5605 in k5314 in k5311 in k5308 in k5305 */
static void C_ccall f_16111(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word ab[6],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_16111,2,t0,t1);}
t2=((C_word*)t0)[4];
t3=(C_word)C_i_lessp(C_fix(2560),t2);
t4=(C_truep(t3)?(C_word)C_i_lessp(t2,C_fix(3584)):C_SCHEME_FALSE);
if(C_truep(t4)){
C_trace("ChickenBridge.scm: 369  string->number");
C_string_to_number(3,0,((C_word*)t0)[3],t1);}
else{
t5=((C_word*)t0)[4];
t6=(C_word)C_i_lessp(C_fix(13056),t5);
t7=(C_truep(t6)?(C_word)C_i_lessp(t5,C_fix(23808)):C_SCHEME_FALSE);
if(C_truep(t7)){
C_trace("ChickenBridge.scm: 369  string->symbol");
t8=*((C_word*)lf[307]+1);
((C_proc3)C_retrieve_proc(t8))(3,t8,((C_word*)t0)[3],t1);}
else{
t8=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_16135,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[4],a[4]=t1,a[5]=((C_word*)t0)[3],tmp=(C_word)a,a+=6,tmp);
C_trace("ChickenBridge.scm: 369  SalOpType?");
f_17050(t8,((C_word*)t0)[4]);}}}

/* k16133 in k16109 in k16106 in k16035 in emit in k15938 in k15869 in k15676 in k15673 in k15568 in k15517 in k7924 in k7921 in k5905 in k5612 in k5609 in k5605 in k5314 in k5311 in k5308 in k5305 */
static void C_ccall f_16135(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word ab[14],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_16135,2,t0,t1);}
if(C_truep(t1)){
t2=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_16141,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],tmp=(C_word)a,a+=5,tmp);
C_trace("ChickenBridge.scm: 369  SalType=?");
f_17164(t2,((C_word*)t0)[3],C_fix(7941));}
else{
t2=((C_word*)t0)[3];
t3=(C_word)C_i_lessp(C_fix(4096),t2);
t4=(C_truep(t3)?(C_word)C_i_lessp(t2,C_fix(4864)):C_SCHEME_FALSE);
if(C_truep(t4)){
t5=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_16186,a[2]=((C_word*)t0)[5],tmp=(C_word)a,a+=3,tmp);
C_trace("ChickenBridge.scm: 369  SalType=?");
f_17164(t5,((C_word*)t0)[3],C_fix(4352));}
else{
t5=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_16192,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[2],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],tmp=(C_word)a,a+=6,tmp);
C_trace("ChickenBridge.scm: 369  SalType=?");
f_17164(t5,((C_word*)t0)[3],C_fix(2304));}}}

/* k16190 in k16133 in k16109 in k16106 in k16035 in emit in k15938 in k15869 in k15676 in k15673 in k15568 in k15517 in k7924 in k7921 in k5905 in k5612 in k5609 in k5605 in k5314 in k5311 in k5308 in k5305 */
static void C_ccall f_16192(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[6],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_16192,2,t0,t1);}
if(C_truep(t1)){
t2=((C_word*)t0)[5];
((C_proc2)(void*)(*((C_word*)t2+1)))(2,t2,((C_word*)t0)[4]);}
else{
t2=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_16198,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],tmp=(C_word)a,a+=6,tmp);
C_trace("ChickenBridge.scm: 369  SalType=?");
f_17164(t2,((C_word*)t0)[2],C_fix(6144));}}

/* k16196 in k16190 in k16133 in k16109 in k16106 in k16035 in emit in k15938 in k15869 in k15676 in k15673 in k15568 in k15517 in k7924 in k7921 in k5905 in k5612 in k5609 in k5605 in k5314 in k5311 in k5308 in k5305 */
static void C_ccall f_16198(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[6],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_16198,2,t0,t1);}
if(C_truep(t1)){
C_trace("ChickenBridge.scm: 369  string->keyword");
t2=C_retrieve(lf[24]);
((C_proc3)C_retrieve_proc(t2))(3,t2,((C_word*)t0)[5],((C_word*)t0)[4]);}
else{
t2=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_16207,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],tmp=(C_word)a,a+=6,tmp);
C_trace("ChickenBridge.scm: 369  SalType=?");
f_17164(t2,((C_word*)t0)[2],C_fix(3840));}}

/* k16205 in k16196 in k16190 in k16133 in k16109 in k16106 in k16035 in emit in k15938 in k15869 in k15676 in k15673 in k15568 in k15517 in k7924 in k7921 in k5905 in k5612 in k5609 in k5605 in k5314 in k5311 in k5308 in k5305 */
static void C_ccall f_16207(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[6],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_16207,2,t0,t1);}
if(C_truep(t1)){
C_trace("ChickenBridge.scm: 369  string->keyword");
t2=C_retrieve(lf[24]);
((C_proc3)C_retrieve_proc(t2))(3,t2,((C_word*)t0)[5],((C_word*)t0)[4]);}
else{
t2=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_16216,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],tmp=(C_word)a,a+=6,tmp);
C_trace("ChickenBridge.scm: 369  SalType=?");
f_17164(t2,((C_word*)t0)[2],C_fix(6400));}}

/* k16214 in k16205 in k16196 in k16190 in k16133 in k16109 in k16106 in k16035 in emit in k15938 in k15869 in k15676 in k15673 in k15568 in k15517 in k7924 in k7921 in k5905 in k5612 in k5609 in k5605 in k5314 in k5311 in k5308 in k5305 */
static void C_ccall f_16216(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[6],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_16216,2,t0,t1);}
if(C_truep(t1)){
C_trace("ChickenBridge.scm: 369  string->symbol");
t2=*((C_word*)lf[307]+1);
((C_proc3)C_retrieve_proc(t2))(3,t2,((C_word*)t0)[5],((C_word*)t0)[4]);}
else{
t2=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_16225,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[3],a[5]=((C_word*)t0)[5],tmp=(C_word)a,a+=6,tmp);
C_trace("ChickenBridge.scm: 369  SalType=?");
f_17164(t2,((C_word*)t0)[2],C_fix(25344));}}

/* k16223 in k16214 in k16205 in k16196 in k16190 in k16133 in k16109 in k16106 in k16035 in emit in k15938 in k15869 in k15676 in k15673 in k15568 in k15517 in k7924 in k7921 in k5905 in k5612 in k5609 in k5605 in k5314 in k5311 in k5308 in k5305 */
static void C_ccall f_16225(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[5],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_16225,2,t0,t1);}
if(C_truep(t1)){
C_trace("ChickenBridge.scm: 369  error");
t2=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t2))(4,t2,((C_word*)t0)[5],lf[313],((C_word*)t0)[4]);}
else{
t2=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_16234,a[2]=((C_word*)t0)[4],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[5],tmp=(C_word)a,a+=5,tmp);
C_trace("ChickenBridge.scm: 369  SalType=?");
f_17164(t2,((C_word*)t0)[2],C_fix(25088));}}

/* k16232 in k16223 in k16214 in k16205 in k16196 in k16190 in k16133 in k16109 in k16106 in k16035 in emit in k15938 in k15869 in k15676 in k15673 in k15568 in k15517 in k7924 in k7921 in k5905 in k5612 in k5609 in k5605 in k5314 in k5311 in k5308 in k5305 */
static void C_ccall f_16234(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
if(C_truep(t1)){
C_trace("ChickenBridge.scm: 369  string->symbol");
t2=*((C_word*)lf[307]+1);
((C_proc3)C_retrieve_proc(t2))(3,t2,((C_word*)t0)[4],((C_word*)t0)[3]);}
else{
C_trace("ChickenBridge.scm: 369  error");
t2=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t2))(4,t2,((C_word*)t0)[4],lf[314],((C_word*)t0)[2]);}}

/* k16184 in k16133 in k16109 in k16106 in k16035 in emit in k15938 in k15869 in k15676 in k15673 in k15568 in k15517 in k7924 in k7921 in k5905 in k5612 in k5609 in k5605 in k5314 in k5311 in k5308 in k5305 */
static void C_ccall f_16186(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
t2=((C_word*)t0)[2];
((C_proc2)(void*)(*((C_word*)t2+1)))(2,t2,(C_truep(t1)?C_SCHEME_TRUE:C_SCHEME_FALSE));}

/* k16139 in k16133 in k16109 in k16106 in k16035 in emit in k15938 in k15869 in k15676 in k15673 in k15568 in k15517 in k7924 in k7921 in k5905 in k5612 in k5609 in k5605 in k5314 in k5311 in k5308 in k5305 */
static void C_ccall f_16141(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[5],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_16141,2,t0,t1);}
if(C_truep(t1)){
t2=((C_word*)t0)[4];
((C_proc2)(void*)(*((C_word*)t2+1)))(2,t2,lf[114]);}
else{
t2=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_16147,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],tmp=(C_word)a,a+=5,tmp);
C_trace("ChickenBridge.scm: 369  SalType=?");
f_17164(t2,((C_word*)t0)[2],C_fix(8199));}}

/* k16145 in k16139 in k16133 in k16109 in k16106 in k16035 in emit in k15938 in k15869 in k15676 in k15673 in k15568 in k15517 in k7924 in k7921 in k5905 in k5612 in k5609 in k5605 in k5314 in k5311 in k5308 in k5305 */
static void C_ccall f_16147(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[5],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_16147,2,t0,t1);}
if(C_truep(t1)){
t2=((C_word*)t0)[4];
((C_proc2)(void*)(*((C_word*)t2+1)))(2,t2,lf[308]);}
else{
t2=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_16153,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],tmp=(C_word)a,a+=5,tmp);
C_trace("ChickenBridge.scm: 369  SalType=?");
f_17164(t2,((C_word*)t0)[2],C_fix(10244));}}

/* k16151 in k16145 in k16139 in k16133 in k16109 in k16106 in k16035 in emit in k15938 in k15869 in k15676 in k15673 in k15568 in k15517 in k7924 in k7921 in k5905 in k5612 in k5609 in k5605 in k5314 in k5311 in k5308 in k5305 */
static void C_ccall f_16153(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[5],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_16153,2,t0,t1);}
if(C_truep(t1)){
t2=((C_word*)t0)[4];
((C_proc2)(void*)(*((C_word*)t2+1)))(2,t2,lf[309]);}
else{
t2=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_16159,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],tmp=(C_word)a,a+=5,tmp);
C_trace("ChickenBridge.scm: 369  SalType=?");
f_17164(t2,((C_word*)t0)[2],C_fix(8450));}}

/* k16157 in k16151 in k16145 in k16139 in k16133 in k16109 in k16106 in k16035 in emit in k15938 in k15869 in k15676 in k15673 in k15568 in k15517 in k7924 in k7921 in k5905 in k5612 in k5609 in k5605 in k5314 in k5311 in k5308 in k5305 */
static void C_ccall f_16159(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[5],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_16159,2,t0,t1);}
if(C_truep(t1)){
t2=((C_word*)t0)[4];
((C_proc2)(void*)(*((C_word*)t2+1)))(2,t2,lf[310]);}
else{
t2=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_16165,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],tmp=(C_word)a,a+=5,tmp);
C_trace("ChickenBridge.scm: 369  SalType=?");
f_17164(t2,((C_word*)t0)[2],C_fix(8705));}}

/* k16163 in k16157 in k16151 in k16145 in k16139 in k16133 in k16109 in k16106 in k16035 in emit in k15938 in k15869 in k15676 in k15673 in k15568 in k15517 in k7924 in k7921 in k5905 in k5612 in k5609 in k5605 in k5314 in k5311 in k5308 in k5305 */
static void C_ccall f_16165(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[4],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_16165,2,t0,t1);}
if(C_truep(t1)){
t2=((C_word*)t0)[4];
((C_proc2)(void*)(*((C_word*)t2+1)))(2,t2,lf[311]);}
else{
t2=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_16171,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 369  SalType=?");
f_17164(t2,((C_word*)t0)[2],C_fix(8963));}}

/* k16169 in k16163 in k16157 in k16151 in k16145 in k16139 in k16133 in k16109 in k16106 in k16035 in emit in k15938 in k15869 in k15676 in k15673 in k15568 in k15517 in k7924 in k7921 in k5905 in k5612 in k5609 in k5605 in k5314 in k5311 in k5308 in k5305 */
static void C_ccall f_16171(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
if(C_truep(t1)){
t2=((C_word*)t0)[3];
((C_proc2)(void*)(*((C_word*)t2+1)))(2,t2,lf[312]);}
else{
C_trace("ChickenBridge.scm: 369  string->symbol");
t2=*((C_word*)lf[307]+1);
((C_proc3)C_retrieve_proc(t2))(3,t2,((C_word*)t0)[3],((C_word*)t0)[2]);}}

/* set-emit-info! in k15938 in k15869 in k15676 in k15673 in k15568 in k15517 in k7924 in k7921 in k5905 in k5612 in k5609 in k5605 in k5314 in k5311 in k5308 in k5305 */
static void C_fcall f_16012(C_word t1,C_word t2,C_word t3,C_word t4){
C_word tmp;
C_word t5;
C_word t6;
C_word t7;
C_word ab[5],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_16012,NULL,4,t1,t2,t3,t4);}
t5=(C_word)C_i_assoc(t2,t4);
t6=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_16019,a[2]=t3,a[3]=t5,a[4]=t1,tmp=(C_word)a,a+=5,tmp);
if(C_truep(t5)){
t7=t6;
f_16019(2,t7,C_SCHEME_UNDEFINED);}
else{
C_trace("ChickenBridge.scm: 369  error");
t7=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t7))(4,t7,t6,lf[305],t2);}}

/* k16017 in set-emit-info! in k15938 in k15869 in k15676 in k15673 in k15568 in k15517 in k7924 in k7921 in k5905 in k5612 in k5609 in k5605 in k5314 in k5311 in k5308 in k5305 */
static void C_ccall f_16019(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
t2=((C_word*)t0)[4];
((C_proc2)(void*)(*((C_word*)t2+1)))(2,t2,(C_word)C_i_set_cdr(((C_word*)t0)[3],((C_word*)t0)[2]));}

/* add-emit-info in k15938 in k15869 in k15676 in k15673 in k15568 in k15517 in k7924 in k7921 in k5905 in k5612 in k5609 in k5605 in k5314 in k5311 in k5308 in k5305 */
static void C_fcall f_16002(C_word t1,C_word t2,C_word t3,C_word t4){
C_word tmp;
C_word t5;
C_word t6;
C_word ab[6],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_16002,NULL,4,t1,t2,t3,t4);}
t5=(C_word)C_a_i_cons(&a,2,t2,t3);
t6=t1;
((C_proc2)(void*)(*((C_word*)t6+1)))(2,t6,(C_word)C_a_i_cons(&a,2,t5,t4));}

/* get-emit-info in k15938 in k15869 in k15676 in k15673 in k15568 in k15517 in k7924 in k7921 in k5905 in k5612 in k5609 in k5605 in k5314 in k5311 in k5308 in k5305 */
static void C_fcall f_15990(C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word *a;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_15990,NULL,3,t1,t2,t3);}
t4=(C_word)C_i_assoc(t2,t3);
t5=t1;
((C_proc2)(void*)(*((C_word*)t5+1)))(2,t5,(C_truep(t4)?(C_word)C_i_cdr(t4):C_SCHEME_FALSE));}

/* token-unit-type=? in k15938 in k15869 in k15676 in k15673 in k15568 in k15517 in k7924 in k7921 in k5905 in k5612 in k5609 in k5605 in k5314 in k5311 in k5308 in k5305 */
static void C_fcall f_15958(C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word ab[5],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_15958,NULL,3,t1,t2,t3);}
t4=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_15965,a[2]=t2,a[3]=t3,a[4]=t1,tmp=(C_word)a,a+=5,tmp);
C_trace("ChickenBridge.scm: 369  token-unit?");
f_15942(t4,t2);}

/* k15963 in token-unit-type=? in k15938 in k15869 in k15676 in k15673 in k15568 in k15517 in k7924 in k7921 in k5905 in k5612 in k5609 in k5605 in k5314 in k5311 in k5308 in k5305 */
static void C_ccall f_15965(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[4],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_15965,2,t0,t1);}
if(C_truep(t1)){
t2=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_15972,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 369  parse-unit-type");
f_15894(t2,((C_word*)t0)[2]);}
else{
t2=((C_word*)t0)[4];
((C_proc2)(void*)(*((C_word*)t2+1)))(2,t2,C_SCHEME_FALSE);}}

/* k15970 in k15963 in token-unit-type=? in k15938 in k15869 in k15676 in k15673 in k15568 in k15517 in k7924 in k7921 in k5905 in k5612 in k5609 in k5605 in k5314 in k5311 in k5308 in k5305 */
static void C_ccall f_15972(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 369  SalType=?");
f_17164(((C_word*)t0)[3],t1,((C_word*)t0)[2]);}

/* token-unit? in k15938 in k15869 in k15676 in k15673 in k15568 in k15517 in k7924 in k7921 in k5905 in k5612 in k5609 in k5605 in k5314 in k5311 in k5308 in k5305 */
static void C_fcall f_15942(C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word ab[4],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_15942,NULL,2,t1,t2);}
t3=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_15949,a[2]=t2,a[3]=t1,tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 369  parse-unit?");
f_15879(t3,t2);}

/* k15947 in token-unit? in k15938 in k15869 in k15676 in k15673 in k15568 in k15517 in k7924 in k7921 in k5905 in k5612 in k5609 in k5605 in k5314 in k5311 in k5308 in k5305 */
static void C_ccall f_15949(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[3],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_15949,2,t0,t1);}
if(C_truep(t1)){
t2=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_15956,a[2]=((C_word*)t0)[3],tmp=(C_word)a,a+=3,tmp);
C_trace("ChickenBridge.scm: 369  parse-unit-type");
f_15894(t2,((C_word*)t0)[2]);}
else{
t2=((C_word*)t0)[3];
((C_proc2)(void*)(*((C_word*)t2+1)))(2,t2,C_SCHEME_FALSE);}}

/* k15954 in k15947 in token-unit? in k15938 in k15869 in k15676 in k15673 in k15568 in k15517 in k7924 in k7921 in k5905 in k5612 in k5609 in k5605 in k5314 in k5311 in k5308 in k5305 */
static void C_ccall f_15956(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 369  SalTokenType?");
f_17002(((C_word*)t0)[2],t1);}

/* parse-unit-position in k15869 in k15676 in k15673 in k15568 in k15517 in k7924 in k7921 in k5905 in k5612 in k5609 in k5605 in k5314 in k5311 in k5308 in k5305 */
static void C_fcall f_15930(C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word *a;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_15930,NULL,2,t1,t2);}
t3=(C_word)C_i_check_structure(t2,lf[293]);
t4=t1;
((C_proc2)(void*)(*((C_word*)t4+1)))(2,t4,(C_word)C_i_block_ref(t2,C_fix(3)));}

/* parse-unit-parsed in k15869 in k15676 in k15673 in k15568 in k15517 in k7924 in k7921 in k5905 in k5612 in k5609 in k5605 in k5314 in k5311 in k5308 in k5305 */
static void C_fcall f_15912(C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word *a;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_15912,NULL,2,t1,t2);}
t3=(C_word)C_i_check_structure(t2,lf[293]);
t4=t1;
((C_proc2)(void*)(*((C_word*)t4+1)))(2,t4,(C_word)C_i_block_ref(t2,C_fix(2)));}

/* parse-unit-type in k15869 in k15676 in k15673 in k15568 in k15517 in k7924 in k7921 in k5905 in k5612 in k5609 in k5605 in k5314 in k5311 in k5308 in k5305 */
static void C_fcall f_15894(C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word *a;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_15894,NULL,2,t1,t2);}
t3=(C_word)C_i_check_structure(t2,lf[293]);
t4=t1;
((C_proc2)(void*)(*((C_word*)t4+1)))(2,t4,(C_word)C_i_block_ref(t2,C_fix(1)));}

/* parse-unit? in k15869 in k15676 in k15673 in k15568 in k15517 in k7924 in k7921 in k5905 in k5612 in k5609 in k5605 in k5314 in k5311 in k5308 in k5305 */
static void C_fcall f_15879(C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word *a;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_15879,NULL,2,t1,t2);}
t3=t1;
((C_proc2)(void*)(*((C_word*)t3+1)))(2,t3,(C_word)C_i_structurep(t2,lf[293]));}

/* make-parse-unit in k15869 in k15676 in k15673 in k15568 in k15517 in k7924 in k7921 in k5905 in k5612 in k5609 in k5605 in k5314 in k5311 in k5308 in k5305 */
static void C_fcall f_15873(C_word t1,C_word t2,C_word t3,C_word t4){
C_word tmp;
C_word t5;
C_word ab[5],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_15873,NULL,4,t1,t2,t3,t4);}
t5=t1;
((C_proc2)(void*)(*((C_word*)t5+1)))(2,t5,(C_word)C_a_i_record(&a,4,lf[293],t2,t3,t4));}

/* parse-error-position in k15676 in k15673 in k15568 in k15517 in k7924 in k7921 in k5905 in k5612 in k5609 in k5605 in k5314 in k5311 in k5308 in k5305 */
static void C_fcall f_15861(C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word *a;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_15861,NULL,2,t1,t2);}
t3=(C_word)C_i_check_structure(t2,lf[289]);
t4=t1;
((C_proc2)(void*)(*((C_word*)t4+1)))(2,t4,(C_word)C_i_block_ref(t2,C_fix(2)));}

/* parse-error-string in k15676 in k15673 in k15568 in k15517 in k7924 in k7921 in k5905 in k5612 in k5609 in k5605 in k5314 in k5311 in k5308 in k5305 */
static void C_fcall f_15843(C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word *a;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_15843,NULL,2,t1,t2);}
t3=(C_word)C_i_check_structure(t2,lf[289]);
t4=t1;
((C_proc2)(void*)(*((C_word*)t4+1)))(2,t4,(C_word)C_i_block_ref(t2,C_fix(1)));}

/* make-parse-error in k15676 in k15673 in k15568 in k15517 in k7924 in k7921 in k5905 in k5612 in k5609 in k5605 in k5314 in k5311 in k5308 in k5305 */
static void C_fcall f_15822(C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word ab[4],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_15822,NULL,3,t1,t2,t3);}
t4=t1;
((C_proc2)(void*)(*((C_word*)t4+1)))(2,t4,(C_word)C_a_i_record(&a,3,lf[289],t2,t3));}

/* pattern-zero-or-more? in k15676 in k15673 in k15568 in k15517 in k7924 in k7921 in k5905 in k5612 in k5609 in k5605 in k5314 in k5311 in k5308 in k5305 */
static void C_fcall f_15790(C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word ab[4],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_15790,NULL,2,t1,t2);}
t3=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_15797,a[2]=t1,a[3]=t2,tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 369  pattern-clause?");
f_15704(t3,t2);}

/* k15795 in pattern-zero-or-more? in k15676 in k15673 in k15568 in k15517 in k7924 in k7921 in k5905 in k5612 in k5609 in k5605 in k5314 in k5311 in k5308 in k5305 */
static void C_ccall f_15797(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word *a;
if(C_truep(t1)){
t2=(C_word)C_i_car(((C_word*)t0)[3]);
t3=((C_word*)t0)[2];
((C_proc2)(void*)(*((C_word*)t3+1)))(2,t3,(C_word)C_eqp(t2,lf[95]));}
else{
t2=((C_word*)t0)[2];
((C_proc2)(void*)(*((C_word*)t2+1)))(2,t2,C_SCHEME_FALSE);}}

/* pattern-sub in k15676 in k15673 in k15568 in k15517 in k7924 in k7921 in k5905 in k5612 in k5609 in k5605 in k5314 in k5311 in k5308 in k5305 */
static void C_fcall f_15732(C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word ab[4],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_15732,NULL,3,t1,t2,t3);}
t4=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_15740,a[2]=t3,a[3]=t1,tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 369  pattern-subs");
f_15716(t4,t2);}

/* k15738 in pattern-sub in k15676 in k15673 in k15568 in k15517 in k7924 in k7921 in k5905 in k5612 in k5609 in k5605 in k5314 in k5311 in k5308 in k5305 */
static void C_ccall f_15740(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
t2=((C_word*)t0)[3];
((C_proc2)(void*)(*((C_word*)t2+1)))(2,t2,(C_word)C_i_list_ref(t1,((C_word*)t0)[2]));}

/* pattern-nsubs in k15676 in k15673 in k15568 in k15517 in k7924 in k7921 in k5905 in k5612 in k5609 in k5605 in k5314 in k5311 in k5308 in k5305 */
static void C_fcall f_15722(C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word ab[3],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_15722,NULL,2,t1,t2);}
t3=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_15730,a[2]=t1,tmp=(C_word)a,a+=3,tmp);
C_trace("ChickenBridge.scm: 369  pattern-subs");
f_15716(t3,t2);}

/* k15728 in pattern-nsubs in k15676 in k15673 in k15568 in k15517 in k7924 in k7921 in k5905 in k5612 in k5609 in k5605 in k5314 in k5311 in k5308 in k5305 */
static void C_ccall f_15730(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
t2=((C_word*)t0)[2];
((C_proc2)(void*)(*((C_word*)t2+1)))(2,t2,(C_word)C_i_length(t1));}

/* pattern-subs in k15676 in k15673 in k15568 in k15517 in k7924 in k7921 in k5905 in k5612 in k5609 in k5605 in k5314 in k5311 in k5308 in k5305 */
static void C_fcall f_15716(C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word *a;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_15716,NULL,2,t1,t2);}
t3=t1;
((C_proc2)(void*)(*((C_word*)t3+1)))(2,t3,(C_word)C_i_cdr(t2));}

/* pattern-clause? in k15676 in k15673 in k15568 in k15517 in k7924 in k7921 in k5905 in k5612 in k5609 in k5605 in k5314 in k5311 in k5308 in k5305 */
static void C_fcall f_15704(C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word *a;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_15704,NULL,2,t1,t2);}
t3=t1;
((C_proc2)(void*)(*((C_word*)t3+1)))(2,t3,(C_word)C_i_pairp(t2));}

/* pattern-value in k15676 in k15673 in k15568 in k15517 in k7924 in k7921 in k5905 in k5612 in k5609 in k5605 in k5314 in k5311 in k5308 in k5305 */
static void C_ccall f_15701(C_word c,C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word *a;
if(c!=3) C_bad_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr3,(void*)f_15701,3,t0,t1,t2);}
t3=t1;
((C_proc2)(void*)(*((C_word*)t3+1)))(2,t3,t2);}

/* get-rule in k15676 in k15673 in k15568 in k15517 in k7924 in k7921 in k5905 in k5612 in k5609 in k5605 in k5314 in k5311 in k5308 in k5305 */
static void C_fcall f_15680(C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word *a;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_15680,NULL,3,t1,t2,t3);}
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("ChickenBridge.scm: 369  hash-table-ref");
t4=*((C_word*)lf[41]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t1,C_retrieve2(lf[277],"*rules*"),t2);}
else{
C_trace("ChickenBridge.scm: 369  hash-table-ref/default");
t4=C_retrieve(lf[282]);
((C_proc4)C_retrieve_proc(t4))(4,t4,t1,C_retrieve2(lf[277],"*rules*"),t3);}}

/* rule-name in k15568 in k15517 in k7924 in k7921 in k5905 in k5612 in k5609 in k5605 in k5314 in k5311 in k5308 in k5305 */
static void C_fcall f_15593(C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word *a;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_15593,NULL,2,t1,t2);}
t3=(C_word)C_i_check_structure(t2,lf[279]);
t4=t1;
((C_proc2)(void*)(*((C_word*)t4+1)))(2,t4,(C_word)C_i_block_ref(t2,C_fix(1)));}

/* make-rule in k15568 in k15517 in k7924 in k7921 in k5905 in k5612 in k5609 in k5605 in k5314 in k5311 in k5308 in k5305 */
static void C_fcall f_15572(C_word t1,C_word t2,C_word t3,C_word t4,C_word t5,C_word t6){
C_word tmp;
C_word t7;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_15572,NULL,6,t1,t2,t3,t4,t5,t6);}
t7=t1;
((C_proc2)(void*)(*((C_word*)t7+1)))(2,t7,(C_word)C_a_i_record(&a,6,lf[279],t2,t3,t4,t5,t6));}

/* null-tokens? in k15517 in k7924 in k7921 in k5905 in k5612 in k5609 in k5605 in k5314 in k5311 in k5308 in k5305 */
static void C_fcall f_15562(C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word *a;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_15562,NULL,2,t1,t2);}
t3=t1;
((C_proc2)(void*)(*((C_word*)t3+1)))(2,t3,(C_word)C_i_nullp(t2));}

/* first-token in k15517 in k7924 in k7921 in k5905 in k5612 in k5609 in k5605 in k5314 in k5311 in k5308 in k5305 */
static void C_fcall f_15550(C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word *a;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_15550,NULL,2,t1,t2);}
t3=t1;
((C_proc2)(void*)(*((C_word*)t3+1)))(2,t3,(C_word)C_i_car(t2));}

/* list->token in k15517 in k7924 in k7921 in k5905 in k5612 in k5609 in k5605 in k5314 in k5311 in k5308 in k5305 */
static void C_ccall f_15521(C_word c,C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word *a;
if(c!=3) C_bad_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr3,(void*)f_15521,3,t0,t1,t2);}
t3=(C_word)C_i_car(t2);
t4=(C_word)C_eqp(t3,lf[274]);
if(C_truep(t4)){
t5=(C_word)C_i_cdr(t2);
C_apply(4,0,t1,C_retrieve2(lf[268],"make-token"),t5);}
else{
C_apply(4,0,t1,C_retrieve2(lf[268],"make-token"),t2);}}

/* token-position in k7924 in k7921 in k5905 in k5612 in k5609 in k5605 in k5314 in k5311 in k5308 in k5305 */
static void C_fcall f_15509(C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word *a;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_15509,NULL,2,t1,t2);}
t3=(C_word)C_i_check_structure(t2,lf[269]);
t4=t1;
((C_proc2)(void*)(*((C_word*)t4+1)))(2,t4,(C_word)C_i_block_ref(t2,C_fix(3)));}

/* token-string in k7924 in k7921 in k5905 in k5612 in k5609 in k5605 in k5314 in k5311 in k5308 in k5305 */
static void C_fcall f_15491(C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word *a;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_15491,NULL,2,t1,t2);}
t3=(C_word)C_i_check_structure(t2,lf[269]);
t4=t1;
((C_proc2)(void*)(*((C_word*)t4+1)))(2,t4,(C_word)C_i_block_ref(t2,C_fix(2)));}

/* token-type in k7924 in k7921 in k5905 in k5612 in k5609 in k5605 in k5314 in k5311 in k5308 in k5305 */
static void C_fcall f_15473(C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word *a;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_15473,NULL,2,t1,t2);}
t3=(C_word)C_i_check_structure(t2,lf[269]);
t4=t1;
((C_proc2)(void*)(*((C_word*)t4+1)))(2,t4,(C_word)C_i_block_ref(t2,C_fix(1)));}

/* make-token in k7924 in k7921 in k5905 in k5612 in k5609 in k5605 in k5314 in k5311 in k5308 in k5305 */
static void C_ccall f_15452(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4){
C_word tmp;
C_word t5;
C_word ab[5],*a=ab;
if(c!=5) C_bad_argc_2(c,5,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr5,(void*)f_15452,5,t0,t1,t2,t3,t4);}
t5=t1;
((C_proc2)(void*)(*((C_word*)t5+1)))(2,t5,(C_word)C_a_i_record(&a,4,lf[269],t2,t3,t4));}

/* next-in-graph in k7924 in k7921 in k5905 in k5612 in k5609 in k5605 in k5314 in k5311 in k5308 in k5305 */
static void C_ccall f_15358(C_word c,C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word ab[3],*a=ab;
if(c!=3) C_bad_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr3,(void*)f_15358,3,t0,t1,t2);}
t3=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_15362,a[2]=t1,tmp=(C_word)a,a+=3,tmp);
C_trace("ChickenBridge.scm: 368  pattern-data");
f_8953(t3,t2);}

/* k15360 in next-in-graph in k7924 in k7921 in k5905 in k5612 in k5609 in k5605 in k5314 in k5311 in k5308 in k5305 */
static void C_ccall f_15362(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word ab[5],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_15362,2,t0,t1);}
t2=(C_word)C_i_cdr(t1);
t3=(C_word)C_i_car(t1);
if(C_truep(t3)){
t4=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_15391,a[2]=t2,a[3]=((C_word*)t0)[2],a[4]=t1,tmp=(C_word)a,a+=5,tmp);
t5=(C_word)C_i_check_structure(t3,lf[260]);
t6=(C_word)C_i_block_ref(t3,C_fix(2));
C_trace("ChickenBridge.scm: 368  next-1");
f_9575(t4,t6);}
else{
t4=(C_word)C_i_car(t2);
t5=(C_word)C_i_set_car(t1,t4);
t6=(C_word)C_i_car(t2);
C_trace("ChickenBridge.scm: 368  graph-node-datum");
f_14777(((C_word*)t0)[2],t6);}}

/* k15389 in k15360 in next-in-graph in k7924 in k7921 in k5905 in k5612 in k5609 in k5605 in k5314 in k5311 in k5308 in k5305 */
static void C_ccall f_15391(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word ab[11],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_15391,2,t0,t1);}
t2=C_SCHEME_FALSE;
t3=(*a=C_VECTOR_TYPE|1,a[1]=t2,tmp=(C_word)a,a+=2,tmp);
t4=C_SCHEME_UNDEFINED;
t5=(*a=C_VECTOR_TYPE|1,a[1]=t4,tmp=(C_word)a,a+=2,tmp);
t6=C_set_block_item(t5,0,(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_15396,a[2]=t5,a[3]=t1,a[4]=((C_word*)t0)[4],a[5]=t3,a[6]=((C_word)li199),tmp=(C_word)a,a+=7,tmp));
t7=((C_word*)t5)[1];
f_15396(t7,((C_word*)t0)[3],((C_word*)t0)[2]);}

/* do1990 in k15389 in k15360 in next-in-graph in k7924 in k7921 in k5905 in k5612 in k5609 in k5605 in k5314 in k5311 in k5308 in k5305 */
static void C_fcall f_15396(C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word t14;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_15396,NULL,3,t0,t1,t2);}
t3=((C_word*)((C_word*)t0)[5])[1];
t4=(C_truep(t3)?t3:(C_word)C_i_nullp(t2));
if(C_truep(t4)){
t5=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_15406,a[2]=((C_word*)t0)[5],a[3]=t1,tmp=(C_word)a,a+=4,tmp);
t6=((C_word*)((C_word*)t0)[5])[1];
if(C_truep(t6)){
t7=t5;
f_15406(2,t7,(C_word)C_i_set_car(((C_word*)t0)[4],((C_word*)((C_word*)t0)[5])[1]));}
else{
C_trace("ChickenBridge.scm: 368  error");
t7=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t7))(4,t7,t5,lf[267],((C_word*)t0)[3]);}}
else{
t5=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_15421,a[2]=t1,a[3]=((C_word*)t0)[2],a[4]=t2,tmp=(C_word)a,a+=5,tmp);
t6=(C_word)C_i_car(t2);
t7=(C_word)C_i_check_structure(t6,lf[260]);
t8=(C_word)C_i_block_ref(t6,C_fix(3));
t9=(C_word)C_eqp(((C_word*)t0)[3],t8);
if(C_truep(t9)){
t10=(C_word)C_i_car(t2);
t11=C_mutate(((C_word *)((C_word*)t0)[5])+1,t10);
t12=t5;
f_15421(t12,t11);}
else{
t10=t5;
f_15421(t10,C_SCHEME_UNDEFINED);}}}

/* k15419 in do1990 in k15389 in k15360 in next-in-graph in k7924 in k7921 in k5905 in k5612 in k5609 in k5605 in k5314 in k5311 in k5308 in k5305 */
static void C_fcall f_15421(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word *a;
t2=(C_word)C_i_cdr(((C_word*)t0)[4]);
t3=((C_word*)((C_word*)t0)[3])[1];
f_15396(t3,((C_word*)t0)[2],t2);}

/* k15404 in do1990 in k15389 in k15360 in next-in-graph in k7924 in k7921 in k5905 in k5612 in k5609 in k5605 in k5314 in k5311 in k5308 in k5305 */
static void C_ccall f_15406(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 368  graph-node-datum");
f_14777(((C_word*)t0)[3],((C_word*)((C_word*)t0)[2])[1]);}

/* make-graph in k7924 in k7921 in k5905 in k5612 in k5609 in k5605 in k5314 in k5311 in k5308 in k5305 */
static void C_ccall f_14840(C_word c,C_word t0,C_word t1,C_word t2,...){
C_word tmp;
C_word t3;
va_list v;
C_word *a,c2=c;
C_save_rest(t2,c2,3);
if(c<3) C_bad_min_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_demand(c*C_SIZEOF_PAIR+17)){
C_save_and_reclaim((void*)tr3r,(void*)f_14840r,3,t0,t1,t2);}
else{
a=C_alloc((c-3)*3);
t3=C_restore_rest(a,C_rest_count(0));
f_14840r(t0,t1,t2,t3);}}

static void C_ccall f_14840r(C_word t0,C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word *a=C_alloc(17);
t4=(*a=C_VECTOR_TYPE|1,a[1]=t2,tmp=(C_word)a,a+=2,tmp);
t5=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_14844,a[2]=t1,a[3]=t4,a[4]=t3,tmp=(C_word)a,a+=5,tmp);
if(C_truep((C_word)C_i_pairp(((C_word*)t4)[1]))){
t6=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_15102,a[2]=t5,a[3]=t4,tmp=(C_word)a,a+=4,tmp);
t7=((C_word*)t4)[1];
t8=C_fix(1);
t9=(*a=C_VECTOR_TYPE|1,a[1]=t8,tmp=(C_word)a,a+=2,tmp);
t10=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_15111,a[2]=t9,a[3]=((C_word)li197),tmp=(C_word)a,a+=4,tmp);
C_trace("map");
t11=*((C_word*)lf[17]+1);
((C_proc4)(void*)(*((C_word*)t11+1)))(4,t11,t6,t10,t7);}
else{
C_trace("ChickenBridge.scm: 368  error");
t6=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t6))(4,t6,t5,lf[266],((C_word*)t4)[1]);}}

/* parse-graph-item in make-graph in k7924 in k7921 in k5905 in k5612 in k5609 in k5605 in k5314 in k5311 in k5308 in k5305 */
static void C_ccall f_15111(C_word c,C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word ab[5],*a=ab;
if(c!=3) C_bad_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr3,(void*)f_15111,3,t0,t1,t2);}
t3=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_15115,a[2]=t2,a[3]=t1,a[4]=((C_word*)t0)[2],tmp=(C_word)a,a+=5,tmp);
if(C_truep((C_word)C_i_pairp(t2))){
t4=t3;
f_15115(2,t4,C_SCHEME_UNDEFINED);}
else{
C_trace("ChickenBridge.scm: 368  error");
t4=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t3,lf[265],t2);}}

/* k15113 in parse-graph-item in make-graph in k7924 in k7921 in k5905 in k5612 in k5609 in k5605 in k5314 in k5311 in k5308 in k5305 */
static void C_ccall f_15115(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[4],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_15115,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_15120,a[2]=((C_word*)t0)[4],a[3]=((C_word)li196),tmp=(C_word)a,a+=4,tmp);
C_apply(4,0,((C_word*)t0)[3],t2,((C_word*)t0)[2]);}

/* a15119 in k15113 in parse-graph-item in make-graph in k7924 in k7921 in k5905 in k5612 in k5609 in k5605 in k5314 in k5311 in k5308 in k5305 */
static void C_ccall f_15120(C_word c,C_word t0,C_word t1,C_word t2,...){
C_word tmp;
C_word t3;
va_list v;
C_word *a,c2=c;
C_save_rest(t2,c2,3);
if(c<3) C_bad_min_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_demand(c*C_SIZEOF_PAIR+46)){
C_save_and_reclaim((void*)tr3r,(void*)f_15120r,3,t0,t1,t2);}
else{
a=C_alloc((c-3)*3);
t3=C_restore_rest(a,C_rest_count(0));
f_15120r(t0,t1,t2,t3);}}

static void C_ccall f_15120r(C_word t0,C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word t14;
C_word t15;
C_word t16;
C_word t17;
C_word t18;
C_word t19;
C_word t20;
C_word t21;
C_word t22;
C_word t23;
C_word *a=C_alloc(46);
t4=C_SCHEME_FALSE;
t5=(*a=C_VECTOR_TYPE|1,a[1]=t4,tmp=(C_word)a,a+=2,tmp);
t6=C_SCHEME_FALSE;
t7=(*a=C_VECTOR_TYPE|1,a[1]=t6,tmp=(C_word)a,a+=2,tmp);
t8=C_SCHEME_FALSE;
t9=(*a=C_VECTOR_TYPE|1,a[1]=t8,tmp=(C_word)a,a+=2,tmp);
t10=C_SCHEME_FALSE;
t11=(*a=C_VECTOR_TYPE|1,a[1]=t10,tmp=(C_word)a,a+=2,tmp);
t12=t3;
t13=(*a=C_VECTOR_TYPE|1,a[1]=t12,tmp=(C_word)a,a+=2,tmp);
t14=C_SCHEME_FALSE;
t15=(*a=C_VECTOR_TYPE|1,a[1]=t14,tmp=(C_word)a,a+=2,tmp);
t16=(*a=C_CLOSURE_TYPE|11,a[1]=(C_word)f_15124,a[2]=t11,a[3]=t15,a[4]=t9,a[5]=t3,a[6]=t13,a[7]=t7,a[8]=t5,a[9]=t2,a[10]=t1,a[11]=((C_word*)t0)[2],tmp=(C_word)a,a+=12,tmp);
if(C_truep((C_word)C_i_nullp(((C_word*)t13)[1]))){
t17=t16;
f_15124(t17,C_SCHEME_UNDEFINED);}
else{
t17=(C_word)C_i_car(((C_word*)t13)[1]);
t18=(C_word)C_eqp(t17,lf[263]);
if(C_truep(t18)){
t19=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_15262,a[2]=t3,a[3]=t16,a[4]=t13,a[5]=t15,a[6]=t9,a[7]=t5,tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)t9)[1])){
C_trace("error");
t20=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t20))(4,t20,t19,lf[19],lf[263]);}
else{
t20=t19;
f_15262(2,t20,C_SCHEME_UNDEFINED);}}
else{
t19=(C_word)C_eqp(t17,lf[264]);
if(C_truep(t19)){
t20=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_15297,a[2]=t3,a[3]=t16,a[4]=t13,a[5]=t15,a[6]=t11,a[7]=t7,tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)t11)[1])){
C_trace("error");
t21=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t21))(4,t21,t20,lf[19],lf[264]);}
else{
t21=t20;
f_15297(2,t21,C_SCHEME_UNDEFINED);}}
else{
t20=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_15326,a[2]=t16,a[3]=t9,a[4]=t5,a[5]=t13,tmp=(C_word)a,a+=6,tmp);
if(C_truep(((C_word*)t15)[1])){
C_trace("error");
t21=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t21))(4,t21,t20,lf[10],t3);}
else{
t21=t20;
f_15326(2,t21,C_SCHEME_UNDEFINED);}}}}}

/* k15324 in a15119 in k15113 in parse-graph-item in make-graph in k7924 in k7921 in k5905 in k5612 in k5609 in k5605 in k5314 in k5311 in k5308 in k5305 */
static void C_ccall f_15326(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_15326,2,t0,t1);}
t2=(C_word)C_i_car(((C_word*)((C_word*)t0)[5])[1]);
t3=C_mutate(((C_word *)((C_word*)t0)[4])+1,t2);
t4=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_15333,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[5],a[4]=((C_word*)t0)[3],tmp=(C_word)a,a+=5,tmp);
t5=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_15341,a[2]=((C_word*)t0)[4],a[3]=t4,tmp=(C_word)a,a+=4,tmp);
C_trace("keyword?");
t6=C_retrieve(lf[13]);
((C_proc3)C_retrieve_proc(t6))(3,t6,t5,((C_word*)((C_word*)t0)[4])[1]);}

/* k15339 in k15324 in a15119 in k15113 in parse-graph-item in make-graph in k7924 in k7921 in k5905 in k5612 in k5609 in k5605 in k5314 in k5311 in k5308 in k5305 */
static void C_ccall f_15341(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
if(C_truep(t1)){
C_trace("error");
t2=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t2))(4,t2,((C_word*)t0)[3],lf[14],((C_word*)((C_word*)t0)[2])[1]);}
else{
t2=((C_word*)t0)[3];
f_15333(2,t2,C_SCHEME_UNDEFINED);}}

/* k15331 in k15324 in a15119 in k15113 in parse-graph-item in make-graph in k7924 in k7921 in k5905 in k5612 in k5609 in k5605 in k5314 in k5311 in k5308 in k5305 */
static void C_ccall f_15333(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word *a;
t2=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[3])[1]);
t4=C_mutate(((C_word *)((C_word*)t0)[3])+1,t3);
t5=((C_word*)t0)[2];
f_15124(t5,t4);}

/* k15295 in a15119 in k15113 in parse-graph-item in make-graph in k7924 in k7921 in k5905 in k5612 in k5609 in k5605 in k5314 in k5311 in k5308 in k5305 */
static void C_ccall f_15297(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_15297,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_15301,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("error");
t4=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[21],((C_word*)t0)[2]);}
else{
t4=t2;
f_15301(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k15299 in k15295 in a15119 in k15113 in parse-graph-item in make-graph in k7924 in k7921 in k5905 in k5612 in k5609 in k5605 in k5314 in k5311 in k5308 in k5305 */
static void C_ccall f_15301(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_15124(t7,t6);}

/* k15260 in a15119 in k15113 in parse-graph-item in make-graph in k7924 in k7921 in k5905 in k5612 in k5609 in k5605 in k5314 in k5311 in k5308 in k5305 */
static void C_ccall f_15262(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_15262,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_15266,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("error");
t4=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[21],((C_word*)t0)[2]);}
else{
t4=t2;
f_15266(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k15264 in k15260 in a15119 in k15113 in parse-graph-item in make-graph in k7924 in k7921 in k5905 in k5612 in k5609 in k5605 in k5314 in k5311 in k5308 in k5305 */
static void C_ccall f_15266(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_15124(t7,t6);}

/* k15122 in a15119 in k15113 in parse-graph-item in make-graph in k7924 in k7921 in k5905 in k5612 in k5609 in k5605 in k5314 in k5311 in k5308 in k5305 */
static void C_fcall f_15124(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word ab[31],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_15124,NULL,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|8,a[1]=(C_word)f_15127,a[2]=((C_word*)t0)[5],a[3]=((C_word*)t0)[6],a[4]=((C_word*)t0)[7],a[5]=((C_word*)t0)[8],a[6]=((C_word*)t0)[9],a[7]=((C_word*)t0)[10],a[8]=((C_word*)t0)[11],tmp=(C_word)a,a+=9,tmp);
if(C_truep((C_word)C_i_nullp(((C_word*)((C_word*)t0)[6])[1]))){
t3=t2;
f_15127(t3,C_SCHEME_UNDEFINED);}
else{
t3=(C_word)C_i_car(((C_word*)((C_word*)t0)[6])[1]);
t4=(C_word)C_eqp(t3,lf[263]);
if(C_truep(t4)){
t5=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_15162,a[2]=((C_word*)t0)[5],a[3]=t2,a[4]=((C_word*)t0)[6],a[5]=((C_word*)t0)[3],a[6]=((C_word*)t0)[4],a[7]=((C_word*)t0)[8],tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)((C_word*)t0)[4])[1])){
C_trace("error");
t6=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t6))(4,t6,t5,lf[19],lf[263]);}
else{
t6=t5;
f_15162(2,t6,C_SCHEME_UNDEFINED);}}
else{
t5=(C_word)C_eqp(t3,lf[264]);
if(C_truep(t5)){
t6=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_15197,a[2]=((C_word*)t0)[5],a[3]=t2,a[4]=((C_word*)t0)[6],a[5]=((C_word*)t0)[3],a[6]=((C_word*)t0)[2],a[7]=((C_word*)t0)[7],tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)((C_word*)t0)[2])[1])){
C_trace("error");
t7=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t7))(4,t7,t6,lf[19],lf[264]);}
else{
t7=t6;
f_15197(2,t7,C_SCHEME_UNDEFINED);}}
else{
t6=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_15226,a[2]=t2,a[3]=((C_word*)t0)[2],a[4]=((C_word*)t0)[7],a[5]=((C_word*)t0)[6],tmp=(C_word)a,a+=6,tmp);
if(C_truep(((C_word*)((C_word*)t0)[3])[1])){
C_trace("error");
t7=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t7))(4,t7,t6,lf[10],((C_word*)t0)[5]);}
else{
t7=t6;
f_15226(2,t7,C_SCHEME_UNDEFINED);}}}}}

/* k15224 in k15122 in a15119 in k15113 in parse-graph-item in make-graph in k7924 in k7921 in k5905 in k5612 in k5609 in k5605 in k5314 in k5311 in k5308 in k5305 */
static void C_ccall f_15226(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_15226,2,t0,t1);}
t2=(C_word)C_i_car(((C_word*)((C_word*)t0)[5])[1]);
t3=C_mutate(((C_word *)((C_word*)t0)[4])+1,t2);
t4=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_15233,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[5],a[4]=((C_word*)t0)[3],tmp=(C_word)a,a+=5,tmp);
t5=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_15241,a[2]=((C_word*)t0)[4],a[3]=t4,tmp=(C_word)a,a+=4,tmp);
C_trace("keyword?");
t6=C_retrieve(lf[13]);
((C_proc3)C_retrieve_proc(t6))(3,t6,t5,((C_word*)((C_word*)t0)[4])[1]);}

/* k15239 in k15224 in k15122 in a15119 in k15113 in parse-graph-item in make-graph in k7924 in k7921 in k5905 in k5612 in k5609 in k5605 in k5314 in k5311 in k5308 in k5305 */
static void C_ccall f_15241(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
if(C_truep(t1)){
C_trace("error");
t2=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t2))(4,t2,((C_word*)t0)[3],lf[14],((C_word*)((C_word*)t0)[2])[1]);}
else{
t2=((C_word*)t0)[3];
f_15233(2,t2,C_SCHEME_UNDEFINED);}}

/* k15231 in k15224 in k15122 in a15119 in k15113 in parse-graph-item in make-graph in k7924 in k7921 in k5905 in k5612 in k5609 in k5605 in k5314 in k5311 in k5308 in k5305 */
static void C_ccall f_15233(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word *a;
t2=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[3])[1]);
t4=C_mutate(((C_word *)((C_word*)t0)[3])+1,t3);
t5=((C_word*)t0)[2];
f_15127(t5,t4);}

/* k15195 in k15122 in a15119 in k15113 in parse-graph-item in make-graph in k7924 in k7921 in k5905 in k5612 in k5609 in k5605 in k5314 in k5311 in k5308 in k5305 */
static void C_ccall f_15197(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_15197,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_15201,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("error");
t4=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[21],((C_word*)t0)[2]);}
else{
t4=t2;
f_15201(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k15199 in k15195 in k15122 in a15119 in k15113 in parse-graph-item in make-graph in k7924 in k7921 in k5905 in k5612 in k5609 in k5605 in k5314 in k5311 in k5308 in k5305 */
static void C_ccall f_15201(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_15127(t7,t6);}

/* k15160 in k15122 in a15119 in k15113 in parse-graph-item in make-graph in k7924 in k7921 in k5905 in k5612 in k5609 in k5605 in k5314 in k5311 in k5308 in k5305 */
static void C_ccall f_15162(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_15162,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_15166,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("error");
t4=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[21],((C_word*)t0)[2]);}
else{
t4=t2;
f_15166(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k15164 in k15160 in k15122 in a15119 in k15113 in parse-graph-item in make-graph in k7924 in k7921 in k5905 in k5612 in k5609 in k5605 in k5314 in k5311 in k5308 in k5305 */
static void C_ccall f_15166(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_15127(t7,t6);}

/* k15125 in k15122 in a15119 in k15113 in parse-graph-item in make-graph in k7924 in k7921 in k5905 in k5612 in k5609 in k5605 in k5314 in k5311 in k5308 in k5305 */
static void C_fcall f_15127(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_15127,NULL,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_15130,a[2]=((C_word*)t0)[4],a[3]=((C_word*)t0)[5],a[4]=((C_word*)t0)[6],a[5]=((C_word*)t0)[7],a[6]=((C_word*)t0)[8],tmp=(C_word)a,a+=7,tmp);
if(C_truep((C_word)C_i_nullp(((C_word*)((C_word*)t0)[3])[1]))){
t3=t2;
f_15130(2,t3,C_SCHEME_UNDEFINED);}
else{
C_trace("error");
t3=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t3))(4,t3,t2,lf[5],((C_word*)t0)[2]);}}

/* k15128 in k15125 in k15122 in a15119 in k15113 in parse-graph-item in make-graph in k7924 in k7921 in k5905 in k5612 in k5609 in k5605 in k5314 in k5311 in k5308 in k5305 */
static void C_ccall f_15130(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_15130,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_15133,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],tmp=(C_word)a,a+=7,tmp);
if(C_truep(((C_word*)((C_word*)t0)[2])[1])){
t3=t2;
f_15133(t3,C_SCHEME_UNDEFINED);}
else{
t3=C_mutate(((C_word *)((C_word*)t0)[2])+1,((C_word*)((C_word*)t0)[6])[1]);
t4=t2;
f_15133(t4,t3);}}

/* k15131 in k15128 in k15125 in k15122 in a15119 in k15113 in parse-graph-item in make-graph in k7924 in k7921 in k5905 in k5612 in k5609 in k5605 in k5314 in k5311 in k5308 in k5305 */
static void C_fcall f_15133(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_15133,NULL,2,t0,t1);}
t2=(C_word)C_a_i_plus(&a,2,((C_word*)((C_word*)t0)[6])[1],C_fix(1));
t3=C_mutate(((C_word *)((C_word*)t0)[6])+1,t2);
t4=((C_word*)t0)[5];
t5=((C_word*)t0)[4];
t6=((C_word*)((C_word*)t0)[3])[1];
t7=((C_word*)((C_word*)t0)[2])[1];
t8=t4;
((C_proc2)(void*)(*((C_word*)t8+1)))(2,t8,(C_word)C_a_i_record(&a,4,lf[260],t5,t6,t7));}

/* k15100 in make-graph in k7924 in k7921 in k5905 in k5612 in k5609 in k5605 in k5314 in k5311 in k5308 in k5305 */
static void C_ccall f_15102(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[3])+1,t1);
t3=((C_word*)t0)[2];
f_14844(2,t3,t2);}

/* k14842 in make-graph in k7924 in k7921 in k5905 in k5612 in k5609 in k5605 in k5314 in k5311 in k5308 in k5305 */
static void C_ccall f_14844(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word t14;
C_word t15;
C_word t16;
C_word t17;
C_word t18;
C_word t19;
C_word t20;
C_word t21;
C_word ab[45],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_14844,2,t0,t1);}
t2=C_SCHEME_FALSE;
t3=(*a=C_VECTOR_TYPE|1,a[1]=t2,tmp=(C_word)a,a+=2,tmp);
t4=C_SCHEME_FALSE;
t5=(*a=C_VECTOR_TYPE|1,a[1]=t4,tmp=(C_word)a,a+=2,tmp);
t6=C_SCHEME_FALSE;
t7=(*a=C_VECTOR_TYPE|1,a[1]=t6,tmp=(C_word)a,a+=2,tmp);
t8=C_SCHEME_FALSE;
t9=(*a=C_VECTOR_TYPE|1,a[1]=t8,tmp=(C_word)a,a+=2,tmp);
t10=((C_word*)t0)[4];
t11=(*a=C_VECTOR_TYPE|1,a[1]=t10,tmp=(C_word)a,a+=2,tmp);
t12=C_SCHEME_FALSE;
t13=(*a=C_VECTOR_TYPE|1,a[1]=t12,tmp=(C_word)a,a+=2,tmp);
t14=(*a=C_CLOSURE_TYPE|10,a[1]=(C_word)f_14847,a[2]=t9,a[3]=t13,a[4]=t7,a[5]=((C_word*)t0)[4],a[6]=t11,a[7]=t5,a[8]=t3,a[9]=((C_word*)t0)[2],a[10]=((C_word*)t0)[3],tmp=(C_word)a,a+=11,tmp);
if(C_truep((C_word)C_i_nullp(((C_word*)t11)[1]))){
t15=t14;
f_14847(t15,C_SCHEME_UNDEFINED);}
else{
t15=(C_word)C_i_car(((C_word*)t11)[1]);
t16=(C_word)C_eqp(t15,lf[216]);
if(C_truep(t16)){
t17=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_15007,a[2]=((C_word*)t0)[4],a[3]=t14,a[4]=t11,a[5]=t13,a[6]=t7,a[7]=t3,tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)t7)[1])){
C_trace("ChickenBridge.scm: 368  error");
t18=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t18))(4,t18,t17,lf[19],lf[216]);}
else{
t18=t17;
f_15007(2,t18,C_SCHEME_UNDEFINED);}}
else{
t17=(C_word)C_eqp(t15,lf[217]);
if(C_truep(t17)){
t18=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_15042,a[2]=((C_word*)t0)[4],a[3]=t14,a[4]=t11,a[5]=t13,a[6]=t9,a[7]=t5,tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)t9)[1])){
C_trace("ChickenBridge.scm: 368  error");
t19=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t19))(4,t19,t18,lf[19],lf[217]);}
else{
t19=t18;
f_15042(2,t19,C_SCHEME_UNDEFINED);}}
else{
t18=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_15071,a[2]=t14,a[3]=t7,a[4]=t3,a[5]=t11,tmp=(C_word)a,a+=6,tmp);
if(C_truep(((C_word*)t13)[1])){
C_trace("ChickenBridge.scm: 368  error");
t19=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t19))(4,t19,t18,lf[10],((C_word*)t0)[4]);}
else{
t19=t18;
f_15071(2,t19,C_SCHEME_UNDEFINED);}}}}}

/* k15069 in k14842 in make-graph in k7924 in k7921 in k5905 in k5612 in k5609 in k5605 in k5314 in k5311 in k5308 in k5305 */
static void C_ccall f_15071(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_15071,2,t0,t1);}
t2=(C_word)C_i_car(((C_word*)((C_word*)t0)[5])[1]);
t3=C_mutate(((C_word *)((C_word*)t0)[4])+1,t2);
t4=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_15078,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[5],a[4]=((C_word*)t0)[3],tmp=(C_word)a,a+=5,tmp);
t5=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_15086,a[2]=((C_word*)t0)[4],a[3]=t4,tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 368  keyword?");
t6=C_retrieve(lf[13]);
((C_proc3)C_retrieve_proc(t6))(3,t6,t5,((C_word*)((C_word*)t0)[4])[1]);}

/* k15084 in k15069 in k14842 in make-graph in k7924 in k7921 in k5905 in k5612 in k5609 in k5605 in k5314 in k5311 in k5308 in k5305 */
static void C_ccall f_15086(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
if(C_truep(t1)){
C_trace("ChickenBridge.scm: 368  error");
t2=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t2))(4,t2,((C_word*)t0)[3],lf[14],((C_word*)((C_word*)t0)[2])[1]);}
else{
t2=((C_word*)t0)[3];
f_15078(2,t2,C_SCHEME_UNDEFINED);}}

/* k15076 in k15069 in k14842 in make-graph in k7924 in k7921 in k5905 in k5612 in k5609 in k5605 in k5314 in k5311 in k5308 in k5305 */
static void C_ccall f_15078(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word *a;
t2=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[3])[1]);
t4=C_mutate(((C_word *)((C_word*)t0)[3])+1,t3);
t5=((C_word*)t0)[2];
f_14847(t5,t4);}

/* k15040 in k14842 in make-graph in k7924 in k7921 in k5905 in k5612 in k5609 in k5605 in k5314 in k5311 in k5308 in k5305 */
static void C_ccall f_15042(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_15042,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_15046,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("ChickenBridge.scm: 368  error");
t4=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[21],((C_word*)t0)[2]);}
else{
t4=t2;
f_15046(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k15044 in k15040 in k14842 in make-graph in k7924 in k7921 in k5905 in k5612 in k5609 in k5605 in k5314 in k5311 in k5308 in k5305 */
static void C_ccall f_15046(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_14847(t7,t6);}

/* k15005 in k14842 in make-graph in k7924 in k7921 in k5905 in k5612 in k5609 in k5605 in k5314 in k5311 in k5308 in k5305 */
static void C_ccall f_15007(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_15007,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_15011,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("ChickenBridge.scm: 368  error");
t4=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[21],((C_word*)t0)[2]);}
else{
t4=t2;
f_15011(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k15009 in k15005 in k14842 in make-graph in k7924 in k7921 in k5905 in k5612 in k5609 in k5605 in k5314 in k5311 in k5308 in k5305 */
static void C_ccall f_15011(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_14847(t7,t6);}

/* k14845 in k14842 in make-graph in k7924 in k7921 in k5905 in k5612 in k5609 in k5605 in k5314 in k5311 in k5308 in k5305 */
static void C_fcall f_14847(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word ab[30],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_14847,NULL,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_14850,a[2]=((C_word*)t0)[5],a[3]=((C_word*)t0)[6],a[4]=((C_word*)t0)[7],a[5]=((C_word*)t0)[8],a[6]=((C_word*)t0)[9],a[7]=((C_word*)t0)[10],tmp=(C_word)a,a+=8,tmp);
if(C_truep((C_word)C_i_nullp(((C_word*)((C_word*)t0)[6])[1]))){
t3=t2;
f_14850(t3,C_SCHEME_UNDEFINED);}
else{
t3=(C_word)C_i_car(((C_word*)((C_word*)t0)[6])[1]);
t4=(C_word)C_eqp(t3,lf[216]);
if(C_truep(t4)){
t5=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_14907,a[2]=((C_word*)t0)[5],a[3]=t2,a[4]=((C_word*)t0)[6],a[5]=((C_word*)t0)[3],a[6]=((C_word*)t0)[4],a[7]=((C_word*)t0)[8],tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)((C_word*)t0)[4])[1])){
C_trace("ChickenBridge.scm: 368  error");
t6=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t6))(4,t6,t5,lf[19],lf[216]);}
else{
t6=t5;
f_14907(2,t6,C_SCHEME_UNDEFINED);}}
else{
t5=(C_word)C_eqp(t3,lf[217]);
if(C_truep(t5)){
t6=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_14942,a[2]=((C_word*)t0)[5],a[3]=t2,a[4]=((C_word*)t0)[6],a[5]=((C_word*)t0)[3],a[6]=((C_word*)t0)[2],a[7]=((C_word*)t0)[7],tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)((C_word*)t0)[2])[1])){
C_trace("ChickenBridge.scm: 368  error");
t7=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t7))(4,t7,t6,lf[19],lf[217]);}
else{
t7=t6;
f_14942(2,t7,C_SCHEME_UNDEFINED);}}
else{
t6=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_14971,a[2]=t2,a[3]=((C_word*)t0)[2],a[4]=((C_word*)t0)[7],a[5]=((C_word*)t0)[6],tmp=(C_word)a,a+=6,tmp);
if(C_truep(((C_word*)((C_word*)t0)[3])[1])){
C_trace("ChickenBridge.scm: 368  error");
t7=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t7))(4,t7,t6,lf[10],((C_word*)t0)[5]);}
else{
t7=t6;
f_14971(2,t7,C_SCHEME_UNDEFINED);}}}}}

/* k14969 in k14845 in k14842 in make-graph in k7924 in k7921 in k5905 in k5612 in k5609 in k5605 in k5314 in k5311 in k5308 in k5305 */
static void C_ccall f_14971(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_14971,2,t0,t1);}
t2=(C_word)C_i_car(((C_word*)((C_word*)t0)[5])[1]);
t3=C_mutate(((C_word *)((C_word*)t0)[4])+1,t2);
t4=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_14978,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[5],a[4]=((C_word*)t0)[3],tmp=(C_word)a,a+=5,tmp);
t5=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_14986,a[2]=((C_word*)t0)[4],a[3]=t4,tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 368  keyword?");
t6=C_retrieve(lf[13]);
((C_proc3)C_retrieve_proc(t6))(3,t6,t5,((C_word*)((C_word*)t0)[4])[1]);}

/* k14984 in k14969 in k14845 in k14842 in make-graph in k7924 in k7921 in k5905 in k5612 in k5609 in k5605 in k5314 in k5311 in k5308 in k5305 */
static void C_ccall f_14986(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
if(C_truep(t1)){
C_trace("ChickenBridge.scm: 368  error");
t2=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t2))(4,t2,((C_word*)t0)[3],lf[14],((C_word*)((C_word*)t0)[2])[1]);}
else{
t2=((C_word*)t0)[3];
f_14978(2,t2,C_SCHEME_UNDEFINED);}}

/* k14976 in k14969 in k14845 in k14842 in make-graph in k7924 in k7921 in k5905 in k5612 in k5609 in k5605 in k5314 in k5311 in k5308 in k5305 */
static void C_ccall f_14978(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word *a;
t2=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[3])[1]);
t4=C_mutate(((C_word *)((C_word*)t0)[3])+1,t3);
t5=((C_word*)t0)[2];
f_14850(t5,t4);}

/* k14940 in k14845 in k14842 in make-graph in k7924 in k7921 in k5905 in k5612 in k5609 in k5605 in k5314 in k5311 in k5308 in k5305 */
static void C_ccall f_14942(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_14942,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_14946,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("ChickenBridge.scm: 368  error");
t4=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[21],((C_word*)t0)[2]);}
else{
t4=t2;
f_14946(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k14944 in k14940 in k14845 in k14842 in make-graph in k7924 in k7921 in k5905 in k5612 in k5609 in k5605 in k5314 in k5311 in k5308 in k5305 */
static void C_ccall f_14946(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_14850(t7,t6);}

/* k14905 in k14845 in k14842 in make-graph in k7924 in k7921 in k5905 in k5612 in k5609 in k5605 in k5314 in k5311 in k5308 in k5305 */
static void C_ccall f_14907(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_14907,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_14911,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("ChickenBridge.scm: 368  error");
t4=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[21],((C_word*)t0)[2]);}
else{
t4=t2;
f_14911(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k14909 in k14905 in k14845 in k14842 in make-graph in k7924 in k7921 in k5905 in k5612 in k5609 in k5605 in k5314 in k5311 in k5308 in k5305 */
static void C_ccall f_14911(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_14850(t7,t6);}

/* k14848 in k14845 in k14842 in make-graph in k7924 in k7921 in k5905 in k5612 in k5609 in k5605 in k5314 in k5311 in k5308 in k5305 */
static void C_fcall f_14850(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[6],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_14850,NULL,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_14853,a[2]=((C_word*)t0)[4],a[3]=((C_word*)t0)[5],a[4]=((C_word*)t0)[6],a[5]=((C_word*)t0)[7],tmp=(C_word)a,a+=6,tmp);
if(C_truep((C_word)C_i_nullp(((C_word*)((C_word*)t0)[3])[1]))){
t3=t2;
f_14853(2,t3,C_SCHEME_UNDEFINED);}
else{
C_trace("ChickenBridge.scm: 368  error");
t3=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t3))(4,t3,t2,lf[5],((C_word*)t0)[2]);}}

/* k14851 in k14848 in k14845 in k14842 in make-graph in k7924 in k7921 in k5905 in k5612 in k5609 in k5605 in k5314 in k5311 in k5308 in k5305 */
static void C_ccall f_14853(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[6],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_14853,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_14856,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],tmp=(C_word)a,a+=6,tmp);
C_trace("ChickenBridge.scm: 368  %alloc-pattern");
f_9224(t2);}

/* k14854 in k14851 in k14848 in k14845 in k14842 in make-graph in k7924 in k7921 in k5905 in k5612 in k5609 in k5605 in k5314 in k5311 in k5308 in k5305 */
static void C_ccall f_14856(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[10],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_14856,2,t0,t1);}
t2=(C_word)C_i_length(((C_word*)((C_word*)t0)[5])[1]);
t3=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_14862,a[2]=t1,a[3]=((C_word*)t0)[4],tmp=(C_word)a,a+=4,tmp);
t4=(C_word)C_a_i_cons(&a,2,C_SCHEME_FALSE,((C_word*)((C_word*)t0)[5])[1]);
t5=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_14868,a[2]=((C_word)li195),tmp=(C_word)a,a+=3,tmp);
C_trace("ChickenBridge.scm: 368  initialize-pattern");
f_9234(t3,t1,t4,((C_word*)((C_word*)t0)[3])[1],((C_word*)((C_word*)t0)[2])[1],C_fix(0),t2,t2,C_retrieve2(lf[262],"next-in-graph"),t5);}

/* a14867 in k14854 in k14851 in k14848 in k14845 in k14842 in make-graph in k7924 in k7921 in k5905 in k5612 in k5609 in k5605 in k5314 in k5311 in k5308 in k5305 */
static void C_ccall f_14868(C_word c,C_word t0,C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word t6;
C_word ab[7],*a=ab;
if(c!=4) C_bad_argc_2(c,4,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr4,(void*)f_14868,4,t0,t1,t2,t3);}
t4=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_14874,a[2]=((C_word)li194),tmp=(C_word)a,a+=3,tmp);
t5=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_14886,a[2]=t4,a[3]=t1,tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 368  pattern-data");
f_8953(t5,t3);}

/* k14884 in a14867 in k14854 in k14851 in k14848 in k14845 in k14842 in make-graph in k7924 in k7921 in k5905 in k5612 in k5609 in k5605 in k5314 in k5311 in k5308 in k5305 */
static void C_ccall f_14886(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word *a;
t2=(C_word)C_i_cdr(t1);
C_trace("for-each");
t3=*((C_word*)lf[214]+1);
((C_proc4)(void*)(*((C_word*)t3+1)))(4,t3,((C_word*)t0)[3],((C_word*)t0)[2],t2);}

/* a14873 in a14867 in k14854 in k14851 in k14848 in k14845 in k14842 in make-graph in k7924 in k7921 in k5905 in k5612 in k5609 in k5605 in k5314 in k5311 in k5308 in k5305 */
static void C_ccall f_14874(C_word c,C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word *a;
if(c!=3) C_bad_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr3,(void*)f_14874,3,t0,t1,t2);}
C_trace("ChickenBridge.scm: 368  graph-node-datum");
f_14777(t1,t2);}

/* k14860 in k14854 in k14851 in k14848 in k14845 in k14842 in make-graph in k7924 in k7921 in k5905 in k5612 in k5609 in k5605 in k5314 in k5311 in k5308 in k5305 */
static void C_ccall f_14862(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
t2=((C_word*)t0)[3];
((C_proc2)(void*)(*((C_word*)t2+1)))(2,t2,((C_word*)t0)[2]);}

/* graph-node-datum in k7924 in k7921 in k5905 in k5612 in k5609 in k5605 in k5314 in k5311 in k5308 in k5305 */
static void C_fcall f_14777(C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word *a;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_14777,NULL,2,t1,t2);}
t3=(C_word)C_i_check_structure(t2,lf[260]);
t4=t1;
((C_proc2)(void*)(*((C_word*)t4+1)))(2,t4,(C_word)C_i_block_ref(t2,C_fix(1)));}

/* next-in-markov in k7924 in k7921 in k5905 in k5612 in k5609 in k5605 in k5314 in k5311 in k5308 in k5305 */
static void C_ccall f_14437(C_word c,C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word ab[11],*a=ab;
if(c!=3) C_bad_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr3,(void*)f_14437,3,t0,t1,t2);}
t3=C_SCHEME_UNDEFINED;
t4=(*a=C_VECTOR_TYPE|1,a[1]=t3,tmp=(C_word)a,a+=2,tmp);
t5=C_set_block_item(t4,0,(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_14440,a[2]=t4,a[3]=((C_word)li188),tmp=(C_word)a,a+=4,tmp));
t6=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_14619,a[2]=t1,a[3]=t4,a[4]=t2,tmp=(C_word)a,a+=5,tmp);
C_trace("ChickenBridge.scm: 368  pattern-data");
f_8953(t6,t2);}

/* k14617 in next-in-markov in k7924 in k7921 in k5905 in k5612 in k5609 in k5605 in k5314 in k5311 in k5308 in k5305 */
static void C_ccall f_14619(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[6],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_14619,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_14623,a[2]=t1,a[3]=((C_word*)t0)[2],a[4]=((C_word*)t0)[3],a[5]=((C_word*)t0)[4],tmp=(C_word)a,a+=6,tmp);
C_trace("ChickenBridge.scm: 368  pattern-cache");
f_9169(t2,((C_word*)t0)[4]);}

/* k14621 in k14617 in next-in-markov in k7924 in k7921 in k5905 in k5612 in k5609 in k5605 in k5314 in k5311 in k5308 in k5305 */
static void C_ccall f_14623(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[8],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_14623,2,t0,t1);}
t2=C_SCHEME_UNDEFINED;
t3=(*a=C_VECTOR_TYPE|1,a[1]=t2,tmp=(C_word)a,a+=2,tmp);
t4=C_set_block_item(t3,0,(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_14625,a[2]=t3,a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word)li191),tmp=(C_word)a,a+=6,tmp));
t5=((C_word*)t3)[1];
f_14625(t5,((C_word*)t0)[3],((C_word*)t0)[2],t1,C_SCHEME_FALSE);}

/* do1831 in k14621 in k14617 in next-in-markov in k7924 in k7921 in k5905 in k5612 in k5609 in k5605 in k5314 in k5311 in k5308 in k5305 */
static void C_fcall f_14625(C_word t0,C_word t1,C_word t2,C_word t3,C_word t4){
C_word tmp;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word t14;
C_word t15;
C_word ab[17],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_14625,NULL,5,t0,t1,t2,t3,t4);}
t5=(*a=C_VECTOR_TYPE|1,a[1]=t4,tmp=(C_word)a,a+=2,tmp);
t6=(C_word)C_i_nullp(t2);
t7=(*a=C_CLOSURE_TYPE|8,a[1]=(C_word)f_14635,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=t2,a[5]=((C_word*)t0)[4],a[6]=t3,a[7]=t1,a[8]=t5,tmp=(C_word)a,a+=9,tmp);
if(C_truep(t6)){
t8=t7;
f_14635(2,t8,t6);}
else{
t8=(C_word)C_i_nullp(t3);
if(C_truep(t8)){
t9=t7;
f_14635(2,t9,t8);}
else{
t9=(C_word)C_i_car(t2);
t10=(C_word)C_i_car(t9);
t11=t3;
t12=C_SCHEME_UNDEFINED;
t13=(*a=C_VECTOR_TYPE|1,a[1]=t12,tmp=(C_word)a,a+=2,tmp);
t14=C_set_block_item(t13,0,(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_14550,a[2]=t13,a[3]=((C_word)li190),tmp=(C_word)a,a+=4,tmp));
t15=((C_word*)t13)[1];
f_14550(t15,t7,t10,t11,C_SCHEME_TRUE);}}}

/* do1816 in do1831 in k14621 in k14617 in next-in-markov in k7924 in k7921 in k5905 in k5612 in k5609 in k5605 in k5314 in k5311 in k5308 in k5305 */
static void C_fcall f_14550(C_word t0,C_word t1,C_word t2,C_word t3,C_word t4){
C_word tmp;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_14550,NULL,5,t0,t1,t2,t3,t4);}
t5=(*a=C_VECTOR_TYPE|1,a[1]=t4,tmp=(C_word)a,a+=2,tmp);
t6=(C_word)C_i_nullp(t2);
t7=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_14560,a[2]=((C_word*)t0)[2],a[3]=t3,a[4]=t2,a[5]=t5,a[6]=t1,tmp=(C_word)a,a+=7,tmp);
if(C_truep(t6)){
t8=t7;
f_14560(t8,t6);}
else{
t8=(C_word)C_i_nullp(t3);
t9=t7;
f_14560(t9,(C_truep(t8)?t8:(C_word)C_i_not(((C_word*)t5)[1])));}}

/* k14558 in do1816 in do1831 in k14621 in k14617 in next-in-markov in k7924 in k7921 in k5905 in k5612 in k5609 in k5605 in k5314 in k5311 in k5308 in k5305 */
static void C_fcall f_14560(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_14560,NULL,2,t0,t1);}
if(C_truep(t1)){
t2=((C_word*)t0)[6];
((C_proc2)(void*)(*((C_word*)t2+1)))(2,t2,((C_word*)((C_word*)t0)[5])[1]);}
else{
t2=(C_word)C_i_car(((C_word*)t0)[4]);
t3=(C_word)C_eqp(t2,lf[95]);
t4=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_14567,a[2]=((C_word*)t0)[6],a[3]=((C_word*)t0)[2],a[4]=((C_word*)t0)[3],a[5]=((C_word*)t0)[4],a[6]=((C_word*)t0)[5],tmp=(C_word)a,a+=7,tmp);
if(C_truep(t3)){
t5=t4;
f_14567(t5,t3);}
else{
t5=(C_word)C_i_car(((C_word*)t0)[4]);
t6=(C_word)C_i_car(((C_word*)t0)[3]);
t7=(C_word)C_i_equalp(t5,t6);
if(C_truep(t7)){
t8=t4;
f_14567(t8,t7);}
else{
t8=(C_word)C_i_car(((C_word*)t0)[3]);
t9=t4;
f_14567(t9,(C_word)C_eqp(t8,lf[95]));}}}}

/* k14565 in k14558 in do1816 in do1831 in k14621 in k14617 in next-in-markov in k7924 in k7921 in k5905 in k5612 in k5609 in k5605 in k5314 in k5311 in k5308 in k5305 */
static void C_fcall f_14567(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=(C_word)C_i_cdr(((C_word*)t0)[5]);
t4=(C_word)C_i_cdr(((C_word*)t0)[4]);
t5=((C_word*)((C_word*)t0)[3])[1];
f_14550(t5,((C_word*)t0)[2],t3,t4,((C_word*)((C_word*)t0)[6])[1]);}

/* k14633 in do1831 in k14621 in k14617 in next-in-markov in k7924 in k7921 in k5905 in k5612 in k5609 in k5605 in k5314 in k5311 in k5308 in k5305 */
static void C_ccall f_14635(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[8],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_14635,2,t0,t1);}
if(C_truep(t1)){
t2=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_14638,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],a[7]=((C_word*)t0)[8],tmp=(C_word)a,a+=8,tmp);
if(C_truep((C_word)C_i_nullp(((C_word*)t0)[4]))){
C_trace("ChickenBridge.scm: 368  error");
t3=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t3))(4,t3,t2,lf[258],((C_word*)t0)[6]);}
else{
t3=t2;
f_14638(2,t3,C_SCHEME_UNDEFINED);}}
else{
t2=(C_word)C_i_cdr(((C_word*)t0)[4]);
t3=((C_word*)((C_word*)t0)[2])[1];
f_14625(t3,((C_word*)t0)[7],t2,((C_word*)t0)[6],((C_word*)((C_word*)t0)[8])[1]);}}

/* k14636 in k14633 in do1831 in k14621 in k14617 in next-in-markov in k7924 in k7921 in k5905 in k5612 in k5609 in k5605 in k5314 in k5311 in k5308 in k5305 */
static void C_ccall f_14638(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word ab[6],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_14638,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_14642,a[2]=((C_word*)t0)[4],a[3]=((C_word*)t0)[5],a[4]=((C_word*)t0)[6],a[5]=((C_word*)t0)[7],tmp=(C_word)a,a+=6,tmp);
t3=(C_word)C_i_car(((C_word*)t0)[3]);
t4=(C_word)C_i_cadr(t3);
t5=(C_word)C_i_car(((C_word*)t0)[3]);
t6=(C_word)C_i_cddr(t5);
C_trace("ChickenBridge.scm: 368  select-output");
t7=((C_word*)((C_word*)t0)[2])[1];
f_14440(t7,t2,t4,t6);}

/* k14640 in k14636 in k14633 in do1831 in k14621 in k14617 in next-in-markov in k7924 in k7921 in k5905 in k5612 in k5609 in k5605 in k5314 in k5311 in k5308 in k5305 */
static void C_ccall f_14642(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word ab[13],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_14642,2,t0,t1);}
t2=C_mutate(((C_word *)((C_word*)t0)[5])+1,t1);
t3=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_14645,a[2]=((C_word*)t0)[5],a[3]=((C_word*)t0)[4],tmp=(C_word)a,a+=4,tmp);
if(C_truep((C_word)C_i_nullp(((C_word*)t0)[3]))){
t4=t3;
f_14645(2,t4,C_SCHEME_UNDEFINED);}
else{
t4=(C_word)C_i_cdr(((C_word*)t0)[3]);
if(C_truep((C_word)C_i_nullp(t4))){
t5=t3;
f_14645(2,t5,(C_word)C_i_set_car(((C_word*)t0)[3],((C_word*)((C_word*)t0)[5])[1]));}
else{
t5=C_SCHEME_UNDEFINED;
t6=(*a=C_VECTOR_TYPE|1,a[1]=t5,tmp=(C_word)a,a+=2,tmp);
t7=C_set_block_item(t6,0,(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_14662,a[2]=t6,a[3]=((C_word*)t0)[2],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[3],a[6]=((C_word)li189),tmp=(C_word)a,a+=7,tmp));
t8=((C_word*)t6)[1];
f_14662(t8,t3,((C_word*)t0)[3]);}}}

/* do1840 in k14640 in k14636 in k14633 in do1831 in k14621 in k14617 in next-in-markov in k7924 in k7921 in k5905 in k5612 in k5609 in k5605 in k5314 in k5311 in k5308 in k5305 */
static void C_fcall f_14662(C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word *a;
loop:
a=C_alloc(4);
C_check_for_interrupt;
if(!C_stack_probe(a)){
C_save_and_reclaim((void*)trf_14662,NULL,3,t0,t1,t2);}
t3=(C_word)C_i_cdr(t2);
if(C_truep((C_word)C_i_nullp(t3))){
t4=(C_word)C_i_set_car(((C_word*)t0)[5],((C_word*)((C_word*)t0)[4])[1]);
t5=(C_word)C_i_set_cdr(t2,((C_word*)t0)[5]);
t6=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_14678,a[2]=t1,a[3]=t2,tmp=(C_word)a,a+=4,tmp);
t7=(C_word)C_i_cdr(((C_word*)t0)[5]);
C_trace("ChickenBridge.scm: 368  pattern-cache-set!");
f_9160(t6,((C_word*)t0)[3],t7);}
else{
t4=(C_word)C_i_cdr(t2);
t10=t1;
t11=t4;
t1=t10;
t2=t11;
goto loop;}}

/* k14676 in do1840 in k14640 in k14636 in k14633 in do1831 in k14621 in k14617 in next-in-markov in k7924 in k7921 in k5905 in k5612 in k5609 in k5605 in k5314 in k5311 in k5308 in k5305 */
static void C_ccall f_14678(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word *a;
t2=(C_word)C_i_cdr(((C_word*)t0)[3]);
t3=((C_word*)t0)[2];
((C_proc2)(void*)(*((C_word*)t3+1)))(2,t3,(C_word)C_i_set_cdr(t2,C_SCHEME_END_OF_LIST));}

/* k14643 in k14640 in k14636 in k14633 in do1831 in k14621 in k14617 in next-in-markov in k7924 in k7921 in k5905 in k5612 in k5609 in k5605 in k5314 in k5311 in k5308 in k5305 */
static void C_ccall f_14645(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
t2=((C_word*)t0)[3];
((C_proc2)(void*)(*((C_word*)t2+1)))(2,t2,((C_word*)((C_word*)t0)[2])[1]);}

/* select-output in next-in-markov in k7924 in k7921 in k5905 in k5612 in k5609 in k5605 in k5314 in k5311 in k5308 in k5305 */
static void C_fcall f_14440(C_word t0,C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word ab[12],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_14440,NULL,4,t0,t1,t2,t3);}
t4=t2;
if(C_truep(t4)){
t5=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_14508,a[2]=t3,a[3]=t1,tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 368  tb:ranf");
f_6483(t5,t2);}
else{
t5=C_SCHEME_UNDEFINED;
t6=(*a=C_VECTOR_TYPE|1,a[1]=t5,tmp=(C_word)a,a+=2,tmp);
t7=C_set_block_item(t6,0,(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_14452,a[2]=t6,a[3]=t3,a[4]=((C_word*)t0)[2],a[5]=((C_word)li187),tmp=(C_word)a,a+=6,tmp));
t8=((C_word*)t6)[1];
f_14452(t8,t1,t3,C_SCHEME_FALSE,C_fix(0));}}

/* do1800 in select-output in next-in-markov in k7924 in k7921 in k5905 in k5612 in k5609 in k5605 in k5314 in k5311 in k5308 in k5305 */
static void C_fcall f_14452(C_word t0,C_word t1,C_word t2,C_word t3,C_word t4){
C_word tmp;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word ab[11],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_14452,NULL,5,t0,t1,t2,t3,t4);}
t5=(*a=C_VECTOR_TYPE|1,a[1]=t3,tmp=(C_word)a,a+=2,tmp);
t6=(*a=C_VECTOR_TYPE|1,a[1]=t4,tmp=(C_word)a,a+=2,tmp);
if(C_truep((C_word)C_i_nullp(t2))){
C_trace("ChickenBridge.scm: 368  select-output");
t7=((C_word*)((C_word*)t0)[4])[1];
f_14440(t7,t1,((C_word*)t6)[1],((C_word*)t0)[3]);}
else{
t7=(C_word)C_i_car(t2);
t8=C_set_block_item(t5,0,t7);
t9=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_14488,a[2]=t1,a[3]=((C_word*)t0)[2],a[4]=t2,a[5]=t5,a[6]=t6,tmp=(C_word)a,a+=7,tmp);
t10=(C_word)C_i_caddr(((C_word*)t5)[1]);
if(C_truep((C_word)C_i_numberp(t10))){
t11=t9;
f_14488(2,t11,(C_word)C_i_caddr(((C_word*)t5)[1]));}
else{
t11=(C_word)C_i_caddr(((C_word*)t5)[1]);
C_trace("ChickenBridge.scm: 368  next-1");
f_9575(t9,t11);}}}

/* k14486 in do1800 in select-output in next-in-markov in k7924 in k7921 in k5905 in k5612 in k5609 in k5605 in k5314 in k5311 in k5308 in k5305 */
static void C_ccall f_14488(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word ab[4],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_14488,2,t0,t1);}
t2=(C_word)C_a_i_plus(&a,2,((C_word*)((C_word*)t0)[6])[1],t1);
t3=C_mutate(((C_word *)((C_word*)t0)[6])+1,t2);
t4=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[5])[1]);
t5=(C_word)C_i_set_car(t4,((C_word*)((C_word*)t0)[6])[1]);
t6=(C_word)C_i_cdr(((C_word*)t0)[4]);
t7=((C_word*)((C_word*)t0)[3])[1];
f_14452(t7,((C_word*)t0)[2],t6,((C_word*)((C_word*)t0)[5])[1],((C_word*)((C_word*)t0)[6])[1]);}

/* k14506 in select-output in next-in-markov in k7924 in k7921 in k5905 in k5612 in k5609 in k5605 in k5314 in k5311 in k5308 in k5305 */
static void C_ccall f_14508(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_14508,2,t0,t1);}
t2=C_SCHEME_UNDEFINED;
t3=(*a=C_VECTOR_TYPE|1,a[1]=t2,tmp=(C_word)a,a+=2,tmp);
t4=C_set_block_item(t3,0,(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_14513,a[2]=t3,a[3]=t1,a[4]=((C_word)li186),tmp=(C_word)a,a+=5,tmp));
t5=((C_word*)t3)[1];
f_14513(t5,((C_word*)t0)[3],((C_word*)t0)[2]);}

/* do1810 in k14506 in select-output in next-in-markov in k7924 in k7921 in k5905 in k5612 in k5609 in k5605 in k5314 in k5311 in k5308 in k5305 */
static void C_fcall f_14513(C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word *a;
loop:
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_14513,NULL,3,t0,t1,t2);}
t3=(C_word)C_i_car(t2);
t4=(C_word)C_i_cadr(t3);
if(C_truep((C_word)C_i_lessp(((C_word*)t0)[3],t4))){
t5=(C_word)C_i_car(t2);
t6=t1;
((C_proc2)(void*)(*((C_word*)t6+1)))(2,t6,(C_word)C_i_car(t5));}
else{
t5=(C_word)C_i_cdr(t2);
t8=t1;
t9=t5;
t1=t8;
t2=t9;
goto loop;}}

/* make-markov in k7924 in k7921 in k5905 in k5612 in k5609 in k5605 in k5314 in k5311 in k5308 in k5305 */
static void C_ccall f_13950(C_word c,C_word t0,C_word t1,C_word t2,...){
C_word tmp;
C_word t3;
va_list v;
C_word *a,c2=c;
C_save_rest(t2,c2,3);
if(c<3) C_bad_min_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_demand(c*C_SIZEOF_PAIR+22)){
C_save_and_reclaim((void*)tr3r,(void*)f_13950r,3,t0,t1,t2);}
else{
a=C_alloc((c-3)*3);
t3=C_restore_rest(a,C_rest_count(0));
f_13950r(t0,t1,t2,t3);}}

static void C_ccall f_13950r(C_word t0,C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word *a=C_alloc(22);
t4=(*a=C_VECTOR_TYPE|1,a[1]=t2,tmp=(C_word)a,a+=2,tmp);
t5=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_13954,a[2]=t1,a[3]=t4,a[4]=t3,tmp=(C_word)a,a+=5,tmp);
if(C_truep((C_word)C_i_pairp(((C_word*)t4)[1]))){
t6=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_14431,a[2]=t5,a[3]=t4,tmp=(C_word)a,a+=4,tmp);
t7=((C_word*)t4)[1];
t8=(C_word)C_a_i_list(&a,1,C_SCHEME_FALSE);
t9=C_SCHEME_UNDEFINED;
t10=(*a=C_VECTOR_TYPE|1,a[1]=t9,tmp=(C_word)a,a+=2,tmp);
t11=C_set_block_item(t10,0,(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_13877,a[2]=t7,a[3]=t10,a[4]=t8,a[5]=((C_word)li184),tmp=(C_word)a,a+=6,tmp));
t12=((C_word*)t10)[1];
f_13877(t12,t6,t7,C_SCHEME_FALSE,t8,C_SCHEME_FALSE);}
else{
C_trace("ChickenBridge.scm: 368  error");
t6=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t6))(4,t6,t5,lf[257],((C_word*)t4)[1]);}}

/* do1701 in make-markov in k7924 in k7921 in k5905 in k5612 in k5609 in k5605 in k5314 in k5311 in k5308 in k5305 */
static void C_fcall f_13877(C_word t0,C_word t1,C_word t2,C_word t3,C_word t4,C_word t5){
C_word tmp;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word ab[18],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_13877,NULL,6,t0,t1,t2,t3,t4,t5);}
t6=(*a=C_VECTOR_TYPE|1,a[1]=t3,tmp=(C_word)a,a+=2,tmp);
t7=(*a=C_VECTOR_TYPE|1,a[1]=t4,tmp=(C_word)a,a+=2,tmp);
t8=(*a=C_VECTOR_TYPE|1,a[1]=t5,tmp=(C_word)a,a+=2,tmp);
if(C_truep((C_word)C_i_nullp(t2))){
t9=t1;
((C_proc2)(void*)(*((C_word*)t9+1)))(2,t9,(C_word)C_i_cdr(((C_word*)t0)[4]));}
else{
t9=(C_word)C_i_car(t2);
t10=t9;
t11=(*a=C_VECTOR_TYPE|1,a[1]=t10,tmp=(C_word)a,a+=2,tmp);
t12=(*a=C_CLOSURE_TYPE|9,a[1]=(C_word)f_13722,a[2]=((C_word*)t0)[2],a[3]=t6,a[4]=t1,a[5]=((C_word*)t0)[3],a[6]=t2,a[7]=t7,a[8]=t8,a[9]=t11,tmp=(C_word)a,a+=10,tmp);
if(C_truep((C_word)C_i_pairp(((C_word*)t11)[1]))){
t13=t12;
f_13722(2,t13,C_SCHEME_UNDEFINED);}
else{
C_trace("ChickenBridge.scm: 368  error");
t13=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t13))(4,t13,t12,lf[256],((C_word*)t11)[1]);}}}

/* k13720 in do1701 in make-markov in k7924 in k7921 in k5905 in k5612 in k5609 in k5605 in k5314 in k5311 in k5308 in k5305 */
static void C_ccall f_13722(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[10],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_13722,2,t0,t1);}
t2=(C_word)C_i_member(lf[252],((C_word*)((C_word*)t0)[9])[1]);
t3=(*a=C_CLOSURE_TYPE|9,a[1]=(C_word)f_13728,a[2]=((C_word*)t0)[9],a[3]=((C_word*)t0)[2],a[4]=((C_word*)t0)[3],a[5]=((C_word*)t0)[4],a[6]=((C_word*)t0)[5],a[7]=((C_word*)t0)[6],a[8]=((C_word*)t0)[7],a[9]=((C_word*)t0)[8],tmp=(C_word)a,a+=10,tmp);
if(C_truep(t2)){
t4=t3;
f_13728(2,t4,t2);}
else{
t4=(C_word)C_i_member(lf[254],((C_word*)((C_word*)t0)[9])[1]);
if(C_truep(t4)){
t5=t3;
f_13728(2,t5,t4);}
else{
C_trace("ChickenBridge.scm: 368  error");
t5=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t5))(4,t5,t3,lf[255],((C_word*)((C_word*)t0)[9])[1]);}}}

/* k13726 in k13720 in do1701 in make-markov in k7924 in k7921 in k5905 in k5612 in k5609 in k5605 in k5314 in k5311 in k5308 in k5305 */
static void C_ccall f_13728(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word t14;
C_word t15;
C_word t16;
C_word t17;
C_word ab[37],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_13728,2,t0,t1);}
t2=t1;
t3=(*a=C_VECTOR_TYPE|1,a[1]=t2,tmp=(C_word)a,a+=2,tmp);
t4=C_SCHEME_END_OF_LIST;
t5=(*a=C_VECTOR_TYPE|1,a[1]=t4,tmp=(C_word)a,a+=2,tmp);
t6=C_fix(0);
t7=(*a=C_VECTOR_TYPE|1,a[1]=t6,tmp=(C_word)a,a+=2,tmp);
t8=C_SCHEME_END_OF_LIST;
t9=(*a=C_VECTOR_TYPE|1,a[1]=t8,tmp=(C_word)a,a+=2,tmp);
t10=(C_word)C_a_i_list(&a,1,C_SCHEME_FALSE);
t11=t10;
t12=(*a=C_VECTOR_TYPE|1,a[1]=t11,tmp=(C_word)a,a+=2,tmp);
t13=(*a=C_CLOSURE_TYPE|12,a[1]=(C_word)f_13740,a[2]=t3,a[3]=t9,a[4]=((C_word*)t0)[3],a[5]=((C_word*)t0)[4],a[6]=((C_word*)t0)[5],a[7]=((C_word*)t0)[6],a[8]=((C_word*)t0)[7],a[9]=((C_word*)t0)[8],a[10]=((C_word*)t0)[9],a[11]=t5,a[12]=t7,tmp=(C_word)a,a+=13,tmp);
t14=C_SCHEME_UNDEFINED;
t15=(*a=C_VECTOR_TYPE|1,a[1]=t14,tmp=(C_word)a,a+=2,tmp);
t16=C_set_block_item(t15,0,(*a=C_CLOSURE_TYPE|8,a[1]=(C_word)f_13813,a[2]=t15,a[3]=t12,a[4]=t5,a[5]=t10,a[6]=t3,a[7]=((C_word*)t0)[2],a[8]=((C_word)li183),tmp=(C_word)a,a+=9,tmp));
t17=((C_word*)t15)[1];
f_13813(t17,t13);}

/* do1679 in k13726 in k13720 in do1701 in make-markov in k7924 in k7921 in k5905 in k5612 in k5609 in k5605 in k5314 in k5311 in k5308 in k5305 */
static void C_fcall f_13813(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word t14;
C_word t15;
C_word *a;
loop:
a=C_alloc(3);
C_check_for_interrupt;
if(!C_stack_probe(a)){
C_save_and_reclaim((void*)trf_13813,NULL,2,t0,t1);}
t2=(C_word)C_eqp(((C_word*)((C_word*)t0)[7])[1],((C_word*)((C_word*)t0)[6])[1]);
if(C_truep(t2)){
t3=(C_word)C_i_cdr(((C_word*)t0)[5]);
t4=C_mutate(((C_word *)((C_word*)t0)[4])+1,t3);
t5=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[6])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[6])+1,t5);
t7=t1;
((C_proc2)(void*)(*((C_word*)t7+1)))(2,t7,t6);}
else{
t3=(C_word)C_i_car(((C_word*)((C_word*)t0)[7])[1]);
t4=(C_word)C_a_i_list(&a,1,t3);
t5=(C_word)C_i_set_cdr(((C_word*)((C_word*)t0)[3])[1],t4);
t6=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[3])[1]);
t7=C_mutate(((C_word *)((C_word*)t0)[3])+1,t6);
t8=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[7])[1]);
t9=C_mutate(((C_word *)((C_word*)t0)[7])+1,t8);
t15=t1;
t1=t15;
goto loop;}}

/* k13738 in k13726 in k13720 in do1701 in make-markov in k7924 in k7921 in k5905 in k5612 in k5609 in k5605 in k5314 in k5311 in k5308 in k5305 */
static void C_ccall f_13740(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[17],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_13740,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|11,a[1]=(C_word)f_13743,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],a[7]=((C_word*)t0)[8],a[8]=((C_word*)t0)[9],a[9]=((C_word*)t0)[10],a[10]=((C_word*)t0)[11],a[11]=((C_word*)t0)[12],tmp=(C_word)a,a+=12,tmp);
t3=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_13756,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[12],a[4]=((C_word)li182),tmp=(C_word)a,a+=5,tmp);
C_trace("for-each");
t4=*((C_word*)lf[214]+1);
((C_proc4)(void*)(*((C_word*)t4+1)))(4,t4,t2,t3,((C_word*)((C_word*)t0)[2])[1]);}

/* a13755 in k13738 in k13726 in k13720 in do1701 in make-markov in k7924 in k7921 in k5905 in k5612 in k5609 in k5605 in k5314 in k5311 in k5308 in k5305 */
static void C_ccall f_13756(C_word c,C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word t14;
C_word t15;
C_word t16;
C_word t17;
C_word t18;
C_word t19;
C_word t20;
C_word t21;
C_word ab[14],*a=ab;
if(c!=3) C_bad_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr3,(void*)f_13756,3,t0,t1,t2);}
t3=C_SCHEME_FALSE;
t4=(*a=C_VECTOR_TYPE|1,a[1]=t3,tmp=(C_word)a,a+=2,tmp);
t5=C_SCHEME_FALSE;
t6=(*a=C_VECTOR_TYPE|1,a[1]=t5,tmp=(C_word)a,a+=2,tmp);
t7=C_SCHEME_FALSE;
t8=(*a=C_VECTOR_TYPE|1,a[1]=t7,tmp=(C_word)a,a+=2,tmp);
t9=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_13760,a[2]=t8,a[3]=t1,a[4]=((C_word*)t0)[2],a[5]=t6,a[6]=((C_word*)t0)[3],a[7]=t4,tmp=(C_word)a,a+=8,tmp);
if(C_truep((C_word)C_i_pairp(t2))){
t10=(C_word)C_i_car(t2);
t11=C_set_block_item(t4,0,t10);
t12=(C_word)C_i_cdr(t2);
t13=(C_word)C_i_nullp(t12);
t14=(C_truep(t13)?C_fix(1):(C_word)C_i_cadr(t2));
t15=C_set_block_item(t8,0,t14);
t16=C_set_block_item(t6,0,((C_word*)t8)[1]);
if(C_truep((C_word)C_i_numberp(((C_word*)t8)[1]))){
t17=t9;
f_13760(t17,C_SCHEME_UNDEFINED);}
else{
t17=C_set_block_item(t8,0,C_SCHEME_FALSE);
t18=t9;
f_13760(t18,t17);}}
else{
t10=C_set_block_item(t4,0,t2);
t11=C_set_block_item(t8,0,C_fix(1));
t12=C_set_block_item(t6,0,C_fix(1));
t13=t9;
f_13760(t13,t12);}}

/* k13758 in a13755 in k13738 in k13726 in k13720 in do1701 in make-markov in k7924 in k7921 in k5905 in k5612 in k5609 in k5605 in k5314 in k5311 in k5308 in k5305 */
static void C_fcall f_13760(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word ab[11],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_13760,NULL,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_13763,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_truep(((C_word*)((C_word*)t0)[2])[1])?((C_word*)((C_word*)t0)[6])[1]:C_SCHEME_FALSE);
if(C_truep(t3)){
t4=(C_word)C_a_i_plus(&a,2,((C_word*)((C_word*)t0)[6])[1],((C_word*)((C_word*)t0)[2])[1]);
t5=C_mutate(((C_word *)((C_word*)t0)[6])+1,t4);
t6=t2;
f_13763(t6,t5);}
else{
t4=C_set_block_item(((C_word*)t0)[6],0,C_SCHEME_FALSE);
t5=t2;
f_13763(t5,t4);}}

/* k13761 in k13758 in a13755 in k13738 in k13726 in k13720 in do1701 in make-markov in k7924 in k7921 in k5905 in k5612 in k5609 in k5605 in k5314 in k5311 in k5308 in k5305 */
static void C_fcall f_13763(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[12],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_13763,NULL,2,t0,t1);}
t2=(C_word)C_a_i_list(&a,3,((C_word*)((C_word*)t0)[6])[1],((C_word*)((C_word*)t0)[5])[1],((C_word*)((C_word*)t0)[4])[1]);
t3=(C_word)C_a_i_cons(&a,2,t2,((C_word*)((C_word*)t0)[3])[1]);
t4=C_mutate(((C_word *)((C_word*)t0)[3])+1,t3);
t5=((C_word*)t0)[2];
((C_proc2)(void*)(*((C_word*)t5+1)))(2,t5,t4);}

/* k13741 in k13738 in k13726 in k13720 in do1701 in make-markov in k7924 in k7921 in k5905 in k5612 in k5609 in k5605 in k5314 in k5311 in k5308 in k5305 */
static void C_ccall f_13743(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[11],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_13743,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|10,a[1]=(C_word)f_13754,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],a[7]=((C_word*)t0)[8],a[8]=((C_word*)t0)[9],a[9]=((C_word*)t0)[10],a[10]=((C_word*)t0)[11],tmp=(C_word)a,a+=11,tmp);
C_trace("ChickenBridge.scm: 368  reverse");
t3=*((C_word*)lf[164]+1);
((C_proc3)C_retrieve_proc(t3))(3,t3,t2,((C_word*)((C_word*)t0)[2])[1]);}

/* k13752 in k13741 in k13738 in k13726 in k13720 in do1701 in make-markov in k7924 in k7921 in k5905 in k5612 in k5609 in k5605 in k5314 in k5311 in k5308 in k5305 */
static void C_ccall f_13754(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word ab[14],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_13754,2,t0,t1);}
t2=(C_word)C_a_i_cons(&a,2,((C_word*)((C_word*)t0)[10])[1],t1);
t3=(C_word)C_a_i_cons(&a,2,((C_word*)((C_word*)t0)[9])[1],t2);
t4=C_mutate(((C_word *)((C_word*)t0)[8])+1,t3);
t5=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_13894,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],a[7]=((C_word*)t0)[8],tmp=(C_word)a,a+=8,tmp);
t6=((C_word*)((C_word*)t0)[3])[1];
if(C_truep(t6)){
t7=(C_word)C_i_car(((C_word*)((C_word*)t0)[8])[1]);
t8=(C_word)C_i_length(t7);
if(C_truep((C_word)C_i_nequalp(((C_word*)((C_word*)t0)[3])[1],t8))){
t9=t5;
f_13894(2,t9,C_SCHEME_UNDEFINED);}
else{
C_trace("ChickenBridge.scm: 368  error");
t9=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t9))(4,t9,t5,lf[253],((C_word*)t0)[2]);}}
else{
t7=(C_word)C_i_car(((C_word*)((C_word*)t0)[8])[1]);
t8=(C_word)C_i_length(t7);
t9=C_mutate(((C_word *)((C_word*)t0)[3])+1,t8);
t10=t5;
f_13894(2,t10,t9);}}

/* k13892 in k13752 in k13741 in k13738 in k13726 in k13720 in do1701 in make-markov in k7924 in k7921 in k5905 in k5612 in k5609 in k5605 in k5314 in k5311 in k5308 in k5305 */
static void C_ccall f_13894(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word ab[3],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_13894,2,t0,t1);}
t2=(C_word)C_a_i_list(&a,1,((C_word*)((C_word*)t0)[7])[1]);
t3=(C_word)C_i_set_cdr(((C_word*)((C_word*)t0)[6])[1],t2);
t4=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[6])[1]);
t5=C_mutate(((C_word *)((C_word*)t0)[6])+1,t4);
t6=(C_word)C_i_cdr(((C_word*)t0)[5]);
t7=((C_word*)((C_word*)t0)[4])[1];
f_13877(t7,((C_word*)t0)[3],t6,((C_word*)((C_word*)t0)[2])[1],((C_word*)((C_word*)t0)[6])[1],((C_word*)((C_word*)t0)[7])[1]);}

/* k14429 in make-markov in k7924 in k7921 in k5905 in k5612 in k5609 in k5605 in k5314 in k5311 in k5308 in k5305 */
static void C_ccall f_14431(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[3])+1,t1);
t3=((C_word*)t0)[2];
f_13954(2,t3,t2);}

/* k13952 in make-markov in k7924 in k7921 in k5905 in k5612 in k5609 in k5605 in k5314 in k5311 in k5308 in k5305 */
static void C_ccall f_13954(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word t14;
C_word t15;
C_word t16;
C_word t17;
C_word t18;
C_word t19;
C_word t20;
C_word t21;
C_word t22;
C_word t23;
C_word t24;
C_word t25;
C_word t26;
C_word t27;
C_word ab[59],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_13954,2,t0,t1);}
t2=C_SCHEME_FALSE;
t3=(*a=C_VECTOR_TYPE|1,a[1]=t2,tmp=(C_word)a,a+=2,tmp);
t4=C_SCHEME_FALSE;
t5=(*a=C_VECTOR_TYPE|1,a[1]=t4,tmp=(C_word)a,a+=2,tmp);
t6=C_SCHEME_FALSE;
t7=(*a=C_VECTOR_TYPE|1,a[1]=t6,tmp=(C_word)a,a+=2,tmp);
t8=C_SCHEME_FALSE;
t9=(*a=C_VECTOR_TYPE|1,a[1]=t8,tmp=(C_word)a,a+=2,tmp);
t10=C_SCHEME_FALSE;
t11=(*a=C_VECTOR_TYPE|1,a[1]=t10,tmp=(C_word)a,a+=2,tmp);
t12=C_SCHEME_FALSE;
t13=(*a=C_VECTOR_TYPE|1,a[1]=t12,tmp=(C_word)a,a+=2,tmp);
t14=((C_word*)t0)[4];
t15=(*a=C_VECTOR_TYPE|1,a[1]=t14,tmp=(C_word)a,a+=2,tmp);
t16=C_SCHEME_FALSE;
t17=(*a=C_VECTOR_TYPE|1,a[1]=t16,tmp=(C_word)a,a+=2,tmp);
t18=(*a=C_CLOSURE_TYPE|12,a[1]=(C_word)f_13957,a[2]=t13,a[3]=t11,a[4]=t17,a[5]=t9,a[6]=((C_word*)t0)[4],a[7]=t15,a[8]=t5,a[9]=t3,a[10]=t7,a[11]=((C_word*)t0)[2],a[12]=((C_word*)t0)[3],tmp=(C_word)a,a+=13,tmp);
if(C_truep((C_word)C_i_nullp(((C_word*)t15)[1]))){
t19=t18;
f_13957(t19,C_SCHEME_UNDEFINED);}
else{
t19=(C_word)C_i_car(((C_word*)t15)[1]);
t20=(C_word)C_eqp(t19,lf[216]);
if(C_truep(t20)){
t21=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_14301,a[2]=((C_word*)t0)[4],a[3]=t18,a[4]=t15,a[5]=t17,a[6]=t9,a[7]=t3,tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)t9)[1])){
C_trace("ChickenBridge.scm: 368  error");
t22=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t22))(4,t22,t21,lf[19],lf[216]);}
else{
t22=t21;
f_14301(2,t22,C_SCHEME_UNDEFINED);}}
else{
t21=(C_word)C_eqp(t19,lf[217]);
if(C_truep(t21)){
t22=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_14336,a[2]=((C_word*)t0)[4],a[3]=t18,a[4]=t15,a[5]=t17,a[6]=t11,a[7]=t5,tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)t11)[1])){
C_trace("ChickenBridge.scm: 368  error");
t23=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t23))(4,t23,t22,lf[19],lf[217]);}
else{
t23=t22;
f_14336(2,t23,C_SCHEME_UNDEFINED);}}
else{
t22=(C_word)C_eqp(t19,lf[251]);
if(C_truep(t22)){
t23=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_14371,a[2]=((C_word*)t0)[4],a[3]=t18,a[4]=t15,a[5]=t17,a[6]=t13,a[7]=t7,tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)t13)[1])){
C_trace("ChickenBridge.scm: 368  error");
t24=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t24))(4,t24,t23,lf[19],lf[251]);}
else{
t24=t23;
f_14371(2,t24,C_SCHEME_UNDEFINED);}}
else{
t23=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_14400,a[2]=t18,a[3]=t9,a[4]=t3,a[5]=t15,tmp=(C_word)a,a+=6,tmp);
if(C_truep(((C_word*)t17)[1])){
C_trace("ChickenBridge.scm: 368  error");
t24=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t24))(4,t24,t23,lf[10],((C_word*)t0)[4]);}
else{
t24=t23;
f_14400(2,t24,C_SCHEME_UNDEFINED);}}}}}}

/* k14398 in k13952 in make-markov in k7924 in k7921 in k5905 in k5612 in k5609 in k5605 in k5314 in k5311 in k5308 in k5305 */
static void C_ccall f_14400(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_14400,2,t0,t1);}
t2=(C_word)C_i_car(((C_word*)((C_word*)t0)[5])[1]);
t3=C_mutate(((C_word *)((C_word*)t0)[4])+1,t2);
t4=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_14407,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[5],a[4]=((C_word*)t0)[3],tmp=(C_word)a,a+=5,tmp);
t5=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_14415,a[2]=((C_word*)t0)[4],a[3]=t4,tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 368  keyword?");
t6=C_retrieve(lf[13]);
((C_proc3)C_retrieve_proc(t6))(3,t6,t5,((C_word*)((C_word*)t0)[4])[1]);}

/* k14413 in k14398 in k13952 in make-markov in k7924 in k7921 in k5905 in k5612 in k5609 in k5605 in k5314 in k5311 in k5308 in k5305 */
static void C_ccall f_14415(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
if(C_truep(t1)){
C_trace("ChickenBridge.scm: 368  error");
t2=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t2))(4,t2,((C_word*)t0)[3],lf[14],((C_word*)((C_word*)t0)[2])[1]);}
else{
t2=((C_word*)t0)[3];
f_14407(2,t2,C_SCHEME_UNDEFINED);}}

/* k14405 in k14398 in k13952 in make-markov in k7924 in k7921 in k5905 in k5612 in k5609 in k5605 in k5314 in k5311 in k5308 in k5305 */
static void C_ccall f_14407(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word *a;
t2=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[3])[1]);
t4=C_mutate(((C_word *)((C_word*)t0)[3])+1,t3);
t5=((C_word*)t0)[2];
f_13957(t5,t4);}

/* k14369 in k13952 in make-markov in k7924 in k7921 in k5905 in k5612 in k5609 in k5605 in k5314 in k5311 in k5308 in k5305 */
static void C_ccall f_14371(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_14371,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_14375,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("ChickenBridge.scm: 368  error");
t4=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[21],((C_word*)t0)[2]);}
else{
t4=t2;
f_14375(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k14373 in k14369 in k13952 in make-markov in k7924 in k7921 in k5905 in k5612 in k5609 in k5605 in k5314 in k5311 in k5308 in k5305 */
static void C_ccall f_14375(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_13957(t7,t6);}

/* k14334 in k13952 in make-markov in k7924 in k7921 in k5905 in k5612 in k5609 in k5605 in k5314 in k5311 in k5308 in k5305 */
static void C_ccall f_14336(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_14336,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_14340,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("ChickenBridge.scm: 368  error");
t4=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[21],((C_word*)t0)[2]);}
else{
t4=t2;
f_14340(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k14338 in k14334 in k13952 in make-markov in k7924 in k7921 in k5905 in k5612 in k5609 in k5605 in k5314 in k5311 in k5308 in k5305 */
static void C_ccall f_14340(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_13957(t7,t6);}

/* k14299 in k13952 in make-markov in k7924 in k7921 in k5905 in k5612 in k5609 in k5605 in k5314 in k5311 in k5308 in k5305 */
static void C_ccall f_14301(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_14301,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_14305,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("ChickenBridge.scm: 368  error");
t4=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[21],((C_word*)t0)[2]);}
else{
t4=t2;
f_14305(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k14303 in k14299 in k13952 in make-markov in k7924 in k7921 in k5905 in k5612 in k5609 in k5605 in k5314 in k5311 in k5308 in k5305 */
static void C_ccall f_14305(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_13957(t7,t6);}

/* k13955 in k13952 in make-markov in k7924 in k7921 in k5905 in k5612 in k5609 in k5605 in k5314 in k5311 in k5308 in k5305 */
static void C_fcall f_13957(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word ab[43],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_13957,NULL,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|12,a[1]=(C_word)f_13960,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],a[7]=((C_word*)t0)[7],a[8]=((C_word*)t0)[8],a[9]=((C_word*)t0)[9],a[10]=((C_word*)t0)[10],a[11]=((C_word*)t0)[11],a[12]=((C_word*)t0)[12],tmp=(C_word)a,a+=13,tmp);
if(C_truep((C_word)C_i_nullp(((C_word*)((C_word*)t0)[7])[1]))){
t3=t2;
f_13960(t3,C_SCHEME_UNDEFINED);}
else{
t3=(C_word)C_i_car(((C_word*)((C_word*)t0)[7])[1]);
t4=(C_word)C_eqp(t3,lf[216]);
if(C_truep(t4)){
t5=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_14166,a[2]=((C_word*)t0)[6],a[3]=t2,a[4]=((C_word*)t0)[7],a[5]=((C_word*)t0)[4],a[6]=((C_word*)t0)[5],a[7]=((C_word*)t0)[9],tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)((C_word*)t0)[5])[1])){
C_trace("ChickenBridge.scm: 368  error");
t6=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t6))(4,t6,t5,lf[19],lf[216]);}
else{
t6=t5;
f_14166(2,t6,C_SCHEME_UNDEFINED);}}
else{
t5=(C_word)C_eqp(t3,lf[217]);
if(C_truep(t5)){
t6=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_14201,a[2]=((C_word*)t0)[6],a[3]=t2,a[4]=((C_word*)t0)[7],a[5]=((C_word*)t0)[4],a[6]=((C_word*)t0)[3],a[7]=((C_word*)t0)[8],tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)((C_word*)t0)[3])[1])){
C_trace("ChickenBridge.scm: 368  error");
t7=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t7))(4,t7,t6,lf[19],lf[217]);}
else{
t7=t6;
f_14201(2,t7,C_SCHEME_UNDEFINED);}}
else{
t6=(C_word)C_eqp(t3,lf[251]);
if(C_truep(t6)){
t7=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_14236,a[2]=((C_word*)t0)[6],a[3]=t2,a[4]=((C_word*)t0)[7],a[5]=((C_word*)t0)[4],a[6]=((C_word*)t0)[2],a[7]=((C_word*)t0)[10],tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)((C_word*)t0)[2])[1])){
C_trace("ChickenBridge.scm: 368  error");
t8=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t8))(4,t8,t7,lf[19],lf[251]);}
else{
t8=t7;
f_14236(2,t8,C_SCHEME_UNDEFINED);}}
else{
t7=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_14265,a[2]=t2,a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[8],a[5]=((C_word*)t0)[7],tmp=(C_word)a,a+=6,tmp);
if(C_truep(((C_word*)((C_word*)t0)[4])[1])){
C_trace("ChickenBridge.scm: 368  error");
t8=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t8))(4,t8,t7,lf[10],((C_word*)t0)[6]);}
else{
t8=t7;
f_14265(2,t8,C_SCHEME_UNDEFINED);}}}}}}

/* k14263 in k13955 in k13952 in make-markov in k7924 in k7921 in k5905 in k5612 in k5609 in k5605 in k5314 in k5311 in k5308 in k5305 */
static void C_ccall f_14265(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_14265,2,t0,t1);}
t2=(C_word)C_i_car(((C_word*)((C_word*)t0)[5])[1]);
t3=C_mutate(((C_word *)((C_word*)t0)[4])+1,t2);
t4=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_14272,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[5],a[4]=((C_word*)t0)[3],tmp=(C_word)a,a+=5,tmp);
t5=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_14280,a[2]=((C_word*)t0)[4],a[3]=t4,tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 368  keyword?");
t6=C_retrieve(lf[13]);
((C_proc3)C_retrieve_proc(t6))(3,t6,t5,((C_word*)((C_word*)t0)[4])[1]);}

/* k14278 in k14263 in k13955 in k13952 in make-markov in k7924 in k7921 in k5905 in k5612 in k5609 in k5605 in k5314 in k5311 in k5308 in k5305 */
static void C_ccall f_14280(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
if(C_truep(t1)){
C_trace("ChickenBridge.scm: 368  error");
t2=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t2))(4,t2,((C_word*)t0)[3],lf[14],((C_word*)((C_word*)t0)[2])[1]);}
else{
t2=((C_word*)t0)[3];
f_14272(2,t2,C_SCHEME_UNDEFINED);}}

/* k14270 in k14263 in k13955 in k13952 in make-markov in k7924 in k7921 in k5905 in k5612 in k5609 in k5605 in k5314 in k5311 in k5308 in k5305 */
static void C_ccall f_14272(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word *a;
t2=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[3])[1]);
t4=C_mutate(((C_word *)((C_word*)t0)[3])+1,t3);
t5=((C_word*)t0)[2];
f_13960(t5,t4);}

/* k14234 in k13955 in k13952 in make-markov in k7924 in k7921 in k5905 in k5612 in k5609 in k5605 in k5314 in k5311 in k5308 in k5305 */
static void C_ccall f_14236(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_14236,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_14240,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("ChickenBridge.scm: 368  error");
t4=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[21],((C_word*)t0)[2]);}
else{
t4=t2;
f_14240(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k14238 in k14234 in k13955 in k13952 in make-markov in k7924 in k7921 in k5905 in k5612 in k5609 in k5605 in k5314 in k5311 in k5308 in k5305 */
static void C_ccall f_14240(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_13960(t7,t6);}

/* k14199 in k13955 in k13952 in make-markov in k7924 in k7921 in k5905 in k5612 in k5609 in k5605 in k5314 in k5311 in k5308 in k5305 */
static void C_ccall f_14201(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_14201,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_14205,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("ChickenBridge.scm: 368  error");
t4=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[21],((C_word*)t0)[2]);}
else{
t4=t2;
f_14205(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k14203 in k14199 in k13955 in k13952 in make-markov in k7924 in k7921 in k5905 in k5612 in k5609 in k5605 in k5314 in k5311 in k5308 in k5305 */
static void C_ccall f_14205(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_13960(t7,t6);}

/* k14164 in k13955 in k13952 in make-markov in k7924 in k7921 in k5905 in k5612 in k5609 in k5605 in k5314 in k5311 in k5308 in k5305 */
static void C_ccall f_14166(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_14166,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_14170,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("ChickenBridge.scm: 368  error");
t4=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[21],((C_word*)t0)[2]);}
else{
t4=t2;
f_14170(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k14168 in k14164 in k13955 in k13952 in make-markov in k7924 in k7921 in k5905 in k5612 in k5609 in k5605 in k5314 in k5311 in k5308 in k5305 */
static void C_ccall f_14170(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_13960(t7,t6);}

/* k13958 in k13955 in k13952 in make-markov in k7924 in k7921 in k5905 in k5612 in k5609 in k5605 in k5314 in k5311 in k5308 in k5305 */
static void C_fcall f_13960(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word ab[39],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_13960,NULL,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|8,a[1]=(C_word)f_13963,a[2]=((C_word*)t0)[6],a[3]=((C_word*)t0)[7],a[4]=((C_word*)t0)[8],a[5]=((C_word*)t0)[9],a[6]=((C_word*)t0)[10],a[7]=((C_word*)t0)[11],a[8]=((C_word*)t0)[12],tmp=(C_word)a,a+=9,tmp);
if(C_truep((C_word)C_i_nullp(((C_word*)((C_word*)t0)[7])[1]))){
t3=t2;
f_13963(t3,C_SCHEME_UNDEFINED);}
else{
t3=(C_word)C_i_car(((C_word*)((C_word*)t0)[7])[1]);
t4=(C_word)C_eqp(t3,lf[216]);
if(C_truep(t4)){
t5=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_14031,a[2]=((C_word*)t0)[6],a[3]=t2,a[4]=((C_word*)t0)[7],a[5]=((C_word*)t0)[4],a[6]=((C_word*)t0)[5],a[7]=((C_word*)t0)[9],tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)((C_word*)t0)[5])[1])){
C_trace("ChickenBridge.scm: 368  error");
t6=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t6))(4,t6,t5,lf[19],lf[216]);}
else{
t6=t5;
f_14031(2,t6,C_SCHEME_UNDEFINED);}}
else{
t5=(C_word)C_eqp(t3,lf[217]);
if(C_truep(t5)){
t6=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_14066,a[2]=((C_word*)t0)[6],a[3]=t2,a[4]=((C_word*)t0)[7],a[5]=((C_word*)t0)[4],a[6]=((C_word*)t0)[3],a[7]=((C_word*)t0)[8],tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)((C_word*)t0)[3])[1])){
C_trace("ChickenBridge.scm: 368  error");
t7=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t7))(4,t7,t6,lf[19],lf[217]);}
else{
t7=t6;
f_14066(2,t7,C_SCHEME_UNDEFINED);}}
else{
t6=(C_word)C_eqp(t3,lf[251]);
if(C_truep(t6)){
t7=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_14101,a[2]=((C_word*)t0)[6],a[3]=t2,a[4]=((C_word*)t0)[7],a[5]=((C_word*)t0)[4],a[6]=((C_word*)t0)[2],a[7]=((C_word*)t0)[10],tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)((C_word*)t0)[2])[1])){
C_trace("ChickenBridge.scm: 368  error");
t8=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t8))(4,t8,t7,lf[19],lf[251]);}
else{
t8=t7;
f_14101(2,t8,C_SCHEME_UNDEFINED);}}
else{
t7=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_14130,a[2]=t2,a[3]=((C_word*)t0)[2],a[4]=((C_word*)t0)[10],a[5]=((C_word*)t0)[7],tmp=(C_word)a,a+=6,tmp);
if(C_truep(((C_word*)((C_word*)t0)[4])[1])){
C_trace("ChickenBridge.scm: 368  error");
t8=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t8))(4,t8,t7,lf[10],((C_word*)t0)[6]);}
else{
t8=t7;
f_14130(2,t8,C_SCHEME_UNDEFINED);}}}}}}

/* k14128 in k13958 in k13955 in k13952 in make-markov in k7924 in k7921 in k5905 in k5612 in k5609 in k5605 in k5314 in k5311 in k5308 in k5305 */
static void C_ccall f_14130(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_14130,2,t0,t1);}
t2=(C_word)C_i_car(((C_word*)((C_word*)t0)[5])[1]);
t3=C_mutate(((C_word *)((C_word*)t0)[4])+1,t2);
t4=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_14137,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[5],a[4]=((C_word*)t0)[3],tmp=(C_word)a,a+=5,tmp);
t5=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_14145,a[2]=((C_word*)t0)[4],a[3]=t4,tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 368  keyword?");
t6=C_retrieve(lf[13]);
((C_proc3)C_retrieve_proc(t6))(3,t6,t5,((C_word*)((C_word*)t0)[4])[1]);}

/* k14143 in k14128 in k13958 in k13955 in k13952 in make-markov in k7924 in k7921 in k5905 in k5612 in k5609 in k5605 in k5314 in k5311 in k5308 in k5305 */
static void C_ccall f_14145(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
if(C_truep(t1)){
C_trace("ChickenBridge.scm: 368  error");
t2=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t2))(4,t2,((C_word*)t0)[3],lf[14],((C_word*)((C_word*)t0)[2])[1]);}
else{
t2=((C_word*)t0)[3];
f_14137(2,t2,C_SCHEME_UNDEFINED);}}

/* k14135 in k14128 in k13958 in k13955 in k13952 in make-markov in k7924 in k7921 in k5905 in k5612 in k5609 in k5605 in k5314 in k5311 in k5308 in k5305 */
static void C_ccall f_14137(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word *a;
t2=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[3])[1]);
t4=C_mutate(((C_word *)((C_word*)t0)[3])+1,t3);
t5=((C_word*)t0)[2];
f_13963(t5,t4);}

/* k14099 in k13958 in k13955 in k13952 in make-markov in k7924 in k7921 in k5905 in k5612 in k5609 in k5605 in k5314 in k5311 in k5308 in k5305 */
static void C_ccall f_14101(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_14101,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_14105,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("ChickenBridge.scm: 368  error");
t4=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[21],((C_word*)t0)[2]);}
else{
t4=t2;
f_14105(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k14103 in k14099 in k13958 in k13955 in k13952 in make-markov in k7924 in k7921 in k5905 in k5612 in k5609 in k5605 in k5314 in k5311 in k5308 in k5305 */
static void C_ccall f_14105(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_13963(t7,t6);}

/* k14064 in k13958 in k13955 in k13952 in make-markov in k7924 in k7921 in k5905 in k5612 in k5609 in k5605 in k5314 in k5311 in k5308 in k5305 */
static void C_ccall f_14066(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_14066,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_14070,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("ChickenBridge.scm: 368  error");
t4=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[21],((C_word*)t0)[2]);}
else{
t4=t2;
f_14070(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k14068 in k14064 in k13958 in k13955 in k13952 in make-markov in k7924 in k7921 in k5905 in k5612 in k5609 in k5605 in k5314 in k5311 in k5308 in k5305 */
static void C_ccall f_14070(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_13963(t7,t6);}

/* k14029 in k13958 in k13955 in k13952 in make-markov in k7924 in k7921 in k5905 in k5612 in k5609 in k5605 in k5314 in k5311 in k5308 in k5305 */
static void C_ccall f_14031(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_14031,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_14035,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("ChickenBridge.scm: 368  error");
t4=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[21],((C_word*)t0)[2]);}
else{
t4=t2;
f_14035(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k14033 in k14029 in k13958 in k13955 in k13952 in make-markov in k7924 in k7921 in k5905 in k5612 in k5609 in k5605 in k5314 in k5311 in k5308 in k5305 */
static void C_ccall f_14035(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_13963(t7,t6);}

/* k13961 in k13958 in k13955 in k13952 in make-markov in k7924 in k7921 in k5905 in k5612 in k5609 in k5605 in k5314 in k5311 in k5308 in k5305 */
static void C_fcall f_13963(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_13963,NULL,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_13966,a[2]=((C_word*)t0)[4],a[3]=((C_word*)t0)[5],a[4]=((C_word*)t0)[6],a[5]=((C_word*)t0)[7],a[6]=((C_word*)t0)[8],tmp=(C_word)a,a+=7,tmp);
if(C_truep((C_word)C_i_nullp(((C_word*)((C_word*)t0)[3])[1]))){
t3=t2;
f_13966(2,t3,C_SCHEME_UNDEFINED);}
else{
C_trace("ChickenBridge.scm: 368  error");
t3=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t3))(4,t3,t2,lf[5],((C_word*)t0)[2]);}}

/* k13964 in k13961 in k13958 in k13955 in k13952 in make-markov in k7924 in k7921 in k5905 in k5612 in k5609 in k5605 in k5314 in k5311 in k5308 in k5305 */
static void C_ccall f_13966(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_13966,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_13969,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],tmp=(C_word)a,a+=7,tmp);
C_trace("ChickenBridge.scm: 368  %alloc-pattern");
f_9224(t2);}

/* k13967 in k13964 in k13961 in k13958 in k13955 in k13952 in make-markov in k7924 in k7921 in k5905 in k5612 in k5609 in k5605 in k5314 in k5311 in k5308 in k5305 */
static void C_ccall f_13969(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_13969,2,t0,t1);}
t2=(C_word)C_i_length(((C_word*)((C_word*)t0)[6])[1]);
t3=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_13975,a[2]=((C_word*)t0)[6],a[3]=((C_word*)t0)[4],a[4]=t1,a[5]=((C_word*)t0)[5],tmp=(C_word)a,a+=6,tmp);
t4=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_14002,a[2]=((C_word)li181),tmp=(C_word)a,a+=3,tmp);
C_trace("ChickenBridge.scm: 368  initialize-pattern");
f_9234(t3,t1,((C_word*)((C_word*)t0)[6])[1],((C_word*)((C_word*)t0)[3])[1],((C_word*)((C_word*)t0)[2])[1],C_fix(0),t2,t2,C_retrieve2(lf[250],"next-in-markov"),t4);}

/* a14001 in k13967 in k13964 in k13961 in k13958 in k13955 in k13952 in make-markov in k7924 in k7921 in k5905 in k5612 in k5609 in k5605 in k5314 in k5311 in k5308 in k5305 */
static void C_ccall f_14002(C_word c,C_word t0,C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word ab[4],*a=ab;
if(c!=4) C_bad_argc_2(c,4,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr4,(void*)f_14002,4,t0,t1,t2,t3);}
t4=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_14010,a[2]=t2,a[3]=t1,tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 368  pattern-data");
f_8953(t4,t3);}

/* k14008 in a14001 in k13967 in k13964 in k13961 in k13958 in k13955 in k13952 in make-markov in k7924 in k7921 in k5905 in k5612 in k5609 in k5605 in k5314 in k5311 in k5308 in k5305 */
static void C_ccall f_14010(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("for-each");
t2=*((C_word*)lf[214]+1);
((C_proc4)(void*)(*((C_word*)t2+1)))(4,t2,((C_word*)t0)[3],((C_word*)t0)[2],t1);}

/* k13973 in k13967 in k13964 in k13961 in k13958 in k13955 in k13952 in make-markov in k7924 in k7921 in k5905 in k5612 in k5609 in k5605 in k5314 in k5311 in k5308 in k5305 */
static void C_ccall f_13975(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_13975,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_13978,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],tmp=(C_word)a,a+=5,tmp);
if(C_truep((C_word)C_i_pairp(((C_word*)((C_word*)t0)[3])[1]))){
t3=t2;
f_13978(t3,C_SCHEME_UNDEFINED);}
else{
t3=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_13988,a[2]=t2,a[3]=((C_word*)t0)[3],tmp=(C_word)a,a+=4,tmp);
t4=(C_word)C_i_car(((C_word*)((C_word*)t0)[2])[1]);
t5=(C_word)C_i_car(t4);
t6=(C_word)C_i_length(t5);
C_trace("ChickenBridge.scm: 368  make-list");
t7=C_retrieve(lf[61]);
((C_proc4)C_retrieve_proc(t7))(4,t7,t3,t6,lf[95]);}}

/* k13986 in k13973 in k13967 in k13964 in k13961 in k13958 in k13955 in k13952 in make-markov in k7924 in k7921 in k5905 in k5612 in k5609 in k5605 in k5314 in k5311 in k5308 in k5305 */
static void C_ccall f_13988(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[3])+1,t1);
t3=((C_word*)t0)[2];
f_13978(t3,t2);}

/* k13976 in k13973 in k13967 in k13964 in k13961 in k13958 in k13955 in k13952 in make-markov in k7924 in k7921 in k5905 in k5612 in k5609 in k5605 in k5314 in k5311 in k5308 in k5305 */
static void C_fcall f_13978(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[4],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_13978,NULL,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_13981,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 368  pattern-cache-set!");
f_9160(t2,((C_word*)t0)[3],((C_word*)((C_word*)t0)[2])[1]);}

/* k13979 in k13976 in k13973 in k13967 in k13964 in k13961 in k13958 in k13955 in k13952 in make-markov in k7924 in k7921 in k5905 in k5612 in k5609 in k5605 in k5314 in k5311 in k5308 in k5305 */
static void C_ccall f_13981(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
t2=((C_word*)t0)[3];
((C_proc2)(void*)(*((C_word*)t2+1)))(2,t2,((C_word*)t0)[2]);}

/* next-in-weighting in k7924 in k7921 in k5905 in k5612 in k5609 in k5605 in k5314 in k5311 in k5308 in k5305 */
static void C_ccall f_13517(C_word c,C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word ab[4],*a=ab;
if(c!=3) C_bad_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr3,(void*)f_13517,3,t0,t1,t2);}
t3=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_13521,a[2]=t2,a[3]=t1,tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 368  pattern-data");
f_8953(t3,t2);}

/* k13519 in next-in-weighting in k7924 in k7921 in k5905 in k5612 in k5609 in k5605 in k5314 in k5311 in k5308 in k5305 */
static void C_ccall f_13521(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[5],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_13521,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_13524,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=t1,tmp=(C_word)a,a+=5,tmp);
C_trace("ChickenBridge.scm: 368  pattern-period");
f_9007(t2,((C_word*)t0)[2]);}

/* k13522 in k13519 in next-in-weighting in k7924 in k7921 in k5905 in k5612 in k5609 in k5605 in k5314 in k5311 in k5308 in k5305 */
static void C_ccall f_13524(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[6],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_13524,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_13527,a[2]=t1,a[3]=((C_word*)t0)[2],a[4]=((C_word*)t0)[3],a[5]=((C_word*)t0)[4],tmp=(C_word)a,a+=6,tmp);
C_trace("ChickenBridge.scm: 368  pattern-flags");
f_8935(t2,((C_word*)t0)[2]);}

/* k13525 in k13522 in k13519 in next-in-weighting in k7924 in k7921 in k5905 in k5612 in k5609 in k5605 in k5314 in k5311 in k5308 in k5305 */
static void C_ccall f_13527(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[11],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_13527,2,t0,t1);}
t2=(C_word)C_i_cdr(((C_word*)t0)[5]);
t3=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_13533,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[5],a[4]=t2,a[5]=((C_word*)t0)[4],tmp=(C_word)a,a+=6,tmp);
t4=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_13696,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=t3,tmp=(C_word)a,a+=5,tmp);
C_trace("ChickenBridge.scm: 368  bitwise-test");
f_6299(t4,t1,C_fix(4));}

/* k13694 in k13525 in k13522 in k13519 in next-in-weighting in k7924 in k7921 in k5905 in k5612 in k5609 in k5605 in k5314 in k5311 in k5308 in k5305 */
static void C_ccall f_13696(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[5],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_13696,2,t0,t1);}
if(C_truep(t1)){
t2=((C_word*)t0)[4];
f_13533(2,t2,C_SCHEME_UNDEFINED);}
else{
t2=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_13709,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],tmp=(C_word)a,a+=5,tmp);
C_trace("ChickenBridge.scm: 368  period-count");
f_8785(t2,((C_word*)t0)[2]);}}

/* k13707 in k13694 in k13525 in k13522 in k13519 in next-in-weighting in k7924 in k7921 in k5905 in k5612 in k5609 in k5605 in k5314 in k5311 in k5308 in k5305 */
static void C_ccall f_13709(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[5],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_13709,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_13713,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=t1,tmp=(C_word)a,a+=5,tmp);
C_trace("ChickenBridge.scm: 368  period-length");
f_8803(t2,((C_word*)t0)[2]);}

/* k13711 in k13707 in k13694 in k13525 in k13522 in k13519 in next-in-weighting in k7924 in k7921 in k5905 in k5612 in k5609 in k5605 in k5314 in k5311 in k5308 in k5305 */
static void C_ccall f_13713(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
if(C_truep((C_word)C_i_nequalp(((C_word*)t0)[4],t1))){
C_trace("ChickenBridge.scm: 368  recalc-weightings");
f_13405(((C_word*)t0)[3],((C_word*)t0)[2],C_SCHEME_FALSE);}
else{
t2=((C_word*)t0)[3];
f_13533(2,t2,C_SCHEME_UNDEFINED);}}

/* k13531 in k13525 in k13522 in k13519 in next-in-weighting in k7924 in k7921 in k5905 in k5612 in k5609 in k5605 in k5314 in k5311 in k5308 in k5305 */
static void C_ccall f_13533(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[14],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_13533,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_13539,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],tmp=(C_word)a,a+=6,tmp);
if(C_truep((C_word)C_i_nullp(((C_word*)t0)[4]))){
t3=t2;
f_13539(t3,C_SCHEME_FALSE);}
else{
t3=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_13670,a[2]=((C_word*)t0)[4],a[3]=t2,tmp=(C_word)a,a+=4,tmp);
t4=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_13689,a[2]=((C_word*)t0)[4],a[3]=t3,tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 368  random-item-count");
f_12555(t4,((C_word*)t0)[4]);}}

/* k13687 in k13531 in k13525 in k13522 in k13519 in next-in-weighting in k7924 in k7921 in k5905 in k5612 in k5609 in k5605 in k5314 in k5311 in k5308 in k5305 */
static void C_ccall f_13689(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[4],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_13689,2,t0,t1);}
t2=(C_word)C_a_i_plus(&a,2,C_fix(1),t1);
C_trace("ChickenBridge.scm: 368  random-item-count-set!");
f_12546(((C_word*)t0)[3],((C_word*)t0)[2],t2);}

/* k13668 in k13531 in k13525 in k13522 in k13519 in next-in-weighting in k7924 in k7921 in k5905 in k5612 in k5609 in k5605 in k5314 in k5311 in k5308 in k5305 */
static void C_ccall f_13670(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[4],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_13670,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_13677,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 368  random-item-count");
f_12555(t2,((C_word*)t0)[2]);}

/* k13675 in k13668 in k13531 in k13525 in k13522 in k13519 in next-in-weighting in k7924 in k7921 in k5905 in k5612 in k5609 in k5605 in k5314 in k5311 in k5308 in k5305 */
static void C_ccall f_13677(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[4],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_13677,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_13681,a[2]=t1,a[3]=((C_word*)t0)[3],tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 368  random-item-min");
f_12519(t2,((C_word*)t0)[2]);}

/* k13679 in k13675 in k13668 in k13531 in k13525 in k13522 in k13519 in next-in-weighting in k7924 in k7921 in k5905 in k5612 in k5609 in k5605 in k5314 in k5311 in k5308 in k5305 */
static void C_ccall f_13681(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
t2=((C_word*)t0)[3];
f_13539(t2,(C_word)C_i_lessp(((C_word*)t0)[2],t1));}

/* k13537 in k13531 in k13525 in k13522 in k13519 in next-in-weighting in k7924 in k7921 in k5905 in k5612 in k5609 in k5605 in k5314 in k5311 in k5308 in k5305 */
static void C_fcall f_13539(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[5],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_13539,NULL,2,t0,t1);}
if(C_truep(t1)){
C_trace("ChickenBridge.scm: 368  random-item-datum");
f_12465(((C_word*)t0)[5],((C_word*)t0)[4]);}
else{
t2=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_13545,a[2]=((C_word*)t0)[4],a[3]=((C_word*)t0)[5],a[4]=((C_word*)t0)[3],tmp=(C_word)a,a+=5,tmp);
C_trace("ChickenBridge.scm: 368  pattern-cache");
f_9169(t2,((C_word*)t0)[2]);}}

/* k13543 in k13537 in k13531 in k13525 in k13522 in k13519 in next-in-weighting in k7924 in k7921 in k5905 in k5612 in k5609 in k5605 in k5314 in k5311 in k5308 in k5305 */
static void C_ccall f_13545(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word ab[19],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_13545,2,t0,t1);}
t2=(C_word)C_i_car(((C_word*)t0)[4]);
t3=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_13549,a[2]=((C_word)li177),tmp=(C_word)a,a+=3,tmp);
t4=C_SCHEME_FALSE;
t5=(*a=C_VECTOR_TYPE|1,a[1]=t4,tmp=(C_word)a,a+=2,tmp);
t6=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_13587,a[2]=t2,a[3]=((C_word*)t0)[2],a[4]=((C_word*)t0)[3],a[5]=t5,a[6]=((C_word*)t0)[4],tmp=(C_word)a,a+=7,tmp);
t7=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_13629,a[2]=t6,a[3]=t5,a[4]=t1,a[5]=t2,a[6]=t3,tmp=(C_word)a,a+=7,tmp);
C_trace("ChickenBridge.scm: 368  pick");
f_13549(t7,t2,t1);}

/* k13627 in k13543 in k13537 in k13531 in k13525 in k13522 in k13519 in next-in-weighting in k7924 in k7921 in k5905 in k5612 in k5609 in k5605 in k5314 in k5311 in k5308 in k5305 */
static void C_ccall f_13629(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[10],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_13629,2,t0,t1);}
t2=C_SCHEME_UNDEFINED;
t3=(*a=C_VECTOR_TYPE|1,a[1]=t2,tmp=(C_word)a,a+=2,tmp);
t4=C_set_block_item(t3,0,(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_13631,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=t3,a[7]=((C_word)li179),tmp=(C_word)a,a+=8,tmp));
t5=((C_word*)t3)[1];
f_13631(t5,((C_word*)t0)[2],t1);}

/* do1653 in k13627 in k13543 in k13537 in k13531 in k13525 in k13522 in k13519 in next-in-weighting in k7924 in k7921 in k5905 in k5612 in k5609 in k5605 in k5314 in k5311 in k5308 in k5305 */
static void C_fcall f_13631(C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word t5;
C_word ab[13],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_13631,NULL,3,t0,t1,t2);}
t3=(*a=C_CLOSURE_TYPE|8,a[1]=(C_word)f_13650,a[2]=t2,a[3]=((C_word*)t0)[2],a[4]=((C_word*)t0)[3],a[5]=((C_word*)t0)[4],a[6]=((C_word*)t0)[5],a[7]=t1,a[8]=((C_word*)t0)[6],tmp=(C_word)a,a+=9,tmp);
t4=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_13653,a[2]=t2,a[3]=t3,tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 368  random-item-max");
f_12537(t4,t2);}

/* k13651 in do1653 in k13627 in k13543 in k13537 in k13531 in k13525 in k13522 in k13519 in next-in-weighting in k7924 in k7921 in k5905 in k5612 in k5609 in k5605 in k5314 in k5311 in k5308 in k5305 */
static void C_ccall f_13653(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[4],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_13653,2,t0,t1);}
if(C_truep(t1)){
t2=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_13660,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 368  random-item-count");
f_12555(t2,((C_word*)t0)[2]);}
else{
t2=((C_word*)t0)[3];
f_13650(t2,C_SCHEME_FALSE);}}

/* k13658 in k13651 in do1653 in k13627 in k13543 in k13537 in k13531 in k13525 in k13522 in k13519 in next-in-weighting in k7924 in k7921 in k5905 in k5612 in k5609 in k5605 in k5314 in k5311 in k5308 in k5305 */
static void C_ccall f_13660(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[4],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_13660,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_13664,a[2]=t1,a[3]=((C_word*)t0)[3],tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 368  random-item-max");
f_12537(t2,((C_word*)t0)[2]);}

/* k13662 in k13658 in k13651 in do1653 in k13627 in k13543 in k13537 in k13531 in k13525 in k13522 in k13519 in next-in-weighting in k7924 in k7921 in k5905 in k5612 in k5609 in k5605 in k5314 in k5311 in k5308 in k5305 */
static void C_ccall f_13664(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
t2=((C_word*)t0)[3];
f_13650(t2,(C_word)C_i_nequalp(((C_word*)t0)[2],t1));}

/* k13648 in do1653 in k13627 in k13543 in k13537 in k13531 in k13525 in k13522 in k13519 in next-in-weighting in k7924 in k7921 in k5905 in k5612 in k5609 in k5605 in k5314 in k5311 in k5308 in k5305 */
static void C_fcall f_13650(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[4],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_13650,NULL,2,t0,t1);}
if(C_truep(t1)){
t2=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_13646,a[2]=((C_word*)t0)[7],a[3]=((C_word*)t0)[8],tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 368  pick");
f_13549(t2,((C_word*)t0)[5],((C_word*)t0)[4]);}
else{
t2=C_mutate(((C_word *)((C_word*)t0)[3])+1,((C_word*)t0)[2]);
t3=((C_word*)t0)[7];
((C_proc2)(void*)(*((C_word*)t3+1)))(2,t3,t2);}}

/* k13644 in k13648 in do1653 in k13627 in k13543 in k13537 in k13531 in k13525 in k13522 in k13519 in next-in-weighting in k7924 in k7921 in k5905 in k5612 in k5609 in k5605 in k5314 in k5311 in k5308 in k5305 */
static void C_ccall f_13646(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
t2=((C_word*)((C_word*)t0)[3])[1];
f_13631(t2,((C_word*)t0)[2],t1);}

/* k13585 in k13543 in k13537 in k13531 in k13525 in k13522 in k13519 in next-in-weighting in k7924 in k7921 in k5905 in k5612 in k5609 in k5605 in k5314 in k5311 in k5308 in k5305 */
static void C_ccall f_13587(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word ab[11],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_13587,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_13590,a[2]=((C_word*)t0)[4],a[3]=((C_word*)t0)[5],a[4]=((C_word*)t0)[6],tmp=(C_word)a,a+=5,tmp);
t3=(C_word)C_eqp(((C_word*)((C_word*)t0)[5])[1],((C_word*)t0)[3]);
if(C_truep(t3)){
t4=t2;
f_13590(2,t4,C_SCHEME_UNDEFINED);}
else{
t4=C_SCHEME_UNDEFINED;
t5=(*a=C_VECTOR_TYPE|1,a[1]=t4,tmp=(C_word)a,a+=2,tmp);
t6=C_set_block_item(t5,0,(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_13604,a[2]=t5,a[3]=((C_word)li178),tmp=(C_word)a,a+=4,tmp));
t7=((C_word*)t5)[1];
f_13604(t7,t2,((C_word*)t0)[2]);}}

/* do1657 in k13585 in k13543 in k13537 in k13531 in k13525 in k13522 in k13519 in next-in-weighting in k7924 in k7921 in k5905 in k5612 in k5609 in k5605 in k5314 in k5311 in k5308 in k5305 */
static void C_fcall f_13604(C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word t5;
C_word ab[5],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_13604,NULL,3,t0,t1,t2);}
if(C_truep((C_word)C_i_nullp(t2))){
t3=t1;
((C_proc2)(void*)(*((C_word*)t3+1)))(2,t3,C_SCHEME_FALSE);}
else{
t3=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_13614,a[2]=t1,a[3]=((C_word*)t0)[2],a[4]=t2,tmp=(C_word)a,a+=5,tmp);
t4=(C_word)C_i_car(t2);
C_trace("ChickenBridge.scm: 368  random-item-count-set!");
f_12546(t3,t4,C_fix(0));}}

/* k13612 in do1657 in k13585 in k13543 in k13537 in k13531 in k13525 in k13522 in k13519 in next-in-weighting in k7924 in k7921 in k5905 in k5612 in k5609 in k5605 in k5314 in k5311 in k5308 in k5305 */
static void C_ccall f_13614(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word *a;
t2=(C_word)C_i_cdr(((C_word*)t0)[4]);
t3=((C_word*)((C_word*)t0)[3])[1];
f_13604(t3,((C_word*)t0)[2],t2);}

/* k13588 in k13585 in k13543 in k13537 in k13531 in k13525 in k13522 in k13519 in next-in-weighting in k7924 in k7921 in k5905 in k5612 in k5609 in k5605 in k5314 in k5311 in k5308 in k5305 */
static void C_ccall f_13590(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word *a;
t2=(C_word)C_i_set_cdr(((C_word*)t0)[4],((C_word*)((C_word*)t0)[3])[1]);
C_trace("ChickenBridge.scm: 368  random-item-datum");
f_12465(((C_word*)t0)[2],((C_word*)((C_word*)t0)[3])[1]);}

/* pick in k13543 in k13537 in k13531 in k13525 in k13522 in k13519 in next-in-weighting in k7924 in k7921 in k5905 in k5612 in k5609 in k5605 in k5314 in k5311 in k5308 in k5305 */
static void C_fcall f_13549(C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word ab[4],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_13549,NULL,3,t1,t2,t3);}
t4=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_13557,a[2]=t2,a[3]=t1,tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 368  tb:ranf");
f_6483(t4,t3);}

/* k13555 in pick in k13543 in k13537 in k13531 in k13525 in k13522 in k13519 in next-in-weighting in k7924 in k7921 in k5905 in k5612 in k5609 in k5605 in k5314 in k5311 in k5308 in k5305 */
static void C_ccall f_13557(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[6],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_13557,2,t0,t1);}
t2=C_SCHEME_UNDEFINED;
t3=(*a=C_VECTOR_TYPE|1,a[1]=t2,tmp=(C_word)a,a+=2,tmp);
t4=C_set_block_item(t3,0,(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_13559,a[2]=t3,a[3]=((C_word)li176),tmp=(C_word)a,a+=4,tmp));
t5=((C_word*)t3)[1];
f_13559(t5,((C_word*)t0)[3],((C_word*)t0)[2],t1);}

/* do1648 in k13555 in pick in k13543 in k13537 in k13531 in k13525 in k13522 in k13519 in next-in-weighting in k7924 in k7921 in k5905 in k5612 in k5609 in k5605 in k5314 in k5311 in k5308 in k5305 */
static void C_fcall f_13559(C_word t0,C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word t6;
C_word ab[6],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_13559,NULL,4,t0,t1,t2,t3);}
t4=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_13580,a[2]=((C_word*)t0)[2],a[3]=t2,a[4]=t1,a[5]=t3,tmp=(C_word)a,a+=6,tmp);
t5=(C_word)C_i_car(t2);
C_trace("ChickenBridge.scm: 368  random-item-index");
f_12483(t4,t5);}

/* k13578 in do1648 in k13555 in pick in k13543 in k13537 in k13531 in k13525 in k13522 in k13519 in next-in-weighting in k7924 in k7921 in k5905 in k5612 in k5609 in k5605 in k5314 in k5311 in k5308 in k5305 */
static void C_ccall f_13580(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word *a;
if(C_truep((C_word)C_i_lessp(((C_word*)t0)[5],t1))){
t2=((C_word*)t0)[4];
((C_proc2)(void*)(*((C_word*)t2+1)))(2,t2,(C_word)C_i_car(((C_word*)t0)[3]));}
else{
t2=(C_word)C_i_cdr(((C_word*)t0)[3]);
t3=((C_word*)((C_word*)t0)[2])[1];
f_13559(t3,((C_word*)t0)[4],t2,((C_word*)t0)[5]);}}

/* recalc-weightings in k7924 in k7921 in k5905 in k5612 in k5609 in k5605 in k5314 in k5311 in k5308 in k5305 */
static void C_fcall f_13405(C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word ab[5],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_13405,NULL,3,t1,t2,t3);}
t4=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_13515,a[2]=t1,a[3]=t2,a[4]=t3,tmp=(C_word)a,a+=5,tmp);
C_trace("ChickenBridge.scm: 368  pattern-data");
f_8953(t4,t2);}

/* k13513 in recalc-weightings in k7924 in k7921 in k5905 in k5612 in k5609 in k5605 in k5314 in k5311 in k5308 in k5305 */
static void C_ccall f_13515(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word ab[16],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_13515,2,t0,t1);}
t2=(C_word)C_i_car(t1);
t3=lf[248];
t4=(*a=C_VECTOR_TYPE|1,a[1]=t3,tmp=(C_word)a,a+=2,tmp);
t5=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_13412,a[2]=t2,a[3]=((C_word*)t0)[2],a[4]=t4,a[5]=((C_word*)t0)[3],a[6]=((C_word*)t0)[4],tmp=(C_word)a,a+=7,tmp);
t6=C_SCHEME_UNDEFINED;
t7=(*a=C_VECTOR_TYPE|1,a[1]=t6,tmp=(C_word)a,a+=2,tmp);
t8=C_set_block_item(t7,0,(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_13474,a[2]=t7,a[3]=t4,a[4]=((C_word)li174),tmp=(C_word)a,a+=5,tmp));
t9=((C_word*)t7)[1];
f_13474(t9,t5,t2);}

/* do1620 in k13513 in recalc-weightings in k7924 in k7921 in k5905 in k5612 in k5609 in k5605 in k5314 in k5311 in k5308 in k5305 */
static void C_fcall f_13474(C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_13474,NULL,3,t0,t1,t2);}
if(C_truep((C_word)C_i_nullp(t2))){
t3=t1;
((C_proc2)(void*)(*((C_word*)t3+1)))(2,t3,C_SCHEME_FALSE);}
else{
t3=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_13503,a[2]=t1,a[3]=((C_word*)t0)[2],a[4]=t2,a[5]=((C_word*)t0)[3],tmp=(C_word)a,a+=6,tmp);
t4=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_13507,a[2]=t3,tmp=(C_word)a,a+=3,tmp);
t5=(C_word)C_i_car(t2);
C_trace("ChickenBridge.scm: 368  random-item-weight");
f_12501(t4,t5);}}

/* k13505 in do1620 in k13513 in recalc-weightings in k7924 in k7921 in k5905 in k5612 in k5609 in k5605 in k5314 in k5311 in k5308 in k5305 */
static void C_ccall f_13507(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 368  next-1");
f_9575(((C_word*)t0)[2],t1);}

/* k13501 in do1620 in k13513 in recalc-weightings in k7924 in k7921 in k5905 in k5612 in k5609 in k5605 in k5314 in k5311 in k5308 in k5305 */
static void C_ccall f_13503(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_13503,2,t0,t1);}
t2=(C_word)C_a_i_plus(&a,2,((C_word*)((C_word*)t0)[5])[1],t1);
t3=C_mutate(((C_word *)((C_word*)t0)[5])+1,t2);
t4=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_13488,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],tmp=(C_word)a,a+=5,tmp);
t5=(C_word)C_i_car(((C_word*)t0)[4]);
C_trace("ChickenBridge.scm: 368  random-item-index-set!");
f_12474(t4,t5,((C_word*)((C_word*)t0)[5])[1]);}

/* k13486 in k13501 in do1620 in k13513 in recalc-weightings in k7924 in k7921 in k5905 in k5612 in k5609 in k5605 in k5314 in k5311 in k5308 in k5305 */
static void C_ccall f_13488(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word *a;
t2=(C_word)C_i_cdr(((C_word*)t0)[4]);
t3=((C_word*)((C_word*)t0)[3])[1];
f_13474(t3,((C_word*)t0)[2],t2);}

/* k13410 in k13513 in recalc-weightings in k7924 in k7921 in k5905 in k5612 in k5609 in k5605 in k5314 in k5311 in k5308 in k5305 */
static void C_ccall f_13412(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[8],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_13412,2,t0,t1);}
if(C_truep(((C_word*)t0)[6])){
t2=C_SCHEME_UNDEFINED;
t3=(*a=C_VECTOR_TYPE|1,a[1]=t2,tmp=(C_word)a,a+=2,tmp);
t4=C_set_block_item(t3,0,(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_13420,a[2]=((C_word*)t0)[4],a[3]=t3,a[4]=((C_word*)t0)[5],a[5]=((C_word)li173),tmp=(C_word)a,a+=6,tmp));
t5=((C_word*)t3)[1];
f_13420(t5,((C_word*)t0)[3],((C_word*)t0)[2],C_fix(0),C_fix(0));}
else{
C_trace("ChickenBridge.scm: 368  pattern-cache-set!");
f_9160(((C_word*)t0)[3],((C_word*)t0)[5],((C_word*)((C_word*)t0)[4])[1]);}}

/* do1626 in k13410 in k13513 in recalc-weightings in k7924 in k7921 in k5905 in k5612 in k5609 in k5605 in k5314 in k5311 in k5308 in k5305 */
static void C_fcall f_13420(C_word t0,C_word t1,C_word t2,C_word t3,C_word t4){
C_word tmp;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word ab[15],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_13420,NULL,5,t0,t1,t2,t3,t4);}
t5=(*a=C_VECTOR_TYPE|1,a[1]=t3,tmp=(C_word)a,a+=2,tmp);
t6=(*a=C_VECTOR_TYPE|1,a[1]=t4,tmp=(C_word)a,a+=2,tmp);
if(C_truep((C_word)C_i_nullp(t2))){
C_trace("ChickenBridge.scm: 368  pattern-cache-set!");
f_9160(t1,((C_word*)t0)[4],((C_word*)t6)[1]);}
else{
t7=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_13453,a[2]=t1,a[3]=((C_word*)t0)[3],a[4]=t2,a[5]=t6,a[6]=t5,tmp=(C_word)a,a+=7,tmp);
t8=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_13465,a[2]=t7,a[3]=((C_word*)t0)[2],tmp=(C_word)a,a+=4,tmp);
t9=(C_word)C_i_car(t2);
C_trace("ChickenBridge.scm: 368  random-item-index");
f_12483(t8,t9);}}

/* k13463 in do1626 in k13410 in k13513 in recalc-weightings in k7924 in k7921 in k5905 in k5612 in k5609 in k5605 in k5314 in k5311 in k5308 in k5305 */
static void C_ccall f_13465(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[8],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_13465,2,t0,t1);}
t2=(C_word)C_a_i_divide(&a,2,t1,((C_word*)((C_word*)t0)[3])[1]);
t3=(C_word)C_a_i_times(&a,2,t2,C_fix(1073741823));
C_trace("ChickenBridge.scm: 368  floor");
t4=*((C_word*)lf[149]+1);
((C_proc3)C_retrieve_proc(t4))(3,t4,((C_word*)t0)[2],t3);}

/* k13451 in do1626 in k13410 in k13513 in recalc-weightings in k7924 in k7921 in k5905 in k5612 in k5609 in k5605 in k5314 in k5311 in k5308 in k5305 */
static void C_ccall f_13453(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_13453,2,t0,t1);}
t2=(C_word)C_i_inexact_to_exact(t1);
t3=C_mutate(((C_word *)((C_word*)t0)[6])+1,t2);
t4=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_13437,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[5],tmp=(C_word)a,a+=7,tmp);
t5=(C_word)C_i_car(((C_word*)t0)[4]);
C_trace("ChickenBridge.scm: 368  random-item-index-set!");
f_12474(t4,t5,((C_word*)((C_word*)t0)[6])[1]);}

/* k13435 in k13451 in do1626 in k13410 in k13513 in recalc-weightings in k7924 in k7921 in k5905 in k5612 in k5609 in k5605 in k5314 in k5311 in k5308 in k5305 */
static void C_ccall f_13437(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,((C_word*)((C_word*)t0)[5])[1]);
t3=(C_word)C_i_cdr(((C_word*)t0)[4]);
t4=((C_word*)((C_word*)t0)[3])[1];
f_13420(t4,((C_word*)t0)[2],t3,((C_word*)((C_word*)t0)[5])[1],((C_word*)((C_word*)t0)[6])[1]);}

/* make-weighting in k7924 in k7921 in k5905 in k5612 in k5609 in k5605 in k5314 in k5311 in k5308 in k5305 */
static void C_ccall f_12638(C_word c,C_word t0,C_word t1,C_word t2,...){
C_word tmp;
C_word t3;
va_list v;
C_word *a,c2=c;
C_save_rest(t2,c2,3);
if(c<3) C_bad_min_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_demand(c*C_SIZEOF_PAIR+7)){
C_save_and_reclaim((void*)tr3r,(void*)f_12638r,3,t0,t1,t2);}
else{
a=C_alloc((c-3)*3);
t3=C_restore_rest(a,C_rest_count(0));
f_12638r(t0,t1,t2,t3);}}

static void C_ccall f_12638r(C_word t0,C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word t6;
C_word *a=C_alloc(7);
t4=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_12642,a[2]=t1,a[3]=t3,tmp=(C_word)a,a+=4,tmp);
t5=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_12955,a[2]=((C_word)li171),tmp=(C_word)a,a+=3,tmp);
C_trace("map");
t6=*((C_word*)lf[17]+1);
((C_proc4)(void*)(*((C_word*)t6+1)))(4,t6,t4,t5,t2);}

/* %make-random-item in make-weighting in k7924 in k7921 in k5905 in k5612 in k5609 in k5605 in k5314 in k5311 in k5308 in k5305 */
static void C_ccall f_12955(C_word c,C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word ab[9],*a=ab;
if(c!=3) C_bad_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr3,(void*)f_12955,3,t0,t1,t2);}
t3=C_SCHEME_FALSE;
t4=(*a=C_VECTOR_TYPE|1,a[1]=t3,tmp=(C_word)a,a+=2,tmp);
t5=C_SCHEME_END_OF_LIST;
t6=(*a=C_VECTOR_TYPE|1,a[1]=t5,tmp=(C_word)a,a+=2,tmp);
t7=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_12962,a[2]=t4,a[3]=t1,a[4]=t6,tmp=(C_word)a,a+=5,tmp);
if(C_truep((C_word)C_i_pairp(t2))){
t8=(C_word)C_i_car(t2);
t9=C_set_block_item(t4,0,t8);
t10=(C_word)C_i_cdr(t2);
t11=C_set_block_item(t6,0,t10);
t12=t7;
f_12962(t12,t11);}
else{
t8=C_set_block_item(t4,0,t2);
t9=t7;
f_12962(t9,t8);}}

/* k12960 in %make-random-item in make-weighting in k7924 in k7921 in k5905 in k5612 in k5609 in k5605 in k5314 in k5311 in k5308 in k5305 */
static void C_fcall f_12962(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word t14;
C_word t15;
C_word t16;
C_word t17;
C_word t18;
C_word t19;
C_word t20;
C_word t21;
C_word t22;
C_word t23;
C_word t24;
C_word t25;
C_word t26;
C_word t27;
C_word ab[59],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_12962,NULL,2,t0,t1);}
t2=C_fix(1);
t3=(*a=C_VECTOR_TYPE|1,a[1]=t2,tmp=(C_word)a,a+=2,tmp);
t4=C_fix(1);
t5=(*a=C_VECTOR_TYPE|1,a[1]=t4,tmp=(C_word)a,a+=2,tmp);
t6=C_SCHEME_FALSE;
t7=(*a=C_VECTOR_TYPE|1,a[1]=t6,tmp=(C_word)a,a+=2,tmp);
t8=C_SCHEME_FALSE;
t9=(*a=C_VECTOR_TYPE|1,a[1]=t8,tmp=(C_word)a,a+=2,tmp);
t10=C_SCHEME_FALSE;
t11=(*a=C_VECTOR_TYPE|1,a[1]=t10,tmp=(C_word)a,a+=2,tmp);
t12=C_SCHEME_FALSE;
t13=(*a=C_VECTOR_TYPE|1,a[1]=t12,tmp=(C_word)a,a+=2,tmp);
t14=((C_word*)((C_word*)t0)[4])[1];
t15=(*a=C_VECTOR_TYPE|1,a[1]=t14,tmp=(C_word)a,a+=2,tmp);
t16=C_SCHEME_FALSE;
t17=(*a=C_VECTOR_TYPE|1,a[1]=t16,tmp=(C_word)a,a+=2,tmp);
t18=(*a=C_CLOSURE_TYPE|12,a[1]=(C_word)f_12965,a[2]=t13,a[3]=t11,a[4]=t17,a[5]=t9,a[6]=((C_word*)t0)[4],a[7]=t15,a[8]=t7,a[9]=t5,a[10]=t3,a[11]=((C_word*)t0)[2],a[12]=((C_word*)t0)[3],tmp=(C_word)a,a+=13,tmp);
if(C_truep((C_word)C_i_nullp(((C_word*)t15)[1]))){
t19=t18;
f_12965(t19,C_SCHEME_UNDEFINED);}
else{
t19=(C_word)C_i_car(((C_word*)t15)[1]);
t20=(C_word)C_eqp(t19,lf[245]);
if(C_truep(t20)){
t21=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_13268,a[2]=((C_word*)t0)[4],a[3]=t18,a[4]=t15,a[5]=t17,a[6]=t9,a[7]=t3,tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)t9)[1])){
C_trace("ChickenBridge.scm: 368  error");
t22=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t22))(4,t22,t21,lf[19],lf[245]);}
else{
t22=t21;
f_13268(2,t22,C_SCHEME_UNDEFINED);}}
else{
t21=(C_word)C_eqp(t19,lf[246]);
if(C_truep(t21)){
t22=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_13303,a[2]=((C_word*)t0)[4],a[3]=t18,a[4]=t15,a[5]=t17,a[6]=t11,a[7]=t5,tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)t11)[1])){
C_trace("ChickenBridge.scm: 368  error");
t23=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t23))(4,t23,t22,lf[19],lf[246]);}
else{
t23=t22;
f_13303(2,t23,C_SCHEME_UNDEFINED);}}
else{
t22=(C_word)C_eqp(t19,lf[247]);
if(C_truep(t22)){
t23=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_13338,a[2]=((C_word*)t0)[4],a[3]=t18,a[4]=t15,a[5]=t17,a[6]=t13,a[7]=t7,tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)t13)[1])){
C_trace("ChickenBridge.scm: 368  error");
t24=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t24))(4,t24,t23,lf[19],lf[247]);}
else{
t24=t23;
f_13338(2,t24,C_SCHEME_UNDEFINED);}}
else{
t23=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_13367,a[2]=t18,a[3]=t9,a[4]=t3,a[5]=t15,tmp=(C_word)a,a+=6,tmp);
if(C_truep(((C_word*)t17)[1])){
C_trace("ChickenBridge.scm: 368  error");
t24=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t24))(4,t24,t23,lf[10],((C_word*)((C_word*)t0)[4])[1]);}
else{
t24=t23;
f_13367(2,t24,C_SCHEME_UNDEFINED);}}}}}}

/* k13365 in k12960 in %make-random-item in make-weighting in k7924 in k7921 in k5905 in k5612 in k5609 in k5605 in k5314 in k5311 in k5308 in k5305 */
static void C_ccall f_13367(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_13367,2,t0,t1);}
t2=(C_word)C_i_car(((C_word*)((C_word*)t0)[5])[1]);
t3=C_mutate(((C_word *)((C_word*)t0)[4])+1,t2);
t4=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_13374,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[5],a[4]=((C_word*)t0)[3],tmp=(C_word)a,a+=5,tmp);
t5=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_13382,a[2]=((C_word*)t0)[4],a[3]=t4,tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 368  keyword?");
t6=C_retrieve(lf[13]);
((C_proc3)C_retrieve_proc(t6))(3,t6,t5,((C_word*)((C_word*)t0)[4])[1]);}

/* k13380 in k13365 in k12960 in %make-random-item in make-weighting in k7924 in k7921 in k5905 in k5612 in k5609 in k5605 in k5314 in k5311 in k5308 in k5305 */
static void C_ccall f_13382(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
if(C_truep(t1)){
C_trace("ChickenBridge.scm: 368  error");
t2=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t2))(4,t2,((C_word*)t0)[3],lf[14],((C_word*)((C_word*)t0)[2])[1]);}
else{
t2=((C_word*)t0)[3];
f_13374(2,t2,C_SCHEME_UNDEFINED);}}

/* k13372 in k13365 in k12960 in %make-random-item in make-weighting in k7924 in k7921 in k5905 in k5612 in k5609 in k5605 in k5314 in k5311 in k5308 in k5305 */
static void C_ccall f_13374(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word *a;
t2=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[3])[1]);
t4=C_mutate(((C_word *)((C_word*)t0)[3])+1,t3);
t5=((C_word*)t0)[2];
f_12965(t5,t4);}

/* k13336 in k12960 in %make-random-item in make-weighting in k7924 in k7921 in k5905 in k5612 in k5609 in k5605 in k5314 in k5311 in k5308 in k5305 */
static void C_ccall f_13338(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_13338,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_13342,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("ChickenBridge.scm: 368  error");
t4=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[21],((C_word*)((C_word*)t0)[2])[1]);}
else{
t4=t2;
f_13342(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k13340 in k13336 in k12960 in %make-random-item in make-weighting in k7924 in k7921 in k5905 in k5612 in k5609 in k5605 in k5314 in k5311 in k5308 in k5305 */
static void C_ccall f_13342(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_12965(t7,t6);}

/* k13301 in k12960 in %make-random-item in make-weighting in k7924 in k7921 in k5905 in k5612 in k5609 in k5605 in k5314 in k5311 in k5308 in k5305 */
static void C_ccall f_13303(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_13303,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_13307,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("ChickenBridge.scm: 368  error");
t4=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[21],((C_word*)((C_word*)t0)[2])[1]);}
else{
t4=t2;
f_13307(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k13305 in k13301 in k12960 in %make-random-item in make-weighting in k7924 in k7921 in k5905 in k5612 in k5609 in k5605 in k5314 in k5311 in k5308 in k5305 */
static void C_ccall f_13307(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_12965(t7,t6);}

/* k13266 in k12960 in %make-random-item in make-weighting in k7924 in k7921 in k5905 in k5612 in k5609 in k5605 in k5314 in k5311 in k5308 in k5305 */
static void C_ccall f_13268(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_13268,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_13272,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("ChickenBridge.scm: 368  error");
t4=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[21],((C_word*)((C_word*)t0)[2])[1]);}
else{
t4=t2;
f_13272(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k13270 in k13266 in k12960 in %make-random-item in make-weighting in k7924 in k7921 in k5905 in k5612 in k5609 in k5605 in k5314 in k5311 in k5308 in k5305 */
static void C_ccall f_13272(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_12965(t7,t6);}

/* k12963 in k12960 in %make-random-item in make-weighting in k7924 in k7921 in k5905 in k5612 in k5609 in k5605 in k5314 in k5311 in k5308 in k5305 */
static void C_fcall f_12965(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word ab[43],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_12965,NULL,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|12,a[1]=(C_word)f_12968,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],a[7]=((C_word*)t0)[7],a[8]=((C_word*)t0)[8],a[9]=((C_word*)t0)[9],a[10]=((C_word*)t0)[10],a[11]=((C_word*)t0)[11],a[12]=((C_word*)t0)[12],tmp=(C_word)a,a+=13,tmp);
if(C_truep((C_word)C_i_nullp(((C_word*)((C_word*)t0)[7])[1]))){
t3=t2;
f_12968(t3,C_SCHEME_UNDEFINED);}
else{
t3=(C_word)C_i_car(((C_word*)((C_word*)t0)[7])[1]);
t4=(C_word)C_eqp(t3,lf[245]);
if(C_truep(t4)){
t5=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_13133,a[2]=((C_word*)t0)[6],a[3]=t2,a[4]=((C_word*)t0)[7],a[5]=((C_word*)t0)[4],a[6]=((C_word*)t0)[5],a[7]=((C_word*)t0)[10],tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)((C_word*)t0)[5])[1])){
C_trace("ChickenBridge.scm: 368  error");
t6=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t6))(4,t6,t5,lf[19],lf[245]);}
else{
t6=t5;
f_13133(2,t6,C_SCHEME_UNDEFINED);}}
else{
t5=(C_word)C_eqp(t3,lf[246]);
if(C_truep(t5)){
t6=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_13168,a[2]=((C_word*)t0)[6],a[3]=t2,a[4]=((C_word*)t0)[7],a[5]=((C_word*)t0)[4],a[6]=((C_word*)t0)[3],a[7]=((C_word*)t0)[9],tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)((C_word*)t0)[3])[1])){
C_trace("ChickenBridge.scm: 368  error");
t7=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t7))(4,t7,t6,lf[19],lf[246]);}
else{
t7=t6;
f_13168(2,t7,C_SCHEME_UNDEFINED);}}
else{
t6=(C_word)C_eqp(t3,lf[247]);
if(C_truep(t6)){
t7=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_13203,a[2]=((C_word*)t0)[6],a[3]=t2,a[4]=((C_word*)t0)[7],a[5]=((C_word*)t0)[4],a[6]=((C_word*)t0)[2],a[7]=((C_word*)t0)[8],tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)((C_word*)t0)[2])[1])){
C_trace("ChickenBridge.scm: 368  error");
t8=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t8))(4,t8,t7,lf[19],lf[247]);}
else{
t8=t7;
f_13203(2,t8,C_SCHEME_UNDEFINED);}}
else{
t7=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_13232,a[2]=t2,a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[9],a[5]=((C_word*)t0)[7],tmp=(C_word)a,a+=6,tmp);
if(C_truep(((C_word*)((C_word*)t0)[4])[1])){
C_trace("ChickenBridge.scm: 368  error");
t8=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t8))(4,t8,t7,lf[10],((C_word*)((C_word*)t0)[6])[1]);}
else{
t8=t7;
f_13232(2,t8,C_SCHEME_UNDEFINED);}}}}}}

/* k13230 in k12963 in k12960 in %make-random-item in make-weighting in k7924 in k7921 in k5905 in k5612 in k5609 in k5605 in k5314 in k5311 in k5308 in k5305 */
static void C_ccall f_13232(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_13232,2,t0,t1);}
t2=(C_word)C_i_car(((C_word*)((C_word*)t0)[5])[1]);
t3=C_mutate(((C_word *)((C_word*)t0)[4])+1,t2);
t4=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_13239,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[5],a[4]=((C_word*)t0)[3],tmp=(C_word)a,a+=5,tmp);
t5=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_13247,a[2]=((C_word*)t0)[4],a[3]=t4,tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 368  keyword?");
t6=C_retrieve(lf[13]);
((C_proc3)C_retrieve_proc(t6))(3,t6,t5,((C_word*)((C_word*)t0)[4])[1]);}

/* k13245 in k13230 in k12963 in k12960 in %make-random-item in make-weighting in k7924 in k7921 in k5905 in k5612 in k5609 in k5605 in k5314 in k5311 in k5308 in k5305 */
static void C_ccall f_13247(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
if(C_truep(t1)){
C_trace("ChickenBridge.scm: 368  error");
t2=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t2))(4,t2,((C_word*)t0)[3],lf[14],((C_word*)((C_word*)t0)[2])[1]);}
else{
t2=((C_word*)t0)[3];
f_13239(2,t2,C_SCHEME_UNDEFINED);}}

/* k13237 in k13230 in k12963 in k12960 in %make-random-item in make-weighting in k7924 in k7921 in k5905 in k5612 in k5609 in k5605 in k5314 in k5311 in k5308 in k5305 */
static void C_ccall f_13239(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word *a;
t2=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[3])[1]);
t4=C_mutate(((C_word *)((C_word*)t0)[3])+1,t3);
t5=((C_word*)t0)[2];
f_12968(t5,t4);}

/* k13201 in k12963 in k12960 in %make-random-item in make-weighting in k7924 in k7921 in k5905 in k5612 in k5609 in k5605 in k5314 in k5311 in k5308 in k5305 */
static void C_ccall f_13203(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_13203,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_13207,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("ChickenBridge.scm: 368  error");
t4=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[21],((C_word*)((C_word*)t0)[2])[1]);}
else{
t4=t2;
f_13207(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k13205 in k13201 in k12963 in k12960 in %make-random-item in make-weighting in k7924 in k7921 in k5905 in k5612 in k5609 in k5605 in k5314 in k5311 in k5308 in k5305 */
static void C_ccall f_13207(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_12968(t7,t6);}

/* k13166 in k12963 in k12960 in %make-random-item in make-weighting in k7924 in k7921 in k5905 in k5612 in k5609 in k5605 in k5314 in k5311 in k5308 in k5305 */
static void C_ccall f_13168(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_13168,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_13172,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("ChickenBridge.scm: 368  error");
t4=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[21],((C_word*)((C_word*)t0)[2])[1]);}
else{
t4=t2;
f_13172(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k13170 in k13166 in k12963 in k12960 in %make-random-item in make-weighting in k7924 in k7921 in k5905 in k5612 in k5609 in k5605 in k5314 in k5311 in k5308 in k5305 */
static void C_ccall f_13172(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_12968(t7,t6);}

/* k13131 in k12963 in k12960 in %make-random-item in make-weighting in k7924 in k7921 in k5905 in k5612 in k5609 in k5605 in k5314 in k5311 in k5308 in k5305 */
static void C_ccall f_13133(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_13133,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_13137,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("ChickenBridge.scm: 368  error");
t4=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[21],((C_word*)((C_word*)t0)[2])[1]);}
else{
t4=t2;
f_13137(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k13135 in k13131 in k12963 in k12960 in %make-random-item in make-weighting in k7924 in k7921 in k5905 in k5612 in k5609 in k5605 in k5314 in k5311 in k5308 in k5305 */
static void C_ccall f_13137(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_12968(t7,t6);}

/* k12966 in k12963 in k12960 in %make-random-item in make-weighting in k7924 in k7921 in k5905 in k5612 in k5609 in k5605 in k5314 in k5311 in k5308 in k5305 */
static void C_fcall f_12968(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word ab[39],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_12968,NULL,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|8,a[1]=(C_word)f_12971,a[2]=((C_word*)t0)[6],a[3]=((C_word*)t0)[7],a[4]=((C_word*)t0)[8],a[5]=((C_word*)t0)[9],a[6]=((C_word*)t0)[10],a[7]=((C_word*)t0)[11],a[8]=((C_word*)t0)[12],tmp=(C_word)a,a+=9,tmp);
if(C_truep((C_word)C_i_nullp(((C_word*)((C_word*)t0)[7])[1]))){
t3=t2;
f_12971(t3,C_SCHEME_UNDEFINED);}
else{
t3=(C_word)C_i_car(((C_word*)((C_word*)t0)[7])[1]);
t4=(C_word)C_eqp(t3,lf[245]);
if(C_truep(t4)){
t5=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_12998,a[2]=((C_word*)t0)[6],a[3]=t2,a[4]=((C_word*)t0)[7],a[5]=((C_word*)t0)[4],a[6]=((C_word*)t0)[5],a[7]=((C_word*)t0)[10],tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)((C_word*)t0)[5])[1])){
C_trace("ChickenBridge.scm: 368  error");
t6=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t6))(4,t6,t5,lf[19],lf[245]);}
else{
t6=t5;
f_12998(2,t6,C_SCHEME_UNDEFINED);}}
else{
t5=(C_word)C_eqp(t3,lf[246]);
if(C_truep(t5)){
t6=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_13033,a[2]=((C_word*)t0)[6],a[3]=t2,a[4]=((C_word*)t0)[7],a[5]=((C_word*)t0)[4],a[6]=((C_word*)t0)[3],a[7]=((C_word*)t0)[9],tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)((C_word*)t0)[3])[1])){
C_trace("ChickenBridge.scm: 368  error");
t7=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t7))(4,t7,t6,lf[19],lf[246]);}
else{
t7=t6;
f_13033(2,t7,C_SCHEME_UNDEFINED);}}
else{
t6=(C_word)C_eqp(t3,lf[247]);
if(C_truep(t6)){
t7=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_13068,a[2]=((C_word*)t0)[6],a[3]=t2,a[4]=((C_word*)t0)[7],a[5]=((C_word*)t0)[4],a[6]=((C_word*)t0)[2],a[7]=((C_word*)t0)[8],tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)((C_word*)t0)[2])[1])){
C_trace("ChickenBridge.scm: 368  error");
t8=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t8))(4,t8,t7,lf[19],lf[247]);}
else{
t8=t7;
f_13068(2,t8,C_SCHEME_UNDEFINED);}}
else{
t7=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_13097,a[2]=t2,a[3]=((C_word*)t0)[2],a[4]=((C_word*)t0)[8],a[5]=((C_word*)t0)[7],tmp=(C_word)a,a+=6,tmp);
if(C_truep(((C_word*)((C_word*)t0)[4])[1])){
C_trace("ChickenBridge.scm: 368  error");
t8=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t8))(4,t8,t7,lf[10],((C_word*)((C_word*)t0)[6])[1]);}
else{
t8=t7;
f_13097(2,t8,C_SCHEME_UNDEFINED);}}}}}}

/* k13095 in k12966 in k12963 in k12960 in %make-random-item in make-weighting in k7924 in k7921 in k5905 in k5612 in k5609 in k5605 in k5314 in k5311 in k5308 in k5305 */
static void C_ccall f_13097(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_13097,2,t0,t1);}
t2=(C_word)C_i_car(((C_word*)((C_word*)t0)[5])[1]);
t3=C_mutate(((C_word *)((C_word*)t0)[4])+1,t2);
t4=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_13104,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[5],a[4]=((C_word*)t0)[3],tmp=(C_word)a,a+=5,tmp);
t5=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_13112,a[2]=((C_word*)t0)[4],a[3]=t4,tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 368  keyword?");
t6=C_retrieve(lf[13]);
((C_proc3)C_retrieve_proc(t6))(3,t6,t5,((C_word*)((C_word*)t0)[4])[1]);}

/* k13110 in k13095 in k12966 in k12963 in k12960 in %make-random-item in make-weighting in k7924 in k7921 in k5905 in k5612 in k5609 in k5605 in k5314 in k5311 in k5308 in k5305 */
static void C_ccall f_13112(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
if(C_truep(t1)){
C_trace("ChickenBridge.scm: 368  error");
t2=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t2))(4,t2,((C_word*)t0)[3],lf[14],((C_word*)((C_word*)t0)[2])[1]);}
else{
t2=((C_word*)t0)[3];
f_13104(2,t2,C_SCHEME_UNDEFINED);}}

/* k13102 in k13095 in k12966 in k12963 in k12960 in %make-random-item in make-weighting in k7924 in k7921 in k5905 in k5612 in k5609 in k5605 in k5314 in k5311 in k5308 in k5305 */
static void C_ccall f_13104(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word *a;
t2=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[3])[1]);
t4=C_mutate(((C_word *)((C_word*)t0)[3])+1,t3);
t5=((C_word*)t0)[2];
f_12971(t5,t4);}

/* k13066 in k12966 in k12963 in k12960 in %make-random-item in make-weighting in k7924 in k7921 in k5905 in k5612 in k5609 in k5605 in k5314 in k5311 in k5308 in k5305 */
static void C_ccall f_13068(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_13068,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_13072,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("ChickenBridge.scm: 368  error");
t4=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[21],((C_word*)((C_word*)t0)[2])[1]);}
else{
t4=t2;
f_13072(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k13070 in k13066 in k12966 in k12963 in k12960 in %make-random-item in make-weighting in k7924 in k7921 in k5905 in k5612 in k5609 in k5605 in k5314 in k5311 in k5308 in k5305 */
static void C_ccall f_13072(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_12971(t7,t6);}

/* k13031 in k12966 in k12963 in k12960 in %make-random-item in make-weighting in k7924 in k7921 in k5905 in k5612 in k5609 in k5605 in k5314 in k5311 in k5308 in k5305 */
static void C_ccall f_13033(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_13033,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_13037,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("ChickenBridge.scm: 368  error");
t4=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[21],((C_word*)((C_word*)t0)[2])[1]);}
else{
t4=t2;
f_13037(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k13035 in k13031 in k12966 in k12963 in k12960 in %make-random-item in make-weighting in k7924 in k7921 in k5905 in k5612 in k5609 in k5605 in k5314 in k5311 in k5308 in k5305 */
static void C_ccall f_13037(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_12971(t7,t6);}

/* k12996 in k12966 in k12963 in k12960 in %make-random-item in make-weighting in k7924 in k7921 in k5905 in k5612 in k5609 in k5605 in k5314 in k5311 in k5308 in k5305 */
static void C_ccall f_12998(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_12998,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_13002,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("ChickenBridge.scm: 368  error");
t4=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[21],((C_word*)((C_word*)t0)[2])[1]);}
else{
t4=t2;
f_13002(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k13000 in k12996 in k12966 in k12963 in k12960 in %make-random-item in make-weighting in k7924 in k7921 in k5905 in k5612 in k5609 in k5605 in k5314 in k5311 in k5308 in k5305 */
static void C_ccall f_13002(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_12971(t7,t6);}

/* k12969 in k12966 in k12963 in k12960 in %make-random-item in make-weighting in k7924 in k7921 in k5905 in k5612 in k5609 in k5605 in k5314 in k5311 in k5308 in k5305 */
static void C_fcall f_12971(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_12971,NULL,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_12974,a[2]=((C_word*)t0)[4],a[3]=((C_word*)t0)[5],a[4]=((C_word*)t0)[6],a[5]=((C_word*)t0)[7],a[6]=((C_word*)t0)[8],tmp=(C_word)a,a+=7,tmp);
if(C_truep((C_word)C_i_nullp(((C_word*)((C_word*)t0)[3])[1]))){
t3=t2;
f_12974(2,t3,C_SCHEME_UNDEFINED);}
else{
C_trace("ChickenBridge.scm: 368  error");
t3=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t3))(4,t3,t2,lf[5],((C_word*)((C_word*)t0)[2])[1]);}}

/* k12972 in k12969 in k12966 in k12963 in k12960 in %make-random-item in make-weighting in k7924 in k7921 in k5905 in k5612 in k5609 in k5605 in k5314 in k5311 in k5308 in k5305 */
static void C_ccall f_12974(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word ab[10],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_12974,2,t0,t1);}
t2=((C_word*)t0)[6];
t3=((C_word*)((C_word*)t0)[5])[1];
t4=((C_word*)((C_word*)t0)[4])[1];
t5=((C_word*)((C_word*)t0)[3])[1];
t6=((C_word*)((C_word*)t0)[2])[1];
t7=t2;
((C_proc2)(void*)(*((C_word*)t7+1)))(2,t7,(C_word)C_a_i_record(&a,9,lf[234],t3,C_SCHEME_FALSE,t4,t5,t6,C_fix(0),C_SCHEME_FALSE,C_SCHEME_FALSE));}

/* k12640 in make-weighting in k7924 in k7921 in k5905 in k5612 in k5609 in k5605 in k5314 in k5311 in k5308 in k5305 */
static void C_ccall f_12642(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[5],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_12642,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_12645,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=t1,tmp=(C_word)a,a+=5,tmp);
C_trace("ChickenBridge.scm: 368  %alloc-pattern");
f_9224(t2);}

/* k12643 in k12640 in make-weighting in k7924 in k7921 in k5905 in k5612 in k5609 in k5605 in k5314 in k5311 in k5308 in k5305 */
static void C_ccall f_12645(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word ab[24],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_12645,2,t0,t1);}
t2=(C_word)C_i_length(((C_word*)t0)[4]);
t3=C_SCHEME_FALSE;
t4=(*a=C_VECTOR_TYPE|1,a[1]=t3,tmp=(C_word)a,a+=2,tmp);
t5=C_SCHEME_TRUE;
t6=(*a=C_VECTOR_TYPE|1,a[1]=t5,tmp=(C_word)a,a+=2,tmp);
t7=C_fix(0);
t8=(*a=C_VECTOR_TYPE|1,a[1]=t7,tmp=(C_word)a,a+=2,tmp);
t9=C_fix(0);
t10=(*a=C_VECTOR_TYPE|1,a[1]=t9,tmp=(C_word)a,a+=2,tmp);
t11=(*a=C_CLOSURE_TYPE|10,a[1]=(C_word)f_12651,a[2]=t10,a[3]=((C_word*)t0)[4],a[4]=t6,a[5]=t1,a[6]=((C_word*)t0)[2],a[7]=((C_word*)t0)[3],a[8]=t4,a[9]=t2,a[10]=t8,tmp=(C_word)a,a+=11,tmp);
t12=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_12919,a[2]=t8,a[3]=t6,a[4]=((C_word)li170),tmp=(C_word)a,a+=5,tmp);
C_trace("for-each");
t13=*((C_word*)lf[214]+1);
((C_proc4)(void*)(*((C_word*)t13+1)))(4,t13,t11,t12,((C_word*)t0)[4]);}

/* a12918 in k12643 in k12640 in make-weighting in k7924 in k7921 in k5905 in k5612 in k5609 in k5605 in k5314 in k5311 in k5308 in k5305 */
static void C_ccall f_12919(C_word c,C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word ab[6],*a=ab;
if(c!=3) C_bad_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr3,(void*)f_12919,3,t0,t1,t2);}
t3=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_12923,a[2]=t2,a[3]=((C_word*)t0)[2],a[4]=((C_word*)t0)[3],a[5]=t1,tmp=(C_word)a,a+=6,tmp);
C_trace("ChickenBridge.scm: 368  random-item-min");
f_12519(t3,t2);}

/* k12921 in a12918 in k12643 in k12640 in make-weighting in k7924 in k7921 in k5905 in k5612 in k5609 in k5605 in k5314 in k5311 in k5308 in k5305 */
static void C_ccall f_12923(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[6],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_12923,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_12926,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],tmp=(C_word)a,a+=6,tmp);
C_trace("ChickenBridge.scm: 368  random-item-max");
f_12537(t2,((C_word*)t0)[2]);}

/* k12924 in k12921 in a12918 in k12643 in k12640 in make-weighting in k7924 in k7921 in k5905 in k5612 in k5609 in k5605 in k5314 in k5311 in k5308 in k5305 */
static void C_ccall f_12926(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[6],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_12926,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_12929,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],tmp=(C_word)a,a+=6,tmp);
C_trace("ChickenBridge.scm: 368  random-item-weight");
f_12501(t2,((C_word*)t0)[2]);}

/* k12927 in k12924 in k12921 in a12918 in k12643 in k12640 in make-weighting in k7924 in k7921 in k5905 in k5612 in k5609 in k5605 in k5314 in k5311 in k5308 in k5305 */
static void C_ccall f_12929(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[6],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_12929,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_12932,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=t1,tmp=(C_word)a,a+=6,tmp);
C_trace("ChickenBridge.scm: 368  random-item-datum");
f_12465(t2,((C_word*)t0)[2]);}

/* k12930 in k12927 in k12924 in k12921 in a12918 in k12643 in k12640 in make-weighting in k7924 in k7921 in k5905 in k5612 in k5609 in k5605 in k5314 in k5311 in k5308 in k5305 */
static void C_ccall f_12932(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_12932,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_12935,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],tmp=(C_word)a,a+=5,tmp);
t3=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_12945,a[2]=t2,a[3]=((C_word*)t0)[2],tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 368  pattern?");
f_8920(t3,t1);}

/* k12943 in k12930 in k12927 in k12924 in k12921 in a12918 in k12643 in k12640 in make-weighting in k7924 in k7921 in k5905 in k5612 in k5609 in k5605 in k5314 in k5311 in k5308 in k5305 */
static void C_ccall f_12945(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[4],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_12945,2,t0,t1);}
if(C_truep(t1)){
t2=(C_word)C_a_i_plus(&a,2,((C_word*)((C_word*)t0)[3])[1],C_fix(1));
t3=C_mutate(((C_word *)((C_word*)t0)[3])+1,t2);
t4=((C_word*)t0)[2];
f_12935(t4,t3);}
else{
t2=((C_word*)t0)[2];
f_12935(t2,C_SCHEME_UNDEFINED);}}

/* k12933 in k12930 in k12927 in k12924 in k12921 in a12918 in k12643 in k12640 in make-weighting in k7924 in k7921 in k5905 in k5612 in k5609 in k5605 in k5314 in k5311 in k5308 in k5305 */
static void C_fcall f_12935(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word *a;
if(C_truep((C_word)C_i_numberp(((C_word*)t0)[4]))){
t2=((C_word*)t0)[3];
((C_proc2)(void*)(*((C_word*)t2+1)))(2,t2,C_SCHEME_UNDEFINED);}
else{
t2=C_set_block_item(((C_word*)t0)[2],0,C_SCHEME_FALSE);
t3=((C_word*)t0)[3];
((C_proc2)(void*)(*((C_word*)t3+1)))(2,t3,t2);}}

/* k12649 in k12643 in k12640 in make-weighting in k7924 in k7921 in k5905 in k5612 in k5609 in k5605 in k5314 in k5311 in k5308 in k5305 */
static void C_ccall f_12651(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word ab[14],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_12651,2,t0,t1);}
t2=(C_word)C_i_nequalp(((C_word*)((C_word*)t0)[10])[1],((C_word*)t0)[9]);
t3=(C_truep(t2)?C_fix(1):((C_word*)t0)[9]);
t4=C_mutate(((C_word *)((C_word*)t0)[8])+1,t3);
t5=(*a=C_CLOSURE_TYPE|9,a[1]=(C_word)f_12658,a[2]=((C_word*)t0)[8],a[3]=((C_word*)t0)[9],a[4]=((C_word*)t0)[2],a[5]=((C_word*)t0)[3],a[6]=((C_word*)t0)[4],a[7]=((C_word*)t0)[5],a[8]=((C_word*)t0)[6],a[9]=((C_word*)t0)[7],tmp=(C_word)a,a+=10,tmp);
if(C_truep(((C_word*)((C_word*)t0)[4])[1])){
t6=(C_word)C_a_i_bitwise_ior(&a,2,((C_word*)((C_word*)t0)[2])[1],C_fix(4));
t7=C_mutate(((C_word *)((C_word*)t0)[2])+1,t6);
t8=t5;
f_12658(t8,t7);}
else{
t6=t5;
f_12658(t6,C_SCHEME_UNDEFINED);}}

/* k12656 in k12649 in k12643 in k12640 in make-weighting in k7924 in k7921 in k5905 in k5612 in k5609 in k5605 in k5314 in k5311 in k5308 in k5305 */
static void C_fcall f_12658(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word t14;
C_word t15;
C_word t16;
C_word t17;
C_word t18;
C_word t19;
C_word t20;
C_word t21;
C_word ab[50],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_12658,NULL,2,t0,t1);}
t2=C_SCHEME_FALSE;
t3=(*a=C_VECTOR_TYPE|1,a[1]=t2,tmp=(C_word)a,a+=2,tmp);
t4=C_SCHEME_FALSE;
t5=(*a=C_VECTOR_TYPE|1,a[1]=t4,tmp=(C_word)a,a+=2,tmp);
t6=C_SCHEME_FALSE;
t7=(*a=C_VECTOR_TYPE|1,a[1]=t6,tmp=(C_word)a,a+=2,tmp);
t8=C_SCHEME_FALSE;
t9=(*a=C_VECTOR_TYPE|1,a[1]=t8,tmp=(C_word)a,a+=2,tmp);
t10=((C_word*)t0)[9];
t11=(*a=C_VECTOR_TYPE|1,a[1]=t10,tmp=(C_word)a,a+=2,tmp);
t12=C_SCHEME_FALSE;
t13=(*a=C_VECTOR_TYPE|1,a[1]=t12,tmp=(C_word)a,a+=2,tmp);
t14=(*a=C_CLOSURE_TYPE|15,a[1]=(C_word)f_12661,a[2]=t9,a[3]=t13,a[4]=t7,a[5]=((C_word*)t0)[9],a[6]=t11,a[7]=((C_word*)t0)[2],a[8]=((C_word*)t0)[3],a[9]=((C_word*)t0)[4],a[10]=t5,a[11]=t3,a[12]=((C_word*)t0)[5],a[13]=((C_word*)t0)[6],a[14]=((C_word*)t0)[7],a[15]=((C_word*)t0)[8],tmp=(C_word)a,a+=16,tmp);
if(C_truep((C_word)C_i_nullp(((C_word*)t11)[1]))){
t15=t14;
f_12661(t15,C_SCHEME_UNDEFINED);}
else{
t15=(C_word)C_i_car(((C_word*)t11)[1]);
t16=(C_word)C_eqp(t15,lf[216]);
if(C_truep(t16)){
t17=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_12825,a[2]=((C_word*)t0)[9],a[3]=t14,a[4]=t11,a[5]=t13,a[6]=t7,a[7]=t3,tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)t7)[1])){
C_trace("ChickenBridge.scm: 368  error");
t18=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t18))(4,t18,t17,lf[19],lf[216]);}
else{
t18=t17;
f_12825(2,t18,C_SCHEME_UNDEFINED);}}
else{
t17=(C_word)C_eqp(t15,lf[217]);
if(C_truep(t17)){
t18=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_12860,a[2]=((C_word*)t0)[9],a[3]=t14,a[4]=t11,a[5]=t13,a[6]=t9,a[7]=t5,tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)t9)[1])){
C_trace("ChickenBridge.scm: 368  error");
t19=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t19))(4,t19,t18,lf[19],lf[217]);}
else{
t19=t18;
f_12860(2,t19,C_SCHEME_UNDEFINED);}}
else{
t18=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_12889,a[2]=t14,a[3]=t7,a[4]=t3,a[5]=t11,tmp=(C_word)a,a+=6,tmp);
if(C_truep(((C_word*)t13)[1])){
C_trace("ChickenBridge.scm: 368  error");
t19=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t19))(4,t19,t18,lf[10],((C_word*)t0)[9]);}
else{
t19=t18;
f_12889(2,t19,C_SCHEME_UNDEFINED);}}}}}

/* k12887 in k12656 in k12649 in k12643 in k12640 in make-weighting in k7924 in k7921 in k5905 in k5612 in k5609 in k5605 in k5314 in k5311 in k5308 in k5305 */
static void C_ccall f_12889(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_12889,2,t0,t1);}
t2=(C_word)C_i_car(((C_word*)((C_word*)t0)[5])[1]);
t3=C_mutate(((C_word *)((C_word*)t0)[4])+1,t2);
t4=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_12896,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[5],a[4]=((C_word*)t0)[3],tmp=(C_word)a,a+=5,tmp);
t5=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_12904,a[2]=((C_word*)t0)[4],a[3]=t4,tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 368  keyword?");
t6=C_retrieve(lf[13]);
((C_proc3)C_retrieve_proc(t6))(3,t6,t5,((C_word*)((C_word*)t0)[4])[1]);}

/* k12902 in k12887 in k12656 in k12649 in k12643 in k12640 in make-weighting in k7924 in k7921 in k5905 in k5612 in k5609 in k5605 in k5314 in k5311 in k5308 in k5305 */
static void C_ccall f_12904(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
if(C_truep(t1)){
C_trace("ChickenBridge.scm: 368  error");
t2=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t2))(4,t2,((C_word*)t0)[3],lf[14],((C_word*)((C_word*)t0)[2])[1]);}
else{
t2=((C_word*)t0)[3];
f_12896(2,t2,C_SCHEME_UNDEFINED);}}

/* k12894 in k12887 in k12656 in k12649 in k12643 in k12640 in make-weighting in k7924 in k7921 in k5905 in k5612 in k5609 in k5605 in k5314 in k5311 in k5308 in k5305 */
static void C_ccall f_12896(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word *a;
t2=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[3])[1]);
t4=C_mutate(((C_word *)((C_word*)t0)[3])+1,t3);
t5=((C_word*)t0)[2];
f_12661(t5,t4);}

/* k12858 in k12656 in k12649 in k12643 in k12640 in make-weighting in k7924 in k7921 in k5905 in k5612 in k5609 in k5605 in k5314 in k5311 in k5308 in k5305 */
static void C_ccall f_12860(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_12860,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_12864,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("ChickenBridge.scm: 368  error");
t4=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[21],((C_word*)t0)[2]);}
else{
t4=t2;
f_12864(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k12862 in k12858 in k12656 in k12649 in k12643 in k12640 in make-weighting in k7924 in k7921 in k5905 in k5612 in k5609 in k5605 in k5314 in k5311 in k5308 in k5305 */
static void C_ccall f_12864(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_12661(t7,t6);}

/* k12823 in k12656 in k12649 in k12643 in k12640 in make-weighting in k7924 in k7921 in k5905 in k5612 in k5609 in k5605 in k5314 in k5311 in k5308 in k5305 */
static void C_ccall f_12825(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_12825,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_12829,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("ChickenBridge.scm: 368  error");
t4=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[21],((C_word*)t0)[2]);}
else{
t4=t2;
f_12829(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k12827 in k12823 in k12656 in k12649 in k12643 in k12640 in make-weighting in k7924 in k7921 in k5905 in k5612 in k5609 in k5605 in k5314 in k5311 in k5308 in k5305 */
static void C_ccall f_12829(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_12661(t7,t6);}

/* k12659 in k12656 in k12649 in k12643 in k12640 in make-weighting in k7924 in k7921 in k5905 in k5612 in k5609 in k5605 in k5314 in k5311 in k5308 in k5305 */
static void C_fcall f_12661(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word ab[35],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_12661,NULL,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|12,a[1]=(C_word)f_12664,a[2]=((C_word*)t0)[5],a[3]=((C_word*)t0)[6],a[4]=((C_word*)t0)[7],a[5]=((C_word*)t0)[8],a[6]=((C_word*)t0)[9],a[7]=((C_word*)t0)[10],a[8]=((C_word*)t0)[11],a[9]=((C_word*)t0)[12],a[10]=((C_word*)t0)[13],a[11]=((C_word*)t0)[14],a[12]=((C_word*)t0)[15],tmp=(C_word)a,a+=13,tmp);
if(C_truep((C_word)C_i_nullp(((C_word*)((C_word*)t0)[6])[1]))){
t3=t2;
f_12664(t3,C_SCHEME_UNDEFINED);}
else{
t3=(C_word)C_i_car(((C_word*)((C_word*)t0)[6])[1]);
t4=(C_word)C_eqp(t3,lf[216]);
if(C_truep(t4)){
t5=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_12725,a[2]=((C_word*)t0)[5],a[3]=t2,a[4]=((C_word*)t0)[6],a[5]=((C_word*)t0)[3],a[6]=((C_word*)t0)[4],a[7]=((C_word*)t0)[11],tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)((C_word*)t0)[4])[1])){
C_trace("ChickenBridge.scm: 368  error");
t6=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t6))(4,t6,t5,lf[19],lf[216]);}
else{
t6=t5;
f_12725(2,t6,C_SCHEME_UNDEFINED);}}
else{
t5=(C_word)C_eqp(t3,lf[217]);
if(C_truep(t5)){
t6=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_12760,a[2]=((C_word*)t0)[5],a[3]=t2,a[4]=((C_word*)t0)[6],a[5]=((C_word*)t0)[3],a[6]=((C_word*)t0)[2],a[7]=((C_word*)t0)[10],tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)((C_word*)t0)[2])[1])){
C_trace("ChickenBridge.scm: 368  error");
t7=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t7))(4,t7,t6,lf[19],lf[217]);}
else{
t7=t6;
f_12760(2,t7,C_SCHEME_UNDEFINED);}}
else{
t6=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_12789,a[2]=t2,a[3]=((C_word*)t0)[2],a[4]=((C_word*)t0)[10],a[5]=((C_word*)t0)[6],tmp=(C_word)a,a+=6,tmp);
if(C_truep(((C_word*)((C_word*)t0)[3])[1])){
C_trace("ChickenBridge.scm: 368  error");
t7=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t7))(4,t7,t6,lf[10],((C_word*)t0)[5]);}
else{
t7=t6;
f_12789(2,t7,C_SCHEME_UNDEFINED);}}}}}

/* k12787 in k12659 in k12656 in k12649 in k12643 in k12640 in make-weighting in k7924 in k7921 in k5905 in k5612 in k5609 in k5605 in k5314 in k5311 in k5308 in k5305 */
static void C_ccall f_12789(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_12789,2,t0,t1);}
t2=(C_word)C_i_car(((C_word*)((C_word*)t0)[5])[1]);
t3=C_mutate(((C_word *)((C_word*)t0)[4])+1,t2);
t4=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_12796,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[5],a[4]=((C_word*)t0)[3],tmp=(C_word)a,a+=5,tmp);
t5=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_12804,a[2]=((C_word*)t0)[4],a[3]=t4,tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 368  keyword?");
t6=C_retrieve(lf[13]);
((C_proc3)C_retrieve_proc(t6))(3,t6,t5,((C_word*)((C_word*)t0)[4])[1]);}

/* k12802 in k12787 in k12659 in k12656 in k12649 in k12643 in k12640 in make-weighting in k7924 in k7921 in k5905 in k5612 in k5609 in k5605 in k5314 in k5311 in k5308 in k5305 */
static void C_ccall f_12804(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
if(C_truep(t1)){
C_trace("ChickenBridge.scm: 368  error");
t2=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t2))(4,t2,((C_word*)t0)[3],lf[14],((C_word*)((C_word*)t0)[2])[1]);}
else{
t2=((C_word*)t0)[3];
f_12796(2,t2,C_SCHEME_UNDEFINED);}}

/* k12794 in k12787 in k12659 in k12656 in k12649 in k12643 in k12640 in make-weighting in k7924 in k7921 in k5905 in k5612 in k5609 in k5605 in k5314 in k5311 in k5308 in k5305 */
static void C_ccall f_12796(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word *a;
t2=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[3])[1]);
t4=C_mutate(((C_word *)((C_word*)t0)[3])+1,t3);
t5=((C_word*)t0)[2];
f_12664(t5,t4);}

/* k12758 in k12659 in k12656 in k12649 in k12643 in k12640 in make-weighting in k7924 in k7921 in k5905 in k5612 in k5609 in k5605 in k5314 in k5311 in k5308 in k5305 */
static void C_ccall f_12760(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_12760,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_12764,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("ChickenBridge.scm: 368  error");
t4=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[21],((C_word*)t0)[2]);}
else{
t4=t2;
f_12764(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k12762 in k12758 in k12659 in k12656 in k12649 in k12643 in k12640 in make-weighting in k7924 in k7921 in k5905 in k5612 in k5609 in k5605 in k5314 in k5311 in k5308 in k5305 */
static void C_ccall f_12764(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_12664(t7,t6);}

/* k12723 in k12659 in k12656 in k12649 in k12643 in k12640 in make-weighting in k7924 in k7921 in k5905 in k5612 in k5609 in k5605 in k5314 in k5311 in k5308 in k5305 */
static void C_ccall f_12725(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_12725,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_12729,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("ChickenBridge.scm: 368  error");
t4=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[21],((C_word*)t0)[2]);}
else{
t4=t2;
f_12729(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k12727 in k12723 in k12659 in k12656 in k12649 in k12643 in k12640 in make-weighting in k7924 in k7921 in k5905 in k5612 in k5609 in k5605 in k5314 in k5311 in k5308 in k5305 */
static void C_ccall f_12729(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_12664(t7,t6);}

/* k12662 in k12659 in k12656 in k12649 in k12643 in k12640 in make-weighting in k7924 in k7921 in k5905 in k5612 in k5609 in k5605 in k5314 in k5311 in k5308 in k5305 */
static void C_fcall f_12664(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[11],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_12664,NULL,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|10,a[1]=(C_word)f_12667,a[2]=((C_word*)t0)[4],a[3]=((C_word*)t0)[5],a[4]=((C_word*)t0)[6],a[5]=((C_word*)t0)[7],a[6]=((C_word*)t0)[8],a[7]=((C_word*)t0)[9],a[8]=((C_word*)t0)[10],a[9]=((C_word*)t0)[11],a[10]=((C_word*)t0)[12],tmp=(C_word)a,a+=11,tmp);
if(C_truep((C_word)C_i_nullp(((C_word*)((C_word*)t0)[3])[1]))){
t3=t2;
f_12667(2,t3,C_SCHEME_UNDEFINED);}
else{
C_trace("ChickenBridge.scm: 368  error");
t3=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t3))(4,t3,t2,lf[5],((C_word*)t0)[2]);}}

/* k12665 in k12662 in k12659 in k12656 in k12649 in k12643 in k12640 in make-weighting in k7924 in k7921 in k5905 in k5612 in k5609 in k5605 in k5314 in k5311 in k5308 in k5305 */
static void C_ccall f_12667(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[11],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_12667,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_12670,a[2]=((C_word*)t0)[8],a[3]=((C_word*)t0)[9],a[4]=((C_word*)t0)[10],tmp=(C_word)a,a+=5,tmp);
t3=(C_word)C_a_i_list(&a,1,((C_word*)t0)[7]);
t4=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_12682,a[2]=((C_word)li169),tmp=(C_word)a,a+=3,tmp);
C_trace("ChickenBridge.scm: 368  initialize-pattern");
f_9234(t2,((C_word*)t0)[9],t3,((C_word*)((C_word*)t0)[6])[1],((C_word*)((C_word*)t0)[5])[1],((C_word*)((C_word*)t0)[4])[1],((C_word*)t0)[3],((C_word*)((C_word*)t0)[2])[1],C_retrieve2(lf[244],"next-in-weighting"),t4);}

/* a12681 in k12665 in k12662 in k12659 in k12656 in k12649 in k12643 in k12640 in make-weighting in k7924 in k7921 in k5905 in k5612 in k5609 in k5605 in k5314 in k5311 in k5308 in k5305 */
static void C_ccall f_12682(C_word c,C_word t0,C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word t6;
C_word ab[8],*a=ab;
if(c!=4) C_bad_argc_2(c,4,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr4,(void*)f_12682,4,t0,t1,t2,t3);}
t4=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_12688,a[2]=t2,a[3]=((C_word)li168),tmp=(C_word)a,a+=4,tmp);
t5=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_12704,a[2]=t4,a[3]=t1,tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 368  pattern-data");
f_8953(t5,t3);}

/* k12702 in a12681 in k12665 in k12662 in k12659 in k12656 in k12649 in k12643 in k12640 in make-weighting in k7924 in k7921 in k5905 in k5612 in k5609 in k5605 in k5314 in k5311 in k5308 in k5305 */
static void C_ccall f_12704(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word *a;
t2=(C_word)C_i_car(t1);
C_trace("for-each");
t3=*((C_word*)lf[214]+1);
((C_proc4)(void*)(*((C_word*)t3+1)))(4,t3,((C_word*)t0)[3],((C_word*)t0)[2],t2);}

/* a12687 in a12681 in k12665 in k12662 in k12659 in k12656 in k12649 in k12643 in k12640 in make-weighting in k7924 in k7921 in k5905 in k5612 in k5609 in k5605 in k5314 in k5311 in k5308 in k5305 */
static void C_ccall f_12688(C_word c,C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word ab[4],*a=ab;
if(c!=3) C_bad_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr3,(void*)f_12688,3,t0,t1,t2);}
t3=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_12696,a[2]=t1,a[3]=((C_word*)t0)[2],tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 368  random-item-datum");
f_12465(t3,t2);}

/* k12694 in a12687 in a12681 in k12665 in k12662 in k12659 in k12656 in k12649 in k12643 in k12640 in make-weighting in k7924 in k7921 in k5905 in k5612 in k5609 in k5605 in k5314 in k5311 in k5308 in k5305 */
static void C_ccall f_12696(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 368  fn");
t2=((C_word*)t0)[3];
((C_proc3)C_retrieve_proc(t2))(3,t2,((C_word*)t0)[2],t1);}

/* k12668 in k12665 in k12662 in k12659 in k12656 in k12649 in k12643 in k12640 in make-weighting in k7924 in k7921 in k5905 in k5612 in k5609 in k5605 in k5314 in k5311 in k5308 in k5305 */
static void C_ccall f_12670(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[4],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_12670,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_12673,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],tmp=(C_word)a,a+=4,tmp);
if(C_truep(((C_word*)((C_word*)t0)[2])[1])){
C_trace("ChickenBridge.scm: 368  recalc-weightings");
f_13405(t2,((C_word*)t0)[3],C_SCHEME_TRUE);}
else{
t3=t2;
f_12673(2,t3,C_SCHEME_UNDEFINED);}}

/* k12671 in k12668 in k12665 in k12662 in k12659 in k12656 in k12649 in k12643 in k12640 in make-weighting in k7924 in k7921 in k5905 in k5612 in k5609 in k5605 in k5314 in k5311 in k5308 in k5305 */
static void C_ccall f_12673(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
t2=((C_word*)t0)[3];
((C_proc2)(void*)(*((C_word*)t2+1)))(2,t2,((C_word*)t0)[2]);}

/* random-item-count in k7924 in k7921 in k5905 in k5612 in k5609 in k5605 in k5314 in k5311 in k5308 in k5305 */
static void C_fcall f_12555(C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word *a;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_12555,NULL,2,t1,t2);}
t3=(C_word)C_i_check_structure(t2,lf[234]);
t4=t1;
((C_proc2)(void*)(*((C_word*)t4+1)))(2,t4,(C_word)C_i_block_ref(t2,C_fix(6)));}

/* random-item-count-set! in k7924 in k7921 in k5905 in k5612 in k5609 in k5605 in k5314 in k5311 in k5308 in k5305 */
static void C_fcall f_12546(C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word *a;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_12546,NULL,3,t1,t2,t3);}
t4=(C_word)C_i_check_structure(t2,lf[234]);
C_trace("ChickenBridge.scm: 368  ##sys#block-set!");
t5=*((C_word*)lf[168]+1);
((C_proc5)(void*)(*((C_word*)t5+1)))(5,t5,t1,t2,C_fix(6),t3);}

/* random-item-max in k7924 in k7921 in k5905 in k5612 in k5609 in k5605 in k5314 in k5311 in k5308 in k5305 */
static void C_fcall f_12537(C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word *a;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_12537,NULL,2,t1,t2);}
t3=(C_word)C_i_check_structure(t2,lf[234]);
t4=t1;
((C_proc2)(void*)(*((C_word*)t4+1)))(2,t4,(C_word)C_i_block_ref(t2,C_fix(5)));}

/* random-item-min in k7924 in k7921 in k5905 in k5612 in k5609 in k5605 in k5314 in k5311 in k5308 in k5305 */
static void C_fcall f_12519(C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word *a;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_12519,NULL,2,t1,t2);}
t3=(C_word)C_i_check_structure(t2,lf[234]);
t4=t1;
((C_proc2)(void*)(*((C_word*)t4+1)))(2,t4,(C_word)C_i_block_ref(t2,C_fix(4)));}

/* random-item-weight in k7924 in k7921 in k5905 in k5612 in k5609 in k5605 in k5314 in k5311 in k5308 in k5305 */
static void C_fcall f_12501(C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word *a;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_12501,NULL,2,t1,t2);}
t3=(C_word)C_i_check_structure(t2,lf[234]);
t4=t1;
((C_proc2)(void*)(*((C_word*)t4+1)))(2,t4,(C_word)C_i_block_ref(t2,C_fix(3)));}

/* random-item-index in k7924 in k7921 in k5905 in k5612 in k5609 in k5605 in k5314 in k5311 in k5308 in k5305 */
static void C_fcall f_12483(C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word *a;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_12483,NULL,2,t1,t2);}
t3=(C_word)C_i_check_structure(t2,lf[234]);
t4=t1;
((C_proc2)(void*)(*((C_word*)t4+1)))(2,t4,(C_word)C_i_block_ref(t2,C_fix(2)));}

/* random-item-index-set! in k7924 in k7921 in k5905 in k5612 in k5609 in k5605 in k5314 in k5311 in k5308 in k5305 */
static void C_fcall f_12474(C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word *a;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_12474,NULL,3,t1,t2,t3);}
t4=(C_word)C_i_check_structure(t2,lf[234]);
C_trace("ChickenBridge.scm: 368  ##sys#block-set!");
t5=*((C_word*)lf[168]+1);
((C_proc5)(void*)(*((C_word*)t5+1)))(5,t5,t1,t2,C_fix(2),t3);}

/* random-item-datum in k7924 in k7921 in k5905 in k5612 in k5609 in k5605 in k5314 in k5311 in k5308 in k5305 */
static void C_fcall f_12465(C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word *a;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_12465,NULL,2,t1,t2);}
t3=(C_word)C_i_check_structure(t2,lf[234]);
t4=t1;
((C_proc2)(void*)(*((C_word*)t4+1)))(2,t4,(C_word)C_i_block_ref(t2,C_fix(1)));}

/* next-in-rotation in k7924 in k7921 in k5905 in k5612 in k5609 in k5605 in k5314 in k5311 in k5308 in k5305 */
static void C_ccall f_12243(C_word c,C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word t5;
C_word ab[8],*a=ab;
if(c!=3) C_bad_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr3,(void*)f_12243,3,t0,t1,t2);}
t3=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_12246,a[2]=((C_word)li158),tmp=(C_word)a,a+=3,tmp);
t4=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_12293,a[2]=t2,a[3]=t3,a[4]=t1,tmp=(C_word)a,a+=5,tmp);
C_trace("ChickenBridge.scm: 368  pattern-data");
f_8953(t4,t2);}

/* k12291 in next-in-rotation in k7924 in k7921 in k5905 in k5612 in k5609 in k5605 in k5314 in k5311 in k5308 in k5305 */
static void C_ccall f_12293(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word ab[14],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_12293,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_12296,a[2]=((C_word*)t0)[4],a[3]=t1,tmp=(C_word)a,a+=4,tmp);
t3=(C_word)C_i_cdr(t1);
if(C_truep((C_word)C_i_nullp(t3))){
t4=(C_word)C_i_car(t1);
t5=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_12319,a[2]=((C_word*)t0)[2],a[3]=t4,a[4]=((C_word*)t0)[3],a[5]=t1,a[6]=t2,tmp=(C_word)a,a+=7,tmp);
t6=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_12438,a[2]=t5,tmp=(C_word)a,a+=3,tmp);
C_trace("ChickenBridge.scm: 368  pattern-cache");
f_9169(t6,((C_word*)t0)[2]);}
else{
t4=t2;
f_12296(t4,C_SCHEME_UNDEFINED);}}

/* k12436 in k12291 in next-in-rotation in k7924 in k7921 in k5905 in k5612 in k5609 in k5605 in k5314 in k5311 in k5308 in k5305 */
static void C_ccall f_12438(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 368  next-1");
f_9575(((C_word*)t0)[2],t1);}

/* k12317 in k12291 in next-in-rotation in k7924 in k7921 in k5905 in k5612 in k5609 in k5605 in k5314 in k5311 in k5308 in k5305 */
static void C_ccall f_12319(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word t14;
C_word t15;
C_word t16;
C_word ab[32],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_12319,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_12326,a[2]=((C_word*)t0)[5],a[3]=((C_word*)t0)[6],tmp=(C_word)a,a+=4,tmp);
if(C_truep((C_word)C_i_pairp(t1))){
t3=(C_word)C_i_cdr(t1);
if(C_truep((C_word)C_i_pairp(t3))){
t4=(C_word)C_i_cddr(t1);
if(C_truep((C_word)C_i_pairp(t4))){
t5=(C_word)C_i_cdddr(t1);
if(C_truep((C_word)C_i_pairp(t5))){
C_apply(5,0,t2,((C_word*)t0)[4],((C_word*)t0)[3],t1);}
else{
t6=(C_word)C_i_car(t1);
t7=(C_word)C_i_cadr(t1);
t8=(C_word)C_i_caddr(t1);
t9=(*a=C_CLOSURE_TYPE|8,a[1]=(C_word)f_12373,a[2]=t8,a[3]=t7,a[4]=t6,a[5]=((C_word*)t0)[3],a[6]=t2,a[7]=((C_word*)t0)[4],a[8]=t1,tmp=(C_word)a,a+=9,tmp);
C_trace("ChickenBridge.scm: 368  pattern-length");
f_8971(t9,((C_word*)t0)[2]);}}
else{
t5=(C_word)C_i_car(t1);
t6=(C_word)C_i_cadr(t1);
t7=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_12400,a[2]=t6,a[3]=t5,a[4]=((C_word*)t0)[3],a[5]=t2,a[6]=((C_word*)t0)[4],tmp=(C_word)a,a+=7,tmp);
C_trace("ChickenBridge.scm: 368  pattern-length");
f_8971(t7,((C_word*)t0)[2]);}}
else{
t4=(C_word)C_i_car(t1);
t5=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_12419,a[2]=t4,a[3]=((C_word*)t0)[3],a[4]=t2,a[5]=((C_word*)t0)[4],tmp=(C_word)a,a+=6,tmp);
C_trace("ChickenBridge.scm: 368  pattern-length");
f_8971(t5,((C_word*)t0)[2]);}}
else{
t3=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_12434,a[2]=t1,a[3]=((C_word*)t0)[3],a[4]=t2,a[5]=((C_word*)t0)[4],tmp=(C_word)a,a+=6,tmp);
C_trace("ChickenBridge.scm: 368  pattern-length");
f_8971(t3,((C_word*)t0)[2]);}}

/* k12432 in k12317 in k12291 in next-in-rotation in k7924 in k7921 in k5905 in k5612 in k5609 in k5605 in k5314 in k5311 in k5308 in k5305 */
static void C_ccall f_12434(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[4],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_12434,2,t0,t1);}
t2=(C_word)C_a_i_minus(&a,2,t1,C_fix(1));
C_trace("ChickenBridge.scm: 368  rotate-items");
t3=((C_word*)t0)[5];
f_12246(7,t3,((C_word*)t0)[4],((C_word*)t0)[3],((C_word*)t0)[2],C_fix(1),C_fix(1),t2);}

/* k12417 in k12317 in k12291 in next-in-rotation in k7924 in k7921 in k5905 in k5612 in k5609 in k5605 in k5314 in k5311 in k5308 in k5305 */
static void C_ccall f_12419(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[4],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_12419,2,t0,t1);}
t2=(C_word)C_a_i_minus(&a,2,t1,C_fix(1));
C_trace("ChickenBridge.scm: 368  rotate-items");
t3=((C_word*)t0)[5];
f_12246(7,t3,((C_word*)t0)[4],((C_word*)t0)[3],((C_word*)t0)[2],C_fix(1),C_fix(1),t2);}

/* k12398 in k12317 in k12291 in next-in-rotation in k7924 in k7921 in k5905 in k5612 in k5609 in k5605 in k5314 in k5311 in k5308 in k5305 */
static void C_ccall f_12400(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[4],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_12400,2,t0,t1);}
t2=(C_word)C_a_i_minus(&a,2,t1,C_fix(1));
C_trace("ChickenBridge.scm: 368  rotate-items");
t3=((C_word*)t0)[6];
f_12246(7,t3,((C_word*)t0)[5],((C_word*)t0)[4],((C_word*)t0)[3],((C_word*)t0)[2],C_fix(1),t2);}

/* k12371 in k12317 in k12291 in next-in-rotation in k7924 in k7921 in k5905 in k5612 in k5609 in k5605 in k5314 in k5311 in k5308 in k5305 */
static void C_ccall f_12373(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[4],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_12373,2,t0,t1);}
t2=(C_word)C_i_caddr(((C_word*)t0)[8]);
t3=(C_word)C_a_i_minus(&a,2,t1,t2);
C_trace("ChickenBridge.scm: 368  rotate-items");
t4=((C_word*)t0)[7];
f_12246(7,t4,((C_word*)t0)[6],((C_word*)t0)[5],((C_word*)t0)[4],((C_word*)t0)[3],((C_word*)t0)[2],t3);}

/* k12324 in k12317 in k12291 in next-in-rotation in k7924 in k7921 in k5905 in k5612 in k5609 in k5605 in k5314 in k5311 in k5308 in k5305 */
static void C_ccall f_12326(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
t2=((C_word*)t0)[3];
f_12296(t2,(C_word)C_i_set_cdr(((C_word*)t0)[2],t1));}

/* k12294 in k12291 in next-in-rotation in k7924 in k7921 in k5905 in k5612 in k5609 in k5605 in k5314 in k5311 in k5308 in k5305 */
static void C_fcall f_12296(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word *a;
t2=(C_word)C_i_cdr(((C_word*)t0)[3]);
t3=(C_word)C_i_car(t2);
t4=(C_word)C_i_cddr(((C_word*)t0)[3]);
t5=(C_word)C_i_set_cdr(((C_word*)t0)[3],t4);
t6=((C_word*)t0)[2];
((C_proc2)(void*)(*((C_word*)t6+1)))(2,t6,t3);}

/* rotate-items in next-in-rotation in k7924 in k7921 in k5905 in k5612 in k5609 in k5605 in k5314 in k5311 in k5308 in k5305 */
static void C_ccall f_12246(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4,C_word t5,C_word t6){
C_word tmp;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word ab[10],*a=ab;
if(c!=7) C_bad_argc_2(c,7,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr7,(void*)f_12246,7,t0,t1,t2,t3,t4,t5,t6);}
t7=C_SCHEME_UNDEFINED;
t8=(*a=C_VECTOR_TYPE|1,a[1]=t7,tmp=(C_word)a,a+=2,tmp);
t9=C_set_block_item(t8,0,(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_12252,a[2]=t8,a[3]=t4,a[4]=t5,a[5]=t2,a[6]=t6,a[7]=((C_word)li157),tmp=(C_word)a,a+=8,tmp));
t10=((C_word*)t8)[1];
f_12252(t10,t1,t3);}

/* do1388 in rotate-items in next-in-rotation in k7924 in k7921 in k5905 in k5612 in k5609 in k5605 in k5314 in k5311 in k5308 in k5305 */
static void C_fcall f_12252(C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word ab[13],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_12252,NULL,3,t0,t1,t2);}
if(C_truep((C_word)C_i_lessp(t2,((C_word*)t0)[6]))){
t3=(C_word)C_i_list_ref(((C_word*)t0)[5],t2);
t4=(C_word)C_a_i_plus(&a,2,t2,((C_word*)t0)[4]);
t5=(C_word)C_i_list_ref(((C_word*)t0)[5],t4);
t6=(*a=C_CLOSURE_TYPE|8,a[1]=(C_word)f_12268,a[2]=t3,a[3]=((C_word*)t0)[5],a[4]=((C_word*)t0)[4],a[5]=t1,a[6]=((C_word*)t0)[2],a[7]=((C_word*)t0)[3],a[8]=t2,tmp=(C_word)a,a+=9,tmp);
C_trace("ChickenBridge.scm: 368  list-set!");
t7=C_retrieve(lf[60]);
((C_proc5)C_retrieve_proc(t7))(5,t7,t6,((C_word*)t0)[5],t2,t5);}
else{
t3=t1;
((C_proc2)(void*)(*((C_word*)t3+1)))(2,t3,((C_word*)t0)[5]);}}

/* k12266 in do1388 in rotate-items in next-in-rotation in k7924 in k7921 in k5905 in k5612 in k5609 in k5605 in k5314 in k5311 in k5308 in k5305 */
static void C_ccall f_12268(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[10],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_12268,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_12271,a[2]=((C_word*)t0)[5],a[3]=((C_word*)t0)[6],a[4]=((C_word*)t0)[7],a[5]=((C_word*)t0)[8],tmp=(C_word)a,a+=6,tmp);
t3=(C_word)C_a_i_plus(&a,2,((C_word*)t0)[8],((C_word*)t0)[4]);
C_trace("ChickenBridge.scm: 368  list-set!");
t4=C_retrieve(lf[60]);
((C_proc5)C_retrieve_proc(t4))(5,t4,t2,((C_word*)t0)[3],t3,((C_word*)t0)[2]);}

/* k12269 in k12266 in do1388 in rotate-items in next-in-rotation in k7924 in k7921 in k5905 in k5612 in k5609 in k5605 in k5314 in k5311 in k5308 in k5305 */
static void C_ccall f_12271(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[4],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_12271,2,t0,t1);}
t2=(C_word)C_a_i_plus(&a,2,((C_word*)t0)[5],((C_word*)t0)[4]);
t3=((C_word*)((C_word*)t0)[3])[1];
f_12252(t3,((C_word*)t0)[2],t2);}

/* make-rotation in k7924 in k7921 in k5905 in k5612 in k5609 in k5605 in k5314 in k5311 in k5308 in k5305 */
static void C_ccall f_11769(C_word c,C_word t0,C_word t1,C_word t2,...){
C_word tmp;
C_word t3;
va_list v;
C_word *a,c2=c;
C_save_rest(t2,c2,3);
if(c<3) C_bad_min_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_demand(c*C_SIZEOF_PAIR+14)){
C_save_and_reclaim((void*)tr3r,(void*)f_11769r,3,t0,t1,t2);}
else{
a=C_alloc((c-3)*3);
t3=C_restore_rest(a,C_rest_count(0));
f_11769r(t0,t1,t2,t3);}}

static void C_ccall f_11769r(C_word t0,C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word *a=C_alloc(14);
t4=(*a=C_VECTOR_TYPE|1,a[1]=t2,tmp=(C_word)a,a+=2,tmp);
t5=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_11773,a[2]=t1,a[3]=t4,a[4]=t3,tmp=(C_word)a,a+=5,tmp);
if(C_truep((C_word)C_i_pairp(((C_word*)t4)[1]))){
t6=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_12233,a[2]=t5,a[3]=t4,tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 368  append");
t7=*((C_word*)lf[18]+1);
((C_proc4)C_retrieve_proc(t7))(4,t7,t6,((C_word*)t4)[1],C_SCHEME_END_OF_LIST);}
else{
t6=(C_word)C_a_i_list(&a,1,((C_word*)t4)[1]);
t7=C_set_block_item(t4,0,t6);
t8=t5;
f_11773(t8,t7);}}

/* k12231 in make-rotation in k7924 in k7921 in k5905 in k5612 in k5609 in k5605 in k5314 in k5311 in k5308 in k5305 */
static void C_ccall f_12233(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[3])+1,t1);
t3=((C_word*)t0)[2];
f_11773(t3,t2);}

/* k11771 in make-rotation in k7924 in k7921 in k5905 in k5612 in k5609 in k5605 in k5314 in k5311 in k5308 in k5305 */
static void C_fcall f_11773(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word t14;
C_word t15;
C_word t16;
C_word t17;
C_word t18;
C_word t19;
C_word t20;
C_word t21;
C_word t22;
C_word t23;
C_word t24;
C_word t25;
C_word t26;
C_word t27;
C_word ab[59],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_11773,NULL,2,t0,t1);}
t2=C_SCHEME_FALSE;
t3=(*a=C_VECTOR_TYPE|1,a[1]=t2,tmp=(C_word)a,a+=2,tmp);
t4=C_SCHEME_FALSE;
t5=(*a=C_VECTOR_TYPE|1,a[1]=t4,tmp=(C_word)a,a+=2,tmp);
t6=C_fix(0);
t7=(*a=C_VECTOR_TYPE|1,a[1]=t6,tmp=(C_word)a,a+=2,tmp);
t8=C_SCHEME_FALSE;
t9=(*a=C_VECTOR_TYPE|1,a[1]=t8,tmp=(C_word)a,a+=2,tmp);
t10=C_SCHEME_FALSE;
t11=(*a=C_VECTOR_TYPE|1,a[1]=t10,tmp=(C_word)a,a+=2,tmp);
t12=C_SCHEME_FALSE;
t13=(*a=C_VECTOR_TYPE|1,a[1]=t12,tmp=(C_word)a,a+=2,tmp);
t14=((C_word*)t0)[4];
t15=(*a=C_VECTOR_TYPE|1,a[1]=t14,tmp=(C_word)a,a+=2,tmp);
t16=C_SCHEME_FALSE;
t17=(*a=C_VECTOR_TYPE|1,a[1]=t16,tmp=(C_word)a,a+=2,tmp);
t18=(*a=C_CLOSURE_TYPE|12,a[1]=(C_word)f_11776,a[2]=t13,a[3]=t11,a[4]=t17,a[5]=t9,a[6]=((C_word*)t0)[4],a[7]=t15,a[8]=t5,a[9]=t3,a[10]=t7,a[11]=((C_word*)t0)[2],a[12]=((C_word*)t0)[3],tmp=(C_word)a,a+=13,tmp);
if(C_truep((C_word)C_i_nullp(((C_word*)t15)[1]))){
t19=t18;
f_11776(t19,C_SCHEME_UNDEFINED);}
else{
t19=(C_word)C_i_car(((C_word*)t15)[1]);
t20=(C_word)C_eqp(t19,lf[216]);
if(C_truep(t20)){
t21=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_12106,a[2]=((C_word*)t0)[4],a[3]=t18,a[4]=t15,a[5]=t17,a[6]=t9,a[7]=t3,tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)t9)[1])){
C_trace("ChickenBridge.scm: 368  error");
t22=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t22))(4,t22,t21,lf[19],lf[216]);}
else{
t22=t21;
f_12106(2,t22,C_SCHEME_UNDEFINED);}}
else{
t21=(C_word)C_eqp(t19,lf[217]);
if(C_truep(t21)){
t22=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_12141,a[2]=((C_word*)t0)[4],a[3]=t18,a[4]=t15,a[5]=t17,a[6]=t11,a[7]=t5,tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)t11)[1])){
C_trace("ChickenBridge.scm: 368  error");
t23=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t23))(4,t23,t22,lf[19],lf[217]);}
else{
t23=t22;
f_12141(2,t23,C_SCHEME_UNDEFINED);}}
else{
t22=(C_word)C_eqp(t19,lf[232]);
if(C_truep(t22)){
t23=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_12176,a[2]=((C_word*)t0)[4],a[3]=t18,a[4]=t15,a[5]=t17,a[6]=t13,a[7]=t7,tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)t13)[1])){
C_trace("ChickenBridge.scm: 368  error");
t24=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t24))(4,t24,t23,lf[19],lf[232]);}
else{
t24=t23;
f_12176(2,t24,C_SCHEME_UNDEFINED);}}
else{
t23=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_12205,a[2]=t18,a[3]=t9,a[4]=t3,a[5]=t15,tmp=(C_word)a,a+=6,tmp);
if(C_truep(((C_word*)t17)[1])){
C_trace("ChickenBridge.scm: 368  error");
t24=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t24))(4,t24,t23,lf[10],((C_word*)t0)[4]);}
else{
t24=t23;
f_12205(2,t24,C_SCHEME_UNDEFINED);}}}}}}

/* k12203 in k11771 in make-rotation in k7924 in k7921 in k5905 in k5612 in k5609 in k5605 in k5314 in k5311 in k5308 in k5305 */
static void C_ccall f_12205(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_12205,2,t0,t1);}
t2=(C_word)C_i_car(((C_word*)((C_word*)t0)[5])[1]);
t3=C_mutate(((C_word *)((C_word*)t0)[4])+1,t2);
t4=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_12212,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[5],a[4]=((C_word*)t0)[3],tmp=(C_word)a,a+=5,tmp);
t5=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_12220,a[2]=((C_word*)t0)[4],a[3]=t4,tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 368  keyword?");
t6=C_retrieve(lf[13]);
((C_proc3)C_retrieve_proc(t6))(3,t6,t5,((C_word*)((C_word*)t0)[4])[1]);}

/* k12218 in k12203 in k11771 in make-rotation in k7924 in k7921 in k5905 in k5612 in k5609 in k5605 in k5314 in k5311 in k5308 in k5305 */
static void C_ccall f_12220(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
if(C_truep(t1)){
C_trace("ChickenBridge.scm: 368  error");
t2=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t2))(4,t2,((C_word*)t0)[3],lf[14],((C_word*)((C_word*)t0)[2])[1]);}
else{
t2=((C_word*)t0)[3];
f_12212(2,t2,C_SCHEME_UNDEFINED);}}

/* k12210 in k12203 in k11771 in make-rotation in k7924 in k7921 in k5905 in k5612 in k5609 in k5605 in k5314 in k5311 in k5308 in k5305 */
static void C_ccall f_12212(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word *a;
t2=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[3])[1]);
t4=C_mutate(((C_word *)((C_word*)t0)[3])+1,t3);
t5=((C_word*)t0)[2];
f_11776(t5,t4);}

/* k12174 in k11771 in make-rotation in k7924 in k7921 in k5905 in k5612 in k5609 in k5605 in k5314 in k5311 in k5308 in k5305 */
static void C_ccall f_12176(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_12176,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_12180,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("ChickenBridge.scm: 368  error");
t4=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[21],((C_word*)t0)[2]);}
else{
t4=t2;
f_12180(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k12178 in k12174 in k11771 in make-rotation in k7924 in k7921 in k5905 in k5612 in k5609 in k5605 in k5314 in k5311 in k5308 in k5305 */
static void C_ccall f_12180(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_11776(t7,t6);}

/* k12139 in k11771 in make-rotation in k7924 in k7921 in k5905 in k5612 in k5609 in k5605 in k5314 in k5311 in k5308 in k5305 */
static void C_ccall f_12141(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_12141,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_12145,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("ChickenBridge.scm: 368  error");
t4=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[21],((C_word*)t0)[2]);}
else{
t4=t2;
f_12145(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k12143 in k12139 in k11771 in make-rotation in k7924 in k7921 in k5905 in k5612 in k5609 in k5605 in k5314 in k5311 in k5308 in k5305 */
static void C_ccall f_12145(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_11776(t7,t6);}

/* k12104 in k11771 in make-rotation in k7924 in k7921 in k5905 in k5612 in k5609 in k5605 in k5314 in k5311 in k5308 in k5305 */
static void C_ccall f_12106(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_12106,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_12110,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("ChickenBridge.scm: 368  error");
t4=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[21],((C_word*)t0)[2]);}
else{
t4=t2;
f_12110(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k12108 in k12104 in k11771 in make-rotation in k7924 in k7921 in k5905 in k5612 in k5609 in k5605 in k5314 in k5311 in k5308 in k5305 */
static void C_ccall f_12110(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_11776(t7,t6);}

/* k11774 in k11771 in make-rotation in k7924 in k7921 in k5905 in k5612 in k5609 in k5605 in k5314 in k5311 in k5308 in k5305 */
static void C_fcall f_11776(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word ab[43],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_11776,NULL,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|12,a[1]=(C_word)f_11779,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],a[7]=((C_word*)t0)[7],a[8]=((C_word*)t0)[8],a[9]=((C_word*)t0)[9],a[10]=((C_word*)t0)[10],a[11]=((C_word*)t0)[11],a[12]=((C_word*)t0)[12],tmp=(C_word)a,a+=13,tmp);
if(C_truep((C_word)C_i_nullp(((C_word*)((C_word*)t0)[7])[1]))){
t3=t2;
f_11779(t3,C_SCHEME_UNDEFINED);}
else{
t3=(C_word)C_i_car(((C_word*)((C_word*)t0)[7])[1]);
t4=(C_word)C_eqp(t3,lf[216]);
if(C_truep(t4)){
t5=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_11971,a[2]=((C_word*)t0)[6],a[3]=t2,a[4]=((C_word*)t0)[7],a[5]=((C_word*)t0)[4],a[6]=((C_word*)t0)[5],a[7]=((C_word*)t0)[9],tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)((C_word*)t0)[5])[1])){
C_trace("ChickenBridge.scm: 368  error");
t6=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t6))(4,t6,t5,lf[19],lf[216]);}
else{
t6=t5;
f_11971(2,t6,C_SCHEME_UNDEFINED);}}
else{
t5=(C_word)C_eqp(t3,lf[217]);
if(C_truep(t5)){
t6=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_12006,a[2]=((C_word*)t0)[6],a[3]=t2,a[4]=((C_word*)t0)[7],a[5]=((C_word*)t0)[4],a[6]=((C_word*)t0)[3],a[7]=((C_word*)t0)[8],tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)((C_word*)t0)[3])[1])){
C_trace("ChickenBridge.scm: 368  error");
t7=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t7))(4,t7,t6,lf[19],lf[217]);}
else{
t7=t6;
f_12006(2,t7,C_SCHEME_UNDEFINED);}}
else{
t6=(C_word)C_eqp(t3,lf[232]);
if(C_truep(t6)){
t7=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_12041,a[2]=((C_word*)t0)[6],a[3]=t2,a[4]=((C_word*)t0)[7],a[5]=((C_word*)t0)[4],a[6]=((C_word*)t0)[2],a[7]=((C_word*)t0)[10],tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)((C_word*)t0)[2])[1])){
C_trace("ChickenBridge.scm: 368  error");
t8=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t8))(4,t8,t7,lf[19],lf[232]);}
else{
t8=t7;
f_12041(2,t8,C_SCHEME_UNDEFINED);}}
else{
t7=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_12070,a[2]=t2,a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[8],a[5]=((C_word*)t0)[7],tmp=(C_word)a,a+=6,tmp);
if(C_truep(((C_word*)((C_word*)t0)[4])[1])){
C_trace("ChickenBridge.scm: 368  error");
t8=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t8))(4,t8,t7,lf[10],((C_word*)t0)[6]);}
else{
t8=t7;
f_12070(2,t8,C_SCHEME_UNDEFINED);}}}}}}

/* k12068 in k11774 in k11771 in make-rotation in k7924 in k7921 in k5905 in k5612 in k5609 in k5605 in k5314 in k5311 in k5308 in k5305 */
static void C_ccall f_12070(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_12070,2,t0,t1);}
t2=(C_word)C_i_car(((C_word*)((C_word*)t0)[5])[1]);
t3=C_mutate(((C_word *)((C_word*)t0)[4])+1,t2);
t4=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_12077,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[5],a[4]=((C_word*)t0)[3],tmp=(C_word)a,a+=5,tmp);
t5=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_12085,a[2]=((C_word*)t0)[4],a[3]=t4,tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 368  keyword?");
t6=C_retrieve(lf[13]);
((C_proc3)C_retrieve_proc(t6))(3,t6,t5,((C_word*)((C_word*)t0)[4])[1]);}

/* k12083 in k12068 in k11774 in k11771 in make-rotation in k7924 in k7921 in k5905 in k5612 in k5609 in k5605 in k5314 in k5311 in k5308 in k5305 */
static void C_ccall f_12085(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
if(C_truep(t1)){
C_trace("ChickenBridge.scm: 368  error");
t2=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t2))(4,t2,((C_word*)t0)[3],lf[14],((C_word*)((C_word*)t0)[2])[1]);}
else{
t2=((C_word*)t0)[3];
f_12077(2,t2,C_SCHEME_UNDEFINED);}}

/* k12075 in k12068 in k11774 in k11771 in make-rotation in k7924 in k7921 in k5905 in k5612 in k5609 in k5605 in k5314 in k5311 in k5308 in k5305 */
static void C_ccall f_12077(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word *a;
t2=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[3])[1]);
t4=C_mutate(((C_word *)((C_word*)t0)[3])+1,t3);
t5=((C_word*)t0)[2];
f_11779(t5,t4);}

/* k12039 in k11774 in k11771 in make-rotation in k7924 in k7921 in k5905 in k5612 in k5609 in k5605 in k5314 in k5311 in k5308 in k5305 */
static void C_ccall f_12041(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_12041,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_12045,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("ChickenBridge.scm: 368  error");
t4=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[21],((C_word*)t0)[2]);}
else{
t4=t2;
f_12045(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k12043 in k12039 in k11774 in k11771 in make-rotation in k7924 in k7921 in k5905 in k5612 in k5609 in k5605 in k5314 in k5311 in k5308 in k5305 */
static void C_ccall f_12045(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_11779(t7,t6);}

/* k12004 in k11774 in k11771 in make-rotation in k7924 in k7921 in k5905 in k5612 in k5609 in k5605 in k5314 in k5311 in k5308 in k5305 */
static void C_ccall f_12006(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_12006,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_12010,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("ChickenBridge.scm: 368  error");
t4=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[21],((C_word*)t0)[2]);}
else{
t4=t2;
f_12010(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k12008 in k12004 in k11774 in k11771 in make-rotation in k7924 in k7921 in k5905 in k5612 in k5609 in k5605 in k5314 in k5311 in k5308 in k5305 */
static void C_ccall f_12010(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_11779(t7,t6);}

/* k11969 in k11774 in k11771 in make-rotation in k7924 in k7921 in k5905 in k5612 in k5609 in k5605 in k5314 in k5311 in k5308 in k5305 */
static void C_ccall f_11971(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_11971,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_11975,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("ChickenBridge.scm: 368  error");
t4=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[21],((C_word*)t0)[2]);}
else{
t4=t2;
f_11975(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k11973 in k11969 in k11774 in k11771 in make-rotation in k7924 in k7921 in k5905 in k5612 in k5609 in k5605 in k5314 in k5311 in k5308 in k5305 */
static void C_ccall f_11975(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_11779(t7,t6);}

/* k11777 in k11774 in k11771 in make-rotation in k7924 in k7921 in k5905 in k5612 in k5609 in k5605 in k5314 in k5311 in k5308 in k5305 */
static void C_fcall f_11779(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word ab[39],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_11779,NULL,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|8,a[1]=(C_word)f_11782,a[2]=((C_word*)t0)[6],a[3]=((C_word*)t0)[7],a[4]=((C_word*)t0)[8],a[5]=((C_word*)t0)[9],a[6]=((C_word*)t0)[10],a[7]=((C_word*)t0)[11],a[8]=((C_word*)t0)[12],tmp=(C_word)a,a+=9,tmp);
if(C_truep((C_word)C_i_nullp(((C_word*)((C_word*)t0)[7])[1]))){
t3=t2;
f_11782(t3,C_SCHEME_UNDEFINED);}
else{
t3=(C_word)C_i_car(((C_word*)((C_word*)t0)[7])[1]);
t4=(C_word)C_eqp(t3,lf[216]);
if(C_truep(t4)){
t5=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_11836,a[2]=((C_word*)t0)[6],a[3]=t2,a[4]=((C_word*)t0)[7],a[5]=((C_word*)t0)[4],a[6]=((C_word*)t0)[5],a[7]=((C_word*)t0)[9],tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)((C_word*)t0)[5])[1])){
C_trace("ChickenBridge.scm: 368  error");
t6=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t6))(4,t6,t5,lf[19],lf[216]);}
else{
t6=t5;
f_11836(2,t6,C_SCHEME_UNDEFINED);}}
else{
t5=(C_word)C_eqp(t3,lf[217]);
if(C_truep(t5)){
t6=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_11871,a[2]=((C_word*)t0)[6],a[3]=t2,a[4]=((C_word*)t0)[7],a[5]=((C_word*)t0)[4],a[6]=((C_word*)t0)[3],a[7]=((C_word*)t0)[8],tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)((C_word*)t0)[3])[1])){
C_trace("ChickenBridge.scm: 368  error");
t7=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t7))(4,t7,t6,lf[19],lf[217]);}
else{
t7=t6;
f_11871(2,t7,C_SCHEME_UNDEFINED);}}
else{
t6=(C_word)C_eqp(t3,lf[232]);
if(C_truep(t6)){
t7=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_11906,a[2]=((C_word*)t0)[6],a[3]=t2,a[4]=((C_word*)t0)[7],a[5]=((C_word*)t0)[4],a[6]=((C_word*)t0)[2],a[7]=((C_word*)t0)[10],tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)((C_word*)t0)[2])[1])){
C_trace("ChickenBridge.scm: 368  error");
t8=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t8))(4,t8,t7,lf[19],lf[232]);}
else{
t8=t7;
f_11906(2,t8,C_SCHEME_UNDEFINED);}}
else{
t7=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_11935,a[2]=t2,a[3]=((C_word*)t0)[2],a[4]=((C_word*)t0)[10],a[5]=((C_word*)t0)[7],tmp=(C_word)a,a+=6,tmp);
if(C_truep(((C_word*)((C_word*)t0)[4])[1])){
C_trace("ChickenBridge.scm: 368  error");
t8=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t8))(4,t8,t7,lf[10],((C_word*)t0)[6]);}
else{
t8=t7;
f_11935(2,t8,C_SCHEME_UNDEFINED);}}}}}}

/* k11933 in k11777 in k11774 in k11771 in make-rotation in k7924 in k7921 in k5905 in k5612 in k5609 in k5605 in k5314 in k5311 in k5308 in k5305 */
static void C_ccall f_11935(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_11935,2,t0,t1);}
t2=(C_word)C_i_car(((C_word*)((C_word*)t0)[5])[1]);
t3=C_mutate(((C_word *)((C_word*)t0)[4])+1,t2);
t4=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_11942,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[5],a[4]=((C_word*)t0)[3],tmp=(C_word)a,a+=5,tmp);
t5=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_11950,a[2]=((C_word*)t0)[4],a[3]=t4,tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 368  keyword?");
t6=C_retrieve(lf[13]);
((C_proc3)C_retrieve_proc(t6))(3,t6,t5,((C_word*)((C_word*)t0)[4])[1]);}

/* k11948 in k11933 in k11777 in k11774 in k11771 in make-rotation in k7924 in k7921 in k5905 in k5612 in k5609 in k5605 in k5314 in k5311 in k5308 in k5305 */
static void C_ccall f_11950(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
if(C_truep(t1)){
C_trace("ChickenBridge.scm: 368  error");
t2=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t2))(4,t2,((C_word*)t0)[3],lf[14],((C_word*)((C_word*)t0)[2])[1]);}
else{
t2=((C_word*)t0)[3];
f_11942(2,t2,C_SCHEME_UNDEFINED);}}

/* k11940 in k11933 in k11777 in k11774 in k11771 in make-rotation in k7924 in k7921 in k5905 in k5612 in k5609 in k5605 in k5314 in k5311 in k5308 in k5305 */
static void C_ccall f_11942(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word *a;
t2=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[3])[1]);
t4=C_mutate(((C_word *)((C_word*)t0)[3])+1,t3);
t5=((C_word*)t0)[2];
f_11782(t5,t4);}

/* k11904 in k11777 in k11774 in k11771 in make-rotation in k7924 in k7921 in k5905 in k5612 in k5609 in k5605 in k5314 in k5311 in k5308 in k5305 */
static void C_ccall f_11906(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_11906,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_11910,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("ChickenBridge.scm: 368  error");
t4=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[21],((C_word*)t0)[2]);}
else{
t4=t2;
f_11910(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k11908 in k11904 in k11777 in k11774 in k11771 in make-rotation in k7924 in k7921 in k5905 in k5612 in k5609 in k5605 in k5314 in k5311 in k5308 in k5305 */
static void C_ccall f_11910(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_11782(t7,t6);}

/* k11869 in k11777 in k11774 in k11771 in make-rotation in k7924 in k7921 in k5905 in k5612 in k5609 in k5605 in k5314 in k5311 in k5308 in k5305 */
static void C_ccall f_11871(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_11871,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_11875,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("ChickenBridge.scm: 368  error");
t4=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[21],((C_word*)t0)[2]);}
else{
t4=t2;
f_11875(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k11873 in k11869 in k11777 in k11774 in k11771 in make-rotation in k7924 in k7921 in k5905 in k5612 in k5609 in k5605 in k5314 in k5311 in k5308 in k5305 */
static void C_ccall f_11875(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_11782(t7,t6);}

/* k11834 in k11777 in k11774 in k11771 in make-rotation in k7924 in k7921 in k5905 in k5612 in k5609 in k5605 in k5314 in k5311 in k5308 in k5305 */
static void C_ccall f_11836(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_11836,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_11840,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("ChickenBridge.scm: 368  error");
t4=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[21],((C_word*)t0)[2]);}
else{
t4=t2;
f_11840(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k11838 in k11834 in k11777 in k11774 in k11771 in make-rotation in k7924 in k7921 in k5905 in k5612 in k5609 in k5605 in k5314 in k5311 in k5308 in k5305 */
static void C_ccall f_11840(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_11782(t7,t6);}

/* k11780 in k11777 in k11774 in k11771 in make-rotation in k7924 in k7921 in k5905 in k5612 in k5609 in k5605 in k5314 in k5311 in k5308 in k5305 */
static void C_fcall f_11782(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_11782,NULL,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_11785,a[2]=((C_word*)t0)[4],a[3]=((C_word*)t0)[5],a[4]=((C_word*)t0)[6],a[5]=((C_word*)t0)[7],a[6]=((C_word*)t0)[8],tmp=(C_word)a,a+=7,tmp);
if(C_truep((C_word)C_i_nullp(((C_word*)((C_word*)t0)[3])[1]))){
t3=t2;
f_11785(2,t3,C_SCHEME_UNDEFINED);}
else{
C_trace("ChickenBridge.scm: 368  error");
t3=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t3))(4,t3,t2,lf[5],((C_word*)t0)[2]);}}

/* k11783 in k11780 in k11777 in k11774 in k11771 in make-rotation in k7924 in k7921 in k5905 in k5612 in k5609 in k5605 in k5314 in k5311 in k5308 in k5305 */
static void C_ccall f_11785(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_11785,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_11788,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],tmp=(C_word)a,a+=7,tmp);
C_trace("ChickenBridge.scm: 368  %alloc-pattern");
f_9224(t2);}

/* k11786 in k11783 in k11780 in k11777 in k11774 in k11771 in make-rotation in k7924 in k7921 in k5905 in k5612 in k5609 in k5605 in k5314 in k5311 in k5308 in k5305 */
static void C_ccall f_11788(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[11],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_11788,2,t0,t1);}
t2=(C_word)C_i_length(((C_word*)((C_word*)t0)[6])[1]);
t3=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_11794,a[2]=((C_word*)t0)[4],a[3]=t1,a[4]=((C_word*)t0)[5],tmp=(C_word)a,a+=5,tmp);
t4=(C_word)C_a_i_cons(&a,2,((C_word*)((C_word*)t0)[6])[1],((C_word*)((C_word*)t0)[6])[1]);
t5=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_11803,a[2]=((C_word)li155),tmp=(C_word)a,a+=3,tmp);
C_trace("ChickenBridge.scm: 368  initialize-pattern");
f_9234(t3,t1,t4,((C_word*)((C_word*)t0)[3])[1],((C_word*)((C_word*)t0)[2])[1],C_fix(0),t2,t2,C_retrieve2(lf[231],"next-in-rotation"),t5);}

/* a11802 in k11786 in k11783 in k11780 in k11777 in k11774 in k11771 in make-rotation in k7924 in k7921 in k5905 in k5612 in k5609 in k5605 in k5314 in k5311 in k5308 in k5305 */
static void C_ccall f_11803(C_word c,C_word t0,C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word ab[4],*a=ab;
if(c!=4) C_bad_argc_2(c,4,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr4,(void*)f_11803,4,t0,t1,t2,t3);}
t4=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_11815,a[2]=t2,a[3]=t1,tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 368  pattern-data");
f_8953(t4,t3);}

/* k11813 in a11802 in k11786 in k11783 in k11780 in k11777 in k11774 in k11771 in make-rotation in k7924 in k7921 in k5905 in k5612 in k5609 in k5605 in k5314 in k5311 in k5308 in k5305 */
static void C_ccall f_11815(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word *a;
t2=(C_word)C_i_car(t1);
C_trace("for-each");
t3=*((C_word*)lf[214]+1);
((C_proc4)(void*)(*((C_word*)t3+1)))(4,t3,((C_word*)t0)[3],((C_word*)t0)[2],t2);}

/* k11792 in k11786 in k11783 in k11780 in k11777 in k11774 in k11771 in make-rotation in k7924 in k7921 in k5905 in k5612 in k5609 in k5605 in k5314 in k5311 in k5308 in k5305 */
static void C_ccall f_11794(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[4],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_11794,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_11797,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 368  pattern-cache-set!");
f_9160(t2,((C_word*)t0)[3],((C_word*)((C_word*)t0)[2])[1]);}

/* k11795 in k11792 in k11786 in k11783 in k11780 in k11777 in k11774 in k11771 in make-rotation in k7924 in k7921 in k5905 in k5612 in k5609 in k5605 in k5314 in k5311 in k5308 in k5305 */
static void C_ccall f_11797(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
t2=((C_word*)t0)[3];
((C_proc2)(void*)(*((C_word*)t2+1)))(2,t2,((C_word*)t0)[2]);}

/* next-in-heap in k7924 in k7921 in k5905 in k5612 in k5609 in k5605 in k5314 in k5311 in k5308 in k5305 */
static void C_ccall f_11693(C_word c,C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word ab[4],*a=ab;
if(c!=3) C_bad_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr3,(void*)f_11693,3,t0,t1,t2);}
t3=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_11697,a[2]=t2,a[3]=t1,tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 368  pattern-data");
f_8953(t3,t2);}

/* k11695 in next-in-heap in k7924 in k7921 in k5905 in k5612 in k5609 in k5605 in k5314 in k5311 in k5308 in k5305 */
static void C_ccall f_11697(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[8],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_11697,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_11700,a[2]=((C_word*)t0)[3],a[3]=t1,tmp=(C_word)a,a+=4,tmp);
t3=(C_word)C_i_cdr(t1);
if(C_truep((C_word)C_i_nullp(t3))){
t4=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_11716,a[2]=t2,a[3]=t1,tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 368  pattern-length");
f_8971(t4,((C_word*)t0)[2]);}
else{
t4=t2;
f_11700(2,t4,C_SCHEME_UNDEFINED);}}

/* k11714 in k11695 in next-in-heap in k7924 in k7921 in k5905 in k5612 in k5609 in k5605 in k5314 in k5311 in k5308 in k5305 */
static void C_ccall f_11716(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[6],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_11716,2,t0,t1);}
t2=(C_word)C_i_car(((C_word*)t0)[3]);
t3=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_11726,a[2]=((C_word*)t0)[2],a[3]=t2,a[4]=((C_word*)t0)[3],a[5]=t1,tmp=(C_word)a,a+=6,tmp);
C_trace("ChickenBridge.scm: 368  tb:rani");
f_6476(t3,t1);}

/* k11724 in k11714 in k11695 in next-in-heap in k7924 in k7921 in k5905 in k5612 in k5609 in k5605 in k5314 in k5311 in k5308 in k5305 */
static void C_ccall f_11726(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_11726,2,t0,t1);}
t2=C_SCHEME_UNDEFINED;
t3=(*a=C_VECTOR_TYPE|1,a[1]=t2,tmp=(C_word)a,a+=2,tmp);
t4=C_set_block_item(t3,0,(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_11728,a[2]=t3,a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=((C_word)li153),tmp=(C_word)a,a+=7,tmp));
t5=((C_word*)t3)[1];
f_11728(t5,((C_word*)t0)[2],C_fix(0),t1,C_SCHEME_FALSE);}

/* do1288 in k11724 in k11714 in k11695 in next-in-heap in k7924 in k7921 in k5905 in k5612 in k5609 in k5605 in k5314 in k5311 in k5308 in k5305 */
static void C_fcall f_11728(C_word t0,C_word t1,C_word t2,C_word t3,C_word t4){
C_word tmp;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word ab[11],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_11728,NULL,5,t0,t1,t2,t3,t4);}
t5=(*a=C_VECTOR_TYPE|1,a[1]=t4,tmp=(C_word)a,a+=2,tmp);
if(C_truep((C_word)C_i_nequalp(t2,((C_word*)t0)[5]))){
t6=t1;
((C_proc2)(void*)(*((C_word*)t6+1)))(2,t6,(C_word)C_i_set_cdr(((C_word*)t0)[4],((C_word*)t0)[3]));}
else{
t6=(C_word)C_i_list_ref(((C_word*)t0)[3],t2);
t7=C_set_block_item(t5,0,t6);
t8=(*a=C_CLOSURE_TYPE|8,a[1]=(C_word)f_11745,a[2]=t3,a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[5],a[5]=t5,a[6]=t1,a[7]=((C_word*)t0)[2],a[8]=t2,tmp=(C_word)a,a+=9,tmp);
t9=(C_word)C_i_list_ref(((C_word*)t0)[3],t3);
C_trace("ChickenBridge.scm: 368  list-set!");
t10=C_retrieve(lf[60]);
((C_proc5)C_retrieve_proc(t10))(5,t10,t8,((C_word*)t0)[3],t2,t9);}}

/* k11743 in do1288 in k11724 in k11714 in k11695 in next-in-heap in k7924 in k7921 in k5905 in k5612 in k5609 in k5605 in k5314 in k5311 in k5308 in k5305 */
static void C_ccall f_11745(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_11745,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_11748,a[2]=((C_word*)t0)[4],a[3]=((C_word*)t0)[5],a[4]=((C_word*)t0)[6],a[5]=((C_word*)t0)[7],a[6]=((C_word*)t0)[8],tmp=(C_word)a,a+=7,tmp);
C_trace("ChickenBridge.scm: 368  list-set!");
t3=C_retrieve(lf[60]);
((C_proc5)C_retrieve_proc(t3))(5,t3,t2,((C_word*)t0)[3],((C_word*)t0)[2],((C_word*)((C_word*)t0)[5])[1]);}

/* k11746 in k11743 in do1288 in k11724 in k11714 in k11695 in next-in-heap in k7924 in k7921 in k5905 in k5612 in k5609 in k5605 in k5314 in k5311 in k5308 in k5305 */
static void C_ccall f_11748(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[10],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_11748,2,t0,t1);}
t2=(C_word)C_a_i_plus(&a,2,((C_word*)t0)[6],C_fix(1));
t3=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_11759,a[2]=((C_word*)t0)[3],a[3]=t2,a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],tmp=(C_word)a,a+=6,tmp);
C_trace("ChickenBridge.scm: 368  tb:rani");
f_6476(t3,((C_word*)t0)[2]);}

/* k11757 in k11746 in k11743 in do1288 in k11724 in k11714 in k11695 in next-in-heap in k7924 in k7921 in k5905 in k5612 in k5609 in k5605 in k5314 in k5311 in k5308 in k5305 */
static void C_ccall f_11759(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
t2=((C_word*)((C_word*)t0)[5])[1];
f_11728(t2,((C_word*)t0)[4],((C_word*)t0)[3],t1,((C_word*)((C_word*)t0)[2])[1]);}

/* k11698 in k11695 in next-in-heap in k7924 in k7921 in k5905 in k5612 in k5609 in k5605 in k5314 in k5311 in k5308 in k5305 */
static void C_ccall f_11700(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word *a;
t2=(C_word)C_i_cadr(((C_word*)t0)[3]);
t3=(C_word)C_i_cddr(((C_word*)t0)[3]);
t4=(C_word)C_i_set_cdr(((C_word*)t0)[3],t3);
t5=((C_word*)t0)[2];
((C_proc2)(void*)(*((C_word*)t5+1)))(2,t5,t2);}

/* make-heap in k7924 in k7921 in k5905 in k5612 in k5609 in k5605 in k5314 in k5311 in k5308 in k5305 */
static void C_ccall f_11430(C_word c,C_word t0,C_word t1,C_word t2,...){
C_word tmp;
C_word t3;
va_list v;
C_word *a,c2=c;
C_save_rest(t2,c2,3);
if(c<3) C_bad_min_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_demand(c*C_SIZEOF_PAIR+14)){
C_save_and_reclaim((void*)tr3r,(void*)f_11430r,3,t0,t1,t2);}
else{
a=C_alloc((c-3)*3);
t3=C_restore_rest(a,C_rest_count(0));
f_11430r(t0,t1,t2,t3);}}

static void C_ccall f_11430r(C_word t0,C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word *a=C_alloc(14);
t4=(*a=C_VECTOR_TYPE|1,a[1]=t2,tmp=(C_word)a,a+=2,tmp);
t5=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_11434,a[2]=t1,a[3]=t4,a[4]=t3,tmp=(C_word)a,a+=5,tmp);
if(C_truep((C_word)C_i_pairp(((C_word*)t4)[1]))){
t6=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_11683,a[2]=t5,a[3]=t4,tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 368  append");
t7=*((C_word*)lf[18]+1);
((C_proc4)C_retrieve_proc(t7))(4,t7,t6,((C_word*)t4)[1],C_SCHEME_END_OF_LIST);}
else{
t6=(C_word)C_a_i_list(&a,1,((C_word*)t4)[1]);
t7=C_set_block_item(t4,0,t6);
t8=t5;
f_11434(t8,t7);}}

/* k11681 in make-heap in k7924 in k7921 in k5905 in k5612 in k5609 in k5605 in k5314 in k5311 in k5308 in k5305 */
static void C_ccall f_11683(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[3])+1,t1);
t3=((C_word*)t0)[2];
f_11434(t3,t2);}

/* k11432 in make-heap in k7924 in k7921 in k5905 in k5612 in k5609 in k5605 in k5314 in k5311 in k5308 in k5305 */
static void C_fcall f_11434(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word t14;
C_word t15;
C_word t16;
C_word t17;
C_word t18;
C_word t19;
C_word t20;
C_word t21;
C_word ab[45],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_11434,NULL,2,t0,t1);}
t2=C_SCHEME_FALSE;
t3=(*a=C_VECTOR_TYPE|1,a[1]=t2,tmp=(C_word)a,a+=2,tmp);
t4=C_SCHEME_FALSE;
t5=(*a=C_VECTOR_TYPE|1,a[1]=t4,tmp=(C_word)a,a+=2,tmp);
t6=C_SCHEME_FALSE;
t7=(*a=C_VECTOR_TYPE|1,a[1]=t6,tmp=(C_word)a,a+=2,tmp);
t8=C_SCHEME_FALSE;
t9=(*a=C_VECTOR_TYPE|1,a[1]=t8,tmp=(C_word)a,a+=2,tmp);
t10=((C_word*)t0)[4];
t11=(*a=C_VECTOR_TYPE|1,a[1]=t10,tmp=(C_word)a,a+=2,tmp);
t12=C_SCHEME_FALSE;
t13=(*a=C_VECTOR_TYPE|1,a[1]=t12,tmp=(C_word)a,a+=2,tmp);
t14=(*a=C_CLOSURE_TYPE|10,a[1]=(C_word)f_11437,a[2]=t9,a[3]=t13,a[4]=t7,a[5]=((C_word*)t0)[4],a[6]=t11,a[7]=t5,a[8]=t3,a[9]=((C_word*)t0)[2],a[10]=((C_word*)t0)[3],tmp=(C_word)a,a+=11,tmp);
if(C_truep((C_word)C_i_nullp(((C_word*)t11)[1]))){
t15=t14;
f_11437(t15,C_SCHEME_UNDEFINED);}
else{
t15=(C_word)C_i_car(((C_word*)t11)[1]);
t16=(C_word)C_eqp(t15,lf[216]);
if(C_truep(t16)){
t17=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_11591,a[2]=((C_word*)t0)[4],a[3]=t14,a[4]=t11,a[5]=t13,a[6]=t7,a[7]=t3,tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)t7)[1])){
C_trace("ChickenBridge.scm: 368  error");
t18=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t18))(4,t18,t17,lf[19],lf[216]);}
else{
t18=t17;
f_11591(2,t18,C_SCHEME_UNDEFINED);}}
else{
t17=(C_word)C_eqp(t15,lf[217]);
if(C_truep(t17)){
t18=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_11626,a[2]=((C_word*)t0)[4],a[3]=t14,a[4]=t11,a[5]=t13,a[6]=t9,a[7]=t5,tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)t9)[1])){
C_trace("ChickenBridge.scm: 368  error");
t19=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t19))(4,t19,t18,lf[19],lf[217]);}
else{
t19=t18;
f_11626(2,t19,C_SCHEME_UNDEFINED);}}
else{
t18=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_11655,a[2]=t14,a[3]=t7,a[4]=t3,a[5]=t11,tmp=(C_word)a,a+=6,tmp);
if(C_truep(((C_word*)t13)[1])){
C_trace("ChickenBridge.scm: 368  error");
t19=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t19))(4,t19,t18,lf[10],((C_word*)t0)[4]);}
else{
t19=t18;
f_11655(2,t19,C_SCHEME_UNDEFINED);}}}}}

/* k11653 in k11432 in make-heap in k7924 in k7921 in k5905 in k5612 in k5609 in k5605 in k5314 in k5311 in k5308 in k5305 */
static void C_ccall f_11655(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_11655,2,t0,t1);}
t2=(C_word)C_i_car(((C_word*)((C_word*)t0)[5])[1]);
t3=C_mutate(((C_word *)((C_word*)t0)[4])+1,t2);
t4=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_11662,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[5],a[4]=((C_word*)t0)[3],tmp=(C_word)a,a+=5,tmp);
t5=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_11670,a[2]=((C_word*)t0)[4],a[3]=t4,tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 368  keyword?");
t6=C_retrieve(lf[13]);
((C_proc3)C_retrieve_proc(t6))(3,t6,t5,((C_word*)((C_word*)t0)[4])[1]);}

/* k11668 in k11653 in k11432 in make-heap in k7924 in k7921 in k5905 in k5612 in k5609 in k5605 in k5314 in k5311 in k5308 in k5305 */
static void C_ccall f_11670(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
if(C_truep(t1)){
C_trace("ChickenBridge.scm: 368  error");
t2=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t2))(4,t2,((C_word*)t0)[3],lf[14],((C_word*)((C_word*)t0)[2])[1]);}
else{
t2=((C_word*)t0)[3];
f_11662(2,t2,C_SCHEME_UNDEFINED);}}

/* k11660 in k11653 in k11432 in make-heap in k7924 in k7921 in k5905 in k5612 in k5609 in k5605 in k5314 in k5311 in k5308 in k5305 */
static void C_ccall f_11662(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word *a;
t2=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[3])[1]);
t4=C_mutate(((C_word *)((C_word*)t0)[3])+1,t3);
t5=((C_word*)t0)[2];
f_11437(t5,t4);}

/* k11624 in k11432 in make-heap in k7924 in k7921 in k5905 in k5612 in k5609 in k5605 in k5314 in k5311 in k5308 in k5305 */
static void C_ccall f_11626(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_11626,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_11630,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("ChickenBridge.scm: 368  error");
t4=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[21],((C_word*)t0)[2]);}
else{
t4=t2;
f_11630(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k11628 in k11624 in k11432 in make-heap in k7924 in k7921 in k5905 in k5612 in k5609 in k5605 in k5314 in k5311 in k5308 in k5305 */
static void C_ccall f_11630(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_11437(t7,t6);}

/* k11589 in k11432 in make-heap in k7924 in k7921 in k5905 in k5612 in k5609 in k5605 in k5314 in k5311 in k5308 in k5305 */
static void C_ccall f_11591(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_11591,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_11595,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("ChickenBridge.scm: 368  error");
t4=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[21],((C_word*)t0)[2]);}
else{
t4=t2;
f_11595(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k11593 in k11589 in k11432 in make-heap in k7924 in k7921 in k5905 in k5612 in k5609 in k5605 in k5314 in k5311 in k5308 in k5305 */
static void C_ccall f_11595(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_11437(t7,t6);}

/* k11435 in k11432 in make-heap in k7924 in k7921 in k5905 in k5612 in k5609 in k5605 in k5314 in k5311 in k5308 in k5305 */
static void C_fcall f_11437(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word ab[30],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_11437,NULL,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_11440,a[2]=((C_word*)t0)[5],a[3]=((C_word*)t0)[6],a[4]=((C_word*)t0)[7],a[5]=((C_word*)t0)[8],a[6]=((C_word*)t0)[9],a[7]=((C_word*)t0)[10],tmp=(C_word)a,a+=8,tmp);
if(C_truep((C_word)C_i_nullp(((C_word*)((C_word*)t0)[6])[1]))){
t3=t2;
f_11440(t3,C_SCHEME_UNDEFINED);}
else{
t3=(C_word)C_i_car(((C_word*)((C_word*)t0)[6])[1]);
t4=(C_word)C_eqp(t3,lf[216]);
if(C_truep(t4)){
t5=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_11491,a[2]=((C_word*)t0)[5],a[3]=t2,a[4]=((C_word*)t0)[6],a[5]=((C_word*)t0)[3],a[6]=((C_word*)t0)[4],a[7]=((C_word*)t0)[8],tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)((C_word*)t0)[4])[1])){
C_trace("ChickenBridge.scm: 368  error");
t6=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t6))(4,t6,t5,lf[19],lf[216]);}
else{
t6=t5;
f_11491(2,t6,C_SCHEME_UNDEFINED);}}
else{
t5=(C_word)C_eqp(t3,lf[217]);
if(C_truep(t5)){
t6=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_11526,a[2]=((C_word*)t0)[5],a[3]=t2,a[4]=((C_word*)t0)[6],a[5]=((C_word*)t0)[3],a[6]=((C_word*)t0)[2],a[7]=((C_word*)t0)[7],tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)((C_word*)t0)[2])[1])){
C_trace("ChickenBridge.scm: 368  error");
t7=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t7))(4,t7,t6,lf[19],lf[217]);}
else{
t7=t6;
f_11526(2,t7,C_SCHEME_UNDEFINED);}}
else{
t6=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_11555,a[2]=t2,a[3]=((C_word*)t0)[2],a[4]=((C_word*)t0)[7],a[5]=((C_word*)t0)[6],tmp=(C_word)a,a+=6,tmp);
if(C_truep(((C_word*)((C_word*)t0)[3])[1])){
C_trace("ChickenBridge.scm: 368  error");
t7=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t7))(4,t7,t6,lf[10],((C_word*)t0)[5]);}
else{
t7=t6;
f_11555(2,t7,C_SCHEME_UNDEFINED);}}}}}

/* k11553 in k11435 in k11432 in make-heap in k7924 in k7921 in k5905 in k5612 in k5609 in k5605 in k5314 in k5311 in k5308 in k5305 */
static void C_ccall f_11555(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_11555,2,t0,t1);}
t2=(C_word)C_i_car(((C_word*)((C_word*)t0)[5])[1]);
t3=C_mutate(((C_word *)((C_word*)t0)[4])+1,t2);
t4=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_11562,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[5],a[4]=((C_word*)t0)[3],tmp=(C_word)a,a+=5,tmp);
t5=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_11570,a[2]=((C_word*)t0)[4],a[3]=t4,tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 368  keyword?");
t6=C_retrieve(lf[13]);
((C_proc3)C_retrieve_proc(t6))(3,t6,t5,((C_word*)((C_word*)t0)[4])[1]);}

/* k11568 in k11553 in k11435 in k11432 in make-heap in k7924 in k7921 in k5905 in k5612 in k5609 in k5605 in k5314 in k5311 in k5308 in k5305 */
static void C_ccall f_11570(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
if(C_truep(t1)){
C_trace("ChickenBridge.scm: 368  error");
t2=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t2))(4,t2,((C_word*)t0)[3],lf[14],((C_word*)((C_word*)t0)[2])[1]);}
else{
t2=((C_word*)t0)[3];
f_11562(2,t2,C_SCHEME_UNDEFINED);}}

/* k11560 in k11553 in k11435 in k11432 in make-heap in k7924 in k7921 in k5905 in k5612 in k5609 in k5605 in k5314 in k5311 in k5308 in k5305 */
static void C_ccall f_11562(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word *a;
t2=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[3])[1]);
t4=C_mutate(((C_word *)((C_word*)t0)[3])+1,t3);
t5=((C_word*)t0)[2];
f_11440(t5,t4);}

/* k11524 in k11435 in k11432 in make-heap in k7924 in k7921 in k5905 in k5612 in k5609 in k5605 in k5314 in k5311 in k5308 in k5305 */
static void C_ccall f_11526(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_11526,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_11530,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("ChickenBridge.scm: 368  error");
t4=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[21],((C_word*)t0)[2]);}
else{
t4=t2;
f_11530(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k11528 in k11524 in k11435 in k11432 in make-heap in k7924 in k7921 in k5905 in k5612 in k5609 in k5605 in k5314 in k5311 in k5308 in k5305 */
static void C_ccall f_11530(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_11440(t7,t6);}

/* k11489 in k11435 in k11432 in make-heap in k7924 in k7921 in k5905 in k5612 in k5609 in k5605 in k5314 in k5311 in k5308 in k5305 */
static void C_ccall f_11491(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_11491,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_11495,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("ChickenBridge.scm: 368  error");
t4=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[21],((C_word*)t0)[2]);}
else{
t4=t2;
f_11495(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k11493 in k11489 in k11435 in k11432 in make-heap in k7924 in k7921 in k5905 in k5612 in k5609 in k5605 in k5314 in k5311 in k5308 in k5305 */
static void C_ccall f_11495(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_11440(t7,t6);}

/* k11438 in k11435 in k11432 in make-heap in k7924 in k7921 in k5905 in k5612 in k5609 in k5605 in k5314 in k5311 in k5308 in k5305 */
static void C_fcall f_11440(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[6],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_11440,NULL,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_11443,a[2]=((C_word*)t0)[4],a[3]=((C_word*)t0)[5],a[4]=((C_word*)t0)[6],a[5]=((C_word*)t0)[7],tmp=(C_word)a,a+=6,tmp);
if(C_truep((C_word)C_i_nullp(((C_word*)((C_word*)t0)[3])[1]))){
t3=t2;
f_11443(2,t3,C_SCHEME_UNDEFINED);}
else{
C_trace("ChickenBridge.scm: 368  error");
t3=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t3))(4,t3,t2,lf[5],((C_word*)t0)[2]);}}

/* k11441 in k11438 in k11435 in k11432 in make-heap in k7924 in k7921 in k5905 in k5612 in k5609 in k5605 in k5314 in k5311 in k5308 in k5305 */
static void C_ccall f_11443(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[6],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_11443,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_11446,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],tmp=(C_word)a,a+=6,tmp);
C_trace("ChickenBridge.scm: 368  %alloc-pattern");
f_9224(t2);}

/* k11444 in k11441 in k11438 in k11435 in k11432 in make-heap in k7924 in k7921 in k5905 in k5612 in k5609 in k5605 in k5314 in k5311 in k5308 in k5305 */
static void C_ccall f_11446(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[10],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_11446,2,t0,t1);}
t2=(C_word)C_i_length(((C_word*)((C_word*)t0)[5])[1]);
t3=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_11452,a[2]=t1,a[3]=((C_word*)t0)[4],tmp=(C_word)a,a+=4,tmp);
t4=(C_word)C_a_i_list(&a,1,((C_word*)((C_word*)t0)[5])[1]);
t5=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_11458,a[2]=((C_word)li151),tmp=(C_word)a,a+=3,tmp);
C_trace("ChickenBridge.scm: 368  initialize-pattern");
f_9234(t3,t1,t4,((C_word*)((C_word*)t0)[3])[1],((C_word*)((C_word*)t0)[2])[1],C_fix(0),t2,t2,C_retrieve2(lf[229],"next-in-heap"),t5);}

/* a11457 in k11444 in k11441 in k11438 in k11435 in k11432 in make-heap in k7924 in k7921 in k5905 in k5612 in k5609 in k5605 in k5314 in k5311 in k5308 in k5305 */
static void C_ccall f_11458(C_word c,C_word t0,C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word ab[4],*a=ab;
if(c!=4) C_bad_argc_2(c,4,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr4,(void*)f_11458,4,t0,t1,t2,t3);}
t4=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_11470,a[2]=t2,a[3]=t1,tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 368  pattern-data");
f_8953(t4,t3);}

/* k11468 in a11457 in k11444 in k11441 in k11438 in k11435 in k11432 in make-heap in k7924 in k7921 in k5905 in k5612 in k5609 in k5605 in k5314 in k5311 in k5308 in k5305 */
static void C_ccall f_11470(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word *a;
t2=(C_word)C_i_car(t1);
C_trace("for-each");
t3=*((C_word*)lf[214]+1);
((C_proc4)(void*)(*((C_word*)t3+1)))(4,t3,((C_word*)t0)[3],((C_word*)t0)[2],t2);}

/* k11450 in k11444 in k11441 in k11438 in k11435 in k11432 in make-heap in k7924 in k7921 in k5905 in k5612 in k5609 in k5605 in k5314 in k5311 in k5308 in k5305 */
static void C_ccall f_11452(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
t2=((C_word*)t0)[3];
((C_proc2)(void*)(*((C_word*)t2+1)))(2,t2,((C_word*)t0)[2]);}

/* next-in-line in k7924 in k7921 in k5905 in k5612 in k5609 in k5605 in k5314 in k5311 in k5308 in k5305 */
static void C_ccall f_11394(C_word c,C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word ab[4],*a=ab;
if(c!=3) C_bad_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr3,(void*)f_11394,3,t0,t1,t2);}
t3=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_11398,a[2]=t2,a[3]=t1,tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 368  pattern-data");
f_8953(t3,t2);}

/* k11396 in next-in-line in k7924 in k7921 in k5905 in k5612 in k5609 in k5605 in k5314 in k5311 in k5308 in k5305 */
static void C_ccall f_11398(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word ab[11],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_11398,2,t0,t1);}
t2=(C_word)C_i_cdr(t1);
if(C_truep((C_word)C_i_nullp(t2))){
t3=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_11407,a[2]=t1,a[3]=((C_word*)t0)[3],tmp=(C_word)a,a+=4,tmp);
t4=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_11414,a[2]=t3,tmp=(C_word)a,a+=3,tmp);
C_trace("ChickenBridge.scm: 368  pattern-period");
f_9007(t4,((C_word*)t0)[2]);}
else{
t3=(C_word)C_i_car(t1);
t4=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_11420,a[2]=t3,a[3]=((C_word*)t0)[3],tmp=(C_word)a,a+=4,tmp);
t5=(C_word)C_i_cdr(t1);
C_trace("ChickenBridge.scm: 368  pattern-data-set!");
f_8944(t4,((C_word*)t0)[2],t5);}}

/* k11418 in k11396 in next-in-line in k7924 in k7921 in k5905 in k5612 in k5609 in k5605 in k5314 in k5311 in k5308 in k5305 */
static void C_ccall f_11420(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
t2=((C_word*)t0)[3];
((C_proc2)(void*)(*((C_word*)t2+1)))(2,t2,((C_word*)t0)[2]);}

/* k11412 in k11396 in next-in-line in k7924 in k7921 in k5905 in k5612 in k5609 in k5605 in k5314 in k5311 in k5308 in k5305 */
static void C_ccall f_11414(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 368  period-count-set!");
f_8776(((C_word*)t0)[2],t1,C_fix(1));}

/* k11405 in k11396 in next-in-line in k7924 in k7921 in k5905 in k5612 in k5609 in k5605 in k5314 in k5311 in k5308 in k5305 */
static void C_ccall f_11407(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
t2=((C_word*)t0)[3];
((C_proc2)(void*)(*((C_word*)t2+1)))(2,t2,(C_word)C_i_car(((C_word*)t0)[2]));}

/* make-line in k7924 in k7921 in k5905 in k5612 in k5609 in k5605 in k5314 in k5311 in k5308 in k5305 */
static void C_ccall f_11147(C_word c,C_word t0,C_word t1,C_word t2,...){
C_word tmp;
C_word t3;
va_list v;
C_word *a,c2=c;
C_save_rest(t2,c2,3);
if(c<3) C_bad_min_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_demand(c*C_SIZEOF_PAIR+10)){
C_save_and_reclaim((void*)tr3r,(void*)f_11147r,3,t0,t1,t2);}
else{
a=C_alloc((c-3)*3);
t3=C_restore_rest(a,C_rest_count(0));
f_11147r(t0,t1,t2,t3);}}

static void C_ccall f_11147r(C_word t0,C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word *a=C_alloc(10);
t4=(*a=C_VECTOR_TYPE|1,a[1]=t2,tmp=(C_word)a,a+=2,tmp);
t5=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_11151,a[2]=t1,a[3]=t4,a[4]=t3,tmp=(C_word)a,a+=5,tmp);
if(C_truep((C_word)C_i_pairp(((C_word*)t4)[1]))){
t6=t5;
f_11151(t6,C_SCHEME_UNDEFINED);}
else{
t6=(C_word)C_a_i_list(&a,1,((C_word*)t4)[1]);
t7=C_set_block_item(t4,0,t6);
t8=t5;
f_11151(t8,t7);}}

/* k11149 in make-line in k7924 in k7921 in k5905 in k5612 in k5609 in k5605 in k5314 in k5311 in k5308 in k5305 */
static void C_fcall f_11151(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word t14;
C_word t15;
C_word t16;
C_word t17;
C_word t18;
C_word t19;
C_word t20;
C_word t21;
C_word ab[45],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_11151,NULL,2,t0,t1);}
t2=C_SCHEME_FALSE;
t3=(*a=C_VECTOR_TYPE|1,a[1]=t2,tmp=(C_word)a,a+=2,tmp);
t4=C_SCHEME_FALSE;
t5=(*a=C_VECTOR_TYPE|1,a[1]=t4,tmp=(C_word)a,a+=2,tmp);
t6=C_SCHEME_FALSE;
t7=(*a=C_VECTOR_TYPE|1,a[1]=t6,tmp=(C_word)a,a+=2,tmp);
t8=C_SCHEME_FALSE;
t9=(*a=C_VECTOR_TYPE|1,a[1]=t8,tmp=(C_word)a,a+=2,tmp);
t10=((C_word*)t0)[4];
t11=(*a=C_VECTOR_TYPE|1,a[1]=t10,tmp=(C_word)a,a+=2,tmp);
t12=C_SCHEME_FALSE;
t13=(*a=C_VECTOR_TYPE|1,a[1]=t12,tmp=(C_word)a,a+=2,tmp);
t14=(*a=C_CLOSURE_TYPE|10,a[1]=(C_word)f_11154,a[2]=t9,a[3]=t13,a[4]=t7,a[5]=((C_word*)t0)[4],a[6]=t11,a[7]=t5,a[8]=t3,a[9]=((C_word*)t0)[2],a[10]=((C_word*)t0)[3],tmp=(C_word)a,a+=11,tmp);
if(C_truep((C_word)C_i_nullp(((C_word*)t11)[1]))){
t15=t14;
f_11154(t15,C_SCHEME_UNDEFINED);}
else{
t15=(C_word)C_i_car(((C_word*)t11)[1]);
t16=(C_word)C_eqp(t15,lf[216]);
if(C_truep(t16)){
t17=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_11300,a[2]=((C_word*)t0)[4],a[3]=t14,a[4]=t11,a[5]=t13,a[6]=t7,a[7]=t3,tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)t7)[1])){
C_trace("ChickenBridge.scm: 368  error");
t18=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t18))(4,t18,t17,lf[19],lf[216]);}
else{
t18=t17;
f_11300(2,t18,C_SCHEME_UNDEFINED);}}
else{
t17=(C_word)C_eqp(t15,lf[217]);
if(C_truep(t17)){
t18=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_11335,a[2]=((C_word*)t0)[4],a[3]=t14,a[4]=t11,a[5]=t13,a[6]=t9,a[7]=t5,tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)t9)[1])){
C_trace("ChickenBridge.scm: 368  error");
t19=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t19))(4,t19,t18,lf[19],lf[217]);}
else{
t19=t18;
f_11335(2,t19,C_SCHEME_UNDEFINED);}}
else{
t18=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_11364,a[2]=t14,a[3]=t7,a[4]=t3,a[5]=t11,tmp=(C_word)a,a+=6,tmp);
if(C_truep(((C_word*)t13)[1])){
C_trace("ChickenBridge.scm: 368  error");
t19=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t19))(4,t19,t18,lf[10],((C_word*)t0)[4]);}
else{
t19=t18;
f_11364(2,t19,C_SCHEME_UNDEFINED);}}}}}

/* k11362 in k11149 in make-line in k7924 in k7921 in k5905 in k5612 in k5609 in k5605 in k5314 in k5311 in k5308 in k5305 */
static void C_ccall f_11364(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_11364,2,t0,t1);}
t2=(C_word)C_i_car(((C_word*)((C_word*)t0)[5])[1]);
t3=C_mutate(((C_word *)((C_word*)t0)[4])+1,t2);
t4=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_11371,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[5],a[4]=((C_word*)t0)[3],tmp=(C_word)a,a+=5,tmp);
t5=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_11379,a[2]=((C_word*)t0)[4],a[3]=t4,tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 368  keyword?");
t6=C_retrieve(lf[13]);
((C_proc3)C_retrieve_proc(t6))(3,t6,t5,((C_word*)((C_word*)t0)[4])[1]);}

/* k11377 in k11362 in k11149 in make-line in k7924 in k7921 in k5905 in k5612 in k5609 in k5605 in k5314 in k5311 in k5308 in k5305 */
static void C_ccall f_11379(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
if(C_truep(t1)){
C_trace("ChickenBridge.scm: 368  error");
t2=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t2))(4,t2,((C_word*)t0)[3],lf[14],((C_word*)((C_word*)t0)[2])[1]);}
else{
t2=((C_word*)t0)[3];
f_11371(2,t2,C_SCHEME_UNDEFINED);}}

/* k11369 in k11362 in k11149 in make-line in k7924 in k7921 in k5905 in k5612 in k5609 in k5605 in k5314 in k5311 in k5308 in k5305 */
static void C_ccall f_11371(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word *a;
t2=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[3])[1]);
t4=C_mutate(((C_word *)((C_word*)t0)[3])+1,t3);
t5=((C_word*)t0)[2];
f_11154(t5,t4);}

/* k11333 in k11149 in make-line in k7924 in k7921 in k5905 in k5612 in k5609 in k5605 in k5314 in k5311 in k5308 in k5305 */
static void C_ccall f_11335(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_11335,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_11339,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("ChickenBridge.scm: 368  error");
t4=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[21],((C_word*)t0)[2]);}
else{
t4=t2;
f_11339(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k11337 in k11333 in k11149 in make-line in k7924 in k7921 in k5905 in k5612 in k5609 in k5605 in k5314 in k5311 in k5308 in k5305 */
static void C_ccall f_11339(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_11154(t7,t6);}

/* k11298 in k11149 in make-line in k7924 in k7921 in k5905 in k5612 in k5609 in k5605 in k5314 in k5311 in k5308 in k5305 */
static void C_ccall f_11300(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_11300,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_11304,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("ChickenBridge.scm: 368  error");
t4=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[21],((C_word*)t0)[2]);}
else{
t4=t2;
f_11304(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k11302 in k11298 in k11149 in make-line in k7924 in k7921 in k5905 in k5612 in k5609 in k5605 in k5314 in k5311 in k5308 in k5305 */
static void C_ccall f_11304(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_11154(t7,t6);}

/* k11152 in k11149 in make-line in k7924 in k7921 in k5905 in k5612 in k5609 in k5605 in k5314 in k5311 in k5308 in k5305 */
static void C_fcall f_11154(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word ab[30],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_11154,NULL,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_11157,a[2]=((C_word*)t0)[5],a[3]=((C_word*)t0)[6],a[4]=((C_word*)t0)[7],a[5]=((C_word*)t0)[8],a[6]=((C_word*)t0)[9],a[7]=((C_word*)t0)[10],tmp=(C_word)a,a+=8,tmp);
if(C_truep((C_word)C_i_nullp(((C_word*)((C_word*)t0)[6])[1]))){
t3=t2;
f_11157(t3,C_SCHEME_UNDEFINED);}
else{
t3=(C_word)C_i_car(((C_word*)((C_word*)t0)[6])[1]);
t4=(C_word)C_eqp(t3,lf[216]);
if(C_truep(t4)){
t5=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_11200,a[2]=((C_word*)t0)[5],a[3]=t2,a[4]=((C_word*)t0)[6],a[5]=((C_word*)t0)[3],a[6]=((C_word*)t0)[4],a[7]=((C_word*)t0)[8],tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)((C_word*)t0)[4])[1])){
C_trace("ChickenBridge.scm: 368  error");
t6=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t6))(4,t6,t5,lf[19],lf[216]);}
else{
t6=t5;
f_11200(2,t6,C_SCHEME_UNDEFINED);}}
else{
t5=(C_word)C_eqp(t3,lf[217]);
if(C_truep(t5)){
t6=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_11235,a[2]=((C_word*)t0)[5],a[3]=t2,a[4]=((C_word*)t0)[6],a[5]=((C_word*)t0)[3],a[6]=((C_word*)t0)[2],a[7]=((C_word*)t0)[7],tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)((C_word*)t0)[2])[1])){
C_trace("ChickenBridge.scm: 368  error");
t7=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t7))(4,t7,t6,lf[19],lf[217]);}
else{
t7=t6;
f_11235(2,t7,C_SCHEME_UNDEFINED);}}
else{
t6=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_11264,a[2]=t2,a[3]=((C_word*)t0)[2],a[4]=((C_word*)t0)[7],a[5]=((C_word*)t0)[6],tmp=(C_word)a,a+=6,tmp);
if(C_truep(((C_word*)((C_word*)t0)[3])[1])){
C_trace("ChickenBridge.scm: 368  error");
t7=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t7))(4,t7,t6,lf[10],((C_word*)t0)[5]);}
else{
t7=t6;
f_11264(2,t7,C_SCHEME_UNDEFINED);}}}}}

/* k11262 in k11152 in k11149 in make-line in k7924 in k7921 in k5905 in k5612 in k5609 in k5605 in k5314 in k5311 in k5308 in k5305 */
static void C_ccall f_11264(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_11264,2,t0,t1);}
t2=(C_word)C_i_car(((C_word*)((C_word*)t0)[5])[1]);
t3=C_mutate(((C_word *)((C_word*)t0)[4])+1,t2);
t4=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_11271,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[5],a[4]=((C_word*)t0)[3],tmp=(C_word)a,a+=5,tmp);
t5=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_11279,a[2]=((C_word*)t0)[4],a[3]=t4,tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 368  keyword?");
t6=C_retrieve(lf[13]);
((C_proc3)C_retrieve_proc(t6))(3,t6,t5,((C_word*)((C_word*)t0)[4])[1]);}

/* k11277 in k11262 in k11152 in k11149 in make-line in k7924 in k7921 in k5905 in k5612 in k5609 in k5605 in k5314 in k5311 in k5308 in k5305 */
static void C_ccall f_11279(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
if(C_truep(t1)){
C_trace("ChickenBridge.scm: 368  error");
t2=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t2))(4,t2,((C_word*)t0)[3],lf[14],((C_word*)((C_word*)t0)[2])[1]);}
else{
t2=((C_word*)t0)[3];
f_11271(2,t2,C_SCHEME_UNDEFINED);}}

/* k11269 in k11262 in k11152 in k11149 in make-line in k7924 in k7921 in k5905 in k5612 in k5609 in k5605 in k5314 in k5311 in k5308 in k5305 */
static void C_ccall f_11271(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word *a;
t2=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[3])[1]);
t4=C_mutate(((C_word *)((C_word*)t0)[3])+1,t3);
t5=((C_word*)t0)[2];
f_11157(t5,t4);}

/* k11233 in k11152 in k11149 in make-line in k7924 in k7921 in k5905 in k5612 in k5609 in k5605 in k5314 in k5311 in k5308 in k5305 */
static void C_ccall f_11235(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_11235,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_11239,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("ChickenBridge.scm: 368  error");
t4=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[21],((C_word*)t0)[2]);}
else{
t4=t2;
f_11239(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k11237 in k11233 in k11152 in k11149 in make-line in k7924 in k7921 in k5905 in k5612 in k5609 in k5605 in k5314 in k5311 in k5308 in k5305 */
static void C_ccall f_11239(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_11157(t7,t6);}

/* k11198 in k11152 in k11149 in make-line in k7924 in k7921 in k5905 in k5612 in k5609 in k5605 in k5314 in k5311 in k5308 in k5305 */
static void C_ccall f_11200(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_11200,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_11204,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("ChickenBridge.scm: 368  error");
t4=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[21],((C_word*)t0)[2]);}
else{
t4=t2;
f_11204(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k11202 in k11198 in k11152 in k11149 in make-line in k7924 in k7921 in k5905 in k5612 in k5609 in k5605 in k5314 in k5311 in k5308 in k5305 */
static void C_ccall f_11204(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_11157(t7,t6);}

/* k11155 in k11152 in k11149 in make-line in k7924 in k7921 in k5905 in k5612 in k5609 in k5605 in k5314 in k5311 in k5308 in k5305 */
static void C_fcall f_11157(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[6],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_11157,NULL,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_11160,a[2]=((C_word*)t0)[4],a[3]=((C_word*)t0)[5],a[4]=((C_word*)t0)[6],a[5]=((C_word*)t0)[7],tmp=(C_word)a,a+=6,tmp);
if(C_truep((C_word)C_i_nullp(((C_word*)((C_word*)t0)[3])[1]))){
t3=t2;
f_11160(2,t3,C_SCHEME_UNDEFINED);}
else{
C_trace("ChickenBridge.scm: 368  error");
t3=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t3))(4,t3,t2,lf[5],((C_word*)t0)[2]);}}

/* k11158 in k11155 in k11152 in k11149 in make-line in k7924 in k7921 in k5905 in k5612 in k5609 in k5605 in k5314 in k5311 in k5308 in k5305 */
static void C_ccall f_11160(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[6],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_11160,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_11163,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],tmp=(C_word)a,a+=6,tmp);
C_trace("ChickenBridge.scm: 368  %alloc-pattern");
f_9224(t2);}

/* k11161 in k11158 in k11155 in k11152 in k11149 in make-line in k7924 in k7921 in k5905 in k5612 in k5609 in k5605 in k5314 in k5311 in k5308 in k5305 */
static void C_ccall f_11163(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_11163,2,t0,t1);}
t2=(C_word)C_i_length(((C_word*)((C_word*)t0)[5])[1]);
t3=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_11169,a[2]=t1,a[3]=((C_word*)t0)[4],tmp=(C_word)a,a+=4,tmp);
t4=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_11171,a[2]=((C_word)li148),tmp=(C_word)a,a+=3,tmp);
C_trace("ChickenBridge.scm: 368  initialize-pattern");
f_9234(t3,t1,((C_word*)((C_word*)t0)[5])[1],((C_word*)((C_word*)t0)[3])[1],((C_word*)((C_word*)t0)[2])[1],C_fix(0),t2,t2,C_retrieve2(lf[227],"next-in-line"),t4);}

/* a11170 in k11161 in k11158 in k11155 in k11152 in k11149 in make-line in k7924 in k7921 in k5905 in k5612 in k5609 in k5605 in k5314 in k5311 in k5308 in k5305 */
static void C_ccall f_11171(C_word c,C_word t0,C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word ab[4],*a=ab;
if(c!=4) C_bad_argc_2(c,4,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr4,(void*)f_11171,4,t0,t1,t2,t3);}
t4=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_11179,a[2]=t2,a[3]=t1,tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 368  pattern-data");
f_8953(t4,t3);}

/* k11177 in a11170 in k11161 in k11158 in k11155 in k11152 in k11149 in make-line in k7924 in k7921 in k5905 in k5612 in k5609 in k5605 in k5314 in k5311 in k5308 in k5305 */
static void C_ccall f_11179(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("for-each");
t2=*((C_word*)lf[214]+1);
((C_proc4)(void*)(*((C_word*)t2+1)))(4,t2,((C_word*)t0)[3],((C_word*)t0)[2],t1);}

/* k11167 in k11161 in k11158 in k11155 in k11152 in k11149 in make-line in k7924 in k7921 in k5905 in k5612 in k5609 in k5605 in k5314 in k5311 in k5308 in k5305 */
static void C_ccall f_11169(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
t2=((C_word*)t0)[3];
((C_proc2)(void*)(*((C_word*)t2+1)))(2,t2,((C_word*)t0)[2]);}

/* next-in-palindrome in k7924 in k7921 in k5905 in k5612 in k5609 in k5605 in k5314 in k5311 in k5308 in k5305 */
static void C_ccall f_10932(C_word c,C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word ab[4],*a=ab;
if(c!=3) C_bad_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr3,(void*)f_10932,3,t0,t1,t2);}
t3=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_10936,a[2]=t2,a[3]=t1,tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 368  pattern-cache");
f_9169(t3,t2);}

/* k10934 in next-in-palindrome in k7924 in k7921 in k5905 in k5612 in k5609 in k5605 in k5314 in k5311 in k5308 in k5305 */
static void C_ccall f_10936(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word ab[19],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_10936,2,t0,t1);}
t2=t1;
t3=(C_word)C_i_check_structure(t2,lf[219]);
t4=(C_word)C_i_block_ref(t2,C_fix(1));
t5=t4;
t6=(*a=C_VECTOR_TYPE|1,a[1]=t5,tmp=(C_word)a,a+=2,tmp);
t7=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_10942,a[2]=t1,a[3]=((C_word*)t0)[2],a[4]=t6,a[5]=((C_word*)t0)[3],tmp=(C_word)a,a+=6,tmp);
if(C_truep((C_word)C_i_lessp(((C_word*)t6)[1],C_fix(0)))){
t8=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_10966,a[2]=t1,a[3]=((C_word*)t0)[2],a[4]=t7,a[5]=t6,tmp=(C_word)a,a+=6,tmp);
t9=t1;
t10=(C_word)C_i_check_structure(t9,lf[219]);
t11=(C_word)C_i_block_ref(t9,C_fix(5));
C_trace("ChickenBridge.scm: 368  next-1");
f_9575(t8,t11);}
else{
t8=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_11145,a[2]=t7,a[3]=t1,a[4]=t6,tmp=(C_word)a,a+=5,tmp);
C_trace("ChickenBridge.scm: 368  palin-len");
f_10373(t8,t1);}}

/* k11143 in k10934 in next-in-palindrome in k7924 in k7921 in k5905 in k5612 in k5609 in k5605 in k5314 in k5311 in k5308 in k5305 */
static void C_ccall f_11145(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[5],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_11145,2,t0,t1);}
if(C_truep((C_word)C_i_nequalp(((C_word*)((C_word*)t0)[4])[1],t1))){
t2=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_11098,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[3],tmp=(C_word)a,a+=5,tmp);
C_trace("ChickenBridge.scm: 368  palin-inc-set!");
f_10382(t2,((C_word*)t0)[3],C_fix(-1));}
else{
t2=((C_word*)t0)[2];
f_10942(2,t2,C_SCHEME_UNDEFINED);}}

/* k11096 in k11143 in k10934 in next-in-palindrome in k7924 in k7921 in k5905 in k5612 in k5609 in k5605 in k5314 in k5311 in k5308 in k5305 */
static void C_ccall f_11098(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word ab[4],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_11098,2,t0,t1);}
t2=((C_word*)t0)[4];
t3=(C_word)C_i_check_structure(t2,lf[219]);
t4=(C_word)C_i_block_ref(t2,C_fix(4));
t5=(C_word)C_eqp(t4,C_SCHEME_TRUE);
t6=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_11110,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],tmp=(C_word)a,a+=4,tmp);
if(C_truep(t5)){
t7=t6;
f_11110(t7,t5);}
else{
if(C_truep((C_word)C_i_pairp(t4))){
t7=(C_word)C_i_cdr(t4);
if(C_truep((C_word)C_i_pairp(t7))){
t8=(C_word)C_i_cadr(t4);
t9=t6;
f_11110(t9,(C_word)C_eqp(t8,C_SCHEME_TRUE));}
else{
t8=t6;
f_11110(t8,C_SCHEME_FALSE);}}
else{
t7=t6;
f_11110(t7,C_SCHEME_FALSE);}}}

/* k11108 in k11096 in k11143 in k10934 in next-in-palindrome in k7924 in k7921 in k5905 in k5612 in k5609 in k5605 in k5314 in k5311 in k5308 in k5305 */
static void C_fcall f_11110(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[8],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_11110,NULL,2,t0,t1);}
if(C_truep(t1)){
t2=(C_word)C_a_i_minus(&a,2,((C_word*)((C_word*)t0)[3])[1],C_fix(2));
t3=C_mutate(((C_word *)((C_word*)t0)[3])+1,t2);
t4=((C_word*)t0)[2];
f_10942(2,t4,t3);}
else{
t2=(C_word)C_a_i_minus(&a,2,((C_word*)((C_word*)t0)[3])[1],C_fix(1));
t3=C_mutate(((C_word *)((C_word*)t0)[3])+1,t2);
t4=((C_word*)t0)[2];
f_10942(2,t4,t3);}}

/* k10964 in k10934 in next-in-palindrome in k7924 in k7921 in k5905 in k5612 in k5609 in k5605 in k5314 in k5311 in k5308 in k5305 */
static void C_ccall f_10966(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_10966,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_10969,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=t1,a[6]=((C_word*)t0)[5],tmp=(C_word)a,a+=7,tmp);
C_trace("ChickenBridge.scm: 368  palin-len");
f_10373(t2,((C_word*)t0)[2]);}

/* k10967 in k10964 in k10934 in next-in-palindrome in k7924 in k7921 in k5905 in k5612 in k5609 in k5605 in k5314 in k5311 in k5308 in k5305 */
static void C_ccall f_10969(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_10969,2,t0,t1);}
t2=(C_word)C_i_nequalp(((C_word*)((C_word*)t0)[6])[1],C_fix(-2));
t3=(*a=C_CLOSURE_TYPE|8,a[1]=(C_word)f_10975,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[6],a[4]=((C_word*)t0)[3],a[5]=t2,a[6]=((C_word*)t0)[4],a[7]=((C_word*)t0)[5],a[8]=t1,tmp=(C_word)a,a+=9,tmp);
t4=((C_word*)t0)[2];
t5=((C_word*)t0)[5];
t6=(C_word)C_i_check_structure(t4,lf[219]);
C_trace("ChickenBridge.scm: 368  ##sys#block-set!");
t7=*((C_word*)lf[168]+1);
((C_proc5)(void*)(*((C_word*)t7+1)))(5,t7,t3,t4,C_fix(4),t5);}

/* k10973 in k10967 in k10964 in k10934 in next-in-palindrome in k7924 in k7921 in k5905 in k5612 in k5609 in k5605 in k5314 in k5311 in k5308 in k5305 */
static void C_ccall f_10975(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[8],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_10975,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_10978,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],a[7]=((C_word*)t0)[8],tmp=(C_word)a,a+=8,tmp);
C_trace("ChickenBridge.scm: 368  palin-inc-set!");
f_10382(t2,((C_word*)t0)[2],C_fix(1));}

/* k10976 in k10973 in k10967 in k10964 in k10934 in next-in-palindrome in k7924 in k7921 in k5905 in k5612 in k5609 in k5605 in k5314 in k5311 in k5308 in k5305 */
static void C_ccall f_10978(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[12],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_10978,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_10981,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_eqp(((C_word*)t0)[6],C_SCHEME_TRUE);
t4=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_11066,a[2]=t2,a[3]=((C_word*)t0)[2],a[4]=((C_word*)t0)[4],tmp=(C_word)a,a+=5,tmp);
if(C_truep(t3)){
t5=t4;
f_11066(t5,t3);}
else{
if(C_truep((C_word)C_i_pairp(((C_word*)t0)[6]))){
t5=(C_word)C_i_car(((C_word*)t0)[6]);
t6=t4;
f_11066(t6,(C_word)C_eqp(t5,C_SCHEME_TRUE));}
else{
t5=t4;
f_11066(t5,C_SCHEME_FALSE);}}}

/* k11064 in k10976 in k10973 in k10967 in k10964 in k10934 in next-in-palindrome in k7924 in k7921 in k5905 in k5612 in k5609 in k5605 in k5314 in k5311 in k5308 in k5305 */
static void C_fcall f_11066(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word *a;
if(C_truep(t1)){
if(C_truep(((C_word*)t0)[4])){
t2=C_set_block_item(((C_word*)t0)[3],0,C_fix(0));
t3=((C_word*)t0)[2];
f_10981(t3,t2);}
else{
t2=C_set_block_item(((C_word*)t0)[3],0,C_fix(1));
t3=((C_word*)t0)[2];
f_10981(t3,t2);}}
else{
t2=C_set_block_item(((C_word*)t0)[3],0,C_fix(0));
t3=((C_word*)t0)[2];
f_10981(t3,t2);}}

/* k10979 in k10976 in k10973 in k10967 in k10964 in k10934 in next-in-palindrome in k7924 in k7921 in k5905 in k5612 in k5609 in k5605 in k5314 in k5311 in k5308 in k5305 */
static void C_fcall f_10981(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[10],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_10981,NULL,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_10987,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],tmp=(C_word)a,a+=7,tmp);
t3=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_11060,a[2]=t2,tmp=(C_word)a,a+=3,tmp);
C_trace("ChickenBridge.scm: 368  pattern-flags");
f_8935(t3,((C_word*)t0)[2]);}

/* k11058 in k10979 in k10976 in k10973 in k10967 in k10964 in k10934 in next-in-palindrome in k7924 in k7921 in k5905 in k5612 in k5609 in k5605 in k5314 in k5311 in k5308 in k5305 */
static void C_ccall f_11060(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 368  bitwise-test");
f_6299(((C_word*)t0)[2],t1,C_fix(2));}

/* k10985 in k10979 in k10976 in k10973 in k10967 in k10964 in k10934 in next-in-palindrome in k7924 in k7921 in k5905 in k5612 in k5609 in k5605 in k5314 in k5311 in k5308 in k5305 */
static void C_ccall f_10987(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[6],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_10987,2,t0,t1);}
if(C_truep(t1)){
t2=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_10990,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],tmp=(C_word)a,a+=6,tmp);
C_trace("ChickenBridge.scm: 368  pattern-period");
f_9007(t2,((C_word*)t0)[2]);}
else{
t2=((C_word*)t0)[4];
f_10942(2,t2,C_SCHEME_UNDEFINED);}}

/* k10988 in k10985 in k10979 in k10976 in k10973 in k10967 in k10964 in k10934 in next-in-palindrome in k7924 in k7921 in k5905 in k5612 in k5609 in k5605 in k5314 in k5311 in k5308 in k5305 */
static void C_ccall f_10990(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[24],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_10990,2,t0,t1);}
t2=(C_word)C_a_i_times(&a,2,((C_word*)t0)[5],C_fix(2));
switch(((C_word*)t0)[4]){
case C_SCHEME_FALSE:
C_trace("ChickenBridge.scm: 368  period-count-set!");
f_8776(((C_word*)t0)[3],t1,t2);
case C_SCHEME_TRUE:
t3=(C_truep(((C_word*)t0)[2])?(C_word)C_a_i_minus(&a,2,t2,C_fix(2)):(C_word)C_a_i_minus(&a,2,t2,C_fix(3)));
C_trace("ChickenBridge.scm: 368  period-count-set!");
f_8776(((C_word*)t0)[3],t1,t3);
default:
if(C_truep((C_word)C_i_equalp(((C_word*)t0)[4],lf[224]))){
t3=(C_word)C_a_i_minus(&a,2,t2,C_fix(1));
C_trace("ChickenBridge.scm: 368  period-count-set!");
f_8776(((C_word*)t0)[3],t1,t3);}
else{
if(C_truep((C_word)C_i_equalp(((C_word*)t0)[4],lf[225]))){
t3=(C_truep(((C_word*)t0)[2])?(C_word)C_a_i_minus(&a,2,t2,C_fix(1)):(C_word)C_a_i_minus(&a,2,t2,C_fix(2)));
C_trace("ChickenBridge.scm: 368  period-count-set!");
f_8776(((C_word*)t0)[3],t1,t3);}
else{
C_trace("ChickenBridge.scm: 368  period-count-set!");
f_8776(((C_word*)t0)[3],t1,t2);}}}}

/* k10940 in k10934 in next-in-palindrome in k7924 in k7921 in k5905 in k5612 in k5609 in k5605 in k5314 in k5311 in k5308 in k5305 */
static void C_ccall f_10942(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_10942,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_10945,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],tmp=(C_word)a,a+=5,tmp);
t3=((C_word*)t0)[2];
t4=(C_word)C_i_check_structure(t3,lf[219]);
t5=(C_word)C_i_block_ref(t3,C_fix(3));
t6=(C_word)C_a_i_plus(&a,2,((C_word*)((C_word*)t0)[4])[1],t5);
t7=((C_word*)t0)[2];
t8=(C_word)C_i_check_structure(t7,lf[219]);
C_trace("ChickenBridge.scm: 368  ##sys#block-set!");
t9=*((C_word*)lf[168]+1);
((C_proc5)(void*)(*((C_word*)t9+1)))(5,t9,t2,t7,C_fix(1),t6);}

/* k10943 in k10940 in k10934 in next-in-palindrome in k7924 in k7921 in k5905 in k5612 in k5609 in k5605 in k5314 in k5311 in k5308 in k5305 */
static void C_ccall f_10945(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[4],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_10945,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_10952,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 368  pattern-data");
f_8953(t2,((C_word*)t0)[2]);}

/* k10950 in k10943 in k10940 in k10934 in next-in-palindrome in k7924 in k7921 in k5905 in k5612 in k5609 in k5605 in k5314 in k5311 in k5308 in k5305 */
static void C_ccall f_10952(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
t2=((C_word*)t0)[3];
((C_proc2)(void*)(*((C_word*)t2+1)))(2,t2,(C_word)C_i_list_ref(t1,((C_word*)((C_word*)t0)[2])[1]));}

/* make-palindrome in k7924 in k7921 in k5905 in k5612 in k5609 in k5605 in k5314 in k5311 in k5308 in k5305 */
static void C_ccall f_10462(C_word c,C_word t0,C_word t1,C_word t2,...){
C_word tmp;
C_word t3;
va_list v;
C_word *a,c2=c;
C_save_rest(t2,c2,3);
if(c<3) C_bad_min_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_demand(c*C_SIZEOF_PAIR+10)){
C_save_and_reclaim((void*)tr3r,(void*)f_10462r,3,t0,t1,t2);}
else{
a=C_alloc((c-3)*3);
t3=C_restore_rest(a,C_rest_count(0));
f_10462r(t0,t1,t2,t3);}}

static void C_ccall f_10462r(C_word t0,C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word *a=C_alloc(10);
t4=(*a=C_VECTOR_TYPE|1,a[1]=t2,tmp=(C_word)a,a+=2,tmp);
t5=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_10466,a[2]=t1,a[3]=t4,a[4]=t3,tmp=(C_word)a,a+=5,tmp);
if(C_truep((C_word)C_i_pairp(((C_word*)t4)[1]))){
t6=t5;
f_10466(t6,C_SCHEME_UNDEFINED);}
else{
t6=(C_word)C_a_i_list(&a,1,((C_word*)t4)[1]);
t7=C_set_block_item(t4,0,t6);
t8=t5;
f_10466(t8,t7);}}

/* k10464 in make-palindrome in k7924 in k7921 in k5905 in k5612 in k5609 in k5605 in k5314 in k5311 in k5308 in k5305 */
static void C_fcall f_10466(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word t14;
C_word t15;
C_word t16;
C_word t17;
C_word t18;
C_word t19;
C_word t20;
C_word t21;
C_word t22;
C_word t23;
C_word t24;
C_word t25;
C_word t26;
C_word t27;
C_word ab[59],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_10466,NULL,2,t0,t1);}
t2=C_SCHEME_FALSE;
t3=(*a=C_VECTOR_TYPE|1,a[1]=t2,tmp=(C_word)a,a+=2,tmp);
t4=C_SCHEME_FALSE;
t5=(*a=C_VECTOR_TYPE|1,a[1]=t4,tmp=(C_word)a,a+=2,tmp);
t6=C_SCHEME_FALSE;
t7=(*a=C_VECTOR_TYPE|1,a[1]=t6,tmp=(C_word)a,a+=2,tmp);
t8=C_SCHEME_FALSE;
t9=(*a=C_VECTOR_TYPE|1,a[1]=t8,tmp=(C_word)a,a+=2,tmp);
t10=C_SCHEME_FALSE;
t11=(*a=C_VECTOR_TYPE|1,a[1]=t10,tmp=(C_word)a,a+=2,tmp);
t12=C_SCHEME_FALSE;
t13=(*a=C_VECTOR_TYPE|1,a[1]=t12,tmp=(C_word)a,a+=2,tmp);
t14=((C_word*)t0)[4];
t15=(*a=C_VECTOR_TYPE|1,a[1]=t14,tmp=(C_word)a,a+=2,tmp);
t16=C_SCHEME_FALSE;
t17=(*a=C_VECTOR_TYPE|1,a[1]=t16,tmp=(C_word)a,a+=2,tmp);
t18=(*a=C_CLOSURE_TYPE|12,a[1]=(C_word)f_10469,a[2]=t13,a[3]=t11,a[4]=t17,a[5]=t9,a[6]=((C_word*)t0)[4],a[7]=t15,a[8]=t5,a[9]=t3,a[10]=t7,a[11]=((C_word*)t0)[2],a[12]=((C_word*)t0)[3],tmp=(C_word)a,a+=13,tmp);
if(C_truep((C_word)C_i_nullp(((C_word*)t15)[1]))){
t19=t18;
f_10469(t19,C_SCHEME_UNDEFINED);}
else{
t19=(C_word)C_i_car(((C_word*)t15)[1]);
t20=(C_word)C_eqp(t19,lf[216]);
if(C_truep(t20)){
t21=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_10803,a[2]=((C_word*)t0)[4],a[3]=t18,a[4]=t15,a[5]=t17,a[6]=t9,a[7]=t3,tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)t9)[1])){
C_trace("ChickenBridge.scm: 368  error");
t22=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t22))(4,t22,t21,lf[19],lf[216]);}
else{
t22=t21;
f_10803(2,t22,C_SCHEME_UNDEFINED);}}
else{
t21=(C_word)C_eqp(t19,lf[217]);
if(C_truep(t21)){
t22=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_10838,a[2]=((C_word*)t0)[4],a[3]=t18,a[4]=t15,a[5]=t17,a[6]=t11,a[7]=t5,tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)t11)[1])){
C_trace("ChickenBridge.scm: 368  error");
t23=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t23))(4,t23,t22,lf[19],lf[217]);}
else{
t23=t22;
f_10838(2,t23,C_SCHEME_UNDEFINED);}}
else{
t22=(C_word)C_eqp(t19,lf[223]);
if(C_truep(t22)){
t23=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_10873,a[2]=((C_word*)t0)[4],a[3]=t18,a[4]=t15,a[5]=t17,a[6]=t13,a[7]=t7,tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)t13)[1])){
C_trace("ChickenBridge.scm: 368  error");
t24=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t24))(4,t24,t23,lf[19],lf[223]);}
else{
t24=t23;
f_10873(2,t24,C_SCHEME_UNDEFINED);}}
else{
t23=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_10902,a[2]=t18,a[3]=t9,a[4]=t3,a[5]=t15,tmp=(C_word)a,a+=6,tmp);
if(C_truep(((C_word*)t17)[1])){
C_trace("ChickenBridge.scm: 368  error");
t24=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t24))(4,t24,t23,lf[10],((C_word*)t0)[4]);}
else{
t24=t23;
f_10902(2,t24,C_SCHEME_UNDEFINED);}}}}}}

/* k10900 in k10464 in make-palindrome in k7924 in k7921 in k5905 in k5612 in k5609 in k5605 in k5314 in k5311 in k5308 in k5305 */
static void C_ccall f_10902(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_10902,2,t0,t1);}
t2=(C_word)C_i_car(((C_word*)((C_word*)t0)[5])[1]);
t3=C_mutate(((C_word *)((C_word*)t0)[4])+1,t2);
t4=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_10909,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[5],a[4]=((C_word*)t0)[3],tmp=(C_word)a,a+=5,tmp);
t5=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_10917,a[2]=((C_word*)t0)[4],a[3]=t4,tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 368  keyword?");
t6=C_retrieve(lf[13]);
((C_proc3)C_retrieve_proc(t6))(3,t6,t5,((C_word*)((C_word*)t0)[4])[1]);}

/* k10915 in k10900 in k10464 in make-palindrome in k7924 in k7921 in k5905 in k5612 in k5609 in k5605 in k5314 in k5311 in k5308 in k5305 */
static void C_ccall f_10917(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
if(C_truep(t1)){
C_trace("ChickenBridge.scm: 368  error");
t2=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t2))(4,t2,((C_word*)t0)[3],lf[14],((C_word*)((C_word*)t0)[2])[1]);}
else{
t2=((C_word*)t0)[3];
f_10909(2,t2,C_SCHEME_UNDEFINED);}}

/* k10907 in k10900 in k10464 in make-palindrome in k7924 in k7921 in k5905 in k5612 in k5609 in k5605 in k5314 in k5311 in k5308 in k5305 */
static void C_ccall f_10909(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word *a;
t2=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[3])[1]);
t4=C_mutate(((C_word *)((C_word*)t0)[3])+1,t3);
t5=((C_word*)t0)[2];
f_10469(t5,t4);}

/* k10871 in k10464 in make-palindrome in k7924 in k7921 in k5905 in k5612 in k5609 in k5605 in k5314 in k5311 in k5308 in k5305 */
static void C_ccall f_10873(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_10873,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_10877,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("ChickenBridge.scm: 368  error");
t4=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[21],((C_word*)t0)[2]);}
else{
t4=t2;
f_10877(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k10875 in k10871 in k10464 in make-palindrome in k7924 in k7921 in k5905 in k5612 in k5609 in k5605 in k5314 in k5311 in k5308 in k5305 */
static void C_ccall f_10877(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_10469(t7,t6);}

/* k10836 in k10464 in make-palindrome in k7924 in k7921 in k5905 in k5612 in k5609 in k5605 in k5314 in k5311 in k5308 in k5305 */
static void C_ccall f_10838(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_10838,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_10842,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("ChickenBridge.scm: 368  error");
t4=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[21],((C_word*)t0)[2]);}
else{
t4=t2;
f_10842(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k10840 in k10836 in k10464 in make-palindrome in k7924 in k7921 in k5905 in k5612 in k5609 in k5605 in k5314 in k5311 in k5308 in k5305 */
static void C_ccall f_10842(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_10469(t7,t6);}

/* k10801 in k10464 in make-palindrome in k7924 in k7921 in k5905 in k5612 in k5609 in k5605 in k5314 in k5311 in k5308 in k5305 */
static void C_ccall f_10803(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_10803,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_10807,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("ChickenBridge.scm: 368  error");
t4=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[21],((C_word*)t0)[2]);}
else{
t4=t2;
f_10807(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k10805 in k10801 in k10464 in make-palindrome in k7924 in k7921 in k5905 in k5612 in k5609 in k5605 in k5314 in k5311 in k5308 in k5305 */
static void C_ccall f_10807(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_10469(t7,t6);}

/* k10467 in k10464 in make-palindrome in k7924 in k7921 in k5905 in k5612 in k5609 in k5605 in k5314 in k5311 in k5308 in k5305 */
static void C_fcall f_10469(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word ab[43],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_10469,NULL,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|12,a[1]=(C_word)f_10472,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],a[7]=((C_word*)t0)[7],a[8]=((C_word*)t0)[8],a[9]=((C_word*)t0)[9],a[10]=((C_word*)t0)[10],a[11]=((C_word*)t0)[11],a[12]=((C_word*)t0)[12],tmp=(C_word)a,a+=13,tmp);
if(C_truep((C_word)C_i_nullp(((C_word*)((C_word*)t0)[7])[1]))){
t3=t2;
f_10472(t3,C_SCHEME_UNDEFINED);}
else{
t3=(C_word)C_i_car(((C_word*)((C_word*)t0)[7])[1]);
t4=(C_word)C_eqp(t3,lf[216]);
if(C_truep(t4)){
t5=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_10668,a[2]=((C_word*)t0)[6],a[3]=t2,a[4]=((C_word*)t0)[7],a[5]=((C_word*)t0)[4],a[6]=((C_word*)t0)[5],a[7]=((C_word*)t0)[9],tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)((C_word*)t0)[5])[1])){
C_trace("ChickenBridge.scm: 368  error");
t6=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t6))(4,t6,t5,lf[19],lf[216]);}
else{
t6=t5;
f_10668(2,t6,C_SCHEME_UNDEFINED);}}
else{
t5=(C_word)C_eqp(t3,lf[217]);
if(C_truep(t5)){
t6=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_10703,a[2]=((C_word*)t0)[6],a[3]=t2,a[4]=((C_word*)t0)[7],a[5]=((C_word*)t0)[4],a[6]=((C_word*)t0)[3],a[7]=((C_word*)t0)[8],tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)((C_word*)t0)[3])[1])){
C_trace("ChickenBridge.scm: 368  error");
t7=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t7))(4,t7,t6,lf[19],lf[217]);}
else{
t7=t6;
f_10703(2,t7,C_SCHEME_UNDEFINED);}}
else{
t6=(C_word)C_eqp(t3,lf[223]);
if(C_truep(t6)){
t7=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_10738,a[2]=((C_word*)t0)[6],a[3]=t2,a[4]=((C_word*)t0)[7],a[5]=((C_word*)t0)[4],a[6]=((C_word*)t0)[2],a[7]=((C_word*)t0)[10],tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)((C_word*)t0)[2])[1])){
C_trace("ChickenBridge.scm: 368  error");
t8=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t8))(4,t8,t7,lf[19],lf[223]);}
else{
t8=t7;
f_10738(2,t8,C_SCHEME_UNDEFINED);}}
else{
t7=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_10767,a[2]=t2,a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[8],a[5]=((C_word*)t0)[7],tmp=(C_word)a,a+=6,tmp);
if(C_truep(((C_word*)((C_word*)t0)[4])[1])){
C_trace("ChickenBridge.scm: 368  error");
t8=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t8))(4,t8,t7,lf[10],((C_word*)t0)[6]);}
else{
t8=t7;
f_10767(2,t8,C_SCHEME_UNDEFINED);}}}}}}

/* k10765 in k10467 in k10464 in make-palindrome in k7924 in k7921 in k5905 in k5612 in k5609 in k5605 in k5314 in k5311 in k5308 in k5305 */
static void C_ccall f_10767(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_10767,2,t0,t1);}
t2=(C_word)C_i_car(((C_word*)((C_word*)t0)[5])[1]);
t3=C_mutate(((C_word *)((C_word*)t0)[4])+1,t2);
t4=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_10774,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[5],a[4]=((C_word*)t0)[3],tmp=(C_word)a,a+=5,tmp);
t5=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_10782,a[2]=((C_word*)t0)[4],a[3]=t4,tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 368  keyword?");
t6=C_retrieve(lf[13]);
((C_proc3)C_retrieve_proc(t6))(3,t6,t5,((C_word*)((C_word*)t0)[4])[1]);}

/* k10780 in k10765 in k10467 in k10464 in make-palindrome in k7924 in k7921 in k5905 in k5612 in k5609 in k5605 in k5314 in k5311 in k5308 in k5305 */
static void C_ccall f_10782(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
if(C_truep(t1)){
C_trace("ChickenBridge.scm: 368  error");
t2=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t2))(4,t2,((C_word*)t0)[3],lf[14],((C_word*)((C_word*)t0)[2])[1]);}
else{
t2=((C_word*)t0)[3];
f_10774(2,t2,C_SCHEME_UNDEFINED);}}

/* k10772 in k10765 in k10467 in k10464 in make-palindrome in k7924 in k7921 in k5905 in k5612 in k5609 in k5605 in k5314 in k5311 in k5308 in k5305 */
static void C_ccall f_10774(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word *a;
t2=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[3])[1]);
t4=C_mutate(((C_word *)((C_word*)t0)[3])+1,t3);
t5=((C_word*)t0)[2];
f_10472(t5,t4);}

/* k10736 in k10467 in k10464 in make-palindrome in k7924 in k7921 in k5905 in k5612 in k5609 in k5605 in k5314 in k5311 in k5308 in k5305 */
static void C_ccall f_10738(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_10738,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_10742,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("ChickenBridge.scm: 368  error");
t4=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[21],((C_word*)t0)[2]);}
else{
t4=t2;
f_10742(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k10740 in k10736 in k10467 in k10464 in make-palindrome in k7924 in k7921 in k5905 in k5612 in k5609 in k5605 in k5314 in k5311 in k5308 in k5305 */
static void C_ccall f_10742(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_10472(t7,t6);}

/* k10701 in k10467 in k10464 in make-palindrome in k7924 in k7921 in k5905 in k5612 in k5609 in k5605 in k5314 in k5311 in k5308 in k5305 */
static void C_ccall f_10703(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_10703,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_10707,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("ChickenBridge.scm: 368  error");
t4=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[21],((C_word*)t0)[2]);}
else{
t4=t2;
f_10707(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k10705 in k10701 in k10467 in k10464 in make-palindrome in k7924 in k7921 in k5905 in k5612 in k5609 in k5605 in k5314 in k5311 in k5308 in k5305 */
static void C_ccall f_10707(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_10472(t7,t6);}

/* k10666 in k10467 in k10464 in make-palindrome in k7924 in k7921 in k5905 in k5612 in k5609 in k5605 in k5314 in k5311 in k5308 in k5305 */
static void C_ccall f_10668(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_10668,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_10672,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("ChickenBridge.scm: 368  error");
t4=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[21],((C_word*)t0)[2]);}
else{
t4=t2;
f_10672(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k10670 in k10666 in k10467 in k10464 in make-palindrome in k7924 in k7921 in k5905 in k5612 in k5609 in k5605 in k5314 in k5311 in k5308 in k5305 */
static void C_ccall f_10672(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_10472(t7,t6);}

/* k10470 in k10467 in k10464 in make-palindrome in k7924 in k7921 in k5905 in k5612 in k5609 in k5605 in k5314 in k5311 in k5308 in k5305 */
static void C_fcall f_10472(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word ab[39],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_10472,NULL,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|8,a[1]=(C_word)f_10475,a[2]=((C_word*)t0)[6],a[3]=((C_word*)t0)[7],a[4]=((C_word*)t0)[8],a[5]=((C_word*)t0)[9],a[6]=((C_word*)t0)[10],a[7]=((C_word*)t0)[11],a[8]=((C_word*)t0)[12],tmp=(C_word)a,a+=9,tmp);
if(C_truep((C_word)C_i_nullp(((C_word*)((C_word*)t0)[7])[1]))){
t3=t2;
f_10475(t3,C_SCHEME_UNDEFINED);}
else{
t3=(C_word)C_i_car(((C_word*)((C_word*)t0)[7])[1]);
t4=(C_word)C_eqp(t3,lf[216]);
if(C_truep(t4)){
t5=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_10533,a[2]=((C_word*)t0)[6],a[3]=t2,a[4]=((C_word*)t0)[7],a[5]=((C_word*)t0)[4],a[6]=((C_word*)t0)[5],a[7]=((C_word*)t0)[9],tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)((C_word*)t0)[5])[1])){
C_trace("ChickenBridge.scm: 368  error");
t6=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t6))(4,t6,t5,lf[19],lf[216]);}
else{
t6=t5;
f_10533(2,t6,C_SCHEME_UNDEFINED);}}
else{
t5=(C_word)C_eqp(t3,lf[217]);
if(C_truep(t5)){
t6=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_10568,a[2]=((C_word*)t0)[6],a[3]=t2,a[4]=((C_word*)t0)[7],a[5]=((C_word*)t0)[4],a[6]=((C_word*)t0)[3],a[7]=((C_word*)t0)[8],tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)((C_word*)t0)[3])[1])){
C_trace("ChickenBridge.scm: 368  error");
t7=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t7))(4,t7,t6,lf[19],lf[217]);}
else{
t7=t6;
f_10568(2,t7,C_SCHEME_UNDEFINED);}}
else{
t6=(C_word)C_eqp(t3,lf[223]);
if(C_truep(t6)){
t7=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_10603,a[2]=((C_word*)t0)[6],a[3]=t2,a[4]=((C_word*)t0)[7],a[5]=((C_word*)t0)[4],a[6]=((C_word*)t0)[2],a[7]=((C_word*)t0)[10],tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)((C_word*)t0)[2])[1])){
C_trace("ChickenBridge.scm: 368  error");
t8=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t8))(4,t8,t7,lf[19],lf[223]);}
else{
t8=t7;
f_10603(2,t8,C_SCHEME_UNDEFINED);}}
else{
t7=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_10632,a[2]=t2,a[3]=((C_word*)t0)[2],a[4]=((C_word*)t0)[10],a[5]=((C_word*)t0)[7],tmp=(C_word)a,a+=6,tmp);
if(C_truep(((C_word*)((C_word*)t0)[4])[1])){
C_trace("ChickenBridge.scm: 368  error");
t8=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t8))(4,t8,t7,lf[10],((C_word*)t0)[6]);}
else{
t8=t7;
f_10632(2,t8,C_SCHEME_UNDEFINED);}}}}}}

/* k10630 in k10470 in k10467 in k10464 in make-palindrome in k7924 in k7921 in k5905 in k5612 in k5609 in k5605 in k5314 in k5311 in k5308 in k5305 */
static void C_ccall f_10632(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_10632,2,t0,t1);}
t2=(C_word)C_i_car(((C_word*)((C_word*)t0)[5])[1]);
t3=C_mutate(((C_word *)((C_word*)t0)[4])+1,t2);
t4=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_10639,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[5],a[4]=((C_word*)t0)[3],tmp=(C_word)a,a+=5,tmp);
t5=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_10647,a[2]=((C_word*)t0)[4],a[3]=t4,tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 368  keyword?");
t6=C_retrieve(lf[13]);
((C_proc3)C_retrieve_proc(t6))(3,t6,t5,((C_word*)((C_word*)t0)[4])[1]);}

/* k10645 in k10630 in k10470 in k10467 in k10464 in make-palindrome in k7924 in k7921 in k5905 in k5612 in k5609 in k5605 in k5314 in k5311 in k5308 in k5305 */
static void C_ccall f_10647(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
if(C_truep(t1)){
C_trace("ChickenBridge.scm: 368  error");
t2=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t2))(4,t2,((C_word*)t0)[3],lf[14],((C_word*)((C_word*)t0)[2])[1]);}
else{
t2=((C_word*)t0)[3];
f_10639(2,t2,C_SCHEME_UNDEFINED);}}

/* k10637 in k10630 in k10470 in k10467 in k10464 in make-palindrome in k7924 in k7921 in k5905 in k5612 in k5609 in k5605 in k5314 in k5311 in k5308 in k5305 */
static void C_ccall f_10639(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word *a;
t2=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[3])[1]);
t4=C_mutate(((C_word *)((C_word*)t0)[3])+1,t3);
t5=((C_word*)t0)[2];
f_10475(t5,t4);}

/* k10601 in k10470 in k10467 in k10464 in make-palindrome in k7924 in k7921 in k5905 in k5612 in k5609 in k5605 in k5314 in k5311 in k5308 in k5305 */
static void C_ccall f_10603(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_10603,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_10607,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("ChickenBridge.scm: 368  error");
t4=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[21],((C_word*)t0)[2]);}
else{
t4=t2;
f_10607(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k10605 in k10601 in k10470 in k10467 in k10464 in make-palindrome in k7924 in k7921 in k5905 in k5612 in k5609 in k5605 in k5314 in k5311 in k5308 in k5305 */
static void C_ccall f_10607(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_10475(t7,t6);}

/* k10566 in k10470 in k10467 in k10464 in make-palindrome in k7924 in k7921 in k5905 in k5612 in k5609 in k5605 in k5314 in k5311 in k5308 in k5305 */
static void C_ccall f_10568(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_10568,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_10572,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("ChickenBridge.scm: 368  error");
t4=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[21],((C_word*)t0)[2]);}
else{
t4=t2;
f_10572(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k10570 in k10566 in k10470 in k10467 in k10464 in make-palindrome in k7924 in k7921 in k5905 in k5612 in k5609 in k5605 in k5314 in k5311 in k5308 in k5305 */
static void C_ccall f_10572(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_10475(t7,t6);}

/* k10531 in k10470 in k10467 in k10464 in make-palindrome in k7924 in k7921 in k5905 in k5612 in k5609 in k5605 in k5314 in k5311 in k5308 in k5305 */
static void C_ccall f_10533(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_10533,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_10537,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("ChickenBridge.scm: 368  error");
t4=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[21],((C_word*)t0)[2]);}
else{
t4=t2;
f_10537(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k10535 in k10531 in k10470 in k10467 in k10464 in make-palindrome in k7924 in k7921 in k5905 in k5612 in k5609 in k5605 in k5314 in k5311 in k5308 in k5305 */
static void C_ccall f_10537(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_10475(t7,t6);}

/* k10473 in k10470 in k10467 in k10464 in make-palindrome in k7924 in k7921 in k5905 in k5612 in k5609 in k5605 in k5314 in k5311 in k5308 in k5305 */
static void C_fcall f_10475(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_10475,NULL,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_10478,a[2]=((C_word*)t0)[4],a[3]=((C_word*)t0)[5],a[4]=((C_word*)t0)[6],a[5]=((C_word*)t0)[7],a[6]=((C_word*)t0)[8],tmp=(C_word)a,a+=7,tmp);
if(C_truep((C_word)C_i_nullp(((C_word*)((C_word*)t0)[3])[1]))){
t3=t2;
f_10478(2,t3,C_SCHEME_UNDEFINED);}
else{
C_trace("ChickenBridge.scm: 368  error");
t3=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t3))(4,t3,t2,lf[5],((C_word*)t0)[2]);}}

/* k10476 in k10473 in k10470 in k10467 in k10464 in make-palindrome in k7924 in k7921 in k5905 in k5612 in k5609 in k5605 in k5314 in k5311 in k5308 in k5305 */
static void C_ccall f_10478(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_10478,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_10481,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],tmp=(C_word)a,a+=7,tmp);
C_trace("ChickenBridge.scm: 368  %alloc-pattern");
f_9224(t2);}

/* k10479 in k10476 in k10473 in k10470 in k10467 in k10464 in make-palindrome in k7924 in k7921 in k5905 in k5612 in k5609 in k5605 in k5314 in k5311 in k5308 in k5305 */
static void C_ccall f_10481(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[13],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_10481,2,t0,t1);}
t2=(C_word)C_i_length(((C_word*)((C_word*)t0)[6])[1]);
t3=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_10487,a[2]=((C_word*)t0)[4],a[3]=((C_word*)t0)[6],a[4]=t1,a[5]=((C_word*)t0)[5],tmp=(C_word)a,a+=6,tmp);
t4=(C_word)C_a_i_times(&a,2,t2,C_fix(2));
t5=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_10504,a[2]=((C_word)li145),tmp=(C_word)a,a+=3,tmp);
C_trace("ChickenBridge.scm: 368  initialize-pattern");
f_9234(t3,t1,((C_word*)((C_word*)t0)[6])[1],((C_word*)((C_word*)t0)[3])[1],((C_word*)((C_word*)t0)[2])[1],C_fix(0),t2,t4,C_retrieve2(lf[222],"next-in-palindrome"),t5);}

/* a10503 in k10479 in k10476 in k10473 in k10470 in k10467 in k10464 in make-palindrome in k7924 in k7921 in k5905 in k5612 in k5609 in k5605 in k5314 in k5311 in k5308 in k5305 */
static void C_ccall f_10504(C_word c,C_word t0,C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word ab[4],*a=ab;
if(c!=4) C_bad_argc_2(c,4,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr4,(void*)f_10504,4,t0,t1,t2,t3);}
t4=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_10512,a[2]=t2,a[3]=t1,tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 368  pattern-data");
f_8953(t4,t3);}

/* k10510 in a10503 in k10479 in k10476 in k10473 in k10470 in k10467 in k10464 in make-palindrome in k7924 in k7921 in k5905 in k5612 in k5609 in k5605 in k5314 in k5311 in k5308 in k5305 */
static void C_ccall f_10512(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("for-each");
t2=*((C_word*)lf[214]+1);
((C_proc4)(void*)(*((C_word*)t2+1)))(4,t2,((C_word*)t0)[3],((C_word*)t0)[2],t1);}

/* k10485 in k10479 in k10476 in k10473 in k10470 in k10467 in k10464 in make-palindrome in k7924 in k7921 in k5905 in k5612 in k5609 in k5605 in k5314 in k5311 in k5308 in k5305 */
static void C_ccall f_10487(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[11],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_10487,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_10490,a[2]=((C_word*)t0)[4],a[3]=((C_word*)t0)[5],tmp=(C_word)a,a+=4,tmp);
t3=(C_word)C_i_length(((C_word*)((C_word*)t0)[3])[1]);
t4=((C_word*)((C_word*)t0)[2])[1];
t5=(C_word)C_a_i_record(&a,6,lf[219],C_fix(-2),t3,C_SCHEME_FALSE,C_SCHEME_FALSE,t4);
C_trace("ChickenBridge.scm: 368  pattern-cache-set!");
f_9160(t2,((C_word*)t0)[4],t5);}

/* k10488 in k10485 in k10479 in k10476 in k10473 in k10470 in k10467 in k10464 in make-palindrome in k7924 in k7921 in k5905 in k5612 in k5609 in k5605 in k5314 in k5311 in k5308 in k5305 */
static void C_ccall f_10490(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
t2=((C_word*)t0)[3];
((C_proc2)(void*)(*((C_word*)t2+1)))(2,t2,((C_word*)t0)[2]);}

/* palin-inc-set! in k7924 in k7921 in k5905 in k5612 in k5609 in k5605 in k5314 in k5311 in k5308 in k5305 */
static void C_fcall f_10382(C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word *a;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_10382,NULL,3,t1,t2,t3);}
t4=(C_word)C_i_check_structure(t2,lf[219]);
C_trace("ChickenBridge.scm: 368  ##sys#block-set!");
t5=*((C_word*)lf[168]+1);
((C_proc5)(void*)(*((C_word*)t5+1)))(5,t5,t1,t2,C_fix(3),t3);}

/* palin-len in k7924 in k7921 in k5905 in k5612 in k5609 in k5605 in k5314 in k5311 in k5308 in k5305 */
static void C_fcall f_10373(C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word *a;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_10373,NULL,2,t1,t2);}
t3=(C_word)C_i_check_structure(t2,lf[219]);
t4=t1;
((C_proc2)(void*)(*((C_word*)t4+1)))(2,t4,(C_word)C_i_block_ref(t2,C_fix(2)));}

/* next-in-cycle in k7924 in k7921 in k5905 in k5612 in k5609 in k5605 in k5314 in k5311 in k5308 in k5305 */
static void C_ccall f_10301(C_word c,C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word ab[3],*a=ab;
if(c!=3) C_bad_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr3,(void*)f_10301,3,t0,t1,t2);}
t3=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_10305,a[2]=t1,tmp=(C_word)a,a+=3,tmp);
C_trace("ChickenBridge.scm: 368  pattern-data");
f_8953(t3,t2);}

/* k10303 in next-in-cycle in k7924 in k7921 in k5905 in k5612 in k5609 in k5605 in k5314 in k5311 in k5308 in k5305 */
static void C_ccall f_10305(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[4],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_10305,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_10308,a[2]=((C_word*)t0)[2],a[3]=t1,tmp=(C_word)a,a+=4,tmp);
t3=(C_word)C_i_cdr(t1);
if(C_truep((C_word)C_i_nullp(t3))){
t4=(C_word)C_i_car(t1);
t5=t2;
f_10308(t5,(C_word)C_i_set_cdr(t1,t4));}
else{
t4=t2;
f_10308(t4,C_SCHEME_UNDEFINED);}}

/* k10306 in k10303 in next-in-cycle in k7924 in k7921 in k5905 in k5612 in k5609 in k5605 in k5314 in k5311 in k5308 in k5305 */
static void C_fcall f_10308(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word *a;
t2=(C_word)C_i_cadr(((C_word*)t0)[3]);
t3=(C_word)C_i_cddr(((C_word*)t0)[3]);
t4=(C_word)C_i_set_cdr(((C_word*)t0)[3],t3);
t5=((C_word*)t0)[2];
((C_proc2)(void*)(*((C_word*)t5+1)))(2,t5,t2);}

/* make-cycle in k7924 in k7921 in k5905 in k5612 in k5609 in k5605 in k5314 in k5311 in k5308 in k5305 */
static void C_ccall f_10046(C_word c,C_word t0,C_word t1,C_word t2,...){
C_word tmp;
C_word t3;
va_list v;
C_word *a,c2=c;
C_save_rest(t2,c2,3);
if(c<3) C_bad_min_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_demand(c*C_SIZEOF_PAIR+10)){
C_save_and_reclaim((void*)tr3r,(void*)f_10046r,3,t0,t1,t2);}
else{
a=C_alloc((c-3)*3);
t3=C_restore_rest(a,C_rest_count(0));
f_10046r(t0,t1,t2,t3);}}

static void C_ccall f_10046r(C_word t0,C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word *a=C_alloc(10);
t4=(*a=C_VECTOR_TYPE|1,a[1]=t2,tmp=(C_word)a,a+=2,tmp);
t5=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_10050,a[2]=t1,a[3]=t4,a[4]=t3,tmp=(C_word)a,a+=5,tmp);
if(C_truep((C_word)C_i_pairp(((C_word*)t4)[1]))){
t6=t5;
f_10050(t6,C_SCHEME_UNDEFINED);}
else{
t6=(C_word)C_a_i_list(&a,1,((C_word*)t4)[1]);
t7=C_set_block_item(t4,0,t6);
t8=t5;
f_10050(t8,t7);}}

/* k10048 in make-cycle in k7924 in k7921 in k5905 in k5612 in k5609 in k5605 in k5314 in k5311 in k5308 in k5305 */
static void C_fcall f_10050(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word t14;
C_word t15;
C_word t16;
C_word t17;
C_word t18;
C_word t19;
C_word t20;
C_word t21;
C_word ab[45],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_10050,NULL,2,t0,t1);}
t2=C_SCHEME_FALSE;
t3=(*a=C_VECTOR_TYPE|1,a[1]=t2,tmp=(C_word)a,a+=2,tmp);
t4=C_SCHEME_FALSE;
t5=(*a=C_VECTOR_TYPE|1,a[1]=t4,tmp=(C_word)a,a+=2,tmp);
t6=C_SCHEME_FALSE;
t7=(*a=C_VECTOR_TYPE|1,a[1]=t6,tmp=(C_word)a,a+=2,tmp);
t8=C_SCHEME_FALSE;
t9=(*a=C_VECTOR_TYPE|1,a[1]=t8,tmp=(C_word)a,a+=2,tmp);
t10=((C_word*)t0)[4];
t11=(*a=C_VECTOR_TYPE|1,a[1]=t10,tmp=(C_word)a,a+=2,tmp);
t12=C_SCHEME_FALSE;
t13=(*a=C_VECTOR_TYPE|1,a[1]=t12,tmp=(C_word)a,a+=2,tmp);
t14=(*a=C_CLOSURE_TYPE|10,a[1]=(C_word)f_10053,a[2]=t9,a[3]=t13,a[4]=t7,a[5]=((C_word*)t0)[4],a[6]=t11,a[7]=t5,a[8]=t3,a[9]=((C_word*)t0)[2],a[10]=((C_word*)t0)[3],tmp=(C_word)a,a+=11,tmp);
if(C_truep((C_word)C_i_nullp(((C_word*)t11)[1]))){
t15=t14;
f_10053(t15,C_SCHEME_UNDEFINED);}
else{
t15=(C_word)C_i_car(((C_word*)t11)[1]);
t16=(C_word)C_eqp(t15,lf[216]);
if(C_truep(t16)){
t17=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_10207,a[2]=((C_word*)t0)[4],a[3]=t14,a[4]=t11,a[5]=t13,a[6]=t7,a[7]=t3,tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)t7)[1])){
C_trace("ChickenBridge.scm: 368  error");
t18=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t18))(4,t18,t17,lf[19],lf[216]);}
else{
t18=t17;
f_10207(2,t18,C_SCHEME_UNDEFINED);}}
else{
t17=(C_word)C_eqp(t15,lf[217]);
if(C_truep(t17)){
t18=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_10242,a[2]=((C_word*)t0)[4],a[3]=t14,a[4]=t11,a[5]=t13,a[6]=t9,a[7]=t5,tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)t9)[1])){
C_trace("ChickenBridge.scm: 368  error");
t19=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t19))(4,t19,t18,lf[19],lf[217]);}
else{
t19=t18;
f_10242(2,t19,C_SCHEME_UNDEFINED);}}
else{
t18=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_10271,a[2]=t14,a[3]=t7,a[4]=t3,a[5]=t11,tmp=(C_word)a,a+=6,tmp);
if(C_truep(((C_word*)t13)[1])){
C_trace("ChickenBridge.scm: 368  error");
t19=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t19))(4,t19,t18,lf[10],((C_word*)t0)[4]);}
else{
t19=t18;
f_10271(2,t19,C_SCHEME_UNDEFINED);}}}}}

/* k10269 in k10048 in make-cycle in k7924 in k7921 in k5905 in k5612 in k5609 in k5605 in k5314 in k5311 in k5308 in k5305 */
static void C_ccall f_10271(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_10271,2,t0,t1);}
t2=(C_word)C_i_car(((C_word*)((C_word*)t0)[5])[1]);
t3=C_mutate(((C_word *)((C_word*)t0)[4])+1,t2);
t4=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_10278,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[5],a[4]=((C_word*)t0)[3],tmp=(C_word)a,a+=5,tmp);
t5=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_10286,a[2]=((C_word*)t0)[4],a[3]=t4,tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 368  keyword?");
t6=C_retrieve(lf[13]);
((C_proc3)C_retrieve_proc(t6))(3,t6,t5,((C_word*)((C_word*)t0)[4])[1]);}

/* k10284 in k10269 in k10048 in make-cycle in k7924 in k7921 in k5905 in k5612 in k5609 in k5605 in k5314 in k5311 in k5308 in k5305 */
static void C_ccall f_10286(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
if(C_truep(t1)){
C_trace("ChickenBridge.scm: 368  error");
t2=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t2))(4,t2,((C_word*)t0)[3],lf[14],((C_word*)((C_word*)t0)[2])[1]);}
else{
t2=((C_word*)t0)[3];
f_10278(2,t2,C_SCHEME_UNDEFINED);}}

/* k10276 in k10269 in k10048 in make-cycle in k7924 in k7921 in k5905 in k5612 in k5609 in k5605 in k5314 in k5311 in k5308 in k5305 */
static void C_ccall f_10278(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word *a;
t2=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[3])[1]);
t4=C_mutate(((C_word *)((C_word*)t0)[3])+1,t3);
t5=((C_word*)t0)[2];
f_10053(t5,t4);}

/* k10240 in k10048 in make-cycle in k7924 in k7921 in k5905 in k5612 in k5609 in k5605 in k5314 in k5311 in k5308 in k5305 */
static void C_ccall f_10242(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_10242,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_10246,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("ChickenBridge.scm: 368  error");
t4=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[21],((C_word*)t0)[2]);}
else{
t4=t2;
f_10246(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k10244 in k10240 in k10048 in make-cycle in k7924 in k7921 in k5905 in k5612 in k5609 in k5605 in k5314 in k5311 in k5308 in k5305 */
static void C_ccall f_10246(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_10053(t7,t6);}

/* k10205 in k10048 in make-cycle in k7924 in k7921 in k5905 in k5612 in k5609 in k5605 in k5314 in k5311 in k5308 in k5305 */
static void C_ccall f_10207(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_10207,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_10211,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("ChickenBridge.scm: 368  error");
t4=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[21],((C_word*)t0)[2]);}
else{
t4=t2;
f_10211(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k10209 in k10205 in k10048 in make-cycle in k7924 in k7921 in k5905 in k5612 in k5609 in k5605 in k5314 in k5311 in k5308 in k5305 */
static void C_ccall f_10211(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_10053(t7,t6);}

/* k10051 in k10048 in make-cycle in k7924 in k7921 in k5905 in k5612 in k5609 in k5605 in k5314 in k5311 in k5308 in k5305 */
static void C_fcall f_10053(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word ab[30],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_10053,NULL,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_10056,a[2]=((C_word*)t0)[5],a[3]=((C_word*)t0)[6],a[4]=((C_word*)t0)[7],a[5]=((C_word*)t0)[8],a[6]=((C_word*)t0)[9],a[7]=((C_word*)t0)[10],tmp=(C_word)a,a+=8,tmp);
if(C_truep((C_word)C_i_nullp(((C_word*)((C_word*)t0)[6])[1]))){
t3=t2;
f_10056(t3,C_SCHEME_UNDEFINED);}
else{
t3=(C_word)C_i_car(((C_word*)((C_word*)t0)[6])[1]);
t4=(C_word)C_eqp(t3,lf[216]);
if(C_truep(t4)){
t5=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_10107,a[2]=((C_word*)t0)[5],a[3]=t2,a[4]=((C_word*)t0)[6],a[5]=((C_word*)t0)[3],a[6]=((C_word*)t0)[4],a[7]=((C_word*)t0)[8],tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)((C_word*)t0)[4])[1])){
C_trace("ChickenBridge.scm: 368  error");
t6=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t6))(4,t6,t5,lf[19],lf[216]);}
else{
t6=t5;
f_10107(2,t6,C_SCHEME_UNDEFINED);}}
else{
t5=(C_word)C_eqp(t3,lf[217]);
if(C_truep(t5)){
t6=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_10142,a[2]=((C_word*)t0)[5],a[3]=t2,a[4]=((C_word*)t0)[6],a[5]=((C_word*)t0)[3],a[6]=((C_word*)t0)[2],a[7]=((C_word*)t0)[7],tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)((C_word*)t0)[2])[1])){
C_trace("ChickenBridge.scm: 368  error");
t7=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t7))(4,t7,t6,lf[19],lf[217]);}
else{
t7=t6;
f_10142(2,t7,C_SCHEME_UNDEFINED);}}
else{
t6=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_10171,a[2]=t2,a[3]=((C_word*)t0)[2],a[4]=((C_word*)t0)[7],a[5]=((C_word*)t0)[6],tmp=(C_word)a,a+=6,tmp);
if(C_truep(((C_word*)((C_word*)t0)[3])[1])){
C_trace("ChickenBridge.scm: 368  error");
t7=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t7))(4,t7,t6,lf[10],((C_word*)t0)[5]);}
else{
t7=t6;
f_10171(2,t7,C_SCHEME_UNDEFINED);}}}}}

/* k10169 in k10051 in k10048 in make-cycle in k7924 in k7921 in k5905 in k5612 in k5609 in k5605 in k5314 in k5311 in k5308 in k5305 */
static void C_ccall f_10171(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_10171,2,t0,t1);}
t2=(C_word)C_i_car(((C_word*)((C_word*)t0)[5])[1]);
t3=C_mutate(((C_word *)((C_word*)t0)[4])+1,t2);
t4=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_10178,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[5],a[4]=((C_word*)t0)[3],tmp=(C_word)a,a+=5,tmp);
t5=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_10186,a[2]=((C_word*)t0)[4],a[3]=t4,tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 368  keyword?");
t6=C_retrieve(lf[13]);
((C_proc3)C_retrieve_proc(t6))(3,t6,t5,((C_word*)((C_word*)t0)[4])[1]);}

/* k10184 in k10169 in k10051 in k10048 in make-cycle in k7924 in k7921 in k5905 in k5612 in k5609 in k5605 in k5314 in k5311 in k5308 in k5305 */
static void C_ccall f_10186(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
if(C_truep(t1)){
C_trace("ChickenBridge.scm: 368  error");
t2=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t2))(4,t2,((C_word*)t0)[3],lf[14],((C_word*)((C_word*)t0)[2])[1]);}
else{
t2=((C_word*)t0)[3];
f_10178(2,t2,C_SCHEME_UNDEFINED);}}

/* k10176 in k10169 in k10051 in k10048 in make-cycle in k7924 in k7921 in k5905 in k5612 in k5609 in k5605 in k5314 in k5311 in k5308 in k5305 */
static void C_ccall f_10178(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word *a;
t2=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[3])[1]);
t4=C_mutate(((C_word *)((C_word*)t0)[3])+1,t3);
t5=((C_word*)t0)[2];
f_10056(t5,t4);}

/* k10140 in k10051 in k10048 in make-cycle in k7924 in k7921 in k5905 in k5612 in k5609 in k5605 in k5314 in k5311 in k5308 in k5305 */
static void C_ccall f_10142(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_10142,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_10146,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("ChickenBridge.scm: 368  error");
t4=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[21],((C_word*)t0)[2]);}
else{
t4=t2;
f_10146(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k10144 in k10140 in k10051 in k10048 in make-cycle in k7924 in k7921 in k5905 in k5612 in k5609 in k5605 in k5314 in k5311 in k5308 in k5305 */
static void C_ccall f_10146(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_10056(t7,t6);}

/* k10105 in k10051 in k10048 in make-cycle in k7924 in k7921 in k5905 in k5612 in k5609 in k5605 in k5314 in k5311 in k5308 in k5305 */
static void C_ccall f_10107(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_10107,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_10111,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("ChickenBridge.scm: 368  error");
t4=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[21],((C_word*)t0)[2]);}
else{
t4=t2;
f_10111(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k10109 in k10105 in k10051 in k10048 in make-cycle in k7924 in k7921 in k5905 in k5612 in k5609 in k5605 in k5314 in k5311 in k5308 in k5305 */
static void C_ccall f_10111(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_10056(t7,t6);}

/* k10054 in k10051 in k10048 in make-cycle in k7924 in k7921 in k5905 in k5612 in k5609 in k5605 in k5314 in k5311 in k5308 in k5305 */
static void C_fcall f_10056(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[6],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_10056,NULL,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_10059,a[2]=((C_word*)t0)[4],a[3]=((C_word*)t0)[5],a[4]=((C_word*)t0)[6],a[5]=((C_word*)t0)[7],tmp=(C_word)a,a+=6,tmp);
if(C_truep((C_word)C_i_nullp(((C_word*)((C_word*)t0)[3])[1]))){
t3=t2;
f_10059(2,t3,C_SCHEME_UNDEFINED);}
else{
C_trace("ChickenBridge.scm: 368  error");
t3=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t3))(4,t3,t2,lf[5],((C_word*)t0)[2]);}}

/* k10057 in k10054 in k10051 in k10048 in make-cycle in k7924 in k7921 in k5905 in k5612 in k5609 in k5605 in k5314 in k5311 in k5308 in k5305 */
static void C_ccall f_10059(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[6],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_10059,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_10062,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],tmp=(C_word)a,a+=6,tmp);
C_trace("ChickenBridge.scm: 368  %alloc-pattern");
f_9224(t2);}

/* k10060 in k10057 in k10054 in k10051 in k10048 in make-cycle in k7924 in k7921 in k5905 in k5612 in k5609 in k5605 in k5314 in k5311 in k5308 in k5305 */
static void C_ccall f_10062(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[10],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_10062,2,t0,t1);}
t2=(C_word)C_i_length(((C_word*)((C_word*)t0)[5])[1]);
t3=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_10068,a[2]=t1,a[3]=((C_word*)t0)[4],tmp=(C_word)a,a+=4,tmp);
t4=(C_word)C_a_i_cons(&a,2,((C_word*)((C_word*)t0)[5])[1],((C_word*)((C_word*)t0)[5])[1]);
t5=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_10074,a[2]=((C_word)li140),tmp=(C_word)a,a+=3,tmp);
C_trace("ChickenBridge.scm: 368  initialize-pattern");
f_9234(t3,t1,t4,((C_word*)((C_word*)t0)[3])[1],((C_word*)((C_word*)t0)[2])[1],C_fix(0),t2,t2,C_retrieve2(lf[215],"next-in-cycle"),t5);}

/* a10073 in k10060 in k10057 in k10054 in k10051 in k10048 in make-cycle in k7924 in k7921 in k5905 in k5612 in k5609 in k5605 in k5314 in k5311 in k5308 in k5305 */
static void C_ccall f_10074(C_word c,C_word t0,C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word ab[4],*a=ab;
if(c!=4) C_bad_argc_2(c,4,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr4,(void*)f_10074,4,t0,t1,t2,t3);}
t4=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_10086,a[2]=t2,a[3]=t1,tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 368  pattern-data");
f_8953(t4,t3);}

/* k10084 in a10073 in k10060 in k10057 in k10054 in k10051 in k10048 in make-cycle in k7924 in k7921 in k5905 in k5612 in k5609 in k5605 in k5314 in k5311 in k5308 in k5305 */
static void C_ccall f_10086(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word *a;
t2=(C_word)C_i_car(t1);
C_trace("for-each");
t3=*((C_word*)lf[214]+1);
((C_proc4)(void*)(*((C_word*)t3+1)))(4,t3,((C_word*)t0)[3],((C_word*)t0)[2],t2);}

/* k10066 in k10060 in k10057 in k10054 in k10051 in k10048 in make-cycle in k7924 in k7921 in k5905 in k5612 in k5609 in k5605 in k5314 in k5311 in k5308 in k5305 */
static void C_ccall f_10068(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
t2=((C_word*)t0)[3];
((C_proc2)(void*)(*((C_word*)t2+1)))(2,t2,((C_word*)t0)[2]);}

/* reset-period in k7924 in k7921 in k5905 in k5612 in k5609 in k5605 in k5314 in k5311 in k5308 in k5305 */
static void C_fcall f_9931(C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word ab[4],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_9931,NULL,2,t1,t2);}
t3=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_10044,a[2]=t2,a[3]=t1,tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 368  pattern?");
f_8920(t3,t2);}

/* k10042 in reset-period in k7924 in k7921 in k5905 in k5612 in k5609 in k5605 in k5314 in k5311 in k5308 in k5305 */
static void C_ccall f_10044(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[4],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_10044,2,t0,t1);}
if(C_truep(t1)){
t2=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_9941,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 368  pattern-period");
f_9007(t2,((C_word*)t0)[2]);}
else{
t2=((C_word*)t0)[3];
((C_proc2)(void*)(*((C_word*)t2+1)))(2,t2,C_fix(1));}}

/* k9939 in k10042 in reset-period in k7924 in k7921 in k5905 in k5612 in k5609 in k5605 in k5314 in k5311 in k5308 in k5305 */
static void C_ccall f_9941(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word ab[15],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_9941,2,t0,t1);}
t2=C_SCHEME_FALSE;
t3=(*a=C_VECTOR_TYPE|1,a[1]=t2,tmp=(C_word)a,a+=2,tmp);
t4=C_SCHEME_FALSE;
t5=(*a=C_VECTOR_TYPE|1,a[1]=t4,tmp=(C_word)a,a+=2,tmp);
t6=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_9944,a[2]=((C_word*)t0)[2],a[3]=t1,a[4]=((C_word*)t0)[3],a[5]=t5,a[6]=t3,tmp=(C_word)a,a+=7,tmp);
t7=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_10029,a[2]=t6,a[3]=t1,tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 368  period-stream");
f_8821(t7,t1);}

/* k10027 in k9939 in k10042 in reset-period in k7924 in k7921 in k5905 in k5612 in k5609 in k5605 in k5314 in k5311 in k5308 in k5305 */
static void C_ccall f_10029(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_10029,2,t0,t1);}
if(C_truep(t1)){
t2=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_10036,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],tmp=(C_word)a,a+=4,tmp);
t3=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_10040,a[2]=t2,tmp=(C_word)a,a+=3,tmp);
C_trace("ChickenBridge.scm: 368  period-stream");
f_8821(t3,((C_word*)t0)[3]);}
else{
t2=((C_word*)t0)[2];
f_9944(2,t2,C_SCHEME_UNDEFINED);}}

/* k10038 in k10027 in k9939 in k10042 in reset-period in k7924 in k7921 in k5905 in k5612 in k5609 in k5605 in k5314 in k5311 in k5308 in k5305 */
static void C_ccall f_10040(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 368  next-1");
f_9575(((C_word*)t0)[2],t1);}

/* k10034 in k10027 in k9939 in k10042 in reset-period in k7924 in k7921 in k5905 in k5612 in k5609 in k5605 in k5314 in k5311 in k5308 in k5305 */
static void C_ccall f_10036(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word *a;
t2=((C_word*)t0)[3];
t3=(C_word)C_i_check_structure(t2,lf[166]);
C_trace("ChickenBridge.scm: 368  ##sys#block-set!");
t4=*((C_word*)lf[168]+1);
((C_proc5)(void*)(*((C_word*)t4+1)))(5,t4,((C_word*)t0)[2],t2,C_fix(2),t1);}

/* k9942 in k9939 in k10042 in reset-period in k7924 in k7921 in k5905 in k5612 in k5609 in k5605 in k5314 in k5311 in k5308 in k5305 */
static void C_ccall f_9944(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_9944,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_10026,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],tmp=(C_word)a,a+=7,tmp);
C_trace("ChickenBridge.scm: 368  period-length");
f_8803(t2,((C_word*)t0)[3]);}

/* k10024 in k9942 in k9939 in k10042 in reset-period in k7924 in k7921 in k5905 in k5612 in k5609 in k5605 in k5314 in k5311 in k5308 in k5305 */
static void C_ccall f_10026(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_10026,2,t0,t1);}
t2=(C_word)C_eqp(t1,C_SCHEME_TRUE);
t3=C_mutate(((C_word *)((C_word*)t0)[6])+1,t2);
t4=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_9952,a[2]=((C_word*)t0)[6],a[3]=((C_word*)t0)[2],a[4]=((C_word*)t0)[3],a[5]=((C_word*)t0)[4],a[6]=((C_word*)t0)[5],tmp=(C_word)a,a+=7,tmp);
if(C_truep(((C_word*)((C_word*)t0)[6])[1])){
t5=((C_word*)t0)[3];
t6=(C_word)C_i_check_structure(t5,lf[166]);
t7=t4;
f_9952(2,t7,(C_word)C_i_block_ref(t5,C_fix(4)));}
else{
C_trace("ChickenBridge.scm: 368  period-length");
f_8803(t4,((C_word*)t0)[3]);}}

/* k9950 in k10024 in k9942 in k9939 in k10042 in reset-period in k7924 in k7921 in k5905 in k5612 in k5609 in k5605 in k5314 in k5311 in k5308 in k5305 */
static void C_ccall f_9952(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[13],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_9952,2,t0,t1);}
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_9955,a[2]=((C_word*)t0)[4],a[3]=((C_word*)t0)[6],a[4]=((C_word*)t0)[5],tmp=(C_word)a,a+=5,tmp);
t4=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_9961,a[2]=((C_word*)t0)[3],a[3]=t3,a[4]=((C_word*)t0)[6],tmp=(C_word)a,a+=5,tmp);
if(C_truep(((C_word*)((C_word*)t0)[2])[1])){
t5=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_10016,a[2]=t4,tmp=(C_word)a,a+=3,tmp);
C_trace("ChickenBridge.scm: 368  pattern-flags");
f_8935(t5,((C_word*)t0)[3]);}
else{
t5=t4;
f_9961(2,t5,C_SCHEME_FALSE);}}

/* k10014 in k9950 in k10024 in k9942 in k9939 in k10042 in reset-period in k7924 in k7921 in k5905 in k5612 in k5609 in k5605 in k5314 in k5311 in k5308 in k5305 */
static void C_ccall f_10016(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 368  bitwise-test");
f_6299(((C_word*)t0)[2],t1,C_fix(8));}

/* k9959 in k9950 in k10024 in k9942 in k9939 in k10042 in reset-period in k7924 in k7921 in k5905 in k5612 in k5609 in k5605 in k5314 in k5311 in k5308 in k5305 */
static void C_ccall f_9961(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[11],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_9961,2,t0,t1);}
if(C_truep(t1)){
t2=C_fix(0);
t3=(*a=C_VECTOR_TYPE|1,a[1]=t2,tmp=(C_word)a,a+=2,tmp);
t4=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_9964,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=t3,tmp=(C_word)a,a+=5,tmp);
t5=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_9980,a[2]=t3,a[3]=((C_word)li138),tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 368  map-pattern-data");
f_9885(t4,t5,((C_word*)t0)[2]);}
else{
t2=((C_word*)t0)[3];
f_9955(t2,C_SCHEME_UNDEFINED);}}

/* a9979 in k9959 in k9950 in k10024 in k9942 in k9939 in k10042 in reset-period in k7924 in k7921 in k5905 in k5612 in k5609 in k5605 in k5314 in k5311 in k5308 in k5305 */
static void C_ccall f_9980(C_word c,C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word ab[5],*a=ab;
if(c!=3) C_bad_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr3,(void*)f_9980,3,t0,t1,t2);}
t3=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_10009,a[2]=t2,a[3]=t1,a[4]=((C_word*)t0)[2],tmp=(C_word)a,a+=5,tmp);
C_trace("ChickenBridge.scm: 368  reset-period");
f_9931(t3,t2);}

/* k10007 in a9979 in k9959 in k9950 in k10024 in k9942 in k9939 in k10042 in reset-period in k7924 in k7921 in k5905 in k5612 in k5609 in k5605 in k5314 in k5311 in k5308 in k5305 */
static void C_ccall f_10009(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[4],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_10009,2,t0,t1);}
if(C_truep((C_word)C_i_nequalp(t1,C_fix(0)))){
t2=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_9990,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 368  pattern-period");
f_9007(t2,((C_word*)t0)[2]);}
else{
t2=((C_word*)t0)[3];
((C_proc2)(void*)(*((C_word*)t2+1)))(2,t2,C_SCHEME_UNDEFINED);}}

/* k9988 in k10007 in a9979 in k9959 in k9950 in k10024 in k9942 in k9939 in k10042 in reset-period in k7924 in k7921 in k5905 in k5612 in k5609 in k5605 in k5314 in k5311 in k5308 in k5305 */
static void C_ccall f_9990(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[8],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_9990,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_9993,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],tmp=(C_word)a,a+=4,tmp);
t3=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_10005,a[2]=t1,a[3]=t2,tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 368  period-omit");
f_8857(t3,t1);}

/* k10003 in k9988 in k10007 in a9979 in k9959 in k9950 in k10024 in k9942 in k9939 in k10042 in reset-period in k7924 in k7921 in k5905 in k5612 in k5609 in k5605 in k5314 in k5311 in k5308 in k5305 */
static void C_ccall f_10005(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[4],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_10005,2,t0,t1);}
t2=(C_word)C_a_i_plus(&a,2,t1,C_fix(1));
C_trace("ChickenBridge.scm: 368  period-omit-set!");
f_8848(((C_word*)t0)[3],((C_word*)t0)[2],t2);}

/* k9991 in k9988 in k10007 in a9979 in k9959 in k9950 in k10024 in k9942 in k9939 in k10042 in reset-period in k7924 in k7921 in k5905 in k5612 in k5609 in k5605 in k5314 in k5311 in k5308 in k5305 */
static void C_ccall f_9993(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[4],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_9993,2,t0,t1);}
t2=(C_word)C_a_i_plus(&a,2,((C_word*)((C_word*)t0)[3])[1],C_fix(1));
t3=C_mutate(((C_word *)((C_word*)t0)[3])+1,t2);
t4=((C_word*)t0)[2];
((C_proc2)(void*)(*((C_word*)t4+1)))(2,t4,t3);}

/* k9962 in k9959 in k9950 in k10024 in k9942 in k9939 in k10042 in reset-period in k7924 in k7921 in k5905 in k5612 in k5609 in k5605 in k5314 in k5311 in k5308 in k5305 */
static void C_ccall f_9964(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[8],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_9964,2,t0,t1);}
if(C_truep((C_word)C_i_greaterp(((C_word*)((C_word*)t0)[4])[1],C_fix(0)))){
t2=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_9974,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],tmp=(C_word)a,a+=4,tmp);
t3=(C_word)C_a_i_minus(&a,2,((C_word*)((C_word*)t0)[3])[1],((C_word*)((C_word*)t0)[4])[1]);
C_trace("ChickenBridge.scm: 368  max");
t4=*((C_word*)lf[212]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,t3,C_fix(0));}
else{
t2=((C_word*)t0)[2];
f_9955(t2,C_SCHEME_UNDEFINED);}}

/* k9972 in k9962 in k9959 in k9950 in k10024 in k9942 in k9939 in k10042 in reset-period in k7924 in k7921 in k5905 in k5612 in k5609 in k5605 in k5314 in k5311 in k5308 in k5305 */
static void C_ccall f_9974(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[3])+1,t1);
t3=((C_word*)t0)[2];
f_9955(t3,t2);}

/* k9953 in k9950 in k10024 in k9942 in k9939 in k10042 in reset-period in k7924 in k7921 in k5905 in k5612 in k5609 in k5605 in k5314 in k5311 in k5308 in k5305 */
static void C_fcall f_9955(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[4],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_9955,NULL,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_9958,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 368  period-count-set!");
f_8776(t2,((C_word*)t0)[2],((C_word*)((C_word*)t0)[3])[1]);}

/* k9956 in k9953 in k9950 in k10024 in k9942 in k9939 in k10042 in reset-period in k7924 in k7921 in k5905 in k5612 in k5609 in k5605 in k5314 in k5311 in k5308 in k5305 */
static void C_ccall f_9958(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
t2=((C_word*)t0)[3];
((C_proc2)(void*)(*((C_word*)t2+1)))(2,t2,((C_word*)((C_word*)t0)[2])[1]);}

/* map-pattern-data in k7924 in k7921 in k5905 in k5612 in k5609 in k5605 in k5314 in k5311 in k5308 in k5305 */
static void C_fcall f_9885(C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_9885,NULL,3,t1,t2,t3);}
t4=t3;
t5=(C_word)C_i_check_structure(t4,lf[176]);
t6=(C_word)C_i_block_ref(t4,C_fix(13));
t7=t6;
((C_proc4)C_retrieve_proc(t7))(4,t7,t1,t2,t3);}

/* next-in-pattern in k7924 in k7921 in k5905 in k5612 in k5609 in k5605 in k5314 in k5311 in k5308 in k5305 */
static void C_fcall f_9876(C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word *a;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_9876,NULL,2,t1,t2);}
t3=t2;
t4=(C_word)C_i_check_structure(t3,lf[176]);
t5=(C_word)C_i_block_ref(t3,C_fix(12));
t6=t5;
((C_proc3)C_retrieve_proc(t6))(3,t6,t1,t2);}

/* next-1 in k7924 in k7921 in k5905 in k5612 in k5609 in k5605 in k5314 in k5311 in k5308 in k5305 */
static void C_fcall f_9575(C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word ab[4],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_9575,NULL,2,t1,t2);}
t3=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_9582,a[2]=t2,a[3]=t1,tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 368  pattern?");
f_8920(t3,t2);}

/* k9580 in next-1 in k7924 in k7921 in k5905 in k5612 in k5609 in k5605 in k5314 in k5311 in k5308 in k5305 */
static void C_ccall f_9582(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[8],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_9582,2,t0,t1);}
if(C_truep(t1)){
t2=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_9585,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 368  pattern-period");
f_9007(t2,((C_word*)t0)[2]);}
else{
if(C_truep((C_word)C_i_closurep(((C_word*)t0)[2]))){
C_trace("ChickenBridge.scm: 368  obj");
t2=((C_word*)t0)[2];
((C_proc2)C_retrieve_proc(t2))(2,t2,((C_word*)t0)[3]);}
else{
t2=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_9871,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 368  promise?");
t3=C_retrieve(lf[211]);
((C_proc3)C_retrieve_proc(t3))(3,t3,t2,((C_word*)t0)[2]);}}}

/* k9869 in k9580 in next-1 in k7924 in k7921 in k5905 in k5612 in k5609 in k5605 in k5314 in k5311 in k5308 in k5305 */
static void C_ccall f_9871(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
if(C_truep(t1)){
C_trace("ChickenBridge.scm: 368  force");
t2=C_retrieve(lf[210]);
((C_proc3)C_retrieve_proc(t2))(3,t2,((C_word*)t0)[3],((C_word*)t0)[2]);}
else{
t2=((C_word*)t0)[3];
((C_proc2)(void*)(*((C_word*)t2+1)))(2,t2,((C_word*)t0)[2]);}}

/* k9583 in k9580 in next-1 in k7924 in k7921 in k5905 in k5612 in k5609 in k5605 in k5314 in k5311 in k5308 in k5305 */
static void C_ccall f_9585(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[14],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_9585,2,t0,t1);}
t2=C_SCHEME_FALSE;
t3=(*a=C_VECTOR_TYPE|1,a[1]=t2,tmp=(C_word)a,a+=2,tmp);
t4=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_9588,a[2]=t1,a[3]=((C_word*)t0)[2],a[4]=((C_word*)t0)[3],a[5]=t3,tmp=(C_word)a,a+=6,tmp);
t5=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_9856,a[2]=t1,a[3]=((C_word*)t0)[2],a[4]=t4,a[5]=t3,tmp=(C_word)a,a+=6,tmp);
C_trace("ChickenBridge.scm: 368  period-count");
f_8785(t5,t1);}

/* k9854 in k9583 in k9580 in next-1 in k7924 in k7921 in k5905 in k5612 in k5609 in k5605 in k5314 in k5311 in k5308 in k5305 */
static void C_ccall f_9856(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[10],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_9856,2,t0,t1);}
if(C_truep((C_word)C_i_nequalp(t1,C_fix(0)))){
t2=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_9811,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],tmp=(C_word)a,a+=5,tmp);
t3=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_9848,a[2]=t2,a[3]=((C_word*)t0)[5],a[4]=((C_word*)t0)[3],tmp=(C_word)a,a+=5,tmp);
C_trace("ChickenBridge.scm: 368  period-reps");
f_8875(t3,((C_word*)t0)[2]);}
else{
t2=((C_word*)t0)[4];
f_9588(2,t2,C_SCHEME_UNDEFINED);}}

/* k9846 in k9854 in k9583 in k9580 in next-1 in k7924 in k7921 in k5905 in k5612 in k5609 in k5605 in k5314 in k5311 in k5308 in k5305 */
static void C_ccall f_9848(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[5],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_9848,2,t0,t1);}
t2=((C_word*)t0)[4];
t3=(C_word)C_i_check_structure(t2,lf[176]);
t4=(C_word)C_i_block_ref(t2,C_fix(8));
if(C_truep((C_word)C_i_greater_or_equalp(t1,t4))){
t5=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_9840,a[2]=((C_word*)t0)[4],a[3]=((C_word*)t0)[2],a[4]=((C_word*)t0)[3],tmp=(C_word)a,a+=5,tmp);
C_trace("ChickenBridge.scm: 368  pattern-value-set!");
f_9016(t5,((C_word*)t0)[4],lf[205]);}
else{
t5=((C_word*)t0)[2];
f_9811(t5,C_SCHEME_UNDEFINED);}}

/* k9838 in k9846 in k9854 in k9583 in k9580 in next-1 in k7924 in k7921 in k5905 in k5612 in k5609 in k5605 in k5314 in k5311 in k5308 in k5305 */
static void C_ccall f_9840(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[4],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_9840,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_9843,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 368  pattern-state-set!");
f_9034(t2,((C_word*)t0)[2],lf[203]);}

/* k9841 in k9838 in k9846 in k9854 in k9583 in k9580 in next-1 in k7924 in k7921 in k5905 in k5612 in k5609 in k5605 in k5314 in k5311 in k5308 in k5305 */
static void C_ccall f_9843(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[3])+1,lf[205]);
t3=((C_word*)t0)[2];
f_9811(t3,t2);}

/* k9809 in k9854 in k9583 in k9580 in next-1 in k7924 in k7921 in k5905 in k5612 in k5609 in k5605 in k5314 in k5311 in k5308 in k5305 */
static void C_fcall f_9811(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[8],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_9811,NULL,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_9817,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],tmp=(C_word)a,a+=5,tmp);
t3=((C_word*)((C_word*)t0)[4])[1];
if(C_truep(t3)){
t4=t2;
f_9817(t4,C_SCHEME_FALSE);}
else{
t4=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_9834,a[2]=t2,tmp=(C_word)a,a+=3,tmp);
C_trace("ChickenBridge.scm: 368  reset-period");
f_9931(t4,((C_word*)t0)[2]);}}

/* k9832 in k9809 in k9854 in k9583 in k9580 in next-1 in k7924 in k7921 in k5905 in k5612 in k5609 in k5605 in k5314 in k5311 in k5308 in k5305 */
static void C_ccall f_9834(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
t2=((C_word*)t0)[2];
f_9817(t2,(C_word)C_i_nequalp(t1,C_fix(0)));}

/* k9815 in k9809 in k9854 in k9583 in k9580 in next-1 in k7924 in k7921 in k5905 in k5612 in k5609 in k5605 in k5314 in k5311 in k5308 in k5305 */
static void C_fcall f_9817(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[4],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_9817,NULL,2,t0,t1);}
if(C_truep(t1)){
t2=C_mutate(((C_word *)((C_word*)t0)[4])+1,lf[191]);
t3=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_9821,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 368  pattern-value-set!");
f_9016(t3,((C_word*)t0)[2],lf[191]);}
else{
t2=((C_word*)t0)[3];
f_9588(2,t2,C_SCHEME_UNDEFINED);}}

/* k9819 in k9815 in k9809 in k9854 in k9583 in k9580 in next-1 in k7924 in k7921 in k5905 in k5612 in k5609 in k5605 in k5314 in k5311 in k5308 in k5305 */
static void C_ccall f_9821(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 368  pattern-state-set!");
f_9034(((C_word*)t0)[3],((C_word*)t0)[2],lf[203]);}

/* k9586 in k9583 in k9580 in next-1 in k7924 in k7921 in k5905 in k5612 in k5609 in k5605 in k5314 in k5311 in k5308 in k5305 */
static void C_ccall f_9588(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[5],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_9588,2,t0,t1);}
if(C_truep(((C_word*)((C_word*)t0)[5])[1])){
t2=((C_word*)t0)[4];
((C_proc2)(void*)(*((C_word*)t2+1)))(2,t2,((C_word*)((C_word*)t0)[5])[1]);}
else{
t2=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_9594,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[3],tmp=(C_word)a,a+=5,tmp);
C_trace("ChickenBridge.scm: 368  pattern-flags");
f_8935(t2,((C_word*)t0)[3]);}}

/* k9592 in k9586 in k9583 in k9580 in next-1 in k7924 in k7921 in k5905 in k5612 in k5609 in k5605 in k5314 in k5311 in k5308 in k5305 */
static void C_ccall f_9594(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word ab[21],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_9594,2,t0,t1);}
t2=((C_word*)t0)[4];
t3=(C_word)C_i_check_structure(t2,lf[176]);
t4=(C_word)C_i_block_ref(t2,C_fix(9));
t5=C_SCHEME_FALSE;
t6=(*a=C_VECTOR_TYPE|1,a[1]=t5,tmp=(C_word)a,a+=2,tmp);
t7=C_SCHEME_FALSE;
t8=(*a=C_VECTOR_TYPE|1,a[1]=t7,tmp=(C_word)a,a+=2,tmp);
t9=(*a=C_CLOSURE_TYPE|8,a[1]=(C_word)f_9600,a[2]=t1,a[3]=((C_word*)t0)[2],a[4]=t4,a[5]=t8,a[6]=((C_word*)t0)[4],a[7]=t6,a[8]=((C_word*)t0)[3],tmp=(C_word)a,a+=9,tmp);
t10=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_9686,a[2]=t1,a[3]=((C_word*)t0)[2],a[4]=((C_word*)t0)[4],a[5]=t9,a[6]=t8,a[7]=t6,tmp=(C_word)a,a+=8,tmp);
C_trace("ChickenBridge.scm: 368  bitwise-test");
f_6299(t10,t1,C_fix(1));}

/* k9684 in k9592 in k9586 in k9583 in k9580 in next-1 in k7924 in k7921 in k5905 in k5612 in k5609 in k5605 in k5314 in k5311 in k5308 in k5305 */
static void C_ccall f_9686(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[20],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_9686,2,t0,t1);}
if(C_truep(t1)){
t2=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_9689,a[2]=((C_word*)t0)[4],a[3]=((C_word*)t0)[5],a[4]=((C_word*)t0)[6],a[5]=((C_word*)t0)[7],tmp=(C_word)a,a+=6,tmp);
t3=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_9702,a[2]=((C_word*)t0)[4],a[3]=t2,tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 368  next-in-pattern");
f_9876(t3,((C_word*)t0)[4]);}
else{
t2=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_9709,a[2]=((C_word*)t0)[5],a[3]=((C_word*)t0)[6],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[7],tmp=(C_word)a,a+=6,tmp);
t3=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_9798,a[2]=((C_word*)t0)[3],a[3]=t2,tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 368  bitwise-test");
f_6299(t3,((C_word*)t0)[2],C_fix(8));}}

/* k9796 in k9684 in k9592 in k9586 in k9583 in k9580 in next-1 in k7924 in k7921 in k5905 in k5612 in k5609 in k5605 in k5314 in k5311 in k5308 in k5305 */
static void C_ccall f_9798(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[3],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_9798,2,t0,t1);}
if(C_truep(t1)){
t2=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_9805,a[2]=((C_word*)t0)[3],tmp=(C_word)a,a+=3,tmp);
C_trace("ChickenBridge.scm: 368  period-length");
f_8803(t2,((C_word*)t0)[2]);}
else{
t2=((C_word*)t0)[3];
f_9709(t2,C_SCHEME_FALSE);}}

/* k9803 in k9796 in k9684 in k9592 in k9586 in k9583 in k9580 in next-1 in k7924 in k7921 in k5905 in k5612 in k5609 in k5605 in k5314 in k5311 in k5308 in k5305 */
static void C_ccall f_9805(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
t2=((C_word*)t0)[2];
f_9709(t2,(C_word)C_eqp(t1,C_SCHEME_TRUE));}

/* k9707 in k9684 in k9592 in k9586 in k9583 in k9580 in next-1 in k7924 in k7921 in k5905 in k5612 in k5609 in k5605 in k5314 in k5311 in k5308 in k5305 */
static void C_fcall f_9709(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_9709,NULL,2,t0,t1);}
t2=C_SCHEME_UNDEFINED;
t3=(*a=C_VECTOR_TYPE|1,a[1]=t2,tmp=(C_word)a,a+=2,tmp);
t4=C_set_block_item(t3,0,(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_9711,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=t3,a[5]=((C_word*)t0)[5],a[6]=((C_word)li134),tmp=(C_word)a,a+=7,tmp));
t5=((C_word*)t3)[1];
f_9711(t5,((C_word*)t0)[2],t1,C_SCHEME_FALSE);}

/* do936 in k9707 in k9684 in k9592 in k9586 in k9583 in k9580 in next-1 in k7924 in k7921 in k5905 in k5612 in k5609 in k5605 in k5314 in k5311 in k5308 in k5305 */
static void C_fcall f_9711(C_word t0,C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word ab[19],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_9711,NULL,4,t0,t1,t2,t3);}
t4=(*a=C_VECTOR_TYPE|1,a[1]=t3,tmp=(C_word)a,a+=2,tmp);
if(C_truep(((C_word*)t4)[1])){
t5=t1;
((C_proc2)(void*)(*((C_word*)t5+1)))(2,t5,C_SCHEME_FALSE);}
else{
t5=(*a=C_CLOSURE_TYPE|8,a[1]=(C_word)f_9718,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=t4,a[5]=t2,a[6]=t1,a[7]=((C_word*)t0)[4],a[8]=((C_word*)t0)[5],tmp=(C_word)a,a+=9,tmp);
t6=C_SCHEME_UNDEFINED;
t7=(*a=C_VECTOR_TYPE|1,a[1]=t6,tmp=(C_word)a,a+=2,tmp);
t8=C_set_block_item(t7,0,(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_9760,a[2]=t2,a[3]=((C_word*)t0)[3],a[4]=t7,a[5]=((C_word)li133),tmp=(C_word)a,a+=6,tmp));
t9=((C_word*)t7)[1];
f_9760(t9,t5);}}

/* do940 in do936 in k9707 in k9684 in k9592 in k9586 in k9583 in k9580 in next-1 in k7924 in k7921 in k5905 in k5612 in k5609 in k5605 in k5314 in k5311 in k5308 in k5305 */
static void C_fcall f_9760(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[6],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_9760,NULL,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_9795,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=t1,a[5]=((C_word*)t0)[4],tmp=(C_word)a,a+=6,tmp);
C_trace("ChickenBridge.scm: 368  pattern-datum");
f_8989(t2,((C_word*)t0)[3]);}

/* k9793 in do940 in do936 in k9707 in k9684 in k9592 in k9586 in k9583 in k9580 in next-1 in k7924 in k7921 in k5905 in k5612 in k5609 in k5605 in k5314 in k5311 in k5308 in k5305 */
static void C_ccall f_9795(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[11],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_9795,2,t0,t1);}
t2=(C_word)C_eqp(t1,lf[191]);
if(C_truep(t2)){
t3=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_9770,a[2]=((C_word*)t0)[4],a[3]=((C_word*)t0)[5],tmp=(C_word)a,a+=4,tmp);
t4=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_9777,a[2]=((C_word*)t0)[3],a[3]=t3,tmp=(C_word)a,a+=4,tmp);
if(C_truep(((C_word*)t0)[2])){
t5=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_9784,a[2]=t4,tmp=(C_word)a,a+=3,tmp);
C_trace("ChickenBridge.scm: 368  next-in-pattern");
f_9876(t5,((C_word*)t0)[3]);}
else{
C_trace("ChickenBridge.scm: 368  next-in-pattern");
f_9876(t4,((C_word*)t0)[3]);}}
else{
t3=((C_word*)t0)[4];
((C_proc2)(void*)(*((C_word*)t3+1)))(2,t3,C_SCHEME_FALSE);}}

/* k9782 in k9793 in do940 in do936 in k9707 in k9684 in k9592 in k9586 in k9583 in k9580 in next-1 in k7924 in k7921 in k5905 in k5612 in k5609 in k5605 in k5314 in k5311 in k5308 in k5305 */
static void C_ccall f_9784(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[4],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_9784,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_9929,a[2]=t1,a[3]=((C_word*)t0)[2],tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 368  pattern?");
f_8920(t2,t1);}

/* k9927 in k9782 in k9793 in do940 in do936 in k9707 in k9684 in k9592 in k9586 in k9583 in k9580 in next-1 in k7924 in k7921 in k5905 in k5612 in k5609 in k5605 in k5314 in k5311 in k5308 in k5305 */
static void C_ccall f_9929(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[4],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_9929,2,t0,t1);}
if(C_truep(t1)){
t2=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_9904,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 368  pattern-period");
f_9007(t2,((C_word*)t0)[2]);}
else{
t2=((C_word*)t0)[3];
f_9777(2,t2,((C_word*)t0)[2]);}}

/* k9902 in k9927 in k9782 in k9793 in do940 in do936 in k9707 in k9684 in k9592 in k9586 in k9583 in k9580 in next-1 in k7924 in k7921 in k5905 in k5612 in k5609 in k5605 in k5314 in k5311 in k5308 in k5305 */
static void C_ccall f_9904(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[5],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_9904,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_9925,a[2]=((C_word*)t0)[2],a[3]=t1,a[4]=((C_word*)t0)[3],tmp=(C_word)a,a+=5,tmp);
C_trace("ChickenBridge.scm: 368  period-omit");
f_8857(t2,t1);}

/* k9923 in k9902 in k9927 in k9782 in k9793 in do940 in do936 in k9707 in k9684 in k9592 in k9586 in k9583 in k9580 in next-1 in k7924 in k7921 in k5905 in k5612 in k5609 in k5605 in k5314 in k5311 in k5308 in k5305 */
static void C_ccall f_9925(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_9925,2,t0,t1);}
if(C_truep((C_word)C_i_greaterp(t1,C_fix(0)))){
t2=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_9913,a[2]=((C_word*)t0)[4],tmp=(C_word)a,a+=3,tmp);
t3=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_9921,a[2]=((C_word*)t0)[3],a[3]=t2,tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 368  period-omit");
f_8857(t3,((C_word*)t0)[3]);}
else{
t2=((C_word*)t0)[4];
f_9777(2,t2,((C_word*)t0)[2]);}}

/* k9919 in k9923 in k9902 in k9927 in k9782 in k9793 in do940 in do936 in k9707 in k9684 in k9592 in k9586 in k9583 in k9580 in next-1 in k7924 in k7921 in k5905 in k5612 in k5609 in k5605 in k5314 in k5311 in k5308 in k5305 */
static void C_ccall f_9921(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[4],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_9921,2,t0,t1);}
t2=(C_word)C_a_i_minus(&a,2,t1,C_fix(1));
C_trace("ChickenBridge.scm: 368  period-omit-set!");
f_8848(((C_word*)t0)[3],((C_word*)t0)[2],t2);}

/* k9911 in k9923 in k9902 in k9927 in k9782 in k9793 in do940 in do936 in k9707 in k9684 in k9592 in k9586 in k9583 in k9580 in next-1 in k7924 in k7921 in k5905 in k5612 in k5609 in k5605 in k5314 in k5311 in k5308 in k5305 */
static void C_ccall f_9913(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
t2=((C_word*)t0)[2];
f_9777(2,t2,lf[191]);}

/* k9775 in k9793 in do940 in do936 in k9707 in k9684 in k9592 in k9586 in k9583 in k9580 in next-1 in k7924 in k7921 in k5905 in k5612 in k5609 in k5605 in k5314 in k5311 in k5308 in k5305 */
static void C_ccall f_9777(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 368  pattern-datum-set!");
f_8980(((C_word*)t0)[3],((C_word*)t0)[2],t1);}

/* k9768 in k9793 in do940 in do936 in k9707 in k9684 in k9592 in k9586 in k9583 in k9580 in next-1 in k7924 in k7921 in k5905 in k5612 in k5609 in k5605 in k5314 in k5311 in k5308 in k5305 */
static void C_ccall f_9770(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
t2=((C_word*)((C_word*)t0)[3])[1];
f_9760(t2,((C_word*)t0)[2]);}

/* k9716 in do936 in k9707 in k9684 in k9592 in k9586 in k9583 in k9580 in next-1 in k7924 in k7921 in k5905 in k5612 in k5609 in k5605 in k5314 in k5311 in k5308 in k5305 */
static void C_ccall f_9718(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[12],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_9718,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|8,a[1]=(C_word)f_9722,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],a[7]=((C_word*)t0)[7],a[8]=((C_word*)t0)[8],tmp=(C_word)a,a+=9,tmp);
t3=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_9758,a[2]=t2,tmp=(C_word)a,a+=3,tmp);
C_trace("ChickenBridge.scm: 368  pattern-datum");
f_8989(t3,((C_word*)t0)[3]);}

/* k9756 in k9716 in do936 in k9707 in k9684 in k9592 in k9586 in k9583 in k9580 in next-1 in k7924 in k7921 in k5905 in k5612 in k5609 in k5605 in k5314 in k5311 in k5308 in k5305 */
static void C_ccall f_9758(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 368  next-1");
f_9575(((C_word*)t0)[2],t1);}

/* k9720 in k9716 in do936 in k9707 in k9684 in k9592 in k9586 in k9583 in k9580 in next-1 in k7924 in k7921 in k5905 in k5612 in k5609 in k5605 in k5314 in k5311 in k5308 in k5305 */
static void C_ccall f_9722(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[16],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_9722,2,t0,t1);}
t2=C_mutate(((C_word *)((C_word*)t0)[8])+1,t1);
t3=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_9725,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[8],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],a[7]=((C_word*)t0)[7],tmp=(C_word)a,a+=8,tmp);
t4=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_9741,a[2]=((C_word*)t0)[3],a[3]=t3,a[4]=((C_word*)t0)[2],tmp=(C_word)a,a+=5,tmp);
t5=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_9754,a[2]=t4,tmp=(C_word)a,a+=3,tmp);
C_trace("ChickenBridge.scm: 368  pattern-datum");
f_8989(t5,((C_word*)t0)[3]);}

/* k9752 in k9720 in k9716 in do936 in k9707 in k9684 in k9592 in k9586 in k9583 in k9580 in next-1 in k7924 in k7921 in k5905 in k5612 in k5609 in k5605 in k5314 in k5311 in k5308 in k5305 */
static void C_ccall f_9754(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 368  pattern?");
f_8920(((C_word*)t0)[2],t1);}

/* k9739 in k9720 in k9716 in do936 in k9707 in k9684 in k9592 in k9586 in k9583 in k9580 in next-1 in k7924 in k7921 in k5905 in k5612 in k5609 in k5605 in k5314 in k5311 in k5308 in k5305 */
static void C_ccall f_9741(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_9741,2,t0,t1);}
if(C_truep(t1)){
t2=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_9745,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],tmp=(C_word)a,a+=4,tmp);
t3=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_9749,a[2]=t2,tmp=(C_word)a,a+=3,tmp);
C_trace("ChickenBridge.scm: 368  pattern-datum");
f_8989(t3,((C_word*)t0)[2]);}
else{
t2=C_mutate(((C_word *)((C_word*)t0)[4])+1,lf[203]);
t3=((C_word*)t0)[3];
f_9725(t3,t2);}}

/* k9747 in k9739 in k9720 in k9716 in do936 in k9707 in k9684 in k9592 in k9586 in k9583 in k9580 in next-1 in k7924 in k7921 in k5905 in k5612 in k5609 in k5605 in k5314 in k5311 in k5308 in k5305 */
static void C_ccall f_9749(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 368  pattern-state");
f_9043(((C_word*)t0)[2],t1);}

/* k9743 in k9739 in k9720 in k9716 in do936 in k9707 in k9684 in k9592 in k9586 in k9583 in k9580 in next-1 in k7924 in k7921 in k5905 in k5612 in k5609 in k5605 in k5314 in k5311 in k5308 in k5305 */
static void C_ccall f_9745(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[3])+1,t1);
t3=((C_word*)t0)[2];
f_9725(t3,t2);}

/* k9723 in k9720 in k9716 in do936 in k9707 in k9684 in k9592 in k9586 in k9583 in k9580 in next-1 in k7924 in k7921 in k5905 in k5612 in k5609 in k5605 in k5314 in k5311 in k5308 in k5305 */
static void C_fcall f_9725(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[6],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_9725,NULL,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_9728,a[2]=((C_word*)t0)[4],a[3]=((C_word*)t0)[5],a[4]=((C_word*)t0)[6],a[5]=((C_word*)t0)[7],tmp=(C_word)a,a+=6,tmp);
t3=(C_word)C_eqp(((C_word*)((C_word*)t0)[3])[1],lf[191]);
if(C_truep(t3)){
C_trace("ChickenBridge.scm: 368  pattern-datum-set!");
f_8980(t2,((C_word*)t0)[2],((C_word*)((C_word*)t0)[3])[1]);}
else{
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=t2;
f_9728(2,t5,t4);}}

/* k9726 in k9723 in k9720 in k9716 in do936 in k9707 in k9684 in k9592 in k9586 in k9583 in k9580 in next-1 in k7924 in k7921 in k5905 in k5612 in k5609 in k5605 in k5314 in k5311 in k5308 in k5305 */
static void C_ccall f_9728(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
t2=((C_word*)((C_word*)t0)[5])[1];
f_9711(t2,((C_word*)t0)[4],((C_word*)t0)[3],((C_word*)((C_word*)t0)[2])[1]);}

/* k9700 in k9684 in k9592 in k9586 in k9583 in k9580 in next-1 in k7924 in k7921 in k5905 in k5612 in k5609 in k5605 in k5314 in k5311 in k5308 in k5305 */
static void C_ccall f_9702(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 368  pattern-datum-set!");
f_8980(((C_word*)t0)[3],((C_word*)t0)[2],t1);}

/* k9687 in k9684 in k9592 in k9586 in k9583 in k9580 in next-1 in k7924 in k7921 in k5905 in k5612 in k5609 in k5605 in k5314 in k5311 in k5308 in k5305 */
static void C_ccall f_9689(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[8],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_9689,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_9693,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],tmp=(C_word)a,a+=5,tmp);
t3=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_9698,a[2]=t2,tmp=(C_word)a,a+=3,tmp);
C_trace("ChickenBridge.scm: 368  pattern-datum");
f_8989(t3,((C_word*)t0)[2]);}

/* k9696 in k9687 in k9684 in k9592 in k9586 in k9583 in k9580 in next-1 in k7924 in k7921 in k5905 in k5612 in k5609 in k5605 in k5314 in k5311 in k5308 in k5305 */
static void C_ccall f_9698(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 368  next-1");
f_9575(((C_word*)t0)[2],t1);}

/* k9691 in k9687 in k9684 in k9592 in k9586 in k9583 in k9580 in next-1 in k7924 in k7921 in k5905 in k5612 in k5609 in k5605 in k5314 in k5311 in k5308 in k5305 */
static void C_ccall f_9693(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[4])+1,t1);
t3=C_mutate(((C_word *)((C_word*)t0)[3])+1,lf[203]);
t4=((C_word*)t0)[2];
f_9600(2,t4,t3);}

/* k9598 in k9592 in k9586 in k9583 in k9580 in next-1 in k7924 in k7921 in k5905 in k5612 in k5609 in k5605 in k5314 in k5311 in k5308 in k5305 */
static void C_ccall f_9600(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word ab[26],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_9600,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_9603,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],a[7]=((C_word*)t0)[8],tmp=(C_word)a,a+=8,tmp);
t3=(C_word)C_eqp(((C_word*)((C_word*)t0)[5])[1],lf[203]);
if(C_truep(t3)){
t4=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_9645,a[2]=((C_word*)t0)[6],a[3]=t2,a[4]=((C_word*)t0)[5],tmp=(C_word)a,a+=5,tmp);
t5=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_9657,a[2]=((C_word*)t0)[3],a[3]=t4,tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 368  period-count");
f_8785(t5,((C_word*)t0)[3]);}
else{
t4=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_9660,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=t2,tmp=(C_word)a,a+=5,tmp);
t5=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_9680,a[2]=((C_word*)t0)[6],a[3]=t4,tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 368  bitwise-test");
f_6299(t5,((C_word*)t0)[2],C_fix(64));}}

/* k9678 in k9598 in k9592 in k9586 in k9583 in k9580 in next-1 in k7924 in k7921 in k5905 in k5612 in k5609 in k5605 in k5314 in k5311 in k5308 in k5305 */
static void C_ccall f_9680(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
if(C_truep(t1)){
C_trace("ChickenBridge.scm: 368  pattern-datum-set!");
f_8980(((C_word*)t0)[3],((C_word*)t0)[2],lf[191]);}
else{
t2=((C_word*)t0)[3];
f_9660(2,t2,C_SCHEME_UNDEFINED);}}

/* k9658 in k9598 in k9592 in k9586 in k9583 in k9580 in next-1 in k7924 in k7921 in k5905 in k5612 in k5609 in k5605 in k5314 in k5311 in k5308 in k5305 */
static void C_ccall f_9660(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[4],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_9660,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_9666,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 368  bitwise-test");
f_6299(t2,((C_word*)t0)[2],C_fix(16));}

/* k9664 in k9658 in k9598 in k9592 in k9586 in k9583 in k9580 in next-1 in k7924 in k7921 in k5905 in k5612 in k5609 in k5605 in k5314 in k5311 in k5308 in k5305 */
static void C_ccall f_9666(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[4],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_9666,2,t0,t1);}
if(C_truep(t1)){
t2=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_9677,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 368  period-count");
f_8785(t2,((C_word*)t0)[2]);}
else{
t2=((C_word*)t0)[3];
f_9603(2,t2,C_SCHEME_UNDEFINED);}}

/* k9675 in k9664 in k9658 in k9598 in k9592 in k9586 in k9583 in k9580 in next-1 in k7924 in k7921 in k5905 in k5612 in k5609 in k5605 in k5314 in k5311 in k5308 in k5305 */
static void C_ccall f_9677(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[4],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_9677,2,t0,t1);}
t2=(C_word)C_a_i_minus(&a,2,t1,C_fix(1));
C_trace("ChickenBridge.scm: 368  period-count-set!");
f_8776(((C_word*)t0)[3],((C_word*)t0)[2],t2);}

/* k9655 in k9598 in k9592 in k9586 in k9583 in k9580 in next-1 in k7924 in k7921 in k5905 in k5612 in k5609 in k5605 in k5314 in k5311 in k5308 in k5305 */
static void C_ccall f_9657(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[4],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_9657,2,t0,t1);}
t2=(C_word)C_a_i_minus(&a,2,t1,C_fix(1));
C_trace("ChickenBridge.scm: 368  period-count-set!");
f_8776(((C_word*)t0)[3],((C_word*)t0)[2],t2);}

/* k9643 in k9598 in k9592 in k9586 in k9583 in k9580 in next-1 in k7924 in k7921 in k5905 in k5612 in k5609 in k5605 in k5314 in k5311 in k5308 in k5305 */
static void C_ccall f_9645(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[4],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_9645,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_9648,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 368  pattern-datum-set!");
f_8980(t2,((C_word*)t0)[2],lf[191]);}

/* k9646 in k9643 in k9598 in k9592 in k9586 in k9583 in k9580 in next-1 in k7924 in k7921 in k5905 in k5612 in k5609 in k5605 in k5314 in k5311 in k5308 in k5305 */
static void C_ccall f_9648(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word *a;
t2=C_set_block_item(((C_word*)t0)[3],0,C_SCHEME_FALSE);
t3=((C_word*)t0)[2];
f_9603(2,t3,t2);}

/* k9601 in k9598 in k9592 in k9586 in k9583 in k9580 in next-1 in k7924 in k7921 in k5905 in k5612 in k5609 in k5605 in k5314 in k5311 in k5308 in k5305 */
static void C_ccall f_9603(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[12],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_9603,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_9606,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_9639,a[2]=t2,a[3]=((C_word*)t0)[2],a[4]=((C_word*)t0)[4],tmp=(C_word)a,a+=5,tmp);
C_trace("ChickenBridge.scm: 368  period-count");
f_8785(t3,((C_word*)t0)[2]);}

/* k9637 in k9601 in k9598 in k9592 in k9586 in k9583 in k9580 in next-1 in k7924 in k7921 in k5905 in k5612 in k5609 in k5605 in k5314 in k5311 in k5308 in k5305 */
static void C_ccall f_9639(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[4],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_9639,2,t0,t1);}
if(C_truep((C_word)C_i_nequalp(t1,C_fix(0)))){
t2=C_mutate(((C_word *)((C_word*)t0)[4])+1,lf[203]);
t3=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_9634,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 368  period-reps");
f_8875(t3,((C_word*)t0)[3]);}
else{
t2=C_mutate(((C_word *)((C_word*)t0)[4])+1,((C_word*)((C_word*)t0)[4])[1]);
t3=((C_word*)t0)[2];
f_9606(2,t3,t2);}}

/* k9632 in k9637 in k9601 in k9598 in k9592 in k9586 in k9583 in k9580 in next-1 in k7924 in k7921 in k5905 in k5612 in k5609 in k5605 in k5314 in k5311 in k5308 in k5305 */
static void C_ccall f_9634(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[4],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_9634,2,t0,t1);}
t2=(C_word)C_a_i_plus(&a,2,C_fix(1),t1);
t3=((C_word*)t0)[3];
t4=(C_word)C_i_check_structure(t3,lf[166]);
C_trace("ChickenBridge.scm: 368  ##sys#block-set!");
t5=*((C_word*)lf[168]+1);
((C_proc5)(void*)(*((C_word*)t5+1)))(5,t5,((C_word*)t0)[2],t3,C_fix(6),t2);}

/* k9604 in k9601 in k9598 in k9592 in k9586 in k9583 in k9580 in next-1 in k7924 in k7921 in k5905 in k5612 in k5609 in k5605 in k5314 in k5311 in k5308 in k5305 */
static void C_ccall f_9606(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[10],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_9606,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_9609,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],tmp=(C_word)a,a+=6,tmp);
if(C_truep(((C_word*)t0)[2])){
t3=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_9619,a[2]=t2,a[3]=((C_word*)t0)[5],tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 368  retfn");
t4=((C_word*)t0)[2];
((C_proc3)C_retrieve_proc(t4))(3,t4,t3,((C_word*)((C_word*)t0)[5])[1]);}
else{
t3=t2;
f_9609(t3,C_SCHEME_UNDEFINED);}}

/* k9617 in k9604 in k9601 in k9598 in k9592 in k9586 in k9583 in k9580 in next-1 in k7924 in k7921 in k5905 in k5612 in k5609 in k5605 in k5314 in k5311 in k5308 in k5305 */
static void C_ccall f_9619(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[3])+1,t1);
t3=((C_word*)t0)[2];
f_9609(t3,t2);}

/* k9607 in k9604 in k9601 in k9598 in k9592 in k9586 in k9583 in k9580 in next-1 in k7924 in k7921 in k5905 in k5612 in k5609 in k5605 in k5314 in k5311 in k5308 in k5305 */
static void C_fcall f_9609(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[5],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_9609,NULL,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_9612,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],tmp=(C_word)a,a+=5,tmp);
C_trace("ChickenBridge.scm: 368  pattern-state-set!");
f_9034(t2,((C_word*)t0)[3],((C_word*)((C_word*)t0)[2])[1]);}

/* k9610 in k9607 in k9604 in k9601 in k9598 in k9592 in k9586 in k9583 in k9580 in next-1 in k7924 in k7921 in k5905 in k5612 in k5609 in k5605 in k5314 in k5311 in k5308 in k5305 */
static void C_ccall f_9612(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[4],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_9612,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_9615,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 368  pattern-value-set!");
f_9016(t2,((C_word*)t0)[2],((C_word*)((C_word*)t0)[3])[1]);}

/* k9613 in k9610 in k9607 in k9604 in k9601 in k9598 in k9592 in k9586 in k9583 in k9580 in next-1 in k7924 in k7921 in k5905 in k5612 in k5609 in k5605 in k5314 in k5311 in k5308 in k5305 */
static void C_ccall f_9615(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
t2=((C_word*)t0)[3];
((C_proc2)(void*)(*((C_word*)t2+1)))(2,t2,((C_word*)((C_word*)t0)[2])[1]);}

/* next in k7924 in k7921 in k5905 in k5612 in k5609 in k5605 in k5314 in k5311 in k5308 in k5305 */
static void C_ccall f_9452(C_word c,C_word t0,C_word t1,C_word t2,...){
C_word tmp;
C_word t3;
va_list v;
C_word *a,c2=c;
C_save_rest(t2,c2,3);
if(c<3) C_bad_min_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_demand(c*C_SIZEOF_PAIR+16)){
C_save_and_reclaim((void*)tr3rv,(void*)f_9452r,3,t0,t1,t2);}
else{
a=C_alloc((c-3)*3);
t3=C_restore_rest_vector(a,C_rest_count(0));
f_9452r(t0,t1,t2,t3);}}

static void C_ccall f_9452r(C_word t0,C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word *a=C_alloc(16);
t4=(C_word)C_vemptyp(t3);
t5=(C_truep(t4)?C_SCHEME_FALSE:(C_word)C_i_vector_ref(t3,C_fix(0)));
if(C_truep(t5)){
if(C_truep((C_word)C_i_numberp(t5))){
t6=(C_word)C_a_i_list(&a,1,C_SCHEME_FALSE);
t7=C_SCHEME_UNDEFINED;
t8=(*a=C_VECTOR_TYPE|1,a[1]=t7,tmp=(C_word)a,a+=2,tmp);
t9=C_set_block_item(t8,0,(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_9473,a[2]=t2,a[3]=t8,a[4]=t6,a[5]=t5,a[6]=((C_word)li130),tmp=(C_word)a,a+=7,tmp));
t10=((C_word*)t8)[1];
f_9473(t10,t1,C_fix(0),t6);}
else{
t6=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_9511,a[2]=t1,a[3]=t2,tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 368  pattern?");
f_8920(t6,t2);}}
else{
C_trace("ChickenBridge.scm: 368  next-1");
f_9575(t1,t2);}}

/* k9509 in next in k7924 in k7921 in k5905 in k5612 in k5609 in k5605 in k5314 in k5311 in k5308 in k5305 */
static void C_ccall f_9511(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[11],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_9511,2,t0,t1);}
if(C_truep(t1)){
t2=(C_word)C_a_i_list(&a,1,C_SCHEME_FALSE);
t3=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_9521,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=t2,tmp=(C_word)a,a+=5,tmp);
C_trace("ChickenBridge.scm: 368  next-1");
f_9575(t3,((C_word*)t0)[3]);}
else{
t2=((C_word*)t0)[2];
((C_proc2)(void*)(*((C_word*)t2+1)))(2,t2,(C_word)C_a_i_list(&a,1,((C_word*)t0)[3]));}}

/* k9519 in k9509 in next in k7924 in k7921 in k5905 in k5612 in k5609 in k5605 in k5314 in k5311 in k5308 in k5305 */
static void C_ccall f_9521(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[8],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_9521,2,t0,t1);}
t2=C_SCHEME_UNDEFINED;
t3=(*a=C_VECTOR_TYPE|1,a[1]=t2,tmp=(C_word)a,a+=2,tmp);
t4=C_set_block_item(t3,0,(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_9523,a[2]=((C_word*)t0)[3],a[3]=t3,a[4]=((C_word*)t0)[4],a[5]=((C_word)li131),tmp=(C_word)a,a+=6,tmp));
t5=((C_word*)t3)[1];
f_9523(t5,((C_word*)t0)[2],t1,((C_word*)t0)[4],C_SCHEME_FALSE);}

/* do912 in k9519 in k9509 in next in k7924 in k7921 in k5905 in k5612 in k5609 in k5605 in k5314 in k5311 in k5308 in k5305 */
static void C_fcall f_9523(C_word t0,C_word t1,C_word t2,C_word t3,C_word t4){
C_word tmp;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word ab[20],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_9523,NULL,5,t0,t1,t2,t3,t4);}
t5=(*a=C_VECTOR_TYPE|1,a[1]=t2,tmp=(C_word)a,a+=2,tmp);
t6=(*a=C_VECTOR_TYPE|1,a[1]=t4,tmp=(C_word)a,a+=2,tmp);
t7=(C_word)C_eqp(((C_word*)t5)[1],lf[205]);
t8=(C_truep(t7)?t7:((C_word*)t6)[1]);
if(C_truep(t8)){
t9=t1;
((C_proc2)(void*)(*((C_word*)t9+1)))(2,t9,(C_word)C_i_cdr(((C_word*)t0)[4]));}
else{
t9=(C_word)C_a_i_list(&a,1,((C_word*)t5)[1]);
t10=(C_word)C_i_set_cdr(t3,t9);
t11=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_9542,a[2]=t6,a[3]=t5,a[4]=t1,a[5]=((C_word*)t0)[3],a[6]=t3,tmp=(C_word)a,a+=7,tmp);
t12=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_9552,a[2]=((C_word*)t0)[2],a[3]=t5,a[4]=t11,a[5]=t6,tmp=(C_word)a,a+=6,tmp);
C_trace("ChickenBridge.scm: 368  eop?");
t13=C_retrieve(lf[202]);
((C_proc3)C_retrieve_proc(t13))(3,t13,t12,((C_word*)t0)[2]);}}

/* k9550 in do912 in k9519 in k9509 in next in k7924 in k7921 in k5905 in k5612 in k5609 in k5605 in k5314 in k5311 in k5308 in k5305 */
static void C_ccall f_9552(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[4],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_9552,2,t0,t1);}
if(C_truep(t1)){
t2=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t3=((C_word*)t0)[4];
f_9542(t3,t2);}
else{
t2=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_9557,a[2]=((C_word*)t0)[4],a[3]=((C_word*)t0)[3],tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 368  next-1");
f_9575(t2,((C_word*)t0)[2]);}}

/* k9555 in k9550 in do912 in k9519 in k9509 in next in k7924 in k7921 in k5905 in k5612 in k5609 in k5605 in k5314 in k5311 in k5308 in k5305 */
static void C_ccall f_9557(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[3])+1,t1);
t3=((C_word*)t0)[2];
f_9542(t3,t2);}

/* k9540 in do912 in k9519 in k9509 in next in k7924 in k7921 in k5905 in k5612 in k5609 in k5605 in k5314 in k5311 in k5308 in k5305 */
static void C_fcall f_9542(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word *a;
t2=(C_word)C_i_cdr(((C_word*)t0)[6]);
t3=((C_word*)((C_word*)t0)[5])[1];
f_9523(t3,((C_word*)t0)[4],((C_word*)((C_word*)t0)[3])[1],t2,((C_word*)((C_word*)t0)[2])[1]);}

/* do905 in next in k7924 in k7921 in k5905 in k5612 in k5609 in k5605 in k5314 in k5311 in k5308 in k5305 */
static void C_fcall f_9473(C_word t0,C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word ab[6],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_9473,NULL,4,t0,t1,t2,t3);}
if(C_truep((C_word)C_i_greater_or_equalp(t2,((C_word*)t0)[5]))){
t4=t1;
((C_proc2)(void*)(*((C_word*)t4+1)))(2,t4,(C_word)C_i_cdr(((C_word*)t0)[4]));}
else{
t4=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_9505,a[2]=t1,a[3]=((C_word*)t0)[3],a[4]=t2,a[5]=t3,tmp=(C_word)a,a+=6,tmp);
C_trace("ChickenBridge.scm: 368  next-1");
f_9575(t4,((C_word*)t0)[2]);}}

/* k9503 in do905 in next in k7924 in k7921 in k5905 in k5612 in k5609 in k5605 in k5314 in k5311 in k5308 in k5305 */
static void C_ccall f_9505(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_9505,2,t0,t1);}
t2=(C_word)C_a_i_list(&a,1,t1);
t3=(C_word)C_i_set_cdr(((C_word*)t0)[5],t2);
t4=(C_word)C_a_i_plus(&a,2,C_fix(1),((C_word*)t0)[4]);
t5=(C_word)C_i_cdr(((C_word*)t0)[5]);
t6=((C_word*)((C_word*)t0)[3])[1];
f_9473(t6,((C_word*)t0)[2],t4,t5);}

/* eod? in k7924 in k7921 in k5905 in k5612 in k5609 in k5605 in k5314 in k5311 in k5308 in k5305 */
static void C_ccall f_9433(C_word c,C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word ab[4],*a=ab;
if(c!=3) C_bad_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr3,(void*)f_9433,3,t0,t1,t2);}
t3=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_9440,a[2]=t2,a[3]=t1,tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 368  pattern?");
f_8920(t3,t2);}

/* k9438 in eod? in k7924 in k7921 in k5905 in k5612 in k5609 in k5605 in k5314 in k5311 in k5308 in k5305 */
static void C_ccall f_9440(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[3],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_9440,2,t0,t1);}
if(C_truep(t1)){
t2=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_9447,a[2]=((C_word*)t0)[3],tmp=(C_word)a,a+=3,tmp);
C_trace("ChickenBridge.scm: 368  pattern-value");
t3=C_retrieve2(lf[185],"pattern-value");
((C_proc3)C_retrieve_proc(t3))(3,t3,t2,((C_word*)t0)[2]);}
else{
t2=((C_word*)t0)[3];
((C_proc2)(void*)(*((C_word*)t2+1)))(2,t2,(C_word)C_eqp(((C_word*)t0)[2],lf[205]));}}

/* k9445 in k9438 in eod? in k7924 in k7921 in k5905 in k5612 in k5609 in k5605 in k5314 in k5311 in k5308 in k5305 */
static void C_ccall f_9447(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 368  eod?");
t2=C_retrieve(lf[204]);
((C_proc3)C_retrieve_proc(t2))(3,t2,((C_word*)t0)[2],t1);}

/* eop? in k7924 in k7921 in k5905 in k5612 in k5609 in k5605 in k5314 in k5311 in k5308 in k5305 */
static void C_ccall f_9414(C_word c,C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word ab[4],*a=ab;
if(c!=3) C_bad_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr3,(void*)f_9414,3,t0,t1,t2);}
t3=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_9421,a[2]=t2,a[3]=t1,tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 368  pattern?");
f_8920(t3,t2);}

/* k9419 in eop? in k7924 in k7921 in k5905 in k5612 in k5609 in k5605 in k5314 in k5311 in k5308 in k5305 */
static void C_ccall f_9421(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[3],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_9421,2,t0,t1);}
if(C_truep(t1)){
t2=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_9428,a[2]=((C_word*)t0)[3],tmp=(C_word)a,a+=3,tmp);
C_trace("ChickenBridge.scm: 368  pattern-state");
f_9043(t2,((C_word*)t0)[2]);}
else{
t2=((C_word*)t0)[3];
((C_proc2)(void*)(*((C_word*)t2+1)))(2,t2,(C_word)C_eqp(((C_word*)t0)[2],lf[203]));}}

/* k9426 in k9419 in eop? in k7924 in k7921 in k5905 in k5612 in k5609 in k5605 in k5314 in k5311 in k5308 in k5305 */
static void C_ccall f_9428(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 368  eop?");
t2=C_retrieve(lf[202]);
((C_proc3)C_retrieve_proc(t2))(3,t2,((C_word*)t0)[2],t1);}

/* initialize-pattern in k7924 in k7921 in k5905 in k5612 in k5609 in k5605 in k5314 in k5311 in k5308 in k5305 */
static void C_fcall f_9234(C_word t1,C_word t2,C_word t3,C_word t4,C_word t5,C_word t6,C_word t7,C_word t8,C_word t9,C_word t10){
C_word tmp;
C_word t11;
C_word t12;
C_word t13;
C_word ab[13],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_9234,NULL,10,t1,t2,t3,t4,t5,t6,t7,t8,t9,t10);}
t11=(*a=C_VECTOR_TYPE|1,a[1]=t6,tmp=(C_word)a,a+=2,tmp);
t12=(*a=C_CLOSURE_TYPE|10,a[1]=(C_word)f_9238,a[2]=t7,a[3]=t10,a[4]=t9,a[5]=t5,a[6]=t11,a[7]=t1,a[8]=t8,a[9]=t4,a[10]=t2,tmp=(C_word)a,a+=11,tmp);
C_trace("ChickenBridge.scm: 368  pattern-data-set!");
f_8944(t12,t2,t3);}

/* k9236 in initialize-pattern in k7924 in k7921 in k5905 in k5612 in k5609 in k5605 in k5314 in k5311 in k5308 in k5305 */
static void C_ccall f_9238(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[10],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_9238,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|9,a[1]=(C_word)f_9241,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],a[7]=((C_word*)t0)[8],a[8]=((C_word*)t0)[9],a[9]=((C_word*)t0)[10],tmp=(C_word)a,a+=10,tmp);
t3=((C_word*)t0)[10];
t4=((C_word*)t0)[2];
t5=(C_word)C_i_check_structure(t3,lf[176]);
C_trace("ChickenBridge.scm: 368  ##sys#block-set!");
t6=*((C_word*)lf[168]+1);
((C_proc5)(void*)(*((C_word*)t6+1)))(5,t6,t2,t3,C_fix(3),t4);}

/* k9239 in k9236 in initialize-pattern in k7924 in k7921 in k5905 in k5612 in k5609 in k5605 in k5314 in k5311 in k5308 in k5305 */
static void C_ccall f_9241(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_9241,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|8,a[1]=(C_word)f_9244,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],a[7]=((C_word*)t0)[8],a[8]=((C_word*)t0)[9],tmp=(C_word)a,a+=9,tmp);
t3=((C_word*)t0)[9];
t4=((C_word*)t0)[2];
t5=(C_word)C_i_check_structure(t3,lf[176]);
C_trace("ChickenBridge.scm: 368  ##sys#block-set!");
t6=*((C_word*)lf[168]+1);
((C_proc5)(void*)(*((C_word*)t6+1)))(5,t6,t2,t3,C_fix(13),t4);}

/* k9242 in k9239 in k9236 in initialize-pattern in k7924 in k7921 in k5905 in k5612 in k5609 in k5605 in k5314 in k5311 in k5308 in k5305 */
static void C_ccall f_9244(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[8],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_9244,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_9247,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],a[7]=((C_word*)t0)[8],tmp=(C_word)a,a+=8,tmp);
t3=((C_word*)t0)[8];
t4=((C_word*)t0)[2];
t5=(C_word)C_i_check_structure(t3,lf[176]);
C_trace("ChickenBridge.scm: 368  ##sys#block-set!");
t6=*((C_word*)lf[168]+1);
((C_proc5)(void*)(*((C_word*)t6+1)))(5,t6,t2,t3,C_fix(12),t4);}

/* k9245 in k9242 in k9239 in k9236 in initialize-pattern in k7924 in k7921 in k5905 in k5612 in k5609 in k5605 in k5314 in k5311 in k5308 in k5305 */
static void C_ccall f_9247(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[15],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_9247,2,t0,t1);}
t2=C_SCHEME_TRUE;
t3=(*a=C_VECTOR_TYPE|1,a[1]=t2,tmp=(C_word)a,a+=2,tmp);
t4=(*a=C_CLOSURE_TYPE|8,a[1]=(C_word)f_9250,a[2]=t3,a[3]=((C_word*)t0)[2],a[4]=((C_word*)t0)[3],a[5]=((C_word*)t0)[4],a[6]=((C_word*)t0)[5],a[7]=((C_word*)t0)[6],a[8]=((C_word*)t0)[7],tmp=(C_word)a,a+=9,tmp);
t5=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_9404,a[2]=t3,a[3]=((C_word)li126),tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 368  map-pattern-data");
f_9885(t4,t5,((C_word*)t0)[7]);}

/* a9403 in k9245 in k9242 in k9239 in k9236 in initialize-pattern in k7924 in k7921 in k5905 in k5612 in k5609 in k5605 in k5314 in k5311 in k5308 in k5305 */
static void C_ccall f_9404(C_word c,C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word ab[4],*a=ab;
if(c!=3) C_bad_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr3,(void*)f_9404,3,t0,t1,t2);}
t3=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_9411,a[2]=t1,a[3]=((C_word*)t0)[2],tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 368  pattern?");
f_8920(t3,t2);}

/* k9409 in a9403 in k9245 in k9242 in k9239 in k9236 in initialize-pattern in k7924 in k7921 in k5905 in k5612 in k5609 in k5605 in k5314 in k5311 in k5308 in k5305 */
static void C_ccall f_9411(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word *a;
if(C_truep(t1)){
t2=C_set_block_item(((C_word*)t0)[3],0,C_SCHEME_FALSE);
t3=((C_word*)t0)[2];
((C_proc2)(void*)(*((C_word*)t3+1)))(2,t3,t2);}
else{
t2=((C_word*)t0)[2];
((C_proc2)(void*)(*((C_word*)t2+1)))(2,t2,C_SCHEME_UNDEFINED);}}

/* k9248 in k9245 in k9242 in k9239 in k9236 in initialize-pattern in k7924 in k7921 in k5905 in k5612 in k5609 in k5605 in k5314 in k5311 in k5308 in k5305 */
static void C_ccall f_9250(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[12],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_9250,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_9253,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],a[7]=((C_word*)t0)[8],tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)((C_word*)t0)[2])[1])){
t3=(C_word)C_a_i_bitwise_ior(&a,2,((C_word*)((C_word*)t0)[4])[1],C_fix(1));
t4=C_mutate(((C_word *)((C_word*)t0)[4])+1,t3);
t5=t2;
f_9253(t5,t4);}
else{
t3=t2;
f_9253(t3,C_SCHEME_UNDEFINED);}}

/* k9251 in k9248 in k9245 in k9242 in k9239 in k9236 in initialize-pattern in k7924 in k7921 in k5905 in k5612 in k5609 in k5605 in k5314 in k5311 in k5308 in k5305 */
static void C_fcall f_9253(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word ab[16],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_9253,NULL,2,t0,t1);}
t2=((C_word*)t0)[7];
t3=(C_word)C_i_check_structure(t2,lf[176]);
t4=(C_word)C_i_block_ref(t2,C_fix(10));
t5=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_9259,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],a[7]=((C_word*)t0)[7],tmp=(C_word)a,a+=8,tmp);
t6=(C_word)C_eqp(t4,lf[192]);
if(C_truep(t6)){
t7=(C_word)C_a_i_bitwise_ior(&a,2,((C_word*)((C_word*)t0)[3])[1],C_fix(8));
t8=C_mutate(((C_word *)((C_word*)t0)[3])+1,t7);
t9=t5;
f_9259(2,t9,t8);}
else{
t7=(C_word)C_eqp(t4,lf[199]);
if(C_truep(t7)){
t8=(C_word)C_a_i_bitwise_ior(&a,2,((C_word*)((C_word*)t0)[3])[1],C_fix(16));
t9=C_mutate(((C_word *)((C_word*)t0)[3])+1,t8);
t10=t5;
f_9259(2,t10,t9);}
else{
C_trace("ChickenBridge.scm: 368  error");
t8=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t8))(4,t8,t5,lf[200],t4);}}}

/* k9257 in k9251 in k9248 in k9245 in k9242 in k9239 in k9236 in initialize-pattern in k7924 in k7921 in k5905 in k5612 in k5609 in k5605 in k5314 in k5311 in k5308 in k5305 */
static void C_ccall f_9259(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word ab[16],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_9259,2,t0,t1);}
t2=((C_word*)t0)[7];
t3=(C_word)C_i_check_structure(t2,lf[176]);
t4=(C_word)C_i_block_ref(t2,C_fix(11));
t5=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_9265,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[7],a[5]=((C_word*)t0)[4],a[6]=((C_word*)t0)[5],a[7]=((C_word*)t0)[6],tmp=(C_word)a,a+=8,tmp);
t6=(C_word)C_eqp(t4,lf[193]);
if(C_truep(t6)){
t7=(C_word)C_a_i_bitwise_ior(&a,2,((C_word*)((C_word*)t0)[3])[1],C_fix(32));
t8=C_mutate(((C_word *)((C_word*)t0)[3])+1,t7);
t9=t5;
f_9265(2,t9,t8);}
else{
t7=(C_word)C_eqp(t4,lf[197]);
if(C_truep(t7)){
t8=(C_word)C_a_i_bitwise_ior(&a,2,((C_word*)((C_word*)t0)[3])[1],C_fix(64));
t9=C_mutate(((C_word *)((C_word*)t0)[3])+1,t8);
t10=t5;
f_9265(2,t10,t9);}
else{
C_trace("ChickenBridge.scm: 368  error");
t8=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t8))(4,t8,t5,lf[198],t4);}}}

/* k9263 in k9257 in k9251 in k9248 in k9245 in k9242 in k9239 in k9236 in initialize-pattern in k7924 in k7921 in k5905 in k5612 in k5609 in k5605 in k5314 in k5311 in k5308 in k5305 */
static void C_ccall f_9265(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[12],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_9265,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_9268,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],a[7]=((C_word*)t0)[7],tmp=(C_word)a,a+=8,tmp);
t3=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_9328,a[2]=t2,a[3]=((C_word*)t0)[3],tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 368  bitwise-test");
f_6299(t3,((C_word*)((C_word*)t0)[3])[1],C_fix(16));}

/* k9326 in k9263 in k9257 in k9251 in k9248 in k9245 in k9242 in k9239 in k9236 in initialize-pattern in k7924 in k7921 in k5905 in k5612 in k5609 in k5605 in k5314 in k5311 in k5308 in k5305 */
static void C_ccall f_9328(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[8],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_9328,2,t0,t1);}
if(C_truep(t1)){
t2=(C_word)C_a_i_bitwise_and(&a,2,((C_word*)((C_word*)t0)[3])[1],lf[195]);
t3=C_mutate(((C_word *)((C_word*)t0)[3])+1,t2);
t4=((C_word*)t0)[2];
f_9268(t4,t3);}
else{
t2=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_9342,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 368  bitwise-test");
f_6299(t2,((C_word*)((C_word*)t0)[3])[1],C_fix(1));}}

/* k9340 in k9326 in k9263 in k9257 in k9251 in k9248 in k9245 in k9242 in k9239 in k9236 in initialize-pattern in k7924 in k7921 in k5905 in k5612 in k5609 in k5605 in k5314 in k5311 in k5308 in k5305 */
static void C_ccall f_9342(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word ab[12],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_9342,2,t0,t1);}
if(C_truep(t1)){
t2=(C_word)C_a_i_bitwise_and(&a,2,((C_word*)((C_word*)t0)[3])[1],lf[196]);
t3=(C_word)C_a_i_bitwise_ior(&a,2,t2,C_fix(16));
t4=C_mutate(((C_word *)((C_word*)t0)[3])+1,t3);
t5=((C_word*)t0)[2];
f_9268(t5,t4);}
else{
t2=(C_word)C_a_i_bitwise_ior(&a,2,((C_word*)((C_word*)t0)[3])[1],C_fix(8));
t3=C_mutate(((C_word *)((C_word*)t0)[3])+1,t2);
t4=((C_word*)t0)[2];
f_9268(t4,t3);}}

/* k9266 in k9263 in k9257 in k9251 in k9248 in k9245 in k9242 in k9239 in k9236 in initialize-pattern in k7924 in k7921 in k5905 in k5612 in k5609 in k5605 in k5314 in k5311 in k5308 in k5305 */
static void C_fcall f_9268(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_9268,NULL,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_9271,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_numberp(((C_word*)t0)[2]);
t4=(C_truep(t3)?(C_word)C_i_greaterp(((C_word*)t0)[2],C_fix(0)):C_SCHEME_FALSE);
t5=(C_truep(t4)?((C_word*)t0)[2]:C_fix(1073741823));
t6=((C_word*)t0)[4];
t7=(C_word)C_i_check_structure(t6,lf[176]);
C_trace("ChickenBridge.scm: 368  ##sys#block-set!");
t8=*((C_word*)lf[168]+1);
((C_proc5)(void*)(*((C_word*)t8+1)))(5,t8,t2,t6,C_fix(8),t5);}

/* k9269 in k9266 in k9263 in k9257 in k9251 in k9248 in k9245 in k9242 in k9239 in k9236 in initialize-pattern in k7924 in k7921 in k5905 in k5612 in k5609 in k5605 in k5314 in k5311 in k5308 in k5305 */
static void C_ccall f_9271(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word ab[11],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_9271,2,t0,t1);}
t2=((C_word*)t0)[6];
t3=(C_truep(t2)?t2:((C_word*)t0)[5]);
t4=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_9277,a[2]=((C_word*)t0)[5],a[3]=t3,a[4]=((C_word*)t0)[2],a[5]=((C_word*)t0)[3],a[6]=((C_word*)t0)[4],tmp=(C_word)a,a+=7,tmp);
t5=((C_word*)t0)[6];
if(C_truep(t5)){
t6=t4;
f_9277(t6,C_SCHEME_UNDEFINED);}
else{
t6=(C_word)C_a_i_bitwise_ior(&a,2,((C_word*)((C_word*)t0)[2])[1],C_fix(2));
t7=C_mutate(((C_word *)((C_word*)t0)[2])+1,t6);
t8=t4;
f_9277(t8,t7);}}

/* k9275 in k9269 in k9266 in k9263 in k9257 in k9251 in k9248 in k9245 in k9242 in k9239 in k9236 in initialize-pattern in k7924 in k7921 in k5905 in k5612 in k5609 in k5605 in k5314 in k5311 in k5308 in k5305 */
static void C_fcall f_9277(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_9277,NULL,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_9280,a[2]=((C_word*)t0)[4],a[3]=((C_word*)t0)[5],a[4]=((C_word*)t0)[6],tmp=(C_word)a,a+=5,tmp);
t3=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_9290,a[2]=t2,a[3]=((C_word*)t0)[5],tmp=(C_word)a,a+=4,tmp);
t4=(C_word)C_i_numberp(((C_word*)t0)[3]);
t5=(C_truep(t4)?t4:(C_word)C_eqp(((C_word*)t0)[3],C_SCHEME_TRUE));
if(C_truep(t5)){
C_trace("ChickenBridge.scm: 368  make-period");
f_8764(t3,C_fix(0),((C_word*)t0)[3],C_SCHEME_FALSE,((C_word*)t0)[2],C_fix(0),C_fix(0));}
else{
C_trace("ChickenBridge.scm: 368  make-period");
f_8764(t3,C_fix(0),C_SCHEME_FALSE,((C_word*)t0)[3],((C_word*)t0)[2],C_fix(0),C_fix(0));}}

/* k9288 in k9275 in k9269 in k9266 in k9263 in k9257 in k9251 in k9248 in k9245 in k9242 in k9239 in k9236 in initialize-pattern in k7924 in k7921 in k5905 in k5612 in k5609 in k5605 in k5314 in k5311 in k5308 in k5305 */
static void C_ccall f_9290(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word *a;
t2=((C_word*)t0)[3];
t3=(C_word)C_i_check_structure(t2,lf[176]);
C_trace("ChickenBridge.scm: 368  ##sys#block-set!");
t4=*((C_word*)lf[168]+1);
((C_proc5)(void*)(*((C_word*)t4+1)))(5,t4,((C_word*)t0)[2],t2,C_fix(5),t1);}

/* k9278 in k9275 in k9269 in k9266 in k9263 in k9257 in k9251 in k9248 in k9245 in k9242 in k9239 in k9236 in initialize-pattern in k7924 in k7921 in k5905 in k5612 in k5609 in k5605 in k5314 in k5311 in k5308 in k5305 */
static void C_ccall f_9280(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[3],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_9280,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_9283,a[2]=((C_word*)t0)[4],tmp=(C_word)a,a+=3,tmp);
t3=((C_word*)t0)[3];
t4=((C_word*)((C_word*)t0)[2])[1];
t5=(C_word)C_i_check_structure(t3,lf[176]);
C_trace("ChickenBridge.scm: 368  ##sys#block-set!");
t6=*((C_word*)lf[168]+1);
((C_proc5)(void*)(*((C_word*)t6+1)))(5,t6,t2,t3,C_fix(1),t4);}

/* k9281 in k9278 in k9275 in k9269 in k9266 in k9263 in k9257 in k9251 in k9248 in k9245 in k9242 in k9239 in k9236 in initialize-pattern in k7924 in k7921 in k5905 in k5612 in k5609 in k5605 in k5314 in k5311 in k5308 in k5305 */
static void C_ccall f_9283(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 368  values");
C_values(2,0,((C_word*)t0)[2]);}

/* %alloc-pattern in k7924 in k7921 in k5905 in k5612 in k5609 in k5605 in k5314 in k5311 in k5308 in k5305 */
static void C_fcall f_9224(C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word ab[16],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_9224,NULL,1,t1);}
t2=lf[191];
t3=lf[191];
t4=lf[191];
t5=lf[192];
t6=lf[193];
t7=t1;
((C_proc2)(void*)(*((C_word*)t7+1)))(2,t7,(C_word)C_a_i_record(&a,15,lf[176],C_fix(0),C_SCHEME_END_OF_LIST,C_SCHEME_FALSE,t2,C_SCHEME_FALSE,t3,t4,C_fix(1073741823),C_SCHEME_FALSE,t5,t6,C_SCHEME_FALSE,C_SCHEME_FALSE,C_SCHEME_FALSE));}

/* pattern-cache in k7924 in k7921 in k5905 in k5612 in k5609 in k5605 in k5314 in k5311 in k5308 in k5305 */
static void C_fcall f_9169(C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word *a;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_9169,NULL,2,t1,t2);}
t3=(C_word)C_i_check_structure(t2,lf[176]);
t4=t1;
((C_proc2)(void*)(*((C_word*)t4+1)))(2,t4,(C_word)C_i_block_ref(t2,C_fix(14)));}

/* pattern-cache-set! in k7924 in k7921 in k5905 in k5612 in k5609 in k5605 in k5314 in k5311 in k5308 in k5305 */
static void C_fcall f_9160(C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word *a;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_9160,NULL,3,t1,t2,t3);}
t4=(C_word)C_i_check_structure(t2,lf[176]);
C_trace("ChickenBridge.scm: 368  ##sys#block-set!");
t5=*((C_word*)lf[168]+1);
((C_proc5)(void*)(*((C_word*)t5+1)))(5,t5,t1,t2,C_fix(14),t3);}

/* pattern-state in k7924 in k7921 in k5905 in k5612 in k5609 in k5605 in k5314 in k5311 in k5308 in k5305 */
static void C_fcall f_9043(C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word *a;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_9043,NULL,2,t1,t2);}
t3=(C_word)C_i_check_structure(t2,lf[176]);
t4=t1;
((C_proc2)(void*)(*((C_word*)t4+1)))(2,t4,(C_word)C_i_block_ref(t2,C_fix(7)));}

/* pattern-state-set! in k7924 in k7921 in k5905 in k5612 in k5609 in k5605 in k5314 in k5311 in k5308 in k5305 */
static void C_fcall f_9034(C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word *a;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_9034,NULL,3,t1,t2,t3);}
t4=(C_word)C_i_check_structure(t2,lf[176]);
C_trace("ChickenBridge.scm: 368  ##sys#block-set!");
t5=*((C_word*)lf[168]+1);
((C_proc5)(void*)(*((C_word*)t5+1)))(5,t5,t1,t2,C_fix(7),t3);}

/* f_9025 in k7924 in k7921 in k5905 in k5612 in k5609 in k5605 in k5314 in k5311 in k5308 in k5305 */
static void C_ccall f_9025(C_word c,C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word *a;
if(c!=3) C_bad_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr3,(void*)f_9025,3,t0,t1,t2);}
t3=(C_word)C_i_check_structure(t2,lf[176]);
t4=t1;
((C_proc2)(void*)(*((C_word*)t4+1)))(2,t4,(C_word)C_i_block_ref(t2,C_fix(6)));}

/* pattern-value-set! in k7924 in k7921 in k5905 in k5612 in k5609 in k5605 in k5314 in k5311 in k5308 in k5305 */
static void C_fcall f_9016(C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word *a;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_9016,NULL,3,t1,t2,t3);}
t4=(C_word)C_i_check_structure(t2,lf[176]);
C_trace("ChickenBridge.scm: 368  ##sys#block-set!");
t5=*((C_word*)lf[168]+1);
((C_proc5)(void*)(*((C_word*)t5+1)))(5,t5,t1,t2,C_fix(6),t3);}

/* pattern-period in k7924 in k7921 in k5905 in k5612 in k5609 in k5605 in k5314 in k5311 in k5308 in k5305 */
static void C_fcall f_9007(C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word *a;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_9007,NULL,2,t1,t2);}
t3=(C_word)C_i_check_structure(t2,lf[176]);
t4=t1;
((C_proc2)(void*)(*((C_word*)t4+1)))(2,t4,(C_word)C_i_block_ref(t2,C_fix(5)));}

/* pattern-datum in k7924 in k7921 in k5905 in k5612 in k5609 in k5605 in k5314 in k5311 in k5308 in k5305 */
static void C_fcall f_8989(C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word *a;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_8989,NULL,2,t1,t2);}
t3=(C_word)C_i_check_structure(t2,lf[176]);
t4=t1;
((C_proc2)(void*)(*((C_word*)t4+1)))(2,t4,(C_word)C_i_block_ref(t2,C_fix(4)));}

/* pattern-datum-set! in k7924 in k7921 in k5905 in k5612 in k5609 in k5605 in k5314 in k5311 in k5308 in k5305 */
static void C_fcall f_8980(C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word *a;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_8980,NULL,3,t1,t2,t3);}
t4=(C_word)C_i_check_structure(t2,lf[176]);
C_trace("ChickenBridge.scm: 368  ##sys#block-set!");
t5=*((C_word*)lf[168]+1);
((C_proc5)(void*)(*((C_word*)t5+1)))(5,t5,t1,t2,C_fix(4),t3);}

/* pattern-length in k7924 in k7921 in k5905 in k5612 in k5609 in k5605 in k5314 in k5311 in k5308 in k5305 */
static void C_fcall f_8971(C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word *a;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_8971,NULL,2,t1,t2);}
t3=(C_word)C_i_check_structure(t2,lf[176]);
t4=t1;
((C_proc2)(void*)(*((C_word*)t4+1)))(2,t4,(C_word)C_i_block_ref(t2,C_fix(3)));}

/* pattern-data in k7924 in k7921 in k5905 in k5612 in k5609 in k5605 in k5314 in k5311 in k5308 in k5305 */
static void C_fcall f_8953(C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word *a;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_8953,NULL,2,t1,t2);}
t3=(C_word)C_i_check_structure(t2,lf[176]);
t4=t1;
((C_proc2)(void*)(*((C_word*)t4+1)))(2,t4,(C_word)C_i_block_ref(t2,C_fix(2)));}

/* pattern-data-set! in k7924 in k7921 in k5905 in k5612 in k5609 in k5605 in k5314 in k5311 in k5308 in k5305 */
static void C_fcall f_8944(C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word *a;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_8944,NULL,3,t1,t2,t3);}
t4=(C_word)C_i_check_structure(t2,lf[176]);
C_trace("ChickenBridge.scm: 368  ##sys#block-set!");
t5=*((C_word*)lf[168]+1);
((C_proc5)(void*)(*((C_word*)t5+1)))(5,t5,t1,t2,C_fix(2),t3);}

/* pattern-flags in k7924 in k7921 in k5905 in k5612 in k5609 in k5605 in k5314 in k5311 in k5308 in k5305 */
static void C_fcall f_8935(C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word *a;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_8935,NULL,2,t1,t2);}
t3=(C_word)C_i_check_structure(t2,lf[176]);
t4=t1;
((C_proc2)(void*)(*((C_word*)t4+1)))(2,t4,(C_word)C_i_block_ref(t2,C_fix(1)));}

/* pattern? in k7924 in k7921 in k5905 in k5612 in k5609 in k5605 in k5314 in k5311 in k5308 in k5305 */
static void C_fcall f_8920(C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word *a;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_8920,NULL,2,t1,t2);}
t3=t1;
((C_proc2)(void*)(*((C_word*)t3+1)))(2,t3,(C_word)C_i_structurep(t2,lf[176]));}

/* period-reps in k7924 in k7921 in k5905 in k5612 in k5609 in k5605 in k5314 in k5311 in k5308 in k5305 */
static void C_fcall f_8875(C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word *a;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_8875,NULL,2,t1,t2);}
t3=(C_word)C_i_check_structure(t2,lf[166]);
t4=t1;
((C_proc2)(void*)(*((C_word*)t4+1)))(2,t4,(C_word)C_i_block_ref(t2,C_fix(6)));}

/* period-omit in k7924 in k7921 in k5905 in k5612 in k5609 in k5605 in k5314 in k5311 in k5308 in k5305 */
static void C_fcall f_8857(C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word *a;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_8857,NULL,2,t1,t2);}
t3=(C_word)C_i_check_structure(t2,lf[166]);
t4=t1;
((C_proc2)(void*)(*((C_word*)t4+1)))(2,t4,(C_word)C_i_block_ref(t2,C_fix(5)));}

/* period-omit-set! in k7924 in k7921 in k5905 in k5612 in k5609 in k5605 in k5314 in k5311 in k5308 in k5305 */
static void C_fcall f_8848(C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word *a;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_8848,NULL,3,t1,t2,t3);}
t4=(C_word)C_i_check_structure(t2,lf[166]);
C_trace("ChickenBridge.scm: 368  ##sys#block-set!");
t5=*((C_word*)lf[168]+1);
((C_proc5)(void*)(*((C_word*)t5+1)))(5,t5,t1,t2,C_fix(5),t3);}

/* period-stream in k7924 in k7921 in k5905 in k5612 in k5609 in k5605 in k5314 in k5311 in k5308 in k5305 */
static void C_fcall f_8821(C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word *a;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_8821,NULL,2,t1,t2);}
t3=(C_word)C_i_check_structure(t2,lf[166]);
t4=t1;
((C_proc2)(void*)(*((C_word*)t4+1)))(2,t4,(C_word)C_i_block_ref(t2,C_fix(3)));}

/* period-length in k7924 in k7921 in k5905 in k5612 in k5609 in k5605 in k5314 in k5311 in k5308 in k5305 */
static void C_fcall f_8803(C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word *a;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_8803,NULL,2,t1,t2);}
t3=(C_word)C_i_check_structure(t2,lf[166]);
t4=t1;
((C_proc2)(void*)(*((C_word*)t4+1)))(2,t4,(C_word)C_i_block_ref(t2,C_fix(2)));}

/* period-count in k7924 in k7921 in k5905 in k5612 in k5609 in k5605 in k5314 in k5311 in k5308 in k5305 */
static void C_fcall f_8785(C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word *a;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_8785,NULL,2,t1,t2);}
t3=(C_word)C_i_check_structure(t2,lf[166]);
t4=t1;
((C_proc2)(void*)(*((C_word*)t4+1)))(2,t4,(C_word)C_i_block_ref(t2,C_fix(1)));}

/* period-count-set! in k7924 in k7921 in k5905 in k5612 in k5609 in k5605 in k5314 in k5311 in k5308 in k5305 */
static void C_fcall f_8776(C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word *a;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_8776,NULL,3,t1,t2,t3);}
t4=(C_word)C_i_check_structure(t2,lf[166]);
C_trace("ChickenBridge.scm: 368  ##sys#block-set!");
t5=*((C_word*)lf[168]+1);
((C_proc5)(void*)(*((C_word*)t5+1)))(5,t5,t1,t2,C_fix(1),t3);}

/* make-period in k7924 in k7921 in k5905 in k5612 in k5609 in k5605 in k5314 in k5311 in k5308 in k5305 */
static void C_fcall f_8764(C_word t1,C_word t2,C_word t3,C_word t4,C_word t5,C_word t6,C_word t7){
C_word tmp;
C_word t8;
C_word ab[8],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_8764,NULL,7,t1,t2,t3,t4,t5,t6,t7);}
t8=t1;
((C_proc2)(void*)(*((C_word*)t8+1)))(2,t8,(C_word)C_a_i_record(&a,7,lf[166],t2,t3,t4,t5,t6,t7));}

/* transpose in k7924 in k7921 in k5905 in k5612 in k5609 in k5605 in k5314 in k5311 in k5308 in k5305 */
static void C_ccall f_8598(C_word c,C_word t0,C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word ab[20],*a=ab;
if(c!=4) C_bad_argc_2(c,4,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr4,(void*)f_8598,4,t0,t1,t2,t3);}
if(C_truep((C_word)C_i_numberp(t2))){
if(C_truep((C_word)C_i_numberp(t3))){
t4=(C_word)C_i_lessp(t2,C_fix(12));
t5=(C_truep(t4)?(C_word)C_i_lessp(t3,C_fix(12)):C_SCHEME_FALSE);
if(C_truep(t5)){
t6=(C_word)C_a_i_plus(&a,2,t2,t3);
C_trace("ChickenBridge.scm: 367  modulo");
t7=*((C_word*)lf[114]+1);
((C_proc4)C_retrieve_proc(t7))(4,t7,t1,t6,C_fix(12));}
else{
t6=t1;
((C_proc2)(void*)(*((C_word*)t6+1)))(2,t6,(C_word)C_a_i_plus(&a,2,t2,t3));}}
else{
t4=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_8644,a[2]=t1,a[3]=t2,tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 367  key");
t5=C_retrieve(lf[153]);
((C_proc3)C_retrieve_proc(t5))(3,t5,t4,t3);}}
else{
if(C_truep((C_word)C_i_pairp(t2))){
t4=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_8651,a[2]=((C_word)li100),tmp=(C_word)a,a+=3,tmp);
t5=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_8699,a[2]=t4,a[3]=t1,a[4]=t2,tmp=(C_word)a,a+=5,tmp);
if(C_truep((C_word)C_i_numberp(t3))){
t6=t5;
f_8699(2,t6,t3);}
else{
C_trace("ChickenBridge.scm: 367  key");
t6=C_retrieve(lf[153]);
((C_proc3)C_retrieve_proc(t6))(3,t6,t5,t3);}}
else{
C_trace("ChickenBridge.scm: 367  error");
t4=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t1,lf[162],t2);}}}

/* k8697 in transpose in k7924 in k7921 in k5905 in k5612 in k5609 in k5605 in k5314 in k5311 in k5308 in k5305 */
static void C_ccall f_8699(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word ab[12],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_8699,2,t0,t1);}
t2=(C_word)C_i_car(((C_word*)t0)[4]);
if(C_truep((C_word)C_i_numberp(t2))){
t3=(C_word)C_i_car(((C_word*)t0)[4]);
t4=(C_word)C_i_lessp(t3,C_fix(12));
t5=(C_truep(t4)?(C_word)C_i_lessp(t1,C_fix(12)):C_SCHEME_FALSE);
if(C_truep(t5)){
t6=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_8716,a[2]=t1,a[3]=((C_word)li101),tmp=(C_word)a,a+=4,tmp);
C_trace("map");
t7=*((C_word*)lf[17]+1);
((C_proc4)(void*)(*((C_word*)t7+1)))(4,t7,((C_word*)t0)[3],t6,((C_word*)t0)[4]);}
else{
C_trace("ChickenBridge.scm: 367  transpkeys");
f_8651(((C_word*)t0)[3],((C_word*)t0)[4],t1);}}
else{
t3=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_8744,a[2]=((C_word*)t0)[3],tmp=(C_word)a,a+=3,tmp);
t4=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_8748,a[2]=t1,a[3]=t3,a[4]=((C_word*)t0)[2],tmp=(C_word)a,a+=5,tmp);
C_trace("ChickenBridge.scm: 367  key");
t5=C_retrieve(lf[153]);
((C_proc3)C_retrieve_proc(t5))(3,t5,t4,((C_word*)t0)[4]);}}

/* k8746 in k8697 in transpose in k7924 in k7921 in k5905 in k5612 in k5609 in k5605 in k5314 in k5311 in k5308 in k5305 */
static void C_ccall f_8748(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 367  transpkeys");
f_8651(((C_word*)t0)[3],t1,((C_word*)t0)[2]);}

/* k8742 in k8697 in transpose in k7924 in k7921 in k5905 in k5612 in k5609 in k5605 in k5314 in k5311 in k5308 in k5305 */
static void C_ccall f_8744(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 367  note");
t2=C_retrieve(lf[151]);
((C_proc3)C_retrieve_proc(t2))(3,t2,((C_word*)t0)[2],t1);}

/* a8715 in k8697 in transpose in k7924 in k7921 in k5905 in k5612 in k5609 in k5605 in k5314 in k5311 in k5308 in k5305 */
static void C_ccall f_8716(C_word c,C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word ab[4],*a=ab;
if(c!=3) C_bad_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr3,(void*)f_8716,3,t0,t1,t2);}
t3=(C_word)C_a_i_plus(&a,2,t2,((C_word*)t0)[2]);
C_trace("ChickenBridge.scm: 367  modulo");
t4=*((C_word*)lf[114]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t1,t3,C_fix(12));}

/* transpkeys in transpose in k7924 in k7921 in k5905 in k5612 in k5609 in k5605 in k5314 in k5311 in k5308 in k5305 */
static void C_fcall f_8651(C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word ab[11],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_8651,NULL,3,t1,t2,t3);}
t4=(C_word)C_a_i_list(&a,1,C_SCHEME_FALSE);
t5=C_SCHEME_UNDEFINED;
t6=(*a=C_VECTOR_TYPE|1,a[1]=t5,tmp=(C_word)a,a+=2,tmp);
t7=C_set_block_item(t6,0,(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_8660,a[2]=t6,a[3]=t3,a[4]=t4,a[5]=((C_word)li99),tmp=(C_word)a,a+=6,tmp));
t8=((C_word*)t6)[1];
f_8660(t8,t1,t2,t4);}

/* do619 in transpkeys in transpose in k7924 in k7921 in k5905 in k5612 in k5609 in k5605 in k5314 in k5311 in k5308 in k5305 */
static void C_fcall f_8660(C_word t0,C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word t14;
C_word *a;
loop:
a=C_alloc(7);
C_check_for_interrupt;
if(!C_stack_probe(a)){
C_save_and_reclaim((void*)trf_8660,NULL,4,t0,t1,t2,t3);}
if(C_truep((C_word)C_i_nullp(t2))){
t4=t1;
((C_proc2)(void*)(*((C_word*)t4+1)))(2,t4,(C_word)C_i_cdr(((C_word*)t0)[4]));}
else{
t4=(C_word)C_i_car(t2);
t5=(C_word)C_a_i_plus(&a,2,((C_word*)t0)[3],t4);
t6=(C_word)C_a_i_list(&a,1,t5);
t7=(C_word)C_i_set_cdr(t3,t6);
t8=(C_word)C_i_cdr(t3);
t9=t3=t8;
t10=(C_word)C_i_cdr(t2);
t12=t1;
t13=t10;
t14=t3;
t1=t12;
t2=t13;
t3=t14;
goto loop;}}

/* k8642 in transpose in k7924 in k7921 in k5905 in k5612 in k5609 in k5605 in k5314 in k5311 in k5308 in k5305 */
static void C_ccall f_8644(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[4],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_8644,2,t0,t1);}
t2=(C_word)C_a_i_plus(&a,2,((C_word*)t0)[3],t1);
C_trace("ChickenBridge.scm: 367  note");
t3=C_retrieve(lf[151]);
((C_proc3)C_retrieve_proc(t3))(3,t3,((C_word*)t0)[2],t2);}

/* invert in k7924 in k7921 in k5905 in k5612 in k5609 in k5605 in k5314 in k5311 in k5308 in k5305 */
static void C_ccall f_8463(C_word c,C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word ab[17],*a=ab;
if(c!=3) C_bad_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr3,(void*)f_8463,3,t0,t1,t2);}
if(C_truep((C_word)C_i_numberp(t2))){
if(C_truep((C_word)C_i_lessp(t2,C_fix(12)))){
t3=(C_word)C_a_i_minus(&a,2,C_fix(12),t2);
C_trace("ChickenBridge.scm: 367  modulo");
t4=*((C_word*)lf[114]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t1,t3,C_fix(12));}
else{
C_trace("ChickenBridge.scm: 367  error");
t3=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t3))(4,t3,t1,lf[159],t2);}}
else{
if(C_truep((C_word)C_i_pairp(t2))){
t3=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_8493,a[2]=((C_word)li96),tmp=(C_word)a,a+=3,tmp);
t4=(C_word)C_i_car(t2);
if(C_truep((C_word)C_i_numberp(t4))){
t5=(C_word)C_i_car(t2);
if(C_truep((C_word)C_i_lessp(t5,C_fix(12)))){
t6=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_8563,a[2]=((C_word)li97),tmp=(C_word)a,a+=3,tmp);
C_trace("map");
t7=*((C_word*)lf[17]+1);
((C_proc4)(void*)(*((C_word*)t7+1)))(4,t7,t1,t6,t2);}
else{
C_trace("ChickenBridge.scm: 367  invkeys");
f_8493(t1,t2);}}
else{
t5=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_8585,a[2]=t1,tmp=(C_word)a,a+=3,tmp);
t6=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_8589,a[2]=t5,a[3]=t3,tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 367  key");
t7=C_retrieve(lf[153]);
((C_proc3)C_retrieve_proc(t7))(3,t7,t6,t2);}}
else{
C_trace("ChickenBridge.scm: 367  error");
t3=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t3))(4,t3,t1,lf[160],t2);}}}

/* k8587 in invert in k7924 in k7921 in k5905 in k5612 in k5609 in k5605 in k5314 in k5311 in k5308 in k5305 */
static void C_ccall f_8589(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 367  invkeys");
f_8493(((C_word*)t0)[2],t1);}

/* k8583 in invert in k7924 in k7921 in k5905 in k5612 in k5609 in k5605 in k5314 in k5311 in k5308 in k5305 */
static void C_ccall f_8585(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 367  note");
t2=C_retrieve(lf[151]);
((C_proc3)C_retrieve_proc(t2))(3,t2,((C_word*)t0)[2],t1);}

/* a8562 in invert in k7924 in k7921 in k5905 in k5612 in k5609 in k5605 in k5314 in k5311 in k5308 in k5305 */
static void C_ccall f_8563(C_word c,C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word ab[4],*a=ab;
if(c!=3) C_bad_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr3,(void*)f_8563,3,t0,t1,t2);}
t3=(C_word)C_a_i_minus(&a,2,C_fix(12),t2);
C_trace("ChickenBridge.scm: 367  modulo");
t4=*((C_word*)lf[114]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t1,t3,C_fix(12));}

/* invkeys in invert in k7924 in k7921 in k5905 in k5612 in k5609 in k5605 in k5314 in k5311 in k5308 in k5305 */
static void C_fcall f_8493(C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word ab[11],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_8493,NULL,2,t1,t2);}
t3=(C_word)C_i_car(t2);
t4=(C_word)C_a_i_list(&a,1,t3);
t5=(C_word)C_i_cdr(t2);
t6=C_SCHEME_UNDEFINED;
t7=(*a=C_VECTOR_TYPE|1,a[1]=t6,tmp=(C_word)a,a+=2,tmp);
t8=C_set_block_item(t7,0,(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_8509,a[2]=t7,a[3]=t3,a[4]=t4,a[5]=((C_word)li95),tmp=(C_word)a,a+=6,tmp));
t9=((C_word*)t7)[1];
f_8509(t9,t1,t5,t4);}

/* do604 in invkeys in invert in k7924 in k7921 in k5905 in k5612 in k5609 in k5605 in k5314 in k5311 in k5308 in k5305 */
static void C_fcall f_8509(C_word t0,C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word t14;
C_word t15;
C_word *a;
loop:
a=C_alloc(11);
C_check_for_interrupt;
if(!C_stack_probe(a)){
C_save_and_reclaim((void*)trf_8509,NULL,4,t0,t1,t2,t3);}
if(C_truep((C_word)C_i_nullp(t2))){
t4=t1;
((C_proc2)(void*)(*((C_word*)t4+1)))(2,t4,((C_word*)t0)[4]);}
else{
t4=(C_word)C_i_car(t2);
t5=(C_word)C_a_i_minus(&a,2,t4,((C_word*)t0)[3]);
t6=(C_word)C_a_i_minus(&a,2,((C_word*)t0)[3],t5);
t7=(C_word)C_a_i_list(&a,1,t6);
t8=(C_word)C_i_set_cdr(t3,t7);
t9=(C_word)C_i_cdr(t3);
t10=t3=t9;
t11=(C_word)C_i_cdr(t2);
t13=t1;
t14=t11;
t15=t3;
t1=t13;
t2=t14;
t3=t15;
goto loop;}}

/* pc in k7924 in k7921 in k5905 in k5612 in k5609 in k5605 in k5314 in k5311 in k5308 in k5305 */
static void C_ccall f_8418(C_word c,C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[6],*a=ab;
if(c!=3) C_bad_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr3,(void*)f_8418,3,t0,t1,t2);}
if(C_truep((C_word)C_i_numberp(t2))){
C_trace("ChickenBridge.scm: 367  modulo");
t3=*((C_word*)lf[114]+1);
((C_proc4)C_retrieve_proc(t3))(4,t3,t1,t2,C_fix(12));}
else{
if(C_truep((C_word)C_i_pairp(t2))){
t3=(C_word)C_i_car(t2);
if(C_truep((C_word)C_i_numberp(t3))){
C_trace("map");
t4=*((C_word*)lf[17]+1);
((C_proc4)(void*)(*((C_word*)t4+1)))(4,t4,t1,C_retrieve(lf[157]),t2);}
else{
t4=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_8450,a[2]=t1,tmp=(C_word)a,a+=3,tmp);
C_trace("ChickenBridge.scm: 367  key");
t5=C_retrieve(lf[153]);
((C_proc3)C_retrieve_proc(t5))(3,t5,t4,t2);}}
else{
t3=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_8461,a[2]=t1,tmp=(C_word)a,a+=3,tmp);
C_trace("ChickenBridge.scm: 367  key");
t4=C_retrieve(lf[153]);
((C_proc3)C_retrieve_proc(t4))(3,t4,t3,t2);}}}

/* k8459 in pc in k7924 in k7921 in k5905 in k5612 in k5609 in k5605 in k5314 in k5311 in k5308 in k5305 */
static void C_ccall f_8461(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 367  modulo");
t2=*((C_word*)lf[114]+1);
((C_proc4)C_retrieve_proc(t2))(4,t2,((C_word*)t0)[2],t1,C_fix(12));}

/* k8448 in pc in k7924 in k7921 in k5905 in k5612 in k5609 in k5605 in k5314 in k5311 in k5308 in k5305 */
static void C_ccall f_8450(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("map");
t2=*((C_word*)lf[17]+1);
((C_proc4)(void*)(*((C_word*)t2+1)))(4,t2,((C_word*)t0)[2],C_retrieve(lf[157]),t1);}

/* hz in k7924 in k7921 in k5905 in k5612 in k5609 in k5605 in k5314 in k5311 in k5308 in k5305 */
static void C_ccall f_8302(C_word c,C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word ab[13],*a=ab;
if(c!=3) C_bad_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr3,(void*)f_8302,3,t0,t1,t2);}
if(C_truep((C_word)C_i_listp(t2))){
t3=(C_word)C_a_i_list(&a,1,C_SCHEME_FALSE);
t4=C_SCHEME_UNDEFINED;
t5=(*a=C_VECTOR_TYPE|1,a[1]=t4,tmp=(C_word)a,a+=2,tmp);
t6=C_set_block_item(t5,0,(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_8317,a[2]=t5,a[3]=t3,a[4]=((C_word)li92),tmp=(C_word)a,a+=5,tmp));
t7=((C_word*)t5)[1];
f_8317(t7,t1,t2,lf[156],C_SCHEME_FALSE,t3);}
else{
if(C_truep((C_word)C_i_numberp(t2))){
C_trace("ChickenBridge.scm: 367  tb:keynum->hertz");
f_6452(t1,t2);}
else{
t3=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_8416,a[2]=t1,tmp=(C_word)a,a+=3,tmp);
C_trace("ChickenBridge.scm: 367  note-aux");
f_8030(t3,t2,C_SCHEME_FALSE,C_SCHEME_TRUE);}}}

/* k8414 in hz in k7924 in k7921 in k5905 in k5612 in k5609 in k5605 in k5314 in k5311 in k5308 in k5305 */
static void C_ccall f_8416(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
t2=((C_word*)t0)[2];
((C_proc2)(void*)(*((C_word*)t2+1)))(2,t2,(C_word)C_i_caddr(t1));}

/* do584 in hz in k7924 in k7921 in k5905 in k5612 in k5609 in k5605 in k5314 in k5311 in k5308 in k5305 */
static void C_fcall f_8317(C_word t0,C_word t1,C_word t2,C_word t3,C_word t4,C_word t5){
C_word tmp;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word t14;
C_word ab[21],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_8317,NULL,6,t0,t1,t2,t3,t4,t5);}
t6=(*a=C_VECTOR_TYPE|1,a[1]=t3,tmp=(C_word)a,a+=2,tmp);
t7=(*a=C_VECTOR_TYPE|1,a[1]=t4,tmp=(C_word)a,a+=2,tmp);
t8=(*a=C_VECTOR_TYPE|1,a[1]=t5,tmp=(C_word)a,a+=2,tmp);
if(C_truep((C_word)C_i_nullp(t2))){
t9=t1;
((C_proc2)(void*)(*((C_word*)t9+1)))(2,t9,(C_word)C_i_cdr(((C_word*)t0)[3]));}
else{
t9=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_8330,a[2]=t7,a[3]=t6,a[4]=t1,a[5]=((C_word*)t0)[2],a[6]=t2,a[7]=t8,tmp=(C_word)a,a+=8,tmp);
t10=(C_word)C_i_car(t2);
t11=(C_word)C_i_numberp(t10);
t12=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_8347,a[2]=t6,a[3]=t2,a[4]=t8,a[5]=t9,a[6]=t7,tmp=(C_word)a,a+=7,tmp);
if(C_truep(t11)){
t13=t12;
f_8347(t13,t11);}
else{
t13=(C_word)C_i_car(t2);
t14=t12;
f_8347(t14,(C_word)C_i_listp(t13));}}}

/* k8345 in do584 in hz in k7924 in k7921 in k5905 in k5612 in k5609 in k5605 in k5314 in k5311 in k5308 in k5305 */
static void C_fcall f_8347(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[11],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_8347,NULL,2,t0,t1);}
if(C_truep(t1)){
t2=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_8351,a[2]=((C_word*)t0)[4],a[3]=((C_word*)t0)[5],a[4]=((C_word*)t0)[6],tmp=(C_word)a,a+=5,tmp);
t3=(C_word)C_i_car(((C_word*)t0)[3]);
C_trace("ChickenBridge.scm: 367  hz");
t4=C_retrieve(lf[155]);
((C_proc3)C_retrieve_proc(t4))(3,t4,t2,t3);}
else{
t2=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_8366,a[2]=((C_word*)t0)[5],a[3]=((C_word*)t0)[2],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[6],tmp=(C_word)a,a+=6,tmp);
t3=(C_word)C_i_car(((C_word*)t0)[3]);
C_trace("ChickenBridge.scm: 367  note-aux");
f_8030(t2,t3,((C_word*)((C_word*)t0)[2])[1],C_SCHEME_TRUE);}}

/* k8364 in k8345 in do584 in hz in k7924 in k7921 in k5905 in k5612 in k5609 in k5605 in k5314 in k5311 in k5308 in k5305 */
static void C_ccall f_8366(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word ab[3],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_8366,2,t0,t1);}
t2=C_mutate(((C_word *)((C_word*)t0)[5])+1,t1);
t3=(C_word)C_i_caddr(((C_word*)((C_word*)t0)[5])[1]);
t4=(C_word)C_a_i_list(&a,1,t3);
t5=(C_word)C_i_set_cdr(((C_word*)((C_word*)t0)[4])[1],t4);
t6=(C_word)C_i_cddddr(((C_word*)((C_word*)t0)[5])[1]);
t7=(C_word)C_i_car(t6);
t8=C_mutate(((C_word *)((C_word*)t0)[3])+1,t7);
t9=((C_word*)t0)[2];
f_8330(t9,t8);}

/* k8349 in k8345 in do584 in hz in k7924 in k7921 in k5905 in k5612 in k5609 in k5605 in k5314 in k5311 in k5308 in k5305 */
static void C_ccall f_8351(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[3],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_8351,2,t0,t1);}
t2=C_mutate(((C_word *)((C_word*)t0)[4])+1,t1);
t3=(C_word)C_a_i_list(&a,1,((C_word*)((C_word*)t0)[4])[1]);
t4=((C_word*)t0)[3];
f_8330(t4,(C_word)C_i_set_cdr(((C_word*)((C_word*)t0)[2])[1],t3));}

/* k8328 in do584 in hz in k7924 in k7921 in k5905 in k5612 in k5609 in k5605 in k5314 in k5311 in k5308 in k5305 */
static void C_fcall f_8330(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word *a;
t2=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[7])[1]);
t3=C_mutate(((C_word *)((C_word*)t0)[7])+1,t2);
t4=(C_word)C_i_cdr(((C_word*)t0)[6]);
t5=((C_word*)((C_word*)t0)[5])[1];
f_8317(t5,((C_word*)t0)[4],t4,((C_word*)((C_word*)t0)[3])[1],((C_word*)((C_word*)t0)[2])[1],((C_word*)((C_word*)t0)[7])[1]);}

/* key in k7924 in k7921 in k5905 in k5612 in k5609 in k5605 in k5314 in k5311 in k5308 in k5305 */
static void C_ccall f_8180(C_word c,C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word ab[19],*a=ab;
if(c!=3) C_bad_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr3,(void*)f_8180,3,t0,t1,t2);}
if(C_truep((C_word)C_i_listp(t2))){
t3=(C_word)C_a_i_list(&a,1,C_SCHEME_FALSE);
t4=C_SCHEME_UNDEFINED;
t5=(*a=C_VECTOR_TYPE|1,a[1]=t4,tmp=(C_word)a,a+=2,tmp);
t6=C_set_block_item(t5,0,(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_8195,a[2]=t5,a[3]=t3,a[4]=((C_word)li90),tmp=(C_word)a,a+=5,tmp));
t7=((C_word*)t5)[1];
f_8195(t7,t1,t2,lf[154],C_SCHEME_FALSE,t3);}
else{
if(C_truep((C_word)C_i_numberp(t2))){
if(C_truep((C_word)C_i_greaterp(t2,C_fix(0)))){
t3=t1;
t4=t2;
t5=(C_word)C_a_i_bytevector(&a,1,C_fix(4));
t6=(C_word)C_i_foreign_flonum_argumentp(t4);
t7=t3;
((C_proc2)(void*)(*((C_word*)t7+1)))(2,t7,(C_word)stub228(t5,t6));}
else{
t3=t1;
((C_proc2)(void*)(*((C_word*)t3+1)))(2,t3,C_fix(-1));}}
else{
t3=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_8300,a[2]=t1,tmp=(C_word)a,a+=3,tmp);
C_trace("ChickenBridge.scm: 367  note-aux");
f_8030(t3,t2,C_SCHEME_FALSE,C_SCHEME_TRUE);}}}

/* k8298 in key in k7924 in k7921 in k5905 in k5612 in k5609 in k5605 in k5314 in k5311 in k5308 in k5305 */
static void C_ccall f_8300(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
t2=((C_word*)t0)[2];
((C_proc2)(void*)(*((C_word*)t2+1)))(2,t2,(C_word)C_i_cadr(t1));}

/* do568 in key in k7924 in k7921 in k5905 in k5612 in k5609 in k5605 in k5314 in k5311 in k5308 in k5305 */
static void C_fcall f_8195(C_word t0,C_word t1,C_word t2,C_word t3,C_word t4,C_word t5){
C_word tmp;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word t14;
C_word ab[21],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_8195,NULL,6,t0,t1,t2,t3,t4,t5);}
t6=(*a=C_VECTOR_TYPE|1,a[1]=t3,tmp=(C_word)a,a+=2,tmp);
t7=(*a=C_VECTOR_TYPE|1,a[1]=t4,tmp=(C_word)a,a+=2,tmp);
t8=(*a=C_VECTOR_TYPE|1,a[1]=t5,tmp=(C_word)a,a+=2,tmp);
if(C_truep((C_word)C_i_nullp(t2))){
t9=t1;
((C_proc2)(void*)(*((C_word*)t9+1)))(2,t9,(C_word)C_i_cdr(((C_word*)t0)[3]));}
else{
t9=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_8208,a[2]=t7,a[3]=t6,a[4]=t1,a[5]=((C_word*)t0)[2],a[6]=t2,a[7]=t8,tmp=(C_word)a,a+=8,tmp);
t10=(C_word)C_i_car(t2);
t11=(C_word)C_i_listp(t10);
t12=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_8225,a[2]=t6,a[3]=t2,a[4]=t8,a[5]=t9,a[6]=t7,tmp=(C_word)a,a+=7,tmp);
if(C_truep(t11)){
t13=t12;
f_8225(t13,t11);}
else{
t13=(C_word)C_i_car(t2);
t14=t12;
f_8225(t14,(C_word)C_i_numberp(t13));}}}

/* k8223 in do568 in key in k7924 in k7921 in k5905 in k5612 in k5609 in k5605 in k5314 in k5311 in k5308 in k5305 */
static void C_fcall f_8225(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[11],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_8225,NULL,2,t0,t1);}
if(C_truep(t1)){
t2=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_8229,a[2]=((C_word*)t0)[4],a[3]=((C_word*)t0)[5],a[4]=((C_word*)t0)[6],tmp=(C_word)a,a+=5,tmp);
t3=(C_word)C_i_car(((C_word*)t0)[3]);
C_trace("ChickenBridge.scm: 367  key");
t4=C_retrieve(lf[153]);
((C_proc3)C_retrieve_proc(t4))(3,t4,t2,t3);}
else{
t2=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_8244,a[2]=((C_word*)t0)[5],a[3]=((C_word*)t0)[2],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[6],tmp=(C_word)a,a+=6,tmp);
t3=(C_word)C_i_car(((C_word*)t0)[3]);
C_trace("ChickenBridge.scm: 367  note-aux");
f_8030(t2,t3,((C_word*)((C_word*)t0)[2])[1],C_SCHEME_TRUE);}}

/* k8242 in k8223 in do568 in key in k7924 in k7921 in k5905 in k5612 in k5609 in k5605 in k5314 in k5311 in k5308 in k5305 */
static void C_ccall f_8244(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word ab[3],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_8244,2,t0,t1);}
t2=C_mutate(((C_word *)((C_word*)t0)[5])+1,t1);
t3=(C_word)C_i_cadr(((C_word*)((C_word*)t0)[5])[1]);
t4=(C_word)C_a_i_list(&a,1,t3);
t5=(C_word)C_i_set_cdr(((C_word*)((C_word*)t0)[4])[1],t4);
t6=(C_word)C_i_cddddr(((C_word*)((C_word*)t0)[5])[1]);
t7=(C_word)C_i_car(t6);
t8=C_mutate(((C_word *)((C_word*)t0)[3])+1,t7);
t9=((C_word*)t0)[2];
f_8208(t9,t8);}

/* k8227 in k8223 in do568 in key in k7924 in k7921 in k5905 in k5612 in k5609 in k5605 in k5314 in k5311 in k5308 in k5305 */
static void C_ccall f_8229(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[3],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_8229,2,t0,t1);}
t2=C_mutate(((C_word *)((C_word*)t0)[4])+1,t1);
t3=(C_word)C_a_i_list(&a,1,((C_word*)((C_word*)t0)[4])[1]);
t4=((C_word*)t0)[3];
f_8208(t4,(C_word)C_i_set_cdr(((C_word*)((C_word*)t0)[2])[1],t3));}

/* k8206 in do568 in key in k7924 in k7921 in k5905 in k5612 in k5609 in k5605 in k5314 in k5311 in k5308 in k5305 */
static void C_fcall f_8208(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word *a;
t2=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[7])[1]);
t3=C_mutate(((C_word *)((C_word*)t0)[7])+1,t2);
t4=(C_word)C_i_cdr(((C_word*)t0)[6]);
t5=((C_word*)((C_word*)t0)[5])[1];
f_8195(t5,((C_word*)t0)[4],t4,((C_word*)((C_word*)t0)[3])[1],((C_word*)((C_word*)t0)[2])[1],((C_word*)((C_word*)t0)[7])[1]);}

/* note in k7924 in k7921 in k5905 in k5612 in k5609 in k5605 in k5314 in k5311 in k5308 in k5305 */
static void C_ccall f_8083(C_word c,C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word ab[13],*a=ab;
if(c!=3) C_bad_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr3,(void*)f_8083,3,t0,t1,t2);}
if(C_truep((C_word)C_i_listp(t2))){
t3=(C_word)C_a_i_list(&a,1,C_SCHEME_FALSE);
t4=C_SCHEME_UNDEFINED;
t5=(*a=C_VECTOR_TYPE|1,a[1]=t4,tmp=(C_word)a,a+=2,tmp);
t6=C_set_block_item(t5,0,(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_8098,a[2]=t5,a[3]=t3,a[4]=((C_word)li88),tmp=(C_word)a,a+=5,tmp));
t7=((C_word*)t5)[1];
f_8098(t7,t1,t2,lf[152],C_SCHEME_FALSE,t3);}
else{
t3=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_8178,a[2]=t1,tmp=(C_word)a,a+=3,tmp);
C_trace("ChickenBridge.scm: 367  note-aux");
f_8030(t3,t2,C_SCHEME_FALSE,C_SCHEME_TRUE);}}

/* k8176 in note in k7924 in k7921 in k5905 in k5612 in k5609 in k5605 in k5314 in k5311 in k5308 in k5305 */
static void C_ccall f_8178(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
t2=((C_word*)t0)[2];
((C_proc2)(void*)(*((C_word*)t2+1)))(2,t2,(C_word)C_i_car(t1));}

/* do554 in note in k7924 in k7921 in k5905 in k5612 in k5609 in k5605 in k5314 in k5311 in k5308 in k5305 */
static void C_fcall f_8098(C_word t0,C_word t1,C_word t2,C_word t3,C_word t4,C_word t5){
C_word tmp;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word t14;
C_word t15;
C_word ab[25],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_8098,NULL,6,t0,t1,t2,t3,t4,t5);}
t6=(*a=C_VECTOR_TYPE|1,a[1]=t3,tmp=(C_word)a,a+=2,tmp);
t7=(*a=C_VECTOR_TYPE|1,a[1]=t4,tmp=(C_word)a,a+=2,tmp);
t8=(*a=C_VECTOR_TYPE|1,a[1]=t5,tmp=(C_word)a,a+=2,tmp);
if(C_truep((C_word)C_i_nullp(t2))){
t9=t1;
((C_proc2)(void*)(*((C_word*)t9+1)))(2,t9,(C_word)C_i_cdr(((C_word*)t0)[3]));}
else{
t9=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_8111,a[2]=t7,a[3]=t6,a[4]=t1,a[5]=((C_word*)t0)[2],a[6]=t2,a[7]=t8,tmp=(C_word)a,a+=8,tmp);
t10=(C_word)C_i_car(t2);
if(C_truep((C_word)C_i_listp(t10))){
t11=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_8129,a[2]=t8,a[3]=t9,a[4]=t7,tmp=(C_word)a,a+=5,tmp);
t12=(C_word)C_i_car(t2);
C_trace("ChickenBridge.scm: 367  note");
t13=C_retrieve(lf[151]);
((C_proc3)C_retrieve_proc(t13))(3,t13,t11,t12);}
else{
t11=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_8144,a[2]=t8,a[3]=t9,a[4]=t6,a[5]=t7,tmp=(C_word)a,a+=6,tmp);
t12=(C_word)C_i_car(t2);
C_trace("ChickenBridge.scm: 367  note-aux");
f_8030(t11,t12,((C_word*)t6)[1],C_SCHEME_TRUE);}}}

/* k8142 in do554 in note in k7924 in k7921 in k5905 in k5612 in k5609 in k5605 in k5314 in k5311 in k5308 in k5305 */
static void C_ccall f_8144(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word ab[3],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_8144,2,t0,t1);}
t2=C_mutate(((C_word *)((C_word*)t0)[5])+1,t1);
t3=(C_word)C_i_cddddr(((C_word*)((C_word*)t0)[5])[1]);
t4=(C_word)C_i_car(t3);
t5=C_mutate(((C_word *)((C_word*)t0)[4])+1,t4);
t6=(C_word)C_i_car(((C_word*)((C_word*)t0)[5])[1]);
t7=(C_word)C_a_i_list(&a,1,t6);
t8=((C_word*)t0)[3];
f_8111(t8,(C_word)C_i_set_cdr(((C_word*)((C_word*)t0)[2])[1],t7));}

/* k8127 in do554 in note in k7924 in k7921 in k5905 in k5612 in k5609 in k5605 in k5314 in k5311 in k5308 in k5305 */
static void C_ccall f_8129(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[3],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_8129,2,t0,t1);}
t2=C_mutate(((C_word *)((C_word*)t0)[4])+1,t1);
t3=(C_word)C_a_i_list(&a,1,((C_word*)((C_word*)t0)[4])[1]);
t4=((C_word*)t0)[3];
f_8111(t4,(C_word)C_i_set_cdr(((C_word*)((C_word*)t0)[2])[1],t3));}

/* k8109 in do554 in note in k7924 in k7921 in k5905 in k5612 in k5609 in k5605 in k5314 in k5311 in k5308 in k5305 */
static void C_fcall f_8111(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word *a;
t2=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[7])[1]);
t3=C_mutate(((C_word *)((C_word*)t0)[7])+1,t2);
t4=(C_word)C_i_cdr(((C_word*)t0)[6]);
t5=((C_word*)((C_word*)t0)[5])[1];
f_8098(t5,((C_word*)t0)[4],t4,((C_word*)((C_word*)t0)[3])[1],((C_word*)((C_word*)t0)[2])[1],((C_word*)((C_word*)t0)[7])[1]);}

/* note-aux in k7924 in k7921 in k5905 in k5612 in k5609 in k5605 in k5314 in k5311 in k5308 in k5305 */
static void C_fcall f_8030(C_word t1,C_word t2,C_word t3,C_word t4){
C_word tmp;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word ab[21],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_8030,NULL,4,t1,t2,t3,t4);}
if(C_truep((C_word)C_i_numberp(t2))){
t5=t1;
t6=t2;
t7=t4;
if(C_truep((C_word)C_i_exactp(t6))){
t8=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_7980,a[2]=t6,a[3]=t7,a[4]=((C_word)li85),tmp=(C_word)a,a+=5,tmp);
C_trace("ChickenBridge.scm: 367  hash-table-ref");
t9=*((C_word*)lf[41]+1);
((C_proc5)C_retrieve_proc(t9))(5,t9,t5,C_retrieve2(lf[138],"*notes*"),t6,t8);}
else{
t8=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_8028,a[2]=t5,a[3]=t7,a[4]=t6,tmp=(C_word)a,a+=5,tmp);
C_trace("ChickenBridge.scm: 367  floor");
t9=*((C_word*)lf[149]+1);
((C_proc3)C_retrieve_proc(t9))(3,t9,t8,t6);}}
else{
if(C_truep((C_word)C_i_symbolp(t2))){
t5=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_8053,a[2]=t4,a[3]=t3,a[4]=t1,tmp=(C_word)a,a+=5,tmp);
C_trace("ChickenBridge.scm: 367  symbol->string");
t6=*((C_word*)lf[25]+1);
((C_proc3)C_retrieve_proc(t6))(3,t6,t5,t2);}
else{
if(C_truep((C_word)C_i_stringp(t2))){
C_trace("ChickenBridge.scm: 367  string->note-entry");
f_7928(t1,t2,t3,t4);}
else{
t5=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_8068,a[2]=t2,a[3]=t4,a[4]=t3,a[5]=t1,tmp=(C_word)a,a+=6,tmp);
C_trace("ChickenBridge.scm: 367  keyword?");
t6=C_retrieve(lf[13]);
((C_proc3)C_retrieve_proc(t6))(3,t6,t5,t2);}}}}

/* k8066 in note-aux in k7924 in k7921 in k5905 in k5612 in k5609 in k5605 in k5314 in k5311 in k5308 in k5305 */
static void C_ccall f_8068(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[5],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_8068,2,t0,t1);}
if(C_truep(t1)){
t2=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_8075,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],tmp=(C_word)a,a+=5,tmp);
C_trace("ChickenBridge.scm: 367  keyword->string");
t3=C_retrieve(lf[33]);
((C_proc3)C_retrieve_proc(t3))(3,t3,t2,((C_word*)t0)[2]);}
else{
if(C_truep(((C_word*)t0)[3])){
C_trace("ChickenBridge.scm: 367  error");
t2=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t2))(4,t2,((C_word*)t0)[5],lf[150],((C_word*)t0)[2]);}
else{
t2=((C_word*)t0)[5];
((C_proc2)(void*)(*((C_word*)t2+1)))(2,t2,C_SCHEME_FALSE);}}}

/* k8073 in k8066 in note-aux in k7924 in k7921 in k5905 in k5612 in k5609 in k5605 in k5314 in k5311 in k5308 in k5305 */
static void C_ccall f_8075(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 367  string->note-entry");
f_7928(((C_word*)t0)[4],t1,((C_word*)t0)[3],((C_word*)t0)[2]);}

/* k8051 in note-aux in k7924 in k7921 in k5905 in k5612 in k5609 in k5605 in k5314 in k5311 in k5308 in k5305 */
static void C_ccall f_8053(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 367  string->note-entry");
f_7928(((C_word*)t0)[4],t1,((C_word*)t0)[3],((C_word*)t0)[2]);}

/* k8026 in note-aux in k7924 in k7921 in k5905 in k5612 in k5609 in k5605 in k5314 in k5311 in k5308 in k5305 */
static void C_ccall f_8028(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[17],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_8028,2,t0,t1);}
t2=(C_word)C_i_inexact_to_exact(t1);
t3=(C_word)C_a_i_minus(&a,2,((C_word*)t0)[4],t2);
t4=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_8000,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[3],tmp=(C_word)a,a+=5,tmp);
if(C_truep((C_word)C_i_lessp(t3,lf[146]))){
t5=t4;
f_8000(t5,t2);}
else{
t5=(C_word)C_i_lessp(t3,lf[147]);
t6=t4;
f_8000(t6,(C_truep(t5)?(C_word)C_a_i_plus(&a,2,t2,lf[148]):(C_word)C_a_i_plus(&a,2,t2,C_fix(1))));}}

/* k7998 in k8026 in note-aux in k7924 in k7921 in k5905 in k5612 in k5609 in k5605 in k5314 in k5311 in k5308 in k5305 */
static void C_fcall f_8000(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[5],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_8000,NULL,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_8002,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word)li86),tmp=(C_word)a,a+=5,tmp);
C_trace("ChickenBridge.scm: 367  hash-table-ref");
t3=*((C_word*)lf[41]+1);
((C_proc5)C_retrieve_proc(t3))(5,t3,((C_word*)t0)[2],C_retrieve2(lf[138],"*notes*"),t1,t2);}

/* a8001 in k7998 in k8026 in note-aux in k7924 in k7921 in k5905 in k5612 in k5609 in k5605 in k5314 in k5311 in k5308 in k5305 */
static void C_ccall f_8002(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
if(c!=2) C_bad_argc_2(c,2,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_8002,2,t0,t1);}
if(C_truep(((C_word*)t0)[3])){
C_trace("ChickenBridge.scm: 367  error");
t2=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t2))(4,t2,t1,lf[145],((C_word*)t0)[2]);}
else{
t2=t1;
((C_proc2)(void*)(*((C_word*)t2+1)))(2,t2,C_SCHEME_FALSE);}}

/* a7979 in note-aux in k7924 in k7921 in k5905 in k5612 in k5609 in k5605 in k5314 in k5311 in k5308 in k5305 */
static void C_ccall f_7980(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
if(c!=2) C_bad_argc_2(c,2,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_7980,2,t0,t1);}
if(C_truep(((C_word*)t0)[3])){
C_trace("ChickenBridge.scm: 367  error");
t2=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t2))(4,t2,t1,lf[144],((C_word*)t0)[2]);}
else{
t2=t1;
((C_proc2)(void*)(*((C_word*)t2+1)))(2,t2,C_SCHEME_FALSE);}}

/* string->note-entry in k7924 in k7921 in k5905 in k5612 in k5609 in k5605 in k5314 in k5311 in k5308 in k5305 */
static void C_fcall f_7928(C_word t1,C_word t2,C_word t3,C_word t4){
C_word tmp;
C_word t5;
C_word t6;
C_word t7;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_7928,NULL,4,t1,t2,t3,t4);}
t5=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_7932,a[2]=t2,a[3]=t4,a[4]=t3,a[5]=t1,tmp=(C_word)a,a+=6,tmp);
t6=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_7965,a[2]=((C_word)li83),tmp=(C_word)a,a+=3,tmp);
C_trace("ChickenBridge.scm: 367  hash-table-ref");
t7=*((C_word*)lf[41]+1);
((C_proc5)C_retrieve_proc(t7))(5,t7,t5,C_retrieve2(lf[138],"*notes*"),t2,t6);}

/* a7964 in string->note-entry in k7924 in k7921 in k5905 in k5612 in k5609 in k5605 in k5314 in k5311 in k5308 in k5305 */
static void C_ccall f_7965(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
if(c!=2) C_bad_argc_2(c,2,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_7965,2,t0,t1);}
t2=t1;
((C_proc2)(void*)(*((C_word*)t2+1)))(2,t2,C_SCHEME_FALSE);}

/* k7930 in string->note-entry in k7924 in k7921 in k5905 in k5612 in k5609 in k5605 in k5314 in k5311 in k5308 in k5305 */
static void C_ccall f_7932(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[5],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_7932,2,t0,t1);}
t2=t1;
if(C_truep(t2)){
t3=((C_word*)t0)[5];
((C_proc2)(void*)(*((C_word*)t3+1)))(2,t3,t1);}
else{
if(C_truep(((C_word*)t0)[4])){
t3=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_7948,a[2]=((C_word*)t0)[5],a[3]=((C_word*)t0)[2],a[4]=((C_word*)t0)[3],tmp=(C_word)a,a+=5,tmp);
C_trace("ChickenBridge.scm: 367  string-append");
t4=*((C_word*)lf[141]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t3,((C_word*)t0)[2],((C_word*)t0)[4]);}
else{
if(C_truep(((C_word*)t0)[3])){
C_trace("ChickenBridge.scm: 367  error");
t3=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t3))(4,t3,((C_word*)t0)[5],lf[142],((C_word*)t0)[2]);}
else{
t3=((C_word*)t0)[5];
((C_proc2)(void*)(*((C_word*)t3+1)))(2,t3,C_SCHEME_FALSE);}}}}

/* k7946 in k7930 in string->note-entry in k7924 in k7921 in k5905 in k5612 in k5609 in k5605 in k5314 in k5311 in k5308 in k5305 */
static void C_ccall f_7948(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[5],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_7948,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_7950,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word)li82),tmp=(C_word)a,a+=5,tmp);
C_trace("ChickenBridge.scm: 367  hash-table-ref");
t3=*((C_word*)lf[41]+1);
((C_proc5)C_retrieve_proc(t3))(5,t3,((C_word*)t0)[2],C_retrieve2(lf[138],"*notes*"),t1,t2);}

/* a7949 in k7946 in k7930 in string->note-entry in k7924 in k7921 in k5905 in k5612 in k5609 in k5605 in k5314 in k5311 in k5308 in k5305 */
static void C_ccall f_7950(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
if(c!=2) C_bad_argc_2(c,2,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_7950,2,t0,t1);}
if(C_truep(((C_word*)t0)[3])){
C_trace("ChickenBridge.scm: 367  error");
t2=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t2))(4,t2,t1,lf[140],((C_word*)t0)[2]);}
else{
t2=t1;
((C_proc2)(void*)(*((C_word*)t2+1)))(2,t2,C_SCHEME_FALSE);}}

/* rangamma in k5905 in k5612 in k5609 in k5605 in k5314 in k5311 in k5308 in k5305 */
static void C_ccall f_7900(C_word c,C_word t0,C_word t1,...){
C_word tmp;
C_word t2;
va_list v;
C_word *a,c2=c;
C_save_rest(t1,c2,2);
C_check_for_interrupt;
if(!C_demand(c*C_SIZEOF_PAIR+0)){
C_save_and_reclaim((void*)tr2rv,(void*)f_7900r,2,t0,t1);}
else{
a=C_alloc((c-2)*3);
t2=C_restore_rest_vector(a,C_rest_count(0));
f_7900r(t0,t1,t2);}}

static void C_ccall f_7900r(C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
if(C_truep((C_word)C_vemptyp(t2))){
C_trace("ChickenBridge.scm: 367  tb:rangamma");
f_6550(t1,C_fix(1));}
else{
t3=(C_word)C_i_vector_ref(t2,C_fix(0));
C_trace("ChickenBridge.scm: 367  tb:rangamma");
f_6550(t1,t3);}}

/* ranpoisson in k5905 in k5612 in k5609 in k5605 in k5314 in k5311 in k5308 in k5305 */
static void C_ccall f_7881(C_word c,C_word t0,C_word t1,...){
C_word tmp;
C_word t2;
va_list v;
C_word *a,c2=c;
C_save_rest(t1,c2,2);
C_check_for_interrupt;
if(!C_demand(c*C_SIZEOF_PAIR+0)){
C_save_and_reclaim((void*)tr2rv,(void*)f_7881r,2,t0,t1);}
else{
a=C_alloc((c-2)*3);
t2=C_restore_rest_vector(a,C_rest_count(0));
f_7881r(t0,t1,t2);}}

static void C_ccall f_7881r(C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
if(C_truep((C_word)C_i_nullp(C_retrieve(lf[134])))){
C_trace("ChickenBridge.scm: 367  tb:ranpoisson");
f_6560(t1,C_fix(1));}
else{
t3=(C_word)C_i_vector_ref(t2,C_fix(0));
C_trace("ChickenBridge.scm: 367  tb:ranpoisson");
f_6560(t1,t3);}}

/* rangauss in k5905 in k5612 in k5609 in k5605 in k5314 in k5311 in k5308 in k5305 */
static void C_ccall f_7840(C_word c,C_word t0,C_word t1,...){
C_word tmp;
C_word t2;
va_list v;
C_word *a,c2=c;
C_save_rest(t1,c2,2);
C_check_for_interrupt;
if(!C_demand(c*C_SIZEOF_PAIR+0)){
C_save_and_reclaim((void*)tr2r,(void*)f_7840r,2,t0,t1);}
else{
a=C_alloc((c-2)*3);
t2=C_restore_rest(a,C_rest_count(0));
f_7840r(t0,t1,t2);}}

static void C_ccall f_7840r(C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
if(C_truep((C_word)C_i_nullp(t2))){
C_trace("ChickenBridge.scm: 367  tb:rangauss");
f_6521(t1,C_fix(1),C_fix(0));}
else{
t3=(C_word)C_i_cdr(t2);
if(C_truep((C_word)C_i_nullp(t3))){
t4=(C_word)C_i_car(t2);
C_trace("ChickenBridge.scm: 367  tb:rangauss");
f_6521(t1,t4,C_fix(0));}
else{
t4=(C_word)C_i_car(t2);
t5=(C_word)C_i_cdr(t2);
C_trace("ChickenBridge.scm: 367  tb:rangauss");
f_6521(t1,t4,t5);}}}

/* ranexp in k5905 in k5612 in k5609 in k5605 in k5314 in k5311 in k5308 in k5305 */
static void C_ccall f_7821(C_word c,C_word t0,C_word t1,...){
C_word tmp;
C_word t2;
va_list v;
C_word *a,c2=c;
C_save_rest(t1,c2,2);
C_check_for_interrupt;
if(!C_demand(c*C_SIZEOF_PAIR+0)){
C_save_and_reclaim((void*)tr2rv,(void*)f_7821r,2,t0,t1);}
else{
a=C_alloc((c-2)*3);
t2=C_restore_rest_vector(a,C_rest_count(0));
f_7821r(t0,t1,t2);}}

static void C_ccall f_7821r(C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
if(C_truep((C_word)C_vemptyp(t2))){
C_trace("ChickenBridge.scm: 367  tb:ranexp");
f_6532(t1,C_fix(1));}
else{
t3=(C_word)C_i_vector_ref(t2,C_fix(0));
C_trace("ChickenBridge.scm: 367  tb:ranexp");
f_6532(t1,t3);}}

/* ranbeta in k5905 in k5612 in k5609 in k5605 in k5314 in k5311 in k5308 in k5305 */
static void C_ccall f_7593(C_word c,C_word t0,C_word t1,...){
C_word tmp;
C_word t2;
va_list v;
C_word *a,c2=c;
C_save_rest(t1,c2,2);
C_check_for_interrupt;
if(!C_demand(c*C_SIZEOF_PAIR+44)){
C_save_and_reclaim((void*)tr2r,(void*)f_7593r,2,t0,t1);}
else{
a=C_alloc((c-2)*3);
t2=C_restore_rest(a,C_rest_count(0));
f_7593r(t0,t1,t2);}}

static void C_ccall f_7593r(C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word t14;
C_word t15;
C_word t16;
C_word t17;
C_word t18;
C_word t19;
C_word t20;
C_word t21;
C_word t22;
C_word *a=C_alloc(44);
t3=lf[127];
t4=(*a=C_VECTOR_TYPE|1,a[1]=t3,tmp=(C_word)a,a+=2,tmp);
t5=C_SCHEME_FALSE;
t6=(*a=C_VECTOR_TYPE|1,a[1]=t5,tmp=(C_word)a,a+=2,tmp);
t7=C_SCHEME_FALSE;
t8=(*a=C_VECTOR_TYPE|1,a[1]=t7,tmp=(C_word)a,a+=2,tmp);
t9=C_SCHEME_FALSE;
t10=(*a=C_VECTOR_TYPE|1,a[1]=t9,tmp=(C_word)a,a+=2,tmp);
t11=t2;
t12=(*a=C_VECTOR_TYPE|1,a[1]=t11,tmp=(C_word)a,a+=2,tmp);
t13=C_SCHEME_FALSE;
t14=(*a=C_VECTOR_TYPE|1,a[1]=t13,tmp=(C_word)a,a+=2,tmp);
t15=(*a=C_CLOSURE_TYPE|9,a[1]=(C_word)f_7597,a[2]=t10,a[3]=t14,a[4]=t8,a[5]=t2,a[6]=t12,a[7]=t6,a[8]=t4,a[9]=t1,tmp=(C_word)a,a+=10,tmp);
if(C_truep((C_word)C_i_nullp(((C_word*)t12)[1]))){
t16=t15;
f_7597(t16,C_SCHEME_UNDEFINED);}
else{
t16=(C_word)C_i_car(((C_word*)t12)[1]);
t17=(C_word)C_eqp(t16,lf[128]);
if(C_truep(t17)){
t18=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_7734,a[2]=t2,a[3]=t15,a[4]=t12,a[5]=t14,a[6]=t8,a[7]=t4,tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)t8)[1])){
C_trace("error");
t19=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t19))(4,t19,t18,lf[19],lf[128]);}
else{
t19=t18;
f_7734(2,t19,C_SCHEME_UNDEFINED);}}
else{
t18=(C_word)C_eqp(t16,lf[129]);
if(C_truep(t18)){
t19=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_7769,a[2]=t2,a[3]=t15,a[4]=t12,a[5]=t14,a[6]=t10,a[7]=t6,tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)t10)[1])){
C_trace("error");
t20=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t20))(4,t20,t19,lf[19],lf[129]);}
else{
t20=t19;
f_7769(2,t20,C_SCHEME_UNDEFINED);}}
else{
t19=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_7798,a[2]=t15,a[3]=t8,a[4]=t4,a[5]=t12,tmp=(C_word)a,a+=6,tmp);
if(C_truep(((C_word*)t14)[1])){
C_trace("error");
t20=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t20))(4,t20,t19,lf[10],t2);}
else{
t20=t19;
f_7798(2,t20,C_SCHEME_UNDEFINED);}}}}}

/* k7796 in ranbeta in k5905 in k5612 in k5609 in k5605 in k5314 in k5311 in k5308 in k5305 */
static void C_ccall f_7798(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_7798,2,t0,t1);}
t2=(C_word)C_i_car(((C_word*)((C_word*)t0)[5])[1]);
t3=C_mutate(((C_word *)((C_word*)t0)[4])+1,t2);
t4=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_7805,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[5],a[4]=((C_word*)t0)[3],tmp=(C_word)a,a+=5,tmp);
t5=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_7813,a[2]=((C_word*)t0)[4],a[3]=t4,tmp=(C_word)a,a+=4,tmp);
C_trace("keyword?");
t6=C_retrieve(lf[13]);
((C_proc3)C_retrieve_proc(t6))(3,t6,t5,((C_word*)((C_word*)t0)[4])[1]);}

/* k7811 in k7796 in ranbeta in k5905 in k5612 in k5609 in k5605 in k5314 in k5311 in k5308 in k5305 */
static void C_ccall f_7813(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
if(C_truep(t1)){
C_trace("error");
t2=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t2))(4,t2,((C_word*)t0)[3],lf[14],((C_word*)((C_word*)t0)[2])[1]);}
else{
t2=((C_word*)t0)[3];
f_7805(2,t2,C_SCHEME_UNDEFINED);}}

/* k7803 in k7796 in ranbeta in k5905 in k5612 in k5609 in k5605 in k5314 in k5311 in k5308 in k5305 */
static void C_ccall f_7805(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word *a;
t2=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[3])[1]);
t4=C_mutate(((C_word *)((C_word*)t0)[3])+1,t3);
t5=((C_word*)t0)[2];
f_7597(t5,t4);}

/* k7767 in ranbeta in k5905 in k5612 in k5609 in k5605 in k5314 in k5311 in k5308 in k5305 */
static void C_ccall f_7769(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_7769,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_7773,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("error");
t4=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[21],((C_word*)t0)[2]);}
else{
t4=t2;
f_7773(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k7771 in k7767 in ranbeta in k5905 in k5612 in k5609 in k5605 in k5314 in k5311 in k5308 in k5305 */
static void C_ccall f_7773(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_7597(t7,t6);}

/* k7732 in ranbeta in k5905 in k5612 in k5609 in k5605 in k5314 in k5311 in k5308 in k5305 */
static void C_ccall f_7734(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_7734,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_7738,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("error");
t4=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[21],((C_word*)t0)[2]);}
else{
t4=t2;
f_7738(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k7736 in k7732 in ranbeta in k5905 in k5612 in k5609 in k5605 in k5314 in k5311 in k5308 in k5305 */
static void C_ccall f_7738(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_7597(t7,t6);}

/* k7595 in ranbeta in k5905 in k5612 in k5609 in k5605 in k5314 in k5311 in k5308 in k5305 */
static void C_fcall f_7597(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word ab[29],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_7597,NULL,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_7600,a[2]=((C_word*)t0)[5],a[3]=((C_word*)t0)[6],a[4]=((C_word*)t0)[7],a[5]=((C_word*)t0)[8],a[6]=((C_word*)t0)[9],tmp=(C_word)a,a+=7,tmp);
if(C_truep((C_word)C_i_nullp(((C_word*)((C_word*)t0)[6])[1]))){
t3=t2;
f_7600(t3,C_SCHEME_UNDEFINED);}
else{
t3=(C_word)C_i_car(((C_word*)((C_word*)t0)[6])[1]);
t4=(C_word)C_eqp(t3,lf[128]);
if(C_truep(t4)){
t5=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_7634,a[2]=((C_word*)t0)[5],a[3]=t2,a[4]=((C_word*)t0)[6],a[5]=((C_word*)t0)[3],a[6]=((C_word*)t0)[4],a[7]=((C_word*)t0)[8],tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)((C_word*)t0)[4])[1])){
C_trace("error");
t6=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t6))(4,t6,t5,lf[19],lf[128]);}
else{
t6=t5;
f_7634(2,t6,C_SCHEME_UNDEFINED);}}
else{
t5=(C_word)C_eqp(t3,lf[129]);
if(C_truep(t5)){
t6=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_7669,a[2]=((C_word*)t0)[5],a[3]=t2,a[4]=((C_word*)t0)[6],a[5]=((C_word*)t0)[3],a[6]=((C_word*)t0)[2],a[7]=((C_word*)t0)[7],tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)((C_word*)t0)[2])[1])){
C_trace("error");
t7=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t7))(4,t7,t6,lf[19],lf[129]);}
else{
t7=t6;
f_7669(2,t7,C_SCHEME_UNDEFINED);}}
else{
t6=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_7698,a[2]=t2,a[3]=((C_word*)t0)[2],a[4]=((C_word*)t0)[7],a[5]=((C_word*)t0)[6],tmp=(C_word)a,a+=6,tmp);
if(C_truep(((C_word*)((C_word*)t0)[3])[1])){
C_trace("error");
t7=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t7))(4,t7,t6,lf[10],((C_word*)t0)[5]);}
else{
t7=t6;
f_7698(2,t7,C_SCHEME_UNDEFINED);}}}}}

/* k7696 in k7595 in ranbeta in k5905 in k5612 in k5609 in k5605 in k5314 in k5311 in k5308 in k5305 */
static void C_ccall f_7698(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_7698,2,t0,t1);}
t2=(C_word)C_i_car(((C_word*)((C_word*)t0)[5])[1]);
t3=C_mutate(((C_word *)((C_word*)t0)[4])+1,t2);
t4=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_7705,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[5],a[4]=((C_word*)t0)[3],tmp=(C_word)a,a+=5,tmp);
t5=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_7713,a[2]=((C_word*)t0)[4],a[3]=t4,tmp=(C_word)a,a+=4,tmp);
C_trace("keyword?");
t6=C_retrieve(lf[13]);
((C_proc3)C_retrieve_proc(t6))(3,t6,t5,((C_word*)((C_word*)t0)[4])[1]);}

/* k7711 in k7696 in k7595 in ranbeta in k5905 in k5612 in k5609 in k5605 in k5314 in k5311 in k5308 in k5305 */
static void C_ccall f_7713(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
if(C_truep(t1)){
C_trace("error");
t2=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t2))(4,t2,((C_word*)t0)[3],lf[14],((C_word*)((C_word*)t0)[2])[1]);}
else{
t2=((C_word*)t0)[3];
f_7705(2,t2,C_SCHEME_UNDEFINED);}}

/* k7703 in k7696 in k7595 in ranbeta in k5905 in k5612 in k5609 in k5605 in k5314 in k5311 in k5308 in k5305 */
static void C_ccall f_7705(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word *a;
t2=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[3])[1]);
t4=C_mutate(((C_word *)((C_word*)t0)[3])+1,t3);
t5=((C_word*)t0)[2];
f_7600(t5,t4);}

/* k7667 in k7595 in ranbeta in k5905 in k5612 in k5609 in k5605 in k5314 in k5311 in k5308 in k5305 */
static void C_ccall f_7669(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_7669,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_7673,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("error");
t4=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[21],((C_word*)t0)[2]);}
else{
t4=t2;
f_7673(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k7671 in k7667 in k7595 in ranbeta in k5905 in k5612 in k5609 in k5605 in k5314 in k5311 in k5308 in k5305 */
static void C_ccall f_7673(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_7600(t7,t6);}

/* k7632 in k7595 in ranbeta in k5905 in k5612 in k5609 in k5605 in k5314 in k5311 in k5308 in k5305 */
static void C_ccall f_7634(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_7634,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_7638,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("error");
t4=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[21],((C_word*)t0)[2]);}
else{
t4=t2;
f_7638(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k7636 in k7632 in k7595 in ranbeta in k5905 in k5612 in k5609 in k5605 in k5314 in k5311 in k5308 in k5305 */
static void C_ccall f_7638(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_7600(t7,t6);}

/* k7598 in k7595 in ranbeta in k5905 in k5612 in k5609 in k5605 in k5314 in k5311 in k5308 in k5305 */
static void C_fcall f_7600(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[5],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_7600,NULL,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_7603,a[2]=((C_word*)t0)[4],a[3]=((C_word*)t0)[5],a[4]=((C_word*)t0)[6],tmp=(C_word)a,a+=5,tmp);
if(C_truep((C_word)C_i_nullp(((C_word*)((C_word*)t0)[3])[1]))){
t3=t2;
f_7603(2,t3,C_SCHEME_UNDEFINED);}
else{
C_trace("error");
t3=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t3))(4,t3,t2,lf[5],((C_word*)t0)[2]);}}

/* k7601 in k7598 in k7595 in ranbeta in k5905 in k5612 in k5609 in k5605 in k5314 in k5311 in k5308 in k5305 */
static void C_ccall f_7603(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[5],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_7603,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_7606,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],tmp=(C_word)a,a+=5,tmp);
t3=((C_word*)((C_word*)t0)[2])[1];
if(C_truep(t3)){
t4=t2;
f_7606(t4,C_SCHEME_UNDEFINED);}
else{
t4=C_mutate(((C_word *)((C_word*)t0)[2])+1,((C_word*)((C_word*)t0)[3])[1]);
t5=t2;
f_7606(t5,t4);}}

/* k7604 in k7601 in k7598 in k7595 in ranbeta in k5905 in k5612 in k5609 in k5605 in k5314 in k5311 in k5308 in k5305 */
static void C_fcall f_7606(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word ab[6],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_7606,NULL,2,t0,t1);}
t2=((C_word*)t0)[4];
t3=((C_word*)((C_word*)t0)[3])[1];
t4=((C_word*)((C_word*)t0)[2])[1];
t5=(C_word)C_a_i_bytevector(&a,1,C_fix(4));
t6=(C_word)C_i_foreign_flonum_argumentp(t3);
t7=(C_word)C_i_foreign_flonum_argumentp(t4);
t8=t2;
((C_proc2)(void*)(*((C_word*)t8+1)))(2,t8,(C_word)stub281(t5,t6,t7));}

/* odds in k5905 in k5612 in k5609 in k5605 in k5314 in k5311 in k5308 in k5305 */
static void C_ccall f_7362(C_word c,C_word t0,C_word t1,C_word t2,...){
C_word tmp;
C_word t3;
va_list v;
C_word *a,c2=c;
C_save_rest(t2,c2,3);
if(c<3) C_bad_min_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_demand(c*C_SIZEOF_PAIR+45)){
C_save_and_reclaim((void*)tr3r,(void*)f_7362r,3,t0,t1,t2);}
else{
a=C_alloc((c-3)*3);
t3=C_restore_rest(a,C_rest_count(0));
f_7362r(t0,t1,t2,t3);}}

static void C_ccall f_7362r(C_word t0,C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word t14;
C_word t15;
C_word t16;
C_word t17;
C_word t18;
C_word t19;
C_word t20;
C_word t21;
C_word t22;
C_word t23;
C_word *a=C_alloc(45);
t4=C_SCHEME_TRUE;
t5=(*a=C_VECTOR_TYPE|1,a[1]=t4,tmp=(C_word)a,a+=2,tmp);
t6=C_SCHEME_FALSE;
t7=(*a=C_VECTOR_TYPE|1,a[1]=t6,tmp=(C_word)a,a+=2,tmp);
t8=C_SCHEME_FALSE;
t9=(*a=C_VECTOR_TYPE|1,a[1]=t8,tmp=(C_word)a,a+=2,tmp);
t10=C_SCHEME_FALSE;
t11=(*a=C_VECTOR_TYPE|1,a[1]=t10,tmp=(C_word)a,a+=2,tmp);
t12=t3;
t13=(*a=C_VECTOR_TYPE|1,a[1]=t12,tmp=(C_word)a,a+=2,tmp);
t14=C_SCHEME_FALSE;
t15=(*a=C_VECTOR_TYPE|1,a[1]=t14,tmp=(C_word)a,a+=2,tmp);
t16=(*a=C_CLOSURE_TYPE|10,a[1]=(C_word)f_7366,a[2]=t11,a[3]=t15,a[4]=t9,a[5]=t3,a[6]=t13,a[7]=t7,a[8]=t5,a[9]=t1,a[10]=t2,tmp=(C_word)a,a+=11,tmp);
if(C_truep((C_word)C_i_nullp(((C_word*)t13)[1]))){
t17=t16;
f_7366(t17,C_SCHEME_UNDEFINED);}
else{
t17=(C_word)C_i_car(((C_word*)t13)[1]);
t18=(C_word)C_eqp(t17,lf[121]);
if(C_truep(t18)){
t19=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_7503,a[2]=t3,a[3]=t16,a[4]=t13,a[5]=t15,a[6]=t9,a[7]=t5,tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)t9)[1])){
C_trace("error");
t20=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t20))(4,t20,t19,lf[19],lf[121]);}
else{
t20=t19;
f_7503(2,t20,C_SCHEME_UNDEFINED);}}
else{
t19=(C_word)C_eqp(t17,lf[122]);
if(C_truep(t19)){
t20=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_7538,a[2]=t3,a[3]=t16,a[4]=t13,a[5]=t15,a[6]=t11,a[7]=t7,tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)t11)[1])){
C_trace("error");
t21=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t21))(4,t21,t20,lf[19],lf[122]);}
else{
t21=t20;
f_7538(2,t21,C_SCHEME_UNDEFINED);}}
else{
t20=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_7567,a[2]=t16,a[3]=t9,a[4]=t5,a[5]=t13,tmp=(C_word)a,a+=6,tmp);
if(C_truep(((C_word*)t15)[1])){
C_trace("error");
t21=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t21))(4,t21,t20,lf[10],t3);}
else{
t21=t20;
f_7567(2,t21,C_SCHEME_UNDEFINED);}}}}}

/* k7565 in odds in k5905 in k5612 in k5609 in k5605 in k5314 in k5311 in k5308 in k5305 */
static void C_ccall f_7567(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_7567,2,t0,t1);}
t2=(C_word)C_i_car(((C_word*)((C_word*)t0)[5])[1]);
t3=C_mutate(((C_word *)((C_word*)t0)[4])+1,t2);
t4=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_7574,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[5],a[4]=((C_word*)t0)[3],tmp=(C_word)a,a+=5,tmp);
t5=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_7582,a[2]=((C_word*)t0)[4],a[3]=t4,tmp=(C_word)a,a+=4,tmp);
C_trace("keyword?");
t6=C_retrieve(lf[13]);
((C_proc3)C_retrieve_proc(t6))(3,t6,t5,((C_word*)((C_word*)t0)[4])[1]);}

/* k7580 in k7565 in odds in k5905 in k5612 in k5609 in k5605 in k5314 in k5311 in k5308 in k5305 */
static void C_ccall f_7582(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
if(C_truep(t1)){
C_trace("error");
t2=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t2))(4,t2,((C_word*)t0)[3],lf[14],((C_word*)((C_word*)t0)[2])[1]);}
else{
t2=((C_word*)t0)[3];
f_7574(2,t2,C_SCHEME_UNDEFINED);}}

/* k7572 in k7565 in odds in k5905 in k5612 in k5609 in k5605 in k5314 in k5311 in k5308 in k5305 */
static void C_ccall f_7574(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word *a;
t2=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[3])[1]);
t4=C_mutate(((C_word *)((C_word*)t0)[3])+1,t3);
t5=((C_word*)t0)[2];
f_7366(t5,t4);}

/* k7536 in odds in k5905 in k5612 in k5609 in k5605 in k5314 in k5311 in k5308 in k5305 */
static void C_ccall f_7538(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_7538,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_7542,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("error");
t4=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[21],((C_word*)t0)[2]);}
else{
t4=t2;
f_7542(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k7540 in k7536 in odds in k5905 in k5612 in k5609 in k5605 in k5314 in k5311 in k5308 in k5305 */
static void C_ccall f_7542(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_7366(t7,t6);}

/* k7501 in odds in k5905 in k5612 in k5609 in k5605 in k5314 in k5311 in k5308 in k5305 */
static void C_ccall f_7503(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_7503,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_7507,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("error");
t4=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[21],((C_word*)t0)[2]);}
else{
t4=t2;
f_7507(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k7505 in k7501 in odds in k5905 in k5612 in k5609 in k5605 in k5314 in k5311 in k5308 in k5305 */
static void C_ccall f_7507(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_7366(t7,t6);}

/* k7364 in odds in k5905 in k5612 in k5609 in k5605 in k5314 in k5311 in k5308 in k5305 */
static void C_fcall f_7366(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word ab[30],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_7366,NULL,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_7369,a[2]=((C_word*)t0)[5],a[3]=((C_word*)t0)[6],a[4]=((C_word*)t0)[7],a[5]=((C_word*)t0)[8],a[6]=((C_word*)t0)[9],a[7]=((C_word*)t0)[10],tmp=(C_word)a,a+=8,tmp);
if(C_truep((C_word)C_i_nullp(((C_word*)((C_word*)t0)[6])[1]))){
t3=t2;
f_7369(t3,C_SCHEME_UNDEFINED);}
else{
t3=(C_word)C_i_car(((C_word*)((C_word*)t0)[6])[1]);
t4=(C_word)C_eqp(t3,lf[121]);
if(C_truep(t4)){
t5=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_7403,a[2]=((C_word*)t0)[5],a[3]=t2,a[4]=((C_word*)t0)[6],a[5]=((C_word*)t0)[3],a[6]=((C_word*)t0)[4],a[7]=((C_word*)t0)[8],tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)((C_word*)t0)[4])[1])){
C_trace("error");
t6=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t6))(4,t6,t5,lf[19],lf[121]);}
else{
t6=t5;
f_7403(2,t6,C_SCHEME_UNDEFINED);}}
else{
t5=(C_word)C_eqp(t3,lf[122]);
if(C_truep(t5)){
t6=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_7438,a[2]=((C_word*)t0)[5],a[3]=t2,a[4]=((C_word*)t0)[6],a[5]=((C_word*)t0)[3],a[6]=((C_word*)t0)[2],a[7]=((C_word*)t0)[7],tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)((C_word*)t0)[2])[1])){
C_trace("error");
t7=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t7))(4,t7,t6,lf[19],lf[122]);}
else{
t7=t6;
f_7438(2,t7,C_SCHEME_UNDEFINED);}}
else{
t6=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_7467,a[2]=t2,a[3]=((C_word*)t0)[2],a[4]=((C_word*)t0)[7],a[5]=((C_word*)t0)[6],tmp=(C_word)a,a+=6,tmp);
if(C_truep(((C_word*)((C_word*)t0)[3])[1])){
C_trace("error");
t7=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t7))(4,t7,t6,lf[10],((C_word*)t0)[5]);}
else{
t7=t6;
f_7467(2,t7,C_SCHEME_UNDEFINED);}}}}}

/* k7465 in k7364 in odds in k5905 in k5612 in k5609 in k5605 in k5314 in k5311 in k5308 in k5305 */
static void C_ccall f_7467(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_7467,2,t0,t1);}
t2=(C_word)C_i_car(((C_word*)((C_word*)t0)[5])[1]);
t3=C_mutate(((C_word *)((C_word*)t0)[4])+1,t2);
t4=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_7474,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[5],a[4]=((C_word*)t0)[3],tmp=(C_word)a,a+=5,tmp);
t5=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_7482,a[2]=((C_word*)t0)[4],a[3]=t4,tmp=(C_word)a,a+=4,tmp);
C_trace("keyword?");
t6=C_retrieve(lf[13]);
((C_proc3)C_retrieve_proc(t6))(3,t6,t5,((C_word*)((C_word*)t0)[4])[1]);}

/* k7480 in k7465 in k7364 in odds in k5905 in k5612 in k5609 in k5605 in k5314 in k5311 in k5308 in k5305 */
static void C_ccall f_7482(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
if(C_truep(t1)){
C_trace("error");
t2=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t2))(4,t2,((C_word*)t0)[3],lf[14],((C_word*)((C_word*)t0)[2])[1]);}
else{
t2=((C_word*)t0)[3];
f_7474(2,t2,C_SCHEME_UNDEFINED);}}

/* k7472 in k7465 in k7364 in odds in k5905 in k5612 in k5609 in k5605 in k5314 in k5311 in k5308 in k5305 */
static void C_ccall f_7474(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word *a;
t2=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[3])[1]);
t4=C_mutate(((C_word *)((C_word*)t0)[3])+1,t3);
t5=((C_word*)t0)[2];
f_7369(t5,t4);}

/* k7436 in k7364 in odds in k5905 in k5612 in k5609 in k5605 in k5314 in k5311 in k5308 in k5305 */
static void C_ccall f_7438(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_7438,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_7442,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("error");
t4=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[21],((C_word*)t0)[2]);}
else{
t4=t2;
f_7442(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k7440 in k7436 in k7364 in odds in k5905 in k5612 in k5609 in k5605 in k5314 in k5311 in k5308 in k5305 */
static void C_ccall f_7442(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_7369(t7,t6);}

/* k7401 in k7364 in odds in k5905 in k5612 in k5609 in k5605 in k5314 in k5311 in k5308 in k5305 */
static void C_ccall f_7403(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_7403,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_7407,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("error");
t4=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[21],((C_word*)t0)[2]);}
else{
t4=t2;
f_7407(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k7405 in k7401 in k7364 in odds in k5905 in k5612 in k5609 in k5605 in k5314 in k5311 in k5308 in k5305 */
static void C_ccall f_7407(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_7369(t7,t6);}

/* k7367 in k7364 in odds in k5905 in k5612 in k5609 in k5605 in k5314 in k5311 in k5308 in k5305 */
static void C_fcall f_7369(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[6],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_7369,NULL,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_7372,a[2]=((C_word*)t0)[4],a[3]=((C_word*)t0)[5],a[4]=((C_word*)t0)[6],a[5]=((C_word*)t0)[7],tmp=(C_word)a,a+=6,tmp);
if(C_truep((C_word)C_i_nullp(((C_word*)((C_word*)t0)[3])[1]))){
t3=t2;
f_7372(2,t3,C_SCHEME_UNDEFINED);}
else{
C_trace("error");
t3=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t3))(4,t3,t2,lf[5],((C_word*)t0)[2]);}}

/* k7370 in k7367 in k7364 in odds in k5905 in k5612 in k5609 in k5605 in k5314 in k5311 in k5308 in k5305 */
static void C_ccall f_7372(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[6],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_7372,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_7382,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],tmp=(C_word)a,a+=6,tmp);
C_trace("ChickenBridge.scm: 367  tb:ranf");
f_6483(t2,lf[120]);}

/* k7380 in k7370 in k7367 in k7364 in odds in k5905 in k5612 in k5609 in k5605 in k5314 in k5311 in k5308 in k5305 */
static void C_ccall f_7382(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word *a;
t2=(C_word)C_i_lessp(t1,((C_word*)t0)[5]);
t3=((C_word*)t0)[4];
((C_proc2)(void*)(*((C_word*)t3+1)))(2,t3,(C_truep(t2)?((C_word*)((C_word*)t0)[3])[1]:((C_word*)((C_word*)t0)[2])[1]));}

/* pick in k5905 in k5612 in k5609 in k5605 in k5314 in k5311 in k5308 in k5305 */
static void C_ccall f_7319(C_word c,C_word t0,C_word t1,...){
C_word tmp;
C_word t2;
va_list v;
C_word *a,c2=c;
C_save_rest(t1,c2,2);
C_check_for_interrupt;
if(!C_demand(c*C_SIZEOF_PAIR+8)){
C_save_and_reclaim((void*)tr2r,(void*)f_7319r,2,t0,t1);}
else{
a=C_alloc((c-2)*3);
t2=C_restore_rest(a,C_rest_count(0));
f_7319r(t0,t1,t2);}}

static void C_ccall f_7319r(C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word *a=C_alloc(8);
t3=(C_word)C_i_cdr(t2);
if(C_truep((C_word)C_i_nullp(t3))){
t4=(C_word)C_i_car(t2);
t5=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_7337,a[2]=t4,a[3]=t1,tmp=(C_word)a,a+=4,tmp);
t6=(C_word)C_i_car(t2);
t7=(C_word)C_i_length(t6);
C_trace("ChickenBridge.scm: 367  tb:rani");
f_6476(t5,t7);}
else{
t4=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_7352,a[2]=t2,a[3]=t1,tmp=(C_word)a,a+=4,tmp);
t5=(C_word)C_i_length(t2);
C_trace("ChickenBridge.scm: 367  tb:rani");
f_6476(t4,t5);}}

/* k7350 in pick in k5905 in k5612 in k5609 in k5605 in k5314 in k5311 in k5308 in k5305 */
static void C_ccall f_7352(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
t2=((C_word*)t0)[3];
((C_proc2)(void*)(*((C_word*)t2+1)))(2,t2,(C_word)C_i_list_ref(((C_word*)t0)[2],t1));}

/* k7335 in pick in k5905 in k5612 in k5609 in k5605 in k5314 in k5311 in k5308 in k5305 */
static void C_ccall f_7337(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
t2=((C_word*)t0)[3];
((C_proc2)(void*)(*((C_word*)t2+1)))(2,t2,(C_word)C_i_list_ref(((C_word*)t0)[2],t1));}

/* between in k5905 in k5612 in k5609 in k5605 in k5314 in k5311 in k5308 in k5305 */
static void C_ccall f_7298(C_word c,C_word t0,C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word t14;
C_word t15;
C_word t16;
C_word t17;
C_word ab[6],*a=ab;
if(c!=4) C_bad_argc_2(c,4,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr4,(void*)f_7298,4,t0,t1,t2,t3);}
t4=(C_word)C_fixnump(t2);
t5=(C_truep(t4)?(C_word)C_fixnump(t3):C_SCHEME_FALSE);
if(C_truep(t5)){
t6=t1;
t7=t2;
t8=t3;
t9=(C_word)C_i_foreign_fixnum_argumentp(t7);
t10=(C_word)C_i_foreign_fixnum_argumentp(t8);
t11=t6;
((C_proc2)(void*)(*((C_word*)t11+1)))(2,t11,(C_word)stub247(C_SCHEME_UNDEFINED,t9,t10));}
else{
t6=t1;
t7=t2;
t8=t3;
t9=(C_word)C_a_i_bytevector(&a,1,C_fix(4));
t10=(C_word)C_i_foreign_flonum_argumentp(t7);
t11=(C_word)C_i_foreign_flonum_argumentp(t8);
t12=t6;
((C_proc2)(void*)(*((C_word*)t12+1)))(2,t12,(C_word)stub253(t9,t10,t11));}}

/* ran in k5905 in k5612 in k5609 in k5605 in k5314 in k5311 in k5308 in k5305 */
static void C_ccall f_7274(C_word c,C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word *a;
if(c!=3) C_bad_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr3,(void*)f_7274,3,t0,t1,t2);}
if(C_truep((C_word)C_i_greaterp(t2,C_fix(1)))){
if(C_truep((C_word)C_fixnump(t2))){
C_trace("ChickenBridge.scm: 367  tb:rani");
f_6476(t1,t2);}
else{
C_trace("ChickenBridge.scm: 367  tb:ranf");
f_6483(t1,t2);}}
else{
C_trace("ChickenBridge.scm: 367  tb:ranf");
f_6483(t1,t2);}}

/* scale in k5905 in k5612 in k5609 in k5605 in k5314 in k5311 in k5308 in k5305 */
static void C_ccall f_7200(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,...){
C_word tmp;
C_word t4;
va_list v;
C_word *a,c2=c;
C_save_rest(t3,c2,4);
if(c<4) C_bad_min_argc_2(c,4,t0);
C_check_for_interrupt;
if(!C_demand(c*C_SIZEOF_PAIR+12)){
C_save_and_reclaim((void*)tr4r,(void*)f_7200r,4,t0,t1,t2,t3);}
else{
a=C_alloc((c-4)*3);
t4=C_restore_rest(a,C_rest_count(0));
f_7200r(t0,t1,t2,t3,t4);}}

static void C_ccall f_7200r(C_word t0,C_word t1,C_word t2,C_word t3,C_word t4){
C_word tmp;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word *a=C_alloc(12);
t5=(*a=C_VECTOR_TYPE|1,a[1]=t4,tmp=(C_word)a,a+=2,tmp);
t6=(C_word)C_a_i_list(&a,1,C_SCHEME_TRUE);
t7=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_7207,a[2]=t3,a[3]=t1,a[4]=t6,a[5]=t2,a[6]=t5,tmp=(C_word)a,a+=7,tmp);
t8=(C_word)C_i_cdr(((C_word*)t5)[1]);
if(C_truep((C_word)C_i_nullp(t8))){
t9=(C_word)C_i_car(((C_word*)t5)[1]);
t10=C_set_block_item(t5,0,t9);
t11=t7;
f_7207(t11,t10);}
else{
t9=t7;
f_7207(t9,C_SCHEME_UNDEFINED);}}

/* k7205 in scale in k5905 in k5612 in k5609 in k5605 in k5314 in k5311 in k5308 in k5305 */
static void C_fcall f_7207(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_7207,NULL,2,t0,t1);}
t2=(C_word)C_i_length(((C_word*)((C_word*)t0)[6])[1]);
t3=C_SCHEME_UNDEFINED;
t4=(*a=C_VECTOR_TYPE|1,a[1]=t3,tmp=(C_word)a,a+=2,tmp);
t5=C_set_block_item(t4,0,(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_7216,a[2]=((C_word*)t0)[4],a[3]=t4,a[4]=((C_word*)t0)[6],a[5]=((C_word*)t0)[5],a[6]=((C_word)li71),tmp=(C_word)a,a+=7,tmp));
t6=((C_word*)t4)[1];
f_7216(t6,((C_word*)t0)[3],C_fix(0),((C_word*)t0)[2],t2,((C_word*)t0)[4]);}

/* do395 in k7205 in scale in k5905 in k5612 in k5609 in k5605 in k5314 in k5311 in k5308 in k5305 */
static void C_fcall f_7216(C_word t0,C_word t1,C_word t2,C_word t3,C_word t4,C_word t5){
C_word tmp;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word ab[16],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_7216,NULL,6,t0,t1,t2,t3,t4,t5);}
t6=(*a=C_VECTOR_TYPE|1,a[1]=t3,tmp=(C_word)a,a+=2,tmp);
t7=(*a=C_VECTOR_TYPE|1,a[1]=t5,tmp=(C_word)a,a+=2,tmp);
if(C_truep((C_word)C_i_lessp(t2,((C_word*)t0)[5]))){
t8=(C_word)C_a_i_list(&a,1,((C_word*)t6)[1]);
t9=(C_word)C_i_set_cdr(((C_word*)t7)[1],t8);
t10=(C_word)C_i_cdr(((C_word*)t7)[1]);
t11=C_set_block_item(t7,0,t10);
t12=(*a=C_CLOSURE_TYPE|8,a[1]=(C_word)f_7252,a[2]=t7,a[3]=t4,a[4]=t1,a[5]=((C_word*)t0)[3],a[6]=t2,a[7]=t6,a[8]=((C_word*)t0)[4],tmp=(C_word)a,a+=9,tmp);
C_trace("ChickenBridge.scm: 367  modulo");
t13=*((C_word*)lf[114]+1);
((C_proc4)C_retrieve_proc(t13))(4,t13,t12,t2,t4);}
else{
t8=t1;
((C_proc2)(void*)(*((C_word*)t8+1)))(2,t8,(C_word)C_i_cdr(((C_word*)t0)[2]));}}

/* k7250 in do395 in k7205 in scale in k5905 in k5612 in k5609 in k5605 in k5314 in k5311 in k5308 in k5305 */
static void C_ccall f_7252(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[8],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_7252,2,t0,t1);}
t2=(C_word)C_i_list_ref(((C_word*)((C_word*)t0)[8])[1],t1);
t3=(C_word)C_a_i_plus(&a,2,((C_word*)((C_word*)t0)[7])[1],t2);
t4=C_mutate(((C_word *)((C_word*)t0)[7])+1,t3);
t5=(C_word)C_a_i_plus(&a,2,((C_word*)t0)[6],C_fix(1));
t6=((C_word*)((C_word*)t0)[5])[1];
f_7216(t6,((C_word*)t0)[4],t5,((C_word*)((C_word*)t0)[7])[1],((C_word*)t0)[3],((C_word*)((C_word*)t0)[2])[1]);}

/* interp in k5905 in k5612 in k5609 in k5605 in k5314 in k5311 in k5308 in k5305 */
static void C_ccall f_7173(C_word c,C_word t0,C_word t1,C_word t2,...){
C_word tmp;
C_word t3;
va_list v;
C_word *a,c2=c;
C_save_rest(t2,c2,3);
if(c<3) C_bad_min_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_demand(c*C_SIZEOF_PAIR+0)){
C_save_and_reclaim((void*)tr3r,(void*)f_7173r,3,t0,t1,t2);}
else{
a=C_alloc((c-3)*3);
t3=C_restore_rest(a,C_rest_count(0));
f_7173r(t0,t1,t2,t3);}}

static void C_ccall f_7173r(C_word t0,C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
t4=(C_word)C_i_car(t3);
if(C_truep((C_word)C_i_pairp(t4))){
t5=(C_word)C_i_car(t3);
t6=(C_word)C_i_cdr(t3);
C_apply(6,0,t1,C_retrieve(lf[107]),t2,t5,t6);}
else{
C_trace("ChickenBridge.scm: 367  interpl");
t5=C_retrieve(lf[107]);
((C_proc4)C_retrieve_proc(t5))(4,t5,t1,t2,t3);}}

/* interpl in k5905 in k5612 in k5609 in k5605 in k5314 in k5311 in k5308 in k5305 */
static void C_ccall f_7078(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,...){
C_word tmp;
C_word t4;
va_list v;
C_word *a,c2=c;
C_save_rest(t3,c2,4);
if(c<4) C_bad_min_argc_2(c,4,t0);
C_check_for_interrupt;
if(!C_demand(c*C_SIZEOF_PAIR+6)){
C_save_and_reclaim((void*)tr4rv,(void*)f_7078r,4,t0,t1,t2,t3);}
else{
a=C_alloc((c-4)*3);
t4=C_restore_rest_vector(a,C_rest_count(0));
f_7078r(t0,t1,t2,t3,t4);}}

static void C_ccall f_7078r(C_word t0,C_word t1,C_word t2,C_word t3,C_word t4){
C_word tmp;
C_word t5;
C_word t6;
C_word *a=C_alloc(6);
t5=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_7082,a[2]=t1,a[3]=t2,a[4]=t3,a[5]=t4,tmp=(C_word)a,a+=6,tmp);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("ChickenBridge.scm: 367  error");
t6=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t6))(4,t6,t5,lf[111],t3);}
else{
t6=t5;
f_7082(2,t6,(C_word)C_i_car(t3));}}

/* k7080 in interpl in k5905 in k5612 in k5609 in k5605 in k5314 in k5311 in k5308 in k5305 */
static void C_ccall f_7082(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_7082,2,t0,t1);}
t2=t1;
t3=(*a=C_VECTOR_TYPE|1,a[1]=t2,tmp=(C_word)a,a+=2,tmp);
t4=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_7085,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=t3,tmp=(C_word)a,a+=7,tmp);
t5=(C_word)C_i_cdr(((C_word*)t0)[4]);
if(C_truep((C_word)C_i_nullp(t5))){
C_trace("ChickenBridge.scm: 367  err");
t6=C_retrieve(lf[109]);
((C_proc4)C_retrieve_proc(t6))(4,t6,t4,lf[110],((C_word*)t0)[4]);}
else{
t6=t4;
f_7085(2,t6,(C_word)C_i_cadr(((C_word*)t0)[4]));}}

/* k7083 in k7080 in interpl in k5905 in k5612 in k5609 in k5605 in k5314 in k5311 in k5308 in k5305 */
static void C_ccall f_7085(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word t14;
C_word ab[19],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_7085,2,t0,t1);}
t2=t1;
t3=(*a=C_VECTOR_TYPE|1,a[1]=t2,tmp=(C_word)a,a+=2,tmp);
t4=((C_word*)((C_word*)t0)[6])[1];
t5=(*a=C_VECTOR_TYPE|1,a[1]=t4,tmp=(C_word)a,a+=2,tmp);
t6=((C_word*)t3)[1];
t7=(*a=C_VECTOR_TYPE|1,a[1]=t6,tmp=(C_word)a,a+=2,tmp);
t8=(C_word)C_vemptyp(((C_word*)t0)[5]);
t9=(C_truep(t8)?C_fix(1):(C_word)C_i_vector_ref(((C_word*)t0)[5],C_fix(0)));
t10=(C_word)C_i_cddr(((C_word*)t0)[4]);
t11=C_SCHEME_UNDEFINED;
t12=(*a=C_VECTOR_TYPE|1,a[1]=t11,tmp=(C_word)a,a+=2,tmp);
t13=C_set_block_item(t12,0,(*a=C_CLOSURE_TYPE|10,a[1]=(C_word)f_7097,a[2]=((C_word*)t0)[4],a[3]=t12,a[4]=t9,a[5]=t7,a[6]=t3,a[7]=((C_word*)t0)[6],a[8]=((C_word*)t0)[3],a[9]=t5,a[10]=((C_word)li68),tmp=(C_word)a,a+=11,tmp));
t14=((C_word*)t12)[1];
f_7097(t14,((C_word*)t0)[2],t10);}

/* do379 in k7083 in k7080 in interpl in k5905 in k5612 in k5609 in k5605 in k5314 in k5311 in k5308 in k5305 */
static void C_fcall f_7097(C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word ab[5],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_7097,NULL,3,t0,t1,t2);}
t3=(C_word)C_i_nullp(t2);
t4=(C_truep(t3)?t3:(C_word)C_i_greaterp(((C_word*)((C_word*)t0)[9])[1],((C_word*)t0)[8]));
if(C_truep(t4)){
C_trace("ChickenBridge.scm: 367  tb:rescale");
f_6340(t1,((C_word*)t0)[8],((C_word*)((C_word*)t0)[7])[1],((C_word*)((C_word*)t0)[9])[1],((C_word*)((C_word*)t0)[6])[1],((C_word*)((C_word*)t0)[5])[1],((C_word*)t0)[4]);}
else{
t5=C_mutate(((C_word *)((C_word*)t0)[7])+1,((C_word*)((C_word*)t0)[9])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[6])+1,((C_word*)((C_word*)t0)[5])[1]);
t7=(C_word)C_i_car(t2);
t8=C_mutate(((C_word *)((C_word*)t0)[9])+1,t7);
t9=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_7119,a[2]=t1,a[3]=((C_word*)t0)[3],a[4]=t2,tmp=(C_word)a,a+=5,tmp);
t10=(C_word)C_i_cdr(t2);
if(C_truep((C_word)C_i_nullp(t10))){
C_trace("ChickenBridge.scm: 367  error");
t11=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t11))(4,t11,t9,lf[108],((C_word*)t0)[2]);}
else{
t11=(C_word)C_i_cadr(t2);
t12=C_mutate(((C_word *)((C_word*)t0)[5])+1,t11);
t13=t9;
f_7119(2,t13,t12);}}}

/* k7117 in do379 in k7083 in k7080 in interpl in k5905 in k5612 in k5609 in k5605 in k5314 in k5311 in k5308 in k5305 */
static void C_ccall f_7119(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word *a;
t2=(C_word)C_i_cddr(((C_word*)t0)[4]);
t3=((C_word*)((C_word*)t0)[3])[1];
f_7097(t3,((C_word*)t0)[2],t2);}

/* scaler->cents in k5905 in k5612 in k5609 in k5605 in k5314 in k5311 in k5308 in k5305 */
static void C_ccall f_7063(C_word c,C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word *a;
if(c!=3) C_bad_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr3,(void*)f_7063,3,t0,t1,t2);}
if(C_truep((C_word)C_i_listp(t2))){
C_trace("map");
t3=*((C_word*)lf[17]+1);
((C_proc4)(void*)(*((C_word*)t3+1)))(4,t3,t1,C_retrieve2(lf[72],"tb:scaler->cents"),t2);}
else{
C_trace("ChickenBridge.scm: 367  tb:scaler->cents");
t3=C_retrieve2(lf[72],"tb:scaler->cents");
f_6445(3,t3,t1,t2);}}

/* cents->scaler in k5905 in k5612 in k5609 in k5605 in k5314 in k5311 in k5308 in k5305 */
static void C_ccall f_7048(C_word c,C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word *a;
if(c!=3) C_bad_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr3,(void*)f_7048,3,t0,t1,t2);}
if(C_truep((C_word)C_i_listp(t2))){
C_trace("map");
t3=*((C_word*)lf[17]+1);
((C_proc4)(void*)(*((C_word*)t3+1)))(4,t3,t1,C_retrieve2(lf[71],"tb:cents->scaler"),t2);}
else{
C_trace("ChickenBridge.scm: 367  tb:cents->scaler");
t3=C_retrieve2(lf[71],"tb:cents->scaler");
f_6438(3,t3,t1,t2);}}

/* rhythm->seconds in k5905 in k5612 in k5609 in k5605 in k5314 in k5311 in k5308 in k5305 */
static void C_ccall f_6812(C_word c,C_word t0,C_word t1,C_word t2,...){
C_word tmp;
C_word t3;
va_list v;
C_word *a,c2=c;
C_save_rest(t2,c2,3);
if(c<3) C_bad_min_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_demand(c*C_SIZEOF_PAIR+45)){
C_save_and_reclaim((void*)tr3r,(void*)f_6812r,3,t0,t1,t2);}
else{
a=C_alloc((c-3)*3);
t3=C_restore_rest(a,C_rest_count(0));
f_6812r(t0,t1,t2,t3);}}

static void C_ccall f_6812r(C_word t0,C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word t14;
C_word t15;
C_word t16;
C_word t17;
C_word t18;
C_word t19;
C_word t20;
C_word t21;
C_word t22;
C_word t23;
C_word *a=C_alloc(45);
t4=lf[101];
t5=(*a=C_VECTOR_TYPE|1,a[1]=t4,tmp=(C_word)a,a+=2,tmp);
t6=lf[102];
t7=(*a=C_VECTOR_TYPE|1,a[1]=t6,tmp=(C_word)a,a+=2,tmp);
t8=C_SCHEME_FALSE;
t9=(*a=C_VECTOR_TYPE|1,a[1]=t8,tmp=(C_word)a,a+=2,tmp);
t10=C_SCHEME_FALSE;
t11=(*a=C_VECTOR_TYPE|1,a[1]=t10,tmp=(C_word)a,a+=2,tmp);
t12=t3;
t13=(*a=C_VECTOR_TYPE|1,a[1]=t12,tmp=(C_word)a,a+=2,tmp);
t14=C_SCHEME_FALSE;
t15=(*a=C_VECTOR_TYPE|1,a[1]=t14,tmp=(C_word)a,a+=2,tmp);
t16=(*a=C_CLOSURE_TYPE|10,a[1]=(C_word)f_6816,a[2]=t11,a[3]=t15,a[4]=t9,a[5]=t3,a[6]=t13,a[7]=t1,a[8]=t7,a[9]=t5,a[10]=t2,tmp=(C_word)a,a+=11,tmp);
if(C_truep((C_word)C_i_nullp(((C_word*)t13)[1]))){
t17=t16;
f_6816(t17,C_SCHEME_UNDEFINED);}
else{
t17=(C_word)C_i_car(((C_word*)t13)[1]);
t18=(C_word)C_eqp(t17,lf[103]);
if(C_truep(t18)){
t19=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_6961,a[2]=t3,a[3]=t16,a[4]=t13,a[5]=t15,a[6]=t9,a[7]=t5,tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)t9)[1])){
C_trace("error");
t20=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t20))(4,t20,t19,lf[19],lf[103]);}
else{
t20=t19;
f_6961(2,t20,C_SCHEME_UNDEFINED);}}
else{
t19=(C_word)C_eqp(t17,lf[104]);
if(C_truep(t19)){
t20=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_6996,a[2]=t3,a[3]=t16,a[4]=t13,a[5]=t15,a[6]=t11,a[7]=t7,tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)t11)[1])){
C_trace("error");
t21=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t21))(4,t21,t20,lf[19],lf[104]);}
else{
t21=t20;
f_6996(2,t21,C_SCHEME_UNDEFINED);}}
else{
t20=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_7025,a[2]=t16,a[3]=t9,a[4]=t5,a[5]=t13,tmp=(C_word)a,a+=6,tmp);
if(C_truep(((C_word*)t15)[1])){
C_trace("error");
t21=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t21))(4,t21,t20,lf[10],t3);}
else{
t21=t20;
f_7025(2,t21,C_SCHEME_UNDEFINED);}}}}}

/* k7023 in rhythm->seconds in k5905 in k5612 in k5609 in k5605 in k5314 in k5311 in k5308 in k5305 */
static void C_ccall f_7025(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_7025,2,t0,t1);}
t2=(C_word)C_i_car(((C_word*)((C_word*)t0)[5])[1]);
t3=C_mutate(((C_word *)((C_word*)t0)[4])+1,t2);
t4=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_7032,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[5],a[4]=((C_word*)t0)[3],tmp=(C_word)a,a+=5,tmp);
t5=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_7040,a[2]=((C_word*)t0)[4],a[3]=t4,tmp=(C_word)a,a+=4,tmp);
C_trace("keyword?");
t6=C_retrieve(lf[13]);
((C_proc3)C_retrieve_proc(t6))(3,t6,t5,((C_word*)((C_word*)t0)[4])[1]);}

/* k7038 in k7023 in rhythm->seconds in k5905 in k5612 in k5609 in k5605 in k5314 in k5311 in k5308 in k5305 */
static void C_ccall f_7040(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
if(C_truep(t1)){
C_trace("error");
t2=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t2))(4,t2,((C_word*)t0)[3],lf[14],((C_word*)((C_word*)t0)[2])[1]);}
else{
t2=((C_word*)t0)[3];
f_7032(2,t2,C_SCHEME_UNDEFINED);}}

/* k7030 in k7023 in rhythm->seconds in k5905 in k5612 in k5609 in k5605 in k5314 in k5311 in k5308 in k5305 */
static void C_ccall f_7032(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word *a;
t2=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[3])[1]);
t4=C_mutate(((C_word *)((C_word*)t0)[3])+1,t3);
t5=((C_word*)t0)[2];
f_6816(t5,t4);}

/* k6994 in rhythm->seconds in k5905 in k5612 in k5609 in k5605 in k5314 in k5311 in k5308 in k5305 */
static void C_ccall f_6996(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_6996,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_7000,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("error");
t4=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[21],((C_word*)t0)[2]);}
else{
t4=t2;
f_7000(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k6998 in k6994 in rhythm->seconds in k5905 in k5612 in k5609 in k5605 in k5314 in k5311 in k5308 in k5305 */
static void C_ccall f_7000(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_6816(t7,t6);}

/* k6959 in rhythm->seconds in k5905 in k5612 in k5609 in k5605 in k5314 in k5311 in k5308 in k5305 */
static void C_ccall f_6961(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_6961,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_6965,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("error");
t4=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[21],((C_word*)t0)[2]);}
else{
t4=t2;
f_6965(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k6963 in k6959 in rhythm->seconds in k5905 in k5612 in k5609 in k5605 in k5314 in k5311 in k5308 in k5305 */
static void C_ccall f_6965(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_6816(t7,t6);}

/* k6814 in rhythm->seconds in k5905 in k5612 in k5609 in k5605 in k5314 in k5311 in k5308 in k5305 */
static void C_fcall f_6816(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word ab[30],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_6816,NULL,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_6819,a[2]=((C_word*)t0)[5],a[3]=((C_word*)t0)[6],a[4]=((C_word*)t0)[7],a[5]=((C_word*)t0)[8],a[6]=((C_word*)t0)[9],a[7]=((C_word*)t0)[10],tmp=(C_word)a,a+=8,tmp);
if(C_truep((C_word)C_i_nullp(((C_word*)((C_word*)t0)[6])[1]))){
t3=t2;
f_6819(t3,C_SCHEME_UNDEFINED);}
else{
t3=(C_word)C_i_car(((C_word*)((C_word*)t0)[6])[1]);
t4=(C_word)C_eqp(t3,lf[103]);
if(C_truep(t4)){
t5=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_6861,a[2]=((C_word*)t0)[5],a[3]=t2,a[4]=((C_word*)t0)[6],a[5]=((C_word*)t0)[3],a[6]=((C_word*)t0)[4],a[7]=((C_word*)t0)[9],tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)((C_word*)t0)[4])[1])){
C_trace("error");
t6=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t6))(4,t6,t5,lf[19],lf[103]);}
else{
t6=t5;
f_6861(2,t6,C_SCHEME_UNDEFINED);}}
else{
t5=(C_word)C_eqp(t3,lf[104]);
if(C_truep(t5)){
t6=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_6896,a[2]=((C_word*)t0)[5],a[3]=t2,a[4]=((C_word*)t0)[6],a[5]=((C_word*)t0)[3],a[6]=((C_word*)t0)[2],a[7]=((C_word*)t0)[8],tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)((C_word*)t0)[2])[1])){
C_trace("error");
t7=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t7))(4,t7,t6,lf[19],lf[104]);}
else{
t7=t6;
f_6896(2,t7,C_SCHEME_UNDEFINED);}}
else{
t6=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_6925,a[2]=t2,a[3]=((C_word*)t0)[2],a[4]=((C_word*)t0)[8],a[5]=((C_word*)t0)[6],tmp=(C_word)a,a+=6,tmp);
if(C_truep(((C_word*)((C_word*)t0)[3])[1])){
C_trace("error");
t7=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t7))(4,t7,t6,lf[10],((C_word*)t0)[5]);}
else{
t7=t6;
f_6925(2,t7,C_SCHEME_UNDEFINED);}}}}}

/* k6923 in k6814 in rhythm->seconds in k5905 in k5612 in k5609 in k5605 in k5314 in k5311 in k5308 in k5305 */
static void C_ccall f_6925(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_6925,2,t0,t1);}
t2=(C_word)C_i_car(((C_word*)((C_word*)t0)[5])[1]);
t3=C_mutate(((C_word *)((C_word*)t0)[4])+1,t2);
t4=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_6932,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[5],a[4]=((C_word*)t0)[3],tmp=(C_word)a,a+=5,tmp);
t5=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_6940,a[2]=((C_word*)t0)[4],a[3]=t4,tmp=(C_word)a,a+=4,tmp);
C_trace("keyword?");
t6=C_retrieve(lf[13]);
((C_proc3)C_retrieve_proc(t6))(3,t6,t5,((C_word*)((C_word*)t0)[4])[1]);}

/* k6938 in k6923 in k6814 in rhythm->seconds in k5905 in k5612 in k5609 in k5605 in k5314 in k5311 in k5308 in k5305 */
static void C_ccall f_6940(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
if(C_truep(t1)){
C_trace("error");
t2=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t2))(4,t2,((C_word*)t0)[3],lf[14],((C_word*)((C_word*)t0)[2])[1]);}
else{
t2=((C_word*)t0)[3];
f_6932(2,t2,C_SCHEME_UNDEFINED);}}

/* k6930 in k6923 in k6814 in rhythm->seconds in k5905 in k5612 in k5609 in k5605 in k5314 in k5311 in k5308 in k5305 */
static void C_ccall f_6932(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word *a;
t2=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[3])[1]);
t4=C_mutate(((C_word *)((C_word*)t0)[3])+1,t3);
t5=((C_word*)t0)[2];
f_6819(t5,t4);}

/* k6894 in k6814 in rhythm->seconds in k5905 in k5612 in k5609 in k5605 in k5314 in k5311 in k5308 in k5305 */
static void C_ccall f_6896(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_6896,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_6900,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("error");
t4=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[21],((C_word*)t0)[2]);}
else{
t4=t2;
f_6900(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k6898 in k6894 in k6814 in rhythm->seconds in k5905 in k5612 in k5609 in k5605 in k5314 in k5311 in k5308 in k5305 */
static void C_ccall f_6900(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_6819(t7,t6);}

/* k6859 in k6814 in rhythm->seconds in k5905 in k5612 in k5609 in k5605 in k5314 in k5311 in k5308 in k5305 */
static void C_ccall f_6861(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_6861,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_6865,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("error");
t4=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[21],((C_word*)t0)[2]);}
else{
t4=t2;
f_6865(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k6863 in k6859 in k6814 in rhythm->seconds in k5905 in k5612 in k5609 in k5605 in k5314 in k5311 in k5308 in k5305 */
static void C_ccall f_6865(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_6819(t7,t6);}

/* k6817 in k6814 in rhythm->seconds in k5905 in k5612 in k5609 in k5605 in k5314 in k5311 in k5308 in k5305 */
static void C_fcall f_6819(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[6],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_6819,NULL,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_6822,a[2]=((C_word*)t0)[4],a[3]=((C_word*)t0)[5],a[4]=((C_word*)t0)[6],a[5]=((C_word*)t0)[7],tmp=(C_word)a,a+=6,tmp);
if(C_truep((C_word)C_i_nullp(((C_word*)((C_word*)t0)[3])[1]))){
t3=t2;
f_6822(2,t3,C_SCHEME_UNDEFINED);}
else{
C_trace("error");
t3=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t3))(4,t3,t2,lf[5],((C_word*)t0)[2]);}}

/* k6820 in k6817 in k6814 in rhythm->seconds in k5905 in k5612 in k5609 in k5605 in k5314 in k5311 in k5308 in k5305 */
static void C_ccall f_6822(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[5],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_6822,2,t0,t1);}
if(C_truep((C_word)C_i_listp(((C_word*)t0)[5]))){
t2=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_6833,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word)li64),tmp=(C_word)a,a+=5,tmp);
C_trace("map");
t3=*((C_word*)lf[17]+1);
((C_proc4)(void*)(*((C_word*)t3+1)))(4,t3,((C_word*)t0)[2],t2,((C_word*)t0)[5]);}
else{
C_trace("ChickenBridge.scm: 367  tb:rhythm->seconds");
f_6423(((C_word*)t0)[2],((C_word*)t0)[5],((C_word*)((C_word*)t0)[4])[1],((C_word*)((C_word*)t0)[3])[1]);}}

/* a6832 in k6820 in k6817 in k6814 in rhythm->seconds in k5905 in k5612 in k5609 in k5605 in k5314 in k5311 in k5308 in k5305 */
static void C_ccall f_6833(C_word c,C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word *a;
if(c!=3) C_bad_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr3,(void*)f_6833,3,t0,t1,t2);}
C_trace("ChickenBridge.scm: 367  tb:rhythm->seconds");
f_6423(t1,t2,((C_word*)((C_word*)t0)[3])[1],((C_word*)((C_word*)t0)[2])[1]);}

/* decimals in k5905 in k5612 in k5609 in k5605 in k5314 in k5311 in k5308 in k5305 */
static void C_ccall f_6793(C_word c,C_word t0,C_word t1,C_word t2,...){
C_word tmp;
C_word t3;
va_list v;
C_word *a,c2=c;
C_save_rest(t2,c2,3);
if(c<3) C_bad_min_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_demand(c*C_SIZEOF_PAIR+0)){
C_save_and_reclaim((void*)tr3rv,(void*)f_6793r,3,t0,t1,t2);}
else{
a=C_alloc((c-3)*3);
t3=C_restore_rest_vector(a,C_rest_count(0));
f_6793r(t0,t1,t2,t3);}}

static void C_ccall f_6793r(C_word t0,C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
if(C_truep((C_word)C_vemptyp(t3))){
C_trace("ChickenBridge.scm: 367  tb:decimals");
f_6401(t1,t2,C_fix(3));}
else{
t4=(C_word)C_i_vector_ref(t3,C_fix(0));
C_trace("ChickenBridge.scm: 367  tb:decimals");
f_6401(t1,t2,t4);}}

/* quantize in k5905 in k5612 in k5609 in k5605 in k5314 in k5311 in k5308 in k5305 */
static void C_ccall f_6772(C_word c,C_word t0,C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word ab[4],*a=ab;
if(c!=4) C_bad_argc_2(c,4,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr4,(void*)f_6772,4,t0,t1,t2,t3);}
if(C_truep((C_word)C_i_listp(t2))){
t4=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_6784,a[2]=t3,a[3]=((C_word)li61),tmp=(C_word)a,a+=4,tmp);
C_trace("map");
t5=*((C_word*)lf[17]+1);
((C_proc4)(void*)(*((C_word*)t5+1)))(4,t5,t1,t4,t2);}
else{
C_trace("ChickenBridge.scm: 367  tb:quantize");
f_6412(t1,t2,t3);}}

/* a6783 in quantize in k5905 in k5612 in k5609 in k5605 in k5314 in k5311 in k5308 in k5305 */
static void C_ccall f_6784(C_word c,C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word *a;
if(c!=3) C_bad_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr3,(void*)f_6784,3,t0,t1,t2);}
C_trace("ChickenBridge.scm: 367  tb:quantize");
f_6412(t1,t2,((C_word*)t0)[2]);}

/* minus in k5905 in k5612 in k5609 in k5605 in k5314 in k5311 in k5308 in k5305 */
static void C_ccall f_6746(C_word c,C_word t0,C_word t1,C_word t2,...){
C_word tmp;
C_word t3;
va_list v;
C_word *a,c2=c;
C_save_rest(t2,c2,3);
if(c<3) C_bad_min_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_demand(c*C_SIZEOF_PAIR+0)){
C_save_and_reclaim((void*)tr3r,(void*)f_6746r,3,t0,t1,t2);}
else{
a=C_alloc((c-3)*3);
t3=C_restore_rest(a,C_rest_count(0));
f_6746r(t0,t1,t2,t3);}}

static void C_ccall f_6746r(C_word t0,C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
if(C_truep((C_word)C_i_nullp(t3))){
if(C_truep((C_word)C_i_listp(t2))){
C_apply(4,0,t1,*((C_word*)lf[93]+1),t2);}
else{
C_trace("ChickenBridge.scm: 367  -");
C_minus(3,0,t1,t2);}}
else{
C_apply(5,0,t1,*((C_word*)lf[93]+1),t2,t3);}}

/* plus in k5905 in k5612 in k5609 in k5605 in k5314 in k5311 in k5308 in k5305 */
static void C_ccall f_6704(C_word c,C_word t0,C_word t1,...){
C_word tmp;
C_word t2;
va_list v;
C_word *a,c2=c;
C_save_rest(t1,c2,2);
C_check_for_interrupt;
if(!C_demand(c*C_SIZEOF_PAIR+0)){
C_save_and_reclaim((void*)tr2r,(void*)f_6704r,2,t0,t1);}
else{
a=C_alloc((c-2)*3);
t2=C_restore_rest(a,C_rest_count(0));
f_6704r(t0,t1,t2);}}

static void C_ccall f_6704r(C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
if(C_truep((C_word)C_i_nullp(t2))){
t3=t1;
((C_proc2)(void*)(*((C_word*)t3+1)))(2,t3,C_fix(0));}
else{
t3=(C_word)C_i_cdr(t2);
if(C_truep((C_word)C_i_nullp(t3))){
t4=(C_word)C_i_car(t2);
if(C_truep((C_word)C_i_listp(t4))){
t5=(C_word)C_i_car(t2);
C_apply(4,0,t1,*((C_word*)lf[91]+1),t5);}
else{
C_apply(4,0,t1,*((C_word*)lf[91]+1),t2);}}
else{
C_apply(4,0,t1,*((C_word*)lf[91]+1),t2);}}}

/* int in k5905 in k5612 in k5609 in k5605 in k5314 in k5311 in k5308 in k5305 */
static void C_ccall f_6689(C_word c,C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word *a;
if(c!=3) C_bad_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr3,(void*)f_6689,3,t0,t1,t2);}
if(C_truep((C_word)C_i_listp(t2))){
C_trace("map");
t3=*((C_word*)lf[17]+1);
((C_proc4)(void*)(*((C_word*)t3+1)))(4,t3,t1,C_retrieve2(lf[67],"tb:int"),t2);}
else{
C_trace("ChickenBridge.scm: 367  tb:int");
t3=C_retrieve2(lf[67],"tb:int");
f_6394(3,t3,t1,t2);}}

/* discrete in k5905 in k5612 in k5609 in k5605 in k5314 in k5311 in k5308 in k5305 */
static void C_ccall f_6607(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4,C_word t5,...){
C_word tmp;
C_word t6;
va_list v;
C_word *a,c2=c;
C_save_rest(t5,c2,6);
if(c<6) C_bad_min_argc_2(c,6,t0);
C_check_for_interrupt;
if(!C_demand(c*C_SIZEOF_PAIR+4)){
C_save_and_reclaim((void*)tr6r,(void*)f_6607r,6,t0,t1,t2,t3,t4,t5);}
else{
a=C_alloc((c-6)*3);
t6=C_restore_rest(a,C_rest_count(0));
f_6607r(t0,t1,t2,t3,t4,t5,t6);}}

static void C_ccall f_6607r(C_word t0,C_word t1,C_word t2,C_word t3,C_word t4,C_word t5,C_word t6){
C_word tmp;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word t14;
C_word t15;
C_word t16;
C_word t17;
C_word *a=C_alloc(4);
if(C_truep((C_word)C_i_pairp(t5))){
t7=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_6621,a[2]=t5,a[3]=t1,tmp=(C_word)a,a+=4,tmp);
if(C_truep((C_word)C_i_nullp(t6))){
t8=(C_word)C_i_length(t5);
C_trace("ChickenBridge.scm: 367  tb:discrete");
f_6367(t7,t2,t3,t4,C_fix(0),t8,C_fix(1));}
else{
t8=(C_word)C_i_cdr(t6);
if(C_truep((C_word)C_i_nullp(t8))){
t9=(C_word)C_i_car(t6);
C_trace("ChickenBridge.scm: 367  tb:discrete");
f_6367(t7,t2,t3,t4,C_fix(0),t9,C_fix(1));}
else{
t9=(C_word)C_i_car(t6);
t10=(C_word)C_i_cadr(t6);
C_trace("ChickenBridge.scm: 367  tb:discrete");
f_6367(t7,t2,t3,t4,C_fix(0),t9,t10);}}}
else{
t7=(C_word)C_i_cdr(t6);
if(C_truep((C_word)C_i_nullp(t7))){
t8=(C_word)C_i_car(t6);
C_trace("ChickenBridge.scm: 367  tb:discrete");
f_6367(t1,t2,t3,t4,t5,t8,C_fix(1));}
else{
t8=(C_word)C_i_car(t6);
t9=(C_word)C_i_cadr(t6);
C_trace("ChickenBridge.scm: 367  tb:discrete");
f_6367(t1,t2,t3,t4,t5,t8,t9);}}}

/* k6619 in discrete in k5905 in k5612 in k5609 in k5605 in k5314 in k5311 in k5308 in k5305 */
static void C_ccall f_6621(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
t2=((C_word*)t0)[3];
((C_proc2)(void*)(*((C_word*)t2+1)))(2,t2,(C_word)C_i_list_ref(((C_word*)t0)[2],t1));}

/* rescale in k5905 in k5612 in k5609 in k5605 in k5314 in k5311 in k5308 in k5305 */
static void C_ccall f_6573(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4,C_word t5,C_word t6,...){
C_word tmp;
C_word t7;
va_list v;
C_word *a,c2=c;
C_save_rest(t6,c2,7);
if(c<7) C_bad_min_argc_2(c,7,t0);
C_check_for_interrupt;
if(!C_demand(c*C_SIZEOF_PAIR+8)){
C_save_and_reclaim((void*)tr7r,(void*)f_6573r,7,t0,t1,t2,t3,t4,t5,t6);}
else{
a=C_alloc((c-7)*3);
t7=C_restore_rest(a,C_rest_count(0));
f_6573r(t0,t1,t2,t3,t4,t5,t6,t7);}}

static void C_ccall f_6573r(C_word t0,C_word t1,C_word t2,C_word t3,C_word t4,C_word t5,C_word t6,C_word t7){
C_word tmp;
C_word t8;
C_word t9;
C_word t10;
C_word *a=C_alloc(8);
if(C_truep((C_word)C_i_listp(t2))){
t8=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_6585,a[2]=t7,a[3]=t6,a[4]=t5,a[5]=t4,a[6]=t3,a[7]=((C_word)li55),tmp=(C_word)a,a+=8,tmp);
C_trace("map");
t9=*((C_word*)lf[17]+1);
((C_proc4)(void*)(*((C_word*)t9+1)))(4,t9,t1,t8,t2);}
else{
if(C_truep((C_word)C_i_nullp(t7))){
C_trace("ChickenBridge.scm: 367  tb:rescale");
f_6340(t1,t2,t3,t4,t5,t6,C_fix(1));}
else{
t8=(C_word)C_i_car(t7);
C_trace("ChickenBridge.scm: 367  tb:rescale");
f_6340(t1,t2,t3,t4,t5,t6,t8);}}}

/* a6584 in rescale in k5905 in k5612 in k5609 in k5605 in k5314 in k5311 in k5308 in k5305 */
static void C_ccall f_6585(C_word c,C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word *a;
if(c!=3) C_bad_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr3,(void*)f_6585,3,t0,t1,t2);}
C_apply(9,0,t1,C_retrieve(lf[87]),t2,((C_word*)t0)[6],((C_word*)t0)[5],((C_word*)t0)[4],((C_word*)t0)[3],((C_word*)t0)[2]);}

/* tb:ranbrown in k5905 in k5612 in k5609 in k5605 in k5314 in k5311 in k5308 in k5305 */
static void C_ccall f_6570(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[6],*a=ab;
if(c!=2) C_bad_argc_2(c,2,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_6570,2,t0,t1);}
t2=(C_word)C_a_i_bytevector(&a,1,C_fix(4));
t3=t1;
((C_proc2)(void*)(*((C_word*)t3+1)))(2,t3,(C_word)stub301(t2));}

/* tb:ranpink in k5905 in k5612 in k5609 in k5605 in k5314 in k5311 in k5308 in k5305 */
static void C_ccall f_6567(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[6],*a=ab;
if(c!=2) C_bad_argc_2(c,2,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_6567,2,t0,t1);}
t2=(C_word)C_a_i_bytevector(&a,1,C_fix(4));
t3=t1;
((C_proc2)(void*)(*((C_word*)t3+1)))(2,t3,(C_word)stub298(t2));}

/* tb:ranpoisson in k5905 in k5612 in k5609 in k5605 in k5314 in k5311 in k5308 in k5305 */
static void C_fcall f_6560(C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word *a;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_6560,NULL,2,t1,t2);}
t3=(C_word)C_i_foreign_flonum_argumentp(t2);
t4=t1;
((C_proc2)(void*)(*((C_word*)t4+1)))(2,t4,(C_word)stub295(C_SCHEME_UNDEFINED,t3));}

/* tb:rancauchy in k5905 in k5612 in k5609 in k5605 in k5314 in k5311 in k5308 in k5305 */
static void C_ccall f_6557(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[6],*a=ab;
if(c!=2) C_bad_argc_2(c,2,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_6557,2,t0,t1);}
t2=(C_word)C_a_i_bytevector(&a,1,C_fix(4));
t3=t1;
((C_proc2)(void*)(*((C_word*)t3+1)))(2,t3,(C_word)stub291(t2));}

/* tb:rangamma in k5905 in k5612 in k5609 in k5605 in k5314 in k5311 in k5308 in k5305 */
static void C_fcall f_6550(C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word t5;
C_word ab[6],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_6550,NULL,2,t1,t2);}
t3=(C_word)C_a_i_bytevector(&a,1,C_fix(4));
t4=(C_word)C_i_foreign_flonum_argumentp(t2);
t5=t1;
((C_proc2)(void*)(*((C_word*)t5+1)))(2,t5,(C_word)stub287(t3,t4));}

/* tb:ranexp in k5905 in k5612 in k5609 in k5605 in k5314 in k5311 in k5308 in k5305 */
static void C_fcall f_6532(C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word t5;
C_word ab[6],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_6532,NULL,2,t1,t2);}
t3=(C_word)C_a_i_bytevector(&a,1,C_fix(4));
t4=(C_word)C_i_foreign_flonum_argumentp(t2);
t5=t1;
((C_proc2)(void*)(*((C_word*)t5+1)))(2,t5,(C_word)stub275(t3,t4));}

/* tb:rangauss in k5905 in k5612 in k5609 in k5605 in k5314 in k5311 in k5308 in k5305 */
static void C_fcall f_6521(C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word ab[6],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_6521,NULL,3,t1,t2,t3);}
t4=(C_word)C_a_i_bytevector(&a,1,C_fix(4));
t5=(C_word)C_i_foreign_flonum_argumentp(t2);
t6=(C_word)C_i_foreign_flonum_argumentp(t3);
t7=t1;
((C_proc2)(void*)(*((C_word*)t7+1)))(2,t7,(C_word)stub269(t4,t5,t6));}

/* tb:ranmiddle in k5905 in k5612 in k5609 in k5605 in k5314 in k5311 in k5308 in k5305 */
static void C_ccall f_6518(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[6],*a=ab;
if(c!=2) C_bad_argc_2(c,2,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_6518,2,t0,t1);}
t2=(C_word)C_a_i_bytevector(&a,1,C_fix(4));
t3=t1;
((C_proc2)(void*)(*((C_word*)t3+1)))(2,t3,(C_word)stub264(t2));}

/* tb:ranhigh in k5905 in k5612 in k5609 in k5605 in k5314 in k5311 in k5308 in k5305 */
static void C_ccall f_6515(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[6],*a=ab;
if(c!=2) C_bad_argc_2(c,2,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_6515,2,t0,t1);}
t2=(C_word)C_a_i_bytevector(&a,1,C_fix(4));
t3=t1;
((C_proc2)(void*)(*((C_word*)t3+1)))(2,t3,(C_word)stub261(t2));}

/* tb:ranlow in k5905 in k5612 in k5609 in k5605 in k5314 in k5311 in k5308 in k5305 */
static void C_ccall f_6512(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[6],*a=ab;
if(c!=2) C_bad_argc_2(c,2,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_6512,2,t0,t1);}
t2=(C_word)C_a_i_bytevector(&a,1,C_fix(4));
t3=t1;
((C_proc2)(void*)(*((C_word*)t3+1)))(2,t3,(C_word)stub258(t2));}

/* tb:ranf in k5905 in k5612 in k5609 in k5605 in k5314 in k5311 in k5308 in k5305 */
static void C_fcall f_6483(C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word t5;
C_word ab[6],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_6483,NULL,2,t1,t2);}
t3=(C_word)C_a_i_bytevector(&a,1,C_fix(4));
t4=(C_word)C_i_foreign_flonum_argumentp(t2);
t5=t1;
((C_proc2)(void*)(*((C_word*)t5+1)))(2,t5,(C_word)stub241(t3,t4));}

/* tb:rani in k5905 in k5612 in k5609 in k5605 in k5314 in k5311 in k5308 in k5305 */
static void C_fcall f_6476(C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word *a;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_6476,NULL,2,t1,t2);}
t3=(C_word)C_i_foreign_fixnum_argumentp(t2);
t4=t1;
((C_proc2)(void*)(*((C_word*)t4+1)))(2,t4,(C_word)stub237(C_SCHEME_UNDEFINED,t3));}

/* tb:ran-set! in k5905 in k5612 in k5609 in k5605 in k5314 in k5311 in k5308 in k5305 */
static void C_ccall f_6473(C_word c,C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word *a;
if(c!=3) C_bad_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr3,(void*)f_6473,3,t0,t1,t2);}
t3=t1;
((C_proc2)(void*)(*((C_word*)t3+1)))(2,t3,(C_word)stub233(C_SCHEME_UNDEFINED,t2));}

/* tb:keynum->hertz in k5905 in k5612 in k5609 in k5605 in k5314 in k5311 in k5308 in k5305 */
static void C_fcall f_6452(C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word t5;
C_word ab[6],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_6452,NULL,2,t1,t2);}
t3=(C_word)C_a_i_bytevector(&a,1,C_fix(4));
t4=(C_word)C_i_foreign_flonum_argumentp(t2);
t5=t1;
((C_proc2)(void*)(*((C_word*)t5+1)))(2,t5,(C_word)stub219(t3,t4));}

/* tb:scaler->cents in k5905 in k5612 in k5609 in k5605 in k5314 in k5311 in k5308 in k5305 */
static void C_ccall f_6445(C_word c,C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word *a;
if(c!=3) C_bad_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr3,(void*)f_6445,3,t0,t1,t2);}
t3=(C_word)C_i_foreign_flonum_argumentp(t2);
t4=t1;
((C_proc2)(void*)(*((C_word*)t4+1)))(2,t4,(C_word)stub215(C_SCHEME_UNDEFINED,t3));}

/* tb:cents->scaler in k5905 in k5612 in k5609 in k5605 in k5314 in k5311 in k5308 in k5305 */
static void C_ccall f_6438(C_word c,C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word t5;
C_word ab[6],*a=ab;
if(c!=3) C_bad_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr3,(void*)f_6438,3,t0,t1,t2);}
t3=(C_word)C_a_i_bytevector(&a,1,C_fix(4));
t4=(C_word)C_i_foreign_fixnum_argumentp(t2);
t5=t1;
((C_proc2)(void*)(*((C_word*)t5+1)))(2,t5,(C_word)stub210(t3,t4));}

/* tb:rhythm->seconds in k5905 in k5612 in k5609 in k5605 in k5314 in k5311 in k5308 in k5305 */
static void C_fcall f_6423(C_word t1,C_word t2,C_word t3,C_word t4){
C_word tmp;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word ab[6],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_6423,NULL,4,t1,t2,t3,t4);}
t5=(C_word)C_a_i_bytevector(&a,1,C_fix(4));
t6=(C_word)C_i_foreign_flonum_argumentp(t2);
t7=(C_word)C_i_foreign_flonum_argumentp(t3);
t8=(C_word)C_i_foreign_flonum_argumentp(t4);
t9=t1;
((C_proc2)(void*)(*((C_word*)t9+1)))(2,t9,(C_word)stub203(t5,t6,t7,t8));}

/* tb:quantize in k5905 in k5612 in k5609 in k5605 in k5314 in k5311 in k5308 in k5305 */
static void C_fcall f_6412(C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word ab[6],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_6412,NULL,3,t1,t2,t3);}
t4=(C_word)C_a_i_bytevector(&a,1,C_fix(4));
t5=(C_word)C_i_foreign_flonum_argumentp(t2);
t6=(C_word)C_i_foreign_flonum_argumentp(t3);
t7=t1;
((C_proc2)(void*)(*((C_word*)t7+1)))(2,t7,(C_word)stub195(t4,t5,t6));}

/* tb:decimals in k5905 in k5612 in k5609 in k5605 in k5314 in k5311 in k5308 in k5305 */
static void C_fcall f_6401(C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word ab[6],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_6401,NULL,3,t1,t2,t3);}
t4=(C_word)C_a_i_bytevector(&a,1,C_fix(4));
t5=(C_word)C_i_foreign_flonum_argumentp(t2);
t6=(C_word)C_i_foreign_fixnum_argumentp(t3);
t7=t1;
((C_proc2)(void*)(*((C_word*)t7+1)))(2,t7,(C_word)stub188(t4,t5,t6));}

/* tb:int in k5905 in k5612 in k5609 in k5605 in k5314 in k5311 in k5308 in k5305 */
static void C_ccall f_6394(C_word c,C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word *a;
if(c!=3) C_bad_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr3,(void*)f_6394,3,t0,t1,t2);}
t3=(C_word)C_i_foreign_flonum_argumentp(t2);
t4=t1;
((C_proc2)(void*)(*((C_word*)t4+1)))(2,t4,(C_word)stub183(C_SCHEME_UNDEFINED,t3));}

/* tb:discrete in k5905 in k5612 in k5609 in k5605 in k5314 in k5311 in k5308 in k5305 */
static void C_fcall f_6367(C_word t1,C_word t2,C_word t3,C_word t4,C_word t5,C_word t6,C_word t7){
C_word tmp;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word t14;
C_word *a;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_6367,NULL,7,t1,t2,t3,t4,t5,t6,t7);}
t8=(C_word)C_i_foreign_flonum_argumentp(t2);
t9=(C_word)C_i_foreign_flonum_argumentp(t3);
t10=(C_word)C_i_foreign_flonum_argumentp(t4);
t11=(C_word)C_i_foreign_fixnum_argumentp(t5);
t12=(C_word)C_i_foreign_fixnum_argumentp(t6);
t13=(C_word)C_i_foreign_flonum_argumentp(t7);
t14=t1;
((C_proc2)(void*)(*((C_word*)t14+1)))(2,t14,(C_word)stub174(C_SCHEME_UNDEFINED,t8,t9,t10,t11,t12,t13));}

/* tb:rescale in k5905 in k5612 in k5609 in k5605 in k5314 in k5311 in k5308 in k5305 */
static void C_fcall f_6340(C_word t1,C_word t2,C_word t3,C_word t4,C_word t5,C_word t6,C_word t7){
C_word tmp;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word t14;
C_word t15;
C_word ab[6],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_6340,NULL,7,t1,t2,t3,t4,t5,t6,t7);}
t8=(C_word)C_a_i_bytevector(&a,1,C_fix(4));
t9=(C_word)C_i_foreign_flonum_argumentp(t2);
t10=(C_word)C_i_foreign_flonum_argumentp(t3);
t11=(C_word)C_i_foreign_flonum_argumentp(t4);
t12=(C_word)C_i_foreign_flonum_argumentp(t5);
t13=(C_word)C_i_foreign_flonum_argumentp(t6);
t14=(C_word)C_i_foreign_flonum_argumentp(t7);
t15=t1;
((C_proc2)(void*)(*((C_word*)t15+1)))(2,t15,(C_word)stub159(t8,t9,t10,t11,t12,t13,t14));}

/* bitwise-test in k5905 in k5612 in k5609 in k5605 in k5314 in k5311 in k5308 in k5305 */
static void C_fcall f_6299(C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word ab[12],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_6299,NULL,3,t1,t2,t3);}
t4=(*a=C_VECTOR_TYPE|1,a[1]=t2,tmp=(C_word)a,a+=2,tmp);
t5=(*a=C_VECTOR_TYPE|1,a[1]=t3,tmp=(C_word)a,a+=2,tmp);
t6=C_SCHEME_UNDEFINED;
t7=(*a=C_VECTOR_TYPE|1,a[1]=t6,tmp=(C_word)a,a+=2,tmp);
t8=C_set_block_item(t7,0,(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_6305,a[2]=t7,a[3]=t4,a[4]=t5,a[5]=((C_word)li31),tmp=(C_word)a,a+=6,tmp));
t9=((C_word*)t7)[1];
f_6305(t9,t1,C_SCHEME_FALSE);}

/* do129 in bitwise-test in k5905 in k5612 in k5609 in k5605 in k5314 in k5311 in k5308 in k5305 */
static void C_fcall f_6305(C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_6305,NULL,3,t0,t1,t2);}
t3=(*a=C_VECTOR_TYPE|1,a[1]=t2,tmp=(C_word)a,a+=2,tmp);
if(C_truep((C_word)C_i_nequalp(((C_word*)((C_word*)t0)[4])[1],C_fix(0)))){
t4=t1;
((C_proc2)(void*)(*((C_word*)t4+1)))(2,t4,((C_word*)t3)[1]);}
else{
t4=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_6315,a[2]=t3,a[3]=t1,a[4]=((C_word*)t0)[2],a[5]=((C_word*)t0)[4],a[6]=((C_word*)t0)[3],tmp=(C_word)a,a+=7,tmp);
if(C_truep((C_word)C_i_bit_setp(((C_word*)((C_word*)t0)[4])[1],C_fix(0)))){
if(C_truep((C_word)C_i_bit_setp(((C_word*)((C_word*)t0)[3])[1],C_fix(0)))){
t5=C_set_block_item(t3,0,C_SCHEME_TRUE);
t6=t4;
f_6315(t6,t5);}
else{
t5=C_set_block_item(t3,0,C_SCHEME_FALSE);
t6=C_set_block_item(((C_word*)t0)[4],0,C_fix(0));
t7=t4;
f_6315(t7,t6);}}
else{
t5=t4;
f_6315(t5,C_SCHEME_UNDEFINED);}}}

/* k6313 in do129 in bitwise-test in k5905 in k5612 in k5609 in k5605 in k5314 in k5311 in k5308 in k5305 */
static void C_fcall f_6315(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[8],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_6315,NULL,2,t0,t1);}
t2=(C_word)C_a_i_arithmetic_shift(&a,2,((C_word*)((C_word*)t0)[6])[1],C_fix(-1));
t3=C_mutate(((C_word *)((C_word*)t0)[6])+1,t2);
t4=(C_word)C_a_i_arithmetic_shift(&a,2,((C_word*)((C_word*)t0)[5])[1],C_fix(-1));
t5=C_mutate(((C_word *)((C_word*)t0)[5])+1,t4);
t6=((C_word*)((C_word*)t0)[4])[1];
f_6305(t6,((C_word*)t0)[3],((C_word*)((C_word*)t0)[2])[1]);}

/* list-prop in k5905 in k5612 in k5609 in k5605 in k5314 in k5311 in k5308 in k5305 */
static void C_ccall f_6213(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,...){
C_word tmp;
C_word t4;
va_list v;
C_word *a,c2=c;
C_save_rest(t3,c2,4);
if(c<4) C_bad_min_argc_2(c,4,t0);
C_check_for_interrupt;
if(!C_demand(c*C_SIZEOF_PAIR+0)){
C_save_and_reclaim((void*)tr4r,(void*)f_6213r,4,t0,t1,t2,t3);}
else{
a=C_alloc((c-4)*3);
t4=C_restore_rest(a,C_rest_count(0));
f_6213r(t0,t1,t2,t3,t4);}}

static void C_ccall f_6213r(C_word t0,C_word t1,C_word t2,C_word t3,C_word t4){
C_word tmp;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
if(C_truep((C_word)C_i_nullp(t2))){
t5=(C_word)C_i_nullp(t4);
t6=t1;
((C_proc2)(void*)(*((C_word*)t6+1)))(2,t6,(C_truep(t5)?C_SCHEME_FALSE:(C_word)C_i_car(t4)));}
else{
t5=(C_word)C_i_car(t2);
t6=(C_word)C_eqp(t5,t3);
if(C_truep(t6)){
t7=t1;
((C_proc2)(void*)(*((C_word*)t7+1)))(2,t7,(C_word)C_i_cadr(t2));}
else{
t7=(C_word)C_i_cddr(t2);
C_apply(6,0,t1,C_retrieve2(lf[63],"list-prop"),t7,t3,t4);}}}

/* make-list in k5905 in k5612 in k5609 in k5605 in k5314 in k5311 in k5308 in k5305 */
static void C_ccall f_6165(C_word c,C_word t0,C_word t1,C_word t2,...){
C_word tmp;
C_word t3;
va_list v;
C_word *a,c2=c;
C_save_rest(t2,c2,3);
if(c<3) C_bad_min_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_demand(c*C_SIZEOF_PAIR+6)){
C_save_and_reclaim((void*)tr3rv,(void*)f_6165r,3,t0,t1,t2);}
else{
a=C_alloc((c-3)*3);
t3=C_restore_rest_vector(a,C_rest_count(0));
f_6165r(t0,t1,t2,t3);}}

static void C_ccall f_6165r(C_word t0,C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word *a=C_alloc(6);
if(C_truep((C_word)C_i_lessp(t2,C_fix(0)))){
C_trace("ChickenBridge.scm: 366  error");
t4=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t1,lf[62],t2);}
else{
t4=C_SCHEME_UNDEFINED;
t5=(*a=C_VECTOR_TYPE|1,a[1]=t4,tmp=(C_word)a,a+=2,tmp);
t6=C_set_block_item(t5,0,(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_6177,a[2]=t5,a[3]=((C_word)li28),tmp=(C_word)a,a+=4,tmp));
t7=(C_word)C_vemptyp(t3);
t8=(C_truep(t7)?C_SCHEME_FALSE:(C_word)C_i_vector_ref(t3,C_fix(0)));
C_trace("ChickenBridge.scm: 366  mk");
t9=((C_word*)t5)[1];
f_6177(t9,t1,t2,t8);}}

/* mk in make-list in k5905 in k5612 in k5609 in k5605 in k5314 in k5311 in k5308 in k5305 */
static void C_fcall f_6177(C_word t0,C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word *a;
loop:
a=C_alloc(8);
C_check_for_interrupt;
if(!C_stack_probe(a)){
C_save_and_reclaim((void*)trf_6177,NULL,4,t0,t1,t2,t3);}
if(C_truep((C_word)C_i_nequalp(t2,C_fix(0)))){
t4=t1;
((C_proc2)(void*)(*((C_word*)t4+1)))(2,t4,C_SCHEME_END_OF_LIST);}
else{
t4=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_6194,a[2]=t3,a[3]=t1,tmp=(C_word)a,a+=4,tmp);
t5=(C_word)C_a_i_minus(&a,2,t2,C_fix(1));
C_trace("ChickenBridge.scm: 366  mk");
t7=t4;
t8=t5;
t9=t3;
t1=t7;
t2=t8;
t3=t9;
goto loop;}}

/* k6192 in mk in make-list in k5905 in k5612 in k5609 in k5605 in k5314 in k5311 in k5308 in k5305 */
static void C_ccall f_6194(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word ab[3],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_6194,2,t0,t1);}
t2=((C_word*)t0)[3];
((C_proc2)(void*)(*((C_word*)t2+1)))(2,t2,(C_word)C_a_i_cons(&a,2,((C_word*)t0)[2],t1));}

/* list-set! in k5905 in k5612 in k5609 in k5605 in k5314 in k5311 in k5308 in k5305 */
static void C_ccall f_6155(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4){
C_word tmp;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
if(c!=5) C_bad_argc_2(c,5,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr5,(void*)f_6155,5,t0,t1,t2,t3,t4);}
t5=(C_word)C_i_list_tail(t2,t3);
t6=(C_word)C_i_set_car(t5,t4);
t7=t1;
((C_proc2)(void*)(*((C_word*)t7+1)))(2,t7,t4);}

/* list* in k5905 in k5612 in k5609 in k5605 in k5314 in k5311 in k5308 in k5305 */
static void C_ccall f_6115(C_word c,C_word t0,C_word t1,...){
C_word tmp;
C_word t2;
va_list v;
C_word *a,c2=c;
C_save_rest(t1,c2,2);
C_check_for_interrupt;
if(!C_demand(c*C_SIZEOF_PAIR+4)){
C_save_and_reclaim((void*)tr2r,(void*)f_6115r,2,t0,t1);}
else{
a=C_alloc((c-2)*3);
t2=C_restore_rest(a,C_rest_count(0));
f_6115r(t0,t1,t2);}}

static void C_ccall f_6115r(C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a=C_alloc(4);
if(C_truep((C_word)C_i_nullp(t2))){
C_trace("ChickenBridge.scm: 366  error");
t3=*((C_word*)lf[4]+1);
((C_proc3)C_retrieve_proc(t3))(3,t3,t1,lf[59]);}
else{
t3=(C_word)C_i_cdr(t2);
if(C_truep((C_word)C_i_nullp(t3))){
t4=t1;
((C_proc2)(void*)(*((C_word*)t4+1)))(2,t4,(C_word)C_i_car(t2));}
else{
t4=(C_word)C_i_car(t2);
t5=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_6145,a[2]=t4,a[3]=t1,tmp=(C_word)a,a+=4,tmp);
t6=(C_word)C_i_cdr(t2);
C_apply(4,0,t5,C_retrieve(lf[58]),t6);}}}

/* k6143 in list* in k5905 in k5612 in k5609 in k5605 in k5314 in k5311 in k5308 in k5305 */
static void C_ccall f_6145(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word ab[3],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_6145,2,t0,t1);}
t2=((C_word*)t0)[3];
((C_proc2)(void*)(*((C_word*)t2+1)))(2,t2,(C_word)C_a_i_cons(&a,2,((C_word*)t0)[2],t1));}

/* butlast in k5905 in k5612 in k5609 in k5605 in k5314 in k5311 in k5308 in k5305 */
static void C_ccall f_6047(C_word c,C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word ab[7],*a=ab;
if(c!=3) C_bad_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr3,(void*)f_6047,3,t0,t1,t2);}
t3=(C_word)C_i_cdr(t2);
if(C_truep((C_word)C_i_nullp(t3))){
t4=t1;
((C_proc2)(void*)(*((C_word*)t4+1)))(2,t4,C_SCHEME_END_OF_LIST);}
else{
t4=(C_word)C_i_cddr(t2);
if(C_truep((C_word)C_i_nullp(t4))){
t5=(C_word)C_i_car(t2);
t6=t1;
((C_proc2)(void*)(*((C_word*)t6+1)))(2,t6,(C_word)C_a_i_list(&a,1,t5));}
else{
t5=(C_word)C_i_car(t2);
t6=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_6081,a[2]=t5,a[3]=t1,tmp=(C_word)a,a+=4,tmp);
t7=(C_word)C_i_cdr(t2);
C_trace("ChickenBridge.scm: 366  butlast");
t8=C_retrieve(lf[57]);
((C_proc3)C_retrieve_proc(t8))(3,t8,t6,t7);}}}

/* k6079 in butlast in k5905 in k5612 in k5609 in k5605 in k5314 in k5311 in k5308 in k5305 */
static void C_ccall f_6081(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word ab[3],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_6081,2,t0,t1);}
t2=((C_word*)t0)[3];
((C_proc2)(void*)(*((C_word*)t2+1)))(2,t2,(C_word)C_a_i_cons(&a,2,((C_word*)t0)[2],t1));}

/* last in k5905 in k5612 in k5609 in k5605 in k5314 in k5311 in k5308 in k5305 */
static void C_ccall f_6024(C_word c,C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word t5;
C_word *a;
if(c!=3) C_bad_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr3,(void*)f_6024,3,t0,t1,t2);}
t3=(C_word)C_i_cdr(t2);
if(C_truep((C_word)C_i_nullp(t3))){
t4=t1;
((C_proc2)(void*)(*((C_word*)t4+1)))(2,t4,(C_word)C_i_car(t2));}
else{
t4=(C_word)C_i_cdr(t2);
C_trace("ChickenBridge.scm: 366  last");
t5=C_retrieve(lf[56]);
((C_proc3)C_retrieve_proc(t5))(3,t5,t1,t4);}}

/* rest in k5905 in k5612 in k5609 in k5605 in k5314 in k5311 in k5308 in k5305 */
static void C_ccall f_6018(C_word c,C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word *a;
if(c!=3) C_bad_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr3,(void*)f_6018,3,t0,t1,t2);}
t3=t1;
((C_proc2)(void*)(*((C_word*)t3+1)))(2,t3,(C_word)C_i_cdr(t2));}

/* tenth in k5905 in k5612 in k5609 in k5605 in k5314 in k5311 in k5308 in k5305 */
static void C_ccall f_6003(C_word c,C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word t5;
C_word *a;
if(c!=3) C_bad_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr3,(void*)f_6003,3,t0,t1,t2);}
t3=(C_word)C_i_cddddr(t2);
t4=(C_word)C_i_cddddr(t3);
t5=t1;
((C_proc2)(void*)(*((C_word*)t5+1)))(2,t5,(C_word)C_i_cadr(t4));}

/* ninth in k5905 in k5612 in k5609 in k5605 in k5314 in k5311 in k5308 in k5305 */
static void C_ccall f_5989(C_word c,C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word t5;
C_word *a;
if(c!=3) C_bad_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr3,(void*)f_5989,3,t0,t1,t2);}
t3=(C_word)C_i_cddddr(t2);
t4=(C_word)C_i_cddddr(t3);
t5=t1;
((C_proc2)(void*)(*((C_word*)t5+1)))(2,t5,(C_word)C_i_car(t4));}

/* eighth in k5905 in k5612 in k5609 in k5605 in k5314 in k5311 in k5308 in k5305 */
static void C_ccall f_5979(C_word c,C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word *a;
if(c!=3) C_bad_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr3,(void*)f_5979,3,t0,t1,t2);}
t3=(C_word)C_i_cddddr(t2);
t4=t1;
((C_proc2)(void*)(*((C_word*)t4+1)))(2,t4,(C_word)C_i_cadddr(t3));}

/* seventh in k5905 in k5612 in k5609 in k5605 in k5314 in k5311 in k5308 in k5305 */
static void C_ccall f_5969(C_word c,C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word *a;
if(c!=3) C_bad_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr3,(void*)f_5969,3,t0,t1,t2);}
t3=(C_word)C_i_cddddr(t2);
t4=t1;
((C_proc2)(void*)(*((C_word*)t4+1)))(2,t4,(C_word)C_i_caddr(t3));}

/* sixth in k5905 in k5612 in k5609 in k5605 in k5314 in k5311 in k5308 in k5305 */
static void C_ccall f_5959(C_word c,C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word *a;
if(c!=3) C_bad_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr3,(void*)f_5959,3,t0,t1,t2);}
t3=(C_word)C_i_cddddr(t2);
t4=t1;
((C_proc2)(void*)(*((C_word*)t4+1)))(2,t4,(C_word)C_i_cadr(t3));}

/* fifth in k5905 in k5612 in k5609 in k5605 in k5314 in k5311 in k5308 in k5305 */
static void C_ccall f_5949(C_word c,C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word *a;
if(c!=3) C_bad_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr3,(void*)f_5949,3,t0,t1,t2);}
t3=(C_word)C_i_cddddr(t2);
t4=t1;
((C_proc2)(void*)(*((C_word*)t4+1)))(2,t4,(C_word)C_i_car(t3));}

/* chdir in k5905 in k5612 in k5609 in k5605 in k5314 in k5311 in k5308 in k5305 */
static void C_ccall f_5920(C_word c,C_word t0,C_word t1,...){
C_word tmp;
C_word t2;
va_list v;
C_word *a,c2=c;
C_save_rest(t1,c2,2);
C_check_for_interrupt;
if(!C_demand(c*C_SIZEOF_PAIR+3)){
C_save_and_reclaim((void*)tr2rv,(void*)f_5920r,2,t0,t1);}
else{
a=C_alloc((c-2)*3);
t2=C_restore_rest_vector(a,C_rest_count(0));
f_5920r(t0,t1,t2);}}

static void C_ccall f_5920r(C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word t5;
C_word *a=C_alloc(3);
t3=(C_word)C_vemptyp(t2);
t4=(C_truep(t3)?lf[45]:(C_word)C_i_vector_ref(t2,C_fix(0)));
t5=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_5929,a[2]=((C_word)li15),tmp=(C_word)a,a+=3,tmp);
((C_proc3)(void*)(*((C_word*)t5+1)))(3,t5,t1,t4);}

/* f_5929 in chdir in k5905 in k5612 in k5609 in k5605 in k5314 in k5311 in k5308 in k5305 */
static void C_ccall f_5929(C_word c,C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word t5;
C_word ab[3],*a=ab;
if(c!=3) C_bad_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr3,(void*)f_5929,3,t0,t1,t2);}
t3=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_5934,a[2]=t1,tmp=(C_word)a,a+=3,tmp);
if(C_truep(t2)){
t4=(C_word)C_i_foreign_string_argumentp(t2);
C_trace("##sys#make-c-string");
t5=C_retrieve(lf[46]);
((C_proc3)C_retrieve_proc(t5))(3,t5,t3,t4);}
else{
t4=t3;
f_5934(2,t4,C_SCHEME_FALSE);}}

/* k5932 */
static void C_ccall f_5934(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
t2=((C_word*)t0)[2];
((C_proc2)(void*)(*((C_word*)t2+1)))(2,t2,(C_word)stub95(C_SCHEME_UNDEFINED,t1));}

/* cwd in k5905 in k5612 in k5609 in k5605 in k5314 in k5311 in k5308 in k5305 */
static void C_ccall f_5909(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word ab[3],*a=ab;
if(c!=2) C_bad_argc_2(c,2,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_5909,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_5914,a[2]=((C_word)li13),tmp=(C_word)a,a+=3,tmp);
((C_proc2)(void*)(*((C_word*)t2+1)))(2,t2,t1);}

/* f_5914 in cwd in k5905 in k5612 in k5609 in k5605 in k5314 in k5311 in k5308 in k5305 */
static void C_ccall f_5914(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[5],*a=ab;
if(c!=2) C_bad_argc_2(c,2,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_5914,2,t0,t1);}
t2=(C_word)C_a_i_bytevector(&a,1,C_fix(3));
C_trace("##sys#peek-c-string");
t3=*((C_word*)lf[43]+1);
((C_proc4)(void*)(*((C_word*)t3+1)))(4,t3,t1,(C_word)stub90(t2),C_fix(0));}

/* expand-send in k5612 in k5609 in k5605 in k5314 in k5311 in k5308 in k5305 */
static void C_ccall f_5616(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4){
C_word tmp;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word ab[17],*a=ab;
if(c!=5) C_bad_argc_2(c,5,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr5,(void*)f_5616,5,t0,t1,t2,t3,t4);}
t5=(*a=C_VECTOR_TYPE|1,a[1]=t3,tmp=(C_word)a,a+=2,tmp);
t6=t4;
t7=(C_truep(t6)?t6:(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_5896,a[2]=((C_word)li5),tmp=(C_word)a,a+=3,tmp));
t8=t4;
t9=(C_truep(t8)?(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_5885,a[2]=((C_word)li6),tmp=(C_word)a,a+=3,tmp):(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_5894,a[2]=((C_word)li7),tmp=(C_word)a,a+=3,tmp));
t10=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_5626,a[2]=t9,a[3]=t7,a[4]=t1,a[5]=t5,tmp=(C_word)a,a+=6,tmp);
if(C_truep((C_word)C_i_symbolp(t2))){
C_trace("ChickenBridge.scm: 272  symbol->string");
t11=*((C_word*)lf[25]+1);
((C_proc3)C_retrieve_proc(t11))(3,t11,t10,t2);}
else{
t11=t10;
f_5626(2,t11,t2);}}

/* k5624 in expand-send in k5612 in k5609 in k5605 in k5314 in k5311 in k5308 in k5305 */
static void C_ccall f_5626(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[10],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_5626,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_5629,a[2]=((C_word*)t0)[2],a[3]=t1,a[4]=((C_word*)t0)[3],a[5]=((C_word*)t0)[4],a[6]=((C_word*)t0)[5],tmp=(C_word)a,a+=7,tmp);
t3=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_5877,a[2]=((C_word)li11),tmp=(C_word)a,a+=3,tmp);
C_trace("ChickenBridge.scm: 273  hash-table-ref");
t4=*((C_word*)lf[41]+1);
((C_proc5)C_retrieve_proc(t4))(5,t4,t2,C_retrieve(lf[29]),t1,t3);}

/* a5876 in k5624 in expand-send in k5612 in k5609 in k5605 in k5314 in k5311 in k5308 in k5305 */
static void C_ccall f_5877(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
if(c!=2) C_bad_argc_2(c,2,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_5877,2,t0,t1);}
t2=t1;
((C_proc2)(void*)(*((C_word*)t2+1)))(2,t2,C_SCHEME_FALSE);}

/* k5627 in k5624 in expand-send in k5612 in k5609 in k5605 in k5314 in k5311 in k5308 in k5305 */
static void C_ccall f_5629(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[8],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_5629,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_5632,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=t1,a[7]=((C_word*)t0)[6],tmp=(C_word)a,a+=8,tmp);
t3=t1;
if(C_truep(t3)){
t4=t2;
f_5632(2,t4,C_SCHEME_UNDEFINED);}
else{
C_trace("ChickenBridge.scm: 274  ferror");
t4=((C_word*)t0)[4];
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[40],((C_word*)t0)[3]);}}

/* k5630 in k5627 in k5624 in expand-send in k5612 in k5609 in k5605 in k5314 in k5311 in k5308 in k5305 */
static void C_ccall f_5632(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word ab[14],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_5632,2,t0,t1);}
t2=((C_word*)((C_word*)t0)[7])[1];
t3=(C_word)C_i_car(((C_word*)t0)[6]);
t4=(C_word)C_i_cdr(((C_word*)t0)[6]);
t5=C_SCHEME_FALSE;
t6=(*a=C_VECTOR_TYPE|1,a[1]=t5,tmp=(C_word)a,a+=2,tmp);
t7=(C_word)C_i_length(t4);
t8=(*a=C_CLOSURE_TYPE|11,a[1]=(C_word)f_5647,a[2]=t2,a[3]=t7,a[4]=((C_word*)t0)[2],a[5]=((C_word*)t0)[3],a[6]=((C_word*)t0)[4],a[7]=t6,a[8]=t4,a[9]=((C_word*)t0)[7],a[10]=t3,a[11]=((C_word*)t0)[5],tmp=(C_word)a,a+=12,tmp);
if(C_truep((C_word)C_i_nequalp(t7,C_fix(1)))){
t9=(C_word)C_i_car(t4);
t10=t8;
f_5647(t10,(C_word)C_eqp(t9,lf[39]));}
else{
t9=t8;
f_5647(t9,C_SCHEME_FALSE);}}

/* k5645 in k5630 in k5627 in k5624 in expand-send in k5612 in k5609 in k5605 in k5314 in k5311 in k5308 in k5305 */
static void C_fcall f_5647(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[15],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_5647,NULL,2,t0,t1);}
if(C_truep(t1)){
t2=((C_word*)t0)[11];
((C_proc2)(void*)(*((C_word*)t2+1)))(2,t2,(C_word)C_a_i_cons(&a,2,((C_word*)t0)[10],((C_word*)((C_word*)t0)[9])[1]));}
else{
t2=(*a=C_CLOSURE_TYPE|11,a[1]=(C_word)f_5657,a[2]=((C_word*)t0)[11],a[3]=((C_word*)t0)[2],a[4]=((C_word*)t0)[3],a[5]=((C_word*)t0)[4],a[6]=((C_word*)t0)[5],a[7]=((C_word*)t0)[6],a[8]=((C_word*)t0)[7],a[9]=((C_word*)t0)[8],a[10]=((C_word*)t0)[10],a[11]=((C_word*)t0)[9],tmp=(C_word)a,a+=12,tmp);
C_trace("ChickenBridge.scm: 288  append");
t3=*((C_word*)lf[18]+1);
((C_proc4)C_retrieve_proc(t3))(4,t3,t2,((C_word*)t0)[8],C_SCHEME_END_OF_LIST);}}

/* k5655 in k5645 in k5630 in k5627 in k5624 in expand-send in k5612 in k5609 in k5605 in k5314 in k5311 in k5308 in k5305 */
static void C_ccall f_5657(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[15],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_5657,2,t0,t1);}
t2=C_SCHEME_UNDEFINED;
t3=(*a=C_VECTOR_TYPE|1,a[1]=t2,tmp=(C_word)a,a+=2,tmp);
t4=C_set_block_item(t3,0,(*a=C_CLOSURE_TYPE|12,a[1]=(C_word)f_5659,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],a[7]=((C_word*)t0)[8],a[8]=t3,a[9]=((C_word*)t0)[9],a[10]=((C_word*)t0)[10],a[11]=((C_word*)t0)[11],a[12]=((C_word)li10),tmp=(C_word)a,a+=13,tmp));
t5=((C_word*)t3)[1];
f_5659(t5,((C_word*)t0)[2],t1,C_SCHEME_FALSE,C_SCHEME_FALSE,C_fix(0));}

/* do63 in k5655 in k5645 in k5630 in k5627 in k5624 in expand-send in k5612 in k5609 in k5605 in k5314 in k5311 in k5308 in k5305 */
static void C_fcall f_5659(C_word t0,C_word t1,C_word t2,C_word t3,C_word t4,C_word t5){
C_word tmp;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word t14;
C_word t15;
C_word t16;
C_word ab[38],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_5659,NULL,6,t0,t1,t2,t3,t4,t5);}
t6=(*a=C_VECTOR_TYPE|1,a[1]=t3,tmp=(C_word)a,a+=2,tmp);
t7=(*a=C_VECTOR_TYPE|1,a[1]=t4,tmp=(C_word)a,a+=2,tmp);
t8=(*a=C_VECTOR_TYPE|1,a[1]=t5,tmp=(C_word)a,a+=2,tmp);
if(C_truep((C_word)C_i_nullp(((C_word*)((C_word*)t0)[11])[1]))){
t9=C_SCHEME_UNDEFINED;
t10=(*a=C_VECTOR_TYPE|1,a[1]=t9,tmp=(C_word)a,a+=2,tmp);
t11=C_set_block_item(t10,0,(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_5671,a[2]=((C_word*)t0)[9],a[3]=t10,a[4]=t2,a[5]=((C_word*)t0)[10],a[6]=((C_word)li8),tmp=(C_word)a,a+=7,tmp));
t12=((C_word*)t10)[1];
f_5671(t12,t1,t2);}
else{
t9=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_5712,a[2]=t8,a[3]=t7,a[4]=t6,a[5]=t2,a[6]=t1,a[7]=((C_word*)t0)[8],tmp=(C_word)a,a+=8,tmp);
t10=(*a=C_CLOSURE_TYPE|14,a[1]=(C_word)f_5718,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=t8,a[5]=((C_word*)t0)[4],a[6]=((C_word*)t0)[5],a[7]=((C_word*)t0)[6],a[8]=t2,a[9]=t7,a[10]=((C_word*)t0)[9],a[11]=t6,a[12]=((C_word*)t0)[11],a[13]=t9,a[14]=((C_word*)t0)[7],tmp=(C_word)a,a+=15,tmp);
t11=((C_word*)((C_word*)t0)[7])[1];
if(C_truep(t11)){
t12=t10;
f_5718(2,t12,C_SCHEME_FALSE);}
else{
t12=(C_word)C_i_car(((C_word*)((C_word*)t0)[11])[1]);
C_trace("ChickenBridge.scm: 303  keyword?");
t13=C_retrieve(lf[13]);
((C_proc3)C_retrieve_proc(t13))(3,t13,t10,t12);}}}

/* k5716 in do63 in k5655 in k5645 in k5630 in k5627 in k5624 in expand-send in k5612 in k5609 in k5605 in k5314 in k5311 in k5308 in k5305 */
static void C_ccall f_5718(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word t14;
C_word ab[26],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_5718,2,t0,t1);}
if(C_truep(t1)){
t2=C_set_block_item(((C_word*)t0)[14],0,C_SCHEME_TRUE);
t3=((C_word*)t0)[13];
f_5712(t3,t2);}
else{
t2=((C_word*)((C_word*)t0)[14])[1];
if(C_truep(t2)){
t3=(C_word)C_i_car(((C_word*)((C_word*)t0)[12])[1]);
t4=C_mutate(((C_word *)((C_word*)t0)[11])+1,t3);
t5=(C_word)C_i_assoc(((C_word*)((C_word*)t0)[11])[1],((C_word*)t0)[10]);
t6=C_mutate(((C_word *)((C_word*)t0)[9])+1,t5);
t7=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[12])[1]);
t8=C_mutate(((C_word *)((C_word*)t0)[12])+1,t7);
t9=(*a=C_CLOSURE_TYPE|9,a[1]=(C_word)f_5772,a[2]=((C_word*)t0)[11],a[3]=((C_word*)t0)[5],a[4]=((C_word*)t0)[6],a[5]=((C_word*)t0)[7],a[6]=((C_word*)t0)[13],a[7]=((C_word*)t0)[12],a[8]=((C_word*)t0)[8],a[9]=((C_word*)t0)[9],tmp=(C_word)a,a+=10,tmp);
t10=(*a=C_CLOSURE_TYPE|9,a[1]=(C_word)f_5845,a[2]=((C_word*)t0)[10],a[3]=((C_word*)t0)[9],a[4]=((C_word*)t0)[11],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],a[7]=t9,a[8]=((C_word*)t0)[7],a[9]=((C_word*)t0)[12],tmp=(C_word)a,a+=10,tmp);
C_trace("ChickenBridge.scm: 324  keyword?");
t11=C_retrieve(lf[13]);
((C_proc3)C_retrieve_proc(t11))(3,t11,t10,((C_word*)((C_word*)t0)[11])[1]);}
else{
t3=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_5728,a[2]=((C_word*)t0)[13],a[3]=((C_word*)t0)[12],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[8],tmp=(C_word)a,a+=6,tmp);
if(C_truep((C_word)C_i_nequalp(((C_word*)((C_word*)t0)[4])[1],((C_word*)t0)[3]))){
t4=(C_word)C_i_length(((C_word*)t0)[2]);
C_trace("ChickenBridge.scm: 314  ferror");
t5=((C_word*)t0)[7];
((C_proc6)C_retrieve_proc(t5))(6,t5,t3,lf[38],((C_word*)t0)[6],((C_word*)t0)[3],t4);}
else{
t4=t3;
f_5728(2,t4,C_SCHEME_UNDEFINED);}}}}

/* k5726 in k5716 in do63 in k5655 in k5645 in k5630 in k5627 in k5624 in expand-send in k5612 in k5609 in k5605 in k5314 in k5311 in k5308 in k5305 */
static void C_ccall f_5728(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word ab[4],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_5728,2,t0,t1);}
t2=(C_word)C_i_list_tail(((C_word*)t0)[5],((C_word*)((C_word*)t0)[4])[1]);
t3=(C_word)C_i_car(((C_word*)((C_word*)t0)[3])[1]);
t4=(C_word)C_i_set_car(t2,t3);
t5=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=(C_word)C_a_i_plus(&a,2,((C_word*)((C_word*)t0)[4])[1],C_fix(1));
t8=C_mutate(((C_word *)((C_word*)t0)[4])+1,t7);
t9=((C_word*)t0)[2];
f_5712(t9,t8);}

/* k5843 in k5716 in do63 in k5655 in k5645 in k5630 in k5627 in k5624 in expand-send in k5612 in k5609 in k5605 in k5314 in k5311 in k5308 in k5305 */
static void C_ccall f_5845(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[15],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_5845,2,t0,t1);}
if(C_truep(t1)){
if(C_truep((C_word)C_i_nullp(((C_word*)((C_word*)t0)[9])[1]))){
t2=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_5818,a[2]=((C_word*)t0)[6],a[3]=((C_word*)t0)[7],a[4]=((C_word*)t0)[8],tmp=(C_word)a,a+=5,tmp);
C_trace("ChickenBridge.scm: 329  keyname");
t3=((C_word*)t0)[5];
((C_proc3)C_retrieve_proc(t3))(3,t3,t2,((C_word*)((C_word*)t0)[4])[1]);}
else{
t2=((C_word*)((C_word*)t0)[3])[1];
if(C_truep(t2)){
t3=((C_word*)t0)[7];
f_5772(2,t3,C_SCHEME_UNDEFINED);}
else{
t3=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_5831,a[2]=((C_word*)t0)[4],a[3]=((C_word*)t0)[6],a[4]=((C_word*)t0)[7],a[5]=((C_word*)t0)[8],tmp=(C_word)a,a+=6,tmp);
t4=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_5833,a[2]=((C_word*)t0)[5],a[3]=((C_word)li9),tmp=(C_word)a,a+=4,tmp);
C_trace("map");
t5=*((C_word*)lf[17]+1);
((C_proc4)(void*)(*((C_word*)t5+1)))(4,t5,t3,t4,((C_word*)t0)[2]);}}}
else{
C_trace("ChickenBridge.scm: 325  ferror");
t2=((C_word*)t0)[8];
((C_proc5)C_retrieve_proc(t2))(5,t2,((C_word*)t0)[7],lf[37],((C_word*)t0)[6],((C_word*)((C_word*)t0)[4])[1]);}}

/* a5832 in k5843 in k5716 in do63 in k5655 in k5645 in k5630 in k5627 in k5624 in expand-send in k5612 in k5609 in k5605 in k5314 in k5311 in k5308 in k5305 */
static void C_ccall f_5833(C_word c,C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word *a;
if(c!=3) C_bad_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr3,(void*)f_5833,3,t0,t1,t2);}
t3=(C_word)C_i_car(t2);
C_trace("ChickenBridge.scm: 333  keyname");
t4=((C_word*)t0)[2];
((C_proc3)C_retrieve_proc(t4))(3,t4,t1,t3);}

/* k5829 in k5843 in k5716 in do63 in k5655 in k5645 in k5630 in k5627 in k5624 in expand-send in k5612 in k5609 in k5605 in k5314 in k5311 in k5308 in k5305 */
static void C_ccall f_5831(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 331  ferror");
t2=((C_word*)t0)[5];
((C_proc6)C_retrieve_proc(t2))(6,t2,((C_word*)t0)[4],lf[36],((C_word*)t0)[3],((C_word*)((C_word*)t0)[2])[1],t1);}

/* k5816 in k5843 in k5716 in do63 in k5655 in k5645 in k5630 in k5627 in k5624 in expand-send in k5612 in k5609 in k5605 in k5314 in k5311 in k5308 in k5305 */
static void C_ccall f_5818(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 328  ferror");
t2=((C_word*)t0)[4];
((C_proc5)C_retrieve_proc(t2))(5,t2,((C_word*)t0)[3],lf[35],((C_word*)t0)[2],t1);}

/* k5770 in k5716 in do63 in k5655 in k5645 in k5630 in k5627 in k5624 in expand-send in k5612 in k5609 in k5605 in k5314 in k5311 in k5308 in k5305 */
static void C_ccall f_5772(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[10],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_5772,2,t0,t1);}
t2=(C_word)C_i_member(((C_word*)((C_word*)t0)[9])[1],((C_word*)t0)[8]);
t3=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_5778,a[2]=((C_word*)t0)[6],a[3]=t2,a[4]=((C_word*)t0)[7],tmp=(C_word)a,a+=5,tmp);
if(C_truep(t2)){
t4=t3;
f_5778(2,t4,C_SCHEME_UNDEFINED);}
else{
t4=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_5799,a[2]=((C_word*)t0)[4],a[3]=t3,a[4]=((C_word*)t0)[5],tmp=(C_word)a,a+=5,tmp);
C_trace("ChickenBridge.scm: 340  keyname");
t5=((C_word*)t0)[3];
((C_proc3)C_retrieve_proc(t5))(3,t5,t4,((C_word*)((C_word*)t0)[2])[1]);}}

/* k5797 in k5770 in k5716 in do63 in k5655 in k5645 in k5630 in k5627 in k5624 in expand-send in k5612 in k5609 in k5605 in k5314 in k5311 in k5308 in k5305 */
static void C_ccall f_5799(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 339  ferror");
t2=((C_word*)t0)[4];
((C_proc5)C_retrieve_proc(t2))(5,t2,((C_word*)t0)[3],lf[34],((C_word*)t0)[2],t1);}

/* k5776 in k5770 in k5716 in do63 in k5655 in k5645 in k5630 in k5627 in k5624 in expand-send in k5612 in k5609 in k5605 in k5314 in k5311 in k5308 in k5305 */
static void C_ccall f_5778(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word *a;
t2=(C_word)C_i_car(((C_word*)((C_word*)t0)[4])[1]);
t3=(C_word)C_i_set_car(((C_word*)t0)[3],t2);
t4=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
t5=C_mutate(((C_word *)((C_word*)t0)[4])+1,t4);
t6=((C_word*)t0)[2];
f_5712(t6,t5);}

/* k5710 in do63 in k5655 in k5645 in k5630 in k5627 in k5624 in expand-send in k5612 in k5609 in k5605 in k5314 in k5311 in k5308 in k5305 */
static void C_fcall f_5712(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
t2=((C_word*)((C_word*)t0)[7])[1];
f_5659(t2,((C_word*)t0)[6],((C_word*)t0)[5],((C_word*)((C_word*)t0)[4])[1],((C_word*)((C_word*)t0)[3])[1],((C_word*)((C_word*)t0)[2])[1]);}

/* do69 in do63 in k5655 in k5645 in k5630 in k5627 in k5624 in expand-send in k5612 in k5609 in k5605 in k5314 in k5311 in k5308 in k5305 */
static void C_fcall f_5671(C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word ab[8],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_5671,NULL,3,t0,t1,t2);}
if(C_truep((C_word)C_i_nullp(t2))){
t3=t1;
((C_proc2)(void*)(*((C_word*)t3+1)))(2,t3,(C_word)C_a_i_cons(&a,2,((C_word*)t0)[5],((C_word*)t0)[4]));}
else{
t3=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_5684,a[2]=t1,a[3]=((C_word*)t0)[3],a[4]=t2,tmp=(C_word)a,a+=5,tmp);
t4=(C_word)C_i_car(t2);
if(C_truep((C_word)C_i_member(t4,((C_word*)t0)[2]))){
t5=(C_word)C_i_car(t2);
t6=(C_word)C_i_cadr(t5);
t7=t3;
f_5684(t7,(C_word)C_i_set_car(t2,t6));}
else{
t5=t3;
f_5684(t5,C_SCHEME_UNDEFINED);}}}

/* k5682 in do69 in do63 in k5655 in k5645 in k5630 in k5627 in k5624 in expand-send in k5612 in k5609 in k5605 in k5314 in k5311 in k5308 in k5305 */
static void C_fcall f_5684(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word *a;
t2=(C_word)C_i_cdr(((C_word*)t0)[4]);
t3=((C_word*)((C_word*)t0)[3])[1];
f_5671(t3,((C_word*)t0)[2],t2);}

/* f_5894 in expand-send in k5612 in k5609 in k5605 in k5314 in k5311 in k5308 in k5305 */
static void C_ccall f_5894(C_word c,C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word *a;
if(c!=3) C_bad_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr3,(void*)f_5894,3,t0,t1,t2);}
t3=t1;
((C_proc2)(void*)(*((C_word*)t3+1)))(2,t3,t2);}

/* f_5885 in expand-send in k5612 in k5609 in k5605 in k5314 in k5311 in k5308 in k5305 */
static void C_ccall f_5885(C_word c,C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word ab[3],*a=ab;
if(c!=3) C_bad_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr3,(void*)f_5885,3,t0,t1,t2);}
t3=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_5893,a[2]=t1,tmp=(C_word)a,a+=3,tmp);
C_trace("ChickenBridge.scm: 270  keyword->string");
t4=C_retrieve(lf[33]);
((C_proc3)C_retrieve_proc(t4))(3,t4,t3,t2);}

/* k5891 */
static void C_ccall f_5893(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 270  sprintf");
t2=C_retrieve(lf[31]);
((C_proc4)C_retrieve_proc(t2))(4,t2,((C_word*)t0)[2],lf[32],t1);}

/* f_5896 in expand-send in k5612 in k5609 in k5605 in k5314 in k5311 in k5308 in k5305 */
static void C_ccall f_5896(C_word c,C_word t0,C_word t1,C_word t2,...){
C_word tmp;
C_word t3;
va_list v;
C_word *a,c2=c;
C_save_rest(t2,c2,3);
if(c<3) C_bad_min_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_demand(c*C_SIZEOF_PAIR+3)){
C_save_and_reclaim((void*)tr3r,(void*)f_5896r,3,t0,t1,t2);}
else{
a=C_alloc((c-3)*3);
t3=C_restore_rest(a,C_rest_count(0));
f_5896r(t0,t1,t2,t3);}}

static void C_ccall f_5896r(C_word t0,C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word *a=C_alloc(3);
t4=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_5904,a[2]=t1,tmp=(C_word)a,a+=3,tmp);
C_apply(5,0,t4,C_retrieve(lf[31]),t2,t3);}

/* k5902 */
static void C_ccall f_5904(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 266  error");
t2=*((C_word*)lf[4]+1);
((C_proc3)C_retrieve_proc(t2))(3,t2,((C_word*)t0)[2],t1);}

/* expand-optkeys in k5314 in k5311 in k5308 in k5305 */
static void C_ccall f_5318(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4){
C_word tmp;
C_word t5;
C_word t6;
C_word t7;
C_word ab[8],*a=ab;
if(c!=5) C_bad_argc_2(c,5,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr5,(void*)f_5318,5,t0,t1,t2,t3,t4);}
t5=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_5479,a[2]=t4,a[3]=t2,a[4]=t1,tmp=(C_word)a,a+=5,tmp);
t6=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_5571,a[2]=((C_word)li3),tmp=(C_word)a,a+=3,tmp);
C_trace("map");
t7=*((C_word*)lf[17]+1);
((C_proc4)(void*)(*((C_word*)t7+1)))(4,t7,t5,t6,t3);}

/* a5570 in expand-optkeys in k5314 in k5311 in k5308 in k5305 */
static void C_ccall f_5571(C_word c,C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word ab[14],*a=ab;
if(c!=3) C_bad_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr3,(void*)f_5571,3,t0,t1,t2);}
if(C_truep((C_word)C_i_pairp(t2))){
t3=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_5585,a[2]=t2,a[3]=t1,tmp=(C_word)a,a+=4,tmp);
t4=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_5589,a[2]=t3,tmp=(C_word)a,a+=3,tmp);
t5=(C_word)C_i_car(t2);
C_trace("ChickenBridge.scm: 218  symbol->string");
t6=*((C_word*)lf[25]+1);
((C_proc3)C_retrieve_proc(t6))(3,t6,t4,t5);}
else{
t3=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_5600,a[2]=t2,a[3]=t1,tmp=(C_word)a,a+=4,tmp);
t4=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_5604,a[2]=t3,tmp=(C_word)a,a+=3,tmp);
C_trace("ChickenBridge.scm: 219  symbol->string");
t5=*((C_word*)lf[25]+1);
((C_proc3)C_retrieve_proc(t5))(3,t5,t4,t2);}}

/* k5602 in a5570 in expand-optkeys in k5314 in k5311 in k5308 in k5305 */
static void C_ccall f_5604(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 219  gensym");
t2=C_retrieve(lf[26]);
((C_proc3)C_retrieve_proc(t2))(3,t2,((C_word*)t0)[2],t1);}

/* k5598 in a5570 in expand-optkeys in k5314 in k5311 in k5308 in k5305 */
static void C_ccall f_5600(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_5600,2,t0,t1);}
t2=((C_word*)t0)[3];
((C_proc2)(void*)(*((C_word*)t2+1)))(2,t2,(C_word)C_a_i_list(&a,3,t1,((C_word*)t0)[2],C_SCHEME_FALSE));}

/* k5587 in a5570 in expand-optkeys in k5314 in k5311 in k5308 in k5305 */
static void C_ccall f_5589(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 218  gensym");
t2=C_retrieve(lf[26]);
((C_proc3)C_retrieve_proc(t2))(3,t2,((C_word*)t0)[2],t1);}

/* k5583 in a5570 in expand-optkeys in k5314 in k5311 in k5308 in k5305 */
static void C_ccall f_5585(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word ab[3],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_5585,2,t0,t1);}
t2=((C_word*)t0)[3];
((C_proc2)(void*)(*((C_word*)t2+1)))(2,t2,(C_word)C_a_i_cons(&a,2,t1,((C_word*)t0)[2]));}

/* k5477 in expand-optkeys in k5314 in k5311 in k5308 in k5305 */
static void C_ccall f_5479(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[6],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_5479,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_5482,a[2]=t1,a[3]=((C_word*)t0)[2],a[4]=((C_word*)t0)[3],a[5]=((C_word*)t0)[4],tmp=(C_word)a,a+=6,tmp);
C_trace("ChickenBridge.scm: 221  gensym");
t3=C_retrieve(lf[26]);
((C_proc3)C_retrieve_proc(t3))(3,t3,t2,lf[28]);}

/* k5480 in k5477 in expand-optkeys in k5314 in k5311 in k5308 in k5305 */
static void C_ccall f_5482(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_5482,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_5485,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=t1,a[6]=((C_word*)t0)[5],tmp=(C_word)a,a+=7,tmp);
C_trace("ChickenBridge.scm: 222  gensym");
t3=C_retrieve(lf[26]);
((C_proc3)C_retrieve_proc(t3))(3,t3,t2,lf[27]);}

/* k5483 in k5480 in k5477 in expand-optkeys in k5314 in k5311 in k5308 in k5305 */
static void C_ccall f_5485(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[14],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_5485,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_5488,a[2]=((C_word*)t0)[2],a[3]=t1,a[4]=((C_word*)t0)[3],a[5]=((C_word*)t0)[4],a[6]=((C_word*)t0)[5],a[7]=((C_word*)t0)[6],tmp=(C_word)a,a+=8,tmp);
t3=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_5565,a[2]=((C_word*)t0)[4],a[3]=((C_word*)t0)[5],a[4]=t1,a[5]=((C_word)li2),tmp=(C_word)a,a+=6,tmp);
C_trace("map");
t4=*((C_word*)lf[17]+1);
((C_proc4)(void*)(*((C_word*)t4+1)))(4,t4,t2,t3,((C_word*)t0)[2]);}

/* a5564 in k5483 in k5480 in k5477 in expand-optkeys in k5314 in k5311 in k5308 in k5305 */
static void C_ccall f_5565(C_word c,C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word ab[11],*a=ab;
if(c!=3) C_bad_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr3,(void*)f_5565,3,t0,t1,t2);}
t3=((C_word*)t0)[4];
t4=((C_word*)t0)[3];
t5=((C_word*)t0)[2];
t6=(C_word)C_i_car(t2);
t7=(C_word)C_i_cadr(t2);
t8=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_5331,a[2]=t1,a[3]=t3,a[4]=t7,a[5]=t5,a[6]=t4,a[7]=t6,tmp=(C_word)a,a+=8,tmp);
t9=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_5390,a[2]=t8,tmp=(C_word)a,a+=3,tmp);
C_trace("ChickenBridge.scm: 182  symbol->string");
t10=*((C_word*)lf[25]+1);
((C_proc3)C_retrieve_proc(t10))(3,t10,t9,t7);}

/* k5388 in a5564 in k5483 in k5480 in k5477 in expand-optkeys in k5314 in k5311 in k5308 in k5305 */
static void C_ccall f_5390(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 182  string->keyword");
t2=C_retrieve(lf[24]);
((C_proc3)C_retrieve_proc(t2))(3,t2,((C_word*)t0)[2],t1);}

/* k5329 in a5564 in k5483 in k5480 in k5477 in expand-optkeys in k5314 in k5311 in k5308 in k5305 */
static void C_ccall f_5331(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word t14;
C_word t15;
C_word ab[120],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_5331,2,t0,t1);}
t2=(C_word)C_a_i_list(&a,1,t1);
t3=(C_word)C_a_i_list(&a,3,lf[4],lf[19],t1);
t4=(C_word)C_a_i_list(&a,3,lf[20],((C_word*)t0)[7],t3);
t5=(C_word)C_a_i_list(&a,2,lf[15],((C_word*)t0)[6]);
t6=(C_word)C_a_i_list(&a,2,lf[3],t5);
t7=(C_word)C_a_i_list(&a,3,lf[4],lf[21],((C_word*)t0)[5]);
t8=(C_word)C_a_i_list(&a,2,lf[22],((C_word*)t0)[6]);
t9=(C_word)C_a_i_list(&a,4,lf[20],t6,t7,t8);
t10=(C_word)C_a_i_list(&a,3,lf[12],((C_word*)t0)[4],t9);
t11=(C_word)C_a_i_list(&a,3,lf[12],((C_word*)t0)[7],C_SCHEME_TRUE);
t12=(C_word)C_a_i_list(&a,3,lf[12],((C_word*)t0)[3],C_SCHEME_TRUE);
t13=(C_word)C_a_i_list(&a,2,lf[23],((C_word*)t0)[6]);
t14=(C_word)C_a_i_list(&a,3,lf[12],((C_word*)t0)[6],t13);
t15=((C_word*)t0)[2];
((C_proc2)(void*)(*((C_word*)t15+1)))(2,t15,(C_word)C_a_i_list(&a,6,t2,t4,t10,t11,t12,t14));}

/* k5486 in k5483 in k5480 in k5477 in expand-optkeys in k5314 in k5311 in k5308 in k5305 */
static void C_ccall f_5488(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_5488,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|8,a[1]=(C_word)f_5495,a[2]=((C_word*)t0)[2],a[3]=t1,a[4]=((C_word*)t0)[3],a[5]=((C_word*)t0)[4],a[6]=((C_word*)t0)[5],a[7]=((C_word*)t0)[6],a[8]=((C_word*)t0)[7],tmp=(C_word)a,a+=9,tmp);
C_trace("map");
t3=*((C_word*)lf[17]+1);
((C_proc4)(void*)(*((C_word*)t3+1)))(4,t3,t2,*((C_word*)lf[15]+1),((C_word*)t0)[2]);}

/* k5493 in k5486 in k5483 in k5480 in k5477 in expand-optkeys in k5314 in k5311 in k5308 in k5305 */
static void C_ccall f_5495(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[19],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_5495,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|9,a[1]=(C_word)f_5507,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],a[7]=((C_word*)t0)[7],a[8]=t1,a[9]=((C_word*)t0)[8],tmp=(C_word)a,a+=10,tmp);
t3=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_5541,a[2]=t2,a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[6],a[5]=((C_word*)t0)[7],tmp=(C_word)a,a+=6,tmp);
t4=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_5555,a[2]=((C_word)li1),tmp=(C_word)a,a+=3,tmp);
C_trace("map");
t5=*((C_word*)lf[17]+1);
((C_proc4)(void*)(*((C_word*)t5+1)))(4,t5,t3,t4,((C_word*)t0)[2]);}

/* a5554 in k5493 in k5486 in k5483 in k5480 in k5477 in expand-optkeys in k5314 in k5311 in k5308 in k5305 */
static void C_ccall f_5555(C_word c,C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word ab[6],*a=ab;
if(c!=3) C_bad_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr3,(void*)f_5555,3,t0,t1,t2);}
t3=(C_word)C_i_car(t2);
t4=t1;
((C_proc2)(void*)(*((C_word*)t4+1)))(2,t4,(C_word)C_a_i_list(&a,2,t3,C_SCHEME_FALSE));}

/* k5539 in k5493 in k5486 in k5483 in k5480 in k5477 in expand-optkeys in k5314 in k5311 in k5308 in k5305 */
static void C_ccall f_5541(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[18],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_5541,2,t0,t1);}
t2=(C_word)C_a_i_list(&a,2,((C_word*)t0)[5],((C_word*)t0)[4]);
t3=(C_word)C_a_i_list(&a,2,((C_word*)t0)[3],C_SCHEME_FALSE);
t4=(C_word)C_a_i_list(&a,2,t2,t3);
C_trace("ChickenBridge.scm: 228  append");
t5=*((C_word*)lf[18]+1);
((C_proc4)C_retrieve_proc(t5))(4,t5,((C_word*)t0)[2],t1,t4);}

/* k5505 in k5493 in k5486 in k5483 in k5480 in k5477 in expand-optkeys in k5314 in k5311 in k5308 in k5305 */
static void C_ccall f_5507(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[18],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_5507,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_5511,a[2]=((C_word*)t0)[8],a[3]=((C_word*)t0)[9],a[4]=t1,tmp=(C_word)a,a+=5,tmp);
t3=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_5515,a[2]=t2,a[3]=((C_word*)t0)[5],a[4]=((C_word*)t0)[6],a[5]=((C_word*)t0)[7],tmp=(C_word)a,a+=6,tmp);
t4=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_5533,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[6],a[4]=((C_word*)t0)[7],a[5]=((C_word*)t0)[4],a[6]=((C_word)li0),tmp=(C_word)a,a+=7,tmp);
C_trace("map");
t5=*((C_word*)lf[17]+1);
((C_proc4)(void*)(*((C_word*)t5+1)))(4,t5,t3,t4,((C_word*)t0)[2]);}

/* a5532 in k5505 in k5493 in k5486 in k5483 in k5480 in k5477 in expand-optkeys in k5314 in k5311 in k5308 in k5305 */
static void C_ccall f_5533(C_word c,C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word t14;
C_word t15;
C_word t16;
C_word t17;
C_word t18;
C_word t19;
C_word t20;
C_word t21;
C_word t22;
C_word t23;
C_word t24;
C_word ab[119],*a=ab;
if(c!=3) C_bad_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr3,(void*)f_5533,3,t0,t1,t2);}
t3=((C_word*)t0)[5];
t4=((C_word*)t0)[4];
t5=((C_word*)t0)[3];
t6=((C_word*)t0)[2];
t7=(C_word)C_a_i_list(&a,2,lf[3],t4);
t8=(C_word)C_a_i_list(&a,2,lf[8],t4);
t9=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_5468,a[2]=t7,a[3]=t1,a[4]=t8,tmp=(C_word)a,a+=5,tmp);
t10=(C_word)C_i_car(t2);
t11=(C_word)C_i_cadr(t2);
t12=(C_word)C_a_i_list(&a,3,lf[4],lf[10],t5);
t13=(C_word)C_a_i_list(&a,3,lf[11],t3,t12);
t14=(C_word)C_a_i_list(&a,2,lf[8],t4);
t15=(C_word)C_a_i_list(&a,3,lf[12],t11,t14);
t16=(C_word)C_a_i_list(&a,2,lf[13],t11);
t17=(C_word)C_a_i_list(&a,3,lf[4],lf[14],t11);
t18=(C_word)C_a_i_list(&a,3,lf[11],t16,t17);
t19=(C_word)C_a_i_list(&a,3,lf[12],t10,C_SCHEME_TRUE);
t20=(C_word)C_a_i_list(&a,2,lf[15],t4);
t21=(C_word)C_a_i_list(&a,3,lf[12],t4,t20);
t22=(C_word)C_a_i_list(&a,6,lf[16],t13,t15,t18,t19,t21);
t23=(C_word)C_a_i_list(&a,1,t22);
C_trace("##sys#append");
t24=*((C_word*)lf[7]+1);
((C_proc4)(void*)(*((C_word*)t24+1)))(4,t24,t9,t6,t23);}

/* k5466 in a5532 in k5505 in k5493 in k5486 in k5483 in k5480 in k5477 in expand-optkeys in k5314 in k5311 in k5308 in k5305 */
static void C_ccall f_5468(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[15],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_5468,2,t0,t1);}
t2=(C_word)C_a_i_cons(&a,2,((C_word*)t0)[4],t1);
t3=(C_word)C_a_i_cons(&a,2,lf[9],t2);
t4=((C_word*)t0)[3];
((C_proc2)(void*)(*((C_word*)t4+1)))(2,t4,(C_word)C_a_i_list(&a,3,lf[6],((C_word*)t0)[2],t3));}

/* k5513 in k5505 in k5493 in k5486 in k5483 in k5480 in k5477 in expand-optkeys in k5314 in k5311 in k5308 in k5305 */
static void C_ccall f_5515(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[27],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_5515,2,t0,t1);}
t2=(C_word)C_a_i_list(&a,2,lf[3],((C_word*)t0)[5]);
t3=(C_word)C_a_i_list(&a,3,lf[4],lf[5],((C_word*)t0)[4]);
t4=(C_word)C_a_i_list(&a,3,lf[6],t2,t3);
t5=(C_word)C_a_i_cons(&a,2,t4,((C_word*)t0)[3]);
C_trace("##sys#append");
t6=*((C_word*)lf[7]+1);
((C_proc4)(void*)(*((C_word*)t6+1)))(4,t6,((C_word*)t0)[2],t1,t5);}

/* k5509 in k5505 in k5493 in k5486 in k5483 in k5480 in k5477 in expand-optkeys in k5314 in k5311 in k5308 in k5305 */
static void C_ccall f_5511(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[15],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_5511,2,t0,t1);}
t2=(C_word)C_a_i_cons(&a,2,((C_word*)t0)[4],t1);
t3=(C_word)C_a_i_cons(&a,2,lf[1],t2);
t4=((C_word*)t0)[3];
((C_proc2)(void*)(*((C_word*)t4+1)))(2,t4,(C_word)C_a_i_list(&a,3,lf[2],((C_word*)t0)[2],t3));}

#ifdef C_ENABLE_PTABLES
static C_PTABLE_ENTRY ptable[2251] = {
{"toplevelChickenBridge.scm",(void*)C_grace_toplevel},
{"f_5307ChickenBridge.scm",(void*)f_5307},
{"f_5310ChickenBridge.scm",(void*)f_5310},
{"f_5313ChickenBridge.scm",(void*)f_5313},
{"f_5316ChickenBridge.scm",(void*)f_5316},
{"f_33500ChickenBridge.scm",(void*)f_33500},
{"f_5607ChickenBridge.scm",(void*)f_5607},
{"f_5611ChickenBridge.scm",(void*)f_5611},
{"f_33448ChickenBridge.scm",(void*)f_33448},
{"f_33495ChickenBridge.scm",(void*)f_33495},
{"f_33485ChickenBridge.scm",(void*)f_33485},
{"f_33452ChickenBridge.scm",(void*)f_33452},
{"f_5614ChickenBridge.scm",(void*)f_5614},
{"f_33442ChickenBridge.scm",(void*)f_33442},
{"f_5907ChickenBridge.scm",(void*)f_5907},
{"f_7923ChickenBridge.scm",(void*)f_7923},
{"f_33226ChickenBridge.scm",(void*)f_33226},
{"f_33440ChickenBridge.scm",(void*)f_33440},
{"f_33260ChickenBridge.scm",(void*)f_33260},
{"f_33272ChickenBridge.scm",(void*)f_33272},
{"f_33276ChickenBridge.scm",(void*)f_33276},
{"f_33280ChickenBridge.scm",(void*)f_33280},
{"f_33424ChickenBridge.scm",(void*)f_33424},
{"f_33286ChickenBridge.scm",(void*)f_33286},
{"f_33306ChickenBridge.scm",(void*)f_33306},
{"f_33309ChickenBridge.scm",(void*)f_33309},
{"f_33317ChickenBridge.scm",(void*)f_33317},
{"f_33324ChickenBridge.scm",(void*)f_33324},
{"f_33327ChickenBridge.scm",(void*)f_33327},
{"f_33331ChickenBridge.scm",(void*)f_33331},
{"f_33338ChickenBridge.scm",(void*)f_33338},
{"f_33341ChickenBridge.scm",(void*)f_33341},
{"f_33345ChickenBridge.scm",(void*)f_33345},
{"f_33352ChickenBridge.scm",(void*)f_33352},
{"f_33296ChickenBridge.scm",(void*)f_33296},
{"f_33249ChickenBridge.scm",(void*)f_33249},
{"f_33239ChickenBridge.scm",(void*)f_33239},
{"f_33242ChickenBridge.scm",(void*)f_33242},
{"f_7926ChickenBridge.scm",(void*)f_7926},
{"f_33212ChickenBridge.scm",(void*)f_33212},
{"f_33220ChickenBridge.scm",(void*)f_33220},
{"f_33224ChickenBridge.scm",(void*)f_33224},
{"f_15519ChickenBridge.scm",(void*)f_15519},
{"f_15570ChickenBridge.scm",(void*)f_15570},
{"f_33202ChickenBridge.scm",(void*)f_33202},
{"f_33210ChickenBridge.scm",(void*)f_33210},
{"f_15675ChickenBridge.scm",(void*)f_15675},
{"f_33099ChickenBridge.scm",(void*)f_33099},
{"f_33162ChickenBridge.scm",(void*)f_33162},
{"f_33166ChickenBridge.scm",(void*)f_33166},
{"f_33180ChickenBridge.scm",(void*)f_33180},
{"f_33102ChickenBridge.scm",(void*)f_33102},
{"f_33122ChickenBridge.scm",(void*)f_33122},
{"f_33126ChickenBridge.scm",(void*)f_33126},
{"f_15678ChickenBridge.scm",(void*)f_15678},
{"f_33085ChickenBridge.scm",(void*)f_33085},
{"f_33093ChickenBridge.scm",(void*)f_33093},
{"f_33097ChickenBridge.scm",(void*)f_33097},
{"f_15871ChickenBridge.scm",(void*)f_15871},
{"f_33059ChickenBridge.scm",(void*)f_33059},
{"f_33063ChickenBridge.scm",(void*)f_33063},
{"f_33069ChickenBridge.scm",(void*)f_33069},
{"f_33080ChickenBridge.scm",(void*)f_33080},
{"f_33076ChickenBridge.scm",(void*)f_33076},
{"f_15940ChickenBridge.scm",(void*)f_15940},
{"f_33037ChickenBridge.scm",(void*)f_33037},
{"f_17185ChickenBridge.scm",(void*)f_17185},
{"f_33017ChickenBridge.scm",(void*)f_33017},
{"f_17188ChickenBridge.scm",(void*)f_17188},
{"f_32977ChickenBridge.scm",(void*)f_32977},
{"f_17191ChickenBridge.scm",(void*)f_17191},
{"f_32883ChickenBridge.scm",(void*)f_32883},
{"f_32887ChickenBridge.scm",(void*)f_32887},
{"f_32890ChickenBridge.scm",(void*)f_32890},
{"f_32908ChickenBridge.scm",(void*)f_32908},
{"f_32911ChickenBridge.scm",(void*)f_32911},
{"f_32942ChickenBridge.scm",(void*)f_32942},
{"f_32914ChickenBridge.scm",(void*)f_32914},
{"f_32920ChickenBridge.scm",(void*)f_32920},
{"f_32873ChickenBridge.scm",(void*)f_32873},
{"f_32867ChickenBridge.scm",(void*)f_32867},
{"f_17194ChickenBridge.scm",(void*)f_17194},
{"f_32775ChickenBridge.scm",(void*)f_32775},
{"f_32777ChickenBridge.scm",(void*)f_32777},
{"f_32781ChickenBridge.scm",(void*)f_32781},
{"f_32784ChickenBridge.scm",(void*)f_32784},
{"f_32787ChickenBridge.scm",(void*)f_32787},
{"f_32827ChickenBridge.scm",(void*)f_32827},
{"f_32819ChickenBridge.scm",(void*)f_32819},
{"f_32790ChickenBridge.scm",(void*)f_32790},
{"f_32793ChickenBridge.scm",(void*)f_32793},
{"f_32796ChickenBridge.scm",(void*)f_32796},
{"f_32767ChickenBridge.scm",(void*)f_32767},
{"f_17197ChickenBridge.scm",(void*)f_17197},
{"f_32739ChickenBridge.scm",(void*)f_32739},
{"f_17200ChickenBridge.scm",(void*)f_17200},
{"f_32703ChickenBridge.scm",(void*)f_32703},
{"f_32715ChickenBridge.scm",(void*)f_32715},
{"f_32711ChickenBridge.scm",(void*)f_32711},
{"f_32685ChickenBridge.scm",(void*)f_32685},
{"f_32679ChickenBridge.scm",(void*)f_32679},
{"f_17203ChickenBridge.scm",(void*)f_17203},
{"f_32593ChickenBridge.scm",(void*)f_32593},
{"f_32597ChickenBridge.scm",(void*)f_32597},
{"f_32600ChickenBridge.scm",(void*)f_32600},
{"f_32603ChickenBridge.scm",(void*)f_32603},
{"f_32616ChickenBridge.scm",(void*)f_32616},
{"f_32562ChickenBridge.scm",(void*)f_32562},
{"f_32566ChickenBridge.scm",(void*)f_32566},
{"f_32581ChickenBridge.scm",(void*)f_32581},
{"f_32556ChickenBridge.scm",(void*)f_32556},
{"f_17206ChickenBridge.scm",(void*)f_17206},
{"f_32442ChickenBridge.scm",(void*)f_32442},
{"f_32458ChickenBridge.scm",(void*)f_32458},
{"f_32469ChickenBridge.scm",(void*)f_32469},
{"f_32436ChickenBridge.scm",(void*)f_32436},
{"f_17262ChickenBridge.scm",(void*)f_17262},
{"f_32303ChickenBridge.scm",(void*)f_32303},
{"f_32326ChickenBridge.scm",(void*)f_32326},
{"f_32323ChickenBridge.scm",(void*)f_32323},
{"f_32297ChickenBridge.scm",(void*)f_32297},
{"f_17265ChickenBridge.scm",(void*)f_17265},
{"f_32151ChickenBridge.scm",(void*)f_32151},
{"f_32169ChickenBridge.scm",(void*)f_32169},
{"f_32178ChickenBridge.scm",(void*)f_32178},
{"f_32145ChickenBridge.scm",(void*)f_32145},
{"f_17268ChickenBridge.scm",(void*)f_17268},
{"f_32098ChickenBridge.scm",(void*)f_32098},
{"f_32102ChickenBridge.scm",(void*)f_32102},
{"f_32105ChickenBridge.scm",(void*)f_32105},
{"f_32121ChickenBridge.scm",(void*)f_32121},
{"f_32080ChickenBridge.scm",(void*)f_32080},
{"f_32074ChickenBridge.scm",(void*)f_32074},
{"f_17271ChickenBridge.scm",(void*)f_17271},
{"f_31998ChickenBridge.scm",(void*)f_31998},
{"f_17410ChickenBridge.scm",(void*)f_17410},
{"f_31924ChickenBridge.scm",(void*)f_31924},
{"f_31931ChickenBridge.scm",(void*)f_31931},
{"f_31918ChickenBridge.scm",(void*)f_31918},
{"f_17413ChickenBridge.scm",(void*)f_17413},
{"f_31814ChickenBridge.scm",(void*)f_31814},
{"f_31822ChickenBridge.scm",(void*)f_31822},
{"f_31788ChickenBridge.scm",(void*)f_31788},
{"f_31805ChickenBridge.scm",(void*)f_31805},
{"f_31796ChickenBridge.scm",(void*)f_31796},
{"f_31782ChickenBridge.scm",(void*)f_31782},
{"f_17416ChickenBridge.scm",(void*)f_17416},
{"f_31738ChickenBridge.scm",(void*)f_31738},
{"f_17419ChickenBridge.scm",(void*)f_17419},
{"f_31656ChickenBridge.scm",(void*)f_31656},
{"f_31667ChickenBridge.scm",(void*)f_31667},
{"f_31669ChickenBridge.scm",(void*)f_31669},
{"f_31698ChickenBridge.scm",(void*)f_31698},
{"f_31634ChickenBridge.scm",(void*)f_31634},
{"f_31650ChickenBridge.scm",(void*)f_31650},
{"f_31628ChickenBridge.scm",(void*)f_31628},
{"f_17422ChickenBridge.scm",(void*)f_17422},
{"f_31581ChickenBridge.scm",(void*)f_31581},
{"f_31585ChickenBridge.scm",(void*)f_31585},
{"f_31592ChickenBridge.scm",(void*)f_31592},
{"f_31559ChickenBridge.scm",(void*)f_31559},
{"f_31575ChickenBridge.scm",(void*)f_31575},
{"f_31553ChickenBridge.scm",(void*)f_31553},
{"f_17425ChickenBridge.scm",(void*)f_17425},
{"f_31421ChickenBridge.scm",(void*)f_31421},
{"f_31461ChickenBridge.scm",(void*)f_31461},
{"f_31425ChickenBridge.scm",(void*)f_31425},
{"f_31441ChickenBridge.scm",(void*)f_31441},
{"f_31453ChickenBridge.scm",(void*)f_31453},
{"f_31457ChickenBridge.scm",(void*)f_31457},
{"f_31449ChickenBridge.scm",(void*)f_31449},
{"f_31360ChickenBridge.scm",(void*)f_31360},
{"f_31407ChickenBridge.scm",(void*)f_31407},
{"f_31367ChickenBridge.scm",(void*)f_31367},
{"f_31378ChickenBridge.scm",(void*)f_31378},
{"f_31354ChickenBridge.scm",(void*)f_31354},
{"f_17428ChickenBridge.scm",(void*)f_17428},
{"f_31334ChickenBridge.scm",(void*)f_31334},
{"f_31328ChickenBridge.scm",(void*)f_31328},
{"f_17431ChickenBridge.scm",(void*)f_17431},
{"f_31308ChickenBridge.scm",(void*)f_31308},
{"f_31312ChickenBridge.scm",(void*)f_31312},
{"f_31300ChickenBridge.scm",(void*)f_31300},
{"f_17434ChickenBridge.scm",(void*)f_17434},
{"f_31280ChickenBridge.scm",(void*)f_31280},
{"f_31284ChickenBridge.scm",(void*)f_31284},
{"f_31272ChickenBridge.scm",(void*)f_31272},
{"f_17437ChickenBridge.scm",(void*)f_17437},
{"f_31252ChickenBridge.scm",(void*)f_31252},
{"f_31256ChickenBridge.scm",(void*)f_31256},
{"f_31244ChickenBridge.scm",(void*)f_31244},
{"f_17440ChickenBridge.scm",(void*)f_17440},
{"f_31224ChickenBridge.scm",(void*)f_31224},
{"f_31228ChickenBridge.scm",(void*)f_31228},
{"f_31216ChickenBridge.scm",(void*)f_31216},
{"f_17443ChickenBridge.scm",(void*)f_17443},
{"f_31115ChickenBridge.scm",(void*)f_31115},
{"f_31085ChickenBridge.scm",(void*)f_31085},
{"f_31109ChickenBridge.scm",(void*)f_31109},
{"f_31079ChickenBridge.scm",(void*)f_31079},
{"f_17446ChickenBridge.scm",(void*)f_17446},
{"f_31029ChickenBridge.scm",(void*)f_31029},
{"f_31031ChickenBridge.scm",(void*)f_31031},
{"f_31035ChickenBridge.scm",(void*)f_31035},
{"f_31063ChickenBridge.scm",(void*)f_31063},
{"f_31055ChickenBridge.scm",(void*)f_31055},
{"f_31051ChickenBridge.scm",(void*)f_31051},
{"f_31038ChickenBridge.scm",(void*)f_31038},
{"f_31021ChickenBridge.scm",(void*)f_31021},
{"f_17449ChickenBridge.scm",(void*)f_17449},
{"f_30968ChickenBridge.scm",(void*)f_30968},
{"f_30970ChickenBridge.scm",(void*)f_30970},
{"f_30974ChickenBridge.scm",(void*)f_30974},
{"f_31005ChickenBridge.scm",(void*)f_31005},
{"f_30997ChickenBridge.scm",(void*)f_30997},
{"f_30993ChickenBridge.scm",(void*)f_30993},
{"f_30977ChickenBridge.scm",(void*)f_30977},
{"f_30980ChickenBridge.scm",(void*)f_30980},
{"f_30960ChickenBridge.scm",(void*)f_30960},
{"f_17452ChickenBridge.scm",(void*)f_17452},
{"f_30910ChickenBridge.scm",(void*)f_30910},
{"f_30924ChickenBridge.scm",(void*)f_30924},
{"f_30916ChickenBridge.scm",(void*)f_30916},
{"f_30875ChickenBridge.scm",(void*)f_30875},
{"f_30908ChickenBridge.scm",(void*)f_30908},
{"f_30869ChickenBridge.scm",(void*)f_30869},
{"f_17455ChickenBridge.scm",(void*)f_17455},
{"f_30816ChickenBridge.scm",(void*)f_30816},
{"f_30820ChickenBridge.scm",(void*)f_30820},
{"f_30833ChickenBridge.scm",(void*)f_30833},
{"f_30825ChickenBridge.scm",(void*)f_30825},
{"f_30773ChickenBridge.scm",(void*)f_30773},
{"f_30806ChickenBridge.scm",(void*)f_30806},
{"f_30767ChickenBridge.scm",(void*)f_30767},
{"f_17458ChickenBridge.scm",(void*)f_17458},
{"f_30687ChickenBridge.scm",(void*)f_30687},
{"f_30681ChickenBridge.scm",(void*)f_30681},
{"f_17461ChickenBridge.scm",(void*)f_17461},
{"f_30450ChickenBridge.scm",(void*)f_30450},
{"f_30454ChickenBridge.scm",(void*)f_30454},
{"f_30462ChickenBridge.scm",(void*)f_30462},
{"f_30485ChickenBridge.scm",(void*)f_30485},
{"f_30488ChickenBridge.scm",(void*)f_30488},
{"f_30491ChickenBridge.scm",(void*)f_30491},
{"f_30494ChickenBridge.scm",(void*)f_30494},
{"f_30554ChickenBridge.scm",(void*)f_30554},
{"f_30561ChickenBridge.scm",(void*)f_30561},
{"f_30571ChickenBridge.scm",(void*)f_30571},
{"f_30581ChickenBridge.scm",(void*)f_30581},
{"f_30595ChickenBridge.scm",(void*)f_30595},
{"f_30605ChickenBridge.scm",(void*)f_30605},
{"f_30615ChickenBridge.scm",(void*)f_30615},
{"f_30625ChickenBridge.scm",(void*)f_30625},
{"f_30497ChickenBridge.scm",(void*)f_30497},
{"f_30521ChickenBridge.scm",(void*)f_30521},
{"f_30500ChickenBridge.scm",(void*)f_30500},
{"f_30407ChickenBridge.scm",(void*)f_30407},
{"f_30440ChickenBridge.scm",(void*)f_30440},
{"f_30401ChickenBridge.scm",(void*)f_30401},
{"f_17464ChickenBridge.scm",(void*)f_17464},
{"f_30319ChickenBridge.scm",(void*)f_30319},
{"f_30323ChickenBridge.scm",(void*)f_30323},
{"f_30329ChickenBridge.scm",(void*)f_30329},
{"f_30349ChickenBridge.scm",(void*)f_30349},
{"f_30293ChickenBridge.scm",(void*)f_30293},
{"f_30303ChickenBridge.scm",(void*)f_30303},
{"f_30287ChickenBridge.scm",(void*)f_30287},
{"f_17467ChickenBridge.scm",(void*)f_17467},
{"f_30164ChickenBridge.scm",(void*)f_30164},
{"f_30168ChickenBridge.scm",(void*)f_30168},
{"f_30096ChickenBridge.scm",(void*)f_30096},
{"f_30115ChickenBridge.scm",(void*)f_30115},
{"f_30150ChickenBridge.scm",(void*)f_30150},
{"f_30121ChickenBridge.scm",(void*)f_30121},
{"f_30125ChickenBridge.scm",(void*)f_30125},
{"f_30139ChickenBridge.scm",(void*)f_30139},
{"f_30128ChickenBridge.scm",(void*)f_30128},
{"f_30109ChickenBridge.scm",(void*)f_30109},
{"f_30090ChickenBridge.scm",(void*)f_30090},
{"f_17470ChickenBridge.scm",(void*)f_17470},
{"f_29818ChickenBridge.scm",(void*)f_29818},
{"f_17993ChickenBridge.scm",(void*)f_17993},
{"f_29770ChickenBridge.scm",(void*)f_29770},
{"f_29762ChickenBridge.scm",(void*)f_29762},
{"f_17996ChickenBridge.scm",(void*)f_17996},
{"f_29642ChickenBridge.scm",(void*)f_29642},
{"f_18002ChickenBridge.scm",(void*)f_18002},
{"f_18477ChickenBridge.scm",(void*)f_18477},
{"f_18511ChickenBridge.scm",(void*)f_18511},
{"f_18503ChickenBridge.scm",(void*)f_18503},
{"f_18499ChickenBridge.scm",(void*)f_18499},
{"f_18484ChickenBridge.scm",(void*)f_18484},
{"f_18488ChickenBridge.scm",(void*)f_18488},
{"f_18481ChickenBridge.scm",(void*)f_18481},
{"f_18020ChickenBridge.scm",(void*)f_18020},
{"f_18470ChickenBridge.scm",(void*)f_18470},
{"f_18466ChickenBridge.scm",(void*)f_18466},
{"f_18027ChickenBridge.scm",(void*)f_18027},
{"f_18341ChickenBridge.scm",(void*)f_18341},
{"f_18362ChickenBridge.scm",(void*)f_18362},
{"f_18364ChickenBridge.scm",(void*)f_18364},
{"f_18378ChickenBridge.scm",(void*)f_18378},
{"f_18431ChickenBridge.scm",(void*)f_18431},
{"f_18381ChickenBridge.scm",(void*)f_18381},
{"f_18416ChickenBridge.scm",(void*)f_18416},
{"f_18384ChickenBridge.scm",(void*)f_18384},
{"f_18397ChickenBridge.scm",(void*)f_18397},
{"f_18409ChickenBridge.scm",(void*)f_18409},
{"f_18401ChickenBridge.scm",(void*)f_18401},
{"f_18387ChickenBridge.scm",(void*)f_18387},
{"f_18351ChickenBridge.scm",(void*)f_18351},
{"f_18030ChickenBridge.scm",(void*)f_18030},
{"f_18305ChickenBridge.scm",(void*)f_18305},
{"f_18331ChickenBridge.scm",(void*)f_18331},
{"f_18316ChickenBridge.scm",(void*)f_18316},
{"f_18033ChickenBridge.scm",(void*)f_18033},
{"f_18037ChickenBridge.scm",(void*)f_18037},
{"f_18249ChickenBridge.scm",(void*)f_18249},
{"f_18259ChickenBridge.scm",(void*)f_18259},
{"f_18262ChickenBridge.scm",(void*)f_18262},
{"f_18283ChickenBridge.scm",(void*)f_18283},
{"f_18265ChickenBridge.scm",(void*)f_18265},
{"f_18269ChickenBridge.scm",(void*)f_18269},
{"f_18040ChickenBridge.scm",(void*)f_18040},
{"f_18043ChickenBridge.scm",(void*)f_18043},
{"f_18212ChickenBridge.scm",(void*)f_18212},
{"f_18220ChickenBridge.scm",(void*)f_18220},
{"f_18216ChickenBridge.scm",(void*)f_18216},
{"f_18046ChickenBridge.scm",(void*)f_18046},
{"f_18074ChickenBridge.scm",(void*)f_18074},
{"f_18077ChickenBridge.scm",(void*)f_18077},
{"f_18080ChickenBridge.scm",(void*)f_18080},
{"f_18083ChickenBridge.scm",(void*)f_18083},
{"f_18086ChickenBridge.scm",(void*)f_18086},
{"f_18145ChickenBridge.scm",(void*)f_18145},
{"f_29596ChickenBridge.scm",(void*)f_29596},
{"f_29612ChickenBridge.scm",(void*)f_29612},
{"f_29615ChickenBridge.scm",(void*)f_29615},
{"f_29618ChickenBridge.scm",(void*)f_29618},
{"f_29621ChickenBridge.scm",(void*)f_29621},
{"f_29632ChickenBridge.scm",(void*)f_29632},
{"f_29590ChickenBridge.scm",(void*)f_29590},
{"f_18518ChickenBridge.scm",(void*)f_18518},
{"f_29451ChickenBridge.scm",(void*)f_29451},
{"f_29490ChickenBridge.scm",(void*)f_29490},
{"f_29464ChickenBridge.scm",(void*)f_29464},
{"f_29445ChickenBridge.scm",(void*)f_29445},
{"f_18521ChickenBridge.scm",(void*)f_18521},
{"f_29033ChickenBridge.scm",(void*)f_29033},
{"f_29037ChickenBridge.scm",(void*)f_29037},
{"f_29049ChickenBridge.scm",(void*)f_29049},
{"f_29107ChickenBridge.scm",(void*)f_29107},
{"f_29110ChickenBridge.scm",(void*)f_29110},
{"f_29113ChickenBridge.scm",(void*)f_29113},
{"f_29325ChickenBridge.scm",(void*)f_29325},
{"f_29263ChickenBridge.scm",(void*)f_29263},
{"f_29297ChickenBridge.scm",(void*)f_29297},
{"f_29272ChickenBridge.scm",(void*)f_29272},
{"f_29283ChickenBridge.scm",(void*)f_29283},
{"f_29279ChickenBridge.scm",(void*)f_29279},
{"f_29122ChickenBridge.scm",(void*)f_29122},
{"f_29200ChickenBridge.scm",(void*)f_29200},
{"f_29241ChickenBridge.scm",(void*)f_29241},
{"f_29245ChickenBridge.scm",(void*)f_29245},
{"f_29249ChickenBridge.scm",(void*)f_29249},
{"f_29204ChickenBridge.scm",(void*)f_29204},
{"f_29208ChickenBridge.scm",(void*)f_29208},
{"f_29235ChickenBridge.scm",(void*)f_29235},
{"f_29211ChickenBridge.scm",(void*)f_29211},
{"f_29125ChickenBridge.scm",(void*)f_29125},
{"f_29197ChickenBridge.scm",(void*)f_29197},
{"f_29139ChickenBridge.scm",(void*)f_29139},
{"f_29141ChickenBridge.scm",(void*)f_29141},
{"f_29189ChickenBridge.scm",(void*)f_29189},
{"f_29160ChickenBridge.scm",(void*)f_29160},
{"f_29177ChickenBridge.scm",(void*)f_29177},
{"f_29163ChickenBridge.scm",(void*)f_29163},
{"f_29156ChickenBridge.scm",(void*)f_29156},
{"f_29128ChickenBridge.scm",(void*)f_29128},
{"f_29058ChickenBridge.scm",(void*)f_29058},
{"f_29068ChickenBridge.scm",(void*)f_29068},
{"f_29074ChickenBridge.scm",(void*)f_29074},
{"f_29046ChickenBridge.scm",(void*)f_29046},
{"f_28994ChickenBridge.scm",(void*)f_28994},
{"f_29011ChickenBridge.scm",(void*)f_29011},
{"f_29027ChickenBridge.scm",(void*)f_29027},
{"f_29005ChickenBridge.scm",(void*)f_29005},
{"f_28988ChickenBridge.scm",(void*)f_28988},
{"f_18524ChickenBridge.scm",(void*)f_18524},
{"f_28912ChickenBridge.scm",(void*)f_28912},
{"f_18527ChickenBridge.scm",(void*)f_18527},
{"f_28888ChickenBridge.scm",(void*)f_28888},
{"f_28900ChickenBridge.scm",(void*)f_28900},
{"f_28896ChickenBridge.scm",(void*)f_28896},
{"f_28874ChickenBridge.scm",(void*)f_28874},
{"f_28882ChickenBridge.scm",(void*)f_28882},
{"f_28868ChickenBridge.scm",(void*)f_28868},
{"f_18530ChickenBridge.scm",(void*)f_18530},
{"f_28860ChickenBridge.scm",(void*)f_28860},
{"f_22294ChickenBridge.scm",(void*)f_22294},
{"f_22297ChickenBridge.scm",(void*)f_22297},
{"f_22463ChickenBridge.scm",(void*)f_22463},
{"f_22459ChickenBridge.scm",(void*)f_22459},
{"f_22449ChickenBridge.scm",(void*)f_22449},
{"f_22304ChickenBridge.scm",(void*)f_22304},
{"f_22308ChickenBridge.scm",(void*)f_22308},
{"f_22311ChickenBridge.scm",(void*)f_22311},
{"f_22322ChickenBridge.scm",(void*)f_22322},
{"f_22330ChickenBridge.scm",(void*)f_22330},
{"f_22402ChickenBridge.scm",(void*)f_22402},
{"f_22410ChickenBridge.scm",(void*)f_22410},
{"f_22406ChickenBridge.scm",(void*)f_22406},
{"f_22398ChickenBridge.scm",(void*)f_22398},
{"f_22394ChickenBridge.scm",(void*)f_22394},
{"f_22366ChickenBridge.scm",(void*)f_22366},
{"f_22362ChickenBridge.scm",(void*)f_22362},
{"f_22326ChickenBridge.scm",(void*)f_22326},
{"f_18941ChickenBridge.scm",(void*)f_18941},
{"f_28846ChickenBridge.scm",(void*)f_28846},
{"f_18944ChickenBridge.scm",(void*)f_18944},
{"f_28817ChickenBridge.scm",(void*)f_28817},
{"f_28821ChickenBridge.scm",(void*)f_28821},
{"f_18947ChickenBridge.scm",(void*)f_18947},
{"f_28814ChickenBridge.scm",(void*)f_28814},
{"f_18950ChickenBridge.scm",(void*)f_18950},
{"f_28672ChickenBridge.scm",(void*)f_28672},
{"f_22476ChickenBridge.scm",(void*)f_22476},
{"f_22608ChickenBridge.scm",(void*)f_22608},
{"f_22479ChickenBridge.scm",(void*)f_22479},
{"f_22490ChickenBridge.scm",(void*)f_22490},
{"f_22498ChickenBridge.scm",(void*)f_22498},
{"f_22522ChickenBridge.scm",(void*)f_22522},
{"f_22525ChickenBridge.scm",(void*)f_22525},
{"f_22533ChickenBridge.scm",(void*)f_22533},
{"f_22541ChickenBridge.scm",(void*)f_22541},
{"f_22561ChickenBridge.scm",(void*)f_22561},
{"f_22557ChickenBridge.scm",(void*)f_22557},
{"f_22537ChickenBridge.scm",(void*)f_22537},
{"f_22529ChickenBridge.scm",(void*)f_22529},
{"f_22518ChickenBridge.scm",(void*)f_22518},
{"f_22494ChickenBridge.scm",(void*)f_22494},
{"f_22470ChickenBridge.scm",(void*)f_22470},
{"f_27392ChickenBridge.scm",(void*)f_27392},
{"f_27395ChickenBridge.scm",(void*)f_27395},
{"f_27398ChickenBridge.scm",(void*)f_27398},
{"f_27401ChickenBridge.scm",(void*)f_27401},
{"f_27404ChickenBridge.scm",(void*)f_27404},
{"f_27407ChickenBridge.scm",(void*)f_27407},
{"f_27410ChickenBridge.scm",(void*)f_27410},
{"f_27413ChickenBridge.scm",(void*)f_27413},
{"f_27416ChickenBridge.scm",(void*)f_27416},
{"f_27419ChickenBridge.scm",(void*)f_27419},
{"f_27422ChickenBridge.scm",(void*)f_27422},
{"f_27547ChickenBridge.scm",(void*)f_27547},
{"f_27550ChickenBridge.scm",(void*)f_27550},
{"f_27553ChickenBridge.scm",(void*)f_27553},
{"f_28666ChickenBridge.scm",(void*)f_28666},
{"f_28220ChickenBridge.scm",(void*)f_28220},
{"f_28223ChickenBridge.scm",(void*)f_28223},
{"f_28501ChickenBridge.scm",(void*)f_28501},
{"f_28609ChickenBridge.scm",(void*)f_28609},
{"f_28521ChickenBridge.scm",(void*)f_28521},
{"f_28530ChickenBridge.scm",(void*)f_28530},
{"f_28534ChickenBridge.scm",(void*)f_28534},
{"f_28538ChickenBridge.scm",(void*)f_28538},
{"f_28546ChickenBridge.scm",(void*)f_28546},
{"f_28542ChickenBridge.scm",(void*)f_28542},
{"f_28511ChickenBridge.scm",(void*)f_28511},
{"f_28226ChickenBridge.scm",(void*)f_28226},
{"f_28229ChickenBridge.scm",(void*)f_28229},
{"f_28232ChickenBridge.scm",(void*)f_28232},
{"f_28235ChickenBridge.scm",(void*)f_28235},
{"f_28238ChickenBridge.scm",(void*)f_28238},
{"f_28495ChickenBridge.scm",(void*)f_28495},
{"f_28394ChickenBridge.scm",(void*)f_28394},
{"f_28401ChickenBridge.scm",(void*)f_28401},
{"f_28403ChickenBridge.scm",(void*)f_28403},
{"f_28475ChickenBridge.scm",(void*)f_28475},
{"f_28427ChickenBridge.scm",(void*)f_28427},
{"f_28430ChickenBridge.scm",(void*)f_28430},
{"f_28451ChickenBridge.scm",(void*)f_28451},
{"f_28417ChickenBridge.scm",(void*)f_28417},
{"f_28241ChickenBridge.scm",(void*)f_28241},
{"f_28383ChickenBridge.scm",(void*)f_28383},
{"f_28371ChickenBridge.scm",(void*)f_28371},
{"f_28367ChickenBridge.scm",(void*)f_28367},
{"f_28248ChickenBridge.scm",(void*)f_28248},
{"f_28205ChickenBridge.scm",(void*)f_28205},
{"f_28664ChickenBridge.scm",(void*)f_28664},
{"f_28195ChickenBridge.scm",(void*)f_28195},
{"f_27858ChickenBridge.scm",(void*)f_27858},
{"f_28199ChickenBridge.scm",(void*)f_28199},
{"f_28137ChickenBridge.scm",(void*)f_28137},
{"f_28155ChickenBridge.scm",(void*)f_28155},
{"f_28165ChickenBridge.scm",(void*)f_28165},
{"f_28141ChickenBridge.scm",(void*)f_28141},
{"f_28128ChickenBridge.scm",(void*)f_28128},
{"f_27836ChickenBridge.scm",(void*)f_27836},
{"f_28132ChickenBridge.scm",(void*)f_28132},
{"f_28122ChickenBridge.scm",(void*)f_28122},
{"f_27818ChickenBridge.scm",(void*)f_27818},
{"f_28113ChickenBridge.scm",(void*)f_28113},
{"f_27827ChickenBridge.scm",(void*)f_27827},
{"f_28117ChickenBridge.scm",(void*)f_28117},
{"f_28050ChickenBridge.scm",(void*)f_28050},
{"f_28075ChickenBridge.scm",(void*)f_28075},
{"f_27783ChickenBridge.scm",(void*)f_27783},
{"f_28063ChickenBridge.scm",(void*)f_28063},
{"f_27882ChickenBridge.scm",(void*)f_27882},
{"f_28001ChickenBridge.scm",(void*)f_28001},
{"f_27996ChickenBridge.scm",(void*)f_27996},
{"f_27884ChickenBridge.scm",(void*)f_27884},
{"f_27991ChickenBridge.scm",(void*)f_27991},
{"f_27995ChickenBridge.scm",(void*)f_27995},
{"f_27987ChickenBridge.scm",(void*)f_27987},
{"f_27955ChickenBridge.scm",(void*)f_27955},
{"f_27980ChickenBridge.scm",(void*)f_27980},
{"f_27984ChickenBridge.scm",(void*)f_27984},
{"f_27965ChickenBridge.scm",(void*)f_27965},
{"f_27944ChickenBridge.scm",(void*)f_27944},
{"f_27914ChickenBridge.scm",(void*)f_27914},
{"f_27886ChickenBridge.scm",(void*)f_27886},
{"f_27863ChickenBridge.scm",(void*)f_27863},
{"f_27868ChickenBridge.scm",(void*)f_27868},
{"f_27873ChickenBridge.scm",(void*)f_27873},
{"f_27841ChickenBridge.scm",(void*)f_27841},
{"f_27845ChickenBridge.scm",(void*)f_27845},
{"f_27797ChickenBridge.scm",(void*)f_27797},
{"f_27801ChickenBridge.scm",(void*)f_27801},
{"f_27788ChickenBridge.scm",(void*)f_27788},
{"f_27792ChickenBridge.scm",(void*)f_27792},
{"f_27776ChickenBridge.scm",(void*)f_27776},
{"f_27773ChickenBridge.scm",(void*)f_27773},
{"f_27759ChickenBridge.scm",(void*)f_27759},
{"f_27764ChickenBridge.scm",(void*)f_27764},
{"f_27745ChickenBridge.scm",(void*)f_27745},
{"f_27750ChickenBridge.scm",(void*)f_27750},
{"f_27555ChickenBridge.scm",(void*)f_27555},
{"f_27616ChickenBridge.scm",(void*)f_27616},
{"f_27618ChickenBridge.scm",(void*)f_27618},
{"f_27628ChickenBridge.scm",(void*)f_27628},
{"f_27647ChickenBridge.scm",(void*)f_27647},
{"f_27687ChickenBridge.scm",(void*)f_27687},
{"f_27729ChickenBridge.scm",(void*)f_27729},
{"f_27699ChickenBridge.scm",(void*)f_27699},
{"f_27684ChickenBridge.scm",(void*)f_27684},
{"f_27602ChickenBridge.scm",(void*)f_27602},
{"f_27567ChickenBridge.scm",(void*)f_27567},
{"f_27594ChickenBridge.scm",(void*)f_27594},
{"f_27575ChickenBridge.scm",(void*)f_27575},
{"f_27582ChickenBridge.scm",(void*)f_27582},
{"f_27586ChickenBridge.scm",(void*)f_27586},
{"f_27590ChickenBridge.scm",(void*)f_27590},
{"f_27667ChickenBridge.scm",(void*)f_27667},
{"f_27645ChickenBridge.scm",(void*)f_27645},
{"f_27631ChickenBridge.scm",(void*)f_27631},
{"f_27634ChickenBridge.scm",(void*)f_27634},
{"f_27609ChickenBridge.scm",(void*)f_27609},
{"f_27538ChickenBridge.scm",(void*)f_27538},
{"f_27543ChickenBridge.scm",(void*)f_27543},
{"f_27481ChickenBridge.scm",(void*)f_27481},
{"f_27514ChickenBridge.scm",(void*)f_27514},
{"f_27494ChickenBridge.scm",(void*)f_27494},
{"f_27502ChickenBridge.scm",(void*)f_27502},
{"f_27485ChickenBridge.scm",(void*)f_27485},
{"f_27424ChickenBridge.scm",(void*)f_27424},
{"f_27457ChickenBridge.scm",(void*)f_27457},
{"f_27437ChickenBridge.scm",(void*)f_27437},
{"f_27445ChickenBridge.scm",(void*)f_27445},
{"f_27428ChickenBridge.scm",(void*)f_27428},
{"f_27334ChickenBridge.scm",(void*)f_27334},
{"f_27388ChickenBridge.scm",(void*)f_27388},
{"f_27383ChickenBridge.scm",(void*)f_27383},
{"f_27346ChickenBridge.scm",(void*)f_27346},
{"f_27352ChickenBridge.scm",(void*)f_27352},
{"f_27378ChickenBridge.scm",(void*)f_27378},
{"f_27382ChickenBridge.scm",(void*)f_27382},
{"f_27358ChickenBridge.scm",(void*)f_27358},
{"f_27376ChickenBridge.scm",(void*)f_27376},
{"f_27373ChickenBridge.scm",(void*)f_27373},
{"f_27369ChickenBridge.scm",(void*)f_27369},
{"f_27362ChickenBridge.scm",(void*)f_27362},
{"f_27319ChickenBridge.scm",(void*)f_27319},
{"f_27324ChickenBridge.scm",(void*)f_27324},
{"f_27291ChickenBridge.scm",(void*)f_27291},
{"f_27296ChickenBridge.scm",(void*)f_27296},
{"f_27263ChickenBridge.scm",(void*)f_27263},
{"f_27268ChickenBridge.scm",(void*)f_27268},
{"f_27235ChickenBridge.scm",(void*)f_27235},
{"f_27240ChickenBridge.scm",(void*)f_27240},
{"f_27207ChickenBridge.scm",(void*)f_27207},
{"f_27212ChickenBridge.scm",(void*)f_27212},
{"f_27179ChickenBridge.scm",(void*)f_27179},
{"f_27184ChickenBridge.scm",(void*)f_27184},
{"f_27151ChickenBridge.scm",(void*)f_27151},
{"f_27156ChickenBridge.scm",(void*)f_27156},
{"f_27123ChickenBridge.scm",(void*)f_27123},
{"f_27128ChickenBridge.scm",(void*)f_27128},
{"f_27095ChickenBridge.scm",(void*)f_27095},
{"f_27100ChickenBridge.scm",(void*)f_27100},
{"f_27067ChickenBridge.scm",(void*)f_27067},
{"f_27072ChickenBridge.scm",(void*)f_27072},
{"f_27044ChickenBridge.scm",(void*)f_27044},
{"f_27049ChickenBridge.scm",(void*)f_27049},
{"f_27048ChickenBridge.scm",(void*)f_27048},
{"f_27025ChickenBridge.scm",(void*)f_27025},
{"f_27030ChickenBridge.scm",(void*)f_27030},
{"f_26970ChickenBridge.scm",(void*)f_26970},
{"f_26977ChickenBridge.scm",(void*)f_26977},
{"f_26980ChickenBridge.scm",(void*)f_26980},
{"f_27004ChickenBridge.scm",(void*)f_27004},
{"f_26984ChickenBridge.scm",(void*)f_26984},
{"f_26974ChickenBridge.scm",(void*)f_26974},
{"f_26923ChickenBridge.scm",(void*)f_26923},
{"f_26930ChickenBridge.scm",(void*)f_26930},
{"f_26933ChickenBridge.scm",(void*)f_26933},
{"f_26953ChickenBridge.scm",(void*)f_26953},
{"f_26937ChickenBridge.scm",(void*)f_26937},
{"f_26900ChickenBridge.scm",(void*)f_26900},
{"f_26905ChickenBridge.scm",(void*)f_26905},
{"f_26904ChickenBridge.scm",(void*)f_26904},
{"f_26881ChickenBridge.scm",(void*)f_26881},
{"f_26886ChickenBridge.scm",(void*)f_26886},
{"f_26858ChickenBridge.scm",(void*)f_26858},
{"f_26863ChickenBridge.scm",(void*)f_26863},
{"f_26862ChickenBridge.scm",(void*)f_26862},
{"f_26839ChickenBridge.scm",(void*)f_26839},
{"f_26844ChickenBridge.scm",(void*)f_26844},
{"f_26820ChickenBridge.scm",(void*)f_26820},
{"f_26825ChickenBridge.scm",(void*)f_26825},
{"f_26824ChickenBridge.scm",(void*)f_26824},
{"f_26805ChickenBridge.scm",(void*)f_26805},
{"f_26810ChickenBridge.scm",(void*)f_26810},
{"f_26786ChickenBridge.scm",(void*)f_26786},
{"f_26791ChickenBridge.scm",(void*)f_26791},
{"f_26790ChickenBridge.scm",(void*)f_26790},
{"f_26771ChickenBridge.scm",(void*)f_26771},
{"f_26776ChickenBridge.scm",(void*)f_26776},
{"f_26756ChickenBridge.scm",(void*)f_26756},
{"f_26761ChickenBridge.scm",(void*)f_26761},
{"f_26738ChickenBridge.scm",(void*)f_26738},
{"f_26746ChickenBridge.scm",(void*)f_26746},
{"f_26742ChickenBridge.scm",(void*)f_26742},
{"f_26268ChickenBridge.scm",(void*)f_26268},
{"f_26696ChickenBridge.scm",(void*)f_26696},
{"f_26711ChickenBridge.scm",(void*)f_26711},
{"f_26703ChickenBridge.scm",(void*)f_26703},
{"f_26667ChickenBridge.scm",(void*)f_26667},
{"f_26671ChickenBridge.scm",(void*)f_26671},
{"f_26632ChickenBridge.scm",(void*)f_26632},
{"f_26636ChickenBridge.scm",(void*)f_26636},
{"f_26597ChickenBridge.scm",(void*)f_26597},
{"f_26601ChickenBridge.scm",(void*)f_26601},
{"f_26272ChickenBridge.scm",(void*)f_26272},
{"f_26561ChickenBridge.scm",(void*)f_26561},
{"f_26576ChickenBridge.scm",(void*)f_26576},
{"f_26568ChickenBridge.scm",(void*)f_26568},
{"f_26532ChickenBridge.scm",(void*)f_26532},
{"f_26536ChickenBridge.scm",(void*)f_26536},
{"f_26497ChickenBridge.scm",(void*)f_26497},
{"f_26501ChickenBridge.scm",(void*)f_26501},
{"f_26462ChickenBridge.scm",(void*)f_26462},
{"f_26466ChickenBridge.scm",(void*)f_26466},
{"f_26275ChickenBridge.scm",(void*)f_26275},
{"f_26426ChickenBridge.scm",(void*)f_26426},
{"f_26441ChickenBridge.scm",(void*)f_26441},
{"f_26433ChickenBridge.scm",(void*)f_26433},
{"f_26397ChickenBridge.scm",(void*)f_26397},
{"f_26401ChickenBridge.scm",(void*)f_26401},
{"f_26362ChickenBridge.scm",(void*)f_26362},
{"f_26366ChickenBridge.scm",(void*)f_26366},
{"f_26327ChickenBridge.scm",(void*)f_26327},
{"f_26331ChickenBridge.scm",(void*)f_26331},
{"f_26278ChickenBridge.scm",(void*)f_26278},
{"f_26281ChickenBridge.scm",(void*)f_26281},
{"f_26285ChickenBridge.scm",(void*)f_26285},
{"f_26249ChickenBridge.scm",(void*)f_26249},
{"f_26254ChickenBridge.scm",(void*)f_26254},
{"f_25798ChickenBridge.scm",(void*)f_25798},
{"f_26226ChickenBridge.scm",(void*)f_26226},
{"f_26241ChickenBridge.scm",(void*)f_26241},
{"f_26233ChickenBridge.scm",(void*)f_26233},
{"f_26197ChickenBridge.scm",(void*)f_26197},
{"f_26201ChickenBridge.scm",(void*)f_26201},
{"f_26162ChickenBridge.scm",(void*)f_26162},
{"f_26166ChickenBridge.scm",(void*)f_26166},
{"f_26127ChickenBridge.scm",(void*)f_26127},
{"f_26131ChickenBridge.scm",(void*)f_26131},
{"f_25802ChickenBridge.scm",(void*)f_25802},
{"f_26091ChickenBridge.scm",(void*)f_26091},
{"f_26106ChickenBridge.scm",(void*)f_26106},
{"f_26098ChickenBridge.scm",(void*)f_26098},
{"f_26062ChickenBridge.scm",(void*)f_26062},
{"f_26066ChickenBridge.scm",(void*)f_26066},
{"f_26027ChickenBridge.scm",(void*)f_26027},
{"f_26031ChickenBridge.scm",(void*)f_26031},
{"f_25992ChickenBridge.scm",(void*)f_25992},
{"f_25996ChickenBridge.scm",(void*)f_25996},
{"f_25805ChickenBridge.scm",(void*)f_25805},
{"f_25956ChickenBridge.scm",(void*)f_25956},
{"f_25971ChickenBridge.scm",(void*)f_25971},
{"f_25963ChickenBridge.scm",(void*)f_25963},
{"f_25927ChickenBridge.scm",(void*)f_25927},
{"f_25931ChickenBridge.scm",(void*)f_25931},
{"f_25892ChickenBridge.scm",(void*)f_25892},
{"f_25896ChickenBridge.scm",(void*)f_25896},
{"f_25857ChickenBridge.scm",(void*)f_25857},
{"f_25861ChickenBridge.scm",(void*)f_25861},
{"f_25808ChickenBridge.scm",(void*)f_25808},
{"f_25811ChickenBridge.scm",(void*)f_25811},
{"f_25815ChickenBridge.scm",(void*)f_25815},
{"f_25779ChickenBridge.scm",(void*)f_25779},
{"f_25784ChickenBridge.scm",(void*)f_25784},
{"f_25328ChickenBridge.scm",(void*)f_25328},
{"f_25756ChickenBridge.scm",(void*)f_25756},
{"f_25771ChickenBridge.scm",(void*)f_25771},
{"f_25763ChickenBridge.scm",(void*)f_25763},
{"f_25727ChickenBridge.scm",(void*)f_25727},
{"f_25731ChickenBridge.scm",(void*)f_25731},
{"f_25692ChickenBridge.scm",(void*)f_25692},
{"f_25696ChickenBridge.scm",(void*)f_25696},
{"f_25657ChickenBridge.scm",(void*)f_25657},
{"f_25661ChickenBridge.scm",(void*)f_25661},
{"f_25332ChickenBridge.scm",(void*)f_25332},
{"f_25621ChickenBridge.scm",(void*)f_25621},
{"f_25636ChickenBridge.scm",(void*)f_25636},
{"f_25628ChickenBridge.scm",(void*)f_25628},
{"f_25592ChickenBridge.scm",(void*)f_25592},
{"f_25596ChickenBridge.scm",(void*)f_25596},
{"f_25557ChickenBridge.scm",(void*)f_25557},
{"f_25561ChickenBridge.scm",(void*)f_25561},
{"f_25522ChickenBridge.scm",(void*)f_25522},
{"f_25526ChickenBridge.scm",(void*)f_25526},
{"f_25335ChickenBridge.scm",(void*)f_25335},
{"f_25486ChickenBridge.scm",(void*)f_25486},
{"f_25501ChickenBridge.scm",(void*)f_25501},
{"f_25493ChickenBridge.scm",(void*)f_25493},
{"f_25457ChickenBridge.scm",(void*)f_25457},
{"f_25461ChickenBridge.scm",(void*)f_25461},
{"f_25422ChickenBridge.scm",(void*)f_25422},
{"f_25426ChickenBridge.scm",(void*)f_25426},
{"f_25387ChickenBridge.scm",(void*)f_25387},
{"f_25391ChickenBridge.scm",(void*)f_25391},
{"f_25338ChickenBridge.scm",(void*)f_25338},
{"f_25341ChickenBridge.scm",(void*)f_25341},
{"f_25345ChickenBridge.scm",(void*)f_25345},
{"f_25309ChickenBridge.scm",(void*)f_25309},
{"f_25314ChickenBridge.scm",(void*)f_25314},
{"f_24580ChickenBridge.scm",(void*)f_24580},
{"f_25286ChickenBridge.scm",(void*)f_25286},
{"f_25301ChickenBridge.scm",(void*)f_25301},
{"f_25293ChickenBridge.scm",(void*)f_25293},
{"f_25257ChickenBridge.scm",(void*)f_25257},
{"f_25261ChickenBridge.scm",(void*)f_25261},
{"f_25222ChickenBridge.scm",(void*)f_25222},
{"f_25226ChickenBridge.scm",(void*)f_25226},
{"f_25187ChickenBridge.scm",(void*)f_25187},
{"f_25191ChickenBridge.scm",(void*)f_25191},
{"f_25152ChickenBridge.scm",(void*)f_25152},
{"f_25156ChickenBridge.scm",(void*)f_25156},
{"f_24584ChickenBridge.scm",(void*)f_24584},
{"f_25116ChickenBridge.scm",(void*)f_25116},
{"f_25131ChickenBridge.scm",(void*)f_25131},
{"f_25123ChickenBridge.scm",(void*)f_25123},
{"f_25087ChickenBridge.scm",(void*)f_25087},
{"f_25091ChickenBridge.scm",(void*)f_25091},
{"f_25052ChickenBridge.scm",(void*)f_25052},
{"f_25056ChickenBridge.scm",(void*)f_25056},
{"f_25017ChickenBridge.scm",(void*)f_25017},
{"f_25021ChickenBridge.scm",(void*)f_25021},
{"f_24982ChickenBridge.scm",(void*)f_24982},
{"f_24986ChickenBridge.scm",(void*)f_24986},
{"f_24587ChickenBridge.scm",(void*)f_24587},
{"f_24946ChickenBridge.scm",(void*)f_24946},
{"f_24961ChickenBridge.scm",(void*)f_24961},
{"f_24953ChickenBridge.scm",(void*)f_24953},
{"f_24917ChickenBridge.scm",(void*)f_24917},
{"f_24921ChickenBridge.scm",(void*)f_24921},
{"f_24882ChickenBridge.scm",(void*)f_24882},
{"f_24886ChickenBridge.scm",(void*)f_24886},
{"f_24847ChickenBridge.scm",(void*)f_24847},
{"f_24851ChickenBridge.scm",(void*)f_24851},
{"f_24812ChickenBridge.scm",(void*)f_24812},
{"f_24816ChickenBridge.scm",(void*)f_24816},
{"f_24590ChickenBridge.scm",(void*)f_24590},
{"f_24776ChickenBridge.scm",(void*)f_24776},
{"f_24791ChickenBridge.scm",(void*)f_24791},
{"f_24783ChickenBridge.scm",(void*)f_24783},
{"f_24747ChickenBridge.scm",(void*)f_24747},
{"f_24751ChickenBridge.scm",(void*)f_24751},
{"f_24712ChickenBridge.scm",(void*)f_24712},
{"f_24716ChickenBridge.scm",(void*)f_24716},
{"f_24677ChickenBridge.scm",(void*)f_24677},
{"f_24681ChickenBridge.scm",(void*)f_24681},
{"f_24642ChickenBridge.scm",(void*)f_24642},
{"f_24646ChickenBridge.scm",(void*)f_24646},
{"f_24593ChickenBridge.scm",(void*)f_24593},
{"f_24596ChickenBridge.scm",(void*)f_24596},
{"f_24600ChickenBridge.scm",(void*)f_24600},
{"f_24561ChickenBridge.scm",(void*)f_24561},
{"f_24566ChickenBridge.scm",(void*)f_24566},
{"f_23832ChickenBridge.scm",(void*)f_23832},
{"f_24538ChickenBridge.scm",(void*)f_24538},
{"f_24553ChickenBridge.scm",(void*)f_24553},
{"f_24545ChickenBridge.scm",(void*)f_24545},
{"f_24509ChickenBridge.scm",(void*)f_24509},
{"f_24513ChickenBridge.scm",(void*)f_24513},
{"f_24474ChickenBridge.scm",(void*)f_24474},
{"f_24478ChickenBridge.scm",(void*)f_24478},
{"f_24439ChickenBridge.scm",(void*)f_24439},
{"f_24443ChickenBridge.scm",(void*)f_24443},
{"f_24404ChickenBridge.scm",(void*)f_24404},
{"f_24408ChickenBridge.scm",(void*)f_24408},
{"f_23836ChickenBridge.scm",(void*)f_23836},
{"f_24368ChickenBridge.scm",(void*)f_24368},
{"f_24383ChickenBridge.scm",(void*)f_24383},
{"f_24375ChickenBridge.scm",(void*)f_24375},
{"f_24339ChickenBridge.scm",(void*)f_24339},
{"f_24343ChickenBridge.scm",(void*)f_24343},
{"f_24304ChickenBridge.scm",(void*)f_24304},
{"f_24308ChickenBridge.scm",(void*)f_24308},
{"f_24269ChickenBridge.scm",(void*)f_24269},
{"f_24273ChickenBridge.scm",(void*)f_24273},
{"f_24234ChickenBridge.scm",(void*)f_24234},
{"f_24238ChickenBridge.scm",(void*)f_24238},
{"f_23839ChickenBridge.scm",(void*)f_23839},
{"f_24198ChickenBridge.scm",(void*)f_24198},
{"f_24213ChickenBridge.scm",(void*)f_24213},
{"f_24205ChickenBridge.scm",(void*)f_24205},
{"f_24169ChickenBridge.scm",(void*)f_24169},
{"f_24173ChickenBridge.scm",(void*)f_24173},
{"f_24134ChickenBridge.scm",(void*)f_24134},
{"f_24138ChickenBridge.scm",(void*)f_24138},
{"f_24099ChickenBridge.scm",(void*)f_24099},
{"f_24103ChickenBridge.scm",(void*)f_24103},
{"f_24064ChickenBridge.scm",(void*)f_24064},
{"f_24068ChickenBridge.scm",(void*)f_24068},
{"f_23842ChickenBridge.scm",(void*)f_23842},
{"f_24028ChickenBridge.scm",(void*)f_24028},
{"f_24043ChickenBridge.scm",(void*)f_24043},
{"f_24035ChickenBridge.scm",(void*)f_24035},
{"f_23999ChickenBridge.scm",(void*)f_23999},
{"f_24003ChickenBridge.scm",(void*)f_24003},
{"f_23964ChickenBridge.scm",(void*)f_23964},
{"f_23968ChickenBridge.scm",(void*)f_23968},
{"f_23929ChickenBridge.scm",(void*)f_23929},
{"f_23933ChickenBridge.scm",(void*)f_23933},
{"f_23894ChickenBridge.scm",(void*)f_23894},
{"f_23898ChickenBridge.scm",(void*)f_23898},
{"f_23845ChickenBridge.scm",(void*)f_23845},
{"f_23848ChickenBridge.scm",(void*)f_23848},
{"f_23852ChickenBridge.scm",(void*)f_23852},
{"f_23813ChickenBridge.scm",(void*)f_23813},
{"f_23818ChickenBridge.scm",(void*)f_23818},
{"f_23362ChickenBridge.scm",(void*)f_23362},
{"f_23790ChickenBridge.scm",(void*)f_23790},
{"f_23805ChickenBridge.scm",(void*)f_23805},
{"f_23797ChickenBridge.scm",(void*)f_23797},
{"f_23761ChickenBridge.scm",(void*)f_23761},
{"f_23765ChickenBridge.scm",(void*)f_23765},
{"f_23726ChickenBridge.scm",(void*)f_23726},
{"f_23730ChickenBridge.scm",(void*)f_23730},
{"f_23691ChickenBridge.scm",(void*)f_23691},
{"f_23695ChickenBridge.scm",(void*)f_23695},
{"f_23366ChickenBridge.scm",(void*)f_23366},
{"f_23655ChickenBridge.scm",(void*)f_23655},
{"f_23670ChickenBridge.scm",(void*)f_23670},
{"f_23662ChickenBridge.scm",(void*)f_23662},
{"f_23626ChickenBridge.scm",(void*)f_23626},
{"f_23630ChickenBridge.scm",(void*)f_23630},
{"f_23591ChickenBridge.scm",(void*)f_23591},
{"f_23595ChickenBridge.scm",(void*)f_23595},
{"f_23556ChickenBridge.scm",(void*)f_23556},
{"f_23560ChickenBridge.scm",(void*)f_23560},
{"f_23369ChickenBridge.scm",(void*)f_23369},
{"f_23520ChickenBridge.scm",(void*)f_23520},
{"f_23535ChickenBridge.scm",(void*)f_23535},
{"f_23527ChickenBridge.scm",(void*)f_23527},
{"f_23491ChickenBridge.scm",(void*)f_23491},
{"f_23495ChickenBridge.scm",(void*)f_23495},
{"f_23456ChickenBridge.scm",(void*)f_23456},
{"f_23460ChickenBridge.scm",(void*)f_23460},
{"f_23421ChickenBridge.scm",(void*)f_23421},
{"f_23425ChickenBridge.scm",(void*)f_23425},
{"f_23372ChickenBridge.scm",(void*)f_23372},
{"f_23375ChickenBridge.scm",(void*)f_23375},
{"f_23379ChickenBridge.scm",(void*)f_23379},
{"f_23343ChickenBridge.scm",(void*)f_23343},
{"f_23348ChickenBridge.scm",(void*)f_23348},
{"f_22614ChickenBridge.scm",(void*)f_22614},
{"f_23320ChickenBridge.scm",(void*)f_23320},
{"f_23335ChickenBridge.scm",(void*)f_23335},
{"f_23327ChickenBridge.scm",(void*)f_23327},
{"f_23291ChickenBridge.scm",(void*)f_23291},
{"f_23295ChickenBridge.scm",(void*)f_23295},
{"f_23256ChickenBridge.scm",(void*)f_23256},
{"f_23260ChickenBridge.scm",(void*)f_23260},
{"f_23221ChickenBridge.scm",(void*)f_23221},
{"f_23225ChickenBridge.scm",(void*)f_23225},
{"f_23186ChickenBridge.scm",(void*)f_23186},
{"f_23190ChickenBridge.scm",(void*)f_23190},
{"f_22618ChickenBridge.scm",(void*)f_22618},
{"f_23150ChickenBridge.scm",(void*)f_23150},
{"f_23165ChickenBridge.scm",(void*)f_23165},
{"f_23157ChickenBridge.scm",(void*)f_23157},
{"f_23121ChickenBridge.scm",(void*)f_23121},
{"f_23125ChickenBridge.scm",(void*)f_23125},
{"f_23086ChickenBridge.scm",(void*)f_23086},
{"f_23090ChickenBridge.scm",(void*)f_23090},
{"f_23051ChickenBridge.scm",(void*)f_23051},
{"f_23055ChickenBridge.scm",(void*)f_23055},
{"f_23016ChickenBridge.scm",(void*)f_23016},
{"f_23020ChickenBridge.scm",(void*)f_23020},
{"f_22621ChickenBridge.scm",(void*)f_22621},
{"f_22980ChickenBridge.scm",(void*)f_22980},
{"f_22995ChickenBridge.scm",(void*)f_22995},
{"f_22987ChickenBridge.scm",(void*)f_22987},
{"f_22951ChickenBridge.scm",(void*)f_22951},
{"f_22955ChickenBridge.scm",(void*)f_22955},
{"f_22916ChickenBridge.scm",(void*)f_22916},
{"f_22920ChickenBridge.scm",(void*)f_22920},
{"f_22881ChickenBridge.scm",(void*)f_22881},
{"f_22885ChickenBridge.scm",(void*)f_22885},
{"f_22846ChickenBridge.scm",(void*)f_22846},
{"f_22850ChickenBridge.scm",(void*)f_22850},
{"f_22624ChickenBridge.scm",(void*)f_22624},
{"f_22810ChickenBridge.scm",(void*)f_22810},
{"f_22825ChickenBridge.scm",(void*)f_22825},
{"f_22817ChickenBridge.scm",(void*)f_22817},
{"f_22781ChickenBridge.scm",(void*)f_22781},
{"f_22785ChickenBridge.scm",(void*)f_22785},
{"f_22746ChickenBridge.scm",(void*)f_22746},
{"f_22750ChickenBridge.scm",(void*)f_22750},
{"f_22711ChickenBridge.scm",(void*)f_22711},
{"f_22715ChickenBridge.scm",(void*)f_22715},
{"f_22676ChickenBridge.scm",(void*)f_22676},
{"f_22680ChickenBridge.scm",(void*)f_22680},
{"f_22627ChickenBridge.scm",(void*)f_22627},
{"f_22630ChickenBridge.scm",(void*)f_22630},
{"f_22634ChickenBridge.scm",(void*)f_22634},
{"f_22276ChickenBridge.scm",(void*)f_22276},
{"f_22116ChickenBridge.scm",(void*)f_22116},
{"f_22151ChickenBridge.scm",(void*)f_22151},
{"f_22161ChickenBridge.scm",(void*)f_22161},
{"f_22165ChickenBridge.scm",(void*)f_22165},
{"f_22168ChickenBridge.scm",(void*)f_22168},
{"f_22229ChickenBridge.scm",(void*)f_22229},
{"f_22220ChickenBridge.scm",(void*)f_22220},
{"f_22171ChickenBridge.scm",(void*)f_22171},
{"f_22190ChickenBridge.scm",(void*)f_22190},
{"f_22197ChickenBridge.scm",(void*)f_22197},
{"f_22174ChickenBridge.scm",(void*)f_22174},
{"f_22180ChickenBridge.scm",(void*)f_22180},
{"f_22149ChickenBridge.scm",(void*)f_22149},
{"f_22124ChickenBridge.scm",(void*)f_22124},
{"f_22123ChickenBridge.scm",(void*)f_22123},
{"f_22284ChickenBridge.scm",(void*)f_22284},
{"f_21862ChickenBridge.scm",(void*)f_21862},
{"f_21884ChickenBridge.scm",(void*)f_21884},
{"f_21899ChickenBridge.scm",(void*)f_21899},
{"f_21902ChickenBridge.scm",(void*)f_21902},
{"f_22078ChickenBridge.scm",(void*)f_22078},
{"f_22072ChickenBridge.scm",(void*)f_22072},
{"f_21905ChickenBridge.scm",(void*)f_21905},
{"f_22054ChickenBridge.scm",(void*)f_22054},
{"f_21908ChickenBridge.scm",(void*)f_21908},
{"f_21911ChickenBridge.scm",(void*)f_21911},
{"f_22047ChickenBridge.scm",(void*)f_22047},
{"f_22035ChickenBridge.scm",(void*)f_22035},
{"f_21931ChickenBridge.scm",(void*)f_21931},
{"f_21938ChickenBridge.scm",(void*)f_21938},
{"f_22008ChickenBridge.scm",(void*)f_22008},
{"f_21994ChickenBridge.scm",(void*)f_21994},
{"f_22002ChickenBridge.scm",(void*)f_22002},
{"f_21941ChickenBridge.scm",(void*)f_21941},
{"f_21980ChickenBridge.scm",(void*)f_21980},
{"f_21944ChickenBridge.scm",(void*)f_21944},
{"f_21973ChickenBridge.scm",(void*)f_21973},
{"f_21950ChickenBridge.scm",(void*)f_21950},
{"f_21953ChickenBridge.scm",(void*)f_21953},
{"f_21957ChickenBridge.scm",(void*)f_21957},
{"f_21918ChickenBridge.scm",(void*)f_21918},
{"f_21921ChickenBridge.scm",(void*)f_21921},
{"f_21731ChickenBridge.scm",(void*)f_21731},
{"f_21740ChickenBridge.scm",(void*)f_21740},
{"f_21688ChickenBridge.scm",(void*)f_21688},
{"f_21694ChickenBridge.scm",(void*)f_21694},
{"f_21757ChickenBridge.scm",(void*)f_21757},
{"f_21843ChickenBridge.scm",(void*)f_21843},
{"f_21830ChickenBridge.scm",(void*)f_21830},
{"f_21838ChickenBridge.scm",(void*)f_21838},
{"f_21760ChickenBridge.scm",(void*)f_21760},
{"f_21764ChickenBridge.scm",(void*)f_21764},
{"f_21807ChickenBridge.scm",(void*)f_21807},
{"f_21769ChickenBridge.scm",(void*)f_21769},
{"f_21735ChickenBridge.scm",(void*)f_21735},
{"f_21630ChickenBridge.scm",(void*)f_21630},
{"f_21637ChickenBridge.scm",(void*)f_21637},
{"f_21668ChickenBridge.scm",(void*)f_21668},
{"f_21664ChickenBridge.scm",(void*)f_21664},
{"f_21656ChickenBridge.scm",(void*)f_21656},
{"f_21539ChickenBridge.scm",(void*)f_21539},
{"f_21546ChickenBridge.scm",(void*)f_21546},
{"f_21614ChickenBridge.scm",(void*)f_21614},
{"f_21557ChickenBridge.scm",(void*)f_21557},
{"f_21584ChickenBridge.scm",(void*)f_21584},
{"f_21568ChickenBridge.scm",(void*)f_21568},
{"f_21473ChickenBridge.scm",(void*)f_21473},
{"f_21484ChickenBridge.scm",(void*)f_21484},
{"f_21487ChickenBridge.scm",(void*)f_21487},
{"f_21494ChickenBridge.scm",(void*)f_21494},
{"f_21467ChickenBridge.scm",(void*)f_21467},
{"f_20921ChickenBridge.scm",(void*)f_20921},
{"f_20952ChickenBridge.scm",(void*)f_20952},
{"f_21416ChickenBridge.scm",(void*)f_21416},
{"f_21422ChickenBridge.scm",(void*)f_21422},
{"f_20963ChickenBridge.scm",(void*)f_20963},
{"f_20848ChickenBridge.scm",(void*)f_20848},
{"f_20873ChickenBridge.scm",(void*)f_20873},
{"f_20808ChickenBridge.scm",(void*)f_20808},
{"f_20821ChickenBridge.scm",(void*)f_20821},
{"f_20862ChickenBridge.scm",(void*)f_20862},
{"f_20967ChickenBridge.scm",(void*)f_20967},
{"f_21404ChickenBridge.scm",(void*)f_21404},
{"f_21400ChickenBridge.scm",(void*)f_21400},
{"f_21396ChickenBridge.scm",(void*)f_21396},
{"f_20970ChickenBridge.scm",(void*)f_20970},
{"f_21190ChickenBridge.scm",(void*)f_21190},
{"f_21299ChickenBridge.scm",(void*)f_21299},
{"f_21364ChickenBridge.scm",(void*)f_21364},
{"f_21306ChickenBridge.scm",(void*)f_21306},
{"f_21310ChickenBridge.scm",(void*)f_21310},
{"f_21314ChickenBridge.scm",(void*)f_21314},
{"f_21356ChickenBridge.scm",(void*)f_21356},
{"f_21352ChickenBridge.scm",(void*)f_21352},
{"f_21330ChickenBridge.scm",(void*)f_21330},
{"f_21193ChickenBridge.scm",(void*)f_21193},
{"f_21196ChickenBridge.scm",(void*)f_21196},
{"f_21095ChickenBridge.scm",(void*)f_21095},
{"f_21178ChickenBridge.scm",(void*)f_21178},
{"f_21145ChickenBridge.scm",(void*)f_21145},
{"f_21171ChickenBridge.scm",(void*)f_21171},
{"f_21153ChickenBridge.scm",(void*)f_21153},
{"f_21101ChickenBridge.scm",(void*)f_21101},
{"f_21141ChickenBridge.scm",(void*)f_21141},
{"f_21083ChickenBridge.scm",(void*)f_21083},
{"f_21054ChickenBridge.scm",(void*)f_21054},
{"f_21076ChickenBridge.scm",(void*)f_21076},
{"f_21062ChickenBridge.scm",(void*)f_21062},
{"f_21016ChickenBridge.scm",(void*)f_21016},
{"f_20973ChickenBridge.scm",(void*)f_20973},
{"f_20984ChickenBridge.scm",(void*)f_20984},
{"f_20988ChickenBridge.scm",(void*)f_20988},
{"f_20992ChickenBridge.scm",(void*)f_20992},
{"f_20996ChickenBridge.scm",(void*)f_20996},
{"f_20980ChickenBridge.scm",(void*)f_20980},
{"f_20940ChickenBridge.scm",(void*)f_20940},
{"f_20935ChickenBridge.scm",(void*)f_20935},
{"f_20930ChickenBridge.scm",(void*)f_20930},
{"f_20762ChickenBridge.scm",(void*)f_20762},
{"f_20773ChickenBridge.scm",(void*)f_20773},
{"f_20788ChickenBridge.scm",(void*)f_20788},
{"f_20724ChickenBridge.scm",(void*)f_20724},
{"f_20735ChickenBridge.scm",(void*)f_20735},
{"f_20750ChickenBridge.scm",(void*)f_20750},
{"f_20657ChickenBridge.scm",(void*)f_20657},
{"f_20677ChickenBridge.scm",(void*)f_20677},
{"f_20687ChickenBridge.scm",(void*)f_20687},
{"f_20700ChickenBridge.scm",(void*)f_20700},
{"f_20668ChickenBridge.scm",(void*)f_20668},
{"f_20675ChickenBridge.scm",(void*)f_20675},
{"f_20464ChickenBridge.scm",(void*)f_20464},
{"f_20524ChickenBridge.scm",(void*)f_20524},
{"f_20534ChickenBridge.scm",(void*)f_20534},
{"f_20648ChickenBridge.scm",(void*)f_20648},
{"f_20613ChickenBridge.scm",(void*)f_20613},
{"f_20605ChickenBridge.scm",(void*)f_20605},
{"f_20576ChickenBridge.scm",(void*)f_20576},
{"f_20554ChickenBridge.scm",(void*)f_20554},
{"f_20557ChickenBridge.scm",(void*)f_20557},
{"f_20545ChickenBridge.scm",(void*)f_20545},
{"f_20471ChickenBridge.scm",(void*)f_20471},
{"f_20522ChickenBridge.scm",(void*)f_20522},
{"f_20514ChickenBridge.scm",(void*)f_20514},
{"f_20474ChickenBridge.scm",(void*)f_20474},
{"f_20485ChickenBridge.scm",(void*)f_20485},
{"f_20489ChickenBridge.scm",(void*)f_20489},
{"f_20481ChickenBridge.scm",(void*)f_20481},
{"f_20322ChickenBridge.scm",(void*)f_20322},
{"f_20370ChickenBridge.scm",(void*)f_20370},
{"f_20380ChickenBridge.scm",(void*)f_20380},
{"f_20391ChickenBridge.scm",(void*)f_20391},
{"f_20428ChickenBridge.scm",(void*)f_20428},
{"f_20403ChickenBridge.scm",(void*)f_20403},
{"f_20394ChickenBridge.scm",(void*)f_20394},
{"f_20332ChickenBridge.scm",(void*)f_20332},
{"f_20368ChickenBridge.scm",(void*)f_20368},
{"f_20339ChickenBridge.scm",(void*)f_20339},
{"f_19971ChickenBridge.scm",(void*)f_19971},
{"f_19978ChickenBridge.scm",(void*)f_19978},
{"f_20212ChickenBridge.scm",(void*)f_20212},
{"f_20222ChickenBridge.scm",(void*)f_20222},
{"f_20233ChickenBridge.scm",(void*)f_20233},
{"f_20245ChickenBridge.scm",(void*)f_20245},
{"f_20248ChickenBridge.scm",(void*)f_20248},
{"f_20236ChickenBridge.scm",(void*)f_20236},
{"f_19984ChickenBridge.scm",(void*)f_19984},
{"f_20210ChickenBridge.scm",(void*)f_20210},
{"f_20206ChickenBridge.scm",(void*)f_20206},
{"f_20152ChickenBridge.scm",(void*)f_20152},
{"f_20117ChickenBridge.scm",(void*)f_20117},
{"f_20133ChickenBridge.scm",(void*)f_20133},
{"f_20088ChickenBridge.scm",(void*)f_20088},
{"f_20012ChickenBridge.scm",(void*)f_20012},
{"f_20015ChickenBridge.scm",(void*)f_20015},
{"f_20079ChickenBridge.scm",(void*)f_20079},
{"f_20075ChickenBridge.scm",(void*)f_20075},
{"f_19995ChickenBridge.scm",(void*)f_19995},
{"f_20006ChickenBridge.scm",(void*)f_20006},
{"f_20002ChickenBridge.scm",(void*)f_20002},
{"f_19924ChickenBridge.scm",(void*)f_19924},
{"f_19957ChickenBridge.scm",(void*)f_19957},
{"f_19939ChickenBridge.scm",(void*)f_19939},
{"f_19951ChickenBridge.scm",(void*)f_19951},
{"f_19542ChickenBridge.scm",(void*)f_19542},
{"f_19751ChickenBridge.scm",(void*)f_19751},
{"f_19761ChickenBridge.scm",(void*)f_19761},
{"f_19772ChickenBridge.scm",(void*)f_19772},
{"f_19892ChickenBridge.scm",(void*)f_19892},
{"f_19871ChickenBridge.scm",(void*)f_19871},
{"f_19850ChickenBridge.scm",(void*)f_19850},
{"f_19829ChickenBridge.scm",(void*)f_19829},
{"f_19808ChickenBridge.scm",(void*)f_19808},
{"f_19787ChickenBridge.scm",(void*)f_19787},
{"f_19775ChickenBridge.scm",(void*)f_19775},
{"f_19552ChickenBridge.scm",(void*)f_19552},
{"f_19555ChickenBridge.scm",(void*)f_19555},
{"f_19718ChickenBridge.scm",(void*)f_19718},
{"f_19558ChickenBridge.scm",(void*)f_19558},
{"f_19709ChickenBridge.scm",(void*)f_19709},
{"f_19689ChickenBridge.scm",(void*)f_19689},
{"f_19561ChickenBridge.scm",(void*)f_19561},
{"f_19654ChickenBridge.scm",(void*)f_19654},
{"f_19671ChickenBridge.scm",(void*)f_19671},
{"f_19564ChickenBridge.scm",(void*)f_19564},
{"f_19603ChickenBridge.scm",(void*)f_19603},
{"f_19637ChickenBridge.scm",(void*)f_19637},
{"f_19621ChickenBridge.scm",(void*)f_19621},
{"f_19606ChickenBridge.scm",(void*)f_19606},
{"f_19571ChickenBridge.scm",(void*)f_19571},
{"f_19582ChickenBridge.scm",(void*)f_19582},
{"f_19586ChickenBridge.scm",(void*)f_19586},
{"f_19578ChickenBridge.scm",(void*)f_19578},
{"f_19460ChickenBridge.scm",(void*)f_19460},
{"f_19464ChickenBridge.scm",(void*)f_19464},
{"f_19482ChickenBridge.scm",(void*)f_19482},
{"f_19300ChickenBridge.scm",(void*)f_19300},
{"f_19308ChickenBridge.scm",(void*)f_19308},
{"f_19318ChickenBridge.scm",(void*)f_19318},
{"f_19356ChickenBridge.scm",(void*)f_19356},
{"f_19359ChickenBridge.scm",(void*)f_19359},
{"f_19362ChickenBridge.scm",(void*)f_19362},
{"f_19437ChickenBridge.scm",(void*)f_19437},
{"f_19447ChickenBridge.scm",(void*)f_19447},
{"f_19365ChickenBridge.scm",(void*)f_19365},
{"f_19368ChickenBridge.scm",(void*)f_19368},
{"f_19371ChickenBridge.scm",(void*)f_19371},
{"f_19391ChickenBridge.scm",(void*)f_19391},
{"f_19401ChickenBridge.scm",(void*)f_19401},
{"f_19404ChickenBridge.scm",(void*)f_19404},
{"f_19407ChickenBridge.scm",(void*)f_19407},
{"f_19374ChickenBridge.scm",(void*)f_19374},
{"f_19377ChickenBridge.scm",(void*)f_19377},
{"f_19294ChickenBridge.scm",(void*)f_19294},
{"f_19288ChickenBridge.scm",(void*)f_19288},
{"f_19282ChickenBridge.scm",(void*)f_19282},
{"f_19211ChickenBridge.scm",(void*)f_19211},
{"f_19252ChickenBridge.scm",(void*)f_19252},
{"f_19256ChickenBridge.scm",(void*)f_19256},
{"f_19260ChickenBridge.scm",(void*)f_19260},
{"f_19264ChickenBridge.scm",(void*)f_19264},
{"f_19268ChickenBridge.scm",(void*)f_19268},
{"f_19272ChickenBridge.scm",(void*)f_19272},
{"f_19276ChickenBridge.scm",(void*)f_19276},
{"f_19280ChickenBridge.scm",(void*)f_19280},
{"f_19213ChickenBridge.scm",(void*)f_19213},
{"f_19219ChickenBridge.scm",(void*)f_19219},
{"f_19241ChickenBridge.scm",(void*)f_19241},
{"f_19230ChickenBridge.scm",(void*)f_19230},
{"f_19060ChickenBridge.scm",(void*)f_19060},
{"f_19075ChickenBridge.scm",(void*)f_19075},
{"f_19088ChickenBridge.scm",(void*)f_19088},
{"f_19048ChickenBridge.scm",(void*)f_19048},
{"f_19036ChickenBridge.scm",(void*)f_19036},
{"f_19024ChickenBridge.scm",(void*)f_19024},
{"f_19018ChickenBridge.scm",(void*)f_19018},
{"f_19012ChickenBridge.scm",(void*)f_19012},
{"f_19000ChickenBridge.scm",(void*)f_19000},
{"f_18988ChickenBridge.scm",(void*)f_18988},
{"f_18976ChickenBridge.scm",(void*)f_18976},
{"f_18964ChickenBridge.scm",(void*)f_18964},
{"f_18958ChickenBridge.scm",(void*)f_18958},
{"f_18922ChickenBridge.scm",(void*)f_18922},
{"f_18916ChickenBridge.scm",(void*)f_18916},
{"f_18869ChickenBridge.scm",(void*)f_18869},
{"f_18873ChickenBridge.scm",(void*)f_18873},
{"f_18889ChickenBridge.scm",(void*)f_18889},
{"f_18898ChickenBridge.scm",(void*)f_18898},
{"f_18876ChickenBridge.scm",(void*)f_18876},
{"f_18860ChickenBridge.scm",(void*)f_18860},
{"f_18864ChickenBridge.scm",(void*)f_18864},
{"f_18707ChickenBridge.scm",(void*)f_18707},
{"f_18834ChickenBridge.scm",(void*)f_18834},
{"f_18847ChickenBridge.scm",(void*)f_18847},
{"f_18829ChickenBridge.scm",(void*)f_18829},
{"f_18710ChickenBridge.scm",(void*)f_18710},
{"f_18826ChickenBridge.scm",(void*)f_18826},
{"f_18810ChickenBridge.scm",(void*)f_18810},
{"f_18738ChickenBridge.scm",(void*)f_18738},
{"f_18746ChickenBridge.scm",(void*)f_18746},
{"f_18756ChickenBridge.scm",(void*)f_18756},
{"f_18759ChickenBridge.scm",(void*)f_18759},
{"f_18741ChickenBridge.scm",(void*)f_18741},
{"f_18536ChickenBridge.scm",(void*)f_18536},
{"f_18542ChickenBridge.scm",(void*)f_18542},
{"f_18545ChickenBridge.scm",(void*)f_18545},
{"f_16345ChickenBridge.scm",(void*)f_16345},
{"f_16358ChickenBridge.scm",(void*)f_16358},
{"f_16365ChickenBridge.scm",(void*)f_16365},
{"f_16372ChickenBridge.scm",(void*)f_16372},
{"f_16351ChickenBridge.scm",(void*)f_16351},
{"f_18549ChickenBridge.scm",(void*)f_18549},
{"f_18583ChickenBridge.scm",(void*)f_18583},
{"f_18676ChickenBridge.scm",(void*)f_18676},
{"f_18686ChickenBridge.scm",(void*)f_18686},
{"f_18589ChickenBridge.scm",(void*)f_18589},
{"f_18646ChickenBridge.scm",(void*)f_18646},
{"f_18656ChickenBridge.scm",(void*)f_18656},
{"f_18597ChickenBridge.scm",(void*)f_18597},
{"f_18611ChickenBridge.scm",(void*)f_18611},
{"f_18615ChickenBridge.scm",(void*)f_18615},
{"f_18619ChickenBridge.scm",(void*)f_18619},
{"f_18623ChickenBridge.scm",(void*)f_18623},
{"f_18630ChickenBridge.scm",(void*)f_18630},
{"f_18607ChickenBridge.scm",(void*)f_18607},
{"f_18600ChickenBridge.scm",(void*)f_18600},
{"f_18552ChickenBridge.scm",(void*)f_18552},
{"f_17472ChickenBridge.scm",(void*)f_17472},
{"f_17485ChickenBridge.scm",(void*)f_17485},
{"f_17535ChickenBridge.scm",(void*)f_17535},
{"f_17632ChickenBridge.scm",(void*)f_17632},
{"f_17700ChickenBridge.scm",(void*)f_17700},
{"f_17957ChickenBridge.scm",(void*)f_17957},
{"f_17707ChickenBridge.scm",(void*)f_17707},
{"f_17945ChickenBridge.scm",(void*)f_17945},
{"f_17896ChickenBridge.scm",(void*)f_17896},
{"f_17902ChickenBridge.scm",(void*)f_17902},
{"f_17926ChickenBridge.scm",(void*)f_17926},
{"f_17922ChickenBridge.scm",(void*)f_17922},
{"f_17910ChickenBridge.scm",(void*)f_17910},
{"f_17710ChickenBridge.scm",(void*)f_17710},
{"f_17872ChickenBridge.scm",(void*)f_17872},
{"f_17876ChickenBridge.scm",(void*)f_17876},
{"f_17713ChickenBridge.scm",(void*)f_17713},
{"f_17849ChickenBridge.scm",(void*)f_17849},
{"f_17853ChickenBridge.scm",(void*)f_17853},
{"f_17716ChickenBridge.scm",(void*)f_17716},
{"f_17826ChickenBridge.scm",(void*)f_17826},
{"f_17830ChickenBridge.scm",(void*)f_17830},
{"f_17719ChickenBridge.scm",(void*)f_17719},
{"f_17751ChickenBridge.scm",(void*)f_17751},
{"f_17769ChickenBridge.scm",(void*)f_17769},
{"f_17787ChickenBridge.scm",(void*)f_17787},
{"f_17805ChickenBridge.scm",(void*)f_17805},
{"f_17722ChickenBridge.scm",(void*)f_17722},
{"f_17726ChickenBridge.scm",(void*)f_17726},
{"f_17636ChickenBridge.scm",(void*)f_17636},
{"f_17640ChickenBridge.scm",(void*)f_17640},
{"f_17644ChickenBridge.scm",(void*)f_17644},
{"f_17539ChickenBridge.scm",(void*)f_17539},
{"f_17543ChickenBridge.scm",(void*)f_17543},
{"f_17547ChickenBridge.scm",(void*)f_17547},
{"f_17566ChickenBridge.scm",(void*)f_17566},
{"f_17570ChickenBridge.scm",(void*)f_17570},
{"f_17550ChickenBridge.scm",(void*)f_17550},
{"f_17554ChickenBridge.scm",(void*)f_17554},
{"f_17489ChickenBridge.scm",(void*)f_17489},
{"f_17493ChickenBridge.scm",(void*)f_17493},
{"f_17497ChickenBridge.scm",(void*)f_17497},
{"f_17479ChickenBridge.scm",(void*)f_17479},
{"f_17294ChickenBridge.scm",(void*)f_17294},
{"f_17306ChickenBridge.scm",(void*)f_17306},
{"f_17325ChickenBridge.scm",(void*)f_17325},
{"f_17343ChickenBridge.scm",(void*)f_17343},
{"f_17375ChickenBridge.scm",(void*)f_17375},
{"f_17378ChickenBridge.scm",(void*)f_17378},
{"f_17371ChickenBridge.scm",(void*)f_17371},
{"f_17357ChickenBridge.scm",(void*)f_17357},
{"f_17328ChickenBridge.scm",(void*)f_17328},
{"f_17273ChickenBridge.scm",(void*)f_17273},
{"f_17280ChickenBridge.scm",(void*)f_17280},
{"f_17283ChickenBridge.scm",(void*)f_17283},
{"f_17289ChickenBridge.scm",(void*)f_17289},
{"f_17208ChickenBridge.scm",(void*)f_17208},
{"f_17217ChickenBridge.scm",(void*)f_17217},
{"f_17240ChickenBridge.scm",(void*)f_17240},
{"f_17230ChickenBridge.scm",(void*)f_17230},
{"f_17164ChickenBridge.scm",(void*)f_17164},
{"f_17152ChickenBridge.scm",(void*)f_17152},
{"f_17050ChickenBridge.scm",(void*)f_17050},
{"f_17002ChickenBridge.scm",(void*)f_17002},
{"f_16383ChickenBridge.scm",(void*)f_16383},
{"f_16387ChickenBridge.scm",(void*)f_16387},
{"f_16390ChickenBridge.scm",(void*)f_16390},
{"f_16816ChickenBridge.scm",(void*)f_16816},
{"f_16812ChickenBridge.scm",(void*)f_16812},
{"f_16808ChickenBridge.scm",(void*)f_16808},
{"f_16393ChickenBridge.scm",(void*)f_16393},
{"f_16516ChickenBridge.scm",(void*)f_16516},
{"f_15749ChickenBridge.scm",(void*)f_15749},
{"f_16522ChickenBridge.scm",(void*)f_16522},
{"f_15765ChickenBridge.scm",(void*)f_15765},
{"f_16610ChickenBridge.scm",(void*)f_16610},
{"f_16680ChickenBridge.scm",(void*)f_16680},
{"f_15781ChickenBridge.scm",(void*)f_15781},
{"f_16683ChickenBridge.scm",(void*)f_16683},
{"f_15813ChickenBridge.scm",(void*)f_15813},
{"f_16761ChickenBridge.scm",(void*)f_16761},
{"f_16787ChickenBridge.scm",(void*)f_16787},
{"f_16781ChickenBridge.scm",(void*)f_16781},
{"f_16770ChickenBridge.scm",(void*)f_16770},
{"f_16712ChickenBridge.scm",(void*)f_16712},
{"f_16722ChickenBridge.scm",(void*)f_16722},
{"f_16748ChickenBridge.scm",(void*)f_16748},
{"f_16742ChickenBridge.scm",(void*)f_16742},
{"f_16725ChickenBridge.scm",(void*)f_16725},
{"f_16735ChickenBridge.scm",(void*)f_16735},
{"f_16728ChickenBridge.scm",(void*)f_16728},
{"f_16689ChickenBridge.scm",(void*)f_16689},
{"f_16698ChickenBridge.scm",(void*)f_16698},
{"f_16692ChickenBridge.scm",(void*)f_16692},
{"f_16616ChickenBridge.scm",(void*)f_16616},
{"f_16634ChickenBridge.scm",(void*)f_16634},
{"f_16667ChickenBridge.scm",(void*)f_16667},
{"f_16653ChickenBridge.scm",(void*)f_16653},
{"f_16661ChickenBridge.scm",(void*)f_16661},
{"f_16644ChickenBridge.scm",(void*)f_16644},
{"f_16619ChickenBridge.scm",(void*)f_16619},
{"f_16531ChickenBridge.scm",(void*)f_16531},
{"f_16553ChickenBridge.scm",(void*)f_16553},
{"f_16600ChickenBridge.scm",(void*)f_16600},
{"f_16586ChickenBridge.scm",(void*)f_16586},
{"f_16594ChickenBridge.scm",(void*)f_16594},
{"f_16566ChickenBridge.scm",(void*)f_16566},
{"f_16569ChickenBridge.scm",(void*)f_16569},
{"f_16534ChickenBridge.scm",(void*)f_16534},
{"f_16551ChickenBridge.scm",(void*)f_16551},
{"f_16537ChickenBridge.scm",(void*)f_16537},
{"f_16402ChickenBridge.scm",(void*)f_16402},
{"f_16408ChickenBridge.scm",(void*)f_16408},
{"f_16466ChickenBridge.scm",(void*)f_16466},
{"f_16469ChickenBridge.scm",(void*)f_16469},
{"f_16490ChickenBridge.scm",(void*)f_16490},
{"f_16501ChickenBridge.scm",(void*)f_16501},
{"f_16480ChickenBridge.scm",(void*)f_16480},
{"f_16414ChickenBridge.scm",(void*)f_16414},
{"f_16424ChickenBridge.scm",(void*)f_16424},
{"f_16460ChickenBridge.scm",(void*)f_16460},
{"f_16430ChickenBridge.scm",(void*)f_16430},
{"f_16445ChickenBridge.scm",(void*)f_16445},
{"f_16449ChickenBridge.scm",(void*)f_16449},
{"f_16453ChickenBridge.scm",(void*)f_16453},
{"f_16437ChickenBridge.scm",(void*)f_16437},
{"f_16279ChickenBridge.scm",(void*)f_16279},
{"f_16281ChickenBridge.scm",(void*)f_16281},
{"f_16329ChickenBridge.scm",(void*)f_16329},
{"f_16285ChickenBridge.scm",(void*)f_16285},
{"f_16288ChickenBridge.scm",(void*)f_16288},
{"f_16293ChickenBridge.scm",(void*)f_16293},
{"f_16314ChickenBridge.scm",(void*)f_16314},
{"f_16271ChickenBridge.scm",(void*)f_16271},
{"f_16273ChickenBridge.scm",(void*)f_16273},
{"f_16063ChickenBridge.scm",(void*)f_16063},
{"f_16080ChickenBridge.scm",(void*)f_16080},
{"f_16084ChickenBridge.scm",(void*)f_16084},
{"f_16030ChickenBridge.scm",(void*)f_16030},
{"f_16037ChickenBridge.scm",(void*)f_16037},
{"f_15981ChickenBridge.scm",(void*)f_15981},
{"f_15988ChickenBridge.scm",(void*)f_15988},
{"f_16046ChickenBridge.scm",(void*)f_16046},
{"f_16269ChickenBridge.scm",(void*)f_16269},
{"f_16246ChickenBridge.scm",(void*)f_16246},
{"f_16262ChickenBridge.scm",(void*)f_16262},
{"f_16108ChickenBridge.scm",(void*)f_16108},
{"f_16111ChickenBridge.scm",(void*)f_16111},
{"f_16135ChickenBridge.scm",(void*)f_16135},
{"f_16192ChickenBridge.scm",(void*)f_16192},
{"f_16198ChickenBridge.scm",(void*)f_16198},
{"f_16207ChickenBridge.scm",(void*)f_16207},
{"f_16216ChickenBridge.scm",(void*)f_16216},
{"f_16225ChickenBridge.scm",(void*)f_16225},
{"f_16234ChickenBridge.scm",(void*)f_16234},
{"f_16186ChickenBridge.scm",(void*)f_16186},
{"f_16141ChickenBridge.scm",(void*)f_16141},
{"f_16147ChickenBridge.scm",(void*)f_16147},
{"f_16153ChickenBridge.scm",(void*)f_16153},
{"f_16159ChickenBridge.scm",(void*)f_16159},
{"f_16165ChickenBridge.scm",(void*)f_16165},
{"f_16171ChickenBridge.scm",(void*)f_16171},
{"f_16012ChickenBridge.scm",(void*)f_16012},
{"f_16019ChickenBridge.scm",(void*)f_16019},
{"f_16002ChickenBridge.scm",(void*)f_16002},
{"f_15990ChickenBridge.scm",(void*)f_15990},
{"f_15958ChickenBridge.scm",(void*)f_15958},
{"f_15965ChickenBridge.scm",(void*)f_15965},
{"f_15972ChickenBridge.scm",(void*)f_15972},
{"f_15942ChickenBridge.scm",(void*)f_15942},
{"f_15949ChickenBridge.scm",(void*)f_15949},
{"f_15956ChickenBridge.scm",(void*)f_15956},
{"f_15930ChickenBridge.scm",(void*)f_15930},
{"f_15912ChickenBridge.scm",(void*)f_15912},
{"f_15894ChickenBridge.scm",(void*)f_15894},
{"f_15879ChickenBridge.scm",(void*)f_15879},
{"f_15873ChickenBridge.scm",(void*)f_15873},
{"f_15861ChickenBridge.scm",(void*)f_15861},
{"f_15843ChickenBridge.scm",(void*)f_15843},
{"f_15822ChickenBridge.scm",(void*)f_15822},
{"f_15790ChickenBridge.scm",(void*)f_15790},
{"f_15797ChickenBridge.scm",(void*)f_15797},
{"f_15732ChickenBridge.scm",(void*)f_15732},
{"f_15740ChickenBridge.scm",(void*)f_15740},
{"f_15722ChickenBridge.scm",(void*)f_15722},
{"f_15730ChickenBridge.scm",(void*)f_15730},
{"f_15716ChickenBridge.scm",(void*)f_15716},
{"f_15704ChickenBridge.scm",(void*)f_15704},
{"f_15701ChickenBridge.scm",(void*)f_15701},
{"f_15680ChickenBridge.scm",(void*)f_15680},
{"f_15593ChickenBridge.scm",(void*)f_15593},
{"f_15572ChickenBridge.scm",(void*)f_15572},
{"f_15562ChickenBridge.scm",(void*)f_15562},
{"f_15550ChickenBridge.scm",(void*)f_15550},
{"f_15521ChickenBridge.scm",(void*)f_15521},
{"f_15509ChickenBridge.scm",(void*)f_15509},
{"f_15491ChickenBridge.scm",(void*)f_15491},
{"f_15473ChickenBridge.scm",(void*)f_15473},
{"f_15452ChickenBridge.scm",(void*)f_15452},
{"f_15358ChickenBridge.scm",(void*)f_15358},
{"f_15362ChickenBridge.scm",(void*)f_15362},
{"f_15391ChickenBridge.scm",(void*)f_15391},
{"f_15396ChickenBridge.scm",(void*)f_15396},
{"f_15421ChickenBridge.scm",(void*)f_15421},
{"f_15406ChickenBridge.scm",(void*)f_15406},
{"f_14840ChickenBridge.scm",(void*)f_14840},
{"f_15111ChickenBridge.scm",(void*)f_15111},
{"f_15115ChickenBridge.scm",(void*)f_15115},
{"f_15120ChickenBridge.scm",(void*)f_15120},
{"f_15326ChickenBridge.scm",(void*)f_15326},
{"f_15341ChickenBridge.scm",(void*)f_15341},
{"f_15333ChickenBridge.scm",(void*)f_15333},
{"f_15297ChickenBridge.scm",(void*)f_15297},
{"f_15301ChickenBridge.scm",(void*)f_15301},
{"f_15262ChickenBridge.scm",(void*)f_15262},
{"f_15266ChickenBridge.scm",(void*)f_15266},
{"f_15124ChickenBridge.scm",(void*)f_15124},
{"f_15226ChickenBridge.scm",(void*)f_15226},
{"f_15241ChickenBridge.scm",(void*)f_15241},
{"f_15233ChickenBridge.scm",(void*)f_15233},
{"f_15197ChickenBridge.scm",(void*)f_15197},
{"f_15201ChickenBridge.scm",(void*)f_15201},
{"f_15162ChickenBridge.scm",(void*)f_15162},
{"f_15166ChickenBridge.scm",(void*)f_15166},
{"f_15127ChickenBridge.scm",(void*)f_15127},
{"f_15130ChickenBridge.scm",(void*)f_15130},
{"f_15133ChickenBridge.scm",(void*)f_15133},
{"f_15102ChickenBridge.scm",(void*)f_15102},
{"f_14844ChickenBridge.scm",(void*)f_14844},
{"f_15071ChickenBridge.scm",(void*)f_15071},
{"f_15086ChickenBridge.scm",(void*)f_15086},
{"f_15078ChickenBridge.scm",(void*)f_15078},
{"f_15042ChickenBridge.scm",(void*)f_15042},
{"f_15046ChickenBridge.scm",(void*)f_15046},
{"f_15007ChickenBridge.scm",(void*)f_15007},
{"f_15011ChickenBridge.scm",(void*)f_15011},
{"f_14847ChickenBridge.scm",(void*)f_14847},
{"f_14971ChickenBridge.scm",(void*)f_14971},
{"f_14986ChickenBridge.scm",(void*)f_14986},
{"f_14978ChickenBridge.scm",(void*)f_14978},
{"f_14942ChickenBridge.scm",(void*)f_14942},
{"f_14946ChickenBridge.scm",(void*)f_14946},
{"f_14907ChickenBridge.scm",(void*)f_14907},
{"f_14911ChickenBridge.scm",(void*)f_14911},
{"f_14850ChickenBridge.scm",(void*)f_14850},
{"f_14853ChickenBridge.scm",(void*)f_14853},
{"f_14856ChickenBridge.scm",(void*)f_14856},
{"f_14868ChickenBridge.scm",(void*)f_14868},
{"f_14886ChickenBridge.scm",(void*)f_14886},
{"f_14874ChickenBridge.scm",(void*)f_14874},
{"f_14862ChickenBridge.scm",(void*)f_14862},
{"f_14777ChickenBridge.scm",(void*)f_14777},
{"f_14437ChickenBridge.scm",(void*)f_14437},
{"f_14619ChickenBridge.scm",(void*)f_14619},
{"f_14623ChickenBridge.scm",(void*)f_14623},
{"f_14625ChickenBridge.scm",(void*)f_14625},
{"f_14550ChickenBridge.scm",(void*)f_14550},
{"f_14560ChickenBridge.scm",(void*)f_14560},
{"f_14567ChickenBridge.scm",(void*)f_14567},
{"f_14635ChickenBridge.scm",(void*)f_14635},
{"f_14638ChickenBridge.scm",(void*)f_14638},
{"f_14642ChickenBridge.scm",(void*)f_14642},
{"f_14662ChickenBridge.scm",(void*)f_14662},
{"f_14678ChickenBridge.scm",(void*)f_14678},
{"f_14645ChickenBridge.scm",(void*)f_14645},
{"f_14440ChickenBridge.scm",(void*)f_14440},
{"f_14452ChickenBridge.scm",(void*)f_14452},
{"f_14488ChickenBridge.scm",(void*)f_14488},
{"f_14508ChickenBridge.scm",(void*)f_14508},
{"f_14513ChickenBridge.scm",(void*)f_14513},
{"f_13950ChickenBridge.scm",(void*)f_13950},
{"f_13877ChickenBridge.scm",(void*)f_13877},
{"f_13722ChickenBridge.scm",(void*)f_13722},
{"f_13728ChickenBridge.scm",(void*)f_13728},
{"f_13813ChickenBridge.scm",(void*)f_13813},
{"f_13740ChickenBridge.scm",(void*)f_13740},
{"f_13756ChickenBridge.scm",(void*)f_13756},
{"f_13760ChickenBridge.scm",(void*)f_13760},
{"f_13763ChickenBridge.scm",(void*)f_13763},
{"f_13743ChickenBridge.scm",(void*)f_13743},
{"f_13754ChickenBridge.scm",(void*)f_13754},
{"f_13894ChickenBridge.scm",(void*)f_13894},
{"f_14431ChickenBridge.scm",(void*)f_14431},
{"f_13954ChickenBridge.scm",(void*)f_13954},
{"f_14400ChickenBridge.scm",(void*)f_14400},
{"f_14415ChickenBridge.scm",(void*)f_14415},
{"f_14407ChickenBridge.scm",(void*)f_14407},
{"f_14371ChickenBridge.scm",(void*)f_14371},
{"f_14375ChickenBridge.scm",(void*)f_14375},
{"f_14336ChickenBridge.scm",(void*)f_14336},
{"f_14340ChickenBridge.scm",(void*)f_14340},
{"f_14301ChickenBridge.scm",(void*)f_14301},
{"f_14305ChickenBridge.scm",(void*)f_14305},
{"f_13957ChickenBridge.scm",(void*)f_13957},
{"f_14265ChickenBridge.scm",(void*)f_14265},
{"f_14280ChickenBridge.scm",(void*)f_14280},
{"f_14272ChickenBridge.scm",(void*)f_14272},
{"f_14236ChickenBridge.scm",(void*)f_14236},
{"f_14240ChickenBridge.scm",(void*)f_14240},
{"f_14201ChickenBridge.scm",(void*)f_14201},
{"f_14205ChickenBridge.scm",(void*)f_14205},
{"f_14166ChickenBridge.scm",(void*)f_14166},
{"f_14170ChickenBridge.scm",(void*)f_14170},
{"f_13960ChickenBridge.scm",(void*)f_13960},
{"f_14130ChickenBridge.scm",(void*)f_14130},
{"f_14145ChickenBridge.scm",(void*)f_14145},
{"f_14137ChickenBridge.scm",(void*)f_14137},
{"f_14101ChickenBridge.scm",(void*)f_14101},
{"f_14105ChickenBridge.scm",(void*)f_14105},
{"f_14066ChickenBridge.scm",(void*)f_14066},
{"f_14070ChickenBridge.scm",(void*)f_14070},
{"f_14031ChickenBridge.scm",(void*)f_14031},
{"f_14035ChickenBridge.scm",(void*)f_14035},
{"f_13963ChickenBridge.scm",(void*)f_13963},
{"f_13966ChickenBridge.scm",(void*)f_13966},
{"f_13969ChickenBridge.scm",(void*)f_13969},
{"f_14002ChickenBridge.scm",(void*)f_14002},
{"f_14010ChickenBridge.scm",(void*)f_14010},
{"f_13975ChickenBridge.scm",(void*)f_13975},
{"f_13988ChickenBridge.scm",(void*)f_13988},
{"f_13978ChickenBridge.scm",(void*)f_13978},
{"f_13981ChickenBridge.scm",(void*)f_13981},
{"f_13517ChickenBridge.scm",(void*)f_13517},
{"f_13521ChickenBridge.scm",(void*)f_13521},
{"f_13524ChickenBridge.scm",(void*)f_13524},
{"f_13527ChickenBridge.scm",(void*)f_13527},
{"f_13696ChickenBridge.scm",(void*)f_13696},
{"f_13709ChickenBridge.scm",(void*)f_13709},
{"f_13713ChickenBridge.scm",(void*)f_13713},
{"f_13533ChickenBridge.scm",(void*)f_13533},
{"f_13689ChickenBridge.scm",(void*)f_13689},
{"f_13670ChickenBridge.scm",(void*)f_13670},
{"f_13677ChickenBridge.scm",(void*)f_13677},
{"f_13681ChickenBridge.scm",(void*)f_13681},
{"f_13539ChickenBridge.scm",(void*)f_13539},
{"f_13545ChickenBridge.scm",(void*)f_13545},
{"f_13629ChickenBridge.scm",(void*)f_13629},
{"f_13631ChickenBridge.scm",(void*)f_13631},
{"f_13653ChickenBridge.scm",(void*)f_13653},
{"f_13660ChickenBridge.scm",(void*)f_13660},
{"f_13664ChickenBridge.scm",(void*)f_13664},
{"f_13650ChickenBridge.scm",(void*)f_13650},
{"f_13646ChickenBridge.scm",(void*)f_13646},
{"f_13587ChickenBridge.scm",(void*)f_13587},
{"f_13604ChickenBridge.scm",(void*)f_13604},
{"f_13614ChickenBridge.scm",(void*)f_13614},
{"f_13590ChickenBridge.scm",(void*)f_13590},
{"f_13549ChickenBridge.scm",(void*)f_13549},
{"f_13557ChickenBridge.scm",(void*)f_13557},
{"f_13559ChickenBridge.scm",(void*)f_13559},
{"f_13580ChickenBridge.scm",(void*)f_13580},
{"f_13405ChickenBridge.scm",(void*)f_13405},
{"f_13515ChickenBridge.scm",(void*)f_13515},
{"f_13474ChickenBridge.scm",(void*)f_13474},
{"f_13507ChickenBridge.scm",(void*)f_13507},
{"f_13503ChickenBridge.scm",(void*)f_13503},
{"f_13488ChickenBridge.scm",(void*)f_13488},
{"f_13412ChickenBridge.scm",(void*)f_13412},
{"f_13420ChickenBridge.scm",(void*)f_13420},
{"f_13465ChickenBridge.scm",(void*)f_13465},
{"f_13453ChickenBridge.scm",(void*)f_13453},
{"f_13437ChickenBridge.scm",(void*)f_13437},
{"f_12638ChickenBridge.scm",(void*)f_12638},
{"f_12955ChickenBridge.scm",(void*)f_12955},
{"f_12962ChickenBridge.scm",(void*)f_12962},
{"f_13367ChickenBridge.scm",(void*)f_13367},
{"f_13382ChickenBridge.scm",(void*)f_13382},
{"f_13374ChickenBridge.scm",(void*)f_13374},
{"f_13338ChickenBridge.scm",(void*)f_13338},
{"f_13342ChickenBridge.scm",(void*)f_13342},
{"f_13303ChickenBridge.scm",(void*)f_13303},
{"f_13307ChickenBridge.scm",(void*)f_13307},
{"f_13268ChickenBridge.scm",(void*)f_13268},
{"f_13272ChickenBridge.scm",(void*)f_13272},
{"f_12965ChickenBridge.scm",(void*)f_12965},
{"f_13232ChickenBridge.scm",(void*)f_13232},
{"f_13247ChickenBridge.scm",(void*)f_13247},
{"f_13239ChickenBridge.scm",(void*)f_13239},
{"f_13203ChickenBridge.scm",(void*)f_13203},
{"f_13207ChickenBridge.scm",(void*)f_13207},
{"f_13168ChickenBridge.scm",(void*)f_13168},
{"f_13172ChickenBridge.scm",(void*)f_13172},
{"f_13133ChickenBridge.scm",(void*)f_13133},
{"f_13137ChickenBridge.scm",(void*)f_13137},
{"f_12968ChickenBridge.scm",(void*)f_12968},
{"f_13097ChickenBridge.scm",(void*)f_13097},
{"f_13112ChickenBridge.scm",(void*)f_13112},
{"f_13104ChickenBridge.scm",(void*)f_13104},
{"f_13068ChickenBridge.scm",(void*)f_13068},
{"f_13072ChickenBridge.scm",(void*)f_13072},
{"f_13033ChickenBridge.scm",(void*)f_13033},
{"f_13037ChickenBridge.scm",(void*)f_13037},
{"f_12998ChickenBridge.scm",(void*)f_12998},
{"f_13002ChickenBridge.scm",(void*)f_13002},
{"f_12971ChickenBridge.scm",(void*)f_12971},
{"f_12974ChickenBridge.scm",(void*)f_12974},
{"f_12642ChickenBridge.scm",(void*)f_12642},
{"f_12645ChickenBridge.scm",(void*)f_12645},
{"f_12919ChickenBridge.scm",(void*)f_12919},
{"f_12923ChickenBridge.scm",(void*)f_12923},
{"f_12926ChickenBridge.scm",(void*)f_12926},
{"f_12929ChickenBridge.scm",(void*)f_12929},
{"f_12932ChickenBridge.scm",(void*)f_12932},
{"f_12945ChickenBridge.scm",(void*)f_12945},
{"f_12935ChickenBridge.scm",(void*)f_12935},
{"f_12651ChickenBridge.scm",(void*)f_12651},
{"f_12658ChickenBridge.scm",(void*)f_12658},
{"f_12889ChickenBridge.scm",(void*)f_12889},
{"f_12904ChickenBridge.scm",(void*)f_12904},
{"f_12896ChickenBridge.scm",(void*)f_12896},
{"f_12860ChickenBridge.scm",(void*)f_12860},
{"f_12864ChickenBridge.scm",(void*)f_12864},
{"f_12825ChickenBridge.scm",(void*)f_12825},
{"f_12829ChickenBridge.scm",(void*)f_12829},
{"f_12661ChickenBridge.scm",(void*)f_12661},
{"f_12789ChickenBridge.scm",(void*)f_12789},
{"f_12804ChickenBridge.scm",(void*)f_12804},
{"f_12796ChickenBridge.scm",(void*)f_12796},
{"f_12760ChickenBridge.scm",(void*)f_12760},
{"f_12764ChickenBridge.scm",(void*)f_12764},
{"f_12725ChickenBridge.scm",(void*)f_12725},
{"f_12729ChickenBridge.scm",(void*)f_12729},
{"f_12664ChickenBridge.scm",(void*)f_12664},
{"f_12667ChickenBridge.scm",(void*)f_12667},
{"f_12682ChickenBridge.scm",(void*)f_12682},
{"f_12704ChickenBridge.scm",(void*)f_12704},
{"f_12688ChickenBridge.scm",(void*)f_12688},
{"f_12696ChickenBridge.scm",(void*)f_12696},
{"f_12670ChickenBridge.scm",(void*)f_12670},
{"f_12673ChickenBridge.scm",(void*)f_12673},
{"f_12555ChickenBridge.scm",(void*)f_12555},
{"f_12546ChickenBridge.scm",(void*)f_12546},
{"f_12537ChickenBridge.scm",(void*)f_12537},
{"f_12519ChickenBridge.scm",(void*)f_12519},
{"f_12501ChickenBridge.scm",(void*)f_12501},
{"f_12483ChickenBridge.scm",(void*)f_12483},
{"f_12474ChickenBridge.scm",(void*)f_12474},
{"f_12465ChickenBridge.scm",(void*)f_12465},
{"f_12243ChickenBridge.scm",(void*)f_12243},
{"f_12293ChickenBridge.scm",(void*)f_12293},
{"f_12438ChickenBridge.scm",(void*)f_12438},
{"f_12319ChickenBridge.scm",(void*)f_12319},
{"f_12434ChickenBridge.scm",(void*)f_12434},
{"f_12419ChickenBridge.scm",(void*)f_12419},
{"f_12400ChickenBridge.scm",(void*)f_12400},
{"f_12373ChickenBridge.scm",(void*)f_12373},
{"f_12326ChickenBridge.scm",(void*)f_12326},
{"f_12296ChickenBridge.scm",(void*)f_12296},
{"f_12246ChickenBridge.scm",(void*)f_12246},
{"f_12252ChickenBridge.scm",(void*)f_12252},
{"f_12268ChickenBridge.scm",(void*)f_12268},
{"f_12271ChickenBridge.scm",(void*)f_12271},
{"f_11769ChickenBridge.scm",(void*)f_11769},
{"f_12233ChickenBridge.scm",(void*)f_12233},
{"f_11773ChickenBridge.scm",(void*)f_11773},
{"f_12205ChickenBridge.scm",(void*)f_12205},
{"f_12220ChickenBridge.scm",(void*)f_12220},
{"f_12212ChickenBridge.scm",(void*)f_12212},
{"f_12176ChickenBridge.scm",(void*)f_12176},
{"f_12180ChickenBridge.scm",(void*)f_12180},
{"f_12141ChickenBridge.scm",(void*)f_12141},
{"f_12145ChickenBridge.scm",(void*)f_12145},
{"f_12106ChickenBridge.scm",(void*)f_12106},
{"f_12110ChickenBridge.scm",(void*)f_12110},
{"f_11776ChickenBridge.scm",(void*)f_11776},
{"f_12070ChickenBridge.scm",(void*)f_12070},
{"f_12085ChickenBridge.scm",(void*)f_12085},
{"f_12077ChickenBridge.scm",(void*)f_12077},
{"f_12041ChickenBridge.scm",(void*)f_12041},
{"f_12045ChickenBridge.scm",(void*)f_12045},
{"f_12006ChickenBridge.scm",(void*)f_12006},
{"f_12010ChickenBridge.scm",(void*)f_12010},
{"f_11971ChickenBridge.scm",(void*)f_11971},
{"f_11975ChickenBridge.scm",(void*)f_11975},
{"f_11779ChickenBridge.scm",(void*)f_11779},
{"f_11935ChickenBridge.scm",(void*)f_11935},
{"f_11950ChickenBridge.scm",(void*)f_11950},
{"f_11942ChickenBridge.scm",(void*)f_11942},
{"f_11906ChickenBridge.scm",(void*)f_11906},
{"f_11910ChickenBridge.scm",(void*)f_11910},
{"f_11871ChickenBridge.scm",(void*)f_11871},
{"f_11875ChickenBridge.scm",(void*)f_11875},
{"f_11836ChickenBridge.scm",(void*)f_11836},
{"f_11840ChickenBridge.scm",(void*)f_11840},
{"f_11782ChickenBridge.scm",(void*)f_11782},
{"f_11785ChickenBridge.scm",(void*)f_11785},
{"f_11788ChickenBridge.scm",(void*)f_11788},
{"f_11803ChickenBridge.scm",(void*)f_11803},
{"f_11815ChickenBridge.scm",(void*)f_11815},
{"f_11794ChickenBridge.scm",(void*)f_11794},
{"f_11797ChickenBridge.scm",(void*)f_11797},
{"f_11693ChickenBridge.scm",(void*)f_11693},
{"f_11697ChickenBridge.scm",(void*)f_11697},
{"f_11716ChickenBridge.scm",(void*)f_11716},
{"f_11726ChickenBridge.scm",(void*)f_11726},
{"f_11728ChickenBridge.scm",(void*)f_11728},
{"f_11745ChickenBridge.scm",(void*)f_11745},
{"f_11748ChickenBridge.scm",(void*)f_11748},
{"f_11759ChickenBridge.scm",(void*)f_11759},
{"f_11700ChickenBridge.scm",(void*)f_11700},
{"f_11430ChickenBridge.scm",(void*)f_11430},
{"f_11683ChickenBridge.scm",(void*)f_11683},
{"f_11434ChickenBridge.scm",(void*)f_11434},
{"f_11655ChickenBridge.scm",(void*)f_11655},
{"f_11670ChickenBridge.scm",(void*)f_11670},
{"f_11662ChickenBridge.scm",(void*)f_11662},
{"f_11626ChickenBridge.scm",(void*)f_11626},
{"f_11630ChickenBridge.scm",(void*)f_11630},
{"f_11591ChickenBridge.scm",(void*)f_11591},
{"f_11595ChickenBridge.scm",(void*)f_11595},
{"f_11437ChickenBridge.scm",(void*)f_11437},
{"f_11555ChickenBridge.scm",(void*)f_11555},
{"f_11570ChickenBridge.scm",(void*)f_11570},
{"f_11562ChickenBridge.scm",(void*)f_11562},
{"f_11526ChickenBridge.scm",(void*)f_11526},
{"f_11530ChickenBridge.scm",(void*)f_11530},
{"f_11491ChickenBridge.scm",(void*)f_11491},
{"f_11495ChickenBridge.scm",(void*)f_11495},
{"f_11440ChickenBridge.scm",(void*)f_11440},
{"f_11443ChickenBridge.scm",(void*)f_11443},
{"f_11446ChickenBridge.scm",(void*)f_11446},
{"f_11458ChickenBridge.scm",(void*)f_11458},
{"f_11470ChickenBridge.scm",(void*)f_11470},
{"f_11452ChickenBridge.scm",(void*)f_11452},
{"f_11394ChickenBridge.scm",(void*)f_11394},
{"f_11398ChickenBridge.scm",(void*)f_11398},
{"f_11420ChickenBridge.scm",(void*)f_11420},
{"f_11414ChickenBridge.scm",(void*)f_11414},
{"f_11407ChickenBridge.scm",(void*)f_11407},
{"f_11147ChickenBridge.scm",(void*)f_11147},
{"f_11151ChickenBridge.scm",(void*)f_11151},
{"f_11364ChickenBridge.scm",(void*)f_11364},
{"f_11379ChickenBridge.scm",(void*)f_11379},
{"f_11371ChickenBridge.scm",(void*)f_11371},
{"f_11335ChickenBridge.scm",(void*)f_11335},
{"f_11339ChickenBridge.scm",(void*)f_11339},
{"f_11300ChickenBridge.scm",(void*)f_11300},
{"f_11304ChickenBridge.scm",(void*)f_11304},
{"f_11154ChickenBridge.scm",(void*)f_11154},
{"f_11264ChickenBridge.scm",(void*)f_11264},
{"f_11279ChickenBridge.scm",(void*)f_11279},
{"f_11271ChickenBridge.scm",(void*)f_11271},
{"f_11235ChickenBridge.scm",(void*)f_11235},
{"f_11239ChickenBridge.scm",(void*)f_11239},
{"f_11200ChickenBridge.scm",(void*)f_11200},
{"f_11204ChickenBridge.scm",(void*)f_11204},
{"f_11157ChickenBridge.scm",(void*)f_11157},
{"f_11160ChickenBridge.scm",(void*)f_11160},
{"f_11163ChickenBridge.scm",(void*)f_11163},
{"f_11171ChickenBridge.scm",(void*)f_11171},
{"f_11179ChickenBridge.scm",(void*)f_11179},
{"f_11169ChickenBridge.scm",(void*)f_11169},
{"f_10932ChickenBridge.scm",(void*)f_10932},
{"f_10936ChickenBridge.scm",(void*)f_10936},
{"f_11145ChickenBridge.scm",(void*)f_11145},
{"f_11098ChickenBridge.scm",(void*)f_11098},
{"f_11110ChickenBridge.scm",(void*)f_11110},
{"f_10966ChickenBridge.scm",(void*)f_10966},
{"f_10969ChickenBridge.scm",(void*)f_10969},
{"f_10975ChickenBridge.scm",(void*)f_10975},
{"f_10978ChickenBridge.scm",(void*)f_10978},
{"f_11066ChickenBridge.scm",(void*)f_11066},
{"f_10981ChickenBridge.scm",(void*)f_10981},
{"f_11060ChickenBridge.scm",(void*)f_11060},
{"f_10987ChickenBridge.scm",(void*)f_10987},
{"f_10990ChickenBridge.scm",(void*)f_10990},
{"f_10942ChickenBridge.scm",(void*)f_10942},
{"f_10945ChickenBridge.scm",(void*)f_10945},
{"f_10952ChickenBridge.scm",(void*)f_10952},
{"f_10462ChickenBridge.scm",(void*)f_10462},
{"f_10466ChickenBridge.scm",(void*)f_10466},
{"f_10902ChickenBridge.scm",(void*)f_10902},
{"f_10917ChickenBridge.scm",(void*)f_10917},
{"f_10909ChickenBridge.scm",(void*)f_10909},
{"f_10873ChickenBridge.scm",(void*)f_10873},
{"f_10877ChickenBridge.scm",(void*)f_10877},
{"f_10838ChickenBridge.scm",(void*)f_10838},
{"f_10842ChickenBridge.scm",(void*)f_10842},
{"f_10803ChickenBridge.scm",(void*)f_10803},
{"f_10807ChickenBridge.scm",(void*)f_10807},
{"f_10469ChickenBridge.scm",(void*)f_10469},
{"f_10767ChickenBridge.scm",(void*)f_10767},
{"f_10782ChickenBridge.scm",(void*)f_10782},
{"f_10774ChickenBridge.scm",(void*)f_10774},
{"f_10738ChickenBridge.scm",(void*)f_10738},
{"f_10742ChickenBridge.scm",(void*)f_10742},
{"f_10703ChickenBridge.scm",(void*)f_10703},
{"f_10707ChickenBridge.scm",(void*)f_10707},
{"f_10668ChickenBridge.scm",(void*)f_10668},
{"f_10672ChickenBridge.scm",(void*)f_10672},
{"f_10472ChickenBridge.scm",(void*)f_10472},
{"f_10632ChickenBridge.scm",(void*)f_10632},
{"f_10647ChickenBridge.scm",(void*)f_10647},
{"f_10639ChickenBridge.scm",(void*)f_10639},
{"f_10603ChickenBridge.scm",(void*)f_10603},
{"f_10607ChickenBridge.scm",(void*)f_10607},
{"f_10568ChickenBridge.scm",(void*)f_10568},
{"f_10572ChickenBridge.scm",(void*)f_10572},
{"f_10533ChickenBridge.scm",(void*)f_10533},
{"f_10537ChickenBridge.scm",(void*)f_10537},
{"f_10475ChickenBridge.scm",(void*)f_10475},
{"f_10478ChickenBridge.scm",(void*)f_10478},
{"f_10481ChickenBridge.scm",(void*)f_10481},
{"f_10504ChickenBridge.scm",(void*)f_10504},
{"f_10512ChickenBridge.scm",(void*)f_10512},
{"f_10487ChickenBridge.scm",(void*)f_10487},
{"f_10490ChickenBridge.scm",(void*)f_10490},
{"f_10382ChickenBridge.scm",(void*)f_10382},
{"f_10373ChickenBridge.scm",(void*)f_10373},
{"f_10301ChickenBridge.scm",(void*)f_10301},
{"f_10305ChickenBridge.scm",(void*)f_10305},
{"f_10308ChickenBridge.scm",(void*)f_10308},
{"f_10046ChickenBridge.scm",(void*)f_10046},
{"f_10050ChickenBridge.scm",(void*)f_10050},
{"f_10271ChickenBridge.scm",(void*)f_10271},
{"f_10286ChickenBridge.scm",(void*)f_10286},
{"f_10278ChickenBridge.scm",(void*)f_10278},
{"f_10242ChickenBridge.scm",(void*)f_10242},
{"f_10246ChickenBridge.scm",(void*)f_10246},
{"f_10207ChickenBridge.scm",(void*)f_10207},
{"f_10211ChickenBridge.scm",(void*)f_10211},
{"f_10053ChickenBridge.scm",(void*)f_10053},
{"f_10171ChickenBridge.scm",(void*)f_10171},
{"f_10186ChickenBridge.scm",(void*)f_10186},
{"f_10178ChickenBridge.scm",(void*)f_10178},
{"f_10142ChickenBridge.scm",(void*)f_10142},
{"f_10146ChickenBridge.scm",(void*)f_10146},
{"f_10107ChickenBridge.scm",(void*)f_10107},
{"f_10111ChickenBridge.scm",(void*)f_10111},
{"f_10056ChickenBridge.scm",(void*)f_10056},
{"f_10059ChickenBridge.scm",(void*)f_10059},
{"f_10062ChickenBridge.scm",(void*)f_10062},
{"f_10074ChickenBridge.scm",(void*)f_10074},
{"f_10086ChickenBridge.scm",(void*)f_10086},
{"f_10068ChickenBridge.scm",(void*)f_10068},
{"f_9931ChickenBridge.scm",(void*)f_9931},
{"f_10044ChickenBridge.scm",(void*)f_10044},
{"f_9941ChickenBridge.scm",(void*)f_9941},
{"f_10029ChickenBridge.scm",(void*)f_10029},
{"f_10040ChickenBridge.scm",(void*)f_10040},
{"f_10036ChickenBridge.scm",(void*)f_10036},
{"f_9944ChickenBridge.scm",(void*)f_9944},
{"f_10026ChickenBridge.scm",(void*)f_10026},
{"f_9952ChickenBridge.scm",(void*)f_9952},
{"f_10016ChickenBridge.scm",(void*)f_10016},
{"f_9961ChickenBridge.scm",(void*)f_9961},
{"f_9980ChickenBridge.scm",(void*)f_9980},
{"f_10009ChickenBridge.scm",(void*)f_10009},
{"f_9990ChickenBridge.scm",(void*)f_9990},
{"f_10005ChickenBridge.scm",(void*)f_10005},
{"f_9993ChickenBridge.scm",(void*)f_9993},
{"f_9964ChickenBridge.scm",(void*)f_9964},
{"f_9974ChickenBridge.scm",(void*)f_9974},
{"f_9955ChickenBridge.scm",(void*)f_9955},
{"f_9958ChickenBridge.scm",(void*)f_9958},
{"f_9885ChickenBridge.scm",(void*)f_9885},
{"f_9876ChickenBridge.scm",(void*)f_9876},
{"f_9575ChickenBridge.scm",(void*)f_9575},
{"f_9582ChickenBridge.scm",(void*)f_9582},
{"f_9871ChickenBridge.scm",(void*)f_9871},
{"f_9585ChickenBridge.scm",(void*)f_9585},
{"f_9856ChickenBridge.scm",(void*)f_9856},
{"f_9848ChickenBridge.scm",(void*)f_9848},
{"f_9840ChickenBridge.scm",(void*)f_9840},
{"f_9843ChickenBridge.scm",(void*)f_9843},
{"f_9811ChickenBridge.scm",(void*)f_9811},
{"f_9834ChickenBridge.scm",(void*)f_9834},
{"f_9817ChickenBridge.scm",(void*)f_9817},
{"f_9821ChickenBridge.scm",(void*)f_9821},
{"f_9588ChickenBridge.scm",(void*)f_9588},
{"f_9594ChickenBridge.scm",(void*)f_9594},
{"f_9686ChickenBridge.scm",(void*)f_9686},
{"f_9798ChickenBridge.scm",(void*)f_9798},
{"f_9805ChickenBridge.scm",(void*)f_9805},
{"f_9709ChickenBridge.scm",(void*)f_9709},
{"f_9711ChickenBridge.scm",(void*)f_9711},
{"f_9760ChickenBridge.scm",(void*)f_9760},
{"f_9795ChickenBridge.scm",(void*)f_9795},
{"f_9784ChickenBridge.scm",(void*)f_9784},
{"f_9929ChickenBridge.scm",(void*)f_9929},
{"f_9904ChickenBridge.scm",(void*)f_9904},
{"f_9925ChickenBridge.scm",(void*)f_9925},
{"f_9921ChickenBridge.scm",(void*)f_9921},
{"f_9913ChickenBridge.scm",(void*)f_9913},
{"f_9777ChickenBridge.scm",(void*)f_9777},
{"f_9770ChickenBridge.scm",(void*)f_9770},
{"f_9718ChickenBridge.scm",(void*)f_9718},
{"f_9758ChickenBridge.scm",(void*)f_9758},
{"f_9722ChickenBridge.scm",(void*)f_9722},
{"f_9754ChickenBridge.scm",(void*)f_9754},
{"f_9741ChickenBridge.scm",(void*)f_9741},
{"f_9749ChickenBridge.scm",(void*)f_9749},
{"f_9745ChickenBridge.scm",(void*)f_9745},
{"f_9725ChickenBridge.scm",(void*)f_9725},
{"f_9728ChickenBridge.scm",(void*)f_9728},
{"f_9702ChickenBridge.scm",(void*)f_9702},
{"f_9689ChickenBridge.scm",(void*)f_9689},
{"f_9698ChickenBridge.scm",(void*)f_9698},
{"f_9693ChickenBridge.scm",(void*)f_9693},
{"f_9600ChickenBridge.scm",(void*)f_9600},
{"f_9680ChickenBridge.scm",(void*)f_9680},
{"f_9660ChickenBridge.scm",(void*)f_9660},
{"f_9666ChickenBridge.scm",(void*)f_9666},
{"f_9677ChickenBridge.scm",(void*)f_9677},
{"f_9657ChickenBridge.scm",(void*)f_9657},
{"f_9645ChickenBridge.scm",(void*)f_9645},
{"f_9648ChickenBridge.scm",(void*)f_9648},
{"f_9603ChickenBridge.scm",(void*)f_9603},
{"f_9639ChickenBridge.scm",(void*)f_9639},
{"f_9634ChickenBridge.scm",(void*)f_9634},
{"f_9606ChickenBridge.scm",(void*)f_9606},
{"f_9619ChickenBridge.scm",(void*)f_9619},
{"f_9609ChickenBridge.scm",(void*)f_9609},
{"f_9612ChickenBridge.scm",(void*)f_9612},
{"f_9615ChickenBridge.scm",(void*)f_9615},
{"f_9452ChickenBridge.scm",(void*)f_9452},
{"f_9511ChickenBridge.scm",(void*)f_9511},
{"f_9521ChickenBridge.scm",(void*)f_9521},
{"f_9523ChickenBridge.scm",(void*)f_9523},
{"f_9552ChickenBridge.scm",(void*)f_9552},
{"f_9557ChickenBridge.scm",(void*)f_9557},
{"f_9542ChickenBridge.scm",(void*)f_9542},
{"f_9473ChickenBridge.scm",(void*)f_9473},
{"f_9505ChickenBridge.scm",(void*)f_9505},
{"f_9433ChickenBridge.scm",(void*)f_9433},
{"f_9440ChickenBridge.scm",(void*)f_9440},
{"f_9447ChickenBridge.scm",(void*)f_9447},
{"f_9414ChickenBridge.scm",(void*)f_9414},
{"f_9421ChickenBridge.scm",(void*)f_9421},
{"f_9428ChickenBridge.scm",(void*)f_9428},
{"f_9234ChickenBridge.scm",(void*)f_9234},
{"f_9238ChickenBridge.scm",(void*)f_9238},
{"f_9241ChickenBridge.scm",(void*)f_9241},
{"f_9244ChickenBridge.scm",(void*)f_9244},
{"f_9247ChickenBridge.scm",(void*)f_9247},
{"f_9404ChickenBridge.scm",(void*)f_9404},
{"f_9411ChickenBridge.scm",(void*)f_9411},
{"f_9250ChickenBridge.scm",(void*)f_9250},
{"f_9253ChickenBridge.scm",(void*)f_9253},
{"f_9259ChickenBridge.scm",(void*)f_9259},
{"f_9265ChickenBridge.scm",(void*)f_9265},
{"f_9328ChickenBridge.scm",(void*)f_9328},
{"f_9342ChickenBridge.scm",(void*)f_9342},
{"f_9268ChickenBridge.scm",(void*)f_9268},
{"f_9271ChickenBridge.scm",(void*)f_9271},
{"f_9277ChickenBridge.scm",(void*)f_9277},
{"f_9290ChickenBridge.scm",(void*)f_9290},
{"f_9280ChickenBridge.scm",(void*)f_9280},
{"f_9283ChickenBridge.scm",(void*)f_9283},
{"f_9224ChickenBridge.scm",(void*)f_9224},
{"f_9169ChickenBridge.scm",(void*)f_9169},
{"f_9160ChickenBridge.scm",(void*)f_9160},
{"f_9043ChickenBridge.scm",(void*)f_9043},
{"f_9034ChickenBridge.scm",(void*)f_9034},
{"f_9025ChickenBridge.scm",(void*)f_9025},
{"f_9016ChickenBridge.scm",(void*)f_9016},
{"f_9007ChickenBridge.scm",(void*)f_9007},
{"f_8989ChickenBridge.scm",(void*)f_8989},
{"f_8980ChickenBridge.scm",(void*)f_8980},
{"f_8971ChickenBridge.scm",(void*)f_8971},
{"f_8953ChickenBridge.scm",(void*)f_8953},
{"f_8944ChickenBridge.scm",(void*)f_8944},
{"f_8935ChickenBridge.scm",(void*)f_8935},
{"f_8920ChickenBridge.scm",(void*)f_8920},
{"f_8875ChickenBridge.scm",(void*)f_8875},
{"f_8857ChickenBridge.scm",(void*)f_8857},
{"f_8848ChickenBridge.scm",(void*)f_8848},
{"f_8821ChickenBridge.scm",(void*)f_8821},
{"f_8803ChickenBridge.scm",(void*)f_8803},
{"f_8785ChickenBridge.scm",(void*)f_8785},
{"f_8776ChickenBridge.scm",(void*)f_8776},
{"f_8764ChickenBridge.scm",(void*)f_8764},
{"f_8598ChickenBridge.scm",(void*)f_8598},
{"f_8699ChickenBridge.scm",(void*)f_8699},
{"f_8748ChickenBridge.scm",(void*)f_8748},
{"f_8744ChickenBridge.scm",(void*)f_8744},
{"f_8716ChickenBridge.scm",(void*)f_8716},
{"f_8651ChickenBridge.scm",(void*)f_8651},
{"f_8660ChickenBridge.scm",(void*)f_8660},
{"f_8644ChickenBridge.scm",(void*)f_8644},
{"f_8463ChickenBridge.scm",(void*)f_8463},
{"f_8589ChickenBridge.scm",(void*)f_8589},
{"f_8585ChickenBridge.scm",(void*)f_8585},
{"f_8563ChickenBridge.scm",(void*)f_8563},
{"f_8493ChickenBridge.scm",(void*)f_8493},
{"f_8509ChickenBridge.scm",(void*)f_8509},
{"f_8418ChickenBridge.scm",(void*)f_8418},
{"f_8461ChickenBridge.scm",(void*)f_8461},
{"f_8450ChickenBridge.scm",(void*)f_8450},
{"f_8302ChickenBridge.scm",(void*)f_8302},
{"f_8416ChickenBridge.scm",(void*)f_8416},
{"f_8317ChickenBridge.scm",(void*)f_8317},
{"f_8347ChickenBridge.scm",(void*)f_8347},
{"f_8366ChickenBridge.scm",(void*)f_8366},
{"f_8351ChickenBridge.scm",(void*)f_8351},
{"f_8330ChickenBridge.scm",(void*)f_8330},
{"f_8180ChickenBridge.scm",(void*)f_8180},
{"f_8300ChickenBridge.scm",(void*)f_8300},
{"f_8195ChickenBridge.scm",(void*)f_8195},
{"f_8225ChickenBridge.scm",(void*)f_8225},
{"f_8244ChickenBridge.scm",(void*)f_8244},
{"f_8229ChickenBridge.scm",(void*)f_8229},
{"f_8208ChickenBridge.scm",(void*)f_8208},
{"f_8083ChickenBridge.scm",(void*)f_8083},
{"f_8178ChickenBridge.scm",(void*)f_8178},
{"f_8098ChickenBridge.scm",(void*)f_8098},
{"f_8144ChickenBridge.scm",(void*)f_8144},
{"f_8129ChickenBridge.scm",(void*)f_8129},
{"f_8111ChickenBridge.scm",(void*)f_8111},
{"f_8030ChickenBridge.scm",(void*)f_8030},
{"f_8068ChickenBridge.scm",(void*)f_8068},
{"f_8075ChickenBridge.scm",(void*)f_8075},
{"f_8053ChickenBridge.scm",(void*)f_8053},
{"f_8028ChickenBridge.scm",(void*)f_8028},
{"f_8000ChickenBridge.scm",(void*)f_8000},
{"f_8002ChickenBridge.scm",(void*)f_8002},
{"f_7980ChickenBridge.scm",(void*)f_7980},
{"f_7928ChickenBridge.scm",(void*)f_7928},
{"f_7965ChickenBridge.scm",(void*)f_7965},
{"f_7932ChickenBridge.scm",(void*)f_7932},
{"f_7948ChickenBridge.scm",(void*)f_7948},
{"f_7950ChickenBridge.scm",(void*)f_7950},
{"f_7900ChickenBridge.scm",(void*)f_7900},
{"f_7881ChickenBridge.scm",(void*)f_7881},
{"f_7840ChickenBridge.scm",(void*)f_7840},
{"f_7821ChickenBridge.scm",(void*)f_7821},
{"f_7593ChickenBridge.scm",(void*)f_7593},
{"f_7798ChickenBridge.scm",(void*)f_7798},
{"f_7813ChickenBridge.scm",(void*)f_7813},
{"f_7805ChickenBridge.scm",(void*)f_7805},
{"f_7769ChickenBridge.scm",(void*)f_7769},
{"f_7773ChickenBridge.scm",(void*)f_7773},
{"f_7734ChickenBridge.scm",(void*)f_7734},
{"f_7738ChickenBridge.scm",(void*)f_7738},
{"f_7597ChickenBridge.scm",(void*)f_7597},
{"f_7698ChickenBridge.scm",(void*)f_7698},
{"f_7713ChickenBridge.scm",(void*)f_7713},
{"f_7705ChickenBridge.scm",(void*)f_7705},
{"f_7669ChickenBridge.scm",(void*)f_7669},
{"f_7673ChickenBridge.scm",(void*)f_7673},
{"f_7634ChickenBridge.scm",(void*)f_7634},
{"f_7638ChickenBridge.scm",(void*)f_7638},
{"f_7600ChickenBridge.scm",(void*)f_7600},
{"f_7603ChickenBridge.scm",(void*)f_7603},
{"f_7606ChickenBridge.scm",(void*)f_7606},
{"f_7362ChickenBridge.scm",(void*)f_7362},
{"f_7567ChickenBridge.scm",(void*)f_7567},
{"f_7582ChickenBridge.scm",(void*)f_7582},
{"f_7574ChickenBridge.scm",(void*)f_7574},
{"f_7538ChickenBridge.scm",(void*)f_7538},
{"f_7542ChickenBridge.scm",(void*)f_7542},
{"f_7503ChickenBridge.scm",(void*)f_7503},
{"f_7507ChickenBridge.scm",(void*)f_7507},
{"f_7366ChickenBridge.scm",(void*)f_7366},
{"f_7467ChickenBridge.scm",(void*)f_7467},
{"f_7482ChickenBridge.scm",(void*)f_7482},
{"f_7474ChickenBridge.scm",(void*)f_7474},
{"f_7438ChickenBridge.scm",(void*)f_7438},
{"f_7442ChickenBridge.scm",(void*)f_7442},
{"f_7403ChickenBridge.scm",(void*)f_7403},
{"f_7407ChickenBridge.scm",(void*)f_7407},
{"f_7369ChickenBridge.scm",(void*)f_7369},
{"f_7372ChickenBridge.scm",(void*)f_7372},
{"f_7382ChickenBridge.scm",(void*)f_7382},
{"f_7319ChickenBridge.scm",(void*)f_7319},
{"f_7352ChickenBridge.scm",(void*)f_7352},
{"f_7337ChickenBridge.scm",(void*)f_7337},
{"f_7298ChickenBridge.scm",(void*)f_7298},
{"f_7274ChickenBridge.scm",(void*)f_7274},
{"f_7200ChickenBridge.scm",(void*)f_7200},
{"f_7207ChickenBridge.scm",(void*)f_7207},
{"f_7216ChickenBridge.scm",(void*)f_7216},
{"f_7252ChickenBridge.scm",(void*)f_7252},
{"f_7173ChickenBridge.scm",(void*)f_7173},
{"f_7078ChickenBridge.scm",(void*)f_7078},
{"f_7082ChickenBridge.scm",(void*)f_7082},
{"f_7085ChickenBridge.scm",(void*)f_7085},
{"f_7097ChickenBridge.scm",(void*)f_7097},
{"f_7119ChickenBridge.scm",(void*)f_7119},
{"f_7063ChickenBridge.scm",(void*)f_7063},
{"f_7048ChickenBridge.scm",(void*)f_7048},
{"f_6812ChickenBridge.scm",(void*)f_6812},
{"f_7025ChickenBridge.scm",(void*)f_7025},
{"f_7040ChickenBridge.scm",(void*)f_7040},
{"f_7032ChickenBridge.scm",(void*)f_7032},
{"f_6996ChickenBridge.scm",(void*)f_6996},
{"f_7000ChickenBridge.scm",(void*)f_7000},
{"f_6961ChickenBridge.scm",(void*)f_6961},
{"f_6965ChickenBridge.scm",(void*)f_6965},
{"f_6816ChickenBridge.scm",(void*)f_6816},
{"f_6925ChickenBridge.scm",(void*)f_6925},
{"f_6940ChickenBridge.scm",(void*)f_6940},
{"f_6932ChickenBridge.scm",(void*)f_6932},
{"f_6896ChickenBridge.scm",(void*)f_6896},
{"f_6900ChickenBridge.scm",(void*)f_6900},
{"f_6861ChickenBridge.scm",(void*)f_6861},
{"f_6865ChickenBridge.scm",(void*)f_6865},
{"f_6819ChickenBridge.scm",(void*)f_6819},
{"f_6822ChickenBridge.scm",(void*)f_6822},
{"f_6833ChickenBridge.scm",(void*)f_6833},
{"f_6793ChickenBridge.scm",(void*)f_6793},
{"f_6772ChickenBridge.scm",(void*)f_6772},
{"f_6784ChickenBridge.scm",(void*)f_6784},
{"f_6746ChickenBridge.scm",(void*)f_6746},
{"f_6704ChickenBridge.scm",(void*)f_6704},
{"f_6689ChickenBridge.scm",(void*)f_6689},
{"f_6607ChickenBridge.scm",(void*)f_6607},
{"f_6621ChickenBridge.scm",(void*)f_6621},
{"f_6573ChickenBridge.scm",(void*)f_6573},
{"f_6585ChickenBridge.scm",(void*)f_6585},
{"f_6570ChickenBridge.scm",(void*)f_6570},
{"f_6567ChickenBridge.scm",(void*)f_6567},
{"f_6560ChickenBridge.scm",(void*)f_6560},
{"f_6557ChickenBridge.scm",(void*)f_6557},
{"f_6550ChickenBridge.scm",(void*)f_6550},
{"f_6532ChickenBridge.scm",(void*)f_6532},
{"f_6521ChickenBridge.scm",(void*)f_6521},
{"f_6518ChickenBridge.scm",(void*)f_6518},
{"f_6515ChickenBridge.scm",(void*)f_6515},
{"f_6512ChickenBridge.scm",(void*)f_6512},
{"f_6483ChickenBridge.scm",(void*)f_6483},
{"f_6476ChickenBridge.scm",(void*)f_6476},
{"f_6473ChickenBridge.scm",(void*)f_6473},
{"f_6452ChickenBridge.scm",(void*)f_6452},
{"f_6445ChickenBridge.scm",(void*)f_6445},
{"f_6438ChickenBridge.scm",(void*)f_6438},
{"f_6423ChickenBridge.scm",(void*)f_6423},
{"f_6412ChickenBridge.scm",(void*)f_6412},
{"f_6401ChickenBridge.scm",(void*)f_6401},
{"f_6394ChickenBridge.scm",(void*)f_6394},
{"f_6367ChickenBridge.scm",(void*)f_6367},
{"f_6340ChickenBridge.scm",(void*)f_6340},
{"f_6299ChickenBridge.scm",(void*)f_6299},
{"f_6305ChickenBridge.scm",(void*)f_6305},
{"f_6315ChickenBridge.scm",(void*)f_6315},
{"f_6213ChickenBridge.scm",(void*)f_6213},
{"f_6165ChickenBridge.scm",(void*)f_6165},
{"f_6177ChickenBridge.scm",(void*)f_6177},
{"f_6194ChickenBridge.scm",(void*)f_6194},
{"f_6155ChickenBridge.scm",(void*)f_6155},
{"f_6115ChickenBridge.scm",(void*)f_6115},
{"f_6145ChickenBridge.scm",(void*)f_6145},
{"f_6047ChickenBridge.scm",(void*)f_6047},
{"f_6081ChickenBridge.scm",(void*)f_6081},
{"f_6024ChickenBridge.scm",(void*)f_6024},
{"f_6018ChickenBridge.scm",(void*)f_6018},
{"f_6003ChickenBridge.scm",(void*)f_6003},
{"f_5989ChickenBridge.scm",(void*)f_5989},
{"f_5979ChickenBridge.scm",(void*)f_5979},
{"f_5969ChickenBridge.scm",(void*)f_5969},
{"f_5959ChickenBridge.scm",(void*)f_5959},
{"f_5949ChickenBridge.scm",(void*)f_5949},
{"f_5920ChickenBridge.scm",(void*)f_5920},
{"f_5929ChickenBridge.scm",(void*)f_5929},
{"f_5934ChickenBridge.scm",(void*)f_5934},
{"f_5909ChickenBridge.scm",(void*)f_5909},
{"f_5914ChickenBridge.scm",(void*)f_5914},
{"f_5616ChickenBridge.scm",(void*)f_5616},
{"f_5626ChickenBridge.scm",(void*)f_5626},
{"f_5877ChickenBridge.scm",(void*)f_5877},
{"f_5629ChickenBridge.scm",(void*)f_5629},
{"f_5632ChickenBridge.scm",(void*)f_5632},
{"f_5647ChickenBridge.scm",(void*)f_5647},
{"f_5657ChickenBridge.scm",(void*)f_5657},
{"f_5659ChickenBridge.scm",(void*)f_5659},
{"f_5718ChickenBridge.scm",(void*)f_5718},
{"f_5728ChickenBridge.scm",(void*)f_5728},
{"f_5845ChickenBridge.scm",(void*)f_5845},
{"f_5833ChickenBridge.scm",(void*)f_5833},
{"f_5831ChickenBridge.scm",(void*)f_5831},
{"f_5818ChickenBridge.scm",(void*)f_5818},
{"f_5772ChickenBridge.scm",(void*)f_5772},
{"f_5799ChickenBridge.scm",(void*)f_5799},
{"f_5778ChickenBridge.scm",(void*)f_5778},
{"f_5712ChickenBridge.scm",(void*)f_5712},
{"f_5671ChickenBridge.scm",(void*)f_5671},
{"f_5684ChickenBridge.scm",(void*)f_5684},
{"f_5894ChickenBridge.scm",(void*)f_5894},
{"f_5885ChickenBridge.scm",(void*)f_5885},
{"f_5893ChickenBridge.scm",(void*)f_5893},
{"f_5896ChickenBridge.scm",(void*)f_5896},
{"f_5904ChickenBridge.scm",(void*)f_5904},
{"f_5318ChickenBridge.scm",(void*)f_5318},
{"f_5571ChickenBridge.scm",(void*)f_5571},
{"f_5604ChickenBridge.scm",(void*)f_5604},
{"f_5600ChickenBridge.scm",(void*)f_5600},
{"f_5589ChickenBridge.scm",(void*)f_5589},
{"f_5585ChickenBridge.scm",(void*)f_5585},
{"f_5479ChickenBridge.scm",(void*)f_5479},
{"f_5482ChickenBridge.scm",(void*)f_5482},
{"f_5485ChickenBridge.scm",(void*)f_5485},
{"f_5565ChickenBridge.scm",(void*)f_5565},
{"f_5390ChickenBridge.scm",(void*)f_5390},
{"f_5331ChickenBridge.scm",(void*)f_5331},
{"f_5488ChickenBridge.scm",(void*)f_5488},
{"f_5495ChickenBridge.scm",(void*)f_5495},
{"f_5555ChickenBridge.scm",(void*)f_5555},
{"f_5541ChickenBridge.scm",(void*)f_5541},
{"f_5507ChickenBridge.scm",(void*)f_5507},
{"f_5533ChickenBridge.scm",(void*)f_5533},
{"f_5468ChickenBridge.scm",(void*)f_5468},
{"f_5515ChickenBridge.scm",(void*)f_5515},
{"f_5511ChickenBridge.scm",(void*)f_5511},
{NULL,NULL}};
#endif

static C_PTABLE_ENTRY *create_ptable(void){
#ifdef C_ENABLE_PTABLES
return ptable;
#else
return NULL;
#endif
}
/* end of file */
