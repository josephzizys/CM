/* Generated from ChickenBridge.scm by the CHICKEN compiler
   http://www.call-with-current-continuation.org
   2008-10-23 06:34
   Version 3.0.0 - macosx-unix-gnu-x86	[ manyargs dload ptables applyhook ]
   (c)2000-2008 Felix L. Winkelmann	compiled 2008-04-21 on dhcp218a.music.uiuc.edu (Darwin)
   command line: ChickenBridge.scm -output-file ChickenBridge.cpp -quiet
   unit: grace
*/

#include "chicken.h"


/*************************************************************************
 * Copyright (C) 2007 Todd Ingalls, Rick Taube.                          *
 * This program is free software; you can redistribute it and/or modify  *
 * it under the terms of the Lisp Lesser Gnu Public License. The text of *
 * this agreement is available at http://www.cliki.net/LLGPL             *
 *************************************************************************/

#include "Grace.h"
#include "Scheme.h"
#include "Syntax.h"
#include "Midi.h"
#include "Enumerations.h"
#include <juce.h>

//
// Console Window code
//

void print_message(char * st) {
  // attempt at buffering: if string ends with #\Return, send string
  // AND trigger update else send string without triggering update
  String s=String(st);

  //printf("message='%s'\n" , s.toUTF8());

  if ( s.endsWithChar('\n') )
    ((GraceApp *)GraceApp::getInstance())->getConsole()->postConsoleMessage(CommandIDs::ConsolePrintText, s, true);
  else
    ((GraceApp *)GraceApp::getInstance())->getConsole()->postConsoleMessage(CommandIDs::ConsolePrintText, s, false);
}

void print_error(char * st) {
  // attempt at buffering: if string ends with #\Return, send string
  // AND trigger update else send string without triggering update
  String s=String(st);
  if ( s.endsWithChar('\n') )
    ((GraceApp *)GraceApp::getInstance())->getConsole()->postConsoleMessage(CommandIDs::ConsolePrintError, s, true);
  else
    ((GraceApp *)GraceApp::getInstance())->getConsole()->postConsoleMessage(CommandIDs::ConsolePrintError, s, false);
}

//
// Scheduler code
//

void scheduler_sprout( C_word proc, double time, int id)
{
  ((GraceApp *)
   GraceApp::getInstance())->schemeProcess->addNode(0, time, proc, id);
}

bool scheduler_is_paused () {
  ((GraceApp *)GraceApp::getInstance())->schemeProcess->isPaused();
}

void scheduler_pause() {
  ((GraceApp *)GraceApp::getInstance())->schemeProcess->setPaused(true);
}

void scheduler_cont () {
  ((GraceApp *)GraceApp::getInstance())->schemeProcess->setPaused(false);
}

void scheduler_stop (int id) {
  ((GraceApp *)GraceApp::getInstance())->schemeProcess->stop(id);
}

void scheduler_hush () {
  ((GraceApp *)GraceApp::getInstance())->schemeProcess->stop(-1);
  ((GraceApp *)GraceApp::getInstance())->midiOutPort->clear();
}

char *get_current_directory() {
  return (char *)File::getCurrentWorkingDirectory().getFullPathName().toUTF8();
}

void set_current_directory (char *path) {
  File dir=File(String(path));
  if ( dir.isDirectory() ) {
    dir.setAsCurrentWorkingDirectory();
    //print_working_directory();
  }
  else {
    String s=T(">>> Error: ") + dir.getFullPathName().quoted() + T(" is not a directory.\n");
    ((GraceApp *)GraceApp::getInstance())->getConsole()->postConsoleMessage(CommandIDs::ConsolePrintError, s, true);
  }			 
}

void load_sal_file(char *path) {
  SalSyntax::getInstance()->loadFile( String(path) );  
}



#include "Toolbox.h"



void mp_note(double time, double dur, float key, float vel, float chan) 
{
  SchemeThread* sch=((GraceApp *)GraceApp::getInstance())->schemeProcess;
  // dont need a lock becuase we are in the thread
  if (sch->capturemode)
  {
    // if score capture is true AND we are under a process callback then
    // processtime will be >= 0 else it will be 0
    time=time+sch->processtime;
    ((GraceApp *)GraceApp::getInstance())->
      midiOutPort->sendNote(time, dur, key, vel, chan, true);
  }
  else
   ((GraceApp *)GraceApp::getInstance())->
      midiOutPort->sendNote(time, dur, key, vel, chan, false);
}

void mp_data(int type, double time, float chan, float data1, float data2)
{
  SchemeThread* sch=((GraceApp *)GraceApp::getInstance())->schemeProcess;
  if (sch->capturemode)
  {
    // if score capture is true AND we are under a process callback then
    // processtime will be >= 0 else it will be 0
    time=time+sch->processtime;
    ((GraceApp *)GraceApp::getInstance())->
      midiOutPort->sendData(type, time, chan, data1, data2, true) ;
  }
  else
  {
    ((GraceApp *)GraceApp::getInstance())->
      midiOutPort->sendData(type, time, chan, data1, data2, false) ;
  }
}

void mp_message(MidiMessage *m) 
{
  SchemeThread* sch=((GraceApp *)GraceApp::getInstance())->schemeProcess;
  if (sch->capturemode)
  {
    // if score capture is true AND we are under a process callback then
    // processtime will be >= 0 else it will be 0
    m->setTimeStamp(m->getTimeStamp()+sch->processtime);
    ((GraceApp *)GraceApp::getInstance())->midiOutPort->sendMessage(m, true) ;
  }
  else 
  {
   ((GraceApp *)GraceApp::getInstance())->midiOutPort->sendMessage(m,false) ;
  }
}

void mp_tuning(int div)
{
 ((GraceApp *)GraceApp::getInstance())->getConsole()->
   postConsoleMessage( CommandIDs::MidiOutTuning + div, true);
}

void mp_playseq()
{
 ((GraceApp *)GraceApp::getInstance())->getConsole()->
   postConsoleMessage( CommandIDs::MidiSeqPlay, true);
}

void mp_saveseq()
{
 ((GraceApp *)GraceApp::getInstance())->getConsole()->
   postConsoleMessage( CommandIDs::MidiSeqSave, true);
}

void mp_copyseq()
{
 ((GraceApp *)GraceApp::getInstance())->getConsole()->
   postConsoleMessage( CommandIDs::MidiSeqCopyToTrack, true);
}

void mp_plotseq()
{
 ((GraceApp *)GraceApp::getInstance())->getConsole()->
   postConsoleMessage( CommandIDs::MidiSeqPlot, true);
}

void mp_clearseq()
{
 ((GraceApp *)GraceApp::getInstance())->getConsole()->
   postConsoleMessage( CommandIDs::MidiSeqClear, true);
}

void mp_recordseq(bool b)
{
 int val = (b) ? CaptureModes::RecordMidiOut : CaptureModes::Off;
 ((GraceApp *)GraceApp::getInstance())->getConsole()->
   postConsoleMessage( CommandIDs::MidiSeqRecordMidiOut + val, true);
}

void mp_setchannelmask(int m)
{
 ((GraceApp *)GraceApp::getInstance())->getConsole()->
   postConsoleMessage( CommandIDs::MidiInChannelMask, m, true);
}

void mp_setmessagemask(int m)
{
 ((GraceApp *)GraceApp::getInstance())->getConsole()->
   postConsoleMessage( CommandIDs::MidiInMessageMask, m, true);
}

/// MidiMessage accessors

MidiMessage *mm_make(int type, double time, int chan, 
		     int data1, int data2 ) {
  MidiMessage *m;
  chan++; // juce channels are 1 based
  switch (type) {
  case MidiNode::MM_OFF :
    m=new MidiMessage(MidiMessage::noteOff(chan, data1));
    break;
  case MidiNode::MM_ON :
    m=new MidiMessage(MidiMessage::noteOn(chan, data1, (juce::uint8)data2));
    break;
  case MidiNode::MM_TOUCH :
    m=new MidiMessage(MidiMessage::aftertouchChange(chan, data1, data2));
    break;
  case MidiNode::MM_CTRL :
    m=new MidiMessage(MidiMessage::controllerEvent(chan, data1, data2));
    break;
  case MidiNode::MM_PROG :
    m=new MidiMessage(MidiMessage::programChange(chan, data1));
    break;
  case MidiNode::MM_PRESS :
    m=new MidiMessage(MidiMessage::channelPressureChange(chan, data1));
    break;
  case MidiNode::MM_BEND :
    m=new MidiMessage(MidiMessage::pitchWheel(chan, data1));
    break;
  default:
    return NULL;
  }
  return m;
}

MidiMessage *mm_copy(MidiMessage *m) {
  return new MidiMessage(*m);
}

void mm_free(MidiMessage *m) {
  delete m;
}

bool mm_is_type(MidiMessage *m, int typ) {
  switch (typ) {
  case MidiNode::MM_OFF :
    return m->isNoteOff();
    break;
  case MidiNode::MM_ON :
    return m->isNoteOn();
    break;
  case MidiNode::MM_TOUCH :
    return m->isAftertouch();
    break;
  case MidiNode::MM_CTRL :
    return m->isController();
    break;
  case MidiNode::MM_PROG :
    return m->isProgramChange();
    break;
  case MidiNode::MM_PRESS :
    return m->isChannelPressure();
    break;
  case MidiNode::MM_BEND :
    return m->isPitchWheel();
    break;
  default:
    return false;
  }
}

double mm_time(MidiMessage *m) {
  return m->getTimeStamp();
}

void mm_set_time(MidiMessage *m, double t) {
  m->setTimeStamp(t);
  return ;		
}

int mm_chan(MidiMessage *m) {
  // juce channels are 1 based
  return m->getChannel()-1;
}

void mm_set_chan(MidiMessage *m, int chan) {
  // juce channels are 1 based
  m->setChannel(chan+1);
}

int mm_data(MidiMessage *m, int n ) {
  juce::uint8 *data=m->getRawData();
  return (int)data[n];
}

void mm_set_data(MidiMessage *m, int n, int v ) {
  juce::uint8 *data=m->getRawData();
  data[n]=(v & 0x7f);
}

//INput Hook Code
void set_input_hook( C_word proc )
{
 // FIX
 ((GraceApp *)GraceApp::getInstance())->schemeProcess->setInputHook( proc);
}



#include "Csound.h"

void cs_send_score_event (int type, int len, C_word lyst)
{
  MYFLT buf[len];
  char typ = (type==2) ? 'f' : 'i';
  String str = String::empty;
  int pos=-1;
  int i=0;
  for ( ; C_SCHEME_END_OF_LIST != lyst; lyst = C_u_i_cdr( lyst ) ) {
    if (i==len) break;
    C_word w = C_u_i_car( lyst );
    if ( C_immediatep(w) ) {
      if ( C_truep(C_fixnump(w)) ) {
	buf[i++] = (MYFLT)C_unfix(w);
      }
      else
        buf[i++] = 0.0;
    }
    else if ( C_truep(C_blockp(w)) && C_truep( C_flonump( w ) )) {
      buf[i++] = (MYFLT)C_flonum_magnitude( w );
    }
    else if ( C_truep(C_blockp(w)) && C_truep( C_stringp( w ) )) {
      pos=i;  // position of string parameter
      str = String(C_c_string(w), C_header_size(w));
      buf[i++] = 0.0; // pad the pars values
      //printf("stringpar=%s\n", str.toUTF8());
    }								  
    else {
      buf[i++] = 0.0;
    }
  }
  SchemeThread* sch=((GraceApp *)GraceApp::getInstance())->schemeProcess;
  CsoundScoreEv* ev=new CsoundScoreEv(typ,len,buf,str,pos);
  ((GraceApp *)GraceApp::getInstance())->
    getCsoundPort()->sendScoreEvent( ev, true, sch->capturemode);
}

void cs_record_mode(bool b) {
  ((GraceApp *)GraceApp::getInstance())->getCsoundPort()->setRecordMode(b);
}

void cs_record_start(float f) {
  ((GraceApp *)GraceApp::getInstance())->getCsoundPort()->setRecordStart(f);
}

void cs_trace_mode(bool b) {
  ((GraceApp *)GraceApp::getInstance())->getCsoundPort()->setTraceMode(b);
}

void cs_clear_score() {
  ((GraceApp *)GraceApp::getInstance())->getCsoundPort()->clearScore();
}

void cs_print_score(float start, float end) {
  ((GraceApp *)GraceApp::getInstance())->getCsoundPort()->printScore(start,end);
}

void cs_play_score(float start, float end, float shift) {
  ((GraceApp *)GraceApp::getInstance())->getCsoundPort()->playScore(start,end,shift);
}



static C_PTABLE_ENTRY *create_ptable(void);
C_noret_decl(C_library_toplevel)
C_externimport void C_ccall C_library_toplevel(C_word c,C_word d,C_word k) C_noret;
C_noret_decl(C_eval_toplevel)
C_externimport void C_ccall C_eval_toplevel(C_word c,C_word d,C_word k) C_noret;
C_noret_decl(C_extras_toplevel)
C_externimport void C_ccall C_extras_toplevel(C_word c,C_word d,C_word k) C_noret;
C_noret_decl(C_extras_toplevel)
C_externimport void C_ccall C_extras_toplevel(C_word c,C_word d,C_word k) C_noret;

static C_TLS C_word lf[1034];
static double C_possibly_force_alignment;
static C_char C_TLS li0[] C_aligned={C_lihdr(0,0,11),40,97,54,56,57,56,32,105,51,50,41,0,0,0};
static C_char C_TLS li1[] C_aligned={C_lihdr(0,0,11),40,97,54,57,50,48,32,105,51,49,41,0,0,0};
static C_char C_TLS li2[] C_aligned={C_lihdr(0,0,11),40,97,54,57,51,48,32,105,51,48,41,0,0,0};
static C_char C_TLS li3[] C_aligned={C_lihdr(0,0,11),40,97,54,57,51,54,32,118,50,54,41,0,0,0};
static C_char C_TLS li4[] C_aligned={C_lihdr(0,0,34),40,101,120,112,97,110,100,45,111,112,116,107,101,121,115,32,117,115,101,114,48,32,115,112,101,99,49,32,98,111,100,121,50,41,0,0};
static C_char C_TLS li5[] C_aligned={C_lihdr(0,0,23),40,102,95,55,50,54,50,32,115,116,114,53,48,32,46,32,97,114,103,115,53,49,41,0,0,0,0,0,0,0};
static C_char C_TLS li6[] C_aligned={C_lihdr(0,0,12),40,102,95,55,50,53,49,32,107,53,52,41,0,0,0,0};
static C_char C_TLS li7[] C_aligned={C_lihdr(0,0,12),40,102,95,55,50,54,48,32,107,53,53,41,0,0,0,0};
static C_char C_TLS li8[] C_aligned={C_lihdr(0,0,13),40,100,111,54,57,32,116,97,105,108,55,49,41,0,0,0,0,0};
static C_char C_TLS li9[] C_aligned={C_lihdr(0,0,11),40,97,55,49,57,56,32,120,55,55,41,0,0,0};
static C_char C_TLS li10[] C_aligned={C_lihdr(0,0,31),40,100,111,54,51,32,97,114,103,115,54,53,32,107,101,121,54,54,32,97,114,103,54,55,32,112,111,115,54,56,41,0,0,0,0,0,0,0};
static C_char C_TLS li11[] C_aligned={C_lihdr(0,0,7),40,97,55,50,52,50,41,0,0,0,0,0,0,0};
static C_char C_TLS li12[] C_aligned={C_lihdr(0,0,34),40,101,120,112,97,110,100,45,115,101,110,100,32,109,101,115,103,52,52,32,100,97,116,97,52,53,32,101,114,114,102,52,54,41,0,0};
static C_char C_TLS li13[] C_aligned={C_lihdr(0,0,8),40,102,95,55,50,56,51,41};
static C_char C_TLS li14[] C_aligned={C_lihdr(0,0,5),40,99,119,100,41,0,0,0,0,0};
static C_char C_TLS li15[] C_aligned={C_lihdr(0,0,14),40,102,95,55,50,57,56,32,97,57,53,57,57,41,0,0,0,0,0,0};
static C_char C_TLS li16[] C_aligned={C_lihdr(0,0,15),40,99,104,100,105,114,32,46,32,100,105,114,57,52,41,0,0,0,0,0,0,0};
static C_char C_TLS li17[] C_aligned={C_lihdr(0,0,7),40,100,111,49,48,55,41,0,0,0,0,0,0,0};
static C_char C_TLS li18[] C_aligned={C_lihdr(0,0,14),40,115,104,101,108,108,32,99,109,100,49,49,54,41,0,0,0,0,0,0};
static C_char C_TLS li19[] C_aligned={C_lihdr(0,0,12),40,102,105,102,116,104,32,108,49,49,57,41,0,0,0,0};
static C_char C_TLS li20[] C_aligned={C_lihdr(0,0,12),40,115,105,120,116,104,32,108,49,50,48,41,0,0,0,0};
static C_char C_TLS li21[] C_aligned={C_lihdr(0,0,14),40,115,101,118,101,110,116,104,32,108,49,50,49,41,0,0,0,0,0,0};
static C_char C_TLS li22[] C_aligned={C_lihdr(0,0,13),40,101,105,103,104,116,104,32,108,49,50,50,41,0,0,0,0,0};
static C_char C_TLS li23[] C_aligned={C_lihdr(0,0,12),40,110,105,110,116,104,32,108,49,50,51,41,0,0,0,0};
static C_char C_TLS li24[] C_aligned={C_lihdr(0,0,12),40,116,101,110,116,104,32,108,49,50,52,41,0,0,0,0};
static C_char C_TLS li25[] C_aligned={C_lihdr(0,0,11),40,114,101,115,116,32,108,49,50,53,41,0,0,0};
static C_char C_TLS li26[] C_aligned={C_lihdr(0,0,11),40,108,97,115,116,32,108,49,50,54,41,0,0,0};
static C_char C_TLS li27[] C_aligned={C_lihdr(0,0,14),40,98,117,116,108,97,115,116,32,108,49,50,55,41,0,0,0,0,0,0};
static C_char C_TLS li28[] C_aligned={C_lihdr(0,0,11),40,116,97,105,108,32,108,49,50,56,41,0,0,0};
static C_char C_TLS li29[] C_aligned={C_lihdr(0,0,17),40,108,105,115,116,42,32,46,32,97,114,103,115,49,51,56,41,0};
static C_char C_TLS li30[] C_aligned={C_lihdr(0,0,12),40,100,111,49,52,55,32,116,49,52,57,41,0,0,0,0};
static C_char C_TLS li31[] C_aligned={C_lihdr(0,0,12),40,100,111,49,52,50,32,97,49,52,52,41,0,0,0,0};
static C_char C_TLS li32[] C_aligned={C_lihdr(0,0,18),40,99,111,110,99,97,116,32,46,32,97,114,103,115,49,51,57,41,0,0};
static C_char C_TLS li33[] C_aligned={C_lihdr(0,0,32),40,108,105,115,116,45,115,101,116,33,32,108,105,115,49,53,54,32,112,111,115,49,53,55,32,118,97,108,49,53,56,41};
static C_char C_TLS li34[] C_aligned={C_lihdr(0,0,22),40,100,111,49,54,50,32,105,49,54,52,32,106,49,54,53,32,116,49,54,54,41,0,0,0,0,0,0};
static C_char C_TLS li35[] C_aligned={C_lihdr(0,0,15),40,114,101,118,101,114,115,101,33,32,108,49,54,48,41,0,0,0,0,0,0,0};
static C_char C_TLS li36[] C_aligned={C_lihdr(0,0,14),40,108,49,32,97,49,55,54,32,98,49,55,55,41,0,0,0,0,0,0};
static C_char C_TLS li37[] C_aligned={C_lihdr(0,0,14),40,108,50,32,97,49,55,56,32,98,49,55,57,41,0,0,0,0,0,0};
static C_char C_TLS li38[] C_aligned={C_lihdr(0,0,25),40,109,97,107,101,45,108,105,115,116,32,110,49,55,50,32,46,32,111,98,106,49,55,51,41,0};
static C_char C_TLS li39[] C_aligned={C_lihdr(0,0,25),40,100,111,49,56,53,32,116,97,105,108,49,56,55,32,105,49,56,56,32,102,49,56,57,41,0};
static C_char C_TLS li40[] C_aligned={C_lihdr(0,0,22),40,108,105,115,116,45,105,110,100,101,120,32,112,49,56,51,32,108,49,56,52,41,0,0,0,0,0,0};
static C_char C_TLS li41[] C_aligned={C_lihdr(0,0,25),40,100,111,49,57,54,32,116,97,105,108,49,57,56,32,120,49,57,57,32,102,50,48,48,41,0};
static C_char C_TLS li42[] C_aligned={C_lihdr(0,0,21),40,108,105,115,116,45,102,105,110,100,32,112,49,57,52,32,108,49,57,53,41,0,0,0,0,0};
static C_char C_TLS li43[] C_aligned={C_lihdr(0,0,23),40,100,111,50,48,55,32,116,97,105,108,50,48,57,32,102,108,97,103,50,49,48,41,0,0,0,0,0,0,0};
static C_char C_TLS li44[] C_aligned={C_lihdr(0,0,18),40,101,118,101,114,121,63,32,102,50,48,53,32,108,50,48,54,41,0,0};
static C_char C_TLS li45[] C_aligned={C_lihdr(0,0,35),40,108,105,115,116,45,112,114,111,112,32,108,105,115,50,49,53,32,112,114,111,112,50,49,54,32,46,32,100,101,102,50,49,55,41,0,0,0};
static C_char C_TLS li46[] C_aligned={C_lihdr(0,0,12),40,100,111,50,50,51,32,102,50,50,53,41,0,0,0,0};
static C_char C_TLS li47[] C_aligned={C_lihdr(0,0,24),40,98,105,116,119,105,115,101,45,116,101,115,116,32,97,50,50,49,32,98,50,50,50,41};
static C_char C_TLS li48[] C_aligned={C_lihdr(0,0,60),40,116,98,58,114,101,115,99,97,108,101,32,97,50,54,50,50,54,53,32,97,50,54,49,50,54,54,32,97,50,54,48,50,54,55,32,97,50,53,57,50,54,56,32,97,50,53,56,50,54,57,32,97,50,53,55,50,55,48,41,0,0,0,0};
static C_char C_TLS li49[] C_aligned={C_lihdr(0,0,61),40,116,98,58,100,105,115,99,114,101,116,101,32,97,50,55,55,50,56,48,32,97,50,55,54,50,56,49,32,97,50,55,53,50,56,50,32,97,50,55,52,50,56,51,32,97,50,55,51,50,56,52,32,97,50,55,50,50,56,53,41,0,0,0,0,0};
static C_char C_TLS li50[] C_aligned={C_lihdr(0,0,16),40,116,98,58,105,110,116,32,97,50,56,54,50,56,57,41};
static C_char C_TLS li51[] C_aligned={C_lihdr(0,0,29),40,116,98,58,113,117,97,110,116,105,122,101,32,97,50,57,49,50,57,52,32,97,50,57,48,50,57,53,41,0,0,0,0,0};
static C_char C_TLS li52[] C_aligned={C_lihdr(0,0,44),40,116,98,58,114,104,121,116,104,109,45,62,115,101,99,111,110,100,115,32,97,50,57,57,51,48,50,32,97,50,57,56,51,48,51,32,97,50,57,55,51,48,52,41,0,0,0,0};
static C_char C_TLS li53[] C_aligned={C_lihdr(0,0,26),40,116,98,58,99,101,110,116,115,45,62,115,99,97,108,101,114,32,97,51,48,54,51,48,57,41,0,0};
static C_char C_TLS li54[] C_aligned={C_lihdr(0,0,26),40,116,98,58,115,99,97,108,101,114,45,62,99,101,110,116,115,32,97,51,49,49,51,49,52,41,0,0};
static C_char C_TLS li55[] C_aligned={C_lihdr(0,0,44),40,116,98,58,101,120,112,108,115,101,103,32,97,51,49,56,51,50,49,32,97,51,49,55,51,50,50,32,97,51,49,54,51,50,51,32,97,51,49,53,51,50,52,41,0,0,0,0};
static C_char C_TLS li56[] C_aligned={C_lihdr(0,0,43),40,116,98,58,103,101,111,115,101,103,32,97,51,50,57,51,51,50,32,97,51,50,56,51,51,51,32,97,51,50,55,51,51,52,32,97,51,50,54,51,51,53,41,0,0,0};
static C_char C_TLS li57[] C_aligned={C_lihdr(0,0,26),40,116,98,58,107,101,121,110,117,109,45,62,104,101,114,116,122,32,97,51,51,55,51,52,48,41,0,0};
static C_char C_TLS li58[] C_aligned={C_lihdr(0,0,21),40,116,98,58,114,97,110,45,115,101,116,33,32,97,51,53,49,51,53,52,41,0,0,0,0,0};
static C_char C_TLS li59[] C_aligned={C_lihdr(0,0,17),40,116,98,58,114,97,110,105,32,97,51,53,53,51,53,56,41,0};
static C_char C_TLS li60[] C_aligned={C_lihdr(0,0,17),40,116,98,58,114,97,110,102,32,97,51,53,57,51,54,50,41,0};
static C_char C_TLS li61[] C_aligned={C_lihdr(0,0,11),40,116,98,58,114,97,110,108,111,119,41,0,0,0};
static C_char C_TLS li62[] C_aligned={C_lihdr(0,0,12),40,116,98,58,114,97,110,104,105,103,104,41,0,0,0,0};
static C_char C_TLS li63[] C_aligned={C_lihdr(0,0,14),40,116,98,58,114,97,110,109,105,100,100,108,101,41,0,0,0,0,0,0};
static C_char C_TLS li64[] C_aligned={C_lihdr(0,0,29),40,116,98,58,114,97,110,103,97,117,115,115,32,97,51,56,55,51,57,48,32,97,51,56,54,51,57,49,41,0,0,0,0,0};
static C_char C_TLS li65[] C_aligned={C_lihdr(0,0,19),40,116,98,58,114,97,110,101,120,112,32,97,51,57,51,51,57,54,41,0,0,0};
static C_char C_TLS li66[] C_aligned={C_lihdr(0,0,21),40,116,98,58,114,97,110,103,97,109,109,97,32,97,52,48,53,52,48,56,41,0,0,0,0,0};
static C_char C_TLS li67[] C_aligned={C_lihdr(0,0,14),40,116,98,58,114,97,110,99,97,117,99,104,121,41,0,0,0,0,0,0};
static C_char C_TLS li68[] C_aligned={C_lihdr(0,0,23),40,116,98,58,114,97,110,112,111,105,115,115,111,110,32,97,52,49,51,52,49,54,41,0,0,0,0,0,0,0};
static C_char C_TLS li69[] C_aligned={C_lihdr(0,0,12),40,116,98,58,114,97,110,112,105,110,107,41,0,0,0,0};
static C_char C_TLS li70[] C_aligned={C_lihdr(0,0,13),40,116,98,58,114,97,110,98,114,111,119,110,41,0,0,0,0,0};
static C_char C_TLS li71[] C_aligned={C_lihdr(0,0,15),40,108,111,103,49,48,32,97,52,51,50,52,51,53,41,0,0,0,0,0,0,0};
static C_char C_TLS li72[] C_aligned={C_lihdr(0,0,14),40,108,111,103,50,32,97,52,51,55,52,52,48,41,0,0,0,0,0,0};
static C_char C_TLS li73[] C_aligned={C_lihdr(0,0,12),40,97,56,52,57,51,32,122,52,52,56,41,0,0,0,0};
static C_char C_TLS li74[] C_aligned={C_lihdr(0,0,45),40,114,101,115,99,97,108,101,32,120,52,52,50,32,120,49,52,52,51,32,120,50,52,52,52,32,121,49,52,52,53,32,121,50,52,52,54,32,46,32,98,52,52,55,41,0,0,0,0,0};
static C_char C_TLS li75[] C_aligned={C_lihdr(0,0,12),40,97,56,53,51,51,32,122,52,54,48,41,0,0,0,0};
static C_char C_TLS li76[] C_aligned={C_lihdr(0,0,12),40,97,56,53,53,57,32,122,52,54,49,41,0,0,0,0};
static C_char C_TLS li77[] C_aligned={C_lihdr(0,0,43),40,100,105,115,99,114,101,116,101,32,120,52,52,57,32,120,49,52,53,48,32,120,50,52,53,49,32,105,49,52,53,50,32,46,32,97,114,103,115,52,53,51,41,0,0,0};
static C_char C_TLS li78[] C_aligned={C_lihdr(0,0,10),40,105,110,116,32,102,52,54,51,41,0,0};
static C_char C_TLS li79[] C_aligned={C_lihdr(0,0,12),40,97,56,54,53,51,32,120,52,54,53,41,0,0,0,0};
static C_char C_TLS li80[] C_aligned={C_lihdr(0,0,12),40,102,108,111,97,116,32,110,52,54,52,41,0,0,0,0};
static C_char C_TLS li81[] C_aligned={C_lihdr(0,0,12),40,97,56,55,48,57,32,120,52,54,55,41,0,0,0,0};
static C_char C_TLS li82[] C_aligned={C_lihdr(0,0,16),40,112,108,117,115,32,46,32,97,114,103,115,52,54,54,41};
static C_char C_TLS li83[] C_aligned={C_lihdr(0,0,12),40,97,56,55,55,56,32,120,52,54,57,41,0,0,0,0};
static C_char C_TLS li84[] C_aligned={C_lihdr(0,0,17),40,116,105,109,101,115,32,46,32,97,114,103,115,52,54,56,41,0};
static C_char C_TLS li85[] C_aligned={C_lihdr(0,0,12),40,97,56,56,51,51,32,120,52,55,50,41,0,0,0,0};
static C_char C_TLS li86[] C_aligned={C_lihdr(0,0,24),40,109,105,110,117,115,32,97,114,103,52,55,48,32,46,32,97,114,103,115,52,55,49,41};
static C_char C_TLS li87[] C_aligned={C_lihdr(0,0,12),40,97,56,56,55,54,32,120,52,55,53,41,0,0,0,0};
static C_char C_TLS li88[] C_aligned={C_lihdr(0,0,25),40,100,105,118,105,100,101,32,97,114,103,52,55,51,32,46,32,97,114,103,115,52,55,52,41,0};
static C_char C_TLS li89[] C_aligned={C_lihdr(0,0,12),40,97,56,57,48,49,32,110,52,55,56,41,0,0,0,0};
static C_char C_TLS li90[] C_aligned={C_lihdr(0,0,26),40,113,117,97,110,116,105,122,101,32,110,117,109,52,55,54,32,115,116,101,112,115,52,55,55,41,0,0};
static C_char C_TLS li91[] C_aligned={C_lihdr(0,0,12),40,97,56,57,50,53,32,118,52,56,50,41,0,0,0,0};
static C_char C_TLS li92[] C_aligned={C_lihdr(0,0,29),40,100,101,99,105,109,97,108,115,32,118,97,108,117,101,52,55,57,32,112,108,97,99,101,115,52,56,48,41,0,0,0,0,0};
static C_char C_TLS li93[] C_aligned={C_lihdr(0,0,12),40,97,56,57,55,49,32,120,53,50,51,41,0,0,0,0};
static C_char C_TLS li94[] C_aligned={C_lihdr(0,0,36),40,114,104,121,116,104,109,45,62,115,101,99,111,110,100,115,32,98,101,97,116,115,52,56,51,32,46,32,97,114,103,115,52,56,52,41,0,0,0,0};
static C_char C_TLS li95[] C_aligned={C_lihdr(0,0,23),40,99,101,110,116,115,45,62,114,97,116,105,111,32,99,101,110,116,115,53,50,55,41,0,0,0,0,0,0,0};
static C_char C_TLS li96[] C_aligned={C_lihdr(0,0,21),40,114,97,116,105,111,45,62,99,101,110,116,115,32,110,117,109,53,50,56,41,0,0,0,0,0};
static C_char C_TLS li97[] C_aligned={C_lihdr(0,0,15),40,100,111,53,51,55,32,116,97,105,108,53,51,57,41,0,0,0,0,0,0,0};
static C_char C_TLS li98[] C_aligned={C_lihdr(0,0,32),40,105,110,116,101,114,112,49,32,120,53,50,57,32,99,111,111,114,100,115,53,51,48,32,98,97,115,101,53,51,49,41};
static C_char C_TLS li99[] C_aligned={C_lihdr(0,0,23),40,105,110,116,101,114,112,32,120,53,52,55,32,46,32,97,114,103,115,53,52,56,41,0,0,0,0,0,0,0};
static C_char C_TLS li100[] C_aligned={C_lihdr(0,0,40),40,116,101,110,100,101,110,99,121,32,120,53,53,48,32,108,111,119,53,53,49,32,104,105,103,104,53,53,50,32,46,32,97,114,103,115,53,53,51,41};
static C_char C_TLS li101[] C_aligned={C_lihdr(0,0,33),40,102,105,116,49,32,110,117,109,53,54,54,32,108,98,53,54,55,32,117,98,53,54,56,32,109,111,100,101,53,54,57,41,0};
static C_char C_TLS li102[] C_aligned={C_lihdr(0,0,12),40,97,57,53,50,54,32,110,53,55,52,41,0,0,0,0};
static C_char C_TLS li103[] C_aligned={C_lihdr(0,0,34),40,102,105,116,32,110,117,109,53,53,57,32,108,98,53,54,48,32,117,98,53,54,49,32,46,32,109,111,100,101,53,54,50,41,0,0};
static C_char C_TLS li104[] C_aligned={C_lihdr(0,0,27),40,100,111,53,56,54,32,105,53,56,56,32,107,53,56,57,32,108,53,57,48,32,116,53,57,49,41,0,0,0};
static C_char C_TLS li105[] C_aligned={C_lihdr(0,0,34),40,115,99,97,108,101,32,108,101,110,53,55,56,32,107,101,121,110,117,109,53,55,57,32,46,32,97,114,103,115,53,56,48,41,0,0};
static C_char C_TLS li106[] C_aligned={C_lihdr(0,0,14),40,114,97,110,32,46,32,110,117,109,53,57,56,41,0,0,0,0,0,0};
static C_char C_TLS li107[] C_aligned={C_lihdr(0,0,19),40,98,101,116,119,101,101,110,32,97,54,48,48,32,98,54,48,49,41,0,0,0};
static C_char C_TLS li108[] C_aligned={C_lihdr(0,0,16),40,112,105,99,107,32,46,32,97,114,103,115,54,48,50,41};
static C_char C_TLS li109[] C_aligned={C_lihdr(0,0,21),40,111,100,100,115,32,110,54,48,51,32,46,32,97,114,103,115,54,48,52,41,0,0,0,0,0};
static C_char C_TLS li110[] C_aligned={C_lihdr(0,0,30),40,118,97,114,121,49,32,118,97,108,54,53,48,32,118,97,114,105,54,53,49,32,109,111,100,101,54,53,50,41,0,0,0,0,0,0};
static C_char C_TLS li111[] C_aligned={C_lihdr(0,0,13),40,97,49,48,48,53,53,32,118,54,53,55,41,0,0,0,0,0};
static C_char C_TLS li112[] C_aligned={C_lihdr(0,0,31),40,118,97,114,121,32,118,97,108,54,52,54,32,118,97,114,105,54,52,55,32,46,32,109,111,100,101,54,52,56,41,0,0,0,0,0,0,0};
static C_char C_TLS li113[] C_aligned={C_lihdr(0,0,22),40,100,111,54,54,51,32,105,54,54,53,32,106,54,54,54,32,118,54,54,55,41,0,0,0,0,0,0};
static C_char C_TLS li114[] C_aligned={C_lihdr(0,0,15),40,115,104,117,102,102,108,101,33,32,108,54,54,49,41,0,0,0,0,0,0,0};
static C_char C_TLS li115[] C_aligned={C_lihdr(0,0,19),40,115,104,117,102,102,108,101,32,46,32,97,114,103,115,54,55,50,41,0,0,0};
static C_char C_TLS li116[] C_aligned={C_lihdr(0,0,19),40,114,97,110,98,101,116,97,32,46,32,97,114,103,115,54,55,51,41,0,0,0};
static C_char C_TLS li117[] C_aligned={C_lihdr(0,0,18),40,114,97,110,101,120,112,32,46,32,97,114,103,115,55,49,54,41,0,0};
static C_char C_TLS li118[] C_aligned={C_lihdr(0,0,20),40,114,97,110,103,97,117,115,115,32,46,32,97,114,103,115,55,49,55,41,0,0,0,0};
static C_char C_TLS li119[] C_aligned={C_lihdr(0,0,22),40,114,97,110,112,111,105,115,115,111,110,32,46,32,97,114,103,115,55,49,56,41,0,0,0,0,0,0};
static C_char C_TLS li120[] C_aligned={C_lihdr(0,0,20),40,114,97,110,103,97,109,109,97,32,46,32,97,114,103,115,55,49,57,41,0,0,0,0};
static C_char C_TLS li121[] C_aligned={C_lihdr(0,0,12),40,100,111,55,51,49,32,105,55,51,51,41,0,0,0,0};
static C_char C_TLS li122[] C_aligned={C_lihdr(0,0,15),40,100,111,55,52,55,32,116,97,105,108,55,52,57,41,0,0,0,0,0,0,0};
static C_char C_TLS li123[] C_aligned={C_lihdr(0,0,17),40,100,111,55,52,51,32,105,55,52,53,32,110,55,52,54,41,0};
static C_char C_TLS li124[] C_aligned={C_lihdr(0,0,30),40,115,101,103,115,32,110,117,109,55,50,48,32,115,117,109,55,50,49,32,46,32,97,114,103,115,55,50,50,41,0,0,0,0,0,0};
static C_char C_TLS li125[] C_aligned={C_lihdr(0,0,8),40,97,49,48,55,52,51,41};
static C_char C_TLS li126[] C_aligned={C_lihdr(0,0,8),40,97,49,48,55,53,56,41};
static C_char C_TLS li127[] C_aligned={C_lihdr(0,0,41),40,115,116,114,105,110,103,45,62,110,111,116,101,45,101,110,116,114,121,32,115,116,114,56,48,48,32,111,99,116,56,48,49,32,101,114,114,56,48,50,41,0};
static C_char C_TLS li128[] C_aligned={C_lihdr(0,0,8),40,97,49,48,55,55,51,41};
static C_char C_TLS li129[] C_aligned={C_lihdr(0,0,8),40,97,49,48,55,57,53,41};
static C_char C_TLS li130[] C_aligned={C_lihdr(0,0,34),40,110,111,116,101,45,97,117,120,32,102,114,101,113,56,48,56,32,100,111,99,116,56,48,57,32,101,114,114,63,56,49,48,41,0,0};
static C_char C_TLS li131[] C_aligned={C_lihdr(0,0,39),40,100,111,56,49,51,32,116,97,105,108,56,49,53,32,100,101,102,111,56,49,54,32,116,104,105,115,56,49,55,32,114,101,115,108,56,49,56,41,0,0,0,0,0,0,0};
static C_char C_TLS li132[] C_aligned={C_lihdr(0,0,14),40,110,111,116,101,32,102,114,101,113,56,49,49,41,0,0,0,0,0,0};
static C_char C_TLS li133[] C_aligned={C_lihdr(0,0,39),40,100,111,56,50,55,32,116,97,105,108,56,50,57,32,100,101,102,111,56,51,48,32,116,104,105,115,56,51,49,32,114,101,115,108,56,51,50,41,0,0,0,0,0,0,0};
static C_char C_TLS li134[] C_aligned={C_lihdr(0,0,13),40,107,101,121,32,102,114,101,113,56,50,53,41,0,0,0,0,0};
static C_char C_TLS li135[] C_aligned={C_lihdr(0,0,39),40,100,111,56,52,51,32,116,97,105,108,56,52,53,32,100,101,102,111,56,52,54,32,116,104,105,115,56,52,55,32,114,101,115,108,56,52,56,41,0,0,0,0,0,0,0};
static C_char C_TLS li136[] C_aligned={C_lihdr(0,0,12),40,104,122,32,102,114,101,113,56,52,49,41,0,0,0,0};
static C_char C_TLS li137[] C_aligned={C_lihdr(0,0,9),40,112,99,32,120,56,53,55,41,0};
static C_char C_TLS li138[] C_aligned={C_lihdr(0,0,23),40,100,111,56,54,51,32,116,97,105,108,56,54,53,32,108,97,115,116,56,54,54,41,0,0,0,0,0,0,0};
static C_char C_TLS li139[] C_aligned={C_lihdr(0,0,17),40,105,110,118,107,101,121,115,32,107,101,121,115,56,54,48,41,0};
static C_char C_TLS li140[] C_aligned={C_lihdr(0,0,13),40,97,49,49,51,53,54,32,122,56,55,48,41,0,0,0,0,0};
static C_char C_TLS li141[] C_aligned={C_lihdr(0,0,13),40,105,110,118,101,114,116,32,120,56,53,56,41,0,0,0,0,0};
static C_char C_TLS li142[] C_aligned={C_lihdr(0,0,23),40,100,111,56,55,56,32,116,97,105,108,56,56,48,32,108,97,115,116,56,56,49,41,0,0,0,0,0,0,0};
static C_char C_TLS li143[] C_aligned={C_lihdr(0,0,28),40,116,114,97,110,115,112,107,101,121,115,32,107,101,121,115,56,55,53,32,111,114,105,103,56,55,54,41,0,0,0,0};
static C_char C_TLS li144[] C_aligned={C_lihdr(0,0,13),40,97,49,49,53,48,57,32,122,56,56,53,41,0,0,0,0,0};
static C_char C_TLS li145[] C_aligned={C_lihdr(0,0,21),40,116,114,97,110,115,112,111,115,101,32,120,56,55,49,32,121,56,55,50,41,0,0,0,0,0};
static C_char C_TLS li146[] C_aligned={C_lihdr(0,0,18),40,97,49,49,53,55,50,32,97,56,56,56,32,98,56,56,57,41,0,0};
static C_char C_TLS li147[] C_aligned={C_lihdr(0,0,18),40,97,49,49,54,51,48,32,97,56,57,48,32,98,56,57,49,41,0,0};
static C_char C_TLS li148[] C_aligned={C_lihdr(0,0,32),40,115,99,97,108,101,45,111,114,100,101,114,32,115,99,97,108,101,56,56,54,32,46,32,109,111,100,101,56,56,55,41};
static C_char C_TLS li149[] C_aligned={C_lihdr(0,0,48),40,109,97,107,101,45,115,112,101,99,116,114,117,109,32,116,105,109,101,57,55,55,32,115,105,122,101,57,55,56,32,102,114,101,113,115,57,55,57,32,97,109,112,115,57,56,48,41};
static C_char C_TLS li150[] C_aligned={C_lihdr(0,0,16),40,115,112,101,99,116,114,117,109,63,32,120,57,56,49,41};
static C_char C_TLS li151[] C_aligned={C_lihdr(0,0,20),40,115,112,101,99,116,114,117,109,45,116,105,109,101,32,120,57,56,53,41,0,0,0,0};
static C_char C_TLS li152[] C_aligned={C_lihdr(0,0,32),40,115,112,101,99,116,114,117,109,45,115,105,122,101,45,115,101,116,33,32,120,57,56,56,32,118,97,108,57,56,57,41};
static C_char C_TLS li153[] C_aligned={C_lihdr(0,0,20),40,115,112,101,99,116,114,117,109,45,115,105,122,101,32,120,57,57,49,41,0,0,0,0};
static C_char C_TLS li154[] C_aligned={C_lihdr(0,0,33),40,115,112,101,99,116,114,117,109,45,102,114,101,113,115,45,115,101,116,33,32,120,57,57,52,32,118,97,108,57,57,53,41,0};
static C_char C_TLS li155[] C_aligned={C_lihdr(0,0,21),40,115,112,101,99,116,114,117,109,45,102,114,101,113,115,32,120,57,57,55,41,0,0,0,0,0};
static C_char C_TLS li156[] C_aligned={C_lihdr(0,0,34),40,115,112,101,99,116,114,117,109,45,97,109,112,115,45,115,101,116,33,32,120,49,48,48,48,32,118,97,108,49,48,48,49,41,0,0};
static C_char C_TLS li157[] C_aligned={C_lihdr(0,0,21),40,115,112,101,99,116,114,117,109,45,97,109,112,115,32,120,49,48,48,51,41,0,0,0,0,0};
static C_char C_TLS li158[] C_aligned={C_lihdr(0,0,28),40,115,112,101,99,116,114,117,109,45,99,111,112,121,32,115,112,101,99,116,114,117,109,49,48,49,51,41,0,0,0,0};
static C_char C_TLS li159[] C_aligned={C_lihdr(0,0,14),40,100,111,49,48,50,48,32,105,49,48,50,50,41,0,0,0,0,0,0};
static C_char C_TLS li160[] C_aligned={C_lihdr(0,0,29),40,115,112,101,99,116,114,117,109,45,112,97,105,114,115,32,115,112,101,99,116,114,117,109,49,48,49,52,41,0,0,0,0,0};
static C_char C_TLS li161[] C_aligned={C_lihdr(0,0,31),40,115,112,101,99,116,114,117,109,45,109,105,110,102,114,101,113,32,115,112,101,99,116,114,117,109,49,48,50,54,41,0,0,0,0,0,0,0};
static C_char C_TLS li162[] C_aligned={C_lihdr(0,0,31),40,115,112,101,99,116,114,117,109,45,109,97,120,102,114,101,113,32,115,112,101,99,116,114,117,109,49,48,50,55,41,0,0,0,0,0,0,0};
static C_char C_TLS li163[] C_aligned={C_lihdr(0,0,14),40,97,49,49,57,50,54,32,97,49,48,51,49,41,0,0,0,0,0,0};
static C_char C_TLS li164[] C_aligned={C_lihdr(0,0,30),40,115,112,101,99,116,114,117,109,45,109,105,110,97,109,112,32,115,112,101,99,116,114,117,109,49,48,50,56,41,0,0,0,0,0,0};
static C_char C_TLS li165[] C_aligned={C_lihdr(0,0,14),40,97,49,49,57,53,55,32,97,49,48,51,56,41,0,0,0,0,0,0};
static C_char C_TLS li166[] C_aligned={C_lihdr(0,0,30),40,115,112,101,99,116,114,117,109,45,109,97,120,97,109,112,32,115,112,101,99,116,114,117,109,49,48,51,53,41,0,0,0,0,0,0};
static C_char C_TLS li167[] C_aligned={C_lihdr(0,0,8),40,100,111,49,48,53,55,41};
static C_char C_TLS li168[] C_aligned={C_lihdr(0,0,8),40,100,111,49,48,54,49,41};
static C_char C_TLS li169[] C_aligned={C_lihdr(0,0,15),40,102,95,49,49,57,56,55,32,104,49,48,53,53,41,0,0,0,0,0,0,0};
static C_char C_TLS li170[] C_aligned={C_lihdr(0,0,15),40,102,95,49,50,48,53,57,32,107,49,48,54,53,41,0,0,0,0,0,0,0};
static C_char C_TLS li171[] C_aligned={C_lihdr(0,0,15),40,102,95,49,50,48,57,50,32,104,49,48,54,57,41,0,0,0,0,0,0,0};
static C_char C_TLS li172[] C_aligned={C_lihdr(0,0,15),40,102,95,49,50,49,48,50,32,104,49,48,55,48,41,0,0,0,0,0,0,0};
static C_char C_TLS li173[] C_aligned={C_lihdr(0,0,20),40,97,49,50,49,53,54,32,97,49,48,55,52,32,98,49,48,55,53,41,0,0,0,0};
static C_char C_TLS li174[] C_aligned={C_lihdr(0,0,20),40,97,49,50,49,55,49,32,97,49,48,55,54,32,98,49,48,55,55,41,0,0,0,0};
static C_char C_TLS li175[] C_aligned={C_lihdr(0,0,39),40,115,112,101,99,116,114,117,109,45,107,101,121,115,32,115,112,101,99,116,114,117,109,49,48,56,57,32,46,32,97,114,103,115,49,48,57,48,41,0,0,0,0,0,0,0};
static C_char C_TLS li176[] C_aligned={C_lihdr(0,0,35),40,100,111,49,51,52,56,32,116,97,105,108,49,51,53,48,32,115,105,122,101,49,51,53,49,32,97,109,112,108,49,51,53,50,41,0,0,0};
static C_char C_TLS li177[] C_aligned={C_lihdr(0,0,26),40,100,111,49,51,50,54,32,105,49,51,50,56,32,102,49,51,50,57,32,120,49,51,51,48,41,0,0};
static C_char C_TLS li178[] C_aligned={C_lihdr(0,0,24),40,100,111,49,51,50,48,32,110,101,103,49,51,50,50,32,112,111,115,49,51,50,51,41};
static C_char C_TLS li179[] C_aligned={C_lihdr(0,0,24),40,102,95,56,52,53,55,32,97,52,50,54,52,50,57,32,97,52,50,53,52,51,48,41};
static C_char C_TLS li180[] C_aligned={C_lihdr(0,0,26),40,100,111,49,51,48,56,32,107,49,51,49,48,32,102,49,51,49,49,32,97,49,51,49,50,41,0,0};
static C_char C_TLS li181[] C_aligned={C_lihdr(0,0,46),40,102,109,45,115,112,101,99,116,114,117,109,32,99,97,114,114,105,101,114,49,51,48,48,32,109,114,97,116,105,111,49,51,48,49,32,105,110,100,101,120,49,51,48,50,41,0,0,0,0,0,0};
static C_char C_TLS li182[] C_aligned={C_lihdr(0,0,47),40,100,111,49,51,56,54,32,102,114,101,113,115,49,51,56,56,32,97,109,112,115,49,51,56,57,32,108,97,115,116,102,49,51,57,48,32,108,97,115,116,97,49,51,57,49,41,0,0,0,0,0,0,0};
static C_char C_TLS li183[] C_aligned={C_lihdr(0,0,41),40,115,112,101,99,116,114,117,109,45,97,100,100,33,32,115,112,101,99,49,51,56,51,32,102,114,101,113,49,51,56,52,32,97,109,112,49,51,56,53,41,0};
static C_char C_TLS li184[] C_aligned={C_lihdr(0,0,16),40,103,101,116,102,114,101,113,115,32,115,49,52,49,51,41};
static C_char C_TLS li185[] C_aligned={C_lihdr(0,0,15),40,103,101,116,97,109,112,115,32,115,49,52,49,52,41,0,0,0,0,0,0,0};
static C_char C_TLS li186[] C_aligned={C_lihdr(0,0,36),40,115,117,109,115,45,97,110,100,45,100,105,102,102,115,32,115,49,52,49,53,32,102,49,49,52,49,54,32,102,50,49,52,49,56,41,0,0,0,0};
static C_char C_TLS li187[] C_aligned={C_lihdr(0,0,15),40,100,111,49,52,50,57,32,108,49,49,52,51,49,41,0,0,0,0,0,0,0};
static C_char C_TLS li188[] C_aligned={C_lihdr(0,0,15),40,100,111,49,52,50,54,32,108,50,49,52,50,56,41,0,0,0,0,0,0,0};
static C_char C_TLS li189[] C_aligned={C_lihdr(0,0,15),40,100,111,49,52,51,54,32,108,49,49,52,51,56,41,0,0,0,0,0,0,0};
static C_char C_TLS li190[] C_aligned={C_lihdr(0,0,15),40,100,111,49,52,52,49,32,115,50,49,52,52,51,41,0,0,0,0,0,0,0};
static C_char C_TLS li191[] C_aligned={C_lihdr(0,0,33),40,114,109,45,115,112,101,99,116,114,117,109,32,115,112,101,99,49,49,52,48,56,32,115,112,101,99,50,49,52,48,57,41,0};
static C_char C_TLS li192[] C_aligned={C_lihdr(0,0,44),40,100,111,49,52,52,56,32,109,97,120,102,49,52,53,48,32,109,105,110,102,49,52,53,49,32,116,97,105,108,49,52,53,50,32,102,108,105,112,49,52,53,51,41,0,0,0,0};
static C_char C_TLS li193[] C_aligned={C_lihdr(0,0,25),40,115,112,101,99,116,114,117,109,45,102,108,105,112,33,32,115,112,101,99,49,52,52,55,41,0};
static C_char C_TLS li194[] C_aligned={C_lihdr(0,0,17),40,100,111,49,52,54,55,32,116,97,105,108,49,52,54,57,41,0};
static C_char C_TLS li195[] C_aligned={C_lihdr(0,0,17),40,100,111,49,52,55,50,32,116,97,105,108,49,52,55,52,41,0};
static C_char C_TLS li196[] C_aligned={C_lihdr(0,0,26),40,100,111,49,51,55,48,32,116,97,105,108,49,51,55,50,32,97,109,112,108,49,51,55,51,41,0,0};
static C_char C_TLS li197[] C_aligned={C_lihdr(0,0,20),40,97,49,52,48,52,55,32,97,49,51,54,54,32,98,49,51,54,55,41,0,0,0,0};
static C_char C_TLS li198[] C_aligned={C_lihdr(0,0,20),40,97,49,52,48,54,49,32,97,49,51,54,52,32,98,49,51,54,53,41,0,0,0,0};
static C_char C_TLS li199[] C_aligned={C_lihdr(0,0,17),40,100,111,49,52,57,52,32,116,97,105,108,49,52,57,54,41,0};
static C_char C_TLS li200[] C_aligned={C_lihdr(0,0,17),40,100,111,49,52,57,57,32,116,97,105,108,49,53,48,49,41,0};
static C_char C_TLS li201[] C_aligned={C_lihdr(0,0,17),40,100,111,49,52,56,53,32,116,97,105,108,49,52,56,55,41,0};
static C_char C_TLS li202[] C_aligned={C_lihdr(0,0,48),40,115,112,101,99,116,114,117,109,45,114,101,115,99,97,108,101,33,32,115,112,101,99,49,52,53,55,32,109,111,100,101,49,52,53,56,32,46,32,97,114,103,115,49,52,53,57,41};
static C_char C_TLS li203[] C_aligned={C_lihdr(0,0,12),40,114,104,100,114,32,112,49,53,52,48,41,0,0,0,0};
static C_char C_TLS li204[] C_aligned={C_lihdr(0,0,12),40,114,100,97,116,32,112,49,53,49,57,41,0,0,0,0};
static C_char C_TLS li205[] C_aligned={C_lihdr(0,0,26),40,100,111,49,53,50,50,32,105,49,53,50,52,32,97,49,53,50,53,32,102,49,53,50,54,41,0,0};
static C_char C_TLS li206[] C_aligned={C_lihdr(0,0,26),40,100,111,49,53,53,51,32,108,105,110,101,49,53,53,53,32,115,112,101,99,49,53,53,54,41,0,0};
static C_char C_TLS li207[] C_aligned={C_lihdr(0,0,8),40,100,111,49,53,52,51,41};
static C_char C_TLS li208[] C_aligned={C_lihdr(0,0,8),40,97,49,53,48,52,50,41};
static C_char C_TLS li209[] C_aligned={C_lihdr(0,0,30),40,105,109,112,111,114,116,45,115,112,101,97,114,45,102,114,97,109,101,115,32,102,105,108,101,49,53,51,54,41,0,0,0,0,0,0};
static C_char C_TLS li210[] C_aligned={C_lihdr(0,0,36),40,100,111,49,53,55,56,32,102,114,101,113,115,49,53,56,48,32,97,109,112,115,49,53,56,49,32,115,105,122,101,49,53,56,50,41,0,0,0,0};
static C_char C_TLS li211[] C_aligned={C_lihdr(0,0,27),40,100,111,49,53,55,50,32,116,97,105,108,49,53,55,52,32,99,111,117,110,116,49,53,55,53,41,0,0,0};
static C_char C_TLS li212[] C_aligned={C_lihdr(0,0,8),40,97,49,53,49,55,55,41};
static C_char C_TLS li213[] C_aligned={C_lihdr(0,0,17),40,100,111,49,53,54,54,32,116,97,105,108,49,53,54,56,41,0};
static C_char C_TLS li214[] C_aligned={C_lihdr(0,0,41),40,101,120,112,111,114,116,45,115,112,101,97,114,45,102,114,97,109,101,115,32,102,114,97,109,101,115,49,53,54,50,32,102,105,108,101,49,53,54,51,41,0};
static C_char C_TLS li215[] C_aligned={C_lihdr(0,0,75),40,109,97,107,101,45,112,101,114,105,111,100,32,99,111,117,110,116,49,54,49,52,32,108,101,110,103,116,104,49,54,49,53,32,115,116,114,101,97,109,49,54,49,54,32,100,101,102,97,117,108,116,49,54,49,55,32,111,109,105,116,49,54,49,56,32,114,101,112,115,49,54,49,57,41,0,0,0};
static C_char C_TLS li216[] C_aligned={C_lihdr(0,0,33),40,112,101,114,105,111,100,45,99,111,117,110,116,45,115,101,116,33,32,120,49,54,50,49,32,118,97,108,49,54,50,50,41,0};
static C_char C_TLS li217[] C_aligned={C_lihdr(0,0,20),40,112,101,114,105,111,100,45,99,111,117,110,116,32,120,49,54,50,52,41,0,0,0,0};
static C_char C_TLS li218[] C_aligned={C_lihdr(0,0,21),40,112,101,114,105,111,100,45,108,101,110,103,116,104,32,120,49,54,51,48,41,0,0,0,0,0};
static C_char C_TLS li219[] C_aligned={C_lihdr(0,0,21),40,112,101,114,105,111,100,45,115,116,114,101,97,109,32,120,49,54,51,54,41,0,0,0,0,0};
static C_char C_TLS li220[] C_aligned={C_lihdr(0,0,32),40,112,101,114,105,111,100,45,111,109,105,116,45,115,101,116,33,32,120,49,54,52,53,32,118,97,108,49,54,52,54,41};
static C_char C_TLS li221[] C_aligned={C_lihdr(0,0,19),40,112,101,114,105,111,100,45,111,109,105,116,32,120,49,54,52,56,41,0,0,0};
static C_char C_TLS li222[] C_aligned={C_lihdr(0,0,19),40,112,101,114,105,111,100,45,114,101,112,115,32,120,49,54,53,52,41,0,0,0};
static C_char C_TLS li223[] C_aligned={C_lihdr(0,0,16),40,112,97,116,116,101,114,110,63,32,120,49,54,56,48,41};
static C_char C_TLS li224[] C_aligned={C_lihdr(0,0,21),40,112,97,116,116,101,114,110,45,102,108,97,103,115,32,120,49,54,56,52,41,0,0,0,0,0};
static C_char C_TLS li225[] C_aligned={C_lihdr(0,0,33),40,112,97,116,116,101,114,110,45,100,97,116,97,45,115,101,116,33,32,120,49,54,56,55,32,118,97,108,49,54,56,56,41,0};
static C_char C_TLS li226[] C_aligned={C_lihdr(0,0,20),40,112,97,116,116,101,114,110,45,100,97,116,97,32,120,49,54,57,48,41,0,0,0,0};
static C_char C_TLS li227[] C_aligned={C_lihdr(0,0,22),40,112,97,116,116,101,114,110,45,108,101,110,103,116,104,32,120,49,54,57,54,41,0,0,0,0,0,0};
static C_char C_TLS li228[] C_aligned={C_lihdr(0,0,34),40,112,97,116,116,101,114,110,45,100,97,116,117,109,45,115,101,116,33,32,120,49,54,57,57,32,118,97,108,49,55,48,48,41,0,0};
static C_char C_TLS li229[] C_aligned={C_lihdr(0,0,21),40,112,97,116,116,101,114,110,45,100,97,116,117,109,32,120,49,55,48,50,41,0,0,0,0,0};
static C_char C_TLS li230[] C_aligned={C_lihdr(0,0,22),40,112,97,116,116,101,114,110,45,112,101,114,105,111,100,32,120,49,55,48,56,41,0,0,0,0,0,0};
static C_char C_TLS li231[] C_aligned={C_lihdr(0,0,34),40,112,97,116,116,101,114,110,45,118,97,108,117,101,45,115,101,116,33,32,120,49,55,49,49,32,118,97,108,49,55,49,50,41,0,0};
static C_char C_TLS li232[] C_aligned={C_lihdr(0,0,15),40,102,95,49,53,54,50,48,32,120,49,55,49,52,41,0,0,0,0,0,0,0};
static C_char C_TLS li233[] C_aligned={C_lihdr(0,0,34),40,112,97,116,116,101,114,110,45,115,116,97,116,101,45,115,101,116,33,32,120,49,55,49,55,32,118,97,108,49,55,49,56,41,0,0};
static C_char C_TLS li234[] C_aligned={C_lihdr(0,0,21),40,112,97,116,116,101,114,110,45,115,116,97,116,101,32,120,49,55,50,48,41,0,0,0,0,0};
static C_char C_TLS li235[] C_aligned={C_lihdr(0,0,34),40,112,97,116,116,101,114,110,45,99,97,99,104,101,45,115,101,116,33,32,120,49,55,53,57,32,118,97,108,49,55,54,48,41,0,0};
static C_char C_TLS li236[] C_aligned={C_lihdr(0,0,21),40,112,97,116,116,101,114,110,45,99,97,99,104,101,32,120,49,55,54,50,41,0,0,0,0,0};
static C_char C_TLS li237[] C_aligned={C_lihdr(0,0,16),40,37,97,108,108,111,99,45,112,97,116,116,101,114,110,41};
static C_char C_TLS li238[] C_aligned={C_lihdr(0,0,14),40,97,49,53,57,57,56,32,120,49,55,57,50,41,0,0,0,0,0,0};
static C_char C_TLS li239[] C_aligned={C_lihdr(0,0,98),40,105,110,105,116,105,97,108,105,122,101,45,112,97,116,116,101,114,110,32,111,98,106,49,55,56,50,32,100,97,116,97,49,55,56,51,32,102,111,114,49,55,56,52,32,114,101,112,49,55,56,53,32,102,108,97,103,115,49,55,56,54,32,108,101,110,49,55,56,55,32,100,112,101,114,49,55,56,56,32,103,101,116,114,49,55,56,57,32,109,97,112,114,49,55,57,48,41,0,0};
static C_char C_TLS li240[] C_aligned={C_lihdr(0,0,12),40,101,111,112,63,32,120,49,56,49,55,41,0,0,0,0};
static C_char C_TLS li241[] C_aligned={C_lihdr(0,0,12),40,101,111,100,63,32,120,49,56,49,56,41,0,0,0,0};
static C_char C_TLS li242[] C_aligned={C_lihdr(0,0,20),40,100,111,49,56,50,51,32,105,49,56,50,53,32,101,49,56,50,54,41,0,0,0,0};
static C_char C_TLS li243[] C_aligned={C_lihdr(0,0,26),40,100,111,49,56,51,48,32,110,49,56,51,50,32,101,49,56,51,51,32,102,49,56,51,52,41,0,0};
static C_char C_TLS li244[] C_aligned={C_lihdr(0,0,25),40,110,101,120,116,32,111,98,106,49,56,49,57,32,46,32,97,114,103,115,49,56,50,48,41,0};
static C_char C_TLS li245[] C_aligned={C_lihdr(0,0,8),40,100,111,49,56,53,56,41};
static C_char C_TLS li246[] C_aligned={C_lihdr(0,0,26),40,100,111,49,56,53,52,32,100,121,110,63,49,56,53,54,32,115,116,111,112,49,56,53,55,41,0,0};
static C_char C_TLS li247[] C_aligned={C_lihdr(0,0,16),40,110,101,120,116,45,49,32,111,98,106,49,56,52,48,41};
static C_char C_TLS li248[] C_aligned={C_lihdr(0,0,25),40,110,101,120,116,45,105,110,45,112,97,116,116,101,114,110,32,111,98,106,49,56,55,56,41,0};
static C_char C_TLS li249[] C_aligned={C_lihdr(0,0,33),40,109,97,112,45,112,97,116,116,101,114,110,45,100,97,116,97,32,102,110,49,56,55,57,32,111,98,106,49,56,56,48,41,0};
static C_char C_TLS li250[] C_aligned={C_lihdr(0,0,14),40,97,49,54,53,55,52,32,120,49,56,56,57,41,0,0,0,0,0,0};
static C_char C_TLS li251[] C_aligned={C_lihdr(0,0,22),40,114,101,115,101,116,45,112,101,114,105,111,100,32,111,98,106,49,56,56,52,41,0,0,0,0,0,0};
static C_char C_TLS li252[] C_aligned={C_lihdr(0,0,23),40,97,49,54,54,54,56,32,102,110,49,57,52,49,32,111,98,106,49,57,52,50,41,0,0,0,0,0,0,0};
static C_char C_TLS li253[] C_aligned={C_lihdr(0,0,32),40,109,97,107,101,45,99,121,99,108,101,32,100,97,116,97,49,56,57,56,32,46,32,97,114,103,115,49,56,57,57,41};
static C_char C_TLS li254[] C_aligned={C_lihdr(0,0,23),40,110,101,120,116,45,105,110,45,99,121,99,108,101,32,111,98,106,49,57,52,56,41,0,0,0,0,0,0,0};
static C_char C_TLS li255[] C_aligned={C_lihdr(0,0,17),40,112,97,108,105,110,45,108,101,110,32,120,49,57,54,56,41,0};
static C_char C_TLS li256[] C_aligned={C_lihdr(0,0,30),40,112,97,108,105,110,45,105,110,99,45,115,101,116,33,32,120,49,57,55,49,32,118,97,108,49,57,55,50,41,0,0,0,0,0,0};
static C_char C_TLS li257[] C_aligned={C_lihdr(0,0,23),40,97,49,55,48,57,56,32,102,110,50,48,54,57,32,111,98,106,50,48,55,48,41,0,0,0,0,0,0,0};
static C_char C_TLS li258[] C_aligned={C_lihdr(0,0,37),40,109,97,107,101,45,112,97,108,105,110,100,114,111,109,101,32,100,97,116,97,49,57,57,55,32,46,32,97,114,103,115,49,57,57,56,41,0,0,0,0,0};
static C_char C_TLS li259[] C_aligned={C_lihdr(0,0,28),40,110,101,120,116,45,105,110,45,112,97,108,105,110,100,114,111,109,101,32,111,98,106,50,48,55,56,41,0,0,0,0};
static C_char C_TLS li260[] C_aligned={C_lihdr(0,0,23),40,97,49,55,55,54,53,32,102,110,50,49,52,48,32,111,98,106,50,49,52,49,41,0,0,0,0,0,0,0};
static C_char C_TLS li261[] C_aligned={C_lihdr(0,0,31),40,109,97,107,101,45,108,105,110,101,32,100,97,116,97,50,48,57,55,32,46,32,97,114,103,115,50,48,57,56,41,0,0,0,0,0,0,0};
static C_char C_TLS li262[] C_aligned={C_lihdr(0,0,22),40,110,101,120,116,45,105,110,45,108,105,110,101,32,111,98,106,50,49,52,55,41,0,0,0,0,0,0};
static C_char C_TLS li263[] C_aligned={C_lihdr(0,0,23),40,97,49,56,48,53,50,32,102,110,50,49,57,53,32,111,98,106,50,49,57,54,41,0,0,0,0,0,0,0};
static C_char C_TLS li264[] C_aligned={C_lihdr(0,0,31),40,109,97,107,101,45,104,101,97,112,32,100,97,116,97,50,49,53,50,32,46,32,97,114,103,115,50,49,53,51,41,0,0,0,0,0,0,0};
static C_char C_TLS li265[] C_aligned={C_lihdr(0,0,26),40,100,111,50,50,48,54,32,105,50,50,48,56,32,106,50,50,48,57,32,118,50,50,49,48,41,0,0};
static C_char C_TLS li266[] C_aligned={C_lihdr(0,0,22),40,110,101,120,116,45,105,110,45,104,101,97,112,32,111,98,106,50,50,48,50,41,0,0,0,0,0,0};
static C_char C_TLS li267[] C_aligned={C_lihdr(0,0,23),40,97,49,56,51,57,55,32,102,110,50,50,57,48,32,111,98,106,50,50,57,49,41,0,0,0,0,0,0,0};
static C_char C_TLS li268[] C_aligned={C_lihdr(0,0,35),40,109,97,107,101,45,114,111,116,97,116,105,111,110,32,100,97,116,97,50,50,49,56,32,46,32,97,114,103,115,50,50,49,57,41,0,0,0};
static C_char C_TLS li269[] C_aligned={C_lihdr(0,0,14),40,100,111,50,51,48,54,32,105,50,51,48,56,41,0,0,0,0,0,0};
static C_char C_TLS li270[] C_aligned={C_lihdr(0,0,61),40,114,111,116,97,116,101,45,105,116,101,109,115,32,105,116,101,109,115,50,51,48,49,32,115,116,97,114,116,50,51,48,50,32,115,116,101,112,50,51,48,51,32,119,105,100,116,104,50,51,48,52,32,101,110,100,50,51,48,53,41,0,0,0,0,0};
static C_char C_TLS li271[] C_aligned={C_lihdr(0,0,26),40,110,101,120,116,45,105,110,45,114,111,116,97,116,105,111,110,32,111,98,106,50,50,57,57,41,0,0};
static C_char C_TLS li272[] C_aligned={C_lihdr(0,0,25),40,114,97,110,100,111,109,45,105,116,101,109,45,100,97,116,117,109,32,120,50,51,51,51,41,0};
static C_char C_TLS li273[] C_aligned={C_lihdr(0,0,38),40,114,97,110,100,111,109,45,105,116,101,109,45,105,110,100,101,120,45,115,101,116,33,32,120,50,51,51,54,32,118,97,108,50,51,51,55,41,0,0,0,0,0,0};
static C_char C_TLS li274[] C_aligned={C_lihdr(0,0,25),40,114,97,110,100,111,109,45,105,116,101,109,45,105,110,100,101,120,32,120,50,51,51,57,41,0};
static C_char C_TLS li275[] C_aligned={C_lihdr(0,0,26),40,114,97,110,100,111,109,45,105,116,101,109,45,119,101,105,103,104,116,32,120,50,51,52,53,41,0,0};
static C_char C_TLS li276[] C_aligned={C_lihdr(0,0,23),40,114,97,110,100,111,109,45,105,116,101,109,45,109,105,110,32,120,50,51,53,49,41,0,0,0,0,0,0,0};
static C_char C_TLS li277[] C_aligned={C_lihdr(0,0,23),40,114,97,110,100,111,109,45,105,116,101,109,45,109,97,120,32,120,50,51,53,55,41,0,0,0,0,0,0,0};
static C_char C_TLS li278[] C_aligned={C_lihdr(0,0,38),40,114,97,110,100,111,109,45,105,116,101,109,45,99,111,117,110,116,45,115,101,116,33,32,120,50,51,54,48,32,118,97,108,50,51,54,49,41,0,0,0,0,0,0};
static C_char C_TLS li279[] C_aligned={C_lihdr(0,0,25),40,114,97,110,100,111,109,45,105,116,101,109,45,99,111,117,110,116,32,120,50,51,54,51,41,0};
static C_char C_TLS li280[] C_aligned={C_lihdr(0,0,14),40,97,49,57,50,56,50,32,105,50,52,52,54,41,0,0,0,0,0,0};
static C_char C_TLS li281[] C_aligned={C_lihdr(0,0,23),40,97,49,57,50,55,54,32,102,110,50,52,52,52,32,111,98,106,50,52,52,53,41,0,0,0,0,0,0,0};
static C_char C_TLS li282[] C_aligned={C_lihdr(0,0,17),40,97,49,57,53,49,51,32,105,116,101,109,50,51,57,57,41,0};
static C_char C_TLS li283[] C_aligned={C_lihdr(0,0,25),40,37,109,97,107,101,45,114,97,110,100,111,109,45,105,116,101,109,32,119,50,52,53,55,41,0};
static C_char C_TLS li284[] C_aligned={C_lihdr(0,0,36),40,109,97,107,101,45,119,101,105,103,104,116,105,110,103,32,100,97,116,97,50,51,56,57,32,46,32,97,114,103,115,50,51,57,48,41,0,0,0,0};
static C_char C_TLS li285[] C_aligned={C_lihdr(0,0,37),40,100,111,50,53,52,52,32,116,97,105,108,50,53,52,54,32,105,110,100,101,120,50,53,52,55,32,116,111,116,97,108,50,53,52,56,41,0,0,0,0,0};
static C_char C_TLS li286[] C_aligned={C_lihdr(0,0,17),40,100,111,50,53,51,56,32,116,97,105,108,50,53,52,48,41,0};
static C_char C_TLS li287[] C_aligned={C_lihdr(0,0,36),40,114,101,99,97,108,99,45,119,101,105,103,104,116,105,110,103,115,32,111,98,106,50,53,51,52,32,102,105,120,63,50,53,51,53,41,0,0,0,0};
static C_char C_TLS li288[] C_aligned={C_lihdr(0,0,27),40,100,111,50,53,54,54,32,116,97,105,108,50,53,54,56,32,105,110,100,101,120,50,53,54,57,41,0,0,0};
static C_char C_TLS li289[] C_aligned={C_lihdr(0,0,18),40,112,105,99,107,32,99,50,53,54,52,32,114,50,53,54,53,41,0,0};
static C_char C_TLS li290[] C_aligned={C_lihdr(0,0,17),40,100,111,50,53,55,53,32,116,97,105,108,50,53,55,55,41,0};
static C_char C_TLS li291[] C_aligned={C_lihdr(0,0,17),40,100,111,50,53,55,49,32,105,116,101,109,50,53,55,51,41,0};
static C_char C_TLS li292[] C_aligned={C_lihdr(0,0,27),40,110,101,120,116,45,105,110,45,119,101,105,103,104,116,105,110,103,32,111,98,106,50,53,53,52,41,0,0,0};
static C_char C_TLS li293[] C_aligned={C_lihdr(0,0,23),40,97,50,48,53,57,54,32,102,110,50,55,48,51,32,111,98,106,50,55,48,52,41,0,0,0,0,0,0,0};
static C_char C_TLS li294[] C_aligned={C_lihdr(0,0,14),40,97,50,48,51,53,48,32,115,50,54,48,52,41,0,0,0,0,0,0};
static C_char C_TLS li295[] C_aligned={C_lihdr(0,0,8),40,100,111,50,53,57,55,41};
static C_char C_TLS li296[] C_aligned={C_lihdr(0,0,41),40,100,111,50,54,49,57,32,116,97,105,108,50,54,50,49,32,111,114,100,101,114,50,54,50,50,32,108,105,115,50,54,50,51,32,112,50,54,50,52,41,0};
static C_char C_TLS li297[] C_aligned={C_lihdr(0,0,33),40,109,97,107,101,45,109,97,114,107,111,118,32,100,97,116,97,50,54,51,49,32,46,32,97,114,103,115,50,54,51,50,41,0};
static C_char C_TLS li298[] C_aligned={C_lihdr(0,0,17),40,100,111,50,55,50,56,32,116,97,105,108,50,55,51,48,41,0};
static C_char C_TLS li299[] C_aligned={C_lihdr(0,0,33),40,100,111,50,55,49,56,32,116,97,105,108,50,55,50,48,32,111,117,116,50,55,50,49,32,115,117,109,50,55,50,50,41,0};
static C_char C_TLS li300[] C_aligned={C_lihdr(0,0,37),40,115,101,108,101,99,116,45,111,117,116,112,117,116,32,114,97,110,103,101,50,55,49,54,32,111,117,116,112,117,116,115,50,55,49,55,41,0,0,0,0,0};
static C_char C_TLS li301[] C_aligned={C_lihdr(0,0,17),40,100,111,50,55,53,56,32,108,97,115,116,50,55,54,48,41,0};
static C_char C_TLS li302[] C_aligned={C_lihdr(0,0,26),40,100,111,50,55,51,52,32,105,50,55,51,54,32,106,50,55,51,55,32,102,50,55,51,56,41,0,0};
static C_char C_TLS li303[] C_aligned={C_lihdr(0,0,35),40,100,111,50,55,52,57,32,116,97,105,108,50,55,53,49,32,112,97,115,116,50,55,53,50,32,105,116,101,109,50,55,53,51,41,0,0,0};
static C_char C_TLS li304[] C_aligned={C_lihdr(0,0,24),40,110,101,120,116,45,105,110,45,109,97,114,107,111,118,32,111,98,106,50,55,49,51,41};
static C_char C_TLS li305[] C_aligned={C_lihdr(0,0,24),40,103,114,97,112,104,45,110,111,100,101,45,100,97,116,117,109,32,120,50,55,55,56,41};
static C_char C_TLS li306[] C_aligned={C_lihdr(0,0,14),40,97,50,49,52,54,56,32,110,50,56,52,52,41,0,0,0,0,0,0};
static C_char C_TLS li307[] C_aligned={C_lihdr(0,0,23),40,97,50,49,52,54,50,32,102,110,50,56,52,50,32,111,98,106,50,56,52,51,41,0,0,0,0,0,0,0};
static C_char C_TLS li308[] C_aligned={C_lihdr(0,0,28),40,97,50,49,55,49,52,32,105,116,101,109,50,56,53,52,32,46,32,97,114,103,115,50,56,53,53,41,0,0,0,0};
static C_char C_TLS li309[] C_aligned={C_lihdr(0,0,29),40,112,97,114,115,101,45,103,114,97,112,104,45,105,116,101,109,32,101,120,116,101,114,110,50,56,53,51,41,0,0,0,0,0};
static C_char C_TLS li310[] C_aligned={C_lihdr(0,0,32),40,109,97,107,101,45,103,114,97,112,104,32,100,97,116,97,50,55,57,57,32,46,32,97,114,103,115,50,56,48,48,41};
static C_char C_TLS li311[] C_aligned={C_lihdr(0,0,17),40,100,111,50,57,48,56,32,116,97,105,108,50,57,49,48,41,0};
static C_char C_TLS li312[] C_aligned={C_lihdr(0,0,23),40,110,101,120,116,45,105,110,45,103,114,97,112,104,32,111,98,106,50,57,48,49,41,0,0,0,0,0,0,0};
static C_char C_TLS li313[] C_aligned={C_lihdr(0,0,14),40,97,50,50,49,52,49,32,120,50,57,55,52,41,0,0,0,0,0,0};
static C_char C_TLS li314[] C_aligned={C_lihdr(0,0,31),40,97,100,100,45,111,117,116,99,111,109,101,32,112,114,101,118,50,57,55,49,32,110,101,120,116,50,57,55,50,41,0,0,0,0,0,0,0};
static C_char C_TLS li315[] C_aligned={C_lihdr(0,0,14),40,97,50,50,49,56,57,32,122,50,57,56,50,41,0,0,0,0,0,0};
static C_char C_TLS li316[] C_aligned={C_lihdr(0,0,14),40,97,50,50,49,57,57,32,122,50,57,56,49,41,0,0,0,0,0,0};
static C_char C_TLS li317[] C_aligned={C_lihdr(0,0,27),40,98,101,102,111,114,101,63,32,120,50,57,55,54,32,121,50,57,55,55,32,108,50,57,55,56,41,0,0,0};
static C_char C_TLS li318[] C_aligned={C_lihdr(0,0,16),40,97,50,50,50,57,55,32,114,111,119,51,49,48,53,41};
static C_char C_TLS li319[] C_aligned={C_lihdr(0,0,20),40,100,111,51,48,55,57,32,105,51,48,56,49,32,109,51,48,56,50,41,0,0,0,0};
static C_char C_TLS li320[] C_aligned={C_lihdr(0,0,14),40,100,111,51,48,55,50,32,108,51,48,55,52,41,0,0,0,0,0,0};
static C_char C_TLS li321[] C_aligned={C_lihdr(0,0,20),40,100,111,51,48,54,53,32,105,51,48,54,55,32,109,51,48,54,56,41,0,0,0,0};
static C_char C_TLS li322[] C_aligned={C_lihdr(0,0,20),40,100,111,51,48,53,57,32,105,51,48,54,49,32,109,51,48,54,50,41,0,0,0,0};
static C_char C_TLS li323[] C_aligned={C_lihdr(0,0,14),40,100,111,50,57,56,53,32,120,50,57,56,55,41,0,0,0,0,0,0};
static C_char C_TLS li324[] C_aligned={C_lihdr(0,0,17),40,100,111,51,48,53,51,32,116,97,105,108,51,48,53,53,41,0};
static C_char C_TLS li325[] C_aligned={C_lihdr(0,0,20),40,100,111,51,48,52,51,32,105,51,48,52,53,32,109,51,48,52,54,41,0,0,0,0};
static C_char C_TLS li326[] C_aligned={C_lihdr(0,0,14),40,100,111,51,48,51,56,32,108,51,48,52,48,41,0,0,0,0,0,0};
static C_char C_TLS li327[] C_aligned={C_lihdr(0,0,14),40,100,111,51,48,51,51,32,105,51,48,51,53,41,0,0,0,0,0,0};
static C_char C_TLS li328[] C_aligned={C_lihdr(0,0,20),40,97,50,50,53,57,51,32,120,51,48,50,57,32,121,51,48,51,48,41,0,0,0,0};
static C_char C_TLS li329[] C_aligned={C_lihdr(0,0,14),40,100,111,51,48,50,48,32,101,51,48,50,50,41,0,0,0,0,0,0};
static C_char C_TLS li330[] C_aligned={C_lihdr(0,0,20),40,100,111,51,48,49,52,32,101,51,48,49,54,32,115,51,48,49,55,41,0,0,0,0};
static C_char C_TLS li331[] C_aligned={C_lihdr(0,0,25),40,100,111,51,48,48,54,32,116,97,105,108,51,48,48,56,32,108,101,110,51,48,48,57,41,0};
static C_char C_TLS li332[] C_aligned={C_lihdr(0,0,20),40,97,50,50,55,52,50,32,120,51,48,48,52,32,121,51,48,48,53,41,0,0,0,0};
static C_char C_TLS li333[] C_aligned={C_lihdr(0,0,29),40,100,111,50,57,57,51,32,112,114,101,118,50,57,57,53,32,106,50,57,57,54,32,120,50,57,57,55,41,0,0,0,0,0};
static C_char C_TLS li334[] C_aligned={C_lihdr(0,0,14),40,100,111,50,57,57,48,32,105,50,57,57,50,41,0,0,0,0,0,0};
static C_char C_TLS li335[] C_aligned={C_lihdr(0,0,35),40,109,97,114,107,111,118,45,97,110,97,108,121,122,101,32,115,101,113,50,57,49,54,32,46,32,97,114,103,115,50,57,49,55,41,0,0,0};
static C_char C_TLS li336[] C_aligned={C_lihdr(0,0,45),40,109,97,107,101,45,116,111,107,101,110,32,116,121,112,101,51,49,52,57,32,115,116,114,105,110,103,51,49,53,48,32,112,111,115,105,116,105,111,110,51,49,53,49,41,0,0,0,0,0};
static C_char C_TLS li337[] C_aligned={C_lihdr(0,0,18),40,116,111,107,101,110,45,116,121,112,101,32,120,51,49,53,54,41,0,0};
static C_char C_TLS li338[] C_aligned={C_lihdr(0,0,20),40,116,111,107,101,110,45,115,116,114,105,110,103,32,120,51,49,54,50,41,0,0,0,0};
static C_char C_TLS li339[] C_aligned={C_lihdr(0,0,22),40,116,111,107,101,110,45,112,111,115,105,116,105,111,110,32,120,51,49,54,56,41,0,0,0,0,0,0};
static C_char C_TLS li340[] C_aligned={C_lihdr(0,0,19),40,108,105,115,116,45,62,116,111,107,101,110,32,108,51,49,55,55,41,0,0,0};
static C_char C_TLS li341[] C_aligned={C_lihdr(0,0,22),40,102,105,114,115,116,45,116,111,107,101,110,32,116,111,107,115,51,49,55,57,41,0,0,0,0,0,0};
static C_char C_TLS li342[] C_aligned={C_lihdr(0,0,23),40,110,117,108,108,45,116,111,107,101,110,115,63,32,116,111,107,115,51,49,56,49,41,0,0,0,0,0,0,0};
static C_char C_TLS li343[] C_aligned={C_lihdr(0,0,63),40,109,97,107,101,45,114,117,108,101,32,110,97,109,101,51,49,56,50,32,116,121,112,101,51,49,56,51,32,112,97,116,116,101,114,110,51,49,56,52,32,112,97,114,115,101,114,51,49,56,53,32,101,109,105,116,101,114,51,49,56,54,41,0,0,0,0,0,0,0};
static C_char C_TLS li344[] C_aligned={C_lihdr(0,0,17),40,114,117,108,101,45,110,97,109,101,32,120,51,49,57,49,41,0};
static C_char C_TLS li345[] C_aligned={C_lihdr(0,0,26),40,103,101,116,45,114,117,108,101,32,116,121,112,51,50,51,53,32,100,101,102,51,50,51,54,41,0,0};
static C_char C_TLS li346[] C_aligned={C_lihdr(0,0,21),40,112,97,116,116,101,114,110,45,118,97,108,117,101,32,120,51,50,51,56,41,0,0,0,0,0};
static C_char C_TLS li347[] C_aligned={C_lihdr(0,0,23),40,112,97,116,116,101,114,110,45,99,108,97,117,115,101,63,32,120,51,50,51,57,41,0,0,0,0,0,0,0};
static C_char C_TLS li348[] C_aligned={C_lihdr(0,0,20),40,112,97,116,116,101,114,110,45,115,117,98,115,32,120,51,50,52,49,41,0,0,0,0};
static C_char C_TLS li349[] C_aligned={C_lihdr(0,0,21),40,112,97,116,116,101,114,110,45,110,115,117,98,115,32,120,51,50,52,50,41,0,0,0,0,0};
static C_char C_TLS li350[] C_aligned={C_lihdr(0,0,25),40,112,97,116,116,101,114,110,45,115,117,98,32,120,51,50,52,51,32,105,51,50,52,52,41,0};
static C_char C_TLS li351[] C_aligned={C_lihdr(0,0,29),40,112,97,116,116,101,114,110,45,122,101,114,111,45,111,114,45,109,111,114,101,63,32,120,51,50,52,56,41,0,0,0,0,0};
static C_char C_TLS li352[] C_aligned={C_lihdr(0,0,42),40,109,97,107,101,45,112,97,114,115,101,45,101,114,114,111,114,32,115,116,114,105,110,103,51,50,53,48,32,112,111,115,105,116,105,111,110,51,50,53,49,41,0,0};
static C_char C_TLS li353[] C_aligned={C_lihdr(0,0,26),40,112,97,114,115,101,45,101,114,114,111,114,45,115,116,114,105,110,103,32,120,51,50,53,54,41,0,0};
static C_char C_TLS li354[] C_aligned={C_lihdr(0,0,28),40,112,97,114,115,101,45,101,114,114,111,114,45,112,111,115,105,116,105,111,110,32,120,51,50,54,50,41,0,0,0,0};
static C_char C_TLS li355[] C_aligned={C_lihdr(0,0,50),40,109,97,107,101,45,112,97,114,115,101,45,117,110,105,116,32,116,121,112,101,51,50,55,48,32,112,97,114,115,101,100,51,50,55,49,32,112,111,115,105,116,105,111,110,51,50,55,50,41,0,0};
static C_char C_TLS li356[] C_aligned={C_lihdr(0,0,19),40,112,97,114,115,101,45,117,110,105,116,63,32,120,51,50,55,51,41,0,0,0};
static C_char C_TLS li357[] C_aligned={C_lihdr(0,0,23),40,112,97,114,115,101,45,117,110,105,116,45,116,121,112,101,32,120,51,50,55,55,41,0,0,0,0,0,0,0};
static C_char C_TLS li358[] C_aligned={C_lihdr(0,0,25),40,112,97,114,115,101,45,117,110,105,116,45,112,97,114,115,101,100,32,120,51,50,56,51,41,0};
static C_char C_TLS li359[] C_aligned={C_lihdr(0,0,27),40,112,97,114,115,101,45,117,110,105,116,45,112,111,115,105,116,105,111,110,32,120,51,50,56,57,41,0,0,0};
static C_char C_TLS li360[] C_aligned={C_lihdr(0,0,19),40,116,111,107,101,110,45,117,110,105,116,63,32,120,51,50,57,57,41,0,0,0};
static C_char C_TLS li361[] C_aligned={C_lihdr(0,0,33),40,116,111,107,101,110,45,117,110,105,116,45,116,121,112,101,61,63,32,120,51,51,48,48,32,116,121,112,51,51,48,49,41,0};
static C_char C_TLS li362[] C_aligned={C_lihdr(0,0,33),40,103,101,116,45,101,109,105,116,45,105,110,102,111,32,110,97,109,101,51,51,48,51,32,105,110,102,111,51,51,48,52,41,0};
static C_char C_TLS li363[] C_aligned={C_lihdr(0,0,42),40,97,100,100,45,101,109,105,116,45,105,110,102,111,32,110,97,109,101,51,51,48,54,32,100,97,116,97,51,51,48,55,32,105,110,102,111,51,51,48,56,41,0,0};
static C_char C_TLS li364[] C_aligned={C_lihdr(0,0,43),40,115,101,116,45,101,109,105,116,45,105,110,102,111,33,32,110,97,109,101,51,51,49,57,32,100,97,116,97,51,51,50,48,32,105,110,102,111,51,51,50,49,41,0,0,0};
static C_char C_TLS li365[] C_aligned={C_lihdr(0,0,30),40,101,109,105,116,32,120,51,51,50,52,32,105,110,102,111,51,51,50,53,32,101,114,114,102,51,51,50,54,41,0,0,0,0,0,0};
static C_char C_TLS li366[] C_aligned={C_lihdr(0,0,37),40,101,109,105,116,45,108,105,115,116,32,108,105,115,51,51,50,55,32,105,110,102,111,51,51,50,56,32,101,114,114,102,51,51,50,57,41,0,0,0,0,0};
static C_char C_TLS li367[] C_aligned={C_lihdr(0,0,15),40,33,61,32,46,32,110,117,109,115,51,51,51,48,41,0,0,0,0,0,0,0};
static C_char C_TLS li368[] C_aligned={C_lihdr(0,0,27),40,102,95,50,51,57,52,55,32,97,114,103,115,51,51,52,50,32,101,114,114,102,51,51,52,51,41,0,0,0};
static C_char C_TLS li369[] C_aligned={C_lihdr(0,0,29),40,115,105,109,112,108,101,45,117,110,105,116,45,112,97,114,115,101,114,32,116,121,112,101,51,51,52,49,41,0,0,0,0,0};
static C_char C_TLS li370[] C_aligned={C_lihdr(0,0,17),40,100,111,51,51,53,49,32,116,97,105,108,51,51,53,51,41,0};
static C_char C_TLS li371[] C_aligned={C_lihdr(0,0,36),40,102,95,50,51,57,53,53,32,117,110,105,116,51,51,52,53,32,105,110,102,111,51,51,52,54,32,101,114,114,102,51,51,52,55,41,0,0,0,0};
static C_char C_TLS li372[] C_aligned={C_lihdr(0,0,30),40,115,105,109,112,108,101,45,117,110,105,116,45,101,109,105,116,116,101,114,32,102,117,110,99,51,51,52,52,41,0,0,0,0,0,0};
static C_char C_TLS li373[] C_aligned={C_lihdr(0,0,8),40,97,50,52,49,53,51,41};
static C_char C_TLS li374[] C_aligned={C_lihdr(0,0,26),40,97,50,52,49,54,51,32,97,51,51,56,51,32,98,51,51,56,52,32,99,51,51,56,53,41,0,0};
static C_char C_TLS li375[] C_aligned={C_lihdr(0,0,8),40,97,50,52,50,53,57,41};
static C_char C_TLS li376[] C_aligned={C_lihdr(0,0,26),40,97,50,52,50,55,51,32,97,51,51,57,57,32,98,51,52,48,48,32,99,51,52,48,49,41,0,0};
static C_char C_TLS li377[] C_aligned={C_lihdr(0,0,14),40,100,111,51,51,57,52,32,105,51,51,57,54,41,0,0,0,0,0,0};
static C_char C_TLS li378[] C_aligned={C_lihdr(0,0,8),40,97,50,52,51,50,54,41};
static C_char C_TLS li379[] C_aligned={C_lihdr(0,0,26),40,97,50,52,51,52,48,32,97,51,52,50,49,32,98,51,52,50,50,32,99,51,52,50,51,41,0,0};
static C_char C_TLS li380[] C_aligned={C_lihdr(0,0,14),40,100,111,51,52,49,54,32,105,51,52,49,56,41,0,0,0,0,0,0};
static C_char C_TLS li381[] C_aligned={C_lihdr(0,0,8),40,97,50,52,52,49,53,41};
static C_char C_TLS li382[] C_aligned={C_lihdr(0,0,26),40,97,50,52,52,50,49,32,97,51,52,52,48,32,98,51,52,52,49,32,99,51,52,52,50,41,0,0};
static C_char C_TLS li383[] C_aligned={C_lihdr(0,0,8),40,100,111,51,52,51,54,41};
static C_char C_TLS li384[] C_aligned={C_lihdr(0,0,8),40,97,50,52,52,53,52,41};
static C_char C_TLS li385[] C_aligned={C_lihdr(0,0,26),40,97,50,52,52,54,48,32,97,51,52,53,56,32,98,51,52,53,57,32,99,51,52,54,48,41,0,0};
static C_char C_TLS li386[] C_aligned={C_lihdr(0,0,70),40,112,97,114,115,101,114,32,112,97,116,51,51,55,48,32,116,111,107,101,110,115,51,51,55,49,32,102,111,114,99,101,45,97,110,100,51,51,55,50,32,108,101,118,101,108,51,51,55,51,32,116,114,97,99,101,51,51,55,52,32,101,114,114,102,51,51,55,53,41,0,0,0,0,0,0};
static C_char C_TLS li387[] C_aligned={C_lihdr(0,0,21),40,83,97,108,84,111,107,101,110,84,121,112,101,63,32,105,51,54,51,53,41,0,0,0,0,0};
static C_char C_TLS li388[] C_aligned={C_lihdr(0,0,18),40,83,97,108,79,112,84,121,112,101,63,32,105,51,54,51,57,41,0,0};
static C_char C_TLS li389[] C_aligned={C_lihdr(0,0,20),40,83,97,108,82,117,108,101,84,121,112,101,63,32,105,51,54,52,56,41,0,0,0,0};
static C_char C_TLS li390[] C_aligned={C_lihdr(0,0,29),40,83,97,108,84,121,112,101,61,63,32,116,121,112,49,51,54,52,57,32,116,121,112,50,51,54,53,48,41,0,0,0,0,0};
static C_char C_TLS li391[] C_aligned={C_lihdr(0,0,17),40,100,111,51,54,57,57,32,116,111,107,115,51,55,48,49,41,0};
static C_char C_TLS li392[] C_aligned={C_lihdr(0,0,36),40,114,101,109,111,118,101,45,116,111,107,101,110,45,116,121,112,101,32,116,111,107,115,51,54,57,53,32,116,121,112,51,54,57,54,41,0,0,0,0};
static C_char C_TLS li393[] C_aligned={C_lihdr(0,0,14),40,105,115,45,111,112,63,32,120,51,55,50,54,41,0,0,0,0,0,0};
static C_char C_TLS li394[] C_aligned={C_lihdr(0,0,29),40,100,111,51,55,51,53,32,119,50,51,55,51,55,32,111,107,51,55,51,56,32,108,105,51,55,51,57,41,0,0,0,0,0};
static C_char C_TLS li395[] C_aligned={C_lihdr(0,0,8),40,100,111,51,55,51,51,41};
static C_char C_TLS li396[] C_aligned={C_lihdr(0,0,18),40,105,110,102,45,62,112,114,101,32,105,110,102,51,55,50,56,41,0,0};
static C_char C_TLS li397[] C_aligned={C_lihdr(0,0,38),40,115,97,108,45,112,97,114,115,101,45,115,116,101,112,112,105,110,103,32,97,114,103,115,51,56,57,52,32,101,114,114,102,51,56,57,53,41,0,0,0,0,0,0};
static C_char C_TLS li398[] C_aligned={C_lihdr(0,0,14),40,100,111,52,49,49,50,32,102,52,49,49,52,41,0,0,0,0,0,0};
static C_char C_TLS li399[] C_aligned={C_lihdr(0,0,14),40,100,111,52,49,48,53,32,102,52,49,48,55,41,0,0,0,0,0,0};
static C_char C_TLS li400[] C_aligned={C_lihdr(0,0,8),40,97,50,52,48,50,52,41};
static C_char C_TLS li401[] C_aligned={C_lihdr(0,0,44),40,97,50,52,48,51,49,32,115,117,99,99,101,115,115,51,51,54,53,32,114,101,115,117,108,116,115,51,51,54,54,32,114,101,109,97,105,110,115,51,51,54,55,41,0,0,0,0};
static C_char C_TLS li402[] C_aligned={C_lihdr(0,0,17),40,97,50,52,48,49,56,32,101,114,114,102,51,51,54,51,41,0};
static C_char C_TLS li403[] C_aligned={C_lihdr(0,0,47),40,115,97,108,32,115,116,114,105,110,103,52,48,56,57,32,114,117,108,101,52,48,57,48,32,116,111,107,101,110,115,52,48,57,49,32,116,114,97,99,101,63,52,48,57,50,41,0,0,0,0,0,0,0};
static C_char C_TLS li404[] C_aligned={C_lihdr(0,0,17),40,100,111,52,49,51,50,32,116,97,105,108,52,49,51,52,41,0};
static C_char C_TLS li405[] C_aligned={C_lihdr(0,0,27),40,112,114,105,110,116,101,114,32,116,104,105,110,103,52,49,51,48,32,108,101,118,52,49,51,49,41,0,0,0};
static C_char C_TLS li406[] C_aligned={C_lihdr(0,0,17),40,100,111,52,49,52,48,32,116,97,105,108,52,49,52,50,41,0};
static C_char C_TLS li407[] C_aligned={C_lihdr(0,0,22),40,115,97,108,58,112,114,105,110,116,32,46,32,97,114,103,115,52,49,50,56,41,0,0,0,0,0,0};
static C_char C_TLS li408[] C_aligned={C_lihdr(0,0,20),40,115,97,108,58,99,104,100,105,114,32,112,97,116,104,52,49,52,55,41,0,0,0,0};
static C_char C_TLS li409[] C_aligned={C_lihdr(0,0,19),40,115,97,108,58,108,111,97,100,32,102,105,108,101,52,49,52,57,41,0,0,0};
static C_char C_TLS li410[] C_aligned={C_lihdr(0,0,21),40,115,97,108,58,111,112,101,110,32,46,32,97,114,103,115,52,49,53,52,41,0,0,0,0,0};
static C_char C_TLS li411[] C_aligned={C_lihdr(0,0,23),40,115,97,108,58,111,117,116,112,117,116,32,46,32,97,114,103,115,52,49,53,53,41,0,0,0,0,0,0,0};
static C_char C_TLS li412[] C_aligned={C_lihdr(0,0,32),40,108,111,111,112,45,111,112,101,114,97,116,111,114,45,115,101,116,33,32,99,52,50,56,55,32,120,52,50,56,56,41};
static C_char C_TLS li413[] C_aligned={C_lihdr(0,0,21),40,108,111,111,112,45,98,105,110,100,105,110,103,115,32,99,52,50,56,57,41,0,0,0,0,0};
static C_char C_TLS li414[] C_aligned={C_lihdr(0,0,23),40,108,111,111,112,45,99,111,108,108,101,99,116,111,114,115,32,99,52,50,57,50,41,0,0,0,0,0,0,0};
static C_char C_TLS li415[] C_aligned={C_lihdr(0,0,22),40,108,111,111,112,45,105,110,105,116,105,97,108,108,121,32,99,52,50,57,53,41,0,0,0,0,0,0};
static C_char C_TLS li416[] C_aligned={C_lihdr(0,0,22),40,108,111,111,112,45,101,110,100,45,116,101,115,116,115,32,99,52,50,57,56,41,0,0,0,0,0,0};
static C_char C_TLS li417[] C_aligned={C_lihdr(0,0,20),40,108,111,111,112,45,108,111,111,112,105,110,103,32,99,52,51,48,49,41,0,0,0,0};
static C_char C_TLS li418[] C_aligned={C_lihdr(0,0,31),40,108,111,111,112,45,108,111,111,112,105,110,103,45,115,101,116,33,32,99,52,51,48,50,32,120,52,51,48,51,41,0,0,0,0,0,0,0};
static C_char C_TLS li419[] C_aligned={C_lihdr(0,0,21),40,108,111,111,112,45,115,116,101,112,112,105,110,103,32,99,52,51,48,52,41,0,0,0,0,0};
static C_char C_TLS li420[] C_aligned={C_lihdr(0,0,20),40,108,111,111,112,45,102,105,110,97,108,108,121,32,99,52,51,48,55,41,0,0,0,0};
static C_char C_TLS li421[] C_aligned={C_lihdr(0,0,22),40,108,111,111,112,45,114,101,116,117,114,110,105,110,103,32,99,52,51,49,48,41,0,0,0,0,0,0};
static C_char C_TLS li422[] C_aligned={C_lihdr(0,0,14),40,100,111,52,51,49,53,32,97,52,51,49,55,41,0,0,0,0,0,0};
static C_char C_TLS li423[] C_aligned={C_lihdr(0,0,27),40,109,97,107,101,45,108,111,111,112,45,99,108,97,117,115,101,32,97,114,103,115,52,51,49,51,41,0,0,0};
static C_char C_TLS li424[] C_aligned={C_lihdr(0,0,14),40,100,111,52,51,50,55,32,108,52,51,50,57,41,0,0,0,0,0,0};
static C_char C_TLS li425[] C_aligned={C_lihdr(0,0,40),40,103,97,116,104,101,114,45,99,108,97,117,115,101,32,99,108,97,117,115,101,115,52,51,50,53,32,97,99,99,101,115,115,111,114,52,51,50,54,41};
static C_char C_TLS li426[] C_aligned={C_lihdr(0,0,39),40,103,97,116,104,101,114,45,99,108,97,117,115,101,115,32,99,97,108,108,101,114,52,51,50,50,32,99,108,97,117,115,101,115,52,51,50,51,41,0,0,0,0,0,0,0};
static C_char C_TLS li427[] C_aligned={C_lihdr(0,0,24),40,108,111,111,112,45,111,112,63,32,120,52,51,51,51,32,111,112,115,52,51,51,52,41};
static C_char C_TLS li428[] C_aligned={C_lihdr(0,0,22),40,108,111,111,112,45,118,97,114,105,97,98,108,101,63,32,120,52,51,51,53,41,0,0,0,0,0,0};
static C_char C_TLS li429[] C_aligned={C_lihdr(0,0,30),40,109,97,107,101,45,98,105,110,100,105,110,103,32,118,97,114,52,51,51,54,32,118,97,108,52,51,51,55,41,0,0,0,0,0,0};
static C_char C_TLS li430[] C_aligned={C_lihdr(0,0,17),40,100,111,52,51,53,57,32,116,97,105,108,52,51,54,49,41,0};
static C_char C_TLS li431[] C_aligned={C_lihdr(0,0,17),40,100,111,52,51,53,52,32,116,97,105,108,52,51,53,54,41,0};
static C_char C_TLS li432[] C_aligned={C_lihdr(0,0,20),40,100,111,52,51,52,52,32,104,52,51,52,54,32,108,52,51,52,55,41,0,0,0,0};
static C_char C_TLS li433[] C_aligned={C_lihdr(0,0,39),40,108,111,111,112,45,101,114,114,111,114,32,111,112,115,52,51,51,56,32,102,111,114,109,115,52,51,51,57,32,97,114,103,115,52,51,52,48,41,0,0,0,0,0,0,0};
static C_char C_TLS li434[] C_aligned={C_lihdr(0,0,41),40,112,97,114,115,101,45,102,111,114,32,102,111,114,109,115,52,51,55,51,32,99,108,97,117,115,101,115,52,51,55,52,32,111,112,115,52,51,55,53,41,0};
static C_char C_TLS li435[] C_aligned={C_lihdr(0,0,17),40,100,111,52,51,57,51,32,110,101,120,116,52,51,57,53,41,0};
static C_char C_TLS li436[] C_aligned={C_lihdr(0,0,51),40,112,97,114,115,101,45,110,117,109,101,114,105,99,97,108,45,102,111,114,32,102,111,114,109,115,52,51,55,57,32,99,108,97,117,115,101,115,52,51,56,48,32,111,112,115,52,51,56,49,41,0,0,0};
static C_char C_TLS li437[] C_aligned={C_lihdr(0,0,8),40,97,50,55,54,56,55,41};
static C_char C_TLS li438[] C_aligned={C_lihdr(0,0,30),40,97,50,55,55,48,53,32,99,108,97,117,115,101,52,52,55,52,32,105,103,110,111,114,101,52,52,55,53,41,0,0,0,0,0,0};
static C_char C_TLS li439[] C_aligned={C_lihdr(0,0,44),40,112,97,114,115,101,45,114,101,112,101,97,116,32,102,111,114,109,115,52,52,55,49,32,99,108,97,117,115,101,115,52,52,55,50,32,111,112,115,52,52,55,51,41,0,0,0,0};
static C_char C_TLS li440[] C_aligned={C_lihdr(0,0,17),40,100,111,52,52,57,50,32,110,101,120,116,52,52,57,52,41,0};
static C_char C_TLS li441[] C_aligned={C_lihdr(0,0,56),40,112,97,114,115,101,45,115,101,113,117,101,110,99,101,45,105,116,101,114,97,116,105,111,110,32,102,111,114,109,115,52,52,55,55,32,99,108,97,117,115,101,115,52,52,55,56,32,111,112,115,52,52,55,57,41};
static C_char C_TLS li442[] C_aligned={C_lihdr(0,0,17),40,100,111,52,53,53,57,32,110,101,120,116,52,53,54,49,41,0};
static C_char C_TLS li443[] C_aligned={C_lihdr(0,0,55),40,112,97,114,115,101,45,103,101,110,101,114,97,108,45,105,116,101,114,97,116,105,111,110,32,102,111,114,109,115,52,53,52,57,32,99,108,97,117,115,101,115,52,53,53,48,32,111,112,115,52,53,53,49,41,0,0,0,0,0,0,0};
static C_char C_TLS li444[] C_aligned={C_lihdr(0,0,26),40,100,111,52,53,57,55,32,110,101,101,100,52,53,57,57,32,110,101,120,116,52,54,48,48,41,0,0};
static C_char C_TLS li445[] C_aligned={C_lihdr(0,0,42),40,112,97,114,115,101,45,119,105,116,104,32,102,111,114,109,115,52,53,56,55,32,99,108,97,117,115,101,115,52,53,56,56,32,111,112,115,52,53,56,57,41,0,0};
static C_char C_TLS li446[] C_aligned={C_lihdr(0,0,8),40,100,111,52,54,52,49,41};
static C_char C_TLS li447[] C_aligned={C_lihdr(0,0,40),40,112,97,114,115,101,45,100,111,32,102,111,114,109,115,52,54,51,50,32,99,108,97,117,115,101,115,52,54,51,51,32,111,112,115,52,54,51,52,41};
static C_char C_TLS li448[] C_aligned={C_lihdr(0,0,45),40,112,97,114,115,101,45,102,105,110,97,108,108,121,32,102,111,114,109,115,52,54,53,49,32,99,108,97,117,115,101,115,52,54,53,50,32,111,112,115,52,54,53,51,41,0,0,0,0,0};
static C_char C_TLS li449[] C_aligned={C_lihdr(0,0,47),40,112,97,114,115,101,45,105,110,105,116,105,97,108,108,121,32,102,111,114,109,115,52,54,54,53,32,99,108,97,117,115,101,115,52,54,54,54,32,111,112,115,52,54,54,55,41,0,0,0,0,0,0,0};
static C_char C_TLS li450[] C_aligned={C_lihdr(0,0,50),40,109,97,107,101,45,99,111,108,108,101,99,116,111,114,32,118,97,114,52,55,51,50,32,116,121,112,101,52,55,51,51,32,97,99,99,52,55,51,52,32,104,101,97,100,52,55,51,53,41,0,0};
static C_char C_TLS li451[] C_aligned={C_lihdr(0,0,24),40,99,111,108,108,101,99,116,111,114,45,116,121,112,101,32,99,111,108,52,55,51,54,41};
static C_char C_TLS li452[] C_aligned={C_lihdr(0,0,23),40,99,111,108,108,101,99,116,111,114,45,97,99,99,32,99,111,108,52,55,51,55,41,0,0,0,0,0,0,0};
static C_char C_TLS li453[] C_aligned={C_lihdr(0,0,14),40,100,111,52,54,56,52,32,97,52,54,56,54,41,0,0,0,0,0,0};
static C_char C_TLS li454[] C_aligned={C_lihdr(0,0,14),40,100,111,52,54,57,50,32,99,52,54,57,52,41,0,0,0,0,0,0};
static C_char C_TLS li455[] C_aligned={C_lihdr(0,0,50),40,112,97,114,115,101,45,97,99,99,117,109,117,108,97,116,105,111,110,32,102,111,114,109,115,52,55,49,49,32,99,108,97,117,115,101,115,52,55,49,50,32,111,112,115,52,55,49,51,41,0,0};
static C_char C_TLS li456[] C_aligned={C_lihdr(0,0,22),40,108,111,111,112,45,114,101,116,117,114,110,32,101,120,112,114,52,56,49,50,41,0,0,0,0,0,0};
static C_char C_TLS li457[] C_aligned={C_lihdr(0,0,49),40,112,97,114,115,101,45,119,104,105,108,101,45,117,110,116,105,108,32,102,111,114,109,115,52,56,49,51,32,99,108,97,117,115,101,115,52,56,49,52,32,111,112,115,52,56,49,53,41,0};
static C_char C_TLS li458[] C_aligned={C_lihdr(0,0,45),40,112,97,114,115,101,45,116,104,101,114,101,105,115,32,102,111,114,109,115,52,56,51,52,32,99,108,97,117,115,101,115,52,56,51,53,32,111,112,115,52,56,51,54,41,0,0,0,0,0};
static C_char C_TLS li459[] C_aligned={C_lihdr(0,0,44),40,112,97,114,115,101,45,114,101,116,117,114,110,32,102,111,114,109,115,52,56,53,48,32,99,108,97,117,115,101,115,52,56,53,49,32,111,112,115,52,56,53,50,41,0,0,0,0};
static C_char C_TLS li460[] C_aligned={C_lihdr(0,0,8),40,97,50,57,53,55,56,41};
static C_char C_TLS li461[] C_aligned={C_lihdr(0,0,20),40,97,50,57,53,57,49,32,97,52,56,55,55,32,98,52,56,55,56,41,0,0,0,0};
static C_char C_TLS li462[] C_aligned={C_lihdr(0,0,38),40,100,111,52,56,55,48,32,111,112,52,56,55,50,32,99,108,97,117,115,101,52,56,55,51,32,114,101,109,97,105,110,115,52,56,55,52,41,0,0,0,0,0,0};
static C_char C_TLS li463[] C_aligned={C_lihdr(0,0,58),40,112,97,114,115,101,45,116,104,101,110,45,101,108,115,101,45,100,101,112,101,110,100,101,110,116,115,32,102,111,114,109,115,52,56,54,52,32,99,108,97,117,115,101,115,52,56,54,53,32,111,112,115,52,56,54,54,41,0,0};
static C_char C_TLS li464[] C_aligned={C_lihdr(0,0,8),40,97,50,57,55,52,50,41};
static C_char C_TLS li465[] C_aligned={C_lihdr(0,0,20),40,97,50,57,55,53,54,32,97,52,57,48,54,32,98,52,57,48,55,41,0,0,0,0};
static C_char C_TLS li466[] C_aligned={C_lihdr(0,0,8),40,97,50,57,56,50,48,41};
static C_char C_TLS li467[] C_aligned={C_lihdr(0,0,20),40,97,50,57,56,50,54,32,97,52,57,48,51,32,98,52,57,48,52,41,0,0,0,0};
static C_char C_TLS li468[] C_aligned={C_lihdr(0,0,49),40,112,97,114,115,101,45,99,111,110,100,105,116,105,111,110,97,108,32,102,111,114,109,115,52,56,57,48,32,99,108,97,117,115,101,115,52,56,57,49,32,111,112,115,52,56,57,50,41,0};
static C_char C_TLS li469[] C_aligned={C_lihdr(0,0,26),40,111,112,45,116,121,112,101,63,32,111,112,52,57,51,51,32,116,121,112,101,52,57,51,52,41,0,0};
static C_char C_TLS li470[] C_aligned={C_lihdr(0,0,8),40,97,50,57,57,54,56,41};
static C_char C_TLS li471[] C_aligned={C_lihdr(0,0,20),40,97,50,57,57,55,55,32,97,52,57,52,54,32,98,52,57,52,55,41,0,0,0,0};
static C_char C_TLS li472[] C_aligned={C_lihdr(0,0,47),40,100,111,52,57,51,55,32,111,112,52,57,51,57,32,99,108,97,117,115,101,52,57,52,48,32,114,101,109,97,105,110,115,52,57,52,49,32,98,111,100,121,52,57,52,50,41,0,0,0,0,0,0,0};
static C_char C_TLS li473[] C_aligned={C_lihdr(0,0,46),40,112,97,114,115,101,45,105,116,101,114,97,116,105,111,110,32,99,97,108,108,101,114,52,57,53,57,32,102,111,114,109,115,52,57,54,48,32,111,112,115,52,57,54,49,41,0,0,0,0,0,0};
static C_char C_TLS li474[] C_aligned={C_lihdr(0,0,59),40,102,95,51,48,51,57,48,32,97,53,49,51,56,53,49,52,49,32,97,53,49,51,55,53,49,52,50,32,97,53,49,51,54,53,49,52,51,32,97,53,49,51,53,53,49,52,52,32,97,53,49,51,52,53,49,52,53,41,0,0,0};
static C_char C_TLS li475[] C_aligned={C_lihdr(0,0,23),40,109,109,58,109,97,107,101,45,111,110,32,46,32,97,114,103,115,53,48,50,57,41,0,0,0,0,0,0,0};
static C_char C_TLS li476[] C_aligned={C_lihdr(0,0,29),40,102,95,51,49,49,48,52,32,97,53,49,53,52,53,49,53,56,32,97,53,49,53,51,53,49,53,57,41,0,0,0,0,0};
static C_char C_TLS li477[] C_aligned={C_lihdr(0,0,14),40,109,109,58,111,110,63,32,109,53,49,53,50,41,0,0,0,0,0,0};
static C_char C_TLS li478[] C_aligned={C_lihdr(0,0,59),40,102,95,51,49,49,51,53,32,97,53,50,51,51,53,50,51,54,32,97,53,50,51,50,53,50,51,55,32,97,53,50,51,49,53,50,51,56,32,97,53,50,51,48,53,50,51,57,32,97,53,50,50,57,53,50,52,48,41,0,0,0};
static C_char C_TLS li479[] C_aligned={C_lihdr(0,0,24),40,109,109,58,109,97,107,101,45,111,102,102,32,46,32,97,114,103,115,53,49,54,49,41};
static C_char C_TLS li480[] C_aligned={C_lihdr(0,0,29),40,102,95,51,49,53,55,52,32,97,53,50,52,56,53,50,53,50,32,97,53,50,52,55,53,50,53,51,41,0,0,0,0,0};
static C_char C_TLS li481[] C_aligned={C_lihdr(0,0,15),40,109,109,58,111,102,102,63,32,109,53,50,52,54,41,0,0,0,0,0,0,0};
static C_char C_TLS li482[] C_aligned={C_lihdr(0,0,59),40,102,95,51,49,54,48,56,32,97,53,51,54,52,53,51,54,55,32,97,53,51,54,51,53,51,54,56,32,97,53,51,54,50,53,51,54,57,32,97,53,51,54,49,53,51,55,48,32,97,53,51,54,48,53,51,55,49,41,0,0,0};
static C_char C_TLS li483[] C_aligned={C_lihdr(0,0,26),40,109,109,58,109,97,107,101,45,116,111,117,99,104,32,46,32,97,114,103,115,53,50,53,53,41,0,0};
static C_char C_TLS li484[] C_aligned={C_lihdr(0,0,29),40,102,95,51,50,51,50,50,32,97,53,51,56,48,53,51,56,52,32,97,53,51,55,57,53,51,56,53,41,0,0,0,0,0};
static C_char C_TLS li485[] C_aligned={C_lihdr(0,0,17),40,109,109,58,116,111,117,99,104,63,32,109,53,51,55,56,41,0};
static C_char C_TLS li486[] C_aligned={C_lihdr(0,0,59),40,102,95,51,50,51,53,54,32,97,53,52,57,54,53,52,57,57,32,97,53,52,57,53,53,53,48,48,32,97,53,52,57,52,53,53,48,49,32,97,53,52,57,51,53,53,48,50,32,97,53,52,57,50,53,53,48,51,41,0,0,0};
static C_char C_TLS li487[] C_aligned={C_lihdr(0,0,25),40,109,109,58,109,97,107,101,45,99,116,114,108,32,46,32,97,114,103,115,53,51,56,55,41,0};
static C_char C_TLS li488[] C_aligned={C_lihdr(0,0,29),40,102,95,51,51,48,55,48,32,97,53,53,49,50,53,53,49,54,32,97,53,53,49,49,53,53,49,55,41,0,0,0,0,0};
static C_char C_TLS li489[] C_aligned={C_lihdr(0,0,16),40,109,109,58,99,116,114,108,63,32,109,53,53,49,48,41};
static C_char C_TLS li490[] C_aligned={C_lihdr(0,0,59),40,102,95,51,51,49,48,49,32,97,53,53,57,49,53,53,57,52,32,97,53,53,57,48,53,53,57,53,32,97,53,53,56,57,53,53,57,54,32,97,53,53,56,56,53,53,57,55,32,97,53,53,56,55,53,53,57,56,41,0,0,0};
static C_char C_TLS li491[] C_aligned={C_lihdr(0,0,25),40,109,109,58,109,97,107,101,45,112,114,111,103,32,46,32,97,114,103,115,53,53,49,57,41,0};
static C_char C_TLS li492[] C_aligned={C_lihdr(0,0,29),40,102,95,51,51,53,52,48,32,97,53,54,48,54,53,54,49,48,32,97,53,54,48,53,53,54,49,49,41,0,0,0,0,0};
static C_char C_TLS li493[] C_aligned={C_lihdr(0,0,16),40,109,109,58,112,114,111,103,63,32,109,53,54,48,52,41};
static C_char C_TLS li494[] C_aligned={C_lihdr(0,0,59),40,102,95,51,51,53,55,49,32,97,53,54,56,53,53,54,56,56,32,97,53,54,56,52,53,54,56,57,32,97,53,54,56,51,53,54,57,48,32,97,53,54,56,50,53,54,57,49,32,97,53,54,56,49,53,54,57,50,41,0,0,0};
static C_char C_TLS li495[] C_aligned={C_lihdr(0,0,26),40,109,109,58,109,97,107,101,45,112,114,101,115,115,32,46,32,97,114,103,115,53,54,49,51,41,0,0};
static C_char C_TLS li496[] C_aligned={C_lihdr(0,0,29),40,102,95,51,52,48,49,48,32,97,53,55,48,48,53,55,48,52,32,97,53,54,57,57,53,55,48,53,41,0,0,0,0,0};
static C_char C_TLS li497[] C_aligned={C_lihdr(0,0,17),40,109,109,58,112,114,101,115,115,63,32,109,53,54,57,56,41,0};
static C_char C_TLS li498[] C_aligned={C_lihdr(0,0,59),40,102,95,51,52,48,52,49,32,97,53,55,55,57,53,55,56,50,32,97,53,55,55,56,53,55,56,51,32,97,53,55,55,55,53,55,56,52,32,97,53,55,55,54,53,55,56,53,32,97,53,55,55,53,53,55,56,54,41,0,0,0};
static C_char C_TLS li499[] C_aligned={C_lihdr(0,0,25),40,109,109,58,109,97,107,101,45,98,101,110,100,32,46,32,97,114,103,115,53,55,48,55,41,0};
static C_char C_TLS li500[] C_aligned={C_lihdr(0,0,19),40,102,95,51,52,53,48,50,32,97,53,56,48,50,53,56,48,54,41,0,0,0};
static C_char C_TLS li501[] C_aligned={C_lihdr(0,0,15),40,109,109,58,102,114,101,101,32,109,53,56,48,49,41,0,0,0,0,0,0,0};
static C_char C_TLS li502[] C_aligned={C_lihdr(0,0,19),40,102,95,51,52,53,49,55,32,97,53,56,49,48,53,56,49,52,41,0,0,0};
static C_char C_TLS li503[] C_aligned={C_lihdr(0,0,15),40,109,109,58,99,111,112,121,32,109,53,56,48,57,41,0,0,0,0,0,0,0};
static C_char C_TLS li504[] C_aligned={C_lihdr(0,0,19),40,102,95,51,52,53,51,50,32,97,53,56,49,56,53,56,50,50,41,0,0,0};
static C_char C_TLS li505[] C_aligned={C_lihdr(0,0,15),40,109,109,58,116,105,109,101,32,109,53,56,49,55,41,0,0,0,0,0,0,0};
static C_char C_TLS li506[] C_aligned={C_lihdr(0,0,29),40,102,95,51,52,53,52,55,32,97,53,56,50,56,53,56,51,50,32,97,53,56,50,55,53,56,51,51,41,0,0,0,0,0};
static C_char C_TLS li507[] C_aligned={C_lihdr(0,0,26),40,109,109,58,116,105,109,101,45,115,101,116,33,32,109,53,56,50,53,32,116,53,56,50,54,41,0,0};
static C_char C_TLS li508[] C_aligned={C_lihdr(0,0,19),40,102,95,51,52,53,54,54,32,97,53,56,51,55,53,56,52,49,41,0,0,0};
static C_char C_TLS li509[] C_aligned={C_lihdr(0,0,15),40,109,109,58,99,104,97,110,32,109,53,56,51,54,41,0,0,0,0,0,0,0};
static C_char C_TLS li510[] C_aligned={C_lihdr(0,0,29),40,102,95,51,52,53,56,49,32,97,53,56,52,54,53,56,53,48,32,97,53,56,52,53,53,56,53,49,41,0,0,0,0,0};
static C_char C_TLS li511[] C_aligned={C_lihdr(0,0,26),40,109,109,58,99,104,97,110,45,115,101,116,33,32,109,53,56,52,51,32,99,53,56,52,52,41,0,0};
static C_char C_TLS li512[] C_aligned={C_lihdr(0,0,29),40,102,95,51,52,54,48,48,32,97,53,56,53,54,53,56,54,48,32,97,53,56,53,53,53,56,54,49,41,0,0,0,0,0};
static C_char C_TLS li513[] C_aligned={C_lihdr(0,0,14),40,109,109,58,107,101,121,32,109,53,56,53,52,41,0,0,0,0,0,0};
static C_char C_TLS li514[] C_aligned={C_lihdr(0,0,39),40,102,95,51,52,54,49,57,32,97,53,56,54,55,53,56,55,49,32,97,53,56,54,54,53,56,55,50,32,97,53,56,54,53,53,56,55,51,41,0,0,0,0,0,0,0};
static C_char C_TLS li515[] C_aligned={C_lihdr(0,0,25),40,109,109,58,107,101,121,45,115,101,116,33,32,109,53,56,54,51,32,107,53,56,54,52,41,0};
static C_char C_TLS li516[] C_aligned={C_lihdr(0,0,29),40,102,95,51,52,54,52,50,32,97,53,56,55,56,53,56,56,50,32,97,53,56,55,55,53,56,56,51,41,0,0,0,0,0};
static C_char C_TLS li517[] C_aligned={C_lihdr(0,0,14),40,109,109,58,118,101,108,32,109,53,56,55,54,41,0,0,0,0,0,0};
static C_char C_TLS li518[] C_aligned={C_lihdr(0,0,39),40,102,95,51,52,54,54,49,32,97,53,56,56,57,53,56,57,51,32,97,53,56,56,56,53,56,57,52,32,97,53,56,56,55,53,56,57,53,41,0,0,0,0,0,0,0};
static C_char C_TLS li519[] C_aligned={C_lihdr(0,0,25),40,109,109,58,118,101,108,45,115,101,116,33,32,109,53,56,56,53,32,118,53,56,56,54,41,0};
static C_char C_TLS li520[] C_aligned={C_lihdr(0,0,29),40,102,95,51,52,54,57,51,32,97,53,57,48,50,53,57,48,54,32,97,53,57,48,49,53,57,48,55,41,0,0,0,0,0};
static C_char C_TLS li521[] C_aligned={C_lihdr(0,0,29),40,102,95,51,52,55,48,57,32,97,53,57,49,48,53,57,49,52,32,97,53,57,48,57,53,57,49,53,41,0,0,0,0,0};
static C_char C_TLS li522[] C_aligned={C_lihdr(0,0,14),40,109,109,58,118,97,108,32,109,53,56,57,56,41,0,0,0,0,0,0};
static C_char C_TLS li523[] C_aligned={C_lihdr(0,0,39),40,102,95,51,52,55,52,48,32,97,53,57,50,51,53,57,50,55,32,97,53,57,50,50,53,57,50,56,32,97,53,57,50,49,53,57,50,57,41,0,0,0,0,0,0,0};
static C_char C_TLS li524[] C_aligned={C_lihdr(0,0,39),40,102,95,51,52,55,54,48,32,97,53,57,51,51,53,57,51,55,32,97,53,57,51,50,53,57,51,56,32,97,53,57,51,49,53,57,51,57,41,0,0,0,0,0,0,0};
static C_char C_TLS li525[] C_aligned={C_lihdr(0,0,25),40,109,109,58,118,97,108,45,115,101,116,33,32,109,53,57,49,55,32,118,53,57,49,56,41,0};
static C_char C_TLS li526[] C_aligned={C_lihdr(0,0,29),40,102,95,51,52,55,56,54,32,97,53,57,52,52,53,57,52,56,32,97,53,57,52,51,53,57,52,57,41,0,0,0,0,0};
static C_char C_TLS li527[] C_aligned={C_lihdr(0,0,14),40,109,109,58,110,117,109,32,109,53,57,52,50,41,0,0,0,0,0,0};
static C_char C_TLS li528[] C_aligned={C_lihdr(0,0,39),40,102,95,51,52,56,48,53,32,97,53,57,53,53,53,57,53,57,32,97,53,57,53,52,53,57,54,48,32,97,53,57,53,51,53,57,54,49,41,0,0,0,0,0,0,0};
static C_char C_TLS li529[] C_aligned={C_lihdr(0,0,25),40,109,109,58,110,117,109,45,115,101,116,33,32,109,53,57,53,49,32,118,53,57,53,50,41,0};
static C_char C_TLS li530[] C_aligned={C_lihdr(0,0,59),40,102,95,51,52,56,50,56,32,97,53,57,55,51,53,57,55,54,32,97,53,57,55,50,53,57,55,55,32,97,53,57,55,49,53,57,55,56,32,97,53,57,55,48,53,57,55,57,32,97,53,57,54,57,53,57,56,48,41,0,0,0};
static C_char C_TLS li531[] C_aligned={C_lihdr(0,0,51),40,109,112,58,110,111,116,101,32,116,105,109,101,53,57,54,52,32,100,117,114,53,57,54,53,32,107,101,121,53,57,54,54,32,97,109,112,53,57,54,55,32,99,104,97,110,53,57,54,56,41,0,0,0};
static C_char C_TLS li532[] C_aligned={C_lihdr(0,0,59),40,102,95,51,52,56,53,54,32,97,53,57,57,48,53,57,57,51,32,97,53,57,56,57,53,57,57,52,32,97,53,57,56,56,53,57,57,53,32,97,53,57,56,55,53,57,57,54,32,97,53,57,56,54,53,57,57,55,41,0,0,0};
static C_char C_TLS li533[] C_aligned={C_lihdr(0,0,51),40,109,112,58,109,105,100,105,32,116,105,109,101,53,57,56,49,32,100,117,114,53,57,56,50,32,107,101,121,53,57,56,51,32,97,109,112,53,57,56,52,32,99,104,97,110,53,57,56,53,41,0,0,0};
static C_char C_TLS li534[] C_aligned={C_lihdr(0,0,59),40,102,95,51,52,56,56,52,32,97,54,48,48,53,54,48,48,56,32,97,54,48,48,52,54,48,48,57,32,97,54,48,48,51,54,48,49,48,32,97,54,48,48,50,54,48,49,49,32,97,54,48,48,49,54,48,49,50,41,0,0,0};
static C_char C_TLS li535[] C_aligned={C_lihdr(0,0,34),40,109,112,58,111,102,102,32,116,105,109,101,53,57,57,56,32,107,101,121,53,57,57,57,32,99,104,97,110,54,48,48,48,41,0,0};
static C_char C_TLS li536[] C_aligned={C_lihdr(0,0,59),40,102,95,51,52,57,49,50,32,97,54,48,50,49,54,48,50,52,32,97,54,48,50,48,54,48,50,53,32,97,54,48,49,57,54,48,50,54,32,97,54,48,49,56,54,48,50,55,32,97,54,48,49,55,54,48,50,56,41,0,0,0};
static C_char C_TLS li537[] C_aligned={C_lihdr(0,0,41),40,109,112,58,111,110,32,116,105,109,101,54,48,49,51,32,107,101,121,54,48,49,52,32,118,101,108,54,48,49,53,32,99,104,97,110,54,48,49,54,41,0};
static C_char C_TLS li538[] C_aligned={C_lihdr(0,0,59),40,102,95,51,52,57,52,48,32,97,54,48,51,55,54,48,52,48,32,97,54,48,51,54,54,48,52,49,32,97,54,48,51,53,54,48,52,50,32,97,54,48,51,52,54,48,52,51,32,97,54,48,51,51,54,48,52,52,41,0,0,0};
static C_char C_TLS li539[] C_aligned={C_lihdr(0,0,44),40,109,112,58,116,111,117,99,104,32,116,105,109,101,54,48,50,57,32,107,101,121,54,48,51,48,32,118,97,108,54,48,51,49,32,99,104,97,110,54,48,51,50,41,0,0,0,0};
static C_char C_TLS li540[] C_aligned={C_lihdr(0,0,59),40,102,95,51,52,57,54,56,32,97,54,48,53,51,54,48,53,54,32,97,54,48,53,50,54,48,53,55,32,97,54,48,53,49,54,48,53,56,32,97,54,48,53,48,54,48,53,57,32,97,54,48,52,57,54,48,54,48,41,0,0,0};
static C_char C_TLS li541[] C_aligned={C_lihdr(0,0,43),40,109,112,58,99,116,114,108,32,116,105,109,101,54,48,52,53,32,110,117,109,54,48,52,54,32,118,97,108,54,48,52,55,32,99,104,97,110,54,48,52,56,41,0,0,0};
static C_char C_TLS li542[] C_aligned={C_lihdr(0,0,59),40,102,95,51,52,57,57,54,32,97,54,48,54,56,54,48,55,49,32,97,54,48,54,55,54,48,55,50,32,97,54,48,54,54,54,48,55,51,32,97,54,48,54,53,54,48,55,52,32,97,54,48,54,52,54,48,55,53,41,0,0,0};
static C_char C_TLS li543[] C_aligned={C_lihdr(0,0,35),40,109,112,58,112,114,111,103,32,116,105,109,101,54,48,54,49,32,118,97,108,54,48,54,50,32,99,104,97,110,54,48,54,51,41,0,0,0};
static C_char C_TLS li544[] C_aligned={C_lihdr(0,0,59),40,102,95,51,53,48,50,52,32,97,54,48,56,51,54,48,56,54,32,97,54,48,56,50,54,48,56,55,32,97,54,48,56,49,54,48,56,56,32,97,54,48,56,48,54,48,56,57,32,97,54,48,55,57,54,48,57,48,41,0,0,0};
static C_char C_TLS li545[] C_aligned={C_lihdr(0,0,36),40,109,112,58,112,114,101,115,115,32,116,105,109,101,54,48,55,54,32,118,97,108,54,48,55,55,32,99,104,97,110,54,48,55,56,41,0,0,0,0};
static C_char C_TLS li546[] C_aligned={C_lihdr(0,0,59),40,102,95,51,53,48,53,50,32,97,54,48,57,56,54,49,48,49,32,97,54,48,57,55,54,49,48,50,32,97,54,48,57,54,54,49,48,51,32,97,54,48,57,53,54,49,48,52,32,97,54,48,57,52,54,49,48,53,41,0,0,0};
static C_char C_TLS li547[] C_aligned={C_lihdr(0,0,35),40,109,112,58,98,101,110,100,32,116,105,109,101,54,48,57,49,32,118,97,108,54,48,57,50,32,99,104,97,110,54,48,57,51,41,0,0,0};
static C_char C_TLS li548[] C_aligned={C_lihdr(0,0,19),40,102,95,51,53,48,56,48,32,97,54,49,48,55,54,49,49,49,41,0,0,0};
static C_char C_TLS li549[] C_aligned={C_lihdr(0,0,15),40,109,112,58,109,109,32,112,116,114,54,49,48,54,41,0,0,0,0,0,0,0};
static C_char C_TLS li550[] C_aligned={C_lihdr(0,0,17),40,97,51,53,49,49,51,32,37,101,114,114,54,49,50,48,41,0};
static C_char C_TLS li551[] C_aligned={C_lihdr(0,0,8),40,97,51,53,49,51,51,41};
static C_char C_TLS li552[] C_aligned={C_lihdr(0,0,18),40,97,51,53,49,48,55,32,37,99,111,110,116,54,49,49,57,41,0,0};
static C_char C_TLS li553[] C_aligned={C_lihdr(0,0,17),40,97,51,53,49,48,49,32,37,109,115,103,54,49,49,56,41,0};
static C_char C_TLS li554[] C_aligned={C_lihdr(0,0,19),40,102,95,51,53,49,51,57,32,97,54,49,49,52,54,49,49,55,41,0,0,0};
static C_char C_TLS li555[] C_aligned={C_lihdr(0,0,19),40,102,95,51,53,49,52,52,32,97,54,49,50,51,54,49,50,54,41,0,0,0};
static C_char C_TLS li556[] C_aligned={C_lihdr(0,0,21),40,109,112,58,105,110,104,111,111,107,32,37,104,111,111,107,54,49,49,51,41,0,0,0,0,0};
static C_char C_TLS li557[] C_aligned={C_lihdr(0,0,19),40,102,95,51,53,49,53,53,32,97,54,49,51,52,54,49,51,55,41,0,0,0};
static C_char C_TLS li558[] C_aligned={C_lihdr(0,0,14),40,100,111,54,49,50,57,32,97,54,49,51,49,41,0,0,0,0,0,0};
static C_char C_TLS li559[] C_aligned={C_lihdr(0,0,23),40,109,112,58,105,110,99,104,97,110,115,32,46,32,97,114,103,115,54,49,50,55,41,0,0,0,0,0,0,0};
static C_char C_TLS li560[] C_aligned={C_lihdr(0,0,19),40,102,95,51,53,50,54,54,32,97,54,49,52,54,54,49,52,57,41,0,0,0};
static C_char C_TLS li561[] C_aligned={C_lihdr(0,0,14),40,100,111,54,49,52,49,32,97,54,49,52,51,41,0,0,0,0,0,0};
static C_char C_TLS li562[] C_aligned={C_lihdr(0,0,23),40,109,112,58,105,110,116,121,112,101,115,32,46,32,97,114,103,115,54,49,51,57,41,0,0,0,0,0,0,0};
static C_char C_TLS li563[] C_aligned={C_lihdr(0,0,19),40,102,95,51,53,51,57,48,32,97,54,49,53,51,54,49,53,54,41,0,0,0};
static C_char C_TLS li564[] C_aligned={C_lihdr(0,0,22),40,109,112,58,116,117,110,105,110,103,32,46,32,97,114,103,115,54,49,53,49,41,0,0,0,0,0,0};
static C_char C_TLS li565[] C_aligned={C_lihdr(0,0,9),40,102,95,51,53,52,50,48,41,0};
static C_char C_TLS li566[] C_aligned={C_lihdr(0,0,12),40,109,112,58,112,108,97,121,115,101,113,41,0,0,0,0};
static C_char C_TLS li567[] C_aligned={C_lihdr(0,0,9),40,102,95,51,53,52,51,49,41,0};
static C_char C_TLS li568[] C_aligned={C_lihdr(0,0,12),40,109,112,58,115,97,118,101,115,101,113,41,0,0,0,0};
static C_char C_TLS li569[] C_aligned={C_lihdr(0,0,9),40,102,95,51,53,52,52,50,41,0};
static C_char C_TLS li570[] C_aligned={C_lihdr(0,0,12),40,109,112,58,99,111,112,121,115,101,113,41,0,0,0,0};
static C_char C_TLS li571[] C_aligned={C_lihdr(0,0,9),40,102,95,51,53,52,53,51,41,0};
static C_char C_TLS li572[] C_aligned={C_lihdr(0,0,12),40,109,112,58,112,108,111,116,115,101,113,41,0,0,0,0};
static C_char C_TLS li573[] C_aligned={C_lihdr(0,0,9),40,102,95,51,53,52,54,52,41,0};
static C_char C_TLS li574[] C_aligned={C_lihdr(0,0,13),40,109,112,58,99,108,101,97,114,115,101,113,41,0,0,0,0,0};
static C_char C_TLS li575[] C_aligned={C_lihdr(0,0,19),40,102,95,51,53,52,55,56,32,97,54,49,55,53,54,49,55,56,41,0,0,0};
static C_char C_TLS li576[] C_aligned={C_lihdr(0,0,25),40,109,112,58,114,101,99,111,114,100,115,101,113,32,46,32,97,114,103,115,54,49,55,51,41,0};
static C_char C_TLS li577[] C_aligned={C_lihdr(0,0,19),40,102,95,51,53,53,53,56,32,97,54,50,53,53,54,50,53,56,41,0,0,0};
static C_char C_TLS li578[] C_aligned={C_lihdr(0,0,19),40,102,95,51,53,53,55,50,32,97,54,50,54,51,54,50,54,54,41,0,0,0};
static C_char C_TLS li579[] C_aligned={C_lihdr(0,0,19),40,102,95,51,53,53,55,52,32,97,54,50,53,57,54,50,54,50,41,0,0,0};
static C_char C_TLS li580[] C_aligned={C_lihdr(0,0,19),40,99,115,58,114,101,99,111,114,100,32,118,97,108,54,50,53,52,41,0,0,0};
static C_char C_TLS li581[] C_aligned={C_lihdr(0,0,9),40,102,95,51,53,53,57,53,41,0};
static C_char C_TLS li582[] C_aligned={C_lihdr(0,0,10),40,99,115,58,99,108,101,97,114,41,0,0};
static C_char C_TLS li583[] C_aligned={C_lihdr(0,0,39),40,102,95,51,53,54,49,57,32,97,54,50,55,51,54,50,55,54,32,97,54,50,55,50,54,50,55,55,32,97,54,50,55,49,54,50,55,56,41,0,0,0,0,0,0,0};
static C_char C_TLS li584[] C_aligned={C_lihdr(0,0,17),40,99,115,58,105,32,46,32,97,114,103,115,54,50,55,48,41,0};
static C_char C_TLS li585[] C_aligned={C_lihdr(0,0,39),40,102,95,51,53,54,55,54,32,97,54,50,56,52,54,50,56,55,32,97,54,50,56,51,54,50,56,56,32,97,54,50,56,50,54,50,56,57,41,0,0,0,0,0,0,0};
static C_char C_TLS li586[] C_aligned={C_lihdr(0,0,17),40,99,115,58,102,32,46,32,97,114,103,115,54,50,56,49,41,0};
static C_char C_TLS li587[] C_aligned={C_lihdr(0,0,29),40,102,95,51,53,55,50,57,32,97,54,51,51,50,54,51,51,53,32,97,54,51,51,49,54,51,51,54,41,0,0,0,0,0};
static C_char C_TLS li588[] C_aligned={C_lihdr(0,0,21),40,99,115,58,112,114,105,110,116,32,46,32,97,114,103,115,54,50,57,50,41,0,0,0,0,0};
static C_char C_TLS li589[] C_aligned={C_lihdr(0,0,39),40,102,95,51,53,57,55,48,32,97,54,52,49,49,54,52,49,52,32,97,54,52,49,48,54,52,49,53,32,97,54,52,48,57,54,52,49,54,41,0,0,0,0,0,0,0};
static C_char C_TLS li590[] C_aligned={C_lihdr(0,0,20),40,99,115,58,112,108,97,121,32,46,32,97,114,103,115,54,51,52,49,41,0,0,0,0};
static C_char C_TLS li591[] C_aligned={C_lihdr(0,0,14),40,100,111,54,52,53,48,32,120,54,52,53,50,41,0,0,0,0,0,0};
static C_char C_TLS li592[] C_aligned={C_lihdr(0,0,26),40,100,111,54,52,51,54,32,101,54,52,52,55,32,118,54,52,52,56,32,121,54,52,52,57,41,0,0};
static C_char C_TLS li593[] C_aligned={C_lihdr(0,0,18),40,99,109,45,108,111,103,111,32,118,101,114,115,54,52,51,53,41,0,0};
static C_char C_TLS li594[] C_aligned={C_lihdr(0,0,25),40,112,114,105,110,116,45,109,101,115,115,97,103,101,32,97,54,52,54,49,54,52,54,53,41,0};
static C_char C_TLS li595[] C_aligned={C_lihdr(0,0,23),40,112,114,105,110,116,45,101,114,114,111,114,32,97,54,52,54,55,54,52,55,49,41,0,0,0,0,0,0,0};
static C_char C_TLS li596[] C_aligned={C_lihdr(0,0,3),46,0,0,0,0,0};
static C_char C_TLS li597[] C_aligned={C_lihdr(0,0,48),40,115,99,104,101,100,117,108,101,114,45,115,112,114,111,117,116,32,97,54,52,55,53,54,52,55,56,32,97,54,52,55,52,54,52,55,57,32,97,54,52,55,51,54,52,56,48,41};
static C_char C_TLS li598[] C_aligned={C_lihdr(0,0,3),46,0,0,0,0,0};
static C_char C_TLS li599[] C_aligned={C_lihdr(0,0,26),40,115,99,104,101,100,117,108,101,114,45,115,116,111,112,32,97,54,52,57,53,54,52,57,56,41,0,0};
static C_char C_TLS li600[] C_aligned={C_lihdr(0,0,19),40,102,95,51,54,55,49,51,32,97,54,53,48,54,54,53,49,48,41,0,0,0};
static C_char C_TLS li601[] C_aligned={C_lihdr(0,0,24),40,108,111,97,100,45,115,97,108,45,102,105,108,101,32,102,105,108,101,54,53,48,53,41};
static C_char C_TLS li602[] C_aligned={C_lihdr(0,0,11),40,110,101,120,116,115,116,97,114,116,41,0,0,0};
static C_char C_TLS li603[] C_aligned={C_lihdr(0,0,8),40,110,101,120,116,105,100,41};
static C_char C_TLS li604[] C_aligned={C_lihdr(0,0,14),40,100,111,54,53,51,53,32,112,54,53,51,55,41,0,0,0,0,0,0};
static C_char C_TLS li605[] C_aligned={C_lihdr(0,0,14),40,100,111,54,53,51,48,32,112,54,53,51,50,41,0,0,0,0,0,0};
static C_char C_TLS li606[] C_aligned={C_lihdr(0,0,27),40,98,111,100,121,54,53,49,54,32,115,116,97,114,116,54,53,50,50,32,105,100,54,53,50,51,41,0,0,0};
static C_char C_TLS li607[] C_aligned={C_lihdr(0,0,27),40,100,101,102,45,105,100,54,53,49,57,32,37,115,116,97,114,116,54,53,49,52,54,53,52,52,41,0,0,0};
static C_char C_TLS li608[] C_aligned={C_lihdr(0,0,15),40,100,101,102,45,115,116,97,114,116,54,53,49,56,41,0,0,0,0,0,0,0};
static C_char C_TLS li609[] C_aligned={C_lihdr(0,0,28),40,115,112,114,111,117,116,32,112,114,111,99,54,53,49,50,32,46,32,97,114,103,115,54,53,49,51,41,0,0,0,0};
static C_char C_TLS li610[] C_aligned={C_lihdr(0,0,5),40,110,111,119,41,0,0,0,0,0};
static C_char C_TLS li611[] C_aligned={C_lihdr(0,0,3),46,0,0,0,0,0};
static C_char C_TLS li612[] C_aligned={C_lihdr(0,0,7),40,112,97,117,115,101,41,0,0,0,0,0,0,0};
static C_char C_TLS li613[] C_aligned={C_lihdr(0,0,3),46,0,0,0,0,0};
static C_char C_TLS li614[] C_aligned={C_lihdr(0,0,9),40,112,97,117,115,101,100,63,41,0};
static C_char C_TLS li615[] C_aligned={C_lihdr(0,0,3),46,0,0,0,0,0};
static C_char C_TLS li616[] C_aligned={C_lihdr(0,0,6),40,99,111,110,116,41,0,0,0,0,0,0};
static C_char C_TLS li617[] C_aligned={C_lihdr(0,0,17),40,100,111,54,53,53,55,32,116,97,105,108,54,53,53,57,41,0};
static C_char C_TLS li618[] C_aligned={C_lihdr(0,0,19),40,115,116,111,112,32,46,32,112,114,111,99,105,100,54,53,53,54,41,0,0,0};
static C_char C_TLS li619[] C_aligned={C_lihdr(0,0,3),46,0,0,0,0,0};
static C_char C_TLS li620[] C_aligned={C_lihdr(0,0,6),40,104,117,115,104,41,0,0,0,0,0,0};
static C_char C_TLS li621[] C_aligned={C_lihdr(0,0,47),40,114,117,110,45,119,104,105,108,101,45,117,110,116,105,108,32,102,111,114,109,115,54,53,54,52,32,99,108,97,117,115,101,115,54,53,54,53,32,111,112,115,54,53,54,54,41,0,0,0,0,0,0,0};
static C_char C_TLS li622[] C_aligned={C_lihdr(0,0,44),40,112,114,111,99,101,115,115,45,99,111,100,101,45,116,101,114,109,105,110,97,116,101,115,63,32,99,111,100,101,54,53,57,52,32,115,116,111,112,54,53,57,53,41,0,0,0,0};
static C_char C_TLS li623[] C_aligned={C_lihdr(0,0,31),40,97,51,55,52,48,50,32,102,111,114,109,97,108,115,54,54,49,53,32,46,32,98,111,100,121,54,54,49,54,41,0,0,0,0,0,0,0};
static C_char C_TLS li624[] C_aligned={C_lihdr(0,0,17),40,97,51,55,52,51,49,32,97,114,103,115,54,54,49,52,41,0};
static C_char C_TLS li625[] C_aligned={C_lihdr(0,0,16),40,100,111,54,53,56,55,32,111,112,115,54,53,56,57,41};
static C_char C_TLS li626[] C_aligned={C_lihdr(0,0,17),40,97,51,55,53,48,48,32,97,114,103,115,52,57,55,50,41,0};
static C_char C_TLS li627[] C_aligned={C_lihdr(0,0,16),40,97,51,55,54,52,50,32,115,121,109,52,50,56,53,41};
static C_char C_TLS li628[] C_aligned={C_lihdr(0,0,16),40,97,51,55,54,52,53,32,115,121,109,52,50,56,51,41};
static C_char C_TLS li629[] C_aligned={C_lihdr(0,0,24),40,97,51,55,54,55,52,32,118,97,108,52,50,56,49,32,115,121,109,52,50,56,50,41};
static C_char C_TLS li630[] C_aligned={C_lihdr(0,0,17),40,97,51,55,54,56,56,32,97,114,103,115,52,50,56,48,41,0};
static C_char C_TLS li631[] C_aligned={C_lihdr(0,0,26),40,97,51,55,55,48,50,32,97,114,103,115,52,48,56,52,32,101,114,114,102,52,48,56,53,41,0,0};
static C_char C_TLS li632[] C_aligned={C_lihdr(0,0,35),40,97,51,55,55,49,54,32,117,110,105,116,52,48,56,54,32,105,110,102,111,52,48,56,55,32,101,114,114,102,52,48,56,56,41,0,0,0};
static C_char C_TLS li633[] C_aligned={C_lihdr(0,0,26),40,97,51,55,56,50,50,32,97,114,103,115,52,48,51,51,32,101,114,114,102,52,48,51,52,41,0,0};
static C_char C_TLS li634[] C_aligned={C_lihdr(0,0,17),40,100,111,52,48,52,53,32,114,101,115,116,52,48,52,55,41,0};
static C_char C_TLS li635[] C_aligned={C_lihdr(0,0,26),40,100,111,52,48,55,49,32,97,114,103,115,52,48,55,51,32,116,97,105,108,52,48,55,52,41,0,0};
static C_char C_TLS li636[] C_aligned={C_lihdr(0,0,35),40,97,51,55,56,54,49,32,117,110,105,116,52,48,51,56,32,105,110,102,111,52,48,51,57,32,101,114,114,102,52,48,52,48,41,0,0,0};
static C_char C_TLS li637[] C_aligned={C_lihdr(0,0,26),40,97,51,56,50,55,57,32,97,114,103,115,52,48,50,54,32,101,114,114,102,52,48,50,55,41,0,0};
static C_char C_TLS li638[] C_aligned={C_lihdr(0,0,26),40,97,51,56,52,50,52,32,97,114,103,115,52,48,49,50,32,101,114,114,102,52,48,49,51,41,0,0};
static C_char C_TLS li639[] C_aligned={C_lihdr(0,0,17),40,100,111,51,57,56,52,32,116,97,105,108,51,57,56,54,41,0};
static C_char C_TLS li640[] C_aligned={C_lihdr(0,0,17),40,100,111,51,57,55,55,32,116,97,105,108,51,57,55,57,41,0};
static C_char C_TLS li641[] C_aligned={C_lihdr(0,0,20),40,100,111,51,57,54,53,32,99,108,97,117,115,101,115,51,57,54,55,41,0,0,0,0};
static C_char C_TLS li642[] C_aligned={C_lihdr(0,0,17),40,100,111,51,57,54,50,32,116,97,105,108,51,57,54,52,41,0};
static C_char C_TLS li643[] C_aligned={C_lihdr(0,0,35),40,97,51,56,52,55,48,32,117,110,105,116,52,48,50,50,32,105,110,102,111,52,48,50,51,32,101,114,114,102,52,48,50,52,41,0,0,0};
static C_char C_TLS li644[] C_aligned={C_lihdr(0,0,26),40,97,51,56,57,50,52,32,97,114,103,115,51,56,55,56,32,101,114,114,102,51,56,55,57,41,0,0};
static C_char C_TLS li645[] C_aligned={C_lihdr(0,0,35),40,97,51,56,57,57,50,32,117,110,105,116,51,56,57,48,32,105,110,102,111,51,56,57,49,32,101,114,114,102,51,56,57,50,41,0,0,0};
static C_char C_TLS li646[] C_aligned={C_lihdr(0,0,26),40,97,51,57,49,56,51,32,97,114,103,115,51,56,54,54,32,101,114,114,102,51,56,54,55,41,0,0};
static C_char C_TLS li647[] C_aligned={C_lihdr(0,0,35),40,97,51,57,50,48,57,32,117,110,105,116,51,56,55,49,32,105,110,102,111,51,56,55,50,32,101,114,114,102,51,56,55,51,41,0,0,0};
static C_char C_TLS li648[] C_aligned={C_lihdr(0,0,26),40,97,51,57,50,57,55,32,97,114,103,115,51,56,52,52,32,101,114,114,102,51,56,52,53,41,0,0};
static C_char C_TLS li649[] C_aligned={C_lihdr(0,0,17),40,100,111,51,56,53,50,32,105,116,101,114,51,56,53,52,41,0};
static C_char C_TLS li650[] C_aligned={C_lihdr(0,0,35),40,97,51,57,51,52,48,32,117,110,105,116,51,56,52,54,32,105,110,102,111,51,56,52,55,32,101,114,114,102,51,56,52,56,41,0,0,0};
static C_char C_TLS li651[] C_aligned={C_lihdr(0,0,26),40,97,51,57,53,55,55,32,97,114,103,115,51,56,52,49,32,101,114,114,102,51,56,52,50,41,0,0};
static C_char C_TLS li652[] C_aligned={C_lihdr(0,0,26),40,97,51,57,54,54,51,32,97,114,103,115,51,56,51,51,32,101,114,114,102,51,56,51,52,41,0,0};
static C_char C_TLS li653[] C_aligned={C_lihdr(0,0,14),40,97,51,57,55,49,53,32,101,51,56,51,57,41,0,0,0,0,0,0};
static C_char C_TLS li654[] C_aligned={C_lihdr(0,0,35),40,97,51,57,55,48,54,32,117,110,105,116,51,56,51,53,32,105,110,102,111,51,56,51,54,32,101,114,114,102,51,56,51,55,41,0,0,0};
static C_char C_TLS li655[] C_aligned={C_lihdr(0,0,26),40,97,51,57,55,54,53,32,97,114,103,115,51,56,50,54,32,101,114,114,102,51,56,50,55,41,0,0};
static C_char C_TLS li656[] C_aligned={C_lihdr(0,0,14),40,97,51,57,56,48,54,32,101,51,56,51,49,41,0,0,0,0,0,0};
static C_char C_TLS li657[] C_aligned={C_lihdr(0,0,35),40,97,51,57,56,48,48,32,117,110,105,116,51,56,50,56,32,105,110,102,111,51,56,50,57,32,101,114,114,102,51,56,51,48,41,0,0,0};
static C_char C_TLS li658[] C_aligned={C_lihdr(0,0,35),40,97,51,57,56,54,48,32,117,110,105,116,51,56,49,57,32,105,110,102,111,51,56,50,48,32,101,114,114,102,51,56,50,49,41,0,0,0};
static C_char C_TLS li659[] C_aligned={C_lihdr(0,0,35),40,97,51,57,57,50,49,32,117,110,105,116,51,56,49,51,32,105,110,102,111,51,56,49,52,32,101,114,114,102,51,56,49,53,41,0,0,0};
static C_char C_TLS li660[] C_aligned={C_lihdr(0,0,26),40,97,51,57,57,55,53,32,97,114,103,115,51,56,48,55,32,101,114,114,102,51,56,48,56,41,0,0};
static C_char C_TLS li661[] C_aligned={C_lihdr(0,0,35),40,97,52,48,48,48,53,32,117,110,105,116,51,56,48,57,32,105,110,102,111,51,56,49,48,32,101,114,114,102,51,56,49,49,41,0,0,0};
static C_char C_TLS li662[] C_aligned={C_lihdr(0,0,26),40,97,52,48,50,50,52,32,97,114,103,115,51,56,48,48,32,101,114,114,102,51,56,48,49,41,0,0};
static C_char C_TLS li663[] C_aligned={C_lihdr(0,0,26),40,97,52,48,50,53,48,32,97,114,103,115,51,55,56,55,32,101,114,114,102,51,55,56,56,41,0,0};
static C_char C_TLS li664[] C_aligned={C_lihdr(0,0,27),40,97,52,48,51,52,53,32,115,116,114,51,55,57,55,32,46,32,97,114,103,115,51,55,57,56,41,0,0,0};
static C_char C_TLS li665[] C_aligned={C_lihdr(0,0,35),40,97,52,48,51,50,53,32,117,110,105,116,51,55,57,50,32,105,110,102,111,51,55,57,51,32,101,114,114,102,51,55,57,52,41,0,0,0};
static C_char C_TLS li666[] C_aligned={C_lihdr(0,0,26),40,97,52,48,52,54,51,32,97,114,103,115,51,55,56,48,32,101,114,114,102,51,55,56,49,41,0,0};
static C_char C_TLS li667[] C_aligned={C_lihdr(0,0,35),40,97,52,48,52,56,53,32,117,110,105,116,51,55,56,50,32,105,110,102,111,51,55,56,51,32,101,114,114,102,51,55,56,52,41,0,0,0};
static C_char C_TLS li668[] C_aligned={C_lihdr(0,0,26),40,97,52,48,53,51,56,32,97,114,103,115,51,55,54,54,32,101,114,114,102,51,55,54,55,41,0,0};
static C_char C_TLS li669[] C_aligned={C_lihdr(0,0,17),40,100,111,51,55,55,51,32,97,114,103,115,51,55,55,53,41,0};
static C_char C_TLS li670[] C_aligned={C_lihdr(0,0,35),40,97,52,48,53,54,48,32,117,110,105,116,51,55,54,56,32,105,110,102,111,51,55,54,57,32,101,114,114,102,51,55,55,48,41,0,0,0};
static C_char C_TLS li671[] C_aligned={C_lihdr(0,0,26),40,97,52,48,54,57,50,32,97,114,103,115,51,55,53,57,32,101,114,114,102,51,55,54,48,41,0,0};
static C_char C_TLS li672[] C_aligned={C_lihdr(0,0,35),40,97,52,48,55,49,56,32,117,110,105,116,51,55,54,49,32,105,110,102,111,51,55,54,50,32,101,114,114,102,51,55,54,51,41,0,0,0};
static C_char C_TLS li673[] C_aligned={C_lihdr(0,0,26),40,97,52,48,56,50,56,32,97,114,103,115,51,55,53,53,32,101,114,114,102,51,55,53,54,41,0,0};
static C_char C_TLS li674[] C_aligned={C_lihdr(0,0,26),40,97,52,48,57,56,52,32,97,114,103,115,51,55,49,56,32,101,114,114,102,51,55,49,57,41,0,0};
static C_char C_TLS li675[] C_aligned={C_lihdr(0,0,35),40,97,52,49,48,48,50,32,117,110,105,116,51,55,50,48,32,105,110,102,111,51,55,50,49,32,101,114,114,102,51,55,50,50,41,0,0,0};
static C_char C_TLS li676[] C_aligned={C_lihdr(0,0,26),40,97,52,49,48,53,53,32,97,114,103,115,51,55,49,50,32,101,114,114,102,51,55,49,51,41,0,0};
static C_char C_TLS li677[] C_aligned={C_lihdr(0,0,26),40,97,52,49,50,48,55,32,97,114,103,115,51,55,48,57,32,101,114,114,102,51,55,49,48,41,0,0};
static C_char C_TLS li678[] C_aligned={C_lihdr(0,0,26),40,97,52,49,51,52,54,32,97,114,103,115,51,55,48,54,32,101,114,114,102,51,55,48,55,41,0,0};
static C_char C_TLS li679[] C_aligned={C_lihdr(0,0,26),40,97,52,49,52,54,54,32,97,114,103,115,51,54,56,53,32,101,114,114,102,51,54,56,54,41,0,0};
static C_char C_TLS li680[] C_aligned={C_lihdr(0,0,35),40,97,52,49,52,57,55,32,117,110,105,116,51,54,56,56,32,105,110,102,111,51,54,56,57,32,101,114,114,102,51,54,57,48,41,0,0,0};
static C_char C_TLS li681[] C_aligned={C_lihdr(0,0,26),40,97,52,49,53,56,57,32,97,114,103,115,51,54,55,57,32,101,114,114,102,51,54,56,48,41,0,0};
static C_char C_TLS li682[] C_aligned={C_lihdr(0,0,35),40,97,52,49,54,48,55,32,117,110,105,116,51,54,56,49,32,105,110,102,111,51,54,56,50,32,101,114,114,102,51,54,56,51,41,0,0,0};
static C_char C_TLS li683[] C_aligned={C_lihdr(0,0,17),40,100,111,51,51,49,51,32,100,97,116,97,51,51,49,53,41,0};
static C_char C_TLS li684[] C_aligned={C_lihdr(0,0,35),40,97,52,49,54,56,49,32,117,110,105,116,51,54,54,56,32,105,110,102,111,51,54,54,57,32,101,114,114,102,51,54,55,48,41,0,0,0};
static C_char C_TLS li685[] C_aligned={C_lihdr(0,0,26),40,97,52,49,55,56,49,32,97,114,103,115,51,54,53,54,32,101,114,114,102,51,54,53,55,41,0,0};
static C_char C_TLS li686[] C_aligned={C_lihdr(0,0,35),40,97,52,49,55,57,49,32,117,110,105,116,51,54,53,56,32,105,110,102,111,51,54,53,57,32,101,114,114,102,51,54,54,48,41,0,0,0};
static C_char C_TLS li687[] C_aligned={C_lihdr(0,0,20),40,97,52,49,57,54,55,32,117,51,50,57,54,32,112,51,50,57,55,41,0,0,0,0};
static C_char C_TLS li688[] C_aligned={C_lihdr(0,0,20),40,97,52,49,57,57,51,32,101,51,50,54,56,32,112,51,50,54,57,41,0,0,0,0};
static C_char C_TLS li689[] C_aligned={C_lihdr(0,0,12),40,112,112,97,116,32,112,51,50,51,49,41,0,0,0,0};
static C_char C_TLS li690[] C_aligned={C_lihdr(0,0,35),40,97,52,50,48,48,55,32,116,121,112,51,50,50,55,32,112,97,116,51,50,50,56,32,46,32,97,114,103,115,51,50,50,57,41,0,0,0};
static C_char C_TLS li691[] C_aligned={C_lihdr(0,0,20),40,97,52,50,49,49,48,32,114,51,50,50,52,32,112,51,50,50,53,41,0,0,0,0};
static C_char C_TLS li692[] C_aligned={C_lihdr(0,0,20),40,97,52,50,49,50,48,32,116,51,49,55,53,32,112,51,49,55,54,41,0,0,0,0};
static C_char C_TLS li693[] C_aligned={C_lihdr(0,0,25),40,97,52,50,49,51,52,32,111,98,106,49,48,49,49,32,112,111,114,116,49,48,49,50,41,0};
static C_char C_TLS li694[] C_aligned={C_lihdr(0,0,71),40,100,111,55,54,56,32,100,55,55,48,32,107,55,55,49,32,112,55,55,50,32,107,60,55,55,51,32,107,62,55,55,52,32,102,55,55,53,32,102,62,55,55,54,32,102,60,55,55,55,32,111,55,55,56,32,120,55,55,57,32,110,55,56,48,32,101,55,56,49,41,0,0,0,0,0,0,0};
static C_char C_TLS li695[] C_aligned={C_lihdr(0,0,14),40,100,111,55,54,50,32,107,101,121,55,54,52,41,0,0,0,0,0,0};
static C_char C_TLS li696[] C_aligned={C_lihdr(0,0,24),40,97,52,50,51,54,48,32,109,101,115,115,56,57,32,46,32,100,97,116,97,57,48,41};
static C_char C_TLS li697[] C_aligned={C_lihdr(0,0,15),40,97,52,50,51,54,54,32,101,120,112,114,56,56,41,0,0,0,0,0,0,0};
static C_char C_TLS li698[] C_aligned={C_lihdr(0,0,22),40,97,52,50,51,55,50,32,102,117,110,99,51,56,32,105,110,102,111,51,57,41,0,0,0,0,0,0};
static C_char C_TLS li699[] C_aligned={C_lihdr(0,0,24),40,97,52,50,52,50,52,32,115,112,101,99,51,54,32,46,32,98,111,100,121,51,55,41};
static C_char C_TLS li700[] C_aligned={C_lihdr(0,0,10),40,116,111,112,108,101,118,101,108,41,0,0};


/* from now in k36420 in k36417 in k36414 in k36411 in k36408 in k36405 in k36402 in k36399 in k35543 in k35540 in k35537 in k35534 in k35531 in k35528 in k35525 in k35522 in k35519 in k35516 in k35513 in k35510 in k35507 in k35504 in k35501 in k35498 in k35495 in k35492 in k35489 in k35486 in k30217 in k26697 in k26694 in k26691 in k26688 in k26263 in k26260 in k26257 in k26254 in k26251 in k25668 in k25665 in k25142 in k25139 in k25136 in k25133 in k25130 in k25127 in k25124 in k25121 in k25118 in k25115 in k25112 in k25109 in k25106 in k25103 in k25100 in k25097 in k25094 in k25091 in k25088 in k25085 in k25082 in k24943 in k24940 in k24937 in k24934 in k24878 in k24875 in k24872 in k24869 in k24866 in k24863 in k24860 in k24857 in k23555 in k23486 in k23293 in k23290 in k23185 in k23134 in k11783 in k10718 in k10715 in k7274 in k7271 in k6978 in k6975 in k6971 in k6680 in k6677 in k6674 in k6671 */
#define return(x) C_cblock C_r = (C_flonum(&C_a,(x))); goto C_ret; C_cblockend
static C_word C_fcall stub6551(C_word C_buf) C_regparm;
C_regparm static C_word C_fcall stub6551(C_word C_buf){
C_word C_r=C_SCHEME_UNDEFINED,*C_a=(C_word*)C_buf;
 C_return( (Time::getMillisecondCounterHiRes() / 1000.0) );
C_ret:
#undef return

return C_r;}

/* from k36716 */
static C_word C_fcall stub6507(C_word C_buf,C_word C_a0) C_regparm;
C_regparm static C_word C_fcall stub6507(C_word C_buf,C_word C_a0){
C_word C_r=C_SCHEME_UNDEFINED,*C_a=(C_word*)C_buf;
char * t0=(char * )C_string_or_null(C_a0);
load_sal_file(t0);
return C_r;}

/* from k36701 in hush in k36420 in k36417 in k36414 in k36411 in k36408 in k36405 in k36402 in k36399 in k35543 in k35540 in k35537 in k35534 in k35531 in k35528 in k35525 in k35522 in k35519 in k35516 in k35513 in k35510 in k35507 in k35504 in k35501 in k35498 in k35495 in k35492 in k35489 in k35486 in k30217 in k26697 in k26694 in k26691 in k26688 in k26263 in k26260 in k26257 in k26254 in k26251 in k25668 in k25665 in k25142 in k25139 in k25136 in k25133 in k25130 in k25127 in k25124 in k25121 in k25118 in k25115 in k25112 in k25109 in k25106 in k25103 in k25100 in k25097 in k25094 in k25091 in k25088 in k25085 in k25082 in k24943 in k24940 in k24937 in k24934 in k24878 in k24875 in k24872 in k24869 in k24866 in k24863 in k24860 in k24857 in k23555 in k23486 in k23293 in k23290 in k23185 in k23134 in k11783 in k10718 in k10715 in k7274 in k7271 in k6978 in k6975 in k6971 in k6680 in k6677 in k6674 in k6671 */
C_noret_decl(stub6501)
static void C_ccall stub6501(C_word C_c,C_word C_self,C_word C_k,C_word C_buf) C_noret;
static void C_ccall stub6501(C_word C_c,C_word C_self,C_word C_k,C_word C_buf){
C_word C_r=C_SCHEME_UNDEFINED,*C_a=(C_word*)C_buf;
int C_level=C_save_callback_continuation(&C_a,C_k);
scheduler_hush();
C_k=C_restore_callback_continuation2(C_level);
C_kontinue(C_k,C_r);}

/* from k36695 */
C_noret_decl(stub6496)
static void C_ccall stub6496(C_word C_c,C_word C_self,C_word C_k,C_word C_buf,C_word C_a0) C_noret;
static void C_ccall stub6496(C_word C_c,C_word C_self,C_word C_k,C_word C_buf,C_word C_a0){
C_word C_r=C_SCHEME_UNDEFINED,*C_a=(C_word*)C_buf;
int t0=(int )C_unfix(C_a0);
int C_level=C_save_callback_continuation(&C_a,C_k);
scheduler_stop(t0);
C_k=C_restore_callback_continuation2(C_level);
C_kontinue(C_k,C_r);}

/* from k36679 in cont in k36420 in k36417 in k36414 in k36411 in k36408 in k36405 in k36402 in k36399 in k35543 in k35540 in k35537 in k35534 in k35531 in k35528 in k35525 in k35522 in k35519 in k35516 in k35513 in k35510 in k35507 in k35504 in k35501 in k35498 in k35495 in k35492 in k35489 in k35486 in k30217 in k26697 in k26694 in k26691 in k26688 in k26263 in k26260 in k26257 in k26254 in k26251 in k25668 in k25665 in k25142 in k25139 in k25136 in k25133 in k25130 in k25127 in k25124 in k25121 in k25118 in k25115 in k25112 in k25109 in k25106 in k25103 in k25100 in k25097 in k25094 in k25091 in k25088 in k25085 in k25082 in k24943 in k24940 in k24937 in k24934 in k24878 in k24875 in k24872 in k24869 in k24866 in k24863 in k24860 in k24857 in k23555 in k23486 in k23293 in k23290 in k23185 in k23134 in k11783 in k10718 in k10715 in k7274 in k7271 in k6978 in k6975 in k6971 in k6680 in k6677 in k6674 in k6671 */
C_noret_decl(stub6491)
static void C_ccall stub6491(C_word C_c,C_word C_self,C_word C_k,C_word C_buf) C_noret;
static void C_ccall stub6491(C_word C_c,C_word C_self,C_word C_k,C_word C_buf){
C_word C_r=C_SCHEME_UNDEFINED,*C_a=(C_word*)C_buf;
int C_level=C_save_callback_continuation(&C_a,C_k);
scheduler_cont();
C_k=C_restore_callback_continuation2(C_level);
C_kontinue(C_k,C_r);}

/* from k36670 in pause in k36420 in k36417 in k36414 in k36411 in k36408 in k36405 in k36402 in k36399 in k35543 in k35540 in k35537 in k35534 in k35531 in k35528 in k35525 in k35522 in k35519 in k35516 in k35513 in k35510 in k35507 in k35504 in k35501 in k35498 in k35495 in k35492 in k35489 in k35486 in k30217 in k26697 in k26694 in k26691 in k26688 in k26263 in k26260 in k26257 in k26254 in k26251 in k25668 in k25665 in k25142 in k25139 in k25136 in k25133 in k25130 in k25127 in k25124 in k25121 in k25118 in k25115 in k25112 in k25109 in k25106 in k25103 in k25100 in k25097 in k25094 in k25091 in k25088 in k25085 in k25082 in k24943 in k24940 in k24937 in k24934 in k24878 in k24875 in k24872 in k24869 in k24866 in k24863 in k24860 in k24857 in k23555 in k23486 in k23293 in k23290 in k23185 in k23134 in k11783 in k10718 in k10715 in k7274 in k7271 in k6978 in k6975 in k6971 in k6680 in k6677 in k6674 in k6671 */
C_noret_decl(stub6487)
static void C_ccall stub6487(C_word C_c,C_word C_self,C_word C_k,C_word C_buf) C_noret;
static void C_ccall stub6487(C_word C_c,C_word C_self,C_word C_k,C_word C_buf){
C_word C_r=C_SCHEME_UNDEFINED,*C_a=(C_word*)C_buf;
int C_level=C_save_callback_continuation(&C_a,C_k);
scheduler_pause();
C_k=C_restore_callback_continuation2(C_level);
C_kontinue(C_k,C_r);}

/* from k36661 in paused? in k36420 in k36417 in k36414 in k36411 in k36408 in k36405 in k36402 in k36399 in k35543 in k35540 in k35537 in k35534 in k35531 in k35528 in k35525 in k35522 in k35519 in k35516 in k35513 in k35510 in k35507 in k35504 in k35501 in k35498 in k35495 in k35492 in k35489 in k35486 in k30217 in k26697 in k26694 in k26691 in k26688 in k26263 in k26260 in k26257 in k26254 in k26251 in k25668 in k25665 in k25142 in k25139 in k25136 in k25133 in k25130 in k25127 in k25124 in k25121 in k25118 in k25115 in k25112 in k25109 in k25106 in k25103 in k25100 in k25097 in k25094 in k25091 in k25088 in k25085 in k25082 in k24943 in k24940 in k24937 in k24934 in k24878 in k24875 in k24872 in k24869 in k24866 in k24863 in k24860 in k24857 in k23555 in k23486 in k23293 in k23290 in k23185 in k23134 in k11783 in k10718 in k10715 in k7274 in k7271 in k6978 in k6975 in k6971 in k6680 in k6677 in k6674 in k6671 */
C_noret_decl(stub6483)
static void C_ccall stub6483(C_word C_c,C_word C_self,C_word C_k,C_word C_buf) C_noret;
static void C_ccall stub6483(C_word C_c,C_word C_self,C_word C_k,C_word C_buf){
C_word C_r=C_SCHEME_UNDEFINED,*C_a=(C_word*)C_buf;
int C_level=C_save_callback_continuation(&C_a,C_k);
C_r=C_mk_bool(scheduler_is_paused());
C_k=C_restore_callback_continuation2(C_level);
C_kontinue(C_k,C_r);}

/* from k36655 */
C_noret_decl(stub6476)
static void C_ccall stub6476(C_word C_c,C_word C_self,C_word C_k,C_word C_buf,C_word C_a0,C_word C_a1,C_word C_a2) C_noret;
static void C_ccall stub6476(C_word C_c,C_word C_self,C_word C_k,C_word C_buf,C_word C_a0,C_word C_a1,C_word C_a2){
C_word C_r=C_SCHEME_UNDEFINED,*C_a=(C_word*)C_buf;
C_word t0=(C_word )(C_a0);
double t1=(double )C_c_double(C_a1);
int t2=(int )C_unfix(C_a2);
int C_level=C_save_callback_continuation(&C_a,C_k);
scheduler_sprout(t0,t1,t2);
C_k=C_restore_callback_continuation2(C_level);
C_kontinue(C_k,C_r);}

/* from k36631 in print-error in k36420 in k36417 in k36414 in k36411 in k36408 in k36405 in k36402 in k36399 in k35543 in k35540 in k35537 in k35534 in k35531 in k35528 in k35525 in k35522 in k35519 in k35516 in k35513 in k35510 in k35507 in k35504 in k35501 in k35498 in k35495 in k35492 in k35489 in k35486 in k30217 in k26697 in k26694 in k26691 in k26688 in k26263 in k26260 in k26257 in k26254 in k26251 in k25668 in k25665 in k25142 in k25139 in k25136 in k25133 in k25130 in k25127 in k25124 in k25121 in k25118 in k25115 in k25112 in k25109 in k25106 in k25103 in k25100 in k25097 in k25094 in k25091 in k25088 in k25085 in k25082 in k24943 in k24940 in k24937 in k24934 in k24878 in k24875 in k24872 in k24869 in k24866 in k24863 in k24860 in k24857 in k23555 in k23486 in k23293 in k23290 in k23185 in k23134 in k11783 in k10718 in k10715 in k7274 in k7271 in k6978 in k6975 in k6971 in k6680 in k6677 in k6674 in k6671 */
static C_word C_fcall stub6468(C_word C_buf,C_word C_a0) C_regparm;
C_regparm static C_word C_fcall stub6468(C_word C_buf,C_word C_a0){
C_word C_r=C_SCHEME_UNDEFINED,*C_a=(C_word*)C_buf;
char * t0=(char * )C_string_or_null(C_a0);
print_error(t0);
return C_r;}

/* from k36617 in print-message in k36420 in k36417 in k36414 in k36411 in k36408 in k36405 in k36402 in k36399 in k35543 in k35540 in k35537 in k35534 in k35531 in k35528 in k35525 in k35522 in k35519 in k35516 in k35513 in k35510 in k35507 in k35504 in k35501 in k35498 in k35495 in k35492 in k35489 in k35486 in k30217 in k26697 in k26694 in k26691 in k26688 in k26263 in k26260 in k26257 in k26254 in k26251 in k25668 in k25665 in k25142 in k25139 in k25136 in k25133 in k25130 in k25127 in k25124 in k25121 in k25118 in k25115 in k25112 in k25109 in k25106 in k25103 in k25100 in k25097 in k25094 in k25091 in k25088 in k25085 in k25082 in k24943 in k24940 in k24937 in k24934 in k24878 in k24875 in k24872 in k24869 in k24866 in k24863 in k24860 in k24857 in k23555 in k23486 in k23293 in k23290 in k23185 in k23134 in k11783 in k10718 in k10715 in k7274 in k7271 in k6978 in k6975 in k6971 in k6680 in k6677 in k6674 in k6671 */
static C_word C_fcall stub6462(C_word C_buf,C_word C_a0) C_regparm;
C_regparm static C_word C_fcall stub6462(C_word C_buf,C_word C_a0){
C_word C_r=C_SCHEME_UNDEFINED,*C_a=(C_word*)C_buf;
char * t0=(char * )C_string_or_null(C_a0);
print_message(t0);
return C_r;}

/* from k35981 */
static C_word C_fcall stub6412(C_word C_buf,C_word C_a0,C_word C_a1,C_word C_a2) C_regparm;
C_regparm static C_word C_fcall stub6412(C_word C_buf,C_word C_a0,C_word C_a1,C_word C_a2){
C_word C_r=C_SCHEME_UNDEFINED,*C_a=(C_word*)C_buf;
float t0=(float )C_c_double(C_a0);
float t1=(float )C_c_double(C_a1);
float t2=(float )C_c_double(C_a2);
cs_play_score(t0,t1,t2);
return C_r;}

/* from k35736 */
static C_word C_fcall stub6333(C_word C_buf,C_word C_a0,C_word C_a1) C_regparm;
C_regparm static C_word C_fcall stub6333(C_word C_buf,C_word C_a0,C_word C_a1){
C_word C_r=C_SCHEME_UNDEFINED,*C_a=(C_word*)C_buf;
float t0=(float )C_c_double(C_a0);
float t1=(float )C_c_double(C_a1);
cs_print_score(t0,t1);
return C_r;}

/* from k35683 */
static C_word C_fcall stub6285(C_word C_buf,C_word C_a0,C_word C_a1,C_word C_a2) C_regparm;
C_regparm static C_word C_fcall stub6285(C_word C_buf,C_word C_a0,C_word C_a1,C_word C_a2){
C_word C_r=C_SCHEME_UNDEFINED,*C_a=(C_word*)C_buf;
int t0=(int )C_unfix(C_a0);
int t1=(int )C_unfix(C_a1);
C_word t2=(C_word )(C_a2);
cs_send_score_event(t0,t1,t2);
return C_r;}

/* from k35626 */
static C_word C_fcall stub6274(C_word C_buf,C_word C_a0,C_word C_a1,C_word C_a2) C_regparm;
C_regparm static C_word C_fcall stub6274(C_word C_buf,C_word C_a0,C_word C_a1,C_word C_a2){
C_word C_r=C_SCHEME_UNDEFINED,*C_a=(C_word*)C_buf;
int t0=(int )C_unfix(C_a0);
int t1=(int )C_unfix(C_a1);
C_word t2=(C_word )(C_a2);
cs_send_score_event(t0,t1,t2);
return C_r;}

/* from f_35595 in cs:clear in k35543 in k35540 in k35537 in k35534 in k35531 in k35528 in k35525 in k35522 in k35519 in k35516 in k35513 in k35510 in k35507 in k35504 in k35501 in k35498 in k35495 in k35492 in k35489 in k35486 in k30217 in k26697 in k26694 in k26691 in k26688 in k26263 in k26260 in k26257 in k26254 in k26251 in k25668 in k25665 in k25142 in k25139 in k25136 in k25133 in k25130 in k25127 in k25124 in k25121 in k25118 in k25115 in k25112 in k25109 in k25106 in k25103 in k25100 in k25097 in k25094 in k25091 in k25088 in k25085 in k25082 in k24943 in k24940 in k24937 in k24934 in k24878 in k24875 in k24872 in k24869 in k24866 in k24863 in k24860 in k24857 in k23555 in k23486 in k23293 in k23290 in k23185 in k23134 in k11783 in k10718 in k10715 in k7274 in k7271 in k6978 in k6975 in k6971 in k6680 in k6677 in k6674 in k6671 */
static C_word C_fcall stub6268(C_word C_buf) C_regparm;
C_regparm static C_word C_fcall stub6268(C_word C_buf){
C_word C_r=C_SCHEME_UNDEFINED,*C_a=(C_word*)C_buf;
cs_clear_score();
return C_r;}

/* from f_35572 in k35566 in cs:record in k35543 in k35540 in k35537 in k35534 in k35531 in k35528 in k35525 in k35522 in k35519 in k35516 in k35513 in k35510 in k35507 in k35504 in k35501 in k35498 in k35495 in k35492 in k35489 in k35486 in k30217 in k26697 in k26694 in k26691 in k26688 in k26263 in k26260 in k26257 in k26254 in k26251 in k25668 in k25665 in k25142 in k25139 in k25136 in k25133 in k25130 in k25127 in k25124 in k25121 in k25118 in k25115 in k25112 in k25109 in k25106 in k25103 in k25100 in k25097 in k25094 in k25091 in k25088 in k25085 in k25082 in k24943 in k24940 in k24937 in k24934 in k24878 in k24875 in k24872 in k24869 in k24866 in k24863 in k24860 in k24857 in k23555 in k23486 in k23293 in k23290 in k23185 in k23134 in k11783 in k10718 in k10715 in k7274 in k7271 in k6978 in k6975 in k6971 in k6680 in k6677 in k6674 in k6671 */
static C_word C_fcall stub6264(C_word C_buf,C_word C_a0) C_regparm;
C_regparm static C_word C_fcall stub6264(C_word C_buf,C_word C_a0){
C_word C_r=C_SCHEME_UNDEFINED,*C_a=(C_word*)C_buf;
int t0=(int )C_truep(C_a0);
cs_record_mode(t0);
return C_r;}

/* from k35577 */
static C_word C_fcall stub6260(C_word C_buf,C_word C_a0) C_regparm;
C_regparm static C_word C_fcall stub6260(C_word C_buf,C_word C_a0){
C_word C_r=C_SCHEME_UNDEFINED,*C_a=(C_word*)C_buf;
float t0=(float )C_c_double(C_a0);
cs_record_start(t0);
return C_r;}

/* from f_35558 in cs:record in k35543 in k35540 in k35537 in k35534 in k35531 in k35528 in k35525 in k35522 in k35519 in k35516 in k35513 in k35510 in k35507 in k35504 in k35501 in k35498 in k35495 in k35492 in k35489 in k35486 in k30217 in k26697 in k26694 in k26691 in k26688 in k26263 in k26260 in k26257 in k26254 in k26251 in k25668 in k25665 in k25142 in k25139 in k25136 in k25133 in k25130 in k25127 in k25124 in k25121 in k25118 in k25115 in k25112 in k25109 in k25106 in k25103 in k25100 in k25097 in k25094 in k25091 in k25088 in k25085 in k25082 in k24943 in k24940 in k24937 in k24934 in k24878 in k24875 in k24872 in k24869 in k24866 in k24863 in k24860 in k24857 in k23555 in k23486 in k23293 in k23290 in k23185 in k23134 in k11783 in k10718 in k10715 in k7274 in k7271 in k6978 in k6975 in k6971 in k6680 in k6677 in k6674 in k6671 */
static C_word C_fcall stub6256(C_word C_buf,C_word C_a0) C_regparm;
C_regparm static C_word C_fcall stub6256(C_word C_buf,C_word C_a0){
C_word C_r=C_SCHEME_UNDEFINED,*C_a=(C_word*)C_buf;
int t0=(int )C_truep(C_a0);
cs_record_mode(t0);
return C_r;}

/* from f_35478 in mp:recordseq in k30217 in k26697 in k26694 in k26691 in k26688 in k26263 in k26260 in k26257 in k26254 in k26251 in k25668 in k25665 in k25142 in k25139 in k25136 in k25133 in k25130 in k25127 in k25124 in k25121 in k25118 in k25115 in k25112 in k25109 in k25106 in k25103 in k25100 in k25097 in k25094 in k25091 in k25088 in k25085 in k25082 in k24943 in k24940 in k24937 in k24934 in k24878 in k24875 in k24872 in k24869 in k24866 in k24863 in k24860 in k24857 in k23555 in k23486 in k23293 in k23290 in k23185 in k23134 in k11783 in k10718 in k10715 in k7274 in k7271 in k6978 in k6975 in k6971 in k6680 in k6677 in k6674 in k6671 */
static C_word C_fcall stub6176(C_word C_buf,C_word C_a0) C_regparm;
C_regparm static C_word C_fcall stub6176(C_word C_buf,C_word C_a0){
C_word C_r=C_SCHEME_UNDEFINED,*C_a=(C_word*)C_buf;
int t0=(int )C_truep(C_a0);
mp_recordseq(t0);
return C_r;}

/* from f_35464 in mp:clearseq in k30217 in k26697 in k26694 in k26691 in k26688 in k26263 in k26260 in k26257 in k26254 in k26251 in k25668 in k25665 in k25142 in k25139 in k25136 in k25133 in k25130 in k25127 in k25124 in k25121 in k25118 in k25115 in k25112 in k25109 in k25106 in k25103 in k25100 in k25097 in k25094 in k25091 in k25088 in k25085 in k25082 in k24943 in k24940 in k24937 in k24934 in k24878 in k24875 in k24872 in k24869 in k24866 in k24863 in k24860 in k24857 in k23555 in k23486 in k23293 in k23290 in k23185 in k23134 in k11783 in k10718 in k10715 in k7274 in k7271 in k6978 in k6975 in k6971 in k6680 in k6677 in k6674 in k6671 */
static C_word C_fcall stub6170(C_word C_buf) C_regparm;
C_regparm static C_word C_fcall stub6170(C_word C_buf){
C_word C_r=C_SCHEME_UNDEFINED,*C_a=(C_word*)C_buf;
mp_clearseq();
return C_r;}

/* from f_35453 in mp:plotseq in k30217 in k26697 in k26694 in k26691 in k26688 in k26263 in k26260 in k26257 in k26254 in k26251 in k25668 in k25665 in k25142 in k25139 in k25136 in k25133 in k25130 in k25127 in k25124 in k25121 in k25118 in k25115 in k25112 in k25109 in k25106 in k25103 in k25100 in k25097 in k25094 in k25091 in k25088 in k25085 in k25082 in k24943 in k24940 in k24937 in k24934 in k24878 in k24875 in k24872 in k24869 in k24866 in k24863 in k24860 in k24857 in k23555 in k23486 in k23293 in k23290 in k23185 in k23134 in k11783 in k10718 in k10715 in k7274 in k7271 in k6978 in k6975 in k6971 in k6680 in k6677 in k6674 in k6671 */
static C_word C_fcall stub6167(C_word C_buf) C_regparm;
C_regparm static C_word C_fcall stub6167(C_word C_buf){
C_word C_r=C_SCHEME_UNDEFINED,*C_a=(C_word*)C_buf;
mp_plotseq();
return C_r;}

/* from f_35442 in mp:copyseq in k30217 in k26697 in k26694 in k26691 in k26688 in k26263 in k26260 in k26257 in k26254 in k26251 in k25668 in k25665 in k25142 in k25139 in k25136 in k25133 in k25130 in k25127 in k25124 in k25121 in k25118 in k25115 in k25112 in k25109 in k25106 in k25103 in k25100 in k25097 in k25094 in k25091 in k25088 in k25085 in k25082 in k24943 in k24940 in k24937 in k24934 in k24878 in k24875 in k24872 in k24869 in k24866 in k24863 in k24860 in k24857 in k23555 in k23486 in k23293 in k23290 in k23185 in k23134 in k11783 in k10718 in k10715 in k7274 in k7271 in k6978 in k6975 in k6971 in k6680 in k6677 in k6674 in k6671 */
static C_word C_fcall stub6164(C_word C_buf) C_regparm;
C_regparm static C_word C_fcall stub6164(C_word C_buf){
C_word C_r=C_SCHEME_UNDEFINED,*C_a=(C_word*)C_buf;
mp_copyseq();
return C_r;}

/* from f_35431 in mp:saveseq in k30217 in k26697 in k26694 in k26691 in k26688 in k26263 in k26260 in k26257 in k26254 in k26251 in k25668 in k25665 in k25142 in k25139 in k25136 in k25133 in k25130 in k25127 in k25124 in k25121 in k25118 in k25115 in k25112 in k25109 in k25106 in k25103 in k25100 in k25097 in k25094 in k25091 in k25088 in k25085 in k25082 in k24943 in k24940 in k24937 in k24934 in k24878 in k24875 in k24872 in k24869 in k24866 in k24863 in k24860 in k24857 in k23555 in k23486 in k23293 in k23290 in k23185 in k23134 in k11783 in k10718 in k10715 in k7274 in k7271 in k6978 in k6975 in k6971 in k6680 in k6677 in k6674 in k6671 */
static C_word C_fcall stub6161(C_word C_buf) C_regparm;
C_regparm static C_word C_fcall stub6161(C_word C_buf){
C_word C_r=C_SCHEME_UNDEFINED,*C_a=(C_word*)C_buf;
mp_saveseq();
return C_r;}

/* from f_35420 in mp:playseq in k30217 in k26697 in k26694 in k26691 in k26688 in k26263 in k26260 in k26257 in k26254 in k26251 in k25668 in k25665 in k25142 in k25139 in k25136 in k25133 in k25130 in k25127 in k25124 in k25121 in k25118 in k25115 in k25112 in k25109 in k25106 in k25103 in k25100 in k25097 in k25094 in k25091 in k25088 in k25085 in k25082 in k24943 in k24940 in k24937 in k24934 in k24878 in k24875 in k24872 in k24869 in k24866 in k24863 in k24860 in k24857 in k23555 in k23486 in k23293 in k23290 in k23185 in k23134 in k11783 in k10718 in k10715 in k7274 in k7271 in k6978 in k6975 in k6971 in k6680 in k6677 in k6674 in k6671 */
static C_word C_fcall stub6158(C_word C_buf) C_regparm;
C_regparm static C_word C_fcall stub6158(C_word C_buf){
C_word C_r=C_SCHEME_UNDEFINED,*C_a=(C_word*)C_buf;
mp_playseq();
return C_r;}

/* from k35393 */
static C_word C_fcall stub6154(C_word C_buf,C_word C_a0) C_regparm;
C_regparm static C_word C_fcall stub6154(C_word C_buf,C_word C_a0){
C_word C_r=C_SCHEME_UNDEFINED,*C_a=(C_word*)C_buf;
int t0=(int )C_unfix(C_a0);
mp_tuning(t0);
return C_r;}

/* from k35269 */
static C_word C_fcall stub6147(C_word C_buf,C_word C_a0) C_regparm;
C_regparm static C_word C_fcall stub6147(C_word C_buf,C_word C_a0){
C_word C_r=C_SCHEME_UNDEFINED,*C_a=(C_word*)C_buf;
int t0=(int )C_unfix(C_a0);
mp_setmessagemask(t0);
return C_r;}

/* from k35158 */
static C_word C_fcall stub6135(C_word C_buf,C_word C_a0) C_regparm;
C_regparm static C_word C_fcall stub6135(C_word C_buf,C_word C_a0){
C_word C_r=C_SCHEME_UNDEFINED,*C_a=(C_word*)C_buf;
int t0=(int )C_unfix(C_a0);
mp_setchannelmask(t0);
return C_r;}

/* from f_35144 in mp:inhook in k30217 in k26697 in k26694 in k26691 in k26688 in k26263 in k26260 in k26257 in k26254 in k26251 in k25668 in k25665 in k25142 in k25139 in k25136 in k25133 in k25130 in k25127 in k25124 in k25121 in k25118 in k25115 in k25112 in k25109 in k25106 in k25103 in k25100 in k25097 in k25094 in k25091 in k25088 in k25085 in k25082 in k24943 in k24940 in k24937 in k24934 in k24878 in k24875 in k24872 in k24869 in k24866 in k24863 in k24860 in k24857 in k23555 in k23486 in k23293 in k23290 in k23185 in k23134 in k11783 in k10718 in k10715 in k7274 in k7271 in k6978 in k6975 in k6971 in k6680 in k6677 in k6674 in k6671 */
static C_word C_fcall stub6124(C_word C_buf,C_word C_a0) C_regparm;
C_regparm static C_word C_fcall stub6124(C_word C_buf,C_word C_a0){
C_word C_r=C_SCHEME_UNDEFINED,*C_a=(C_word*)C_buf;
C_word t0=(C_word )(C_a0);
set_input_hook(t0);
return C_r;}

/* from f_35139 in mp:inhook in k30217 in k26697 in k26694 in k26691 in k26688 in k26263 in k26260 in k26257 in k26254 in k26251 in k25668 in k25665 in k25142 in k25139 in k25136 in k25133 in k25130 in k25127 in k25124 in k25121 in k25118 in k25115 in k25112 in k25109 in k25106 in k25103 in k25100 in k25097 in k25094 in k25091 in k25088 in k25085 in k25082 in k24943 in k24940 in k24937 in k24934 in k24878 in k24875 in k24872 in k24869 in k24866 in k24863 in k24860 in k24857 in k23555 in k23486 in k23293 in k23290 in k23185 in k23134 in k11783 in k10718 in k10715 in k7274 in k7271 in k6978 in k6975 in k6971 in k6680 in k6677 in k6674 in k6671 */
static C_word C_fcall stub6115(C_word C_buf,C_word C_a0) C_regparm;
C_regparm static C_word C_fcall stub6115(C_word C_buf,C_word C_a0){
C_word C_r=C_SCHEME_UNDEFINED,*C_a=(C_word*)C_buf;
C_word t0=(C_word )(C_a0);
set_input_hook(t0);
return C_r;}

/* from k35083 */
static C_word C_fcall stub6108(C_word C_buf,C_word C_a0) C_regparm;
C_regparm static C_word C_fcall stub6108(C_word C_buf,C_word C_a0){
C_word C_r=C_SCHEME_UNDEFINED,*C_a=(C_word*)C_buf;
MidiMessage *t0=(MidiMessage *)C_c_pointer_or_null(C_a0);
mp_message(t0);
return C_r;}

/* from k35071 */
static C_word C_fcall stub6099(C_word C_buf,C_word C_a0,C_word C_a1,C_word C_a2,C_word C_a3,C_word C_a4) C_regparm;
C_regparm static C_word C_fcall stub6099(C_word C_buf,C_word C_a0,C_word C_a1,C_word C_a2,C_word C_a3,C_word C_a4){
C_word C_r=C_SCHEME_UNDEFINED,*C_a=(C_word*)C_buf;
int t0=(int )C_unfix(C_a0);
double t1=(double )C_c_double(C_a1);
float t2=(float )C_c_double(C_a2);
float t3=(float )C_c_double(C_a3);
float t4=(float )C_c_double(C_a4);
mp_data(t0,t1,t2,t3,t4);
return C_r;}

/* from k35043 */
static C_word C_fcall stub6084(C_word C_buf,C_word C_a0,C_word C_a1,C_word C_a2,C_word C_a3,C_word C_a4) C_regparm;
C_regparm static C_word C_fcall stub6084(C_word C_buf,C_word C_a0,C_word C_a1,C_word C_a2,C_word C_a3,C_word C_a4){
C_word C_r=C_SCHEME_UNDEFINED,*C_a=(C_word*)C_buf;
int t0=(int )C_unfix(C_a0);
double t1=(double )C_c_double(C_a1);
float t2=(float )C_c_double(C_a2);
float t3=(float )C_c_double(C_a3);
float t4=(float )C_c_double(C_a4);
mp_data(t0,t1,t2,t3,t4);
return C_r;}

/* from k35015 */
static C_word C_fcall stub6069(C_word C_buf,C_word C_a0,C_word C_a1,C_word C_a2,C_word C_a3,C_word C_a4) C_regparm;
C_regparm static C_word C_fcall stub6069(C_word C_buf,C_word C_a0,C_word C_a1,C_word C_a2,C_word C_a3,C_word C_a4){
C_word C_r=C_SCHEME_UNDEFINED,*C_a=(C_word*)C_buf;
int t0=(int )C_unfix(C_a0);
double t1=(double )C_c_double(C_a1);
float t2=(float )C_c_double(C_a2);
float t3=(float )C_c_double(C_a3);
float t4=(float )C_c_double(C_a4);
mp_data(t0,t1,t2,t3,t4);
return C_r;}

/* from k34987 */
static C_word C_fcall stub6054(C_word C_buf,C_word C_a0,C_word C_a1,C_word C_a2,C_word C_a3,C_word C_a4) C_regparm;
C_regparm static C_word C_fcall stub6054(C_word C_buf,C_word C_a0,C_word C_a1,C_word C_a2,C_word C_a3,C_word C_a4){
C_word C_r=C_SCHEME_UNDEFINED,*C_a=(C_word*)C_buf;
int t0=(int )C_unfix(C_a0);
double t1=(double )C_c_double(C_a1);
float t2=(float )C_c_double(C_a2);
float t3=(float )C_c_double(C_a3);
float t4=(float )C_c_double(C_a4);
mp_data(t0,t1,t2,t3,t4);
return C_r;}

/* from k34959 */
static C_word C_fcall stub6038(C_word C_buf,C_word C_a0,C_word C_a1,C_word C_a2,C_word C_a3,C_word C_a4) C_regparm;
C_regparm static C_word C_fcall stub6038(C_word C_buf,C_word C_a0,C_word C_a1,C_word C_a2,C_word C_a3,C_word C_a4){
C_word C_r=C_SCHEME_UNDEFINED,*C_a=(C_word*)C_buf;
int t0=(int )C_unfix(C_a0);
double t1=(double )C_c_double(C_a1);
float t2=(float )C_c_double(C_a2);
float t3=(float )C_c_double(C_a3);
float t4=(float )C_c_double(C_a4);
mp_data(t0,t1,t2,t3,t4);
return C_r;}

/* from k34931 */
static C_word C_fcall stub6022(C_word C_buf,C_word C_a0,C_word C_a1,C_word C_a2,C_word C_a3,C_word C_a4) C_regparm;
C_regparm static C_word C_fcall stub6022(C_word C_buf,C_word C_a0,C_word C_a1,C_word C_a2,C_word C_a3,C_word C_a4){
C_word C_r=C_SCHEME_UNDEFINED,*C_a=(C_word*)C_buf;
int t0=(int )C_unfix(C_a0);
double t1=(double )C_c_double(C_a1);
float t2=(float )C_c_double(C_a2);
float t3=(float )C_c_double(C_a3);
float t4=(float )C_c_double(C_a4);
mp_data(t0,t1,t2,t3,t4);
return C_r;}

/* from k34903 */
static C_word C_fcall stub6006(C_word C_buf,C_word C_a0,C_word C_a1,C_word C_a2,C_word C_a3,C_word C_a4) C_regparm;
C_regparm static C_word C_fcall stub6006(C_word C_buf,C_word C_a0,C_word C_a1,C_word C_a2,C_word C_a3,C_word C_a4){
C_word C_r=C_SCHEME_UNDEFINED,*C_a=(C_word*)C_buf;
int t0=(int )C_unfix(C_a0);
double t1=(double )C_c_double(C_a1);
float t2=(float )C_c_double(C_a2);
float t3=(float )C_c_double(C_a3);
float t4=(float )C_c_double(C_a4);
mp_data(t0,t1,t2,t3,t4);
return C_r;}

/* from k34875 */
static C_word C_fcall stub5991(C_word C_buf,C_word C_a0,C_word C_a1,C_word C_a2,C_word C_a3,C_word C_a4) C_regparm;
C_regparm static C_word C_fcall stub5991(C_word C_buf,C_word C_a0,C_word C_a1,C_word C_a2,C_word C_a3,C_word C_a4){
C_word C_r=C_SCHEME_UNDEFINED,*C_a=(C_word*)C_buf;
double t0=(double )C_c_double(C_a0);
double t1=(double )C_c_double(C_a1);
float t2=(float )C_c_double(C_a2);
float t3=(float )C_c_double(C_a3);
float t4=(float )C_c_double(C_a4);
mp_note(t0,t1,t2,t3,t4);
return C_r;}

/* from k34847 */
static C_word C_fcall stub5974(C_word C_buf,C_word C_a0,C_word C_a1,C_word C_a2,C_word C_a3,C_word C_a4) C_regparm;
C_regparm static C_word C_fcall stub5974(C_word C_buf,C_word C_a0,C_word C_a1,C_word C_a2,C_word C_a3,C_word C_a4){
C_word C_r=C_SCHEME_UNDEFINED,*C_a=(C_word*)C_buf;
double t0=(double )C_c_double(C_a0);
double t1=(double )C_c_double(C_a1);
float t2=(float )C_c_double(C_a2);
float t3=(float )C_c_double(C_a3);
float t4=(float )C_c_double(C_a4);
mp_note(t0,t1,t2,t3,t4);
return C_r;}

/* from k34816 */
static C_word C_fcall stub5956(C_word C_buf,C_word C_a0,C_word C_a1,C_word C_a2) C_regparm;
C_regparm static C_word C_fcall stub5956(C_word C_buf,C_word C_a0,C_word C_a1,C_word C_a2){
C_word C_r=C_SCHEME_UNDEFINED,*C_a=(C_word*)C_buf;
MidiMessage *t0=(MidiMessage *)C_c_pointer_or_null(C_a0);
int t1=(int )C_unfix(C_a1);
int t2=(int )C_unfix(C_a2);
mm_set_data(t0,t1,t2);
return C_r;}

/* from k34793 */
static C_word C_fcall stub5945(C_word C_buf,C_word C_a0,C_word C_a1) C_regparm;
C_regparm static C_word C_fcall stub5945(C_word C_buf,C_word C_a0,C_word C_a1){
C_word C_r=C_SCHEME_UNDEFINED,*C_a=(C_word*)C_buf;
MidiMessage *t0=(MidiMessage *)C_c_pointer_or_null(C_a0);
int t1=(int )C_unfix(C_a1);
C_r=C_fix((C_word)mm_data(t0,t1));
return C_r;}

/* from k34771 */
static C_word C_fcall stub5934(C_word C_buf,C_word C_a0,C_word C_a1,C_word C_a2) C_regparm;
C_regparm static C_word C_fcall stub5934(C_word C_buf,C_word C_a0,C_word C_a1,C_word C_a2){
C_word C_r=C_SCHEME_UNDEFINED,*C_a=(C_word*)C_buf;
MidiMessage *t0=(MidiMessage *)C_c_pointer_or_null(C_a0);
int t1=(int )C_unfix(C_a1);
int t2=(int )C_unfix(C_a2);
mm_set_data(t0,t1,t2);
return C_r;}

/* from k34751 */
static C_word C_fcall stub5924(C_word C_buf,C_word C_a0,C_word C_a1,C_word C_a2) C_regparm;
C_regparm static C_word C_fcall stub5924(C_word C_buf,C_word C_a0,C_word C_a1,C_word C_a2){
C_word C_r=C_SCHEME_UNDEFINED,*C_a=(C_word*)C_buf;
MidiMessage *t0=(MidiMessage *)C_c_pointer_or_null(C_a0);
int t1=(int )C_unfix(C_a1);
int t2=(int )C_unfix(C_a2);
mm_set_data(t0,t1,t2);
return C_r;}

/* from k34716 */
static C_word C_fcall stub5911(C_word C_buf,C_word C_a0,C_word C_a1) C_regparm;
C_regparm static C_word C_fcall stub5911(C_word C_buf,C_word C_a0,C_word C_a1){
C_word C_r=C_SCHEME_UNDEFINED,*C_a=(C_word*)C_buf;
MidiMessage *t0=(MidiMessage *)C_c_pointer_or_null(C_a0);
int t1=(int )C_unfix(C_a1);
C_r=C_fix((C_word)mm_data(t0,t1));
return C_r;}

/* from k34700 */
static C_word C_fcall stub5903(C_word C_buf,C_word C_a0,C_word C_a1) C_regparm;
C_regparm static C_word C_fcall stub5903(C_word C_buf,C_word C_a0,C_word C_a1){
C_word C_r=C_SCHEME_UNDEFINED,*C_a=(C_word*)C_buf;
MidiMessage *t0=(MidiMessage *)C_c_pointer_or_null(C_a0);
int t1=(int )C_unfix(C_a1);
C_r=C_fix((C_word)mm_data(t0,t1));
return C_r;}

/* from k34672 */
static C_word C_fcall stub5890(C_word C_buf,C_word C_a0,C_word C_a1,C_word C_a2) C_regparm;
C_regparm static C_word C_fcall stub5890(C_word C_buf,C_word C_a0,C_word C_a1,C_word C_a2){
C_word C_r=C_SCHEME_UNDEFINED,*C_a=(C_word*)C_buf;
MidiMessage *t0=(MidiMessage *)C_c_pointer_or_null(C_a0);
int t1=(int )C_unfix(C_a1);
int t2=(int )C_unfix(C_a2);
mm_set_data(t0,t1,t2);
return C_r;}

/* from k34649 */
static C_word C_fcall stub5879(C_word C_buf,C_word C_a0,C_word C_a1) C_regparm;
C_regparm static C_word C_fcall stub5879(C_word C_buf,C_word C_a0,C_word C_a1){
C_word C_r=C_SCHEME_UNDEFINED,*C_a=(C_word*)C_buf;
MidiMessage *t0=(MidiMessage *)C_c_pointer_or_null(C_a0);
int t1=(int )C_unfix(C_a1);
C_r=C_fix((C_word)mm_data(t0,t1));
return C_r;}

/* from k34630 */
static C_word C_fcall stub5868(C_word C_buf,C_word C_a0,C_word C_a1,C_word C_a2) C_regparm;
C_regparm static C_word C_fcall stub5868(C_word C_buf,C_word C_a0,C_word C_a1,C_word C_a2){
C_word C_r=C_SCHEME_UNDEFINED,*C_a=(C_word*)C_buf;
MidiMessage *t0=(MidiMessage *)C_c_pointer_or_null(C_a0);
int t1=(int )C_unfix(C_a1);
int t2=(int )C_unfix(C_a2);
mm_set_data(t0,t1,t2);
return C_r;}

/* from k34607 */
static C_word C_fcall stub5857(C_word C_buf,C_word C_a0,C_word C_a1) C_regparm;
C_regparm static C_word C_fcall stub5857(C_word C_buf,C_word C_a0,C_word C_a1){
C_word C_r=C_SCHEME_UNDEFINED,*C_a=(C_word*)C_buf;
MidiMessage *t0=(MidiMessage *)C_c_pointer_or_null(C_a0);
int t1=(int )C_unfix(C_a1);
C_r=C_fix((C_word)mm_data(t0,t1));
return C_r;}

/* from k34588 */
static C_word C_fcall stub5847(C_word C_buf,C_word C_a0,C_word C_a1) C_regparm;
C_regparm static C_word C_fcall stub5847(C_word C_buf,C_word C_a0,C_word C_a1){
C_word C_r=C_SCHEME_UNDEFINED,*C_a=(C_word*)C_buf;
MidiMessage *t0=(MidiMessage *)C_c_pointer_or_null(C_a0);
int t1=(int )C_unfix(C_a1);
mm_set_chan(t0,t1);
return C_r;}

/* from k34569 */
static C_word C_fcall stub5838(C_word C_buf,C_word C_a0) C_regparm;
C_regparm static C_word C_fcall stub5838(C_word C_buf,C_word C_a0){
C_word C_r=C_SCHEME_UNDEFINED,*C_a=(C_word*)C_buf;
MidiMessage *t0=(MidiMessage *)C_c_pointer_or_null(C_a0);
C_r=C_fix((C_word)mm_chan(t0));
return C_r;}

/* from k34554 */
static C_word C_fcall stub5829(C_word C_buf,C_word C_a0,C_word C_a1) C_regparm;
C_regparm static C_word C_fcall stub5829(C_word C_buf,C_word C_a0,C_word C_a1){
C_word C_r=C_SCHEME_UNDEFINED,*C_a=(C_word*)C_buf;
MidiMessage *t0=(MidiMessage *)C_c_pointer_or_null(C_a0);
double t1=(double )C_c_double(C_a1);
mm_set_time(t0,t1);
return C_r;}

/* from k34535 */
static C_word C_fcall stub5819(C_word C_buf,C_word C_a0) C_regparm;
C_regparm static C_word C_fcall stub5819(C_word C_buf,C_word C_a0){
C_word C_r=C_SCHEME_UNDEFINED,*C_a=(C_word*)C_buf;
MidiMessage *t0=(MidiMessage *)C_c_pointer_or_null(C_a0);
C_r=C_flonum(&C_a,mm_time(t0));
return C_r;}

/* from k34520 */
static C_word C_fcall stub5811(C_word C_buf,C_word C_a0) C_regparm;
C_regparm static C_word C_fcall stub5811(C_word C_buf,C_word C_a0){
C_word C_r=C_SCHEME_UNDEFINED,*C_a=(C_word*)C_buf;
MidiMessage *t0=(MidiMessage *)C_c_pointer_or_null(C_a0);
C_r=C_mpointer_or_false(&C_a,(void*)mm_copy(t0));
return C_r;}

/* from k34505 */
static C_word C_fcall stub5803(C_word C_buf,C_word C_a0) C_regparm;
C_regparm static C_word C_fcall stub5803(C_word C_buf,C_word C_a0){
C_word C_r=C_SCHEME_UNDEFINED,*C_a=(C_word*)C_buf;
MidiMessage *t0=(MidiMessage *)C_c_pointer_or_null(C_a0);
mm_free(t0);
return C_r;}

/* from k34487 */
static C_word C_fcall stub5795(C_word C_buf,C_word C_a0,C_word C_a1) C_regparm;
C_regparm static C_word C_fcall stub5795(C_word C_buf,C_word C_a0,C_word C_a1){
C_word C_r=C_SCHEME_UNDEFINED,*C_a=(C_word*)C_buf;
MidiMessage *t0=(MidiMessage *)C_c_pointer_or_null(C_a0);
int t1=(int )C_unfix(C_a1);
C_r=C_mk_bool(mm_is_type(t0,t1));
return C_r;}

/* from k34060 */
static C_word C_fcall stub5780(C_word C_buf,C_word C_a0,C_word C_a1,C_word C_a2,C_word C_a3,C_word C_a4) C_regparm;
C_regparm static C_word C_fcall stub5780(C_word C_buf,C_word C_a0,C_word C_a1,C_word C_a2,C_word C_a3,C_word C_a4){
C_word C_r=C_SCHEME_UNDEFINED,*C_a=(C_word*)C_buf;
int t0=(int )C_unfix(C_a0);
double t1=(double )C_c_double(C_a1);
int t2=(int )C_unfix(C_a2);
int t3=(int )C_unfix(C_a3);
int t4=(int )C_unfix(C_a4);
C_r=C_mpointer_or_false(&C_a,(void*)mm_make(t0,t1,t2,t3,t4));
return C_r;}

/* from k34017 */
static C_word C_fcall stub5701(C_word C_buf,C_word C_a0,C_word C_a1) C_regparm;
C_regparm static C_word C_fcall stub5701(C_word C_buf,C_word C_a0,C_word C_a1){
C_word C_r=C_SCHEME_UNDEFINED,*C_a=(C_word*)C_buf;
MidiMessage *t0=(MidiMessage *)C_c_pointer_or_null(C_a0);
int t1=(int )C_unfix(C_a1);
C_r=C_mk_bool(mm_is_type(t0,t1));
return C_r;}

/* from k33590 */
static C_word C_fcall stub5686(C_word C_buf,C_word C_a0,C_word C_a1,C_word C_a2,C_word C_a3,C_word C_a4) C_regparm;
C_regparm static C_word C_fcall stub5686(C_word C_buf,C_word C_a0,C_word C_a1,C_word C_a2,C_word C_a3,C_word C_a4){
C_word C_r=C_SCHEME_UNDEFINED,*C_a=(C_word*)C_buf;
int t0=(int )C_unfix(C_a0);
double t1=(double )C_c_double(C_a1);
int t2=(int )C_unfix(C_a2);
int t3=(int )C_unfix(C_a3);
int t4=(int )C_unfix(C_a4);
C_r=C_mpointer_or_false(&C_a,(void*)mm_make(t0,t1,t2,t3,t4));
return C_r;}

/* from k33547 */
static C_word C_fcall stub5607(C_word C_buf,C_word C_a0,C_word C_a1) C_regparm;
C_regparm static C_word C_fcall stub5607(C_word C_buf,C_word C_a0,C_word C_a1){
C_word C_r=C_SCHEME_UNDEFINED,*C_a=(C_word*)C_buf;
MidiMessage *t0=(MidiMessage *)C_c_pointer_or_null(C_a0);
int t1=(int )C_unfix(C_a1);
C_r=C_mk_bool(mm_is_type(t0,t1));
return C_r;}

/* from k33120 */
static C_word C_fcall stub5592(C_word C_buf,C_word C_a0,C_word C_a1,C_word C_a2,C_word C_a3,C_word C_a4) C_regparm;
C_regparm static C_word C_fcall stub5592(C_word C_buf,C_word C_a0,C_word C_a1,C_word C_a2,C_word C_a3,C_word C_a4){
C_word C_r=C_SCHEME_UNDEFINED,*C_a=(C_word*)C_buf;
int t0=(int )C_unfix(C_a0);
double t1=(double )C_c_double(C_a1);
int t2=(int )C_unfix(C_a2);
int t3=(int )C_unfix(C_a3);
int t4=(int )C_unfix(C_a4);
C_r=C_mpointer_or_false(&C_a,(void*)mm_make(t0,t1,t2,t3,t4));
return C_r;}

/* from k33077 */
static C_word C_fcall stub5513(C_word C_buf,C_word C_a0,C_word C_a1) C_regparm;
C_regparm static C_word C_fcall stub5513(C_word C_buf,C_word C_a0,C_word C_a1){
C_word C_r=C_SCHEME_UNDEFINED,*C_a=(C_word*)C_buf;
MidiMessage *t0=(MidiMessage *)C_c_pointer_or_null(C_a0);
int t1=(int )C_unfix(C_a1);
C_r=C_mk_bool(mm_is_type(t0,t1));
return C_r;}

/* from k32375 */
static C_word C_fcall stub5497(C_word C_buf,C_word C_a0,C_word C_a1,C_word C_a2,C_word C_a3,C_word C_a4) C_regparm;
C_regparm static C_word C_fcall stub5497(C_word C_buf,C_word C_a0,C_word C_a1,C_word C_a2,C_word C_a3,C_word C_a4){
C_word C_r=C_SCHEME_UNDEFINED,*C_a=(C_word*)C_buf;
int t0=(int )C_unfix(C_a0);
double t1=(double )C_c_double(C_a1);
int t2=(int )C_unfix(C_a2);
int t3=(int )C_unfix(C_a3);
int t4=(int )C_unfix(C_a4);
C_r=C_mpointer_or_false(&C_a,(void*)mm_make(t0,t1,t2,t3,t4));
return C_r;}

/* from k32329 */
static C_word C_fcall stub5381(C_word C_buf,C_word C_a0,C_word C_a1) C_regparm;
C_regparm static C_word C_fcall stub5381(C_word C_buf,C_word C_a0,C_word C_a1){
C_word C_r=C_SCHEME_UNDEFINED,*C_a=(C_word*)C_buf;
MidiMessage *t0=(MidiMessage *)C_c_pointer_or_null(C_a0);
int t1=(int )C_unfix(C_a1);
C_r=C_mk_bool(mm_is_type(t0,t1));
return C_r;}

/* from k31627 */
static C_word C_fcall stub5365(C_word C_buf,C_word C_a0,C_word C_a1,C_word C_a2,C_word C_a3,C_word C_a4) C_regparm;
C_regparm static C_word C_fcall stub5365(C_word C_buf,C_word C_a0,C_word C_a1,C_word C_a2,C_word C_a3,C_word C_a4){
C_word C_r=C_SCHEME_UNDEFINED,*C_a=(C_word*)C_buf;
int t0=(int )C_unfix(C_a0);
double t1=(double )C_c_double(C_a1);
int t2=(int )C_unfix(C_a2);
int t3=(int )C_unfix(C_a3);
int t4=(int )C_unfix(C_a4);
C_r=C_mpointer_or_false(&C_a,(void*)mm_make(t0,t1,t2,t3,t4));
return C_r;}

/* from k31581 */
static C_word C_fcall stub5249(C_word C_buf,C_word C_a0,C_word C_a1) C_regparm;
C_regparm static C_word C_fcall stub5249(C_word C_buf,C_word C_a0,C_word C_a1){
C_word C_r=C_SCHEME_UNDEFINED,*C_a=(C_word*)C_buf;
MidiMessage *t0=(MidiMessage *)C_c_pointer_or_null(C_a0);
int t1=(int )C_unfix(C_a1);
C_r=C_mk_bool(mm_is_type(t0,t1));
return C_r;}

/* from k31154 */
static C_word C_fcall stub5234(C_word C_buf,C_word C_a0,C_word C_a1,C_word C_a2,C_word C_a3,C_word C_a4) C_regparm;
C_regparm static C_word C_fcall stub5234(C_word C_buf,C_word C_a0,C_word C_a1,C_word C_a2,C_word C_a3,C_word C_a4){
C_word C_r=C_SCHEME_UNDEFINED,*C_a=(C_word*)C_buf;
int t0=(int )C_unfix(C_a0);
double t1=(double )C_c_double(C_a1);
int t2=(int )C_unfix(C_a2);
int t3=(int )C_unfix(C_a3);
int t4=(int )C_unfix(C_a4);
C_r=C_mpointer_or_false(&C_a,(void*)mm_make(t0,t1,t2,t3,t4));
return C_r;}

/* from k31111 */
static C_word C_fcall stub5155(C_word C_buf,C_word C_a0,C_word C_a1) C_regparm;
C_regparm static C_word C_fcall stub5155(C_word C_buf,C_word C_a0,C_word C_a1){
C_word C_r=C_SCHEME_UNDEFINED,*C_a=(C_word*)C_buf;
MidiMessage *t0=(MidiMessage *)C_c_pointer_or_null(C_a0);
int t1=(int )C_unfix(C_a1);
C_r=C_mk_bool(mm_is_type(t0,t1));
return C_r;}

/* from k30409 */
static C_word C_fcall stub5139(C_word C_buf,C_word C_a0,C_word C_a1,C_word C_a2,C_word C_a3,C_word C_a4) C_regparm;
C_regparm static C_word C_fcall stub5139(C_word C_buf,C_word C_a0,C_word C_a1,C_word C_a2,C_word C_a3,C_word C_a4){
C_word C_r=C_SCHEME_UNDEFINED,*C_a=(C_word*)C_buf;
int t0=(int )C_unfix(C_a0);
double t1=(double )C_c_double(C_a1);
int t2=(int )C_unfix(C_a2);
int t3=(int )C_unfix(C_a3);
int t4=(int )C_unfix(C_a4);
C_r=C_mpointer_or_false(&C_a,(void*)mm_make(t0,t1,t2,t3,t4));
return C_r;}

/* from k8478 */
static C_word C_fcall stub438(C_word C_buf,C_word C_a0) C_regparm;
C_regparm static C_word C_fcall stub438(C_word C_buf,C_word C_a0){
C_word C_r=C_SCHEME_UNDEFINED,*C_a=(C_word*)C_buf;
double t0=(double )C_c_double(C_a0);
C_r=C_flonum(&C_a,Toolbox::log_two(t0));
return C_r;}

/* from k8471 */
static C_word C_fcall stub433(C_word C_buf,C_word C_a0) C_regparm;
C_regparm static C_word C_fcall stub433(C_word C_buf,C_word C_a0){
C_word C_r=C_SCHEME_UNDEFINED,*C_a=(C_word*)C_buf;
double t0=(double )C_c_double(C_a0);
C_r=C_flonum(&C_a,Toolbox::log_ten(t0));
return C_r;}

/* from k8464 */
static C_word C_fcall stub427(C_word C_buf,C_word C_a0,C_word C_a1) C_regparm;
C_regparm static C_word C_fcall stub427(C_word C_buf,C_word C_a0,C_word C_a1){
C_word C_r=C_SCHEME_UNDEFINED,*C_a=(C_word*)C_buf;
int t0=(int )C_unfix(C_a0);
double t1=(double )C_c_double(C_a1);
C_r=C_flonum(&C_a,jn(t0,t1));
return C_r;}

/* from tb:ranbrown in k7274 in k7271 in k6978 in k6975 in k6971 in k6680 in k6677 in k6674 in k6671 */
static C_word C_fcall stub420(C_word C_buf) C_regparm;
C_regparm static C_word C_fcall stub420(C_word C_buf){
C_word C_r=C_SCHEME_UNDEFINED,*C_a=(C_word*)C_buf;
C_r=C_flonum(&C_a,Toolbox::ranbrown());
return C_r;}

/* from tb:ranpink in k7274 in k7271 in k6978 in k6975 in k6971 in k6680 in k6677 in k6674 in k6671 */
static C_word C_fcall stub417(C_word C_buf) C_regparm;
C_regparm static C_word C_fcall stub417(C_word C_buf){
C_word C_r=C_SCHEME_UNDEFINED,*C_a=(C_word*)C_buf;
C_r=C_flonum(&C_a,Toolbox::ranpink());
return C_r;}

/* from k8442 */
static C_word C_fcall stub414(C_word C_buf,C_word C_a0) C_regparm;
C_regparm static C_word C_fcall stub414(C_word C_buf,C_word C_a0){
C_word C_r=C_SCHEME_UNDEFINED,*C_a=(C_word*)C_buf;
float t0=(float )C_c_double(C_a0);
C_r=C_fix((C_word)Toolbox::ranpoisson(t0));
return C_r;}

/* from tb:rancauchy in k7274 in k7271 in k6978 in k6975 in k6971 in k6680 in k6677 in k6674 in k6671 */
static C_word C_fcall stub410(C_word C_buf) C_regparm;
C_regparm static C_word C_fcall stub410(C_word C_buf){
C_word C_r=C_SCHEME_UNDEFINED,*C_a=(C_word*)C_buf;
C_r=C_flonum(&C_a,Toolbox::rancauchy());
return C_r;}

/* from k8432 */
static C_word C_fcall stub406(C_word C_buf,C_word C_a0) C_regparm;
C_regparm static C_word C_fcall stub406(C_word C_buf,C_word C_a0){
C_word C_r=C_SCHEME_UNDEFINED,*C_a=(C_word*)C_buf;
float t0=(float )C_c_double(C_a0);
C_r=C_flonum(&C_a,Toolbox::rangamma(t0));
return C_r;}

/* from k8425 */
static C_word C_fcall stub400(C_word C_buf,C_word C_a0,C_word C_a1) C_regparm;
C_regparm static C_word C_fcall stub400(C_word C_buf,C_word C_a0,C_word C_a1){
C_word C_r=C_SCHEME_UNDEFINED,*C_a=(C_word*)C_buf;
float t0=(float )C_c_double(C_a0);
float t1=(float )C_c_double(C_a1);
C_r=C_flonum(&C_a,Toolbox::ranbeta(t0,t1));
return C_r;}

/* from k8414 */
static C_word C_fcall stub394(C_word C_buf,C_word C_a0) C_regparm;
C_regparm static C_word C_fcall stub394(C_word C_buf,C_word C_a0){
C_word C_r=C_SCHEME_UNDEFINED,*C_a=(C_word*)C_buf;
float t0=(float )C_c_double(C_a0);
C_r=C_flonum(&C_a,Toolbox::ranexp(t0));
return C_r;}

/* from k8407 */
static C_word C_fcall stub388(C_word C_buf,C_word C_a0,C_word C_a1) C_regparm;
C_regparm static C_word C_fcall stub388(C_word C_buf,C_word C_a0,C_word C_a1){
C_word C_r=C_SCHEME_UNDEFINED,*C_a=(C_word*)C_buf;
float t0=(float )C_c_double(C_a0);
float t1=(float )C_c_double(C_a1);
C_r=C_flonum(&C_a,Toolbox::rangauss(t0,t1));
return C_r;}

/* from tb:ranmiddle in k7274 in k7271 in k6978 in k6975 in k6971 in k6680 in k6677 in k6674 in k6671 */
static C_word C_fcall stub383(C_word C_buf) C_regparm;
C_regparm static C_word C_fcall stub383(C_word C_buf){
C_word C_r=C_SCHEME_UNDEFINED,*C_a=(C_word*)C_buf;
C_r=C_flonum(&C_a,Toolbox::ranmiddle());
return C_r;}

/* from tb:ranhigh in k7274 in k7271 in k6978 in k6975 in k6971 in k6680 in k6677 in k6674 in k6671 */
static C_word C_fcall stub380(C_word C_buf) C_regparm;
C_regparm static C_word C_fcall stub380(C_word C_buf){
C_word C_r=C_SCHEME_UNDEFINED,*C_a=(C_word*)C_buf;
C_r=C_flonum(&C_a,Toolbox::ranhigh());
return C_r;}

/* from tb:ranlow in k7274 in k7271 in k6978 in k6975 in k6971 in k6680 in k6677 in k6674 in k6671 */
static C_word C_fcall stub377(C_word C_buf) C_regparm;
C_regparm static C_word C_fcall stub377(C_word C_buf){
C_word C_r=C_SCHEME_UNDEFINED,*C_a=(C_word*)C_buf;
C_r=C_flonum(&C_a,Toolbox::ranlow());
return C_r;}

/* from k8387 */
static C_word C_fcall stub372(C_word C_buf,C_word C_a0,C_word C_a1) C_regparm;
C_regparm static C_word C_fcall stub372(C_word C_buf,C_word C_a0,C_word C_a1){
C_word C_r=C_SCHEME_UNDEFINED,*C_a=(C_word*)C_buf;
float t0=(float )C_c_double(C_a0);
float t1=(float )C_c_double(C_a1);
C_r=C_flonum(&C_a,Toolbox::ran(t0,t1));
return C_r;}

/* from k8376 */
static C_word C_fcall stub366(C_word C_buf,C_word C_a0,C_word C_a1) C_regparm;
C_regparm static C_word C_fcall stub366(C_word C_buf,C_word C_a0,C_word C_a1){
C_word C_r=C_SCHEME_UNDEFINED,*C_a=(C_word*)C_buf;
int t0=(int )C_unfix(C_a0);
int t1=(int )C_unfix(C_a1);
C_r=C_fix((C_word)Toolbox::ran(t0,t1));
return C_r;}

/* from k8365 */
static C_word C_fcall stub360(C_word C_buf,C_word C_a0) C_regparm;
C_regparm static C_word C_fcall stub360(C_word C_buf,C_word C_a0){
C_word C_r=C_SCHEME_UNDEFINED,*C_a=(C_word*)C_buf;
float t0=(float )C_c_double(C_a0);
C_r=C_flonum(&C_a,Toolbox::ran(t0));
return C_r;}

/* from k8358 */
static C_word C_fcall stub356(C_word C_buf,C_word C_a0) C_regparm;
C_regparm static C_word C_fcall stub356(C_word C_buf,C_word C_a0){
C_word C_r=C_SCHEME_UNDEFINED,*C_a=(C_word*)C_buf;
int t0=(int )C_unfix(C_a0);
C_r=C_fix((C_word)Toolbox::ran(t0));
return C_r;}

/* from tb:ran-set! in k7274 in k7271 in k6978 in k6975 in k6971 in k6680 in k6677 in k6674 in k6671 */
static C_word C_fcall stub352(C_word C_buf,C_word C_a0) C_regparm;
C_regparm static C_word C_fcall stub352(C_word C_buf,C_word C_a0){
C_word C_r=C_SCHEME_UNDEFINED,*C_a=(C_word*)C_buf;
C_s64 t0=(C_s64 )C_num_to_int64(C_a0);
Toolbox::ranstate_set(t0);
return C_r;}

/* from k8348 */
static C_word C_fcall stub347(C_word C_buf,C_word C_a0) C_regparm;
C_regparm static C_word C_fcall stub347(C_word C_buf,C_word C_a0){
C_word C_r=C_SCHEME_UNDEFINED,*C_a=(C_word*)C_buf;
float t0=(float )C_c_double(C_a0);
C_r=C_flonum(&C_a,Toolbox::hertz_to_keynum(t0));
return C_r;}

/* from k8341 */
static C_word C_fcall stub343(C_word C_buf,C_word C_a0) C_regparm;
C_regparm static C_word C_fcall stub343(C_word C_buf,C_word C_a0){
C_word C_r=C_SCHEME_UNDEFINED,*C_a=(C_word*)C_buf;
float t0=(float )C_c_double(C_a0);
C_r=C_fix((C_word)Toolbox::keynum_to_pc(t0));
return C_r;}

/* from k8334 */
static C_word C_fcall stub338(C_word C_buf,C_word C_a0) C_regparm;
C_regparm static C_word C_fcall stub338(C_word C_buf,C_word C_a0){
C_word C_r=C_SCHEME_UNDEFINED,*C_a=(C_word*)C_buf;
float t0=(float )C_c_double(C_a0);
C_r=C_flonum(&C_a,Toolbox::keynum_to_hertz(t0));
return C_r;}

/* from k8327 */
static C_word C_fcall stub330(C_word C_buf,C_word C_a0,C_word C_a1,C_word C_a2,C_word C_a3) C_regparm;
C_regparm static C_word C_fcall stub330(C_word C_buf,C_word C_a0,C_word C_a1,C_word C_a2,C_word C_a3){
C_word C_r=C_SCHEME_UNDEFINED,*C_a=(C_word*)C_buf;
int t0=(int )C_unfix(C_a0);
int t1=(int )C_unfix(C_a1);
float t2=(float )C_c_double(C_a2);
float t3=(float )C_c_double(C_a3);
C_r=C_flonum(&C_a,Toolbox::geoseg(t0,t1,t2,t3));
return C_r;}

/* from k8308 */
static C_word C_fcall stub319(C_word C_buf,C_word C_a0,C_word C_a1,C_word C_a2,C_word C_a3) C_regparm;
C_regparm static C_word C_fcall stub319(C_word C_buf,C_word C_a0,C_word C_a1,C_word C_a2,C_word C_a3){
C_word C_r=C_SCHEME_UNDEFINED,*C_a=(C_word*)C_buf;
int t0=(int )C_unfix(C_a0);
int t1=(int )C_unfix(C_a1);
float t2=(float )C_c_double(C_a2);
float t3=(float )C_c_double(C_a3);
C_r=C_flonum(&C_a,Toolbox::explseg(t0,t1,t2,t3));
return C_r;}

/* from k8289 */
static C_word C_fcall stub312(C_word C_buf,C_word C_a0) C_regparm;
C_regparm static C_word C_fcall stub312(C_word C_buf,C_word C_a0){
C_word C_r=C_SCHEME_UNDEFINED,*C_a=(C_word*)C_buf;
float t0=(float )C_c_double(C_a0);
C_r=C_fix((C_word)Toolbox::scaler_to_cents(t0));
return C_r;}

/* from k8282 */
static C_word C_fcall stub307(C_word C_buf,C_word C_a0) C_regparm;
C_regparm static C_word C_fcall stub307(C_word C_buf,C_word C_a0){
C_word C_r=C_SCHEME_UNDEFINED,*C_a=(C_word*)C_buf;
int t0=(int )C_unfix(C_a0);
C_r=C_flonum(&C_a,Toolbox::cents_to_scaler(t0));
return C_r;}

/* from k8275 */
static C_word C_fcall stub300(C_word C_buf,C_word C_a0,C_word C_a1,C_word C_a2) C_regparm;
C_regparm static C_word C_fcall stub300(C_word C_buf,C_word C_a0,C_word C_a1,C_word C_a2){
C_word C_r=C_SCHEME_UNDEFINED,*C_a=(C_word*)C_buf;
float t0=(float )C_c_double(C_a0);
float t1=(float )C_c_double(C_a1);
float t2=(float )C_c_double(C_a2);
C_r=C_flonum(&C_a,Toolbox::rhythm_to_seconds(t0,t1,t2));
return C_r;}

/* from k8260 */
static C_word C_fcall stub292(C_word C_buf,C_word C_a0,C_word C_a1) C_regparm;
C_regparm static C_word C_fcall stub292(C_word C_buf,C_word C_a0,C_word C_a1){
C_word C_r=C_SCHEME_UNDEFINED,*C_a=(C_word*)C_buf;
float t0=(float )C_c_double(C_a0);
float t1=(float )C_c_double(C_a1);
C_r=C_flonum(&C_a,Toolbox::quantize(t0,t1));
return C_r;}

/* from k8249 */
static C_word C_fcall stub287(C_word C_buf,C_word C_a0) C_regparm;
C_regparm static C_word C_fcall stub287(C_word C_buf,C_word C_a0){
C_word C_r=C_SCHEME_UNDEFINED,*C_a=(C_word*)C_buf;
float t0=(float )C_c_double(C_a0);
C_r=C_fix((C_word)Toolbox::float_to_fixnum(t0));
return C_r;}

/* from k8242 */
static C_word C_fcall stub278(C_word C_buf,C_word C_a0,C_word C_a1,C_word C_a2,C_word C_a3,C_word C_a4,C_word C_a5) C_regparm;
C_regparm static C_word C_fcall stub278(C_word C_buf,C_word C_a0,C_word C_a1,C_word C_a2,C_word C_a3,C_word C_a4,C_word C_a5){
C_word C_r=C_SCHEME_UNDEFINED,*C_a=(C_word*)C_buf;
float t0=(float )C_c_double(C_a0);
float t1=(float )C_c_double(C_a1);
float t2=(float )C_c_double(C_a2);
int t3=(int )C_unfix(C_a3);
int t4=(int )C_unfix(C_a4);
float t5=(float )C_c_double(C_a5);
C_r=C_fix((C_word)Toolbox::discrete(t0,t1,t2,t3,t4,t5));
return C_r;}

/* from k8215 */
static C_word C_fcall stub263(C_word C_buf,C_word C_a0,C_word C_a1,C_word C_a2,C_word C_a3,C_word C_a4,C_word C_a5) C_regparm;
C_regparm static C_word C_fcall stub263(C_word C_buf,C_word C_a0,C_word C_a1,C_word C_a2,C_word C_a3,C_word C_a4,C_word C_a5){
C_word C_r=C_SCHEME_UNDEFINED,*C_a=(C_word*)C_buf;
float t0=(float )C_c_double(C_a0);
float t1=(float )C_c_double(C_a1);
float t2=(float )C_c_double(C_a2);
float t3=(float )C_c_double(C_a3);
float t4=(float )C_c_double(C_a4);
float t5=(float )C_c_double(C_a5);
C_r=C_flonum(&C_a,Toolbox::rescale(t0,t1,t2,t3,t4,t5));
return C_r;}

/* from k7301 */
static C_word C_fcall stub96(C_word C_buf,C_word C_a0) C_regparm;
C_regparm static C_word C_fcall stub96(C_word C_buf,C_word C_a0){
C_word C_r=C_SCHEME_UNDEFINED,*C_a=(C_word*)C_buf;
char * t0=(char * )C_string_or_null(C_a0);
set_current_directory(t0);
return C_r;}

/* from f_7283 in cwd in k7274 in k7271 in k6978 in k6975 in k6971 in k6680 in k6677 in k6674 in k6671 */
static C_word C_fcall stub91(C_word C_buf) C_regparm;
C_regparm static C_word C_fcall stub91(C_word C_buf){
C_word C_r=C_SCHEME_UNDEFINED,*C_a=(C_word*)C_buf;
C_r=C_mpointer(&C_a,(void*)get_current_directory());
return C_r;}

C_noret_decl(C_grace_toplevel)
C_externexport void C_ccall C_grace_toplevel(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_6673)
static void C_ccall f_6673(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_6676)
static void C_ccall f_6676(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_6679)
static void C_ccall f_6679(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_6682)
static void C_ccall f_6682(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_42425)
static void C_ccall f_42425(C_word c,C_word t0,C_word t1,C_word t2,...) C_noret;
C_noret_decl(f_42425)
static void C_ccall f_42425r(C_word t0,C_word t1,C_word t2,C_word t4) C_noret;
C_noret_decl(f_6973)
static void C_ccall f_6973(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_6977)
static void C_ccall f_6977(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_42373)
static void C_ccall f_42373(C_word c,C_word t0,C_word t1,C_word t2,C_word t3) C_noret;
C_noret_decl(f_42420)
static void C_ccall f_42420(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_42410)
static void C_ccall f_42410(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_42377)
static void C_ccall f_42377(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_6980)
static void C_ccall f_6980(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_42367)
static void C_ccall f_42367(C_word c,C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_7273)
static void C_ccall f_7273(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_42361)
static void C_ccall f_42361(C_word c,C_word t0,C_word t1,C_word t2,...) C_noret;
C_noret_decl(f_42361)
static void C_ccall f_42361r(C_word t0,C_word t1,C_word t2,C_word t4) C_noret;
C_noret_decl(f_7276)
static void C_ccall f_7276(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_10717)
static void C_ccall f_10717(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_42145)
static void C_fcall f_42145(C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_42359)
static void C_ccall f_42359(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_42179)
static void C_ccall f_42179(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_42191)
static void C_ccall f_42191(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_42195)
static void C_ccall f_42195(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_42199)
static void C_ccall f_42199(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_42343)
static void C_ccall f_42343(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_42205)
static void C_fcall f_42205(C_word t0,C_word t1,C_word t2,C_word t3,C_word t4,C_word t5,C_word t6,C_word t7,C_word t8,C_word t9,C_word t10,C_word t11,C_word t12,C_word t13) C_noret;
C_noret_decl(f_42225)
static void C_fcall f_42225(C_word t0,C_word t1) C_noret;
C_noret_decl(f_42228)
static void C_fcall f_42228(C_word t0,C_word t1) C_noret;
C_noret_decl(f_42236)
static void C_ccall f_42236(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_42243)
static void C_ccall f_42243(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_42246)
static void C_ccall f_42246(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_42250)
static void C_ccall f_42250(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_42257)
static void C_ccall f_42257(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_42260)
static void C_ccall f_42260(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_42264)
static void C_ccall f_42264(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_42271)
static void C_ccall f_42271(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_42215)
static void C_ccall f_42215(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_42168)
static void C_ccall f_42168(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_42158)
static void C_ccall f_42158(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_42161)
static void C_ccall f_42161(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_10720)
static void C_ccall f_10720(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_42135)
static void C_ccall f_42135(C_word c,C_word t0,C_word t1,C_word t2,C_word t3) C_noret;
C_noret_decl(f_42143)
static void C_ccall f_42143(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_11785)
static void C_ccall f_11785(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_42121)
static void C_ccall f_42121(C_word c,C_word t0,C_word t1,C_word t2,C_word t3) C_noret;
C_noret_decl(f_42129)
static void C_ccall f_42129(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_42133)
static void C_ccall f_42133(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_23136)
static void C_ccall f_23136(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_23187)
static void C_ccall f_23187(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_42111)
static void C_ccall f_42111(C_word c,C_word t0,C_word t1,C_word t2,C_word t3) C_noret;
C_noret_decl(f_42119)
static void C_ccall f_42119(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_23292)
static void C_ccall f_23292(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_42008)
static void C_ccall f_42008(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,...) C_noret;
C_noret_decl(f_42008)
static void C_ccall f_42008r(C_word t0,C_word t1,C_word t2,C_word t3,C_word t5) C_noret;
C_noret_decl(f_42071)
static void C_ccall f_42071(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_42075)
static void C_ccall f_42075(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_42089)
static void C_fcall f_42089(C_word t0,C_word t1) C_noret;
C_noret_decl(f_42011)
static void C_fcall f_42011(C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_42031)
static void C_ccall f_42031(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_42035)
static void C_ccall f_42035(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_23295)
static void C_ccall f_23295(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_41994)
static void C_ccall f_41994(C_word c,C_word t0,C_word t1,C_word t2,C_word t3) C_noret;
C_noret_decl(f_42002)
static void C_ccall f_42002(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_42006)
static void C_ccall f_42006(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_23488)
static void C_ccall f_23488(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_41968)
static void C_ccall f_41968(C_word c,C_word t0,C_word t1,C_word t2,C_word t3) C_noret;
C_noret_decl(f_41972)
static void C_ccall f_41972(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_41978)
static void C_ccall f_41978(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_41989)
static void C_ccall f_41989(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_41985)
static void C_ccall f_41985(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_23557)
static void C_ccall f_23557(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_41946)
static void C_ccall f_41946(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_24859)
static void C_ccall f_24859(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_41926)
static void C_ccall f_41926(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_24862)
static void C_ccall f_24862(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_41886)
static void C_ccall f_41886(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_24865)
static void C_ccall f_24865(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_41792)
static void C_ccall f_41792(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4) C_noret;
C_noret_decl(f_41796)
static void C_ccall f_41796(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_41799)
static void C_ccall f_41799(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_41817)
static void C_ccall f_41817(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_41820)
static void C_ccall f_41820(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_41851)
static void C_ccall f_41851(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_41823)
static void C_fcall f_41823(C_word t0,C_word t1) C_noret;
C_noret_decl(f_41829)
static void C_ccall f_41829(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_41782)
static void C_ccall f_41782(C_word c,C_word t0,C_word t1,C_word t2,C_word t3) C_noret;
C_noret_decl(f_41776)
static void C_ccall f_41776(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_24868)
static void C_ccall f_24868(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_41680)
static void C_ccall f_41680(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_41682)
static void C_ccall f_41682(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4) C_noret;
C_noret_decl(f_41686)
static void C_ccall f_41686(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_41689)
static void C_ccall f_41689(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_41692)
static void C_ccall f_41692(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_41736)
static void C_ccall f_41736(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_41728)
static void C_ccall f_41728(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_41695)
static void C_ccall f_41695(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_23638)
static void C_fcall f_23638(C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_23684)
static void C_ccall f_23684(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_23651)
static void C_fcall f_23651(C_word t0,C_word t1) C_noret;
C_noret_decl(f_41718)
static void C_ccall f_41718(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_41698)
static void C_ccall f_41698(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_41701)
static void C_ccall f_41701(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_41672)
static void C_ccall f_41672(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_24871)
static void C_ccall f_24871(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_41644)
static void C_ccall f_41644(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_24874)
static void C_ccall f_24874(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_41608)
static void C_ccall f_41608(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4) C_noret;
C_noret_decl(f_41620)
static void C_ccall f_41620(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_41616)
static void C_ccall f_41616(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_41590)
static void C_ccall f_41590(C_word c,C_word t0,C_word t1,C_word t2,C_word t3) C_noret;
C_noret_decl(f_41584)
static void C_ccall f_41584(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_24877)
static void C_ccall f_24877(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_41498)
static void C_ccall f_41498(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4) C_noret;
C_noret_decl(f_41502)
static void C_ccall f_41502(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_41505)
static void C_ccall f_41505(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_41508)
static void C_ccall f_41508(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_41521)
static void C_ccall f_41521(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_41467)
static void C_ccall f_41467(C_word c,C_word t0,C_word t1,C_word t2,C_word t3) C_noret;
C_noret_decl(f_41471)
static void C_ccall f_41471(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_41486)
static void C_ccall f_41486(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_41461)
static void C_ccall f_41461(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_24880)
static void C_ccall f_24880(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_41347)
static void C_ccall f_41347(C_word c,C_word t0,C_word t1,C_word t2,C_word t3) C_noret;
C_noret_decl(f_41363)
static void C_ccall f_41363(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_41374)
static void C_ccall f_41374(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_41341)
static void C_ccall f_41341(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_24936)
static void C_ccall f_24936(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_41208)
static void C_ccall f_41208(C_word c,C_word t0,C_word t1,C_word t2,C_word t3) C_noret;
C_noret_decl(f_41231)
static void C_ccall f_41231(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_41228)
static void C_ccall f_41228(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_41202)
static void C_ccall f_41202(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_24939)
static void C_ccall f_24939(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_41056)
static void C_ccall f_41056(C_word c,C_word t0,C_word t1,C_word t2,C_word t3) C_noret;
C_noret_decl(f_41074)
static void C_ccall f_41074(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_41083)
static void C_ccall f_41083(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_41050)
static void C_ccall f_41050(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_24942)
static void C_ccall f_24942(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_41003)
static void C_ccall f_41003(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4) C_noret;
C_noret_decl(f_41007)
static void C_ccall f_41007(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_41010)
static void C_ccall f_41010(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_41026)
static void C_ccall f_41026(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_40985)
static void C_ccall f_40985(C_word c,C_word t0,C_word t1,C_word t2,C_word t3) C_noret;
C_noret_decl(f_40979)
static void C_ccall f_40979(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_24945)
static void C_ccall f_24945(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_40903)
static void C_ccall f_40903(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_25084)
static void C_ccall f_25084(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_40829)
static void C_ccall f_40829(C_word c,C_word t0,C_word t1,C_word t2,C_word t3) C_noret;
C_noret_decl(f_40836)
static void C_ccall f_40836(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_40823)
static void C_ccall f_40823(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_25087)
static void C_ccall f_25087(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_40719)
static void C_ccall f_40719(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4) C_noret;
C_noret_decl(f_40727)
static void C_ccall f_40727(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_40693)
static void C_ccall f_40693(C_word c,C_word t0,C_word t1,C_word t2,C_word t3) C_noret;
C_noret_decl(f_40710)
static void C_ccall f_40710(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_40701)
static void C_fcall f_40701(C_word t0,C_word t1) C_noret;
C_noret_decl(f_40687)
static void C_ccall f_40687(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_25090)
static void C_ccall f_25090(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_40643)
static void C_ccall f_40643(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_25093)
static void C_ccall f_25093(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_40561)
static void C_ccall f_40561(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4) C_noret;
C_noret_decl(f_40572)
static void C_ccall f_40572(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_40574)
static void C_fcall f_40574(C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_40603)
static void C_ccall f_40603(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_40539)
static void C_ccall f_40539(C_word c,C_word t0,C_word t1,C_word t2,C_word t3) C_noret;
C_noret_decl(f_40555)
static void C_ccall f_40555(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_40533)
static void C_ccall f_40533(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_25096)
static void C_ccall f_25096(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_40486)
static void C_ccall f_40486(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4) C_noret;
C_noret_decl(f_40490)
static void C_ccall f_40490(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_40497)
static void C_ccall f_40497(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_40464)
static void C_ccall f_40464(C_word c,C_word t0,C_word t1,C_word t2,C_word t3) C_noret;
C_noret_decl(f_40480)
static void C_ccall f_40480(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_40458)
static void C_ccall f_40458(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_25099)
static void C_ccall f_25099(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_40326)
static void C_ccall f_40326(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4) C_noret;
C_noret_decl(f_40366)
static void C_ccall f_40366(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_40330)
static void C_ccall f_40330(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_40346)
static void C_ccall f_40346(C_word c,C_word t0,C_word t1,C_word t2,...) C_noret;
C_noret_decl(f_40346)
static void C_ccall f_40346r(C_word t0,C_word t1,C_word t2,C_word t4) C_noret;
C_noret_decl(f_40358)
static void C_ccall f_40358(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_40362)
static void C_ccall f_40362(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_40354)
static void C_ccall f_40354(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_40251)
static void C_ccall f_40251(C_word c,C_word t0,C_word t1,C_word t2,C_word t3) C_noret;
C_noret_decl(f_40294)
static void C_ccall f_40294(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_40298)
static void C_ccall f_40298(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_40258)
static void C_fcall f_40258(C_word t0,C_word t1) C_noret;
C_noret_decl(f_40269)
static void C_ccall f_40269(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_40245)
static void C_ccall f_40245(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_25102)
static void C_ccall f_25102(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_40225)
static void C_ccall f_40225(C_word c,C_word t0,C_word t1,C_word t2,C_word t3) C_noret;
C_noret_decl(f_40219)
static void C_ccall f_40219(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_25105)
static void C_ccall f_25105(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_40199)
static void C_ccall f_40199(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_40203)
static void C_ccall f_40203(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_40191)
static void C_ccall f_40191(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_25108)
static void C_ccall f_25108(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_40171)
static void C_ccall f_40171(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_40175)
static void C_ccall f_40175(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_40163)
static void C_ccall f_40163(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_25111)
static void C_ccall f_25111(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_40143)
static void C_ccall f_40143(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_40147)
static void C_ccall f_40147(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_40135)
static void C_ccall f_40135(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_25114)
static void C_ccall f_25114(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_40115)
static void C_ccall f_40115(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_40119)
static void C_ccall f_40119(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_40107)
static void C_ccall f_40107(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_25117)
static void C_ccall f_25117(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_40006)
static void C_ccall f_40006(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4) C_noret;
C_noret_decl(f_39976)
static void C_ccall f_39976(C_word c,C_word t0,C_word t1,C_word t2,C_word t3) C_noret;
C_noret_decl(f_40000)
static void C_ccall f_40000(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_39970)
static void C_ccall f_39970(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_25120)
static void C_ccall f_25120(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_39920)
static void C_ccall f_39920(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_39922)
static void C_ccall f_39922(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4) C_noret;
C_noret_decl(f_39926)
static void C_ccall f_39926(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_39954)
static void C_ccall f_39954(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_39946)
static void C_ccall f_39946(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_39942)
static void C_ccall f_39942(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_39929)
static void C_ccall f_39929(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_39912)
static void C_ccall f_39912(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_25123)
static void C_ccall f_25123(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_39859)
static void C_ccall f_39859(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_39861)
static void C_ccall f_39861(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4) C_noret;
C_noret_decl(f_39865)
static void C_ccall f_39865(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_39896)
static void C_ccall f_39896(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_39888)
static void C_ccall f_39888(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_39884)
static void C_ccall f_39884(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_39868)
static void C_ccall f_39868(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_39871)
static void C_ccall f_39871(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_39851)
static void C_ccall f_39851(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_25126)
static void C_ccall f_25126(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_39801)
static void C_ccall f_39801(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4) C_noret;
C_noret_decl(f_39815)
static void C_ccall f_39815(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_39807)
static void C_ccall f_39807(C_word c,C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_39766)
static void C_ccall f_39766(C_word c,C_word t0,C_word t1,C_word t2,C_word t3) C_noret;
C_noret_decl(f_39799)
static void C_ccall f_39799(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_39760)
static void C_ccall f_39760(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_25129)
static void C_ccall f_25129(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_39707)
static void C_ccall f_39707(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4) C_noret;
C_noret_decl(f_39711)
static void C_ccall f_39711(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_39724)
static void C_ccall f_39724(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_39716)
static void C_ccall f_39716(C_word c,C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_39664)
static void C_ccall f_39664(C_word c,C_word t0,C_word t1,C_word t2,C_word t3) C_noret;
C_noret_decl(f_39697)
static void C_ccall f_39697(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_39658)
static void C_ccall f_39658(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_25132)
static void C_ccall f_25132(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_39578)
static void C_ccall f_39578(C_word c,C_word t0,C_word t1,C_word t2,C_word t3) C_noret;
C_noret_decl(f_39572)
static void C_ccall f_39572(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_25135)
static void C_ccall f_25135(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_39341)
static void C_ccall f_39341(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4) C_noret;
C_noret_decl(f_39345)
static void C_ccall f_39345(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_39353)
static void C_fcall f_39353(C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_39376)
static void C_ccall f_39376(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_39379)
static void C_ccall f_39379(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_39382)
static void C_ccall f_39382(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_39385)
static void C_ccall f_39385(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_39445)
static void C_ccall f_39445(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_39452)
static void C_ccall f_39452(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_39462)
static void C_ccall f_39462(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_39472)
static void C_ccall f_39472(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_39486)
static void C_ccall f_39486(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_39496)
static void C_ccall f_39496(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_39506)
static void C_ccall f_39506(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_39516)
static void C_ccall f_39516(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_39388)
static void C_fcall f_39388(C_word t0,C_word t1) C_noret;
C_noret_decl(f_39412)
static void C_fcall f_39412(C_word t0,C_word t1) C_noret;
C_noret_decl(f_39391)
static void C_fcall f_39391(C_word t0,C_word t1) C_noret;
C_noret_decl(f_39298)
static void C_ccall f_39298(C_word c,C_word t0,C_word t1,C_word t2,C_word t3) C_noret;
C_noret_decl(f_39331)
static void C_ccall f_39331(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_39292)
static void C_ccall f_39292(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_25138)
static void C_ccall f_25138(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_39210)
static void C_ccall f_39210(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4) C_noret;
C_noret_decl(f_39214)
static void C_ccall f_39214(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_39220)
static void C_ccall f_39220(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_39240)
static void C_ccall f_39240(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_39184)
static void C_ccall f_39184(C_word c,C_word t0,C_word t1,C_word t2,C_word t3) C_noret;
C_noret_decl(f_39194)
static void C_fcall f_39194(C_word t0,C_word t1) C_noret;
C_noret_decl(f_39178)
static void C_ccall f_39178(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_25141)
static void C_ccall f_25141(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_38993)
static void C_ccall f_38993(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4) C_noret;
C_noret_decl(f_38997)
static void C_ccall f_38997(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_39003)
static void C_ccall f_39003(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_39012)
static void C_ccall f_39012(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_39050)
static void C_ccall f_39050(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_39042)
static void C_ccall f_39042(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_39019)
static void C_ccall f_39019(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_39023)
static void C_ccall f_39023(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_38925)
static void C_ccall f_38925(C_word c,C_word t0,C_word t1,C_word t2,C_word t3) C_noret;
C_noret_decl(f_38944)
static void C_ccall f_38944(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_38979)
static void C_ccall f_38979(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_38950)
static void C_fcall f_38950(C_word t0,C_word t1) C_noret;
C_noret_decl(f_38954)
static void C_ccall f_38954(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_38968)
static void C_ccall f_38968(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_38957)
static void C_fcall f_38957(C_word t0,C_word t1) C_noret;
C_noret_decl(f_38938)
static void C_fcall f_38938(C_word t0,C_word t1) C_noret;
C_noret_decl(f_38919)
static void C_ccall f_38919(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_25144)
static void C_ccall f_25144(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_38647)
static void C_ccall f_38647(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_25667)
static void C_ccall f_25667(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_38599)
static void C_ccall f_38599(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_38591)
static void C_ccall f_38591(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_25670)
static void C_ccall f_25670(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_38471)
static void C_ccall f_38471(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4) C_noret;
C_noret_decl(f_25676)
static void C_ccall f_25676(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_26212)
static void C_ccall f_26212(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_26246)
static void C_ccall f_26246(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_26238)
static void C_ccall f_26238(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_26234)
static void C_ccall f_26234(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_26219)
static void C_ccall f_26219(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_26223)
static void C_ccall f_26223(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_26216)
static void C_ccall f_26216(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_25694)
static void C_fcall f_25694(C_word t0,C_word t1) C_noret;
C_noret_decl(f_26205)
static void C_ccall f_26205(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_26201)
static void C_ccall f_26201(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_25701)
static void C_fcall f_25701(C_word t0,C_word t1) C_noret;
C_noret_decl(f_26076)
static void C_fcall f_26076(C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_26097)
static void C_ccall f_26097(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_26099)
static void C_fcall f_26099(C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_26113)
static void C_ccall f_26113(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_26166)
static void C_ccall f_26166(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_26116)
static void C_fcall f_26116(C_word t0,C_word t1) C_noret;
C_noret_decl(f_26151)
static void C_ccall f_26151(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_26119)
static void C_fcall f_26119(C_word t0,C_word t1) C_noret;
C_noret_decl(f_26132)
static void C_ccall f_26132(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_26144)
static void C_ccall f_26144(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_26136)
static void C_ccall f_26136(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_26122)
static void C_fcall f_26122(C_word t0,C_word t1) C_noret;
C_noret_decl(f_26086)
static void C_ccall f_26086(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_25704)
static void C_ccall f_25704(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_26040)
static void C_fcall f_26040(C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_26066)
static void C_ccall f_26066(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_26051)
static void C_ccall f_26051(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_25710)
static void C_ccall f_25710(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_25714)
static void C_ccall f_25714(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_25917)
static void C_ccall f_25917(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_25921)
static void C_ccall f_25921(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_25925)
static void C_ccall f_25925(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_25968)
static void C_fcall f_25968(C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_25978)
static void C_ccall f_25978(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_25981)
static void C_ccall f_25981(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_26002)
static void C_ccall f_26002(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_25984)
static void C_fcall f_25984(C_word t0,C_word t1) C_noret;
C_noret_decl(f_25988)
static void C_ccall f_25988(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_25928)
static void C_ccall f_25928(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_25931)
static void C_fcall f_25931(C_word t0,C_word t1) C_noret;
C_noret_decl(f_25717)
static void C_fcall f_25717(C_word t0,C_word t1) C_noret;
C_noret_decl(f_25721)
static void C_ccall f_25721(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_25724)
static void C_fcall f_25724(C_word t0,C_word t1) C_noret;
C_noret_decl(f_25877)
static void C_ccall f_25877(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_25885)
static void C_ccall f_25885(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_25881)
static void C_ccall f_25881(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_25727)
static void C_fcall f_25727(C_word t0,C_word t1) C_noret;
C_noret_decl(f_25755)
static void C_ccall f_25755(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_25758)
static void C_ccall f_25758(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_25761)
static void C_ccall f_25761(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_25764)
static void C_ccall f_25764(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_25767)
static void C_ccall f_25767(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_25826)
static void C_ccall f_25826(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_38425)
static void C_ccall f_38425(C_word c,C_word t0,C_word t1,C_word t2,C_word t3) C_noret;
C_noret_decl(f_38441)
static void C_ccall f_38441(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_38444)
static void C_ccall f_38444(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_38447)
static void C_fcall f_38447(C_word t0,C_word t1) C_noret;
C_noret_decl(f_38450)
static void C_fcall f_38450(C_word t0,C_word t1) C_noret;
C_noret_decl(f_38461)
static void C_ccall f_38461(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_38419)
static void C_ccall f_38419(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_26253)
static void C_ccall f_26253(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_38280)
static void C_ccall f_38280(C_word c,C_word t0,C_word t1,C_word t2,C_word t3) C_noret;
C_noret_decl(f_38319)
static void C_ccall f_38319(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_38293)
static void C_fcall f_38293(C_word t0,C_word t1) C_noret;
C_noret_decl(f_38274)
static void C_ccall f_38274(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_26256)
static void C_ccall f_26256(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_37862)
static void C_ccall f_37862(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4) C_noret;
C_noret_decl(f_37866)
static void C_ccall f_37866(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_37878)
static void C_ccall f_37878(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_37936)
static void C_ccall f_37936(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_37939)
static void C_ccall f_37939(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_37942)
static void C_ccall f_37942(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_38154)
static void C_ccall f_38154(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_38092)
static void C_ccall f_38092(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_38126)
static void C_ccall f_38126(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_38101)
static void C_fcall f_38101(C_word t0,C_word t1) C_noret;
C_noret_decl(f_38112)
static void C_ccall f_38112(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_38108)
static void C_ccall f_38108(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_37951)
static void C_fcall f_37951(C_word t0,C_word t1) C_noret;
C_noret_decl(f_38029)
static void C_ccall f_38029(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_38070)
static void C_ccall f_38070(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_38074)
static void C_ccall f_38074(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_38078)
static void C_ccall f_38078(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_38033)
static void C_ccall f_38033(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_38037)
static void C_ccall f_38037(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_38064)
static void C_ccall f_38064(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_38040)
static void C_fcall f_38040(C_word t0,C_word t1) C_noret;
C_noret_decl(f_37954)
static void C_fcall f_37954(C_word t0,C_word t1) C_noret;
C_noret_decl(f_38026)
static void C_ccall f_38026(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_37968)
static void C_ccall f_37968(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_37970)
static void C_fcall f_37970(C_word t0,C_word t1,C_word t2,C_word t3) C_noret;
C_noret_decl(f_38018)
static void C_ccall f_38018(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_37989)
static void C_ccall f_37989(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_38006)
static void C_ccall f_38006(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_37992)
static void C_fcall f_37992(C_word t0,C_word t1) C_noret;
C_noret_decl(f_37985)
static void C_ccall f_37985(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_37957)
static void C_ccall f_37957(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_37887)
static void C_fcall f_37887(C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_37897)
static void C_ccall f_37897(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_37903)
static void C_ccall f_37903(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_37875)
static void C_ccall f_37875(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_37823)
static void C_ccall f_37823(C_word c,C_word t0,C_word t1,C_word t2,C_word t3) C_noret;
C_noret_decl(f_37840)
static void C_ccall f_37840(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_37856)
static void C_ccall f_37856(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_37834)
static void C_fcall f_37834(C_word t0,C_word t1) C_noret;
C_noret_decl(f_37817)
static void C_ccall f_37817(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_26259)
static void C_ccall f_26259(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_37741)
static void C_ccall f_37741(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_26262)
static void C_ccall f_26262(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_37717)
static void C_ccall f_37717(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4) C_noret;
C_noret_decl(f_37729)
static void C_ccall f_37729(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_37725)
static void C_ccall f_37725(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_37703)
static void C_ccall f_37703(C_word c,C_word t0,C_word t1,C_word t2,C_word t3) C_noret;
C_noret_decl(f_37711)
static void C_ccall f_37711(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_37697)
static void C_ccall f_37697(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_26265)
static void C_ccall f_26265(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_37689)
static void C_ccall f_37689(C_word c,C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_30043)
static void C_ccall f_30043(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_30046)
static void C_ccall f_30046(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_30212)
static void C_ccall f_30212(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_30208)
static void C_ccall f_30208(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_30198)
static void C_fcall f_30198(C_word t0,C_word t1) C_noret;
C_noret_decl(f_30053)
static void C_ccall f_30053(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_30057)
static void C_ccall f_30057(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_30060)
static void C_fcall f_30060(C_word t0,C_word t1) C_noret;
C_noret_decl(f_30071)
static void C_ccall f_30071(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_30079)
static void C_ccall f_30079(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_30151)
static void C_ccall f_30151(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_30159)
static void C_ccall f_30159(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_30155)
static void C_ccall f_30155(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_30147)
static void C_ccall f_30147(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_30143)
static void C_ccall f_30143(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_30115)
static void C_ccall f_30115(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_30111)
static void C_ccall f_30111(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_30075)
static void C_ccall f_30075(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_26690)
static void C_ccall f_26690(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_37675)
static void C_ccall f_37675(C_word c,C_word t0,C_word t1,C_word t2,C_word t3) C_noret;
C_noret_decl(f_26693)
static void C_ccall f_26693(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_37646)
static void C_ccall f_37646(C_word c,C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_37650)
static void C_ccall f_37650(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_26696)
static void C_ccall f_26696(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_37643)
static void C_ccall f_37643(C_word c,C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_26699)
static void C_ccall f_26699(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_37501)
static void C_ccall f_37501(C_word c,C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_30225)
static void C_ccall f_30225(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_30357)
static void C_ccall f_30357(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_30228)
static void C_ccall f_30228(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_30239)
static void C_ccall f_30239(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_30247)
static void C_ccall f_30247(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_30271)
static void C_ccall f_30271(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_30274)
static void C_fcall f_30274(C_word t0,C_word t1) C_noret;
C_noret_decl(f_30282)
static void C_ccall f_30282(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_30290)
static void C_ccall f_30290(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_30310)
static void C_ccall f_30310(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_30306)
static void C_ccall f_30306(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_30286)
static void C_ccall f_30286(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_30278)
static void C_ccall f_30278(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_30267)
static void C_ccall f_30267(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_30243)
static void C_ccall f_30243(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_30219)
static void C_ccall f_30219(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_35488)
static void C_ccall f_35488(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_35491)
static void C_ccall f_35491(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_35494)
static void C_ccall f_35494(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_35497)
static void C_ccall f_35497(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_35500)
static void C_ccall f_35500(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_35503)
static void C_ccall f_35503(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_35506)
static void C_ccall f_35506(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_35509)
static void C_ccall f_35509(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_35512)
static void C_ccall f_35512(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_35515)
static void C_ccall f_35515(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_35518)
static void C_ccall f_35518(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_35521)
static void C_ccall f_35521(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_35524)
static void C_ccall f_35524(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_35527)
static void C_ccall f_35527(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_35530)
static void C_ccall f_35530(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_35533)
static void C_ccall f_35533(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_35536)
static void C_ccall f_35536(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_35539)
static void C_ccall f_35539(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_35542)
static void C_ccall f_35542(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_35545)
static void C_ccall f_35545(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_36401)
static void C_ccall f_36401(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_36404)
static void C_ccall f_36404(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_36407)
static void C_ccall f_36407(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_36410)
static void C_ccall f_36410(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_36413)
static void C_ccall f_36413(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_36416)
static void C_ccall f_36416(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_36419)
static void C_ccall f_36419(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_36422)
static void C_ccall f_36422(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_37438)
static void C_fcall f_37438(C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_37466)
static void C_fcall f_37466(C_word t0,C_word t1) C_noret;
C_noret_decl(f_37105)
static void C_ccall f_37105(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_37432)
static void C_ccall f_37432(C_word c,C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_37150)
static void C_ccall f_37150(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_37156)
static void C_ccall f_37156(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_37159)
static void C_ccall f_37159(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_37162)
static void C_ccall f_37162(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_37166)
static void C_ccall f_37166(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_37376)
static void C_ccall f_37376(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_37388)
static void C_ccall f_37388(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_37384)
static void C_ccall f_37384(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_37169)
static void C_fcall f_37169(C_word t0,C_word t1) C_noret;
C_noret_decl(f_37333)
static void C_fcall f_37333(C_word t0,C_word t1) C_noret;
C_noret_decl(f_37369)
static void C_ccall f_37369(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_37362)
static void C_ccall f_37362(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_37172)
static void C_ccall f_37172(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_37271)
static void C_ccall f_37271(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_37279)
static void C_ccall f_37279(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_37275)
static void C_ccall f_37275(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_37267)
static void C_ccall f_37267(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_37263)
static void C_ccall f_37263(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_37219)
static void C_ccall f_37219(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_37215)
static void C_ccall f_37215(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_37182)
static void C_fcall f_37182(C_word t0,C_word t1) C_noret;
C_noret_decl(f_37193)
static void C_ccall f_37193(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_37201)
static void C_ccall f_37201(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_37197)
static void C_ccall f_37197(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_37395)
static void C_ccall f_37395(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_37403)
static void C_ccall f_37403(C_word c,C_word t0,C_word t1,C_word t2,...) C_noret;
C_noret_decl(f_37403)
static void C_ccall f_37403r(C_word t0,C_word t1,C_word t2,C_word t4) C_noret;
C_noret_decl(f_37417)
static void C_fcall f_37417(C_word t0,C_word t1) C_noret;
C_noret_decl(f_37407)
static void C_ccall f_37407(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_37398)
static void C_ccall f_37398(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_37401)
static void C_ccall f_37401(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_37107)
static void C_fcall f_37107(C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_37123)
static void C_ccall f_37123(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_37034)
static void C_ccall f_37034(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4) C_noret;
C_noret_decl(f_37045)
static void C_ccall f_37045(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_37048)
static void C_fcall f_37048(C_word t0,C_word t1) C_noret;
C_noret_decl(f_37055)
static void C_ccall f_37055(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_37024)
static void C_ccall f_37024(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_36703)
static void C_ccall f_36703(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_37028)
static void C_ccall f_37028(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_36966)
static void C_ccall f_36966(C_word c,C_word t0,C_word t1,...) C_noret;
C_noret_decl(f_36966)
static void C_ccall f_36966r(C_word t0,C_word t1,C_word t3) C_noret;
C_noret_decl(f_36984)
static void C_fcall f_36984(C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_36994)
static void C_ccall f_36994(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_36970)
static void C_ccall f_36970(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_36957)
static void C_ccall f_36957(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_36681)
static void C_ccall f_36681(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_36961)
static void C_ccall f_36961(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_36951)
static void C_ccall f_36951(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_36663)
static void C_ccall f_36663(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_36942)
static void C_ccall f_36942(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_36672)
static void C_ccall f_36672(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_36946)
static void C_ccall f_36946(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_36939)
static void C_ccall f_36939(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_36727)
static void C_ccall f_36727(C_word c,C_word t0,C_word t1,C_word t2,...) C_noret;
C_noret_decl(f_36727)
static void C_ccall f_36727r(C_word t0,C_word t1,C_word t2,C_word t4) C_noret;
C_noret_decl(f_36891)
static void C_fcall f_36891(C_word t0,C_word t1) C_noret;
C_noret_decl(f_36886)
static void C_fcall f_36886(C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_36729)
static void C_fcall f_36729(C_word t0,C_word t1,C_word t2,C_word t3) C_noret;
C_noret_decl(f_36878)
static void C_ccall f_36878(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_36882)
static void C_ccall f_36882(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_36874)
static void C_ccall f_36874(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_36834)
static void C_fcall f_36834(C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_36844)
static void C_ccall f_36844(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_36798)
static void C_ccall f_36798(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_36803)
static void C_fcall f_36803(C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_36828)
static void C_ccall f_36828(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_36832)
static void C_ccall f_36832(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_36813)
static void C_ccall f_36813(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_36789)
static void C_ccall f_36789(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_36759)
static void C_fcall f_36759(C_word t0,C_word t1) C_noret;
C_noret_decl(f_36731)
static void C_fcall f_36731(C_word t0,C_word t1) C_noret;
C_noret_decl(f_36708)
static void C_ccall f_36708(C_word c,C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_36713)
static void C_ccall f_36713(C_word c,C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_36718)
static void C_ccall f_36718(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_36686)
static void C_fcall f_36686(C_word t0,C_word t1) C_noret;
C_noret_decl(f_36690)
static void C_ccall f_36690(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_36642)
static void C_fcall f_36642(C_word t0,C_word t1,C_word t2,C_word t3) C_noret;
C_noret_decl(f_36646)
static void C_ccall f_36646(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_36628)
static void C_ccall f_36628(C_word c,C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_36633)
static void C_ccall f_36633(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_36614)
static void C_ccall f_36614(C_word c,C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_36619)
static void C_ccall f_36619(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_36424)
static void C_ccall f_36424(C_word c,C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_36485)
static void C_ccall f_36485(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_36487)
static void C_fcall f_36487(C_word t0,C_word t1,C_word t2,C_word t3,C_word t4) C_noret;
C_noret_decl(f_36497)
static void C_ccall f_36497(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_36516)
static void C_fcall f_36516(C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_36556)
static void C_ccall f_36556(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_36598)
static void C_ccall f_36598(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_36568)
static void C_ccall f_36568(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_36553)
static void C_fcall f_36553(C_word t0,C_word t1) C_noret;
C_noret_decl(f_36471)
static void C_ccall f_36471(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_36436)
static void C_ccall f_36436(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_36463)
static void C_ccall f_36463(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_36444)
static void C_ccall f_36444(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_36451)
static void C_ccall f_36451(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_36455)
static void C_ccall f_36455(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_36459)
static void C_ccall f_36459(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_36536)
static void C_ccall f_36536(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_36514)
static void C_ccall f_36514(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_36500)
static void C_ccall f_36500(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_36503)
static void C_ccall f_36503(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_36478)
static void C_ccall f_36478(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_35950)
static void C_ccall f_35950(C_word c,C_word t0,C_word t1,...) C_noret;
C_noret_decl(f_35950)
static void C_ccall f_35950r(C_word t0,C_word t1,C_word t3) C_noret;
C_noret_decl(f_36377)
static void C_ccall f_36377(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_36392)
static void C_ccall f_36392(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_36384)
static void C_ccall f_36384(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_36348)
static void C_ccall f_36348(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_36352)
static void C_ccall f_36352(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_36313)
static void C_ccall f_36313(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_36317)
static void C_ccall f_36317(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_36278)
static void C_ccall f_36278(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_36282)
static void C_ccall f_36282(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_35954)
static void C_fcall f_35954(C_word t0,C_word t1) C_noret;
C_noret_decl(f_36242)
static void C_ccall f_36242(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_36257)
static void C_ccall f_36257(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_36249)
static void C_ccall f_36249(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_36213)
static void C_ccall f_36213(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_36217)
static void C_ccall f_36217(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_36178)
static void C_ccall f_36178(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_36182)
static void C_ccall f_36182(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_36143)
static void C_ccall f_36143(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_36147)
static void C_ccall f_36147(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_35957)
static void C_fcall f_35957(C_word t0,C_word t1) C_noret;
C_noret_decl(f_36107)
static void C_ccall f_36107(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_36122)
static void C_ccall f_36122(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_36114)
static void C_ccall f_36114(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_36078)
static void C_ccall f_36078(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_36082)
static void C_ccall f_36082(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_36043)
static void C_ccall f_36043(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_36047)
static void C_ccall f_36047(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_36008)
static void C_ccall f_36008(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_36012)
static void C_ccall f_36012(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_35960)
static void C_fcall f_35960(C_word t0,C_word t1) C_noret;
C_noret_decl(f_35963)
static void C_ccall f_35963(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_35966)
static void C_fcall f_35966(C_word t0,C_word t1) C_noret;
C_noret_decl(f_35970)
static void C_ccall f_35970(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4) C_noret;
C_noret_decl(f_35712)
static void C_ccall f_35712(C_word c,C_word t0,C_word t1,...) C_noret;
C_noret_decl(f_35712)
static void C_ccall f_35712r(C_word t0,C_word t1,C_word t3) C_noret;
C_noret_decl(f_35927)
static void C_ccall f_35927(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_35942)
static void C_ccall f_35942(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_35934)
static void C_ccall f_35934(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_35898)
static void C_ccall f_35898(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_35902)
static void C_ccall f_35902(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_35863)
static void C_ccall f_35863(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_35867)
static void C_ccall f_35867(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_35716)
static void C_fcall f_35716(C_word t0,C_word t1) C_noret;
C_noret_decl(f_35827)
static void C_ccall f_35827(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_35842)
static void C_ccall f_35842(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_35834)
static void C_ccall f_35834(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_35798)
static void C_ccall f_35798(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_35802)
static void C_ccall f_35802(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_35763)
static void C_ccall f_35763(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_35767)
static void C_ccall f_35767(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_35719)
static void C_fcall f_35719(C_word t0,C_word t1) C_noret;
C_noret_decl(f_35722)
static void C_ccall f_35722(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_35725)
static void C_fcall f_35725(C_word t0,C_word t1) C_noret;
C_noret_decl(f_35729)
static void C_ccall f_35729(C_word c,C_word t0,C_word t1,C_word t2,C_word t3) C_noret;
C_noret_decl(f_35655)
static void C_ccall f_35655(C_word c,C_word t0,C_word t1,...) C_noret;
C_noret_decl(f_35655)
static void C_ccall f_35655r(C_word t0,C_word t1,C_word t3) C_noret;
C_noret_decl(f_35688)
static void C_fcall f_35688(C_word t0,C_word t1) C_noret;
C_noret_decl(f_35668)
static void C_fcall f_35668(C_word t0,C_word t1) C_noret;
C_noret_decl(f_35676)
static void C_ccall f_35676(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4) C_noret;
C_noret_decl(f_35659)
static void C_ccall f_35659(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_35598)
static void C_ccall f_35598(C_word c,C_word t0,C_word t1,...) C_noret;
C_noret_decl(f_35598)
static void C_ccall f_35598r(C_word t0,C_word t1,C_word t3) C_noret;
C_noret_decl(f_35631)
static void C_fcall f_35631(C_word t0,C_word t1) C_noret;
C_noret_decl(f_35611)
static void C_fcall f_35611(C_word t0,C_word t1) C_noret;
C_noret_decl(f_35619)
static void C_ccall f_35619(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4) C_noret;
C_noret_decl(f_35602)
static void C_ccall f_35602(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_35590)
static void C_ccall f_35590(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_35595)
static void C_ccall f_35595(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_35547)
static void C_ccall f_35547(C_word c,C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_35574)
static void C_ccall f_35574(C_word c,C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_35568)
static void C_ccall f_35568(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_35572)
static void C_ccall f_35572(C_word c,C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_35558)
static void C_ccall f_35558(C_word c,C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_35467)
static void C_ccall f_35467(C_word c,C_word t0,C_word t1,...) C_noret;
C_noret_decl(f_35467)
static void C_ccall f_35467r(C_word t0,C_word t1,C_word t3) C_noret;
C_noret_decl(f_35478)
static void C_ccall f_35478(C_word c,C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_35474)
static void C_ccall f_35474(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_35456)
static void C_ccall f_35456(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_35464)
static void C_ccall f_35464(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_35460)
static void C_ccall f_35460(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_35445)
static void C_ccall f_35445(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_35453)
static void C_ccall f_35453(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_35449)
static void C_ccall f_35449(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_35434)
static void C_ccall f_35434(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_35442)
static void C_ccall f_35442(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_35438)
static void C_ccall f_35438(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_35423)
static void C_ccall f_35423(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_35431)
static void C_ccall f_35431(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_35427)
static void C_ccall f_35427(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_35412)
static void C_ccall f_35412(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_35420)
static void C_ccall f_35420(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_35416)
static void C_ccall f_35416(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_35373)
static void C_ccall f_35373(C_word c,C_word t0,C_word t1,...) C_noret;
C_noret_decl(f_35373)
static void C_ccall f_35373r(C_word t0,C_word t1,C_word t3) C_noret;
C_noret_decl(f_35386)
static void C_ccall f_35386(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_35390)
static void C_ccall f_35390(C_word c,C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_35380)
static void C_ccall f_35380(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_35258)
static void C_ccall f_35258(C_word c,C_word t0,C_word t1,...) C_noret;
C_noret_decl(f_35258)
static void C_ccall f_35258r(C_word t0,C_word t1,C_word t3) C_noret;
C_noret_decl(f_35283)
static void C_fcall f_35283(C_word t0,C_word t1) C_noret;
C_noret_decl(f_35290)
static void C_fcall f_35290(C_word t0,C_word t1) C_noret;
C_noret_decl(f_35296)
static void C_fcall f_35296(C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_35316)
static void C_ccall f_35316(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_35306)
static void C_ccall f_35306(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_35262)
static void C_ccall f_35262(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_35266)
static void C_ccall f_35266(C_word c,C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_35147)
static void C_ccall f_35147(C_word c,C_word t0,C_word t1,...) C_noret;
C_noret_decl(f_35147)
static void C_ccall f_35147r(C_word t0,C_word t1,C_word t3) C_noret;
C_noret_decl(f_35172)
static void C_fcall f_35172(C_word t0,C_word t1) C_noret;
C_noret_decl(f_35179)
static void C_fcall f_35179(C_word t0,C_word t1) C_noret;
C_noret_decl(f_35185)
static void C_fcall f_35185(C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_35205)
static void C_ccall f_35205(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_35195)
static void C_ccall f_35195(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_35151)
static void C_ccall f_35151(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_35155)
static void C_ccall f_35155(C_word c,C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_35090)
static void C_ccall f_35090(C_word c,C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_35144)
static void C_ccall f_35144(C_word c,C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_35139)
static void C_ccall f_35139(C_word c,C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_35102)
static void C_ccall f_35102(C_word c,C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_35108)
static void C_ccall f_35108(C_word c,C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_35134)
static void C_ccall f_35134(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_35138)
static void C_ccall f_35138(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_35114)
static void C_ccall f_35114(C_word c,C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_35132)
static void C_ccall f_35132(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_35129)
static void C_ccall f_35129(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_35125)
static void C_ccall f_35125(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_35118)
static void C_ccall f_35118(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_35075)
static void C_ccall f_35075(C_word c,C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_35080)
static void C_ccall f_35080(C_word c,C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_35047)
static void C_ccall f_35047(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4) C_noret;
C_noret_decl(f_35052)
static void C_ccall f_35052(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4,C_word t5,C_word t6) C_noret;
C_noret_decl(f_35019)
static void C_ccall f_35019(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4) C_noret;
C_noret_decl(f_35024)
static void C_ccall f_35024(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4,C_word t5,C_word t6) C_noret;
C_noret_decl(f_34991)
static void C_ccall f_34991(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4) C_noret;
C_noret_decl(f_34996)
static void C_ccall f_34996(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4,C_word t5,C_word t6) C_noret;
C_noret_decl(f_34963)
static void C_ccall f_34963(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4,C_word t5) C_noret;
C_noret_decl(f_34968)
static void C_ccall f_34968(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4,C_word t5,C_word t6) C_noret;
C_noret_decl(f_34935)
static void C_ccall f_34935(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4,C_word t5) C_noret;
C_noret_decl(f_34940)
static void C_ccall f_34940(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4,C_word t5,C_word t6) C_noret;
C_noret_decl(f_34907)
static void C_ccall f_34907(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4,C_word t5) C_noret;
C_noret_decl(f_34912)
static void C_ccall f_34912(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4,C_word t5,C_word t6) C_noret;
C_noret_decl(f_34879)
static void C_ccall f_34879(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4) C_noret;
C_noret_decl(f_34884)
static void C_ccall f_34884(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4,C_word t5,C_word t6) C_noret;
C_noret_decl(f_34851)
static void C_ccall f_34851(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4,C_word t5,C_word t6) C_noret;
C_noret_decl(f_34856)
static void C_ccall f_34856(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4,C_word t5,C_word t6) C_noret;
C_noret_decl(f_34823)
static void C_ccall f_34823(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4,C_word t5,C_word t6) C_noret;
C_noret_decl(f_34828)
static void C_ccall f_34828(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4,C_word t5,C_word t6) C_noret;
C_noret_decl(f_34800)
static void C_ccall f_34800(C_word c,C_word t0,C_word t1,C_word t2,C_word t3) C_noret;
C_noret_decl(f_34805)
static void C_ccall f_34805(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4) C_noret;
C_noret_decl(f_34804)
static void C_ccall f_34804(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_34781)
static void C_ccall f_34781(C_word c,C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_34786)
static void C_ccall f_34786(C_word c,C_word t0,C_word t1,C_word t2,C_word t3) C_noret;
C_noret_decl(f_34726)
static void C_ccall f_34726(C_word c,C_word t0,C_word t1,C_word t2,C_word t3) C_noret;
C_noret_decl(f_34733)
static void C_ccall f_34733(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_34736)
static void C_ccall f_34736(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_34760)
static void C_ccall f_34760(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4) C_noret;
C_noret_decl(f_34740)
static void C_ccall f_34740(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4) C_noret;
C_noret_decl(f_34730)
static void C_ccall f_34730(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_34679)
static void C_ccall f_34679(C_word c,C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_34686)
static void C_ccall f_34686(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_34689)
static void C_ccall f_34689(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_34709)
static void C_ccall f_34709(C_word c,C_word t0,C_word t1,C_word t2,C_word t3) C_noret;
C_noret_decl(f_34693)
static void C_ccall f_34693(C_word c,C_word t0,C_word t1,C_word t2,C_word t3) C_noret;
C_noret_decl(f_34656)
static void C_ccall f_34656(C_word c,C_word t0,C_word t1,C_word t2,C_word t3) C_noret;
C_noret_decl(f_34661)
static void C_ccall f_34661(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4) C_noret;
C_noret_decl(f_34660)
static void C_ccall f_34660(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_34637)
static void C_ccall f_34637(C_word c,C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_34642)
static void C_ccall f_34642(C_word c,C_word t0,C_word t1,C_word t2,C_word t3) C_noret;
C_noret_decl(f_34614)
static void C_ccall f_34614(C_word c,C_word t0,C_word t1,C_word t2,C_word t3) C_noret;
C_noret_decl(f_34619)
static void C_ccall f_34619(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4) C_noret;
C_noret_decl(f_34618)
static void C_ccall f_34618(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_34595)
static void C_ccall f_34595(C_word c,C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_34600)
static void C_ccall f_34600(C_word c,C_word t0,C_word t1,C_word t2,C_word t3) C_noret;
C_noret_decl(f_34576)
static void C_ccall f_34576(C_word c,C_word t0,C_word t1,C_word t2,C_word t3) C_noret;
C_noret_decl(f_34581)
static void C_ccall f_34581(C_word c,C_word t0,C_word t1,C_word t2,C_word t3) C_noret;
C_noret_decl(f_34580)
static void C_ccall f_34580(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_34561)
static void C_ccall f_34561(C_word c,C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_34566)
static void C_ccall f_34566(C_word c,C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_34542)
static void C_ccall f_34542(C_word c,C_word t0,C_word t1,C_word t2,C_word t3) C_noret;
C_noret_decl(f_34547)
static void C_ccall f_34547(C_word c,C_word t0,C_word t1,C_word t2,C_word t3) C_noret;
C_noret_decl(f_34546)
static void C_ccall f_34546(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_34527)
static void C_ccall f_34527(C_word c,C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_34532)
static void C_ccall f_34532(C_word c,C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_34512)
static void C_ccall f_34512(C_word c,C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_34517)
static void C_ccall f_34517(C_word c,C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_34494)
static void C_ccall f_34494(C_word c,C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_34502)
static void C_ccall f_34502(C_word c,C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_34498)
static void C_ccall f_34498(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_34024)
static void C_ccall f_34024(C_word c,C_word t0,C_word t1,...) C_noret;
C_noret_decl(f_34024)
static void C_ccall f_34024r(C_word t0,C_word t1,C_word t3) C_noret;
C_noret_decl(f_34452)
static void C_ccall f_34452(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_34467)
static void C_ccall f_34467(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_34459)
static void C_ccall f_34459(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_34423)
static void C_ccall f_34423(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_34427)
static void C_ccall f_34427(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_34388)
static void C_ccall f_34388(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_34392)
static void C_ccall f_34392(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_34353)
static void C_ccall f_34353(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_34357)
static void C_ccall f_34357(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_34028)
static void C_fcall f_34028(C_word t0,C_word t1) C_noret;
C_noret_decl(f_34317)
static void C_ccall f_34317(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_34332)
static void C_ccall f_34332(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_34324)
static void C_ccall f_34324(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_34288)
static void C_ccall f_34288(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_34292)
static void C_ccall f_34292(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_34253)
static void C_ccall f_34253(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_34257)
static void C_ccall f_34257(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_34218)
static void C_ccall f_34218(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_34222)
static void C_ccall f_34222(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_34031)
static void C_fcall f_34031(C_word t0,C_word t1) C_noret;
C_noret_decl(f_34182)
static void C_ccall f_34182(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_34197)
static void C_ccall f_34197(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_34189)
static void C_ccall f_34189(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_34153)
static void C_ccall f_34153(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_34157)
static void C_ccall f_34157(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_34118)
static void C_ccall f_34118(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_34122)
static void C_ccall f_34122(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_34083)
static void C_ccall f_34083(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_34087)
static void C_ccall f_34087(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_34034)
static void C_fcall f_34034(C_word t0,C_word t1) C_noret;
C_noret_decl(f_34037)
static void C_ccall f_34037(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_34041)
static void C_ccall f_34041(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4,C_word t5,C_word t6) C_noret;
C_noret_decl(f_34005)
static void C_ccall f_34005(C_word c,C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_34010)
static void C_ccall f_34010(C_word c,C_word t0,C_word t1,C_word t2,C_word t3) C_noret;
C_noret_decl(f_33554)
static void C_ccall f_33554(C_word c,C_word t0,C_word t1,...) C_noret;
C_noret_decl(f_33554)
static void C_ccall f_33554r(C_word t0,C_word t1,C_word t3) C_noret;
C_noret_decl(f_33982)
static void C_ccall f_33982(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_33997)
static void C_ccall f_33997(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_33989)
static void C_ccall f_33989(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_33953)
static void C_ccall f_33953(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_33957)
static void C_ccall f_33957(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_33918)
static void C_ccall f_33918(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_33922)
static void C_ccall f_33922(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_33883)
static void C_ccall f_33883(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_33887)
static void C_ccall f_33887(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_33558)
static void C_fcall f_33558(C_word t0,C_word t1) C_noret;
C_noret_decl(f_33847)
static void C_ccall f_33847(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_33862)
static void C_ccall f_33862(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_33854)
static void C_ccall f_33854(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_33818)
static void C_ccall f_33818(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_33822)
static void C_ccall f_33822(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_33783)
static void C_ccall f_33783(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_33787)
static void C_ccall f_33787(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_33748)
static void C_ccall f_33748(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_33752)
static void C_ccall f_33752(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_33561)
static void C_fcall f_33561(C_word t0,C_word t1) C_noret;
C_noret_decl(f_33712)
static void C_ccall f_33712(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_33727)
static void C_ccall f_33727(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_33719)
static void C_ccall f_33719(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_33683)
static void C_ccall f_33683(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_33687)
static void C_ccall f_33687(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_33648)
static void C_ccall f_33648(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_33652)
static void C_ccall f_33652(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_33613)
static void C_ccall f_33613(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_33617)
static void C_ccall f_33617(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_33564)
static void C_fcall f_33564(C_word t0,C_word t1) C_noret;
C_noret_decl(f_33567)
static void C_ccall f_33567(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_33571)
static void C_ccall f_33571(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4,C_word t5,C_word t6) C_noret;
C_noret_decl(f_33535)
static void C_ccall f_33535(C_word c,C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_33540)
static void C_ccall f_33540(C_word c,C_word t0,C_word t1,C_word t2,C_word t3) C_noret;
C_noret_decl(f_33084)
static void C_ccall f_33084(C_word c,C_word t0,C_word t1,...) C_noret;
C_noret_decl(f_33084)
static void C_ccall f_33084r(C_word t0,C_word t1,C_word t3) C_noret;
C_noret_decl(f_33512)
static void C_ccall f_33512(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_33527)
static void C_ccall f_33527(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_33519)
static void C_ccall f_33519(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_33483)
static void C_ccall f_33483(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_33487)
static void C_ccall f_33487(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_33448)
static void C_ccall f_33448(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_33452)
static void C_ccall f_33452(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_33413)
static void C_ccall f_33413(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_33417)
static void C_ccall f_33417(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_33088)
static void C_fcall f_33088(C_word t0,C_word t1) C_noret;
C_noret_decl(f_33377)
static void C_ccall f_33377(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_33392)
static void C_ccall f_33392(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_33384)
static void C_ccall f_33384(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_33348)
static void C_ccall f_33348(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_33352)
static void C_ccall f_33352(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_33313)
static void C_ccall f_33313(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_33317)
static void C_ccall f_33317(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_33278)
static void C_ccall f_33278(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_33282)
static void C_ccall f_33282(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_33091)
static void C_fcall f_33091(C_word t0,C_word t1) C_noret;
C_noret_decl(f_33242)
static void C_ccall f_33242(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_33257)
static void C_ccall f_33257(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_33249)
static void C_ccall f_33249(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_33213)
static void C_ccall f_33213(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_33217)
static void C_ccall f_33217(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_33178)
static void C_ccall f_33178(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_33182)
static void C_ccall f_33182(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_33143)
static void C_ccall f_33143(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_33147)
static void C_ccall f_33147(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_33094)
static void C_fcall f_33094(C_word t0,C_word t1) C_noret;
C_noret_decl(f_33097)
static void C_ccall f_33097(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_33101)
static void C_ccall f_33101(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4,C_word t5,C_word t6) C_noret;
C_noret_decl(f_33065)
static void C_ccall f_33065(C_word c,C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_33070)
static void C_ccall f_33070(C_word c,C_word t0,C_word t1,C_word t2,C_word t3) C_noret;
C_noret_decl(f_32336)
static void C_ccall f_32336(C_word c,C_word t0,C_word t1,...) C_noret;
C_noret_decl(f_32336)
static void C_ccall f_32336r(C_word t0,C_word t1,C_word t3) C_noret;
C_noret_decl(f_33042)
static void C_ccall f_33042(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_33057)
static void C_ccall f_33057(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_33049)
static void C_ccall f_33049(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_33013)
static void C_ccall f_33013(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_33017)
static void C_ccall f_33017(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_32978)
static void C_ccall f_32978(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_32982)
static void C_ccall f_32982(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_32943)
static void C_ccall f_32943(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_32947)
static void C_ccall f_32947(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_32908)
static void C_ccall f_32908(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_32912)
static void C_ccall f_32912(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_32340)
static void C_fcall f_32340(C_word t0,C_word t1) C_noret;
C_noret_decl(f_32872)
static void C_ccall f_32872(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_32887)
static void C_ccall f_32887(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_32879)
static void C_ccall f_32879(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_32843)
static void C_ccall f_32843(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_32847)
static void C_ccall f_32847(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_32808)
static void C_ccall f_32808(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_32812)
static void C_ccall f_32812(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_32773)
static void C_ccall f_32773(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_32777)
static void C_ccall f_32777(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_32738)
static void C_ccall f_32738(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_32742)
static void C_ccall f_32742(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_32343)
static void C_fcall f_32343(C_word t0,C_word t1) C_noret;
C_noret_decl(f_32702)
static void C_ccall f_32702(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_32717)
static void C_ccall f_32717(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_32709)
static void C_ccall f_32709(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_32673)
static void C_ccall f_32673(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_32677)
static void C_ccall f_32677(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_32638)
static void C_ccall f_32638(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_32642)
static void C_ccall f_32642(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_32603)
static void C_ccall f_32603(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_32607)
static void C_ccall f_32607(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_32568)
static void C_ccall f_32568(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_32572)
static void C_ccall f_32572(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_32346)
static void C_fcall f_32346(C_word t0,C_word t1) C_noret;
C_noret_decl(f_32532)
static void C_ccall f_32532(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_32547)
static void C_ccall f_32547(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_32539)
static void C_ccall f_32539(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_32503)
static void C_ccall f_32503(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_32507)
static void C_ccall f_32507(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_32468)
static void C_ccall f_32468(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_32472)
static void C_ccall f_32472(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_32433)
static void C_ccall f_32433(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_32437)
static void C_ccall f_32437(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_32398)
static void C_ccall f_32398(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_32402)
static void C_ccall f_32402(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_32349)
static void C_fcall f_32349(C_word t0,C_word t1) C_noret;
C_noret_decl(f_32352)
static void C_ccall f_32352(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_32356)
static void C_ccall f_32356(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4,C_word t5,C_word t6) C_noret;
C_noret_decl(f_32317)
static void C_ccall f_32317(C_word c,C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_32322)
static void C_ccall f_32322(C_word c,C_word t0,C_word t1,C_word t2,C_word t3) C_noret;
C_noret_decl(f_31588)
static void C_ccall f_31588(C_word c,C_word t0,C_word t1,...) C_noret;
C_noret_decl(f_31588)
static void C_ccall f_31588r(C_word t0,C_word t1,C_word t3) C_noret;
C_noret_decl(f_32294)
static void C_ccall f_32294(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_32309)
static void C_ccall f_32309(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_32301)
static void C_ccall f_32301(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_32265)
static void C_ccall f_32265(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_32269)
static void C_ccall f_32269(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_32230)
static void C_ccall f_32230(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_32234)
static void C_ccall f_32234(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_32195)
static void C_ccall f_32195(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_32199)
static void C_ccall f_32199(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_32160)
static void C_ccall f_32160(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_32164)
static void C_ccall f_32164(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_31592)
static void C_fcall f_31592(C_word t0,C_word t1) C_noret;
C_noret_decl(f_32124)
static void C_ccall f_32124(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_32139)
static void C_ccall f_32139(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_32131)
static void C_ccall f_32131(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_32095)
static void C_ccall f_32095(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_32099)
static void C_ccall f_32099(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_32060)
static void C_ccall f_32060(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_32064)
static void C_ccall f_32064(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_32025)
static void C_ccall f_32025(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_32029)
static void C_ccall f_32029(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_31990)
static void C_ccall f_31990(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_31994)
static void C_ccall f_31994(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_31595)
static void C_fcall f_31595(C_word t0,C_word t1) C_noret;
C_noret_decl(f_31954)
static void C_ccall f_31954(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_31969)
static void C_ccall f_31969(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_31961)
static void C_ccall f_31961(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_31925)
static void C_ccall f_31925(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_31929)
static void C_ccall f_31929(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_31890)
static void C_ccall f_31890(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_31894)
static void C_ccall f_31894(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_31855)
static void C_ccall f_31855(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_31859)
static void C_ccall f_31859(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_31820)
static void C_ccall f_31820(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_31824)
static void C_ccall f_31824(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_31598)
static void C_fcall f_31598(C_word t0,C_word t1) C_noret;
C_noret_decl(f_31784)
static void C_ccall f_31784(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_31799)
static void C_ccall f_31799(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_31791)
static void C_ccall f_31791(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_31755)
static void C_ccall f_31755(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_31759)
static void C_ccall f_31759(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_31720)
static void C_ccall f_31720(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_31724)
static void C_ccall f_31724(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_31685)
static void C_ccall f_31685(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_31689)
static void C_ccall f_31689(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_31650)
static void C_ccall f_31650(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_31654)
static void C_ccall f_31654(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_31601)
static void C_fcall f_31601(C_word t0,C_word t1) C_noret;
C_noret_decl(f_31604)
static void C_ccall f_31604(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_31608)
static void C_ccall f_31608(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4,C_word t5,C_word t6) C_noret;
C_noret_decl(f_31569)
static void C_ccall f_31569(C_word c,C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_31574)
static void C_ccall f_31574(C_word c,C_word t0,C_word t1,C_word t2,C_word t3) C_noret;
C_noret_decl(f_31118)
static void C_ccall f_31118(C_word c,C_word t0,C_word t1,...) C_noret;
C_noret_decl(f_31118)
static void C_ccall f_31118r(C_word t0,C_word t1,C_word t3) C_noret;
C_noret_decl(f_31546)
static void C_ccall f_31546(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_31561)
static void C_ccall f_31561(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_31553)
static void C_ccall f_31553(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_31517)
static void C_ccall f_31517(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_31521)
static void C_ccall f_31521(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_31482)
static void C_ccall f_31482(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_31486)
static void C_ccall f_31486(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_31447)
static void C_ccall f_31447(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_31451)
static void C_ccall f_31451(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_31122)
static void C_fcall f_31122(C_word t0,C_word t1) C_noret;
C_noret_decl(f_31411)
static void C_ccall f_31411(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_31426)
static void C_ccall f_31426(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_31418)
static void C_ccall f_31418(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_31382)
static void C_ccall f_31382(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_31386)
static void C_ccall f_31386(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_31347)
static void C_ccall f_31347(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_31351)
static void C_ccall f_31351(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_31312)
static void C_ccall f_31312(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_31316)
static void C_ccall f_31316(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_31125)
static void C_fcall f_31125(C_word t0,C_word t1) C_noret;
C_noret_decl(f_31276)
static void C_ccall f_31276(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_31291)
static void C_ccall f_31291(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_31283)
static void C_ccall f_31283(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_31247)
static void C_ccall f_31247(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_31251)
static void C_ccall f_31251(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_31212)
static void C_ccall f_31212(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_31216)
static void C_ccall f_31216(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_31177)
static void C_ccall f_31177(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_31181)
static void C_ccall f_31181(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_31128)
static void C_fcall f_31128(C_word t0,C_word t1) C_noret;
C_noret_decl(f_31131)
static void C_ccall f_31131(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_31135)
static void C_ccall f_31135(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4,C_word t5,C_word t6) C_noret;
C_noret_decl(f_31099)
static void C_ccall f_31099(C_word c,C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_31104)
static void C_ccall f_31104(C_word c,C_word t0,C_word t1,C_word t2,C_word t3) C_noret;
C_noret_decl(f_30370)
static void C_ccall f_30370(C_word c,C_word t0,C_word t1,...) C_noret;
C_noret_decl(f_30370)
static void C_ccall f_30370r(C_word t0,C_word t1,C_word t3) C_noret;
C_noret_decl(f_31076)
static void C_ccall f_31076(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_31091)
static void C_ccall f_31091(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_31083)
static void C_ccall f_31083(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_31047)
static void C_ccall f_31047(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_31051)
static void C_ccall f_31051(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_31012)
static void C_ccall f_31012(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_31016)
static void C_ccall f_31016(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_30977)
static void C_ccall f_30977(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_30981)
static void C_ccall f_30981(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_30942)
static void C_ccall f_30942(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_30946)
static void C_ccall f_30946(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_30374)
static void C_fcall f_30374(C_word t0,C_word t1) C_noret;
C_noret_decl(f_30906)
static void C_ccall f_30906(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_30921)
static void C_ccall f_30921(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_30913)
static void C_ccall f_30913(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_30877)
static void C_ccall f_30877(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_30881)
static void C_ccall f_30881(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_30842)
static void C_ccall f_30842(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_30846)
static void C_ccall f_30846(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_30807)
static void C_ccall f_30807(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_30811)
static void C_ccall f_30811(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_30772)
static void C_ccall f_30772(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_30776)
static void C_ccall f_30776(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_30377)
static void C_fcall f_30377(C_word t0,C_word t1) C_noret;
C_noret_decl(f_30736)
static void C_ccall f_30736(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_30751)
static void C_ccall f_30751(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_30743)
static void C_ccall f_30743(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_30707)
static void C_ccall f_30707(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_30711)
static void C_ccall f_30711(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_30672)
static void C_ccall f_30672(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_30676)
static void C_ccall f_30676(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_30637)
static void C_ccall f_30637(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_30641)
static void C_ccall f_30641(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_30602)
static void C_ccall f_30602(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_30606)
static void C_ccall f_30606(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_30380)
static void C_fcall f_30380(C_word t0,C_word t1) C_noret;
C_noret_decl(f_30566)
static void C_ccall f_30566(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_30581)
static void C_ccall f_30581(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_30573)
static void C_ccall f_30573(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_30537)
static void C_ccall f_30537(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_30541)
static void C_ccall f_30541(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_30502)
static void C_ccall f_30502(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_30506)
static void C_ccall f_30506(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_30467)
static void C_ccall f_30467(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_30471)
static void C_ccall f_30471(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_30432)
static void C_ccall f_30432(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_30436)
static void C_ccall f_30436(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_30383)
static void C_fcall f_30383(C_word t0,C_word t1) C_noret;
C_noret_decl(f_30386)
static void C_ccall f_30386(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_30390)
static void C_ccall f_30390(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4,C_word t5,C_word t6) C_noret;
C_noret_decl(f_30025)
static void C_fcall f_30025(C_word t0,C_word t1,C_word t2,C_word t3) C_noret;
C_noret_decl(f_29865)
static void C_fcall f_29865(C_word t0,C_word t1) C_noret;
C_noret_decl(f_29900)
static void C_fcall f_29900(C_word t0,C_word t1,C_word t2,C_word t3,C_word t4,C_word t5) C_noret;
C_noret_decl(f_29910)
static void C_fcall f_29910(C_word t0,C_word t1) C_noret;
C_noret_decl(f_29914)
static void C_ccall f_29914(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_29917)
static void C_ccall f_29917(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_29978)
static void C_ccall f_29978(C_word c,C_word t0,C_word t1,C_word t2,C_word t3) C_noret;
C_noret_decl(f_29969)
static void C_ccall f_29969(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_29920)
static void C_ccall f_29920(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_29939)
static void C_ccall f_29939(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_29946)
static void C_ccall f_29946(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_29923)
static void C_ccall f_29923(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_29929)
static void C_ccall f_29929(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_29898)
static void C_ccall f_29898(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_29873)
static void C_fcall f_29873(C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_29872)
static void C_ccall f_29872(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_30033)
static void C_fcall f_30033(C_word t0,C_word t1) C_noret;
C_noret_decl(f_29611)
static void C_ccall f_29611(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4) C_noret;
C_noret_decl(f_29633)
static void C_ccall f_29633(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_29648)
static void C_ccall f_29648(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_29651)
static void C_fcall f_29651(C_word t0,C_word t1) C_noret;
C_noret_decl(f_29827)
static void C_ccall f_29827(C_word c,C_word t0,C_word t1,C_word t2,C_word t3) C_noret;
C_noret_decl(f_29821)
static void C_ccall f_29821(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_29654)
static void C_ccall f_29654(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_29803)
static void C_ccall f_29803(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_29657)
static void C_fcall f_29657(C_word t0,C_word t1) C_noret;
C_noret_decl(f_29660)
static void C_ccall f_29660(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_29796)
static void C_ccall f_29796(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_29784)
static void C_ccall f_29784(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_29680)
static void C_fcall f_29680(C_word t0,C_word t1) C_noret;
C_noret_decl(f_29687)
static void C_ccall f_29687(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_29757)
static void C_ccall f_29757(C_word c,C_word t0,C_word t1,C_word t2,C_word t3) C_noret;
C_noret_decl(f_29743)
static void C_ccall f_29743(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_29751)
static void C_ccall f_29751(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_29690)
static void C_ccall f_29690(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_29729)
static void C_ccall f_29729(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_29693)
static void C_fcall f_29693(C_word t0,C_word t1) C_noret;
C_noret_decl(f_29722)
static void C_ccall f_29722(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_29699)
static void C_ccall f_29699(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_29702)
static void C_ccall f_29702(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_29706)
static void C_ccall f_29706(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_29667)
static void C_fcall f_29667(C_word t0,C_word t1) C_noret;
C_noret_decl(f_29670)
static void C_ccall f_29670(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_29480)
static void C_fcall f_29480(C_word t0,C_word t1,C_word t2,C_word t3) C_noret;
C_noret_decl(f_29489)
static void C_fcall f_29489(C_word t0,C_word t1,C_word t2,C_word t3,C_word t4) C_noret;
C_noret_decl(f_29437)
static void C_ccall f_29437(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_29443)
static void C_fcall f_29443(C_word t0,C_word t1) C_noret;
C_noret_decl(f_29506)
static void C_ccall f_29506(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_29592)
static void C_ccall f_29592(C_word c,C_word t0,C_word t1,C_word t2,C_word t3) C_noret;
C_noret_decl(f_29579)
static void C_ccall f_29579(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_29587)
static void C_ccall f_29587(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_29509)
static void C_ccall f_29509(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_29513)
static void C_ccall f_29513(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_29556)
static void C_ccall f_29556(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_29518)
static void C_ccall f_29518(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_29484)
static void C_ccall f_29484(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_29379)
static void C_ccall f_29379(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4) C_noret;
C_noret_decl(f_29386)
static void C_ccall f_29386(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_29417)
static void C_ccall f_29417(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_29413)
static void C_ccall f_29413(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_29405)
static void C_ccall f_29405(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_29288)
static void C_ccall f_29288(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4) C_noret;
C_noret_decl(f_29295)
static void C_ccall f_29295(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_29363)
static void C_ccall f_29363(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_29306)
static void C_fcall f_29306(C_word t0,C_word t1) C_noret;
C_noret_decl(f_29333)
static void C_ccall f_29333(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_29317)
static void C_ccall f_29317(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_29222)
static void C_ccall f_29222(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4) C_noret;
C_noret_decl(f_29233)
static void C_ccall f_29233(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_29236)
static void C_fcall f_29236(C_word t0,C_word t1) C_noret;
C_noret_decl(f_29243)
static void C_ccall f_29243(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_29216)
static void C_ccall f_29216(C_word c,C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_28670)
static void C_ccall f_28670(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4) C_noret;
C_noret_decl(f_28701)
static void C_ccall f_28701(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_29165)
static void C_ccall f_29165(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_29171)
static void C_ccall f_29171(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_28712)
static void C_ccall f_28712(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_28597)
static void C_fcall f_28597(C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_28622)
static void C_ccall f_28622(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_28557)
static void C_fcall f_28557(C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_28570)
static void C_fcall f_28570(C_word t0,C_word t1) C_noret;
C_noret_decl(f_28611)
static void C_ccall f_28611(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_28716)
static void C_ccall f_28716(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_29153)
static void C_ccall f_29153(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_29149)
static void C_fcall f_29149(C_word t0,C_word t1) C_noret;
C_noret_decl(f_29145)
static void C_ccall f_29145(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_28719)
static void C_ccall f_28719(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_28939)
static void C_fcall f_28939(C_word t0,C_word t1) C_noret;
C_noret_decl(f_29048)
static void C_ccall f_29048(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_29113)
static void C_ccall f_29113(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_29055)
static void C_fcall f_29055(C_word t0,C_word t1) C_noret;
C_noret_decl(f_29059)
static void C_ccall f_29059(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_29063)
static void C_ccall f_29063(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_29105)
static void C_ccall f_29105(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_29101)
static void C_ccall f_29101(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_29079)
static void C_ccall f_29079(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_28942)
static void C_fcall f_28942(C_word t0,C_word t1) C_noret;
C_noret_decl(f_28945)
static void C_fcall f_28945(C_word t0,C_word t1) C_noret;
C_noret_decl(f_28844)
static void C_ccall f_28844(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_28927)
static void C_ccall f_28927(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_28894)
static void C_ccall f_28894(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_28920)
static void C_ccall f_28920(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_28902)
static void C_ccall f_28902(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_28850)
static void C_fcall f_28850(C_word t0,C_word t1) C_noret;
C_noret_decl(f_28890)
static void C_ccall f_28890(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_28832)
static void C_ccall f_28832(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_28803)
static void C_ccall f_28803(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_28825)
static void C_ccall f_28825(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_28811)
static void C_ccall f_28811(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_28765)
static void C_fcall f_28765(C_word t0,C_word t1) C_noret;
C_noret_decl(f_28722)
static void C_fcall f_28722(C_word t0,C_word t1) C_noret;
C_noret_decl(f_28733)
static void C_ccall f_28733(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_28737)
static void C_ccall f_28737(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_28741)
static void C_ccall f_28741(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_28745)
static void C_ccall f_28745(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_28729)
static void C_ccall f_28729(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_28689)
static void C_fcall f_28689(C_word t0,C_word t1) C_noret;
C_noret_decl(f_28684)
static void C_fcall f_28684(C_word t0,C_word t1) C_noret;
C_noret_decl(f_28679)
static void C_fcall f_28679(C_word t0,C_word t1,C_word t2,C_word t3,C_word t4) C_noret;
C_noret_decl(f_28511)
static void C_ccall f_28511(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4) C_noret;
C_noret_decl(f_28522)
static void C_ccall f_28522(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_28537)
static void C_ccall f_28537(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_28473)
static void C_ccall f_28473(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4) C_noret;
C_noret_decl(f_28484)
static void C_ccall f_28484(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_28499)
static void C_ccall f_28499(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_28406)
static void C_ccall f_28406(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4) C_noret;
C_noret_decl(f_28426)
static void C_fcall f_28426(C_word t0,C_word t1) C_noret;
C_noret_decl(f_28436)
static void C_ccall f_28436(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_28449)
static void C_ccall f_28449(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_28417)
static void C_ccall f_28417(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_28424)
static void C_ccall f_28424(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_28213)
static void C_ccall f_28213(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4) C_noret;
C_noret_decl(f_28273)
static void C_fcall f_28273(C_word t0,C_word t1,C_word t2,C_word t3) C_noret;
C_noret_decl(f_28283)
static void C_ccall f_28283(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_28397)
static void C_ccall f_28397(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_28362)
static void C_ccall f_28362(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_28354)
static void C_ccall f_28354(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_28325)
static void C_ccall f_28325(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_28303)
static void C_ccall f_28303(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_28306)
static void C_ccall f_28306(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_28294)
static void C_ccall f_28294(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_28220)
static void C_ccall f_28220(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_28271)
static void C_ccall f_28271(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_28263)
static void C_ccall f_28263(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_28223)
static void C_ccall f_28223(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_28234)
static void C_ccall f_28234(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_28238)
static void C_ccall f_28238(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_28230)
static void C_ccall f_28230(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_28071)
static void C_ccall f_28071(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4) C_noret;
C_noret_decl(f_28119)
static void C_fcall f_28119(C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_28129)
static void C_ccall f_28129(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_28140)
static void C_ccall f_28140(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_28177)
static void C_ccall f_28177(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_28152)
static void C_ccall f_28152(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_28143)
static void C_ccall f_28143(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_28081)
static void C_ccall f_28081(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_28117)
static void C_ccall f_28117(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_28088)
static void C_ccall f_28088(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_27720)
static void C_ccall f_27720(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4) C_noret;
C_noret_decl(f_27727)
static void C_ccall f_27727(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_27961)
static void C_fcall f_27961(C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_27971)
static void C_ccall f_27971(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_27982)
static void C_ccall f_27982(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_27994)
static void C_fcall f_27994(C_word t0,C_word t1) C_noret;
C_noret_decl(f_27997)
static void C_ccall f_27997(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_27985)
static void C_ccall f_27985(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_27733)
static void C_ccall f_27733(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_27959)
static void C_ccall f_27959(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_27955)
static void C_ccall f_27955(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_27901)
static void C_fcall f_27901(C_word t0,C_word t1) C_noret;
C_noret_decl(f_27866)
static void C_fcall f_27866(C_word t0,C_word t1) C_noret;
C_noret_decl(f_27882)
static void C_fcall f_27882(C_word t0,C_word t1) C_noret;
C_noret_decl(f_27837)
static void C_fcall f_27837(C_word t0,C_word t1) C_noret;
C_noret_decl(f_27761)
static void C_ccall f_27761(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_27764)
static void C_ccall f_27764(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_27828)
static void C_ccall f_27828(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_27824)
static void C_ccall f_27824(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_27744)
static void C_fcall f_27744(C_word t0,C_word t1) C_noret;
C_noret_decl(f_27755)
static void C_ccall f_27755(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_27751)
static void C_ccall f_27751(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_27673)
static void C_ccall f_27673(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4) C_noret;
C_noret_decl(f_27706)
static void C_ccall f_27706(C_word c,C_word t0,C_word t1,C_word t2,C_word t3) C_noret;
C_noret_decl(f_27688)
static void C_ccall f_27688(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_27700)
static void C_ccall f_27700(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_27291)
static void C_ccall f_27291(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4) C_noret;
C_noret_decl(f_27500)
static void C_fcall f_27500(C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_27510)
static void C_ccall f_27510(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_27521)
static void C_ccall f_27521(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_27641)
static void C_ccall f_27641(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_27620)
static void C_ccall f_27620(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_27599)
static void C_ccall f_27599(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_27578)
static void C_ccall f_27578(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_27557)
static void C_ccall f_27557(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_27536)
static void C_ccall f_27536(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_27524)
static void C_ccall f_27524(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_27301)
static void C_ccall f_27301(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_27304)
static void C_fcall f_27304(C_word t0,C_word t1) C_noret;
C_noret_decl(f_27467)
static void C_fcall f_27467(C_word t0,C_word t1) C_noret;
C_noret_decl(f_27307)
static void C_fcall f_27307(C_word t0,C_word t1) C_noret;
C_noret_decl(f_27458)
static void C_ccall f_27458(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_27438)
static void C_ccall f_27438(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_27310)
static void C_fcall f_27310(C_word t0,C_word t1) C_noret;
C_noret_decl(f_27403)
static void C_ccall f_27403(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_27420)
static void C_ccall f_27420(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_27313)
static void C_fcall f_27313(C_word t0,C_word t1) C_noret;
C_noret_decl(f_27352)
static void C_ccall f_27352(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_27386)
static void C_ccall f_27386(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_27370)
static void C_ccall f_27370(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_27355)
static void C_fcall f_27355(C_word t0,C_word t1) C_noret;
C_noret_decl(f_27320)
static void C_fcall f_27320(C_word t0,C_word t1) C_noret;
C_noret_decl(f_27331)
static void C_ccall f_27331(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_27335)
static void C_ccall f_27335(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_27327)
static void C_ccall f_27327(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_27209)
static void C_ccall f_27209(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4) C_noret;
C_noret_decl(f_27213)
static void C_ccall f_27213(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_27231)
static void C_ccall f_27231(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_27049)
static void C_fcall f_27049(C_word t0,C_word t1,C_word t2,C_word t3) C_noret;
C_noret_decl(f_27057)
static void C_fcall f_27057(C_word t0,C_word t1,C_word t2,C_word t3) C_noret;
C_noret_decl(f_27067)
static void C_ccall f_27067(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_27105)
static void C_ccall f_27105(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_27108)
static void C_ccall f_27108(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_27111)
static void C_ccall f_27111(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_27186)
static void C_fcall f_27186(C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_27196)
static void C_ccall f_27196(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_27114)
static void C_ccall f_27114(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_27117)
static void C_ccall f_27117(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_27120)
static void C_ccall f_27120(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_27140)
static void C_fcall f_27140(C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_27150)
static void C_ccall f_27150(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_27153)
static void C_ccall f_27153(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_27156)
static void C_ccall f_27156(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_27123)
static void C_ccall f_27123(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_27126)
static void C_ccall f_27126(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_27043)
static void C_fcall f_27043(C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_27037)
static void C_fcall f_27037(C_word t0,C_word t1) C_noret;
C_noret_decl(f_27031)
static void C_fcall f_27031(C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_26960)
static void C_fcall f_26960(C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_27001)
static void C_ccall f_27001(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_27005)
static void C_ccall f_27005(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_27009)
static void C_ccall f_27009(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_27013)
static void C_ccall f_27013(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_27017)
static void C_ccall f_27017(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_27021)
static void C_ccall f_27021(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_27025)
static void C_ccall f_27025(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_27029)
static void C_ccall f_27029(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_26962)
static void C_fcall f_26962(C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_26968)
static void C_fcall f_26968(C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_26990)
static void C_ccall f_26990(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_26979)
static void C_ccall f_26979(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_26809)
static void C_fcall f_26809(C_word t0,C_word t1) C_noret;
C_noret_decl(f_26824)
static void C_fcall f_26824(C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_26837)
static void C_ccall f_26837(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_26797)
static void C_ccall f_26797(C_word c,C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_26785)
static void C_ccall f_26785(C_word c,C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_26773)
static void C_ccall f_26773(C_word c,C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_26767)
static void C_fcall f_26767(C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_26761)
static void C_ccall f_26761(C_word c,C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_26749)
static void C_ccall f_26749(C_word c,C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_26737)
static void C_ccall f_26737(C_word c,C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_26725)
static void C_ccall f_26725(C_word c,C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_26713)
static void C_ccall f_26713(C_word c,C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_26707)
static void C_fcall f_26707(C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_26671)
static void C_ccall f_26671(C_word c,C_word t0,C_word t1,...) C_noret;
C_noret_decl(f_26665)
static void C_ccall f_26665(C_word c,C_word t0,C_word t1,...) C_noret;
C_noret_decl(f_26611)
static void C_ccall f_26611(C_word c,C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_26615)
static void C_ccall f_26615(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_26631)
static void C_ccall f_26631(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_26663)
static void C_ccall f_26663(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_26637)
static void C_ccall f_26637(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_26643)
static void C_ccall f_26643(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_26618)
static void C_ccall f_26618(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_26602)
static void C_ccall f_26602(C_word c,C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_26606)
static void C_ccall f_26606(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_26449)
static void C_ccall f_26449(C_word c,C_word t0,C_word t1,...) C_noret;
C_noret_decl(f_26449)
static void C_ccall f_26449r(C_word t0,C_word t1,C_word t3) C_noret;
C_noret_decl(f_26576)
static void C_fcall f_26576(C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_26589)
static void C_ccall f_26589(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_26571)
static void C_ccall f_26571(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_26452)
static void C_fcall f_26452(C_word t0,C_word t1,C_word t2,C_word t3) C_noret;
C_noret_decl(f_26568)
static void C_ccall f_26568(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_26552)
static void C_ccall f_26552(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_26480)
static void C_ccall f_26480(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_26488)
static void C_fcall f_26488(C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_26498)
static void C_ccall f_26498(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_26501)
static void C_ccall f_26501(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_26483)
static void C_ccall f_26483(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_26272)
static void C_ccall f_26272(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4,C_word t5) C_noret;
C_noret_decl(f_26276)
static void C_ccall f_26276(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_26281)
static void C_ccall f_26281(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_26284)
static void C_fcall f_26284(C_word t0,C_word t1) C_noret;
C_noret_decl(f_24019)
static void C_ccall f_24019(C_word c,C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_24032)
static void C_ccall f_24032(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4) C_noret;
C_noret_decl(f_24039)
static void C_fcall f_24039(C_word t0,C_word t1) C_noret;
C_noret_decl(f_24046)
static void C_ccall f_24046(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_24025)
static void C_ccall f_24025(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_26288)
static void C_ccall f_26288(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_26325)
static void C_ccall f_26325(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_26418)
static void C_fcall f_26418(C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_26428)
static void C_fcall f_26428(C_word t0,C_word t1) C_noret;
C_noret_decl(f_26331)
static void C_ccall f_26331(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_26388)
static void C_fcall f_26388(C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_26398)
static void C_fcall f_26398(C_word t0,C_word t1) C_noret;
C_noret_decl(f_26339)
static void C_ccall f_26339(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_26353)
static void C_ccall f_26353(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_26357)
static void C_ccall f_26357(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_26361)
static void C_ccall f_26361(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_26365)
static void C_ccall f_26365(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_26372)
static void C_ccall f_26372(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_26349)
static void C_ccall f_26349(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_26342)
static void C_ccall f_26342(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_26291)
static void C_ccall f_26291(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_25146)
static void C_ccall f_25146(C_word c,C_word t0,C_word t1,C_word t2,C_word t3) C_noret;
C_noret_decl(f_25159)
static void C_ccall f_25159(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_25209)
static void C_ccall f_25209(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_25306)
static void C_ccall f_25306(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_25374)
static void C_ccall f_25374(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_25631)
static void C_ccall f_25631(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_25381)
static void C_fcall f_25381(C_word t0,C_word t1) C_noret;
C_noret_decl(f_25619)
static void C_ccall f_25619(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_25570)
static void C_ccall f_25570(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_25576)
static void C_ccall f_25576(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_25600)
static void C_ccall f_25600(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_25596)
static void C_ccall f_25596(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_25584)
static void C_ccall f_25584(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_25384)
static void C_fcall f_25384(C_word t0,C_word t1) C_noret;
C_noret_decl(f_25546)
static void C_ccall f_25546(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_25550)
static void C_ccall f_25550(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_25387)
static void C_fcall f_25387(C_word t0,C_word t1) C_noret;
C_noret_decl(f_25523)
static void C_ccall f_25523(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_25527)
static void C_ccall f_25527(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_25390)
static void C_fcall f_25390(C_word t0,C_word t1) C_noret;
C_noret_decl(f_25500)
static void C_ccall f_25500(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_25504)
static void C_ccall f_25504(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_25393)
static void C_fcall f_25393(C_word t0,C_word t1) C_noret;
C_noret_decl(f_25425)
static void C_ccall f_25425(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_25443)
static void C_ccall f_25443(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_25461)
static void C_ccall f_25461(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_25479)
static void C_ccall f_25479(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_25396)
static void C_fcall f_25396(C_word t0,C_word t1) C_noret;
C_noret_decl(f_25400)
static void C_ccall f_25400(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_25310)
static void C_ccall f_25310(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_25314)
static void C_ccall f_25314(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_25318)
static void C_ccall f_25318(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_25213)
static void C_ccall f_25213(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_25217)
static void C_ccall f_25217(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_25221)
static void C_ccall f_25221(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_25240)
static void C_ccall f_25240(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_25244)
static void C_ccall f_25244(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_25224)
static void C_fcall f_25224(C_word t0,C_word t1) C_noret;
C_noret_decl(f_25228)
static void C_ccall f_25228(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_25163)
static void C_ccall f_25163(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_25167)
static void C_ccall f_25167(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_25171)
static void C_ccall f_25171(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_25153)
static void C_fcall f_25153(C_word t0,C_word t1) C_noret;
C_noret_decl(f_24968)
static void C_fcall f_24968(C_word t0,C_word t1) C_noret;
C_noret_decl(f_24980)
static void C_fcall f_24980(C_word t0,C_word t1) C_noret;
C_noret_decl(f_24999)
static void C_ccall f_24999(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_25017)
static void C_fcall f_25017(C_word t0,C_word t1,C_word t2,C_word t3,C_word t4) C_noret;
C_noret_decl(f_25049)
static void C_ccall f_25049(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_25052)
static void C_fcall f_25052(C_word t0,C_word t1) C_noret;
C_noret_decl(f_25045)
static void C_ccall f_25045(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_25031)
static void C_ccall f_25031(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_25002)
static void C_ccall f_25002(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_24947)
static void C_fcall f_24947(C_word t0,C_word t1) C_noret;
C_noret_decl(f_24954)
static void C_ccall f_24954(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_24957)
static void C_ccall f_24957(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_24963)
static void C_ccall f_24963(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_24882)
static void C_fcall f_24882(C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_24891)
static void C_fcall f_24891(C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_24914)
static void C_ccall f_24914(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_24904)
static void C_fcall f_24904(C_word t0,C_word t1) C_noret;
C_noret_decl(f_24838)
static void C_fcall f_24838(C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_24826)
static void C_fcall f_24826(C_word t0,C_word t1) C_noret;
C_noret_decl(f_24724)
static void C_fcall f_24724(C_word t0,C_word t1) C_noret;
C_noret_decl(f_24676)
static void C_fcall f_24676(C_word t0,C_word t1) C_noret;
C_noret_decl(f_24057)
static void C_fcall f_24057(C_word t0,C_word t1,C_word t2,C_word t3,C_word t4,C_word t5,C_word t6) C_noret;
C_noret_decl(f_24061)
static void C_ccall f_24061(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_24064)
static void C_ccall f_24064(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_24490)
static void C_ccall f_24490(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_24486)
static void C_ccall f_24486(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_24482)
static void C_ccall f_24482(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_24067)
static void C_fcall f_24067(C_word t0,C_word t1) C_noret;
C_noret_decl(f_24190)
static void C_ccall f_24190(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_23366)
static void C_ccall f_23366(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_24196)
static void C_fcall f_24196(C_word t0,C_word t1) C_noret;
C_noret_decl(f_23382)
static void C_ccall f_23382(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_24284)
static void C_fcall f_24284(C_word t0,C_word t1) C_noret;
C_noret_decl(f_24354)
static void C_ccall f_24354(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_23398)
static void C_ccall f_23398(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_24357)
static void C_fcall f_24357(C_word t0,C_word t1) C_noret;
C_noret_decl(f_23430)
static void C_ccall f_23430(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_24435)
static void C_fcall f_24435(C_word t0,C_word t1) C_noret;
C_noret_decl(f_24461)
static void C_ccall f_24461(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4) C_noret;
C_noret_decl(f_24455)
static void C_ccall f_24455(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_24444)
static void C_ccall f_24444(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_24386)
static void C_fcall f_24386(C_word t0,C_word t1) C_noret;
C_noret_decl(f_24396)
static void C_ccall f_24396(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_24422)
static void C_ccall f_24422(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4) C_noret;
C_noret_decl(f_24416)
static void C_ccall f_24416(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_24399)
static void C_ccall f_24399(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_24409)
static void C_ccall f_24409(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_24402)
static void C_fcall f_24402(C_word t0,C_word t1) C_noret;
C_noret_decl(f_24363)
static void C_ccall f_24363(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_24372)
static void C_ccall f_24372(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_24366)
static void C_fcall f_24366(C_word t0,C_word t1) C_noret;
C_noret_decl(f_24290)
static void C_ccall f_24290(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_24308)
static void C_fcall f_24308(C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_24341)
static void C_ccall f_24341(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4) C_noret;
C_noret_decl(f_24327)
static void C_ccall f_24327(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_24335)
static void C_ccall f_24335(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_24318)
static void C_ccall f_24318(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_24293)
static void C_ccall f_24293(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_24205)
static void C_ccall f_24205(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_24227)
static void C_fcall f_24227(C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_24274)
static void C_ccall f_24274(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4) C_noret;
C_noret_decl(f_24260)
static void C_ccall f_24260(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_24268)
static void C_ccall f_24268(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_24240)
static void C_ccall f_24240(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_24243)
static void C_fcall f_24243(C_word t0,C_word t1) C_noret;
C_noret_decl(f_24208)
static void C_ccall f_24208(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_24225)
static void C_ccall f_24225(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_24211)
static void C_fcall f_24211(C_word t0,C_word t1) C_noret;
C_noret_decl(f_24076)
static void C_ccall f_24076(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_24082)
static void C_ccall f_24082(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_24140)
static void C_ccall f_24140(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_24143)
static void C_ccall f_24143(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_24164)
static void C_ccall f_24164(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4) C_noret;
C_noret_decl(f_24175)
static void C_ccall f_24175(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_24154)
static void C_ccall f_24154(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_24088)
static void C_ccall f_24088(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_24098)
static void C_ccall f_24098(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_24134)
static void C_ccall f_24134(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_24104)
static void C_ccall f_24104(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_24119)
static void C_ccall f_24119(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_24123)
static void C_ccall f_24123(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_24127)
static void C_ccall f_24127(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_24111)
static void C_ccall f_24111(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_23953)
static void C_fcall f_23953(C_word t0,C_word t1) C_noret;
C_noret_decl(f_23955)
static void C_ccall f_23955(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4) C_noret;
C_noret_decl(f_24003)
static void C_ccall f_24003(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_23959)
static void C_ccall f_23959(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_23962)
static void C_fcall f_23962(C_word t0,C_word t1) C_noret;
C_noret_decl(f_23967)
static void C_fcall f_23967(C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_23988)
static void C_ccall f_23988(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_23945)
static void C_fcall f_23945(C_word t0,C_word t1) C_noret;
C_noret_decl(f_23947)
static void C_ccall f_23947(C_word c,C_word t0,C_word t1,C_word t2,C_word t3) C_noret;
C_noret_decl(f_23768)
static void C_ccall f_23768(C_word c,C_word t0,C_word t1,...) C_noret;
C_noret_decl(f_23768)
static void C_ccall f_23768r(C_word t0,C_word t1,C_word t3) C_noret;
C_noret_decl(f_23776)
static void C_ccall f_23776(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_23737)
static void C_fcall f_23737(C_word t0,C_word t1,C_word t2,C_word t3) C_noret;
C_noret_decl(f_23754)
static void C_ccall f_23754(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_23758)
static void C_ccall f_23758(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_23704)
static void C_fcall f_23704(C_word t0,C_word t1,C_word t2,C_word t3) C_noret;
C_noret_decl(f_23711)
static void C_ccall f_23711(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_23598)
static void C_ccall f_23598(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_23605)
static void C_ccall f_23605(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_23720)
static void C_ccall f_23720(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_23943)
static void C_ccall f_23943(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_23920)
static void C_ccall f_23920(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_23936)
static void C_ccall f_23936(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_23782)
static void C_ccall f_23782(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_23785)
static void C_ccall f_23785(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_23809)
static void C_ccall f_23809(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_23866)
static void C_ccall f_23866(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_23872)
static void C_ccall f_23872(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_23881)
static void C_ccall f_23881(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_23890)
static void C_ccall f_23890(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_23899)
static void C_ccall f_23899(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_23908)
static void C_ccall f_23908(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_23860)
static void C_ccall f_23860(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_23815)
static void C_ccall f_23815(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_23821)
static void C_ccall f_23821(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_23827)
static void C_ccall f_23827(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_23833)
static void C_ccall f_23833(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_23839)
static void C_ccall f_23839(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_23845)
static void C_ccall f_23845(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_23686)
static void C_fcall f_23686(C_word t0,C_word t1,C_word t2,C_word t3) C_noret;
C_noret_decl(f_23693)
static void C_ccall f_23693(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_23619)
static void C_fcall f_23619(C_word t0,C_word t1,C_word t2,C_word t3) C_noret;
C_noret_decl(f_23607)
static void C_fcall f_23607(C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_23575)
static void C_fcall f_23575(C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_23582)
static void C_ccall f_23582(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_23589)
static void C_ccall f_23589(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_23559)
static void C_fcall f_23559(C_word t0,C_word t1) C_noret;
C_noret_decl(f_23566)
static void C_ccall f_23566(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_23573)
static void C_ccall f_23573(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_23547)
static void C_fcall f_23547(C_word t0,C_word t1) C_noret;
C_noret_decl(f_23529)
static void C_fcall f_23529(C_word t0,C_word t1) C_noret;
C_noret_decl(f_23511)
static void C_fcall f_23511(C_word t0,C_word t1) C_noret;
C_noret_decl(f_23496)
static void C_fcall f_23496(C_word t0,C_word t1) C_noret;
C_noret_decl(f_23490)
static void C_fcall f_23490(C_word t0,C_word t1,C_word t2,C_word t3) C_noret;
C_noret_decl(f_23478)
static void C_fcall f_23478(C_word t0,C_word t1) C_noret;
C_noret_decl(f_23460)
static void C_fcall f_23460(C_word t0,C_word t1) C_noret;
C_noret_decl(f_23439)
static void C_fcall f_23439(C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_23407)
static void C_fcall f_23407(C_word t0,C_word t1) C_noret;
C_noret_decl(f_23414)
static void C_ccall f_23414(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_23349)
static void C_fcall f_23349(C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_23357)
static void C_ccall f_23357(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_23339)
static void C_fcall f_23339(C_word t0,C_word t1) C_noret;
C_noret_decl(f_23347)
static void C_ccall f_23347(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_23333)
static void C_fcall f_23333(C_word t0,C_word t1) C_noret;
C_noret_decl(f_23321)
static void C_fcall f_23321(C_word t0,C_word t1) C_noret;
C_noret_decl(f_23318)
static void C_ccall f_23318(C_word c,C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_23297)
static void C_fcall f_23297(C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_23210)
static void C_fcall f_23210(C_word t0,C_word t1) C_noret;
C_noret_decl(f_23189)
static void C_fcall f_23189(C_word t0,C_word t1,C_word t2,C_word t3,C_word t4,C_word t5) C_noret;
C_noret_decl(f_23179)
static void C_fcall f_23179(C_word t0,C_word t1) C_noret;
C_noret_decl(f_23167)
static void C_fcall f_23167(C_word t0,C_word t1) C_noret;
C_noret_decl(f_23138)
static void C_ccall f_23138(C_word c,C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_23126)
static void C_fcall f_23126(C_word t0,C_word t1) C_noret;
C_noret_decl(f_23108)
static void C_fcall f_23108(C_word t0,C_word t1) C_noret;
C_noret_decl(f_23090)
static void C_fcall f_23090(C_word t0,C_word t1) C_noret;
C_noret_decl(f_23069)
static void C_ccall f_23069(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4) C_noret;
C_noret_decl(f_22047)
static void C_ccall f_22047(C_word c,C_word t0,C_word t1,C_word t2,...) C_noret;
C_noret_decl(f_22047)
static void C_ccall f_22047r(C_word t0,C_word t1,C_word t2,C_word t4) C_noret;
C_noret_decl(f_23046)
static void C_ccall f_23046(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_23061)
static void C_ccall f_23061(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_23053)
static void C_ccall f_23053(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_23017)
static void C_ccall f_23017(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_23021)
static void C_ccall f_23021(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_22982)
static void C_ccall f_22982(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_22986)
static void C_ccall f_22986(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_22057)
static void C_fcall f_22057(C_word t0,C_word t1) C_noret;
C_noret_decl(f_22946)
static void C_ccall f_22946(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_22961)
static void C_ccall f_22961(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_22953)
static void C_ccall f_22953(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_22917)
static void C_ccall f_22917(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_22921)
static void C_ccall f_22921(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_22882)
static void C_ccall f_22882(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_22886)
static void C_ccall f_22886(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_22060)
static void C_fcall f_22060(C_word t0,C_word t1) C_noret;
C_noret_decl(f_22063)
static void C_ccall f_22063(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_22068)
static void C_ccall f_22068(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_22775)
static void C_fcall f_22775(C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_22798)
static void C_fcall f_22798(C_word t0,C_word t1,C_word t2,C_word t3,C_word t4) C_noret;
C_noret_decl(f_22851)
static void C_ccall f_22851(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_22833)
static void C_fcall f_22833(C_word t0,C_word t1) C_noret;
C_noret_decl(f_22826)
static void C_ccall f_22826(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_22808)
static void C_ccall f_22808(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_22785)
static void C_ccall f_22785(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_22262)
static void C_ccall f_22262(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_22737)
static void C_fcall f_22737(C_word t0,C_word t1) C_noret;
C_noret_decl(f_22759)
static void C_ccall f_22759(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_22743)
static void C_ccall f_22743(C_word c,C_word t0,C_word t1,C_word t2,C_word t3) C_noret;
C_noret_decl(f_22751)
static void C_ccall f_22751(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_22755)
static void C_ccall f_22755(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_22741)
static void C_ccall f_22741(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_22731)
static void C_ccall f_22731(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_22265)
static void C_fcall f_22265(C_word t0,C_word t1) C_noret;
C_noret_decl(f_22608)
static void C_fcall f_22608(C_word t0,C_word t1,C_word t2,C_word t3) C_noret;
C_noret_decl(f_22632)
static void C_ccall f_22632(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_22694)
static void C_fcall f_22694(C_word t0,C_word t1,C_word t2,C_word t3) C_noret;
C_noret_decl(f_22635)
static void C_ccall f_22635(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_22651)
static void C_fcall f_22651(C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_22676)
static void C_ccall f_22676(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_22642)
static void C_ccall f_22642(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_22619)
static void C_ccall f_22619(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_22268)
static void C_ccall f_22268(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_22594)
static void C_ccall f_22594(C_word c,C_word t0,C_word t1,C_word t2,C_word t3) C_noret;
C_noret_decl(f_22272)
static void C_ccall f_22272(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_22316)
static void C_ccall f_22316(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_22319)
static void C_ccall f_22319(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_22575)
static void C_fcall f_22575(C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_22585)
static void C_ccall f_22585(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_22322)
static void C_ccall f_22322(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_22513)
static void C_fcall f_22513(C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_22523)
static void C_ccall f_22523(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_22526)
static void C_ccall f_22526(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_22546)
static void C_ccall f_22546(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_22548)
static void C_fcall f_22548(C_word t0,C_word t1,C_word t2,C_word t3) C_noret;
C_noret_decl(f_22558)
static void C_ccall f_22558(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_22532)
static void C_ccall f_22532(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_22535)
static void C_ccall f_22535(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_22325)
static void C_ccall f_22325(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_22333)
static void C_fcall f_22333(C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_22346)
static void C_ccall f_22346(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_22220)
static void C_ccall f_22220(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_22229)
static void C_fcall f_22229(C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_22251)
static void C_ccall f_22251(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_22240)
static void C_ccall f_22240(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_22349)
static void C_ccall f_22349(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_22484)
static void C_ccall f_22484(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_22486)
static void C_fcall f_22486(C_word t0,C_word t1,C_word t2,C_word t3) C_noret;
C_noret_decl(f_22496)
static void C_ccall f_22496(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_22355)
static void C_ccall f_22355(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_22457)
static void C_ccall f_22457(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_22459)
static void C_fcall f_22459(C_word t0,C_word t1,C_word t2,C_word t3) C_noret;
C_noret_decl(f_22469)
static void C_ccall f_22469(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_22358)
static void C_ccall f_22358(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_22370)
static void C_fcall f_22370(C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_22396)
static void C_ccall f_22396(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_22402)
static void C_ccall f_22402(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_22408)
static void C_ccall f_22408(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_22418)
static void C_ccall f_22418(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_22420)
static void C_fcall f_22420(C_word t0,C_word t1,C_word t2,C_word t3) C_noret;
C_noret_decl(f_22430)
static void C_ccall f_22430(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_22411)
static void C_ccall f_22411(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_22383)
static void C_ccall f_22383(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_22361)
static void C_ccall f_22361(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_22328)
static void C_ccall f_22328(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_22275)
static void C_ccall f_22275(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_22298)
static void C_ccall f_22298(C_word c,C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_22287)
static void C_ccall f_22287(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_22152)
static void C_fcall f_22152(C_word t0,C_word t1,C_word t2,C_word t3,C_word t4) C_noret;
C_noret_decl(f_22200)
static void C_ccall f_22200(C_word c,C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_22162)
static void C_ccall f_22162(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_22190)
static void C_ccall f_22190(C_word c,C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_22165)
static void C_ccall f_22165(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_22070)
static void C_fcall f_22070(C_word t0,C_word t1,C_word t2,C_word t3) C_noret;
C_noret_decl(f_22142)
static void C_ccall f_22142(C_word c,C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_22074)
static void C_ccall f_22074(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_22092)
static void C_ccall f_22092(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_22124)
static void C_ccall f_22124(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_21953)
static void C_ccall f_21953(C_word c,C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_21957)
static void C_ccall f_21957(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_21986)
static void C_ccall f_21986(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_21991)
static void C_fcall f_21991(C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_22016)
static void C_fcall f_22016(C_word t0,C_word t1) C_noret;
C_noret_decl(f_22001)
static void C_ccall f_22001(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_21435)
static void C_ccall f_21435(C_word c,C_word t0,C_word t1,C_word t2,...) C_noret;
C_noret_decl(f_21435)
static void C_ccall f_21435r(C_word t0,C_word t1,C_word t2,C_word t4) C_noret;
C_noret_decl(f_21706)
static void C_ccall f_21706(C_word c,C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_21710)
static void C_ccall f_21710(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_21715)
static void C_ccall f_21715(C_word c,C_word t0,C_word t1,C_word t2,...) C_noret;
C_noret_decl(f_21715)
static void C_ccall f_21715r(C_word t0,C_word t1,C_word t2,C_word t4) C_noret;
C_noret_decl(f_21921)
static void C_ccall f_21921(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_21936)
static void C_ccall f_21936(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_21928)
static void C_ccall f_21928(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_21892)
static void C_ccall f_21892(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_21896)
static void C_ccall f_21896(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_21857)
static void C_ccall f_21857(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_21861)
static void C_ccall f_21861(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_21719)
static void C_fcall f_21719(C_word t0,C_word t1) C_noret;
C_noret_decl(f_21821)
static void C_ccall f_21821(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_21836)
static void C_ccall f_21836(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_21828)
static void C_ccall f_21828(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_21792)
static void C_ccall f_21792(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_21796)
static void C_ccall f_21796(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_21757)
static void C_ccall f_21757(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_21761)
static void C_ccall f_21761(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_21722)
static void C_fcall f_21722(C_word t0,C_word t1) C_noret;
C_noret_decl(f_21725)
static void C_ccall f_21725(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_21728)
static void C_fcall f_21728(C_word t0,C_word t1) C_noret;
C_noret_decl(f_21697)
static void C_ccall f_21697(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_21439)
static void C_ccall f_21439(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_21666)
static void C_ccall f_21666(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_21681)
static void C_ccall f_21681(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_21673)
static void C_ccall f_21673(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_21637)
static void C_ccall f_21637(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_21641)
static void C_ccall f_21641(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_21602)
static void C_ccall f_21602(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_21606)
static void C_ccall f_21606(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_21442)
static void C_fcall f_21442(C_word t0,C_word t1) C_noret;
C_noret_decl(f_21566)
static void C_ccall f_21566(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_21581)
static void C_ccall f_21581(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_21573)
static void C_ccall f_21573(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_21537)
static void C_ccall f_21537(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_21541)
static void C_ccall f_21541(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_21502)
static void C_ccall f_21502(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_21506)
static void C_ccall f_21506(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_21445)
static void C_fcall f_21445(C_word t0,C_word t1) C_noret;
C_noret_decl(f_21448)
static void C_ccall f_21448(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_21451)
static void C_ccall f_21451(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_21463)
static void C_ccall f_21463(C_word c,C_word t0,C_word t1,C_word t2,C_word t3) C_noret;
C_noret_decl(f_21481)
static void C_ccall f_21481(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_21469)
static void C_ccall f_21469(C_word c,C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_21457)
static void C_ccall f_21457(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_21372)
static void C_fcall f_21372(C_word t0,C_word t1) C_noret;
C_noret_decl(f_21032)
static void C_ccall f_21032(C_word c,C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_21214)
static void C_ccall f_21214(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_21218)
static void C_ccall f_21218(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_21220)
static void C_fcall f_21220(C_word t0,C_word t1,C_word t2,C_word t3,C_word t4) C_noret;
C_noret_decl(f_21145)
static void C_fcall f_21145(C_word t0,C_word t1,C_word t2,C_word t3,C_word t4) C_noret;
C_noret_decl(f_21155)
static void C_fcall f_21155(C_word t0,C_word t1) C_noret;
C_noret_decl(f_21162)
static void C_fcall f_21162(C_word t0,C_word t1) C_noret;
C_noret_decl(f_21230)
static void C_ccall f_21230(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_21233)
static void C_ccall f_21233(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_21237)
static void C_ccall f_21237(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_21257)
static void C_fcall f_21257(C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_21273)
static void C_ccall f_21273(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_21240)
static void C_ccall f_21240(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_21035)
static void C_fcall f_21035(C_word t0,C_word t1,C_word t2,C_word t3) C_noret;
C_noret_decl(f_21047)
static void C_fcall f_21047(C_word t0,C_word t1,C_word t2,C_word t3,C_word t4) C_noret;
C_noret_decl(f_21083)
static void C_ccall f_21083(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_21103)
static void C_ccall f_21103(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_21108)
static void C_fcall f_21108(C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_20545)
static void C_ccall f_20545(C_word c,C_word t0,C_word t1,C_word t2,...) C_noret;
C_noret_decl(f_20545)
static void C_ccall f_20545r(C_word t0,C_word t1,C_word t2,C_word t4) C_noret;
C_noret_decl(f_20472)
static void C_fcall f_20472(C_word t0,C_word t1,C_word t2,C_word t3,C_word t4,C_word t5) C_noret;
C_noret_decl(f_20317)
static void C_ccall f_20317(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_20323)
static void C_ccall f_20323(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_20408)
static void C_fcall f_20408(C_word t0,C_word t1) C_noret;
C_noret_decl(f_20335)
static void C_ccall f_20335(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_20351)
static void C_ccall f_20351(C_word c,C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_20355)
static void C_fcall f_20355(C_word t0,C_word t1) C_noret;
C_noret_decl(f_20358)
static void C_fcall f_20358(C_word t0,C_word t1) C_noret;
C_noret_decl(f_20338)
static void C_ccall f_20338(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_20349)
static void C_ccall f_20349(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_20489)
static void C_ccall f_20489(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_21026)
static void C_ccall f_21026(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_20549)
static void C_ccall f_20549(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_20995)
static void C_ccall f_20995(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_21010)
static void C_ccall f_21010(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_21002)
static void C_ccall f_21002(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_20966)
static void C_ccall f_20966(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_20970)
static void C_ccall f_20970(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_20931)
static void C_ccall f_20931(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_20935)
static void C_ccall f_20935(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_20896)
static void C_ccall f_20896(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_20900)
static void C_ccall f_20900(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_20552)
static void C_fcall f_20552(C_word t0,C_word t1) C_noret;
C_noret_decl(f_20860)
static void C_ccall f_20860(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_20875)
static void C_ccall f_20875(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_20867)
static void C_ccall f_20867(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_20831)
static void C_ccall f_20831(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_20835)
static void C_ccall f_20835(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_20796)
static void C_ccall f_20796(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_20800)
static void C_ccall f_20800(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_20761)
static void C_ccall f_20761(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_20765)
static void C_ccall f_20765(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_20555)
static void C_fcall f_20555(C_word t0,C_word t1) C_noret;
C_noret_decl(f_20725)
static void C_ccall f_20725(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_20740)
static void C_ccall f_20740(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_20732)
static void C_ccall f_20732(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_20696)
static void C_ccall f_20696(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_20700)
static void C_ccall f_20700(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_20661)
static void C_ccall f_20661(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_20665)
static void C_ccall f_20665(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_20626)
static void C_ccall f_20626(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_20630)
static void C_ccall f_20630(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_20558)
static void C_fcall f_20558(C_word t0,C_word t1) C_noret;
C_noret_decl(f_20561)
static void C_ccall f_20561(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_20564)
static void C_ccall f_20564(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_20597)
static void C_ccall f_20597(C_word c,C_word t0,C_word t1,C_word t2,C_word t3) C_noret;
C_noret_decl(f_20605)
static void C_ccall f_20605(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_20570)
static void C_ccall f_20570(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_20583)
static void C_ccall f_20583(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_20573)
static void C_fcall f_20573(C_word t0,C_word t1) C_noret;
C_noret_decl(f_20576)
static void C_ccall f_20576(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_20112)
static void C_ccall f_20112(C_word c,C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_20116)
static void C_ccall f_20116(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_20119)
static void C_ccall f_20119(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_20122)
static void C_ccall f_20122(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_20291)
static void C_ccall f_20291(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_20304)
static void C_ccall f_20304(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_20308)
static void C_ccall f_20308(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_20128)
static void C_ccall f_20128(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_20284)
static void C_ccall f_20284(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_20265)
static void C_ccall f_20265(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_20272)
static void C_ccall f_20272(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_20276)
static void C_ccall f_20276(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_20134)
static void C_fcall f_20134(C_word t0,C_word t1) C_noret;
C_noret_decl(f_20140)
static void C_ccall f_20140(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_20224)
static void C_ccall f_20224(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_20226)
static void C_fcall f_20226(C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_20248)
static void C_ccall f_20248(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_20255)
static void C_ccall f_20255(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_20259)
static void C_ccall f_20259(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_20245)
static void C_fcall f_20245(C_word t0,C_word t1) C_noret;
C_noret_decl(f_20241)
static void C_ccall f_20241(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_20182)
static void C_ccall f_20182(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_20199)
static void C_fcall f_20199(C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_20209)
static void C_ccall f_20209(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_20185)
static void C_ccall f_20185(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_20144)
static void C_fcall f_20144(C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_20152)
static void C_ccall f_20152(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_20154)
static void C_fcall f_20154(C_word t0,C_word t1,C_word t2,C_word t3) C_noret;
C_noret_decl(f_20175)
static void C_ccall f_20175(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_20000)
static void C_fcall f_20000(C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_20110)
static void C_ccall f_20110(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_20069)
static void C_fcall f_20069(C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_20102)
static void C_ccall f_20102(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_20098)
static void C_ccall f_20098(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_20083)
static void C_ccall f_20083(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_20007)
static void C_ccall f_20007(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_20015)
static void C_fcall f_20015(C_word t0,C_word t1,C_word t2,C_word t3,C_word t4) C_noret;
C_noret_decl(f_20060)
static void C_ccall f_20060(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_20048)
static void C_ccall f_20048(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_20032)
static void C_ccall f_20032(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_19233)
static void C_ccall f_19233(C_word c,C_word t0,C_word t1,C_word t2,...) C_noret;
C_noret_decl(f_19233)
static void C_ccall f_19233r(C_word t0,C_word t1,C_word t2,C_word t4) C_noret;
C_noret_decl(f_19550)
static void C_ccall f_19550(C_word c,C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_19557)
static void C_fcall f_19557(C_word t0,C_word t1) C_noret;
C_noret_decl(f_19962)
static void C_ccall f_19962(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_19977)
static void C_ccall f_19977(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_19969)
static void C_ccall f_19969(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_19933)
static void C_ccall f_19933(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_19937)
static void C_ccall f_19937(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_19898)
static void C_ccall f_19898(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_19902)
static void C_ccall f_19902(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_19863)
static void C_ccall f_19863(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_19867)
static void C_ccall f_19867(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_19560)
static void C_fcall f_19560(C_word t0,C_word t1) C_noret;
C_noret_decl(f_19827)
static void C_ccall f_19827(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_19842)
static void C_ccall f_19842(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_19834)
static void C_ccall f_19834(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_19798)
static void C_ccall f_19798(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_19802)
static void C_ccall f_19802(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_19763)
static void C_ccall f_19763(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_19767)
static void C_ccall f_19767(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_19728)
static void C_ccall f_19728(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_19732)
static void C_ccall f_19732(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_19563)
static void C_fcall f_19563(C_word t0,C_word t1) C_noret;
C_noret_decl(f_19692)
static void C_ccall f_19692(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_19707)
static void C_ccall f_19707(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_19699)
static void C_ccall f_19699(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_19663)
static void C_ccall f_19663(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_19667)
static void C_ccall f_19667(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_19628)
static void C_ccall f_19628(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_19632)
static void C_ccall f_19632(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_19593)
static void C_ccall f_19593(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_19597)
static void C_ccall f_19597(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_19566)
static void C_fcall f_19566(C_word t0,C_word t1) C_noret;
C_noret_decl(f_19569)
static void C_ccall f_19569(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_19237)
static void C_ccall f_19237(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_19240)
static void C_ccall f_19240(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_19514)
static void C_ccall f_19514(C_word c,C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_19518)
static void C_ccall f_19518(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_19521)
static void C_ccall f_19521(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_19524)
static void C_ccall f_19524(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_19527)
static void C_ccall f_19527(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_19540)
static void C_ccall f_19540(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_19530)
static void C_fcall f_19530(C_word t0,C_word t1) C_noret;
C_noret_decl(f_19246)
static void C_ccall f_19246(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_19253)
static void C_fcall f_19253(C_word t0,C_word t1) C_noret;
C_noret_decl(f_19484)
static void C_ccall f_19484(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_19499)
static void C_ccall f_19499(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_19491)
static void C_ccall f_19491(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_19455)
static void C_ccall f_19455(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_19459)
static void C_ccall f_19459(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_19420)
static void C_ccall f_19420(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_19424)
static void C_ccall f_19424(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_19256)
static void C_fcall f_19256(C_word t0,C_word t1) C_noret;
C_noret_decl(f_19384)
static void C_ccall f_19384(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_19399)
static void C_ccall f_19399(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_19391)
static void C_ccall f_19391(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_19355)
static void C_ccall f_19355(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_19359)
static void C_ccall f_19359(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_19320)
static void C_ccall f_19320(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_19324)
static void C_ccall f_19324(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_19259)
static void C_fcall f_19259(C_word t0,C_word t1) C_noret;
C_noret_decl(f_19262)
static void C_ccall f_19262(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_19277)
static void C_ccall f_19277(C_word c,C_word t0,C_word t1,C_word t2,C_word t3) C_noret;
C_noret_decl(f_19299)
static void C_ccall f_19299(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_19283)
static void C_ccall f_19283(C_word c,C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_19291)
static void C_ccall f_19291(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_19265)
static void C_ccall f_19265(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_19268)
static void C_ccall f_19268(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_19150)
static void C_fcall f_19150(C_word t0,C_word t1) C_noret;
C_noret_decl(f_19141)
static void C_fcall f_19141(C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_19132)
static void C_fcall f_19132(C_word t0,C_word t1) C_noret;
C_noret_decl(f_19114)
static void C_fcall f_19114(C_word t0,C_word t1) C_noret;
C_noret_decl(f_19096)
static void C_fcall f_19096(C_word t0,C_word t1) C_noret;
C_noret_decl(f_19078)
static void C_fcall f_19078(C_word t0,C_word t1) C_noret;
C_noret_decl(f_19069)
static void C_fcall f_19069(C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_19060)
static void C_fcall f_19060(C_word t0,C_word t1) C_noret;
C_noret_decl(f_18838)
static void C_ccall f_18838(C_word c,C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_18888)
static void C_ccall f_18888(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_19033)
static void C_ccall f_19033(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_18914)
static void C_ccall f_18914(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_19029)
static void C_ccall f_19029(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_19014)
static void C_ccall f_19014(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_18995)
static void C_ccall f_18995(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_18968)
static void C_ccall f_18968(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_18921)
static void C_ccall f_18921(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_18891)
static void C_fcall f_18891(C_word t0,C_word t1) C_noret;
C_noret_decl(f_18841)
static void C_ccall f_18841(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4,C_word t5,C_word t6) C_noret;
C_noret_decl(f_18847)
static void C_fcall f_18847(C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_18863)
static void C_ccall f_18863(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_18866)
static void C_ccall f_18866(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_18364)
static void C_ccall f_18364(C_word c,C_word t0,C_word t1,C_word t2,...) C_noret;
C_noret_decl(f_18364)
static void C_ccall f_18364r(C_word t0,C_word t1,C_word t2,C_word t4) C_noret;
C_noret_decl(f_18828)
static void C_ccall f_18828(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_18368)
static void C_fcall f_18368(C_word t0,C_word t1) C_noret;
C_noret_decl(f_18800)
static void C_ccall f_18800(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_18815)
static void C_ccall f_18815(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_18807)
static void C_ccall f_18807(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_18771)
static void C_ccall f_18771(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_18775)
static void C_ccall f_18775(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_18736)
static void C_ccall f_18736(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_18740)
static void C_ccall f_18740(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_18701)
static void C_ccall f_18701(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_18705)
static void C_ccall f_18705(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_18371)
static void C_fcall f_18371(C_word t0,C_word t1) C_noret;
C_noret_decl(f_18665)
static void C_ccall f_18665(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_18680)
static void C_ccall f_18680(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_18672)
static void C_ccall f_18672(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_18636)
static void C_ccall f_18636(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_18640)
static void C_ccall f_18640(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_18601)
static void C_ccall f_18601(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_18605)
static void C_ccall f_18605(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_18566)
static void C_ccall f_18566(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_18570)
static void C_ccall f_18570(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_18374)
static void C_fcall f_18374(C_word t0,C_word t1) C_noret;
C_noret_decl(f_18530)
static void C_ccall f_18530(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_18545)
static void C_ccall f_18545(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_18537)
static void C_ccall f_18537(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_18501)
static void C_ccall f_18501(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_18505)
static void C_ccall f_18505(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_18466)
static void C_ccall f_18466(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_18470)
static void C_ccall f_18470(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_18431)
static void C_ccall f_18431(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_18435)
static void C_ccall f_18435(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_18377)
static void C_fcall f_18377(C_word t0,C_word t1) C_noret;
C_noret_decl(f_18380)
static void C_ccall f_18380(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_18383)
static void C_ccall f_18383(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_18398)
static void C_ccall f_18398(C_word c,C_word t0,C_word t1,C_word t2,C_word t3) C_noret;
C_noret_decl(f_18410)
static void C_ccall f_18410(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_18389)
static void C_ccall f_18389(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_18392)
static void C_ccall f_18392(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_18288)
static void C_ccall f_18288(C_word c,C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_18292)
static void C_ccall f_18292(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_18311)
static void C_ccall f_18311(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_18321)
static void C_ccall f_18321(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_18323)
static void C_fcall f_18323(C_word t0,C_word t1,C_word t2,C_word t3,C_word t4) C_noret;
C_noret_decl(f_18340)
static void C_ccall f_18340(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_18343)
static void C_ccall f_18343(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_18354)
static void C_ccall f_18354(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_18295)
static void C_ccall f_18295(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_18025)
static void C_ccall f_18025(C_word c,C_word t0,C_word t1,C_word t2,...) C_noret;
C_noret_decl(f_18025)
static void C_ccall f_18025r(C_word t0,C_word t1,C_word t2,C_word t4) C_noret;
C_noret_decl(f_18278)
static void C_ccall f_18278(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_18029)
static void C_fcall f_18029(C_word t0,C_word t1) C_noret;
C_noret_decl(f_18250)
static void C_ccall f_18250(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_18265)
static void C_ccall f_18265(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_18257)
static void C_ccall f_18257(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_18221)
static void C_ccall f_18221(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_18225)
static void C_ccall f_18225(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_18186)
static void C_ccall f_18186(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_18190)
static void C_ccall f_18190(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_18032)
static void C_fcall f_18032(C_word t0,C_word t1) C_noret;
C_noret_decl(f_18150)
static void C_ccall f_18150(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_18165)
static void C_ccall f_18165(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_18157)
static void C_ccall f_18157(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_18121)
static void C_ccall f_18121(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_18125)
static void C_ccall f_18125(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_18086)
static void C_ccall f_18086(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_18090)
static void C_ccall f_18090(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_18035)
static void C_fcall f_18035(C_word t0,C_word t1) C_noret;
C_noret_decl(f_18038)
static void C_ccall f_18038(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_18041)
static void C_ccall f_18041(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_18053)
static void C_ccall f_18053(C_word c,C_word t0,C_word t1,C_word t2,C_word t3) C_noret;
C_noret_decl(f_18065)
static void C_ccall f_18065(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_18047)
static void C_ccall f_18047(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_17989)
static void C_ccall f_17989(C_word c,C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_17993)
static void C_ccall f_17993(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_18015)
static void C_ccall f_18015(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_18009)
static void C_ccall f_18009(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_18002)
static void C_ccall f_18002(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_17742)
static void C_ccall f_17742(C_word c,C_word t0,C_word t1,C_word t2,...) C_noret;
C_noret_decl(f_17742)
static void C_ccall f_17742r(C_word t0,C_word t1,C_word t2,C_word t4) C_noret;
C_noret_decl(f_17746)
static void C_fcall f_17746(C_word t0,C_word t1) C_noret;
C_noret_decl(f_17959)
static void C_ccall f_17959(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_17974)
static void C_ccall f_17974(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_17966)
static void C_ccall f_17966(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_17930)
static void C_ccall f_17930(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_17934)
static void C_ccall f_17934(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_17895)
static void C_ccall f_17895(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_17899)
static void C_ccall f_17899(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_17749)
static void C_fcall f_17749(C_word t0,C_word t1) C_noret;
C_noret_decl(f_17859)
static void C_ccall f_17859(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_17874)
static void C_ccall f_17874(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_17866)
static void C_ccall f_17866(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_17830)
static void C_ccall f_17830(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_17834)
static void C_ccall f_17834(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_17795)
static void C_ccall f_17795(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_17799)
static void C_ccall f_17799(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_17752)
static void C_fcall f_17752(C_word t0,C_word t1) C_noret;
C_noret_decl(f_17755)
static void C_ccall f_17755(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_17758)
static void C_ccall f_17758(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_17766)
static void C_ccall f_17766(C_word c,C_word t0,C_word t1,C_word t2,C_word t3) C_noret;
C_noret_decl(f_17774)
static void C_ccall f_17774(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_17764)
static void C_ccall f_17764(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_17527)
static void C_ccall f_17527(C_word c,C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_17531)
static void C_ccall f_17531(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_17740)
static void C_ccall f_17740(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_17693)
static void C_ccall f_17693(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_17705)
static void C_fcall f_17705(C_word t0,C_word t1) C_noret;
C_noret_decl(f_17561)
static void C_ccall f_17561(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_17564)
static void C_ccall f_17564(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_17570)
static void C_ccall f_17570(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_17573)
static void C_ccall f_17573(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_17661)
static void C_fcall f_17661(C_word t0,C_word t1) C_noret;
C_noret_decl(f_17576)
static void C_fcall f_17576(C_word t0,C_word t1) C_noret;
C_noret_decl(f_17655)
static void C_ccall f_17655(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_17582)
static void C_ccall f_17582(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_17585)
static void C_ccall f_17585(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_17537)
static void C_ccall f_17537(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_17540)
static void C_ccall f_17540(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_17547)
static void C_ccall f_17547(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_17057)
static void C_ccall f_17057(C_word c,C_word t0,C_word t1,C_word t2,...) C_noret;
C_noret_decl(f_17057)
static void C_ccall f_17057r(C_word t0,C_word t1,C_word t2,C_word t4) C_noret;
C_noret_decl(f_17061)
static void C_fcall f_17061(C_word t0,C_word t1) C_noret;
C_noret_decl(f_17497)
static void C_ccall f_17497(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_17512)
static void C_ccall f_17512(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_17504)
static void C_ccall f_17504(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_17468)
static void C_ccall f_17468(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_17472)
static void C_ccall f_17472(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_17433)
static void C_ccall f_17433(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_17437)
static void C_ccall f_17437(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_17398)
static void C_ccall f_17398(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_17402)
static void C_ccall f_17402(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_17064)
static void C_fcall f_17064(C_word t0,C_word t1) C_noret;
C_noret_decl(f_17362)
static void C_ccall f_17362(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_17377)
static void C_ccall f_17377(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_17369)
static void C_ccall f_17369(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_17333)
static void C_ccall f_17333(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_17337)
static void C_ccall f_17337(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_17298)
static void C_ccall f_17298(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_17302)
static void C_ccall f_17302(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_17263)
static void C_ccall f_17263(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_17267)
static void C_ccall f_17267(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_17067)
static void C_fcall f_17067(C_word t0,C_word t1) C_noret;
C_noret_decl(f_17227)
static void C_ccall f_17227(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_17242)
static void C_ccall f_17242(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_17234)
static void C_ccall f_17234(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_17198)
static void C_ccall f_17198(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_17202)
static void C_ccall f_17202(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_17163)
static void C_ccall f_17163(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_17167)
static void C_ccall f_17167(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_17128)
static void C_ccall f_17128(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_17132)
static void C_ccall f_17132(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_17070)
static void C_fcall f_17070(C_word t0,C_word t1) C_noret;
C_noret_decl(f_17073)
static void C_ccall f_17073(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_17076)
static void C_ccall f_17076(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_17099)
static void C_ccall f_17099(C_word c,C_word t0,C_word t1,C_word t2,C_word t3) C_noret;
C_noret_decl(f_17107)
static void C_ccall f_17107(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_17082)
static void C_ccall f_17082(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_17085)
static void C_ccall f_17085(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_16977)
static void C_fcall f_16977(C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_16968)
static void C_fcall f_16968(C_word t0,C_word t1) C_noret;
C_noret_decl(f_16896)
static void C_ccall f_16896(C_word c,C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_16900)
static void C_ccall f_16900(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_16903)
static void C_fcall f_16903(C_word t0,C_word t1) C_noret;
C_noret_decl(f_16641)
static void C_ccall f_16641(C_word c,C_word t0,C_word t1,C_word t2,...) C_noret;
C_noret_decl(f_16641)
static void C_ccall f_16641r(C_word t0,C_word t1,C_word t2,C_word t4) C_noret;
C_noret_decl(f_16645)
static void C_fcall f_16645(C_word t0,C_word t1) C_noret;
C_noret_decl(f_16866)
static void C_ccall f_16866(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_16881)
static void C_ccall f_16881(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_16873)
static void C_ccall f_16873(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_16837)
static void C_ccall f_16837(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_16841)
static void C_ccall f_16841(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_16802)
static void C_ccall f_16802(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_16806)
static void C_ccall f_16806(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_16648)
static void C_fcall f_16648(C_word t0,C_word t1) C_noret;
C_noret_decl(f_16766)
static void C_ccall f_16766(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_16781)
static void C_ccall f_16781(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_16773)
static void C_ccall f_16773(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_16737)
static void C_ccall f_16737(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_16741)
static void C_ccall f_16741(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_16702)
static void C_ccall f_16702(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_16706)
static void C_ccall f_16706(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_16651)
static void C_fcall f_16651(C_word t0,C_word t1) C_noret;
C_noret_decl(f_16654)
static void C_ccall f_16654(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_16657)
static void C_ccall f_16657(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_16669)
static void C_ccall f_16669(C_word c,C_word t0,C_word t1,C_word t2,C_word t3) C_noret;
C_noret_decl(f_16681)
static void C_ccall f_16681(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_16663)
static void C_ccall f_16663(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_16526)
static void C_fcall f_16526(C_word t0,C_word t1) C_noret;
C_noret_decl(f_16639)
static void C_ccall f_16639(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_16536)
static void C_ccall f_16536(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_16624)
static void C_ccall f_16624(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_16635)
static void C_ccall f_16635(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_16631)
static void C_ccall f_16631(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_16539)
static void C_ccall f_16539(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_16621)
static void C_ccall f_16621(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_16547)
static void C_ccall f_16547(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_16611)
static void C_ccall f_16611(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_16556)
static void C_ccall f_16556(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_16575)
static void C_ccall f_16575(C_word c,C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_16604)
static void C_ccall f_16604(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_16585)
static void C_ccall f_16585(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_16600)
static void C_ccall f_16600(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_16588)
static void C_ccall f_16588(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_16559)
static void C_ccall f_16559(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_16569)
static void C_ccall f_16569(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_16550)
static void C_fcall f_16550(C_word t0,C_word t1) C_noret;
C_noret_decl(f_16553)
static void C_ccall f_16553(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_16480)
static void C_fcall f_16480(C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_16471)
static void C_fcall f_16471(C_word t0,C_word t1) C_noret;
C_noret_decl(f_16170)
static void C_fcall f_16170(C_word t0,C_word t1) C_noret;
C_noret_decl(f_16177)
static void C_ccall f_16177(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_16466)
static void C_ccall f_16466(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_16180)
static void C_ccall f_16180(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_16451)
static void C_ccall f_16451(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_16443)
static void C_ccall f_16443(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_16435)
static void C_ccall f_16435(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_16438)
static void C_ccall f_16438(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_16406)
static void C_fcall f_16406(C_word t0,C_word t1) C_noret;
C_noret_decl(f_16429)
static void C_ccall f_16429(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_16412)
static void C_fcall f_16412(C_word t0,C_word t1) C_noret;
C_noret_decl(f_16416)
static void C_ccall f_16416(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_16183)
static void C_ccall f_16183(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_16189)
static void C_ccall f_16189(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_16281)
static void C_ccall f_16281(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_16393)
static void C_ccall f_16393(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_16400)
static void C_ccall f_16400(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_16304)
static void C_fcall f_16304(C_word t0,C_word t1) C_noret;
C_noret_decl(f_16306)
static void C_fcall f_16306(C_word t0,C_word t1,C_word t2,C_word t3) C_noret;
C_noret_decl(f_16355)
static void C_fcall f_16355(C_word t0,C_word t1) C_noret;
C_noret_decl(f_16390)
static void C_ccall f_16390(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_16379)
static void C_ccall f_16379(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_16524)
static void C_ccall f_16524(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_16499)
static void C_ccall f_16499(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_16520)
static void C_ccall f_16520(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_16516)
static void C_ccall f_16516(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_16508)
static void C_ccall f_16508(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_16372)
static void C_ccall f_16372(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_16365)
static void C_ccall f_16365(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_16313)
static void C_ccall f_16313(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_16353)
static void C_ccall f_16353(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_16317)
static void C_ccall f_16317(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_16349)
static void C_ccall f_16349(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_16336)
static void C_ccall f_16336(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_16344)
static void C_ccall f_16344(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_16340)
static void C_ccall f_16340(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_16320)
static void C_fcall f_16320(C_word t0,C_word t1) C_noret;
C_noret_decl(f_16323)
static void C_ccall f_16323(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_16297)
static void C_ccall f_16297(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_16284)
static void C_ccall f_16284(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_16293)
static void C_ccall f_16293(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_16288)
static void C_ccall f_16288(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_16195)
static void C_ccall f_16195(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_16275)
static void C_ccall f_16275(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_16255)
static void C_ccall f_16255(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_16261)
static void C_ccall f_16261(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_16272)
static void C_ccall f_16272(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_16252)
static void C_ccall f_16252(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_16240)
static void C_ccall f_16240(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_16243)
static void C_ccall f_16243(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_16198)
static void C_ccall f_16198(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_16234)
static void C_ccall f_16234(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_16229)
static void C_ccall f_16229(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_16201)
static void C_ccall f_16201(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_16214)
static void C_ccall f_16214(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_16204)
static void C_fcall f_16204(C_word t0,C_word t1) C_noret;
C_noret_decl(f_16207)
static void C_ccall f_16207(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_16210)
static void C_ccall f_16210(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_16047)
static void C_ccall f_16047(C_word c,C_word t0,C_word t1,C_word t2,...) C_noret;
C_noret_decl(f_16047)
static void C_ccall f_16047r(C_word t0,C_word t1,C_word t2,C_word t4) C_noret;
C_noret_decl(f_16106)
static void C_ccall f_16106(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_16116)
static void C_ccall f_16116(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_16118)
static void C_fcall f_16118(C_word t0,C_word t1,C_word t2,C_word t3,C_word t4) C_noret;
C_noret_decl(f_16147)
static void C_ccall f_16147(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_16152)
static void C_ccall f_16152(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_16137)
static void C_fcall f_16137(C_word t0,C_word t1) C_noret;
C_noret_decl(f_16068)
static void C_fcall f_16068(C_word t0,C_word t1,C_word t2,C_word t3) C_noret;
C_noret_decl(f_16100)
static void C_ccall f_16100(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_16028)
static void C_ccall f_16028(C_word c,C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_16035)
static void C_ccall f_16035(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_16042)
static void C_ccall f_16042(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_16009)
static void C_ccall f_16009(C_word c,C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_16016)
static void C_ccall f_16016(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_16023)
static void C_ccall f_16023(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_15829)
static void C_fcall f_15829(C_word t0,C_word t1,C_word t2,C_word t3,C_word t4,C_word t5,C_word t6,C_word t7,C_word t8,C_word t9) C_noret;
C_noret_decl(f_15833)
static void C_ccall f_15833(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_15836)
static void C_ccall f_15836(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_15839)
static void C_ccall f_15839(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_15842)
static void C_ccall f_15842(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_15999)
static void C_ccall f_15999(C_word c,C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_16006)
static void C_ccall f_16006(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_15845)
static void C_ccall f_15845(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_15848)
static void C_fcall f_15848(C_word t0,C_word t1) C_noret;
C_noret_decl(f_15854)
static void C_ccall f_15854(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_15860)
static void C_ccall f_15860(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_15923)
static void C_ccall f_15923(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_15937)
static void C_ccall f_15937(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_15863)
static void C_fcall f_15863(C_word t0,C_word t1) C_noret;
C_noret_decl(f_15866)
static void C_ccall f_15866(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_15872)
static void C_fcall f_15872(C_word t0,C_word t1) C_noret;
C_noret_decl(f_15885)
static void C_ccall f_15885(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_15875)
static void C_ccall f_15875(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_15878)
static void C_ccall f_15878(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_15819)
static void C_fcall f_15819(C_word t0) C_noret;
C_noret_decl(f_15764)
static void C_fcall f_15764(C_word t0,C_word t1) C_noret;
C_noret_decl(f_15755)
static void C_fcall f_15755(C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_15638)
static void C_fcall f_15638(C_word t0,C_word t1) C_noret;
C_noret_decl(f_15629)
static void C_fcall f_15629(C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_15620)
static void C_ccall f_15620(C_word c,C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_15611)
static void C_fcall f_15611(C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_15602)
static void C_fcall f_15602(C_word t0,C_word t1) C_noret;
C_noret_decl(f_15584)
static void C_fcall f_15584(C_word t0,C_word t1) C_noret;
C_noret_decl(f_15575)
static void C_fcall f_15575(C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_15566)
static void C_fcall f_15566(C_word t0,C_word t1) C_noret;
C_noret_decl(f_15548)
static void C_fcall f_15548(C_word t0,C_word t1) C_noret;
C_noret_decl(f_15539)
static void C_fcall f_15539(C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_15530)
static void C_fcall f_15530(C_word t0,C_word t1) C_noret;
C_noret_decl(f_15515)
static void C_fcall f_15515(C_word t0,C_word t1) C_noret;
C_noret_decl(f_15470)
static void C_fcall f_15470(C_word t0,C_word t1) C_noret;
C_noret_decl(f_15452)
static void C_fcall f_15452(C_word t0,C_word t1) C_noret;
C_noret_decl(f_15443)
static void C_fcall f_15443(C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_15416)
static void C_fcall f_15416(C_word t0,C_word t1) C_noret;
C_noret_decl(f_15398)
static void C_fcall f_15398(C_word t0,C_word t1) C_noret;
C_noret_decl(f_15380)
static void C_fcall f_15380(C_word t0,C_word t1) C_noret;
C_noret_decl(f_15371)
static void C_fcall f_15371(C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_15359)
static void C_fcall f_15359(C_word t0,C_word t1,C_word t2,C_word t3,C_word t4,C_word t5,C_word t6) C_noret;
C_noret_decl(f_15163)
static void C_ccall f_15163(C_word c,C_word t0,C_word t1,C_word t2,C_word t3) C_noret;
C_noret_decl(f_15167)
static void C_fcall f_15167(C_word t0,C_word t1) C_noret;
C_noret_decl(f_15316)
static void C_fcall f_15316(C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_15342)
static void C_ccall f_15342(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_15327)
static void C_ccall f_15327(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_15173)
static void C_ccall f_15173(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_15178)
static void C_ccall f_15178(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_15182)
static void C_ccall f_15182(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_15185)
static void C_ccall f_15185(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_15188)
static void C_ccall f_15188(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_15191)
static void C_ccall f_15191(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_15194)
static void C_ccall f_15194(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_15197)
static void C_ccall f_15197(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_15202)
static void C_fcall f_15202(C_word t0,C_word t1,C_word t2,C_word t3) C_noret;
C_noret_decl(f_15296)
static void C_ccall f_15296(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_15303)
static void C_ccall f_15303(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_15212)
static void C_ccall f_15212(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_15233)
static void C_ccall f_15233(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_15237)
static void C_ccall f_15237(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_15241)
static void C_ccall f_15241(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_15243)
static void C_fcall f_15243(C_word t0,C_word t1,C_word t2,C_word t3,C_word t4) C_noret;
C_noret_decl(f_15253)
static void C_ccall f_15253(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_15215)
static void C_ccall f_15215(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_15218)
static void C_ccall f_15218(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_15037)
static void C_ccall f_15037(C_word c,C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_15043)
static void C_ccall f_15043(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_15047)
static void C_ccall f_15047(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_15065)
static void C_ccall f_15065(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_15068)
static void C_ccall f_15068(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_15072)
static void C_ccall f_15072(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_15075)
static void C_ccall f_15075(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_15127)
static void C_fcall f_15127(C_word t0,C_word t1) C_noret;
C_noret_decl(f_15138)
static void C_ccall f_15138(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_15078)
static void C_ccall f_15078(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_15088)
static void C_ccall f_15088(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_15090)
static void C_fcall f_15090(C_word t0,C_word t1,C_word t2,C_word t3) C_noret;
C_noret_decl(f_14934)
static void C_ccall f_14934(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_14958)
static void C_ccall f_14958(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_14962)
static void C_ccall f_14962(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_14988)
static void C_fcall f_14988(C_word t0,C_word t1,C_word t2,C_word t3,C_word t4) C_noret;
C_noret_decl(f_14998)
static void C_ccall f_14998(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_15035)
static void C_ccall f_15035(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_15027)
static void C_ccall f_15027(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_14965)
static void C_ccall f_14965(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_14935)
static void C_fcall f_14935(C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_14939)
static void C_ccall f_14939(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_14942)
static void C_ccall f_14942(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_15104)
static void C_ccall f_15104(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_15107)
static void C_fcall f_15107(C_word t0,C_word t1) C_noret;
C_noret_decl(f_15114)
static void C_ccall f_15114(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_15048)
static void C_fcall f_15048(C_word t0,C_word t1) C_noret;
C_noret_decl(f_15052)
static void C_ccall f_15052(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_15055)
static void C_ccall f_15055(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_14524)
static void C_ccall f_14524(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,...) C_noret;
C_noret_decl(f_14524)
static void C_ccall f_14524r(C_word t0,C_word t1,C_word t2,C_word t3,C_word t5) C_noret;
C_noret_decl(f_14903)
static void C_fcall f_14903(C_word t0,C_word t1) C_noret;
C_noret_decl(f_14897)
static void C_ccall f_14897(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_14528)
static void C_ccall f_14528(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_14881)
static void C_ccall f_14881(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_14531)
static void C_ccall f_14531(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_14867)
static void C_ccall f_14867(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_14863)
static void C_ccall f_14863(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_14534)
static void C_fcall f_14534(C_word t0,C_word t1) C_noret;
C_noret_decl(f_14856)
static void C_ccall f_14856(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_14852)
static void C_ccall f_14852(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_14537)
static void C_fcall f_14537(C_word t0,C_word t1) C_noret;
C_noret_decl(f_14540)
static void C_fcall f_14540(C_word t0,C_word t1) C_noret;
C_noret_decl(f_14840)
static void C_ccall f_14840(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_14832)
static void C_ccall f_14832(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_14836)
static void C_ccall f_14836(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_14824)
static void C_ccall f_14824(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_14828)
static void C_ccall f_14828(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_14698)
static void C_fcall f_14698(C_word t0,C_word t1) C_noret;
C_noret_decl(f_14813)
static void C_ccall f_14813(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_14817)
static void C_ccall f_14817(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_14805)
static void C_ccall f_14805(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_14809)
static void C_ccall f_14809(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_14701)
static void C_fcall f_14701(C_word t0,C_word t1) C_noret;
C_noret_decl(f_14705)
static void C_ccall f_14705(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_14710)
static void C_fcall f_14710(C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_14720)
static void C_fcall f_14720(C_word t0,C_word t1) C_noret;
C_noret_decl(f_14723)
static void C_ccall f_14723(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_14604)
static void C_ccall f_14604(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_14667)
static void C_fcall f_14667(C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_14688)
static void C_ccall f_14688(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_14629)
static void C_fcall f_14629(C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_14658)
static void C_ccall f_14658(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_14607)
static void C_ccall f_14607(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_14624)
static void C_ccall f_14624(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_14620)
static void C_ccall f_14620(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_14070)
static void C_ccall f_14070(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_14074)
static void C_ccall f_14074(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_14062)
static void C_ccall f_14062(C_word c,C_word t0,C_word t1,C_word t2,C_word t3) C_noret;
C_noret_decl(f_13987)
static void C_ccall f_13987(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_14048)
static void C_ccall f_14048(C_word c,C_word t0,C_word t1,C_word t2,C_word t3) C_noret;
C_noret_decl(f_13991)
static void C_ccall f_13991(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_13999)
static void C_fcall f_13999(C_word t0,C_word t1,C_word t2,C_word t3) C_noret;
C_noret_decl(f_14032)
static void C_ccall f_14032(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_14009)
static void C_ccall f_14009(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_14012)
static void C_ccall f_14012(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_14584)
static void C_fcall f_14584(C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_14554)
static void C_fcall f_14554(C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_14543)
static void C_ccall f_14543(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_14467)
static void C_ccall f_14467(C_word c,C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_14475)
static void C_ccall f_14475(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_14479)
static void C_ccall f_14479(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_14483)
static void C_ccall f_14483(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_14489)
static void C_fcall f_14489(C_word t0,C_word t1,C_word t2,C_word t3,C_word t4,C_word t5) C_noret;
C_noret_decl(f_14499)
static void C_ccall f_14499(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_14255)
static void C_ccall f_14255(C_word c,C_word t0,C_word t1,C_word t2,C_word t3) C_noret;
C_noret_decl(f_14323)
static void C_ccall f_14323(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_14326)
static void C_ccall f_14326(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_14329)
static void C_ccall f_14329(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_14332)
static void C_ccall f_14332(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_14335)
static void C_ccall f_14335(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_14433)
static void C_fcall f_14433(C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_14443)
static void C_ccall f_14443(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_14401)
static void C_fcall f_14401(C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_14411)
static void C_ccall f_14411(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_14352)
static void C_fcall f_14352(C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_14371)
static void C_fcall f_14371(C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_14381)
static void C_ccall f_14381(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_14362)
static void C_ccall f_14362(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_14338)
static void C_ccall f_14338(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_14291)
static void C_fcall f_14291(C_word t0,C_word t1,C_word t2,C_word t3) C_noret;
C_noret_decl(f_14301)
static void C_ccall f_14301(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_14274)
static void C_fcall f_14274(C_word t0,C_word t1) C_noret;
C_noret_decl(f_14281)
static void C_ccall f_14281(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_14257)
static void C_fcall f_14257(C_word t0,C_word t1) C_noret;
C_noret_decl(f_14264)
static void C_ccall f_14264(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_14076)
static void C_ccall f_14076(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4) C_noret;
C_noret_decl(f_14084)
static void C_ccall f_14084(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_14088)
static void C_ccall f_14088(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_14090)
static void C_fcall f_14090(C_word t0,C_word t1,C_word t2,C_word t3,C_word t4,C_word t5) C_noret;
C_noret_decl(f_14100)
static void C_fcall f_14100(C_word t0,C_word t1) C_noret;
C_noret_decl(f_14231)
static void C_ccall f_14231(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_14180)
static void C_ccall f_14180(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_14183)
static void C_ccall f_14183(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_14194)
static void C_ccall f_14194(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_14146)
static void C_ccall f_14146(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_14115)
static void C_ccall f_14115(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_14118)
static void C_ccall f_14118(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_14103)
static void C_ccall f_14103(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_13664)
static void C_ccall f_13664(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4) C_noret;
C_noret_decl(f_13981)
static void C_ccall f_13981(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_13910)
static void C_ccall f_13910(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_13912)
static void C_fcall f_13912(C_word t0,C_word t1,C_word t2,C_word t3,C_word t4) C_noret;
C_noret_decl(f_8457)
static void C_ccall f_8457(C_word c,C_word t0,C_word t1,C_word t2,C_word t3) C_noret;
C_noret_decl(f_13931)
static void C_ccall f_13931(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_13934)
static void C_fcall f_13934(C_word t0,C_word t1) C_noret;
C_noret_decl(f_13677)
static void C_ccall f_13677(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_13753)
static void C_fcall f_13753(C_word t0,C_word t1,C_word t2,C_word t3) C_noret;
C_noret_decl(f_13906)
static void C_ccall f_13906(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_13890)
static void C_ccall f_13890(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_13842)
static void C_fcall f_13842(C_word t0,C_word t1,C_word t2,C_word t3,C_word t4) C_noret;
C_noret_decl(f_13856)
static void C_fcall f_13856(C_word t0,C_word t1) C_noret;
C_noret_decl(f_13809)
static void C_ccall f_13809(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_13784)
static void C_fcall f_13784(C_word t0,C_word t1) C_noret;
C_noret_decl(f_13680)
static void C_ccall f_13680(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_13688)
static void C_fcall f_13688(C_word t0,C_word t1,C_word t2,C_word t3,C_word t4) C_noret;
C_noret_decl(f_13721)
static void C_ccall f_13721(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_12191)
static void C_ccall f_12191(C_word c,C_word t0,C_word t1,C_word t2,...) C_noret;
C_noret_decl(f_12191)
static void C_ccall f_12191r(C_word t0,C_word t1,C_word t2,C_word t4) C_noret;
C_noret_decl(f_13641)
static void C_ccall f_13641(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_13656)
static void C_ccall f_13656(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_13648)
static void C_ccall f_13648(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_13612)
static void C_ccall f_13612(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_13616)
static void C_ccall f_13616(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_13577)
static void C_ccall f_13577(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_13581)
static void C_ccall f_13581(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_13542)
static void C_ccall f_13542(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_13546)
static void C_ccall f_13546(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_13507)
static void C_ccall f_13507(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_13511)
static void C_ccall f_13511(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_13472)
static void C_ccall f_13472(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_13476)
static void C_ccall f_13476(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_13437)
static void C_ccall f_13437(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_13441)
static void C_ccall f_13441(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_12195)
static void C_fcall f_12195(C_word t0,C_word t1) C_noret;
C_noret_decl(f_13401)
static void C_ccall f_13401(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_13416)
static void C_ccall f_13416(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_13408)
static void C_ccall f_13408(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_13372)
static void C_ccall f_13372(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_13376)
static void C_ccall f_13376(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_13337)
static void C_ccall f_13337(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_13341)
static void C_ccall f_13341(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_13302)
static void C_ccall f_13302(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_13306)
static void C_ccall f_13306(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_13267)
static void C_ccall f_13267(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_13271)
static void C_ccall f_13271(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_13232)
static void C_ccall f_13232(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_13236)
static void C_ccall f_13236(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_13197)
static void C_ccall f_13197(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_13201)
static void C_ccall f_13201(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_12198)
static void C_fcall f_12198(C_word t0,C_word t1) C_noret;
C_noret_decl(f_13161)
static void C_ccall f_13161(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_13176)
static void C_ccall f_13176(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_13168)
static void C_ccall f_13168(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_13132)
static void C_ccall f_13132(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_13136)
static void C_ccall f_13136(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_13097)
static void C_ccall f_13097(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_13101)
static void C_ccall f_13101(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_13062)
static void C_ccall f_13062(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_13066)
static void C_ccall f_13066(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_13027)
static void C_ccall f_13027(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_13031)
static void C_ccall f_13031(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_12992)
static void C_ccall f_12992(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_12996)
static void C_ccall f_12996(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_12957)
static void C_ccall f_12957(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_12961)
static void C_ccall f_12961(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_12201)
static void C_fcall f_12201(C_word t0,C_word t1) C_noret;
C_noret_decl(f_12921)
static void C_ccall f_12921(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_12936)
static void C_ccall f_12936(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_12928)
static void C_ccall f_12928(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_12892)
static void C_ccall f_12892(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_12896)
static void C_ccall f_12896(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_12857)
static void C_ccall f_12857(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_12861)
static void C_ccall f_12861(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_12822)
static void C_ccall f_12822(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_12826)
static void C_ccall f_12826(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_12787)
static void C_ccall f_12787(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_12791)
static void C_ccall f_12791(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_12752)
static void C_ccall f_12752(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_12756)
static void C_ccall f_12756(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_12717)
static void C_ccall f_12717(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_12721)
static void C_ccall f_12721(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_12204)
static void C_fcall f_12204(C_word t0,C_word t1) C_noret;
C_noret_decl(f_12681)
static void C_ccall f_12681(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_12696)
static void C_ccall f_12696(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_12688)
static void C_ccall f_12688(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_12652)
static void C_ccall f_12652(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_12656)
static void C_ccall f_12656(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_12617)
static void C_ccall f_12617(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_12621)
static void C_ccall f_12621(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_12582)
static void C_ccall f_12582(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_12586)
static void C_ccall f_12586(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_12547)
static void C_ccall f_12547(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_12551)
static void C_ccall f_12551(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_12512)
static void C_ccall f_12512(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_12516)
static void C_ccall f_12516(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_12477)
static void C_ccall f_12477(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_12481)
static void C_ccall f_12481(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_12207)
static void C_fcall f_12207(C_word t0,C_word t1) C_noret;
C_noret_decl(f_12441)
static void C_ccall f_12441(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_12456)
static void C_ccall f_12456(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_12448)
static void C_ccall f_12448(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_12412)
static void C_ccall f_12412(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_12416)
static void C_ccall f_12416(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_12377)
static void C_ccall f_12377(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_12381)
static void C_ccall f_12381(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_12342)
static void C_ccall f_12342(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_12346)
static void C_ccall f_12346(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_12307)
static void C_ccall f_12307(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_12311)
static void C_ccall f_12311(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_12272)
static void C_ccall f_12272(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_12276)
static void C_ccall f_12276(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_12237)
static void C_ccall f_12237(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_12241)
static void C_ccall f_12241(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_12210)
static void C_fcall f_12210(C_word t0,C_word t1) C_noret;
C_noret_decl(f_12213)
static void C_ccall f_12213(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_11972)
static void C_fcall f_11972(C_word t0,C_word t1) C_noret;
C_noret_decl(f_11981)
static void C_ccall f_11981(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_11985)
static void C_ccall f_11985(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_12172)
static void C_ccall f_12172(C_word c,C_word t0,C_word t1,C_word t2,C_word t3) C_noret;
C_noret_decl(f_12157)
static void C_ccall f_12157(C_word c,C_word t0,C_word t1,C_word t2,C_word t3) C_noret;
C_noret_decl(f_12122)
static void C_ccall f_12122(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_12102)
static void C_ccall f_12102(C_word c,C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_12106)
static void C_ccall f_12106(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_12092)
static void C_ccall f_12092(C_word c,C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_12100)
static void C_ccall f_12100(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_12059)
static void C_ccall f_12059(C_word c,C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_11987)
static void C_ccall f_11987(C_word c,C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_12054)
static void C_ccall f_12054(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_11991)
static void C_ccall f_11991(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_12027)
static void C_fcall f_12027(C_word t0,C_word t1) C_noret;
C_noret_decl(f_12002)
static void C_fcall f_12002(C_word t0,C_word t1) C_noret;
C_noret_decl(f_11943)
static void C_ccall f_11943(C_word c,C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_11947)
static void C_ccall f_11947(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_11958)
static void C_ccall f_11958(C_word c,C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_11956)
static void C_ccall f_11956(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_11912)
static void C_ccall f_11912(C_word c,C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_11916)
static void C_ccall f_11916(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_11927)
static void C_ccall f_11927(C_word c,C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_11925)
static void C_ccall f_11925(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_11894)
static void C_ccall f_11894(C_word c,C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_11902)
static void C_ccall f_11902(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_11910)
static void C_ccall f_11910(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_11884)
static void C_ccall f_11884(C_word c,C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_11892)
static void C_ccall f_11892(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_11825)
static void C_ccall f_11825(C_word c,C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_11832)
static void C_ccall f_11832(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_11835)
static void C_ccall f_11835(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_11838)
static void C_ccall f_11838(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_11843)
static void C_fcall f_11843(C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_11787)
static void C_ccall f_11787(C_word c,C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_11795)
static void C_ccall f_11795(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_11799)
static void C_ccall f_11799(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_11819)
static void C_ccall f_11819(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_11803)
static void C_ccall f_11803(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_11811)
static void C_ccall f_11811(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_11807)
static void C_ccall f_11807(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_11775)
static void C_ccall f_11775(C_word c,C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_11766)
static void C_fcall f_11766(C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_11757)
static void C_ccall f_11757(C_word c,C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_11748)
static void C_fcall f_11748(C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_11739)
static void C_ccall f_11739(C_word c,C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_11730)
static void C_fcall f_11730(C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_11721)
static void C_ccall f_11721(C_word c,C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_11706)
static void C_fcall f_11706(C_word t0,C_word t1) C_noret;
C_noret_decl(f_11700)
static void C_fcall f_11700(C_word t0,C_word t1,C_word t2,C_word t3,C_word t4) C_noret;
C_noret_decl(f_11558)
static void C_ccall f_11558(C_word c,C_word t0,C_word t1,C_word t2,...) C_noret;
C_noret_decl(f_11558)
static void C_ccall f_11558r(C_word t0,C_word t1,C_word t2,C_word t4) C_noret;
C_noret_decl(f_11562)
static void C_fcall f_11562(C_word t0,C_word t1) C_noret;
C_noret_decl(f_11631)
static void C_ccall f_11631(C_word c,C_word t0,C_word t1,C_word t2,C_word t3) C_noret;
C_noret_decl(f_11674)
static void C_ccall f_11674(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_11678)
static void C_ccall f_11678(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_11667)
static void C_ccall f_11667(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_11654)
static void C_ccall f_11654(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_11573)
static void C_ccall f_11573(C_word c,C_word t0,C_word t1,C_word t2,C_word t3) C_noret;
C_noret_decl(f_11616)
static void C_ccall f_11616(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_11620)
static void C_ccall f_11620(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_11609)
static void C_ccall f_11609(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_11596)
static void C_ccall f_11596(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_11392)
static void C_ccall f_11392(C_word c,C_word t0,C_word t1,C_word t2,C_word t3) C_noret;
C_noret_decl(f_11493)
static void C_ccall f_11493(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_11542)
static void C_ccall f_11542(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_11538)
static void C_ccall f_11538(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_11510)
static void C_ccall f_11510(C_word c,C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_11445)
static void C_fcall f_11445(C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_11454)
static void C_fcall f_11454(C_word t0,C_word t1,C_word t2,C_word t3) C_noret;
C_noret_decl(f_11438)
static void C_ccall f_11438(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_11257)
static void C_ccall f_11257(C_word c,C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_11383)
static void C_ccall f_11383(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_11379)
static void C_ccall f_11379(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_11357)
static void C_ccall f_11357(C_word c,C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_11287)
static void C_fcall f_11287(C_word t0,C_word t1) C_noret;
C_noret_decl(f_11303)
static void C_fcall f_11303(C_word t0,C_word t1,C_word t2,C_word t3) C_noret;
C_noret_decl(f_11212)
static void C_ccall f_11212(C_word c,C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_11255)
static void C_ccall f_11255(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_11244)
static void C_ccall f_11244(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_11096)
static void C_ccall f_11096(C_word c,C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_11210)
static void C_ccall f_11210(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_11111)
static void C_fcall f_11111(C_word t0,C_word t1,C_word t2,C_word t3,C_word t4,C_word t5) C_noret;
C_noret_decl(f_11141)
static void C_fcall f_11141(C_word t0,C_word t1) C_noret;
C_noret_decl(f_11160)
static void C_ccall f_11160(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_11145)
static void C_ccall f_11145(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_11124)
static void C_fcall f_11124(C_word t0,C_word t1) C_noret;
C_noret_decl(f_10974)
static void C_ccall f_10974(C_word c,C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_11094)
static void C_ccall f_11094(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_10989)
static void C_fcall f_10989(C_word t0,C_word t1,C_word t2,C_word t3,C_word t4,C_word t5) C_noret;
C_noret_decl(f_11019)
static void C_fcall f_11019(C_word t0,C_word t1) C_noret;
C_noret_decl(f_11038)
static void C_ccall f_11038(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_11023)
static void C_ccall f_11023(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_11002)
static void C_fcall f_11002(C_word t0,C_word t1) C_noret;
C_noret_decl(f_10877)
static void C_ccall f_10877(C_word c,C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_10972)
static void C_ccall f_10972(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_10892)
static void C_fcall f_10892(C_word t0,C_word t1,C_word t2,C_word t3,C_word t4,C_word t5) C_noret;
C_noret_decl(f_10938)
static void C_ccall f_10938(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_10923)
static void C_ccall f_10923(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_10905)
static void C_fcall f_10905(C_word t0,C_word t1) C_noret;
C_noret_decl(f_10824)
static void C_fcall f_10824(C_word t0,C_word t1,C_word t2,C_word t3) C_noret;
C_noret_decl(f_10862)
static void C_ccall f_10862(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_10869)
static void C_ccall f_10869(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_10847)
static void C_ccall f_10847(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_10822)
static void C_ccall f_10822(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_10794)
static void C_fcall f_10794(C_word t0,C_word t1) C_noret;
C_noret_decl(f_10796)
static void C_ccall f_10796(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_10774)
static void C_ccall f_10774(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_10722)
static void C_fcall f_10722(C_word t0,C_word t1,C_word t2,C_word t3) C_noret;
C_noret_decl(f_10759)
static void C_ccall f_10759(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_10726)
static void C_ccall f_10726(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_10742)
static void C_ccall f_10742(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_10744)
static void C_ccall f_10744(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_10508)
static void C_ccall f_10508(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,...) C_noret;
C_noret_decl(f_10508)
static void C_ccall f_10508r(C_word t0,C_word t1,C_word t2,C_word t3,C_word t5) C_noret;
C_noret_decl(f_10521)
static void C_fcall f_10521(C_word t0,C_word t1) C_noret;
C_noret_decl(f_10603)
static void C_fcall f_10603(C_word t0,C_word t1) C_noret;
C_noret_decl(f_10606)
static void C_ccall f_10606(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_10614)
static void C_fcall f_10614(C_word t0,C_word t1,C_word t2,C_word t3) C_noret;
C_noret_decl(f_10626)
static void C_fcall f_10626(C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_10647)
static void C_ccall f_10647(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_10655)
static void C_ccall f_10655(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_10542)
static void C_ccall f_10542(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_10547)
static void C_fcall f_10547(C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_10579)
static void C_ccall f_10579(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_10487)
static void C_ccall f_10487(C_word c,C_word t0,C_word t1,...) C_noret;
C_noret_decl(f_10487)
static void C_ccall f_10487r(C_word t0,C_word t1,C_word t3) C_noret;
C_noret_decl(f_10468)
static void C_ccall f_10468(C_word c,C_word t0,C_word t1,...) C_noret;
C_noret_decl(f_10468)
static void C_ccall f_10468r(C_word t0,C_word t1,C_word t3) C_noret;
C_noret_decl(f_10427)
static void C_ccall f_10427(C_word c,C_word t0,C_word t1,...) C_noret;
C_noret_decl(f_10427)
static void C_ccall f_10427r(C_word t0,C_word t1,C_word t3) C_noret;
C_noret_decl(f_10408)
static void C_ccall f_10408(C_word c,C_word t0,C_word t1,...) C_noret;
C_noret_decl(f_10408)
static void C_ccall f_10408r(C_word t0,C_word t1,C_word t3) C_noret;
C_noret_decl(f_10180)
static void C_ccall f_10180(C_word c,C_word t0,C_word t1,...) C_noret;
C_noret_decl(f_10180)
static void C_ccall f_10180r(C_word t0,C_word t1,C_word t3) C_noret;
C_noret_decl(f_10385)
static void C_ccall f_10385(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_10400)
static void C_ccall f_10400(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_10392)
static void C_ccall f_10392(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_10356)
static void C_ccall f_10356(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_10360)
static void C_ccall f_10360(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_10321)
static void C_ccall f_10321(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_10325)
static void C_ccall f_10325(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_10184)
static void C_fcall f_10184(C_word t0,C_word t1) C_noret;
C_noret_decl(f_10285)
static void C_ccall f_10285(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_10300)
static void C_ccall f_10300(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_10292)
static void C_ccall f_10292(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_10256)
static void C_ccall f_10256(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_10260)
static void C_ccall f_10260(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_10221)
static void C_ccall f_10221(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_10225)
static void C_ccall f_10225(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_10187)
static void C_fcall f_10187(C_word t0,C_word t1) C_noret;
C_noret_decl(f_10190)
static void C_ccall f_10190(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_10193)
static void C_fcall f_10193(C_word t0,C_word t1) C_noret;
C_noret_decl(f_10138)
static void C_ccall f_10138(C_word c,C_word t0,C_word t1,...) C_noret;
C_noret_decl(f_10138)
static void C_ccall f_10138r(C_word t0,C_word t1,C_word t3) C_noret;
C_noret_decl(f_10167)
static void C_ccall f_10167(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_10152)
static void C_ccall f_10152(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_10083)
static void C_ccall f_10083(C_word c,C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_10094)
static void C_ccall f_10094(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_10096)
static void C_fcall f_10096(C_word t0,C_word t1,C_word t2,C_word t3,C_word t4) C_noret;
C_noret_decl(f_10124)
static void C_ccall f_10124(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_9984)
static void C_ccall f_9984(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,...) C_noret;
C_noret_decl(f_9984)
static void C_ccall f_9984r(C_word t0,C_word t1,C_word t2,C_word t3,C_word t5) C_noret;
C_noret_decl(f_9988)
static void C_fcall f_9988(C_word t0,C_word t1) C_noret;
C_noret_decl(f_9991)
static void C_ccall f_9991(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_10056)
static void C_ccall f_10056(C_word c,C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_9993)
static void C_fcall f_9993(C_word t0,C_word t1,C_word t2,C_word t3) C_noret;
C_noret_decl(f_10009)
static void C_ccall f_10009(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_9756)
static void C_ccall f_9756(C_word c,C_word t0,C_word t1,C_word t2,...) C_noret;
C_noret_decl(f_9756)
static void C_ccall f_9756r(C_word t0,C_word t1,C_word t2,C_word t4) C_noret;
C_noret_decl(f_9961)
static void C_ccall f_9961(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_9976)
static void C_ccall f_9976(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_9968)
static void C_ccall f_9968(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_9932)
static void C_ccall f_9932(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_9936)
static void C_ccall f_9936(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_9897)
static void C_ccall f_9897(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_9901)
static void C_ccall f_9901(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_9760)
static void C_fcall f_9760(C_word t0,C_word t1) C_noret;
C_noret_decl(f_9861)
static void C_ccall f_9861(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_9876)
static void C_ccall f_9876(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_9868)
static void C_ccall f_9868(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_9832)
static void C_ccall f_9832(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_9836)
static void C_ccall f_9836(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_9797)
static void C_ccall f_9797(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_9801)
static void C_ccall f_9801(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_9763)
static void C_fcall f_9763(C_word t0,C_word t1) C_noret;
C_noret_decl(f_9766)
static void C_ccall f_9766(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_9776)
static void C_ccall f_9776(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_9713)
static void C_ccall f_9713(C_word c,C_word t0,C_word t1,...) C_noret;
C_noret_decl(f_9713)
static void C_ccall f_9713r(C_word t0,C_word t1,C_word t3) C_noret;
C_noret_decl(f_9746)
static void C_ccall f_9746(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_9731)
static void C_ccall f_9731(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_9692)
static void C_ccall f_9692(C_word c,C_word t0,C_word t1,C_word t2,C_word t3) C_noret;
C_noret_decl(f_9657)
static void C_ccall f_9657(C_word c,C_word t0,C_word t1,...) C_noret;
C_noret_decl(f_9657)
static void C_ccall f_9657r(C_word t0,C_word t1,C_word t3) C_noret;
C_noret_decl(f_9661)
static void C_fcall f_9661(C_word t0,C_word t1) C_noret;
C_noret_decl(f_9549)
static void C_ccall f_9549(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,...) C_noret;
C_noret_decl(f_9549)
static void C_ccall f_9549r(C_word t0,C_word t1,C_word t2,C_word t3,C_word t5) C_noret;
C_noret_decl(f_9636)
static void C_ccall f_9636(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_9556)
static void C_fcall f_9556(C_word t0,C_word t1) C_noret;
C_noret_decl(f_9565)
static void C_fcall f_9565(C_word t0,C_word t1,C_word t2,C_word t3,C_word t4,C_word t5) C_noret;
C_noret_decl(f_9612)
static void C_ccall f_9612(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_9578)
static void C_fcall f_9578(C_word t0,C_word t1) C_noret;
C_noret_decl(f_9604)
static void C_ccall f_9604(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_9416)
static void C_ccall f_9416(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4,...) C_noret;
C_noret_decl(f_9416)
static void C_ccall f_9416r(C_word t0,C_word t1,C_word t2,C_word t3,C_word t4,C_word t6) C_noret;
C_noret_decl(f_9420)
static void C_fcall f_9420(C_word t0,C_word t1) C_noret;
C_noret_decl(f_9423)
static void C_fcall f_9423(C_word t0,C_word t1) C_noret;
C_noret_decl(f_9527)
static void C_ccall f_9527(C_word c,C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_9425)
static void C_fcall f_9425(C_word t0,C_word t1,C_word t2,C_word t3,C_word t4) C_noret;
C_noret_decl(f_9432)
static void C_ccall f_9432(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_9474)
static void C_ccall f_9474(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_9481)
static void C_ccall f_9481(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_9455)
static void C_ccall f_9455(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_9349)
static void C_ccall f_9349(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4,...) C_noret;
C_noret_decl(f_9349)
static void C_ccall f_9349r(C_word t0,C_word t1,C_word t2,C_word t3,C_word t4,C_word t6) C_noret;
C_noret_decl(f_9353)
static void C_fcall f_9353(C_word t0,C_word t1) C_noret;
C_noret_decl(f_9399)
static void C_ccall f_9399(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_9356)
static void C_fcall f_9356(C_word t0,C_word t1) C_noret;
C_noret_decl(f_9392)
static void C_ccall f_9392(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_9359)
static void C_fcall f_9359(C_word t0,C_word t1) C_noret;
C_noret_decl(f_9372)
static void C_ccall f_9372(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_9303)
static void C_ccall f_9303(C_word c,C_word t0,C_word t1,C_word t2,...) C_noret;
C_noret_decl(f_9303)
static void C_ccall f_9303r(C_word t0,C_word t1,C_word t2,C_word t4) C_noret;
C_noret_decl(f_9307)
static void C_ccall f_9307(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_9217)
static void C_fcall f_9217(C_word t0,C_word t1,C_word t2,C_word t3) C_noret;
C_noret_decl(f_9221)
static void C_ccall f_9221(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_9224)
static void C_ccall f_9224(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_9233)
static void C_fcall f_9233(C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_9255)
static void C_ccall f_9255(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_9202)
static void C_ccall f_9202(C_word c,C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_9187)
static void C_ccall f_9187(C_word c,C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_8951)
static void C_ccall f_8951(C_word c,C_word t0,C_word t1,C_word t2,...) C_noret;
C_noret_decl(f_8951)
static void C_ccall f_8951r(C_word t0,C_word t1,C_word t2,C_word t4) C_noret;
C_noret_decl(f_9164)
static void C_ccall f_9164(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_9179)
static void C_ccall f_9179(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_9171)
static void C_ccall f_9171(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_9135)
static void C_ccall f_9135(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_9139)
static void C_ccall f_9139(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_9100)
static void C_ccall f_9100(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_9104)
static void C_ccall f_9104(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_8955)
static void C_fcall f_8955(C_word t0,C_word t1) C_noret;
C_noret_decl(f_9064)
static void C_ccall f_9064(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_9079)
static void C_ccall f_9079(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_9071)
static void C_ccall f_9071(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_9035)
static void C_ccall f_9035(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_9039)
static void C_ccall f_9039(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_9000)
static void C_ccall f_9000(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_9004)
static void C_ccall f_9004(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_8958)
static void C_fcall f_8958(C_word t0,C_word t1) C_noret;
C_noret_decl(f_8961)
static void C_ccall f_8961(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_8972)
static void C_ccall f_8972(C_word c,C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_8911)
static void C_ccall f_8911(C_word c,C_word t0,C_word t1,C_word t2,C_word t3) C_noret;
C_noret_decl(f_8915)
static void C_ccall f_8915(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_8945)
static void C_ccall f_8945(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_8926)
static void C_ccall f_8926(C_word c,C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_8934)
static void C_ccall f_8934(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_8890)
static void C_ccall f_8890(C_word c,C_word t0,C_word t1,C_word t2,C_word t3) C_noret;
C_noret_decl(f_8902)
static void C_ccall f_8902(C_word c,C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_8847)
static void C_ccall f_8847(C_word c,C_word t0,C_word t1,C_word t2,...) C_noret;
C_noret_decl(f_8847)
static void C_ccall f_8847r(C_word t0,C_word t1,C_word t2,C_word t4) C_noret;
C_noret_decl(f_8877)
static void C_ccall f_8877(C_word c,C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_8804)
static void C_ccall f_8804(C_word c,C_word t0,C_word t1,C_word t2,...) C_noret;
C_noret_decl(f_8804)
static void C_ccall f_8804r(C_word t0,C_word t1,C_word t2,C_word t4) C_noret;
C_noret_decl(f_8834)
static void C_ccall f_8834(C_word c,C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_8735)
static void C_ccall f_8735(C_word c,C_word t0,C_word t1,...) C_noret;
C_noret_decl(f_8735)
static void C_ccall f_8735r(C_word t0,C_word t1,C_word t3) C_noret;
C_noret_decl(f_8779)
static void C_ccall f_8779(C_word c,C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_8666)
static void C_ccall f_8666(C_word c,C_word t0,C_word t1,...) C_noret;
C_noret_decl(f_8666)
static void C_ccall f_8666r(C_word t0,C_word t1,C_word t3) C_noret;
C_noret_decl(f_8710)
static void C_ccall f_8710(C_word c,C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_8642)
static void C_ccall f_8642(C_word c,C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_8654)
static void C_ccall f_8654(C_word c,C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_8627)
static void C_ccall f_8627(C_word c,C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_8516)
static void C_ccall f_8516(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4,C_word t5,...) C_noret;
C_noret_decl(f_8516)
static void C_ccall f_8516r(C_word t0,C_word t1,C_word t2,C_word t3,C_word t4,C_word t5,C_word t7) C_noret;
C_noret_decl(f_8591)
static void C_ccall f_8591(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_8520)
static void C_fcall f_8520(C_word t0,C_word t1) C_noret;
C_noret_decl(f_8560)
static void C_ccall f_8560(C_word c,C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_8549)
static void C_ccall f_8549(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_8534)
static void C_ccall f_8534(C_word c,C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_8542)
static void C_ccall f_8542(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_8482)
static void C_ccall f_8482(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4,C_word t5,C_word t6,...) C_noret;
C_noret_decl(f_8482)
static void C_ccall f_8482r(C_word t0,C_word t1,C_word t2,C_word t3,C_word t4,C_word t5,C_word t6,C_word t8) C_noret;
C_noret_decl(f_8494)
static void C_ccall f_8494(C_word c,C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_8475)
static void C_ccall f_8475(C_word c,C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_8468)
static void C_ccall f_8468(C_word c,C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_8449)
static void C_ccall f_8449(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_8446)
static void C_ccall f_8446(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_8439)
static void C_fcall f_8439(C_word t0,C_word t1) C_noret;
C_noret_decl(f_8436)
static void C_ccall f_8436(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_8429)
static void C_fcall f_8429(C_word t0,C_word t1) C_noret;
C_noret_decl(f_8411)
static void C_fcall f_8411(C_word t0,C_word t1) C_noret;
C_noret_decl(f_8400)
static void C_fcall f_8400(C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_8397)
static void C_ccall f_8397(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_8394)
static void C_ccall f_8394(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_8391)
static void C_ccall f_8391(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_8362)
static void C_fcall f_8362(C_word t0,C_word t1) C_noret;
C_noret_decl(f_8355)
static void C_fcall f_8355(C_word t0,C_word t1) C_noret;
C_noret_decl(f_8352)
static void C_ccall f_8352(C_word c,C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_8331)
static void C_fcall f_8331(C_word t0,C_word t1) C_noret;
C_noret_decl(f_8312)
static void C_ccall f_8312(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4,C_word t5) C_noret;
C_noret_decl(f_8293)
static void C_ccall f_8293(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4,C_word t5) C_noret;
C_noret_decl(f_8286)
static void C_ccall f_8286(C_word c,C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_8279)
static void C_ccall f_8279(C_word c,C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_8264)
static void C_fcall f_8264(C_word t0,C_word t1,C_word t2,C_word t3) C_noret;
C_noret_decl(f_8253)
static void C_fcall f_8253(C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_8246)
static void C_ccall f_8246(C_word c,C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_8219)
static void C_fcall f_8219(C_word t0,C_word t1,C_word t2,C_word t3,C_word t4,C_word t5,C_word t6) C_noret;
C_noret_decl(f_8192)
static void C_fcall f_8192(C_word t0,C_word t1,C_word t2,C_word t3,C_word t4,C_word t5,C_word t6) C_noret;
C_noret_decl(f_8151)
static void C_fcall f_8151(C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_8157)
static void C_fcall f_8157(C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_8167)
static void C_fcall f_8167(C_word t0,C_word t1) C_noret;
C_noret_decl(f_8065)
static void C_ccall f_8065(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,...) C_noret;
C_noret_decl(f_8065)
static void C_ccall f_8065r(C_word t0,C_word t1,C_word t2,C_word t3,C_word t5) C_noret;
C_noret_decl(f_8026)
static void C_ccall f_8026(C_word c,C_word t0,C_word t1,C_word t2,C_word t3) C_noret;
C_noret_decl(f_8032)
static void C_fcall f_8032(C_word t0,C_word t1,C_word t2,C_word t3) C_noret;
C_noret_decl(f_8055)
static void C_ccall f_8055(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_8045)
static void C_fcall f_8045(C_word t0,C_word t1) C_noret;
C_noret_decl(f_7987)
static void C_ccall f_7987(C_word c,C_word t0,C_word t1,C_word t2,C_word t3) C_noret;
C_noret_decl(f_7993)
static void C_fcall f_7993(C_word t0,C_word t1,C_word t2,C_word t3,C_word t4) C_noret;
C_noret_decl(f_8013)
static void C_ccall f_8013(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_8003)
static void C_fcall f_8003(C_word t0,C_word t1) C_noret;
C_noret_decl(f_7947)
static void C_ccall f_7947(C_word c,C_word t0,C_word t1,C_word t2,C_word t3) C_noret;
C_noret_decl(f_7953)
static void C_fcall f_7953(C_word t0,C_word t1,C_word t2,C_word t3,C_word t4) C_noret;
C_noret_decl(f_7977)
static void C_ccall f_7977(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_7963)
static void C_fcall f_7963(C_word t0,C_word t1) C_noret;
C_noret_decl(f_7848)
static void C_ccall f_7848(C_word c,C_word t0,C_word t1,C_word t2,...) C_noret;
C_noret_decl(f_7848)
static void C_ccall f_7848r(C_word t0,C_word t1,C_word t2,C_word t4) C_noret;
C_noret_decl(f_7852)
static void C_ccall f_7852(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_7877)
static void C_fcall f_7877(C_word t0,C_word t1,C_word t2,C_word t3) C_noret;
C_noret_decl(f_7894)
static void C_ccall f_7894(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_7898)
static void C_ccall f_7898(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_7854)
static void C_fcall f_7854(C_word t0,C_word t1,C_word t2,C_word t3) C_noret;
C_noret_decl(f_7871)
static void C_ccall f_7871(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_7787)
static void C_ccall f_7787(C_word c,C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_7800)
static void C_fcall f_7800(C_word t0,C_word t1,C_word t2,C_word t3,C_word t4) C_noret;
C_noret_decl(f_7777)
static void C_ccall f_7777(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4) C_noret;
C_noret_decl(f_7676)
static void C_ccall f_7676(C_word c,C_word t0,C_word t1,...) C_noret;
C_noret_decl(f_7676)
static void C_ccall f_7676r(C_word t0,C_word t1,C_word t3) C_noret;
C_noret_decl(f_7685)
static void C_fcall f_7685(C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_7723)
static void C_fcall f_7723(C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_7701)
static void C_ccall f_7701(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_7636)
static void C_ccall f_7636(C_word c,C_word t0,C_word t1,...) C_noret;
C_noret_decl(f_7636)
static void C_ccall f_7636r(C_word t0,C_word t1,C_word t3) C_noret;
C_noret_decl(f_7666)
static void C_ccall f_7666(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_7546)
static void C_ccall f_7546(C_word c,C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_7498)
static void C_ccall f_7498(C_word c,C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_7532)
static void C_ccall f_7532(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_7475)
static void C_ccall f_7475(C_word c,C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_7469)
static void C_ccall f_7469(C_word c,C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_7454)
static void C_ccall f_7454(C_word c,C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_7440)
static void C_ccall f_7440(C_word c,C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_7430)
static void C_ccall f_7430(C_word c,C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_7420)
static void C_ccall f_7420(C_word c,C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_7410)
static void C_ccall f_7410(C_word c,C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_7400)
static void C_ccall f_7400(C_word c,C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_7374)
static void C_ccall f_7374(C_word c,C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_7372)
static void C_ccall f_7372(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_7322)
static void C_ccall f_7322(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_7325)
static void C_ccall f_7325(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_7328)
static void C_ccall f_7328(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_7331)
static void C_ccall f_7331(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_7346)
static void C_fcall f_7346(C_word t0,C_word t1) C_noret;
C_noret_decl(f_7357)
static void C_ccall f_7357(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_7361)
static void C_ccall f_7361(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_7334)
static void C_ccall f_7334(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_7337)
static void C_ccall f_7337(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_7344)
static void C_ccall f_7344(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_7340)
static void C_ccall f_7340(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_7381)
static void C_ccall f_7381(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_7289)
static void C_ccall f_7289(C_word c,C_word t0,C_word t1,...) C_noret;
C_noret_decl(f_7289)
static void C_ccall f_7289r(C_word t0,C_word t1,C_word t3) C_noret;
C_noret_decl(f_7298)
static void C_ccall f_7298(C_word c,C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_7303)
static void C_ccall f_7303(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_7278)
static void C_ccall f_7278(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_7283)
static void C_ccall f_7283(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_6982)
static void C_ccall f_6982(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4) C_noret;
C_noret_decl(f_6992)
static void C_ccall f_6992(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_7243)
static void C_ccall f_7243(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_6995)
static void C_ccall f_6995(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_6998)
static void C_ccall f_6998(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_7013)
static void C_fcall f_7013(C_word t0,C_word t1) C_noret;
C_noret_decl(f_7023)
static void C_ccall f_7023(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_7025)
static void C_fcall f_7025(C_word t0,C_word t1,C_word t2,C_word t3,C_word t4,C_word t5) C_noret;
C_noret_decl(f_7084)
static void C_ccall f_7084(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_7094)
static void C_ccall f_7094(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_7211)
static void C_ccall f_7211(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_7199)
static void C_ccall f_7199(C_word c,C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_7197)
static void C_ccall f_7197(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_7184)
static void C_ccall f_7184(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_7138)
static void C_ccall f_7138(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_7165)
static void C_ccall f_7165(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_7144)
static void C_ccall f_7144(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_7078)
static void C_fcall f_7078(C_word t0,C_word t1) C_noret;
C_noret_decl(f_7037)
static void C_fcall f_7037(C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_7050)
static void C_fcall f_7050(C_word t0,C_word t1) C_noret;
C_noret_decl(f_7260)
static void C_ccall f_7260(C_word c,C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_7251)
static void C_ccall f_7251(C_word c,C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_7259)
static void C_ccall f_7259(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_7262)
static void C_ccall f_7262(C_word c,C_word t0,C_word t1,C_word t2,...) C_noret;
C_noret_decl(f_7262)
static void C_ccall f_7262r(C_word t0,C_word t1,C_word t2,C_word t4) C_noret;
C_noret_decl(f_7270)
static void C_ccall f_7270(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_6684)
static void C_ccall f_6684(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4) C_noret;
C_noret_decl(f_6937)
static void C_ccall f_6937(C_word c,C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_6970)
static void C_ccall f_6970(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_6966)
static void C_ccall f_6966(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_6955)
static void C_ccall f_6955(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_6951)
static void C_ccall f_6951(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_6845)
static void C_ccall f_6845(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_6848)
static void C_ccall f_6848(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_6851)
static void C_ccall f_6851(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_6931)
static void C_ccall f_6931(C_word c,C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_6756)
static void C_ccall f_6756(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_6697)
static void C_ccall f_6697(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_6854)
static void C_ccall f_6854(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_6861)
static void C_ccall f_6861(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_6921)
static void C_ccall f_6921(C_word c,C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_6907)
static void C_ccall f_6907(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_6873)
static void C_ccall f_6873(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_6899)
static void C_ccall f_6899(C_word c,C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_6834)
static void C_ccall f_6834(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_6881)
static void C_ccall f_6881(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_6877)
static void C_ccall f_6877(C_word c,C_word t0,C_word t1) C_noret;

C_noret_decl(trf_42145)
static void C_fcall trf_42145(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_42145(void *dummy){
C_word t2=C_pick(0);
C_word t1=C_pick(1);
C_word t0=C_pick(2);
C_adjust_stack(-3);
f_42145(t0,t1,t2);}

C_noret_decl(trf_42205)
static void C_fcall trf_42205(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_42205(void *dummy){
C_word t13=C_pick(0);
C_word t12=C_pick(1);
C_word t11=C_pick(2);
C_word t10=C_pick(3);
C_word t9=C_pick(4);
C_word t8=C_pick(5);
C_word t7=C_pick(6);
C_word t6=C_pick(7);
C_word t5=C_pick(8);
C_word t4=C_pick(9);
C_word t3=C_pick(10);
C_word t2=C_pick(11);
C_word t1=C_pick(12);
C_word t0=C_pick(13);
C_adjust_stack(-14);
f_42205(t0,t1,t2,t3,t4,t5,t6,t7,t8,t9,t10,t11,t12,t13);}

C_noret_decl(trf_42225)
static void C_fcall trf_42225(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_42225(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_42225(t0,t1);}

C_noret_decl(trf_42228)
static void C_fcall trf_42228(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_42228(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_42228(t0,t1);}

C_noret_decl(trf_42089)
static void C_fcall trf_42089(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_42089(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_42089(t0,t1);}

C_noret_decl(trf_42011)
static void C_fcall trf_42011(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_42011(void *dummy){
C_word t2=C_pick(0);
C_word t1=C_pick(1);
C_word t0=C_pick(2);
C_adjust_stack(-3);
f_42011(t0,t1,t2);}

C_noret_decl(trf_41823)
static void C_fcall trf_41823(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_41823(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_41823(t0,t1);}

C_noret_decl(trf_23638)
static void C_fcall trf_23638(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_23638(void *dummy){
C_word t2=C_pick(0);
C_word t1=C_pick(1);
C_word t0=C_pick(2);
C_adjust_stack(-3);
f_23638(t0,t1,t2);}

C_noret_decl(trf_23651)
static void C_fcall trf_23651(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_23651(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_23651(t0,t1);}

C_noret_decl(trf_40701)
static void C_fcall trf_40701(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_40701(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_40701(t0,t1);}

C_noret_decl(trf_40574)
static void C_fcall trf_40574(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_40574(void *dummy){
C_word t2=C_pick(0);
C_word t1=C_pick(1);
C_word t0=C_pick(2);
C_adjust_stack(-3);
f_40574(t0,t1,t2);}

C_noret_decl(trf_40258)
static void C_fcall trf_40258(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_40258(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_40258(t0,t1);}

C_noret_decl(trf_39353)
static void C_fcall trf_39353(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_39353(void *dummy){
C_word t2=C_pick(0);
C_word t1=C_pick(1);
C_word t0=C_pick(2);
C_adjust_stack(-3);
f_39353(t0,t1,t2);}

C_noret_decl(trf_39388)
static void C_fcall trf_39388(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_39388(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_39388(t0,t1);}

C_noret_decl(trf_39412)
static void C_fcall trf_39412(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_39412(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_39412(t0,t1);}

C_noret_decl(trf_39391)
static void C_fcall trf_39391(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_39391(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_39391(t0,t1);}

C_noret_decl(trf_39194)
static void C_fcall trf_39194(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_39194(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_39194(t0,t1);}

C_noret_decl(trf_38950)
static void C_fcall trf_38950(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_38950(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_38950(t0,t1);}

C_noret_decl(trf_38957)
static void C_fcall trf_38957(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_38957(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_38957(t0,t1);}

C_noret_decl(trf_38938)
static void C_fcall trf_38938(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_38938(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_38938(t0,t1);}

C_noret_decl(trf_25694)
static void C_fcall trf_25694(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_25694(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_25694(t0,t1);}

C_noret_decl(trf_25701)
static void C_fcall trf_25701(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_25701(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_25701(t0,t1);}

C_noret_decl(trf_26076)
static void C_fcall trf_26076(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_26076(void *dummy){
C_word t2=C_pick(0);
C_word t1=C_pick(1);
C_word t0=C_pick(2);
C_adjust_stack(-3);
f_26076(t0,t1,t2);}

C_noret_decl(trf_26099)
static void C_fcall trf_26099(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_26099(void *dummy){
C_word t2=C_pick(0);
C_word t1=C_pick(1);
C_word t0=C_pick(2);
C_adjust_stack(-3);
f_26099(t0,t1,t2);}

C_noret_decl(trf_26116)
static void C_fcall trf_26116(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_26116(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_26116(t0,t1);}

C_noret_decl(trf_26119)
static void C_fcall trf_26119(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_26119(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_26119(t0,t1);}

C_noret_decl(trf_26122)
static void C_fcall trf_26122(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_26122(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_26122(t0,t1);}

C_noret_decl(trf_26040)
static void C_fcall trf_26040(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_26040(void *dummy){
C_word t2=C_pick(0);
C_word t1=C_pick(1);
C_word t0=C_pick(2);
C_adjust_stack(-3);
f_26040(t0,t1,t2);}

C_noret_decl(trf_25968)
static void C_fcall trf_25968(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_25968(void *dummy){
C_word t2=C_pick(0);
C_word t1=C_pick(1);
C_word t0=C_pick(2);
C_adjust_stack(-3);
f_25968(t0,t1,t2);}

C_noret_decl(trf_25984)
static void C_fcall trf_25984(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_25984(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_25984(t0,t1);}

C_noret_decl(trf_25931)
static void C_fcall trf_25931(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_25931(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_25931(t0,t1);}

C_noret_decl(trf_25717)
static void C_fcall trf_25717(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_25717(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_25717(t0,t1);}

C_noret_decl(trf_25724)
static void C_fcall trf_25724(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_25724(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_25724(t0,t1);}

C_noret_decl(trf_25727)
static void C_fcall trf_25727(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_25727(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_25727(t0,t1);}

C_noret_decl(trf_38447)
static void C_fcall trf_38447(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_38447(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_38447(t0,t1);}

C_noret_decl(trf_38450)
static void C_fcall trf_38450(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_38450(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_38450(t0,t1);}

C_noret_decl(trf_38293)
static void C_fcall trf_38293(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_38293(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_38293(t0,t1);}

C_noret_decl(trf_38101)
static void C_fcall trf_38101(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_38101(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_38101(t0,t1);}

C_noret_decl(trf_37951)
static void C_fcall trf_37951(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_37951(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_37951(t0,t1);}

C_noret_decl(trf_38040)
static void C_fcall trf_38040(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_38040(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_38040(t0,t1);}

C_noret_decl(trf_37954)
static void C_fcall trf_37954(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_37954(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_37954(t0,t1);}

C_noret_decl(trf_37970)
static void C_fcall trf_37970(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_37970(void *dummy){
C_word t3=C_pick(0);
C_word t2=C_pick(1);
C_word t1=C_pick(2);
C_word t0=C_pick(3);
C_adjust_stack(-4);
f_37970(t0,t1,t2,t3);}

C_noret_decl(trf_37992)
static void C_fcall trf_37992(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_37992(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_37992(t0,t1);}

C_noret_decl(trf_37887)
static void C_fcall trf_37887(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_37887(void *dummy){
C_word t2=C_pick(0);
C_word t1=C_pick(1);
C_word t0=C_pick(2);
C_adjust_stack(-3);
f_37887(t0,t1,t2);}

C_noret_decl(trf_37834)
static void C_fcall trf_37834(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_37834(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_37834(t0,t1);}

C_noret_decl(trf_30198)
static void C_fcall trf_30198(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_30198(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_30198(t0,t1);}

C_noret_decl(trf_30060)
static void C_fcall trf_30060(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_30060(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_30060(t0,t1);}

C_noret_decl(trf_30274)
static void C_fcall trf_30274(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_30274(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_30274(t0,t1);}

C_noret_decl(trf_37438)
static void C_fcall trf_37438(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_37438(void *dummy){
C_word t2=C_pick(0);
C_word t1=C_pick(1);
C_word t0=C_pick(2);
C_adjust_stack(-3);
f_37438(t0,t1,t2);}

C_noret_decl(trf_37466)
static void C_fcall trf_37466(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_37466(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_37466(t0,t1);}

C_noret_decl(trf_37169)
static void C_fcall trf_37169(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_37169(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_37169(t0,t1);}

C_noret_decl(trf_37333)
static void C_fcall trf_37333(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_37333(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_37333(t0,t1);}

C_noret_decl(trf_37182)
static void C_fcall trf_37182(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_37182(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_37182(t0,t1);}

C_noret_decl(trf_37417)
static void C_fcall trf_37417(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_37417(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_37417(t0,t1);}

C_noret_decl(trf_37107)
static void C_fcall trf_37107(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_37107(void *dummy){
C_word t2=C_pick(0);
C_word t1=C_pick(1);
C_word t0=C_pick(2);
C_adjust_stack(-3);
f_37107(t0,t1,t2);}

C_noret_decl(trf_37048)
static void C_fcall trf_37048(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_37048(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_37048(t0,t1);}

C_noret_decl(trf_36984)
static void C_fcall trf_36984(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_36984(void *dummy){
C_word t2=C_pick(0);
C_word t1=C_pick(1);
C_word t0=C_pick(2);
C_adjust_stack(-3);
f_36984(t0,t1,t2);}

C_noret_decl(trf_36891)
static void C_fcall trf_36891(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_36891(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_36891(t0,t1);}

C_noret_decl(trf_36886)
static void C_fcall trf_36886(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_36886(void *dummy){
C_word t2=C_pick(0);
C_word t1=C_pick(1);
C_word t0=C_pick(2);
C_adjust_stack(-3);
f_36886(t0,t1,t2);}

C_noret_decl(trf_36729)
static void C_fcall trf_36729(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_36729(void *dummy){
C_word t3=C_pick(0);
C_word t2=C_pick(1);
C_word t1=C_pick(2);
C_word t0=C_pick(3);
C_adjust_stack(-4);
f_36729(t0,t1,t2,t3);}

C_noret_decl(trf_36834)
static void C_fcall trf_36834(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_36834(void *dummy){
C_word t2=C_pick(0);
C_word t1=C_pick(1);
C_word t0=C_pick(2);
C_adjust_stack(-3);
f_36834(t0,t1,t2);}

C_noret_decl(trf_36803)
static void C_fcall trf_36803(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_36803(void *dummy){
C_word t2=C_pick(0);
C_word t1=C_pick(1);
C_word t0=C_pick(2);
C_adjust_stack(-3);
f_36803(t0,t1,t2);}

C_noret_decl(trf_36759)
static void C_fcall trf_36759(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_36759(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_36759(t0,t1);}

C_noret_decl(trf_36731)
static void C_fcall trf_36731(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_36731(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_36731(t0,t1);}

C_noret_decl(trf_36686)
static void C_fcall trf_36686(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_36686(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_36686(t0,t1);}

C_noret_decl(trf_36642)
static void C_fcall trf_36642(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_36642(void *dummy){
C_word t3=C_pick(0);
C_word t2=C_pick(1);
C_word t1=C_pick(2);
C_word t0=C_pick(3);
C_adjust_stack(-4);
f_36642(t0,t1,t2,t3);}

C_noret_decl(trf_36487)
static void C_fcall trf_36487(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_36487(void *dummy){
C_word t4=C_pick(0);
C_word t3=C_pick(1);
C_word t2=C_pick(2);
C_word t1=C_pick(3);
C_word t0=C_pick(4);
C_adjust_stack(-5);
f_36487(t0,t1,t2,t3,t4);}

C_noret_decl(trf_36516)
static void C_fcall trf_36516(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_36516(void *dummy){
C_word t2=C_pick(0);
C_word t1=C_pick(1);
C_word t0=C_pick(2);
C_adjust_stack(-3);
f_36516(t0,t1,t2);}

C_noret_decl(trf_36553)
static void C_fcall trf_36553(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_36553(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_36553(t0,t1);}

C_noret_decl(trf_35954)
static void C_fcall trf_35954(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_35954(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_35954(t0,t1);}

C_noret_decl(trf_35957)
static void C_fcall trf_35957(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_35957(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_35957(t0,t1);}

C_noret_decl(trf_35960)
static void C_fcall trf_35960(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_35960(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_35960(t0,t1);}

C_noret_decl(trf_35966)
static void C_fcall trf_35966(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_35966(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_35966(t0,t1);}

C_noret_decl(trf_35716)
static void C_fcall trf_35716(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_35716(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_35716(t0,t1);}

C_noret_decl(trf_35719)
static void C_fcall trf_35719(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_35719(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_35719(t0,t1);}

C_noret_decl(trf_35725)
static void C_fcall trf_35725(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_35725(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_35725(t0,t1);}

C_noret_decl(trf_35688)
static void C_fcall trf_35688(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_35688(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_35688(t0,t1);}

C_noret_decl(trf_35668)
static void C_fcall trf_35668(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_35668(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_35668(t0,t1);}

C_noret_decl(trf_35631)
static void C_fcall trf_35631(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_35631(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_35631(t0,t1);}

C_noret_decl(trf_35611)
static void C_fcall trf_35611(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_35611(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_35611(t0,t1);}

C_noret_decl(trf_35283)
static void C_fcall trf_35283(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_35283(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_35283(t0,t1);}

C_noret_decl(trf_35290)
static void C_fcall trf_35290(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_35290(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_35290(t0,t1);}

C_noret_decl(trf_35296)
static void C_fcall trf_35296(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_35296(void *dummy){
C_word t2=C_pick(0);
C_word t1=C_pick(1);
C_word t0=C_pick(2);
C_adjust_stack(-3);
f_35296(t0,t1,t2);}

C_noret_decl(trf_35172)
static void C_fcall trf_35172(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_35172(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_35172(t0,t1);}

C_noret_decl(trf_35179)
static void C_fcall trf_35179(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_35179(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_35179(t0,t1);}

C_noret_decl(trf_35185)
static void C_fcall trf_35185(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_35185(void *dummy){
C_word t2=C_pick(0);
C_word t1=C_pick(1);
C_word t0=C_pick(2);
C_adjust_stack(-3);
f_35185(t0,t1,t2);}

C_noret_decl(trf_34028)
static void C_fcall trf_34028(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_34028(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_34028(t0,t1);}

C_noret_decl(trf_34031)
static void C_fcall trf_34031(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_34031(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_34031(t0,t1);}

C_noret_decl(trf_34034)
static void C_fcall trf_34034(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_34034(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_34034(t0,t1);}

C_noret_decl(trf_33558)
static void C_fcall trf_33558(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_33558(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_33558(t0,t1);}

C_noret_decl(trf_33561)
static void C_fcall trf_33561(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_33561(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_33561(t0,t1);}

C_noret_decl(trf_33564)
static void C_fcall trf_33564(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_33564(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_33564(t0,t1);}

C_noret_decl(trf_33088)
static void C_fcall trf_33088(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_33088(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_33088(t0,t1);}

C_noret_decl(trf_33091)
static void C_fcall trf_33091(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_33091(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_33091(t0,t1);}

C_noret_decl(trf_33094)
static void C_fcall trf_33094(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_33094(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_33094(t0,t1);}

C_noret_decl(trf_32340)
static void C_fcall trf_32340(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_32340(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_32340(t0,t1);}

C_noret_decl(trf_32343)
static void C_fcall trf_32343(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_32343(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_32343(t0,t1);}

C_noret_decl(trf_32346)
static void C_fcall trf_32346(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_32346(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_32346(t0,t1);}

C_noret_decl(trf_32349)
static void C_fcall trf_32349(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_32349(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_32349(t0,t1);}

C_noret_decl(trf_31592)
static void C_fcall trf_31592(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_31592(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_31592(t0,t1);}

C_noret_decl(trf_31595)
static void C_fcall trf_31595(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_31595(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_31595(t0,t1);}

C_noret_decl(trf_31598)
static void C_fcall trf_31598(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_31598(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_31598(t0,t1);}

C_noret_decl(trf_31601)
static void C_fcall trf_31601(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_31601(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_31601(t0,t1);}

C_noret_decl(trf_31122)
static void C_fcall trf_31122(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_31122(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_31122(t0,t1);}

C_noret_decl(trf_31125)
static void C_fcall trf_31125(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_31125(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_31125(t0,t1);}

C_noret_decl(trf_31128)
static void C_fcall trf_31128(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_31128(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_31128(t0,t1);}

C_noret_decl(trf_30374)
static void C_fcall trf_30374(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_30374(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_30374(t0,t1);}

C_noret_decl(trf_30377)
static void C_fcall trf_30377(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_30377(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_30377(t0,t1);}

C_noret_decl(trf_30380)
static void C_fcall trf_30380(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_30380(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_30380(t0,t1);}

C_noret_decl(trf_30383)
static void C_fcall trf_30383(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_30383(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_30383(t0,t1);}

C_noret_decl(trf_30025)
static void C_fcall trf_30025(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_30025(void *dummy){
C_word t3=C_pick(0);
C_word t2=C_pick(1);
C_word t1=C_pick(2);
C_word t0=C_pick(3);
C_adjust_stack(-4);
f_30025(t0,t1,t2,t3);}

C_noret_decl(trf_29865)
static void C_fcall trf_29865(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_29865(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_29865(t0,t1);}

C_noret_decl(trf_29900)
static void C_fcall trf_29900(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_29900(void *dummy){
C_word t5=C_pick(0);
C_word t4=C_pick(1);
C_word t3=C_pick(2);
C_word t2=C_pick(3);
C_word t1=C_pick(4);
C_word t0=C_pick(5);
C_adjust_stack(-6);
f_29900(t0,t1,t2,t3,t4,t5);}

C_noret_decl(trf_29910)
static void C_fcall trf_29910(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_29910(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_29910(t0,t1);}

C_noret_decl(trf_29873)
static void C_fcall trf_29873(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_29873(void *dummy){
C_word t2=C_pick(0);
C_word t1=C_pick(1);
C_word t0=C_pick(2);
C_adjust_stack(-3);
f_29873(t0,t1,t2);}

C_noret_decl(trf_30033)
static void C_fcall trf_30033(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_30033(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_30033(t0,t1);}

C_noret_decl(trf_29651)
static void C_fcall trf_29651(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_29651(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_29651(t0,t1);}

C_noret_decl(trf_29657)
static void C_fcall trf_29657(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_29657(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_29657(t0,t1);}

C_noret_decl(trf_29680)
static void C_fcall trf_29680(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_29680(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_29680(t0,t1);}

C_noret_decl(trf_29693)
static void C_fcall trf_29693(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_29693(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_29693(t0,t1);}

C_noret_decl(trf_29667)
static void C_fcall trf_29667(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_29667(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_29667(t0,t1);}

C_noret_decl(trf_29480)
static void C_fcall trf_29480(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_29480(void *dummy){
C_word t3=C_pick(0);
C_word t2=C_pick(1);
C_word t1=C_pick(2);
C_word t0=C_pick(3);
C_adjust_stack(-4);
f_29480(t0,t1,t2,t3);}

C_noret_decl(trf_29489)
static void C_fcall trf_29489(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_29489(void *dummy){
C_word t4=C_pick(0);
C_word t3=C_pick(1);
C_word t2=C_pick(2);
C_word t1=C_pick(3);
C_word t0=C_pick(4);
C_adjust_stack(-5);
f_29489(t0,t1,t2,t3,t4);}

C_noret_decl(trf_29443)
static void C_fcall trf_29443(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_29443(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_29443(t0,t1);}

C_noret_decl(trf_29306)
static void C_fcall trf_29306(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_29306(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_29306(t0,t1);}

C_noret_decl(trf_29236)
static void C_fcall trf_29236(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_29236(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_29236(t0,t1);}

C_noret_decl(trf_28597)
static void C_fcall trf_28597(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_28597(void *dummy){
C_word t2=C_pick(0);
C_word t1=C_pick(1);
C_word t0=C_pick(2);
C_adjust_stack(-3);
f_28597(t0,t1,t2);}

C_noret_decl(trf_28557)
static void C_fcall trf_28557(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_28557(void *dummy){
C_word t2=C_pick(0);
C_word t1=C_pick(1);
C_word t0=C_pick(2);
C_adjust_stack(-3);
f_28557(t0,t1,t2);}

C_noret_decl(trf_28570)
static void C_fcall trf_28570(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_28570(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_28570(t0,t1);}

C_noret_decl(trf_29149)
static void C_fcall trf_29149(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_29149(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_29149(t0,t1);}

C_noret_decl(trf_28939)
static void C_fcall trf_28939(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_28939(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_28939(t0,t1);}

C_noret_decl(trf_29055)
static void C_fcall trf_29055(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_29055(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_29055(t0,t1);}

C_noret_decl(trf_28942)
static void C_fcall trf_28942(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_28942(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_28942(t0,t1);}

C_noret_decl(trf_28945)
static void C_fcall trf_28945(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_28945(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_28945(t0,t1);}

C_noret_decl(trf_28850)
static void C_fcall trf_28850(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_28850(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_28850(t0,t1);}

C_noret_decl(trf_28765)
static void C_fcall trf_28765(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_28765(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_28765(t0,t1);}

C_noret_decl(trf_28722)
static void C_fcall trf_28722(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_28722(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_28722(t0,t1);}

C_noret_decl(trf_28689)
static void C_fcall trf_28689(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_28689(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_28689(t0,t1);}

C_noret_decl(trf_28684)
static void C_fcall trf_28684(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_28684(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_28684(t0,t1);}

C_noret_decl(trf_28679)
static void C_fcall trf_28679(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_28679(void *dummy){
C_word t4=C_pick(0);
C_word t3=C_pick(1);
C_word t2=C_pick(2);
C_word t1=C_pick(3);
C_word t0=C_pick(4);
C_adjust_stack(-5);
f_28679(t0,t1,t2,t3,t4);}

C_noret_decl(trf_28426)
static void C_fcall trf_28426(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_28426(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_28426(t0,t1);}

C_noret_decl(trf_28273)
static void C_fcall trf_28273(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_28273(void *dummy){
C_word t3=C_pick(0);
C_word t2=C_pick(1);
C_word t1=C_pick(2);
C_word t0=C_pick(3);
C_adjust_stack(-4);
f_28273(t0,t1,t2,t3);}

C_noret_decl(trf_28119)
static void C_fcall trf_28119(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_28119(void *dummy){
C_word t2=C_pick(0);
C_word t1=C_pick(1);
C_word t0=C_pick(2);
C_adjust_stack(-3);
f_28119(t0,t1,t2);}

C_noret_decl(trf_27961)
static void C_fcall trf_27961(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_27961(void *dummy){
C_word t2=C_pick(0);
C_word t1=C_pick(1);
C_word t0=C_pick(2);
C_adjust_stack(-3);
f_27961(t0,t1,t2);}

C_noret_decl(trf_27994)
static void C_fcall trf_27994(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_27994(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_27994(t0,t1);}

C_noret_decl(trf_27901)
static void C_fcall trf_27901(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_27901(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_27901(t0,t1);}

C_noret_decl(trf_27866)
static void C_fcall trf_27866(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_27866(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_27866(t0,t1);}

C_noret_decl(trf_27882)
static void C_fcall trf_27882(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_27882(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_27882(t0,t1);}

C_noret_decl(trf_27837)
static void C_fcall trf_27837(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_27837(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_27837(t0,t1);}

C_noret_decl(trf_27744)
static void C_fcall trf_27744(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_27744(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_27744(t0,t1);}

C_noret_decl(trf_27500)
static void C_fcall trf_27500(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_27500(void *dummy){
C_word t2=C_pick(0);
C_word t1=C_pick(1);
C_word t0=C_pick(2);
C_adjust_stack(-3);
f_27500(t0,t1,t2);}

C_noret_decl(trf_27304)
static void C_fcall trf_27304(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_27304(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_27304(t0,t1);}

C_noret_decl(trf_27467)
static void C_fcall trf_27467(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_27467(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_27467(t0,t1);}

C_noret_decl(trf_27307)
static void C_fcall trf_27307(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_27307(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_27307(t0,t1);}

C_noret_decl(trf_27310)
static void C_fcall trf_27310(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_27310(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_27310(t0,t1);}

C_noret_decl(trf_27313)
static void C_fcall trf_27313(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_27313(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_27313(t0,t1);}

C_noret_decl(trf_27355)
static void C_fcall trf_27355(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_27355(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_27355(t0,t1);}

C_noret_decl(trf_27320)
static void C_fcall trf_27320(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_27320(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_27320(t0,t1);}

C_noret_decl(trf_27049)
static void C_fcall trf_27049(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_27049(void *dummy){
C_word t3=C_pick(0);
C_word t2=C_pick(1);
C_word t1=C_pick(2);
C_word t0=C_pick(3);
C_adjust_stack(-4);
f_27049(t0,t1,t2,t3);}

C_noret_decl(trf_27057)
static void C_fcall trf_27057(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_27057(void *dummy){
C_word t3=C_pick(0);
C_word t2=C_pick(1);
C_word t1=C_pick(2);
C_word t0=C_pick(3);
C_adjust_stack(-4);
f_27057(t0,t1,t2,t3);}

C_noret_decl(trf_27186)
static void C_fcall trf_27186(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_27186(void *dummy){
C_word t2=C_pick(0);
C_word t1=C_pick(1);
C_word t0=C_pick(2);
C_adjust_stack(-3);
f_27186(t0,t1,t2);}

C_noret_decl(trf_27140)
static void C_fcall trf_27140(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_27140(void *dummy){
C_word t2=C_pick(0);
C_word t1=C_pick(1);
C_word t0=C_pick(2);
C_adjust_stack(-3);
f_27140(t0,t1,t2);}

C_noret_decl(trf_27043)
static void C_fcall trf_27043(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_27043(void *dummy){
C_word t2=C_pick(0);
C_word t1=C_pick(1);
C_word t0=C_pick(2);
C_adjust_stack(-3);
f_27043(t0,t1,t2);}

C_noret_decl(trf_27037)
static void C_fcall trf_27037(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_27037(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_27037(t0,t1);}

C_noret_decl(trf_27031)
static void C_fcall trf_27031(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_27031(void *dummy){
C_word t2=C_pick(0);
C_word t1=C_pick(1);
C_word t0=C_pick(2);
C_adjust_stack(-3);
f_27031(t0,t1,t2);}

C_noret_decl(trf_26960)
static void C_fcall trf_26960(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_26960(void *dummy){
C_word t2=C_pick(0);
C_word t1=C_pick(1);
C_word t0=C_pick(2);
C_adjust_stack(-3);
f_26960(t0,t1,t2);}

C_noret_decl(trf_26962)
static void C_fcall trf_26962(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_26962(void *dummy){
C_word t2=C_pick(0);
C_word t1=C_pick(1);
C_word t0=C_pick(2);
C_adjust_stack(-3);
f_26962(t0,t1,t2);}

C_noret_decl(trf_26968)
static void C_fcall trf_26968(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_26968(void *dummy){
C_word t2=C_pick(0);
C_word t1=C_pick(1);
C_word t0=C_pick(2);
C_adjust_stack(-3);
f_26968(t0,t1,t2);}

C_noret_decl(trf_26809)
static void C_fcall trf_26809(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_26809(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_26809(t0,t1);}

C_noret_decl(trf_26824)
static void C_fcall trf_26824(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_26824(void *dummy){
C_word t2=C_pick(0);
C_word t1=C_pick(1);
C_word t0=C_pick(2);
C_adjust_stack(-3);
f_26824(t0,t1,t2);}

C_noret_decl(trf_26767)
static void C_fcall trf_26767(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_26767(void *dummy){
C_word t2=C_pick(0);
C_word t1=C_pick(1);
C_word t0=C_pick(2);
C_adjust_stack(-3);
f_26767(t0,t1,t2);}

C_noret_decl(trf_26707)
static void C_fcall trf_26707(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_26707(void *dummy){
C_word t2=C_pick(0);
C_word t1=C_pick(1);
C_word t0=C_pick(2);
C_adjust_stack(-3);
f_26707(t0,t1,t2);}

C_noret_decl(trf_26576)
static void C_fcall trf_26576(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_26576(void *dummy){
C_word t2=C_pick(0);
C_word t1=C_pick(1);
C_word t0=C_pick(2);
C_adjust_stack(-3);
f_26576(t0,t1,t2);}

C_noret_decl(trf_26452)
static void C_fcall trf_26452(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_26452(void *dummy){
C_word t3=C_pick(0);
C_word t2=C_pick(1);
C_word t1=C_pick(2);
C_word t0=C_pick(3);
C_adjust_stack(-4);
f_26452(t0,t1,t2,t3);}

C_noret_decl(trf_26488)
static void C_fcall trf_26488(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_26488(void *dummy){
C_word t2=C_pick(0);
C_word t1=C_pick(1);
C_word t0=C_pick(2);
C_adjust_stack(-3);
f_26488(t0,t1,t2);}

C_noret_decl(trf_26284)
static void C_fcall trf_26284(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_26284(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_26284(t0,t1);}

C_noret_decl(trf_24039)
static void C_fcall trf_24039(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_24039(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_24039(t0,t1);}

C_noret_decl(trf_26418)
static void C_fcall trf_26418(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_26418(void *dummy){
C_word t2=C_pick(0);
C_word t1=C_pick(1);
C_word t0=C_pick(2);
C_adjust_stack(-3);
f_26418(t0,t1,t2);}

C_noret_decl(trf_26428)
static void C_fcall trf_26428(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_26428(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_26428(t0,t1);}

C_noret_decl(trf_26388)
static void C_fcall trf_26388(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_26388(void *dummy){
C_word t2=C_pick(0);
C_word t1=C_pick(1);
C_word t0=C_pick(2);
C_adjust_stack(-3);
f_26388(t0,t1,t2);}

C_noret_decl(trf_26398)
static void C_fcall trf_26398(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_26398(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_26398(t0,t1);}

C_noret_decl(trf_25381)
static void C_fcall trf_25381(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_25381(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_25381(t0,t1);}

C_noret_decl(trf_25384)
static void C_fcall trf_25384(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_25384(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_25384(t0,t1);}

C_noret_decl(trf_25387)
static void C_fcall trf_25387(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_25387(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_25387(t0,t1);}

C_noret_decl(trf_25390)
static void C_fcall trf_25390(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_25390(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_25390(t0,t1);}

C_noret_decl(trf_25393)
static void C_fcall trf_25393(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_25393(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_25393(t0,t1);}

C_noret_decl(trf_25396)
static void C_fcall trf_25396(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_25396(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_25396(t0,t1);}

C_noret_decl(trf_25224)
static void C_fcall trf_25224(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_25224(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_25224(t0,t1);}

C_noret_decl(trf_25153)
static void C_fcall trf_25153(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_25153(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_25153(t0,t1);}

C_noret_decl(trf_24968)
static void C_fcall trf_24968(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_24968(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_24968(t0,t1);}

C_noret_decl(trf_24980)
static void C_fcall trf_24980(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_24980(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_24980(t0,t1);}

C_noret_decl(trf_25017)
static void C_fcall trf_25017(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_25017(void *dummy){
C_word t4=C_pick(0);
C_word t3=C_pick(1);
C_word t2=C_pick(2);
C_word t1=C_pick(3);
C_word t0=C_pick(4);
C_adjust_stack(-5);
f_25017(t0,t1,t2,t3,t4);}

C_noret_decl(trf_25052)
static void C_fcall trf_25052(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_25052(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_25052(t0,t1);}

C_noret_decl(trf_24947)
static void C_fcall trf_24947(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_24947(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_24947(t0,t1);}

C_noret_decl(trf_24882)
static void C_fcall trf_24882(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_24882(void *dummy){
C_word t2=C_pick(0);
C_word t1=C_pick(1);
C_word t0=C_pick(2);
C_adjust_stack(-3);
f_24882(t0,t1,t2);}

C_noret_decl(trf_24891)
static void C_fcall trf_24891(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_24891(void *dummy){
C_word t2=C_pick(0);
C_word t1=C_pick(1);
C_word t0=C_pick(2);
C_adjust_stack(-3);
f_24891(t0,t1,t2);}

C_noret_decl(trf_24904)
static void C_fcall trf_24904(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_24904(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_24904(t0,t1);}

C_noret_decl(trf_24838)
static void C_fcall trf_24838(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_24838(void *dummy){
C_word t2=C_pick(0);
C_word t1=C_pick(1);
C_word t0=C_pick(2);
C_adjust_stack(-3);
f_24838(t0,t1,t2);}

C_noret_decl(trf_24826)
static void C_fcall trf_24826(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_24826(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_24826(t0,t1);}

C_noret_decl(trf_24724)
static void C_fcall trf_24724(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_24724(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_24724(t0,t1);}

C_noret_decl(trf_24676)
static void C_fcall trf_24676(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_24676(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_24676(t0,t1);}

C_noret_decl(trf_24057)
static void C_fcall trf_24057(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_24057(void *dummy){
C_word t6=C_pick(0);
C_word t5=C_pick(1);
C_word t4=C_pick(2);
C_word t3=C_pick(3);
C_word t2=C_pick(4);
C_word t1=C_pick(5);
C_word t0=C_pick(6);
C_adjust_stack(-7);
f_24057(t0,t1,t2,t3,t4,t5,t6);}

C_noret_decl(trf_24067)
static void C_fcall trf_24067(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_24067(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_24067(t0,t1);}

C_noret_decl(trf_24196)
static void C_fcall trf_24196(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_24196(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_24196(t0,t1);}

C_noret_decl(trf_24284)
static void C_fcall trf_24284(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_24284(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_24284(t0,t1);}

C_noret_decl(trf_24357)
static void C_fcall trf_24357(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_24357(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_24357(t0,t1);}

C_noret_decl(trf_24435)
static void C_fcall trf_24435(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_24435(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_24435(t0,t1);}

C_noret_decl(trf_24386)
static void C_fcall trf_24386(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_24386(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_24386(t0,t1);}

C_noret_decl(trf_24402)
static void C_fcall trf_24402(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_24402(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_24402(t0,t1);}

C_noret_decl(trf_24366)
static void C_fcall trf_24366(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_24366(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_24366(t0,t1);}

C_noret_decl(trf_24308)
static void C_fcall trf_24308(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_24308(void *dummy){
C_word t2=C_pick(0);
C_word t1=C_pick(1);
C_word t0=C_pick(2);
C_adjust_stack(-3);
f_24308(t0,t1,t2);}

C_noret_decl(trf_24227)
static void C_fcall trf_24227(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_24227(void *dummy){
C_word t2=C_pick(0);
C_word t1=C_pick(1);
C_word t0=C_pick(2);
C_adjust_stack(-3);
f_24227(t0,t1,t2);}

C_noret_decl(trf_24243)
static void C_fcall trf_24243(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_24243(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_24243(t0,t1);}

C_noret_decl(trf_24211)
static void C_fcall trf_24211(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_24211(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_24211(t0,t1);}

C_noret_decl(trf_23953)
static void C_fcall trf_23953(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_23953(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_23953(t0,t1);}

C_noret_decl(trf_23962)
static void C_fcall trf_23962(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_23962(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_23962(t0,t1);}

C_noret_decl(trf_23967)
static void C_fcall trf_23967(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_23967(void *dummy){
C_word t2=C_pick(0);
C_word t1=C_pick(1);
C_word t0=C_pick(2);
C_adjust_stack(-3);
f_23967(t0,t1,t2);}

C_noret_decl(trf_23945)
static void C_fcall trf_23945(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_23945(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_23945(t0,t1);}

C_noret_decl(trf_23737)
static void C_fcall trf_23737(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_23737(void *dummy){
C_word t3=C_pick(0);
C_word t2=C_pick(1);
C_word t1=C_pick(2);
C_word t0=C_pick(3);
C_adjust_stack(-4);
f_23737(t0,t1,t2,t3);}

C_noret_decl(trf_23704)
static void C_fcall trf_23704(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_23704(void *dummy){
C_word t3=C_pick(0);
C_word t2=C_pick(1);
C_word t1=C_pick(2);
C_word t0=C_pick(3);
C_adjust_stack(-4);
f_23704(t0,t1,t2,t3);}

C_noret_decl(trf_23686)
static void C_fcall trf_23686(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_23686(void *dummy){
C_word t3=C_pick(0);
C_word t2=C_pick(1);
C_word t1=C_pick(2);
C_word t0=C_pick(3);
C_adjust_stack(-4);
f_23686(t0,t1,t2,t3);}

C_noret_decl(trf_23619)
static void C_fcall trf_23619(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_23619(void *dummy){
C_word t3=C_pick(0);
C_word t2=C_pick(1);
C_word t1=C_pick(2);
C_word t0=C_pick(3);
C_adjust_stack(-4);
f_23619(t0,t1,t2,t3);}

C_noret_decl(trf_23607)
static void C_fcall trf_23607(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_23607(void *dummy){
C_word t2=C_pick(0);
C_word t1=C_pick(1);
C_word t0=C_pick(2);
C_adjust_stack(-3);
f_23607(t0,t1,t2);}

C_noret_decl(trf_23575)
static void C_fcall trf_23575(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_23575(void *dummy){
C_word t2=C_pick(0);
C_word t1=C_pick(1);
C_word t0=C_pick(2);
C_adjust_stack(-3);
f_23575(t0,t1,t2);}

C_noret_decl(trf_23559)
static void C_fcall trf_23559(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_23559(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_23559(t0,t1);}

C_noret_decl(trf_23547)
static void C_fcall trf_23547(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_23547(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_23547(t0,t1);}

C_noret_decl(trf_23529)
static void C_fcall trf_23529(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_23529(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_23529(t0,t1);}

C_noret_decl(trf_23511)
static void C_fcall trf_23511(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_23511(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_23511(t0,t1);}

C_noret_decl(trf_23496)
static void C_fcall trf_23496(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_23496(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_23496(t0,t1);}

C_noret_decl(trf_23490)
static void C_fcall trf_23490(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_23490(void *dummy){
C_word t3=C_pick(0);
C_word t2=C_pick(1);
C_word t1=C_pick(2);
C_word t0=C_pick(3);
C_adjust_stack(-4);
f_23490(t0,t1,t2,t3);}

C_noret_decl(trf_23478)
static void C_fcall trf_23478(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_23478(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_23478(t0,t1);}

C_noret_decl(trf_23460)
static void C_fcall trf_23460(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_23460(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_23460(t0,t1);}

C_noret_decl(trf_23439)
static void C_fcall trf_23439(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_23439(void *dummy){
C_word t2=C_pick(0);
C_word t1=C_pick(1);
C_word t0=C_pick(2);
C_adjust_stack(-3);
f_23439(t0,t1,t2);}

C_noret_decl(trf_23407)
static void C_fcall trf_23407(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_23407(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_23407(t0,t1);}

C_noret_decl(trf_23349)
static void C_fcall trf_23349(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_23349(void *dummy){
C_word t2=C_pick(0);
C_word t1=C_pick(1);
C_word t0=C_pick(2);
C_adjust_stack(-3);
f_23349(t0,t1,t2);}

C_noret_decl(trf_23339)
static void C_fcall trf_23339(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_23339(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_23339(t0,t1);}

C_noret_decl(trf_23333)
static void C_fcall trf_23333(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_23333(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_23333(t0,t1);}

C_noret_decl(trf_23321)
static void C_fcall trf_23321(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_23321(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_23321(t0,t1);}

C_noret_decl(trf_23297)
static void C_fcall trf_23297(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_23297(void *dummy){
C_word t2=C_pick(0);
C_word t1=C_pick(1);
C_word t0=C_pick(2);
C_adjust_stack(-3);
f_23297(t0,t1,t2);}

C_noret_decl(trf_23210)
static void C_fcall trf_23210(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_23210(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_23210(t0,t1);}

C_noret_decl(trf_23189)
static void C_fcall trf_23189(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_23189(void *dummy){
C_word t5=C_pick(0);
C_word t4=C_pick(1);
C_word t3=C_pick(2);
C_word t2=C_pick(3);
C_word t1=C_pick(4);
C_word t0=C_pick(5);
C_adjust_stack(-6);
f_23189(t0,t1,t2,t3,t4,t5);}

C_noret_decl(trf_23179)
static void C_fcall trf_23179(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_23179(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_23179(t0,t1);}

C_noret_decl(trf_23167)
static void C_fcall trf_23167(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_23167(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_23167(t0,t1);}

C_noret_decl(trf_23126)
static void C_fcall trf_23126(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_23126(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_23126(t0,t1);}

C_noret_decl(trf_23108)
static void C_fcall trf_23108(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_23108(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_23108(t0,t1);}

C_noret_decl(trf_23090)
static void C_fcall trf_23090(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_23090(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_23090(t0,t1);}

C_noret_decl(trf_22057)
static void C_fcall trf_22057(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_22057(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_22057(t0,t1);}

C_noret_decl(trf_22060)
static void C_fcall trf_22060(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_22060(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_22060(t0,t1);}

C_noret_decl(trf_22775)
static void C_fcall trf_22775(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_22775(void *dummy){
C_word t2=C_pick(0);
C_word t1=C_pick(1);
C_word t0=C_pick(2);
C_adjust_stack(-3);
f_22775(t0,t1,t2);}

C_noret_decl(trf_22798)
static void C_fcall trf_22798(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_22798(void *dummy){
C_word t4=C_pick(0);
C_word t3=C_pick(1);
C_word t2=C_pick(2);
C_word t1=C_pick(3);
C_word t0=C_pick(4);
C_adjust_stack(-5);
f_22798(t0,t1,t2,t3,t4);}

C_noret_decl(trf_22833)
static void C_fcall trf_22833(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_22833(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_22833(t0,t1);}

C_noret_decl(trf_22737)
static void C_fcall trf_22737(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_22737(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_22737(t0,t1);}

C_noret_decl(trf_22265)
static void C_fcall trf_22265(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_22265(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_22265(t0,t1);}

C_noret_decl(trf_22608)
static void C_fcall trf_22608(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_22608(void *dummy){
C_word t3=C_pick(0);
C_word t2=C_pick(1);
C_word t1=C_pick(2);
C_word t0=C_pick(3);
C_adjust_stack(-4);
f_22608(t0,t1,t2,t3);}

C_noret_decl(trf_22694)
static void C_fcall trf_22694(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_22694(void *dummy){
C_word t3=C_pick(0);
C_word t2=C_pick(1);
C_word t1=C_pick(2);
C_word t0=C_pick(3);
C_adjust_stack(-4);
f_22694(t0,t1,t2,t3);}

C_noret_decl(trf_22651)
static void C_fcall trf_22651(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_22651(void *dummy){
C_word t2=C_pick(0);
C_word t1=C_pick(1);
C_word t0=C_pick(2);
C_adjust_stack(-3);
f_22651(t0,t1,t2);}

C_noret_decl(trf_22575)
static void C_fcall trf_22575(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_22575(void *dummy){
C_word t2=C_pick(0);
C_word t1=C_pick(1);
C_word t0=C_pick(2);
C_adjust_stack(-3);
f_22575(t0,t1,t2);}

C_noret_decl(trf_22513)
static void C_fcall trf_22513(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_22513(void *dummy){
C_word t2=C_pick(0);
C_word t1=C_pick(1);
C_word t0=C_pick(2);
C_adjust_stack(-3);
f_22513(t0,t1,t2);}

C_noret_decl(trf_22548)
static void C_fcall trf_22548(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_22548(void *dummy){
C_word t3=C_pick(0);
C_word t2=C_pick(1);
C_word t1=C_pick(2);
C_word t0=C_pick(3);
C_adjust_stack(-4);
f_22548(t0,t1,t2,t3);}

C_noret_decl(trf_22333)
static void C_fcall trf_22333(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_22333(void *dummy){
C_word t2=C_pick(0);
C_word t1=C_pick(1);
C_word t0=C_pick(2);
C_adjust_stack(-3);
f_22333(t0,t1,t2);}

C_noret_decl(trf_22229)
static void C_fcall trf_22229(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_22229(void *dummy){
C_word t2=C_pick(0);
C_word t1=C_pick(1);
C_word t0=C_pick(2);
C_adjust_stack(-3);
f_22229(t0,t1,t2);}

C_noret_decl(trf_22486)
static void C_fcall trf_22486(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_22486(void *dummy){
C_word t3=C_pick(0);
C_word t2=C_pick(1);
C_word t1=C_pick(2);
C_word t0=C_pick(3);
C_adjust_stack(-4);
f_22486(t0,t1,t2,t3);}

C_noret_decl(trf_22459)
static void C_fcall trf_22459(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_22459(void *dummy){
C_word t3=C_pick(0);
C_word t2=C_pick(1);
C_word t1=C_pick(2);
C_word t0=C_pick(3);
C_adjust_stack(-4);
f_22459(t0,t1,t2,t3);}

C_noret_decl(trf_22370)
static void C_fcall trf_22370(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_22370(void *dummy){
C_word t2=C_pick(0);
C_word t1=C_pick(1);
C_word t0=C_pick(2);
C_adjust_stack(-3);
f_22370(t0,t1,t2);}

C_noret_decl(trf_22420)
static void C_fcall trf_22420(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_22420(void *dummy){
C_word t3=C_pick(0);
C_word t2=C_pick(1);
C_word t1=C_pick(2);
C_word t0=C_pick(3);
C_adjust_stack(-4);
f_22420(t0,t1,t2,t3);}

C_noret_decl(trf_22152)
static void C_fcall trf_22152(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_22152(void *dummy){
C_word t4=C_pick(0);
C_word t3=C_pick(1);
C_word t2=C_pick(2);
C_word t1=C_pick(3);
C_word t0=C_pick(4);
C_adjust_stack(-5);
f_22152(t0,t1,t2,t3,t4);}

C_noret_decl(trf_22070)
static void C_fcall trf_22070(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_22070(void *dummy){
C_word t3=C_pick(0);
C_word t2=C_pick(1);
C_word t1=C_pick(2);
C_word t0=C_pick(3);
C_adjust_stack(-4);
f_22070(t0,t1,t2,t3);}

C_noret_decl(trf_21991)
static void C_fcall trf_21991(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_21991(void *dummy){
C_word t2=C_pick(0);
C_word t1=C_pick(1);
C_word t0=C_pick(2);
C_adjust_stack(-3);
f_21991(t0,t1,t2);}

C_noret_decl(trf_22016)
static void C_fcall trf_22016(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_22016(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_22016(t0,t1);}

C_noret_decl(trf_21719)
static void C_fcall trf_21719(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_21719(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_21719(t0,t1);}

C_noret_decl(trf_21722)
static void C_fcall trf_21722(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_21722(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_21722(t0,t1);}

C_noret_decl(trf_21728)
static void C_fcall trf_21728(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_21728(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_21728(t0,t1);}

C_noret_decl(trf_21442)
static void C_fcall trf_21442(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_21442(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_21442(t0,t1);}

C_noret_decl(trf_21445)
static void C_fcall trf_21445(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_21445(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_21445(t0,t1);}

C_noret_decl(trf_21372)
static void C_fcall trf_21372(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_21372(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_21372(t0,t1);}

C_noret_decl(trf_21220)
static void C_fcall trf_21220(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_21220(void *dummy){
C_word t4=C_pick(0);
C_word t3=C_pick(1);
C_word t2=C_pick(2);
C_word t1=C_pick(3);
C_word t0=C_pick(4);
C_adjust_stack(-5);
f_21220(t0,t1,t2,t3,t4);}

C_noret_decl(trf_21145)
static void C_fcall trf_21145(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_21145(void *dummy){
C_word t4=C_pick(0);
C_word t3=C_pick(1);
C_word t2=C_pick(2);
C_word t1=C_pick(3);
C_word t0=C_pick(4);
C_adjust_stack(-5);
f_21145(t0,t1,t2,t3,t4);}

C_noret_decl(trf_21155)
static void C_fcall trf_21155(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_21155(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_21155(t0,t1);}

C_noret_decl(trf_21162)
static void C_fcall trf_21162(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_21162(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_21162(t0,t1);}

C_noret_decl(trf_21257)
static void C_fcall trf_21257(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_21257(void *dummy){
C_word t2=C_pick(0);
C_word t1=C_pick(1);
C_word t0=C_pick(2);
C_adjust_stack(-3);
f_21257(t0,t1,t2);}

C_noret_decl(trf_21035)
static void C_fcall trf_21035(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_21035(void *dummy){
C_word t3=C_pick(0);
C_word t2=C_pick(1);
C_word t1=C_pick(2);
C_word t0=C_pick(3);
C_adjust_stack(-4);
f_21035(t0,t1,t2,t3);}

C_noret_decl(trf_21047)
static void C_fcall trf_21047(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_21047(void *dummy){
C_word t4=C_pick(0);
C_word t3=C_pick(1);
C_word t2=C_pick(2);
C_word t1=C_pick(3);
C_word t0=C_pick(4);
C_adjust_stack(-5);
f_21047(t0,t1,t2,t3,t4);}

C_noret_decl(trf_21108)
static void C_fcall trf_21108(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_21108(void *dummy){
C_word t2=C_pick(0);
C_word t1=C_pick(1);
C_word t0=C_pick(2);
C_adjust_stack(-3);
f_21108(t0,t1,t2);}

C_noret_decl(trf_20472)
static void C_fcall trf_20472(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_20472(void *dummy){
C_word t5=C_pick(0);
C_word t4=C_pick(1);
C_word t3=C_pick(2);
C_word t2=C_pick(3);
C_word t1=C_pick(4);
C_word t0=C_pick(5);
C_adjust_stack(-6);
f_20472(t0,t1,t2,t3,t4,t5);}

C_noret_decl(trf_20408)
static void C_fcall trf_20408(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_20408(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_20408(t0,t1);}

C_noret_decl(trf_20355)
static void C_fcall trf_20355(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_20355(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_20355(t0,t1);}

C_noret_decl(trf_20358)
static void C_fcall trf_20358(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_20358(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_20358(t0,t1);}

C_noret_decl(trf_20552)
static void C_fcall trf_20552(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_20552(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_20552(t0,t1);}

C_noret_decl(trf_20555)
static void C_fcall trf_20555(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_20555(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_20555(t0,t1);}

C_noret_decl(trf_20558)
static void C_fcall trf_20558(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_20558(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_20558(t0,t1);}

C_noret_decl(trf_20573)
static void C_fcall trf_20573(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_20573(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_20573(t0,t1);}

C_noret_decl(trf_20134)
static void C_fcall trf_20134(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_20134(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_20134(t0,t1);}

C_noret_decl(trf_20226)
static void C_fcall trf_20226(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_20226(void *dummy){
C_word t2=C_pick(0);
C_word t1=C_pick(1);
C_word t0=C_pick(2);
C_adjust_stack(-3);
f_20226(t0,t1,t2);}

C_noret_decl(trf_20245)
static void C_fcall trf_20245(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_20245(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_20245(t0,t1);}

C_noret_decl(trf_20199)
static void C_fcall trf_20199(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_20199(void *dummy){
C_word t2=C_pick(0);
C_word t1=C_pick(1);
C_word t0=C_pick(2);
C_adjust_stack(-3);
f_20199(t0,t1,t2);}

C_noret_decl(trf_20144)
static void C_fcall trf_20144(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_20144(void *dummy){
C_word t2=C_pick(0);
C_word t1=C_pick(1);
C_word t0=C_pick(2);
C_adjust_stack(-3);
f_20144(t0,t1,t2);}

C_noret_decl(trf_20154)
static void C_fcall trf_20154(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_20154(void *dummy){
C_word t3=C_pick(0);
C_word t2=C_pick(1);
C_word t1=C_pick(2);
C_word t0=C_pick(3);
C_adjust_stack(-4);
f_20154(t0,t1,t2,t3);}

C_noret_decl(trf_20000)
static void C_fcall trf_20000(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_20000(void *dummy){
C_word t2=C_pick(0);
C_word t1=C_pick(1);
C_word t0=C_pick(2);
C_adjust_stack(-3);
f_20000(t0,t1,t2);}

C_noret_decl(trf_20069)
static void C_fcall trf_20069(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_20069(void *dummy){
C_word t2=C_pick(0);
C_word t1=C_pick(1);
C_word t0=C_pick(2);
C_adjust_stack(-3);
f_20069(t0,t1,t2);}

C_noret_decl(trf_20015)
static void C_fcall trf_20015(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_20015(void *dummy){
C_word t4=C_pick(0);
C_word t3=C_pick(1);
C_word t2=C_pick(2);
C_word t1=C_pick(3);
C_word t0=C_pick(4);
C_adjust_stack(-5);
f_20015(t0,t1,t2,t3,t4);}

C_noret_decl(trf_19557)
static void C_fcall trf_19557(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_19557(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_19557(t0,t1);}

C_noret_decl(trf_19560)
static void C_fcall trf_19560(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_19560(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_19560(t0,t1);}

C_noret_decl(trf_19563)
static void C_fcall trf_19563(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_19563(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_19563(t0,t1);}

C_noret_decl(trf_19566)
static void C_fcall trf_19566(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_19566(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_19566(t0,t1);}

C_noret_decl(trf_19530)
static void C_fcall trf_19530(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_19530(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_19530(t0,t1);}

C_noret_decl(trf_19253)
static void C_fcall trf_19253(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_19253(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_19253(t0,t1);}

C_noret_decl(trf_19256)
static void C_fcall trf_19256(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_19256(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_19256(t0,t1);}

C_noret_decl(trf_19259)
static void C_fcall trf_19259(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_19259(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_19259(t0,t1);}

C_noret_decl(trf_19150)
static void C_fcall trf_19150(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_19150(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_19150(t0,t1);}

C_noret_decl(trf_19141)
static void C_fcall trf_19141(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_19141(void *dummy){
C_word t2=C_pick(0);
C_word t1=C_pick(1);
C_word t0=C_pick(2);
C_adjust_stack(-3);
f_19141(t0,t1,t2);}

C_noret_decl(trf_19132)
static void C_fcall trf_19132(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_19132(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_19132(t0,t1);}

C_noret_decl(trf_19114)
static void C_fcall trf_19114(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_19114(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_19114(t0,t1);}

C_noret_decl(trf_19096)
static void C_fcall trf_19096(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_19096(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_19096(t0,t1);}

C_noret_decl(trf_19078)
static void C_fcall trf_19078(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_19078(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_19078(t0,t1);}

C_noret_decl(trf_19069)
static void C_fcall trf_19069(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_19069(void *dummy){
C_word t2=C_pick(0);
C_word t1=C_pick(1);
C_word t0=C_pick(2);
C_adjust_stack(-3);
f_19069(t0,t1,t2);}

C_noret_decl(trf_19060)
static void C_fcall trf_19060(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_19060(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_19060(t0,t1);}

C_noret_decl(trf_18891)
static void C_fcall trf_18891(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_18891(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_18891(t0,t1);}

C_noret_decl(trf_18847)
static void C_fcall trf_18847(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_18847(void *dummy){
C_word t2=C_pick(0);
C_word t1=C_pick(1);
C_word t0=C_pick(2);
C_adjust_stack(-3);
f_18847(t0,t1,t2);}

C_noret_decl(trf_18368)
static void C_fcall trf_18368(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_18368(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_18368(t0,t1);}

C_noret_decl(trf_18371)
static void C_fcall trf_18371(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_18371(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_18371(t0,t1);}

C_noret_decl(trf_18374)
static void C_fcall trf_18374(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_18374(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_18374(t0,t1);}

C_noret_decl(trf_18377)
static void C_fcall trf_18377(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_18377(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_18377(t0,t1);}

C_noret_decl(trf_18323)
static void C_fcall trf_18323(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_18323(void *dummy){
C_word t4=C_pick(0);
C_word t3=C_pick(1);
C_word t2=C_pick(2);
C_word t1=C_pick(3);
C_word t0=C_pick(4);
C_adjust_stack(-5);
f_18323(t0,t1,t2,t3,t4);}

C_noret_decl(trf_18029)
static void C_fcall trf_18029(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_18029(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_18029(t0,t1);}

C_noret_decl(trf_18032)
static void C_fcall trf_18032(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_18032(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_18032(t0,t1);}

C_noret_decl(trf_18035)
static void C_fcall trf_18035(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_18035(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_18035(t0,t1);}

C_noret_decl(trf_17746)
static void C_fcall trf_17746(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_17746(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_17746(t0,t1);}

C_noret_decl(trf_17749)
static void C_fcall trf_17749(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_17749(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_17749(t0,t1);}

C_noret_decl(trf_17752)
static void C_fcall trf_17752(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_17752(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_17752(t0,t1);}

C_noret_decl(trf_17705)
static void C_fcall trf_17705(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_17705(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_17705(t0,t1);}

C_noret_decl(trf_17661)
static void C_fcall trf_17661(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_17661(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_17661(t0,t1);}

C_noret_decl(trf_17576)
static void C_fcall trf_17576(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_17576(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_17576(t0,t1);}

C_noret_decl(trf_17061)
static void C_fcall trf_17061(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_17061(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_17061(t0,t1);}

C_noret_decl(trf_17064)
static void C_fcall trf_17064(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_17064(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_17064(t0,t1);}

C_noret_decl(trf_17067)
static void C_fcall trf_17067(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_17067(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_17067(t0,t1);}

C_noret_decl(trf_17070)
static void C_fcall trf_17070(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_17070(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_17070(t0,t1);}

C_noret_decl(trf_16977)
static void C_fcall trf_16977(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_16977(void *dummy){
C_word t2=C_pick(0);
C_word t1=C_pick(1);
C_word t0=C_pick(2);
C_adjust_stack(-3);
f_16977(t0,t1,t2);}

C_noret_decl(trf_16968)
static void C_fcall trf_16968(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_16968(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_16968(t0,t1);}

C_noret_decl(trf_16903)
static void C_fcall trf_16903(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_16903(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_16903(t0,t1);}

C_noret_decl(trf_16645)
static void C_fcall trf_16645(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_16645(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_16645(t0,t1);}

C_noret_decl(trf_16648)
static void C_fcall trf_16648(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_16648(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_16648(t0,t1);}

C_noret_decl(trf_16651)
static void C_fcall trf_16651(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_16651(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_16651(t0,t1);}

C_noret_decl(trf_16526)
static void C_fcall trf_16526(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_16526(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_16526(t0,t1);}

C_noret_decl(trf_16550)
static void C_fcall trf_16550(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_16550(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_16550(t0,t1);}

C_noret_decl(trf_16480)
static void C_fcall trf_16480(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_16480(void *dummy){
C_word t2=C_pick(0);
C_word t1=C_pick(1);
C_word t0=C_pick(2);
C_adjust_stack(-3);
f_16480(t0,t1,t2);}

C_noret_decl(trf_16471)
static void C_fcall trf_16471(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_16471(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_16471(t0,t1);}

C_noret_decl(trf_16170)
static void C_fcall trf_16170(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_16170(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_16170(t0,t1);}

C_noret_decl(trf_16406)
static void C_fcall trf_16406(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_16406(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_16406(t0,t1);}

C_noret_decl(trf_16412)
static void C_fcall trf_16412(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_16412(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_16412(t0,t1);}

C_noret_decl(trf_16304)
static void C_fcall trf_16304(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_16304(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_16304(t0,t1);}

C_noret_decl(trf_16306)
static void C_fcall trf_16306(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_16306(void *dummy){
C_word t3=C_pick(0);
C_word t2=C_pick(1);
C_word t1=C_pick(2);
C_word t0=C_pick(3);
C_adjust_stack(-4);
f_16306(t0,t1,t2,t3);}

C_noret_decl(trf_16355)
static void C_fcall trf_16355(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_16355(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_16355(t0,t1);}

C_noret_decl(trf_16320)
static void C_fcall trf_16320(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_16320(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_16320(t0,t1);}

C_noret_decl(trf_16204)
static void C_fcall trf_16204(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_16204(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_16204(t0,t1);}

C_noret_decl(trf_16118)
static void C_fcall trf_16118(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_16118(void *dummy){
C_word t4=C_pick(0);
C_word t3=C_pick(1);
C_word t2=C_pick(2);
C_word t1=C_pick(3);
C_word t0=C_pick(4);
C_adjust_stack(-5);
f_16118(t0,t1,t2,t3,t4);}

C_noret_decl(trf_16137)
static void C_fcall trf_16137(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_16137(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_16137(t0,t1);}

C_noret_decl(trf_16068)
static void C_fcall trf_16068(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_16068(void *dummy){
C_word t3=C_pick(0);
C_word t2=C_pick(1);
C_word t1=C_pick(2);
C_word t0=C_pick(3);
C_adjust_stack(-4);
f_16068(t0,t1,t2,t3);}

C_noret_decl(trf_15829)
static void C_fcall trf_15829(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_15829(void *dummy){
C_word t9=C_pick(0);
C_word t8=C_pick(1);
C_word t7=C_pick(2);
C_word t6=C_pick(3);
C_word t5=C_pick(4);
C_word t4=C_pick(5);
C_word t3=C_pick(6);
C_word t2=C_pick(7);
C_word t1=C_pick(8);
C_word t0=C_pick(9);
C_adjust_stack(-10);
f_15829(t0,t1,t2,t3,t4,t5,t6,t7,t8,t9);}

C_noret_decl(trf_15848)
static void C_fcall trf_15848(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_15848(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_15848(t0,t1);}

C_noret_decl(trf_15863)
static void C_fcall trf_15863(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_15863(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_15863(t0,t1);}

C_noret_decl(trf_15872)
static void C_fcall trf_15872(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_15872(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_15872(t0,t1);}

C_noret_decl(trf_15819)
static void C_fcall trf_15819(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_15819(void *dummy){
C_word t0=C_pick(0);
C_adjust_stack(-1);
f_15819(t0);}

C_noret_decl(trf_15764)
static void C_fcall trf_15764(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_15764(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_15764(t0,t1);}

C_noret_decl(trf_15755)
static void C_fcall trf_15755(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_15755(void *dummy){
C_word t2=C_pick(0);
C_word t1=C_pick(1);
C_word t0=C_pick(2);
C_adjust_stack(-3);
f_15755(t0,t1,t2);}

C_noret_decl(trf_15638)
static void C_fcall trf_15638(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_15638(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_15638(t0,t1);}

C_noret_decl(trf_15629)
static void C_fcall trf_15629(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_15629(void *dummy){
C_word t2=C_pick(0);
C_word t1=C_pick(1);
C_word t0=C_pick(2);
C_adjust_stack(-3);
f_15629(t0,t1,t2);}

C_noret_decl(trf_15611)
static void C_fcall trf_15611(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_15611(void *dummy){
C_word t2=C_pick(0);
C_word t1=C_pick(1);
C_word t0=C_pick(2);
C_adjust_stack(-3);
f_15611(t0,t1,t2);}

C_noret_decl(trf_15602)
static void C_fcall trf_15602(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_15602(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_15602(t0,t1);}

C_noret_decl(trf_15584)
static void C_fcall trf_15584(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_15584(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_15584(t0,t1);}

C_noret_decl(trf_15575)
static void C_fcall trf_15575(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_15575(void *dummy){
C_word t2=C_pick(0);
C_word t1=C_pick(1);
C_word t0=C_pick(2);
C_adjust_stack(-3);
f_15575(t0,t1,t2);}

C_noret_decl(trf_15566)
static void C_fcall trf_15566(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_15566(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_15566(t0,t1);}

C_noret_decl(trf_15548)
static void C_fcall trf_15548(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_15548(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_15548(t0,t1);}

C_noret_decl(trf_15539)
static void C_fcall trf_15539(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_15539(void *dummy){
C_word t2=C_pick(0);
C_word t1=C_pick(1);
C_word t0=C_pick(2);
C_adjust_stack(-3);
f_15539(t0,t1,t2);}

C_noret_decl(trf_15530)
static void C_fcall trf_15530(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_15530(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_15530(t0,t1);}

C_noret_decl(trf_15515)
static void C_fcall trf_15515(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_15515(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_15515(t0,t1);}

C_noret_decl(trf_15470)
static void C_fcall trf_15470(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_15470(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_15470(t0,t1);}

C_noret_decl(trf_15452)
static void C_fcall trf_15452(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_15452(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_15452(t0,t1);}

C_noret_decl(trf_15443)
static void C_fcall trf_15443(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_15443(void *dummy){
C_word t2=C_pick(0);
C_word t1=C_pick(1);
C_word t0=C_pick(2);
C_adjust_stack(-3);
f_15443(t0,t1,t2);}

C_noret_decl(trf_15416)
static void C_fcall trf_15416(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_15416(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_15416(t0,t1);}

C_noret_decl(trf_15398)
static void C_fcall trf_15398(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_15398(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_15398(t0,t1);}

C_noret_decl(trf_15380)
static void C_fcall trf_15380(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_15380(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_15380(t0,t1);}

C_noret_decl(trf_15371)
static void C_fcall trf_15371(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_15371(void *dummy){
C_word t2=C_pick(0);
C_word t1=C_pick(1);
C_word t0=C_pick(2);
C_adjust_stack(-3);
f_15371(t0,t1,t2);}

C_noret_decl(trf_15359)
static void C_fcall trf_15359(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_15359(void *dummy){
C_word t6=C_pick(0);
C_word t5=C_pick(1);
C_word t4=C_pick(2);
C_word t3=C_pick(3);
C_word t2=C_pick(4);
C_word t1=C_pick(5);
C_word t0=C_pick(6);
C_adjust_stack(-7);
f_15359(t0,t1,t2,t3,t4,t5,t6);}

C_noret_decl(trf_15167)
static void C_fcall trf_15167(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_15167(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_15167(t0,t1);}

C_noret_decl(trf_15316)
static void C_fcall trf_15316(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_15316(void *dummy){
C_word t2=C_pick(0);
C_word t1=C_pick(1);
C_word t0=C_pick(2);
C_adjust_stack(-3);
f_15316(t0,t1,t2);}

C_noret_decl(trf_15202)
static void C_fcall trf_15202(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_15202(void *dummy){
C_word t3=C_pick(0);
C_word t2=C_pick(1);
C_word t1=C_pick(2);
C_word t0=C_pick(3);
C_adjust_stack(-4);
f_15202(t0,t1,t2,t3);}

C_noret_decl(trf_15243)
static void C_fcall trf_15243(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_15243(void *dummy){
C_word t4=C_pick(0);
C_word t3=C_pick(1);
C_word t2=C_pick(2);
C_word t1=C_pick(3);
C_word t0=C_pick(4);
C_adjust_stack(-5);
f_15243(t0,t1,t2,t3,t4);}

C_noret_decl(trf_15127)
static void C_fcall trf_15127(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_15127(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_15127(t0,t1);}

C_noret_decl(trf_15090)
static void C_fcall trf_15090(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_15090(void *dummy){
C_word t3=C_pick(0);
C_word t2=C_pick(1);
C_word t1=C_pick(2);
C_word t0=C_pick(3);
C_adjust_stack(-4);
f_15090(t0,t1,t2,t3);}

C_noret_decl(trf_14988)
static void C_fcall trf_14988(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_14988(void *dummy){
C_word t4=C_pick(0);
C_word t3=C_pick(1);
C_word t2=C_pick(2);
C_word t1=C_pick(3);
C_word t0=C_pick(4);
C_adjust_stack(-5);
f_14988(t0,t1,t2,t3,t4);}

C_noret_decl(trf_14935)
static void C_fcall trf_14935(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_14935(void *dummy){
C_word t2=C_pick(0);
C_word t1=C_pick(1);
C_word t0=C_pick(2);
C_adjust_stack(-3);
f_14935(t0,t1,t2);}

C_noret_decl(trf_15107)
static void C_fcall trf_15107(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_15107(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_15107(t0,t1);}

C_noret_decl(trf_15048)
static void C_fcall trf_15048(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_15048(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_15048(t0,t1);}

C_noret_decl(trf_14903)
static void C_fcall trf_14903(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_14903(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_14903(t0,t1);}

C_noret_decl(trf_14534)
static void C_fcall trf_14534(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_14534(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_14534(t0,t1);}

C_noret_decl(trf_14537)
static void C_fcall trf_14537(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_14537(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_14537(t0,t1);}

C_noret_decl(trf_14540)
static void C_fcall trf_14540(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_14540(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_14540(t0,t1);}

C_noret_decl(trf_14698)
static void C_fcall trf_14698(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_14698(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_14698(t0,t1);}

C_noret_decl(trf_14701)
static void C_fcall trf_14701(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_14701(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_14701(t0,t1);}

C_noret_decl(trf_14710)
static void C_fcall trf_14710(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_14710(void *dummy){
C_word t2=C_pick(0);
C_word t1=C_pick(1);
C_word t0=C_pick(2);
C_adjust_stack(-3);
f_14710(t0,t1,t2);}

C_noret_decl(trf_14720)
static void C_fcall trf_14720(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_14720(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_14720(t0,t1);}

C_noret_decl(trf_14667)
static void C_fcall trf_14667(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_14667(void *dummy){
C_word t2=C_pick(0);
C_word t1=C_pick(1);
C_word t0=C_pick(2);
C_adjust_stack(-3);
f_14667(t0,t1,t2);}

C_noret_decl(trf_14629)
static void C_fcall trf_14629(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_14629(void *dummy){
C_word t2=C_pick(0);
C_word t1=C_pick(1);
C_word t0=C_pick(2);
C_adjust_stack(-3);
f_14629(t0,t1,t2);}

C_noret_decl(trf_13999)
static void C_fcall trf_13999(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_13999(void *dummy){
C_word t3=C_pick(0);
C_word t2=C_pick(1);
C_word t1=C_pick(2);
C_word t0=C_pick(3);
C_adjust_stack(-4);
f_13999(t0,t1,t2,t3);}

C_noret_decl(trf_14584)
static void C_fcall trf_14584(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_14584(void *dummy){
C_word t2=C_pick(0);
C_word t1=C_pick(1);
C_word t0=C_pick(2);
C_adjust_stack(-3);
f_14584(t0,t1,t2);}

C_noret_decl(trf_14554)
static void C_fcall trf_14554(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_14554(void *dummy){
C_word t2=C_pick(0);
C_word t1=C_pick(1);
C_word t0=C_pick(2);
C_adjust_stack(-3);
f_14554(t0,t1,t2);}

C_noret_decl(trf_14489)
static void C_fcall trf_14489(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_14489(void *dummy){
C_word t5=C_pick(0);
C_word t4=C_pick(1);
C_word t3=C_pick(2);
C_word t2=C_pick(3);
C_word t1=C_pick(4);
C_word t0=C_pick(5);
C_adjust_stack(-6);
f_14489(t0,t1,t2,t3,t4,t5);}

C_noret_decl(trf_14433)
static void C_fcall trf_14433(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_14433(void *dummy){
C_word t2=C_pick(0);
C_word t1=C_pick(1);
C_word t0=C_pick(2);
C_adjust_stack(-3);
f_14433(t0,t1,t2);}

C_noret_decl(trf_14401)
static void C_fcall trf_14401(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_14401(void *dummy){
C_word t2=C_pick(0);
C_word t1=C_pick(1);
C_word t0=C_pick(2);
C_adjust_stack(-3);
f_14401(t0,t1,t2);}

C_noret_decl(trf_14352)
static void C_fcall trf_14352(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_14352(void *dummy){
C_word t2=C_pick(0);
C_word t1=C_pick(1);
C_word t0=C_pick(2);
C_adjust_stack(-3);
f_14352(t0,t1,t2);}

C_noret_decl(trf_14371)
static void C_fcall trf_14371(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_14371(void *dummy){
C_word t2=C_pick(0);
C_word t1=C_pick(1);
C_word t0=C_pick(2);
C_adjust_stack(-3);
f_14371(t0,t1,t2);}

C_noret_decl(trf_14291)
static void C_fcall trf_14291(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_14291(void *dummy){
C_word t3=C_pick(0);
C_word t2=C_pick(1);
C_word t1=C_pick(2);
C_word t0=C_pick(3);
C_adjust_stack(-4);
f_14291(t0,t1,t2,t3);}

C_noret_decl(trf_14274)
static void C_fcall trf_14274(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_14274(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_14274(t0,t1);}

C_noret_decl(trf_14257)
static void C_fcall trf_14257(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_14257(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_14257(t0,t1);}

C_noret_decl(trf_14090)
static void C_fcall trf_14090(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_14090(void *dummy){
C_word t5=C_pick(0);
C_word t4=C_pick(1);
C_word t3=C_pick(2);
C_word t2=C_pick(3);
C_word t1=C_pick(4);
C_word t0=C_pick(5);
C_adjust_stack(-6);
f_14090(t0,t1,t2,t3,t4,t5);}

C_noret_decl(trf_14100)
static void C_fcall trf_14100(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_14100(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_14100(t0,t1);}

C_noret_decl(trf_13912)
static void C_fcall trf_13912(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_13912(void *dummy){
C_word t4=C_pick(0);
C_word t3=C_pick(1);
C_word t2=C_pick(2);
C_word t1=C_pick(3);
C_word t0=C_pick(4);
C_adjust_stack(-5);
f_13912(t0,t1,t2,t3,t4);}

C_noret_decl(trf_13934)
static void C_fcall trf_13934(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_13934(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_13934(t0,t1);}

C_noret_decl(trf_13753)
static void C_fcall trf_13753(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_13753(void *dummy){
C_word t3=C_pick(0);
C_word t2=C_pick(1);
C_word t1=C_pick(2);
C_word t0=C_pick(3);
C_adjust_stack(-4);
f_13753(t0,t1,t2,t3);}

C_noret_decl(trf_13842)
static void C_fcall trf_13842(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_13842(void *dummy){
C_word t4=C_pick(0);
C_word t3=C_pick(1);
C_word t2=C_pick(2);
C_word t1=C_pick(3);
C_word t0=C_pick(4);
C_adjust_stack(-5);
f_13842(t0,t1,t2,t3,t4);}

C_noret_decl(trf_13856)
static void C_fcall trf_13856(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_13856(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_13856(t0,t1);}

C_noret_decl(trf_13784)
static void C_fcall trf_13784(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_13784(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_13784(t0,t1);}

C_noret_decl(trf_13688)
static void C_fcall trf_13688(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_13688(void *dummy){
C_word t4=C_pick(0);
C_word t3=C_pick(1);
C_word t2=C_pick(2);
C_word t1=C_pick(3);
C_word t0=C_pick(4);
C_adjust_stack(-5);
f_13688(t0,t1,t2,t3,t4);}

C_noret_decl(trf_12195)
static void C_fcall trf_12195(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_12195(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_12195(t0,t1);}

C_noret_decl(trf_12198)
static void C_fcall trf_12198(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_12198(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_12198(t0,t1);}

C_noret_decl(trf_12201)
static void C_fcall trf_12201(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_12201(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_12201(t0,t1);}

C_noret_decl(trf_12204)
static void C_fcall trf_12204(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_12204(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_12204(t0,t1);}

C_noret_decl(trf_12207)
static void C_fcall trf_12207(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_12207(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_12207(t0,t1);}

C_noret_decl(trf_12210)
static void C_fcall trf_12210(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_12210(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_12210(t0,t1);}

C_noret_decl(trf_11972)
static void C_fcall trf_11972(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_11972(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_11972(t0,t1);}

C_noret_decl(trf_12027)
static void C_fcall trf_12027(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_12027(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_12027(t0,t1);}

C_noret_decl(trf_12002)
static void C_fcall trf_12002(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_12002(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_12002(t0,t1);}

C_noret_decl(trf_11843)
static void C_fcall trf_11843(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_11843(void *dummy){
C_word t2=C_pick(0);
C_word t1=C_pick(1);
C_word t0=C_pick(2);
C_adjust_stack(-3);
f_11843(t0,t1,t2);}

C_noret_decl(trf_11766)
static void C_fcall trf_11766(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_11766(void *dummy){
C_word t2=C_pick(0);
C_word t1=C_pick(1);
C_word t0=C_pick(2);
C_adjust_stack(-3);
f_11766(t0,t1,t2);}

C_noret_decl(trf_11748)
static void C_fcall trf_11748(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_11748(void *dummy){
C_word t2=C_pick(0);
C_word t1=C_pick(1);
C_word t0=C_pick(2);
C_adjust_stack(-3);
f_11748(t0,t1,t2);}

C_noret_decl(trf_11730)
static void C_fcall trf_11730(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_11730(void *dummy){
C_word t2=C_pick(0);
C_word t1=C_pick(1);
C_word t0=C_pick(2);
C_adjust_stack(-3);
f_11730(t0,t1,t2);}

C_noret_decl(trf_11706)
static void C_fcall trf_11706(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_11706(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_11706(t0,t1);}

C_noret_decl(trf_11700)
static void C_fcall trf_11700(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_11700(void *dummy){
C_word t4=C_pick(0);
C_word t3=C_pick(1);
C_word t2=C_pick(2);
C_word t1=C_pick(3);
C_word t0=C_pick(4);
C_adjust_stack(-5);
f_11700(t0,t1,t2,t3,t4);}

C_noret_decl(trf_11562)
static void C_fcall trf_11562(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_11562(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_11562(t0,t1);}

C_noret_decl(trf_11445)
static void C_fcall trf_11445(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_11445(void *dummy){
C_word t2=C_pick(0);
C_word t1=C_pick(1);
C_word t0=C_pick(2);
C_adjust_stack(-3);
f_11445(t0,t1,t2);}

C_noret_decl(trf_11454)
static void C_fcall trf_11454(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_11454(void *dummy){
C_word t3=C_pick(0);
C_word t2=C_pick(1);
C_word t1=C_pick(2);
C_word t0=C_pick(3);
C_adjust_stack(-4);
f_11454(t0,t1,t2,t3);}

C_noret_decl(trf_11287)
static void C_fcall trf_11287(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_11287(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_11287(t0,t1);}

C_noret_decl(trf_11303)
static void C_fcall trf_11303(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_11303(void *dummy){
C_word t3=C_pick(0);
C_word t2=C_pick(1);
C_word t1=C_pick(2);
C_word t0=C_pick(3);
C_adjust_stack(-4);
f_11303(t0,t1,t2,t3);}

C_noret_decl(trf_11111)
static void C_fcall trf_11111(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_11111(void *dummy){
C_word t5=C_pick(0);
C_word t4=C_pick(1);
C_word t3=C_pick(2);
C_word t2=C_pick(3);
C_word t1=C_pick(4);
C_word t0=C_pick(5);
C_adjust_stack(-6);
f_11111(t0,t1,t2,t3,t4,t5);}

C_noret_decl(trf_11141)
static void C_fcall trf_11141(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_11141(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_11141(t0,t1);}

C_noret_decl(trf_11124)
static void C_fcall trf_11124(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_11124(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_11124(t0,t1);}

C_noret_decl(trf_10989)
static void C_fcall trf_10989(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_10989(void *dummy){
C_word t5=C_pick(0);
C_word t4=C_pick(1);
C_word t3=C_pick(2);
C_word t2=C_pick(3);
C_word t1=C_pick(4);
C_word t0=C_pick(5);
C_adjust_stack(-6);
f_10989(t0,t1,t2,t3,t4,t5);}

C_noret_decl(trf_11019)
static void C_fcall trf_11019(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_11019(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_11019(t0,t1);}

C_noret_decl(trf_11002)
static void C_fcall trf_11002(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_11002(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_11002(t0,t1);}

C_noret_decl(trf_10892)
static void C_fcall trf_10892(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_10892(void *dummy){
C_word t5=C_pick(0);
C_word t4=C_pick(1);
C_word t3=C_pick(2);
C_word t2=C_pick(3);
C_word t1=C_pick(4);
C_word t0=C_pick(5);
C_adjust_stack(-6);
f_10892(t0,t1,t2,t3,t4,t5);}

C_noret_decl(trf_10905)
static void C_fcall trf_10905(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_10905(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_10905(t0,t1);}

C_noret_decl(trf_10824)
static void C_fcall trf_10824(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_10824(void *dummy){
C_word t3=C_pick(0);
C_word t2=C_pick(1);
C_word t1=C_pick(2);
C_word t0=C_pick(3);
C_adjust_stack(-4);
f_10824(t0,t1,t2,t3);}

C_noret_decl(trf_10794)
static void C_fcall trf_10794(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_10794(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_10794(t0,t1);}

C_noret_decl(trf_10722)
static void C_fcall trf_10722(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_10722(void *dummy){
C_word t3=C_pick(0);
C_word t2=C_pick(1);
C_word t1=C_pick(2);
C_word t0=C_pick(3);
C_adjust_stack(-4);
f_10722(t0,t1,t2,t3);}

C_noret_decl(trf_10521)
static void C_fcall trf_10521(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_10521(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_10521(t0,t1);}

C_noret_decl(trf_10603)
static void C_fcall trf_10603(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_10603(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_10603(t0,t1);}

C_noret_decl(trf_10614)
static void C_fcall trf_10614(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_10614(void *dummy){
C_word t3=C_pick(0);
C_word t2=C_pick(1);
C_word t1=C_pick(2);
C_word t0=C_pick(3);
C_adjust_stack(-4);
f_10614(t0,t1,t2,t3);}

C_noret_decl(trf_10626)
static void C_fcall trf_10626(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_10626(void *dummy){
C_word t2=C_pick(0);
C_word t1=C_pick(1);
C_word t0=C_pick(2);
C_adjust_stack(-3);
f_10626(t0,t1,t2);}

C_noret_decl(trf_10547)
static void C_fcall trf_10547(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_10547(void *dummy){
C_word t2=C_pick(0);
C_word t1=C_pick(1);
C_word t0=C_pick(2);
C_adjust_stack(-3);
f_10547(t0,t1,t2);}

C_noret_decl(trf_10184)
static void C_fcall trf_10184(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_10184(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_10184(t0,t1);}

C_noret_decl(trf_10187)
static void C_fcall trf_10187(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_10187(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_10187(t0,t1);}

C_noret_decl(trf_10193)
static void C_fcall trf_10193(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_10193(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_10193(t0,t1);}

C_noret_decl(trf_10096)
static void C_fcall trf_10096(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_10096(void *dummy){
C_word t4=C_pick(0);
C_word t3=C_pick(1);
C_word t2=C_pick(2);
C_word t1=C_pick(3);
C_word t0=C_pick(4);
C_adjust_stack(-5);
f_10096(t0,t1,t2,t3,t4);}

C_noret_decl(trf_9988)
static void C_fcall trf_9988(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_9988(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_9988(t0,t1);}

C_noret_decl(trf_9993)
static void C_fcall trf_9993(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_9993(void *dummy){
C_word t3=C_pick(0);
C_word t2=C_pick(1);
C_word t1=C_pick(2);
C_word t0=C_pick(3);
C_adjust_stack(-4);
f_9993(t0,t1,t2,t3);}

C_noret_decl(trf_9760)
static void C_fcall trf_9760(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_9760(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_9760(t0,t1);}

C_noret_decl(trf_9763)
static void C_fcall trf_9763(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_9763(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_9763(t0,t1);}

C_noret_decl(trf_9661)
static void C_fcall trf_9661(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_9661(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_9661(t0,t1);}

C_noret_decl(trf_9556)
static void C_fcall trf_9556(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_9556(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_9556(t0,t1);}

C_noret_decl(trf_9565)
static void C_fcall trf_9565(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_9565(void *dummy){
C_word t5=C_pick(0);
C_word t4=C_pick(1);
C_word t3=C_pick(2);
C_word t2=C_pick(3);
C_word t1=C_pick(4);
C_word t0=C_pick(5);
C_adjust_stack(-6);
f_9565(t0,t1,t2,t3,t4,t5);}

C_noret_decl(trf_9578)
static void C_fcall trf_9578(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_9578(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_9578(t0,t1);}

C_noret_decl(trf_9420)
static void C_fcall trf_9420(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_9420(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_9420(t0,t1);}

C_noret_decl(trf_9423)
static void C_fcall trf_9423(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_9423(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_9423(t0,t1);}

C_noret_decl(trf_9425)
static void C_fcall trf_9425(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_9425(void *dummy){
C_word t4=C_pick(0);
C_word t3=C_pick(1);
C_word t2=C_pick(2);
C_word t1=C_pick(3);
C_word t0=C_pick(4);
C_adjust_stack(-5);
f_9425(t0,t1,t2,t3,t4);}

C_noret_decl(trf_9353)
static void C_fcall trf_9353(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_9353(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_9353(t0,t1);}

C_noret_decl(trf_9356)
static void C_fcall trf_9356(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_9356(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_9356(t0,t1);}

C_noret_decl(trf_9359)
static void C_fcall trf_9359(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_9359(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_9359(t0,t1);}

C_noret_decl(trf_9217)
static void C_fcall trf_9217(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_9217(void *dummy){
C_word t3=C_pick(0);
C_word t2=C_pick(1);
C_word t1=C_pick(2);
C_word t0=C_pick(3);
C_adjust_stack(-4);
f_9217(t0,t1,t2,t3);}

C_noret_decl(trf_9233)
static void C_fcall trf_9233(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_9233(void *dummy){
C_word t2=C_pick(0);
C_word t1=C_pick(1);
C_word t0=C_pick(2);
C_adjust_stack(-3);
f_9233(t0,t1,t2);}

C_noret_decl(trf_8955)
static void C_fcall trf_8955(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_8955(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_8955(t0,t1);}

C_noret_decl(trf_8958)
static void C_fcall trf_8958(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_8958(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_8958(t0,t1);}

C_noret_decl(trf_8520)
static void C_fcall trf_8520(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_8520(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_8520(t0,t1);}

C_noret_decl(trf_8439)
static void C_fcall trf_8439(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_8439(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_8439(t0,t1);}

C_noret_decl(trf_8429)
static void C_fcall trf_8429(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_8429(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_8429(t0,t1);}

C_noret_decl(trf_8411)
static void C_fcall trf_8411(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_8411(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_8411(t0,t1);}

C_noret_decl(trf_8400)
static void C_fcall trf_8400(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_8400(void *dummy){
C_word t2=C_pick(0);
C_word t1=C_pick(1);
C_word t0=C_pick(2);
C_adjust_stack(-3);
f_8400(t0,t1,t2);}

C_noret_decl(trf_8362)
static void C_fcall trf_8362(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_8362(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_8362(t0,t1);}

C_noret_decl(trf_8355)
static void C_fcall trf_8355(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_8355(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_8355(t0,t1);}

C_noret_decl(trf_8331)
static void C_fcall trf_8331(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_8331(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_8331(t0,t1);}

C_noret_decl(trf_8264)
static void C_fcall trf_8264(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_8264(void *dummy){
C_word t3=C_pick(0);
C_word t2=C_pick(1);
C_word t1=C_pick(2);
C_word t0=C_pick(3);
C_adjust_stack(-4);
f_8264(t0,t1,t2,t3);}

C_noret_decl(trf_8253)
static void C_fcall trf_8253(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_8253(void *dummy){
C_word t2=C_pick(0);
C_word t1=C_pick(1);
C_word t0=C_pick(2);
C_adjust_stack(-3);
f_8253(t0,t1,t2);}

C_noret_decl(trf_8219)
static void C_fcall trf_8219(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_8219(void *dummy){
C_word t6=C_pick(0);
C_word t5=C_pick(1);
C_word t4=C_pick(2);
C_word t3=C_pick(3);
C_word t2=C_pick(4);
C_word t1=C_pick(5);
C_word t0=C_pick(6);
C_adjust_stack(-7);
f_8219(t0,t1,t2,t3,t4,t5,t6);}

C_noret_decl(trf_8192)
static void C_fcall trf_8192(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_8192(void *dummy){
C_word t6=C_pick(0);
C_word t5=C_pick(1);
C_word t4=C_pick(2);
C_word t3=C_pick(3);
C_word t2=C_pick(4);
C_word t1=C_pick(5);
C_word t0=C_pick(6);
C_adjust_stack(-7);
f_8192(t0,t1,t2,t3,t4,t5,t6);}

C_noret_decl(trf_8151)
static void C_fcall trf_8151(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_8151(void *dummy){
C_word t2=C_pick(0);
C_word t1=C_pick(1);
C_word t0=C_pick(2);
C_adjust_stack(-3);
f_8151(t0,t1,t2);}

C_noret_decl(trf_8157)
static void C_fcall trf_8157(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_8157(void *dummy){
C_word t2=C_pick(0);
C_word t1=C_pick(1);
C_word t0=C_pick(2);
C_adjust_stack(-3);
f_8157(t0,t1,t2);}

C_noret_decl(trf_8167)
static void C_fcall trf_8167(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_8167(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_8167(t0,t1);}

C_noret_decl(trf_8032)
static void C_fcall trf_8032(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_8032(void *dummy){
C_word t3=C_pick(0);
C_word t2=C_pick(1);
C_word t1=C_pick(2);
C_word t0=C_pick(3);
C_adjust_stack(-4);
f_8032(t0,t1,t2,t3);}

C_noret_decl(trf_8045)
static void C_fcall trf_8045(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_8045(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_8045(t0,t1);}

C_noret_decl(trf_7993)
static void C_fcall trf_7993(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_7993(void *dummy){
C_word t4=C_pick(0);
C_word t3=C_pick(1);
C_word t2=C_pick(2);
C_word t1=C_pick(3);
C_word t0=C_pick(4);
C_adjust_stack(-5);
f_7993(t0,t1,t2,t3,t4);}

C_noret_decl(trf_8003)
static void C_fcall trf_8003(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_8003(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_8003(t0,t1);}

C_noret_decl(trf_7953)
static void C_fcall trf_7953(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_7953(void *dummy){
C_word t4=C_pick(0);
C_word t3=C_pick(1);
C_word t2=C_pick(2);
C_word t1=C_pick(3);
C_word t0=C_pick(4);
C_adjust_stack(-5);
f_7953(t0,t1,t2,t3,t4);}

C_noret_decl(trf_7963)
static void C_fcall trf_7963(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_7963(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_7963(t0,t1);}

C_noret_decl(trf_7877)
static void C_fcall trf_7877(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_7877(void *dummy){
C_word t3=C_pick(0);
C_word t2=C_pick(1);
C_word t1=C_pick(2);
C_word t0=C_pick(3);
C_adjust_stack(-4);
f_7877(t0,t1,t2,t3);}

C_noret_decl(trf_7854)
static void C_fcall trf_7854(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_7854(void *dummy){
C_word t3=C_pick(0);
C_word t2=C_pick(1);
C_word t1=C_pick(2);
C_word t0=C_pick(3);
C_adjust_stack(-4);
f_7854(t0,t1,t2,t3);}

C_noret_decl(trf_7800)
static void C_fcall trf_7800(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_7800(void *dummy){
C_word t4=C_pick(0);
C_word t3=C_pick(1);
C_word t2=C_pick(2);
C_word t1=C_pick(3);
C_word t0=C_pick(4);
C_adjust_stack(-5);
f_7800(t0,t1,t2,t3,t4);}

C_noret_decl(trf_7685)
static void C_fcall trf_7685(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_7685(void *dummy){
C_word t2=C_pick(0);
C_word t1=C_pick(1);
C_word t0=C_pick(2);
C_adjust_stack(-3);
f_7685(t0,t1,t2);}

C_noret_decl(trf_7723)
static void C_fcall trf_7723(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_7723(void *dummy){
C_word t2=C_pick(0);
C_word t1=C_pick(1);
C_word t0=C_pick(2);
C_adjust_stack(-3);
f_7723(t0,t1,t2);}

C_noret_decl(trf_7346)
static void C_fcall trf_7346(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_7346(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_7346(t0,t1);}

C_noret_decl(trf_7013)
static void C_fcall trf_7013(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_7013(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_7013(t0,t1);}

C_noret_decl(trf_7025)
static void C_fcall trf_7025(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_7025(void *dummy){
C_word t5=C_pick(0);
C_word t4=C_pick(1);
C_word t3=C_pick(2);
C_word t2=C_pick(3);
C_word t1=C_pick(4);
C_word t0=C_pick(5);
C_adjust_stack(-6);
f_7025(t0,t1,t2,t3,t4,t5);}

C_noret_decl(trf_7078)
static void C_fcall trf_7078(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_7078(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_7078(t0,t1);}

C_noret_decl(trf_7037)
static void C_fcall trf_7037(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_7037(void *dummy){
C_word t2=C_pick(0);
C_word t1=C_pick(1);
C_word t0=C_pick(2);
C_adjust_stack(-3);
f_7037(t0,t1,t2);}

C_noret_decl(trf_7050)
static void C_fcall trf_7050(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_7050(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_7050(t0,t1);}

C_noret_decl(tr6)
static void C_fcall tr6(C_proc6 k) C_regparm C_noret;
C_regparm static void C_fcall tr6(C_proc6 k){
C_word t5=C_pick(0);
C_word t4=C_pick(1);
C_word t3=C_pick(2);
C_word t2=C_pick(3);
C_word t1=C_pick(4);
C_word t0=C_pick(5);
C_adjust_stack(-6);
(k)(6,t0,t1,t2,t3,t4,t5);}

C_noret_decl(tr7)
static void C_fcall tr7(C_proc7 k) C_regparm C_noret;
C_regparm static void C_fcall tr7(C_proc7 k){
C_word t6=C_pick(0);
C_word t5=C_pick(1);
C_word t4=C_pick(2);
C_word t3=C_pick(3);
C_word t2=C_pick(4);
C_word t1=C_pick(5);
C_word t0=C_pick(6);
C_adjust_stack(-7);
(k)(7,t0,t1,t2,t3,t4,t5,t6);}

C_noret_decl(tr5)
static void C_fcall tr5(C_proc5 k) C_regparm C_noret;
C_regparm static void C_fcall tr5(C_proc5 k){
C_word t4=C_pick(0);
C_word t3=C_pick(1);
C_word t2=C_pick(2);
C_word t1=C_pick(3);
C_word t0=C_pick(4);
C_adjust_stack(-5);
(k)(5,t0,t1,t2,t3,t4);}

C_noret_decl(tr3)
static void C_fcall tr3(C_proc3 k) C_regparm C_noret;
C_regparm static void C_fcall tr3(C_proc3 k){
C_word t2=C_pick(0);
C_word t1=C_pick(1);
C_word t0=C_pick(2);
C_adjust_stack(-3);
(k)(3,t0,t1,t2);}

C_noret_decl(tr4)
static void C_fcall tr4(C_proc4 k) C_regparm C_noret;
C_regparm static void C_fcall tr4(C_proc4 k){
C_word t3=C_pick(0);
C_word t2=C_pick(1);
C_word t1=C_pick(2);
C_word t0=C_pick(3);
C_adjust_stack(-4);
(k)(4,t0,t1,t2,t3);}

C_noret_decl(tr2)
static void C_fcall tr2(C_proc2 k) C_regparm C_noret;
C_regparm static void C_fcall tr2(C_proc2 k){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
(k)(2,t0,t1);}

C_noret_decl(tr7r)
static void C_fcall tr7r(C_proc7 k) C_regparm C_noret;
C_regparm static void C_fcall tr7r(C_proc7 k){
int n;
C_word *a,t7;
C_word t6=C_pick(0);
C_word t5=C_pick(1);
C_word t4=C_pick(2);
C_word t3=C_pick(3);
C_word t2=C_pick(4);
C_word t1=C_pick(5);
C_word t0=C_pick(6);
C_adjust_stack(-7);
n=C_rest_count(0);
a=C_alloc(n*3);
t7=C_restore_rest(a,n);
(k)(t0,t1,t2,t3,t4,t5,t6,t7);}

C_noret_decl(tr6r)
static void C_fcall tr6r(C_proc6 k) C_regparm C_noret;
C_regparm static void C_fcall tr6r(C_proc6 k){
int n;
C_word *a,t6;
C_word t5=C_pick(0);
C_word t4=C_pick(1);
C_word t3=C_pick(2);
C_word t2=C_pick(3);
C_word t1=C_pick(4);
C_word t0=C_pick(5);
C_adjust_stack(-6);
n=C_rest_count(0);
a=C_alloc(n*3);
t6=C_restore_rest(a,n);
(k)(t0,t1,t2,t3,t4,t5,t6);}

C_noret_decl(tr5r)
static void C_fcall tr5r(C_proc5 k) C_regparm C_noret;
C_regparm static void C_fcall tr5r(C_proc5 k){
int n;
C_word *a,t5;
C_word t4=C_pick(0);
C_word t3=C_pick(1);
C_word t2=C_pick(2);
C_word t1=C_pick(3);
C_word t0=C_pick(4);
C_adjust_stack(-5);
n=C_rest_count(0);
a=C_alloc(n*3);
t5=C_restore_rest(a,n);
(k)(t0,t1,t2,t3,t4,t5);}

C_noret_decl(tr2r)
static void C_fcall tr2r(C_proc2 k) C_regparm C_noret;
C_regparm static void C_fcall tr2r(C_proc2 k){
int n;
C_word *a,t2;
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
n=C_rest_count(0);
a=C_alloc(n*3);
t2=C_restore_rest(a,n);
(k)(t0,t1,t2);}

C_noret_decl(tr4r)
static void C_fcall tr4r(C_proc4 k) C_regparm C_noret;
C_regparm static void C_fcall tr4r(C_proc4 k){
int n;
C_word *a,t4;
C_word t3=C_pick(0);
C_word t2=C_pick(1);
C_word t1=C_pick(2);
C_word t0=C_pick(3);
C_adjust_stack(-4);
n=C_rest_count(0);
a=C_alloc(n*3);
t4=C_restore_rest(a,n);
(k)(t0,t1,t2,t3,t4);}

C_noret_decl(tr3r)
static void C_fcall tr3r(C_proc3 k) C_regparm C_noret;
C_regparm static void C_fcall tr3r(C_proc3 k){
int n;
C_word *a,t3;
C_word t2=C_pick(0);
C_word t1=C_pick(1);
C_word t0=C_pick(2);
C_adjust_stack(-3);
n=C_rest_count(0);
a=C_alloc(n*3);
t3=C_restore_rest(a,n);
(k)(t0,t1,t2,t3);}

C_noret_decl(tr3rv)
static void C_fcall tr3rv(C_proc3 k) C_regparm C_noret;
C_regparm static void C_fcall tr3rv(C_proc3 k){
int n;
C_word *a,t3;
C_word t2=C_pick(0);
C_word t1=C_pick(1);
C_word t0=C_pick(2);
C_adjust_stack(-3);
n=C_rest_count(0);
a=C_alloc(n+1);
t3=C_restore_rest_vector(a,n);
(k)(t0,t1,t2,t3);}

C_noret_decl(tr2rv)
static void C_fcall tr2rv(C_proc2 k) C_regparm C_noret;
C_regparm static void C_fcall tr2rv(C_proc2 k){
int n;
C_word *a,t2;
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
n=C_rest_count(0);
a=C_alloc(n+1);
t2=C_restore_rest_vector(a,n);
(k)(t0,t1,t2);}

/* toplevel */
static C_TLS int toplevel_initialized=0;
C_noret_decl(toplevel_trampoline)
static void C_fcall toplevel_trampoline(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall toplevel_trampoline(void *dummy){
C_grace_toplevel(2,C_SCHEME_UNDEFINED,C_restore);}

void C_ccall C_grace_toplevel(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word *a;
if(toplevel_initialized) C_kontinue(t1,C_SCHEME_UNDEFINED);
else C_toplevel_entry(C_text("grace_toplevel"));
C_check_nursery_minimum(3);
if(!C_demand(3)){
C_save(t1);
C_reclaim((void*)toplevel_trampoline,NULL);}
toplevel_initialized=1;
if(!C_demand_2(6234)){
C_save(t1);
C_rereclaim2(6234*sizeof(C_word), 1);
t1=C_restore;}
a=C_alloc(3);
C_initialize_lf(lf,1034);
lf[0]=C_h_intern(&lf[0],14,"expand-optkeys");
lf[1]=C_h_intern(&lf[1],3,"let");
lf[2]=C_h_intern(&lf[2],4,"let*");
lf[3]=C_h_intern(&lf[3],5,"null\077");
lf[4]=C_h_intern(&lf[4],5,"error");
lf[5]=C_decode_literal(C_heaptop,"\376B\000\000\022Too many arguments");
lf[6]=C_h_intern(&lf[6],6,"unless");
lf[7]=C_h_intern(&lf[7],10,"\003sysappend");
lf[8]=C_h_intern(&lf[8],3,"car");
lf[9]=C_h_intern(&lf[9],4,"case");
lf[10]=C_decode_literal(C_heaptop,"\376B\000\000\031Positional after keywords");
lf[11]=C_h_intern(&lf[11],4,"when");
lf[12]=C_h_intern(&lf[12],4,"set!");
lf[13]=C_h_intern(&lf[13],8,"keyword\077");
lf[14]=C_decode_literal(C_heaptop,"\376B\000\000\017Unknown keyword");
lf[15]=C_h_intern(&lf[15],3,"cdr");
lf[16]=C_h_intern(&lf[16],4,"else");
lf[17]=C_h_intern(&lf[17],7,"\003sysmap");
lf[18]=C_h_intern(&lf[18],6,"append");
lf[19]=C_decode_literal(C_heaptop,"\376B\000\000\021Redundant keyword");
lf[20]=C_h_intern(&lf[20],2,"if");
lf[21]=C_decode_literal(C_heaptop,"\376B\000\000\030Missing keyword value in");
lf[22]=C_h_intern(&lf[22],4,"cadr");
lf[23]=C_h_intern(&lf[23],4,"cddr");
lf[24]=C_h_intern(&lf[24],15,"string->keyword");
lf[25]=C_h_intern(&lf[25],14,"symbol->string");
lf[26]=C_h_intern(&lf[26],6,"gensym");
lf[27]=C_decode_literal(C_heaptop,"\376B\000\000\004keyp");
lf[28]=C_decode_literal(C_heaptop,"\376B\000\000\004args");
lf[29]=C_h_intern(&lf[29],10,"*messages*");
lf[30]=C_h_intern(&lf[30],11,"expand-send");
lf[31]=C_h_intern(&lf[31],7,"sprintf");
lf[32]=C_decode_literal(C_heaptop,"\376B\000\000\003~A:");
lf[33]=C_h_intern(&lf[33],15,"keyword->string");
lf[34]=C_decode_literal(C_heaptop,"\376B\000\000\031~S duplicate keyword \047~S\047");
lf[35]=C_decode_literal(C_heaptop,"\376B\000\000!~S missing value for keyword \047~A\047");
lf[36]=C_decode_literal(C_heaptop,"\376B\000\000/~S invalid keyword \047~A\047~%Available keywords: ~A");
lf[37]=C_decode_literal(C_heaptop,"\376B\000\000 ~S expected keyword but got \047~S\047");
lf[38]=C_decode_literal(C_heaptop,"\376B\000\000#~S expected ~A arguments but got ~A");
lf[39]=C_h_intern(&lf[39],5,"&rest");
lf[40]=C_decode_literal(C_heaptop,"\376B\000\000\030~S is an invalid message");
lf[41]=C_h_intern(&lf[41],14,"hash-table-ref");
lf[42]=C_h_intern(&lf[42],3,"cwd");
lf[43]=C_h_intern(&lf[43],17,"\003syspeek-c-string");
lf[44]=C_h_intern(&lf[44],5,"chdir");
lf[45]=C_decode_literal(C_heaptop,"\376B\000\000\002~/");
lf[46]=C_h_intern(&lf[46],17,"\003sysmake-c-string");
lf[47]=C_h_intern(&lf[47],5,"shell");
lf[48]=C_decode_literal(C_heaptop,"\376B\000\000\023/tmp/grace-tempfile");
lf[49]=C_decode_literal(C_heaptop,"\376B\000\000\000");
lf[50]=C_decode_literal(C_heaptop,"\376B\000\000\000");
lf[51]=C_h_intern(&lf[51],5,"print");
lf[52]=C_h_intern(&lf[52],6,"system");
lf[53]=C_h_intern(&lf[53],13,"string-append");
lf[54]=C_decode_literal(C_heaptop,"\376B\000\000\003rm ");
lf[55]=C_h_intern(&lf[55],16,"close-input-port");
lf[56]=C_h_intern(&lf[56],9,"read-line");
lf[57]=C_h_intern(&lf[57],15,"open-input-file");
lf[58]=C_h_intern(&lf[58],16,"\003syslist->string");
lf[59]=C_decode_literal(C_heaptop,"\376B\000\000\003 > ");
lf[60]=C_h_intern(&lf[60],5,"first");
lf[61]=C_h_intern(&lf[61],6,"second");
lf[62]=C_h_intern(&lf[62],5,"third");
lf[63]=C_h_intern(&lf[63],5,"caddr");
lf[64]=C_h_intern(&lf[64],6,"fourth");
lf[65]=C_h_intern(&lf[65],6,"cadddr");
lf[66]=C_h_intern(&lf[66],5,"fifth");
lf[67]=C_h_intern(&lf[67],5,"sixth");
lf[68]=C_h_intern(&lf[68],7,"seventh");
lf[69]=C_h_intern(&lf[69],6,"eighth");
lf[70]=C_h_intern(&lf[70],5,"ninth");
lf[71]=C_h_intern(&lf[71],5,"tenth");
lf[72]=C_h_intern(&lf[72],3,"nth");
lf[73]=C_h_intern(&lf[73],8,"list-ref");
lf[74]=C_h_intern(&lf[74],4,"rest");
lf[75]=C_h_intern(&lf[75],4,"last");
lf[76]=C_h_intern(&lf[76],7,"butlast");
lf[77]=C_h_intern(&lf[77],4,"tail");
lf[78]=C_h_intern(&lf[78],5,"list*");
lf[79]=C_decode_literal(C_heaptop,"\376B\000\000&>>> Error: too few arguments to list*.");
lf[80]=C_h_intern(&lf[80],6,"concat");
lf[81]=C_h_intern(&lf[81],9,"list-set!");
lf[82]=C_h_intern(&lf[82],8,"reverse!");
lf[83]=C_h_intern(&lf[83],9,"make-list");
lf[84]=C_decode_literal(C_heaptop,"\376B\000\000\034Negative length to make-list");
lf[85]=C_h_intern(&lf[85],10,"list-index");
lf[86]=C_h_intern(&lf[86],9,"list-find");
lf[87]=C_h_intern(&lf[87],6,"every\077");
lf[113]=C_h_intern(&lf[113],5,"log10");
lf[114]=C_h_intern(&lf[114],4,"log2");
lf[115]=C_h_intern(&lf[115],7,"rescale");
lf[116]=C_h_intern(&lf[116],8,"discrete");
lf[117]=C_h_intern(&lf[117],4,"not\077");
lf[118]=C_h_intern(&lf[118],3,"int");
lf[119]=C_h_intern(&lf[119],5,"float");
lf[120]=C_decode_literal(C_heaptop,"\376U1.0\000");
lf[121]=C_decode_literal(C_heaptop,"\376U1.0\000");
lf[122]=C_h_intern(&lf[122],2,"pi");
lf[123]=C_decode_literal(C_heaptop,"\376U3.14159265358979\000");
lf[124]=C_h_intern(&lf[124],20,"most-positive-fixnum");
lf[125]=C_h_intern(&lf[125],20,"most-negative-fixnum");
lf[126]=C_h_intern(&lf[126],4,"plus");
lf[127]=C_h_intern(&lf[127],1,"+");
lf[128]=C_h_intern(&lf[128],5,"times");
lf[129]=C_h_intern(&lf[129],1,"*");
lf[130]=C_h_intern(&lf[130],5,"minus");
lf[131]=C_h_intern(&lf[131],1,"-");
lf[132]=C_h_intern(&lf[132],6,"divide");
lf[133]=C_h_intern(&lf[133],1,"/");
lf[134]=C_h_intern(&lf[134],8,"quantize");
lf[135]=C_h_intern(&lf[135],8,"decimals");
lf[136]=C_h_intern(&lf[136],5,"round");
lf[137]=C_h_intern(&lf[137],4,"expt");
lf[138]=C_decode_literal(C_heaptop,"\376U10.0\000");
lf[139]=C_h_intern(&lf[139],15,"rhythm->seconds");
lf[140]=C_decode_literal(C_heaptop,"\376U60.0\000");
lf[141]=C_decode_literal(C_heaptop,"\376U0.25\000");
lf[142]=C_h_intern(&lf[142],6,"\000tempo");
lf[143]=C_h_intern(&lf[143],5,"\000beat");
lf[144]=C_h_intern(&lf[144],12,"cents->ratio");
lf[145]=C_h_intern(&lf[145],12,"ratio->cents");
lf[147]=C_decode_literal(C_heaptop,"\376B\000\000\033not an x y coordinate list:");
lf[148]=C_h_intern(&lf[148],3,"err");
lf[149]=C_decode_literal(C_heaptop,"\376B\000\000\032not an x y coordinate list");
lf[150]=C_decode_literal(C_heaptop,"\376B\000\000\032not an x y coordinate list");
lf[151]=C_h_intern(&lf[151],6,"interp");
lf[152]=C_decode_literal(C_heaptop,"\376B\000\000\027missing x y coordinates");
lf[153]=C_h_intern(&lf[153],8,"tendency");
lf[154]=C_h_intern(&lf[154],3,"ran");
lf[155]=C_h_intern(&lf[155],3,"fit");
lf[156]=C_h_intern(&lf[156],9,"remainder");
lf[157]=C_decode_literal(C_heaptop,"\376B\000\000\021mode not 1 2 or 3");
lf[158]=C_h_intern(&lf[158],5,"scale");
lf[159]=C_h_intern(&lf[159],6,"modulo");
lf[160]=C_decode_literal(C_heaptop,"\376B\000\000\023limit same as start");
lf[161]=C_h_intern(&lf[161],8,"ran-set!");
lf[162]=C_h_intern(&lf[162],7,"between");
lf[163]=C_h_intern(&lf[163],4,"pick");
lf[164]=C_h_intern(&lf[164],4,"odds");
lf[165]=C_decode_literal(C_heaptop,"\376U1.0\000");
lf[166]=C_h_intern(&lf[166],5,"\000true");
lf[167]=C_h_intern(&lf[167],6,"\000false");
lf[168]=C_h_intern(&lf[168],4,"vary");
lf[169]=C_decode_literal(C_heaptop,"\376U0.5\000");
lf[170]=C_decode_literal(C_heaptop,"\376B\000\000\020Not a legal mode");
lf[171]=C_h_intern(&lf[171],8,"shuffle!");
lf[172]=C_h_intern(&lf[172],7,"shuffle");
lf[173]=C_h_intern(&lf[173],6,"ranlow");
lf[174]=C_h_intern(&lf[174],7,"ranhigh");
lf[175]=C_h_intern(&lf[175],9,"ranmiddle");
lf[176]=C_h_intern(&lf[176],7,"ranbeta");
lf[177]=C_decode_literal(C_heaptop,"\376U0.5\000");
lf[178]=C_h_intern(&lf[178],2,"\000a");
lf[179]=C_h_intern(&lf[179],2,"\000b");
lf[180]=C_h_intern(&lf[180],6,"ranexp");
lf[181]=C_h_intern(&lf[181],8,"rangauss");
lf[182]=C_h_intern(&lf[182],9,"rancauchy");
lf[183]=C_h_intern(&lf[183],10,"ranpoisson");
lf[184]=C_h_intern(&lf[184],3,"arg");
lf[185]=C_h_intern(&lf[185],8,"rangamma");
lf[186]=C_h_intern(&lf[186],8,"ranbrown");
lf[187]=C_h_intern(&lf[187],7,"ranpink");
lf[188]=C_h_intern(&lf[188],4,"segs");
lf[189]=C_decode_literal(C_heaptop,"\376B\000\000\014Illegal base");
lf[190]=C_decode_literal(C_heaptop,"\376B\000\000\020Not a legal mode");
lf[193]=C_decode_literal(C_heaptop,"\376B\000\000\021Not a note or key");
lf[194]=C_decode_literal(C_heaptop,"\376B\000\000\021Not a note or key");
lf[196]=C_decode_literal(C_heaptop,"\376B\000\000\021Not a note or key");
lf[197]=C_decode_literal(C_heaptop,"\376B\000\000\021Not a note or key");
lf[198]=C_decode_literal(C_heaptop,"\376U0.333333333333333\000");
lf[199]=C_decode_literal(C_heaptop,"\376U0.666666666666667\000");
lf[200]=C_decode_literal(C_heaptop,"\376U0.5\000");
lf[201]=C_h_intern(&lf[201],5,"floor");
lf[202]=C_decode_literal(C_heaptop,"\376B\000\000\021Not a note or key");
lf[203]=C_h_intern(&lf[203],4,"note");
lf[204]=C_decode_literal(C_heaptop,"\376B\000\000\0014");
lf[205]=C_h_intern(&lf[205],3,"key");
lf[206]=C_decode_literal(C_heaptop,"\376B\000\000\0014");
lf[207]=C_h_intern(&lf[207],2,"hz");
lf[208]=C_decode_literal(C_heaptop,"\376B\000\000\0014");
lf[209]=C_h_intern(&lf[209],2,"pc");
lf[210]=C_h_intern(&lf[210],6,"invert");
lf[211]=C_decode_literal(C_heaptop,"\376B\000\000\020No inversion for");
lf[212]=C_decode_literal(C_heaptop,"\376B\000\000\020No inversion for");
lf[213]=C_h_intern(&lf[213],9,"transpose");
lf[214]=C_decode_literal(C_heaptop,"\376B\000\000\022No transposion for");
lf[215]=C_h_intern(&lf[215],10,"retrograde");
lf[216]=C_h_intern(&lf[216],7,"reverse");
lf[217]=C_h_intern(&lf[217],11,"scale-order");
lf[218]=C_h_intern(&lf[218],4,"sort");
lf[219]=C_decode_literal(C_heaptop,"\376B\000\000\020Not a legal mode");
lf[221]=C_h_intern(&lf[221],8,"spectrum");
lf[223]=C_h_intern(&lf[223],13,"spectrum-time");
lf[225]=C_h_intern(&lf[225],14,"\003sysblock-set!");
lf[226]=C_h_intern(&lf[226],13,"spectrum-size");
lf[228]=C_h_intern(&lf[228],14,"spectrum-freqs");
lf[230]=C_h_intern(&lf[230],13,"spectrum-amps");
lf[231]=C_h_intern(&lf[231],13,"spectrum-copy");
lf[232]=C_h_intern(&lf[232],14,"spectrum-pairs");
lf[233]=C_decode_literal(C_heaptop,"\376U0.0\000");
lf[234]=C_h_intern(&lf[234],16,"spectrum-minfreq");
lf[235]=C_h_intern(&lf[235],16,"spectrum-maxfreq");
lf[236]=C_h_intern(&lf[236],15,"spectrum-minamp");
lf[237]=C_h_intern(&lf[237],12,"\003sysfor-each");
lf[238]=C_decode_literal(C_heaptop,"\376U0.0\000");
lf[239]=C_h_intern(&lf[239],15,"spectrum-maxamp");
lf[240]=C_decode_literal(C_heaptop,"\376U0.0\000");
lf[241]=C_h_intern(&lf[241],13,"spectrum-keys");
lf[242]=C_h_intern(&lf[242],8,"for-each");
lf[243]=C_h_intern(&lf[243],6,"\000order");
lf[244]=C_h_intern(&lf[244],7,"\000thresh");
lf[245]=C_h_intern(&lf[245],6,"\000quant");
lf[246]=C_h_intern(&lf[246],7,"\000unique");
lf[247]=C_h_intern(&lf[247],4,"\000min");
lf[248]=C_h_intern(&lf[248],4,"\000max");
lf[249]=C_h_intern(&lf[249],11,"fm-spectrum");
lf[250]=C_h_intern(&lf[250],8,"set-car!");
lf[251]=C_h_intern(&lf[251],4,"caar");
lf[252]=C_decode_literal(C_heaptop,"\376U0.0\000");
lf[253]=C_decode_literal(C_heaptop,"\376U0.0\000");
lf[254]=C_h_intern(&lf[254],13,"spectrum-add!");
lf[255]=C_h_intern(&lf[255],11,"rm-spectrum");
lf[256]=C_decode_literal(C_heaptop,"\376U0.0\000");
lf[257]=C_decode_literal(C_heaptop,"\376U0.0\000");
lf[258]=C_decode_literal(C_heaptop,"\376U0.0\000");
lf[259]=C_decode_literal(C_heaptop,"\376U0.0\000");
lf[260]=C_h_intern(&lf[260],14,"spectrum-flip!");
lf[261]=C_h_intern(&lf[261],17,"spectrum-rescale!");
lf[262]=C_h_intern(&lf[262],5,"sort!");
lf[263]=C_h_intern(&lf[263],3,"map");
lf[264]=C_h_intern(&lf[264],2,"<=");
lf[265]=C_decode_literal(C_heaptop,"\376B\000\000\037Non-numerical y can\047t be scaler");
lf[266]=C_h_intern(&lf[266],7,"number\077");
lf[267]=C_decode_literal(C_heaptop,"\376B\000\000\014Mode not 1-8");
lf[268]=C_decode_literal(C_heaptop,"\376B\000\000%Need a scaler, envelope or x y values");
lf[269]=C_decode_literal(C_heaptop,"\376B\000\000\024Not a number or pair");
lf[270]=C_h_intern(&lf[270],19,"import-spear-frames");
lf[271]=C_decode_literal(C_heaptop,"\376B\000\000\016Not frame data");
lf[272]=C_decode_literal(C_heaptop,"\376B\000\000\016Bad frame data");
lf[273]=C_h_intern(&lf[273],4,"read");
lf[274]=C_h_intern(&lf[274],17,"open-input-string");
lf[275]=C_decode_literal(C_heaptop,"\376B\000\000\012frame-data");
lf[276]=C_decode_literal(C_heaptop,"\376B\000\000$point-type index frequency amplitude");
lf[277]=C_decode_literal(C_heaptop,"\376B\000\000\016Not frame data");
lf[278]=C_decode_literal(C_heaptop,"\376B\000\000\025par-text-frame-format");
lf[279]=C_decode_literal(C_heaptop,"\376B\000\000\016Not frame data");
lf[280]=C_h_intern(&lf[280],18,"current-input-port");
lf[281]=C_h_intern(&lf[281],20,"with-input-from-file");
lf[282]=C_h_intern(&lf[282],19,"export-spear-frames");
lf[283]=C_h_intern(&lf[283],6,"format");
lf[284]=C_decode_literal(C_heaptop,"\376B\000\000\002~%");
lf[285]=C_decode_literal(C_heaptop,"\376B\000\000\011 ~S ~S ~S");
lf[286]=C_decode_literal(C_heaptop,"\376U1.0\000");
lf[287]=C_decode_literal(C_heaptop,"\376B\000\000\005~S ~S");
lf[288]=C_decode_literal(C_heaptop,"\376B\000\000\014frame-data~%");
lf[289]=C_decode_literal(C_heaptop,"\376B\000\000\020frame-count ~S~%");
lf[290]=C_decode_literal(C_heaptop,"\376B\000\000\023partials-count ~S~%");
lf[291]=C_decode_literal(C_heaptop,"\376B\000\000&point-type index frequency amplitude~%");
lf[292]=C_decode_literal(C_heaptop,"\376B\000\000\027par-text-frame-format~%");
lf[293]=C_h_intern(&lf[293],19,"current-output-port");
lf[294]=C_h_intern(&lf[294],19,"with-output-to-file");
lf[295]=C_h_intern(&lf[295],3,"max");
lf[297]=C_h_intern(&lf[297],6,"period");
lf[306]=C_h_intern(&lf[306],7,"pattern");
lf[321]=C_h_intern(&lf[321],4,"\000nad");
lf[322]=C_h_intern(&lf[322],8,"\000periods");
lf[323]=C_h_intern(&lf[323],12,"\000depth-first");
lf[325]=C_decode_literal(C_heaptop,"\376U4294967287.0\000");
lf[326]=C_decode_literal(C_heaptop,"\376U4294967287.0\000");
lf[327]=C_h_intern(&lf[327],14,"\000breadth-first");
lf[328]=C_decode_literal(C_heaptop,"\376B\000\000\026Illegal for traversing");
lf[329]=C_h_intern(&lf[329],7,"\000values");
lf[330]=C_decode_literal(C_heaptop,"\376B\000\000\024Illegal for counting");
lf[332]=C_h_intern(&lf[332],4,"eop\077");
lf[333]=C_h_intern(&lf[333],4,"\000eop");
lf[334]=C_h_intern(&lf[334],4,"eod\077");
lf[335]=C_h_intern(&lf[335],4,"\000eod");
lf[336]=C_h_intern(&lf[336],4,"next");
lf[340]=C_h_intern(&lf[340],5,"force");
lf[341]=C_h_intern(&lf[341],8,"promise\077");
lf[342]=C_h_intern(&lf[342],10,"make-cycle");
lf[344]=C_h_intern(&lf[344],4,"\000for");
lf[345]=C_h_intern(&lf[345],7,"\000repeat");
lf[347]=C_h_intern(&lf[347],5,"palin");
lf[349]=C_h_intern(&lf[349],15,"make-palindrome");
lf[351]=C_h_intern(&lf[351],6,"\000elide");
lf[352]=C_decode_literal(C_heaptop,"\376\003\000\000\002\376\377\006\000\376\003\000\000\002\376\377\006\001\376\377\016");
lf[353]=C_decode_literal(C_heaptop,"\376\003\000\000\002\376\377\006\001\376\003\000\000\002\376\377\006\000\376\377\016");
lf[354]=C_h_intern(&lf[354],9,"make-line");
lf[356]=C_h_intern(&lf[356],9,"make-heap");
lf[358]=C_h_intern(&lf[358],13,"make-rotation");
lf[360]=C_h_intern(&lf[360],7,"\000rotate");
lf[362]=C_h_intern(&lf[362],11,"random-item");
lf[370]=C_h_intern(&lf[370],14,"make-weighting");
lf[373]=C_h_intern(&lf[373],7,"\000weight");
lf[374]=C_decode_literal(C_heaptop,"\376U0.0\000");
lf[375]=C_h_intern(&lf[375],11,"make-markov");
lf[377]=C_h_intern(&lf[377],5,"\000past");
lf[378]=C_h_intern(&lf[378],2,"->");
lf[379]=C_decode_literal(C_heaptop,"\376B\000\000.Left hand sides have different number of items");
lf[380]=C_h_intern(&lf[380],3,"\000->");
lf[381]=C_decode_literal(C_heaptop,"\376B\000\000\042Transition missing right hand side");
lf[382]=C_decode_literal(C_heaptop,"\376B\000\000\030Transition is not a list");
lf[383]=C_decode_literal(C_heaptop,"\376B\000\000 Not a list of Markov transitions");
lf[384]=C_decode_literal(C_heaptop,"\376B\000\000\032No transition matches past");
lf[386]=C_h_intern(&lf[386],10,"graph-node");
lf[387]=C_h_intern(&lf[387],10,"make-graph");
lf[389]=C_h_intern(&lf[389],3,"\000to");
lf[390]=C_h_intern(&lf[390],3,"\000id");
lf[391]=C_decode_literal(C_heaptop,"\376B\000\000\025Graph node not a list");
lf[392]=C_decode_literal(C_heaptop,"\376B\000\000\016Not graph data");
lf[393]=C_decode_literal(C_heaptop,"\376B\000\000\024No graph node for id");
lf[394]=C_h_intern(&lf[394],14,"markov-analyze");
lf[395]=C_decode_literal(C_heaptop,"\376B\000\000\002~s");
lf[396]=C_decode_literal(C_heaptop,"\376\003\000\000\002\376\001\000\000\002->\376\377\016");
lf[397]=C_decode_literal(C_heaptop,"\376B\000\000\001 ");
lf[398]=C_h_intern(&lf[398],7,"newline");
lf[399]=C_h_intern(&lf[399],7,"display");
lf[400]=C_h_intern(&lf[400],19,"\003syswrite-char/port");
lf[401]=C_h_intern(&lf[401],19,"\003sysstandard-output");
lf[402]=C_h_intern(&lf[402],3,"min");
lf[403]=C_decode_literal(C_heaptop,"\376B\000\000\000");
lf[404]=C_decode_literal(C_heaptop,"\376B\000\000\003 ~a");
lf[405]=C_decode_literal(C_heaptop,"\376B\000\000\002~a");
lf[406]=C_decode_literal(C_heaptop,"\376B\000\000\002~a");
lf[407]=C_h_intern(&lf[407],11,"make-string");
lf[408]=C_decode_literal(C_heaptop,"\376U1.0\000");
lf[409]=C_h_intern(&lf[409],1,"<");
lf[410]=C_h_intern(&lf[410],11,"string-ci<\077");
lf[411]=C_decode_literal(C_heaptop,"\376B\000\000\002~a");
lf[412]=C_decode_literal(C_heaptop,"\376B\000\000\002~a");
lf[413]=C_decode_literal(C_heaptop,"\376B\000\000\020Not a legal mode");
lf[414]=C_h_intern(&lf[414],5,"\000mode");
lf[416]=C_h_intern(&lf[416],5,"token");
lf[421]=C_h_intern(&lf[421],1,"t");
lf[426]=C_h_intern(&lf[426],4,"rule");
lf[429]=C_h_intern(&lf[429],22,"hash-table-ref/default");
lf[436]=C_h_intern(&lf[436],11,"parse-error");
lf[440]=C_h_intern(&lf[440],10,"parse-unit");
lf[452]=C_decode_literal(C_heaptop,"\376B\000\000\014no info for ");
lf[454]=C_h_intern(&lf[454],14,"string->symbol");
lf[455]=C_h_intern(&lf[455],6,"equal\077");
lf[456]=C_h_intern(&lf[456],3,"and");
lf[457]=C_h_intern(&lf[457],2,"or");
lf[458]=C_h_intern(&lf[458],3,"not");
lf[459]=C_decode_literal(C_heaptop,"\376B\000\0005emit-token-unit: dont know how to emit slotref token ");
lf[460]=C_decode_literal(C_heaptop,"\376B\000\000\047emit-token-unit: dont know how to emit ");
lf[463]=C_decode_literal(C_heaptop,"\376B\000\000\033emit: dont know how to emit");
lf[465]=C_h_intern(&lf[465],2,"!=");
lf[466]=C_h_intern(&lf[466],1,"=");
lf[471]=C_decode_literal(C_heaptop,"\376B\000\000\035Not a token type or rule type");
lf[472]=C_decode_literal(C_heaptop,"\376B\000\000\047Pattern opr not one of and, or, *, +, @");
lf[473]=C_h_intern(&lf[473],1,"@");
lf[474]=C_decode_literal(C_heaptop,"\376B\000\000\047Not a pattern value or pattern operator");
lf[475]=C_h_intern(&lf[475],6,"printf");
lf[476]=C_decode_literal(C_heaptop,"\376B\000\000!~%parse[~A]: pattern=~S tokens=~S");
lf[481]=C_h_intern(&lf[481],2,">=");
lf[482]=C_decode_literal(C_heaptop,"\376B\000\000\004stop");
lf[483]=C_decode_literal(C_heaptop,"\376B\000\000\004temp");
lf[484]=C_h_intern(&lf[484],5,"begin");
lf[485]=C_decode_literal(C_heaptop,"\376B\000\000\004bool");
lf[486]=C_decode_literal(C_heaptop,"\376B\000\000\004tail");
lf[487]=C_h_intern(&lf[487],1,">");
lf[488]=C_decode_literal(C_heaptop,"\376B\000\000\004goal");
lf[489]=C_decode_literal(C_heaptop,"\376B\000\000\004from");
lf[490]=C_decode_literal(C_heaptop,"\376B\000\000\004step");
lf[494]=C_h_intern(&lf[494],17,"*sal-trace-input*");
lf[495]=C_h_intern(&lf[495],3,"sal");
lf[496]=C_h_intern(&lf[496],11,"print-error");
lf[497]=C_decode_literal(C_heaptop,"\376B\000\000\013>>> Error: ");
lf[498]=C_h_intern(&lf[498],9,"substring");
lf[499]=C_h_intern(&lf[499],2,"pp");
lf[500]=C_h_intern(&lf[500],4,"eval");
lf[501]=C_h_intern(&lf[501],7,"\000syntax");
lf[502]=C_h_intern(&lf[502],7,"\000scheme");
lf[503]=C_decode_literal(C_heaptop,"\376B\000\000\023Illegal statement: ");
lf[504]=C_h_intern(&lf[504],7,"call/cc");
lf[505]=C_decode_literal(C_heaptop,"\376B\000\000\002~S");
lf[506]=C_h_intern(&lf[506],9,"sal:print");
lf[507]=C_h_intern(&lf[507],13,"print-message");
lf[508]=C_decode_literal(C_heaptop,"\376B\000\000\002{}");
lf[509]=C_decode_literal(C_heaptop,"\376B\000\000\001}");
lf[510]=C_decode_literal(C_heaptop,"\376B\000\000\001 ");
lf[511]=C_decode_literal(C_heaptop,"\376B\000\000\001{");
lf[512]=C_decode_literal(C_heaptop,"\376B\000\000\002#t");
lf[513]=C_decode_literal(C_heaptop,"\376B\000\000\002~S");
lf[514]=C_decode_literal(C_heaptop,"\376B\000\000\002#f");
lf[515]=C_decode_literal(C_heaptop,"\376B\000\000\001\012");
lf[516]=C_h_intern(&lf[516],9,"sal:chdir");
lf[517]=C_h_intern(&lf[517],8,"sal:load");
lf[518]=C_h_intern(&lf[518],13,"load-sal-file");
lf[519]=C_h_intern(&lf[519],4,"load");
lf[520]=C_h_intern(&lf[520],15,"\003syssubstring=\077");
lf[521]=C_decode_literal(C_heaptop,"\376B\000\000\004.sal");
lf[522]=C_decode_literal(C_heaptop,"\376B\000\000\010Loading ");
lf[523]=C_decode_literal(C_heaptop,"\376B\000\000\001\012");
lf[524]=C_decode_literal(C_heaptop,"\376B\000\000\021>>> Error: file \042");
lf[525]=C_decode_literal(C_heaptop,"\376B\000\000\020\042does not exist\012");
lf[526]=C_h_intern(&lf[526],12,"file-exists\077");
lf[527]=C_h_intern(&lf[527],8,"sal:open");
lf[528]=C_decode_literal(C_heaptop,"\376B\000\000)>>> Error: open command not implemented.\012");
lf[529]=C_h_intern(&lf[529],10,"sal:output");
lf[530]=C_decode_literal(C_heaptop,"\376B\000\000+>>> Error: output command not implemented.\012");
lf[542]=C_h_intern(&lf[542],8,"operator");
lf[543]=C_h_intern(&lf[543],8,"bindings");
lf[544]=C_h_intern(&lf[544],10,"collectors");
lf[545]=C_h_intern(&lf[545],9,"initially");
lf[546]=C_h_intern(&lf[546],9,"end-tests");
lf[547]=C_h_intern(&lf[547],7,"looping");
lf[548]=C_h_intern(&lf[548],8,"stepping");
lf[549]=C_h_intern(&lf[549],7,"finally");
lf[550]=C_h_intern(&lf[550],9,"returning");
lf[556]=C_decode_literal(C_heaptop,"\376B\000\000\023illegal loop syntax");
lf[557]=C_decode_literal(C_heaptop,"\376B\000\000\002()");
lf[558]=C_decode_literal(C_heaptop,"\376B\000\000\001\047");
lf[559]=C_decode_literal(C_heaptop,"\376B\000\000\001 ");
lf[560]=C_decode_literal(C_heaptop,"\376B\000\000\001\047");
lf[561]=C_decode_literal(C_heaptop,"\376B\000\000\020clause context: ");
lf[562]=C_decode_literal(C_heaptop,"\376B\000\000\014LOOP ERROR: ");
lf[564]=C_decode_literal(C_heaptop,"\376B\000\000*Variable expected but source code ran out.");
lf[565]=C_decode_literal(C_heaptop,"\376B\000\000.\047for\047 clause expected but source code ran out.");
lf[566]=C_decode_literal(C_heaptop,"\376B\000\000\001\047");
lf[567]=C_decode_literal(C_heaptop,"\376B\000\000\001\047");
lf[568]=C_decode_literal(C_heaptop,"\376B\000\000\031 is not valid with \047for\047.");
lf[569]=C_decode_literal(C_heaptop,"\376B\000\000\007Found \047");
lf[570]=C_decode_literal(C_heaptop,"\376B\000\000\034\047 where a variable expected.");
lf[572]=C_h_intern(&lf[572],3,"for");
lf[573]=C_decode_literal(C_heaptop,"\376B\000\000\001v");
lf[574]=C_decode_literal(C_heaptop,"\376B\000\000\001v");
lf[575]=C_h_intern(&lf[575],8,"downfrom");
lf[576]=C_h_intern(&lf[576],5,"above");
lf[577]=C_h_intern(&lf[577],5,"below");
lf[578]=C_h_intern(&lf[578],6,"downto");
lf[579]=C_h_intern(&lf[579],4,"from");
lf[580]=C_decode_literal(C_heaptop,"\376B\000\000\007Found \047");
lf[581]=C_decode_literal(C_heaptop,"\376B\000\000\010\047 when \047");
lf[582]=C_decode_literal(C_heaptop,"\376B\000\000\014\047 in effect.");
lf[583]=C_decode_literal(C_heaptop,"\376B\000\000\007Found \047");
lf[584]=C_decode_literal(C_heaptop,"\376B\000\000\010\047 when \047");
lf[585]=C_decode_literal(C_heaptop,"\376B\000\000\014\047 in effect.");
lf[586]=C_h_intern(&lf[586],2,"to");
lf[587]=C_decode_literal(C_heaptop,"\376B\000\000\007Found \047");
lf[588]=C_decode_literal(C_heaptop,"\376B\000\000\010\047 when \047");
lf[589]=C_decode_literal(C_heaptop,"\376B\000\000\014\047 in effect.");
lf[590]=C_decode_literal(C_heaptop,"\376B\000\000\007Found \047");
lf[591]=C_decode_literal(C_heaptop,"\376B\000\000\010\047 when \047");
lf[592]=C_decode_literal(C_heaptop,"\376B\000\000\014\047 in effect.");
lf[593]=C_decode_literal(C_heaptop,"\376B\000\000\007Found \047");
lf[594]=C_decode_literal(C_heaptop,"\376B\000\000\010\047 when \047");
lf[595]=C_decode_literal(C_heaptop,"\376B\000\000\014\047 in effect.");
lf[596]=C_h_intern(&lf[596],2,"by");
lf[597]=C_decode_literal(C_heaptop,"\376B\000\000\025Found duplicate \047by\047.");
lf[598]=C_decode_literal(C_heaptop,"\376B\000\000\001\047");
lf[599]=C_decode_literal(C_heaptop,"\376B\000\000\032\047 is not valid with \047for\047.");
lf[600]=C_decode_literal(C_heaptop,"\376B\000\000,Expected expression but source code ran out.");
lf[602]=C_decode_literal(C_heaptop,"\376B\000\0001\047repeat\047 clause expected but source code ran out.");
lf[603]=C_decode_literal(C_heaptop,"\376B\000\000\001v");
lf[605]=C_h_intern(&lf[605],6,"across");
lf[606]=C_h_intern(&lf[606],13,"vector-length");
lf[607]=C_h_intern(&lf[607],10,"vector-ref");
lf[608]=C_decode_literal(C_heaptop,"\376B\000\000\001v");
lf[609]=C_decode_literal(C_heaptop,"\376B\000\000\001v");
lf[610]=C_h_intern(&lf[610],4,"over");
lf[611]=C_h_intern(&lf[611],2,"in");
lf[612]=C_h_intern(&lf[612],5,"quote");
lf[613]=C_decode_literal(C_heaptop,"\376B\000\000\014Extraneous \047");
lf[614]=C_decode_literal(C_heaptop,"\376B\000\000\010\047 when \047");
lf[615]=C_decode_literal(C_heaptop,"\376B\000\000\014\047 in effect.");
lf[616]=C_decode_literal(C_heaptop,"\376B\000\000\017Duplicate \047by\047.");
lf[617]=C_decode_literal(C_heaptop,"\376B\000\000\036\047by\047 is invalid with \047across\047.");
lf[618]=C_decode_literal(C_heaptop,"\376B\000\000\001\047");
lf[619]=C_decode_literal(C_heaptop,"\376B\000\000\032\047 is not valid with \047for\047.");
lf[620]=C_h_intern(&lf[620],2,"on");
lf[621]=C_decode_literal(C_heaptop,"\376B\000\000,Expression expected but source code ran out.");
lf[622]=C_decode_literal(C_heaptop,"\376B\000\000\001v");
lf[624]=C_decode_literal(C_heaptop,"\376B\000\000\016Duplicate \047=\047.");
lf[625]=C_h_intern(&lf[625],4,"then");
lf[626]=C_decode_literal(C_heaptop,"\376B\000\000\021Duplicate \047then\047.");
lf[627]=C_decode_literal(C_heaptop,"\376B\000\000\001\047");
lf[628]=C_decode_literal(C_heaptop,"\376B\000\000\032\047 is not valid with \047for\047.");
lf[629]=C_decode_literal(C_heaptop,"\376B\000\000,Expression expected but source code ran out.");
lf[631]=C_h_intern(&lf[631],4,"with");
lf[632]=C_decode_literal(C_heaptop,"\376B\000\000\021Extraneous \047and\047.");
lf[633]=C_decode_literal(C_heaptop,"\376B\000\000\007Found \047");
lf[634]=C_decode_literal(C_heaptop,"\376B\000\000\027\047 where \047and\047 expected.");
lf[635]=C_decode_literal(C_heaptop,"\376B\000\000\007Found \047");
lf[636]=C_decode_literal(C_heaptop,"\376B\000\000\027\047 where \047and\047 expected.");
lf[637]=C_decode_literal(C_heaptop,"\376B\000\000\020Duplicate \047and\047.");
lf[638]=C_decode_literal(C_heaptop,"\376B\000\000\021Extraneous \047and\047.");
lf[639]=C_decode_literal(C_heaptop,"\376B\000\000\037Found \047=\047 where \047and\047 expected.");
lf[640]=C_decode_literal(C_heaptop,"\376B\000\000\007Found \047");
lf[641]=C_decode_literal(C_heaptop,"\376B\000\000\032\047 where variable expected.");
lf[642]=C_decode_literal(C_heaptop,"\376B\000\000\007Found \047");
lf[643]=C_decode_literal(C_heaptop,"\376B\000\000\036\047 where \047=\047 or \047and\047 expected.");
lf[645]=C_decode_literal(C_heaptop,"\376B\000\000\011Missing \047");
lf[646]=C_decode_literal(C_heaptop,"\376B\000\000\015\047 expression.");
lf[648]=C_decode_literal(C_heaptop,"\376B\000\000\011Missing \047");
lf[649]=C_decode_literal(C_heaptop,"\376B\000\000\015\047 expression.");
lf[651]=C_decode_literal(C_heaptop,"\376B\000\000\011Missing \047");
lf[652]=C_decode_literal(C_heaptop,"\376B\000\000\015\047 expression.");
lf[654]=C_h_intern(&lf[654],3,"sum");
lf[655]=C_h_intern(&lf[655],5,"count");
lf[656]=C_decode_literal(C_heaptop,"\376B\000\000\001v");
lf[657]=C_h_intern(&lf[657],8,"minimize");
lf[658]=C_h_intern(&lf[658],8,"maximize");
lf[659]=C_decode_literal(C_heaptop,"\376B\000\000\001v");
lf[660]=C_decode_literal(C_heaptop,"\376B\000\000\001v");
lf[661]=C_h_intern(&lf[661],4,"list");
lf[662]=C_h_intern(&lf[662],8,"set-cdr!");
lf[663]=C_h_intern(&lf[663],9,"last-pair");
lf[664]=C_h_intern(&lf[664],7,"collect");
lf[665]=C_decode_literal(C_heaptop,"\376\003\000\000\002\376\001\000\000\004list\376\003\000\000\002\376\377\006\000\376\377\016");
lf[666]=C_decode_literal(C_heaptop,"\376B\000\000\001v");
lf[667]=C_decode_literal(C_heaptop,"\376B\000\000\001v");
lf[668]=C_decode_literal(C_heaptop,"\376\003\000\000\002\376\001\000\000\004list\376\377\016");
lf[669]=C_h_intern(&lf[669],5,"nconc");
lf[670]=C_decode_literal(C_heaptop,"\376B\000\000\001\047");
lf[671]=C_decode_literal(C_heaptop,"\376B\000\000\007\047 and \047");
lf[672]=C_decode_literal(C_heaptop,"\376B\000\000 \047 are incompatible accumulators.");
lf[673]=C_decode_literal(C_heaptop,"\376\003\000\000\002\376\001\000\000\007collect\376\003\000\000\002\376\001\000\000\006append\376\003\000\000\002\376\001\000\000\005nconc\376\377\016");
lf[674]=C_decode_literal(C_heaptop,"\376\003\000\000\002\376\001\000\000\005never\376\003\000\000\002\376\001\000\000\006always\376\377\016");
lf[675]=C_decode_literal(C_heaptop,"\376\003\000\000\002\376\001\000\000\010minimize\376\003\000\000\002\376\001\000\000\010maximize\376\377\016");
lf[676]=C_h_intern(&lf[676],4,"into");
lf[677]=C_decode_literal(C_heaptop,"\376B\000\000\007Found \047");
lf[678]=C_decode_literal(C_heaptop,"\376B\000\000!\047 where \047into\047 variable expected.");
lf[679]=C_decode_literal(C_heaptop,"\376B\000\000\030Missing \047into\047 variable.");
lf[680]=C_decode_literal(C_heaptop,"\376B\000\000\011Missing \047");
lf[681]=C_decode_literal(C_heaptop,"\376B\000\000\015\047 expression.");
lf[683]=C_h_intern(&lf[683],6,"return");
lf[685]=C_decode_literal(C_heaptop,"\376\003\000\000\002\376\001\000\000\002go\376\003\000\000\002\376\377\006\001\376\377\016");
lf[686]=C_h_intern(&lf[686],5,"until");
lf[687]=C_h_intern(&lf[687],5,"while");
lf[688]=C_decode_literal(C_heaptop,"\376B\000\000\011Missing \047");
lf[689]=C_decode_literal(C_heaptop,"\376B\000\000\015\047 expression.");
lf[691]=C_h_intern(&lf[691],7,"thereis");
lf[692]=C_h_intern(&lf[692],6,"always");
lf[693]=C_h_intern(&lf[693],5,"never");
lf[694]=C_decode_literal(C_heaptop,"\376B\000\000\011Missing \047");
lf[695]=C_decode_literal(C_heaptop,"\376B\000\000\015\047 expression.");
lf[697]=C_decode_literal(C_heaptop,"\376B\000\000\011Missing \047");
lf[698]=C_decode_literal(C_heaptop,"\376B\000\000\015\047 expression.");
lf[700]=C_decode_literal(C_heaptop,"\376B\000\000\025Missing \047and\047 clause.");
lf[701]=C_decode_literal(C_heaptop,"\376B\000\000\001\047");
lf[702]=C_decode_literal(C_heaptop,"\376B\000\000\036\047 is not conditional operator.");
lf[703]=C_h_intern(&lf[703],4,"task");
lf[704]=C_decode_literal(C_heaptop,"\376\003\000\000\002\376\001\000\000\007thereis\376\003\000\000\002\376\001\000\000\005never\376\003\000\000\002\376\001\000\000\006always\376\377\016");
lf[706]=C_decode_literal(C_heaptop,"\376\003\000\000\002\376\001\000\000\004else\376\377\016");
lf[707]=C_decode_literal(C_heaptop,"\376B\000\000\026Missing \047else\047 clause.");
lf[708]=C_decode_literal(C_heaptop,"\376B\000\000\033Missing conditional clause.");
lf[709]=C_decode_literal(C_heaptop,"\376B\000\000\011Missing \047");
lf[710]=C_decode_literal(C_heaptop,"\376B\000\000\015\047 expression.");
lf[712]=C_h_intern(&lf[712],2,"do");
lf[713]=C_decode_literal(C_heaptop,"\376B\000\000\001\047");
lf[714]=C_decode_literal(C_heaptop,"\376B\000\000\030\047 clause cannot follow \047");
lf[715]=C_decode_literal(C_heaptop,"\376B\000\000\002\047.");
lf[716]=C_h_intern(&lf[716],4,"iter");
lf[717]=C_decode_literal(C_heaptop,"\376B\000\000\007Found \047");
lf[718]=C_decode_literal(C_heaptop,"\376B\000\000\032\047 where operator expected.");
lf[719]=C_h_intern(&lf[719],6,"repeat");
lf[720]=C_h_intern(&lf[720],2,"as");
lf[722]=C_h_intern(&lf[722],6,"mm:off");
lf[723]=C_h_intern(&lf[723],5,"mm:on");
lf[724]=C_h_intern(&lf[724],8,"mm:touch");
lf[725]=C_h_intern(&lf[725],7,"mm:ctrl");
lf[726]=C_h_intern(&lf[726],7,"mm:prog");
lf[727]=C_h_intern(&lf[727],8,"mm:press");
lf[728]=C_h_intern(&lf[728],7,"mm:bend");
lf[729]=C_h_intern(&lf[729],10,"mm:make-on");
lf[730]=C_h_intern(&lf[730],5,"\000time");
lf[731]=C_h_intern(&lf[731],4,"\000key");
lf[732]=C_h_intern(&lf[732],4,"\000vel");
lf[733]=C_h_intern(&lf[733],5,"\000chan");
lf[734]=C_h_intern(&lf[734],6,"mm:on\077");
lf[735]=C_h_intern(&lf[735],11,"mm:make-off");
lf[736]=C_h_intern(&lf[736],7,"mm:off\077");
lf[737]=C_h_intern(&lf[737],13,"mm:make-touch");
lf[738]=C_h_intern(&lf[738],4,"\000val");
lf[739]=C_h_intern(&lf[739],9,"mm:touch\077");
lf[740]=C_h_intern(&lf[740],12,"mm:make-ctrl");
lf[741]=C_h_intern(&lf[741],4,"\000num");
lf[742]=C_h_intern(&lf[742],8,"mm:ctrl\077");
lf[743]=C_h_intern(&lf[743],12,"mm:make-prog");
lf[744]=C_h_intern(&lf[744],8,"mm:prog\077");
lf[745]=C_h_intern(&lf[745],13,"mm:make-press");
lf[746]=C_h_intern(&lf[746],9,"mm:press\077");
lf[747]=C_h_intern(&lf[747],12,"mm:make-bend");
lf[748]=C_h_intern(&lf[748],7,"mm:free");
lf[749]=C_h_intern(&lf[749],7,"mm:copy");
lf[750]=C_h_intern(&lf[750],7,"mm:time");
lf[751]=C_h_intern(&lf[751],12,"mm:time-set!");
lf[752]=C_h_intern(&lf[752],7,"mm:chan");
lf[753]=C_h_intern(&lf[753],12,"mm:chan-set!");
lf[754]=C_h_intern(&lf[754],6,"mm:key");
lf[755]=C_h_intern(&lf[755],11,"mm:key-set!");
lf[756]=C_h_intern(&lf[756],6,"mm:vel");
lf[757]=C_h_intern(&lf[757],11,"mm:vel-set!");
lf[758]=C_h_intern(&lf[758],6,"mm:val");
lf[759]=C_h_intern(&lf[759],11,"mm:val-set!");
lf[760]=C_h_intern(&lf[760],1,"k");
lf[761]=C_h_intern(&lf[761],6,"mm:num");
lf[762]=C_h_intern(&lf[762],11,"mm:num-set!");
lf[763]=C_h_intern(&lf[763],7,"mp:note");
lf[764]=C_h_intern(&lf[764],7,"mp:midi");
lf[765]=C_h_intern(&lf[765],6,"mp:off");
lf[766]=C_h_intern(&lf[766],5,"mp:on");
lf[767]=C_h_intern(&lf[767],8,"mp:touch");
lf[768]=C_h_intern(&lf[768],7,"mp:ctrl");
lf[769]=C_h_intern(&lf[769],7,"mp:prog");
lf[770]=C_h_intern(&lf[770],8,"mp:press");
lf[771]=C_h_intern(&lf[771],7,"mp:bend");
lf[772]=C_h_intern(&lf[772],5,"mp:mm");
lf[773]=C_h_intern(&lf[773],9,"mp:inhook");
lf[774]=C_decode_literal(C_heaptop,"\376B\000\000*>>> Error: ~A~%    Aborting MIDI inhook.~%");
lf[775]=C_h_intern(&lf[775],27,"condition-property-accessor");
lf[776]=C_h_intern(&lf[776],3,"exn");
lf[777]=C_h_intern(&lf[777],7,"message");
lf[778]=C_h_intern(&lf[778],22,"with-exception-handler");
lf[779]=C_h_intern(&lf[779],30,"call-with-current-continuation");
lf[780]=C_h_intern(&lf[780],10,"mp:inchans");
lf[781]=C_decode_literal(C_heaptop,"\376B\000\000\031missing channel (0 to 15)");
lf[782]=C_decode_literal(C_heaptop,"\376B\000\000\025not a channel 0 to 15");
lf[783]=C_h_intern(&lf[783],10,"mp:intypes");
lf[784]=C_decode_literal(C_heaptop,"\376B\000\000(missing message type (mm:off to mm:bend)");
lf[785]=C_decode_literal(C_heaptop,"\376B\000\000$not a message type mm:off to mm:bend");
lf[786]=C_h_intern(&lf[786],9,"mp:tuning");
lf[787]=C_decode_literal(C_heaptop,"\376B\000\000\035not a tuning division 1 to 16");
lf[788]=C_h_intern(&lf[788],10,"mp:playseq");
lf[789]=C_h_intern(&lf[789],10,"mp:saveseq");
lf[790]=C_h_intern(&lf[790],10,"mp:copyseq");
lf[791]=C_h_intern(&lf[791],10,"mp:plotseq");
lf[792]=C_h_intern(&lf[792],11,"mp:clearseq");
lf[793]=C_h_intern(&lf[793],12,"mp:recordseq");
lf[794]=C_h_intern(&lf[794],9,"cs:record");
lf[795]=C_decode_literal(C_heaptop,"\376B\000\000\037value not boolean or number > 0");
lf[796]=C_h_intern(&lf[796],8,"cs:clear");
lf[797]=C_h_intern(&lf[797],4,"cs:i");
lf[798]=C_h_intern(&lf[798],4,"cs:f");
lf[799]=C_h_intern(&lf[799],8,"cs:print");
lf[800]=C_h_intern(&lf[800],6,"\000start");
lf[801]=C_h_intern(&lf[801],4,"\000end");
lf[802]=C_h_intern(&lf[802],7,"cs:play");
lf[803]=C_h_intern(&lf[803],6,"\000shift");
lf[804]=C_h_intern(&lf[804],7,"cm-logo");
lf[805]=C_decode_literal(C_heaptop,"\376B\000\000\001 ");
lf[806]=C_decode_literal(C_heaptop,"\376B\000\000\000");
lf[807]=C_decode_literal(C_heaptop,"\376B\000\000\015Common Music ");
lf[808]=C_decode_literal(C_heaptop,"\376B\000\000\001.");
lf[809]=C_decode_literal(C_heaptop,"\376B\000\000\001.");
lf[810]=C_decode_literal(C_heaptop,"\376B\000\000\000");
lf[811]=C_decode_literal(C_heaptop,"\376B\000\000\002~%");
lf[813]=C_h_intern(&lf[813],6,"\003sysgc");
lf[815]=C_h_intern(&lf[815],6,"sprout");
lf[816]=C_decode_literal(C_heaptop,"\376B\000\000%sprout: list contains a non-procedure");
lf[817]=C_decode_literal(C_heaptop,"\376B\000\000\027sprout: not a procedure");
lf[818]=C_h_intern(&lf[818],9,"\003syserror");
lf[819]=C_decode_literal(C_heaptop,"\376B\000\000\033too many optional arguments");
lf[820]=C_h_intern(&lf[820],3,"now");
lf[821]=C_h_intern(&lf[821],5,"pause");
lf[822]=C_h_intern(&lf[822],7,"paused\077");
lf[823]=C_h_intern(&lf[823],4,"cont");
lf[824]=C_h_intern(&lf[824],4,"stop");
lf[825]=C_decode_literal(C_heaptop,"\376B\000\000\021Not an integer id");
lf[826]=C_h_intern(&lf[826],4,"hush");
lf[828]=C_decode_literal(C_heaptop,"\376\003\000\000\002\376\001\000\000\014%%stopproc%%\376\003\000\000\002\376\377\001\377\377\377\377\376\377\016");
lf[830]=C_decode_literal(C_heaptop,"\376B\000\000\011Missing \047");
lf[831]=C_decode_literal(C_heaptop,"\376B\000\000\015\047 expression.");
lf[834]=C_h_intern(&lf[834],14,"return-to-host");
lf[835]=C_h_intern(&lf[835],6,"define");
lf[836]=C_decode_literal(C_heaptop,"\376B\000\000\027Illegal process formals");
lf[837]=C_h_intern(&lf[837],18,"\003sysregister-macro");
lf[838]=C_h_intern(&lf[838],14,"define-process");
lf[839]=C_h_intern(&lf[839],6,"lambda");
lf[840]=C_h_intern(&lf[840],7,"elapsed");
lf[841]=C_h_intern(&lf[841],1,"x");
lf[842]=C_h_intern(&lf[842],4,"wait");
lf[843]=C_h_intern(&lf[843],18,"current-error-port");
lf[844]=C_h_intern(&lf[844],19,"print-error-message");
lf[845]=C_decode_literal(C_heaptop,"\376B\000\000\017>>> Error (run)");
lf[846]=C_decode_literal(C_heaptop,"\376B\000\000*Warning: possible non-terminating process.");
lf[847]=C_decode_literal(C_heaptop,"\376B\000\000\003err");
lf[848]=C_decode_literal(C_heaptop,"\376B\000\000\004wait");
lf[849]=C_decode_literal(C_heaptop,"\376B\000\000\004time");
lf[850]=C_h_intern(&lf[850],3,"run");
lf[851]=C_h_intern(&lf[851],20,"\003sysregister-macro-2");
lf[852]=C_h_intern(&lf[852],15,"hash-table-set!");
lf[853]=C_decode_literal(C_heaptop,"\376B\000\000\007cs:play");
lf[854]=C_decode_literal(C_heaptop,"\376\003\000\000\002\376\001\000\000\007cs:play\376\003\000\000\002\376\001\000\000\005&rest\376\377\016");
lf[855]=C_decode_literal(C_heaptop,"\376B\000\000\010cs:print");
lf[856]=C_decode_literal(C_heaptop,"\376\003\000\000\002\376\001\000\000\010cs:print\376\003\000\000\002\376\001\000\000\005&rest\376\377\016");
lf[857]=C_decode_literal(C_heaptop,"\376B\000\000\010cs:clear");
lf[858]=C_decode_literal(C_heaptop,"\376\003\000\000\002\376\001\000\000\010cs:clear\376\377\016");
lf[859]=C_decode_literal(C_heaptop,"\376B\000\000\010cs:trace");
lf[860]=C_decode_literal(C_heaptop,"\376\003\000\000\002\376\001\000\000\010cs:trace\376\003\000\000\002\376\001\000\000\005&rest\376\377\016");
lf[861]=C_decode_literal(C_heaptop,"\376B\000\000\011cs:record");
lf[862]=C_decode_literal(C_heaptop,"\376\003\000\000\002\376\001\000\000\011cs:record\376\003\000\000\002\376\001\000\000\005&rest\376\377\016");
lf[863]=C_decode_literal(C_heaptop,"\376B\000\000\010cs:score");
lf[864]=C_decode_literal(C_heaptop,"\376\003\000\000\002\376\001\000\000\010cs:score\376\003\000\000\002\376\001\000\000\005&rest\376\377\016");
lf[865]=C_decode_literal(C_heaptop,"\376B\000\000\004cs:f");
lf[866]=C_decode_literal(C_heaptop,"\376\003\000\000\002\376\001\000\000\004cs:f\376\003\000\000\002\376\001\000\000\005&rest\376\377\016");
lf[867]=C_decode_literal(C_heaptop,"\376B\000\000\004cs:i");
lf[868]=C_decode_literal(C_heaptop,"\376\003\000\000\002\376\001\000\000\004cs:i\376\003\000\000\002\376\001\000\000\005&rest\376\377\016");
lf[869]=C_decode_literal(C_heaptop,"\376B\000\000\012mp:intypes");
lf[870]=C_decode_literal(C_heaptop,"\376\003\000\000\002\376\001\000\000\012mp:intypes\376\003\000\000\002\376\001\000\000\005&rest\376\377\016");
lf[871]=C_decode_literal(C_heaptop,"\376B\000\000\012mp:inchans");
lf[872]=C_decode_literal(C_heaptop,"\376\003\000\000\002\376\001\000\000\012mp:inchans\376\003\000\000\002\376\001\000\000\005&rest\376\377\016");
lf[873]=C_decode_literal(C_heaptop,"\376B\000\000\013mp:clearseq");
lf[874]=C_decode_literal(C_heaptop,"\376\003\000\000\002\376\001\000\000\013mp:clearseq\376\377\016");
lf[875]=C_decode_literal(C_heaptop,"\376B\000\000\012mp:plotseq");
lf[876]=C_decode_literal(C_heaptop,"\376\003\000\000\002\376\001\000\000\012mp:plotseq\376\377\016");
lf[877]=C_decode_literal(C_heaptop,"\376B\000\000\012mp:copyseq");
lf[878]=C_decode_literal(C_heaptop,"\376\003\000\000\002\376\001\000\000\012mp:copyseq\376\377\016");
lf[879]=C_decode_literal(C_heaptop,"\376B\000\000\012mp:saveseq");
lf[880]=C_decode_literal(C_heaptop,"\376\003\000\000\002\376\001\000\000\012mp:saveseq\376\377\016");
lf[881]=C_decode_literal(C_heaptop,"\376B\000\000\012mp:playseq");
lf[882]=C_decode_literal(C_heaptop,"\376\003\000\000\002\376\001\000\000\012mp:playseq\376\377\016");
lf[883]=C_decode_literal(C_heaptop,"\376B\000\000\014mp:recordseq");
lf[884]=C_decode_literal(C_heaptop,"\376\003\000\000\002\376\001\000\000\014mp:recordseq\376\003\000\000\002\376\003\000\000\002\376\001\000\000\004\000rec\376\003\000\000\002\376\377\006\000\376\377\016\376\377\016");
lf[885]=C_decode_literal(C_heaptop,"\376B\000\000\011mp:tuning");
lf[886]=C_decode_literal(C_heaptop,"\376\003\000\000\002\376\001\000\000\011mp:tuning\376\003\000\000\002\376\003\000\000\002\376\001\000\000\004\000div\376\003\000\000\002\376\377\001\000\000\000\001\376\377\016\376\377\016");
lf[887]=C_decode_literal(C_heaptop,"\376B\000\000\011mp:inhook");
lf[888]=C_decode_literal(C_heaptop,"\376\003\000\000\002\376\001\000\000\011mp:inhook\376\003\000\000\002\376\003\000\000\002\376\001\000\000\005\000func\376\003\000\000\002\376\377\006\000\376\377\016\376\377\016");
lf[889]=C_decode_literal(C_heaptop,"\376B\000\000\005mp:mm");
lf[890]=C_decode_literal(C_heaptop,"\376\003\000\000\002\376\001\000\000\005mp:mm\376\003\000\000\002\376\003\000\000\002\376\001\000\000\003\000mm\376\003\000\000\002\376\377\006\000\376\377\016\376\377\016");
lf[891]=C_decode_literal(C_heaptop,"\376B\000\000\007mp:bend");
lf[892]=C_decode_literal(C_heaptop,"\376\003\000\000\002\376\001\000\000\007mp:bend\376\003\000\000\002\376\003\000\000\002\376\001\000\000\005\000time\376\003\000\000\002\376\377\001\000\000\000\000\376\377\016\376\003\000\000\002\376\003\000\000\002\376\001\000\000\004\000val\376\003\000\000\002\376\377\001\000"
"\000 \000\376\377\016\376\003\000\000\002\376\003\000\000\002\376\001\000\000\005\000chan\376\003\000\000\002\376\377\001\000\000\000\000\376\377\016\376\377\016");
lf[893]=C_decode_literal(C_heaptop,"\376B\000\000\010mp:press");
lf[894]=C_decode_literal(C_heaptop,"\376\003\000\000\002\376\001\000\000\010mp:press\376\003\000\000\002\376\003\000\000\002\376\001\000\000\005\000time\376\003\000\000\002\376\377\001\000\000\000\000\376\377\016\376\003\000\000\002\376\003\000\000\002\376\001\000\000\004\000val\376\003\000\000\002\376\377\001"
"\000\000\000\000\376\377\016\376\003\000\000\002\376\003\000\000\002\376\001\000\000\005\000chan\376\003\000\000\002\376\377\001\000\000\000\000\376\377\016\376\377\016");
lf[895]=C_decode_literal(C_heaptop,"\376B\000\000\007mp:prog");
lf[896]=C_decode_literal(C_heaptop,"\376\003\000\000\002\376\001\000\000\007mp:prog\376\003\000\000\002\376\003\000\000\002\376\001\000\000\005\000time\376\003\000\000\002\376\377\001\000\000\000\000\376\377\016\376\003\000\000\002\376\003\000\000\002\376\001\000\000\004\000val\376\003\000\000\002\376\377\001\000"
"\000\000\000\376\377\016\376\003\000\000\002\376\003\000\000\002\376\001\000\000\005\000chan\376\003\000\000\002\376\377\001\000\000\000\000\376\377\016\376\377\016");
lf[897]=C_decode_literal(C_heaptop,"\376B\000\000\007mp:ctrl");
lf[898]=C_decode_literal(C_heaptop,"\376\003\000\000\002\376\001\000\000\007mp:ctrl\376\003\000\000\002\376\003\000\000\002\376\001\000\000\005\000time\376\003\000\000\002\376\377\001\000\000\000\000\376\377\016\376\003\000\000\002\376\003\000\000\002\376\001\000\000\004\000num\376\003\000\000\002\376\377\001\000"
"\000\000\000\376\377\016\376\003\000\000\002\376\003\000\000\002\376\001\000\000\004\000val\376\003\000\000\002\376\377\001\000\000\000\000\376\377\016\376\003\000\000\002\376\003\000\000\002\376\001\000\000\005\000chan\376\003\000\000\002\376\377\001\000\000\000\000\376\377\016\376\377\016");
lf[899]=C_decode_literal(C_heaptop,"\376B\000\000\010mp:touch");
lf[900]=C_decode_literal(C_heaptop,"\376\003\000\000\002\376\001\000\000\010mp:touch\376\003\000\000\002\376\003\000\000\002\376\001\000\000\005\000time\376\003\000\000\002\376\377\001\000\000\000\000\376\377\016\376\003\000\000\002\376\003\000\000\002\376\001\000\000\004\000key\376\003\000\000\002\376\377\001"
"\000\000\000\000\376\377\016\376\003\000\000\002\376\003\000\000\002\376\001\000\000\004\000val\376\003\000\000\002\376\377\001\000\000\000\000\376\377\016\376\003\000\000\002\376\003\000\000\002\376\001\000\000\005\000chan\376\003\000\000\002\376\377\001\000\000\000\000\376\377\016\376\377\016");
lf[901]=C_decode_literal(C_heaptop,"\376B\000\000\005mp:on");
lf[902]=C_decode_literal(C_heaptop,"\376\003\000\000\002\376\001\000\000\005mp:on\376\003\000\000\002\376\003\000\000\002\376\001\000\000\005\000time\376\003\000\000\002\376\377\001\000\000\000\000\376\377\016\376\003\000\000\002\376\003\000\000\002\376\001\000\000\004\000key\376\003\000\000\002\376\377\001\000\000\000"
"<\376\377\016\376\003\000\000\002\376\003\000\000\002\376\001\000\000\004\000vel\376\003\000\000\002\376\377\001\000\000\000@\376\377\016\376\003\000\000\002\376\003\000\000\002\376\001\000\000\005\000chan\376\003\000\000\002\376\377\001\000\000\000\000\376\377\016\376\377\016");
lf[903]=C_decode_literal(C_heaptop,"\376B\000\000\006mp:off");
lf[904]=C_decode_literal(C_heaptop,"\376\003\000\000\002\376\001\000\000\006mp:off\376\003\000\000\002\376\003\000\000\002\376\001\000\000\005\000time\376\003\000\000\002\376\377\001\000\000\000\000\376\377\016\376\003\000\000\002\376\003\000\000\002\376\001\000\000\004\000key\376\003\000\000\002\376\377\001\000\000"
"\000<\376\377\016\376\003\000\000\002\376\003\000\000\002\376\001\000\000\005\000chan\376\003\000\000\002\376\377\001\000\000\000\000\376\377\016\376\377\016");
lf[905]=C_decode_literal(C_heaptop,"\376B\000\000\007mp:midi");
lf[906]=C_decode_literal(C_heaptop,"\376\003\000\000\002\376\001\000\000\007mp:midi\376\003\000\000\002\376\003\000\000\002\376\001\000\000\005\000time\376\003\000\000\002\376\377\001\000\000\000\000\376\377\016\376\003\000\000\002\376\003\000\000\002\376\001\000\000\004\000dur\376\003\000\000\002\376U0."
"5\000\376\377\016\376\003\000\000\002\376\003\000\000\002\376\001\000\000\004\000key\376\003\000\000\002\376\377\001\000\000\000<\376\377\016\376\003\000\000\002\376\003\000\000\002\376\001\000\000\004\000amp\376\003\000\000\002\376U0.5\000\376\377\016\376\003\000\000\002\376\003\000"
"\000\002\376\001\000\000\005\000chan\376\003\000\000\002\376\377\001\000\000\000\000\376\377\016\376\377\016");
lf[907]=C_decode_literal(C_heaptop,"\376B\000\000\007mp:note");
lf[908]=C_decode_literal(C_heaptop,"\376\003\000\000\002\376\001\000\000\007mp:note\376\003\000\000\002\376\003\000\000\002\376\001\000\000\005\000time\376\003\000\000\002\376\377\001\000\000\000\000\376\377\016\376\003\000\000\002\376\003\000\000\002\376\001\000\000\004\000dur\376\003\000\000\002\376U0."
"5\000\376\377\016\376\003\000\000\002\376\003\000\000\002\376\001\000\000\004\000key\376\003\000\000\002\376\377\001\000\000\000<\376\377\016\376\003\000\000\002\376\003\000\000\002\376\001\000\000\004\000amp\376\003\000\000\002\376U0.5\000\376\377\016\376\003\000\000\002\376\003\000"
"\000\002\376\001\000\000\005\000chan\376\003\000\000\002\376\377\001\000\000\000\000\376\377\016\376\377\016");
lf[909]=C_h_intern(&lf[909],5,":loop");
lf[910]=C_h_intern(&lf[910],7,"tagbody");
lf[911]=C_h_intern(&lf[911],5,"block");
lf[912]=C_h_intern(&lf[912],3,"nil");
lf[913]=C_h_intern(&lf[913],2,"go");
lf[914]=C_h_intern(&lf[914],8,"function");
lf[915]=C_decode_literal(C_heaptop,"\376B\000\000\001v");
lf[916]=C_h_intern(&lf[916],3,"pop");
lf[917]=C_h_intern(&lf[917],4,"cons");
lf[918]=C_h_intern(&lf[918],4,"push");
lf[919]=C_decode_literal(C_heaptop,"\376\003\000\000\002\376\001\000\000\002go\376\003\000\000\002\376\377\006\001\376\377\016");
lf[920]=C_h_intern(&lf[920],4,"loop");
lf[921]=C_decode_literal(C_heaptop,"\376B\000\000\001v");
lf[922]=C_decode_literal(C_heaptop,"\376B\000\000\030SalStatementSequenceRule");
lf[923]=C_decode_literal(C_heaptop,"\376B\000\000\020SalStatementRule");
lf[924]=C_decode_literal(C_heaptop,"\376B\000\000\017Variable: ~A = ");
lf[925]=C_decode_literal(C_heaptop,"\376B\000\000\002)\012");
lf[926]=C_decode_literal(C_heaptop,"\376B\000\000\002, ");
lf[927]=C_decode_literal(C_heaptop,"\376B\000\000\002 (");
lf[928]=C_decode_literal(C_heaptop,"\376B\000\000\012Function: ");
lf[929]=C_h_intern(&lf[929],7,"\000return");
lf[930]=C_h_intern(&lf[930],9,"\000function");
lf[931]=C_decode_literal(C_heaptop,"\376B\000\000\011Process: ");
lf[932]=C_h_intern(&lf[932],8,"\000process");
lf[933]=C_decode_literal(C_heaptop,"\376B\000\000\003...");
lf[934]=C_decode_literal(C_heaptop,"\376B\000\000\026SalDefineStatementRule");
lf[935]=C_decode_literal(C_heaptop,"\376B\000\000\016SalFunDeclRule");
lf[936]=C_decode_literal(C_heaptop,"\376B\000\000\017>>> Error (run)");
lf[937]=C_h_intern(&lf[937],4,"cond");
lf[938]=C_decode_literal(C_heaptop,"\376B\000\000\005abort");
lf[939]=C_decode_literal(C_heaptop,"\376B\000\000\005error");
lf[940]=C_decode_literal(C_heaptop,"\376B\000\000\004wait");
lf[941]=C_decode_literal(C_heaptop,"\376B\000\000\004wait");
lf[942]=C_decode_literal(C_heaptop,"\376B\000\000\004time");
lf[943]=C_decode_literal(C_heaptop,"\376B\000\000\004halt");
lf[944]=C_h_intern(&lf[944],5,"\000loop");
lf[945]=C_h_intern(&lf[945],4,"\000run");
lf[946]=C_decode_literal(C_heaptop,"\376B\000\000\035run statement outside process");
lf[947]=C_decode_literal(C_heaptop,"\376B\000\000\024SalLoopStatementRule");
lf[948]=C_decode_literal(C_heaptop,"\376B\000\000\022SalTerminationRule");
lf[949]=C_decode_literal(C_heaptop,"\376B\000\000\017SalSteppingRule");
lf[950]=C_decode_literal(C_heaptop,"\376B\000\000\002#f");
lf[951]=C_decode_literal(C_heaptop,"\376B\000\000\002#f");
lf[952]=C_decode_literal(C_heaptop,"\376B\000\000\022SalConditionalRule");
lf[953]=C_decode_literal(C_heaptop,"\376B\000\000\014SalBlockRule");
lf[954]=C_h_intern(&lf[954],9,"list-tail");
lf[955]=C_decode_literal(C_heaptop,"\376B\000\000\021SalAssignmentRule");
lf[956]=C_decode_literal(C_heaptop,"\376B\000\000\015SalAssignRule");
lf[957]=C_h_intern(&lf[957],9,"\000bindings");
lf[958]=C_decode_literal(C_heaptop,"\376B\000\000\017SalBindingsRule");
lf[959]=C_decode_literal(C_heaptop,"\376B\000\000\002#f");
lf[960]=C_decode_literal(C_heaptop,"\376B\000\000\013SalBindRule");
lf[961]=C_decode_literal(C_heaptop,"\376B\000\000!return statement outside function");
lf[962]=C_decode_literal(C_heaptop,"\376B\000\000\025SalFunctionReturnRule");
lf[963]=C_decode_literal(C_heaptop,"\376B\000\000 wait statement outside run block");
lf[964]=C_decode_literal(C_heaptop,"\376B\000\000\022SalProcessWaitRule");
lf[965]=C_decode_literal(C_heaptop,"\376\003\000\000\002\376\001\000\000\006fix-me\376\003\000\000\002\376\001\000\000\004plot\376\377\016");
lf[966]=C_decode_literal(C_heaptop,"\376B\000\000\024SalPlotStatementRule");
lf[967]=C_decode_literal(C_heaptop,"\376B\000\000\026SalOutputStatementRule");
lf[968]=C_decode_literal(C_heaptop,"\376B\000\000\026SalSystemStatementRule");
lf[969]=C_h_intern(&lf[969],10,"sal:system");
lf[970]=C_decode_literal(C_heaptop,"\376B\000\000\025SalChdirStatementRule");
lf[971]=C_decode_literal(C_heaptop,"\376B\000\000\024SalLoadStatementRule");
lf[972]=C_decode_literal(C_heaptop,"\376B\000\000\024SalExecStatementRule");
lf[973]=C_decode_literal(C_heaptop,"\376B\000\000\024SalSendStatementRule");
lf[974]=C_decode_literal(C_heaptop,"\376B\000\000\026SalSproutStatementRule");
lf[975]=C_decode_literal(C_heaptop,"\376B\000\000\025SalPrintStatementRule");
lf[976]=C_decode_literal(C_heaptop,"\376B\000\000\014SalSexprRule");
lf[977]=C_decode_literal(C_heaptop,"\376B\000\000\013SalTermRule");
lf[978]=C_decode_literal(C_heaptop,"\376B\000\000\014SalMexprRule");
lf[979]=C_decode_literal(C_heaptop,"\376B\000\000\011SalOpRule");
lf[980]=C_decode_literal(C_heaptop,"\376B\000\000\016SalFuncallRule");
lf[981]=C_decode_literal(C_heaptop,"\376B\000\000\016SalFunargsRule");
lf[982]=C_decode_literal(C_heaptop,"\376B\000\000\014SalKargsRule");
lf[983]=C_decode_literal(C_heaptop,"\376B\000\000\014SalPargsRule");
lf[984]=C_decode_literal(C_heaptop,"\376B\000\000\015SalIfExprRule");
lf[985]=C_decode_literal(C_heaptop,"\376B\000\000\013SalArefRule");
lf[986]=C_decode_literal(C_heaptop,"\376B\000\000\012SalEltRule");
lf[987]=C_h_intern(&lf[987],7,"unquote");
lf[988]=C_h_intern(&lf[988],16,"unquote-splicing");
lf[989]=C_h_intern(&lf[989],5,"\000list");
lf[990]=C_h_intern(&lf[990],8,"\000unquote");
lf[991]=C_decode_literal(C_heaptop,"\376B\000\000\023#$ outside of list.");
lf[992]=C_decode_literal(C_heaptop,"\376B\000\000\023#^ outside of list.");
lf[993]=C_decode_literal(C_heaptop,"\376B\000\000\016SalUnquoteRule");
lf[994]=C_h_intern(&lf[994],10,"quasiquote");
lf[995]=C_decode_literal(C_heaptop,"\376B\000\000\013SalListRule");
lf[996]=C_decode_literal(C_heaptop,"\376B\000\000\013SalAtomRule");
lf[997]=C_decode_literal(C_heaptop,"\376B\000\000\013SalBoolRule");
lf[998]=C_decode_literal(C_heaptop,"\376B\000\000\015SalNumberRule");
lf[999]=C_h_intern(&lf[999],7,"fprintf");
lf[1000]=C_decode_literal(C_heaptop,"\376B\000\000\007#<u ~A>");
lf[1001]=C_decode_literal(C_heaptop,"\376B\000\000\010#<u x~X>");
lf[1002]=C_h_intern(&lf[1002],27,"\003sysregister-record-printer");
lf[1003]=C_decode_literal(C_heaptop,"\376B\000\000\030#<parse-error ~S (@ ~S)>");
lf[1004]=C_decode_literal(C_heaptop,"\376\003\000\000\002\376\001\000\000\004list\376\377\016");
lf[1005]=C_decode_literal(C_heaptop,"\376\003\000\000\002\376\001\000\000\001+\376\003\000\000\002\376\001\000\000\001*\376\003\000\000\002\376\001\000\000\001@\376\003\000\000\002\376\001\000\000\003and\376\003\000\000\002\376\001\000\000\002or\376\377\016");
lf[1006]=C_h_intern(&lf[1006],6,"ruleid");
lf[1007]=C_h_intern(&lf[1007],9,"make-rule");
lf[1008]=C_h_intern(&lf[1008],7,"*rules*");
lf[1009]=C_h_intern(&lf[1009],7,"defrule");
lf[1010]=C_decode_literal(C_heaptop,"\376B\000\000\007#<r ~A>");
lf[1011]=C_h_intern(&lf[1011],15,"make-hash-table");
lf[1012]=C_h_intern(&lf[1012],3,"eq\077");
lf[1013]=C_decode_literal(C_heaptop,"\376B\000\000\013#<t x~X ~S>");
lf[1014]=C_decode_literal(C_heaptop,"\376B\000\000\016#<spectrum ~S>");
lf[1015]=C_decode_literal(C_heaptop,"\376B\000\000\001r");
lf[1016]=C_decode_literal(C_heaptop,"\376U0.0\000");
lf[1017]=C_decode_literal(C_heaptop,"\376B\000\000\001r");
lf[1018]=C_decode_literal(C_heaptop,"\376\003\000\000\002\376\003\000\000\002\376B\000\000\001c\376\003\000\000\002\376B\000\000\002bs\376\377\016\376\003\000\000\002\376\003\000\000\002\376B\000\000\002df\376\003\000\000\002\376B\000\000\002cs\376\377\016\376\003\000\000\002\376\003\000\000\002\376B\000\000\001d\376"
"\377\016\376\003\000\000\002\376\003\000\000\002\376B\000\000\002ef\376\003\000\000\002\376B\000\000\002ds\376\377\016\376\003\000\000\002\376\003\000\000\002\376B\000\000\001e\376\003\000\000\002\376B\000\000\002ff\376\377\016\376\003\000\000\002\376\003\000\000\002\376B\000\000\001"
"f\376\003\000\000\002\376B\000\000\002es\376\377\016\376\003\000\000\002\376\003\000\000\002\376B\000\000\002fs\376\003\000\000\002\376B\000\000\002gf\376\377\016\376\003\000\000\002\376\003\000\000\002\376B\000\000\001g\376\377\016\376\003\000\000\002\376\003\000\000\002\376B\000"
"\000\002af\376\003\000\000\002\376B\000\000\002gs\376\377\016\376\003\000\000\002\376\003\000\000\002\376B\000\000\001a\376\377\016\376\003\000\000\002\376\003\000\000\002\376B\000\000\002bf\376\003\000\000\002\376B\000\000\002as\376\377\016\376\003\000\000\002\376\003\000\000\002"
"\376B\000\000\001b\376\003\000\000\002\376B\000\000\002cf\376\377\016\376\377\016");
lf[1019]=C_decode_literal(C_heaptop,"\376U0.5\000");
lf[1020]=C_decode_literal(C_heaptop,"\376U0.5\000");
lf[1021]=C_decode_literal(C_heaptop,"\376\003\000\000\002\376B\000\000\00200\376\003\000\000\002\376B\000\000\0010\376\003\000\000\002\376B\000\000\0011\376\003\000\000\002\376B\000\000\0012\376\003\000\000\002\376B\000\000\0013\376\003\000\000\002\376B\000\000\0014\376\003\000\000\002\376B\000\000\0015\376\003"
"\000\000\002\376B\000\000\0016\376\003\000\000\002\376B\000\000\0017\376\003\000\000\002\376B\000\000\0018\376\003\000\000\002\376B\000\000\0019\376\377\016");
lf[1022]=C_decode_literal(C_heaptop,"\376B\000\000\001>");
lf[1023]=C_decode_literal(C_heaptop,"\376B\000\000\001<");
lf[1024]=C_decode_literal(C_heaptop,"\376B\000\000\002bs");
lf[1025]=C_decode_literal(C_heaptop,"\376B\000\000\002cf");
lf[1026]=C_decode_literal(C_heaptop,"\376B\000\000\002bs");
lf[1027]=C_decode_literal(C_heaptop,"\376U0.5\000");
lf[1028]=C_decode_literal(C_heaptop,"\376U0.5\000");
lf[1029]=C_h_intern(&lf[1029],4,"send");
lf[1030]=C_h_intern(&lf[1030],7,"promise");
lf[1031]=C_decode_literal(C_heaptop,"\376B\000\0003message function not string, symbol or list of both");
lf[1032]=C_h_intern(&lf[1032],19,"define-send-message");
lf[1033]=C_h_intern(&lf[1033],12,"with-optkeys");
C_register_lf2(lf,1034,create_ptable());
t2=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_6673,a[2]=t1,tmp=(C_word)a,a+=3,tmp);
C_library_toplevel(2,C_SCHEME_UNDEFINED,t2);}

/* k6671 */
static void C_ccall f_6673(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[3],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_6673,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_6676,a[2]=((C_word*)t0)[2],tmp=(C_word)a,a+=3,tmp);
C_eval_toplevel(2,C_SCHEME_UNDEFINED,t2);}

/* k6674 in k6671 */
static void C_ccall f_6676(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[3],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_6676,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_6679,a[2]=((C_word*)t0)[2],tmp=(C_word)a,a+=3,tmp);
C_extras_toplevel(2,C_SCHEME_UNDEFINED,t2);}

/* k6677 in k6674 in k6671 */
static void C_ccall f_6679(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[3],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_6679,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_6682,a[2]=((C_word*)t0)[2],tmp=(C_word)a,a+=3,tmp);
C_extras_toplevel(2,C_SCHEME_UNDEFINED,t2);}

/* k6680 in k6677 in k6674 in k6671 */
static void C_ccall f_6682(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_6682,2,t0,t1);}
t2=C_mutate((C_word*)lf[0]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_6684,a[2]=((C_word)li4),tmp=(C_word)a,a+=3,tmp));
t3=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_6973,a[2]=((C_word*)t0)[2],tmp=(C_word)a,a+=3,tmp);
t4=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_42425,a[2]=((C_word)li699),tmp=(C_word)a,a+=3,tmp);
C_trace("ChickenBridge.scm: 234  ##sys#register-macro");
t5=C_retrieve(lf[837]);
((C_proc4)C_retrieve_proc(t5))(4,t5,t3,lf[1033],t4);}

/* a42424 in k6680 in k6677 in k6674 in k6671 */
static void C_ccall f_42425(C_word c,C_word t0,C_word t1,C_word t2,...){
C_word tmp;
C_word t3;
va_list v;
C_word *a,c2=c;
C_save_rest(t2,c2,3);
if(c<3) C_bad_min_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_demand(c*C_SIZEOF_PAIR+0)){
C_save_and_reclaim((void*)tr3r,(void*)f_42425r,3,t0,t1,t2);}
else{
a=C_alloc((c-3)*3);
t3=C_restore_rest(a,C_rest_count(0));
f_42425r(t0,t1,t2,t3);}}

static void C_ccall f_42425r(C_word t0,C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word t6;
t4=(C_word)C_i_car(t2);
t5=(C_word)C_i_cdr(t2);
C_trace("ChickenBridge.scm: 235  expand-optkeys");
t6=*((C_word*)lf[0]+1);
((C_proc5)C_retrieve_proc(t6))(5,t6,t1,t4,t5,t3);}

/* k6971 in k6680 in k6677 in k6674 in k6671 */
static void C_ccall f_6973(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[3],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_6973,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_6977,a[2]=((C_word*)t0)[2],tmp=(C_word)a,a+=3,tmp);
C_trace("ChickenBridge.scm: 241  make-hash-table");
t3=C_retrieve(lf[1011]);
((C_proc3)C_retrieve_proc(t3))(3,t3,t2,*((C_word*)lf[455]+1));}

/* k6975 in k6971 in k6680 in k6677 in k6674 in k6671 */
static void C_ccall f_6977(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[6],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_6977,2,t0,t1);}
t2=C_mutate((C_word*)lf[29]+1,t1);
t3=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_6980,a[2]=((C_word*)t0)[2],tmp=(C_word)a,a+=3,tmp);
t4=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_42373,a[2]=((C_word)li698),tmp=(C_word)a,a+=3,tmp);
C_trace("ChickenBridge.scm: 243  ##sys#register-macro");
t5=C_retrieve(lf[837]);
((C_proc4)C_retrieve_proc(t5))(4,t5,t3,lf[1032],t4);}

/* a42372 in k6975 in k6971 in k6680 in k6677 in k6674 in k6671 */
static void C_ccall f_42373(C_word c,C_word t0,C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word t14;
C_word t15;
C_word ab[18],*a=ab;
if(c!=4) C_bad_argc_2(c,4,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr4,(void*)f_42373,4,t0,t1,t2,t3);}
t4=(*a=C_VECTOR_TYPE|1,a[1]=t2,tmp=(C_word)a,a+=2,tmp);
t5=C_SCHEME_FALSE;
t6=(*a=C_VECTOR_TYPE|1,a[1]=t5,tmp=(C_word)a,a+=2,tmp);
t7=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_42377,a[2]=t6,a[3]=t1,a[4]=t3,a[5]=t4,tmp=(C_word)a,a+=6,tmp);
if(C_truep((C_word)C_i_pairp(((C_word*)t4)[1]))){
t8=(C_word)C_i_car(((C_word*)t4)[1]);
t9=C_set_block_item(t6,0,t8);
t10=(C_word)C_i_cadr(((C_word*)t4)[1]);
t11=C_set_block_item(t4,0,t10);
t12=t7;
f_42377(2,t12,t11);}
else{
if(C_truep((C_word)C_i_stringp(((C_word*)t4)[1]))){
t8=C_set_block_item(t6,0,((C_word*)t4)[1]);
t9=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_42410,a[2]=t7,a[3]=t4,tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 250  string->symbol");
t10=*((C_word*)lf[454]+1);
((C_proc3)C_retrieve_proc(t10))(3,t10,t9,((C_word*)t4)[1]);}
else{
if(C_truep((C_word)C_i_symbolp(((C_word*)t4)[1]))){
t8=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_42420,a[2]=t7,a[3]=t6,tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 252  symbol->string");
t9=*((C_word*)lf[25]+1);
((C_proc3)C_retrieve_proc(t9))(3,t9,t8,((C_word*)t4)[1]);}
else{
C_trace("ChickenBridge.scm: 254  error");
t8=*((C_word*)lf[4]+1);
((C_proc3)C_retrieve_proc(t8))(3,t8,t7,lf[1031]);}}}}

/* k42418 in a42372 in k6975 in k6971 in k6680 in k6677 in k6674 in k6671 */
static void C_ccall f_42420(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[3])+1,t1);
t3=((C_word*)t0)[2];
f_42377(2,t3,t2);}

/* k42408 in a42372 in k6975 in k6971 in k6680 in k6677 in k6674 in k6671 */
static void C_ccall f_42410(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[3])+1,t1);
t3=((C_word*)t0)[2];
f_42377(2,t3,t2);}

/* k42375 in a42372 in k6975 in k6971 in k6680 in k6677 in k6674 in k6671 */
static void C_ccall f_42377(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[21],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_42377,2,t0,t1);}
t2=(C_word)C_a_i_cons(&a,2,((C_word*)((C_word*)t0)[5])[1],((C_word*)t0)[4]);
t3=(C_word)C_a_i_list(&a,2,lf[612],t2);
t4=((C_word*)t0)[3];
((C_proc2)(void*)(*((C_word*)t4+1)))(2,t4,(C_word)C_a_i_list(&a,4,lf[852],lf[29],((C_word*)((C_word*)t0)[2])[1],t3));}

/* k6978 in k6975 in k6971 in k6680 in k6677 in k6674 in k6671 */
static void C_ccall f_6980(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_6980,2,t0,t1);}
t2=C_mutate((C_word*)lf[30]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_6982,a[2]=((C_word)li12),tmp=(C_word)a,a+=3,tmp));
t3=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_7273,a[2]=((C_word*)t0)[2],tmp=(C_word)a,a+=3,tmp);
t4=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_42367,a[2]=((C_word)li697),tmp=(C_word)a,a+=3,tmp);
C_trace("ChickenBridge.scm: 339  ##sys#register-macro");
t5=C_retrieve(lf[837]);
((C_proc4)C_retrieve_proc(t5))(4,t5,t3,lf[1030],t4);}

/* a42366 in k6978 in k6975 in k6971 in k6680 in k6677 in k6674 in k6671 */
static void C_ccall f_42367(C_word c,C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word ab[9],*a=ab;
if(c!=3) C_bad_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr3,(void*)f_42367,3,t0,t1,t2);}
t3=t1;
((C_proc2)(void*)(*((C_word*)t3+1)))(2,t3,(C_word)C_a_i_list(&a,3,lf[839],C_SCHEME_END_OF_LIST,t2));}

/* k7271 in k6978 in k6975 in k6971 in k6680 in k6677 in k6674 in k6671 */
static void C_ccall f_7273(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[6],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_7273,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_7276,a[2]=((C_word*)t0)[2],tmp=(C_word)a,a+=3,tmp);
t3=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_42361,a[2]=((C_word)li696),tmp=(C_word)a,a+=3,tmp);
C_trace("ChickenBridge.scm: 341  ##sys#register-macro");
t4=C_retrieve(lf[837]);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[1029],t3);}

/* a42360 in k7271 in k6978 in k6975 in k6971 in k6680 in k6677 in k6674 in k6671 */
static void C_ccall f_42361(C_word c,C_word t0,C_word t1,C_word t2,...){
C_word tmp;
C_word t3;
va_list v;
C_word *a,c2=c;
C_save_rest(t2,c2,3);
if(c<3) C_bad_min_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_demand(c*C_SIZEOF_PAIR+0)){
C_save_and_reclaim((void*)tr3r,(void*)f_42361r,3,t0,t1,t2);}
else{
a=C_alloc((c-3)*3);
t3=C_restore_rest(a,C_rest_count(0));
f_42361r(t0,t1,t2,t3);}}

static void C_ccall f_42361r(C_word t0,C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_trace("ChickenBridge.scm: 342  expand-send");
t4=C_retrieve(lf[30]);
((C_proc5)C_retrieve_proc(t4))(5,t4,t1,t2,t3,C_SCHEME_FALSE);}

/* k7274 in k7271 in k6978 in k6975 in k6971 in k6680 in k6677 in k6674 in k6671 */
static void C_ccall f_7276(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word t14;
C_word t15;
C_word t16;
C_word t17;
C_word t18;
C_word t19;
C_word t20;
C_word t21;
C_word t22;
C_word t23;
C_word t24;
C_word t25;
C_word t26;
C_word t27;
C_word t28;
C_word t29;
C_word t30;
C_word t31;
C_word t32;
C_word t33;
C_word t34;
C_word t35;
C_word t36;
C_word t37;
C_word t38;
C_word t39;
C_word t40;
C_word t41;
C_word t42;
C_word t43;
C_word t44;
C_word t45;
C_word t46;
C_word t47;
C_word t48;
C_word t49;
C_word t50;
C_word t51;
C_word t52;
C_word t53;
C_word t54;
C_word t55;
C_word t56;
C_word t57;
C_word t58;
C_word t59;
C_word t60;
C_word t61;
C_word t62;
C_word t63;
C_word t64;
C_word t65;
C_word t66;
C_word t67;
C_word t68;
C_word t69;
C_word t70;
C_word t71;
C_word t72;
C_word t73;
C_word t74;
C_word t75;
C_word t76;
C_word t77;
C_word t78;
C_word t79;
C_word t80;
C_word t81;
C_word t82;
C_word t83;
C_word t84;
C_word t85;
C_word t86;
C_word t87;
C_word t88;
C_word t89;
C_word t90;
C_word t91;
C_word t92;
C_word t93;
C_word t94;
C_word t95;
C_word t96;
C_word t97;
C_word ab[240],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_7276,2,t0,t1);}
t2=C_mutate((C_word*)lf[42]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_7278,a[2]=((C_word)li14),tmp=(C_word)a,a+=3,tmp));
t3=C_mutate((C_word*)lf[44]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_7289,a[2]=((C_word)li16),tmp=(C_word)a,a+=3,tmp));
t4=C_mutate((C_word*)lf[47]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_7374,a[2]=((C_word)li18),tmp=(C_word)a,a+=3,tmp));
t5=C_mutate((C_word*)lf[60]+1,*((C_word*)lf[8]+1));
t6=C_mutate((C_word*)lf[61]+1,*((C_word*)lf[22]+1));
t7=C_mutate((C_word*)lf[62]+1,*((C_word*)lf[63]+1));
t8=C_mutate((C_word*)lf[64]+1,*((C_word*)lf[65]+1));
t9=C_mutate((C_word*)lf[66]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_7400,a[2]=((C_word)li19),tmp=(C_word)a,a+=3,tmp));
t10=C_mutate((C_word*)lf[67]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_7410,a[2]=((C_word)li20),tmp=(C_word)a,a+=3,tmp));
t11=C_mutate((C_word*)lf[68]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_7420,a[2]=((C_word)li21),tmp=(C_word)a,a+=3,tmp));
t12=C_mutate((C_word*)lf[69]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_7430,a[2]=((C_word)li22),tmp=(C_word)a,a+=3,tmp));
t13=C_mutate((C_word*)lf[70]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_7440,a[2]=((C_word)li23),tmp=(C_word)a,a+=3,tmp));
t14=C_mutate((C_word*)lf[71]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_7454,a[2]=((C_word)li24),tmp=(C_word)a,a+=3,tmp));
t15=C_mutate((C_word*)lf[72]+1,*((C_word*)lf[73]+1));
t16=C_mutate((C_word*)lf[74]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_7469,a[2]=((C_word)li25),tmp=(C_word)a,a+=3,tmp));
t17=C_mutate((C_word*)lf[75]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_7475,a[2]=((C_word)li26),tmp=(C_word)a,a+=3,tmp));
t18=C_mutate((C_word*)lf[76]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_7498,a[2]=((C_word)li27),tmp=(C_word)a,a+=3,tmp));
t19=C_mutate((C_word*)lf[77]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_7546,a[2]=((C_word)li28),tmp=(C_word)a,a+=3,tmp));
t20=C_mutate((C_word*)lf[78]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_7636,a[2]=((C_word)li29),tmp=(C_word)a,a+=3,tmp));
t21=C_mutate((C_word*)lf[80]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_7676,a[2]=((C_word)li32),tmp=(C_word)a,a+=3,tmp));
t22=C_mutate((C_word*)lf[81]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_7777,a[2]=((C_word)li33),tmp=(C_word)a,a+=3,tmp));
t23=C_mutate((C_word*)lf[82]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_7787,a[2]=((C_word)li35),tmp=(C_word)a,a+=3,tmp));
t24=C_mutate((C_word*)lf[83]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_7848,a[2]=((C_word)li38),tmp=(C_word)a,a+=3,tmp));
t25=C_mutate((C_word*)lf[85]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_7947,a[2]=((C_word)li40),tmp=(C_word)a,a+=3,tmp));
t26=C_mutate((C_word*)lf[86]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_7987,a[2]=((C_word)li42),tmp=(C_word)a,a+=3,tmp));
t27=C_mutate((C_word*)lf[87]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_8026,a[2]=((C_word)li44),tmp=(C_word)a,a+=3,tmp));
t28=C_mutate(&lf[88],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_8065,a[2]=((C_word)li45),tmp=(C_word)a,a+=3,tmp));
t29=C_mutate(&lf[89],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_8151,a[2]=((C_word)li47),tmp=(C_word)a,a+=3,tmp));
t30=C_mutate(&lf[90],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_8192,a[2]=((C_word)li48),tmp=(C_word)a,a+=3,tmp));
t31=C_mutate(&lf[91],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_8219,a[2]=((C_word)li49),tmp=(C_word)a,a+=3,tmp));
t32=C_mutate(&lf[92],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_8246,a[2]=((C_word)li50),tmp=(C_word)a,a+=3,tmp));
t33=C_mutate(&lf[93],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_8253,a[2]=((C_word)li51),tmp=(C_word)a,a+=3,tmp));
t34=C_mutate(&lf[94],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_8264,a[2]=((C_word)li52),tmp=(C_word)a,a+=3,tmp));
t35=C_mutate(&lf[95],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_8279,a[2]=((C_word)li53),tmp=(C_word)a,a+=3,tmp));
t36=C_mutate(&lf[96],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_8286,a[2]=((C_word)li54),tmp=(C_word)a,a+=3,tmp));
t37=C_mutate(&lf[97],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_8293,a[2]=((C_word)li55),tmp=(C_word)a,a+=3,tmp));
t38=C_mutate(&lf[98],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_8312,a[2]=((C_word)li56),tmp=(C_word)a,a+=3,tmp));
t39=C_mutate(&lf[99],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_8331,a[2]=((C_word)li57),tmp=(C_word)a,a+=3,tmp));
t40=C_mutate(&lf[100],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_8352,a[2]=((C_word)li58),tmp=(C_word)a,a+=3,tmp));
t41=C_mutate(&lf[101],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_8355,a[2]=((C_word)li59),tmp=(C_word)a,a+=3,tmp));
t42=C_mutate(&lf[102],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_8362,a[2]=((C_word)li60),tmp=(C_word)a,a+=3,tmp));
t43=C_mutate(&lf[103],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_8391,a[2]=((C_word)li61),tmp=(C_word)a,a+=3,tmp));
t44=C_mutate(&lf[104],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_8394,a[2]=((C_word)li62),tmp=(C_word)a,a+=3,tmp));
t45=C_mutate(&lf[105],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_8397,a[2]=((C_word)li63),tmp=(C_word)a,a+=3,tmp));
t46=C_mutate(&lf[106],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_8400,a[2]=((C_word)li64),tmp=(C_word)a,a+=3,tmp));
t47=C_mutate(&lf[107],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_8411,a[2]=((C_word)li65),tmp=(C_word)a,a+=3,tmp));
t48=C_mutate(&lf[108],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_8429,a[2]=((C_word)li66),tmp=(C_word)a,a+=3,tmp));
t49=C_mutate(&lf[109],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_8436,a[2]=((C_word)li67),tmp=(C_word)a,a+=3,tmp));
t50=C_mutate(&lf[110],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_8439,a[2]=((C_word)li68),tmp=(C_word)a,a+=3,tmp));
t51=C_mutate(&lf[111],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_8446,a[2]=((C_word)li69),tmp=(C_word)a,a+=3,tmp));
t52=C_mutate(&lf[112],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_8449,a[2]=((C_word)li70),tmp=(C_word)a,a+=3,tmp));
t53=C_mutate((C_word*)lf[113]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_8468,a[2]=((C_word)li71),tmp=(C_word)a,a+=3,tmp));
t54=C_mutate((C_word*)lf[114]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_8475,a[2]=((C_word)li72),tmp=(C_word)a,a+=3,tmp));
t55=C_mutate((C_word*)lf[115]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_8482,a[2]=((C_word)li74),tmp=(C_word)a,a+=3,tmp));
t56=C_mutate((C_word*)lf[116]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_8516,a[2]=((C_word)li77),tmp=(C_word)a,a+=3,tmp));
t57=C_mutate((C_word*)lf[118]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_8627,a[2]=((C_word)li78),tmp=(C_word)a,a+=3,tmp));
t58=C_mutate((C_word*)lf[119]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_8642,a[2]=((C_word)li80),tmp=(C_word)a,a+=3,tmp));
t59=C_mutate((C_word*)lf[122]+1,lf[123]);
t60=C_set_block_item(lf[124],0,C_fix(1073741823));
t61=C_set_block_item(lf[125],0,C_fix(-1073741823));
t62=C_mutate((C_word*)lf[126]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_8666,a[2]=((C_word)li82),tmp=(C_word)a,a+=3,tmp));
t63=C_mutate((C_word*)lf[128]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_8735,a[2]=((C_word)li84),tmp=(C_word)a,a+=3,tmp));
t64=C_mutate((C_word*)lf[130]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_8804,a[2]=((C_word)li86),tmp=(C_word)a,a+=3,tmp));
t65=C_mutate((C_word*)lf[132]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_8847,a[2]=((C_word)li88),tmp=(C_word)a,a+=3,tmp));
t66=C_mutate((C_word*)lf[134]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_8890,a[2]=((C_word)li90),tmp=(C_word)a,a+=3,tmp));
t67=C_mutate((C_word*)lf[135]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_8911,a[2]=((C_word)li92),tmp=(C_word)a,a+=3,tmp));
t68=C_mutate((C_word*)lf[139]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_8951,a[2]=((C_word)li94),tmp=(C_word)a,a+=3,tmp));
t69=C_mutate((C_word*)lf[144]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_9187,a[2]=((C_word)li95),tmp=(C_word)a,a+=3,tmp));
t70=C_mutate((C_word*)lf[145]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_9202,a[2]=((C_word)li96),tmp=(C_word)a,a+=3,tmp));
t71=C_mutate(&lf[146],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_9217,a[2]=((C_word)li98),tmp=(C_word)a,a+=3,tmp));
t72=C_mutate((C_word*)lf[151]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_9303,a[2]=((C_word)li99),tmp=(C_word)a,a+=3,tmp));
t73=C_mutate((C_word*)lf[153]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_9349,a[2]=((C_word)li100),tmp=(C_word)a,a+=3,tmp));
t74=C_mutate((C_word*)lf[155]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_9416,a[2]=((C_word)li103),tmp=(C_word)a,a+=3,tmp));
t75=C_mutate((C_word*)lf[158]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_9549,a[2]=((C_word)li105),tmp=(C_word)a,a+=3,tmp));
t76=C_mutate((C_word*)lf[161]+1,C_retrieve2(lf[100],"tb:ran-set!"));
t77=C_mutate((C_word*)lf[154]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_9657,a[2]=((C_word)li106),tmp=(C_word)a,a+=3,tmp));
t78=C_mutate((C_word*)lf[162]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_9692,a[2]=((C_word)li107),tmp=(C_word)a,a+=3,tmp));
t79=C_mutate((C_word*)lf[163]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_9713,a[2]=((C_word)li108),tmp=(C_word)a,a+=3,tmp));
t80=C_mutate((C_word*)lf[164]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_9756,a[2]=((C_word)li109),tmp=(C_word)a,a+=3,tmp));
t81=C_mutate((C_word*)lf[168]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_9984,a[2]=((C_word)li112),tmp=(C_word)a,a+=3,tmp));
t82=C_mutate((C_word*)lf[171]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_10083,a[2]=((C_word)li114),tmp=(C_word)a,a+=3,tmp));
t83=C_mutate((C_word*)lf[172]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_10138,a[2]=((C_word)li115),tmp=(C_word)a,a+=3,tmp));
t84=C_mutate((C_word*)lf[173]+1,C_retrieve2(lf[103],"tb:ranlow"));
t85=C_mutate((C_word*)lf[174]+1,C_retrieve2(lf[104],"tb:ranhigh"));
t86=C_mutate((C_word*)lf[175]+1,C_retrieve2(lf[105],"tb:ranmiddle"));
t87=C_mutate((C_word*)lf[176]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_10180,a[2]=((C_word)li116),tmp=(C_word)a,a+=3,tmp));
t88=C_mutate((C_word*)lf[180]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_10408,a[2]=((C_word)li117),tmp=(C_word)a,a+=3,tmp));
t89=C_mutate((C_word*)lf[181]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_10427,a[2]=((C_word)li118),tmp=(C_word)a,a+=3,tmp));
t90=C_mutate((C_word*)lf[182]+1,C_retrieve2(lf[109],"tb:rancauchy"));
t91=C_mutate((C_word*)lf[183]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_10468,a[2]=((C_word)li119),tmp=(C_word)a,a+=3,tmp));
t92=C_mutate((C_word*)lf[185]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_10487,a[2]=((C_word)li120),tmp=(C_word)a,a+=3,tmp));
t93=C_mutate((C_word*)lf[186]+1,C_retrieve2(lf[112],"tb:ranbrown"));
t94=C_mutate((C_word*)lf[187]+1,C_retrieve2(lf[111],"tb:ranpink"));
t95=C_mutate((C_word*)lf[188]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_10508,a[2]=((C_word)li124),tmp=(C_word)a,a+=3,tmp));
t96=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_10717,a[2]=((C_word*)t0)[2],tmp=(C_word)a,a+=3,tmp);
C_trace("ChickenBridge.scm: 377  make-hash-table");
t97=C_retrieve(lf[1011]);
((C_proc3)C_retrieve_proc(t97))(3,t97,t96,*((C_word*)lf[455]+1));}

/* k10715 in k7274 in k7271 in k6978 in k6975 in k6971 in k6680 in k6677 in k6674 in k6671 */
static void C_ccall f_10717(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word ab[12],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_10717,2,t0,t1);}
t2=C_mutate(&lf[191],t1);
t3=C_SCHEME_END_OF_LIST;
t4=(*a=C_VECTOR_TYPE|1,a[1]=t3,tmp=(C_word)a,a+=2,tmp);
t5=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_10720,a[2]=((C_word*)t0)[2],tmp=(C_word)a,a+=3,tmp);
t6=C_SCHEME_UNDEFINED;
t7=(*a=C_VECTOR_TYPE|1,a[1]=t6,tmp=(C_word)a,a+=2,tmp);
t8=C_set_block_item(t7,0,(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_42145,a[2]=t7,a[3]=t4,a[4]=((C_word)li695),tmp=(C_word)a,a+=5,tmp));
t9=((C_word*)t7)[1];
f_42145(t9,t5,C_fix(0));}

/* do762 in k10715 in k7274 in k7271 in k6978 in k6975 in k6971 in k6680 in k6677 in k6674 in k6671 */
static void C_fcall f_42145(C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[25],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_42145,NULL,3,t0,t1,t2);}
if(C_truep((C_word)C_i_nequalp(t2,C_fix(128)))){
t3=(C_word)C_a_i_list(&a,5,lf[1015],C_fix(-1),lf[1016],C_SCHEME_FALSE,C_SCHEME_FALSE);
t4=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_42158,a[2]=t3,a[3]=t1,tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 377  hash-table-set!");
t5=C_retrieve(lf[852]);
((C_proc5)C_retrieve_proc(t5))(5,t5,t4,C_retrieve2(lf[191],"*notes*"),lf[1017],t3);}
else{
t3=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_42359,a[2]=t1,a[3]=((C_word*)t0)[2],a[4]=t2,a[5]=((C_word*)t0)[3],tmp=(C_word)a,a+=6,tmp);
C_trace("ChickenBridge.scm: 377  modulo");
t4=*((C_word*)lf[159]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t3,t2,C_fix(12));}}

/* k42357 in do762 in k10715 in k7274 in k7271 in k6978 in k6975 in k6971 in k6680 in k6677 in k6674 in k6671 */
static void C_ccall f_42359(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[10],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_42359,2,t0,t1);}
t2=(C_word)C_i_list_ref(lf[1018],t1);
t3=C_mutate(((C_word *)((C_word*)t0)[5])+1,t2);
t4=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_42168,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],tmp=(C_word)a,a+=5,tmp);
t5=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_42179,a[2]=t4,a[3]=((C_word*)t0)[5],a[4]=((C_word*)t0)[4],tmp=(C_word)a,a+=5,tmp);
C_trace("ChickenBridge.scm: 377  modulo");
t6=*((C_word*)lf[159]+1);
((C_proc4)C_retrieve_proc(t6))(4,t6,t5,((C_word*)t0)[4],C_fix(12));}

/* k42177 in k42357 in do762 in k10715 in k7274 in k7271 in k6978 in k6975 in k6971 in k6680 in k6677 in k6674 in k6671 */
static void C_ccall f_42179(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[16],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_42179,2,t0,t1);}
t2=(C_word)C_a_i_minus(&a,2,((C_word*)t0)[4],lf[1019]);
t3=(C_word)C_a_i_plus(&a,2,((C_word*)t0)[4],lf[1020]);
t4=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_42191,a[2]=t3,a[3]=t2,a[4]=t1,a[5]=((C_word*)t0)[4],a[6]=((C_word*)t0)[2],a[7]=((C_word*)t0)[3],tmp=(C_word)a,a+=8,tmp);
C_trace("ChickenBridge.scm: 377  tb:keynum->hertz");
f_8331(t4,((C_word*)t0)[4]);}

/* k42189 in k42177 in k42357 in do762 in k10715 in k7274 in k7271 in k6978 in k6975 in k6971 in k6680 in k6677 in k6674 in k6671 */
static void C_ccall f_42191(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[13],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_42191,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|8,a[1]=(C_word)f_42195,a[2]=t1,a[3]=((C_word*)t0)[2],a[4]=((C_word*)t0)[3],a[5]=((C_word*)t0)[4],a[6]=((C_word*)t0)[5],a[7]=((C_word*)t0)[6],a[8]=((C_word*)t0)[7],tmp=(C_word)a,a+=9,tmp);
t3=(C_word)C_a_i_plus(&a,2,((C_word*)t0)[5],lf[1028]);
C_trace("ChickenBridge.scm: 377  tb:keynum->hertz");
f_8331(t2,t3);}

/* k42193 in k42189 in k42177 in k42357 in do762 in k10715 in k7274 in k7271 in k6978 in k6975 in k6971 in k6680 in k6677 in k6674 in k6671 */
static void C_ccall f_42195(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[14],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_42195,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|9,a[1]=(C_word)f_42199,a[2]=t1,a[3]=((C_word*)t0)[2],a[4]=((C_word*)t0)[3],a[5]=((C_word*)t0)[4],a[6]=((C_word*)t0)[5],a[7]=((C_word*)t0)[6],a[8]=((C_word*)t0)[7],a[9]=((C_word*)t0)[8],tmp=(C_word)a,a+=10,tmp);
t3=(C_word)C_a_i_minus(&a,2,((C_word*)t0)[6],lf[1027]);
C_trace("ChickenBridge.scm: 377  tb:keynum->hertz");
f_8331(t2,t3);}

/* k42197 in k42193 in k42189 in k42177 in k42357 in do762 in k10715 in k7274 in k7271 in k6978 in k6975 in k6971 in k6680 in k6677 in k6674 in k6671 */
static void C_ccall f_42199(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[15],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_42199,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|10,a[1]=(C_word)f_42343,a[2]=t1,a[3]=((C_word*)t0)[2],a[4]=((C_word*)t0)[3],a[5]=((C_word*)t0)[4],a[6]=((C_word*)t0)[5],a[7]=((C_word*)t0)[6],a[8]=((C_word*)t0)[7],a[9]=((C_word*)t0)[8],a[10]=((C_word*)t0)[9],tmp=(C_word)a,a+=11,tmp);
t3=(C_word)C_a_i_divide(&a,2,((C_word*)t0)[7],C_fix(12));
C_trace("ChickenBridge.scm: 377  floor");
t4=*((C_word*)lf[201]+1);
((C_proc3)C_retrieve_proc(t4))(3,t4,t2,t3);}

/* k42341 in k42197 in k42193 in k42189 in k42177 in k42357 in do762 in k10715 in k7274 in k7271 in k6978 in k6975 in k6971 in k6680 in k6677 in k6674 in k6671 */
static void C_ccall f_42343(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_42343,2,t0,t1);}
t2=(C_word)C_i_inexact_to_exact(t1);
t3=C_SCHEME_UNDEFINED;
t4=(*a=C_VECTOR_TYPE|1,a[1]=t3,tmp=(C_word)a,a+=2,tmp);
t5=C_set_block_item(t4,0,(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_42205,a[2]=((C_word*)t0)[10],a[3]=t4,a[4]=((C_word)li694),tmp=(C_word)a,a+=5,tmp));
t6=((C_word*)t4)[1];
f_42205(t6,((C_word*)t0)[9],((C_word*)((C_word*)t0)[10])[1],((C_word*)t0)[8],((C_word*)t0)[7],((C_word*)t0)[6],((C_word*)t0)[5],((C_word*)t0)[4],((C_word*)t0)[3],((C_word*)t0)[2],t2,C_SCHEME_FALSE,C_SCHEME_FALSE,C_SCHEME_FALSE);}

/* do768 in k42341 in k42197 in k42193 in k42189 in k42177 in k42357 in do762 in k10715 in k7274 in k7271 in k6978 in k6975 in k6971 in k6680 in k6677 in k6674 in k6671 */
static void C_fcall f_42205(C_word t0,C_word t1,C_word t2,C_word t3,C_word t4,C_word t5,C_word t6,C_word t7,C_word t8,C_word t9,C_word t10,C_word t11,C_word t12,C_word t13){
C_word tmp;
C_word t14;
C_word t15;
C_word t16;
C_word t17;
C_word t18;
C_word t19;
C_word t20;
C_word t21;
C_word ab[40],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_42205,NULL,14,t0,t1,t2,t3,t4,t5,t6,t7,t8,t9,t10,t11,t12,t13);}
t14=(*a=C_VECTOR_TYPE|1,a[1]=t10,tmp=(C_word)a,a+=2,tmp);
t15=(*a=C_VECTOR_TYPE|1,a[1]=t11,tmp=(C_word)a,a+=2,tmp);
t16=(*a=C_VECTOR_TYPE|1,a[1]=t12,tmp=(C_word)a,a+=2,tmp);
t17=(*a=C_VECTOR_TYPE|1,a[1]=t13,tmp=(C_word)a,a+=2,tmp);
if(C_truep((C_word)C_i_nullp(t2))){
t18=t1;
((C_proc2)(void*)(*((C_word*)t18+1)))(2,t18,C_SCHEME_FALSE);}
else{
t18=(*a=C_CLOSURE_TYPE|15,a[1]=(C_word)f_42215,a[2]=t17,a[3]=t16,a[4]=t15,a[5]=t14,a[6]=t9,a[7]=t8,a[8]=t7,a[9]=t6,a[10]=t5,a[11]=t4,a[12]=t3,a[13]=t1,a[14]=((C_word*)t0)[3],a[15]=t2,tmp=(C_word)a,a+=16,tmp);
t19=(*a=C_CLOSURE_TYPE|15,a[1]=(C_word)f_42225,a[2]=((C_word*)t0)[2],a[3]=t2,a[4]=t8,a[5]=t6,a[6]=t9,a[7]=t5,a[8]=t17,a[9]=t4,a[10]=t7,a[11]=t3,a[12]=t16,a[13]=t15,a[14]=t14,a[15]=t18,tmp=(C_word)a,a+=16,tmp);
if(C_truep((C_word)C_i_nequalp(t3,C_fix(0)))){
t20=(C_word)C_i_car(t2);
t21=t19;
f_42225(t21,(C_word)C_i_string_equal_p(t20,lf[1026]));}
else{
t20=t19;
f_42225(t20,C_SCHEME_FALSE);}}}

/* k42223 in do768 in k42341 in k42197 in k42193 in k42189 in k42177 in k42357 in do762 in k10715 in k7274 in k7271 in k6978 in k6975 in k6971 in k6680 in k6677 in k6674 in k6671 */
static void C_fcall f_42225(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word ab[24],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_42225,NULL,2,t0,t1);}
if(C_truep(t1)){
t2=((C_word*)t0)[15];
f_42215(2,t2,C_SCHEME_UNDEFINED);}
else{
t2=(*a=C_CLOSURE_TYPE|15,a[1]=(C_word)f_42228,a[2]=((C_word*)t0)[15],a[3]=((C_word*)t0)[2],a[4]=((C_word*)t0)[3],a[5]=((C_word*)t0)[4],a[6]=((C_word*)t0)[5],a[7]=((C_word*)t0)[6],a[8]=((C_word*)t0)[7],a[9]=((C_word*)t0)[8],a[10]=((C_word*)t0)[9],a[11]=((C_word*)t0)[10],a[12]=((C_word*)t0)[11],a[13]=((C_word*)t0)[12],a[14]=((C_word*)t0)[13],a[15]=((C_word*)t0)[14],tmp=(C_word)a,a+=16,tmp);
t3=(C_word)C_i_car(((C_word*)t0)[3]);
if(C_truep((C_word)C_i_string_equal_p(t3,lf[1024]))){
t4=(C_word)C_a_i_minus(&a,2,((C_word*)((C_word*)t0)[14])[1],C_fix(1));
t5=C_mutate(((C_word *)((C_word*)t0)[14])+1,t4);
t6=t2;
f_42228(t6,t5);}
else{
t4=(C_word)C_i_car(((C_word*)t0)[3]);
if(C_truep((C_word)C_i_string_equal_p(t4,lf[1025]))){
t5=(C_word)C_a_i_plus(&a,2,((C_word*)((C_word*)t0)[14])[1],C_fix(1));
t6=C_mutate(((C_word *)((C_word*)t0)[14])+1,t5);
t7=t2;
f_42228(t7,t6);}
else{
t5=t2;
f_42228(t5,C_SCHEME_UNDEFINED);}}}}

/* k42226 in k42223 in do768 in k42341 in k42197 in k42193 in k42189 in k42177 in k42357 in do762 in k10715 in k7274 in k7271 in k6978 in k6975 in k6971 in k6680 in k6677 in k6674 in k6671 */
static void C_fcall f_42228(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[15],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_42228,NULL,2,t0,t1);}
t2=(C_word)C_i_list_ref(lf[1021],((C_word*)((C_word*)t0)[15])[1]);
t3=C_mutate(((C_word *)((C_word*)t0)[14])+1,t2);
t4=(*a=C_CLOSURE_TYPE|14,a[1]=(C_word)f_42236,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],a[7]=((C_word*)t0)[7],a[8]=((C_word*)t0)[8],a[9]=((C_word*)t0)[9],a[10]=((C_word*)t0)[14],a[11]=((C_word*)t0)[10],a[12]=((C_word*)t0)[11],a[13]=((C_word*)t0)[12],a[14]=((C_word*)t0)[13],tmp=(C_word)a,a+=15,tmp);
t5=(C_word)C_i_car(((C_word*)t0)[4]);
C_trace("ChickenBridge.scm: 377  string-append");
t6=*((C_word*)lf[53]+1);
((C_proc4)C_retrieve_proc(t6))(4,t6,t4,t5,((C_word*)((C_word*)t0)[14])[1]);}

/* k42234 in k42226 in k42223 in do768 in k42341 in k42197 in k42193 in k42189 in k42177 in k42357 in do762 in k10715 in k7274 in k7271 in k6978 in k6975 in k6971 in k6680 in k6677 in k6674 in k6671 */
static void C_ccall f_42236(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[28],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_42236,2,t0,t1);}
t2=C_mutate(((C_word *)((C_word*)t0)[14])+1,t1);
t3=(C_word)C_a_i_list(&a,5,((C_word*)((C_word*)t0)[14])[1],((C_word*)t0)[13],((C_word*)t0)[12],((C_word*)t0)[11],((C_word*)((C_word*)t0)[10])[1]);
t4=C_mutate(((C_word *)((C_word*)t0)[9])+1,t3);
t5=(*a=C_CLOSURE_TYPE|12,a[1]=(C_word)f_42243,a[2]=((C_word*)t0)[13],a[3]=((C_word*)t0)[2],a[4]=((C_word*)t0)[3],a[5]=((C_word*)t0)[4],a[6]=((C_word*)t0)[5],a[7]=((C_word*)t0)[6],a[8]=((C_word*)t0)[9],a[9]=((C_word*)t0)[10],a[10]=((C_word*)t0)[7],a[11]=((C_word*)t0)[8],a[12]=((C_word*)t0)[14],tmp=(C_word)a,a+=13,tmp);
C_trace("ChickenBridge.scm: 377  hash-table-set!");
t6=C_retrieve(lf[852]);
((C_proc5)C_retrieve_proc(t6))(5,t6,t5,C_retrieve2(lf[191],"*notes*"),((C_word*)((C_word*)t0)[14])[1],((C_word*)((C_word*)t0)[9])[1]);}

/* k42241 in k42234 in k42226 in k42223 in do768 in k42341 in k42197 in k42193 in k42189 in k42177 in k42357 in do762 in k10715 in k7274 in k7271 in k6978 in k6975 in k6971 in k6680 in k6677 in k6674 in k6671 */
static void C_ccall f_42243(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[12],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_42243,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|11,a[1]=(C_word)f_42246,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],a[7]=((C_word*)t0)[8],a[8]=((C_word*)t0)[9],a[9]=((C_word*)t0)[10],a[10]=((C_word*)t0)[11],a[11]=((C_word*)t0)[12],tmp=(C_word)a,a+=12,tmp);
t3=(C_word)C_eqp(((C_word*)t0)[5],((C_word*)((C_word*)t0)[4])[1]);
if(C_truep(t3)){
C_trace("ChickenBridge.scm: 377  hash-table-set!");
t4=C_retrieve(lf[852]);
((C_proc5)C_retrieve_proc(t4))(5,t4,t2,C_retrieve2(lf[191],"*notes*"),((C_word*)t0)[2],((C_word*)((C_word*)t0)[8])[1]);}
else{
t4=t2;
f_42246(2,t4,C_SCHEME_UNDEFINED);}}

/* k42244 in k42241 in k42234 in k42226 in k42223 in do768 in k42341 in k42197 in k42193 in k42189 in k42177 in k42357 in do762 in k10715 in k7274 in k7271 in k6978 in k6975 in k6971 in k6680 in k6677 in k6674 in k6671 */
static void C_ccall f_42246(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[12],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_42246,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|11,a[1]=(C_word)f_42250,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],a[7]=((C_word*)t0)[7],a[8]=((C_word*)t0)[8],a[9]=((C_word*)t0)[9],a[10]=((C_word*)t0)[10],a[11]=((C_word*)t0)[11],tmp=(C_word)a,a+=12,tmp);
t3=(C_word)C_i_car(((C_word*)t0)[4]);
C_trace("ChickenBridge.scm: 377  string-append");
t4=*((C_word*)lf[53]+1);
((C_proc5)C_retrieve_proc(t4))(5,t4,t2,t3,lf[1023],((C_word*)((C_word*)t0)[8])[1]);}

/* k42248 in k42244 in k42241 in k42234 in k42226 in k42223 in do768 in k42341 in k42197 in k42193 in k42189 in k42177 in k42357 in do762 in k10715 in k7274 in k7271 in k6978 in k6975 in k6971 in k6680 in k6677 in k6674 in k6671 */
static void C_ccall f_42250(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[26],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_42250,2,t0,t1);}
t2=C_mutate(((C_word *)((C_word*)t0)[11])+1,t1);
t3=(C_word)C_a_i_list(&a,5,((C_word*)((C_word*)t0)[11])[1],((C_word*)t0)[10],((C_word*)t0)[9],C_SCHEME_FALSE,((C_word*)((C_word*)t0)[8])[1]);
t4=C_mutate(((C_word *)((C_word*)t0)[7])+1,t3);
t5=(*a=C_CLOSURE_TYPE|10,a[1]=(C_word)f_42257,a[2]=((C_word*)t0)[10],a[3]=((C_word*)t0)[2],a[4]=((C_word*)t0)[3],a[5]=((C_word*)t0)[4],a[6]=((C_word*)t0)[7],a[7]=((C_word*)t0)[8],a[8]=((C_word*)t0)[5],a[9]=((C_word*)t0)[6],a[10]=((C_word*)t0)[11],tmp=(C_word)a,a+=11,tmp);
C_trace("ChickenBridge.scm: 377  hash-table-set!");
t6=C_retrieve(lf[852]);
((C_proc5)C_retrieve_proc(t6))(5,t6,t5,C_retrieve2(lf[191],"*notes*"),((C_word*)((C_word*)t0)[11])[1],((C_word*)((C_word*)t0)[7])[1]);}

/* k42255 in k42248 in k42244 in k42241 in k42234 in k42226 in k42223 in do768 in k42341 in k42197 in k42193 in k42189 in k42177 in k42357 in do762 in k10715 in k7274 in k7271 in k6978 in k6975 in k6971 in k6680 in k6677 in k6674 in k6671 */
static void C_ccall f_42257(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[10],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_42257,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|9,a[1]=(C_word)f_42260,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],a[7]=((C_word*)t0)[8],a[8]=((C_word*)t0)[9],a[9]=((C_word*)t0)[10],tmp=(C_word)a,a+=10,tmp);
t3=(C_word)C_eqp(((C_word*)t0)[5],((C_word*)((C_word*)t0)[4])[1]);
if(C_truep(t3)){
C_trace("ChickenBridge.scm: 377  hash-table-set!");
t4=C_retrieve(lf[852]);
((C_proc5)C_retrieve_proc(t4))(5,t4,t2,C_retrieve2(lf[191],"*notes*"),((C_word*)t0)[2],((C_word*)((C_word*)t0)[6])[1]);}
else{
t4=t2;
f_42260(2,t4,C_SCHEME_UNDEFINED);}}

/* k42258 in k42255 in k42248 in k42244 in k42241 in k42234 in k42226 in k42223 in do768 in k42341 in k42197 in k42193 in k42189 in k42177 in k42357 in do762 in k10715 in k7274 in k7271 in k6978 in k6975 in k6971 in k6680 in k6677 in k6674 in k6671 */
static void C_ccall f_42260(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[10],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_42260,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|9,a[1]=(C_word)f_42264,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],a[7]=((C_word*)t0)[7],a[8]=((C_word*)t0)[8],a[9]=((C_word*)t0)[9],tmp=(C_word)a,a+=10,tmp);
t3=(C_word)C_i_car(((C_word*)t0)[4]);
C_trace("ChickenBridge.scm: 377  string-append");
t4=*((C_word*)lf[53]+1);
((C_proc5)C_retrieve_proc(t4))(5,t4,t2,t3,lf[1022],((C_word*)((C_word*)t0)[6])[1]);}

/* k42262 in k42258 in k42255 in k42248 in k42244 in k42241 in k42234 in k42226 in k42223 in do768 in k42341 in k42197 in k42193 in k42189 in k42177 in k42357 in do762 in k10715 in k7274 in k7271 in k6978 in k6975 in k6971 in k6680 in k6677 in k6674 in k6671 */
static void C_ccall f_42264(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[22],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_42264,2,t0,t1);}
t2=C_mutate(((C_word *)((C_word*)t0)[9])+1,t1);
t3=(C_word)C_a_i_list(&a,5,((C_word*)((C_word*)t0)[9])[1],((C_word*)t0)[8],((C_word*)t0)[7],C_SCHEME_FALSE,((C_word*)((C_word*)t0)[6])[1]);
t4=C_mutate(((C_word *)((C_word*)t0)[5])+1,t3);
t5=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_42271,a[2]=((C_word*)t0)[5],a[3]=((C_word*)t0)[8],a[4]=((C_word*)t0)[2],a[5]=((C_word*)t0)[3],a[6]=((C_word*)t0)[4],tmp=(C_word)a,a+=7,tmp);
C_trace("ChickenBridge.scm: 377  hash-table-set!");
t6=C_retrieve(lf[852]);
((C_proc5)C_retrieve_proc(t6))(5,t6,t5,C_retrieve2(lf[191],"*notes*"),((C_word*)((C_word*)t0)[9])[1],((C_word*)((C_word*)t0)[5])[1]);}

/* k42269 in k42262 in k42258 in k42255 in k42248 in k42244 in k42241 in k42234 in k42226 in k42223 in do768 in k42341 in k42197 in k42193 in k42189 in k42177 in k42357 in do762 in k10715 in k7274 in k7271 in k6978 in k6975 in k6971 in k6680 in k6677 in k6674 in k6671 */
static void C_ccall f_42271(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word *a;
t2=(C_word)C_eqp(((C_word*)t0)[6],((C_word*)((C_word*)t0)[5])[1]);
if(C_truep(t2)){
C_trace("ChickenBridge.scm: 377  hash-table-set!");
t3=C_retrieve(lf[852]);
((C_proc5)C_retrieve_proc(t3))(5,t3,((C_word*)t0)[4],C_retrieve2(lf[191],"*notes*"),((C_word*)t0)[3],((C_word*)((C_word*)t0)[2])[1]);}
else{
t3=((C_word*)t0)[4];
f_42215(2,t3,C_SCHEME_UNDEFINED);}}

/* k42213 in do768 in k42341 in k42197 in k42193 in k42189 in k42177 in k42357 in do762 in k10715 in k7274 in k7271 in k6978 in k6975 in k6971 in k6680 in k6677 in k6674 in k6671 */
static void C_ccall f_42215(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word *a;
t2=(C_word)C_i_cdr(((C_word*)t0)[15]);
t3=((C_word*)((C_word*)t0)[14])[1];
f_42205(t3,((C_word*)t0)[13],t2,((C_word*)t0)[12],((C_word*)t0)[11],((C_word*)t0)[10],((C_word*)t0)[9],((C_word*)t0)[8],((C_word*)t0)[7],((C_word*)t0)[6],((C_word*)((C_word*)t0)[5])[1],((C_word*)((C_word*)t0)[4])[1],((C_word*)((C_word*)t0)[3])[1],((C_word*)((C_word*)t0)[2])[1]);}

/* k42166 in k42357 in do762 in k10715 in k7274 in k7271 in k6978 in k6975 in k6971 in k6680 in k6677 in k6674 in k6671 */
static void C_ccall f_42168(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[4],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_42168,2,t0,t1);}
t2=(C_word)C_a_i_plus(&a,2,((C_word*)t0)[4],C_fix(1));
t3=((C_word*)((C_word*)t0)[3])[1];
f_42145(t3,((C_word*)t0)[2],t2);}

/* k42156 in do762 in k10715 in k7274 in k7271 in k6978 in k6975 in k6971 in k6680 in k6677 in k6674 in k6671 */
static void C_ccall f_42158(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[3],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_42158,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_42161,a[2]=((C_word*)t0)[3],tmp=(C_word)a,a+=3,tmp);
C_trace("ChickenBridge.scm: 377  hash-table-set!");
t3=C_retrieve(lf[852]);
((C_proc5)C_retrieve_proc(t3))(5,t3,t2,C_retrieve2(lf[191],"*notes*"),C_fix(-1),((C_word*)t0)[2]);}

/* k42159 in k42156 in do762 in k10715 in k7274 in k7271 in k6978 in k6975 in k6971 in k6680 in k6677 in k6674 in k6671 */
static void C_ccall f_42161(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
t2=((C_word*)t0)[2];
((C_proc2)(void*)(*((C_word*)t2+1)))(2,t2,C_SCHEME_TRUE);}

/* k10718 in k10715 in k7274 in k7271 in k6978 in k6975 in k6971 in k6680 in k6677 in k6674 in k6671 */
static void C_ccall f_10720(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word t14;
C_word t15;
C_word t16;
C_word t17;
C_word t18;
C_word t19;
C_word t20;
C_word t21;
C_word t22;
C_word t23;
C_word ab[60],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_10720,2,t0,t1);}
t2=C_mutate(&lf[192],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_10722,a[2]=((C_word)li127),tmp=(C_word)a,a+=3,tmp));
t3=C_mutate(&lf[195],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_10824,a[2]=((C_word)li130),tmp=(C_word)a,a+=3,tmp));
t4=C_mutate((C_word*)lf[203]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_10877,a[2]=((C_word)li132),tmp=(C_word)a,a+=3,tmp));
t5=C_mutate((C_word*)lf[205]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_10974,a[2]=((C_word)li134),tmp=(C_word)a,a+=3,tmp));
t6=C_mutate((C_word*)lf[207]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_11096,a[2]=((C_word)li136),tmp=(C_word)a,a+=3,tmp));
t7=C_mutate((C_word*)lf[209]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_11212,a[2]=((C_word)li137),tmp=(C_word)a,a+=3,tmp));
t8=C_mutate((C_word*)lf[210]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_11257,a[2]=((C_word)li141),tmp=(C_word)a,a+=3,tmp));
t9=C_mutate((C_word*)lf[213]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_11392,a[2]=((C_word)li145),tmp=(C_word)a,a+=3,tmp));
t10=C_mutate((C_word*)lf[215]+1,*((C_word*)lf[216]+1));
t11=C_mutate((C_word*)lf[217]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_11558,a[2]=((C_word)li148),tmp=(C_word)a,a+=3,tmp));
t12=C_mutate(&lf[220],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_11700,a[2]=((C_word)li149),tmp=(C_word)a,a+=3,tmp));
t13=C_mutate(&lf[222],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_11706,a[2]=((C_word)li150),tmp=(C_word)a,a+=3,tmp));
t14=C_mutate((C_word*)lf[223]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_11721,a[2]=((C_word)li151),tmp=(C_word)a,a+=3,tmp));
t15=C_mutate(&lf[224],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_11730,a[2]=((C_word)li152),tmp=(C_word)a,a+=3,tmp));
t16=C_mutate((C_word*)lf[226]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_11739,a[2]=((C_word)li153),tmp=(C_word)a,a+=3,tmp));
t17=C_mutate(&lf[227],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_11748,a[2]=((C_word)li154),tmp=(C_word)a,a+=3,tmp));
t18=C_mutate((C_word*)lf[228]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_11757,a[2]=((C_word)li155),tmp=(C_word)a,a+=3,tmp));
t19=C_mutate(&lf[229],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_11766,a[2]=((C_word)li156),tmp=(C_word)a,a+=3,tmp));
t20=C_mutate((C_word*)lf[230]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_11775,a[2]=((C_word)li157),tmp=(C_word)a,a+=3,tmp));
t21=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_11785,a[2]=((C_word*)t0)[2],tmp=(C_word)a,a+=3,tmp);
t22=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_42135,a[2]=((C_word)li693),tmp=(C_word)a,a+=3,tmp);
C_trace("ChickenBridge.scm: 378  ##sys#register-record-printer");
t23=C_retrieve(lf[1002]);
((C_proc4)C_retrieve_proc(t23))(4,t23,t21,lf[221],t22);}

/* a42134 in k10718 in k10715 in k7274 in k7271 in k6978 in k6975 in k6971 in k6680 in k6677 in k6674 in k6671 */
static void C_ccall f_42135(C_word c,C_word t0,C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word ab[4],*a=ab;
if(c!=4) C_bad_argc_2(c,4,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr4,(void*)f_42135,4,t0,t1,t2,t3);}
t4=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_42143,a[2]=t3,a[3]=t1,tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 378  spectrum-freqs");
t5=C_retrieve(lf[228]);
((C_proc3)C_retrieve_proc(t5))(3,t5,t4,t2);}

/* k42141 in a42134 in k10718 in k10715 in k7274 in k7271 in k6978 in k6975 in k6971 in k6680 in k6677 in k6674 in k6671 */
static void C_ccall f_42143(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 378  fprintf");
t2=C_retrieve(lf[999]);
((C_proc5)C_retrieve_proc(t2))(5,t2,((C_word*)t0)[3],((C_word*)t0)[2],lf[1014],t1);}

/* k11783 in k10718 in k10715 in k7274 in k7271 in k6978 in k6975 in k6971 in k6680 in k6677 in k6674 in k6671 */
static void C_ccall f_11785(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word t14;
C_word t15;
C_word t16;
C_word t17;
C_word t18;
C_word t19;
C_word t20;
C_word t21;
C_word t22;
C_word t23;
C_word t24;
C_word t25;
C_word t26;
C_word t27;
C_word t28;
C_word t29;
C_word t30;
C_word t31;
C_word t32;
C_word t33;
C_word t34;
C_word t35;
C_word t36;
C_word t37;
C_word t38;
C_word t39;
C_word t40;
C_word t41;
C_word t42;
C_word t43;
C_word t44;
C_word t45;
C_word t46;
C_word t47;
C_word t48;
C_word t49;
C_word t50;
C_word t51;
C_word t52;
C_word t53;
C_word t54;
C_word t55;
C_word t56;
C_word t57;
C_word t58;
C_word t59;
C_word t60;
C_word t61;
C_word t62;
C_word t63;
C_word t64;
C_word t65;
C_word t66;
C_word t67;
C_word t68;
C_word t69;
C_word t70;
C_word t71;
C_word t72;
C_word t73;
C_word t74;
C_word t75;
C_word t76;
C_word t77;
C_word t78;
C_word t79;
C_word t80;
C_word t81;
C_word t82;
C_word ab[240],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_11785,2,t0,t1);}
t2=C_mutate((C_word*)lf[231]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_11787,a[2]=((C_word)li158),tmp=(C_word)a,a+=3,tmp));
t3=C_mutate((C_word*)lf[232]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_11825,a[2]=((C_word)li160),tmp=(C_word)a,a+=3,tmp));
t4=C_mutate((C_word*)lf[234]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_11884,a[2]=((C_word)li161),tmp=(C_word)a,a+=3,tmp));
t5=C_mutate((C_word*)lf[235]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_11894,a[2]=((C_word)li162),tmp=(C_word)a,a+=3,tmp));
t6=C_mutate((C_word*)lf[236]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_11912,a[2]=((C_word)li164),tmp=(C_word)a,a+=3,tmp));
t7=C_mutate((C_word*)lf[239]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_11943,a[2]=((C_word)li166),tmp=(C_word)a,a+=3,tmp));
t8=C_mutate((C_word*)lf[241]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_12191,a[2]=((C_word)li175),tmp=(C_word)a,a+=3,tmp));
t9=C_mutate((C_word*)lf[249]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_13664,a[2]=((C_word)li181),tmp=(C_word)a,a+=3,tmp));
t10=C_mutate((C_word*)lf[254]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_14076,a[2]=((C_word)li183),tmp=(C_word)a,a+=3,tmp));
t11=C_mutate((C_word*)lf[255]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_14255,a[2]=((C_word)li191),tmp=(C_word)a,a+=3,tmp));
t12=C_mutate((C_word*)lf[260]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_14467,a[2]=((C_word)li193),tmp=(C_word)a,a+=3,tmp));
t13=C_mutate((C_word*)lf[261]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_14524,a[2]=((C_word)li202),tmp=(C_word)a,a+=3,tmp));
t14=C_mutate((C_word*)lf[270]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_15037,a[2]=((C_word)li209),tmp=(C_word)a,a+=3,tmp));
t15=C_mutate((C_word*)lf[282]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_15163,a[2]=((C_word)li214),tmp=(C_word)a,a+=3,tmp));
t16=C_mutate(&lf[296],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_15359,a[2]=((C_word)li215),tmp=(C_word)a,a+=3,tmp));
t17=C_mutate(&lf[298],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_15371,a[2]=((C_word)li216),tmp=(C_word)a,a+=3,tmp));
t18=C_mutate(&lf[299],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_15380,a[2]=((C_word)li217),tmp=(C_word)a,a+=3,tmp));
t19=C_mutate(&lf[300],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_15398,a[2]=((C_word)li218),tmp=(C_word)a,a+=3,tmp));
t20=C_mutate(&lf[301],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_15416,a[2]=((C_word)li219),tmp=(C_word)a,a+=3,tmp));
t21=C_mutate(&lf[302],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_15443,a[2]=((C_word)li220),tmp=(C_word)a,a+=3,tmp));
t22=C_mutate(&lf[303],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_15452,a[2]=((C_word)li221),tmp=(C_word)a,a+=3,tmp));
t23=C_mutate(&lf[304],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_15470,a[2]=((C_word)li222),tmp=(C_word)a,a+=3,tmp));
t24=C_mutate(&lf[305],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_15515,a[2]=((C_word)li223),tmp=(C_word)a,a+=3,tmp));
t25=C_mutate(&lf[307],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_15530,a[2]=((C_word)li224),tmp=(C_word)a,a+=3,tmp));
t26=C_mutate(&lf[308],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_15539,a[2]=((C_word)li225),tmp=(C_word)a,a+=3,tmp));
t27=C_mutate(&lf[309],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_15548,a[2]=((C_word)li226),tmp=(C_word)a,a+=3,tmp));
t28=C_mutate(&lf[310],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_15566,a[2]=((C_word)li227),tmp=(C_word)a,a+=3,tmp));
t29=C_mutate(&lf[311],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_15575,a[2]=((C_word)li228),tmp=(C_word)a,a+=3,tmp));
t30=C_mutate(&lf[312],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_15584,a[2]=((C_word)li229),tmp=(C_word)a,a+=3,tmp));
t31=C_mutate(&lf[313],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_15602,a[2]=((C_word)li230),tmp=(C_word)a,a+=3,tmp));
t32=C_mutate(&lf[314],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_15611,a[2]=((C_word)li231),tmp=(C_word)a,a+=3,tmp));
t33=C_mutate(&lf[315],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_15620,a[2]=((C_word)li232),tmp=(C_word)a,a+=3,tmp));
t34=C_mutate(&lf[316],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_15629,a[2]=((C_word)li233),tmp=(C_word)a,a+=3,tmp));
t35=C_mutate(&lf[317],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_15638,a[2]=((C_word)li234),tmp=(C_word)a,a+=3,tmp));
t36=C_mutate(&lf[318],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_15755,a[2]=((C_word)li235),tmp=(C_word)a,a+=3,tmp));
t37=C_mutate(&lf[319],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_15764,a[2]=((C_word)li236),tmp=(C_word)a,a+=3,tmp));
t38=C_mutate(&lf[320],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_15819,a[2]=((C_word)li237),tmp=(C_word)a,a+=3,tmp));
t39=C_mutate(&lf[324],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_15829,a[2]=((C_word)li239),tmp=(C_word)a,a+=3,tmp));
t40=C_mutate((C_word*)lf[332]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_16009,a[2]=((C_word)li240),tmp=(C_word)a,a+=3,tmp));
t41=C_mutate((C_word*)lf[334]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_16028,a[2]=((C_word)li241),tmp=(C_word)a,a+=3,tmp));
t42=C_mutate((C_word*)lf[336]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_16047,a[2]=((C_word)li244),tmp=(C_word)a,a+=3,tmp));
t43=C_mutate(&lf[337],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_16170,a[2]=((C_word)li247),tmp=(C_word)a,a+=3,tmp));
t44=C_mutate(&lf[338],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_16471,a[2]=((C_word)li248),tmp=(C_word)a,a+=3,tmp));
t45=C_mutate(&lf[331],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_16480,a[2]=((C_word)li249),tmp=(C_word)a,a+=3,tmp));
t46=C_mutate(&lf[339],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_16526,a[2]=((C_word)li251),tmp=(C_word)a,a+=3,tmp));
t47=C_mutate((C_word*)lf[342]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_16641,a[2]=((C_word)li253),tmp=(C_word)a,a+=3,tmp));
t48=C_mutate(&lf[343],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_16896,a[2]=((C_word)li254),tmp=(C_word)a,a+=3,tmp));
t49=C_mutate(&lf[346],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_16968,a[2]=((C_word)li255),tmp=(C_word)a,a+=3,tmp));
t50=C_mutate(&lf[348],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_16977,a[2]=((C_word)li256),tmp=(C_word)a,a+=3,tmp));
t51=C_mutate((C_word*)lf[349]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_17057,a[2]=((C_word)li258),tmp=(C_word)a,a+=3,tmp));
t52=C_mutate(&lf[350],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_17527,a[2]=((C_word)li259),tmp=(C_word)a,a+=3,tmp));
t53=C_mutate((C_word*)lf[354]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_17742,a[2]=((C_word)li261),tmp=(C_word)a,a+=3,tmp));
t54=C_mutate(&lf[355],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_17989,a[2]=((C_word)li262),tmp=(C_word)a,a+=3,tmp));
t55=C_mutate((C_word*)lf[356]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_18025,a[2]=((C_word)li264),tmp=(C_word)a,a+=3,tmp));
t56=C_mutate(&lf[357],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_18288,a[2]=((C_word)li266),tmp=(C_word)a,a+=3,tmp));
t57=C_mutate((C_word*)lf[358]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_18364,a[2]=((C_word)li268),tmp=(C_word)a,a+=3,tmp));
t58=C_mutate(&lf[359],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_18838,a[2]=((C_word)li271),tmp=(C_word)a,a+=3,tmp));
t59=C_mutate(&lf[361],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_19060,a[2]=((C_word)li272),tmp=(C_word)a,a+=3,tmp));
t60=C_mutate(&lf[363],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_19069,a[2]=((C_word)li273),tmp=(C_word)a,a+=3,tmp));
t61=C_mutate(&lf[364],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_19078,a[2]=((C_word)li274),tmp=(C_word)a,a+=3,tmp));
t62=C_mutate(&lf[365],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_19096,a[2]=((C_word)li275),tmp=(C_word)a,a+=3,tmp));
t63=C_mutate(&lf[366],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_19114,a[2]=((C_word)li276),tmp=(C_word)a,a+=3,tmp));
t64=C_mutate(&lf[367],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_19132,a[2]=((C_word)li277),tmp=(C_word)a,a+=3,tmp));
t65=C_mutate(&lf[368],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_19141,a[2]=((C_word)li278),tmp=(C_word)a,a+=3,tmp));
t66=C_mutate(&lf[369],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_19150,a[2]=((C_word)li279),tmp=(C_word)a,a+=3,tmp));
t67=C_mutate((C_word*)lf[370]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_19233,a[2]=((C_word)li284),tmp=(C_word)a,a+=3,tmp));
t68=C_mutate(&lf[371],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_20000,a[2]=((C_word)li287),tmp=(C_word)a,a+=3,tmp));
t69=C_mutate(&lf[372],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_20112,a[2]=((C_word)li292),tmp=(C_word)a,a+=3,tmp));
t70=C_mutate((C_word*)lf[375]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_20545,a[2]=((C_word)li297),tmp=(C_word)a,a+=3,tmp));
t71=C_mutate(&lf[376],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_21032,a[2]=((C_word)li304),tmp=(C_word)a,a+=3,tmp));
t72=C_mutate(&lf[385],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_21372,a[2]=((C_word)li305),tmp=(C_word)a,a+=3,tmp));
t73=C_mutate((C_word*)lf[387]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_21435,a[2]=((C_word)li310),tmp=(C_word)a,a+=3,tmp));
t74=C_mutate(&lf[388],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_21953,a[2]=((C_word)li312),tmp=(C_word)a,a+=3,tmp));
t75=C_mutate((C_word*)lf[394]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_22047,a[2]=((C_word)li335),tmp=(C_word)a,a+=3,tmp));
t76=C_mutate(&lf[415],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_23069,a[2]=((C_word)li336),tmp=(C_word)a,a+=3,tmp));
t77=C_mutate(&lf[417],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_23090,a[2]=((C_word)li337),tmp=(C_word)a,a+=3,tmp));
t78=C_mutate(&lf[418],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_23108,a[2]=((C_word)li338),tmp=(C_word)a,a+=3,tmp));
t79=C_mutate(&lf[419],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_23126,a[2]=((C_word)li339),tmp=(C_word)a,a+=3,tmp));
t80=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_23136,a[2]=((C_word*)t0)[2],tmp=(C_word)a,a+=3,tmp);
t81=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_42121,a[2]=((C_word)li692),tmp=(C_word)a,a+=3,tmp);
C_trace("ChickenBridge.scm: 380  ##sys#register-record-printer");
t82=C_retrieve(lf[1002]);
((C_proc4)C_retrieve_proc(t82))(4,t82,t80,lf[416],t81);}

/* a42120 in k11783 in k10718 in k10715 in k7274 in k7271 in k6978 in k6975 in k6971 in k6680 in k6677 in k6674 in k6671 */
static void C_ccall f_42121(C_word c,C_word t0,C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word ab[5],*a=ab;
if(c!=4) C_bad_argc_2(c,4,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr4,(void*)f_42121,4,t0,t1,t2,t3);}
t4=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_42129,a[2]=t2,a[3]=t3,a[4]=t1,tmp=(C_word)a,a+=5,tmp);
C_trace("ChickenBridge.scm: 380  token-type");
f_23090(t4,t2);}

/* k42127 in a42120 in k11783 in k10718 in k10715 in k7274 in k7271 in k6978 in k6975 in k6971 in k6680 in k6677 in k6674 in k6671 */
static void C_ccall f_42129(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[5],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_42129,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_42133,a[2]=t1,a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],tmp=(C_word)a,a+=5,tmp);
C_trace("ChickenBridge.scm: 380  token-string");
f_23108(t2,((C_word*)t0)[2]);}

/* k42131 in k42127 in a42120 in k11783 in k10718 in k10715 in k7274 in k7271 in k6978 in k6975 in k6971 in k6680 in k6677 in k6674 in k6671 */
static void C_ccall f_42133(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 380  fprintf");
t2=C_retrieve(lf[999]);
((C_proc6)C_retrieve_proc(t2))(6,t2,((C_word*)t0)[4],((C_word*)t0)[3],lf[1013],((C_word*)t0)[2],t1);}

/* k23134 in k11783 in k10718 in k10715 in k7274 in k7271 in k6978 in k6975 in k6971 in k6680 in k6677 in k6674 in k6671 */
static void C_ccall f_23136(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[12],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_23136,2,t0,t1);}
t2=C_mutate(&lf[420],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_23138,a[2]=((C_word)li340),tmp=(C_word)a,a+=3,tmp));
t3=C_mutate(&lf[422],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_23167,a[2]=((C_word)li341),tmp=(C_word)a,a+=3,tmp));
t4=C_mutate(&lf[423],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_23179,a[2]=((C_word)li342),tmp=(C_word)a,a+=3,tmp));
t5=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_23187,a[2]=((C_word*)t0)[2],tmp=(C_word)a,a+=3,tmp);
C_trace("ChickenBridge.scm: 380  make-hash-table");
t6=C_retrieve(lf[1011]);
((C_proc3)C_retrieve_proc(t6))(3,t6,t5,*((C_word*)lf[1012]+1));}

/* k23185 in k23134 in k11783 in k10718 in k10715 in k7274 in k7271 in k6978 in k6975 in k6971 in k6680 in k6677 in k6674 in k6671 */
static void C_ccall f_23187(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word ab[12],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_23187,2,t0,t1);}
t2=C_mutate(&lf[424],t1);
t3=C_mutate(&lf[425],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_23189,a[2]=((C_word)li343),tmp=(C_word)a,a+=3,tmp));
t4=C_mutate(&lf[427],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_23210,a[2]=((C_word)li344),tmp=(C_word)a,a+=3,tmp));
t5=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_23292,a[2]=((C_word*)t0)[2],tmp=(C_word)a,a+=3,tmp);
t6=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_42111,a[2]=((C_word)li691),tmp=(C_word)a,a+=3,tmp);
C_trace("ChickenBridge.scm: 380  ##sys#register-record-printer");
t7=C_retrieve(lf[1002]);
((C_proc4)C_retrieve_proc(t7))(4,t7,t5,lf[426],t6);}

/* a42110 in k23185 in k23134 in k11783 in k10718 in k10715 in k7274 in k7271 in k6978 in k6975 in k6971 in k6680 in k6677 in k6674 in k6671 */
static void C_ccall f_42111(C_word c,C_word t0,C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word ab[4],*a=ab;
if(c!=4) C_bad_argc_2(c,4,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr4,(void*)f_42111,4,t0,t1,t2,t3);}
t4=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_42119,a[2]=t3,a[3]=t1,tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 380  rule-name");
f_23210(t4,t2);}

/* k42117 in a42110 in k23185 in k23134 in k11783 in k10718 in k10715 in k7274 in k7271 in k6978 in k6975 in k6971 in k6680 in k6677 in k6674 in k6671 */
static void C_ccall f_42119(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 380  fprintf");
t2=C_retrieve(lf[999]);
((C_proc5)C_retrieve_proc(t2))(5,t2,((C_word*)t0)[3],((C_word*)t0)[2],lf[1010],t1);}

/* k23290 in k23185 in k23134 in k11783 in k10718 in k10715 in k7274 in k7271 in k6978 in k6975 in k6971 in k6680 in k6677 in k6674 in k6671 */
static void C_ccall f_23292(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[6],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_23292,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_23295,a[2]=((C_word*)t0)[2],tmp=(C_word)a,a+=3,tmp);
t3=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_42008,a[2]=((C_word)li690),tmp=(C_word)a,a+=3,tmp);
C_trace("ChickenBridge.scm: 380  ##sys#register-macro");
t4=C_retrieve(lf[837]);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[1009],t3);}

/* a42007 in k23290 in k23185 in k23134 in k11783 in k10718 in k10715 in k7274 in k7271 in k6978 in k6975 in k6971 in k6680 in k6677 in k6674 in k6671 */
static void C_ccall f_42008(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,...){
C_word tmp;
C_word t4;
va_list v;
C_word *a,c2=c;
C_save_rest(t3,c2,4);
if(c<4) C_bad_min_argc_2(c,4,t0);
C_check_for_interrupt;
if(!C_demand(c*C_SIZEOF_PAIR+22)){
C_save_and_reclaim((void*)tr4r,(void*)f_42008r,4,t0,t1,t2,t3);}
else{
a=C_alloc((c-4)*3);
t4=C_restore_rest(a,C_rest_count(0));
f_42008r(t0,t1,t2,t3,t4);}}

static void C_ccall f_42008r(C_word t0,C_word t1,C_word t2,C_word t3,C_word t4){
C_word tmp;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word *a=C_alloc(22);
t5=C_SCHEME_UNDEFINED;
t6=(*a=C_VECTOR_TYPE|1,a[1]=t5,tmp=(C_word)a,a+=2,tmp);
t7=C_set_block_item(t6,0,(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_42011,a[2]=t6,a[3]=((C_word)li689),tmp=(C_word)a,a+=4,tmp));
t8=(C_word)C_a_i_list(&a,2,lf[1006],t2);
t9=(C_word)C_a_i_list(&a,1,t8);
t10=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_42071,a[2]=t3,a[3]=t6,a[4]=t9,a[5]=t1,a[6]=t4,tmp=(C_word)a,a+=7,tmp);
C_trace("ChickenBridge.scm: 380  symbol->string");
t11=*((C_word*)lf[25]+1);
((C_proc3)C_retrieve_proc(t11))(3,t11,t10,t2);}

/* k42069 in a42007 in k23290 in k23185 in k23134 in k11783 in k10718 in k10715 in k7274 in k7271 in k6978 in k6975 in k6971 in k6680 in k6677 in k6674 in k6671 */
static void C_ccall f_42071(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[6],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_42071,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_42075,a[2]=((C_word*)t0)[4],a[3]=((C_word*)t0)[5],a[4]=t1,a[5]=((C_word*)t0)[6],tmp=(C_word)a,a+=6,tmp);
C_trace("ChickenBridge.scm: 380  ppat");
t3=((C_word*)((C_word*)t0)[3])[1];
f_42011(t3,t2,((C_word*)t0)[2]);}

/* k42073 in k42069 in a42007 in k23290 in k23185 in k23134 in k11783 in k10718 in k10715 in k7274 in k7271 in k6978 in k6975 in k6971 in k6680 in k6677 in k6674 in k6671 */
static void C_ccall f_42075(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word ab[8],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_42075,2,t0,t1);}
t2=(C_word)C_i_nullp(((C_word*)t0)[5]);
t3=(C_truep(t2)?C_SCHEME_FALSE:(C_word)C_i_car(((C_word*)t0)[5]));
t4=(C_word)C_i_nullp(((C_word*)t0)[5]);
t5=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_42089,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=t3,a[5]=t1,a[6]=((C_word*)t0)[4],a[7]=((C_word*)t0)[5],tmp=(C_word)a,a+=8,tmp);
if(C_truep(t4)){
t6=t5;
f_42089(t6,t4);}
else{
t6=(C_word)C_i_cdr(((C_word*)t0)[5]);
t7=t5;
f_42089(t7,(C_word)C_i_nullp(t6));}}

/* k42087 in k42073 in k42069 in a42007 in k23290 in k23185 in k23134 in k11783 in k10718 in k10715 in k7274 in k7271 in k6978 in k6975 in k6971 in k6680 in k6677 in k6674 in k6671 */
static void C_fcall f_42089(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[39],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_42089,NULL,2,t0,t1);}
t2=(C_truep(t1)?C_SCHEME_FALSE:(C_word)C_i_cadr(((C_word*)t0)[7]));
t3=(C_word)C_a_i_list(&a,6,lf[1007],((C_word*)t0)[6],lf[1006],((C_word*)t0)[5],((C_word*)t0)[4],t2);
t4=(C_word)C_a_i_list(&a,4,lf[852],lf[1008],lf[1006],t3);
t5=((C_word*)t0)[3];
((C_proc2)(void*)(*((C_word*)t5+1)))(2,t5,(C_word)C_a_i_list(&a,3,lf[1],((C_word*)t0)[2],t4));}

/* ppat in a42007 in k23290 in k23185 in k23134 in k11783 in k10718 in k10715 in k7274 in k7271 in k6978 in k6975 in k6971 in k6680 in k6677 in k6674 in k6671 */
static void C_fcall f_42011(C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word *a;
loop:
a=C_alloc(11);
C_check_for_interrupt;
if(!C_stack_probe(a)){
C_save_and_reclaim((void*)trf_42011,NULL,3,t0,t1,t2);}
if(C_truep((C_word)C_i_nullp(t2))){
t3=t1;
((C_proc2)(void*)(*((C_word*)t3+1)))(2,t3,lf[1004]);}
else{
if(C_truep((C_word)C_i_pairp(t2))){
t3=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_42031,a[2]=((C_word*)t0)[2],a[3]=t2,a[4]=t1,tmp=(C_word)a,a+=5,tmp);
t4=(C_word)C_i_car(t2);
C_trace("ChickenBridge.scm: 380  ppat");
t7=t3;
t8=t4;
t1=t7;
t2=t8;
goto loop;}
else{
t3=(C_word)C_i_member(t2,lf[1005]);
t4=t1;
((C_proc2)(void*)(*((C_word*)t4+1)))(2,t4,(C_truep(t3)?(C_word)C_a_i_list(&a,2,lf[612],t2):t2));}}}

/* k42029 in ppat in a42007 in k23290 in k23185 in k23134 in k11783 in k10718 in k10715 in k7274 in k7271 in k6978 in k6975 in k6971 in k6680 in k6677 in k6674 in k6671 */
static void C_ccall f_42031(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[4],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_42031,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_42035,a[2]=t1,a[3]=((C_word*)t0)[4],tmp=(C_word)a,a+=4,tmp);
t3=(C_word)C_i_cdr(((C_word*)t0)[3]);
C_trace("ChickenBridge.scm: 380  ppat");
t4=((C_word*)((C_word*)t0)[2])[1];
f_42011(t4,t2,t3);}

/* k42033 in k42029 in ppat in a42007 in k23290 in k23185 in k23134 in k11783 in k10718 in k10715 in k7274 in k7271 in k6978 in k6975 in k6971 in k6680 in k6677 in k6674 in k6671 */
static void C_ccall f_42035(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_42035,2,t0,t1);}
t2=((C_word*)t0)[3];
((C_proc2)(void*)(*((C_word*)t2+1)))(2,t2,(C_word)C_a_i_list(&a,3,lf[917],((C_word*)t0)[2],t1));}

/* k23293 in k23290 in k23185 in k23134 in k11783 in k10718 in k10715 in k7274 in k7271 in k6978 in k6975 in k6971 in k6680 in k6677 in k6674 in k6671 */
static void C_ccall f_23295(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word t14;
C_word ab[36],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_23295,2,t0,t1);}
t2=C_mutate(&lf[428],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_23297,a[2]=((C_word)li345),tmp=(C_word)a,a+=3,tmp));
t3=C_mutate(&lf[315],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_23318,a[2]=((C_word)li346),tmp=(C_word)a,a+=3,tmp));
t4=C_mutate(&lf[430],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_23321,a[2]=((C_word)li347),tmp=(C_word)a,a+=3,tmp));
t5=C_mutate(&lf[431],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_23333,a[2]=((C_word)li348),tmp=(C_word)a,a+=3,tmp));
t6=C_mutate(&lf[432],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_23339,a[2]=((C_word)li349),tmp=(C_word)a,a+=3,tmp));
t7=C_mutate(&lf[433],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_23349,a[2]=((C_word)li350),tmp=(C_word)a,a+=3,tmp));
t8=C_mutate(&lf[434],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_23407,a[2]=((C_word)li351),tmp=(C_word)a,a+=3,tmp));
t9=C_mutate(&lf[435],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_23439,a[2]=((C_word)li352),tmp=(C_word)a,a+=3,tmp));
t10=C_mutate(&lf[437],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_23460,a[2]=((C_word)li353),tmp=(C_word)a,a+=3,tmp));
t11=C_mutate(&lf[438],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_23478,a[2]=((C_word)li354),tmp=(C_word)a,a+=3,tmp));
t12=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_23488,a[2]=((C_word*)t0)[2],tmp=(C_word)a,a+=3,tmp);
t13=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_41994,a[2]=((C_word)li688),tmp=(C_word)a,a+=3,tmp);
C_trace("ChickenBridge.scm: 380  ##sys#register-record-printer");
t14=C_retrieve(lf[1002]);
((C_proc4)C_retrieve_proc(t14))(4,t14,t12,lf[436],t13);}

/* a41993 in k23293 in k23290 in k23185 in k23134 in k11783 in k10718 in k10715 in k7274 in k7271 in k6978 in k6975 in k6971 in k6680 in k6677 in k6674 in k6671 */
static void C_ccall f_41994(C_word c,C_word t0,C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word ab[5],*a=ab;
if(c!=4) C_bad_argc_2(c,4,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr4,(void*)f_41994,4,t0,t1,t2,t3);}
t4=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_42002,a[2]=t2,a[3]=t3,a[4]=t1,tmp=(C_word)a,a+=5,tmp);
C_trace("ChickenBridge.scm: 380  parse-error-string");
f_23460(t4,t2);}

/* k42000 in a41993 in k23293 in k23290 in k23185 in k23134 in k11783 in k10718 in k10715 in k7274 in k7271 in k6978 in k6975 in k6971 in k6680 in k6677 in k6674 in k6671 */
static void C_ccall f_42002(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[5],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_42002,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_42006,a[2]=t1,a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],tmp=(C_word)a,a+=5,tmp);
C_trace("ChickenBridge.scm: 380  parse-error-position");
f_23478(t2,((C_word*)t0)[2]);}

/* k42004 in k42000 in a41993 in k23293 in k23290 in k23185 in k23134 in k11783 in k10718 in k10715 in k7274 in k7271 in k6978 in k6975 in k6971 in k6680 in k6677 in k6674 in k6671 */
static void C_ccall f_42006(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 380  fprintf");
t2=C_retrieve(lf[999]);
((C_proc6)C_retrieve_proc(t2))(6,t2,((C_word*)t0)[4],((C_word*)t0)[3],lf[1003],((C_word*)t0)[2],t1);}

/* k23486 in k23293 in k23290 in k23185 in k23134 in k11783 in k10718 in k10715 in k7274 in k7271 in k6978 in k6975 in k6971 in k6680 in k6677 in k6674 in k6671 */
static void C_ccall f_23488(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word ab[21],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_23488,2,t0,t1);}
t2=C_mutate(&lf[439],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_23490,a[2]=((C_word)li355),tmp=(C_word)a,a+=3,tmp));
t3=C_mutate(&lf[441],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_23496,a[2]=((C_word)li356),tmp=(C_word)a,a+=3,tmp));
t4=C_mutate(&lf[442],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_23511,a[2]=((C_word)li357),tmp=(C_word)a,a+=3,tmp));
t5=C_mutate(&lf[443],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_23529,a[2]=((C_word)li358),tmp=(C_word)a,a+=3,tmp));
t6=C_mutate(&lf[444],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_23547,a[2]=((C_word)li359),tmp=(C_word)a,a+=3,tmp));
t7=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_23557,a[2]=((C_word*)t0)[2],tmp=(C_word)a,a+=3,tmp);
t8=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_41968,a[2]=((C_word)li687),tmp=(C_word)a,a+=3,tmp);
C_trace("ChickenBridge.scm: 380  ##sys#register-record-printer");
t9=C_retrieve(lf[1002]);
((C_proc4)C_retrieve_proc(t9))(4,t9,t7,lf[440],t8);}

/* a41967 in k23486 in k23293 in k23290 in k23185 in k23134 in k11783 in k10718 in k10715 in k7274 in k7271 in k6978 in k6975 in k6971 in k6680 in k6677 in k6674 in k6671 */
static void C_ccall f_41968(C_word c,C_word t0,C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word ab[4],*a=ab;
if(c!=4) C_bad_argc_2(c,4,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr4,(void*)f_41968,4,t0,t1,t2,t3);}
t4=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_41972,a[2]=t3,a[3]=t1,tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 380  parse-unit-type");
f_23511(t4,t2);}

/* k41970 in a41967 in k23486 in k23293 in k23290 in k23185 in k23134 in k11783 in k10718 in k10715 in k7274 in k7271 in k6978 in k6975 in k6971 in k6680 in k6677 in k6674 in k6671 */
static void C_ccall f_41972(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[5],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_41972,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_41978,a[2]=t1,a[3]=((C_word*)t0)[2],a[4]=((C_word*)t0)[3],tmp=(C_word)a,a+=5,tmp);
C_trace("ChickenBridge.scm: 380  SalRuleType?");
f_24826(t2,t1);}

/* k41976 in k41970 in a41967 in k23486 in k23293 in k23290 in k23185 in k23134 in k11783 in k10718 in k10715 in k7274 in k7271 in k6978 in k6975 in k6971 in k6680 in k6677 in k6674 in k6671 */
static void C_ccall f_41978(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_41978,2,t0,t1);}
if(C_truep(t1)){
t2=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_41985,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],tmp=(C_word)a,a+=4,tmp);
t3=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_41989,a[2]=t2,tmp=(C_word)a,a+=3,tmp);
C_trace("ChickenBridge.scm: 380  get-rule");
f_23297(t3,((C_word*)t0)[2],C_SCHEME_END_OF_LIST);}
else{
C_trace("ChickenBridge.scm: 380  fprintf");
t2=C_retrieve(lf[999]);
((C_proc5)C_retrieve_proc(t2))(5,t2,((C_word*)t0)[4],((C_word*)t0)[3],lf[1001],((C_word*)t0)[2]);}}

/* k41987 in k41976 in k41970 in a41967 in k23486 in k23293 in k23290 in k23185 in k23134 in k11783 in k10718 in k10715 in k7274 in k7271 in k6978 in k6975 in k6971 in k6680 in k6677 in k6674 in k6671 */
static void C_ccall f_41989(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 380  rule-name");
f_23210(((C_word*)t0)[2],t1);}

/* k41983 in k41976 in k41970 in a41967 in k23486 in k23293 in k23290 in k23185 in k23134 in k11783 in k10718 in k10715 in k7274 in k7271 in k6978 in k6975 in k6971 in k6680 in k6677 in k6674 in k6671 */
static void C_ccall f_41985(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 380  fprintf");
t2=C_retrieve(lf[999]);
((C_proc5)C_retrieve_proc(t2))(5,t2,((C_word*)t0)[3],((C_word*)t0)[2],lf[1000],t1);}

/* k23555 in k23486 in k23293 in k23290 in k23185 in k23134 in k11783 in k10718 in k10715 in k7274 in k7271 in k6978 in k6975 in k6971 in k6680 in k6677 in k6674 in k6671 */
static void C_ccall f_23557(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word t14;
C_word t15;
C_word t16;
C_word t17;
C_word t18;
C_word t19;
C_word t20;
C_word t21;
C_word t22;
C_word t23;
C_word t24;
C_word ab[63],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_23557,2,t0,t1);}
t2=C_mutate(&lf[445],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_23559,a[2]=((C_word)li360),tmp=(C_word)a,a+=3,tmp));
t3=C_mutate(&lf[447],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_23575,a[2]=((C_word)li361),tmp=(C_word)a,a+=3,tmp));
t4=C_mutate(&lf[449],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_23607,a[2]=((C_word)li362),tmp=(C_word)a,a+=3,tmp));
t5=C_mutate(&lf[450],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_23619,a[2]=((C_word)li363),tmp=(C_word)a,a+=3,tmp));
t6=C_mutate(&lf[451],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_23686,a[2]=((C_word)li364),tmp=(C_word)a,a+=3,tmp));
t7=C_mutate(&lf[453],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_23704,a[2]=((C_word)li365),tmp=(C_word)a,a+=3,tmp));
t8=C_mutate(&lf[462],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_23737,a[2]=((C_word)li366),tmp=(C_word)a,a+=3,tmp));
t9=C_mutate((C_word*)lf[465]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_23768,a[2]=((C_word)li367),tmp=(C_word)a,a+=3,tmp));
t10=C_mutate(&lf[467],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_23945,a[2]=((C_word)li369),tmp=(C_word)a,a+=3,tmp));
t11=C_mutate(&lf[468],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_23953,a[2]=((C_word)li372),tmp=(C_word)a,a+=3,tmp));
t12=lf[469]=C_SCHEME_FALSE;;
t13=C_mutate(&lf[470],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_24057,a[2]=((C_word)li386),tmp=(C_word)a,a+=3,tmp));
t14=C_mutate(&lf[446],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_24676,a[2]=((C_word)li387),tmp=(C_word)a,a+=3,tmp));
t15=C_mutate(&lf[461],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_24724,a[2]=((C_word)li388),tmp=(C_word)a,a+=3,tmp));
t16=C_mutate(&lf[464],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_24826,a[2]=((C_word)li389),tmp=(C_word)a,a+=3,tmp));
t17=C_mutate(&lf[448],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_24838,a[2]=((C_word)li390),tmp=(C_word)a,a+=3,tmp));
t18=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_24859,a[2]=((C_word*)t0)[2],tmp=(C_word)a,a+=3,tmp);
t19=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_41946,a[2]=t18,tmp=(C_word)a,a+=3,tmp);
t20=(C_word)C_a_i_cons(&a,2,C_fix(3072),C_SCHEME_END_OF_LIST);
t21=(C_word)C_a_i_cons(&a,2,C_fix(3328),t20);
t22=(C_word)C_a_i_cons(&a,2,C_fix(2816),t21);
t23=(C_word)C_a_i_cons(&a,2,lf[457],t22);
C_trace("ChickenBridge.scm: 380  make-rule");
f_23189(t19,lf[998],C_fix(25856),t23,C_SCHEME_FALSE,C_SCHEME_FALSE);}

/* k41944 in k23555 in k23486 in k23293 in k23290 in k23185 in k23134 in k11783 in k10718 in k10715 in k7274 in k7271 in k6978 in k6975 in k6971 in k6680 in k6677 in k6674 in k6671 */
static void C_ccall f_41946(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 380  hash-table-set!");
t2=C_retrieve(lf[852]);
((C_proc5)C_retrieve_proc(t2))(5,t2,((C_word*)t0)[2],C_retrieve2(lf[424],"*rules*"),C_fix(25856),t1);}

/* k24857 in k23555 in k23486 in k23293 in k23290 in k23185 in k23134 in k11783 in k10718 in k10715 in k7274 in k7271 in k6978 in k6975 in k6971 in k6680 in k6677 in k6674 in k6671 */
static void C_ccall f_24859(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word ab[15],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_24859,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_24862,a[2]=((C_word*)t0)[2],tmp=(C_word)a,a+=3,tmp);
t3=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_41926,a[2]=t2,tmp=(C_word)a,a+=3,tmp);
t4=(C_word)C_a_i_cons(&a,2,C_fix(4608),C_SCHEME_END_OF_LIST);
t5=(C_word)C_a_i_cons(&a,2,C_fix(4352),t4);
t6=(C_word)C_a_i_cons(&a,2,lf[457],t5);
C_trace("ChickenBridge.scm: 380  make-rule");
f_23189(t3,lf[997],C_fix(26112),t6,C_SCHEME_FALSE,C_SCHEME_FALSE);}

/* k41924 in k24857 in k23555 in k23486 in k23293 in k23290 in k23185 in k23134 in k11783 in k10718 in k10715 in k7274 in k7271 in k6978 in k6975 in k6971 in k6680 in k6677 in k6674 in k6671 */
static void C_ccall f_41926(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 380  hash-table-set!");
t2=C_retrieve(lf[852]);
((C_proc5)C_retrieve_proc(t2))(5,t2,((C_word*)t0)[2],C_retrieve2(lf[424],"*rules*"),C_fix(26112),t1);}

/* k24860 in k24857 in k23555 in k23486 in k23293 in k23290 in k23185 in k23134 in k11783 in k10718 in k10715 in k7274 in k7271 in k6978 in k6975 in k6971 in k6680 in k6677 in k6674 in k6671 */
static void C_ccall f_24862(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word ab[30],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_24862,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_24865,a[2]=((C_word*)t0)[2],tmp=(C_word)a,a+=3,tmp);
t3=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_41886,a[2]=t2,tmp=(C_word)a,a+=3,tmp);
t4=(C_word)C_a_i_cons(&a,2,C_fix(4608),C_SCHEME_END_OF_LIST);
t5=(C_word)C_a_i_cons(&a,2,C_fix(4352),t4);
t6=(C_word)C_a_i_cons(&a,2,C_fix(25088),t5);
t7=(C_word)C_a_i_cons(&a,2,C_fix(3840),t6);
t8=(C_word)C_a_i_cons(&a,2,C_fix(3072),t7);
t9=(C_word)C_a_i_cons(&a,2,C_fix(3328),t8);
t10=(C_word)C_a_i_cons(&a,2,C_fix(2816),t9);
t11=(C_word)C_a_i_cons(&a,2,lf[457],t10);
C_trace("ChickenBridge.scm: 380  make-rule");
f_23189(t3,lf[996],C_fix(26368),t11,C_SCHEME_FALSE,C_SCHEME_FALSE);}

/* k41884 in k24860 in k24857 in k23555 in k23486 in k23293 in k23290 in k23185 in k23134 in k11783 in k10718 in k10715 in k7274 in k7271 in k6978 in k6975 in k6971 in k6680 in k6677 in k6674 in k6671 */
static void C_ccall f_41886(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 380  hash-table-set!");
t2=C_retrieve(lf[852]);
((C_proc5)C_retrieve_proc(t2))(5,t2,((C_word*)t0)[2],C_retrieve2(lf[424],"*rules*"),C_fix(26368),t1);}

/* k24863 in k24860 in k24857 in k23555 in k23486 in k23293 in k23290 in k23185 in k23134 in k11783 in k10718 in k10715 in k7274 in k7271 in k6978 in k6975 in k6971 in k6680 in k6677 in k6674 in k6671 */
static void C_ccall f_24865(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word ab[30],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_24865,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_24868,a[2]=((C_word*)t0)[2],tmp=(C_word)a,a+=3,tmp);
t3=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_41776,a[2]=t2,tmp=(C_word)a,a+=3,tmp);
t4=(C_word)C_a_i_cons(&a,2,C_fix(26880),C_SCHEME_END_OF_LIST);
t5=(C_word)C_a_i_cons(&a,2,lf[129],t4);
t6=(C_word)C_a_i_cons(&a,2,C_fix(1280),C_SCHEME_END_OF_LIST);
t7=(C_word)C_a_i_cons(&a,2,t5,t6);
t8=(C_word)C_a_i_cons(&a,2,C_fix(1024),t7);
t9=(C_word)C_a_i_cons(&a,2,lf[456],t8);
t10=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_41782,a[2]=((C_word)li685),tmp=(C_word)a,a+=3,tmp);
t11=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_41792,a[2]=((C_word)li686),tmp=(C_word)a,a+=3,tmp);
C_trace("ChickenBridge.scm: 380  make-rule");
f_23189(t3,lf[995],C_fix(26624),t9,t10,t11);}

/* a41791 in k24863 in k24860 in k24857 in k23555 in k23486 in k23293 in k23290 in k23185 in k23134 in k11783 in k10718 in k10715 in k7274 in k7271 in k6978 in k6975 in k6971 in k6680 in k6677 in k6674 in k6671 */
static void C_ccall f_41792(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4){
C_word tmp;
C_word t5;
C_word t6;
C_word ab[6],*a=ab;
if(c!=5) C_bad_argc_2(c,5,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr5,(void*)f_41792,5,t0,t1,t2,t3,t4);}
t5=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_41796,a[2]=t2,a[3]=t4,a[4]=t3,a[5]=t1,tmp=(C_word)a,a+=6,tmp);
C_trace("ChickenBridge.scm: 380  get-emit-info");
f_23607(t5,lf[989],t3);}

/* k41794 in a41791 in k24863 in k24860 in k24857 in k23555 in k23486 in k23293 in k23290 in k23185 in k23134 in k11783 in k10718 in k10715 in k7274 in k7271 in k6978 in k6975 in k6971 in k6680 in k6677 in k6674 in k6671 */
static void C_ccall f_41796(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[6],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_41796,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_41799,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=t1,tmp=(C_word)a,a+=6,tmp);
C_trace("ChickenBridge.scm: 380  parse-unit-parsed");
f_23529(t2,((C_word*)t0)[2]);}

/* k41797 in k41794 in a41791 in k24863 in k24860 in k24857 in k23555 in k23486 in k23293 in k23290 in k23185 in k23134 in k11783 in k10718 in k10715 in k7274 in k7271 in k6978 in k6975 in k6971 in k6680 in k6677 in k6674 in k6671 */
static void C_ccall f_41799(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_41799,2,t0,t1);}
t2=((C_word*)t0)[5];
if(C_truep(t2)){
C_trace("ChickenBridge.scm: 380  emit");
f_23704(((C_word*)t0)[4],t1,((C_word*)t0)[3],((C_word*)t0)[2]);}
else{
if(C_truep((C_word)C_i_nullp(t1))){
t3=((C_word*)t0)[4];
((C_proc2)(void*)(*((C_word*)t3+1)))(2,t3,(C_word)C_a_i_list(&a,1,lf[661]));}
else{
t3=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_41817,a[2]=((C_word*)t0)[2],a[3]=t1,a[4]=((C_word*)t0)[3],a[5]=((C_word*)t0)[4],tmp=(C_word)a,a+=6,tmp);
C_trace("ChickenBridge.scm: 380  add-emit-info");
f_23619(t3,lf[989],C_SCHEME_TRUE,((C_word*)t0)[3]);}}}

/* k41815 in k41797 in k41794 in a41791 in k24863 in k24860 in k24857 in k23555 in k23486 in k23293 in k23290 in k23185 in k23134 in k11783 in k10718 in k10715 in k7274 in k7271 in k6978 in k6975 in k6971 in k6680 in k6677 in k6674 in k6671 */
static void C_ccall f_41817(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[5],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_41817,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_41820,a[2]=t1,a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],tmp=(C_word)a,a+=5,tmp);
C_trace("ChickenBridge.scm: 380  emit");
f_23704(t2,((C_word*)t0)[3],t1,((C_word*)t0)[2]);}

/* k41818 in k41815 in k41797 in k41794 in a41791 in k24863 in k24860 in k24857 in k23555 in k23486 in k23293 in k23290 in k23185 in k23134 in k11783 in k10718 in k10715 in k7274 in k7271 in k6978 in k6975 in k6971 in k6680 in k6677 in k6674 in k6671 */
static void C_ccall f_41820(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[12],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_41820,2,t0,t1);}
t2=C_SCHEME_FALSE;
t3=(*a=C_VECTOR_TYPE|1,a[1]=t2,tmp=(C_word)a,a+=2,tmp);
t4=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_41823,a[2]=((C_word*)t0)[3],a[3]=t3,a[4]=((C_word*)t0)[4],tmp=(C_word)a,a+=5,tmp);
t5=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_41851,a[2]=t4,a[3]=t3,a[4]=t1,tmp=(C_word)a,a+=5,tmp);
C_trace("ChickenBridge.scm: 380  get-emit-info");
f_23607(t5,lf[989],((C_word*)t0)[2]);}

/* k41849 in k41818 in k41815 in k41797 in k41794 in a41791 in k24863 in k24860 in k24857 in k23555 in k23486 in k23293 in k23290 in k23185 in k23134 in k11783 in k10718 in k10715 in k7274 in k7271 in k6978 in k6975 in k6971 in k6680 in k6677 in k6674 in k6671 */
static void C_ccall f_41851(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word ab[12],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_41851,2,t0,t1);}
t2=(C_word)C_eqp(t1,lf[990]);
if(C_truep(t2)){
t3=(C_word)C_a_i_list(&a,2,lf[994],((C_word*)t0)[4]);
t4=C_mutate(((C_word *)((C_word*)t0)[3])+1,t3);
t5=((C_word*)t0)[2];
f_41823(t5,t4);}
else{
t3=(C_word)C_a_i_list(&a,2,lf[612],((C_word*)t0)[4]);
t4=C_mutate(((C_word *)((C_word*)t0)[3])+1,t3);
t5=((C_word*)t0)[2];
f_41823(t5,t4);}}

/* k41821 in k41818 in k41815 in k41797 in k41794 in a41791 in k24863 in k24860 in k24857 in k23555 in k23486 in k23293 in k23290 in k23185 in k23134 in k11783 in k10718 in k10715 in k7274 in k7271 in k6978 in k6975 in k6971 in k6680 in k6677 in k6674 in k6671 */
static void C_fcall f_41823(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[4],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_41823,NULL,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_41829,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 380  get-emit-info");
f_23607(t2,lf[957],((C_word*)t0)[2]);}

/* k41827 in k41821 in k41818 in k41815 in k41797 in k41794 in a41791 in k24863 in k24860 in k24857 in k23555 in k23486 in k23293 in k23290 in k23185 in k23134 in k11783 in k10718 in k10715 in k7274 in k7271 in k6978 in k6975 in k6971 in k6680 in k6677 in k6674 in k6671 */
static void C_ccall f_41829(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[12],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_41829,2,t0,t1);}
if(C_truep(t1)){
t2=(C_word)C_a_i_list(&a,1,lf[661]);
t3=((C_word*)t0)[3];
((C_proc2)(void*)(*((C_word*)t3+1)))(2,t3,(C_word)C_a_i_list(&a,3,lf[18],((C_word*)((C_word*)t0)[2])[1],t2));}
else{
t2=((C_word*)t0)[3];
((C_proc2)(void*)(*((C_word*)t2+1)))(2,t2,((C_word*)((C_word*)t0)[2])[1]);}}

/* a41781 in k24863 in k24860 in k24857 in k23555 in k23486 in k23293 in k23290 in k23185 in k23134 in k11783 in k10718 in k10715 in k7274 in k7271 in k6978 in k6975 in k6971 in k6680 in k6677 in k6674 in k6671 */
static void C_ccall f_41782(C_word c,C_word t0,C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word *a;
if(c!=4) C_bad_argc_2(c,4,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr4,(void*)f_41782,4,t0,t1,t2,t3);}
t4=(C_word)C_i_cadr(t2);
C_trace("ChickenBridge.scm: 380  make-parse-unit");
f_23490(t1,C_fix(26624),t4,C_SCHEME_FALSE);}

/* k41774 in k24863 in k24860 in k24857 in k23555 in k23486 in k23293 in k23290 in k23185 in k23134 in k11783 in k10718 in k10715 in k7274 in k7271 in k6978 in k6975 in k6971 in k6680 in k6677 in k6674 in k6671 */
static void C_ccall f_41776(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 380  hash-table-set!");
t2=C_retrieve(lf[852]);
((C_proc5)C_retrieve_proc(t2))(5,t2,((C_word*)t0)[2],C_retrieve2(lf[424],"*rules*"),C_fix(26624),t1);}

/* k24866 in k24863 in k24860 in k24857 in k23555 in k23486 in k23293 in k23290 in k23185 in k23134 in k11783 in k10718 in k10715 in k7274 in k7271 in k6978 in k6975 in k6971 in k6680 in k6677 in k6674 in k6671 */
static void C_ccall f_24868(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word ab[28],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_24868,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_24871,a[2]=((C_word*)t0)[2],tmp=(C_word)a,a+=3,tmp);
t3=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_41672,a[2]=t2,tmp=(C_word)a,a+=3,tmp);
t4=(C_word)C_a_i_cons(&a,2,C_fix(5632),C_SCHEME_END_OF_LIST);
t5=(C_word)C_a_i_cons(&a,2,C_fix(5376),t4);
t6=(C_word)C_a_i_cons(&a,2,lf[457],t5);
t7=(C_word)C_a_i_cons(&a,2,C_fix(29696),C_SCHEME_END_OF_LIST);
t8=(C_word)C_a_i_cons(&a,2,t6,t7);
t9=(C_word)C_a_i_cons(&a,2,lf[456],t8);
t10=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_41680,a[2]=t9,a[3]=t3,tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 380  simple-unit-parser");
f_23945(t10,C_fix(27648));}

/* k41678 in k24866 in k24863 in k24860 in k24857 in k23555 in k23486 in k23293 in k23290 in k23185 in k23134 in k11783 in k10718 in k10715 in k7274 in k7271 in k6978 in k6975 in k6971 in k6680 in k6677 in k6674 in k6671 */
static void C_ccall f_41680(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[3],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_41680,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_41682,a[2]=((C_word)li684),tmp=(C_word)a,a+=3,tmp);
C_trace("ChickenBridge.scm: 380  make-rule");
f_23189(((C_word*)t0)[3],lf[993],C_fix(27648),((C_word*)t0)[2],t1,t2);}

/* a41681 in k41678 in k24866 in k24863 in k24860 in k24857 in k23555 in k23486 in k23293 in k23290 in k23185 in k23134 in k11783 in k10718 in k10715 in k7274 in k7271 in k6978 in k6975 in k6971 in k6680 in k6677 in k6674 in k6671 */
static void C_ccall f_41682(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4){
C_word tmp;
C_word t5;
C_word t6;
C_word ab[5],*a=ab;
if(c!=5) C_bad_argc_2(c,5,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr5,(void*)f_41682,5,t0,t1,t2,t3,t4);}
t5=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_41686,a[2]=t4,a[3]=t3,a[4]=t1,tmp=(C_word)a,a+=5,tmp);
C_trace("ChickenBridge.scm: 380  parse-unit-parsed");
f_23529(t5,t2);}

/* k41684 in a41681 in k41678 in k24866 in k24863 in k24860 in k24857 in k23555 in k23486 in k23293 in k23290 in k23185 in k23134 in k11783 in k10718 in k10715 in k7274 in k7271 in k6978 in k6975 in k6971 in k6680 in k6677 in k6674 in k6671 */
static void C_ccall f_41686(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[6],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_41686,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_41689,a[2]=((C_word*)t0)[2],a[3]=t1,a[4]=((C_word*)t0)[3],a[5]=((C_word*)t0)[4],tmp=(C_word)a,a+=6,tmp);
t3=(C_word)C_i_car(t1);
C_trace("ChickenBridge.scm: 380  token-unit-type=?");
f_23575(t2,t3,C_fix(5376));}

/* k41687 in k41684 in a41681 in k41678 in k24866 in k24863 in k24860 in k24857 in k23555 in k23486 in k23293 in k23290 in k23185 in k23134 in k11783 in k10718 in k10715 in k7274 in k7271 in k6978 in k6975 in k6971 in k6680 in k6677 in k6674 in k6671 */
static void C_ccall f_41689(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_41689,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_41692,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=t1,a[6]=((C_word*)t0)[5],tmp=(C_word)a,a+=7,tmp);
C_trace("ChickenBridge.scm: 380  get-emit-info");
f_23607(t2,lf[989],((C_word*)t0)[4]);}

/* k41690 in k41687 in k41684 in a41681 in k41678 in k24866 in k24863 in k24860 in k24857 in k23555 in k23486 in k23293 in k23290 in k23185 in k23134 in k11783 in k10718 in k10715 in k7274 in k7271 in k6978 in k6975 in k6971 in k6680 in k6677 in k6674 in k6671 */
static void C_ccall f_41692(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word ab[15],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_41692,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_41695,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],tmp=(C_word)a,a+=7,tmp);
if(C_truep(t1)){
t3=t2;
f_41695(2,t3,C_SCHEME_UNDEFINED);}
else{
t3=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_41728,a[2]=t2,a[3]=((C_word*)t0)[2],tmp=(C_word)a,a+=4,tmp);
t4=(C_truep(((C_word*)t0)[5])?lf[991]:lf[992]);
t5=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_41736,a[2]=t4,a[3]=t3,tmp=(C_word)a,a+=4,tmp);
t6=(C_word)C_i_car(((C_word*)t0)[3]);
C_trace("ChickenBridge.scm: 380  parse-unit-position");
f_23547(t5,t6);}}

/* k41734 in k41690 in k41687 in k41684 in a41681 in k41678 in k24866 in k24863 in k24860 in k24857 in k23555 in k23486 in k23293 in k23290 in k23185 in k23134 in k11783 in k10718 in k10715 in k7274 in k7271 in k6978 in k6975 in k6971 in k6680 in k6677 in k6674 in k6671 */
static void C_ccall f_41736(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 380  make-parse-error");
f_23439(((C_word*)t0)[3],((C_word*)t0)[2],t1);}

/* k41726 in k41690 in k41687 in k41684 in a41681 in k41678 in k24866 in k24863 in k24860 in k24857 in k23555 in k23486 in k23293 in k23290 in k23185 in k23134 in k11783 in k10718 in k10715 in k7274 in k7271 in k6978 in k6975 in k6971 in k6680 in k6677 in k6674 in k6671 */
static void C_ccall f_41728(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 380  errf");
t2=((C_word*)t0)[3];
((C_proc3)C_retrieve_proc(t2))(3,t2,((C_word*)t0)[2],t1);}

/* k41693 in k41690 in k41687 in k41684 in a41681 in k41678 in k24866 in k24863 in k24860 in k24857 in k23555 in k23486 in k23293 in k23290 in k23185 in k23134 in k11783 in k10718 in k10715 in k7274 in k7271 in k6978 in k6975 in k6971 in k6680 in k6677 in k6674 in k6671 */
static void C_ccall f_41695(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word ab[24],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_41695,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_41698,a[2]=((C_word*)t0)[4],a[3]=((C_word*)t0)[5],a[4]=((C_word*)t0)[6],tmp=(C_word)a,a+=5,tmp);
t3=(C_word)C_i_cadr(((C_word*)t0)[3]);
t4=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_41718,a[2]=((C_word*)t0)[2],a[3]=t3,a[4]=t2,tmp=(C_word)a,a+=5,tmp);
t5=lf[989];
t6=((C_word*)t0)[4];
t7=(C_word)C_a_i_list(&a,1,C_SCHEME_FALSE);
t8=t7;
t9=(*a=C_VECTOR_TYPE|1,a[1]=t8,tmp=(C_word)a,a+=2,tmp);
t10=C_SCHEME_UNDEFINED;
t11=(*a=C_VECTOR_TYPE|1,a[1]=t10,tmp=(C_word)a,a+=2,tmp);
t12=C_set_block_item(t11,0,(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_23638,a[2]=t9,a[3]=t5,a[4]=t11,a[5]=t7,a[6]=((C_word)li683),tmp=(C_word)a,a+=7,tmp));
t13=((C_word*)t11)[1];
f_23638(t13,t4,t6);}

/* do3313 in k41693 in k41690 in k41687 in k41684 in a41681 in k41678 in k24866 in k24863 in k24860 in k24857 in k23555 in k23486 in k23293 in k23290 in k23185 in k23134 in k11783 in k10718 in k10715 in k7274 in k7271 in k6978 in k6975 in k6971 in k6680 in k6677 in k6674 in k6671 */
static void C_fcall f_23638(C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word t5;
C_word ab[11],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_23638,NULL,3,t0,t1,t2);}
if(C_truep((C_word)C_i_nullp(t2))){
t3=t1;
((C_proc2)(void*)(*((C_word*)t3+1)))(2,t3,(C_word)C_i_cdr(((C_word*)t0)[5]));}
else{
t3=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_23651,a[2]=t1,a[3]=((C_word*)t0)[4],a[4]=t2,tmp=(C_word)a,a+=5,tmp);
t4=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_23684,a[2]=((C_word*)t0)[2],a[3]=t2,a[4]=t3,a[5]=((C_word*)t0)[3],tmp=(C_word)a,a+=6,tmp);
C_trace("ChickenBridge.scm: 380  caar");
t5=*((C_word*)lf[251]+1);
((C_proc3)C_retrieve_proc(t5))(3,t5,t4,t2);}}

/* k23682 in do3313 in k41693 in k41690 in k41687 in k41684 in a41681 in k41678 in k24866 in k24863 in k24860 in k24857 in k23555 in k23486 in k23293 in k23290 in k23185 in k23134 in k11783 in k10718 in k10715 in k7274 in k7271 in k6978 in k6975 in k6971 in k6680 in k6677 in k6674 in k6671 */
static void C_ccall f_23684(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word ab[3],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_23684,2,t0,t1);}
t2=(C_word)C_eqp(t1,((C_word*)t0)[5]);
if(C_truep(t2)){
t3=((C_word*)t0)[4];
f_23651(t3,C_SCHEME_UNDEFINED);}
else{
t3=(C_word)C_i_car(((C_word*)t0)[3]);
t4=(C_word)C_a_i_list(&a,1,t3);
t5=(C_word)C_i_set_cdr(((C_word*)((C_word*)t0)[2])[1],t4);
t6=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[2])[1]);
t7=C_mutate(((C_word *)((C_word*)t0)[2])+1,t6);
t8=((C_word*)t0)[4];
f_23651(t8,t7);}}

/* k23649 in do3313 in k41693 in k41690 in k41687 in k41684 in a41681 in k41678 in k24866 in k24863 in k24860 in k24857 in k23555 in k23486 in k23293 in k23290 in k23185 in k23134 in k11783 in k10718 in k10715 in k7274 in k7271 in k6978 in k6975 in k6971 in k6680 in k6677 in k6674 in k6671 */
static void C_fcall f_23651(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word *a;
t2=(C_word)C_i_cdr(((C_word*)t0)[4]);
t3=((C_word*)((C_word*)t0)[3])[1];
f_23638(t3,((C_word*)t0)[2],t2);}

/* k41716 in k41693 in k41690 in k41687 in k41684 in a41681 in k41678 in k24866 in k24863 in k24860 in k24857 in k23555 in k23486 in k23293 in k23290 in k23185 in k23134 in k11783 in k10718 in k10715 in k7274 in k7271 in k6978 in k6975 in k6971 in k6680 in k6677 in k6674 in k6671 */
static void C_ccall f_41718(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 380  emit");
f_23704(((C_word*)t0)[4],((C_word*)t0)[3],t1,((C_word*)t0)[2]);}

/* k41696 in k41693 in k41690 in k41687 in k41684 in a41681 in k41678 in k24866 in k24863 in k24860 in k24857 in k23555 in k23486 in k23293 in k23290 in k23185 in k23134 in k11783 in k10718 in k10715 in k7274 in k7271 in k6978 in k6975 in k6971 in k6680 in k6677 in k6674 in k6671 */
static void C_ccall f_41698(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[5],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_41698,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_41701,a[2]=t1,a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],tmp=(C_word)a,a+=5,tmp);
C_trace("ChickenBridge.scm: 380  set-emit-info!");
f_23686(t2,lf[989],lf[990],((C_word*)t0)[2]);}

/* k41699 in k41696 in k41693 in k41690 in k41687 in k41684 in a41681 in k41678 in k24866 in k24863 in k24860 in k24857 in k23555 in k23486 in k23293 in k23290 in k23185 in k23134 in k11783 in k10718 in k10715 in k7274 in k7271 in k6978 in k6975 in k6971 in k6680 in k6677 in k6674 in k6671 */
static void C_ccall f_41701(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word ab[12],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_41701,2,t0,t1);}
t2=((C_word*)t0)[4];
((C_proc2)(void*)(*((C_word*)t2+1)))(2,t2,(C_truep(((C_word*)t0)[3])?(C_word)C_a_i_list(&a,2,lf[987],((C_word*)t0)[2]):(C_word)C_a_i_list(&a,2,lf[988],((C_word*)t0)[2])));}

/* k41670 in k24866 in k24863 in k24860 in k24857 in k23555 in k23486 in k23293 in k23290 in k23185 in k23134 in k11783 in k10718 in k10715 in k7274 in k7271 in k6978 in k6975 in k6971 in k6680 in k6677 in k6674 in k6671 */
static void C_ccall f_41672(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 380  hash-table-set!");
t2=C_retrieve(lf[852]);
((C_proc5)C_retrieve_proc(t2))(5,t2,((C_word*)t0)[2],C_retrieve2(lf[424],"*rules*"),C_fix(27648),t1);}

/* k24869 in k24866 in k24863 in k24860 in k24857 in k23555 in k23486 in k23293 in k23290 in k23185 in k23134 in k11783 in k10718 in k10715 in k7274 in k7271 in k6978 in k6975 in k6971 in k6680 in k6677 in k6674 in k6671 */
static void C_ccall f_24871(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word ab[21],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_24871,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_24874,a[2]=((C_word*)t0)[2],tmp=(C_word)a,a+=3,tmp);
t3=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_41644,a[2]=t2,tmp=(C_word)a,a+=3,tmp);
t4=(C_word)C_a_i_cons(&a,2,C_fix(27648),C_SCHEME_END_OF_LIST);
t5=(C_word)C_a_i_cons(&a,2,C_fix(2304),t4);
t6=(C_word)C_a_i_cons(&a,2,C_fix(26624),t5);
t7=(C_word)C_a_i_cons(&a,2,C_fix(26368),t6);
t8=(C_word)C_a_i_cons(&a,2,lf[457],t7);
C_trace("ChickenBridge.scm: 380  make-rule");
f_23189(t3,lf[986],C_fix(26880),t8,C_SCHEME_FALSE,C_SCHEME_FALSE);}

/* k41642 in k24869 in k24866 in k24863 in k24860 in k24857 in k23555 in k23486 in k23293 in k23290 in k23185 in k23134 in k11783 in k10718 in k10715 in k7274 in k7271 in k6978 in k6975 in k6971 in k6680 in k6677 in k6674 in k6671 */
static void C_ccall f_41644(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 380  hash-table-set!");
t2=C_retrieve(lf[852]);
((C_proc5)C_retrieve_proc(t2))(5,t2,((C_word*)t0)[2],C_retrieve2(lf[424],"*rules*"),C_fix(26880),t1);}

/* k24872 in k24869 in k24866 in k24863 in k24860 in k24857 in k23555 in k23486 in k23293 in k23290 in k23185 in k23134 in k11783 in k10718 in k10715 in k7274 in k7271 in k6978 in k6975 in k6971 in k6680 in k6677 in k6674 in k6671 */
static void C_ccall f_24874(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word ab[27],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_24874,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_24877,a[2]=((C_word*)t0)[2],tmp=(C_word)a,a+=3,tmp);
t3=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_41584,a[2]=t2,tmp=(C_word)a,a+=3,tmp);
t4=(C_word)C_a_i_cons(&a,2,C_fix(1792),C_SCHEME_END_OF_LIST);
t5=(C_word)C_a_i_cons(&a,2,C_fix(29696),t4);
t6=(C_word)C_a_i_cons(&a,2,C_fix(1536),t5);
t7=(C_word)C_a_i_cons(&a,2,C_fix(25088),t6);
t8=(C_word)C_a_i_cons(&a,2,lf[456],t7);
t9=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_41590,a[2]=((C_word)li681),tmp=(C_word)a,a+=3,tmp);
t10=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_41608,a[2]=((C_word)li682),tmp=(C_word)a,a+=3,tmp);
C_trace("ChickenBridge.scm: 380  make-rule");
f_23189(t3,lf[985],C_fix(27136),t8,t9,t10);}

/* a41607 in k24872 in k24869 in k24866 in k24863 in k24860 in k24857 in k23555 in k23486 in k23293 in k23290 in k23185 in k23134 in k11783 in k10718 in k10715 in k7274 in k7271 in k6978 in k6975 in k6971 in k6680 in k6677 in k6674 in k6671 */
static void C_ccall f_41608(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4){
C_word tmp;
C_word t5;
C_word t6;
C_word t7;
C_word ab[8],*a=ab;
if(c!=5) C_bad_argc_2(c,5,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr5,(void*)f_41608,5,t0,t1,t2,t3,t4);}
t5=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_41616,a[2]=t1,tmp=(C_word)a,a+=3,tmp);
t6=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_41620,a[2]=t4,a[3]=t3,a[4]=t5,tmp=(C_word)a,a+=5,tmp);
C_trace("ChickenBridge.scm: 380  parse-unit-parsed");
f_23529(t6,t2);}

/* k41618 in a41607 in k24872 in k24869 in k24866 in k24863 in k24860 in k24857 in k23555 in k23486 in k23293 in k23290 in k23185 in k23134 in k11783 in k10718 in k10715 in k7274 in k7271 in k6978 in k6975 in k6971 in k6680 in k6677 in k6674 in k6671 */
static void C_ccall f_41620(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 380  emit");
f_23704(((C_word*)t0)[4],t1,((C_word*)t0)[3],((C_word*)t0)[2]);}

/* k41614 in a41607 in k24872 in k24869 in k24866 in k24863 in k24860 in k24857 in k23555 in k23486 in k23293 in k23290 in k23185 in k23134 in k11783 in k10718 in k10715 in k7274 in k7271 in k6978 in k6975 in k6971 in k6680 in k6677 in k6674 in k6671 */
static void C_ccall f_41616(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word ab[3],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_41616,2,t0,t1);}
t2=((C_word*)t0)[2];
((C_proc2)(void*)(*((C_word*)t2+1)))(2,t2,(C_word)C_a_i_cons(&a,2,lf[73],t1));}

/* a41589 in k24872 in k24869 in k24866 in k24863 in k24860 in k24857 in k23555 in k23486 in k23293 in k23290 in k23185 in k23134 in k11783 in k10718 in k10715 in k7274 in k7271 in k6978 in k6975 in k6971 in k6680 in k6677 in k6674 in k6671 */
static void C_ccall f_41590(C_word c,C_word t0,C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word ab[6],*a=ab;
if(c!=4) C_bad_argc_2(c,4,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr4,(void*)f_41590,4,t0,t1,t2,t3);}
t4=(C_word)C_i_car(t2);
t5=(C_word)C_i_caddr(t2);
t6=(C_word)C_a_i_list(&a,2,t4,t5);
C_trace("ChickenBridge.scm: 380  make-parse-unit");
f_23490(t1,C_fix(27136),t6,C_SCHEME_FALSE);}

/* k41582 in k24872 in k24869 in k24866 in k24863 in k24860 in k24857 in k23555 in k23486 in k23293 in k23290 in k23185 in k23134 in k11783 in k10718 in k10715 in k7274 in k7271 in k6978 in k6975 in k6971 in k6680 in k6677 in k6674 in k6671 */
static void C_ccall f_41584(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 380  hash-table-set!");
t2=C_retrieve(lf[852]);
((C_proc5)C_retrieve_proc(t2))(5,t2,((C_word*)t0)[2],C_retrieve2(lf[424],"*rules*"),C_fix(27136),t1);}

/* k24875 in k24872 in k24869 in k24866 in k24863 in k24860 in k24857 in k23555 in k23486 in k23293 in k23290 in k23185 in k23134 in k11783 in k10718 in k10715 in k7274 in k7271 in k6978 in k6975 in k6971 in k6680 in k6677 in k6674 in k6671 */
static void C_ccall f_24877(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word t14;
C_word t15;
C_word t16;
C_word t17;
C_word ab[45],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_24877,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_24880,a[2]=((C_word*)t0)[2],tmp=(C_word)a,a+=3,tmp);
t3=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_41461,a[2]=t2,tmp=(C_word)a,a+=3,tmp);
t4=(C_word)C_a_i_cons(&a,2,C_fix(29696),C_SCHEME_END_OF_LIST);
t5=(C_word)C_a_i_cons(&a,2,C_fix(256),t4);
t6=(C_word)C_a_i_cons(&a,2,lf[473],t5);
t7=(C_word)C_a_i_cons(&a,2,C_fix(768),C_SCHEME_END_OF_LIST);
t8=(C_word)C_a_i_cons(&a,2,t6,t7);
t9=(C_word)C_a_i_cons(&a,2,C_fix(29696),t8);
t10=(C_word)C_a_i_cons(&a,2,C_fix(256),t9);
t11=(C_word)C_a_i_cons(&a,2,C_fix(29696),t10);
t12=(C_word)C_a_i_cons(&a,2,C_fix(512),t11);
t13=(C_word)C_a_i_cons(&a,2,C_fix(5120),t12);
t14=(C_word)C_a_i_cons(&a,2,lf[456],t13);
t15=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_41467,a[2]=((C_word)li679),tmp=(C_word)a,a+=3,tmp);
t16=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_41498,a[2]=((C_word)li680),tmp=(C_word)a,a+=3,tmp);
C_trace("ChickenBridge.scm: 380  make-rule");
f_23189(t3,lf[984],C_fix(27392),t14,t15,t16);}

/* a41497 in k24875 in k24872 in k24869 in k24866 in k24863 in k24860 in k24857 in k23555 in k23486 in k23293 in k23290 in k23185 in k23134 in k11783 in k10718 in k10715 in k7274 in k7271 in k6978 in k6975 in k6971 in k6680 in k6677 in k6674 in k6671 */
static void C_ccall f_41498(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4){
C_word tmp;
C_word t5;
C_word t6;
C_word ab[5],*a=ab;
if(c!=5) C_bad_argc_2(c,5,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr5,(void*)f_41498,5,t0,t1,t2,t3,t4);}
t5=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_41502,a[2]=t4,a[3]=t3,a[4]=t1,tmp=(C_word)a,a+=5,tmp);
C_trace("ChickenBridge.scm: 380  parse-unit-parsed");
f_23529(t5,t2);}

/* k41500 in a41497 in k24875 in k24872 in k24869 in k24866 in k24863 in k24860 in k24857 in k23555 in k23486 in k23293 in k23290 in k23185 in k23134 in k11783 in k10718 in k10715 in k7274 in k7271 in k6978 in k6975 in k6971 in k6680 in k6677 in k6674 in k6671 */
static void C_ccall f_41502(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[6],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_41502,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_41505,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=t1,tmp=(C_word)a,a+=6,tmp);
t3=(C_word)C_i_car(t1);
C_trace("ChickenBridge.scm: 380  emit");
f_23704(t2,t3,((C_word*)t0)[3],((C_word*)t0)[2]);}

/* k41503 in k41500 in a41497 in k24875 in k24872 in k24869 in k24866 in k24863 in k24860 in k24857 in k23555 in k23486 in k23293 in k23290 in k23185 in k23134 in k11783 in k10718 in k10715 in k7274 in k7271 in k6978 in k6975 in k6971 in k6680 in k6677 in k6674 in k6671 */
static void C_ccall f_41505(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_41505,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_41508,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=t1,a[5]=((C_word*)t0)[4],a[6]=((C_word*)t0)[5],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cadr(((C_word*)t0)[5]);
C_trace("ChickenBridge.scm: 380  emit");
f_23704(t2,t3,((C_word*)t0)[3],((C_word*)t0)[2]);}

/* k41506 in k41503 in k41500 in a41497 in k24875 in k24872 in k24869 in k24866 in k24863 in k24860 in k24857 in k23555 in k23486 in k23293 in k23290 in k23185 in k23134 in k11783 in k10718 in k10715 in k7274 in k7271 in k6978 in k6975 in k6971 in k6680 in k6677 in k6674 in k6671 */
static void C_ccall f_41508(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[17],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_41508,2,t0,t1);}
t2=(C_word)C_i_caddr(((C_word*)t0)[6]);
if(C_truep(t2)){
t3=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_41521,a[2]=t1,a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],tmp=(C_word)a,a+=5,tmp);
C_trace("ChickenBridge.scm: 380  emit");
f_23704(t3,t2,((C_word*)t0)[3],((C_word*)t0)[2]);}
else{
t3=((C_word*)t0)[5];
((C_proc2)(void*)(*((C_word*)t3+1)))(2,t3,(C_word)C_a_i_list(&a,4,lf[20],((C_word*)t0)[4],t1,C_SCHEME_FALSE));}}

/* k41519 in k41506 in k41503 in k41500 in a41497 in k24875 in k24872 in k24869 in k24866 in k24863 in k24860 in k24857 in k23555 in k23486 in k23293 in k23290 in k23185 in k23134 in k11783 in k10718 in k10715 in k7274 in k7271 in k6978 in k6975 in k6971 in k6680 in k6677 in k6674 in k6671 */
static void C_ccall f_41521(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word ab[12],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_41521,2,t0,t1);}
t2=((C_word*)t0)[4];
((C_proc2)(void*)(*((C_word*)t2+1)))(2,t2,(C_word)C_a_i_list(&a,4,lf[20],((C_word*)t0)[3],((C_word*)t0)[2],t1));}

/* a41466 in k24875 in k24872 in k24869 in k24866 in k24863 in k24860 in k24857 in k23555 in k23486 in k23293 in k23290 in k23185 in k23134 in k11783 in k10718 in k10715 in k7274 in k7271 in k6978 in k6975 in k6971 in k6680 in k6677 in k6674 in k6671 */
static void C_ccall f_41467(C_word c,C_word t0,C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word ab[4],*a=ab;
if(c!=4) C_bad_argc_2(c,4,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr4,(void*)f_41467,4,t0,t1,t2,t3);}
t4=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_41471,a[2]=t1,a[3]=t2,tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 380  sixth");
t5=C_retrieve(lf[67]);
((C_proc3)C_retrieve_proc(t5))(3,t5,t4,t2);}

/* k41469 in a41466 in k24875 in k24872 in k24869 in k24866 in k24863 in k24860 in k24857 in k23555 in k23486 in k23293 in k23290 in k23185 in k23134 in k11783 in k10718 in k10715 in k7274 in k7271 in k6978 in k6975 in k6971 in k6680 in k6677 in k6674 in k6671 */
static void C_ccall f_41471(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[5],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_41471,2,t0,t1);}
t2=(C_word)C_i_caddr(((C_word*)t0)[3]);
t3=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_41486,a[2]=((C_word*)t0)[2],a[3]=t2,a[4]=t1,tmp=(C_word)a,a+=5,tmp);
C_trace("ChickenBridge.scm: 380  fifth");
t4=C_retrieve(lf[66]);
((C_proc3)C_retrieve_proc(t4))(3,t4,t3,((C_word*)t0)[3]);}

/* k41484 in k41469 in a41466 in k24875 in k24872 in k24869 in k24866 in k24863 in k24860 in k24857 in k23555 in k23486 in k23293 in k23290 in k23185 in k23134 in k11783 in k10718 in k10715 in k7274 in k7271 in k6978 in k6975 in k6971 in k6680 in k6677 in k6674 in k6671 */
static void C_ccall f_41486(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_41486,2,t0,t1);}
t2=(C_word)C_i_pairp(((C_word*)t0)[4]);
t3=(C_truep(t2)?(C_word)C_i_cadr(((C_word*)t0)[4]):C_SCHEME_FALSE);
t4=(C_word)C_a_i_list(&a,3,((C_word*)t0)[3],t1,t3);
C_trace("ChickenBridge.scm: 380  make-parse-unit");
f_23490(((C_word*)t0)[2],C_fix(27392),t4,C_SCHEME_FALSE);}

/* k41459 in k24875 in k24872 in k24869 in k24866 in k24863 in k24860 in k24857 in k23555 in k23486 in k23293 in k23290 in k23185 in k23134 in k11783 in k10718 in k10715 in k7274 in k7271 in k6978 in k6975 in k6971 in k6680 in k6677 in k6674 in k6671 */
static void C_ccall f_41461(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 380  hash-table-set!");
t2=C_retrieve(lf[852]);
((C_proc5)C_retrieve_proc(t2))(5,t2,((C_word*)t0)[2],C_retrieve2(lf[424],"*rules*"),C_fix(27392),t1);}

/* k24878 in k24875 in k24872 in k24869 in k24866 in k24863 in k24860 in k24857 in k23555 in k23486 in k23293 in k23290 in k23185 in k23134 in k11783 in k10718 in k10715 in k7274 in k7271 in k6978 in k6975 in k6971 in k6680 in k6677 in k6674 in k6671 */
static void C_ccall f_24880(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word t14;
C_word t15;
C_word ab[39],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_24880,2,t0,t1);}
t2=C_mutate(&lf[477],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_24882,a[2]=((C_word)li392),tmp=(C_word)a,a+=3,tmp));
t3=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_24936,a[2]=((C_word*)t0)[2],tmp=(C_word)a,a+=3,tmp);
t4=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_41341,a[2]=t3,tmp=(C_word)a,a+=3,tmp);
t5=(C_word)C_a_i_cons(&a,2,C_fix(29696),C_SCHEME_END_OF_LIST);
t6=(C_word)C_a_i_cons(&a,2,C_fix(256),t5);
t7=(C_word)C_a_i_cons(&a,2,lf[127],t6);
t8=(C_word)C_a_i_cons(&a,2,t7,C_SCHEME_END_OF_LIST);
t9=(C_word)C_a_i_cons(&a,2,C_fix(29696),t8);
t10=(C_word)C_a_i_cons(&a,2,lf[456],t9);
t11=(C_word)C_a_i_cons(&a,2,C_fix(29696),C_SCHEME_END_OF_LIST);
t12=(C_word)C_a_i_cons(&a,2,t10,t11);
t13=(C_word)C_a_i_cons(&a,2,lf[457],t12);
t14=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_41347,a[2]=((C_word)li678),tmp=(C_word)a,a+=3,tmp);
C_trace("ChickenBridge.scm: 380  make-rule");
f_23189(t4,lf[983],C_fix(28416),t13,t14,C_SCHEME_FALSE);}

/* a41346 in k24878 in k24875 in k24872 in k24869 in k24866 in k24863 in k24860 in k24857 in k23555 in k23486 in k23293 in k23290 in k23185 in k23134 in k11783 in k10718 in k10715 in k7274 in k7271 in k6978 in k6975 in k6971 in k6680 in k6677 in k6674 in k6671 */
static void C_ccall f_41347(C_word c,C_word t0,C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word ab[7],*a=ab;
if(c!=4) C_bad_argc_2(c,4,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr4,(void*)f_41347,4,t0,t1,t2,t3);}
if(C_truep((C_word)C_i_pairp(t2))){
t4=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_41363,a[2]=t1,a[3]=t2,tmp=(C_word)a,a+=4,tmp);
t5=(C_word)C_i_cdr(t2);
if(C_truep((C_word)C_i_pairp(t5))){
t6=(C_word)C_i_cadr(t2);
if(C_truep((C_word)C_i_pairp(t6))){
t7=(C_word)C_i_cadr(t2);
t8=(C_word)C_i_car(t7);
C_trace("ChickenBridge.scm: 380  token-unit-type=?");
f_23575(t4,t8,C_fix(256));}
else{
t7=t4;
f_41363(2,t7,C_SCHEME_FALSE);}}
else{
t6=t4;
f_41363(2,t6,C_SCHEME_FALSE);}}
else{
t4=t1;
((C_proc2)(void*)(*((C_word*)t4+1)))(2,t4,(C_word)C_a_i_list(&a,1,t2));}}

/* k41361 in a41346 in k24878 in k24875 in k24872 in k24869 in k24866 in k24863 in k24860 in k24857 in k23555 in k23486 in k23293 in k23290 in k23185 in k23134 in k11783 in k10718 in k10715 in k7274 in k7271 in k6978 in k6975 in k6971 in k6680 in k6677 in k6674 in k6671 */
static void C_ccall f_41363(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_41363,2,t0,t1);}
if(C_truep(t1)){
t2=(C_word)C_i_car(((C_word*)t0)[3]);
t3=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_41374,a[2]=t2,a[3]=((C_word*)t0)[2],tmp=(C_word)a,a+=4,tmp);
t4=(C_word)C_i_cadr(((C_word*)t0)[3]);
C_trace("ChickenBridge.scm: 380  remove-token-type");
f_24882(t3,t4,C_fix(256));}
else{
t2=((C_word*)t0)[2];
((C_proc2)(void*)(*((C_word*)t2+1)))(2,t2,(C_word)C_a_i_list(&a,1,((C_word*)t0)[3]));}}

/* k41372 in k41361 in a41346 in k24878 in k24875 in k24872 in k24869 in k24866 in k24863 in k24860 in k24857 in k23555 in k23486 in k23293 in k23290 in k23185 in k23134 in k11783 in k10718 in k10715 in k7274 in k7271 in k6978 in k6975 in k6971 in k6680 in k6677 in k6674 in k6671 */
static void C_ccall f_41374(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word ab[3],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_41374,2,t0,t1);}
t2=((C_word*)t0)[3];
((C_proc2)(void*)(*((C_word*)t2+1)))(2,t2,(C_word)C_a_i_cons(&a,2,((C_word*)t0)[2],t1));}

/* k41339 in k24878 in k24875 in k24872 in k24869 in k24866 in k24863 in k24860 in k24857 in k23555 in k23486 in k23293 in k23290 in k23185 in k23134 in k11783 in k10718 in k10715 in k7274 in k7271 in k6978 in k6975 in k6971 in k6680 in k6677 in k6674 in k6671 */
static void C_ccall f_41341(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 380  hash-table-set!");
t2=C_retrieve(lf[852]);
((C_proc5)C_retrieve_proc(t2))(5,t2,((C_word*)t0)[2],C_retrieve2(lf[424],"*rules*"),C_fix(28416),t1);}

/* k24934 in k24878 in k24875 in k24872 in k24869 in k24866 in k24863 in k24860 in k24857 in k23555 in k23486 in k23293 in k23290 in k23185 in k23134 in k11783 in k10718 in k10715 in k7274 in k7271 in k6978 in k6975 in k6971 in k6680 in k6677 in k6674 in k6671 */
static void C_ccall f_24936(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word t14;
C_word t15;
C_word t16;
C_word t17;
C_word t18;
C_word t19;
C_word ab[51],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_24936,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_24939,a[2]=((C_word*)t0)[2],tmp=(C_word)a,a+=3,tmp);
t3=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_41202,a[2]=t2,tmp=(C_word)a,a+=3,tmp);
t4=(C_word)C_a_i_cons(&a,2,C_fix(29696),C_SCHEME_END_OF_LIST);
t5=(C_word)C_a_i_cons(&a,2,C_fix(6144),t4);
t6=(C_word)C_a_i_cons(&a,2,C_fix(256),t5);
t7=(C_word)C_a_i_cons(&a,2,lf[127],t6);
t8=(C_word)C_a_i_cons(&a,2,t7,C_SCHEME_END_OF_LIST);
t9=(C_word)C_a_i_cons(&a,2,C_fix(29696),t8);
t10=(C_word)C_a_i_cons(&a,2,C_fix(6144),t9);
t11=(C_word)C_a_i_cons(&a,2,lf[456],t10);
t12=(C_word)C_a_i_cons(&a,2,C_fix(29696),C_SCHEME_END_OF_LIST);
t13=(C_word)C_a_i_cons(&a,2,C_fix(6144),t12);
t14=(C_word)C_a_i_cons(&a,2,lf[456],t13);
t15=(C_word)C_a_i_cons(&a,2,t14,C_SCHEME_END_OF_LIST);
t16=(C_word)C_a_i_cons(&a,2,t11,t15);
t17=(C_word)C_a_i_cons(&a,2,lf[457],t16);
t18=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_41208,a[2]=((C_word)li677),tmp=(C_word)a,a+=3,tmp);
C_trace("ChickenBridge.scm: 380  make-rule");
f_23189(t3,lf[982],C_fix(28672),t17,t18,C_SCHEME_FALSE);}

/* a41207 in k24934 in k24878 in k24875 in k24872 in k24869 in k24866 in k24863 in k24860 in k24857 in k23555 in k23486 in k23293 in k23290 in k23185 in k23134 in k11783 in k10718 in k10715 in k7274 in k7271 in k6978 in k6975 in k6971 in k6680 in k6677 in k6674 in k6671 */
static void C_ccall f_41208(C_word c,C_word t0,C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word ab[9],*a=ab;
if(c!=4) C_bad_argc_2(c,4,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr4,(void*)f_41208,4,t0,t1,t2,t3);}
t4=(C_word)C_i_car(t2);
t5=(C_word)C_i_cadr(t2);
t6=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_41228,a[2]=t4,a[3]=t1,a[4]=t5,tmp=(C_word)a,a+=5,tmp);
t7=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_41231,a[2]=t6,a[3]=t2,tmp=(C_word)a,a+=4,tmp);
t8=(C_word)C_i_cddr(t2);
if(C_truep((C_word)C_i_pairp(t8))){
t9=(C_word)C_i_caddr(t2);
if(C_truep((C_word)C_i_pairp(t9))){
t10=(C_word)C_i_caddr(t2);
t11=(C_word)C_i_car(t10);
C_trace("ChickenBridge.scm: 380  token-unit-type=?");
f_23575(t7,t11,C_fix(256));}
else{
t10=t7;
f_41231(2,t10,C_SCHEME_FALSE);}}
else{
t9=t7;
f_41231(2,t9,C_SCHEME_FALSE);}}

/* k41229 in a41207 in k24934 in k24878 in k24875 in k24872 in k24869 in k24866 in k24863 in k24860 in k24857 in k23555 in k23486 in k23293 in k23290 in k23185 in k23134 in k11783 in k10718 in k10715 in k7274 in k7271 in k6978 in k6975 in k6971 in k6680 in k6677 in k6674 in k6671 */
static void C_ccall f_41231(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word *a;
if(C_truep(t1)){
t2=(C_word)C_i_caddr(((C_word*)t0)[3]);
C_trace("ChickenBridge.scm: 380  remove-token-type");
f_24882(((C_word*)t0)[2],t2,C_fix(256));}
else{
t2=((C_word*)t0)[2];
f_41228(2,t2,C_SCHEME_END_OF_LIST);}}

/* k41226 in a41207 in k24934 in k24878 in k24875 in k24872 in k24869 in k24866 in k24863 in k24860 in k24857 in k23555 in k23486 in k23293 in k23290 in k23185 in k23134 in k11783 in k10718 in k10715 in k7274 in k7271 in k6978 in k6975 in k6971 in k6680 in k6677 in k6674 in k6671 */
static void C_ccall f_41228(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[6],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_41228,2,t0,t1);}
t2=(C_word)C_a_i_cons(&a,2,((C_word*)t0)[4],t1);
t3=((C_word*)t0)[3];
((C_proc2)(void*)(*((C_word*)t3+1)))(2,t3,(C_word)C_a_i_cons(&a,2,((C_word*)t0)[2],t2));}

/* k41200 in k24934 in k24878 in k24875 in k24872 in k24869 in k24866 in k24863 in k24860 in k24857 in k23555 in k23486 in k23293 in k23290 in k23185 in k23134 in k11783 in k10718 in k10715 in k7274 in k7271 in k6978 in k6975 in k6971 in k6680 in k6677 in k6674 in k6671 */
static void C_ccall f_41202(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 380  hash-table-set!");
t2=C_retrieve(lf[852]);
((C_proc5)C_retrieve_proc(t2))(5,t2,((C_word*)t0)[2],C_retrieve2(lf[424],"*rules*"),C_fix(28672),t1);}

/* k24937 in k24934 in k24878 in k24875 in k24872 in k24869 in k24866 in k24863 in k24860 in k24857 in k23555 in k23486 in k23293 in k23290 in k23185 in k23134 in k11783 in k10718 in k10715 in k7274 in k7271 in k6978 in k6975 in k6971 in k6680 in k6677 in k6674 in k6671 */
static void C_ccall f_24939(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word t14;
C_word t15;
C_word t16;
C_word t17;
C_word t18;
C_word t19;
C_word t20;
C_word t21;
C_word t22;
C_word t23;
C_word t24;
C_word t25;
C_word t26;
C_word t27;
C_word ab[75],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_24939,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_24942,a[2]=((C_word*)t0)[2],tmp=(C_word)a,a+=3,tmp);
t3=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_41050,a[2]=t2,tmp=(C_word)a,a+=3,tmp);
t4=(C_word)C_a_i_cons(&a,2,C_fix(768),C_SCHEME_END_OF_LIST);
t5=(C_word)C_a_i_cons(&a,2,C_fix(512),t4);
t6=(C_word)C_a_i_cons(&a,2,lf[456],t5);
t7=(C_word)C_a_i_cons(&a,2,C_fix(768),C_SCHEME_END_OF_LIST);
t8=(C_word)C_a_i_cons(&a,2,C_fix(28416),t7);
t9=(C_word)C_a_i_cons(&a,2,C_fix(512),t8);
t10=(C_word)C_a_i_cons(&a,2,lf[456],t9);
t11=(C_word)C_a_i_cons(&a,2,C_fix(768),C_SCHEME_END_OF_LIST);
t12=(C_word)C_a_i_cons(&a,2,C_fix(28672),t11);
t13=(C_word)C_a_i_cons(&a,2,C_fix(512),t12);
t14=(C_word)C_a_i_cons(&a,2,lf[456],t13);
t15=(C_word)C_a_i_cons(&a,2,C_fix(768),C_SCHEME_END_OF_LIST);
t16=(C_word)C_a_i_cons(&a,2,C_fix(28672),t15);
t17=(C_word)C_a_i_cons(&a,2,C_fix(256),t16);
t18=(C_word)C_a_i_cons(&a,2,C_fix(28416),t17);
t19=(C_word)C_a_i_cons(&a,2,C_fix(512),t18);
t20=(C_word)C_a_i_cons(&a,2,lf[456],t19);
t21=(C_word)C_a_i_cons(&a,2,t20,C_SCHEME_END_OF_LIST);
t22=(C_word)C_a_i_cons(&a,2,t14,t21);
t23=(C_word)C_a_i_cons(&a,2,t10,t22);
t24=(C_word)C_a_i_cons(&a,2,t6,t23);
t25=(C_word)C_a_i_cons(&a,2,lf[457],t24);
t26=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_41056,a[2]=((C_word)li676),tmp=(C_word)a,a+=3,tmp);
C_trace("ChickenBridge.scm: 380  make-rule");
f_23189(t3,lf[981],C_fix(28160),t25,t26,C_SCHEME_FALSE);}

/* a41055 in k24937 in k24934 in k24878 in k24875 in k24872 in k24869 in k24866 in k24863 in k24860 in k24857 in k23555 in k23486 in k23293 in k23290 in k23185 in k23134 in k11783 in k10718 in k10715 in k7274 in k7271 in k6978 in k6975 in k6971 in k6680 in k6677 in k6674 in k6671 */
static void C_ccall f_41056(C_word c,C_word t0,C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word ab[7],*a=ab;
if(c!=4) C_bad_argc_2(c,4,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr4,(void*)f_41056,4,t0,t1,t2,t3);}
t4=(*a=C_VECTOR_TYPE|1,a[1]=t2,tmp=(C_word)a,a+=2,tmp);
t5=(C_word)C_i_cdr(((C_word*)t4)[1]);
t6=C_set_block_item(t4,0,t5);
t7=(C_word)C_i_car(((C_word*)t4)[1]);
t8=(C_word)C_i_cdr(((C_word*)t4)[1]);
t9=C_set_block_item(t4,0,t8);
t10=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_41074,a[2]=t7,a[3]=t4,a[4]=t1,tmp=(C_word)a,a+=5,tmp);
C_trace("ChickenBridge.scm: 380  token-unit-type=?");
f_23575(t10,t7,C_fix(768));}

/* k41072 in a41055 in k24937 in k24934 in k24878 in k24875 in k24872 in k24869 in k24866 in k24863 in k24860 in k24857 in k23555 in k23486 in k23293 in k23290 in k23185 in k23134 in k11783 in k10718 in k10715 in k7274 in k7271 in k6978 in k6975 in k6971 in k6680 in k6677 in k6674 in k6671 */
static void C_ccall f_41074(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[5],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_41074,2,t0,t1);}
if(C_truep(t1)){
t2=((C_word*)t0)[4];
((C_proc2)(void*)(*((C_word*)t2+1)))(2,t2,C_SCHEME_END_OF_LIST);}
else{
t2=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_41083,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[3],tmp=(C_word)a,a+=5,tmp);
t3=(C_word)C_i_car(((C_word*)((C_word*)t0)[3])[1]);
C_trace("ChickenBridge.scm: 380  token-unit-type=?");
f_23575(t2,t3,C_fix(256));}}

/* k41081 in k41072 in a41055 in k24937 in k24934 in k24878 in k24875 in k24872 in k24869 in k24866 in k24863 in k24860 in k24857 in k23555 in k23486 in k23293 in k23290 in k23185 in k23134 in k11783 in k10718 in k10715 in k7274 in k7271 in k6978 in k6975 in k6971 in k6680 in k6677 in k6674 in k6671 */
static void C_ccall f_41083(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word *a;
if(C_truep(t1)){
t2=(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]);
C_trace("ChickenBridge.scm: 380  append");
t3=*((C_word*)lf[18]+1);
((C_proc4)C_retrieve_proc(t3))(4,t3,((C_word*)t0)[3],((C_word*)t0)[2],t2);}
else{
t2=((C_word*)t0)[3];
((C_proc2)(void*)(*((C_word*)t2+1)))(2,t2,((C_word*)t0)[2]);}}

/* k41048 in k24937 in k24934 in k24878 in k24875 in k24872 in k24869 in k24866 in k24863 in k24860 in k24857 in k23555 in k23486 in k23293 in k23290 in k23185 in k23134 in k11783 in k10718 in k10715 in k7274 in k7271 in k6978 in k6975 in k6971 in k6680 in k6677 in k6674 in k6671 */
static void C_ccall f_41050(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 380  hash-table-set!");
t2=C_retrieve(lf[852]);
((C_proc5)C_retrieve_proc(t2))(5,t2,((C_word*)t0)[2],C_retrieve2(lf[424],"*rules*"),C_fix(28160),t1);}

/* k24940 in k24937 in k24934 in k24878 in k24875 in k24872 in k24869 in k24866 in k24863 in k24860 in k24857 in k23555 in k23486 in k23293 in k23290 in k23185 in k23134 in k11783 in k10718 in k10715 in k7274 in k7271 in k6978 in k6975 in k6971 in k6680 in k6677 in k6674 in k6671 */
static void C_ccall f_24942(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word ab[21],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_24942,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_24945,a[2]=((C_word*)t0)[2],tmp=(C_word)a,a+=3,tmp);
t3=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_40979,a[2]=t2,tmp=(C_word)a,a+=3,tmp);
t4=(C_word)C_a_i_cons(&a,2,C_fix(28160),C_SCHEME_END_OF_LIST);
t5=(C_word)C_a_i_cons(&a,2,C_fix(25088),t4);
t6=(C_word)C_a_i_cons(&a,2,lf[456],t5);
t7=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_40985,a[2]=((C_word)li674),tmp=(C_word)a,a+=3,tmp);
t8=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_41003,a[2]=((C_word)li675),tmp=(C_word)a,a+=3,tmp);
C_trace("ChickenBridge.scm: 380  make-rule");
f_23189(t3,lf[980],C_fix(27904),t6,t7,t8);}

/* a41002 in k24940 in k24937 in k24934 in k24878 in k24875 in k24872 in k24869 in k24866 in k24863 in k24860 in k24857 in k23555 in k23486 in k23293 in k23290 in k23185 in k23134 in k11783 in k10718 in k10715 in k7274 in k7271 in k6978 in k6975 in k6971 in k6680 in k6677 in k6674 in k6671 */
static void C_ccall f_41003(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4){
C_word tmp;
C_word t5;
C_word t6;
C_word ab[5],*a=ab;
if(c!=5) C_bad_argc_2(c,5,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr5,(void*)f_41003,5,t0,t1,t2,t3,t4);}
t5=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_41007,a[2]=t4,a[3]=t3,a[4]=t1,tmp=(C_word)a,a+=5,tmp);
C_trace("ChickenBridge.scm: 380  parse-unit-parsed");
f_23529(t5,t2);}

/* k41005 in a41002 in k24940 in k24937 in k24934 in k24878 in k24875 in k24872 in k24869 in k24866 in k24863 in k24860 in k24857 in k23555 in k23486 in k23293 in k23290 in k23185 in k23134 in k11783 in k10718 in k10715 in k7274 in k7271 in k6978 in k6975 in k6971 in k6680 in k6677 in k6674 in k6671 */
static void C_ccall f_41007(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[6],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_41007,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_41010,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=t1,a[5]=((C_word*)t0)[4],tmp=(C_word)a,a+=6,tmp);
t3=(C_word)C_i_car(t1);
C_trace("ChickenBridge.scm: 380  emit");
f_23704(t2,t3,((C_word*)t0)[3],((C_word*)t0)[2]);}

/* k41008 in k41005 in a41002 in k24940 in k24937 in k24934 in k24878 in k24875 in k24872 in k24869 in k24866 in k24863 in k24860 in k24857 in k23555 in k23486 in k23293 in k23290 in k23185 in k23134 in k11783 in k10718 in k10715 in k7274 in k7271 in k6978 in k6975 in k6971 in k6680 in k6677 in k6674 in k6671 */
static void C_ccall f_41010(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[4],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_41010,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_41026,a[2]=t1,a[3]=((C_word*)t0)[5],tmp=(C_word)a,a+=4,tmp);
t3=(C_word)C_i_cdr(((C_word*)t0)[4]);
C_trace("ChickenBridge.scm: 380  emit");
f_23704(t2,t3,((C_word*)t0)[3],((C_word*)t0)[2]);}

/* k41024 in k41008 in k41005 in a41002 in k24940 in k24937 in k24934 in k24878 in k24875 in k24872 in k24869 in k24866 in k24863 in k24860 in k24857 in k23555 in k23486 in k23293 in k23290 in k23185 in k23134 in k11783 in k10718 in k10715 in k7274 in k7271 in k6978 in k6975 in k6971 in k6680 in k6677 in k6674 in k6671 */
static void C_ccall f_41026(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word ab[3],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_41026,2,t0,t1);}
t2=((C_word*)t0)[3];
((C_proc2)(void*)(*((C_word*)t2+1)))(2,t2,(C_word)C_a_i_cons(&a,2,((C_word*)t0)[2],t1));}

/* a40984 in k24940 in k24937 in k24934 in k24878 in k24875 in k24872 in k24869 in k24866 in k24863 in k24860 in k24857 in k23555 in k23486 in k23293 in k23290 in k23185 in k23134 in k11783 in k10718 in k10715 in k7274 in k7271 in k6978 in k6975 in k6971 in k6680 in k6677 in k6674 in k6671 */
static void C_ccall f_40985(C_word c,C_word t0,C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word ab[3],*a=ab;
if(c!=4) C_bad_argc_2(c,4,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr4,(void*)f_40985,4,t0,t1,t2,t3);}
t4=(C_word)C_i_car(t2);
t5=(C_word)C_i_cadr(t2);
t6=(C_word)C_a_i_cons(&a,2,t4,t5);
C_trace("ChickenBridge.scm: 380  make-parse-unit");
f_23490(t1,C_fix(27904),t6,C_SCHEME_FALSE);}

/* k40977 in k24940 in k24937 in k24934 in k24878 in k24875 in k24872 in k24869 in k24866 in k24863 in k24860 in k24857 in k23555 in k23486 in k23293 in k23290 in k23185 in k23134 in k11783 in k10718 in k10715 in k7274 in k7271 in k6978 in k6975 in k6971 in k6680 in k6677 in k6674 in k6671 */
static void C_ccall f_40979(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 380  hash-table-set!");
t2=C_retrieve(lf[852]);
((C_proc5)C_retrieve_proc(t2))(5,t2,((C_word*)t0)[2],C_retrieve2(lf[424],"*rules*"),C_fix(27904),t1);}

/* k24943 in k24940 in k24937 in k24934 in k24878 in k24875 in k24872 in k24869 in k24866 in k24863 in k24860 in k24857 in k23555 in k23486 in k23293 in k23290 in k23185 in k23134 in k11783 in k10718 in k10715 in k7274 in k7271 in k6978 in k6975 in k6971 in k6680 in k6677 in k6674 in k6671 */
static void C_ccall f_24945(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word t14;
C_word t15;
C_word t16;
C_word t17;
C_word t18;
C_word t19;
C_word t20;
C_word t21;
C_word t22;
C_word t23;
C_word ab[63],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_24945,2,t0,t1);}
t2=C_mutate(&lf[478],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_24947,a[2]=((C_word)li393),tmp=(C_word)a,a+=3,tmp));
t3=C_mutate(&lf[479],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_24968,a[2]=((C_word)li396),tmp=(C_word)a,a+=3,tmp));
t4=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_25084,a[2]=((C_word*)t0)[2],tmp=(C_word)a,a+=3,tmp);
t5=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_40903,a[2]=t4,tmp=(C_word)a,a+=3,tmp);
t6=(C_word)C_a_i_cons(&a,2,C_fix(8705),C_SCHEME_END_OF_LIST);
t7=(C_word)C_a_i_cons(&a,2,C_fix(8450),t6);
t8=(C_word)C_a_i_cons(&a,2,C_fix(8963),t7);
t9=(C_word)C_a_i_cons(&a,2,C_fix(10244),t8);
t10=(C_word)C_a_i_cons(&a,2,C_fix(11268),t9);
t11=(C_word)C_a_i_cons(&a,2,C_fix(11012),t10);
t12=(C_word)C_a_i_cons(&a,2,C_fix(9732),t11);
t13=(C_word)C_a_i_cons(&a,2,C_fix(9476),t12);
t14=(C_word)C_a_i_cons(&a,2,C_fix(9988),t13);
t15=(C_word)C_a_i_cons(&a,2,C_fix(10756),t14);
t16=(C_word)C_a_i_cons(&a,2,C_fix(8199),t15);
t17=(C_word)C_a_i_cons(&a,2,C_fix(7941),t16);
t18=(C_word)C_a_i_cons(&a,2,C_fix(7686),t17);
t19=(C_word)C_a_i_cons(&a,2,C_fix(7430),t18);
t20=(C_word)C_a_i_cons(&a,2,C_fix(7173),t19);
t21=(C_word)C_a_i_cons(&a,2,C_fix(6917),t20);
t22=(C_word)C_a_i_cons(&a,2,lf[457],t21);
C_trace("ChickenBridge.scm: 380  make-rule");
f_23189(t5,lf[979],C_fix(28928),t22,C_SCHEME_FALSE,C_SCHEME_FALSE);}

/* k40901 in k24943 in k24940 in k24937 in k24934 in k24878 in k24875 in k24872 in k24869 in k24866 in k24863 in k24860 in k24857 in k23555 in k23486 in k23293 in k23290 in k23185 in k23134 in k11783 in k10718 in k10715 in k7274 in k7271 in k6978 in k6975 in k6971 in k6680 in k6677 in k6674 in k6671 */
static void C_ccall f_40903(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 380  hash-table-set!");
t2=C_retrieve(lf[852]);
((C_proc5)C_retrieve_proc(t2))(5,t2,((C_word*)t0)[2],C_retrieve2(lf[424],"*rules*"),C_fix(28928),t1);}

/* k25082 in k24943 in k24940 in k24937 in k24934 in k24878 in k24875 in k24872 in k24869 in k24866 in k24863 in k24860 in k24857 in k23555 in k23486 in k23293 in k23290 in k23185 in k23134 in k11783 in k10718 in k10715 in k7274 in k7271 in k6978 in k6975 in k6971 in k6680 in k6677 in k6674 in k6671 */
static void C_ccall f_25084(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word ab[27],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_25084,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_25087,a[2]=((C_word*)t0)[2],tmp=(C_word)a,a+=3,tmp);
t3=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_40823,a[2]=t2,tmp=(C_word)a,a+=3,tmp);
t4=(C_word)C_a_i_cons(&a,2,C_fix(29440),C_SCHEME_END_OF_LIST);
t5=(C_word)C_a_i_cons(&a,2,C_fix(28928),t4);
t6=(C_word)C_a_i_cons(&a,2,lf[129],t5);
t7=(C_word)C_a_i_cons(&a,2,t6,C_SCHEME_END_OF_LIST);
t8=(C_word)C_a_i_cons(&a,2,C_fix(29440),t7);
t9=(C_word)C_a_i_cons(&a,2,lf[456],t8);
t10=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_40829,a[2]=((C_word)li673),tmp=(C_word)a,a+=3,tmp);
C_trace("ChickenBridge.scm: 380  make-rule");
f_23189(t3,lf[978],C_fix(29184),t9,t10,C_SCHEME_FALSE);}

/* a40828 in k25082 in k24943 in k24940 in k24937 in k24934 in k24878 in k24875 in k24872 in k24869 in k24866 in k24863 in k24860 in k24857 in k23555 in k23486 in k23293 in k23290 in k23185 in k23134 in k11783 in k10718 in k10715 in k7274 in k7271 in k6978 in k6975 in k6971 in k6680 in k6677 in k6674 in k6671 */
static void C_ccall f_40829(C_word c,C_word t0,C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word ab[4],*a=ab;
if(c!=4) C_bad_argc_2(c,4,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr4,(void*)f_40829,4,t0,t1,t2,t3);}
t4=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_40836,a[2]=t1,a[3]=t2,tmp=(C_word)a,a+=4,tmp);
t5=(C_word)C_i_cadr(t2);
if(C_truep((C_word)C_i_pairp(t5))){
t6=(C_word)C_i_cadr(t2);
t7=(C_word)C_i_car(t6);
C_trace("ChickenBridge.scm: 380  is-op?");
f_24947(t4,t7);}
else{
t6=t4;
f_40836(2,t6,C_SCHEME_FALSE);}}

/* k40834 in a40828 in k25082 in k24943 in k24940 in k24937 in k24934 in k24878 in k24875 in k24872 in k24869 in k24866 in k24863 in k24860 in k24857 in k23555 in k23486 in k23293 in k23290 in k23185 in k23134 in k11783 in k10718 in k10715 in k7274 in k7271 in k6978 in k6975 in k6971 in k6680 in k6677 in k6674 in k6671 */
static void C_ccall f_40836(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[3],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_40836,2,t0,t1);}
if(C_truep(t1)){
t2=(C_word)C_i_car(((C_word*)t0)[3]);
t3=(C_word)C_i_cadr(((C_word*)t0)[3]);
t4=(C_word)C_a_i_cons(&a,2,t2,t3);
C_trace("ChickenBridge.scm: 380  inf->pre");
f_24968(((C_word*)t0)[2],t4);}
else{
t2=((C_word*)t0)[2];
((C_proc2)(void*)(*((C_word*)t2+1)))(2,t2,(C_word)C_i_car(((C_word*)t0)[3]));}}

/* k40821 in k25082 in k24943 in k24940 in k24937 in k24934 in k24878 in k24875 in k24872 in k24869 in k24866 in k24863 in k24860 in k24857 in k23555 in k23486 in k23293 in k23290 in k23185 in k23134 in k11783 in k10718 in k10715 in k7274 in k7271 in k6978 in k6975 in k6971 in k6680 in k6677 in k6674 in k6671 */
static void C_ccall f_40823(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 380  hash-table-set!");
t2=C_retrieve(lf[852]);
((C_proc5)C_retrieve_proc(t2))(5,t2,((C_word*)t0)[2],C_retrieve2(lf[424],"*rules*"),C_fix(29184),t1);}

/* k25085 in k25082 in k24943 in k24940 in k24937 in k24934 in k24878 in k24875 in k24872 in k24869 in k24866 in k24863 in k24860 in k24857 in k23555 in k23486 in k23293 in k23290 in k23185 in k23134 in k11783 in k10718 in k10715 in k7274 in k7271 in k6978 in k6975 in k6971 in k6680 in k6677 in k6674 in k6671 */
static void C_ccall f_25087(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word t14;
C_word t15;
C_word t16;
C_word t17;
C_word t18;
C_word t19;
C_word t20;
C_word t21;
C_word t22;
C_word t23;
C_word t24;
C_word t25;
C_word t26;
C_word ab[72],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_25087,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_25090,a[2]=((C_word*)t0)[2],tmp=(C_word)a,a+=3,tmp);
t3=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_40687,a[2]=t2,tmp=(C_word)a,a+=3,tmp);
t4=(C_word)C_a_i_cons(&a,2,C_fix(29440),C_SCHEME_END_OF_LIST);
t5=(C_word)C_a_i_cons(&a,2,C_fix(7173),t4);
t6=(C_word)C_a_i_cons(&a,2,lf[456],t5);
t7=(C_word)C_a_i_cons(&a,2,C_fix(29440),C_SCHEME_END_OF_LIST);
t8=(C_word)C_a_i_cons(&a,2,C_fix(8963),t7);
t9=(C_word)C_a_i_cons(&a,2,lf[456],t8);
t10=(C_word)C_a_i_cons(&a,2,C_fix(768),C_SCHEME_END_OF_LIST);
t11=(C_word)C_a_i_cons(&a,2,C_fix(29184),t10);
t12=(C_word)C_a_i_cons(&a,2,C_fix(512),t11);
t13=(C_word)C_a_i_cons(&a,2,lf[456],t12);
t14=(C_word)C_a_i_cons(&a,2,C_fix(2304),C_SCHEME_END_OF_LIST);
t15=(C_word)C_a_i_cons(&a,2,C_fix(26624),t14);
t16=(C_word)C_a_i_cons(&a,2,C_fix(26368),t15);
t17=(C_word)C_a_i_cons(&a,2,C_fix(27136),t16);
t18=(C_word)C_a_i_cons(&a,2,C_fix(27904),t17);
t19=(C_word)C_a_i_cons(&a,2,C_fix(27392),t18);
t20=(C_word)C_a_i_cons(&a,2,t13,t19);
t21=(C_word)C_a_i_cons(&a,2,t9,t20);
t22=(C_word)C_a_i_cons(&a,2,t6,t21);
t23=(C_word)C_a_i_cons(&a,2,lf[457],t22);
t24=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_40693,a[2]=((C_word)li671),tmp=(C_word)a,a+=3,tmp);
t25=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_40719,a[2]=((C_word)li672),tmp=(C_word)a,a+=3,tmp);
C_trace("ChickenBridge.scm: 380  make-rule");
f_23189(t3,lf[977],C_fix(29440),t23,t24,t25);}

/* a40718 in k25085 in k25082 in k24943 in k24940 in k24937 in k24934 in k24878 in k24875 in k24872 in k24869 in k24866 in k24863 in k24860 in k24857 in k23555 in k23486 in k23293 in k23290 in k23185 in k23134 in k11783 in k10718 in k10715 in k7274 in k7271 in k6978 in k6975 in k6971 in k6680 in k6677 in k6674 in k6671 */
static void C_ccall f_40719(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4){
C_word tmp;
C_word t5;
C_word t6;
C_word ab[5],*a=ab;
if(c!=5) C_bad_argc_2(c,5,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr5,(void*)f_40719,5,t0,t1,t2,t3,t4);}
t5=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_40727,a[2]=t4,a[3]=t3,a[4]=t1,tmp=(C_word)a,a+=5,tmp);
C_trace("ChickenBridge.scm: 380  parse-unit-parsed");
f_23529(t5,t2);}

/* k40725 in a40718 in k25085 in k25082 in k24943 in k24940 in k24937 in k24934 in k24878 in k24875 in k24872 in k24869 in k24866 in k24863 in k24860 in k24857 in k23555 in k23486 in k23293 in k23290 in k23185 in k23134 in k11783 in k10718 in k10715 in k7274 in k7271 in k6978 in k6975 in k6971 in k6680 in k6677 in k6674 in k6671 */
static void C_ccall f_40727(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 380  emit");
f_23704(((C_word*)t0)[4],t1,((C_word*)t0)[3],((C_word*)t0)[2]);}

/* a40692 in k25085 in k25082 in k24943 in k24940 in k24937 in k24934 in k24878 in k24875 in k24872 in k24869 in k24866 in k24863 in k24860 in k24857 in k23555 in k23486 in k23293 in k23290 in k23185 in k23134 in k11783 in k10718 in k10715 in k7274 in k7271 in k6978 in k6975 in k6971 in k6680 in k6677 in k6674 in k6671 */
static void C_ccall f_40693(C_word c,C_word t0,C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word ab[7],*a=ab;
if(c!=4) C_bad_argc_2(c,4,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr4,(void*)f_40693,4,t0,t1,t2,t3);}
t4=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_40701,a[2]=t1,tmp=(C_word)a,a+=3,tmp);
if(C_truep((C_word)C_i_pairp(t2))){
t5=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_40710,a[2]=t2,a[3]=t4,tmp=(C_word)a,a+=4,tmp);
t6=(C_word)C_i_car(t2);
C_trace("ChickenBridge.scm: 380  token-unit-type=?");
f_23575(t5,t6,C_fix(512));}
else{
t5=t4;
f_40701(t5,t2);}}

/* k40708 in a40692 in k25085 in k25082 in k24943 in k24940 in k24937 in k24934 in k24878 in k24875 in k24872 in k24869 in k24866 in k24863 in k24860 in k24857 in k23555 in k23486 in k23293 in k23290 in k23185 in k23134 in k11783 in k10718 in k10715 in k7274 in k7271 in k6978 in k6975 in k6971 in k6680 in k6677 in k6674 in k6671 */
static void C_ccall f_40710(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
t2=((C_word*)t0)[3];
f_40701(t2,(C_truep(t1)?(C_word)C_i_cadr(((C_word*)t0)[2]):((C_word*)t0)[2]));}

/* k40699 in a40692 in k25085 in k25082 in k24943 in k24940 in k24937 in k24934 in k24878 in k24875 in k24872 in k24869 in k24866 in k24863 in k24860 in k24857 in k23555 in k23486 in k23293 in k23290 in k23185 in k23134 in k11783 in k10718 in k10715 in k7274 in k7271 in k6978 in k6975 in k6971 in k6680 in k6677 in k6674 in k6671 */
static void C_fcall f_40701(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 380  make-parse-unit");
f_23490(((C_word*)t0)[2],C_fix(29440),t1,C_SCHEME_FALSE);}

/* k40685 in k25085 in k25082 in k24943 in k24940 in k24937 in k24934 in k24878 in k24875 in k24872 in k24869 in k24866 in k24863 in k24860 in k24857 in k23555 in k23486 in k23293 in k23290 in k23185 in k23134 in k11783 in k10718 in k10715 in k7274 in k7271 in k6978 in k6975 in k6971 in k6680 in k6677 in k6674 in k6671 */
static void C_ccall f_40687(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 380  hash-table-set!");
t2=C_retrieve(lf[852]);
((C_proc5)C_retrieve_proc(t2))(5,t2,((C_word*)t0)[2],C_retrieve2(lf[424],"*rules*"),C_fix(29440),t1);}

/* k25088 in k25085 in k25082 in k24943 in k24940 in k24937 in k24934 in k24878 in k24875 in k24872 in k24869 in k24866 in k24863 in k24860 in k24857 in k23555 in k23486 in k23293 in k23290 in k23185 in k23134 in k11783 in k10718 in k10715 in k7274 in k7271 in k6978 in k6975 in k6971 in k6680 in k6677 in k6674 in k6671 */
static void C_ccall f_25090(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word ab[33],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_25090,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_25093,a[2]=((C_word*)t0)[2],tmp=(C_word)a,a+=3,tmp);
t3=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_40643,a[2]=t2,tmp=(C_word)a,a+=3,tmp);
t4=(C_word)C_a_i_cons(&a,2,C_fix(26368),C_SCHEME_END_OF_LIST);
t5=(C_word)C_a_i_cons(&a,2,C_fix(6400),t4);
t6=(C_word)C_a_i_cons(&a,2,C_fix(2304),t5);
t7=(C_word)C_a_i_cons(&a,2,C_fix(26624),t6);
t8=(C_word)C_a_i_cons(&a,2,C_fix(27136),t7);
t9=(C_word)C_a_i_cons(&a,2,C_fix(27904),t8);
t10=(C_word)C_a_i_cons(&a,2,C_fix(27392),t9);
t11=(C_word)C_a_i_cons(&a,2,C_fix(29184),t10);
t12=(C_word)C_a_i_cons(&a,2,lf[457],t11);
C_trace("ChickenBridge.scm: 380  make-rule");
f_23189(t3,lf[976],C_fix(29696),t12,C_SCHEME_FALSE,C_SCHEME_FALSE);}

/* k40641 in k25088 in k25085 in k25082 in k24943 in k24940 in k24937 in k24934 in k24878 in k24875 in k24872 in k24869 in k24866 in k24863 in k24860 in k24857 in k23555 in k23486 in k23293 in k23290 in k23185 in k23134 in k11783 in k10718 in k10715 in k7274 in k7271 in k6978 in k6975 in k6971 in k6680 in k6677 in k6674 in k6671 */
static void C_ccall f_40643(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 380  hash-table-set!");
t2=C_retrieve(lf[852]);
((C_proc5)C_retrieve_proc(t2))(5,t2,((C_word*)t0)[2],C_retrieve2(lf[424],"*rules*"),C_fix(29696),t1);}

/* k25091 in k25088 in k25085 in k25082 in k24943 in k24940 in k24937 in k24934 in k24878 in k24875 in k24872 in k24869 in k24866 in k24863 in k24860 in k24857 in k23555 in k23486 in k23293 in k23290 in k23185 in k23134 in k11783 in k10718 in k10715 in k7274 in k7271 in k6978 in k6975 in k6971 in k6680 in k6677 in k6674 in k6671 */
static void C_ccall f_25093(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word ab[33],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_25093,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_25096,a[2]=((C_word*)t0)[2],tmp=(C_word)a,a+=3,tmp);
t3=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_40533,a[2]=t2,tmp=(C_word)a,a+=3,tmp);
t4=(C_word)C_a_i_cons(&a,2,C_fix(29696),C_SCHEME_END_OF_LIST);
t5=(C_word)C_a_i_cons(&a,2,C_fix(256),t4);
t6=(C_word)C_a_i_cons(&a,2,lf[129],t5);
t7=(C_word)C_a_i_cons(&a,2,t6,C_SCHEME_END_OF_LIST);
t8=(C_word)C_a_i_cons(&a,2,C_fix(29696),t7);
t9=(C_word)C_a_i_cons(&a,2,C_fix(15872),t8);
t10=(C_word)C_a_i_cons(&a,2,lf[456],t9);
t11=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_40539,a[2]=((C_word)li668),tmp=(C_word)a,a+=3,tmp);
t12=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_40561,a[2]=((C_word)li670),tmp=(C_word)a,a+=3,tmp);
C_trace("ChickenBridge.scm: 380  make-rule");
f_23189(t3,lf[975],C_fix(33536),t10,t11,t12);}

/* a40560 in k25091 in k25088 in k25085 in k25082 in k24943 in k24940 in k24937 in k24934 in k24878 in k24875 in k24872 in k24869 in k24866 in k24863 in k24860 in k24857 in k23555 in k23486 in k23293 in k23290 in k23185 in k23134 in k11783 in k10718 in k10715 in k7274 in k7271 in k6978 in k6975 in k6971 in k6680 in k6677 in k6674 in k6671 */
static void C_ccall f_40561(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4){
C_word tmp;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word ab[12],*a=ab;
if(c!=5) C_bad_argc_2(c,5,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr5,(void*)f_40561,5,t0,t1,t2,t3,t4);}
t5=(C_word)C_a_i_list(&a,1,lf[506]);
t6=t5;
t7=(*a=C_VECTOR_TYPE|1,a[1]=t6,tmp=(C_word)a,a+=2,tmp);
t8=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_40572,a[2]=t1,a[3]=t4,a[4]=t3,a[5]=t7,a[6]=t5,tmp=(C_word)a,a+=7,tmp);
C_trace("ChickenBridge.scm: 380  parse-unit-parsed");
f_23529(t8,t2);}

/* k40570 in a40560 in k25091 in k25088 in k25085 in k25082 in k24943 in k24940 in k24937 in k24934 in k24878 in k24875 in k24872 in k24869 in k24866 in k24863 in k24860 in k24857 in k23555 in k23486 in k23293 in k23290 in k23185 in k23134 in k11783 in k10718 in k10715 in k7274 in k7271 in k6978 in k6975 in k6971 in k6680 in k6677 in k6674 in k6671 */
static void C_ccall f_40572(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[10],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_40572,2,t0,t1);}
t2=C_SCHEME_UNDEFINED;
t3=(*a=C_VECTOR_TYPE|1,a[1]=t2,tmp=(C_word)a,a+=2,tmp);
t4=C_set_block_item(t3,0,(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_40574,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=t3,a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],a[7]=((C_word)li669),tmp=(C_word)a,a+=8,tmp));
t5=((C_word*)t3)[1];
f_40574(t5,((C_word*)t0)[2],t1);}

/* do3773 in k40570 in a40560 in k25091 in k25088 in k25085 in k25082 in k24943 in k24940 in k24937 in k24934 in k24878 in k24875 in k24872 in k24869 in k24866 in k24863 in k24860 in k24857 in k23555 in k23486 in k23293 in k23290 in k23185 in k23134 in k11783 in k10718 in k10715 in k7274 in k7271 in k6978 in k6975 in k6971 in k6680 in k6677 in k6674 in k6671 */
static void C_fcall f_40574(C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word t5;
C_word ab[6],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_40574,NULL,3,t0,t1,t2);}
if(C_truep((C_word)C_i_nullp(t2))){
t3=t1;
((C_proc2)(void*)(*((C_word*)t3+1)))(2,t3,((C_word*)t0)[6]);}
else{
t3=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_40603,a[2]=t1,a[3]=((C_word*)t0)[4],a[4]=t2,a[5]=((C_word*)t0)[5],tmp=(C_word)a,a+=6,tmp);
t4=(C_word)C_i_car(t2);
C_trace("ChickenBridge.scm: 380  emit");
f_23704(t3,t4,((C_word*)t0)[3],((C_word*)t0)[2]);}}

/* k40601 in do3773 in k40570 in a40560 in k25091 in k25088 in k25085 in k25082 in k24943 in k24940 in k24937 in k24934 in k24878 in k24875 in k24872 in k24869 in k24866 in k24863 in k24860 in k24857 in k23555 in k23486 in k23293 in k23290 in k23185 in k23134 in k11783 in k10718 in k10715 in k7274 in k7271 in k6978 in k6975 in k6971 in k6680 in k6677 in k6674 in k6671 */
static void C_ccall f_40603(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word ab[3],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_40603,2,t0,t1);}
t2=(C_word)C_a_i_list(&a,1,t1);
t3=(C_word)C_i_set_cdr(((C_word*)((C_word*)t0)[5])[1],t2);
t4=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[5])[1]);
t5=C_mutate(((C_word *)((C_word*)t0)[5])+1,t4);
t6=(C_word)C_i_cdr(((C_word*)t0)[4]);
t7=((C_word*)((C_word*)t0)[3])[1];
f_40574(t7,((C_word*)t0)[2],t6);}

/* a40538 in k25091 in k25088 in k25085 in k25082 in k24943 in k24940 in k24937 in k24934 in k24878 in k24875 in k24872 in k24869 in k24866 in k24863 in k24860 in k24857 in k23555 in k23486 in k23293 in k23290 in k23185 in k23134 in k11783 in k10718 in k10715 in k7274 in k7271 in k6978 in k6975 in k6971 in k6680 in k6677 in k6674 in k6671 */
static void C_ccall f_40539(C_word c,C_word t0,C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word ab[4],*a=ab;
if(c!=4) C_bad_argc_2(c,4,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr4,(void*)f_40539,4,t0,t1,t2,t3);}
t4=(C_word)C_i_cadr(t2);
t5=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_40555,a[2]=t1,a[3]=t4,tmp=(C_word)a,a+=4,tmp);
t6=(C_word)C_i_caddr(t2);
C_trace("ChickenBridge.scm: 380  remove-token-type");
f_24882(t5,t6,C_fix(256));}

/* k40553 in a40538 in k25091 in k25088 in k25085 in k25082 in k24943 in k24940 in k24937 in k24934 in k24878 in k24875 in k24872 in k24869 in k24866 in k24863 in k24860 in k24857 in k23555 in k23486 in k23293 in k23290 in k23185 in k23134 in k11783 in k10718 in k10715 in k7274 in k7271 in k6978 in k6975 in k6971 in k6680 in k6677 in k6674 in k6671 */
static void C_ccall f_40555(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[3],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_40555,2,t0,t1);}
t2=(C_word)C_a_i_cons(&a,2,((C_word*)t0)[3],t1);
C_trace("ChickenBridge.scm: 380  make-parse-unit");
f_23490(((C_word*)t0)[2],C_fix(33536),t2,C_SCHEME_FALSE);}

/* k40531 in k25091 in k25088 in k25085 in k25082 in k24943 in k24940 in k24937 in k24934 in k24878 in k24875 in k24872 in k24869 in k24866 in k24863 in k24860 in k24857 in k23555 in k23486 in k23293 in k23290 in k23185 in k23134 in k11783 in k10718 in k10715 in k7274 in k7271 in k6978 in k6975 in k6971 in k6680 in k6677 in k6674 in k6671 */
static void C_ccall f_40533(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 380  hash-table-set!");
t2=C_retrieve(lf[852]);
((C_proc5)C_retrieve_proc(t2))(5,t2,((C_word*)t0)[2],C_retrieve2(lf[424],"*rules*"),C_fix(33536),t1);}

/* k25094 in k25091 in k25088 in k25085 in k25082 in k24943 in k24940 in k24937 in k24934 in k24878 in k24875 in k24872 in k24869 in k24866 in k24863 in k24860 in k24857 in k23555 in k23486 in k23293 in k23290 in k23185 in k23134 in k11783 in k10718 in k10715 in k7274 in k7271 in k6978 in k6975 in k6971 in k6680 in k6677 in k6674 in k6671 */
static void C_ccall f_25096(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word ab[33],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_25096,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_25099,a[2]=((C_word*)t0)[2],tmp=(C_word)a,a+=3,tmp);
t3=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_40458,a[2]=t2,tmp=(C_word)a,a+=3,tmp);
t4=(C_word)C_a_i_cons(&a,2,C_fix(29696),C_SCHEME_END_OF_LIST);
t5=(C_word)C_a_i_cons(&a,2,C_fix(256),t4);
t6=(C_word)C_a_i_cons(&a,2,lf[129],t5);
t7=(C_word)C_a_i_cons(&a,2,t6,C_SCHEME_END_OF_LIST);
t8=(C_word)C_a_i_cons(&a,2,C_fix(29696),t7);
t9=(C_word)C_a_i_cons(&a,2,C_fix(16896),t8);
t10=(C_word)C_a_i_cons(&a,2,lf[456],t9);
t11=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_40464,a[2]=((C_word)li666),tmp=(C_word)a,a+=3,tmp);
t12=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_40486,a[2]=((C_word)li667),tmp=(C_word)a,a+=3,tmp);
C_trace("ChickenBridge.scm: 380  make-rule");
f_23189(t3,lf[974],C_fix(34560),t10,t11,t12);}

/* a40485 in k25094 in k25091 in k25088 in k25085 in k25082 in k24943 in k24940 in k24937 in k24934 in k24878 in k24875 in k24872 in k24869 in k24866 in k24863 in k24860 in k24857 in k23555 in k23486 in k23293 in k23290 in k23185 in k23134 in k11783 in k10718 in k10715 in k7274 in k7271 in k6978 in k6975 in k6971 in k6680 in k6677 in k6674 in k6671 */
static void C_ccall f_40486(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4){
C_word tmp;
C_word t5;
C_word t6;
C_word ab[5],*a=ab;
if(c!=5) C_bad_argc_2(c,5,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr5,(void*)f_40486,5,t0,t1,t2,t3,t4);}
t5=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_40490,a[2]=t4,a[3]=t3,a[4]=t1,tmp=(C_word)a,a+=5,tmp);
C_trace("ChickenBridge.scm: 380  parse-unit-parsed");
f_23529(t5,t2);}

/* k40488 in a40485 in k25094 in k25091 in k25088 in k25085 in k25082 in k24943 in k24940 in k24937 in k24934 in k24878 in k24875 in k24872 in k24869 in k24866 in k24863 in k24860 in k24857 in k23555 in k23486 in k23293 in k23290 in k23185 in k23134 in k11783 in k10718 in k10715 in k7274 in k7271 in k6978 in k6975 in k6971 in k6680 in k6677 in k6674 in k6671 */
static void C_ccall f_40490(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[3],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_40490,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_40497,a[2]=((C_word*)t0)[4],tmp=(C_word)a,a+=3,tmp);
C_trace("ChickenBridge.scm: 380  emit");
f_23704(t2,t1,((C_word*)t0)[3],((C_word*)t0)[2]);}

/* k40495 in k40488 in a40485 in k25094 in k25091 in k25088 in k25085 in k25082 in k24943 in k24940 in k24937 in k24934 in k24878 in k24875 in k24872 in k24869 in k24866 in k24863 in k24860 in k24857 in k23555 in k23486 in k23293 in k23290 in k23185 in k23134 in k11783 in k10718 in k10715 in k7274 in k7271 in k6978 in k6975 in k6971 in k6680 in k6677 in k6674 in k6671 */
static void C_ccall f_40497(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word ab[3],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_40497,2,t0,t1);}
t2=((C_word*)t0)[2];
((C_proc2)(void*)(*((C_word*)t2+1)))(2,t2,(C_word)C_a_i_cons(&a,2,lf[815],t1));}

/* a40463 in k25094 in k25091 in k25088 in k25085 in k25082 in k24943 in k24940 in k24937 in k24934 in k24878 in k24875 in k24872 in k24869 in k24866 in k24863 in k24860 in k24857 in k23555 in k23486 in k23293 in k23290 in k23185 in k23134 in k11783 in k10718 in k10715 in k7274 in k7271 in k6978 in k6975 in k6971 in k6680 in k6677 in k6674 in k6671 */
static void C_ccall f_40464(C_word c,C_word t0,C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word ab[4],*a=ab;
if(c!=4) C_bad_argc_2(c,4,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr4,(void*)f_40464,4,t0,t1,t2,t3);}
t4=(C_word)C_i_cadr(t2);
t5=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_40480,a[2]=t1,a[3]=t4,tmp=(C_word)a,a+=4,tmp);
t6=(C_word)C_i_caddr(t2);
C_trace("ChickenBridge.scm: 380  remove-token-type");
f_24882(t5,t6,C_fix(256));}

/* k40478 in a40463 in k25094 in k25091 in k25088 in k25085 in k25082 in k24943 in k24940 in k24937 in k24934 in k24878 in k24875 in k24872 in k24869 in k24866 in k24863 in k24860 in k24857 in k23555 in k23486 in k23293 in k23290 in k23185 in k23134 in k11783 in k10718 in k10715 in k7274 in k7271 in k6978 in k6975 in k6971 in k6680 in k6677 in k6674 in k6671 */
static void C_ccall f_40480(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[3],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_40480,2,t0,t1);}
t2=(C_word)C_a_i_cons(&a,2,((C_word*)t0)[3],t1);
C_trace("ChickenBridge.scm: 380  make-parse-unit");
f_23490(((C_word*)t0)[2],C_fix(34560),t2,C_SCHEME_FALSE);}

/* k40456 in k25094 in k25091 in k25088 in k25085 in k25082 in k24943 in k24940 in k24937 in k24934 in k24878 in k24875 in k24872 in k24869 in k24866 in k24863 in k24860 in k24857 in k23555 in k23486 in k23293 in k23290 in k23185 in k23134 in k11783 in k10718 in k10715 in k7274 in k7271 in k6978 in k6975 in k6971 in k6680 in k6677 in k6674 in k6671 */
static void C_ccall f_40458(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 380  hash-table-set!");
t2=C_retrieve(lf[852]);
((C_proc5)C_retrieve_proc(t2))(5,t2,((C_word*)t0)[2],C_retrieve2(lf[424],"*rules*"),C_fix(34560),t1);}

/* k25097 in k25094 in k25091 in k25088 in k25085 in k25082 in k24943 in k24940 in k24937 in k24934 in k24878 in k24875 in k24872 in k24869 in k24866 in k24863 in k24860 in k24857 in k23555 in k23486 in k23293 in k23290 in k23185 in k23134 in k11783 in k10718 in k10715 in k7274 in k7271 in k6978 in k6975 in k6971 in k6680 in k6677 in k6674 in k6671 */
static void C_ccall f_25099(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word t14;
C_word t15;
C_word t16;
C_word t17;
C_word t18;
C_word t19;
C_word t20;
C_word t21;
C_word t22;
C_word t23;
C_word t24;
C_word ab[66],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_25099,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_25102,a[2]=((C_word*)t0)[2],tmp=(C_word)a,a+=3,tmp);
t3=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_40245,a[2]=t2,tmp=(C_word)a,a+=3,tmp);
t4=(C_word)C_a_i_cons(&a,2,C_fix(25088),C_SCHEME_END_OF_LIST);
t5=(C_word)C_a_i_cons(&a,2,C_fix(2304),t4);
t6=(C_word)C_a_i_cons(&a,2,lf[457],t5);
t7=(C_word)C_a_i_cons(&a,2,C_fix(28672),C_SCHEME_END_OF_LIST);
t8=(C_word)C_a_i_cons(&a,2,C_fix(256),t7);
t9=(C_word)C_a_i_cons(&a,2,C_fix(28416),t8);
t10=(C_word)C_a_i_cons(&a,2,lf[456],t9);
t11=(C_word)C_a_i_cons(&a,2,C_fix(28672),C_SCHEME_END_OF_LIST);
t12=(C_word)C_a_i_cons(&a,2,C_fix(28416),t11);
t13=(C_word)C_a_i_cons(&a,2,t10,t12);
t14=(C_word)C_a_i_cons(&a,2,lf[457],t13);
t15=(C_word)C_a_i_cons(&a,2,t14,C_SCHEME_END_OF_LIST);
t16=(C_word)C_a_i_cons(&a,2,C_fix(256),t15);
t17=(C_word)C_a_i_cons(&a,2,lf[473],t16);
t18=(C_word)C_a_i_cons(&a,2,t17,C_SCHEME_END_OF_LIST);
t19=(C_word)C_a_i_cons(&a,2,t6,t18);
t20=(C_word)C_a_i_cons(&a,2,C_fix(16384),t19);
t21=(C_word)C_a_i_cons(&a,2,lf[456],t20);
t22=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_40251,a[2]=((C_word)li663),tmp=(C_word)a,a+=3,tmp);
t23=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_40326,a[2]=((C_word)li665),tmp=(C_word)a,a+=3,tmp);
C_trace("ChickenBridge.scm: 380  make-rule");
f_23189(t3,lf[973],C_fix(34304),t21,t22,t23);}

/* a40325 in k25097 in k25094 in k25091 in k25088 in k25085 in k25082 in k24943 in k24940 in k24937 in k24934 in k24878 in k24875 in k24872 in k24869 in k24866 in k24863 in k24860 in k24857 in k23555 in k23486 in k23293 in k23290 in k23185 in k23134 in k11783 in k10718 in k10715 in k7274 in k7271 in k6978 in k6975 in k6971 in k6680 in k6677 in k6674 in k6671 */
static void C_ccall f_40326(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4){
C_word tmp;
C_word t5;
C_word t6;
C_word t7;
C_word ab[10],*a=ab;
if(c!=5) C_bad_argc_2(c,5,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr5,(void*)f_40326,5,t0,t1,t2,t3,t4);}
t5=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_40330,a[2]=t1,a[3]=t2,a[4]=t4,tmp=(C_word)a,a+=5,tmp);
t6=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_40366,a[2]=t4,a[3]=t3,a[4]=t5,tmp=(C_word)a,a+=5,tmp);
C_trace("ChickenBridge.scm: 380  parse-unit-parsed");
f_23529(t6,t2);}

/* k40364 in a40325 in k25097 in k25094 in k25091 in k25088 in k25085 in k25082 in k24943 in k24940 in k24937 in k24934 in k24878 in k24875 in k24872 in k24869 in k24866 in k24863 in k24860 in k24857 in k23555 in k23486 in k23293 in k23290 in k23185 in k23134 in k11783 in k10718 in k10715 in k7274 in k7271 in k6978 in k6975 in k6971 in k6680 in k6677 in k6674 in k6671 */
static void C_ccall f_40366(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 380  emit");
f_23704(((C_word*)t0)[4],t1,((C_word*)t0)[3],((C_word*)t0)[2]);}

/* k40328 in a40325 in k25097 in k25094 in k25091 in k25088 in k25085 in k25082 in k24943 in k24940 in k24937 in k24934 in k24878 in k24875 in k24872 in k24869 in k24866 in k24863 in k24860 in k24857 in k23555 in k23486 in k23293 in k23290 in k23185 in k23134 in k11783 in k10718 in k10715 in k7274 in k7271 in k6978 in k6975 in k6971 in k6680 in k6677 in k6674 in k6671 */
static void C_ccall f_40330(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[5],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_40330,2,t0,t1);}
t2=(C_word)C_i_car(t1);
t3=(C_word)C_i_car(t1);
t4=(C_word)C_i_cdr(t1);
t5=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_40346,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word)li664),tmp=(C_word)a,a+=5,tmp);
C_trace("ChickenBridge.scm: 380  expand-send");
t6=C_retrieve(lf[30]);
((C_proc5)C_retrieve_proc(t6))(5,t6,((C_word*)t0)[2],t3,t4,t5);}

/* a40345 in k40328 in a40325 in k25097 in k25094 in k25091 in k25088 in k25085 in k25082 in k24943 in k24940 in k24937 in k24934 in k24878 in k24875 in k24872 in k24869 in k24866 in k24863 in k24860 in k24857 in k23555 in k23486 in k23293 in k23290 in k23185 in k23134 in k11783 in k10718 in k10715 in k7274 in k7271 in k6978 in k6975 in k6971 in k6680 in k6677 in k6674 in k6671 */
static void C_ccall f_40346(C_word c,C_word t0,C_word t1,C_word t2,...){
C_word tmp;
C_word t3;
va_list v;
C_word *a,c2=c;
C_save_rest(t2,c2,3);
if(c<3) C_bad_min_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_demand(c*C_SIZEOF_PAIR+8)){
C_save_and_reclaim((void*)tr3r,(void*)f_40346r,3,t0,t1,t2);}
else{
a=C_alloc((c-3)*3);
t3=C_restore_rest(a,C_rest_count(0));
f_40346r(t0,t1,t2,t3);}}

static void C_ccall f_40346r(C_word t0,C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word t6;
C_word *a=C_alloc(8);
t4=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_40354,a[2]=t1,a[3]=((C_word*)t0)[3],tmp=(C_word)a,a+=4,tmp);
t5=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_40358,a[2]=((C_word*)t0)[2],a[3]=t4,tmp=(C_word)a,a+=4,tmp);
C_apply(5,0,t5,C_retrieve(lf[31]),t2,t3);}

/* k40356 in a40345 in k40328 in a40325 in k25097 in k25094 in k25091 in k25088 in k25085 in k25082 in k24943 in k24940 in k24937 in k24934 in k24878 in k24875 in k24872 in k24869 in k24866 in k24863 in k24860 in k24857 in k23555 in k23486 in k23293 in k23290 in k23185 in k23134 in k11783 in k10718 in k10715 in k7274 in k7271 in k6978 in k6975 in k6971 in k6680 in k6677 in k6674 in k6671 */
static void C_ccall f_40358(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[4],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_40358,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_40362,a[2]=t1,a[3]=((C_word*)t0)[3],tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 380  parse-unit-position");
f_23547(t2,((C_word*)t0)[2]);}

/* k40360 in k40356 in a40345 in k40328 in a40325 in k25097 in k25094 in k25091 in k25088 in k25085 in k25082 in k24943 in k24940 in k24937 in k24934 in k24878 in k24875 in k24872 in k24869 in k24866 in k24863 in k24860 in k24857 in k23555 in k23486 in k23293 in k23290 in k23185 in k23134 in k11783 in k10718 in k10715 in k7274 in k7271 in k6978 in k6975 in k6971 in k6680 in k6677 in k6674 in k6671 */
static void C_ccall f_40362(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 380  make-parse-error");
f_23439(((C_word*)t0)[3],((C_word*)t0)[2],t1);}

/* k40352 in a40345 in k40328 in a40325 in k25097 in k25094 in k25091 in k25088 in k25085 in k25082 in k24943 in k24940 in k24937 in k24934 in k24878 in k24875 in k24872 in k24869 in k24866 in k24863 in k24860 in k24857 in k23555 in k23486 in k23293 in k23290 in k23185 in k23134 in k11783 in k10718 in k10715 in k7274 in k7271 in k6978 in k6975 in k6971 in k6680 in k6677 in k6674 in k6671 */
static void C_ccall f_40354(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 380  errf");
t2=((C_word*)t0)[3];
((C_proc3)C_retrieve_proc(t2))(3,t2,((C_word*)t0)[2],t1);}

/* a40250 in k25097 in k25094 in k25091 in k25088 in k25085 in k25082 in k24943 in k24940 in k24937 in k24934 in k24878 in k24875 in k24872 in k24869 in k24866 in k24863 in k24860 in k24857 in k23555 in k23486 in k23293 in k23290 in k23185 in k23134 in k11783 in k10718 in k10715 in k7274 in k7271 in k6978 in k6975 in k6971 in k6680 in k6677 in k6674 in k6671 */
static void C_ccall f_40251(C_word c,C_word t0,C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word t14;
C_word t15;
C_word ab[11],*a=ab;
if(c!=4) C_bad_argc_2(c,4,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr4,(void*)f_40251,4,t0,t1,t2,t3);}
t4=(C_word)C_i_caddr(t2);
t5=t4;
t6=(*a=C_VECTOR_TYPE|1,a[1]=t5,tmp=(C_word)a,a+=2,tmp);
t7=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_40258,a[2]=t1,a[3]=t6,a[4]=t2,tmp=(C_word)a,a+=5,tmp);
t8=((C_word*)t6)[1];
if(C_truep(t8)){
t9=(C_word)C_i_cadr(((C_word*)t6)[1]);
t10=C_set_block_item(t6,0,t9);
t11=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_40294,a[2]=t7,a[3]=t6,tmp=(C_word)a,a+=4,tmp);
t12=(C_word)C_i_cdr(((C_word*)t6)[1]);
if(C_truep((C_word)C_i_nullp(t12))){
t13=t11;
f_40294(2,t13,C_SCHEME_FALSE);}
else{
t13=(C_word)C_i_cadr(((C_word*)t6)[1]);
C_trace("ChickenBridge.scm: 380  token-unit-type=?");
f_23575(t11,t13,C_fix(256));}}
else{
t9=C_set_block_item(t6,0,C_SCHEME_END_OF_LIST);
t10=t7;
f_40258(t10,t9);}}

/* k40292 in a40250 in k25097 in k25094 in k25091 in k25088 in k25085 in k25082 in k24943 in k24940 in k24937 in k24934 in k24878 in k24875 in k24872 in k24869 in k24866 in k24863 in k24860 in k24857 in k23555 in k23486 in k23293 in k23290 in k23185 in k23134 in k11783 in k10718 in k10715 in k7274 in k7271 in k6978 in k6975 in k6971 in k6680 in k6677 in k6674 in k6671 */
static void C_ccall f_40294(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[4],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_40294,2,t0,t1);}
if(C_truep(t1)){
t2=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_40298,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],tmp=(C_word)a,a+=4,tmp);
t3=(C_word)C_i_car(((C_word*)((C_word*)t0)[3])[1]);
t4=(C_word)C_i_caddr(((C_word*)((C_word*)t0)[3])[1]);
C_trace("ChickenBridge.scm: 380  append");
t5=*((C_word*)lf[18]+1);
((C_proc4)C_retrieve_proc(t5))(4,t5,t2,t3,t4);}
else{
t2=((C_word*)t0)[2];
f_40258(t2,C_SCHEME_UNDEFINED);}}

/* k40296 in k40292 in a40250 in k25097 in k25094 in k25091 in k25088 in k25085 in k25082 in k24943 in k24940 in k24937 in k24934 in k24878 in k24875 in k24872 in k24869 in k24866 in k24863 in k24860 in k24857 in k23555 in k23486 in k23293 in k23290 in k23185 in k23134 in k11783 in k10718 in k10715 in k7274 in k7271 in k6978 in k6975 in k6971 in k6680 in k6677 in k6674 in k6671 */
static void C_ccall f_40298(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[3])+1,t1);
t3=((C_word*)t0)[2];
f_40258(t3,t2);}

/* k40256 in a40250 in k25097 in k25094 in k25091 in k25088 in k25085 in k25082 in k24943 in k24940 in k24937 in k24934 in k24878 in k24875 in k24872 in k24869 in k24866 in k24863 in k24860 in k24857 in k23555 in k23486 in k23293 in k23290 in k23185 in k23134 in k11783 in k10718 in k10715 in k7274 in k7271 in k6978 in k6975 in k6971 in k6680 in k6677 in k6674 in k6671 */
static void C_fcall f_40258(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_40258,NULL,2,t0,t1);}
t2=(C_word)C_i_cadr(((C_word*)t0)[4]);
t3=(C_word)C_a_i_cons(&a,2,t2,((C_word*)((C_word*)t0)[3])[1]);
t4=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_40269,a[2]=t3,a[3]=((C_word*)t0)[2],tmp=(C_word)a,a+=4,tmp);
t5=(C_word)C_i_car(((C_word*)t0)[4]);
C_trace("ChickenBridge.scm: 380  parse-unit-position");
f_23547(t4,t5);}

/* k40267 in k40256 in a40250 in k25097 in k25094 in k25091 in k25088 in k25085 in k25082 in k24943 in k24940 in k24937 in k24934 in k24878 in k24875 in k24872 in k24869 in k24866 in k24863 in k24860 in k24857 in k23555 in k23486 in k23293 in k23290 in k23185 in k23134 in k11783 in k10718 in k10715 in k7274 in k7271 in k6978 in k6975 in k6971 in k6680 in k6677 in k6674 in k6671 */
static void C_ccall f_40269(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 380  make-parse-unit");
f_23490(((C_word*)t0)[3],C_fix(34304),((C_word*)t0)[2],t1);}

/* k40243 in k25097 in k25094 in k25091 in k25088 in k25085 in k25082 in k24943 in k24940 in k24937 in k24934 in k24878 in k24875 in k24872 in k24869 in k24866 in k24863 in k24860 in k24857 in k23555 in k23486 in k23293 in k23290 in k23185 in k23134 in k11783 in k10718 in k10715 in k7274 in k7271 in k6978 in k6975 in k6971 in k6680 in k6677 in k6674 in k6671 */
static void C_ccall f_40245(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 380  hash-table-set!");
t2=C_retrieve(lf[852]);
((C_proc5)C_retrieve_proc(t2))(5,t2,((C_word*)t0)[2],C_retrieve2(lf[424],"*rules*"),C_fix(34304),t1);}

/* k25100 in k25097 in k25094 in k25091 in k25088 in k25085 in k25082 in k24943 in k24940 in k24937 in k24934 in k24878 in k24875 in k24872 in k24869 in k24866 in k24863 in k24860 in k24857 in k23555 in k23486 in k23293 in k23290 in k23185 in k23134 in k11783 in k10718 in k10715 in k7274 in k7271 in k6978 in k6975 in k6971 in k6680 in k6677 in k6674 in k6671 */
static void C_ccall f_25102(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word ab[18],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_25102,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_25105,a[2]=((C_word*)t0)[2],tmp=(C_word)a,a+=3,tmp);
t3=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_40219,a[2]=t2,tmp=(C_word)a,a+=3,tmp);
t4=(C_word)C_a_i_cons(&a,2,C_fix(29696),C_SCHEME_END_OF_LIST);
t5=(C_word)C_a_i_cons(&a,2,C_fix(14080),t4);
t6=(C_word)C_a_i_cons(&a,2,lf[456],t5);
t7=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_40225,a[2]=((C_word)li662),tmp=(C_word)a,a+=3,tmp);
C_trace("ChickenBridge.scm: 380  make-rule");
f_23189(t3,lf[972],C_fix(33792),t6,t7,C_SCHEME_FALSE);}

/* a40224 in k25100 in k25097 in k25094 in k25091 in k25088 in k25085 in k25082 in k24943 in k24940 in k24937 in k24934 in k24878 in k24875 in k24872 in k24869 in k24866 in k24863 in k24860 in k24857 in k23555 in k23486 in k23293 in k23290 in k23185 in k23134 in k11783 in k10718 in k10715 in k7274 in k7271 in k6978 in k6975 in k6971 in k6680 in k6677 in k6674 in k6671 */
static void C_ccall f_40225(C_word c,C_word t0,C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word *a;
if(c!=4) C_bad_argc_2(c,4,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr4,(void*)f_40225,4,t0,t1,t2,t3);}
t4=t1;
((C_proc2)(void*)(*((C_word*)t4+1)))(2,t4,(C_word)C_i_cadr(t2));}

/* k40217 in k25100 in k25097 in k25094 in k25091 in k25088 in k25085 in k25082 in k24943 in k24940 in k24937 in k24934 in k24878 in k24875 in k24872 in k24869 in k24866 in k24863 in k24860 in k24857 in k23555 in k23486 in k23293 in k23290 in k23185 in k23134 in k11783 in k10718 in k10715 in k7274 in k7271 in k6978 in k6975 in k6971 in k6680 in k6677 in k6674 in k6671 */
static void C_ccall f_40219(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 380  hash-table-set!");
t2=C_retrieve(lf[852]);
((C_proc5)C_retrieve_proc(t2))(5,t2,((C_word*)t0)[2],C_retrieve2(lf[424],"*rules*"),C_fix(33792),t1);}

/* k25103 in k25100 in k25097 in k25094 in k25091 in k25088 in k25085 in k25082 in k24943 in k24940 in k24937 in k24934 in k24878 in k24875 in k24872 in k24869 in k24866 in k24863 in k24860 in k24857 in k23555 in k23486 in k23293 in k23290 in k23185 in k23134 in k11783 in k10718 in k10715 in k7274 in k7271 in k6978 in k6975 in k6971 in k6680 in k6677 in k6674 in k6671 */
static void C_ccall f_25105(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word ab[19],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_25105,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_25108,a[2]=((C_word*)t0)[2],tmp=(C_word)a,a+=3,tmp);
t3=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_40191,a[2]=t2,tmp=(C_word)a,a+=3,tmp);
t4=(C_word)C_a_i_cons(&a,2,C_fix(29696),C_SCHEME_END_OF_LIST);
t5=(C_word)C_a_i_cons(&a,2,C_fix(14592),t4);
t6=(C_word)C_a_i_cons(&a,2,lf[456],t5);
t7=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_40199,a[2]=t6,a[3]=t3,tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 380  simple-unit-parser");
f_23945(t7,C_fix(35072));}

/* k40197 in k25103 in k25100 in k25097 in k25094 in k25091 in k25088 in k25085 in k25082 in k24943 in k24940 in k24937 in k24934 in k24878 in k24875 in k24872 in k24869 in k24866 in k24863 in k24860 in k24857 in k23555 in k23486 in k23293 in k23290 in k23185 in k23134 in k11783 in k10718 in k10715 in k7274 in k7271 in k6978 in k6975 in k6971 in k6680 in k6677 in k6674 in k6671 */
static void C_ccall f_40199(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[5],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_40199,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_40203,a[2]=t1,a[3]=((C_word*)t0)[2],a[4]=((C_word*)t0)[3],tmp=(C_word)a,a+=5,tmp);
C_trace("ChickenBridge.scm: 380  simple-unit-emitter");
f_23953(t2,lf[517]);}

/* k40201 in k40197 in k25103 in k25100 in k25097 in k25094 in k25091 in k25088 in k25085 in k25082 in k24943 in k24940 in k24937 in k24934 in k24878 in k24875 in k24872 in k24869 in k24866 in k24863 in k24860 in k24857 in k23555 in k23486 in k23293 in k23290 in k23185 in k23134 in k11783 in k10718 in k10715 in k7274 in k7271 in k6978 in k6975 in k6971 in k6680 in k6677 in k6674 in k6671 */
static void C_ccall f_40203(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 380  make-rule");
f_23189(((C_word*)t0)[4],lf[971],C_fix(35072),((C_word*)t0)[3],((C_word*)t0)[2],t1);}

/* k40189 in k25103 in k25100 in k25097 in k25094 in k25091 in k25088 in k25085 in k25082 in k24943 in k24940 in k24937 in k24934 in k24878 in k24875 in k24872 in k24869 in k24866 in k24863 in k24860 in k24857 in k23555 in k23486 in k23293 in k23290 in k23185 in k23134 in k11783 in k10718 in k10715 in k7274 in k7271 in k6978 in k6975 in k6971 in k6680 in k6677 in k6674 in k6671 */
static void C_ccall f_40191(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 380  hash-table-set!");
t2=C_retrieve(lf[852]);
((C_proc5)C_retrieve_proc(t2))(5,t2,((C_word*)t0)[2],C_retrieve2(lf[424],"*rules*"),C_fix(35072),t1);}

/* k25106 in k25103 in k25100 in k25097 in k25094 in k25091 in k25088 in k25085 in k25082 in k24943 in k24940 in k24937 in k24934 in k24878 in k24875 in k24872 in k24869 in k24866 in k24863 in k24860 in k24857 in k23555 in k23486 in k23293 in k23290 in k23185 in k23134 in k11783 in k10718 in k10715 in k7274 in k7271 in k6978 in k6975 in k6971 in k6680 in k6677 in k6674 in k6671 */
static void C_ccall f_25108(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word ab[19],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_25108,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_25111,a[2]=((C_word*)t0)[2],tmp=(C_word)a,a+=3,tmp);
t3=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_40163,a[2]=t2,tmp=(C_word)a,a+=3,tmp);
t4=(C_word)C_a_i_cons(&a,2,C_fix(29696),C_SCHEME_END_OF_LIST);
t5=(C_word)C_a_i_cons(&a,2,C_fix(13568),t4);
t6=(C_word)C_a_i_cons(&a,2,lf[456],t5);
t7=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_40171,a[2]=t6,a[3]=t3,tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 380  simple-unit-parser");
f_23945(t7,C_fix(35584));}

/* k40169 in k25106 in k25103 in k25100 in k25097 in k25094 in k25091 in k25088 in k25085 in k25082 in k24943 in k24940 in k24937 in k24934 in k24878 in k24875 in k24872 in k24869 in k24866 in k24863 in k24860 in k24857 in k23555 in k23486 in k23293 in k23290 in k23185 in k23134 in k11783 in k10718 in k10715 in k7274 in k7271 in k6978 in k6975 in k6971 in k6680 in k6677 in k6674 in k6671 */
static void C_ccall f_40171(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[5],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_40171,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_40175,a[2]=t1,a[3]=((C_word*)t0)[2],a[4]=((C_word*)t0)[3],tmp=(C_word)a,a+=5,tmp);
C_trace("ChickenBridge.scm: 380  simple-unit-emitter");
f_23953(t2,lf[516]);}

/* k40173 in k40169 in k25106 in k25103 in k25100 in k25097 in k25094 in k25091 in k25088 in k25085 in k25082 in k24943 in k24940 in k24937 in k24934 in k24878 in k24875 in k24872 in k24869 in k24866 in k24863 in k24860 in k24857 in k23555 in k23486 in k23293 in k23290 in k23185 in k23134 in k11783 in k10718 in k10715 in k7274 in k7271 in k6978 in k6975 in k6971 in k6680 in k6677 in k6674 in k6671 */
static void C_ccall f_40175(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 380  make-rule");
f_23189(((C_word*)t0)[4],lf[970],C_fix(35584),((C_word*)t0)[3],((C_word*)t0)[2],t1);}

/* k40161 in k25106 in k25103 in k25100 in k25097 in k25094 in k25091 in k25088 in k25085 in k25082 in k24943 in k24940 in k24937 in k24934 in k24878 in k24875 in k24872 in k24869 in k24866 in k24863 in k24860 in k24857 in k23555 in k23486 in k23293 in k23290 in k23185 in k23134 in k11783 in k10718 in k10715 in k7274 in k7271 in k6978 in k6975 in k6971 in k6680 in k6677 in k6674 in k6671 */
static void C_ccall f_40163(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 380  hash-table-set!");
t2=C_retrieve(lf[852]);
((C_proc5)C_retrieve_proc(t2))(5,t2,((C_word*)t0)[2],C_retrieve2(lf[424],"*rules*"),C_fix(35584),t1);}

/* k25109 in k25106 in k25103 in k25100 in k25097 in k25094 in k25091 in k25088 in k25085 in k25082 in k24943 in k24940 in k24937 in k24934 in k24878 in k24875 in k24872 in k24869 in k24866 in k24863 in k24860 in k24857 in k23555 in k23486 in k23293 in k23290 in k23185 in k23134 in k11783 in k10718 in k10715 in k7274 in k7271 in k6978 in k6975 in k6971 in k6680 in k6677 in k6674 in k6671 */
static void C_ccall f_25111(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word ab[19],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_25111,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_25114,a[2]=((C_word*)t0)[2],tmp=(C_word)a,a+=3,tmp);
t3=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_40135,a[2]=t2,tmp=(C_word)a,a+=3,tmp);
t4=(C_word)C_a_i_cons(&a,2,C_fix(29696),C_SCHEME_END_OF_LIST);
t5=(C_word)C_a_i_cons(&a,2,C_fix(17152),t4);
t6=(C_word)C_a_i_cons(&a,2,lf[456],t5);
t7=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_40143,a[2]=t6,a[3]=t3,tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 380  simple-unit-parser");
f_23945(t7,C_fix(35328));}

/* k40141 in k25109 in k25106 in k25103 in k25100 in k25097 in k25094 in k25091 in k25088 in k25085 in k25082 in k24943 in k24940 in k24937 in k24934 in k24878 in k24875 in k24872 in k24869 in k24866 in k24863 in k24860 in k24857 in k23555 in k23486 in k23293 in k23290 in k23185 in k23134 in k11783 in k10718 in k10715 in k7274 in k7271 in k6978 in k6975 in k6971 in k6680 in k6677 in k6674 in k6671 */
static void C_ccall f_40143(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[5],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_40143,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_40147,a[2]=t1,a[3]=((C_word*)t0)[2],a[4]=((C_word*)t0)[3],tmp=(C_word)a,a+=5,tmp);
C_trace("ChickenBridge.scm: 380  simple-unit-emitter");
f_23953(t2,lf[969]);}

/* k40145 in k40141 in k25109 in k25106 in k25103 in k25100 in k25097 in k25094 in k25091 in k25088 in k25085 in k25082 in k24943 in k24940 in k24937 in k24934 in k24878 in k24875 in k24872 in k24869 in k24866 in k24863 in k24860 in k24857 in k23555 in k23486 in k23293 in k23290 in k23185 in k23134 in k11783 in k10718 in k10715 in k7274 in k7271 in k6978 in k6975 in k6971 in k6680 in k6677 in k6674 in k6671 */
static void C_ccall f_40147(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 380  make-rule");
f_23189(((C_word*)t0)[4],lf[968],C_fix(35328),((C_word*)t0)[3],((C_word*)t0)[2],t1);}

/* k40133 in k25109 in k25106 in k25103 in k25100 in k25097 in k25094 in k25091 in k25088 in k25085 in k25082 in k24943 in k24940 in k24937 in k24934 in k24878 in k24875 in k24872 in k24869 in k24866 in k24863 in k24860 in k24857 in k23555 in k23486 in k23293 in k23290 in k23185 in k23134 in k11783 in k10718 in k10715 in k7274 in k7271 in k6978 in k6975 in k6971 in k6680 in k6677 in k6674 in k6671 */
static void C_ccall f_40135(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 380  hash-table-set!");
t2=C_retrieve(lf[852]);
((C_proc5)C_retrieve_proc(t2))(5,t2,((C_word*)t0)[2],C_retrieve2(lf[424],"*rules*"),C_fix(35328),t1);}

/* k25112 in k25109 in k25106 in k25103 in k25100 in k25097 in k25094 in k25091 in k25088 in k25085 in k25082 in k24943 in k24940 in k24937 in k24934 in k24878 in k24875 in k24872 in k24869 in k24866 in k24863 in k24860 in k24857 in k23555 in k23486 in k23293 in k23290 in k23185 in k23134 in k11783 in k10718 in k10715 in k7274 in k7271 in k6978 in k6975 in k6971 in k6680 in k6677 in k6674 in k6671 */
static void C_ccall f_25114(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word ab[19],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_25114,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_25117,a[2]=((C_word*)t0)[2],tmp=(C_word)a,a+=3,tmp);
t3=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_40107,a[2]=t2,tmp=(C_word)a,a+=3,tmp);
t4=(C_word)C_a_i_cons(&a,2,C_fix(29696),C_SCHEME_END_OF_LIST);
t5=(C_word)C_a_i_cons(&a,2,C_fix(18432),t4);
t6=(C_word)C_a_i_cons(&a,2,lf[456],t5);
t7=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_40115,a[2]=t6,a[3]=t3,tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 380  simple-unit-parser");
f_23945(t7,C_fix(34816));}

/* k40113 in k25112 in k25109 in k25106 in k25103 in k25100 in k25097 in k25094 in k25091 in k25088 in k25085 in k25082 in k24943 in k24940 in k24937 in k24934 in k24878 in k24875 in k24872 in k24869 in k24866 in k24863 in k24860 in k24857 in k23555 in k23486 in k23293 in k23290 in k23185 in k23134 in k11783 in k10718 in k10715 in k7274 in k7271 in k6978 in k6975 in k6971 in k6680 in k6677 in k6674 in k6671 */
static void C_ccall f_40115(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[5],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_40115,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_40119,a[2]=t1,a[3]=((C_word*)t0)[2],a[4]=((C_word*)t0)[3],tmp=(C_word)a,a+=5,tmp);
C_trace("ChickenBridge.scm: 380  simple-unit-emitter");
f_23953(t2,lf[529]);}

/* k40117 in k40113 in k25112 in k25109 in k25106 in k25103 in k25100 in k25097 in k25094 in k25091 in k25088 in k25085 in k25082 in k24943 in k24940 in k24937 in k24934 in k24878 in k24875 in k24872 in k24869 in k24866 in k24863 in k24860 in k24857 in k23555 in k23486 in k23293 in k23290 in k23185 in k23134 in k11783 in k10718 in k10715 in k7274 in k7271 in k6978 in k6975 in k6971 in k6680 in k6677 in k6674 in k6671 */
static void C_ccall f_40119(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 380  make-rule");
f_23189(((C_word*)t0)[4],lf[967],C_fix(34816),((C_word*)t0)[3],((C_word*)t0)[2],t1);}

/* k40105 in k25112 in k25109 in k25106 in k25103 in k25100 in k25097 in k25094 in k25091 in k25088 in k25085 in k25082 in k24943 in k24940 in k24937 in k24934 in k24878 in k24875 in k24872 in k24869 in k24866 in k24863 in k24860 in k24857 in k23555 in k23486 in k23293 in k23290 in k23185 in k23134 in k11783 in k10718 in k10715 in k7274 in k7271 in k6978 in k6975 in k6971 in k6680 in k6677 in k6674 in k6671 */
static void C_ccall f_40107(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 380  hash-table-set!");
t2=C_retrieve(lf[852]);
((C_proc5)C_retrieve_proc(t2))(5,t2,((C_word*)t0)[2],C_retrieve2(lf[424],"*rules*"),C_fix(34816),t1);}

/* k25115 in k25112 in k25109 in k25106 in k25103 in k25100 in k25097 in k25094 in k25091 in k25088 in k25085 in k25082 in k24943 in k24940 in k24937 in k24934 in k24878 in k24875 in k24872 in k24869 in k24866 in k24863 in k24860 in k24857 in k23555 in k23486 in k23293 in k23290 in k23185 in k23134 in k11783 in k10718 in k10715 in k7274 in k7271 in k6978 in k6975 in k6971 in k6680 in k6677 in k6674 in k6671 */
static void C_ccall f_25117(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word t14;
C_word t15;
C_word t16;
C_word t17;
C_word t18;
C_word t19;
C_word t20;
C_word t21;
C_word t22;
C_word t23;
C_word t24;
C_word t25;
C_word ab[69],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_25117,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_25120,a[2]=((C_word*)t0)[2],tmp=(C_word)a,a+=3,tmp);
t3=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_39970,a[2]=t2,tmp=(C_word)a,a+=3,tmp);
t4=(C_word)C_a_i_cons(&a,2,C_fix(29696),C_SCHEME_END_OF_LIST);
t5=(C_word)C_a_i_cons(&a,2,C_fix(6144),t4);
t6=(C_word)C_a_i_cons(&a,2,lf[456],t5);
t7=(C_word)C_a_i_cons(&a,2,C_fix(29696),C_SCHEME_END_OF_LIST);
t8=(C_word)C_a_i_cons(&a,2,t6,t7);
t9=(C_word)C_a_i_cons(&a,2,lf[457],t8);
t10=(C_word)C_a_i_cons(&a,2,C_fix(29696),C_SCHEME_END_OF_LIST);
t11=(C_word)C_a_i_cons(&a,2,C_fix(6144),t10);
t12=(C_word)C_a_i_cons(&a,2,lf[456],t11);
t13=(C_word)C_a_i_cons(&a,2,C_fix(29696),C_SCHEME_END_OF_LIST);
t14=(C_word)C_a_i_cons(&a,2,t12,t13);
t15=(C_word)C_a_i_cons(&a,2,lf[457],t14);
t16=(C_word)C_a_i_cons(&a,2,t15,C_SCHEME_END_OF_LIST);
t17=(C_word)C_a_i_cons(&a,2,C_fix(256),t16);
t18=(C_word)C_a_i_cons(&a,2,lf[129],t17);
t19=(C_word)C_a_i_cons(&a,2,t18,C_SCHEME_END_OF_LIST);
t20=(C_word)C_a_i_cons(&a,2,t9,t19);
t21=(C_word)C_a_i_cons(&a,2,C_fix(15616),t20);
t22=(C_word)C_a_i_cons(&a,2,lf[456],t21);
t23=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_39976,a[2]=((C_word)li660),tmp=(C_word)a,a+=3,tmp);
t24=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_40006,a[2]=((C_word)li661),tmp=(C_word)a,a+=3,tmp);
C_trace("ChickenBridge.scm: 380  make-rule");
f_23189(t3,lf[966],C_fix(36096),t22,t23,t24);}

/* a40005 in k25115 in k25112 in k25109 in k25106 in k25103 in k25100 in k25097 in k25094 in k25091 in k25088 in k25085 in k25082 in k24943 in k24940 in k24937 in k24934 in k24878 in k24875 in k24872 in k24869 in k24866 in k24863 in k24860 in k24857 in k23555 in k23486 in k23293 in k23290 in k23185 in k23134 in k11783 in k10718 in k10715 in k7274 in k7271 in k6978 in k6975 in k6971 in k6680 in k6677 in k6674 in k6671 */
static void C_ccall f_40006(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4){
C_word tmp;
C_word t5;
C_word *a;
if(c!=5) C_bad_argc_2(c,5,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr5,(void*)f_40006,5,t0,t1,t2,t3,t4);}
t5=t1;
((C_proc2)(void*)(*((C_word*)t5+1)))(2,t5,lf[965]);}

/* a39975 in k25115 in k25112 in k25109 in k25106 in k25103 in k25100 in k25097 in k25094 in k25091 in k25088 in k25085 in k25082 in k24943 in k24940 in k24937 in k24934 in k24878 in k24875 in k24872 in k24869 in k24866 in k24863 in k24860 in k24857 in k23555 in k23486 in k23293 in k23290 in k23185 in k23134 in k11783 in k10718 in k10715 in k7274 in k7271 in k6978 in k6975 in k6971 in k6680 in k6677 in k6674 in k6671 */
static void C_ccall f_39976(C_word c,C_word t0,C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word ab[5],*a=ab;
if(c!=4) C_bad_argc_2(c,4,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr4,(void*)f_39976,4,t0,t1,t2,t3);}
t4=(C_word)C_i_car(t2);
t5=(C_word)C_i_cadr(t2);
t6=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_40000,a[2]=t1,a[3]=t4,a[4]=t5,tmp=(C_word)a,a+=5,tmp);
t7=(C_word)C_i_caddr(t2);
C_trace("ChickenBridge.scm: 380  remove-token-type");
f_24882(t6,t7,C_fix(256));}

/* k39998 in a39975 in k25115 in k25112 in k25109 in k25106 in k25103 in k25100 in k25097 in k25094 in k25091 in k25088 in k25085 in k25082 in k24943 in k24940 in k24937 in k24934 in k24878 in k24875 in k24872 in k24869 in k24866 in k24863 in k24860 in k24857 in k23555 in k23486 in k23293 in k23290 in k23185 in k23134 in k11783 in k10718 in k10715 in k7274 in k7271 in k6978 in k6975 in k6971 in k6680 in k6677 in k6674 in k6671 */
static void C_ccall f_40000(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[6],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_40000,2,t0,t1);}
t2=(C_word)C_a_i_cons(&a,2,((C_word*)t0)[4],t1);
t3=(C_word)C_a_i_cons(&a,2,((C_word*)t0)[3],t2);
C_trace("ChickenBridge.scm: 380  make-parse-unit");
f_23490(((C_word*)t0)[2],C_fix(36096),t3,C_SCHEME_FALSE);}

/* k39968 in k25115 in k25112 in k25109 in k25106 in k25103 in k25100 in k25097 in k25094 in k25091 in k25088 in k25085 in k25082 in k24943 in k24940 in k24937 in k24934 in k24878 in k24875 in k24872 in k24869 in k24866 in k24863 in k24860 in k24857 in k23555 in k23486 in k23293 in k23290 in k23185 in k23134 in k11783 in k10718 in k10715 in k7274 in k7271 in k6978 in k6975 in k6971 in k6680 in k6677 in k6674 in k6671 */
static void C_ccall f_39970(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 380  hash-table-set!");
t2=C_retrieve(lf[852]);
((C_proc5)C_retrieve_proc(t2))(5,t2,((C_word*)t0)[2],C_retrieve2(lf[424],"*rules*"),C_fix(36096),t1);}

/* k25118 in k25115 in k25112 in k25109 in k25106 in k25103 in k25100 in k25097 in k25094 in k25091 in k25088 in k25085 in k25082 in k24943 in k24940 in k24937 in k24934 in k24878 in k24875 in k24872 in k24869 in k24866 in k24863 in k24860 in k24857 in k23555 in k23486 in k23293 in k23290 in k23185 in k23134 in k11783 in k10718 in k10715 in k7274 in k7271 in k6978 in k6975 in k6971 in k6680 in k6677 in k6674 in k6671 */
static void C_ccall f_25120(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word ab[19],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_25120,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_25123,a[2]=((C_word*)t0)[2],tmp=(C_word)a,a+=3,tmp);
t3=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_39912,a[2]=t2,tmp=(C_word)a,a+=3,tmp);
t4=(C_word)C_a_i_cons(&a,2,C_fix(29696),C_SCHEME_END_OF_LIST);
t5=(C_word)C_a_i_cons(&a,2,C_fix(19712),t4);
t6=(C_word)C_a_i_cons(&a,2,lf[456],t5);
t7=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_39920,a[2]=t6,a[3]=t3,tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 380  simple-unit-parser");
f_23945(t7,C_fix(31744));}

/* k39918 in k25118 in k25115 in k25112 in k25109 in k25106 in k25103 in k25100 in k25097 in k25094 in k25091 in k25088 in k25085 in k25082 in k24943 in k24940 in k24937 in k24934 in k24878 in k24875 in k24872 in k24869 in k24866 in k24863 in k24860 in k24857 in k23555 in k23486 in k23293 in k23290 in k23185 in k23134 in k11783 in k10718 in k10715 in k7274 in k7271 in k6978 in k6975 in k6971 in k6680 in k6677 in k6674 in k6671 */
static void C_ccall f_39920(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[3],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_39920,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_39922,a[2]=((C_word)li659),tmp=(C_word)a,a+=3,tmp);
C_trace("ChickenBridge.scm: 380  make-rule");
f_23189(((C_word*)t0)[3],lf[964],C_fix(31744),((C_word*)t0)[2],t1,t2);}

/* a39921 in k39918 in k25118 in k25115 in k25112 in k25109 in k25106 in k25103 in k25100 in k25097 in k25094 in k25091 in k25088 in k25085 in k25082 in k24943 in k24940 in k24937 in k24934 in k24878 in k24875 in k24872 in k24869 in k24866 in k24863 in k24860 in k24857 in k23555 in k23486 in k23293 in k23290 in k23185 in k23134 in k11783 in k10718 in k10715 in k7274 in k7271 in k6978 in k6975 in k6971 in k6680 in k6677 in k6674 in k6671 */
static void C_ccall f_39922(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4){
C_word tmp;
C_word t5;
C_word t6;
C_word ab[5],*a=ab;
if(c!=5) C_bad_argc_2(c,5,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr5,(void*)f_39922,5,t0,t1,t2,t3,t4);}
t5=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_39926,a[2]=t4,a[3]=t3,a[4]=t1,tmp=(C_word)a,a+=5,tmp);
C_trace("ChickenBridge.scm: 380  parse-unit-parsed");
f_23529(t5,t2);}

/* k39924 in a39921 in k39918 in k25118 in k25115 in k25112 in k25109 in k25106 in k25103 in k25100 in k25097 in k25094 in k25091 in k25088 in k25085 in k25082 in k24943 in k24940 in k24937 in k24934 in k24878 in k24875 in k24872 in k24869 in k24866 in k24863 in k24860 in k24857 in k23555 in k23486 in k23293 in k23290 in k23185 in k23134 in k11783 in k10718 in k10715 in k7274 in k7271 in k6978 in k6975 in k6971 in k6680 in k6677 in k6674 in k6671 */
static void C_ccall f_39926(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[11],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_39926,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_39929,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=t1,a[5]=((C_word*)t0)[4],tmp=(C_word)a,a+=6,tmp);
t3=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_39954,a[2]=t1,a[3]=((C_word*)t0)[2],a[4]=t2,tmp=(C_word)a,a+=5,tmp);
C_trace("ChickenBridge.scm: 380  get-emit-info");
f_23607(t3,lf[945],((C_word*)t0)[3]);}

/* k39952 in k39924 in a39921 in k39918 in k25118 in k25115 in k25112 in k25109 in k25106 in k25103 in k25100 in k25097 in k25094 in k25091 in k25088 in k25085 in k25082 in k24943 in k24940 in k24937 in k24934 in k24878 in k24875 in k24872 in k24869 in k24866 in k24863 in k24860 in k24857 in k23555 in k23486 in k23293 in k23290 in k23185 in k23134 in k11783 in k10718 in k10715 in k7274 in k7271 in k6978 in k6975 in k6971 in k6680 in k6677 in k6674 in k6671 */
static void C_ccall f_39954(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_39954,2,t0,t1);}
if(C_truep(t1)){
t2=((C_word*)t0)[4];
f_39929(2,t2,C_SCHEME_UNDEFINED);}
else{
t2=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_39942,a[2]=((C_word*)t0)[4],a[3]=((C_word*)t0)[3],tmp=(C_word)a,a+=4,tmp);
t3=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_39946,a[2]=t2,tmp=(C_word)a,a+=3,tmp);
t4=(C_word)C_i_car(((C_word*)t0)[2]);
C_trace("ChickenBridge.scm: 380  parse-unit-position");
f_23547(t3,t4);}}

/* k39944 in k39952 in k39924 in a39921 in k39918 in k25118 in k25115 in k25112 in k25109 in k25106 in k25103 in k25100 in k25097 in k25094 in k25091 in k25088 in k25085 in k25082 in k24943 in k24940 in k24937 in k24934 in k24878 in k24875 in k24872 in k24869 in k24866 in k24863 in k24860 in k24857 in k23555 in k23486 in k23293 in k23290 in k23185 in k23134 in k11783 in k10718 in k10715 in k7274 in k7271 in k6978 in k6975 in k6971 in k6680 in k6677 in k6674 in k6671 */
static void C_ccall f_39946(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 380  make-parse-error");
f_23439(((C_word*)t0)[2],lf[963],t1);}

/* k39940 in k39952 in k39924 in a39921 in k39918 in k25118 in k25115 in k25112 in k25109 in k25106 in k25103 in k25100 in k25097 in k25094 in k25091 in k25088 in k25085 in k25082 in k24943 in k24940 in k24937 in k24934 in k24878 in k24875 in k24872 in k24869 in k24866 in k24863 in k24860 in k24857 in k23555 in k23486 in k23293 in k23290 in k23185 in k23134 in k11783 in k10718 in k10715 in k7274 in k7271 in k6978 in k6975 in k6971 in k6680 in k6677 in k6674 in k6671 */
static void C_ccall f_39942(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 380  errf");
t2=((C_word*)t0)[3];
((C_proc3)C_retrieve_proc(t2))(3,t2,((C_word*)t0)[2],t1);}

/* k39927 in k39924 in a39921 in k39918 in k25118 in k25115 in k25112 in k25109 in k25106 in k25103 in k25100 in k25097 in k25094 in k25091 in k25088 in k25085 in k25082 in k24943 in k24940 in k24937 in k24934 in k24878 in k24875 in k24872 in k24869 in k24866 in k24863 in k24860 in k24857 in k23555 in k23486 in k23293 in k23290 in k23185 in k23134 in k11783 in k10718 in k10715 in k7274 in k7271 in k6978 in k6975 in k6971 in k6680 in k6677 in k6674 in k6671 */
static void C_ccall f_39929(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 380  emit");
f_23704(((C_word*)t0)[5],((C_word*)t0)[4],((C_word*)t0)[3],((C_word*)t0)[2]);}

/* k39910 in k25118 in k25115 in k25112 in k25109 in k25106 in k25103 in k25100 in k25097 in k25094 in k25091 in k25088 in k25085 in k25082 in k24943 in k24940 in k24937 in k24934 in k24878 in k24875 in k24872 in k24869 in k24866 in k24863 in k24860 in k24857 in k23555 in k23486 in k23293 in k23290 in k23185 in k23134 in k11783 in k10718 in k10715 in k7274 in k7271 in k6978 in k6975 in k6971 in k6680 in k6677 in k6674 in k6671 */
static void C_ccall f_39912(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 380  hash-table-set!");
t2=C_retrieve(lf[852]);
((C_proc5)C_retrieve_proc(t2))(5,t2,((C_word*)t0)[2],C_retrieve2(lf[424],"*rules*"),C_fix(31744),t1);}

/* k25121 in k25118 in k25115 in k25112 in k25109 in k25106 in k25103 in k25100 in k25097 in k25094 in k25091 in k25088 in k25085 in k25082 in k24943 in k24940 in k24937 in k24934 in k24878 in k24875 in k24872 in k24869 in k24866 in k24863 in k24860 in k24857 in k23555 in k23486 in k23293 in k23290 in k23185 in k23134 in k11783 in k10718 in k10715 in k7274 in k7271 in k6978 in k6975 in k6971 in k6680 in k6677 in k6674 in k6671 */
static void C_ccall f_25123(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word ab[19],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_25123,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_25126,a[2]=((C_word*)t0)[2],tmp=(C_word)a,a+=3,tmp);
t3=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_39851,a[2]=t2,tmp=(C_word)a,a+=3,tmp);
t4=(C_word)C_a_i_cons(&a,2,C_fix(29696),C_SCHEME_END_OF_LIST);
t5=(C_word)C_a_i_cons(&a,2,C_fix(18688),t4);
t6=(C_word)C_a_i_cons(&a,2,lf[456],t5);
t7=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_39859,a[2]=t6,a[3]=t3,tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 380  simple-unit-parser");
f_23945(t7,C_fix(31488));}

/* k39857 in k25121 in k25118 in k25115 in k25112 in k25109 in k25106 in k25103 in k25100 in k25097 in k25094 in k25091 in k25088 in k25085 in k25082 in k24943 in k24940 in k24937 in k24934 in k24878 in k24875 in k24872 in k24869 in k24866 in k24863 in k24860 in k24857 in k23555 in k23486 in k23293 in k23290 in k23185 in k23134 in k11783 in k10718 in k10715 in k7274 in k7271 in k6978 in k6975 in k6971 in k6680 in k6677 in k6674 in k6671 */
static void C_ccall f_39859(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[3],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_39859,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_39861,a[2]=((C_word)li658),tmp=(C_word)a,a+=3,tmp);
C_trace("ChickenBridge.scm: 380  make-rule");
f_23189(((C_word*)t0)[3],lf[962],C_fix(31488),((C_word*)t0)[2],t1,t2);}

/* a39860 in k39857 in k25121 in k25118 in k25115 in k25112 in k25109 in k25106 in k25103 in k25100 in k25097 in k25094 in k25091 in k25088 in k25085 in k25082 in k24943 in k24940 in k24937 in k24934 in k24878 in k24875 in k24872 in k24869 in k24866 in k24863 in k24860 in k24857 in k23555 in k23486 in k23293 in k23290 in k23185 in k23134 in k11783 in k10718 in k10715 in k7274 in k7271 in k6978 in k6975 in k6971 in k6680 in k6677 in k6674 in k6671 */
static void C_ccall f_39861(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4){
C_word tmp;
C_word t5;
C_word t6;
C_word ab[5],*a=ab;
if(c!=5) C_bad_argc_2(c,5,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr5,(void*)f_39861,5,t0,t1,t2,t3,t4);}
t5=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_39865,a[2]=t4,a[3]=t3,a[4]=t1,tmp=(C_word)a,a+=5,tmp);
C_trace("ChickenBridge.scm: 380  parse-unit-parsed");
f_23529(t5,t2);}

/* k39863 in a39860 in k39857 in k25121 in k25118 in k25115 in k25112 in k25109 in k25106 in k25103 in k25100 in k25097 in k25094 in k25091 in k25088 in k25085 in k25082 in k24943 in k24940 in k24937 in k24934 in k24878 in k24875 in k24872 in k24869 in k24866 in k24863 in k24860 in k24857 in k23555 in k23486 in k23293 in k23290 in k23185 in k23134 in k11783 in k10718 in k10715 in k7274 in k7271 in k6978 in k6975 in k6971 in k6680 in k6677 in k6674 in k6671 */
static void C_ccall f_39865(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[11],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_39865,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_39868,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=t1,a[5]=((C_word*)t0)[4],tmp=(C_word)a,a+=6,tmp);
t3=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_39896,a[2]=t1,a[3]=((C_word*)t0)[2],a[4]=t2,tmp=(C_word)a,a+=5,tmp);
C_trace("ChickenBridge.scm: 380  get-emit-info");
f_23607(t3,lf[930],((C_word*)t0)[3]);}

/* k39894 in k39863 in a39860 in k39857 in k25121 in k25118 in k25115 in k25112 in k25109 in k25106 in k25103 in k25100 in k25097 in k25094 in k25091 in k25088 in k25085 in k25082 in k24943 in k24940 in k24937 in k24934 in k24878 in k24875 in k24872 in k24869 in k24866 in k24863 in k24860 in k24857 in k23555 in k23486 in k23293 in k23290 in k23185 in k23134 in k11783 in k10718 in k10715 in k7274 in k7271 in k6978 in k6975 in k6971 in k6680 in k6677 in k6674 in k6671 */
static void C_ccall f_39896(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_39896,2,t0,t1);}
if(C_truep(t1)){
t2=((C_word*)t0)[4];
f_39868(2,t2,C_SCHEME_UNDEFINED);}
else{
t2=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_39884,a[2]=((C_word*)t0)[4],a[3]=((C_word*)t0)[3],tmp=(C_word)a,a+=4,tmp);
t3=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_39888,a[2]=t2,tmp=(C_word)a,a+=3,tmp);
t4=(C_word)C_i_car(((C_word*)t0)[2]);
C_trace("ChickenBridge.scm: 380  parse-unit-position");
f_23547(t3,t4);}}

/* k39886 in k39894 in k39863 in a39860 in k39857 in k25121 in k25118 in k25115 in k25112 in k25109 in k25106 in k25103 in k25100 in k25097 in k25094 in k25091 in k25088 in k25085 in k25082 in k24943 in k24940 in k24937 in k24934 in k24878 in k24875 in k24872 in k24869 in k24866 in k24863 in k24860 in k24857 in k23555 in k23486 in k23293 in k23290 in k23185 in k23134 in k11783 in k10718 in k10715 in k7274 in k7271 in k6978 in k6975 in k6971 in k6680 in k6677 in k6674 in k6671 */
static void C_ccall f_39888(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 380  make-parse-error");
f_23439(((C_word*)t0)[2],lf[961],t1);}

/* k39882 in k39894 in k39863 in a39860 in k39857 in k25121 in k25118 in k25115 in k25112 in k25109 in k25106 in k25103 in k25100 in k25097 in k25094 in k25091 in k25088 in k25085 in k25082 in k24943 in k24940 in k24937 in k24934 in k24878 in k24875 in k24872 in k24869 in k24866 in k24863 in k24860 in k24857 in k23555 in k23486 in k23293 in k23290 in k23185 in k23134 in k11783 in k10718 in k10715 in k7274 in k7271 in k6978 in k6975 in k6971 in k6680 in k6677 in k6674 in k6671 */
static void C_ccall f_39884(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 380  errf");
t2=((C_word*)t0)[3];
((C_proc3)C_retrieve_proc(t2))(3,t2,((C_word*)t0)[2],t1);}

/* k39866 in k39863 in a39860 in k39857 in k25121 in k25118 in k25115 in k25112 in k25109 in k25106 in k25103 in k25100 in k25097 in k25094 in k25091 in k25088 in k25085 in k25082 in k24943 in k24940 in k24937 in k24934 in k24878 in k24875 in k24872 in k24869 in k24866 in k24863 in k24860 in k24857 in k23555 in k23486 in k23293 in k23290 in k23185 in k23134 in k11783 in k10718 in k10715 in k7274 in k7271 in k6978 in k6975 in k6971 in k6680 in k6677 in k6674 in k6671 */
static void C_ccall f_39868(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[6],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_39868,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_39871,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],tmp=(C_word)a,a+=6,tmp);
C_trace("ChickenBridge.scm: 380  set-emit-info!");
f_23686(t2,lf[930],lf[929],((C_word*)t0)[3]);}

/* k39869 in k39866 in k39863 in a39860 in k39857 in k25121 in k25118 in k25115 in k25112 in k25109 in k25106 in k25103 in k25100 in k25097 in k25094 in k25091 in k25088 in k25085 in k25082 in k24943 in k24940 in k24937 in k24934 in k24878 in k24875 in k24872 in k24869 in k24866 in k24863 in k24860 in k24857 in k23555 in k23486 in k23293 in k23290 in k23185 in k23134 in k11783 in k10718 in k10715 in k7274 in k7271 in k6978 in k6975 in k6971 in k6680 in k6677 in k6674 in k6671 */
static void C_ccall f_39871(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 380  emit");
f_23704(((C_word*)t0)[5],((C_word*)t0)[4],((C_word*)t0)[3],((C_word*)t0)[2]);}

/* k39849 in k25121 in k25118 in k25115 in k25112 in k25109 in k25106 in k25103 in k25100 in k25097 in k25094 in k25091 in k25088 in k25085 in k25082 in k24943 in k24940 in k24937 in k24934 in k24878 in k24875 in k24872 in k24869 in k24866 in k24863 in k24860 in k24857 in k23555 in k23486 in k23293 in k23290 in k23185 in k23134 in k11783 in k10718 in k10715 in k7274 in k7271 in k6978 in k6975 in k6971 in k6680 in k6677 in k6674 in k6671 */
static void C_ccall f_39851(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 380  hash-table-set!");
t2=C_retrieve(lf[852]);
((C_proc5)C_retrieve_proc(t2))(5,t2,((C_word*)t0)[2],C_retrieve2(lf[424],"*rules*"),C_fix(31488),t1);}

/* k25124 in k25121 in k25118 in k25115 in k25112 in k25109 in k25106 in k25103 in k25100 in k25097 in k25094 in k25091 in k25088 in k25085 in k25082 in k24943 in k24940 in k24937 in k24934 in k24878 in k24875 in k24872 in k24869 in k24866 in k24863 in k24860 in k24857 in k23555 in k23486 in k23293 in k23290 in k23185 in k23134 in k11783 in k10718 in k10715 in k7274 in k7271 in k6978 in k6975 in k6971 in k6680 in k6677 in k6674 in k6671 */
static void C_ccall f_25126(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word ab[33],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_25126,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_25129,a[2]=((C_word*)t0)[2],tmp=(C_word)a,a+=3,tmp);
t3=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_39760,a[2]=t2,tmp=(C_word)a,a+=3,tmp);
t4=(C_word)C_a_i_cons(&a,2,C_fix(29696),C_SCHEME_END_OF_LIST);
t5=(C_word)C_a_i_cons(&a,2,C_fix(10756),t4);
t6=(C_word)C_a_i_cons(&a,2,C_fix(25088),t5);
t7=(C_word)C_a_i_cons(&a,2,lf[456],t6);
t8=(C_word)C_a_i_cons(&a,2,C_fix(25088),C_SCHEME_END_OF_LIST);
t9=(C_word)C_a_i_cons(&a,2,t7,t8);
t10=(C_word)C_a_i_cons(&a,2,lf[457],t9);
t11=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_39766,a[2]=((C_word)li655),tmp=(C_word)a,a+=3,tmp);
t12=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_39801,a[2]=((C_word)li657),tmp=(C_word)a,a+=3,tmp);
C_trace("ChickenBridge.scm: 380  make-rule");
f_23189(t3,lf[960],C_fix(30208),t10,t11,t12);}

/* a39800 in k25124 in k25121 in k25118 in k25115 in k25112 in k25109 in k25106 in k25103 in k25100 in k25097 in k25094 in k25091 in k25088 in k25085 in k25082 in k24943 in k24940 in k24937 in k24934 in k24878 in k24875 in k24872 in k24869 in k24866 in k24863 in k24860 in k24857 in k23555 in k23486 in k23293 in k23290 in k23185 in k23134 in k11783 in k10718 in k10715 in k7274 in k7271 in k6978 in k6975 in k6971 in k6680 in k6677 in k6674 in k6671 */
static void C_ccall f_39801(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4){
C_word tmp;
C_word t5;
C_word t6;
C_word t7;
C_word ab[9],*a=ab;
if(c!=5) C_bad_argc_2(c,5,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr5,(void*)f_39801,5,t0,t1,t2,t3,t4);}
t5=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_39807,a[2]=t4,a[3]=t3,a[4]=((C_word)li656),tmp=(C_word)a,a+=5,tmp);
t6=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_39815,a[2]=t5,a[3]=t1,tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 380  parse-unit-parsed");
f_23529(t6,t2);}

/* k39813 in a39800 in k25124 in k25121 in k25118 in k25115 in k25112 in k25109 in k25106 in k25103 in k25100 in k25097 in k25094 in k25091 in k25088 in k25085 in k25082 in k24943 in k24940 in k24937 in k24934 in k24878 in k24875 in k24872 in k24869 in k24866 in k24863 in k24860 in k24857 in k23555 in k23486 in k23293 in k23290 in k23185 in k23134 in k11783 in k10718 in k10715 in k7274 in k7271 in k6978 in k6975 in k6971 in k6680 in k6677 in k6674 in k6671 */
static void C_ccall f_39815(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("map");
t2=*((C_word*)lf[17]+1);
((C_proc4)(void*)(*((C_word*)t2+1)))(4,t2,((C_word*)t0)[3],((C_word*)t0)[2],t1);}

/* a39806 in a39800 in k25124 in k25121 in k25118 in k25115 in k25112 in k25109 in k25106 in k25103 in k25100 in k25097 in k25094 in k25091 in k25088 in k25085 in k25082 in k24943 in k24940 in k24937 in k24934 in k24878 in k24875 in k24872 in k24869 in k24866 in k24863 in k24860 in k24857 in k23555 in k23486 in k23293 in k23290 in k23185 in k23134 in k11783 in k10718 in k10715 in k7274 in k7271 in k6978 in k6975 in k6971 in k6680 in k6677 in k6674 in k6671 */
static void C_ccall f_39807(C_word c,C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word *a;
if(c!=3) C_bad_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr3,(void*)f_39807,3,t0,t1,t2);}
C_trace("ChickenBridge.scm: 380  emit");
f_23704(t1,t2,((C_word*)t0)[3],((C_word*)t0)[2]);}

/* a39765 in k25124 in k25121 in k25118 in k25115 in k25112 in k25109 in k25106 in k25103 in k25100 in k25097 in k25094 in k25091 in k25088 in k25085 in k25082 in k24943 in k24940 in k24937 in k24934 in k24878 in k24875 in k24872 in k24869 in k24866 in k24863 in k24860 in k24857 in k23555 in k23486 in k23293 in k23290 in k23185 in k23134 in k11783 in k10718 in k10715 in k7274 in k7271 in k6978 in k6975 in k6971 in k6680 in k6677 in k6674 in k6671 */
static void C_ccall f_39766(C_word c,C_word t0,C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word ab[10],*a=ab;
if(c!=4) C_bad_argc_2(c,4,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr4,(void*)f_39766,4,t0,t1,t2,t3);}
if(C_truep((C_word)C_i_pairp(t2))){
t4=(C_word)C_i_car(t2);
t5=(C_word)C_i_caddr(t2);
t6=(C_word)C_a_i_list(&a,2,t4,t5);
C_trace("ChickenBridge.scm: 380  make-parse-unit");
f_23490(t1,C_fix(30208),t6,C_SCHEME_FALSE);}
else{
t4=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_39799,a[2]=t1,a[3]=t2,tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 380  make-parse-unit");
f_23490(t4,C_fix(4608),lf[959],C_SCHEME_FALSE);}}

/* k39797 in a39765 in k25124 in k25121 in k25118 in k25115 in k25112 in k25109 in k25106 in k25103 in k25100 in k25097 in k25094 in k25091 in k25088 in k25085 in k25082 in k24943 in k24940 in k24937 in k24934 in k24878 in k24875 in k24872 in k24869 in k24866 in k24863 in k24860 in k24857 in k23555 in k23486 in k23293 in k23290 in k23185 in k23134 in k11783 in k10718 in k10715 in k7274 in k7271 in k6978 in k6975 in k6971 in k6680 in k6677 in k6674 in k6671 */
static void C_ccall f_39799(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[6],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_39799,2,t0,t1);}
t2=(C_word)C_a_i_list(&a,2,((C_word*)t0)[3],t1);
C_trace("ChickenBridge.scm: 380  make-parse-unit");
f_23490(((C_word*)t0)[2],C_fix(30208),t2,C_SCHEME_FALSE);}

/* k39758 in k25124 in k25121 in k25118 in k25115 in k25112 in k25109 in k25106 in k25103 in k25100 in k25097 in k25094 in k25091 in k25088 in k25085 in k25082 in k24943 in k24940 in k24937 in k24934 in k24878 in k24875 in k24872 in k24869 in k24866 in k24863 in k24860 in k24857 in k23555 in k23486 in k23293 in k23290 in k23185 in k23134 in k11783 in k10718 in k10715 in k7274 in k7271 in k6978 in k6975 in k6971 in k6680 in k6677 in k6674 in k6671 */
static void C_ccall f_39760(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 380  hash-table-set!");
t2=C_retrieve(lf[852]);
((C_proc5)C_retrieve_proc(t2))(5,t2,((C_word*)t0)[2],C_retrieve2(lf[424],"*rules*"),C_fix(30208),t1);}

/* k25127 in k25124 in k25121 in k25118 in k25115 in k25112 in k25109 in k25106 in k25103 in k25100 in k25097 in k25094 in k25091 in k25088 in k25085 in k25082 in k24943 in k24940 in k24937 in k24934 in k24878 in k24875 in k24872 in k24869 in k24866 in k24863 in k24860 in k24857 in k23555 in k23486 in k23293 in k23290 in k23185 in k23134 in k11783 in k10718 in k10715 in k7274 in k7271 in k6978 in k6975 in k6971 in k6680 in k6677 in k6674 in k6671 */
static void C_ccall f_25129(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word ab[33],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_25129,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_25132,a[2]=((C_word*)t0)[2],tmp=(C_word)a,a+=3,tmp);
t3=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_39658,a[2]=t2,tmp=(C_word)a,a+=3,tmp);
t4=(C_word)C_a_i_cons(&a,2,C_fix(30208),C_SCHEME_END_OF_LIST);
t5=(C_word)C_a_i_cons(&a,2,C_fix(256),t4);
t6=(C_word)C_a_i_cons(&a,2,lf[129],t5);
t7=(C_word)C_a_i_cons(&a,2,t6,C_SCHEME_END_OF_LIST);
t8=(C_word)C_a_i_cons(&a,2,C_fix(30208),t7);
t9=(C_word)C_a_i_cons(&a,2,C_fix(20480),t8);
t10=(C_word)C_a_i_cons(&a,2,lf[456],t9);
t11=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_39664,a[2]=((C_word)li652),tmp=(C_word)a,a+=3,tmp);
t12=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_39707,a[2]=((C_word)li654),tmp=(C_word)a,a+=3,tmp);
C_trace("ChickenBridge.scm: 380  make-rule");
f_23189(t3,lf[958],C_fix(29952),t10,t11,t12);}

/* a39706 in k25127 in k25124 in k25121 in k25118 in k25115 in k25112 in k25109 in k25106 in k25103 in k25100 in k25097 in k25094 in k25091 in k25088 in k25085 in k25082 in k24943 in k24940 in k24937 in k24934 in k24878 in k24875 in k24872 in k24869 in k24866 in k24863 in k24860 in k24857 in k23555 in k23486 in k23293 in k23290 in k23185 in k23134 in k11783 in k10718 in k10715 in k7274 in k7271 in k6978 in k6975 in k6971 in k6680 in k6677 in k6674 in k6671 */
static void C_ccall f_39707(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4){
C_word tmp;
C_word t5;
C_word t6;
C_word ab[5],*a=ab;
if(c!=5) C_bad_argc_2(c,5,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr5,(void*)f_39707,5,t0,t1,t2,t3,t4);}
t5=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_39711,a[2]=t2,a[3]=t1,a[4]=t4,tmp=(C_word)a,a+=5,tmp);
C_trace("ChickenBridge.scm: 380  add-emit-info");
f_23619(t5,lf[957],C_SCHEME_TRUE,t3);}

/* k39709 in a39706 in k25127 in k25124 in k25121 in k25118 in k25115 in k25112 in k25109 in k25106 in k25103 in k25100 in k25097 in k25094 in k25091 in k25088 in k25085 in k25082 in k24943 in k24940 in k24937 in k24934 in k24878 in k24875 in k24872 in k24869 in k24866 in k24863 in k24860 in k24857 in k23555 in k23486 in k23293 in k23290 in k23185 in k23134 in k11783 in k10718 in k10715 in k7274 in k7271 in k6978 in k6975 in k6971 in k6680 in k6677 in k6674 in k6671 */
static void C_ccall f_39711(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_39711,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_39716,a[2]=((C_word*)t0)[4],a[3]=t1,a[4]=((C_word)li653),tmp=(C_word)a,a+=5,tmp);
t3=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_39724,a[2]=t2,a[3]=((C_word*)t0)[3],tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 380  parse-unit-parsed");
f_23529(t3,((C_word*)t0)[2]);}

/* k39722 in k39709 in a39706 in k25127 in k25124 in k25121 in k25118 in k25115 in k25112 in k25109 in k25106 in k25103 in k25100 in k25097 in k25094 in k25091 in k25088 in k25085 in k25082 in k24943 in k24940 in k24937 in k24934 in k24878 in k24875 in k24872 in k24869 in k24866 in k24863 in k24860 in k24857 in k23555 in k23486 in k23293 in k23290 in k23185 in k23134 in k11783 in k10718 in k10715 in k7274 in k7271 in k6978 in k6975 in k6971 in k6680 in k6677 in k6674 in k6671 */
static void C_ccall f_39724(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("map");
t2=*((C_word*)lf[17]+1);
((C_proc4)(void*)(*((C_word*)t2+1)))(4,t2,((C_word*)t0)[3],((C_word*)t0)[2],t1);}

/* a39715 in k39709 in a39706 in k25127 in k25124 in k25121 in k25118 in k25115 in k25112 in k25109 in k25106 in k25103 in k25100 in k25097 in k25094 in k25091 in k25088 in k25085 in k25082 in k24943 in k24940 in k24937 in k24934 in k24878 in k24875 in k24872 in k24869 in k24866 in k24863 in k24860 in k24857 in k23555 in k23486 in k23293 in k23290 in k23185 in k23134 in k11783 in k10718 in k10715 in k7274 in k7271 in k6978 in k6975 in k6971 in k6680 in k6677 in k6674 in k6671 */
static void C_ccall f_39716(C_word c,C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word *a;
if(c!=3) C_bad_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr3,(void*)f_39716,3,t0,t1,t2);}
C_trace("ChickenBridge.scm: 380  emit");
f_23704(t1,t2,((C_word*)t0)[3],((C_word*)t0)[2]);}

/* a39663 in k25127 in k25124 in k25121 in k25118 in k25115 in k25112 in k25109 in k25106 in k25103 in k25100 in k25097 in k25094 in k25091 in k25088 in k25085 in k25082 in k24943 in k24940 in k24937 in k24934 in k24878 in k24875 in k24872 in k24869 in k24866 in k24863 in k24860 in k24857 in k23555 in k23486 in k23293 in k23290 in k23185 in k23134 in k11783 in k10718 in k10715 in k7274 in k7271 in k6978 in k6975 in k6971 in k6680 in k6677 in k6674 in k6671 */
static void C_ccall f_39664(C_word c,C_word t0,C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word ab[7],*a=ab;
if(c!=4) C_bad_argc_2(c,4,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr4,(void*)f_39664,4,t0,t1,t2,t3);}
if(C_truep((C_word)C_i_caddr(t2))){
t4=(C_word)C_i_cadr(t2);
t5=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_39697,a[2]=t1,a[3]=t4,tmp=(C_word)a,a+=4,tmp);
t6=(C_word)C_i_caddr(t2);
C_trace("ChickenBridge.scm: 380  remove-token-type");
f_24882(t5,t6,C_fix(256));}
else{
t4=(C_word)C_i_cadr(t2);
t5=(C_word)C_a_i_list(&a,1,t4);
C_trace("ChickenBridge.scm: 380  make-parse-unit");
f_23490(t1,C_fix(29952),t5,C_SCHEME_FALSE);}}

/* k39695 in a39663 in k25127 in k25124 in k25121 in k25118 in k25115 in k25112 in k25109 in k25106 in k25103 in k25100 in k25097 in k25094 in k25091 in k25088 in k25085 in k25082 in k24943 in k24940 in k24937 in k24934 in k24878 in k24875 in k24872 in k24869 in k24866 in k24863 in k24860 in k24857 in k23555 in k23486 in k23293 in k23290 in k23185 in k23134 in k11783 in k10718 in k10715 in k7274 in k7271 in k6978 in k6975 in k6971 in k6680 in k6677 in k6674 in k6671 */
static void C_ccall f_39697(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[3],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_39697,2,t0,t1);}
t2=(C_word)C_a_i_cons(&a,2,((C_word*)t0)[3],t1);
C_trace("ChickenBridge.scm: 380  make-parse-unit");
f_23490(((C_word*)t0)[2],C_fix(29952),t2,C_SCHEME_FALSE);}

/* k39656 in k25127 in k25124 in k25121 in k25118 in k25115 in k25112 in k25109 in k25106 in k25103 in k25100 in k25097 in k25094 in k25091 in k25088 in k25085 in k25082 in k24943 in k24940 in k24937 in k24934 in k24878 in k24875 in k24872 in k24869 in k24866 in k24863 in k24860 in k24857 in k23555 in k23486 in k23293 in k23290 in k23185 in k23134 in k11783 in k10718 in k10715 in k7274 in k7271 in k6978 in k6975 in k6971 in k6680 in k6677 in k6674 in k6671 */
static void C_ccall f_39658(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 380  hash-table-set!");
t2=C_retrieve(lf[852]);
((C_proc5)C_retrieve_proc(t2))(5,t2,((C_word*)t0)[2],C_retrieve2(lf[424],"*rules*"),C_fix(29952),t1);}

/* k25130 in k25127 in k25124 in k25121 in k25118 in k25115 in k25112 in k25109 in k25106 in k25103 in k25100 in k25097 in k25094 in k25091 in k25088 in k25085 in k25082 in k24943 in k24940 in k24937 in k24934 in k24878 in k24875 in k24872 in k24869 in k24866 in k24863 in k24860 in k24857 in k23555 in k23486 in k23293 in k23290 in k23185 in k23134 in k11783 in k10718 in k10715 in k7274 in k7271 in k6978 in k6975 in k6971 in k6680 in k6677 in k6674 in k6671 */
static void C_ccall f_25132(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word t14;
C_word t15;
C_word t16;
C_word t17;
C_word t18;
C_word t19;
C_word t20;
C_word t21;
C_word ab[57],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_25132,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_25135,a[2]=((C_word*)t0)[2],tmp=(C_word)a,a+=3,tmp);
t3=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_39572,a[2]=t2,tmp=(C_word)a,a+=3,tmp);
t4=(C_word)C_a_i_cons(&a,2,C_fix(25088),C_SCHEME_END_OF_LIST);
t5=(C_word)C_a_i_cons(&a,2,C_fix(27136),t4);
t6=(C_word)C_a_i_cons(&a,2,lf[457],t5);
t7=(C_word)C_a_i_cons(&a,2,C_fix(12800),C_SCHEME_END_OF_LIST);
t8=(C_word)C_a_i_cons(&a,2,C_fix(12544),t7);
t9=(C_word)C_a_i_cons(&a,2,C_fix(12288),t8);
t10=(C_word)C_a_i_cons(&a,2,C_fix(12032),t9);
t11=(C_word)C_a_i_cons(&a,2,C_fix(11776),t10);
t12=(C_word)C_a_i_cons(&a,2,C_fix(11268),t11);
t13=(C_word)C_a_i_cons(&a,2,C_fix(11012),t12);
t14=(C_word)C_a_i_cons(&a,2,C_fix(10756),t13);
t15=(C_word)C_a_i_cons(&a,2,lf[457],t14);
t16=(C_word)C_a_i_cons(&a,2,C_fix(29696),C_SCHEME_END_OF_LIST);
t17=(C_word)C_a_i_cons(&a,2,t15,t16);
t18=(C_word)C_a_i_cons(&a,2,t6,t17);
t19=(C_word)C_a_i_cons(&a,2,lf[456],t18);
t20=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_39578,a[2]=((C_word)li651),tmp=(C_word)a,a+=3,tmp);
C_trace("ChickenBridge.scm: 380  make-rule");
f_23189(t3,lf[956],C_fix(30720),t19,t20,C_SCHEME_FALSE);}

/* a39577 in k25130 in k25127 in k25124 in k25121 in k25118 in k25115 in k25112 in k25109 in k25106 in k25103 in k25100 in k25097 in k25094 in k25091 in k25088 in k25085 in k25082 in k24943 in k24940 in k24937 in k24934 in k24878 in k24875 in k24872 in k24869 in k24866 in k24863 in k24860 in k24857 in k23555 in k23486 in k23293 in k23290 in k23185 in k23134 in k11783 in k10718 in k10715 in k7274 in k7271 in k6978 in k6975 in k6971 in k6680 in k6677 in k6674 in k6671 */
static void C_ccall f_39578(C_word c,C_word t0,C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word *a;
if(c!=4) C_bad_argc_2(c,4,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr4,(void*)f_39578,4,t0,t1,t2,t3);}
C_trace("ChickenBridge.scm: 380  make-parse-unit");
f_23490(t1,C_fix(30720),t2,C_SCHEME_FALSE);}

/* k39570 in k25130 in k25127 in k25124 in k25121 in k25118 in k25115 in k25112 in k25109 in k25106 in k25103 in k25100 in k25097 in k25094 in k25091 in k25088 in k25085 in k25082 in k24943 in k24940 in k24937 in k24934 in k24878 in k24875 in k24872 in k24869 in k24866 in k24863 in k24860 in k24857 in k23555 in k23486 in k23293 in k23290 in k23185 in k23134 in k11783 in k10718 in k10715 in k7274 in k7271 in k6978 in k6975 in k6971 in k6680 in k6677 in k6674 in k6671 */
static void C_ccall f_39572(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 380  hash-table-set!");
t2=C_retrieve(lf[852]);
((C_proc5)C_retrieve_proc(t2))(5,t2,((C_word*)t0)[2],C_retrieve2(lf[424],"*rules*"),C_fix(30720),t1);}

/* k25133 in k25130 in k25127 in k25124 in k25121 in k25118 in k25115 in k25112 in k25109 in k25106 in k25103 in k25100 in k25097 in k25094 in k25091 in k25088 in k25085 in k25082 in k24943 in k24940 in k24937 in k24934 in k24878 in k24875 in k24872 in k24869 in k24866 in k24863 in k24860 in k24857 in k23555 in k23486 in k23293 in k23290 in k23185 in k23134 in k11783 in k10718 in k10715 in k7274 in k7271 in k6978 in k6975 in k6971 in k6680 in k6677 in k6674 in k6671 */
static void C_ccall f_25135(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word ab[33],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_25135,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_25138,a[2]=((C_word*)t0)[2],tmp=(C_word)a,a+=3,tmp);
t3=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_39292,a[2]=t2,tmp=(C_word)a,a+=3,tmp);
t4=(C_word)C_a_i_cons(&a,2,C_fix(30720),C_SCHEME_END_OF_LIST);
t5=(C_word)C_a_i_cons(&a,2,C_fix(256),t4);
t6=(C_word)C_a_i_cons(&a,2,lf[129],t5);
t7=(C_word)C_a_i_cons(&a,2,t6,C_SCHEME_END_OF_LIST);
t8=(C_word)C_a_i_cons(&a,2,C_fix(30720),t7);
t9=(C_word)C_a_i_cons(&a,2,C_fix(16640),t8);
t10=(C_word)C_a_i_cons(&a,2,lf[456],t9);
t11=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_39298,a[2]=((C_word)li648),tmp=(C_word)a,a+=3,tmp);
t12=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_39341,a[2]=((C_word)li650),tmp=(C_word)a,a+=3,tmp);
C_trace("ChickenBridge.scm: 380  make-rule");
f_23189(t3,lf[955],C_fix(30464),t10,t11,t12);}

/* a39340 in k25133 in k25130 in k25127 in k25124 in k25121 in k25118 in k25115 in k25112 in k25109 in k25106 in k25103 in k25100 in k25097 in k25094 in k25091 in k25088 in k25085 in k25082 in k24943 in k24940 in k24937 in k24934 in k24878 in k24875 in k24872 in k24869 in k24866 in k24863 in k24860 in k24857 in k23555 in k23486 in k23293 in k23290 in k23185 in k23134 in k11783 in k10718 in k10715 in k7274 in k7271 in k6978 in k6975 in k6971 in k6680 in k6677 in k6674 in k6671 */
static void C_ccall f_39341(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4){
C_word tmp;
C_word t5;
C_word t6;
C_word ab[5],*a=ab;
if(c!=5) C_bad_argc_2(c,5,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr5,(void*)f_39341,5,t0,t1,t2,t3,t4);}
t5=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_39345,a[2]=t1,a[3]=t4,a[4]=t3,tmp=(C_word)a,a+=5,tmp);
C_trace("ChickenBridge.scm: 380  parse-unit-parsed");
f_23529(t5,t2);}

/* k39343 in a39340 in k25133 in k25130 in k25127 in k25124 in k25121 in k25118 in k25115 in k25112 in k25109 in k25106 in k25103 in k25100 in k25097 in k25094 in k25091 in k25088 in k25085 in k25082 in k24943 in k24940 in k24937 in k24934 in k24878 in k24875 in k24872 in k24869 in k24866 in k24863 in k24860 in k24857 in k23555 in k23486 in k23293 in k23290 in k23185 in k23134 in k11783 in k10718 in k10715 in k7274 in k7271 in k6978 in k6975 in k6971 in k6680 in k6677 in k6674 in k6671 */
static void C_ccall f_39345(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word ab[15],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_39345,2,t0,t1);}
t2=(C_word)C_a_i_list(&a,1,lf[484]);
t3=t2;
t4=(*a=C_VECTOR_TYPE|1,a[1]=t3,tmp=(C_word)a,a+=2,tmp);
t5=C_SCHEME_UNDEFINED;
t6=(*a=C_VECTOR_TYPE|1,a[1]=t5,tmp=(C_word)a,a+=2,tmp);
t7=C_set_block_item(t6,0,(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_39353,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=t6,a[5]=t4,a[6]=t2,a[7]=((C_word)li649),tmp=(C_word)a,a+=8,tmp));
t8=((C_word*)t6)[1];
f_39353(t8,((C_word*)t0)[2],t1);}

/* do3852 in k39343 in a39340 in k25133 in k25130 in k25127 in k25124 in k25121 in k25118 in k25115 in k25112 in k25109 in k25106 in k25103 in k25100 in k25097 in k25094 in k25091 in k25088 in k25085 in k25082 in k24943 in k24940 in k24937 in k24934 in k24878 in k24875 in k24872 in k24869 in k24866 in k24863 in k24860 in k24857 in k23555 in k23486 in k23293 in k23290 in k23185 in k23134 in k11783 in k10718 in k10715 in k7274 in k7271 in k6978 in k6975 in k6971 in k6680 in k6677 in k6674 in k6671 */
static void C_fcall f_39353(C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word ab[8],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_39353,NULL,3,t0,t1,t2);}
if(C_truep((C_word)C_i_nullp(t2))){
t3=(C_word)C_i_cddr(((C_word*)t0)[6]);
t4=(C_word)C_i_nullp(t3);
t5=t1;
((C_proc2)(void*)(*((C_word*)t5+1)))(2,t5,(C_truep(t4)?(C_word)C_i_cadr(((C_word*)t0)[6]):((C_word*)t0)[6]));}
else{
t3=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_39376,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=t1,a[5]=((C_word*)t0)[4],a[6]=t2,a[7]=((C_word*)t0)[5],tmp=(C_word)a,a+=8,tmp);
t4=(C_word)C_i_car(t2);
C_trace("ChickenBridge.scm: 380  parse-unit-parsed");
f_23529(t3,t4);}}

/* k39374 in do3852 in k39343 in a39340 in k25133 in k25130 in k25127 in k25124 in k25121 in k25118 in k25115 in k25112 in k25109 in k25106 in k25103 in k25100 in k25097 in k25094 in k25091 in k25088 in k25085 in k25082 in k24943 in k24940 in k24937 in k24934 in k24878 in k24875 in k24872 in k24869 in k24866 in k24863 in k24860 in k24857 in k23555 in k23486 in k23293 in k23290 in k23185 in k23134 in k11783 in k10718 in k10715 in k7274 in k7271 in k6978 in k6975 in k6971 in k6680 in k6677 in k6674 in k6671 */
static void C_ccall f_39376(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_39376,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|8,a[1]=(C_word)f_39379,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=t1,a[5]=((C_word*)t0)[4],a[6]=((C_word*)t0)[5],a[7]=((C_word*)t0)[6],a[8]=((C_word*)t0)[7],tmp=(C_word)a,a+=9,tmp);
t3=(C_word)C_i_car(t1);
C_trace("ChickenBridge.scm: 380  emit");
f_23704(t2,t3,((C_word*)t0)[3],((C_word*)t0)[2]);}

/* k39377 in k39374 in do3852 in k39343 in a39340 in k25133 in k25130 in k25127 in k25124 in k25121 in k25118 in k25115 in k25112 in k25109 in k25106 in k25103 in k25100 in k25097 in k25094 in k25091 in k25088 in k25085 in k25082 in k24943 in k24940 in k24937 in k24934 in k24878 in k24875 in k24872 in k24869 in k24866 in k24863 in k24860 in k24857 in k23555 in k23486 in k23293 in k23290 in k23185 in k23134 in k11783 in k10718 in k10715 in k7274 in k7271 in k6978 in k6975 in k6971 in k6680 in k6677 in k6674 in k6671 */
static void C_ccall f_39379(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[10],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_39379,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|9,a[1]=(C_word)f_39382,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=t1,a[6]=((C_word*)t0)[5],a[7]=((C_word*)t0)[6],a[8]=((C_word*)t0)[7],a[9]=((C_word*)t0)[8],tmp=(C_word)a,a+=10,tmp);
t3=(C_word)C_i_cadr(((C_word*)t0)[4]);
C_trace("ChickenBridge.scm: 380  parse-unit-type");
f_23511(t2,t3);}

/* k39380 in k39377 in k39374 in do3852 in k39343 in a39340 in k25133 in k25130 in k25127 in k25124 in k25121 in k25118 in k25115 in k25112 in k25109 in k25106 in k25103 in k25100 in k25097 in k25094 in k25091 in k25088 in k25085 in k25082 in k24943 in k24940 in k24937 in k24934 in k24878 in k24875 in k24872 in k24869 in k24866 in k24863 in k24860 in k24857 in k23555 in k23486 in k23293 in k23290 in k23185 in k23134 in k11783 in k10718 in k10715 in k7274 in k7271 in k6978 in k6975 in k6971 in k6680 in k6677 in k6674 in k6671 */
static void C_ccall f_39382(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[8],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_39382,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_39385,a[2]=t1,a[3]=((C_word*)t0)[5],a[4]=((C_word*)t0)[6],a[5]=((C_word*)t0)[7],a[6]=((C_word*)t0)[8],a[7]=((C_word*)t0)[9],tmp=(C_word)a,a+=8,tmp);
t3=(C_word)C_i_caddr(((C_word*)t0)[4]);
C_trace("ChickenBridge.scm: 380  emit");
f_23704(t2,t3,((C_word*)t0)[3],((C_word*)t0)[2]);}

/* k39383 in k39380 in k39377 in k39374 in do3852 in k39343 in a39340 in k25133 in k25130 in k25127 in k25124 in k25121 in k25118 in k25115 in k25112 in k25109 in k25106 in k25103 in k25100 in k25097 in k25094 in k25091 in k25088 in k25085 in k25082 in k24943 in k24940 in k24937 in k24934 in k24878 in k24875 in k24872 in k24869 in k24866 in k24863 in k24860 in k24857 in k23555 in k23486 in k23293 in k23290 in k23185 in k23134 in k11783 in k10718 in k10715 in k7274 in k7271 in k6978 in k6975 in k6971 in k6680 in k6677 in k6674 in k6671 */
static void C_ccall f_39385(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[17],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_39385,2,t0,t1);}
t2=C_SCHEME_FALSE;
t3=(*a=C_VECTOR_TYPE|1,a[1]=t2,tmp=(C_word)a,a+=2,tmp);
t4=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_39388,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],a[7]=t3,tmp=(C_word)a,a+=8,tmp);
t5=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_39445,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=t4,a[5]=t1,a[6]=t3,tmp=(C_word)a,a+=7,tmp);
C_trace("ChickenBridge.scm: 380  SalType=?");
f_24838(t5,((C_word*)t0)[2],C_fix(10756));}

/* k39443 in k39383 in k39380 in k39377 in k39374 in do3852 in k39343 in a39340 in k25133 in k25130 in k25127 in k25124 in k25121 in k25118 in k25115 in k25112 in k25109 in k25106 in k25103 in k25100 in k25097 in k25094 in k25091 in k25088 in k25085 in k25082 in k24943 in k24940 in k24937 in k24934 in k24878 in k24875 in k24872 in k24869 in k24866 in k24863 in k24860 in k24857 in k23555 in k23486 in k23293 in k23290 in k23185 in k23134 in k11783 in k10718 in k10715 in k7274 in k7271 in k6978 in k6975 in k6971 in k6680 in k6677 in k6674 in k6671 */
static void C_ccall f_39445(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_39445,2,t0,t1);}
if(C_truep(t1)){
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,((C_word*)t0)[5]);
t3=((C_word*)t0)[4];
f_39388(t3,t2);}
else{
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_39452,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[6],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[3],tmp=(C_word)a,a+=7,tmp);
C_trace("ChickenBridge.scm: 380  SalType=?");
f_24838(t2,((C_word*)t0)[2],C_fix(11776));}}

/* k39450 in k39443 in k39383 in k39380 in k39377 in k39374 in do3852 in k39343 in a39340 in k25133 in k25130 in k25127 in k25124 in k25121 in k25118 in k25115 in k25112 in k25109 in k25106 in k25103 in k25100 in k25097 in k25094 in k25091 in k25088 in k25085 in k25082 in k24943 in k24940 in k24937 in k24934 in k24878 in k24875 in k24872 in k24869 in k24866 in k24863 in k24860 in k24857 in k23555 in k23486 in k23293 in k23290 in k23185 in k23134 in k11783 in k10718 in k10715 in k7274 in k7271 in k6978 in k6975 in k6971 in k6680 in k6677 in k6674 in k6671 */
static void C_ccall f_39452(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[16],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_39452,2,t0,t1);}
if(C_truep(t1)){
t2=(C_word)C_a_i_list(&a,3,lf[127],((C_word*)t0)[6],((C_word*)t0)[5]);
t3=C_mutate(((C_word *)((C_word*)t0)[4])+1,t2);
t4=((C_word*)t0)[3];
f_39388(t4,t3);}
else{
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_39462,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],tmp=(C_word)a,a+=7,tmp);
C_trace("ChickenBridge.scm: 380  SalType=?");
f_24838(t2,((C_word*)t0)[2],C_fix(12032));}}

/* k39460 in k39450 in k39443 in k39383 in k39380 in k39377 in k39374 in do3852 in k39343 in a39340 in k25133 in k25130 in k25127 in k25124 in k25121 in k25118 in k25115 in k25112 in k25109 in k25106 in k25103 in k25100 in k25097 in k25094 in k25091 in k25088 in k25085 in k25082 in k24943 in k24940 in k24937 in k24934 in k24878 in k24875 in k24872 in k24869 in k24866 in k24863 in k24860 in k24857 in k23555 in k23486 in k23293 in k23290 in k23185 in k23134 in k11783 in k10718 in k10715 in k7274 in k7271 in k6978 in k6975 in k6971 in k6680 in k6677 in k6674 in k6671 */
static void C_ccall f_39462(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[16],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_39462,2,t0,t1);}
if(C_truep(t1)){
t2=(C_word)C_a_i_list(&a,3,lf[129],((C_word*)t0)[6],((C_word*)t0)[5]);
t3=C_mutate(((C_word *)((C_word*)t0)[4])+1,t2);
t4=((C_word*)t0)[3];
f_39388(t4,t3);}
else{
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_39472,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[5],tmp=(C_word)a,a+=7,tmp);
C_trace("ChickenBridge.scm: 380  SalType=?");
f_24838(t2,((C_word*)t0)[2],C_fix(12288));}}

/* k39470 in k39460 in k39450 in k39443 in k39383 in k39380 in k39377 in k39374 in do3852 in k39343 in a39340 in k25133 in k25130 in k25127 in k25124 in k25121 in k25118 in k25115 in k25112 in k25109 in k25106 in k25103 in k25100 in k25097 in k25094 in k25091 in k25088 in k25085 in k25082 in k24943 in k24940 in k24937 in k24934 in k24878 in k24875 in k24872 in k24869 in k24866 in k24863 in k24860 in k24857 in k23555 in k23486 in k23293 in k23290 in k23185 in k23134 in k11783 in k10718 in k10715 in k7274 in k7271 in k6978 in k6975 in k6971 in k6680 in k6677 in k6674 in k6671 */
static void C_ccall f_39472(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[22],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_39472,2,t0,t1);}
if(C_truep(t1)){
t2=(C_word)C_a_i_list(&a,2,lf[661],((C_word*)t0)[6]);
t3=(C_word)C_a_i_list(&a,3,lf[18],((C_word*)t0)[5],t2);
t4=C_mutate(((C_word *)((C_word*)t0)[4])+1,t3);
t5=((C_word*)t0)[3];
f_39388(t5,t4);}
else{
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_39486,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],tmp=(C_word)a,a+=7,tmp);
C_trace("ChickenBridge.scm: 380  SalType=?");
f_24838(t2,((C_word*)t0)[2],C_fix(12544));}}

/* k39484 in k39470 in k39460 in k39450 in k39443 in k39383 in k39380 in k39377 in k39374 in do3852 in k39343 in a39340 in k25133 in k25130 in k25127 in k25124 in k25121 in k25118 in k25115 in k25112 in k25109 in k25106 in k25103 in k25100 in k25097 in k25094 in k25091 in k25088 in k25085 in k25082 in k24943 in k24940 in k24937 in k24934 in k24878 in k24875 in k24872 in k24869 in k24866 in k24863 in k24860 in k24857 in k23555 in k23486 in k23293 in k23290 in k23185 in k23134 in k11783 in k10718 in k10715 in k7274 in k7271 in k6978 in k6975 in k6971 in k6680 in k6677 in k6674 in k6671 */
static void C_ccall f_39486(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[16],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_39486,2,t0,t1);}
if(C_truep(t1)){
t2=(C_word)C_a_i_list(&a,3,lf[917],((C_word*)t0)[6],((C_word*)t0)[5]);
t3=C_mutate(((C_word *)((C_word*)t0)[4])+1,t2);
t4=((C_word*)t0)[3];
f_39388(t4,t3);}
else{
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_39496,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[5],tmp=(C_word)a,a+=7,tmp);
C_trace("ChickenBridge.scm: 380  SalType=?");
f_24838(t2,((C_word*)t0)[2],C_fix(12800));}}

/* k39494 in k39484 in k39470 in k39460 in k39450 in k39443 in k39383 in k39380 in k39377 in k39374 in do3852 in k39343 in a39340 in k25133 in k25130 in k25127 in k25124 in k25121 in k25118 in k25115 in k25112 in k25109 in k25106 in k25103 in k25100 in k25097 in k25094 in k25091 in k25088 in k25085 in k25082 in k24943 in k24940 in k24937 in k24934 in k24878 in k24875 in k24872 in k24869 in k24866 in k24863 in k24860 in k24857 in k23555 in k23486 in k23293 in k23290 in k23185 in k23134 in k11783 in k10718 in k10715 in k7274 in k7271 in k6978 in k6975 in k6971 in k6680 in k6677 in k6674 in k6671 */
static void C_ccall f_39496(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[16],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_39496,2,t0,t1);}
if(C_truep(t1)){
t2=(C_word)C_a_i_list(&a,3,lf[18],((C_word*)t0)[6],((C_word*)t0)[5]);
t3=C_mutate(((C_word *)((C_word*)t0)[4])+1,t2);
t4=((C_word*)t0)[3];
f_39388(t4,t3);}
else{
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_39506,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],tmp=(C_word)a,a+=7,tmp);
C_trace("ChickenBridge.scm: 380  SalType=?");
f_24838(t2,((C_word*)t0)[2],C_fix(11012));}}

/* k39504 in k39494 in k39484 in k39470 in k39460 in k39450 in k39443 in k39383 in k39380 in k39377 in k39374 in do3852 in k39343 in a39340 in k25133 in k25130 in k25127 in k25124 in k25121 in k25118 in k25115 in k25112 in k25109 in k25106 in k25103 in k25100 in k25097 in k25094 in k25091 in k25088 in k25085 in k25082 in k24943 in k24940 in k24937 in k24934 in k24878 in k24875 in k24872 in k24869 in k24866 in k24863 in k24860 in k24857 in k23555 in k23486 in k23293 in k23290 in k23185 in k23134 in k11783 in k10718 in k10715 in k7274 in k7271 in k6978 in k6975 in k6971 in k6680 in k6677 in k6674 in k6671 */
static void C_ccall f_39506(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[15],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_39506,2,t0,t1);}
if(C_truep(t1)){
t2=(C_word)C_a_i_list(&a,3,lf[402],((C_word*)t0)[6],((C_word*)t0)[5]);
t3=C_mutate(((C_word *)((C_word*)t0)[4])+1,t2);
t4=((C_word*)t0)[3];
f_39388(t4,t3);}
else{
t2=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_39516,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],tmp=(C_word)a,a+=6,tmp);
C_trace("ChickenBridge.scm: 380  SalType=?");
f_24838(t2,((C_word*)t0)[2],C_fix(11268));}}

/* k39514 in k39504 in k39494 in k39484 in k39470 in k39460 in k39450 in k39443 in k39383 in k39380 in k39377 in k39374 in do3852 in k39343 in a39340 in k25133 in k25130 in k25127 in k25124 in k25121 in k25118 in k25115 in k25112 in k25109 in k25106 in k25103 in k25100 in k25097 in k25094 in k25091 in k25088 in k25085 in k25082 in k24943 in k24940 in k24937 in k24934 in k24878 in k24875 in k24872 in k24869 in k24866 in k24863 in k24860 in k24857 in k23555 in k23486 in k23293 in k23290 in k23185 in k23134 in k11783 in k10718 in k10715 in k7274 in k7271 in k6978 in k6975 in k6971 in k6680 in k6677 in k6674 in k6671 */
static void C_ccall f_39516(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_39516,2,t0,t1);}
if(C_truep(t1)){
t2=(C_word)C_a_i_list(&a,3,lf[295],((C_word*)t0)[5],((C_word*)t0)[4]);
t3=C_mutate(((C_word *)((C_word*)t0)[3])+1,t2);
t4=((C_word*)t0)[2];
f_39388(t4,t3);}
else{
t2=((C_word*)t0)[2];
f_39388(t2,C_SCHEME_UNDEFINED);}}

/* k39386 in k39383 in k39380 in k39377 in k39374 in do3852 in k39343 in a39340 in k25133 in k25130 in k25127 in k25124 in k25121 in k25118 in k25115 in k25112 in k25109 in k25106 in k25103 in k25100 in k25097 in k25094 in k25091 in k25088 in k25085 in k25082 in k24943 in k24940 in k24937 in k24934 in k24878 in k24875 in k24872 in k24869 in k24866 in k24863 in k24860 in k24857 in k23555 in k23486 in k23293 in k23290 in k23185 in k23134 in k11783 in k10718 in k10715 in k7274 in k7271 in k6978 in k6975 in k6971 in k6680 in k6677 in k6674 in k6671 */
static void C_fcall f_39388(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[12],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_39388,NULL,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_39391,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_39412,a[2]=t2,a[3]=((C_word*)t0)[7],a[4]=((C_word*)t0)[2],tmp=(C_word)a,a+=5,tmp);
if(C_truep((C_word)C_i_pairp(((C_word*)t0)[2]))){
t4=(C_word)C_i_car(((C_word*)t0)[2]);
t5=t3;
f_39412(t5,(C_word)C_eqp(t4,lf[73]));}
else{
t4=t3;
f_39412(t4,C_SCHEME_FALSE);}}

/* k39410 in k39386 in k39383 in k39380 in k39377 in k39374 in do3852 in k39343 in a39340 in k25133 in k25130 in k25127 in k25124 in k25121 in k25118 in k25115 in k25112 in k25109 in k25106 in k25103 in k25100 in k25097 in k25094 in k25091 in k25088 in k25085 in k25082 in k24943 in k24940 in k24937 in k24934 in k24878 in k24875 in k24872 in k24869 in k24866 in k24863 in k24860 in k24857 in k23555 in k23486 in k23293 in k23290 in k23185 in k23134 in k11783 in k10718 in k10715 in k7274 in k7271 in k6978 in k6975 in k6971 in k6680 in k6677 in k6674 in k6671 */
static void C_fcall f_39412(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word ab[27],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_39412,NULL,2,t0,t1);}
if(C_truep(t1)){
t2=(C_word)C_i_cadr(((C_word*)t0)[4]);
t3=(C_word)C_i_caddr(((C_word*)t0)[4]);
t4=(C_word)C_a_i_list(&a,3,lf[954],t2,t3);
t5=(C_word)C_a_i_list(&a,3,lf[250],t4,((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_39391(t7,t6);}
else{
t2=(C_word)C_a_i_list(&a,3,lf[12],((C_word*)t0)[4],((C_word*)((C_word*)t0)[3])[1]);
t3=C_mutate(((C_word *)((C_word*)t0)[3])+1,t2);
t4=((C_word*)t0)[2];
f_39391(t4,t3);}}

/* k39389 in k39386 in k39383 in k39380 in k39377 in k39374 in do3852 in k39343 in a39340 in k25133 in k25130 in k25127 in k25124 in k25121 in k25118 in k25115 in k25112 in k25109 in k25106 in k25103 in k25100 in k25097 in k25094 in k25091 in k25088 in k25085 in k25082 in k24943 in k24940 in k24937 in k24934 in k24878 in k24875 in k24872 in k24869 in k24866 in k24863 in k24860 in k24857 in k23555 in k23486 in k23293 in k23290 in k23185 in k23134 in k11783 in k10718 in k10715 in k7274 in k7271 in k6978 in k6975 in k6971 in k6680 in k6677 in k6674 in k6671 */
static void C_fcall f_39391(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word ab[3],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_39391,NULL,2,t0,t1);}
t2=(C_word)C_a_i_list(&a,1,((C_word*)((C_word*)t0)[6])[1]);
t3=(C_word)C_i_set_cdr(((C_word*)((C_word*)t0)[5])[1],t2);
t4=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[5])[1]);
t5=C_mutate(((C_word *)((C_word*)t0)[5])+1,t4);
t6=(C_word)C_i_cdr(((C_word*)t0)[4]);
t7=((C_word*)((C_word*)t0)[3])[1];
f_39353(t7,((C_word*)t0)[2],t6);}

/* a39297 in k25133 in k25130 in k25127 in k25124 in k25121 in k25118 in k25115 in k25112 in k25109 in k25106 in k25103 in k25100 in k25097 in k25094 in k25091 in k25088 in k25085 in k25082 in k24943 in k24940 in k24937 in k24934 in k24878 in k24875 in k24872 in k24869 in k24866 in k24863 in k24860 in k24857 in k23555 in k23486 in k23293 in k23290 in k23185 in k23134 in k11783 in k10718 in k10715 in k7274 in k7271 in k6978 in k6975 in k6971 in k6680 in k6677 in k6674 in k6671 */
static void C_ccall f_39298(C_word c,C_word t0,C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word ab[7],*a=ab;
if(c!=4) C_bad_argc_2(c,4,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr4,(void*)f_39298,4,t0,t1,t2,t3);}
if(C_truep((C_word)C_i_caddr(t2))){
t4=(C_word)C_i_cadr(t2);
t5=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_39331,a[2]=t1,a[3]=t4,tmp=(C_word)a,a+=4,tmp);
t6=(C_word)C_i_caddr(t2);
C_trace("ChickenBridge.scm: 380  remove-token-type");
f_24882(t5,t6,C_fix(256));}
else{
t4=(C_word)C_i_cadr(t2);
t5=(C_word)C_a_i_list(&a,1,t4);
C_trace("ChickenBridge.scm: 380  make-parse-unit");
f_23490(t1,C_fix(30464),t5,C_SCHEME_FALSE);}}

/* k39329 in a39297 in k25133 in k25130 in k25127 in k25124 in k25121 in k25118 in k25115 in k25112 in k25109 in k25106 in k25103 in k25100 in k25097 in k25094 in k25091 in k25088 in k25085 in k25082 in k24943 in k24940 in k24937 in k24934 in k24878 in k24875 in k24872 in k24869 in k24866 in k24863 in k24860 in k24857 in k23555 in k23486 in k23293 in k23290 in k23185 in k23134 in k11783 in k10718 in k10715 in k7274 in k7271 in k6978 in k6975 in k6971 in k6680 in k6677 in k6674 in k6671 */
static void C_ccall f_39331(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[3],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_39331,2,t0,t1);}
t2=(C_word)C_a_i_cons(&a,2,((C_word*)t0)[3],t1);
C_trace("ChickenBridge.scm: 380  make-parse-unit");
f_23490(((C_word*)t0)[2],C_fix(30464),t2,C_SCHEME_FALSE);}

/* k39290 in k25133 in k25130 in k25127 in k25124 in k25121 in k25118 in k25115 in k25112 in k25109 in k25106 in k25103 in k25100 in k25097 in k25094 in k25091 in k25088 in k25085 in k25082 in k24943 in k24940 in k24937 in k24934 in k24878 in k24875 in k24872 in k24869 in k24866 in k24863 in k24860 in k24857 in k23555 in k23486 in k23293 in k23290 in k23185 in k23134 in k11783 in k10718 in k10715 in k7274 in k7271 in k6978 in k6975 in k6971 in k6680 in k6677 in k6674 in k6671 */
static void C_ccall f_39292(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 380  hash-table-set!");
t2=C_retrieve(lf[852]);
((C_proc5)C_retrieve_proc(t2))(5,t2,((C_word*)t0)[2],C_retrieve2(lf[424],"*rules*"),C_fix(30464),t1);}

/* k25136 in k25133 in k25130 in k25127 in k25124 in k25121 in k25118 in k25115 in k25112 in k25109 in k25106 in k25103 in k25100 in k25097 in k25094 in k25091 in k25088 in k25085 in k25082 in k24943 in k24940 in k24937 in k24934 in k24878 in k24875 in k24872 in k24869 in k24866 in k24863 in k24860 in k24857 in k23555 in k23486 in k23293 in k23290 in k23185 in k23134 in k11783 in k10718 in k10715 in k7274 in k7271 in k6978 in k6975 in k6971 in k6680 in k6677 in k6674 in k6671 */
static void C_ccall f_25138(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word t14;
C_word t15;
C_word ab[39],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_25138,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_25141,a[2]=((C_word*)t0)[2],tmp=(C_word)a,a+=3,tmp);
t3=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_39178,a[2]=t2,tmp=(C_word)a,a+=3,tmp);
t4=(C_word)C_a_i_cons(&a,2,C_fix(29952),C_SCHEME_END_OF_LIST);
t5=(C_word)C_a_i_cons(&a,2,lf[473],t4);
t6=(C_word)C_a_i_cons(&a,2,C_fix(36608),C_SCHEME_END_OF_LIST);
t7=(C_word)C_a_i_cons(&a,2,lf[129],t6);
t8=(C_word)C_a_i_cons(&a,2,C_fix(18193),C_SCHEME_END_OF_LIST);
t9=(C_word)C_a_i_cons(&a,2,t7,t8);
t10=(C_word)C_a_i_cons(&a,2,t5,t9);
t11=(C_word)C_a_i_cons(&a,2,C_fix(13328),t10);
t12=(C_word)C_a_i_cons(&a,2,lf[456],t11);
t13=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_39184,a[2]=((C_word)li646),tmp=(C_word)a,a+=3,tmp);
t14=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_39210,a[2]=((C_word)li647),tmp=(C_word)a,a+=3,tmp);
C_trace("ChickenBridge.scm: 380  make-rule");
f_23189(t3,lf[953],C_fix(32000),t12,t13,t14);}

/* a39209 in k25136 in k25133 in k25130 in k25127 in k25124 in k25121 in k25118 in k25115 in k25112 in k25109 in k25106 in k25103 in k25100 in k25097 in k25094 in k25091 in k25088 in k25085 in k25082 in k24943 in k24940 in k24937 in k24934 in k24878 in k24875 in k24872 in k24869 in k24866 in k24863 in k24860 in k24857 in k23555 in k23486 in k23293 in k23290 in k23185 in k23134 in k11783 in k10718 in k10715 in k7274 in k7271 in k6978 in k6975 in k6971 in k6680 in k6677 in k6674 in k6671 */
static void C_ccall f_39210(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4){
C_word tmp;
C_word t5;
C_word t6;
C_word ab[5],*a=ab;
if(c!=5) C_bad_argc_2(c,5,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr5,(void*)f_39210,5,t0,t1,t2,t3,t4);}
t5=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_39214,a[2]=t4,a[3]=t3,a[4]=t1,tmp=(C_word)a,a+=5,tmp);
C_trace("ChickenBridge.scm: 380  parse-unit-parsed");
f_23529(t5,t2);}

/* k39212 in a39209 in k25136 in k25133 in k25130 in k25127 in k25124 in k25121 in k25118 in k25115 in k25112 in k25109 in k25106 in k25103 in k25100 in k25097 in k25094 in k25091 in k25088 in k25085 in k25082 in k24943 in k24940 in k24937 in k24934 in k24878 in k24875 in k24872 in k24869 in k24866 in k24863 in k24860 in k24857 in k23555 in k23486 in k23293 in k23290 in k23185 in k23134 in k11783 in k10718 in k10715 in k7274 in k7271 in k6978 in k6975 in k6971 in k6680 in k6677 in k6674 in k6671 */
static void C_ccall f_39214(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[6],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_39214,2,t0,t1);}
t2=(C_word)C_i_car(t1);
t3=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_39220,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=t2,tmp=(C_word)a,a+=6,tmp);
t4=(C_word)C_i_cdr(t1);
C_trace("ChickenBridge.scm: 380  emit");
f_23704(t3,t4,((C_word*)t0)[3],((C_word*)t0)[2]);}

/* k39218 in k39212 in a39209 in k25136 in k25133 in k25130 in k25127 in k25124 in k25121 in k25118 in k25115 in k25112 in k25109 in k25106 in k25103 in k25100 in k25097 in k25094 in k25091 in k25088 in k25085 in k25082 in k24943 in k24940 in k24937 in k24934 in k24878 in k24875 in k24872 in k24869 in k24866 in k24863 in k24860 in k24857 in k23555 in k23486 in k23293 in k23290 in k23185 in k23134 in k11783 in k10718 in k10715 in k7274 in k7271 in k6978 in k6975 in k6971 in k6680 in k6677 in k6674 in k6671 */
static void C_ccall f_39220(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_39220,2,t0,t1);}
if(C_truep(((C_word*)t0)[5])){
t2=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_39240,a[2]=((C_word*)t0)[4],a[3]=t1,tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 380  emit");
f_23704(t2,((C_word*)t0)[5],((C_word*)t0)[3],((C_word*)t0)[2]);}
else{
t2=((C_word*)t0)[4];
((C_proc2)(void*)(*((C_word*)t2+1)))(2,t2,(C_word)C_a_i_cons(&a,2,lf[484],t1));}}

/* k39238 in k39218 in k39212 in a39209 in k25136 in k25133 in k25130 in k25127 in k25124 in k25121 in k25118 in k25115 in k25112 in k25109 in k25106 in k25103 in k25100 in k25097 in k25094 in k25091 in k25088 in k25085 in k25082 in k24943 in k24940 in k24937 in k24934 in k24878 in k24875 in k24872 in k24869 in k24866 in k24863 in k24860 in k24857 in k23555 in k23486 in k23293 in k23290 in k23185 in k23134 in k11783 in k10718 in k10715 in k7274 in k7271 in k6978 in k6975 in k6971 in k6680 in k6677 in k6674 in k6671 */
static void C_ccall f_39240(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[6],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_39240,2,t0,t1);}
t2=(C_word)C_a_i_cons(&a,2,t1,((C_word*)t0)[3]);
t3=((C_word*)t0)[2];
((C_proc2)(void*)(*((C_word*)t3+1)))(2,t3,(C_word)C_a_i_cons(&a,2,lf[2],t2));}

/* a39183 in k25136 in k25133 in k25130 in k25127 in k25124 in k25121 in k25118 in k25115 in k25112 in k25109 in k25106 in k25103 in k25100 in k25097 in k25094 in k25091 in k25088 in k25085 in k25082 in k24943 in k24940 in k24937 in k24934 in k24878 in k24875 in k24872 in k24869 in k24866 in k24863 in k24860 in k24857 in k23555 in k23486 in k23293 in k23290 in k23185 in k23134 in k11783 in k10718 in k10715 in k7274 in k7271 in k6978 in k6975 in k6971 in k6680 in k6677 in k6674 in k6671 */
static void C_ccall f_39184(C_word c,C_word t0,C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word ab[7],*a=ab;
if(c!=4) C_bad_argc_2(c,4,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr4,(void*)f_39184,4,t0,t1,t2,t3);}
t4=(C_word)C_i_cadr(t2);
t5=t4;
t6=(*a=C_VECTOR_TYPE|1,a[1]=t5,tmp=(C_word)a,a+=2,tmp);
t7=(C_word)C_i_caddr(t2);
t8=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_39194,a[2]=t1,a[3]=t7,a[4]=t6,tmp=(C_word)a,a+=5,tmp);
t9=((C_word*)t6)[1];
if(C_truep(t9)){
t10=(C_word)C_i_car(((C_word*)t6)[1]);
t11=C_set_block_item(t6,0,t10);
t12=t8;
f_39194(t12,t11);}
else{
t10=t8;
f_39194(t10,C_SCHEME_FALSE);}}

/* k39192 in a39183 in k25136 in k25133 in k25130 in k25127 in k25124 in k25121 in k25118 in k25115 in k25112 in k25109 in k25106 in k25103 in k25100 in k25097 in k25094 in k25091 in k25088 in k25085 in k25082 in k24943 in k24940 in k24937 in k24934 in k24878 in k24875 in k24872 in k24869 in k24866 in k24863 in k24860 in k24857 in k23555 in k23486 in k23293 in k23290 in k23185 in k23134 in k11783 in k10718 in k10715 in k7274 in k7271 in k6978 in k6975 in k6971 in k6680 in k6677 in k6674 in k6671 */
static void C_fcall f_39194(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[3],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_39194,NULL,2,t0,t1);}
t2=(C_word)C_a_i_cons(&a,2,((C_word*)((C_word*)t0)[4])[1],((C_word*)t0)[3]);
C_trace("ChickenBridge.scm: 380  make-parse-unit");
f_23490(((C_word*)t0)[2],C_fix(32000),t2,C_SCHEME_FALSE);}

/* k39176 in k25136 in k25133 in k25130 in k25127 in k25124 in k25121 in k25118 in k25115 in k25112 in k25109 in k25106 in k25103 in k25100 in k25097 in k25094 in k25091 in k25088 in k25085 in k25082 in k24943 in k24940 in k24937 in k24934 in k24878 in k24875 in k24872 in k24869 in k24866 in k24863 in k24860 in k24857 in k23555 in k23486 in k23293 in k23290 in k23185 in k23134 in k11783 in k10718 in k10715 in k7274 in k7271 in k6978 in k6975 in k6971 in k6680 in k6677 in k6674 in k6671 */
static void C_ccall f_39178(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 380  hash-table-set!");
t2=C_retrieve(lf[852]);
((C_proc5)C_retrieve_proc(t2))(5,t2,((C_word*)t0)[2],C_retrieve2(lf[424],"*rules*"),C_fix(32000),t1);}

/* k25139 in k25136 in k25133 in k25130 in k25127 in k25124 in k25121 in k25118 in k25115 in k25112 in k25109 in k25106 in k25103 in k25100 in k25097 in k25094 in k25091 in k25088 in k25085 in k25082 in k24943 in k24940 in k24937 in k24934 in k24878 in k24875 in k24872 in k24869 in k24866 in k24863 in k24860 in k24857 in k23555 in k23486 in k23293 in k23290 in k23185 in k23134 in k11783 in k10718 in k10715 in k7274 in k7271 in k6978 in k6975 in k6971 in k6680 in k6677 in k6674 in k6671 */
static void C_ccall f_25141(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word t14;
C_word t15;
C_word t16;
C_word t17;
C_word t18;
C_word t19;
C_word t20;
C_word t21;
C_word t22;
C_word t23;
C_word t24;
C_word t25;
C_word t26;
C_word t27;
C_word t28;
C_word t29;
C_word ab[81],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_25141,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_25144,a[2]=((C_word*)t0)[2],tmp=(C_word)a,a+=3,tmp);
t3=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_38919,a[2]=t2,tmp=(C_word)a,a+=3,tmp);
t4=(C_word)C_a_i_cons(&a,2,C_fix(36608),C_SCHEME_END_OF_LIST);
t5=(C_word)C_a_i_cons(&a,2,lf[473],t4);
t6=(C_word)C_a_i_cons(&a,2,C_fix(36608),C_SCHEME_END_OF_LIST);
t7=(C_word)C_a_i_cons(&a,2,C_fix(17920),t6);
t8=(C_word)C_a_i_cons(&a,2,lf[473],t7);
t9=(C_word)C_a_i_cons(&a,2,t8,C_SCHEME_END_OF_LIST);
t10=(C_word)C_a_i_cons(&a,2,t5,t9);
t11=(C_word)C_a_i_cons(&a,2,C_fix(18944),t10);
t12=(C_word)C_a_i_cons(&a,2,C_fix(29696),t11);
t13=(C_word)C_a_i_cons(&a,2,C_fix(14336),t12);
t14=(C_word)C_a_i_cons(&a,2,lf[456],t13);
t15=(C_word)C_a_i_cons(&a,2,C_fix(36608),C_SCHEME_END_OF_LIST);
t16=(C_word)C_a_i_cons(&a,2,C_fix(29696),t15);
t17=(C_word)C_a_i_cons(&a,2,C_fix(19968),t16);
t18=(C_word)C_a_i_cons(&a,2,lf[456],t17);
t19=(C_word)C_a_i_cons(&a,2,C_fix(36608),C_SCHEME_END_OF_LIST);
t20=(C_word)C_a_i_cons(&a,2,C_fix(29696),t19);
t21=(C_word)C_a_i_cons(&a,2,C_fix(19200),t20);
t22=(C_word)C_a_i_cons(&a,2,lf[456],t21);
t23=(C_word)C_a_i_cons(&a,2,t22,C_SCHEME_END_OF_LIST);
t24=(C_word)C_a_i_cons(&a,2,t18,t23);
t25=(C_word)C_a_i_cons(&a,2,t14,t24);
t26=(C_word)C_a_i_cons(&a,2,lf[457],t25);
t27=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_38925,a[2]=((C_word)li644),tmp=(C_word)a,a+=3,tmp);
t28=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_38993,a[2]=((C_word)li645),tmp=(C_word)a,a+=3,tmp);
C_trace("ChickenBridge.scm: 380  make-rule");
f_23189(t3,lf[952],C_fix(32256),t26,t27,t28);}

/* a38992 in k25139 in k25136 in k25133 in k25130 in k25127 in k25124 in k25121 in k25118 in k25115 in k25112 in k25109 in k25106 in k25103 in k25100 in k25097 in k25094 in k25091 in k25088 in k25085 in k25082 in k24943 in k24940 in k24937 in k24934 in k24878 in k24875 in k24872 in k24869 in k24866 in k24863 in k24860 in k24857 in k23555 in k23486 in k23293 in k23290 in k23185 in k23134 in k11783 in k10718 in k10715 in k7274 in k7271 in k6978 in k6975 in k6971 in k6680 in k6677 in k6674 in k6671 */
static void C_ccall f_38993(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4){
C_word tmp;
C_word t5;
C_word t6;
C_word ab[5],*a=ab;
if(c!=5) C_bad_argc_2(c,5,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr5,(void*)f_38993,5,t0,t1,t2,t3,t4);}
t5=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_38997,a[2]=t4,a[3]=t3,a[4]=t1,tmp=(C_word)a,a+=5,tmp);
C_trace("ChickenBridge.scm: 380  parse-unit-parsed");
f_23529(t5,t2);}

/* k38995 in a38992 in k25139 in k25136 in k25133 in k25130 in k25127 in k25124 in k25121 in k25118 in k25115 in k25112 in k25109 in k25106 in k25103 in k25100 in k25097 in k25094 in k25091 in k25088 in k25085 in k25082 in k24943 in k24940 in k24937 in k24934 in k24878 in k24875 in k24872 in k24869 in k24866 in k24863 in k24860 in k24857 in k23555 in k23486 in k23293 in k23290 in k23185 in k23134 in k11783 in k10718 in k10715 in k7274 in k7271 in k6978 in k6975 in k6971 in k6680 in k6677 in k6674 in k6671 */
static void C_ccall f_38997(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[6],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_38997,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_39003,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=t1,a[5]=((C_word*)t0)[4],tmp=(C_word)a,a+=6,tmp);
t3=(C_word)C_i_car(t1);
C_trace("ChickenBridge.scm: 380  token-unit-type=?");
f_23575(t2,t3,C_fix(14336));}

/* k39001 in k38995 in a38992 in k25139 in k25136 in k25133 in k25130 in k25127 in k25124 in k25121 in k25118 in k25115 in k25112 in k25109 in k25106 in k25103 in k25100 in k25097 in k25094 in k25091 in k25088 in k25085 in k25082 in k24943 in k24940 in k24937 in k24934 in k24878 in k24875 in k24872 in k24869 in k24866 in k24863 in k24860 in k24857 in k23555 in k23486 in k23293 in k23290 in k23185 in k23134 in k11783 in k10718 in k10715 in k7274 in k7271 in k6978 in k6975 in k6971 in k6680 in k6677 in k6674 in k6671 */
static void C_ccall f_39003(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[6],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_39003,2,t0,t1);}
if(C_truep(t1)){
C_trace("ChickenBridge.scm: 380  emit");
f_23704(((C_word*)t0)[5],((C_word*)t0)[4],((C_word*)t0)[3],((C_word*)t0)[2]);}
else{
t2=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_39012,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],tmp=(C_word)a,a+=6,tmp);
t3=(C_word)C_i_car(((C_word*)t0)[4]);
C_trace("ChickenBridge.scm: 380  token-unit-type=?");
f_23575(t2,t3,C_fix(19968));}}

/* k39010 in k39001 in k38995 in a38992 in k25139 in k25136 in k25133 in k25130 in k25127 in k25124 in k25121 in k25118 in k25115 in k25112 in k25109 in k25106 in k25103 in k25100 in k25097 in k25094 in k25091 in k25088 in k25085 in k25082 in k24943 in k24940 in k24937 in k24934 in k24878 in k24875 in k24872 in k24869 in k24866 in k24863 in k24860 in k24857 in k23555 in k23486 in k23293 in k23290 in k23185 in k23134 in k11783 in k10718 in k10715 in k7274 in k7271 in k6978 in k6975 in k6971 in k6680 in k6677 in k6674 in k6671 */
static void C_ccall f_39012(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[12],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_39012,2,t0,t1);}
if(C_truep(t1)){
t2=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_39019,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],tmp=(C_word)a,a+=6,tmp);
t3=(C_word)C_i_cadr(((C_word*)t0)[4]);
C_trace("ChickenBridge.scm: 380  emit");
f_23704(t2,t3,((C_word*)t0)[3],((C_word*)t0)[2]);}
else{
t2=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_39050,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],tmp=(C_word)a,a+=6,tmp);
t3=(C_word)C_i_cadr(((C_word*)t0)[4]);
C_trace("ChickenBridge.scm: 380  emit");
f_23704(t2,t3,((C_word*)t0)[3],((C_word*)t0)[2]);}}

/* k39048 in k39010 in k39001 in k38995 in a38992 in k25139 in k25136 in k25133 in k25130 in k25127 in k25124 in k25121 in k25118 in k25115 in k25112 in k25109 in k25106 in k25103 in k25100 in k25097 in k25094 in k25091 in k25088 in k25085 in k25082 in k24943 in k24940 in k24937 in k24934 in k24878 in k24875 in k24872 in k24869 in k24866 in k24863 in k24860 in k24857 in k23555 in k23486 in k23293 in k23290 in k23185 in k23134 in k11783 in k10718 in k10715 in k7274 in k7271 in k6978 in k6975 in k6971 in k6680 in k6677 in k6674 in k6671 */
static void C_ccall f_39050(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[10],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_39050,2,t0,t1);}
t2=(C_word)C_a_i_list(&a,2,lf[458],t1);
t3=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_39042,a[2]=t2,a[3]=((C_word*)t0)[5],tmp=(C_word)a,a+=4,tmp);
t4=(C_word)C_i_caddr(((C_word*)t0)[4]);
C_trace("ChickenBridge.scm: 380  emit");
f_23704(t3,t4,((C_word*)t0)[3],((C_word*)t0)[2]);}

/* k39040 in k39048 in k39010 in k39001 in k38995 in a38992 in k25139 in k25136 in k25133 in k25130 in k25127 in k25124 in k25121 in k25118 in k25115 in k25112 in k25109 in k25106 in k25103 in k25100 in k25097 in k25094 in k25091 in k25088 in k25085 in k25082 in k24943 in k24940 in k24937 in k24934 in k24878 in k24875 in k24872 in k24869 in k24866 in k24863 in k24860 in k24857 in k23555 in k23486 in k23293 in k23290 in k23185 in k23134 in k11783 in k10718 in k10715 in k7274 in k7271 in k6978 in k6975 in k6971 in k6680 in k6677 in k6674 in k6671 */
static void C_ccall f_39042(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_39042,2,t0,t1);}
t2=((C_word*)t0)[3];
((C_proc2)(void*)(*((C_word*)t2+1)))(2,t2,(C_word)C_a_i_list(&a,3,lf[20],((C_word*)t0)[2],t1));}

/* k39017 in k39010 in k39001 in k38995 in a38992 in k25139 in k25136 in k25133 in k25130 in k25127 in k25124 in k25121 in k25118 in k25115 in k25112 in k25109 in k25106 in k25103 in k25100 in k25097 in k25094 in k25091 in k25088 in k25085 in k25082 in k24943 in k24940 in k24937 in k24934 in k24878 in k24875 in k24872 in k24869 in k24866 in k24863 in k24860 in k24857 in k23555 in k23486 in k23293 in k23290 in k23185 in k23134 in k11783 in k10718 in k10715 in k7274 in k7271 in k6978 in k6975 in k6971 in k6680 in k6677 in k6674 in k6671 */
static void C_ccall f_39019(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[4],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_39019,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_39023,a[2]=t1,a[3]=((C_word*)t0)[5],tmp=(C_word)a,a+=4,tmp);
t3=(C_word)C_i_caddr(((C_word*)t0)[4]);
C_trace("ChickenBridge.scm: 380  emit");
f_23704(t2,t3,((C_word*)t0)[3],((C_word*)t0)[2]);}

/* k39021 in k39017 in k39010 in k39001 in k38995 in a38992 in k25139 in k25136 in k25133 in k25130 in k25127 in k25124 in k25121 in k25118 in k25115 in k25112 in k25109 in k25106 in k25103 in k25100 in k25097 in k25094 in k25091 in k25088 in k25085 in k25082 in k24943 in k24940 in k24937 in k24934 in k24878 in k24875 in k24872 in k24869 in k24866 in k24863 in k24860 in k24857 in k23555 in k23486 in k23293 in k23290 in k23185 in k23134 in k11783 in k10718 in k10715 in k7274 in k7271 in k6978 in k6975 in k6971 in k6680 in k6677 in k6674 in k6671 */
static void C_ccall f_39023(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_39023,2,t0,t1);}
t2=((C_word*)t0)[3];
((C_proc2)(void*)(*((C_word*)t2+1)))(2,t2,(C_word)C_a_i_list(&a,3,lf[20],((C_word*)t0)[2],t1));}

/* a38924 in k25139 in k25136 in k25133 in k25130 in k25127 in k25124 in k25121 in k25118 in k25115 in k25112 in k25109 in k25106 in k25103 in k25100 in k25097 in k25094 in k25091 in k25088 in k25085 in k25082 in k24943 in k24940 in k24937 in k24934 in k24878 in k24875 in k24872 in k24869 in k24866 in k24863 in k24860 in k24857 in k23555 in k23486 in k23293 in k23290 in k23185 in k23134 in k11783 in k10718 in k10715 in k7274 in k7271 in k6978 in k6975 in k6971 in k6680 in k6677 in k6674 in k6671 */
static void C_ccall f_38925(C_word c,C_word t0,C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word ab[13],*a=ab;
if(c!=4) C_bad_argc_2(c,4,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr4,(void*)f_38925,4,t0,t1,t2,t3);}
t4=(C_word)C_i_car(t2);
t5=(C_word)C_i_cadr(t2);
t6=C_SCHEME_END_OF_LIST;
t7=(*a=C_VECTOR_TYPE|1,a[1]=t6,tmp=(C_word)a,a+=2,tmp);
t8=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_38938,a[2]=t7,a[3]=t1,tmp=(C_word)a,a+=4,tmp);
t9=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_38944,a[2]=t8,a[3]=t7,a[4]=t5,a[5]=t4,a[6]=t2,tmp=(C_word)a,a+=7,tmp);
C_trace("ChickenBridge.scm: 380  token-unit-type=?");
f_23575(t9,t4,C_fix(14336));}

/* k38942 in a38924 in k25139 in k25136 in k25133 in k25130 in k25127 in k25124 in k25121 in k25118 in k25115 in k25112 in k25109 in k25106 in k25103 in k25100 in k25097 in k25094 in k25091 in k25088 in k25085 in k25082 in k24943 in k24940 in k24937 in k24934 in k24878 in k24875 in k24872 in k24869 in k24866 in k24863 in k24860 in k24857 in k23555 in k23486 in k23293 in k23290 in k23185 in k23134 in k11783 in k10718 in k10715 in k7274 in k7271 in k6978 in k6975 in k6971 in k6680 in k6677 in k6674 in k6671 */
static void C_ccall f_38944(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word t14;
C_word t15;
C_word t16;
C_word t17;
C_word ab[29],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_38944,2,t0,t1);}
if(C_truep(t1)){
t2=(C_word)C_i_cadddr(((C_word*)t0)[6]);
t3=t2;
t4=(*a=C_VECTOR_TYPE|1,a[1]=t3,tmp=(C_word)a,a+=2,tmp);
t5=C_SCHEME_FALSE;
t6=(*a=C_VECTOR_TYPE|1,a[1]=t5,tmp=(C_word)a,a+=2,tmp);
t7=C_SCHEME_FALSE;
t8=(*a=C_VECTOR_TYPE|1,a[1]=t7,tmp=(C_word)a,a+=2,tmp);
t9=(*a=C_CLOSURE_TYPE|9,a[1]=(C_word)f_38950,a[2]=((C_word*)t0)[6],a[3]=((C_word*)t0)[2],a[4]=((C_word*)t0)[3],a[5]=t8,a[6]=t6,a[7]=((C_word*)t0)[4],a[8]=((C_word*)t0)[5],a[9]=t4,tmp=(C_word)a,a+=10,tmp);
t10=((C_word*)t4)[1];
if(C_truep(t10)){
t11=(C_word)C_i_car(((C_word*)t4)[1]);
t12=C_set_block_item(t6,0,t11);
t13=t9;
f_38950(t13,t12);}
else{
t11=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_38979,a[2]=t9,a[3]=t6,tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 380  make-parse-unit");
f_23490(t11,C_fix(4608),lf[951],C_SCHEME_FALSE);}}
else{
t2=(C_word)C_i_caddr(((C_word*)t0)[6]);
t3=(C_word)C_a_i_list(&a,3,((C_word*)t0)[5],((C_word*)t0)[4],t2);
t4=C_mutate(((C_word *)((C_word*)t0)[3])+1,t3);
t5=((C_word*)t0)[2];
f_38938(t5,t4);}}

/* k38977 in k38942 in a38924 in k25139 in k25136 in k25133 in k25130 in k25127 in k25124 in k25121 in k25118 in k25115 in k25112 in k25109 in k25106 in k25103 in k25100 in k25097 in k25094 in k25091 in k25088 in k25085 in k25082 in k24943 in k24940 in k24937 in k24934 in k24878 in k24875 in k24872 in k24869 in k24866 in k24863 in k24860 in k24857 in k23555 in k23486 in k23293 in k23290 in k23185 in k23134 in k11783 in k10718 in k10715 in k7274 in k7271 in k6978 in k6975 in k6971 in k6680 in k6677 in k6674 in k6671 */
static void C_ccall f_38979(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[3])+1,t1);
t3=((C_word*)t0)[2];
f_38950(t3,t2);}

/* k38948 in k38942 in a38924 in k25139 in k25136 in k25133 in k25130 in k25127 in k25124 in k25121 in k25118 in k25115 in k25112 in k25109 in k25106 in k25103 in k25100 in k25097 in k25094 in k25091 in k25088 in k25085 in k25082 in k24943 in k24940 in k24937 in k24934 in k24878 in k24875 in k24872 in k24869 in k24866 in k24863 in k24860 in k24857 in k23555 in k23486 in k23293 in k23290 in k23185 in k23134 in k11783 in k10718 in k10715 in k7274 in k7271 in k6978 in k6975 in k6971 in k6680 in k6677 in k6674 in k6671 */
static void C_fcall f_38950(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_38950,NULL,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|8,a[1]=(C_word)f_38954,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],a[7]=((C_word*)t0)[8],a[8]=((C_word*)t0)[9],tmp=(C_word)a,a+=9,tmp);
C_trace("ChickenBridge.scm: 380  fifth");
t3=C_retrieve(lf[66]);
((C_proc3)C_retrieve_proc(t3))(3,t3,t2,((C_word*)t0)[2]);}

/* k38952 in k38948 in k38942 in a38924 in k25139 in k25136 in k25133 in k25130 in k25127 in k25124 in k25121 in k25118 in k25115 in k25112 in k25109 in k25106 in k25103 in k25100 in k25097 in k25094 in k25091 in k25088 in k25085 in k25082 in k24943 in k24940 in k24937 in k24934 in k24878 in k24875 in k24872 in k24869 in k24866 in k24863 in k24860 in k24857 in k23555 in k23486 in k23293 in k23290 in k23185 in k23134 in k11783 in k10718 in k10715 in k7274 in k7271 in k6978 in k6975 in k6971 in k6680 in k6677 in k6674 in k6671 */
static void C_ccall f_38954(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word ab[12],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_38954,2,t0,t1);}
t2=C_mutate(((C_word *)((C_word*)t0)[8])+1,t1);
t3=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_38957,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],a[7]=((C_word*)t0)[7],tmp=(C_word)a,a+=8,tmp);
t4=((C_word*)((C_word*)t0)[8])[1];
if(C_truep(t4)){
t5=(C_word)C_i_cadr(((C_word*)((C_word*)t0)[8])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[4])+1,t5);
t7=t3;
f_38957(t7,t6);}
else{
t5=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_38968,a[2]=t3,a[3]=((C_word*)t0)[4],tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 380  make-parse-unit");
f_23490(t5,C_fix(4608),lf[950],C_SCHEME_FALSE);}}

/* k38966 in k38952 in k38948 in k38942 in a38924 in k25139 in k25136 in k25133 in k25130 in k25127 in k25124 in k25121 in k25118 in k25115 in k25112 in k25109 in k25106 in k25103 in k25100 in k25097 in k25094 in k25091 in k25088 in k25085 in k25082 in k24943 in k24940 in k24937 in k24934 in k24878 in k24875 in k24872 in k24869 in k24866 in k24863 in k24860 in k24857 in k23555 in k23486 in k23293 in k23290 in k23185 in k23134 in k11783 in k10718 in k10715 in k7274 in k7271 in k6978 in k6975 in k6971 in k6680 in k6677 in k6674 in k6671 */
static void C_ccall f_38968(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[3])+1,t1);
t3=((C_word*)t0)[2];
f_38957(t3,t2);}

/* k38955 in k38952 in k38948 in k38942 in a38924 in k25139 in k25136 in k25133 in k25130 in k25127 in k25124 in k25121 in k25118 in k25115 in k25112 in k25109 in k25106 in k25103 in k25100 in k25097 in k25094 in k25091 in k25088 in k25085 in k25082 in k24943 in k24940 in k24937 in k24934 in k24878 in k24875 in k24872 in k24869 in k24866 in k24863 in k24860 in k24857 in k23555 in k23486 in k23293 in k23290 in k23185 in k23134 in k11783 in k10718 in k10715 in k7274 in k7271 in k6978 in k6975 in k6971 in k6680 in k6677 in k6674 in k6671 */
static void C_fcall f_38957(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[12],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_38957,NULL,2,t0,t1);}
t2=(C_word)C_a_i_list(&a,4,((C_word*)t0)[7],((C_word*)t0)[6],((C_word*)((C_word*)t0)[5])[1],((C_word*)((C_word*)t0)[4])[1]);
t3=C_mutate(((C_word *)((C_word*)t0)[3])+1,t2);
t4=((C_word*)t0)[2];
f_38938(t4,t3);}

/* k38936 in a38924 in k25139 in k25136 in k25133 in k25130 in k25127 in k25124 in k25121 in k25118 in k25115 in k25112 in k25109 in k25106 in k25103 in k25100 in k25097 in k25094 in k25091 in k25088 in k25085 in k25082 in k24943 in k24940 in k24937 in k24934 in k24878 in k24875 in k24872 in k24869 in k24866 in k24863 in k24860 in k24857 in k23555 in k23486 in k23293 in k23290 in k23185 in k23134 in k11783 in k10718 in k10715 in k7274 in k7271 in k6978 in k6975 in k6971 in k6680 in k6677 in k6674 in k6671 */
static void C_fcall f_38938(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 380  make-parse-unit");
f_23490(((C_word*)t0)[3],C_fix(32256),((C_word*)((C_word*)t0)[2])[1],C_SCHEME_FALSE);}

/* k38917 in k25139 in k25136 in k25133 in k25130 in k25127 in k25124 in k25121 in k25118 in k25115 in k25112 in k25109 in k25106 in k25103 in k25100 in k25097 in k25094 in k25091 in k25088 in k25085 in k25082 in k24943 in k24940 in k24937 in k24934 in k24878 in k24875 in k24872 in k24869 in k24866 in k24863 in k24860 in k24857 in k23555 in k23486 in k23293 in k23290 in k23185 in k23134 in k11783 in k10718 in k10715 in k7274 in k7271 in k6978 in k6975 in k6971 in k6680 in k6677 in k6674 in k6671 */
static void C_ccall f_38919(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 380  hash-table-set!");
t2=C_retrieve(lf[852]);
((C_proc5)C_retrieve_proc(t2))(5,t2,((C_word*)t0)[2],C_retrieve2(lf[424],"*rules*"),C_fix(32256),t1);}

/* k25142 in k25139 in k25136 in k25133 in k25130 in k25127 in k25124 in k25121 in k25118 in k25115 in k25112 in k25109 in k25106 in k25103 in k25100 in k25097 in k25094 in k25091 in k25088 in k25085 in k25082 in k24943 in k24940 in k24937 in k24934 in k24878 in k24875 in k24872 in k24869 in k24866 in k24863 in k24860 in k24857 in k23555 in k23486 in k23293 in k23290 in k23185 in k23134 in k11783 in k10718 in k10715 in k7274 in k7271 in k6978 in k6975 in k6971 in k6680 in k6677 in k6674 in k6671 */
static void C_ccall f_25144(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word t14;
C_word t15;
C_word t16;
C_word t17;
C_word t18;
C_word t19;
C_word t20;
C_word t21;
C_word t22;
C_word t23;
C_word t24;
C_word t25;
C_word t26;
C_word t27;
C_word t28;
C_word t29;
C_word t30;
C_word t31;
C_word t32;
C_word t33;
C_word t34;
C_word t35;
C_word t36;
C_word t37;
C_word t38;
C_word t39;
C_word t40;
C_word t41;
C_word t42;
C_word t43;
C_word t44;
C_word t45;
C_word t46;
C_word t47;
C_word t48;
C_word t49;
C_word t50;
C_word t51;
C_word t52;
C_word t53;
C_word t54;
C_word t55;
C_word t56;
C_word t57;
C_word t58;
C_word t59;
C_word t60;
C_word ab[174],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_25144,2,t0,t1);}
t2=C_mutate(&lf[480],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_25146,a[2]=((C_word)li397),tmp=(C_word)a,a+=3,tmp));
t3=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_25667,a[2]=((C_word*)t0)[2],tmp=(C_word)a,a+=3,tmp);
t4=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_38647,a[2]=t3,tmp=(C_word)a,a+=3,tmp);
t5=(C_word)C_a_i_cons(&a,2,C_fix(29696),C_SCHEME_END_OF_LIST);
t6=(C_word)C_a_i_cons(&a,2,C_fix(23296),t5);
t7=(C_word)C_a_i_cons(&a,2,lf[456],t6);
t8=(C_word)C_a_i_cons(&a,2,C_fix(29696),C_SCHEME_END_OF_LIST);
t9=(C_word)C_a_i_cons(&a,2,C_fix(18944),t8);
t10=(C_word)C_a_i_cons(&a,2,lf[473],t9);
t11=(C_word)C_a_i_cons(&a,2,t10,C_SCHEME_END_OF_LIST);
t12=(C_word)C_a_i_cons(&a,2,C_fix(29696),t11);
t13=(C_word)C_a_i_cons(&a,2,C_fix(10756),t12);
t14=(C_word)C_a_i_cons(&a,2,C_fix(25088),t13);
t15=(C_word)C_a_i_cons(&a,2,C_fix(22272),t14);
t16=(C_word)C_a_i_cons(&a,2,lf[456],t15);
t17=(C_word)C_a_i_cons(&a,2,C_fix(29696),C_SCHEME_END_OF_LIST);
t18=(C_word)C_a_i_cons(&a,2,C_fix(22784),t17);
t19=(C_word)C_a_i_cons(&a,2,C_fix(25088),t18);
t20=(C_word)C_a_i_cons(&a,2,C_fix(22272),t19);
t21=(C_word)C_a_i_cons(&a,2,lf[456],t20);
t22=(C_word)C_a_i_cons(&a,2,C_fix(21760),C_SCHEME_END_OF_LIST);
t23=(C_word)C_a_i_cons(&a,2,C_fix(20992),t22);
t24=(C_word)C_a_i_cons(&a,2,C_fix(23552),t23);
t25=(C_word)C_a_i_cons(&a,2,C_fix(21248),t24);
t26=(C_word)C_a_i_cons(&a,2,lf[457],t25);
t27=(C_word)C_a_i_cons(&a,2,C_fix(29696),C_SCHEME_END_OF_LIST);
t28=(C_word)C_a_i_cons(&a,2,t26,t27);
t29=(C_word)C_a_i_cons(&a,2,lf[473],t28);
t30=(C_word)C_a_i_cons(&a,2,C_fix(29696),C_SCHEME_END_OF_LIST);
t31=(C_word)C_a_i_cons(&a,2,C_fix(21504),t30);
t32=(C_word)C_a_i_cons(&a,2,lf[473],t31);
t33=(C_word)C_a_i_cons(&a,2,t32,C_SCHEME_END_OF_LIST);
t34=(C_word)C_a_i_cons(&a,2,t29,t33);
t35=(C_word)C_a_i_cons(&a,2,C_fix(29696),t34);
t36=(C_word)C_a_i_cons(&a,2,C_fix(22528),t35);
t37=(C_word)C_a_i_cons(&a,2,C_fix(25088),t36);
t38=(C_word)C_a_i_cons(&a,2,C_fix(22272),t37);
t39=(C_word)C_a_i_cons(&a,2,lf[456],t38);
t40=(C_word)C_a_i_cons(&a,2,C_fix(21760),C_SCHEME_END_OF_LIST);
t41=(C_word)C_a_i_cons(&a,2,C_fix(20992),t40);
t42=(C_word)C_a_i_cons(&a,2,C_fix(23552),t41);
t43=(C_word)C_a_i_cons(&a,2,C_fix(21248),t42);
t44=(C_word)C_a_i_cons(&a,2,lf[457],t43);
t45=(C_word)C_a_i_cons(&a,2,C_fix(29696),C_SCHEME_END_OF_LIST);
t46=(C_word)C_a_i_cons(&a,2,C_fix(21504),t45);
t47=(C_word)C_a_i_cons(&a,2,lf[473],t46);
t48=(C_word)C_a_i_cons(&a,2,t47,C_SCHEME_END_OF_LIST);
t49=(C_word)C_a_i_cons(&a,2,C_fix(29696),t48);
t50=(C_word)C_a_i_cons(&a,2,t44,t49);
t51=(C_word)C_a_i_cons(&a,2,C_fix(25088),t50);
t52=(C_word)C_a_i_cons(&a,2,C_fix(22272),t51);
t53=(C_word)C_a_i_cons(&a,2,lf[456],t52);
t54=(C_word)C_a_i_cons(&a,2,t53,C_SCHEME_END_OF_LIST);
t55=(C_word)C_a_i_cons(&a,2,t39,t54);
t56=(C_word)C_a_i_cons(&a,2,t21,t55);
t57=(C_word)C_a_i_cons(&a,2,t16,t56);
t58=(C_word)C_a_i_cons(&a,2,t7,t57);
t59=(C_word)C_a_i_cons(&a,2,lf[457],t58);
C_trace("ChickenBridge.scm: 380  make-rule");
f_23189(t4,lf[949],C_fix(33024),t59,C_retrieve2(lf[480],"sal-parse-stepping"),C_SCHEME_FALSE);}

/* k38645 in k25142 in k25139 in k25136 in k25133 in k25130 in k25127 in k25124 in k25121 in k25118 in k25115 in k25112 in k25109 in k25106 in k25103 in k25100 in k25097 in k25094 in k25091 in k25088 in k25085 in k25082 in k24943 in k24940 in k24937 in k24934 in k24878 in k24875 in k24872 in k24869 in k24866 in k24863 in k24860 in k24857 in k23555 in k23486 in k23293 in k23290 in k23185 in k23134 in k11783 in k10718 in k10715 in k7274 in k7271 in k6978 in k6975 in k6971 in k6680 in k6677 in k6674 in k6671 */
static void C_ccall f_38647(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 380  hash-table-set!");
t2=C_retrieve(lf[852]);
((C_proc5)C_retrieve_proc(t2))(5,t2,((C_word*)t0)[2],C_retrieve2(lf[424],"*rules*"),C_fix(33024),t1);}

/* k25665 in k25142 in k25139 in k25136 in k25133 in k25130 in k25127 in k25124 in k25121 in k25118 in k25115 in k25112 in k25109 in k25106 in k25103 in k25100 in k25097 in k25094 in k25091 in k25088 in k25085 in k25082 in k24943 in k24940 in k24937 in k24934 in k24878 in k24875 in k24872 in k24869 in k24866 in k24863 in k24860 in k24857 in k23555 in k23486 in k23293 in k23290 in k23185 in k23134 in k11783 in k10718 in k10715 in k7274 in k7271 in k6978 in k6975 in k6971 in k6680 in k6677 in k6674 in k6671 */
static void C_ccall f_25667(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word t14;
C_word ab[37],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_25667,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_25670,a[2]=((C_word*)t0)[2],tmp=(C_word)a,a+=3,tmp);
t3=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_38591,a[2]=t2,tmp=(C_word)a,a+=3,tmp);
t4=(C_word)C_a_i_cons(&a,2,C_fix(29696),C_SCHEME_END_OF_LIST);
t5=(C_word)C_a_i_cons(&a,2,C_fix(20224),t4);
t6=(C_word)C_a_i_cons(&a,2,lf[456],t5);
t7=(C_word)C_a_i_cons(&a,2,C_fix(29696),C_SCHEME_END_OF_LIST);
t8=(C_word)C_a_i_cons(&a,2,C_fix(19456),t7);
t9=(C_word)C_a_i_cons(&a,2,lf[456],t8);
t10=(C_word)C_a_i_cons(&a,2,t9,C_SCHEME_END_OF_LIST);
t11=(C_word)C_a_i_cons(&a,2,t6,t10);
t12=(C_word)C_a_i_cons(&a,2,lf[457],t11);
t13=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_38599,a[2]=t12,a[3]=t3,tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 380  simple-unit-parser");
f_23945(t13,C_fix(33280));}

/* k38597 in k25665 in k25142 in k25139 in k25136 in k25133 in k25130 in k25127 in k25124 in k25121 in k25118 in k25115 in k25112 in k25109 in k25106 in k25103 in k25100 in k25097 in k25094 in k25091 in k25088 in k25085 in k25082 in k24943 in k24940 in k24937 in k24934 in k24878 in k24875 in k24872 in k24869 in k24866 in k24863 in k24860 in k24857 in k23555 in k23486 in k23293 in k23290 in k23185 in k23134 in k11783 in k10718 in k10715 in k7274 in k7271 in k6978 in k6975 in k6971 in k6680 in k6677 in k6674 in k6671 */
static void C_ccall f_38599(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 380  make-rule");
f_23189(((C_word*)t0)[3],lf[948],C_fix(33280),((C_word*)t0)[2],t1,C_SCHEME_FALSE);}

/* k38589 in k25665 in k25142 in k25139 in k25136 in k25133 in k25130 in k25127 in k25124 in k25121 in k25118 in k25115 in k25112 in k25109 in k25106 in k25103 in k25100 in k25097 in k25094 in k25091 in k25088 in k25085 in k25082 in k24943 in k24940 in k24937 in k24934 in k24878 in k24875 in k24872 in k24869 in k24866 in k24863 in k24860 in k24857 in k23555 in k23486 in k23293 in k23290 in k23185 in k23134 in k11783 in k10718 in k10715 in k7274 in k7271 in k6978 in k6975 in k6971 in k6680 in k6677 in k6674 in k6671 */
static void C_ccall f_38591(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 380  hash-table-set!");
t2=C_retrieve(lf[852]);
((C_proc5)C_retrieve_proc(t2))(5,t2,((C_word*)t0)[2],C_retrieve2(lf[424],"*rules*"),C_fix(33280),t1);}

/* k25668 in k25665 in k25142 in k25139 in k25136 in k25133 in k25130 in k25127 in k25124 in k25121 in k25118 in k25115 in k25112 in k25109 in k25106 in k25103 in k25100 in k25097 in k25094 in k25091 in k25088 in k25085 in k25082 in k24943 in k24940 in k24937 in k24934 in k24878 in k24875 in k24872 in k24869 in k24866 in k24863 in k24860 in k24857 in k23555 in k23486 in k23293 in k23290 in k23185 in k23134 in k11783 in k10718 in k10715 in k7274 in k7271 in k6978 in k6975 in k6971 in k6680 in k6677 in k6674 in k6671 */
static void C_ccall f_25670(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word t14;
C_word t15;
C_word t16;
C_word t17;
C_word t18;
C_word t19;
C_word t20;
C_word t21;
C_word t22;
C_word t23;
C_word t24;
C_word t25;
C_word t26;
C_word t27;
C_word t28;
C_word ab[78],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_25670,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_26253,a[2]=((C_word*)t0)[2],tmp=(C_word)a,a+=3,tmp);
t3=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_38419,a[2]=t2,tmp=(C_word)a,a+=3,tmp);
t4=(C_word)C_a_i_cons(&a,2,C_fix(16144),C_SCHEME_END_OF_LIST);
t5=(C_word)C_a_i_cons(&a,2,C_fix(14864),t4);
t6=(C_word)C_a_i_cons(&a,2,lf[457],t5);
t7=(C_word)C_a_i_cons(&a,2,C_fix(29952),C_SCHEME_END_OF_LIST);
t8=(C_word)C_a_i_cons(&a,2,lf[473],t7);
t9=(C_word)C_a_i_cons(&a,2,C_fix(33024),C_SCHEME_END_OF_LIST);
t10=(C_word)C_a_i_cons(&a,2,lf[129],t9);
t11=(C_word)C_a_i_cons(&a,2,C_fix(33280),C_SCHEME_END_OF_LIST);
t12=(C_word)C_a_i_cons(&a,2,lf[129],t11);
t13=(C_word)C_a_i_cons(&a,2,C_fix(36608),C_SCHEME_END_OF_LIST);
t14=(C_word)C_a_i_cons(&a,2,lf[127],t13);
t15=(C_word)C_a_i_cons(&a,2,C_fix(36608),C_SCHEME_END_OF_LIST);
t16=(C_word)C_a_i_cons(&a,2,C_fix(22016),t15);
t17=(C_word)C_a_i_cons(&a,2,lf[473],t16);
t18=(C_word)C_a_i_cons(&a,2,C_fix(18193),C_SCHEME_END_OF_LIST);
t19=(C_word)C_a_i_cons(&a,2,t17,t18);
t20=(C_word)C_a_i_cons(&a,2,t14,t19);
t21=(C_word)C_a_i_cons(&a,2,t12,t20);
t22=(C_word)C_a_i_cons(&a,2,t10,t21);
t23=(C_word)C_a_i_cons(&a,2,t8,t22);
t24=(C_word)C_a_i_cons(&a,2,t6,t23);
t25=(C_word)C_a_i_cons(&a,2,lf[456],t24);
t26=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_38425,a[2]=((C_word)li638),tmp=(C_word)a,a+=3,tmp);
t27=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_38471,a[2]=((C_word)li643),tmp=(C_word)a,a+=3,tmp);
C_trace("ChickenBridge.scm: 380  make-rule");
f_23189(t3,lf[947],C_fix(32512),t25,t26,t27);}

/* a38470 in k25668 in k25665 in k25142 in k25139 in k25136 in k25133 in k25130 in k25127 in k25124 in k25121 in k25118 in k25115 in k25112 in k25109 in k25106 in k25103 in k25100 in k25097 in k25094 in k25091 in k25088 in k25085 in k25082 in k24943 in k24940 in k24937 in k24934 in k24878 in k24875 in k24872 in k24869 in k24866 in k24863 in k24860 in k24857 in k23555 in k23486 in k23293 in k23290 in k23185 in k23134 in k11783 in k10718 in k10715 in k7274 in k7271 in k6978 in k6975 in k6971 in k6680 in k6677 in k6674 in k6671 */
static void C_ccall f_38471(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4){
C_word tmp;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word ab[7],*a=ab;
if(c!=5) C_bad_argc_2(c,5,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr5,(void*)f_38471,5,t0,t1,t2,t3,t4);}
t5=t3;
t6=(*a=C_VECTOR_TYPE|1,a[1]=t5,tmp=(C_word)a,a+=2,tmp);
t7=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_25676,a[2]=t4,a[3]=t6,a[4]=t1,tmp=(C_word)a,a+=5,tmp);
C_trace("ChickenBridge.scm: 380  parse-unit-parsed");
f_23529(t7,t2);}

/* k25674 in a38470 in k25668 in k25665 in k25142 in k25139 in k25136 in k25133 in k25130 in k25127 in k25124 in k25121 in k25118 in k25115 in k25112 in k25109 in k25106 in k25103 in k25100 in k25097 in k25094 in k25091 in k25088 in k25085 in k25082 in k24943 in k24940 in k24937 in k24934 in k24878 in k24875 in k24872 in k24869 in k24866 in k24863 in k24860 in k24857 in k23555 in k23486 in k23293 in k23290 in k23185 in k23134 in k11783 in k10718 in k10715 in k7274 in k7271 in k6978 in k6975 in k6971 in k6680 in k6677 in k6674 in k6671 */
static void C_ccall f_25676(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word t14;
C_word t15;
C_word t16;
C_word t17;
C_word t18;
C_word t19;
C_word ab[33],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_25676,2,t0,t1);}
t2=t1;
t3=(*a=C_VECTOR_TYPE|1,a[1]=t2,tmp=(C_word)a,a+=2,tmp);
t4=C_SCHEME_FALSE;
t5=(*a=C_VECTOR_TYPE|1,a[1]=t4,tmp=(C_word)a,a+=2,tmp);
t6=C_SCHEME_END_OF_LIST;
t7=(*a=C_VECTOR_TYPE|1,a[1]=t6,tmp=(C_word)a,a+=2,tmp);
t8=C_SCHEME_END_OF_LIST;
t9=(*a=C_VECTOR_TYPE|1,a[1]=t8,tmp=(C_word)a,a+=2,tmp);
t10=C_SCHEME_END_OF_LIST;
t11=(*a=C_VECTOR_TYPE|1,a[1]=t10,tmp=(C_word)a,a+=2,tmp);
t12=C_SCHEME_END_OF_LIST;
t13=(*a=C_VECTOR_TYPE|1,a[1]=t12,tmp=(C_word)a,a+=2,tmp);
t14=C_SCHEME_END_OF_LIST;
t15=(*a=C_VECTOR_TYPE|1,a[1]=t14,tmp=(C_word)a,a+=2,tmp);
t16=(*a=C_CLOSURE_TYPE|11,a[1]=(C_word)f_25694,a[2]=t11,a[3]=((C_word*)t0)[2],a[4]=((C_word*)t0)[3],a[5]=t7,a[6]=((C_word*)t0)[4],a[7]=t15,a[8]=t13,a[9]=t5,a[10]=t9,a[11]=t3,tmp=(C_word)a,a+=12,tmp);
t17=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_26212,a[2]=t3,a[3]=((C_word*)t0)[2],a[4]=t5,a[5]=t16,a[6]=((C_word*)t0)[3],tmp=(C_word)a,a+=7,tmp);
t18=(C_word)C_i_car(((C_word*)t3)[1]);
C_trace("ChickenBridge.scm: 380  token-unit-type=?");
f_23575(t17,t18,C_fix(14864));}

/* k26210 in k25674 in a38470 in k25668 in k25665 in k25142 in k25139 in k25136 in k25133 in k25130 in k25127 in k25124 in k25121 in k25118 in k25115 in k25112 in k25109 in k25106 in k25103 in k25100 in k25097 in k25094 in k25091 in k25088 in k25085 in k25082 in k24943 in k24940 in k24937 in k24934 in k24878 in k24875 in k24872 in k24869 in k24866 in k24863 in k24860 in k24857 in k23555 in k23486 in k23293 in k23290 in k23185 in k23134 in k11783 in k10718 in k10715 in k7274 in k7271 in k6978 in k6975 in k6971 in k6680 in k6677 in k6674 in k6671 */
static void C_ccall f_26212(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[14],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_26212,2,t0,t1);}
if(C_truep(t1)){
t2=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_26216,a[2]=((C_word*)t0)[5],a[3]=((C_word*)t0)[6],tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 380  add-emit-info");
f_23619(t2,lf[944],C_SCHEME_TRUE,((C_word*)((C_word*)t0)[6])[1]);}
else{
t2=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_26219,a[2]=((C_word*)t0)[5],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[6],tmp=(C_word)a,a+=5,tmp);
t3=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_26246,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=t2,tmp=(C_word)a,a+=5,tmp);
C_trace("ChickenBridge.scm: 380  get-emit-info");
f_23607(t3,lf[932],((C_word*)((C_word*)t0)[6])[1]);}}

/* k26244 in k26210 in k25674 in a38470 in k25668 in k25665 in k25142 in k25139 in k25136 in k25133 in k25130 in k25127 in k25124 in k25121 in k25118 in k25115 in k25112 in k25109 in k25106 in k25103 in k25100 in k25097 in k25094 in k25091 in k25088 in k25085 in k25082 in k24943 in k24940 in k24937 in k24934 in k24878 in k24875 in k24872 in k24869 in k24866 in k24863 in k24860 in k24857 in k23555 in k23486 in k23293 in k23290 in k23185 in k23134 in k11783 in k10718 in k10715 in k7274 in k7271 in k6978 in k6975 in k6971 in k6680 in k6677 in k6674 in k6671 */
static void C_ccall f_26246(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_26246,2,t0,t1);}
if(C_truep(t1)){
t2=((C_word*)t0)[4];
f_26219(2,t2,C_SCHEME_UNDEFINED);}
else{
t2=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_26234,a[2]=((C_word*)t0)[4],a[3]=((C_word*)t0)[3],tmp=(C_word)a,a+=4,tmp);
t3=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_26238,a[2]=t2,tmp=(C_word)a,a+=3,tmp);
t4=(C_word)C_i_car(((C_word*)((C_word*)t0)[2])[1]);
C_trace("ChickenBridge.scm: 380  parse-unit-position");
f_23547(t3,t4);}}

/* k26236 in k26244 in k26210 in k25674 in a38470 in k25668 in k25665 in k25142 in k25139 in k25136 in k25133 in k25130 in k25127 in k25124 in k25121 in k25118 in k25115 in k25112 in k25109 in k25106 in k25103 in k25100 in k25097 in k25094 in k25091 in k25088 in k25085 in k25082 in k24943 in k24940 in k24937 in k24934 in k24878 in k24875 in k24872 in k24869 in k24866 in k24863 in k24860 in k24857 in k23555 in k23486 in k23293 in k23290 in k23185 in k23134 in k11783 in k10718 in k10715 in k7274 in k7271 in k6978 in k6975 in k6971 in k6680 in k6677 in k6674 in k6671 */
static void C_ccall f_26238(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 380  make-parse-error");
f_23439(((C_word*)t0)[2],lf[946],t1);}

/* k26232 in k26244 in k26210 in k25674 in a38470 in k25668 in k25665 in k25142 in k25139 in k25136 in k25133 in k25130 in k25127 in k25124 in k25121 in k25118 in k25115 in k25112 in k25109 in k25106 in k25103 in k25100 in k25097 in k25094 in k25091 in k25088 in k25085 in k25082 in k24943 in k24940 in k24937 in k24934 in k24878 in k24875 in k24872 in k24869 in k24866 in k24863 in k24860 in k24857 in k23555 in k23486 in k23293 in k23290 in k23185 in k23134 in k11783 in k10718 in k10715 in k7274 in k7271 in k6978 in k6975 in k6971 in k6680 in k6677 in k6674 in k6671 */
static void C_ccall f_26234(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 380  errf");
t2=((C_word*)t0)[3];
((C_proc3)C_retrieve_proc(t2))(3,t2,((C_word*)t0)[2],t1);}

/* k26217 in k26210 in k25674 in a38470 in k25668 in k25665 in k25142 in k25139 in k25136 in k25133 in k25130 in k25127 in k25124 in k25121 in k25118 in k25115 in k25112 in k25109 in k25106 in k25103 in k25100 in k25097 in k25094 in k25091 in k25088 in k25085 in k25082 in k24943 in k24940 in k24937 in k24934 in k24878 in k24875 in k24872 in k24869 in k24866 in k24863 in k24860 in k24857 in k23555 in k23486 in k23293 in k23290 in k23185 in k23134 in k11783 in k10718 in k10715 in k7274 in k7271 in k6978 in k6975 in k6971 in k6680 in k6677 in k6674 in k6671 */
static void C_ccall f_26219(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[5],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_26219,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_26223,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],tmp=(C_word)a,a+=5,tmp);
C_trace("ChickenBridge.scm: 380  add-emit-info");
f_23619(t2,lf[945],C_SCHEME_TRUE,((C_word*)((C_word*)t0)[4])[1]);}

/* k26221 in k26217 in k26210 in k25674 in a38470 in k25668 in k25665 in k25142 in k25139 in k25136 in k25133 in k25130 in k25127 in k25124 in k25121 in k25118 in k25115 in k25112 in k25109 in k25106 in k25103 in k25100 in k25097 in k25094 in k25091 in k25088 in k25085 in k25082 in k24943 in k24940 in k24937 in k24934 in k24878 in k24875 in k24872 in k24869 in k24866 in k24863 in k24860 in k24857 in k23555 in k23486 in k23293 in k23290 in k23185 in k23134 in k11783 in k10718 in k10715 in k7274 in k7271 in k6978 in k6975 in k6971 in k6680 in k6677 in k6674 in k6671 */
static void C_ccall f_26223(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[4])+1,t1);
t3=C_set_block_item(((C_word*)t0)[3],0,C_SCHEME_TRUE);
t4=((C_word*)t0)[2];
f_25694(t4,t3);}

/* k26214 in k26210 in k25674 in a38470 in k25668 in k25665 in k25142 in k25139 in k25136 in k25133 in k25130 in k25127 in k25124 in k25121 in k25118 in k25115 in k25112 in k25109 in k25106 in k25103 in k25100 in k25097 in k25094 in k25091 in k25088 in k25085 in k25082 in k24943 in k24940 in k24937 in k24934 in k24878 in k24875 in k24872 in k24869 in k24866 in k24863 in k24860 in k24857 in k23555 in k23486 in k23293 in k23290 in k23185 in k23134 in k11783 in k10718 in k10715 in k7274 in k7271 in k6978 in k6975 in k6971 in k6680 in k6677 in k6674 in k6671 */
static void C_ccall f_26216(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[3])+1,t1);
t3=((C_word*)t0)[2];
f_25694(t3,t2);}

/* k25692 in k25674 in a38470 in k25668 in k25665 in k25142 in k25139 in k25136 in k25133 in k25130 in k25127 in k25124 in k25121 in k25118 in k25115 in k25112 in k25109 in k25106 in k25103 in k25100 in k25097 in k25094 in k25091 in k25088 in k25085 in k25082 in k24943 in k24940 in k24937 in k24934 in k24878 in k24875 in k24872 in k24869 in k24866 in k24863 in k24860 in k24857 in k23555 in k23486 in k23293 in k23290 in k23185 in k23134 in k11783 in k10718 in k10715 in k7274 in k7271 in k6978 in k6975 in k6971 in k6680 in k6677 in k6674 in k6671 */
static void C_fcall f_25694(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word ab[20],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_25694,NULL,2,t0,t1);}
t2=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[11])[1]);
t3=C_mutate(((C_word *)((C_word*)t0)[11])+1,t2);
t4=(*a=C_CLOSURE_TYPE|11,a[1]=(C_word)f_25701,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[11],a[4]=((C_word*)t0)[3],a[5]=((C_word*)t0)[4],a[6]=((C_word*)t0)[5],a[7]=((C_word*)t0)[6],a[8]=((C_word*)t0)[7],a[9]=((C_word*)t0)[8],a[10]=((C_word*)t0)[9],a[11]=((C_word*)t0)[10],tmp=(C_word)a,a+=12,tmp);
if(C_truep((C_word)C_i_car(((C_word*)((C_word*)t0)[11])[1]))){
t5=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_26201,a[2]=t4,a[3]=((C_word*)t0)[5],tmp=(C_word)a,a+=4,tmp);
t6=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_26205,a[2]=((C_word*)t0)[5],a[3]=t5,tmp=(C_word)a,a+=4,tmp);
t7=(C_word)C_i_car(((C_word*)((C_word*)t0)[11])[1]);
C_trace("ChickenBridge.scm: 380  emit");
f_23704(t6,t7,((C_word*)((C_word*)t0)[4])[1],((C_word*)t0)[3]);}
else{
t5=t4;
f_25701(t5,C_SCHEME_UNDEFINED);}}

/* k26203 in k25692 in k25674 in a38470 in k25668 in k25665 in k25142 in k25139 in k25136 in k25133 in k25130 in k25127 in k25124 in k25121 in k25118 in k25115 in k25112 in k25109 in k25106 in k25103 in k25100 in k25097 in k25094 in k25091 in k25088 in k25085 in k25082 in k24943 in k24940 in k24937 in k24934 in k24878 in k24875 in k24872 in k24869 in k24866 in k24863 in k24860 in k24857 in k23555 in k23486 in k23293 in k23290 in k23185 in k23134 in k11783 in k10718 in k10715 in k7274 in k7271 in k6978 in k6975 in k6971 in k6680 in k6677 in k6674 in k6671 */
static void C_ccall f_26205(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 380  append");
t2=*((C_word*)lf[18]+1);
((C_proc4)C_retrieve_proc(t2))(4,t2,((C_word*)t0)[3],((C_word*)((C_word*)t0)[2])[1],t1);}

/* k26199 in k25692 in k25674 in a38470 in k25668 in k25665 in k25142 in k25139 in k25136 in k25133 in k25130 in k25127 in k25124 in k25121 in k25118 in k25115 in k25112 in k25109 in k25106 in k25103 in k25100 in k25097 in k25094 in k25091 in k25088 in k25085 in k25082 in k24943 in k24940 in k24937 in k24934 in k24878 in k24875 in k24872 in k24869 in k24866 in k24863 in k24860 in k24857 in k23555 in k23486 in k23293 in k23290 in k23185 in k23134 in k11783 in k10718 in k10715 in k7274 in k7271 in k6978 in k6975 in k6971 in k6680 in k6677 in k6674 in k6671 */
static void C_ccall f_26201(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[3])+1,t1);
t3=((C_word*)t0)[2];
f_25701(t3,t2);}

/* k25699 in k25692 in k25674 in a38470 in k25668 in k25665 in k25142 in k25139 in k25136 in k25133 in k25130 in k25127 in k25124 in k25121 in k25118 in k25115 in k25112 in k25109 in k25106 in k25103 in k25100 in k25097 in k25094 in k25091 in k25088 in k25085 in k25082 in k24943 in k24940 in k24937 in k24934 in k24878 in k24875 in k24872 in k24869 in k24866 in k24863 in k24860 in k24857 in k23555 in k23486 in k23293 in k23290 in k23185 in k23134 in k11783 in k10718 in k10715 in k7274 in k7271 in k6978 in k6975 in k6971 in k6680 in k6677 in k6674 in k6671 */
static void C_fcall f_25701(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word ab[22],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_25701,NULL,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|11,a[1]=(C_word)f_25704,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],a[7]=((C_word*)t0)[7],a[8]=((C_word*)t0)[8],a[9]=((C_word*)t0)[9],a[10]=((C_word*)t0)[10],a[11]=((C_word*)t0)[11],tmp=(C_word)a,a+=12,tmp);
t3=(C_word)C_i_cadr(((C_word*)((C_word*)t0)[3])[1]);
t4=C_SCHEME_UNDEFINED;
t5=(*a=C_VECTOR_TYPE|1,a[1]=t4,tmp=(C_word)a,a+=2,tmp);
t6=C_set_block_item(t5,0,(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_26076,a[2]=((C_word*)t0)[11],a[3]=((C_word*)t0)[2],a[4]=((C_word*)t0)[9],a[5]=((C_word*)t0)[6],a[6]=t5,a[7]=((C_word)li642),tmp=(C_word)a,a+=8,tmp));
t7=((C_word*)t5)[1];
f_26076(t7,t2,t3);}

/* do3962 in k25699 in k25692 in k25674 in a38470 in k25668 in k25665 in k25142 in k25139 in k25136 in k25133 in k25130 in k25127 in k25124 in k25121 in k25118 in k25115 in k25112 in k25109 in k25106 in k25103 in k25100 in k25097 in k25094 in k25091 in k25088 in k25085 in k25082 in k24943 in k24940 in k24937 in k24934 in k24878 in k24875 in k24872 in k24869 in k24866 in k24863 in k24860 in k24857 in k23555 in k23486 in k23293 in k23290 in k23185 in k23134 in k11783 in k10718 in k10715 in k7274 in k7271 in k6978 in k6975 in k6971 in k6680 in k6677 in k6674 in k6671 */
static void C_fcall f_26076(C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[12],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_26076,NULL,3,t0,t1,t2);}
if(C_truep((C_word)C_i_nullp(t2))){
t3=t1;
((C_proc2)(void*)(*((C_word*)t3+1)))(2,t3,C_SCHEME_FALSE);}
else{
t3=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_26086,a[2]=t1,a[3]=((C_word*)t0)[6],a[4]=t2,tmp=(C_word)a,a+=5,tmp);
t4=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_26097,a[2]=t3,a[3]=((C_word*)t0)[2],a[4]=((C_word*)t0)[3],a[5]=((C_word*)t0)[4],a[6]=((C_word*)t0)[5],tmp=(C_word)a,a+=7,tmp);
t5=(C_word)C_i_car(t2);
C_trace("ChickenBridge.scm: 380  parse-unit-parsed");
f_23529(t4,t5);}}

/* k26095 in do3962 in k25699 in k25692 in k25674 in a38470 in k25668 in k25665 in k25142 in k25139 in k25136 in k25133 in k25130 in k25127 in k25124 in k25121 in k25118 in k25115 in k25112 in k25109 in k25106 in k25103 in k25100 in k25097 in k25094 in k25091 in k25088 in k25085 in k25082 in k24943 in k24940 in k24937 in k24934 in k24878 in k24875 in k24872 in k24869 in k24866 in k24863 in k24860 in k24857 in k23555 in k23486 in k23293 in k23290 in k23185 in k23134 in k11783 in k10718 in k10715 in k7274 in k7271 in k6978 in k6975 in k6971 in k6680 in k6677 in k6674 in k6671 */
static void C_ccall f_26097(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[10],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_26097,2,t0,t1);}
t2=C_SCHEME_UNDEFINED;
t3=(*a=C_VECTOR_TYPE|1,a[1]=t2,tmp=(C_word)a,a+=2,tmp);
t4=C_set_block_item(t3,0,(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_26099,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=t3,a[6]=((C_word*)t0)[6],a[7]=((C_word)li641),tmp=(C_word)a,a+=8,tmp));
t5=((C_word*)t3)[1];
f_26099(t5,((C_word*)t0)[2],t1);}

/* do3965 in k26095 in do3962 in k25699 in k25692 in k25674 in a38470 in k25668 in k25665 in k25142 in k25139 in k25136 in k25133 in k25130 in k25127 in k25124 in k25121 in k25118 in k25115 in k25112 in k25109 in k25106 in k25103 in k25100 in k25097 in k25094 in k25091 in k25088 in k25085 in k25082 in k24943 in k24940 in k24937 in k24934 in k24878 in k24875 in k24872 in k24869 in k24866 in k24863 in k24860 in k24857 in k23555 in k23486 in k23293 in k23290 in k23185 in k23134 in k11783 in k10718 in k10715 in k7274 in k7271 in k6978 in k6975 in k6971 in k6680 in k6677 in k6674 in k6671 */
static void C_fcall f_26099(C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word ab[19],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_26099,NULL,3,t0,t1,t2);}
if(C_truep((C_word)C_i_nullp(t2))){
t3=t1;
((C_proc2)(void*)(*((C_word*)t3+1)))(2,t3,C_SCHEME_FALSE);}
else{
t3=(C_word)C_i_car(t2);
t4=(*a=C_CLOSURE_TYPE|9,a[1]=(C_word)f_26113,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=t3,a[5]=((C_word*)t0)[4],a[6]=t1,a[7]=((C_word*)t0)[5],a[8]=t2,a[9]=((C_word*)t0)[6],tmp=(C_word)a,a+=10,tmp);
t5=(C_word)C_i_car(t3);
t6=(C_word)C_i_cadr(t3);
t7=(C_word)C_a_i_list(&a,2,t5,t6);
t8=(C_word)C_a_i_list(&a,1,t7);
C_trace("ChickenBridge.scm: 380  append");
t9=*((C_word*)lf[18]+1);
((C_proc4)C_retrieve_proc(t9))(4,t9,t4,((C_word*)((C_word*)t0)[6])[1],t8);}}

/* k26111 in do3965 in k26095 in do3962 in k25699 in k25692 in k25674 in a38470 in k25668 in k25665 in k25142 in k25139 in k25136 in k25133 in k25130 in k25127 in k25124 in k25121 in k25118 in k25115 in k25112 in k25109 in k25106 in k25103 in k25100 in k25097 in k25094 in k25091 in k25088 in k25085 in k25082 in k24943 in k24940 in k24937 in k24934 in k24878 in k24875 in k24872 in k24869 in k24866 in k24863 in k24860 in k24857 in k23555 in k23486 in k23293 in k23290 in k23185 in k23134 in k11783 in k10718 in k10715 in k7274 in k7271 in k6978 in k6975 in k6971 in k6680 in k6677 in k6674 in k6671 */
static void C_ccall f_26113(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word ab[15],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_26113,2,t0,t1);}
t2=C_mutate(((C_word *)((C_word*)t0)[9])+1,t1);
t3=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_26116,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],a[7]=((C_word*)t0)[8],tmp=(C_word)a,a+=8,tmp);
if(C_truep((C_word)C_i_caddr(((C_word*)t0)[4]))){
t4=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_26166,a[2]=t3,a[3]=((C_word*)t0)[2],tmp=(C_word)a,a+=4,tmp);
t5=(C_word)C_i_caddr(((C_word*)t0)[4]);
t6=(C_word)C_a_i_list(&a,1,t5);
C_trace("ChickenBridge.scm: 380  append");
t7=*((C_word*)lf[18]+1);
((C_proc4)C_retrieve_proc(t7))(4,t7,t4,((C_word*)((C_word*)t0)[2])[1],t6);}
else{
t4=t3;
f_26116(t4,C_SCHEME_UNDEFINED);}}

/* k26164 in k26111 in do3965 in k26095 in do3962 in k25699 in k25692 in k25674 in a38470 in k25668 in k25665 in k25142 in k25139 in k25136 in k25133 in k25130 in k25127 in k25124 in k25121 in k25118 in k25115 in k25112 in k25109 in k25106 in k25103 in k25100 in k25097 in k25094 in k25091 in k25088 in k25085 in k25082 in k24943 in k24940 in k24937 in k24934 in k24878 in k24875 in k24872 in k24869 in k24866 in k24863 in k24860 in k24857 in k23555 in k23486 in k23293 in k23290 in k23185 in k23134 in k11783 in k10718 in k10715 in k7274 in k7271 in k6978 in k6975 in k6971 in k6680 in k6677 in k6674 in k6671 */
static void C_ccall f_26166(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[3])+1,t1);
t3=((C_word*)t0)[2];
f_26116(t3,t2);}

/* k26114 in k26111 in do3965 in k26095 in do3962 in k25699 in k25692 in k25674 in a38470 in k25668 in k25665 in k25142 in k25139 in k25136 in k25133 in k25130 in k25127 in k25124 in k25121 in k25118 in k25115 in k25112 in k25109 in k25106 in k25103 in k25100 in k25097 in k25094 in k25091 in k25088 in k25085 in k25082 in k24943 in k24940 in k24937 in k24934 in k24878 in k24875 in k24872 in k24869 in k24866 in k24863 in k24860 in k24857 in k23555 in k23486 in k23293 in k23290 in k23185 in k23134 in k11783 in k10718 in k10715 in k7274 in k7271 in k6978 in k6975 in k6971 in k6680 in k6677 in k6674 in k6671 */
static void C_fcall f_26116(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[14],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_26116,NULL,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_26119,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
if(C_truep((C_word)C_i_cadddr(((C_word*)t0)[3]))){
t3=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_26151,a[2]=t2,a[3]=((C_word*)t0)[2],tmp=(C_word)a,a+=4,tmp);
t4=(C_word)C_i_cadddr(((C_word*)t0)[3]);
t5=(C_word)C_a_i_list(&a,1,t4);
C_trace("ChickenBridge.scm: 380  append");
t6=*((C_word*)lf[18]+1);
((C_proc4)C_retrieve_proc(t6))(4,t6,t3,((C_word*)((C_word*)t0)[2])[1],t5);}
else{
t3=t2;
f_26119(t3,C_SCHEME_UNDEFINED);}}

/* k26149 in k26114 in k26111 in do3965 in k26095 in do3962 in k25699 in k25692 in k25674 in a38470 in k25668 in k25665 in k25142 in k25139 in k25136 in k25133 in k25130 in k25127 in k25124 in k25121 in k25118 in k25115 in k25112 in k25109 in k25106 in k25103 in k25100 in k25097 in k25094 in k25091 in k25088 in k25085 in k25082 in k24943 in k24940 in k24937 in k24934 in k24878 in k24875 in k24872 in k24869 in k24866 in k24863 in k24860 in k24857 in k23555 in k23486 in k23293 in k23290 in k23185 in k23134 in k11783 in k10718 in k10715 in k7274 in k7271 in k6978 in k6975 in k6971 in k6680 in k6677 in k6674 in k6671 */
static void C_ccall f_26151(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[3])+1,t1);
t3=((C_word*)t0)[2];
f_26119(t3,t2);}

/* k26117 in k26114 in k26111 in do3965 in k26095 in do3962 in k25699 in k25692 in k25674 in a38470 in k25668 in k25665 in k25142 in k25139 in k25136 in k25133 in k25130 in k25127 in k25124 in k25121 in k25118 in k25115 in k25112 in k25109 in k25106 in k25103 in k25100 in k25097 in k25094 in k25091 in k25088 in k25085 in k25082 in k24943 in k24940 in k24937 in k24934 in k24878 in k24875 in k24872 in k24869 in k24866 in k24863 in k24860 in k24857 in k23555 in k23486 in k23293 in k23290 in k23185 in k23134 in k11783 in k10718 in k10715 in k7274 in k7271 in k6978 in k6975 in k6971 in k6680 in k6677 in k6674 in k6671 */
static void C_fcall f_26119(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[10],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_26119,NULL,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_26122,a[2]=((C_word*)t0)[4],a[3]=((C_word*)t0)[5],a[4]=((C_word*)t0)[6],tmp=(C_word)a,a+=5,tmp);
t3=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_26132,a[2]=((C_word*)t0)[2],a[3]=t2,a[4]=((C_word*)t0)[3],tmp=(C_word)a,a+=5,tmp);
C_trace("ChickenBridge.scm: 380  fifth");
t4=C_retrieve(lf[66]);
((C_proc3)C_retrieve_proc(t4))(3,t4,t3,((C_word*)t0)[2]);}

/* k26130 in k26117 in k26114 in k26111 in do3965 in k26095 in do3962 in k25699 in k25692 in k25674 in a38470 in k25668 in k25665 in k25142 in k25139 in k25136 in k25133 in k25130 in k25127 in k25124 in k25121 in k25118 in k25115 in k25112 in k25109 in k25106 in k25103 in k25100 in k25097 in k25094 in k25091 in k25088 in k25085 in k25082 in k24943 in k24940 in k24937 in k24934 in k24878 in k24875 in k24872 in k24869 in k24866 in k24863 in k24860 in k24857 in k23555 in k23486 in k23293 in k23290 in k23185 in k23134 in k11783 in k10718 in k10715 in k7274 in k7271 in k6978 in k6975 in k6971 in k6680 in k6677 in k6674 in k6671 */
static void C_ccall f_26132(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[8],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_26132,2,t0,t1);}
if(C_truep(t1)){
t2=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_26136,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],tmp=(C_word)a,a+=4,tmp);
t3=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_26144,a[2]=((C_word*)t0)[4],a[3]=t2,tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 380  fifth");
t4=C_retrieve(lf[66]);
((C_proc3)C_retrieve_proc(t4))(3,t4,t3,((C_word*)t0)[2]);}
else{
t2=((C_word*)t0)[3];
f_26122(t2,C_SCHEME_UNDEFINED);}}

/* k26142 in k26130 in k26117 in k26114 in k26111 in do3965 in k26095 in do3962 in k25699 in k25692 in k25674 in a38470 in k25668 in k25665 in k25142 in k25139 in k25136 in k25133 in k25130 in k25127 in k25124 in k25121 in k25118 in k25115 in k25112 in k25109 in k25106 in k25103 in k25100 in k25097 in k25094 in k25091 in k25088 in k25085 in k25082 in k24943 in k24940 in k24937 in k24934 in k24878 in k24875 in k24872 in k24869 in k24866 in k24863 in k24860 in k24857 in k23555 in k23486 in k23293 in k23290 in k23185 in k23134 in k11783 in k10718 in k10715 in k7274 in k7271 in k6978 in k6975 in k6971 in k6680 in k6677 in k6674 in k6671 */
static void C_ccall f_26144(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[3],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_26144,2,t0,t1);}
t2=(C_word)C_a_i_list(&a,1,t1);
C_trace("ChickenBridge.scm: 380  append");
t3=*((C_word*)lf[18]+1);
((C_proc4)C_retrieve_proc(t3))(4,t3,((C_word*)t0)[3],((C_word*)((C_word*)t0)[2])[1],t2);}

/* k26134 in k26130 in k26117 in k26114 in k26111 in do3965 in k26095 in do3962 in k25699 in k25692 in k25674 in a38470 in k25668 in k25665 in k25142 in k25139 in k25136 in k25133 in k25130 in k25127 in k25124 in k25121 in k25118 in k25115 in k25112 in k25109 in k25106 in k25103 in k25100 in k25097 in k25094 in k25091 in k25088 in k25085 in k25082 in k24943 in k24940 in k24937 in k24934 in k24878 in k24875 in k24872 in k24869 in k24866 in k24863 in k24860 in k24857 in k23555 in k23486 in k23293 in k23290 in k23185 in k23134 in k11783 in k10718 in k10715 in k7274 in k7271 in k6978 in k6975 in k6971 in k6680 in k6677 in k6674 in k6671 */
static void C_ccall f_26136(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[3])+1,t1);
t3=((C_word*)t0)[2];
f_26122(t3,t2);}

/* k26120 in k26117 in k26114 in k26111 in do3965 in k26095 in do3962 in k25699 in k25692 in k25674 in a38470 in k25668 in k25665 in k25142 in k25139 in k25136 in k25133 in k25130 in k25127 in k25124 in k25121 in k25118 in k25115 in k25112 in k25109 in k25106 in k25103 in k25100 in k25097 in k25094 in k25091 in k25088 in k25085 in k25082 in k24943 in k24940 in k24937 in k24934 in k24878 in k24875 in k24872 in k24869 in k24866 in k24863 in k24860 in k24857 in k23555 in k23486 in k23293 in k23290 in k23185 in k23134 in k11783 in k10718 in k10715 in k7274 in k7271 in k6978 in k6975 in k6971 in k6680 in k6677 in k6674 in k6671 */
static void C_fcall f_26122(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word *a;
t2=(C_word)C_i_cdr(((C_word*)t0)[4]);
t3=((C_word*)((C_word*)t0)[3])[1];
f_26099(t3,((C_word*)t0)[2],t2);}

/* k26084 in do3962 in k25699 in k25692 in k25674 in a38470 in k25668 in k25665 in k25142 in k25139 in k25136 in k25133 in k25130 in k25127 in k25124 in k25121 in k25118 in k25115 in k25112 in k25109 in k25106 in k25103 in k25100 in k25097 in k25094 in k25091 in k25088 in k25085 in k25082 in k24943 in k24940 in k24937 in k24934 in k24878 in k24875 in k24872 in k24869 in k24866 in k24863 in k24860 in k24857 in k23555 in k23486 in k23293 in k23290 in k23185 in k23134 in k11783 in k10718 in k10715 in k7274 in k7271 in k6978 in k6975 in k6971 in k6680 in k6677 in k6674 in k6671 */
static void C_ccall f_26086(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word *a;
t2=(C_word)C_i_cdr(((C_word*)t0)[4]);
t3=((C_word*)((C_word*)t0)[3])[1];
f_26076(t3,((C_word*)t0)[2],t2);}

/* k25702 in k25699 in k25692 in k25674 in a38470 in k25668 in k25665 in k25142 in k25139 in k25136 in k25133 in k25130 in k25127 in k25124 in k25121 in k25118 in k25115 in k25112 in k25109 in k25106 in k25103 in k25100 in k25097 in k25094 in k25091 in k25088 in k25085 in k25082 in k24943 in k24940 in k24937 in k24934 in k24878 in k24875 in k24872 in k24869 in k24866 in k24863 in k24860 in k24857 in k23555 in k23486 in k23293 in k23290 in k23185 in k23134 in k11783 in k10718 in k10715 in k7274 in k7271 in k6978 in k6975 in k6971 in k6680 in k6677 in k6674 in k6671 */
static void C_ccall f_25704(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word ab[24],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_25704,2,t0,t1);}
t2=C_SCHEME_END_OF_LIST;
t3=(*a=C_VECTOR_TYPE|1,a[1]=t2,tmp=(C_word)a,a+=2,tmp);
t4=(*a=C_CLOSURE_TYPE|12,a[1]=(C_word)f_25710,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],a[7]=((C_word*)t0)[7],a[8]=((C_word*)t0)[8],a[9]=((C_word*)t0)[9],a[10]=((C_word*)t0)[10],a[11]=((C_word*)t0)[11],a[12]=t3,tmp=(C_word)a,a+=13,tmp);
t5=(C_word)C_i_cadddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_SCHEME_UNDEFINED;
t7=(*a=C_VECTOR_TYPE|1,a[1]=t6,tmp=(C_word)a,a+=2,tmp);
t8=C_set_block_item(t7,0,(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_26040,a[2]=((C_word*)t0)[4],a[3]=((C_word*)t0)[5],a[4]=t7,a[5]=t3,a[6]=((C_word)li640),tmp=(C_word)a,a+=7,tmp));
t9=((C_word*)t7)[1];
f_26040(t9,t4,t5);}

/* do3977 in k25702 in k25699 in k25692 in k25674 in a38470 in k25668 in k25665 in k25142 in k25139 in k25136 in k25133 in k25130 in k25127 in k25124 in k25121 in k25118 in k25115 in k25112 in k25109 in k25106 in k25103 in k25100 in k25097 in k25094 in k25091 in k25088 in k25085 in k25082 in k24943 in k24940 in k24937 in k24934 in k24878 in k24875 in k24872 in k24869 in k24866 in k24863 in k24860 in k24857 in k23555 in k23486 in k23293 in k23290 in k23185 in k23134 in k11783 in k10718 in k10715 in k7274 in k7271 in k6978 in k6975 in k6971 in k6680 in k6677 in k6674 in k6671 */
static void C_fcall f_26040(C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[10],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_26040,NULL,3,t0,t1,t2);}
if(C_truep((C_word)C_i_nullp(t2))){
t3=t1;
((C_proc2)(void*)(*((C_word*)t3+1)))(2,t3,C_SCHEME_FALSE);}
else{
t3=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_26051,a[2]=t1,a[3]=((C_word*)t0)[4],a[4]=t2,a[5]=((C_word*)t0)[5],tmp=(C_word)a,a+=6,tmp);
t4=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_26066,a[2]=((C_word*)t0)[5],a[3]=t3,tmp=(C_word)a,a+=4,tmp);
t5=(C_word)C_i_car(t2);
C_trace("ChickenBridge.scm: 380  emit");
f_23704(t4,t5,((C_word*)((C_word*)t0)[3])[1],((C_word*)t0)[2]);}}

/* k26064 in do3977 in k25702 in k25699 in k25692 in k25674 in a38470 in k25668 in k25665 in k25142 in k25139 in k25136 in k25133 in k25130 in k25127 in k25124 in k25121 in k25118 in k25115 in k25112 in k25109 in k25106 in k25103 in k25100 in k25097 in k25094 in k25091 in k25088 in k25085 in k25082 in k24943 in k24940 in k24937 in k24934 in k24878 in k24875 in k24872 in k24869 in k24866 in k24863 in k24860 in k24857 in k23555 in k23486 in k23293 in k23290 in k23185 in k23134 in k11783 in k10718 in k10715 in k7274 in k7271 in k6978 in k6975 in k6971 in k6680 in k6677 in k6674 in k6671 */
static void C_ccall f_26066(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[3],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_26066,2,t0,t1);}
t2=(C_word)C_a_i_list(&a,1,t1);
C_trace("ChickenBridge.scm: 380  append");
t3=*((C_word*)lf[18]+1);
((C_proc4)C_retrieve_proc(t3))(4,t3,((C_word*)t0)[3],((C_word*)((C_word*)t0)[2])[1],t2);}

/* k26049 in do3977 in k25702 in k25699 in k25692 in k25674 in a38470 in k25668 in k25665 in k25142 in k25139 in k25136 in k25133 in k25130 in k25127 in k25124 in k25121 in k25118 in k25115 in k25112 in k25109 in k25106 in k25103 in k25100 in k25097 in k25094 in k25091 in k25088 in k25085 in k25082 in k24943 in k24940 in k24937 in k24934 in k24878 in k24875 in k24872 in k24869 in k24866 in k24863 in k24860 in k24857 in k23555 in k23486 in k23293 in k23290 in k23185 in k23134 in k11783 in k10718 in k10715 in k7274 in k7271 in k6978 in k6975 in k6971 in k6680 in k6677 in k6674 in k6671 */
static void C_ccall f_26051(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[5])+1,t1);
t3=(C_word)C_i_cdr(((C_word*)t0)[4]);
t4=((C_word*)((C_word*)t0)[3])[1];
f_26040(t4,((C_word*)t0)[2],t3);}

/* k25708 in k25702 in k25699 in k25692 in k25674 in a38470 in k25668 in k25665 in k25142 in k25139 in k25136 in k25133 in k25130 in k25127 in k25124 in k25121 in k25118 in k25115 in k25112 in k25109 in k25106 in k25103 in k25100 in k25097 in k25094 in k25091 in k25088 in k25085 in k25082 in k24943 in k24940 in k24937 in k24934 in k24878 in k24875 in k24872 in k24869 in k24866 in k24863 in k24860 in k24857 in k23555 in k23486 in k23293 in k23290 in k23185 in k23134 in k11783 in k10718 in k10715 in k7274 in k7271 in k6978 in k6975 in k6971 in k6680 in k6677 in k6674 in k6671 */
static void C_ccall f_25710(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[12],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_25710,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|11,a[1]=(C_word)f_25714,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],a[7]=((C_word*)t0)[8],a[8]=((C_word*)t0)[9],a[9]=((C_word*)t0)[10],a[10]=((C_word*)t0)[11],a[11]=((C_word*)t0)[12],tmp=(C_word)a,a+=12,tmp);
C_trace("ChickenBridge.scm: 380  append");
t3=*((C_word*)lf[18]+1);
((C_proc4)C_retrieve_proc(t3))(4,t3,t2,((C_word*)((C_word*)t0)[12])[1],((C_word*)((C_word*)t0)[2])[1]);}

/* k25712 in k25708 in k25702 in k25699 in k25692 in k25674 in a38470 in k25668 in k25665 in k25142 in k25139 in k25136 in k25133 in k25130 in k25127 in k25124 in k25121 in k25118 in k25115 in k25112 in k25109 in k25106 in k25103 in k25100 in k25097 in k25094 in k25091 in k25088 in k25085 in k25082 in k24943 in k24940 in k24937 in k24934 in k24878 in k24875 in k24872 in k24869 in k24866 in k24863 in k24860 in k24857 in k23555 in k23486 in k23293 in k23290 in k23185 in k23134 in k11783 in k10718 in k10715 in k7274 in k7271 in k6978 in k6975 in k6971 in k6680 in k6677 in k6674 in k6671 */
static void C_ccall f_25714(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word ab[24],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_25714,2,t0,t1);}
t2=C_mutate(((C_word *)((C_word*)t0)[11])+1,t1);
t3=(*a=C_CLOSURE_TYPE|11,a[1]=(C_word)f_25717,a[2]=((C_word*)t0)[11],a[3]=((C_word*)t0)[2],a[4]=((C_word*)t0)[3],a[5]=((C_word*)t0)[4],a[6]=((C_word*)t0)[5],a[7]=((C_word*)t0)[6],a[8]=((C_word*)t0)[7],a[9]=((C_word*)t0)[8],a[10]=((C_word*)t0)[9],a[11]=((C_word*)t0)[10],tmp=(C_word)a,a+=12,tmp);
t4=(C_word)C_i_caddr(((C_word*)((C_word*)t0)[2])[1]);
if(C_truep((C_word)C_i_pairp(t4))){
t5=C_SCHEME_END_OF_LIST;
t6=(*a=C_VECTOR_TYPE|1,a[1]=t5,tmp=(C_word)a,a+=2,tmp);
t7=(*a=C_CLOSURE_TYPE|9,a[1]=(C_word)f_25917,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[2],a[5]=t3,a[6]=t6,a[7]=((C_word*)t0)[11],a[8]=((C_word*)t0)[8],a[9]=((C_word*)t0)[5],tmp=(C_word)a,a+=10,tmp);
C_trace("ChickenBridge.scm: 380  gensym");
t8=C_retrieve(lf[26]);
((C_proc3)C_retrieve_proc(t8))(3,t8,t7,lf[943]);}
else{
t5=t3;
f_25717(t5,C_SCHEME_UNDEFINED);}}

/* k25915 in k25712 in k25708 in k25702 in k25699 in k25692 in k25674 in a38470 in k25668 in k25665 in k25142 in k25139 in k25136 in k25133 in k25130 in k25127 in k25124 in k25121 in k25118 in k25115 in k25112 in k25109 in k25106 in k25103 in k25100 in k25097 in k25094 in k25091 in k25088 in k25085 in k25082 in k24943 in k24940 in k24937 in k24934 in k24878 in k24875 in k24872 in k24869 in k24866 in k24863 in k24860 in k24857 in k23555 in k23486 in k23293 in k23290 in k23185 in k23134 in k11783 in k10718 in k10715 in k7274 in k7271 in k6978 in k6975 in k6971 in k6680 in k6677 in k6674 in k6671 */
static void C_ccall f_25917(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[20],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_25917,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|10,a[1]=(C_word)f_25921,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],a[7]=((C_word*)t0)[7],a[8]=t1,a[9]=((C_word*)t0)[8],a[10]=((C_word*)t0)[9],tmp=(C_word)a,a+=11,tmp);
t3=(C_word)C_a_i_list(&a,2,t1,C_SCHEME_FALSE);
t4=(C_word)C_a_i_list(&a,1,t3);
C_trace("ChickenBridge.scm: 380  append");
t5=*((C_word*)lf[18]+1);
((C_proc4)C_retrieve_proc(t5))(4,t5,t2,((C_word*)((C_word*)t0)[9])[1],t4);}

/* k25919 in k25915 in k25712 in k25708 in k25702 in k25699 in k25692 in k25674 in a38470 in k25668 in k25665 in k25142 in k25139 in k25136 in k25133 in k25130 in k25127 in k25124 in k25121 in k25118 in k25115 in k25112 in k25109 in k25106 in k25103 in k25100 in k25097 in k25094 in k25091 in k25088 in k25085 in k25082 in k24943 in k24940 in k24937 in k24934 in k24878 in k24875 in k24872 in k24869 in k24866 in k24863 in k24860 in k24857 in k23555 in k23486 in k23293 in k23290 in k23185 in k23134 in k11783 in k10718 in k10715 in k7274 in k7271 in k6978 in k6975 in k6971 in k6680 in k6677 in k6674 in k6671 */
static void C_ccall f_25921(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[13],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_25921,2,t0,t1);}
t2=C_mutate(((C_word *)((C_word*)t0)[10])+1,t1);
t3=(*a=C_CLOSURE_TYPE|9,a[1]=(C_word)f_25925,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],a[7]=((C_word*)t0)[7],a[8]=((C_word*)t0)[8],a[9]=((C_word*)t0)[9],tmp=(C_word)a,a+=10,tmp);
t4=(C_word)C_a_i_list(&a,1,((C_word*)t0)[8]);
C_trace("ChickenBridge.scm: 380  append");
t5=*((C_word*)lf[18]+1);
((C_proc4)C_retrieve_proc(t5))(4,t5,t3,((C_word*)((C_word*)t0)[9])[1],t4);}

/* k25923 in k25919 in k25915 in k25712 in k25708 in k25702 in k25699 in k25692 in k25674 in a38470 in k25668 in k25665 in k25142 in k25139 in k25136 in k25133 in k25130 in k25127 in k25124 in k25121 in k25118 in k25115 in k25112 in k25109 in k25106 in k25103 in k25100 in k25097 in k25094 in k25091 in k25088 in k25085 in k25082 in k24943 in k24940 in k24937 in k24934 in k24878 in k24875 in k24872 in k24869 in k24866 in k24863 in k24860 in k24857 in k23555 in k23486 in k23293 in k23290 in k23185 in k23134 in k11783 in k10718 in k10715 in k7274 in k7271 in k6978 in k6975 in k6971 in k6680 in k6677 in k6674 in k6671 */
static void C_ccall f_25925(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word ab[15],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_25925,2,t0,t1);}
t2=C_mutate(((C_word *)((C_word*)t0)[9])+1,t1);
t3=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_25928,a[2]=((C_word*)t0)[5],a[3]=((C_word*)t0)[6],a[4]=((C_word*)t0)[7],a[5]=((C_word*)t0)[8],tmp=(C_word)a,a+=6,tmp);
t4=(C_word)C_i_caddr(((C_word*)((C_word*)t0)[4])[1]);
t5=C_SCHEME_UNDEFINED;
t6=(*a=C_VECTOR_TYPE|1,a[1]=t5,tmp=(C_word)a,a+=2,tmp);
t7=C_set_block_item(t6,0,(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_25968,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=t6,a[5]=((C_word*)t0)[6],a[6]=((C_word)li639),tmp=(C_word)a,a+=7,tmp));
t8=((C_word*)t6)[1];
f_25968(t8,t3,t4);}

/* do3984 in k25923 in k25919 in k25915 in k25712 in k25708 in k25702 in k25699 in k25692 in k25674 in a38470 in k25668 in k25665 in k25142 in k25139 in k25136 in k25133 in k25130 in k25127 in k25124 in k25121 in k25118 in k25115 in k25112 in k25109 in k25106 in k25103 in k25100 in k25097 in k25094 in k25091 in k25088 in k25085 in k25082 in k24943 in k24940 in k24937 in k24934 in k24878 in k24875 in k24872 in k24869 in k24866 in k24863 in k24860 in k24857 in k23555 in k23486 in k23293 in k23290 in k23185 in k23134 in k11783 in k10718 in k10715 in k7274 in k7271 in k6978 in k6975 in k6971 in k6680 in k6677 in k6674 in k6671 */
static void C_fcall f_25968(C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word t5;
C_word ab[8],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_25968,NULL,3,t0,t1,t2);}
if(C_truep((C_word)C_i_nullp(t2))){
t3=t1;
((C_proc2)(void*)(*((C_word*)t3+1)))(2,t3,C_SCHEME_FALSE);}
else{
t3=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_25978,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=t1,a[5]=((C_word*)t0)[4],a[6]=t2,a[7]=((C_word*)t0)[5],tmp=(C_word)a,a+=8,tmp);
t4=(C_word)C_i_car(t2);
C_trace("ChickenBridge.scm: 380  parse-unit-parsed");
f_23529(t3,t4);}}

/* k25976 in do3984 in k25923 in k25919 in k25915 in k25712 in k25708 in k25702 in k25699 in k25692 in k25674 in a38470 in k25668 in k25665 in k25142 in k25139 in k25136 in k25133 in k25130 in k25127 in k25124 in k25121 in k25118 in k25115 in k25112 in k25109 in k25106 in k25103 in k25100 in k25097 in k25094 in k25091 in k25088 in k25085 in k25082 in k24943 in k24940 in k24937 in k24934 in k24878 in k24875 in k24872 in k24869 in k24866 in k24863 in k24860 in k24857 in k23555 in k23486 in k23293 in k23290 in k23185 in k23134 in k11783 in k10718 in k10715 in k7274 in k7271 in k6978 in k6975 in k6971 in k6680 in k6677 in k6674 in k6671 */
static void C_ccall f_25978(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_25978,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_25981,a[2]=t1,a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cadr(t1);
C_trace("ChickenBridge.scm: 380  emit");
f_23704(t2,t3,((C_word*)((C_word*)t0)[3])[1],((C_word*)t0)[2]);}

/* k25979 in k25976 in do3984 in k25923 in k25919 in k25915 in k25712 in k25708 in k25702 in k25699 in k25692 in k25674 in a38470 in k25668 in k25665 in k25142 in k25139 in k25136 in k25133 in k25130 in k25127 in k25124 in k25121 in k25118 in k25115 in k25112 in k25109 in k25106 in k25103 in k25100 in k25097 in k25094 in k25091 in k25088 in k25085 in k25082 in k24943 in k24940 in k24937 in k24934 in k24878 in k24875 in k24872 in k24869 in k24866 in k24863 in k24860 in k24857 in k23555 in k23486 in k23293 in k23290 in k23185 in k23134 in k11783 in k10718 in k10715 in k7274 in k7271 in k6978 in k6975 in k6971 in k6680 in k6677 in k6674 in k6671 */
static void C_ccall f_25981(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word ab[13],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_25981,2,t0,t1);}
t2=t1;
t3=(*a=C_VECTOR_TYPE|1,a[1]=t2,tmp=(C_word)a,a+=2,tmp);
t4=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_25984,a[2]=t3,a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],tmp=(C_word)a,a+=7,tmp);
t5=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_26002,a[2]=t4,a[3]=t3,tmp=(C_word)a,a+=4,tmp);
t6=(C_word)C_i_car(((C_word*)t0)[2]);
C_trace("ChickenBridge.scm: 380  token-unit-type=?");
f_23575(t5,t6,C_fix(20224));}

/* k26000 in k25979 in k25976 in do3984 in k25923 in k25919 in k25915 in k25712 in k25708 in k25702 in k25699 in k25692 in k25674 in a38470 in k25668 in k25665 in k25142 in k25139 in k25136 in k25133 in k25130 in k25127 in k25124 in k25121 in k25118 in k25115 in k25112 in k25109 in k25106 in k25103 in k25100 in k25097 in k25094 in k25091 in k25088 in k25085 in k25082 in k24943 in k24940 in k24937 in k24934 in k24878 in k24875 in k24872 in k24869 in k24866 in k24863 in k24860 in k24857 in k23555 in k23486 in k23293 in k23290 in k23185 in k23134 in k11783 in k10718 in k10715 in k7274 in k7271 in k6978 in k6975 in k6971 in k6680 in k6677 in k6674 in k6671 */
static void C_ccall f_26002(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[6],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_26002,2,t0,t1);}
if(C_truep(t1)){
t2=(C_word)C_a_i_list(&a,2,lf[458],((C_word*)((C_word*)t0)[3])[1]);
t3=C_mutate(((C_word *)((C_word*)t0)[3])+1,t2);
t4=((C_word*)t0)[2];
f_25984(t4,t3);}
else{
t2=((C_word*)t0)[2];
f_25984(t2,C_SCHEME_UNDEFINED);}}

/* k25982 in k25979 in k25976 in do3984 in k25923 in k25919 in k25915 in k25712 in k25708 in k25702 in k25699 in k25692 in k25674 in a38470 in k25668 in k25665 in k25142 in k25139 in k25136 in k25133 in k25130 in k25127 in k25124 in k25121 in k25118 in k25115 in k25112 in k25109 in k25106 in k25103 in k25100 in k25097 in k25094 in k25091 in k25088 in k25085 in k25082 in k24943 in k24940 in k24937 in k24934 in k24878 in k24875 in k24872 in k24869 in k24866 in k24863 in k24860 in k24857 in k23555 in k23486 in k23293 in k23290 in k23185 in k23134 in k11783 in k10718 in k10715 in k7274 in k7271 in k6978 in k6975 in k6971 in k6680 in k6677 in k6674 in k6671 */
static void C_fcall f_25984(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_25984,NULL,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_25988,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],tmp=(C_word)a,a+=6,tmp);
t3=(C_word)C_a_i_list(&a,1,((C_word*)((C_word*)t0)[2])[1]);
C_trace("ChickenBridge.scm: 380  append");
t4=*((C_word*)lf[18]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,((C_word*)((C_word*)t0)[6])[1],t3);}

/* k25986 in k25982 in k25979 in k25976 in do3984 in k25923 in k25919 in k25915 in k25712 in k25708 in k25702 in k25699 in k25692 in k25674 in a38470 in k25668 in k25665 in k25142 in k25139 in k25136 in k25133 in k25130 in k25127 in k25124 in k25121 in k25118 in k25115 in k25112 in k25109 in k25106 in k25103 in k25100 in k25097 in k25094 in k25091 in k25088 in k25085 in k25082 in k24943 in k24940 in k24937 in k24934 in k24878 in k24875 in k24872 in k24869 in k24866 in k24863 in k24860 in k24857 in k23555 in k23486 in k23293 in k23290 in k23185 in k23134 in k11783 in k10718 in k10715 in k7274 in k7271 in k6978 in k6975 in k6971 in k6680 in k6677 in k6674 in k6671 */
static void C_ccall f_25988(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[5])+1,t1);
t3=(C_word)C_i_cdr(((C_word*)t0)[4]);
t4=((C_word*)((C_word*)t0)[3])[1];
f_25968(t4,((C_word*)t0)[2],t3);}

/* k25926 in k25923 in k25919 in k25915 in k25712 in k25708 in k25702 in k25699 in k25692 in k25674 in a38470 in k25668 in k25665 in k25142 in k25139 in k25136 in k25133 in k25130 in k25127 in k25124 in k25121 in k25118 in k25115 in k25112 in k25109 in k25106 in k25103 in k25100 in k25097 in k25094 in k25091 in k25088 in k25085 in k25082 in k24943 in k24940 in k24937 in k24934 in k24878 in k24875 in k24872 in k24869 in k24866 in k24863 in k24860 in k24857 in k23555 in k23486 in k23293 in k23290 in k23185 in k23134 in k11783 in k10718 in k10715 in k7274 in k7271 in k6978 in k6975 in k6971 in k6680 in k6677 in k6674 in k6671 */
static void C_ccall f_25928(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_25928,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_25931,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],tmp=(C_word)a,a+=6,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[3])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
t4=(C_word)C_i_car(((C_word*)((C_word*)t0)[3])[1]);
t5=C_mutate(((C_word *)((C_word*)t0)[3])+1,t4);
t6=t2;
f_25931(t6,t5);}
else{
t4=(C_word)C_a_i_cons(&a,2,lf[457],((C_word*)((C_word*)t0)[3])[1]);
t5=C_mutate(((C_word *)((C_word*)t0)[3])+1,t4);
t6=t2;
f_25931(t6,t5);}}

/* k25929 in k25926 in k25923 in k25919 in k25915 in k25712 in k25708 in k25702 in k25699 in k25692 in k25674 in a38470 in k25668 in k25665 in k25142 in k25139 in k25136 in k25133 in k25130 in k25127 in k25124 in k25121 in k25118 in k25115 in k25112 in k25109 in k25106 in k25103 in k25100 in k25097 in k25094 in k25091 in k25088 in k25085 in k25082 in k24943 in k24940 in k24937 in k24934 in k24878 in k24875 in k24872 in k24869 in k24866 in k24863 in k24860 in k24857 in k23555 in k23486 in k23293 in k23290 in k23185 in k23134 in k11783 in k10718 in k10715 in k7274 in k7271 in k6978 in k6975 in k6971 in k6680 in k6677 in k6674 in k6671 */
static void C_fcall f_25931(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word ab[27],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_25931,NULL,2,t0,t1);}
t2=(C_word)C_a_i_list(&a,3,lf[12],((C_word*)t0)[5],C_SCHEME_TRUE);
t3=(C_word)C_a_i_cons(&a,2,lf[484],((C_word*)((C_word*)t0)[4])[1]);
t4=(C_word)C_a_i_list(&a,4,lf[20],((C_word*)((C_word*)t0)[3])[1],t2,t3);
t5=(C_word)C_a_i_list(&a,1,t4);
t6=C_mutate(((C_word *)((C_word*)t0)[4])+1,t5);
t7=((C_word*)t0)[2];
f_25717(t7,t6);}

/* k25715 in k25712 in k25708 in k25702 in k25699 in k25692 in k25674 in a38470 in k25668 in k25665 in k25142 in k25139 in k25136 in k25133 in k25130 in k25127 in k25124 in k25121 in k25118 in k25115 in k25112 in k25109 in k25106 in k25103 in k25100 in k25097 in k25094 in k25091 in k25088 in k25085 in k25082 in k24943 in k24940 in k24937 in k24934 in k24878 in k24875 in k24872 in k24869 in k24866 in k24863 in k24860 in k24857 in k23555 in k23486 in k23293 in k23290 in k23185 in k23134 in k11783 in k10718 in k10715 in k7274 in k7271 in k6978 in k6975 in k6971 in k6680 in k6677 in k6674 in k6671 */
static void C_fcall f_25717(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[11],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_25717,NULL,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|10,a[1]=(C_word)f_25721,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],a[7]=((C_word*)t0)[8],a[8]=((C_word*)t0)[9],a[9]=((C_word*)t0)[10],a[10]=((C_word*)t0)[11],tmp=(C_word)a,a+=11,tmp);
C_trace("ChickenBridge.scm: 380  append");
t3=*((C_word*)lf[18]+1);
((C_proc4)C_retrieve_proc(t3))(4,t3,t2,((C_word*)((C_word*)t0)[11])[1],((C_word*)((C_word*)t0)[2])[1]);}

/* k25719 in k25715 in k25712 in k25708 in k25702 in k25699 in k25692 in k25674 in a38470 in k25668 in k25665 in k25142 in k25139 in k25136 in k25133 in k25130 in k25127 in k25124 in k25121 in k25118 in k25115 in k25112 in k25109 in k25106 in k25103 in k25100 in k25097 in k25094 in k25091 in k25088 in k25085 in k25082 in k24943 in k24940 in k24937 in k24934 in k24878 in k24875 in k24872 in k24869 in k24866 in k24863 in k24860 in k24857 in k23555 in k23486 in k23293 in k23290 in k23185 in k23134 in k11783 in k10718 in k10715 in k7274 in k7271 in k6978 in k6975 in k6971 in k6680 in k6677 in k6674 in k6671 */
static void C_ccall f_25721(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word ab[14],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_25721,2,t0,t1);}
t2=C_mutate(((C_word *)((C_word*)t0)[10])+1,t1);
t3=(*a=C_CLOSURE_TYPE|10,a[1]=(C_word)f_25724,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[10],a[6]=((C_word*)t0)[5],a[7]=((C_word*)t0)[6],a[8]=((C_word*)t0)[7],a[9]=((C_word*)t0)[8],a[10]=((C_word*)t0)[9],tmp=(C_word)a,a+=11,tmp);
if(C_truep((C_word)C_i_pairp(((C_word*)((C_word*)t0)[8])[1]))){
t4=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[8])[1]);
if(C_truep((C_word)C_i_nullp(t4))){
t5=(C_word)C_i_car(((C_word*)((C_word*)t0)[8])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[8])+1,t5);
t7=t3;
f_25724(t7,t6);}
else{
t5=(C_word)C_a_i_cons(&a,2,lf[457],((C_word*)((C_word*)t0)[8])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[8])+1,t5);
t7=t3;
f_25724(t7,t6);}}
else{
t4=C_set_block_item(((C_word*)t0)[8],0,C_SCHEME_FALSE);
t5=t3;
f_25724(t5,t4);}}

/* k25722 in k25719 in k25715 in k25712 in k25708 in k25702 in k25699 in k25692 in k25674 in a38470 in k25668 in k25665 in k25142 in k25139 in k25136 in k25133 in k25130 in k25127 in k25124 in k25121 in k25118 in k25115 in k25112 in k25109 in k25106 in k25103 in k25100 in k25097 in k25094 in k25091 in k25088 in k25085 in k25082 in k24943 in k24940 in k24937 in k24934 in k24878 in k24875 in k24872 in k24869 in k24866 in k24863 in k24860 in k24857 in k23555 in k23486 in k23293 in k23290 in k23185 in k23134 in k11783 in k10718 in k10715 in k7274 in k7271 in k6978 in k6975 in k6971 in k6680 in k6677 in k6674 in k6671 */
static void C_fcall f_25724(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[15],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_25724,NULL,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_25727,a[2]=((C_word*)t0)[5],a[3]=((C_word*)t0)[6],a[4]=((C_word*)t0)[7],a[5]=((C_word*)t0)[8],a[6]=((C_word*)t0)[9],a[7]=((C_word*)t0)[10],tmp=(C_word)a,a+=8,tmp);
t3=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_25877,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=t2,a[6]=((C_word*)t0)[8],tmp=(C_word)a,a+=7,tmp);
C_trace("ChickenBridge.scm: 380  fifth");
t4=C_retrieve(lf[66]);
((C_proc3)C_retrieve_proc(t4))(3,t4,t3,((C_word*)((C_word*)t0)[2])[1]);}

/* k25875 in k25722 in k25719 in k25715 in k25712 in k25708 in k25702 in k25699 in k25692 in k25674 in a38470 in k25668 in k25665 in k25142 in k25139 in k25136 in k25133 in k25130 in k25127 in k25124 in k25121 in k25118 in k25115 in k25112 in k25109 in k25106 in k25103 in k25100 in k25097 in k25094 in k25091 in k25088 in k25085 in k25082 in k24943 in k24940 in k24937 in k24934 in k24878 in k24875 in k24872 in k24869 in k24866 in k24863 in k24860 in k24857 in k23555 in k23486 in k23293 in k23290 in k23185 in k23134 in k11783 in k10718 in k10715 in k7274 in k7271 in k6978 in k6975 in k6971 in k6680 in k6677 in k6674 in k6671 */
static void C_ccall f_25877(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_25877,2,t0,t1);}
if(C_truep(t1)){
t2=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_25881,a[2]=((C_word*)t0)[5],a[3]=((C_word*)t0)[6],tmp=(C_word)a,a+=4,tmp);
t3=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_25885,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=t2,tmp=(C_word)a,a+=5,tmp);
C_trace("ChickenBridge.scm: 380  fifth");
t4=C_retrieve(lf[66]);
((C_proc3)C_retrieve_proc(t4))(3,t4,t3,((C_word*)((C_word*)t0)[2])[1]);}
else{
t2=C_set_block_item(((C_word*)t0)[6],0,C_SCHEME_FALSE);
t3=((C_word*)t0)[5];
f_25727(t3,t2);}}

/* k25883 in k25875 in k25722 in k25719 in k25715 in k25712 in k25708 in k25702 in k25699 in k25692 in k25674 in a38470 in k25668 in k25665 in k25142 in k25139 in k25136 in k25133 in k25130 in k25127 in k25124 in k25121 in k25118 in k25115 in k25112 in k25109 in k25106 in k25103 in k25100 in k25097 in k25094 in k25091 in k25088 in k25085 in k25082 in k24943 in k24940 in k24937 in k24934 in k24878 in k24875 in k24872 in k24869 in k24866 in k24863 in k24860 in k24857 in k23555 in k23486 in k23293 in k23290 in k23185 in k23134 in k11783 in k10718 in k10715 in k7274 in k7271 in k6978 in k6975 in k6971 in k6680 in k6677 in k6674 in k6671 */
static void C_ccall f_25885(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 380  emit");
f_23704(((C_word*)t0)[4],t1,((C_word*)((C_word*)t0)[3])[1],((C_word*)t0)[2]);}

/* k25879 in k25875 in k25722 in k25719 in k25715 in k25712 in k25708 in k25702 in k25699 in k25692 in k25674 in a38470 in k25668 in k25665 in k25142 in k25139 in k25136 in k25133 in k25130 in k25127 in k25124 in k25121 in k25118 in k25115 in k25112 in k25109 in k25106 in k25103 in k25100 in k25097 in k25094 in k25091 in k25088 in k25085 in k25082 in k24943 in k24940 in k24937 in k24934 in k24878 in k24875 in k24872 in k24869 in k24866 in k24863 in k24860 in k24857 in k23555 in k23486 in k23293 in k23290 in k23185 in k23134 in k11783 in k10718 in k10715 in k7274 in k7271 in k6978 in k6975 in k6971 in k6680 in k6677 in k6674 in k6671 */
static void C_ccall f_25881(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[3])+1,t1);
t3=((C_word*)t0)[2];
f_25727(t3,t2);}

/* k25725 in k25722 in k25719 in k25715 in k25712 in k25708 in k25702 in k25699 in k25692 in k25674 in a38470 in k25668 in k25665 in k25142 in k25139 in k25136 in k25133 in k25130 in k25127 in k25124 in k25121 in k25118 in k25115 in k25112 in k25109 in k25106 in k25103 in k25100 in k25097 in k25094 in k25091 in k25088 in k25085 in k25082 in k24943 in k24940 in k24937 in k24934 in k24878 in k24875 in k24872 in k24869 in k24866 in k24863 in k24860 in k24857 in k23555 in k23486 in k23293 in k23290 in k23185 in k23134 in k11783 in k10718 in k10715 in k7274 in k7271 in k6978 in k6975 in k6971 in k6680 in k6677 in k6674 in k6671 */
static void C_fcall f_25727(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word ab[31],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_25727,NULL,2,t0,t1);}
t2=((C_word*)((C_word*)t0)[7])[1];
if(C_truep(t2)){
t3=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_25755,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],tmp=(C_word)a,a+=7,tmp);
C_trace("ChickenBridge.scm: 380  gensym");
t4=C_retrieve(lf[26]);
((C_proc3)C_retrieve_proc(t4))(3,t4,t3,lf[942]);}
else{
t3=(C_word)C_a_i_list(&a,2,((C_word*)((C_word*)t0)[6])[1],((C_word*)((C_word*)t0)[5])[1]);
t4=(C_word)C_a_i_cons(&a,2,t3,((C_word*)((C_word*)t0)[2])[1]);
t5=(C_word)C_a_i_cons(&a,2,C_SCHEME_END_OF_LIST,t4);
t6=(C_word)C_a_i_cons(&a,2,lf[712],t5);
t7=((C_word*)t0)[4];
((C_proc2)(void*)(*((C_word*)t7+1)))(2,t7,(C_word)C_a_i_list(&a,3,lf[2],((C_word*)((C_word*)t0)[3])[1],t6));}}

/* k25753 in k25725 in k25722 in k25719 in k25715 in k25712 in k25708 in k25702 in k25699 in k25692 in k25674 in a38470 in k25668 in k25665 in k25142 in k25139 in k25136 in k25133 in k25130 in k25127 in k25124 in k25121 in k25118 in k25115 in k25112 in k25109 in k25106 in k25103 in k25100 in k25097 in k25094 in k25091 in k25088 in k25085 in k25082 in k24943 in k24940 in k24937 in k24934 in k24878 in k24875 in k24872 in k24869 in k24866 in k24863 in k24860 in k24857 in k23555 in k23486 in k23293 in k23290 in k23185 in k23134 in k11783 in k10718 in k10715 in k7274 in k7271 in k6978 in k6975 in k6971 in k6680 in k6677 in k6674 in k6671 */
static void C_ccall f_25755(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[8],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_25755,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_25758,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],a[7]=t1,tmp=(C_word)a,a+=8,tmp);
C_trace("ChickenBridge.scm: 380  gensym");
t3=C_retrieve(lf[26]);
((C_proc3)C_retrieve_proc(t3))(3,t3,t2,lf[941]);}

/* k25756 in k25753 in k25725 in k25722 in k25719 in k25715 in k25712 in k25708 in k25702 in k25699 in k25692 in k25674 in a38470 in k25668 in k25665 in k25142 in k25139 in k25136 in k25133 in k25130 in k25127 in k25124 in k25121 in k25118 in k25115 in k25112 in k25109 in k25106 in k25103 in k25100 in k25097 in k25094 in k25091 in k25088 in k25085 in k25082 in k24943 in k24940 in k24937 in k24934 in k24878 in k24875 in k24872 in k24869 in k24866 in k24863 in k24860 in k24857 in k23555 in k23486 in k23293 in k23290 in k23185 in k23134 in k11783 in k10718 in k10715 in k7274 in k7271 in k6978 in k6975 in k6971 in k6680 in k6677 in k6674 in k6671 */
static void C_ccall f_25758(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_25758,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|8,a[1]=(C_word)f_25761,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],a[7]=t1,a[8]=((C_word*)t0)[7],tmp=(C_word)a,a+=9,tmp);
C_trace("ChickenBridge.scm: 380  gensym");
t3=C_retrieve(lf[26]);
((C_proc3)C_retrieve_proc(t3))(3,t3,t2,lf[940]);}

/* k25759 in k25756 in k25753 in k25725 in k25722 in k25719 in k25715 in k25712 in k25708 in k25702 in k25699 in k25692 in k25674 in a38470 in k25668 in k25665 in k25142 in k25139 in k25136 in k25133 in k25130 in k25127 in k25124 in k25121 in k25118 in k25115 in k25112 in k25109 in k25106 in k25103 in k25100 in k25097 in k25094 in k25091 in k25088 in k25085 in k25082 in k24943 in k24940 in k24937 in k24934 in k24878 in k24875 in k24872 in k24869 in k24866 in k24863 in k24860 in k24857 in k23555 in k23486 in k23293 in k23290 in k23185 in k23134 in k11783 in k10718 in k10715 in k7274 in k7271 in k6978 in k6975 in k6971 in k6680 in k6677 in k6674 in k6671 */
static void C_ccall f_25761(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[10],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_25761,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|9,a[1]=(C_word)f_25764,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],a[7]=t1,a[8]=((C_word*)t0)[7],a[9]=((C_word*)t0)[8],tmp=(C_word)a,a+=10,tmp);
C_trace("ChickenBridge.scm: 380  gensym");
t3=C_retrieve(lf[26]);
((C_proc3)C_retrieve_proc(t3))(3,t3,t2,lf[939]);}

/* k25762 in k25759 in k25756 in k25753 in k25725 in k25722 in k25719 in k25715 in k25712 in k25708 in k25702 in k25699 in k25692 in k25674 in a38470 in k25668 in k25665 in k25142 in k25139 in k25136 in k25133 in k25130 in k25127 in k25124 in k25121 in k25118 in k25115 in k25112 in k25109 in k25106 in k25103 in k25100 in k25097 in k25094 in k25091 in k25088 in k25085 in k25082 in k24943 in k24940 in k24937 in k24934 in k24878 in k24875 in k24872 in k24869 in k24866 in k24863 in k24860 in k24857 in k23555 in k23486 in k23293 in k23290 in k23185 in k23134 in k11783 in k10718 in k10715 in k7274 in k7271 in k6978 in k6975 in k6971 in k6680 in k6677 in k6674 in k6671 */
static void C_ccall f_25764(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[11],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_25764,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|10,a[1]=(C_word)f_25767,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],a[7]=t1,a[8]=((C_word*)t0)[7],a[9]=((C_word*)t0)[8],a[10]=((C_word*)t0)[9],tmp=(C_word)a,a+=11,tmp);
C_trace("ChickenBridge.scm: 380  gensym");
t3=C_retrieve(lf[26]);
((C_proc3)C_retrieve_proc(t3))(3,t3,t2,lf[938]);}

/* k25765 in k25762 in k25759 in k25756 in k25753 in k25725 in k25722 in k25719 in k25715 in k25712 in k25708 in k25702 in k25699 in k25692 in k25674 in a38470 in k25668 in k25665 in k25142 in k25139 in k25136 in k25133 in k25130 in k25127 in k25124 in k25121 in k25118 in k25115 in k25112 in k25109 in k25106 in k25103 in k25100 in k25097 in k25094 in k25091 in k25088 in k25085 in k25082 in k24943 in k24940 in k24937 in k24934 in k24878 in k24875 in k24872 in k24869 in k24866 in k24863 in k24860 in k24857 in k23555 in k23486 in k23293 in k23290 in k23185 in k23134 in k11783 in k10718 in k10715 in k7274 in k7271 in k6978 in k6975 in k6971 in k6680 in k6677 in k6674 in k6671 */
static void C_ccall f_25767(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word t14;
C_word t15;
C_word t16;
C_word t17;
C_word t18;
C_word t19;
C_word t20;
C_word ab[120],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_25767,2,t0,t1);}
t2=(C_word)C_a_i_list(&a,1,((C_word*)t0)[10]);
t3=(C_word)C_a_i_list(&a,2,((C_word*)t0)[9],C_fix(0));
t4=(C_word)C_a_i_list(&a,3,lf[839],C_SCHEME_END_OF_LIST,((C_word*)t0)[10]);
t5=(C_word)C_a_i_list(&a,2,lf[840],t4);
t6=(C_word)C_a_i_list(&a,1,((C_word*)t0)[8]);
t7=(C_word)C_a_i_list(&a,3,lf[12],((C_word*)t0)[9],((C_word*)t0)[8]);
t8=(C_word)C_a_i_list(&a,3,lf[839],t6,t7);
t9=(C_word)C_a_i_list(&a,2,lf[842],t8);
t10=(C_word)C_a_i_list(&a,3,t3,t5,t9);
t11=(C_word)C_a_i_list(&a,1,t1);
t12=(C_word)C_a_i_list(&a,1,((C_word*)t0)[7]);
t13=(C_word)C_a_i_list(&a,1,lf[843]);
t14=(C_word)C_a_i_list(&a,4,lf[844],((C_word*)t0)[7],t13,lf[936]);
t15=(C_word)C_a_i_list(&a,2,t1,C_fix(-2));
t16=(C_word)C_a_i_list(&a,4,lf[839],t12,t14,t15);
t17=(C_word)C_a_i_list(&a,3,((C_word*)((C_word*)t0)[6])[1],((C_word*)((C_word*)t0)[5])[1],C_fix(-1));
t18=(*a=C_CLOSURE_TYPE|8,a[1]=(C_word)f_25826,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=t2,a[5]=t10,a[6]=t11,a[7]=t16,a[8]=t17,tmp=(C_word)a,a+=9,tmp);
t19=(C_word)C_a_i_list(&a,1,((C_word*)t0)[9]);
C_trace("##sys#append");
t20=*((C_word*)lf[7]+1);
((C_proc4)(void*)(*((C_word*)t20+1)))(4,t20,t18,((C_word*)((C_word*)t0)[2])[1],t19);}

/* k25824 in k25765 in k25762 in k25759 in k25756 in k25753 in k25725 in k25722 in k25719 in k25715 in k25712 in k25708 in k25702 in k25699 in k25692 in k25674 in a38470 in k25668 in k25665 in k25142 in k25139 in k25136 in k25133 in k25130 in k25127 in k25124 in k25121 in k25118 in k25115 in k25112 in k25109 in k25106 in k25103 in k25100 in k25097 in k25094 in k25091 in k25088 in k25085 in k25082 in k24943 in k24940 in k24937 in k24934 in k24878 in k24875 in k24872 in k24869 in k24866 in k24863 in k24860 in k24857 in k23555 in k23486 in k23293 in k23290 in k23185 in k23134 in k11783 in k10718 in k10715 in k7274 in k7271 in k6978 in k6975 in k6971 in k6680 in k6677 in k6674 in k6671 */
static void C_ccall f_25826(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word ab[72],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_25826,2,t0,t1);}
t2=(C_word)C_a_i_cons(&a,2,lf[16],t1);
t3=(C_word)C_a_i_list(&a,3,lf[937],((C_word*)t0)[8],t2);
t4=(C_word)C_a_i_list(&a,3,lf[839],C_SCHEME_END_OF_LIST,t3);
t5=(C_word)C_a_i_list(&a,3,lf[778],((C_word*)t0)[7],t4);
t6=(C_word)C_a_i_list(&a,3,lf[839],((C_word*)t0)[6],t5);
t7=(C_word)C_a_i_list(&a,2,lf[779],t6);
t8=(C_word)C_a_i_list(&a,3,lf[2],((C_word*)t0)[5],t7);
t9=(C_word)C_a_i_list(&a,3,lf[839],((C_word*)t0)[4],t8);
t10=((C_word*)t0)[3];
((C_proc2)(void*)(*((C_word*)t10+1)))(2,t10,(C_word)C_a_i_list(&a,3,lf[2],((C_word*)((C_word*)t0)[2])[1],t9));}

/* a38424 in k25668 in k25665 in k25142 in k25139 in k25136 in k25133 in k25130 in k25127 in k25124 in k25121 in k25118 in k25115 in k25112 in k25109 in k25106 in k25103 in k25100 in k25097 in k25094 in k25091 in k25088 in k25085 in k25082 in k24943 in k24940 in k24937 in k24934 in k24878 in k24875 in k24872 in k24869 in k24866 in k24863 in k24860 in k24857 in k23555 in k23486 in k23293 in k23290 in k23185 in k23134 in k11783 in k10718 in k10715 in k7274 in k7271 in k6978 in k6975 in k6971 in k6680 in k6677 in k6674 in k6671 */
static void C_ccall f_38425(C_word c,C_word t0,C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word ab[10],*a=ab;
if(c!=4) C_bad_argc_2(c,4,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr4,(void*)f_38425,4,t0,t1,t2,t3);}
t4=(C_word)C_i_car(t2);
t5=(C_word)C_i_cadr(t2);
t6=t5;
t7=(*a=C_VECTOR_TYPE|1,a[1]=t6,tmp=(C_word)a,a+=2,tmp);
t8=(C_word)C_i_caddr(t2);
t9=(C_word)C_i_cadddr(t2);
t10=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_38441,a[2]=t2,a[3]=t1,a[4]=t9,a[5]=t8,a[6]=t7,a[7]=t4,tmp=(C_word)a,a+=8,tmp);
C_trace("ChickenBridge.scm: 380  fifth");
t11=C_retrieve(lf[66]);
((C_proc3)C_retrieve_proc(t11))(3,t11,t10,t2);}

/* k38439 in a38424 in k25668 in k25665 in k25142 in k25139 in k25136 in k25133 in k25130 in k25127 in k25124 in k25121 in k25118 in k25115 in k25112 in k25109 in k25106 in k25103 in k25100 in k25097 in k25094 in k25091 in k25088 in k25085 in k25082 in k24943 in k24940 in k24937 in k24934 in k24878 in k24875 in k24872 in k24869 in k24866 in k24863 in k24860 in k24857 in k23555 in k23486 in k23293 in k23290 in k23185 in k23134 in k11783 in k10718 in k10715 in k7274 in k7271 in k6978 in k6975 in k6971 in k6680 in k6677 in k6674 in k6671 */
static void C_ccall f_38441(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[8],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_38441,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_38444,a[2]=((C_word*)t0)[3],a[3]=t1,a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],a[7]=((C_word*)t0)[7],tmp=(C_word)a,a+=8,tmp);
C_trace("ChickenBridge.scm: 380  sixth");
t3=C_retrieve(lf[67]);
((C_proc3)C_retrieve_proc(t3))(3,t3,t2,((C_word*)t0)[2]);}

/* k38442 in k38439 in a38424 in k25668 in k25665 in k25142 in k25139 in k25136 in k25133 in k25130 in k25127 in k25124 in k25121 in k25118 in k25115 in k25112 in k25109 in k25106 in k25103 in k25100 in k25097 in k25094 in k25091 in k25088 in k25085 in k25082 in k24943 in k24940 in k24937 in k24934 in k24878 in k24875 in k24872 in k24869 in k24866 in k24863 in k24860 in k24857 in k23555 in k23486 in k23293 in k23290 in k23185 in k23134 in k11783 in k10718 in k10715 in k7274 in k7271 in k6978 in k6975 in k6971 in k6680 in k6677 in k6674 in k6671 */
static void C_ccall f_38444(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word ab[11],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_38444,2,t0,t1);}
t2=t1;
t3=(*a=C_VECTOR_TYPE|1,a[1]=t2,tmp=(C_word)a,a+=2,tmp);
t4=(*a=C_CLOSURE_TYPE|8,a[1]=(C_word)f_38447,a[2]=((C_word*)t0)[2],a[3]=t3,a[4]=((C_word*)t0)[3],a[5]=((C_word*)t0)[4],a[6]=((C_word*)t0)[5],a[7]=((C_word*)t0)[6],a[8]=((C_word*)t0)[7],tmp=(C_word)a,a+=9,tmp);
if(C_truep(((C_word*)((C_word*)t0)[6])[1])){
t5=(C_word)C_i_car(((C_word*)((C_word*)t0)[6])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[6])+1,t5);
t7=t4;
f_38447(t7,t6);}
else{
t5=t4;
f_38447(t5,C_SCHEME_UNDEFINED);}}

/* k38445 in k38442 in k38439 in a38424 in k25668 in k25665 in k25142 in k25139 in k25136 in k25133 in k25130 in k25127 in k25124 in k25121 in k25118 in k25115 in k25112 in k25109 in k25106 in k25103 in k25100 in k25097 in k25094 in k25091 in k25088 in k25085 in k25082 in k24943 in k24940 in k24937 in k24934 in k24878 in k24875 in k24872 in k24869 in k24866 in k24863 in k24860 in k24857 in k23555 in k23486 in k23293 in k23290 in k23185 in k23134 in k11783 in k10718 in k10715 in k7274 in k7271 in k6978 in k6975 in k6971 in k6680 in k6677 in k6674 in k6671 */
static void C_fcall f_38447(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_38447,NULL,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|8,a[1]=(C_word)f_38450,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],a[7]=((C_word*)t0)[7],a[8]=((C_word*)t0)[8],tmp=(C_word)a,a+=9,tmp);
if(C_truep(((C_word*)((C_word*)t0)[3])[1])){
t3=(C_word)C_i_cadr(((C_word*)((C_word*)t0)[3])[1]);
t4=C_mutate(((C_word *)((C_word*)t0)[3])+1,t3);
t5=t2;
f_38450(t5,t4);}
else{
t3=t2;
f_38450(t3,C_SCHEME_UNDEFINED);}}

/* k38448 in k38445 in k38442 in k38439 in a38424 in k25668 in k25665 in k25142 in k25139 in k25136 in k25133 in k25130 in k25127 in k25124 in k25121 in k25118 in k25115 in k25112 in k25109 in k25106 in k25103 in k25100 in k25097 in k25094 in k25091 in k25088 in k25085 in k25082 in k24943 in k24940 in k24937 in k24934 in k24878 in k24875 in k24872 in k24869 in k24866 in k24863 in k24860 in k24857 in k23555 in k23486 in k23293 in k23290 in k23185 in k23134 in k11783 in k10718 in k10715 in k7274 in k7271 in k6978 in k6975 in k6971 in k6680 in k6677 in k6674 in k6671 */
static void C_fcall f_38450(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[22],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_38450,NULL,2,t0,t1);}
t2=(C_word)C_a_i_list(&a,6,((C_word*)t0)[8],((C_word*)((C_word*)t0)[7])[1],((C_word*)t0)[6],((C_word*)t0)[5],((C_word*)t0)[4],((C_word*)((C_word*)t0)[3])[1]);
t3=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_38461,a[2]=t2,a[3]=((C_word*)t0)[2],tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 380  parse-unit-position");
f_23547(t3,((C_word*)t0)[8]);}

/* k38459 in k38448 in k38445 in k38442 in k38439 in a38424 in k25668 in k25665 in k25142 in k25139 in k25136 in k25133 in k25130 in k25127 in k25124 in k25121 in k25118 in k25115 in k25112 in k25109 in k25106 in k25103 in k25100 in k25097 in k25094 in k25091 in k25088 in k25085 in k25082 in k24943 in k24940 in k24937 in k24934 in k24878 in k24875 in k24872 in k24869 in k24866 in k24863 in k24860 in k24857 in k23555 in k23486 in k23293 in k23290 in k23185 in k23134 in k11783 in k10718 in k10715 in k7274 in k7271 in k6978 in k6975 in k6971 in k6680 in k6677 in k6674 in k6671 */
static void C_ccall f_38461(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 380  make-parse-unit");
f_23490(((C_word*)t0)[3],C_fix(32512),((C_word*)t0)[2],t1);}

/* k38417 in k25668 in k25665 in k25142 in k25139 in k25136 in k25133 in k25130 in k25127 in k25124 in k25121 in k25118 in k25115 in k25112 in k25109 in k25106 in k25103 in k25100 in k25097 in k25094 in k25091 in k25088 in k25085 in k25082 in k24943 in k24940 in k24937 in k24934 in k24878 in k24875 in k24872 in k24869 in k24866 in k24863 in k24860 in k24857 in k23555 in k23486 in k23293 in k23290 in k23185 in k23134 in k11783 in k10718 in k10715 in k7274 in k7271 in k6978 in k6975 in k6971 in k6680 in k6677 in k6674 in k6671 */
static void C_ccall f_38419(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 380  hash-table-set!");
t2=C_retrieve(lf[852]);
((C_proc5)C_retrieve_proc(t2))(5,t2,((C_word*)t0)[2],C_retrieve2(lf[424],"*rules*"),C_fix(32512),t1);}

/* k26251 in k25668 in k25665 in k25142 in k25139 in k25136 in k25133 in k25130 in k25127 in k25124 in k25121 in k25118 in k25115 in k25112 in k25109 in k25106 in k25103 in k25100 in k25097 in k25094 in k25091 in k25088 in k25085 in k25082 in k24943 in k24940 in k24937 in k24934 in k24878 in k24875 in k24872 in k24869 in k24866 in k24863 in k24860 in k24857 in k23555 in k23486 in k23293 in k23290 in k23185 in k23134 in k11783 in k10718 in k10715 in k7274 in k7271 in k6978 in k6975 in k6971 in k6680 in k6677 in k6674 in k6671 */
static void C_ccall f_26253(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word t14;
C_word t15;
C_word t16;
C_word t17;
C_word t18;
C_word t19;
C_word t20;
C_word t21;
C_word t22;
C_word t23;
C_word ab[63],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_26253,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_26256,a[2]=((C_word*)t0)[2],tmp=(C_word)a,a+=3,tmp);
t3=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_38274,a[2]=t2,tmp=(C_word)a,a+=3,tmp);
t4=(C_word)C_a_i_cons(&a,2,C_fix(768),C_SCHEME_END_OF_LIST);
t5=(C_word)C_a_i_cons(&a,2,C_fix(512),t4);
t6=(C_word)C_a_i_cons(&a,2,lf[456],t5);
t7=(C_word)C_a_i_cons(&a,2,C_fix(25088),C_SCHEME_END_OF_LIST);
t8=(C_word)C_a_i_cons(&a,2,C_fix(256),t7);
t9=(C_word)C_a_i_cons(&a,2,lf[129],t8);
t10=(C_word)C_a_i_cons(&a,2,C_fix(768),C_SCHEME_END_OF_LIST);
t11=(C_word)C_a_i_cons(&a,2,t9,t10);
t12=(C_word)C_a_i_cons(&a,2,C_fix(25088),t11);
t13=(C_word)C_a_i_cons(&a,2,C_fix(512),t12);
t14=(C_word)C_a_i_cons(&a,2,lf[456],t13);
t15=(C_word)C_a_i_cons(&a,2,t14,C_SCHEME_END_OF_LIST);
t16=(C_word)C_a_i_cons(&a,2,t6,t15);
t17=(C_word)C_a_i_cons(&a,2,lf[457],t16);
t18=(C_word)C_a_i_cons(&a,2,C_fix(36608),C_SCHEME_END_OF_LIST);
t19=(C_word)C_a_i_cons(&a,2,t17,t18);
t20=(C_word)C_a_i_cons(&a,2,C_fix(25088),t19);
t21=(C_word)C_a_i_cons(&a,2,lf[456],t20);
t22=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_38280,a[2]=((C_word)li637),tmp=(C_word)a,a+=3,tmp);
C_trace("ChickenBridge.scm: 380  make-rule");
f_23189(t3,lf[935],C_fix(37632),t21,t22,C_SCHEME_FALSE);}

/* a38279 in k26251 in k25668 in k25665 in k25142 in k25139 in k25136 in k25133 in k25130 in k25127 in k25124 in k25121 in k25118 in k25115 in k25112 in k25109 in k25106 in k25103 in k25100 in k25097 in k25094 in k25091 in k25088 in k25085 in k25082 in k24943 in k24940 in k24937 in k24934 in k24878 in k24875 in k24872 in k24869 in k24866 in k24863 in k24860 in k24857 in k23555 in k23486 in k23293 in k23290 in k23185 in k23134 in k11783 in k10718 in k10715 in k7274 in k7271 in k6978 in k6975 in k6971 in k6680 in k6677 in k6674 in k6671 */
static void C_ccall f_38280(C_word c,C_word t0,C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word t14;
C_word t15;
C_word ab[13],*a=ab;
if(c!=4) C_bad_argc_2(c,4,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr4,(void*)f_38280,4,t0,t1,t2,t3);}
t4=(C_word)C_i_car(t2);
t5=(C_word)C_i_cadr(t2);
t6=t5;
t7=(*a=C_VECTOR_TYPE|1,a[1]=t6,tmp=(C_word)a,a+=2,tmp);
t8=(C_word)C_i_caddr(t2);
t9=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_38293,a[2]=t1,a[3]=t8,a[4]=t7,a[5]=t4,tmp=(C_word)a,a+=6,tmp);
t10=(C_word)C_i_length(((C_word*)t7)[1]);
if(C_truep((C_word)C_i_nequalp(t10,C_fix(2)))){
t11=C_set_block_item(t7,0,C_SCHEME_END_OF_LIST);
t12=t9;
f_38293(t12,t11);}
else{
t11=(C_word)C_i_cadr(((C_word*)t7)[1]);
t12=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_38319,a[2]=t9,a[3]=t7,a[4]=t11,tmp=(C_word)a,a+=5,tmp);
t13=(C_word)C_i_caddr(((C_word*)t7)[1]);
C_trace("ChickenBridge.scm: 380  remove-token-type");
f_24882(t12,t13,C_fix(256));}}

/* k38317 in a38279 in k26251 in k25668 in k25665 in k25142 in k25139 in k25136 in k25133 in k25130 in k25127 in k25124 in k25121 in k25118 in k25115 in k25112 in k25109 in k25106 in k25103 in k25100 in k25097 in k25094 in k25091 in k25088 in k25085 in k25082 in k24943 in k24940 in k24937 in k24934 in k24878 in k24875 in k24872 in k24869 in k24866 in k24863 in k24860 in k24857 in k23555 in k23486 in k23293 in k23290 in k23185 in k23134 in k11783 in k10718 in k10715 in k7274 in k7271 in k6978 in k6975 in k6971 in k6680 in k6677 in k6674 in k6671 */
static void C_ccall f_38319(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[3],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_38319,2,t0,t1);}
t2=(C_word)C_a_i_cons(&a,2,((C_word*)t0)[4],t1);
t3=C_mutate(((C_word *)((C_word*)t0)[3])+1,t2);
t4=((C_word*)t0)[2];
f_38293(t4,t3);}

/* k38291 in a38279 in k26251 in k25668 in k25665 in k25142 in k25139 in k25136 in k25133 in k25130 in k25127 in k25124 in k25121 in k25118 in k25115 in k25112 in k25109 in k25106 in k25103 in k25100 in k25097 in k25094 in k25091 in k25088 in k25085 in k25082 in k24943 in k24940 in k24937 in k24934 in k24878 in k24875 in k24872 in k24869 in k24866 in k24863 in k24860 in k24857 in k23555 in k23486 in k23293 in k23290 in k23185 in k23134 in k11783 in k10718 in k10715 in k7274 in k7271 in k6978 in k6975 in k6971 in k6680 in k6677 in k6674 in k6671 */
static void C_fcall f_38293(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_38293,NULL,2,t0,t1);}
t2=(C_word)C_a_i_list(&a,3,((C_word*)t0)[5],((C_word*)((C_word*)t0)[4])[1],((C_word*)t0)[3]);
C_trace("ChickenBridge.scm: 380  make-parse-unit");
f_23490(((C_word*)t0)[2],C_fix(37632),t2,C_SCHEME_FALSE);}

/* k38272 in k26251 in k25668 in k25665 in k25142 in k25139 in k25136 in k25133 in k25130 in k25127 in k25124 in k25121 in k25118 in k25115 in k25112 in k25109 in k25106 in k25103 in k25100 in k25097 in k25094 in k25091 in k25088 in k25085 in k25082 in k24943 in k24940 in k24937 in k24934 in k24878 in k24875 in k24872 in k24869 in k24866 in k24863 in k24860 in k24857 in k23555 in k23486 in k23293 in k23290 in k23185 in k23134 in k11783 in k10718 in k10715 in k7274 in k7271 in k6978 in k6975 in k6971 in k6680 in k6677 in k6674 in k6671 */
static void C_ccall f_38274(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 380  hash-table-set!");
t2=C_retrieve(lf[852]);
((C_proc5)C_retrieve_proc(t2))(5,t2,((C_word*)t0)[2],C_retrieve2(lf[424],"*rules*"),C_fix(37632),t1);}

/* k26254 in k26251 in k25668 in k25665 in k25142 in k25139 in k25136 in k25133 in k25130 in k25127 in k25124 in k25121 in k25118 in k25115 in k25112 in k25109 in k25106 in k25103 in k25100 in k25097 in k25094 in k25091 in k25088 in k25085 in k25082 in k24943 in k24940 in k24937 in k24934 in k24878 in k24875 in k24872 in k24869 in k24866 in k24863 in k24860 in k24857 in k23555 in k23486 in k23293 in k23290 in k23185 in k23134 in k11783 in k10718 in k10715 in k7274 in k7271 in k6978 in k6975 in k6971 in k6680 in k6677 in k6674 in k6671 */
static void C_ccall f_26256(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word t14;
C_word t15;
C_word t16;
C_word t17;
C_word t18;
C_word t19;
C_word t20;
C_word t21;
C_word t22;
C_word t23;
C_word t24;
C_word t25;
C_word t26;
C_word ab[72],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_26256,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_26259,a[2]=((C_word*)t0)[2],tmp=(C_word)a,a+=3,tmp);
t3=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_37817,a[2]=t2,tmp=(C_word)a,a+=3,tmp);
t4=(C_word)C_a_i_cons(&a,2,C_fix(30208),C_SCHEME_END_OF_LIST);
t5=(C_word)C_a_i_cons(&a,2,C_fix(256),t4);
t6=(C_word)C_a_i_cons(&a,2,lf[129],t5);
t7=(C_word)C_a_i_cons(&a,2,t6,C_SCHEME_END_OF_LIST);
t8=(C_word)C_a_i_cons(&a,2,C_fix(30208),t7);
t9=(C_word)C_a_i_cons(&a,2,C_fix(24576),t8);
t10=(C_word)C_a_i_cons(&a,2,lf[456],t9);
t11=(C_word)C_a_i_cons(&a,2,C_fix(37632),C_SCHEME_END_OF_LIST);
t12=(C_word)C_a_i_cons(&a,2,C_fix(24064),t11);
t13=(C_word)C_a_i_cons(&a,2,lf[456],t12);
t14=(C_word)C_a_i_cons(&a,2,C_fix(37632),C_SCHEME_END_OF_LIST);
t15=(C_word)C_a_i_cons(&a,2,C_fix(24320),t14);
t16=(C_word)C_a_i_cons(&a,2,lf[456],t15);
t17=(C_word)C_a_i_cons(&a,2,t16,C_SCHEME_END_OF_LIST);
t18=(C_word)C_a_i_cons(&a,2,t13,t17);
t19=(C_word)C_a_i_cons(&a,2,t10,t18);
t20=(C_word)C_a_i_cons(&a,2,lf[457],t19);
t21=(C_word)C_a_i_cons(&a,2,t20,C_SCHEME_END_OF_LIST);
t22=(C_word)C_a_i_cons(&a,2,C_fix(13824),t21);
t23=(C_word)C_a_i_cons(&a,2,lf[456],t22);
t24=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_37823,a[2]=((C_word)li633),tmp=(C_word)a,a+=3,tmp);
t25=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_37862,a[2]=((C_word)li636),tmp=(C_word)a,a+=3,tmp);
C_trace("ChickenBridge.scm: 380  make-rule");
f_23189(t3,lf[934],C_fix(36352),t23,t24,t25);}

/* a37861 in k26254 in k26251 in k25668 in k25665 in k25142 in k25139 in k25136 in k25133 in k25130 in k25127 in k25124 in k25121 in k25118 in k25115 in k25112 in k25109 in k25106 in k25103 in k25100 in k25097 in k25094 in k25091 in k25088 in k25085 in k25082 in k24943 in k24940 in k24937 in k24934 in k24878 in k24875 in k24872 in k24869 in k24866 in k24863 in k24860 in k24857 in k23555 in k23486 in k23293 in k23290 in k23185 in k23134 in k11783 in k10718 in k10715 in k7274 in k7271 in k6978 in k6975 in k6971 in k6680 in k6677 in k6674 in k6671 */
static void C_ccall f_37862(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4){
C_word tmp;
C_word t5;
C_word t6;
C_word t7;
C_word ab[7],*a=ab;
if(c!=5) C_bad_argc_2(c,5,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr5,(void*)f_37862,5,t0,t1,t2,t3,t4);}
t5=(*a=C_VECTOR_TYPE|1,a[1]=t3,tmp=(C_word)a,a+=2,tmp);
t6=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_37866,a[2]=t4,a[3]=t5,a[4]=t1,tmp=(C_word)a,a+=5,tmp);
C_trace("ChickenBridge.scm: 380  parse-unit-parsed");
f_23529(t6,t2);}

/* k37864 in a37861 in k26254 in k26251 in k25668 in k25665 in k25142 in k25139 in k25136 in k25133 in k25130 in k25127 in k25124 in k25121 in k25118 in k25115 in k25112 in k25109 in k25106 in k25103 in k25100 in k25097 in k25094 in k25091 in k25088 in k25085 in k25082 in k24943 in k24940 in k24937 in k24934 in k24878 in k24875 in k24872 in k24869 in k24866 in k24863 in k24860 in k24857 in k23555 in k23486 in k23293 in k23290 in k23185 in k23134 in k11783 in k10718 in k10715 in k7274 in k7271 in k6978 in k6975 in k6971 in k6680 in k6677 in k6674 in k6671 */
static void C_ccall f_37866(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word ab[18],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_37866,2,t0,t1);}
t2=(C_word)C_i_car(t1);
t3=(C_word)C_a_i_list(&a,1,lf[484]);
t4=t3;
t5=(*a=C_VECTOR_TYPE|1,a[1]=t4,tmp=(C_word)a,a+=2,tmp);
t6=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_37875,a[2]=t3,a[3]=((C_word*)t0)[4],tmp=(C_word)a,a+=4,tmp);
t7=(*a=C_CLOSURE_TYPE|8,a[1]=(C_word)f_37878,a[2]=t2,a[3]=t3,a[4]=t6,a[5]=((C_word*)t0)[2],a[6]=((C_word*)t0)[3],a[7]=t5,a[8]=t1,tmp=(C_word)a,a+=9,tmp);
C_trace("ChickenBridge.scm: 380  token-unit-type=?");
f_23575(t7,t2,C_fix(24576));}

/* k37876 in k37864 in a37861 in k26254 in k26251 in k25668 in k25665 in k25142 in k25139 in k25136 in k25133 in k25130 in k25127 in k25124 in k25121 in k25118 in k25115 in k25112 in k25109 in k25106 in k25103 in k25100 in k25097 in k25094 in k25091 in k25088 in k25085 in k25082 in k24943 in k24940 in k24937 in k24934 in k24878 in k24875 in k24872 in k24869 in k24866 in k24863 in k24860 in k24857 in k23555 in k23486 in k23293 in k23290 in k23185 in k23134 in k11783 in k10718 in k10715 in k7274 in k7271 in k6978 in k6975 in k6971 in k6680 in k6677 in k6674 in k6671 */
static void C_ccall f_37878(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word ab[16],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_37878,2,t0,t1);}
if(C_truep(t1)){
t2=(C_word)C_i_cdr(((C_word*)t0)[8]);
t3=C_SCHEME_UNDEFINED;
t4=(*a=C_VECTOR_TYPE|1,a[1]=t3,tmp=(C_word)a,a+=2,tmp);
t5=C_set_block_item(t4,0,(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_37887,a[2]=((C_word*)t0)[5],a[3]=((C_word*)t0)[6],a[4]=t4,a[5]=((C_word*)t0)[7],a[6]=((C_word)li634),tmp=(C_word)a,a+=7,tmp));
t6=((C_word*)t4)[1];
f_37887(t6,((C_word*)t0)[4],t2);}
else{
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_37936,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[5],a[4]=((C_word*)t0)[6],a[5]=((C_word*)t0)[3],a[6]=((C_word*)t0)[4],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cadr(((C_word*)t0)[8]);
C_trace("ChickenBridge.scm: 380  parse-unit-parsed");
f_23529(t2,t3);}}

/* k37934 in k37876 in k37864 in a37861 in k26254 in k26251 in k25668 in k25665 in k25142 in k25139 in k25136 in k25133 in k25130 in k25127 in k25124 in k25121 in k25118 in k25115 in k25112 in k25109 in k25106 in k25103 in k25100 in k25097 in k25094 in k25091 in k25088 in k25085 in k25082 in k24943 in k24940 in k24937 in k24934 in k24878 in k24875 in k24872 in k24869 in k24866 in k24863 in k24860 in k24857 in k23555 in k23486 in k23293 in k23290 in k23185 in k23134 in k11783 in k10718 in k10715 in k7274 in k7271 in k6978 in k6975 in k6971 in k6680 in k6677 in k6674 in k6671 */
static void C_ccall f_37936(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[8],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_37936,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_37939,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],a[7]=t1,tmp=(C_word)a,a+=8,tmp);
t3=(C_word)C_i_car(t1);
C_trace("ChickenBridge.scm: 380  emit");
f_23704(t2,t3,((C_word*)((C_word*)t0)[4])[1],((C_word*)t0)[3]);}

/* k37937 in k37934 in k37876 in k37864 in a37861 in k26254 in k26251 in k25668 in k25665 in k25142 in k25139 in k25136 in k25133 in k25130 in k25127 in k25124 in k25121 in k25118 in k25115 in k25112 in k25109 in k25106 in k25103 in k25100 in k25097 in k25094 in k25091 in k25088 in k25085 in k25082 in k24943 in k24940 in k24937 in k24934 in k24878 in k24875 in k24872 in k24869 in k24866 in k24863 in k24860 in k24857 in k23555 in k23486 in k23293 in k23290 in k23185 in k23134 in k11783 in k10718 in k10715 in k7274 in k7271 in k6978 in k6975 in k6971 in k6680 in k6677 in k6674 in k6671 */
static void C_ccall f_37939(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_37939,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|8,a[1]=(C_word)f_37942,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],a[7]=((C_word*)t0)[7],a[8]=t1,tmp=(C_word)a,a+=9,tmp);
t3=(C_word)C_i_cadr(((C_word*)t0)[7]);
C_trace("ChickenBridge.scm: 380  emit");
f_23704(t2,t3,((C_word*)((C_word*)t0)[4])[1],((C_word*)t0)[3]);}

/* k37940 in k37937 in k37934 in k37876 in k37864 in a37861 in k26254 in k26251 in k25668 in k25665 in k25142 in k25139 in k25136 in k25133 in k25130 in k25127 in k25124 in k25121 in k25118 in k25115 in k25112 in k25109 in k25106 in k25103 in k25100 in k25097 in k25094 in k25091 in k25088 in k25085 in k25082 in k24943 in k24940 in k24937 in k24934 in k24878 in k24875 in k24872 in k24869 in k24866 in k24863 in k24860 in k24857 in k23555 in k23486 in k23293 in k23290 in k23185 in k23134 in k11783 in k10718 in k10715 in k7274 in k7271 in k6978 in k6975 in k6971 in k6680 in k6677 in k6674 in k6671 */
static void C_ccall f_37942(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[10],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_37942,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|9,a[1]=(C_word)f_38154,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=t1,a[6]=((C_word*)t0)[5],a[7]=((C_word*)t0)[6],a[8]=((C_word*)t0)[7],a[9]=((C_word*)t0)[8],tmp=(C_word)a,a+=10,tmp);
C_trace("ChickenBridge.scm: 380  append");
t3=*((C_word*)lf[18]+1);
((C_proc4)C_retrieve_proc(t3))(4,t3,t2,t1,C_SCHEME_END_OF_LIST);}

/* k38152 in k37940 in k37937 in k37934 in k37876 in k37864 in a37861 in k26254 in k26251 in k25668 in k25665 in k25142 in k25139 in k25136 in k25133 in k25130 in k25127 in k25124 in k25121 in k25118 in k25115 in k25112 in k25109 in k25106 in k25103 in k25100 in k25097 in k25094 in k25091 in k25088 in k25085 in k25082 in k24943 in k24940 in k24937 in k24934 in k24878 in k24875 in k24872 in k24869 in k24866 in k24863 in k24860 in k24857 in k23555 in k23486 in k23293 in k23290 in k23185 in k23134 in k11783 in k10718 in k10715 in k7274 in k7271 in k6978 in k6975 in k6971 in k6680 in k6677 in k6674 in k6671 */
static void C_ccall f_38154(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word t14;
C_word t15;
C_word ab[28],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_38154,2,t0,t1);}
t2=(C_word)C_a_i_cons(&a,2,((C_word*)t0)[9],t1);
t3=(C_word)C_i_caddr(((C_word*)t0)[8]);
t4=C_SCHEME_FALSE;
t5=(*a=C_VECTOR_TYPE|1,a[1]=t4,tmp=(C_word)a,a+=2,tmp);
t6=C_SCHEME_FALSE;
t7=(*a=C_VECTOR_TYPE|1,a[1]=t6,tmp=(C_word)a,a+=2,tmp);
t8=(*a=C_CLOSURE_TYPE|12,a[1]=(C_word)f_37951,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=t3,a[5]=t2,a[6]=((C_word*)t0)[4],a[7]=((C_word*)t0)[9],a[8]=((C_word*)t0)[5],a[9]=((C_word*)t0)[6],a[10]=((C_word*)t0)[7],a[11]=t7,a[12]=t5,tmp=(C_word)a,a+=13,tmp);
t9=(C_word)C_i_cdr(t2);
if(C_truep((C_word)C_i_nullp(t9))){
t10=t8;
f_37951(t10,C_SCHEME_UNDEFINED);}
else{
t10=(C_word)C_i_length(t2);
t11=(C_word)C_a_i_minus(&a,2,t10,C_fix(2));
t12=(C_word)C_i_list_tail(t2,t11);
t13=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_38092,a[2]=t12,a[3]=t8,tmp=(C_word)a,a+=4,tmp);
t14=(C_word)C_i_cadr(t12);
C_trace("ChickenBridge.scm: 380  symbol->string");
t15=*((C_word*)lf[25]+1);
((C_proc3)C_retrieve_proc(t15))(3,t15,t13,t14);}}

/* k38090 in k38152 in k37940 in k37937 in k37934 in k37876 in k37864 in a37861 in k26254 in k26251 in k25668 in k25665 in k25142 in k25139 in k25136 in k25133 in k25130 in k25127 in k25124 in k25121 in k25118 in k25115 in k25112 in k25109 in k25106 in k25103 in k25100 in k25097 in k25094 in k25091 in k25088 in k25085 in k25082 in k24943 in k24940 in k24937 in k24934 in k24878 in k24875 in k24872 in k24869 in k24866 in k24863 in k24860 in k24857 in k23555 in k23486 in k23293 in k23290 in k23185 in k23134 in k11783 in k10718 in k10715 in k7274 in k7271 in k6978 in k6975 in k6971 in k6680 in k6677 in k6674 in k6671 */
static void C_ccall f_38092(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[13],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_38092,2,t0,t1);}
t2=(C_word)C_i_string_length(t1);
t3=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_38101,a[2]=t1,a[3]=t2,a[4]=((C_word*)t0)[2],a[5]=((C_word*)t0)[3],tmp=(C_word)a,a+=6,tmp);
if(C_truep((C_word)C_i_greaterp(t2,C_fix(3)))){
t4=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_38126,a[2]=t3,tmp=(C_word)a,a+=3,tmp);
t5=(C_word)C_a_i_minus(&a,2,t2,C_fix(3));
C_trace("ChickenBridge.scm: 380  substring");
t6=*((C_word*)lf[498]+1);
((C_proc4)C_retrieve_proc(t6))(4,t6,t4,t1,t5);}
else{
t4=t3;
f_38101(t4,C_SCHEME_FALSE);}}

/* k38124 in k38090 in k38152 in k37940 in k37937 in k37934 in k37876 in k37864 in a37861 in k26254 in k26251 in k25668 in k25665 in k25142 in k25139 in k25136 in k25133 in k25130 in k25127 in k25124 in k25121 in k25118 in k25115 in k25112 in k25109 in k25106 in k25103 in k25100 in k25097 in k25094 in k25091 in k25088 in k25085 in k25082 in k24943 in k24940 in k24937 in k24934 in k24878 in k24875 in k24872 in k24869 in k24866 in k24863 in k24860 in k24857 in k23555 in k23486 in k23293 in k23290 in k23185 in k23134 in k11783 in k10718 in k10715 in k7274 in k7271 in k6978 in k6975 in k6971 in k6680 in k6677 in k6674 in k6671 */
static void C_ccall f_38126(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
t2=((C_word*)t0)[2];
f_38101(t2,(C_word)C_i_string_equal_p(t1,lf[933]));}

/* k38099 in k38090 in k38152 in k37940 in k37937 in k37934 in k37876 in k37864 in a37861 in k26254 in k26251 in k25668 in k25665 in k25142 in k25139 in k25136 in k25133 in k25130 in k25127 in k25124 in k25121 in k25118 in k25115 in k25112 in k25109 in k25106 in k25103 in k25100 in k25097 in k25094 in k25091 in k25088 in k25085 in k25082 in k24943 in k24940 in k24937 in k24934 in k24878 in k24875 in k24872 in k24869 in k24866 in k24863 in k24860 in k24857 in k23555 in k23486 in k23293 in k23290 in k23185 in k23134 in k11783 in k10718 in k10715 in k7274 in k7271 in k6978 in k6975 in k6971 in k6680 in k6677 in k6674 in k6671 */
static void C_fcall f_38101(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[11],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_38101,NULL,2,t0,t1);}
if(C_truep(t1)){
t2=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_38108,a[2]=((C_word*)t0)[4],a[3]=((C_word*)t0)[5],tmp=(C_word)a,a+=4,tmp);
t3=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_38112,a[2]=t2,tmp=(C_word)a,a+=3,tmp);
t4=(C_word)C_a_i_minus(&a,2,((C_word*)t0)[3],C_fix(3));
C_trace("ChickenBridge.scm: 380  substring");
t5=*((C_word*)lf[498]+1);
((C_proc5)C_retrieve_proc(t5))(5,t5,t3,((C_word*)t0)[2],C_fix(0),t4);}
else{
t2=((C_word*)t0)[5];
f_37951(t2,C_SCHEME_UNDEFINED);}}

/* k38110 in k38099 in k38090 in k38152 in k37940 in k37937 in k37934 in k37876 in k37864 in a37861 in k26254 in k26251 in k25668 in k25665 in k25142 in k25139 in k25136 in k25133 in k25130 in k25127 in k25124 in k25121 in k25118 in k25115 in k25112 in k25109 in k25106 in k25103 in k25100 in k25097 in k25094 in k25091 in k25088 in k25085 in k25082 in k24943 in k24940 in k24937 in k24934 in k24878 in k24875 in k24872 in k24869 in k24866 in k24863 in k24860 in k24857 in k23555 in k23486 in k23293 in k23290 in k23185 in k23134 in k11783 in k10718 in k10715 in k7274 in k7271 in k6978 in k6975 in k6971 in k6680 in k6677 in k6674 in k6671 */
static void C_ccall f_38112(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 380  string->symbol");
t2=*((C_word*)lf[454]+1);
((C_proc3)C_retrieve_proc(t2))(3,t2,((C_word*)t0)[2],t1);}

/* k38106 in k38099 in k38090 in k38152 in k37940 in k37937 in k37934 in k37876 in k37864 in a37861 in k26254 in k26251 in k25668 in k25665 in k25142 in k25139 in k25136 in k25133 in k25130 in k25127 in k25124 in k25121 in k25118 in k25115 in k25112 in k25109 in k25106 in k25103 in k25100 in k25097 in k25094 in k25091 in k25088 in k25085 in k25082 in k24943 in k24940 in k24937 in k24934 in k24878 in k24875 in k24872 in k24869 in k24866 in k24863 in k24860 in k24857 in k23555 in k23486 in k23293 in k23290 in k23185 in k23134 in k11783 in k10718 in k10715 in k7274 in k7271 in k6978 in k6975 in k6971 in k6680 in k6677 in k6674 in k6671 */
static void C_ccall f_38108(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
t2=((C_word*)t0)[3];
f_37951(t2,(C_word)C_i_set_cdr(((C_word*)t0)[2],t1));}

/* k37949 in k38152 in k37940 in k37937 in k37934 in k37876 in k37864 in a37861 in k26254 in k26251 in k25668 in k25665 in k25142 in k25139 in k25136 in k25133 in k25130 in k25127 in k25124 in k25121 in k25118 in k25115 in k25112 in k25109 in k25106 in k25103 in k25100 in k25097 in k25094 in k25091 in k25088 in k25085 in k25082 in k24943 in k24940 in k24937 in k24934 in k24878 in k24875 in k24872 in k24869 in k24866 in k24863 in k24860 in k24857 in k23555 in k23486 in k23293 in k23290 in k23185 in k23134 in k11783 in k10718 in k10715 in k7274 in k7271 in k6978 in k6975 in k6971 in k6680 in k6677 in k6674 in k6671 */
static void C_fcall f_37951(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[18],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_37951,NULL,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_37954,a[2]=((C_word*)t0)[7],a[3]=((C_word*)t0)[8],a[4]=((C_word*)t0)[9],a[5]=((C_word*)t0)[10],a[6]=((C_word*)t0)[11],a[7]=((C_word*)t0)[12],tmp=(C_word)a,a+=8,tmp);
t3=(*a=C_CLOSURE_TYPE|9,a[1]=(C_word)f_38029,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=t2,a[6]=((C_word*)t0)[12],a[7]=((C_word*)t0)[5],a[8]=((C_word*)t0)[11],a[9]=((C_word*)t0)[6],tmp=(C_word)a,a+=10,tmp);
C_trace("ChickenBridge.scm: 380  token-unit-type=?");
f_23575(t3,((C_word*)t0)[2],C_fix(24064));}

/* k38027 in k37949 in k38152 in k37940 in k37937 in k37934 in k37876 in k37864 in a37861 in k26254 in k26251 in k25668 in k25665 in k25142 in k25139 in k25136 in k25133 in k25130 in k25127 in k25124 in k25121 in k25118 in k25115 in k25112 in k25109 in k25106 in k25103 in k25100 in k25097 in k25094 in k25091 in k25088 in k25085 in k25082 in k24943 in k24940 in k24937 in k24934 in k24878 in k24875 in k24872 in k24869 in k24866 in k24863 in k24860 in k24857 in k23555 in k23486 in k23293 in k23290 in k23185 in k23134 in k11783 in k10718 in k10715 in k7274 in k7271 in k6978 in k6975 in k6971 in k6680 in k6677 in k6674 in k6671 */
static void C_ccall f_38029(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[18],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_38029,2,t0,t1);}
if(C_truep(t1)){
t2=(*a=C_CLOSURE_TYPE|8,a[1]=(C_word)f_38033,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],a[7]=((C_word*)t0)[8],a[8]=((C_word*)t0)[9],tmp=(C_word)a,a+=9,tmp);
C_trace("ChickenBridge.scm: 380  add-emit-info");
f_23619(t2,lf[930],C_SCHEME_TRUE,((C_word*)((C_word*)t0)[9])[1]);}
else{
t2=(*a=C_CLOSURE_TYPE|8,a[1]=(C_word)f_38070,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],a[7]=((C_word*)t0)[8],a[8]=((C_word*)t0)[9],tmp=(C_word)a,a+=9,tmp);
C_trace("ChickenBridge.scm: 380  token-unit-type=?");
f_23575(t2,((C_word*)t0)[2],C_fix(24320));}}

/* k38068 in k38027 in k37949 in k38152 in k37940 in k37937 in k37934 in k37876 in k37864 in a37861 in k26254 in k26251 in k25668 in k25665 in k25142 in k25139 in k25136 in k25133 in k25130 in k25127 in k25124 in k25121 in k25118 in k25115 in k25112 in k25109 in k25106 in k25103 in k25100 in k25097 in k25094 in k25091 in k25088 in k25085 in k25082 in k24943 in k24940 in k24937 in k24934 in k24878 in k24875 in k24872 in k24869 in k24866 in k24863 in k24860 in k24857 in k23555 in k23486 in k23293 in k23290 in k23185 in k23134 in k11783 in k10718 in k10715 in k7274 in k7271 in k6978 in k6975 in k6971 in k6680 in k6677 in k6674 in k6671 */
static void C_ccall f_38070(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_38070,2,t0,t1);}
if(C_truep(t1)){
t2=(*a=C_CLOSURE_TYPE|8,a[1]=(C_word)f_38074,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],a[7]=((C_word*)t0)[7],a[8]=((C_word*)t0)[8],tmp=(C_word)a,a+=9,tmp);
C_trace("ChickenBridge.scm: 380  add-emit-info");
f_23619(t2,lf[932],C_SCHEME_TRUE,((C_word*)((C_word*)t0)[8])[1]);}
else{
t2=((C_word*)t0)[4];
f_37954(t2,C_SCHEME_UNDEFINED);}}

/* k38072 in k38068 in k38027 in k37949 in k38152 in k37940 in k37937 in k37934 in k37876 in k37864 in a37861 in k26254 in k26251 in k25668 in k25665 in k25142 in k25139 in k25136 in k25133 in k25130 in k25127 in k25124 in k25121 in k25118 in k25115 in k25112 in k25109 in k25106 in k25103 in k25100 in k25097 in k25094 in k25091 in k25088 in k25085 in k25082 in k24943 in k24940 in k24937 in k24934 in k24878 in k24875 in k24872 in k24869 in k24866 in k24863 in k24860 in k24857 in k23555 in k23486 in k23293 in k23290 in k23185 in k23134 in k11783 in k10718 in k10715 in k7274 in k7271 in k6978 in k6975 in k6971 in k6680 in k6677 in k6674 in k6671 */
static void C_ccall f_38074(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[6],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_38074,2,t0,t1);}
t2=C_mutate(((C_word *)((C_word*)t0)[8])+1,t1);
t3=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_38078,a[2]=((C_word*)t0)[4],a[3]=((C_word*)t0)[5],a[4]=((C_word*)t0)[6],a[5]=((C_word*)t0)[7],tmp=(C_word)a,a+=6,tmp);
C_trace("ChickenBridge.scm: 380  emit");
f_23704(t3,((C_word*)t0)[3],((C_word*)((C_word*)t0)[8])[1],((C_word*)t0)[2]);}

/* k38076 in k38072 in k38068 in k38027 in k37949 in k38152 in k37940 in k37937 in k37934 in k37876 in k37864 in a37861 in k26254 in k26251 in k25668 in k25665 in k25142 in k25139 in k25136 in k25133 in k25130 in k25127 in k25124 in k25121 in k25118 in k25115 in k25112 in k25109 in k25106 in k25103 in k25100 in k25097 in k25094 in k25091 in k25088 in k25085 in k25082 in k24943 in k24940 in k24937 in k24934 in k24878 in k24875 in k24872 in k24869 in k24866 in k24863 in k24860 in k24857 in k23555 in k23486 in k23293 in k23290 in k23185 in k23134 in k11783 in k10718 in k10715 in k7274 in k7271 in k6978 in k6975 in k6971 in k6680 in k6677 in k6674 in k6671 */
static void C_ccall f_38078(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_38078,2,t0,t1);}
t2=C_mutate(((C_word *)((C_word*)t0)[5])+1,t1);
t3=(C_word)C_a_i_list(&a,3,lf[835],((C_word*)t0)[4],((C_word*)((C_word*)t0)[5])[1]);
t4=C_mutate(((C_word *)((C_word*)t0)[5])+1,t3);
t5=C_mutate(((C_word *)((C_word*)t0)[3])+1,lf[931]);
t6=((C_word*)t0)[2];
f_37954(t6,t5);}

/* k38031 in k38027 in k37949 in k38152 in k37940 in k37937 in k37934 in k37876 in k37864 in a37861 in k26254 in k26251 in k25668 in k25665 in k25142 in k25139 in k25136 in k25133 in k25130 in k25127 in k25124 in k25121 in k25118 in k25115 in k25112 in k25109 in k25106 in k25103 in k25100 in k25097 in k25094 in k25091 in k25088 in k25085 in k25082 in k24943 in k24940 in k24937 in k24934 in k24878 in k24875 in k24872 in k24869 in k24866 in k24863 in k24860 in k24857 in k23555 in k23486 in k23293 in k23290 in k23185 in k23134 in k11783 in k10718 in k10715 in k7274 in k7271 in k6978 in k6975 in k6971 in k6680 in k6677 in k6674 in k6671 */
static void C_ccall f_38033(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_38033,2,t0,t1);}
t2=C_mutate(((C_word *)((C_word*)t0)[8])+1,t1);
t3=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_38037,a[2]=((C_word*)t0)[8],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
C_trace("ChickenBridge.scm: 380  emit");
f_23704(t3,((C_word*)t0)[3],((C_word*)((C_word*)t0)[8])[1],((C_word*)t0)[2]);}

/* k38035 in k38031 in k38027 in k37949 in k38152 in k37940 in k37937 in k37934 in k37876 in k37864 in a37861 in k26254 in k26251 in k25668 in k25665 in k25142 in k25139 in k25136 in k25133 in k25130 in k25127 in k25124 in k25121 in k25118 in k25115 in k25112 in k25109 in k25106 in k25103 in k25100 in k25097 in k25094 in k25091 in k25088 in k25085 in k25082 in k24943 in k24940 in k24937 in k24934 in k24878 in k24875 in k24872 in k24869 in k24866 in k24863 in k24860 in k24857 in k23555 in k23486 in k23293 in k23290 in k23185 in k23134 in k11783 in k10718 in k10715 in k7274 in k7271 in k6978 in k6975 in k6971 in k6680 in k6677 in k6674 in k6671 */
static void C_ccall f_38037(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[10],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_38037,2,t0,t1);}
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_38040,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[6],a[5]=((C_word*)t0)[5],tmp=(C_word)a,a+=6,tmp);
t4=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_38064,a[2]=t3,a[3]=((C_word*)t0)[6],tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 380  get-emit-info");
f_23607(t4,lf[930],((C_word*)((C_word*)t0)[2])[1]);}

/* k38062 in k38035 in k38031 in k38027 in k37949 in k38152 in k37940 in k37937 in k37934 in k37876 in k37864 in a37861 in k26254 in k26251 in k25668 in k25665 in k25142 in k25139 in k25136 in k25133 in k25130 in k25127 in k25124 in k25121 in k25118 in k25115 in k25112 in k25109 in k25106 in k25103 in k25100 in k25097 in k25094 in k25091 in k25088 in k25085 in k25082 in k24943 in k24940 in k24937 in k24934 in k24878 in k24875 in k24872 in k24869 in k24866 in k24863 in k24860 in k24857 in k23555 in k23486 in k23293 in k23290 in k23185 in k23134 in k11783 in k10718 in k10715 in k7274 in k7271 in k6978 in k6975 in k6971 in k6680 in k6677 in k6674 in k6671 */
static void C_ccall f_38064(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word ab[18],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_38064,2,t0,t1);}
t2=(C_word)C_eqp(lf[929],t1);
if(C_truep(t2)){
t3=(C_word)C_a_i_list(&a,1,lf[683]);
t4=(C_word)C_a_i_list(&a,3,lf[839],t3,((C_word*)((C_word*)t0)[3])[1]);
t5=(C_word)C_a_i_list(&a,2,lf[779],t4);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_38040(t7,t6);}
else{
t3=((C_word*)t0)[2];
f_38040(t3,C_SCHEME_UNDEFINED);}}

/* k38038 in k38035 in k38031 in k38027 in k37949 in k38152 in k37940 in k37937 in k37934 in k37876 in k37864 in a37861 in k26254 in k26251 in k25668 in k25665 in k25142 in k25139 in k25136 in k25133 in k25130 in k25127 in k25124 in k25121 in k25118 in k25115 in k25112 in k25109 in k25106 in k25103 in k25100 in k25097 in k25094 in k25091 in k25088 in k25085 in k25082 in k24943 in k24940 in k24937 in k24934 in k24878 in k24875 in k24872 in k24869 in k24866 in k24863 in k24860 in k24857 in k23555 in k23486 in k23293 in k23290 in k23185 in k23134 in k11783 in k10718 in k10715 in k7274 in k7271 in k6978 in k6975 in k6971 in k6680 in k6677 in k6674 in k6671 */
static void C_fcall f_38040(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_38040,NULL,2,t0,t1);}
t2=(C_word)C_a_i_list(&a,3,lf[835],((C_word*)t0)[5],((C_word*)((C_word*)t0)[4])[1]);
t3=C_mutate(((C_word *)((C_word*)t0)[4])+1,t2);
t4=C_mutate(((C_word *)((C_word*)t0)[3])+1,lf[928]);
t5=((C_word*)t0)[2];
f_37954(t5,t4);}

/* k37952 in k37949 in k38152 in k37940 in k37937 in k37934 in k37876 in k37864 in a37861 in k26254 in k26251 in k25668 in k25665 in k25142 in k25139 in k25136 in k25133 in k25130 in k25127 in k25124 in k25121 in k25118 in k25115 in k25112 in k25109 in k25106 in k25103 in k25100 in k25097 in k25094 in k25091 in k25088 in k25085 in k25082 in k24943 in k24940 in k24937 in k24934 in k24878 in k24875 in k24872 in k24869 in k24866 in k24863 in k24860 in k24857 in k23555 in k23486 in k23293 in k23290 in k23185 in k23134 in k11783 in k10718 in k10715 in k7274 in k7271 in k6978 in k6975 in k6971 in k6680 in k6677 in k6674 in k6671 */
static void C_fcall f_37954(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[15],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_37954,NULL,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_37957,a[2]=((C_word*)t0)[4],a[3]=((C_word*)t0)[5],a[4]=((C_word*)t0)[6],a[5]=((C_word*)t0)[7],tmp=(C_word)a,a+=6,tmp);
t3=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_37968,a[2]=((C_word*)t0)[3],a[3]=t2,a[4]=((C_word*)t0)[7],tmp=(C_word)a,a+=5,tmp);
t4=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_38026,a[2]=((C_word*)t0)[7],a[3]=t3,tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 380  symbol->string");
t5=*((C_word*)lf[25]+1);
((C_proc3)C_retrieve_proc(t5))(3,t5,t4,((C_word*)t0)[2]);}

/* k38024 in k37952 in k37949 in k38152 in k37940 in k37937 in k37934 in k37876 in k37864 in a37861 in k26254 in k26251 in k25668 in k25665 in k25142 in k25139 in k25136 in k25133 in k25130 in k25127 in k25124 in k25121 in k25118 in k25115 in k25112 in k25109 in k25106 in k25103 in k25100 in k25097 in k25094 in k25091 in k25088 in k25085 in k25082 in k24943 in k24940 in k24937 in k24934 in k24878 in k24875 in k24872 in k24869 in k24866 in k24863 in k24860 in k24857 in k23555 in k23486 in k23293 in k23290 in k23185 in k23134 in k11783 in k10718 in k10715 in k7274 in k7271 in k6978 in k6975 in k6971 in k6680 in k6677 in k6674 in k6671 */
static void C_ccall f_38026(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 380  string-append");
t2=*((C_word*)lf[53]+1);
((C_proc5)C_retrieve_proc(t2))(5,t2,((C_word*)t0)[3],((C_word*)((C_word*)t0)[2])[1],t1,lf[927]);}

/* k37966 in k37952 in k37949 in k38152 in k37940 in k37937 in k37934 in k37876 in k37864 in a37861 in k26254 in k26251 in k25668 in k25665 in k25142 in k25139 in k25136 in k25133 in k25130 in k25127 in k25124 in k25121 in k25118 in k25115 in k25112 in k25109 in k25106 in k25103 in k25100 in k25097 in k25094 in k25091 in k25088 in k25085 in k25082 in k24943 in k24940 in k24937 in k24934 in k24878 in k24875 in k24872 in k24869 in k24866 in k24863 in k24860 in k24857 in k23555 in k23486 in k23293 in k23290 in k23185 in k23134 in k11783 in k10718 in k10715 in k7274 in k7271 in k6978 in k6975 in k6971 in k6680 in k6677 in k6674 in k6671 */
static void C_ccall f_37968(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_37968,2,t0,t1);}
t2=C_SCHEME_UNDEFINED;
t3=(*a=C_VECTOR_TYPE|1,a[1]=t2,tmp=(C_word)a,a+=2,tmp);
t4=C_set_block_item(t3,0,(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_37970,a[2]=t3,a[3]=((C_word*)t0)[4],a[4]=((C_word)li635),tmp=(C_word)a,a+=5,tmp));
t5=((C_word*)t3)[1];
f_37970(t5,((C_word*)t0)[3],t1,((C_word*)t0)[2]);}

/* do4071 in k37966 in k37952 in k37949 in k38152 in k37940 in k37937 in k37934 in k37876 in k37864 in a37861 in k26254 in k26251 in k25668 in k25665 in k25142 in k25139 in k25136 in k25133 in k25130 in k25127 in k25124 in k25121 in k25118 in k25115 in k25112 in k25109 in k25106 in k25103 in k25100 in k25097 in k25094 in k25091 in k25088 in k25085 in k25082 in k24943 in k24940 in k24937 in k24934 in k24878 in k24875 in k24872 in k24869 in k24866 in k24863 in k24860 in k24857 in k23555 in k23486 in k23293 in k23290 in k23185 in k23134 in k11783 in k10718 in k10715 in k7274 in k7271 in k6978 in k6975 in k6971 in k6680 in k6677 in k6674 in k6671 */
static void C_fcall f_37970(C_word t0,C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word ab[16],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_37970,NULL,4,t0,t1,t2,t3);}
t4=(*a=C_VECTOR_TYPE|1,a[1]=t2,tmp=(C_word)a,a+=2,tmp);
if(C_truep((C_word)C_i_nullp(t3))){
t5=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_37985,a[2]=t1,a[3]=((C_word*)t0)[3],tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 380  string-append");
t6=*((C_word*)lf[53]+1);
((C_proc4)C_retrieve_proc(t6))(4,t6,t5,((C_word*)t4)[1],lf[925]);}
else{
t5=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_37989,a[2]=t1,a[3]=((C_word*)t0)[2],a[4]=t3,a[5]=t4,tmp=(C_word)a,a+=6,tmp);
t6=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_38018,a[2]=t4,a[3]=t5,tmp=(C_word)a,a+=4,tmp);
t7=(C_word)C_i_car(t3);
C_trace("ChickenBridge.scm: 380  symbol->string");
t8=*((C_word*)lf[25]+1);
((C_proc3)C_retrieve_proc(t8))(3,t8,t6,t7);}}

/* k38016 in do4071 in k37966 in k37952 in k37949 in k38152 in k37940 in k37937 in k37934 in k37876 in k37864 in a37861 in k26254 in k26251 in k25668 in k25665 in k25142 in k25139 in k25136 in k25133 in k25130 in k25127 in k25124 in k25121 in k25118 in k25115 in k25112 in k25109 in k25106 in k25103 in k25100 in k25097 in k25094 in k25091 in k25088 in k25085 in k25082 in k24943 in k24940 in k24937 in k24934 in k24878 in k24875 in k24872 in k24869 in k24866 in k24863 in k24860 in k24857 in k23555 in k23486 in k23293 in k23290 in k23185 in k23134 in k11783 in k10718 in k10715 in k7274 in k7271 in k6978 in k6975 in k6971 in k6680 in k6677 in k6674 in k6671 */
static void C_ccall f_38018(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 380  string-append");
t2=*((C_word*)lf[53]+1);
((C_proc4)C_retrieve_proc(t2))(4,t2,((C_word*)t0)[3],((C_word*)((C_word*)t0)[2])[1],t1);}

/* k37987 in do4071 in k37966 in k37952 in k37949 in k38152 in k37940 in k37937 in k37934 in k37876 in k37864 in a37861 in k26254 in k26251 in k25668 in k25665 in k25142 in k25139 in k25136 in k25133 in k25130 in k25127 in k25124 in k25121 in k25118 in k25115 in k25112 in k25109 in k25106 in k25103 in k25100 in k25097 in k25094 in k25091 in k25088 in k25085 in k25082 in k24943 in k24940 in k24937 in k24934 in k24878 in k24875 in k24872 in k24869 in k24866 in k24863 in k24860 in k24857 in k23555 in k23486 in k23293 in k23290 in k23185 in k23134 in k11783 in k10718 in k10715 in k7274 in k7271 in k6978 in k6975 in k6971 in k6680 in k6677 in k6674 in k6671 */
static void C_ccall f_37989(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[10],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_37989,2,t0,t1);}
t2=C_mutate(((C_word *)((C_word*)t0)[5])+1,t1);
t3=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_37992,a[2]=((C_word*)t0)[5],a[3]=((C_word*)t0)[2],a[4]=((C_word*)t0)[3],a[5]=((C_word*)t0)[4],tmp=(C_word)a,a+=6,tmp);
t4=(C_word)C_i_cdr(((C_word*)t0)[4]);
if(C_truep((C_word)C_i_nullp(t4))){
t5=t3;
f_37992(t5,C_SCHEME_UNDEFINED);}
else{
t5=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_38006,a[2]=t3,a[3]=((C_word*)t0)[5],tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 380  string-append");
t6=*((C_word*)lf[53]+1);
((C_proc4)C_retrieve_proc(t6))(4,t6,t5,((C_word*)((C_word*)t0)[5])[1],lf[926]);}}

/* k38004 in k37987 in do4071 in k37966 in k37952 in k37949 in k38152 in k37940 in k37937 in k37934 in k37876 in k37864 in a37861 in k26254 in k26251 in k25668 in k25665 in k25142 in k25139 in k25136 in k25133 in k25130 in k25127 in k25124 in k25121 in k25118 in k25115 in k25112 in k25109 in k25106 in k25103 in k25100 in k25097 in k25094 in k25091 in k25088 in k25085 in k25082 in k24943 in k24940 in k24937 in k24934 in k24878 in k24875 in k24872 in k24869 in k24866 in k24863 in k24860 in k24857 in k23555 in k23486 in k23293 in k23290 in k23185 in k23134 in k11783 in k10718 in k10715 in k7274 in k7271 in k6978 in k6975 in k6971 in k6680 in k6677 in k6674 in k6671 */
static void C_ccall f_38006(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[3])+1,t1);
t3=((C_word*)t0)[2];
f_37992(t3,t2);}

/* k37990 in k37987 in do4071 in k37966 in k37952 in k37949 in k38152 in k37940 in k37937 in k37934 in k37876 in k37864 in a37861 in k26254 in k26251 in k25668 in k25665 in k25142 in k25139 in k25136 in k25133 in k25130 in k25127 in k25124 in k25121 in k25118 in k25115 in k25112 in k25109 in k25106 in k25103 in k25100 in k25097 in k25094 in k25091 in k25088 in k25085 in k25082 in k24943 in k24940 in k24937 in k24934 in k24878 in k24875 in k24872 in k24869 in k24866 in k24863 in k24860 in k24857 in k23555 in k23486 in k23293 in k23290 in k23185 in k23134 in k11783 in k10718 in k10715 in k7274 in k7271 in k6978 in k6975 in k6971 in k6680 in k6677 in k6674 in k6671 */
static void C_fcall f_37992(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word *a;
t2=(C_word)C_i_cdr(((C_word*)t0)[5]);
t3=((C_word*)((C_word*)t0)[4])[1];
f_37970(t3,((C_word*)t0)[3],((C_word*)((C_word*)t0)[2])[1],t2);}

/* k37983 in do4071 in k37966 in k37952 in k37949 in k38152 in k37940 in k37937 in k37934 in k37876 in k37864 in a37861 in k26254 in k26251 in k25668 in k25665 in k25142 in k25139 in k25136 in k25133 in k25130 in k25127 in k25124 in k25121 in k25118 in k25115 in k25112 in k25109 in k25106 in k25103 in k25100 in k25097 in k25094 in k25091 in k25088 in k25085 in k25082 in k24943 in k24940 in k24937 in k24934 in k24878 in k24875 in k24872 in k24869 in k24866 in k24863 in k24860 in k24857 in k23555 in k23486 in k23293 in k23290 in k23185 in k23134 in k11783 in k10718 in k10715 in k7274 in k7271 in k6978 in k6975 in k6971 in k6680 in k6677 in k6674 in k6671 */
static void C_ccall f_37985(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[6],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_37985,2,t0,t1);}
t2=(C_word)C_a_i_list(&a,2,lf[507],t1);
t3=C_mutate(((C_word *)((C_word*)t0)[3])+1,t2);
t4=((C_word*)t0)[2];
((C_proc2)(void*)(*((C_word*)t4+1)))(2,t4,t3);}

/* k37955 in k37952 in k37949 in k38152 in k37940 in k37937 in k37934 in k37876 in k37864 in a37861 in k26254 in k26251 in k25668 in k25665 in k25142 in k25139 in k25136 in k25133 in k25130 in k25127 in k25124 in k25121 in k25118 in k25115 in k25112 in k25109 in k25106 in k25103 in k25100 in k25097 in k25094 in k25091 in k25088 in k25085 in k25082 in k24943 in k24940 in k24937 in k24934 in k24878 in k24875 in k24872 in k24869 in k24866 in k24863 in k24860 in k24857 in k23555 in k23486 in k23293 in k23290 in k23185 in k23134 in k11783 in k10718 in k10715 in k7274 in k7271 in k6978 in k6975 in k6971 in k6680 in k6677 in k6674 in k6671 */
static void C_ccall f_37957(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[6],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_37957,2,t0,t1);}
t2=(C_word)C_a_i_list(&a,2,((C_word*)((C_word*)t0)[5])[1],((C_word*)((C_word*)t0)[4])[1]);
t3=((C_word*)t0)[3];
f_37875(2,t3,(C_word)C_i_set_cdr(((C_word*)t0)[2],t2));}

/* do4045 in k37876 in k37864 in a37861 in k26254 in k26251 in k25668 in k25665 in k25142 in k25139 in k25136 in k25133 in k25130 in k25127 in k25124 in k25121 in k25118 in k25115 in k25112 in k25109 in k25106 in k25103 in k25100 in k25097 in k25094 in k25091 in k25088 in k25085 in k25082 in k24943 in k24940 in k24937 in k24934 in k24878 in k24875 in k24872 in k24869 in k24866 in k24863 in k24860 in k24857 in k23555 in k23486 in k23293 in k23290 in k23185 in k23134 in k11783 in k10718 in k10715 in k7274 in k7271 in k6978 in k6975 in k6971 in k6680 in k6677 in k6674 in k6671 */
static void C_fcall f_37887(C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word t5;
C_word ab[6],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_37887,NULL,3,t0,t1,t2);}
if(C_truep((C_word)C_i_nullp(t2))){
t3=t1;
((C_proc2)(void*)(*((C_word*)t3+1)))(2,t3,C_SCHEME_FALSE);}
else{
t3=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_37897,a[2]=t1,a[3]=((C_word*)t0)[4],a[4]=t2,a[5]=((C_word*)t0)[5],tmp=(C_word)a,a+=6,tmp);
t4=(C_word)C_i_car(t2);
C_trace("ChickenBridge.scm: 380  emit");
f_23704(t3,t4,((C_word*)((C_word*)t0)[3])[1],((C_word*)t0)[2]);}}

/* k37895 in do4045 in k37876 in k37864 in a37861 in k26254 in k26251 in k25668 in k25665 in k25142 in k25139 in k25136 in k25133 in k25130 in k25127 in k25124 in k25121 in k25118 in k25115 in k25112 in k25109 in k25106 in k25103 in k25100 in k25097 in k25094 in k25091 in k25088 in k25085 in k25082 in k24943 in k24940 in k24937 in k24934 in k24878 in k24875 in k24872 in k24869 in k24866 in k24863 in k24860 in k24857 in k23555 in k23486 in k23293 in k23290 in k23185 in k23134 in k11783 in k10718 in k10715 in k7274 in k7271 in k6978 in k6975 in k6971 in k6680 in k6677 in k6674 in k6671 */
static void C_ccall f_37897(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[8],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_37897,2,t0,t1);}
t2=(C_word)C_i_car(t1);
t3=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_37903,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=t2,a[7]=t1,tmp=(C_word)a,a+=8,tmp);
C_trace("ChickenBridge.scm: 380  sprintf");
t4=C_retrieve(lf[31]);
((C_proc4)C_retrieve_proc(t4))(4,t4,t3,lf[924],t2);}

/* k37901 in k37895 in do4045 in k37876 in k37864 in a37861 in k26254 in k26251 in k25668 in k25665 in k25142 in k25139 in k25136 in k25133 in k25130 in k25127 in k25124 in k25121 in k25118 in k25115 in k25112 in k25109 in k25106 in k25103 in k25100 in k25097 in k25094 in k25091 in k25088 in k25085 in k25082 in k24943 in k24940 in k24937 in k24934 in k24878 in k24875 in k24872 in k24869 in k24866 in k24863 in k24860 in k24857 in k23555 in k23486 in k23293 in k23290 in k23185 in k23134 in k11783 in k10718 in k10715 in k7274 in k7271 in k6978 in k6975 in k6971 in k6680 in k6677 in k6674 in k6671 */
static void C_ccall f_37903(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word ab[18],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_37903,2,t0,t1);}
t2=(C_word)C_a_i_cons(&a,2,lf[835],((C_word*)t0)[7]);
t3=(C_word)C_a_i_list(&a,3,lf[506],t1,((C_word*)t0)[6]);
t4=(C_word)C_a_i_list(&a,2,t2,t3);
t5=(C_word)C_i_set_cdr(((C_word*)((C_word*)t0)[5])[1],t4);
t6=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[5])[1]);
t7=C_mutate(((C_word *)((C_word*)t0)[5])+1,t6);
t8=(C_word)C_i_cdr(((C_word*)t0)[4]);
t9=((C_word*)((C_word*)t0)[3])[1];
f_37887(t9,((C_word*)t0)[2],t8);}

/* k37873 in k37864 in a37861 in k26254 in k26251 in k25668 in k25665 in k25142 in k25139 in k25136 in k25133 in k25130 in k25127 in k25124 in k25121 in k25118 in k25115 in k25112 in k25109 in k25106 in k25103 in k25100 in k25097 in k25094 in k25091 in k25088 in k25085 in k25082 in k24943 in k24940 in k24937 in k24934 in k24878 in k24875 in k24872 in k24869 in k24866 in k24863 in k24860 in k24857 in k23555 in k23486 in k23293 in k23290 in k23185 in k23134 in k11783 in k10718 in k10715 in k7274 in k7271 in k6978 in k6975 in k6971 in k6680 in k6677 in k6674 in k6671 */
static void C_ccall f_37875(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
t2=((C_word*)t0)[3];
((C_proc2)(void*)(*((C_word*)t2+1)))(2,t2,((C_word*)t0)[2]);}

/* a37822 in k26254 in k26251 in k25668 in k25665 in k25142 in k25139 in k25136 in k25133 in k25130 in k25127 in k25124 in k25121 in k25118 in k25115 in k25112 in k25109 in k25106 in k25103 in k25100 in k25097 in k25094 in k25091 in k25088 in k25085 in k25082 in k24943 in k24940 in k24937 in k24934 in k24878 in k24875 in k24872 in k24869 in k24866 in k24863 in k24860 in k24857 in k23555 in k23486 in k23293 in k23290 in k23185 in k23134 in k11783 in k10718 in k10715 in k7274 in k7271 in k6978 in k6975 in k6971 in k6680 in k6677 in k6674 in k6671 */
static void C_ccall f_37823(C_word c,C_word t0,C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word ab[11],*a=ab;
if(c!=4) C_bad_argc_2(c,4,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr4,(void*)f_37823,4,t0,t1,t2,t3);}
t4=(*a=C_VECTOR_TYPE|1,a[1]=t2,tmp=(C_word)a,a+=2,tmp);
t5=(C_word)C_i_cadr(((C_word*)t4)[1]);
t6=C_set_block_item(t4,0,t5);
t7=(C_word)C_i_car(((C_word*)t4)[1]);
t8=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_37834,a[2]=t4,a[3]=t1,tmp=(C_word)a,a+=4,tmp);
t9=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_37840,a[2]=t8,a[3]=t7,a[4]=t4,tmp=(C_word)a,a+=5,tmp);
C_trace("ChickenBridge.scm: 380  token-unit-type=?");
f_23575(t9,t7,C_fix(24576));}

/* k37838 in a37822 in k26254 in k26251 in k25668 in k25665 in k25142 in k25139 in k25136 in k25133 in k25130 in k25127 in k25124 in k25121 in k25118 in k25115 in k25112 in k25109 in k25106 in k25103 in k25100 in k25097 in k25094 in k25091 in k25088 in k25085 in k25082 in k24943 in k24940 in k24937 in k24934 in k24878 in k24875 in k24872 in k24869 in k24866 in k24863 in k24860 in k24857 in k23555 in k23486 in k23293 in k23290 in k23185 in k23134 in k11783 in k10718 in k10715 in k7274 in k7271 in k6978 in k6975 in k6971 in k6680 in k6677 in k6674 in k6671 */
static void C_ccall f_37840(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[6],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_37840,2,t0,t1);}
if(C_truep(t1)){
t2=(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]);
t3=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_37856,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[3],a[5]=t2,tmp=(C_word)a,a+=6,tmp);
t4=(C_word)C_i_caddr(((C_word*)((C_word*)t0)[4])[1]);
C_trace("ChickenBridge.scm: 380  remove-token-type");
f_24882(t3,t4,C_fix(256));}
else{
t2=((C_word*)t0)[2];
f_37834(t2,C_SCHEME_UNDEFINED);}}

/* k37854 in k37838 in a37822 in k26254 in k26251 in k25668 in k25665 in k25142 in k25139 in k25136 in k25133 in k25130 in k25127 in k25124 in k25121 in k25118 in k25115 in k25112 in k25109 in k25106 in k25103 in k25100 in k25097 in k25094 in k25091 in k25088 in k25085 in k25082 in k24943 in k24940 in k24937 in k24934 in k24878 in k24875 in k24872 in k24869 in k24866 in k24863 in k24860 in k24857 in k23555 in k23486 in k23293 in k23290 in k23185 in k23134 in k11783 in k10718 in k10715 in k7274 in k7271 in k6978 in k6975 in k6971 in k6680 in k6677 in k6674 in k6671 */
static void C_ccall f_37856(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[6],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_37856,2,t0,t1);}
t2=(C_word)C_a_i_cons(&a,2,((C_word*)t0)[5],t1);
t3=(C_word)C_a_i_cons(&a,2,((C_word*)t0)[4],t2);
t4=C_mutate(((C_word *)((C_word*)t0)[3])+1,t3);
t5=((C_word*)t0)[2];
f_37834(t5,t4);}

/* k37832 in a37822 in k26254 in k26251 in k25668 in k25665 in k25142 in k25139 in k25136 in k25133 in k25130 in k25127 in k25124 in k25121 in k25118 in k25115 in k25112 in k25109 in k25106 in k25103 in k25100 in k25097 in k25094 in k25091 in k25088 in k25085 in k25082 in k24943 in k24940 in k24937 in k24934 in k24878 in k24875 in k24872 in k24869 in k24866 in k24863 in k24860 in k24857 in k23555 in k23486 in k23293 in k23290 in k23185 in k23134 in k11783 in k10718 in k10715 in k7274 in k7271 in k6978 in k6975 in k6971 in k6680 in k6677 in k6674 in k6671 */
static void C_fcall f_37834(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 380  make-parse-unit");
f_23490(((C_word*)t0)[3],C_fix(36352),((C_word*)((C_word*)t0)[2])[1],C_SCHEME_FALSE);}

/* k37815 in k26254 in k26251 in k25668 in k25665 in k25142 in k25139 in k25136 in k25133 in k25130 in k25127 in k25124 in k25121 in k25118 in k25115 in k25112 in k25109 in k25106 in k25103 in k25100 in k25097 in k25094 in k25091 in k25088 in k25085 in k25082 in k24943 in k24940 in k24937 in k24934 in k24878 in k24875 in k24872 in k24869 in k24866 in k24863 in k24860 in k24857 in k23555 in k23486 in k23293 in k23290 in k23185 in k23134 in k11783 in k10718 in k10715 in k7274 in k7271 in k6978 in k6975 in k6971 in k6680 in k6677 in k6674 in k6671 */
static void C_ccall f_37817(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 380  hash-table-set!");
t2=C_retrieve(lf[852]);
((C_proc5)C_retrieve_proc(t2))(5,t2,((C_word*)t0)[2],C_retrieve2(lf[424],"*rules*"),C_fix(36352),t1);}

/* k26257 in k26254 in k26251 in k25668 in k25665 in k25142 in k25139 in k25136 in k25133 in k25130 in k25127 in k25124 in k25121 in k25118 in k25115 in k25112 in k25109 in k25106 in k25103 in k25100 in k25097 in k25094 in k25091 in k25088 in k25085 in k25082 in k24943 in k24940 in k24937 in k24934 in k24878 in k24875 in k24872 in k24869 in k24866 in k24863 in k24860 in k24857 in k23555 in k23486 in k23293 in k23290 in k23185 in k23134 in k11783 in k10718 in k10715 in k7274 in k7271 in k6978 in k6975 in k6971 in k6680 in k6677 in k6674 in k6671 */
static void C_ccall f_26259(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word t14;
C_word t15;
C_word t16;
C_word t17;
C_word t18;
C_word t19;
C_word t20;
C_word t21;
C_word ab[57],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_26259,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_26262,a[2]=((C_word*)t0)[2],tmp=(C_word)a,a+=3,tmp);
t3=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_37741,a[2]=t2,tmp=(C_word)a,a+=3,tmp);
t4=(C_word)C_a_i_cons(&a,2,C_fix(33792),C_SCHEME_END_OF_LIST);
t5=(C_word)C_a_i_cons(&a,2,C_fix(35584),t4);
t6=(C_word)C_a_i_cons(&a,2,C_fix(35072),t5);
t7=(C_word)C_a_i_cons(&a,2,C_fix(36096),t6);
t8=(C_word)C_a_i_cons(&a,2,C_fix(34816),t7);
t9=(C_word)C_a_i_cons(&a,2,C_fix(35328),t8);
t10=(C_word)C_a_i_cons(&a,2,C_fix(31488),t9);
t11=(C_word)C_a_i_cons(&a,2,C_fix(31744),t10);
t12=(C_word)C_a_i_cons(&a,2,C_fix(32512),t11);
t13=(C_word)C_a_i_cons(&a,2,C_fix(32256),t12);
t14=(C_word)C_a_i_cons(&a,2,C_fix(30464),t13);
t15=(C_word)C_a_i_cons(&a,2,C_fix(34304),t14);
t16=(C_word)C_a_i_cons(&a,2,C_fix(34560),t15);
t17=(C_word)C_a_i_cons(&a,2,C_fix(33536),t16);
t18=(C_word)C_a_i_cons(&a,2,C_fix(32000),t17);
t19=(C_word)C_a_i_cons(&a,2,C_fix(36352),t18);
t20=(C_word)C_a_i_cons(&a,2,lf[457],t19);
C_trace("ChickenBridge.scm: 380  make-rule");
f_23189(t3,lf[923],C_fix(36608),t20,C_SCHEME_FALSE,C_SCHEME_FALSE);}

/* k37739 in k26257 in k26254 in k26251 in k25668 in k25665 in k25142 in k25139 in k25136 in k25133 in k25130 in k25127 in k25124 in k25121 in k25118 in k25115 in k25112 in k25109 in k25106 in k25103 in k25100 in k25097 in k25094 in k25091 in k25088 in k25085 in k25082 in k24943 in k24940 in k24937 in k24934 in k24878 in k24875 in k24872 in k24869 in k24866 in k24863 in k24860 in k24857 in k23555 in k23486 in k23293 in k23290 in k23185 in k23134 in k11783 in k10718 in k10715 in k7274 in k7271 in k6978 in k6975 in k6971 in k6680 in k6677 in k6674 in k6671 */
static void C_ccall f_37741(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 380  hash-table-set!");
t2=C_retrieve(lf[852]);
((C_proc5)C_retrieve_proc(t2))(5,t2,((C_word*)t0)[2],C_retrieve2(lf[424],"*rules*"),C_fix(36608),t1);}

/* k26260 in k26257 in k26254 in k26251 in k25668 in k25665 in k25142 in k25139 in k25136 in k25133 in k25130 in k25127 in k25124 in k25121 in k25118 in k25115 in k25112 in k25109 in k25106 in k25103 in k25100 in k25097 in k25094 in k25091 in k25088 in k25085 in k25082 in k24943 in k24940 in k24937 in k24934 in k24878 in k24875 in k24872 in k24869 in k24866 in k24863 in k24860 in k24857 in k23555 in k23486 in k23293 in k23290 in k23185 in k23134 in k11783 in k10718 in k10715 in k7274 in k7271 in k6978 in k6975 in k6971 in k6680 in k6677 in k6674 in k6671 */
static void C_ccall f_26262(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word ab[18],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_26262,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_26265,a[2]=((C_word*)t0)[2],tmp=(C_word)a,a+=3,tmp);
t3=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_37697,a[2]=t2,tmp=(C_word)a,a+=3,tmp);
t4=(C_word)C_a_i_cons(&a,2,C_fix(36608),C_SCHEME_END_OF_LIST);
t5=(C_word)C_a_i_cons(&a,2,lf[127],t4);
t6=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_37703,a[2]=((C_word)li631),tmp=(C_word)a,a+=3,tmp);
t7=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_37717,a[2]=((C_word)li632),tmp=(C_word)a,a+=3,tmp);
C_trace("ChickenBridge.scm: 380  make-rule");
f_23189(t3,lf[922],C_fix(36864),t5,t6,t7);}

/* a37716 in k26260 in k26257 in k26254 in k26251 in k25668 in k25665 in k25142 in k25139 in k25136 in k25133 in k25130 in k25127 in k25124 in k25121 in k25118 in k25115 in k25112 in k25109 in k25106 in k25103 in k25100 in k25097 in k25094 in k25091 in k25088 in k25085 in k25082 in k24943 in k24940 in k24937 in k24934 in k24878 in k24875 in k24872 in k24869 in k24866 in k24863 in k24860 in k24857 in k23555 in k23486 in k23293 in k23290 in k23185 in k23134 in k11783 in k10718 in k10715 in k7274 in k7271 in k6978 in k6975 in k6971 in k6680 in k6677 in k6674 in k6671 */
static void C_ccall f_37717(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4){
C_word tmp;
C_word t5;
C_word t6;
C_word t7;
C_word ab[8],*a=ab;
if(c!=5) C_bad_argc_2(c,5,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr5,(void*)f_37717,5,t0,t1,t2,t3,t4);}
t5=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_37725,a[2]=t1,tmp=(C_word)a,a+=3,tmp);
t6=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_37729,a[2]=t4,a[3]=t3,a[4]=t5,tmp=(C_word)a,a+=5,tmp);
C_trace("ChickenBridge.scm: 380  parse-unit-parsed");
f_23529(t6,t2);}

/* k37727 in a37716 in k26260 in k26257 in k26254 in k26251 in k25668 in k25665 in k25142 in k25139 in k25136 in k25133 in k25130 in k25127 in k25124 in k25121 in k25118 in k25115 in k25112 in k25109 in k25106 in k25103 in k25100 in k25097 in k25094 in k25091 in k25088 in k25085 in k25082 in k24943 in k24940 in k24937 in k24934 in k24878 in k24875 in k24872 in k24869 in k24866 in k24863 in k24860 in k24857 in k23555 in k23486 in k23293 in k23290 in k23185 in k23134 in k11783 in k10718 in k10715 in k7274 in k7271 in k6978 in k6975 in k6971 in k6680 in k6677 in k6674 in k6671 */
static void C_ccall f_37729(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 380  emit");
f_23704(((C_word*)t0)[4],t1,((C_word*)t0)[3],((C_word*)t0)[2]);}

/* k37723 in a37716 in k26260 in k26257 in k26254 in k26251 in k25668 in k25665 in k25142 in k25139 in k25136 in k25133 in k25130 in k25127 in k25124 in k25121 in k25118 in k25115 in k25112 in k25109 in k25106 in k25103 in k25100 in k25097 in k25094 in k25091 in k25088 in k25085 in k25082 in k24943 in k24940 in k24937 in k24934 in k24878 in k24875 in k24872 in k24869 in k24866 in k24863 in k24860 in k24857 in k23555 in k23486 in k23293 in k23290 in k23185 in k23134 in k11783 in k10718 in k10715 in k7274 in k7271 in k6978 in k6975 in k6971 in k6680 in k6677 in k6674 in k6671 */
static void C_ccall f_37725(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word ab[3],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_37725,2,t0,t1);}
t2=((C_word*)t0)[2];
((C_proc2)(void*)(*((C_word*)t2+1)))(2,t2,(C_word)C_a_i_cons(&a,2,lf[484],t1));}

/* a37702 in k26260 in k26257 in k26254 in k26251 in k25668 in k25665 in k25142 in k25139 in k25136 in k25133 in k25130 in k25127 in k25124 in k25121 in k25118 in k25115 in k25112 in k25109 in k25106 in k25103 in k25100 in k25097 in k25094 in k25091 in k25088 in k25085 in k25082 in k24943 in k24940 in k24937 in k24934 in k24878 in k24875 in k24872 in k24869 in k24866 in k24863 in k24860 in k24857 in k23555 in k23486 in k23293 in k23290 in k23185 in k23134 in k11783 in k10718 in k10715 in k7274 in k7271 in k6978 in k6975 in k6971 in k6680 in k6677 in k6674 in k6671 */
static void C_ccall f_37703(C_word c,C_word t0,C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word t6;
C_word ab[4],*a=ab;
if(c!=4) C_bad_argc_2(c,4,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr4,(void*)f_37703,4,t0,t1,t2,t3);}
t4=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_37711,a[2]=t2,a[3]=t1,tmp=(C_word)a,a+=4,tmp);
t5=(C_word)C_i_car(t2);
C_trace("ChickenBridge.scm: 380  parse-unit-position");
f_23547(t4,t5);}

/* k37709 in a37702 in k26260 in k26257 in k26254 in k26251 in k25668 in k25665 in k25142 in k25139 in k25136 in k25133 in k25130 in k25127 in k25124 in k25121 in k25118 in k25115 in k25112 in k25109 in k25106 in k25103 in k25100 in k25097 in k25094 in k25091 in k25088 in k25085 in k25082 in k24943 in k24940 in k24937 in k24934 in k24878 in k24875 in k24872 in k24869 in k24866 in k24863 in k24860 in k24857 in k23555 in k23486 in k23293 in k23290 in k23185 in k23134 in k11783 in k10718 in k10715 in k7274 in k7271 in k6978 in k6975 in k6971 in k6680 in k6677 in k6674 in k6671 */
static void C_ccall f_37711(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 380  make-parse-unit");
f_23490(((C_word*)t0)[3],C_fix(36864),((C_word*)t0)[2],t1);}

/* k37695 in k26260 in k26257 in k26254 in k26251 in k25668 in k25665 in k25142 in k25139 in k25136 in k25133 in k25130 in k25127 in k25124 in k25121 in k25118 in k25115 in k25112 in k25109 in k25106 in k25103 in k25100 in k25097 in k25094 in k25091 in k25088 in k25085 in k25082 in k24943 in k24940 in k24937 in k24934 in k24878 in k24875 in k24872 in k24869 in k24866 in k24863 in k24860 in k24857 in k23555 in k23486 in k23293 in k23290 in k23185 in k23134 in k11783 in k10718 in k10715 in k7274 in k7271 in k6978 in k6975 in k6971 in k6680 in k6677 in k6674 in k6671 */
static void C_ccall f_37697(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 380  hash-table-set!");
t2=C_retrieve(lf[852]);
((C_proc5)C_retrieve_proc(t2))(5,t2,((C_word*)t0)[2],C_retrieve2(lf[424],"*rules*"),C_fix(36864),t1);}

/* k26263 in k26260 in k26257 in k26254 in k26251 in k25668 in k25665 in k25142 in k25139 in k25136 in k25133 in k25130 in k25127 in k25124 in k25121 in k25118 in k25115 in k25112 in k25109 in k25106 in k25103 in k25100 in k25097 in k25094 in k25091 in k25088 in k25085 in k25082 in k24943 in k24940 in k24937 in k24934 in k24878 in k24875 in k24872 in k24869 in k24866 in k24863 in k24860 in k24857 in k23555 in k23486 in k23293 in k23290 in k23185 in k23134 in k11783 in k10718 in k10715 in k7274 in k7271 in k6978 in k6975 in k6971 in k6680 in k6677 in k6674 in k6671 */
static void C_ccall f_26265(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word t14;
C_word ab[24],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_26265,2,t0,t1);}
t2=lf[491]=C_SCHEME_FALSE;;
t3=lf[492]=C_SCHEME_FALSE;;
t4=lf[493]=C_SCHEME_FALSE;;
t5=C_set_block_item(lf[494],0,C_SCHEME_FALSE);
t6=C_mutate((C_word*)lf[495]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_26272,a[2]=((C_word)li403),tmp=(C_word)a,a+=3,tmp));
t7=C_mutate((C_word*)lf[506]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_26449,a[2]=((C_word)li407),tmp=(C_word)a,a+=3,tmp));
t8=C_mutate((C_word*)lf[516]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_26602,a[2]=((C_word)li408),tmp=(C_word)a,a+=3,tmp));
t9=C_mutate((C_word*)lf[517]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_26611,a[2]=((C_word)li409),tmp=(C_word)a,a+=3,tmp));
t10=C_mutate((C_word*)lf[527]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_26665,a[2]=((C_word)li410),tmp=(C_word)a,a+=3,tmp));
t11=C_mutate((C_word*)lf[529]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_26671,a[2]=((C_word)li411),tmp=(C_word)a,a+=3,tmp));
t12=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_26690,a[2]=((C_word*)t0)[2],tmp=(C_word)a,a+=3,tmp);
t13=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_37689,a[2]=((C_word)li630),tmp=(C_word)a,a+=3,tmp);
C_trace("ChickenBridge.scm: 381  ##sys#register-macro-2");
t14=C_retrieve(lf[851]);
((C_proc4)C_retrieve_proc(t14))(4,t14,t12,lf[920],t13);}

/* a37688 in k26263 in k26260 in k26257 in k26254 in k26251 in k25668 in k25665 in k25142 in k25139 in k25136 in k25133 in k25130 in k25127 in k25124 in k25121 in k25118 in k25115 in k25112 in k25109 in k25106 in k25103 in k25100 in k25097 in k25094 in k25091 in k25088 in k25085 in k25082 in k24943 in k24940 in k24937 in k24934 in k24878 in k24875 in k24872 in k24869 in k24866 in k24863 in k24860 in k24857 in k23555 in k23486 in k23293 in k23290 in k23185 in k23134 in k11783 in k10718 in k10715 in k7274 in k7271 in k6978 in k6975 in k6971 in k6680 in k6677 in k6674 in k6671 */
static void C_ccall f_37689(C_word c,C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word ab[4],*a=ab;
if(c!=3) C_bad_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr3,(void*)f_37689,3,t0,t1,t2);}
t3=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_30043,a[2]=t2,a[3]=t1,tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 381  gensym");
t4=C_retrieve(lf[26]);
((C_proc3)C_retrieve_proc(t4))(3,t4,t3,lf[921]);}

/* k30041 in a37688 in k26263 in k26260 in k26257 in k26254 in k26251 in k25668 in k25665 in k25142 in k25139 in k25136 in k25133 in k25130 in k25127 in k25124 in k25121 in k25118 in k25115 in k25112 in k25109 in k25106 in k25103 in k25100 in k25097 in k25094 in k25091 in k25088 in k25085 in k25082 in k24943 in k24940 in k24937 in k24934 in k24878 in k24875 in k24872 in k24869 in k24866 in k24863 in k24860 in k24857 in k23555 in k23486 in k23293 in k23290 in k23185 in k23134 in k11783 in k10718 in k10715 in k7274 in k7271 in k6978 in k6975 in k6971 in k6680 in k6677 in k6674 in k6671 */
static void C_ccall f_30043(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[4],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_30043,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_30046,a[2]=t1,a[3]=((C_word*)t0)[3],tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 381  parse-iteration");
f_30025(t2,lf[920],((C_word*)t0)[2],C_retrieve2(lf[721],"*loop-operators*"));}

/* k30044 in k30041 in a37688 in k26263 in k26260 in k26257 in k26254 in k26251 in k25668 in k25665 in k25142 in k25139 in k25136 in k25133 in k25130 in k25127 in k25124 in k25121 in k25118 in k25115 in k25112 in k25109 in k25106 in k25103 in k25100 in k25097 in k25094 in k25091 in k25088 in k25085 in k25082 in k24943 in k24940 in k24937 in k24934 in k24878 in k24875 in k24872 in k24869 in k24866 in k24863 in k24860 in k24857 in k23555 in k23486 in k23293 in k23290 in k23185 in k23134 in k11783 in k10718 in k10715 in k7274 in k7271 in k6978 in k6975 in k6971 in k6680 in k6677 in k6674 in k6671 */
static void C_ccall f_30046(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word ab[19],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_30046,2,t0,t1);}
t2=C_SCHEME_END_OF_LIST;
t3=(*a=C_VECTOR_TYPE|1,a[1]=t2,tmp=(C_word)a,a+=2,tmp);
t4=C_SCHEME_FALSE;
t5=(*a=C_VECTOR_TYPE|1,a[1]=t4,tmp=(C_word)a,a+=2,tmp);
t6=(C_word)C_i_assoc(lf[683],C_retrieve2(lf[721],"*loop-operators*"));
t7=(C_word)C_i_cadddr(t6);
t8=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_30053,a[2]=t1,a[3]=((C_word*)t0)[2],a[4]=((C_word*)t0)[3],a[5]=t3,a[6]=t5,tmp=(C_word)a,a+=7,tmp);
t9=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_30198,a[2]=t8,a[3]=t7,tmp=(C_word)a,a+=4,tmp);
t10=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_30212,a[2]=t1,a[3]=t9,tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 381  loop-returning");
t11=C_retrieve2(lf[540],"loop-returning");
f_26797(3,t11,t10,t1);}

/* k30210 in k30044 in k30041 in a37688 in k26263 in k26260 in k26257 in k26254 in k26251 in k25668 in k25665 in k25142 in k25139 in k25136 in k25133 in k25130 in k25127 in k25124 in k25121 in k25118 in k25115 in k25112 in k25109 in k25106 in k25103 in k25100 in k25097 in k25094 in k25091 in k25088 in k25085 in k25082 in k24943 in k24940 in k24937 in k24934 in k24878 in k24875 in k24872 in k24869 in k24866 in k24863 in k24860 in k24857 in k23555 in k23486 in k23293 in k23290 in k23185 in k23134 in k11783 in k10718 in k10715 in k7274 in k7271 in k6978 in k6975 in k6971 in k6680 in k6677 in k6674 in k6671 */
static void C_ccall f_30212(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[3],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_30212,2,t0,t1);}
if(C_truep((C_word)C_i_nullp(t1))){
t2=((C_word*)t0)[3];
f_30198(t2,C_SCHEME_FALSE);}
else{
t2=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_30208,a[2]=((C_word*)t0)[3],tmp=(C_word)a,a+=3,tmp);
C_trace("ChickenBridge.scm: 381  loop-returning");
t3=C_retrieve2(lf[540],"loop-returning");
f_26797(3,t3,t2,((C_word*)t0)[2]);}}

/* k30206 in k30210 in k30044 in k30041 in a37688 in k26263 in k26260 in k26257 in k26254 in k26251 in k25668 in k25665 in k25142 in k25139 in k25136 in k25133 in k25130 in k25127 in k25124 in k25121 in k25118 in k25115 in k25112 in k25109 in k25106 in k25103 in k25100 in k25097 in k25094 in k25091 in k25088 in k25085 in k25082 in k24943 in k24940 in k24937 in k24934 in k24878 in k24875 in k24872 in k24869 in k24866 in k24863 in k24860 in k24857 in k23555 in k23486 in k23293 in k23290 in k23185 in k23134 in k11783 in k10718 in k10715 in k7274 in k7271 in k6978 in k6975 in k6971 in k6680 in k6677 in k6674 in k6671 */
static void C_ccall f_30208(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
t2=((C_word*)t0)[2];
f_30198(t2,(C_word)C_i_car(t1));}

/* k30196 in k30044 in k30041 in a37688 in k26263 in k26260 in k26257 in k26254 in k26251 in k25668 in k25665 in k25142 in k25139 in k25136 in k25133 in k25130 in k25127 in k25124 in k25121 in k25118 in k25115 in k25112 in k25109 in k25106 in k25103 in k25100 in k25097 in k25094 in k25091 in k25088 in k25085 in k25082 in k24943 in k24940 in k24937 in k24934 in k24878 in k24875 in k24872 in k24869 in k24866 in k24863 in k24860 in k24857 in k23555 in k23486 in k23293 in k23290 in k23185 in k23134 in k11783 in k10718 in k10715 in k7274 in k7271 in k6978 in k6975 in k6971 in k6680 in k6677 in k6674 in k6671 */
static void C_fcall f_30198(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 381  returnfn");
t2=((C_word*)t0)[3];
((C_proc3)C_retrieve_proc(t2))(3,t2,((C_word*)t0)[2],t1);}

/* k30051 in k30044 in k30041 in a37688 in k26263 in k26260 in k26257 in k26254 in k26251 in k25668 in k25665 in k25142 in k25139 in k25136 in k25133 in k25130 in k25127 in k25124 in k25121 in k25118 in k25115 in k25112 in k25109 in k25106 in k25103 in k25100 in k25097 in k25094 in k25091 in k25088 in k25085 in k25082 in k24943 in k24940 in k24937 in k24934 in k24878 in k24875 in k24872 in k24869 in k24866 in k24863 in k24860 in k24857 in k23555 in k23486 in k23293 in k23290 in k23185 in k23134 in k11783 in k10718 in k10715 in k7274 in k7271 in k6978 in k6975 in k6971 in k6680 in k6677 in k6674 in k6671 */
static void C_ccall f_30053(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_30053,2,t0,t1);}
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_30057,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[6],a[4]=((C_word*)t0)[3],a[5]=((C_word*)t0)[4],a[6]=((C_word*)t0)[5],tmp=(C_word)a,a+=7,tmp);
C_trace("ChickenBridge.scm: 381  loop-end-tests");
t4=C_retrieve2(lf[535],"loop-end-tests");
f_26749(3,t4,t3,((C_word*)t0)[2]);}

/* k30055 in k30051 in k30044 in k30041 in a37688 in k26263 in k26260 in k26257 in k26254 in k26251 in k25668 in k25665 in k25142 in k25139 in k25136 in k25133 in k25130 in k25127 in k25124 in k25121 in k25118 in k25115 in k25112 in k25109 in k25106 in k25103 in k25100 in k25097 in k25094 in k25091 in k25088 in k25085 in k25082 in k24943 in k24940 in k24937 in k24934 in k24878 in k24875 in k24872 in k24869 in k24866 in k24863 in k24860 in k24857 in k23555 in k23486 in k23293 in k23290 in k23185 in k23134 in k11783 in k10718 in k10715 in k7274 in k7271 in k6978 in k6975 in k6971 in k6680 in k6677 in k6674 in k6671 */
static void C_ccall f_30057(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word ab[25],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_30057,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_30060,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],tmp=(C_word)a,a+=7,tmp);
if(C_truep((C_word)C_i_nullp(t1))){
t3=t2;
f_30060(t3,C_SCHEME_END_OF_LIST);}
else{
t3=(C_word)C_i_cdr(t1);
t4=(C_word)C_i_nullp(t3);
t5=(C_truep(t4)?(C_word)C_i_car(t1):(C_word)C_a_i_cons(&a,2,lf[457],t1));
t6=(C_word)C_a_i_list(&a,4,lf[20],t5,lf[919],C_SCHEME_FALSE);
t7=t2;
f_30060(t7,(C_word)C_a_i_list(&a,1,t6));}}

/* k30058 in k30055 in k30051 in k30044 in k30041 in a37688 in k26263 in k26260 in k26257 in k26254 in k26251 in k25668 in k25665 in k25142 in k25139 in k25136 in k25133 in k25130 in k25127 in k25124 in k25121 in k25118 in k25115 in k25112 in k25109 in k25106 in k25103 in k25100 in k25097 in k25094 in k25091 in k25088 in k25085 in k25082 in k24943 in k24940 in k24937 in k24934 in k24878 in k24875 in k24872 in k24869 in k24866 in k24863 in k24860 in k24857 in k23555 in k23486 in k23293 in k23290 in k23185 in k23134 in k11783 in k10718 in k10715 in k7274 in k7271 in k6978 in k6975 in k6971 in k6680 in k6677 in k6674 in k6671 */
static void C_fcall f_30060(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_30060,NULL,2,t0,t1);}
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_30071,a[2]=((C_word*)t0)[6],a[3]=((C_word*)t0)[2],a[4]=((C_word*)t0)[3],a[5]=((C_word*)t0)[4],a[6]=((C_word*)t0)[5],tmp=(C_word)a,a+=7,tmp);
C_trace("ChickenBridge.scm: 381  loop-bindings");
t4=C_retrieve2(lf[532],"loop-bindings");
f_26713(3,t4,t3,((C_word*)t0)[2]);}

/* k30069 in k30058 in k30055 in k30051 in k30044 in k30041 in a37688 in k26263 in k26260 in k26257 in k26254 in k26251 in k25668 in k25665 in k25142 in k25139 in k25136 in k25133 in k25130 in k25127 in k25124 in k25121 in k25118 in k25115 in k25112 in k25109 in k25106 in k25103 in k25100 in k25097 in k25094 in k25091 in k25088 in k25085 in k25082 in k24943 in k24940 in k24937 in k24934 in k24878 in k24875 in k24872 in k24869 in k24866 in k24863 in k24860 in k24857 in k23555 in k23486 in k23293 in k23290 in k23185 in k23134 in k11783 in k10718 in k10715 in k7274 in k7271 in k6978 in k6975 in k6971 in k6680 in k6677 in k6674 in k6671 */
static void C_ccall f_30071(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[11],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_30071,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_30075,a[2]=((C_word*)t0)[6],a[3]=t1,tmp=(C_word)a,a+=4,tmp);
t3=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_30079,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=t2,a[6]=((C_word*)t0)[5],tmp=(C_word)a,a+=7,tmp);
C_trace("ChickenBridge.scm: 381  loop-initially");
t4=C_retrieve2(lf[534],"loop-initially");
f_26737(3,t4,t3,((C_word*)t0)[3]);}

/* k30077 in k30069 in k30058 in k30055 in k30051 in k30044 in k30041 in a37688 in k26263 in k26260 in k26257 in k26254 in k26251 in k25668 in k25665 in k25142 in k25139 in k25136 in k25133 in k25130 in k25127 in k25124 in k25121 in k25118 in k25115 in k25112 in k25109 in k25106 in k25103 in k25100 in k25097 in k25094 in k25091 in k25088 in k25085 in k25082 in k24943 in k24940 in k24937 in k24934 in k24878 in k24875 in k24872 in k24869 in k24866 in k24863 in k24860 in k24857 in k23555 in k23486 in k23293 in k23290 in k23185 in k23134 in k11783 in k10718 in k10715 in k7274 in k7271 in k6978 in k6975 in k6971 in k6680 in k6677 in k6674 in k6671 */
static void C_ccall f_30079(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word ab[24],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_30079,2,t0,t1);}
t2=(C_word)C_a_i_list(&a,1,lf[683]);
t3=(C_word)C_a_i_list(&a,1,lf[913]);
t4=(*a=C_CLOSURE_TYPE|8,a[1]=(C_word)f_30143,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=t1,a[5]=((C_word*)t0)[5],a[6]=t2,a[7]=t3,a[8]=((C_word*)t0)[6],tmp=(C_word)a,a+=9,tmp);
t5=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_30147,a[2]=((C_word*)t0)[2],a[3]=t4,tmp=(C_word)a,a+=4,tmp);
t6=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_30151,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[6],a[4]=t5,tmp=(C_word)a,a+=5,tmp);
C_trace("ChickenBridge.scm: 381  loop-looping");
t7=C_retrieve2(lf[536],"loop-looping");
f_26761(3,t7,t6,((C_word*)t0)[3]);}

/* k30149 in k30077 in k30069 in k30058 in k30055 in k30051 in k30044 in k30041 in a37688 in k26263 in k26260 in k26257 in k26254 in k26251 in k25668 in k25665 in k25142 in k25139 in k25136 in k25133 in k25130 in k25127 in k25124 in k25121 in k25118 in k25115 in k25112 in k25109 in k25106 in k25103 in k25100 in k25097 in k25094 in k25091 in k25088 in k25085 in k25082 in k24943 in k24940 in k24937 in k24934 in k24878 in k24875 in k24872 in k24869 in k24866 in k24863 in k24860 in k24857 in k23555 in k23486 in k23293 in k23290 in k23185 in k23134 in k11783 in k10718 in k10715 in k7274 in k7271 in k6978 in k6975 in k6971 in k6680 in k6677 in k6674 in k6671 */
static void C_ccall f_30151(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[8],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_30151,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_30155,a[2]=t1,a[3]=((C_word*)t0)[4],tmp=(C_word)a,a+=4,tmp);
t3=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_30159,a[2]=t2,a[3]=((C_word*)t0)[3],tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 381  loop-stepping");
t4=C_retrieve2(lf[538],"loop-stepping");
f_26773(3,t4,t3,((C_word*)t0)[2]);}

/* k30157 in k30149 in k30077 in k30069 in k30058 in k30055 in k30051 in k30044 in k30041 in a37688 in k26263 in k26260 in k26257 in k26254 in k26251 in k25668 in k25665 in k25142 in k25139 in k25136 in k25133 in k25130 in k25127 in k25124 in k25121 in k25118 in k25115 in k25112 in k25109 in k25106 in k25103 in k25100 in k25097 in k25094 in k25091 in k25088 in k25085 in k25082 in k24943 in k24940 in k24937 in k24934 in k24878 in k24875 in k24872 in k24869 in k24866 in k24863 in k24860 in k24857 in k23555 in k23486 in k23293 in k23290 in k23185 in k23134 in k11783 in k10718 in k10715 in k7274 in k7271 in k6978 in k6975 in k6971 in k6680 in k6677 in k6674 in k6671 */
static void C_ccall f_30159(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[6],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_30159,2,t0,t1);}
t2=(C_word)C_a_i_list(&a,1,((C_word*)t0)[3]);
t3=(C_word)C_a_i_list(&a,1,t2);
C_trace("ChickenBridge.scm: 381  ##sys#append");
t4=*((C_word*)lf[7]+1);
((C_proc4)(void*)(*((C_word*)t4+1)))(4,t4,((C_word*)t0)[2],t1,t3);}

/* k30153 in k30149 in k30077 in k30069 in k30058 in k30055 in k30051 in k30044 in k30041 in a37688 in k26263 in k26260 in k26257 in k26254 in k26251 in k25668 in k25665 in k25142 in k25139 in k25136 in k25133 in k25130 in k25127 in k25124 in k25121 in k25118 in k25115 in k25112 in k25109 in k25106 in k25103 in k25100 in k25097 in k25094 in k25091 in k25088 in k25085 in k25082 in k24943 in k24940 in k24937 in k24934 in k24878 in k24875 in k24872 in k24869 in k24866 in k24863 in k24860 in k24857 in k23555 in k23486 in k23293 in k23290 in k23185 in k23134 in k11783 in k10718 in k10715 in k7274 in k7271 in k6978 in k6975 in k6971 in k6680 in k6677 in k6674 in k6671 */
static void C_ccall f_30155(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 381  ##sys#append");
t2=*((C_word*)lf[7]+1);
((C_proc4)(void*)(*((C_word*)t2+1)))(4,t2,((C_word*)t0)[3],((C_word*)t0)[2],t1);}

/* k30145 in k30077 in k30069 in k30058 in k30055 in k30051 in k30044 in k30041 in a37688 in k26263 in k26260 in k26257 in k26254 in k26251 in k25668 in k25665 in k25142 in k25139 in k25136 in k25133 in k25130 in k25127 in k25124 in k25121 in k25118 in k25115 in k25112 in k25109 in k25106 in k25103 in k25100 in k25097 in k25094 in k25091 in k25088 in k25085 in k25082 in k24943 in k24940 in k24937 in k24934 in k24878 in k24875 in k24872 in k24869 in k24866 in k24863 in k24860 in k24857 in k23555 in k23486 in k23293 in k23290 in k23185 in k23134 in k11783 in k10718 in k10715 in k7274 in k7271 in k6978 in k6975 in k6971 in k6680 in k6677 in k6674 in k6671 */
static void C_ccall f_30147(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 381  ##sys#append");
t2=*((C_word*)lf[7]+1);
((C_proc4)(void*)(*((C_word*)t2+1)))(4,t2,((C_word*)t0)[3],((C_word*)((C_word*)t0)[2])[1],t1);}

/* k30141 in k30077 in k30069 in k30058 in k30055 in k30051 in k30044 in k30041 in a37688 in k26263 in k26260 in k26257 in k26254 in k26251 in k25668 in k25665 in k25142 in k25139 in k25136 in k25133 in k25130 in k25127 in k25124 in k25121 in k25118 in k25115 in k25112 in k25109 in k25106 in k25103 in k25100 in k25097 in k25094 in k25091 in k25088 in k25085 in k25082 in k24943 in k24940 in k24937 in k24934 in k24878 in k24875 in k24872 in k24869 in k24866 in k24863 in k24860 in k24857 in k23555 in k23486 in k23293 in k23290 in k23185 in k23134 in k11783 in k10718 in k10715 in k7274 in k7271 in k6978 in k6975 in k6971 in k6680 in k6677 in k6674 in k6671 */
static void C_ccall f_30143(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word ab[34],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_30143,2,t0,t1);}
t2=(C_word)C_a_i_cons(&a,2,C_SCHEME_END_OF_LIST,t1);
t3=(C_word)C_a_i_cons(&a,2,((C_word*)t0)[8],t2);
t4=(C_word)C_a_i_cons(&a,2,lf[1],t3);
t5=(C_word)C_a_i_list(&a,3,lf[839],((C_word*)t0)[7],t4);
t6=(C_word)C_a_i_list(&a,2,lf[779],t5);
t7=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_30111,a[2]=((C_word*)t0)[4],a[3]=((C_word*)t0)[5],a[4]=((C_word*)t0)[6],a[5]=t6,tmp=(C_word)a,a+=6,tmp);
t8=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_30115,a[2]=t7,a[3]=((C_word*)t0)[3],tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 381  loop-finally");
t9=C_retrieve2(lf[539],"loop-finally");
f_26785(3,t9,t8,((C_word*)t0)[2]);}

/* k30113 in k30141 in k30077 in k30069 in k30058 in k30055 in k30051 in k30044 in k30041 in a37688 in k26263 in k26260 in k26257 in k26254 in k26251 in k25668 in k25665 in k25142 in k25139 in k25136 in k25133 in k25130 in k25127 in k25124 in k25121 in k25118 in k25115 in k25112 in k25109 in k25106 in k25103 in k25100 in k25097 in k25094 in k25091 in k25088 in k25085 in k25082 in k24943 in k24940 in k24937 in k24934 in k24878 in k24875 in k24872 in k24869 in k24866 in k24863 in k24860 in k24857 in k23555 in k23486 in k23293 in k23290 in k23185 in k23134 in k11783 in k10718 in k10715 in k7274 in k7271 in k6978 in k6975 in k6971 in k6680 in k6677 in k6674 in k6671 */
static void C_ccall f_30115(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[3],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_30115,2,t0,t1);}
t2=(C_word)C_a_i_list(&a,1,((C_word*)((C_word*)t0)[3])[1]);
C_trace("ChickenBridge.scm: 381  ##sys#append");
t3=*((C_word*)lf[7]+1);
((C_proc4)(void*)(*((C_word*)t3+1)))(4,t3,((C_word*)t0)[2],t1,t2);}

/* k30109 in k30141 in k30077 in k30069 in k30058 in k30055 in k30051 in k30044 in k30041 in a37688 in k26263 in k26260 in k26257 in k26254 in k26251 in k25668 in k25665 in k25142 in k25139 in k25136 in k25133 in k25130 in k25127 in k25124 in k25121 in k25118 in k25115 in k25112 in k25109 in k25106 in k25103 in k25100 in k25097 in k25094 in k25091 in k25088 in k25085 in k25082 in k24943 in k24940 in k24937 in k24934 in k24878 in k24875 in k24872 in k24869 in k24866 in k24863 in k24860 in k24857 in k23555 in k23486 in k23293 in k23290 in k23185 in k23134 in k11783 in k10718 in k10715 in k7274 in k7271 in k6978 in k6975 in k6971 in k6680 in k6677 in k6674 in k6671 */
static void C_ccall f_30111(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word ab[18],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_30111,2,t0,t1);}
t2=(C_word)C_a_i_cons(&a,2,((C_word*)t0)[5],t1);
t3=(C_word)C_a_i_cons(&a,2,((C_word*)t0)[4],t2);
t4=(C_word)C_a_i_cons(&a,2,lf[839],t3);
t5=(C_word)C_a_i_list(&a,2,lf[779],t4);
t6=(C_word)C_a_i_list(&a,1,t5);
C_trace("ChickenBridge.scm: 381  ##sys#append");
t7=*((C_word*)lf[7]+1);
((C_proc4)(void*)(*((C_word*)t7+1)))(4,t7,((C_word*)t0)[3],((C_word*)t0)[2],t6);}

/* k30073 in k30069 in k30058 in k30055 in k30051 in k30044 in k30041 in a37688 in k26263 in k26260 in k26257 in k26254 in k26251 in k25668 in k25665 in k25142 in k25139 in k25136 in k25133 in k25130 in k25127 in k25124 in k25121 in k25118 in k25115 in k25112 in k25109 in k25106 in k25103 in k25100 in k25097 in k25094 in k25091 in k25088 in k25085 in k25082 in k24943 in k24940 in k24937 in k24934 in k24878 in k24875 in k24872 in k24869 in k24866 in k24863 in k24860 in k24857 in k23555 in k23486 in k23293 in k23290 in k23185 in k23134 in k11783 in k10718 in k10715 in k7274 in k7271 in k6978 in k6975 in k6971 in k6680 in k6677 in k6674 in k6671 */
static void C_ccall f_30075(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[6],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_30075,2,t0,t1);}
t2=(C_word)C_a_i_cons(&a,2,((C_word*)t0)[3],t1);
t3=((C_word*)t0)[2];
((C_proc2)(void*)(*((C_word*)t3+1)))(2,t3,(C_word)C_a_i_cons(&a,2,lf[1],t2));}

/* k26688 in k26263 in k26260 in k26257 in k26254 in k26251 in k25668 in k25665 in k25142 in k25139 in k25136 in k25133 in k25130 in k25127 in k25124 in k25121 in k25118 in k25115 in k25112 in k25109 in k25106 in k25103 in k25100 in k25097 in k25094 in k25091 in k25088 in k25085 in k25082 in k24943 in k24940 in k24937 in k24934 in k24878 in k24875 in k24872 in k24869 in k24866 in k24863 in k24860 in k24857 in k23555 in k23486 in k23293 in k23290 in k23185 in k23134 in k11783 in k10718 in k10715 in k7274 in k7271 in k6978 in k6975 in k6971 in k6680 in k6677 in k6674 in k6671 */
static void C_ccall f_26690(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[6],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_26690,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_26693,a[2]=((C_word*)t0)[2],tmp=(C_word)a,a+=3,tmp);
t3=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_37675,a[2]=((C_word)li629),tmp=(C_word)a,a+=3,tmp);
C_trace("ChickenBridge.scm: 381  ##sys#register-macro");
t4=C_retrieve(lf[837]);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[918],t3);}

/* a37674 in k26688 in k26263 in k26260 in k26257 in k26254 in k26251 in k25668 in k25665 in k25142 in k25139 in k25136 in k25133 in k25130 in k25127 in k25124 in k25121 in k25118 in k25115 in k25112 in k25109 in k25106 in k25103 in k25100 in k25097 in k25094 in k25091 in k25088 in k25085 in k25082 in k24943 in k24940 in k24937 in k24934 in k24878 in k24875 in k24872 in k24869 in k24866 in k24863 in k24860 in k24857 in k23555 in k23486 in k23293 in k23290 in k23185 in k23134 in k11783 in k10718 in k10715 in k7274 in k7271 in k6978 in k6975 in k6971 in k6680 in k6677 in k6674 in k6671 */
static void C_ccall f_37675(C_word c,C_word t0,C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word t6;
C_word ab[27],*a=ab;
if(c!=4) C_bad_argc_2(c,4,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr4,(void*)f_37675,4,t0,t1,t2,t3);}
t4=(C_word)C_a_i_list(&a,3,lf[917],t2,t3);
t5=(C_word)C_a_i_list(&a,3,lf[12],t3,t4);
t6=t1;
((C_proc2)(void*)(*((C_word*)t6+1)))(2,t6,(C_word)C_a_i_list(&a,3,lf[484],t5,t3));}

/* k26691 in k26688 in k26263 in k26260 in k26257 in k26254 in k26251 in k25668 in k25665 in k25142 in k25139 in k25136 in k25133 in k25130 in k25127 in k25124 in k25121 in k25118 in k25115 in k25112 in k25109 in k25106 in k25103 in k25100 in k25097 in k25094 in k25091 in k25088 in k25085 in k25082 in k24943 in k24940 in k24937 in k24934 in k24878 in k24875 in k24872 in k24869 in k24866 in k24863 in k24860 in k24857 in k23555 in k23486 in k23293 in k23290 in k23185 in k23134 in k11783 in k10718 in k10715 in k7274 in k7271 in k6978 in k6975 in k6971 in k6680 in k6677 in k6674 in k6671 */
static void C_ccall f_26693(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[6],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_26693,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_26696,a[2]=((C_word*)t0)[2],tmp=(C_word)a,a+=3,tmp);
t3=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_37646,a[2]=((C_word)li628),tmp=(C_word)a,a+=3,tmp);
C_trace("ChickenBridge.scm: 381  ##sys#register-macro");
t4=C_retrieve(lf[837]);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[916],t3);}

/* a37645 in k26691 in k26688 in k26263 in k26260 in k26257 in k26254 in k26251 in k25668 in k25665 in k25142 in k25139 in k25136 in k25133 in k25130 in k25127 in k25124 in k25121 in k25118 in k25115 in k25112 in k25109 in k25106 in k25103 in k25100 in k25097 in k25094 in k25091 in k25088 in k25085 in k25082 in k24943 in k24940 in k24937 in k24934 in k24878 in k24875 in k24872 in k24869 in k24866 in k24863 in k24860 in k24857 in k23555 in k23486 in k23293 in k23290 in k23185 in k23134 in k11783 in k10718 in k10715 in k7274 in k7271 in k6978 in k6975 in k6971 in k6680 in k6677 in k6674 in k6671 */
static void C_ccall f_37646(C_word c,C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word ab[4],*a=ab;
if(c!=3) C_bad_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr3,(void*)f_37646,3,t0,t1,t2);}
t3=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_37650,a[2]=t1,a[3]=t2,tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 381  gensym");
t4=C_retrieve(lf[26]);
((C_proc3)C_retrieve_proc(t4))(3,t4,t3,lf[915]);}

/* k37648 in a37645 in k26691 in k26688 in k26263 in k26260 in k26257 in k26254 in k26251 in k25668 in k25665 in k25142 in k25139 in k25136 in k25133 in k25130 in k25127 in k25124 in k25121 in k25118 in k25115 in k25112 in k25109 in k25106 in k25103 in k25100 in k25097 in k25094 in k25091 in k25088 in k25085 in k25082 in k24943 in k24940 in k24937 in k24934 in k24878 in k24875 in k24872 in k24869 in k24866 in k24863 in k24860 in k24857 in k23555 in k23486 in k23293 in k23290 in k23185 in k23134 in k11783 in k10718 in k10715 in k7274 in k7271 in k6978 in k6975 in k6971 in k6680 in k6677 in k6674 in k6671 */
static void C_ccall f_37650(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word ab[42],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_37650,2,t0,t1);}
t2=(C_word)C_a_i_list(&a,2,lf[8],((C_word*)t0)[3]);
t3=(C_word)C_a_i_list(&a,2,t1,t2);
t4=(C_word)C_a_i_list(&a,1,t3);
t5=(C_word)C_a_i_list(&a,2,lf[15],((C_word*)t0)[3]);
t6=(C_word)C_a_i_list(&a,3,lf[12],((C_word*)t0)[3],t5);
t7=((C_word*)t0)[2];
((C_proc2)(void*)(*((C_word*)t7+1)))(2,t7,(C_word)C_a_i_list(&a,4,lf[1],t4,t6,t1));}

/* k26694 in k26691 in k26688 in k26263 in k26260 in k26257 in k26254 in k26251 in k25668 in k25665 in k25142 in k25139 in k25136 in k25133 in k25130 in k25127 in k25124 in k25121 in k25118 in k25115 in k25112 in k25109 in k25106 in k25103 in k25100 in k25097 in k25094 in k25091 in k25088 in k25085 in k25082 in k24943 in k24940 in k24937 in k24934 in k24878 in k24875 in k24872 in k24869 in k24866 in k24863 in k24860 in k24857 in k23555 in k23486 in k23293 in k23290 in k23185 in k23134 in k11783 in k10718 in k10715 in k7274 in k7271 in k6978 in k6975 in k6971 in k6680 in k6677 in k6674 in k6671 */
static void C_ccall f_26696(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[6],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_26696,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_26699,a[2]=((C_word*)t0)[2],tmp=(C_word)a,a+=3,tmp);
t3=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_37643,a[2]=((C_word)li627),tmp=(C_word)a,a+=3,tmp);
C_trace("ChickenBridge.scm: 381  ##sys#register-macro");
t4=C_retrieve(lf[837]);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[914],t3);}

/* a37642 in k26694 in k26691 in k26688 in k26263 in k26260 in k26257 in k26254 in k26251 in k25668 in k25665 in k25142 in k25139 in k25136 in k25133 in k25130 in k25127 in k25124 in k25121 in k25118 in k25115 in k25112 in k25109 in k25106 in k25103 in k25100 in k25097 in k25094 in k25091 in k25088 in k25085 in k25082 in k24943 in k24940 in k24937 in k24934 in k24878 in k24875 in k24872 in k24869 in k24866 in k24863 in k24860 in k24857 in k23555 in k23486 in k23293 in k23290 in k23185 in k23134 in k11783 in k10718 in k10715 in k7274 in k7271 in k6978 in k6975 in k6971 in k6680 in k6677 in k6674 in k6671 */
static void C_ccall f_37643(C_word c,C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word *a;
if(c!=3) C_bad_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr3,(void*)f_37643,3,t0,t1,t2);}
t3=t1;
((C_proc2)(void*)(*((C_word*)t3+1)))(2,t3,t2);}

/* k26697 in k26694 in k26691 in k26688 in k26263 in k26260 in k26257 in k26254 in k26251 in k25668 in k25665 in k25142 in k25139 in k25136 in k25133 in k25130 in k25127 in k25124 in k25121 in k25118 in k25115 in k25112 in k25109 in k25106 in k25103 in k25100 in k25097 in k25094 in k25091 in k25088 in k25085 in k25082 in k24943 in k24940 in k24937 in k24934 in k24878 in k24875 in k24872 in k24869 in k24866 in k24863 in k24860 in k24857 in k23555 in k23486 in k23293 in k23290 in k23185 in k23134 in k11783 in k10718 in k10715 in k7274 in k7271 in k6978 in k6975 in k6971 in k6680 in k6677 in k6674 in k6671 */
static void C_ccall f_26699(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word t14;
C_word t15;
C_word t16;
C_word t17;
C_word t18;
C_word t19;
C_word t20;
C_word t21;
C_word t22;
C_word t23;
C_word t24;
C_word t25;
C_word t26;
C_word t27;
C_word t28;
C_word t29;
C_word t30;
C_word t31;
C_word t32;
C_word t33;
C_word t34;
C_word t35;
C_word t36;
C_word t37;
C_word t38;
C_word t39;
C_word t40;
C_word t41;
C_word t42;
C_word t43;
C_word t44;
C_word t45;
C_word t46;
C_word t47;
C_word t48;
C_word t49;
C_word t50;
C_word t51;
C_word t52;
C_word t53;
C_word t54;
C_word t55;
C_word t56;
C_word t57;
C_word t58;
C_word t59;
C_word t60;
C_word t61;
C_word t62;
C_word t63;
C_word t64;
C_word t65;
C_word t66;
C_word t67;
C_word t68;
C_word t69;
C_word t70;
C_word t71;
C_word t72;
C_word t73;
C_word ab[492],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_26699,2,t0,t1);}
t2=C_mutate(&lf[531],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_26707,a[2]=((C_word)li412),tmp=(C_word)a,a+=3,tmp));
t3=C_mutate(&lf[532],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_26713,a[2]=((C_word)li413),tmp=(C_word)a,a+=3,tmp));
t4=C_mutate(&lf[533],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_26725,a[2]=((C_word)li414),tmp=(C_word)a,a+=3,tmp));
t5=C_mutate(&lf[534],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_26737,a[2]=((C_word)li415),tmp=(C_word)a,a+=3,tmp));
t6=C_mutate(&lf[535],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_26749,a[2]=((C_word)li416),tmp=(C_word)a,a+=3,tmp));
t7=C_mutate(&lf[536],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_26761,a[2]=((C_word)li417),tmp=(C_word)a,a+=3,tmp));
t8=C_mutate(&lf[537],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_26767,a[2]=((C_word)li418),tmp=(C_word)a,a+=3,tmp));
t9=C_mutate(&lf[538],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_26773,a[2]=((C_word)li419),tmp=(C_word)a,a+=3,tmp));
t10=C_mutate(&lf[539],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_26785,a[2]=((C_word)li420),tmp=(C_word)a,a+=3,tmp));
t11=C_mutate(&lf[540],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_26797,a[2]=((C_word)li421),tmp=(C_word)a,a+=3,tmp));
t12=C_mutate(&lf[541],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_26809,a[2]=((C_word)li423),tmp=(C_word)a,a+=3,tmp));
t13=C_mutate(&lf[551],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_26960,a[2]=((C_word)li426),tmp=(C_word)a,a+=3,tmp));
t14=C_mutate(&lf[552],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_27031,a[2]=((C_word)li427),tmp=(C_word)a,a+=3,tmp));
t15=C_mutate(&lf[553],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_27037,a[2]=((C_word)li428),tmp=(C_word)a,a+=3,tmp));
t16=C_mutate(&lf[554],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_27043,a[2]=((C_word)li429),tmp=(C_word)a,a+=3,tmp));
t17=C_mutate(&lf[555],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_27049,a[2]=((C_word)li433),tmp=(C_word)a,a+=3,tmp));
t18=C_mutate(&lf[563],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_27209,a[2]=((C_word)li434),tmp=(C_word)a,a+=3,tmp));
t19=C_mutate(&lf[571],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_27291,a[2]=((C_word)li436),tmp=(C_word)a,a+=3,tmp));
t20=C_mutate(&lf[601],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_27673,a[2]=((C_word)li439),tmp=(C_word)a,a+=3,tmp));
t21=C_mutate(&lf[604],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_27720,a[2]=((C_word)li441),tmp=(C_word)a,a+=3,tmp));
t22=C_mutate(&lf[623],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_28071,a[2]=((C_word)li443),tmp=(C_word)a,a+=3,tmp));
t23=C_mutate(&lf[630],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_28213,a[2]=((C_word)li445),tmp=(C_word)a,a+=3,tmp));
t24=C_mutate(&lf[644],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_28406,a[2]=((C_word)li447),tmp=(C_word)a,a+=3,tmp));
t25=C_mutate(&lf[647],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_28473,a[2]=((C_word)li448),tmp=(C_word)a,a+=3,tmp));
t26=C_mutate(&lf[650],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_28511,a[2]=((C_word)li449),tmp=(C_word)a,a+=3,tmp));
t27=C_mutate(&lf[653],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_28670,a[2]=((C_word)li455),tmp=(C_word)a,a+=3,tmp));
t28=C_mutate(&lf[682],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_29216,a[2]=((C_word)li456),tmp=(C_word)a,a+=3,tmp));
t29=C_mutate(&lf[684],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_29222,a[2]=((C_word)li457),tmp=(C_word)a,a+=3,tmp));
t30=C_mutate(&lf[690],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_29288,a[2]=((C_word)li458),tmp=(C_word)a,a+=3,tmp));
t31=C_mutate(&lf[696],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_29379,a[2]=((C_word)li459),tmp=(C_word)a,a+=3,tmp));
t32=C_mutate(&lf[699],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_29480,a[2]=((C_word)li463),tmp=(C_word)a,a+=3,tmp));
t33=C_mutate(&lf[705],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_29611,a[2]=((C_word)li468),tmp=(C_word)a,a+=3,tmp));
t34=C_mutate(&lf[711],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_30025,a[2]=((C_word)li473),tmp=(C_word)a,a+=3,tmp));
t35=(C_word)C_a_i_list(&a,3,lf[631],C_retrieve2(lf[630],"parse-with"),C_SCHEME_FALSE);
t36=(C_word)C_a_i_list(&a,3,lf[545],C_retrieve2(lf[650],"parse-initially"),C_SCHEME_FALSE);
t37=(C_word)C_a_i_list(&a,3,lf[719],C_retrieve2(lf[601],"parse-repeat"),lf[716]);
t38=(C_word)C_a_i_list(&a,2,lf[579],C_retrieve2(lf[571],"parse-numerical-for"));
t39=(C_word)C_a_i_list(&a,2,lf[575],C_retrieve2(lf[571],"parse-numerical-for"));
t40=(C_word)C_a_i_list(&a,2,lf[577],C_retrieve2(lf[571],"parse-numerical-for"));
t41=(C_word)C_a_i_list(&a,2,lf[586],C_retrieve2(lf[571],"parse-numerical-for"));
t42=(C_word)C_a_i_list(&a,2,lf[576],C_retrieve2(lf[571],"parse-numerical-for"));
t43=(C_word)C_a_i_list(&a,2,lf[578],C_retrieve2(lf[571],"parse-numerical-for"));
t44=(C_word)C_a_i_list(&a,2,lf[611],C_retrieve2(lf[604],"parse-sequence-iteration"));
t45=(C_word)C_a_i_list(&a,2,lf[620],C_retrieve2(lf[604],"parse-sequence-iteration"));
t46=(C_word)C_a_i_list(&a,2,lf[605],C_retrieve2(lf[604],"parse-sequence-iteration"));
t47=(C_word)C_a_i_list(&a,2,lf[466],C_retrieve2(lf[623],"parse-general-iteration"));
t48=(C_word)C_a_i_list(&a,2,lf[610],C_retrieve2(lf[604],"parse-sequence-iteration"));
t49=(C_word)C_a_i_list(&a,14,lf[572],C_retrieve2(lf[563],"parse-for"),lf[716],t38,t39,t40,t41,t42,t43,t44,t45,t46,t47,t48);
t50=(C_word)C_a_i_list(&a,3,lf[720],C_retrieve2(lf[563],"parse-for"),lf[716]);
t51=(C_word)C_a_i_list(&a,3,lf[712],C_retrieve2(lf[644],"parse-do"),lf[703]);
t52=(C_word)C_a_i_list(&a,3,lf[664],C_retrieve2(lf[653],"parse-accumulation"),lf[703]);
t53=(C_word)C_a_i_list(&a,3,lf[18],C_retrieve2(lf[653],"parse-accumulation"),lf[703]);
t54=(C_word)C_a_i_list(&a,3,lf[669],C_retrieve2(lf[653],"parse-accumulation"),lf[703]);
t55=(C_word)C_a_i_list(&a,3,lf[654],C_retrieve2(lf[653],"parse-accumulation"),lf[703]);
t56=(C_word)C_a_i_list(&a,3,lf[655],C_retrieve2(lf[653],"parse-accumulation"),lf[703]);
t57=(C_word)C_a_i_list(&a,3,lf[657],C_retrieve2(lf[653],"parse-accumulation"),lf[703]);
t58=(C_word)C_a_i_list(&a,3,lf[658],C_retrieve2(lf[653],"parse-accumulation"),lf[703]);
t59=(C_word)C_a_i_list(&a,4,lf[691],C_retrieve2(lf[690],"parse-thereis"),lf[703],C_retrieve2(lf[682],"loop-return"));
t60=(C_word)C_a_i_list(&a,4,lf[692],C_retrieve2(lf[690],"parse-thereis"),lf[703],C_retrieve2(lf[682],"loop-return"));
t61=(C_word)C_a_i_list(&a,4,lf[693],C_retrieve2(lf[690],"parse-thereis"),lf[703],C_retrieve2(lf[682],"loop-return"));
t62=(C_word)C_a_i_list(&a,4,lf[683],C_retrieve2(lf[696],"parse-return"),lf[703],C_retrieve2(lf[682],"loop-return"));
t63=(C_word)C_a_i_list(&a,3,lf[687],C_retrieve2(lf[684],"parse-while-until"),C_SCHEME_FALSE);
t64=(C_word)C_a_i_list(&a,3,lf[686],C_retrieve2(lf[684],"parse-while-until"),C_SCHEME_FALSE);
t65=(C_word)C_a_i_list(&a,3,lf[11],C_retrieve2(lf[705],"parse-conditional"),lf[703]);
t66=(C_word)C_a_i_list(&a,3,lf[6],C_retrieve2(lf[705],"parse-conditional"),lf[703]);
t67=(C_word)C_a_i_list(&a,3,lf[20],C_retrieve2(lf[705],"parse-conditional"),lf[703]);
t68=(C_word)C_a_i_list(&a,3,lf[549],C_retrieve2(lf[647],"parse-finally"),C_SCHEME_FALSE);
t69=(C_word)C_a_i_list(&a,23,t35,t36,t37,t49,t50,t51,t52,t53,t54,t55,t56,t57,t58,t59,t60,t61,t62,t63,t64,t65,t66,t67,t68);
t70=C_mutate(&lf[721],t69);
t71=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_30219,a[2]=((C_word*)t0)[2],tmp=(C_word)a,a+=3,tmp);
t72=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_37501,a[2]=((C_word)li626),tmp=(C_word)a,a+=3,tmp);
C_trace("ChickenBridge.scm: 381  ##sys#register-macro-2");
t73=C_retrieve(lf[851]);
((C_proc4)C_retrieve_proc(t73))(4,t73,t71,lf[716],t72);}

/* a37500 in k26697 in k26694 in k26691 in k26688 in k26263 in k26260 in k26257 in k26254 in k26251 in k25668 in k25665 in k25142 in k25139 in k25136 in k25133 in k25130 in k25127 in k25124 in k25121 in k25118 in k25115 in k25112 in k25109 in k25106 in k25103 in k25100 in k25097 in k25094 in k25091 in k25088 in k25085 in k25082 in k24943 in k24940 in k24937 in k24934 in k24878 in k24875 in k24872 in k24869 in k24866 in k24863 in k24860 in k24857 in k23555 in k23486 in k23293 in k23290 in k23185 in k23134 in k11783 in k10718 in k10715 in k7274 in k7271 in k6978 in k6975 in k6971 in k6680 in k6677 in k6674 in k6671 */
static void C_ccall f_37501(C_word c,C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word ab[3],*a=ab;
if(c!=3) C_bad_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr3,(void*)f_37501,3,t0,t1,t2);}
t3=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_30225,a[2]=t1,tmp=(C_word)a,a+=3,tmp);
C_trace("ChickenBridge.scm: 381  parse-iteration");
f_30025(t3,lf[716],t2,C_retrieve2(lf[721],"*loop-operators*"));}

/* k30223 in a37500 in k26697 in k26694 in k26691 in k26688 in k26263 in k26260 in k26257 in k26254 in k26251 in k25668 in k25665 in k25142 in k25139 in k25136 in k25133 in k25130 in k25127 in k25124 in k25121 in k25118 in k25115 in k25112 in k25109 in k25106 in k25103 in k25100 in k25097 in k25094 in k25091 in k25088 in k25085 in k25082 in k24943 in k24940 in k24937 in k24934 in k24878 in k24875 in k24872 in k24869 in k24866 in k24863 in k24860 in k24857 in k23555 in k23486 in k23293 in k23290 in k23185 in k23134 in k11783 in k10718 in k10715 in k7274 in k7271 in k6978 in k6975 in k6971 in k6680 in k6677 in k6674 in k6671 */
static void C_ccall f_30225(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[8],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_30225,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_30228,a[2]=t1,a[3]=((C_word*)t0)[2],tmp=(C_word)a,a+=4,tmp);
t3=(C_word)C_i_assoc(lf[683],C_retrieve2(lf[721],"*loop-operators*"));
t4=(C_word)C_i_cadddr(t3);
t5=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_30357,a[2]=t4,a[3]=t2,tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 381  loop-returning");
t6=C_retrieve2(lf[540],"loop-returning");
f_26797(3,t6,t5,t1);}

/* k30355 in k30223 in a37500 in k26697 in k26694 in k26691 in k26688 in k26263 in k26260 in k26257 in k26254 in k26251 in k25668 in k25665 in k25142 in k25139 in k25136 in k25133 in k25130 in k25127 in k25124 in k25121 in k25118 in k25115 in k25112 in k25109 in k25106 in k25103 in k25100 in k25097 in k25094 in k25091 in k25088 in k25085 in k25082 in k24943 in k24940 in k24937 in k24934 in k24878 in k24875 in k24872 in k24869 in k24866 in k24863 in k24860 in k24857 in k23555 in k23486 in k23293 in k23290 in k23185 in k23134 in k11783 in k10718 in k10715 in k7274 in k7271 in k6978 in k6975 in k6971 in k6680 in k6677 in k6674 in k6671 */
static void C_ccall f_30357(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[3],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_30357,2,t0,t1);}
t2=(C_word)C_i_car(t1);
t3=(C_word)C_a_i_list(&a,1,t2);
C_apply(4,0,((C_word*)t0)[3],((C_word*)t0)[2],t3);}

/* k30226 in k30223 in a37500 in k26697 in k26694 in k26691 in k26688 in k26263 in k26260 in k26257 in k26254 in k26251 in k25668 in k25665 in k25142 in k25139 in k25136 in k25133 in k25130 in k25127 in k25124 in k25121 in k25118 in k25115 in k25112 in k25109 in k25106 in k25103 in k25100 in k25097 in k25094 in k25091 in k25088 in k25085 in k25082 in k24943 in k24940 in k24937 in k24934 in k24878 in k24875 in k24872 in k24869 in k24866 in k24863 in k24860 in k24857 in k23555 in k23486 in k23293 in k23290 in k23185 in k23134 in k11783 in k10718 in k10715 in k7274 in k7271 in k6978 in k6975 in k6971 in k6680 in k6677 in k6674 in k6671 */
static void C_ccall f_30228(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[5],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_30228,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_30239,a[2]=((C_word*)t0)[2],a[3]=t1,a[4]=((C_word*)t0)[3],tmp=(C_word)a,a+=5,tmp);
C_trace("ChickenBridge.scm: 381  loop-bindings");
t3=C_retrieve2(lf[532],"loop-bindings");
f_26713(3,t3,t2,((C_word*)t0)[2]);}

/* k30237 in k30226 in k30223 in a37500 in k26697 in k26694 in k26691 in k26688 in k26263 in k26260 in k26257 in k26254 in k26251 in k25668 in k25665 in k25142 in k25139 in k25136 in k25133 in k25130 in k25127 in k25124 in k25121 in k25118 in k25115 in k25112 in k25109 in k25106 in k25103 in k25100 in k25097 in k25094 in k25091 in k25088 in k25085 in k25082 in k24943 in k24940 in k24937 in k24934 in k24878 in k24875 in k24872 in k24869 in k24866 in k24863 in k24860 in k24857 in k23555 in k23486 in k23293 in k23290 in k23185 in k23134 in k11783 in k10718 in k10715 in k7274 in k7271 in k6978 in k6975 in k6971 in k6680 in k6677 in k6674 in k6671 */
static void C_ccall f_30239(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_30239,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_30243,a[2]=((C_word*)t0)[4],a[3]=t1,tmp=(C_word)a,a+=4,tmp);
t3=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_30247,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=t2,tmp=(C_word)a,a+=5,tmp);
C_trace("ChickenBridge.scm: 381  loop-initially");
t4=C_retrieve2(lf[534],"loop-initially");
f_26737(3,t4,t3,((C_word*)t0)[2]);}

/* k30245 in k30237 in k30226 in k30223 in a37500 in k26697 in k26694 in k26691 in k26688 in k26263 in k26260 in k26257 in k26254 in k26251 in k25668 in k25665 in k25142 in k25139 in k25136 in k25133 in k25130 in k25127 in k25124 in k25121 in k25118 in k25115 in k25112 in k25109 in k25106 in k25103 in k25100 in k25097 in k25094 in k25091 in k25088 in k25085 in k25082 in k24943 in k24940 in k24937 in k24934 in k24878 in k24875 in k24872 in k24869 in k24866 in k24863 in k24860 in k24857 in k23555 in k23486 in k23293 in k23290 in k23185 in k23134 in k11783 in k10718 in k10715 in k7274 in k7271 in k6978 in k6975 in k6971 in k6680 in k6677 in k6674 in k6671 */
static void C_ccall f_30247(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_30247,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_30267,a[2]=t1,a[3]=((C_word*)t0)[4],tmp=(C_word)a,a+=4,tmp);
t3=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_30271,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=t2,tmp=(C_word)a,a+=5,tmp);
C_trace("ChickenBridge.scm: 381  loop-end-tests");
t4=C_retrieve2(lf[535],"loop-end-tests");
f_26749(3,t4,t3,((C_word*)t0)[2]);}

/* k30269 in k30245 in k30237 in k30226 in k30223 in a37500 in k26697 in k26694 in k26691 in k26688 in k26263 in k26260 in k26257 in k26254 in k26251 in k25668 in k25665 in k25142 in k25139 in k25136 in k25133 in k25130 in k25127 in k25124 in k25121 in k25118 in k25115 in k25112 in k25109 in k25106 in k25103 in k25100 in k25097 in k25094 in k25091 in k25088 in k25085 in k25082 in k24943 in k24940 in k24937 in k24934 in k24878 in k24875 in k24872 in k24869 in k24866 in k24863 in k24860 in k24857 in k23555 in k23486 in k23293 in k23290 in k23185 in k23134 in k11783 in k10718 in k10715 in k7274 in k7271 in k6978 in k6975 in k6971 in k6680 in k6677 in k6674 in k6671 */
static void C_ccall f_30271(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word ab[26],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_30271,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_30274,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],tmp=(C_word)a,a+=5,tmp);
if(C_truep(t1)){
t3=(C_word)C_i_cdr(t1);
t4=(C_truep(t3)?(C_word)C_a_i_cons(&a,2,lf[457],t1):(C_word)C_i_car(t1));
t5=(C_word)C_a_i_list(&a,2,lf[913],lf[421]);
t6=(C_word)C_a_i_list(&a,3,lf[20],t4,t5);
t7=t2;
f_30274(t7,(C_word)C_a_i_list(&a,1,t6));}
else{
t3=t2;
f_30274(t3,C_SCHEME_END_OF_LIST);}}

/* k30272 in k30269 in k30245 in k30237 in k30226 in k30223 in a37500 in k26697 in k26694 in k26691 in k26688 in k26263 in k26260 in k26257 in k26254 in k26251 in k25668 in k25665 in k25142 in k25139 in k25136 in k25133 in k25130 in k25127 in k25124 in k25121 in k25118 in k25115 in k25112 in k25109 in k25106 in k25103 in k25100 in k25097 in k25094 in k25091 in k25088 in k25085 in k25082 in k24943 in k24940 in k24937 in k24934 in k24878 in k24875 in k24872 in k24869 in k24866 in k24863 in k24860 in k24857 in k23555 in k23486 in k23293 in k23290 in k23185 in k23134 in k11783 in k10718 in k10715 in k7274 in k7271 in k6978 in k6975 in k6971 in k6680 in k6677 in k6674 in k6671 */
static void C_fcall f_30274(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_30274,NULL,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_30278,a[2]=t1,a[3]=((C_word*)t0)[4],tmp=(C_word)a,a+=4,tmp);
t3=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_30282,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=t2,tmp=(C_word)a,a+=5,tmp);
C_trace("ChickenBridge.scm: 381  loop-looping");
t4=C_retrieve2(lf[536],"loop-looping");
f_26761(3,t4,t3,((C_word*)t0)[2]);}

/* k30280 in k30272 in k30269 in k30245 in k30237 in k30226 in k30223 in a37500 in k26697 in k26694 in k26691 in k26688 in k26263 in k26260 in k26257 in k26254 in k26251 in k25668 in k25665 in k25142 in k25139 in k25136 in k25133 in k25130 in k25127 in k25124 in k25121 in k25118 in k25115 in k25112 in k25109 in k25106 in k25103 in k25100 in k25097 in k25094 in k25091 in k25088 in k25085 in k25082 in k24943 in k24940 in k24937 in k24934 in k24878 in k24875 in k24872 in k24869 in k24866 in k24863 in k24860 in k24857 in k23555 in k23486 in k23293 in k23290 in k23185 in k23134 in k11783 in k10718 in k10715 in k7274 in k7271 in k6978 in k6975 in k6971 in k6680 in k6677 in k6674 in k6671 */
static void C_ccall f_30282(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_30282,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_30286,a[2]=t1,a[3]=((C_word*)t0)[4],tmp=(C_word)a,a+=4,tmp);
t3=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_30290,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=t2,tmp=(C_word)a,a+=5,tmp);
C_trace("ChickenBridge.scm: 381  loop-stepping");
t4=C_retrieve2(lf[538],"loop-stepping");
f_26773(3,t4,t3,((C_word*)t0)[2]);}

/* k30288 in k30280 in k30272 in k30269 in k30245 in k30237 in k30226 in k30223 in a37500 in k26697 in k26694 in k26691 in k26688 in k26263 in k26260 in k26257 in k26254 in k26251 in k25668 in k25665 in k25142 in k25139 in k25136 in k25133 in k25130 in k25127 in k25124 in k25121 in k25118 in k25115 in k25112 in k25109 in k25106 in k25103 in k25100 in k25097 in k25094 in k25091 in k25088 in k25085 in k25082 in k24943 in k24940 in k24937 in k24934 in k24878 in k24875 in k24872 in k24869 in k24866 in k24863 in k24860 in k24857 in k23555 in k23486 in k23293 in k23290 in k23185 in k23134 in k11783 in k10718 in k10715 in k7274 in k7271 in k6978 in k6975 in k6971 in k6680 in k6677 in k6674 in k6671 */
static void C_ccall f_30290(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[15],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_30290,2,t0,t1);}
t2=(C_word)C_a_i_list(&a,2,lf[913],lf[909]);
t3=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_30306,a[2]=t1,a[3]=((C_word*)t0)[4],a[4]=t2,tmp=(C_word)a,a+=5,tmp);
t4=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_30310,a[2]=t3,a[3]=((C_word*)t0)[3],tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 381  loop-finally");
t5=C_retrieve2(lf[539],"loop-finally");
f_26785(3,t5,t4,((C_word*)t0)[2]);}

/* k30308 in k30288 in k30280 in k30272 in k30269 in k30245 in k30237 in k30226 in k30223 in a37500 in k26697 in k26694 in k26691 in k26688 in k26263 in k26260 in k26257 in k26254 in k26251 in k25668 in k25665 in k25142 in k25139 in k25136 in k25133 in k25130 in k25127 in k25124 in k25121 in k25118 in k25115 in k25112 in k25109 in k25106 in k25103 in k25100 in k25097 in k25094 in k25091 in k25088 in k25085 in k25082 in k24943 in k24940 in k24937 in k24934 in k24878 in k24875 in k24872 in k24869 in k24866 in k24863 in k24860 in k24857 in k23555 in k23486 in k23293 in k23290 in k23185 in k23134 in k11783 in k10718 in k10715 in k7274 in k7271 in k6978 in k6975 in k6971 in k6680 in k6677 in k6674 in k6671 */
static void C_ccall f_30310(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[3],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_30310,2,t0,t1);}
t2=(C_word)C_a_i_list(&a,1,((C_word*)t0)[3]);
C_trace("##sys#append");
t3=*((C_word*)lf[7]+1);
((C_proc4)(void*)(*((C_word*)t3+1)))(4,t3,((C_word*)t0)[2],t1,t2);}

/* k30304 in k30288 in k30280 in k30272 in k30269 in k30245 in k30237 in k30226 in k30223 in a37500 in k26697 in k26694 in k26691 in k26688 in k26263 in k26260 in k26257 in k26254 in k26251 in k25668 in k25665 in k25142 in k25139 in k25136 in k25133 in k25130 in k25127 in k25124 in k25121 in k25118 in k25115 in k25112 in k25109 in k25106 in k25103 in k25100 in k25097 in k25094 in k25091 in k25088 in k25085 in k25082 in k24943 in k24940 in k24937 in k24934 in k24878 in k24875 in k24872 in k24869 in k24866 in k24863 in k24860 in k24857 in k23555 in k23486 in k23293 in k23290 in k23185 in k23134 in k11783 in k10718 in k10715 in k7274 in k7271 in k6978 in k6975 in k6971 in k6680 in k6677 in k6674 in k6671 */
static void C_ccall f_30306(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[6],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_30306,2,t0,t1);}
t2=(C_word)C_a_i_cons(&a,2,lf[421],t1);
t3=(C_word)C_a_i_cons(&a,2,((C_word*)t0)[4],t2);
C_trace("##sys#append");
t4=*((C_word*)lf[7]+1);
((C_proc4)(void*)(*((C_word*)t4+1)))(4,t4,((C_word*)t0)[3],((C_word*)t0)[2],t3);}

/* k30284 in k30280 in k30272 in k30269 in k30245 in k30237 in k30226 in k30223 in a37500 in k26697 in k26694 in k26691 in k26688 in k26263 in k26260 in k26257 in k26254 in k26251 in k25668 in k25665 in k25142 in k25139 in k25136 in k25133 in k25130 in k25127 in k25124 in k25121 in k25118 in k25115 in k25112 in k25109 in k25106 in k25103 in k25100 in k25097 in k25094 in k25091 in k25088 in k25085 in k25082 in k24943 in k24940 in k24937 in k24934 in k24878 in k24875 in k24872 in k24869 in k24866 in k24863 in k24860 in k24857 in k23555 in k23486 in k23293 in k23290 in k23185 in k23134 in k11783 in k10718 in k10715 in k7274 in k7271 in k6978 in k6975 in k6971 in k6680 in k6677 in k6674 in k6671 */
static void C_ccall f_30286(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("##sys#append");
t2=*((C_word*)lf[7]+1);
((C_proc4)(void*)(*((C_word*)t2+1)))(4,t2,((C_word*)t0)[3],((C_word*)t0)[2],t1);}

/* k30276 in k30272 in k30269 in k30245 in k30237 in k30226 in k30223 in a37500 in k26697 in k26694 in k26691 in k26688 in k26263 in k26260 in k26257 in k26254 in k26251 in k25668 in k25665 in k25142 in k25139 in k25136 in k25133 in k25130 in k25127 in k25124 in k25121 in k25118 in k25115 in k25112 in k25109 in k25106 in k25103 in k25100 in k25097 in k25094 in k25091 in k25088 in k25085 in k25082 in k24943 in k24940 in k24937 in k24934 in k24878 in k24875 in k24872 in k24869 in k24866 in k24863 in k24860 in k24857 in k23555 in k23486 in k23293 in k23290 in k23185 in k23134 in k11783 in k10718 in k10715 in k7274 in k7271 in k6978 in k6975 in k6971 in k6680 in k6677 in k6674 in k6671 */
static void C_ccall f_30278(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("##sys#append");
t2=*((C_word*)lf[7]+1);
((C_proc4)(void*)(*((C_word*)t2+1)))(4,t2,((C_word*)t0)[3],((C_word*)t0)[2],t1);}

/* k30265 in k30245 in k30237 in k30226 in k30223 in a37500 in k26697 in k26694 in k26691 in k26688 in k26263 in k26260 in k26257 in k26254 in k26251 in k25668 in k25665 in k25142 in k25139 in k25136 in k25133 in k25130 in k25127 in k25124 in k25121 in k25118 in k25115 in k25112 in k25109 in k25106 in k25103 in k25100 in k25097 in k25094 in k25091 in k25088 in k25085 in k25082 in k24943 in k24940 in k24937 in k24934 in k24878 in k24875 in k24872 in k24869 in k24866 in k24863 in k24860 in k24857 in k23555 in k23486 in k23293 in k23290 in k23185 in k23134 in k11783 in k10718 in k10715 in k7274 in k7271 in k6978 in k6975 in k6971 in k6680 in k6677 in k6674 in k6671 */
static void C_ccall f_30267(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[18],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_30267,2,t0,t1);}
t2=(C_word)C_a_i_cons(&a,2,lf[909],t1);
t3=(C_word)C_a_i_cons(&a,2,lf[910],t2);
t4=(C_word)C_a_i_list(&a,3,lf[911],lf[912],t3);
t5=(C_word)C_a_i_list(&a,1,t4);
C_trace("##sys#append");
t6=*((C_word*)lf[7]+1);
((C_proc4)(void*)(*((C_word*)t6+1)))(4,t6,((C_word*)t0)[3],((C_word*)t0)[2],t5);}

/* k30241 in k30237 in k30226 in k30223 in a37500 in k26697 in k26694 in k26691 in k26688 in k26263 in k26260 in k26257 in k26254 in k26251 in k25668 in k25665 in k25142 in k25139 in k25136 in k25133 in k25130 in k25127 in k25124 in k25121 in k25118 in k25115 in k25112 in k25109 in k25106 in k25103 in k25100 in k25097 in k25094 in k25091 in k25088 in k25085 in k25082 in k24943 in k24940 in k24937 in k24934 in k24878 in k24875 in k24872 in k24869 in k24866 in k24863 in k24860 in k24857 in k23555 in k23486 in k23293 in k23290 in k23185 in k23134 in k11783 in k10718 in k10715 in k7274 in k7271 in k6978 in k6975 in k6971 in k6680 in k6677 in k6674 in k6671 */
static void C_ccall f_30243(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[6],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_30243,2,t0,t1);}
t2=(C_word)C_a_i_cons(&a,2,((C_word*)t0)[3],t1);
t3=((C_word*)t0)[2];
((C_proc2)(void*)(*((C_word*)t3+1)))(2,t3,(C_word)C_a_i_cons(&a,2,lf[1],t2));}

/* k30217 in k26697 in k26694 in k26691 in k26688 in k26263 in k26260 in k26257 in k26254 in k26251 in k25668 in k25665 in k25142 in k25139 in k25136 in k25133 in k25130 in k25127 in k25124 in k25121 in k25118 in k25115 in k25112 in k25109 in k25106 in k25103 in k25100 in k25097 in k25094 in k25091 in k25088 in k25085 in k25082 in k24943 in k24940 in k24937 in k24934 in k24878 in k24875 in k24872 in k24869 in k24866 in k24863 in k24860 in k24857 in k23555 in k23486 in k23293 in k23290 in k23185 in k23134 in k11783 in k10718 in k10715 in k7274 in k7271 in k6978 in k6975 in k6971 in k6680 in k6677 in k6674 in k6671 */
static void C_ccall f_30219(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word t14;
C_word t15;
C_word t16;
C_word t17;
C_word t18;
C_word t19;
C_word t20;
C_word t21;
C_word t22;
C_word t23;
C_word t24;
C_word t25;
C_word t26;
C_word t27;
C_word t28;
C_word t29;
C_word t30;
C_word t31;
C_word t32;
C_word t33;
C_word t34;
C_word t35;
C_word t36;
C_word t37;
C_word t38;
C_word t39;
C_word t40;
C_word t41;
C_word t42;
C_word t43;
C_word t44;
C_word t45;
C_word t46;
C_word t47;
C_word t48;
C_word t49;
C_word t50;
C_word t51;
C_word t52;
C_word t53;
C_word t54;
C_word t55;
C_word t56;
C_word t57;
C_word ab[144],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_30219,2,t0,t1);}
t2=C_set_block_item(lf[722],0,C_fix(8));
t3=C_set_block_item(lf[723],0,C_fix(9));
t4=C_set_block_item(lf[724],0,C_fix(10));
t5=C_set_block_item(lf[725],0,C_fix(11));
t6=C_set_block_item(lf[726],0,C_fix(12));
t7=C_set_block_item(lf[727],0,C_fix(13));
t8=C_set_block_item(lf[728],0,C_fix(14));
t9=C_mutate((C_word*)lf[729]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_30370,a[2]=((C_word)li475),tmp=(C_word)a,a+=3,tmp));
t10=C_mutate((C_word*)lf[734]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_31099,a[2]=((C_word)li477),tmp=(C_word)a,a+=3,tmp));
t11=C_mutate((C_word*)lf[735]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_31118,a[2]=((C_word)li479),tmp=(C_word)a,a+=3,tmp));
t12=C_mutate((C_word*)lf[736]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_31569,a[2]=((C_word)li481),tmp=(C_word)a,a+=3,tmp));
t13=C_mutate((C_word*)lf[737]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_31588,a[2]=((C_word)li483),tmp=(C_word)a,a+=3,tmp));
t14=C_mutate((C_word*)lf[739]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_32317,a[2]=((C_word)li485),tmp=(C_word)a,a+=3,tmp));
t15=C_mutate((C_word*)lf[740]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_32336,a[2]=((C_word)li487),tmp=(C_word)a,a+=3,tmp));
t16=C_mutate((C_word*)lf[742]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_33065,a[2]=((C_word)li489),tmp=(C_word)a,a+=3,tmp));
t17=C_mutate((C_word*)lf[743]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_33084,a[2]=((C_word)li491),tmp=(C_word)a,a+=3,tmp));
t18=C_mutate((C_word*)lf[744]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_33535,a[2]=((C_word)li493),tmp=(C_word)a,a+=3,tmp));
t19=C_mutate((C_word*)lf[745]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_33554,a[2]=((C_word)li495),tmp=(C_word)a,a+=3,tmp));
t20=C_mutate((C_word*)lf[746]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_34005,a[2]=((C_word)li497),tmp=(C_word)a,a+=3,tmp));
t21=C_mutate((C_word*)lf[747]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_34024,a[2]=((C_word)li499),tmp=(C_word)a,a+=3,tmp));
t22=C_mutate((C_word*)lf[748]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_34494,a[2]=((C_word)li501),tmp=(C_word)a,a+=3,tmp));
t23=C_mutate((C_word*)lf[749]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_34512,a[2]=((C_word)li503),tmp=(C_word)a,a+=3,tmp));
t24=C_mutate((C_word*)lf[750]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_34527,a[2]=((C_word)li505),tmp=(C_word)a,a+=3,tmp));
t25=C_mutate((C_word*)lf[751]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_34542,a[2]=((C_word)li507),tmp=(C_word)a,a+=3,tmp));
t26=C_mutate((C_word*)lf[752]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_34561,a[2]=((C_word)li509),tmp=(C_word)a,a+=3,tmp));
t27=C_mutate((C_word*)lf[753]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_34576,a[2]=((C_word)li511),tmp=(C_word)a,a+=3,tmp));
t28=C_mutate((C_word*)lf[754]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_34595,a[2]=((C_word)li513),tmp=(C_word)a,a+=3,tmp));
t29=C_mutate((C_word*)lf[755]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_34614,a[2]=((C_word)li515),tmp=(C_word)a,a+=3,tmp));
t30=C_mutate((C_word*)lf[756]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_34637,a[2]=((C_word)li517),tmp=(C_word)a,a+=3,tmp));
t31=C_mutate((C_word*)lf[757]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_34656,a[2]=((C_word)li519),tmp=(C_word)a,a+=3,tmp));
t32=C_mutate((C_word*)lf[758]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_34679,a[2]=((C_word)li522),tmp=(C_word)a,a+=3,tmp));
t33=C_mutate((C_word*)lf[759]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_34726,a[2]=((C_word)li525),tmp=(C_word)a,a+=3,tmp));
t34=C_mutate((C_word*)lf[761]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_34781,a[2]=((C_word)li527),tmp=(C_word)a,a+=3,tmp));
t35=C_mutate((C_word*)lf[762]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_34800,a[2]=((C_word)li529),tmp=(C_word)a,a+=3,tmp));
t36=C_mutate((C_word*)lf[763]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_34823,a[2]=((C_word)li531),tmp=(C_word)a,a+=3,tmp));
t37=C_mutate((C_word*)lf[764]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_34851,a[2]=((C_word)li533),tmp=(C_word)a,a+=3,tmp));
t38=C_mutate((C_word*)lf[765]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_34879,a[2]=((C_word)li535),tmp=(C_word)a,a+=3,tmp));
t39=C_mutate((C_word*)lf[766]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_34907,a[2]=((C_word)li537),tmp=(C_word)a,a+=3,tmp));
t40=C_mutate((C_word*)lf[767]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_34935,a[2]=((C_word)li539),tmp=(C_word)a,a+=3,tmp));
t41=C_mutate((C_word*)lf[768]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_34963,a[2]=((C_word)li541),tmp=(C_word)a,a+=3,tmp));
t42=C_mutate((C_word*)lf[769]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_34991,a[2]=((C_word)li543),tmp=(C_word)a,a+=3,tmp));
t43=C_mutate((C_word*)lf[770]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_35019,a[2]=((C_word)li545),tmp=(C_word)a,a+=3,tmp));
t44=C_mutate((C_word*)lf[771]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_35047,a[2]=((C_word)li547),tmp=(C_word)a,a+=3,tmp));
t45=C_mutate((C_word*)lf[772]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_35075,a[2]=((C_word)li549),tmp=(C_word)a,a+=3,tmp));
t46=C_mutate((C_word*)lf[773]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_35090,a[2]=((C_word)li556),tmp=(C_word)a,a+=3,tmp));
t47=C_mutate((C_word*)lf[780]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_35147,a[2]=((C_word)li559),tmp=(C_word)a,a+=3,tmp));
t48=C_mutate((C_word*)lf[783]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_35258,a[2]=((C_word)li562),tmp=(C_word)a,a+=3,tmp));
t49=C_mutate((C_word*)lf[786]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_35373,a[2]=((C_word)li564),tmp=(C_word)a,a+=3,tmp));
t50=C_mutate((C_word*)lf[788]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_35412,a[2]=((C_word)li566),tmp=(C_word)a,a+=3,tmp));
t51=C_mutate((C_word*)lf[789]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_35423,a[2]=((C_word)li568),tmp=(C_word)a,a+=3,tmp));
t52=C_mutate((C_word*)lf[790]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_35434,a[2]=((C_word)li570),tmp=(C_word)a,a+=3,tmp));
t53=C_mutate((C_word*)lf[791]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_35445,a[2]=((C_word)li572),tmp=(C_word)a,a+=3,tmp));
t54=C_mutate((C_word*)lf[792]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_35456,a[2]=((C_word)li574),tmp=(C_word)a,a+=3,tmp));
t55=C_mutate((C_word*)lf[793]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_35467,a[2]=((C_word)li576),tmp=(C_word)a,a+=3,tmp));
t56=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_35488,a[2]=((C_word*)t0)[2],tmp=(C_word)a,a+=3,tmp);
C_trace("ChickenBridge.scm: 382  hash-table-set!");
t57=C_retrieve(lf[852]);
((C_proc5)C_retrieve_proc(t57))(5,t57,t56,C_retrieve(lf[29]),lf[907],lf[908]);}

/* k35486 in k30217 in k26697 in k26694 in k26691 in k26688 in k26263 in k26260 in k26257 in k26254 in k26251 in k25668 in k25665 in k25142 in k25139 in k25136 in k25133 in k25130 in k25127 in k25124 in k25121 in k25118 in k25115 in k25112 in k25109 in k25106 in k25103 in k25100 in k25097 in k25094 in k25091 in k25088 in k25085 in k25082 in k24943 in k24940 in k24937 in k24934 in k24878 in k24875 in k24872 in k24869 in k24866 in k24863 in k24860 in k24857 in k23555 in k23486 in k23293 in k23290 in k23185 in k23134 in k11783 in k10718 in k10715 in k7274 in k7271 in k6978 in k6975 in k6971 in k6680 in k6677 in k6674 in k6671 */
static void C_ccall f_35488(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[3],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_35488,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_35491,a[2]=((C_word*)t0)[2],tmp=(C_word)a,a+=3,tmp);
C_trace("ChickenBridge.scm: 382  hash-table-set!");
t3=C_retrieve(lf[852]);
((C_proc5)C_retrieve_proc(t3))(5,t3,t2,C_retrieve(lf[29]),lf[905],lf[906]);}

/* k35489 in k35486 in k30217 in k26697 in k26694 in k26691 in k26688 in k26263 in k26260 in k26257 in k26254 in k26251 in k25668 in k25665 in k25142 in k25139 in k25136 in k25133 in k25130 in k25127 in k25124 in k25121 in k25118 in k25115 in k25112 in k25109 in k25106 in k25103 in k25100 in k25097 in k25094 in k25091 in k25088 in k25085 in k25082 in k24943 in k24940 in k24937 in k24934 in k24878 in k24875 in k24872 in k24869 in k24866 in k24863 in k24860 in k24857 in k23555 in k23486 in k23293 in k23290 in k23185 in k23134 in k11783 in k10718 in k10715 in k7274 in k7271 in k6978 in k6975 in k6971 in k6680 in k6677 in k6674 in k6671 */
static void C_ccall f_35491(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[3],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_35491,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_35494,a[2]=((C_word*)t0)[2],tmp=(C_word)a,a+=3,tmp);
C_trace("ChickenBridge.scm: 382  hash-table-set!");
t3=C_retrieve(lf[852]);
((C_proc5)C_retrieve_proc(t3))(5,t3,t2,C_retrieve(lf[29]),lf[903],lf[904]);}

/* k35492 in k35489 in k35486 in k30217 in k26697 in k26694 in k26691 in k26688 in k26263 in k26260 in k26257 in k26254 in k26251 in k25668 in k25665 in k25142 in k25139 in k25136 in k25133 in k25130 in k25127 in k25124 in k25121 in k25118 in k25115 in k25112 in k25109 in k25106 in k25103 in k25100 in k25097 in k25094 in k25091 in k25088 in k25085 in k25082 in k24943 in k24940 in k24937 in k24934 in k24878 in k24875 in k24872 in k24869 in k24866 in k24863 in k24860 in k24857 in k23555 in k23486 in k23293 in k23290 in k23185 in k23134 in k11783 in k10718 in k10715 in k7274 in k7271 in k6978 in k6975 in k6971 in k6680 in k6677 in k6674 in k6671 */
static void C_ccall f_35494(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[3],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_35494,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_35497,a[2]=((C_word*)t0)[2],tmp=(C_word)a,a+=3,tmp);
C_trace("ChickenBridge.scm: 382  hash-table-set!");
t3=C_retrieve(lf[852]);
((C_proc5)C_retrieve_proc(t3))(5,t3,t2,C_retrieve(lf[29]),lf[901],lf[902]);}

/* k35495 in k35492 in k35489 in k35486 in k30217 in k26697 in k26694 in k26691 in k26688 in k26263 in k26260 in k26257 in k26254 in k26251 in k25668 in k25665 in k25142 in k25139 in k25136 in k25133 in k25130 in k25127 in k25124 in k25121 in k25118 in k25115 in k25112 in k25109 in k25106 in k25103 in k25100 in k25097 in k25094 in k25091 in k25088 in k25085 in k25082 in k24943 in k24940 in k24937 in k24934 in k24878 in k24875 in k24872 in k24869 in k24866 in k24863 in k24860 in k24857 in k23555 in k23486 in k23293 in k23290 in k23185 in k23134 in k11783 in k10718 in k10715 in k7274 in k7271 in k6978 in k6975 in k6971 in k6680 in k6677 in k6674 in k6671 */
static void C_ccall f_35497(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[3],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_35497,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_35500,a[2]=((C_word*)t0)[2],tmp=(C_word)a,a+=3,tmp);
C_trace("ChickenBridge.scm: 382  hash-table-set!");
t3=C_retrieve(lf[852]);
((C_proc5)C_retrieve_proc(t3))(5,t3,t2,C_retrieve(lf[29]),lf[899],lf[900]);}

/* k35498 in k35495 in k35492 in k35489 in k35486 in k30217 in k26697 in k26694 in k26691 in k26688 in k26263 in k26260 in k26257 in k26254 in k26251 in k25668 in k25665 in k25142 in k25139 in k25136 in k25133 in k25130 in k25127 in k25124 in k25121 in k25118 in k25115 in k25112 in k25109 in k25106 in k25103 in k25100 in k25097 in k25094 in k25091 in k25088 in k25085 in k25082 in k24943 in k24940 in k24937 in k24934 in k24878 in k24875 in k24872 in k24869 in k24866 in k24863 in k24860 in k24857 in k23555 in k23486 in k23293 in k23290 in k23185 in k23134 in k11783 in k10718 in k10715 in k7274 in k7271 in k6978 in k6975 in k6971 in k6680 in k6677 in k6674 in k6671 */
static void C_ccall f_35500(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[3],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_35500,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_35503,a[2]=((C_word*)t0)[2],tmp=(C_word)a,a+=3,tmp);
C_trace("ChickenBridge.scm: 382  hash-table-set!");
t3=C_retrieve(lf[852]);
((C_proc5)C_retrieve_proc(t3))(5,t3,t2,C_retrieve(lf[29]),lf[897],lf[898]);}

/* k35501 in k35498 in k35495 in k35492 in k35489 in k35486 in k30217 in k26697 in k26694 in k26691 in k26688 in k26263 in k26260 in k26257 in k26254 in k26251 in k25668 in k25665 in k25142 in k25139 in k25136 in k25133 in k25130 in k25127 in k25124 in k25121 in k25118 in k25115 in k25112 in k25109 in k25106 in k25103 in k25100 in k25097 in k25094 in k25091 in k25088 in k25085 in k25082 in k24943 in k24940 in k24937 in k24934 in k24878 in k24875 in k24872 in k24869 in k24866 in k24863 in k24860 in k24857 in k23555 in k23486 in k23293 in k23290 in k23185 in k23134 in k11783 in k10718 in k10715 in k7274 in k7271 in k6978 in k6975 in k6971 in k6680 in k6677 in k6674 in k6671 */
static void C_ccall f_35503(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[3],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_35503,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_35506,a[2]=((C_word*)t0)[2],tmp=(C_word)a,a+=3,tmp);
C_trace("ChickenBridge.scm: 382  hash-table-set!");
t3=C_retrieve(lf[852]);
((C_proc5)C_retrieve_proc(t3))(5,t3,t2,C_retrieve(lf[29]),lf[895],lf[896]);}

/* k35504 in k35501 in k35498 in k35495 in k35492 in k35489 in k35486 in k30217 in k26697 in k26694 in k26691 in k26688 in k26263 in k26260 in k26257 in k26254 in k26251 in k25668 in k25665 in k25142 in k25139 in k25136 in k25133 in k25130 in k25127 in k25124 in k25121 in k25118 in k25115 in k25112 in k25109 in k25106 in k25103 in k25100 in k25097 in k25094 in k25091 in k25088 in k25085 in k25082 in k24943 in k24940 in k24937 in k24934 in k24878 in k24875 in k24872 in k24869 in k24866 in k24863 in k24860 in k24857 in k23555 in k23486 in k23293 in k23290 in k23185 in k23134 in k11783 in k10718 in k10715 in k7274 in k7271 in k6978 in k6975 in k6971 in k6680 in k6677 in k6674 in k6671 */
static void C_ccall f_35506(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[3],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_35506,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_35509,a[2]=((C_word*)t0)[2],tmp=(C_word)a,a+=3,tmp);
C_trace("ChickenBridge.scm: 382  hash-table-set!");
t3=C_retrieve(lf[852]);
((C_proc5)C_retrieve_proc(t3))(5,t3,t2,C_retrieve(lf[29]),lf[893],lf[894]);}

/* k35507 in k35504 in k35501 in k35498 in k35495 in k35492 in k35489 in k35486 in k30217 in k26697 in k26694 in k26691 in k26688 in k26263 in k26260 in k26257 in k26254 in k26251 in k25668 in k25665 in k25142 in k25139 in k25136 in k25133 in k25130 in k25127 in k25124 in k25121 in k25118 in k25115 in k25112 in k25109 in k25106 in k25103 in k25100 in k25097 in k25094 in k25091 in k25088 in k25085 in k25082 in k24943 in k24940 in k24937 in k24934 in k24878 in k24875 in k24872 in k24869 in k24866 in k24863 in k24860 in k24857 in k23555 in k23486 in k23293 in k23290 in k23185 in k23134 in k11783 in k10718 in k10715 in k7274 in k7271 in k6978 in k6975 in k6971 in k6680 in k6677 in k6674 in k6671 */
static void C_ccall f_35509(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[3],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_35509,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_35512,a[2]=((C_word*)t0)[2],tmp=(C_word)a,a+=3,tmp);
C_trace("ChickenBridge.scm: 382  hash-table-set!");
t3=C_retrieve(lf[852]);
((C_proc5)C_retrieve_proc(t3))(5,t3,t2,C_retrieve(lf[29]),lf[891],lf[892]);}

/* k35510 in k35507 in k35504 in k35501 in k35498 in k35495 in k35492 in k35489 in k35486 in k30217 in k26697 in k26694 in k26691 in k26688 in k26263 in k26260 in k26257 in k26254 in k26251 in k25668 in k25665 in k25142 in k25139 in k25136 in k25133 in k25130 in k25127 in k25124 in k25121 in k25118 in k25115 in k25112 in k25109 in k25106 in k25103 in k25100 in k25097 in k25094 in k25091 in k25088 in k25085 in k25082 in k24943 in k24940 in k24937 in k24934 in k24878 in k24875 in k24872 in k24869 in k24866 in k24863 in k24860 in k24857 in k23555 in k23486 in k23293 in k23290 in k23185 in k23134 in k11783 in k10718 in k10715 in k7274 in k7271 in k6978 in k6975 in k6971 in k6680 in k6677 in k6674 in k6671 */
static void C_ccall f_35512(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[3],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_35512,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_35515,a[2]=((C_word*)t0)[2],tmp=(C_word)a,a+=3,tmp);
C_trace("ChickenBridge.scm: 382  hash-table-set!");
t3=C_retrieve(lf[852]);
((C_proc5)C_retrieve_proc(t3))(5,t3,t2,C_retrieve(lf[29]),lf[889],lf[890]);}

/* k35513 in k35510 in k35507 in k35504 in k35501 in k35498 in k35495 in k35492 in k35489 in k35486 in k30217 in k26697 in k26694 in k26691 in k26688 in k26263 in k26260 in k26257 in k26254 in k26251 in k25668 in k25665 in k25142 in k25139 in k25136 in k25133 in k25130 in k25127 in k25124 in k25121 in k25118 in k25115 in k25112 in k25109 in k25106 in k25103 in k25100 in k25097 in k25094 in k25091 in k25088 in k25085 in k25082 in k24943 in k24940 in k24937 in k24934 in k24878 in k24875 in k24872 in k24869 in k24866 in k24863 in k24860 in k24857 in k23555 in k23486 in k23293 in k23290 in k23185 in k23134 in k11783 in k10718 in k10715 in k7274 in k7271 in k6978 in k6975 in k6971 in k6680 in k6677 in k6674 in k6671 */
static void C_ccall f_35515(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[3],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_35515,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_35518,a[2]=((C_word*)t0)[2],tmp=(C_word)a,a+=3,tmp);
C_trace("ChickenBridge.scm: 382  hash-table-set!");
t3=C_retrieve(lf[852]);
((C_proc5)C_retrieve_proc(t3))(5,t3,t2,C_retrieve(lf[29]),lf[887],lf[888]);}

/* k35516 in k35513 in k35510 in k35507 in k35504 in k35501 in k35498 in k35495 in k35492 in k35489 in k35486 in k30217 in k26697 in k26694 in k26691 in k26688 in k26263 in k26260 in k26257 in k26254 in k26251 in k25668 in k25665 in k25142 in k25139 in k25136 in k25133 in k25130 in k25127 in k25124 in k25121 in k25118 in k25115 in k25112 in k25109 in k25106 in k25103 in k25100 in k25097 in k25094 in k25091 in k25088 in k25085 in k25082 in k24943 in k24940 in k24937 in k24934 in k24878 in k24875 in k24872 in k24869 in k24866 in k24863 in k24860 in k24857 in k23555 in k23486 in k23293 in k23290 in k23185 in k23134 in k11783 in k10718 in k10715 in k7274 in k7271 in k6978 in k6975 in k6971 in k6680 in k6677 in k6674 in k6671 */
static void C_ccall f_35518(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[3],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_35518,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_35521,a[2]=((C_word*)t0)[2],tmp=(C_word)a,a+=3,tmp);
C_trace("ChickenBridge.scm: 382  hash-table-set!");
t3=C_retrieve(lf[852]);
((C_proc5)C_retrieve_proc(t3))(5,t3,t2,C_retrieve(lf[29]),lf[885],lf[886]);}

/* k35519 in k35516 in k35513 in k35510 in k35507 in k35504 in k35501 in k35498 in k35495 in k35492 in k35489 in k35486 in k30217 in k26697 in k26694 in k26691 in k26688 in k26263 in k26260 in k26257 in k26254 in k26251 in k25668 in k25665 in k25142 in k25139 in k25136 in k25133 in k25130 in k25127 in k25124 in k25121 in k25118 in k25115 in k25112 in k25109 in k25106 in k25103 in k25100 in k25097 in k25094 in k25091 in k25088 in k25085 in k25082 in k24943 in k24940 in k24937 in k24934 in k24878 in k24875 in k24872 in k24869 in k24866 in k24863 in k24860 in k24857 in k23555 in k23486 in k23293 in k23290 in k23185 in k23134 in k11783 in k10718 in k10715 in k7274 in k7271 in k6978 in k6975 in k6971 in k6680 in k6677 in k6674 in k6671 */
static void C_ccall f_35521(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[3],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_35521,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_35524,a[2]=((C_word*)t0)[2],tmp=(C_word)a,a+=3,tmp);
C_trace("ChickenBridge.scm: 382  hash-table-set!");
t3=C_retrieve(lf[852]);
((C_proc5)C_retrieve_proc(t3))(5,t3,t2,C_retrieve(lf[29]),lf[883],lf[884]);}

/* k35522 in k35519 in k35516 in k35513 in k35510 in k35507 in k35504 in k35501 in k35498 in k35495 in k35492 in k35489 in k35486 in k30217 in k26697 in k26694 in k26691 in k26688 in k26263 in k26260 in k26257 in k26254 in k26251 in k25668 in k25665 in k25142 in k25139 in k25136 in k25133 in k25130 in k25127 in k25124 in k25121 in k25118 in k25115 in k25112 in k25109 in k25106 in k25103 in k25100 in k25097 in k25094 in k25091 in k25088 in k25085 in k25082 in k24943 in k24940 in k24937 in k24934 in k24878 in k24875 in k24872 in k24869 in k24866 in k24863 in k24860 in k24857 in k23555 in k23486 in k23293 in k23290 in k23185 in k23134 in k11783 in k10718 in k10715 in k7274 in k7271 in k6978 in k6975 in k6971 in k6680 in k6677 in k6674 in k6671 */
static void C_ccall f_35524(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[3],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_35524,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_35527,a[2]=((C_word*)t0)[2],tmp=(C_word)a,a+=3,tmp);
C_trace("ChickenBridge.scm: 382  hash-table-set!");
t3=C_retrieve(lf[852]);
((C_proc5)C_retrieve_proc(t3))(5,t3,t2,C_retrieve(lf[29]),lf[881],lf[882]);}

/* k35525 in k35522 in k35519 in k35516 in k35513 in k35510 in k35507 in k35504 in k35501 in k35498 in k35495 in k35492 in k35489 in k35486 in k30217 in k26697 in k26694 in k26691 in k26688 in k26263 in k26260 in k26257 in k26254 in k26251 in k25668 in k25665 in k25142 in k25139 in k25136 in k25133 in k25130 in k25127 in k25124 in k25121 in k25118 in k25115 in k25112 in k25109 in k25106 in k25103 in k25100 in k25097 in k25094 in k25091 in k25088 in k25085 in k25082 in k24943 in k24940 in k24937 in k24934 in k24878 in k24875 in k24872 in k24869 in k24866 in k24863 in k24860 in k24857 in k23555 in k23486 in k23293 in k23290 in k23185 in k23134 in k11783 in k10718 in k10715 in k7274 in k7271 in k6978 in k6975 in k6971 in k6680 in k6677 in k6674 in k6671 */
static void C_ccall f_35527(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[3],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_35527,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_35530,a[2]=((C_word*)t0)[2],tmp=(C_word)a,a+=3,tmp);
C_trace("ChickenBridge.scm: 382  hash-table-set!");
t3=C_retrieve(lf[852]);
((C_proc5)C_retrieve_proc(t3))(5,t3,t2,C_retrieve(lf[29]),lf[879],lf[880]);}

/* k35528 in k35525 in k35522 in k35519 in k35516 in k35513 in k35510 in k35507 in k35504 in k35501 in k35498 in k35495 in k35492 in k35489 in k35486 in k30217 in k26697 in k26694 in k26691 in k26688 in k26263 in k26260 in k26257 in k26254 in k26251 in k25668 in k25665 in k25142 in k25139 in k25136 in k25133 in k25130 in k25127 in k25124 in k25121 in k25118 in k25115 in k25112 in k25109 in k25106 in k25103 in k25100 in k25097 in k25094 in k25091 in k25088 in k25085 in k25082 in k24943 in k24940 in k24937 in k24934 in k24878 in k24875 in k24872 in k24869 in k24866 in k24863 in k24860 in k24857 in k23555 in k23486 in k23293 in k23290 in k23185 in k23134 in k11783 in k10718 in k10715 in k7274 in k7271 in k6978 in k6975 in k6971 in k6680 in k6677 in k6674 in k6671 */
static void C_ccall f_35530(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[3],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_35530,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_35533,a[2]=((C_word*)t0)[2],tmp=(C_word)a,a+=3,tmp);
C_trace("ChickenBridge.scm: 382  hash-table-set!");
t3=C_retrieve(lf[852]);
((C_proc5)C_retrieve_proc(t3))(5,t3,t2,C_retrieve(lf[29]),lf[877],lf[878]);}

/* k35531 in k35528 in k35525 in k35522 in k35519 in k35516 in k35513 in k35510 in k35507 in k35504 in k35501 in k35498 in k35495 in k35492 in k35489 in k35486 in k30217 in k26697 in k26694 in k26691 in k26688 in k26263 in k26260 in k26257 in k26254 in k26251 in k25668 in k25665 in k25142 in k25139 in k25136 in k25133 in k25130 in k25127 in k25124 in k25121 in k25118 in k25115 in k25112 in k25109 in k25106 in k25103 in k25100 in k25097 in k25094 in k25091 in k25088 in k25085 in k25082 in k24943 in k24940 in k24937 in k24934 in k24878 in k24875 in k24872 in k24869 in k24866 in k24863 in k24860 in k24857 in k23555 in k23486 in k23293 in k23290 in k23185 in k23134 in k11783 in k10718 in k10715 in k7274 in k7271 in k6978 in k6975 in k6971 in k6680 in k6677 in k6674 in k6671 */
static void C_ccall f_35533(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[3],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_35533,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_35536,a[2]=((C_word*)t0)[2],tmp=(C_word)a,a+=3,tmp);
C_trace("ChickenBridge.scm: 382  hash-table-set!");
t3=C_retrieve(lf[852]);
((C_proc5)C_retrieve_proc(t3))(5,t3,t2,C_retrieve(lf[29]),lf[875],lf[876]);}

/* k35534 in k35531 in k35528 in k35525 in k35522 in k35519 in k35516 in k35513 in k35510 in k35507 in k35504 in k35501 in k35498 in k35495 in k35492 in k35489 in k35486 in k30217 in k26697 in k26694 in k26691 in k26688 in k26263 in k26260 in k26257 in k26254 in k26251 in k25668 in k25665 in k25142 in k25139 in k25136 in k25133 in k25130 in k25127 in k25124 in k25121 in k25118 in k25115 in k25112 in k25109 in k25106 in k25103 in k25100 in k25097 in k25094 in k25091 in k25088 in k25085 in k25082 in k24943 in k24940 in k24937 in k24934 in k24878 in k24875 in k24872 in k24869 in k24866 in k24863 in k24860 in k24857 in k23555 in k23486 in k23293 in k23290 in k23185 in k23134 in k11783 in k10718 in k10715 in k7274 in k7271 in k6978 in k6975 in k6971 in k6680 in k6677 in k6674 in k6671 */
static void C_ccall f_35536(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[3],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_35536,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_35539,a[2]=((C_word*)t0)[2],tmp=(C_word)a,a+=3,tmp);
C_trace("ChickenBridge.scm: 382  hash-table-set!");
t3=C_retrieve(lf[852]);
((C_proc5)C_retrieve_proc(t3))(5,t3,t2,C_retrieve(lf[29]),lf[873],lf[874]);}

/* k35537 in k35534 in k35531 in k35528 in k35525 in k35522 in k35519 in k35516 in k35513 in k35510 in k35507 in k35504 in k35501 in k35498 in k35495 in k35492 in k35489 in k35486 in k30217 in k26697 in k26694 in k26691 in k26688 in k26263 in k26260 in k26257 in k26254 in k26251 in k25668 in k25665 in k25142 in k25139 in k25136 in k25133 in k25130 in k25127 in k25124 in k25121 in k25118 in k25115 in k25112 in k25109 in k25106 in k25103 in k25100 in k25097 in k25094 in k25091 in k25088 in k25085 in k25082 in k24943 in k24940 in k24937 in k24934 in k24878 in k24875 in k24872 in k24869 in k24866 in k24863 in k24860 in k24857 in k23555 in k23486 in k23293 in k23290 in k23185 in k23134 in k11783 in k10718 in k10715 in k7274 in k7271 in k6978 in k6975 in k6971 in k6680 in k6677 in k6674 in k6671 */
static void C_ccall f_35539(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[3],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_35539,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_35542,a[2]=((C_word*)t0)[2],tmp=(C_word)a,a+=3,tmp);
C_trace("ChickenBridge.scm: 382  hash-table-set!");
t3=C_retrieve(lf[852]);
((C_proc5)C_retrieve_proc(t3))(5,t3,t2,C_retrieve(lf[29]),lf[871],lf[872]);}

/* k35540 in k35537 in k35534 in k35531 in k35528 in k35525 in k35522 in k35519 in k35516 in k35513 in k35510 in k35507 in k35504 in k35501 in k35498 in k35495 in k35492 in k35489 in k35486 in k30217 in k26697 in k26694 in k26691 in k26688 in k26263 in k26260 in k26257 in k26254 in k26251 in k25668 in k25665 in k25142 in k25139 in k25136 in k25133 in k25130 in k25127 in k25124 in k25121 in k25118 in k25115 in k25112 in k25109 in k25106 in k25103 in k25100 in k25097 in k25094 in k25091 in k25088 in k25085 in k25082 in k24943 in k24940 in k24937 in k24934 in k24878 in k24875 in k24872 in k24869 in k24866 in k24863 in k24860 in k24857 in k23555 in k23486 in k23293 in k23290 in k23185 in k23134 in k11783 in k10718 in k10715 in k7274 in k7271 in k6978 in k6975 in k6971 in k6680 in k6677 in k6674 in k6671 */
static void C_ccall f_35542(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[3],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_35542,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_35545,a[2]=((C_word*)t0)[2],tmp=(C_word)a,a+=3,tmp);
C_trace("ChickenBridge.scm: 382  hash-table-set!");
t3=C_retrieve(lf[852]);
((C_proc5)C_retrieve_proc(t3))(5,t3,t2,C_retrieve(lf[29]),lf[869],lf[870]);}

/* k35543 in k35540 in k35537 in k35534 in k35531 in k35528 in k35525 in k35522 in k35519 in k35516 in k35513 in k35510 in k35507 in k35504 in k35501 in k35498 in k35495 in k35492 in k35489 in k35486 in k30217 in k26697 in k26694 in k26691 in k26688 in k26263 in k26260 in k26257 in k26254 in k26251 in k25668 in k25665 in k25142 in k25139 in k25136 in k25133 in k25130 in k25127 in k25124 in k25121 in k25118 in k25115 in k25112 in k25109 in k25106 in k25103 in k25100 in k25097 in k25094 in k25091 in k25088 in k25085 in k25082 in k24943 in k24940 in k24937 in k24934 in k24878 in k24875 in k24872 in k24869 in k24866 in k24863 in k24860 in k24857 in k23555 in k23486 in k23293 in k23290 in k23185 in k23134 in k11783 in k10718 in k10715 in k7274 in k7271 in k6978 in k6975 in k6971 in k6680 in k6677 in k6674 in k6671 */
static void C_ccall f_35545(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word ab[21],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_35545,2,t0,t1);}
t2=C_mutate((C_word*)lf[794]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_35547,a[2]=((C_word)li580),tmp=(C_word)a,a+=3,tmp));
t3=C_mutate((C_word*)lf[796]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_35590,a[2]=((C_word)li582),tmp=(C_word)a,a+=3,tmp));
t4=C_mutate((C_word*)lf[797]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_35598,a[2]=((C_word)li584),tmp=(C_word)a,a+=3,tmp));
t5=C_mutate((C_word*)lf[798]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_35655,a[2]=((C_word)li586),tmp=(C_word)a,a+=3,tmp));
t6=C_mutate((C_word*)lf[799]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_35712,a[2]=((C_word)li588),tmp=(C_word)a,a+=3,tmp));
t7=C_mutate((C_word*)lf[802]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_35950,a[2]=((C_word)li590),tmp=(C_word)a,a+=3,tmp));
t8=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_36401,a[2]=((C_word*)t0)[2],tmp=(C_word)a,a+=3,tmp);
C_trace("ChickenBridge.scm: 383  hash-table-set!");
t9=C_retrieve(lf[852]);
((C_proc5)C_retrieve_proc(t9))(5,t9,t8,C_retrieve(lf[29]),lf[867],lf[868]);}

/* k36399 in k35543 in k35540 in k35537 in k35534 in k35531 in k35528 in k35525 in k35522 in k35519 in k35516 in k35513 in k35510 in k35507 in k35504 in k35501 in k35498 in k35495 in k35492 in k35489 in k35486 in k30217 in k26697 in k26694 in k26691 in k26688 in k26263 in k26260 in k26257 in k26254 in k26251 in k25668 in k25665 in k25142 in k25139 in k25136 in k25133 in k25130 in k25127 in k25124 in k25121 in k25118 in k25115 in k25112 in k25109 in k25106 in k25103 in k25100 in k25097 in k25094 in k25091 in k25088 in k25085 in k25082 in k24943 in k24940 in k24937 in k24934 in k24878 in k24875 in k24872 in k24869 in k24866 in k24863 in k24860 in k24857 in k23555 in k23486 in k23293 in k23290 in k23185 in k23134 in k11783 in k10718 in k10715 in k7274 in k7271 in k6978 in k6975 in k6971 in k6680 in k6677 in k6674 in k6671 */
static void C_ccall f_36401(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[3],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_36401,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_36404,a[2]=((C_word*)t0)[2],tmp=(C_word)a,a+=3,tmp);
C_trace("ChickenBridge.scm: 383  hash-table-set!");
t3=C_retrieve(lf[852]);
((C_proc5)C_retrieve_proc(t3))(5,t3,t2,C_retrieve(lf[29]),lf[865],lf[866]);}

/* k36402 in k36399 in k35543 in k35540 in k35537 in k35534 in k35531 in k35528 in k35525 in k35522 in k35519 in k35516 in k35513 in k35510 in k35507 in k35504 in k35501 in k35498 in k35495 in k35492 in k35489 in k35486 in k30217 in k26697 in k26694 in k26691 in k26688 in k26263 in k26260 in k26257 in k26254 in k26251 in k25668 in k25665 in k25142 in k25139 in k25136 in k25133 in k25130 in k25127 in k25124 in k25121 in k25118 in k25115 in k25112 in k25109 in k25106 in k25103 in k25100 in k25097 in k25094 in k25091 in k25088 in k25085 in k25082 in k24943 in k24940 in k24937 in k24934 in k24878 in k24875 in k24872 in k24869 in k24866 in k24863 in k24860 in k24857 in k23555 in k23486 in k23293 in k23290 in k23185 in k23134 in k11783 in k10718 in k10715 in k7274 in k7271 in k6978 in k6975 in k6971 in k6680 in k6677 in k6674 in k6671 */
static void C_ccall f_36404(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[3],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_36404,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_36407,a[2]=((C_word*)t0)[2],tmp=(C_word)a,a+=3,tmp);
C_trace("ChickenBridge.scm: 383  hash-table-set!");
t3=C_retrieve(lf[852]);
((C_proc5)C_retrieve_proc(t3))(5,t3,t2,C_retrieve(lf[29]),lf[863],lf[864]);}

/* k36405 in k36402 in k36399 in k35543 in k35540 in k35537 in k35534 in k35531 in k35528 in k35525 in k35522 in k35519 in k35516 in k35513 in k35510 in k35507 in k35504 in k35501 in k35498 in k35495 in k35492 in k35489 in k35486 in k30217 in k26697 in k26694 in k26691 in k26688 in k26263 in k26260 in k26257 in k26254 in k26251 in k25668 in k25665 in k25142 in k25139 in k25136 in k25133 in k25130 in k25127 in k25124 in k25121 in k25118 in k25115 in k25112 in k25109 in k25106 in k25103 in k25100 in k25097 in k25094 in k25091 in k25088 in k25085 in k25082 in k24943 in k24940 in k24937 in k24934 in k24878 in k24875 in k24872 in k24869 in k24866 in k24863 in k24860 in k24857 in k23555 in k23486 in k23293 in k23290 in k23185 in k23134 in k11783 in k10718 in k10715 in k7274 in k7271 in k6978 in k6975 in k6971 in k6680 in k6677 in k6674 in k6671 */
static void C_ccall f_36407(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[3],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_36407,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_36410,a[2]=((C_word*)t0)[2],tmp=(C_word)a,a+=3,tmp);
C_trace("ChickenBridge.scm: 383  hash-table-set!");
t3=C_retrieve(lf[852]);
((C_proc5)C_retrieve_proc(t3))(5,t3,t2,C_retrieve(lf[29]),lf[861],lf[862]);}

/* k36408 in k36405 in k36402 in k36399 in k35543 in k35540 in k35537 in k35534 in k35531 in k35528 in k35525 in k35522 in k35519 in k35516 in k35513 in k35510 in k35507 in k35504 in k35501 in k35498 in k35495 in k35492 in k35489 in k35486 in k30217 in k26697 in k26694 in k26691 in k26688 in k26263 in k26260 in k26257 in k26254 in k26251 in k25668 in k25665 in k25142 in k25139 in k25136 in k25133 in k25130 in k25127 in k25124 in k25121 in k25118 in k25115 in k25112 in k25109 in k25106 in k25103 in k25100 in k25097 in k25094 in k25091 in k25088 in k25085 in k25082 in k24943 in k24940 in k24937 in k24934 in k24878 in k24875 in k24872 in k24869 in k24866 in k24863 in k24860 in k24857 in k23555 in k23486 in k23293 in k23290 in k23185 in k23134 in k11783 in k10718 in k10715 in k7274 in k7271 in k6978 in k6975 in k6971 in k6680 in k6677 in k6674 in k6671 */
static void C_ccall f_36410(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[3],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_36410,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_36413,a[2]=((C_word*)t0)[2],tmp=(C_word)a,a+=3,tmp);
C_trace("ChickenBridge.scm: 383  hash-table-set!");
t3=C_retrieve(lf[852]);
((C_proc5)C_retrieve_proc(t3))(5,t3,t2,C_retrieve(lf[29]),lf[859],lf[860]);}

/* k36411 in k36408 in k36405 in k36402 in k36399 in k35543 in k35540 in k35537 in k35534 in k35531 in k35528 in k35525 in k35522 in k35519 in k35516 in k35513 in k35510 in k35507 in k35504 in k35501 in k35498 in k35495 in k35492 in k35489 in k35486 in k30217 in k26697 in k26694 in k26691 in k26688 in k26263 in k26260 in k26257 in k26254 in k26251 in k25668 in k25665 in k25142 in k25139 in k25136 in k25133 in k25130 in k25127 in k25124 in k25121 in k25118 in k25115 in k25112 in k25109 in k25106 in k25103 in k25100 in k25097 in k25094 in k25091 in k25088 in k25085 in k25082 in k24943 in k24940 in k24937 in k24934 in k24878 in k24875 in k24872 in k24869 in k24866 in k24863 in k24860 in k24857 in k23555 in k23486 in k23293 in k23290 in k23185 in k23134 in k11783 in k10718 in k10715 in k7274 in k7271 in k6978 in k6975 in k6971 in k6680 in k6677 in k6674 in k6671 */
static void C_ccall f_36413(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[3],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_36413,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_36416,a[2]=((C_word*)t0)[2],tmp=(C_word)a,a+=3,tmp);
C_trace("ChickenBridge.scm: 383  hash-table-set!");
t3=C_retrieve(lf[852]);
((C_proc5)C_retrieve_proc(t3))(5,t3,t2,C_retrieve(lf[29]),lf[857],lf[858]);}

/* k36414 in k36411 in k36408 in k36405 in k36402 in k36399 in k35543 in k35540 in k35537 in k35534 in k35531 in k35528 in k35525 in k35522 in k35519 in k35516 in k35513 in k35510 in k35507 in k35504 in k35501 in k35498 in k35495 in k35492 in k35489 in k35486 in k30217 in k26697 in k26694 in k26691 in k26688 in k26263 in k26260 in k26257 in k26254 in k26251 in k25668 in k25665 in k25142 in k25139 in k25136 in k25133 in k25130 in k25127 in k25124 in k25121 in k25118 in k25115 in k25112 in k25109 in k25106 in k25103 in k25100 in k25097 in k25094 in k25091 in k25088 in k25085 in k25082 in k24943 in k24940 in k24937 in k24934 in k24878 in k24875 in k24872 in k24869 in k24866 in k24863 in k24860 in k24857 in k23555 in k23486 in k23293 in k23290 in k23185 in k23134 in k11783 in k10718 in k10715 in k7274 in k7271 in k6978 in k6975 in k6971 in k6680 in k6677 in k6674 in k6671 */
static void C_ccall f_36416(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[3],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_36416,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_36419,a[2]=((C_word*)t0)[2],tmp=(C_word)a,a+=3,tmp);
C_trace("ChickenBridge.scm: 383  hash-table-set!");
t3=C_retrieve(lf[852]);
((C_proc5)C_retrieve_proc(t3))(5,t3,t2,C_retrieve(lf[29]),lf[855],lf[856]);}

/* k36417 in k36414 in k36411 in k36408 in k36405 in k36402 in k36399 in k35543 in k35540 in k35537 in k35534 in k35531 in k35528 in k35525 in k35522 in k35519 in k35516 in k35513 in k35510 in k35507 in k35504 in k35501 in k35498 in k35495 in k35492 in k35489 in k35486 in k30217 in k26697 in k26694 in k26691 in k26688 in k26263 in k26260 in k26257 in k26254 in k26251 in k25668 in k25665 in k25142 in k25139 in k25136 in k25133 in k25130 in k25127 in k25124 in k25121 in k25118 in k25115 in k25112 in k25109 in k25106 in k25103 in k25100 in k25097 in k25094 in k25091 in k25088 in k25085 in k25082 in k24943 in k24940 in k24937 in k24934 in k24878 in k24875 in k24872 in k24869 in k24866 in k24863 in k24860 in k24857 in k23555 in k23486 in k23293 in k23290 in k23185 in k23134 in k11783 in k10718 in k10715 in k7274 in k7271 in k6978 in k6975 in k6971 in k6680 in k6677 in k6674 in k6671 */
static void C_ccall f_36419(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[3],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_36419,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_36422,a[2]=((C_word*)t0)[2],tmp=(C_word)a,a+=3,tmp);
C_trace("ChickenBridge.scm: 383  hash-table-set!");
t3=C_retrieve(lf[852]);
((C_proc5)C_retrieve_proc(t3))(5,t3,t2,C_retrieve(lf[29]),lf[853],lf[854]);}

/* k36420 in k36417 in k36414 in k36411 in k36408 in k36405 in k36402 in k36399 in k35543 in k35540 in k35537 in k35534 in k35531 in k35528 in k35525 in k35522 in k35519 in k35516 in k35513 in k35510 in k35507 in k35504 in k35501 in k35498 in k35495 in k35492 in k35489 in k35486 in k30217 in k26697 in k26694 in k26691 in k26688 in k26263 in k26260 in k26257 in k26254 in k26251 in k25668 in k25665 in k25142 in k25139 in k25136 in k25133 in k25130 in k25127 in k25124 in k25121 in k25118 in k25115 in k25112 in k25109 in k25106 in k25103 in k25100 in k25097 in k25094 in k25091 in k25088 in k25085 in k25082 in k24943 in k24940 in k24937 in k24934 in k24878 in k24875 in k24872 in k24869 in k24866 in k24863 in k24860 in k24857 in k23555 in k23486 in k23293 in k23290 in k23185 in k23134 in k11783 in k10718 in k10715 in k7274 in k7271 in k6978 in k6975 in k6971 in k6680 in k6677 in k6674 in k6671 */
static void C_ccall f_36422(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word t14;
C_word t15;
C_word t16;
C_word t17;
C_word t18;
C_word t19;
C_word t20;
C_word t21;
C_word t22;
C_word t23;
C_word t24;
C_word ab[58],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_36422,2,t0,t1);}
t2=C_mutate((C_word*)lf[804]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_36424,a[2]=((C_word)li593),tmp=(C_word)a,a+=3,tmp));
t3=C_mutate((C_word*)lf[507]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_36614,a[2]=((C_word)li594),tmp=(C_word)a,a+=3,tmp));
t4=C_mutate((C_word*)lf[496]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_36628,a[2]=((C_word)li595),tmp=(C_word)a,a+=3,tmp));
t5=C_mutate(&lf[812],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_36642,a[2]=((C_word)li597),tmp=(C_word)a,a+=3,tmp));
t6=C_mutate(&lf[814],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_36686,a[2]=((C_word)li599),tmp=(C_word)a,a+=3,tmp));
t7=C_mutate((C_word*)lf[518]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_36708,a[2]=((C_word)li601),tmp=(C_word)a,a+=3,tmp));
t8=C_mutate((C_word*)lf[815]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_36727,a[2]=((C_word)li609),tmp=(C_word)a,a+=3,tmp));
t9=C_mutate((C_word*)lf[820]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_36939,a[2]=((C_word)li610),tmp=(C_word)a,a+=3,tmp));
t10=C_mutate((C_word*)lf[821]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_36942,a[2]=((C_word)li612),tmp=(C_word)a,a+=3,tmp));
t11=C_mutate((C_word*)lf[822]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_36951,a[2]=((C_word)li614),tmp=(C_word)a,a+=3,tmp));
t12=C_mutate((C_word*)lf[823]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_36957,a[2]=((C_word)li616),tmp=(C_word)a,a+=3,tmp));
t13=C_mutate((C_word*)lf[824]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_36966,a[2]=((C_word)li618),tmp=(C_word)a,a+=3,tmp));
t14=C_mutate((C_word*)lf[826]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_37024,a[2]=((C_word)li620),tmp=(C_word)a,a+=3,tmp));
t15=C_mutate(&lf[827],lf[828]);
t16=C_mutate(&lf[829],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_37034,a[2]=((C_word)li621),tmp=(C_word)a,a+=3,tmp));
t17=(C_word)C_a_i_list(&a,1,C_SCHEME_FALSE);
t18=t17;
t19=(*a=C_VECTOR_TYPE|1,a[1]=t18,tmp=(C_word)a,a+=2,tmp);
t20=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_37105,a[2]=((C_word*)t0)[2],tmp=(C_word)a,a+=3,tmp);
t21=C_SCHEME_UNDEFINED;
t22=(*a=C_VECTOR_TYPE|1,a[1]=t21,tmp=(C_word)a,a+=2,tmp);
t23=C_set_block_item(t22,0,(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_37438,a[2]=t22,a[3]=t17,a[4]=t19,a[5]=((C_word)li625),tmp=(C_word)a,a+=6,tmp));
t24=((C_word*)t22)[1];
f_37438(t24,t20,C_retrieve2(lf[721],"*loop-operators*"));}

/* do6587 in k36420 in k36417 in k36414 in k36411 in k36408 in k36405 in k36402 in k36399 in k35543 in k35540 in k35537 in k35534 in k35531 in k35528 in k35525 in k35522 in k35519 in k35516 in k35513 in k35510 in k35507 in k35504 in k35501 in k35498 in k35495 in k35492 in k35489 in k35486 in k30217 in k26697 in k26694 in k26691 in k26688 in k26263 in k26260 in k26257 in k26254 in k26251 in k25668 in k25665 in k25142 in k25139 in k25136 in k25133 in k25130 in k25127 in k25124 in k25121 in k25118 in k25115 in k25112 in k25109 in k25106 in k25103 in k25100 in k25097 in k25094 in k25091 in k25088 in k25085 in k25082 in k24943 in k24940 in k24937 in k24934 in k24878 in k24875 in k24872 in k24869 in k24866 in k24863 in k24860 in k24857 in k23555 in k23486 in k23293 in k23290 in k23185 in k23134 in k11783 in k10718 in k10715 in k7274 in k7271 in k6978 in k6975 in k6971 in k6680 in k6677 in k6674 in k6671 */
static void C_fcall f_37438(C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word t14;
C_word t15;
C_word ab[32],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_37438,NULL,3,t0,t1,t2);}
if(C_truep((C_word)C_i_nullp(t2))){
t3=(C_word)C_a_i_list(&a,3,lf[687],C_retrieve2(lf[829],"run-while-until"),C_SCHEME_FALSE);
t4=(C_word)C_a_i_list(&a,3,lf[686],C_retrieve2(lf[829],"run-while-until"),C_SCHEME_FALSE);
t5=(C_word)C_a_i_list(&a,2,t3,t4);
t6=(C_word)C_i_set_cdr(((C_word*)((C_word*)t0)[4])[1],t5);
t7=t1;
((C_proc2)(void*)(*((C_word*)t7+1)))(2,t7,(C_word)C_i_cdr(((C_word*)t0)[3]));}
else{
t3=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_37466,a[2]=t1,a[3]=((C_word*)t0)[2],a[4]=t2,tmp=(C_word)a,a+=5,tmp);
t4=(C_word)C_i_car(t2);
t5=(C_word)C_i_car(t4);
if(C_truep((C_truep((C_word)C_i_equalp(t5,lf[664]))?C_SCHEME_TRUE:(C_truep((C_word)C_i_equalp(t5,lf[18]))?C_SCHEME_TRUE:(C_truep((C_word)C_i_equalp(t5,lf[669]))?C_SCHEME_TRUE:(C_truep((C_word)C_i_equalp(t5,lf[654]))?C_SCHEME_TRUE:(C_truep((C_word)C_i_equalp(t5,lf[655]))?C_SCHEME_TRUE:(C_truep((C_word)C_i_equalp(t5,lf[657]))?C_SCHEME_TRUE:(C_truep((C_word)C_i_equalp(t5,lf[658]))?C_SCHEME_TRUE:(C_truep((C_word)C_i_equalp(t5,lf[691]))?C_SCHEME_TRUE:(C_truep((C_word)C_i_equalp(t5,lf[692]))?C_SCHEME_TRUE:(C_truep((C_word)C_i_equalp(t5,lf[693]))?C_SCHEME_TRUE:(C_truep((C_word)C_i_equalp(t5,lf[683]))?C_SCHEME_TRUE:(C_truep((C_word)C_i_equalp(t5,lf[687]))?C_SCHEME_TRUE:(C_truep((C_word)C_i_equalp(t5,lf[686]))?C_SCHEME_TRUE:C_SCHEME_FALSE))))))))))))))){
t6=t3;
f_37466(t6,C_SCHEME_UNDEFINED);}
else{
t6=(C_word)C_i_car(t2);
t7=(C_word)C_a_i_list(&a,1,t6);
t8=(C_word)C_i_set_cdr(((C_word*)((C_word*)t0)[4])[1],t7);
t9=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
t10=C_mutate(((C_word *)((C_word*)t0)[4])+1,t9);
t11=t3;
f_37466(t11,t10);}}}

/* k37464 in do6587 in k36420 in k36417 in k36414 in k36411 in k36408 in k36405 in k36402 in k36399 in k35543 in k35540 in k35537 in k35534 in k35531 in k35528 in k35525 in k35522 in k35519 in k35516 in k35513 in k35510 in k35507 in k35504 in k35501 in k35498 in k35495 in k35492 in k35489 in k35486 in k30217 in k26697 in k26694 in k26691 in k26688 in k26263 in k26260 in k26257 in k26254 in k26251 in k25668 in k25665 in k25142 in k25139 in k25136 in k25133 in k25130 in k25127 in k25124 in k25121 in k25118 in k25115 in k25112 in k25109 in k25106 in k25103 in k25100 in k25097 in k25094 in k25091 in k25088 in k25085 in k25082 in k24943 in k24940 in k24937 in k24934 in k24878 in k24875 in k24872 in k24869 in k24866 in k24863 in k24860 in k24857 in k23555 in k23486 in k23293 in k23290 in k23185 in k23134 in k11783 in k10718 in k10715 in k7274 in k7271 in k6978 in k6975 in k6971 in k6680 in k6677 in k6674 in k6671 */
static void C_fcall f_37466(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word *a;
t2=(C_word)C_i_cdr(((C_word*)t0)[4]);
t3=((C_word*)((C_word*)t0)[3])[1];
f_37438(t3,((C_word*)t0)[2],t2);}

/* k37103 in k36420 in k36417 in k36414 in k36411 in k36408 in k36405 in k36402 in k36399 in k35543 in k35540 in k35537 in k35534 in k35531 in k35528 in k35525 in k35522 in k35519 in k35516 in k35513 in k35510 in k35507 in k35504 in k35501 in k35498 in k35495 in k35492 in k35489 in k35486 in k30217 in k26697 in k26694 in k26691 in k26688 in k26263 in k26260 in k26257 in k26254 in k26251 in k25668 in k25665 in k25142 in k25139 in k25136 in k25133 in k25130 in k25127 in k25124 in k25121 in k25118 in k25115 in k25112 in k25109 in k25106 in k25103 in k25100 in k25097 in k25094 in k25091 in k25088 in k25085 in k25082 in k24943 in k24940 in k24937 in k24934 in k24878 in k24875 in k24872 in k24869 in k24866 in k24863 in k24860 in k24857 in k23555 in k23486 in k23293 in k23290 in k23185 in k23134 in k11783 in k10718 in k10715 in k7274 in k7271 in k6978 in k6975 in k6971 in k6680 in k6677 in k6674 in k6671 */
static void C_ccall f_37105(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_37105,2,t0,t1);}
t2=C_mutate(&lf[832],t1);
t3=C_mutate(&lf[833],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_37107,a[2]=((C_word)li622),tmp=(C_word)a,a+=3,tmp));
t4=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_37395,a[2]=((C_word*)t0)[2],tmp=(C_word)a,a+=3,tmp);
t5=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_37432,a[2]=((C_word)li624),tmp=(C_word)a,a+=3,tmp);
C_trace("ChickenBridge.scm: 631  ##sys#register-macro-2");
t6=C_retrieve(lf[851]);
((C_proc4)C_retrieve_proc(t6))(4,t6,t4,lf[850],t5);}

/* a37431 in k37103 in k36420 in k36417 in k36414 in k36411 in k36408 in k36405 in k36402 in k36399 in k35543 in k35540 in k35537 in k35534 in k35531 in k35528 in k35525 in k35522 in k35519 in k35516 in k35513 in k35510 in k35507 in k35504 in k35501 in k35498 in k35495 in k35492 in k35489 in k35486 in k30217 in k26697 in k26694 in k26691 in k26688 in k26263 in k26260 in k26257 in k26254 in k26251 in k25668 in k25665 in k25142 in k25139 in k25136 in k25133 in k25130 in k25127 in k25124 in k25121 in k25118 in k25115 in k25112 in k25109 in k25106 in k25103 in k25100 in k25097 in k25094 in k25091 in k25088 in k25085 in k25082 in k24943 in k24940 in k24937 in k24934 in k24878 in k24875 in k24872 in k24869 in k24866 in k24863 in k24860 in k24857 in k23555 in k23486 in k23293 in k23290 in k23185 in k23134 in k11783 in k10718 in k10715 in k7274 in k7271 in k6978 in k6975 in k6971 in k6680 in k6677 in k6674 in k6671 */
static void C_ccall f_37432(C_word c,C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word ab[3],*a=ab;
if(c!=3) C_bad_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr3,(void*)f_37432,3,t0,t1,t2);}
t3=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_37150,a[2]=t1,tmp=(C_word)a,a+=3,tmp);
C_trace("ChickenBridge.scm: 576  parse-iteration");
f_30025(t3,lf[850],t2,C_retrieve2(lf[832],"*run-operators*"));}

/* k37148 in a37431 in k37103 in k36420 in k36417 in k36414 in k36411 in k36408 in k36405 in k36402 in k36399 in k35543 in k35540 in k35537 in k35534 in k35531 in k35528 in k35525 in k35522 in k35519 in k35516 in k35513 in k35510 in k35507 in k35504 in k35501 in k35498 in k35495 in k35492 in k35489 in k35486 in k30217 in k26697 in k26694 in k26691 in k26688 in k26263 in k26260 in k26257 in k26254 in k26251 in k25668 in k25665 in k25142 in k25139 in k25136 in k25133 in k25130 in k25127 in k25124 in k25121 in k25118 in k25115 in k25112 in k25109 in k25106 in k25103 in k25100 in k25097 in k25094 in k25091 in k25088 in k25085 in k25082 in k24943 in k24940 in k24937 in k24934 in k24878 in k24875 in k24872 in k24869 in k24866 in k24863 in k24860 in k24857 in k23555 in k23486 in k23293 in k23290 in k23185 in k23134 in k11783 in k10718 in k10715 in k7274 in k7271 in k6978 in k6975 in k6971 in k6680 in k6677 in k6674 in k6671 */
static void C_ccall f_37150(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word ab[14],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_37150,2,t0,t1);}
t2=C_SCHEME_FALSE;
t3=(*a=C_VECTOR_TYPE|1,a[1]=t2,tmp=(C_word)a,a+=2,tmp);
t4=C_SCHEME_END_OF_LIST;
t5=(*a=C_VECTOR_TYPE|1,a[1]=t4,tmp=(C_word)a,a+=2,tmp);
t6=C_retrieve2(lf[827],"*process-stop*");
t7=(*a=C_VECTOR_TYPE|1,a[1]=t6,tmp=(C_word)a,a+=2,tmp);
t8=(C_word)C_i_car(((C_word*)t7)[1]);
t9=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_37156,a[2]=t7,a[3]=t1,a[4]=((C_word*)t0)[2],a[5]=t3,a[6]=t8,a[7]=t5,tmp=(C_word)a,a+=8,tmp);
C_trace("ChickenBridge.scm: 584  gensym");
t10=C_retrieve(lf[26]);
((C_proc3)C_retrieve_proc(t10))(3,t10,t9,lf[849]);}

/* k37154 in k37148 in a37431 in k37103 in k36420 in k36417 in k36414 in k36411 in k36408 in k36405 in k36402 in k36399 in k35543 in k35540 in k35537 in k35534 in k35531 in k35528 in k35525 in k35522 in k35519 in k35516 in k35513 in k35510 in k35507 in k35504 in k35501 in k35498 in k35495 in k35492 in k35489 in k35486 in k30217 in k26697 in k26694 in k26691 in k26688 in k26263 in k26260 in k26257 in k26254 in k26251 in k25668 in k25665 in k25142 in k25139 in k25136 in k25133 in k25130 in k25127 in k25124 in k25121 in k25118 in k25115 in k25112 in k25109 in k25106 in k25103 in k25100 in k25097 in k25094 in k25091 in k25088 in k25085 in k25082 in k24943 in k24940 in k24937 in k24934 in k24878 in k24875 in k24872 in k24869 in k24866 in k24863 in k24860 in k24857 in k23555 in k23486 in k23293 in k23290 in k23185 in k23134 in k11783 in k10718 in k10715 in k7274 in k7271 in k6978 in k6975 in k6971 in k6680 in k6677 in k6674 in k6671 */
static void C_ccall f_37156(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_37156,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|8,a[1]=(C_word)f_37159,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],a[7]=t1,a[8]=((C_word*)t0)[7],tmp=(C_word)a,a+=9,tmp);
C_trace("ChickenBridge.scm: 585  gensym");
t3=C_retrieve(lf[26]);
((C_proc3)C_retrieve_proc(t3))(3,t3,t2,lf[848]);}

/* k37157 in k37154 in k37148 in a37431 in k37103 in k36420 in k36417 in k36414 in k36411 in k36408 in k36405 in k36402 in k36399 in k35543 in k35540 in k35537 in k35534 in k35531 in k35528 in k35525 in k35522 in k35519 in k35516 in k35513 in k35510 in k35507 in k35504 in k35501 in k35498 in k35495 in k35492 in k35489 in k35486 in k30217 in k26697 in k26694 in k26691 in k26688 in k26263 in k26260 in k26257 in k26254 in k26251 in k25668 in k25665 in k25142 in k25139 in k25136 in k25133 in k25130 in k25127 in k25124 in k25121 in k25118 in k25115 in k25112 in k25109 in k25106 in k25103 in k25100 in k25097 in k25094 in k25091 in k25088 in k25085 in k25082 in k24943 in k24940 in k24937 in k24934 in k24878 in k24875 in k24872 in k24869 in k24866 in k24863 in k24860 in k24857 in k23555 in k23486 in k23293 in k23290 in k23185 in k23134 in k11783 in k10718 in k10715 in k7274 in k7271 in k6978 in k6975 in k6971 in k6680 in k6677 in k6674 in k6671 */
static void C_ccall f_37159(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[10],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_37159,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|9,a[1]=(C_word)f_37162,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],a[7]=t1,a[8]=((C_word*)t0)[7],a[9]=((C_word*)t0)[8],tmp=(C_word)a,a+=10,tmp);
C_trace("ChickenBridge.scm: 586  gensym");
t3=C_retrieve(lf[26]);
((C_proc3)C_retrieve_proc(t3))(3,t3,t2,lf[847]);}

/* k37160 in k37157 in k37154 in k37148 in a37431 in k37103 in k36420 in k36417 in k36414 in k36411 in k36408 in k36405 in k36402 in k36399 in k35543 in k35540 in k35537 in k35534 in k35531 in k35528 in k35525 in k35522 in k35519 in k35516 in k35513 in k35510 in k35507 in k35504 in k35501 in k35498 in k35495 in k35492 in k35489 in k35486 in k30217 in k26697 in k26694 in k26691 in k26688 in k26263 in k26260 in k26257 in k26254 in k26251 in k25668 in k25665 in k25142 in k25139 in k25136 in k25133 in k25130 in k25127 in k25124 in k25121 in k25118 in k25115 in k25112 in k25109 in k25106 in k25103 in k25100 in k25097 in k25094 in k25091 in k25088 in k25085 in k25082 in k24943 in k24940 in k24937 in k24934 in k24878 in k24875 in k24872 in k24869 in k24866 in k24863 in k24860 in k24857 in k23555 in k23486 in k23293 in k23290 in k23185 in k23134 in k11783 in k10718 in k10715 in k7274 in k7271 in k6978 in k6975 in k6971 in k6680 in k6677 in k6674 in k6671 */
static void C_ccall f_37162(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[11],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_37162,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|10,a[1]=(C_word)f_37166,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=t1,a[7]=((C_word*)t0)[6],a[8]=((C_word*)t0)[7],a[9]=((C_word*)t0)[8],a[10]=((C_word*)t0)[9],tmp=(C_word)a,a+=11,tmp);
C_trace("ChickenBridge.scm: 588  loop-end-tests");
t3=C_retrieve2(lf[535],"loop-end-tests");
f_26749(3,t3,t2,((C_word*)t0)[3]);}

/* k37164 in k37160 in k37157 in k37154 in k37148 in a37431 in k37103 in k36420 in k36417 in k36414 in k36411 in k36408 in k36405 in k36402 in k36399 in k35543 in k35540 in k35537 in k35534 in k35531 in k35528 in k35525 in k35522 in k35519 in k35516 in k35513 in k35510 in k35507 in k35504 in k35501 in k35498 in k35495 in k35492 in k35489 in k35486 in k30217 in k26697 in k26694 in k26691 in k26688 in k26263 in k26260 in k26257 in k26254 in k26251 in k25668 in k25665 in k25142 in k25139 in k25136 in k25133 in k25130 in k25127 in k25124 in k25121 in k25118 in k25115 in k25112 in k25109 in k25106 in k25103 in k25100 in k25097 in k25094 in k25091 in k25088 in k25085 in k25082 in k24943 in k24940 in k24937 in k24934 in k24878 in k24875 in k24872 in k24869 in k24866 in k24863 in k24860 in k24857 in k23555 in k23486 in k23293 in k23290 in k23185 in k23134 in k11783 in k10718 in k10715 in k7274 in k7271 in k6978 in k6975 in k6971 in k6680 in k6677 in k6674 in k6671 */
static void C_ccall f_37166(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[16],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_37166,2,t0,t1);}
t2=C_mutate(((C_word *)((C_word*)t0)[10])+1,t1);
t3=(*a=C_CLOSURE_TYPE|10,a[1]=(C_word)f_37169,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[10],a[4]=((C_word*)t0)[3],a[5]=((C_word*)t0)[4],a[6]=((C_word*)t0)[5],a[7]=((C_word*)t0)[6],a[8]=((C_word*)t0)[7],a[9]=((C_word*)t0)[8],a[10]=((C_word*)t0)[9],tmp=(C_word)a,a+=11,tmp);
t4=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_37376,a[2]=((C_word*)t0)[3],a[3]=t3,a[4]=((C_word*)t0)[2],tmp=(C_word)a,a+=5,tmp);
C_trace("ChickenBridge.scm: 589  loop-finally");
t5=C_retrieve2(lf[539],"loop-finally");
f_26785(3,t5,t4,((C_word*)t0)[3]);}

/* k37374 in k37164 in k37160 in k37157 in k37154 in k37148 in a37431 in k37103 in k36420 in k36417 in k36414 in k36411 in k36408 in k36405 in k36402 in k36399 in k35543 in k35540 in k35537 in k35534 in k35531 in k35528 in k35525 in k35522 in k35519 in k35516 in k35513 in k35510 in k35507 in k35504 in k35501 in k35498 in k35495 in k35492 in k35489 in k35486 in k30217 in k26697 in k26694 in k26691 in k26688 in k26263 in k26260 in k26257 in k26254 in k26251 in k25668 in k25665 in k25142 in k25139 in k25136 in k25133 in k25130 in k25127 in k25124 in k25121 in k25118 in k25115 in k25112 in k25109 in k25106 in k25103 in k25100 in k25097 in k25094 in k25091 in k25088 in k25085 in k25082 in k24943 in k24940 in k24937 in k24934 in k24878 in k24875 in k24872 in k24869 in k24866 in k24863 in k24860 in k24857 in k23555 in k23486 in k23293 in k23290 in k23185 in k23134 in k11783 in k10718 in k10715 in k7274 in k7271 in k6978 in k6975 in k6971 in k6680 in k6677 in k6674 in k6671 */
static void C_ccall f_37376(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[8],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_37376,2,t0,t1);}
if(C_truep(t1)){
t2=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_37384,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],tmp=(C_word)a,a+=4,tmp);
t3=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_37388,a[2]=t2,a[3]=((C_word*)t0)[4],tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 590  loop-finally");
t4=C_retrieve2(lf[539],"loop-finally");
f_26785(3,t4,t3,((C_word*)t0)[2]);}
else{
t2=((C_word*)t0)[3];
f_37169(t2,C_SCHEME_UNDEFINED);}}

/* k37386 in k37374 in k37164 in k37160 in k37157 in k37154 in k37148 in a37431 in k37103 in k36420 in k36417 in k36414 in k36411 in k36408 in k36405 in k36402 in k36399 in k35543 in k35540 in k35537 in k35534 in k35531 in k35528 in k35525 in k35522 in k35519 in k35516 in k35513 in k35510 in k35507 in k35504 in k35501 in k35498 in k35495 in k35492 in k35489 in k35486 in k30217 in k26697 in k26694 in k26691 in k26688 in k26263 in k26260 in k26257 in k26254 in k26251 in k25668 in k25665 in k25142 in k25139 in k25136 in k25133 in k25130 in k25127 in k25124 in k25121 in k25118 in k25115 in k25112 in k25109 in k25106 in k25103 in k25100 in k25097 in k25094 in k25091 in k25088 in k25085 in k25082 in k24943 in k24940 in k24937 in k24934 in k24878 in k24875 in k24872 in k24869 in k24866 in k24863 in k24860 in k24857 in k23555 in k23486 in k23293 in k23290 in k23185 in k23134 in k11783 in k10718 in k10715 in k7274 in k7271 in k6978 in k6975 in k6971 in k6680 in k6677 in k6674 in k6671 */
static void C_ccall f_37388(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[3],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_37388,2,t0,t1);}
t2=(C_word)C_a_i_list(&a,1,((C_word*)((C_word*)t0)[3])[1]);
C_trace("ChickenBridge.scm: 575  ##sys#append");
t3=*((C_word*)lf[7]+1);
((C_proc4)(void*)(*((C_word*)t3+1)))(4,t3,((C_word*)t0)[2],t1,t2);}

/* k37382 in k37374 in k37164 in k37160 in k37157 in k37154 in k37148 in a37431 in k37103 in k36420 in k36417 in k36414 in k36411 in k36408 in k36405 in k36402 in k36399 in k35543 in k35540 in k35537 in k35534 in k35531 in k35528 in k35525 in k35522 in k35519 in k35516 in k35513 in k35510 in k35507 in k35504 in k35501 in k35498 in k35495 in k35492 in k35489 in k35486 in k30217 in k26697 in k26694 in k26691 in k26688 in k26263 in k26260 in k26257 in k26254 in k26251 in k25668 in k25665 in k25142 in k25139 in k25136 in k25133 in k25130 in k25127 in k25124 in k25121 in k25118 in k25115 in k25112 in k25109 in k25106 in k25103 in k25100 in k25097 in k25094 in k25091 in k25088 in k25085 in k25082 in k24943 in k24940 in k24937 in k24934 in k24878 in k24875 in k24872 in k24869 in k24866 in k24863 in k24860 in k24857 in k23555 in k23486 in k23293 in k23290 in k23185 in k23134 in k11783 in k10718 in k10715 in k7274 in k7271 in k6978 in k6975 in k6971 in k6680 in k6677 in k6674 in k6671 */
static void C_ccall f_37384(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[3],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_37384,2,t0,t1);}
t2=(C_word)C_a_i_cons(&a,2,lf[484],t1);
t3=C_mutate(((C_word *)((C_word*)t0)[3])+1,t2);
t4=((C_word*)t0)[2];
f_37169(t4,t3);}

/* k37167 in k37164 in k37160 in k37157 in k37154 in k37148 in a37431 in k37103 in k36420 in k36417 in k36414 in k36411 in k36408 in k36405 in k36402 in k36399 in k35543 in k35540 in k35537 in k35534 in k35531 in k35528 in k35525 in k35522 in k35519 in k35516 in k35513 in k35510 in k35507 in k35504 in k35501 in k35498 in k35495 in k35492 in k35489 in k35486 in k30217 in k26697 in k26694 in k26691 in k26688 in k26263 in k26260 in k26257 in k26254 in k26251 in k25668 in k25665 in k25142 in k25139 in k25136 in k25133 in k25130 in k25127 in k25124 in k25121 in k25118 in k25115 in k25112 in k25109 in k25106 in k25103 in k25100 in k25097 in k25094 in k25091 in k25088 in k25085 in k25082 in k24943 in k24940 in k24937 in k24934 in k24878 in k24875 in k24872 in k24869 in k24866 in k24863 in k24860 in k24857 in k23555 in k23486 in k23293 in k23290 in k23185 in k23134 in k11783 in k10718 in k10715 in k7274 in k7271 in k6978 in k6975 in k6971 in k6680 in k6677 in k6674 in k6671 */
static void C_fcall f_37169(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word ab[25],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_37169,NULL,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|9,a[1]=(C_word)f_37172,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],a[7]=((C_word*)t0)[8],a[8]=((C_word*)t0)[9],a[9]=((C_word*)t0)[10],tmp=(C_word)a,a+=10,tmp);
if(C_truep((C_word)C_i_nullp(((C_word*)((C_word*)t0)[3])[1]))){
t3=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_37362,a[2]=t2,tmp=(C_word)a,a+=3,tmp);
t4=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_37369,a[2]=((C_word*)t0)[2],a[3]=t3,tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 598  loop-looping");
t5=C_retrieve2(lf[536],"loop-looping");
f_26761(3,t5,t4,((C_word*)t0)[4]);}
else{
t3=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_37333,a[2]=t2,a[3]=((C_word*)t0)[2],a[4]=((C_word*)t0)[3],tmp=(C_word)a,a+=5,tmp);
t4=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[3])[1]);
if(C_truep((C_word)C_i_nullp(t4))){
t5=(C_word)C_i_car(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=t3;
f_37333(t7,t6);}
else{
t5=(C_word)C_a_i_cons(&a,2,lf[457],((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=t3;
f_37333(t7,t6);}}}

/* k37331 in k37167 in k37164 in k37160 in k37157 in k37154 in k37148 in a37431 in k37103 in k36420 in k36417 in k36414 in k36411 in k36408 in k36405 in k36402 in k36399 in k35543 in k35540 in k35537 in k35534 in k35531 in k35528 in k35525 in k35522 in k35519 in k35516 in k35513 in k35510 in k35507 in k35504 in k35501 in k35498 in k35495 in k35492 in k35489 in k35486 in k30217 in k26697 in k26694 in k26691 in k26688 in k26263 in k26260 in k26257 in k26254 in k26251 in k25668 in k25665 in k25142 in k25139 in k25136 in k25133 in k25130 in k25127 in k25124 in k25121 in k25118 in k25115 in k25112 in k25109 in k25106 in k25103 in k25100 in k25097 in k25094 in k25091 in k25088 in k25085 in k25082 in k24943 in k24940 in k24937 in k24934 in k24878 in k24875 in k24872 in k24869 in k24866 in k24863 in k24860 in k24857 in k23555 in k23486 in k23293 in k23290 in k23185 in k23134 in k11783 in k10718 in k10715 in k7274 in k7271 in k6978 in k6975 in k6971 in k6680 in k6677 in k6674 in k6671 */
static void C_fcall f_37333(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[12],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_37333,NULL,2,t0,t1);}
t2=(C_word)C_a_i_list(&a,3,lf[20],((C_word*)((C_word*)t0)[4])[1],((C_word*)((C_word*)t0)[3])[1]);
t3=(C_word)C_a_i_list(&a,1,t2);
t4=C_mutate(((C_word *)((C_word*)t0)[4])+1,t3);
t5=((C_word*)t0)[2];
f_37172(2,t5,t4);}

/* k37367 in k37167 in k37164 in k37160 in k37157 in k37154 in k37148 in a37431 in k37103 in k36420 in k36417 in k36414 in k36411 in k36408 in k36405 in k36402 in k36399 in k35543 in k35540 in k35537 in k35534 in k35531 in k35528 in k35525 in k35522 in k35519 in k35516 in k35513 in k35510 in k35507 in k35504 in k35501 in k35498 in k35495 in k35492 in k35489 in k35486 in k30217 in k26697 in k26694 in k26691 in k26688 in k26263 in k26260 in k26257 in k26254 in k26251 in k25668 in k25665 in k25142 in k25139 in k25136 in k25133 in k25130 in k25127 in k25124 in k25121 in k25118 in k25115 in k25112 in k25109 in k25106 in k25103 in k25100 in k25097 in k25094 in k25091 in k25088 in k25085 in k25082 in k24943 in k24940 in k24937 in k24934 in k24878 in k24875 in k24872 in k24869 in k24866 in k24863 in k24860 in k24857 in k23555 in k23486 in k23293 in k23290 in k23185 in k23134 in k11783 in k10718 in k10715 in k7274 in k7271 in k6978 in k6975 in k6971 in k6680 in k6677 in k6674 in k6671 */
static void C_ccall f_37369(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 597  process-code-terminates?");
f_37107(((C_word*)t0)[3],t1,((C_word*)((C_word*)t0)[2])[1]);}

/* k37360 in k37167 in k37164 in k37160 in k37157 in k37154 in k37148 in a37431 in k37103 in k36420 in k36417 in k36414 in k36411 in k36408 in k36405 in k36402 in k36399 in k35543 in k35540 in k35537 in k35534 in k35531 in k35528 in k35525 in k35522 in k35519 in k35516 in k35513 in k35510 in k35507 in k35504 in k35501 in k35498 in k35495 in k35492 in k35489 in k35486 in k30217 in k26697 in k26694 in k26691 in k26688 in k26263 in k26260 in k26257 in k26254 in k26251 in k25668 in k25665 in k25142 in k25139 in k25136 in k25133 in k25130 in k25127 in k25124 in k25121 in k25118 in k25115 in k25112 in k25109 in k25106 in k25103 in k25100 in k25097 in k25094 in k25091 in k25088 in k25085 in k25082 in k24943 in k24940 in k24937 in k24934 in k24878 in k24875 in k24872 in k24869 in k24866 in k24863 in k24860 in k24857 in k23555 in k23486 in k23293 in k23290 in k23185 in k23134 in k11783 in k10718 in k10715 in k7274 in k7271 in k6978 in k6975 in k6971 in k6680 in k6677 in k6674 in k6671 */
static void C_ccall f_37362(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
if(C_truep(t1)){
t2=((C_word*)t0)[2];
f_37172(2,t2,C_SCHEME_UNDEFINED);}
else{
C_trace("ChickenBridge.scm: 599  printf");
t2=C_retrieve(lf[475]);
((C_proc3)C_retrieve_proc(t2))(3,t2,((C_word*)t0)[2],lf[846]);}}

/* k37170 in k37167 in k37164 in k37160 in k37157 in k37154 in k37148 in a37431 in k37103 in k36420 in k36417 in k36414 in k36411 in k36408 in k36405 in k36402 in k36399 in k35543 in k35540 in k35537 in k35534 in k35531 in k35528 in k35525 in k35522 in k35519 in k35516 in k35513 in k35510 in k35507 in k35504 in k35501 in k35498 in k35495 in k35492 in k35489 in k35486 in k30217 in k26697 in k26694 in k26691 in k26688 in k26263 in k26260 in k26257 in k26254 in k26251 in k25668 in k25665 in k25142 in k25139 in k25136 in k25133 in k25130 in k25127 in k25124 in k25121 in k25118 in k25115 in k25112 in k25109 in k25106 in k25103 in k25100 in k25097 in k25094 in k25091 in k25088 in k25085 in k25082 in k24943 in k24940 in k24937 in k24934 in k24878 in k24875 in k24872 in k24869 in k24866 in k24863 in k24860 in k24857 in k23555 in k23486 in k23293 in k23290 in k23185 in k23134 in k11783 in k10718 in k10715 in k7274 in k7271 in k6978 in k6975 in k6971 in k6680 in k6677 in k6674 in k6671 */
static void C_ccall f_37172(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word t14;
C_word t15;
C_word t16;
C_word t17;
C_word t18;
C_word t19;
C_word t20;
C_word ab[117],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_37172,2,t0,t1);}
t2=(C_word)C_a_i_list(&a,1,((C_word*)t0)[9]);
t3=(C_word)C_a_i_list(&a,2,((C_word*)t0)[8],C_fix(0));
t4=(C_word)C_a_i_list(&a,3,lf[839],C_SCHEME_END_OF_LIST,((C_word*)t0)[9]);
t5=(C_word)C_a_i_list(&a,2,lf[840],t4);
t6=(C_word)C_a_i_list(&a,1,lf[841]);
t7=(C_word)C_a_i_list(&a,3,lf[12],((C_word*)t0)[8],lf[841]);
t8=(C_word)C_a_i_list(&a,3,lf[839],t6,t7);
t9=(C_word)C_a_i_list(&a,2,lf[842],t8);
t10=(C_word)C_a_i_list(&a,3,t3,t5,t9);
t11=(C_word)C_a_i_list(&a,1,((C_word*)t0)[7]);
t12=(C_word)C_a_i_list(&a,1,((C_word*)t0)[6]);
t13=(C_word)C_a_i_list(&a,1,lf[843]);
t14=(C_word)C_a_i_list(&a,4,lf[844],((C_word*)t0)[6],t13,lf[845]);
t15=(C_word)C_a_i_list(&a,2,((C_word*)t0)[7],C_fix(-2));
t16=(C_word)C_a_i_list(&a,4,lf[839],t12,t14,t15);
t17=(*a=C_CLOSURE_TYPE|8,a[1]=(C_word)f_37263,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=t2,a[6]=t10,a[7]=t11,a[8]=t16,tmp=(C_word)a,a+=9,tmp);
t18=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_37267,a[2]=((C_word*)t0)[2],a[3]=t17,tmp=(C_word)a,a+=4,tmp);
t19=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_37271,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[8],a[4]=t18,tmp=(C_word)a,a+=5,tmp);
C_trace("ChickenBridge.scm: 618  loop-looping");
t20=C_retrieve2(lf[536],"loop-looping");
f_26761(3,t20,t19,((C_word*)t0)[3]);}

/* k37269 in k37170 in k37167 in k37164 in k37160 in k37157 in k37154 in k37148 in a37431 in k37103 in k36420 in k36417 in k36414 in k36411 in k36408 in k36405 in k36402 in k36399 in k35543 in k35540 in k35537 in k35534 in k35531 in k35528 in k35525 in k35522 in k35519 in k35516 in k35513 in k35510 in k35507 in k35504 in k35501 in k35498 in k35495 in k35492 in k35489 in k35486 in k30217 in k26697 in k26694 in k26691 in k26688 in k26263 in k26260 in k26257 in k26254 in k26251 in k25668 in k25665 in k25142 in k25139 in k25136 in k25133 in k25130 in k25127 in k25124 in k25121 in k25118 in k25115 in k25112 in k25109 in k25106 in k25103 in k25100 in k25097 in k25094 in k25091 in k25088 in k25085 in k25082 in k24943 in k24940 in k24937 in k24934 in k24878 in k24875 in k24872 in k24869 in k24866 in k24863 in k24860 in k24857 in k23555 in k23486 in k23293 in k23290 in k23185 in k23134 in k11783 in k10718 in k10715 in k7274 in k7271 in k6978 in k6975 in k6971 in k6680 in k6677 in k6674 in k6671 */
static void C_ccall f_37271(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[8],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_37271,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_37275,a[2]=t1,a[3]=((C_word*)t0)[4],tmp=(C_word)a,a+=4,tmp);
t3=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_37279,a[2]=t2,a[3]=((C_word*)t0)[3],tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 619  loop-stepping");
t4=C_retrieve2(lf[538],"loop-stepping");
f_26773(3,t4,t3,((C_word*)t0)[2]);}

/* k37277 in k37269 in k37170 in k37167 in k37164 in k37160 in k37157 in k37154 in k37148 in a37431 in k37103 in k36420 in k36417 in k36414 in k36411 in k36408 in k36405 in k36402 in k36399 in k35543 in k35540 in k35537 in k35534 in k35531 in k35528 in k35525 in k35522 in k35519 in k35516 in k35513 in k35510 in k35507 in k35504 in k35501 in k35498 in k35495 in k35492 in k35489 in k35486 in k30217 in k26697 in k26694 in k26691 in k26688 in k26263 in k26260 in k26257 in k26254 in k26251 in k25668 in k25665 in k25142 in k25139 in k25136 in k25133 in k25130 in k25127 in k25124 in k25121 in k25118 in k25115 in k25112 in k25109 in k25106 in k25103 in k25100 in k25097 in k25094 in k25091 in k25088 in k25085 in k25082 in k24943 in k24940 in k24937 in k24934 in k24878 in k24875 in k24872 in k24869 in k24866 in k24863 in k24860 in k24857 in k23555 in k23486 in k23293 in k23290 in k23185 in k23134 in k11783 in k10718 in k10715 in k7274 in k7271 in k6978 in k6975 in k6971 in k6680 in k6677 in k6674 in k6671 */
static void C_ccall f_37279(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[3],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_37279,2,t0,t1);}
t2=(C_word)C_a_i_list(&a,1,((C_word*)t0)[3]);
C_trace("ChickenBridge.scm: 575  ##sys#append");
t3=*((C_word*)lf[7]+1);
((C_proc4)(void*)(*((C_word*)t3+1)))(4,t3,((C_word*)t0)[2],t1,t2);}

/* k37273 in k37269 in k37170 in k37167 in k37164 in k37160 in k37157 in k37154 in k37148 in a37431 in k37103 in k36420 in k36417 in k36414 in k36411 in k36408 in k36405 in k36402 in k36399 in k35543 in k35540 in k35537 in k35534 in k35531 in k35528 in k35525 in k35522 in k35519 in k35516 in k35513 in k35510 in k35507 in k35504 in k35501 in k35498 in k35495 in k35492 in k35489 in k35486 in k30217 in k26697 in k26694 in k26691 in k26688 in k26263 in k26260 in k26257 in k26254 in k26251 in k25668 in k25665 in k25142 in k25139 in k25136 in k25133 in k25130 in k25127 in k25124 in k25121 in k25118 in k25115 in k25112 in k25109 in k25106 in k25103 in k25100 in k25097 in k25094 in k25091 in k25088 in k25085 in k25082 in k24943 in k24940 in k24937 in k24934 in k24878 in k24875 in k24872 in k24869 in k24866 in k24863 in k24860 in k24857 in k23555 in k23486 in k23293 in k23290 in k23185 in k23134 in k11783 in k10718 in k10715 in k7274 in k7271 in k6978 in k6975 in k6971 in k6680 in k6677 in k6674 in k6671 */
static void C_ccall f_37275(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 575  ##sys#append");
t2=*((C_word*)lf[7]+1);
((C_proc4)(void*)(*((C_word*)t2+1)))(4,t2,((C_word*)t0)[3],((C_word*)t0)[2],t1);}

/* k37265 in k37170 in k37167 in k37164 in k37160 in k37157 in k37154 in k37148 in a37431 in k37103 in k36420 in k36417 in k36414 in k36411 in k36408 in k36405 in k36402 in k36399 in k35543 in k35540 in k35537 in k35534 in k35531 in k35528 in k35525 in k35522 in k35519 in k35516 in k35513 in k35510 in k35507 in k35504 in k35501 in k35498 in k35495 in k35492 in k35489 in k35486 in k30217 in k26697 in k26694 in k26691 in k26688 in k26263 in k26260 in k26257 in k26254 in k26251 in k25668 in k25665 in k25142 in k25139 in k25136 in k25133 in k25130 in k25127 in k25124 in k25121 in k25118 in k25115 in k25112 in k25109 in k25106 in k25103 in k25100 in k25097 in k25094 in k25091 in k25088 in k25085 in k25082 in k24943 in k24940 in k24937 in k24934 in k24878 in k24875 in k24872 in k24869 in k24866 in k24863 in k24860 in k24857 in k23555 in k23486 in k23293 in k23290 in k23185 in k23134 in k11783 in k10718 in k10715 in k7274 in k7271 in k6978 in k6975 in k6971 in k6680 in k6677 in k6674 in k6671 */
static void C_ccall f_37267(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 575  ##sys#append");
t2=*((C_word*)lf[7]+1);
((C_proc4)(void*)(*((C_word*)t2+1)))(4,t2,((C_word*)t0)[3],((C_word*)((C_word*)t0)[2])[1],t1);}

/* k37261 in k37170 in k37167 in k37164 in k37160 in k37157 in k37154 in k37148 in a37431 in k37103 in k36420 in k36417 in k36414 in k36411 in k36408 in k36405 in k36402 in k36399 in k35543 in k35540 in k35537 in k35534 in k35531 in k35528 in k35525 in k35522 in k35519 in k35516 in k35513 in k35510 in k35507 in k35504 in k35501 in k35498 in k35495 in k35492 in k35489 in k35486 in k30217 in k26697 in k26694 in k26691 in k26688 in k26263 in k26260 in k26257 in k26254 in k26251 in k25668 in k25665 in k25142 in k25139 in k25136 in k25133 in k25130 in k25127 in k25124 in k25121 in k25118 in k25115 in k25112 in k25109 in k25106 in k25103 in k25100 in k25097 in k25094 in k25091 in k25088 in k25085 in k25082 in k24943 in k24940 in k24937 in k24934 in k24878 in k24875 in k24872 in k24869 in k24866 in k24863 in k24860 in k24857 in k23555 in k23486 in k23293 in k23290 in k23185 in k23134 in k11783 in k10718 in k10715 in k7274 in k7271 in k6978 in k6975 in k6971 in k6680 in k6677 in k6674 in k6671 */
static void C_ccall f_37263(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word ab[57],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_37263,2,t0,t1);}
t2=(C_word)C_a_i_cons(&a,2,C_SCHEME_END_OF_LIST,t1);
t3=(C_word)C_a_i_cons(&a,2,lf[839],t2);
t4=(C_word)C_a_i_list(&a,3,lf[778],((C_word*)t0)[8],t3);
t5=(C_word)C_a_i_list(&a,3,lf[839],((C_word*)t0)[7],t4);
t6=(C_word)C_a_i_list(&a,2,lf[779],t5);
t7=(C_word)C_a_i_list(&a,3,lf[2],((C_word*)t0)[6],t6);
t8=(C_word)C_a_i_list(&a,3,lf[839],((C_word*)t0)[5],t7);
t9=C_mutate(((C_word *)((C_word*)t0)[4])+1,t8);
t10=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_37182,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[3],tmp=(C_word)a,a+=5,tmp);
t11=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_37219,a[2]=((C_word*)t0)[2],a[3]=t10,tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 623  loop-bindings");
t12=C_retrieve2(lf[532],"loop-bindings");
f_26713(3,t12,t11,((C_word*)t0)[2]);}

/* k37217 in k37261 in k37170 in k37167 in k37164 in k37160 in k37157 in k37154 in k37148 in a37431 in k37103 in k36420 in k36417 in k36414 in k36411 in k36408 in k36405 in k36402 in k36399 in k35543 in k35540 in k35537 in k35534 in k35531 in k35528 in k35525 in k35522 in k35519 in k35516 in k35513 in k35510 in k35507 in k35504 in k35501 in k35498 in k35495 in k35492 in k35489 in k35486 in k30217 in k26697 in k26694 in k26691 in k26688 in k26263 in k26260 in k26257 in k26254 in k26251 in k25668 in k25665 in k25142 in k25139 in k25136 in k25133 in k25130 in k25127 in k25124 in k25121 in k25118 in k25115 in k25112 in k25109 in k25106 in k25103 in k25100 in k25097 in k25094 in k25091 in k25088 in k25085 in k25082 in k24943 in k24940 in k24937 in k24934 in k24878 in k24875 in k24872 in k24869 in k24866 in k24863 in k24860 in k24857 in k23555 in k23486 in k23293 in k23290 in k23185 in k23134 in k11783 in k10718 in k10715 in k7274 in k7271 in k6978 in k6975 in k6971 in k6680 in k6677 in k6674 in k6671 */
static void C_ccall f_37219(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[3],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_37219,2,t0,t1);}
if(C_truep((C_word)C_i_nullp(t1))){
t2=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_37215,a[2]=((C_word*)t0)[3],tmp=(C_word)a,a+=3,tmp);
C_trace("ChickenBridge.scm: 624  loop-initially");
t3=C_retrieve2(lf[534],"loop-initially");
f_26737(3,t3,t2,((C_word*)t0)[2]);}
else{
t2=((C_word*)t0)[3];
f_37182(t2,C_SCHEME_FALSE);}}

/* k37213 in k37217 in k37261 in k37170 in k37167 in k37164 in k37160 in k37157 in k37154 in k37148 in a37431 in k37103 in k36420 in k36417 in k36414 in k36411 in k36408 in k36405 in k36402 in k36399 in k35543 in k35540 in k35537 in k35534 in k35531 in k35528 in k35525 in k35522 in k35519 in k35516 in k35513 in k35510 in k35507 in k35504 in k35501 in k35498 in k35495 in k35492 in k35489 in k35486 in k30217 in k26697 in k26694 in k26691 in k26688 in k26263 in k26260 in k26257 in k26254 in k26251 in k25668 in k25665 in k25142 in k25139 in k25136 in k25133 in k25130 in k25127 in k25124 in k25121 in k25118 in k25115 in k25112 in k25109 in k25106 in k25103 in k25100 in k25097 in k25094 in k25091 in k25088 in k25085 in k25082 in k24943 in k24940 in k24937 in k24934 in k24878 in k24875 in k24872 in k24869 in k24866 in k24863 in k24860 in k24857 in k23555 in k23486 in k23293 in k23290 in k23185 in k23134 in k11783 in k10718 in k10715 in k7274 in k7271 in k6978 in k6975 in k6971 in k6680 in k6677 in k6674 in k6671 */
static void C_ccall f_37215(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
t2=((C_word*)t0)[2];
f_37182(t2,(C_word)C_i_nullp(t1));}

/* k37180 in k37261 in k37170 in k37167 in k37164 in k37160 in k37157 in k37154 in k37148 in a37431 in k37103 in k36420 in k36417 in k36414 in k36411 in k36408 in k36405 in k36402 in k36399 in k35543 in k35540 in k35537 in k35534 in k35531 in k35528 in k35525 in k35522 in k35519 in k35516 in k35513 in k35510 in k35507 in k35504 in k35501 in k35498 in k35495 in k35492 in k35489 in k35486 in k30217 in k26697 in k26694 in k26691 in k26688 in k26263 in k26260 in k26257 in k26254 in k26251 in k25668 in k25665 in k25142 in k25139 in k25136 in k25133 in k25130 in k25127 in k25124 in k25121 in k25118 in k25115 in k25112 in k25109 in k25106 in k25103 in k25100 in k25097 in k25094 in k25091 in k25088 in k25085 in k25082 in k24943 in k24940 in k24937 in k24934 in k24878 in k24875 in k24872 in k24869 in k24866 in k24863 in k24860 in k24857 in k23555 in k23486 in k23293 in k23290 in k23185 in k23134 in k11783 in k10718 in k10715 in k7274 in k7271 in k6978 in k6975 in k6971 in k6680 in k6677 in k6674 in k6671 */
static void C_fcall f_37182(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[5],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_37182,NULL,2,t0,t1);}
if(C_truep(t1)){
t2=((C_word*)t0)[4];
((C_proc2)(void*)(*((C_word*)t2+1)))(2,t2,((C_word*)((C_word*)t0)[3])[1]);}
else{
t2=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_37193,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],tmp=(C_word)a,a+=5,tmp);
C_trace("ChickenBridge.scm: 627  loop-bindings");
t3=C_retrieve2(lf[532],"loop-bindings");
f_26713(3,t3,t2,((C_word*)t0)[2]);}}

/* k37191 in k37180 in k37261 in k37170 in k37167 in k37164 in k37160 in k37157 in k37154 in k37148 in a37431 in k37103 in k36420 in k36417 in k36414 in k36411 in k36408 in k36405 in k36402 in k36399 in k35543 in k35540 in k35537 in k35534 in k35531 in k35528 in k35525 in k35522 in k35519 in k35516 in k35513 in k35510 in k35507 in k35504 in k35501 in k35498 in k35495 in k35492 in k35489 in k35486 in k30217 in k26697 in k26694 in k26691 in k26688 in k26263 in k26260 in k26257 in k26254 in k26251 in k25668 in k25665 in k25142 in k25139 in k25136 in k25133 in k25130 in k25127 in k25124 in k25121 in k25118 in k25115 in k25112 in k25109 in k25106 in k25103 in k25100 in k25097 in k25094 in k25091 in k25088 in k25085 in k25082 in k24943 in k24940 in k24937 in k24934 in k24878 in k24875 in k24872 in k24869 in k24866 in k24863 in k24860 in k24857 in k23555 in k23486 in k23293 in k23290 in k23185 in k23134 in k11783 in k10718 in k10715 in k7274 in k7271 in k6978 in k6975 in k6971 in k6680 in k6677 in k6674 in k6671 */
static void C_ccall f_37193(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[8],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_37193,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_37197,a[2]=((C_word*)t0)[4],a[3]=t1,tmp=(C_word)a,a+=4,tmp);
t3=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_37201,a[2]=t2,a[3]=((C_word*)t0)[3],tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 628  loop-initially");
t4=C_retrieve2(lf[534],"loop-initially");
f_26737(3,t4,t3,((C_word*)t0)[2]);}

/* k37199 in k37191 in k37180 in k37261 in k37170 in k37167 in k37164 in k37160 in k37157 in k37154 in k37148 in a37431 in k37103 in k36420 in k36417 in k36414 in k36411 in k36408 in k36405 in k36402 in k36399 in k35543 in k35540 in k35537 in k35534 in k35531 in k35528 in k35525 in k35522 in k35519 in k35516 in k35513 in k35510 in k35507 in k35504 in k35501 in k35498 in k35495 in k35492 in k35489 in k35486 in k30217 in k26697 in k26694 in k26691 in k26688 in k26263 in k26260 in k26257 in k26254 in k26251 in k25668 in k25665 in k25142 in k25139 in k25136 in k25133 in k25130 in k25127 in k25124 in k25121 in k25118 in k25115 in k25112 in k25109 in k25106 in k25103 in k25100 in k25097 in k25094 in k25091 in k25088 in k25085 in k25082 in k24943 in k24940 in k24937 in k24934 in k24878 in k24875 in k24872 in k24869 in k24866 in k24863 in k24860 in k24857 in k23555 in k23486 in k23293 in k23290 in k23185 in k23134 in k11783 in k10718 in k10715 in k7274 in k7271 in k6978 in k6975 in k6971 in k6680 in k6677 in k6674 in k6671 */
static void C_ccall f_37201(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[3],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_37201,2,t0,t1);}
t2=(C_word)C_a_i_list(&a,1,((C_word*)((C_word*)t0)[3])[1]);
C_trace("ChickenBridge.scm: 575  ##sys#append");
t3=*((C_word*)lf[7]+1);
((C_proc4)(void*)(*((C_word*)t3+1)))(4,t3,((C_word*)t0)[2],t1,t2);}

/* k37195 in k37191 in k37180 in k37261 in k37170 in k37167 in k37164 in k37160 in k37157 in k37154 in k37148 in a37431 in k37103 in k36420 in k36417 in k36414 in k36411 in k36408 in k36405 in k36402 in k36399 in k35543 in k35540 in k35537 in k35534 in k35531 in k35528 in k35525 in k35522 in k35519 in k35516 in k35513 in k35510 in k35507 in k35504 in k35501 in k35498 in k35495 in k35492 in k35489 in k35486 in k30217 in k26697 in k26694 in k26691 in k26688 in k26263 in k26260 in k26257 in k26254 in k26251 in k25668 in k25665 in k25142 in k25139 in k25136 in k25133 in k25130 in k25127 in k25124 in k25121 in k25118 in k25115 in k25112 in k25109 in k25106 in k25103 in k25100 in k25097 in k25094 in k25091 in k25088 in k25085 in k25082 in k24943 in k24940 in k24937 in k24934 in k24878 in k24875 in k24872 in k24869 in k24866 in k24863 in k24860 in k24857 in k23555 in k23486 in k23293 in k23290 in k23185 in k23134 in k11783 in k10718 in k10715 in k7274 in k7271 in k6978 in k6975 in k6971 in k6680 in k6677 in k6674 in k6671 */
static void C_ccall f_37197(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[6],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_37197,2,t0,t1);}
t2=(C_word)C_a_i_cons(&a,2,((C_word*)t0)[3],t1);
t3=((C_word*)t0)[2];
((C_proc2)(void*)(*((C_word*)t3+1)))(2,t3,(C_word)C_a_i_cons(&a,2,lf[2],t2));}

/* k37393 in k37103 in k36420 in k36417 in k36414 in k36411 in k36408 in k36405 in k36402 in k36399 in k35543 in k35540 in k35537 in k35534 in k35531 in k35528 in k35525 in k35522 in k35519 in k35516 in k35513 in k35510 in k35507 in k35504 in k35501 in k35498 in k35495 in k35492 in k35489 in k35486 in k30217 in k26697 in k26694 in k26691 in k26688 in k26263 in k26260 in k26257 in k26254 in k26251 in k25668 in k25665 in k25142 in k25139 in k25136 in k25133 in k25130 in k25127 in k25124 in k25121 in k25118 in k25115 in k25112 in k25109 in k25106 in k25103 in k25100 in k25097 in k25094 in k25091 in k25088 in k25085 in k25082 in k24943 in k24940 in k24937 in k24934 in k24878 in k24875 in k24872 in k24869 in k24866 in k24863 in k24860 in k24857 in k23555 in k23486 in k23293 in k23290 in k23185 in k23134 in k11783 in k10718 in k10715 in k7274 in k7271 in k6978 in k6975 in k6971 in k6680 in k6677 in k6674 in k6671 */
static void C_ccall f_37395(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[6],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_37395,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_37398,a[2]=((C_word*)t0)[2],tmp=(C_word)a,a+=3,tmp);
t3=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_37403,a[2]=((C_word)li623),tmp=(C_word)a,a+=3,tmp);
C_trace("ChickenBridge.scm: 634  ##sys#register-macro");
t4=C_retrieve(lf[837]);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[838],t3);}

/* a37402 in k37393 in k37103 in k36420 in k36417 in k36414 in k36411 in k36408 in k36405 in k36402 in k36399 in k35543 in k35540 in k35537 in k35534 in k35531 in k35528 in k35525 in k35522 in k35519 in k35516 in k35513 in k35510 in k35507 in k35504 in k35501 in k35498 in k35495 in k35492 in k35489 in k35486 in k30217 in k26697 in k26694 in k26691 in k26688 in k26263 in k26260 in k26257 in k26254 in k26251 in k25668 in k25665 in k25142 in k25139 in k25136 in k25133 in k25130 in k25127 in k25124 in k25121 in k25118 in k25115 in k25112 in k25109 in k25106 in k25103 in k25100 in k25097 in k25094 in k25091 in k25088 in k25085 in k25082 in k24943 in k24940 in k24937 in k24934 in k24878 in k24875 in k24872 in k24869 in k24866 in k24863 in k24860 in k24857 in k23555 in k23486 in k23293 in k23290 in k23185 in k23134 in k11783 in k10718 in k10715 in k7274 in k7271 in k6978 in k6975 in k6971 in k6680 in k6677 in k6674 in k6671 */
static void C_ccall f_37403(C_word c,C_word t0,C_word t1,C_word t2,...){
C_word tmp;
C_word t3;
va_list v;
C_word *a,c2=c;
C_save_rest(t2,c2,3);
if(c<3) C_bad_min_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_demand(c*C_SIZEOF_PAIR+9)){
C_save_and_reclaim((void*)tr3r,(void*)f_37403r,3,t0,t1,t2);}
else{
a=C_alloc((c-3)*3);
t3=C_restore_rest(a,C_rest_count(0));
f_37403r(t0,t1,t2,t3);}}

static void C_ccall f_37403r(C_word t0,C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a=C_alloc(9);
t4=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_37407,a[2]=t1,a[3]=t3,a[4]=t2,tmp=(C_word)a,a+=5,tmp);
t5=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_37417,a[2]=t2,a[3]=t4,tmp=(C_word)a,a+=4,tmp);
if(C_truep((C_word)C_i_pairp(t2))){
t6=(C_word)C_i_car(t2);
t7=t5;
f_37417(t7,(C_word)C_i_symbolp(t6));}
else{
t6=t5;
f_37417(t6,C_SCHEME_FALSE);}}

/* k37415 in a37402 in k37393 in k37103 in k36420 in k36417 in k36414 in k36411 in k36408 in k36405 in k36402 in k36399 in k35543 in k35540 in k35537 in k35534 in k35531 in k35528 in k35525 in k35522 in k35519 in k35516 in k35513 in k35510 in k35507 in k35504 in k35501 in k35498 in k35495 in k35492 in k35489 in k35486 in k30217 in k26697 in k26694 in k26691 in k26688 in k26263 in k26260 in k26257 in k26254 in k26251 in k25668 in k25665 in k25142 in k25139 in k25136 in k25133 in k25130 in k25127 in k25124 in k25121 in k25118 in k25115 in k25112 in k25109 in k25106 in k25103 in k25100 in k25097 in k25094 in k25091 in k25088 in k25085 in k25082 in k24943 in k24940 in k24937 in k24934 in k24878 in k24875 in k24872 in k24869 in k24866 in k24863 in k24860 in k24857 in k23555 in k23486 in k23293 in k23290 in k23185 in k23134 in k11783 in k10718 in k10715 in k7274 in k7271 in k6978 in k6975 in k6971 in k6680 in k6677 in k6674 in k6671 */
static void C_fcall f_37417(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
if(C_truep(t1)){
t2=((C_word*)t0)[3];
f_37407(2,t2,C_SCHEME_UNDEFINED);}
else{
C_trace("ChickenBridge.scm: 636  error");
t2=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t2))(4,t2,((C_word*)t0)[3],lf[836],((C_word*)t0)[2]);}}

/* k37405 in a37402 in k37393 in k37103 in k36420 in k36417 in k36414 in k36411 in k36408 in k36405 in k36402 in k36399 in k35543 in k35540 in k35537 in k35534 in k35531 in k35528 in k35525 in k35522 in k35519 in k35516 in k35513 in k35510 in k35507 in k35504 in k35501 in k35498 in k35495 in k35492 in k35489 in k35486 in k30217 in k26697 in k26694 in k26691 in k26688 in k26263 in k26260 in k26257 in k26254 in k26251 in k25668 in k25665 in k25142 in k25139 in k25136 in k25133 in k25130 in k25127 in k25124 in k25121 in k25118 in k25115 in k25112 in k25109 in k25106 in k25103 in k25100 in k25097 in k25094 in k25091 in k25088 in k25085 in k25082 in k24943 in k24940 in k24937 in k24934 in k24878 in k24875 in k24872 in k24869 in k24866 in k24863 in k24860 in k24857 in k23555 in k23486 in k23293 in k23290 in k23185 in k23134 in k11783 in k10718 in k10715 in k7274 in k7271 in k6978 in k6975 in k6971 in k6680 in k6677 in k6674 in k6671 */
static void C_ccall f_37407(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[6],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_37407,2,t0,t1);}
t2=(C_word)C_a_i_cons(&a,2,((C_word*)t0)[4],((C_word*)t0)[3]);
t3=((C_word*)t0)[2];
((C_proc2)(void*)(*((C_word*)t3+1)))(2,t3,(C_word)C_a_i_cons(&a,2,lf[835],t2));}

/* k37396 in k37393 in k37103 in k36420 in k36417 in k36414 in k36411 in k36408 in k36405 in k36402 in k36399 in k35543 in k35540 in k35537 in k35534 in k35531 in k35528 in k35525 in k35522 in k35519 in k35516 in k35513 in k35510 in k35507 in k35504 in k35501 in k35498 in k35495 in k35492 in k35489 in k35486 in k30217 in k26697 in k26694 in k26691 in k26688 in k26263 in k26260 in k26257 in k26254 in k26251 in k25668 in k25665 in k25142 in k25139 in k25136 in k25133 in k25130 in k25127 in k25124 in k25121 in k25118 in k25115 in k25112 in k25109 in k25106 in k25103 in k25100 in k25097 in k25094 in k25091 in k25088 in k25085 in k25082 in k24943 in k24940 in k24937 in k24934 in k24878 in k24875 in k24872 in k24869 in k24866 in k24863 in k24860 in k24857 in k23555 in k23486 in k23293 in k23290 in k23185 in k23134 in k11783 in k10718 in k10715 in k7274 in k7271 in k6978 in k6975 in k6971 in k6680 in k6677 in k6674 in k6671 */
static void C_ccall f_37398(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[3],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_37398,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_37401,a[2]=((C_word*)t0)[2],tmp=(C_word)a,a+=3,tmp);
C_trace("ChickenBridge.scm: 743  return-to-host");
t3=C_retrieve(lf[834]);
((C_proc2)C_retrieve_proc(t3))(2,t3,t2);}

/* k37399 in k37396 in k37393 in k37103 in k36420 in k36417 in k36414 in k36411 in k36408 in k36405 in k36402 in k36399 in k35543 in k35540 in k35537 in k35534 in k35531 in k35528 in k35525 in k35522 in k35519 in k35516 in k35513 in k35510 in k35507 in k35504 in k35501 in k35498 in k35495 in k35492 in k35489 in k35486 in k30217 in k26697 in k26694 in k26691 in k26688 in k26263 in k26260 in k26257 in k26254 in k26251 in k25668 in k25665 in k25142 in k25139 in k25136 in k25133 in k25130 in k25127 in k25124 in k25121 in k25118 in k25115 in k25112 in k25109 in k25106 in k25103 in k25100 in k25097 in k25094 in k25091 in k25088 in k25085 in k25082 in k24943 in k24940 in k24937 in k24934 in k24878 in k24875 in k24872 in k24869 in k24866 in k24863 in k24860 in k24857 in k23555 in k23486 in k23293 in k23290 in k23185 in k23134 in k11783 in k10718 in k10715 in k7274 in k7271 in k6978 in k6975 in k6971 in k6680 in k6677 in k6674 in k6671 */
static void C_ccall f_37401(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
t2=((C_word*)t0)[2];
((C_proc2)(void*)(*((C_word*)t2+1)))(2,t2,C_SCHEME_UNDEFINED);}

/* process-code-terminates? in k37103 in k36420 in k36417 in k36414 in k36411 in k36408 in k36405 in k36402 in k36399 in k35543 in k35540 in k35537 in k35534 in k35531 in k35528 in k35525 in k35522 in k35519 in k35516 in k35513 in k35510 in k35507 in k35504 in k35501 in k35498 in k35495 in k35492 in k35489 in k35486 in k30217 in k26697 in k26694 in k26691 in k26688 in k26263 in k26260 in k26257 in k26254 in k26251 in k25668 in k25665 in k25142 in k25139 in k25136 in k25133 in k25130 in k25127 in k25124 in k25121 in k25118 in k25115 in k25112 in k25109 in k25106 in k25103 in k25100 in k25097 in k25094 in k25091 in k25088 in k25085 in k25082 in k24943 in k24940 in k24937 in k24934 in k24878 in k24875 in k24872 in k24869 in k24866 in k24863 in k24860 in k24857 in k23555 in k23486 in k23293 in k23290 in k23185 in k23134 in k11783 in k10718 in k10715 in k7274 in k7271 in k6978 in k6975 in k6971 in k6680 in k6677 in k6674 in k6671 */
static void C_fcall f_37107(C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word *a;
loop:
a=C_alloc(5);
C_check_for_interrupt;
if(!C_stack_probe(a)){
C_save_and_reclaim((void*)trf_37107,NULL,3,t1,t2,t3);}
if(C_truep((C_word)C_i_nullp(t2))){
t4=t1;
((C_proc2)(void*)(*((C_word*)t4+1)))(2,t4,C_SCHEME_FALSE);}
else{
if(C_truep((C_word)C_i_pairp(t2))){
t4=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_37123,a[2]=t3,a[3]=t2,a[4]=t1,tmp=(C_word)a,a+=5,tmp);
t5=(C_word)C_i_car(t2);
C_trace("ChickenBridge.scm: 571  process-code-terminates?");
t8=t4;
t9=t5;
t10=t3;
t1=t8;
t2=t9;
t3=t10;
goto loop;}
else{
t4=(C_word)C_i_car(t3);
t5=t1;
((C_proc2)(void*)(*((C_word*)t5+1)))(2,t5,(C_word)C_eqp(t2,t4));}}}

/* k37121 in process-code-terminates? in k37103 in k36420 in k36417 in k36414 in k36411 in k36408 in k36405 in k36402 in k36399 in k35543 in k35540 in k35537 in k35534 in k35531 in k35528 in k35525 in k35522 in k35519 in k35516 in k35513 in k35510 in k35507 in k35504 in k35501 in k35498 in k35495 in k35492 in k35489 in k35486 in k30217 in k26697 in k26694 in k26691 in k26688 in k26263 in k26260 in k26257 in k26254 in k26251 in k25668 in k25665 in k25142 in k25139 in k25136 in k25133 in k25130 in k25127 in k25124 in k25121 in k25118 in k25115 in k25112 in k25109 in k25106 in k25103 in k25100 in k25097 in k25094 in k25091 in k25088 in k25085 in k25082 in k24943 in k24940 in k24937 in k24934 in k24878 in k24875 in k24872 in k24869 in k24866 in k24863 in k24860 in k24857 in k23555 in k23486 in k23293 in k23290 in k23185 in k23134 in k11783 in k10718 in k10715 in k7274 in k7271 in k6978 in k6975 in k6971 in k6680 in k6677 in k6674 in k6671 */
static void C_ccall f_37123(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word *a;
if(C_truep(t1)){
t2=((C_word*)t0)[4];
((C_proc2)(void*)(*((C_word*)t2+1)))(2,t2,t1);}
else{
t2=(C_word)C_i_cdr(((C_word*)t0)[3]);
C_trace("ChickenBridge.scm: 572  process-code-terminates?");
f_37107(((C_word*)t0)[4],t2,((C_word*)t0)[2]);}}

/* run-while-until in k36420 in k36417 in k36414 in k36411 in k36408 in k36405 in k36402 in k36399 in k35543 in k35540 in k35537 in k35534 in k35531 in k35528 in k35525 in k35522 in k35519 in k35516 in k35513 in k35510 in k35507 in k35504 in k35501 in k35498 in k35495 in k35492 in k35489 in k35486 in k30217 in k26697 in k26694 in k26691 in k26688 in k26263 in k26260 in k26257 in k26254 in k26251 in k25668 in k25665 in k25142 in k25139 in k25136 in k25133 in k25130 in k25127 in k25124 in k25121 in k25118 in k25115 in k25112 in k25109 in k25106 in k25103 in k25100 in k25097 in k25094 in k25091 in k25088 in k25085 in k25082 in k24943 in k24940 in k24937 in k24934 in k24878 in k24875 in k24872 in k24869 in k24866 in k24863 in k24860 in k24857 in k23555 in k23486 in k23293 in k23290 in k23185 in k23134 in k11783 in k10718 in k10715 in k7274 in k7271 in k6978 in k6975 in k6971 in k6680 in k6677 in k6674 in k6671 */
static void C_ccall f_37034(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4){
C_word tmp;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word ab[19],*a=ab;
if(c!=5) C_bad_argc_2(c,5,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr5,(void*)f_37034,5,t0,t1,t2,t3,t4);}
t5=(*a=C_VECTOR_TYPE|1,a[1]=t2,tmp=(C_word)a,a+=2,tmp);
t6=((C_word*)t5)[1];
t7=(C_word)C_i_car(((C_word*)t5)[1]);
t8=(C_word)C_i_cdr(((C_word*)t5)[1]);
t9=C_set_block_item(t5,0,t8);
t10=C_SCHEME_FALSE;
t11=(*a=C_VECTOR_TYPE|1,a[1]=t10,tmp=(C_word)a,a+=2,tmp);
t12=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_37045,a[2]=t7,a[3]=t11,a[4]=t5,a[5]=t1,tmp=(C_word)a,a+=6,tmp);
if(C_truep((C_word)C_i_nullp(((C_word*)t5)[1]))){
C_trace("ChickenBridge.scm: 539  loop-error");
f_27049(t12,t4,t6,(C_word)C_a_i_list(&a,3,lf[830],t7,lf[831]));}
else{
t13=t12;
f_37045(2,t13,C_SCHEME_UNDEFINED);}}

/* k37043 in run-while-until in k36420 in k36417 in k36414 in k36411 in k36408 in k36405 in k36402 in k36399 in k35543 in k35540 in k35537 in k35534 in k35531 in k35528 in k35525 in k35522 in k35519 in k35516 in k35513 in k35510 in k35507 in k35504 in k35501 in k35498 in k35495 in k35492 in k35489 in k35486 in k30217 in k26697 in k26694 in k26691 in k26688 in k26263 in k26260 in k26257 in k26254 in k26251 in k25668 in k25665 in k25142 in k25139 in k25136 in k25133 in k25130 in k25127 in k25124 in k25121 in k25118 in k25115 in k25112 in k25109 in k25106 in k25103 in k25100 in k25097 in k25094 in k25091 in k25088 in k25085 in k25082 in k24943 in k24940 in k24937 in k24934 in k24878 in k24875 in k24872 in k24869 in k24866 in k24863 in k24860 in k24857 in k23555 in k23486 in k23293 in k23290 in k23185 in k23134 in k11783 in k10718 in k10715 in k7274 in k7271 in k6978 in k6975 in k6971 in k6680 in k6677 in k6674 in k6671 */
static void C_ccall f_37045(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word t14;
C_word ab[12],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_37045,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_37048,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],tmp=(C_word)a,a+=6,tmp);
t3=(C_word)C_eqp(((C_word*)t0)[2],lf[686]);
if(C_truep(t3)){
t4=(C_word)C_i_car(((C_word*)((C_word*)t0)[4])[1]);
t5=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[4])+1,t5);
t7=C_mutate(((C_word *)((C_word*)t0)[3])+1,t4);
t8=t2;
f_37048(t8,t7);}
else{
t4=(C_word)C_eqp(((C_word*)t0)[2],lf[687]);
if(C_truep(t4)){
t5=(C_word)C_i_car(((C_word*)((C_word*)t0)[4])[1]);
t6=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
t7=C_mutate(((C_word *)((C_word*)t0)[4])+1,t6);
t8=(C_word)C_a_i_list(&a,2,lf[458],t5);
t9=C_mutate(((C_word *)((C_word*)t0)[3])+1,t8);
t10=t2;
f_37048(t10,t9);}
else{
t5=t2;
f_37048(t5,C_SCHEME_UNDEFINED);}}}

/* k37046 in k37043 in run-while-until in k36420 in k36417 in k36414 in k36411 in k36408 in k36405 in k36402 in k36399 in k35543 in k35540 in k35537 in k35534 in k35531 in k35528 in k35525 in k35522 in k35519 in k35516 in k35513 in k35510 in k35507 in k35504 in k35501 in k35498 in k35495 in k35492 in k35489 in k35486 in k30217 in k26697 in k26694 in k26691 in k26688 in k26263 in k26260 in k26257 in k26254 in k26251 in k25668 in k25665 in k25142 in k25139 in k25136 in k25133 in k25130 in k25127 in k25124 in k25121 in k25118 in k25115 in k25112 in k25109 in k25106 in k25103 in k25100 in k25097 in k25094 in k25091 in k25088 in k25085 in k25082 in k24943 in k24940 in k24937 in k24934 in k24878 in k24875 in k24872 in k24869 in k24866 in k24863 in k24860 in k24857 in k23555 in k23486 in k23293 in k23290 in k23185 in k23134 in k11783 in k10718 in k10715 in k7274 in k7271 in k6978 in k6975 in k6971 in k6680 in k6677 in k6674 in k6671 */
static void C_fcall f_37048(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[28],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_37048,NULL,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_37055,a[2]=((C_word*)t0)[4],a[3]=((C_word*)t0)[5],tmp=(C_word)a,a+=4,tmp);
t3=(C_word)C_a_i_list(&a,3,lf[20],((C_word*)((C_word*)t0)[3])[1],C_retrieve2(lf[827],"*process-stop*"));
t4=(C_word)C_a_i_list(&a,1,t3);
C_trace("ChickenBridge.scm: 543  make-loop-clause");
f_26809(t2,(C_word)C_a_i_list(&a,4,lf[542],((C_word*)t0)[2],lf[547],t4));}

/* k37053 in k37046 in k37043 in run-while-until in k36420 in k36417 in k36414 in k36411 in k36408 in k36405 in k36402 in k36399 in k35543 in k35540 in k35537 in k35534 in k35531 in k35528 in k35525 in k35522 in k35519 in k35516 in k35513 in k35510 in k35507 in k35504 in k35501 in k35498 in k35495 in k35492 in k35489 in k35486 in k30217 in k26697 in k26694 in k26691 in k26688 in k26263 in k26260 in k26257 in k26254 in k26251 in k25668 in k25665 in k25142 in k25139 in k25136 in k25133 in k25130 in k25127 in k25124 in k25121 in k25118 in k25115 in k25112 in k25109 in k25106 in k25103 in k25100 in k25097 in k25094 in k25091 in k25088 in k25085 in k25082 in k24943 in k24940 in k24937 in k24934 in k24878 in k24875 in k24872 in k24869 in k24866 in k24863 in k24860 in k24857 in k23555 in k23486 in k23293 in k23290 in k23185 in k23134 in k11783 in k10718 in k10715 in k7274 in k7271 in k6978 in k6975 in k6971 in k6680 in k6677 in k6674 in k6671 */
static void C_ccall f_37055(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 543  values");
C_values(4,0,((C_word*)t0)[3],t1,((C_word*)((C_word*)t0)[2])[1]);}

/* hush in k36420 in k36417 in k36414 in k36411 in k36408 in k36405 in k36402 in k36399 in k35543 in k35540 in k35537 in k35534 in k35531 in k35528 in k35525 in k35522 in k35519 in k35516 in k35513 in k35510 in k35507 in k35504 in k35501 in k35498 in k35495 in k35492 in k35489 in k35486 in k30217 in k26697 in k26694 in k26691 in k26688 in k26263 in k26260 in k26257 in k26254 in k26251 in k25668 in k25665 in k25142 in k25139 in k25136 in k25133 in k25130 in k25127 in k25124 in k25121 in k25118 in k25115 in k25112 in k25109 in k25106 in k25103 in k25100 in k25097 in k25094 in k25091 in k25088 in k25085 in k25082 in k24943 in k24940 in k24937 in k24934 in k24878 in k24875 in k24872 in k24869 in k24866 in k24863 in k24860 in k24857 in k23555 in k23486 in k23293 in k23290 in k23185 in k23134 in k11783 in k10718 in k10715 in k7274 in k7271 in k6978 in k6975 in k6971 in k6680 in k6677 in k6674 in k6671 */
static void C_ccall f_37024(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[6],*a=ab;
if(c!=2) C_bad_argc_2(c,2,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_37024,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_37028,a[2]=t1,tmp=(C_word)a,a+=3,tmp);
t3=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_36703,a[2]=t2,tmp=(C_word)a,a+=3,tmp);
C_trace("##sys#gc");
t4=C_retrieve(lf[813]);
((C_proc3)C_retrieve_proc(t4))(3,t4,t3,C_SCHEME_FALSE);}

/* k36701 in hush in k36420 in k36417 in k36414 in k36411 in k36408 in k36405 in k36402 in k36399 in k35543 in k35540 in k35537 in k35534 in k35531 in k35528 in k35525 in k35522 in k35519 in k35516 in k35513 in k35510 in k35507 in k35504 in k35501 in k35498 in k35495 in k35492 in k35489 in k35486 in k30217 in k26697 in k26694 in k26691 in k26688 in k26263 in k26260 in k26257 in k26254 in k26251 in k25668 in k25665 in k25142 in k25139 in k25136 in k25133 in k25130 in k25127 in k25124 in k25121 in k25118 in k25115 in k25112 in k25109 in k25106 in k25103 in k25100 in k25097 in k25094 in k25091 in k25088 in k25085 in k25082 in k24943 in k24940 in k24937 in k24934 in k24878 in k24875 in k24872 in k24869 in k24866 in k24863 in k24860 in k24857 in k23555 in k23486 in k23293 in k23290 in k23185 in k23134 in k11783 in k10718 in k10715 in k7274 in k7271 in k6978 in k6975 in k6971 in k6680 in k6677 in k6674 in k6671 */
static void C_ccall f_36703(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[11],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_36703,2,t0,t1);}
t2=(C_word)C_a_i_bytevector(&a,1,C_fix(6));
t3=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)stub6501,a[2]=((C_word)li619),tmp=(C_word)a,a+=3,tmp);
((C_proc3)C_retrieve_proc(t3))(3,t3,((C_word*)t0)[2],t2);}

/* k37026 in hush in k36420 in k36417 in k36414 in k36411 in k36408 in k36405 in k36402 in k36399 in k35543 in k35540 in k35537 in k35534 in k35531 in k35528 in k35525 in k35522 in k35519 in k35516 in k35513 in k35510 in k35507 in k35504 in k35501 in k35498 in k35495 in k35492 in k35489 in k35486 in k30217 in k26697 in k26694 in k26691 in k26688 in k26263 in k26260 in k26257 in k26254 in k26251 in k25668 in k25665 in k25142 in k25139 in k25136 in k25133 in k25130 in k25127 in k25124 in k25121 in k25118 in k25115 in k25112 in k25109 in k25106 in k25103 in k25100 in k25097 in k25094 in k25091 in k25088 in k25085 in k25082 in k24943 in k24940 in k24937 in k24934 in k24878 in k24875 in k24872 in k24869 in k24866 in k24863 in k24860 in k24857 in k23555 in k23486 in k23293 in k23290 in k23185 in k23134 in k11783 in k10718 in k10715 in k7274 in k7271 in k6978 in k6975 in k6971 in k6680 in k6677 in k6674 in k6671 */
static void C_ccall f_37028(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 524  values");
C_values(2,0,((C_word*)t0)[2]);}

/* stop in k36420 in k36417 in k36414 in k36411 in k36408 in k36405 in k36402 in k36399 in k35543 in k35540 in k35537 in k35534 in k35531 in k35528 in k35525 in k35522 in k35519 in k35516 in k35513 in k35510 in k35507 in k35504 in k35501 in k35498 in k35495 in k35492 in k35489 in k35486 in k30217 in k26697 in k26694 in k26691 in k26688 in k26263 in k26260 in k26257 in k26254 in k26251 in k25668 in k25665 in k25142 in k25139 in k25136 in k25133 in k25130 in k25127 in k25124 in k25121 in k25118 in k25115 in k25112 in k25109 in k25106 in k25103 in k25100 in k25097 in k25094 in k25091 in k25088 in k25085 in k25082 in k24943 in k24940 in k24937 in k24934 in k24878 in k24875 in k24872 in k24869 in k24866 in k24863 in k24860 in k24857 in k23555 in k23486 in k23293 in k23290 in k23185 in k23134 in k11783 in k10718 in k10715 in k7274 in k7271 in k6978 in k6975 in k6971 in k6680 in k6677 in k6674 in k6671 */
static void C_ccall f_36966(C_word c,C_word t0,C_word t1,...){
C_word tmp;
C_word t2;
va_list v;
C_word *a,c2=c;
C_save_rest(t1,c2,2);
C_check_for_interrupt;
if(!C_demand(c*C_SIZEOF_PAIR+9)){
C_save_and_reclaim((void*)tr2r,(void*)f_36966r,2,t0,t1);}
else{
a=C_alloc((c-2)*3);
t2=C_restore_rest(a,C_rest_count(0));
f_36966r(t0,t1,t2);}}

static void C_ccall f_36966r(C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a=C_alloc(9);
t3=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_36970,a[2]=t1,tmp=(C_word)a,a+=3,tmp);
if(C_truep((C_word)C_i_nullp(t2))){
C_trace("ChickenBridge.scm: 514  scheduler-stop");
f_36686(t3,C_fix(-1));}
else{
t4=C_SCHEME_UNDEFINED;
t5=(*a=C_VECTOR_TYPE|1,a[1]=t4,tmp=(C_word)a,a+=2,tmp);
t6=C_set_block_item(t5,0,(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_36984,a[2]=t5,a[3]=((C_word)li617),tmp=(C_word)a,a+=4,tmp));
t7=((C_word*)t5)[1];
f_36984(t7,t3,t2);}}

/* do6557 in stop in k36420 in k36417 in k36414 in k36411 in k36408 in k36405 in k36402 in k36399 in k35543 in k35540 in k35537 in k35534 in k35531 in k35528 in k35525 in k35522 in k35519 in k35516 in k35513 in k35510 in k35507 in k35504 in k35501 in k35498 in k35495 in k35492 in k35489 in k35486 in k30217 in k26697 in k26694 in k26691 in k26688 in k26263 in k26260 in k26257 in k26254 in k26251 in k25668 in k25665 in k25142 in k25139 in k25136 in k25133 in k25130 in k25127 in k25124 in k25121 in k25118 in k25115 in k25112 in k25109 in k25106 in k25103 in k25100 in k25097 in k25094 in k25091 in k25088 in k25085 in k25082 in k24943 in k24940 in k24937 in k24934 in k24878 in k24875 in k24872 in k24869 in k24866 in k24863 in k24860 in k24857 in k23555 in k23486 in k23293 in k23290 in k23185 in k23134 in k11783 in k10718 in k10715 in k7274 in k7271 in k6978 in k6975 in k6971 in k6680 in k6677 in k6674 in k6671 */
static void C_fcall f_36984(C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word ab[5],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_36984,NULL,3,t0,t1,t2);}
if(C_truep((C_word)C_i_nullp(t2))){
t3=t1;
((C_proc2)(void*)(*((C_word*)t3+1)))(2,t3,C_SCHEME_FALSE);}
else{
t3=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_36994,a[2]=t1,a[3]=((C_word*)t0)[2],a[4]=t2,tmp=(C_word)a,a+=5,tmp);
t4=(C_word)C_i_car(t2);
if(C_truep((C_word)C_fixnump(t4))){
t5=(C_word)C_i_car(t2);
C_trace("ChickenBridge.scm: 518  scheduler-stop");
f_36686(t3,t5);}
else{
t5=(C_word)C_i_car(t2);
C_trace("ChickenBridge.scm: 519  error");
t6=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t6))(4,t6,t3,lf[825],t5);}}}

/* k36992 in do6557 in stop in k36420 in k36417 in k36414 in k36411 in k36408 in k36405 in k36402 in k36399 in k35543 in k35540 in k35537 in k35534 in k35531 in k35528 in k35525 in k35522 in k35519 in k35516 in k35513 in k35510 in k35507 in k35504 in k35501 in k35498 in k35495 in k35492 in k35489 in k35486 in k30217 in k26697 in k26694 in k26691 in k26688 in k26263 in k26260 in k26257 in k26254 in k26251 in k25668 in k25665 in k25142 in k25139 in k25136 in k25133 in k25130 in k25127 in k25124 in k25121 in k25118 in k25115 in k25112 in k25109 in k25106 in k25103 in k25100 in k25097 in k25094 in k25091 in k25088 in k25085 in k25082 in k24943 in k24940 in k24937 in k24934 in k24878 in k24875 in k24872 in k24869 in k24866 in k24863 in k24860 in k24857 in k23555 in k23486 in k23293 in k23290 in k23185 in k23134 in k11783 in k10718 in k10715 in k7274 in k7271 in k6978 in k6975 in k6971 in k6680 in k6677 in k6674 in k6671 */
static void C_ccall f_36994(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word *a;
t2=(C_word)C_i_cdr(((C_word*)t0)[4]);
t3=((C_word*)((C_word*)t0)[3])[1];
f_36984(t3,((C_word*)t0)[2],t2);}

/* k36968 in stop in k36420 in k36417 in k36414 in k36411 in k36408 in k36405 in k36402 in k36399 in k35543 in k35540 in k35537 in k35534 in k35531 in k35528 in k35525 in k35522 in k35519 in k35516 in k35513 in k35510 in k35507 in k35504 in k35501 in k35498 in k35495 in k35492 in k35489 in k35486 in k30217 in k26697 in k26694 in k26691 in k26688 in k26263 in k26260 in k26257 in k26254 in k26251 in k25668 in k25665 in k25142 in k25139 in k25136 in k25133 in k25130 in k25127 in k25124 in k25121 in k25118 in k25115 in k25112 in k25109 in k25106 in k25103 in k25100 in k25097 in k25094 in k25091 in k25088 in k25085 in k25082 in k24943 in k24940 in k24937 in k24934 in k24878 in k24875 in k24872 in k24869 in k24866 in k24863 in k24860 in k24857 in k23555 in k23486 in k23293 in k23290 in k23185 in k23134 in k11783 in k10718 in k10715 in k7274 in k7271 in k6978 in k6975 in k6971 in k6680 in k6677 in k6674 in k6671 */
static void C_ccall f_36970(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 520  values");
C_values(2,0,((C_word*)t0)[2]);}

/* cont in k36420 in k36417 in k36414 in k36411 in k36408 in k36405 in k36402 in k36399 in k35543 in k35540 in k35537 in k35534 in k35531 in k35528 in k35525 in k35522 in k35519 in k35516 in k35513 in k35510 in k35507 in k35504 in k35501 in k35498 in k35495 in k35492 in k35489 in k35486 in k30217 in k26697 in k26694 in k26691 in k26688 in k26263 in k26260 in k26257 in k26254 in k26251 in k25668 in k25665 in k25142 in k25139 in k25136 in k25133 in k25130 in k25127 in k25124 in k25121 in k25118 in k25115 in k25112 in k25109 in k25106 in k25103 in k25100 in k25097 in k25094 in k25091 in k25088 in k25085 in k25082 in k24943 in k24940 in k24937 in k24934 in k24878 in k24875 in k24872 in k24869 in k24866 in k24863 in k24860 in k24857 in k23555 in k23486 in k23293 in k23290 in k23185 in k23134 in k11783 in k10718 in k10715 in k7274 in k7271 in k6978 in k6975 in k6971 in k6680 in k6677 in k6674 in k6671 */
static void C_ccall f_36957(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[6],*a=ab;
if(c!=2) C_bad_argc_2(c,2,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_36957,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_36961,a[2]=t1,tmp=(C_word)a,a+=3,tmp);
t3=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_36681,a[2]=t2,tmp=(C_word)a,a+=3,tmp);
C_trace("##sys#gc");
t4=C_retrieve(lf[813]);
((C_proc3)C_retrieve_proc(t4))(3,t4,t3,C_SCHEME_FALSE);}

/* k36679 in cont in k36420 in k36417 in k36414 in k36411 in k36408 in k36405 in k36402 in k36399 in k35543 in k35540 in k35537 in k35534 in k35531 in k35528 in k35525 in k35522 in k35519 in k35516 in k35513 in k35510 in k35507 in k35504 in k35501 in k35498 in k35495 in k35492 in k35489 in k35486 in k30217 in k26697 in k26694 in k26691 in k26688 in k26263 in k26260 in k26257 in k26254 in k26251 in k25668 in k25665 in k25142 in k25139 in k25136 in k25133 in k25130 in k25127 in k25124 in k25121 in k25118 in k25115 in k25112 in k25109 in k25106 in k25103 in k25100 in k25097 in k25094 in k25091 in k25088 in k25085 in k25082 in k24943 in k24940 in k24937 in k24934 in k24878 in k24875 in k24872 in k24869 in k24866 in k24863 in k24860 in k24857 in k23555 in k23486 in k23293 in k23290 in k23185 in k23134 in k11783 in k10718 in k10715 in k7274 in k7271 in k6978 in k6975 in k6971 in k6680 in k6677 in k6674 in k6671 */
static void C_ccall f_36681(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[11],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_36681,2,t0,t1);}
t2=(C_word)C_a_i_bytevector(&a,1,C_fix(6));
t3=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)stub6491,a[2]=((C_word)li615),tmp=(C_word)a,a+=3,tmp);
((C_proc3)C_retrieve_proc(t3))(3,t3,((C_word*)t0)[2],t2);}

/* k36959 in cont in k36420 in k36417 in k36414 in k36411 in k36408 in k36405 in k36402 in k36399 in k35543 in k35540 in k35537 in k35534 in k35531 in k35528 in k35525 in k35522 in k35519 in k35516 in k35513 in k35510 in k35507 in k35504 in k35501 in k35498 in k35495 in k35492 in k35489 in k35486 in k30217 in k26697 in k26694 in k26691 in k26688 in k26263 in k26260 in k26257 in k26254 in k26251 in k25668 in k25665 in k25142 in k25139 in k25136 in k25133 in k25130 in k25127 in k25124 in k25121 in k25118 in k25115 in k25112 in k25109 in k25106 in k25103 in k25100 in k25097 in k25094 in k25091 in k25088 in k25085 in k25082 in k24943 in k24940 in k24937 in k24934 in k24878 in k24875 in k24872 in k24869 in k24866 in k24863 in k24860 in k24857 in k23555 in k23486 in k23293 in k23290 in k23185 in k23134 in k11783 in k10718 in k10715 in k7274 in k7271 in k6978 in k6975 in k6971 in k6680 in k6677 in k6674 in k6671 */
static void C_ccall f_36961(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 510  values");
C_values(2,0,((C_word*)t0)[2]);}

/* paused? in k36420 in k36417 in k36414 in k36411 in k36408 in k36405 in k36402 in k36399 in k35543 in k35540 in k35537 in k35534 in k35531 in k35528 in k35525 in k35522 in k35519 in k35516 in k35513 in k35510 in k35507 in k35504 in k35501 in k35498 in k35495 in k35492 in k35489 in k35486 in k30217 in k26697 in k26694 in k26691 in k26688 in k26263 in k26260 in k26257 in k26254 in k26251 in k25668 in k25665 in k25142 in k25139 in k25136 in k25133 in k25130 in k25127 in k25124 in k25121 in k25118 in k25115 in k25112 in k25109 in k25106 in k25103 in k25100 in k25097 in k25094 in k25091 in k25088 in k25085 in k25082 in k24943 in k24940 in k24937 in k24934 in k24878 in k24875 in k24872 in k24869 in k24866 in k24863 in k24860 in k24857 in k23555 in k23486 in k23293 in k23290 in k23185 in k23134 in k11783 in k10718 in k10715 in k7274 in k7271 in k6978 in k6975 in k6971 in k6680 in k6677 in k6674 in k6671 */
static void C_ccall f_36951(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[3],*a=ab;
if(c!=2) C_bad_argc_2(c,2,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_36951,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_36663,a[2]=t1,tmp=(C_word)a,a+=3,tmp);
C_trace("##sys#gc");
t3=C_retrieve(lf[813]);
((C_proc3)C_retrieve_proc(t3))(3,t3,t2,C_SCHEME_FALSE);}

/* k36661 in paused? in k36420 in k36417 in k36414 in k36411 in k36408 in k36405 in k36402 in k36399 in k35543 in k35540 in k35537 in k35534 in k35531 in k35528 in k35525 in k35522 in k35519 in k35516 in k35513 in k35510 in k35507 in k35504 in k35501 in k35498 in k35495 in k35492 in k35489 in k35486 in k30217 in k26697 in k26694 in k26691 in k26688 in k26263 in k26260 in k26257 in k26254 in k26251 in k25668 in k25665 in k25142 in k25139 in k25136 in k25133 in k25130 in k25127 in k25124 in k25121 in k25118 in k25115 in k25112 in k25109 in k25106 in k25103 in k25100 in k25097 in k25094 in k25091 in k25088 in k25085 in k25082 in k24943 in k24940 in k24937 in k24934 in k24878 in k24875 in k24872 in k24869 in k24866 in k24863 in k24860 in k24857 in k23555 in k23486 in k23293 in k23290 in k23185 in k23134 in k11783 in k10718 in k10715 in k7274 in k7271 in k6978 in k6975 in k6971 in k6680 in k6677 in k6674 in k6671 */
static void C_ccall f_36663(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[11],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_36663,2,t0,t1);}
t2=(C_word)C_a_i_bytevector(&a,1,C_fix(6));
t3=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)stub6483,a[2]=((C_word)li613),tmp=(C_word)a,a+=3,tmp);
((C_proc3)C_retrieve_proc(t3))(3,t3,((C_word*)t0)[2],t2);}

/* pause in k36420 in k36417 in k36414 in k36411 in k36408 in k36405 in k36402 in k36399 in k35543 in k35540 in k35537 in k35534 in k35531 in k35528 in k35525 in k35522 in k35519 in k35516 in k35513 in k35510 in k35507 in k35504 in k35501 in k35498 in k35495 in k35492 in k35489 in k35486 in k30217 in k26697 in k26694 in k26691 in k26688 in k26263 in k26260 in k26257 in k26254 in k26251 in k25668 in k25665 in k25142 in k25139 in k25136 in k25133 in k25130 in k25127 in k25124 in k25121 in k25118 in k25115 in k25112 in k25109 in k25106 in k25103 in k25100 in k25097 in k25094 in k25091 in k25088 in k25085 in k25082 in k24943 in k24940 in k24937 in k24934 in k24878 in k24875 in k24872 in k24869 in k24866 in k24863 in k24860 in k24857 in k23555 in k23486 in k23293 in k23290 in k23185 in k23134 in k11783 in k10718 in k10715 in k7274 in k7271 in k6978 in k6975 in k6971 in k6680 in k6677 in k6674 in k6671 */
static void C_ccall f_36942(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[6],*a=ab;
if(c!=2) C_bad_argc_2(c,2,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_36942,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_36946,a[2]=t1,tmp=(C_word)a,a+=3,tmp);
t3=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_36672,a[2]=t2,tmp=(C_word)a,a+=3,tmp);
C_trace("##sys#gc");
t4=C_retrieve(lf[813]);
((C_proc3)C_retrieve_proc(t4))(3,t4,t3,C_SCHEME_FALSE);}

/* k36670 in pause in k36420 in k36417 in k36414 in k36411 in k36408 in k36405 in k36402 in k36399 in k35543 in k35540 in k35537 in k35534 in k35531 in k35528 in k35525 in k35522 in k35519 in k35516 in k35513 in k35510 in k35507 in k35504 in k35501 in k35498 in k35495 in k35492 in k35489 in k35486 in k30217 in k26697 in k26694 in k26691 in k26688 in k26263 in k26260 in k26257 in k26254 in k26251 in k25668 in k25665 in k25142 in k25139 in k25136 in k25133 in k25130 in k25127 in k25124 in k25121 in k25118 in k25115 in k25112 in k25109 in k25106 in k25103 in k25100 in k25097 in k25094 in k25091 in k25088 in k25085 in k25082 in k24943 in k24940 in k24937 in k24934 in k24878 in k24875 in k24872 in k24869 in k24866 in k24863 in k24860 in k24857 in k23555 in k23486 in k23293 in k23290 in k23185 in k23134 in k11783 in k10718 in k10715 in k7274 in k7271 in k6978 in k6975 in k6971 in k6680 in k6677 in k6674 in k6671 */
static void C_ccall f_36672(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[11],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_36672,2,t0,t1);}
t2=(C_word)C_a_i_bytevector(&a,1,C_fix(6));
t3=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)stub6487,a[2]=((C_word)li611),tmp=(C_word)a,a+=3,tmp);
((C_proc3)C_retrieve_proc(t3))(3,t3,((C_word*)t0)[2],t2);}

/* k36944 in pause in k36420 in k36417 in k36414 in k36411 in k36408 in k36405 in k36402 in k36399 in k35543 in k35540 in k35537 in k35534 in k35531 in k35528 in k35525 in k35522 in k35519 in k35516 in k35513 in k35510 in k35507 in k35504 in k35501 in k35498 in k35495 in k35492 in k35489 in k35486 in k30217 in k26697 in k26694 in k26691 in k26688 in k26263 in k26260 in k26257 in k26254 in k26251 in k25668 in k25665 in k25142 in k25139 in k25136 in k25133 in k25130 in k25127 in k25124 in k25121 in k25118 in k25115 in k25112 in k25109 in k25106 in k25103 in k25100 in k25097 in k25094 in k25091 in k25088 in k25085 in k25082 in k24943 in k24940 in k24937 in k24934 in k24878 in k24875 in k24872 in k24869 in k24866 in k24863 in k24860 in k24857 in k23555 in k23486 in k23293 in k23290 in k23185 in k23134 in k11783 in k10718 in k10715 in k7274 in k7271 in k6978 in k6975 in k6971 in k6680 in k6677 in k6674 in k6671 */
static void C_ccall f_36946(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 503  values");
C_values(2,0,((C_word*)t0)[2]);}

/* now in k36420 in k36417 in k36414 in k36411 in k36408 in k36405 in k36402 in k36399 in k35543 in k35540 in k35537 in k35534 in k35531 in k35528 in k35525 in k35522 in k35519 in k35516 in k35513 in k35510 in k35507 in k35504 in k35501 in k35498 in k35495 in k35492 in k35489 in k35486 in k30217 in k26697 in k26694 in k26691 in k26688 in k26263 in k26260 in k26257 in k26254 in k26251 in k25668 in k25665 in k25142 in k25139 in k25136 in k25133 in k25130 in k25127 in k25124 in k25121 in k25118 in k25115 in k25112 in k25109 in k25106 in k25103 in k25100 in k25097 in k25094 in k25091 in k25088 in k25085 in k25082 in k24943 in k24940 in k24937 in k24934 in k24878 in k24875 in k24872 in k24869 in k24866 in k24863 in k24860 in k24857 in k23555 in k23486 in k23293 in k23290 in k23185 in k23134 in k11783 in k10718 in k10715 in k7274 in k7271 in k6978 in k6975 in k6971 in k6680 in k6677 in k6674 in k6671 */
static void C_ccall f_36939(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[6],*a=ab;
if(c!=2) C_bad_argc_2(c,2,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_36939,2,t0,t1);}
t2=(C_word)C_a_i_bytevector(&a,1,C_fix(4));
t3=t1;
((C_proc2)(void*)(*((C_word*)t3+1)))(2,t3,(C_word)stub6551(t2));}

/* sprout in k36420 in k36417 in k36414 in k36411 in k36408 in k36405 in k36402 in k36399 in k35543 in k35540 in k35537 in k35534 in k35531 in k35528 in k35525 in k35522 in k35519 in k35516 in k35513 in k35510 in k35507 in k35504 in k35501 in k35498 in k35495 in k35492 in k35489 in k35486 in k30217 in k26697 in k26694 in k26691 in k26688 in k26263 in k26260 in k26257 in k26254 in k26251 in k25668 in k25665 in k25142 in k25139 in k25136 in k25133 in k25130 in k25127 in k25124 in k25121 in k25118 in k25115 in k25112 in k25109 in k25106 in k25103 in k25100 in k25097 in k25094 in k25091 in k25088 in k25085 in k25082 in k24943 in k24940 in k24937 in k24934 in k24878 in k24875 in k24872 in k24869 in k24866 in k24863 in k24860 in k24857 in k23555 in k23486 in k23293 in k23290 in k23185 in k23134 in k11783 in k10718 in k10715 in k7274 in k7271 in k6978 in k6975 in k6971 in k6680 in k6677 in k6674 in k6671 */
static void C_ccall f_36727(C_word c,C_word t0,C_word t1,C_word t2,...){
C_word tmp;
C_word t3;
va_list v;
C_word *a,c2=c;
C_save_rest(t2,c2,3);
if(c<3) C_bad_min_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_demand(c*C_SIZEOF_PAIR+12)){
C_save_and_reclaim((void*)tr3r,(void*)f_36727r,3,t0,t1,t2);}
else{
a=C_alloc((c-3)*3);
t3=C_restore_rest(a,C_rest_count(0));
f_36727r(t0,t1,t2,t3);}}

static void C_ccall f_36727r(C_word t0,C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word *a=C_alloc(12);
t4=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_36729,a[2]=t2,a[3]=((C_word)li606),tmp=(C_word)a,a+=4,tmp);
t5=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_36886,a[2]=t4,a[3]=((C_word)li607),tmp=(C_word)a,a+=4,tmp);
t6=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_36891,a[2]=t5,a[3]=((C_word)li608),tmp=(C_word)a,a+=4,tmp);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("def-start65186545");
t7=t6;
f_36891(t7,t1);}
else{
t7=(C_word)C_i_car(t3);
t8=(C_word)C_i_cdr(t3);
if(C_truep((C_word)C_i_nullp(t8))){
C_trace("def-id65196543");
t9=t5;
f_36886(t9,t1,t7);}
else{
t9=(C_word)C_i_car(t8);
t10=(C_word)C_i_cdr(t8);
if(C_truep((C_word)C_i_nullp(t10))){
C_trace("body65166521");
t11=t4;
f_36729(t11,t1,t7,t9);}
else{
C_trace("##sys#error");
t11=*((C_word*)lf[818]+1);
((C_proc4)(void*)(*((C_word*)t11+1)))(4,t11,t1,lf[819],t10);}}}}

/* def-start6518 in sprout in k36420 in k36417 in k36414 in k36411 in k36408 in k36405 in k36402 in k36399 in k35543 in k35540 in k35537 in k35534 in k35531 in k35528 in k35525 in k35522 in k35519 in k35516 in k35513 in k35510 in k35507 in k35504 in k35501 in k35498 in k35495 in k35492 in k35489 in k35486 in k30217 in k26697 in k26694 in k26691 in k26688 in k26263 in k26260 in k26257 in k26254 in k26251 in k25668 in k25665 in k25142 in k25139 in k25136 in k25133 in k25130 in k25127 in k25124 in k25121 in k25118 in k25115 in k25112 in k25109 in k25106 in k25103 in k25100 in k25097 in k25094 in k25091 in k25088 in k25085 in k25082 in k24943 in k24940 in k24937 in k24934 in k24878 in k24875 in k24872 in k24869 in k24866 in k24863 in k24860 in k24857 in k23555 in k23486 in k23293 in k23290 in k23185 in k23134 in k11783 in k10718 in k10715 in k7274 in k7271 in k6978 in k6975 in k6971 in k6680 in k6677 in k6674 in k6671 */
static void C_fcall f_36891(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_36891,NULL,2,t0,t1);}
C_trace("def-id65196543");
t2=((C_word*)t0)[2];
f_36886(t2,t1,C_fix(0));}

/* def-id6519 in sprout in k36420 in k36417 in k36414 in k36411 in k36408 in k36405 in k36402 in k36399 in k35543 in k35540 in k35537 in k35534 in k35531 in k35528 in k35525 in k35522 in k35519 in k35516 in k35513 in k35510 in k35507 in k35504 in k35501 in k35498 in k35495 in k35492 in k35489 in k35486 in k30217 in k26697 in k26694 in k26691 in k26688 in k26263 in k26260 in k26257 in k26254 in k26251 in k25668 in k25665 in k25142 in k25139 in k25136 in k25133 in k25130 in k25127 in k25124 in k25121 in k25118 in k25115 in k25112 in k25109 in k25106 in k25103 in k25100 in k25097 in k25094 in k25091 in k25088 in k25085 in k25082 in k24943 in k24940 in k24937 in k24934 in k24878 in k24875 in k24872 in k24869 in k24866 in k24863 in k24860 in k24857 in k23555 in k23486 in k23293 in k23290 in k23185 in k23134 in k11783 in k10718 in k10715 in k7274 in k7271 in k6978 in k6975 in k6971 in k6680 in k6677 in k6674 in k6671 */
static void C_fcall f_36886(C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word *a;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_36886,NULL,3,t0,t1,t2);}
C_trace("body65166521");
t3=((C_word*)t0)[2];
f_36729(t3,t1,t2,C_fix(-1));}

/* body6516 in sprout in k36420 in k36417 in k36414 in k36411 in k36408 in k36405 in k36402 in k36399 in k35543 in k35540 in k35537 in k35534 in k35531 in k35528 in k35525 in k35522 in k35519 in k35516 in k35513 in k35510 in k35507 in k35504 in k35501 in k35498 in k35495 in k35492 in k35489 in k35486 in k30217 in k26697 in k26694 in k26691 in k26688 in k26263 in k26260 in k26257 in k26254 in k26251 in k25668 in k25665 in k25142 in k25139 in k25136 in k25133 in k25130 in k25127 in k25124 in k25121 in k25118 in k25115 in k25112 in k25109 in k25106 in k25103 in k25100 in k25097 in k25094 in k25091 in k25088 in k25085 in k25082 in k24943 in k24940 in k24937 in k24934 in k24878 in k24875 in k24872 in k24869 in k24866 in k24863 in k24860 in k24857 in k23555 in k23486 in k23293 in k23290 in k23185 in k23134 in k11783 in k10718 in k10715 in k7274 in k7271 in k6978 in k6975 in k6971 in k6680 in k6677 in k6674 in k6671 */
static void C_fcall f_36729(C_word t0,C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word t14;
C_word t15;
C_word ab[37],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_36729,NULL,4,t0,t1,t2,t3);}
t4=(*a=C_VECTOR_TYPE|1,a[1]=t2,tmp=(C_word)a,a+=2,tmp);
t5=(*a=C_VECTOR_TYPE|1,a[1]=t3,tmp=(C_word)a,a+=2,tmp);
t6=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_36731,a[2]=t4,a[3]=((C_word)li602),tmp=(C_word)a,a+=4,tmp);
t7=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_36759,a[2]=t5,a[3]=((C_word)li603),tmp=(C_word)a,a+=4,tmp);
t8=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_36789,a[2]=t1,tmp=(C_word)a,a+=3,tmp);
if(C_truep((C_word)C_i_pairp(((C_word*)t0)[2]))){
t9=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_36798,a[2]=t8,a[3]=t6,a[4]=t7,a[5]=((C_word*)t0)[2],tmp=(C_word)a,a+=6,tmp);
t10=C_SCHEME_UNDEFINED;
t11=(*a=C_VECTOR_TYPE|1,a[1]=t10,tmp=(C_word)a,a+=2,tmp);
t12=C_set_block_item(t11,0,(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_36834,a[2]=((C_word*)t0)[2],a[3]=t11,a[4]=((C_word)li605),tmp=(C_word)a,a+=5,tmp));
t13=((C_word*)t11)[1];
f_36834(t13,t9,((C_word*)t0)[2]);}
else{
if(C_truep((C_word)C_i_closurep(((C_word*)t0)[2]))){
t9=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_36874,a[2]=((C_word*)t0)[2],a[3]=t8,tmp=(C_word)a,a+=4,tmp);
t10=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_36878,a[2]=t7,a[3]=((C_word*)t0)[2],a[4]=t9,tmp=(C_word)a,a+=5,tmp);
C_trace("ChickenBridge.scm: 488  nextstart");
t11=t6;
f_36731(t11,t10);}
else{
C_trace("ChickenBridge.scm: 491  error");
t9=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t9))(4,t9,t8,lf[817],((C_word*)t0)[2]);}}}

/* k36876 in body6516 in sprout in k36420 in k36417 in k36414 in k36411 in k36408 in k36405 in k36402 in k36399 in k35543 in k35540 in k35537 in k35534 in k35531 in k35528 in k35525 in k35522 in k35519 in k35516 in k35513 in k35510 in k35507 in k35504 in k35501 in k35498 in k35495 in k35492 in k35489 in k35486 in k30217 in k26697 in k26694 in k26691 in k26688 in k26263 in k26260 in k26257 in k26254 in k26251 in k25668 in k25665 in k25142 in k25139 in k25136 in k25133 in k25130 in k25127 in k25124 in k25121 in k25118 in k25115 in k25112 in k25109 in k25106 in k25103 in k25100 in k25097 in k25094 in k25091 in k25088 in k25085 in k25082 in k24943 in k24940 in k24937 in k24934 in k24878 in k24875 in k24872 in k24869 in k24866 in k24863 in k24860 in k24857 in k23555 in k23486 in k23293 in k23290 in k23185 in k23134 in k11783 in k10718 in k10715 in k7274 in k7271 in k6978 in k6975 in k6971 in k6680 in k6677 in k6674 in k6671 */
static void C_ccall f_36878(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[5],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_36878,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_36882,a[2]=t1,a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],tmp=(C_word)a,a+=5,tmp);
C_trace("ChickenBridge.scm: 488  nextid");
t3=((C_word*)t0)[2];
f_36759(t3,t2);}

/* k36880 in k36876 in body6516 in sprout in k36420 in k36417 in k36414 in k36411 in k36408 in k36405 in k36402 in k36399 in k35543 in k35540 in k35537 in k35534 in k35531 in k35528 in k35525 in k35522 in k35519 in k35516 in k35513 in k35510 in k35507 in k35504 in k35501 in k35498 in k35495 in k35492 in k35489 in k35486 in k30217 in k26697 in k26694 in k26691 in k26688 in k26263 in k26260 in k26257 in k26254 in k26251 in k25668 in k25665 in k25142 in k25139 in k25136 in k25133 in k25130 in k25127 in k25124 in k25121 in k25118 in k25115 in k25112 in k25109 in k25106 in k25103 in k25100 in k25097 in k25094 in k25091 in k25088 in k25085 in k25082 in k24943 in k24940 in k24937 in k24934 in k24878 in k24875 in k24872 in k24869 in k24866 in k24863 in k24860 in k24857 in k23555 in k23486 in k23293 in k23290 in k23185 in k23134 in k11783 in k10718 in k10715 in k7274 in k7271 in k6978 in k6975 in k6971 in k6680 in k6677 in k6674 in k6671 */
static void C_ccall f_36882(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 488  scheduler-sprout");
f_36642(((C_word*)t0)[4],((C_word*)t0)[3],((C_word*)t0)[2],t1);}

/* k36872 in body6516 in sprout in k36420 in k36417 in k36414 in k36411 in k36408 in k36405 in k36402 in k36399 in k35543 in k35540 in k35537 in k35534 in k35531 in k35528 in k35525 in k35522 in k35519 in k35516 in k35513 in k35510 in k35507 in k35504 in k35501 in k35498 in k35495 in k35492 in k35489 in k35486 in k30217 in k26697 in k26694 in k26691 in k26688 in k26263 in k26260 in k26257 in k26254 in k26251 in k25668 in k25665 in k25142 in k25139 in k25136 in k25133 in k25130 in k25127 in k25124 in k25121 in k25118 in k25115 in k25112 in k25109 in k25106 in k25103 in k25100 in k25097 in k25094 in k25091 in k25088 in k25085 in k25082 in k24943 in k24940 in k24937 in k24934 in k24878 in k24875 in k24872 in k24869 in k24866 in k24863 in k24860 in k24857 in k23555 in k23486 in k23293 in k23290 in k23185 in k23134 in k11783 in k10718 in k10715 in k7274 in k7271 in k6978 in k6975 in k6971 in k6680 in k6677 in k6674 in k6671 */
static void C_ccall f_36874(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
t2=((C_word*)t0)[3];
f_36789(2,t2,((C_word*)t0)[2]);}

/* do6530 in body6516 in sprout in k36420 in k36417 in k36414 in k36411 in k36408 in k36405 in k36402 in k36399 in k35543 in k35540 in k35537 in k35534 in k35531 in k35528 in k35525 in k35522 in k35519 in k35516 in k35513 in k35510 in k35507 in k35504 in k35501 in k35498 in k35495 in k35492 in k35489 in k35486 in k30217 in k26697 in k26694 in k26691 in k26688 in k26263 in k26260 in k26257 in k26254 in k26251 in k25668 in k25665 in k25142 in k25139 in k25136 in k25133 in k25130 in k25127 in k25124 in k25121 in k25118 in k25115 in k25112 in k25109 in k25106 in k25103 in k25100 in k25097 in k25094 in k25091 in k25088 in k25085 in k25082 in k24943 in k24940 in k24937 in k24934 in k24878 in k24875 in k24872 in k24869 in k24866 in k24863 in k24860 in k24857 in k23555 in k23486 in k23293 in k23290 in k23185 in k23134 in k11783 in k10718 in k10715 in k7274 in k7271 in k6978 in k6975 in k6971 in k6680 in k6677 in k6674 in k6671 */
static void C_fcall f_36834(C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word t5;
C_word ab[5],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_36834,NULL,3,t0,t1,t2);}
if(C_truep((C_word)C_i_nullp(t2))){
t3=t1;
((C_proc2)(void*)(*((C_word*)t3+1)))(2,t3,C_SCHEME_FALSE);}
else{
t3=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_36844,a[2]=t1,a[3]=((C_word*)t0)[3],a[4]=t2,tmp=(C_word)a,a+=5,tmp);
t4=(C_word)C_i_car(t2);
if(C_truep((C_word)C_i_closurep(t4))){
t5=t3;
f_36844(2,t5,C_SCHEME_UNDEFINED);}
else{
C_trace("ChickenBridge.scm: 482  error");
t5=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t5))(4,t5,t3,lf[816],((C_word*)t0)[2]);}}}

/* k36842 in do6530 in body6516 in sprout in k36420 in k36417 in k36414 in k36411 in k36408 in k36405 in k36402 in k36399 in k35543 in k35540 in k35537 in k35534 in k35531 in k35528 in k35525 in k35522 in k35519 in k35516 in k35513 in k35510 in k35507 in k35504 in k35501 in k35498 in k35495 in k35492 in k35489 in k35486 in k30217 in k26697 in k26694 in k26691 in k26688 in k26263 in k26260 in k26257 in k26254 in k26251 in k25668 in k25665 in k25142 in k25139 in k25136 in k25133 in k25130 in k25127 in k25124 in k25121 in k25118 in k25115 in k25112 in k25109 in k25106 in k25103 in k25100 in k25097 in k25094 in k25091 in k25088 in k25085 in k25082 in k24943 in k24940 in k24937 in k24934 in k24878 in k24875 in k24872 in k24869 in k24866 in k24863 in k24860 in k24857 in k23555 in k23486 in k23293 in k23290 in k23185 in k23134 in k11783 in k10718 in k10715 in k7274 in k7271 in k6978 in k6975 in k6971 in k6680 in k6677 in k6674 in k6671 */
static void C_ccall f_36844(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word *a;
t2=(C_word)C_i_cdr(((C_word*)t0)[4]);
t3=((C_word*)((C_word*)t0)[3])[1];
f_36834(t3,((C_word*)t0)[2],t2);}

/* k36796 in body6516 in sprout in k36420 in k36417 in k36414 in k36411 in k36408 in k36405 in k36402 in k36399 in k35543 in k35540 in k35537 in k35534 in k35531 in k35528 in k35525 in k35522 in k35519 in k35516 in k35513 in k35510 in k35507 in k35504 in k35501 in k35498 in k35495 in k35492 in k35489 in k35486 in k30217 in k26697 in k26694 in k26691 in k26688 in k26263 in k26260 in k26257 in k26254 in k26251 in k25668 in k25665 in k25142 in k25139 in k25136 in k25133 in k25130 in k25127 in k25124 in k25121 in k25118 in k25115 in k25112 in k25109 in k25106 in k25103 in k25100 in k25097 in k25094 in k25091 in k25088 in k25085 in k25082 in k24943 in k24940 in k24937 in k24934 in k24878 in k24875 in k24872 in k24869 in k24866 in k24863 in k24860 in k24857 in k23555 in k23486 in k23293 in k23290 in k23185 in k23134 in k11783 in k10718 in k10715 in k7274 in k7271 in k6978 in k6975 in k6971 in k6680 in k6677 in k6674 in k6671 */
static void C_ccall f_36798(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_36798,2,t0,t1);}
t2=C_SCHEME_UNDEFINED;
t3=(*a=C_VECTOR_TYPE|1,a[1]=t2,tmp=(C_word)a,a+=2,tmp);
t4=C_set_block_item(t3,0,(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_36803,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=t3,a[5]=((C_word*)t0)[5],a[6]=((C_word)li604),tmp=(C_word)a,a+=7,tmp));
t5=((C_word*)t3)[1];
f_36803(t5,((C_word*)t0)[2],((C_word*)t0)[5]);}

/* do6535 in k36796 in body6516 in sprout in k36420 in k36417 in k36414 in k36411 in k36408 in k36405 in k36402 in k36399 in k35543 in k35540 in k35537 in k35534 in k35531 in k35528 in k35525 in k35522 in k35519 in k35516 in k35513 in k35510 in k35507 in k35504 in k35501 in k35498 in k35495 in k35492 in k35489 in k35486 in k30217 in k26697 in k26694 in k26691 in k26688 in k26263 in k26260 in k26257 in k26254 in k26251 in k25668 in k25665 in k25142 in k25139 in k25136 in k25133 in k25130 in k25127 in k25124 in k25121 in k25118 in k25115 in k25112 in k25109 in k25106 in k25103 in k25100 in k25097 in k25094 in k25091 in k25088 in k25085 in k25082 in k24943 in k24940 in k24937 in k24934 in k24878 in k24875 in k24872 in k24869 in k24866 in k24863 in k24860 in k24857 in k23555 in k23486 in k23293 in k23290 in k23185 in k23134 in k11783 in k10718 in k10715 in k7274 in k7271 in k6978 in k6975 in k6971 in k6680 in k6677 in k6674 in k6671 */
static void C_fcall f_36803(C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[10],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_36803,NULL,3,t0,t1,t2);}
if(C_truep((C_word)C_i_nullp(t2))){
t3=t1;
((C_proc2)(void*)(*((C_word*)t3+1)))(2,t3,((C_word*)t0)[5]);}
else{
t3=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_36813,a[2]=t1,a[3]=((C_word*)t0)[4],a[4]=t2,tmp=(C_word)a,a+=5,tmp);
t4=(C_word)C_i_car(t2);
t5=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_36828,a[2]=((C_word*)t0)[3],a[3]=t4,a[4]=t3,tmp=(C_word)a,a+=5,tmp);
C_trace("ChickenBridge.scm: 485  nextstart");
t6=((C_word*)t0)[2];
f_36731(t6,t5);}}

/* k36826 in do6535 in k36796 in body6516 in sprout in k36420 in k36417 in k36414 in k36411 in k36408 in k36405 in k36402 in k36399 in k35543 in k35540 in k35537 in k35534 in k35531 in k35528 in k35525 in k35522 in k35519 in k35516 in k35513 in k35510 in k35507 in k35504 in k35501 in k35498 in k35495 in k35492 in k35489 in k35486 in k30217 in k26697 in k26694 in k26691 in k26688 in k26263 in k26260 in k26257 in k26254 in k26251 in k25668 in k25665 in k25142 in k25139 in k25136 in k25133 in k25130 in k25127 in k25124 in k25121 in k25118 in k25115 in k25112 in k25109 in k25106 in k25103 in k25100 in k25097 in k25094 in k25091 in k25088 in k25085 in k25082 in k24943 in k24940 in k24937 in k24934 in k24878 in k24875 in k24872 in k24869 in k24866 in k24863 in k24860 in k24857 in k23555 in k23486 in k23293 in k23290 in k23185 in k23134 in k11783 in k10718 in k10715 in k7274 in k7271 in k6978 in k6975 in k6971 in k6680 in k6677 in k6674 in k6671 */
static void C_ccall f_36828(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[5],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_36828,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_36832,a[2]=t1,a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],tmp=(C_word)a,a+=5,tmp);
C_trace("ChickenBridge.scm: 486  nextid");
t3=((C_word*)t0)[2];
f_36759(t3,t2);}

/* k36830 in k36826 in do6535 in k36796 in body6516 in sprout in k36420 in k36417 in k36414 in k36411 in k36408 in k36405 in k36402 in k36399 in k35543 in k35540 in k35537 in k35534 in k35531 in k35528 in k35525 in k35522 in k35519 in k35516 in k35513 in k35510 in k35507 in k35504 in k35501 in k35498 in k35495 in k35492 in k35489 in k35486 in k30217 in k26697 in k26694 in k26691 in k26688 in k26263 in k26260 in k26257 in k26254 in k26251 in k25668 in k25665 in k25142 in k25139 in k25136 in k25133 in k25130 in k25127 in k25124 in k25121 in k25118 in k25115 in k25112 in k25109 in k25106 in k25103 in k25100 in k25097 in k25094 in k25091 in k25088 in k25085 in k25082 in k24943 in k24940 in k24937 in k24934 in k24878 in k24875 in k24872 in k24869 in k24866 in k24863 in k24860 in k24857 in k23555 in k23486 in k23293 in k23290 in k23185 in k23134 in k11783 in k10718 in k10715 in k7274 in k7271 in k6978 in k6975 in k6971 in k6680 in k6677 in k6674 in k6671 */
static void C_ccall f_36832(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 485  scheduler-sprout");
f_36642(((C_word*)t0)[4],((C_word*)t0)[3],((C_word*)t0)[2],t1);}

/* k36811 in do6535 in k36796 in body6516 in sprout in k36420 in k36417 in k36414 in k36411 in k36408 in k36405 in k36402 in k36399 in k35543 in k35540 in k35537 in k35534 in k35531 in k35528 in k35525 in k35522 in k35519 in k35516 in k35513 in k35510 in k35507 in k35504 in k35501 in k35498 in k35495 in k35492 in k35489 in k35486 in k30217 in k26697 in k26694 in k26691 in k26688 in k26263 in k26260 in k26257 in k26254 in k26251 in k25668 in k25665 in k25142 in k25139 in k25136 in k25133 in k25130 in k25127 in k25124 in k25121 in k25118 in k25115 in k25112 in k25109 in k25106 in k25103 in k25100 in k25097 in k25094 in k25091 in k25088 in k25085 in k25082 in k24943 in k24940 in k24937 in k24934 in k24878 in k24875 in k24872 in k24869 in k24866 in k24863 in k24860 in k24857 in k23555 in k23486 in k23293 in k23290 in k23185 in k23134 in k11783 in k10718 in k10715 in k7274 in k7271 in k6978 in k6975 in k6971 in k6680 in k6677 in k6674 in k6671 */
static void C_ccall f_36813(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word *a;
t2=(C_word)C_i_cdr(((C_word*)t0)[4]);
t3=((C_word*)((C_word*)t0)[3])[1];
f_36803(t3,((C_word*)t0)[2],t2);}

/* k36787 in body6516 in sprout in k36420 in k36417 in k36414 in k36411 in k36408 in k36405 in k36402 in k36399 in k35543 in k35540 in k35537 in k35534 in k35531 in k35528 in k35525 in k35522 in k35519 in k35516 in k35513 in k35510 in k35507 in k35504 in k35501 in k35498 in k35495 in k35492 in k35489 in k35486 in k30217 in k26697 in k26694 in k26691 in k26688 in k26263 in k26260 in k26257 in k26254 in k26251 in k25668 in k25665 in k25142 in k25139 in k25136 in k25133 in k25130 in k25127 in k25124 in k25121 in k25118 in k25115 in k25112 in k25109 in k25106 in k25103 in k25100 in k25097 in k25094 in k25091 in k25088 in k25085 in k25082 in k24943 in k24940 in k24937 in k24934 in k24878 in k24875 in k24872 in k24869 in k24866 in k24863 in k24860 in k24857 in k23555 in k23486 in k23293 in k23290 in k23185 in k23134 in k11783 in k10718 in k10715 in k7274 in k7271 in k6978 in k6975 in k6971 in k6680 in k6677 in k6674 in k6671 */
static void C_ccall f_36789(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 495  values");
C_values(2,0,((C_word*)t0)[2]);}

/* nextid in body6516 in sprout in k36420 in k36417 in k36414 in k36411 in k36408 in k36405 in k36402 in k36399 in k35543 in k35540 in k35537 in k35534 in k35531 in k35528 in k35525 in k35522 in k35519 in k35516 in k35513 in k35510 in k35507 in k35504 in k35501 in k35498 in k35495 in k35492 in k35489 in k35486 in k30217 in k26697 in k26694 in k26691 in k26688 in k26263 in k26260 in k26257 in k26254 in k26251 in k25668 in k25665 in k25142 in k25139 in k25136 in k25133 in k25130 in k25127 in k25124 in k25121 in k25118 in k25115 in k25112 in k25109 in k25106 in k25103 in k25100 in k25097 in k25094 in k25091 in k25088 in k25085 in k25082 in k24943 in k24940 in k24937 in k24934 in k24878 in k24875 in k24872 in k24869 in k24866 in k24863 in k24860 in k24857 in k23555 in k23486 in k23293 in k23290 in k23185 in k23134 in k11783 in k10718 in k10715 in k7274 in k7271 in k6978 in k6975 in k6971 in k6680 in k6677 in k6674 in k6671 */
static void C_fcall f_36759(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_36759,NULL,2,t0,t1);}
if(C_truep((C_word)C_i_pairp(((C_word*)((C_word*)t0)[2])[1]))){
t2=(C_word)C_i_car(((C_word*)((C_word*)t0)[2])[1]);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[2])[1]);
t4=(C_word)C_i_nullp(t3);
t5=(C_truep(t4)?(C_word)C_i_car(((C_word*)((C_word*)t0)[2])[1]):(C_word)C_i_cdr(((C_word*)((C_word*)t0)[2])[1]));
t6=C_mutate(((C_word *)((C_word*)t0)[2])+1,t5);
t7=t1;
((C_proc2)(void*)(*((C_word*)t7+1)))(2,t7,t2);}
else{
t2=t1;
((C_proc2)(void*)(*((C_word*)t2+1)))(2,t2,((C_word*)((C_word*)t0)[2])[1]);}}

/* nextstart in body6516 in sprout in k36420 in k36417 in k36414 in k36411 in k36408 in k36405 in k36402 in k36399 in k35543 in k35540 in k35537 in k35534 in k35531 in k35528 in k35525 in k35522 in k35519 in k35516 in k35513 in k35510 in k35507 in k35504 in k35501 in k35498 in k35495 in k35492 in k35489 in k35486 in k30217 in k26697 in k26694 in k26691 in k26688 in k26263 in k26260 in k26257 in k26254 in k26251 in k25668 in k25665 in k25142 in k25139 in k25136 in k25133 in k25130 in k25127 in k25124 in k25121 in k25118 in k25115 in k25112 in k25109 in k25106 in k25103 in k25100 in k25097 in k25094 in k25091 in k25088 in k25085 in k25082 in k24943 in k24940 in k24937 in k24934 in k24878 in k24875 in k24872 in k24869 in k24866 in k24863 in k24860 in k24857 in k23555 in k23486 in k23293 in k23290 in k23185 in k23134 in k11783 in k10718 in k10715 in k7274 in k7271 in k6978 in k6975 in k6971 in k6680 in k6677 in k6674 in k6671 */
static void C_fcall f_36731(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_36731,NULL,2,t0,t1);}
if(C_truep((C_word)C_i_pairp(((C_word*)((C_word*)t0)[2])[1]))){
t2=(C_word)C_i_car(((C_word*)((C_word*)t0)[2])[1]);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[2])[1]);
t4=(C_word)C_i_nullp(t3);
t5=(C_truep(t4)?(C_word)C_i_car(((C_word*)((C_word*)t0)[2])[1]):(C_word)C_i_cdr(((C_word*)((C_word*)t0)[2])[1]));
t6=C_mutate(((C_word *)((C_word*)t0)[2])+1,t5);
t7=t1;
((C_proc2)(void*)(*((C_word*)t7+1)))(2,t7,t2);}
else{
t2=t1;
((C_proc2)(void*)(*((C_word*)t2+1)))(2,t2,((C_word*)((C_word*)t0)[2])[1]);}}

/* load-sal-file in k36420 in k36417 in k36414 in k36411 in k36408 in k36405 in k36402 in k36399 in k35543 in k35540 in k35537 in k35534 in k35531 in k35528 in k35525 in k35522 in k35519 in k35516 in k35513 in k35510 in k35507 in k35504 in k35501 in k35498 in k35495 in k35492 in k35489 in k35486 in k30217 in k26697 in k26694 in k26691 in k26688 in k26263 in k26260 in k26257 in k26254 in k26251 in k25668 in k25665 in k25142 in k25139 in k25136 in k25133 in k25130 in k25127 in k25124 in k25121 in k25118 in k25115 in k25112 in k25109 in k25106 in k25103 in k25100 in k25097 in k25094 in k25091 in k25088 in k25085 in k25082 in k24943 in k24940 in k24937 in k24934 in k24878 in k24875 in k24872 in k24869 in k24866 in k24863 in k24860 in k24857 in k23555 in k23486 in k23293 in k23290 in k23185 in k23134 in k11783 in k10718 in k10715 in k7274 in k7271 in k6978 in k6975 in k6971 in k6680 in k6677 in k6674 in k6671 */
static void C_ccall f_36708(C_word c,C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word ab[3],*a=ab;
if(c!=3) C_bad_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr3,(void*)f_36708,3,t0,t1,t2);}
t3=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_36713,a[2]=((C_word)li600),tmp=(C_word)a,a+=3,tmp);
((C_proc3)(void*)(*((C_word*)t3+1)))(3,t3,t1,t2);}

/* f_36713 in load-sal-file in k36420 in k36417 in k36414 in k36411 in k36408 in k36405 in k36402 in k36399 in k35543 in k35540 in k35537 in k35534 in k35531 in k35528 in k35525 in k35522 in k35519 in k35516 in k35513 in k35510 in k35507 in k35504 in k35501 in k35498 in k35495 in k35492 in k35489 in k35486 in k30217 in k26697 in k26694 in k26691 in k26688 in k26263 in k26260 in k26257 in k26254 in k26251 in k25668 in k25665 in k25142 in k25139 in k25136 in k25133 in k25130 in k25127 in k25124 in k25121 in k25118 in k25115 in k25112 in k25109 in k25106 in k25103 in k25100 in k25097 in k25094 in k25091 in k25088 in k25085 in k25082 in k24943 in k24940 in k24937 in k24934 in k24878 in k24875 in k24872 in k24869 in k24866 in k24863 in k24860 in k24857 in k23555 in k23486 in k23293 in k23290 in k23185 in k23134 in k11783 in k10718 in k10715 in k7274 in k7271 in k6978 in k6975 in k6971 in k6680 in k6677 in k6674 in k6671 */
static void C_ccall f_36713(C_word c,C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word t5;
C_word ab[3],*a=ab;
if(c!=3) C_bad_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr3,(void*)f_36713,3,t0,t1,t2);}
t3=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_36718,a[2]=t1,tmp=(C_word)a,a+=3,tmp);
if(C_truep(t2)){
t4=(C_word)C_i_foreign_string_argumentp(t2);
C_trace("##sys#make-c-string");
t5=C_retrieve(lf[46]);
((C_proc3)C_retrieve_proc(t5))(3,t5,t3,t4);}
else{
t4=t3;
f_36718(2,t4,C_SCHEME_FALSE);}}

/* k36716 */
static void C_ccall f_36718(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
t2=((C_word*)t0)[2];
((C_proc2)(void*)(*((C_word*)t2+1)))(2,t2,(C_word)stub6507(C_SCHEME_UNDEFINED,t1));}

/* scheduler-stop in k36420 in k36417 in k36414 in k36411 in k36408 in k36405 in k36402 in k36399 in k35543 in k35540 in k35537 in k35534 in k35531 in k35528 in k35525 in k35522 in k35519 in k35516 in k35513 in k35510 in k35507 in k35504 in k35501 in k35498 in k35495 in k35492 in k35489 in k35486 in k30217 in k26697 in k26694 in k26691 in k26688 in k26263 in k26260 in k26257 in k26254 in k26251 in k25668 in k25665 in k25142 in k25139 in k25136 in k25133 in k25130 in k25127 in k25124 in k25121 in k25118 in k25115 in k25112 in k25109 in k25106 in k25103 in k25100 in k25097 in k25094 in k25091 in k25088 in k25085 in k25082 in k24943 in k24940 in k24937 in k24934 in k24878 in k24875 in k24872 in k24869 in k24866 in k24863 in k24860 in k24857 in k23555 in k23486 in k23293 in k23290 in k23185 in k23134 in k11783 in k10718 in k10715 in k7274 in k7271 in k6978 in k6975 in k6971 in k6680 in k6677 in k6674 in k6671 */
static void C_fcall f_36686(C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word ab[4],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_36686,NULL,2,t1,t2);}
t3=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_36690,a[2]=t1,a[3]=t2,tmp=(C_word)a,a+=4,tmp);
C_trace("##sys#gc");
t4=C_retrieve(lf[813]);
((C_proc3)C_retrieve_proc(t4))(3,t4,t3,C_SCHEME_FALSE);}

/* k36688 in scheduler-stop in k36420 in k36417 in k36414 in k36411 in k36408 in k36405 in k36402 in k36399 in k35543 in k35540 in k35537 in k35534 in k35531 in k35528 in k35525 in k35522 in k35519 in k35516 in k35513 in k35510 in k35507 in k35504 in k35501 in k35498 in k35495 in k35492 in k35489 in k35486 in k30217 in k26697 in k26694 in k26691 in k26688 in k26263 in k26260 in k26257 in k26254 in k26251 in k25668 in k25665 in k25142 in k25139 in k25136 in k25133 in k25130 in k25127 in k25124 in k25121 in k25118 in k25115 in k25112 in k25109 in k25106 in k25103 in k25100 in k25097 in k25094 in k25091 in k25088 in k25085 in k25082 in k24943 in k24940 in k24937 in k24934 in k24878 in k24875 in k24872 in k24869 in k24866 in k24863 in k24860 in k24857 in k23555 in k23486 in k23293 in k23290 in k23185 in k23134 in k11783 in k10718 in k10715 in k7274 in k7271 in k6978 in k6975 in k6971 in k6680 in k6677 in k6674 in k6671 */
static void C_ccall f_36690(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[11],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_36690,2,t0,t1);}
t2=(C_word)C_a_i_bytevector(&a,1,C_fix(6));
t3=(C_word)C_i_foreign_fixnum_argumentp(((C_word*)t0)[3]);
t4=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)stub6496,a[2]=((C_word)li598),tmp=(C_word)a,a+=3,tmp);
((C_proc4)C_retrieve_proc(t4))(4,t4,((C_word*)t0)[2],t2,t3);}

/* scheduler-sprout in k36420 in k36417 in k36414 in k36411 in k36408 in k36405 in k36402 in k36399 in k35543 in k35540 in k35537 in k35534 in k35531 in k35528 in k35525 in k35522 in k35519 in k35516 in k35513 in k35510 in k35507 in k35504 in k35501 in k35498 in k35495 in k35492 in k35489 in k35486 in k30217 in k26697 in k26694 in k26691 in k26688 in k26263 in k26260 in k26257 in k26254 in k26251 in k25668 in k25665 in k25142 in k25139 in k25136 in k25133 in k25130 in k25127 in k25124 in k25121 in k25118 in k25115 in k25112 in k25109 in k25106 in k25103 in k25100 in k25097 in k25094 in k25091 in k25088 in k25085 in k25082 in k24943 in k24940 in k24937 in k24934 in k24878 in k24875 in k24872 in k24869 in k24866 in k24863 in k24860 in k24857 in k23555 in k23486 in k23293 in k23290 in k23185 in k23134 in k11783 in k10718 in k10715 in k7274 in k7271 in k6978 in k6975 in k6971 in k6680 in k6677 in k6674 in k6671 */
static void C_fcall f_36642(C_word t1,C_word t2,C_word t3,C_word t4){
C_word tmp;
C_word t5;
C_word t6;
C_word ab[6],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_36642,NULL,4,t1,t2,t3,t4);}
t5=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_36646,a[2]=t2,a[3]=t1,a[4]=t4,a[5]=t3,tmp=(C_word)a,a+=6,tmp);
C_trace("##sys#gc");
t6=C_retrieve(lf[813]);
((C_proc3)C_retrieve_proc(t6))(3,t6,t5,C_SCHEME_FALSE);}

/* k36644 in scheduler-sprout in k36420 in k36417 in k36414 in k36411 in k36408 in k36405 in k36402 in k36399 in k35543 in k35540 in k35537 in k35534 in k35531 in k35528 in k35525 in k35522 in k35519 in k35516 in k35513 in k35510 in k35507 in k35504 in k35501 in k35498 in k35495 in k35492 in k35489 in k35486 in k30217 in k26697 in k26694 in k26691 in k26688 in k26263 in k26260 in k26257 in k26254 in k26251 in k25668 in k25665 in k25142 in k25139 in k25136 in k25133 in k25130 in k25127 in k25124 in k25121 in k25118 in k25115 in k25112 in k25109 in k25106 in k25103 in k25100 in k25097 in k25094 in k25091 in k25088 in k25085 in k25082 in k24943 in k24940 in k24937 in k24934 in k24878 in k24875 in k24872 in k24869 in k24866 in k24863 in k24860 in k24857 in k23555 in k23486 in k23293 in k23290 in k23185 in k23134 in k11783 in k10718 in k10715 in k7274 in k7271 in k6978 in k6975 in k6971 in k6680 in k6677 in k6674 in k6671 */
static void C_ccall f_36646(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[11],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_36646,2,t0,t1);}
t2=(C_word)C_a_i_bytevector(&a,1,C_fix(6));
t3=(C_word)C_i_foreign_flonum_argumentp(((C_word*)t0)[5]);
t4=(C_word)C_i_foreign_fixnum_argumentp(((C_word*)t0)[4]);
t5=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)stub6476,a[2]=((C_word)li596),tmp=(C_word)a,a+=3,tmp);
((C_proc6)C_retrieve_proc(t5))(6,t5,((C_word*)t0)[3],t2,((C_word*)t0)[2],t3,t4);}

/* print-error in k36420 in k36417 in k36414 in k36411 in k36408 in k36405 in k36402 in k36399 in k35543 in k35540 in k35537 in k35534 in k35531 in k35528 in k35525 in k35522 in k35519 in k35516 in k35513 in k35510 in k35507 in k35504 in k35501 in k35498 in k35495 in k35492 in k35489 in k35486 in k30217 in k26697 in k26694 in k26691 in k26688 in k26263 in k26260 in k26257 in k26254 in k26251 in k25668 in k25665 in k25142 in k25139 in k25136 in k25133 in k25130 in k25127 in k25124 in k25121 in k25118 in k25115 in k25112 in k25109 in k25106 in k25103 in k25100 in k25097 in k25094 in k25091 in k25088 in k25085 in k25082 in k24943 in k24940 in k24937 in k24934 in k24878 in k24875 in k24872 in k24869 in k24866 in k24863 in k24860 in k24857 in k23555 in k23486 in k23293 in k23290 in k23185 in k23134 in k11783 in k10718 in k10715 in k7274 in k7271 in k6978 in k6975 in k6971 in k6680 in k6677 in k6674 in k6671 */
static void C_ccall f_36628(C_word c,C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word t5;
C_word ab[3],*a=ab;
if(c!=3) C_bad_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr3,(void*)f_36628,3,t0,t1,t2);}
t3=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_36633,a[2]=t1,tmp=(C_word)a,a+=3,tmp);
if(C_truep(t2)){
t4=(C_word)C_i_foreign_string_argumentp(t2);
C_trace("##sys#make-c-string");
t5=C_retrieve(lf[46]);
((C_proc3)C_retrieve_proc(t5))(3,t5,t3,t4);}
else{
t4=t3;
f_36633(2,t4,C_SCHEME_FALSE);}}

/* k36631 in print-error in k36420 in k36417 in k36414 in k36411 in k36408 in k36405 in k36402 in k36399 in k35543 in k35540 in k35537 in k35534 in k35531 in k35528 in k35525 in k35522 in k35519 in k35516 in k35513 in k35510 in k35507 in k35504 in k35501 in k35498 in k35495 in k35492 in k35489 in k35486 in k30217 in k26697 in k26694 in k26691 in k26688 in k26263 in k26260 in k26257 in k26254 in k26251 in k25668 in k25665 in k25142 in k25139 in k25136 in k25133 in k25130 in k25127 in k25124 in k25121 in k25118 in k25115 in k25112 in k25109 in k25106 in k25103 in k25100 in k25097 in k25094 in k25091 in k25088 in k25085 in k25082 in k24943 in k24940 in k24937 in k24934 in k24878 in k24875 in k24872 in k24869 in k24866 in k24863 in k24860 in k24857 in k23555 in k23486 in k23293 in k23290 in k23185 in k23134 in k11783 in k10718 in k10715 in k7274 in k7271 in k6978 in k6975 in k6971 in k6680 in k6677 in k6674 in k6671 */
static void C_ccall f_36633(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
t2=((C_word*)t0)[2];
((C_proc2)(void*)(*((C_word*)t2+1)))(2,t2,(C_word)stub6468(C_SCHEME_UNDEFINED,t1));}

/* print-message in k36420 in k36417 in k36414 in k36411 in k36408 in k36405 in k36402 in k36399 in k35543 in k35540 in k35537 in k35534 in k35531 in k35528 in k35525 in k35522 in k35519 in k35516 in k35513 in k35510 in k35507 in k35504 in k35501 in k35498 in k35495 in k35492 in k35489 in k35486 in k30217 in k26697 in k26694 in k26691 in k26688 in k26263 in k26260 in k26257 in k26254 in k26251 in k25668 in k25665 in k25142 in k25139 in k25136 in k25133 in k25130 in k25127 in k25124 in k25121 in k25118 in k25115 in k25112 in k25109 in k25106 in k25103 in k25100 in k25097 in k25094 in k25091 in k25088 in k25085 in k25082 in k24943 in k24940 in k24937 in k24934 in k24878 in k24875 in k24872 in k24869 in k24866 in k24863 in k24860 in k24857 in k23555 in k23486 in k23293 in k23290 in k23185 in k23134 in k11783 in k10718 in k10715 in k7274 in k7271 in k6978 in k6975 in k6971 in k6680 in k6677 in k6674 in k6671 */
static void C_ccall f_36614(C_word c,C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word t5;
C_word ab[3],*a=ab;
if(c!=3) C_bad_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr3,(void*)f_36614,3,t0,t1,t2);}
t3=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_36619,a[2]=t1,tmp=(C_word)a,a+=3,tmp);
if(C_truep(t2)){
t4=(C_word)C_i_foreign_string_argumentp(t2);
C_trace("##sys#make-c-string");
t5=C_retrieve(lf[46]);
((C_proc3)C_retrieve_proc(t5))(3,t5,t3,t4);}
else{
t4=t3;
f_36619(2,t4,C_SCHEME_FALSE);}}

/* k36617 in print-message in k36420 in k36417 in k36414 in k36411 in k36408 in k36405 in k36402 in k36399 in k35543 in k35540 in k35537 in k35534 in k35531 in k35528 in k35525 in k35522 in k35519 in k35516 in k35513 in k35510 in k35507 in k35504 in k35501 in k35498 in k35495 in k35492 in k35489 in k35486 in k30217 in k26697 in k26694 in k26691 in k26688 in k26263 in k26260 in k26257 in k26254 in k26251 in k25668 in k25665 in k25142 in k25139 in k25136 in k25133 in k25130 in k25127 in k25124 in k25121 in k25118 in k25115 in k25112 in k25109 in k25106 in k25103 in k25100 in k25097 in k25094 in k25091 in k25088 in k25085 in k25082 in k24943 in k24940 in k24937 in k24934 in k24878 in k24875 in k24872 in k24869 in k24866 in k24863 in k24860 in k24857 in k23555 in k23486 in k23293 in k23290 in k23185 in k23134 in k11783 in k10718 in k10715 in k7274 in k7271 in k6978 in k6975 in k6971 in k6680 in k6677 in k6674 in k6671 */
static void C_ccall f_36619(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
t2=((C_word*)t0)[2];
((C_proc2)(void*)(*((C_word*)t2+1)))(2,t2,(C_word)stub6462(C_SCHEME_UNDEFINED,t1));}

/* cm-logo in k36420 in k36417 in k36414 in k36411 in k36408 in k36405 in k36402 in k36399 in k35543 in k35540 in k35537 in k35534 in k35531 in k35528 in k35525 in k35522 in k35519 in k35516 in k35513 in k35510 in k35507 in k35504 in k35501 in k35498 in k35495 in k35492 in k35489 in k35486 in k30217 in k26697 in k26694 in k26691 in k26688 in k26263 in k26260 in k26257 in k26254 in k26251 in k25668 in k25665 in k25142 in k25139 in k25136 in k25133 in k25130 in k25127 in k25124 in k25121 in k25118 in k25115 in k25112 in k25109 in k25106 in k25103 in k25100 in k25097 in k25094 in k25091 in k25088 in k25085 in k25082 in k24943 in k24940 in k24937 in k24934 in k24878 in k24875 in k24872 in k24869 in k24866 in k24863 in k24860 in k24857 in k23555 in k23486 in k23293 in k23290 in k23185 in k23134 in k11783 in k10718 in k10715 in k7274 in k7271 in k6978 in k6975 in k6971 in k6680 in k6677 in k6674 in k6671 */
static void C_ccall f_36424(C_word c,C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word t5;
C_word ab[7],*a=ab;
if(c!=3) C_bad_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr3,(void*)f_36424,3,t0,t1,t2);}
t3=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_36478,a[2]=t1,tmp=(C_word)a,a+=3,tmp);
t4=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_36485,a[2]=t3,a[3]=t2,tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 399  make-string");
t5=*((C_word*)lf[407]+1);
((C_proc3)C_retrieve_proc(t5))(3,t5,t4,C_fix(15));}

/* k36483 in cm-logo in k36420 in k36417 in k36414 in k36411 in k36408 in k36405 in k36402 in k36399 in k35543 in k35540 in k35537 in k35534 in k35531 in k35528 in k35525 in k35522 in k35519 in k35516 in k35513 in k35510 in k35507 in k35504 in k35501 in k35498 in k35495 in k35492 in k35489 in k35486 in k30217 in k26697 in k26694 in k26691 in k26688 in k26263 in k26260 in k26257 in k26254 in k26251 in k25668 in k25665 in k25142 in k25139 in k25136 in k25133 in k25130 in k25127 in k25124 in k25121 in k25118 in k25115 in k25112 in k25109 in k25106 in k25103 in k25100 in k25097 in k25094 in k25091 in k25088 in k25085 in k25082 in k24943 in k24940 in k24937 in k24934 in k24878 in k24875 in k24872 in k24869 in k24866 in k24863 in k24860 in k24857 in k23555 in k23486 in k23293 in k23290 in k23185 in k23134 in k11783 in k10718 in k10715 in k7274 in k7271 in k6978 in k6975 in k6971 in k6680 in k6677 in k6674 in k6671 */
static void C_ccall f_36485(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_36485,2,t0,t1);}
t2=C_SCHEME_UNDEFINED;
t3=(*a=C_VECTOR_TYPE|1,a[1]=t2,tmp=(C_word)a,a+=2,tmp);
t4=C_set_block_item(t3,0,(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_36487,a[2]=((C_word*)t0)[3],a[3]=t3,a[4]=((C_word)li592),tmp=(C_word)a,a+=5,tmp));
t5=((C_word*)t3)[1];
f_36487(t5,((C_word*)t0)[2],lf[811],t1,C_fix(0));}

/* do6436 in k36483 in cm-logo in k36420 in k36417 in k36414 in k36411 in k36408 in k36405 in k36402 in k36399 in k35543 in k35540 in k35537 in k35534 in k35531 in k35528 in k35525 in k35522 in k35519 in k35516 in k35513 in k35510 in k35507 in k35504 in k35501 in k35498 in k35495 in k35492 in k35489 in k35486 in k30217 in k26697 in k26694 in k26691 in k26688 in k26263 in k26260 in k26257 in k26254 in k26251 in k25668 in k25665 in k25142 in k25139 in k25136 in k25133 in k25130 in k25127 in k25124 in k25121 in k25118 in k25115 in k25112 in k25109 in k25106 in k25103 in k25100 in k25097 in k25094 in k25091 in k25088 in k25085 in k25082 in k24943 in k24940 in k24937 in k24934 in k24878 in k24875 in k24872 in k24869 in k24866 in k24863 in k24860 in k24857 in k23555 in k23486 in k23293 in k23290 in k23185 in k23134 in k11783 in k10718 in k10715 in k7274 in k7271 in k6978 in k6975 in k6971 in k6680 in k6677 in k6674 in k6671 */
static void C_fcall f_36487(C_word t0,C_word t1,C_word t2,C_word t3,C_word t4){
C_word tmp;
C_word t5;
C_word t6;
C_word ab[8],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_36487,NULL,5,t0,t1,t2,t3,t4);}
if(C_truep((C_word)C_i_nequalp(t4,C_fix(7)))){
t5=t1;
((C_proc2)(void*)(*((C_word*)t5+1)))(2,t5,C_SCHEME_FALSE);}
else{
t5=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_36497,a[2]=((C_word*)t0)[2],a[3]=t3,a[4]=t2,a[5]=t1,a[6]=((C_word*)t0)[3],a[7]=t4,tmp=(C_word)a,a+=8,tmp);
if(C_truep((C_word)C_i_nequalp(t4,C_fix(0)))){
C_trace("ChickenBridge.scm: 402  printf");
t6=C_retrieve(lf[475]);
((C_proc3)C_retrieve_proc(t6))(3,t6,t5,t2);}
else{
t6=t5;
f_36497(2,t6,C_SCHEME_UNDEFINED);}}}

/* k36495 in do6436 in k36483 in cm-logo in k36420 in k36417 in k36414 in k36411 in k36408 in k36405 in k36402 in k36399 in k35543 in k35540 in k35537 in k35534 in k35531 in k35528 in k35525 in k35522 in k35519 in k35516 in k35513 in k35510 in k35507 in k35504 in k35501 in k35498 in k35495 in k35492 in k35489 in k35486 in k30217 in k26697 in k26694 in k26691 in k26688 in k26263 in k26260 in k26257 in k26254 in k26251 in k25668 in k25665 in k25142 in k25139 in k25136 in k25133 in k25130 in k25127 in k25124 in k25121 in k25118 in k25115 in k25112 in k25109 in k25106 in k25103 in k25100 in k25097 in k25094 in k25091 in k25088 in k25085 in k25082 in k24943 in k24940 in k24937 in k24934 in k24878 in k24875 in k24872 in k24869 in k24866 in k24863 in k24860 in k24857 in k23555 in k23486 in k23293 in k23290 in k23185 in k23134 in k11783 in k10718 in k10715 in k7274 in k7271 in k6978 in k6975 in k6971 in k6680 in k6677 in k6674 in k6671 */
static void C_ccall f_36497(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word ab[19],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_36497,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_36500,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_36514,a[2]=t2,tmp=(C_word)a,a+=3,tmp);
t4=C_SCHEME_UNDEFINED;
t5=(*a=C_VECTOR_TYPE|1,a[1]=t4,tmp=(C_word)a,a+=2,tmp);
t6=C_set_block_item(t5,0,(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_36516,a[2]=t5,a[3]=((C_word*)t0)[2],a[4]=((C_word*)t0)[3],a[5]=((C_word*)t0)[7],a[6]=((C_word)li591),tmp=(C_word)a,a+=7,tmp));
t7=((C_word*)t5)[1];
f_36516(t7,t3,C_fix(0));}

/* do6450 in k36495 in do6436 in k36483 in cm-logo in k36420 in k36417 in k36414 in k36411 in k36408 in k36405 in k36402 in k36399 in k35543 in k35540 in k35537 in k35534 in k35531 in k35528 in k35525 in k35522 in k35519 in k35516 in k35513 in k35510 in k35507 in k35504 in k35501 in k35498 in k35495 in k35492 in k35489 in k35486 in k30217 in k26697 in k26694 in k26691 in k26688 in k26263 in k26260 in k26257 in k26254 in k26251 in k25668 in k25665 in k25142 in k25139 in k25136 in k25133 in k25130 in k25127 in k25124 in k25121 in k25118 in k25115 in k25112 in k25109 in k25106 in k25103 in k25100 in k25097 in k25094 in k25091 in k25088 in k25085 in k25082 in k24943 in k24940 in k24937 in k24934 in k24878 in k24875 in k24872 in k24869 in k24866 in k24863 in k24860 in k24857 in k23555 in k23486 in k23293 in k23290 in k23185 in k23134 in k11783 in k10718 in k10715 in k7274 in k7271 in k6978 in k6975 in k6971 in k6680 in k6677 in k6674 in k6671 */
static void C_fcall f_36516(C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word t14;
C_word t15;
C_word t16;
C_word t17;
C_word ab[38],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_36516,NULL,3,t0,t1,t2);}
if(C_truep((C_word)C_i_nequalp(t2,C_fix(15)))){
if(C_truep((C_word)C_i_nequalp(((C_word*)t0)[5],C_fix(3)))){
t3=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_36536,a[2]=((C_word*)t0)[4],a[3]=t1,tmp=(C_word)a,a+=4,tmp);
t4=((C_word*)t0)[3];
t5=(*a=C_VECTOR_TYPE|1,a[1]=t4,tmp=(C_word)a,a+=2,tmp);
t6=C_fix(0);
t7=(*a=C_VECTOR_TYPE|1,a[1]=t6,tmp=(C_word)a,a+=2,tmp);
t8=C_fix(0);
t9=(*a=C_VECTOR_TYPE|1,a[1]=t8,tmp=(C_word)a,a+=2,tmp);
t10=C_fix(0);
t11=(*a=C_VECTOR_TYPE|1,a[1]=t10,tmp=(C_word)a,a+=2,tmp);
t12=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_36471,a[2]=t3,a[3]=t11,a[4]=t9,a[5]=t5,a[6]=t7,tmp=(C_word)a,a+=7,tmp);
t13=(C_word)C_a_i_divide(&a,2,((C_word*)t5)[1],C_fix(10000));
C_trace("ChickenBridge.scm: 391  floor");
t14=*((C_word*)lf[201]+1);
((C_proc3)C_retrieve_proc(t14))(3,t14,t12,t13);}
else{
C_trace("ChickenBridge.scm: 407  string-append");
t3=*((C_word*)lf[53]+1);
((C_proc4)C_retrieve_proc(t3))(4,t3,t1,((C_word*)t0)[4],lf[810]);}}
else{
t3=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_36553,a[2]=t1,a[3]=((C_word*)t0)[2],a[4]=t2,a[5]=((C_word*)t0)[4],tmp=(C_word)a,a+=6,tmp);
t4=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_36556,a[2]=((C_word*)t0)[5],a[3]=t2,a[4]=t3,tmp=(C_word)a,a+=5,tmp);
t5=(C_word)C_a_i_minus(&a,2,t2,((C_word*)t0)[5]);
C_trace("ChickenBridge.scm: 409  <=");
C_less_or_equal_p(5,0,t4,C_fix(2),t5,C_fix(4));}}

/* k36554 in do6450 in k36495 in do6436 in k36483 in cm-logo in k36420 in k36417 in k36414 in k36411 in k36408 in k36405 in k36402 in k36399 in k35543 in k35540 in k35537 in k35534 in k35531 in k35528 in k35525 in k35522 in k35519 in k35516 in k35513 in k35510 in k35507 in k35504 in k35501 in k35498 in k35495 in k35492 in k35489 in k35486 in k30217 in k26697 in k26694 in k26691 in k26688 in k26263 in k26260 in k26257 in k26254 in k26251 in k25668 in k25665 in k25142 in k25139 in k25136 in k25133 in k25130 in k25127 in k25124 in k25121 in k25118 in k25115 in k25112 in k25109 in k25106 in k25103 in k25100 in k25097 in k25094 in k25091 in k25088 in k25085 in k25082 in k24943 in k24940 in k24937 in k24934 in k24878 in k24875 in k24872 in k24869 in k24866 in k24863 in k24860 in k24857 in k23555 in k23486 in k23293 in k23290 in k23185 in k23134 in k11783 in k10718 in k10715 in k7274 in k7271 in k6978 in k6975 in k6971 in k6680 in k6677 in k6674 in k6671 */
static void C_ccall f_36556(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_36556,2,t0,t1);}
if(C_truep(t1)){
t2=((C_word*)t0)[4];
f_36553(t2,C_make_character(92));}
else{
t2=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_36598,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[3],tmp=(C_word)a,a+=5,tmp);
t3=(C_word)C_a_i_plus(&a,2,C_fix(13),((C_word*)t0)[2]);
C_trace("ChickenBridge.scm: 410  modulo");
t4=*((C_word*)lf[159]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,t3,C_fix(15));}}

/* k36596 in k36554 in do6450 in k36495 in do6436 in k36483 in cm-logo in k36420 in k36417 in k36414 in k36411 in k36408 in k36405 in k36402 in k36399 in k35543 in k35540 in k35537 in k35534 in k35531 in k35528 in k35525 in k35522 in k35519 in k35516 in k35513 in k35510 in k35507 in k35504 in k35501 in k35498 in k35495 in k35492 in k35489 in k35486 in k30217 in k26697 in k26694 in k26691 in k26688 in k26263 in k26260 in k26257 in k26254 in k26251 in k25668 in k25665 in k25142 in k25139 in k25136 in k25133 in k25130 in k25127 in k25124 in k25121 in k25118 in k25115 in k25112 in k25109 in k25106 in k25103 in k25100 in k25097 in k25094 in k25091 in k25088 in k25085 in k25082 in k24943 in k24940 in k24937 in k24934 in k24878 in k24875 in k24872 in k24869 in k24866 in k24863 in k24860 in k24857 in k23555 in k23486 in k23293 in k23290 in k23185 in k23134 in k11783 in k10718 in k10715 in k7274 in k7271 in k6978 in k6975 in k6971 in k6680 in k6677 in k6674 in k6671 */
static void C_ccall f_36598(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[13],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_36598,2,t0,t1);}
t2=(C_word)C_a_i_minus(&a,2,C_fix(4),t1);
t3=(C_word)C_a_i_minus(&a,2,((C_word*)t0)[4],t2);
if(C_truep((C_word)C_i_nequalp(t3,C_fix(1)))){
t4=((C_word*)t0)[3];
f_36553(t4,C_make_character(47));}
else{
t4=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_36568,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[3],tmp=(C_word)a,a+=5,tmp);
C_trace("ChickenBridge.scm: 412  <=");
C_less_or_equal_p(5,0,t4,C_fix(1),((C_word*)t0)[2],C_fix(5));}}

/* k36566 in k36596 in k36554 in do6450 in k36495 in do6436 in k36483 in cm-logo in k36420 in k36417 in k36414 in k36411 in k36408 in k36405 in k36402 in k36399 in k35543 in k35540 in k35537 in k35534 in k35531 in k35528 in k35525 in k35522 in k35519 in k35516 in k35513 in k35510 in k35507 in k35504 in k35501 in k35498 in k35495 in k35492 in k35489 in k35486 in k30217 in k26697 in k26694 in k26691 in k26688 in k26263 in k26260 in k26257 in k26254 in k26251 in k25668 in k25665 in k25142 in k25139 in k25136 in k25133 in k25130 in k25127 in k25124 in k25121 in k25118 in k25115 in k25112 in k25109 in k25106 in k25103 in k25100 in k25097 in k25094 in k25091 in k25088 in k25085 in k25082 in k24943 in k24940 in k24937 in k24934 in k24878 in k24875 in k24872 in k24869 in k24866 in k24863 in k24860 in k24857 in k23555 in k23486 in k23293 in k23290 in k23185 in k23134 in k11783 in k10718 in k10715 in k7274 in k7271 in k6978 in k6975 in k6971 in k6680 in k6677 in k6674 in k6671 */
static void C_ccall f_36568(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[12],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_36568,2,t0,t1);}
if(C_truep(t1)){
t2=((C_word*)t0)[4];
f_36553(t2,C_make_character(45));}
else{
t2=(C_word)C_a_i_minus(&a,2,((C_word*)t0)[3],C_fix(6));
t3=(C_word)C_a_i_minus(&a,2,((C_word*)t0)[2],C_fix(3));
t4=(C_word)C_a_i_times(&a,2,t2,t3);
t5=(C_word)C_i_nequalp(t4,C_fix(15));
t6=((C_word*)t0)[4];
f_36553(t6,(C_truep(t5)?C_make_character(47):C_make_character(32)));}}

/* k36551 in do6450 in k36495 in do6436 in k36483 in cm-logo in k36420 in k36417 in k36414 in k36411 in k36408 in k36405 in k36402 in k36399 in k35543 in k35540 in k35537 in k35534 in k35531 in k35528 in k35525 in k35522 in k35519 in k35516 in k35513 in k35510 in k35507 in k35504 in k35501 in k35498 in k35495 in k35492 in k35489 in k35486 in k30217 in k26697 in k26694 in k26691 in k26688 in k26263 in k26260 in k26257 in k26254 in k26251 in k25668 in k25665 in k25142 in k25139 in k25136 in k25133 in k25130 in k25127 in k25124 in k25121 in k25118 in k25115 in k25112 in k25109 in k25106 in k25103 in k25100 in k25097 in k25094 in k25091 in k25088 in k25085 in k25082 in k24943 in k24940 in k24937 in k24934 in k24878 in k24875 in k24872 in k24869 in k24866 in k24863 in k24860 in k24857 in k23555 in k23486 in k23293 in k23290 in k23185 in k23134 in k11783 in k10718 in k10715 in k7274 in k7271 in k6978 in k6975 in k6971 in k6680 in k6677 in k6674 in k6671 */
static void C_fcall f_36553(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[4],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_36553,NULL,2,t0,t1);}
t2=(C_word)C_i_string_set(((C_word*)t0)[5],((C_word*)t0)[4],t1);
t3=(C_word)C_a_i_plus(&a,2,((C_word*)t0)[4],C_fix(1));
t4=((C_word*)((C_word*)t0)[3])[1];
f_36516(t4,((C_word*)t0)[2],t3);}

/* k36469 in do6450 in k36495 in do6436 in k36483 in cm-logo in k36420 in k36417 in k36414 in k36411 in k36408 in k36405 in k36402 in k36399 in k35543 in k35540 in k35537 in k35534 in k35531 in k35528 in k35525 in k35522 in k35519 in k35516 in k35513 in k35510 in k35507 in k35504 in k35501 in k35498 in k35495 in k35492 in k35489 in k35486 in k30217 in k26697 in k26694 in k26691 in k26688 in k26263 in k26260 in k26257 in k26254 in k26251 in k25668 in k25665 in k25142 in k25139 in k25136 in k25133 in k25130 in k25127 in k25124 in k25121 in k25118 in k25115 in k25112 in k25109 in k25106 in k25103 in k25100 in k25097 in k25094 in k25091 in k25088 in k25085 in k25082 in k24943 in k24940 in k24937 in k24934 in k24878 in k24875 in k24872 in k24869 in k24866 in k24863 in k24860 in k24857 in k23555 in k23486 in k23293 in k23290 in k23185 in k23134 in k11783 in k10718 in k10715 in k7274 in k7271 in k6978 in k6975 in k6971 in k6680 in k6677 in k6674 in k6671 */
static void C_ccall f_36471(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_36471,2,t0,t1);}
t2=(C_word)C_i_inexact_to_exact(t1);
t3=C_mutate(((C_word *)((C_word*)t0)[6])+1,t2);
t4=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_36436,a[2]=((C_word*)t0)[6],a[3]=((C_word*)t0)[2],a[4]=((C_word*)t0)[3],a[5]=((C_word*)t0)[4],a[6]=((C_word*)t0)[5],tmp=(C_word)a,a+=7,tmp);
C_trace("ChickenBridge.scm: 392  modulo");
t5=*((C_word*)lf[159]+1);
((C_proc4)C_retrieve_proc(t5))(4,t5,t4,((C_word*)((C_word*)t0)[5])[1],C_fix(10000));}

/* k36434 in k36469 in do6450 in k36495 in do6436 in k36483 in cm-logo in k36420 in k36417 in k36414 in k36411 in k36408 in k36405 in k36402 in k36399 in k35543 in k35540 in k35537 in k35534 in k35531 in k35528 in k35525 in k35522 in k35519 in k35516 in k35513 in k35510 in k35507 in k35504 in k35501 in k35498 in k35495 in k35492 in k35489 in k35486 in k30217 in k26697 in k26694 in k26691 in k26688 in k26263 in k26260 in k26257 in k26254 in k26251 in k25668 in k25665 in k25142 in k25139 in k25136 in k25133 in k25130 in k25127 in k25124 in k25121 in k25118 in k25115 in k25112 in k25109 in k25106 in k25103 in k25100 in k25097 in k25094 in k25091 in k25088 in k25085 in k25082 in k24943 in k24940 in k24937 in k24934 in k24878 in k24875 in k24872 in k24869 in k24866 in k24863 in k24860 in k24857 in k23555 in k23486 in k23293 in k23290 in k23185 in k23134 in k11783 in k10718 in k10715 in k7274 in k7271 in k6978 in k6975 in k6971 in k6680 in k6677 in k6674 in k6671 */
static void C_ccall f_36436(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[11],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_36436,2,t0,t1);}
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_36463,a[2]=((C_word*)t0)[6],a[3]=((C_word*)t0)[2],a[4]=((C_word*)t0)[3],a[5]=((C_word*)t0)[4],a[6]=((C_word*)t0)[5],tmp=(C_word)a,a+=7,tmp);
t4=(C_word)C_a_i_divide(&a,2,((C_word*)((C_word*)t0)[6])[1],C_fix(100));
C_trace("ChickenBridge.scm: 393  floor");
t5=*((C_word*)lf[201]+1);
((C_proc3)C_retrieve_proc(t5))(3,t5,t3,t4);}

/* k36461 in k36434 in k36469 in do6450 in k36495 in do6436 in k36483 in cm-logo in k36420 in k36417 in k36414 in k36411 in k36408 in k36405 in k36402 in k36399 in k35543 in k35540 in k35537 in k35534 in k35531 in k35528 in k35525 in k35522 in k35519 in k35516 in k35513 in k35510 in k35507 in k35504 in k35501 in k35498 in k35495 in k35492 in k35489 in k35486 in k30217 in k26697 in k26694 in k26691 in k26688 in k26263 in k26260 in k26257 in k26254 in k26251 in k25668 in k25665 in k25142 in k25139 in k25136 in k25133 in k25130 in k25127 in k25124 in k25121 in k25118 in k25115 in k25112 in k25109 in k25106 in k25103 in k25100 in k25097 in k25094 in k25091 in k25088 in k25085 in k25082 in k24943 in k24940 in k24937 in k24934 in k24878 in k24875 in k24872 in k24869 in k24866 in k24863 in k24860 in k24857 in k23555 in k23486 in k23293 in k23290 in k23185 in k23134 in k11783 in k10718 in k10715 in k7274 in k7271 in k6978 in k6975 in k6971 in k6680 in k6677 in k6674 in k6671 */
static void C_ccall f_36463(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[6],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_36463,2,t0,t1);}
t2=(C_word)C_i_inexact_to_exact(t1);
t3=C_mutate(((C_word *)((C_word*)t0)[6])+1,t2);
t4=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_36444,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[6],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],tmp=(C_word)a,a+=6,tmp);
C_trace("ChickenBridge.scm: 394  modulo");
t5=*((C_word*)lf[159]+1);
((C_proc4)C_retrieve_proc(t5))(4,t5,t4,((C_word*)((C_word*)t0)[2])[1],C_fix(100));}

/* k36442 in k36461 in k36434 in k36469 in do6450 in k36495 in do6436 in k36483 in cm-logo in k36420 in k36417 in k36414 in k36411 in k36408 in k36405 in k36402 in k36399 in k35543 in k35540 in k35537 in k35534 in k35531 in k35528 in k35525 in k35522 in k35519 in k35516 in k35513 in k35510 in k35507 in k35504 in k35501 in k35498 in k35495 in k35492 in k35489 in k35486 in k30217 in k26697 in k26694 in k26691 in k26688 in k26263 in k26260 in k26257 in k26254 in k26251 in k25668 in k25665 in k25142 in k25139 in k25136 in k25133 in k25130 in k25127 in k25124 in k25121 in k25118 in k25115 in k25112 in k25109 in k25106 in k25103 in k25100 in k25097 in k25094 in k25091 in k25088 in k25085 in k25082 in k24943 in k24940 in k24937 in k24934 in k24878 in k24875 in k24872 in k24869 in k24866 in k24863 in k24860 in k24857 in k23555 in k23486 in k23293 in k23290 in k23185 in k23134 in k11783 in k10718 in k10715 in k7274 in k7271 in k6978 in k6975 in k6971 in k6680 in k6677 in k6674 in k6671 */
static void C_ccall f_36444(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[5],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_36444,2,t0,t1);}
t2=C_mutate(((C_word *)((C_word*)t0)[5])+1,t1);
t3=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_36451,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[5],a[4]=((C_word*)t0)[4],tmp=(C_word)a,a+=5,tmp);
C_trace("ChickenBridge.scm: 395  number->string");
C_number_to_string(3,0,t3,((C_word*)((C_word*)t0)[2])[1]);}

/* k36449 in k36442 in k36461 in k36434 in k36469 in do6450 in k36495 in do6436 in k36483 in cm-logo in k36420 in k36417 in k36414 in k36411 in k36408 in k36405 in k36402 in k36399 in k35543 in k35540 in k35537 in k35534 in k35531 in k35528 in k35525 in k35522 in k35519 in k35516 in k35513 in k35510 in k35507 in k35504 in k35501 in k35498 in k35495 in k35492 in k35489 in k35486 in k30217 in k26697 in k26694 in k26691 in k26688 in k26263 in k26260 in k26257 in k26254 in k26251 in k25668 in k25665 in k25142 in k25139 in k25136 in k25133 in k25130 in k25127 in k25124 in k25121 in k25118 in k25115 in k25112 in k25109 in k25106 in k25103 in k25100 in k25097 in k25094 in k25091 in k25088 in k25085 in k25082 in k24943 in k24940 in k24937 in k24934 in k24878 in k24875 in k24872 in k24869 in k24866 in k24863 in k24860 in k24857 in k23555 in k23486 in k23293 in k23290 in k23185 in k23134 in k11783 in k10718 in k10715 in k7274 in k7271 in k6978 in k6975 in k6971 in k6680 in k6677 in k6674 in k6671 */
static void C_ccall f_36451(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[5],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_36451,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_36455,a[2]=((C_word*)t0)[3],a[3]=t1,a[4]=((C_word*)t0)[4],tmp=(C_word)a,a+=5,tmp);
C_trace("ChickenBridge.scm: 396  number->string");
C_number_to_string(3,0,t2,((C_word*)((C_word*)t0)[2])[1]);}

/* k36453 in k36449 in k36442 in k36461 in k36434 in k36469 in do6450 in k36495 in do6436 in k36483 in cm-logo in k36420 in k36417 in k36414 in k36411 in k36408 in k36405 in k36402 in k36399 in k35543 in k35540 in k35537 in k35534 in k35531 in k35528 in k35525 in k35522 in k35519 in k35516 in k35513 in k35510 in k35507 in k35504 in k35501 in k35498 in k35495 in k35492 in k35489 in k35486 in k30217 in k26697 in k26694 in k26691 in k26688 in k26263 in k26260 in k26257 in k26254 in k26251 in k25668 in k25665 in k25142 in k25139 in k25136 in k25133 in k25130 in k25127 in k25124 in k25121 in k25118 in k25115 in k25112 in k25109 in k25106 in k25103 in k25100 in k25097 in k25094 in k25091 in k25088 in k25085 in k25082 in k24943 in k24940 in k24937 in k24934 in k24878 in k24875 in k24872 in k24869 in k24866 in k24863 in k24860 in k24857 in k23555 in k23486 in k23293 in k23290 in k23185 in k23134 in k11783 in k10718 in k10715 in k7274 in k7271 in k6978 in k6975 in k6971 in k6680 in k6677 in k6674 in k6671 */
static void C_ccall f_36455(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[5],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_36455,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_36459,a[2]=t1,a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],tmp=(C_word)a,a+=5,tmp);
C_trace("ChickenBridge.scm: 397  number->string");
C_number_to_string(3,0,t2,((C_word*)((C_word*)t0)[2])[1]);}

/* k36457 in k36453 in k36449 in k36442 in k36461 in k36434 in k36469 in do6450 in k36495 in do6436 in k36483 in cm-logo in k36420 in k36417 in k36414 in k36411 in k36408 in k36405 in k36402 in k36399 in k35543 in k35540 in k35537 in k35534 in k35531 in k35528 in k35525 in k35522 in k35519 in k35516 in k35513 in k35510 in k35507 in k35504 in k35501 in k35498 in k35495 in k35492 in k35489 in k35486 in k30217 in k26697 in k26694 in k26691 in k26688 in k26263 in k26260 in k26257 in k26254 in k26251 in k25668 in k25665 in k25142 in k25139 in k25136 in k25133 in k25130 in k25127 in k25124 in k25121 in k25118 in k25115 in k25112 in k25109 in k25106 in k25103 in k25100 in k25097 in k25094 in k25091 in k25088 in k25085 in k25082 in k24943 in k24940 in k24937 in k24934 in k24878 in k24875 in k24872 in k24869 in k24866 in k24863 in k24860 in k24857 in k23555 in k23486 in k23293 in k23290 in k23185 in k23134 in k11783 in k10718 in k10715 in k7274 in k7271 in k6978 in k6975 in k6971 in k6680 in k6677 in k6674 in k6671 */
static void C_ccall f_36459(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 395  string-append");
t2=*((C_word*)lf[53]+1);
((C_proc8)C_retrieve_proc(t2))(8,t2,((C_word*)t0)[4],lf[807],((C_word*)t0)[3],lf[808],((C_word*)t0)[2],lf[809],t1);}

/* k36534 in do6450 in k36495 in do6436 in k36483 in cm-logo in k36420 in k36417 in k36414 in k36411 in k36408 in k36405 in k36402 in k36399 in k35543 in k35540 in k35537 in k35534 in k35531 in k35528 in k35525 in k35522 in k35519 in k35516 in k35513 in k35510 in k35507 in k35504 in k35501 in k35498 in k35495 in k35492 in k35489 in k35486 in k30217 in k26697 in k26694 in k26691 in k26688 in k26263 in k26260 in k26257 in k26254 in k26251 in k25668 in k25665 in k25142 in k25139 in k25136 in k25133 in k25130 in k25127 in k25124 in k25121 in k25118 in k25115 in k25112 in k25109 in k25106 in k25103 in k25100 in k25097 in k25094 in k25091 in k25088 in k25085 in k25082 in k24943 in k24940 in k24937 in k24934 in k24878 in k24875 in k24872 in k24869 in k24866 in k24863 in k24860 in k24857 in k23555 in k23486 in k23293 in k23290 in k23185 in k23134 in k11783 in k10718 in k10715 in k7274 in k7271 in k6978 in k6975 in k6971 in k6680 in k6677 in k6674 in k6671 */
static void C_ccall f_36536(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 406  string-append");
t2=*((C_word*)lf[53]+1);
((C_proc6)C_retrieve_proc(t2))(6,t2,((C_word*)t0)[3],((C_word*)t0)[2],lf[805],t1,lf[806]);}

/* k36512 in k36495 in do6436 in k36483 in cm-logo in k36420 in k36417 in k36414 in k36411 in k36408 in k36405 in k36402 in k36399 in k35543 in k35540 in k35537 in k35534 in k35531 in k35528 in k35525 in k35522 in k35519 in k35516 in k35513 in k35510 in k35507 in k35504 in k35501 in k35498 in k35495 in k35492 in k35489 in k35486 in k30217 in k26697 in k26694 in k26691 in k26688 in k26263 in k26260 in k26257 in k26254 in k26251 in k25668 in k25665 in k25142 in k25139 in k25136 in k25133 in k25130 in k25127 in k25124 in k25121 in k25118 in k25115 in k25112 in k25109 in k25106 in k25103 in k25100 in k25097 in k25094 in k25091 in k25088 in k25085 in k25082 in k24943 in k24940 in k24937 in k24934 in k24878 in k24875 in k24872 in k24869 in k24866 in k24863 in k24860 in k24857 in k23555 in k23486 in k23293 in k23290 in k23185 in k23134 in k11783 in k10718 in k10715 in k7274 in k7271 in k6978 in k6975 in k6971 in k6680 in k6677 in k6674 in k6671 */
static void C_ccall f_36514(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 403  printf");
t2=C_retrieve(lf[475]);
((C_proc3)C_retrieve_proc(t2))(3,t2,((C_word*)t0)[2],t1);}

/* k36498 in k36495 in do6436 in k36483 in cm-logo in k36420 in k36417 in k36414 in k36411 in k36408 in k36405 in k36402 in k36399 in k35543 in k35540 in k35537 in k35534 in k35531 in k35528 in k35525 in k35522 in k35519 in k35516 in k35513 in k35510 in k35507 in k35504 in k35501 in k35498 in k35495 in k35492 in k35489 in k35486 in k30217 in k26697 in k26694 in k26691 in k26688 in k26263 in k26260 in k26257 in k26254 in k26251 in k25668 in k25665 in k25142 in k25139 in k25136 in k25133 in k25130 in k25127 in k25124 in k25121 in k25118 in k25115 in k25112 in k25109 in k25106 in k25103 in k25100 in k25097 in k25094 in k25091 in k25088 in k25085 in k25082 in k24943 in k24940 in k24937 in k24934 in k24878 in k24875 in k24872 in k24869 in k24866 in k24863 in k24860 in k24857 in k23555 in k23486 in k23293 in k23290 in k23185 in k23134 in k11783 in k10718 in k10715 in k7274 in k7271 in k6978 in k6975 in k6971 in k6680 in k6677 in k6674 in k6671 */
static void C_ccall f_36500(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_36500,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_36503,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],tmp=(C_word)a,a+=7,tmp);
C_trace("ChickenBridge.scm: 415  printf");
t3=C_retrieve(lf[475]);
((C_proc3)C_retrieve_proc(t3))(3,t3,t2,((C_word*)t0)[3]);}

/* k36501 in k36498 in k36495 in do6436 in k36483 in cm-logo in k36420 in k36417 in k36414 in k36411 in k36408 in k36405 in k36402 in k36399 in k35543 in k35540 in k35537 in k35534 in k35531 in k35528 in k35525 in k35522 in k35519 in k35516 in k35513 in k35510 in k35507 in k35504 in k35501 in k35498 in k35495 in k35492 in k35489 in k35486 in k30217 in k26697 in k26694 in k26691 in k26688 in k26263 in k26260 in k26257 in k26254 in k26251 in k25668 in k25665 in k25142 in k25139 in k25136 in k25133 in k25130 in k25127 in k25124 in k25121 in k25118 in k25115 in k25112 in k25109 in k25106 in k25103 in k25100 in k25097 in k25094 in k25091 in k25088 in k25085 in k25082 in k24943 in k24940 in k24937 in k24934 in k24878 in k24875 in k24872 in k24869 in k24866 in k24863 in k24860 in k24857 in k23555 in k23486 in k23293 in k23290 in k23185 in k23134 in k11783 in k10718 in k10715 in k7274 in k7271 in k6978 in k6975 in k6971 in k6680 in k6677 in k6674 in k6671 */
static void C_ccall f_36503(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[4],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_36503,2,t0,t1);}
t2=(C_word)C_a_i_plus(&a,2,((C_word*)t0)[6],C_fix(1));
t3=((C_word*)((C_word*)t0)[5])[1];
f_36487(t3,((C_word*)t0)[4],((C_word*)t0)[3],((C_word*)t0)[2],t2);}

/* k36476 in cm-logo in k36420 in k36417 in k36414 in k36411 in k36408 in k36405 in k36402 in k36399 in k35543 in k35540 in k35537 in k35534 in k35531 in k35528 in k35525 in k35522 in k35519 in k35516 in k35513 in k35510 in k35507 in k35504 in k35501 in k35498 in k35495 in k35492 in k35489 in k35486 in k30217 in k26697 in k26694 in k26691 in k26688 in k26263 in k26260 in k26257 in k26254 in k26251 in k25668 in k25665 in k25142 in k25139 in k25136 in k25133 in k25130 in k25127 in k25124 in k25121 in k25118 in k25115 in k25112 in k25109 in k25106 in k25103 in k25100 in k25097 in k25094 in k25091 in k25088 in k25085 in k25082 in k24943 in k24940 in k24937 in k24934 in k24878 in k24875 in k24872 in k24869 in k24866 in k24863 in k24860 in k24857 in k23555 in k23486 in k23293 in k23290 in k23185 in k23134 in k11783 in k10718 in k10715 in k7274 in k7271 in k6978 in k6975 in k6971 in k6680 in k6677 in k6674 in k6671 */
static void C_ccall f_36478(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 416  values");
C_values(2,0,((C_word*)t0)[2]);}

/* cs:play in k35543 in k35540 in k35537 in k35534 in k35531 in k35528 in k35525 in k35522 in k35519 in k35516 in k35513 in k35510 in k35507 in k35504 in k35501 in k35498 in k35495 in k35492 in k35489 in k35486 in k30217 in k26697 in k26694 in k26691 in k26688 in k26263 in k26260 in k26257 in k26254 in k26251 in k25668 in k25665 in k25142 in k25139 in k25136 in k25133 in k25130 in k25127 in k25124 in k25121 in k25118 in k25115 in k25112 in k25109 in k25106 in k25103 in k25100 in k25097 in k25094 in k25091 in k25088 in k25085 in k25082 in k24943 in k24940 in k24937 in k24934 in k24878 in k24875 in k24872 in k24869 in k24866 in k24863 in k24860 in k24857 in k23555 in k23486 in k23293 in k23290 in k23185 in k23134 in k11783 in k10718 in k10715 in k7274 in k7271 in k6978 in k6975 in k6971 in k6680 in k6677 in k6674 in k6671 */
static void C_ccall f_35950(C_word c,C_word t0,C_word t1,...){
C_word tmp;
C_word t2;
va_list v;
C_word *a,c2=c;
C_save_rest(t1,c2,2);
C_check_for_interrupt;
if(!C_demand(c*C_SIZEOF_PAIR+58)){
C_save_and_reclaim((void*)tr2r,(void*)f_35950r,2,t0,t1);}
else{
a=C_alloc((c-2)*3);
t2=C_restore_rest(a,C_rest_count(0));
f_35950r(t0,t1,t2);}}

static void C_ccall f_35950r(C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word t14;
C_word t15;
C_word t16;
C_word t17;
C_word t18;
C_word t19;
C_word t20;
C_word t21;
C_word t22;
C_word t23;
C_word t24;
C_word t25;
C_word t26;
C_word t27;
C_word t28;
C_word *a=C_alloc(58);
t3=C_fix(0);
t4=(*a=C_VECTOR_TYPE|1,a[1]=t3,tmp=(C_word)a,a+=2,tmp);
t5=C_SCHEME_FALSE;
t6=(*a=C_VECTOR_TYPE|1,a[1]=t5,tmp=(C_word)a,a+=2,tmp);
t7=C_fix(0);
t8=(*a=C_VECTOR_TYPE|1,a[1]=t7,tmp=(C_word)a,a+=2,tmp);
t9=C_SCHEME_FALSE;
t10=(*a=C_VECTOR_TYPE|1,a[1]=t9,tmp=(C_word)a,a+=2,tmp);
t11=C_SCHEME_FALSE;
t12=(*a=C_VECTOR_TYPE|1,a[1]=t11,tmp=(C_word)a,a+=2,tmp);
t13=C_SCHEME_FALSE;
t14=(*a=C_VECTOR_TYPE|1,a[1]=t13,tmp=(C_word)a,a+=2,tmp);
t15=t2;
t16=(*a=C_VECTOR_TYPE|1,a[1]=t15,tmp=(C_word)a,a+=2,tmp);
t17=C_SCHEME_FALSE;
t18=(*a=C_VECTOR_TYPE|1,a[1]=t17,tmp=(C_word)a,a+=2,tmp);
t19=(*a=C_CLOSURE_TYPE|11,a[1]=(C_word)f_35954,a[2]=t14,a[3]=t12,a[4]=t18,a[5]=t10,a[6]=t2,a[7]=t16,a[8]=t8,a[9]=t6,a[10]=t4,a[11]=t1,tmp=(C_word)a,a+=12,tmp);
if(C_truep((C_word)C_i_nullp(((C_word*)t16)[1]))){
t20=t19;
f_35954(t20,C_SCHEME_UNDEFINED);}
else{
t20=(C_word)C_i_car(((C_word*)t16)[1]);
t21=(C_word)C_eqp(t20,lf[800]);
if(C_truep(t21)){
t22=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_36278,a[2]=t2,a[3]=t19,a[4]=t16,a[5]=t18,a[6]=t10,a[7]=t4,tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)t10)[1])){
C_trace("error");
t23=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t23))(4,t23,t22,lf[19],lf[800]);}
else{
t23=t22;
f_36278(2,t23,C_SCHEME_UNDEFINED);}}
else{
t22=(C_word)C_eqp(t20,lf[801]);
if(C_truep(t22)){
t23=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_36313,a[2]=t2,a[3]=t19,a[4]=t16,a[5]=t18,a[6]=t12,a[7]=t6,tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)t12)[1])){
C_trace("error");
t24=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t24))(4,t24,t23,lf[19],lf[801]);}
else{
t24=t23;
f_36313(2,t24,C_SCHEME_UNDEFINED);}}
else{
t23=(C_word)C_eqp(t20,lf[803]);
if(C_truep(t23)){
t24=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_36348,a[2]=t2,a[3]=t19,a[4]=t16,a[5]=t18,a[6]=t14,a[7]=t8,tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)t14)[1])){
C_trace("error");
t25=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t25))(4,t25,t24,lf[19],lf[803]);}
else{
t25=t24;
f_36348(2,t25,C_SCHEME_UNDEFINED);}}
else{
t24=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_36377,a[2]=t19,a[3]=t10,a[4]=t4,a[5]=t16,tmp=(C_word)a,a+=6,tmp);
if(C_truep(((C_word*)t18)[1])){
C_trace("error");
t25=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t25))(4,t25,t24,lf[10],t2);}
else{
t25=t24;
f_36377(2,t25,C_SCHEME_UNDEFINED);}}}}}}

/* k36375 in cs:play in k35543 in k35540 in k35537 in k35534 in k35531 in k35528 in k35525 in k35522 in k35519 in k35516 in k35513 in k35510 in k35507 in k35504 in k35501 in k35498 in k35495 in k35492 in k35489 in k35486 in k30217 in k26697 in k26694 in k26691 in k26688 in k26263 in k26260 in k26257 in k26254 in k26251 in k25668 in k25665 in k25142 in k25139 in k25136 in k25133 in k25130 in k25127 in k25124 in k25121 in k25118 in k25115 in k25112 in k25109 in k25106 in k25103 in k25100 in k25097 in k25094 in k25091 in k25088 in k25085 in k25082 in k24943 in k24940 in k24937 in k24934 in k24878 in k24875 in k24872 in k24869 in k24866 in k24863 in k24860 in k24857 in k23555 in k23486 in k23293 in k23290 in k23185 in k23134 in k11783 in k10718 in k10715 in k7274 in k7271 in k6978 in k6975 in k6971 in k6680 in k6677 in k6674 in k6671 */
static void C_ccall f_36377(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_36377,2,t0,t1);}
t2=(C_word)C_i_car(((C_word*)((C_word*)t0)[5])[1]);
t3=C_mutate(((C_word *)((C_word*)t0)[4])+1,t2);
t4=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_36384,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[5],a[4]=((C_word*)t0)[3],tmp=(C_word)a,a+=5,tmp);
t5=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_36392,a[2]=((C_word*)t0)[4],a[3]=t4,tmp=(C_word)a,a+=4,tmp);
C_trace("keyword?");
t6=C_retrieve(lf[13]);
((C_proc3)C_retrieve_proc(t6))(3,t6,t5,((C_word*)((C_word*)t0)[4])[1]);}

/* k36390 in k36375 in cs:play in k35543 in k35540 in k35537 in k35534 in k35531 in k35528 in k35525 in k35522 in k35519 in k35516 in k35513 in k35510 in k35507 in k35504 in k35501 in k35498 in k35495 in k35492 in k35489 in k35486 in k30217 in k26697 in k26694 in k26691 in k26688 in k26263 in k26260 in k26257 in k26254 in k26251 in k25668 in k25665 in k25142 in k25139 in k25136 in k25133 in k25130 in k25127 in k25124 in k25121 in k25118 in k25115 in k25112 in k25109 in k25106 in k25103 in k25100 in k25097 in k25094 in k25091 in k25088 in k25085 in k25082 in k24943 in k24940 in k24937 in k24934 in k24878 in k24875 in k24872 in k24869 in k24866 in k24863 in k24860 in k24857 in k23555 in k23486 in k23293 in k23290 in k23185 in k23134 in k11783 in k10718 in k10715 in k7274 in k7271 in k6978 in k6975 in k6971 in k6680 in k6677 in k6674 in k6671 */
static void C_ccall f_36392(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
if(C_truep(t1)){
C_trace("error");
t2=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t2))(4,t2,((C_word*)t0)[3],lf[14],((C_word*)((C_word*)t0)[2])[1]);}
else{
t2=((C_word*)t0)[3];
f_36384(2,t2,C_SCHEME_UNDEFINED);}}

/* k36382 in k36375 in cs:play in k35543 in k35540 in k35537 in k35534 in k35531 in k35528 in k35525 in k35522 in k35519 in k35516 in k35513 in k35510 in k35507 in k35504 in k35501 in k35498 in k35495 in k35492 in k35489 in k35486 in k30217 in k26697 in k26694 in k26691 in k26688 in k26263 in k26260 in k26257 in k26254 in k26251 in k25668 in k25665 in k25142 in k25139 in k25136 in k25133 in k25130 in k25127 in k25124 in k25121 in k25118 in k25115 in k25112 in k25109 in k25106 in k25103 in k25100 in k25097 in k25094 in k25091 in k25088 in k25085 in k25082 in k24943 in k24940 in k24937 in k24934 in k24878 in k24875 in k24872 in k24869 in k24866 in k24863 in k24860 in k24857 in k23555 in k23486 in k23293 in k23290 in k23185 in k23134 in k11783 in k10718 in k10715 in k7274 in k7271 in k6978 in k6975 in k6971 in k6680 in k6677 in k6674 in k6671 */
static void C_ccall f_36384(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word *a;
t2=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[3])[1]);
t4=C_mutate(((C_word *)((C_word*)t0)[3])+1,t3);
t5=((C_word*)t0)[2];
f_35954(t5,t4);}

/* k36346 in cs:play in k35543 in k35540 in k35537 in k35534 in k35531 in k35528 in k35525 in k35522 in k35519 in k35516 in k35513 in k35510 in k35507 in k35504 in k35501 in k35498 in k35495 in k35492 in k35489 in k35486 in k30217 in k26697 in k26694 in k26691 in k26688 in k26263 in k26260 in k26257 in k26254 in k26251 in k25668 in k25665 in k25142 in k25139 in k25136 in k25133 in k25130 in k25127 in k25124 in k25121 in k25118 in k25115 in k25112 in k25109 in k25106 in k25103 in k25100 in k25097 in k25094 in k25091 in k25088 in k25085 in k25082 in k24943 in k24940 in k24937 in k24934 in k24878 in k24875 in k24872 in k24869 in k24866 in k24863 in k24860 in k24857 in k23555 in k23486 in k23293 in k23290 in k23185 in k23134 in k11783 in k10718 in k10715 in k7274 in k7271 in k6978 in k6975 in k6971 in k6680 in k6677 in k6674 in k6671 */
static void C_ccall f_36348(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_36348,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_36352,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("error");
t4=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[21],((C_word*)t0)[2]);}
else{
t4=t2;
f_36352(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k36350 in k36346 in cs:play in k35543 in k35540 in k35537 in k35534 in k35531 in k35528 in k35525 in k35522 in k35519 in k35516 in k35513 in k35510 in k35507 in k35504 in k35501 in k35498 in k35495 in k35492 in k35489 in k35486 in k30217 in k26697 in k26694 in k26691 in k26688 in k26263 in k26260 in k26257 in k26254 in k26251 in k25668 in k25665 in k25142 in k25139 in k25136 in k25133 in k25130 in k25127 in k25124 in k25121 in k25118 in k25115 in k25112 in k25109 in k25106 in k25103 in k25100 in k25097 in k25094 in k25091 in k25088 in k25085 in k25082 in k24943 in k24940 in k24937 in k24934 in k24878 in k24875 in k24872 in k24869 in k24866 in k24863 in k24860 in k24857 in k23555 in k23486 in k23293 in k23290 in k23185 in k23134 in k11783 in k10718 in k10715 in k7274 in k7271 in k6978 in k6975 in k6971 in k6680 in k6677 in k6674 in k6671 */
static void C_ccall f_36352(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_35954(t7,t6);}

/* k36311 in cs:play in k35543 in k35540 in k35537 in k35534 in k35531 in k35528 in k35525 in k35522 in k35519 in k35516 in k35513 in k35510 in k35507 in k35504 in k35501 in k35498 in k35495 in k35492 in k35489 in k35486 in k30217 in k26697 in k26694 in k26691 in k26688 in k26263 in k26260 in k26257 in k26254 in k26251 in k25668 in k25665 in k25142 in k25139 in k25136 in k25133 in k25130 in k25127 in k25124 in k25121 in k25118 in k25115 in k25112 in k25109 in k25106 in k25103 in k25100 in k25097 in k25094 in k25091 in k25088 in k25085 in k25082 in k24943 in k24940 in k24937 in k24934 in k24878 in k24875 in k24872 in k24869 in k24866 in k24863 in k24860 in k24857 in k23555 in k23486 in k23293 in k23290 in k23185 in k23134 in k11783 in k10718 in k10715 in k7274 in k7271 in k6978 in k6975 in k6971 in k6680 in k6677 in k6674 in k6671 */
static void C_ccall f_36313(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_36313,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_36317,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("error");
t4=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[21],((C_word*)t0)[2]);}
else{
t4=t2;
f_36317(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k36315 in k36311 in cs:play in k35543 in k35540 in k35537 in k35534 in k35531 in k35528 in k35525 in k35522 in k35519 in k35516 in k35513 in k35510 in k35507 in k35504 in k35501 in k35498 in k35495 in k35492 in k35489 in k35486 in k30217 in k26697 in k26694 in k26691 in k26688 in k26263 in k26260 in k26257 in k26254 in k26251 in k25668 in k25665 in k25142 in k25139 in k25136 in k25133 in k25130 in k25127 in k25124 in k25121 in k25118 in k25115 in k25112 in k25109 in k25106 in k25103 in k25100 in k25097 in k25094 in k25091 in k25088 in k25085 in k25082 in k24943 in k24940 in k24937 in k24934 in k24878 in k24875 in k24872 in k24869 in k24866 in k24863 in k24860 in k24857 in k23555 in k23486 in k23293 in k23290 in k23185 in k23134 in k11783 in k10718 in k10715 in k7274 in k7271 in k6978 in k6975 in k6971 in k6680 in k6677 in k6674 in k6671 */
static void C_ccall f_36317(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_35954(t7,t6);}

/* k36276 in cs:play in k35543 in k35540 in k35537 in k35534 in k35531 in k35528 in k35525 in k35522 in k35519 in k35516 in k35513 in k35510 in k35507 in k35504 in k35501 in k35498 in k35495 in k35492 in k35489 in k35486 in k30217 in k26697 in k26694 in k26691 in k26688 in k26263 in k26260 in k26257 in k26254 in k26251 in k25668 in k25665 in k25142 in k25139 in k25136 in k25133 in k25130 in k25127 in k25124 in k25121 in k25118 in k25115 in k25112 in k25109 in k25106 in k25103 in k25100 in k25097 in k25094 in k25091 in k25088 in k25085 in k25082 in k24943 in k24940 in k24937 in k24934 in k24878 in k24875 in k24872 in k24869 in k24866 in k24863 in k24860 in k24857 in k23555 in k23486 in k23293 in k23290 in k23185 in k23134 in k11783 in k10718 in k10715 in k7274 in k7271 in k6978 in k6975 in k6971 in k6680 in k6677 in k6674 in k6671 */
static void C_ccall f_36278(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_36278,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_36282,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("error");
t4=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[21],((C_word*)t0)[2]);}
else{
t4=t2;
f_36282(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k36280 in k36276 in cs:play in k35543 in k35540 in k35537 in k35534 in k35531 in k35528 in k35525 in k35522 in k35519 in k35516 in k35513 in k35510 in k35507 in k35504 in k35501 in k35498 in k35495 in k35492 in k35489 in k35486 in k30217 in k26697 in k26694 in k26691 in k26688 in k26263 in k26260 in k26257 in k26254 in k26251 in k25668 in k25665 in k25142 in k25139 in k25136 in k25133 in k25130 in k25127 in k25124 in k25121 in k25118 in k25115 in k25112 in k25109 in k25106 in k25103 in k25100 in k25097 in k25094 in k25091 in k25088 in k25085 in k25082 in k24943 in k24940 in k24937 in k24934 in k24878 in k24875 in k24872 in k24869 in k24866 in k24863 in k24860 in k24857 in k23555 in k23486 in k23293 in k23290 in k23185 in k23134 in k11783 in k10718 in k10715 in k7274 in k7271 in k6978 in k6975 in k6971 in k6680 in k6677 in k6674 in k6671 */
static void C_ccall f_36282(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_35954(t7,t6);}

/* k35952 in cs:play in k35543 in k35540 in k35537 in k35534 in k35531 in k35528 in k35525 in k35522 in k35519 in k35516 in k35513 in k35510 in k35507 in k35504 in k35501 in k35498 in k35495 in k35492 in k35489 in k35486 in k30217 in k26697 in k26694 in k26691 in k26688 in k26263 in k26260 in k26257 in k26254 in k26251 in k25668 in k25665 in k25142 in k25139 in k25136 in k25133 in k25130 in k25127 in k25124 in k25121 in k25118 in k25115 in k25112 in k25109 in k25106 in k25103 in k25100 in k25097 in k25094 in k25091 in k25088 in k25085 in k25082 in k24943 in k24940 in k24937 in k24934 in k24878 in k24875 in k24872 in k24869 in k24866 in k24863 in k24860 in k24857 in k23555 in k23486 in k23293 in k23290 in k23185 in k23134 in k11783 in k10718 in k10715 in k7274 in k7271 in k6978 in k6975 in k6971 in k6680 in k6677 in k6674 in k6671 */
static void C_fcall f_35954(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word ab[42],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_35954,NULL,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|11,a[1]=(C_word)f_35957,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],a[7]=((C_word*)t0)[7],a[8]=((C_word*)t0)[8],a[9]=((C_word*)t0)[9],a[10]=((C_word*)t0)[10],a[11]=((C_word*)t0)[11],tmp=(C_word)a,a+=12,tmp);
if(C_truep((C_word)C_i_nullp(((C_word*)((C_word*)t0)[7])[1]))){
t3=t2;
f_35957(t3,C_SCHEME_UNDEFINED);}
else{
t3=(C_word)C_i_car(((C_word*)((C_word*)t0)[7])[1]);
t4=(C_word)C_eqp(t3,lf[800]);
if(C_truep(t4)){
t5=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_36143,a[2]=((C_word*)t0)[6],a[3]=t2,a[4]=((C_word*)t0)[7],a[5]=((C_word*)t0)[4],a[6]=((C_word*)t0)[5],a[7]=((C_word*)t0)[10],tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)((C_word*)t0)[5])[1])){
C_trace("error");
t6=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t6))(4,t6,t5,lf[19],lf[800]);}
else{
t6=t5;
f_36143(2,t6,C_SCHEME_UNDEFINED);}}
else{
t5=(C_word)C_eqp(t3,lf[801]);
if(C_truep(t5)){
t6=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_36178,a[2]=((C_word*)t0)[6],a[3]=t2,a[4]=((C_word*)t0)[7],a[5]=((C_word*)t0)[4],a[6]=((C_word*)t0)[3],a[7]=((C_word*)t0)[9],tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)((C_word*)t0)[3])[1])){
C_trace("error");
t7=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t7))(4,t7,t6,lf[19],lf[801]);}
else{
t7=t6;
f_36178(2,t7,C_SCHEME_UNDEFINED);}}
else{
t6=(C_word)C_eqp(t3,lf[803]);
if(C_truep(t6)){
t7=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_36213,a[2]=((C_word*)t0)[6],a[3]=t2,a[4]=((C_word*)t0)[7],a[5]=((C_word*)t0)[4],a[6]=((C_word*)t0)[2],a[7]=((C_word*)t0)[8],tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)((C_word*)t0)[2])[1])){
C_trace("error");
t8=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t8))(4,t8,t7,lf[19],lf[803]);}
else{
t8=t7;
f_36213(2,t8,C_SCHEME_UNDEFINED);}}
else{
t7=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_36242,a[2]=t2,a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[9],a[5]=((C_word*)t0)[7],tmp=(C_word)a,a+=6,tmp);
if(C_truep(((C_word*)((C_word*)t0)[4])[1])){
C_trace("error");
t8=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t8))(4,t8,t7,lf[10],((C_word*)t0)[6]);}
else{
t8=t7;
f_36242(2,t8,C_SCHEME_UNDEFINED);}}}}}}

/* k36240 in k35952 in cs:play in k35543 in k35540 in k35537 in k35534 in k35531 in k35528 in k35525 in k35522 in k35519 in k35516 in k35513 in k35510 in k35507 in k35504 in k35501 in k35498 in k35495 in k35492 in k35489 in k35486 in k30217 in k26697 in k26694 in k26691 in k26688 in k26263 in k26260 in k26257 in k26254 in k26251 in k25668 in k25665 in k25142 in k25139 in k25136 in k25133 in k25130 in k25127 in k25124 in k25121 in k25118 in k25115 in k25112 in k25109 in k25106 in k25103 in k25100 in k25097 in k25094 in k25091 in k25088 in k25085 in k25082 in k24943 in k24940 in k24937 in k24934 in k24878 in k24875 in k24872 in k24869 in k24866 in k24863 in k24860 in k24857 in k23555 in k23486 in k23293 in k23290 in k23185 in k23134 in k11783 in k10718 in k10715 in k7274 in k7271 in k6978 in k6975 in k6971 in k6680 in k6677 in k6674 in k6671 */
static void C_ccall f_36242(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_36242,2,t0,t1);}
t2=(C_word)C_i_car(((C_word*)((C_word*)t0)[5])[1]);
t3=C_mutate(((C_word *)((C_word*)t0)[4])+1,t2);
t4=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_36249,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[5],a[4]=((C_word*)t0)[3],tmp=(C_word)a,a+=5,tmp);
t5=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_36257,a[2]=((C_word*)t0)[4],a[3]=t4,tmp=(C_word)a,a+=4,tmp);
C_trace("keyword?");
t6=C_retrieve(lf[13]);
((C_proc3)C_retrieve_proc(t6))(3,t6,t5,((C_word*)((C_word*)t0)[4])[1]);}

/* k36255 in k36240 in k35952 in cs:play in k35543 in k35540 in k35537 in k35534 in k35531 in k35528 in k35525 in k35522 in k35519 in k35516 in k35513 in k35510 in k35507 in k35504 in k35501 in k35498 in k35495 in k35492 in k35489 in k35486 in k30217 in k26697 in k26694 in k26691 in k26688 in k26263 in k26260 in k26257 in k26254 in k26251 in k25668 in k25665 in k25142 in k25139 in k25136 in k25133 in k25130 in k25127 in k25124 in k25121 in k25118 in k25115 in k25112 in k25109 in k25106 in k25103 in k25100 in k25097 in k25094 in k25091 in k25088 in k25085 in k25082 in k24943 in k24940 in k24937 in k24934 in k24878 in k24875 in k24872 in k24869 in k24866 in k24863 in k24860 in k24857 in k23555 in k23486 in k23293 in k23290 in k23185 in k23134 in k11783 in k10718 in k10715 in k7274 in k7271 in k6978 in k6975 in k6971 in k6680 in k6677 in k6674 in k6671 */
static void C_ccall f_36257(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
if(C_truep(t1)){
C_trace("error");
t2=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t2))(4,t2,((C_word*)t0)[3],lf[14],((C_word*)((C_word*)t0)[2])[1]);}
else{
t2=((C_word*)t0)[3];
f_36249(2,t2,C_SCHEME_UNDEFINED);}}

/* k36247 in k36240 in k35952 in cs:play in k35543 in k35540 in k35537 in k35534 in k35531 in k35528 in k35525 in k35522 in k35519 in k35516 in k35513 in k35510 in k35507 in k35504 in k35501 in k35498 in k35495 in k35492 in k35489 in k35486 in k30217 in k26697 in k26694 in k26691 in k26688 in k26263 in k26260 in k26257 in k26254 in k26251 in k25668 in k25665 in k25142 in k25139 in k25136 in k25133 in k25130 in k25127 in k25124 in k25121 in k25118 in k25115 in k25112 in k25109 in k25106 in k25103 in k25100 in k25097 in k25094 in k25091 in k25088 in k25085 in k25082 in k24943 in k24940 in k24937 in k24934 in k24878 in k24875 in k24872 in k24869 in k24866 in k24863 in k24860 in k24857 in k23555 in k23486 in k23293 in k23290 in k23185 in k23134 in k11783 in k10718 in k10715 in k7274 in k7271 in k6978 in k6975 in k6971 in k6680 in k6677 in k6674 in k6671 */
static void C_ccall f_36249(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word *a;
t2=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[3])[1]);
t4=C_mutate(((C_word *)((C_word*)t0)[3])+1,t3);
t5=((C_word*)t0)[2];
f_35957(t5,t4);}

/* k36211 in k35952 in cs:play in k35543 in k35540 in k35537 in k35534 in k35531 in k35528 in k35525 in k35522 in k35519 in k35516 in k35513 in k35510 in k35507 in k35504 in k35501 in k35498 in k35495 in k35492 in k35489 in k35486 in k30217 in k26697 in k26694 in k26691 in k26688 in k26263 in k26260 in k26257 in k26254 in k26251 in k25668 in k25665 in k25142 in k25139 in k25136 in k25133 in k25130 in k25127 in k25124 in k25121 in k25118 in k25115 in k25112 in k25109 in k25106 in k25103 in k25100 in k25097 in k25094 in k25091 in k25088 in k25085 in k25082 in k24943 in k24940 in k24937 in k24934 in k24878 in k24875 in k24872 in k24869 in k24866 in k24863 in k24860 in k24857 in k23555 in k23486 in k23293 in k23290 in k23185 in k23134 in k11783 in k10718 in k10715 in k7274 in k7271 in k6978 in k6975 in k6971 in k6680 in k6677 in k6674 in k6671 */
static void C_ccall f_36213(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_36213,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_36217,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("error");
t4=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[21],((C_word*)t0)[2]);}
else{
t4=t2;
f_36217(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k36215 in k36211 in k35952 in cs:play in k35543 in k35540 in k35537 in k35534 in k35531 in k35528 in k35525 in k35522 in k35519 in k35516 in k35513 in k35510 in k35507 in k35504 in k35501 in k35498 in k35495 in k35492 in k35489 in k35486 in k30217 in k26697 in k26694 in k26691 in k26688 in k26263 in k26260 in k26257 in k26254 in k26251 in k25668 in k25665 in k25142 in k25139 in k25136 in k25133 in k25130 in k25127 in k25124 in k25121 in k25118 in k25115 in k25112 in k25109 in k25106 in k25103 in k25100 in k25097 in k25094 in k25091 in k25088 in k25085 in k25082 in k24943 in k24940 in k24937 in k24934 in k24878 in k24875 in k24872 in k24869 in k24866 in k24863 in k24860 in k24857 in k23555 in k23486 in k23293 in k23290 in k23185 in k23134 in k11783 in k10718 in k10715 in k7274 in k7271 in k6978 in k6975 in k6971 in k6680 in k6677 in k6674 in k6671 */
static void C_ccall f_36217(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_35957(t7,t6);}

/* k36176 in k35952 in cs:play in k35543 in k35540 in k35537 in k35534 in k35531 in k35528 in k35525 in k35522 in k35519 in k35516 in k35513 in k35510 in k35507 in k35504 in k35501 in k35498 in k35495 in k35492 in k35489 in k35486 in k30217 in k26697 in k26694 in k26691 in k26688 in k26263 in k26260 in k26257 in k26254 in k26251 in k25668 in k25665 in k25142 in k25139 in k25136 in k25133 in k25130 in k25127 in k25124 in k25121 in k25118 in k25115 in k25112 in k25109 in k25106 in k25103 in k25100 in k25097 in k25094 in k25091 in k25088 in k25085 in k25082 in k24943 in k24940 in k24937 in k24934 in k24878 in k24875 in k24872 in k24869 in k24866 in k24863 in k24860 in k24857 in k23555 in k23486 in k23293 in k23290 in k23185 in k23134 in k11783 in k10718 in k10715 in k7274 in k7271 in k6978 in k6975 in k6971 in k6680 in k6677 in k6674 in k6671 */
static void C_ccall f_36178(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_36178,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_36182,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("error");
t4=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[21],((C_word*)t0)[2]);}
else{
t4=t2;
f_36182(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k36180 in k36176 in k35952 in cs:play in k35543 in k35540 in k35537 in k35534 in k35531 in k35528 in k35525 in k35522 in k35519 in k35516 in k35513 in k35510 in k35507 in k35504 in k35501 in k35498 in k35495 in k35492 in k35489 in k35486 in k30217 in k26697 in k26694 in k26691 in k26688 in k26263 in k26260 in k26257 in k26254 in k26251 in k25668 in k25665 in k25142 in k25139 in k25136 in k25133 in k25130 in k25127 in k25124 in k25121 in k25118 in k25115 in k25112 in k25109 in k25106 in k25103 in k25100 in k25097 in k25094 in k25091 in k25088 in k25085 in k25082 in k24943 in k24940 in k24937 in k24934 in k24878 in k24875 in k24872 in k24869 in k24866 in k24863 in k24860 in k24857 in k23555 in k23486 in k23293 in k23290 in k23185 in k23134 in k11783 in k10718 in k10715 in k7274 in k7271 in k6978 in k6975 in k6971 in k6680 in k6677 in k6674 in k6671 */
static void C_ccall f_36182(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_35957(t7,t6);}

/* k36141 in k35952 in cs:play in k35543 in k35540 in k35537 in k35534 in k35531 in k35528 in k35525 in k35522 in k35519 in k35516 in k35513 in k35510 in k35507 in k35504 in k35501 in k35498 in k35495 in k35492 in k35489 in k35486 in k30217 in k26697 in k26694 in k26691 in k26688 in k26263 in k26260 in k26257 in k26254 in k26251 in k25668 in k25665 in k25142 in k25139 in k25136 in k25133 in k25130 in k25127 in k25124 in k25121 in k25118 in k25115 in k25112 in k25109 in k25106 in k25103 in k25100 in k25097 in k25094 in k25091 in k25088 in k25085 in k25082 in k24943 in k24940 in k24937 in k24934 in k24878 in k24875 in k24872 in k24869 in k24866 in k24863 in k24860 in k24857 in k23555 in k23486 in k23293 in k23290 in k23185 in k23134 in k11783 in k10718 in k10715 in k7274 in k7271 in k6978 in k6975 in k6971 in k6680 in k6677 in k6674 in k6671 */
static void C_ccall f_36143(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_36143,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_36147,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("error");
t4=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[21],((C_word*)t0)[2]);}
else{
t4=t2;
f_36147(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k36145 in k36141 in k35952 in cs:play in k35543 in k35540 in k35537 in k35534 in k35531 in k35528 in k35525 in k35522 in k35519 in k35516 in k35513 in k35510 in k35507 in k35504 in k35501 in k35498 in k35495 in k35492 in k35489 in k35486 in k30217 in k26697 in k26694 in k26691 in k26688 in k26263 in k26260 in k26257 in k26254 in k26251 in k25668 in k25665 in k25142 in k25139 in k25136 in k25133 in k25130 in k25127 in k25124 in k25121 in k25118 in k25115 in k25112 in k25109 in k25106 in k25103 in k25100 in k25097 in k25094 in k25091 in k25088 in k25085 in k25082 in k24943 in k24940 in k24937 in k24934 in k24878 in k24875 in k24872 in k24869 in k24866 in k24863 in k24860 in k24857 in k23555 in k23486 in k23293 in k23290 in k23185 in k23134 in k11783 in k10718 in k10715 in k7274 in k7271 in k6978 in k6975 in k6971 in k6680 in k6677 in k6674 in k6671 */
static void C_ccall f_36147(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_35957(t7,t6);}

/* k35955 in k35952 in cs:play in k35543 in k35540 in k35537 in k35534 in k35531 in k35528 in k35525 in k35522 in k35519 in k35516 in k35513 in k35510 in k35507 in k35504 in k35501 in k35498 in k35495 in k35492 in k35489 in k35486 in k30217 in k26697 in k26694 in k26691 in k26688 in k26263 in k26260 in k26257 in k26254 in k26251 in k25668 in k25665 in k25142 in k25139 in k25136 in k25133 in k25130 in k25127 in k25124 in k25121 in k25118 in k25115 in k25112 in k25109 in k25106 in k25103 in k25100 in k25097 in k25094 in k25091 in k25088 in k25085 in k25082 in k24943 in k24940 in k24937 in k24934 in k24878 in k24875 in k24872 in k24869 in k24866 in k24863 in k24860 in k24857 in k23555 in k23486 in k23293 in k23290 in k23185 in k23134 in k11783 in k10718 in k10715 in k7274 in k7271 in k6978 in k6975 in k6971 in k6680 in k6677 in k6674 in k6671 */
static void C_fcall f_35957(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word ab[38],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_35957,NULL,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_35960,a[2]=((C_word*)t0)[6],a[3]=((C_word*)t0)[7],a[4]=((C_word*)t0)[8],a[5]=((C_word*)t0)[9],a[6]=((C_word*)t0)[10],a[7]=((C_word*)t0)[11],tmp=(C_word)a,a+=8,tmp);
if(C_truep((C_word)C_i_nullp(((C_word*)((C_word*)t0)[7])[1]))){
t3=t2;
f_35960(t3,C_SCHEME_UNDEFINED);}
else{
t3=(C_word)C_i_car(((C_word*)((C_word*)t0)[7])[1]);
t4=(C_word)C_eqp(t3,lf[800]);
if(C_truep(t4)){
t5=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_36008,a[2]=((C_word*)t0)[6],a[3]=t2,a[4]=((C_word*)t0)[7],a[5]=((C_word*)t0)[4],a[6]=((C_word*)t0)[5],a[7]=((C_word*)t0)[10],tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)((C_word*)t0)[5])[1])){
C_trace("error");
t6=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t6))(4,t6,t5,lf[19],lf[800]);}
else{
t6=t5;
f_36008(2,t6,C_SCHEME_UNDEFINED);}}
else{
t5=(C_word)C_eqp(t3,lf[801]);
if(C_truep(t5)){
t6=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_36043,a[2]=((C_word*)t0)[6],a[3]=t2,a[4]=((C_word*)t0)[7],a[5]=((C_word*)t0)[4],a[6]=((C_word*)t0)[3],a[7]=((C_word*)t0)[9],tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)((C_word*)t0)[3])[1])){
C_trace("error");
t7=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t7))(4,t7,t6,lf[19],lf[801]);}
else{
t7=t6;
f_36043(2,t7,C_SCHEME_UNDEFINED);}}
else{
t6=(C_word)C_eqp(t3,lf[803]);
if(C_truep(t6)){
t7=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_36078,a[2]=((C_word*)t0)[6],a[3]=t2,a[4]=((C_word*)t0)[7],a[5]=((C_word*)t0)[4],a[6]=((C_word*)t0)[2],a[7]=((C_word*)t0)[8],tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)((C_word*)t0)[2])[1])){
C_trace("error");
t8=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t8))(4,t8,t7,lf[19],lf[803]);}
else{
t8=t7;
f_36078(2,t8,C_SCHEME_UNDEFINED);}}
else{
t7=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_36107,a[2]=t2,a[3]=((C_word*)t0)[2],a[4]=((C_word*)t0)[8],a[5]=((C_word*)t0)[7],tmp=(C_word)a,a+=6,tmp);
if(C_truep(((C_word*)((C_word*)t0)[4])[1])){
C_trace("error");
t8=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t8))(4,t8,t7,lf[10],((C_word*)t0)[6]);}
else{
t8=t7;
f_36107(2,t8,C_SCHEME_UNDEFINED);}}}}}}

/* k36105 in k35955 in k35952 in cs:play in k35543 in k35540 in k35537 in k35534 in k35531 in k35528 in k35525 in k35522 in k35519 in k35516 in k35513 in k35510 in k35507 in k35504 in k35501 in k35498 in k35495 in k35492 in k35489 in k35486 in k30217 in k26697 in k26694 in k26691 in k26688 in k26263 in k26260 in k26257 in k26254 in k26251 in k25668 in k25665 in k25142 in k25139 in k25136 in k25133 in k25130 in k25127 in k25124 in k25121 in k25118 in k25115 in k25112 in k25109 in k25106 in k25103 in k25100 in k25097 in k25094 in k25091 in k25088 in k25085 in k25082 in k24943 in k24940 in k24937 in k24934 in k24878 in k24875 in k24872 in k24869 in k24866 in k24863 in k24860 in k24857 in k23555 in k23486 in k23293 in k23290 in k23185 in k23134 in k11783 in k10718 in k10715 in k7274 in k7271 in k6978 in k6975 in k6971 in k6680 in k6677 in k6674 in k6671 */
static void C_ccall f_36107(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_36107,2,t0,t1);}
t2=(C_word)C_i_car(((C_word*)((C_word*)t0)[5])[1]);
t3=C_mutate(((C_word *)((C_word*)t0)[4])+1,t2);
t4=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_36114,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[5],a[4]=((C_word*)t0)[3],tmp=(C_word)a,a+=5,tmp);
t5=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_36122,a[2]=((C_word*)t0)[4],a[3]=t4,tmp=(C_word)a,a+=4,tmp);
C_trace("keyword?");
t6=C_retrieve(lf[13]);
((C_proc3)C_retrieve_proc(t6))(3,t6,t5,((C_word*)((C_word*)t0)[4])[1]);}

/* k36120 in k36105 in k35955 in k35952 in cs:play in k35543 in k35540 in k35537 in k35534 in k35531 in k35528 in k35525 in k35522 in k35519 in k35516 in k35513 in k35510 in k35507 in k35504 in k35501 in k35498 in k35495 in k35492 in k35489 in k35486 in k30217 in k26697 in k26694 in k26691 in k26688 in k26263 in k26260 in k26257 in k26254 in k26251 in k25668 in k25665 in k25142 in k25139 in k25136 in k25133 in k25130 in k25127 in k25124 in k25121 in k25118 in k25115 in k25112 in k25109 in k25106 in k25103 in k25100 in k25097 in k25094 in k25091 in k25088 in k25085 in k25082 in k24943 in k24940 in k24937 in k24934 in k24878 in k24875 in k24872 in k24869 in k24866 in k24863 in k24860 in k24857 in k23555 in k23486 in k23293 in k23290 in k23185 in k23134 in k11783 in k10718 in k10715 in k7274 in k7271 in k6978 in k6975 in k6971 in k6680 in k6677 in k6674 in k6671 */
static void C_ccall f_36122(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
if(C_truep(t1)){
C_trace("error");
t2=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t2))(4,t2,((C_word*)t0)[3],lf[14],((C_word*)((C_word*)t0)[2])[1]);}
else{
t2=((C_word*)t0)[3];
f_36114(2,t2,C_SCHEME_UNDEFINED);}}

/* k36112 in k36105 in k35955 in k35952 in cs:play in k35543 in k35540 in k35537 in k35534 in k35531 in k35528 in k35525 in k35522 in k35519 in k35516 in k35513 in k35510 in k35507 in k35504 in k35501 in k35498 in k35495 in k35492 in k35489 in k35486 in k30217 in k26697 in k26694 in k26691 in k26688 in k26263 in k26260 in k26257 in k26254 in k26251 in k25668 in k25665 in k25142 in k25139 in k25136 in k25133 in k25130 in k25127 in k25124 in k25121 in k25118 in k25115 in k25112 in k25109 in k25106 in k25103 in k25100 in k25097 in k25094 in k25091 in k25088 in k25085 in k25082 in k24943 in k24940 in k24937 in k24934 in k24878 in k24875 in k24872 in k24869 in k24866 in k24863 in k24860 in k24857 in k23555 in k23486 in k23293 in k23290 in k23185 in k23134 in k11783 in k10718 in k10715 in k7274 in k7271 in k6978 in k6975 in k6971 in k6680 in k6677 in k6674 in k6671 */
static void C_ccall f_36114(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word *a;
t2=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[3])[1]);
t4=C_mutate(((C_word *)((C_word*)t0)[3])+1,t3);
t5=((C_word*)t0)[2];
f_35960(t5,t4);}

/* k36076 in k35955 in k35952 in cs:play in k35543 in k35540 in k35537 in k35534 in k35531 in k35528 in k35525 in k35522 in k35519 in k35516 in k35513 in k35510 in k35507 in k35504 in k35501 in k35498 in k35495 in k35492 in k35489 in k35486 in k30217 in k26697 in k26694 in k26691 in k26688 in k26263 in k26260 in k26257 in k26254 in k26251 in k25668 in k25665 in k25142 in k25139 in k25136 in k25133 in k25130 in k25127 in k25124 in k25121 in k25118 in k25115 in k25112 in k25109 in k25106 in k25103 in k25100 in k25097 in k25094 in k25091 in k25088 in k25085 in k25082 in k24943 in k24940 in k24937 in k24934 in k24878 in k24875 in k24872 in k24869 in k24866 in k24863 in k24860 in k24857 in k23555 in k23486 in k23293 in k23290 in k23185 in k23134 in k11783 in k10718 in k10715 in k7274 in k7271 in k6978 in k6975 in k6971 in k6680 in k6677 in k6674 in k6671 */
static void C_ccall f_36078(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_36078,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_36082,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("error");
t4=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[21],((C_word*)t0)[2]);}
else{
t4=t2;
f_36082(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k36080 in k36076 in k35955 in k35952 in cs:play in k35543 in k35540 in k35537 in k35534 in k35531 in k35528 in k35525 in k35522 in k35519 in k35516 in k35513 in k35510 in k35507 in k35504 in k35501 in k35498 in k35495 in k35492 in k35489 in k35486 in k30217 in k26697 in k26694 in k26691 in k26688 in k26263 in k26260 in k26257 in k26254 in k26251 in k25668 in k25665 in k25142 in k25139 in k25136 in k25133 in k25130 in k25127 in k25124 in k25121 in k25118 in k25115 in k25112 in k25109 in k25106 in k25103 in k25100 in k25097 in k25094 in k25091 in k25088 in k25085 in k25082 in k24943 in k24940 in k24937 in k24934 in k24878 in k24875 in k24872 in k24869 in k24866 in k24863 in k24860 in k24857 in k23555 in k23486 in k23293 in k23290 in k23185 in k23134 in k11783 in k10718 in k10715 in k7274 in k7271 in k6978 in k6975 in k6971 in k6680 in k6677 in k6674 in k6671 */
static void C_ccall f_36082(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_35960(t7,t6);}

/* k36041 in k35955 in k35952 in cs:play in k35543 in k35540 in k35537 in k35534 in k35531 in k35528 in k35525 in k35522 in k35519 in k35516 in k35513 in k35510 in k35507 in k35504 in k35501 in k35498 in k35495 in k35492 in k35489 in k35486 in k30217 in k26697 in k26694 in k26691 in k26688 in k26263 in k26260 in k26257 in k26254 in k26251 in k25668 in k25665 in k25142 in k25139 in k25136 in k25133 in k25130 in k25127 in k25124 in k25121 in k25118 in k25115 in k25112 in k25109 in k25106 in k25103 in k25100 in k25097 in k25094 in k25091 in k25088 in k25085 in k25082 in k24943 in k24940 in k24937 in k24934 in k24878 in k24875 in k24872 in k24869 in k24866 in k24863 in k24860 in k24857 in k23555 in k23486 in k23293 in k23290 in k23185 in k23134 in k11783 in k10718 in k10715 in k7274 in k7271 in k6978 in k6975 in k6971 in k6680 in k6677 in k6674 in k6671 */
static void C_ccall f_36043(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_36043,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_36047,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("error");
t4=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[21],((C_word*)t0)[2]);}
else{
t4=t2;
f_36047(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k36045 in k36041 in k35955 in k35952 in cs:play in k35543 in k35540 in k35537 in k35534 in k35531 in k35528 in k35525 in k35522 in k35519 in k35516 in k35513 in k35510 in k35507 in k35504 in k35501 in k35498 in k35495 in k35492 in k35489 in k35486 in k30217 in k26697 in k26694 in k26691 in k26688 in k26263 in k26260 in k26257 in k26254 in k26251 in k25668 in k25665 in k25142 in k25139 in k25136 in k25133 in k25130 in k25127 in k25124 in k25121 in k25118 in k25115 in k25112 in k25109 in k25106 in k25103 in k25100 in k25097 in k25094 in k25091 in k25088 in k25085 in k25082 in k24943 in k24940 in k24937 in k24934 in k24878 in k24875 in k24872 in k24869 in k24866 in k24863 in k24860 in k24857 in k23555 in k23486 in k23293 in k23290 in k23185 in k23134 in k11783 in k10718 in k10715 in k7274 in k7271 in k6978 in k6975 in k6971 in k6680 in k6677 in k6674 in k6671 */
static void C_ccall f_36047(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_35960(t7,t6);}

/* k36006 in k35955 in k35952 in cs:play in k35543 in k35540 in k35537 in k35534 in k35531 in k35528 in k35525 in k35522 in k35519 in k35516 in k35513 in k35510 in k35507 in k35504 in k35501 in k35498 in k35495 in k35492 in k35489 in k35486 in k30217 in k26697 in k26694 in k26691 in k26688 in k26263 in k26260 in k26257 in k26254 in k26251 in k25668 in k25665 in k25142 in k25139 in k25136 in k25133 in k25130 in k25127 in k25124 in k25121 in k25118 in k25115 in k25112 in k25109 in k25106 in k25103 in k25100 in k25097 in k25094 in k25091 in k25088 in k25085 in k25082 in k24943 in k24940 in k24937 in k24934 in k24878 in k24875 in k24872 in k24869 in k24866 in k24863 in k24860 in k24857 in k23555 in k23486 in k23293 in k23290 in k23185 in k23134 in k11783 in k10718 in k10715 in k7274 in k7271 in k6978 in k6975 in k6971 in k6680 in k6677 in k6674 in k6671 */
static void C_ccall f_36008(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_36008,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_36012,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("error");
t4=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[21],((C_word*)t0)[2]);}
else{
t4=t2;
f_36012(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k36010 in k36006 in k35955 in k35952 in cs:play in k35543 in k35540 in k35537 in k35534 in k35531 in k35528 in k35525 in k35522 in k35519 in k35516 in k35513 in k35510 in k35507 in k35504 in k35501 in k35498 in k35495 in k35492 in k35489 in k35486 in k30217 in k26697 in k26694 in k26691 in k26688 in k26263 in k26260 in k26257 in k26254 in k26251 in k25668 in k25665 in k25142 in k25139 in k25136 in k25133 in k25130 in k25127 in k25124 in k25121 in k25118 in k25115 in k25112 in k25109 in k25106 in k25103 in k25100 in k25097 in k25094 in k25091 in k25088 in k25085 in k25082 in k24943 in k24940 in k24937 in k24934 in k24878 in k24875 in k24872 in k24869 in k24866 in k24863 in k24860 in k24857 in k23555 in k23486 in k23293 in k23290 in k23185 in k23134 in k11783 in k10718 in k10715 in k7274 in k7271 in k6978 in k6975 in k6971 in k6680 in k6677 in k6674 in k6671 */
static void C_ccall f_36012(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_35960(t7,t6);}

/* k35958 in k35955 in k35952 in cs:play in k35543 in k35540 in k35537 in k35534 in k35531 in k35528 in k35525 in k35522 in k35519 in k35516 in k35513 in k35510 in k35507 in k35504 in k35501 in k35498 in k35495 in k35492 in k35489 in k35486 in k30217 in k26697 in k26694 in k26691 in k26688 in k26263 in k26260 in k26257 in k26254 in k26251 in k25668 in k25665 in k25142 in k25139 in k25136 in k25133 in k25130 in k25127 in k25124 in k25121 in k25118 in k25115 in k25112 in k25109 in k25106 in k25103 in k25100 in k25097 in k25094 in k25091 in k25088 in k25085 in k25082 in k24943 in k24940 in k24937 in k24934 in k24878 in k24875 in k24872 in k24869 in k24866 in k24863 in k24860 in k24857 in k23555 in k23486 in k23293 in k23290 in k23185 in k23134 in k11783 in k10718 in k10715 in k7274 in k7271 in k6978 in k6975 in k6971 in k6680 in k6677 in k6674 in k6671 */
static void C_fcall f_35960(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[6],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_35960,NULL,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_35963,a[2]=((C_word*)t0)[4],a[3]=((C_word*)t0)[5],a[4]=((C_word*)t0)[6],a[5]=((C_word*)t0)[7],tmp=(C_word)a,a+=6,tmp);
if(C_truep((C_word)C_i_nullp(((C_word*)((C_word*)t0)[3])[1]))){
t3=t2;
f_35963(2,t3,C_SCHEME_UNDEFINED);}
else{
C_trace("error");
t3=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t3))(4,t3,t2,lf[5],((C_word*)t0)[2]);}}

/* k35961 in k35958 in k35955 in k35952 in cs:play in k35543 in k35540 in k35537 in k35534 in k35531 in k35528 in k35525 in k35522 in k35519 in k35516 in k35513 in k35510 in k35507 in k35504 in k35501 in k35498 in k35495 in k35492 in k35489 in k35486 in k30217 in k26697 in k26694 in k26691 in k26688 in k26263 in k26260 in k26257 in k26254 in k26251 in k25668 in k25665 in k25142 in k25139 in k25136 in k25133 in k25130 in k25127 in k25124 in k25121 in k25118 in k25115 in k25112 in k25109 in k25106 in k25103 in k25100 in k25097 in k25094 in k25091 in k25088 in k25085 in k25082 in k24943 in k24940 in k24937 in k24934 in k24878 in k24875 in k24872 in k24869 in k24866 in k24863 in k24860 in k24857 in k23555 in k23486 in k23293 in k23290 in k23185 in k23134 in k11783 in k10718 in k10715 in k7274 in k7271 in k6978 in k6975 in k6971 in k6680 in k6677 in k6674 in k6671 */
static void C_ccall f_35963(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[6],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_35963,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_35966,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],tmp=(C_word)a,a+=6,tmp);
t3=((C_word*)((C_word*)t0)[3])[1];
if(C_truep(t3)){
t4=t2;
f_35966(t4,C_SCHEME_UNDEFINED);}
else{
t4=C_set_block_item(((C_word*)t0)[3],0,C_fix(-1));
t5=t2;
f_35966(t5,t4);}}

/* k35964 in k35961 in k35958 in k35955 in k35952 in cs:play in k35543 in k35540 in k35537 in k35534 in k35531 in k35528 in k35525 in k35522 in k35519 in k35516 in k35513 in k35510 in k35507 in k35504 in k35501 in k35498 in k35495 in k35492 in k35489 in k35486 in k30217 in k26697 in k26694 in k26691 in k26688 in k26263 in k26260 in k26257 in k26254 in k26251 in k25668 in k25665 in k25142 in k25139 in k25136 in k25133 in k25130 in k25127 in k25124 in k25121 in k25118 in k25115 in k25112 in k25109 in k25106 in k25103 in k25100 in k25097 in k25094 in k25091 in k25088 in k25085 in k25082 in k24943 in k24940 in k24937 in k24934 in k24878 in k24875 in k24872 in k24869 in k24866 in k24863 in k24860 in k24857 in k23555 in k23486 in k23293 in k23290 in k23185 in k23134 in k11783 in k10718 in k10715 in k7274 in k7271 in k6978 in k6975 in k6971 in k6680 in k6677 in k6674 in k6671 */
static void C_fcall f_35966(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word ab[3],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_35966,NULL,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_35970,a[2]=((C_word)li589),tmp=(C_word)a,a+=3,tmp);
((C_proc5)(void*)(*((C_word*)t2+1)))(5,t2,((C_word*)t0)[5],((C_word*)((C_word*)t0)[4])[1],((C_word*)((C_word*)t0)[3])[1],((C_word*)((C_word*)t0)[2])[1]);}

/* f_35970 in k35964 in k35961 in k35958 in k35955 in k35952 in cs:play in k35543 in k35540 in k35537 in k35534 in k35531 in k35528 in k35525 in k35522 in k35519 in k35516 in k35513 in k35510 in k35507 in k35504 in k35501 in k35498 in k35495 in k35492 in k35489 in k35486 in k30217 in k26697 in k26694 in k26691 in k26688 in k26263 in k26260 in k26257 in k26254 in k26251 in k25668 in k25665 in k25142 in k25139 in k25136 in k25133 in k25130 in k25127 in k25124 in k25121 in k25118 in k25115 in k25112 in k25109 in k25106 in k25103 in k25100 in k25097 in k25094 in k25091 in k25088 in k25085 in k25082 in k24943 in k24940 in k24937 in k24934 in k24878 in k24875 in k24872 in k24869 in k24866 in k24863 in k24860 in k24857 in k23555 in k23486 in k23293 in k23290 in k23185 in k23134 in k11783 in k10718 in k10715 in k7274 in k7271 in k6978 in k6975 in k6971 in k6680 in k6677 in k6674 in k6671 */
static void C_ccall f_35970(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4){
C_word tmp;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word *a;
if(c!=5) C_bad_argc_2(c,5,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr5,(void*)f_35970,5,t0,t1,t2,t3,t4);}
t5=(C_word)C_i_foreign_flonum_argumentp(t2);
t6=(C_word)C_i_foreign_flonum_argumentp(t3);
t7=(C_word)C_i_foreign_flonum_argumentp(t4);
t8=t1;
((C_proc2)(void*)(*((C_word*)t8+1)))(2,t8,(C_word)stub6412(C_SCHEME_UNDEFINED,t5,t6,t7));}

/* cs:print in k35543 in k35540 in k35537 in k35534 in k35531 in k35528 in k35525 in k35522 in k35519 in k35516 in k35513 in k35510 in k35507 in k35504 in k35501 in k35498 in k35495 in k35492 in k35489 in k35486 in k30217 in k26697 in k26694 in k26691 in k26688 in k26263 in k26260 in k26257 in k26254 in k26251 in k25668 in k25665 in k25142 in k25139 in k25136 in k25133 in k25130 in k25127 in k25124 in k25121 in k25118 in k25115 in k25112 in k25109 in k25106 in k25103 in k25100 in k25097 in k25094 in k25091 in k25088 in k25085 in k25082 in k24943 in k24940 in k24937 in k24934 in k24878 in k24875 in k24872 in k24869 in k24866 in k24863 in k24860 in k24857 in k23555 in k23486 in k23293 in k23290 in k23185 in k23134 in k11783 in k10718 in k10715 in k7274 in k7271 in k6978 in k6975 in k6971 in k6680 in k6677 in k6674 in k6671 */
static void C_ccall f_35712(C_word c,C_word t0,C_word t1,...){
C_word tmp;
C_word t2;
va_list v;
C_word *a,c2=c;
C_save_rest(t1,c2,2);
C_check_for_interrupt;
if(!C_demand(c*C_SIZEOF_PAIR+44)){
C_save_and_reclaim((void*)tr2r,(void*)f_35712r,2,t0,t1);}
else{
a=C_alloc((c-2)*3);
t2=C_restore_rest(a,C_rest_count(0));
f_35712r(t0,t1,t2);}}

static void C_ccall f_35712r(C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word t14;
C_word t15;
C_word t16;
C_word t17;
C_word t18;
C_word t19;
C_word t20;
C_word t21;
C_word t22;
C_word *a=C_alloc(44);
t3=C_fix(0);
t4=(*a=C_VECTOR_TYPE|1,a[1]=t3,tmp=(C_word)a,a+=2,tmp);
t5=C_SCHEME_FALSE;
t6=(*a=C_VECTOR_TYPE|1,a[1]=t5,tmp=(C_word)a,a+=2,tmp);
t7=C_SCHEME_FALSE;
t8=(*a=C_VECTOR_TYPE|1,a[1]=t7,tmp=(C_word)a,a+=2,tmp);
t9=C_SCHEME_FALSE;
t10=(*a=C_VECTOR_TYPE|1,a[1]=t9,tmp=(C_word)a,a+=2,tmp);
t11=t2;
t12=(*a=C_VECTOR_TYPE|1,a[1]=t11,tmp=(C_word)a,a+=2,tmp);
t13=C_SCHEME_FALSE;
t14=(*a=C_VECTOR_TYPE|1,a[1]=t13,tmp=(C_word)a,a+=2,tmp);
t15=(*a=C_CLOSURE_TYPE|9,a[1]=(C_word)f_35716,a[2]=t10,a[3]=t14,a[4]=t8,a[5]=t2,a[6]=t12,a[7]=t6,a[8]=t4,a[9]=t1,tmp=(C_word)a,a+=10,tmp);
if(C_truep((C_word)C_i_nullp(((C_word*)t12)[1]))){
t16=t15;
f_35716(t16,C_SCHEME_UNDEFINED);}
else{
t16=(C_word)C_i_car(((C_word*)t12)[1]);
t17=(C_word)C_eqp(t16,lf[800]);
if(C_truep(t17)){
t18=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_35863,a[2]=t2,a[3]=t15,a[4]=t12,a[5]=t14,a[6]=t8,a[7]=t4,tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)t8)[1])){
C_trace("error");
t19=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t19))(4,t19,t18,lf[19],lf[800]);}
else{
t19=t18;
f_35863(2,t19,C_SCHEME_UNDEFINED);}}
else{
t18=(C_word)C_eqp(t16,lf[801]);
if(C_truep(t18)){
t19=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_35898,a[2]=t2,a[3]=t15,a[4]=t12,a[5]=t14,a[6]=t10,a[7]=t6,tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)t10)[1])){
C_trace("error");
t20=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t20))(4,t20,t19,lf[19],lf[801]);}
else{
t20=t19;
f_35898(2,t20,C_SCHEME_UNDEFINED);}}
else{
t19=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_35927,a[2]=t15,a[3]=t8,a[4]=t4,a[5]=t12,tmp=(C_word)a,a+=6,tmp);
if(C_truep(((C_word*)t14)[1])){
C_trace("error");
t20=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t20))(4,t20,t19,lf[10],t2);}
else{
t20=t19;
f_35927(2,t20,C_SCHEME_UNDEFINED);}}}}}

/* k35925 in cs:print in k35543 in k35540 in k35537 in k35534 in k35531 in k35528 in k35525 in k35522 in k35519 in k35516 in k35513 in k35510 in k35507 in k35504 in k35501 in k35498 in k35495 in k35492 in k35489 in k35486 in k30217 in k26697 in k26694 in k26691 in k26688 in k26263 in k26260 in k26257 in k26254 in k26251 in k25668 in k25665 in k25142 in k25139 in k25136 in k25133 in k25130 in k25127 in k25124 in k25121 in k25118 in k25115 in k25112 in k25109 in k25106 in k25103 in k25100 in k25097 in k25094 in k25091 in k25088 in k25085 in k25082 in k24943 in k24940 in k24937 in k24934 in k24878 in k24875 in k24872 in k24869 in k24866 in k24863 in k24860 in k24857 in k23555 in k23486 in k23293 in k23290 in k23185 in k23134 in k11783 in k10718 in k10715 in k7274 in k7271 in k6978 in k6975 in k6971 in k6680 in k6677 in k6674 in k6671 */
static void C_ccall f_35927(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_35927,2,t0,t1);}
t2=(C_word)C_i_car(((C_word*)((C_word*)t0)[5])[1]);
t3=C_mutate(((C_word *)((C_word*)t0)[4])+1,t2);
t4=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_35934,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[5],a[4]=((C_word*)t0)[3],tmp=(C_word)a,a+=5,tmp);
t5=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_35942,a[2]=((C_word*)t0)[4],a[3]=t4,tmp=(C_word)a,a+=4,tmp);
C_trace("keyword?");
t6=C_retrieve(lf[13]);
((C_proc3)C_retrieve_proc(t6))(3,t6,t5,((C_word*)((C_word*)t0)[4])[1]);}

/* k35940 in k35925 in cs:print in k35543 in k35540 in k35537 in k35534 in k35531 in k35528 in k35525 in k35522 in k35519 in k35516 in k35513 in k35510 in k35507 in k35504 in k35501 in k35498 in k35495 in k35492 in k35489 in k35486 in k30217 in k26697 in k26694 in k26691 in k26688 in k26263 in k26260 in k26257 in k26254 in k26251 in k25668 in k25665 in k25142 in k25139 in k25136 in k25133 in k25130 in k25127 in k25124 in k25121 in k25118 in k25115 in k25112 in k25109 in k25106 in k25103 in k25100 in k25097 in k25094 in k25091 in k25088 in k25085 in k25082 in k24943 in k24940 in k24937 in k24934 in k24878 in k24875 in k24872 in k24869 in k24866 in k24863 in k24860 in k24857 in k23555 in k23486 in k23293 in k23290 in k23185 in k23134 in k11783 in k10718 in k10715 in k7274 in k7271 in k6978 in k6975 in k6971 in k6680 in k6677 in k6674 in k6671 */
static void C_ccall f_35942(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
if(C_truep(t1)){
C_trace("error");
t2=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t2))(4,t2,((C_word*)t0)[3],lf[14],((C_word*)((C_word*)t0)[2])[1]);}
else{
t2=((C_word*)t0)[3];
f_35934(2,t2,C_SCHEME_UNDEFINED);}}

/* k35932 in k35925 in cs:print in k35543 in k35540 in k35537 in k35534 in k35531 in k35528 in k35525 in k35522 in k35519 in k35516 in k35513 in k35510 in k35507 in k35504 in k35501 in k35498 in k35495 in k35492 in k35489 in k35486 in k30217 in k26697 in k26694 in k26691 in k26688 in k26263 in k26260 in k26257 in k26254 in k26251 in k25668 in k25665 in k25142 in k25139 in k25136 in k25133 in k25130 in k25127 in k25124 in k25121 in k25118 in k25115 in k25112 in k25109 in k25106 in k25103 in k25100 in k25097 in k25094 in k25091 in k25088 in k25085 in k25082 in k24943 in k24940 in k24937 in k24934 in k24878 in k24875 in k24872 in k24869 in k24866 in k24863 in k24860 in k24857 in k23555 in k23486 in k23293 in k23290 in k23185 in k23134 in k11783 in k10718 in k10715 in k7274 in k7271 in k6978 in k6975 in k6971 in k6680 in k6677 in k6674 in k6671 */
static void C_ccall f_35934(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word *a;
t2=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[3])[1]);
t4=C_mutate(((C_word *)((C_word*)t0)[3])+1,t3);
t5=((C_word*)t0)[2];
f_35716(t5,t4);}

/* k35896 in cs:print in k35543 in k35540 in k35537 in k35534 in k35531 in k35528 in k35525 in k35522 in k35519 in k35516 in k35513 in k35510 in k35507 in k35504 in k35501 in k35498 in k35495 in k35492 in k35489 in k35486 in k30217 in k26697 in k26694 in k26691 in k26688 in k26263 in k26260 in k26257 in k26254 in k26251 in k25668 in k25665 in k25142 in k25139 in k25136 in k25133 in k25130 in k25127 in k25124 in k25121 in k25118 in k25115 in k25112 in k25109 in k25106 in k25103 in k25100 in k25097 in k25094 in k25091 in k25088 in k25085 in k25082 in k24943 in k24940 in k24937 in k24934 in k24878 in k24875 in k24872 in k24869 in k24866 in k24863 in k24860 in k24857 in k23555 in k23486 in k23293 in k23290 in k23185 in k23134 in k11783 in k10718 in k10715 in k7274 in k7271 in k6978 in k6975 in k6971 in k6680 in k6677 in k6674 in k6671 */
static void C_ccall f_35898(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_35898,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_35902,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("error");
t4=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[21],((C_word*)t0)[2]);}
else{
t4=t2;
f_35902(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k35900 in k35896 in cs:print in k35543 in k35540 in k35537 in k35534 in k35531 in k35528 in k35525 in k35522 in k35519 in k35516 in k35513 in k35510 in k35507 in k35504 in k35501 in k35498 in k35495 in k35492 in k35489 in k35486 in k30217 in k26697 in k26694 in k26691 in k26688 in k26263 in k26260 in k26257 in k26254 in k26251 in k25668 in k25665 in k25142 in k25139 in k25136 in k25133 in k25130 in k25127 in k25124 in k25121 in k25118 in k25115 in k25112 in k25109 in k25106 in k25103 in k25100 in k25097 in k25094 in k25091 in k25088 in k25085 in k25082 in k24943 in k24940 in k24937 in k24934 in k24878 in k24875 in k24872 in k24869 in k24866 in k24863 in k24860 in k24857 in k23555 in k23486 in k23293 in k23290 in k23185 in k23134 in k11783 in k10718 in k10715 in k7274 in k7271 in k6978 in k6975 in k6971 in k6680 in k6677 in k6674 in k6671 */
static void C_ccall f_35902(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_35716(t7,t6);}

/* k35861 in cs:print in k35543 in k35540 in k35537 in k35534 in k35531 in k35528 in k35525 in k35522 in k35519 in k35516 in k35513 in k35510 in k35507 in k35504 in k35501 in k35498 in k35495 in k35492 in k35489 in k35486 in k30217 in k26697 in k26694 in k26691 in k26688 in k26263 in k26260 in k26257 in k26254 in k26251 in k25668 in k25665 in k25142 in k25139 in k25136 in k25133 in k25130 in k25127 in k25124 in k25121 in k25118 in k25115 in k25112 in k25109 in k25106 in k25103 in k25100 in k25097 in k25094 in k25091 in k25088 in k25085 in k25082 in k24943 in k24940 in k24937 in k24934 in k24878 in k24875 in k24872 in k24869 in k24866 in k24863 in k24860 in k24857 in k23555 in k23486 in k23293 in k23290 in k23185 in k23134 in k11783 in k10718 in k10715 in k7274 in k7271 in k6978 in k6975 in k6971 in k6680 in k6677 in k6674 in k6671 */
static void C_ccall f_35863(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_35863,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_35867,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("error");
t4=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[21],((C_word*)t0)[2]);}
else{
t4=t2;
f_35867(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k35865 in k35861 in cs:print in k35543 in k35540 in k35537 in k35534 in k35531 in k35528 in k35525 in k35522 in k35519 in k35516 in k35513 in k35510 in k35507 in k35504 in k35501 in k35498 in k35495 in k35492 in k35489 in k35486 in k30217 in k26697 in k26694 in k26691 in k26688 in k26263 in k26260 in k26257 in k26254 in k26251 in k25668 in k25665 in k25142 in k25139 in k25136 in k25133 in k25130 in k25127 in k25124 in k25121 in k25118 in k25115 in k25112 in k25109 in k25106 in k25103 in k25100 in k25097 in k25094 in k25091 in k25088 in k25085 in k25082 in k24943 in k24940 in k24937 in k24934 in k24878 in k24875 in k24872 in k24869 in k24866 in k24863 in k24860 in k24857 in k23555 in k23486 in k23293 in k23290 in k23185 in k23134 in k11783 in k10718 in k10715 in k7274 in k7271 in k6978 in k6975 in k6971 in k6680 in k6677 in k6674 in k6671 */
static void C_ccall f_35867(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_35716(t7,t6);}

/* k35714 in cs:print in k35543 in k35540 in k35537 in k35534 in k35531 in k35528 in k35525 in k35522 in k35519 in k35516 in k35513 in k35510 in k35507 in k35504 in k35501 in k35498 in k35495 in k35492 in k35489 in k35486 in k30217 in k26697 in k26694 in k26691 in k26688 in k26263 in k26260 in k26257 in k26254 in k26251 in k25668 in k25665 in k25142 in k25139 in k25136 in k25133 in k25130 in k25127 in k25124 in k25121 in k25118 in k25115 in k25112 in k25109 in k25106 in k25103 in k25100 in k25097 in k25094 in k25091 in k25088 in k25085 in k25082 in k24943 in k24940 in k24937 in k24934 in k24878 in k24875 in k24872 in k24869 in k24866 in k24863 in k24860 in k24857 in k23555 in k23486 in k23293 in k23290 in k23185 in k23134 in k11783 in k10718 in k10715 in k7274 in k7271 in k6978 in k6975 in k6971 in k6680 in k6677 in k6674 in k6671 */
static void C_fcall f_35716(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word ab[29],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_35716,NULL,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_35719,a[2]=((C_word*)t0)[5],a[3]=((C_word*)t0)[6],a[4]=((C_word*)t0)[7],a[5]=((C_word*)t0)[8],a[6]=((C_word*)t0)[9],tmp=(C_word)a,a+=7,tmp);
if(C_truep((C_word)C_i_nullp(((C_word*)((C_word*)t0)[6])[1]))){
t3=t2;
f_35719(t3,C_SCHEME_UNDEFINED);}
else{
t3=(C_word)C_i_car(((C_word*)((C_word*)t0)[6])[1]);
t4=(C_word)C_eqp(t3,lf[800]);
if(C_truep(t4)){
t5=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_35763,a[2]=((C_word*)t0)[5],a[3]=t2,a[4]=((C_word*)t0)[6],a[5]=((C_word*)t0)[3],a[6]=((C_word*)t0)[4],a[7]=((C_word*)t0)[8],tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)((C_word*)t0)[4])[1])){
C_trace("error");
t6=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t6))(4,t6,t5,lf[19],lf[800]);}
else{
t6=t5;
f_35763(2,t6,C_SCHEME_UNDEFINED);}}
else{
t5=(C_word)C_eqp(t3,lf[801]);
if(C_truep(t5)){
t6=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_35798,a[2]=((C_word*)t0)[5],a[3]=t2,a[4]=((C_word*)t0)[6],a[5]=((C_word*)t0)[3],a[6]=((C_word*)t0)[2],a[7]=((C_word*)t0)[7],tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)((C_word*)t0)[2])[1])){
C_trace("error");
t7=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t7))(4,t7,t6,lf[19],lf[801]);}
else{
t7=t6;
f_35798(2,t7,C_SCHEME_UNDEFINED);}}
else{
t6=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_35827,a[2]=t2,a[3]=((C_word*)t0)[2],a[4]=((C_word*)t0)[7],a[5]=((C_word*)t0)[6],tmp=(C_word)a,a+=6,tmp);
if(C_truep(((C_word*)((C_word*)t0)[3])[1])){
C_trace("error");
t7=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t7))(4,t7,t6,lf[10],((C_word*)t0)[5]);}
else{
t7=t6;
f_35827(2,t7,C_SCHEME_UNDEFINED);}}}}}

/* k35825 in k35714 in cs:print in k35543 in k35540 in k35537 in k35534 in k35531 in k35528 in k35525 in k35522 in k35519 in k35516 in k35513 in k35510 in k35507 in k35504 in k35501 in k35498 in k35495 in k35492 in k35489 in k35486 in k30217 in k26697 in k26694 in k26691 in k26688 in k26263 in k26260 in k26257 in k26254 in k26251 in k25668 in k25665 in k25142 in k25139 in k25136 in k25133 in k25130 in k25127 in k25124 in k25121 in k25118 in k25115 in k25112 in k25109 in k25106 in k25103 in k25100 in k25097 in k25094 in k25091 in k25088 in k25085 in k25082 in k24943 in k24940 in k24937 in k24934 in k24878 in k24875 in k24872 in k24869 in k24866 in k24863 in k24860 in k24857 in k23555 in k23486 in k23293 in k23290 in k23185 in k23134 in k11783 in k10718 in k10715 in k7274 in k7271 in k6978 in k6975 in k6971 in k6680 in k6677 in k6674 in k6671 */
static void C_ccall f_35827(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_35827,2,t0,t1);}
t2=(C_word)C_i_car(((C_word*)((C_word*)t0)[5])[1]);
t3=C_mutate(((C_word *)((C_word*)t0)[4])+1,t2);
t4=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_35834,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[5],a[4]=((C_word*)t0)[3],tmp=(C_word)a,a+=5,tmp);
t5=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_35842,a[2]=((C_word*)t0)[4],a[3]=t4,tmp=(C_word)a,a+=4,tmp);
C_trace("keyword?");
t6=C_retrieve(lf[13]);
((C_proc3)C_retrieve_proc(t6))(3,t6,t5,((C_word*)((C_word*)t0)[4])[1]);}

/* k35840 in k35825 in k35714 in cs:print in k35543 in k35540 in k35537 in k35534 in k35531 in k35528 in k35525 in k35522 in k35519 in k35516 in k35513 in k35510 in k35507 in k35504 in k35501 in k35498 in k35495 in k35492 in k35489 in k35486 in k30217 in k26697 in k26694 in k26691 in k26688 in k26263 in k26260 in k26257 in k26254 in k26251 in k25668 in k25665 in k25142 in k25139 in k25136 in k25133 in k25130 in k25127 in k25124 in k25121 in k25118 in k25115 in k25112 in k25109 in k25106 in k25103 in k25100 in k25097 in k25094 in k25091 in k25088 in k25085 in k25082 in k24943 in k24940 in k24937 in k24934 in k24878 in k24875 in k24872 in k24869 in k24866 in k24863 in k24860 in k24857 in k23555 in k23486 in k23293 in k23290 in k23185 in k23134 in k11783 in k10718 in k10715 in k7274 in k7271 in k6978 in k6975 in k6971 in k6680 in k6677 in k6674 in k6671 */
static void C_ccall f_35842(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
if(C_truep(t1)){
C_trace("error");
t2=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t2))(4,t2,((C_word*)t0)[3],lf[14],((C_word*)((C_word*)t0)[2])[1]);}
else{
t2=((C_word*)t0)[3];
f_35834(2,t2,C_SCHEME_UNDEFINED);}}

/* k35832 in k35825 in k35714 in cs:print in k35543 in k35540 in k35537 in k35534 in k35531 in k35528 in k35525 in k35522 in k35519 in k35516 in k35513 in k35510 in k35507 in k35504 in k35501 in k35498 in k35495 in k35492 in k35489 in k35486 in k30217 in k26697 in k26694 in k26691 in k26688 in k26263 in k26260 in k26257 in k26254 in k26251 in k25668 in k25665 in k25142 in k25139 in k25136 in k25133 in k25130 in k25127 in k25124 in k25121 in k25118 in k25115 in k25112 in k25109 in k25106 in k25103 in k25100 in k25097 in k25094 in k25091 in k25088 in k25085 in k25082 in k24943 in k24940 in k24937 in k24934 in k24878 in k24875 in k24872 in k24869 in k24866 in k24863 in k24860 in k24857 in k23555 in k23486 in k23293 in k23290 in k23185 in k23134 in k11783 in k10718 in k10715 in k7274 in k7271 in k6978 in k6975 in k6971 in k6680 in k6677 in k6674 in k6671 */
static void C_ccall f_35834(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word *a;
t2=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[3])[1]);
t4=C_mutate(((C_word *)((C_word*)t0)[3])+1,t3);
t5=((C_word*)t0)[2];
f_35719(t5,t4);}

/* k35796 in k35714 in cs:print in k35543 in k35540 in k35537 in k35534 in k35531 in k35528 in k35525 in k35522 in k35519 in k35516 in k35513 in k35510 in k35507 in k35504 in k35501 in k35498 in k35495 in k35492 in k35489 in k35486 in k30217 in k26697 in k26694 in k26691 in k26688 in k26263 in k26260 in k26257 in k26254 in k26251 in k25668 in k25665 in k25142 in k25139 in k25136 in k25133 in k25130 in k25127 in k25124 in k25121 in k25118 in k25115 in k25112 in k25109 in k25106 in k25103 in k25100 in k25097 in k25094 in k25091 in k25088 in k25085 in k25082 in k24943 in k24940 in k24937 in k24934 in k24878 in k24875 in k24872 in k24869 in k24866 in k24863 in k24860 in k24857 in k23555 in k23486 in k23293 in k23290 in k23185 in k23134 in k11783 in k10718 in k10715 in k7274 in k7271 in k6978 in k6975 in k6971 in k6680 in k6677 in k6674 in k6671 */
static void C_ccall f_35798(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_35798,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_35802,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("error");
t4=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[21],((C_word*)t0)[2]);}
else{
t4=t2;
f_35802(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k35800 in k35796 in k35714 in cs:print in k35543 in k35540 in k35537 in k35534 in k35531 in k35528 in k35525 in k35522 in k35519 in k35516 in k35513 in k35510 in k35507 in k35504 in k35501 in k35498 in k35495 in k35492 in k35489 in k35486 in k30217 in k26697 in k26694 in k26691 in k26688 in k26263 in k26260 in k26257 in k26254 in k26251 in k25668 in k25665 in k25142 in k25139 in k25136 in k25133 in k25130 in k25127 in k25124 in k25121 in k25118 in k25115 in k25112 in k25109 in k25106 in k25103 in k25100 in k25097 in k25094 in k25091 in k25088 in k25085 in k25082 in k24943 in k24940 in k24937 in k24934 in k24878 in k24875 in k24872 in k24869 in k24866 in k24863 in k24860 in k24857 in k23555 in k23486 in k23293 in k23290 in k23185 in k23134 in k11783 in k10718 in k10715 in k7274 in k7271 in k6978 in k6975 in k6971 in k6680 in k6677 in k6674 in k6671 */
static void C_ccall f_35802(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_35719(t7,t6);}

/* k35761 in k35714 in cs:print in k35543 in k35540 in k35537 in k35534 in k35531 in k35528 in k35525 in k35522 in k35519 in k35516 in k35513 in k35510 in k35507 in k35504 in k35501 in k35498 in k35495 in k35492 in k35489 in k35486 in k30217 in k26697 in k26694 in k26691 in k26688 in k26263 in k26260 in k26257 in k26254 in k26251 in k25668 in k25665 in k25142 in k25139 in k25136 in k25133 in k25130 in k25127 in k25124 in k25121 in k25118 in k25115 in k25112 in k25109 in k25106 in k25103 in k25100 in k25097 in k25094 in k25091 in k25088 in k25085 in k25082 in k24943 in k24940 in k24937 in k24934 in k24878 in k24875 in k24872 in k24869 in k24866 in k24863 in k24860 in k24857 in k23555 in k23486 in k23293 in k23290 in k23185 in k23134 in k11783 in k10718 in k10715 in k7274 in k7271 in k6978 in k6975 in k6971 in k6680 in k6677 in k6674 in k6671 */
static void C_ccall f_35763(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_35763,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_35767,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("error");
t4=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[21],((C_word*)t0)[2]);}
else{
t4=t2;
f_35767(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k35765 in k35761 in k35714 in cs:print in k35543 in k35540 in k35537 in k35534 in k35531 in k35528 in k35525 in k35522 in k35519 in k35516 in k35513 in k35510 in k35507 in k35504 in k35501 in k35498 in k35495 in k35492 in k35489 in k35486 in k30217 in k26697 in k26694 in k26691 in k26688 in k26263 in k26260 in k26257 in k26254 in k26251 in k25668 in k25665 in k25142 in k25139 in k25136 in k25133 in k25130 in k25127 in k25124 in k25121 in k25118 in k25115 in k25112 in k25109 in k25106 in k25103 in k25100 in k25097 in k25094 in k25091 in k25088 in k25085 in k25082 in k24943 in k24940 in k24937 in k24934 in k24878 in k24875 in k24872 in k24869 in k24866 in k24863 in k24860 in k24857 in k23555 in k23486 in k23293 in k23290 in k23185 in k23134 in k11783 in k10718 in k10715 in k7274 in k7271 in k6978 in k6975 in k6971 in k6680 in k6677 in k6674 in k6671 */
static void C_ccall f_35767(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_35719(t7,t6);}

/* k35717 in k35714 in cs:print in k35543 in k35540 in k35537 in k35534 in k35531 in k35528 in k35525 in k35522 in k35519 in k35516 in k35513 in k35510 in k35507 in k35504 in k35501 in k35498 in k35495 in k35492 in k35489 in k35486 in k30217 in k26697 in k26694 in k26691 in k26688 in k26263 in k26260 in k26257 in k26254 in k26251 in k25668 in k25665 in k25142 in k25139 in k25136 in k25133 in k25130 in k25127 in k25124 in k25121 in k25118 in k25115 in k25112 in k25109 in k25106 in k25103 in k25100 in k25097 in k25094 in k25091 in k25088 in k25085 in k25082 in k24943 in k24940 in k24937 in k24934 in k24878 in k24875 in k24872 in k24869 in k24866 in k24863 in k24860 in k24857 in k23555 in k23486 in k23293 in k23290 in k23185 in k23134 in k11783 in k10718 in k10715 in k7274 in k7271 in k6978 in k6975 in k6971 in k6680 in k6677 in k6674 in k6671 */
static void C_fcall f_35719(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[5],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_35719,NULL,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_35722,a[2]=((C_word*)t0)[4],a[3]=((C_word*)t0)[5],a[4]=((C_word*)t0)[6],tmp=(C_word)a,a+=5,tmp);
if(C_truep((C_word)C_i_nullp(((C_word*)((C_word*)t0)[3])[1]))){
t3=t2;
f_35722(2,t3,C_SCHEME_UNDEFINED);}
else{
C_trace("error");
t3=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t3))(4,t3,t2,lf[5],((C_word*)t0)[2]);}}

/* k35720 in k35717 in k35714 in cs:print in k35543 in k35540 in k35537 in k35534 in k35531 in k35528 in k35525 in k35522 in k35519 in k35516 in k35513 in k35510 in k35507 in k35504 in k35501 in k35498 in k35495 in k35492 in k35489 in k35486 in k30217 in k26697 in k26694 in k26691 in k26688 in k26263 in k26260 in k26257 in k26254 in k26251 in k25668 in k25665 in k25142 in k25139 in k25136 in k25133 in k25130 in k25127 in k25124 in k25121 in k25118 in k25115 in k25112 in k25109 in k25106 in k25103 in k25100 in k25097 in k25094 in k25091 in k25088 in k25085 in k25082 in k24943 in k24940 in k24937 in k24934 in k24878 in k24875 in k24872 in k24869 in k24866 in k24863 in k24860 in k24857 in k23555 in k23486 in k23293 in k23290 in k23185 in k23134 in k11783 in k10718 in k10715 in k7274 in k7271 in k6978 in k6975 in k6971 in k6680 in k6677 in k6674 in k6671 */
static void C_ccall f_35722(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[5],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_35722,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_35725,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],tmp=(C_word)a,a+=5,tmp);
t3=((C_word*)((C_word*)t0)[2])[1];
if(C_truep(t3)){
t4=t2;
f_35725(t4,C_SCHEME_UNDEFINED);}
else{
t4=C_set_block_item(((C_word*)t0)[2],0,C_fix(-1));
t5=t2;
f_35725(t5,t4);}}

/* k35723 in k35720 in k35717 in k35714 in cs:print in k35543 in k35540 in k35537 in k35534 in k35531 in k35528 in k35525 in k35522 in k35519 in k35516 in k35513 in k35510 in k35507 in k35504 in k35501 in k35498 in k35495 in k35492 in k35489 in k35486 in k30217 in k26697 in k26694 in k26691 in k26688 in k26263 in k26260 in k26257 in k26254 in k26251 in k25668 in k25665 in k25142 in k25139 in k25136 in k25133 in k25130 in k25127 in k25124 in k25121 in k25118 in k25115 in k25112 in k25109 in k25106 in k25103 in k25100 in k25097 in k25094 in k25091 in k25088 in k25085 in k25082 in k24943 in k24940 in k24937 in k24934 in k24878 in k24875 in k24872 in k24869 in k24866 in k24863 in k24860 in k24857 in k23555 in k23486 in k23293 in k23290 in k23185 in k23134 in k11783 in k10718 in k10715 in k7274 in k7271 in k6978 in k6975 in k6971 in k6680 in k6677 in k6674 in k6671 */
static void C_fcall f_35725(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word ab[3],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_35725,NULL,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_35729,a[2]=((C_word)li587),tmp=(C_word)a,a+=3,tmp);
((C_proc4)(void*)(*((C_word*)t2+1)))(4,t2,((C_word*)t0)[4],((C_word*)((C_word*)t0)[3])[1],((C_word*)((C_word*)t0)[2])[1]);}

/* f_35729 in k35723 in k35720 in k35717 in k35714 in cs:print in k35543 in k35540 in k35537 in k35534 in k35531 in k35528 in k35525 in k35522 in k35519 in k35516 in k35513 in k35510 in k35507 in k35504 in k35501 in k35498 in k35495 in k35492 in k35489 in k35486 in k30217 in k26697 in k26694 in k26691 in k26688 in k26263 in k26260 in k26257 in k26254 in k26251 in k25668 in k25665 in k25142 in k25139 in k25136 in k25133 in k25130 in k25127 in k25124 in k25121 in k25118 in k25115 in k25112 in k25109 in k25106 in k25103 in k25100 in k25097 in k25094 in k25091 in k25088 in k25085 in k25082 in k24943 in k24940 in k24937 in k24934 in k24878 in k24875 in k24872 in k24869 in k24866 in k24863 in k24860 in k24857 in k23555 in k23486 in k23293 in k23290 in k23185 in k23134 in k11783 in k10718 in k10715 in k7274 in k7271 in k6978 in k6975 in k6971 in k6680 in k6677 in k6674 in k6671 */
static void C_ccall f_35729(C_word c,C_word t0,C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word t6;
C_word *a;
if(c!=4) C_bad_argc_2(c,4,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr4,(void*)f_35729,4,t0,t1,t2,t3);}
t4=(C_word)C_i_foreign_flonum_argumentp(t2);
t5=(C_word)C_i_foreign_flonum_argumentp(t3);
t6=t1;
((C_proc2)(void*)(*((C_word*)t6+1)))(2,t6,(C_word)stub6333(C_SCHEME_UNDEFINED,t4,t5));}

/* cs:f in k35543 in k35540 in k35537 in k35534 in k35531 in k35528 in k35525 in k35522 in k35519 in k35516 in k35513 in k35510 in k35507 in k35504 in k35501 in k35498 in k35495 in k35492 in k35489 in k35486 in k30217 in k26697 in k26694 in k26691 in k26688 in k26263 in k26260 in k26257 in k26254 in k26251 in k25668 in k25665 in k25142 in k25139 in k25136 in k25133 in k25130 in k25127 in k25124 in k25121 in k25118 in k25115 in k25112 in k25109 in k25106 in k25103 in k25100 in k25097 in k25094 in k25091 in k25088 in k25085 in k25082 in k24943 in k24940 in k24937 in k24934 in k24878 in k24875 in k24872 in k24869 in k24866 in k24863 in k24860 in k24857 in k23555 in k23486 in k23293 in k23290 in k23185 in k23134 in k11783 in k10718 in k10715 in k7274 in k7271 in k6978 in k6975 in k6971 in k6680 in k6677 in k6674 in k6671 */
static void C_ccall f_35655(C_word c,C_word t0,C_word t1,...){
C_word tmp;
C_word t2;
va_list v;
C_word *a,c2=c;
C_save_rest(t1,c2,2);
C_check_for_interrupt;
if(!C_demand(c*C_SIZEOF_PAIR+13)){
C_save_and_reclaim((void*)tr2r,(void*)f_35655r,2,t0,t1);}
else{
a=C_alloc((c-2)*3);
t2=C_restore_rest(a,C_rest_count(0));
f_35655r(t0,t1,t2);}}

static void C_ccall f_35655r(C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word *a=C_alloc(13);
t3=(*a=C_VECTOR_TYPE|1,a[1]=t2,tmp=(C_word)a,a+=2,tmp);
t4=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_35659,a[2]=t1,tmp=(C_word)a,a+=3,tmp);
if(C_truep((C_word)C_i_nullp(((C_word*)t3)[1]))){
t5=t4;
f_35659(2,t5,C_SCHEME_UNDEFINED);}
else{
t5=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_35668,a[2]=t4,a[3]=t3,tmp=(C_word)a,a+=4,tmp);
t6=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_35688,a[2]=t5,a[3]=t3,tmp=(C_word)a,a+=4,tmp);
t7=(C_word)C_i_cdr(((C_word*)t3)[1]);
if(C_truep((C_word)C_i_nullp(t7))){
t8=(C_word)C_i_car(((C_word*)t3)[1]);
t9=t6;
f_35688(t9,(C_word)C_i_pairp(t8));}
else{
t8=t6;
f_35688(t8,C_SCHEME_FALSE);}}}

/* k35686 in cs:f in k35543 in k35540 in k35537 in k35534 in k35531 in k35528 in k35525 in k35522 in k35519 in k35516 in k35513 in k35510 in k35507 in k35504 in k35501 in k35498 in k35495 in k35492 in k35489 in k35486 in k30217 in k26697 in k26694 in k26691 in k26688 in k26263 in k26260 in k26257 in k26254 in k26251 in k25668 in k25665 in k25142 in k25139 in k25136 in k25133 in k25130 in k25127 in k25124 in k25121 in k25118 in k25115 in k25112 in k25109 in k25106 in k25103 in k25100 in k25097 in k25094 in k25091 in k25088 in k25085 in k25082 in k24943 in k24940 in k24937 in k24934 in k24878 in k24875 in k24872 in k24869 in k24866 in k24863 in k24860 in k24857 in k23555 in k23486 in k23293 in k23290 in k23185 in k23134 in k11783 in k10718 in k10715 in k7274 in k7271 in k6978 in k6975 in k6971 in k6680 in k6677 in k6674 in k6671 */
static void C_fcall f_35688(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word *a;
if(C_truep(t1)){
t2=(C_word)C_i_car(((C_word*)((C_word*)t0)[3])[1]);
t3=C_mutate(((C_word *)((C_word*)t0)[3])+1,t2);
t4=((C_word*)t0)[2];
f_35668(t4,t3);}
else{
t2=((C_word*)t0)[2];
f_35668(t2,C_SCHEME_UNDEFINED);}}

/* k35666 in cs:f in k35543 in k35540 in k35537 in k35534 in k35531 in k35528 in k35525 in k35522 in k35519 in k35516 in k35513 in k35510 in k35507 in k35504 in k35501 in k35498 in k35495 in k35492 in k35489 in k35486 in k30217 in k26697 in k26694 in k26691 in k26688 in k26263 in k26260 in k26257 in k26254 in k26251 in k25668 in k25665 in k25142 in k25139 in k25136 in k25133 in k25130 in k25127 in k25124 in k25121 in k25118 in k25115 in k25112 in k25109 in k25106 in k25103 in k25100 in k25097 in k25094 in k25091 in k25088 in k25085 in k25082 in k24943 in k24940 in k24937 in k24934 in k24878 in k24875 in k24872 in k24869 in k24866 in k24863 in k24860 in k24857 in k23555 in k23486 in k23293 in k23290 in k23185 in k23134 in k11783 in k10718 in k10715 in k7274 in k7271 in k6978 in k6975 in k6971 in k6680 in k6677 in k6674 in k6671 */
static void C_fcall f_35668(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[3],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_35668,NULL,2,t0,t1);}
t2=(C_word)C_i_length(((C_word*)((C_word*)t0)[3])[1]);
t3=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_35676,a[2]=((C_word)li585),tmp=(C_word)a,a+=3,tmp);
((C_proc5)(void*)(*((C_word*)t3+1)))(5,t3,((C_word*)t0)[2],C_fix(2),t2,((C_word*)((C_word*)t0)[3])[1]);}

/* f_35676 in k35666 in cs:f in k35543 in k35540 in k35537 in k35534 in k35531 in k35528 in k35525 in k35522 in k35519 in k35516 in k35513 in k35510 in k35507 in k35504 in k35501 in k35498 in k35495 in k35492 in k35489 in k35486 in k30217 in k26697 in k26694 in k26691 in k26688 in k26263 in k26260 in k26257 in k26254 in k26251 in k25668 in k25665 in k25142 in k25139 in k25136 in k25133 in k25130 in k25127 in k25124 in k25121 in k25118 in k25115 in k25112 in k25109 in k25106 in k25103 in k25100 in k25097 in k25094 in k25091 in k25088 in k25085 in k25082 in k24943 in k24940 in k24937 in k24934 in k24878 in k24875 in k24872 in k24869 in k24866 in k24863 in k24860 in k24857 in k23555 in k23486 in k23293 in k23290 in k23185 in k23134 in k11783 in k10718 in k10715 in k7274 in k7271 in k6978 in k6975 in k6971 in k6680 in k6677 in k6674 in k6671 */
static void C_ccall f_35676(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4){
C_word tmp;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
if(c!=5) C_bad_argc_2(c,5,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr5,(void*)f_35676,5,t0,t1,t2,t3,t4);}
t5=(C_word)C_i_foreign_fixnum_argumentp(t2);
t6=(C_word)C_i_foreign_fixnum_argumentp(t3);
t7=t1;
((C_proc2)(void*)(*((C_word*)t7+1)))(2,t7,(C_word)stub6285(C_SCHEME_UNDEFINED,t5,t6,t4));}

/* k35657 in cs:f in k35543 in k35540 in k35537 in k35534 in k35531 in k35528 in k35525 in k35522 in k35519 in k35516 in k35513 in k35510 in k35507 in k35504 in k35501 in k35498 in k35495 in k35492 in k35489 in k35486 in k30217 in k26697 in k26694 in k26691 in k26688 in k26263 in k26260 in k26257 in k26254 in k26251 in k25668 in k25665 in k25142 in k25139 in k25136 in k25133 in k25130 in k25127 in k25124 in k25121 in k25118 in k25115 in k25112 in k25109 in k25106 in k25103 in k25100 in k25097 in k25094 in k25091 in k25088 in k25085 in k25082 in k24943 in k24940 in k24937 in k24934 in k24878 in k24875 in k24872 in k24869 in k24866 in k24863 in k24860 in k24857 in k23555 in k23486 in k23293 in k23290 in k23185 in k23134 in k11783 in k10718 in k10715 in k7274 in k7271 in k6978 in k6975 in k6971 in k6680 in k6677 in k6674 in k6671 */
static void C_ccall f_35659(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 383  values");
C_values(2,0,((C_word*)t0)[2]);}

/* cs:i in k35543 in k35540 in k35537 in k35534 in k35531 in k35528 in k35525 in k35522 in k35519 in k35516 in k35513 in k35510 in k35507 in k35504 in k35501 in k35498 in k35495 in k35492 in k35489 in k35486 in k30217 in k26697 in k26694 in k26691 in k26688 in k26263 in k26260 in k26257 in k26254 in k26251 in k25668 in k25665 in k25142 in k25139 in k25136 in k25133 in k25130 in k25127 in k25124 in k25121 in k25118 in k25115 in k25112 in k25109 in k25106 in k25103 in k25100 in k25097 in k25094 in k25091 in k25088 in k25085 in k25082 in k24943 in k24940 in k24937 in k24934 in k24878 in k24875 in k24872 in k24869 in k24866 in k24863 in k24860 in k24857 in k23555 in k23486 in k23293 in k23290 in k23185 in k23134 in k11783 in k10718 in k10715 in k7274 in k7271 in k6978 in k6975 in k6971 in k6680 in k6677 in k6674 in k6671 */
static void C_ccall f_35598(C_word c,C_word t0,C_word t1,...){
C_word tmp;
C_word t2;
va_list v;
C_word *a,c2=c;
C_save_rest(t1,c2,2);
C_check_for_interrupt;
if(!C_demand(c*C_SIZEOF_PAIR+13)){
C_save_and_reclaim((void*)tr2r,(void*)f_35598r,2,t0,t1);}
else{
a=C_alloc((c-2)*3);
t2=C_restore_rest(a,C_rest_count(0));
f_35598r(t0,t1,t2);}}

static void C_ccall f_35598r(C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word *a=C_alloc(13);
t3=(*a=C_VECTOR_TYPE|1,a[1]=t2,tmp=(C_word)a,a+=2,tmp);
t4=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_35602,a[2]=t1,tmp=(C_word)a,a+=3,tmp);
if(C_truep((C_word)C_i_nullp(((C_word*)t3)[1]))){
t5=t4;
f_35602(2,t5,C_SCHEME_UNDEFINED);}
else{
t5=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_35611,a[2]=t4,a[3]=t3,tmp=(C_word)a,a+=4,tmp);
t6=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_35631,a[2]=t5,a[3]=t3,tmp=(C_word)a,a+=4,tmp);
t7=(C_word)C_i_cdr(((C_word*)t3)[1]);
if(C_truep((C_word)C_i_nullp(t7))){
t8=(C_word)C_i_car(((C_word*)t3)[1]);
t9=t6;
f_35631(t9,(C_word)C_i_pairp(t8));}
else{
t8=t6;
f_35631(t8,C_SCHEME_FALSE);}}}

/* k35629 in cs:i in k35543 in k35540 in k35537 in k35534 in k35531 in k35528 in k35525 in k35522 in k35519 in k35516 in k35513 in k35510 in k35507 in k35504 in k35501 in k35498 in k35495 in k35492 in k35489 in k35486 in k30217 in k26697 in k26694 in k26691 in k26688 in k26263 in k26260 in k26257 in k26254 in k26251 in k25668 in k25665 in k25142 in k25139 in k25136 in k25133 in k25130 in k25127 in k25124 in k25121 in k25118 in k25115 in k25112 in k25109 in k25106 in k25103 in k25100 in k25097 in k25094 in k25091 in k25088 in k25085 in k25082 in k24943 in k24940 in k24937 in k24934 in k24878 in k24875 in k24872 in k24869 in k24866 in k24863 in k24860 in k24857 in k23555 in k23486 in k23293 in k23290 in k23185 in k23134 in k11783 in k10718 in k10715 in k7274 in k7271 in k6978 in k6975 in k6971 in k6680 in k6677 in k6674 in k6671 */
static void C_fcall f_35631(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word *a;
if(C_truep(t1)){
t2=(C_word)C_i_car(((C_word*)((C_word*)t0)[3])[1]);
t3=C_mutate(((C_word *)((C_word*)t0)[3])+1,t2);
t4=((C_word*)t0)[2];
f_35611(t4,t3);}
else{
t2=((C_word*)t0)[2];
f_35611(t2,C_SCHEME_UNDEFINED);}}

/* k35609 in cs:i in k35543 in k35540 in k35537 in k35534 in k35531 in k35528 in k35525 in k35522 in k35519 in k35516 in k35513 in k35510 in k35507 in k35504 in k35501 in k35498 in k35495 in k35492 in k35489 in k35486 in k30217 in k26697 in k26694 in k26691 in k26688 in k26263 in k26260 in k26257 in k26254 in k26251 in k25668 in k25665 in k25142 in k25139 in k25136 in k25133 in k25130 in k25127 in k25124 in k25121 in k25118 in k25115 in k25112 in k25109 in k25106 in k25103 in k25100 in k25097 in k25094 in k25091 in k25088 in k25085 in k25082 in k24943 in k24940 in k24937 in k24934 in k24878 in k24875 in k24872 in k24869 in k24866 in k24863 in k24860 in k24857 in k23555 in k23486 in k23293 in k23290 in k23185 in k23134 in k11783 in k10718 in k10715 in k7274 in k7271 in k6978 in k6975 in k6971 in k6680 in k6677 in k6674 in k6671 */
static void C_fcall f_35611(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[3],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_35611,NULL,2,t0,t1);}
t2=(C_word)C_i_length(((C_word*)((C_word*)t0)[3])[1]);
t3=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_35619,a[2]=((C_word)li583),tmp=(C_word)a,a+=3,tmp);
((C_proc5)(void*)(*((C_word*)t3+1)))(5,t3,((C_word*)t0)[2],C_fix(1),t2,((C_word*)((C_word*)t0)[3])[1]);}

/* f_35619 in k35609 in cs:i in k35543 in k35540 in k35537 in k35534 in k35531 in k35528 in k35525 in k35522 in k35519 in k35516 in k35513 in k35510 in k35507 in k35504 in k35501 in k35498 in k35495 in k35492 in k35489 in k35486 in k30217 in k26697 in k26694 in k26691 in k26688 in k26263 in k26260 in k26257 in k26254 in k26251 in k25668 in k25665 in k25142 in k25139 in k25136 in k25133 in k25130 in k25127 in k25124 in k25121 in k25118 in k25115 in k25112 in k25109 in k25106 in k25103 in k25100 in k25097 in k25094 in k25091 in k25088 in k25085 in k25082 in k24943 in k24940 in k24937 in k24934 in k24878 in k24875 in k24872 in k24869 in k24866 in k24863 in k24860 in k24857 in k23555 in k23486 in k23293 in k23290 in k23185 in k23134 in k11783 in k10718 in k10715 in k7274 in k7271 in k6978 in k6975 in k6971 in k6680 in k6677 in k6674 in k6671 */
static void C_ccall f_35619(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4){
C_word tmp;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
if(c!=5) C_bad_argc_2(c,5,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr5,(void*)f_35619,5,t0,t1,t2,t3,t4);}
t5=(C_word)C_i_foreign_fixnum_argumentp(t2);
t6=(C_word)C_i_foreign_fixnum_argumentp(t3);
t7=t1;
((C_proc2)(void*)(*((C_word*)t7+1)))(2,t7,(C_word)stub6274(C_SCHEME_UNDEFINED,t5,t6,t4));}

/* k35600 in cs:i in k35543 in k35540 in k35537 in k35534 in k35531 in k35528 in k35525 in k35522 in k35519 in k35516 in k35513 in k35510 in k35507 in k35504 in k35501 in k35498 in k35495 in k35492 in k35489 in k35486 in k30217 in k26697 in k26694 in k26691 in k26688 in k26263 in k26260 in k26257 in k26254 in k26251 in k25668 in k25665 in k25142 in k25139 in k25136 in k25133 in k25130 in k25127 in k25124 in k25121 in k25118 in k25115 in k25112 in k25109 in k25106 in k25103 in k25100 in k25097 in k25094 in k25091 in k25088 in k25085 in k25082 in k24943 in k24940 in k24937 in k24934 in k24878 in k24875 in k24872 in k24869 in k24866 in k24863 in k24860 in k24857 in k23555 in k23486 in k23293 in k23290 in k23185 in k23134 in k11783 in k10718 in k10715 in k7274 in k7271 in k6978 in k6975 in k6971 in k6680 in k6677 in k6674 in k6671 */
static void C_ccall f_35602(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 383  values");
C_values(2,0,((C_word*)t0)[2]);}

/* cs:clear in k35543 in k35540 in k35537 in k35534 in k35531 in k35528 in k35525 in k35522 in k35519 in k35516 in k35513 in k35510 in k35507 in k35504 in k35501 in k35498 in k35495 in k35492 in k35489 in k35486 in k30217 in k26697 in k26694 in k26691 in k26688 in k26263 in k26260 in k26257 in k26254 in k26251 in k25668 in k25665 in k25142 in k25139 in k25136 in k25133 in k25130 in k25127 in k25124 in k25121 in k25118 in k25115 in k25112 in k25109 in k25106 in k25103 in k25100 in k25097 in k25094 in k25091 in k25088 in k25085 in k25082 in k24943 in k24940 in k24937 in k24934 in k24878 in k24875 in k24872 in k24869 in k24866 in k24863 in k24860 in k24857 in k23555 in k23486 in k23293 in k23290 in k23185 in k23134 in k11783 in k10718 in k10715 in k7274 in k7271 in k6978 in k6975 in k6971 in k6680 in k6677 in k6674 in k6671 */
static void C_ccall f_35590(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word ab[3],*a=ab;
if(c!=2) C_bad_argc_2(c,2,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_35590,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_35595,a[2]=((C_word)li581),tmp=(C_word)a,a+=3,tmp);
((C_proc2)(void*)(*((C_word*)t2+1)))(2,t2,t1);}

/* f_35595 in cs:clear in k35543 in k35540 in k35537 in k35534 in k35531 in k35528 in k35525 in k35522 in k35519 in k35516 in k35513 in k35510 in k35507 in k35504 in k35501 in k35498 in k35495 in k35492 in k35489 in k35486 in k30217 in k26697 in k26694 in k26691 in k26688 in k26263 in k26260 in k26257 in k26254 in k26251 in k25668 in k25665 in k25142 in k25139 in k25136 in k25133 in k25130 in k25127 in k25124 in k25121 in k25118 in k25115 in k25112 in k25109 in k25106 in k25103 in k25100 in k25097 in k25094 in k25091 in k25088 in k25085 in k25082 in k24943 in k24940 in k24937 in k24934 in k24878 in k24875 in k24872 in k24869 in k24866 in k24863 in k24860 in k24857 in k23555 in k23486 in k23293 in k23290 in k23185 in k23134 in k11783 in k10718 in k10715 in k7274 in k7271 in k6978 in k6975 in k6971 in k6680 in k6677 in k6674 in k6671 */
static void C_ccall f_35595(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
if(c!=2) C_bad_argc_2(c,2,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_35595,2,t0,t1);}
t2=t1;
((C_proc2)(void*)(*((C_word*)t2+1)))(2,t2,(C_word)stub6268(C_SCHEME_UNDEFINED));}

/* cs:record in k35543 in k35540 in k35537 in k35534 in k35531 in k35528 in k35525 in k35522 in k35519 in k35516 in k35513 in k35510 in k35507 in k35504 in k35501 in k35498 in k35495 in k35492 in k35489 in k35486 in k30217 in k26697 in k26694 in k26691 in k26688 in k26263 in k26260 in k26257 in k26254 in k26251 in k25668 in k25665 in k25142 in k25139 in k25136 in k25133 in k25130 in k25127 in k25124 in k25121 in k25118 in k25115 in k25112 in k25109 in k25106 in k25103 in k25100 in k25097 in k25094 in k25091 in k25088 in k25085 in k25082 in k24943 in k24940 in k24937 in k24934 in k24878 in k24875 in k24872 in k24869 in k24866 in k24863 in k24860 in k24857 in k23555 in k23486 in k23293 in k23290 in k23185 in k23134 in k11783 in k10718 in k10715 in k7274 in k7271 in k6978 in k6975 in k6971 in k6680 in k6677 in k6674 in k6671 */
static void C_ccall f_35547(C_word c,C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[9],*a=ab;
if(c!=3) C_bad_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr3,(void*)f_35547,3,t0,t1,t2);}
if(C_truep((C_word)C_booleanp(t2))){
t3=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_35558,a[2]=((C_word)li577),tmp=(C_word)a,a+=3,tmp);
((C_proc3)(void*)(*((C_word*)t3+1)))(3,t3,t1,t2);}
else{
t3=(C_word)C_i_numberp(t2);
t4=(C_truep(t3)?(C_word)C_i_greater_or_equalp(t2,C_fix(0)):C_SCHEME_FALSE);
if(C_truep(t4)){
t5=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_35568,a[2]=t1,tmp=(C_word)a,a+=3,tmp);
t6=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_35574,a[2]=((C_word)li579),tmp=(C_word)a,a+=3,tmp);
((C_proc3)(void*)(*((C_word*)t6+1)))(3,t6,t5,t2);}
else{
C_trace("ChickenBridge.scm: 383  error");
t5=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t5))(4,t5,t1,lf[795],t2);}}}

/* f_35574 in cs:record in k35543 in k35540 in k35537 in k35534 in k35531 in k35528 in k35525 in k35522 in k35519 in k35516 in k35513 in k35510 in k35507 in k35504 in k35501 in k35498 in k35495 in k35492 in k35489 in k35486 in k30217 in k26697 in k26694 in k26691 in k26688 in k26263 in k26260 in k26257 in k26254 in k26251 in k25668 in k25665 in k25142 in k25139 in k25136 in k25133 in k25130 in k25127 in k25124 in k25121 in k25118 in k25115 in k25112 in k25109 in k25106 in k25103 in k25100 in k25097 in k25094 in k25091 in k25088 in k25085 in k25082 in k24943 in k24940 in k24937 in k24934 in k24878 in k24875 in k24872 in k24869 in k24866 in k24863 in k24860 in k24857 in k23555 in k23486 in k23293 in k23290 in k23185 in k23134 in k11783 in k10718 in k10715 in k7274 in k7271 in k6978 in k6975 in k6971 in k6680 in k6677 in k6674 in k6671 */
static void C_ccall f_35574(C_word c,C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word *a;
if(c!=3) C_bad_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr3,(void*)f_35574,3,t0,t1,t2);}
t3=(C_word)C_i_foreign_flonum_argumentp(t2);
t4=t1;
((C_proc2)(void*)(*((C_word*)t4+1)))(2,t4,(C_word)stub6260(C_SCHEME_UNDEFINED,t3));}

/* k35566 in cs:record in k35543 in k35540 in k35537 in k35534 in k35531 in k35528 in k35525 in k35522 in k35519 in k35516 in k35513 in k35510 in k35507 in k35504 in k35501 in k35498 in k35495 in k35492 in k35489 in k35486 in k30217 in k26697 in k26694 in k26691 in k26688 in k26263 in k26260 in k26257 in k26254 in k26251 in k25668 in k25665 in k25142 in k25139 in k25136 in k25133 in k25130 in k25127 in k25124 in k25121 in k25118 in k25115 in k25112 in k25109 in k25106 in k25103 in k25100 in k25097 in k25094 in k25091 in k25088 in k25085 in k25082 in k24943 in k24940 in k24937 in k24934 in k24878 in k24875 in k24872 in k24869 in k24866 in k24863 in k24860 in k24857 in k23555 in k23486 in k23293 in k23290 in k23185 in k23134 in k11783 in k10718 in k10715 in k7274 in k7271 in k6978 in k6975 in k6971 in k6680 in k6677 in k6674 in k6671 */
static void C_ccall f_35568(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word ab[3],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_35568,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_35572,a[2]=((C_word)li578),tmp=(C_word)a,a+=3,tmp);
((C_proc3)(void*)(*((C_word*)t2+1)))(3,t2,((C_word*)t0)[2],C_SCHEME_TRUE);}

/* f_35572 in k35566 in cs:record in k35543 in k35540 in k35537 in k35534 in k35531 in k35528 in k35525 in k35522 in k35519 in k35516 in k35513 in k35510 in k35507 in k35504 in k35501 in k35498 in k35495 in k35492 in k35489 in k35486 in k30217 in k26697 in k26694 in k26691 in k26688 in k26263 in k26260 in k26257 in k26254 in k26251 in k25668 in k25665 in k25142 in k25139 in k25136 in k25133 in k25130 in k25127 in k25124 in k25121 in k25118 in k25115 in k25112 in k25109 in k25106 in k25103 in k25100 in k25097 in k25094 in k25091 in k25088 in k25085 in k25082 in k24943 in k24940 in k24937 in k24934 in k24878 in k24875 in k24872 in k24869 in k24866 in k24863 in k24860 in k24857 in k23555 in k23486 in k23293 in k23290 in k23185 in k23134 in k11783 in k10718 in k10715 in k7274 in k7271 in k6978 in k6975 in k6971 in k6680 in k6677 in k6674 in k6671 */
static void C_ccall f_35572(C_word c,C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word *a;
if(c!=3) C_bad_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr3,(void*)f_35572,3,t0,t1,t2);}
t3=t1;
((C_proc2)(void*)(*((C_word*)t3+1)))(2,t3,(C_word)stub6264(C_SCHEME_UNDEFINED,t2));}

/* f_35558 in cs:record in k35543 in k35540 in k35537 in k35534 in k35531 in k35528 in k35525 in k35522 in k35519 in k35516 in k35513 in k35510 in k35507 in k35504 in k35501 in k35498 in k35495 in k35492 in k35489 in k35486 in k30217 in k26697 in k26694 in k26691 in k26688 in k26263 in k26260 in k26257 in k26254 in k26251 in k25668 in k25665 in k25142 in k25139 in k25136 in k25133 in k25130 in k25127 in k25124 in k25121 in k25118 in k25115 in k25112 in k25109 in k25106 in k25103 in k25100 in k25097 in k25094 in k25091 in k25088 in k25085 in k25082 in k24943 in k24940 in k24937 in k24934 in k24878 in k24875 in k24872 in k24869 in k24866 in k24863 in k24860 in k24857 in k23555 in k23486 in k23293 in k23290 in k23185 in k23134 in k11783 in k10718 in k10715 in k7274 in k7271 in k6978 in k6975 in k6971 in k6680 in k6677 in k6674 in k6671 */
static void C_ccall f_35558(C_word c,C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word *a;
if(c!=3) C_bad_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr3,(void*)f_35558,3,t0,t1,t2);}
t3=t1;
((C_proc2)(void*)(*((C_word*)t3+1)))(2,t3,(C_word)stub6256(C_SCHEME_UNDEFINED,t2));}

/* mp:recordseq in k30217 in k26697 in k26694 in k26691 in k26688 in k26263 in k26260 in k26257 in k26254 in k26251 in k25668 in k25665 in k25142 in k25139 in k25136 in k25133 in k25130 in k25127 in k25124 in k25121 in k25118 in k25115 in k25112 in k25109 in k25106 in k25103 in k25100 in k25097 in k25094 in k25091 in k25088 in k25085 in k25082 in k24943 in k24940 in k24937 in k24934 in k24878 in k24875 in k24872 in k24869 in k24866 in k24863 in k24860 in k24857 in k23555 in k23486 in k23293 in k23290 in k23185 in k23134 in k11783 in k10718 in k10715 in k7274 in k7271 in k6978 in k6975 in k6971 in k6680 in k6677 in k6674 in k6671 */
static void C_ccall f_35467(C_word c,C_word t0,C_word t1,...){
C_word tmp;
C_word t2;
va_list v;
C_word *a,c2=c;
C_save_rest(t1,c2,2);
C_check_for_interrupt;
if(!C_demand(c*C_SIZEOF_PAIR+6)){
C_save_and_reclaim((void*)tr2rv,(void*)f_35467r,2,t0,t1);}
else{
a=C_alloc((c-2)*3);
t2=C_restore_rest_vector(a,C_rest_count(0));
f_35467r(t0,t1,t2);}}

static void C_ccall f_35467r(C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word *a=C_alloc(6);
t3=(C_word)C_vemptyp(t2);
t4=(C_truep(t3)?C_SCHEME_FALSE:(C_word)C_i_vector_ref(t2,C_fix(0)));
t5=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_35474,a[2]=t1,tmp=(C_word)a,a+=3,tmp);
t6=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_35478,a[2]=((C_word)li575),tmp=(C_word)a,a+=3,tmp);
((C_proc3)(void*)(*((C_word*)t6+1)))(3,t6,t5,t4);}

/* f_35478 in mp:recordseq in k30217 in k26697 in k26694 in k26691 in k26688 in k26263 in k26260 in k26257 in k26254 in k26251 in k25668 in k25665 in k25142 in k25139 in k25136 in k25133 in k25130 in k25127 in k25124 in k25121 in k25118 in k25115 in k25112 in k25109 in k25106 in k25103 in k25100 in k25097 in k25094 in k25091 in k25088 in k25085 in k25082 in k24943 in k24940 in k24937 in k24934 in k24878 in k24875 in k24872 in k24869 in k24866 in k24863 in k24860 in k24857 in k23555 in k23486 in k23293 in k23290 in k23185 in k23134 in k11783 in k10718 in k10715 in k7274 in k7271 in k6978 in k6975 in k6971 in k6680 in k6677 in k6674 in k6671 */
static void C_ccall f_35478(C_word c,C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word *a;
if(c!=3) C_bad_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr3,(void*)f_35478,3,t0,t1,t2);}
t3=t1;
((C_proc2)(void*)(*((C_word*)t3+1)))(2,t3,(C_word)stub6176(C_SCHEME_UNDEFINED,t2));}

/* k35472 in mp:recordseq in k30217 in k26697 in k26694 in k26691 in k26688 in k26263 in k26260 in k26257 in k26254 in k26251 in k25668 in k25665 in k25142 in k25139 in k25136 in k25133 in k25130 in k25127 in k25124 in k25121 in k25118 in k25115 in k25112 in k25109 in k25106 in k25103 in k25100 in k25097 in k25094 in k25091 in k25088 in k25085 in k25082 in k24943 in k24940 in k24937 in k24934 in k24878 in k24875 in k24872 in k24869 in k24866 in k24863 in k24860 in k24857 in k23555 in k23486 in k23293 in k23290 in k23185 in k23134 in k11783 in k10718 in k10715 in k7274 in k7271 in k6978 in k6975 in k6971 in k6680 in k6677 in k6674 in k6671 */
static void C_ccall f_35474(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 382  values");
C_values(2,0,((C_word*)t0)[2]);}

/* mp:clearseq in k30217 in k26697 in k26694 in k26691 in k26688 in k26263 in k26260 in k26257 in k26254 in k26251 in k25668 in k25665 in k25142 in k25139 in k25136 in k25133 in k25130 in k25127 in k25124 in k25121 in k25118 in k25115 in k25112 in k25109 in k25106 in k25103 in k25100 in k25097 in k25094 in k25091 in k25088 in k25085 in k25082 in k24943 in k24940 in k24937 in k24934 in k24878 in k24875 in k24872 in k24869 in k24866 in k24863 in k24860 in k24857 in k23555 in k23486 in k23293 in k23290 in k23185 in k23134 in k11783 in k10718 in k10715 in k7274 in k7271 in k6978 in k6975 in k6971 in k6680 in k6677 in k6674 in k6671 */
static void C_ccall f_35456(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[6],*a=ab;
if(c!=2) C_bad_argc_2(c,2,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_35456,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_35460,a[2]=t1,tmp=(C_word)a,a+=3,tmp);
t3=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_35464,a[2]=((C_word)li573),tmp=(C_word)a,a+=3,tmp);
((C_proc2)(void*)(*((C_word*)t3+1)))(2,t3,t2);}

/* f_35464 in mp:clearseq in k30217 in k26697 in k26694 in k26691 in k26688 in k26263 in k26260 in k26257 in k26254 in k26251 in k25668 in k25665 in k25142 in k25139 in k25136 in k25133 in k25130 in k25127 in k25124 in k25121 in k25118 in k25115 in k25112 in k25109 in k25106 in k25103 in k25100 in k25097 in k25094 in k25091 in k25088 in k25085 in k25082 in k24943 in k24940 in k24937 in k24934 in k24878 in k24875 in k24872 in k24869 in k24866 in k24863 in k24860 in k24857 in k23555 in k23486 in k23293 in k23290 in k23185 in k23134 in k11783 in k10718 in k10715 in k7274 in k7271 in k6978 in k6975 in k6971 in k6680 in k6677 in k6674 in k6671 */
static void C_ccall f_35464(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
if(c!=2) C_bad_argc_2(c,2,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_35464,2,t0,t1);}
t2=t1;
((C_proc2)(void*)(*((C_word*)t2+1)))(2,t2,(C_word)stub6170(C_SCHEME_UNDEFINED));}

/* k35458 in mp:clearseq in k30217 in k26697 in k26694 in k26691 in k26688 in k26263 in k26260 in k26257 in k26254 in k26251 in k25668 in k25665 in k25142 in k25139 in k25136 in k25133 in k25130 in k25127 in k25124 in k25121 in k25118 in k25115 in k25112 in k25109 in k25106 in k25103 in k25100 in k25097 in k25094 in k25091 in k25088 in k25085 in k25082 in k24943 in k24940 in k24937 in k24934 in k24878 in k24875 in k24872 in k24869 in k24866 in k24863 in k24860 in k24857 in k23555 in k23486 in k23293 in k23290 in k23185 in k23134 in k11783 in k10718 in k10715 in k7274 in k7271 in k6978 in k6975 in k6971 in k6680 in k6677 in k6674 in k6671 */
static void C_ccall f_35460(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 382  values");
C_values(2,0,((C_word*)t0)[2]);}

/* mp:plotseq in k30217 in k26697 in k26694 in k26691 in k26688 in k26263 in k26260 in k26257 in k26254 in k26251 in k25668 in k25665 in k25142 in k25139 in k25136 in k25133 in k25130 in k25127 in k25124 in k25121 in k25118 in k25115 in k25112 in k25109 in k25106 in k25103 in k25100 in k25097 in k25094 in k25091 in k25088 in k25085 in k25082 in k24943 in k24940 in k24937 in k24934 in k24878 in k24875 in k24872 in k24869 in k24866 in k24863 in k24860 in k24857 in k23555 in k23486 in k23293 in k23290 in k23185 in k23134 in k11783 in k10718 in k10715 in k7274 in k7271 in k6978 in k6975 in k6971 in k6680 in k6677 in k6674 in k6671 */
static void C_ccall f_35445(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[6],*a=ab;
if(c!=2) C_bad_argc_2(c,2,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_35445,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_35449,a[2]=t1,tmp=(C_word)a,a+=3,tmp);
t3=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_35453,a[2]=((C_word)li571),tmp=(C_word)a,a+=3,tmp);
((C_proc2)(void*)(*((C_word*)t3+1)))(2,t3,t2);}

/* f_35453 in mp:plotseq in k30217 in k26697 in k26694 in k26691 in k26688 in k26263 in k26260 in k26257 in k26254 in k26251 in k25668 in k25665 in k25142 in k25139 in k25136 in k25133 in k25130 in k25127 in k25124 in k25121 in k25118 in k25115 in k25112 in k25109 in k25106 in k25103 in k25100 in k25097 in k25094 in k25091 in k25088 in k25085 in k25082 in k24943 in k24940 in k24937 in k24934 in k24878 in k24875 in k24872 in k24869 in k24866 in k24863 in k24860 in k24857 in k23555 in k23486 in k23293 in k23290 in k23185 in k23134 in k11783 in k10718 in k10715 in k7274 in k7271 in k6978 in k6975 in k6971 in k6680 in k6677 in k6674 in k6671 */
static void C_ccall f_35453(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
if(c!=2) C_bad_argc_2(c,2,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_35453,2,t0,t1);}
t2=t1;
((C_proc2)(void*)(*((C_word*)t2+1)))(2,t2,(C_word)stub6167(C_SCHEME_UNDEFINED));}

/* k35447 in mp:plotseq in k30217 in k26697 in k26694 in k26691 in k26688 in k26263 in k26260 in k26257 in k26254 in k26251 in k25668 in k25665 in k25142 in k25139 in k25136 in k25133 in k25130 in k25127 in k25124 in k25121 in k25118 in k25115 in k25112 in k25109 in k25106 in k25103 in k25100 in k25097 in k25094 in k25091 in k25088 in k25085 in k25082 in k24943 in k24940 in k24937 in k24934 in k24878 in k24875 in k24872 in k24869 in k24866 in k24863 in k24860 in k24857 in k23555 in k23486 in k23293 in k23290 in k23185 in k23134 in k11783 in k10718 in k10715 in k7274 in k7271 in k6978 in k6975 in k6971 in k6680 in k6677 in k6674 in k6671 */
static void C_ccall f_35449(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 382  values");
C_values(2,0,((C_word*)t0)[2]);}

/* mp:copyseq in k30217 in k26697 in k26694 in k26691 in k26688 in k26263 in k26260 in k26257 in k26254 in k26251 in k25668 in k25665 in k25142 in k25139 in k25136 in k25133 in k25130 in k25127 in k25124 in k25121 in k25118 in k25115 in k25112 in k25109 in k25106 in k25103 in k25100 in k25097 in k25094 in k25091 in k25088 in k25085 in k25082 in k24943 in k24940 in k24937 in k24934 in k24878 in k24875 in k24872 in k24869 in k24866 in k24863 in k24860 in k24857 in k23555 in k23486 in k23293 in k23290 in k23185 in k23134 in k11783 in k10718 in k10715 in k7274 in k7271 in k6978 in k6975 in k6971 in k6680 in k6677 in k6674 in k6671 */
static void C_ccall f_35434(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[6],*a=ab;
if(c!=2) C_bad_argc_2(c,2,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_35434,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_35438,a[2]=t1,tmp=(C_word)a,a+=3,tmp);
t3=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_35442,a[2]=((C_word)li569),tmp=(C_word)a,a+=3,tmp);
((C_proc2)(void*)(*((C_word*)t3+1)))(2,t3,t2);}

/* f_35442 in mp:copyseq in k30217 in k26697 in k26694 in k26691 in k26688 in k26263 in k26260 in k26257 in k26254 in k26251 in k25668 in k25665 in k25142 in k25139 in k25136 in k25133 in k25130 in k25127 in k25124 in k25121 in k25118 in k25115 in k25112 in k25109 in k25106 in k25103 in k25100 in k25097 in k25094 in k25091 in k25088 in k25085 in k25082 in k24943 in k24940 in k24937 in k24934 in k24878 in k24875 in k24872 in k24869 in k24866 in k24863 in k24860 in k24857 in k23555 in k23486 in k23293 in k23290 in k23185 in k23134 in k11783 in k10718 in k10715 in k7274 in k7271 in k6978 in k6975 in k6971 in k6680 in k6677 in k6674 in k6671 */
static void C_ccall f_35442(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
if(c!=2) C_bad_argc_2(c,2,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_35442,2,t0,t1);}
t2=t1;
((C_proc2)(void*)(*((C_word*)t2+1)))(2,t2,(C_word)stub6164(C_SCHEME_UNDEFINED));}

/* k35436 in mp:copyseq in k30217 in k26697 in k26694 in k26691 in k26688 in k26263 in k26260 in k26257 in k26254 in k26251 in k25668 in k25665 in k25142 in k25139 in k25136 in k25133 in k25130 in k25127 in k25124 in k25121 in k25118 in k25115 in k25112 in k25109 in k25106 in k25103 in k25100 in k25097 in k25094 in k25091 in k25088 in k25085 in k25082 in k24943 in k24940 in k24937 in k24934 in k24878 in k24875 in k24872 in k24869 in k24866 in k24863 in k24860 in k24857 in k23555 in k23486 in k23293 in k23290 in k23185 in k23134 in k11783 in k10718 in k10715 in k7274 in k7271 in k6978 in k6975 in k6971 in k6680 in k6677 in k6674 in k6671 */
static void C_ccall f_35438(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 382  values");
C_values(2,0,((C_word*)t0)[2]);}

/* mp:saveseq in k30217 in k26697 in k26694 in k26691 in k26688 in k26263 in k26260 in k26257 in k26254 in k26251 in k25668 in k25665 in k25142 in k25139 in k25136 in k25133 in k25130 in k25127 in k25124 in k25121 in k25118 in k25115 in k25112 in k25109 in k25106 in k25103 in k25100 in k25097 in k25094 in k25091 in k25088 in k25085 in k25082 in k24943 in k24940 in k24937 in k24934 in k24878 in k24875 in k24872 in k24869 in k24866 in k24863 in k24860 in k24857 in k23555 in k23486 in k23293 in k23290 in k23185 in k23134 in k11783 in k10718 in k10715 in k7274 in k7271 in k6978 in k6975 in k6971 in k6680 in k6677 in k6674 in k6671 */
static void C_ccall f_35423(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[6],*a=ab;
if(c!=2) C_bad_argc_2(c,2,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_35423,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_35427,a[2]=t1,tmp=(C_word)a,a+=3,tmp);
t3=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_35431,a[2]=((C_word)li567),tmp=(C_word)a,a+=3,tmp);
((C_proc2)(void*)(*((C_word*)t3+1)))(2,t3,t2);}

/* f_35431 in mp:saveseq in k30217 in k26697 in k26694 in k26691 in k26688 in k26263 in k26260 in k26257 in k26254 in k26251 in k25668 in k25665 in k25142 in k25139 in k25136 in k25133 in k25130 in k25127 in k25124 in k25121 in k25118 in k25115 in k25112 in k25109 in k25106 in k25103 in k25100 in k25097 in k25094 in k25091 in k25088 in k25085 in k25082 in k24943 in k24940 in k24937 in k24934 in k24878 in k24875 in k24872 in k24869 in k24866 in k24863 in k24860 in k24857 in k23555 in k23486 in k23293 in k23290 in k23185 in k23134 in k11783 in k10718 in k10715 in k7274 in k7271 in k6978 in k6975 in k6971 in k6680 in k6677 in k6674 in k6671 */
static void C_ccall f_35431(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
if(c!=2) C_bad_argc_2(c,2,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_35431,2,t0,t1);}
t2=t1;
((C_proc2)(void*)(*((C_word*)t2+1)))(2,t2,(C_word)stub6161(C_SCHEME_UNDEFINED));}

/* k35425 in mp:saveseq in k30217 in k26697 in k26694 in k26691 in k26688 in k26263 in k26260 in k26257 in k26254 in k26251 in k25668 in k25665 in k25142 in k25139 in k25136 in k25133 in k25130 in k25127 in k25124 in k25121 in k25118 in k25115 in k25112 in k25109 in k25106 in k25103 in k25100 in k25097 in k25094 in k25091 in k25088 in k25085 in k25082 in k24943 in k24940 in k24937 in k24934 in k24878 in k24875 in k24872 in k24869 in k24866 in k24863 in k24860 in k24857 in k23555 in k23486 in k23293 in k23290 in k23185 in k23134 in k11783 in k10718 in k10715 in k7274 in k7271 in k6978 in k6975 in k6971 in k6680 in k6677 in k6674 in k6671 */
static void C_ccall f_35427(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 382  values");
C_values(2,0,((C_word*)t0)[2]);}

/* mp:playseq in k30217 in k26697 in k26694 in k26691 in k26688 in k26263 in k26260 in k26257 in k26254 in k26251 in k25668 in k25665 in k25142 in k25139 in k25136 in k25133 in k25130 in k25127 in k25124 in k25121 in k25118 in k25115 in k25112 in k25109 in k25106 in k25103 in k25100 in k25097 in k25094 in k25091 in k25088 in k25085 in k25082 in k24943 in k24940 in k24937 in k24934 in k24878 in k24875 in k24872 in k24869 in k24866 in k24863 in k24860 in k24857 in k23555 in k23486 in k23293 in k23290 in k23185 in k23134 in k11783 in k10718 in k10715 in k7274 in k7271 in k6978 in k6975 in k6971 in k6680 in k6677 in k6674 in k6671 */
static void C_ccall f_35412(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[6],*a=ab;
if(c!=2) C_bad_argc_2(c,2,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_35412,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_35416,a[2]=t1,tmp=(C_word)a,a+=3,tmp);
t3=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_35420,a[2]=((C_word)li565),tmp=(C_word)a,a+=3,tmp);
((C_proc2)(void*)(*((C_word*)t3+1)))(2,t3,t2);}

/* f_35420 in mp:playseq in k30217 in k26697 in k26694 in k26691 in k26688 in k26263 in k26260 in k26257 in k26254 in k26251 in k25668 in k25665 in k25142 in k25139 in k25136 in k25133 in k25130 in k25127 in k25124 in k25121 in k25118 in k25115 in k25112 in k25109 in k25106 in k25103 in k25100 in k25097 in k25094 in k25091 in k25088 in k25085 in k25082 in k24943 in k24940 in k24937 in k24934 in k24878 in k24875 in k24872 in k24869 in k24866 in k24863 in k24860 in k24857 in k23555 in k23486 in k23293 in k23290 in k23185 in k23134 in k11783 in k10718 in k10715 in k7274 in k7271 in k6978 in k6975 in k6971 in k6680 in k6677 in k6674 in k6671 */
static void C_ccall f_35420(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
if(c!=2) C_bad_argc_2(c,2,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_35420,2,t0,t1);}
t2=t1;
((C_proc2)(void*)(*((C_word*)t2+1)))(2,t2,(C_word)stub6158(C_SCHEME_UNDEFINED));}

/* k35414 in mp:playseq in k30217 in k26697 in k26694 in k26691 in k26688 in k26263 in k26260 in k26257 in k26254 in k26251 in k25668 in k25665 in k25142 in k25139 in k25136 in k25133 in k25130 in k25127 in k25124 in k25121 in k25118 in k25115 in k25112 in k25109 in k25106 in k25103 in k25100 in k25097 in k25094 in k25091 in k25088 in k25085 in k25082 in k24943 in k24940 in k24937 in k24934 in k24878 in k24875 in k24872 in k24869 in k24866 in k24863 in k24860 in k24857 in k23555 in k23486 in k23293 in k23290 in k23185 in k23134 in k11783 in k10718 in k10715 in k7274 in k7271 in k6978 in k6975 in k6971 in k6680 in k6677 in k6674 in k6671 */
static void C_ccall f_35416(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 382  values");
C_values(2,0,((C_word*)t0)[2]);}

/* mp:tuning in k30217 in k26697 in k26694 in k26691 in k26688 in k26263 in k26260 in k26257 in k26254 in k26251 in k25668 in k25665 in k25142 in k25139 in k25136 in k25133 in k25130 in k25127 in k25124 in k25121 in k25118 in k25115 in k25112 in k25109 in k25106 in k25103 in k25100 in k25097 in k25094 in k25091 in k25088 in k25085 in k25082 in k24943 in k24940 in k24937 in k24934 in k24878 in k24875 in k24872 in k24869 in k24866 in k24863 in k24860 in k24857 in k23555 in k23486 in k23293 in k23290 in k23185 in k23134 in k11783 in k10718 in k10715 in k7274 in k7271 in k6978 in k6975 in k6971 in k6680 in k6677 in k6674 in k6671 */
static void C_ccall f_35373(C_word c,C_word t0,C_word t1,...){
C_word tmp;
C_word t2;
va_list v;
C_word *a,c2=c;
C_save_rest(t1,c2,2);
C_check_for_interrupt;
if(!C_demand(c*C_SIZEOF_PAIR+7)){
C_save_and_reclaim((void*)tr2rv,(void*)f_35373r,2,t0,t1);}
else{
a=C_alloc((c-2)*3);
t2=C_restore_rest_vector(a,C_rest_count(0));
f_35373r(t0,t1,t2);}}

static void C_ccall f_35373r(C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a=C_alloc(7);
t3=(C_word)C_vemptyp(t2);
t4=(C_truep(t3)?C_fix(1):(C_word)C_i_vector_ref(t2,C_fix(0)));
t5=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_35380,a[2]=t1,tmp=(C_word)a,a+=3,tmp);
t6=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_35386,a[2]=t4,a[3]=t5,tmp=(C_word)a,a+=4,tmp);
if(C_truep((C_word)C_i_integerp(t4))){
C_trace("ChickenBridge.scm: 382  <");
C_lessp(5,0,t6,C_fix(0),t4,C_fix(17));}
else{
t7=t6;
f_35386(2,t7,C_SCHEME_FALSE);}}

/* k35384 in mp:tuning in k30217 in k26697 in k26694 in k26691 in k26688 in k26263 in k26260 in k26257 in k26254 in k26251 in k25668 in k25665 in k25142 in k25139 in k25136 in k25133 in k25130 in k25127 in k25124 in k25121 in k25118 in k25115 in k25112 in k25109 in k25106 in k25103 in k25100 in k25097 in k25094 in k25091 in k25088 in k25085 in k25082 in k24943 in k24940 in k24937 in k24934 in k24878 in k24875 in k24872 in k24869 in k24866 in k24863 in k24860 in k24857 in k23555 in k23486 in k23293 in k23290 in k23185 in k23134 in k11783 in k10718 in k10715 in k7274 in k7271 in k6978 in k6975 in k6971 in k6680 in k6677 in k6674 in k6671 */
static void C_ccall f_35386(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word ab[3],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_35386,2,t0,t1);}
if(C_truep(t1)){
t2=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_35390,a[2]=((C_word)li563),tmp=(C_word)a,a+=3,tmp);
((C_proc3)(void*)(*((C_word*)t2+1)))(3,t2,((C_word*)t0)[3],((C_word*)t0)[2]);}
else{
C_trace("ChickenBridge.scm: 382  error");
t2=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t2))(4,t2,((C_word*)t0)[3],lf[787],((C_word*)t0)[2]);}}

/* f_35390 in k35384 in mp:tuning in k30217 in k26697 in k26694 in k26691 in k26688 in k26263 in k26260 in k26257 in k26254 in k26251 in k25668 in k25665 in k25142 in k25139 in k25136 in k25133 in k25130 in k25127 in k25124 in k25121 in k25118 in k25115 in k25112 in k25109 in k25106 in k25103 in k25100 in k25097 in k25094 in k25091 in k25088 in k25085 in k25082 in k24943 in k24940 in k24937 in k24934 in k24878 in k24875 in k24872 in k24869 in k24866 in k24863 in k24860 in k24857 in k23555 in k23486 in k23293 in k23290 in k23185 in k23134 in k11783 in k10718 in k10715 in k7274 in k7271 in k6978 in k6975 in k6971 in k6680 in k6677 in k6674 in k6671 */
static void C_ccall f_35390(C_word c,C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word *a;
if(c!=3) C_bad_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr3,(void*)f_35390,3,t0,t1,t2);}
t3=(C_word)C_i_foreign_fixnum_argumentp(t2);
t4=t1;
((C_proc2)(void*)(*((C_word*)t4+1)))(2,t4,(C_word)stub6154(C_SCHEME_UNDEFINED,t3));}

/* k35378 in mp:tuning in k30217 in k26697 in k26694 in k26691 in k26688 in k26263 in k26260 in k26257 in k26254 in k26251 in k25668 in k25665 in k25142 in k25139 in k25136 in k25133 in k25130 in k25127 in k25124 in k25121 in k25118 in k25115 in k25112 in k25109 in k25106 in k25103 in k25100 in k25097 in k25094 in k25091 in k25088 in k25085 in k25082 in k24943 in k24940 in k24937 in k24934 in k24878 in k24875 in k24872 in k24869 in k24866 in k24863 in k24860 in k24857 in k23555 in k23486 in k23293 in k23290 in k23185 in k23134 in k11783 in k10718 in k10715 in k7274 in k7271 in k6978 in k6975 in k6971 in k6680 in k6677 in k6674 in k6671 */
static void C_ccall f_35380(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 382  values");
C_values(2,0,((C_word*)t0)[2]);}

/* mp:intypes in k30217 in k26697 in k26694 in k26691 in k26688 in k26263 in k26260 in k26257 in k26254 in k26251 in k25668 in k25665 in k25142 in k25139 in k25136 in k25133 in k25130 in k25127 in k25124 in k25121 in k25118 in k25115 in k25112 in k25109 in k25106 in k25103 in k25100 in k25097 in k25094 in k25091 in k25088 in k25085 in k25082 in k24943 in k24940 in k24937 in k24934 in k24878 in k24875 in k24872 in k24869 in k24866 in k24863 in k24860 in k24857 in k23555 in k23486 in k23293 in k23290 in k23185 in k23134 in k11783 in k10718 in k10715 in k7274 in k7271 in k6978 in k6975 in k6971 in k6680 in k6677 in k6674 in k6671 */
static void C_ccall f_35258(C_word c,C_word t0,C_word t1,...){
C_word tmp;
C_word t2;
va_list v;
C_word *a,c2=c;
C_save_rest(t1,c2,2);
C_check_for_interrupt;
if(!C_demand(c*C_SIZEOF_PAIR+11)){
C_save_and_reclaim((void*)tr2r,(void*)f_35258r,2,t0,t1);}
else{
a=C_alloc((c-2)*3);
t2=C_restore_rest(a,C_rest_count(0));
f_35258r(t0,t1,t2);}}

static void C_ccall f_35258r(C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word *a=C_alloc(11);
t3=C_fix(0);
t4=(*a=C_VECTOR_TYPE|1,a[1]=t3,tmp=(C_word)a,a+=2,tmp);
t5=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_35262,a[2]=t4,a[3]=t1,tmp=(C_word)a,a+=4,tmp);
if(C_truep((C_word)C_i_nullp(t2))){
C_trace("ChickenBridge.scm: 382  error");
t6=*((C_word*)lf[4]+1);
((C_proc3)C_retrieve_proc(t6))(3,t6,t5,lf[784]);}
else{
t6=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_35283,a[2]=t2,a[3]=t5,a[4]=t4,tmp=(C_word)a,a+=5,tmp);
t7=(C_word)C_i_cdr(t2);
if(C_truep((C_word)C_i_nullp(t7))){
t8=(C_word)C_i_car(t2);
t9=t6;
f_35283(t9,(C_word)C_eqp(t8,C_SCHEME_FALSE));}
else{
t8=t6;
f_35283(t8,C_SCHEME_FALSE);}}}

/* k35281 in mp:intypes in k30217 in k26697 in k26694 in k26691 in k26688 in k26263 in k26260 in k26257 in k26254 in k26251 in k25668 in k25665 in k25142 in k25139 in k25136 in k25133 in k25130 in k25127 in k25124 in k25121 in k25118 in k25115 in k25112 in k25109 in k25106 in k25103 in k25100 in k25097 in k25094 in k25091 in k25088 in k25085 in k25082 in k24943 in k24940 in k24937 in k24934 in k24878 in k24875 in k24872 in k24869 in k24866 in k24863 in k24860 in k24857 in k23555 in k23486 in k23293 in k23290 in k23185 in k23134 in k11783 in k10718 in k10715 in k7274 in k7271 in k6978 in k6975 in k6971 in k6680 in k6677 in k6674 in k6671 */
static void C_fcall f_35283(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[5],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_35283,NULL,2,t0,t1);}
if(C_truep(t1)){
t2=C_set_block_item(((C_word*)t0)[4],0,C_fix(0));
t3=((C_word*)t0)[3];
f_35262(2,t3,t2);}
else{
t2=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_35290,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],tmp=(C_word)a,a+=5,tmp);
t3=(C_word)C_i_cdr(((C_word*)t0)[2]);
if(C_truep((C_word)C_i_nullp(t3))){
t4=(C_word)C_i_car(((C_word*)t0)[2]);
t5=t2;
f_35290(t5,(C_word)C_eqp(t4,C_SCHEME_TRUE));}
else{
t4=t2;
f_35290(t4,C_SCHEME_FALSE);}}}

/* k35288 in k35281 in mp:intypes in k30217 in k26697 in k26694 in k26691 in k26688 in k26263 in k26260 in k26257 in k26254 in k26251 in k25668 in k25665 in k25142 in k25139 in k25136 in k25133 in k25130 in k25127 in k25124 in k25121 in k25118 in k25115 in k25112 in k25109 in k25106 in k25103 in k25100 in k25097 in k25094 in k25091 in k25088 in k25085 in k25082 in k24943 in k24940 in k24937 in k24934 in k24878 in k24875 in k24872 in k24869 in k24866 in k24863 in k24860 in k24857 in k23555 in k23486 in k23293 in k23290 in k23185 in k23134 in k11783 in k10718 in k10715 in k7274 in k7271 in k6978 in k6975 in k6971 in k6680 in k6677 in k6674 in k6671 */
static void C_fcall f_35290(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_35290,NULL,2,t0,t1);}
if(C_truep(t1)){
t2=C_set_block_item(((C_word*)t0)[4],0,C_fix(127));
t3=((C_word*)t0)[3];
f_35262(2,t3,t2);}
else{
t2=C_SCHEME_UNDEFINED;
t3=(*a=C_VECTOR_TYPE|1,a[1]=t2,tmp=(C_word)a,a+=2,tmp);
t4=C_set_block_item(t3,0,(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_35296,a[2]=((C_word*)t0)[4],a[3]=t3,a[4]=((C_word)li561),tmp=(C_word)a,a+=5,tmp));
t5=((C_word*)t3)[1];
f_35296(t5,((C_word*)t0)[3],((C_word*)t0)[2]);}}

/* do6141 in k35288 in k35281 in mp:intypes in k30217 in k26697 in k26694 in k26691 in k26688 in k26263 in k26260 in k26257 in k26254 in k26251 in k25668 in k25665 in k25142 in k25139 in k25136 in k25133 in k25130 in k25127 in k25124 in k25121 in k25118 in k25115 in k25112 in k25109 in k25106 in k25103 in k25100 in k25097 in k25094 in k25091 in k25088 in k25085 in k25082 in k24943 in k24940 in k24937 in k24934 in k24878 in k24875 in k24872 in k24869 in k24866 in k24863 in k24860 in k24857 in k23555 in k23486 in k23293 in k23290 in k23185 in k23134 in k11783 in k10718 in k10715 in k7274 in k7271 in k6978 in k6975 in k6971 in k6680 in k6677 in k6674 in k6671 */
static void C_fcall f_35296(C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[10],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_35296,NULL,3,t0,t1,t2);}
if(C_truep((C_word)C_i_nullp(t2))){
t3=t1;
((C_proc2)(void*)(*((C_word*)t3+1)))(2,t3,C_SCHEME_FALSE);}
else{
t3=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_35306,a[2]=t1,a[3]=((C_word*)t0)[3],a[4]=t2,tmp=(C_word)a,a+=5,tmp);
t4=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_35316,a[2]=t3,a[3]=((C_word*)t0)[2],a[4]=t2,tmp=(C_word)a,a+=5,tmp);
t5=(C_word)C_i_car(t2);
C_trace("ChickenBridge.scm: 382  <=");
C_less_or_equal_p(5,0,t4,C_retrieve(lf[722]),t5,C_retrieve(lf[728]));}}

/* k35314 in do6141 in k35288 in k35281 in mp:intypes in k30217 in k26697 in k26694 in k26691 in k26688 in k26263 in k26260 in k26257 in k26254 in k26251 in k25668 in k25665 in k25142 in k25139 in k25136 in k25133 in k25130 in k25127 in k25124 in k25121 in k25118 in k25115 in k25112 in k25109 in k25106 in k25103 in k25100 in k25097 in k25094 in k25091 in k25088 in k25085 in k25082 in k24943 in k24940 in k24937 in k24934 in k24878 in k24875 in k24872 in k24869 in k24866 in k24863 in k24860 in k24857 in k23555 in k23486 in k23293 in k23290 in k23185 in k23134 in k11783 in k10718 in k10715 in k7274 in k7271 in k6978 in k6975 in k6971 in k6680 in k6677 in k6674 in k6671 */
static void C_ccall f_35316(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word ab[12],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_35316,2,t0,t1);}
if(C_truep(t1)){
t2=(C_word)C_i_car(((C_word*)t0)[4]);
t3=(C_word)C_a_i_minus(&a,2,t2,C_retrieve(lf[722]));
t4=(C_word)C_a_i_arithmetic_shift(&a,2,C_fix(1),t3);
t5=(C_word)C_a_i_bitwise_ior(&a,2,((C_word*)((C_word*)t0)[3])[1],t4);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_35306(2,t7,t6);}
else{
t2=(C_word)C_i_car(((C_word*)t0)[4]);
C_trace("ChickenBridge.scm: 382  error");
t3=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t3))(4,t3,((C_word*)t0)[2],lf[785],t2);}}

/* k35304 in do6141 in k35288 in k35281 in mp:intypes in k30217 in k26697 in k26694 in k26691 in k26688 in k26263 in k26260 in k26257 in k26254 in k26251 in k25668 in k25665 in k25142 in k25139 in k25136 in k25133 in k25130 in k25127 in k25124 in k25121 in k25118 in k25115 in k25112 in k25109 in k25106 in k25103 in k25100 in k25097 in k25094 in k25091 in k25088 in k25085 in k25082 in k24943 in k24940 in k24937 in k24934 in k24878 in k24875 in k24872 in k24869 in k24866 in k24863 in k24860 in k24857 in k23555 in k23486 in k23293 in k23290 in k23185 in k23134 in k11783 in k10718 in k10715 in k7274 in k7271 in k6978 in k6975 in k6971 in k6680 in k6677 in k6674 in k6671 */
static void C_ccall f_35306(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word *a;
t2=(C_word)C_i_cdr(((C_word*)t0)[4]);
t3=((C_word*)((C_word*)t0)[3])[1];
f_35296(t3,((C_word*)t0)[2],t2);}

/* k35260 in mp:intypes in k30217 in k26697 in k26694 in k26691 in k26688 in k26263 in k26260 in k26257 in k26254 in k26251 in k25668 in k25665 in k25142 in k25139 in k25136 in k25133 in k25130 in k25127 in k25124 in k25121 in k25118 in k25115 in k25112 in k25109 in k25106 in k25103 in k25100 in k25097 in k25094 in k25091 in k25088 in k25085 in k25082 in k24943 in k24940 in k24937 in k24934 in k24878 in k24875 in k24872 in k24869 in k24866 in k24863 in k24860 in k24857 in k23555 in k23486 in k23293 in k23290 in k23185 in k23134 in k11783 in k10718 in k10715 in k7274 in k7271 in k6978 in k6975 in k6971 in k6680 in k6677 in k6674 in k6671 */
static void C_ccall f_35262(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word ab[3],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_35262,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_35266,a[2]=((C_word)li560),tmp=(C_word)a,a+=3,tmp);
((C_proc3)(void*)(*((C_word*)t2+1)))(3,t2,((C_word*)t0)[3],((C_word*)((C_word*)t0)[2])[1]);}

/* f_35266 in k35260 in mp:intypes in k30217 in k26697 in k26694 in k26691 in k26688 in k26263 in k26260 in k26257 in k26254 in k26251 in k25668 in k25665 in k25142 in k25139 in k25136 in k25133 in k25130 in k25127 in k25124 in k25121 in k25118 in k25115 in k25112 in k25109 in k25106 in k25103 in k25100 in k25097 in k25094 in k25091 in k25088 in k25085 in k25082 in k24943 in k24940 in k24937 in k24934 in k24878 in k24875 in k24872 in k24869 in k24866 in k24863 in k24860 in k24857 in k23555 in k23486 in k23293 in k23290 in k23185 in k23134 in k11783 in k10718 in k10715 in k7274 in k7271 in k6978 in k6975 in k6971 in k6680 in k6677 in k6674 in k6671 */
static void C_ccall f_35266(C_word c,C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word *a;
if(c!=3) C_bad_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr3,(void*)f_35266,3,t0,t1,t2);}
t3=(C_word)C_i_foreign_fixnum_argumentp(t2);
t4=t1;
((C_proc2)(void*)(*((C_word*)t4+1)))(2,t4,(C_word)stub6147(C_SCHEME_UNDEFINED,t3));}

/* mp:inchans in k30217 in k26697 in k26694 in k26691 in k26688 in k26263 in k26260 in k26257 in k26254 in k26251 in k25668 in k25665 in k25142 in k25139 in k25136 in k25133 in k25130 in k25127 in k25124 in k25121 in k25118 in k25115 in k25112 in k25109 in k25106 in k25103 in k25100 in k25097 in k25094 in k25091 in k25088 in k25085 in k25082 in k24943 in k24940 in k24937 in k24934 in k24878 in k24875 in k24872 in k24869 in k24866 in k24863 in k24860 in k24857 in k23555 in k23486 in k23293 in k23290 in k23185 in k23134 in k11783 in k10718 in k10715 in k7274 in k7271 in k6978 in k6975 in k6971 in k6680 in k6677 in k6674 in k6671 */
static void C_ccall f_35147(C_word c,C_word t0,C_word t1,...){
C_word tmp;
C_word t2;
va_list v;
C_word *a,c2=c;
C_save_rest(t1,c2,2);
C_check_for_interrupt;
if(!C_demand(c*C_SIZEOF_PAIR+11)){
C_save_and_reclaim((void*)tr2r,(void*)f_35147r,2,t0,t1);}
else{
a=C_alloc((c-2)*3);
t2=C_restore_rest(a,C_rest_count(0));
f_35147r(t0,t1,t2);}}

static void C_ccall f_35147r(C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word *a=C_alloc(11);
t3=C_fix(0);
t4=(*a=C_VECTOR_TYPE|1,a[1]=t3,tmp=(C_word)a,a+=2,tmp);
t5=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_35151,a[2]=t4,a[3]=t1,tmp=(C_word)a,a+=4,tmp);
if(C_truep((C_word)C_i_nullp(t2))){
C_trace("ChickenBridge.scm: 382  error");
t6=*((C_word*)lf[4]+1);
((C_proc3)C_retrieve_proc(t6))(3,t6,t5,lf[781]);}
else{
t6=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_35172,a[2]=t2,a[3]=t5,a[4]=t4,tmp=(C_word)a,a+=5,tmp);
t7=(C_word)C_i_cdr(t2);
if(C_truep((C_word)C_i_nullp(t7))){
t8=(C_word)C_i_car(t2);
t9=t6;
f_35172(t9,(C_word)C_eqp(t8,C_SCHEME_FALSE));}
else{
t8=t6;
f_35172(t8,C_SCHEME_FALSE);}}}

/* k35170 in mp:inchans in k30217 in k26697 in k26694 in k26691 in k26688 in k26263 in k26260 in k26257 in k26254 in k26251 in k25668 in k25665 in k25142 in k25139 in k25136 in k25133 in k25130 in k25127 in k25124 in k25121 in k25118 in k25115 in k25112 in k25109 in k25106 in k25103 in k25100 in k25097 in k25094 in k25091 in k25088 in k25085 in k25082 in k24943 in k24940 in k24937 in k24934 in k24878 in k24875 in k24872 in k24869 in k24866 in k24863 in k24860 in k24857 in k23555 in k23486 in k23293 in k23290 in k23185 in k23134 in k11783 in k10718 in k10715 in k7274 in k7271 in k6978 in k6975 in k6971 in k6680 in k6677 in k6674 in k6671 */
static void C_fcall f_35172(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[5],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_35172,NULL,2,t0,t1);}
if(C_truep(t1)){
t2=C_set_block_item(((C_word*)t0)[4],0,C_fix(0));
t3=((C_word*)t0)[3];
f_35151(2,t3,t2);}
else{
t2=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_35179,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],tmp=(C_word)a,a+=5,tmp);
t3=(C_word)C_i_cdr(((C_word*)t0)[2]);
if(C_truep((C_word)C_i_nullp(t3))){
t4=(C_word)C_i_car(((C_word*)t0)[2]);
t5=t2;
f_35179(t5,(C_word)C_eqp(t4,C_SCHEME_TRUE));}
else{
t4=t2;
f_35179(t4,C_SCHEME_FALSE);}}}

/* k35177 in k35170 in mp:inchans in k30217 in k26697 in k26694 in k26691 in k26688 in k26263 in k26260 in k26257 in k26254 in k26251 in k25668 in k25665 in k25142 in k25139 in k25136 in k25133 in k25130 in k25127 in k25124 in k25121 in k25118 in k25115 in k25112 in k25109 in k25106 in k25103 in k25100 in k25097 in k25094 in k25091 in k25088 in k25085 in k25082 in k24943 in k24940 in k24937 in k24934 in k24878 in k24875 in k24872 in k24869 in k24866 in k24863 in k24860 in k24857 in k23555 in k23486 in k23293 in k23290 in k23185 in k23134 in k11783 in k10718 in k10715 in k7274 in k7271 in k6978 in k6975 in k6971 in k6680 in k6677 in k6674 in k6671 */
static void C_fcall f_35179(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_35179,NULL,2,t0,t1);}
if(C_truep(t1)){
t2=C_set_block_item(((C_word*)t0)[4],0,C_fix(65535));
t3=((C_word*)t0)[3];
f_35151(2,t3,t2);}
else{
t2=C_SCHEME_UNDEFINED;
t3=(*a=C_VECTOR_TYPE|1,a[1]=t2,tmp=(C_word)a,a+=2,tmp);
t4=C_set_block_item(t3,0,(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_35185,a[2]=((C_word*)t0)[4],a[3]=t3,a[4]=((C_word)li558),tmp=(C_word)a,a+=5,tmp));
t5=((C_word*)t3)[1];
f_35185(t5,((C_word*)t0)[3],((C_word*)t0)[2]);}}

/* do6129 in k35177 in k35170 in mp:inchans in k30217 in k26697 in k26694 in k26691 in k26688 in k26263 in k26260 in k26257 in k26254 in k26251 in k25668 in k25665 in k25142 in k25139 in k25136 in k25133 in k25130 in k25127 in k25124 in k25121 in k25118 in k25115 in k25112 in k25109 in k25106 in k25103 in k25100 in k25097 in k25094 in k25091 in k25088 in k25085 in k25082 in k24943 in k24940 in k24937 in k24934 in k24878 in k24875 in k24872 in k24869 in k24866 in k24863 in k24860 in k24857 in k23555 in k23486 in k23293 in k23290 in k23185 in k23134 in k11783 in k10718 in k10715 in k7274 in k7271 in k6978 in k6975 in k6971 in k6680 in k6677 in k6674 in k6671 */
static void C_fcall f_35185(C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[10],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_35185,NULL,3,t0,t1,t2);}
if(C_truep((C_word)C_i_nullp(t2))){
t3=t1;
((C_proc2)(void*)(*((C_word*)t3+1)))(2,t3,C_SCHEME_FALSE);}
else{
t3=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_35195,a[2]=t1,a[3]=((C_word*)t0)[3],a[4]=t2,tmp=(C_word)a,a+=5,tmp);
t4=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_35205,a[2]=t3,a[3]=((C_word*)t0)[2],a[4]=t2,tmp=(C_word)a,a+=5,tmp);
t5=(C_word)C_i_car(t2);
C_trace("ChickenBridge.scm: 382  <=");
C_less_or_equal_p(5,0,t4,C_fix(0),t5,C_fix(15));}}

/* k35203 in do6129 in k35177 in k35170 in mp:inchans in k30217 in k26697 in k26694 in k26691 in k26688 in k26263 in k26260 in k26257 in k26254 in k26251 in k25668 in k25665 in k25142 in k25139 in k25136 in k25133 in k25130 in k25127 in k25124 in k25121 in k25118 in k25115 in k25112 in k25109 in k25106 in k25103 in k25100 in k25097 in k25094 in k25091 in k25088 in k25085 in k25082 in k24943 in k24940 in k24937 in k24934 in k24878 in k24875 in k24872 in k24869 in k24866 in k24863 in k24860 in k24857 in k23555 in k23486 in k23293 in k23290 in k23185 in k23134 in k11783 in k10718 in k10715 in k7274 in k7271 in k6978 in k6975 in k6971 in k6680 in k6677 in k6674 in k6671 */
static void C_ccall f_35205(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word ab[8],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_35205,2,t0,t1);}
if(C_truep(t1)){
t2=(C_word)C_i_car(((C_word*)t0)[4]);
t3=(C_word)C_a_i_arithmetic_shift(&a,2,C_fix(1),t2);
t4=(C_word)C_a_i_bitwise_ior(&a,2,((C_word*)((C_word*)t0)[3])[1],t3);
t5=C_mutate(((C_word *)((C_word*)t0)[3])+1,t4);
t6=((C_word*)t0)[2];
f_35195(2,t6,t5);}
else{
t2=(C_word)C_i_car(((C_word*)t0)[4]);
C_trace("ChickenBridge.scm: 382  error");
t3=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t3))(4,t3,((C_word*)t0)[2],lf[782],t2);}}

/* k35193 in do6129 in k35177 in k35170 in mp:inchans in k30217 in k26697 in k26694 in k26691 in k26688 in k26263 in k26260 in k26257 in k26254 in k26251 in k25668 in k25665 in k25142 in k25139 in k25136 in k25133 in k25130 in k25127 in k25124 in k25121 in k25118 in k25115 in k25112 in k25109 in k25106 in k25103 in k25100 in k25097 in k25094 in k25091 in k25088 in k25085 in k25082 in k24943 in k24940 in k24937 in k24934 in k24878 in k24875 in k24872 in k24869 in k24866 in k24863 in k24860 in k24857 in k23555 in k23486 in k23293 in k23290 in k23185 in k23134 in k11783 in k10718 in k10715 in k7274 in k7271 in k6978 in k6975 in k6971 in k6680 in k6677 in k6674 in k6671 */
static void C_ccall f_35195(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word *a;
t2=(C_word)C_i_cdr(((C_word*)t0)[4]);
t3=((C_word*)((C_word*)t0)[3])[1];
f_35185(t3,((C_word*)t0)[2],t2);}

/* k35149 in mp:inchans in k30217 in k26697 in k26694 in k26691 in k26688 in k26263 in k26260 in k26257 in k26254 in k26251 in k25668 in k25665 in k25142 in k25139 in k25136 in k25133 in k25130 in k25127 in k25124 in k25121 in k25118 in k25115 in k25112 in k25109 in k25106 in k25103 in k25100 in k25097 in k25094 in k25091 in k25088 in k25085 in k25082 in k24943 in k24940 in k24937 in k24934 in k24878 in k24875 in k24872 in k24869 in k24866 in k24863 in k24860 in k24857 in k23555 in k23486 in k23293 in k23290 in k23185 in k23134 in k11783 in k10718 in k10715 in k7274 in k7271 in k6978 in k6975 in k6971 in k6680 in k6677 in k6674 in k6671 */
static void C_ccall f_35151(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word ab[3],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_35151,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_35155,a[2]=((C_word)li557),tmp=(C_word)a,a+=3,tmp);
((C_proc3)(void*)(*((C_word*)t2+1)))(3,t2,((C_word*)t0)[3],((C_word*)((C_word*)t0)[2])[1]);}

/* f_35155 in k35149 in mp:inchans in k30217 in k26697 in k26694 in k26691 in k26688 in k26263 in k26260 in k26257 in k26254 in k26251 in k25668 in k25665 in k25142 in k25139 in k25136 in k25133 in k25130 in k25127 in k25124 in k25121 in k25118 in k25115 in k25112 in k25109 in k25106 in k25103 in k25100 in k25097 in k25094 in k25091 in k25088 in k25085 in k25082 in k24943 in k24940 in k24937 in k24934 in k24878 in k24875 in k24872 in k24869 in k24866 in k24863 in k24860 in k24857 in k23555 in k23486 in k23293 in k23290 in k23185 in k23134 in k11783 in k10718 in k10715 in k7274 in k7271 in k6978 in k6975 in k6971 in k6680 in k6677 in k6674 in k6671 */
static void C_ccall f_35155(C_word c,C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word *a;
if(c!=3) C_bad_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr3,(void*)f_35155,3,t0,t1,t2);}
t3=(C_word)C_i_foreign_fixnum_argumentp(t2);
t4=t1;
((C_proc2)(void*)(*((C_word*)t4+1)))(2,t4,(C_word)stub6135(C_SCHEME_UNDEFINED,t3));}

/* mp:inhook in k30217 in k26697 in k26694 in k26691 in k26688 in k26263 in k26260 in k26257 in k26254 in k26251 in k25668 in k25665 in k25142 in k25139 in k25136 in k25133 in k25130 in k25127 in k25124 in k25121 in k25118 in k25115 in k25112 in k25109 in k25106 in k25103 in k25100 in k25097 in k25094 in k25091 in k25088 in k25085 in k25082 in k24943 in k24940 in k24937 in k24934 in k24878 in k24875 in k24872 in k24869 in k24866 in k24863 in k24860 in k24857 in k23555 in k23486 in k23293 in k23290 in k23185 in k23134 in k11783 in k10718 in k10715 in k7274 in k7271 in k6978 in k6975 in k6971 in k6680 in k6677 in k6674 in k6671 */
static void C_ccall f_35090(C_word c,C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word ab[10],*a=ab;
if(c!=3) C_bad_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr3,(void*)f_35090,3,t0,t1,t2);}
if(C_truep((C_word)C_i_closurep(t2))){
t3=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_35102,a[2]=t2,a[3]=((C_word)li553),tmp=(C_word)a,a+=4,tmp);
t4=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_35139,a[2]=((C_word)li554),tmp=(C_word)a,a+=3,tmp);
((C_proc3)(void*)(*((C_word*)t4+1)))(3,t4,t1,t3);}
else{
t3=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_35144,a[2]=((C_word)li555),tmp=(C_word)a,a+=3,tmp);
((C_proc3)(void*)(*((C_word*)t3+1)))(3,t3,t1,C_SCHEME_FALSE);}}

/* f_35144 in mp:inhook in k30217 in k26697 in k26694 in k26691 in k26688 in k26263 in k26260 in k26257 in k26254 in k26251 in k25668 in k25665 in k25142 in k25139 in k25136 in k25133 in k25130 in k25127 in k25124 in k25121 in k25118 in k25115 in k25112 in k25109 in k25106 in k25103 in k25100 in k25097 in k25094 in k25091 in k25088 in k25085 in k25082 in k24943 in k24940 in k24937 in k24934 in k24878 in k24875 in k24872 in k24869 in k24866 in k24863 in k24860 in k24857 in k23555 in k23486 in k23293 in k23290 in k23185 in k23134 in k11783 in k10718 in k10715 in k7274 in k7271 in k6978 in k6975 in k6971 in k6680 in k6677 in k6674 in k6671 */
static void C_ccall f_35144(C_word c,C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word *a;
if(c!=3) C_bad_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr3,(void*)f_35144,3,t0,t1,t2);}
t3=t1;
((C_proc2)(void*)(*((C_word*)t3+1)))(2,t3,(C_word)stub6124(C_SCHEME_UNDEFINED,t2));}

/* f_35139 in mp:inhook in k30217 in k26697 in k26694 in k26691 in k26688 in k26263 in k26260 in k26257 in k26254 in k26251 in k25668 in k25665 in k25142 in k25139 in k25136 in k25133 in k25130 in k25127 in k25124 in k25121 in k25118 in k25115 in k25112 in k25109 in k25106 in k25103 in k25100 in k25097 in k25094 in k25091 in k25088 in k25085 in k25082 in k24943 in k24940 in k24937 in k24934 in k24878 in k24875 in k24872 in k24869 in k24866 in k24863 in k24860 in k24857 in k23555 in k23486 in k23293 in k23290 in k23185 in k23134 in k11783 in k10718 in k10715 in k7274 in k7271 in k6978 in k6975 in k6971 in k6680 in k6677 in k6674 in k6671 */
static void C_ccall f_35139(C_word c,C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word *a;
if(c!=3) C_bad_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr3,(void*)f_35139,3,t0,t1,t2);}
t3=t1;
((C_proc2)(void*)(*((C_word*)t3+1)))(2,t3,(C_word)stub6115(C_SCHEME_UNDEFINED,t2));}

/* a35101 in mp:inhook in k30217 in k26697 in k26694 in k26691 in k26688 in k26263 in k26260 in k26257 in k26254 in k26251 in k25668 in k25665 in k25142 in k25139 in k25136 in k25133 in k25130 in k25127 in k25124 in k25121 in k25118 in k25115 in k25112 in k25109 in k25106 in k25103 in k25100 in k25097 in k25094 in k25091 in k25088 in k25085 in k25082 in k24943 in k24940 in k24937 in k24934 in k24878 in k24875 in k24872 in k24869 in k24866 in k24863 in k24860 in k24857 in k23555 in k23486 in k23293 in k23290 in k23185 in k23134 in k11783 in k10718 in k10715 in k7274 in k7271 in k6978 in k6975 in k6971 in k6680 in k6677 in k6674 in k6671 */
static void C_ccall f_35102(C_word c,C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word ab[5],*a=ab;
if(c!=3) C_bad_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr3,(void*)f_35102,3,t0,t1,t2);}
t3=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_35108,a[2]=t2,a[3]=((C_word*)t0)[2],a[4]=((C_word)li552),tmp=(C_word)a,a+=5,tmp);
C_trace("ChickenBridge.scm: 382  call-with-current-continuation");
t4=*((C_word*)lf[779]+1);
((C_proc3)C_retrieve_proc(t4))(3,t4,t1,t3);}

/* a35107 in a35101 in mp:inhook in k30217 in k26697 in k26694 in k26691 in k26688 in k26263 in k26260 in k26257 in k26254 in k26251 in k25668 in k25665 in k25142 in k25139 in k25136 in k25133 in k25130 in k25127 in k25124 in k25121 in k25118 in k25115 in k25112 in k25109 in k25106 in k25103 in k25100 in k25097 in k25094 in k25091 in k25088 in k25085 in k25082 in k24943 in k24940 in k24937 in k24934 in k24878 in k24875 in k24872 in k24869 in k24866 in k24863 in k24860 in k24857 in k23555 in k23486 in k23293 in k23290 in k23185 in k23134 in k11783 in k10718 in k10715 in k7274 in k7271 in k6978 in k6975 in k6971 in k6680 in k6677 in k6674 in k6671 */
static void C_ccall f_35108(C_word c,C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word t5;
C_word ab[9],*a=ab;
if(c!=3) C_bad_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr3,(void*)f_35108,3,t0,t1,t2);}
t3=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_35114,a[2]=t2,a[3]=((C_word)li550),tmp=(C_word)a,a+=4,tmp);
t4=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_35134,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word)li551),tmp=(C_word)a,a+=5,tmp);
C_trace("ChickenBridge.scm: 382  with-exception-handler");
t5=C_retrieve(lf[778]);
((C_proc4)C_retrieve_proc(t5))(4,t5,t1,t3,t4);}

/* a35133 in a35107 in a35101 in mp:inhook in k30217 in k26697 in k26694 in k26691 in k26688 in k26263 in k26260 in k26257 in k26254 in k26251 in k25668 in k25665 in k25142 in k25139 in k25136 in k25133 in k25130 in k25127 in k25124 in k25121 in k25118 in k25115 in k25112 in k25109 in k25106 in k25103 in k25100 in k25097 in k25094 in k25091 in k25088 in k25085 in k25082 in k24943 in k24940 in k24937 in k24934 in k24878 in k24875 in k24872 in k24869 in k24866 in k24863 in k24860 in k24857 in k23555 in k23486 in k23293 in k23290 in k23185 in k23134 in k11783 in k10718 in k10715 in k7274 in k7271 in k6978 in k6975 in k6971 in k6680 in k6677 in k6674 in k6671 */
static void C_ccall f_35134(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[3],*a=ab;
if(c!=2) C_bad_argc_2(c,2,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_35134,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_35138,a[2]=t1,tmp=(C_word)a,a+=3,tmp);
C_trace("ChickenBridge.scm: 382  %hook");
t3=((C_word*)t0)[3];
((C_proc3)C_retrieve_proc(t3))(3,t3,t2,((C_word*)t0)[2]);}

/* k35136 in a35133 in a35107 in a35101 in mp:inhook in k30217 in k26697 in k26694 in k26691 in k26688 in k26263 in k26260 in k26257 in k26254 in k26251 in k25668 in k25665 in k25142 in k25139 in k25136 in k25133 in k25130 in k25127 in k25124 in k25121 in k25118 in k25115 in k25112 in k25109 in k25106 in k25103 in k25100 in k25097 in k25094 in k25091 in k25088 in k25085 in k25082 in k24943 in k24940 in k24937 in k24934 in k24878 in k24875 in k24872 in k24869 in k24866 in k24863 in k24860 in k24857 in k23555 in k23486 in k23293 in k23290 in k23185 in k23134 in k11783 in k10718 in k10715 in k7274 in k7271 in k6978 in k6975 in k6971 in k6680 in k6677 in k6674 in k6671 */
static void C_ccall f_35138(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
t2=((C_word*)t0)[2];
((C_proc2)(void*)(*((C_word*)t2+1)))(2,t2,C_fix(0));}

/* a35113 in a35107 in a35101 in mp:inhook in k30217 in k26697 in k26694 in k26691 in k26688 in k26263 in k26260 in k26257 in k26254 in k26251 in k25668 in k25665 in k25142 in k25139 in k25136 in k25133 in k25130 in k25127 in k25124 in k25121 in k25118 in k25115 in k25112 in k25109 in k25106 in k25103 in k25100 in k25097 in k25094 in k25091 in k25088 in k25085 in k25082 in k24943 in k24940 in k24937 in k24934 in k24878 in k24875 in k24872 in k24869 in k24866 in k24863 in k24860 in k24857 in k23555 in k23486 in k23293 in k23290 in k23185 in k23134 in k11783 in k10718 in k10715 in k7274 in k7271 in k6978 in k6975 in k6971 in k6680 in k6677 in k6674 in k6671 */
static void C_ccall f_35114(C_word c,C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word ab[14],*a=ab;
if(c!=3) C_bad_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr3,(void*)f_35114,3,t0,t1,t2);}
t3=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_35118,a[2]=t1,a[3]=((C_word*)t0)[2],tmp=(C_word)a,a+=4,tmp);
t4=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_35125,a[2]=t3,tmp=(C_word)a,a+=3,tmp);
t5=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_35129,a[2]=t4,tmp=(C_word)a,a+=3,tmp);
t6=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_35132,a[2]=t2,a[3]=t5,tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 382  condition-property-accessor");
t7=C_retrieve(lf[775]);
((C_proc4)C_retrieve_proc(t7))(4,t7,t6,lf[776],lf[777]);}

/* k35130 in a35113 in a35107 in a35101 in mp:inhook in k30217 in k26697 in k26694 in k26691 in k26688 in k26263 in k26260 in k26257 in k26254 in k26251 in k25668 in k25665 in k25142 in k25139 in k25136 in k25133 in k25130 in k25127 in k25124 in k25121 in k25118 in k25115 in k25112 in k25109 in k25106 in k25103 in k25100 in k25097 in k25094 in k25091 in k25088 in k25085 in k25082 in k24943 in k24940 in k24937 in k24934 in k24878 in k24875 in k24872 in k24869 in k24866 in k24863 in k24860 in k24857 in k23555 in k23486 in k23293 in k23290 in k23185 in k23134 in k11783 in k10718 in k10715 in k7274 in k7271 in k6978 in k6975 in k6971 in k6680 in k6677 in k6674 in k6671 */
static void C_ccall f_35132(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
t2=t1;
((C_proc3)C_retrieve_proc(t2))(3,t2,((C_word*)t0)[3],((C_word*)t0)[2]);}

/* k35127 in a35113 in a35107 in a35101 in mp:inhook in k30217 in k26697 in k26694 in k26691 in k26688 in k26263 in k26260 in k26257 in k26254 in k26251 in k25668 in k25665 in k25142 in k25139 in k25136 in k25133 in k25130 in k25127 in k25124 in k25121 in k25118 in k25115 in k25112 in k25109 in k25106 in k25103 in k25100 in k25097 in k25094 in k25091 in k25088 in k25085 in k25082 in k24943 in k24940 in k24937 in k24934 in k24878 in k24875 in k24872 in k24869 in k24866 in k24863 in k24860 in k24857 in k23555 in k23486 in k23293 in k23290 in k23185 in k23134 in k11783 in k10718 in k10715 in k7274 in k7271 in k6978 in k6975 in k6971 in k6680 in k6677 in k6674 in k6671 */
static void C_ccall f_35129(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 382  sprintf");
t2=C_retrieve(lf[31]);
((C_proc4)C_retrieve_proc(t2))(4,t2,((C_word*)t0)[2],lf[774],t1);}

/* k35123 in a35113 in a35107 in a35101 in mp:inhook in k30217 in k26697 in k26694 in k26691 in k26688 in k26263 in k26260 in k26257 in k26254 in k26251 in k25668 in k25665 in k25142 in k25139 in k25136 in k25133 in k25130 in k25127 in k25124 in k25121 in k25118 in k25115 in k25112 in k25109 in k25106 in k25103 in k25100 in k25097 in k25094 in k25091 in k25088 in k25085 in k25082 in k24943 in k24940 in k24937 in k24934 in k24878 in k24875 in k24872 in k24869 in k24866 in k24863 in k24860 in k24857 in k23555 in k23486 in k23293 in k23290 in k23185 in k23134 in k11783 in k10718 in k10715 in k7274 in k7271 in k6978 in k6975 in k6971 in k6680 in k6677 in k6674 in k6671 */
static void C_ccall f_35125(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 382  print-error");
t2=C_retrieve(lf[496]);
((C_proc3)C_retrieve_proc(t2))(3,t2,((C_word*)t0)[2],t1);}

/* k35116 in a35113 in a35107 in a35101 in mp:inhook in k30217 in k26697 in k26694 in k26691 in k26688 in k26263 in k26260 in k26257 in k26254 in k26251 in k25668 in k25665 in k25142 in k25139 in k25136 in k25133 in k25130 in k25127 in k25124 in k25121 in k25118 in k25115 in k25112 in k25109 in k25106 in k25103 in k25100 in k25097 in k25094 in k25091 in k25088 in k25085 in k25082 in k24943 in k24940 in k24937 in k24934 in k24878 in k24875 in k24872 in k24869 in k24866 in k24863 in k24860 in k24857 in k23555 in k23486 in k23293 in k23290 in k23185 in k23134 in k11783 in k10718 in k10715 in k7274 in k7271 in k6978 in k6975 in k6971 in k6680 in k6677 in k6674 in k6671 */
static void C_ccall f_35118(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 382  %cont");
t2=((C_word*)t0)[3];
((C_proc3)C_retrieve_proc(t2))(3,t2,((C_word*)t0)[2],C_fix(-1));}

/* mp:mm in k30217 in k26697 in k26694 in k26691 in k26688 in k26263 in k26260 in k26257 in k26254 in k26251 in k25668 in k25665 in k25142 in k25139 in k25136 in k25133 in k25130 in k25127 in k25124 in k25121 in k25118 in k25115 in k25112 in k25109 in k25106 in k25103 in k25100 in k25097 in k25094 in k25091 in k25088 in k25085 in k25082 in k24943 in k24940 in k24937 in k24934 in k24878 in k24875 in k24872 in k24869 in k24866 in k24863 in k24860 in k24857 in k23555 in k23486 in k23293 in k23290 in k23185 in k23134 in k11783 in k10718 in k10715 in k7274 in k7271 in k6978 in k6975 in k6971 in k6680 in k6677 in k6674 in k6671 */
static void C_ccall f_35075(C_word c,C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word ab[3],*a=ab;
if(c!=3) C_bad_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr3,(void*)f_35075,3,t0,t1,t2);}
t3=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_35080,a[2]=((C_word)li548),tmp=(C_word)a,a+=3,tmp);
((C_proc3)(void*)(*((C_word*)t3+1)))(3,t3,t1,t2);}

/* f_35080 in mp:mm in k30217 in k26697 in k26694 in k26691 in k26688 in k26263 in k26260 in k26257 in k26254 in k26251 in k25668 in k25665 in k25142 in k25139 in k25136 in k25133 in k25130 in k25127 in k25124 in k25121 in k25118 in k25115 in k25112 in k25109 in k25106 in k25103 in k25100 in k25097 in k25094 in k25091 in k25088 in k25085 in k25082 in k24943 in k24940 in k24937 in k24934 in k24878 in k24875 in k24872 in k24869 in k24866 in k24863 in k24860 in k24857 in k23555 in k23486 in k23293 in k23290 in k23185 in k23134 in k11783 in k10718 in k10715 in k7274 in k7271 in k6978 in k6975 in k6971 in k6680 in k6677 in k6674 in k6671 */
static void C_ccall f_35080(C_word c,C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word *a;
if(c!=3) C_bad_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr3,(void*)f_35080,3,t0,t1,t2);}
t3=(C_truep(t2)?(C_word)C_i_foreign_pointer_argumentp(t2):C_SCHEME_FALSE);
t4=t1;
((C_proc2)(void*)(*((C_word*)t4+1)))(2,t4,(C_word)stub6108(C_SCHEME_UNDEFINED,t3));}

/* mp:bend in k30217 in k26697 in k26694 in k26691 in k26688 in k26263 in k26260 in k26257 in k26254 in k26251 in k25668 in k25665 in k25142 in k25139 in k25136 in k25133 in k25130 in k25127 in k25124 in k25121 in k25118 in k25115 in k25112 in k25109 in k25106 in k25103 in k25100 in k25097 in k25094 in k25091 in k25088 in k25085 in k25082 in k24943 in k24940 in k24937 in k24934 in k24878 in k24875 in k24872 in k24869 in k24866 in k24863 in k24860 in k24857 in k23555 in k23486 in k23293 in k23290 in k23185 in k23134 in k11783 in k10718 in k10715 in k7274 in k7271 in k6978 in k6975 in k6971 in k6680 in k6677 in k6674 in k6671 */
static void C_ccall f_35047(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4){
C_word tmp;
C_word t5;
C_word ab[3],*a=ab;
if(c!=5) C_bad_argc_2(c,5,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr5,(void*)f_35047,5,t0,t1,t2,t3,t4);}
t5=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_35052,a[2]=((C_word)li546),tmp=(C_word)a,a+=3,tmp);
((C_proc7)(void*)(*((C_word*)t5+1)))(7,t5,t1,C_retrieve(lf[728]),t2,t4,t3,C_fix(0));}

/* f_35052 in mp:bend in k30217 in k26697 in k26694 in k26691 in k26688 in k26263 in k26260 in k26257 in k26254 in k26251 in k25668 in k25665 in k25142 in k25139 in k25136 in k25133 in k25130 in k25127 in k25124 in k25121 in k25118 in k25115 in k25112 in k25109 in k25106 in k25103 in k25100 in k25097 in k25094 in k25091 in k25088 in k25085 in k25082 in k24943 in k24940 in k24937 in k24934 in k24878 in k24875 in k24872 in k24869 in k24866 in k24863 in k24860 in k24857 in k23555 in k23486 in k23293 in k23290 in k23185 in k23134 in k11783 in k10718 in k10715 in k7274 in k7271 in k6978 in k6975 in k6971 in k6680 in k6677 in k6674 in k6671 */
static void C_ccall f_35052(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4,C_word t5,C_word t6){
C_word tmp;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word *a;
if(c!=7) C_bad_argc_2(c,7,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr7,(void*)f_35052,7,t0,t1,t2,t3,t4,t5,t6);}
t7=(C_word)C_i_foreign_fixnum_argumentp(t2);
t8=(C_word)C_i_foreign_flonum_argumentp(t3);
t9=(C_word)C_i_foreign_flonum_argumentp(t4);
t10=(C_word)C_i_foreign_flonum_argumentp(t5);
t11=(C_word)C_i_foreign_flonum_argumentp(t6);
t12=t1;
((C_proc2)(void*)(*((C_word*)t12+1)))(2,t12,(C_word)stub6099(C_SCHEME_UNDEFINED,t7,t8,t9,t10,t11));}

/* mp:press in k30217 in k26697 in k26694 in k26691 in k26688 in k26263 in k26260 in k26257 in k26254 in k26251 in k25668 in k25665 in k25142 in k25139 in k25136 in k25133 in k25130 in k25127 in k25124 in k25121 in k25118 in k25115 in k25112 in k25109 in k25106 in k25103 in k25100 in k25097 in k25094 in k25091 in k25088 in k25085 in k25082 in k24943 in k24940 in k24937 in k24934 in k24878 in k24875 in k24872 in k24869 in k24866 in k24863 in k24860 in k24857 in k23555 in k23486 in k23293 in k23290 in k23185 in k23134 in k11783 in k10718 in k10715 in k7274 in k7271 in k6978 in k6975 in k6971 in k6680 in k6677 in k6674 in k6671 */
static void C_ccall f_35019(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4){
C_word tmp;
C_word t5;
C_word ab[3],*a=ab;
if(c!=5) C_bad_argc_2(c,5,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr5,(void*)f_35019,5,t0,t1,t2,t3,t4);}
t5=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_35024,a[2]=((C_word)li544),tmp=(C_word)a,a+=3,tmp);
((C_proc7)(void*)(*((C_word*)t5+1)))(7,t5,t1,C_retrieve(lf[727]),t2,t4,t3,C_fix(0));}

/* f_35024 in mp:press in k30217 in k26697 in k26694 in k26691 in k26688 in k26263 in k26260 in k26257 in k26254 in k26251 in k25668 in k25665 in k25142 in k25139 in k25136 in k25133 in k25130 in k25127 in k25124 in k25121 in k25118 in k25115 in k25112 in k25109 in k25106 in k25103 in k25100 in k25097 in k25094 in k25091 in k25088 in k25085 in k25082 in k24943 in k24940 in k24937 in k24934 in k24878 in k24875 in k24872 in k24869 in k24866 in k24863 in k24860 in k24857 in k23555 in k23486 in k23293 in k23290 in k23185 in k23134 in k11783 in k10718 in k10715 in k7274 in k7271 in k6978 in k6975 in k6971 in k6680 in k6677 in k6674 in k6671 */
static void C_ccall f_35024(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4,C_word t5,C_word t6){
C_word tmp;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word *a;
if(c!=7) C_bad_argc_2(c,7,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr7,(void*)f_35024,7,t0,t1,t2,t3,t4,t5,t6);}
t7=(C_word)C_i_foreign_fixnum_argumentp(t2);
t8=(C_word)C_i_foreign_flonum_argumentp(t3);
t9=(C_word)C_i_foreign_flonum_argumentp(t4);
t10=(C_word)C_i_foreign_flonum_argumentp(t5);
t11=(C_word)C_i_foreign_flonum_argumentp(t6);
t12=t1;
((C_proc2)(void*)(*((C_word*)t12+1)))(2,t12,(C_word)stub6084(C_SCHEME_UNDEFINED,t7,t8,t9,t10,t11));}

/* mp:prog in k30217 in k26697 in k26694 in k26691 in k26688 in k26263 in k26260 in k26257 in k26254 in k26251 in k25668 in k25665 in k25142 in k25139 in k25136 in k25133 in k25130 in k25127 in k25124 in k25121 in k25118 in k25115 in k25112 in k25109 in k25106 in k25103 in k25100 in k25097 in k25094 in k25091 in k25088 in k25085 in k25082 in k24943 in k24940 in k24937 in k24934 in k24878 in k24875 in k24872 in k24869 in k24866 in k24863 in k24860 in k24857 in k23555 in k23486 in k23293 in k23290 in k23185 in k23134 in k11783 in k10718 in k10715 in k7274 in k7271 in k6978 in k6975 in k6971 in k6680 in k6677 in k6674 in k6671 */
static void C_ccall f_34991(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4){
C_word tmp;
C_word t5;
C_word ab[3],*a=ab;
if(c!=5) C_bad_argc_2(c,5,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr5,(void*)f_34991,5,t0,t1,t2,t3,t4);}
t5=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_34996,a[2]=((C_word)li542),tmp=(C_word)a,a+=3,tmp);
((C_proc7)(void*)(*((C_word*)t5+1)))(7,t5,t1,C_retrieve(lf[726]),t2,t4,t3,C_fix(0));}

/* f_34996 in mp:prog in k30217 in k26697 in k26694 in k26691 in k26688 in k26263 in k26260 in k26257 in k26254 in k26251 in k25668 in k25665 in k25142 in k25139 in k25136 in k25133 in k25130 in k25127 in k25124 in k25121 in k25118 in k25115 in k25112 in k25109 in k25106 in k25103 in k25100 in k25097 in k25094 in k25091 in k25088 in k25085 in k25082 in k24943 in k24940 in k24937 in k24934 in k24878 in k24875 in k24872 in k24869 in k24866 in k24863 in k24860 in k24857 in k23555 in k23486 in k23293 in k23290 in k23185 in k23134 in k11783 in k10718 in k10715 in k7274 in k7271 in k6978 in k6975 in k6971 in k6680 in k6677 in k6674 in k6671 */
static void C_ccall f_34996(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4,C_word t5,C_word t6){
C_word tmp;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word *a;
if(c!=7) C_bad_argc_2(c,7,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr7,(void*)f_34996,7,t0,t1,t2,t3,t4,t5,t6);}
t7=(C_word)C_i_foreign_fixnum_argumentp(t2);
t8=(C_word)C_i_foreign_flonum_argumentp(t3);
t9=(C_word)C_i_foreign_flonum_argumentp(t4);
t10=(C_word)C_i_foreign_flonum_argumentp(t5);
t11=(C_word)C_i_foreign_flonum_argumentp(t6);
t12=t1;
((C_proc2)(void*)(*((C_word*)t12+1)))(2,t12,(C_word)stub6069(C_SCHEME_UNDEFINED,t7,t8,t9,t10,t11));}

/* mp:ctrl in k30217 in k26697 in k26694 in k26691 in k26688 in k26263 in k26260 in k26257 in k26254 in k26251 in k25668 in k25665 in k25142 in k25139 in k25136 in k25133 in k25130 in k25127 in k25124 in k25121 in k25118 in k25115 in k25112 in k25109 in k25106 in k25103 in k25100 in k25097 in k25094 in k25091 in k25088 in k25085 in k25082 in k24943 in k24940 in k24937 in k24934 in k24878 in k24875 in k24872 in k24869 in k24866 in k24863 in k24860 in k24857 in k23555 in k23486 in k23293 in k23290 in k23185 in k23134 in k11783 in k10718 in k10715 in k7274 in k7271 in k6978 in k6975 in k6971 in k6680 in k6677 in k6674 in k6671 */
static void C_ccall f_34963(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4,C_word t5){
C_word tmp;
C_word t6;
C_word ab[3],*a=ab;
if(c!=6) C_bad_argc_2(c,6,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr6,(void*)f_34963,6,t0,t1,t2,t3,t4,t5);}
t6=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_34968,a[2]=((C_word)li540),tmp=(C_word)a,a+=3,tmp);
((C_proc7)(void*)(*((C_word*)t6+1)))(7,t6,t1,C_retrieve(lf[725]),t2,t5,t3,t4);}

/* f_34968 in mp:ctrl in k30217 in k26697 in k26694 in k26691 in k26688 in k26263 in k26260 in k26257 in k26254 in k26251 in k25668 in k25665 in k25142 in k25139 in k25136 in k25133 in k25130 in k25127 in k25124 in k25121 in k25118 in k25115 in k25112 in k25109 in k25106 in k25103 in k25100 in k25097 in k25094 in k25091 in k25088 in k25085 in k25082 in k24943 in k24940 in k24937 in k24934 in k24878 in k24875 in k24872 in k24869 in k24866 in k24863 in k24860 in k24857 in k23555 in k23486 in k23293 in k23290 in k23185 in k23134 in k11783 in k10718 in k10715 in k7274 in k7271 in k6978 in k6975 in k6971 in k6680 in k6677 in k6674 in k6671 */
static void C_ccall f_34968(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4,C_word t5,C_word t6){
C_word tmp;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word *a;
if(c!=7) C_bad_argc_2(c,7,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr7,(void*)f_34968,7,t0,t1,t2,t3,t4,t5,t6);}
t7=(C_word)C_i_foreign_fixnum_argumentp(t2);
t8=(C_word)C_i_foreign_flonum_argumentp(t3);
t9=(C_word)C_i_foreign_flonum_argumentp(t4);
t10=(C_word)C_i_foreign_flonum_argumentp(t5);
t11=(C_word)C_i_foreign_flonum_argumentp(t6);
t12=t1;
((C_proc2)(void*)(*((C_word*)t12+1)))(2,t12,(C_word)stub6054(C_SCHEME_UNDEFINED,t7,t8,t9,t10,t11));}

/* mp:touch in k30217 in k26697 in k26694 in k26691 in k26688 in k26263 in k26260 in k26257 in k26254 in k26251 in k25668 in k25665 in k25142 in k25139 in k25136 in k25133 in k25130 in k25127 in k25124 in k25121 in k25118 in k25115 in k25112 in k25109 in k25106 in k25103 in k25100 in k25097 in k25094 in k25091 in k25088 in k25085 in k25082 in k24943 in k24940 in k24937 in k24934 in k24878 in k24875 in k24872 in k24869 in k24866 in k24863 in k24860 in k24857 in k23555 in k23486 in k23293 in k23290 in k23185 in k23134 in k11783 in k10718 in k10715 in k7274 in k7271 in k6978 in k6975 in k6971 in k6680 in k6677 in k6674 in k6671 */
static void C_ccall f_34935(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4,C_word t5){
C_word tmp;
C_word t6;
C_word ab[3],*a=ab;
if(c!=6) C_bad_argc_2(c,6,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr6,(void*)f_34935,6,t0,t1,t2,t3,t4,t5);}
t6=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_34940,a[2]=((C_word)li538),tmp=(C_word)a,a+=3,tmp);
((C_proc7)(void*)(*((C_word*)t6+1)))(7,t6,t1,C_retrieve(lf[724]),t2,t5,t3,t4);}

/* f_34940 in mp:touch in k30217 in k26697 in k26694 in k26691 in k26688 in k26263 in k26260 in k26257 in k26254 in k26251 in k25668 in k25665 in k25142 in k25139 in k25136 in k25133 in k25130 in k25127 in k25124 in k25121 in k25118 in k25115 in k25112 in k25109 in k25106 in k25103 in k25100 in k25097 in k25094 in k25091 in k25088 in k25085 in k25082 in k24943 in k24940 in k24937 in k24934 in k24878 in k24875 in k24872 in k24869 in k24866 in k24863 in k24860 in k24857 in k23555 in k23486 in k23293 in k23290 in k23185 in k23134 in k11783 in k10718 in k10715 in k7274 in k7271 in k6978 in k6975 in k6971 in k6680 in k6677 in k6674 in k6671 */
static void C_ccall f_34940(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4,C_word t5,C_word t6){
C_word tmp;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word *a;
if(c!=7) C_bad_argc_2(c,7,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr7,(void*)f_34940,7,t0,t1,t2,t3,t4,t5,t6);}
t7=(C_word)C_i_foreign_fixnum_argumentp(t2);
t8=(C_word)C_i_foreign_flonum_argumentp(t3);
t9=(C_word)C_i_foreign_flonum_argumentp(t4);
t10=(C_word)C_i_foreign_flonum_argumentp(t5);
t11=(C_word)C_i_foreign_flonum_argumentp(t6);
t12=t1;
((C_proc2)(void*)(*((C_word*)t12+1)))(2,t12,(C_word)stub6038(C_SCHEME_UNDEFINED,t7,t8,t9,t10,t11));}

/* mp:on in k30217 in k26697 in k26694 in k26691 in k26688 in k26263 in k26260 in k26257 in k26254 in k26251 in k25668 in k25665 in k25142 in k25139 in k25136 in k25133 in k25130 in k25127 in k25124 in k25121 in k25118 in k25115 in k25112 in k25109 in k25106 in k25103 in k25100 in k25097 in k25094 in k25091 in k25088 in k25085 in k25082 in k24943 in k24940 in k24937 in k24934 in k24878 in k24875 in k24872 in k24869 in k24866 in k24863 in k24860 in k24857 in k23555 in k23486 in k23293 in k23290 in k23185 in k23134 in k11783 in k10718 in k10715 in k7274 in k7271 in k6978 in k6975 in k6971 in k6680 in k6677 in k6674 in k6671 */
static void C_ccall f_34907(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4,C_word t5){
C_word tmp;
C_word t6;
C_word ab[3],*a=ab;
if(c!=6) C_bad_argc_2(c,6,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr6,(void*)f_34907,6,t0,t1,t2,t3,t4,t5);}
t6=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_34912,a[2]=((C_word)li536),tmp=(C_word)a,a+=3,tmp);
((C_proc7)(void*)(*((C_word*)t6+1)))(7,t6,t1,C_retrieve(lf[723]),t2,t5,t3,t4);}

/* f_34912 in mp:on in k30217 in k26697 in k26694 in k26691 in k26688 in k26263 in k26260 in k26257 in k26254 in k26251 in k25668 in k25665 in k25142 in k25139 in k25136 in k25133 in k25130 in k25127 in k25124 in k25121 in k25118 in k25115 in k25112 in k25109 in k25106 in k25103 in k25100 in k25097 in k25094 in k25091 in k25088 in k25085 in k25082 in k24943 in k24940 in k24937 in k24934 in k24878 in k24875 in k24872 in k24869 in k24866 in k24863 in k24860 in k24857 in k23555 in k23486 in k23293 in k23290 in k23185 in k23134 in k11783 in k10718 in k10715 in k7274 in k7271 in k6978 in k6975 in k6971 in k6680 in k6677 in k6674 in k6671 */
static void C_ccall f_34912(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4,C_word t5,C_word t6){
C_word tmp;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word *a;
if(c!=7) C_bad_argc_2(c,7,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr7,(void*)f_34912,7,t0,t1,t2,t3,t4,t5,t6);}
t7=(C_word)C_i_foreign_fixnum_argumentp(t2);
t8=(C_word)C_i_foreign_flonum_argumentp(t3);
t9=(C_word)C_i_foreign_flonum_argumentp(t4);
t10=(C_word)C_i_foreign_flonum_argumentp(t5);
t11=(C_word)C_i_foreign_flonum_argumentp(t6);
t12=t1;
((C_proc2)(void*)(*((C_word*)t12+1)))(2,t12,(C_word)stub6022(C_SCHEME_UNDEFINED,t7,t8,t9,t10,t11));}

/* mp:off in k30217 in k26697 in k26694 in k26691 in k26688 in k26263 in k26260 in k26257 in k26254 in k26251 in k25668 in k25665 in k25142 in k25139 in k25136 in k25133 in k25130 in k25127 in k25124 in k25121 in k25118 in k25115 in k25112 in k25109 in k25106 in k25103 in k25100 in k25097 in k25094 in k25091 in k25088 in k25085 in k25082 in k24943 in k24940 in k24937 in k24934 in k24878 in k24875 in k24872 in k24869 in k24866 in k24863 in k24860 in k24857 in k23555 in k23486 in k23293 in k23290 in k23185 in k23134 in k11783 in k10718 in k10715 in k7274 in k7271 in k6978 in k6975 in k6971 in k6680 in k6677 in k6674 in k6671 */
static void C_ccall f_34879(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4){
C_word tmp;
C_word t5;
C_word ab[3],*a=ab;
if(c!=5) C_bad_argc_2(c,5,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr5,(void*)f_34879,5,t0,t1,t2,t3,t4);}
t5=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_34884,a[2]=((C_word)li534),tmp=(C_word)a,a+=3,tmp);
((C_proc7)(void*)(*((C_word*)t5+1)))(7,t5,t1,C_retrieve(lf[722]),t2,t4,t3,C_fix(0));}

/* f_34884 in mp:off in k30217 in k26697 in k26694 in k26691 in k26688 in k26263 in k26260 in k26257 in k26254 in k26251 in k25668 in k25665 in k25142 in k25139 in k25136 in k25133 in k25130 in k25127 in k25124 in k25121 in k25118 in k25115 in k25112 in k25109 in k25106 in k25103 in k25100 in k25097 in k25094 in k25091 in k25088 in k25085 in k25082 in k24943 in k24940 in k24937 in k24934 in k24878 in k24875 in k24872 in k24869 in k24866 in k24863 in k24860 in k24857 in k23555 in k23486 in k23293 in k23290 in k23185 in k23134 in k11783 in k10718 in k10715 in k7274 in k7271 in k6978 in k6975 in k6971 in k6680 in k6677 in k6674 in k6671 */
static void C_ccall f_34884(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4,C_word t5,C_word t6){
C_word tmp;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word *a;
if(c!=7) C_bad_argc_2(c,7,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr7,(void*)f_34884,7,t0,t1,t2,t3,t4,t5,t6);}
t7=(C_word)C_i_foreign_fixnum_argumentp(t2);
t8=(C_word)C_i_foreign_flonum_argumentp(t3);
t9=(C_word)C_i_foreign_flonum_argumentp(t4);
t10=(C_word)C_i_foreign_flonum_argumentp(t5);
t11=(C_word)C_i_foreign_flonum_argumentp(t6);
t12=t1;
((C_proc2)(void*)(*((C_word*)t12+1)))(2,t12,(C_word)stub6006(C_SCHEME_UNDEFINED,t7,t8,t9,t10,t11));}

/* mp:midi in k30217 in k26697 in k26694 in k26691 in k26688 in k26263 in k26260 in k26257 in k26254 in k26251 in k25668 in k25665 in k25142 in k25139 in k25136 in k25133 in k25130 in k25127 in k25124 in k25121 in k25118 in k25115 in k25112 in k25109 in k25106 in k25103 in k25100 in k25097 in k25094 in k25091 in k25088 in k25085 in k25082 in k24943 in k24940 in k24937 in k24934 in k24878 in k24875 in k24872 in k24869 in k24866 in k24863 in k24860 in k24857 in k23555 in k23486 in k23293 in k23290 in k23185 in k23134 in k11783 in k10718 in k10715 in k7274 in k7271 in k6978 in k6975 in k6971 in k6680 in k6677 in k6674 in k6671 */
static void C_ccall f_34851(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4,C_word t5,C_word t6){
C_word tmp;
C_word t7;
C_word ab[3],*a=ab;
if(c!=7) C_bad_argc_2(c,7,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr7,(void*)f_34851,7,t0,t1,t2,t3,t4,t5,t6);}
t7=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_34856,a[2]=((C_word)li532),tmp=(C_word)a,a+=3,tmp);
((C_proc7)(void*)(*((C_word*)t7+1)))(7,t7,t1,t2,t3,t4,t5,t6);}

/* f_34856 in mp:midi in k30217 in k26697 in k26694 in k26691 in k26688 in k26263 in k26260 in k26257 in k26254 in k26251 in k25668 in k25665 in k25142 in k25139 in k25136 in k25133 in k25130 in k25127 in k25124 in k25121 in k25118 in k25115 in k25112 in k25109 in k25106 in k25103 in k25100 in k25097 in k25094 in k25091 in k25088 in k25085 in k25082 in k24943 in k24940 in k24937 in k24934 in k24878 in k24875 in k24872 in k24869 in k24866 in k24863 in k24860 in k24857 in k23555 in k23486 in k23293 in k23290 in k23185 in k23134 in k11783 in k10718 in k10715 in k7274 in k7271 in k6978 in k6975 in k6971 in k6680 in k6677 in k6674 in k6671 */
static void C_ccall f_34856(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4,C_word t5,C_word t6){
C_word tmp;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word *a;
if(c!=7) C_bad_argc_2(c,7,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr7,(void*)f_34856,7,t0,t1,t2,t3,t4,t5,t6);}
t7=(C_word)C_i_foreign_flonum_argumentp(t2);
t8=(C_word)C_i_foreign_flonum_argumentp(t3);
t9=(C_word)C_i_foreign_flonum_argumentp(t4);
t10=(C_word)C_i_foreign_flonum_argumentp(t5);
t11=(C_word)C_i_foreign_flonum_argumentp(t6);
t12=t1;
((C_proc2)(void*)(*((C_word*)t12+1)))(2,t12,(C_word)stub5991(C_SCHEME_UNDEFINED,t7,t8,t9,t10,t11));}

/* mp:note in k30217 in k26697 in k26694 in k26691 in k26688 in k26263 in k26260 in k26257 in k26254 in k26251 in k25668 in k25665 in k25142 in k25139 in k25136 in k25133 in k25130 in k25127 in k25124 in k25121 in k25118 in k25115 in k25112 in k25109 in k25106 in k25103 in k25100 in k25097 in k25094 in k25091 in k25088 in k25085 in k25082 in k24943 in k24940 in k24937 in k24934 in k24878 in k24875 in k24872 in k24869 in k24866 in k24863 in k24860 in k24857 in k23555 in k23486 in k23293 in k23290 in k23185 in k23134 in k11783 in k10718 in k10715 in k7274 in k7271 in k6978 in k6975 in k6971 in k6680 in k6677 in k6674 in k6671 */
static void C_ccall f_34823(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4,C_word t5,C_word t6){
C_word tmp;
C_word t7;
C_word ab[3],*a=ab;
if(c!=7) C_bad_argc_2(c,7,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr7,(void*)f_34823,7,t0,t1,t2,t3,t4,t5,t6);}
t7=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_34828,a[2]=((C_word)li530),tmp=(C_word)a,a+=3,tmp);
((C_proc7)(void*)(*((C_word*)t7+1)))(7,t7,t1,t2,t3,t4,t5,t6);}

/* f_34828 in mp:note in k30217 in k26697 in k26694 in k26691 in k26688 in k26263 in k26260 in k26257 in k26254 in k26251 in k25668 in k25665 in k25142 in k25139 in k25136 in k25133 in k25130 in k25127 in k25124 in k25121 in k25118 in k25115 in k25112 in k25109 in k25106 in k25103 in k25100 in k25097 in k25094 in k25091 in k25088 in k25085 in k25082 in k24943 in k24940 in k24937 in k24934 in k24878 in k24875 in k24872 in k24869 in k24866 in k24863 in k24860 in k24857 in k23555 in k23486 in k23293 in k23290 in k23185 in k23134 in k11783 in k10718 in k10715 in k7274 in k7271 in k6978 in k6975 in k6971 in k6680 in k6677 in k6674 in k6671 */
static void C_ccall f_34828(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4,C_word t5,C_word t6){
C_word tmp;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word *a;
if(c!=7) C_bad_argc_2(c,7,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr7,(void*)f_34828,7,t0,t1,t2,t3,t4,t5,t6);}
t7=(C_word)C_i_foreign_flonum_argumentp(t2);
t8=(C_word)C_i_foreign_flonum_argumentp(t3);
t9=(C_word)C_i_foreign_flonum_argumentp(t4);
t10=(C_word)C_i_foreign_flonum_argumentp(t5);
t11=(C_word)C_i_foreign_flonum_argumentp(t6);
t12=t1;
((C_proc2)(void*)(*((C_word*)t12+1)))(2,t12,(C_word)stub5974(C_SCHEME_UNDEFINED,t7,t8,t9,t10,t11));}

/* mm:num-set! in k30217 in k26697 in k26694 in k26691 in k26688 in k26263 in k26260 in k26257 in k26254 in k26251 in k25668 in k25665 in k25142 in k25139 in k25136 in k25133 in k25130 in k25127 in k25124 in k25121 in k25118 in k25115 in k25112 in k25109 in k25106 in k25103 in k25100 in k25097 in k25094 in k25091 in k25088 in k25085 in k25082 in k24943 in k24940 in k24937 in k24934 in k24878 in k24875 in k24872 in k24869 in k24866 in k24863 in k24860 in k24857 in k23555 in k23486 in k23293 in k23290 in k23185 in k23134 in k11783 in k10718 in k10715 in k7274 in k7271 in k6978 in k6975 in k6971 in k6680 in k6677 in k6674 in k6671 */
static void C_ccall f_34800(C_word c,C_word t0,C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word ab[7],*a=ab;
if(c!=4) C_bad_argc_2(c,4,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr4,(void*)f_34800,4,t0,t1,t2,t3);}
t4=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_34804,a[2]=t3,a[3]=t1,tmp=(C_word)a,a+=4,tmp);
t5=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_34805,a[2]=((C_word)li528),tmp=(C_word)a,a+=3,tmp);
((C_proc5)(void*)(*((C_word*)t5+1)))(5,t5,t4,t2,C_fix(1),t3);}

/* f_34805 in mm:num-set! in k30217 in k26697 in k26694 in k26691 in k26688 in k26263 in k26260 in k26257 in k26254 in k26251 in k25668 in k25665 in k25142 in k25139 in k25136 in k25133 in k25130 in k25127 in k25124 in k25121 in k25118 in k25115 in k25112 in k25109 in k25106 in k25103 in k25100 in k25097 in k25094 in k25091 in k25088 in k25085 in k25082 in k24943 in k24940 in k24937 in k24934 in k24878 in k24875 in k24872 in k24869 in k24866 in k24863 in k24860 in k24857 in k23555 in k23486 in k23293 in k23290 in k23185 in k23134 in k11783 in k10718 in k10715 in k7274 in k7271 in k6978 in k6975 in k6971 in k6680 in k6677 in k6674 in k6671 */
static void C_ccall f_34805(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4){
C_word tmp;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word *a;
if(c!=5) C_bad_argc_2(c,5,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr5,(void*)f_34805,5,t0,t1,t2,t3,t4);}
t5=(C_truep(t2)?(C_word)C_i_foreign_pointer_argumentp(t2):C_SCHEME_FALSE);
t6=(C_word)C_i_foreign_fixnum_argumentp(t3);
t7=(C_word)C_i_foreign_fixnum_argumentp(t4);
t8=t1;
((C_proc2)(void*)(*((C_word*)t8+1)))(2,t8,(C_word)stub5956(C_SCHEME_UNDEFINED,t5,t6,t7));}

/* k34802 in mm:num-set! in k30217 in k26697 in k26694 in k26691 in k26688 in k26263 in k26260 in k26257 in k26254 in k26251 in k25668 in k25665 in k25142 in k25139 in k25136 in k25133 in k25130 in k25127 in k25124 in k25121 in k25118 in k25115 in k25112 in k25109 in k25106 in k25103 in k25100 in k25097 in k25094 in k25091 in k25088 in k25085 in k25082 in k24943 in k24940 in k24937 in k24934 in k24878 in k24875 in k24872 in k24869 in k24866 in k24863 in k24860 in k24857 in k23555 in k23486 in k23293 in k23290 in k23185 in k23134 in k11783 in k10718 in k10715 in k7274 in k7271 in k6978 in k6975 in k6971 in k6680 in k6677 in k6674 in k6671 */
static void C_ccall f_34804(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
t2=((C_word*)t0)[3];
((C_proc2)(void*)(*((C_word*)t2+1)))(2,t2,((C_word*)t0)[2]);}

/* mm:num in k30217 in k26697 in k26694 in k26691 in k26688 in k26263 in k26260 in k26257 in k26254 in k26251 in k25668 in k25665 in k25142 in k25139 in k25136 in k25133 in k25130 in k25127 in k25124 in k25121 in k25118 in k25115 in k25112 in k25109 in k25106 in k25103 in k25100 in k25097 in k25094 in k25091 in k25088 in k25085 in k25082 in k24943 in k24940 in k24937 in k24934 in k24878 in k24875 in k24872 in k24869 in k24866 in k24863 in k24860 in k24857 in k23555 in k23486 in k23293 in k23290 in k23185 in k23134 in k11783 in k10718 in k10715 in k7274 in k7271 in k6978 in k6975 in k6971 in k6680 in k6677 in k6674 in k6671 */
static void C_ccall f_34781(C_word c,C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word ab[3],*a=ab;
if(c!=3) C_bad_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr3,(void*)f_34781,3,t0,t1,t2);}
t3=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_34786,a[2]=((C_word)li526),tmp=(C_word)a,a+=3,tmp);
((C_proc4)(void*)(*((C_word*)t3+1)))(4,t3,t1,t2,C_fix(1));}

/* f_34786 in mm:num in k30217 in k26697 in k26694 in k26691 in k26688 in k26263 in k26260 in k26257 in k26254 in k26251 in k25668 in k25665 in k25142 in k25139 in k25136 in k25133 in k25130 in k25127 in k25124 in k25121 in k25118 in k25115 in k25112 in k25109 in k25106 in k25103 in k25100 in k25097 in k25094 in k25091 in k25088 in k25085 in k25082 in k24943 in k24940 in k24937 in k24934 in k24878 in k24875 in k24872 in k24869 in k24866 in k24863 in k24860 in k24857 in k23555 in k23486 in k23293 in k23290 in k23185 in k23134 in k11783 in k10718 in k10715 in k7274 in k7271 in k6978 in k6975 in k6971 in k6680 in k6677 in k6674 in k6671 */
static void C_ccall f_34786(C_word c,C_word t0,C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word t6;
C_word *a;
if(c!=4) C_bad_argc_2(c,4,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr4,(void*)f_34786,4,t0,t1,t2,t3);}
t4=(C_truep(t2)?(C_word)C_i_foreign_pointer_argumentp(t2):C_SCHEME_FALSE);
t5=(C_word)C_i_foreign_fixnum_argumentp(t3);
t6=t1;
((C_proc2)(void*)(*((C_word*)t6+1)))(2,t6,(C_word)stub5945(C_SCHEME_UNDEFINED,t4,t5));}

/* mm:val-set! in k30217 in k26697 in k26694 in k26691 in k26688 in k26263 in k26260 in k26257 in k26254 in k26251 in k25668 in k25665 in k25142 in k25139 in k25136 in k25133 in k25130 in k25127 in k25124 in k25121 in k25118 in k25115 in k25112 in k25109 in k25106 in k25103 in k25100 in k25097 in k25094 in k25091 in k25088 in k25085 in k25082 in k24943 in k24940 in k24937 in k24934 in k24878 in k24875 in k24872 in k24869 in k24866 in k24863 in k24860 in k24857 in k23555 in k23486 in k23293 in k23290 in k23185 in k23134 in k11783 in k10718 in k10715 in k7274 in k7271 in k6978 in k6975 in k6971 in k6680 in k6677 in k6674 in k6671 */
static void C_ccall f_34726(C_word c,C_word t0,C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word t6;
C_word ab[9],*a=ab;
if(c!=4) C_bad_argc_2(c,4,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr4,(void*)f_34726,4,t0,t1,t2,t3);}
t4=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_34730,a[2]=t3,a[3]=t1,tmp=(C_word)a,a+=4,tmp);
t5=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_34733,a[2]=t3,a[3]=t2,a[4]=t4,tmp=(C_word)a,a+=5,tmp);
C_trace("ChickenBridge.scm: 382  mm:ctrl?");
t6=C_retrieve(lf[742]);
((C_proc3)C_retrieve_proc(t6))(3,t6,t5,t2);}

/* k34731 in mm:val-set! in k30217 in k26697 in k26694 in k26691 in k26688 in k26263 in k26260 in k26257 in k26254 in k26251 in k25668 in k25665 in k25142 in k25139 in k25136 in k25133 in k25130 in k25127 in k25124 in k25121 in k25118 in k25115 in k25112 in k25109 in k25106 in k25103 in k25100 in k25097 in k25094 in k25091 in k25088 in k25085 in k25082 in k24943 in k24940 in k24937 in k24934 in k24878 in k24875 in k24872 in k24869 in k24866 in k24863 in k24860 in k24857 in k23555 in k23486 in k23293 in k23290 in k23185 in k23134 in k11783 in k10718 in k10715 in k7274 in k7271 in k6978 in k6975 in k6971 in k6680 in k6677 in k6674 in k6671 */
static void C_ccall f_34733(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[5],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_34733,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_34736,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],tmp=(C_word)a,a+=5,tmp);
if(C_truep(t1)){
t3=t2;
f_34736(2,t3,t1);}
else{
C_trace("ChickenBridge.scm: 382  mm:touch?");
t3=C_retrieve(lf[739]);
((C_proc3)C_retrieve_proc(t3))(3,t3,t2,((C_word*)t0)[3]);}}

/* k34734 in k34731 in mm:val-set! in k30217 in k26697 in k26694 in k26691 in k26688 in k26263 in k26260 in k26257 in k26254 in k26251 in k25668 in k25665 in k25142 in k25139 in k25136 in k25133 in k25130 in k25127 in k25124 in k25121 in k25118 in k25115 in k25112 in k25109 in k25106 in k25103 in k25100 in k25097 in k25094 in k25091 in k25088 in k25085 in k25082 in k24943 in k24940 in k24937 in k24934 in k24878 in k24875 in k24872 in k24869 in k24866 in k24863 in k24860 in k24857 in k23555 in k23486 in k23293 in k23290 in k23185 in k23134 in k11783 in k10718 in k10715 in k7274 in k7271 in k6978 in k6975 in k6971 in k6680 in k6677 in k6674 in k6671 */
static void C_ccall f_34736(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word ab[6],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_34736,2,t0,t1);}
if(C_truep(t1)){
t2=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_34740,a[2]=((C_word)li523),tmp=(C_word)a,a+=3,tmp);
((C_proc5)(void*)(*((C_word*)t2+1)))(5,t2,((C_word*)t0)[4],((C_word*)t0)[3],C_fix(2),((C_word*)t0)[2]);}
else{
t2=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_34760,a[2]=((C_word)li524),tmp=(C_word)a,a+=3,tmp);
((C_proc5)(void*)(*((C_word*)t2+1)))(5,t2,((C_word*)t0)[4],((C_word*)t0)[3],C_fix(1),C_retrieve(lf[760]));}}

/* f_34760 in k34734 in k34731 in mm:val-set! in k30217 in k26697 in k26694 in k26691 in k26688 in k26263 in k26260 in k26257 in k26254 in k26251 in k25668 in k25665 in k25142 in k25139 in k25136 in k25133 in k25130 in k25127 in k25124 in k25121 in k25118 in k25115 in k25112 in k25109 in k25106 in k25103 in k25100 in k25097 in k25094 in k25091 in k25088 in k25085 in k25082 in k24943 in k24940 in k24937 in k24934 in k24878 in k24875 in k24872 in k24869 in k24866 in k24863 in k24860 in k24857 in k23555 in k23486 in k23293 in k23290 in k23185 in k23134 in k11783 in k10718 in k10715 in k7274 in k7271 in k6978 in k6975 in k6971 in k6680 in k6677 in k6674 in k6671 */
static void C_ccall f_34760(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4){
C_word tmp;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word *a;
if(c!=5) C_bad_argc_2(c,5,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr5,(void*)f_34760,5,t0,t1,t2,t3,t4);}
t5=(C_truep(t2)?(C_word)C_i_foreign_pointer_argumentp(t2):C_SCHEME_FALSE);
t6=(C_word)C_i_foreign_fixnum_argumentp(t3);
t7=(C_word)C_i_foreign_fixnum_argumentp(t4);
t8=t1;
((C_proc2)(void*)(*((C_word*)t8+1)))(2,t8,(C_word)stub5934(C_SCHEME_UNDEFINED,t5,t6,t7));}

/* f_34740 in k34734 in k34731 in mm:val-set! in k30217 in k26697 in k26694 in k26691 in k26688 in k26263 in k26260 in k26257 in k26254 in k26251 in k25668 in k25665 in k25142 in k25139 in k25136 in k25133 in k25130 in k25127 in k25124 in k25121 in k25118 in k25115 in k25112 in k25109 in k25106 in k25103 in k25100 in k25097 in k25094 in k25091 in k25088 in k25085 in k25082 in k24943 in k24940 in k24937 in k24934 in k24878 in k24875 in k24872 in k24869 in k24866 in k24863 in k24860 in k24857 in k23555 in k23486 in k23293 in k23290 in k23185 in k23134 in k11783 in k10718 in k10715 in k7274 in k7271 in k6978 in k6975 in k6971 in k6680 in k6677 in k6674 in k6671 */
static void C_ccall f_34740(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4){
C_word tmp;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word *a;
if(c!=5) C_bad_argc_2(c,5,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr5,(void*)f_34740,5,t0,t1,t2,t3,t4);}
t5=(C_truep(t2)?(C_word)C_i_foreign_pointer_argumentp(t2):C_SCHEME_FALSE);
t6=(C_word)C_i_foreign_fixnum_argumentp(t3);
t7=(C_word)C_i_foreign_fixnum_argumentp(t4);
t8=t1;
((C_proc2)(void*)(*((C_word*)t8+1)))(2,t8,(C_word)stub5924(C_SCHEME_UNDEFINED,t5,t6,t7));}

/* k34728 in mm:val-set! in k30217 in k26697 in k26694 in k26691 in k26688 in k26263 in k26260 in k26257 in k26254 in k26251 in k25668 in k25665 in k25142 in k25139 in k25136 in k25133 in k25130 in k25127 in k25124 in k25121 in k25118 in k25115 in k25112 in k25109 in k25106 in k25103 in k25100 in k25097 in k25094 in k25091 in k25088 in k25085 in k25082 in k24943 in k24940 in k24937 in k24934 in k24878 in k24875 in k24872 in k24869 in k24866 in k24863 in k24860 in k24857 in k23555 in k23486 in k23293 in k23290 in k23185 in k23134 in k11783 in k10718 in k10715 in k7274 in k7271 in k6978 in k6975 in k6971 in k6680 in k6677 in k6674 in k6671 */
static void C_ccall f_34730(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
t2=((C_word*)t0)[3];
((C_proc2)(void*)(*((C_word*)t2+1)))(2,t2,((C_word*)t0)[2]);}

/* mm:val in k30217 in k26697 in k26694 in k26691 in k26688 in k26263 in k26260 in k26257 in k26254 in k26251 in k25668 in k25665 in k25142 in k25139 in k25136 in k25133 in k25130 in k25127 in k25124 in k25121 in k25118 in k25115 in k25112 in k25109 in k25106 in k25103 in k25100 in k25097 in k25094 in k25091 in k25088 in k25085 in k25082 in k24943 in k24940 in k24937 in k24934 in k24878 in k24875 in k24872 in k24869 in k24866 in k24863 in k24860 in k24857 in k23555 in k23486 in k23293 in k23290 in k23185 in k23134 in k11783 in k10718 in k10715 in k7274 in k7271 in k6978 in k6975 in k6971 in k6680 in k6677 in k6674 in k6671 */
static void C_ccall f_34679(C_word c,C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word ab[4],*a=ab;
if(c!=3) C_bad_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr3,(void*)f_34679,3,t0,t1,t2);}
t3=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_34686,a[2]=t2,a[3]=t1,tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 382  mm:ctrl?");
t4=C_retrieve(lf[742]);
((C_proc3)C_retrieve_proc(t4))(3,t4,t3,t2);}

/* k34684 in mm:val in k30217 in k26697 in k26694 in k26691 in k26688 in k26263 in k26260 in k26257 in k26254 in k26251 in k25668 in k25665 in k25142 in k25139 in k25136 in k25133 in k25130 in k25127 in k25124 in k25121 in k25118 in k25115 in k25112 in k25109 in k25106 in k25103 in k25100 in k25097 in k25094 in k25091 in k25088 in k25085 in k25082 in k24943 in k24940 in k24937 in k24934 in k24878 in k24875 in k24872 in k24869 in k24866 in k24863 in k24860 in k24857 in k23555 in k23486 in k23293 in k23290 in k23185 in k23134 in k11783 in k10718 in k10715 in k7274 in k7271 in k6978 in k6975 in k6971 in k6680 in k6677 in k6674 in k6671 */
static void C_ccall f_34686(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[4],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_34686,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_34689,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],tmp=(C_word)a,a+=4,tmp);
if(C_truep(t1)){
t3=t2;
f_34689(2,t3,t1);}
else{
C_trace("ChickenBridge.scm: 382  mm:touch?");
t3=C_retrieve(lf[739]);
((C_proc3)C_retrieve_proc(t3))(3,t3,t2,((C_word*)t0)[2]);}}

/* k34687 in k34684 in mm:val in k30217 in k26697 in k26694 in k26691 in k26688 in k26263 in k26260 in k26257 in k26254 in k26251 in k25668 in k25665 in k25142 in k25139 in k25136 in k25133 in k25130 in k25127 in k25124 in k25121 in k25118 in k25115 in k25112 in k25109 in k25106 in k25103 in k25100 in k25097 in k25094 in k25091 in k25088 in k25085 in k25082 in k24943 in k24940 in k24937 in k24934 in k24878 in k24875 in k24872 in k24869 in k24866 in k24863 in k24860 in k24857 in k23555 in k23486 in k23293 in k23290 in k23185 in k23134 in k11783 in k10718 in k10715 in k7274 in k7271 in k6978 in k6975 in k6971 in k6680 in k6677 in k6674 in k6671 */
static void C_ccall f_34689(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word ab[6],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_34689,2,t0,t1);}
if(C_truep(t1)){
t2=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_34693,a[2]=((C_word)li520),tmp=(C_word)a,a+=3,tmp);
((C_proc4)(void*)(*((C_word*)t2+1)))(4,t2,((C_word*)t0)[3],((C_word*)t0)[2],C_fix(2));}
else{
t2=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_34709,a[2]=((C_word)li521),tmp=(C_word)a,a+=3,tmp);
((C_proc4)(void*)(*((C_word*)t2+1)))(4,t2,((C_word*)t0)[3],((C_word*)t0)[2],C_fix(1));}}

/* f_34709 in k34687 in k34684 in mm:val in k30217 in k26697 in k26694 in k26691 in k26688 in k26263 in k26260 in k26257 in k26254 in k26251 in k25668 in k25665 in k25142 in k25139 in k25136 in k25133 in k25130 in k25127 in k25124 in k25121 in k25118 in k25115 in k25112 in k25109 in k25106 in k25103 in k25100 in k25097 in k25094 in k25091 in k25088 in k25085 in k25082 in k24943 in k24940 in k24937 in k24934 in k24878 in k24875 in k24872 in k24869 in k24866 in k24863 in k24860 in k24857 in k23555 in k23486 in k23293 in k23290 in k23185 in k23134 in k11783 in k10718 in k10715 in k7274 in k7271 in k6978 in k6975 in k6971 in k6680 in k6677 in k6674 in k6671 */
static void C_ccall f_34709(C_word c,C_word t0,C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word t6;
C_word *a;
if(c!=4) C_bad_argc_2(c,4,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr4,(void*)f_34709,4,t0,t1,t2,t3);}
t4=(C_truep(t2)?(C_word)C_i_foreign_pointer_argumentp(t2):C_SCHEME_FALSE);
t5=(C_word)C_i_foreign_fixnum_argumentp(t3);
t6=t1;
((C_proc2)(void*)(*((C_word*)t6+1)))(2,t6,(C_word)stub5911(C_SCHEME_UNDEFINED,t4,t5));}

/* f_34693 in k34687 in k34684 in mm:val in k30217 in k26697 in k26694 in k26691 in k26688 in k26263 in k26260 in k26257 in k26254 in k26251 in k25668 in k25665 in k25142 in k25139 in k25136 in k25133 in k25130 in k25127 in k25124 in k25121 in k25118 in k25115 in k25112 in k25109 in k25106 in k25103 in k25100 in k25097 in k25094 in k25091 in k25088 in k25085 in k25082 in k24943 in k24940 in k24937 in k24934 in k24878 in k24875 in k24872 in k24869 in k24866 in k24863 in k24860 in k24857 in k23555 in k23486 in k23293 in k23290 in k23185 in k23134 in k11783 in k10718 in k10715 in k7274 in k7271 in k6978 in k6975 in k6971 in k6680 in k6677 in k6674 in k6671 */
static void C_ccall f_34693(C_word c,C_word t0,C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word t6;
C_word *a;
if(c!=4) C_bad_argc_2(c,4,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr4,(void*)f_34693,4,t0,t1,t2,t3);}
t4=(C_truep(t2)?(C_word)C_i_foreign_pointer_argumentp(t2):C_SCHEME_FALSE);
t5=(C_word)C_i_foreign_fixnum_argumentp(t3);
t6=t1;
((C_proc2)(void*)(*((C_word*)t6+1)))(2,t6,(C_word)stub5903(C_SCHEME_UNDEFINED,t4,t5));}

/* mm:vel-set! in k30217 in k26697 in k26694 in k26691 in k26688 in k26263 in k26260 in k26257 in k26254 in k26251 in k25668 in k25665 in k25142 in k25139 in k25136 in k25133 in k25130 in k25127 in k25124 in k25121 in k25118 in k25115 in k25112 in k25109 in k25106 in k25103 in k25100 in k25097 in k25094 in k25091 in k25088 in k25085 in k25082 in k24943 in k24940 in k24937 in k24934 in k24878 in k24875 in k24872 in k24869 in k24866 in k24863 in k24860 in k24857 in k23555 in k23486 in k23293 in k23290 in k23185 in k23134 in k11783 in k10718 in k10715 in k7274 in k7271 in k6978 in k6975 in k6971 in k6680 in k6677 in k6674 in k6671 */
static void C_ccall f_34656(C_word c,C_word t0,C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word ab[7],*a=ab;
if(c!=4) C_bad_argc_2(c,4,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr4,(void*)f_34656,4,t0,t1,t2,t3);}
t4=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_34660,a[2]=t3,a[3]=t1,tmp=(C_word)a,a+=4,tmp);
t5=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_34661,a[2]=((C_word)li518),tmp=(C_word)a,a+=3,tmp);
((C_proc5)(void*)(*((C_word*)t5+1)))(5,t5,t4,t2,C_fix(2),t3);}

/* f_34661 in mm:vel-set! in k30217 in k26697 in k26694 in k26691 in k26688 in k26263 in k26260 in k26257 in k26254 in k26251 in k25668 in k25665 in k25142 in k25139 in k25136 in k25133 in k25130 in k25127 in k25124 in k25121 in k25118 in k25115 in k25112 in k25109 in k25106 in k25103 in k25100 in k25097 in k25094 in k25091 in k25088 in k25085 in k25082 in k24943 in k24940 in k24937 in k24934 in k24878 in k24875 in k24872 in k24869 in k24866 in k24863 in k24860 in k24857 in k23555 in k23486 in k23293 in k23290 in k23185 in k23134 in k11783 in k10718 in k10715 in k7274 in k7271 in k6978 in k6975 in k6971 in k6680 in k6677 in k6674 in k6671 */
static void C_ccall f_34661(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4){
C_word tmp;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word *a;
if(c!=5) C_bad_argc_2(c,5,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr5,(void*)f_34661,5,t0,t1,t2,t3,t4);}
t5=(C_truep(t2)?(C_word)C_i_foreign_pointer_argumentp(t2):C_SCHEME_FALSE);
t6=(C_word)C_i_foreign_fixnum_argumentp(t3);
t7=(C_word)C_i_foreign_fixnum_argumentp(t4);
t8=t1;
((C_proc2)(void*)(*((C_word*)t8+1)))(2,t8,(C_word)stub5890(C_SCHEME_UNDEFINED,t5,t6,t7));}

/* k34658 in mm:vel-set! in k30217 in k26697 in k26694 in k26691 in k26688 in k26263 in k26260 in k26257 in k26254 in k26251 in k25668 in k25665 in k25142 in k25139 in k25136 in k25133 in k25130 in k25127 in k25124 in k25121 in k25118 in k25115 in k25112 in k25109 in k25106 in k25103 in k25100 in k25097 in k25094 in k25091 in k25088 in k25085 in k25082 in k24943 in k24940 in k24937 in k24934 in k24878 in k24875 in k24872 in k24869 in k24866 in k24863 in k24860 in k24857 in k23555 in k23486 in k23293 in k23290 in k23185 in k23134 in k11783 in k10718 in k10715 in k7274 in k7271 in k6978 in k6975 in k6971 in k6680 in k6677 in k6674 in k6671 */
static void C_ccall f_34660(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
t2=((C_word*)t0)[3];
((C_proc2)(void*)(*((C_word*)t2+1)))(2,t2,((C_word*)t0)[2]);}

/* mm:vel in k30217 in k26697 in k26694 in k26691 in k26688 in k26263 in k26260 in k26257 in k26254 in k26251 in k25668 in k25665 in k25142 in k25139 in k25136 in k25133 in k25130 in k25127 in k25124 in k25121 in k25118 in k25115 in k25112 in k25109 in k25106 in k25103 in k25100 in k25097 in k25094 in k25091 in k25088 in k25085 in k25082 in k24943 in k24940 in k24937 in k24934 in k24878 in k24875 in k24872 in k24869 in k24866 in k24863 in k24860 in k24857 in k23555 in k23486 in k23293 in k23290 in k23185 in k23134 in k11783 in k10718 in k10715 in k7274 in k7271 in k6978 in k6975 in k6971 in k6680 in k6677 in k6674 in k6671 */
static void C_ccall f_34637(C_word c,C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word ab[3],*a=ab;
if(c!=3) C_bad_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr3,(void*)f_34637,3,t0,t1,t2);}
t3=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_34642,a[2]=((C_word)li516),tmp=(C_word)a,a+=3,tmp);
((C_proc4)(void*)(*((C_word*)t3+1)))(4,t3,t1,t2,C_fix(2));}

/* f_34642 in mm:vel in k30217 in k26697 in k26694 in k26691 in k26688 in k26263 in k26260 in k26257 in k26254 in k26251 in k25668 in k25665 in k25142 in k25139 in k25136 in k25133 in k25130 in k25127 in k25124 in k25121 in k25118 in k25115 in k25112 in k25109 in k25106 in k25103 in k25100 in k25097 in k25094 in k25091 in k25088 in k25085 in k25082 in k24943 in k24940 in k24937 in k24934 in k24878 in k24875 in k24872 in k24869 in k24866 in k24863 in k24860 in k24857 in k23555 in k23486 in k23293 in k23290 in k23185 in k23134 in k11783 in k10718 in k10715 in k7274 in k7271 in k6978 in k6975 in k6971 in k6680 in k6677 in k6674 in k6671 */
static void C_ccall f_34642(C_word c,C_word t0,C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word t6;
C_word *a;
if(c!=4) C_bad_argc_2(c,4,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr4,(void*)f_34642,4,t0,t1,t2,t3);}
t4=(C_truep(t2)?(C_word)C_i_foreign_pointer_argumentp(t2):C_SCHEME_FALSE);
t5=(C_word)C_i_foreign_fixnum_argumentp(t3);
t6=t1;
((C_proc2)(void*)(*((C_word*)t6+1)))(2,t6,(C_word)stub5879(C_SCHEME_UNDEFINED,t4,t5));}

/* mm:key-set! in k30217 in k26697 in k26694 in k26691 in k26688 in k26263 in k26260 in k26257 in k26254 in k26251 in k25668 in k25665 in k25142 in k25139 in k25136 in k25133 in k25130 in k25127 in k25124 in k25121 in k25118 in k25115 in k25112 in k25109 in k25106 in k25103 in k25100 in k25097 in k25094 in k25091 in k25088 in k25085 in k25082 in k24943 in k24940 in k24937 in k24934 in k24878 in k24875 in k24872 in k24869 in k24866 in k24863 in k24860 in k24857 in k23555 in k23486 in k23293 in k23290 in k23185 in k23134 in k11783 in k10718 in k10715 in k7274 in k7271 in k6978 in k6975 in k6971 in k6680 in k6677 in k6674 in k6671 */
static void C_ccall f_34614(C_word c,C_word t0,C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word ab[7],*a=ab;
if(c!=4) C_bad_argc_2(c,4,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr4,(void*)f_34614,4,t0,t1,t2,t3);}
t4=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_34618,a[2]=t3,a[3]=t1,tmp=(C_word)a,a+=4,tmp);
t5=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_34619,a[2]=((C_word)li514),tmp=(C_word)a,a+=3,tmp);
((C_proc5)(void*)(*((C_word*)t5+1)))(5,t5,t4,t2,C_fix(1),t3);}

/* f_34619 in mm:key-set! in k30217 in k26697 in k26694 in k26691 in k26688 in k26263 in k26260 in k26257 in k26254 in k26251 in k25668 in k25665 in k25142 in k25139 in k25136 in k25133 in k25130 in k25127 in k25124 in k25121 in k25118 in k25115 in k25112 in k25109 in k25106 in k25103 in k25100 in k25097 in k25094 in k25091 in k25088 in k25085 in k25082 in k24943 in k24940 in k24937 in k24934 in k24878 in k24875 in k24872 in k24869 in k24866 in k24863 in k24860 in k24857 in k23555 in k23486 in k23293 in k23290 in k23185 in k23134 in k11783 in k10718 in k10715 in k7274 in k7271 in k6978 in k6975 in k6971 in k6680 in k6677 in k6674 in k6671 */
static void C_ccall f_34619(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4){
C_word tmp;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word *a;
if(c!=5) C_bad_argc_2(c,5,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr5,(void*)f_34619,5,t0,t1,t2,t3,t4);}
t5=(C_truep(t2)?(C_word)C_i_foreign_pointer_argumentp(t2):C_SCHEME_FALSE);
t6=(C_word)C_i_foreign_fixnum_argumentp(t3);
t7=(C_word)C_i_foreign_fixnum_argumentp(t4);
t8=t1;
((C_proc2)(void*)(*((C_word*)t8+1)))(2,t8,(C_word)stub5868(C_SCHEME_UNDEFINED,t5,t6,t7));}

/* k34616 in mm:key-set! in k30217 in k26697 in k26694 in k26691 in k26688 in k26263 in k26260 in k26257 in k26254 in k26251 in k25668 in k25665 in k25142 in k25139 in k25136 in k25133 in k25130 in k25127 in k25124 in k25121 in k25118 in k25115 in k25112 in k25109 in k25106 in k25103 in k25100 in k25097 in k25094 in k25091 in k25088 in k25085 in k25082 in k24943 in k24940 in k24937 in k24934 in k24878 in k24875 in k24872 in k24869 in k24866 in k24863 in k24860 in k24857 in k23555 in k23486 in k23293 in k23290 in k23185 in k23134 in k11783 in k10718 in k10715 in k7274 in k7271 in k6978 in k6975 in k6971 in k6680 in k6677 in k6674 in k6671 */
static void C_ccall f_34618(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
t2=((C_word*)t0)[3];
((C_proc2)(void*)(*((C_word*)t2+1)))(2,t2,((C_word*)t0)[2]);}

/* mm:key in k30217 in k26697 in k26694 in k26691 in k26688 in k26263 in k26260 in k26257 in k26254 in k26251 in k25668 in k25665 in k25142 in k25139 in k25136 in k25133 in k25130 in k25127 in k25124 in k25121 in k25118 in k25115 in k25112 in k25109 in k25106 in k25103 in k25100 in k25097 in k25094 in k25091 in k25088 in k25085 in k25082 in k24943 in k24940 in k24937 in k24934 in k24878 in k24875 in k24872 in k24869 in k24866 in k24863 in k24860 in k24857 in k23555 in k23486 in k23293 in k23290 in k23185 in k23134 in k11783 in k10718 in k10715 in k7274 in k7271 in k6978 in k6975 in k6971 in k6680 in k6677 in k6674 in k6671 */
static void C_ccall f_34595(C_word c,C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word ab[3],*a=ab;
if(c!=3) C_bad_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr3,(void*)f_34595,3,t0,t1,t2);}
t3=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_34600,a[2]=((C_word)li512),tmp=(C_word)a,a+=3,tmp);
((C_proc4)(void*)(*((C_word*)t3+1)))(4,t3,t1,t2,C_fix(1));}

/* f_34600 in mm:key in k30217 in k26697 in k26694 in k26691 in k26688 in k26263 in k26260 in k26257 in k26254 in k26251 in k25668 in k25665 in k25142 in k25139 in k25136 in k25133 in k25130 in k25127 in k25124 in k25121 in k25118 in k25115 in k25112 in k25109 in k25106 in k25103 in k25100 in k25097 in k25094 in k25091 in k25088 in k25085 in k25082 in k24943 in k24940 in k24937 in k24934 in k24878 in k24875 in k24872 in k24869 in k24866 in k24863 in k24860 in k24857 in k23555 in k23486 in k23293 in k23290 in k23185 in k23134 in k11783 in k10718 in k10715 in k7274 in k7271 in k6978 in k6975 in k6971 in k6680 in k6677 in k6674 in k6671 */
static void C_ccall f_34600(C_word c,C_word t0,C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word t6;
C_word *a;
if(c!=4) C_bad_argc_2(c,4,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr4,(void*)f_34600,4,t0,t1,t2,t3);}
t4=(C_truep(t2)?(C_word)C_i_foreign_pointer_argumentp(t2):C_SCHEME_FALSE);
t5=(C_word)C_i_foreign_fixnum_argumentp(t3);
t6=t1;
((C_proc2)(void*)(*((C_word*)t6+1)))(2,t6,(C_word)stub5857(C_SCHEME_UNDEFINED,t4,t5));}

/* mm:chan-set! in k30217 in k26697 in k26694 in k26691 in k26688 in k26263 in k26260 in k26257 in k26254 in k26251 in k25668 in k25665 in k25142 in k25139 in k25136 in k25133 in k25130 in k25127 in k25124 in k25121 in k25118 in k25115 in k25112 in k25109 in k25106 in k25103 in k25100 in k25097 in k25094 in k25091 in k25088 in k25085 in k25082 in k24943 in k24940 in k24937 in k24934 in k24878 in k24875 in k24872 in k24869 in k24866 in k24863 in k24860 in k24857 in k23555 in k23486 in k23293 in k23290 in k23185 in k23134 in k11783 in k10718 in k10715 in k7274 in k7271 in k6978 in k6975 in k6971 in k6680 in k6677 in k6674 in k6671 */
static void C_ccall f_34576(C_word c,C_word t0,C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word ab[7],*a=ab;
if(c!=4) C_bad_argc_2(c,4,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr4,(void*)f_34576,4,t0,t1,t2,t3);}
t4=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_34580,a[2]=t3,a[3]=t1,tmp=(C_word)a,a+=4,tmp);
t5=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_34581,a[2]=((C_word)li510),tmp=(C_word)a,a+=3,tmp);
((C_proc4)(void*)(*((C_word*)t5+1)))(4,t5,t4,t2,t3);}

/* f_34581 in mm:chan-set! in k30217 in k26697 in k26694 in k26691 in k26688 in k26263 in k26260 in k26257 in k26254 in k26251 in k25668 in k25665 in k25142 in k25139 in k25136 in k25133 in k25130 in k25127 in k25124 in k25121 in k25118 in k25115 in k25112 in k25109 in k25106 in k25103 in k25100 in k25097 in k25094 in k25091 in k25088 in k25085 in k25082 in k24943 in k24940 in k24937 in k24934 in k24878 in k24875 in k24872 in k24869 in k24866 in k24863 in k24860 in k24857 in k23555 in k23486 in k23293 in k23290 in k23185 in k23134 in k11783 in k10718 in k10715 in k7274 in k7271 in k6978 in k6975 in k6971 in k6680 in k6677 in k6674 in k6671 */
static void C_ccall f_34581(C_word c,C_word t0,C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word t6;
C_word *a;
if(c!=4) C_bad_argc_2(c,4,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr4,(void*)f_34581,4,t0,t1,t2,t3);}
t4=(C_truep(t2)?(C_word)C_i_foreign_pointer_argumentp(t2):C_SCHEME_FALSE);
t5=(C_word)C_i_foreign_fixnum_argumentp(t3);
t6=t1;
((C_proc2)(void*)(*((C_word*)t6+1)))(2,t6,(C_word)stub5847(C_SCHEME_UNDEFINED,t4,t5));}

/* k34578 in mm:chan-set! in k30217 in k26697 in k26694 in k26691 in k26688 in k26263 in k26260 in k26257 in k26254 in k26251 in k25668 in k25665 in k25142 in k25139 in k25136 in k25133 in k25130 in k25127 in k25124 in k25121 in k25118 in k25115 in k25112 in k25109 in k25106 in k25103 in k25100 in k25097 in k25094 in k25091 in k25088 in k25085 in k25082 in k24943 in k24940 in k24937 in k24934 in k24878 in k24875 in k24872 in k24869 in k24866 in k24863 in k24860 in k24857 in k23555 in k23486 in k23293 in k23290 in k23185 in k23134 in k11783 in k10718 in k10715 in k7274 in k7271 in k6978 in k6975 in k6971 in k6680 in k6677 in k6674 in k6671 */
static void C_ccall f_34580(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
t2=((C_word*)t0)[3];
((C_proc2)(void*)(*((C_word*)t2+1)))(2,t2,((C_word*)t0)[2]);}

/* mm:chan in k30217 in k26697 in k26694 in k26691 in k26688 in k26263 in k26260 in k26257 in k26254 in k26251 in k25668 in k25665 in k25142 in k25139 in k25136 in k25133 in k25130 in k25127 in k25124 in k25121 in k25118 in k25115 in k25112 in k25109 in k25106 in k25103 in k25100 in k25097 in k25094 in k25091 in k25088 in k25085 in k25082 in k24943 in k24940 in k24937 in k24934 in k24878 in k24875 in k24872 in k24869 in k24866 in k24863 in k24860 in k24857 in k23555 in k23486 in k23293 in k23290 in k23185 in k23134 in k11783 in k10718 in k10715 in k7274 in k7271 in k6978 in k6975 in k6971 in k6680 in k6677 in k6674 in k6671 */
static void C_ccall f_34561(C_word c,C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word ab[3],*a=ab;
if(c!=3) C_bad_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr3,(void*)f_34561,3,t0,t1,t2);}
t3=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_34566,a[2]=((C_word)li508),tmp=(C_word)a,a+=3,tmp);
((C_proc3)(void*)(*((C_word*)t3+1)))(3,t3,t1,t2);}

/* f_34566 in mm:chan in k30217 in k26697 in k26694 in k26691 in k26688 in k26263 in k26260 in k26257 in k26254 in k26251 in k25668 in k25665 in k25142 in k25139 in k25136 in k25133 in k25130 in k25127 in k25124 in k25121 in k25118 in k25115 in k25112 in k25109 in k25106 in k25103 in k25100 in k25097 in k25094 in k25091 in k25088 in k25085 in k25082 in k24943 in k24940 in k24937 in k24934 in k24878 in k24875 in k24872 in k24869 in k24866 in k24863 in k24860 in k24857 in k23555 in k23486 in k23293 in k23290 in k23185 in k23134 in k11783 in k10718 in k10715 in k7274 in k7271 in k6978 in k6975 in k6971 in k6680 in k6677 in k6674 in k6671 */
static void C_ccall f_34566(C_word c,C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word *a;
if(c!=3) C_bad_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr3,(void*)f_34566,3,t0,t1,t2);}
t3=(C_truep(t2)?(C_word)C_i_foreign_pointer_argumentp(t2):C_SCHEME_FALSE);
t4=t1;
((C_proc2)(void*)(*((C_word*)t4+1)))(2,t4,(C_word)stub5838(C_SCHEME_UNDEFINED,t3));}

/* mm:time-set! in k30217 in k26697 in k26694 in k26691 in k26688 in k26263 in k26260 in k26257 in k26254 in k26251 in k25668 in k25665 in k25142 in k25139 in k25136 in k25133 in k25130 in k25127 in k25124 in k25121 in k25118 in k25115 in k25112 in k25109 in k25106 in k25103 in k25100 in k25097 in k25094 in k25091 in k25088 in k25085 in k25082 in k24943 in k24940 in k24937 in k24934 in k24878 in k24875 in k24872 in k24869 in k24866 in k24863 in k24860 in k24857 in k23555 in k23486 in k23293 in k23290 in k23185 in k23134 in k11783 in k10718 in k10715 in k7274 in k7271 in k6978 in k6975 in k6971 in k6680 in k6677 in k6674 in k6671 */
static void C_ccall f_34542(C_word c,C_word t0,C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word ab[7],*a=ab;
if(c!=4) C_bad_argc_2(c,4,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr4,(void*)f_34542,4,t0,t1,t2,t3);}
t4=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_34546,a[2]=t3,a[3]=t1,tmp=(C_word)a,a+=4,tmp);
t5=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_34547,a[2]=((C_word)li506),tmp=(C_word)a,a+=3,tmp);
((C_proc4)(void*)(*((C_word*)t5+1)))(4,t5,t4,t2,t3);}

/* f_34547 in mm:time-set! in k30217 in k26697 in k26694 in k26691 in k26688 in k26263 in k26260 in k26257 in k26254 in k26251 in k25668 in k25665 in k25142 in k25139 in k25136 in k25133 in k25130 in k25127 in k25124 in k25121 in k25118 in k25115 in k25112 in k25109 in k25106 in k25103 in k25100 in k25097 in k25094 in k25091 in k25088 in k25085 in k25082 in k24943 in k24940 in k24937 in k24934 in k24878 in k24875 in k24872 in k24869 in k24866 in k24863 in k24860 in k24857 in k23555 in k23486 in k23293 in k23290 in k23185 in k23134 in k11783 in k10718 in k10715 in k7274 in k7271 in k6978 in k6975 in k6971 in k6680 in k6677 in k6674 in k6671 */
static void C_ccall f_34547(C_word c,C_word t0,C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word t6;
C_word *a;
if(c!=4) C_bad_argc_2(c,4,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr4,(void*)f_34547,4,t0,t1,t2,t3);}
t4=(C_truep(t2)?(C_word)C_i_foreign_pointer_argumentp(t2):C_SCHEME_FALSE);
t5=(C_word)C_i_foreign_flonum_argumentp(t3);
t6=t1;
((C_proc2)(void*)(*((C_word*)t6+1)))(2,t6,(C_word)stub5829(C_SCHEME_UNDEFINED,t4,t5));}

/* k34544 in mm:time-set! in k30217 in k26697 in k26694 in k26691 in k26688 in k26263 in k26260 in k26257 in k26254 in k26251 in k25668 in k25665 in k25142 in k25139 in k25136 in k25133 in k25130 in k25127 in k25124 in k25121 in k25118 in k25115 in k25112 in k25109 in k25106 in k25103 in k25100 in k25097 in k25094 in k25091 in k25088 in k25085 in k25082 in k24943 in k24940 in k24937 in k24934 in k24878 in k24875 in k24872 in k24869 in k24866 in k24863 in k24860 in k24857 in k23555 in k23486 in k23293 in k23290 in k23185 in k23134 in k11783 in k10718 in k10715 in k7274 in k7271 in k6978 in k6975 in k6971 in k6680 in k6677 in k6674 in k6671 */
static void C_ccall f_34546(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
t2=((C_word*)t0)[3];
((C_proc2)(void*)(*((C_word*)t2+1)))(2,t2,((C_word*)t0)[2]);}

/* mm:time in k30217 in k26697 in k26694 in k26691 in k26688 in k26263 in k26260 in k26257 in k26254 in k26251 in k25668 in k25665 in k25142 in k25139 in k25136 in k25133 in k25130 in k25127 in k25124 in k25121 in k25118 in k25115 in k25112 in k25109 in k25106 in k25103 in k25100 in k25097 in k25094 in k25091 in k25088 in k25085 in k25082 in k24943 in k24940 in k24937 in k24934 in k24878 in k24875 in k24872 in k24869 in k24866 in k24863 in k24860 in k24857 in k23555 in k23486 in k23293 in k23290 in k23185 in k23134 in k11783 in k10718 in k10715 in k7274 in k7271 in k6978 in k6975 in k6971 in k6680 in k6677 in k6674 in k6671 */
static void C_ccall f_34527(C_word c,C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word ab[3],*a=ab;
if(c!=3) C_bad_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr3,(void*)f_34527,3,t0,t1,t2);}
t3=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_34532,a[2]=((C_word)li504),tmp=(C_word)a,a+=3,tmp);
((C_proc3)(void*)(*((C_word*)t3+1)))(3,t3,t1,t2);}

/* f_34532 in mm:time in k30217 in k26697 in k26694 in k26691 in k26688 in k26263 in k26260 in k26257 in k26254 in k26251 in k25668 in k25665 in k25142 in k25139 in k25136 in k25133 in k25130 in k25127 in k25124 in k25121 in k25118 in k25115 in k25112 in k25109 in k25106 in k25103 in k25100 in k25097 in k25094 in k25091 in k25088 in k25085 in k25082 in k24943 in k24940 in k24937 in k24934 in k24878 in k24875 in k24872 in k24869 in k24866 in k24863 in k24860 in k24857 in k23555 in k23486 in k23293 in k23290 in k23185 in k23134 in k11783 in k10718 in k10715 in k7274 in k7271 in k6978 in k6975 in k6971 in k6680 in k6677 in k6674 in k6671 */
static void C_ccall f_34532(C_word c,C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word t5;
C_word ab[6],*a=ab;
if(c!=3) C_bad_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr3,(void*)f_34532,3,t0,t1,t2);}
t3=(C_word)C_a_i_bytevector(&a,1,C_fix(4));
t4=(C_truep(t2)?(C_word)C_i_foreign_pointer_argumentp(t2):C_SCHEME_FALSE);
t5=t1;
((C_proc2)(void*)(*((C_word*)t5+1)))(2,t5,(C_word)stub5819(t3,t4));}

/* mm:copy in k30217 in k26697 in k26694 in k26691 in k26688 in k26263 in k26260 in k26257 in k26254 in k26251 in k25668 in k25665 in k25142 in k25139 in k25136 in k25133 in k25130 in k25127 in k25124 in k25121 in k25118 in k25115 in k25112 in k25109 in k25106 in k25103 in k25100 in k25097 in k25094 in k25091 in k25088 in k25085 in k25082 in k24943 in k24940 in k24937 in k24934 in k24878 in k24875 in k24872 in k24869 in k24866 in k24863 in k24860 in k24857 in k23555 in k23486 in k23293 in k23290 in k23185 in k23134 in k11783 in k10718 in k10715 in k7274 in k7271 in k6978 in k6975 in k6971 in k6680 in k6677 in k6674 in k6671 */
static void C_ccall f_34512(C_word c,C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word ab[3],*a=ab;
if(c!=3) C_bad_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr3,(void*)f_34512,3,t0,t1,t2);}
t3=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_34517,a[2]=((C_word)li502),tmp=(C_word)a,a+=3,tmp);
((C_proc3)(void*)(*((C_word*)t3+1)))(3,t3,t1,t2);}

/* f_34517 in mm:copy in k30217 in k26697 in k26694 in k26691 in k26688 in k26263 in k26260 in k26257 in k26254 in k26251 in k25668 in k25665 in k25142 in k25139 in k25136 in k25133 in k25130 in k25127 in k25124 in k25121 in k25118 in k25115 in k25112 in k25109 in k25106 in k25103 in k25100 in k25097 in k25094 in k25091 in k25088 in k25085 in k25082 in k24943 in k24940 in k24937 in k24934 in k24878 in k24875 in k24872 in k24869 in k24866 in k24863 in k24860 in k24857 in k23555 in k23486 in k23293 in k23290 in k23185 in k23134 in k11783 in k10718 in k10715 in k7274 in k7271 in k6978 in k6975 in k6971 in k6680 in k6677 in k6674 in k6671 */
static void C_ccall f_34517(C_word c,C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word t5;
C_word ab[5],*a=ab;
if(c!=3) C_bad_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr3,(void*)f_34517,3,t0,t1,t2);}
t3=(C_word)C_a_i_bytevector(&a,1,C_fix(3));
t4=(C_truep(t2)?(C_word)C_i_foreign_pointer_argumentp(t2):C_SCHEME_FALSE);
t5=t1;
((C_proc2)(void*)(*((C_word*)t5+1)))(2,t5,(C_word)stub5811(t3,t4));}

/* mm:free in k30217 in k26697 in k26694 in k26691 in k26688 in k26263 in k26260 in k26257 in k26254 in k26251 in k25668 in k25665 in k25142 in k25139 in k25136 in k25133 in k25130 in k25127 in k25124 in k25121 in k25118 in k25115 in k25112 in k25109 in k25106 in k25103 in k25100 in k25097 in k25094 in k25091 in k25088 in k25085 in k25082 in k24943 in k24940 in k24937 in k24934 in k24878 in k24875 in k24872 in k24869 in k24866 in k24863 in k24860 in k24857 in k23555 in k23486 in k23293 in k23290 in k23185 in k23134 in k11783 in k10718 in k10715 in k7274 in k7271 in k6978 in k6975 in k6971 in k6680 in k6677 in k6674 in k6671 */
static void C_ccall f_34494(C_word c,C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word ab[6],*a=ab;
if(c!=3) C_bad_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr3,(void*)f_34494,3,t0,t1,t2);}
t3=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_34498,a[2]=t1,tmp=(C_word)a,a+=3,tmp);
t4=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_34502,a[2]=((C_word)li500),tmp=(C_word)a,a+=3,tmp);
((C_proc3)(void*)(*((C_word*)t4+1)))(3,t4,t3,t2);}

/* f_34502 in mm:free in k30217 in k26697 in k26694 in k26691 in k26688 in k26263 in k26260 in k26257 in k26254 in k26251 in k25668 in k25665 in k25142 in k25139 in k25136 in k25133 in k25130 in k25127 in k25124 in k25121 in k25118 in k25115 in k25112 in k25109 in k25106 in k25103 in k25100 in k25097 in k25094 in k25091 in k25088 in k25085 in k25082 in k24943 in k24940 in k24937 in k24934 in k24878 in k24875 in k24872 in k24869 in k24866 in k24863 in k24860 in k24857 in k23555 in k23486 in k23293 in k23290 in k23185 in k23134 in k11783 in k10718 in k10715 in k7274 in k7271 in k6978 in k6975 in k6971 in k6680 in k6677 in k6674 in k6671 */
static void C_ccall f_34502(C_word c,C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word *a;
if(c!=3) C_bad_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr3,(void*)f_34502,3,t0,t1,t2);}
t3=(C_truep(t2)?(C_word)C_i_foreign_pointer_argumentp(t2):C_SCHEME_FALSE);
t4=t1;
((C_proc2)(void*)(*((C_word*)t4+1)))(2,t4,(C_word)stub5803(C_SCHEME_UNDEFINED,t3));}

/* k34496 in mm:free in k30217 in k26697 in k26694 in k26691 in k26688 in k26263 in k26260 in k26257 in k26254 in k26251 in k25668 in k25665 in k25142 in k25139 in k25136 in k25133 in k25130 in k25127 in k25124 in k25121 in k25118 in k25115 in k25112 in k25109 in k25106 in k25103 in k25100 in k25097 in k25094 in k25091 in k25088 in k25085 in k25082 in k24943 in k24940 in k24937 in k24934 in k24878 in k24875 in k24872 in k24869 in k24866 in k24863 in k24860 in k24857 in k23555 in k23486 in k23293 in k23290 in k23185 in k23134 in k11783 in k10718 in k10715 in k7274 in k7271 in k6978 in k6975 in k6971 in k6680 in k6677 in k6674 in k6671 */
static void C_ccall f_34498(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 382  values");
C_values(2,0,((C_word*)t0)[2]);}

/* mm:make-bend in k30217 in k26697 in k26694 in k26691 in k26688 in k26263 in k26260 in k26257 in k26254 in k26251 in k25668 in k25665 in k25142 in k25139 in k25136 in k25133 in k25130 in k25127 in k25124 in k25121 in k25118 in k25115 in k25112 in k25109 in k25106 in k25103 in k25100 in k25097 in k25094 in k25091 in k25088 in k25085 in k25082 in k24943 in k24940 in k24937 in k24934 in k24878 in k24875 in k24872 in k24869 in k24866 in k24863 in k24860 in k24857 in k23555 in k23486 in k23293 in k23290 in k23185 in k23134 in k11783 in k10718 in k10715 in k7274 in k7271 in k6978 in k6975 in k6971 in k6680 in k6677 in k6674 in k6671 */
static void C_ccall f_34024(C_word c,C_word t0,C_word t1,...){
C_word tmp;
C_word t2;
va_list v;
C_word *a,c2=c;
C_save_rest(t1,c2,2);
C_check_for_interrupt;
if(!C_demand(c*C_SIZEOF_PAIR+58)){
C_save_and_reclaim((void*)tr2r,(void*)f_34024r,2,t0,t1);}
else{
a=C_alloc((c-2)*3);
t2=C_restore_rest(a,C_rest_count(0));
f_34024r(t0,t1,t2);}}

static void C_ccall f_34024r(C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word t14;
C_word t15;
C_word t16;
C_word t17;
C_word t18;
C_word t19;
C_word t20;
C_word t21;
C_word t22;
C_word t23;
C_word t24;
C_word t25;
C_word t26;
C_word t27;
C_word t28;
C_word *a=C_alloc(58);
t3=C_fix(0);
t4=(*a=C_VECTOR_TYPE|1,a[1]=t3,tmp=(C_word)a,a+=2,tmp);
t5=C_fix(8192);
t6=(*a=C_VECTOR_TYPE|1,a[1]=t5,tmp=(C_word)a,a+=2,tmp);
t7=C_fix(0);
t8=(*a=C_VECTOR_TYPE|1,a[1]=t7,tmp=(C_word)a,a+=2,tmp);
t9=C_SCHEME_FALSE;
t10=(*a=C_VECTOR_TYPE|1,a[1]=t9,tmp=(C_word)a,a+=2,tmp);
t11=C_SCHEME_FALSE;
t12=(*a=C_VECTOR_TYPE|1,a[1]=t11,tmp=(C_word)a,a+=2,tmp);
t13=C_SCHEME_FALSE;
t14=(*a=C_VECTOR_TYPE|1,a[1]=t13,tmp=(C_word)a,a+=2,tmp);
t15=t2;
t16=(*a=C_VECTOR_TYPE|1,a[1]=t15,tmp=(C_word)a,a+=2,tmp);
t17=C_SCHEME_FALSE;
t18=(*a=C_VECTOR_TYPE|1,a[1]=t17,tmp=(C_word)a,a+=2,tmp);
t19=(*a=C_CLOSURE_TYPE|11,a[1]=(C_word)f_34028,a[2]=t14,a[3]=t12,a[4]=t18,a[5]=t10,a[6]=t2,a[7]=t16,a[8]=t6,a[9]=t8,a[10]=t4,a[11]=t1,tmp=(C_word)a,a+=12,tmp);
if(C_truep((C_word)C_i_nullp(((C_word*)t16)[1]))){
t20=t19;
f_34028(t20,C_SCHEME_UNDEFINED);}
else{
t20=(C_word)C_i_car(((C_word*)t16)[1]);
t21=(C_word)C_eqp(t20,lf[730]);
if(C_truep(t21)){
t22=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_34353,a[2]=t2,a[3]=t19,a[4]=t16,a[5]=t18,a[6]=t10,a[7]=t4,tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)t10)[1])){
C_trace("error");
t23=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t23))(4,t23,t22,lf[19],lf[730]);}
else{
t23=t22;
f_34353(2,t23,C_SCHEME_UNDEFINED);}}
else{
t22=(C_word)C_eqp(t20,lf[738]);
if(C_truep(t22)){
t23=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_34388,a[2]=t2,a[3]=t19,a[4]=t16,a[5]=t18,a[6]=t12,a[7]=t6,tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)t12)[1])){
C_trace("error");
t24=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t24))(4,t24,t23,lf[19],lf[738]);}
else{
t24=t23;
f_34388(2,t24,C_SCHEME_UNDEFINED);}}
else{
t23=(C_word)C_eqp(t20,lf[733]);
if(C_truep(t23)){
t24=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_34423,a[2]=t2,a[3]=t19,a[4]=t16,a[5]=t18,a[6]=t14,a[7]=t8,tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)t14)[1])){
C_trace("error");
t25=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t25))(4,t25,t24,lf[19],lf[733]);}
else{
t25=t24;
f_34423(2,t25,C_SCHEME_UNDEFINED);}}
else{
t24=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_34452,a[2]=t19,a[3]=t10,a[4]=t4,a[5]=t16,tmp=(C_word)a,a+=6,tmp);
if(C_truep(((C_word*)t18)[1])){
C_trace("error");
t25=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t25))(4,t25,t24,lf[10],t2);}
else{
t25=t24;
f_34452(2,t25,C_SCHEME_UNDEFINED);}}}}}}

/* k34450 in mm:make-bend in k30217 in k26697 in k26694 in k26691 in k26688 in k26263 in k26260 in k26257 in k26254 in k26251 in k25668 in k25665 in k25142 in k25139 in k25136 in k25133 in k25130 in k25127 in k25124 in k25121 in k25118 in k25115 in k25112 in k25109 in k25106 in k25103 in k25100 in k25097 in k25094 in k25091 in k25088 in k25085 in k25082 in k24943 in k24940 in k24937 in k24934 in k24878 in k24875 in k24872 in k24869 in k24866 in k24863 in k24860 in k24857 in k23555 in k23486 in k23293 in k23290 in k23185 in k23134 in k11783 in k10718 in k10715 in k7274 in k7271 in k6978 in k6975 in k6971 in k6680 in k6677 in k6674 in k6671 */
static void C_ccall f_34452(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_34452,2,t0,t1);}
t2=(C_word)C_i_car(((C_word*)((C_word*)t0)[5])[1]);
t3=C_mutate(((C_word *)((C_word*)t0)[4])+1,t2);
t4=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_34459,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[5],a[4]=((C_word*)t0)[3],tmp=(C_word)a,a+=5,tmp);
t5=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_34467,a[2]=((C_word*)t0)[4],a[3]=t4,tmp=(C_word)a,a+=4,tmp);
C_trace("keyword?");
t6=C_retrieve(lf[13]);
((C_proc3)C_retrieve_proc(t6))(3,t6,t5,((C_word*)((C_word*)t0)[4])[1]);}

/* k34465 in k34450 in mm:make-bend in k30217 in k26697 in k26694 in k26691 in k26688 in k26263 in k26260 in k26257 in k26254 in k26251 in k25668 in k25665 in k25142 in k25139 in k25136 in k25133 in k25130 in k25127 in k25124 in k25121 in k25118 in k25115 in k25112 in k25109 in k25106 in k25103 in k25100 in k25097 in k25094 in k25091 in k25088 in k25085 in k25082 in k24943 in k24940 in k24937 in k24934 in k24878 in k24875 in k24872 in k24869 in k24866 in k24863 in k24860 in k24857 in k23555 in k23486 in k23293 in k23290 in k23185 in k23134 in k11783 in k10718 in k10715 in k7274 in k7271 in k6978 in k6975 in k6971 in k6680 in k6677 in k6674 in k6671 */
static void C_ccall f_34467(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
if(C_truep(t1)){
C_trace("error");
t2=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t2))(4,t2,((C_word*)t0)[3],lf[14],((C_word*)((C_word*)t0)[2])[1]);}
else{
t2=((C_word*)t0)[3];
f_34459(2,t2,C_SCHEME_UNDEFINED);}}

/* k34457 in k34450 in mm:make-bend in k30217 in k26697 in k26694 in k26691 in k26688 in k26263 in k26260 in k26257 in k26254 in k26251 in k25668 in k25665 in k25142 in k25139 in k25136 in k25133 in k25130 in k25127 in k25124 in k25121 in k25118 in k25115 in k25112 in k25109 in k25106 in k25103 in k25100 in k25097 in k25094 in k25091 in k25088 in k25085 in k25082 in k24943 in k24940 in k24937 in k24934 in k24878 in k24875 in k24872 in k24869 in k24866 in k24863 in k24860 in k24857 in k23555 in k23486 in k23293 in k23290 in k23185 in k23134 in k11783 in k10718 in k10715 in k7274 in k7271 in k6978 in k6975 in k6971 in k6680 in k6677 in k6674 in k6671 */
static void C_ccall f_34459(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word *a;
t2=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[3])[1]);
t4=C_mutate(((C_word *)((C_word*)t0)[3])+1,t3);
t5=((C_word*)t0)[2];
f_34028(t5,t4);}

/* k34421 in mm:make-bend in k30217 in k26697 in k26694 in k26691 in k26688 in k26263 in k26260 in k26257 in k26254 in k26251 in k25668 in k25665 in k25142 in k25139 in k25136 in k25133 in k25130 in k25127 in k25124 in k25121 in k25118 in k25115 in k25112 in k25109 in k25106 in k25103 in k25100 in k25097 in k25094 in k25091 in k25088 in k25085 in k25082 in k24943 in k24940 in k24937 in k24934 in k24878 in k24875 in k24872 in k24869 in k24866 in k24863 in k24860 in k24857 in k23555 in k23486 in k23293 in k23290 in k23185 in k23134 in k11783 in k10718 in k10715 in k7274 in k7271 in k6978 in k6975 in k6971 in k6680 in k6677 in k6674 in k6671 */
static void C_ccall f_34423(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_34423,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_34427,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("error");
t4=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[21],((C_word*)t0)[2]);}
else{
t4=t2;
f_34427(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k34425 in k34421 in mm:make-bend in k30217 in k26697 in k26694 in k26691 in k26688 in k26263 in k26260 in k26257 in k26254 in k26251 in k25668 in k25665 in k25142 in k25139 in k25136 in k25133 in k25130 in k25127 in k25124 in k25121 in k25118 in k25115 in k25112 in k25109 in k25106 in k25103 in k25100 in k25097 in k25094 in k25091 in k25088 in k25085 in k25082 in k24943 in k24940 in k24937 in k24934 in k24878 in k24875 in k24872 in k24869 in k24866 in k24863 in k24860 in k24857 in k23555 in k23486 in k23293 in k23290 in k23185 in k23134 in k11783 in k10718 in k10715 in k7274 in k7271 in k6978 in k6975 in k6971 in k6680 in k6677 in k6674 in k6671 */
static void C_ccall f_34427(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_34028(t7,t6);}

/* k34386 in mm:make-bend in k30217 in k26697 in k26694 in k26691 in k26688 in k26263 in k26260 in k26257 in k26254 in k26251 in k25668 in k25665 in k25142 in k25139 in k25136 in k25133 in k25130 in k25127 in k25124 in k25121 in k25118 in k25115 in k25112 in k25109 in k25106 in k25103 in k25100 in k25097 in k25094 in k25091 in k25088 in k25085 in k25082 in k24943 in k24940 in k24937 in k24934 in k24878 in k24875 in k24872 in k24869 in k24866 in k24863 in k24860 in k24857 in k23555 in k23486 in k23293 in k23290 in k23185 in k23134 in k11783 in k10718 in k10715 in k7274 in k7271 in k6978 in k6975 in k6971 in k6680 in k6677 in k6674 in k6671 */
static void C_ccall f_34388(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_34388,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_34392,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("error");
t4=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[21],((C_word*)t0)[2]);}
else{
t4=t2;
f_34392(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k34390 in k34386 in mm:make-bend in k30217 in k26697 in k26694 in k26691 in k26688 in k26263 in k26260 in k26257 in k26254 in k26251 in k25668 in k25665 in k25142 in k25139 in k25136 in k25133 in k25130 in k25127 in k25124 in k25121 in k25118 in k25115 in k25112 in k25109 in k25106 in k25103 in k25100 in k25097 in k25094 in k25091 in k25088 in k25085 in k25082 in k24943 in k24940 in k24937 in k24934 in k24878 in k24875 in k24872 in k24869 in k24866 in k24863 in k24860 in k24857 in k23555 in k23486 in k23293 in k23290 in k23185 in k23134 in k11783 in k10718 in k10715 in k7274 in k7271 in k6978 in k6975 in k6971 in k6680 in k6677 in k6674 in k6671 */
static void C_ccall f_34392(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_34028(t7,t6);}

/* k34351 in mm:make-bend in k30217 in k26697 in k26694 in k26691 in k26688 in k26263 in k26260 in k26257 in k26254 in k26251 in k25668 in k25665 in k25142 in k25139 in k25136 in k25133 in k25130 in k25127 in k25124 in k25121 in k25118 in k25115 in k25112 in k25109 in k25106 in k25103 in k25100 in k25097 in k25094 in k25091 in k25088 in k25085 in k25082 in k24943 in k24940 in k24937 in k24934 in k24878 in k24875 in k24872 in k24869 in k24866 in k24863 in k24860 in k24857 in k23555 in k23486 in k23293 in k23290 in k23185 in k23134 in k11783 in k10718 in k10715 in k7274 in k7271 in k6978 in k6975 in k6971 in k6680 in k6677 in k6674 in k6671 */
static void C_ccall f_34353(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_34353,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_34357,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("error");
t4=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[21],((C_word*)t0)[2]);}
else{
t4=t2;
f_34357(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k34355 in k34351 in mm:make-bend in k30217 in k26697 in k26694 in k26691 in k26688 in k26263 in k26260 in k26257 in k26254 in k26251 in k25668 in k25665 in k25142 in k25139 in k25136 in k25133 in k25130 in k25127 in k25124 in k25121 in k25118 in k25115 in k25112 in k25109 in k25106 in k25103 in k25100 in k25097 in k25094 in k25091 in k25088 in k25085 in k25082 in k24943 in k24940 in k24937 in k24934 in k24878 in k24875 in k24872 in k24869 in k24866 in k24863 in k24860 in k24857 in k23555 in k23486 in k23293 in k23290 in k23185 in k23134 in k11783 in k10718 in k10715 in k7274 in k7271 in k6978 in k6975 in k6971 in k6680 in k6677 in k6674 in k6671 */
static void C_ccall f_34357(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_34028(t7,t6);}

/* k34026 in mm:make-bend in k30217 in k26697 in k26694 in k26691 in k26688 in k26263 in k26260 in k26257 in k26254 in k26251 in k25668 in k25665 in k25142 in k25139 in k25136 in k25133 in k25130 in k25127 in k25124 in k25121 in k25118 in k25115 in k25112 in k25109 in k25106 in k25103 in k25100 in k25097 in k25094 in k25091 in k25088 in k25085 in k25082 in k24943 in k24940 in k24937 in k24934 in k24878 in k24875 in k24872 in k24869 in k24866 in k24863 in k24860 in k24857 in k23555 in k23486 in k23293 in k23290 in k23185 in k23134 in k11783 in k10718 in k10715 in k7274 in k7271 in k6978 in k6975 in k6971 in k6680 in k6677 in k6674 in k6671 */
static void C_fcall f_34028(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word ab[42],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_34028,NULL,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|11,a[1]=(C_word)f_34031,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],a[7]=((C_word*)t0)[7],a[8]=((C_word*)t0)[8],a[9]=((C_word*)t0)[9],a[10]=((C_word*)t0)[10],a[11]=((C_word*)t0)[11],tmp=(C_word)a,a+=12,tmp);
if(C_truep((C_word)C_i_nullp(((C_word*)((C_word*)t0)[7])[1]))){
t3=t2;
f_34031(t3,C_SCHEME_UNDEFINED);}
else{
t3=(C_word)C_i_car(((C_word*)((C_word*)t0)[7])[1]);
t4=(C_word)C_eqp(t3,lf[730]);
if(C_truep(t4)){
t5=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_34218,a[2]=((C_word*)t0)[6],a[3]=t2,a[4]=((C_word*)t0)[7],a[5]=((C_word*)t0)[4],a[6]=((C_word*)t0)[5],a[7]=((C_word*)t0)[10],tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)((C_word*)t0)[5])[1])){
C_trace("error");
t6=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t6))(4,t6,t5,lf[19],lf[730]);}
else{
t6=t5;
f_34218(2,t6,C_SCHEME_UNDEFINED);}}
else{
t5=(C_word)C_eqp(t3,lf[738]);
if(C_truep(t5)){
t6=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_34253,a[2]=((C_word*)t0)[6],a[3]=t2,a[4]=((C_word*)t0)[7],a[5]=((C_word*)t0)[4],a[6]=((C_word*)t0)[3],a[7]=((C_word*)t0)[8],tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)((C_word*)t0)[3])[1])){
C_trace("error");
t7=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t7))(4,t7,t6,lf[19],lf[738]);}
else{
t7=t6;
f_34253(2,t7,C_SCHEME_UNDEFINED);}}
else{
t6=(C_word)C_eqp(t3,lf[733]);
if(C_truep(t6)){
t7=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_34288,a[2]=((C_word*)t0)[6],a[3]=t2,a[4]=((C_word*)t0)[7],a[5]=((C_word*)t0)[4],a[6]=((C_word*)t0)[2],a[7]=((C_word*)t0)[9],tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)((C_word*)t0)[2])[1])){
C_trace("error");
t8=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t8))(4,t8,t7,lf[19],lf[733]);}
else{
t8=t7;
f_34288(2,t8,C_SCHEME_UNDEFINED);}}
else{
t7=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_34317,a[2]=t2,a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[8],a[5]=((C_word*)t0)[7],tmp=(C_word)a,a+=6,tmp);
if(C_truep(((C_word*)((C_word*)t0)[4])[1])){
C_trace("error");
t8=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t8))(4,t8,t7,lf[10],((C_word*)t0)[6]);}
else{
t8=t7;
f_34317(2,t8,C_SCHEME_UNDEFINED);}}}}}}

/* k34315 in k34026 in mm:make-bend in k30217 in k26697 in k26694 in k26691 in k26688 in k26263 in k26260 in k26257 in k26254 in k26251 in k25668 in k25665 in k25142 in k25139 in k25136 in k25133 in k25130 in k25127 in k25124 in k25121 in k25118 in k25115 in k25112 in k25109 in k25106 in k25103 in k25100 in k25097 in k25094 in k25091 in k25088 in k25085 in k25082 in k24943 in k24940 in k24937 in k24934 in k24878 in k24875 in k24872 in k24869 in k24866 in k24863 in k24860 in k24857 in k23555 in k23486 in k23293 in k23290 in k23185 in k23134 in k11783 in k10718 in k10715 in k7274 in k7271 in k6978 in k6975 in k6971 in k6680 in k6677 in k6674 in k6671 */
static void C_ccall f_34317(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_34317,2,t0,t1);}
t2=(C_word)C_i_car(((C_word*)((C_word*)t0)[5])[1]);
t3=C_mutate(((C_word *)((C_word*)t0)[4])+1,t2);
t4=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_34324,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[5],a[4]=((C_word*)t0)[3],tmp=(C_word)a,a+=5,tmp);
t5=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_34332,a[2]=((C_word*)t0)[4],a[3]=t4,tmp=(C_word)a,a+=4,tmp);
C_trace("keyword?");
t6=C_retrieve(lf[13]);
((C_proc3)C_retrieve_proc(t6))(3,t6,t5,((C_word*)((C_word*)t0)[4])[1]);}

/* k34330 in k34315 in k34026 in mm:make-bend in k30217 in k26697 in k26694 in k26691 in k26688 in k26263 in k26260 in k26257 in k26254 in k26251 in k25668 in k25665 in k25142 in k25139 in k25136 in k25133 in k25130 in k25127 in k25124 in k25121 in k25118 in k25115 in k25112 in k25109 in k25106 in k25103 in k25100 in k25097 in k25094 in k25091 in k25088 in k25085 in k25082 in k24943 in k24940 in k24937 in k24934 in k24878 in k24875 in k24872 in k24869 in k24866 in k24863 in k24860 in k24857 in k23555 in k23486 in k23293 in k23290 in k23185 in k23134 in k11783 in k10718 in k10715 in k7274 in k7271 in k6978 in k6975 in k6971 in k6680 in k6677 in k6674 in k6671 */
static void C_ccall f_34332(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
if(C_truep(t1)){
C_trace("error");
t2=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t2))(4,t2,((C_word*)t0)[3],lf[14],((C_word*)((C_word*)t0)[2])[1]);}
else{
t2=((C_word*)t0)[3];
f_34324(2,t2,C_SCHEME_UNDEFINED);}}

/* k34322 in k34315 in k34026 in mm:make-bend in k30217 in k26697 in k26694 in k26691 in k26688 in k26263 in k26260 in k26257 in k26254 in k26251 in k25668 in k25665 in k25142 in k25139 in k25136 in k25133 in k25130 in k25127 in k25124 in k25121 in k25118 in k25115 in k25112 in k25109 in k25106 in k25103 in k25100 in k25097 in k25094 in k25091 in k25088 in k25085 in k25082 in k24943 in k24940 in k24937 in k24934 in k24878 in k24875 in k24872 in k24869 in k24866 in k24863 in k24860 in k24857 in k23555 in k23486 in k23293 in k23290 in k23185 in k23134 in k11783 in k10718 in k10715 in k7274 in k7271 in k6978 in k6975 in k6971 in k6680 in k6677 in k6674 in k6671 */
static void C_ccall f_34324(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word *a;
t2=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[3])[1]);
t4=C_mutate(((C_word *)((C_word*)t0)[3])+1,t3);
t5=((C_word*)t0)[2];
f_34031(t5,t4);}

/* k34286 in k34026 in mm:make-bend in k30217 in k26697 in k26694 in k26691 in k26688 in k26263 in k26260 in k26257 in k26254 in k26251 in k25668 in k25665 in k25142 in k25139 in k25136 in k25133 in k25130 in k25127 in k25124 in k25121 in k25118 in k25115 in k25112 in k25109 in k25106 in k25103 in k25100 in k25097 in k25094 in k25091 in k25088 in k25085 in k25082 in k24943 in k24940 in k24937 in k24934 in k24878 in k24875 in k24872 in k24869 in k24866 in k24863 in k24860 in k24857 in k23555 in k23486 in k23293 in k23290 in k23185 in k23134 in k11783 in k10718 in k10715 in k7274 in k7271 in k6978 in k6975 in k6971 in k6680 in k6677 in k6674 in k6671 */
static void C_ccall f_34288(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_34288,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_34292,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("error");
t4=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[21],((C_word*)t0)[2]);}
else{
t4=t2;
f_34292(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k34290 in k34286 in k34026 in mm:make-bend in k30217 in k26697 in k26694 in k26691 in k26688 in k26263 in k26260 in k26257 in k26254 in k26251 in k25668 in k25665 in k25142 in k25139 in k25136 in k25133 in k25130 in k25127 in k25124 in k25121 in k25118 in k25115 in k25112 in k25109 in k25106 in k25103 in k25100 in k25097 in k25094 in k25091 in k25088 in k25085 in k25082 in k24943 in k24940 in k24937 in k24934 in k24878 in k24875 in k24872 in k24869 in k24866 in k24863 in k24860 in k24857 in k23555 in k23486 in k23293 in k23290 in k23185 in k23134 in k11783 in k10718 in k10715 in k7274 in k7271 in k6978 in k6975 in k6971 in k6680 in k6677 in k6674 in k6671 */
static void C_ccall f_34292(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_34031(t7,t6);}

/* k34251 in k34026 in mm:make-bend in k30217 in k26697 in k26694 in k26691 in k26688 in k26263 in k26260 in k26257 in k26254 in k26251 in k25668 in k25665 in k25142 in k25139 in k25136 in k25133 in k25130 in k25127 in k25124 in k25121 in k25118 in k25115 in k25112 in k25109 in k25106 in k25103 in k25100 in k25097 in k25094 in k25091 in k25088 in k25085 in k25082 in k24943 in k24940 in k24937 in k24934 in k24878 in k24875 in k24872 in k24869 in k24866 in k24863 in k24860 in k24857 in k23555 in k23486 in k23293 in k23290 in k23185 in k23134 in k11783 in k10718 in k10715 in k7274 in k7271 in k6978 in k6975 in k6971 in k6680 in k6677 in k6674 in k6671 */
static void C_ccall f_34253(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_34253,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_34257,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("error");
t4=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[21],((C_word*)t0)[2]);}
else{
t4=t2;
f_34257(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k34255 in k34251 in k34026 in mm:make-bend in k30217 in k26697 in k26694 in k26691 in k26688 in k26263 in k26260 in k26257 in k26254 in k26251 in k25668 in k25665 in k25142 in k25139 in k25136 in k25133 in k25130 in k25127 in k25124 in k25121 in k25118 in k25115 in k25112 in k25109 in k25106 in k25103 in k25100 in k25097 in k25094 in k25091 in k25088 in k25085 in k25082 in k24943 in k24940 in k24937 in k24934 in k24878 in k24875 in k24872 in k24869 in k24866 in k24863 in k24860 in k24857 in k23555 in k23486 in k23293 in k23290 in k23185 in k23134 in k11783 in k10718 in k10715 in k7274 in k7271 in k6978 in k6975 in k6971 in k6680 in k6677 in k6674 in k6671 */
static void C_ccall f_34257(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_34031(t7,t6);}

/* k34216 in k34026 in mm:make-bend in k30217 in k26697 in k26694 in k26691 in k26688 in k26263 in k26260 in k26257 in k26254 in k26251 in k25668 in k25665 in k25142 in k25139 in k25136 in k25133 in k25130 in k25127 in k25124 in k25121 in k25118 in k25115 in k25112 in k25109 in k25106 in k25103 in k25100 in k25097 in k25094 in k25091 in k25088 in k25085 in k25082 in k24943 in k24940 in k24937 in k24934 in k24878 in k24875 in k24872 in k24869 in k24866 in k24863 in k24860 in k24857 in k23555 in k23486 in k23293 in k23290 in k23185 in k23134 in k11783 in k10718 in k10715 in k7274 in k7271 in k6978 in k6975 in k6971 in k6680 in k6677 in k6674 in k6671 */
static void C_ccall f_34218(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_34218,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_34222,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("error");
t4=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[21],((C_word*)t0)[2]);}
else{
t4=t2;
f_34222(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k34220 in k34216 in k34026 in mm:make-bend in k30217 in k26697 in k26694 in k26691 in k26688 in k26263 in k26260 in k26257 in k26254 in k26251 in k25668 in k25665 in k25142 in k25139 in k25136 in k25133 in k25130 in k25127 in k25124 in k25121 in k25118 in k25115 in k25112 in k25109 in k25106 in k25103 in k25100 in k25097 in k25094 in k25091 in k25088 in k25085 in k25082 in k24943 in k24940 in k24937 in k24934 in k24878 in k24875 in k24872 in k24869 in k24866 in k24863 in k24860 in k24857 in k23555 in k23486 in k23293 in k23290 in k23185 in k23134 in k11783 in k10718 in k10715 in k7274 in k7271 in k6978 in k6975 in k6971 in k6680 in k6677 in k6674 in k6671 */
static void C_ccall f_34222(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_34031(t7,t6);}

/* k34029 in k34026 in mm:make-bend in k30217 in k26697 in k26694 in k26691 in k26688 in k26263 in k26260 in k26257 in k26254 in k26251 in k25668 in k25665 in k25142 in k25139 in k25136 in k25133 in k25130 in k25127 in k25124 in k25121 in k25118 in k25115 in k25112 in k25109 in k25106 in k25103 in k25100 in k25097 in k25094 in k25091 in k25088 in k25085 in k25082 in k24943 in k24940 in k24937 in k24934 in k24878 in k24875 in k24872 in k24869 in k24866 in k24863 in k24860 in k24857 in k23555 in k23486 in k23293 in k23290 in k23185 in k23134 in k11783 in k10718 in k10715 in k7274 in k7271 in k6978 in k6975 in k6971 in k6680 in k6677 in k6674 in k6671 */
static void C_fcall f_34031(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word ab[38],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_34031,NULL,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_34034,a[2]=((C_word*)t0)[6],a[3]=((C_word*)t0)[7],a[4]=((C_word*)t0)[8],a[5]=((C_word*)t0)[9],a[6]=((C_word*)t0)[10],a[7]=((C_word*)t0)[11],tmp=(C_word)a,a+=8,tmp);
if(C_truep((C_word)C_i_nullp(((C_word*)((C_word*)t0)[7])[1]))){
t3=t2;
f_34034(t3,C_SCHEME_UNDEFINED);}
else{
t3=(C_word)C_i_car(((C_word*)((C_word*)t0)[7])[1]);
t4=(C_word)C_eqp(t3,lf[730]);
if(C_truep(t4)){
t5=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_34083,a[2]=((C_word*)t0)[6],a[3]=t2,a[4]=((C_word*)t0)[7],a[5]=((C_word*)t0)[4],a[6]=((C_word*)t0)[5],a[7]=((C_word*)t0)[10],tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)((C_word*)t0)[5])[1])){
C_trace("error");
t6=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t6))(4,t6,t5,lf[19],lf[730]);}
else{
t6=t5;
f_34083(2,t6,C_SCHEME_UNDEFINED);}}
else{
t5=(C_word)C_eqp(t3,lf[738]);
if(C_truep(t5)){
t6=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_34118,a[2]=((C_word*)t0)[6],a[3]=t2,a[4]=((C_word*)t0)[7],a[5]=((C_word*)t0)[4],a[6]=((C_word*)t0)[3],a[7]=((C_word*)t0)[8],tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)((C_word*)t0)[3])[1])){
C_trace("error");
t7=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t7))(4,t7,t6,lf[19],lf[738]);}
else{
t7=t6;
f_34118(2,t7,C_SCHEME_UNDEFINED);}}
else{
t6=(C_word)C_eqp(t3,lf[733]);
if(C_truep(t6)){
t7=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_34153,a[2]=((C_word*)t0)[6],a[3]=t2,a[4]=((C_word*)t0)[7],a[5]=((C_word*)t0)[4],a[6]=((C_word*)t0)[2],a[7]=((C_word*)t0)[9],tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)((C_word*)t0)[2])[1])){
C_trace("error");
t8=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t8))(4,t8,t7,lf[19],lf[733]);}
else{
t8=t7;
f_34153(2,t8,C_SCHEME_UNDEFINED);}}
else{
t7=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_34182,a[2]=t2,a[3]=((C_word*)t0)[2],a[4]=((C_word*)t0)[9],a[5]=((C_word*)t0)[7],tmp=(C_word)a,a+=6,tmp);
if(C_truep(((C_word*)((C_word*)t0)[4])[1])){
C_trace("error");
t8=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t8))(4,t8,t7,lf[10],((C_word*)t0)[6]);}
else{
t8=t7;
f_34182(2,t8,C_SCHEME_UNDEFINED);}}}}}}

/* k34180 in k34029 in k34026 in mm:make-bend in k30217 in k26697 in k26694 in k26691 in k26688 in k26263 in k26260 in k26257 in k26254 in k26251 in k25668 in k25665 in k25142 in k25139 in k25136 in k25133 in k25130 in k25127 in k25124 in k25121 in k25118 in k25115 in k25112 in k25109 in k25106 in k25103 in k25100 in k25097 in k25094 in k25091 in k25088 in k25085 in k25082 in k24943 in k24940 in k24937 in k24934 in k24878 in k24875 in k24872 in k24869 in k24866 in k24863 in k24860 in k24857 in k23555 in k23486 in k23293 in k23290 in k23185 in k23134 in k11783 in k10718 in k10715 in k7274 in k7271 in k6978 in k6975 in k6971 in k6680 in k6677 in k6674 in k6671 */
static void C_ccall f_34182(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_34182,2,t0,t1);}
t2=(C_word)C_i_car(((C_word*)((C_word*)t0)[5])[1]);
t3=C_mutate(((C_word *)((C_word*)t0)[4])+1,t2);
t4=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_34189,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[5],a[4]=((C_word*)t0)[3],tmp=(C_word)a,a+=5,tmp);
t5=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_34197,a[2]=((C_word*)t0)[4],a[3]=t4,tmp=(C_word)a,a+=4,tmp);
C_trace("keyword?");
t6=C_retrieve(lf[13]);
((C_proc3)C_retrieve_proc(t6))(3,t6,t5,((C_word*)((C_word*)t0)[4])[1]);}

/* k34195 in k34180 in k34029 in k34026 in mm:make-bend in k30217 in k26697 in k26694 in k26691 in k26688 in k26263 in k26260 in k26257 in k26254 in k26251 in k25668 in k25665 in k25142 in k25139 in k25136 in k25133 in k25130 in k25127 in k25124 in k25121 in k25118 in k25115 in k25112 in k25109 in k25106 in k25103 in k25100 in k25097 in k25094 in k25091 in k25088 in k25085 in k25082 in k24943 in k24940 in k24937 in k24934 in k24878 in k24875 in k24872 in k24869 in k24866 in k24863 in k24860 in k24857 in k23555 in k23486 in k23293 in k23290 in k23185 in k23134 in k11783 in k10718 in k10715 in k7274 in k7271 in k6978 in k6975 in k6971 in k6680 in k6677 in k6674 in k6671 */
static void C_ccall f_34197(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
if(C_truep(t1)){
C_trace("error");
t2=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t2))(4,t2,((C_word*)t0)[3],lf[14],((C_word*)((C_word*)t0)[2])[1]);}
else{
t2=((C_word*)t0)[3];
f_34189(2,t2,C_SCHEME_UNDEFINED);}}

/* k34187 in k34180 in k34029 in k34026 in mm:make-bend in k30217 in k26697 in k26694 in k26691 in k26688 in k26263 in k26260 in k26257 in k26254 in k26251 in k25668 in k25665 in k25142 in k25139 in k25136 in k25133 in k25130 in k25127 in k25124 in k25121 in k25118 in k25115 in k25112 in k25109 in k25106 in k25103 in k25100 in k25097 in k25094 in k25091 in k25088 in k25085 in k25082 in k24943 in k24940 in k24937 in k24934 in k24878 in k24875 in k24872 in k24869 in k24866 in k24863 in k24860 in k24857 in k23555 in k23486 in k23293 in k23290 in k23185 in k23134 in k11783 in k10718 in k10715 in k7274 in k7271 in k6978 in k6975 in k6971 in k6680 in k6677 in k6674 in k6671 */
static void C_ccall f_34189(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word *a;
t2=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[3])[1]);
t4=C_mutate(((C_word *)((C_word*)t0)[3])+1,t3);
t5=((C_word*)t0)[2];
f_34034(t5,t4);}

/* k34151 in k34029 in k34026 in mm:make-bend in k30217 in k26697 in k26694 in k26691 in k26688 in k26263 in k26260 in k26257 in k26254 in k26251 in k25668 in k25665 in k25142 in k25139 in k25136 in k25133 in k25130 in k25127 in k25124 in k25121 in k25118 in k25115 in k25112 in k25109 in k25106 in k25103 in k25100 in k25097 in k25094 in k25091 in k25088 in k25085 in k25082 in k24943 in k24940 in k24937 in k24934 in k24878 in k24875 in k24872 in k24869 in k24866 in k24863 in k24860 in k24857 in k23555 in k23486 in k23293 in k23290 in k23185 in k23134 in k11783 in k10718 in k10715 in k7274 in k7271 in k6978 in k6975 in k6971 in k6680 in k6677 in k6674 in k6671 */
static void C_ccall f_34153(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_34153,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_34157,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("error");
t4=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[21],((C_word*)t0)[2]);}
else{
t4=t2;
f_34157(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k34155 in k34151 in k34029 in k34026 in mm:make-bend in k30217 in k26697 in k26694 in k26691 in k26688 in k26263 in k26260 in k26257 in k26254 in k26251 in k25668 in k25665 in k25142 in k25139 in k25136 in k25133 in k25130 in k25127 in k25124 in k25121 in k25118 in k25115 in k25112 in k25109 in k25106 in k25103 in k25100 in k25097 in k25094 in k25091 in k25088 in k25085 in k25082 in k24943 in k24940 in k24937 in k24934 in k24878 in k24875 in k24872 in k24869 in k24866 in k24863 in k24860 in k24857 in k23555 in k23486 in k23293 in k23290 in k23185 in k23134 in k11783 in k10718 in k10715 in k7274 in k7271 in k6978 in k6975 in k6971 in k6680 in k6677 in k6674 in k6671 */
static void C_ccall f_34157(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_34034(t7,t6);}

/* k34116 in k34029 in k34026 in mm:make-bend in k30217 in k26697 in k26694 in k26691 in k26688 in k26263 in k26260 in k26257 in k26254 in k26251 in k25668 in k25665 in k25142 in k25139 in k25136 in k25133 in k25130 in k25127 in k25124 in k25121 in k25118 in k25115 in k25112 in k25109 in k25106 in k25103 in k25100 in k25097 in k25094 in k25091 in k25088 in k25085 in k25082 in k24943 in k24940 in k24937 in k24934 in k24878 in k24875 in k24872 in k24869 in k24866 in k24863 in k24860 in k24857 in k23555 in k23486 in k23293 in k23290 in k23185 in k23134 in k11783 in k10718 in k10715 in k7274 in k7271 in k6978 in k6975 in k6971 in k6680 in k6677 in k6674 in k6671 */
static void C_ccall f_34118(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_34118,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_34122,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("error");
t4=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[21],((C_word*)t0)[2]);}
else{
t4=t2;
f_34122(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k34120 in k34116 in k34029 in k34026 in mm:make-bend in k30217 in k26697 in k26694 in k26691 in k26688 in k26263 in k26260 in k26257 in k26254 in k26251 in k25668 in k25665 in k25142 in k25139 in k25136 in k25133 in k25130 in k25127 in k25124 in k25121 in k25118 in k25115 in k25112 in k25109 in k25106 in k25103 in k25100 in k25097 in k25094 in k25091 in k25088 in k25085 in k25082 in k24943 in k24940 in k24937 in k24934 in k24878 in k24875 in k24872 in k24869 in k24866 in k24863 in k24860 in k24857 in k23555 in k23486 in k23293 in k23290 in k23185 in k23134 in k11783 in k10718 in k10715 in k7274 in k7271 in k6978 in k6975 in k6971 in k6680 in k6677 in k6674 in k6671 */
static void C_ccall f_34122(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_34034(t7,t6);}

/* k34081 in k34029 in k34026 in mm:make-bend in k30217 in k26697 in k26694 in k26691 in k26688 in k26263 in k26260 in k26257 in k26254 in k26251 in k25668 in k25665 in k25142 in k25139 in k25136 in k25133 in k25130 in k25127 in k25124 in k25121 in k25118 in k25115 in k25112 in k25109 in k25106 in k25103 in k25100 in k25097 in k25094 in k25091 in k25088 in k25085 in k25082 in k24943 in k24940 in k24937 in k24934 in k24878 in k24875 in k24872 in k24869 in k24866 in k24863 in k24860 in k24857 in k23555 in k23486 in k23293 in k23290 in k23185 in k23134 in k11783 in k10718 in k10715 in k7274 in k7271 in k6978 in k6975 in k6971 in k6680 in k6677 in k6674 in k6671 */
static void C_ccall f_34083(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_34083,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_34087,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("error");
t4=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[21],((C_word*)t0)[2]);}
else{
t4=t2;
f_34087(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k34085 in k34081 in k34029 in k34026 in mm:make-bend in k30217 in k26697 in k26694 in k26691 in k26688 in k26263 in k26260 in k26257 in k26254 in k26251 in k25668 in k25665 in k25142 in k25139 in k25136 in k25133 in k25130 in k25127 in k25124 in k25121 in k25118 in k25115 in k25112 in k25109 in k25106 in k25103 in k25100 in k25097 in k25094 in k25091 in k25088 in k25085 in k25082 in k24943 in k24940 in k24937 in k24934 in k24878 in k24875 in k24872 in k24869 in k24866 in k24863 in k24860 in k24857 in k23555 in k23486 in k23293 in k23290 in k23185 in k23134 in k11783 in k10718 in k10715 in k7274 in k7271 in k6978 in k6975 in k6971 in k6680 in k6677 in k6674 in k6671 */
static void C_ccall f_34087(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_34034(t7,t6);}

/* k34032 in k34029 in k34026 in mm:make-bend in k30217 in k26697 in k26694 in k26691 in k26688 in k26263 in k26260 in k26257 in k26254 in k26251 in k25668 in k25665 in k25142 in k25139 in k25136 in k25133 in k25130 in k25127 in k25124 in k25121 in k25118 in k25115 in k25112 in k25109 in k25106 in k25103 in k25100 in k25097 in k25094 in k25091 in k25088 in k25085 in k25082 in k24943 in k24940 in k24937 in k24934 in k24878 in k24875 in k24872 in k24869 in k24866 in k24863 in k24860 in k24857 in k23555 in k23486 in k23293 in k23290 in k23185 in k23134 in k11783 in k10718 in k10715 in k7274 in k7271 in k6978 in k6975 in k6971 in k6680 in k6677 in k6674 in k6671 */
static void C_fcall f_34034(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[6],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_34034,NULL,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_34037,a[2]=((C_word*)t0)[4],a[3]=((C_word*)t0)[5],a[4]=((C_word*)t0)[6],a[5]=((C_word*)t0)[7],tmp=(C_word)a,a+=6,tmp);
if(C_truep((C_word)C_i_nullp(((C_word*)((C_word*)t0)[3])[1]))){
t3=t2;
f_34037(2,t3,C_SCHEME_UNDEFINED);}
else{
C_trace("error");
t3=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t3))(4,t3,t2,lf[5],((C_word*)t0)[2]);}}

/* k34035 in k34032 in k34029 in k34026 in mm:make-bend in k30217 in k26697 in k26694 in k26691 in k26688 in k26263 in k26260 in k26257 in k26254 in k26251 in k25668 in k25665 in k25142 in k25139 in k25136 in k25133 in k25130 in k25127 in k25124 in k25121 in k25118 in k25115 in k25112 in k25109 in k25106 in k25103 in k25100 in k25097 in k25094 in k25091 in k25088 in k25085 in k25082 in k24943 in k24940 in k24937 in k24934 in k24878 in k24875 in k24872 in k24869 in k24866 in k24863 in k24860 in k24857 in k23555 in k23486 in k23293 in k23290 in k23185 in k23134 in k11783 in k10718 in k10715 in k7274 in k7271 in k6978 in k6975 in k6971 in k6680 in k6677 in k6674 in k6671 */
static void C_ccall f_34037(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word ab[3],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_34037,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_34041,a[2]=((C_word)li498),tmp=(C_word)a,a+=3,tmp);
((C_proc7)(void*)(*((C_word*)t2+1)))(7,t2,((C_word*)t0)[5],C_retrieve(lf[728]),((C_word*)((C_word*)t0)[4])[1],((C_word*)((C_word*)t0)[3])[1],((C_word*)((C_word*)t0)[2])[1],C_fix(0));}

/* f_34041 in k34035 in k34032 in k34029 in k34026 in mm:make-bend in k30217 in k26697 in k26694 in k26691 in k26688 in k26263 in k26260 in k26257 in k26254 in k26251 in k25668 in k25665 in k25142 in k25139 in k25136 in k25133 in k25130 in k25127 in k25124 in k25121 in k25118 in k25115 in k25112 in k25109 in k25106 in k25103 in k25100 in k25097 in k25094 in k25091 in k25088 in k25085 in k25082 in k24943 in k24940 in k24937 in k24934 in k24878 in k24875 in k24872 in k24869 in k24866 in k24863 in k24860 in k24857 in k23555 in k23486 in k23293 in k23290 in k23185 in k23134 in k11783 in k10718 in k10715 in k7274 in k7271 in k6978 in k6975 in k6971 in k6680 in k6677 in k6674 in k6671 */
static void C_ccall f_34041(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4,C_word t5,C_word t6){
C_word tmp;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word ab[5],*a=ab;
if(c!=7) C_bad_argc_2(c,7,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr7,(void*)f_34041,7,t0,t1,t2,t3,t4,t5,t6);}
t7=(C_word)C_a_i_bytevector(&a,1,C_fix(3));
t8=(C_word)C_i_foreign_fixnum_argumentp(t2);
t9=(C_word)C_i_foreign_flonum_argumentp(t3);
t10=(C_word)C_i_foreign_fixnum_argumentp(t4);
t11=(C_word)C_i_foreign_fixnum_argumentp(t5);
t12=(C_word)C_i_foreign_fixnum_argumentp(t6);
t13=t1;
((C_proc2)(void*)(*((C_word*)t13+1)))(2,t13,(C_word)stub5780(t7,t8,t9,t10,t11,t12));}

/* mm:press? in k30217 in k26697 in k26694 in k26691 in k26688 in k26263 in k26260 in k26257 in k26254 in k26251 in k25668 in k25665 in k25142 in k25139 in k25136 in k25133 in k25130 in k25127 in k25124 in k25121 in k25118 in k25115 in k25112 in k25109 in k25106 in k25103 in k25100 in k25097 in k25094 in k25091 in k25088 in k25085 in k25082 in k24943 in k24940 in k24937 in k24934 in k24878 in k24875 in k24872 in k24869 in k24866 in k24863 in k24860 in k24857 in k23555 in k23486 in k23293 in k23290 in k23185 in k23134 in k11783 in k10718 in k10715 in k7274 in k7271 in k6978 in k6975 in k6971 in k6680 in k6677 in k6674 in k6671 */
static void C_ccall f_34005(C_word c,C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word ab[3],*a=ab;
if(c!=3) C_bad_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr3,(void*)f_34005,3,t0,t1,t2);}
t3=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_34010,a[2]=((C_word)li496),tmp=(C_word)a,a+=3,tmp);
((C_proc4)(void*)(*((C_word*)t3+1)))(4,t3,t1,t2,C_retrieve(lf[727]));}

/* f_34010 in mm:press? in k30217 in k26697 in k26694 in k26691 in k26688 in k26263 in k26260 in k26257 in k26254 in k26251 in k25668 in k25665 in k25142 in k25139 in k25136 in k25133 in k25130 in k25127 in k25124 in k25121 in k25118 in k25115 in k25112 in k25109 in k25106 in k25103 in k25100 in k25097 in k25094 in k25091 in k25088 in k25085 in k25082 in k24943 in k24940 in k24937 in k24934 in k24878 in k24875 in k24872 in k24869 in k24866 in k24863 in k24860 in k24857 in k23555 in k23486 in k23293 in k23290 in k23185 in k23134 in k11783 in k10718 in k10715 in k7274 in k7271 in k6978 in k6975 in k6971 in k6680 in k6677 in k6674 in k6671 */
static void C_ccall f_34010(C_word c,C_word t0,C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word t6;
C_word *a;
if(c!=4) C_bad_argc_2(c,4,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr4,(void*)f_34010,4,t0,t1,t2,t3);}
t4=(C_truep(t2)?(C_word)C_i_foreign_pointer_argumentp(t2):C_SCHEME_FALSE);
t5=(C_word)C_i_foreign_fixnum_argumentp(t3);
t6=t1;
((C_proc2)(void*)(*((C_word*)t6+1)))(2,t6,(C_word)stub5701(C_SCHEME_UNDEFINED,t4,t5));}

/* mm:make-press in k30217 in k26697 in k26694 in k26691 in k26688 in k26263 in k26260 in k26257 in k26254 in k26251 in k25668 in k25665 in k25142 in k25139 in k25136 in k25133 in k25130 in k25127 in k25124 in k25121 in k25118 in k25115 in k25112 in k25109 in k25106 in k25103 in k25100 in k25097 in k25094 in k25091 in k25088 in k25085 in k25082 in k24943 in k24940 in k24937 in k24934 in k24878 in k24875 in k24872 in k24869 in k24866 in k24863 in k24860 in k24857 in k23555 in k23486 in k23293 in k23290 in k23185 in k23134 in k11783 in k10718 in k10715 in k7274 in k7271 in k6978 in k6975 in k6971 in k6680 in k6677 in k6674 in k6671 */
static void C_ccall f_33554(C_word c,C_word t0,C_word t1,...){
C_word tmp;
C_word t2;
va_list v;
C_word *a,c2=c;
C_save_rest(t1,c2,2);
C_check_for_interrupt;
if(!C_demand(c*C_SIZEOF_PAIR+58)){
C_save_and_reclaim((void*)tr2r,(void*)f_33554r,2,t0,t1);}
else{
a=C_alloc((c-2)*3);
t2=C_restore_rest(a,C_rest_count(0));
f_33554r(t0,t1,t2);}}

static void C_ccall f_33554r(C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word t14;
C_word t15;
C_word t16;
C_word t17;
C_word t18;
C_word t19;
C_word t20;
C_word t21;
C_word t22;
C_word t23;
C_word t24;
C_word t25;
C_word t26;
C_word t27;
C_word t28;
C_word *a=C_alloc(58);
t3=C_fix(0);
t4=(*a=C_VECTOR_TYPE|1,a[1]=t3,tmp=(C_word)a,a+=2,tmp);
t5=C_fix(0);
t6=(*a=C_VECTOR_TYPE|1,a[1]=t5,tmp=(C_word)a,a+=2,tmp);
t7=C_fix(0);
t8=(*a=C_VECTOR_TYPE|1,a[1]=t7,tmp=(C_word)a,a+=2,tmp);
t9=C_SCHEME_FALSE;
t10=(*a=C_VECTOR_TYPE|1,a[1]=t9,tmp=(C_word)a,a+=2,tmp);
t11=C_SCHEME_FALSE;
t12=(*a=C_VECTOR_TYPE|1,a[1]=t11,tmp=(C_word)a,a+=2,tmp);
t13=C_SCHEME_FALSE;
t14=(*a=C_VECTOR_TYPE|1,a[1]=t13,tmp=(C_word)a,a+=2,tmp);
t15=t2;
t16=(*a=C_VECTOR_TYPE|1,a[1]=t15,tmp=(C_word)a,a+=2,tmp);
t17=C_SCHEME_FALSE;
t18=(*a=C_VECTOR_TYPE|1,a[1]=t17,tmp=(C_word)a,a+=2,tmp);
t19=(*a=C_CLOSURE_TYPE|11,a[1]=(C_word)f_33558,a[2]=t14,a[3]=t12,a[4]=t18,a[5]=t10,a[6]=t2,a[7]=t16,a[8]=t6,a[9]=t8,a[10]=t4,a[11]=t1,tmp=(C_word)a,a+=12,tmp);
if(C_truep((C_word)C_i_nullp(((C_word*)t16)[1]))){
t20=t19;
f_33558(t20,C_SCHEME_UNDEFINED);}
else{
t20=(C_word)C_i_car(((C_word*)t16)[1]);
t21=(C_word)C_eqp(t20,lf[730]);
if(C_truep(t21)){
t22=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_33883,a[2]=t2,a[3]=t19,a[4]=t16,a[5]=t18,a[6]=t10,a[7]=t4,tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)t10)[1])){
C_trace("error");
t23=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t23))(4,t23,t22,lf[19],lf[730]);}
else{
t23=t22;
f_33883(2,t23,C_SCHEME_UNDEFINED);}}
else{
t22=(C_word)C_eqp(t20,lf[738]);
if(C_truep(t22)){
t23=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_33918,a[2]=t2,a[3]=t19,a[4]=t16,a[5]=t18,a[6]=t12,a[7]=t6,tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)t12)[1])){
C_trace("error");
t24=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t24))(4,t24,t23,lf[19],lf[738]);}
else{
t24=t23;
f_33918(2,t24,C_SCHEME_UNDEFINED);}}
else{
t23=(C_word)C_eqp(t20,lf[733]);
if(C_truep(t23)){
t24=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_33953,a[2]=t2,a[3]=t19,a[4]=t16,a[5]=t18,a[6]=t14,a[7]=t8,tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)t14)[1])){
C_trace("error");
t25=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t25))(4,t25,t24,lf[19],lf[733]);}
else{
t25=t24;
f_33953(2,t25,C_SCHEME_UNDEFINED);}}
else{
t24=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_33982,a[2]=t19,a[3]=t10,a[4]=t4,a[5]=t16,tmp=(C_word)a,a+=6,tmp);
if(C_truep(((C_word*)t18)[1])){
C_trace("error");
t25=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t25))(4,t25,t24,lf[10],t2);}
else{
t25=t24;
f_33982(2,t25,C_SCHEME_UNDEFINED);}}}}}}

/* k33980 in mm:make-press in k30217 in k26697 in k26694 in k26691 in k26688 in k26263 in k26260 in k26257 in k26254 in k26251 in k25668 in k25665 in k25142 in k25139 in k25136 in k25133 in k25130 in k25127 in k25124 in k25121 in k25118 in k25115 in k25112 in k25109 in k25106 in k25103 in k25100 in k25097 in k25094 in k25091 in k25088 in k25085 in k25082 in k24943 in k24940 in k24937 in k24934 in k24878 in k24875 in k24872 in k24869 in k24866 in k24863 in k24860 in k24857 in k23555 in k23486 in k23293 in k23290 in k23185 in k23134 in k11783 in k10718 in k10715 in k7274 in k7271 in k6978 in k6975 in k6971 in k6680 in k6677 in k6674 in k6671 */
static void C_ccall f_33982(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_33982,2,t0,t1);}
t2=(C_word)C_i_car(((C_word*)((C_word*)t0)[5])[1]);
t3=C_mutate(((C_word *)((C_word*)t0)[4])+1,t2);
t4=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_33989,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[5],a[4]=((C_word*)t0)[3],tmp=(C_word)a,a+=5,tmp);
t5=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_33997,a[2]=((C_word*)t0)[4],a[3]=t4,tmp=(C_word)a,a+=4,tmp);
C_trace("keyword?");
t6=C_retrieve(lf[13]);
((C_proc3)C_retrieve_proc(t6))(3,t6,t5,((C_word*)((C_word*)t0)[4])[1]);}

/* k33995 in k33980 in mm:make-press in k30217 in k26697 in k26694 in k26691 in k26688 in k26263 in k26260 in k26257 in k26254 in k26251 in k25668 in k25665 in k25142 in k25139 in k25136 in k25133 in k25130 in k25127 in k25124 in k25121 in k25118 in k25115 in k25112 in k25109 in k25106 in k25103 in k25100 in k25097 in k25094 in k25091 in k25088 in k25085 in k25082 in k24943 in k24940 in k24937 in k24934 in k24878 in k24875 in k24872 in k24869 in k24866 in k24863 in k24860 in k24857 in k23555 in k23486 in k23293 in k23290 in k23185 in k23134 in k11783 in k10718 in k10715 in k7274 in k7271 in k6978 in k6975 in k6971 in k6680 in k6677 in k6674 in k6671 */
static void C_ccall f_33997(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
if(C_truep(t1)){
C_trace("error");
t2=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t2))(4,t2,((C_word*)t0)[3],lf[14],((C_word*)((C_word*)t0)[2])[1]);}
else{
t2=((C_word*)t0)[3];
f_33989(2,t2,C_SCHEME_UNDEFINED);}}

/* k33987 in k33980 in mm:make-press in k30217 in k26697 in k26694 in k26691 in k26688 in k26263 in k26260 in k26257 in k26254 in k26251 in k25668 in k25665 in k25142 in k25139 in k25136 in k25133 in k25130 in k25127 in k25124 in k25121 in k25118 in k25115 in k25112 in k25109 in k25106 in k25103 in k25100 in k25097 in k25094 in k25091 in k25088 in k25085 in k25082 in k24943 in k24940 in k24937 in k24934 in k24878 in k24875 in k24872 in k24869 in k24866 in k24863 in k24860 in k24857 in k23555 in k23486 in k23293 in k23290 in k23185 in k23134 in k11783 in k10718 in k10715 in k7274 in k7271 in k6978 in k6975 in k6971 in k6680 in k6677 in k6674 in k6671 */
static void C_ccall f_33989(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word *a;
t2=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[3])[1]);
t4=C_mutate(((C_word *)((C_word*)t0)[3])+1,t3);
t5=((C_word*)t0)[2];
f_33558(t5,t4);}

/* k33951 in mm:make-press in k30217 in k26697 in k26694 in k26691 in k26688 in k26263 in k26260 in k26257 in k26254 in k26251 in k25668 in k25665 in k25142 in k25139 in k25136 in k25133 in k25130 in k25127 in k25124 in k25121 in k25118 in k25115 in k25112 in k25109 in k25106 in k25103 in k25100 in k25097 in k25094 in k25091 in k25088 in k25085 in k25082 in k24943 in k24940 in k24937 in k24934 in k24878 in k24875 in k24872 in k24869 in k24866 in k24863 in k24860 in k24857 in k23555 in k23486 in k23293 in k23290 in k23185 in k23134 in k11783 in k10718 in k10715 in k7274 in k7271 in k6978 in k6975 in k6971 in k6680 in k6677 in k6674 in k6671 */
static void C_ccall f_33953(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_33953,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_33957,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("error");
t4=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[21],((C_word*)t0)[2]);}
else{
t4=t2;
f_33957(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k33955 in k33951 in mm:make-press in k30217 in k26697 in k26694 in k26691 in k26688 in k26263 in k26260 in k26257 in k26254 in k26251 in k25668 in k25665 in k25142 in k25139 in k25136 in k25133 in k25130 in k25127 in k25124 in k25121 in k25118 in k25115 in k25112 in k25109 in k25106 in k25103 in k25100 in k25097 in k25094 in k25091 in k25088 in k25085 in k25082 in k24943 in k24940 in k24937 in k24934 in k24878 in k24875 in k24872 in k24869 in k24866 in k24863 in k24860 in k24857 in k23555 in k23486 in k23293 in k23290 in k23185 in k23134 in k11783 in k10718 in k10715 in k7274 in k7271 in k6978 in k6975 in k6971 in k6680 in k6677 in k6674 in k6671 */
static void C_ccall f_33957(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_33558(t7,t6);}

/* k33916 in mm:make-press in k30217 in k26697 in k26694 in k26691 in k26688 in k26263 in k26260 in k26257 in k26254 in k26251 in k25668 in k25665 in k25142 in k25139 in k25136 in k25133 in k25130 in k25127 in k25124 in k25121 in k25118 in k25115 in k25112 in k25109 in k25106 in k25103 in k25100 in k25097 in k25094 in k25091 in k25088 in k25085 in k25082 in k24943 in k24940 in k24937 in k24934 in k24878 in k24875 in k24872 in k24869 in k24866 in k24863 in k24860 in k24857 in k23555 in k23486 in k23293 in k23290 in k23185 in k23134 in k11783 in k10718 in k10715 in k7274 in k7271 in k6978 in k6975 in k6971 in k6680 in k6677 in k6674 in k6671 */
static void C_ccall f_33918(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_33918,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_33922,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("error");
t4=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[21],((C_word*)t0)[2]);}
else{
t4=t2;
f_33922(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k33920 in k33916 in mm:make-press in k30217 in k26697 in k26694 in k26691 in k26688 in k26263 in k26260 in k26257 in k26254 in k26251 in k25668 in k25665 in k25142 in k25139 in k25136 in k25133 in k25130 in k25127 in k25124 in k25121 in k25118 in k25115 in k25112 in k25109 in k25106 in k25103 in k25100 in k25097 in k25094 in k25091 in k25088 in k25085 in k25082 in k24943 in k24940 in k24937 in k24934 in k24878 in k24875 in k24872 in k24869 in k24866 in k24863 in k24860 in k24857 in k23555 in k23486 in k23293 in k23290 in k23185 in k23134 in k11783 in k10718 in k10715 in k7274 in k7271 in k6978 in k6975 in k6971 in k6680 in k6677 in k6674 in k6671 */
static void C_ccall f_33922(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_33558(t7,t6);}

/* k33881 in mm:make-press in k30217 in k26697 in k26694 in k26691 in k26688 in k26263 in k26260 in k26257 in k26254 in k26251 in k25668 in k25665 in k25142 in k25139 in k25136 in k25133 in k25130 in k25127 in k25124 in k25121 in k25118 in k25115 in k25112 in k25109 in k25106 in k25103 in k25100 in k25097 in k25094 in k25091 in k25088 in k25085 in k25082 in k24943 in k24940 in k24937 in k24934 in k24878 in k24875 in k24872 in k24869 in k24866 in k24863 in k24860 in k24857 in k23555 in k23486 in k23293 in k23290 in k23185 in k23134 in k11783 in k10718 in k10715 in k7274 in k7271 in k6978 in k6975 in k6971 in k6680 in k6677 in k6674 in k6671 */
static void C_ccall f_33883(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_33883,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_33887,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("error");
t4=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[21],((C_word*)t0)[2]);}
else{
t4=t2;
f_33887(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k33885 in k33881 in mm:make-press in k30217 in k26697 in k26694 in k26691 in k26688 in k26263 in k26260 in k26257 in k26254 in k26251 in k25668 in k25665 in k25142 in k25139 in k25136 in k25133 in k25130 in k25127 in k25124 in k25121 in k25118 in k25115 in k25112 in k25109 in k25106 in k25103 in k25100 in k25097 in k25094 in k25091 in k25088 in k25085 in k25082 in k24943 in k24940 in k24937 in k24934 in k24878 in k24875 in k24872 in k24869 in k24866 in k24863 in k24860 in k24857 in k23555 in k23486 in k23293 in k23290 in k23185 in k23134 in k11783 in k10718 in k10715 in k7274 in k7271 in k6978 in k6975 in k6971 in k6680 in k6677 in k6674 in k6671 */
static void C_ccall f_33887(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_33558(t7,t6);}

/* k33556 in mm:make-press in k30217 in k26697 in k26694 in k26691 in k26688 in k26263 in k26260 in k26257 in k26254 in k26251 in k25668 in k25665 in k25142 in k25139 in k25136 in k25133 in k25130 in k25127 in k25124 in k25121 in k25118 in k25115 in k25112 in k25109 in k25106 in k25103 in k25100 in k25097 in k25094 in k25091 in k25088 in k25085 in k25082 in k24943 in k24940 in k24937 in k24934 in k24878 in k24875 in k24872 in k24869 in k24866 in k24863 in k24860 in k24857 in k23555 in k23486 in k23293 in k23290 in k23185 in k23134 in k11783 in k10718 in k10715 in k7274 in k7271 in k6978 in k6975 in k6971 in k6680 in k6677 in k6674 in k6671 */
static void C_fcall f_33558(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word ab[42],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_33558,NULL,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|11,a[1]=(C_word)f_33561,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],a[7]=((C_word*)t0)[7],a[8]=((C_word*)t0)[8],a[9]=((C_word*)t0)[9],a[10]=((C_word*)t0)[10],a[11]=((C_word*)t0)[11],tmp=(C_word)a,a+=12,tmp);
if(C_truep((C_word)C_i_nullp(((C_word*)((C_word*)t0)[7])[1]))){
t3=t2;
f_33561(t3,C_SCHEME_UNDEFINED);}
else{
t3=(C_word)C_i_car(((C_word*)((C_word*)t0)[7])[1]);
t4=(C_word)C_eqp(t3,lf[730]);
if(C_truep(t4)){
t5=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_33748,a[2]=((C_word*)t0)[6],a[3]=t2,a[4]=((C_word*)t0)[7],a[5]=((C_word*)t0)[4],a[6]=((C_word*)t0)[5],a[7]=((C_word*)t0)[10],tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)((C_word*)t0)[5])[1])){
C_trace("error");
t6=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t6))(4,t6,t5,lf[19],lf[730]);}
else{
t6=t5;
f_33748(2,t6,C_SCHEME_UNDEFINED);}}
else{
t5=(C_word)C_eqp(t3,lf[738]);
if(C_truep(t5)){
t6=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_33783,a[2]=((C_word*)t0)[6],a[3]=t2,a[4]=((C_word*)t0)[7],a[5]=((C_word*)t0)[4],a[6]=((C_word*)t0)[3],a[7]=((C_word*)t0)[8],tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)((C_word*)t0)[3])[1])){
C_trace("error");
t7=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t7))(4,t7,t6,lf[19],lf[738]);}
else{
t7=t6;
f_33783(2,t7,C_SCHEME_UNDEFINED);}}
else{
t6=(C_word)C_eqp(t3,lf[733]);
if(C_truep(t6)){
t7=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_33818,a[2]=((C_word*)t0)[6],a[3]=t2,a[4]=((C_word*)t0)[7],a[5]=((C_word*)t0)[4],a[6]=((C_word*)t0)[2],a[7]=((C_word*)t0)[9],tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)((C_word*)t0)[2])[1])){
C_trace("error");
t8=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t8))(4,t8,t7,lf[19],lf[733]);}
else{
t8=t7;
f_33818(2,t8,C_SCHEME_UNDEFINED);}}
else{
t7=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_33847,a[2]=t2,a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[8],a[5]=((C_word*)t0)[7],tmp=(C_word)a,a+=6,tmp);
if(C_truep(((C_word*)((C_word*)t0)[4])[1])){
C_trace("error");
t8=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t8))(4,t8,t7,lf[10],((C_word*)t0)[6]);}
else{
t8=t7;
f_33847(2,t8,C_SCHEME_UNDEFINED);}}}}}}

/* k33845 in k33556 in mm:make-press in k30217 in k26697 in k26694 in k26691 in k26688 in k26263 in k26260 in k26257 in k26254 in k26251 in k25668 in k25665 in k25142 in k25139 in k25136 in k25133 in k25130 in k25127 in k25124 in k25121 in k25118 in k25115 in k25112 in k25109 in k25106 in k25103 in k25100 in k25097 in k25094 in k25091 in k25088 in k25085 in k25082 in k24943 in k24940 in k24937 in k24934 in k24878 in k24875 in k24872 in k24869 in k24866 in k24863 in k24860 in k24857 in k23555 in k23486 in k23293 in k23290 in k23185 in k23134 in k11783 in k10718 in k10715 in k7274 in k7271 in k6978 in k6975 in k6971 in k6680 in k6677 in k6674 in k6671 */
static void C_ccall f_33847(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_33847,2,t0,t1);}
t2=(C_word)C_i_car(((C_word*)((C_word*)t0)[5])[1]);
t3=C_mutate(((C_word *)((C_word*)t0)[4])+1,t2);
t4=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_33854,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[5],a[4]=((C_word*)t0)[3],tmp=(C_word)a,a+=5,tmp);
t5=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_33862,a[2]=((C_word*)t0)[4],a[3]=t4,tmp=(C_word)a,a+=4,tmp);
C_trace("keyword?");
t6=C_retrieve(lf[13]);
((C_proc3)C_retrieve_proc(t6))(3,t6,t5,((C_word*)((C_word*)t0)[4])[1]);}

/* k33860 in k33845 in k33556 in mm:make-press in k30217 in k26697 in k26694 in k26691 in k26688 in k26263 in k26260 in k26257 in k26254 in k26251 in k25668 in k25665 in k25142 in k25139 in k25136 in k25133 in k25130 in k25127 in k25124 in k25121 in k25118 in k25115 in k25112 in k25109 in k25106 in k25103 in k25100 in k25097 in k25094 in k25091 in k25088 in k25085 in k25082 in k24943 in k24940 in k24937 in k24934 in k24878 in k24875 in k24872 in k24869 in k24866 in k24863 in k24860 in k24857 in k23555 in k23486 in k23293 in k23290 in k23185 in k23134 in k11783 in k10718 in k10715 in k7274 in k7271 in k6978 in k6975 in k6971 in k6680 in k6677 in k6674 in k6671 */
static void C_ccall f_33862(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
if(C_truep(t1)){
C_trace("error");
t2=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t2))(4,t2,((C_word*)t0)[3],lf[14],((C_word*)((C_word*)t0)[2])[1]);}
else{
t2=((C_word*)t0)[3];
f_33854(2,t2,C_SCHEME_UNDEFINED);}}

/* k33852 in k33845 in k33556 in mm:make-press in k30217 in k26697 in k26694 in k26691 in k26688 in k26263 in k26260 in k26257 in k26254 in k26251 in k25668 in k25665 in k25142 in k25139 in k25136 in k25133 in k25130 in k25127 in k25124 in k25121 in k25118 in k25115 in k25112 in k25109 in k25106 in k25103 in k25100 in k25097 in k25094 in k25091 in k25088 in k25085 in k25082 in k24943 in k24940 in k24937 in k24934 in k24878 in k24875 in k24872 in k24869 in k24866 in k24863 in k24860 in k24857 in k23555 in k23486 in k23293 in k23290 in k23185 in k23134 in k11783 in k10718 in k10715 in k7274 in k7271 in k6978 in k6975 in k6971 in k6680 in k6677 in k6674 in k6671 */
static void C_ccall f_33854(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word *a;
t2=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[3])[1]);
t4=C_mutate(((C_word *)((C_word*)t0)[3])+1,t3);
t5=((C_word*)t0)[2];
f_33561(t5,t4);}

/* k33816 in k33556 in mm:make-press in k30217 in k26697 in k26694 in k26691 in k26688 in k26263 in k26260 in k26257 in k26254 in k26251 in k25668 in k25665 in k25142 in k25139 in k25136 in k25133 in k25130 in k25127 in k25124 in k25121 in k25118 in k25115 in k25112 in k25109 in k25106 in k25103 in k25100 in k25097 in k25094 in k25091 in k25088 in k25085 in k25082 in k24943 in k24940 in k24937 in k24934 in k24878 in k24875 in k24872 in k24869 in k24866 in k24863 in k24860 in k24857 in k23555 in k23486 in k23293 in k23290 in k23185 in k23134 in k11783 in k10718 in k10715 in k7274 in k7271 in k6978 in k6975 in k6971 in k6680 in k6677 in k6674 in k6671 */
static void C_ccall f_33818(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_33818,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_33822,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("error");
t4=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[21],((C_word*)t0)[2]);}
else{
t4=t2;
f_33822(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k33820 in k33816 in k33556 in mm:make-press in k30217 in k26697 in k26694 in k26691 in k26688 in k26263 in k26260 in k26257 in k26254 in k26251 in k25668 in k25665 in k25142 in k25139 in k25136 in k25133 in k25130 in k25127 in k25124 in k25121 in k25118 in k25115 in k25112 in k25109 in k25106 in k25103 in k25100 in k25097 in k25094 in k25091 in k25088 in k25085 in k25082 in k24943 in k24940 in k24937 in k24934 in k24878 in k24875 in k24872 in k24869 in k24866 in k24863 in k24860 in k24857 in k23555 in k23486 in k23293 in k23290 in k23185 in k23134 in k11783 in k10718 in k10715 in k7274 in k7271 in k6978 in k6975 in k6971 in k6680 in k6677 in k6674 in k6671 */
static void C_ccall f_33822(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_33561(t7,t6);}

/* k33781 in k33556 in mm:make-press in k30217 in k26697 in k26694 in k26691 in k26688 in k26263 in k26260 in k26257 in k26254 in k26251 in k25668 in k25665 in k25142 in k25139 in k25136 in k25133 in k25130 in k25127 in k25124 in k25121 in k25118 in k25115 in k25112 in k25109 in k25106 in k25103 in k25100 in k25097 in k25094 in k25091 in k25088 in k25085 in k25082 in k24943 in k24940 in k24937 in k24934 in k24878 in k24875 in k24872 in k24869 in k24866 in k24863 in k24860 in k24857 in k23555 in k23486 in k23293 in k23290 in k23185 in k23134 in k11783 in k10718 in k10715 in k7274 in k7271 in k6978 in k6975 in k6971 in k6680 in k6677 in k6674 in k6671 */
static void C_ccall f_33783(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_33783,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_33787,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("error");
t4=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[21],((C_word*)t0)[2]);}
else{
t4=t2;
f_33787(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k33785 in k33781 in k33556 in mm:make-press in k30217 in k26697 in k26694 in k26691 in k26688 in k26263 in k26260 in k26257 in k26254 in k26251 in k25668 in k25665 in k25142 in k25139 in k25136 in k25133 in k25130 in k25127 in k25124 in k25121 in k25118 in k25115 in k25112 in k25109 in k25106 in k25103 in k25100 in k25097 in k25094 in k25091 in k25088 in k25085 in k25082 in k24943 in k24940 in k24937 in k24934 in k24878 in k24875 in k24872 in k24869 in k24866 in k24863 in k24860 in k24857 in k23555 in k23486 in k23293 in k23290 in k23185 in k23134 in k11783 in k10718 in k10715 in k7274 in k7271 in k6978 in k6975 in k6971 in k6680 in k6677 in k6674 in k6671 */
static void C_ccall f_33787(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_33561(t7,t6);}

/* k33746 in k33556 in mm:make-press in k30217 in k26697 in k26694 in k26691 in k26688 in k26263 in k26260 in k26257 in k26254 in k26251 in k25668 in k25665 in k25142 in k25139 in k25136 in k25133 in k25130 in k25127 in k25124 in k25121 in k25118 in k25115 in k25112 in k25109 in k25106 in k25103 in k25100 in k25097 in k25094 in k25091 in k25088 in k25085 in k25082 in k24943 in k24940 in k24937 in k24934 in k24878 in k24875 in k24872 in k24869 in k24866 in k24863 in k24860 in k24857 in k23555 in k23486 in k23293 in k23290 in k23185 in k23134 in k11783 in k10718 in k10715 in k7274 in k7271 in k6978 in k6975 in k6971 in k6680 in k6677 in k6674 in k6671 */
static void C_ccall f_33748(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_33748,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_33752,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("error");
t4=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[21],((C_word*)t0)[2]);}
else{
t4=t2;
f_33752(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k33750 in k33746 in k33556 in mm:make-press in k30217 in k26697 in k26694 in k26691 in k26688 in k26263 in k26260 in k26257 in k26254 in k26251 in k25668 in k25665 in k25142 in k25139 in k25136 in k25133 in k25130 in k25127 in k25124 in k25121 in k25118 in k25115 in k25112 in k25109 in k25106 in k25103 in k25100 in k25097 in k25094 in k25091 in k25088 in k25085 in k25082 in k24943 in k24940 in k24937 in k24934 in k24878 in k24875 in k24872 in k24869 in k24866 in k24863 in k24860 in k24857 in k23555 in k23486 in k23293 in k23290 in k23185 in k23134 in k11783 in k10718 in k10715 in k7274 in k7271 in k6978 in k6975 in k6971 in k6680 in k6677 in k6674 in k6671 */
static void C_ccall f_33752(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_33561(t7,t6);}

/* k33559 in k33556 in mm:make-press in k30217 in k26697 in k26694 in k26691 in k26688 in k26263 in k26260 in k26257 in k26254 in k26251 in k25668 in k25665 in k25142 in k25139 in k25136 in k25133 in k25130 in k25127 in k25124 in k25121 in k25118 in k25115 in k25112 in k25109 in k25106 in k25103 in k25100 in k25097 in k25094 in k25091 in k25088 in k25085 in k25082 in k24943 in k24940 in k24937 in k24934 in k24878 in k24875 in k24872 in k24869 in k24866 in k24863 in k24860 in k24857 in k23555 in k23486 in k23293 in k23290 in k23185 in k23134 in k11783 in k10718 in k10715 in k7274 in k7271 in k6978 in k6975 in k6971 in k6680 in k6677 in k6674 in k6671 */
static void C_fcall f_33561(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word ab[38],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_33561,NULL,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_33564,a[2]=((C_word*)t0)[6],a[3]=((C_word*)t0)[7],a[4]=((C_word*)t0)[8],a[5]=((C_word*)t0)[9],a[6]=((C_word*)t0)[10],a[7]=((C_word*)t0)[11],tmp=(C_word)a,a+=8,tmp);
if(C_truep((C_word)C_i_nullp(((C_word*)((C_word*)t0)[7])[1]))){
t3=t2;
f_33564(t3,C_SCHEME_UNDEFINED);}
else{
t3=(C_word)C_i_car(((C_word*)((C_word*)t0)[7])[1]);
t4=(C_word)C_eqp(t3,lf[730]);
if(C_truep(t4)){
t5=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_33613,a[2]=((C_word*)t0)[6],a[3]=t2,a[4]=((C_word*)t0)[7],a[5]=((C_word*)t0)[4],a[6]=((C_word*)t0)[5],a[7]=((C_word*)t0)[10],tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)((C_word*)t0)[5])[1])){
C_trace("error");
t6=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t6))(4,t6,t5,lf[19],lf[730]);}
else{
t6=t5;
f_33613(2,t6,C_SCHEME_UNDEFINED);}}
else{
t5=(C_word)C_eqp(t3,lf[738]);
if(C_truep(t5)){
t6=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_33648,a[2]=((C_word*)t0)[6],a[3]=t2,a[4]=((C_word*)t0)[7],a[5]=((C_word*)t0)[4],a[6]=((C_word*)t0)[3],a[7]=((C_word*)t0)[8],tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)((C_word*)t0)[3])[1])){
C_trace("error");
t7=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t7))(4,t7,t6,lf[19],lf[738]);}
else{
t7=t6;
f_33648(2,t7,C_SCHEME_UNDEFINED);}}
else{
t6=(C_word)C_eqp(t3,lf[733]);
if(C_truep(t6)){
t7=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_33683,a[2]=((C_word*)t0)[6],a[3]=t2,a[4]=((C_word*)t0)[7],a[5]=((C_word*)t0)[4],a[6]=((C_word*)t0)[2],a[7]=((C_word*)t0)[9],tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)((C_word*)t0)[2])[1])){
C_trace("error");
t8=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t8))(4,t8,t7,lf[19],lf[733]);}
else{
t8=t7;
f_33683(2,t8,C_SCHEME_UNDEFINED);}}
else{
t7=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_33712,a[2]=t2,a[3]=((C_word*)t0)[2],a[4]=((C_word*)t0)[9],a[5]=((C_word*)t0)[7],tmp=(C_word)a,a+=6,tmp);
if(C_truep(((C_word*)((C_word*)t0)[4])[1])){
C_trace("error");
t8=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t8))(4,t8,t7,lf[10],((C_word*)t0)[6]);}
else{
t8=t7;
f_33712(2,t8,C_SCHEME_UNDEFINED);}}}}}}

/* k33710 in k33559 in k33556 in mm:make-press in k30217 in k26697 in k26694 in k26691 in k26688 in k26263 in k26260 in k26257 in k26254 in k26251 in k25668 in k25665 in k25142 in k25139 in k25136 in k25133 in k25130 in k25127 in k25124 in k25121 in k25118 in k25115 in k25112 in k25109 in k25106 in k25103 in k25100 in k25097 in k25094 in k25091 in k25088 in k25085 in k25082 in k24943 in k24940 in k24937 in k24934 in k24878 in k24875 in k24872 in k24869 in k24866 in k24863 in k24860 in k24857 in k23555 in k23486 in k23293 in k23290 in k23185 in k23134 in k11783 in k10718 in k10715 in k7274 in k7271 in k6978 in k6975 in k6971 in k6680 in k6677 in k6674 in k6671 */
static void C_ccall f_33712(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_33712,2,t0,t1);}
t2=(C_word)C_i_car(((C_word*)((C_word*)t0)[5])[1]);
t3=C_mutate(((C_word *)((C_word*)t0)[4])+1,t2);
t4=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_33719,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[5],a[4]=((C_word*)t0)[3],tmp=(C_word)a,a+=5,tmp);
t5=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_33727,a[2]=((C_word*)t0)[4],a[3]=t4,tmp=(C_word)a,a+=4,tmp);
C_trace("keyword?");
t6=C_retrieve(lf[13]);
((C_proc3)C_retrieve_proc(t6))(3,t6,t5,((C_word*)((C_word*)t0)[4])[1]);}

/* k33725 in k33710 in k33559 in k33556 in mm:make-press in k30217 in k26697 in k26694 in k26691 in k26688 in k26263 in k26260 in k26257 in k26254 in k26251 in k25668 in k25665 in k25142 in k25139 in k25136 in k25133 in k25130 in k25127 in k25124 in k25121 in k25118 in k25115 in k25112 in k25109 in k25106 in k25103 in k25100 in k25097 in k25094 in k25091 in k25088 in k25085 in k25082 in k24943 in k24940 in k24937 in k24934 in k24878 in k24875 in k24872 in k24869 in k24866 in k24863 in k24860 in k24857 in k23555 in k23486 in k23293 in k23290 in k23185 in k23134 in k11783 in k10718 in k10715 in k7274 in k7271 in k6978 in k6975 in k6971 in k6680 in k6677 in k6674 in k6671 */
static void C_ccall f_33727(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
if(C_truep(t1)){
C_trace("error");
t2=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t2))(4,t2,((C_word*)t0)[3],lf[14],((C_word*)((C_word*)t0)[2])[1]);}
else{
t2=((C_word*)t0)[3];
f_33719(2,t2,C_SCHEME_UNDEFINED);}}

/* k33717 in k33710 in k33559 in k33556 in mm:make-press in k30217 in k26697 in k26694 in k26691 in k26688 in k26263 in k26260 in k26257 in k26254 in k26251 in k25668 in k25665 in k25142 in k25139 in k25136 in k25133 in k25130 in k25127 in k25124 in k25121 in k25118 in k25115 in k25112 in k25109 in k25106 in k25103 in k25100 in k25097 in k25094 in k25091 in k25088 in k25085 in k25082 in k24943 in k24940 in k24937 in k24934 in k24878 in k24875 in k24872 in k24869 in k24866 in k24863 in k24860 in k24857 in k23555 in k23486 in k23293 in k23290 in k23185 in k23134 in k11783 in k10718 in k10715 in k7274 in k7271 in k6978 in k6975 in k6971 in k6680 in k6677 in k6674 in k6671 */
static void C_ccall f_33719(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word *a;
t2=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[3])[1]);
t4=C_mutate(((C_word *)((C_word*)t0)[3])+1,t3);
t5=((C_word*)t0)[2];
f_33564(t5,t4);}

/* k33681 in k33559 in k33556 in mm:make-press in k30217 in k26697 in k26694 in k26691 in k26688 in k26263 in k26260 in k26257 in k26254 in k26251 in k25668 in k25665 in k25142 in k25139 in k25136 in k25133 in k25130 in k25127 in k25124 in k25121 in k25118 in k25115 in k25112 in k25109 in k25106 in k25103 in k25100 in k25097 in k25094 in k25091 in k25088 in k25085 in k25082 in k24943 in k24940 in k24937 in k24934 in k24878 in k24875 in k24872 in k24869 in k24866 in k24863 in k24860 in k24857 in k23555 in k23486 in k23293 in k23290 in k23185 in k23134 in k11783 in k10718 in k10715 in k7274 in k7271 in k6978 in k6975 in k6971 in k6680 in k6677 in k6674 in k6671 */
static void C_ccall f_33683(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_33683,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_33687,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("error");
t4=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[21],((C_word*)t0)[2]);}
else{
t4=t2;
f_33687(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k33685 in k33681 in k33559 in k33556 in mm:make-press in k30217 in k26697 in k26694 in k26691 in k26688 in k26263 in k26260 in k26257 in k26254 in k26251 in k25668 in k25665 in k25142 in k25139 in k25136 in k25133 in k25130 in k25127 in k25124 in k25121 in k25118 in k25115 in k25112 in k25109 in k25106 in k25103 in k25100 in k25097 in k25094 in k25091 in k25088 in k25085 in k25082 in k24943 in k24940 in k24937 in k24934 in k24878 in k24875 in k24872 in k24869 in k24866 in k24863 in k24860 in k24857 in k23555 in k23486 in k23293 in k23290 in k23185 in k23134 in k11783 in k10718 in k10715 in k7274 in k7271 in k6978 in k6975 in k6971 in k6680 in k6677 in k6674 in k6671 */
static void C_ccall f_33687(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_33564(t7,t6);}

/* k33646 in k33559 in k33556 in mm:make-press in k30217 in k26697 in k26694 in k26691 in k26688 in k26263 in k26260 in k26257 in k26254 in k26251 in k25668 in k25665 in k25142 in k25139 in k25136 in k25133 in k25130 in k25127 in k25124 in k25121 in k25118 in k25115 in k25112 in k25109 in k25106 in k25103 in k25100 in k25097 in k25094 in k25091 in k25088 in k25085 in k25082 in k24943 in k24940 in k24937 in k24934 in k24878 in k24875 in k24872 in k24869 in k24866 in k24863 in k24860 in k24857 in k23555 in k23486 in k23293 in k23290 in k23185 in k23134 in k11783 in k10718 in k10715 in k7274 in k7271 in k6978 in k6975 in k6971 in k6680 in k6677 in k6674 in k6671 */
static void C_ccall f_33648(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_33648,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_33652,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("error");
t4=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[21],((C_word*)t0)[2]);}
else{
t4=t2;
f_33652(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k33650 in k33646 in k33559 in k33556 in mm:make-press in k30217 in k26697 in k26694 in k26691 in k26688 in k26263 in k26260 in k26257 in k26254 in k26251 in k25668 in k25665 in k25142 in k25139 in k25136 in k25133 in k25130 in k25127 in k25124 in k25121 in k25118 in k25115 in k25112 in k25109 in k25106 in k25103 in k25100 in k25097 in k25094 in k25091 in k25088 in k25085 in k25082 in k24943 in k24940 in k24937 in k24934 in k24878 in k24875 in k24872 in k24869 in k24866 in k24863 in k24860 in k24857 in k23555 in k23486 in k23293 in k23290 in k23185 in k23134 in k11783 in k10718 in k10715 in k7274 in k7271 in k6978 in k6975 in k6971 in k6680 in k6677 in k6674 in k6671 */
static void C_ccall f_33652(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_33564(t7,t6);}

/* k33611 in k33559 in k33556 in mm:make-press in k30217 in k26697 in k26694 in k26691 in k26688 in k26263 in k26260 in k26257 in k26254 in k26251 in k25668 in k25665 in k25142 in k25139 in k25136 in k25133 in k25130 in k25127 in k25124 in k25121 in k25118 in k25115 in k25112 in k25109 in k25106 in k25103 in k25100 in k25097 in k25094 in k25091 in k25088 in k25085 in k25082 in k24943 in k24940 in k24937 in k24934 in k24878 in k24875 in k24872 in k24869 in k24866 in k24863 in k24860 in k24857 in k23555 in k23486 in k23293 in k23290 in k23185 in k23134 in k11783 in k10718 in k10715 in k7274 in k7271 in k6978 in k6975 in k6971 in k6680 in k6677 in k6674 in k6671 */
static void C_ccall f_33613(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_33613,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_33617,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("error");
t4=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[21],((C_word*)t0)[2]);}
else{
t4=t2;
f_33617(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k33615 in k33611 in k33559 in k33556 in mm:make-press in k30217 in k26697 in k26694 in k26691 in k26688 in k26263 in k26260 in k26257 in k26254 in k26251 in k25668 in k25665 in k25142 in k25139 in k25136 in k25133 in k25130 in k25127 in k25124 in k25121 in k25118 in k25115 in k25112 in k25109 in k25106 in k25103 in k25100 in k25097 in k25094 in k25091 in k25088 in k25085 in k25082 in k24943 in k24940 in k24937 in k24934 in k24878 in k24875 in k24872 in k24869 in k24866 in k24863 in k24860 in k24857 in k23555 in k23486 in k23293 in k23290 in k23185 in k23134 in k11783 in k10718 in k10715 in k7274 in k7271 in k6978 in k6975 in k6971 in k6680 in k6677 in k6674 in k6671 */
static void C_ccall f_33617(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_33564(t7,t6);}

/* k33562 in k33559 in k33556 in mm:make-press in k30217 in k26697 in k26694 in k26691 in k26688 in k26263 in k26260 in k26257 in k26254 in k26251 in k25668 in k25665 in k25142 in k25139 in k25136 in k25133 in k25130 in k25127 in k25124 in k25121 in k25118 in k25115 in k25112 in k25109 in k25106 in k25103 in k25100 in k25097 in k25094 in k25091 in k25088 in k25085 in k25082 in k24943 in k24940 in k24937 in k24934 in k24878 in k24875 in k24872 in k24869 in k24866 in k24863 in k24860 in k24857 in k23555 in k23486 in k23293 in k23290 in k23185 in k23134 in k11783 in k10718 in k10715 in k7274 in k7271 in k6978 in k6975 in k6971 in k6680 in k6677 in k6674 in k6671 */
static void C_fcall f_33564(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[6],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_33564,NULL,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_33567,a[2]=((C_word*)t0)[4],a[3]=((C_word*)t0)[5],a[4]=((C_word*)t0)[6],a[5]=((C_word*)t0)[7],tmp=(C_word)a,a+=6,tmp);
if(C_truep((C_word)C_i_nullp(((C_word*)((C_word*)t0)[3])[1]))){
t3=t2;
f_33567(2,t3,C_SCHEME_UNDEFINED);}
else{
C_trace("error");
t3=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t3))(4,t3,t2,lf[5],((C_word*)t0)[2]);}}

/* k33565 in k33562 in k33559 in k33556 in mm:make-press in k30217 in k26697 in k26694 in k26691 in k26688 in k26263 in k26260 in k26257 in k26254 in k26251 in k25668 in k25665 in k25142 in k25139 in k25136 in k25133 in k25130 in k25127 in k25124 in k25121 in k25118 in k25115 in k25112 in k25109 in k25106 in k25103 in k25100 in k25097 in k25094 in k25091 in k25088 in k25085 in k25082 in k24943 in k24940 in k24937 in k24934 in k24878 in k24875 in k24872 in k24869 in k24866 in k24863 in k24860 in k24857 in k23555 in k23486 in k23293 in k23290 in k23185 in k23134 in k11783 in k10718 in k10715 in k7274 in k7271 in k6978 in k6975 in k6971 in k6680 in k6677 in k6674 in k6671 */
static void C_ccall f_33567(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word ab[3],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_33567,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_33571,a[2]=((C_word)li494),tmp=(C_word)a,a+=3,tmp);
((C_proc7)(void*)(*((C_word*)t2+1)))(7,t2,((C_word*)t0)[5],C_retrieve(lf[727]),((C_word*)((C_word*)t0)[4])[1],((C_word*)((C_word*)t0)[3])[1],((C_word*)((C_word*)t0)[2])[1],C_fix(0));}

/* f_33571 in k33565 in k33562 in k33559 in k33556 in mm:make-press in k30217 in k26697 in k26694 in k26691 in k26688 in k26263 in k26260 in k26257 in k26254 in k26251 in k25668 in k25665 in k25142 in k25139 in k25136 in k25133 in k25130 in k25127 in k25124 in k25121 in k25118 in k25115 in k25112 in k25109 in k25106 in k25103 in k25100 in k25097 in k25094 in k25091 in k25088 in k25085 in k25082 in k24943 in k24940 in k24937 in k24934 in k24878 in k24875 in k24872 in k24869 in k24866 in k24863 in k24860 in k24857 in k23555 in k23486 in k23293 in k23290 in k23185 in k23134 in k11783 in k10718 in k10715 in k7274 in k7271 in k6978 in k6975 in k6971 in k6680 in k6677 in k6674 in k6671 */
static void C_ccall f_33571(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4,C_word t5,C_word t6){
C_word tmp;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word ab[5],*a=ab;
if(c!=7) C_bad_argc_2(c,7,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr7,(void*)f_33571,7,t0,t1,t2,t3,t4,t5,t6);}
t7=(C_word)C_a_i_bytevector(&a,1,C_fix(3));
t8=(C_word)C_i_foreign_fixnum_argumentp(t2);
t9=(C_word)C_i_foreign_flonum_argumentp(t3);
t10=(C_word)C_i_foreign_fixnum_argumentp(t4);
t11=(C_word)C_i_foreign_fixnum_argumentp(t5);
t12=(C_word)C_i_foreign_fixnum_argumentp(t6);
t13=t1;
((C_proc2)(void*)(*((C_word*)t13+1)))(2,t13,(C_word)stub5686(t7,t8,t9,t10,t11,t12));}

/* mm:prog? in k30217 in k26697 in k26694 in k26691 in k26688 in k26263 in k26260 in k26257 in k26254 in k26251 in k25668 in k25665 in k25142 in k25139 in k25136 in k25133 in k25130 in k25127 in k25124 in k25121 in k25118 in k25115 in k25112 in k25109 in k25106 in k25103 in k25100 in k25097 in k25094 in k25091 in k25088 in k25085 in k25082 in k24943 in k24940 in k24937 in k24934 in k24878 in k24875 in k24872 in k24869 in k24866 in k24863 in k24860 in k24857 in k23555 in k23486 in k23293 in k23290 in k23185 in k23134 in k11783 in k10718 in k10715 in k7274 in k7271 in k6978 in k6975 in k6971 in k6680 in k6677 in k6674 in k6671 */
static void C_ccall f_33535(C_word c,C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word ab[3],*a=ab;
if(c!=3) C_bad_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr3,(void*)f_33535,3,t0,t1,t2);}
t3=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_33540,a[2]=((C_word)li492),tmp=(C_word)a,a+=3,tmp);
((C_proc4)(void*)(*((C_word*)t3+1)))(4,t3,t1,t2,C_retrieve(lf[726]));}

/* f_33540 in mm:prog? in k30217 in k26697 in k26694 in k26691 in k26688 in k26263 in k26260 in k26257 in k26254 in k26251 in k25668 in k25665 in k25142 in k25139 in k25136 in k25133 in k25130 in k25127 in k25124 in k25121 in k25118 in k25115 in k25112 in k25109 in k25106 in k25103 in k25100 in k25097 in k25094 in k25091 in k25088 in k25085 in k25082 in k24943 in k24940 in k24937 in k24934 in k24878 in k24875 in k24872 in k24869 in k24866 in k24863 in k24860 in k24857 in k23555 in k23486 in k23293 in k23290 in k23185 in k23134 in k11783 in k10718 in k10715 in k7274 in k7271 in k6978 in k6975 in k6971 in k6680 in k6677 in k6674 in k6671 */
static void C_ccall f_33540(C_word c,C_word t0,C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word t6;
C_word *a;
if(c!=4) C_bad_argc_2(c,4,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr4,(void*)f_33540,4,t0,t1,t2,t3);}
t4=(C_truep(t2)?(C_word)C_i_foreign_pointer_argumentp(t2):C_SCHEME_FALSE);
t5=(C_word)C_i_foreign_fixnum_argumentp(t3);
t6=t1;
((C_proc2)(void*)(*((C_word*)t6+1)))(2,t6,(C_word)stub5607(C_SCHEME_UNDEFINED,t4,t5));}

/* mm:make-prog in k30217 in k26697 in k26694 in k26691 in k26688 in k26263 in k26260 in k26257 in k26254 in k26251 in k25668 in k25665 in k25142 in k25139 in k25136 in k25133 in k25130 in k25127 in k25124 in k25121 in k25118 in k25115 in k25112 in k25109 in k25106 in k25103 in k25100 in k25097 in k25094 in k25091 in k25088 in k25085 in k25082 in k24943 in k24940 in k24937 in k24934 in k24878 in k24875 in k24872 in k24869 in k24866 in k24863 in k24860 in k24857 in k23555 in k23486 in k23293 in k23290 in k23185 in k23134 in k11783 in k10718 in k10715 in k7274 in k7271 in k6978 in k6975 in k6971 in k6680 in k6677 in k6674 in k6671 */
static void C_ccall f_33084(C_word c,C_word t0,C_word t1,...){
C_word tmp;
C_word t2;
va_list v;
C_word *a,c2=c;
C_save_rest(t1,c2,2);
C_check_for_interrupt;
if(!C_demand(c*C_SIZEOF_PAIR+58)){
C_save_and_reclaim((void*)tr2r,(void*)f_33084r,2,t0,t1);}
else{
a=C_alloc((c-2)*3);
t2=C_restore_rest(a,C_rest_count(0));
f_33084r(t0,t1,t2);}}

static void C_ccall f_33084r(C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word t14;
C_word t15;
C_word t16;
C_word t17;
C_word t18;
C_word t19;
C_word t20;
C_word t21;
C_word t22;
C_word t23;
C_word t24;
C_word t25;
C_word t26;
C_word t27;
C_word t28;
C_word *a=C_alloc(58);
t3=C_fix(0);
t4=(*a=C_VECTOR_TYPE|1,a[1]=t3,tmp=(C_word)a,a+=2,tmp);
t5=C_fix(0);
t6=(*a=C_VECTOR_TYPE|1,a[1]=t5,tmp=(C_word)a,a+=2,tmp);
t7=C_fix(0);
t8=(*a=C_VECTOR_TYPE|1,a[1]=t7,tmp=(C_word)a,a+=2,tmp);
t9=C_SCHEME_FALSE;
t10=(*a=C_VECTOR_TYPE|1,a[1]=t9,tmp=(C_word)a,a+=2,tmp);
t11=C_SCHEME_FALSE;
t12=(*a=C_VECTOR_TYPE|1,a[1]=t11,tmp=(C_word)a,a+=2,tmp);
t13=C_SCHEME_FALSE;
t14=(*a=C_VECTOR_TYPE|1,a[1]=t13,tmp=(C_word)a,a+=2,tmp);
t15=t2;
t16=(*a=C_VECTOR_TYPE|1,a[1]=t15,tmp=(C_word)a,a+=2,tmp);
t17=C_SCHEME_FALSE;
t18=(*a=C_VECTOR_TYPE|1,a[1]=t17,tmp=(C_word)a,a+=2,tmp);
t19=(*a=C_CLOSURE_TYPE|11,a[1]=(C_word)f_33088,a[2]=t14,a[3]=t12,a[4]=t18,a[5]=t10,a[6]=t2,a[7]=t16,a[8]=t6,a[9]=t8,a[10]=t4,a[11]=t1,tmp=(C_word)a,a+=12,tmp);
if(C_truep((C_word)C_i_nullp(((C_word*)t16)[1]))){
t20=t19;
f_33088(t20,C_SCHEME_UNDEFINED);}
else{
t20=(C_word)C_i_car(((C_word*)t16)[1]);
t21=(C_word)C_eqp(t20,lf[730]);
if(C_truep(t21)){
t22=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_33413,a[2]=t2,a[3]=t19,a[4]=t16,a[5]=t18,a[6]=t10,a[7]=t4,tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)t10)[1])){
C_trace("error");
t23=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t23))(4,t23,t22,lf[19],lf[730]);}
else{
t23=t22;
f_33413(2,t23,C_SCHEME_UNDEFINED);}}
else{
t22=(C_word)C_eqp(t20,lf[738]);
if(C_truep(t22)){
t23=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_33448,a[2]=t2,a[3]=t19,a[4]=t16,a[5]=t18,a[6]=t12,a[7]=t6,tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)t12)[1])){
C_trace("error");
t24=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t24))(4,t24,t23,lf[19],lf[738]);}
else{
t24=t23;
f_33448(2,t24,C_SCHEME_UNDEFINED);}}
else{
t23=(C_word)C_eqp(t20,lf[733]);
if(C_truep(t23)){
t24=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_33483,a[2]=t2,a[3]=t19,a[4]=t16,a[5]=t18,a[6]=t14,a[7]=t8,tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)t14)[1])){
C_trace("error");
t25=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t25))(4,t25,t24,lf[19],lf[733]);}
else{
t25=t24;
f_33483(2,t25,C_SCHEME_UNDEFINED);}}
else{
t24=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_33512,a[2]=t19,a[3]=t10,a[4]=t4,a[5]=t16,tmp=(C_word)a,a+=6,tmp);
if(C_truep(((C_word*)t18)[1])){
C_trace("error");
t25=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t25))(4,t25,t24,lf[10],t2);}
else{
t25=t24;
f_33512(2,t25,C_SCHEME_UNDEFINED);}}}}}}

/* k33510 in mm:make-prog in k30217 in k26697 in k26694 in k26691 in k26688 in k26263 in k26260 in k26257 in k26254 in k26251 in k25668 in k25665 in k25142 in k25139 in k25136 in k25133 in k25130 in k25127 in k25124 in k25121 in k25118 in k25115 in k25112 in k25109 in k25106 in k25103 in k25100 in k25097 in k25094 in k25091 in k25088 in k25085 in k25082 in k24943 in k24940 in k24937 in k24934 in k24878 in k24875 in k24872 in k24869 in k24866 in k24863 in k24860 in k24857 in k23555 in k23486 in k23293 in k23290 in k23185 in k23134 in k11783 in k10718 in k10715 in k7274 in k7271 in k6978 in k6975 in k6971 in k6680 in k6677 in k6674 in k6671 */
static void C_ccall f_33512(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_33512,2,t0,t1);}
t2=(C_word)C_i_car(((C_word*)((C_word*)t0)[5])[1]);
t3=C_mutate(((C_word *)((C_word*)t0)[4])+1,t2);
t4=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_33519,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[5],a[4]=((C_word*)t0)[3],tmp=(C_word)a,a+=5,tmp);
t5=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_33527,a[2]=((C_word*)t0)[4],a[3]=t4,tmp=(C_word)a,a+=4,tmp);
C_trace("keyword?");
t6=C_retrieve(lf[13]);
((C_proc3)C_retrieve_proc(t6))(3,t6,t5,((C_word*)((C_word*)t0)[4])[1]);}

/* k33525 in k33510 in mm:make-prog in k30217 in k26697 in k26694 in k26691 in k26688 in k26263 in k26260 in k26257 in k26254 in k26251 in k25668 in k25665 in k25142 in k25139 in k25136 in k25133 in k25130 in k25127 in k25124 in k25121 in k25118 in k25115 in k25112 in k25109 in k25106 in k25103 in k25100 in k25097 in k25094 in k25091 in k25088 in k25085 in k25082 in k24943 in k24940 in k24937 in k24934 in k24878 in k24875 in k24872 in k24869 in k24866 in k24863 in k24860 in k24857 in k23555 in k23486 in k23293 in k23290 in k23185 in k23134 in k11783 in k10718 in k10715 in k7274 in k7271 in k6978 in k6975 in k6971 in k6680 in k6677 in k6674 in k6671 */
static void C_ccall f_33527(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
if(C_truep(t1)){
C_trace("error");
t2=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t2))(4,t2,((C_word*)t0)[3],lf[14],((C_word*)((C_word*)t0)[2])[1]);}
else{
t2=((C_word*)t0)[3];
f_33519(2,t2,C_SCHEME_UNDEFINED);}}

/* k33517 in k33510 in mm:make-prog in k30217 in k26697 in k26694 in k26691 in k26688 in k26263 in k26260 in k26257 in k26254 in k26251 in k25668 in k25665 in k25142 in k25139 in k25136 in k25133 in k25130 in k25127 in k25124 in k25121 in k25118 in k25115 in k25112 in k25109 in k25106 in k25103 in k25100 in k25097 in k25094 in k25091 in k25088 in k25085 in k25082 in k24943 in k24940 in k24937 in k24934 in k24878 in k24875 in k24872 in k24869 in k24866 in k24863 in k24860 in k24857 in k23555 in k23486 in k23293 in k23290 in k23185 in k23134 in k11783 in k10718 in k10715 in k7274 in k7271 in k6978 in k6975 in k6971 in k6680 in k6677 in k6674 in k6671 */
static void C_ccall f_33519(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word *a;
t2=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[3])[1]);
t4=C_mutate(((C_word *)((C_word*)t0)[3])+1,t3);
t5=((C_word*)t0)[2];
f_33088(t5,t4);}

/* k33481 in mm:make-prog in k30217 in k26697 in k26694 in k26691 in k26688 in k26263 in k26260 in k26257 in k26254 in k26251 in k25668 in k25665 in k25142 in k25139 in k25136 in k25133 in k25130 in k25127 in k25124 in k25121 in k25118 in k25115 in k25112 in k25109 in k25106 in k25103 in k25100 in k25097 in k25094 in k25091 in k25088 in k25085 in k25082 in k24943 in k24940 in k24937 in k24934 in k24878 in k24875 in k24872 in k24869 in k24866 in k24863 in k24860 in k24857 in k23555 in k23486 in k23293 in k23290 in k23185 in k23134 in k11783 in k10718 in k10715 in k7274 in k7271 in k6978 in k6975 in k6971 in k6680 in k6677 in k6674 in k6671 */
static void C_ccall f_33483(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_33483,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_33487,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("error");
t4=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[21],((C_word*)t0)[2]);}
else{
t4=t2;
f_33487(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k33485 in k33481 in mm:make-prog in k30217 in k26697 in k26694 in k26691 in k26688 in k26263 in k26260 in k26257 in k26254 in k26251 in k25668 in k25665 in k25142 in k25139 in k25136 in k25133 in k25130 in k25127 in k25124 in k25121 in k25118 in k25115 in k25112 in k25109 in k25106 in k25103 in k25100 in k25097 in k25094 in k25091 in k25088 in k25085 in k25082 in k24943 in k24940 in k24937 in k24934 in k24878 in k24875 in k24872 in k24869 in k24866 in k24863 in k24860 in k24857 in k23555 in k23486 in k23293 in k23290 in k23185 in k23134 in k11783 in k10718 in k10715 in k7274 in k7271 in k6978 in k6975 in k6971 in k6680 in k6677 in k6674 in k6671 */
static void C_ccall f_33487(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_33088(t7,t6);}

/* k33446 in mm:make-prog in k30217 in k26697 in k26694 in k26691 in k26688 in k26263 in k26260 in k26257 in k26254 in k26251 in k25668 in k25665 in k25142 in k25139 in k25136 in k25133 in k25130 in k25127 in k25124 in k25121 in k25118 in k25115 in k25112 in k25109 in k25106 in k25103 in k25100 in k25097 in k25094 in k25091 in k25088 in k25085 in k25082 in k24943 in k24940 in k24937 in k24934 in k24878 in k24875 in k24872 in k24869 in k24866 in k24863 in k24860 in k24857 in k23555 in k23486 in k23293 in k23290 in k23185 in k23134 in k11783 in k10718 in k10715 in k7274 in k7271 in k6978 in k6975 in k6971 in k6680 in k6677 in k6674 in k6671 */
static void C_ccall f_33448(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_33448,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_33452,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("error");
t4=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[21],((C_word*)t0)[2]);}
else{
t4=t2;
f_33452(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k33450 in k33446 in mm:make-prog in k30217 in k26697 in k26694 in k26691 in k26688 in k26263 in k26260 in k26257 in k26254 in k26251 in k25668 in k25665 in k25142 in k25139 in k25136 in k25133 in k25130 in k25127 in k25124 in k25121 in k25118 in k25115 in k25112 in k25109 in k25106 in k25103 in k25100 in k25097 in k25094 in k25091 in k25088 in k25085 in k25082 in k24943 in k24940 in k24937 in k24934 in k24878 in k24875 in k24872 in k24869 in k24866 in k24863 in k24860 in k24857 in k23555 in k23486 in k23293 in k23290 in k23185 in k23134 in k11783 in k10718 in k10715 in k7274 in k7271 in k6978 in k6975 in k6971 in k6680 in k6677 in k6674 in k6671 */
static void C_ccall f_33452(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_33088(t7,t6);}

/* k33411 in mm:make-prog in k30217 in k26697 in k26694 in k26691 in k26688 in k26263 in k26260 in k26257 in k26254 in k26251 in k25668 in k25665 in k25142 in k25139 in k25136 in k25133 in k25130 in k25127 in k25124 in k25121 in k25118 in k25115 in k25112 in k25109 in k25106 in k25103 in k25100 in k25097 in k25094 in k25091 in k25088 in k25085 in k25082 in k24943 in k24940 in k24937 in k24934 in k24878 in k24875 in k24872 in k24869 in k24866 in k24863 in k24860 in k24857 in k23555 in k23486 in k23293 in k23290 in k23185 in k23134 in k11783 in k10718 in k10715 in k7274 in k7271 in k6978 in k6975 in k6971 in k6680 in k6677 in k6674 in k6671 */
static void C_ccall f_33413(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_33413,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_33417,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("error");
t4=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[21],((C_word*)t0)[2]);}
else{
t4=t2;
f_33417(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k33415 in k33411 in mm:make-prog in k30217 in k26697 in k26694 in k26691 in k26688 in k26263 in k26260 in k26257 in k26254 in k26251 in k25668 in k25665 in k25142 in k25139 in k25136 in k25133 in k25130 in k25127 in k25124 in k25121 in k25118 in k25115 in k25112 in k25109 in k25106 in k25103 in k25100 in k25097 in k25094 in k25091 in k25088 in k25085 in k25082 in k24943 in k24940 in k24937 in k24934 in k24878 in k24875 in k24872 in k24869 in k24866 in k24863 in k24860 in k24857 in k23555 in k23486 in k23293 in k23290 in k23185 in k23134 in k11783 in k10718 in k10715 in k7274 in k7271 in k6978 in k6975 in k6971 in k6680 in k6677 in k6674 in k6671 */
static void C_ccall f_33417(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_33088(t7,t6);}

/* k33086 in mm:make-prog in k30217 in k26697 in k26694 in k26691 in k26688 in k26263 in k26260 in k26257 in k26254 in k26251 in k25668 in k25665 in k25142 in k25139 in k25136 in k25133 in k25130 in k25127 in k25124 in k25121 in k25118 in k25115 in k25112 in k25109 in k25106 in k25103 in k25100 in k25097 in k25094 in k25091 in k25088 in k25085 in k25082 in k24943 in k24940 in k24937 in k24934 in k24878 in k24875 in k24872 in k24869 in k24866 in k24863 in k24860 in k24857 in k23555 in k23486 in k23293 in k23290 in k23185 in k23134 in k11783 in k10718 in k10715 in k7274 in k7271 in k6978 in k6975 in k6971 in k6680 in k6677 in k6674 in k6671 */
static void C_fcall f_33088(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word ab[42],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_33088,NULL,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|11,a[1]=(C_word)f_33091,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],a[7]=((C_word*)t0)[7],a[8]=((C_word*)t0)[8],a[9]=((C_word*)t0)[9],a[10]=((C_word*)t0)[10],a[11]=((C_word*)t0)[11],tmp=(C_word)a,a+=12,tmp);
if(C_truep((C_word)C_i_nullp(((C_word*)((C_word*)t0)[7])[1]))){
t3=t2;
f_33091(t3,C_SCHEME_UNDEFINED);}
else{
t3=(C_word)C_i_car(((C_word*)((C_word*)t0)[7])[1]);
t4=(C_word)C_eqp(t3,lf[730]);
if(C_truep(t4)){
t5=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_33278,a[2]=((C_word*)t0)[6],a[3]=t2,a[4]=((C_word*)t0)[7],a[5]=((C_word*)t0)[4],a[6]=((C_word*)t0)[5],a[7]=((C_word*)t0)[10],tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)((C_word*)t0)[5])[1])){
C_trace("error");
t6=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t6))(4,t6,t5,lf[19],lf[730]);}
else{
t6=t5;
f_33278(2,t6,C_SCHEME_UNDEFINED);}}
else{
t5=(C_word)C_eqp(t3,lf[738]);
if(C_truep(t5)){
t6=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_33313,a[2]=((C_word*)t0)[6],a[3]=t2,a[4]=((C_word*)t0)[7],a[5]=((C_word*)t0)[4],a[6]=((C_word*)t0)[3],a[7]=((C_word*)t0)[8],tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)((C_word*)t0)[3])[1])){
C_trace("error");
t7=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t7))(4,t7,t6,lf[19],lf[738]);}
else{
t7=t6;
f_33313(2,t7,C_SCHEME_UNDEFINED);}}
else{
t6=(C_word)C_eqp(t3,lf[733]);
if(C_truep(t6)){
t7=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_33348,a[2]=((C_word*)t0)[6],a[3]=t2,a[4]=((C_word*)t0)[7],a[5]=((C_word*)t0)[4],a[6]=((C_word*)t0)[2],a[7]=((C_word*)t0)[9],tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)((C_word*)t0)[2])[1])){
C_trace("error");
t8=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t8))(4,t8,t7,lf[19],lf[733]);}
else{
t8=t7;
f_33348(2,t8,C_SCHEME_UNDEFINED);}}
else{
t7=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_33377,a[2]=t2,a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[8],a[5]=((C_word*)t0)[7],tmp=(C_word)a,a+=6,tmp);
if(C_truep(((C_word*)((C_word*)t0)[4])[1])){
C_trace("error");
t8=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t8))(4,t8,t7,lf[10],((C_word*)t0)[6]);}
else{
t8=t7;
f_33377(2,t8,C_SCHEME_UNDEFINED);}}}}}}

/* k33375 in k33086 in mm:make-prog in k30217 in k26697 in k26694 in k26691 in k26688 in k26263 in k26260 in k26257 in k26254 in k26251 in k25668 in k25665 in k25142 in k25139 in k25136 in k25133 in k25130 in k25127 in k25124 in k25121 in k25118 in k25115 in k25112 in k25109 in k25106 in k25103 in k25100 in k25097 in k25094 in k25091 in k25088 in k25085 in k25082 in k24943 in k24940 in k24937 in k24934 in k24878 in k24875 in k24872 in k24869 in k24866 in k24863 in k24860 in k24857 in k23555 in k23486 in k23293 in k23290 in k23185 in k23134 in k11783 in k10718 in k10715 in k7274 in k7271 in k6978 in k6975 in k6971 in k6680 in k6677 in k6674 in k6671 */
static void C_ccall f_33377(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_33377,2,t0,t1);}
t2=(C_word)C_i_car(((C_word*)((C_word*)t0)[5])[1]);
t3=C_mutate(((C_word *)((C_word*)t0)[4])+1,t2);
t4=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_33384,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[5],a[4]=((C_word*)t0)[3],tmp=(C_word)a,a+=5,tmp);
t5=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_33392,a[2]=((C_word*)t0)[4],a[3]=t4,tmp=(C_word)a,a+=4,tmp);
C_trace("keyword?");
t6=C_retrieve(lf[13]);
((C_proc3)C_retrieve_proc(t6))(3,t6,t5,((C_word*)((C_word*)t0)[4])[1]);}

/* k33390 in k33375 in k33086 in mm:make-prog in k30217 in k26697 in k26694 in k26691 in k26688 in k26263 in k26260 in k26257 in k26254 in k26251 in k25668 in k25665 in k25142 in k25139 in k25136 in k25133 in k25130 in k25127 in k25124 in k25121 in k25118 in k25115 in k25112 in k25109 in k25106 in k25103 in k25100 in k25097 in k25094 in k25091 in k25088 in k25085 in k25082 in k24943 in k24940 in k24937 in k24934 in k24878 in k24875 in k24872 in k24869 in k24866 in k24863 in k24860 in k24857 in k23555 in k23486 in k23293 in k23290 in k23185 in k23134 in k11783 in k10718 in k10715 in k7274 in k7271 in k6978 in k6975 in k6971 in k6680 in k6677 in k6674 in k6671 */
static void C_ccall f_33392(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
if(C_truep(t1)){
C_trace("error");
t2=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t2))(4,t2,((C_word*)t0)[3],lf[14],((C_word*)((C_word*)t0)[2])[1]);}
else{
t2=((C_word*)t0)[3];
f_33384(2,t2,C_SCHEME_UNDEFINED);}}

/* k33382 in k33375 in k33086 in mm:make-prog in k30217 in k26697 in k26694 in k26691 in k26688 in k26263 in k26260 in k26257 in k26254 in k26251 in k25668 in k25665 in k25142 in k25139 in k25136 in k25133 in k25130 in k25127 in k25124 in k25121 in k25118 in k25115 in k25112 in k25109 in k25106 in k25103 in k25100 in k25097 in k25094 in k25091 in k25088 in k25085 in k25082 in k24943 in k24940 in k24937 in k24934 in k24878 in k24875 in k24872 in k24869 in k24866 in k24863 in k24860 in k24857 in k23555 in k23486 in k23293 in k23290 in k23185 in k23134 in k11783 in k10718 in k10715 in k7274 in k7271 in k6978 in k6975 in k6971 in k6680 in k6677 in k6674 in k6671 */
static void C_ccall f_33384(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word *a;
t2=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[3])[1]);
t4=C_mutate(((C_word *)((C_word*)t0)[3])+1,t3);
t5=((C_word*)t0)[2];
f_33091(t5,t4);}

/* k33346 in k33086 in mm:make-prog in k30217 in k26697 in k26694 in k26691 in k26688 in k26263 in k26260 in k26257 in k26254 in k26251 in k25668 in k25665 in k25142 in k25139 in k25136 in k25133 in k25130 in k25127 in k25124 in k25121 in k25118 in k25115 in k25112 in k25109 in k25106 in k25103 in k25100 in k25097 in k25094 in k25091 in k25088 in k25085 in k25082 in k24943 in k24940 in k24937 in k24934 in k24878 in k24875 in k24872 in k24869 in k24866 in k24863 in k24860 in k24857 in k23555 in k23486 in k23293 in k23290 in k23185 in k23134 in k11783 in k10718 in k10715 in k7274 in k7271 in k6978 in k6975 in k6971 in k6680 in k6677 in k6674 in k6671 */
static void C_ccall f_33348(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_33348,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_33352,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("error");
t4=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[21],((C_word*)t0)[2]);}
else{
t4=t2;
f_33352(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k33350 in k33346 in k33086 in mm:make-prog in k30217 in k26697 in k26694 in k26691 in k26688 in k26263 in k26260 in k26257 in k26254 in k26251 in k25668 in k25665 in k25142 in k25139 in k25136 in k25133 in k25130 in k25127 in k25124 in k25121 in k25118 in k25115 in k25112 in k25109 in k25106 in k25103 in k25100 in k25097 in k25094 in k25091 in k25088 in k25085 in k25082 in k24943 in k24940 in k24937 in k24934 in k24878 in k24875 in k24872 in k24869 in k24866 in k24863 in k24860 in k24857 in k23555 in k23486 in k23293 in k23290 in k23185 in k23134 in k11783 in k10718 in k10715 in k7274 in k7271 in k6978 in k6975 in k6971 in k6680 in k6677 in k6674 in k6671 */
static void C_ccall f_33352(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_33091(t7,t6);}

/* k33311 in k33086 in mm:make-prog in k30217 in k26697 in k26694 in k26691 in k26688 in k26263 in k26260 in k26257 in k26254 in k26251 in k25668 in k25665 in k25142 in k25139 in k25136 in k25133 in k25130 in k25127 in k25124 in k25121 in k25118 in k25115 in k25112 in k25109 in k25106 in k25103 in k25100 in k25097 in k25094 in k25091 in k25088 in k25085 in k25082 in k24943 in k24940 in k24937 in k24934 in k24878 in k24875 in k24872 in k24869 in k24866 in k24863 in k24860 in k24857 in k23555 in k23486 in k23293 in k23290 in k23185 in k23134 in k11783 in k10718 in k10715 in k7274 in k7271 in k6978 in k6975 in k6971 in k6680 in k6677 in k6674 in k6671 */
static void C_ccall f_33313(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_33313,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_33317,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("error");
t4=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[21],((C_word*)t0)[2]);}
else{
t4=t2;
f_33317(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k33315 in k33311 in k33086 in mm:make-prog in k30217 in k26697 in k26694 in k26691 in k26688 in k26263 in k26260 in k26257 in k26254 in k26251 in k25668 in k25665 in k25142 in k25139 in k25136 in k25133 in k25130 in k25127 in k25124 in k25121 in k25118 in k25115 in k25112 in k25109 in k25106 in k25103 in k25100 in k25097 in k25094 in k25091 in k25088 in k25085 in k25082 in k24943 in k24940 in k24937 in k24934 in k24878 in k24875 in k24872 in k24869 in k24866 in k24863 in k24860 in k24857 in k23555 in k23486 in k23293 in k23290 in k23185 in k23134 in k11783 in k10718 in k10715 in k7274 in k7271 in k6978 in k6975 in k6971 in k6680 in k6677 in k6674 in k6671 */
static void C_ccall f_33317(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_33091(t7,t6);}

/* k33276 in k33086 in mm:make-prog in k30217 in k26697 in k26694 in k26691 in k26688 in k26263 in k26260 in k26257 in k26254 in k26251 in k25668 in k25665 in k25142 in k25139 in k25136 in k25133 in k25130 in k25127 in k25124 in k25121 in k25118 in k25115 in k25112 in k25109 in k25106 in k25103 in k25100 in k25097 in k25094 in k25091 in k25088 in k25085 in k25082 in k24943 in k24940 in k24937 in k24934 in k24878 in k24875 in k24872 in k24869 in k24866 in k24863 in k24860 in k24857 in k23555 in k23486 in k23293 in k23290 in k23185 in k23134 in k11783 in k10718 in k10715 in k7274 in k7271 in k6978 in k6975 in k6971 in k6680 in k6677 in k6674 in k6671 */
static void C_ccall f_33278(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_33278,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_33282,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("error");
t4=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[21],((C_word*)t0)[2]);}
else{
t4=t2;
f_33282(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k33280 in k33276 in k33086 in mm:make-prog in k30217 in k26697 in k26694 in k26691 in k26688 in k26263 in k26260 in k26257 in k26254 in k26251 in k25668 in k25665 in k25142 in k25139 in k25136 in k25133 in k25130 in k25127 in k25124 in k25121 in k25118 in k25115 in k25112 in k25109 in k25106 in k25103 in k25100 in k25097 in k25094 in k25091 in k25088 in k25085 in k25082 in k24943 in k24940 in k24937 in k24934 in k24878 in k24875 in k24872 in k24869 in k24866 in k24863 in k24860 in k24857 in k23555 in k23486 in k23293 in k23290 in k23185 in k23134 in k11783 in k10718 in k10715 in k7274 in k7271 in k6978 in k6975 in k6971 in k6680 in k6677 in k6674 in k6671 */
static void C_ccall f_33282(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_33091(t7,t6);}

/* k33089 in k33086 in mm:make-prog in k30217 in k26697 in k26694 in k26691 in k26688 in k26263 in k26260 in k26257 in k26254 in k26251 in k25668 in k25665 in k25142 in k25139 in k25136 in k25133 in k25130 in k25127 in k25124 in k25121 in k25118 in k25115 in k25112 in k25109 in k25106 in k25103 in k25100 in k25097 in k25094 in k25091 in k25088 in k25085 in k25082 in k24943 in k24940 in k24937 in k24934 in k24878 in k24875 in k24872 in k24869 in k24866 in k24863 in k24860 in k24857 in k23555 in k23486 in k23293 in k23290 in k23185 in k23134 in k11783 in k10718 in k10715 in k7274 in k7271 in k6978 in k6975 in k6971 in k6680 in k6677 in k6674 in k6671 */
static void C_fcall f_33091(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word ab[38],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_33091,NULL,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_33094,a[2]=((C_word*)t0)[6],a[3]=((C_word*)t0)[7],a[4]=((C_word*)t0)[8],a[5]=((C_word*)t0)[9],a[6]=((C_word*)t0)[10],a[7]=((C_word*)t0)[11],tmp=(C_word)a,a+=8,tmp);
if(C_truep((C_word)C_i_nullp(((C_word*)((C_word*)t0)[7])[1]))){
t3=t2;
f_33094(t3,C_SCHEME_UNDEFINED);}
else{
t3=(C_word)C_i_car(((C_word*)((C_word*)t0)[7])[1]);
t4=(C_word)C_eqp(t3,lf[730]);
if(C_truep(t4)){
t5=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_33143,a[2]=((C_word*)t0)[6],a[3]=t2,a[4]=((C_word*)t0)[7],a[5]=((C_word*)t0)[4],a[6]=((C_word*)t0)[5],a[7]=((C_word*)t0)[10],tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)((C_word*)t0)[5])[1])){
C_trace("error");
t6=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t6))(4,t6,t5,lf[19],lf[730]);}
else{
t6=t5;
f_33143(2,t6,C_SCHEME_UNDEFINED);}}
else{
t5=(C_word)C_eqp(t3,lf[738]);
if(C_truep(t5)){
t6=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_33178,a[2]=((C_word*)t0)[6],a[3]=t2,a[4]=((C_word*)t0)[7],a[5]=((C_word*)t0)[4],a[6]=((C_word*)t0)[3],a[7]=((C_word*)t0)[8],tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)((C_word*)t0)[3])[1])){
C_trace("error");
t7=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t7))(4,t7,t6,lf[19],lf[738]);}
else{
t7=t6;
f_33178(2,t7,C_SCHEME_UNDEFINED);}}
else{
t6=(C_word)C_eqp(t3,lf[733]);
if(C_truep(t6)){
t7=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_33213,a[2]=((C_word*)t0)[6],a[3]=t2,a[4]=((C_word*)t0)[7],a[5]=((C_word*)t0)[4],a[6]=((C_word*)t0)[2],a[7]=((C_word*)t0)[9],tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)((C_word*)t0)[2])[1])){
C_trace("error");
t8=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t8))(4,t8,t7,lf[19],lf[733]);}
else{
t8=t7;
f_33213(2,t8,C_SCHEME_UNDEFINED);}}
else{
t7=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_33242,a[2]=t2,a[3]=((C_word*)t0)[2],a[4]=((C_word*)t0)[9],a[5]=((C_word*)t0)[7],tmp=(C_word)a,a+=6,tmp);
if(C_truep(((C_word*)((C_word*)t0)[4])[1])){
C_trace("error");
t8=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t8))(4,t8,t7,lf[10],((C_word*)t0)[6]);}
else{
t8=t7;
f_33242(2,t8,C_SCHEME_UNDEFINED);}}}}}}

/* k33240 in k33089 in k33086 in mm:make-prog in k30217 in k26697 in k26694 in k26691 in k26688 in k26263 in k26260 in k26257 in k26254 in k26251 in k25668 in k25665 in k25142 in k25139 in k25136 in k25133 in k25130 in k25127 in k25124 in k25121 in k25118 in k25115 in k25112 in k25109 in k25106 in k25103 in k25100 in k25097 in k25094 in k25091 in k25088 in k25085 in k25082 in k24943 in k24940 in k24937 in k24934 in k24878 in k24875 in k24872 in k24869 in k24866 in k24863 in k24860 in k24857 in k23555 in k23486 in k23293 in k23290 in k23185 in k23134 in k11783 in k10718 in k10715 in k7274 in k7271 in k6978 in k6975 in k6971 in k6680 in k6677 in k6674 in k6671 */
static void C_ccall f_33242(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_33242,2,t0,t1);}
t2=(C_word)C_i_car(((C_word*)((C_word*)t0)[5])[1]);
t3=C_mutate(((C_word *)((C_word*)t0)[4])+1,t2);
t4=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_33249,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[5],a[4]=((C_word*)t0)[3],tmp=(C_word)a,a+=5,tmp);
t5=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_33257,a[2]=((C_word*)t0)[4],a[3]=t4,tmp=(C_word)a,a+=4,tmp);
C_trace("keyword?");
t6=C_retrieve(lf[13]);
((C_proc3)C_retrieve_proc(t6))(3,t6,t5,((C_word*)((C_word*)t0)[4])[1]);}

/* k33255 in k33240 in k33089 in k33086 in mm:make-prog in k30217 in k26697 in k26694 in k26691 in k26688 in k26263 in k26260 in k26257 in k26254 in k26251 in k25668 in k25665 in k25142 in k25139 in k25136 in k25133 in k25130 in k25127 in k25124 in k25121 in k25118 in k25115 in k25112 in k25109 in k25106 in k25103 in k25100 in k25097 in k25094 in k25091 in k25088 in k25085 in k25082 in k24943 in k24940 in k24937 in k24934 in k24878 in k24875 in k24872 in k24869 in k24866 in k24863 in k24860 in k24857 in k23555 in k23486 in k23293 in k23290 in k23185 in k23134 in k11783 in k10718 in k10715 in k7274 in k7271 in k6978 in k6975 in k6971 in k6680 in k6677 in k6674 in k6671 */
static void C_ccall f_33257(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
if(C_truep(t1)){
C_trace("error");
t2=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t2))(4,t2,((C_word*)t0)[3],lf[14],((C_word*)((C_word*)t0)[2])[1]);}
else{
t2=((C_word*)t0)[3];
f_33249(2,t2,C_SCHEME_UNDEFINED);}}

/* k33247 in k33240 in k33089 in k33086 in mm:make-prog in k30217 in k26697 in k26694 in k26691 in k26688 in k26263 in k26260 in k26257 in k26254 in k26251 in k25668 in k25665 in k25142 in k25139 in k25136 in k25133 in k25130 in k25127 in k25124 in k25121 in k25118 in k25115 in k25112 in k25109 in k25106 in k25103 in k25100 in k25097 in k25094 in k25091 in k25088 in k25085 in k25082 in k24943 in k24940 in k24937 in k24934 in k24878 in k24875 in k24872 in k24869 in k24866 in k24863 in k24860 in k24857 in k23555 in k23486 in k23293 in k23290 in k23185 in k23134 in k11783 in k10718 in k10715 in k7274 in k7271 in k6978 in k6975 in k6971 in k6680 in k6677 in k6674 in k6671 */
static void C_ccall f_33249(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word *a;
t2=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[3])[1]);
t4=C_mutate(((C_word *)((C_word*)t0)[3])+1,t3);
t5=((C_word*)t0)[2];
f_33094(t5,t4);}

/* k33211 in k33089 in k33086 in mm:make-prog in k30217 in k26697 in k26694 in k26691 in k26688 in k26263 in k26260 in k26257 in k26254 in k26251 in k25668 in k25665 in k25142 in k25139 in k25136 in k25133 in k25130 in k25127 in k25124 in k25121 in k25118 in k25115 in k25112 in k25109 in k25106 in k25103 in k25100 in k25097 in k25094 in k25091 in k25088 in k25085 in k25082 in k24943 in k24940 in k24937 in k24934 in k24878 in k24875 in k24872 in k24869 in k24866 in k24863 in k24860 in k24857 in k23555 in k23486 in k23293 in k23290 in k23185 in k23134 in k11783 in k10718 in k10715 in k7274 in k7271 in k6978 in k6975 in k6971 in k6680 in k6677 in k6674 in k6671 */
static void C_ccall f_33213(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_33213,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_33217,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("error");
t4=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[21],((C_word*)t0)[2]);}
else{
t4=t2;
f_33217(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k33215 in k33211 in k33089 in k33086 in mm:make-prog in k30217 in k26697 in k26694 in k26691 in k26688 in k26263 in k26260 in k26257 in k26254 in k26251 in k25668 in k25665 in k25142 in k25139 in k25136 in k25133 in k25130 in k25127 in k25124 in k25121 in k25118 in k25115 in k25112 in k25109 in k25106 in k25103 in k25100 in k25097 in k25094 in k25091 in k25088 in k25085 in k25082 in k24943 in k24940 in k24937 in k24934 in k24878 in k24875 in k24872 in k24869 in k24866 in k24863 in k24860 in k24857 in k23555 in k23486 in k23293 in k23290 in k23185 in k23134 in k11783 in k10718 in k10715 in k7274 in k7271 in k6978 in k6975 in k6971 in k6680 in k6677 in k6674 in k6671 */
static void C_ccall f_33217(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_33094(t7,t6);}

/* k33176 in k33089 in k33086 in mm:make-prog in k30217 in k26697 in k26694 in k26691 in k26688 in k26263 in k26260 in k26257 in k26254 in k26251 in k25668 in k25665 in k25142 in k25139 in k25136 in k25133 in k25130 in k25127 in k25124 in k25121 in k25118 in k25115 in k25112 in k25109 in k25106 in k25103 in k25100 in k25097 in k25094 in k25091 in k25088 in k25085 in k25082 in k24943 in k24940 in k24937 in k24934 in k24878 in k24875 in k24872 in k24869 in k24866 in k24863 in k24860 in k24857 in k23555 in k23486 in k23293 in k23290 in k23185 in k23134 in k11783 in k10718 in k10715 in k7274 in k7271 in k6978 in k6975 in k6971 in k6680 in k6677 in k6674 in k6671 */
static void C_ccall f_33178(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_33178,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_33182,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("error");
t4=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[21],((C_word*)t0)[2]);}
else{
t4=t2;
f_33182(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k33180 in k33176 in k33089 in k33086 in mm:make-prog in k30217 in k26697 in k26694 in k26691 in k26688 in k26263 in k26260 in k26257 in k26254 in k26251 in k25668 in k25665 in k25142 in k25139 in k25136 in k25133 in k25130 in k25127 in k25124 in k25121 in k25118 in k25115 in k25112 in k25109 in k25106 in k25103 in k25100 in k25097 in k25094 in k25091 in k25088 in k25085 in k25082 in k24943 in k24940 in k24937 in k24934 in k24878 in k24875 in k24872 in k24869 in k24866 in k24863 in k24860 in k24857 in k23555 in k23486 in k23293 in k23290 in k23185 in k23134 in k11783 in k10718 in k10715 in k7274 in k7271 in k6978 in k6975 in k6971 in k6680 in k6677 in k6674 in k6671 */
static void C_ccall f_33182(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_33094(t7,t6);}

/* k33141 in k33089 in k33086 in mm:make-prog in k30217 in k26697 in k26694 in k26691 in k26688 in k26263 in k26260 in k26257 in k26254 in k26251 in k25668 in k25665 in k25142 in k25139 in k25136 in k25133 in k25130 in k25127 in k25124 in k25121 in k25118 in k25115 in k25112 in k25109 in k25106 in k25103 in k25100 in k25097 in k25094 in k25091 in k25088 in k25085 in k25082 in k24943 in k24940 in k24937 in k24934 in k24878 in k24875 in k24872 in k24869 in k24866 in k24863 in k24860 in k24857 in k23555 in k23486 in k23293 in k23290 in k23185 in k23134 in k11783 in k10718 in k10715 in k7274 in k7271 in k6978 in k6975 in k6971 in k6680 in k6677 in k6674 in k6671 */
static void C_ccall f_33143(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_33143,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_33147,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("error");
t4=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[21],((C_word*)t0)[2]);}
else{
t4=t2;
f_33147(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k33145 in k33141 in k33089 in k33086 in mm:make-prog in k30217 in k26697 in k26694 in k26691 in k26688 in k26263 in k26260 in k26257 in k26254 in k26251 in k25668 in k25665 in k25142 in k25139 in k25136 in k25133 in k25130 in k25127 in k25124 in k25121 in k25118 in k25115 in k25112 in k25109 in k25106 in k25103 in k25100 in k25097 in k25094 in k25091 in k25088 in k25085 in k25082 in k24943 in k24940 in k24937 in k24934 in k24878 in k24875 in k24872 in k24869 in k24866 in k24863 in k24860 in k24857 in k23555 in k23486 in k23293 in k23290 in k23185 in k23134 in k11783 in k10718 in k10715 in k7274 in k7271 in k6978 in k6975 in k6971 in k6680 in k6677 in k6674 in k6671 */
static void C_ccall f_33147(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_33094(t7,t6);}

/* k33092 in k33089 in k33086 in mm:make-prog in k30217 in k26697 in k26694 in k26691 in k26688 in k26263 in k26260 in k26257 in k26254 in k26251 in k25668 in k25665 in k25142 in k25139 in k25136 in k25133 in k25130 in k25127 in k25124 in k25121 in k25118 in k25115 in k25112 in k25109 in k25106 in k25103 in k25100 in k25097 in k25094 in k25091 in k25088 in k25085 in k25082 in k24943 in k24940 in k24937 in k24934 in k24878 in k24875 in k24872 in k24869 in k24866 in k24863 in k24860 in k24857 in k23555 in k23486 in k23293 in k23290 in k23185 in k23134 in k11783 in k10718 in k10715 in k7274 in k7271 in k6978 in k6975 in k6971 in k6680 in k6677 in k6674 in k6671 */
static void C_fcall f_33094(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[6],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_33094,NULL,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_33097,a[2]=((C_word*)t0)[4],a[3]=((C_word*)t0)[5],a[4]=((C_word*)t0)[6],a[5]=((C_word*)t0)[7],tmp=(C_word)a,a+=6,tmp);
if(C_truep((C_word)C_i_nullp(((C_word*)((C_word*)t0)[3])[1]))){
t3=t2;
f_33097(2,t3,C_SCHEME_UNDEFINED);}
else{
C_trace("error");
t3=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t3))(4,t3,t2,lf[5],((C_word*)t0)[2]);}}

/* k33095 in k33092 in k33089 in k33086 in mm:make-prog in k30217 in k26697 in k26694 in k26691 in k26688 in k26263 in k26260 in k26257 in k26254 in k26251 in k25668 in k25665 in k25142 in k25139 in k25136 in k25133 in k25130 in k25127 in k25124 in k25121 in k25118 in k25115 in k25112 in k25109 in k25106 in k25103 in k25100 in k25097 in k25094 in k25091 in k25088 in k25085 in k25082 in k24943 in k24940 in k24937 in k24934 in k24878 in k24875 in k24872 in k24869 in k24866 in k24863 in k24860 in k24857 in k23555 in k23486 in k23293 in k23290 in k23185 in k23134 in k11783 in k10718 in k10715 in k7274 in k7271 in k6978 in k6975 in k6971 in k6680 in k6677 in k6674 in k6671 */
static void C_ccall f_33097(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word ab[3],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_33097,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_33101,a[2]=((C_word)li490),tmp=(C_word)a,a+=3,tmp);
((C_proc7)(void*)(*((C_word*)t2+1)))(7,t2,((C_word*)t0)[5],C_retrieve(lf[726]),((C_word*)((C_word*)t0)[4])[1],((C_word*)((C_word*)t0)[3])[1],((C_word*)((C_word*)t0)[2])[1],C_fix(0));}

/* f_33101 in k33095 in k33092 in k33089 in k33086 in mm:make-prog in k30217 in k26697 in k26694 in k26691 in k26688 in k26263 in k26260 in k26257 in k26254 in k26251 in k25668 in k25665 in k25142 in k25139 in k25136 in k25133 in k25130 in k25127 in k25124 in k25121 in k25118 in k25115 in k25112 in k25109 in k25106 in k25103 in k25100 in k25097 in k25094 in k25091 in k25088 in k25085 in k25082 in k24943 in k24940 in k24937 in k24934 in k24878 in k24875 in k24872 in k24869 in k24866 in k24863 in k24860 in k24857 in k23555 in k23486 in k23293 in k23290 in k23185 in k23134 in k11783 in k10718 in k10715 in k7274 in k7271 in k6978 in k6975 in k6971 in k6680 in k6677 in k6674 in k6671 */
static void C_ccall f_33101(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4,C_word t5,C_word t6){
C_word tmp;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word ab[5],*a=ab;
if(c!=7) C_bad_argc_2(c,7,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr7,(void*)f_33101,7,t0,t1,t2,t3,t4,t5,t6);}
t7=(C_word)C_a_i_bytevector(&a,1,C_fix(3));
t8=(C_word)C_i_foreign_fixnum_argumentp(t2);
t9=(C_word)C_i_foreign_flonum_argumentp(t3);
t10=(C_word)C_i_foreign_fixnum_argumentp(t4);
t11=(C_word)C_i_foreign_fixnum_argumentp(t5);
t12=(C_word)C_i_foreign_fixnum_argumentp(t6);
t13=t1;
((C_proc2)(void*)(*((C_word*)t13+1)))(2,t13,(C_word)stub5592(t7,t8,t9,t10,t11,t12));}

/* mm:ctrl? in k30217 in k26697 in k26694 in k26691 in k26688 in k26263 in k26260 in k26257 in k26254 in k26251 in k25668 in k25665 in k25142 in k25139 in k25136 in k25133 in k25130 in k25127 in k25124 in k25121 in k25118 in k25115 in k25112 in k25109 in k25106 in k25103 in k25100 in k25097 in k25094 in k25091 in k25088 in k25085 in k25082 in k24943 in k24940 in k24937 in k24934 in k24878 in k24875 in k24872 in k24869 in k24866 in k24863 in k24860 in k24857 in k23555 in k23486 in k23293 in k23290 in k23185 in k23134 in k11783 in k10718 in k10715 in k7274 in k7271 in k6978 in k6975 in k6971 in k6680 in k6677 in k6674 in k6671 */
static void C_ccall f_33065(C_word c,C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word ab[3],*a=ab;
if(c!=3) C_bad_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr3,(void*)f_33065,3,t0,t1,t2);}
t3=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_33070,a[2]=((C_word)li488),tmp=(C_word)a,a+=3,tmp);
((C_proc4)(void*)(*((C_word*)t3+1)))(4,t3,t1,t2,C_retrieve(lf[725]));}

/* f_33070 in mm:ctrl? in k30217 in k26697 in k26694 in k26691 in k26688 in k26263 in k26260 in k26257 in k26254 in k26251 in k25668 in k25665 in k25142 in k25139 in k25136 in k25133 in k25130 in k25127 in k25124 in k25121 in k25118 in k25115 in k25112 in k25109 in k25106 in k25103 in k25100 in k25097 in k25094 in k25091 in k25088 in k25085 in k25082 in k24943 in k24940 in k24937 in k24934 in k24878 in k24875 in k24872 in k24869 in k24866 in k24863 in k24860 in k24857 in k23555 in k23486 in k23293 in k23290 in k23185 in k23134 in k11783 in k10718 in k10715 in k7274 in k7271 in k6978 in k6975 in k6971 in k6680 in k6677 in k6674 in k6671 */
static void C_ccall f_33070(C_word c,C_word t0,C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word t6;
C_word *a;
if(c!=4) C_bad_argc_2(c,4,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr4,(void*)f_33070,4,t0,t1,t2,t3);}
t4=(C_truep(t2)?(C_word)C_i_foreign_pointer_argumentp(t2):C_SCHEME_FALSE);
t5=(C_word)C_i_foreign_fixnum_argumentp(t3);
t6=t1;
((C_proc2)(void*)(*((C_word*)t6+1)))(2,t6,(C_word)stub5513(C_SCHEME_UNDEFINED,t4,t5));}

/* mm:make-ctrl in k30217 in k26697 in k26694 in k26691 in k26688 in k26263 in k26260 in k26257 in k26254 in k26251 in k25668 in k25665 in k25142 in k25139 in k25136 in k25133 in k25130 in k25127 in k25124 in k25121 in k25118 in k25115 in k25112 in k25109 in k25106 in k25103 in k25100 in k25097 in k25094 in k25091 in k25088 in k25085 in k25082 in k24943 in k24940 in k24937 in k24934 in k24878 in k24875 in k24872 in k24869 in k24866 in k24863 in k24860 in k24857 in k23555 in k23486 in k23293 in k23290 in k23185 in k23134 in k11783 in k10718 in k10715 in k7274 in k7271 in k6978 in k6975 in k6971 in k6680 in k6677 in k6674 in k6671 */
static void C_ccall f_32336(C_word c,C_word t0,C_word t1,...){
C_word tmp;
C_word t2;
va_list v;
C_word *a,c2=c;
C_save_rest(t1,c2,2);
C_check_for_interrupt;
if(!C_demand(c*C_SIZEOF_PAIR+72)){
C_save_and_reclaim((void*)tr2r,(void*)f_32336r,2,t0,t1);}
else{
a=C_alloc((c-2)*3);
t2=C_restore_rest(a,C_rest_count(0));
f_32336r(t0,t1,t2);}}

static void C_ccall f_32336r(C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word t14;
C_word t15;
C_word t16;
C_word t17;
C_word t18;
C_word t19;
C_word t20;
C_word t21;
C_word t22;
C_word t23;
C_word t24;
C_word t25;
C_word t26;
C_word t27;
C_word t28;
C_word t29;
C_word t30;
C_word t31;
C_word t32;
C_word t33;
C_word t34;
C_word *a=C_alloc(72);
t3=C_fix(0);
t4=(*a=C_VECTOR_TYPE|1,a[1]=t3,tmp=(C_word)a,a+=2,tmp);
t5=C_fix(0);
t6=(*a=C_VECTOR_TYPE|1,a[1]=t5,tmp=(C_word)a,a+=2,tmp);
t7=C_fix(0);
t8=(*a=C_VECTOR_TYPE|1,a[1]=t7,tmp=(C_word)a,a+=2,tmp);
t9=C_fix(0);
t10=(*a=C_VECTOR_TYPE|1,a[1]=t9,tmp=(C_word)a,a+=2,tmp);
t11=C_SCHEME_FALSE;
t12=(*a=C_VECTOR_TYPE|1,a[1]=t11,tmp=(C_word)a,a+=2,tmp);
t13=C_SCHEME_FALSE;
t14=(*a=C_VECTOR_TYPE|1,a[1]=t13,tmp=(C_word)a,a+=2,tmp);
t15=C_SCHEME_FALSE;
t16=(*a=C_VECTOR_TYPE|1,a[1]=t15,tmp=(C_word)a,a+=2,tmp);
t17=C_SCHEME_FALSE;
t18=(*a=C_VECTOR_TYPE|1,a[1]=t17,tmp=(C_word)a,a+=2,tmp);
t19=t2;
t20=(*a=C_VECTOR_TYPE|1,a[1]=t19,tmp=(C_word)a,a+=2,tmp);
t21=C_SCHEME_FALSE;
t22=(*a=C_VECTOR_TYPE|1,a[1]=t21,tmp=(C_word)a,a+=2,tmp);
t23=(*a=C_CLOSURE_TYPE|13,a[1]=(C_word)f_32340,a[2]=t18,a[3]=t16,a[4]=t14,a[5]=t22,a[6]=t12,a[7]=t2,a[8]=t20,a[9]=t8,a[10]=t6,a[11]=t10,a[12]=t4,a[13]=t1,tmp=(C_word)a,a+=14,tmp);
if(C_truep((C_word)C_i_nullp(((C_word*)t20)[1]))){
t24=t23;
f_32340(t24,C_SCHEME_UNDEFINED);}
else{
t24=(C_word)C_i_car(((C_word*)t20)[1]);
t25=(C_word)C_eqp(t24,lf[730]);
if(C_truep(t25)){
t26=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_32908,a[2]=t2,a[3]=t23,a[4]=t20,a[5]=t22,a[6]=t12,a[7]=t4,tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)t12)[1])){
C_trace("error");
t27=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t27))(4,t27,t26,lf[19],lf[730]);}
else{
t27=t26;
f_32908(2,t27,C_SCHEME_UNDEFINED);}}
else{
t26=(C_word)C_eqp(t24,lf[741]);
if(C_truep(t26)){
t27=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_32943,a[2]=t2,a[3]=t23,a[4]=t20,a[5]=t22,a[6]=t14,a[7]=t6,tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)t14)[1])){
C_trace("error");
t28=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t28))(4,t28,t27,lf[19],lf[741]);}
else{
t28=t27;
f_32943(2,t28,C_SCHEME_UNDEFINED);}}
else{
t27=(C_word)C_eqp(t24,lf[738]);
if(C_truep(t27)){
t28=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_32978,a[2]=t2,a[3]=t23,a[4]=t20,a[5]=t22,a[6]=t16,a[7]=t8,tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)t16)[1])){
C_trace("error");
t29=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t29))(4,t29,t28,lf[19],lf[738]);}
else{
t29=t28;
f_32978(2,t29,C_SCHEME_UNDEFINED);}}
else{
t28=(C_word)C_eqp(t24,lf[733]);
if(C_truep(t28)){
t29=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_33013,a[2]=t2,a[3]=t23,a[4]=t20,a[5]=t22,a[6]=t18,a[7]=t10,tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)t18)[1])){
C_trace("error");
t30=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t30))(4,t30,t29,lf[19],lf[733]);}
else{
t30=t29;
f_33013(2,t30,C_SCHEME_UNDEFINED);}}
else{
t29=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_33042,a[2]=t23,a[3]=t12,a[4]=t4,a[5]=t20,tmp=(C_word)a,a+=6,tmp);
if(C_truep(((C_word*)t22)[1])){
C_trace("error");
t30=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t30))(4,t30,t29,lf[10],t2);}
else{
t30=t29;
f_33042(2,t30,C_SCHEME_UNDEFINED);}}}}}}}

/* k33040 in mm:make-ctrl in k30217 in k26697 in k26694 in k26691 in k26688 in k26263 in k26260 in k26257 in k26254 in k26251 in k25668 in k25665 in k25142 in k25139 in k25136 in k25133 in k25130 in k25127 in k25124 in k25121 in k25118 in k25115 in k25112 in k25109 in k25106 in k25103 in k25100 in k25097 in k25094 in k25091 in k25088 in k25085 in k25082 in k24943 in k24940 in k24937 in k24934 in k24878 in k24875 in k24872 in k24869 in k24866 in k24863 in k24860 in k24857 in k23555 in k23486 in k23293 in k23290 in k23185 in k23134 in k11783 in k10718 in k10715 in k7274 in k7271 in k6978 in k6975 in k6971 in k6680 in k6677 in k6674 in k6671 */
static void C_ccall f_33042(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_33042,2,t0,t1);}
t2=(C_word)C_i_car(((C_word*)((C_word*)t0)[5])[1]);
t3=C_mutate(((C_word *)((C_word*)t0)[4])+1,t2);
t4=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_33049,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[5],a[4]=((C_word*)t0)[3],tmp=(C_word)a,a+=5,tmp);
t5=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_33057,a[2]=((C_word*)t0)[4],a[3]=t4,tmp=(C_word)a,a+=4,tmp);
C_trace("keyword?");
t6=C_retrieve(lf[13]);
((C_proc3)C_retrieve_proc(t6))(3,t6,t5,((C_word*)((C_word*)t0)[4])[1]);}

/* k33055 in k33040 in mm:make-ctrl in k30217 in k26697 in k26694 in k26691 in k26688 in k26263 in k26260 in k26257 in k26254 in k26251 in k25668 in k25665 in k25142 in k25139 in k25136 in k25133 in k25130 in k25127 in k25124 in k25121 in k25118 in k25115 in k25112 in k25109 in k25106 in k25103 in k25100 in k25097 in k25094 in k25091 in k25088 in k25085 in k25082 in k24943 in k24940 in k24937 in k24934 in k24878 in k24875 in k24872 in k24869 in k24866 in k24863 in k24860 in k24857 in k23555 in k23486 in k23293 in k23290 in k23185 in k23134 in k11783 in k10718 in k10715 in k7274 in k7271 in k6978 in k6975 in k6971 in k6680 in k6677 in k6674 in k6671 */
static void C_ccall f_33057(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
if(C_truep(t1)){
C_trace("error");
t2=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t2))(4,t2,((C_word*)t0)[3],lf[14],((C_word*)((C_word*)t0)[2])[1]);}
else{
t2=((C_word*)t0)[3];
f_33049(2,t2,C_SCHEME_UNDEFINED);}}

/* k33047 in k33040 in mm:make-ctrl in k30217 in k26697 in k26694 in k26691 in k26688 in k26263 in k26260 in k26257 in k26254 in k26251 in k25668 in k25665 in k25142 in k25139 in k25136 in k25133 in k25130 in k25127 in k25124 in k25121 in k25118 in k25115 in k25112 in k25109 in k25106 in k25103 in k25100 in k25097 in k25094 in k25091 in k25088 in k25085 in k25082 in k24943 in k24940 in k24937 in k24934 in k24878 in k24875 in k24872 in k24869 in k24866 in k24863 in k24860 in k24857 in k23555 in k23486 in k23293 in k23290 in k23185 in k23134 in k11783 in k10718 in k10715 in k7274 in k7271 in k6978 in k6975 in k6971 in k6680 in k6677 in k6674 in k6671 */
static void C_ccall f_33049(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word *a;
t2=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[3])[1]);
t4=C_mutate(((C_word *)((C_word*)t0)[3])+1,t3);
t5=((C_word*)t0)[2];
f_32340(t5,t4);}

/* k33011 in mm:make-ctrl in k30217 in k26697 in k26694 in k26691 in k26688 in k26263 in k26260 in k26257 in k26254 in k26251 in k25668 in k25665 in k25142 in k25139 in k25136 in k25133 in k25130 in k25127 in k25124 in k25121 in k25118 in k25115 in k25112 in k25109 in k25106 in k25103 in k25100 in k25097 in k25094 in k25091 in k25088 in k25085 in k25082 in k24943 in k24940 in k24937 in k24934 in k24878 in k24875 in k24872 in k24869 in k24866 in k24863 in k24860 in k24857 in k23555 in k23486 in k23293 in k23290 in k23185 in k23134 in k11783 in k10718 in k10715 in k7274 in k7271 in k6978 in k6975 in k6971 in k6680 in k6677 in k6674 in k6671 */
static void C_ccall f_33013(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_33013,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_33017,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("error");
t4=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[21],((C_word*)t0)[2]);}
else{
t4=t2;
f_33017(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k33015 in k33011 in mm:make-ctrl in k30217 in k26697 in k26694 in k26691 in k26688 in k26263 in k26260 in k26257 in k26254 in k26251 in k25668 in k25665 in k25142 in k25139 in k25136 in k25133 in k25130 in k25127 in k25124 in k25121 in k25118 in k25115 in k25112 in k25109 in k25106 in k25103 in k25100 in k25097 in k25094 in k25091 in k25088 in k25085 in k25082 in k24943 in k24940 in k24937 in k24934 in k24878 in k24875 in k24872 in k24869 in k24866 in k24863 in k24860 in k24857 in k23555 in k23486 in k23293 in k23290 in k23185 in k23134 in k11783 in k10718 in k10715 in k7274 in k7271 in k6978 in k6975 in k6971 in k6680 in k6677 in k6674 in k6671 */
static void C_ccall f_33017(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_32340(t7,t6);}

/* k32976 in mm:make-ctrl in k30217 in k26697 in k26694 in k26691 in k26688 in k26263 in k26260 in k26257 in k26254 in k26251 in k25668 in k25665 in k25142 in k25139 in k25136 in k25133 in k25130 in k25127 in k25124 in k25121 in k25118 in k25115 in k25112 in k25109 in k25106 in k25103 in k25100 in k25097 in k25094 in k25091 in k25088 in k25085 in k25082 in k24943 in k24940 in k24937 in k24934 in k24878 in k24875 in k24872 in k24869 in k24866 in k24863 in k24860 in k24857 in k23555 in k23486 in k23293 in k23290 in k23185 in k23134 in k11783 in k10718 in k10715 in k7274 in k7271 in k6978 in k6975 in k6971 in k6680 in k6677 in k6674 in k6671 */
static void C_ccall f_32978(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_32978,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_32982,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("error");
t4=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[21],((C_word*)t0)[2]);}
else{
t4=t2;
f_32982(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k32980 in k32976 in mm:make-ctrl in k30217 in k26697 in k26694 in k26691 in k26688 in k26263 in k26260 in k26257 in k26254 in k26251 in k25668 in k25665 in k25142 in k25139 in k25136 in k25133 in k25130 in k25127 in k25124 in k25121 in k25118 in k25115 in k25112 in k25109 in k25106 in k25103 in k25100 in k25097 in k25094 in k25091 in k25088 in k25085 in k25082 in k24943 in k24940 in k24937 in k24934 in k24878 in k24875 in k24872 in k24869 in k24866 in k24863 in k24860 in k24857 in k23555 in k23486 in k23293 in k23290 in k23185 in k23134 in k11783 in k10718 in k10715 in k7274 in k7271 in k6978 in k6975 in k6971 in k6680 in k6677 in k6674 in k6671 */
static void C_ccall f_32982(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_32340(t7,t6);}

/* k32941 in mm:make-ctrl in k30217 in k26697 in k26694 in k26691 in k26688 in k26263 in k26260 in k26257 in k26254 in k26251 in k25668 in k25665 in k25142 in k25139 in k25136 in k25133 in k25130 in k25127 in k25124 in k25121 in k25118 in k25115 in k25112 in k25109 in k25106 in k25103 in k25100 in k25097 in k25094 in k25091 in k25088 in k25085 in k25082 in k24943 in k24940 in k24937 in k24934 in k24878 in k24875 in k24872 in k24869 in k24866 in k24863 in k24860 in k24857 in k23555 in k23486 in k23293 in k23290 in k23185 in k23134 in k11783 in k10718 in k10715 in k7274 in k7271 in k6978 in k6975 in k6971 in k6680 in k6677 in k6674 in k6671 */
static void C_ccall f_32943(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_32943,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_32947,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("error");
t4=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[21],((C_word*)t0)[2]);}
else{
t4=t2;
f_32947(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k32945 in k32941 in mm:make-ctrl in k30217 in k26697 in k26694 in k26691 in k26688 in k26263 in k26260 in k26257 in k26254 in k26251 in k25668 in k25665 in k25142 in k25139 in k25136 in k25133 in k25130 in k25127 in k25124 in k25121 in k25118 in k25115 in k25112 in k25109 in k25106 in k25103 in k25100 in k25097 in k25094 in k25091 in k25088 in k25085 in k25082 in k24943 in k24940 in k24937 in k24934 in k24878 in k24875 in k24872 in k24869 in k24866 in k24863 in k24860 in k24857 in k23555 in k23486 in k23293 in k23290 in k23185 in k23134 in k11783 in k10718 in k10715 in k7274 in k7271 in k6978 in k6975 in k6971 in k6680 in k6677 in k6674 in k6671 */
static void C_ccall f_32947(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_32340(t7,t6);}

/* k32906 in mm:make-ctrl in k30217 in k26697 in k26694 in k26691 in k26688 in k26263 in k26260 in k26257 in k26254 in k26251 in k25668 in k25665 in k25142 in k25139 in k25136 in k25133 in k25130 in k25127 in k25124 in k25121 in k25118 in k25115 in k25112 in k25109 in k25106 in k25103 in k25100 in k25097 in k25094 in k25091 in k25088 in k25085 in k25082 in k24943 in k24940 in k24937 in k24934 in k24878 in k24875 in k24872 in k24869 in k24866 in k24863 in k24860 in k24857 in k23555 in k23486 in k23293 in k23290 in k23185 in k23134 in k11783 in k10718 in k10715 in k7274 in k7271 in k6978 in k6975 in k6971 in k6680 in k6677 in k6674 in k6671 */
static void C_ccall f_32908(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_32908,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_32912,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("error");
t4=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[21],((C_word*)t0)[2]);}
else{
t4=t2;
f_32912(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k32910 in k32906 in mm:make-ctrl in k30217 in k26697 in k26694 in k26691 in k26688 in k26263 in k26260 in k26257 in k26254 in k26251 in k25668 in k25665 in k25142 in k25139 in k25136 in k25133 in k25130 in k25127 in k25124 in k25121 in k25118 in k25115 in k25112 in k25109 in k25106 in k25103 in k25100 in k25097 in k25094 in k25091 in k25088 in k25085 in k25082 in k24943 in k24940 in k24937 in k24934 in k24878 in k24875 in k24872 in k24869 in k24866 in k24863 in k24860 in k24857 in k23555 in k23486 in k23293 in k23290 in k23185 in k23134 in k11783 in k10718 in k10715 in k7274 in k7271 in k6978 in k6975 in k6971 in k6680 in k6677 in k6674 in k6671 */
static void C_ccall f_32912(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_32340(t7,t6);}

/* k32338 in mm:make-ctrl in k30217 in k26697 in k26694 in k26691 in k26688 in k26263 in k26260 in k26257 in k26254 in k26251 in k25668 in k25665 in k25142 in k25139 in k25136 in k25133 in k25130 in k25127 in k25124 in k25121 in k25118 in k25115 in k25112 in k25109 in k25106 in k25103 in k25100 in k25097 in k25094 in k25091 in k25088 in k25085 in k25082 in k24943 in k24940 in k24937 in k24934 in k24878 in k24875 in k24872 in k24869 in k24866 in k24863 in k24860 in k24857 in k23555 in k23486 in k23293 in k23290 in k23185 in k23134 in k11783 in k10718 in k10715 in k7274 in k7271 in k6978 in k6975 in k6971 in k6680 in k6677 in k6674 in k6671 */
static void C_fcall f_32340(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word ab[52],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_32340,NULL,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|13,a[1]=(C_word)f_32343,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],a[7]=((C_word*)t0)[7],a[8]=((C_word*)t0)[8],a[9]=((C_word*)t0)[9],a[10]=((C_word*)t0)[10],a[11]=((C_word*)t0)[11],a[12]=((C_word*)t0)[12],a[13]=((C_word*)t0)[13],tmp=(C_word)a,a+=14,tmp);
if(C_truep((C_word)C_i_nullp(((C_word*)((C_word*)t0)[8])[1]))){
t3=t2;
f_32343(t3,C_SCHEME_UNDEFINED);}
else{
t3=(C_word)C_i_car(((C_word*)((C_word*)t0)[8])[1]);
t4=(C_word)C_eqp(t3,lf[730]);
if(C_truep(t4)){
t5=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_32738,a[2]=((C_word*)t0)[7],a[3]=t2,a[4]=((C_word*)t0)[8],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],a[7]=((C_word*)t0)[12],tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)((C_word*)t0)[6])[1])){
C_trace("error");
t6=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t6))(4,t6,t5,lf[19],lf[730]);}
else{
t6=t5;
f_32738(2,t6,C_SCHEME_UNDEFINED);}}
else{
t5=(C_word)C_eqp(t3,lf[741]);
if(C_truep(t5)){
t6=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_32773,a[2]=((C_word*)t0)[7],a[3]=t2,a[4]=((C_word*)t0)[8],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[4],a[7]=((C_word*)t0)[10],tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)((C_word*)t0)[4])[1])){
C_trace("error");
t7=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t7))(4,t7,t6,lf[19],lf[741]);}
else{
t7=t6;
f_32773(2,t7,C_SCHEME_UNDEFINED);}}
else{
t6=(C_word)C_eqp(t3,lf[738]);
if(C_truep(t6)){
t7=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_32808,a[2]=((C_word*)t0)[7],a[3]=t2,a[4]=((C_word*)t0)[8],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[3],a[7]=((C_word*)t0)[9],tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)((C_word*)t0)[3])[1])){
C_trace("error");
t8=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t8))(4,t8,t7,lf[19],lf[738]);}
else{
t8=t7;
f_32808(2,t8,C_SCHEME_UNDEFINED);}}
else{
t7=(C_word)C_eqp(t3,lf[733]);
if(C_truep(t7)){
t8=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_32843,a[2]=((C_word*)t0)[7],a[3]=t2,a[4]=((C_word*)t0)[8],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[2],a[7]=((C_word*)t0)[11],tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)((C_word*)t0)[2])[1])){
C_trace("error");
t9=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t9))(4,t9,t8,lf[19],lf[733]);}
else{
t9=t8;
f_32843(2,t9,C_SCHEME_UNDEFINED);}}
else{
t8=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_32872,a[2]=t2,a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[10],a[5]=((C_word*)t0)[8],tmp=(C_word)a,a+=6,tmp);
if(C_truep(((C_word*)((C_word*)t0)[5])[1])){
C_trace("error");
t9=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t9))(4,t9,t8,lf[10],((C_word*)t0)[7]);}
else{
t9=t8;
f_32872(2,t9,C_SCHEME_UNDEFINED);}}}}}}}

/* k32870 in k32338 in mm:make-ctrl in k30217 in k26697 in k26694 in k26691 in k26688 in k26263 in k26260 in k26257 in k26254 in k26251 in k25668 in k25665 in k25142 in k25139 in k25136 in k25133 in k25130 in k25127 in k25124 in k25121 in k25118 in k25115 in k25112 in k25109 in k25106 in k25103 in k25100 in k25097 in k25094 in k25091 in k25088 in k25085 in k25082 in k24943 in k24940 in k24937 in k24934 in k24878 in k24875 in k24872 in k24869 in k24866 in k24863 in k24860 in k24857 in k23555 in k23486 in k23293 in k23290 in k23185 in k23134 in k11783 in k10718 in k10715 in k7274 in k7271 in k6978 in k6975 in k6971 in k6680 in k6677 in k6674 in k6671 */
static void C_ccall f_32872(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_32872,2,t0,t1);}
t2=(C_word)C_i_car(((C_word*)((C_word*)t0)[5])[1]);
t3=C_mutate(((C_word *)((C_word*)t0)[4])+1,t2);
t4=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_32879,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[5],a[4]=((C_word*)t0)[3],tmp=(C_word)a,a+=5,tmp);
t5=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_32887,a[2]=((C_word*)t0)[4],a[3]=t4,tmp=(C_word)a,a+=4,tmp);
C_trace("keyword?");
t6=C_retrieve(lf[13]);
((C_proc3)C_retrieve_proc(t6))(3,t6,t5,((C_word*)((C_word*)t0)[4])[1]);}

/* k32885 in k32870 in k32338 in mm:make-ctrl in k30217 in k26697 in k26694 in k26691 in k26688 in k26263 in k26260 in k26257 in k26254 in k26251 in k25668 in k25665 in k25142 in k25139 in k25136 in k25133 in k25130 in k25127 in k25124 in k25121 in k25118 in k25115 in k25112 in k25109 in k25106 in k25103 in k25100 in k25097 in k25094 in k25091 in k25088 in k25085 in k25082 in k24943 in k24940 in k24937 in k24934 in k24878 in k24875 in k24872 in k24869 in k24866 in k24863 in k24860 in k24857 in k23555 in k23486 in k23293 in k23290 in k23185 in k23134 in k11783 in k10718 in k10715 in k7274 in k7271 in k6978 in k6975 in k6971 in k6680 in k6677 in k6674 in k6671 */
static void C_ccall f_32887(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
if(C_truep(t1)){
C_trace("error");
t2=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t2))(4,t2,((C_word*)t0)[3],lf[14],((C_word*)((C_word*)t0)[2])[1]);}
else{
t2=((C_word*)t0)[3];
f_32879(2,t2,C_SCHEME_UNDEFINED);}}

/* k32877 in k32870 in k32338 in mm:make-ctrl in k30217 in k26697 in k26694 in k26691 in k26688 in k26263 in k26260 in k26257 in k26254 in k26251 in k25668 in k25665 in k25142 in k25139 in k25136 in k25133 in k25130 in k25127 in k25124 in k25121 in k25118 in k25115 in k25112 in k25109 in k25106 in k25103 in k25100 in k25097 in k25094 in k25091 in k25088 in k25085 in k25082 in k24943 in k24940 in k24937 in k24934 in k24878 in k24875 in k24872 in k24869 in k24866 in k24863 in k24860 in k24857 in k23555 in k23486 in k23293 in k23290 in k23185 in k23134 in k11783 in k10718 in k10715 in k7274 in k7271 in k6978 in k6975 in k6971 in k6680 in k6677 in k6674 in k6671 */
static void C_ccall f_32879(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word *a;
t2=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[3])[1]);
t4=C_mutate(((C_word *)((C_word*)t0)[3])+1,t3);
t5=((C_word*)t0)[2];
f_32343(t5,t4);}

/* k32841 in k32338 in mm:make-ctrl in k30217 in k26697 in k26694 in k26691 in k26688 in k26263 in k26260 in k26257 in k26254 in k26251 in k25668 in k25665 in k25142 in k25139 in k25136 in k25133 in k25130 in k25127 in k25124 in k25121 in k25118 in k25115 in k25112 in k25109 in k25106 in k25103 in k25100 in k25097 in k25094 in k25091 in k25088 in k25085 in k25082 in k24943 in k24940 in k24937 in k24934 in k24878 in k24875 in k24872 in k24869 in k24866 in k24863 in k24860 in k24857 in k23555 in k23486 in k23293 in k23290 in k23185 in k23134 in k11783 in k10718 in k10715 in k7274 in k7271 in k6978 in k6975 in k6971 in k6680 in k6677 in k6674 in k6671 */
static void C_ccall f_32843(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_32843,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_32847,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("error");
t4=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[21],((C_word*)t0)[2]);}
else{
t4=t2;
f_32847(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k32845 in k32841 in k32338 in mm:make-ctrl in k30217 in k26697 in k26694 in k26691 in k26688 in k26263 in k26260 in k26257 in k26254 in k26251 in k25668 in k25665 in k25142 in k25139 in k25136 in k25133 in k25130 in k25127 in k25124 in k25121 in k25118 in k25115 in k25112 in k25109 in k25106 in k25103 in k25100 in k25097 in k25094 in k25091 in k25088 in k25085 in k25082 in k24943 in k24940 in k24937 in k24934 in k24878 in k24875 in k24872 in k24869 in k24866 in k24863 in k24860 in k24857 in k23555 in k23486 in k23293 in k23290 in k23185 in k23134 in k11783 in k10718 in k10715 in k7274 in k7271 in k6978 in k6975 in k6971 in k6680 in k6677 in k6674 in k6671 */
static void C_ccall f_32847(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_32343(t7,t6);}

/* k32806 in k32338 in mm:make-ctrl in k30217 in k26697 in k26694 in k26691 in k26688 in k26263 in k26260 in k26257 in k26254 in k26251 in k25668 in k25665 in k25142 in k25139 in k25136 in k25133 in k25130 in k25127 in k25124 in k25121 in k25118 in k25115 in k25112 in k25109 in k25106 in k25103 in k25100 in k25097 in k25094 in k25091 in k25088 in k25085 in k25082 in k24943 in k24940 in k24937 in k24934 in k24878 in k24875 in k24872 in k24869 in k24866 in k24863 in k24860 in k24857 in k23555 in k23486 in k23293 in k23290 in k23185 in k23134 in k11783 in k10718 in k10715 in k7274 in k7271 in k6978 in k6975 in k6971 in k6680 in k6677 in k6674 in k6671 */
static void C_ccall f_32808(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_32808,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_32812,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("error");
t4=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[21],((C_word*)t0)[2]);}
else{
t4=t2;
f_32812(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k32810 in k32806 in k32338 in mm:make-ctrl in k30217 in k26697 in k26694 in k26691 in k26688 in k26263 in k26260 in k26257 in k26254 in k26251 in k25668 in k25665 in k25142 in k25139 in k25136 in k25133 in k25130 in k25127 in k25124 in k25121 in k25118 in k25115 in k25112 in k25109 in k25106 in k25103 in k25100 in k25097 in k25094 in k25091 in k25088 in k25085 in k25082 in k24943 in k24940 in k24937 in k24934 in k24878 in k24875 in k24872 in k24869 in k24866 in k24863 in k24860 in k24857 in k23555 in k23486 in k23293 in k23290 in k23185 in k23134 in k11783 in k10718 in k10715 in k7274 in k7271 in k6978 in k6975 in k6971 in k6680 in k6677 in k6674 in k6671 */
static void C_ccall f_32812(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_32343(t7,t6);}

/* k32771 in k32338 in mm:make-ctrl in k30217 in k26697 in k26694 in k26691 in k26688 in k26263 in k26260 in k26257 in k26254 in k26251 in k25668 in k25665 in k25142 in k25139 in k25136 in k25133 in k25130 in k25127 in k25124 in k25121 in k25118 in k25115 in k25112 in k25109 in k25106 in k25103 in k25100 in k25097 in k25094 in k25091 in k25088 in k25085 in k25082 in k24943 in k24940 in k24937 in k24934 in k24878 in k24875 in k24872 in k24869 in k24866 in k24863 in k24860 in k24857 in k23555 in k23486 in k23293 in k23290 in k23185 in k23134 in k11783 in k10718 in k10715 in k7274 in k7271 in k6978 in k6975 in k6971 in k6680 in k6677 in k6674 in k6671 */
static void C_ccall f_32773(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_32773,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_32777,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("error");
t4=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[21],((C_word*)t0)[2]);}
else{
t4=t2;
f_32777(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k32775 in k32771 in k32338 in mm:make-ctrl in k30217 in k26697 in k26694 in k26691 in k26688 in k26263 in k26260 in k26257 in k26254 in k26251 in k25668 in k25665 in k25142 in k25139 in k25136 in k25133 in k25130 in k25127 in k25124 in k25121 in k25118 in k25115 in k25112 in k25109 in k25106 in k25103 in k25100 in k25097 in k25094 in k25091 in k25088 in k25085 in k25082 in k24943 in k24940 in k24937 in k24934 in k24878 in k24875 in k24872 in k24869 in k24866 in k24863 in k24860 in k24857 in k23555 in k23486 in k23293 in k23290 in k23185 in k23134 in k11783 in k10718 in k10715 in k7274 in k7271 in k6978 in k6975 in k6971 in k6680 in k6677 in k6674 in k6671 */
static void C_ccall f_32777(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_32343(t7,t6);}

/* k32736 in k32338 in mm:make-ctrl in k30217 in k26697 in k26694 in k26691 in k26688 in k26263 in k26260 in k26257 in k26254 in k26251 in k25668 in k25665 in k25142 in k25139 in k25136 in k25133 in k25130 in k25127 in k25124 in k25121 in k25118 in k25115 in k25112 in k25109 in k25106 in k25103 in k25100 in k25097 in k25094 in k25091 in k25088 in k25085 in k25082 in k24943 in k24940 in k24937 in k24934 in k24878 in k24875 in k24872 in k24869 in k24866 in k24863 in k24860 in k24857 in k23555 in k23486 in k23293 in k23290 in k23185 in k23134 in k11783 in k10718 in k10715 in k7274 in k7271 in k6978 in k6975 in k6971 in k6680 in k6677 in k6674 in k6671 */
static void C_ccall f_32738(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_32738,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_32742,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("error");
t4=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[21],((C_word*)t0)[2]);}
else{
t4=t2;
f_32742(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k32740 in k32736 in k32338 in mm:make-ctrl in k30217 in k26697 in k26694 in k26691 in k26688 in k26263 in k26260 in k26257 in k26254 in k26251 in k25668 in k25665 in k25142 in k25139 in k25136 in k25133 in k25130 in k25127 in k25124 in k25121 in k25118 in k25115 in k25112 in k25109 in k25106 in k25103 in k25100 in k25097 in k25094 in k25091 in k25088 in k25085 in k25082 in k24943 in k24940 in k24937 in k24934 in k24878 in k24875 in k24872 in k24869 in k24866 in k24863 in k24860 in k24857 in k23555 in k23486 in k23293 in k23290 in k23185 in k23134 in k11783 in k10718 in k10715 in k7274 in k7271 in k6978 in k6975 in k6971 in k6680 in k6677 in k6674 in k6671 */
static void C_ccall f_32742(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_32343(t7,t6);}

/* k32341 in k32338 in mm:make-ctrl in k30217 in k26697 in k26694 in k26691 in k26688 in k26263 in k26260 in k26257 in k26254 in k26251 in k25668 in k25665 in k25142 in k25139 in k25136 in k25133 in k25130 in k25127 in k25124 in k25121 in k25118 in k25115 in k25112 in k25109 in k25106 in k25103 in k25100 in k25097 in k25094 in k25091 in k25088 in k25085 in k25082 in k24943 in k24940 in k24937 in k24934 in k24878 in k24875 in k24872 in k24869 in k24866 in k24863 in k24860 in k24857 in k23555 in k23486 in k23293 in k23290 in k23185 in k23134 in k11783 in k10718 in k10715 in k7274 in k7271 in k6978 in k6975 in k6971 in k6680 in k6677 in k6674 in k6671 */
static void C_fcall f_32343(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word ab[52],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_32343,NULL,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|13,a[1]=(C_word)f_32346,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],a[7]=((C_word*)t0)[7],a[8]=((C_word*)t0)[8],a[9]=((C_word*)t0)[9],a[10]=((C_word*)t0)[10],a[11]=((C_word*)t0)[11],a[12]=((C_word*)t0)[12],a[13]=((C_word*)t0)[13],tmp=(C_word)a,a+=14,tmp);
if(C_truep((C_word)C_i_nullp(((C_word*)((C_word*)t0)[8])[1]))){
t3=t2;
f_32346(t3,C_SCHEME_UNDEFINED);}
else{
t3=(C_word)C_i_car(((C_word*)((C_word*)t0)[8])[1]);
t4=(C_word)C_eqp(t3,lf[730]);
if(C_truep(t4)){
t5=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_32568,a[2]=((C_word*)t0)[7],a[3]=t2,a[4]=((C_word*)t0)[8],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],a[7]=((C_word*)t0)[12],tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)((C_word*)t0)[6])[1])){
C_trace("error");
t6=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t6))(4,t6,t5,lf[19],lf[730]);}
else{
t6=t5;
f_32568(2,t6,C_SCHEME_UNDEFINED);}}
else{
t5=(C_word)C_eqp(t3,lf[741]);
if(C_truep(t5)){
t6=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_32603,a[2]=((C_word*)t0)[7],a[3]=t2,a[4]=((C_word*)t0)[8],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[4],a[7]=((C_word*)t0)[10],tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)((C_word*)t0)[4])[1])){
C_trace("error");
t7=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t7))(4,t7,t6,lf[19],lf[741]);}
else{
t7=t6;
f_32603(2,t7,C_SCHEME_UNDEFINED);}}
else{
t6=(C_word)C_eqp(t3,lf[738]);
if(C_truep(t6)){
t7=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_32638,a[2]=((C_word*)t0)[7],a[3]=t2,a[4]=((C_word*)t0)[8],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[3],a[7]=((C_word*)t0)[9],tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)((C_word*)t0)[3])[1])){
C_trace("error");
t8=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t8))(4,t8,t7,lf[19],lf[738]);}
else{
t8=t7;
f_32638(2,t8,C_SCHEME_UNDEFINED);}}
else{
t7=(C_word)C_eqp(t3,lf[733]);
if(C_truep(t7)){
t8=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_32673,a[2]=((C_word*)t0)[7],a[3]=t2,a[4]=((C_word*)t0)[8],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[2],a[7]=((C_word*)t0)[11],tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)((C_word*)t0)[2])[1])){
C_trace("error");
t9=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t9))(4,t9,t8,lf[19],lf[733]);}
else{
t9=t8;
f_32673(2,t9,C_SCHEME_UNDEFINED);}}
else{
t8=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_32702,a[2]=t2,a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[9],a[5]=((C_word*)t0)[8],tmp=(C_word)a,a+=6,tmp);
if(C_truep(((C_word*)((C_word*)t0)[5])[1])){
C_trace("error");
t9=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t9))(4,t9,t8,lf[10],((C_word*)t0)[7]);}
else{
t9=t8;
f_32702(2,t9,C_SCHEME_UNDEFINED);}}}}}}}

/* k32700 in k32341 in k32338 in mm:make-ctrl in k30217 in k26697 in k26694 in k26691 in k26688 in k26263 in k26260 in k26257 in k26254 in k26251 in k25668 in k25665 in k25142 in k25139 in k25136 in k25133 in k25130 in k25127 in k25124 in k25121 in k25118 in k25115 in k25112 in k25109 in k25106 in k25103 in k25100 in k25097 in k25094 in k25091 in k25088 in k25085 in k25082 in k24943 in k24940 in k24937 in k24934 in k24878 in k24875 in k24872 in k24869 in k24866 in k24863 in k24860 in k24857 in k23555 in k23486 in k23293 in k23290 in k23185 in k23134 in k11783 in k10718 in k10715 in k7274 in k7271 in k6978 in k6975 in k6971 in k6680 in k6677 in k6674 in k6671 */
static void C_ccall f_32702(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_32702,2,t0,t1);}
t2=(C_word)C_i_car(((C_word*)((C_word*)t0)[5])[1]);
t3=C_mutate(((C_word *)((C_word*)t0)[4])+1,t2);
t4=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_32709,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[5],a[4]=((C_word*)t0)[3],tmp=(C_word)a,a+=5,tmp);
t5=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_32717,a[2]=((C_word*)t0)[4],a[3]=t4,tmp=(C_word)a,a+=4,tmp);
C_trace("keyword?");
t6=C_retrieve(lf[13]);
((C_proc3)C_retrieve_proc(t6))(3,t6,t5,((C_word*)((C_word*)t0)[4])[1]);}

/* k32715 in k32700 in k32341 in k32338 in mm:make-ctrl in k30217 in k26697 in k26694 in k26691 in k26688 in k26263 in k26260 in k26257 in k26254 in k26251 in k25668 in k25665 in k25142 in k25139 in k25136 in k25133 in k25130 in k25127 in k25124 in k25121 in k25118 in k25115 in k25112 in k25109 in k25106 in k25103 in k25100 in k25097 in k25094 in k25091 in k25088 in k25085 in k25082 in k24943 in k24940 in k24937 in k24934 in k24878 in k24875 in k24872 in k24869 in k24866 in k24863 in k24860 in k24857 in k23555 in k23486 in k23293 in k23290 in k23185 in k23134 in k11783 in k10718 in k10715 in k7274 in k7271 in k6978 in k6975 in k6971 in k6680 in k6677 in k6674 in k6671 */
static void C_ccall f_32717(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
if(C_truep(t1)){
C_trace("error");
t2=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t2))(4,t2,((C_word*)t0)[3],lf[14],((C_word*)((C_word*)t0)[2])[1]);}
else{
t2=((C_word*)t0)[3];
f_32709(2,t2,C_SCHEME_UNDEFINED);}}

/* k32707 in k32700 in k32341 in k32338 in mm:make-ctrl in k30217 in k26697 in k26694 in k26691 in k26688 in k26263 in k26260 in k26257 in k26254 in k26251 in k25668 in k25665 in k25142 in k25139 in k25136 in k25133 in k25130 in k25127 in k25124 in k25121 in k25118 in k25115 in k25112 in k25109 in k25106 in k25103 in k25100 in k25097 in k25094 in k25091 in k25088 in k25085 in k25082 in k24943 in k24940 in k24937 in k24934 in k24878 in k24875 in k24872 in k24869 in k24866 in k24863 in k24860 in k24857 in k23555 in k23486 in k23293 in k23290 in k23185 in k23134 in k11783 in k10718 in k10715 in k7274 in k7271 in k6978 in k6975 in k6971 in k6680 in k6677 in k6674 in k6671 */
static void C_ccall f_32709(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word *a;
t2=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[3])[1]);
t4=C_mutate(((C_word *)((C_word*)t0)[3])+1,t3);
t5=((C_word*)t0)[2];
f_32346(t5,t4);}

/* k32671 in k32341 in k32338 in mm:make-ctrl in k30217 in k26697 in k26694 in k26691 in k26688 in k26263 in k26260 in k26257 in k26254 in k26251 in k25668 in k25665 in k25142 in k25139 in k25136 in k25133 in k25130 in k25127 in k25124 in k25121 in k25118 in k25115 in k25112 in k25109 in k25106 in k25103 in k25100 in k25097 in k25094 in k25091 in k25088 in k25085 in k25082 in k24943 in k24940 in k24937 in k24934 in k24878 in k24875 in k24872 in k24869 in k24866 in k24863 in k24860 in k24857 in k23555 in k23486 in k23293 in k23290 in k23185 in k23134 in k11783 in k10718 in k10715 in k7274 in k7271 in k6978 in k6975 in k6971 in k6680 in k6677 in k6674 in k6671 */
static void C_ccall f_32673(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_32673,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_32677,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("error");
t4=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[21],((C_word*)t0)[2]);}
else{
t4=t2;
f_32677(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k32675 in k32671 in k32341 in k32338 in mm:make-ctrl in k30217 in k26697 in k26694 in k26691 in k26688 in k26263 in k26260 in k26257 in k26254 in k26251 in k25668 in k25665 in k25142 in k25139 in k25136 in k25133 in k25130 in k25127 in k25124 in k25121 in k25118 in k25115 in k25112 in k25109 in k25106 in k25103 in k25100 in k25097 in k25094 in k25091 in k25088 in k25085 in k25082 in k24943 in k24940 in k24937 in k24934 in k24878 in k24875 in k24872 in k24869 in k24866 in k24863 in k24860 in k24857 in k23555 in k23486 in k23293 in k23290 in k23185 in k23134 in k11783 in k10718 in k10715 in k7274 in k7271 in k6978 in k6975 in k6971 in k6680 in k6677 in k6674 in k6671 */
static void C_ccall f_32677(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_32346(t7,t6);}

/* k32636 in k32341 in k32338 in mm:make-ctrl in k30217 in k26697 in k26694 in k26691 in k26688 in k26263 in k26260 in k26257 in k26254 in k26251 in k25668 in k25665 in k25142 in k25139 in k25136 in k25133 in k25130 in k25127 in k25124 in k25121 in k25118 in k25115 in k25112 in k25109 in k25106 in k25103 in k25100 in k25097 in k25094 in k25091 in k25088 in k25085 in k25082 in k24943 in k24940 in k24937 in k24934 in k24878 in k24875 in k24872 in k24869 in k24866 in k24863 in k24860 in k24857 in k23555 in k23486 in k23293 in k23290 in k23185 in k23134 in k11783 in k10718 in k10715 in k7274 in k7271 in k6978 in k6975 in k6971 in k6680 in k6677 in k6674 in k6671 */
static void C_ccall f_32638(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_32638,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_32642,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("error");
t4=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[21],((C_word*)t0)[2]);}
else{
t4=t2;
f_32642(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k32640 in k32636 in k32341 in k32338 in mm:make-ctrl in k30217 in k26697 in k26694 in k26691 in k26688 in k26263 in k26260 in k26257 in k26254 in k26251 in k25668 in k25665 in k25142 in k25139 in k25136 in k25133 in k25130 in k25127 in k25124 in k25121 in k25118 in k25115 in k25112 in k25109 in k25106 in k25103 in k25100 in k25097 in k25094 in k25091 in k25088 in k25085 in k25082 in k24943 in k24940 in k24937 in k24934 in k24878 in k24875 in k24872 in k24869 in k24866 in k24863 in k24860 in k24857 in k23555 in k23486 in k23293 in k23290 in k23185 in k23134 in k11783 in k10718 in k10715 in k7274 in k7271 in k6978 in k6975 in k6971 in k6680 in k6677 in k6674 in k6671 */
static void C_ccall f_32642(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_32346(t7,t6);}

/* k32601 in k32341 in k32338 in mm:make-ctrl in k30217 in k26697 in k26694 in k26691 in k26688 in k26263 in k26260 in k26257 in k26254 in k26251 in k25668 in k25665 in k25142 in k25139 in k25136 in k25133 in k25130 in k25127 in k25124 in k25121 in k25118 in k25115 in k25112 in k25109 in k25106 in k25103 in k25100 in k25097 in k25094 in k25091 in k25088 in k25085 in k25082 in k24943 in k24940 in k24937 in k24934 in k24878 in k24875 in k24872 in k24869 in k24866 in k24863 in k24860 in k24857 in k23555 in k23486 in k23293 in k23290 in k23185 in k23134 in k11783 in k10718 in k10715 in k7274 in k7271 in k6978 in k6975 in k6971 in k6680 in k6677 in k6674 in k6671 */
static void C_ccall f_32603(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_32603,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_32607,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("error");
t4=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[21],((C_word*)t0)[2]);}
else{
t4=t2;
f_32607(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k32605 in k32601 in k32341 in k32338 in mm:make-ctrl in k30217 in k26697 in k26694 in k26691 in k26688 in k26263 in k26260 in k26257 in k26254 in k26251 in k25668 in k25665 in k25142 in k25139 in k25136 in k25133 in k25130 in k25127 in k25124 in k25121 in k25118 in k25115 in k25112 in k25109 in k25106 in k25103 in k25100 in k25097 in k25094 in k25091 in k25088 in k25085 in k25082 in k24943 in k24940 in k24937 in k24934 in k24878 in k24875 in k24872 in k24869 in k24866 in k24863 in k24860 in k24857 in k23555 in k23486 in k23293 in k23290 in k23185 in k23134 in k11783 in k10718 in k10715 in k7274 in k7271 in k6978 in k6975 in k6971 in k6680 in k6677 in k6674 in k6671 */
static void C_ccall f_32607(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_32346(t7,t6);}

/* k32566 in k32341 in k32338 in mm:make-ctrl in k30217 in k26697 in k26694 in k26691 in k26688 in k26263 in k26260 in k26257 in k26254 in k26251 in k25668 in k25665 in k25142 in k25139 in k25136 in k25133 in k25130 in k25127 in k25124 in k25121 in k25118 in k25115 in k25112 in k25109 in k25106 in k25103 in k25100 in k25097 in k25094 in k25091 in k25088 in k25085 in k25082 in k24943 in k24940 in k24937 in k24934 in k24878 in k24875 in k24872 in k24869 in k24866 in k24863 in k24860 in k24857 in k23555 in k23486 in k23293 in k23290 in k23185 in k23134 in k11783 in k10718 in k10715 in k7274 in k7271 in k6978 in k6975 in k6971 in k6680 in k6677 in k6674 in k6671 */
static void C_ccall f_32568(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_32568,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_32572,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("error");
t4=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[21],((C_word*)t0)[2]);}
else{
t4=t2;
f_32572(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k32570 in k32566 in k32341 in k32338 in mm:make-ctrl in k30217 in k26697 in k26694 in k26691 in k26688 in k26263 in k26260 in k26257 in k26254 in k26251 in k25668 in k25665 in k25142 in k25139 in k25136 in k25133 in k25130 in k25127 in k25124 in k25121 in k25118 in k25115 in k25112 in k25109 in k25106 in k25103 in k25100 in k25097 in k25094 in k25091 in k25088 in k25085 in k25082 in k24943 in k24940 in k24937 in k24934 in k24878 in k24875 in k24872 in k24869 in k24866 in k24863 in k24860 in k24857 in k23555 in k23486 in k23293 in k23290 in k23185 in k23134 in k11783 in k10718 in k10715 in k7274 in k7271 in k6978 in k6975 in k6971 in k6680 in k6677 in k6674 in k6671 */
static void C_ccall f_32572(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_32346(t7,t6);}

/* k32344 in k32341 in k32338 in mm:make-ctrl in k30217 in k26697 in k26694 in k26691 in k26688 in k26263 in k26260 in k26257 in k26254 in k26251 in k25668 in k25665 in k25142 in k25139 in k25136 in k25133 in k25130 in k25127 in k25124 in k25121 in k25118 in k25115 in k25112 in k25109 in k25106 in k25103 in k25100 in k25097 in k25094 in k25091 in k25088 in k25085 in k25082 in k24943 in k24940 in k24937 in k24934 in k24878 in k24875 in k24872 in k24869 in k24866 in k24863 in k24860 in k24857 in k23555 in k23486 in k23293 in k23290 in k23185 in k23134 in k11783 in k10718 in k10715 in k7274 in k7271 in k6978 in k6975 in k6971 in k6680 in k6677 in k6674 in k6671 */
static void C_fcall f_32346(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word ab[47],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_32346,NULL,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|8,a[1]=(C_word)f_32349,a[2]=((C_word*)t0)[7],a[3]=((C_word*)t0)[8],a[4]=((C_word*)t0)[9],a[5]=((C_word*)t0)[10],a[6]=((C_word*)t0)[11],a[7]=((C_word*)t0)[12],a[8]=((C_word*)t0)[13],tmp=(C_word)a,a+=9,tmp);
if(C_truep((C_word)C_i_nullp(((C_word*)((C_word*)t0)[8])[1]))){
t3=t2;
f_32349(t3,C_SCHEME_UNDEFINED);}
else{
t3=(C_word)C_i_car(((C_word*)((C_word*)t0)[8])[1]);
t4=(C_word)C_eqp(t3,lf[730]);
if(C_truep(t4)){
t5=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_32398,a[2]=((C_word*)t0)[7],a[3]=t2,a[4]=((C_word*)t0)[8],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],a[7]=((C_word*)t0)[12],tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)((C_word*)t0)[6])[1])){
C_trace("error");
t6=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t6))(4,t6,t5,lf[19],lf[730]);}
else{
t6=t5;
f_32398(2,t6,C_SCHEME_UNDEFINED);}}
else{
t5=(C_word)C_eqp(t3,lf[741]);
if(C_truep(t5)){
t6=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_32433,a[2]=((C_word*)t0)[7],a[3]=t2,a[4]=((C_word*)t0)[8],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[4],a[7]=((C_word*)t0)[10],tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)((C_word*)t0)[4])[1])){
C_trace("error");
t7=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t7))(4,t7,t6,lf[19],lf[741]);}
else{
t7=t6;
f_32433(2,t7,C_SCHEME_UNDEFINED);}}
else{
t6=(C_word)C_eqp(t3,lf[738]);
if(C_truep(t6)){
t7=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_32468,a[2]=((C_word*)t0)[7],a[3]=t2,a[4]=((C_word*)t0)[8],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[3],a[7]=((C_word*)t0)[9],tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)((C_word*)t0)[3])[1])){
C_trace("error");
t8=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t8))(4,t8,t7,lf[19],lf[738]);}
else{
t8=t7;
f_32468(2,t8,C_SCHEME_UNDEFINED);}}
else{
t7=(C_word)C_eqp(t3,lf[733]);
if(C_truep(t7)){
t8=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_32503,a[2]=((C_word*)t0)[7],a[3]=t2,a[4]=((C_word*)t0)[8],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[2],a[7]=((C_word*)t0)[11],tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)((C_word*)t0)[2])[1])){
C_trace("error");
t9=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t9))(4,t9,t8,lf[19],lf[733]);}
else{
t9=t8;
f_32503(2,t9,C_SCHEME_UNDEFINED);}}
else{
t8=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_32532,a[2]=t2,a[3]=((C_word*)t0)[2],a[4]=((C_word*)t0)[11],a[5]=((C_word*)t0)[8],tmp=(C_word)a,a+=6,tmp);
if(C_truep(((C_word*)((C_word*)t0)[5])[1])){
C_trace("error");
t9=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t9))(4,t9,t8,lf[10],((C_word*)t0)[7]);}
else{
t9=t8;
f_32532(2,t9,C_SCHEME_UNDEFINED);}}}}}}}

/* k32530 in k32344 in k32341 in k32338 in mm:make-ctrl in k30217 in k26697 in k26694 in k26691 in k26688 in k26263 in k26260 in k26257 in k26254 in k26251 in k25668 in k25665 in k25142 in k25139 in k25136 in k25133 in k25130 in k25127 in k25124 in k25121 in k25118 in k25115 in k25112 in k25109 in k25106 in k25103 in k25100 in k25097 in k25094 in k25091 in k25088 in k25085 in k25082 in k24943 in k24940 in k24937 in k24934 in k24878 in k24875 in k24872 in k24869 in k24866 in k24863 in k24860 in k24857 in k23555 in k23486 in k23293 in k23290 in k23185 in k23134 in k11783 in k10718 in k10715 in k7274 in k7271 in k6978 in k6975 in k6971 in k6680 in k6677 in k6674 in k6671 */
static void C_ccall f_32532(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_32532,2,t0,t1);}
t2=(C_word)C_i_car(((C_word*)((C_word*)t0)[5])[1]);
t3=C_mutate(((C_word *)((C_word*)t0)[4])+1,t2);
t4=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_32539,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[5],a[4]=((C_word*)t0)[3],tmp=(C_word)a,a+=5,tmp);
t5=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_32547,a[2]=((C_word*)t0)[4],a[3]=t4,tmp=(C_word)a,a+=4,tmp);
C_trace("keyword?");
t6=C_retrieve(lf[13]);
((C_proc3)C_retrieve_proc(t6))(3,t6,t5,((C_word*)((C_word*)t0)[4])[1]);}

/* k32545 in k32530 in k32344 in k32341 in k32338 in mm:make-ctrl in k30217 in k26697 in k26694 in k26691 in k26688 in k26263 in k26260 in k26257 in k26254 in k26251 in k25668 in k25665 in k25142 in k25139 in k25136 in k25133 in k25130 in k25127 in k25124 in k25121 in k25118 in k25115 in k25112 in k25109 in k25106 in k25103 in k25100 in k25097 in k25094 in k25091 in k25088 in k25085 in k25082 in k24943 in k24940 in k24937 in k24934 in k24878 in k24875 in k24872 in k24869 in k24866 in k24863 in k24860 in k24857 in k23555 in k23486 in k23293 in k23290 in k23185 in k23134 in k11783 in k10718 in k10715 in k7274 in k7271 in k6978 in k6975 in k6971 in k6680 in k6677 in k6674 in k6671 */
static void C_ccall f_32547(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
if(C_truep(t1)){
C_trace("error");
t2=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t2))(4,t2,((C_word*)t0)[3],lf[14],((C_word*)((C_word*)t0)[2])[1]);}
else{
t2=((C_word*)t0)[3];
f_32539(2,t2,C_SCHEME_UNDEFINED);}}

/* k32537 in k32530 in k32344 in k32341 in k32338 in mm:make-ctrl in k30217 in k26697 in k26694 in k26691 in k26688 in k26263 in k26260 in k26257 in k26254 in k26251 in k25668 in k25665 in k25142 in k25139 in k25136 in k25133 in k25130 in k25127 in k25124 in k25121 in k25118 in k25115 in k25112 in k25109 in k25106 in k25103 in k25100 in k25097 in k25094 in k25091 in k25088 in k25085 in k25082 in k24943 in k24940 in k24937 in k24934 in k24878 in k24875 in k24872 in k24869 in k24866 in k24863 in k24860 in k24857 in k23555 in k23486 in k23293 in k23290 in k23185 in k23134 in k11783 in k10718 in k10715 in k7274 in k7271 in k6978 in k6975 in k6971 in k6680 in k6677 in k6674 in k6671 */
static void C_ccall f_32539(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word *a;
t2=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[3])[1]);
t4=C_mutate(((C_word *)((C_word*)t0)[3])+1,t3);
t5=((C_word*)t0)[2];
f_32349(t5,t4);}

/* k32501 in k32344 in k32341 in k32338 in mm:make-ctrl in k30217 in k26697 in k26694 in k26691 in k26688 in k26263 in k26260 in k26257 in k26254 in k26251 in k25668 in k25665 in k25142 in k25139 in k25136 in k25133 in k25130 in k25127 in k25124 in k25121 in k25118 in k25115 in k25112 in k25109 in k25106 in k25103 in k25100 in k25097 in k25094 in k25091 in k25088 in k25085 in k25082 in k24943 in k24940 in k24937 in k24934 in k24878 in k24875 in k24872 in k24869 in k24866 in k24863 in k24860 in k24857 in k23555 in k23486 in k23293 in k23290 in k23185 in k23134 in k11783 in k10718 in k10715 in k7274 in k7271 in k6978 in k6975 in k6971 in k6680 in k6677 in k6674 in k6671 */
static void C_ccall f_32503(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_32503,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_32507,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("error");
t4=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[21],((C_word*)t0)[2]);}
else{
t4=t2;
f_32507(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k32505 in k32501 in k32344 in k32341 in k32338 in mm:make-ctrl in k30217 in k26697 in k26694 in k26691 in k26688 in k26263 in k26260 in k26257 in k26254 in k26251 in k25668 in k25665 in k25142 in k25139 in k25136 in k25133 in k25130 in k25127 in k25124 in k25121 in k25118 in k25115 in k25112 in k25109 in k25106 in k25103 in k25100 in k25097 in k25094 in k25091 in k25088 in k25085 in k25082 in k24943 in k24940 in k24937 in k24934 in k24878 in k24875 in k24872 in k24869 in k24866 in k24863 in k24860 in k24857 in k23555 in k23486 in k23293 in k23290 in k23185 in k23134 in k11783 in k10718 in k10715 in k7274 in k7271 in k6978 in k6975 in k6971 in k6680 in k6677 in k6674 in k6671 */
static void C_ccall f_32507(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_32349(t7,t6);}

/* k32466 in k32344 in k32341 in k32338 in mm:make-ctrl in k30217 in k26697 in k26694 in k26691 in k26688 in k26263 in k26260 in k26257 in k26254 in k26251 in k25668 in k25665 in k25142 in k25139 in k25136 in k25133 in k25130 in k25127 in k25124 in k25121 in k25118 in k25115 in k25112 in k25109 in k25106 in k25103 in k25100 in k25097 in k25094 in k25091 in k25088 in k25085 in k25082 in k24943 in k24940 in k24937 in k24934 in k24878 in k24875 in k24872 in k24869 in k24866 in k24863 in k24860 in k24857 in k23555 in k23486 in k23293 in k23290 in k23185 in k23134 in k11783 in k10718 in k10715 in k7274 in k7271 in k6978 in k6975 in k6971 in k6680 in k6677 in k6674 in k6671 */
static void C_ccall f_32468(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_32468,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_32472,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("error");
t4=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[21],((C_word*)t0)[2]);}
else{
t4=t2;
f_32472(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k32470 in k32466 in k32344 in k32341 in k32338 in mm:make-ctrl in k30217 in k26697 in k26694 in k26691 in k26688 in k26263 in k26260 in k26257 in k26254 in k26251 in k25668 in k25665 in k25142 in k25139 in k25136 in k25133 in k25130 in k25127 in k25124 in k25121 in k25118 in k25115 in k25112 in k25109 in k25106 in k25103 in k25100 in k25097 in k25094 in k25091 in k25088 in k25085 in k25082 in k24943 in k24940 in k24937 in k24934 in k24878 in k24875 in k24872 in k24869 in k24866 in k24863 in k24860 in k24857 in k23555 in k23486 in k23293 in k23290 in k23185 in k23134 in k11783 in k10718 in k10715 in k7274 in k7271 in k6978 in k6975 in k6971 in k6680 in k6677 in k6674 in k6671 */
static void C_ccall f_32472(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_32349(t7,t6);}

/* k32431 in k32344 in k32341 in k32338 in mm:make-ctrl in k30217 in k26697 in k26694 in k26691 in k26688 in k26263 in k26260 in k26257 in k26254 in k26251 in k25668 in k25665 in k25142 in k25139 in k25136 in k25133 in k25130 in k25127 in k25124 in k25121 in k25118 in k25115 in k25112 in k25109 in k25106 in k25103 in k25100 in k25097 in k25094 in k25091 in k25088 in k25085 in k25082 in k24943 in k24940 in k24937 in k24934 in k24878 in k24875 in k24872 in k24869 in k24866 in k24863 in k24860 in k24857 in k23555 in k23486 in k23293 in k23290 in k23185 in k23134 in k11783 in k10718 in k10715 in k7274 in k7271 in k6978 in k6975 in k6971 in k6680 in k6677 in k6674 in k6671 */
static void C_ccall f_32433(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_32433,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_32437,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("error");
t4=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[21],((C_word*)t0)[2]);}
else{
t4=t2;
f_32437(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k32435 in k32431 in k32344 in k32341 in k32338 in mm:make-ctrl in k30217 in k26697 in k26694 in k26691 in k26688 in k26263 in k26260 in k26257 in k26254 in k26251 in k25668 in k25665 in k25142 in k25139 in k25136 in k25133 in k25130 in k25127 in k25124 in k25121 in k25118 in k25115 in k25112 in k25109 in k25106 in k25103 in k25100 in k25097 in k25094 in k25091 in k25088 in k25085 in k25082 in k24943 in k24940 in k24937 in k24934 in k24878 in k24875 in k24872 in k24869 in k24866 in k24863 in k24860 in k24857 in k23555 in k23486 in k23293 in k23290 in k23185 in k23134 in k11783 in k10718 in k10715 in k7274 in k7271 in k6978 in k6975 in k6971 in k6680 in k6677 in k6674 in k6671 */
static void C_ccall f_32437(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_32349(t7,t6);}

/* k32396 in k32344 in k32341 in k32338 in mm:make-ctrl in k30217 in k26697 in k26694 in k26691 in k26688 in k26263 in k26260 in k26257 in k26254 in k26251 in k25668 in k25665 in k25142 in k25139 in k25136 in k25133 in k25130 in k25127 in k25124 in k25121 in k25118 in k25115 in k25112 in k25109 in k25106 in k25103 in k25100 in k25097 in k25094 in k25091 in k25088 in k25085 in k25082 in k24943 in k24940 in k24937 in k24934 in k24878 in k24875 in k24872 in k24869 in k24866 in k24863 in k24860 in k24857 in k23555 in k23486 in k23293 in k23290 in k23185 in k23134 in k11783 in k10718 in k10715 in k7274 in k7271 in k6978 in k6975 in k6971 in k6680 in k6677 in k6674 in k6671 */
static void C_ccall f_32398(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_32398,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_32402,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("error");
t4=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[21],((C_word*)t0)[2]);}
else{
t4=t2;
f_32402(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k32400 in k32396 in k32344 in k32341 in k32338 in mm:make-ctrl in k30217 in k26697 in k26694 in k26691 in k26688 in k26263 in k26260 in k26257 in k26254 in k26251 in k25668 in k25665 in k25142 in k25139 in k25136 in k25133 in k25130 in k25127 in k25124 in k25121 in k25118 in k25115 in k25112 in k25109 in k25106 in k25103 in k25100 in k25097 in k25094 in k25091 in k25088 in k25085 in k25082 in k24943 in k24940 in k24937 in k24934 in k24878 in k24875 in k24872 in k24869 in k24866 in k24863 in k24860 in k24857 in k23555 in k23486 in k23293 in k23290 in k23185 in k23134 in k11783 in k10718 in k10715 in k7274 in k7271 in k6978 in k6975 in k6971 in k6680 in k6677 in k6674 in k6671 */
static void C_ccall f_32402(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_32349(t7,t6);}

/* k32347 in k32344 in k32341 in k32338 in mm:make-ctrl in k30217 in k26697 in k26694 in k26691 in k26688 in k26263 in k26260 in k26257 in k26254 in k26251 in k25668 in k25665 in k25142 in k25139 in k25136 in k25133 in k25130 in k25127 in k25124 in k25121 in k25118 in k25115 in k25112 in k25109 in k25106 in k25103 in k25100 in k25097 in k25094 in k25091 in k25088 in k25085 in k25082 in k24943 in k24940 in k24937 in k24934 in k24878 in k24875 in k24872 in k24869 in k24866 in k24863 in k24860 in k24857 in k23555 in k23486 in k23293 in k23290 in k23185 in k23134 in k11783 in k10718 in k10715 in k7274 in k7271 in k6978 in k6975 in k6971 in k6680 in k6677 in k6674 in k6671 */
static void C_fcall f_32349(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_32349,NULL,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_32352,a[2]=((C_word*)t0)[4],a[3]=((C_word*)t0)[5],a[4]=((C_word*)t0)[6],a[5]=((C_word*)t0)[7],a[6]=((C_word*)t0)[8],tmp=(C_word)a,a+=7,tmp);
if(C_truep((C_word)C_i_nullp(((C_word*)((C_word*)t0)[3])[1]))){
t3=t2;
f_32352(2,t3,C_SCHEME_UNDEFINED);}
else{
C_trace("error");
t3=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t3))(4,t3,t2,lf[5],((C_word*)t0)[2]);}}

/* k32350 in k32347 in k32344 in k32341 in k32338 in mm:make-ctrl in k30217 in k26697 in k26694 in k26691 in k26688 in k26263 in k26260 in k26257 in k26254 in k26251 in k25668 in k25665 in k25142 in k25139 in k25136 in k25133 in k25130 in k25127 in k25124 in k25121 in k25118 in k25115 in k25112 in k25109 in k25106 in k25103 in k25100 in k25097 in k25094 in k25091 in k25088 in k25085 in k25082 in k24943 in k24940 in k24937 in k24934 in k24878 in k24875 in k24872 in k24869 in k24866 in k24863 in k24860 in k24857 in k23555 in k23486 in k23293 in k23290 in k23185 in k23134 in k11783 in k10718 in k10715 in k7274 in k7271 in k6978 in k6975 in k6971 in k6680 in k6677 in k6674 in k6671 */
static void C_ccall f_32352(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word ab[3],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_32352,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_32356,a[2]=((C_word)li486),tmp=(C_word)a,a+=3,tmp);
((C_proc7)(void*)(*((C_word*)t2+1)))(7,t2,((C_word*)t0)[6],C_retrieve(lf[725]),((C_word*)((C_word*)t0)[5])[1],((C_word*)((C_word*)t0)[4])[1],((C_word*)((C_word*)t0)[3])[1],((C_word*)((C_word*)t0)[2])[1]);}

/* f_32356 in k32350 in k32347 in k32344 in k32341 in k32338 in mm:make-ctrl in k30217 in k26697 in k26694 in k26691 in k26688 in k26263 in k26260 in k26257 in k26254 in k26251 in k25668 in k25665 in k25142 in k25139 in k25136 in k25133 in k25130 in k25127 in k25124 in k25121 in k25118 in k25115 in k25112 in k25109 in k25106 in k25103 in k25100 in k25097 in k25094 in k25091 in k25088 in k25085 in k25082 in k24943 in k24940 in k24937 in k24934 in k24878 in k24875 in k24872 in k24869 in k24866 in k24863 in k24860 in k24857 in k23555 in k23486 in k23293 in k23290 in k23185 in k23134 in k11783 in k10718 in k10715 in k7274 in k7271 in k6978 in k6975 in k6971 in k6680 in k6677 in k6674 in k6671 */
static void C_ccall f_32356(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4,C_word t5,C_word t6){
C_word tmp;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word ab[5],*a=ab;
if(c!=7) C_bad_argc_2(c,7,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr7,(void*)f_32356,7,t0,t1,t2,t3,t4,t5,t6);}
t7=(C_word)C_a_i_bytevector(&a,1,C_fix(3));
t8=(C_word)C_i_foreign_fixnum_argumentp(t2);
t9=(C_word)C_i_foreign_flonum_argumentp(t3);
t10=(C_word)C_i_foreign_fixnum_argumentp(t4);
t11=(C_word)C_i_foreign_fixnum_argumentp(t5);
t12=(C_word)C_i_foreign_fixnum_argumentp(t6);
t13=t1;
((C_proc2)(void*)(*((C_word*)t13+1)))(2,t13,(C_word)stub5497(t7,t8,t9,t10,t11,t12));}

/* mm:touch? in k30217 in k26697 in k26694 in k26691 in k26688 in k26263 in k26260 in k26257 in k26254 in k26251 in k25668 in k25665 in k25142 in k25139 in k25136 in k25133 in k25130 in k25127 in k25124 in k25121 in k25118 in k25115 in k25112 in k25109 in k25106 in k25103 in k25100 in k25097 in k25094 in k25091 in k25088 in k25085 in k25082 in k24943 in k24940 in k24937 in k24934 in k24878 in k24875 in k24872 in k24869 in k24866 in k24863 in k24860 in k24857 in k23555 in k23486 in k23293 in k23290 in k23185 in k23134 in k11783 in k10718 in k10715 in k7274 in k7271 in k6978 in k6975 in k6971 in k6680 in k6677 in k6674 in k6671 */
static void C_ccall f_32317(C_word c,C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word ab[3],*a=ab;
if(c!=3) C_bad_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr3,(void*)f_32317,3,t0,t1,t2);}
t3=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_32322,a[2]=((C_word)li484),tmp=(C_word)a,a+=3,tmp);
((C_proc4)(void*)(*((C_word*)t3+1)))(4,t3,t1,t2,C_retrieve(lf[724]));}

/* f_32322 in mm:touch? in k30217 in k26697 in k26694 in k26691 in k26688 in k26263 in k26260 in k26257 in k26254 in k26251 in k25668 in k25665 in k25142 in k25139 in k25136 in k25133 in k25130 in k25127 in k25124 in k25121 in k25118 in k25115 in k25112 in k25109 in k25106 in k25103 in k25100 in k25097 in k25094 in k25091 in k25088 in k25085 in k25082 in k24943 in k24940 in k24937 in k24934 in k24878 in k24875 in k24872 in k24869 in k24866 in k24863 in k24860 in k24857 in k23555 in k23486 in k23293 in k23290 in k23185 in k23134 in k11783 in k10718 in k10715 in k7274 in k7271 in k6978 in k6975 in k6971 in k6680 in k6677 in k6674 in k6671 */
static void C_ccall f_32322(C_word c,C_word t0,C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word t6;
C_word *a;
if(c!=4) C_bad_argc_2(c,4,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr4,(void*)f_32322,4,t0,t1,t2,t3);}
t4=(C_truep(t2)?(C_word)C_i_foreign_pointer_argumentp(t2):C_SCHEME_FALSE);
t5=(C_word)C_i_foreign_fixnum_argumentp(t3);
t6=t1;
((C_proc2)(void*)(*((C_word*)t6+1)))(2,t6,(C_word)stub5381(C_SCHEME_UNDEFINED,t4,t5));}

/* mm:make-touch in k30217 in k26697 in k26694 in k26691 in k26688 in k26263 in k26260 in k26257 in k26254 in k26251 in k25668 in k25665 in k25142 in k25139 in k25136 in k25133 in k25130 in k25127 in k25124 in k25121 in k25118 in k25115 in k25112 in k25109 in k25106 in k25103 in k25100 in k25097 in k25094 in k25091 in k25088 in k25085 in k25082 in k24943 in k24940 in k24937 in k24934 in k24878 in k24875 in k24872 in k24869 in k24866 in k24863 in k24860 in k24857 in k23555 in k23486 in k23293 in k23290 in k23185 in k23134 in k11783 in k10718 in k10715 in k7274 in k7271 in k6978 in k6975 in k6971 in k6680 in k6677 in k6674 in k6671 */
static void C_ccall f_31588(C_word c,C_word t0,C_word t1,...){
C_word tmp;
C_word t2;
va_list v;
C_word *a,c2=c;
C_save_rest(t1,c2,2);
C_check_for_interrupt;
if(!C_demand(c*C_SIZEOF_PAIR+72)){
C_save_and_reclaim((void*)tr2r,(void*)f_31588r,2,t0,t1);}
else{
a=C_alloc((c-2)*3);
t2=C_restore_rest(a,C_rest_count(0));
f_31588r(t0,t1,t2);}}

static void C_ccall f_31588r(C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word t14;
C_word t15;
C_word t16;
C_word t17;
C_word t18;
C_word t19;
C_word t20;
C_word t21;
C_word t22;
C_word t23;
C_word t24;
C_word t25;
C_word t26;
C_word t27;
C_word t28;
C_word t29;
C_word t30;
C_word t31;
C_word t32;
C_word t33;
C_word t34;
C_word *a=C_alloc(72);
t3=C_fix(0);
t4=(*a=C_VECTOR_TYPE|1,a[1]=t3,tmp=(C_word)a,a+=2,tmp);
t5=C_fix(0);
t6=(*a=C_VECTOR_TYPE|1,a[1]=t5,tmp=(C_word)a,a+=2,tmp);
t7=C_fix(0);
t8=(*a=C_VECTOR_TYPE|1,a[1]=t7,tmp=(C_word)a,a+=2,tmp);
t9=C_fix(0);
t10=(*a=C_VECTOR_TYPE|1,a[1]=t9,tmp=(C_word)a,a+=2,tmp);
t11=C_SCHEME_FALSE;
t12=(*a=C_VECTOR_TYPE|1,a[1]=t11,tmp=(C_word)a,a+=2,tmp);
t13=C_SCHEME_FALSE;
t14=(*a=C_VECTOR_TYPE|1,a[1]=t13,tmp=(C_word)a,a+=2,tmp);
t15=C_SCHEME_FALSE;
t16=(*a=C_VECTOR_TYPE|1,a[1]=t15,tmp=(C_word)a,a+=2,tmp);
t17=C_SCHEME_FALSE;
t18=(*a=C_VECTOR_TYPE|1,a[1]=t17,tmp=(C_word)a,a+=2,tmp);
t19=t2;
t20=(*a=C_VECTOR_TYPE|1,a[1]=t19,tmp=(C_word)a,a+=2,tmp);
t21=C_SCHEME_FALSE;
t22=(*a=C_VECTOR_TYPE|1,a[1]=t21,tmp=(C_word)a,a+=2,tmp);
t23=(*a=C_CLOSURE_TYPE|13,a[1]=(C_word)f_31592,a[2]=t18,a[3]=t16,a[4]=t14,a[5]=t22,a[6]=t12,a[7]=t2,a[8]=t20,a[9]=t8,a[10]=t6,a[11]=t10,a[12]=t4,a[13]=t1,tmp=(C_word)a,a+=14,tmp);
if(C_truep((C_word)C_i_nullp(((C_word*)t20)[1]))){
t24=t23;
f_31592(t24,C_SCHEME_UNDEFINED);}
else{
t24=(C_word)C_i_car(((C_word*)t20)[1]);
t25=(C_word)C_eqp(t24,lf[730]);
if(C_truep(t25)){
t26=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_32160,a[2]=t2,a[3]=t23,a[4]=t20,a[5]=t22,a[6]=t12,a[7]=t4,tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)t12)[1])){
C_trace("error");
t27=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t27))(4,t27,t26,lf[19],lf[730]);}
else{
t27=t26;
f_32160(2,t27,C_SCHEME_UNDEFINED);}}
else{
t26=(C_word)C_eqp(t24,lf[731]);
if(C_truep(t26)){
t27=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_32195,a[2]=t2,a[3]=t23,a[4]=t20,a[5]=t22,a[6]=t14,a[7]=t6,tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)t14)[1])){
C_trace("error");
t28=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t28))(4,t28,t27,lf[19],lf[731]);}
else{
t28=t27;
f_32195(2,t28,C_SCHEME_UNDEFINED);}}
else{
t27=(C_word)C_eqp(t24,lf[738]);
if(C_truep(t27)){
t28=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_32230,a[2]=t2,a[3]=t23,a[4]=t20,a[5]=t22,a[6]=t16,a[7]=t8,tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)t16)[1])){
C_trace("error");
t29=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t29))(4,t29,t28,lf[19],lf[738]);}
else{
t29=t28;
f_32230(2,t29,C_SCHEME_UNDEFINED);}}
else{
t28=(C_word)C_eqp(t24,lf[733]);
if(C_truep(t28)){
t29=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_32265,a[2]=t2,a[3]=t23,a[4]=t20,a[5]=t22,a[6]=t18,a[7]=t10,tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)t18)[1])){
C_trace("error");
t30=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t30))(4,t30,t29,lf[19],lf[733]);}
else{
t30=t29;
f_32265(2,t30,C_SCHEME_UNDEFINED);}}
else{
t29=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_32294,a[2]=t23,a[3]=t12,a[4]=t4,a[5]=t20,tmp=(C_word)a,a+=6,tmp);
if(C_truep(((C_word*)t22)[1])){
C_trace("error");
t30=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t30))(4,t30,t29,lf[10],t2);}
else{
t30=t29;
f_32294(2,t30,C_SCHEME_UNDEFINED);}}}}}}}

/* k32292 in mm:make-touch in k30217 in k26697 in k26694 in k26691 in k26688 in k26263 in k26260 in k26257 in k26254 in k26251 in k25668 in k25665 in k25142 in k25139 in k25136 in k25133 in k25130 in k25127 in k25124 in k25121 in k25118 in k25115 in k25112 in k25109 in k25106 in k25103 in k25100 in k25097 in k25094 in k25091 in k25088 in k25085 in k25082 in k24943 in k24940 in k24937 in k24934 in k24878 in k24875 in k24872 in k24869 in k24866 in k24863 in k24860 in k24857 in k23555 in k23486 in k23293 in k23290 in k23185 in k23134 in k11783 in k10718 in k10715 in k7274 in k7271 in k6978 in k6975 in k6971 in k6680 in k6677 in k6674 in k6671 */
static void C_ccall f_32294(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_32294,2,t0,t1);}
t2=(C_word)C_i_car(((C_word*)((C_word*)t0)[5])[1]);
t3=C_mutate(((C_word *)((C_word*)t0)[4])+1,t2);
t4=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_32301,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[5],a[4]=((C_word*)t0)[3],tmp=(C_word)a,a+=5,tmp);
t5=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_32309,a[2]=((C_word*)t0)[4],a[3]=t4,tmp=(C_word)a,a+=4,tmp);
C_trace("keyword?");
t6=C_retrieve(lf[13]);
((C_proc3)C_retrieve_proc(t6))(3,t6,t5,((C_word*)((C_word*)t0)[4])[1]);}

/* k32307 in k32292 in mm:make-touch in k30217 in k26697 in k26694 in k26691 in k26688 in k26263 in k26260 in k26257 in k26254 in k26251 in k25668 in k25665 in k25142 in k25139 in k25136 in k25133 in k25130 in k25127 in k25124 in k25121 in k25118 in k25115 in k25112 in k25109 in k25106 in k25103 in k25100 in k25097 in k25094 in k25091 in k25088 in k25085 in k25082 in k24943 in k24940 in k24937 in k24934 in k24878 in k24875 in k24872 in k24869 in k24866 in k24863 in k24860 in k24857 in k23555 in k23486 in k23293 in k23290 in k23185 in k23134 in k11783 in k10718 in k10715 in k7274 in k7271 in k6978 in k6975 in k6971 in k6680 in k6677 in k6674 in k6671 */
static void C_ccall f_32309(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
if(C_truep(t1)){
C_trace("error");
t2=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t2))(4,t2,((C_word*)t0)[3],lf[14],((C_word*)((C_word*)t0)[2])[1]);}
else{
t2=((C_word*)t0)[3];
f_32301(2,t2,C_SCHEME_UNDEFINED);}}

/* k32299 in k32292 in mm:make-touch in k30217 in k26697 in k26694 in k26691 in k26688 in k26263 in k26260 in k26257 in k26254 in k26251 in k25668 in k25665 in k25142 in k25139 in k25136 in k25133 in k25130 in k25127 in k25124 in k25121 in k25118 in k25115 in k25112 in k25109 in k25106 in k25103 in k25100 in k25097 in k25094 in k25091 in k25088 in k25085 in k25082 in k24943 in k24940 in k24937 in k24934 in k24878 in k24875 in k24872 in k24869 in k24866 in k24863 in k24860 in k24857 in k23555 in k23486 in k23293 in k23290 in k23185 in k23134 in k11783 in k10718 in k10715 in k7274 in k7271 in k6978 in k6975 in k6971 in k6680 in k6677 in k6674 in k6671 */
static void C_ccall f_32301(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word *a;
t2=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[3])[1]);
t4=C_mutate(((C_word *)((C_word*)t0)[3])+1,t3);
t5=((C_word*)t0)[2];
f_31592(t5,t4);}

/* k32263 in mm:make-touch in k30217 in k26697 in k26694 in k26691 in k26688 in k26263 in k26260 in k26257 in k26254 in k26251 in k25668 in k25665 in k25142 in k25139 in k25136 in k25133 in k25130 in k25127 in k25124 in k25121 in k25118 in k25115 in k25112 in k25109 in k25106 in k25103 in k25100 in k25097 in k25094 in k25091 in k25088 in k25085 in k25082 in k24943 in k24940 in k24937 in k24934 in k24878 in k24875 in k24872 in k24869 in k24866 in k24863 in k24860 in k24857 in k23555 in k23486 in k23293 in k23290 in k23185 in k23134 in k11783 in k10718 in k10715 in k7274 in k7271 in k6978 in k6975 in k6971 in k6680 in k6677 in k6674 in k6671 */
static void C_ccall f_32265(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_32265,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_32269,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("error");
t4=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[21],((C_word*)t0)[2]);}
else{
t4=t2;
f_32269(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k32267 in k32263 in mm:make-touch in k30217 in k26697 in k26694 in k26691 in k26688 in k26263 in k26260 in k26257 in k26254 in k26251 in k25668 in k25665 in k25142 in k25139 in k25136 in k25133 in k25130 in k25127 in k25124 in k25121 in k25118 in k25115 in k25112 in k25109 in k25106 in k25103 in k25100 in k25097 in k25094 in k25091 in k25088 in k25085 in k25082 in k24943 in k24940 in k24937 in k24934 in k24878 in k24875 in k24872 in k24869 in k24866 in k24863 in k24860 in k24857 in k23555 in k23486 in k23293 in k23290 in k23185 in k23134 in k11783 in k10718 in k10715 in k7274 in k7271 in k6978 in k6975 in k6971 in k6680 in k6677 in k6674 in k6671 */
static void C_ccall f_32269(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_31592(t7,t6);}

/* k32228 in mm:make-touch in k30217 in k26697 in k26694 in k26691 in k26688 in k26263 in k26260 in k26257 in k26254 in k26251 in k25668 in k25665 in k25142 in k25139 in k25136 in k25133 in k25130 in k25127 in k25124 in k25121 in k25118 in k25115 in k25112 in k25109 in k25106 in k25103 in k25100 in k25097 in k25094 in k25091 in k25088 in k25085 in k25082 in k24943 in k24940 in k24937 in k24934 in k24878 in k24875 in k24872 in k24869 in k24866 in k24863 in k24860 in k24857 in k23555 in k23486 in k23293 in k23290 in k23185 in k23134 in k11783 in k10718 in k10715 in k7274 in k7271 in k6978 in k6975 in k6971 in k6680 in k6677 in k6674 in k6671 */
static void C_ccall f_32230(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_32230,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_32234,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("error");
t4=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[21],((C_word*)t0)[2]);}
else{
t4=t2;
f_32234(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k32232 in k32228 in mm:make-touch in k30217 in k26697 in k26694 in k26691 in k26688 in k26263 in k26260 in k26257 in k26254 in k26251 in k25668 in k25665 in k25142 in k25139 in k25136 in k25133 in k25130 in k25127 in k25124 in k25121 in k25118 in k25115 in k25112 in k25109 in k25106 in k25103 in k25100 in k25097 in k25094 in k25091 in k25088 in k25085 in k25082 in k24943 in k24940 in k24937 in k24934 in k24878 in k24875 in k24872 in k24869 in k24866 in k24863 in k24860 in k24857 in k23555 in k23486 in k23293 in k23290 in k23185 in k23134 in k11783 in k10718 in k10715 in k7274 in k7271 in k6978 in k6975 in k6971 in k6680 in k6677 in k6674 in k6671 */
static void C_ccall f_32234(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_31592(t7,t6);}

/* k32193 in mm:make-touch in k30217 in k26697 in k26694 in k26691 in k26688 in k26263 in k26260 in k26257 in k26254 in k26251 in k25668 in k25665 in k25142 in k25139 in k25136 in k25133 in k25130 in k25127 in k25124 in k25121 in k25118 in k25115 in k25112 in k25109 in k25106 in k25103 in k25100 in k25097 in k25094 in k25091 in k25088 in k25085 in k25082 in k24943 in k24940 in k24937 in k24934 in k24878 in k24875 in k24872 in k24869 in k24866 in k24863 in k24860 in k24857 in k23555 in k23486 in k23293 in k23290 in k23185 in k23134 in k11783 in k10718 in k10715 in k7274 in k7271 in k6978 in k6975 in k6971 in k6680 in k6677 in k6674 in k6671 */
static void C_ccall f_32195(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_32195,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_32199,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("error");
t4=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[21],((C_word*)t0)[2]);}
else{
t4=t2;
f_32199(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k32197 in k32193 in mm:make-touch in k30217 in k26697 in k26694 in k26691 in k26688 in k26263 in k26260 in k26257 in k26254 in k26251 in k25668 in k25665 in k25142 in k25139 in k25136 in k25133 in k25130 in k25127 in k25124 in k25121 in k25118 in k25115 in k25112 in k25109 in k25106 in k25103 in k25100 in k25097 in k25094 in k25091 in k25088 in k25085 in k25082 in k24943 in k24940 in k24937 in k24934 in k24878 in k24875 in k24872 in k24869 in k24866 in k24863 in k24860 in k24857 in k23555 in k23486 in k23293 in k23290 in k23185 in k23134 in k11783 in k10718 in k10715 in k7274 in k7271 in k6978 in k6975 in k6971 in k6680 in k6677 in k6674 in k6671 */
static void C_ccall f_32199(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_31592(t7,t6);}

/* k32158 in mm:make-touch in k30217 in k26697 in k26694 in k26691 in k26688 in k26263 in k26260 in k26257 in k26254 in k26251 in k25668 in k25665 in k25142 in k25139 in k25136 in k25133 in k25130 in k25127 in k25124 in k25121 in k25118 in k25115 in k25112 in k25109 in k25106 in k25103 in k25100 in k25097 in k25094 in k25091 in k25088 in k25085 in k25082 in k24943 in k24940 in k24937 in k24934 in k24878 in k24875 in k24872 in k24869 in k24866 in k24863 in k24860 in k24857 in k23555 in k23486 in k23293 in k23290 in k23185 in k23134 in k11783 in k10718 in k10715 in k7274 in k7271 in k6978 in k6975 in k6971 in k6680 in k6677 in k6674 in k6671 */
static void C_ccall f_32160(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_32160,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_32164,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("error");
t4=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[21],((C_word*)t0)[2]);}
else{
t4=t2;
f_32164(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k32162 in k32158 in mm:make-touch in k30217 in k26697 in k26694 in k26691 in k26688 in k26263 in k26260 in k26257 in k26254 in k26251 in k25668 in k25665 in k25142 in k25139 in k25136 in k25133 in k25130 in k25127 in k25124 in k25121 in k25118 in k25115 in k25112 in k25109 in k25106 in k25103 in k25100 in k25097 in k25094 in k25091 in k25088 in k25085 in k25082 in k24943 in k24940 in k24937 in k24934 in k24878 in k24875 in k24872 in k24869 in k24866 in k24863 in k24860 in k24857 in k23555 in k23486 in k23293 in k23290 in k23185 in k23134 in k11783 in k10718 in k10715 in k7274 in k7271 in k6978 in k6975 in k6971 in k6680 in k6677 in k6674 in k6671 */
static void C_ccall f_32164(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_31592(t7,t6);}

/* k31590 in mm:make-touch in k30217 in k26697 in k26694 in k26691 in k26688 in k26263 in k26260 in k26257 in k26254 in k26251 in k25668 in k25665 in k25142 in k25139 in k25136 in k25133 in k25130 in k25127 in k25124 in k25121 in k25118 in k25115 in k25112 in k25109 in k25106 in k25103 in k25100 in k25097 in k25094 in k25091 in k25088 in k25085 in k25082 in k24943 in k24940 in k24937 in k24934 in k24878 in k24875 in k24872 in k24869 in k24866 in k24863 in k24860 in k24857 in k23555 in k23486 in k23293 in k23290 in k23185 in k23134 in k11783 in k10718 in k10715 in k7274 in k7271 in k6978 in k6975 in k6971 in k6680 in k6677 in k6674 in k6671 */
static void C_fcall f_31592(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word ab[52],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_31592,NULL,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|13,a[1]=(C_word)f_31595,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],a[7]=((C_word*)t0)[7],a[8]=((C_word*)t0)[8],a[9]=((C_word*)t0)[9],a[10]=((C_word*)t0)[10],a[11]=((C_word*)t0)[11],a[12]=((C_word*)t0)[12],a[13]=((C_word*)t0)[13],tmp=(C_word)a,a+=14,tmp);
if(C_truep((C_word)C_i_nullp(((C_word*)((C_word*)t0)[8])[1]))){
t3=t2;
f_31595(t3,C_SCHEME_UNDEFINED);}
else{
t3=(C_word)C_i_car(((C_word*)((C_word*)t0)[8])[1]);
t4=(C_word)C_eqp(t3,lf[730]);
if(C_truep(t4)){
t5=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_31990,a[2]=((C_word*)t0)[7],a[3]=t2,a[4]=((C_word*)t0)[8],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],a[7]=((C_word*)t0)[12],tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)((C_word*)t0)[6])[1])){
C_trace("error");
t6=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t6))(4,t6,t5,lf[19],lf[730]);}
else{
t6=t5;
f_31990(2,t6,C_SCHEME_UNDEFINED);}}
else{
t5=(C_word)C_eqp(t3,lf[731]);
if(C_truep(t5)){
t6=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_32025,a[2]=((C_word*)t0)[7],a[3]=t2,a[4]=((C_word*)t0)[8],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[4],a[7]=((C_word*)t0)[10],tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)((C_word*)t0)[4])[1])){
C_trace("error");
t7=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t7))(4,t7,t6,lf[19],lf[731]);}
else{
t7=t6;
f_32025(2,t7,C_SCHEME_UNDEFINED);}}
else{
t6=(C_word)C_eqp(t3,lf[738]);
if(C_truep(t6)){
t7=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_32060,a[2]=((C_word*)t0)[7],a[3]=t2,a[4]=((C_word*)t0)[8],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[3],a[7]=((C_word*)t0)[9],tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)((C_word*)t0)[3])[1])){
C_trace("error");
t8=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t8))(4,t8,t7,lf[19],lf[738]);}
else{
t8=t7;
f_32060(2,t8,C_SCHEME_UNDEFINED);}}
else{
t7=(C_word)C_eqp(t3,lf[733]);
if(C_truep(t7)){
t8=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_32095,a[2]=((C_word*)t0)[7],a[3]=t2,a[4]=((C_word*)t0)[8],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[2],a[7]=((C_word*)t0)[11],tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)((C_word*)t0)[2])[1])){
C_trace("error");
t9=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t9))(4,t9,t8,lf[19],lf[733]);}
else{
t9=t8;
f_32095(2,t9,C_SCHEME_UNDEFINED);}}
else{
t8=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_32124,a[2]=t2,a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[10],a[5]=((C_word*)t0)[8],tmp=(C_word)a,a+=6,tmp);
if(C_truep(((C_word*)((C_word*)t0)[5])[1])){
C_trace("error");
t9=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t9))(4,t9,t8,lf[10],((C_word*)t0)[7]);}
else{
t9=t8;
f_32124(2,t9,C_SCHEME_UNDEFINED);}}}}}}}

/* k32122 in k31590 in mm:make-touch in k30217 in k26697 in k26694 in k26691 in k26688 in k26263 in k26260 in k26257 in k26254 in k26251 in k25668 in k25665 in k25142 in k25139 in k25136 in k25133 in k25130 in k25127 in k25124 in k25121 in k25118 in k25115 in k25112 in k25109 in k25106 in k25103 in k25100 in k25097 in k25094 in k25091 in k25088 in k25085 in k25082 in k24943 in k24940 in k24937 in k24934 in k24878 in k24875 in k24872 in k24869 in k24866 in k24863 in k24860 in k24857 in k23555 in k23486 in k23293 in k23290 in k23185 in k23134 in k11783 in k10718 in k10715 in k7274 in k7271 in k6978 in k6975 in k6971 in k6680 in k6677 in k6674 in k6671 */
static void C_ccall f_32124(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_32124,2,t0,t1);}
t2=(C_word)C_i_car(((C_word*)((C_word*)t0)[5])[1]);
t3=C_mutate(((C_word *)((C_word*)t0)[4])+1,t2);
t4=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_32131,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[5],a[4]=((C_word*)t0)[3],tmp=(C_word)a,a+=5,tmp);
t5=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_32139,a[2]=((C_word*)t0)[4],a[3]=t4,tmp=(C_word)a,a+=4,tmp);
C_trace("keyword?");
t6=C_retrieve(lf[13]);
((C_proc3)C_retrieve_proc(t6))(3,t6,t5,((C_word*)((C_word*)t0)[4])[1]);}

/* k32137 in k32122 in k31590 in mm:make-touch in k30217 in k26697 in k26694 in k26691 in k26688 in k26263 in k26260 in k26257 in k26254 in k26251 in k25668 in k25665 in k25142 in k25139 in k25136 in k25133 in k25130 in k25127 in k25124 in k25121 in k25118 in k25115 in k25112 in k25109 in k25106 in k25103 in k25100 in k25097 in k25094 in k25091 in k25088 in k25085 in k25082 in k24943 in k24940 in k24937 in k24934 in k24878 in k24875 in k24872 in k24869 in k24866 in k24863 in k24860 in k24857 in k23555 in k23486 in k23293 in k23290 in k23185 in k23134 in k11783 in k10718 in k10715 in k7274 in k7271 in k6978 in k6975 in k6971 in k6680 in k6677 in k6674 in k6671 */
static void C_ccall f_32139(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
if(C_truep(t1)){
C_trace("error");
t2=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t2))(4,t2,((C_word*)t0)[3],lf[14],((C_word*)((C_word*)t0)[2])[1]);}
else{
t2=((C_word*)t0)[3];
f_32131(2,t2,C_SCHEME_UNDEFINED);}}

/* k32129 in k32122 in k31590 in mm:make-touch in k30217 in k26697 in k26694 in k26691 in k26688 in k26263 in k26260 in k26257 in k26254 in k26251 in k25668 in k25665 in k25142 in k25139 in k25136 in k25133 in k25130 in k25127 in k25124 in k25121 in k25118 in k25115 in k25112 in k25109 in k25106 in k25103 in k25100 in k25097 in k25094 in k25091 in k25088 in k25085 in k25082 in k24943 in k24940 in k24937 in k24934 in k24878 in k24875 in k24872 in k24869 in k24866 in k24863 in k24860 in k24857 in k23555 in k23486 in k23293 in k23290 in k23185 in k23134 in k11783 in k10718 in k10715 in k7274 in k7271 in k6978 in k6975 in k6971 in k6680 in k6677 in k6674 in k6671 */
static void C_ccall f_32131(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word *a;
t2=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[3])[1]);
t4=C_mutate(((C_word *)((C_word*)t0)[3])+1,t3);
t5=((C_word*)t0)[2];
f_31595(t5,t4);}

/* k32093 in k31590 in mm:make-touch in k30217 in k26697 in k26694 in k26691 in k26688 in k26263 in k26260 in k26257 in k26254 in k26251 in k25668 in k25665 in k25142 in k25139 in k25136 in k25133 in k25130 in k25127 in k25124 in k25121 in k25118 in k25115 in k25112 in k25109 in k25106 in k25103 in k25100 in k25097 in k25094 in k25091 in k25088 in k25085 in k25082 in k24943 in k24940 in k24937 in k24934 in k24878 in k24875 in k24872 in k24869 in k24866 in k24863 in k24860 in k24857 in k23555 in k23486 in k23293 in k23290 in k23185 in k23134 in k11783 in k10718 in k10715 in k7274 in k7271 in k6978 in k6975 in k6971 in k6680 in k6677 in k6674 in k6671 */
static void C_ccall f_32095(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_32095,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_32099,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("error");
t4=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[21],((C_word*)t0)[2]);}
else{
t4=t2;
f_32099(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k32097 in k32093 in k31590 in mm:make-touch in k30217 in k26697 in k26694 in k26691 in k26688 in k26263 in k26260 in k26257 in k26254 in k26251 in k25668 in k25665 in k25142 in k25139 in k25136 in k25133 in k25130 in k25127 in k25124 in k25121 in k25118 in k25115 in k25112 in k25109 in k25106 in k25103 in k25100 in k25097 in k25094 in k25091 in k25088 in k25085 in k25082 in k24943 in k24940 in k24937 in k24934 in k24878 in k24875 in k24872 in k24869 in k24866 in k24863 in k24860 in k24857 in k23555 in k23486 in k23293 in k23290 in k23185 in k23134 in k11783 in k10718 in k10715 in k7274 in k7271 in k6978 in k6975 in k6971 in k6680 in k6677 in k6674 in k6671 */
static void C_ccall f_32099(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_31595(t7,t6);}

/* k32058 in k31590 in mm:make-touch in k30217 in k26697 in k26694 in k26691 in k26688 in k26263 in k26260 in k26257 in k26254 in k26251 in k25668 in k25665 in k25142 in k25139 in k25136 in k25133 in k25130 in k25127 in k25124 in k25121 in k25118 in k25115 in k25112 in k25109 in k25106 in k25103 in k25100 in k25097 in k25094 in k25091 in k25088 in k25085 in k25082 in k24943 in k24940 in k24937 in k24934 in k24878 in k24875 in k24872 in k24869 in k24866 in k24863 in k24860 in k24857 in k23555 in k23486 in k23293 in k23290 in k23185 in k23134 in k11783 in k10718 in k10715 in k7274 in k7271 in k6978 in k6975 in k6971 in k6680 in k6677 in k6674 in k6671 */
static void C_ccall f_32060(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_32060,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_32064,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("error");
t4=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[21],((C_word*)t0)[2]);}
else{
t4=t2;
f_32064(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k32062 in k32058 in k31590 in mm:make-touch in k30217 in k26697 in k26694 in k26691 in k26688 in k26263 in k26260 in k26257 in k26254 in k26251 in k25668 in k25665 in k25142 in k25139 in k25136 in k25133 in k25130 in k25127 in k25124 in k25121 in k25118 in k25115 in k25112 in k25109 in k25106 in k25103 in k25100 in k25097 in k25094 in k25091 in k25088 in k25085 in k25082 in k24943 in k24940 in k24937 in k24934 in k24878 in k24875 in k24872 in k24869 in k24866 in k24863 in k24860 in k24857 in k23555 in k23486 in k23293 in k23290 in k23185 in k23134 in k11783 in k10718 in k10715 in k7274 in k7271 in k6978 in k6975 in k6971 in k6680 in k6677 in k6674 in k6671 */
static void C_ccall f_32064(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_31595(t7,t6);}

/* k32023 in k31590 in mm:make-touch in k30217 in k26697 in k26694 in k26691 in k26688 in k26263 in k26260 in k26257 in k26254 in k26251 in k25668 in k25665 in k25142 in k25139 in k25136 in k25133 in k25130 in k25127 in k25124 in k25121 in k25118 in k25115 in k25112 in k25109 in k25106 in k25103 in k25100 in k25097 in k25094 in k25091 in k25088 in k25085 in k25082 in k24943 in k24940 in k24937 in k24934 in k24878 in k24875 in k24872 in k24869 in k24866 in k24863 in k24860 in k24857 in k23555 in k23486 in k23293 in k23290 in k23185 in k23134 in k11783 in k10718 in k10715 in k7274 in k7271 in k6978 in k6975 in k6971 in k6680 in k6677 in k6674 in k6671 */
static void C_ccall f_32025(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_32025,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_32029,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("error");
t4=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[21],((C_word*)t0)[2]);}
else{
t4=t2;
f_32029(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k32027 in k32023 in k31590 in mm:make-touch in k30217 in k26697 in k26694 in k26691 in k26688 in k26263 in k26260 in k26257 in k26254 in k26251 in k25668 in k25665 in k25142 in k25139 in k25136 in k25133 in k25130 in k25127 in k25124 in k25121 in k25118 in k25115 in k25112 in k25109 in k25106 in k25103 in k25100 in k25097 in k25094 in k25091 in k25088 in k25085 in k25082 in k24943 in k24940 in k24937 in k24934 in k24878 in k24875 in k24872 in k24869 in k24866 in k24863 in k24860 in k24857 in k23555 in k23486 in k23293 in k23290 in k23185 in k23134 in k11783 in k10718 in k10715 in k7274 in k7271 in k6978 in k6975 in k6971 in k6680 in k6677 in k6674 in k6671 */
static void C_ccall f_32029(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_31595(t7,t6);}

/* k31988 in k31590 in mm:make-touch in k30217 in k26697 in k26694 in k26691 in k26688 in k26263 in k26260 in k26257 in k26254 in k26251 in k25668 in k25665 in k25142 in k25139 in k25136 in k25133 in k25130 in k25127 in k25124 in k25121 in k25118 in k25115 in k25112 in k25109 in k25106 in k25103 in k25100 in k25097 in k25094 in k25091 in k25088 in k25085 in k25082 in k24943 in k24940 in k24937 in k24934 in k24878 in k24875 in k24872 in k24869 in k24866 in k24863 in k24860 in k24857 in k23555 in k23486 in k23293 in k23290 in k23185 in k23134 in k11783 in k10718 in k10715 in k7274 in k7271 in k6978 in k6975 in k6971 in k6680 in k6677 in k6674 in k6671 */
static void C_ccall f_31990(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_31990,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_31994,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("error");
t4=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[21],((C_word*)t0)[2]);}
else{
t4=t2;
f_31994(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k31992 in k31988 in k31590 in mm:make-touch in k30217 in k26697 in k26694 in k26691 in k26688 in k26263 in k26260 in k26257 in k26254 in k26251 in k25668 in k25665 in k25142 in k25139 in k25136 in k25133 in k25130 in k25127 in k25124 in k25121 in k25118 in k25115 in k25112 in k25109 in k25106 in k25103 in k25100 in k25097 in k25094 in k25091 in k25088 in k25085 in k25082 in k24943 in k24940 in k24937 in k24934 in k24878 in k24875 in k24872 in k24869 in k24866 in k24863 in k24860 in k24857 in k23555 in k23486 in k23293 in k23290 in k23185 in k23134 in k11783 in k10718 in k10715 in k7274 in k7271 in k6978 in k6975 in k6971 in k6680 in k6677 in k6674 in k6671 */
static void C_ccall f_31994(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_31595(t7,t6);}

/* k31593 in k31590 in mm:make-touch in k30217 in k26697 in k26694 in k26691 in k26688 in k26263 in k26260 in k26257 in k26254 in k26251 in k25668 in k25665 in k25142 in k25139 in k25136 in k25133 in k25130 in k25127 in k25124 in k25121 in k25118 in k25115 in k25112 in k25109 in k25106 in k25103 in k25100 in k25097 in k25094 in k25091 in k25088 in k25085 in k25082 in k24943 in k24940 in k24937 in k24934 in k24878 in k24875 in k24872 in k24869 in k24866 in k24863 in k24860 in k24857 in k23555 in k23486 in k23293 in k23290 in k23185 in k23134 in k11783 in k10718 in k10715 in k7274 in k7271 in k6978 in k6975 in k6971 in k6680 in k6677 in k6674 in k6671 */
static void C_fcall f_31595(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word ab[52],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_31595,NULL,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|13,a[1]=(C_word)f_31598,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],a[7]=((C_word*)t0)[7],a[8]=((C_word*)t0)[8],a[9]=((C_word*)t0)[9],a[10]=((C_word*)t0)[10],a[11]=((C_word*)t0)[11],a[12]=((C_word*)t0)[12],a[13]=((C_word*)t0)[13],tmp=(C_word)a,a+=14,tmp);
if(C_truep((C_word)C_i_nullp(((C_word*)((C_word*)t0)[8])[1]))){
t3=t2;
f_31598(t3,C_SCHEME_UNDEFINED);}
else{
t3=(C_word)C_i_car(((C_word*)((C_word*)t0)[8])[1]);
t4=(C_word)C_eqp(t3,lf[730]);
if(C_truep(t4)){
t5=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_31820,a[2]=((C_word*)t0)[7],a[3]=t2,a[4]=((C_word*)t0)[8],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],a[7]=((C_word*)t0)[12],tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)((C_word*)t0)[6])[1])){
C_trace("error");
t6=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t6))(4,t6,t5,lf[19],lf[730]);}
else{
t6=t5;
f_31820(2,t6,C_SCHEME_UNDEFINED);}}
else{
t5=(C_word)C_eqp(t3,lf[731]);
if(C_truep(t5)){
t6=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_31855,a[2]=((C_word*)t0)[7],a[3]=t2,a[4]=((C_word*)t0)[8],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[4],a[7]=((C_word*)t0)[10],tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)((C_word*)t0)[4])[1])){
C_trace("error");
t7=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t7))(4,t7,t6,lf[19],lf[731]);}
else{
t7=t6;
f_31855(2,t7,C_SCHEME_UNDEFINED);}}
else{
t6=(C_word)C_eqp(t3,lf[738]);
if(C_truep(t6)){
t7=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_31890,a[2]=((C_word*)t0)[7],a[3]=t2,a[4]=((C_word*)t0)[8],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[3],a[7]=((C_word*)t0)[9],tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)((C_word*)t0)[3])[1])){
C_trace("error");
t8=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t8))(4,t8,t7,lf[19],lf[738]);}
else{
t8=t7;
f_31890(2,t8,C_SCHEME_UNDEFINED);}}
else{
t7=(C_word)C_eqp(t3,lf[733]);
if(C_truep(t7)){
t8=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_31925,a[2]=((C_word*)t0)[7],a[3]=t2,a[4]=((C_word*)t0)[8],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[2],a[7]=((C_word*)t0)[11],tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)((C_word*)t0)[2])[1])){
C_trace("error");
t9=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t9))(4,t9,t8,lf[19],lf[733]);}
else{
t9=t8;
f_31925(2,t9,C_SCHEME_UNDEFINED);}}
else{
t8=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_31954,a[2]=t2,a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[9],a[5]=((C_word*)t0)[8],tmp=(C_word)a,a+=6,tmp);
if(C_truep(((C_word*)((C_word*)t0)[5])[1])){
C_trace("error");
t9=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t9))(4,t9,t8,lf[10],((C_word*)t0)[7]);}
else{
t9=t8;
f_31954(2,t9,C_SCHEME_UNDEFINED);}}}}}}}

/* k31952 in k31593 in k31590 in mm:make-touch in k30217 in k26697 in k26694 in k26691 in k26688 in k26263 in k26260 in k26257 in k26254 in k26251 in k25668 in k25665 in k25142 in k25139 in k25136 in k25133 in k25130 in k25127 in k25124 in k25121 in k25118 in k25115 in k25112 in k25109 in k25106 in k25103 in k25100 in k25097 in k25094 in k25091 in k25088 in k25085 in k25082 in k24943 in k24940 in k24937 in k24934 in k24878 in k24875 in k24872 in k24869 in k24866 in k24863 in k24860 in k24857 in k23555 in k23486 in k23293 in k23290 in k23185 in k23134 in k11783 in k10718 in k10715 in k7274 in k7271 in k6978 in k6975 in k6971 in k6680 in k6677 in k6674 in k6671 */
static void C_ccall f_31954(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_31954,2,t0,t1);}
t2=(C_word)C_i_car(((C_word*)((C_word*)t0)[5])[1]);
t3=C_mutate(((C_word *)((C_word*)t0)[4])+1,t2);
t4=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_31961,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[5],a[4]=((C_word*)t0)[3],tmp=(C_word)a,a+=5,tmp);
t5=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_31969,a[2]=((C_word*)t0)[4],a[3]=t4,tmp=(C_word)a,a+=4,tmp);
C_trace("keyword?");
t6=C_retrieve(lf[13]);
((C_proc3)C_retrieve_proc(t6))(3,t6,t5,((C_word*)((C_word*)t0)[4])[1]);}

/* k31967 in k31952 in k31593 in k31590 in mm:make-touch in k30217 in k26697 in k26694 in k26691 in k26688 in k26263 in k26260 in k26257 in k26254 in k26251 in k25668 in k25665 in k25142 in k25139 in k25136 in k25133 in k25130 in k25127 in k25124 in k25121 in k25118 in k25115 in k25112 in k25109 in k25106 in k25103 in k25100 in k25097 in k25094 in k25091 in k25088 in k25085 in k25082 in k24943 in k24940 in k24937 in k24934 in k24878 in k24875 in k24872 in k24869 in k24866 in k24863 in k24860 in k24857 in k23555 in k23486 in k23293 in k23290 in k23185 in k23134 in k11783 in k10718 in k10715 in k7274 in k7271 in k6978 in k6975 in k6971 in k6680 in k6677 in k6674 in k6671 */
static void C_ccall f_31969(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
if(C_truep(t1)){
C_trace("error");
t2=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t2))(4,t2,((C_word*)t0)[3],lf[14],((C_word*)((C_word*)t0)[2])[1]);}
else{
t2=((C_word*)t0)[3];
f_31961(2,t2,C_SCHEME_UNDEFINED);}}

/* k31959 in k31952 in k31593 in k31590 in mm:make-touch in k30217 in k26697 in k26694 in k26691 in k26688 in k26263 in k26260 in k26257 in k26254 in k26251 in k25668 in k25665 in k25142 in k25139 in k25136 in k25133 in k25130 in k25127 in k25124 in k25121 in k25118 in k25115 in k25112 in k25109 in k25106 in k25103 in k25100 in k25097 in k25094 in k25091 in k25088 in k25085 in k25082 in k24943 in k24940 in k24937 in k24934 in k24878 in k24875 in k24872 in k24869 in k24866 in k24863 in k24860 in k24857 in k23555 in k23486 in k23293 in k23290 in k23185 in k23134 in k11783 in k10718 in k10715 in k7274 in k7271 in k6978 in k6975 in k6971 in k6680 in k6677 in k6674 in k6671 */
static void C_ccall f_31961(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word *a;
t2=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[3])[1]);
t4=C_mutate(((C_word *)((C_word*)t0)[3])+1,t3);
t5=((C_word*)t0)[2];
f_31598(t5,t4);}

/* k31923 in k31593 in k31590 in mm:make-touch in k30217 in k26697 in k26694 in k26691 in k26688 in k26263 in k26260 in k26257 in k26254 in k26251 in k25668 in k25665 in k25142 in k25139 in k25136 in k25133 in k25130 in k25127 in k25124 in k25121 in k25118 in k25115 in k25112 in k25109 in k25106 in k25103 in k25100 in k25097 in k25094 in k25091 in k25088 in k25085 in k25082 in k24943 in k24940 in k24937 in k24934 in k24878 in k24875 in k24872 in k24869 in k24866 in k24863 in k24860 in k24857 in k23555 in k23486 in k23293 in k23290 in k23185 in k23134 in k11783 in k10718 in k10715 in k7274 in k7271 in k6978 in k6975 in k6971 in k6680 in k6677 in k6674 in k6671 */
static void C_ccall f_31925(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_31925,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_31929,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("error");
t4=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[21],((C_word*)t0)[2]);}
else{
t4=t2;
f_31929(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k31927 in k31923 in k31593 in k31590 in mm:make-touch in k30217 in k26697 in k26694 in k26691 in k26688 in k26263 in k26260 in k26257 in k26254 in k26251 in k25668 in k25665 in k25142 in k25139 in k25136 in k25133 in k25130 in k25127 in k25124 in k25121 in k25118 in k25115 in k25112 in k25109 in k25106 in k25103 in k25100 in k25097 in k25094 in k25091 in k25088 in k25085 in k25082 in k24943 in k24940 in k24937 in k24934 in k24878 in k24875 in k24872 in k24869 in k24866 in k24863 in k24860 in k24857 in k23555 in k23486 in k23293 in k23290 in k23185 in k23134 in k11783 in k10718 in k10715 in k7274 in k7271 in k6978 in k6975 in k6971 in k6680 in k6677 in k6674 in k6671 */
static void C_ccall f_31929(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_31598(t7,t6);}

/* k31888 in k31593 in k31590 in mm:make-touch in k30217 in k26697 in k26694 in k26691 in k26688 in k26263 in k26260 in k26257 in k26254 in k26251 in k25668 in k25665 in k25142 in k25139 in k25136 in k25133 in k25130 in k25127 in k25124 in k25121 in k25118 in k25115 in k25112 in k25109 in k25106 in k25103 in k25100 in k25097 in k25094 in k25091 in k25088 in k25085 in k25082 in k24943 in k24940 in k24937 in k24934 in k24878 in k24875 in k24872 in k24869 in k24866 in k24863 in k24860 in k24857 in k23555 in k23486 in k23293 in k23290 in k23185 in k23134 in k11783 in k10718 in k10715 in k7274 in k7271 in k6978 in k6975 in k6971 in k6680 in k6677 in k6674 in k6671 */
static void C_ccall f_31890(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_31890,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_31894,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("error");
t4=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[21],((C_word*)t0)[2]);}
else{
t4=t2;
f_31894(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k31892 in k31888 in k31593 in k31590 in mm:make-touch in k30217 in k26697 in k26694 in k26691 in k26688 in k26263 in k26260 in k26257 in k26254 in k26251 in k25668 in k25665 in k25142 in k25139 in k25136 in k25133 in k25130 in k25127 in k25124 in k25121 in k25118 in k25115 in k25112 in k25109 in k25106 in k25103 in k25100 in k25097 in k25094 in k25091 in k25088 in k25085 in k25082 in k24943 in k24940 in k24937 in k24934 in k24878 in k24875 in k24872 in k24869 in k24866 in k24863 in k24860 in k24857 in k23555 in k23486 in k23293 in k23290 in k23185 in k23134 in k11783 in k10718 in k10715 in k7274 in k7271 in k6978 in k6975 in k6971 in k6680 in k6677 in k6674 in k6671 */
static void C_ccall f_31894(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_31598(t7,t6);}

/* k31853 in k31593 in k31590 in mm:make-touch in k30217 in k26697 in k26694 in k26691 in k26688 in k26263 in k26260 in k26257 in k26254 in k26251 in k25668 in k25665 in k25142 in k25139 in k25136 in k25133 in k25130 in k25127 in k25124 in k25121 in k25118 in k25115 in k25112 in k25109 in k25106 in k25103 in k25100 in k25097 in k25094 in k25091 in k25088 in k25085 in k25082 in k24943 in k24940 in k24937 in k24934 in k24878 in k24875 in k24872 in k24869 in k24866 in k24863 in k24860 in k24857 in k23555 in k23486 in k23293 in k23290 in k23185 in k23134 in k11783 in k10718 in k10715 in k7274 in k7271 in k6978 in k6975 in k6971 in k6680 in k6677 in k6674 in k6671 */
static void C_ccall f_31855(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_31855,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_31859,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("error");
t4=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[21],((C_word*)t0)[2]);}
else{
t4=t2;
f_31859(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k31857 in k31853 in k31593 in k31590 in mm:make-touch in k30217 in k26697 in k26694 in k26691 in k26688 in k26263 in k26260 in k26257 in k26254 in k26251 in k25668 in k25665 in k25142 in k25139 in k25136 in k25133 in k25130 in k25127 in k25124 in k25121 in k25118 in k25115 in k25112 in k25109 in k25106 in k25103 in k25100 in k25097 in k25094 in k25091 in k25088 in k25085 in k25082 in k24943 in k24940 in k24937 in k24934 in k24878 in k24875 in k24872 in k24869 in k24866 in k24863 in k24860 in k24857 in k23555 in k23486 in k23293 in k23290 in k23185 in k23134 in k11783 in k10718 in k10715 in k7274 in k7271 in k6978 in k6975 in k6971 in k6680 in k6677 in k6674 in k6671 */
static void C_ccall f_31859(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_31598(t7,t6);}

/* k31818 in k31593 in k31590 in mm:make-touch in k30217 in k26697 in k26694 in k26691 in k26688 in k26263 in k26260 in k26257 in k26254 in k26251 in k25668 in k25665 in k25142 in k25139 in k25136 in k25133 in k25130 in k25127 in k25124 in k25121 in k25118 in k25115 in k25112 in k25109 in k25106 in k25103 in k25100 in k25097 in k25094 in k25091 in k25088 in k25085 in k25082 in k24943 in k24940 in k24937 in k24934 in k24878 in k24875 in k24872 in k24869 in k24866 in k24863 in k24860 in k24857 in k23555 in k23486 in k23293 in k23290 in k23185 in k23134 in k11783 in k10718 in k10715 in k7274 in k7271 in k6978 in k6975 in k6971 in k6680 in k6677 in k6674 in k6671 */
static void C_ccall f_31820(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_31820,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_31824,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("error");
t4=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[21],((C_word*)t0)[2]);}
else{
t4=t2;
f_31824(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k31822 in k31818 in k31593 in k31590 in mm:make-touch in k30217 in k26697 in k26694 in k26691 in k26688 in k26263 in k26260 in k26257 in k26254 in k26251 in k25668 in k25665 in k25142 in k25139 in k25136 in k25133 in k25130 in k25127 in k25124 in k25121 in k25118 in k25115 in k25112 in k25109 in k25106 in k25103 in k25100 in k25097 in k25094 in k25091 in k25088 in k25085 in k25082 in k24943 in k24940 in k24937 in k24934 in k24878 in k24875 in k24872 in k24869 in k24866 in k24863 in k24860 in k24857 in k23555 in k23486 in k23293 in k23290 in k23185 in k23134 in k11783 in k10718 in k10715 in k7274 in k7271 in k6978 in k6975 in k6971 in k6680 in k6677 in k6674 in k6671 */
static void C_ccall f_31824(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_31598(t7,t6);}

/* k31596 in k31593 in k31590 in mm:make-touch in k30217 in k26697 in k26694 in k26691 in k26688 in k26263 in k26260 in k26257 in k26254 in k26251 in k25668 in k25665 in k25142 in k25139 in k25136 in k25133 in k25130 in k25127 in k25124 in k25121 in k25118 in k25115 in k25112 in k25109 in k25106 in k25103 in k25100 in k25097 in k25094 in k25091 in k25088 in k25085 in k25082 in k24943 in k24940 in k24937 in k24934 in k24878 in k24875 in k24872 in k24869 in k24866 in k24863 in k24860 in k24857 in k23555 in k23486 in k23293 in k23290 in k23185 in k23134 in k11783 in k10718 in k10715 in k7274 in k7271 in k6978 in k6975 in k6971 in k6680 in k6677 in k6674 in k6671 */
static void C_fcall f_31598(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word ab[47],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_31598,NULL,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|8,a[1]=(C_word)f_31601,a[2]=((C_word*)t0)[7],a[3]=((C_word*)t0)[8],a[4]=((C_word*)t0)[9],a[5]=((C_word*)t0)[10],a[6]=((C_word*)t0)[11],a[7]=((C_word*)t0)[12],a[8]=((C_word*)t0)[13],tmp=(C_word)a,a+=9,tmp);
if(C_truep((C_word)C_i_nullp(((C_word*)((C_word*)t0)[8])[1]))){
t3=t2;
f_31601(t3,C_SCHEME_UNDEFINED);}
else{
t3=(C_word)C_i_car(((C_word*)((C_word*)t0)[8])[1]);
t4=(C_word)C_eqp(t3,lf[730]);
if(C_truep(t4)){
t5=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_31650,a[2]=((C_word*)t0)[7],a[3]=t2,a[4]=((C_word*)t0)[8],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],a[7]=((C_word*)t0)[12],tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)((C_word*)t0)[6])[1])){
C_trace("error");
t6=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t6))(4,t6,t5,lf[19],lf[730]);}
else{
t6=t5;
f_31650(2,t6,C_SCHEME_UNDEFINED);}}
else{
t5=(C_word)C_eqp(t3,lf[731]);
if(C_truep(t5)){
t6=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_31685,a[2]=((C_word*)t0)[7],a[3]=t2,a[4]=((C_word*)t0)[8],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[4],a[7]=((C_word*)t0)[10],tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)((C_word*)t0)[4])[1])){
C_trace("error");
t7=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t7))(4,t7,t6,lf[19],lf[731]);}
else{
t7=t6;
f_31685(2,t7,C_SCHEME_UNDEFINED);}}
else{
t6=(C_word)C_eqp(t3,lf[738]);
if(C_truep(t6)){
t7=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_31720,a[2]=((C_word*)t0)[7],a[3]=t2,a[4]=((C_word*)t0)[8],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[3],a[7]=((C_word*)t0)[9],tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)((C_word*)t0)[3])[1])){
C_trace("error");
t8=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t8))(4,t8,t7,lf[19],lf[738]);}
else{
t8=t7;
f_31720(2,t8,C_SCHEME_UNDEFINED);}}
else{
t7=(C_word)C_eqp(t3,lf[733]);
if(C_truep(t7)){
t8=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_31755,a[2]=((C_word*)t0)[7],a[3]=t2,a[4]=((C_word*)t0)[8],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[2],a[7]=((C_word*)t0)[11],tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)((C_word*)t0)[2])[1])){
C_trace("error");
t9=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t9))(4,t9,t8,lf[19],lf[733]);}
else{
t9=t8;
f_31755(2,t9,C_SCHEME_UNDEFINED);}}
else{
t8=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_31784,a[2]=t2,a[3]=((C_word*)t0)[2],a[4]=((C_word*)t0)[11],a[5]=((C_word*)t0)[8],tmp=(C_word)a,a+=6,tmp);
if(C_truep(((C_word*)((C_word*)t0)[5])[1])){
C_trace("error");
t9=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t9))(4,t9,t8,lf[10],((C_word*)t0)[7]);}
else{
t9=t8;
f_31784(2,t9,C_SCHEME_UNDEFINED);}}}}}}}

/* k31782 in k31596 in k31593 in k31590 in mm:make-touch in k30217 in k26697 in k26694 in k26691 in k26688 in k26263 in k26260 in k26257 in k26254 in k26251 in k25668 in k25665 in k25142 in k25139 in k25136 in k25133 in k25130 in k25127 in k25124 in k25121 in k25118 in k25115 in k25112 in k25109 in k25106 in k25103 in k25100 in k25097 in k25094 in k25091 in k25088 in k25085 in k25082 in k24943 in k24940 in k24937 in k24934 in k24878 in k24875 in k24872 in k24869 in k24866 in k24863 in k24860 in k24857 in k23555 in k23486 in k23293 in k23290 in k23185 in k23134 in k11783 in k10718 in k10715 in k7274 in k7271 in k6978 in k6975 in k6971 in k6680 in k6677 in k6674 in k6671 */
static void C_ccall f_31784(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_31784,2,t0,t1);}
t2=(C_word)C_i_car(((C_word*)((C_word*)t0)[5])[1]);
t3=C_mutate(((C_word *)((C_word*)t0)[4])+1,t2);
t4=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_31791,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[5],a[4]=((C_word*)t0)[3],tmp=(C_word)a,a+=5,tmp);
t5=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_31799,a[2]=((C_word*)t0)[4],a[3]=t4,tmp=(C_word)a,a+=4,tmp);
C_trace("keyword?");
t6=C_retrieve(lf[13]);
((C_proc3)C_retrieve_proc(t6))(3,t6,t5,((C_word*)((C_word*)t0)[4])[1]);}

/* k31797 in k31782 in k31596 in k31593 in k31590 in mm:make-touch in k30217 in k26697 in k26694 in k26691 in k26688 in k26263 in k26260 in k26257 in k26254 in k26251 in k25668 in k25665 in k25142 in k25139 in k25136 in k25133 in k25130 in k25127 in k25124 in k25121 in k25118 in k25115 in k25112 in k25109 in k25106 in k25103 in k25100 in k25097 in k25094 in k25091 in k25088 in k25085 in k25082 in k24943 in k24940 in k24937 in k24934 in k24878 in k24875 in k24872 in k24869 in k24866 in k24863 in k24860 in k24857 in k23555 in k23486 in k23293 in k23290 in k23185 in k23134 in k11783 in k10718 in k10715 in k7274 in k7271 in k6978 in k6975 in k6971 in k6680 in k6677 in k6674 in k6671 */
static void C_ccall f_31799(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
if(C_truep(t1)){
C_trace("error");
t2=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t2))(4,t2,((C_word*)t0)[3],lf[14],((C_word*)((C_word*)t0)[2])[1]);}
else{
t2=((C_word*)t0)[3];
f_31791(2,t2,C_SCHEME_UNDEFINED);}}

/* k31789 in k31782 in k31596 in k31593 in k31590 in mm:make-touch in k30217 in k26697 in k26694 in k26691 in k26688 in k26263 in k26260 in k26257 in k26254 in k26251 in k25668 in k25665 in k25142 in k25139 in k25136 in k25133 in k25130 in k25127 in k25124 in k25121 in k25118 in k25115 in k25112 in k25109 in k25106 in k25103 in k25100 in k25097 in k25094 in k25091 in k25088 in k25085 in k25082 in k24943 in k24940 in k24937 in k24934 in k24878 in k24875 in k24872 in k24869 in k24866 in k24863 in k24860 in k24857 in k23555 in k23486 in k23293 in k23290 in k23185 in k23134 in k11783 in k10718 in k10715 in k7274 in k7271 in k6978 in k6975 in k6971 in k6680 in k6677 in k6674 in k6671 */
static void C_ccall f_31791(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word *a;
t2=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[3])[1]);
t4=C_mutate(((C_word *)((C_word*)t0)[3])+1,t3);
t5=((C_word*)t0)[2];
f_31601(t5,t4);}

/* k31753 in k31596 in k31593 in k31590 in mm:make-touch in k30217 in k26697 in k26694 in k26691 in k26688 in k26263 in k26260 in k26257 in k26254 in k26251 in k25668 in k25665 in k25142 in k25139 in k25136 in k25133 in k25130 in k25127 in k25124 in k25121 in k25118 in k25115 in k25112 in k25109 in k25106 in k25103 in k25100 in k25097 in k25094 in k25091 in k25088 in k25085 in k25082 in k24943 in k24940 in k24937 in k24934 in k24878 in k24875 in k24872 in k24869 in k24866 in k24863 in k24860 in k24857 in k23555 in k23486 in k23293 in k23290 in k23185 in k23134 in k11783 in k10718 in k10715 in k7274 in k7271 in k6978 in k6975 in k6971 in k6680 in k6677 in k6674 in k6671 */
static void C_ccall f_31755(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_31755,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_31759,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("error");
t4=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[21],((C_word*)t0)[2]);}
else{
t4=t2;
f_31759(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k31757 in k31753 in k31596 in k31593 in k31590 in mm:make-touch in k30217 in k26697 in k26694 in k26691 in k26688 in k26263 in k26260 in k26257 in k26254 in k26251 in k25668 in k25665 in k25142 in k25139 in k25136 in k25133 in k25130 in k25127 in k25124 in k25121 in k25118 in k25115 in k25112 in k25109 in k25106 in k25103 in k25100 in k25097 in k25094 in k25091 in k25088 in k25085 in k25082 in k24943 in k24940 in k24937 in k24934 in k24878 in k24875 in k24872 in k24869 in k24866 in k24863 in k24860 in k24857 in k23555 in k23486 in k23293 in k23290 in k23185 in k23134 in k11783 in k10718 in k10715 in k7274 in k7271 in k6978 in k6975 in k6971 in k6680 in k6677 in k6674 in k6671 */
static void C_ccall f_31759(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_31601(t7,t6);}

/* k31718 in k31596 in k31593 in k31590 in mm:make-touch in k30217 in k26697 in k26694 in k26691 in k26688 in k26263 in k26260 in k26257 in k26254 in k26251 in k25668 in k25665 in k25142 in k25139 in k25136 in k25133 in k25130 in k25127 in k25124 in k25121 in k25118 in k25115 in k25112 in k25109 in k25106 in k25103 in k25100 in k25097 in k25094 in k25091 in k25088 in k25085 in k25082 in k24943 in k24940 in k24937 in k24934 in k24878 in k24875 in k24872 in k24869 in k24866 in k24863 in k24860 in k24857 in k23555 in k23486 in k23293 in k23290 in k23185 in k23134 in k11783 in k10718 in k10715 in k7274 in k7271 in k6978 in k6975 in k6971 in k6680 in k6677 in k6674 in k6671 */
static void C_ccall f_31720(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_31720,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_31724,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("error");
t4=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[21],((C_word*)t0)[2]);}
else{
t4=t2;
f_31724(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k31722 in k31718 in k31596 in k31593 in k31590 in mm:make-touch in k30217 in k26697 in k26694 in k26691 in k26688 in k26263 in k26260 in k26257 in k26254 in k26251 in k25668 in k25665 in k25142 in k25139 in k25136 in k25133 in k25130 in k25127 in k25124 in k25121 in k25118 in k25115 in k25112 in k25109 in k25106 in k25103 in k25100 in k25097 in k25094 in k25091 in k25088 in k25085 in k25082 in k24943 in k24940 in k24937 in k24934 in k24878 in k24875 in k24872 in k24869 in k24866 in k24863 in k24860 in k24857 in k23555 in k23486 in k23293 in k23290 in k23185 in k23134 in k11783 in k10718 in k10715 in k7274 in k7271 in k6978 in k6975 in k6971 in k6680 in k6677 in k6674 in k6671 */
static void C_ccall f_31724(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_31601(t7,t6);}

/* k31683 in k31596 in k31593 in k31590 in mm:make-touch in k30217 in k26697 in k26694 in k26691 in k26688 in k26263 in k26260 in k26257 in k26254 in k26251 in k25668 in k25665 in k25142 in k25139 in k25136 in k25133 in k25130 in k25127 in k25124 in k25121 in k25118 in k25115 in k25112 in k25109 in k25106 in k25103 in k25100 in k25097 in k25094 in k25091 in k25088 in k25085 in k25082 in k24943 in k24940 in k24937 in k24934 in k24878 in k24875 in k24872 in k24869 in k24866 in k24863 in k24860 in k24857 in k23555 in k23486 in k23293 in k23290 in k23185 in k23134 in k11783 in k10718 in k10715 in k7274 in k7271 in k6978 in k6975 in k6971 in k6680 in k6677 in k6674 in k6671 */
static void C_ccall f_31685(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_31685,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_31689,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("error");
t4=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[21],((C_word*)t0)[2]);}
else{
t4=t2;
f_31689(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k31687 in k31683 in k31596 in k31593 in k31590 in mm:make-touch in k30217 in k26697 in k26694 in k26691 in k26688 in k26263 in k26260 in k26257 in k26254 in k26251 in k25668 in k25665 in k25142 in k25139 in k25136 in k25133 in k25130 in k25127 in k25124 in k25121 in k25118 in k25115 in k25112 in k25109 in k25106 in k25103 in k25100 in k25097 in k25094 in k25091 in k25088 in k25085 in k25082 in k24943 in k24940 in k24937 in k24934 in k24878 in k24875 in k24872 in k24869 in k24866 in k24863 in k24860 in k24857 in k23555 in k23486 in k23293 in k23290 in k23185 in k23134 in k11783 in k10718 in k10715 in k7274 in k7271 in k6978 in k6975 in k6971 in k6680 in k6677 in k6674 in k6671 */
static void C_ccall f_31689(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_31601(t7,t6);}

/* k31648 in k31596 in k31593 in k31590 in mm:make-touch in k30217 in k26697 in k26694 in k26691 in k26688 in k26263 in k26260 in k26257 in k26254 in k26251 in k25668 in k25665 in k25142 in k25139 in k25136 in k25133 in k25130 in k25127 in k25124 in k25121 in k25118 in k25115 in k25112 in k25109 in k25106 in k25103 in k25100 in k25097 in k25094 in k25091 in k25088 in k25085 in k25082 in k24943 in k24940 in k24937 in k24934 in k24878 in k24875 in k24872 in k24869 in k24866 in k24863 in k24860 in k24857 in k23555 in k23486 in k23293 in k23290 in k23185 in k23134 in k11783 in k10718 in k10715 in k7274 in k7271 in k6978 in k6975 in k6971 in k6680 in k6677 in k6674 in k6671 */
static void C_ccall f_31650(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_31650,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_31654,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("error");
t4=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[21],((C_word*)t0)[2]);}
else{
t4=t2;
f_31654(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k31652 in k31648 in k31596 in k31593 in k31590 in mm:make-touch in k30217 in k26697 in k26694 in k26691 in k26688 in k26263 in k26260 in k26257 in k26254 in k26251 in k25668 in k25665 in k25142 in k25139 in k25136 in k25133 in k25130 in k25127 in k25124 in k25121 in k25118 in k25115 in k25112 in k25109 in k25106 in k25103 in k25100 in k25097 in k25094 in k25091 in k25088 in k25085 in k25082 in k24943 in k24940 in k24937 in k24934 in k24878 in k24875 in k24872 in k24869 in k24866 in k24863 in k24860 in k24857 in k23555 in k23486 in k23293 in k23290 in k23185 in k23134 in k11783 in k10718 in k10715 in k7274 in k7271 in k6978 in k6975 in k6971 in k6680 in k6677 in k6674 in k6671 */
static void C_ccall f_31654(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_31601(t7,t6);}

/* k31599 in k31596 in k31593 in k31590 in mm:make-touch in k30217 in k26697 in k26694 in k26691 in k26688 in k26263 in k26260 in k26257 in k26254 in k26251 in k25668 in k25665 in k25142 in k25139 in k25136 in k25133 in k25130 in k25127 in k25124 in k25121 in k25118 in k25115 in k25112 in k25109 in k25106 in k25103 in k25100 in k25097 in k25094 in k25091 in k25088 in k25085 in k25082 in k24943 in k24940 in k24937 in k24934 in k24878 in k24875 in k24872 in k24869 in k24866 in k24863 in k24860 in k24857 in k23555 in k23486 in k23293 in k23290 in k23185 in k23134 in k11783 in k10718 in k10715 in k7274 in k7271 in k6978 in k6975 in k6971 in k6680 in k6677 in k6674 in k6671 */
static void C_fcall f_31601(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_31601,NULL,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_31604,a[2]=((C_word*)t0)[4],a[3]=((C_word*)t0)[5],a[4]=((C_word*)t0)[6],a[5]=((C_word*)t0)[7],a[6]=((C_word*)t0)[8],tmp=(C_word)a,a+=7,tmp);
if(C_truep((C_word)C_i_nullp(((C_word*)((C_word*)t0)[3])[1]))){
t3=t2;
f_31604(2,t3,C_SCHEME_UNDEFINED);}
else{
C_trace("error");
t3=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t3))(4,t3,t2,lf[5],((C_word*)t0)[2]);}}

/* k31602 in k31599 in k31596 in k31593 in k31590 in mm:make-touch in k30217 in k26697 in k26694 in k26691 in k26688 in k26263 in k26260 in k26257 in k26254 in k26251 in k25668 in k25665 in k25142 in k25139 in k25136 in k25133 in k25130 in k25127 in k25124 in k25121 in k25118 in k25115 in k25112 in k25109 in k25106 in k25103 in k25100 in k25097 in k25094 in k25091 in k25088 in k25085 in k25082 in k24943 in k24940 in k24937 in k24934 in k24878 in k24875 in k24872 in k24869 in k24866 in k24863 in k24860 in k24857 in k23555 in k23486 in k23293 in k23290 in k23185 in k23134 in k11783 in k10718 in k10715 in k7274 in k7271 in k6978 in k6975 in k6971 in k6680 in k6677 in k6674 in k6671 */
static void C_ccall f_31604(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word ab[3],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_31604,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_31608,a[2]=((C_word)li482),tmp=(C_word)a,a+=3,tmp);
((C_proc7)(void*)(*((C_word*)t2+1)))(7,t2,((C_word*)t0)[6],C_retrieve(lf[724]),((C_word*)((C_word*)t0)[5])[1],((C_word*)((C_word*)t0)[4])[1],((C_word*)((C_word*)t0)[3])[1],((C_word*)((C_word*)t0)[2])[1]);}

/* f_31608 in k31602 in k31599 in k31596 in k31593 in k31590 in mm:make-touch in k30217 in k26697 in k26694 in k26691 in k26688 in k26263 in k26260 in k26257 in k26254 in k26251 in k25668 in k25665 in k25142 in k25139 in k25136 in k25133 in k25130 in k25127 in k25124 in k25121 in k25118 in k25115 in k25112 in k25109 in k25106 in k25103 in k25100 in k25097 in k25094 in k25091 in k25088 in k25085 in k25082 in k24943 in k24940 in k24937 in k24934 in k24878 in k24875 in k24872 in k24869 in k24866 in k24863 in k24860 in k24857 in k23555 in k23486 in k23293 in k23290 in k23185 in k23134 in k11783 in k10718 in k10715 in k7274 in k7271 in k6978 in k6975 in k6971 in k6680 in k6677 in k6674 in k6671 */
static void C_ccall f_31608(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4,C_word t5,C_word t6){
C_word tmp;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word ab[5],*a=ab;
if(c!=7) C_bad_argc_2(c,7,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr7,(void*)f_31608,7,t0,t1,t2,t3,t4,t5,t6);}
t7=(C_word)C_a_i_bytevector(&a,1,C_fix(3));
t8=(C_word)C_i_foreign_fixnum_argumentp(t2);
t9=(C_word)C_i_foreign_flonum_argumentp(t3);
t10=(C_word)C_i_foreign_fixnum_argumentp(t4);
t11=(C_word)C_i_foreign_fixnum_argumentp(t5);
t12=(C_word)C_i_foreign_fixnum_argumentp(t6);
t13=t1;
((C_proc2)(void*)(*((C_word*)t13+1)))(2,t13,(C_word)stub5365(t7,t8,t9,t10,t11,t12));}

/* mm:off? in k30217 in k26697 in k26694 in k26691 in k26688 in k26263 in k26260 in k26257 in k26254 in k26251 in k25668 in k25665 in k25142 in k25139 in k25136 in k25133 in k25130 in k25127 in k25124 in k25121 in k25118 in k25115 in k25112 in k25109 in k25106 in k25103 in k25100 in k25097 in k25094 in k25091 in k25088 in k25085 in k25082 in k24943 in k24940 in k24937 in k24934 in k24878 in k24875 in k24872 in k24869 in k24866 in k24863 in k24860 in k24857 in k23555 in k23486 in k23293 in k23290 in k23185 in k23134 in k11783 in k10718 in k10715 in k7274 in k7271 in k6978 in k6975 in k6971 in k6680 in k6677 in k6674 in k6671 */
static void C_ccall f_31569(C_word c,C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word ab[3],*a=ab;
if(c!=3) C_bad_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr3,(void*)f_31569,3,t0,t1,t2);}
t3=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_31574,a[2]=((C_word)li480),tmp=(C_word)a,a+=3,tmp);
((C_proc4)(void*)(*((C_word*)t3+1)))(4,t3,t1,t2,C_retrieve(lf[722]));}

/* f_31574 in mm:off? in k30217 in k26697 in k26694 in k26691 in k26688 in k26263 in k26260 in k26257 in k26254 in k26251 in k25668 in k25665 in k25142 in k25139 in k25136 in k25133 in k25130 in k25127 in k25124 in k25121 in k25118 in k25115 in k25112 in k25109 in k25106 in k25103 in k25100 in k25097 in k25094 in k25091 in k25088 in k25085 in k25082 in k24943 in k24940 in k24937 in k24934 in k24878 in k24875 in k24872 in k24869 in k24866 in k24863 in k24860 in k24857 in k23555 in k23486 in k23293 in k23290 in k23185 in k23134 in k11783 in k10718 in k10715 in k7274 in k7271 in k6978 in k6975 in k6971 in k6680 in k6677 in k6674 in k6671 */
static void C_ccall f_31574(C_word c,C_word t0,C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word t6;
C_word *a;
if(c!=4) C_bad_argc_2(c,4,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr4,(void*)f_31574,4,t0,t1,t2,t3);}
t4=(C_truep(t2)?(C_word)C_i_foreign_pointer_argumentp(t2):C_SCHEME_FALSE);
t5=(C_word)C_i_foreign_fixnum_argumentp(t3);
t6=t1;
((C_proc2)(void*)(*((C_word*)t6+1)))(2,t6,(C_word)stub5249(C_SCHEME_UNDEFINED,t4,t5));}

/* mm:make-off in k30217 in k26697 in k26694 in k26691 in k26688 in k26263 in k26260 in k26257 in k26254 in k26251 in k25668 in k25665 in k25142 in k25139 in k25136 in k25133 in k25130 in k25127 in k25124 in k25121 in k25118 in k25115 in k25112 in k25109 in k25106 in k25103 in k25100 in k25097 in k25094 in k25091 in k25088 in k25085 in k25082 in k24943 in k24940 in k24937 in k24934 in k24878 in k24875 in k24872 in k24869 in k24866 in k24863 in k24860 in k24857 in k23555 in k23486 in k23293 in k23290 in k23185 in k23134 in k11783 in k10718 in k10715 in k7274 in k7271 in k6978 in k6975 in k6971 in k6680 in k6677 in k6674 in k6671 */
static void C_ccall f_31118(C_word c,C_word t0,C_word t1,...){
C_word tmp;
C_word t2;
va_list v;
C_word *a,c2=c;
C_save_rest(t1,c2,2);
C_check_for_interrupt;
if(!C_demand(c*C_SIZEOF_PAIR+58)){
C_save_and_reclaim((void*)tr2r,(void*)f_31118r,2,t0,t1);}
else{
a=C_alloc((c-2)*3);
t2=C_restore_rest(a,C_rest_count(0));
f_31118r(t0,t1,t2);}}

static void C_ccall f_31118r(C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word t14;
C_word t15;
C_word t16;
C_word t17;
C_word t18;
C_word t19;
C_word t20;
C_word t21;
C_word t22;
C_word t23;
C_word t24;
C_word t25;
C_word t26;
C_word t27;
C_word t28;
C_word *a=C_alloc(58);
t3=C_fix(0);
t4=(*a=C_VECTOR_TYPE|1,a[1]=t3,tmp=(C_word)a,a+=2,tmp);
t5=C_fix(60);
t6=(*a=C_VECTOR_TYPE|1,a[1]=t5,tmp=(C_word)a,a+=2,tmp);
t7=C_fix(0);
t8=(*a=C_VECTOR_TYPE|1,a[1]=t7,tmp=(C_word)a,a+=2,tmp);
t9=C_SCHEME_FALSE;
t10=(*a=C_VECTOR_TYPE|1,a[1]=t9,tmp=(C_word)a,a+=2,tmp);
t11=C_SCHEME_FALSE;
t12=(*a=C_VECTOR_TYPE|1,a[1]=t11,tmp=(C_word)a,a+=2,tmp);
t13=C_SCHEME_FALSE;
t14=(*a=C_VECTOR_TYPE|1,a[1]=t13,tmp=(C_word)a,a+=2,tmp);
t15=t2;
t16=(*a=C_VECTOR_TYPE|1,a[1]=t15,tmp=(C_word)a,a+=2,tmp);
t17=C_SCHEME_FALSE;
t18=(*a=C_VECTOR_TYPE|1,a[1]=t17,tmp=(C_word)a,a+=2,tmp);
t19=(*a=C_CLOSURE_TYPE|11,a[1]=(C_word)f_31122,a[2]=t14,a[3]=t12,a[4]=t18,a[5]=t10,a[6]=t2,a[7]=t16,a[8]=t6,a[9]=t8,a[10]=t4,a[11]=t1,tmp=(C_word)a,a+=12,tmp);
if(C_truep((C_word)C_i_nullp(((C_word*)t16)[1]))){
t20=t19;
f_31122(t20,C_SCHEME_UNDEFINED);}
else{
t20=(C_word)C_i_car(((C_word*)t16)[1]);
t21=(C_word)C_eqp(t20,lf[730]);
if(C_truep(t21)){
t22=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_31447,a[2]=t2,a[3]=t19,a[4]=t16,a[5]=t18,a[6]=t10,a[7]=t4,tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)t10)[1])){
C_trace("error");
t23=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t23))(4,t23,t22,lf[19],lf[730]);}
else{
t23=t22;
f_31447(2,t23,C_SCHEME_UNDEFINED);}}
else{
t22=(C_word)C_eqp(t20,lf[731]);
if(C_truep(t22)){
t23=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_31482,a[2]=t2,a[3]=t19,a[4]=t16,a[5]=t18,a[6]=t12,a[7]=t6,tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)t12)[1])){
C_trace("error");
t24=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t24))(4,t24,t23,lf[19],lf[731]);}
else{
t24=t23;
f_31482(2,t24,C_SCHEME_UNDEFINED);}}
else{
t23=(C_word)C_eqp(t20,lf[733]);
if(C_truep(t23)){
t24=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_31517,a[2]=t2,a[3]=t19,a[4]=t16,a[5]=t18,a[6]=t14,a[7]=t8,tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)t14)[1])){
C_trace("error");
t25=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t25))(4,t25,t24,lf[19],lf[733]);}
else{
t25=t24;
f_31517(2,t25,C_SCHEME_UNDEFINED);}}
else{
t24=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_31546,a[2]=t19,a[3]=t10,a[4]=t4,a[5]=t16,tmp=(C_word)a,a+=6,tmp);
if(C_truep(((C_word*)t18)[1])){
C_trace("error");
t25=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t25))(4,t25,t24,lf[10],t2);}
else{
t25=t24;
f_31546(2,t25,C_SCHEME_UNDEFINED);}}}}}}

/* k31544 in mm:make-off in k30217 in k26697 in k26694 in k26691 in k26688 in k26263 in k26260 in k26257 in k26254 in k26251 in k25668 in k25665 in k25142 in k25139 in k25136 in k25133 in k25130 in k25127 in k25124 in k25121 in k25118 in k25115 in k25112 in k25109 in k25106 in k25103 in k25100 in k25097 in k25094 in k25091 in k25088 in k25085 in k25082 in k24943 in k24940 in k24937 in k24934 in k24878 in k24875 in k24872 in k24869 in k24866 in k24863 in k24860 in k24857 in k23555 in k23486 in k23293 in k23290 in k23185 in k23134 in k11783 in k10718 in k10715 in k7274 in k7271 in k6978 in k6975 in k6971 in k6680 in k6677 in k6674 in k6671 */
static void C_ccall f_31546(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_31546,2,t0,t1);}
t2=(C_word)C_i_car(((C_word*)((C_word*)t0)[5])[1]);
t3=C_mutate(((C_word *)((C_word*)t0)[4])+1,t2);
t4=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_31553,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[5],a[4]=((C_word*)t0)[3],tmp=(C_word)a,a+=5,tmp);
t5=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_31561,a[2]=((C_word*)t0)[4],a[3]=t4,tmp=(C_word)a,a+=4,tmp);
C_trace("keyword?");
t6=C_retrieve(lf[13]);
((C_proc3)C_retrieve_proc(t6))(3,t6,t5,((C_word*)((C_word*)t0)[4])[1]);}

/* k31559 in k31544 in mm:make-off in k30217 in k26697 in k26694 in k26691 in k26688 in k26263 in k26260 in k26257 in k26254 in k26251 in k25668 in k25665 in k25142 in k25139 in k25136 in k25133 in k25130 in k25127 in k25124 in k25121 in k25118 in k25115 in k25112 in k25109 in k25106 in k25103 in k25100 in k25097 in k25094 in k25091 in k25088 in k25085 in k25082 in k24943 in k24940 in k24937 in k24934 in k24878 in k24875 in k24872 in k24869 in k24866 in k24863 in k24860 in k24857 in k23555 in k23486 in k23293 in k23290 in k23185 in k23134 in k11783 in k10718 in k10715 in k7274 in k7271 in k6978 in k6975 in k6971 in k6680 in k6677 in k6674 in k6671 */
static void C_ccall f_31561(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
if(C_truep(t1)){
C_trace("error");
t2=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t2))(4,t2,((C_word*)t0)[3],lf[14],((C_word*)((C_word*)t0)[2])[1]);}
else{
t2=((C_word*)t0)[3];
f_31553(2,t2,C_SCHEME_UNDEFINED);}}

/* k31551 in k31544 in mm:make-off in k30217 in k26697 in k26694 in k26691 in k26688 in k26263 in k26260 in k26257 in k26254 in k26251 in k25668 in k25665 in k25142 in k25139 in k25136 in k25133 in k25130 in k25127 in k25124 in k25121 in k25118 in k25115 in k25112 in k25109 in k25106 in k25103 in k25100 in k25097 in k25094 in k25091 in k25088 in k25085 in k25082 in k24943 in k24940 in k24937 in k24934 in k24878 in k24875 in k24872 in k24869 in k24866 in k24863 in k24860 in k24857 in k23555 in k23486 in k23293 in k23290 in k23185 in k23134 in k11783 in k10718 in k10715 in k7274 in k7271 in k6978 in k6975 in k6971 in k6680 in k6677 in k6674 in k6671 */
static void C_ccall f_31553(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word *a;
t2=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[3])[1]);
t4=C_mutate(((C_word *)((C_word*)t0)[3])+1,t3);
t5=((C_word*)t0)[2];
f_31122(t5,t4);}

/* k31515 in mm:make-off in k30217 in k26697 in k26694 in k26691 in k26688 in k26263 in k26260 in k26257 in k26254 in k26251 in k25668 in k25665 in k25142 in k25139 in k25136 in k25133 in k25130 in k25127 in k25124 in k25121 in k25118 in k25115 in k25112 in k25109 in k25106 in k25103 in k25100 in k25097 in k25094 in k25091 in k25088 in k25085 in k25082 in k24943 in k24940 in k24937 in k24934 in k24878 in k24875 in k24872 in k24869 in k24866 in k24863 in k24860 in k24857 in k23555 in k23486 in k23293 in k23290 in k23185 in k23134 in k11783 in k10718 in k10715 in k7274 in k7271 in k6978 in k6975 in k6971 in k6680 in k6677 in k6674 in k6671 */
static void C_ccall f_31517(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_31517,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_31521,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("error");
t4=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[21],((C_word*)t0)[2]);}
else{
t4=t2;
f_31521(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k31519 in k31515 in mm:make-off in k30217 in k26697 in k26694 in k26691 in k26688 in k26263 in k26260 in k26257 in k26254 in k26251 in k25668 in k25665 in k25142 in k25139 in k25136 in k25133 in k25130 in k25127 in k25124 in k25121 in k25118 in k25115 in k25112 in k25109 in k25106 in k25103 in k25100 in k25097 in k25094 in k25091 in k25088 in k25085 in k25082 in k24943 in k24940 in k24937 in k24934 in k24878 in k24875 in k24872 in k24869 in k24866 in k24863 in k24860 in k24857 in k23555 in k23486 in k23293 in k23290 in k23185 in k23134 in k11783 in k10718 in k10715 in k7274 in k7271 in k6978 in k6975 in k6971 in k6680 in k6677 in k6674 in k6671 */
static void C_ccall f_31521(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_31122(t7,t6);}

/* k31480 in mm:make-off in k30217 in k26697 in k26694 in k26691 in k26688 in k26263 in k26260 in k26257 in k26254 in k26251 in k25668 in k25665 in k25142 in k25139 in k25136 in k25133 in k25130 in k25127 in k25124 in k25121 in k25118 in k25115 in k25112 in k25109 in k25106 in k25103 in k25100 in k25097 in k25094 in k25091 in k25088 in k25085 in k25082 in k24943 in k24940 in k24937 in k24934 in k24878 in k24875 in k24872 in k24869 in k24866 in k24863 in k24860 in k24857 in k23555 in k23486 in k23293 in k23290 in k23185 in k23134 in k11783 in k10718 in k10715 in k7274 in k7271 in k6978 in k6975 in k6971 in k6680 in k6677 in k6674 in k6671 */
static void C_ccall f_31482(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_31482,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_31486,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("error");
t4=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[21],((C_word*)t0)[2]);}
else{
t4=t2;
f_31486(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k31484 in k31480 in mm:make-off in k30217 in k26697 in k26694 in k26691 in k26688 in k26263 in k26260 in k26257 in k26254 in k26251 in k25668 in k25665 in k25142 in k25139 in k25136 in k25133 in k25130 in k25127 in k25124 in k25121 in k25118 in k25115 in k25112 in k25109 in k25106 in k25103 in k25100 in k25097 in k25094 in k25091 in k25088 in k25085 in k25082 in k24943 in k24940 in k24937 in k24934 in k24878 in k24875 in k24872 in k24869 in k24866 in k24863 in k24860 in k24857 in k23555 in k23486 in k23293 in k23290 in k23185 in k23134 in k11783 in k10718 in k10715 in k7274 in k7271 in k6978 in k6975 in k6971 in k6680 in k6677 in k6674 in k6671 */
static void C_ccall f_31486(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_31122(t7,t6);}

/* k31445 in mm:make-off in k30217 in k26697 in k26694 in k26691 in k26688 in k26263 in k26260 in k26257 in k26254 in k26251 in k25668 in k25665 in k25142 in k25139 in k25136 in k25133 in k25130 in k25127 in k25124 in k25121 in k25118 in k25115 in k25112 in k25109 in k25106 in k25103 in k25100 in k25097 in k25094 in k25091 in k25088 in k25085 in k25082 in k24943 in k24940 in k24937 in k24934 in k24878 in k24875 in k24872 in k24869 in k24866 in k24863 in k24860 in k24857 in k23555 in k23486 in k23293 in k23290 in k23185 in k23134 in k11783 in k10718 in k10715 in k7274 in k7271 in k6978 in k6975 in k6971 in k6680 in k6677 in k6674 in k6671 */
static void C_ccall f_31447(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_31447,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_31451,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("error");
t4=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[21],((C_word*)t0)[2]);}
else{
t4=t2;
f_31451(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k31449 in k31445 in mm:make-off in k30217 in k26697 in k26694 in k26691 in k26688 in k26263 in k26260 in k26257 in k26254 in k26251 in k25668 in k25665 in k25142 in k25139 in k25136 in k25133 in k25130 in k25127 in k25124 in k25121 in k25118 in k25115 in k25112 in k25109 in k25106 in k25103 in k25100 in k25097 in k25094 in k25091 in k25088 in k25085 in k25082 in k24943 in k24940 in k24937 in k24934 in k24878 in k24875 in k24872 in k24869 in k24866 in k24863 in k24860 in k24857 in k23555 in k23486 in k23293 in k23290 in k23185 in k23134 in k11783 in k10718 in k10715 in k7274 in k7271 in k6978 in k6975 in k6971 in k6680 in k6677 in k6674 in k6671 */
static void C_ccall f_31451(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_31122(t7,t6);}

/* k31120 in mm:make-off in k30217 in k26697 in k26694 in k26691 in k26688 in k26263 in k26260 in k26257 in k26254 in k26251 in k25668 in k25665 in k25142 in k25139 in k25136 in k25133 in k25130 in k25127 in k25124 in k25121 in k25118 in k25115 in k25112 in k25109 in k25106 in k25103 in k25100 in k25097 in k25094 in k25091 in k25088 in k25085 in k25082 in k24943 in k24940 in k24937 in k24934 in k24878 in k24875 in k24872 in k24869 in k24866 in k24863 in k24860 in k24857 in k23555 in k23486 in k23293 in k23290 in k23185 in k23134 in k11783 in k10718 in k10715 in k7274 in k7271 in k6978 in k6975 in k6971 in k6680 in k6677 in k6674 in k6671 */
static void C_fcall f_31122(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word ab[42],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_31122,NULL,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|11,a[1]=(C_word)f_31125,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],a[7]=((C_word*)t0)[7],a[8]=((C_word*)t0)[8],a[9]=((C_word*)t0)[9],a[10]=((C_word*)t0)[10],a[11]=((C_word*)t0)[11],tmp=(C_word)a,a+=12,tmp);
if(C_truep((C_word)C_i_nullp(((C_word*)((C_word*)t0)[7])[1]))){
t3=t2;
f_31125(t3,C_SCHEME_UNDEFINED);}
else{
t3=(C_word)C_i_car(((C_word*)((C_word*)t0)[7])[1]);
t4=(C_word)C_eqp(t3,lf[730]);
if(C_truep(t4)){
t5=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_31312,a[2]=((C_word*)t0)[6],a[3]=t2,a[4]=((C_word*)t0)[7],a[5]=((C_word*)t0)[4],a[6]=((C_word*)t0)[5],a[7]=((C_word*)t0)[10],tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)((C_word*)t0)[5])[1])){
C_trace("error");
t6=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t6))(4,t6,t5,lf[19],lf[730]);}
else{
t6=t5;
f_31312(2,t6,C_SCHEME_UNDEFINED);}}
else{
t5=(C_word)C_eqp(t3,lf[731]);
if(C_truep(t5)){
t6=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_31347,a[2]=((C_word*)t0)[6],a[3]=t2,a[4]=((C_word*)t0)[7],a[5]=((C_word*)t0)[4],a[6]=((C_word*)t0)[3],a[7]=((C_word*)t0)[8],tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)((C_word*)t0)[3])[1])){
C_trace("error");
t7=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t7))(4,t7,t6,lf[19],lf[731]);}
else{
t7=t6;
f_31347(2,t7,C_SCHEME_UNDEFINED);}}
else{
t6=(C_word)C_eqp(t3,lf[733]);
if(C_truep(t6)){
t7=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_31382,a[2]=((C_word*)t0)[6],a[3]=t2,a[4]=((C_word*)t0)[7],a[5]=((C_word*)t0)[4],a[6]=((C_word*)t0)[2],a[7]=((C_word*)t0)[9],tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)((C_word*)t0)[2])[1])){
C_trace("error");
t8=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t8))(4,t8,t7,lf[19],lf[733]);}
else{
t8=t7;
f_31382(2,t8,C_SCHEME_UNDEFINED);}}
else{
t7=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_31411,a[2]=t2,a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[8],a[5]=((C_word*)t0)[7],tmp=(C_word)a,a+=6,tmp);
if(C_truep(((C_word*)((C_word*)t0)[4])[1])){
C_trace("error");
t8=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t8))(4,t8,t7,lf[10],((C_word*)t0)[6]);}
else{
t8=t7;
f_31411(2,t8,C_SCHEME_UNDEFINED);}}}}}}

/* k31409 in k31120 in mm:make-off in k30217 in k26697 in k26694 in k26691 in k26688 in k26263 in k26260 in k26257 in k26254 in k26251 in k25668 in k25665 in k25142 in k25139 in k25136 in k25133 in k25130 in k25127 in k25124 in k25121 in k25118 in k25115 in k25112 in k25109 in k25106 in k25103 in k25100 in k25097 in k25094 in k25091 in k25088 in k25085 in k25082 in k24943 in k24940 in k24937 in k24934 in k24878 in k24875 in k24872 in k24869 in k24866 in k24863 in k24860 in k24857 in k23555 in k23486 in k23293 in k23290 in k23185 in k23134 in k11783 in k10718 in k10715 in k7274 in k7271 in k6978 in k6975 in k6971 in k6680 in k6677 in k6674 in k6671 */
static void C_ccall f_31411(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_31411,2,t0,t1);}
t2=(C_word)C_i_car(((C_word*)((C_word*)t0)[5])[1]);
t3=C_mutate(((C_word *)((C_word*)t0)[4])+1,t2);
t4=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_31418,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[5],a[4]=((C_word*)t0)[3],tmp=(C_word)a,a+=5,tmp);
t5=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_31426,a[2]=((C_word*)t0)[4],a[3]=t4,tmp=(C_word)a,a+=4,tmp);
C_trace("keyword?");
t6=C_retrieve(lf[13]);
((C_proc3)C_retrieve_proc(t6))(3,t6,t5,((C_word*)((C_word*)t0)[4])[1]);}

/* k31424 in k31409 in k31120 in mm:make-off in k30217 in k26697 in k26694 in k26691 in k26688 in k26263 in k26260 in k26257 in k26254 in k26251 in k25668 in k25665 in k25142 in k25139 in k25136 in k25133 in k25130 in k25127 in k25124 in k25121 in k25118 in k25115 in k25112 in k25109 in k25106 in k25103 in k25100 in k25097 in k25094 in k25091 in k25088 in k25085 in k25082 in k24943 in k24940 in k24937 in k24934 in k24878 in k24875 in k24872 in k24869 in k24866 in k24863 in k24860 in k24857 in k23555 in k23486 in k23293 in k23290 in k23185 in k23134 in k11783 in k10718 in k10715 in k7274 in k7271 in k6978 in k6975 in k6971 in k6680 in k6677 in k6674 in k6671 */
static void C_ccall f_31426(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
if(C_truep(t1)){
C_trace("error");
t2=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t2))(4,t2,((C_word*)t0)[3],lf[14],((C_word*)((C_word*)t0)[2])[1]);}
else{
t2=((C_word*)t0)[3];
f_31418(2,t2,C_SCHEME_UNDEFINED);}}

/* k31416 in k31409 in k31120 in mm:make-off in k30217 in k26697 in k26694 in k26691 in k26688 in k26263 in k26260 in k26257 in k26254 in k26251 in k25668 in k25665 in k25142 in k25139 in k25136 in k25133 in k25130 in k25127 in k25124 in k25121 in k25118 in k25115 in k25112 in k25109 in k25106 in k25103 in k25100 in k25097 in k25094 in k25091 in k25088 in k25085 in k25082 in k24943 in k24940 in k24937 in k24934 in k24878 in k24875 in k24872 in k24869 in k24866 in k24863 in k24860 in k24857 in k23555 in k23486 in k23293 in k23290 in k23185 in k23134 in k11783 in k10718 in k10715 in k7274 in k7271 in k6978 in k6975 in k6971 in k6680 in k6677 in k6674 in k6671 */
static void C_ccall f_31418(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word *a;
t2=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[3])[1]);
t4=C_mutate(((C_word *)((C_word*)t0)[3])+1,t3);
t5=((C_word*)t0)[2];
f_31125(t5,t4);}

/* k31380 in k31120 in mm:make-off in k30217 in k26697 in k26694 in k26691 in k26688 in k26263 in k26260 in k26257 in k26254 in k26251 in k25668 in k25665 in k25142 in k25139 in k25136 in k25133 in k25130 in k25127 in k25124 in k25121 in k25118 in k25115 in k25112 in k25109 in k25106 in k25103 in k25100 in k25097 in k25094 in k25091 in k25088 in k25085 in k25082 in k24943 in k24940 in k24937 in k24934 in k24878 in k24875 in k24872 in k24869 in k24866 in k24863 in k24860 in k24857 in k23555 in k23486 in k23293 in k23290 in k23185 in k23134 in k11783 in k10718 in k10715 in k7274 in k7271 in k6978 in k6975 in k6971 in k6680 in k6677 in k6674 in k6671 */
static void C_ccall f_31382(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_31382,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_31386,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("error");
t4=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[21],((C_word*)t0)[2]);}
else{
t4=t2;
f_31386(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k31384 in k31380 in k31120 in mm:make-off in k30217 in k26697 in k26694 in k26691 in k26688 in k26263 in k26260 in k26257 in k26254 in k26251 in k25668 in k25665 in k25142 in k25139 in k25136 in k25133 in k25130 in k25127 in k25124 in k25121 in k25118 in k25115 in k25112 in k25109 in k25106 in k25103 in k25100 in k25097 in k25094 in k25091 in k25088 in k25085 in k25082 in k24943 in k24940 in k24937 in k24934 in k24878 in k24875 in k24872 in k24869 in k24866 in k24863 in k24860 in k24857 in k23555 in k23486 in k23293 in k23290 in k23185 in k23134 in k11783 in k10718 in k10715 in k7274 in k7271 in k6978 in k6975 in k6971 in k6680 in k6677 in k6674 in k6671 */
static void C_ccall f_31386(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_31125(t7,t6);}

/* k31345 in k31120 in mm:make-off in k30217 in k26697 in k26694 in k26691 in k26688 in k26263 in k26260 in k26257 in k26254 in k26251 in k25668 in k25665 in k25142 in k25139 in k25136 in k25133 in k25130 in k25127 in k25124 in k25121 in k25118 in k25115 in k25112 in k25109 in k25106 in k25103 in k25100 in k25097 in k25094 in k25091 in k25088 in k25085 in k25082 in k24943 in k24940 in k24937 in k24934 in k24878 in k24875 in k24872 in k24869 in k24866 in k24863 in k24860 in k24857 in k23555 in k23486 in k23293 in k23290 in k23185 in k23134 in k11783 in k10718 in k10715 in k7274 in k7271 in k6978 in k6975 in k6971 in k6680 in k6677 in k6674 in k6671 */
static void C_ccall f_31347(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_31347,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_31351,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("error");
t4=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[21],((C_word*)t0)[2]);}
else{
t4=t2;
f_31351(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k31349 in k31345 in k31120 in mm:make-off in k30217 in k26697 in k26694 in k26691 in k26688 in k26263 in k26260 in k26257 in k26254 in k26251 in k25668 in k25665 in k25142 in k25139 in k25136 in k25133 in k25130 in k25127 in k25124 in k25121 in k25118 in k25115 in k25112 in k25109 in k25106 in k25103 in k25100 in k25097 in k25094 in k25091 in k25088 in k25085 in k25082 in k24943 in k24940 in k24937 in k24934 in k24878 in k24875 in k24872 in k24869 in k24866 in k24863 in k24860 in k24857 in k23555 in k23486 in k23293 in k23290 in k23185 in k23134 in k11783 in k10718 in k10715 in k7274 in k7271 in k6978 in k6975 in k6971 in k6680 in k6677 in k6674 in k6671 */
static void C_ccall f_31351(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_31125(t7,t6);}

/* k31310 in k31120 in mm:make-off in k30217 in k26697 in k26694 in k26691 in k26688 in k26263 in k26260 in k26257 in k26254 in k26251 in k25668 in k25665 in k25142 in k25139 in k25136 in k25133 in k25130 in k25127 in k25124 in k25121 in k25118 in k25115 in k25112 in k25109 in k25106 in k25103 in k25100 in k25097 in k25094 in k25091 in k25088 in k25085 in k25082 in k24943 in k24940 in k24937 in k24934 in k24878 in k24875 in k24872 in k24869 in k24866 in k24863 in k24860 in k24857 in k23555 in k23486 in k23293 in k23290 in k23185 in k23134 in k11783 in k10718 in k10715 in k7274 in k7271 in k6978 in k6975 in k6971 in k6680 in k6677 in k6674 in k6671 */
static void C_ccall f_31312(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_31312,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_31316,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("error");
t4=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[21],((C_word*)t0)[2]);}
else{
t4=t2;
f_31316(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k31314 in k31310 in k31120 in mm:make-off in k30217 in k26697 in k26694 in k26691 in k26688 in k26263 in k26260 in k26257 in k26254 in k26251 in k25668 in k25665 in k25142 in k25139 in k25136 in k25133 in k25130 in k25127 in k25124 in k25121 in k25118 in k25115 in k25112 in k25109 in k25106 in k25103 in k25100 in k25097 in k25094 in k25091 in k25088 in k25085 in k25082 in k24943 in k24940 in k24937 in k24934 in k24878 in k24875 in k24872 in k24869 in k24866 in k24863 in k24860 in k24857 in k23555 in k23486 in k23293 in k23290 in k23185 in k23134 in k11783 in k10718 in k10715 in k7274 in k7271 in k6978 in k6975 in k6971 in k6680 in k6677 in k6674 in k6671 */
static void C_ccall f_31316(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_31125(t7,t6);}

/* k31123 in k31120 in mm:make-off in k30217 in k26697 in k26694 in k26691 in k26688 in k26263 in k26260 in k26257 in k26254 in k26251 in k25668 in k25665 in k25142 in k25139 in k25136 in k25133 in k25130 in k25127 in k25124 in k25121 in k25118 in k25115 in k25112 in k25109 in k25106 in k25103 in k25100 in k25097 in k25094 in k25091 in k25088 in k25085 in k25082 in k24943 in k24940 in k24937 in k24934 in k24878 in k24875 in k24872 in k24869 in k24866 in k24863 in k24860 in k24857 in k23555 in k23486 in k23293 in k23290 in k23185 in k23134 in k11783 in k10718 in k10715 in k7274 in k7271 in k6978 in k6975 in k6971 in k6680 in k6677 in k6674 in k6671 */
static void C_fcall f_31125(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word ab[38],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_31125,NULL,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_31128,a[2]=((C_word*)t0)[6],a[3]=((C_word*)t0)[7],a[4]=((C_word*)t0)[8],a[5]=((C_word*)t0)[9],a[6]=((C_word*)t0)[10],a[7]=((C_word*)t0)[11],tmp=(C_word)a,a+=8,tmp);
if(C_truep((C_word)C_i_nullp(((C_word*)((C_word*)t0)[7])[1]))){
t3=t2;
f_31128(t3,C_SCHEME_UNDEFINED);}
else{
t3=(C_word)C_i_car(((C_word*)((C_word*)t0)[7])[1]);
t4=(C_word)C_eqp(t3,lf[730]);
if(C_truep(t4)){
t5=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_31177,a[2]=((C_word*)t0)[6],a[3]=t2,a[4]=((C_word*)t0)[7],a[5]=((C_word*)t0)[4],a[6]=((C_word*)t0)[5],a[7]=((C_word*)t0)[10],tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)((C_word*)t0)[5])[1])){
C_trace("error");
t6=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t6))(4,t6,t5,lf[19],lf[730]);}
else{
t6=t5;
f_31177(2,t6,C_SCHEME_UNDEFINED);}}
else{
t5=(C_word)C_eqp(t3,lf[731]);
if(C_truep(t5)){
t6=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_31212,a[2]=((C_word*)t0)[6],a[3]=t2,a[4]=((C_word*)t0)[7],a[5]=((C_word*)t0)[4],a[6]=((C_word*)t0)[3],a[7]=((C_word*)t0)[8],tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)((C_word*)t0)[3])[1])){
C_trace("error");
t7=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t7))(4,t7,t6,lf[19],lf[731]);}
else{
t7=t6;
f_31212(2,t7,C_SCHEME_UNDEFINED);}}
else{
t6=(C_word)C_eqp(t3,lf[733]);
if(C_truep(t6)){
t7=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_31247,a[2]=((C_word*)t0)[6],a[3]=t2,a[4]=((C_word*)t0)[7],a[5]=((C_word*)t0)[4],a[6]=((C_word*)t0)[2],a[7]=((C_word*)t0)[9],tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)((C_word*)t0)[2])[1])){
C_trace("error");
t8=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t8))(4,t8,t7,lf[19],lf[733]);}
else{
t8=t7;
f_31247(2,t8,C_SCHEME_UNDEFINED);}}
else{
t7=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_31276,a[2]=t2,a[3]=((C_word*)t0)[2],a[4]=((C_word*)t0)[9],a[5]=((C_word*)t0)[7],tmp=(C_word)a,a+=6,tmp);
if(C_truep(((C_word*)((C_word*)t0)[4])[1])){
C_trace("error");
t8=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t8))(4,t8,t7,lf[10],((C_word*)t0)[6]);}
else{
t8=t7;
f_31276(2,t8,C_SCHEME_UNDEFINED);}}}}}}

/* k31274 in k31123 in k31120 in mm:make-off in k30217 in k26697 in k26694 in k26691 in k26688 in k26263 in k26260 in k26257 in k26254 in k26251 in k25668 in k25665 in k25142 in k25139 in k25136 in k25133 in k25130 in k25127 in k25124 in k25121 in k25118 in k25115 in k25112 in k25109 in k25106 in k25103 in k25100 in k25097 in k25094 in k25091 in k25088 in k25085 in k25082 in k24943 in k24940 in k24937 in k24934 in k24878 in k24875 in k24872 in k24869 in k24866 in k24863 in k24860 in k24857 in k23555 in k23486 in k23293 in k23290 in k23185 in k23134 in k11783 in k10718 in k10715 in k7274 in k7271 in k6978 in k6975 in k6971 in k6680 in k6677 in k6674 in k6671 */
static void C_ccall f_31276(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_31276,2,t0,t1);}
t2=(C_word)C_i_car(((C_word*)((C_word*)t0)[5])[1]);
t3=C_mutate(((C_word *)((C_word*)t0)[4])+1,t2);
t4=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_31283,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[5],a[4]=((C_word*)t0)[3],tmp=(C_word)a,a+=5,tmp);
t5=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_31291,a[2]=((C_word*)t0)[4],a[3]=t4,tmp=(C_word)a,a+=4,tmp);
C_trace("keyword?");
t6=C_retrieve(lf[13]);
((C_proc3)C_retrieve_proc(t6))(3,t6,t5,((C_word*)((C_word*)t0)[4])[1]);}

/* k31289 in k31274 in k31123 in k31120 in mm:make-off in k30217 in k26697 in k26694 in k26691 in k26688 in k26263 in k26260 in k26257 in k26254 in k26251 in k25668 in k25665 in k25142 in k25139 in k25136 in k25133 in k25130 in k25127 in k25124 in k25121 in k25118 in k25115 in k25112 in k25109 in k25106 in k25103 in k25100 in k25097 in k25094 in k25091 in k25088 in k25085 in k25082 in k24943 in k24940 in k24937 in k24934 in k24878 in k24875 in k24872 in k24869 in k24866 in k24863 in k24860 in k24857 in k23555 in k23486 in k23293 in k23290 in k23185 in k23134 in k11783 in k10718 in k10715 in k7274 in k7271 in k6978 in k6975 in k6971 in k6680 in k6677 in k6674 in k6671 */
static void C_ccall f_31291(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
if(C_truep(t1)){
C_trace("error");
t2=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t2))(4,t2,((C_word*)t0)[3],lf[14],((C_word*)((C_word*)t0)[2])[1]);}
else{
t2=((C_word*)t0)[3];
f_31283(2,t2,C_SCHEME_UNDEFINED);}}

/* k31281 in k31274 in k31123 in k31120 in mm:make-off in k30217 in k26697 in k26694 in k26691 in k26688 in k26263 in k26260 in k26257 in k26254 in k26251 in k25668 in k25665 in k25142 in k25139 in k25136 in k25133 in k25130 in k25127 in k25124 in k25121 in k25118 in k25115 in k25112 in k25109 in k25106 in k25103 in k25100 in k25097 in k25094 in k25091 in k25088 in k25085 in k25082 in k24943 in k24940 in k24937 in k24934 in k24878 in k24875 in k24872 in k24869 in k24866 in k24863 in k24860 in k24857 in k23555 in k23486 in k23293 in k23290 in k23185 in k23134 in k11783 in k10718 in k10715 in k7274 in k7271 in k6978 in k6975 in k6971 in k6680 in k6677 in k6674 in k6671 */
static void C_ccall f_31283(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word *a;
t2=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[3])[1]);
t4=C_mutate(((C_word *)((C_word*)t0)[3])+1,t3);
t5=((C_word*)t0)[2];
f_31128(t5,t4);}

/* k31245 in k31123 in k31120 in mm:make-off in k30217 in k26697 in k26694 in k26691 in k26688 in k26263 in k26260 in k26257 in k26254 in k26251 in k25668 in k25665 in k25142 in k25139 in k25136 in k25133 in k25130 in k25127 in k25124 in k25121 in k25118 in k25115 in k25112 in k25109 in k25106 in k25103 in k25100 in k25097 in k25094 in k25091 in k25088 in k25085 in k25082 in k24943 in k24940 in k24937 in k24934 in k24878 in k24875 in k24872 in k24869 in k24866 in k24863 in k24860 in k24857 in k23555 in k23486 in k23293 in k23290 in k23185 in k23134 in k11783 in k10718 in k10715 in k7274 in k7271 in k6978 in k6975 in k6971 in k6680 in k6677 in k6674 in k6671 */
static void C_ccall f_31247(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_31247,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_31251,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("error");
t4=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[21],((C_word*)t0)[2]);}
else{
t4=t2;
f_31251(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k31249 in k31245 in k31123 in k31120 in mm:make-off in k30217 in k26697 in k26694 in k26691 in k26688 in k26263 in k26260 in k26257 in k26254 in k26251 in k25668 in k25665 in k25142 in k25139 in k25136 in k25133 in k25130 in k25127 in k25124 in k25121 in k25118 in k25115 in k25112 in k25109 in k25106 in k25103 in k25100 in k25097 in k25094 in k25091 in k25088 in k25085 in k25082 in k24943 in k24940 in k24937 in k24934 in k24878 in k24875 in k24872 in k24869 in k24866 in k24863 in k24860 in k24857 in k23555 in k23486 in k23293 in k23290 in k23185 in k23134 in k11783 in k10718 in k10715 in k7274 in k7271 in k6978 in k6975 in k6971 in k6680 in k6677 in k6674 in k6671 */
static void C_ccall f_31251(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_31128(t7,t6);}

/* k31210 in k31123 in k31120 in mm:make-off in k30217 in k26697 in k26694 in k26691 in k26688 in k26263 in k26260 in k26257 in k26254 in k26251 in k25668 in k25665 in k25142 in k25139 in k25136 in k25133 in k25130 in k25127 in k25124 in k25121 in k25118 in k25115 in k25112 in k25109 in k25106 in k25103 in k25100 in k25097 in k25094 in k25091 in k25088 in k25085 in k25082 in k24943 in k24940 in k24937 in k24934 in k24878 in k24875 in k24872 in k24869 in k24866 in k24863 in k24860 in k24857 in k23555 in k23486 in k23293 in k23290 in k23185 in k23134 in k11783 in k10718 in k10715 in k7274 in k7271 in k6978 in k6975 in k6971 in k6680 in k6677 in k6674 in k6671 */
static void C_ccall f_31212(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_31212,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_31216,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("error");
t4=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[21],((C_word*)t0)[2]);}
else{
t4=t2;
f_31216(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k31214 in k31210 in k31123 in k31120 in mm:make-off in k30217 in k26697 in k26694 in k26691 in k26688 in k26263 in k26260 in k26257 in k26254 in k26251 in k25668 in k25665 in k25142 in k25139 in k25136 in k25133 in k25130 in k25127 in k25124 in k25121 in k25118 in k25115 in k25112 in k25109 in k25106 in k25103 in k25100 in k25097 in k25094 in k25091 in k25088 in k25085 in k25082 in k24943 in k24940 in k24937 in k24934 in k24878 in k24875 in k24872 in k24869 in k24866 in k24863 in k24860 in k24857 in k23555 in k23486 in k23293 in k23290 in k23185 in k23134 in k11783 in k10718 in k10715 in k7274 in k7271 in k6978 in k6975 in k6971 in k6680 in k6677 in k6674 in k6671 */
static void C_ccall f_31216(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_31128(t7,t6);}

/* k31175 in k31123 in k31120 in mm:make-off in k30217 in k26697 in k26694 in k26691 in k26688 in k26263 in k26260 in k26257 in k26254 in k26251 in k25668 in k25665 in k25142 in k25139 in k25136 in k25133 in k25130 in k25127 in k25124 in k25121 in k25118 in k25115 in k25112 in k25109 in k25106 in k25103 in k25100 in k25097 in k25094 in k25091 in k25088 in k25085 in k25082 in k24943 in k24940 in k24937 in k24934 in k24878 in k24875 in k24872 in k24869 in k24866 in k24863 in k24860 in k24857 in k23555 in k23486 in k23293 in k23290 in k23185 in k23134 in k11783 in k10718 in k10715 in k7274 in k7271 in k6978 in k6975 in k6971 in k6680 in k6677 in k6674 in k6671 */
static void C_ccall f_31177(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_31177,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_31181,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("error");
t4=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[21],((C_word*)t0)[2]);}
else{
t4=t2;
f_31181(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k31179 in k31175 in k31123 in k31120 in mm:make-off in k30217 in k26697 in k26694 in k26691 in k26688 in k26263 in k26260 in k26257 in k26254 in k26251 in k25668 in k25665 in k25142 in k25139 in k25136 in k25133 in k25130 in k25127 in k25124 in k25121 in k25118 in k25115 in k25112 in k25109 in k25106 in k25103 in k25100 in k25097 in k25094 in k25091 in k25088 in k25085 in k25082 in k24943 in k24940 in k24937 in k24934 in k24878 in k24875 in k24872 in k24869 in k24866 in k24863 in k24860 in k24857 in k23555 in k23486 in k23293 in k23290 in k23185 in k23134 in k11783 in k10718 in k10715 in k7274 in k7271 in k6978 in k6975 in k6971 in k6680 in k6677 in k6674 in k6671 */
static void C_ccall f_31181(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_31128(t7,t6);}

/* k31126 in k31123 in k31120 in mm:make-off in k30217 in k26697 in k26694 in k26691 in k26688 in k26263 in k26260 in k26257 in k26254 in k26251 in k25668 in k25665 in k25142 in k25139 in k25136 in k25133 in k25130 in k25127 in k25124 in k25121 in k25118 in k25115 in k25112 in k25109 in k25106 in k25103 in k25100 in k25097 in k25094 in k25091 in k25088 in k25085 in k25082 in k24943 in k24940 in k24937 in k24934 in k24878 in k24875 in k24872 in k24869 in k24866 in k24863 in k24860 in k24857 in k23555 in k23486 in k23293 in k23290 in k23185 in k23134 in k11783 in k10718 in k10715 in k7274 in k7271 in k6978 in k6975 in k6971 in k6680 in k6677 in k6674 in k6671 */
static void C_fcall f_31128(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[6],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_31128,NULL,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_31131,a[2]=((C_word*)t0)[4],a[3]=((C_word*)t0)[5],a[4]=((C_word*)t0)[6],a[5]=((C_word*)t0)[7],tmp=(C_word)a,a+=6,tmp);
if(C_truep((C_word)C_i_nullp(((C_word*)((C_word*)t0)[3])[1]))){
t3=t2;
f_31131(2,t3,C_SCHEME_UNDEFINED);}
else{
C_trace("error");
t3=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t3))(4,t3,t2,lf[5],((C_word*)t0)[2]);}}

/* k31129 in k31126 in k31123 in k31120 in mm:make-off in k30217 in k26697 in k26694 in k26691 in k26688 in k26263 in k26260 in k26257 in k26254 in k26251 in k25668 in k25665 in k25142 in k25139 in k25136 in k25133 in k25130 in k25127 in k25124 in k25121 in k25118 in k25115 in k25112 in k25109 in k25106 in k25103 in k25100 in k25097 in k25094 in k25091 in k25088 in k25085 in k25082 in k24943 in k24940 in k24937 in k24934 in k24878 in k24875 in k24872 in k24869 in k24866 in k24863 in k24860 in k24857 in k23555 in k23486 in k23293 in k23290 in k23185 in k23134 in k11783 in k10718 in k10715 in k7274 in k7271 in k6978 in k6975 in k6971 in k6680 in k6677 in k6674 in k6671 */
static void C_ccall f_31131(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word ab[3],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_31131,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_31135,a[2]=((C_word)li478),tmp=(C_word)a,a+=3,tmp);
((C_proc7)(void*)(*((C_word*)t2+1)))(7,t2,((C_word*)t0)[5],C_retrieve(lf[722]),((C_word*)((C_word*)t0)[4])[1],((C_word*)((C_word*)t0)[3])[1],((C_word*)((C_word*)t0)[2])[1],C_fix(0));}

/* f_31135 in k31129 in k31126 in k31123 in k31120 in mm:make-off in k30217 in k26697 in k26694 in k26691 in k26688 in k26263 in k26260 in k26257 in k26254 in k26251 in k25668 in k25665 in k25142 in k25139 in k25136 in k25133 in k25130 in k25127 in k25124 in k25121 in k25118 in k25115 in k25112 in k25109 in k25106 in k25103 in k25100 in k25097 in k25094 in k25091 in k25088 in k25085 in k25082 in k24943 in k24940 in k24937 in k24934 in k24878 in k24875 in k24872 in k24869 in k24866 in k24863 in k24860 in k24857 in k23555 in k23486 in k23293 in k23290 in k23185 in k23134 in k11783 in k10718 in k10715 in k7274 in k7271 in k6978 in k6975 in k6971 in k6680 in k6677 in k6674 in k6671 */
static void C_ccall f_31135(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4,C_word t5,C_word t6){
C_word tmp;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word ab[5],*a=ab;
if(c!=7) C_bad_argc_2(c,7,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr7,(void*)f_31135,7,t0,t1,t2,t3,t4,t5,t6);}
t7=(C_word)C_a_i_bytevector(&a,1,C_fix(3));
t8=(C_word)C_i_foreign_fixnum_argumentp(t2);
t9=(C_word)C_i_foreign_flonum_argumentp(t3);
t10=(C_word)C_i_foreign_fixnum_argumentp(t4);
t11=(C_word)C_i_foreign_fixnum_argumentp(t5);
t12=(C_word)C_i_foreign_fixnum_argumentp(t6);
t13=t1;
((C_proc2)(void*)(*((C_word*)t13+1)))(2,t13,(C_word)stub5234(t7,t8,t9,t10,t11,t12));}

/* mm:on? in k30217 in k26697 in k26694 in k26691 in k26688 in k26263 in k26260 in k26257 in k26254 in k26251 in k25668 in k25665 in k25142 in k25139 in k25136 in k25133 in k25130 in k25127 in k25124 in k25121 in k25118 in k25115 in k25112 in k25109 in k25106 in k25103 in k25100 in k25097 in k25094 in k25091 in k25088 in k25085 in k25082 in k24943 in k24940 in k24937 in k24934 in k24878 in k24875 in k24872 in k24869 in k24866 in k24863 in k24860 in k24857 in k23555 in k23486 in k23293 in k23290 in k23185 in k23134 in k11783 in k10718 in k10715 in k7274 in k7271 in k6978 in k6975 in k6971 in k6680 in k6677 in k6674 in k6671 */
static void C_ccall f_31099(C_word c,C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word ab[3],*a=ab;
if(c!=3) C_bad_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr3,(void*)f_31099,3,t0,t1,t2);}
t3=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_31104,a[2]=((C_word)li476),tmp=(C_word)a,a+=3,tmp);
((C_proc4)(void*)(*((C_word*)t3+1)))(4,t3,t1,t2,C_retrieve(lf[723]));}

/* f_31104 in mm:on? in k30217 in k26697 in k26694 in k26691 in k26688 in k26263 in k26260 in k26257 in k26254 in k26251 in k25668 in k25665 in k25142 in k25139 in k25136 in k25133 in k25130 in k25127 in k25124 in k25121 in k25118 in k25115 in k25112 in k25109 in k25106 in k25103 in k25100 in k25097 in k25094 in k25091 in k25088 in k25085 in k25082 in k24943 in k24940 in k24937 in k24934 in k24878 in k24875 in k24872 in k24869 in k24866 in k24863 in k24860 in k24857 in k23555 in k23486 in k23293 in k23290 in k23185 in k23134 in k11783 in k10718 in k10715 in k7274 in k7271 in k6978 in k6975 in k6971 in k6680 in k6677 in k6674 in k6671 */
static void C_ccall f_31104(C_word c,C_word t0,C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word t6;
C_word *a;
if(c!=4) C_bad_argc_2(c,4,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr4,(void*)f_31104,4,t0,t1,t2,t3);}
t4=(C_truep(t2)?(C_word)C_i_foreign_pointer_argumentp(t2):C_SCHEME_FALSE);
t5=(C_word)C_i_foreign_fixnum_argumentp(t3);
t6=t1;
((C_proc2)(void*)(*((C_word*)t6+1)))(2,t6,(C_word)stub5155(C_SCHEME_UNDEFINED,t4,t5));}

/* mm:make-on in k30217 in k26697 in k26694 in k26691 in k26688 in k26263 in k26260 in k26257 in k26254 in k26251 in k25668 in k25665 in k25142 in k25139 in k25136 in k25133 in k25130 in k25127 in k25124 in k25121 in k25118 in k25115 in k25112 in k25109 in k25106 in k25103 in k25100 in k25097 in k25094 in k25091 in k25088 in k25085 in k25082 in k24943 in k24940 in k24937 in k24934 in k24878 in k24875 in k24872 in k24869 in k24866 in k24863 in k24860 in k24857 in k23555 in k23486 in k23293 in k23290 in k23185 in k23134 in k11783 in k10718 in k10715 in k7274 in k7271 in k6978 in k6975 in k6971 in k6680 in k6677 in k6674 in k6671 */
static void C_ccall f_30370(C_word c,C_word t0,C_word t1,...){
C_word tmp;
C_word t2;
va_list v;
C_word *a,c2=c;
C_save_rest(t1,c2,2);
C_check_for_interrupt;
if(!C_demand(c*C_SIZEOF_PAIR+72)){
C_save_and_reclaim((void*)tr2r,(void*)f_30370r,2,t0,t1);}
else{
a=C_alloc((c-2)*3);
t2=C_restore_rest(a,C_rest_count(0));
f_30370r(t0,t1,t2);}}

static void C_ccall f_30370r(C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word t14;
C_word t15;
C_word t16;
C_word t17;
C_word t18;
C_word t19;
C_word t20;
C_word t21;
C_word t22;
C_word t23;
C_word t24;
C_word t25;
C_word t26;
C_word t27;
C_word t28;
C_word t29;
C_word t30;
C_word t31;
C_word t32;
C_word t33;
C_word t34;
C_word *a=C_alloc(72);
t3=C_fix(0);
t4=(*a=C_VECTOR_TYPE|1,a[1]=t3,tmp=(C_word)a,a+=2,tmp);
t5=C_fix(60);
t6=(*a=C_VECTOR_TYPE|1,a[1]=t5,tmp=(C_word)a,a+=2,tmp);
t7=C_fix(64);
t8=(*a=C_VECTOR_TYPE|1,a[1]=t7,tmp=(C_word)a,a+=2,tmp);
t9=C_fix(0);
t10=(*a=C_VECTOR_TYPE|1,a[1]=t9,tmp=(C_word)a,a+=2,tmp);
t11=C_SCHEME_FALSE;
t12=(*a=C_VECTOR_TYPE|1,a[1]=t11,tmp=(C_word)a,a+=2,tmp);
t13=C_SCHEME_FALSE;
t14=(*a=C_VECTOR_TYPE|1,a[1]=t13,tmp=(C_word)a,a+=2,tmp);
t15=C_SCHEME_FALSE;
t16=(*a=C_VECTOR_TYPE|1,a[1]=t15,tmp=(C_word)a,a+=2,tmp);
t17=C_SCHEME_FALSE;
t18=(*a=C_VECTOR_TYPE|1,a[1]=t17,tmp=(C_word)a,a+=2,tmp);
t19=t2;
t20=(*a=C_VECTOR_TYPE|1,a[1]=t19,tmp=(C_word)a,a+=2,tmp);
t21=C_SCHEME_FALSE;
t22=(*a=C_VECTOR_TYPE|1,a[1]=t21,tmp=(C_word)a,a+=2,tmp);
t23=(*a=C_CLOSURE_TYPE|13,a[1]=(C_word)f_30374,a[2]=t18,a[3]=t16,a[4]=t14,a[5]=t22,a[6]=t12,a[7]=t2,a[8]=t20,a[9]=t8,a[10]=t6,a[11]=t10,a[12]=t4,a[13]=t1,tmp=(C_word)a,a+=14,tmp);
if(C_truep((C_word)C_i_nullp(((C_word*)t20)[1]))){
t24=t23;
f_30374(t24,C_SCHEME_UNDEFINED);}
else{
t24=(C_word)C_i_car(((C_word*)t20)[1]);
t25=(C_word)C_eqp(t24,lf[730]);
if(C_truep(t25)){
t26=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_30942,a[2]=t2,a[3]=t23,a[4]=t20,a[5]=t22,a[6]=t12,a[7]=t4,tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)t12)[1])){
C_trace("error");
t27=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t27))(4,t27,t26,lf[19],lf[730]);}
else{
t27=t26;
f_30942(2,t27,C_SCHEME_UNDEFINED);}}
else{
t26=(C_word)C_eqp(t24,lf[731]);
if(C_truep(t26)){
t27=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_30977,a[2]=t2,a[3]=t23,a[4]=t20,a[5]=t22,a[6]=t14,a[7]=t6,tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)t14)[1])){
C_trace("error");
t28=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t28))(4,t28,t27,lf[19],lf[731]);}
else{
t28=t27;
f_30977(2,t28,C_SCHEME_UNDEFINED);}}
else{
t27=(C_word)C_eqp(t24,lf[732]);
if(C_truep(t27)){
t28=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_31012,a[2]=t2,a[3]=t23,a[4]=t20,a[5]=t22,a[6]=t16,a[7]=t8,tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)t16)[1])){
C_trace("error");
t29=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t29))(4,t29,t28,lf[19],lf[732]);}
else{
t29=t28;
f_31012(2,t29,C_SCHEME_UNDEFINED);}}
else{
t28=(C_word)C_eqp(t24,lf[733]);
if(C_truep(t28)){
t29=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_31047,a[2]=t2,a[3]=t23,a[4]=t20,a[5]=t22,a[6]=t18,a[7]=t10,tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)t18)[1])){
C_trace("error");
t30=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t30))(4,t30,t29,lf[19],lf[733]);}
else{
t30=t29;
f_31047(2,t30,C_SCHEME_UNDEFINED);}}
else{
t29=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_31076,a[2]=t23,a[3]=t12,a[4]=t4,a[5]=t20,tmp=(C_word)a,a+=6,tmp);
if(C_truep(((C_word*)t22)[1])){
C_trace("error");
t30=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t30))(4,t30,t29,lf[10],t2);}
else{
t30=t29;
f_31076(2,t30,C_SCHEME_UNDEFINED);}}}}}}}

/* k31074 in mm:make-on in k30217 in k26697 in k26694 in k26691 in k26688 in k26263 in k26260 in k26257 in k26254 in k26251 in k25668 in k25665 in k25142 in k25139 in k25136 in k25133 in k25130 in k25127 in k25124 in k25121 in k25118 in k25115 in k25112 in k25109 in k25106 in k25103 in k25100 in k25097 in k25094 in k25091 in k25088 in k25085 in k25082 in k24943 in k24940 in k24937 in k24934 in k24878 in k24875 in k24872 in k24869 in k24866 in k24863 in k24860 in k24857 in k23555 in k23486 in k23293 in k23290 in k23185 in k23134 in k11783 in k10718 in k10715 in k7274 in k7271 in k6978 in k6975 in k6971 in k6680 in k6677 in k6674 in k6671 */
static void C_ccall f_31076(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_31076,2,t0,t1);}
t2=(C_word)C_i_car(((C_word*)((C_word*)t0)[5])[1]);
t3=C_mutate(((C_word *)((C_word*)t0)[4])+1,t2);
t4=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_31083,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[5],a[4]=((C_word*)t0)[3],tmp=(C_word)a,a+=5,tmp);
t5=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_31091,a[2]=((C_word*)t0)[4],a[3]=t4,tmp=(C_word)a,a+=4,tmp);
C_trace("keyword?");
t6=C_retrieve(lf[13]);
((C_proc3)C_retrieve_proc(t6))(3,t6,t5,((C_word*)((C_word*)t0)[4])[1]);}

/* k31089 in k31074 in mm:make-on in k30217 in k26697 in k26694 in k26691 in k26688 in k26263 in k26260 in k26257 in k26254 in k26251 in k25668 in k25665 in k25142 in k25139 in k25136 in k25133 in k25130 in k25127 in k25124 in k25121 in k25118 in k25115 in k25112 in k25109 in k25106 in k25103 in k25100 in k25097 in k25094 in k25091 in k25088 in k25085 in k25082 in k24943 in k24940 in k24937 in k24934 in k24878 in k24875 in k24872 in k24869 in k24866 in k24863 in k24860 in k24857 in k23555 in k23486 in k23293 in k23290 in k23185 in k23134 in k11783 in k10718 in k10715 in k7274 in k7271 in k6978 in k6975 in k6971 in k6680 in k6677 in k6674 in k6671 */
static void C_ccall f_31091(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
if(C_truep(t1)){
C_trace("error");
t2=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t2))(4,t2,((C_word*)t0)[3],lf[14],((C_word*)((C_word*)t0)[2])[1]);}
else{
t2=((C_word*)t0)[3];
f_31083(2,t2,C_SCHEME_UNDEFINED);}}

/* k31081 in k31074 in mm:make-on in k30217 in k26697 in k26694 in k26691 in k26688 in k26263 in k26260 in k26257 in k26254 in k26251 in k25668 in k25665 in k25142 in k25139 in k25136 in k25133 in k25130 in k25127 in k25124 in k25121 in k25118 in k25115 in k25112 in k25109 in k25106 in k25103 in k25100 in k25097 in k25094 in k25091 in k25088 in k25085 in k25082 in k24943 in k24940 in k24937 in k24934 in k24878 in k24875 in k24872 in k24869 in k24866 in k24863 in k24860 in k24857 in k23555 in k23486 in k23293 in k23290 in k23185 in k23134 in k11783 in k10718 in k10715 in k7274 in k7271 in k6978 in k6975 in k6971 in k6680 in k6677 in k6674 in k6671 */
static void C_ccall f_31083(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word *a;
t2=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[3])[1]);
t4=C_mutate(((C_word *)((C_word*)t0)[3])+1,t3);
t5=((C_word*)t0)[2];
f_30374(t5,t4);}

/* k31045 in mm:make-on in k30217 in k26697 in k26694 in k26691 in k26688 in k26263 in k26260 in k26257 in k26254 in k26251 in k25668 in k25665 in k25142 in k25139 in k25136 in k25133 in k25130 in k25127 in k25124 in k25121 in k25118 in k25115 in k25112 in k25109 in k25106 in k25103 in k25100 in k25097 in k25094 in k25091 in k25088 in k25085 in k25082 in k24943 in k24940 in k24937 in k24934 in k24878 in k24875 in k24872 in k24869 in k24866 in k24863 in k24860 in k24857 in k23555 in k23486 in k23293 in k23290 in k23185 in k23134 in k11783 in k10718 in k10715 in k7274 in k7271 in k6978 in k6975 in k6971 in k6680 in k6677 in k6674 in k6671 */
static void C_ccall f_31047(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_31047,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_31051,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("error");
t4=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[21],((C_word*)t0)[2]);}
else{
t4=t2;
f_31051(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k31049 in k31045 in mm:make-on in k30217 in k26697 in k26694 in k26691 in k26688 in k26263 in k26260 in k26257 in k26254 in k26251 in k25668 in k25665 in k25142 in k25139 in k25136 in k25133 in k25130 in k25127 in k25124 in k25121 in k25118 in k25115 in k25112 in k25109 in k25106 in k25103 in k25100 in k25097 in k25094 in k25091 in k25088 in k25085 in k25082 in k24943 in k24940 in k24937 in k24934 in k24878 in k24875 in k24872 in k24869 in k24866 in k24863 in k24860 in k24857 in k23555 in k23486 in k23293 in k23290 in k23185 in k23134 in k11783 in k10718 in k10715 in k7274 in k7271 in k6978 in k6975 in k6971 in k6680 in k6677 in k6674 in k6671 */
static void C_ccall f_31051(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_30374(t7,t6);}

/* k31010 in mm:make-on in k30217 in k26697 in k26694 in k26691 in k26688 in k26263 in k26260 in k26257 in k26254 in k26251 in k25668 in k25665 in k25142 in k25139 in k25136 in k25133 in k25130 in k25127 in k25124 in k25121 in k25118 in k25115 in k25112 in k25109 in k25106 in k25103 in k25100 in k25097 in k25094 in k25091 in k25088 in k25085 in k25082 in k24943 in k24940 in k24937 in k24934 in k24878 in k24875 in k24872 in k24869 in k24866 in k24863 in k24860 in k24857 in k23555 in k23486 in k23293 in k23290 in k23185 in k23134 in k11783 in k10718 in k10715 in k7274 in k7271 in k6978 in k6975 in k6971 in k6680 in k6677 in k6674 in k6671 */
static void C_ccall f_31012(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_31012,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_31016,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("error");
t4=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[21],((C_word*)t0)[2]);}
else{
t4=t2;
f_31016(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k31014 in k31010 in mm:make-on in k30217 in k26697 in k26694 in k26691 in k26688 in k26263 in k26260 in k26257 in k26254 in k26251 in k25668 in k25665 in k25142 in k25139 in k25136 in k25133 in k25130 in k25127 in k25124 in k25121 in k25118 in k25115 in k25112 in k25109 in k25106 in k25103 in k25100 in k25097 in k25094 in k25091 in k25088 in k25085 in k25082 in k24943 in k24940 in k24937 in k24934 in k24878 in k24875 in k24872 in k24869 in k24866 in k24863 in k24860 in k24857 in k23555 in k23486 in k23293 in k23290 in k23185 in k23134 in k11783 in k10718 in k10715 in k7274 in k7271 in k6978 in k6975 in k6971 in k6680 in k6677 in k6674 in k6671 */
static void C_ccall f_31016(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_30374(t7,t6);}

/* k30975 in mm:make-on in k30217 in k26697 in k26694 in k26691 in k26688 in k26263 in k26260 in k26257 in k26254 in k26251 in k25668 in k25665 in k25142 in k25139 in k25136 in k25133 in k25130 in k25127 in k25124 in k25121 in k25118 in k25115 in k25112 in k25109 in k25106 in k25103 in k25100 in k25097 in k25094 in k25091 in k25088 in k25085 in k25082 in k24943 in k24940 in k24937 in k24934 in k24878 in k24875 in k24872 in k24869 in k24866 in k24863 in k24860 in k24857 in k23555 in k23486 in k23293 in k23290 in k23185 in k23134 in k11783 in k10718 in k10715 in k7274 in k7271 in k6978 in k6975 in k6971 in k6680 in k6677 in k6674 in k6671 */
static void C_ccall f_30977(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_30977,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_30981,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("error");
t4=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[21],((C_word*)t0)[2]);}
else{
t4=t2;
f_30981(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k30979 in k30975 in mm:make-on in k30217 in k26697 in k26694 in k26691 in k26688 in k26263 in k26260 in k26257 in k26254 in k26251 in k25668 in k25665 in k25142 in k25139 in k25136 in k25133 in k25130 in k25127 in k25124 in k25121 in k25118 in k25115 in k25112 in k25109 in k25106 in k25103 in k25100 in k25097 in k25094 in k25091 in k25088 in k25085 in k25082 in k24943 in k24940 in k24937 in k24934 in k24878 in k24875 in k24872 in k24869 in k24866 in k24863 in k24860 in k24857 in k23555 in k23486 in k23293 in k23290 in k23185 in k23134 in k11783 in k10718 in k10715 in k7274 in k7271 in k6978 in k6975 in k6971 in k6680 in k6677 in k6674 in k6671 */
static void C_ccall f_30981(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_30374(t7,t6);}

/* k30940 in mm:make-on in k30217 in k26697 in k26694 in k26691 in k26688 in k26263 in k26260 in k26257 in k26254 in k26251 in k25668 in k25665 in k25142 in k25139 in k25136 in k25133 in k25130 in k25127 in k25124 in k25121 in k25118 in k25115 in k25112 in k25109 in k25106 in k25103 in k25100 in k25097 in k25094 in k25091 in k25088 in k25085 in k25082 in k24943 in k24940 in k24937 in k24934 in k24878 in k24875 in k24872 in k24869 in k24866 in k24863 in k24860 in k24857 in k23555 in k23486 in k23293 in k23290 in k23185 in k23134 in k11783 in k10718 in k10715 in k7274 in k7271 in k6978 in k6975 in k6971 in k6680 in k6677 in k6674 in k6671 */
static void C_ccall f_30942(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_30942,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_30946,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("error");
t4=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[21],((C_word*)t0)[2]);}
else{
t4=t2;
f_30946(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k30944 in k30940 in mm:make-on in k30217 in k26697 in k26694 in k26691 in k26688 in k26263 in k26260 in k26257 in k26254 in k26251 in k25668 in k25665 in k25142 in k25139 in k25136 in k25133 in k25130 in k25127 in k25124 in k25121 in k25118 in k25115 in k25112 in k25109 in k25106 in k25103 in k25100 in k25097 in k25094 in k25091 in k25088 in k25085 in k25082 in k24943 in k24940 in k24937 in k24934 in k24878 in k24875 in k24872 in k24869 in k24866 in k24863 in k24860 in k24857 in k23555 in k23486 in k23293 in k23290 in k23185 in k23134 in k11783 in k10718 in k10715 in k7274 in k7271 in k6978 in k6975 in k6971 in k6680 in k6677 in k6674 in k6671 */
static void C_ccall f_30946(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_30374(t7,t6);}

/* k30372 in mm:make-on in k30217 in k26697 in k26694 in k26691 in k26688 in k26263 in k26260 in k26257 in k26254 in k26251 in k25668 in k25665 in k25142 in k25139 in k25136 in k25133 in k25130 in k25127 in k25124 in k25121 in k25118 in k25115 in k25112 in k25109 in k25106 in k25103 in k25100 in k25097 in k25094 in k25091 in k25088 in k25085 in k25082 in k24943 in k24940 in k24937 in k24934 in k24878 in k24875 in k24872 in k24869 in k24866 in k24863 in k24860 in k24857 in k23555 in k23486 in k23293 in k23290 in k23185 in k23134 in k11783 in k10718 in k10715 in k7274 in k7271 in k6978 in k6975 in k6971 in k6680 in k6677 in k6674 in k6671 */
static void C_fcall f_30374(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word ab[52],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_30374,NULL,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|13,a[1]=(C_word)f_30377,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],a[7]=((C_word*)t0)[7],a[8]=((C_word*)t0)[8],a[9]=((C_word*)t0)[9],a[10]=((C_word*)t0)[10],a[11]=((C_word*)t0)[11],a[12]=((C_word*)t0)[12],a[13]=((C_word*)t0)[13],tmp=(C_word)a,a+=14,tmp);
if(C_truep((C_word)C_i_nullp(((C_word*)((C_word*)t0)[8])[1]))){
t3=t2;
f_30377(t3,C_SCHEME_UNDEFINED);}
else{
t3=(C_word)C_i_car(((C_word*)((C_word*)t0)[8])[1]);
t4=(C_word)C_eqp(t3,lf[730]);
if(C_truep(t4)){
t5=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_30772,a[2]=((C_word*)t0)[7],a[3]=t2,a[4]=((C_word*)t0)[8],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],a[7]=((C_word*)t0)[12],tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)((C_word*)t0)[6])[1])){
C_trace("error");
t6=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t6))(4,t6,t5,lf[19],lf[730]);}
else{
t6=t5;
f_30772(2,t6,C_SCHEME_UNDEFINED);}}
else{
t5=(C_word)C_eqp(t3,lf[731]);
if(C_truep(t5)){
t6=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_30807,a[2]=((C_word*)t0)[7],a[3]=t2,a[4]=((C_word*)t0)[8],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[4],a[7]=((C_word*)t0)[10],tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)((C_word*)t0)[4])[1])){
C_trace("error");
t7=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t7))(4,t7,t6,lf[19],lf[731]);}
else{
t7=t6;
f_30807(2,t7,C_SCHEME_UNDEFINED);}}
else{
t6=(C_word)C_eqp(t3,lf[732]);
if(C_truep(t6)){
t7=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_30842,a[2]=((C_word*)t0)[7],a[3]=t2,a[4]=((C_word*)t0)[8],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[3],a[7]=((C_word*)t0)[9],tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)((C_word*)t0)[3])[1])){
C_trace("error");
t8=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t8))(4,t8,t7,lf[19],lf[732]);}
else{
t8=t7;
f_30842(2,t8,C_SCHEME_UNDEFINED);}}
else{
t7=(C_word)C_eqp(t3,lf[733]);
if(C_truep(t7)){
t8=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_30877,a[2]=((C_word*)t0)[7],a[3]=t2,a[4]=((C_word*)t0)[8],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[2],a[7]=((C_word*)t0)[11],tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)((C_word*)t0)[2])[1])){
C_trace("error");
t9=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t9))(4,t9,t8,lf[19],lf[733]);}
else{
t9=t8;
f_30877(2,t9,C_SCHEME_UNDEFINED);}}
else{
t8=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_30906,a[2]=t2,a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[10],a[5]=((C_word*)t0)[8],tmp=(C_word)a,a+=6,tmp);
if(C_truep(((C_word*)((C_word*)t0)[5])[1])){
C_trace("error");
t9=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t9))(4,t9,t8,lf[10],((C_word*)t0)[7]);}
else{
t9=t8;
f_30906(2,t9,C_SCHEME_UNDEFINED);}}}}}}}

/* k30904 in k30372 in mm:make-on in k30217 in k26697 in k26694 in k26691 in k26688 in k26263 in k26260 in k26257 in k26254 in k26251 in k25668 in k25665 in k25142 in k25139 in k25136 in k25133 in k25130 in k25127 in k25124 in k25121 in k25118 in k25115 in k25112 in k25109 in k25106 in k25103 in k25100 in k25097 in k25094 in k25091 in k25088 in k25085 in k25082 in k24943 in k24940 in k24937 in k24934 in k24878 in k24875 in k24872 in k24869 in k24866 in k24863 in k24860 in k24857 in k23555 in k23486 in k23293 in k23290 in k23185 in k23134 in k11783 in k10718 in k10715 in k7274 in k7271 in k6978 in k6975 in k6971 in k6680 in k6677 in k6674 in k6671 */
static void C_ccall f_30906(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_30906,2,t0,t1);}
t2=(C_word)C_i_car(((C_word*)((C_word*)t0)[5])[1]);
t3=C_mutate(((C_word *)((C_word*)t0)[4])+1,t2);
t4=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_30913,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[5],a[4]=((C_word*)t0)[3],tmp=(C_word)a,a+=5,tmp);
t5=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_30921,a[2]=((C_word*)t0)[4],a[3]=t4,tmp=(C_word)a,a+=4,tmp);
C_trace("keyword?");
t6=C_retrieve(lf[13]);
((C_proc3)C_retrieve_proc(t6))(3,t6,t5,((C_word*)((C_word*)t0)[4])[1]);}

/* k30919 in k30904 in k30372 in mm:make-on in k30217 in k26697 in k26694 in k26691 in k26688 in k26263 in k26260 in k26257 in k26254 in k26251 in k25668 in k25665 in k25142 in k25139 in k25136 in k25133 in k25130 in k25127 in k25124 in k25121 in k25118 in k25115 in k25112 in k25109 in k25106 in k25103 in k25100 in k25097 in k25094 in k25091 in k25088 in k25085 in k25082 in k24943 in k24940 in k24937 in k24934 in k24878 in k24875 in k24872 in k24869 in k24866 in k24863 in k24860 in k24857 in k23555 in k23486 in k23293 in k23290 in k23185 in k23134 in k11783 in k10718 in k10715 in k7274 in k7271 in k6978 in k6975 in k6971 in k6680 in k6677 in k6674 in k6671 */
static void C_ccall f_30921(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
if(C_truep(t1)){
C_trace("error");
t2=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t2))(4,t2,((C_word*)t0)[3],lf[14],((C_word*)((C_word*)t0)[2])[1]);}
else{
t2=((C_word*)t0)[3];
f_30913(2,t2,C_SCHEME_UNDEFINED);}}

/* k30911 in k30904 in k30372 in mm:make-on in k30217 in k26697 in k26694 in k26691 in k26688 in k26263 in k26260 in k26257 in k26254 in k26251 in k25668 in k25665 in k25142 in k25139 in k25136 in k25133 in k25130 in k25127 in k25124 in k25121 in k25118 in k25115 in k25112 in k25109 in k25106 in k25103 in k25100 in k25097 in k25094 in k25091 in k25088 in k25085 in k25082 in k24943 in k24940 in k24937 in k24934 in k24878 in k24875 in k24872 in k24869 in k24866 in k24863 in k24860 in k24857 in k23555 in k23486 in k23293 in k23290 in k23185 in k23134 in k11783 in k10718 in k10715 in k7274 in k7271 in k6978 in k6975 in k6971 in k6680 in k6677 in k6674 in k6671 */
static void C_ccall f_30913(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word *a;
t2=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[3])[1]);
t4=C_mutate(((C_word *)((C_word*)t0)[3])+1,t3);
t5=((C_word*)t0)[2];
f_30377(t5,t4);}

/* k30875 in k30372 in mm:make-on in k30217 in k26697 in k26694 in k26691 in k26688 in k26263 in k26260 in k26257 in k26254 in k26251 in k25668 in k25665 in k25142 in k25139 in k25136 in k25133 in k25130 in k25127 in k25124 in k25121 in k25118 in k25115 in k25112 in k25109 in k25106 in k25103 in k25100 in k25097 in k25094 in k25091 in k25088 in k25085 in k25082 in k24943 in k24940 in k24937 in k24934 in k24878 in k24875 in k24872 in k24869 in k24866 in k24863 in k24860 in k24857 in k23555 in k23486 in k23293 in k23290 in k23185 in k23134 in k11783 in k10718 in k10715 in k7274 in k7271 in k6978 in k6975 in k6971 in k6680 in k6677 in k6674 in k6671 */
static void C_ccall f_30877(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_30877,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_30881,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("error");
t4=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[21],((C_word*)t0)[2]);}
else{
t4=t2;
f_30881(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k30879 in k30875 in k30372 in mm:make-on in k30217 in k26697 in k26694 in k26691 in k26688 in k26263 in k26260 in k26257 in k26254 in k26251 in k25668 in k25665 in k25142 in k25139 in k25136 in k25133 in k25130 in k25127 in k25124 in k25121 in k25118 in k25115 in k25112 in k25109 in k25106 in k25103 in k25100 in k25097 in k25094 in k25091 in k25088 in k25085 in k25082 in k24943 in k24940 in k24937 in k24934 in k24878 in k24875 in k24872 in k24869 in k24866 in k24863 in k24860 in k24857 in k23555 in k23486 in k23293 in k23290 in k23185 in k23134 in k11783 in k10718 in k10715 in k7274 in k7271 in k6978 in k6975 in k6971 in k6680 in k6677 in k6674 in k6671 */
static void C_ccall f_30881(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_30377(t7,t6);}

/* k30840 in k30372 in mm:make-on in k30217 in k26697 in k26694 in k26691 in k26688 in k26263 in k26260 in k26257 in k26254 in k26251 in k25668 in k25665 in k25142 in k25139 in k25136 in k25133 in k25130 in k25127 in k25124 in k25121 in k25118 in k25115 in k25112 in k25109 in k25106 in k25103 in k25100 in k25097 in k25094 in k25091 in k25088 in k25085 in k25082 in k24943 in k24940 in k24937 in k24934 in k24878 in k24875 in k24872 in k24869 in k24866 in k24863 in k24860 in k24857 in k23555 in k23486 in k23293 in k23290 in k23185 in k23134 in k11783 in k10718 in k10715 in k7274 in k7271 in k6978 in k6975 in k6971 in k6680 in k6677 in k6674 in k6671 */
static void C_ccall f_30842(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_30842,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_30846,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("error");
t4=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[21],((C_word*)t0)[2]);}
else{
t4=t2;
f_30846(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k30844 in k30840 in k30372 in mm:make-on in k30217 in k26697 in k26694 in k26691 in k26688 in k26263 in k26260 in k26257 in k26254 in k26251 in k25668 in k25665 in k25142 in k25139 in k25136 in k25133 in k25130 in k25127 in k25124 in k25121 in k25118 in k25115 in k25112 in k25109 in k25106 in k25103 in k25100 in k25097 in k25094 in k25091 in k25088 in k25085 in k25082 in k24943 in k24940 in k24937 in k24934 in k24878 in k24875 in k24872 in k24869 in k24866 in k24863 in k24860 in k24857 in k23555 in k23486 in k23293 in k23290 in k23185 in k23134 in k11783 in k10718 in k10715 in k7274 in k7271 in k6978 in k6975 in k6971 in k6680 in k6677 in k6674 in k6671 */
static void C_ccall f_30846(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_30377(t7,t6);}

/* k30805 in k30372 in mm:make-on in k30217 in k26697 in k26694 in k26691 in k26688 in k26263 in k26260 in k26257 in k26254 in k26251 in k25668 in k25665 in k25142 in k25139 in k25136 in k25133 in k25130 in k25127 in k25124 in k25121 in k25118 in k25115 in k25112 in k25109 in k25106 in k25103 in k25100 in k25097 in k25094 in k25091 in k25088 in k25085 in k25082 in k24943 in k24940 in k24937 in k24934 in k24878 in k24875 in k24872 in k24869 in k24866 in k24863 in k24860 in k24857 in k23555 in k23486 in k23293 in k23290 in k23185 in k23134 in k11783 in k10718 in k10715 in k7274 in k7271 in k6978 in k6975 in k6971 in k6680 in k6677 in k6674 in k6671 */
static void C_ccall f_30807(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_30807,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_30811,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("error");
t4=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[21],((C_word*)t0)[2]);}
else{
t4=t2;
f_30811(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k30809 in k30805 in k30372 in mm:make-on in k30217 in k26697 in k26694 in k26691 in k26688 in k26263 in k26260 in k26257 in k26254 in k26251 in k25668 in k25665 in k25142 in k25139 in k25136 in k25133 in k25130 in k25127 in k25124 in k25121 in k25118 in k25115 in k25112 in k25109 in k25106 in k25103 in k25100 in k25097 in k25094 in k25091 in k25088 in k25085 in k25082 in k24943 in k24940 in k24937 in k24934 in k24878 in k24875 in k24872 in k24869 in k24866 in k24863 in k24860 in k24857 in k23555 in k23486 in k23293 in k23290 in k23185 in k23134 in k11783 in k10718 in k10715 in k7274 in k7271 in k6978 in k6975 in k6971 in k6680 in k6677 in k6674 in k6671 */
static void C_ccall f_30811(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_30377(t7,t6);}

/* k30770 in k30372 in mm:make-on in k30217 in k26697 in k26694 in k26691 in k26688 in k26263 in k26260 in k26257 in k26254 in k26251 in k25668 in k25665 in k25142 in k25139 in k25136 in k25133 in k25130 in k25127 in k25124 in k25121 in k25118 in k25115 in k25112 in k25109 in k25106 in k25103 in k25100 in k25097 in k25094 in k25091 in k25088 in k25085 in k25082 in k24943 in k24940 in k24937 in k24934 in k24878 in k24875 in k24872 in k24869 in k24866 in k24863 in k24860 in k24857 in k23555 in k23486 in k23293 in k23290 in k23185 in k23134 in k11783 in k10718 in k10715 in k7274 in k7271 in k6978 in k6975 in k6971 in k6680 in k6677 in k6674 in k6671 */
static void C_ccall f_30772(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_30772,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_30776,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("error");
t4=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[21],((C_word*)t0)[2]);}
else{
t4=t2;
f_30776(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k30774 in k30770 in k30372 in mm:make-on in k30217 in k26697 in k26694 in k26691 in k26688 in k26263 in k26260 in k26257 in k26254 in k26251 in k25668 in k25665 in k25142 in k25139 in k25136 in k25133 in k25130 in k25127 in k25124 in k25121 in k25118 in k25115 in k25112 in k25109 in k25106 in k25103 in k25100 in k25097 in k25094 in k25091 in k25088 in k25085 in k25082 in k24943 in k24940 in k24937 in k24934 in k24878 in k24875 in k24872 in k24869 in k24866 in k24863 in k24860 in k24857 in k23555 in k23486 in k23293 in k23290 in k23185 in k23134 in k11783 in k10718 in k10715 in k7274 in k7271 in k6978 in k6975 in k6971 in k6680 in k6677 in k6674 in k6671 */
static void C_ccall f_30776(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_30377(t7,t6);}

/* k30375 in k30372 in mm:make-on in k30217 in k26697 in k26694 in k26691 in k26688 in k26263 in k26260 in k26257 in k26254 in k26251 in k25668 in k25665 in k25142 in k25139 in k25136 in k25133 in k25130 in k25127 in k25124 in k25121 in k25118 in k25115 in k25112 in k25109 in k25106 in k25103 in k25100 in k25097 in k25094 in k25091 in k25088 in k25085 in k25082 in k24943 in k24940 in k24937 in k24934 in k24878 in k24875 in k24872 in k24869 in k24866 in k24863 in k24860 in k24857 in k23555 in k23486 in k23293 in k23290 in k23185 in k23134 in k11783 in k10718 in k10715 in k7274 in k7271 in k6978 in k6975 in k6971 in k6680 in k6677 in k6674 in k6671 */
static void C_fcall f_30377(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word ab[52],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_30377,NULL,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|13,a[1]=(C_word)f_30380,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],a[7]=((C_word*)t0)[7],a[8]=((C_word*)t0)[8],a[9]=((C_word*)t0)[9],a[10]=((C_word*)t0)[10],a[11]=((C_word*)t0)[11],a[12]=((C_word*)t0)[12],a[13]=((C_word*)t0)[13],tmp=(C_word)a,a+=14,tmp);
if(C_truep((C_word)C_i_nullp(((C_word*)((C_word*)t0)[8])[1]))){
t3=t2;
f_30380(t3,C_SCHEME_UNDEFINED);}
else{
t3=(C_word)C_i_car(((C_word*)((C_word*)t0)[8])[1]);
t4=(C_word)C_eqp(t3,lf[730]);
if(C_truep(t4)){
t5=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_30602,a[2]=((C_word*)t0)[7],a[3]=t2,a[4]=((C_word*)t0)[8],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],a[7]=((C_word*)t0)[12],tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)((C_word*)t0)[6])[1])){
C_trace("error");
t6=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t6))(4,t6,t5,lf[19],lf[730]);}
else{
t6=t5;
f_30602(2,t6,C_SCHEME_UNDEFINED);}}
else{
t5=(C_word)C_eqp(t3,lf[731]);
if(C_truep(t5)){
t6=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_30637,a[2]=((C_word*)t0)[7],a[3]=t2,a[4]=((C_word*)t0)[8],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[4],a[7]=((C_word*)t0)[10],tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)((C_word*)t0)[4])[1])){
C_trace("error");
t7=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t7))(4,t7,t6,lf[19],lf[731]);}
else{
t7=t6;
f_30637(2,t7,C_SCHEME_UNDEFINED);}}
else{
t6=(C_word)C_eqp(t3,lf[732]);
if(C_truep(t6)){
t7=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_30672,a[2]=((C_word*)t0)[7],a[3]=t2,a[4]=((C_word*)t0)[8],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[3],a[7]=((C_word*)t0)[9],tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)((C_word*)t0)[3])[1])){
C_trace("error");
t8=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t8))(4,t8,t7,lf[19],lf[732]);}
else{
t8=t7;
f_30672(2,t8,C_SCHEME_UNDEFINED);}}
else{
t7=(C_word)C_eqp(t3,lf[733]);
if(C_truep(t7)){
t8=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_30707,a[2]=((C_word*)t0)[7],a[3]=t2,a[4]=((C_word*)t0)[8],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[2],a[7]=((C_word*)t0)[11],tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)((C_word*)t0)[2])[1])){
C_trace("error");
t9=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t9))(4,t9,t8,lf[19],lf[733]);}
else{
t9=t8;
f_30707(2,t9,C_SCHEME_UNDEFINED);}}
else{
t8=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_30736,a[2]=t2,a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[9],a[5]=((C_word*)t0)[8],tmp=(C_word)a,a+=6,tmp);
if(C_truep(((C_word*)((C_word*)t0)[5])[1])){
C_trace("error");
t9=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t9))(4,t9,t8,lf[10],((C_word*)t0)[7]);}
else{
t9=t8;
f_30736(2,t9,C_SCHEME_UNDEFINED);}}}}}}}

/* k30734 in k30375 in k30372 in mm:make-on in k30217 in k26697 in k26694 in k26691 in k26688 in k26263 in k26260 in k26257 in k26254 in k26251 in k25668 in k25665 in k25142 in k25139 in k25136 in k25133 in k25130 in k25127 in k25124 in k25121 in k25118 in k25115 in k25112 in k25109 in k25106 in k25103 in k25100 in k25097 in k25094 in k25091 in k25088 in k25085 in k25082 in k24943 in k24940 in k24937 in k24934 in k24878 in k24875 in k24872 in k24869 in k24866 in k24863 in k24860 in k24857 in k23555 in k23486 in k23293 in k23290 in k23185 in k23134 in k11783 in k10718 in k10715 in k7274 in k7271 in k6978 in k6975 in k6971 in k6680 in k6677 in k6674 in k6671 */
static void C_ccall f_30736(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_30736,2,t0,t1);}
t2=(C_word)C_i_car(((C_word*)((C_word*)t0)[5])[1]);
t3=C_mutate(((C_word *)((C_word*)t0)[4])+1,t2);
t4=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_30743,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[5],a[4]=((C_word*)t0)[3],tmp=(C_word)a,a+=5,tmp);
t5=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_30751,a[2]=((C_word*)t0)[4],a[3]=t4,tmp=(C_word)a,a+=4,tmp);
C_trace("keyword?");
t6=C_retrieve(lf[13]);
((C_proc3)C_retrieve_proc(t6))(3,t6,t5,((C_word*)((C_word*)t0)[4])[1]);}

/* k30749 in k30734 in k30375 in k30372 in mm:make-on in k30217 in k26697 in k26694 in k26691 in k26688 in k26263 in k26260 in k26257 in k26254 in k26251 in k25668 in k25665 in k25142 in k25139 in k25136 in k25133 in k25130 in k25127 in k25124 in k25121 in k25118 in k25115 in k25112 in k25109 in k25106 in k25103 in k25100 in k25097 in k25094 in k25091 in k25088 in k25085 in k25082 in k24943 in k24940 in k24937 in k24934 in k24878 in k24875 in k24872 in k24869 in k24866 in k24863 in k24860 in k24857 in k23555 in k23486 in k23293 in k23290 in k23185 in k23134 in k11783 in k10718 in k10715 in k7274 in k7271 in k6978 in k6975 in k6971 in k6680 in k6677 in k6674 in k6671 */
static void C_ccall f_30751(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
if(C_truep(t1)){
C_trace("error");
t2=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t2))(4,t2,((C_word*)t0)[3],lf[14],((C_word*)((C_word*)t0)[2])[1]);}
else{
t2=((C_word*)t0)[3];
f_30743(2,t2,C_SCHEME_UNDEFINED);}}

/* k30741 in k30734 in k30375 in k30372 in mm:make-on in k30217 in k26697 in k26694 in k26691 in k26688 in k26263 in k26260 in k26257 in k26254 in k26251 in k25668 in k25665 in k25142 in k25139 in k25136 in k25133 in k25130 in k25127 in k25124 in k25121 in k25118 in k25115 in k25112 in k25109 in k25106 in k25103 in k25100 in k25097 in k25094 in k25091 in k25088 in k25085 in k25082 in k24943 in k24940 in k24937 in k24934 in k24878 in k24875 in k24872 in k24869 in k24866 in k24863 in k24860 in k24857 in k23555 in k23486 in k23293 in k23290 in k23185 in k23134 in k11783 in k10718 in k10715 in k7274 in k7271 in k6978 in k6975 in k6971 in k6680 in k6677 in k6674 in k6671 */
static void C_ccall f_30743(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word *a;
t2=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[3])[1]);
t4=C_mutate(((C_word *)((C_word*)t0)[3])+1,t3);
t5=((C_word*)t0)[2];
f_30380(t5,t4);}

/* k30705 in k30375 in k30372 in mm:make-on in k30217 in k26697 in k26694 in k26691 in k26688 in k26263 in k26260 in k26257 in k26254 in k26251 in k25668 in k25665 in k25142 in k25139 in k25136 in k25133 in k25130 in k25127 in k25124 in k25121 in k25118 in k25115 in k25112 in k25109 in k25106 in k25103 in k25100 in k25097 in k25094 in k25091 in k25088 in k25085 in k25082 in k24943 in k24940 in k24937 in k24934 in k24878 in k24875 in k24872 in k24869 in k24866 in k24863 in k24860 in k24857 in k23555 in k23486 in k23293 in k23290 in k23185 in k23134 in k11783 in k10718 in k10715 in k7274 in k7271 in k6978 in k6975 in k6971 in k6680 in k6677 in k6674 in k6671 */
static void C_ccall f_30707(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_30707,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_30711,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("error");
t4=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[21],((C_word*)t0)[2]);}
else{
t4=t2;
f_30711(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k30709 in k30705 in k30375 in k30372 in mm:make-on in k30217 in k26697 in k26694 in k26691 in k26688 in k26263 in k26260 in k26257 in k26254 in k26251 in k25668 in k25665 in k25142 in k25139 in k25136 in k25133 in k25130 in k25127 in k25124 in k25121 in k25118 in k25115 in k25112 in k25109 in k25106 in k25103 in k25100 in k25097 in k25094 in k25091 in k25088 in k25085 in k25082 in k24943 in k24940 in k24937 in k24934 in k24878 in k24875 in k24872 in k24869 in k24866 in k24863 in k24860 in k24857 in k23555 in k23486 in k23293 in k23290 in k23185 in k23134 in k11783 in k10718 in k10715 in k7274 in k7271 in k6978 in k6975 in k6971 in k6680 in k6677 in k6674 in k6671 */
static void C_ccall f_30711(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_30380(t7,t6);}

/* k30670 in k30375 in k30372 in mm:make-on in k30217 in k26697 in k26694 in k26691 in k26688 in k26263 in k26260 in k26257 in k26254 in k26251 in k25668 in k25665 in k25142 in k25139 in k25136 in k25133 in k25130 in k25127 in k25124 in k25121 in k25118 in k25115 in k25112 in k25109 in k25106 in k25103 in k25100 in k25097 in k25094 in k25091 in k25088 in k25085 in k25082 in k24943 in k24940 in k24937 in k24934 in k24878 in k24875 in k24872 in k24869 in k24866 in k24863 in k24860 in k24857 in k23555 in k23486 in k23293 in k23290 in k23185 in k23134 in k11783 in k10718 in k10715 in k7274 in k7271 in k6978 in k6975 in k6971 in k6680 in k6677 in k6674 in k6671 */
static void C_ccall f_30672(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_30672,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_30676,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("error");
t4=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[21],((C_word*)t0)[2]);}
else{
t4=t2;
f_30676(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k30674 in k30670 in k30375 in k30372 in mm:make-on in k30217 in k26697 in k26694 in k26691 in k26688 in k26263 in k26260 in k26257 in k26254 in k26251 in k25668 in k25665 in k25142 in k25139 in k25136 in k25133 in k25130 in k25127 in k25124 in k25121 in k25118 in k25115 in k25112 in k25109 in k25106 in k25103 in k25100 in k25097 in k25094 in k25091 in k25088 in k25085 in k25082 in k24943 in k24940 in k24937 in k24934 in k24878 in k24875 in k24872 in k24869 in k24866 in k24863 in k24860 in k24857 in k23555 in k23486 in k23293 in k23290 in k23185 in k23134 in k11783 in k10718 in k10715 in k7274 in k7271 in k6978 in k6975 in k6971 in k6680 in k6677 in k6674 in k6671 */
static void C_ccall f_30676(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_30380(t7,t6);}

/* k30635 in k30375 in k30372 in mm:make-on in k30217 in k26697 in k26694 in k26691 in k26688 in k26263 in k26260 in k26257 in k26254 in k26251 in k25668 in k25665 in k25142 in k25139 in k25136 in k25133 in k25130 in k25127 in k25124 in k25121 in k25118 in k25115 in k25112 in k25109 in k25106 in k25103 in k25100 in k25097 in k25094 in k25091 in k25088 in k25085 in k25082 in k24943 in k24940 in k24937 in k24934 in k24878 in k24875 in k24872 in k24869 in k24866 in k24863 in k24860 in k24857 in k23555 in k23486 in k23293 in k23290 in k23185 in k23134 in k11783 in k10718 in k10715 in k7274 in k7271 in k6978 in k6975 in k6971 in k6680 in k6677 in k6674 in k6671 */
static void C_ccall f_30637(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_30637,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_30641,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("error");
t4=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[21],((C_word*)t0)[2]);}
else{
t4=t2;
f_30641(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k30639 in k30635 in k30375 in k30372 in mm:make-on in k30217 in k26697 in k26694 in k26691 in k26688 in k26263 in k26260 in k26257 in k26254 in k26251 in k25668 in k25665 in k25142 in k25139 in k25136 in k25133 in k25130 in k25127 in k25124 in k25121 in k25118 in k25115 in k25112 in k25109 in k25106 in k25103 in k25100 in k25097 in k25094 in k25091 in k25088 in k25085 in k25082 in k24943 in k24940 in k24937 in k24934 in k24878 in k24875 in k24872 in k24869 in k24866 in k24863 in k24860 in k24857 in k23555 in k23486 in k23293 in k23290 in k23185 in k23134 in k11783 in k10718 in k10715 in k7274 in k7271 in k6978 in k6975 in k6971 in k6680 in k6677 in k6674 in k6671 */
static void C_ccall f_30641(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_30380(t7,t6);}

/* k30600 in k30375 in k30372 in mm:make-on in k30217 in k26697 in k26694 in k26691 in k26688 in k26263 in k26260 in k26257 in k26254 in k26251 in k25668 in k25665 in k25142 in k25139 in k25136 in k25133 in k25130 in k25127 in k25124 in k25121 in k25118 in k25115 in k25112 in k25109 in k25106 in k25103 in k25100 in k25097 in k25094 in k25091 in k25088 in k25085 in k25082 in k24943 in k24940 in k24937 in k24934 in k24878 in k24875 in k24872 in k24869 in k24866 in k24863 in k24860 in k24857 in k23555 in k23486 in k23293 in k23290 in k23185 in k23134 in k11783 in k10718 in k10715 in k7274 in k7271 in k6978 in k6975 in k6971 in k6680 in k6677 in k6674 in k6671 */
static void C_ccall f_30602(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_30602,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_30606,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("error");
t4=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[21],((C_word*)t0)[2]);}
else{
t4=t2;
f_30606(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k30604 in k30600 in k30375 in k30372 in mm:make-on in k30217 in k26697 in k26694 in k26691 in k26688 in k26263 in k26260 in k26257 in k26254 in k26251 in k25668 in k25665 in k25142 in k25139 in k25136 in k25133 in k25130 in k25127 in k25124 in k25121 in k25118 in k25115 in k25112 in k25109 in k25106 in k25103 in k25100 in k25097 in k25094 in k25091 in k25088 in k25085 in k25082 in k24943 in k24940 in k24937 in k24934 in k24878 in k24875 in k24872 in k24869 in k24866 in k24863 in k24860 in k24857 in k23555 in k23486 in k23293 in k23290 in k23185 in k23134 in k11783 in k10718 in k10715 in k7274 in k7271 in k6978 in k6975 in k6971 in k6680 in k6677 in k6674 in k6671 */
static void C_ccall f_30606(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_30380(t7,t6);}

/* k30378 in k30375 in k30372 in mm:make-on in k30217 in k26697 in k26694 in k26691 in k26688 in k26263 in k26260 in k26257 in k26254 in k26251 in k25668 in k25665 in k25142 in k25139 in k25136 in k25133 in k25130 in k25127 in k25124 in k25121 in k25118 in k25115 in k25112 in k25109 in k25106 in k25103 in k25100 in k25097 in k25094 in k25091 in k25088 in k25085 in k25082 in k24943 in k24940 in k24937 in k24934 in k24878 in k24875 in k24872 in k24869 in k24866 in k24863 in k24860 in k24857 in k23555 in k23486 in k23293 in k23290 in k23185 in k23134 in k11783 in k10718 in k10715 in k7274 in k7271 in k6978 in k6975 in k6971 in k6680 in k6677 in k6674 in k6671 */
static void C_fcall f_30380(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word ab[47],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_30380,NULL,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|8,a[1]=(C_word)f_30383,a[2]=((C_word*)t0)[7],a[3]=((C_word*)t0)[8],a[4]=((C_word*)t0)[9],a[5]=((C_word*)t0)[10],a[6]=((C_word*)t0)[11],a[7]=((C_word*)t0)[12],a[8]=((C_word*)t0)[13],tmp=(C_word)a,a+=9,tmp);
if(C_truep((C_word)C_i_nullp(((C_word*)((C_word*)t0)[8])[1]))){
t3=t2;
f_30383(t3,C_SCHEME_UNDEFINED);}
else{
t3=(C_word)C_i_car(((C_word*)((C_word*)t0)[8])[1]);
t4=(C_word)C_eqp(t3,lf[730]);
if(C_truep(t4)){
t5=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_30432,a[2]=((C_word*)t0)[7],a[3]=t2,a[4]=((C_word*)t0)[8],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],a[7]=((C_word*)t0)[12],tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)((C_word*)t0)[6])[1])){
C_trace("error");
t6=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t6))(4,t6,t5,lf[19],lf[730]);}
else{
t6=t5;
f_30432(2,t6,C_SCHEME_UNDEFINED);}}
else{
t5=(C_word)C_eqp(t3,lf[731]);
if(C_truep(t5)){
t6=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_30467,a[2]=((C_word*)t0)[7],a[3]=t2,a[4]=((C_word*)t0)[8],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[4],a[7]=((C_word*)t0)[10],tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)((C_word*)t0)[4])[1])){
C_trace("error");
t7=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t7))(4,t7,t6,lf[19],lf[731]);}
else{
t7=t6;
f_30467(2,t7,C_SCHEME_UNDEFINED);}}
else{
t6=(C_word)C_eqp(t3,lf[732]);
if(C_truep(t6)){
t7=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_30502,a[2]=((C_word*)t0)[7],a[3]=t2,a[4]=((C_word*)t0)[8],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[3],a[7]=((C_word*)t0)[9],tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)((C_word*)t0)[3])[1])){
C_trace("error");
t8=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t8))(4,t8,t7,lf[19],lf[732]);}
else{
t8=t7;
f_30502(2,t8,C_SCHEME_UNDEFINED);}}
else{
t7=(C_word)C_eqp(t3,lf[733]);
if(C_truep(t7)){
t8=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_30537,a[2]=((C_word*)t0)[7],a[3]=t2,a[4]=((C_word*)t0)[8],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[2],a[7]=((C_word*)t0)[11],tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)((C_word*)t0)[2])[1])){
C_trace("error");
t9=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t9))(4,t9,t8,lf[19],lf[733]);}
else{
t9=t8;
f_30537(2,t9,C_SCHEME_UNDEFINED);}}
else{
t8=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_30566,a[2]=t2,a[3]=((C_word*)t0)[2],a[4]=((C_word*)t0)[11],a[5]=((C_word*)t0)[8],tmp=(C_word)a,a+=6,tmp);
if(C_truep(((C_word*)((C_word*)t0)[5])[1])){
C_trace("error");
t9=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t9))(4,t9,t8,lf[10],((C_word*)t0)[7]);}
else{
t9=t8;
f_30566(2,t9,C_SCHEME_UNDEFINED);}}}}}}}

/* k30564 in k30378 in k30375 in k30372 in mm:make-on in k30217 in k26697 in k26694 in k26691 in k26688 in k26263 in k26260 in k26257 in k26254 in k26251 in k25668 in k25665 in k25142 in k25139 in k25136 in k25133 in k25130 in k25127 in k25124 in k25121 in k25118 in k25115 in k25112 in k25109 in k25106 in k25103 in k25100 in k25097 in k25094 in k25091 in k25088 in k25085 in k25082 in k24943 in k24940 in k24937 in k24934 in k24878 in k24875 in k24872 in k24869 in k24866 in k24863 in k24860 in k24857 in k23555 in k23486 in k23293 in k23290 in k23185 in k23134 in k11783 in k10718 in k10715 in k7274 in k7271 in k6978 in k6975 in k6971 in k6680 in k6677 in k6674 in k6671 */
static void C_ccall f_30566(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_30566,2,t0,t1);}
t2=(C_word)C_i_car(((C_word*)((C_word*)t0)[5])[1]);
t3=C_mutate(((C_word *)((C_word*)t0)[4])+1,t2);
t4=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_30573,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[5],a[4]=((C_word*)t0)[3],tmp=(C_word)a,a+=5,tmp);
t5=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_30581,a[2]=((C_word*)t0)[4],a[3]=t4,tmp=(C_word)a,a+=4,tmp);
C_trace("keyword?");
t6=C_retrieve(lf[13]);
((C_proc3)C_retrieve_proc(t6))(3,t6,t5,((C_word*)((C_word*)t0)[4])[1]);}

/* k30579 in k30564 in k30378 in k30375 in k30372 in mm:make-on in k30217 in k26697 in k26694 in k26691 in k26688 in k26263 in k26260 in k26257 in k26254 in k26251 in k25668 in k25665 in k25142 in k25139 in k25136 in k25133 in k25130 in k25127 in k25124 in k25121 in k25118 in k25115 in k25112 in k25109 in k25106 in k25103 in k25100 in k25097 in k25094 in k25091 in k25088 in k25085 in k25082 in k24943 in k24940 in k24937 in k24934 in k24878 in k24875 in k24872 in k24869 in k24866 in k24863 in k24860 in k24857 in k23555 in k23486 in k23293 in k23290 in k23185 in k23134 in k11783 in k10718 in k10715 in k7274 in k7271 in k6978 in k6975 in k6971 in k6680 in k6677 in k6674 in k6671 */
static void C_ccall f_30581(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
if(C_truep(t1)){
C_trace("error");
t2=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t2))(4,t2,((C_word*)t0)[3],lf[14],((C_word*)((C_word*)t0)[2])[1]);}
else{
t2=((C_word*)t0)[3];
f_30573(2,t2,C_SCHEME_UNDEFINED);}}

/* k30571 in k30564 in k30378 in k30375 in k30372 in mm:make-on in k30217 in k26697 in k26694 in k26691 in k26688 in k26263 in k26260 in k26257 in k26254 in k26251 in k25668 in k25665 in k25142 in k25139 in k25136 in k25133 in k25130 in k25127 in k25124 in k25121 in k25118 in k25115 in k25112 in k25109 in k25106 in k25103 in k25100 in k25097 in k25094 in k25091 in k25088 in k25085 in k25082 in k24943 in k24940 in k24937 in k24934 in k24878 in k24875 in k24872 in k24869 in k24866 in k24863 in k24860 in k24857 in k23555 in k23486 in k23293 in k23290 in k23185 in k23134 in k11783 in k10718 in k10715 in k7274 in k7271 in k6978 in k6975 in k6971 in k6680 in k6677 in k6674 in k6671 */
static void C_ccall f_30573(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word *a;
t2=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[3])[1]);
t4=C_mutate(((C_word *)((C_word*)t0)[3])+1,t3);
t5=((C_word*)t0)[2];
f_30383(t5,t4);}

/* k30535 in k30378 in k30375 in k30372 in mm:make-on in k30217 in k26697 in k26694 in k26691 in k26688 in k26263 in k26260 in k26257 in k26254 in k26251 in k25668 in k25665 in k25142 in k25139 in k25136 in k25133 in k25130 in k25127 in k25124 in k25121 in k25118 in k25115 in k25112 in k25109 in k25106 in k25103 in k25100 in k25097 in k25094 in k25091 in k25088 in k25085 in k25082 in k24943 in k24940 in k24937 in k24934 in k24878 in k24875 in k24872 in k24869 in k24866 in k24863 in k24860 in k24857 in k23555 in k23486 in k23293 in k23290 in k23185 in k23134 in k11783 in k10718 in k10715 in k7274 in k7271 in k6978 in k6975 in k6971 in k6680 in k6677 in k6674 in k6671 */
static void C_ccall f_30537(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_30537,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_30541,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("error");
t4=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[21],((C_word*)t0)[2]);}
else{
t4=t2;
f_30541(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k30539 in k30535 in k30378 in k30375 in k30372 in mm:make-on in k30217 in k26697 in k26694 in k26691 in k26688 in k26263 in k26260 in k26257 in k26254 in k26251 in k25668 in k25665 in k25142 in k25139 in k25136 in k25133 in k25130 in k25127 in k25124 in k25121 in k25118 in k25115 in k25112 in k25109 in k25106 in k25103 in k25100 in k25097 in k25094 in k25091 in k25088 in k25085 in k25082 in k24943 in k24940 in k24937 in k24934 in k24878 in k24875 in k24872 in k24869 in k24866 in k24863 in k24860 in k24857 in k23555 in k23486 in k23293 in k23290 in k23185 in k23134 in k11783 in k10718 in k10715 in k7274 in k7271 in k6978 in k6975 in k6971 in k6680 in k6677 in k6674 in k6671 */
static void C_ccall f_30541(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_30383(t7,t6);}

/* k30500 in k30378 in k30375 in k30372 in mm:make-on in k30217 in k26697 in k26694 in k26691 in k26688 in k26263 in k26260 in k26257 in k26254 in k26251 in k25668 in k25665 in k25142 in k25139 in k25136 in k25133 in k25130 in k25127 in k25124 in k25121 in k25118 in k25115 in k25112 in k25109 in k25106 in k25103 in k25100 in k25097 in k25094 in k25091 in k25088 in k25085 in k25082 in k24943 in k24940 in k24937 in k24934 in k24878 in k24875 in k24872 in k24869 in k24866 in k24863 in k24860 in k24857 in k23555 in k23486 in k23293 in k23290 in k23185 in k23134 in k11783 in k10718 in k10715 in k7274 in k7271 in k6978 in k6975 in k6971 in k6680 in k6677 in k6674 in k6671 */
static void C_ccall f_30502(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_30502,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_30506,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("error");
t4=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[21],((C_word*)t0)[2]);}
else{
t4=t2;
f_30506(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k30504 in k30500 in k30378 in k30375 in k30372 in mm:make-on in k30217 in k26697 in k26694 in k26691 in k26688 in k26263 in k26260 in k26257 in k26254 in k26251 in k25668 in k25665 in k25142 in k25139 in k25136 in k25133 in k25130 in k25127 in k25124 in k25121 in k25118 in k25115 in k25112 in k25109 in k25106 in k25103 in k25100 in k25097 in k25094 in k25091 in k25088 in k25085 in k25082 in k24943 in k24940 in k24937 in k24934 in k24878 in k24875 in k24872 in k24869 in k24866 in k24863 in k24860 in k24857 in k23555 in k23486 in k23293 in k23290 in k23185 in k23134 in k11783 in k10718 in k10715 in k7274 in k7271 in k6978 in k6975 in k6971 in k6680 in k6677 in k6674 in k6671 */
static void C_ccall f_30506(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_30383(t7,t6);}

/* k30465 in k30378 in k30375 in k30372 in mm:make-on in k30217 in k26697 in k26694 in k26691 in k26688 in k26263 in k26260 in k26257 in k26254 in k26251 in k25668 in k25665 in k25142 in k25139 in k25136 in k25133 in k25130 in k25127 in k25124 in k25121 in k25118 in k25115 in k25112 in k25109 in k25106 in k25103 in k25100 in k25097 in k25094 in k25091 in k25088 in k25085 in k25082 in k24943 in k24940 in k24937 in k24934 in k24878 in k24875 in k24872 in k24869 in k24866 in k24863 in k24860 in k24857 in k23555 in k23486 in k23293 in k23290 in k23185 in k23134 in k11783 in k10718 in k10715 in k7274 in k7271 in k6978 in k6975 in k6971 in k6680 in k6677 in k6674 in k6671 */
static void C_ccall f_30467(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_30467,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_30471,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("error");
t4=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[21],((C_word*)t0)[2]);}
else{
t4=t2;
f_30471(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k30469 in k30465 in k30378 in k30375 in k30372 in mm:make-on in k30217 in k26697 in k26694 in k26691 in k26688 in k26263 in k26260 in k26257 in k26254 in k26251 in k25668 in k25665 in k25142 in k25139 in k25136 in k25133 in k25130 in k25127 in k25124 in k25121 in k25118 in k25115 in k25112 in k25109 in k25106 in k25103 in k25100 in k25097 in k25094 in k25091 in k25088 in k25085 in k25082 in k24943 in k24940 in k24937 in k24934 in k24878 in k24875 in k24872 in k24869 in k24866 in k24863 in k24860 in k24857 in k23555 in k23486 in k23293 in k23290 in k23185 in k23134 in k11783 in k10718 in k10715 in k7274 in k7271 in k6978 in k6975 in k6971 in k6680 in k6677 in k6674 in k6671 */
static void C_ccall f_30471(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_30383(t7,t6);}

/* k30430 in k30378 in k30375 in k30372 in mm:make-on in k30217 in k26697 in k26694 in k26691 in k26688 in k26263 in k26260 in k26257 in k26254 in k26251 in k25668 in k25665 in k25142 in k25139 in k25136 in k25133 in k25130 in k25127 in k25124 in k25121 in k25118 in k25115 in k25112 in k25109 in k25106 in k25103 in k25100 in k25097 in k25094 in k25091 in k25088 in k25085 in k25082 in k24943 in k24940 in k24937 in k24934 in k24878 in k24875 in k24872 in k24869 in k24866 in k24863 in k24860 in k24857 in k23555 in k23486 in k23293 in k23290 in k23185 in k23134 in k11783 in k10718 in k10715 in k7274 in k7271 in k6978 in k6975 in k6971 in k6680 in k6677 in k6674 in k6671 */
static void C_ccall f_30432(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_30432,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_30436,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("error");
t4=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[21],((C_word*)t0)[2]);}
else{
t4=t2;
f_30436(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k30434 in k30430 in k30378 in k30375 in k30372 in mm:make-on in k30217 in k26697 in k26694 in k26691 in k26688 in k26263 in k26260 in k26257 in k26254 in k26251 in k25668 in k25665 in k25142 in k25139 in k25136 in k25133 in k25130 in k25127 in k25124 in k25121 in k25118 in k25115 in k25112 in k25109 in k25106 in k25103 in k25100 in k25097 in k25094 in k25091 in k25088 in k25085 in k25082 in k24943 in k24940 in k24937 in k24934 in k24878 in k24875 in k24872 in k24869 in k24866 in k24863 in k24860 in k24857 in k23555 in k23486 in k23293 in k23290 in k23185 in k23134 in k11783 in k10718 in k10715 in k7274 in k7271 in k6978 in k6975 in k6971 in k6680 in k6677 in k6674 in k6671 */
static void C_ccall f_30436(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_30383(t7,t6);}

/* k30381 in k30378 in k30375 in k30372 in mm:make-on in k30217 in k26697 in k26694 in k26691 in k26688 in k26263 in k26260 in k26257 in k26254 in k26251 in k25668 in k25665 in k25142 in k25139 in k25136 in k25133 in k25130 in k25127 in k25124 in k25121 in k25118 in k25115 in k25112 in k25109 in k25106 in k25103 in k25100 in k25097 in k25094 in k25091 in k25088 in k25085 in k25082 in k24943 in k24940 in k24937 in k24934 in k24878 in k24875 in k24872 in k24869 in k24866 in k24863 in k24860 in k24857 in k23555 in k23486 in k23293 in k23290 in k23185 in k23134 in k11783 in k10718 in k10715 in k7274 in k7271 in k6978 in k6975 in k6971 in k6680 in k6677 in k6674 in k6671 */
static void C_fcall f_30383(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_30383,NULL,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_30386,a[2]=((C_word*)t0)[4],a[3]=((C_word*)t0)[5],a[4]=((C_word*)t0)[6],a[5]=((C_word*)t0)[7],a[6]=((C_word*)t0)[8],tmp=(C_word)a,a+=7,tmp);
if(C_truep((C_word)C_i_nullp(((C_word*)((C_word*)t0)[3])[1]))){
t3=t2;
f_30386(2,t3,C_SCHEME_UNDEFINED);}
else{
C_trace("error");
t3=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t3))(4,t3,t2,lf[5],((C_word*)t0)[2]);}}

/* k30384 in k30381 in k30378 in k30375 in k30372 in mm:make-on in k30217 in k26697 in k26694 in k26691 in k26688 in k26263 in k26260 in k26257 in k26254 in k26251 in k25668 in k25665 in k25142 in k25139 in k25136 in k25133 in k25130 in k25127 in k25124 in k25121 in k25118 in k25115 in k25112 in k25109 in k25106 in k25103 in k25100 in k25097 in k25094 in k25091 in k25088 in k25085 in k25082 in k24943 in k24940 in k24937 in k24934 in k24878 in k24875 in k24872 in k24869 in k24866 in k24863 in k24860 in k24857 in k23555 in k23486 in k23293 in k23290 in k23185 in k23134 in k11783 in k10718 in k10715 in k7274 in k7271 in k6978 in k6975 in k6971 in k6680 in k6677 in k6674 in k6671 */
static void C_ccall f_30386(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word ab[3],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_30386,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_30390,a[2]=((C_word)li474),tmp=(C_word)a,a+=3,tmp);
((C_proc7)(void*)(*((C_word*)t2+1)))(7,t2,((C_word*)t0)[6],C_retrieve(lf[723]),((C_word*)((C_word*)t0)[5])[1],((C_word*)((C_word*)t0)[4])[1],((C_word*)((C_word*)t0)[3])[1],((C_word*)((C_word*)t0)[2])[1]);}

/* f_30390 in k30384 in k30381 in k30378 in k30375 in k30372 in mm:make-on in k30217 in k26697 in k26694 in k26691 in k26688 in k26263 in k26260 in k26257 in k26254 in k26251 in k25668 in k25665 in k25142 in k25139 in k25136 in k25133 in k25130 in k25127 in k25124 in k25121 in k25118 in k25115 in k25112 in k25109 in k25106 in k25103 in k25100 in k25097 in k25094 in k25091 in k25088 in k25085 in k25082 in k24943 in k24940 in k24937 in k24934 in k24878 in k24875 in k24872 in k24869 in k24866 in k24863 in k24860 in k24857 in k23555 in k23486 in k23293 in k23290 in k23185 in k23134 in k11783 in k10718 in k10715 in k7274 in k7271 in k6978 in k6975 in k6971 in k6680 in k6677 in k6674 in k6671 */
static void C_ccall f_30390(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4,C_word t5,C_word t6){
C_word tmp;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word ab[5],*a=ab;
if(c!=7) C_bad_argc_2(c,7,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr7,(void*)f_30390,7,t0,t1,t2,t3,t4,t5,t6);}
t7=(C_word)C_a_i_bytevector(&a,1,C_fix(3));
t8=(C_word)C_i_foreign_fixnum_argumentp(t2);
t9=(C_word)C_i_foreign_flonum_argumentp(t3);
t10=(C_word)C_i_foreign_fixnum_argumentp(t4);
t11=(C_word)C_i_foreign_fixnum_argumentp(t5);
t12=(C_word)C_i_foreign_fixnum_argumentp(t6);
t13=t1;
((C_proc2)(void*)(*((C_word*)t13+1)))(2,t13,(C_word)stub5139(t7,t8,t9,t10,t11,t12));}

/* parse-iteration in k26697 in k26694 in k26691 in k26688 in k26263 in k26260 in k26257 in k26254 in k26251 in k25668 in k25665 in k25142 in k25139 in k25136 in k25133 in k25130 in k25127 in k25124 in k25121 in k25118 in k25115 in k25112 in k25109 in k25106 in k25103 in k25100 in k25097 in k25094 in k25091 in k25088 in k25085 in k25082 in k24943 in k24940 in k24937 in k24934 in k24878 in k24875 in k24872 in k24869 in k24866 in k24863 in k24860 in k24857 in k23555 in k23486 in k23293 in k23290 in k23185 in k23134 in k11783 in k10718 in k10715 in k7274 in k7271 in k6978 in k6975 in k6971 in k6680 in k6677 in k6674 in k6671 */
static void C_fcall f_30025(C_word t1,C_word t2,C_word t3,C_word t4){
C_word tmp;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word ab[11],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_30025,NULL,4,t1,t2,t3,t4);}
t5=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_30033,a[2]=t2,a[3]=t1,tmp=(C_word)a,a+=4,tmp);
t6=t3;
t7=(*a=C_VECTOR_TYPE|1,a[1]=t6,tmp=(C_word)a,a+=2,tmp);
t8=(C_word)C_i_nullp(((C_word*)t7)[1]);
t9=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_29865,a[2]=t4,a[3]=t7,a[4]=t5,tmp=(C_word)a,a+=5,tmp);
if(C_truep(t8)){
t10=t9;
f_29865(t10,t8);}
else{
t10=(C_word)C_i_car(((C_word*)t7)[1]);
t11=(C_word)C_i_symbolp(t10);
t12=t9;
f_29865(t12,(C_word)C_i_not(t11));}}

/* k29863 in parse-iteration in k26697 in k26694 in k26691 in k26688 in k26263 in k26260 in k26257 in k26254 in k26251 in k25668 in k25665 in k25142 in k25139 in k25136 in k25133 in k25130 in k25127 in k25124 in k25121 in k25118 in k25115 in k25112 in k25109 in k25106 in k25103 in k25100 in k25097 in k25094 in k25091 in k25088 in k25085 in k25082 in k24943 in k24940 in k24937 in k24934 in k24878 in k24875 in k24872 in k24869 in k24866 in k24863 in k24860 in k24857 in k23555 in k23486 in k23293 in k23290 in k23185 in k23134 in k11783 in k10718 in k10715 in k7274 in k7271 in k6978 in k6975 in k6971 in k6680 in k6677 in k6674 in k6671 */
static void C_fcall f_29865(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word ab[37],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_29865,NULL,2,t0,t1);}
if(C_truep(t1)){
t2=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_29872,a[2]=((C_word*)t0)[4],tmp=(C_word)a,a+=3,tmp);
C_trace("ChickenBridge.scm: 381  make-loop-clause");
f_26809(t2,(C_word)C_a_i_list(&a,4,lf[542],lf[712],lf[547],((C_word*)((C_word*)t0)[3])[1]));}
else{
t2=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_29873,a[2]=((C_word)li469),tmp=(C_word)a,a+=3,tmp);
t3=((C_word*)((C_word*)t0)[3])[1];
t4=(*a=C_VECTOR_TYPE|1,a[1]=t3,tmp=(C_word)a,a+=2,tmp);
t5=C_SCHEME_END_OF_LIST;
t6=(*a=C_VECTOR_TYPE|1,a[1]=t5,tmp=(C_word)a,a+=2,tmp);
t7=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_29898,a[2]=t6,a[3]=((C_word*)t0)[4],tmp=(C_word)a,a+=4,tmp);
t8=C_SCHEME_UNDEFINED;
t9=(*a=C_VECTOR_TYPE|1,a[1]=t8,tmp=(C_word)a,a+=2,tmp);
t10=C_set_block_item(t9,0,(*a=C_CLOSURE_TYPE|8,a[1]=(C_word)f_29900,a[2]=t2,a[3]=((C_word*)t0)[2],a[4]=t9,a[5]=t6,a[6]=t4,a[7]=((C_word*)t0)[3],a[8]=((C_word)li472),tmp=(C_word)a,a+=9,tmp));
t11=((C_word*)t9)[1];
f_29900(t11,t7,C_SCHEME_FALSE,C_SCHEME_FALSE,C_SCHEME_END_OF_LIST,C_SCHEME_END_OF_LIST);}}

/* do4937 in k29863 in parse-iteration in k26697 in k26694 in k26691 in k26688 in k26263 in k26260 in k26257 in k26254 in k26251 in k25668 in k25665 in k25142 in k25139 in k25136 in k25133 in k25130 in k25127 in k25124 in k25121 in k25118 in k25115 in k25112 in k25109 in k25106 in k25103 in k25100 in k25097 in k25094 in k25091 in k25088 in k25085 in k25082 in k24943 in k24940 in k24937 in k24934 in k24878 in k24875 in k24872 in k24869 in k24866 in k24863 in k24860 in k24857 in k23555 in k23486 in k23293 in k23290 in k23185 in k23134 in k11783 in k10718 in k10715 in k7274 in k7271 in k6978 in k6975 in k6971 in k6680 in k6677 in k6674 in k6671 */
static void C_fcall f_29900(C_word t0,C_word t1,C_word t2,C_word t3,C_word t4,C_word t5){
C_word tmp;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word t14;
C_word t15;
C_word t16;
C_word ab[21],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_29900,NULL,6,t0,t1,t2,t3,t4,t5);}
t6=(*a=C_VECTOR_TYPE|1,a[1]=t2,tmp=(C_word)a,a+=2,tmp);
t7=(*a=C_VECTOR_TYPE|1,a[1]=t3,tmp=(C_word)a,a+=2,tmp);
t8=(*a=C_VECTOR_TYPE|1,a[1]=t4,tmp=(C_word)a,a+=2,tmp);
t9=(*a=C_VECTOR_TYPE|1,a[1]=t5,tmp=(C_word)a,a+=2,tmp);
if(C_truep((C_word)C_i_nullp(((C_word*)((C_word*)t0)[7])[1]))){
t10=t1;
((C_proc2)(void*)(*((C_word*)t10+1)))(2,t10,C_SCHEME_UNDEFINED);}
else{
t10=(*a=C_CLOSURE_TYPE|12,a[1]=(C_word)f_29910,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=t9,a[5]=t7,a[6]=t1,a[7]=((C_word*)t0)[4],a[8]=((C_word*)t0)[5],a[9]=t8,a[10]=((C_word*)t0)[7],a[11]=((C_word*)t0)[6],a[12]=t6,tmp=(C_word)a,a+=13,tmp);
t11=(C_word)C_i_car(((C_word*)((C_word*)t0)[7])[1]);
t12=(C_word)C_eqp(t11,lf[456]);
if(C_truep(t12)){
t13=(C_word)C_i_car(((C_word*)((C_word*)t0)[7])[1]);
t14=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[7])[1]);
t15=C_mutate(((C_word *)((C_word*)t0)[7])+1,t14);
t16=t10;
f_29910(t16,t13);}
else{
t13=t10;
f_29910(t13,C_SCHEME_UNDEFINED);}}}

/* k29908 in do4937 in k29863 in parse-iteration in k26697 in k26694 in k26691 in k26688 in k26263 in k26260 in k26257 in k26254 in k26251 in k25668 in k25665 in k25142 in k25139 in k25136 in k25133 in k25130 in k25127 in k25124 in k25121 in k25118 in k25115 in k25112 in k25109 in k25106 in k25103 in k25100 in k25097 in k25094 in k25091 in k25088 in k25085 in k25082 in k24943 in k24940 in k24937 in k24934 in k24878 in k24875 in k24872 in k24869 in k24866 in k24863 in k24860 in k24857 in k23555 in k23486 in k23293 in k23290 in k23185 in k23134 in k11783 in k10718 in k10715 in k7274 in k7271 in k6978 in k6975 in k6971 in k6680 in k6677 in k6674 in k6671 */
static void C_fcall f_29910(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[13],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_29910,NULL,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|12,a[1]=(C_word)f_29914,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],a[7]=((C_word*)t0)[7],a[8]=((C_word*)t0)[8],a[9]=((C_word*)t0)[9],a[10]=((C_word*)t0)[10],a[11]=((C_word*)t0)[11],a[12]=((C_word*)t0)[12],tmp=(C_word)a,a+=13,tmp);
t3=(C_word)C_i_car(((C_word*)((C_word*)t0)[10])[1]);
C_trace("ChickenBridge.scm: 381  loop-op?");
f_27031(t2,t3,((C_word*)t0)[3]);}

/* k29912 in k29908 in do4937 in k29863 in parse-iteration in k26697 in k26694 in k26691 in k26688 in k26263 in k26260 in k26257 in k26254 in k26251 in k25668 in k25665 in k25142 in k25139 in k25136 in k25133 in k25130 in k25127 in k25124 in k25121 in k25118 in k25115 in k25112 in k25109 in k25106 in k25103 in k25100 in k25097 in k25094 in k25091 in k25088 in k25085 in k25082 in k24943 in k24940 in k24937 in k24934 in k24878 in k24875 in k24872 in k24869 in k24866 in k24863 in k24860 in k24857 in k23555 in k23486 in k23293 in k23290 in k23185 in k23134 in k11783 in k10718 in k10715 in k7274 in k7271 in k6978 in k6975 in k6971 in k6680 in k6677 in k6674 in k6671 */
static void C_ccall f_29914(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[22],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_29914,2,t0,t1);}
t2=C_mutate(((C_word *)((C_word*)t0)[12])+1,t1);
t3=(*a=C_CLOSURE_TYPE|12,a[1]=(C_word)f_29917,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[12],a[7]=((C_word*)t0)[6],a[8]=((C_word*)t0)[7],a[9]=((C_word*)t0)[8],a[10]=((C_word*)t0)[9],a[11]=((C_word*)t0)[10],a[12]=((C_word*)t0)[11],tmp=(C_word)a,a+=13,tmp);
t4=((C_word*)((C_word*)t0)[12])[1];
if(C_truep(t4)){
t5=t3;
f_29917(2,t5,C_SCHEME_UNDEFINED);}
else{
t5=(C_word)C_i_car(((C_word*)((C_word*)t0)[10])[1]);
C_trace("ChickenBridge.scm: 381  loop-error");
f_27049(t3,((C_word*)t0)[3],((C_word*)((C_word*)t0)[11])[1],(C_word)C_a_i_list(&a,3,lf[717],t5,lf[718]));}}

/* k29915 in k29912 in k29908 in do4937 in k29863 in parse-iteration in k26697 in k26694 in k26691 in k26688 in k26263 in k26260 in k26257 in k26254 in k26251 in k25668 in k25665 in k25142 in k25139 in k25136 in k25133 in k25130 in k25127 in k25124 in k25121 in k25118 in k25115 in k25112 in k25109 in k25106 in k25103 in k25100 in k25097 in k25094 in k25091 in k25088 in k25085 in k25082 in k24943 in k24940 in k24937 in k24934 in k24878 in k24875 in k24872 in k24869 in k24866 in k24863 in k24860 in k24857 in k23555 in k23486 in k23293 in k23290 in k23185 in k23134 in k11783 in k10718 in k10715 in k7274 in k7271 in k6978 in k6975 in k6971 in k6680 in k6677 in k6674 in k6671 */
static void C_ccall f_29917(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[25],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_29917,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|12,a[1]=(C_word)f_29920,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],a[7]=((C_word*)t0)[7],a[8]=((C_word*)t0)[8],a[9]=((C_word*)t0)[9],a[10]=((C_word*)t0)[10],a[11]=((C_word*)t0)[11],a[12]=((C_word*)t0)[12],tmp=(C_word)a,a+=13,tmp);
t3=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_29969,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[9],a[4]=((C_word*)t0)[11],a[5]=((C_word*)t0)[6],a[6]=((C_word)li470),tmp=(C_word)a,a+=7,tmp);
t4=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_29978,a[2]=((C_word*)t0)[10],a[3]=((C_word*)t0)[5],a[4]=((C_word)li471),tmp=(C_word)a,a+=5,tmp);
C_trace("ChickenBridge.scm: 381  call-with-values");
C_call_with_values(4,0,t2,t3,t4);}

/* a29977 in k29915 in k29912 in k29908 in do4937 in k29863 in parse-iteration in k26697 in k26694 in k26691 in k26688 in k26263 in k26260 in k26257 in k26254 in k26251 in k25668 in k25665 in k25142 in k25139 in k25136 in k25133 in k25130 in k25127 in k25124 in k25121 in k25118 in k25115 in k25112 in k25109 in k25106 in k25103 in k25100 in k25097 in k25094 in k25091 in k25088 in k25085 in k25082 in k24943 in k24940 in k24937 in k24934 in k24878 in k24875 in k24872 in k24869 in k24866 in k24863 in k24860 in k24857 in k23555 in k23486 in k23293 in k23290 in k23185 in k23134 in k11783 in k10718 in k10715 in k7274 in k7271 in k6978 in k6975 in k6971 in k6680 in k6677 in k6674 in k6671 */
static void C_ccall f_29978(C_word c,C_word t0,C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word t6;
C_word *a;
if(c!=4) C_bad_argc_2(c,4,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr4,(void*)f_29978,4,t0,t1,t2,t3);}
t4=C_mutate(((C_word *)((C_word*)t0)[3])+1,t2);
t5=C_mutate(((C_word *)((C_word*)t0)[2])+1,t3);
t6=t1;
((C_proc2)(void*)(*((C_word*)t6+1)))(2,t6,t5);}

/* a29968 in k29915 in k29912 in k29908 in do4937 in k29863 in parse-iteration in k26697 in k26694 in k26691 in k26688 in k26263 in k26260 in k26257 in k26254 in k26251 in k25668 in k25665 in k25142 in k25139 in k25136 in k25133 in k25130 in k25127 in k25124 in k25121 in k25118 in k25115 in k25112 in k25109 in k25106 in k25103 in k25100 in k25097 in k25094 in k25091 in k25088 in k25085 in k25082 in k24943 in k24940 in k24937 in k24934 in k24878 in k24875 in k24872 in k24869 in k24866 in k24863 in k24860 in k24857 in k23555 in k23486 in k23293 in k23290 in k23185 in k23134 in k11783 in k10718 in k10715 in k7274 in k7271 in k6978 in k6975 in k6971 in k6680 in k6677 in k6674 in k6671 */
static void C_ccall f_29969(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word *a;
if(c!=2) C_bad_argc_2(c,2,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_29969,2,t0,t1);}
t2=(C_word)C_i_cadr(((C_word*)((C_word*)t0)[5])[1]);
t3=t2;
((C_proc5)C_retrieve_proc(t3))(5,t3,t1,((C_word*)((C_word*)t0)[4])[1],((C_word*)((C_word*)t0)[3])[1],((C_word*)t0)[2]);}

/* k29918 in k29915 in k29912 in k29908 in do4937 in k29863 in parse-iteration in k26697 in k26694 in k26691 in k26688 in k26263 in k26260 in k26257 in k26254 in k26251 in k25668 in k25665 in k25142 in k25139 in k25136 in k25133 in k25130 in k25127 in k25124 in k25121 in k25118 in k25115 in k25112 in k25109 in k25106 in k25103 in k25100 in k25097 in k25094 in k25091 in k25088 in k25085 in k25082 in k24943 in k24940 in k24937 in k24934 in k24878 in k24875 in k24872 in k24869 in k24866 in k24863 in k24860 in k24857 in k23555 in k23486 in k23293 in k23290 in k23185 in k23134 in k11783 in k10718 in k10715 in k7274 in k7271 in k6978 in k6975 in k6971 in k6680 in k6677 in k6674 in k6671 */
static void C_ccall f_29920(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[19],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_29920,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|10,a[1]=(C_word)f_29923,a[2]=((C_word*)t0)[4],a[3]=((C_word*)t0)[5],a[4]=((C_word*)t0)[6],a[5]=((C_word*)t0)[7],a[6]=((C_word*)t0)[8],a[7]=((C_word*)t0)[9],a[8]=((C_word*)t0)[10],a[9]=((C_word*)t0)[11],a[10]=((C_word*)t0)[12],tmp=(C_word)a,a+=11,tmp);
t3=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_29939,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[12],a[4]=((C_word*)t0)[3],a[5]=t2,a[6]=((C_word*)t0)[6],a[7]=((C_word*)t0)[4],tmp=(C_word)a,a+=8,tmp);
C_trace("ChickenBridge.scm: 381  op-type?");
f_29873(t3,((C_word*)((C_word*)t0)[6])[1],lf[703]);}

/* k29937 in k29918 in k29915 in k29912 in k29908 in do4937 in k29863 in parse-iteration in k26697 in k26694 in k26691 in k26688 in k26263 in k26260 in k26257 in k26254 in k26251 in k25668 in k25665 in k25142 in k25139 in k25136 in k25133 in k25130 in k25127 in k25124 in k25121 in k25118 in k25115 in k25112 in k25109 in k25106 in k25103 in k25100 in k25097 in k25094 in k25091 in k25088 in k25085 in k25082 in k24943 in k24940 in k24937 in k24934 in k24878 in k24875 in k24872 in k24869 in k24866 in k24863 in k24860 in k24857 in k23555 in k23486 in k23293 in k23290 in k23185 in k23134 in k11783 in k10718 in k10715 in k7274 in k7271 in k6978 in k6975 in k6971 in k6680 in k6677 in k6674 in k6671 */
static void C_ccall f_29939(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_29939,2,t0,t1);}
if(C_truep(t1)){
t2=C_mutate(((C_word *)((C_word*)t0)[7])+1,((C_word*)((C_word*)t0)[6])[1]);
t3=((C_word*)t0)[5];
f_29923(2,t3,t2);}
else{
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_29946,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[6],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
C_trace("ChickenBridge.scm: 381  op-type?");
f_29873(t2,((C_word*)((C_word*)t0)[6])[1],lf[716]);}}

/* k29944 in k29937 in k29918 in k29915 in k29912 in k29908 in do4937 in k29863 in parse-iteration in k26697 in k26694 in k26691 in k26688 in k26263 in k26260 in k26257 in k26254 in k26251 in k25668 in k25665 in k25142 in k25139 in k25136 in k25133 in k25130 in k25127 in k25124 in k25121 in k25118 in k25115 in k25112 in k25109 in k25106 in k25103 in k25100 in k25097 in k25094 in k25091 in k25088 in k25085 in k25082 in k24943 in k24940 in k24937 in k24934 in k24878 in k24875 in k24872 in k24869 in k24866 in k24863 in k24860 in k24857 in k23555 in k23486 in k23293 in k23290 in k23185 in k23134 in k11783 in k10718 in k10715 in k7274 in k7271 in k6978 in k6975 in k6971 in k6680 in k6677 in k6674 in k6671 */
static void C_ccall f_29946(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[15],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_29946,2,t0,t1);}
if(C_truep(t1)){
if(C_truep((C_word)C_i_nullp(((C_word*)((C_word*)t0)[6])[1]))){
t2=((C_word*)t0)[5];
f_29923(2,t2,C_SCHEME_UNDEFINED);}
else{
t2=(C_word)C_i_car(((C_word*)((C_word*)t0)[4])[1]);
t3=(C_word)C_i_car(((C_word*)((C_word*)t0)[6])[1]);
C_trace("ChickenBridge.scm: 381  loop-error");
f_27049(((C_word*)t0)[5],((C_word*)t0)[3],((C_word*)((C_word*)t0)[2])[1],(C_word)C_a_i_list(&a,5,lf[713],t2,lf[714],t3,lf[715]));}}
else{
t2=((C_word*)t0)[5];
f_29923(2,t2,C_SCHEME_UNDEFINED);}}

/* k29921 in k29918 in k29915 in k29912 in k29908 in do4937 in k29863 in parse-iteration in k26697 in k26694 in k26691 in k26688 in k26263 in k26260 in k26257 in k26254 in k26251 in k25668 in k25665 in k25142 in k25139 in k25136 in k25133 in k25130 in k25127 in k25124 in k25121 in k25118 in k25115 in k25112 in k25109 in k25106 in k25103 in k25100 in k25097 in k25094 in k25091 in k25088 in k25085 in k25082 in k24943 in k24940 in k24937 in k24934 in k24878 in k24875 in k24872 in k24869 in k24866 in k24863 in k24860 in k24857 in k23555 in k23486 in k23293 in k23290 in k23185 in k23134 in k11783 in k10718 in k10715 in k7274 in k7271 in k6978 in k6975 in k6971 in k6680 in k6677 in k6674 in k6671 */
static void C_ccall f_29923(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[12],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_29923,2,t0,t1);}
t2=C_mutate(((C_word *)((C_word*)t0)[10])+1,((C_word*)((C_word*)t0)[9])[1]);
t3=C_mutate(((C_word *)((C_word*)t0)[9])+1,((C_word*)((C_word*)t0)[8])[1]);
t4=(*a=C_CLOSURE_TYPE|8,a[1]=(C_word)f_29929,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[8],a[4]=((C_word*)t0)[3],a[5]=((C_word*)t0)[4],a[6]=((C_word*)t0)[5],a[7]=((C_word*)t0)[6],a[8]=((C_word*)t0)[7],tmp=(C_word)a,a+=9,tmp);
t5=(C_word)C_a_i_list(&a,1,((C_word*)((C_word*)t0)[3])[1]);
C_trace("ChickenBridge.scm: 381  append");
t6=*((C_word*)lf[18]+1);
((C_proc4)C_retrieve_proc(t6))(4,t6,t4,((C_word*)((C_word*)t0)[7])[1],t5);}

/* k29927 in k29921 in k29918 in k29915 in k29912 in k29908 in do4937 in k29863 in parse-iteration in k26697 in k26694 in k26691 in k26688 in k26263 in k26260 in k26257 in k26254 in k26251 in k25668 in k25665 in k25142 in k25139 in k25136 in k25133 in k25130 in k25127 in k25124 in k25121 in k25118 in k25115 in k25112 in k25109 in k25106 in k25103 in k25100 in k25097 in k25094 in k25091 in k25088 in k25085 in k25082 in k24943 in k24940 in k24937 in k24934 in k24878 in k24875 in k24872 in k24869 in k24866 in k24863 in k24860 in k24857 in k23555 in k23486 in k23293 in k23290 in k23185 in k23134 in k11783 in k10718 in k10715 in k7274 in k7271 in k6978 in k6975 in k6971 in k6680 in k6677 in k6674 in k6671 */
static void C_ccall f_29929(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[8])+1,t1);
t3=((C_word*)((C_word*)t0)[7])[1];
f_29900(t3,((C_word*)t0)[6],((C_word*)((C_word*)t0)[5])[1],((C_word*)((C_word*)t0)[4])[1],((C_word*)((C_word*)t0)[3])[1],((C_word*)((C_word*)t0)[2])[1]);}

/* k29896 in k29863 in parse-iteration in k26697 in k26694 in k26691 in k26688 in k26263 in k26260 in k26257 in k26254 in k26251 in k25668 in k25665 in k25142 in k25139 in k25136 in k25133 in k25130 in k25127 in k25124 in k25121 in k25118 in k25115 in k25112 in k25109 in k25106 in k25103 in k25100 in k25097 in k25094 in k25091 in k25088 in k25085 in k25082 in k24943 in k24940 in k24937 in k24934 in k24878 in k24875 in k24872 in k24869 in k24866 in k24863 in k24860 in k24857 in k23555 in k23486 in k23293 in k23290 in k23185 in k23134 in k11783 in k10718 in k10715 in k7274 in k7271 in k6978 in k6975 in k6971 in k6680 in k6677 in k6674 in k6671 */
static void C_ccall f_29898(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
t2=((C_word*)t0)[3];
f_30033(t2,((C_word*)((C_word*)t0)[2])[1]);}

/* op-type? in k29863 in parse-iteration in k26697 in k26694 in k26691 in k26688 in k26263 in k26260 in k26257 in k26254 in k26251 in k25668 in k25665 in k25142 in k25139 in k25136 in k25133 in k25130 in k25127 in k25124 in k25121 in k25118 in k25115 in k25112 in k25109 in k25106 in k25103 in k25100 in k25097 in k25094 in k25091 in k25088 in k25085 in k25082 in k24943 in k24940 in k24937 in k24934 in k24878 in k24875 in k24872 in k24869 in k24866 in k24863 in k24860 in k24857 in k23555 in k23486 in k23293 in k23290 in k23185 in k23134 in k11783 in k10718 in k10715 in k7274 in k7271 in k6978 in k6975 in k6971 in k6680 in k6677 in k6674 in k6671 */
static void C_fcall f_29873(C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word t6;
C_word *a;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_29873,NULL,3,t1,t2,t3);}
t4=(C_word)C_i_cddr(t2);
if(C_truep((C_word)C_i_nullp(t4))){
t5=t1;
((C_proc2)(void*)(*((C_word*)t5+1)))(2,t5,C_SCHEME_FALSE);}
else{
t5=(C_word)C_i_caddr(t2);
t6=t1;
((C_proc2)(void*)(*((C_word*)t6+1)))(2,t6,(C_word)C_eqp(t5,t3));}}

/* k29870 in k29863 in parse-iteration in k26697 in k26694 in k26691 in k26688 in k26263 in k26260 in k26257 in k26254 in k26251 in k25668 in k25665 in k25142 in k25139 in k25136 in k25133 in k25130 in k25127 in k25124 in k25121 in k25118 in k25115 in k25112 in k25109 in k25106 in k25103 in k25100 in k25097 in k25094 in k25091 in k25088 in k25085 in k25082 in k24943 in k24940 in k24937 in k24934 in k24878 in k24875 in k24872 in k24869 in k24866 in k24863 in k24860 in k24857 in k23555 in k23486 in k23293 in k23290 in k23185 in k23134 in k11783 in k10718 in k10715 in k7274 in k7271 in k6978 in k6975 in k6971 in k6680 in k6677 in k6674 in k6671 */
static void C_ccall f_29872(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word ab[3],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_29872,2,t0,t1);}
t2=((C_word*)t0)[2];
f_30033(t2,(C_word)C_a_i_list(&a,1,t1));}

/* k30031 in parse-iteration in k26697 in k26694 in k26691 in k26688 in k26263 in k26260 in k26257 in k26254 in k26251 in k25668 in k25665 in k25142 in k25139 in k25136 in k25133 in k25130 in k25127 in k25124 in k25121 in k25118 in k25115 in k25112 in k25109 in k25106 in k25103 in k25100 in k25097 in k25094 in k25091 in k25088 in k25085 in k25082 in k24943 in k24940 in k24937 in k24934 in k24878 in k24875 in k24872 in k24869 in k24866 in k24863 in k24860 in k24857 in k23555 in k23486 in k23293 in k23290 in k23185 in k23134 in k11783 in k10718 in k10715 in k7274 in k7271 in k6978 in k6975 in k6971 in k6680 in k6677 in k6674 in k6671 */
static void C_fcall f_30033(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 381  gather-clauses");
f_26960(((C_word*)t0)[3],((C_word*)t0)[2],t1);}

/* parse-conditional in k26697 in k26694 in k26691 in k26688 in k26263 in k26260 in k26257 in k26254 in k26251 in k25668 in k25665 in k25142 in k25139 in k25136 in k25133 in k25130 in k25127 in k25124 in k25121 in k25118 in k25115 in k25112 in k25109 in k25106 in k25103 in k25100 in k25097 in k25094 in k25091 in k25088 in k25085 in k25082 in k24943 in k24940 in k24937 in k24934 in k24878 in k24875 in k24872 in k24869 in k24866 in k24863 in k24860 in k24857 in k23555 in k23486 in k23293 in k23290 in k23185 in k23134 in k11783 in k10718 in k10715 in k7274 in k7271 in k6978 in k6975 in k6971 in k6680 in k6677 in k6674 in k6671 */
static void C_ccall f_29611(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4){
C_word tmp;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word t14;
C_word t15;
C_word t16;
C_word t17;
C_word t18;
C_word t19;
C_word ab[34],*a=ab;
if(c!=5) C_bad_argc_2(c,5,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr5,(void*)f_29611,5,t0,t1,t2,t3,t4);}
t5=(*a=C_VECTOR_TYPE|1,a[1]=t2,tmp=(C_word)a,a+=2,tmp);
t6=(C_word)C_a_i_cons(&a,2,lf[706],t4);
t7=((C_word*)t5)[1];
t8=(C_word)C_i_car(((C_word*)t5)[1]);
t9=C_SCHEME_END_OF_LIST;
t10=(*a=C_VECTOR_TYPE|1,a[1]=t9,tmp=(C_word)a,a+=2,tmp);
t11=C_SCHEME_END_OF_LIST;
t12=(*a=C_VECTOR_TYPE|1,a[1]=t11,tmp=(C_word)a,a+=2,tmp);
t13=C_SCHEME_END_OF_LIST;
t14=(*a=C_VECTOR_TYPE|1,a[1]=t13,tmp=(C_word)a,a+=2,tmp);
t15=C_SCHEME_END_OF_LIST;
t16=(*a=C_VECTOR_TYPE|1,a[1]=t15,tmp=(C_word)a,a+=2,tmp);
t17=(*a=C_CLOSURE_TYPE|11,a[1]=(C_word)f_29633,a[2]=t8,a[3]=t7,a[4]=t3,a[5]=t6,a[6]=t16,a[7]=t14,a[8]=t1,a[9]=t10,a[10]=t12,a[11]=t5,tmp=(C_word)a,a+=12,tmp);
t18=(C_word)C_i_cdr(((C_word*)t5)[1]);
if(C_truep((C_word)C_i_nullp(t18))){
C_trace("ChickenBridge.scm: 381  loop-error");
f_27049(t17,t6,t7,(C_word)C_a_i_list(&a,3,lf[709],t8,lf[710]));}
else{
t19=t17;
f_29633(2,t19,C_SCHEME_UNDEFINED);}}

/* k29631 in parse-conditional in k26697 in k26694 in k26691 in k26688 in k26263 in k26260 in k26257 in k26254 in k26251 in k25668 in k25665 in k25142 in k25139 in k25136 in k25133 in k25130 in k25127 in k25124 in k25121 in k25118 in k25115 in k25112 in k25109 in k25106 in k25103 in k25100 in k25097 in k25094 in k25091 in k25088 in k25085 in k25082 in k24943 in k24940 in k24937 in k24934 in k24878 in k24875 in k24872 in k24869 in k24866 in k24863 in k24860 in k24857 in k23555 in k23486 in k23293 in k23290 in k23185 in k23134 in k11783 in k10718 in k10715 in k7274 in k7271 in k6978 in k6975 in k6971 in k6680 in k6677 in k6674 in k6671 */
static void C_ccall f_29633(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word ab[15],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_29633,2,t0,t1);}
t2=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[11])[1]);
t3=C_mutate(((C_word *)((C_word*)t0)[11])+1,t2);
t4=(C_word)C_i_car(((C_word*)((C_word*)t0)[11])[1]);
t5=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[11])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[11])+1,t5);
t7=C_mutate(((C_word *)((C_word*)t0)[10])+1,t4);
t8=(*a=C_CLOSURE_TYPE|11,a[1]=(C_word)f_29648,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],a[7]=((C_word*)t0)[11],a[8]=((C_word*)t0)[7],a[9]=((C_word*)t0)[8],a[10]=((C_word*)t0)[9],a[11]=((C_word*)t0)[10],tmp=(C_word)a,a+=12,tmp);
if(C_truep((C_word)C_i_nullp(((C_word*)((C_word*)t0)[11])[1]))){
C_trace("ChickenBridge.scm: 381  loop-error");
f_27049(t8,((C_word*)t0)[5],((C_word*)((C_word*)t0)[11])[1],(C_word)C_a_i_list(&a,1,lf[708]));}
else{
t9=t8;
f_29648(2,t9,C_SCHEME_UNDEFINED);}}

/* k29646 in k29631 in parse-conditional in k26697 in k26694 in k26691 in k26688 in k26263 in k26260 in k26257 in k26254 in k26251 in k25668 in k25665 in k25142 in k25139 in k25136 in k25133 in k25130 in k25127 in k25124 in k25121 in k25118 in k25115 in k25112 in k25109 in k25106 in k25103 in k25100 in k25097 in k25094 in k25091 in k25088 in k25085 in k25082 in k24943 in k24940 in k24937 in k24934 in k24878 in k24875 in k24872 in k24869 in k24866 in k24863 in k24860 in k24857 in k23555 in k23486 in k23293 in k23290 in k23185 in k23134 in k11783 in k10718 in k10715 in k7274 in k7271 in k6978 in k6975 in k6971 in k6680 in k6677 in k6674 in k6671 */
static void C_ccall f_29648(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[17],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_29648,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|10,a[1]=(C_word)f_29651,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],a[7]=((C_word*)t0)[8],a[8]=((C_word*)t0)[9],a[9]=((C_word*)t0)[10],a[10]=((C_word*)t0)[11],tmp=(C_word)a,a+=11,tmp);
t3=(C_word)C_eqp(((C_word*)t0)[2],lf[6]);
if(C_truep(t3)){
t4=(C_word)C_a_i_list(&a,2,lf[458],((C_word*)((C_word*)t0)[11])[1]);
t5=C_mutate(((C_word *)((C_word*)t0)[11])+1,t4);
t6=t2;
f_29651(t6,t5);}
else{
t4=t2;
f_29651(t4,C_SCHEME_UNDEFINED);}}

/* k29649 in k29646 in k29631 in parse-conditional in k26697 in k26694 in k26691 in k26688 in k26263 in k26260 in k26257 in k26254 in k26251 in k25668 in k25665 in k25142 in k25139 in k25136 in k25133 in k25130 in k25127 in k25124 in k25121 in k25118 in k25115 in k25112 in k25109 in k25106 in k25103 in k25100 in k25097 in k25094 in k25091 in k25088 in k25085 in k25082 in k24943 in k24940 in k24937 in k24934 in k24878 in k24875 in k24872 in k24869 in k24866 in k24863 in k24860 in k24857 in k23555 in k23486 in k23293 in k23290 in k23185 in k23134 in k11783 in k10718 in k10715 in k7274 in k7271 in k6978 in k6975 in k6971 in k6680 in k6677 in k6674 in k6671 */
static void C_fcall f_29651(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[22],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_29651,NULL,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|10,a[1]=(C_word)f_29654,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],a[7]=((C_word*)t0)[7],a[8]=((C_word*)t0)[8],a[9]=((C_word*)t0)[9],a[10]=((C_word*)t0)[10],tmp=(C_word)a,a+=11,tmp);
t3=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_29821,a[2]=((C_word*)t0)[4],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[6],a[5]=((C_word)li466),tmp=(C_word)a,a+=6,tmp);
t4=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_29827,a[2]=((C_word*)t0)[6],a[3]=((C_word*)t0)[7],a[4]=((C_word)li467),tmp=(C_word)a,a+=5,tmp);
C_trace("ChickenBridge.scm: 381  call-with-values");
C_call_with_values(4,0,t2,t3,t4);}

/* a29826 in k29649 in k29646 in k29631 in parse-conditional in k26697 in k26694 in k26691 in k26688 in k26263 in k26260 in k26257 in k26254 in k26251 in k25668 in k25665 in k25142 in k25139 in k25136 in k25133 in k25130 in k25127 in k25124 in k25121 in k25118 in k25115 in k25112 in k25109 in k25106 in k25103 in k25100 in k25097 in k25094 in k25091 in k25088 in k25085 in k25082 in k24943 in k24940 in k24937 in k24934 in k24878 in k24875 in k24872 in k24869 in k24866 in k24863 in k24860 in k24857 in k23555 in k23486 in k23293 in k23290 in k23185 in k23134 in k11783 in k10718 in k10715 in k7274 in k7271 in k6978 in k6975 in k6971 in k6680 in k6677 in k6674 in k6671 */
static void C_ccall f_29827(C_word c,C_word t0,C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word t6;
C_word *a;
if(c!=4) C_bad_argc_2(c,4,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr4,(void*)f_29827,4,t0,t1,t2,t3);}
t4=C_mutate(((C_word *)((C_word*)t0)[3])+1,t2);
t5=C_mutate(((C_word *)((C_word*)t0)[2])+1,t3);
t6=t1;
((C_proc2)(void*)(*((C_word*)t6+1)))(2,t6,t5);}

/* a29820 in k29649 in k29646 in k29631 in parse-conditional in k26697 in k26694 in k26691 in k26688 in k26263 in k26260 in k26257 in k26254 in k26251 in k25668 in k25665 in k25142 in k25139 in k25136 in k25133 in k25130 in k25127 in k25124 in k25121 in k25118 in k25115 in k25112 in k25109 in k25106 in k25103 in k25100 in k25097 in k25094 in k25091 in k25088 in k25085 in k25082 in k24943 in k24940 in k24937 in k24934 in k24878 in k24875 in k24872 in k24869 in k24866 in k24863 in k24860 in k24857 in k23555 in k23486 in k23293 in k23290 in k23185 in k23134 in k11783 in k10718 in k10715 in k7274 in k7271 in k6978 in k6975 in k6971 in k6680 in k6677 in k6674 in k6671 */
static void C_ccall f_29821(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
if(c!=2) C_bad_argc_2(c,2,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_29821,2,t0,t1);}
C_trace("ChickenBridge.scm: 381  parse-then-else-dependents");
f_29480(t1,((C_word*)((C_word*)t0)[4])[1],((C_word*)t0)[3],((C_word*)t0)[2]);}

/* k29652 in k29649 in k29646 in k29631 in parse-conditional in k26697 in k26694 in k26691 in k26688 in k26263 in k26260 in k26257 in k26254 in k26251 in k25668 in k25665 in k25142 in k25139 in k25136 in k25133 in k25130 in k25127 in k25124 in k25121 in k25118 in k25115 in k25112 in k25109 in k25106 in k25103 in k25100 in k25097 in k25094 in k25091 in k25088 in k25085 in k25082 in k24943 in k24940 in k24937 in k24934 in k24878 in k24875 in k24872 in k24869 in k24866 in k24863 in k24860 in k24857 in k23555 in k23486 in k23293 in k23290 in k23185 in k23134 in k11783 in k10718 in k10715 in k7274 in k7271 in k6978 in k6975 in k6971 in k6680 in k6677 in k6674 in k6671 */
static void C_ccall f_29654(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word ab[15],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_29654,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|10,a[1]=(C_word)f_29657,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],a[7]=((C_word*)t0)[7],a[8]=((C_word*)t0)[8],a[9]=((C_word*)t0)[9],a[10]=((C_word*)t0)[10],tmp=(C_word)a,a+=11,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[7])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
t4=(C_word)C_i_car(((C_word*)((C_word*)t0)[7])[1]);
t5=C_mutate(((C_word *)((C_word*)t0)[7])+1,t4);
t6=t2;
f_29657(t6,t5);}
else{
t4=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_29803,a[2]=t2,a[3]=((C_word*)t0)[7],tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 381  gather-clauses");
f_26960(t4,C_SCHEME_END_OF_LIST,((C_word*)((C_word*)t0)[7])[1]);}}

/* k29801 in k29652 in k29649 in k29646 in k29631 in parse-conditional in k26697 in k26694 in k26691 in k26688 in k26263 in k26260 in k26257 in k26254 in k26251 in k25668 in k25665 in k25142 in k25139 in k25136 in k25133 in k25130 in k25127 in k25124 in k25121 in k25118 in k25115 in k25112 in k25109 in k25106 in k25103 in k25100 in k25097 in k25094 in k25091 in k25088 in k25085 in k25082 in k24943 in k24940 in k24937 in k24934 in k24878 in k24875 in k24872 in k24869 in k24866 in k24863 in k24860 in k24857 in k23555 in k23486 in k23293 in k23290 in k23185 in k23134 in k11783 in k10718 in k10715 in k7274 in k7271 in k6978 in k6975 in k6971 in k6680 in k6677 in k6674 in k6671 */
static void C_ccall f_29803(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[3])+1,t1);
t3=((C_word*)t0)[2];
f_29657(t3,t2);}

/* k29655 in k29652 in k29649 in k29646 in k29631 in parse-conditional in k26697 in k26694 in k26691 in k26688 in k26263 in k26260 in k26257 in k26254 in k26251 in k25668 in k25665 in k25142 in k25139 in k25136 in k25133 in k25130 in k25127 in k25124 in k25121 in k25118 in k25115 in k25112 in k25109 in k25106 in k25103 in k25100 in k25097 in k25094 in k25091 in k25088 in k25085 in k25082 in k24943 in k24940 in k24937 in k24934 in k24878 in k24875 in k24872 in k24869 in k24866 in k24863 in k24860 in k24857 in k23555 in k23486 in k23293 in k23290 in k23185 in k23134 in k11783 in k10718 in k10715 in k7274 in k7271 in k6978 in k6975 in k6971 in k6680 in k6677 in k6674 in k6671 */
static void C_fcall f_29657(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[11],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_29657,NULL,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|10,a[1]=(C_word)f_29660,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],a[7]=((C_word*)t0)[7],a[8]=((C_word*)t0)[8],a[9]=((C_word*)t0)[9],a[10]=((C_word*)t0)[10],tmp=(C_word)a,a+=11,tmp);
C_trace("ChickenBridge.scm: 381  loop-operator-set!");
f_26707(t2,((C_word*)((C_word*)t0)[7])[1],lf[20]);}

/* k29658 in k29655 in k29652 in k29649 in k29646 in k29631 in parse-conditional in k26697 in k26694 in k26691 in k26688 in k26263 in k26260 in k26257 in k26254 in k26251 in k25668 in k25665 in k25142 in k25139 in k25136 in k25133 in k25130 in k25127 in k25124 in k25121 in k25118 in k25115 in k25112 in k25109 in k25106 in k25103 in k25100 in k25097 in k25094 in k25091 in k25088 in k25085 in k25082 in k24943 in k24940 in k24937 in k24934 in k24878 in k24875 in k24872 in k24869 in k24866 in k24863 in k24860 in k24857 in k23555 in k23486 in k23293 in k23290 in k23185 in k23134 in k11783 in k10718 in k10715 in k7274 in k7271 in k6978 in k6975 in k6971 in k6680 in k6677 in k6674 in k6671 */
static void C_ccall f_29660(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[14],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_29660,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|10,a[1]=(C_word)f_29784,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],a[7]=((C_word*)t0)[7],a[8]=((C_word*)t0)[8],a[9]=((C_word*)t0)[9],a[10]=((C_word*)t0)[10],tmp=(C_word)a,a+=11,tmp);
t3=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_29796,a[2]=t2,tmp=(C_word)a,a+=3,tmp);
C_trace("ChickenBridge.scm: 381  loop-looping");
t4=C_retrieve2(lf[536],"loop-looping");
f_26761(3,t4,t3,((C_word*)((C_word*)t0)[7])[1]);}

/* k29794 in k29658 in k29655 in k29652 in k29649 in k29646 in k29631 in parse-conditional in k26697 in k26694 in k26691 in k26688 in k26263 in k26260 in k26257 in k26254 in k26251 in k25668 in k25665 in k25142 in k25139 in k25136 in k25133 in k25130 in k25127 in k25124 in k25121 in k25118 in k25115 in k25112 in k25109 in k25106 in k25103 in k25100 in k25097 in k25094 in k25091 in k25088 in k25085 in k25082 in k24943 in k24940 in k24937 in k24934 in k24878 in k24875 in k24872 in k24869 in k24866 in k24863 in k24860 in k24857 in k23555 in k23486 in k23293 in k23290 in k23185 in k23134 in k11783 in k10718 in k10715 in k7274 in k7271 in k6978 in k6975 in k6971 in k6680 in k6677 in k6674 in k6671 */
static void C_ccall f_29796(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[3],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_29796,2,t0,t1);}
t2=(C_word)C_a_i_cons(&a,2,lf[484],t1);
C_trace("ChickenBridge.scm: 381  append");
t3=*((C_word*)lf[18]+1);
((C_proc4)C_retrieve_proc(t3))(4,t3,((C_word*)t0)[2],t2,C_SCHEME_END_OF_LIST);}

/* k29782 in k29658 in k29655 in k29652 in k29649 in k29646 in k29631 in parse-conditional in k26697 in k26694 in k26691 in k26688 in k26263 in k26260 in k26257 in k26254 in k26251 in k25668 in k25665 in k25142 in k25139 in k25136 in k25133 in k25130 in k25127 in k25124 in k25121 in k25118 in k25115 in k25112 in k25109 in k25106 in k25103 in k25100 in k25097 in k25094 in k25091 in k25088 in k25085 in k25082 in k24943 in k24940 in k24937 in k24934 in k24878 in k24875 in k24872 in k24869 in k24866 in k24863 in k24860 in k24857 in k23555 in k23486 in k23293 in k23290 in k23185 in k23134 in k11783 in k10718 in k10715 in k7274 in k7271 in k6978 in k6975 in k6971 in k6680 in k6677 in k6674 in k6671 */
static void C_ccall f_29784(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word ab[28],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_29784,2,t0,t1);}
t2=(C_word)C_a_i_list(&a,4,lf[20],((C_word*)((C_word*)t0)[10])[1],t1,C_SCHEME_FALSE);
t3=C_mutate(((C_word *)((C_word*)t0)[9])+1,t2);
t4=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_29667,a[2]=((C_word*)t0)[9],a[3]=((C_word*)t0)[6],a[4]=((C_word*)t0)[7],a[5]=((C_word*)t0)[8],tmp=(C_word)a,a+=6,tmp);
t5=(*a=C_CLOSURE_TYPE|9,a[1]=(C_word)f_29680,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=t4,a[7]=((C_word*)t0)[7],a[8]=((C_word*)t0)[9],a[9]=((C_word*)t0)[6],tmp=(C_word)a,a+=10,tmp);
if(C_truep((C_word)C_i_nullp(((C_word*)((C_word*)t0)[6])[1]))){
t6=t5;
f_29680(t6,C_SCHEME_FALSE);}
else{
t6=(C_word)C_i_car(((C_word*)((C_word*)t0)[6])[1]);
t7=t5;
f_29680(t7,(C_word)C_eqp(t6,lf[16]));}}

/* k29678 in k29782 in k29658 in k29655 in k29652 in k29649 in k29646 in k29631 in parse-conditional in k26697 in k26694 in k26691 in k26688 in k26263 in k26260 in k26257 in k26254 in k26251 in k25668 in k25665 in k25142 in k25139 in k25136 in k25133 in k25130 in k25127 in k25124 in k25121 in k25118 in k25115 in k25112 in k25109 in k25106 in k25103 in k25100 in k25097 in k25094 in k25091 in k25088 in k25085 in k25082 in k24943 in k24940 in k24937 in k24934 in k24878 in k24875 in k24872 in k24869 in k24866 in k24863 in k24860 in k24857 in k23555 in k23486 in k23293 in k23290 in k23185 in k23134 in k11783 in k10718 in k10715 in k7274 in k7271 in k6978 in k6975 in k6971 in k6680 in k6677 in k6674 in k6671 */
static void C_fcall f_29680(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[12],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_29680,NULL,2,t0,t1);}
if(C_truep(t1)){
t2=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[9])[1]);
t3=C_mutate(((C_word *)((C_word*)t0)[9])+1,t2);
t4=(*a=C_CLOSURE_TYPE|8,a[1]=(C_word)f_29687,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[9],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],a[7]=((C_word*)t0)[7],a[8]=((C_word*)t0)[8],tmp=(C_word)a,a+=9,tmp);
if(C_truep((C_word)C_i_nullp(((C_word*)((C_word*)t0)[9])[1]))){
C_trace("ChickenBridge.scm: 381  loop-error");
f_27049(t4,((C_word*)t0)[4],((C_word*)t0)[2],(C_word)C_a_i_list(&a,1,lf[707]));}
else{
t5=t4;
f_29687(2,t5,C_SCHEME_UNDEFINED);}}
else{
t2=((C_word*)t0)[6];
f_29667(t2,C_SCHEME_UNDEFINED);}}

/* k29685 in k29678 in k29782 in k29658 in k29655 in k29652 in k29649 in k29646 in k29631 in parse-conditional in k26697 in k26694 in k26691 in k26688 in k26263 in k26260 in k26257 in k26254 in k26251 in k25668 in k25665 in k25142 in k25139 in k25136 in k25133 in k25130 in k25127 in k25124 in k25121 in k25118 in k25115 in k25112 in k25109 in k25106 in k25103 in k25100 in k25097 in k25094 in k25091 in k25088 in k25085 in k25082 in k24943 in k24940 in k24937 in k24934 in k24878 in k24875 in k24872 in k24869 in k24866 in k24863 in k24860 in k24857 in k23555 in k23486 in k23293 in k23290 in k23185 in k23134 in k11783 in k10718 in k10715 in k7274 in k7271 in k6978 in k6975 in k6971 in k6680 in k6677 in k6674 in k6671 */
static void C_ccall f_29687(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[18],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_29687,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_29690,a[2]=((C_word*)t0)[5],a[3]=((C_word*)t0)[6],a[4]=((C_word*)t0)[7],a[5]=((C_word*)t0)[8],tmp=(C_word)a,a+=6,tmp);
t3=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_29743,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[7],a[4]=((C_word*)t0)[3],a[5]=((C_word*)t0)[4],a[6]=((C_word)li464),tmp=(C_word)a,a+=7,tmp);
t4=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_29757,a[2]=((C_word*)t0)[4],a[3]=((C_word*)t0)[5],a[4]=((C_word)li465),tmp=(C_word)a,a+=5,tmp);
C_trace("ChickenBridge.scm: 381  call-with-values");
C_call_with_values(4,0,t2,t3,t4);}

/* a29756 in k29685 in k29678 in k29782 in k29658 in k29655 in k29652 in k29649 in k29646 in k29631 in parse-conditional in k26697 in k26694 in k26691 in k26688 in k26263 in k26260 in k26257 in k26254 in k26251 in k25668 in k25665 in k25142 in k25139 in k25136 in k25133 in k25130 in k25127 in k25124 in k25121 in k25118 in k25115 in k25112 in k25109 in k25106 in k25103 in k25100 in k25097 in k25094 in k25091 in k25088 in k25085 in k25082 in k24943 in k24940 in k24937 in k24934 in k24878 in k24875 in k24872 in k24869 in k24866 in k24863 in k24860 in k24857 in k23555 in k23486 in k23293 in k23290 in k23185 in k23134 in k11783 in k10718 in k10715 in k7274 in k7271 in k6978 in k6975 in k6971 in k6680 in k6677 in k6674 in k6671 */
static void C_ccall f_29757(C_word c,C_word t0,C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word t6;
C_word *a;
if(c!=4) C_bad_argc_2(c,4,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr4,(void*)f_29757,4,t0,t1,t2,t3);}
t4=C_mutate(((C_word *)((C_word*)t0)[3])+1,t2);
t5=C_mutate(((C_word *)((C_word*)t0)[2])+1,t3);
t6=t1;
((C_proc2)(void*)(*((C_word*)t6+1)))(2,t6,t5);}

/* a29742 in k29685 in k29678 in k29782 in k29658 in k29655 in k29652 in k29649 in k29646 in k29631 in parse-conditional in k26697 in k26694 in k26691 in k26688 in k26263 in k26260 in k26257 in k26254 in k26251 in k25668 in k25665 in k25142 in k25139 in k25136 in k25133 in k25130 in k25127 in k25124 in k25121 in k25118 in k25115 in k25112 in k25109 in k25106 in k25103 in k25100 in k25097 in k25094 in k25091 in k25088 in k25085 in k25082 in k24943 in k24940 in k24937 in k24934 in k24878 in k24875 in k24872 in k24869 in k24866 in k24863 in k24860 in k24857 in k23555 in k23486 in k23293 in k23290 in k23185 in k23134 in k11783 in k10718 in k10715 in k7274 in k7271 in k6978 in k6975 in k6971 in k6680 in k6677 in k6674 in k6671 */
static void C_ccall f_29743(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[8],*a=ab;
if(c!=2) C_bad_argc_2(c,2,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_29743,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_29751,a[2]=((C_word*)t0)[4],a[3]=((C_word*)t0)[5],a[4]=t1,tmp=(C_word)a,a+=5,tmp);
t3=(C_word)C_a_i_list(&a,1,((C_word*)((C_word*)t0)[3])[1]);
C_trace("ChickenBridge.scm: 381  append");
t4=*((C_word*)lf[18]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,((C_word*)t0)[2],t3);}

/* k29749 in a29742 in k29685 in k29678 in k29782 in k29658 in k29655 in k29652 in k29649 in k29646 in k29631 in parse-conditional in k26697 in k26694 in k26691 in k26688 in k26263 in k26260 in k26257 in k26254 in k26251 in k25668 in k25665 in k25142 in k25139 in k25136 in k25133 in k25130 in k25127 in k25124 in k25121 in k25118 in k25115 in k25112 in k25109 in k25106 in k25103 in k25100 in k25097 in k25094 in k25091 in k25088 in k25085 in k25082 in k24943 in k24940 in k24937 in k24934 in k24878 in k24875 in k24872 in k24869 in k24866 in k24863 in k24860 in k24857 in k23555 in k23486 in k23293 in k23290 in k23185 in k23134 in k11783 in k10718 in k10715 in k7274 in k7271 in k6978 in k6975 in k6971 in k6680 in k6677 in k6674 in k6671 */
static void C_ccall f_29751(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 381  parse-then-else-dependents");
f_29480(((C_word*)t0)[4],((C_word*)((C_word*)t0)[3])[1],t1,((C_word*)t0)[2]);}

/* k29688 in k29685 in k29678 in k29782 in k29658 in k29655 in k29652 in k29649 in k29646 in k29631 in parse-conditional in k26697 in k26694 in k26691 in k26688 in k26263 in k26260 in k26257 in k26254 in k26251 in k25668 in k25665 in k25142 in k25139 in k25136 in k25133 in k25130 in k25127 in k25124 in k25121 in k25118 in k25115 in k25112 in k25109 in k25106 in k25103 in k25100 in k25097 in k25094 in k25091 in k25088 in k25085 in k25082 in k24943 in k24940 in k24937 in k24934 in k24878 in k24875 in k24872 in k24869 in k24866 in k24863 in k24860 in k24857 in k23555 in k23486 in k23293 in k23290 in k23185 in k23134 in k11783 in k10718 in k10715 in k7274 in k7271 in k6978 in k6975 in k6971 in k6680 in k6677 in k6674 in k6671 */
static void C_ccall f_29690(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word ab[10],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_29690,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_29693,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],tmp=(C_word)a,a+=6,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[2])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
t4=(C_word)C_i_car(((C_word*)((C_word*)t0)[2])[1]);
t5=C_mutate(((C_word *)((C_word*)t0)[2])+1,t4);
t6=t2;
f_29693(t6,t5);}
else{
t4=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_29729,a[2]=t2,a[3]=((C_word*)t0)[2],tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 381  gather-clauses");
f_26960(t4,C_SCHEME_END_OF_LIST,((C_word*)((C_word*)t0)[2])[1]);}}

/* k29727 in k29688 in k29685 in k29678 in k29782 in k29658 in k29655 in k29652 in k29649 in k29646 in k29631 in parse-conditional in k26697 in k26694 in k26691 in k26688 in k26263 in k26260 in k26257 in k26254 in k26251 in k25668 in k25665 in k25142 in k25139 in k25136 in k25133 in k25130 in k25127 in k25124 in k25121 in k25118 in k25115 in k25112 in k25109 in k25106 in k25103 in k25100 in k25097 in k25094 in k25091 in k25088 in k25085 in k25082 in k24943 in k24940 in k24937 in k24934 in k24878 in k24875 in k24872 in k24869 in k24866 in k24863 in k24860 in k24857 in k23555 in k23486 in k23293 in k23290 in k23185 in k23134 in k11783 in k10718 in k10715 in k7274 in k7271 in k6978 in k6975 in k6971 in k6680 in k6677 in k6674 in k6671 */
static void C_ccall f_29729(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[3])+1,t1);
t3=((C_word*)t0)[2];
f_29693(t3,t2);}

/* k29691 in k29688 in k29685 in k29678 in k29782 in k29658 in k29655 in k29652 in k29649 in k29646 in k29631 in parse-conditional in k26697 in k26694 in k26691 in k26688 in k26263 in k26260 in k26257 in k26254 in k26251 in k25668 in k25665 in k25142 in k25139 in k25136 in k25133 in k25130 in k25127 in k25124 in k25121 in k25118 in k25115 in k25112 in k25109 in k25106 in k25103 in k25100 in k25097 in k25094 in k25091 in k25088 in k25085 in k25082 in k24943 in k24940 in k24937 in k24934 in k24878 in k24875 in k24872 in k24869 in k24866 in k24863 in k24860 in k24857 in k23555 in k23486 in k23293 in k23290 in k23185 in k23134 in k11783 in k10718 in k10715 in k7274 in k7271 in k6978 in k6975 in k6971 in k6680 in k6677 in k6674 in k6671 */
static void C_fcall f_29693(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[6],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_29693,NULL,2,t0,t1);}
t2=(C_word)C_i_cdddr(((C_word*)((C_word*)t0)[5])[1]);
t3=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_29722,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=t2,tmp=(C_word)a,a+=6,tmp);
C_trace("ChickenBridge.scm: 381  loop-looping");
t4=C_retrieve2(lf[536],"loop-looping");
f_26761(3,t4,t3,((C_word*)((C_word*)t0)[2])[1]);}

/* k29720 in k29691 in k29688 in k29685 in k29678 in k29782 in k29658 in k29655 in k29652 in k29649 in k29646 in k29631 in parse-conditional in k26697 in k26694 in k26691 in k26688 in k26263 in k26260 in k26257 in k26254 in k26251 in k25668 in k25665 in k25142 in k25139 in k25136 in k25133 in k25130 in k25127 in k25124 in k25121 in k25118 in k25115 in k25112 in k25109 in k25106 in k25103 in k25100 in k25097 in k25094 in k25091 in k25088 in k25085 in k25082 in k24943 in k24940 in k24937 in k24934 in k24878 in k24875 in k24872 in k24869 in k24866 in k24863 in k24860 in k24857 in k23555 in k23486 in k23293 in k23290 in k23185 in k23134 in k11783 in k10718 in k10715 in k7274 in k7271 in k6978 in k6975 in k6971 in k6680 in k6677 in k6674 in k6671 */
static void C_ccall f_29722(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[8],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_29722,2,t0,t1);}
t2=(C_word)C_a_i_cons(&a,2,lf[484],t1);
t3=(C_word)C_i_set_car(((C_word*)t0)[5],t2);
t4=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_29699,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],tmp=(C_word)a,a+=5,tmp);
C_trace("ChickenBridge.scm: 381  loop-looping-set!");
f_26767(t4,((C_word*)((C_word*)t0)[4])[1],C_SCHEME_END_OF_LIST);}

/* k29697 in k29720 in k29691 in k29688 in k29685 in k29678 in k29782 in k29658 in k29655 in k29652 in k29649 in k29646 in k29631 in parse-conditional in k26697 in k26694 in k26691 in k26688 in k26263 in k26260 in k26257 in k26254 in k26251 in k25668 in k25665 in k25142 in k25139 in k25136 in k25133 in k25130 in k25127 in k25124 in k25121 in k25118 in k25115 in k25112 in k25109 in k25106 in k25103 in k25100 in k25097 in k25094 in k25091 in k25088 in k25085 in k25082 in k24943 in k24940 in k24937 in k24934 in k24878 in k24875 in k24872 in k24869 in k24866 in k24863 in k24860 in k24857 in k23555 in k23486 in k23293 in k23290 in k23185 in k23134 in k11783 in k10718 in k10715 in k7274 in k7271 in k6978 in k6975 in k6971 in k6680 in k6677 in k6674 in k6671 */
static void C_ccall f_29699(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[5],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_29699,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_29702,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],tmp=(C_word)a,a+=5,tmp);
C_trace("ChickenBridge.scm: 381  loop-looping-set!");
f_26767(t2,((C_word*)((C_word*)t0)[2])[1],C_SCHEME_END_OF_LIST);}

/* k29700 in k29697 in k29720 in k29691 in k29688 in k29685 in k29678 in k29782 in k29658 in k29655 in k29652 in k29649 in k29646 in k29631 in parse-conditional in k26697 in k26694 in k26691 in k26688 in k26263 in k26260 in k26257 in k26254 in k26251 in k25668 in k25665 in k25142 in k25139 in k25136 in k25133 in k25130 in k25127 in k25124 in k25121 in k25118 in k25115 in k25112 in k25109 in k25106 in k25103 in k25100 in k25097 in k25094 in k25091 in k25088 in k25085 in k25082 in k24943 in k24940 in k24937 in k24934 in k24878 in k24875 in k24872 in k24869 in k24866 in k24863 in k24860 in k24857 in k23555 in k23486 in k23293 in k23290 in k23185 in k23134 in k11783 in k10718 in k10715 in k7274 in k7271 in k6978 in k6975 in k6971 in k6680 in k6677 in k6674 in k6671 */
static void C_ccall f_29702(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[10],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_29702,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_29706,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],tmp=(C_word)a,a+=4,tmp);
t3=(C_word)C_a_i_list(&a,2,((C_word*)((C_word*)t0)[4])[1],((C_word*)((C_word*)t0)[2])[1]);
C_trace("ChickenBridge.scm: 381  gather-clauses");
f_26960(t2,lf[20],t3);}

/* k29704 in k29700 in k29697 in k29720 in k29691 in k29688 in k29685 in k29678 in k29782 in k29658 in k29655 in k29652 in k29649 in k29646 in k29631 in parse-conditional in k26697 in k26694 in k26691 in k26688 in k26263 in k26260 in k26257 in k26254 in k26251 in k25668 in k25665 in k25142 in k25139 in k25136 in k25133 in k25130 in k25127 in k25124 in k25121 in k25118 in k25115 in k25112 in k25109 in k25106 in k25103 in k25100 in k25097 in k25094 in k25091 in k25088 in k25085 in k25082 in k24943 in k24940 in k24937 in k24934 in k24878 in k24875 in k24872 in k24869 in k24866 in k24863 in k24860 in k24857 in k23555 in k23486 in k23293 in k23290 in k23185 in k23134 in k11783 in k10718 in k10715 in k7274 in k7271 in k6978 in k6975 in k6971 in k6680 in k6677 in k6674 in k6671 */
static void C_ccall f_29706(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[3])+1,t1);
t3=((C_word*)t0)[2];
f_29667(t3,t2);}

/* k29665 in k29782 in k29658 in k29655 in k29652 in k29649 in k29646 in k29631 in parse-conditional in k26697 in k26694 in k26691 in k26688 in k26263 in k26260 in k26257 in k26254 in k26251 in k25668 in k25665 in k25142 in k25139 in k25136 in k25133 in k25130 in k25127 in k25124 in k25121 in k25118 in k25115 in k25112 in k25109 in k25106 in k25103 in k25100 in k25097 in k25094 in k25091 in k25088 in k25085 in k25082 in k24943 in k24940 in k24937 in k24934 in k24878 in k24875 in k24872 in k24869 in k24866 in k24863 in k24860 in k24857 in k23555 in k23486 in k23293 in k23290 in k23185 in k23134 in k11783 in k10718 in k10715 in k7274 in k7271 in k6978 in k6975 in k6971 in k6680 in k6677 in k6674 in k6671 */
static void C_fcall f_29667(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[8],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_29667,NULL,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_29670,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],tmp=(C_word)a,a+=5,tmp);
t3=(C_word)C_a_i_list(&a,1,((C_word*)((C_word*)t0)[2])[1]);
C_trace("ChickenBridge.scm: 381  loop-looping-set!");
f_26767(t2,((C_word*)((C_word*)t0)[4])[1],t3);}

/* k29668 in k29665 in k29782 in k29658 in k29655 in k29652 in k29649 in k29646 in k29631 in parse-conditional in k26697 in k26694 in k26691 in k26688 in k26263 in k26260 in k26257 in k26254 in k26251 in k25668 in k25665 in k25142 in k25139 in k25136 in k25133 in k25130 in k25127 in k25124 in k25121 in k25118 in k25115 in k25112 in k25109 in k25106 in k25103 in k25100 in k25097 in k25094 in k25091 in k25088 in k25085 in k25082 in k24943 in k24940 in k24937 in k24934 in k24878 in k24875 in k24872 in k24869 in k24866 in k24863 in k24860 in k24857 in k23555 in k23486 in k23293 in k23290 in k23185 in k23134 in k11783 in k10718 in k10715 in k7274 in k7271 in k6978 in k6975 in k6971 in k6680 in k6677 in k6674 in k6671 */
static void C_ccall f_29670(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 381  values");
C_values(4,0,((C_word*)t0)[4],((C_word*)((C_word*)t0)[3])[1],((C_word*)((C_word*)t0)[2])[1]);}

/* parse-then-else-dependents in k26697 in k26694 in k26691 in k26688 in k26263 in k26260 in k26257 in k26254 in k26251 in k25668 in k25665 in k25142 in k25139 in k25136 in k25133 in k25130 in k25127 in k25124 in k25121 in k25118 in k25115 in k25112 in k25109 in k25106 in k25103 in k25100 in k25097 in k25094 in k25091 in k25088 in k25085 in k25082 in k24943 in k24940 in k24937 in k24934 in k24878 in k24875 in k24872 in k24869 in k24866 in k24863 in k24860 in k24857 in k23555 in k23486 in k23293 in k23290 in k23185 in k23134 in k11783 in k10718 in k10715 in k7274 in k7271 in k6978 in k6975 in k6971 in k6680 in k6677 in k6674 in k6671 */
static void C_fcall f_29480(C_word t1,C_word t2,C_word t3,C_word t4){
C_word tmp;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word t14;
C_word t15;
C_word t16;
C_word ab[25],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_29480,NULL,4,t1,t2,t3,t4);}
t5=(*a=C_VECTOR_TYPE|1,a[1]=t2,tmp=(C_word)a,a+=2,tmp);
t6=((C_word*)t5)[1];
t7=(*a=C_VECTOR_TYPE|1,a[1]=t6,tmp=(C_word)a,a+=2,tmp);
t8=C_SCHEME_FALSE;
t9=(*a=C_VECTOR_TYPE|1,a[1]=t8,tmp=(C_word)a,a+=2,tmp);
t10=C_SCHEME_END_OF_LIST;
t11=(*a=C_VECTOR_TYPE|1,a[1]=t10,tmp=(C_word)a,a+=2,tmp);
t12=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_29484,a[2]=t5,a[3]=t11,a[4]=t1,tmp=(C_word)a,a+=5,tmp);
t13=C_SCHEME_UNDEFINED;
t14=(*a=C_VECTOR_TYPE|1,a[1]=t13,tmp=(C_word)a,a+=2,tmp);
t15=C_set_block_item(t14,0,(*a=C_CLOSURE_TYPE|9,a[1]=(C_word)f_29489,a[2]=t3,a[3]=t14,a[4]=t7,a[5]=t11,a[6]=t4,a[7]=t9,a[8]=t5,a[9]=((C_word)li462),tmp=(C_word)a,a+=10,tmp));
t16=((C_word*)t14)[1];
f_29489(t16,t12,C_SCHEME_FALSE,C_SCHEME_FALSE,C_SCHEME_FALSE);}

/* do4870 in parse-then-else-dependents in k26697 in k26694 in k26691 in k26688 in k26263 in k26260 in k26257 in k26254 in k26251 in k25668 in k25665 in k25142 in k25139 in k25136 in k25133 in k25130 in k25127 in k25124 in k25121 in k25118 in k25115 in k25112 in k25109 in k25106 in k25103 in k25100 in k25097 in k25094 in k25091 in k25088 in k25085 in k25082 in k24943 in k24940 in k24937 in k24934 in k24878 in k24875 in k24872 in k24869 in k24866 in k24863 in k24860 in k24857 in k23555 in k23486 in k23293 in k23290 in k23185 in k23134 in k11783 in k10718 in k10715 in k7274 in k7271 in k6978 in k6975 in k6971 in k6680 in k6677 in k6674 in k6671 */
static void C_fcall f_29489(C_word t0,C_word t1,C_word t2,C_word t3,C_word t4){
C_word tmp;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word ab[19],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_29489,NULL,5,t0,t1,t2,t3,t4);}
t5=(*a=C_VECTOR_TYPE|1,a[1]=t2,tmp=(C_word)a,a+=2,tmp);
t6=(*a=C_VECTOR_TYPE|1,a[1]=t3,tmp=(C_word)a,a+=2,tmp);
t7=(*a=C_VECTOR_TYPE|1,a[1]=t4,tmp=(C_word)a,a+=2,tmp);
t8=(C_word)C_i_nullp(((C_word*)((C_word*)t0)[8])[1]);
t9=(C_truep(t8)?t8:((C_word*)((C_word*)t0)[7])[1]);
if(C_truep(t9)){
t10=t1;
((C_proc2)(void*)(*((C_word*)t10+1)))(2,t10,C_SCHEME_UNDEFINED);}
else{
t10=(C_word)C_i_car(((C_word*)((C_word*)t0)[8])[1]);
t11=((C_word*)t0)[6];
t12=(*a=C_CLOSURE_TYPE|12,a[1]=(C_word)f_29437,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[7],a[4]=((C_word*)t0)[6],a[5]=t6,a[6]=t1,a[7]=((C_word*)t0)[3],a[8]=t7,a[9]=((C_word*)t0)[8],a[10]=((C_word*)t0)[4],a[11]=((C_word*)t0)[5],a[12]=t5,tmp=(C_word)a,a+=13,tmp);
C_trace("ChickenBridge.scm: 381  loop-op?");
f_27031(t12,t10,t11);}}

/* k29435 in do4870 in parse-then-else-dependents in k26697 in k26694 in k26691 in k26688 in k26263 in k26260 in k26257 in k26254 in k26251 in k25668 in k25665 in k25142 in k25139 in k25136 in k25133 in k25130 in k25127 in k25124 in k25121 in k25118 in k25115 in k25112 in k25109 in k25106 in k25103 in k25100 in k25097 in k25094 in k25091 in k25088 in k25085 in k25082 in k24943 in k24940 in k24937 in k24934 in k24878 in k24875 in k24872 in k24869 in k24866 in k24863 in k24860 in k24857 in k23555 in k23486 in k23293 in k23290 in k23185 in k23134 in k11783 in k10718 in k10715 in k7274 in k7271 in k6978 in k6975 in k6971 in k6680 in k6677 in k6674 in k6671 */
static void C_ccall f_29437(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word ab[14],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_29437,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|13,a[1]=(C_word)f_29443,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],a[7]=((C_word*)t0)[7],a[8]=((C_word*)t0)[8],a[9]=((C_word*)t0)[9],a[10]=((C_word*)t0)[10],a[11]=((C_word*)t0)[11],a[12]=((C_word*)t0)[12],a[13]=t1,tmp=(C_word)a,a+=14,tmp);
if(C_truep(t1)){
t3=(C_word)C_i_cddr(t1);
if(C_truep((C_word)C_i_nullp(t3))){
t4=t2;
f_29443(t4,C_SCHEME_FALSE);}
else{
t4=(C_word)C_i_caddr(t1);
t5=(C_word)C_eqp(t4,lf[703]);
if(C_truep(t5)){
t6=(C_word)C_i_car(t1);
t7=(C_word)C_i_member(t6,lf[704]);
t8=t2;
f_29443(t8,(C_word)C_i_not(t7));}
else{
t6=t2;
f_29443(t6,C_SCHEME_FALSE);}}}
else{
t3=t2;
f_29443(t3,C_SCHEME_FALSE);}}

/* k29441 in k29435 in do4870 in parse-then-else-dependents in k26697 in k26694 in k26691 in k26688 in k26263 in k26260 in k26257 in k26254 in k26251 in k25668 in k25665 in k25142 in k25139 in k25136 in k25133 in k25130 in k25127 in k25124 in k25121 in k25118 in k25115 in k25112 in k25109 in k25106 in k25103 in k25100 in k25097 in k25094 in k25091 in k25088 in k25085 in k25082 in k24943 in k24940 in k24937 in k24934 in k24878 in k24875 in k24872 in k24869 in k24866 in k24863 in k24860 in k24857 in k23555 in k23486 in k23293 in k23290 in k23185 in k23134 in k11783 in k10718 in k10715 in k7274 in k7271 in k6978 in k6975 in k6971 in k6680 in k6677 in k6674 in k6671 */
static void C_fcall f_29443(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word ab[22],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_29443,NULL,2,t0,t1);}
t2=(C_truep(t1)?((C_word*)t0)[13]:C_SCHEME_FALSE);
t3=C_mutate(((C_word *)((C_word*)t0)[12])+1,t2);
t4=(*a=C_CLOSURE_TYPE|12,a[1]=(C_word)f_29506,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[12],a[7]=((C_word*)t0)[6],a[8]=((C_word*)t0)[7],a[9]=((C_word*)t0)[8],a[10]=((C_word*)t0)[9],a[11]=((C_word*)t0)[10],a[12]=((C_word*)t0)[11],tmp=(C_word)a,a+=13,tmp);
t5=((C_word*)((C_word*)t0)[12])[1];
if(C_truep(t5)){
t6=t4;
f_29506(2,t6,C_SCHEME_UNDEFINED);}
else{
t6=(C_word)C_i_car(((C_word*)((C_word*)t0)[9])[1]);
C_trace("ChickenBridge.scm: 381  loop-error");
f_27049(t4,((C_word*)t0)[4],((C_word*)((C_word*)t0)[10])[1],(C_word)C_a_i_list(&a,3,lf[701],t6,lf[702]));}}

/* k29504 in k29441 in k29435 in do4870 in parse-then-else-dependents in k26697 in k26694 in k26691 in k26688 in k26263 in k26260 in k26257 in k26254 in k26251 in k25668 in k25665 in k25142 in k25139 in k25136 in k25133 in k25130 in k25127 in k25124 in k25121 in k25118 in k25115 in k25112 in k25109 in k25106 in k25103 in k25100 in k25097 in k25094 in k25091 in k25088 in k25085 in k25082 in k24943 in k24940 in k24937 in k24934 in k24878 in k24875 in k24872 in k24869 in k24866 in k24863 in k24860 in k24857 in k23555 in k23486 in k23293 in k23290 in k23185 in k23134 in k11783 in k10718 in k10715 in k7274 in k7271 in k6978 in k6975 in k6971 in k6680 in k6677 in k6674 in k6671 */
static void C_ccall f_29506(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[25],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_29506,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|11,a[1]=(C_word)f_29509,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],a[7]=((C_word*)t0)[8],a[8]=((C_word*)t0)[9],a[9]=((C_word*)t0)[10],a[10]=((C_word*)t0)[11],a[11]=((C_word*)t0)[12],tmp=(C_word)a,a+=12,tmp);
t3=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_29579,a[2]=((C_word*)t0)[12],a[3]=((C_word*)t0)[2],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[10],a[6]=((C_word*)t0)[6],a[7]=((C_word)li460),tmp=(C_word)a,a+=8,tmp);
t4=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_29592,a[2]=((C_word*)t0)[9],a[3]=((C_word*)t0)[5],a[4]=((C_word)li461),tmp=(C_word)a,a+=5,tmp);
C_trace("ChickenBridge.scm: 381  call-with-values");
C_call_with_values(4,0,t2,t3,t4);}

/* a29591 in k29504 in k29441 in k29435 in do4870 in parse-then-else-dependents in k26697 in k26694 in k26691 in k26688 in k26263 in k26260 in k26257 in k26254 in k26251 in k25668 in k25665 in k25142 in k25139 in k25136 in k25133 in k25130 in k25127 in k25124 in k25121 in k25118 in k25115 in k25112 in k25109 in k25106 in k25103 in k25100 in k25097 in k25094 in k25091 in k25088 in k25085 in k25082 in k24943 in k24940 in k24937 in k24934 in k24878 in k24875 in k24872 in k24869 in k24866 in k24863 in k24860 in k24857 in k23555 in k23486 in k23293 in k23290 in k23185 in k23134 in k11783 in k10718 in k10715 in k7274 in k7271 in k6978 in k6975 in k6971 in k6680 in k6677 in k6674 in k6671 */
static void C_ccall f_29592(C_word c,C_word t0,C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word t6;
C_word *a;
if(c!=4) C_bad_argc_2(c,4,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr4,(void*)f_29592,4,t0,t1,t2,t3);}
t4=C_mutate(((C_word *)((C_word*)t0)[3])+1,t2);
t5=C_mutate(((C_word *)((C_word*)t0)[2])+1,t3);
t6=t1;
((C_proc2)(void*)(*((C_word*)t6+1)))(2,t6,t5);}

/* a29578 in k29504 in k29441 in k29435 in do4870 in parse-then-else-dependents in k26697 in k26694 in k26691 in k26688 in k26263 in k26260 in k26257 in k26254 in k26251 in k25668 in k25665 in k25142 in k25139 in k25136 in k25133 in k25130 in k25127 in k25124 in k25121 in k25118 in k25115 in k25112 in k25109 in k25106 in k25103 in k25100 in k25097 in k25094 in k25091 in k25088 in k25085 in k25082 in k24943 in k24940 in k24937 in k24934 in k24878 in k24875 in k24872 in k24869 in k24866 in k24863 in k24860 in k24857 in k23555 in k23486 in k23293 in k23290 in k23185 in k23134 in k11783 in k10718 in k10715 in k7274 in k7271 in k6978 in k6975 in k6971 in k6680 in k6677 in k6674 in k6671 */
static void C_ccall f_29579(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[6],*a=ab;
if(c!=2) C_bad_argc_2(c,2,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_29579,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_29587,a[2]=((C_word*)t0)[4],a[3]=((C_word*)t0)[5],a[4]=t1,a[5]=((C_word*)t0)[6],tmp=(C_word)a,a+=6,tmp);
C_trace("ChickenBridge.scm: 381  append");
t3=*((C_word*)lf[18]+1);
((C_proc4)C_retrieve_proc(t3))(4,t3,t2,((C_word*)t0)[3],((C_word*)((C_word*)t0)[2])[1]);}

/* k29585 in a29578 in k29504 in k29441 in k29435 in do4870 in parse-then-else-dependents in k26697 in k26694 in k26691 in k26688 in k26263 in k26260 in k26257 in k26254 in k26251 in k25668 in k25665 in k25142 in k25139 in k25136 in k25133 in k25130 in k25127 in k25124 in k25121 in k25118 in k25115 in k25112 in k25109 in k25106 in k25103 in k25100 in k25097 in k25094 in k25091 in k25088 in k25085 in k25082 in k24943 in k24940 in k24937 in k24934 in k24878 in k24875 in k24872 in k24869 in k24866 in k24863 in k24860 in k24857 in k23555 in k23486 in k23293 in k23290 in k23185 in k23134 in k11783 in k10718 in k10715 in k7274 in k7271 in k6978 in k6975 in k6971 in k6680 in k6677 in k6674 in k6671 */
static void C_ccall f_29587(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word *a;
t2=(C_word)C_i_cadr(((C_word*)((C_word*)t0)[5])[1]);
t3=t2;
((C_proc5)C_retrieve_proc(t3))(5,t3,((C_word*)t0)[4],((C_word*)((C_word*)t0)[3])[1],t1,((C_word*)t0)[2]);}

/* k29507 in k29504 in k29441 in k29435 in do4870 in parse-then-else-dependents in k26697 in k26694 in k26691 in k26688 in k26263 in k26260 in k26257 in k26254 in k26251 in k25668 in k25665 in k25142 in k25139 in k25136 in k25133 in k25130 in k25127 in k25124 in k25121 in k25118 in k25115 in k25112 in k25109 in k25106 in k25103 in k25100 in k25097 in k25094 in k25091 in k25088 in k25085 in k25082 in k24943 in k24940 in k24937 in k24934 in k24878 in k24875 in k24872 in k24869 in k24866 in k24863 in k24860 in k24857 in k23555 in k23486 in k23293 in k23290 in k23185 in k23134 in k11783 in k10718 in k10715 in k7274 in k7271 in k6978 in k6975 in k6971 in k6680 in k6677 in k6674 in k6671 */
static void C_ccall f_29509(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[15],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_29509,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|11,a[1]=(C_word)f_29513,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],a[7]=((C_word*)t0)[7],a[8]=((C_word*)t0)[8],a[9]=((C_word*)t0)[9],a[10]=((C_word*)t0)[10],a[11]=((C_word*)t0)[11],tmp=(C_word)a,a+=12,tmp);
t3=(C_word)C_a_i_list(&a,1,((C_word*)((C_word*)t0)[4])[1]);
C_trace("ChickenBridge.scm: 381  append");
t4=*((C_word*)lf[18]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,((C_word*)((C_word*)t0)[11])[1],t3);}

/* k29511 in k29507 in k29504 in k29441 in k29435 in do4870 in parse-then-else-dependents in k26697 in k26694 in k26691 in k26688 in k26263 in k26260 in k26257 in k26254 in k26251 in k25668 in k25665 in k25142 in k25139 in k25136 in k25133 in k25130 in k25127 in k25124 in k25121 in k25118 in k25115 in k25112 in k25109 in k25106 in k25103 in k25100 in k25097 in k25094 in k25091 in k25088 in k25085 in k25082 in k24943 in k24940 in k24937 in k24934 in k24878 in k24875 in k24872 in k24869 in k24866 in k24863 in k24860 in k24857 in k23555 in k23486 in k23293 in k23290 in k23185 in k23134 in k11783 in k10718 in k10715 in k7274 in k7271 in k6978 in k6975 in k6971 in k6680 in k6677 in k6674 in k6671 */
static void C_ccall f_29513(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word t14;
C_word t15;
C_word ab[14],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_29513,2,t0,t1);}
t2=C_mutate(((C_word *)((C_word*)t0)[11])+1,t1);
t3=C_mutate(((C_word *)((C_word*)t0)[10])+1,((C_word*)((C_word*)t0)[9])[1]);
t4=C_mutate(((C_word *)((C_word*)t0)[9])+1,((C_word*)((C_word*)t0)[8])[1]);
t5=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_29518,a[2]=((C_word*)t0)[8],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
if(C_truep((C_word)C_i_nullp(((C_word*)((C_word*)t0)[9])[1]))){
t6=t5;
f_29518(2,t6,C_SCHEME_UNDEFINED);}
else{
t6=(C_word)C_i_car(((C_word*)((C_word*)t0)[9])[1]);
t7=(C_word)C_eqp(t6,lf[456]);
if(C_truep(t7)){
t8=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[9])[1]);
t9=C_mutate(((C_word *)((C_word*)t0)[9])+1,t8);
if(C_truep((C_word)C_i_nullp(((C_word*)((C_word*)t0)[9])[1]))){
C_trace("ChickenBridge.scm: 381  loop-error");
f_27049(t5,((C_word*)t0)[3],((C_word*)((C_word*)t0)[10])[1],(C_word)C_a_i_list(&a,1,lf[700]));}
else{
t10=t5;
f_29518(2,t10,C_SCHEME_UNDEFINED);}}
else{
t8=(C_word)C_i_car(((C_word*)((C_word*)t0)[9])[1]);
t9=(C_word)C_eqp(t8,lf[16]);
if(C_truep(t9)){
t10=C_set_block_item(((C_word*)t0)[2],0,C_SCHEME_TRUE);
t11=t5;
f_29518(2,t11,t10);}
else{
t10=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_29556,a[2]=t5,a[3]=((C_word*)t0)[2],tmp=(C_word)a,a+=4,tmp);
t11=(C_word)C_i_car(((C_word*)((C_word*)t0)[9])[1]);
C_trace("ChickenBridge.scm: 381  loop-op?");
f_27031(t10,t11,((C_word*)t0)[3]);}}}}

/* k29554 in k29511 in k29507 in k29504 in k29441 in k29435 in do4870 in parse-then-else-dependents in k26697 in k26694 in k26691 in k26688 in k26263 in k26260 in k26257 in k26254 in k26251 in k25668 in k25665 in k25142 in k25139 in k25136 in k25133 in k25130 in k25127 in k25124 in k25121 in k25118 in k25115 in k25112 in k25109 in k25106 in k25103 in k25100 in k25097 in k25094 in k25091 in k25088 in k25085 in k25082 in k24943 in k24940 in k24937 in k24934 in k24878 in k24875 in k24872 in k24869 in k24866 in k24863 in k24860 in k24857 in k23555 in k23486 in k23293 in k23290 in k23185 in k23134 in k11783 in k10718 in k10715 in k7274 in k7271 in k6978 in k6975 in k6971 in k6680 in k6677 in k6674 in k6671 */
static void C_ccall f_29556(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word *a;
if(C_truep(t1)){
t2=C_set_block_item(((C_word*)t0)[3],0,C_SCHEME_TRUE);
t3=((C_word*)t0)[2];
f_29518(2,t3,t2);}
else{
t2=((C_word*)t0)[2];
f_29518(2,t2,C_SCHEME_UNDEFINED);}}

/* k29516 in k29511 in k29507 in k29504 in k29441 in k29435 in do4870 in parse-then-else-dependents in k26697 in k26694 in k26691 in k26688 in k26263 in k26260 in k26257 in k26254 in k26251 in k25668 in k25665 in k25142 in k25139 in k25136 in k25133 in k25130 in k25127 in k25124 in k25121 in k25118 in k25115 in k25112 in k25109 in k25106 in k25103 in k25100 in k25097 in k25094 in k25091 in k25088 in k25085 in k25082 in k24943 in k24940 in k24937 in k24934 in k24878 in k24875 in k24872 in k24869 in k24866 in k24863 in k24860 in k24857 in k23555 in k23486 in k23293 in k23290 in k23185 in k23134 in k11783 in k10718 in k10715 in k7274 in k7271 in k6978 in k6975 in k6971 in k6680 in k6677 in k6674 in k6671 */
static void C_ccall f_29518(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
t2=((C_word*)((C_word*)t0)[6])[1];
f_29489(t2,((C_word*)t0)[5],((C_word*)((C_word*)t0)[4])[1],((C_word*)((C_word*)t0)[3])[1],((C_word*)((C_word*)t0)[2])[1]);}

/* k29482 in parse-then-else-dependents in k26697 in k26694 in k26691 in k26688 in k26263 in k26260 in k26257 in k26254 in k26251 in k25668 in k25665 in k25142 in k25139 in k25136 in k25133 in k25130 in k25127 in k25124 in k25121 in k25118 in k25115 in k25112 in k25109 in k25106 in k25103 in k25100 in k25097 in k25094 in k25091 in k25088 in k25085 in k25082 in k24943 in k24940 in k24937 in k24934 in k24878 in k24875 in k24872 in k24869 in k24866 in k24863 in k24860 in k24857 in k23555 in k23486 in k23293 in k23290 in k23185 in k23134 in k11783 in k10718 in k10715 in k7274 in k7271 in k6978 in k6975 in k6971 in k6680 in k6677 in k6674 in k6671 */
static void C_ccall f_29484(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 381  values");
C_values(4,0,((C_word*)t0)[4],((C_word*)((C_word*)t0)[3])[1],((C_word*)((C_word*)t0)[2])[1]);}

/* parse-return in k26697 in k26694 in k26691 in k26688 in k26263 in k26260 in k26257 in k26254 in k26251 in k25668 in k25665 in k25142 in k25139 in k25136 in k25133 in k25130 in k25127 in k25124 in k25121 in k25118 in k25115 in k25112 in k25109 in k25106 in k25103 in k25100 in k25097 in k25094 in k25091 in k25088 in k25085 in k25082 in k24943 in k24940 in k24937 in k24934 in k24878 in k24875 in k24872 in k24869 in k24866 in k24863 in k24860 in k24857 in k23555 in k23486 in k23293 in k23290 in k23185 in k23134 in k11783 in k10718 in k10715 in k7274 in k7271 in k6978 in k6975 in k6971 in k6680 in k6677 in k6674 in k6671 */
static void C_ccall f_29379(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4){
C_word tmp;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word t14;
C_word ab[23],*a=ab;
if(c!=5) C_bad_argc_2(c,5,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr5,(void*)f_29379,5,t0,t1,t2,t3,t4);}
t5=(*a=C_VECTOR_TYPE|1,a[1]=t2,tmp=(C_word)a,a+=2,tmp);
t6=(C_word)C_i_car(((C_word*)t5)[1]);
t7=C_SCHEME_FALSE;
t8=(*a=C_VECTOR_TYPE|1,a[1]=t7,tmp=(C_word)a,a+=2,tmp);
t9=C_SCHEME_FALSE;
t10=(*a=C_VECTOR_TYPE|1,a[1]=t9,tmp=(C_word)a,a+=2,tmp);
t11=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_29386,a[2]=t4,a[3]=t6,a[4]=t1,a[5]=t10,a[6]=t8,a[7]=t5,tmp=(C_word)a,a+=8,tmp);
t12=(C_word)C_i_cdr(((C_word*)t5)[1]);
if(C_truep((C_word)C_i_nullp(t12))){
t13=(C_word)C_i_car(((C_word*)t5)[1]);
C_trace("ChickenBridge.scm: 381  loop-error");
f_27049(t11,t4,((C_word*)t5)[1],(C_word)C_a_i_list(&a,3,lf[697],t13,lf[698]));}
else{
t13=t11;
f_29386(2,t13,C_SCHEME_UNDEFINED);}}

/* k29384 in parse-return in k26697 in k26694 in k26691 in k26688 in k26263 in k26260 in k26257 in k26254 in k26251 in k25668 in k25665 in k25142 in k25139 in k25136 in k25133 in k25130 in k25127 in k25124 in k25121 in k25118 in k25115 in k25112 in k25109 in k25106 in k25103 in k25100 in k25097 in k25094 in k25091 in k25088 in k25085 in k25082 in k24943 in k24940 in k24937 in k24934 in k24878 in k24875 in k24872 in k24869 in k24866 in k24863 in k24860 in k24857 in k23555 in k23486 in k23293 in k23290 in k23185 in k23134 in k11783 in k10718 in k10715 in k7274 in k7271 in k6978 in k6975 in k6971 in k6680 in k6677 in k6674 in k6671 */
static void C_ccall f_29386(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word ab[6],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_29386,2,t0,t1);}
t2=(C_word)C_i_cadr(((C_word*)((C_word*)t0)[7])[1]);
t3=C_mutate(((C_word *)((C_word*)t0)[6])+1,t2);
t4=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[7])[1]);
t5=C_mutate(((C_word *)((C_word*)t0)[7])+1,t4);
t6=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_29417,a[2]=((C_word*)t0)[6],a[3]=((C_word*)t0)[7],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],tmp=(C_word)a,a+=6,tmp);
C_trace("ChickenBridge.scm: 381  loop-op?");
f_27031(t6,((C_word*)t0)[3],((C_word*)t0)[2]);}

/* k29415 in k29384 in parse-return in k26697 in k26694 in k26691 in k26688 in k26263 in k26260 in k26257 in k26254 in k26251 in k25668 in k25665 in k25142 in k25139 in k25136 in k25133 in k25130 in k25127 in k25124 in k25121 in k25118 in k25115 in k25112 in k25109 in k25106 in k25103 in k25100 in k25097 in k25094 in k25091 in k25088 in k25085 in k25082 in k24943 in k24940 in k24937 in k24934 in k24878 in k24875 in k24872 in k24869 in k24866 in k24863 in k24860 in k24857 in k23555 in k23486 in k23293 in k23290 in k23185 in k23134 in k11783 in k10718 in k10715 in k7274 in k7271 in k6978 in k6975 in k6971 in k6680 in k6677 in k6674 in k6671 */
static void C_ccall f_29417(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_29417,2,t0,t1);}
t2=(C_word)C_i_cadddr(t1);
t3=C_mutate(((C_word *)((C_word*)t0)[5])+1,t2);
t4=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_29405,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],tmp=(C_word)a,a+=4,tmp);
t5=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_29413,a[2]=t4,tmp=(C_word)a,a+=3,tmp);
C_trace("ChickenBridge.scm: 381  func");
t6=((C_word*)((C_word*)t0)[5])[1];
((C_proc3)C_retrieve_proc(t6))(3,t6,t5,((C_word*)((C_word*)t0)[2])[1]);}

/* k29411 in k29415 in k29384 in parse-return in k26697 in k26694 in k26691 in k26688 in k26263 in k26260 in k26257 in k26254 in k26251 in k25668 in k25665 in k25142 in k25139 in k25136 in k25133 in k25130 in k25127 in k25124 in k25121 in k25118 in k25115 in k25112 in k25109 in k25106 in k25103 in k25100 in k25097 in k25094 in k25091 in k25088 in k25085 in k25082 in k24943 in k24940 in k24937 in k24934 in k24878 in k24875 in k24872 in k24869 in k24866 in k24863 in k24860 in k24857 in k23555 in k23486 in k23293 in k23290 in k23185 in k23134 in k11783 in k10718 in k10715 in k7274 in k7271 in k6978 in k6975 in k6971 in k6680 in k6677 in k6674 in k6671 */
static void C_ccall f_29413(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[15],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_29413,2,t0,t1);}
t2=(C_word)C_a_i_list(&a,1,t1);
C_trace("ChickenBridge.scm: 381  make-loop-clause");
f_26809(((C_word*)t0)[2],(C_word)C_a_i_list(&a,4,lf[542],lf[683],lf[547],t2));}

/* k29403 in k29415 in k29384 in parse-return in k26697 in k26694 in k26691 in k26688 in k26263 in k26260 in k26257 in k26254 in k26251 in k25668 in k25665 in k25142 in k25139 in k25136 in k25133 in k25130 in k25127 in k25124 in k25121 in k25118 in k25115 in k25112 in k25109 in k25106 in k25103 in k25100 in k25097 in k25094 in k25091 in k25088 in k25085 in k25082 in k24943 in k24940 in k24937 in k24934 in k24878 in k24875 in k24872 in k24869 in k24866 in k24863 in k24860 in k24857 in k23555 in k23486 in k23293 in k23290 in k23185 in k23134 in k11783 in k10718 in k10715 in k7274 in k7271 in k6978 in k6975 in k6971 in k6680 in k6677 in k6674 in k6671 */
static void C_ccall f_29405(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 381  values");
C_values(4,0,((C_word*)t0)[3],t1,((C_word*)((C_word*)t0)[2])[1]);}

/* parse-thereis in k26697 in k26694 in k26691 in k26688 in k26263 in k26260 in k26257 in k26254 in k26251 in k25668 in k25665 in k25142 in k25139 in k25136 in k25133 in k25130 in k25127 in k25124 in k25121 in k25118 in k25115 in k25112 in k25109 in k25106 in k25103 in k25100 in k25097 in k25094 in k25091 in k25088 in k25085 in k25082 in k24943 in k24940 in k24937 in k24934 in k24878 in k24875 in k24872 in k24869 in k24866 in k24863 in k24860 in k24857 in k23555 in k23486 in k23293 in k23290 in k23185 in k23134 in k11783 in k10718 in k10715 in k7274 in k7271 in k6978 in k6975 in k6971 in k6680 in k6677 in k6674 in k6671 */
static void C_ccall f_29288(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4){
C_word tmp;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word t14;
C_word t15;
C_word t16;
C_word ab[26],*a=ab;
if(c!=5) C_bad_argc_2(c,5,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr5,(void*)f_29288,5,t0,t1,t2,t3,t4);}
t5=(*a=C_VECTOR_TYPE|1,a[1]=t2,tmp=(C_word)a,a+=2,tmp);
t6=(C_word)C_i_car(((C_word*)t5)[1]);
t7=C_SCHEME_FALSE;
t8=(*a=C_VECTOR_TYPE|1,a[1]=t7,tmp=(C_word)a,a+=2,tmp);
t9=C_SCHEME_FALSE;
t10=(*a=C_VECTOR_TYPE|1,a[1]=t9,tmp=(C_word)a,a+=2,tmp);
t11=C_SCHEME_FALSE;
t12=(*a=C_VECTOR_TYPE|1,a[1]=t11,tmp=(C_word)a,a+=2,tmp);
t13=(*a=C_CLOSURE_TYPE|8,a[1]=(C_word)f_29295,a[2]=t4,a[3]=t6,a[4]=t10,a[5]=t1,a[6]=t12,a[7]=t8,a[8]=t5,tmp=(C_word)a,a+=9,tmp);
t14=(C_word)C_i_cdr(((C_word*)t5)[1]);
if(C_truep((C_word)C_i_nullp(t14))){
t15=(C_word)C_i_car(((C_word*)t5)[1]);
C_trace("ChickenBridge.scm: 381  loop-error");
f_27049(t13,t4,((C_word*)t5)[1],(C_word)C_a_i_list(&a,3,lf[694],t15,lf[695]));}
else{
t15=t13;
f_29295(2,t15,C_SCHEME_UNDEFINED);}}

/* k29293 in parse-thereis in k26697 in k26694 in k26691 in k26688 in k26263 in k26260 in k26257 in k26254 in k26251 in k25668 in k25665 in k25142 in k25139 in k25136 in k25133 in k25130 in k25127 in k25124 in k25121 in k25118 in k25115 in k25112 in k25109 in k25106 in k25103 in k25100 in k25097 in k25094 in k25091 in k25088 in k25085 in k25082 in k24943 in k24940 in k24937 in k24934 in k24878 in k24875 in k24872 in k24869 in k24866 in k24863 in k24860 in k24857 in k23555 in k23486 in k23293 in k23290 in k23185 in k23134 in k11783 in k10718 in k10715 in k7274 in k7271 in k6978 in k6975 in k6971 in k6680 in k6677 in k6674 in k6671 */
static void C_ccall f_29295(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[8],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_29295,2,t0,t1);}
t2=(C_word)C_i_cadr(((C_word*)((C_word*)t0)[8])[1]);
t3=C_mutate(((C_word *)((C_word*)t0)[7])+1,t2);
t4=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_29363,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[7],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[8],a[7]=((C_word*)t0)[6],tmp=(C_word)a,a+=8,tmp);
C_trace("ChickenBridge.scm: 381  loop-op?");
f_27031(t4,((C_word*)t0)[3],((C_word*)t0)[2]);}

/* k29361 in k29293 in parse-thereis in k26697 in k26694 in k26691 in k26688 in k26263 in k26260 in k26257 in k26254 in k26251 in k25668 in k25665 in k25142 in k25139 in k25136 in k25133 in k25130 in k25127 in k25124 in k25121 in k25118 in k25115 in k25112 in k25109 in k25106 in k25103 in k25100 in k25097 in k25094 in k25091 in k25088 in k25085 in k25082 in k24943 in k24940 in k24937 in k24934 in k24878 in k24875 in k24872 in k24869 in k24866 in k24863 in k24860 in k24857 in k23555 in k23486 in k23293 in k23290 in k23185 in k23134 in k11783 in k10718 in k10715 in k7274 in k7271 in k6978 in k6975 in k6971 in k6680 in k6677 in k6674 in k6671 */
static void C_ccall f_29363(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word ab[13],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_29363,2,t0,t1);}
t2=(C_word)C_i_cadddr(t1);
t3=C_mutate(((C_word *)((C_word*)t0)[7])+1,t2);
t4=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_29306,a[2]=((C_word*)t0)[7],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],tmp=(C_word)a,a+=7,tmp);
t5=(C_word)C_eqp(((C_word*)t0)[2],lf[691]);
if(C_truep(t5)){
t6=C_set_block_item(((C_word*)t0)[3],0,C_SCHEME_FALSE);
t7=t4;
f_29306(t7,t6);}
else{
t6=(C_word)C_eqp(((C_word*)t0)[2],lf[692]);
if(C_truep(t6)){
t7=(C_word)C_a_i_list(&a,2,lf[458],((C_word*)((C_word*)t0)[4])[1]);
t8=C_mutate(((C_word *)((C_word*)t0)[4])+1,t7);
t9=C_set_block_item(((C_word*)t0)[3],0,C_SCHEME_TRUE);
t10=t4;
f_29306(t10,t9);}
else{
t7=(C_word)C_eqp(((C_word*)t0)[2],lf[693]);
if(C_truep(t7)){
t8=C_set_block_item(((C_word*)t0)[3],0,C_SCHEME_TRUE);
t9=t4;
f_29306(t9,t8);}
else{
t8=t4;
f_29306(t8,C_SCHEME_UNDEFINED);}}}}

/* k29304 in k29361 in k29293 in parse-thereis in k26697 in k26694 in k26691 in k26688 in k26263 in k26260 in k26257 in k26254 in k26251 in k25668 in k25665 in k25142 in k25139 in k25136 in k25133 in k25130 in k25127 in k25124 in k25121 in k25118 in k25115 in k25112 in k25109 in k25106 in k25103 in k25100 in k25097 in k25094 in k25091 in k25088 in k25085 in k25082 in k24943 in k24940 in k24937 in k24934 in k24878 in k24875 in k24872 in k24869 in k24866 in k24863 in k24860 in k24857 in k23555 in k23486 in k23293 in k23290 in k23185 in k23134 in k11783 in k10718 in k10715 in k7274 in k7271 in k6978 in k6975 in k6971 in k6680 in k6677 in k6674 in k6671 */
static void C_fcall f_29306(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_29306,NULL,2,t0,t1);}
t2=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[6])[1]);
t3=C_mutate(((C_word *)((C_word*)t0)[6])+1,t2);
t4=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_29317,a[2]=((C_word*)t0)[6],a[3]=((C_word*)t0)[5],tmp=(C_word)a,a+=4,tmp);
t5=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_29333,a[2]=t4,a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],tmp=(C_word)a,a+=5,tmp);
t6=(C_word)C_i_not(((C_word*)((C_word*)t0)[3])[1]);
C_trace("ChickenBridge.scm: 381  func");
t7=((C_word*)((C_word*)t0)[2])[1];
((C_proc3)C_retrieve_proc(t7))(3,t7,t5,t6);}

/* k29331 in k29304 in k29361 in k29293 in parse-thereis in k26697 in k26694 in k26691 in k26688 in k26263 in k26260 in k26257 in k26254 in k26251 in k25668 in k25665 in k25142 in k25139 in k25136 in k25133 in k25130 in k25127 in k25124 in k25121 in k25118 in k25115 in k25112 in k25109 in k25106 in k25103 in k25100 in k25097 in k25094 in k25091 in k25088 in k25085 in k25082 in k24943 in k24940 in k24937 in k24934 in k24878 in k24875 in k24872 in k24869 in k24866 in k24863 in k24860 in k24857 in k23555 in k23486 in k23293 in k23290 in k23185 in k23134 in k11783 in k10718 in k10715 in k7274 in k7271 in k6978 in k6975 in k6971 in k6680 in k6677 in k6674 in k6671 */
static void C_ccall f_29333(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[33],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_29333,2,t0,t1);}
t2=(C_word)C_a_i_list(&a,3,lf[20],((C_word*)((C_word*)t0)[4])[1],t1);
t3=(C_word)C_a_i_list(&a,1,t2);
t4=(C_word)C_a_i_list(&a,1,((C_word*)((C_word*)t0)[3])[1]);
C_trace("ChickenBridge.scm: 381  make-loop-clause");
f_26809(((C_word*)t0)[2],(C_word)C_a_i_list(&a,6,lf[542],lf[691],lf[547],t3,lf[550],t4));}

/* k29315 in k29304 in k29361 in k29293 in parse-thereis in k26697 in k26694 in k26691 in k26688 in k26263 in k26260 in k26257 in k26254 in k26251 in k25668 in k25665 in k25142 in k25139 in k25136 in k25133 in k25130 in k25127 in k25124 in k25121 in k25118 in k25115 in k25112 in k25109 in k25106 in k25103 in k25100 in k25097 in k25094 in k25091 in k25088 in k25085 in k25082 in k24943 in k24940 in k24937 in k24934 in k24878 in k24875 in k24872 in k24869 in k24866 in k24863 in k24860 in k24857 in k23555 in k23486 in k23293 in k23290 in k23185 in k23134 in k11783 in k10718 in k10715 in k7274 in k7271 in k6978 in k6975 in k6971 in k6680 in k6677 in k6674 in k6671 */
static void C_ccall f_29317(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 381  values");
C_values(4,0,((C_word*)t0)[3],t1,((C_word*)((C_word*)t0)[2])[1]);}

/* parse-while-until in k26697 in k26694 in k26691 in k26688 in k26263 in k26260 in k26257 in k26254 in k26251 in k25668 in k25665 in k25142 in k25139 in k25136 in k25133 in k25130 in k25127 in k25124 in k25121 in k25118 in k25115 in k25112 in k25109 in k25106 in k25103 in k25100 in k25097 in k25094 in k25091 in k25088 in k25085 in k25082 in k24943 in k24940 in k24937 in k24934 in k24878 in k24875 in k24872 in k24869 in k24866 in k24863 in k24860 in k24857 in k23555 in k23486 in k23293 in k23290 in k23185 in k23134 in k11783 in k10718 in k10715 in k7274 in k7271 in k6978 in k6975 in k6971 in k6680 in k6677 in k6674 in k6671 */
static void C_ccall f_29222(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4){
C_word tmp;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word ab[19],*a=ab;
if(c!=5) C_bad_argc_2(c,5,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr5,(void*)f_29222,5,t0,t1,t2,t3,t4);}
t5=(*a=C_VECTOR_TYPE|1,a[1]=t2,tmp=(C_word)a,a+=2,tmp);
t6=((C_word*)t5)[1];
t7=(C_word)C_i_car(((C_word*)t5)[1]);
t8=(C_word)C_i_cdr(((C_word*)t5)[1]);
t9=C_set_block_item(t5,0,t8);
t10=C_SCHEME_FALSE;
t11=(*a=C_VECTOR_TYPE|1,a[1]=t10,tmp=(C_word)a,a+=2,tmp);
t12=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_29233,a[2]=t7,a[3]=t11,a[4]=t5,a[5]=t1,tmp=(C_word)a,a+=6,tmp);
if(C_truep((C_word)C_i_nullp(((C_word*)t5)[1]))){
C_trace("ChickenBridge.scm: 381  loop-error");
f_27049(t12,t4,t6,(C_word)C_a_i_list(&a,3,lf[688],t7,lf[689]));}
else{
t13=t12;
f_29233(2,t13,C_SCHEME_UNDEFINED);}}

/* k29231 in parse-while-until in k26697 in k26694 in k26691 in k26688 in k26263 in k26260 in k26257 in k26254 in k26251 in k25668 in k25665 in k25142 in k25139 in k25136 in k25133 in k25130 in k25127 in k25124 in k25121 in k25118 in k25115 in k25112 in k25109 in k25106 in k25103 in k25100 in k25097 in k25094 in k25091 in k25088 in k25085 in k25082 in k24943 in k24940 in k24937 in k24934 in k24878 in k24875 in k24872 in k24869 in k24866 in k24863 in k24860 in k24857 in k23555 in k23486 in k23293 in k23290 in k23185 in k23134 in k11783 in k10718 in k10715 in k7274 in k7271 in k6978 in k6975 in k6971 in k6680 in k6677 in k6674 in k6671 */
static void C_ccall f_29233(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word t14;
C_word ab[12],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_29233,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_29236,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],tmp=(C_word)a,a+=6,tmp);
t3=(C_word)C_eqp(((C_word*)t0)[2],lf[686]);
if(C_truep(t3)){
t4=(C_word)C_i_car(((C_word*)((C_word*)t0)[4])[1]);
t5=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[4])+1,t5);
t7=C_mutate(((C_word *)((C_word*)t0)[3])+1,t4);
t8=t2;
f_29236(t8,t7);}
else{
t4=(C_word)C_eqp(((C_word*)t0)[2],lf[687]);
if(C_truep(t4)){
t5=(C_word)C_i_car(((C_word*)((C_word*)t0)[4])[1]);
t6=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
t7=C_mutate(((C_word *)((C_word*)t0)[4])+1,t6);
t8=(C_word)C_a_i_list(&a,2,lf[458],t5);
t9=C_mutate(((C_word *)((C_word*)t0)[3])+1,t8);
t10=t2;
f_29236(t10,t9);}
else{
t5=t2;
f_29236(t5,C_SCHEME_UNDEFINED);}}}

/* k29234 in k29231 in parse-while-until in k26697 in k26694 in k26691 in k26688 in k26263 in k26260 in k26257 in k26254 in k26251 in k25668 in k25665 in k25142 in k25139 in k25136 in k25133 in k25130 in k25127 in k25124 in k25121 in k25118 in k25115 in k25112 in k25109 in k25106 in k25103 in k25100 in k25097 in k25094 in k25091 in k25088 in k25085 in k25082 in k24943 in k24940 in k24937 in k24934 in k24878 in k24875 in k24872 in k24869 in k24866 in k24863 in k24860 in k24857 in k23555 in k23486 in k23293 in k23290 in k23185 in k23134 in k11783 in k10718 in k10715 in k7274 in k7271 in k6978 in k6975 in k6971 in k6680 in k6677 in k6674 in k6671 */
static void C_fcall f_29236(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[28],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_29236,NULL,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_29243,a[2]=((C_word*)t0)[4],a[3]=((C_word*)t0)[5],tmp=(C_word)a,a+=4,tmp);
t3=(C_word)C_a_i_list(&a,3,lf[20],((C_word*)((C_word*)t0)[3])[1],lf[685]);
t4=(C_word)C_a_i_list(&a,1,t3);
C_trace("ChickenBridge.scm: 381  make-loop-clause");
f_26809(t2,(C_word)C_a_i_list(&a,4,lf[542],((C_word*)t0)[2],lf[547],t4));}

/* k29241 in k29234 in k29231 in parse-while-until in k26697 in k26694 in k26691 in k26688 in k26263 in k26260 in k26257 in k26254 in k26251 in k25668 in k25665 in k25142 in k25139 in k25136 in k25133 in k25130 in k25127 in k25124 in k25121 in k25118 in k25115 in k25112 in k25109 in k25106 in k25103 in k25100 in k25097 in k25094 in k25091 in k25088 in k25085 in k25082 in k24943 in k24940 in k24937 in k24934 in k24878 in k24875 in k24872 in k24869 in k24866 in k24863 in k24860 in k24857 in k23555 in k23486 in k23293 in k23290 in k23185 in k23134 in k11783 in k10718 in k10715 in k7274 in k7271 in k6978 in k6975 in k6971 in k6680 in k6677 in k6674 in k6671 */
static void C_ccall f_29243(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 381  values");
C_values(4,0,((C_word*)t0)[3],t1,((C_word*)((C_word*)t0)[2])[1]);}

/* loop-return in k26697 in k26694 in k26691 in k26688 in k26263 in k26260 in k26257 in k26254 in k26251 in k25668 in k25665 in k25142 in k25139 in k25136 in k25133 in k25130 in k25127 in k25124 in k25121 in k25118 in k25115 in k25112 in k25109 in k25106 in k25103 in k25100 in k25097 in k25094 in k25091 in k25088 in k25085 in k25082 in k24943 in k24940 in k24937 in k24934 in k24878 in k24875 in k24872 in k24869 in k24866 in k24863 in k24860 in k24857 in k23555 in k23486 in k23293 in k23290 in k23185 in k23134 in k11783 in k10718 in k10715 in k7274 in k7271 in k6978 in k6975 in k6971 in k6680 in k6677 in k6674 in k6671 */
static void C_ccall f_29216(C_word c,C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word ab[6],*a=ab;
if(c!=3) C_bad_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr3,(void*)f_29216,3,t0,t1,t2);}
t3=t1;
((C_proc2)(void*)(*((C_word*)t3+1)))(2,t3,(C_word)C_a_i_list(&a,2,lf[683],t2));}

/* parse-accumulation in k26697 in k26694 in k26691 in k26688 in k26263 in k26260 in k26257 in k26254 in k26251 in k25668 in k25665 in k25142 in k25139 in k25136 in k25133 in k25130 in k25127 in k25124 in k25121 in k25118 in k25115 in k25112 in k25109 in k25106 in k25103 in k25100 in k25097 in k25094 in k25091 in k25088 in k25085 in k25082 in k24943 in k24940 in k24937 in k24934 in k24878 in k24875 in k24872 in k24869 in k24866 in k24863 in k24860 in k24857 in k23555 in k23486 in k23293 in k23290 in k23185 in k23134 in k11783 in k10718 in k10715 in k7274 in k7271 in k6978 in k6975 in k6971 in k6680 in k6677 in k6674 in k6671 */
static void C_ccall f_28670(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4){
C_word tmp;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word t14;
C_word t15;
C_word t16;
C_word t17;
C_word t18;
C_word t19;
C_word t20;
C_word t21;
C_word t22;
C_word t23;
C_word t24;
C_word t25;
C_word t26;
C_word t27;
C_word t28;
C_word t29;
C_word t30;
C_word ab[55],*a=ab;
if(c!=5) C_bad_argc_2(c,5,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr5,(void*)f_28670,5,t0,t1,t2,t3,t4);}
t5=(*a=C_VECTOR_TYPE|1,a[1]=t2,tmp=(C_word)a,a+=2,tmp);
t6=((C_word*)t5)[1];
t7=(C_word)C_i_car(((C_word*)t5)[1]);
t8=(C_word)C_i_cdr(((C_word*)t5)[1]);
t9=C_set_block_item(t5,0,t8);
t10=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_28679,a[2]=((C_word)li450),tmp=(C_word)a,a+=3,tmp);
t11=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_28684,a[2]=((C_word)li451),tmp=(C_word)a,a+=3,tmp);
t12=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_28689,a[2]=((C_word)li452),tmp=(C_word)a,a+=3,tmp);
t13=C_SCHEME_FALSE;
t14=(*a=C_VECTOR_TYPE|1,a[1]=t13,tmp=(C_word)a,a+=2,tmp);
t15=C_SCHEME_FALSE;
t16=(*a=C_VECTOR_TYPE|1,a[1]=t15,tmp=(C_word)a,a+=2,tmp);
t17=C_SCHEME_FALSE;
t18=(*a=C_VECTOR_TYPE|1,a[1]=t17,tmp=(C_word)a,a+=2,tmp);
t19=C_SCHEME_FALSE;
t20=(*a=C_VECTOR_TYPE|1,a[1]=t19,tmp=(C_word)a,a+=2,tmp);
t21=C_SCHEME_END_OF_LIST;
t22=(*a=C_VECTOR_TYPE|1,a[1]=t21,tmp=(C_word)a,a+=2,tmp);
t23=C_SCHEME_END_OF_LIST;
t24=(*a=C_VECTOR_TYPE|1,a[1]=t23,tmp=(C_word)a,a+=2,tmp);
t25=C_SCHEME_END_OF_LIST;
t26=(*a=C_VECTOR_TYPE|1,a[1]=t25,tmp=(C_word)a,a+=2,tmp);
t27=C_SCHEME_END_OF_LIST;
t28=(*a=C_VECTOR_TYPE|1,a[1]=t27,tmp=(C_word)a,a+=2,tmp);
t29=(*a=C_CLOSURE_TYPE|18,a[1]=(C_word)f_28701,a[2]=t3,a[3]=t11,a[4]=t6,a[5]=t4,a[6]=t12,a[7]=t10,a[8]=t20,a[9]=t24,a[10]=t26,a[11]=t22,a[12]=t28,a[13]=t7,a[14]=t18,a[15]=t1,a[16]=t16,a[17]=t14,a[18]=t5,tmp=(C_word)a,a+=19,tmp);
if(C_truep((C_word)C_i_nullp(((C_word*)t5)[1]))){
C_trace("ChickenBridge.scm: 381  loop-error");
f_27049(t29,t4,((C_word*)t5)[1],(C_word)C_a_i_list(&a,3,lf[680],t7,lf[681]));}
else{
t30=t29;
f_28701(2,t30,C_SCHEME_UNDEFINED);}}

/* k28699 in parse-accumulation in k26697 in k26694 in k26691 in k26688 in k26263 in k26260 in k26257 in k26254 in k26251 in k25668 in k25665 in k25142 in k25139 in k25136 in k25133 in k25130 in k25127 in k25124 in k25121 in k25118 in k25115 in k25112 in k25109 in k25106 in k25103 in k25100 in k25097 in k25094 in k25091 in k25088 in k25085 in k25082 in k24943 in k24940 in k24937 in k24934 in k24878 in k24875 in k24872 in k24869 in k24866 in k24863 in k24860 in k24857 in k23555 in k23486 in k23293 in k23290 in k23185 in k23134 in k11783 in k10718 in k10715 in k7274 in k7271 in k6978 in k6975 in k6971 in k6680 in k6677 in k6674 in k6671 */
static void C_ccall f_28701(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word ab[29],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_28701,2,t0,t1);}
t2=(C_word)C_i_car(((C_word*)((C_word*)t0)[18])[1]);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[18])[1]);
t4=C_mutate(((C_word *)((C_word*)t0)[18])+1,t3);
t5=C_mutate(((C_word *)((C_word*)t0)[17])+1,t2);
t6=(*a=C_CLOSURE_TYPE|18,a[1]=(C_word)f_28712,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],a[7]=((C_word*)t0)[7],a[8]=((C_word*)t0)[8],a[9]=((C_word*)t0)[17],a[10]=((C_word*)t0)[9],a[11]=((C_word*)t0)[10],a[12]=((C_word*)t0)[11],a[13]=((C_word*)t0)[12],a[14]=((C_word*)t0)[13],a[15]=((C_word*)t0)[14],a[16]=((C_word*)t0)[18],a[17]=((C_word*)t0)[15],a[18]=((C_word*)t0)[16],tmp=(C_word)a,a+=19,tmp);
if(C_truep((C_word)C_i_nullp(((C_word*)((C_word*)t0)[18])[1]))){
t7=t6;
f_28712(2,t7,C_SCHEME_UNDEFINED);}
else{
t7=(C_word)C_i_car(((C_word*)((C_word*)t0)[18])[1]);
t8=(C_word)C_eqp(t7,lf[676]);
if(C_truep(t8)){
t9=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_29165,a[2]=((C_word*)t0)[4],a[3]=((C_word*)t0)[5],a[4]=t6,a[5]=((C_word*)t0)[8],a[6]=((C_word*)t0)[18],tmp=(C_word)a,a+=7,tmp);
t10=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[18])[1]);
if(C_truep((C_word)C_i_nullp(t10))){
C_trace("ChickenBridge.scm: 381  loop-error");
f_27049(t9,((C_word*)t0)[5],((C_word*)t0)[4],(C_word)C_a_i_list(&a,1,lf[679]));}
else{
t11=t9;
f_29165(2,t11,C_SCHEME_UNDEFINED);}}
else{
t9=t6;
f_28712(2,t9,C_SCHEME_UNDEFINED);}}}

/* k29163 in k28699 in parse-accumulation in k26697 in k26694 in k26691 in k26688 in k26263 in k26260 in k26257 in k26254 in k26251 in k25668 in k25665 in k25142 in k25139 in k25136 in k25133 in k25130 in k25127 in k25124 in k25121 in k25118 in k25115 in k25112 in k25109 in k25106 in k25103 in k25100 in k25097 in k25094 in k25091 in k25088 in k25085 in k25082 in k24943 in k24940 in k24937 in k24934 in k24878 in k24875 in k24872 in k24869 in k24866 in k24863 in k24860 in k24857 in k23555 in k23486 in k23293 in k23290 in k23185 in k23134 in k11783 in k10718 in k10715 in k7274 in k7271 in k6978 in k6975 in k6971 in k6680 in k6677 in k6674 in k6671 */
static void C_ccall f_29165(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_29165,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_29171,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cadr(((C_word*)((C_word*)t0)[6])[1]);
C_trace("ChickenBridge.scm: 381  loop-variable?");
f_27037(t2,t3);}

/* k29169 in k29163 in k28699 in parse-accumulation in k26697 in k26694 in k26691 in k26688 in k26263 in k26260 in k26257 in k26254 in k26251 in k25668 in k25665 in k25142 in k25139 in k25136 in k25133 in k25130 in k25127 in k25124 in k25121 in k25118 in k25115 in k25112 in k25109 in k25106 in k25103 in k25100 in k25097 in k25094 in k25091 in k25088 in k25085 in k25082 in k24943 in k24940 in k24937 in k24934 in k24878 in k24875 in k24872 in k24869 in k24866 in k24863 in k24860 in k24857 in k23555 in k23486 in k23293 in k23290 in k23185 in k23134 in k11783 in k10718 in k10715 in k7274 in k7271 in k6978 in k6975 in k6971 in k6680 in k6677 in k6674 in k6671 */
static void C_ccall f_29171(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_29171,2,t0,t1);}
if(C_truep(t1)){
t2=(C_word)C_i_cadr(((C_word*)((C_word*)t0)[6])[1]);
t3=C_mutate(((C_word *)((C_word*)t0)[5])+1,t2);
t4=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[6])[1]);
t5=C_mutate(((C_word *)((C_word*)t0)[6])+1,t4);
t6=((C_word*)t0)[4];
f_28712(2,t6,t5);}
else{
t2=(C_word)C_i_car(((C_word*)((C_word*)t0)[6])[1]);
C_trace("ChickenBridge.scm: 381  loop-error");
f_27049(((C_word*)t0)[4],((C_word*)t0)[3],((C_word*)t0)[2],(C_word)C_a_i_list(&a,3,lf[677],t2,lf[678]));}}

/* k28710 in k28699 in parse-accumulation in k26697 in k26694 in k26691 in k26688 in k26263 in k26260 in k26257 in k26254 in k26251 in k25668 in k25665 in k25142 in k25139 in k25136 in k25133 in k25130 in k25127 in k25124 in k25121 in k25118 in k25115 in k25112 in k25109 in k25106 in k25103 in k25100 in k25097 in k25094 in k25091 in k25088 in k25085 in k25082 in k24943 in k24940 in k24937 in k24934 in k24878 in k24875 in k24872 in k24869 in k24866 in k24863 in k24860 in k24857 in k23555 in k23486 in k23293 in k23290 in k23185 in k23134 in k11783 in k10718 in k10715 in k7274 in k7271 in k6978 in k6975 in k6971 in k6680 in k6677 in k6674 in k6671 */
static void C_ccall f_28712(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word ab[28],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_28712,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|17,a[1]=(C_word)f_28716,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],a[7]=((C_word*)t0)[8],a[8]=((C_word*)t0)[9],a[9]=((C_word*)t0)[10],a[10]=((C_word*)t0)[11],a[11]=((C_word*)t0)[12],a[12]=((C_word*)t0)[13],a[13]=((C_word*)t0)[14],a[14]=((C_word*)t0)[15],a[15]=((C_word*)t0)[16],a[16]=((C_word*)t0)[17],a[17]=((C_word*)t0)[18],tmp=(C_word)a,a+=18,tmp);
t3=((C_word*)((C_word*)t0)[8])[1];
t4=((C_word*)t0)[2];
t5=(*a=C_VECTOR_TYPE|1,a[1]=t4,tmp=(C_word)a,a+=2,tmp);
t6=C_SCHEME_UNDEFINED;
t7=(*a=C_VECTOR_TYPE|1,a[1]=t6,tmp=(C_word)a,a+=2,tmp);
t8=C_set_block_item(t7,0,(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_28597,a[2]=t3,a[3]=t7,a[4]=t5,a[5]=((C_word)li454),tmp=(C_word)a,a+=6,tmp));
t9=((C_word*)t7)[1];
f_28597(t9,t2,C_SCHEME_FALSE);}

/* do4692 in k28710 in k28699 in parse-accumulation in k26697 in k26694 in k26691 in k26688 in k26263 in k26260 in k26257 in k26254 in k26251 in k25668 in k25665 in k25142 in k25139 in k25136 in k25133 in k25130 in k25127 in k25124 in k25121 in k25118 in k25115 in k25112 in k25109 in k25106 in k25103 in k25100 in k25097 in k25094 in k25091 in k25088 in k25085 in k25082 in k24943 in k24940 in k24937 in k24934 in k24878 in k24875 in k24872 in k24869 in k24866 in k24863 in k24860 in k24857 in k23555 in k23486 in k23293 in k23290 in k23185 in k23134 in k11783 in k10718 in k10715 in k7274 in k7271 in k6978 in k6975 in k6971 in k6680 in k6677 in k6674 in k6671 */
static void C_fcall f_28597(C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word ab[12],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_28597,NULL,3,t0,t1,t2);}
t3=(*a=C_VECTOR_TYPE|1,a[1]=t2,tmp=(C_word)a,a+=2,tmp);
t4=(C_word)C_i_nullp(((C_word*)((C_word*)t0)[4])[1]);
t5=(C_truep(t4)?t4:((C_word*)t3)[1]);
if(C_truep(t5)){
t6=t1;
((C_proc2)(void*)(*((C_word*)t6+1)))(2,t6,((C_word*)t3)[1]);}
else{
t6=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_28611,a[2]=t1,a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=t3,tmp=(C_word)a,a+=6,tmp);
t7=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_28622,a[2]=t6,a[3]=((C_word*)t0)[2],tmp=(C_word)a,a+=4,tmp);
t8=(C_word)C_i_car(((C_word*)((C_word*)t0)[4])[1]);
C_trace("ChickenBridge.scm: 381  loop-collectors");
t9=C_retrieve2(lf[533],"loop-collectors");
f_26725(3,t9,t7,t8);}}

/* k28620 in do4692 in k28710 in k28699 in parse-accumulation in k26697 in k26694 in k26691 in k26688 in k26263 in k26260 in k26257 in k26254 in k26251 in k25668 in k25665 in k25142 in k25139 in k25136 in k25133 in k25130 in k25127 in k25124 in k25121 in k25118 in k25115 in k25112 in k25109 in k25106 in k25103 in k25100 in k25097 in k25094 in k25091 in k25088 in k25085 in k25082 in k24943 in k24940 in k24937 in k24934 in k24878 in k24875 in k24872 in k24869 in k24866 in k24863 in k24860 in k24857 in k23555 in k23486 in k23293 in k23290 in k23185 in k23134 in k11783 in k10718 in k10715 in k7274 in k7271 in k6978 in k6975 in k6971 in k6680 in k6677 in k6674 in k6671 */
static void C_ccall f_28622(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word ab[10],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_28622,2,t0,t1);}
t2=t1;
t3=(*a=C_VECTOR_TYPE|1,a[1]=t2,tmp=(C_word)a,a+=2,tmp);
t4=C_SCHEME_UNDEFINED;
t5=(*a=C_VECTOR_TYPE|1,a[1]=t4,tmp=(C_word)a,a+=2,tmp);
t6=C_set_block_item(t5,0,(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_28557,a[2]=((C_word*)t0)[3],a[3]=t5,a[4]=t3,a[5]=((C_word)li453),tmp=(C_word)a,a+=6,tmp));
t7=((C_word*)t5)[1];
f_28557(t7,((C_word*)t0)[2],C_SCHEME_FALSE);}

/* do4684 in k28620 in do4692 in k28710 in k28699 in parse-accumulation in k26697 in k26694 in k26691 in k26688 in k26263 in k26260 in k26257 in k26254 in k26251 in k25668 in k25665 in k25142 in k25139 in k25136 in k25133 in k25130 in k25127 in k25124 in k25121 in k25118 in k25115 in k25112 in k25109 in k25106 in k25103 in k25100 in k25097 in k25094 in k25091 in k25088 in k25085 in k25082 in k24943 in k24940 in k24937 in k24934 in k24878 in k24875 in k24872 in k24869 in k24866 in k24863 in k24860 in k24857 in k23555 in k23486 in k23293 in k23290 in k23185 in k23134 in k11783 in k10718 in k10715 in k7274 in k7271 in k6978 in k6975 in k6971 in k6680 in k6677 in k6674 in k6671 */
static void C_fcall f_28557(C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word ab[8],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_28557,NULL,3,t0,t1,t2);}
t3=(*a=C_VECTOR_TYPE|1,a[1]=t2,tmp=(C_word)a,a+=2,tmp);
t4=(C_word)C_i_nullp(((C_word*)((C_word*)t0)[4])[1]);
t5=(C_truep(t4)?t4:((C_word*)t3)[1]);
if(C_truep(t5)){
t6=t1;
((C_proc2)(void*)(*((C_word*)t6+1)))(2,t6,((C_word*)t3)[1]);}
else{
t6=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_28570,a[2]=t3,a[3]=t1,a[4]=((C_word*)t0)[3],a[5]=((C_word*)t0)[4],tmp=(C_word)a,a+=6,tmp);
t7=(C_word)C_i_car(((C_word*)((C_word*)t0)[4])[1]);
t8=(C_word)C_i_car(t7);
t9=(C_word)C_eqp(((C_word*)t0)[2],t8);
if(C_truep(t9)){
t10=(C_word)C_i_car(((C_word*)((C_word*)t0)[4])[1]);
t11=C_set_block_item(t3,0,t10);
t12=t6;
f_28570(t12,t11);}
else{
t10=t6;
f_28570(t10,C_SCHEME_UNDEFINED);}}}

/* k28568 in do4684 in k28620 in do4692 in k28710 in k28699 in parse-accumulation in k26697 in k26694 in k26691 in k26688 in k26263 in k26260 in k26257 in k26254 in k26251 in k25668 in k25665 in k25142 in k25139 in k25136 in k25133 in k25130 in k25127 in k25124 in k25121 in k25118 in k25115 in k25112 in k25109 in k25106 in k25103 in k25100 in k25097 in k25094 in k25091 in k25088 in k25085 in k25082 in k24943 in k24940 in k24937 in k24934 in k24878 in k24875 in k24872 in k24869 in k24866 in k24863 in k24860 in k24857 in k23555 in k23486 in k23293 in k23290 in k23185 in k23134 in k11783 in k10718 in k10715 in k7274 in k7271 in k6978 in k6975 in k6971 in k6680 in k6677 in k6674 in k6671 */
static void C_fcall f_28570(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word *a;
t2=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[5])[1]);
t3=C_mutate(((C_word *)((C_word*)t0)[5])+1,t2);
t4=((C_word*)((C_word*)t0)[4])[1];
f_28557(t4,((C_word*)t0)[3],((C_word*)((C_word*)t0)[2])[1]);}

/* k28609 in do4692 in k28710 in k28699 in parse-accumulation in k26697 in k26694 in k26691 in k26688 in k26263 in k26260 in k26257 in k26254 in k26251 in k25668 in k25665 in k25142 in k25139 in k25136 in k25133 in k25130 in k25127 in k25124 in k25121 in k25118 in k25115 in k25112 in k25109 in k25106 in k25103 in k25100 in k25097 in k25094 in k25091 in k25088 in k25085 in k25082 in k24943 in k24940 in k24937 in k24934 in k24878 in k24875 in k24872 in k24869 in k24866 in k24863 in k24860 in k24857 in k23555 in k23486 in k23293 in k23290 in k23185 in k23134 in k11783 in k10718 in k10715 in k7274 in k7271 in k6978 in k6975 in k6971 in k6680 in k6677 in k6674 in k6671 */
static void C_ccall f_28611(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[5])+1,t1);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
t4=C_mutate(((C_word *)((C_word*)t0)[4])+1,t3);
t5=((C_word*)((C_word*)t0)[3])[1];
f_28597(t5,((C_word*)t0)[2],((C_word*)((C_word*)t0)[5])[1]);}

/* k28714 in k28710 in k28699 in parse-accumulation in k26697 in k26694 in k26691 in k26688 in k26263 in k26260 in k26257 in k26254 in k26251 in k25668 in k25665 in k25142 in k25139 in k25136 in k25133 in k25130 in k25127 in k25124 in k25121 in k25118 in k25115 in k25112 in k25109 in k25106 in k25103 in k25100 in k25097 in k25094 in k25091 in k25088 in k25085 in k25082 in k24943 in k24940 in k24937 in k24934 in k24878 in k24875 in k24872 in k24869 in k24866 in k24863 in k24860 in k24857 in k23555 in k23486 in k23293 in k23290 in k23185 in k23134 in k11783 in k10718 in k10715 in k7274 in k7271 in k6978 in k6975 in k6971 in k6680 in k6677 in k6674 in k6671 */
static void C_ccall f_28716(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word ab[27],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_28716,2,t0,t1);}
t2=C_mutate(((C_word *)((C_word*)t0)[17])+1,t1);
t3=(*a=C_CLOSURE_TYPE|14,a[1]=(C_word)f_28719,a[2]=((C_word*)t0)[5],a[3]=((C_word*)t0)[6],a[4]=((C_word*)t0)[7],a[5]=((C_word*)t0)[8],a[6]=((C_word*)t0)[9],a[7]=((C_word*)t0)[10],a[8]=((C_word*)t0)[11],a[9]=((C_word*)t0)[12],a[10]=((C_word*)t0)[13],a[11]=((C_word*)t0)[17],a[12]=((C_word*)t0)[14],a[13]=((C_word*)t0)[15],a[14]=((C_word*)t0)[16],tmp=(C_word)a,a+=15,tmp);
t4=((C_word*)((C_word*)t0)[17])[1];
if(C_truep(t4)){
t5=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_29149,a[2]=((C_word*)t0)[17],a[3]=((C_word*)t0)[2],a[4]=((C_word*)t0)[13],a[5]=((C_word*)t0)[3],a[6]=((C_word*)t0)[4],a[7]=t3,tmp=(C_word)a,a+=8,tmp);
t6=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_29153,a[2]=t5,a[3]=((C_word*)t0)[13],tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 381  collector-type");
f_28684(t6,((C_word*)((C_word*)t0)[17])[1]);}
else{
t5=C_set_block_item(((C_word*)t0)[14],0,C_SCHEME_TRUE);
t6=t3;
f_28719(2,t6,t5);}}

/* k29151 in k28714 in k28710 in k28699 in parse-accumulation in k26697 in k26694 in k26691 in k26688 in k26263 in k26260 in k26257 in k26254 in k26251 in k25668 in k25665 in k25142 in k25139 in k25136 in k25133 in k25130 in k25127 in k25124 in k25121 in k25118 in k25115 in k25112 in k25109 in k25106 in k25103 in k25100 in k25097 in k25094 in k25091 in k25088 in k25085 in k25082 in k24943 in k24940 in k24937 in k24934 in k24878 in k24875 in k24872 in k24869 in k24866 in k24863 in k24860 in k24857 in k23555 in k23486 in k23293 in k23290 in k23185 in k23134 in k11783 in k10718 in k10715 in k7274 in k7271 in k6978 in k6975 in k6971 in k6680 in k6677 in k6674 in k6671 */
static void C_ccall f_29153(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word *a;
t2=lf[673];
t3=lf[674];
t4=lf[675];
t5=(C_word)C_eqp(((C_word*)t0)[3],t1);
if(C_truep(t5)){
t6=((C_word*)t0)[2];
f_29149(t6,t5);}
else{
t6=(C_word)C_i_member(((C_word*)t0)[3],t2);
t7=(C_truep(t6)?(C_word)C_i_member(t1,t2):C_SCHEME_FALSE);
if(C_truep(t7)){
t8=((C_word*)t0)[2];
f_29149(t8,t7);}
else{
t8=(C_word)C_i_member(((C_word*)t0)[3],t3);
t9=(C_truep(t8)?(C_word)C_i_member(t1,t3):C_SCHEME_FALSE);
if(C_truep(t9)){
t10=((C_word*)t0)[2];
f_29149(t10,t9);}
else{
t10=(C_word)C_i_member(((C_word*)t0)[3],t4);
t11=((C_word*)t0)[2];
f_29149(t11,(C_truep(t10)?(C_word)C_i_member(t1,t4):C_SCHEME_FALSE));}}}}

/* k29147 in k28714 in k28710 in k28699 in parse-accumulation in k26697 in k26694 in k26691 in k26688 in k26263 in k26260 in k26257 in k26254 in k26251 in k25668 in k25665 in k25142 in k25139 in k25136 in k25133 in k25130 in k25127 in k25124 in k25121 in k25118 in k25115 in k25112 in k25109 in k25106 in k25103 in k25100 in k25097 in k25094 in k25091 in k25088 in k25085 in k25082 in k24943 in k24940 in k24937 in k24934 in k24878 in k24875 in k24872 in k24869 in k24866 in k24863 in k24860 in k24857 in k23555 in k23486 in k23293 in k23290 in k23185 in k23134 in k11783 in k10718 in k10715 in k7274 in k7271 in k6978 in k6975 in k6971 in k6680 in k6677 in k6674 in k6671 */
static void C_fcall f_29149(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[6],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_29149,NULL,2,t0,t1);}
if(C_truep(t1)){
t2=((C_word*)t0)[7];
f_28719(2,t2,C_SCHEME_UNDEFINED);}
else{
t2=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_29145,a[2]=((C_word*)t0)[4],a[3]=((C_word*)t0)[5],a[4]=((C_word*)t0)[6],a[5]=((C_word*)t0)[7],tmp=(C_word)a,a+=6,tmp);
C_trace("ChickenBridge.scm: 381  collector-type");
f_28684(t2,((C_word*)((C_word*)t0)[2])[1]);}}

/* k29143 in k29147 in k28714 in k28710 in k28699 in parse-accumulation in k26697 in k26694 in k26691 in k26688 in k26263 in k26260 in k26257 in k26254 in k26251 in k25668 in k25665 in k25142 in k25139 in k25136 in k25133 in k25130 in k25127 in k25124 in k25121 in k25118 in k25115 in k25112 in k25109 in k25106 in k25103 in k25100 in k25097 in k25094 in k25091 in k25088 in k25085 in k25082 in k24943 in k24940 in k24937 in k24934 in k24878 in k24875 in k24872 in k24869 in k24866 in k24863 in k24860 in k24857 in k23555 in k23486 in k23293 in k23290 in k23185 in k23134 in k11783 in k10718 in k10715 in k7274 in k7271 in k6978 in k6975 in k6971 in k6680 in k6677 in k6674 in k6671 */
static void C_ccall f_29145(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word ab[15],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_29145,2,t0,t1);}
C_trace("ChickenBridge.scm: 381  loop-error");
f_27049(((C_word*)t0)[5],((C_word*)t0)[4],((C_word*)t0)[3],(C_word)C_a_i_list(&a,5,lf[670],t1,lf[671],((C_word*)t0)[2],lf[672]));}

/* k28717 in k28714 in k28710 in k28699 in parse-accumulation in k26697 in k26694 in k26691 in k26688 in k26263 in k26260 in k26257 in k26254 in k26251 in k25668 in k25665 in k25142 in k25139 in k25136 in k25133 in k25130 in k25127 in k25124 in k25121 in k25118 in k25115 in k25112 in k25109 in k25106 in k25103 in k25100 in k25097 in k25094 in k25091 in k25088 in k25085 in k25082 in k24943 in k24940 in k24937 in k24934 in k24878 in k24875 in k24872 in k24869 in k24866 in k24863 in k24860 in k24857 in k23555 in k23486 in k23293 in k23290 in k23185 in k23134 in k11783 in k10718 in k10715 in k7274 in k7271 in k6978 in k6975 in k6971 in k6680 in k6677 in k6674 in k6671 */
static void C_ccall f_28719(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word t14;
C_word t15;
C_word t16;
C_word t17;
C_word ab[61],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_28719,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|10,a[1]=(C_word)f_28722,a[2]=((C_word*)t0)[6],a[3]=((C_word*)t0)[7],a[4]=((C_word*)t0)[8],a[5]=((C_word*)t0)[9],a[6]=((C_word*)t0)[10],a[7]=((C_word*)t0)[11],a[8]=((C_word*)t0)[12],a[9]=((C_word*)t0)[13],a[10]=((C_word*)t0)[14],tmp=(C_word)a,a+=11,tmp);
t3=(C_word)C_eqp(((C_word*)t0)[10],lf[654]);
t4=(C_truep(t3)?t3:(C_word)C_eqp(((C_word*)t0)[10],lf[655]));
if(C_truep(t4)){
t5=C_SCHEME_FALSE;
t6=(*a=C_VECTOR_TYPE|1,a[1]=t5,tmp=(C_word)a,a+=2,tmp);
t7=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_28765,a[2]=t2,a[3]=((C_word*)t0)[8],a[4]=((C_word*)t0)[5],a[5]=t6,a[6]=((C_word*)t0)[10],tmp=(C_word)a,a+=7,tmp);
if(C_truep(((C_word*)((C_word*)t0)[12])[1])){
t8=((C_word*)((C_word*)t0)[4])[1];
t9=(*a=C_CLOSURE_TYPE|9,a[1]=(C_word)f_28803,a[2]=((C_word*)t0)[10],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[9],a[5]=t7,a[6]=((C_word*)t0)[4],a[7]=((C_word*)t0)[11],a[8]=((C_word*)t0)[6],a[9]=t6,tmp=(C_word)a,a+=10,tmp);
if(C_truep(t8)){
t10=t9;
f_28803(2,t10,t8);}
else{
C_trace("ChickenBridge.scm: 381  gensym");
t10=C_retrieve(lf[26]);
((C_proc3)C_retrieve_proc(t10))(3,t10,t9,lf[656]);}}
else{
t8=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_28832,a[2]=t7,a[3]=t6,tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 381  collector-acc");
f_28689(t8,((C_word*)((C_word*)t0)[11])[1]);}}
else{
t5=(C_word)C_eqp(((C_word*)t0)[10],lf[657]);
t6=(C_truep(t5)?t5:(C_word)C_eqp(((C_word*)t0)[10],lf[658]));
if(C_truep(t6)){
t7=(*a=C_CLOSURE_TYPE|12,a[1]=(C_word)f_28844,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[9],a[5]=((C_word*)t0)[11],a[6]=((C_word*)t0)[4],a[7]=((C_word*)t0)[12],a[8]=t2,a[9]=((C_word*)t0)[8],a[10]=((C_word*)t0)[5],a[11]=((C_word*)t0)[6],a[12]=((C_word*)t0)[10],tmp=(C_word)a,a+=13,tmp);
C_trace("ChickenBridge.scm: 381  gensym");
t8=C_retrieve(lf[26]);
((C_proc3)C_retrieve_proc(t8))(3,t8,t7,lf[660]);}
else{
t7=(C_word)C_eqp(((C_word*)t0)[10],lf[18]);
t8=(*a=C_CLOSURE_TYPE|13,a[1]=(C_word)f_28939,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[9],a[5]=((C_word*)t0)[11],a[6]=((C_word*)t0)[7],a[7]=((C_word*)t0)[6],a[8]=((C_word*)t0)[12],a[9]=((C_word*)t0)[5],a[10]=((C_word*)t0)[10],a[11]=t2,a[12]=((C_word*)t0)[8],a[13]=((C_word*)t0)[4],tmp=(C_word)a,a+=14,tmp);
if(C_truep(t7)){
t9=t8;
f_28939(t9,t7);}
else{
t9=(C_word)C_eqp(((C_word*)t0)[10],lf[664]);
t10=t8;
f_28939(t10,(C_truep(t9)?t9:(C_word)C_eqp(((C_word*)t0)[10],lf[669])));}}}}

/* k28937 in k28717 in k28714 in k28710 in k28699 in parse-accumulation in k26697 in k26694 in k26691 in k26688 in k26263 in k26260 in k26257 in k26254 in k26251 in k25668 in k25665 in k25142 in k25139 in k25136 in k25133 in k25130 in k25127 in k25124 in k25121 in k25118 in k25115 in k25112 in k25109 in k25106 in k25103 in k25100 in k25097 in k25094 in k25091 in k25088 in k25085 in k25082 in k24943 in k24940 in k24937 in k24934 in k24878 in k24875 in k24872 in k24869 in k24866 in k24863 in k24860 in k24857 in k23555 in k23486 in k23293 in k23290 in k23185 in k23134 in k11783 in k10718 in k10715 in k7274 in k7271 in k6978 in k6975 in k6971 in k6680 in k6677 in k6674 in k6671 */
static void C_fcall f_28939(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word ab[35],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_28939,NULL,2,t0,t1);}
if(C_truep(t1)){
t2=C_SCHEME_FALSE;
t3=(*a=C_VECTOR_TYPE|1,a[1]=t2,tmp=(C_word)a,a+=2,tmp);
t4=C_SCHEME_FALSE;
t5=(*a=C_VECTOR_TYPE|1,a[1]=t4,tmp=(C_word)a,a+=2,tmp);
t6=(*a=C_CLOSURE_TYPE|8,a[1]=(C_word)f_28942,a[2]=t5,a[3]=((C_word*)t0)[9],a[4]=((C_word*)t0)[10],a[5]=((C_word*)t0)[11],a[6]=((C_word*)t0)[12],a[7]=t3,a[8]=((C_word*)t0)[13],tmp=(C_word)a,a+=9,tmp);
t7=((C_word*)((C_word*)t0)[8])[1];
if(C_truep(t7)){
t8=(*a=C_CLOSURE_TYPE|11,a[1]=(C_word)f_29055,a[2]=((C_word*)t0)[10],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=t6,a[6]=((C_word*)t0)[13],a[7]=((C_word*)t0)[5],a[8]=((C_word*)t0)[6],a[9]=((C_word*)t0)[7],a[10]=t3,a[11]=t5,tmp=(C_word)a,a+=12,tmp);
if(C_truep(((C_word*)((C_word*)t0)[13])[1])){
t9=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_29113,a[2]=t8,a[3]=((C_word*)t0)[7],tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 381  make-binding");
f_27043(t9,((C_word*)((C_word*)t0)[13])[1],lf[668]);}
else{
t9=t8;
f_29055(t9,C_SCHEME_UNDEFINED);}}
else{
t8=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_29048,a[2]=t6,a[3]=t3,a[4]=((C_word*)t0)[5],a[5]=t5,tmp=(C_word)a,a+=6,tmp);
C_trace("ChickenBridge.scm: 381  collector-acc");
f_28689(t8,((C_word*)((C_word*)t0)[5])[1]);}}
else{
t2=((C_word*)t0)[11];
f_28722(t2,C_SCHEME_UNDEFINED);}}

/* k29046 in k28937 in k28717 in k28714 in k28710 in k28699 in parse-accumulation in k26697 in k26694 in k26691 in k26688 in k26263 in k26260 in k26257 in k26254 in k26251 in k25668 in k25665 in k25142 in k25139 in k25136 in k25133 in k25130 in k25127 in k25124 in k25121 in k25118 in k25115 in k25112 in k25109 in k25106 in k25103 in k25100 in k25097 in k25094 in k25091 in k25088 in k25085 in k25082 in k24943 in k24940 in k24937 in k24934 in k24878 in k24875 in k24872 in k24869 in k24866 in k24863 in k24860 in k24857 in k23555 in k23486 in k23293 in k23290 in k23185 in k23134 in k11783 in k10718 in k10715 in k7274 in k7271 in k6978 in k6975 in k6971 in k6680 in k6677 in k6674 in k6671 */
static void C_ccall f_29048(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[5])+1,t1);
t3=((C_word*)((C_word*)t0)[4])[1];
t4=(C_word)C_i_cadddr(t3);
t5=C_mutate(((C_word *)((C_word*)t0)[3])+1,t4);
t6=((C_word*)t0)[2];
f_28942(t6,t5);}

/* k29111 in k28937 in k28717 in k28714 in k28710 in k28699 in parse-accumulation in k26697 in k26694 in k26691 in k26688 in k26263 in k26260 in k26257 in k26254 in k26251 in k25668 in k25665 in k25142 in k25139 in k25136 in k25133 in k25130 in k25127 in k25124 in k25121 in k25118 in k25115 in k25112 in k25109 in k25106 in k25103 in k25100 in k25097 in k25094 in k25091 in k25088 in k25085 in k25082 in k24943 in k24940 in k24937 in k24934 in k24878 in k24875 in k24872 in k24869 in k24866 in k24863 in k24860 in k24857 in k23555 in k23486 in k23293 in k23290 in k23185 in k23134 in k11783 in k10718 in k10715 in k7274 in k7271 in k6978 in k6975 in k6971 in k6680 in k6677 in k6674 in k6671 */
static void C_ccall f_29113(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[3],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_29113,2,t0,t1);}
t2=(C_word)C_a_i_cons(&a,2,t1,((C_word*)((C_word*)t0)[3])[1]);
t3=C_mutate(((C_word *)((C_word*)t0)[3])+1,t2);
t4=((C_word*)t0)[2];
f_29055(t4,((C_word*)((C_word*)t0)[3])[1]);}

/* k29053 in k28937 in k28717 in k28714 in k28710 in k28699 in parse-accumulation in k26697 in k26694 in k26691 in k26688 in k26263 in k26260 in k26257 in k26254 in k26251 in k25668 in k25665 in k25142 in k25139 in k25136 in k25133 in k25130 in k25127 in k25124 in k25121 in k25118 in k25115 in k25112 in k25109 in k25106 in k25103 in k25100 in k25097 in k25094 in k25091 in k25088 in k25085 in k25082 in k24943 in k24940 in k24937 in k24934 in k24878 in k24875 in k24872 in k24869 in k24866 in k24863 in k24860 in k24857 in k23555 in k23486 in k23293 in k23290 in k23185 in k23134 in k11783 in k10718 in k10715 in k7274 in k7271 in k6978 in k6975 in k6971 in k6680 in k6677 in k6674 in k6671 */
static void C_fcall f_29055(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[12],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_29055,NULL,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|11,a[1]=(C_word)f_29059,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],a[7]=((C_word*)t0)[7],a[8]=((C_word*)t0)[8],a[9]=((C_word*)t0)[9],a[10]=((C_word*)t0)[10],a[11]=((C_word*)t0)[11],tmp=(C_word)a,a+=12,tmp);
C_trace("ChickenBridge.scm: 381  gensym");
t3=C_retrieve(lf[26]);
((C_proc3)C_retrieve_proc(t3))(3,t3,t2,lf[667]);}

/* k29057 in k29053 in k28937 in k28717 in k28714 in k28710 in k28699 in parse-accumulation in k26697 in k26694 in k26691 in k26688 in k26263 in k26260 in k26257 in k26254 in k26251 in k25668 in k25665 in k25142 in k25139 in k25136 in k25133 in k25130 in k25127 in k25124 in k25121 in k25118 in k25115 in k25112 in k25109 in k25106 in k25103 in k25100 in k25097 in k25094 in k25091 in k25088 in k25085 in k25082 in k24943 in k24940 in k24937 in k24934 in k24878 in k24875 in k24872 in k24869 in k24866 in k24863 in k24860 in k24857 in k23555 in k23486 in k23293 in k23290 in k23185 in k23134 in k11783 in k10718 in k10715 in k7274 in k7271 in k6978 in k6975 in k6971 in k6680 in k6677 in k6674 in k6671 */
static void C_ccall f_29059(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[12],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_29059,2,t0,t1);}
t2=C_mutate(((C_word *)((C_word*)t0)[11])+1,t1);
t3=(*a=C_CLOSURE_TYPE|11,a[1]=(C_word)f_29063,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],a[7]=((C_word*)t0)[7],a[8]=((C_word*)t0)[8],a[9]=((C_word*)t0)[11],a[10]=((C_word*)t0)[9],a[11]=((C_word*)t0)[10],tmp=(C_word)a,a+=12,tmp);
C_trace("ChickenBridge.scm: 381  gensym");
t4=C_retrieve(lf[26]);
((C_proc3)C_retrieve_proc(t4))(3,t4,t3,lf[666]);}

/* k29061 in k29057 in k29053 in k28937 in k28717 in k28714 in k28710 in k28699 in parse-accumulation in k26697 in k26694 in k26691 in k26688 in k26263 in k26260 in k26257 in k26254 in k26251 in k25668 in k25665 in k25142 in k25139 in k25136 in k25133 in k25130 in k25127 in k25124 in k25121 in k25118 in k25115 in k25112 in k25109 in k25106 in k25103 in k25100 in k25097 in k25094 in k25091 in k25088 in k25085 in k25082 in k24943 in k24940 in k24937 in k24934 in k24878 in k24875 in k24872 in k24869 in k24866 in k24863 in k24860 in k24857 in k23555 in k23486 in k23293 in k23290 in k23185 in k23134 in k11783 in k10718 in k10715 in k7274 in k7271 in k6978 in k6975 in k6971 in k6680 in k6677 in k6674 in k6671 */
static void C_ccall f_29063(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[12],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_29063,2,t0,t1);}
t2=C_mutate(((C_word *)((C_word*)t0)[11])+1,t1);
t3=(*a=C_CLOSURE_TYPE|11,a[1]=(C_word)f_29105,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],a[7]=((C_word*)t0)[7],a[8]=((C_word*)t0)[8],a[9]=((C_word*)t0)[11],a[10]=((C_word*)t0)[9],a[11]=((C_word*)t0)[10],tmp=(C_word)a,a+=12,tmp);
C_trace("ChickenBridge.scm: 381  make-binding");
f_27043(t3,((C_word*)((C_word*)t0)[11])[1],lf[665]);}

/* k29103 in k29061 in k29057 in k29053 in k28937 in k28717 in k28714 in k28710 in k28699 in parse-accumulation in k26697 in k26694 in k26691 in k26688 in k26263 in k26260 in k26257 in k26254 in k26251 in k25668 in k25665 in k25142 in k25139 in k25136 in k25133 in k25130 in k25127 in k25124 in k25121 in k25118 in k25115 in k25112 in k25109 in k25106 in k25103 in k25100 in k25097 in k25094 in k25091 in k25088 in k25085 in k25082 in k24943 in k24940 in k24937 in k24934 in k24878 in k24875 in k24872 in k24869 in k24866 in k24863 in k24860 in k24857 in k23555 in k23486 in k23293 in k23290 in k23185 in k23134 in k11783 in k10718 in k10715 in k7274 in k7271 in k6978 in k6975 in k6971 in k6680 in k6677 in k6674 in k6671 */
static void C_ccall f_29105(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[15],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_29105,2,t0,t1);}
t2=(C_word)C_a_i_cons(&a,2,t1,((C_word*)((C_word*)t0)[11])[1]);
t3=C_mutate(((C_word *)((C_word*)t0)[11])+1,t2);
t4=(*a=C_CLOSURE_TYPE|11,a[1]=(C_word)f_29101,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],a[7]=((C_word*)t0)[7],a[8]=((C_word*)t0)[8],a[9]=((C_word*)t0)[9],a[10]=((C_word*)t0)[10],a[11]=((C_word*)t0)[11],tmp=(C_word)a,a+=12,tmp);
C_trace("ChickenBridge.scm: 381  make-binding");
f_27043(t4,((C_word*)((C_word*)t0)[10])[1],C_SCHEME_FALSE);}

/* k29099 in k29103 in k29061 in k29057 in k29053 in k28937 in k28717 in k28714 in k28710 in k28699 in parse-accumulation in k26697 in k26694 in k26691 in k26688 in k26263 in k26260 in k26257 in k26254 in k26251 in k25668 in k25665 in k25142 in k25139 in k25136 in k25133 in k25130 in k25127 in k25124 in k25121 in k25118 in k25115 in k25112 in k25109 in k25106 in k25103 in k25100 in k25097 in k25094 in k25091 in k25088 in k25085 in k25082 in k24943 in k24940 in k24937 in k24934 in k24878 in k24875 in k24872 in k24869 in k24866 in k24863 in k24860 in k24857 in k23555 in k23486 in k23293 in k23290 in k23185 in k23134 in k11783 in k10718 in k10715 in k7274 in k7271 in k6978 in k6975 in k6971 in k6680 in k6677 in k6674 in k6671 */
static void C_ccall f_29101(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word ab[22],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_29101,2,t0,t1);}
t2=(C_word)C_a_i_cons(&a,2,t1,((C_word*)((C_word*)t0)[11])[1]);
t3=C_mutate(((C_word *)((C_word*)t0)[11])+1,t2);
t4=(C_word)C_a_i_list(&a,3,lf[12],((C_word*)((C_word*)t0)[10])[1],((C_word*)((C_word*)t0)[9])[1]);
t5=(C_word)C_a_i_cons(&a,2,t4,((C_word*)((C_word*)t0)[8])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[8])+1,t5);
t7=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_29079,a[2]=((C_word*)t0)[4],a[3]=((C_word*)t0)[9],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
C_trace("ChickenBridge.scm: 381  make-collector");
f_28679(t7,((C_word*)((C_word*)t0)[6])[1],((C_word*)t0)[2],((C_word*)((C_word*)t0)[10])[1],((C_word*)((C_word*)t0)[9])[1]);}

/* k29077 in k29099 in k29103 in k29061 in k29057 in k29053 in k28937 in k28717 in k28714 in k28710 in k28699 in parse-accumulation in k26697 in k26694 in k26691 in k26688 in k26263 in k26260 in k26257 in k26254 in k26251 in k25668 in k25665 in k25142 in k25139 in k25136 in k25133 in k25130 in k25127 in k25124 in k25121 in k25118 in k25115 in k25112 in k25109 in k25106 in k25103 in k25100 in k25097 in k25094 in k25091 in k25088 in k25085 in k25082 in k24943 in k24940 in k24937 in k24934 in k24878 in k24875 in k24872 in k24869 in k24866 in k24863 in k24860 in k24857 in k23555 in k23486 in k23293 in k23290 in k23185 in k23134 in k11783 in k10718 in k10715 in k7274 in k7271 in k6978 in k6975 in k6971 in k6680 in k6677 in k6674 in k6671 */
static void C_ccall f_29079(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_29079,2,t0,t1);}
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=((C_word*)((C_word*)t0)[5])[1];
if(C_truep(t3)){
t4=((C_word*)t0)[4];
f_28942(t4,C_SCHEME_UNDEFINED);}
else{
t4=(C_word)C_a_i_list(&a,2,lf[15],((C_word*)((C_word*)t0)[3])[1]);
t5=(C_word)C_a_i_cons(&a,2,t4,((C_word*)((C_word*)t0)[2])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[2])+1,t5);
t7=((C_word*)t0)[4];
f_28942(t7,((C_word*)((C_word*)t0)[2])[1]);}}

/* k28940 in k28937 in k28717 in k28714 in k28710 in k28699 in parse-accumulation in k26697 in k26694 in k26691 in k26688 in k26263 in k26260 in k26257 in k26254 in k26251 in k25668 in k25665 in k25142 in k25139 in k25136 in k25133 in k25130 in k25127 in k25124 in k25121 in k25118 in k25115 in k25112 in k25109 in k25106 in k25103 in k25100 in k25097 in k25094 in k25091 in k25088 in k25085 in k25082 in k24943 in k24940 in k24937 in k24934 in k24878 in k24875 in k24872 in k24869 in k24866 in k24863 in k24860 in k24857 in k23555 in k23486 in k23293 in k23290 in k23185 in k23134 in k11783 in k10718 in k10715 in k7274 in k7271 in k6978 in k6975 in k6971 in k6680 in k6677 in k6674 in k6671 */
static void C_fcall f_28942(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word t14;
C_word t15;
C_word t16;
C_word t17;
C_word t18;
C_word t19;
C_word t20;
C_word t21;
C_word t22;
C_word t23;
C_word t24;
C_word t25;
C_word t26;
C_word t27;
C_word t28;
C_word t29;
C_word ab[114],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_28942,NULL,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_28945,a[2]=((C_word*)t0)[5],a[3]=((C_word*)t0)[6],a[4]=((C_word*)t0)[7],a[5]=((C_word*)t0)[8],tmp=(C_word)a,a+=6,tmp);
t3=(C_word)C_eqp(((C_word*)t0)[4],lf[18]);
if(C_truep(t3)){
t4=(C_word)C_a_i_list(&a,1,lf[661]);
t5=(C_word)C_a_i_list(&a,3,lf[18],((C_word*)((C_word*)t0)[3])[1],t4);
t6=(C_word)C_a_i_list(&a,3,lf[662],((C_word*)((C_word*)t0)[2])[1],t5);
t7=(C_word)C_a_i_cons(&a,2,t6,((C_word*)((C_word*)t0)[6])[1]);
t8=C_mutate(((C_word *)((C_word*)t0)[6])+1,t7);
t9=(C_word)C_a_i_list(&a,2,lf[663],((C_word*)((C_word*)t0)[2])[1]);
t10=(C_word)C_a_i_list(&a,3,lf[12],((C_word*)((C_word*)t0)[2])[1],t9);
t11=(C_word)C_a_i_cons(&a,2,t10,((C_word*)((C_word*)t0)[6])[1]);
t12=C_mutate(((C_word *)((C_word*)t0)[6])+1,t11);
t13=t2;
f_28945(t13,((C_word*)((C_word*)t0)[6])[1]);}
else{
t4=(C_word)C_eqp(((C_word*)t0)[4],lf[664]);
if(C_truep(t4)){
t5=(C_word)C_a_i_list(&a,2,lf[661],((C_word*)((C_word*)t0)[3])[1]);
t6=(C_word)C_a_i_list(&a,3,lf[662],((C_word*)((C_word*)t0)[2])[1],t5);
t7=(C_word)C_a_i_cons(&a,2,t6,((C_word*)((C_word*)t0)[6])[1]);
t8=C_mutate(((C_word *)((C_word*)t0)[6])+1,t7);
t9=(C_word)C_a_i_list(&a,2,lf[15],((C_word*)((C_word*)t0)[2])[1]);
t10=(C_word)C_a_i_list(&a,3,lf[12],((C_word*)((C_word*)t0)[2])[1],t9);
t11=(C_word)C_a_i_cons(&a,2,t10,((C_word*)((C_word*)t0)[6])[1]);
t12=C_mutate(((C_word *)((C_word*)t0)[6])+1,t11);
t13=t2;
f_28945(t13,((C_word*)((C_word*)t0)[6])[1]);}
else{
t5=(C_word)C_a_i_list(&a,3,lf[662],((C_word*)((C_word*)t0)[2])[1],((C_word*)((C_word*)t0)[3])[1]);
t6=(C_word)C_a_i_cons(&a,2,t5,((C_word*)((C_word*)t0)[6])[1]);
t7=C_mutate(((C_word *)((C_word*)t0)[6])+1,t6);
t8=(C_word)C_a_i_list(&a,2,lf[663],((C_word*)((C_word*)t0)[2])[1]);
t9=(C_word)C_a_i_list(&a,3,lf[12],((C_word*)((C_word*)t0)[2])[1],t8);
t10=(C_word)C_a_i_cons(&a,2,t9,((C_word*)((C_word*)t0)[6])[1]);
t11=C_mutate(((C_word *)((C_word*)t0)[6])+1,t10);
t12=t2;
f_28945(t12,((C_word*)((C_word*)t0)[6])[1]);}}}

/* k28943 in k28940 in k28937 in k28717 in k28714 in k28710 in k28699 in parse-accumulation in k26697 in k26694 in k26691 in k26688 in k26263 in k26260 in k26257 in k26254 in k26251 in k25668 in k25665 in k25142 in k25139 in k25136 in k25133 in k25130 in k25127 in k25124 in k25121 in k25118 in k25115 in k25112 in k25109 in k25106 in k25103 in k25100 in k25097 in k25094 in k25091 in k25088 in k25085 in k25082 in k24943 in k24940 in k24937 in k24934 in k24878 in k24875 in k24872 in k24869 in k24866 in k24863 in k24860 in k24857 in k23555 in k23486 in k23293 in k23290 in k23185 in k23134 in k11783 in k10718 in k10715 in k7274 in k7271 in k6978 in k6975 in k6971 in k6680 in k6677 in k6674 in k6671 */
static void C_fcall f_28945(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[18],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_28945,NULL,2,t0,t1);}
if(C_truep(((C_word*)((C_word*)t0)[5])[1])){
t2=(C_word)C_a_i_list(&a,2,lf[15],((C_word*)((C_word*)t0)[4])[1]);
t3=(C_word)C_a_i_list(&a,3,lf[12],((C_word*)((C_word*)t0)[5])[1],t2);
t4=(C_word)C_a_i_cons(&a,2,t3,((C_word*)((C_word*)t0)[3])[1]);
t5=C_mutate(((C_word *)((C_word*)t0)[3])+1,t4);
t6=((C_word*)t0)[2];
f_28722(t6,((C_word*)((C_word*)t0)[3])[1]);}
else{
t2=((C_word*)t0)[2];
f_28722(t2,C_SCHEME_UNDEFINED);}}

/* k28842 in k28717 in k28714 in k28710 in k28699 in parse-accumulation in k26697 in k26694 in k26691 in k26688 in k26263 in k26260 in k26257 in k26254 in k26251 in k25668 in k25665 in k25142 in k25139 in k25136 in k25133 in k25130 in k25127 in k25124 in k25121 in k25118 in k25115 in k25112 in k25109 in k25106 in k25103 in k25100 in k25097 in k25094 in k25091 in k25088 in k25085 in k25082 in k24943 in k24940 in k24937 in k24934 in k24878 in k24875 in k24872 in k24869 in k24866 in k24863 in k24860 in k24857 in k23555 in k23486 in k23293 in k23290 in k23185 in k23134 in k11783 in k10718 in k10715 in k7274 in k7271 in k6978 in k6975 in k6971 in k6680 in k6677 in k6674 in k6671 */
static void C_ccall f_28844(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word ab[25],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_28844,2,t0,t1);}
t2=(C_word)C_eqp(((C_word*)t0)[12],lf[657]);
t3=(C_truep(t2)?lf[409]:lf[487]);
t4=C_SCHEME_FALSE;
t5=(*a=C_VECTOR_TYPE|1,a[1]=t4,tmp=(C_word)a,a+=2,tmp);
t6=(*a=C_CLOSURE_TYPE|8,a[1]=(C_word)f_28850,a[2]=((C_word*)t0)[8],a[3]=((C_word*)t0)[9],a[4]=t3,a[5]=t5,a[6]=((C_word*)t0)[10],a[7]=t1,a[8]=((C_word*)t0)[11],tmp=(C_word)a,a+=9,tmp);
if(C_truep(((C_word*)((C_word*)t0)[7])[1])){
t7=((C_word*)((C_word*)t0)[6])[1];
t8=(*a=C_CLOSURE_TYPE|9,a[1]=(C_word)f_28894,a[2]=((C_word*)t0)[12],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=t6,a[6]=((C_word*)t0)[6],a[7]=((C_word*)t0)[5],a[8]=((C_word*)t0)[11],a[9]=t5,tmp=(C_word)a,a+=10,tmp);
if(C_truep(t7)){
t9=t8;
f_28894(2,t9,t7);}
else{
C_trace("ChickenBridge.scm: 381  gensym");
t9=C_retrieve(lf[26]);
((C_proc3)C_retrieve_proc(t9))(3,t9,t8,lf[659]);}}
else{
t7=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_28927,a[2]=t6,a[3]=t5,tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 381  collector-acc");
f_28689(t7,((C_word*)((C_word*)t0)[5])[1]);}}

/* k28925 in k28842 in k28717 in k28714 in k28710 in k28699 in parse-accumulation in k26697 in k26694 in k26691 in k26688 in k26263 in k26260 in k26257 in k26254 in k26251 in k25668 in k25665 in k25142 in k25139 in k25136 in k25133 in k25130 in k25127 in k25124 in k25121 in k25118 in k25115 in k25112 in k25109 in k25106 in k25103 in k25100 in k25097 in k25094 in k25091 in k25088 in k25085 in k25082 in k24943 in k24940 in k24937 in k24934 in k24878 in k24875 in k24872 in k24869 in k24866 in k24863 in k24860 in k24857 in k23555 in k23486 in k23293 in k23290 in k23185 in k23134 in k11783 in k10718 in k10715 in k7274 in k7271 in k6978 in k6975 in k6971 in k6680 in k6677 in k6674 in k6671 */
static void C_ccall f_28927(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[3])+1,t1);
t3=((C_word*)t0)[2];
f_28850(t3,t2);}

/* k28892 in k28842 in k28717 in k28714 in k28710 in k28699 in parse-accumulation in k26697 in k26694 in k26691 in k26688 in k26263 in k26260 in k26257 in k26254 in k26251 in k25668 in k25665 in k25142 in k25139 in k25136 in k25133 in k25130 in k25127 in k25124 in k25121 in k25118 in k25115 in k25112 in k25109 in k25106 in k25103 in k25100 in k25097 in k25094 in k25091 in k25088 in k25085 in k25082 in k24943 in k24940 in k24937 in k24934 in k24878 in k24875 in k24872 in k24869 in k24866 in k24863 in k24860 in k24857 in k23555 in k23486 in k23293 in k23290 in k23185 in k23134 in k11783 in k10718 in k10715 in k7274 in k7271 in k6978 in k6975 in k6971 in k6680 in k6677 in k6674 in k6671 */
static void C_ccall f_28894(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[10],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_28894,2,t0,t1);}
t2=C_mutate(((C_word *)((C_word*)t0)[9])+1,t1);
t3=(*a=C_CLOSURE_TYPE|9,a[1]=(C_word)f_28920,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[9],a[6]=((C_word*)t0)[5],a[7]=((C_word*)t0)[6],a[8]=((C_word*)t0)[7],a[9]=((C_word*)t0)[8],tmp=(C_word)a,a+=10,tmp);
C_trace("ChickenBridge.scm: 381  make-binding");
f_27043(t3,((C_word*)((C_word*)t0)[9])[1],C_SCHEME_FALSE);}

/* k28918 in k28892 in k28842 in k28717 in k28714 in k28710 in k28699 in parse-accumulation in k26697 in k26694 in k26691 in k26688 in k26263 in k26260 in k26257 in k26254 in k26251 in k25668 in k25665 in k25142 in k25139 in k25136 in k25133 in k25130 in k25127 in k25124 in k25121 in k25118 in k25115 in k25112 in k25109 in k25106 in k25103 in k25100 in k25097 in k25094 in k25091 in k25088 in k25085 in k25082 in k24943 in k24940 in k24937 in k24934 in k24878 in k24875 in k24872 in k24869 in k24866 in k24863 in k24860 in k24857 in k23555 in k23486 in k23293 in k23290 in k23185 in k23134 in k11783 in k10718 in k10715 in k7274 in k7271 in k6978 in k6975 in k6971 in k6680 in k6677 in k6674 in k6671 */
static void C_ccall f_28920(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[10],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_28920,2,t0,t1);}
t2=(C_word)C_a_i_cons(&a,2,t1,((C_word*)((C_word*)t0)[9])[1]);
t3=C_mutate(((C_word *)((C_word*)t0)[9])+1,t2);
t4=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_28902,a[2]=((C_word*)t0)[4],a[3]=((C_word*)t0)[5],a[4]=((C_word*)t0)[6],a[5]=((C_word*)t0)[7],a[6]=((C_word*)t0)[8],tmp=(C_word)a,a+=7,tmp);
C_trace("ChickenBridge.scm: 381  make-collector");
f_28679(t4,((C_word*)((C_word*)t0)[7])[1],((C_word*)t0)[2],((C_word*)((C_word*)t0)[5])[1],C_SCHEME_FALSE);}

/* k28900 in k28918 in k28892 in k28842 in k28717 in k28714 in k28710 in k28699 in parse-accumulation in k26697 in k26694 in k26691 in k26688 in k26263 in k26260 in k26257 in k26254 in k26251 in k25668 in k25665 in k25142 in k25139 in k25136 in k25133 in k25130 in k25127 in k25124 in k25121 in k25118 in k25115 in k25112 in k25109 in k25106 in k25103 in k25100 in k25097 in k25094 in k25091 in k25088 in k25085 in k25082 in k24943 in k24940 in k24937 in k24934 in k24878 in k24875 in k24872 in k24869 in k24866 in k24863 in k24860 in k24857 in k23555 in k23486 in k23293 in k23290 in k23185 in k23134 in k11783 in k10718 in k10715 in k7274 in k7271 in k6978 in k6975 in k6971 in k6680 in k6677 in k6674 in k6671 */
static void C_ccall f_28902(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word ab[12],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_28902,2,t0,t1);}
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=((C_word*)((C_word*)t0)[5])[1];
if(C_truep(t3)){
t4=((C_word*)t0)[4];
f_28850(t4,C_SCHEME_UNDEFINED);}
else{
t4=(C_word)C_a_i_list(&a,3,lf[457],((C_word*)((C_word*)t0)[3])[1],C_fix(0));
t5=(C_word)C_a_i_cons(&a,2,t4,((C_word*)((C_word*)t0)[2])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[2])+1,t5);
t7=((C_word*)t0)[4];
f_28850(t7,((C_word*)((C_word*)t0)[2])[1]);}}

/* k28848 in k28842 in k28717 in k28714 in k28710 in k28699 in parse-accumulation in k26697 in k26694 in k26691 in k26688 in k26263 in k26260 in k26257 in k26254 in k26251 in k25668 in k25665 in k25142 in k25139 in k25136 in k25133 in k25130 in k25127 in k25124 in k25121 in k25118 in k25115 in k25112 in k25109 in k25106 in k25103 in k25100 in k25097 in k25094 in k25091 in k25088 in k25085 in k25082 in k24943 in k24940 in k24937 in k24934 in k24878 in k24875 in k24872 in k24869 in k24866 in k24863 in k24860 in k24857 in k23555 in k23486 in k23293 in k23290 in k23185 in k23134 in k11783 in k10718 in k10715 in k7274 in k7271 in k6978 in k6975 in k6971 in k6680 in k6677 in k6674 in k6671 */
static void C_fcall f_28850(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_28850,NULL,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|8,a[1]=(C_word)f_28890,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],a[7]=((C_word*)t0)[7],a[8]=((C_word*)t0)[8],tmp=(C_word)a,a+=9,tmp);
C_trace("ChickenBridge.scm: 381  make-binding");
f_27043(t2,((C_word*)t0)[7],C_SCHEME_FALSE);}

/* k28888 in k28848 in k28842 in k28717 in k28714 in k28710 in k28699 in parse-accumulation in k26697 in k26694 in k26691 in k26688 in k26263 in k26260 in k26257 in k26254 in k26251 in k25668 in k25665 in k25142 in k25139 in k25136 in k25133 in k25130 in k25127 in k25124 in k25121 in k25118 in k25115 in k25112 in k25109 in k25106 in k25103 in k25100 in k25097 in k25094 in k25091 in k25088 in k25085 in k25082 in k24943 in k24940 in k24937 in k24934 in k24878 in k24875 in k24872 in k24869 in k24866 in k24863 in k24860 in k24857 in k23555 in k23486 in k23293 in k23290 in k23185 in k23134 in k11783 in k10718 in k10715 in k7274 in k7271 in k6978 in k6975 in k6971 in k6680 in k6677 in k6674 in k6671 */
static void C_ccall f_28890(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word ab[66],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_28890,2,t0,t1);}
t2=(C_word)C_a_i_cons(&a,2,t1,((C_word*)((C_word*)t0)[8])[1]);
t3=C_mutate(((C_word *)((C_word*)t0)[8])+1,t2);
t4=(C_word)C_a_i_list(&a,3,lf[12],((C_word*)t0)[7],((C_word*)((C_word*)t0)[6])[1]);
t5=(C_word)C_a_i_list(&a,2,lf[458],((C_word*)((C_word*)t0)[5])[1]);
t6=(C_word)C_a_i_list(&a,3,((C_word*)t0)[4],((C_word*)t0)[7],((C_word*)((C_word*)t0)[5])[1]);
t7=(C_word)C_a_i_list(&a,3,lf[457],t5,t6);
t8=(C_word)C_a_i_list(&a,3,lf[12],((C_word*)((C_word*)t0)[5])[1],((C_word*)t0)[7]);
t9=(C_word)C_a_i_list(&a,3,lf[20],t7,t8);
t10=(C_word)C_a_i_list(&a,3,lf[484],t4,t9);
t11=(C_word)C_a_i_cons(&a,2,t10,((C_word*)((C_word*)t0)[3])[1]);
t12=C_mutate(((C_word *)((C_word*)t0)[3])+1,t11);
t13=((C_word*)t0)[2];
f_28722(t13,((C_word*)((C_word*)t0)[3])[1]);}

/* k28830 in k28717 in k28714 in k28710 in k28699 in parse-accumulation in k26697 in k26694 in k26691 in k26688 in k26263 in k26260 in k26257 in k26254 in k26251 in k25668 in k25665 in k25142 in k25139 in k25136 in k25133 in k25130 in k25127 in k25124 in k25121 in k25118 in k25115 in k25112 in k25109 in k25106 in k25103 in k25100 in k25097 in k25094 in k25091 in k25088 in k25085 in k25082 in k24943 in k24940 in k24937 in k24934 in k24878 in k24875 in k24872 in k24869 in k24866 in k24863 in k24860 in k24857 in k23555 in k23486 in k23293 in k23290 in k23185 in k23134 in k11783 in k10718 in k10715 in k7274 in k7271 in k6978 in k6975 in k6971 in k6680 in k6677 in k6674 in k6671 */
static void C_ccall f_28832(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[3])+1,t1);
t3=((C_word*)t0)[2];
f_28765(t3,t2);}

/* k28801 in k28717 in k28714 in k28710 in k28699 in parse-accumulation in k26697 in k26694 in k26691 in k26688 in k26263 in k26260 in k26257 in k26254 in k26251 in k25668 in k25665 in k25142 in k25139 in k25136 in k25133 in k25130 in k25127 in k25124 in k25121 in k25118 in k25115 in k25112 in k25109 in k25106 in k25103 in k25100 in k25097 in k25094 in k25091 in k25088 in k25085 in k25082 in k24943 in k24940 in k24937 in k24934 in k24878 in k24875 in k24872 in k24869 in k24866 in k24863 in k24860 in k24857 in k23555 in k23486 in k23293 in k23290 in k23185 in k23134 in k11783 in k10718 in k10715 in k7274 in k7271 in k6978 in k6975 in k6971 in k6680 in k6677 in k6674 in k6671 */
static void C_ccall f_28803(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[10],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_28803,2,t0,t1);}
t2=C_mutate(((C_word *)((C_word*)t0)[9])+1,t1);
t3=(*a=C_CLOSURE_TYPE|9,a[1]=(C_word)f_28825,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[9],a[6]=((C_word*)t0)[5],a[7]=((C_word*)t0)[6],a[8]=((C_word*)t0)[7],a[9]=((C_word*)t0)[8],tmp=(C_word)a,a+=10,tmp);
C_trace("ChickenBridge.scm: 381  make-binding");
f_27043(t3,((C_word*)((C_word*)t0)[9])[1],C_fix(0));}

/* k28823 in k28801 in k28717 in k28714 in k28710 in k28699 in parse-accumulation in k26697 in k26694 in k26691 in k26688 in k26263 in k26260 in k26257 in k26254 in k26251 in k25668 in k25665 in k25142 in k25139 in k25136 in k25133 in k25130 in k25127 in k25124 in k25121 in k25118 in k25115 in k25112 in k25109 in k25106 in k25103 in k25100 in k25097 in k25094 in k25091 in k25088 in k25085 in k25082 in k24943 in k24940 in k24937 in k24934 in k24878 in k24875 in k24872 in k24869 in k24866 in k24863 in k24860 in k24857 in k23555 in k23486 in k23293 in k23290 in k23185 in k23134 in k11783 in k10718 in k10715 in k7274 in k7271 in k6978 in k6975 in k6971 in k6680 in k6677 in k6674 in k6671 */
static void C_ccall f_28825(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[10],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_28825,2,t0,t1);}
t2=(C_word)C_a_i_cons(&a,2,t1,((C_word*)((C_word*)t0)[9])[1]);
t3=C_mutate(((C_word *)((C_word*)t0)[9])+1,t2);
t4=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_28811,a[2]=((C_word*)t0)[4],a[3]=((C_word*)t0)[5],a[4]=((C_word*)t0)[6],a[5]=((C_word*)t0)[7],a[6]=((C_word*)t0)[8],tmp=(C_word)a,a+=7,tmp);
C_trace("ChickenBridge.scm: 381  make-collector");
f_28679(t4,((C_word*)((C_word*)t0)[7])[1],((C_word*)t0)[2],((C_word*)((C_word*)t0)[5])[1],C_SCHEME_FALSE);}

/* k28809 in k28823 in k28801 in k28717 in k28714 in k28710 in k28699 in parse-accumulation in k26697 in k26694 in k26691 in k26688 in k26263 in k26260 in k26257 in k26254 in k26251 in k25668 in k25665 in k25142 in k25139 in k25136 in k25133 in k25130 in k25127 in k25124 in k25121 in k25118 in k25115 in k25112 in k25109 in k25106 in k25103 in k25100 in k25097 in k25094 in k25091 in k25088 in k25085 in k25082 in k24943 in k24940 in k24937 in k24934 in k24878 in k24875 in k24872 in k24869 in k24866 in k24863 in k24860 in k24857 in k23555 in k23486 in k23293 in k23290 in k23185 in k23134 in k11783 in k10718 in k10715 in k7274 in k7271 in k6978 in k6975 in k6971 in k6680 in k6677 in k6674 in k6671 */
static void C_ccall f_28811(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[3],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_28811,2,t0,t1);}
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=((C_word*)((C_word*)t0)[5])[1];
if(C_truep(t3)){
t4=((C_word*)t0)[4];
f_28765(t4,C_SCHEME_UNDEFINED);}
else{
t4=(C_word)C_a_i_cons(&a,2,((C_word*)((C_word*)t0)[3])[1],((C_word*)((C_word*)t0)[2])[1]);
t5=C_mutate(((C_word *)((C_word*)t0)[2])+1,t4);
t6=((C_word*)t0)[4];
f_28765(t6,((C_word*)((C_word*)t0)[2])[1]);}}

/* k28763 in k28717 in k28714 in k28710 in k28699 in parse-accumulation in k26697 in k26694 in k26691 in k26688 in k26263 in k26260 in k26257 in k26254 in k26251 in k25668 in k25665 in k25142 in k25139 in k25136 in k25133 in k25130 in k25127 in k25124 in k25121 in k25118 in k25115 in k25112 in k25109 in k25106 in k25103 in k25100 in k25097 in k25094 in k25091 in k25088 in k25085 in k25082 in k24943 in k24940 in k24937 in k24934 in k24878 in k24875 in k24872 in k24869 in k24866 in k24863 in k24860 in k24857 in k23555 in k23486 in k23293 in k23290 in k23185 in k23134 in k11783 in k10718 in k10715 in k7274 in k7271 in k6978 in k6975 in k6971 in k6680 in k6677 in k6674 in k6671 */
static void C_fcall f_28765(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word ab[51],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_28765,NULL,2,t0,t1);}
t2=(C_word)C_eqp(((C_word*)t0)[6],lf[654]);
if(C_truep(t2)){
t3=(C_word)C_a_i_list(&a,3,lf[127],((C_word*)((C_word*)t0)[5])[1],((C_word*)((C_word*)t0)[4])[1]);
t4=(C_word)C_a_i_list(&a,3,lf[12],((C_word*)((C_word*)t0)[5])[1],t3);
t5=(C_word)C_a_i_cons(&a,2,t4,((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_28722(t7,((C_word*)((C_word*)t0)[3])[1]);}
else{
t3=(C_word)C_a_i_list(&a,3,lf[127],((C_word*)((C_word*)t0)[5])[1],C_fix(1));
t4=(C_word)C_a_i_list(&a,3,lf[12],((C_word*)((C_word*)t0)[5])[1],t3);
t5=(C_word)C_a_i_list(&a,3,lf[20],((C_word*)((C_word*)t0)[4])[1],t4);
t6=(C_word)C_a_i_cons(&a,2,t5,((C_word*)((C_word*)t0)[3])[1]);
t7=C_mutate(((C_word *)((C_word*)t0)[3])+1,t6);
t8=((C_word*)t0)[2];
f_28722(t8,((C_word*)((C_word*)t0)[3])[1]);}}

/* k28720 in k28717 in k28714 in k28710 in k28699 in parse-accumulation in k26697 in k26694 in k26691 in k26688 in k26263 in k26260 in k26257 in k26254 in k26251 in k25668 in k25665 in k25142 in k25139 in k25136 in k25133 in k25130 in k25127 in k25124 in k25121 in k25118 in k25115 in k25112 in k25109 in k25106 in k25103 in k25100 in k25097 in k25094 in k25091 in k25088 in k25085 in k25082 in k24943 in k24940 in k24937 in k24934 in k24878 in k24875 in k24872 in k24869 in k24866 in k24863 in k24860 in k24857 in k23555 in k23486 in k23293 in k23290 in k23185 in k23134 in k11783 in k10718 in k10715 in k7274 in k7271 in k6978 in k6975 in k6971 in k6680 in k6677 in k6674 in k6671 */
static void C_fcall f_28722(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[13],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_28722,NULL,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_28729,a[2]=((C_word*)t0)[9],a[3]=((C_word*)t0)[10],tmp=(C_word)a,a+=4,tmp);
t3=(*a=C_CLOSURE_TYPE|8,a[1]=(C_word)f_28733,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=t2,a[7]=((C_word*)t0)[7],a[8]=((C_word*)t0)[8],tmp=(C_word)a,a+=9,tmp);
C_trace("ChickenBridge.scm: 381  reverse");
t4=*((C_word*)lf[216]+1);
((C_proc3)C_retrieve_proc(t4))(3,t4,t3,((C_word*)((C_word*)t0)[2])[1]);}

/* k28731 in k28720 in k28717 in k28714 in k28710 in k28699 in parse-accumulation in k26697 in k26694 in k26691 in k26688 in k26263 in k26260 in k26257 in k26254 in k26251 in k25668 in k25665 in k25142 in k25139 in k25136 in k25133 in k25130 in k25127 in k25124 in k25121 in k25118 in k25115 in k25112 in k25109 in k25106 in k25103 in k25100 in k25097 in k25094 in k25091 in k25088 in k25085 in k25082 in k24943 in k24940 in k24937 in k24934 in k24878 in k24875 in k24872 in k24869 in k24866 in k24863 in k24860 in k24857 in k23555 in k23486 in k23293 in k23290 in k23185 in k23134 in k11783 in k10718 in k10715 in k7274 in k7271 in k6978 in k6975 in k6971 in k6680 in k6677 in k6674 in k6671 */
static void C_ccall f_28733(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_28733,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|8,a[1]=(C_word)f_28737,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=t1,a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],a[7]=((C_word*)t0)[7],a[8]=((C_word*)t0)[8],tmp=(C_word)a,a+=9,tmp);
C_trace("ChickenBridge.scm: 381  reverse");
t3=*((C_word*)lf[216]+1);
((C_proc3)C_retrieve_proc(t3))(3,t3,t2,((C_word*)((C_word*)t0)[2])[1]);}

/* k28735 in k28731 in k28720 in k28717 in k28714 in k28710 in k28699 in parse-accumulation in k26697 in k26694 in k26691 in k26688 in k26263 in k26260 in k26257 in k26254 in k26251 in k25668 in k25665 in k25142 in k25139 in k25136 in k25133 in k25130 in k25127 in k25124 in k25121 in k25118 in k25115 in k25112 in k25109 in k25106 in k25103 in k25100 in k25097 in k25094 in k25091 in k25088 in k25085 in k25082 in k24943 in k24940 in k24937 in k24934 in k24878 in k24875 in k24872 in k24869 in k24866 in k24863 in k24860 in k24857 in k23555 in k23486 in k23293 in k23290 in k23185 in k23134 in k11783 in k10718 in k10715 in k7274 in k7271 in k6978 in k6975 in k6971 in k6680 in k6677 in k6674 in k6671 */
static void C_ccall f_28737(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_28737,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|8,a[1]=(C_word)f_28741,a[2]=((C_word*)t0)[3],a[3]=t1,a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],a[7]=((C_word*)t0)[7],a[8]=((C_word*)t0)[8],tmp=(C_word)a,a+=9,tmp);
C_trace("ChickenBridge.scm: 381  reverse");
t3=*((C_word*)lf[216]+1);
((C_proc3)C_retrieve_proc(t3))(3,t3,t2,((C_word*)((C_word*)t0)[2])[1]);}

/* k28739 in k28735 in k28731 in k28720 in k28717 in k28714 in k28710 in k28699 in parse-accumulation in k26697 in k26694 in k26691 in k26688 in k26263 in k26260 in k26257 in k26254 in k26251 in k25668 in k25665 in k25142 in k25139 in k25136 in k25133 in k25130 in k25127 in k25124 in k25121 in k25118 in k25115 in k25112 in k25109 in k25106 in k25103 in k25100 in k25097 in k25094 in k25091 in k25088 in k25085 in k25082 in k24943 in k24940 in k24937 in k24934 in k24878 in k24875 in k24872 in k24869 in k24866 in k24863 in k24860 in k24857 in k23555 in k23486 in k23293 in k23290 in k23185 in k23134 in k11783 in k10718 in k10715 in k7274 in k7271 in k6978 in k6975 in k6971 in k6680 in k6677 in k6674 in k6671 */
static void C_ccall f_28741(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_28741,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|8,a[1]=(C_word)f_28745,a[2]=t1,a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],a[7]=((C_word*)t0)[7],a[8]=((C_word*)t0)[8],tmp=(C_word)a,a+=9,tmp);
C_trace("ChickenBridge.scm: 381  reverse");
t3=*((C_word*)lf[216]+1);
((C_proc3)C_retrieve_proc(t3))(3,t3,t2,((C_word*)((C_word*)t0)[2])[1]);}

/* k28743 in k28739 in k28735 in k28731 in k28720 in k28717 in k28714 in k28710 in k28699 in parse-accumulation in k26697 in k26694 in k26691 in k26688 in k26263 in k26260 in k26257 in k26254 in k26251 in k25668 in k25665 in k25142 in k25139 in k25136 in k25133 in k25130 in k25127 in k25124 in k25121 in k25118 in k25115 in k25112 in k25109 in k25106 in k25103 in k25100 in k25097 in k25094 in k25091 in k25088 in k25085 in k25082 in k24943 in k24940 in k24937 in k24934 in k24878 in k24875 in k24872 in k24869 in k24866 in k24863 in k24860 in k24857 in k23555 in k23486 in k23293 in k23290 in k23185 in k23134 in k11783 in k10718 in k10715 in k7274 in k7271 in k6978 in k6975 in k6971 in k6680 in k6677 in k6674 in k6671 */
static void C_ccall f_28745(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[45],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_28745,2,t0,t1);}
t2=(C_truep(((C_word*)((C_word*)t0)[8])[1])?(C_word)C_a_i_list(&a,1,((C_word*)((C_word*)t0)[7])[1]):C_SCHEME_END_OF_LIST);
C_trace("ChickenBridge.scm: 381  make-loop-clause");
f_26809(((C_word*)t0)[6],(C_word)C_a_i_list(&a,14,lf[542],((C_word*)t0)[5],lf[543],((C_word*)t0)[4],lf[545],((C_word*)t0)[3],lf[547],((C_word*)t0)[2],lf[550],t1,lf[544],t2,lf[546],C_SCHEME_END_OF_LIST));}

/* k28727 in k28720 in k28717 in k28714 in k28710 in k28699 in parse-accumulation in k26697 in k26694 in k26691 in k26688 in k26263 in k26260 in k26257 in k26254 in k26251 in k25668 in k25665 in k25142 in k25139 in k25136 in k25133 in k25130 in k25127 in k25124 in k25121 in k25118 in k25115 in k25112 in k25109 in k25106 in k25103 in k25100 in k25097 in k25094 in k25091 in k25088 in k25085 in k25082 in k24943 in k24940 in k24937 in k24934 in k24878 in k24875 in k24872 in k24869 in k24866 in k24863 in k24860 in k24857 in k23555 in k23486 in k23293 in k23290 in k23185 in k23134 in k11783 in k10718 in k10715 in k7274 in k7271 in k6978 in k6975 in k6971 in k6680 in k6677 in k6674 in k6671 */
static void C_ccall f_28729(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 381  values");
C_values(4,0,((C_word*)t0)[3],t1,((C_word*)((C_word*)t0)[2])[1]);}

/* collector-acc in parse-accumulation in k26697 in k26694 in k26691 in k26688 in k26263 in k26260 in k26257 in k26254 in k26251 in k25668 in k25665 in k25142 in k25139 in k25136 in k25133 in k25130 in k25127 in k25124 in k25121 in k25118 in k25115 in k25112 in k25109 in k25106 in k25103 in k25100 in k25097 in k25094 in k25091 in k25088 in k25085 in k25082 in k24943 in k24940 in k24937 in k24934 in k24878 in k24875 in k24872 in k24869 in k24866 in k24863 in k24860 in k24857 in k23555 in k23486 in k23293 in k23290 in k23185 in k23134 in k11783 in k10718 in k10715 in k7274 in k7271 in k6978 in k6975 in k6971 in k6680 in k6677 in k6674 in k6671 */
static void C_fcall f_28689(C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word *a;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_28689,NULL,2,t1,t2);}
t3=t1;
((C_proc2)(void*)(*((C_word*)t3+1)))(2,t3,(C_word)C_i_caddr(t2));}

/* collector-type in parse-accumulation in k26697 in k26694 in k26691 in k26688 in k26263 in k26260 in k26257 in k26254 in k26251 in k25668 in k25665 in k25142 in k25139 in k25136 in k25133 in k25130 in k25127 in k25124 in k25121 in k25118 in k25115 in k25112 in k25109 in k25106 in k25103 in k25100 in k25097 in k25094 in k25091 in k25088 in k25085 in k25082 in k24943 in k24940 in k24937 in k24934 in k24878 in k24875 in k24872 in k24869 in k24866 in k24863 in k24860 in k24857 in k23555 in k23486 in k23293 in k23290 in k23185 in k23134 in k11783 in k10718 in k10715 in k7274 in k7271 in k6978 in k6975 in k6971 in k6680 in k6677 in k6674 in k6671 */
static void C_fcall f_28684(C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word *a;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_28684,NULL,2,t1,t2);}
t3=t1;
((C_proc2)(void*)(*((C_word*)t3+1)))(2,t3,(C_word)C_i_cadr(t2));}

/* make-collector in parse-accumulation in k26697 in k26694 in k26691 in k26688 in k26263 in k26260 in k26257 in k26254 in k26251 in k25668 in k25665 in k25142 in k25139 in k25136 in k25133 in k25130 in k25127 in k25124 in k25121 in k25118 in k25115 in k25112 in k25109 in k25106 in k25103 in k25100 in k25097 in k25094 in k25091 in k25088 in k25085 in k25082 in k24943 in k24940 in k24937 in k24934 in k24878 in k24875 in k24872 in k24869 in k24866 in k24863 in k24860 in k24857 in k23555 in k23486 in k23293 in k23290 in k23185 in k23134 in k11783 in k10718 in k10715 in k7274 in k7271 in k6978 in k6975 in k6971 in k6680 in k6677 in k6674 in k6671 */
static void C_fcall f_28679(C_word t1,C_word t2,C_word t3,C_word t4,C_word t5){
C_word tmp;
C_word t6;
C_word ab[12],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_28679,NULL,5,t1,t2,t3,t4,t5);}
t6=t1;
((C_proc2)(void*)(*((C_word*)t6+1)))(2,t6,(C_word)C_a_i_list(&a,4,t2,t3,t4,t5));}

/* parse-initially in k26697 in k26694 in k26691 in k26688 in k26263 in k26260 in k26257 in k26254 in k26251 in k25668 in k25665 in k25142 in k25139 in k25136 in k25133 in k25130 in k25127 in k25124 in k25121 in k25118 in k25115 in k25112 in k25109 in k25106 in k25103 in k25100 in k25097 in k25094 in k25091 in k25088 in k25085 in k25082 in k24943 in k24940 in k24937 in k24934 in k24878 in k24875 in k24872 in k24869 in k24866 in k24863 in k24860 in k24857 in k23555 in k23486 in k23293 in k23290 in k23185 in k23134 in k11783 in k10718 in k10715 in k7274 in k7271 in k6978 in k6975 in k6971 in k6680 in k6677 in k6674 in k6671 */
static void C_ccall f_28511(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4){
C_word tmp;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word ab[19],*a=ab;
if(c!=5) C_bad_argc_2(c,5,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr5,(void*)f_28511,5,t0,t1,t2,t3,t4);}
t5=(*a=C_VECTOR_TYPE|1,a[1]=t2,tmp=(C_word)a,a+=2,tmp);
t6=(C_word)C_i_car(((C_word*)t5)[1]);
t7=(C_word)C_i_cdr(((C_word*)t5)[1]);
t8=C_set_block_item(t5,0,t7);
t9=C_SCHEME_FALSE;
t10=(*a=C_VECTOR_TYPE|1,a[1]=t9,tmp=(C_word)a,a+=2,tmp);
t11=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_28522,a[2]=t6,a[3]=t1,a[4]=t10,a[5]=t5,tmp=(C_word)a,a+=6,tmp);
if(C_truep((C_word)C_i_nullp(((C_word*)t5)[1]))){
C_trace("ChickenBridge.scm: 381  loop-error");
f_27049(t11,t4,((C_word*)t5)[1],(C_word)C_a_i_list(&a,3,lf[651],t6,lf[652]));}
else{
t12=t11;
f_28522(2,t12,C_SCHEME_UNDEFINED);}}

/* k28520 in parse-initially in k26697 in k26694 in k26691 in k26688 in k26263 in k26260 in k26257 in k26254 in k26251 in k25668 in k25665 in k25142 in k25139 in k25136 in k25133 in k25130 in k25127 in k25124 in k25121 in k25118 in k25115 in k25112 in k25109 in k25106 in k25103 in k25100 in k25097 in k25094 in k25091 in k25088 in k25085 in k25082 in k24943 in k24940 in k24937 in k24934 in k24878 in k24875 in k24872 in k24869 in k24866 in k24863 in k24860 in k24857 in k23555 in k23486 in k23293 in k23290 in k23185 in k23134 in k11783 in k10718 in k10715 in k7274 in k7271 in k6978 in k6975 in k6971 in k6680 in k6677 in k6674 in k6671 */
static void C_ccall f_28522(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word ab[19],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_28522,2,t0,t1);}
t2=(C_word)C_i_car(((C_word*)((C_word*)t0)[5])[1]);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[5])[1]);
t4=C_mutate(((C_word *)((C_word*)t0)[5])+1,t3);
t5=C_mutate(((C_word *)((C_word*)t0)[4])+1,t2);
t6=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_28537,a[2]=((C_word*)t0)[5],a[3]=((C_word*)t0)[3],tmp=(C_word)a,a+=4,tmp);
t7=(C_word)C_a_i_list(&a,1,((C_word*)((C_word*)t0)[4])[1]);
C_trace("ChickenBridge.scm: 381  make-loop-clause");
f_26809(t6,(C_word)C_a_i_list(&a,4,lf[542],((C_word*)t0)[2],lf[545],t7));}

/* k28535 in k28520 in parse-initially in k26697 in k26694 in k26691 in k26688 in k26263 in k26260 in k26257 in k26254 in k26251 in k25668 in k25665 in k25142 in k25139 in k25136 in k25133 in k25130 in k25127 in k25124 in k25121 in k25118 in k25115 in k25112 in k25109 in k25106 in k25103 in k25100 in k25097 in k25094 in k25091 in k25088 in k25085 in k25082 in k24943 in k24940 in k24937 in k24934 in k24878 in k24875 in k24872 in k24869 in k24866 in k24863 in k24860 in k24857 in k23555 in k23486 in k23293 in k23290 in k23185 in k23134 in k11783 in k10718 in k10715 in k7274 in k7271 in k6978 in k6975 in k6971 in k6680 in k6677 in k6674 in k6671 */
static void C_ccall f_28537(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 381  values");
C_values(4,0,((C_word*)t0)[3],t1,((C_word*)((C_word*)t0)[2])[1]);}

/* parse-finally in k26697 in k26694 in k26691 in k26688 in k26263 in k26260 in k26257 in k26254 in k26251 in k25668 in k25665 in k25142 in k25139 in k25136 in k25133 in k25130 in k25127 in k25124 in k25121 in k25118 in k25115 in k25112 in k25109 in k25106 in k25103 in k25100 in k25097 in k25094 in k25091 in k25088 in k25085 in k25082 in k24943 in k24940 in k24937 in k24934 in k24878 in k24875 in k24872 in k24869 in k24866 in k24863 in k24860 in k24857 in k23555 in k23486 in k23293 in k23290 in k23185 in k23134 in k11783 in k10718 in k10715 in k7274 in k7271 in k6978 in k6975 in k6971 in k6680 in k6677 in k6674 in k6671 */
static void C_ccall f_28473(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4){
C_word tmp;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word ab[19],*a=ab;
if(c!=5) C_bad_argc_2(c,5,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr5,(void*)f_28473,5,t0,t1,t2,t3,t4);}
t5=(*a=C_VECTOR_TYPE|1,a[1]=t2,tmp=(C_word)a,a+=2,tmp);
t6=(C_word)C_i_car(((C_word*)t5)[1]);
t7=(C_word)C_i_cdr(((C_word*)t5)[1]);
t8=C_set_block_item(t5,0,t7);
t9=C_SCHEME_FALSE;
t10=(*a=C_VECTOR_TYPE|1,a[1]=t9,tmp=(C_word)a,a+=2,tmp);
t11=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_28484,a[2]=t6,a[3]=t1,a[4]=t10,a[5]=t5,tmp=(C_word)a,a+=6,tmp);
if(C_truep((C_word)C_i_nullp(((C_word*)t5)[1]))){
C_trace("ChickenBridge.scm: 381  loop-error");
f_27049(t11,t4,((C_word*)t5)[1],(C_word)C_a_i_list(&a,3,lf[648],t6,lf[649]));}
else{
t12=t11;
f_28484(2,t12,C_SCHEME_UNDEFINED);}}

/* k28482 in parse-finally in k26697 in k26694 in k26691 in k26688 in k26263 in k26260 in k26257 in k26254 in k26251 in k25668 in k25665 in k25142 in k25139 in k25136 in k25133 in k25130 in k25127 in k25124 in k25121 in k25118 in k25115 in k25112 in k25109 in k25106 in k25103 in k25100 in k25097 in k25094 in k25091 in k25088 in k25085 in k25082 in k24943 in k24940 in k24937 in k24934 in k24878 in k24875 in k24872 in k24869 in k24866 in k24863 in k24860 in k24857 in k23555 in k23486 in k23293 in k23290 in k23185 in k23134 in k11783 in k10718 in k10715 in k7274 in k7271 in k6978 in k6975 in k6971 in k6680 in k6677 in k6674 in k6671 */
static void C_ccall f_28484(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word ab[19],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_28484,2,t0,t1);}
t2=(C_word)C_i_car(((C_word*)((C_word*)t0)[5])[1]);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[5])[1]);
t4=C_mutate(((C_word *)((C_word*)t0)[5])+1,t3);
t5=C_mutate(((C_word *)((C_word*)t0)[4])+1,t2);
t6=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_28499,a[2]=((C_word*)t0)[5],a[3]=((C_word*)t0)[3],tmp=(C_word)a,a+=4,tmp);
t7=(C_word)C_a_i_list(&a,1,((C_word*)((C_word*)t0)[4])[1]);
C_trace("ChickenBridge.scm: 381  make-loop-clause");
f_26809(t6,(C_word)C_a_i_list(&a,4,lf[542],((C_word*)t0)[2],lf[549],t7));}

/* k28497 in k28482 in parse-finally in k26697 in k26694 in k26691 in k26688 in k26263 in k26260 in k26257 in k26254 in k26251 in k25668 in k25665 in k25142 in k25139 in k25136 in k25133 in k25130 in k25127 in k25124 in k25121 in k25118 in k25115 in k25112 in k25109 in k25106 in k25103 in k25100 in k25097 in k25094 in k25091 in k25088 in k25085 in k25082 in k24943 in k24940 in k24937 in k24934 in k24878 in k24875 in k24872 in k24869 in k24866 in k24863 in k24860 in k24857 in k23555 in k23486 in k23293 in k23290 in k23185 in k23134 in k11783 in k10718 in k10715 in k7274 in k7271 in k6978 in k6975 in k6971 in k6680 in k6677 in k6674 in k6671 */
static void C_ccall f_28499(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 381  values");
C_values(4,0,((C_word*)t0)[3],t1,((C_word*)((C_word*)t0)[2])[1]);}

/* parse-do in k26697 in k26694 in k26691 in k26688 in k26263 in k26260 in k26257 in k26254 in k26251 in k25668 in k25665 in k25142 in k25139 in k25136 in k25133 in k25130 in k25127 in k25124 in k25121 in k25118 in k25115 in k25112 in k25109 in k25106 in k25103 in k25100 in k25097 in k25094 in k25091 in k25088 in k25085 in k25082 in k24943 in k24940 in k24937 in k24934 in k24878 in k24875 in k24872 in k24869 in k24866 in k24863 in k24860 in k24857 in k23555 in k23486 in k23293 in k23290 in k23185 in k23134 in k11783 in k10718 in k10715 in k7274 in k7271 in k6978 in k6975 in k6971 in k6680 in k6677 in k6674 in k6671 */
static void C_ccall f_28406(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4){
C_word tmp;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word t14;
C_word t15;
C_word t16;
C_word ab[21],*a=ab;
if(c!=5) C_bad_argc_2(c,5,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr5,(void*)f_28406,5,t0,t1,t2,t3,t4);}
t5=(*a=C_VECTOR_TYPE|1,a[1]=t2,tmp=(C_word)a,a+=2,tmp);
t6=((C_word*)t5)[1];
t7=(C_word)C_i_car(((C_word*)t5)[1]);
t8=(C_word)C_i_cdr(((C_word*)t5)[1]);
t9=C_set_block_item(t5,0,t8);
t10=C_SCHEME_END_OF_LIST;
t11=(*a=C_VECTOR_TYPE|1,a[1]=t10,tmp=(C_word)a,a+=2,tmp);
t12=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_28417,a[2]=t11,a[3]=t7,a[4]=t5,a[5]=t1,tmp=(C_word)a,a+=6,tmp);
t13=C_SCHEME_UNDEFINED;
t14=(*a=C_VECTOR_TYPE|1,a[1]=t13,tmp=(C_word)a,a+=2,tmp);
t15=C_set_block_item(t14,0,(*a=C_CLOSURE_TYPE|8,a[1]=(C_word)f_28426,a[2]=t14,a[3]=t7,a[4]=t6,a[5]=t4,a[6]=t11,a[7]=t5,a[8]=((C_word)li446),tmp=(C_word)a,a+=9,tmp));
t16=((C_word*)t14)[1];
f_28426(t16,t12);}

/* do4641 in parse-do in k26697 in k26694 in k26691 in k26688 in k26263 in k26260 in k26257 in k26254 in k26251 in k25668 in k25665 in k25142 in k25139 in k25136 in k25133 in k25130 in k25127 in k25124 in k25121 in k25118 in k25115 in k25112 in k25109 in k25106 in k25103 in k25100 in k25097 in k25094 in k25091 in k25088 in k25085 in k25082 in k24943 in k24940 in k24937 in k24934 in k24878 in k24875 in k24872 in k24869 in k24866 in k24863 in k24860 in k24857 in k23555 in k23486 in k23293 in k23290 in k23185 in k23134 in k11783 in k10718 in k10715 in k7274 in k7271 in k6978 in k6975 in k6971 in k6680 in k6677 in k6674 in k6671 */
static void C_fcall f_28426(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_28426,NULL,2,t0,t1);}
t2=(C_word)C_i_nullp(((C_word*)((C_word*)t0)[7])[1]);
t3=(*a=C_CLOSURE_TYPE|8,a[1]=(C_word)f_28436,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[7],a[4]=((C_word*)t0)[3],a[5]=((C_word*)t0)[4],a[6]=((C_word*)t0)[5],a[7]=t1,a[8]=((C_word*)t0)[6],tmp=(C_word)a,a+=9,tmp);
if(C_truep(t2)){
t4=t3;
f_28436(2,t4,t2);}
else{
t4=(C_word)C_i_car(((C_word*)((C_word*)t0)[7])[1]);
C_trace("ChickenBridge.scm: 381  loop-op?");
f_27031(t3,t4,((C_word*)t0)[5]);}}

/* k28434 in do4641 in parse-do in k26697 in k26694 in k26691 in k26688 in k26263 in k26260 in k26257 in k26254 in k26251 in k25668 in k25665 in k25142 in k25139 in k25136 in k25133 in k25130 in k25127 in k25124 in k25121 in k25118 in k25115 in k25112 in k25109 in k25106 in k25103 in k25100 in k25097 in k25094 in k25091 in k25088 in k25085 in k25082 in k24943 in k24940 in k24937 in k24934 in k24878 in k24875 in k24872 in k24869 in k24866 in k24863 in k24860 in k24857 in k23555 in k23486 in k23293 in k23290 in k23185 in k23134 in k11783 in k10718 in k10715 in k7274 in k7271 in k6978 in k6975 in k6971 in k6680 in k6677 in k6674 in k6671 */
static void C_ccall f_28436(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word ab[16],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_28436,2,t0,t1);}
if(C_truep(t1)){
if(C_truep((C_word)C_i_nullp(((C_word*)((C_word*)t0)[8])[1]))){
C_trace("ChickenBridge.scm: 381  loop-error");
f_27049(((C_word*)t0)[7],((C_word*)t0)[6],((C_word*)t0)[5],(C_word)C_a_i_list(&a,3,lf[645],((C_word*)t0)[4],lf[646]));}
else{
t2=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_28449,a[2]=((C_word*)t0)[7],a[3]=((C_word*)t0)[8],tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 381  reverse");
t3=*((C_word*)lf[216]+1);
((C_proc3)C_retrieve_proc(t3))(3,t3,t2,((C_word*)((C_word*)t0)[8])[1]);}}
else{
t2=(C_word)C_i_car(((C_word*)((C_word*)t0)[3])[1]);
t3=(C_word)C_a_i_cons(&a,2,t2,((C_word*)((C_word*)t0)[8])[1]);
t4=C_mutate(((C_word *)((C_word*)t0)[8])+1,t3);
t5=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)((C_word*)t0)[2])[1];
f_28426(t7,((C_word*)t0)[7]);}}

/* k28447 in k28434 in do4641 in parse-do in k26697 in k26694 in k26691 in k26688 in k26263 in k26260 in k26257 in k26254 in k26251 in k25668 in k25665 in k25142 in k25139 in k25136 in k25133 in k25130 in k25127 in k25124 in k25121 in k25118 in k25115 in k25112 in k25109 in k25106 in k25103 in k25100 in k25097 in k25094 in k25091 in k25088 in k25085 in k25082 in k24943 in k24940 in k24937 in k24934 in k24878 in k24875 in k24872 in k24869 in k24866 in k24863 in k24860 in k24857 in k23555 in k23486 in k23293 in k23290 in k23185 in k23134 in k11783 in k10718 in k10715 in k7274 in k7271 in k6978 in k6975 in k6971 in k6680 in k6677 in k6674 in k6671 */
static void C_ccall f_28449(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[3])+1,t1);
t3=((C_word*)t0)[2];
((C_proc2)(void*)(*((C_word*)t3+1)))(2,t3,t2);}

/* k28415 in parse-do in k26697 in k26694 in k26691 in k26688 in k26263 in k26260 in k26257 in k26254 in k26251 in k25668 in k25665 in k25142 in k25139 in k25136 in k25133 in k25130 in k25127 in k25124 in k25121 in k25118 in k25115 in k25112 in k25109 in k25106 in k25103 in k25100 in k25097 in k25094 in k25091 in k25088 in k25085 in k25082 in k24943 in k24940 in k24937 in k24934 in k24878 in k24875 in k24872 in k24869 in k24866 in k24863 in k24860 in k24857 in k23555 in k23486 in k23293 in k23290 in k23185 in k23134 in k11783 in k10718 in k10715 in k7274 in k7271 in k6978 in k6975 in k6971 in k6680 in k6677 in k6674 in k6671 */
static void C_ccall f_28417(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[16],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_28417,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_28424,a[2]=((C_word*)t0)[4],a[3]=((C_word*)t0)[5],tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 381  make-loop-clause");
f_26809(t2,(C_word)C_a_i_list(&a,4,lf[542],((C_word*)t0)[3],lf[547],((C_word*)((C_word*)t0)[2])[1]));}

/* k28422 in k28415 in parse-do in k26697 in k26694 in k26691 in k26688 in k26263 in k26260 in k26257 in k26254 in k26251 in k25668 in k25665 in k25142 in k25139 in k25136 in k25133 in k25130 in k25127 in k25124 in k25121 in k25118 in k25115 in k25112 in k25109 in k25106 in k25103 in k25100 in k25097 in k25094 in k25091 in k25088 in k25085 in k25082 in k24943 in k24940 in k24937 in k24934 in k24878 in k24875 in k24872 in k24869 in k24866 in k24863 in k24860 in k24857 in k23555 in k23486 in k23293 in k23290 in k23185 in k23134 in k11783 in k10718 in k10715 in k7274 in k7271 in k6978 in k6975 in k6971 in k6680 in k6677 in k6674 in k6671 */
static void C_ccall f_28424(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 381  values");
C_values(4,0,((C_word*)t0)[3],t1,((C_word*)((C_word*)t0)[2])[1]);}

/* parse-with in k26697 in k26694 in k26691 in k26688 in k26263 in k26260 in k26257 in k26254 in k26251 in k25668 in k25665 in k25142 in k25139 in k25136 in k25133 in k25130 in k25127 in k25124 in k25121 in k25118 in k25115 in k25112 in k25109 in k25106 in k25103 in k25100 in k25097 in k25094 in k25091 in k25088 in k25085 in k25082 in k24943 in k24940 in k24937 in k24934 in k24878 in k24875 in k24872 in k24869 in k24866 in k24863 in k24860 in k24857 in k23555 in k23486 in k23293 in k23290 in k23185 in k23134 in k11783 in k10718 in k10715 in k7274 in k7271 in k6978 in k6975 in k6971 in k6680 in k6677 in k6674 in k6671 */
static void C_ccall f_28213(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4){
C_word tmp;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word t14;
C_word t15;
C_word t16;
C_word t17;
C_word t18;
C_word t19;
C_word t20;
C_word t21;
C_word t22;
C_word t23;
C_word ab[37],*a=ab;
if(c!=5) C_bad_argc_2(c,5,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr5,(void*)f_28213,5,t0,t1,t2,t3,t4);}
t5=t2;
t6=(C_word)C_i_cdr(t2);
t7=t6;
t8=(*a=C_VECTOR_TYPE|1,a[1]=t7,tmp=(C_word)a,a+=2,tmp);
t9=C_SCHEME_FALSE;
t10=(*a=C_VECTOR_TYPE|1,a[1]=t9,tmp=(C_word)a,a+=2,tmp);
t11=C_SCHEME_FALSE;
t12=(*a=C_VECTOR_TYPE|1,a[1]=t11,tmp=(C_word)a,a+=2,tmp);
t13=C_SCHEME_FALSE;
t14=(*a=C_VECTOR_TYPE|1,a[1]=t13,tmp=(C_word)a,a+=2,tmp);
t15=C_SCHEME_END_OF_LIST;
t16=(*a=C_VECTOR_TYPE|1,a[1]=t15,tmp=(C_word)a,a+=2,tmp);
t17=C_SCHEME_END_OF_LIST;
t18=(*a=C_VECTOR_TYPE|1,a[1]=t17,tmp=(C_word)a,a+=2,tmp);
t19=(*a=C_CLOSURE_TYPE|10,a[1]=(C_word)f_28220,a[2]=t12,a[3]=t10,a[4]=t5,a[5]=t4,a[6]=t14,a[7]=t16,a[8]=t18,a[9]=t8,a[10]=t1,tmp=(C_word)a,a+=11,tmp);
t20=C_SCHEME_UNDEFINED;
t21=(*a=C_VECTOR_TYPE|1,a[1]=t20,tmp=(C_word)a,a+=2,tmp);
t22=C_set_block_item(t21,0,(*a=C_CLOSURE_TYPE|11,a[1]=(C_word)f_28273,a[2]=t18,a[3]=t16,a[4]=t5,a[5]=t4,a[6]=t14,a[7]=t12,a[8]=t10,a[9]=t21,a[10]=t8,a[11]=((C_word)li444),tmp=(C_word)a,a+=12,tmp));
t23=((C_word*)t21)[1];
f_28273(t23,t19,C_SCHEME_TRUE,C_SCHEME_FALSE);}

/* do4597 in parse-with in k26697 in k26694 in k26691 in k26688 in k26263 in k26260 in k26257 in k26254 in k26251 in k25668 in k25665 in k25142 in k25139 in k25136 in k25133 in k25130 in k25127 in k25124 in k25121 in k25118 in k25115 in k25112 in k25109 in k25106 in k25103 in k25100 in k25097 in k25094 in k25091 in k25088 in k25085 in k25082 in k24943 in k24940 in k24937 in k24934 in k24878 in k24875 in k24872 in k24869 in k24866 in k24863 in k24860 in k24857 in k23555 in k23486 in k23293 in k23290 in k23185 in k23134 in k11783 in k10718 in k10715 in k7274 in k7271 in k6978 in k6975 in k6971 in k6680 in k6677 in k6674 in k6671 */
static void C_fcall f_28273(C_word t0,C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word ab[18],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_28273,NULL,4,t0,t1,t2,t3);}
t4=(*a=C_VECTOR_TYPE|1,a[1]=t2,tmp=(C_word)a,a+=2,tmp);
t5=(*a=C_VECTOR_TYPE|1,a[1]=t3,tmp=(C_word)a,a+=2,tmp);
t6=(C_word)C_i_nullp(((C_word*)((C_word*)t0)[10])[1]);
t7=(*a=C_CLOSURE_TYPE|13,a[1]=(C_word)f_28283,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],a[7]=((C_word*)t0)[7],a[8]=((C_word*)t0)[8],a[9]=t4,a[10]=((C_word*)t0)[9],a[11]=t5,a[12]=((C_word*)t0)[10],a[13]=t1,tmp=(C_word)a,a+=14,tmp);
if(C_truep(t6)){
t8=t7;
f_28283(2,t8,t6);}
else{
t8=(C_word)C_i_car(((C_word*)((C_word*)t0)[10])[1]);
C_trace("ChickenBridge.scm: 381  loop-op?");
f_27031(t7,t8,((C_word*)t0)[5]);}}

/* k28281 in do4597 in parse-with in k26697 in k26694 in k26691 in k26688 in k26263 in k26260 in k26257 in k26254 in k26251 in k25668 in k25665 in k25142 in k25139 in k25136 in k25133 in k25130 in k25127 in k25124 in k25121 in k25118 in k25115 in k25112 in k25109 in k25106 in k25103 in k25100 in k25097 in k25094 in k25091 in k25088 in k25085 in k25082 in k24943 in k24940 in k24937 in k24934 in k24878 in k24875 in k24872 in k24869 in k24866 in k24863 in k24860 in k24857 in k23555 in k23486 in k23293 in k23290 in k23185 in k23134 in k11783 in k10718 in k10715 in k7274 in k7271 in k6978 in k6975 in k6971 in k6680 in k6677 in k6674 in k6671 */
static void C_ccall f_28283(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word ab[19],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_28283,2,t0,t1);}
if(C_truep(t1)){
t2=((C_word*)t0)[13];
((C_proc2)(void*)(*((C_word*)t2+1)))(2,t2,C_SCHEME_UNDEFINED);}
else{
t2=(C_word)C_i_car(((C_word*)((C_word*)t0)[12])[1]);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[12])[1]);
t4=C_mutate(((C_word *)((C_word*)t0)[12])+1,t3);
t5=C_mutate(((C_word *)((C_word*)t0)[11])+1,t2);
t6=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_28294,a[2]=((C_word*)t0)[11],a[3]=((C_word*)t0)[9],a[4]=((C_word*)t0)[13],a[5]=((C_word*)t0)[10],tmp=(C_word)a,a+=6,tmp);
t7=(*a=C_CLOSURE_TYPE|12,a[1]=(C_word)f_28397,a[2]=((C_word*)t0)[12],a[3]=((C_word*)t0)[2],a[4]=((C_word*)t0)[3],a[5]=((C_word*)t0)[4],a[6]=((C_word*)t0)[5],a[7]=t6,a[8]=((C_word*)t0)[6],a[9]=((C_word*)t0)[7],a[10]=((C_word*)t0)[11],a[11]=((C_word*)t0)[8],a[12]=((C_word*)t0)[9],tmp=(C_word)a,a+=13,tmp);
C_trace("ChickenBridge.scm: 381  loop-variable?");
f_27037(t7,((C_word*)((C_word*)t0)[11])[1]);}}

/* k28395 in k28281 in do4597 in parse-with in k26697 in k26694 in k26691 in k26688 in k26263 in k26260 in k26257 in k26254 in k26251 in k25668 in k25665 in k25142 in k25139 in k25136 in k25133 in k25130 in k25127 in k25124 in k25121 in k25118 in k25115 in k25112 in k25109 in k25106 in k25103 in k25100 in k25097 in k25094 in k25091 in k25088 in k25085 in k25082 in k24943 in k24940 in k24937 in k24934 in k24878 in k24875 in k24872 in k24869 in k24866 in k24863 in k24860 in k24857 in k23555 in k23486 in k23293 in k23290 in k23185 in k23134 in k11783 in k10718 in k10715 in k7274 in k7271 in k6978 in k6975 in k6971 in k6680 in k6677 in k6674 in k6671 */
static void C_ccall f_28397(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word ab[64],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_28397,2,t0,t1);}
t2=(C_truep(t1)?((C_word*)((C_word*)t0)[12])[1]:C_SCHEME_FALSE);
if(C_truep(t2)){
t3=(*a=C_CLOSURE_TYPE|9,a[1]=(C_word)f_28303,a[2]=((C_word*)t0)[5],a[3]=((C_word*)t0)[6],a[4]=((C_word*)t0)[7],a[5]=((C_word*)t0)[12],a[6]=((C_word*)t0)[8],a[7]=((C_word*)t0)[9],a[8]=((C_word*)t0)[10],a[9]=((C_word*)t0)[11],tmp=(C_word)a,a+=10,tmp);
if(C_truep(((C_word*)((C_word*)t0)[11])[1])){
C_trace("ChickenBridge.scm: 381  loop-error");
f_27049(t3,((C_word*)t0)[6],((C_word*)t0)[5],(C_word)C_a_i_list(&a,3,lf[635],((C_word*)((C_word*)t0)[10])[1],lf[636]));}
else{
t4=t3;
f_28303(2,t4,C_SCHEME_UNDEFINED);}}
else{
t3=(C_word)C_eqp(((C_word*)((C_word*)t0)[10])[1],lf[456]);
if(C_truep(t3)){
t4=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_28325,a[2]=((C_word*)t0)[7],a[3]=((C_word*)t0)[12],a[4]=((C_word*)t0)[8],a[5]=((C_word*)t0)[9],a[6]=((C_word*)t0)[11],tmp=(C_word)a,a+=7,tmp);
if(C_truep(((C_word*)((C_word*)t0)[8])[1])){
C_trace("ChickenBridge.scm: 381  loop-error");
f_27049(t4,((C_word*)t0)[6],((C_word*)t0)[5],(C_word)C_a_i_list(&a,1,lf[637]));}
else{
if(C_truep(((C_word*)((C_word*)t0)[11])[1])){
if(C_truep(((C_word*)((C_word*)t0)[9])[1])){
t5=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_28354,a[2]=t4,a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[9],a[5]=((C_word*)t0)[11],a[6]=((C_word*)t0)[4],tmp=(C_word)a,a+=7,tmp);
C_trace("ChickenBridge.scm: 381  make-binding");
f_27043(t5,((C_word*)((C_word*)t0)[11])[1],C_SCHEME_FALSE);}
else{
t5=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_28362,a[2]=t4,a[3]=((C_word*)t0)[4],tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 381  make-binding");
f_27043(t5,((C_word*)((C_word*)t0)[11])[1],C_SCHEME_FALSE);}}
else{
C_trace("ChickenBridge.scm: 381  loop-error");
f_27049(t4,((C_word*)t0)[6],((C_word*)t0)[5],(C_word)C_a_i_list(&a,1,lf[638]));}}}
else{
t4=(C_word)C_eqp(((C_word*)((C_word*)t0)[10])[1],lf[466]);
if(C_truep(t4)){
if(C_truep(((C_word*)((C_word*)t0)[9])[1])){
C_trace("ChickenBridge.scm: 381  loop-error");
f_27049(((C_word*)t0)[7],((C_word*)t0)[6],((C_word*)t0)[5],(C_word)C_a_i_list(&a,1,lf[639]));}
else{
t5=(C_word)C_i_car(((C_word*)((C_word*)t0)[2])[1]);
t6=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[2])[1]);
t7=C_mutate(((C_word *)((C_word*)t0)[2])+1,t6);
t8=C_mutate(((C_word *)((C_word*)t0)[9])+1,t5);
t9=((C_word*)t0)[7];
f_28294(2,t9,t8);}}
else{
if(C_truep(((C_word*)((C_word*)t0)[12])[1])){
C_trace("ChickenBridge.scm: 381  loop-error");
f_27049(((C_word*)t0)[7],((C_word*)t0)[6],((C_word*)t0)[5],(C_word)C_a_i_list(&a,3,lf[640],((C_word*)((C_word*)t0)[10])[1],lf[641]));}
else{
C_trace("ChickenBridge.scm: 381  loop-error");
f_27049(((C_word*)t0)[7],((C_word*)t0)[6],((C_word*)t0)[5],(C_word)C_a_i_list(&a,3,lf[642],((C_word*)((C_word*)t0)[10])[1],lf[643]));}}}}}

/* k28360 in k28395 in k28281 in do4597 in parse-with in k26697 in k26694 in k26691 in k26688 in k26263 in k26260 in k26257 in k26254 in k26251 in k25668 in k25665 in k25142 in k25139 in k25136 in k25133 in k25130 in k25127 in k25124 in k25121 in k25118 in k25115 in k25112 in k25109 in k25106 in k25103 in k25100 in k25097 in k25094 in k25091 in k25088 in k25085 in k25082 in k24943 in k24940 in k24937 in k24934 in k24878 in k24875 in k24872 in k24869 in k24866 in k24863 in k24860 in k24857 in k23555 in k23486 in k23293 in k23290 in k23185 in k23134 in k11783 in k10718 in k10715 in k7274 in k7271 in k6978 in k6975 in k6971 in k6680 in k6677 in k6674 in k6671 */
static void C_ccall f_28362(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[3],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_28362,2,t0,t1);}
t2=(C_word)C_a_i_cons(&a,2,t1,((C_word*)((C_word*)t0)[3])[1]);
t3=C_mutate(((C_word *)((C_word*)t0)[3])+1,t2);
t4=((C_word*)t0)[2];
f_28325(2,t4,((C_word*)((C_word*)t0)[3])[1]);}

/* k28352 in k28395 in k28281 in do4597 in parse-with in k26697 in k26694 in k26691 in k26688 in k26263 in k26260 in k26257 in k26254 in k26251 in k25668 in k25665 in k25142 in k25139 in k25136 in k25133 in k25130 in k25127 in k25124 in k25121 in k25118 in k25115 in k25112 in k25109 in k25106 in k25103 in k25100 in k25097 in k25094 in k25091 in k25088 in k25085 in k25082 in k24943 in k24940 in k24937 in k24934 in k24878 in k24875 in k24872 in k24869 in k24866 in k24863 in k24860 in k24857 in k23555 in k23486 in k23293 in k23290 in k23185 in k23134 in k11783 in k10718 in k10715 in k7274 in k7271 in k6978 in k6975 in k6971 in k6680 in k6677 in k6674 in k6671 */
static void C_ccall f_28354(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word ab[15],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_28354,2,t0,t1);}
t2=(C_word)C_a_i_cons(&a,2,t1,((C_word*)((C_word*)t0)[6])[1]);
t3=C_mutate(((C_word *)((C_word*)t0)[6])+1,t2);
t4=(C_word)C_a_i_list(&a,3,lf[12],((C_word*)((C_word*)t0)[5])[1],((C_word*)((C_word*)t0)[4])[1]);
t5=(C_word)C_a_i_cons(&a,2,t4,((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_28325(2,t7,((C_word*)((C_word*)t0)[3])[1]);}

/* k28323 in k28395 in k28281 in do4597 in parse-with in k26697 in k26694 in k26691 in k26688 in k26263 in k26260 in k26257 in k26254 in k26251 in k25668 in k25665 in k25142 in k25139 in k25136 in k25133 in k25130 in k25127 in k25124 in k25121 in k25118 in k25115 in k25112 in k25109 in k25106 in k25103 in k25100 in k25097 in k25094 in k25091 in k25088 in k25085 in k25082 in k24943 in k24940 in k24937 in k24934 in k24878 in k24875 in k24872 in k24869 in k24866 in k24863 in k24860 in k24857 in k23555 in k23486 in k23293 in k23290 in k23185 in k23134 in k11783 in k10718 in k10715 in k7274 in k7271 in k6978 in k6975 in k6971 in k6680 in k6677 in k6674 in k6671 */
static void C_ccall f_28325(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word *a;
t2=C_set_block_item(((C_word*)t0)[6],0,C_SCHEME_FALSE);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_FALSE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=C_set_block_item(((C_word*)t0)[3],0,C_SCHEME_TRUE);
t6=((C_word*)t0)[2];
f_28294(2,t6,t5);}

/* k28301 in k28395 in k28281 in do4597 in parse-with in k26697 in k26694 in k26691 in k26688 in k26263 in k26260 in k26257 in k26254 in k26251 in k25668 in k25665 in k25142 in k25139 in k25136 in k25133 in k25130 in k25127 in k25124 in k25121 in k25118 in k25115 in k25112 in k25109 in k25106 in k25103 in k25100 in k25097 in k25094 in k25091 in k25088 in k25085 in k25082 in k24943 in k24940 in k24937 in k24934 in k24878 in k24875 in k24872 in k24869 in k24866 in k24863 in k24860 in k24857 in k23555 in k23486 in k23293 in k23290 in k23185 in k23134 in k11783 in k10718 in k10715 in k7274 in k7271 in k6978 in k6975 in k6971 in k6680 in k6677 in k6674 in k6671 */
static void C_ccall f_28303(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[17],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_28303,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_28306,a[2]=((C_word*)t0)[4],a[3]=((C_word*)t0)[5],a[4]=((C_word*)t0)[6],a[5]=((C_word*)t0)[7],a[6]=((C_word*)t0)[8],a[7]=((C_word*)t0)[9],tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)((C_word*)t0)[7])[1])){
C_trace("ChickenBridge.scm: 381  loop-error");
f_27049(t2,((C_word*)t0)[3],((C_word*)t0)[2],(C_word)C_a_i_list(&a,3,lf[633],((C_word*)((C_word*)t0)[8])[1],lf[634]));}
else{
t3=t2;
f_28306(2,t3,C_SCHEME_UNDEFINED);}}

/* k28304 in k28301 in k28395 in k28281 in do4597 in parse-with in k26697 in k26694 in k26691 in k26688 in k26263 in k26260 in k26257 in k26254 in k26251 in k25668 in k25665 in k25142 in k25139 in k25136 in k25133 in k25130 in k25127 in k25124 in k25121 in k25118 in k25115 in k25112 in k25109 in k25106 in k25103 in k25100 in k25097 in k25094 in k25091 in k25088 in k25085 in k25082 in k24943 in k24940 in k24937 in k24934 in k24878 in k24875 in k24872 in k24869 in k24866 in k24863 in k24860 in k24857 in k23555 in k23486 in k23293 in k23290 in k23185 in k23134 in k11783 in k10718 in k10715 in k7274 in k7271 in k6978 in k6975 in k6971 in k6680 in k6677 in k6674 in k6671 */
static void C_ccall f_28306(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[7])+1,((C_word*)((C_word*)t0)[6])[1]);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_FALSE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_FALSE);
t5=C_set_block_item(((C_word*)t0)[3],0,C_SCHEME_FALSE);
t6=((C_word*)t0)[2];
f_28294(2,t6,t5);}

/* k28292 in k28281 in do4597 in parse-with in k26697 in k26694 in k26691 in k26688 in k26263 in k26260 in k26257 in k26254 in k26251 in k25668 in k25665 in k25142 in k25139 in k25136 in k25133 in k25130 in k25127 in k25124 in k25121 in k25118 in k25115 in k25112 in k25109 in k25106 in k25103 in k25100 in k25097 in k25094 in k25091 in k25088 in k25085 in k25082 in k24943 in k24940 in k24937 in k24934 in k24878 in k24875 in k24872 in k24869 in k24866 in k24863 in k24860 in k24857 in k23555 in k23486 in k23293 in k23290 in k23185 in k23134 in k11783 in k10718 in k10715 in k7274 in k7271 in k6978 in k6975 in k6971 in k6680 in k6677 in k6674 in k6671 */
static void C_ccall f_28294(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
t2=((C_word*)((C_word*)t0)[5])[1];
f_28273(t2,((C_word*)t0)[4],((C_word*)((C_word*)t0)[3])[1],((C_word*)((C_word*)t0)[2])[1]);}

/* k28218 in parse-with in k26697 in k26694 in k26691 in k26688 in k26263 in k26260 in k26257 in k26254 in k26251 in k25668 in k25665 in k25142 in k25139 in k25136 in k25133 in k25130 in k25127 in k25124 in k25121 in k25118 in k25115 in k25112 in k25109 in k25106 in k25103 in k25100 in k25097 in k25094 in k25091 in k25088 in k25085 in k25082 in k24943 in k24940 in k24937 in k24934 in k24878 in k24875 in k24872 in k24869 in k24866 in k24863 in k24860 in k24857 in k23555 in k23486 in k23293 in k23290 in k23185 in k23134 in k11783 in k10718 in k10715 in k7274 in k7271 in k6978 in k6975 in k6971 in k6680 in k6677 in k6674 in k6671 */
static void C_ccall f_28220(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[20],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_28220,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_28223,a[2]=((C_word*)t0)[7],a[3]=((C_word*)t0)[8],a[4]=((C_word*)t0)[9],a[5]=((C_word*)t0)[10],tmp=(C_word)a,a+=6,tmp);
if(C_truep(((C_word*)((C_word*)t0)[6])[1])){
C_trace("ChickenBridge.scm: 381  loop-error");
f_27049(t2,((C_word*)t0)[5],((C_word*)t0)[4],(C_word)C_a_i_list(&a,1,lf[632]));}
else{
if(C_truep(((C_word*)((C_word*)t0)[3])[1])){
if(C_truep(((C_word*)((C_word*)t0)[2])[1])){
t3=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_28263,a[2]=t2,a[3]=((C_word*)t0)[8],a[4]=((C_word*)t0)[2],a[5]=((C_word*)t0)[3],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
C_trace("ChickenBridge.scm: 381  make-binding");
f_27043(t3,((C_word*)((C_word*)t0)[3])[1],C_SCHEME_FALSE);}
else{
t3=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_28271,a[2]=t2,a[3]=((C_word*)t0)[7],tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 381  make-binding");
f_27043(t3,((C_word*)((C_word*)t0)[3])[1],C_SCHEME_FALSE);}}
else{
t3=t2;
f_28223(2,t3,C_SCHEME_UNDEFINED);}}}

/* k28269 in k28218 in parse-with in k26697 in k26694 in k26691 in k26688 in k26263 in k26260 in k26257 in k26254 in k26251 in k25668 in k25665 in k25142 in k25139 in k25136 in k25133 in k25130 in k25127 in k25124 in k25121 in k25118 in k25115 in k25112 in k25109 in k25106 in k25103 in k25100 in k25097 in k25094 in k25091 in k25088 in k25085 in k25082 in k24943 in k24940 in k24937 in k24934 in k24878 in k24875 in k24872 in k24869 in k24866 in k24863 in k24860 in k24857 in k23555 in k23486 in k23293 in k23290 in k23185 in k23134 in k11783 in k10718 in k10715 in k7274 in k7271 in k6978 in k6975 in k6971 in k6680 in k6677 in k6674 in k6671 */
static void C_ccall f_28271(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[3],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_28271,2,t0,t1);}
t2=(C_word)C_a_i_cons(&a,2,t1,((C_word*)((C_word*)t0)[3])[1]);
t3=C_mutate(((C_word *)((C_word*)t0)[3])+1,t2);
t4=((C_word*)t0)[2];
f_28223(2,t4,((C_word*)((C_word*)t0)[3])[1]);}

/* k28261 in k28218 in parse-with in k26697 in k26694 in k26691 in k26688 in k26263 in k26260 in k26257 in k26254 in k26251 in k25668 in k25665 in k25142 in k25139 in k25136 in k25133 in k25130 in k25127 in k25124 in k25121 in k25118 in k25115 in k25112 in k25109 in k25106 in k25103 in k25100 in k25097 in k25094 in k25091 in k25088 in k25085 in k25082 in k24943 in k24940 in k24937 in k24934 in k24878 in k24875 in k24872 in k24869 in k24866 in k24863 in k24860 in k24857 in k23555 in k23486 in k23293 in k23290 in k23185 in k23134 in k11783 in k10718 in k10715 in k7274 in k7271 in k6978 in k6975 in k6971 in k6680 in k6677 in k6674 in k6671 */
static void C_ccall f_28263(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word ab[15],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_28263,2,t0,t1);}
t2=(C_word)C_a_i_cons(&a,2,t1,((C_word*)((C_word*)t0)[6])[1]);
t3=C_mutate(((C_word *)((C_word*)t0)[6])+1,t2);
t4=(C_word)C_a_i_list(&a,3,lf[12],((C_word*)((C_word*)t0)[5])[1],((C_word*)((C_word*)t0)[4])[1]);
t5=(C_word)C_a_i_cons(&a,2,t4,((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_28223(2,t7,((C_word*)((C_word*)t0)[3])[1]);}

/* k28221 in k28218 in parse-with in k26697 in k26694 in k26691 in k26688 in k26263 in k26260 in k26257 in k26254 in k26251 in k25668 in k25665 in k25142 in k25139 in k25136 in k25133 in k25130 in k25127 in k25124 in k25121 in k25118 in k25115 in k25112 in k25109 in k25106 in k25103 in k25100 in k25097 in k25094 in k25091 in k25088 in k25085 in k25082 in k24943 in k24940 in k24937 in k24934 in k24878 in k24875 in k24872 in k24869 in k24866 in k24863 in k24860 in k24857 in k23555 in k23486 in k23293 in k23290 in k23185 in k23134 in k11783 in k10718 in k10715 in k7274 in k7271 in k6978 in k6975 in k6971 in k6680 in k6677 in k6674 in k6671 */
static void C_ccall f_28223(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[8],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_28223,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_28230,a[2]=((C_word*)t0)[4],a[3]=((C_word*)t0)[5],tmp=(C_word)a,a+=4,tmp);
t3=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_28234,a[2]=((C_word*)t0)[3],a[3]=t2,tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 381  reverse");
t4=*((C_word*)lf[216]+1);
((C_proc3)C_retrieve_proc(t4))(3,t4,t3,((C_word*)((C_word*)t0)[2])[1]);}

/* k28232 in k28221 in k28218 in parse-with in k26697 in k26694 in k26691 in k26688 in k26263 in k26260 in k26257 in k26254 in k26251 in k25668 in k25665 in k25142 in k25139 in k25136 in k25133 in k25130 in k25127 in k25124 in k25121 in k25118 in k25115 in k25112 in k25109 in k25106 in k25103 in k25100 in k25097 in k25094 in k25091 in k25088 in k25085 in k25082 in k24943 in k24940 in k24937 in k24934 in k24878 in k24875 in k24872 in k24869 in k24866 in k24863 in k24860 in k24857 in k23555 in k23486 in k23293 in k23290 in k23185 in k23134 in k11783 in k10718 in k10715 in k7274 in k7271 in k6978 in k6975 in k6971 in k6680 in k6677 in k6674 in k6671 */
static void C_ccall f_28234(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[4],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_28234,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_28238,a[2]=t1,a[3]=((C_word*)t0)[3],tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 381  reverse");
t3=*((C_word*)lf[216]+1);
((C_proc3)C_retrieve_proc(t3))(3,t3,t2,((C_word*)((C_word*)t0)[2])[1]);}

/* k28236 in k28232 in k28221 in k28218 in parse-with in k26697 in k26694 in k26691 in k26688 in k26263 in k26260 in k26257 in k26254 in k26251 in k25668 in k25665 in k25142 in k25139 in k25136 in k25133 in k25130 in k25127 in k25124 in k25121 in k25118 in k25115 in k25112 in k25109 in k25106 in k25103 in k25100 in k25097 in k25094 in k25091 in k25088 in k25085 in k25082 in k24943 in k24940 in k24937 in k24934 in k24878 in k24875 in k24872 in k24869 in k24866 in k24863 in k24860 in k24857 in k23555 in k23486 in k23293 in k23290 in k23185 in k23134 in k11783 in k10718 in k10715 in k7274 in k7271 in k6978 in k6975 in k6971 in k6680 in k6677 in k6674 in k6671 */
static void C_ccall f_28238(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word ab[18],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_28238,2,t0,t1);}
C_trace("ChickenBridge.scm: 381  make-loop-clause");
f_26809(((C_word*)t0)[3],(C_word)C_a_i_list(&a,6,lf[542],lf[631],lf[543],((C_word*)t0)[2],lf[545],t1));}

/* k28228 in k28221 in k28218 in parse-with in k26697 in k26694 in k26691 in k26688 in k26263 in k26260 in k26257 in k26254 in k26251 in k25668 in k25665 in k25142 in k25139 in k25136 in k25133 in k25130 in k25127 in k25124 in k25121 in k25118 in k25115 in k25112 in k25109 in k25106 in k25103 in k25100 in k25097 in k25094 in k25091 in k25088 in k25085 in k25082 in k24943 in k24940 in k24937 in k24934 in k24878 in k24875 in k24872 in k24869 in k24866 in k24863 in k24860 in k24857 in k23555 in k23486 in k23293 in k23290 in k23185 in k23134 in k11783 in k10718 in k10715 in k7274 in k7271 in k6978 in k6975 in k6971 in k6680 in k6677 in k6674 in k6671 */
static void C_ccall f_28230(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 381  values");
C_values(4,0,((C_word*)t0)[3],t1,((C_word*)((C_word*)t0)[2])[1]);}

/* parse-general-iteration in k26697 in k26694 in k26691 in k26688 in k26263 in k26260 in k26257 in k26254 in k26251 in k25668 in k25665 in k25142 in k25139 in k25136 in k25133 in k25130 in k25127 in k25124 in k25121 in k25118 in k25115 in k25112 in k25109 in k25106 in k25103 in k25100 in k25097 in k25094 in k25091 in k25088 in k25085 in k25082 in k24943 in k24940 in k24937 in k24934 in k24878 in k24875 in k24872 in k24869 in k24866 in k24863 in k24860 in k24857 in k23555 in k23486 in k23293 in k23290 in k23185 in k23134 in k11783 in k10718 in k10715 in k7274 in k7271 in k6978 in k6975 in k6971 in k6680 in k6677 in k6674 in k6671 */
static void C_ccall f_28071(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4){
C_word tmp;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word t14;
C_word t15;
C_word t16;
C_word t17;
C_word t18;
C_word t19;
C_word t20;
C_word t21;
C_word t22;
C_word ab[32],*a=ab;
if(c!=5) C_bad_argc_2(c,5,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr5,(void*)f_28071,5,t0,t1,t2,t3,t4);}
t5=t2;
t6=(C_word)C_i_cadr(t2);
t7=(C_word)C_i_cddr(t2);
t8=t7;
t9=(*a=C_VECTOR_TYPE|1,a[1]=t8,tmp=(C_word)a,a+=2,tmp);
t10=C_SCHEME_FALSE;
t11=(*a=C_VECTOR_TYPE|1,a[1]=t10,tmp=(C_word)a,a+=2,tmp);
t12=C_SCHEME_FALSE;
t13=(*a=C_VECTOR_TYPE|1,a[1]=t12,tmp=(C_word)a,a+=2,tmp);
t14=C_SCHEME_FALSE;
t15=(*a=C_VECTOR_TYPE|1,a[1]=t14,tmp=(C_word)a,a+=2,tmp);
t16=C_SCHEME_FALSE;
t17=(*a=C_VECTOR_TYPE|1,a[1]=t16,tmp=(C_word)a,a+=2,tmp);
t18=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_28081,a[2]=t6,a[3]=t17,a[4]=t15,a[5]=t11,a[6]=t9,a[7]=t1,tmp=(C_word)a,a+=8,tmp);
t19=C_SCHEME_UNDEFINED;
t20=(*a=C_VECTOR_TYPE|1,a[1]=t19,tmp=(C_word)a,a+=2,tmp);
t21=C_set_block_item(t20,0,(*a=C_CLOSURE_TYPE|11,a[1]=(C_word)f_28119,a[2]=t17,a[3]=t11,a[4]=t5,a[5]=t4,a[6]=t13,a[7]=t15,a[8]=t6,a[9]=t20,a[10]=t9,a[11]=((C_word)li442),tmp=(C_word)a,a+=12,tmp));
t22=((C_word*)t20)[1];
f_28119(t22,t18,C_SCHEME_FALSE);}

/* do4559 in parse-general-iteration in k26697 in k26694 in k26691 in k26688 in k26263 in k26260 in k26257 in k26254 in k26251 in k25668 in k25665 in k25142 in k25139 in k25136 in k25133 in k25130 in k25127 in k25124 in k25121 in k25118 in k25115 in k25112 in k25109 in k25106 in k25103 in k25100 in k25097 in k25094 in k25091 in k25088 in k25085 in k25082 in k24943 in k24940 in k24937 in k24934 in k24878 in k24875 in k24872 in k24869 in k24866 in k24863 in k24860 in k24857 in k23555 in k23486 in k23293 in k23290 in k23185 in k23134 in k11783 in k10718 in k10715 in k7274 in k7271 in k6978 in k6975 in k6971 in k6680 in k6677 in k6674 in k6671 */
static void C_fcall f_28119(C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word ab[15],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_28119,NULL,3,t0,t1,t2);}
t3=(*a=C_VECTOR_TYPE|1,a[1]=t2,tmp=(C_word)a,a+=2,tmp);
t4=(C_word)C_i_nullp(((C_word*)((C_word*)t0)[10])[1]);
t5=(*a=C_CLOSURE_TYPE|12,a[1]=(C_word)f_28129,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],a[7]=((C_word*)t0)[7],a[8]=((C_word*)t0)[8],a[9]=((C_word*)t0)[9],a[10]=t3,a[11]=((C_word*)t0)[10],a[12]=t1,tmp=(C_word)a,a+=13,tmp);
if(C_truep(t4)){
t6=t5;
f_28129(2,t6,t4);}
else{
t6=(C_word)C_i_car(((C_word*)((C_word*)t0)[10])[1]);
C_trace("ChickenBridge.scm: 381  loop-op?");
f_27031(t5,t6,((C_word*)t0)[5]);}}

/* k28127 in do4559 in parse-general-iteration in k26697 in k26694 in k26691 in k26688 in k26263 in k26260 in k26257 in k26254 in k26251 in k25668 in k25665 in k25142 in k25139 in k25136 in k25133 in k25130 in k25127 in k25124 in k25121 in k25118 in k25115 in k25112 in k25109 in k25106 in k25103 in k25100 in k25097 in k25094 in k25091 in k25088 in k25085 in k25082 in k24943 in k24940 in k24937 in k24934 in k24878 in k24875 in k24872 in k24869 in k24866 in k24863 in k24860 in k24857 in k23555 in k23486 in k23293 in k23290 in k23185 in k23134 in k11783 in k10718 in k10715 in k7274 in k7271 in k6978 in k6975 in k6971 in k6680 in k6677 in k6674 in k6671 */
static void C_ccall f_28129(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word ab[16],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_28129,2,t0,t1);}
if(C_truep(t1)){
t2=((C_word*)t0)[12];
((C_proc2)(void*)(*((C_word*)t2+1)))(2,t2,C_SCHEME_UNDEFINED);}
else{
t2=(C_word)C_i_car(((C_word*)((C_word*)t0)[11])[1]);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[11])[1]);
t4=C_mutate(((C_word *)((C_word*)t0)[11])+1,t3);
t5=C_mutate(((C_word *)((C_word*)t0)[10])+1,t2);
t6=(*a=C_CLOSURE_TYPE|12,a[1]=(C_word)f_28140,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],a[7]=((C_word*)t0)[7],a[8]=((C_word*)t0)[8],a[9]=((C_word*)t0)[11],a[10]=((C_word*)t0)[12],a[11]=((C_word*)t0)[9],a[12]=((C_word*)t0)[10],tmp=(C_word)a,a+=13,tmp);
if(C_truep((C_word)C_i_nullp(((C_word*)((C_word*)t0)[11])[1]))){
C_trace("ChickenBridge.scm: 381  loop-error");
f_27049(t6,((C_word*)t0)[5],((C_word*)t0)[4],(C_word)C_a_i_list(&a,1,lf[629]));}
else{
t7=t6;
f_28140(2,t7,C_SCHEME_UNDEFINED);}}}

/* k28138 in k28127 in do4559 in parse-general-iteration in k26697 in k26694 in k26691 in k26688 in k26263 in k26260 in k26257 in k26254 in k26251 in k25668 in k25665 in k25142 in k25139 in k25136 in k25133 in k25130 in k25127 in k25124 in k25121 in k25118 in k25115 in k25112 in k25109 in k25106 in k25103 in k25100 in k25097 in k25094 in k25091 in k25088 in k25085 in k25082 in k24943 in k24940 in k24937 in k24934 in k24878 in k24875 in k24872 in k24869 in k24866 in k24863 in k24860 in k24857 in k23555 in k23486 in k23293 in k23290 in k23185 in k23134 in k11783 in k10718 in k10715 in k7274 in k7271 in k6978 in k6975 in k6971 in k6680 in k6677 in k6674 in k6671 */
static void C_ccall f_28140(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word ab[38],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_28140,2,t0,t1);}
t2=((C_word*)((C_word*)t0)[12])[1];
t3=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_28143,a[2]=((C_word*)t0)[12],a[3]=((C_word*)t0)[10],a[4]=((C_word*)t0)[11],tmp=(C_word)a,a+=5,tmp);
t4=(C_word)C_eqp(t2,lf[466]);
if(C_truep(t4)){
t5=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_28152,a[2]=t3,a[3]=((C_word*)t0)[12],a[4]=((C_word*)t0)[6],a[5]=((C_word*)t0)[7],a[6]=((C_word*)t0)[8],a[7]=((C_word*)t0)[9],tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)((C_word*)t0)[6])[1])){
C_trace("ChickenBridge.scm: 381  loop-error");
f_27049(t5,((C_word*)t0)[5],((C_word*)t0)[4],(C_word)C_a_i_list(&a,1,lf[624]));}
else{
t6=t5;
f_28152(2,t6,C_SCHEME_UNDEFINED);}}
else{
t5=(C_word)C_eqp(t2,lf[625]);
if(C_truep(t5)){
t6=(*a=C_CLOSURE_TYPE|9,a[1]=(C_word)f_28177,a[2]=t3,a[3]=((C_word*)t0)[12],a[4]=((C_word*)t0)[6],a[5]=((C_word*)t0)[2],a[6]=((C_word*)t0)[8],a[7]=((C_word*)t0)[9],a[8]=((C_word*)t0)[7],a[9]=((C_word*)t0)[3],tmp=(C_word)a,a+=10,tmp);
if(C_truep(((C_word*)((C_word*)t0)[3])[1])){
C_trace("ChickenBridge.scm: 381  loop-error");
f_27049(t6,((C_word*)t0)[5],((C_word*)t0)[4],(C_word)C_a_i_list(&a,1,lf[626]));}
else{
t7=t6;
f_28177(2,t7,C_SCHEME_UNDEFINED);}}
else{
C_trace("ChickenBridge.scm: 381  loop-error");
f_27049(t3,((C_word*)t0)[5],((C_word*)t0)[4],(C_word)C_a_i_list(&a,3,lf[627],((C_word*)((C_word*)t0)[12])[1],lf[628]));}}}

/* k28175 in k28138 in k28127 in do4559 in parse-general-iteration in k26697 in k26694 in k26691 in k26688 in k26263 in k26260 in k26257 in k26254 in k26251 in k25668 in k25665 in k25142 in k25139 in k25136 in k25133 in k25130 in k25127 in k25124 in k25121 in k25118 in k25115 in k25112 in k25109 in k25106 in k25103 in k25100 in k25097 in k25094 in k25091 in k25088 in k25085 in k25082 in k24943 in k24940 in k24937 in k24934 in k24878 in k24875 in k24872 in k24869 in k24866 in k24863 in k24860 in k24857 in k23555 in k23486 in k23293 in k23290 in k23185 in k23134 in k11783 in k10718 in k10715 in k7274 in k7271 in k6978 in k6975 in k6971 in k6680 in k6677 in k6674 in k6671 */
static void C_ccall f_28177(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_28177,2,t0,t1);}
t2=C_mutate(((C_word *)((C_word*)t0)[9])+1,((C_word*)((C_word*)t0)[8])[1]);
t3=C_set_block_item(((C_word*)t0)[8],0,C_SCHEME_FALSE);
t4=(C_word)C_i_car(((C_word*)((C_word*)t0)[7])[1]);
t5=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[7])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[7])+1,t5);
t7=(C_word)C_a_i_list(&a,3,lf[12],((C_word*)t0)[6],t4);
t8=C_mutate(((C_word *)((C_word*)t0)[5])+1,t7);
t9=C_mutate(((C_word *)((C_word*)t0)[4])+1,((C_word*)((C_word*)t0)[3])[1]);
t10=((C_word*)t0)[2];
f_28143(2,t10,t9);}

/* k28150 in k28138 in k28127 in do4559 in parse-general-iteration in k26697 in k26694 in k26691 in k26688 in k26263 in k26260 in k26257 in k26254 in k26251 in k25668 in k25665 in k25142 in k25139 in k25136 in k25133 in k25130 in k25127 in k25124 in k25121 in k25118 in k25115 in k25112 in k25109 in k25106 in k25103 in k25100 in k25097 in k25094 in k25091 in k25088 in k25085 in k25082 in k24943 in k24940 in k24937 in k24934 in k24878 in k24875 in k24872 in k24869 in k24866 in k24863 in k24860 in k24857 in k23555 in k23486 in k23293 in k23290 in k23185 in k23134 in k11783 in k10718 in k10715 in k7274 in k7271 in k6978 in k6975 in k6971 in k6680 in k6677 in k6674 in k6671 */
static void C_ccall f_28152(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_28152,2,t0,t1);}
t2=(C_word)C_i_car(((C_word*)((C_word*)t0)[7])[1]);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[7])[1]);
t4=C_mutate(((C_word *)((C_word*)t0)[7])+1,t3);
t5=(C_word)C_a_i_list(&a,3,lf[12],((C_word*)t0)[6],t2);
t6=C_mutate(((C_word *)((C_word*)t0)[5])+1,t5);
t7=C_mutate(((C_word *)((C_word*)t0)[4])+1,((C_word*)((C_word*)t0)[3])[1]);
t8=((C_word*)t0)[2];
f_28143(2,t8,t7);}

/* k28141 in k28138 in k28127 in do4559 in parse-general-iteration in k26697 in k26694 in k26691 in k26688 in k26263 in k26260 in k26257 in k26254 in k26251 in k25668 in k25665 in k25142 in k25139 in k25136 in k25133 in k25130 in k25127 in k25124 in k25121 in k25118 in k25115 in k25112 in k25109 in k25106 in k25103 in k25100 in k25097 in k25094 in k25091 in k25088 in k25085 in k25082 in k24943 in k24940 in k24937 in k24934 in k24878 in k24875 in k24872 in k24869 in k24866 in k24863 in k24860 in k24857 in k23555 in k23486 in k23293 in k23290 in k23185 in k23134 in k11783 in k10718 in k10715 in k7274 in k7271 in k6978 in k6975 in k6971 in k6680 in k6677 in k6674 in k6671 */
static void C_ccall f_28143(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
t2=((C_word*)((C_word*)t0)[4])[1];
f_28119(t2,((C_word*)t0)[3],((C_word*)((C_word*)t0)[2])[1]);}

/* k28079 in parse-general-iteration in k26697 in k26694 in k26691 in k26688 in k26263 in k26260 in k26257 in k26254 in k26251 in k25668 in k25665 in k25142 in k25139 in k25136 in k25133 in k25130 in k25127 in k25124 in k25121 in k25118 in k25115 in k25112 in k25109 in k25106 in k25103 in k25100 in k25097 in k25094 in k25091 in k25088 in k25085 in k25082 in k24943 in k24940 in k24937 in k24934 in k24878 in k24875 in k24872 in k24869 in k24866 in k24863 in k24860 in k24857 in k23555 in k23486 in k23293 in k23290 in k23185 in k23134 in k11783 in k10718 in k10715 in k7274 in k7271 in k6978 in k6975 in k6971 in k6680 in k6677 in k6674 in k6671 */
static void C_ccall f_28081(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[10],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_28081,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_28088,a[2]=((C_word*)t0)[6],a[3]=((C_word*)t0)[7],tmp=(C_word)a,a+=4,tmp);
t3=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_28117,a[2]=t2,a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],tmp=(C_word)a,a+=6,tmp);
C_trace("ChickenBridge.scm: 381  make-binding");
f_27043(t3,((C_word*)t0)[2],C_SCHEME_FALSE);}

/* k28115 in k28079 in parse-general-iteration in k26697 in k26694 in k26691 in k26688 in k26263 in k26260 in k26257 in k26254 in k26251 in k25668 in k25665 in k25142 in k25139 in k25136 in k25133 in k25130 in k25127 in k25124 in k25121 in k25118 in k25115 in k25112 in k25109 in k25106 in k25103 in k25100 in k25097 in k25094 in k25091 in k25088 in k25085 in k25082 in k24943 in k24940 in k24937 in k24934 in k24878 in k24875 in k24872 in k24869 in k24866 in k24863 in k24860 in k24857 in k23555 in k23486 in k23293 in k23290 in k23185 in k23134 in k11783 in k10718 in k10715 in k7274 in k7271 in k6978 in k6975 in k6971 in k6680 in k6677 in k6674 in k6671 */
static void C_ccall f_28117(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[42],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_28117,2,t0,t1);}
t2=(C_word)C_a_i_list(&a,1,t1);
t3=(C_truep(((C_word*)((C_word*)t0)[5])[1])?(C_word)C_a_i_list(&a,1,((C_word*)((C_word*)t0)[5])[1]):C_SCHEME_END_OF_LIST);
t4=(C_truep(((C_word*)((C_word*)t0)[4])[1])?(C_word)C_a_i_list(&a,1,((C_word*)((C_word*)t0)[4])[1]):C_SCHEME_END_OF_LIST);
t5=(C_truep(((C_word*)((C_word*)t0)[3])[1])?(C_word)C_a_i_list(&a,1,((C_word*)((C_word*)t0)[3])[1]):C_SCHEME_END_OF_LIST);
C_trace("ChickenBridge.scm: 381  make-loop-clause");
f_26809(((C_word*)t0)[2],(C_word)C_a_i_list(&a,10,lf[542],lf[572],lf[543],t2,lf[545],t3,lf[547],t4,lf[548],t5));}

/* k28086 in k28079 in parse-general-iteration in k26697 in k26694 in k26691 in k26688 in k26263 in k26260 in k26257 in k26254 in k26251 in k25668 in k25665 in k25142 in k25139 in k25136 in k25133 in k25130 in k25127 in k25124 in k25121 in k25118 in k25115 in k25112 in k25109 in k25106 in k25103 in k25100 in k25097 in k25094 in k25091 in k25088 in k25085 in k25082 in k24943 in k24940 in k24937 in k24934 in k24878 in k24875 in k24872 in k24869 in k24866 in k24863 in k24860 in k24857 in k23555 in k23486 in k23293 in k23290 in k23185 in k23134 in k11783 in k10718 in k10715 in k7274 in k7271 in k6978 in k6975 in k6971 in k6680 in k6677 in k6674 in k6671 */
static void C_ccall f_28088(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 381  values");
C_values(4,0,((C_word*)t0)[3],t1,((C_word*)((C_word*)t0)[2])[1]);}

/* parse-sequence-iteration in k26697 in k26694 in k26691 in k26688 in k26263 in k26260 in k26257 in k26254 in k26251 in k25668 in k25665 in k25142 in k25139 in k25136 in k25133 in k25130 in k25127 in k25124 in k25121 in k25118 in k25115 in k25112 in k25109 in k25106 in k25103 in k25100 in k25097 in k25094 in k25091 in k25088 in k25085 in k25082 in k24943 in k24940 in k24937 in k24934 in k24878 in k24875 in k24872 in k24869 in k24866 in k24863 in k24860 in k24857 in k23555 in k23486 in k23293 in k23290 in k23185 in k23134 in k11783 in k10718 in k10715 in k7274 in k7271 in k6978 in k6975 in k6971 in k6680 in k6677 in k6674 in k6671 */
static void C_ccall f_27720(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4){
C_word tmp;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word ab[7],*a=ab;
if(c!=5) C_bad_argc_2(c,5,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr5,(void*)f_27720,5,t0,t1,t2,t3,t4);}
t5=t2;
t6=(C_word)C_i_cadr(t2);
t7=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_27727,a[2]=t5,a[3]=t4,a[4]=t6,a[5]=t1,a[6]=t2,tmp=(C_word)a,a+=7,tmp);
C_trace("ChickenBridge.scm: 381  gensym");
t8=C_retrieve(lf[26]);
((C_proc3)C_retrieve_proc(t8))(3,t8,t7,lf[622]);}

/* k27725 in parse-sequence-iteration in k26697 in k26694 in k26691 in k26688 in k26263 in k26260 in k26257 in k26254 in k26251 in k25668 in k25665 in k25142 in k25139 in k25136 in k25133 in k25130 in k25127 in k25124 in k25121 in k25118 in k25115 in k25112 in k25109 in k25106 in k25103 in k25100 in k25097 in k25094 in k25091 in k25088 in k25085 in k25082 in k24943 in k24940 in k24937 in k24934 in k24878 in k24875 in k24872 in k24869 in k24866 in k24863 in k24860 in k24857 in k23555 in k23486 in k23293 in k23290 in k23185 in k23134 in k11783 in k10718 in k10715 in k7274 in k7271 in k6978 in k6975 in k6971 in k6680 in k6677 in k6674 in k6671 */
static void C_ccall f_27727(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word t14;
C_word t15;
C_word t16;
C_word t17;
C_word t18;
C_word t19;
C_word t20;
C_word t21;
C_word t22;
C_word t23;
C_word t24;
C_word t25;
C_word ab[44],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_27727,2,t0,t1);}
t2=(C_word)C_i_cddr(((C_word*)t0)[6]);
t3=t2;
t4=(*a=C_VECTOR_TYPE|1,a[1]=t3,tmp=(C_word)a,a+=2,tmp);
t5=C_SCHEME_END_OF_LIST;
t6=(*a=C_VECTOR_TYPE|1,a[1]=t5,tmp=(C_word)a,a+=2,tmp);
t7=C_SCHEME_FALSE;
t8=(*a=C_VECTOR_TYPE|1,a[1]=t7,tmp=(C_word)a,a+=2,tmp);
t9=C_SCHEME_END_OF_LIST;
t10=(*a=C_VECTOR_TYPE|1,a[1]=t9,tmp=(C_word)a,a+=2,tmp);
t11=C_SCHEME_END_OF_LIST;
t12=(*a=C_VECTOR_TYPE|1,a[1]=t11,tmp=(C_word)a,a+=2,tmp);
t13=C_SCHEME_FALSE;
t14=(*a=C_VECTOR_TYPE|1,a[1]=t13,tmp=(C_word)a,a+=2,tmp);
t15=C_SCHEME_END_OF_LIST;
t16=(*a=C_VECTOR_TYPE|1,a[1]=t15,tmp=(C_word)a,a+=2,tmp);
t17=C_SCHEME_END_OF_LIST;
t18=(*a=C_VECTOR_TYPE|1,a[1]=t17,tmp=(C_word)a,a+=2,tmp);
t19=C_SCHEME_FALSE;
t20=(*a=C_VECTOR_TYPE|1,a[1]=t19,tmp=(C_word)a,a+=2,tmp);
t21=(*a=C_CLOSURE_TYPE|13,a[1]=(C_word)f_27733,a[2]=t8,a[3]=t14,a[4]=((C_word*)t0)[4],a[5]=t1,a[6]=t20,a[7]=t18,a[8]=t12,a[9]=t10,a[10]=t16,a[11]=t4,a[12]=((C_word*)t0)[5],a[13]=t6,tmp=(C_word)a,a+=14,tmp);
t22=C_SCHEME_UNDEFINED;
t23=(*a=C_VECTOR_TYPE|1,a[1]=t22,tmp=(C_word)a,a+=2,tmp);
t24=C_set_block_item(t23,0,(*a=C_CLOSURE_TYPE|9,a[1]=(C_word)f_27961,a[2]=t14,a[3]=((C_word*)t0)[2],a[4]=((C_word*)t0)[3],a[5]=t8,a[6]=t20,a[7]=t23,a[8]=t4,a[9]=((C_word)li440),tmp=(C_word)a,a+=10,tmp));
t25=((C_word*)t23)[1];
f_27961(t25,t21,C_SCHEME_FALSE);}

/* do4492 in k27725 in parse-sequence-iteration in k26697 in k26694 in k26691 in k26688 in k26263 in k26260 in k26257 in k26254 in k26251 in k25668 in k25665 in k25142 in k25139 in k25136 in k25133 in k25130 in k25127 in k25124 in k25121 in k25118 in k25115 in k25112 in k25109 in k25106 in k25103 in k25100 in k25097 in k25094 in k25091 in k25088 in k25085 in k25082 in k24943 in k24940 in k24937 in k24934 in k24878 in k24875 in k24872 in k24869 in k24866 in k24863 in k24860 in k24857 in k23555 in k23486 in k23293 in k23290 in k23185 in k23134 in k11783 in k10718 in k10715 in k7274 in k7271 in k6978 in k6975 in k6971 in k6680 in k6677 in k6674 in k6671 */
static void C_fcall f_27961(C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word ab[13],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_27961,NULL,3,t0,t1,t2);}
t3=(*a=C_VECTOR_TYPE|1,a[1]=t2,tmp=(C_word)a,a+=2,tmp);
t4=(C_word)C_i_nullp(((C_word*)((C_word*)t0)[8])[1]);
t5=(*a=C_CLOSURE_TYPE|10,a[1]=(C_word)f_27971,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],a[7]=((C_word*)t0)[7],a[8]=t3,a[9]=((C_word*)t0)[8],a[10]=t1,tmp=(C_word)a,a+=11,tmp);
if(C_truep(t4)){
t6=t5;
f_27971(2,t6,t4);}
else{
t6=(C_word)C_i_car(((C_word*)((C_word*)t0)[8])[1]);
C_trace("ChickenBridge.scm: 381  loop-op?");
f_27031(t5,t6,((C_word*)t0)[4]);}}

/* k27969 in do4492 in k27725 in parse-sequence-iteration in k26697 in k26694 in k26691 in k26688 in k26263 in k26260 in k26257 in k26254 in k26251 in k25668 in k25665 in k25142 in k25139 in k25136 in k25133 in k25130 in k25127 in k25124 in k25121 in k25118 in k25115 in k25112 in k25109 in k25106 in k25103 in k25100 in k25097 in k25094 in k25091 in k25088 in k25085 in k25082 in k24943 in k24940 in k24937 in k24934 in k24878 in k24875 in k24872 in k24869 in k24866 in k24863 in k24860 in k24857 in k23555 in k23486 in k23293 in k23290 in k23185 in k23134 in k11783 in k10718 in k10715 in k7274 in k7271 in k6978 in k6975 in k6971 in k6680 in k6677 in k6674 in k6671 */
static void C_ccall f_27971(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word ab[14],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_27971,2,t0,t1);}
if(C_truep(t1)){
t2=((C_word*)t0)[10];
((C_proc2)(void*)(*((C_word*)t2+1)))(2,t2,C_SCHEME_UNDEFINED);}
else{
t2=(C_word)C_i_car(((C_word*)((C_word*)t0)[9])[1]);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[9])[1]);
t4=C_mutate(((C_word *)((C_word*)t0)[9])+1,t3);
t5=C_mutate(((C_word *)((C_word*)t0)[8])+1,t2);
t6=(*a=C_CLOSURE_TYPE|10,a[1]=(C_word)f_27982,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[9],a[7]=((C_word*)t0)[6],a[8]=((C_word*)t0)[10],a[9]=((C_word*)t0)[7],a[10]=((C_word*)t0)[8],tmp=(C_word)a,a+=11,tmp);
if(C_truep((C_word)C_i_nullp(((C_word*)((C_word*)t0)[9])[1]))){
C_trace("ChickenBridge.scm: 381  loop-error");
f_27049(t6,((C_word*)t0)[4],((C_word*)t0)[3],(C_word)C_a_i_list(&a,1,lf[621]));}
else{
t7=t6;
f_27982(2,t7,C_SCHEME_UNDEFINED);}}}

/* k27980 in k27969 in do4492 in k27725 in parse-sequence-iteration in k26697 in k26694 in k26691 in k26688 in k26263 in k26260 in k26257 in k26254 in k26251 in k25668 in k25665 in k25142 in k25139 in k25136 in k25133 in k25130 in k25127 in k25124 in k25121 in k25118 in k25115 in k25112 in k25109 in k25106 in k25103 in k25100 in k25097 in k25094 in k25091 in k25088 in k25085 in k25082 in k24943 in k24940 in k24937 in k24934 in k24878 in k24875 in k24872 in k24869 in k24866 in k24863 in k24860 in k24857 in k23555 in k23486 in k23293 in k23290 in k23185 in k23134 in k11783 in k10718 in k10715 in k7274 in k7271 in k6978 in k6975 in k6971 in k6680 in k6677 in k6674 in k6671 */
static void C_ccall f_27982(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word ab[16],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_27982,2,t0,t1);}
t2=((C_word*)((C_word*)t0)[10])[1];
t3=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_27985,a[2]=((C_word*)t0)[10],a[3]=((C_word*)t0)[8],a[4]=((C_word*)t0)[9],tmp=(C_word)a,a+=5,tmp);
t4=(C_word)C_eqp(t2,lf[611]);
t5=(*a=C_CLOSURE_TYPE|10,a[1]=(C_word)f_27994,a[2]=((C_word*)t0)[2],a[3]=t2,a[4]=((C_word*)t0)[3],a[5]=((C_word*)t0)[4],a[6]=t3,a[7]=((C_word*)t0)[5],a[8]=((C_word*)t0)[6],a[9]=((C_word*)t0)[10],a[10]=((C_word*)t0)[7],tmp=(C_word)a,a+=11,tmp);
if(C_truep(t4)){
t6=t5;
f_27994(t6,t4);}
else{
t6=(C_word)C_eqp(t2,lf[620]);
if(C_truep(t6)){
t7=t5;
f_27994(t7,t6);}
else{
t7=(C_word)C_eqp(t2,lf[605]);
t8=t5;
f_27994(t8,(C_truep(t7)?t7:(C_word)C_eqp(t2,lf[610])));}}}

/* k27992 in k27980 in k27969 in do4492 in k27725 in parse-sequence-iteration in k26697 in k26694 in k26691 in k26688 in k26263 in k26260 in k26257 in k26254 in k26251 in k25668 in k25665 in k25142 in k25139 in k25136 in k25133 in k25130 in k25127 in k25124 in k25121 in k25118 in k25115 in k25112 in k25109 in k25106 in k25103 in k25100 in k25097 in k25094 in k25091 in k25088 in k25085 in k25082 in k24943 in k24940 in k24937 in k24934 in k24878 in k24875 in k24872 in k24869 in k24866 in k24863 in k24860 in k24857 in k23555 in k23486 in k23293 in k23290 in k23185 in k23134 in k11783 in k10718 in k10715 in k7274 in k7271 in k6978 in k6975 in k6971 in k6680 in k6677 in k6674 in k6671 */
static void C_fcall f_27994(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word ab[37],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_27994,NULL,2,t0,t1);}
if(C_truep(t1)){
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_27997,a[2]=((C_word*)t0)[6],a[3]=((C_word*)t0)[7],a[4]=((C_word*)t0)[8],a[5]=((C_word*)t0)[9],a[6]=((C_word*)t0)[10],tmp=(C_word)a,a+=7,tmp);
if(C_truep(((C_word*)((C_word*)t0)[10])[1])){
C_trace("ChickenBridge.scm: 381  loop-error");
f_27049(t2,((C_word*)t0)[5],((C_word*)t0)[4],(C_word)C_a_i_list(&a,5,lf[613],((C_word*)((C_word*)t0)[9])[1],lf[614],((C_word*)((C_word*)t0)[10])[1],lf[615]));}
else{
t3=t2;
f_27997(2,t3,C_SCHEME_UNDEFINED);}}
else{
t2=(C_word)C_eqp(((C_word*)t0)[3],lf[596]);
if(C_truep(t2)){
if(C_truep(((C_word*)((C_word*)t0)[2])[1])){
C_trace("ChickenBridge.scm: 381  loop-error");
f_27049(((C_word*)t0)[6],((C_word*)t0)[5],((C_word*)t0)[4],(C_word)C_a_i_list(&a,1,lf[616]));}
else{
t3=(C_word)C_eqp(((C_word*)((C_word*)t0)[10])[1],lf[605]);
if(C_truep(t3)){
C_trace("ChickenBridge.scm: 381  loop-error");
f_27049(((C_word*)t0)[6],((C_word*)t0)[5],((C_word*)t0)[4],(C_word)C_a_i_list(&a,1,lf[617]));}
else{
t4=(C_word)C_i_car(((C_word*)((C_word*)t0)[8])[1]);
t5=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[8])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[8])+1,t5);
t7=C_mutate(((C_word *)((C_word*)t0)[2])+1,t4);
t8=((C_word*)t0)[6];
f_27985(2,t8,t7);}}}
else{
C_trace("ChickenBridge.scm: 381  loop-error");
f_27049(((C_word*)t0)[6],((C_word*)t0)[5],((C_word*)t0)[4],(C_word)C_a_i_list(&a,3,lf[618],((C_word*)((C_word*)t0)[9])[1],lf[619]));}}}

/* k27995 in k27992 in k27980 in k27969 in do4492 in k27725 in parse-sequence-iteration in k26697 in k26694 in k26691 in k26688 in k26263 in k26260 in k26257 in k26254 in k26251 in k25668 in k25665 in k25142 in k25139 in k25136 in k25133 in k25130 in k25127 in k25124 in k25121 in k25118 in k25115 in k25112 in k25109 in k25106 in k25103 in k25100 in k25097 in k25094 in k25091 in k25088 in k25085 in k25082 in k24943 in k24940 in k24937 in k24934 in k24878 in k24875 in k24872 in k24869 in k24866 in k24863 in k24860 in k24857 in k23555 in k23486 in k23293 in k23290 in k23185 in k23134 in k11783 in k10718 in k10715 in k7274 in k7271 in k6978 in k6975 in k6971 in k6680 in k6677 in k6674 in k6671 */
static void C_ccall f_27997(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,((C_word*)((C_word*)t0)[5])[1]);
t3=(C_word)C_i_car(((C_word*)((C_word*)t0)[4])[1]);
t4=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
t5=C_mutate(((C_word *)((C_word*)t0)[4])+1,t4);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t3);
t7=((C_word*)t0)[2];
f_27985(2,t7,t6);}

/* k27983 in k27980 in k27969 in do4492 in k27725 in parse-sequence-iteration in k26697 in k26694 in k26691 in k26688 in k26263 in k26260 in k26257 in k26254 in k26251 in k25668 in k25665 in k25142 in k25139 in k25136 in k25133 in k25130 in k25127 in k25124 in k25121 in k25118 in k25115 in k25112 in k25109 in k25106 in k25103 in k25100 in k25097 in k25094 in k25091 in k25088 in k25085 in k25082 in k24943 in k24940 in k24937 in k24934 in k24878 in k24875 in k24872 in k24869 in k24866 in k24863 in k24860 in k24857 in k23555 in k23486 in k23293 in k23290 in k23185 in k23134 in k11783 in k10718 in k10715 in k7274 in k7271 in k6978 in k6975 in k6971 in k6680 in k6677 in k6674 in k6671 */
static void C_ccall f_27985(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
t2=((C_word*)((C_word*)t0)[4])[1];
f_27961(t2,((C_word*)t0)[3],((C_word*)((C_word*)t0)[2])[1]);}

/* k27731 in k27725 in parse-sequence-iteration in k26697 in k26694 in k26691 in k26688 in k26263 in k26260 in k26257 in k26254 in k26251 in k25668 in k25665 in k25142 in k25139 in k25136 in k25133 in k25130 in k25127 in k25124 in k25121 in k25118 in k25115 in k25112 in k25109 in k25106 in k25103 in k25100 in k25097 in k25094 in k25091 in k25088 in k25085 in k25082 in k24943 in k24940 in k24937 in k24934 in k24878 in k24875 in k24872 in k24869 in k24866 in k24863 in k24860 in k24857 in k23555 in k23486 in k23293 in k23290 in k23185 in k23134 in k11783 in k10718 in k10715 in k7274 in k7271 in k6978 in k6975 in k6971 in k6680 in k6677 in k6674 in k6671 */
static void C_ccall f_27733(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[14],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_27733,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|13,a[1]=(C_word)f_27959,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],a[7]=((C_word*)t0)[7],a[8]=((C_word*)t0)[8],a[9]=((C_word*)t0)[9],a[10]=((C_word*)t0)[10],a[11]=((C_word*)t0)[11],a[12]=((C_word*)t0)[12],a[13]=((C_word*)t0)[13],tmp=(C_word)a,a+=14,tmp);
C_trace("ChickenBridge.scm: 381  make-binding");
f_27043(t2,((C_word*)t0)[4],C_SCHEME_FALSE);}

/* k27957 in k27731 in k27725 in parse-sequence-iteration in k26697 in k26694 in k26691 in k26688 in k26263 in k26260 in k26257 in k26254 in k26251 in k25668 in k25665 in k25142 in k25139 in k25136 in k25133 in k25130 in k25127 in k25124 in k25121 in k25118 in k25115 in k25112 in k25109 in k25106 in k25103 in k25100 in k25097 in k25094 in k25091 in k25088 in k25085 in k25082 in k24943 in k24940 in k24937 in k24934 in k24878 in k24875 in k24872 in k24869 in k24866 in k24863 in k24860 in k24857 in k23555 in k23486 in k23293 in k23290 in k23185 in k23134 in k11783 in k10718 in k10715 in k7274 in k7271 in k6978 in k6975 in k6971 in k6680 in k6677 in k6674 in k6671 */
static void C_ccall f_27959(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[16],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_27959,2,t0,t1);}
t2=(C_word)C_a_i_cons(&a,2,t1,((C_word*)((C_word*)t0)[13])[1]);
t3=C_mutate(((C_word *)((C_word*)t0)[13])+1,t2);
t4=(*a=C_CLOSURE_TYPE|12,a[1]=(C_word)f_27955,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],a[7]=((C_word*)t0)[8],a[8]=((C_word*)t0)[9],a[9]=((C_word*)t0)[10],a[10]=((C_word*)t0)[11],a[11]=((C_word*)t0)[12],a[12]=((C_word*)t0)[13],tmp=(C_word)a,a+=13,tmp);
C_trace("ChickenBridge.scm: 381  make-binding");
f_27043(t4,((C_word*)t0)[5],((C_word*)((C_word*)t0)[2])[1]);}

/* k27953 in k27957 in k27731 in k27725 in parse-sequence-iteration in k26697 in k26694 in k26691 in k26688 in k26263 in k26260 in k26257 in k26254 in k26251 in k25668 in k25665 in k25142 in k25139 in k25136 in k25133 in k25130 in k25127 in k25124 in k25121 in k25118 in k25115 in k25112 in k25109 in k25106 in k25103 in k25100 in k25097 in k25094 in k25091 in k25088 in k25085 in k25082 in k24943 in k24940 in k24937 in k24934 in k24878 in k24875 in k24872 in k24869 in k24866 in k24863 in k24860 in k24857 in k23555 in k23486 in k23293 in k23290 in k23185 in k23134 in k11783 in k10718 in k10715 in k7274 in k7271 in k6978 in k6975 in k6971 in k6680 in k6677 in k6674 in k6671 */
static void C_ccall f_27955(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word t14;
C_word t15;
C_word t16;
C_word t17;
C_word t18;
C_word ab[92],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_27955,2,t0,t1);}
t2=(C_word)C_a_i_cons(&a,2,t1,((C_word*)((C_word*)t0)[12])[1]);
t3=C_mutate(((C_word *)((C_word*)t0)[12])+1,t2);
t4=(*a=C_CLOSURE_TYPE|8,a[1]=(C_word)f_27744,a[2]=((C_word*)t0)[12],a[3]=((C_word*)t0)[6],a[4]=((C_word*)t0)[7],a[5]=((C_word*)t0)[8],a[6]=((C_word*)t0)[9],a[7]=((C_word*)t0)[10],a[8]=((C_word*)t0)[11],tmp=(C_word)a,a+=9,tmp);
t5=(C_word)C_eqp(((C_word*)((C_word*)t0)[5])[1],lf[605]);
if(C_truep(t5)){
t6=(*a=C_CLOSURE_TYPE|9,a[1]=(C_word)f_27761,a[2]=t4,a[3]=((C_word*)t0)[9],a[4]=((C_word*)t0)[7],a[5]=((C_word*)t0)[3],a[6]=((C_word*)t0)[6],a[7]=((C_word*)t0)[8],a[8]=((C_word*)t0)[4],a[9]=((C_word*)t0)[12],tmp=(C_word)a,a+=10,tmp);
C_trace("ChickenBridge.scm: 381  gensym");
t7=C_retrieve(lf[26]);
((C_proc3)C_retrieve_proc(t7))(3,t7,t6,lf[609]);}
else{
t6=(C_word)C_eqp(((C_word*)((C_word*)t0)[5])[1],lf[610]);
if(C_truep(t6)){
t7=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_27837,a[2]=t4,a[3]=((C_word*)t0)[9],a[4]=((C_word*)t0)[4],tmp=(C_word)a,a+=5,tmp);
if(C_truep(((C_word*)((C_word*)t0)[2])[1])){
t8=(C_word)C_a_i_list(&a,3,lf[336],((C_word*)t0)[4],((C_word*)((C_word*)t0)[2])[1]);
t9=t7;
f_27837(t9,(C_word)C_a_i_list(&a,3,lf[12],((C_word*)t0)[3],t8));}
else{
t8=(C_word)C_a_i_list(&a,2,lf[336],((C_word*)t0)[4]);
t9=t7;
f_27837(t9,(C_word)C_a_i_list(&a,3,lf[12],((C_word*)t0)[3],t8));}}
else{
t7=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_27866,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[5],a[4]=t4,a[5]=((C_word*)t0)[9],a[6]=((C_word*)t0)[4],a[7]=((C_word*)t0)[7],tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)((C_word*)t0)[2])[1])){
t8=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_27901,a[2]=t7,a[3]=((C_word*)t0)[6],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[2],tmp=(C_word)a,a+=6,tmp);
if(C_truep((C_word)C_i_listp(((C_word*)((C_word*)t0)[2])[1]))){
t9=(C_word)C_i_car(((C_word*)((C_word*)t0)[2])[1]);
t10=t8;
f_27901(t10,(C_word)C_eqp(t9,lf[612]));}
else{
t9=t8;
f_27901(t9,C_SCHEME_FALSE);}}
else{
t8=(C_word)C_a_i_list(&a,2,lf[15],((C_word*)t0)[4]);
t9=(C_word)C_a_i_list(&a,3,lf[12],((C_word*)t0)[4],t8);
t10=(C_word)C_a_i_cons(&a,2,t9,((C_word*)((C_word*)t0)[6])[1]);
t11=C_mutate(((C_word *)((C_word*)t0)[6])+1,t10);
t12=t7;
f_27866(t12,((C_word*)((C_word*)t0)[6])[1]);}}}}

/* k27899 in k27953 in k27957 in k27731 in k27725 in parse-sequence-iteration in k26697 in k26694 in k26691 in k26688 in k26263 in k26260 in k26257 in k26254 in k26251 in k25668 in k25665 in k25142 in k25139 in k25136 in k25133 in k25130 in k25127 in k25124 in k25121 in k25118 in k25115 in k25112 in k25109 in k25106 in k25103 in k25100 in k25097 in k25094 in k25091 in k25088 in k25085 in k25082 in k24943 in k24940 in k24937 in k24934 in k24878 in k24875 in k24872 in k24869 in k24866 in k24863 in k24860 in k24857 in k23555 in k23486 in k23293 in k23290 in k23185 in k23134 in k11783 in k10718 in k10715 in k7274 in k7271 in k6978 in k6975 in k6971 in k6680 in k6677 in k6674 in k6671 */
static void C_fcall f_27901(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word ab[36],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_27901,NULL,2,t0,t1);}
if(C_truep(t1)){
t2=(C_word)C_i_cadr(((C_word*)((C_word*)t0)[5])[1]);
t3=(C_word)C_a_i_list(&a,2,t2,((C_word*)t0)[4]);
t4=(C_word)C_a_i_list(&a,3,lf[12],((C_word*)t0)[4],t3);
t5=(C_word)C_a_i_cons(&a,2,t4,((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_27866(t7,((C_word*)((C_word*)t0)[3])[1]);}
else{
t2=(C_word)C_a_i_list(&a,2,((C_word*)((C_word*)t0)[5])[1],((C_word*)t0)[4]);
t3=(C_word)C_a_i_list(&a,3,lf[12],((C_word*)t0)[4],t2);
t4=(C_word)C_a_i_cons(&a,2,t3,((C_word*)((C_word*)t0)[3])[1]);
t5=C_mutate(((C_word *)((C_word*)t0)[3])+1,t4);
t6=((C_word*)t0)[2];
f_27866(t6,((C_word*)((C_word*)t0)[3])[1]);}}

/* k27864 in k27953 in k27957 in k27731 in k27725 in parse-sequence-iteration in k26697 in k26694 in k26691 in k26688 in k26263 in k26260 in k26257 in k26254 in k26251 in k25668 in k25665 in k25142 in k25139 in k25136 in k25133 in k25130 in k25127 in k25124 in k25121 in k25118 in k25115 in k25112 in k25109 in k25106 in k25103 in k25100 in k25097 in k25094 in k25091 in k25088 in k25085 in k25082 in k24943 in k24940 in k24937 in k24934 in k24878 in k24875 in k24872 in k24869 in k24866 in k24863 in k24860 in k24857 in k23555 in k23486 in k23293 in k23290 in k23185 in k23134 in k11783 in k10718 in k10715 in k7274 in k7271 in k6978 in k6975 in k6971 in k6680 in k6677 in k6674 in k6671 */
static void C_fcall f_27866(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[30],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_27866,NULL,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_27882,a[2]=((C_word*)t0)[4],a[3]=((C_word*)t0)[5],a[4]=((C_word*)t0)[6],a[5]=((C_word*)t0)[7],tmp=(C_word)a,a+=6,tmp);
t3=(C_word)C_eqp(((C_word*)((C_word*)t0)[3])[1],lf[611]);
if(C_truep(t3)){
t4=(C_word)C_a_i_list(&a,2,lf[8],((C_word*)t0)[6]);
t5=t2;
f_27882(t5,(C_word)C_a_i_list(&a,3,lf[12],((C_word*)t0)[2],t4));}
else{
t4=t2;
f_27882(t4,(C_word)C_a_i_list(&a,3,lf[12],((C_word*)t0)[2],((C_word*)t0)[6]));}}

/* k27880 in k27864 in k27953 in k27957 in k27731 in k27725 in parse-sequence-iteration in k26697 in k26694 in k26691 in k26688 in k26263 in k26260 in k26257 in k26254 in k26251 in k25668 in k25665 in k25142 in k25139 in k25136 in k25133 in k25130 in k25127 in k25124 in k25121 in k25118 in k25115 in k25112 in k25109 in k25106 in k25103 in k25100 in k25097 in k25094 in k25091 in k25088 in k25085 in k25082 in k24943 in k24940 in k24937 in k24934 in k24878 in k24875 in k24872 in k24869 in k24866 in k24863 in k24860 in k24857 in k23555 in k23486 in k23293 in k23290 in k23185 in k23134 in k11783 in k10718 in k10715 in k7274 in k7271 in k6978 in k6975 in k6971 in k6680 in k6677 in k6674 in k6671 */
static void C_fcall f_27882(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word ab[12],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_27882,NULL,2,t0,t1);}
t2=(C_word)C_a_i_cons(&a,2,t1,((C_word*)((C_word*)t0)[5])[1]);
t3=C_mutate(((C_word *)((C_word*)t0)[5])+1,t2);
t4=(C_word)C_a_i_list(&a,2,lf[3],((C_word*)t0)[4]);
t5=(C_word)C_a_i_cons(&a,2,t4,((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_27744(t7,((C_word*)((C_word*)t0)[3])[1]);}

/* k27835 in k27953 in k27957 in k27731 in k27725 in parse-sequence-iteration in k26697 in k26694 in k26691 in k26688 in k26263 in k26260 in k26257 in k26254 in k26251 in k25668 in k25665 in k25142 in k25139 in k25136 in k25133 in k25130 in k25127 in k25124 in k25121 in k25118 in k25115 in k25112 in k25109 in k25106 in k25103 in k25100 in k25097 in k25094 in k25091 in k25088 in k25085 in k25082 in k24943 in k24940 in k24937 in k24934 in k24878 in k24875 in k24872 in k24869 in k24866 in k24863 in k24860 in k24857 in k23555 in k23486 in k23293 in k23290 in k23185 in k23134 in k11783 in k10718 in k10715 in k7274 in k7271 in k6978 in k6975 in k6971 in k6680 in k6677 in k6674 in k6671 */
static void C_fcall f_27837(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[18],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_27837,NULL,2,t0,t1);}
t2=(C_word)C_a_i_list(&a,2,lf[334],((C_word*)t0)[4]);
t3=(C_word)C_a_i_list(&a,3,lf[484],t1,t2);
t4=(C_word)C_a_i_cons(&a,2,t3,((C_word*)((C_word*)t0)[3])[1]);
t5=C_mutate(((C_word *)((C_word*)t0)[3])+1,t4);
t6=((C_word*)t0)[2];
f_27744(t6,((C_word*)((C_word*)t0)[3])[1]);}

/* k27759 in k27953 in k27957 in k27731 in k27725 in parse-sequence-iteration in k26697 in k26694 in k26691 in k26688 in k26263 in k26260 in k26257 in k26254 in k26251 in k25668 in k25665 in k25142 in k25139 in k25136 in k25133 in k25130 in k25127 in k25124 in k25121 in k25118 in k25115 in k25112 in k25109 in k25106 in k25103 in k25100 in k25097 in k25094 in k25091 in k25088 in k25085 in k25082 in k24943 in k24940 in k24937 in k24934 in k24878 in k24875 in k24872 in k24869 in k24866 in k24863 in k24860 in k24857 in k23555 in k23486 in k23293 in k23290 in k23185 in k23134 in k11783 in k10718 in k10715 in k7274 in k7271 in k6978 in k6975 in k6971 in k6680 in k6677 in k6674 in k6671 */
static void C_ccall f_27761(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[11],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_27761,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|10,a[1]=(C_word)f_27764,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],a[7]=t1,a[8]=((C_word*)t0)[7],a[9]=((C_word*)t0)[8],a[10]=((C_word*)t0)[9],tmp=(C_word)a,a+=11,tmp);
C_trace("ChickenBridge.scm: 381  gensym");
t3=C_retrieve(lf[26]);
((C_proc3)C_retrieve_proc(t3))(3,t3,t2,lf[608]);}

/* k27762 in k27759 in k27953 in k27957 in k27731 in k27725 in parse-sequence-iteration in k26697 in k26694 in k26691 in k26688 in k26263 in k26260 in k26257 in k26254 in k26251 in k25668 in k25665 in k25142 in k25139 in k25136 in k25133 in k25130 in k25127 in k25124 in k25121 in k25118 in k25115 in k25112 in k25109 in k25106 in k25103 in k25100 in k25097 in k25094 in k25091 in k25088 in k25085 in k25082 in k24943 in k24940 in k24937 in k24934 in k24878 in k24875 in k24872 in k24869 in k24866 in k24863 in k24860 in k24857 in k23555 in k23486 in k23293 in k23290 in k23185 in k23134 in k11783 in k10718 in k10715 in k7274 in k7271 in k6978 in k6975 in k6971 in k6680 in k6677 in k6674 in k6671 */
static void C_ccall f_27764(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[12],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_27764,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|11,a[1]=(C_word)f_27828,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],a[7]=((C_word*)t0)[7],a[8]=((C_word*)t0)[8],a[9]=t1,a[10]=((C_word*)t0)[9],a[11]=((C_word*)t0)[10],tmp=(C_word)a,a+=12,tmp);
C_trace("ChickenBridge.scm: 381  make-binding");
f_27043(t2,((C_word*)t0)[7],C_fix(0));}

/* k27826 in k27762 in k27759 in k27953 in k27957 in k27731 in k27725 in parse-sequence-iteration in k26697 in k26694 in k26691 in k26688 in k26263 in k26260 in k26257 in k26254 in k26251 in k25668 in k25665 in k25142 in k25139 in k25136 in k25133 in k25130 in k25127 in k25124 in k25121 in k25118 in k25115 in k25112 in k25109 in k25106 in k25103 in k25100 in k25097 in k25094 in k25091 in k25088 in k25085 in k25082 in k24943 in k24940 in k24937 in k24934 in k24878 in k24875 in k24872 in k24869 in k24866 in k24863 in k24860 in k24857 in k23555 in k23486 in k23293 in k23290 in k23185 in k23134 in k11783 in k10718 in k10715 in k7274 in k7271 in k6978 in k6975 in k6971 in k6680 in k6677 in k6674 in k6671 */
static void C_ccall f_27828(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[15],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_27828,2,t0,t1);}
t2=(C_word)C_a_i_cons(&a,2,t1,((C_word*)((C_word*)t0)[11])[1]);
t3=C_mutate(((C_word *)((C_word*)t0)[11])+1,t2);
t4=(*a=C_CLOSURE_TYPE|11,a[1]=(C_word)f_27824,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],a[7]=((C_word*)t0)[7],a[8]=((C_word*)t0)[8],a[9]=((C_word*)t0)[9],a[10]=((C_word*)t0)[10],a[11]=((C_word*)t0)[11],tmp=(C_word)a,a+=12,tmp);
C_trace("ChickenBridge.scm: 381  make-binding");
f_27043(t4,((C_word*)t0)[9],C_SCHEME_FALSE);}

/* k27822 in k27826 in k27762 in k27759 in k27953 in k27957 in k27731 in k27725 in parse-sequence-iteration in k26697 in k26694 in k26691 in k26688 in k26263 in k26260 in k26257 in k26254 in k26251 in k25668 in k25665 in k25142 in k25139 in k25136 in k25133 in k25130 in k25127 in k25124 in k25121 in k25118 in k25115 in k25112 in k25109 in k25106 in k25103 in k25100 in k25097 in k25094 in k25091 in k25088 in k25085 in k25082 in k24943 in k24940 in k24937 in k24934 in k24878 in k24875 in k24872 in k24869 in k24866 in k24863 in k24860 in k24857 in k23555 in k23486 in k23293 in k23290 in k23185 in k23134 in k11783 in k10718 in k10715 in k7274 in k7271 in k6978 in k6975 in k6971 in k6680 in k6677 in k6674 in k6671 */
static void C_ccall f_27824(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word t14;
C_word t15;
C_word t16;
C_word t17;
C_word t18;
C_word t19;
C_word t20;
C_word ab[81],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_27824,2,t0,t1);}
t2=(C_word)C_a_i_cons(&a,2,t1,((C_word*)((C_word*)t0)[11])[1]);
t3=C_mutate(((C_word *)((C_word*)t0)[11])+1,t2);
t4=(C_word)C_a_i_list(&a,2,lf[606],((C_word*)t0)[10]);
t5=(C_word)C_a_i_list(&a,3,lf[12],((C_word*)t0)[9],t4);
t6=(C_word)C_a_i_cons(&a,2,t5,((C_word*)((C_word*)t0)[8])[1]);
t7=C_mutate(((C_word *)((C_word*)t0)[8])+1,t6);
t8=(C_word)C_a_i_list(&a,3,lf[127],C_fix(1),((C_word*)t0)[7]);
t9=(C_word)C_a_i_list(&a,3,lf[12],((C_word*)t0)[7],t8);
t10=(C_word)C_a_i_cons(&a,2,t9,((C_word*)((C_word*)t0)[6])[1]);
t11=C_mutate(((C_word *)((C_word*)t0)[6])+1,t10);
t12=(C_word)C_a_i_list(&a,3,lf[607],((C_word*)t0)[10],((C_word*)t0)[7]);
t13=(C_word)C_a_i_list(&a,3,lf[12],((C_word*)t0)[5],t12);
t14=(C_word)C_a_i_cons(&a,2,t13,((C_word*)((C_word*)t0)[4])[1]);
t15=C_mutate(((C_word *)((C_word*)t0)[4])+1,t14);
t16=(C_word)C_a_i_list(&a,3,lf[409],((C_word*)t0)[7],((C_word*)t0)[9]);
t17=(C_word)C_a_i_list(&a,2,lf[458],t16);
t18=(C_word)C_a_i_cons(&a,2,t17,((C_word*)((C_word*)t0)[3])[1]);
t19=C_mutate(((C_word *)((C_word*)t0)[3])+1,t18);
t20=((C_word*)t0)[2];
f_27744(t20,((C_word*)((C_word*)t0)[3])[1]);}

/* k27742 in k27953 in k27957 in k27731 in k27725 in parse-sequence-iteration in k26697 in k26694 in k26691 in k26688 in k26263 in k26260 in k26257 in k26254 in k26251 in k25668 in k25665 in k25142 in k25139 in k25136 in k25133 in k25130 in k25127 in k25124 in k25121 in k25118 in k25115 in k25112 in k25109 in k25106 in k25103 in k25100 in k25097 in k25094 in k25091 in k25088 in k25085 in k25082 in k24943 in k24940 in k24937 in k24934 in k24878 in k24875 in k24872 in k24869 in k24866 in k24863 in k24860 in k24857 in k23555 in k23486 in k23293 in k23290 in k23185 in k23134 in k11783 in k10718 in k10715 in k7274 in k7271 in k6978 in k6975 in k6971 in k6680 in k6677 in k6674 in k6671 */
static void C_fcall f_27744(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[11],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_27744,NULL,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_27751,a[2]=((C_word*)t0)[7],a[3]=((C_word*)t0)[8],tmp=(C_word)a,a+=4,tmp);
t3=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_27755,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=t2,tmp=(C_word)a,a+=7,tmp);
C_trace("ChickenBridge.scm: 381  reverse");
t4=*((C_word*)lf[216]+1);
((C_proc3)C_retrieve_proc(t4))(3,t4,t3,((C_word*)((C_word*)t0)[2])[1]);}

/* k27753 in k27742 in k27953 in k27957 in k27731 in k27725 in parse-sequence-iteration in k26697 in k26694 in k26691 in k26688 in k26263 in k26260 in k26257 in k26254 in k26251 in k25668 in k25665 in k25142 in k25139 in k25136 in k25133 in k25130 in k25127 in k25124 in k25121 in k25118 in k25115 in k25112 in k25109 in k25106 in k25103 in k25100 in k25097 in k25094 in k25091 in k25088 in k25085 in k25082 in k24943 in k24940 in k24937 in k24934 in k24878 in k24875 in k24872 in k24869 in k24866 in k24863 in k24860 in k24857 in k23555 in k23486 in k23293 in k23290 in k23185 in k23134 in k11783 in k10718 in k10715 in k7274 in k7271 in k6978 in k6975 in k6971 in k6680 in k6677 in k6674 in k6671 */
static void C_ccall f_27755(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word ab[36],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_27755,2,t0,t1);}
C_trace("ChickenBridge.scm: 381  make-loop-clause");
f_26809(((C_word*)t0)[6],(C_word)C_a_i_list(&a,12,lf[542],lf[572],lf[543],t1,lf[546],((C_word*)((C_word*)t0)[5])[1],lf[545],((C_word*)((C_word*)t0)[4])[1],lf[547],((C_word*)((C_word*)t0)[3])[1],lf[548],((C_word*)((C_word*)t0)[2])[1]));}

/* k27749 in k27742 in k27953 in k27957 in k27731 in k27725 in parse-sequence-iteration in k26697 in k26694 in k26691 in k26688 in k26263 in k26260 in k26257 in k26254 in k26251 in k25668 in k25665 in k25142 in k25139 in k25136 in k25133 in k25130 in k25127 in k25124 in k25121 in k25118 in k25115 in k25112 in k25109 in k25106 in k25103 in k25100 in k25097 in k25094 in k25091 in k25088 in k25085 in k25082 in k24943 in k24940 in k24937 in k24934 in k24878 in k24875 in k24872 in k24869 in k24866 in k24863 in k24860 in k24857 in k23555 in k23486 in k23293 in k23290 in k23185 in k23134 in k11783 in k10718 in k10715 in k7274 in k7271 in k6978 in k6975 in k6971 in k6680 in k6677 in k6674 in k6671 */
static void C_ccall f_27751(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 381  values");
C_values(4,0,((C_word*)t0)[3],t1,((C_word*)((C_word*)t0)[2])[1]);}

/* parse-repeat in k26697 in k26694 in k26691 in k26688 in k26263 in k26260 in k26257 in k26254 in k26251 in k25668 in k25665 in k25142 in k25139 in k25136 in k25133 in k25130 in k25127 in k25124 in k25121 in k25118 in k25115 in k25112 in k25109 in k25106 in k25103 in k25100 in k25097 in k25094 in k25091 in k25088 in k25085 in k25082 in k24943 in k24940 in k24937 in k24934 in k24878 in k24875 in k24872 in k24869 in k24866 in k24863 in k24860 in k24857 in k23555 in k23486 in k23293 in k23290 in k23185 in k23134 in k11783 in k10718 in k10715 in k7274 in k7271 in k6978 in k6975 in k6971 in k6680 in k6677 in k6674 in k6671 */
static void C_ccall f_27673(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4){
C_word tmp;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word ab[13],*a=ab;
if(c!=5) C_bad_argc_2(c,5,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr5,(void*)f_27673,5,t0,t1,t2,t3,t4);}
t5=(C_word)C_i_cdr(t2);
if(C_truep((C_word)C_i_nullp(t5))){
C_trace("ChickenBridge.scm: 381  loop-error");
f_27049(t1,t4,t2,(C_word)C_a_i_list(&a,1,lf[602]));}
else{
t6=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_27688,a[2]=t4,a[3]=t3,a[4]=t2,a[5]=((C_word)li437),tmp=(C_word)a,a+=6,tmp);
t7=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_27706,a[2]=t2,a[3]=((C_word)li438),tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 381  call-with-values");
C_call_with_values(4,0,t1,t6,t7);}}

/* a27705 in parse-repeat in k26697 in k26694 in k26691 in k26688 in k26263 in k26260 in k26257 in k26254 in k26251 in k25668 in k25665 in k25142 in k25139 in k25136 in k25133 in k25130 in k25127 in k25124 in k25121 in k25118 in k25115 in k25112 in k25109 in k25106 in k25103 in k25100 in k25097 in k25094 in k25091 in k25088 in k25085 in k25082 in k24943 in k24940 in k24937 in k24934 in k24878 in k24875 in k24872 in k24869 in k24866 in k24863 in k24860 in k24857 in k23555 in k23486 in k23293 in k23290 in k23185 in k23134 in k11783 in k10718 in k10715 in k7274 in k7271 in k6978 in k6975 in k6971 in k6680 in k6677 in k6674 in k6671 */
static void C_ccall f_27706(C_word c,C_word t0,C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word *a;
if(c!=4) C_bad_argc_2(c,4,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr4,(void*)f_27706,4,t0,t1,t2,t3);}
t4=(C_word)C_i_cddr(((C_word*)t0)[2]);
C_trace("ChickenBridge.scm: 381  values");
C_values(4,0,t1,t2,t4);}

/* a27687 in parse-repeat in k26697 in k26694 in k26691 in k26688 in k26263 in k26260 in k26257 in k26254 in k26251 in k25668 in k25665 in k25142 in k25139 in k25136 in k25133 in k25130 in k25127 in k25124 in k25121 in k25118 in k25115 in k25112 in k25109 in k25106 in k25103 in k25100 in k25097 in k25094 in k25091 in k25088 in k25085 in k25082 in k24943 in k24940 in k24937 in k24934 in k24878 in k24875 in k24872 in k24869 in k24866 in k24863 in k24860 in k24857 in k23555 in k23486 in k23293 in k23290 in k23185 in k23134 in k11783 in k10718 in k10715 in k7274 in k7271 in k6978 in k6975 in k6971 in k6680 in k6677 in k6674 in k6671 */
static void C_ccall f_27688(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[6],*a=ab;
if(c!=2) C_bad_argc_2(c,2,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_27688,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_27700,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=t1,a[5]=((C_word*)t0)[4],tmp=(C_word)a,a+=6,tmp);
C_trace("ChickenBridge.scm: 381  gensym");
t3=C_retrieve(lf[26]);
((C_proc3)C_retrieve_proc(t3))(3,t3,t2,lf[603]);}

/* k27698 in a27687 in parse-repeat in k26697 in k26694 in k26691 in k26688 in k26263 in k26260 in k26257 in k26254 in k26251 in k25668 in k25665 in k25142 in k25139 in k25136 in k25133 in k25130 in k25127 in k25124 in k25121 in k25118 in k25115 in k25112 in k25109 in k25106 in k25103 in k25100 in k25097 in k25094 in k25091 in k25088 in k25085 in k25082 in k24943 in k24940 in k24937 in k24934 in k24878 in k24875 in k24872 in k24869 in k24866 in k24863 in k24860 in k24857 in k23555 in k23486 in k23293 in k23290 in k23185 in k23134 in k11783 in k10718 in k10715 in k7274 in k7271 in k6978 in k6975 in k6971 in k6680 in k6677 in k6674 in k6671 */
static void C_ccall f_27700(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[12],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_27700,2,t0,t1);}
t2=(C_word)C_i_cadr(((C_word*)t0)[5]);
t3=(C_word)C_a_i_list(&a,4,lf[572],t1,lf[577],t2);
C_trace("ChickenBridge.scm: 381  parse-numerical-for");
t4=C_retrieve2(lf[571],"parse-numerical-for");
f_27291(5,t4,((C_word*)t0)[4],t3,((C_word*)t0)[3],((C_word*)t0)[2]);}

/* parse-numerical-for in k26697 in k26694 in k26691 in k26688 in k26263 in k26260 in k26257 in k26254 in k26251 in k25668 in k25665 in k25142 in k25139 in k25136 in k25133 in k25130 in k25127 in k25124 in k25121 in k25118 in k25115 in k25112 in k25109 in k25106 in k25103 in k25100 in k25097 in k25094 in k25091 in k25088 in k25085 in k25082 in k24943 in k24940 in k24937 in k24934 in k24878 in k24875 in k24872 in k24869 in k24866 in k24863 in k24860 in k24857 in k23555 in k23486 in k23293 in k23290 in k23185 in k23134 in k11783 in k10718 in k10715 in k7274 in k7271 in k6978 in k6975 in k6971 in k6680 in k6677 in k6674 in k6671 */
static void C_ccall f_27291(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4){
C_word tmp;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word t14;
C_word t15;
C_word t16;
C_word t17;
C_word t18;
C_word t19;
C_word t20;
C_word t21;
C_word t22;
C_word t23;
C_word t24;
C_word t25;
C_word t26;
C_word t27;
C_word t28;
C_word t29;
C_word t30;
C_word t31;
C_word ab[48],*a=ab;
if(c!=5) C_bad_argc_2(c,5,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr5,(void*)f_27291,5,t0,t1,t2,t3,t4);}
t5=(C_word)C_i_cadr(t2);
t6=(C_word)C_i_cddr(t2);
t7=t6;
t8=(*a=C_VECTOR_TYPE|1,a[1]=t7,tmp=(C_word)a,a+=2,tmp);
t9=C_SCHEME_END_OF_LIST;
t10=(*a=C_VECTOR_TYPE|1,a[1]=t9,tmp=(C_word)a,a+=2,tmp);
t11=C_SCHEME_END_OF_LIST;
t12=(*a=C_VECTOR_TYPE|1,a[1]=t11,tmp=(C_word)a,a+=2,tmp);
t13=C_SCHEME_FALSE;
t14=(*a=C_VECTOR_TYPE|1,a[1]=t13,tmp=(C_word)a,a+=2,tmp);
t15=C_SCHEME_FALSE;
t16=(*a=C_VECTOR_TYPE|1,a[1]=t15,tmp=(C_word)a,a+=2,tmp);
t17=C_SCHEME_FALSE;
t18=(*a=C_VECTOR_TYPE|1,a[1]=t17,tmp=(C_word)a,a+=2,tmp);
t19=C_SCHEME_FALSE;
t20=(*a=C_VECTOR_TYPE|1,a[1]=t19,tmp=(C_word)a,a+=2,tmp);
t21=C_SCHEME_FALSE;
t22=(*a=C_VECTOR_TYPE|1,a[1]=t21,tmp=(C_word)a,a+=2,tmp);
t23=C_SCHEME_FALSE;
t24=(*a=C_VECTOR_TYPE|1,a[1]=t23,tmp=(C_word)a,a+=2,tmp);
t25=C_SCHEME_FALSE;
t26=(*a=C_VECTOR_TYPE|1,a[1]=t25,tmp=(C_word)a,a+=2,tmp);
t27=(*a=C_CLOSURE_TYPE|13,a[1]=(C_word)f_27301,a[2]=t18,a[3]=t16,a[4]=t14,a[5]=t24,a[6]=t10,a[7]=t12,a[8]=t20,a[9]=t8,a[10]=t1,a[11]=t22,a[12]=t5,a[13]=t26,tmp=(C_word)a,a+=14,tmp);
t28=C_SCHEME_UNDEFINED;
t29=(*a=C_VECTOR_TYPE|1,a[1]=t28,tmp=(C_word)a,a+=2,tmp);
t30=C_set_block_item(t29,0,(*a=C_CLOSURE_TYPE|11,a[1]=(C_word)f_27500,a[2]=t22,a[3]=t18,a[4]=t20,a[5]=t2,a[6]=t4,a[7]=t14,a[8]=t16,a[9]=t29,a[10]=t8,a[11]=((C_word)li435),tmp=(C_word)a,a+=12,tmp));
t31=((C_word*)t29)[1];
f_27500(t31,t27,C_SCHEME_FALSE);}

/* do4393 in parse-numerical-for in k26697 in k26694 in k26691 in k26688 in k26263 in k26260 in k26257 in k26254 in k26251 in k25668 in k25665 in k25142 in k25139 in k25136 in k25133 in k25130 in k25127 in k25124 in k25121 in k25118 in k25115 in k25112 in k25109 in k25106 in k25103 in k25100 in k25097 in k25094 in k25091 in k25088 in k25085 in k25082 in k24943 in k24940 in k24937 in k24934 in k24878 in k24875 in k24872 in k24869 in k24866 in k24863 in k24860 in k24857 in k23555 in k23486 in k23293 in k23290 in k23185 in k23134 in k11783 in k10718 in k10715 in k7274 in k7271 in k6978 in k6975 in k6971 in k6680 in k6677 in k6674 in k6671 */
static void C_fcall f_27500(C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word ab[15],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_27500,NULL,3,t0,t1,t2);}
t3=(*a=C_VECTOR_TYPE|1,a[1]=t2,tmp=(C_word)a,a+=2,tmp);
t4=(C_word)C_i_nullp(((C_word*)((C_word*)t0)[10])[1]);
t5=(*a=C_CLOSURE_TYPE|12,a[1]=(C_word)f_27510,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],a[7]=((C_word*)t0)[7],a[8]=((C_word*)t0)[8],a[9]=((C_word*)t0)[9],a[10]=t3,a[11]=((C_word*)t0)[10],a[12]=t1,tmp=(C_word)a,a+=13,tmp);
if(C_truep(t4)){
t6=t5;
f_27510(2,t6,t4);}
else{
t6=(C_word)C_i_car(((C_word*)((C_word*)t0)[10])[1]);
C_trace("ChickenBridge.scm: 381  loop-op?");
f_27031(t5,t6,((C_word*)t0)[6]);}}

/* k27508 in do4393 in parse-numerical-for in k26697 in k26694 in k26691 in k26688 in k26263 in k26260 in k26257 in k26254 in k26251 in k25668 in k25665 in k25142 in k25139 in k25136 in k25133 in k25130 in k25127 in k25124 in k25121 in k25118 in k25115 in k25112 in k25109 in k25106 in k25103 in k25100 in k25097 in k25094 in k25091 in k25088 in k25085 in k25082 in k24943 in k24940 in k24937 in k24934 in k24878 in k24875 in k24872 in k24869 in k24866 in k24863 in k24860 in k24857 in k23555 in k23486 in k23293 in k23290 in k23185 in k23134 in k11783 in k10718 in k10715 in k7274 in k7271 in k6978 in k6975 in k6971 in k6680 in k6677 in k6674 in k6671 */
static void C_ccall f_27510(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word ab[16],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_27510,2,t0,t1);}
if(C_truep(t1)){
t2=((C_word*)t0)[12];
((C_proc2)(void*)(*((C_word*)t2+1)))(2,t2,C_SCHEME_UNDEFINED);}
else{
t2=(C_word)C_i_car(((C_word*)((C_word*)t0)[11])[1]);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[11])[1]);
t4=C_mutate(((C_word *)((C_word*)t0)[11])+1,t3);
t5=C_mutate(((C_word *)((C_word*)t0)[10])+1,t2);
t6=(*a=C_CLOSURE_TYPE|12,a[1]=(C_word)f_27521,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],a[7]=((C_word*)t0)[7],a[8]=((C_word*)t0)[11],a[9]=((C_word*)t0)[8],a[10]=((C_word*)t0)[12],a[11]=((C_word*)t0)[9],a[12]=((C_word*)t0)[10],tmp=(C_word)a,a+=13,tmp);
if(C_truep((C_word)C_i_nullp(((C_word*)((C_word*)t0)[11])[1]))){
C_trace("ChickenBridge.scm: 381  loop-error");
f_27049(t6,((C_word*)t0)[6],((C_word*)t0)[5],(C_word)C_a_i_list(&a,1,lf[600]));}
else{
t7=t6;
f_27521(2,t7,C_SCHEME_UNDEFINED);}}}

/* k27519 in k27508 in do4393 in parse-numerical-for in k26697 in k26694 in k26691 in k26688 in k26263 in k26260 in k26257 in k26254 in k26251 in k25668 in k25665 in k25142 in k25139 in k25136 in k25133 in k25130 in k25127 in k25124 in k25121 in k25118 in k25115 in k25112 in k25109 in k25106 in k25103 in k25100 in k25097 in k25094 in k25091 in k25088 in k25085 in k25082 in k24943 in k24940 in k24937 in k24934 in k24878 in k24875 in k24872 in k24869 in k24866 in k24863 in k24860 in k24857 in k23555 in k23486 in k23293 in k23290 in k23185 in k23134 in k11783 in k10718 in k10715 in k7274 in k7271 in k6978 in k6975 in k6971 in k6680 in k6677 in k6674 in k6671 */
static void C_ccall f_27521(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word t14;
C_word t15;
C_word t16;
C_word t17;
C_word ab[132],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_27521,2,t0,t1);}
t2=((C_word*)((C_word*)t0)[12])[1];
t3=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_27524,a[2]=((C_word*)t0)[12],a[3]=((C_word*)t0)[10],a[4]=((C_word*)t0)[11],tmp=(C_word)a,a+=5,tmp);
t4=(C_word)C_eqp(t2,lf[579]);
t5=(C_truep(t4)?t4:(C_word)C_eqp(t2,lf[575]));
if(C_truep(t5)){
t6=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_27536,a[2]=t3,a[3]=((C_word*)t0)[7],a[4]=((C_word*)t0)[8],a[5]=((C_word*)t0)[12],a[6]=((C_word*)t0)[9],tmp=(C_word)a,a+=7,tmp);
if(C_truep(((C_word*)((C_word*)t0)[9])[1])){
C_trace("ChickenBridge.scm: 381  loop-error");
f_27049(t6,((C_word*)t0)[6],((C_word*)t0)[5],(C_word)C_a_i_list(&a,5,lf[580],((C_word*)((C_word*)t0)[12])[1],lf[581],((C_word*)((C_word*)t0)[9])[1],lf[582]));}
else{
t7=t6;
f_27536(2,t7,C_SCHEME_UNDEFINED);}}
else{
t6=(C_word)C_eqp(t2,lf[577]);
if(C_truep(t6)){
t7=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_27557,a[2]=t3,a[3]=((C_word*)t0)[12],a[4]=((C_word*)t0)[3],a[5]=((C_word*)t0)[4],a[6]=((C_word*)t0)[8],tmp=(C_word)a,a+=7,tmp);
if(C_truep(((C_word*)((C_word*)t0)[3])[1])){
C_trace("ChickenBridge.scm: 381  loop-error");
f_27049(t7,((C_word*)t0)[6],((C_word*)t0)[5],(C_word)C_a_i_list(&a,5,lf[583],((C_word*)((C_word*)t0)[12])[1],lf[584],((C_word*)((C_word*)t0)[3])[1],lf[585]));}
else{
t8=t7;
f_27557(2,t8,C_SCHEME_UNDEFINED);}}
else{
t7=(C_word)C_eqp(t2,lf[586]);
if(C_truep(t7)){
t8=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_27578,a[2]=t3,a[3]=((C_word*)t0)[12],a[4]=((C_word*)t0)[3],a[5]=((C_word*)t0)[4],a[6]=((C_word*)t0)[8],tmp=(C_word)a,a+=7,tmp);
if(C_truep(((C_word*)((C_word*)t0)[3])[1])){
C_trace("ChickenBridge.scm: 381  loop-error");
f_27049(t8,((C_word*)t0)[6],((C_word*)t0)[5],(C_word)C_a_i_list(&a,5,lf[587],((C_word*)((C_word*)t0)[12])[1],lf[588],((C_word*)((C_word*)t0)[3])[1],lf[589]));}
else{
t9=t8;
f_27578(2,t9,C_SCHEME_UNDEFINED);}}
else{
t8=(C_word)C_eqp(t2,lf[576]);
if(C_truep(t8)){
t9=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_27599,a[2]=t3,a[3]=((C_word*)t0)[12],a[4]=((C_word*)t0)[3],a[5]=((C_word*)t0)[4],a[6]=((C_word*)t0)[8],tmp=(C_word)a,a+=7,tmp);
if(C_truep(((C_word*)((C_word*)t0)[3])[1])){
C_trace("ChickenBridge.scm: 381  loop-error");
f_27049(t9,((C_word*)t0)[6],((C_word*)t0)[5],(C_word)C_a_i_list(&a,5,lf[590],((C_word*)((C_word*)t0)[12])[1],lf[591],((C_word*)((C_word*)t0)[3])[1],lf[592]));}
else{
t10=t9;
f_27599(2,t10,C_SCHEME_UNDEFINED);}}
else{
t9=(C_word)C_eqp(t2,lf[578]);
if(C_truep(t9)){
t10=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_27620,a[2]=t3,a[3]=((C_word*)t0)[12],a[4]=((C_word*)t0)[3],a[5]=((C_word*)t0)[4],a[6]=((C_word*)t0)[8],tmp=(C_word)a,a+=7,tmp);
if(C_truep(((C_word*)((C_word*)t0)[3])[1])){
C_trace("ChickenBridge.scm: 381  loop-error");
f_27049(t10,((C_word*)t0)[6],((C_word*)t0)[5],(C_word)C_a_i_list(&a,5,lf[593],((C_word*)((C_word*)t0)[12])[1],lf[594],((C_word*)((C_word*)t0)[3])[1],lf[595]));}
else{
t11=t10;
f_27620(2,t11,C_SCHEME_UNDEFINED);}}
else{
t10=(C_word)C_eqp(t2,lf[596]);
if(C_truep(t10)){
t11=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_27641,a[2]=t3,a[3]=((C_word*)t0)[2],a[4]=((C_word*)t0)[8],tmp=(C_word)a,a+=5,tmp);
if(C_truep(((C_word*)((C_word*)t0)[2])[1])){
C_trace("ChickenBridge.scm: 381  loop-error");
f_27049(t11,((C_word*)t0)[6],((C_word*)t0)[5],(C_word)C_a_i_list(&a,1,lf[597]));}
else{
t12=t11;
f_27641(2,t12,C_SCHEME_UNDEFINED);}}
else{
C_trace("ChickenBridge.scm: 381  loop-error");
f_27049(t3,((C_word*)t0)[6],((C_word*)t0)[5],(C_word)C_a_i_list(&a,3,lf[598],((C_word*)((C_word*)t0)[12])[1],lf[599]));}}}}}}}

/* k27639 in k27519 in k27508 in do4393 in parse-numerical-for in k26697 in k26694 in k26691 in k26688 in k26263 in k26260 in k26257 in k26254 in k26251 in k25668 in k25665 in k25142 in k25139 in k25136 in k25133 in k25130 in k25127 in k25124 in k25121 in k25118 in k25115 in k25112 in k25109 in k25106 in k25103 in k25100 in k25097 in k25094 in k25091 in k25088 in k25085 in k25082 in k24943 in k24940 in k24937 in k24934 in k24878 in k24875 in k24872 in k24869 in k24866 in k24863 in k24860 in k24857 in k23555 in k23486 in k23293 in k23290 in k23185 in k23134 in k11783 in k10718 in k10715 in k7274 in k7271 in k6978 in k6975 in k6971 in k6680 in k6677 in k6674 in k6671 */
static void C_ccall f_27641(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word *a;
t2=(C_word)C_i_car(((C_word*)((C_word*)t0)[4])[1]);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
t4=C_mutate(((C_word *)((C_word*)t0)[4])+1,t3);
t5=C_mutate(((C_word *)((C_word*)t0)[3])+1,t2);
t6=((C_word*)t0)[2];
f_27524(2,t6,t5);}

/* k27618 in k27519 in k27508 in do4393 in parse-numerical-for in k26697 in k26694 in k26691 in k26688 in k26263 in k26260 in k26257 in k26254 in k26251 in k25668 in k25665 in k25142 in k25139 in k25136 in k25133 in k25130 in k25127 in k25124 in k25121 in k25118 in k25115 in k25112 in k25109 in k25106 in k25103 in k25100 in k25097 in k25094 in k25091 in k25088 in k25085 in k25082 in k24943 in k24940 in k24937 in k24934 in k24878 in k24875 in k24872 in k24869 in k24866 in k24863 in k24860 in k24857 in k23555 in k23486 in k23293 in k23290 in k23185 in k23134 in k11783 in k10718 in k10715 in k7274 in k7271 in k6978 in k6975 in k6971 in k6680 in k6677 in k6674 in k6671 */
static void C_ccall f_27620(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=(C_word)C_i_car(((C_word*)((C_word*)t0)[6])[1]);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[6])[1]);
t4=C_mutate(((C_word *)((C_word*)t0)[6])+1,t3);
t5=C_mutate(((C_word *)((C_word*)t0)[5])+1,t2);
t6=C_mutate(((C_word *)((C_word*)t0)[4])+1,((C_word*)((C_word*)t0)[3])[1]);
t7=((C_word*)t0)[2];
f_27524(2,t7,t6);}

/* k27597 in k27519 in k27508 in do4393 in parse-numerical-for in k26697 in k26694 in k26691 in k26688 in k26263 in k26260 in k26257 in k26254 in k26251 in k25668 in k25665 in k25142 in k25139 in k25136 in k25133 in k25130 in k25127 in k25124 in k25121 in k25118 in k25115 in k25112 in k25109 in k25106 in k25103 in k25100 in k25097 in k25094 in k25091 in k25088 in k25085 in k25082 in k24943 in k24940 in k24937 in k24934 in k24878 in k24875 in k24872 in k24869 in k24866 in k24863 in k24860 in k24857 in k23555 in k23486 in k23293 in k23290 in k23185 in k23134 in k11783 in k10718 in k10715 in k7274 in k7271 in k6978 in k6975 in k6971 in k6680 in k6677 in k6674 in k6671 */
static void C_ccall f_27599(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=(C_word)C_i_car(((C_word*)((C_word*)t0)[6])[1]);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[6])[1]);
t4=C_mutate(((C_word *)((C_word*)t0)[6])+1,t3);
t5=C_mutate(((C_word *)((C_word*)t0)[5])+1,t2);
t6=C_mutate(((C_word *)((C_word*)t0)[4])+1,((C_word*)((C_word*)t0)[3])[1]);
t7=((C_word*)t0)[2];
f_27524(2,t7,t6);}

/* k27576 in k27519 in k27508 in do4393 in parse-numerical-for in k26697 in k26694 in k26691 in k26688 in k26263 in k26260 in k26257 in k26254 in k26251 in k25668 in k25665 in k25142 in k25139 in k25136 in k25133 in k25130 in k25127 in k25124 in k25121 in k25118 in k25115 in k25112 in k25109 in k25106 in k25103 in k25100 in k25097 in k25094 in k25091 in k25088 in k25085 in k25082 in k24943 in k24940 in k24937 in k24934 in k24878 in k24875 in k24872 in k24869 in k24866 in k24863 in k24860 in k24857 in k23555 in k23486 in k23293 in k23290 in k23185 in k23134 in k11783 in k10718 in k10715 in k7274 in k7271 in k6978 in k6975 in k6971 in k6680 in k6677 in k6674 in k6671 */
static void C_ccall f_27578(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=(C_word)C_i_car(((C_word*)((C_word*)t0)[6])[1]);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[6])[1]);
t4=C_mutate(((C_word *)((C_word*)t0)[6])+1,t3);
t5=C_mutate(((C_word *)((C_word*)t0)[5])+1,t2);
t6=C_mutate(((C_word *)((C_word*)t0)[4])+1,((C_word*)((C_word*)t0)[3])[1]);
t7=((C_word*)t0)[2];
f_27524(2,t7,t6);}

/* k27555 in k27519 in k27508 in do4393 in parse-numerical-for in k26697 in k26694 in k26691 in k26688 in k26263 in k26260 in k26257 in k26254 in k26251 in k25668 in k25665 in k25142 in k25139 in k25136 in k25133 in k25130 in k25127 in k25124 in k25121 in k25118 in k25115 in k25112 in k25109 in k25106 in k25103 in k25100 in k25097 in k25094 in k25091 in k25088 in k25085 in k25082 in k24943 in k24940 in k24937 in k24934 in k24878 in k24875 in k24872 in k24869 in k24866 in k24863 in k24860 in k24857 in k23555 in k23486 in k23293 in k23290 in k23185 in k23134 in k11783 in k10718 in k10715 in k7274 in k7271 in k6978 in k6975 in k6971 in k6680 in k6677 in k6674 in k6671 */
static void C_ccall f_27557(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=(C_word)C_i_car(((C_word*)((C_word*)t0)[6])[1]);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[6])[1]);
t4=C_mutate(((C_word *)((C_word*)t0)[6])+1,t3);
t5=C_mutate(((C_word *)((C_word*)t0)[5])+1,t2);
t6=C_mutate(((C_word *)((C_word*)t0)[4])+1,((C_word*)((C_word*)t0)[3])[1]);
t7=((C_word*)t0)[2];
f_27524(2,t7,t6);}

/* k27534 in k27519 in k27508 in do4393 in parse-numerical-for in k26697 in k26694 in k26691 in k26688 in k26263 in k26260 in k26257 in k26254 in k26251 in k25668 in k25665 in k25142 in k25139 in k25136 in k25133 in k25130 in k25127 in k25124 in k25121 in k25118 in k25115 in k25112 in k25109 in k25106 in k25103 in k25100 in k25097 in k25094 in k25091 in k25088 in k25085 in k25082 in k24943 in k24940 in k24937 in k24934 in k24878 in k24875 in k24872 in k24869 in k24866 in k24863 in k24860 in k24857 in k23555 in k23486 in k23293 in k23290 in k23185 in k23134 in k11783 in k10718 in k10715 in k7274 in k7271 in k6978 in k6975 in k6971 in k6680 in k6677 in k6674 in k6671 */
static void C_ccall f_27536(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,((C_word*)((C_word*)t0)[5])[1]);
t3=(C_word)C_i_car(((C_word*)((C_word*)t0)[4])[1]);
t4=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
t5=C_mutate(((C_word *)((C_word*)t0)[4])+1,t4);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t3);
t7=((C_word*)t0)[2];
f_27524(2,t7,t6);}

/* k27522 in k27519 in k27508 in do4393 in parse-numerical-for in k26697 in k26694 in k26691 in k26688 in k26263 in k26260 in k26257 in k26254 in k26251 in k25668 in k25665 in k25142 in k25139 in k25136 in k25133 in k25130 in k25127 in k25124 in k25121 in k25118 in k25115 in k25112 in k25109 in k25106 in k25103 in k25100 in k25097 in k25094 in k25091 in k25088 in k25085 in k25082 in k24943 in k24940 in k24937 in k24934 in k24878 in k24875 in k24872 in k24869 in k24866 in k24863 in k24860 in k24857 in k23555 in k23486 in k23293 in k23290 in k23185 in k23134 in k11783 in k10718 in k10715 in k7274 in k7271 in k6978 in k6975 in k6971 in k6680 in k6677 in k6674 in k6671 */
static void C_ccall f_27524(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
t2=((C_word*)((C_word*)t0)[4])[1];
f_27500(t2,((C_word*)t0)[3],((C_word*)((C_word*)t0)[2])[1]);}

/* k27299 in parse-numerical-for in k26697 in k26694 in k26691 in k26688 in k26263 in k26260 in k26257 in k26254 in k26251 in k25668 in k25665 in k25142 in k25139 in k25136 in k25133 in k25130 in k25127 in k25124 in k25121 in k25118 in k25115 in k25112 in k25109 in k25106 in k25103 in k25100 in k25097 in k25094 in k25091 in k25088 in k25085 in k25082 in k24943 in k24940 in k24937 in k24934 in k24878 in k24875 in k24872 in k24869 in k24866 in k24863 in k24860 in k24857 in k23555 in k23486 in k23293 in k23290 in k23185 in k23134 in k11783 in k10718 in k10715 in k7274 in k7271 in k6978 in k6975 in k6971 in k6680 in k6677 in k6674 in k6671 */
static void C_ccall f_27301(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[14],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_27301,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|13,a[1]=(C_word)f_27304,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],a[7]=((C_word*)t0)[7],a[8]=((C_word*)t0)[8],a[9]=((C_word*)t0)[9],a[10]=((C_word*)t0)[10],a[11]=((C_word*)t0)[11],a[12]=((C_word*)t0)[12],a[13]=((C_word*)t0)[13],tmp=(C_word)a,a+=14,tmp);
t3=((C_word*)((C_word*)t0)[3])[1];
if(C_truep(t3)){
t4=t2;
f_27304(t4,C_SCHEME_UNDEFINED);}
else{
t4=C_mutate(((C_word *)((C_word*)t0)[3])+1,lf[579]);
t5=t2;
f_27304(t5,t4);}}

/* k27302 in k27299 in parse-numerical-for in k26697 in k26694 in k26691 in k26688 in k26263 in k26260 in k26257 in k26254 in k26251 in k25668 in k25665 in k25142 in k25139 in k25136 in k25133 in k25130 in k25127 in k25124 in k25121 in k25118 in k25115 in k25112 in k25109 in k25106 in k25103 in k25100 in k25097 in k25094 in k25091 in k25088 in k25085 in k25082 in k24943 in k24940 in k24937 in k24934 in k24878 in k24875 in k24872 in k24869 in k24866 in k24863 in k24860 in k24857 in k23555 in k23486 in k23293 in k23290 in k23185 in k23134 in k11783 in k10718 in k10715 in k7274 in k7271 in k6978 in k6975 in k6971 in k6680 in k6677 in k6674 in k6671 */
static void C_fcall f_27304(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[18],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_27304,NULL,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|11,a[1]=(C_word)f_27307,a[2]=((C_word*)t0)[4],a[3]=((C_word*)t0)[5],a[4]=((C_word*)t0)[6],a[5]=((C_word*)t0)[7],a[6]=((C_word*)t0)[8],a[7]=((C_word*)t0)[9],a[8]=((C_word*)t0)[10],a[9]=((C_word*)t0)[11],a[10]=((C_word*)t0)[12],a[11]=((C_word*)t0)[13],tmp=(C_word)a,a+=12,tmp);
t3=(C_word)C_eqp(((C_word*)((C_word*)t0)[3])[1],lf[575]);
t4=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_27467,a[2]=t2,a[3]=((C_word*)t0)[5],a[4]=((C_word*)t0)[2],a[5]=((C_word*)t0)[13],tmp=(C_word)a,a+=6,tmp);
if(C_truep(t3)){
t5=t4;
f_27467(t5,t3);}
else{
t5=(C_word)C_eqp(((C_word*)((C_word*)t0)[2])[1],lf[578]);
t6=t4;
f_27467(t6,(C_truep(t5)?t5:(C_word)C_eqp(((C_word*)((C_word*)t0)[2])[1],lf[576])));}}

/* k27465 in k27302 in k27299 in parse-numerical-for in k26697 in k26694 in k26691 in k26688 in k26263 in k26260 in k26257 in k26254 in k26251 in k25668 in k25665 in k25142 in k25139 in k25136 in k25133 in k25130 in k25127 in k25124 in k25121 in k25118 in k25115 in k25112 in k25109 in k25106 in k25103 in k25100 in k25097 in k25094 in k25091 in k25088 in k25085 in k25082 in k24943 in k24940 in k24937 in k24934 in k24878 in k24875 in k24872 in k24869 in k24866 in k24863 in k24860 in k24857 in k23555 in k23486 in k23293 in k23290 in k23185 in k23134 in k11783 in k10718 in k10715 in k7274 in k7271 in k6978 in k6975 in k6971 in k6680 in k6677 in k6674 in k6671 */
static void C_fcall f_27467(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word *a;
if(C_truep(t1)){
t2=C_mutate(((C_word *)((C_word*)t0)[5])+1,lf[131]);
t3=(C_word)C_eqp(((C_word*)((C_word*)t0)[4])[1],lf[576]);
if(C_truep(t3)){
t4=C_mutate(((C_word *)((C_word*)t0)[3])+1,lf[264]);
t5=((C_word*)t0)[2];
f_27307(t5,t4);}
else{
t4=C_mutate(((C_word *)((C_word*)t0)[3])+1,lf[409]);
t5=((C_word*)t0)[2];
f_27307(t5,t4);}}
else{
t2=C_mutate(((C_word *)((C_word*)t0)[5])+1,lf[127]);
t3=(C_word)C_eqp(((C_word*)((C_word*)t0)[4])[1],lf[577]);
if(C_truep(t3)){
t4=C_mutate(((C_word *)((C_word*)t0)[3])+1,lf[481]);
t5=((C_word*)t0)[2];
f_27307(t5,t4);}
else{
t4=C_mutate(((C_word *)((C_word*)t0)[3])+1,lf[487]);
t5=((C_word*)t0)[2];
f_27307(t5,t4);}}}

/* k27305 in k27302 in k27299 in parse-numerical-for in k26697 in k26694 in k26691 in k26688 in k26263 in k26260 in k26257 in k26254 in k26251 in k25668 in k25665 in k25142 in k25139 in k25136 in k25133 in k25130 in k25127 in k25124 in k25121 in k25118 in k25115 in k25112 in k25109 in k25106 in k25103 in k25100 in k25097 in k25094 in k25091 in k25088 in k25085 in k25082 in k24943 in k24940 in k24937 in k24934 in k24878 in k24875 in k24872 in k24869 in k24866 in k24863 in k24860 in k24857 in k23555 in k23486 in k23293 in k23290 in k23185 in k23134 in k11783 in k10718 in k10715 in k7274 in k7271 in k6978 in k6975 in k6971 in k6680 in k6677 in k6674 in k6671 */
static void C_fcall f_27307(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word ab[22],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_27307,NULL,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|10,a[1]=(C_word)f_27310,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],a[7]=((C_word*)t0)[8],a[8]=((C_word*)t0)[9],a[9]=((C_word*)t0)[10],a[10]=((C_word*)t0)[11],tmp=(C_word)a,a+=11,tmp);
t3=(C_word)C_i_not(((C_word*)((C_word*)t0)[2])[1]);
t4=(C_truep(t3)?t3:(C_word)C_i_numberp(((C_word*)((C_word*)t0)[2])[1]));
if(C_truep(t4)){
t5=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_27438,a[2]=t2,a[3]=((C_word*)t0)[4],tmp=(C_word)a,a+=4,tmp);
t6=((C_word*)((C_word*)t0)[2])[1];
t7=(C_truep(t6)?t6:C_fix(0));
C_trace("ChickenBridge.scm: 381  make-binding");
f_27043(t5,((C_word*)t0)[10],t7);}
else{
t5=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_27458,a[2]=t2,a[3]=((C_word*)t0)[5],a[4]=((C_word*)t0)[2],a[5]=((C_word*)t0)[10],a[6]=((C_word*)t0)[4],tmp=(C_word)a,a+=7,tmp);
C_trace("ChickenBridge.scm: 381  make-binding");
f_27043(t5,((C_word*)t0)[10],C_SCHEME_FALSE);}}

/* k27456 in k27305 in k27302 in k27299 in parse-numerical-for in k26697 in k26694 in k26691 in k26688 in k26263 in k26260 in k26257 in k26254 in k26251 in k25668 in k25665 in k25142 in k25139 in k25136 in k25133 in k25130 in k25127 in k25124 in k25121 in k25118 in k25115 in k25112 in k25109 in k25106 in k25103 in k25100 in k25097 in k25094 in k25091 in k25088 in k25085 in k25082 in k24943 in k24940 in k24937 in k24934 in k24878 in k24875 in k24872 in k24869 in k24866 in k24863 in k24860 in k24857 in k23555 in k23486 in k23293 in k23290 in k23185 in k23134 in k11783 in k10718 in k10715 in k7274 in k7271 in k6978 in k6975 in k6971 in k6680 in k6677 in k6674 in k6671 */
static void C_ccall f_27458(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word ab[15],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_27458,2,t0,t1);}
t2=(C_word)C_a_i_cons(&a,2,t1,((C_word*)((C_word*)t0)[6])[1]);
t3=C_mutate(((C_word *)((C_word*)t0)[6])+1,t2);
t4=(C_word)C_a_i_list(&a,3,lf[12],((C_word*)t0)[5],((C_word*)((C_word*)t0)[4])[1]);
t5=(C_word)C_a_i_cons(&a,2,t4,((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_27310(t7,((C_word*)((C_word*)t0)[3])[1]);}

/* k27436 in k27305 in k27302 in k27299 in parse-numerical-for in k26697 in k26694 in k26691 in k26688 in k26263 in k26260 in k26257 in k26254 in k26251 in k25668 in k25665 in k25142 in k25139 in k25136 in k25133 in k25130 in k25127 in k25124 in k25121 in k25118 in k25115 in k25112 in k25109 in k25106 in k25103 in k25100 in k25097 in k25094 in k25091 in k25088 in k25085 in k25082 in k24943 in k24940 in k24937 in k24934 in k24878 in k24875 in k24872 in k24869 in k24866 in k24863 in k24860 in k24857 in k23555 in k23486 in k23293 in k23290 in k23185 in k23134 in k11783 in k10718 in k10715 in k7274 in k7271 in k6978 in k6975 in k6971 in k6680 in k6677 in k6674 in k6671 */
static void C_ccall f_27438(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[3],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_27438,2,t0,t1);}
t2=(C_word)C_a_i_cons(&a,2,t1,((C_word*)((C_word*)t0)[3])[1]);
t3=C_mutate(((C_word *)((C_word*)t0)[3])+1,t2);
t4=((C_word*)t0)[2];
f_27310(t4,((C_word*)((C_word*)t0)[3])[1]);}

/* k27308 in k27305 in k27302 in k27299 in parse-numerical-for in k26697 in k26694 in k26691 in k26688 in k26263 in k26260 in k26257 in k26254 in k26251 in k25668 in k25665 in k25142 in k25139 in k25136 in k25133 in k25130 in k25127 in k25124 in k25121 in k25118 in k25115 in k25112 in k25109 in k25106 in k25103 in k25100 in k25097 in k25094 in k25091 in k25088 in k25085 in k25082 in k24943 in k24940 in k24937 in k24934 in k24878 in k24875 in k24872 in k24869 in k24866 in k24863 in k24860 in k24857 in k23555 in k23486 in k23293 in k23290 in k23185 in k23134 in k11783 in k10718 in k10715 in k7274 in k7271 in k6978 in k6975 in k6971 in k6680 in k6677 in k6674 in k6671 */
static void C_fcall f_27310(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[17],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_27310,NULL,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|10,a[1]=(C_word)f_27313,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],a[7]=((C_word*)t0)[7],a[8]=((C_word*)t0)[8],a[9]=((C_word*)t0)[9],a[10]=((C_word*)t0)[10],tmp=(C_word)a,a+=11,tmp);
t3=((C_word*)((C_word*)t0)[8])[1];
if(C_truep(t3)){
if(C_truep((C_word)C_i_numberp(((C_word*)((C_word*)t0)[8])[1]))){
t4=t2;
f_27313(t4,C_SCHEME_UNDEFINED);}
else{
t4=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_27403,a[2]=t2,a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[8],a[5]=((C_word*)t0)[3],tmp=(C_word)a,a+=6,tmp);
C_trace("ChickenBridge.scm: 381  gensym");
t5=C_retrieve(lf[26]);
((C_proc3)C_retrieve_proc(t5))(3,t5,t4,lf[574]);}}
else{
t4=C_set_block_item(((C_word*)t0)[8],0,C_fix(1));
t5=t2;
f_27313(t5,t4);}}

/* k27401 in k27308 in k27305 in k27302 in k27299 in parse-numerical-for in k26697 in k26694 in k26691 in k26688 in k26263 in k26260 in k26257 in k26254 in k26251 in k25668 in k25665 in k25142 in k25139 in k25136 in k25133 in k25130 in k25127 in k25124 in k25121 in k25118 in k25115 in k25112 in k25109 in k25106 in k25103 in k25100 in k25097 in k25094 in k25091 in k25088 in k25085 in k25082 in k24943 in k24940 in k24937 in k24934 in k24878 in k24875 in k24872 in k24869 in k24866 in k24863 in k24860 in k24857 in k23555 in k23486 in k23293 in k23290 in k23185 in k23134 in k11783 in k10718 in k10715 in k7274 in k7271 in k6978 in k6975 in k6971 in k6680 in k6677 in k6674 in k6671 */
static void C_ccall f_27403(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_27403,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_27420,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=t1,a[6]=((C_word*)t0)[5],tmp=(C_word)a,a+=7,tmp);
C_trace("ChickenBridge.scm: 381  make-binding");
f_27043(t2,t1,C_SCHEME_FALSE);}

/* k27418 in k27401 in k27308 in k27305 in k27302 in k27299 in parse-numerical-for in k26697 in k26694 in k26691 in k26688 in k26263 in k26260 in k26257 in k26254 in k26251 in k25668 in k25665 in k25142 in k25139 in k25136 in k25133 in k25130 in k25127 in k25124 in k25121 in k25118 in k25115 in k25112 in k25109 in k25106 in k25103 in k25100 in k25097 in k25094 in k25091 in k25088 in k25085 in k25082 in k24943 in k24940 in k24937 in k24934 in k24878 in k24875 in k24872 in k24869 in k24866 in k24863 in k24860 in k24857 in k23555 in k23486 in k23293 in k23290 in k23185 in k23134 in k11783 in k10718 in k10715 in k7274 in k7271 in k6978 in k6975 in k6971 in k6680 in k6677 in k6674 in k6671 */
static void C_ccall f_27420(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word ab[15],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_27420,2,t0,t1);}
t2=(C_word)C_a_i_cons(&a,2,t1,((C_word*)((C_word*)t0)[6])[1]);
t3=C_mutate(((C_word *)((C_word*)t0)[6])+1,t2);
t4=(C_word)C_a_i_list(&a,3,lf[12],((C_word*)t0)[5],((C_word*)((C_word*)t0)[4])[1]);
t5=(C_word)C_a_i_cons(&a,2,t4,((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=C_mutate(((C_word *)((C_word*)t0)[4])+1,((C_word*)t0)[5]);
t8=((C_word*)t0)[2];
f_27313(t8,t7);}

/* k27311 in k27308 in k27305 in k27302 in k27299 in parse-numerical-for in k26697 in k26694 in k26691 in k26688 in k26263 in k26260 in k26257 in k26254 in k26251 in k25668 in k25665 in k25142 in k25139 in k25136 in k25133 in k25130 in k25127 in k25124 in k25121 in k25118 in k25115 in k25112 in k25109 in k25106 in k25103 in k25100 in k25097 in k25094 in k25091 in k25088 in k25085 in k25082 in k24943 in k24940 in k24937 in k24934 in k24878 in k24875 in k24872 in k24869 in k24866 in k24863 in k24860 in k24857 in k23555 in k23486 in k23293 in k23290 in k23185 in k23134 in k11783 in k10718 in k10715 in k7274 in k7271 in k6978 in k6975 in k6971 in k6680 in k6677 in k6674 in k6671 */
static void C_fcall f_27313(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word ab[34],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_27313,NULL,2,t0,t1);}
t2=(C_word)C_a_i_list(&a,3,((C_word*)((C_word*)t0)[10])[1],((C_word*)t0)[9],((C_word*)((C_word*)t0)[8])[1]);
t3=(C_word)C_a_i_list(&a,3,lf[12],((C_word*)t0)[9],t2);
t4=C_mutate(((C_word *)((C_word*)t0)[8])+1,t3);
t5=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_27320,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[8],a[6]=((C_word*)t0)[6],a[7]=((C_word*)t0)[7],tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)((C_word*)t0)[5])[1])){
t6=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_27352,a[2]=((C_word*)t0)[4],a[3]=((C_word*)t0)[3],a[4]=t5,a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[9],a[7]=((C_word*)t0)[2],tmp=(C_word)a,a+=8,tmp);
C_trace("ChickenBridge.scm: 381  gensym");
t7=C_retrieve(lf[26]);
((C_proc3)C_retrieve_proc(t7))(3,t7,t6,lf[573]);}
else{
t6=t5;
f_27320(t6,C_SCHEME_UNDEFINED);}}

/* k27350 in k27311 in k27308 in k27305 in k27302 in k27299 in parse-numerical-for in k26697 in k26694 in k26691 in k26688 in k26263 in k26260 in k26257 in k26254 in k26251 in k25668 in k25665 in k25142 in k25139 in k25136 in k25133 in k25130 in k25127 in k25124 in k25121 in k25118 in k25115 in k25112 in k25109 in k25106 in k25103 in k25100 in k25097 in k25094 in k25091 in k25088 in k25085 in k25082 in k24943 in k24940 in k24937 in k24934 in k24878 in k24875 in k24872 in k24869 in k24866 in k24863 in k24860 in k24857 in k23555 in k23486 in k23293 in k23290 in k23185 in k23134 in k11783 in k10718 in k10715 in k7274 in k7271 in k6978 in k6975 in k6971 in k6680 in k6677 in k6674 in k6671 */
static void C_ccall f_27352(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[18],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_27352,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_27355,a[2]=((C_word*)t0)[4],a[3]=((C_word*)t0)[5],a[4]=t1,a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
if(C_truep((C_word)C_i_numberp(((C_word*)((C_word*)t0)[5])[1]))){
t3=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_27370,a[2]=t2,a[3]=((C_word*)t0)[3],tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 381  make-binding");
f_27043(t3,t1,((C_word*)((C_word*)t0)[5])[1]);}
else{
t3=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_27386,a[2]=t2,a[3]=((C_word*)t0)[2],a[4]=((C_word*)t0)[5],a[5]=t1,a[6]=((C_word*)t0)[3],tmp=(C_word)a,a+=7,tmp);
C_trace("ChickenBridge.scm: 381  make-binding");
f_27043(t3,t1,C_SCHEME_FALSE);}}

/* k27384 in k27350 in k27311 in k27308 in k27305 in k27302 in k27299 in parse-numerical-for in k26697 in k26694 in k26691 in k26688 in k26263 in k26260 in k26257 in k26254 in k26251 in k25668 in k25665 in k25142 in k25139 in k25136 in k25133 in k25130 in k25127 in k25124 in k25121 in k25118 in k25115 in k25112 in k25109 in k25106 in k25103 in k25100 in k25097 in k25094 in k25091 in k25088 in k25085 in k25082 in k24943 in k24940 in k24937 in k24934 in k24878 in k24875 in k24872 in k24869 in k24866 in k24863 in k24860 in k24857 in k23555 in k23486 in k23293 in k23290 in k23185 in k23134 in k11783 in k10718 in k10715 in k7274 in k7271 in k6978 in k6975 in k6971 in k6680 in k6677 in k6674 in k6671 */
static void C_ccall f_27386(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word ab[15],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_27386,2,t0,t1);}
t2=(C_word)C_a_i_cons(&a,2,t1,((C_word*)((C_word*)t0)[6])[1]);
t3=C_mutate(((C_word *)((C_word*)t0)[6])+1,t2);
t4=(C_word)C_a_i_list(&a,3,lf[12],((C_word*)t0)[5],((C_word*)((C_word*)t0)[4])[1]);
t5=(C_word)C_a_i_cons(&a,2,t4,((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_27355(t7,((C_word*)((C_word*)t0)[3])[1]);}

/* k27368 in k27350 in k27311 in k27308 in k27305 in k27302 in k27299 in parse-numerical-for in k26697 in k26694 in k26691 in k26688 in k26263 in k26260 in k26257 in k26254 in k26251 in k25668 in k25665 in k25142 in k25139 in k25136 in k25133 in k25130 in k25127 in k25124 in k25121 in k25118 in k25115 in k25112 in k25109 in k25106 in k25103 in k25100 in k25097 in k25094 in k25091 in k25088 in k25085 in k25082 in k24943 in k24940 in k24937 in k24934 in k24878 in k24875 in k24872 in k24869 in k24866 in k24863 in k24860 in k24857 in k23555 in k23486 in k23293 in k23290 in k23185 in k23134 in k11783 in k10718 in k10715 in k7274 in k7271 in k6978 in k6975 in k6971 in k6680 in k6677 in k6674 in k6671 */
static void C_ccall f_27370(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[3],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_27370,2,t0,t1);}
t2=(C_word)C_a_i_cons(&a,2,t1,((C_word*)((C_word*)t0)[3])[1]);
t3=C_mutate(((C_word *)((C_word*)t0)[3])+1,t2);
t4=((C_word*)t0)[2];
f_27355(t4,((C_word*)((C_word*)t0)[3])[1]);}

/* k27353 in k27350 in k27311 in k27308 in k27305 in k27302 in k27299 in parse-numerical-for in k26697 in k26694 in k26691 in k26688 in k26263 in k26260 in k26257 in k26254 in k26251 in k25668 in k25665 in k25142 in k25139 in k25136 in k25133 in k25130 in k25127 in k25124 in k25121 in k25118 in k25115 in k25112 in k25109 in k25106 in k25103 in k25100 in k25097 in k25094 in k25091 in k25088 in k25085 in k25082 in k24943 in k24940 in k24937 in k24934 in k24878 in k24875 in k24872 in k24869 in k24866 in k24863 in k24860 in k24857 in k23555 in k23486 in k23293 in k23290 in k23185 in k23134 in k11783 in k10718 in k10715 in k7274 in k7271 in k6978 in k6975 in k6971 in k6680 in k6677 in k6674 in k6671 */
static void C_fcall f_27355(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_27355,NULL,2,t0,t1);}
t2=(C_word)C_a_i_list(&a,3,((C_word*)((C_word*)t0)[6])[1],((C_word*)t0)[5],((C_word*)t0)[4]);
t3=C_mutate(((C_word *)((C_word*)t0)[3])+1,t2);
t4=((C_word*)t0)[2];
f_27320(t4,t3);}

/* k27318 in k27311 in k27308 in k27305 in k27302 in k27299 in parse-numerical-for in k26697 in k26694 in k26691 in k26688 in k26263 in k26260 in k26257 in k26254 in k26251 in k25668 in k25665 in k25142 in k25139 in k25136 in k25133 in k25130 in k25127 in k25124 in k25121 in k25118 in k25115 in k25112 in k25109 in k25106 in k25103 in k25100 in k25097 in k25094 in k25091 in k25088 in k25085 in k25082 in k24943 in k24940 in k24937 in k24934 in k24878 in k24875 in k24872 in k24869 in k24866 in k24863 in k24860 in k24857 in k23555 in k23486 in k23293 in k23290 in k23185 in k23134 in k11783 in k10718 in k10715 in k7274 in k7271 in k6978 in k6975 in k6971 in k6680 in k6677 in k6674 in k6671 */
static void C_fcall f_27320(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[10],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_27320,NULL,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_27327,a[2]=((C_word*)t0)[6],a[3]=((C_word*)t0)[7],tmp=(C_word)a,a+=4,tmp);
t3=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_27331,a[2]=((C_word*)t0)[3],a[3]=t2,a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],tmp=(C_word)a,a+=6,tmp);
C_trace("ChickenBridge.scm: 381  reverse");
t4=*((C_word*)lf[216]+1);
((C_proc3)C_retrieve_proc(t4))(3,t4,t3,((C_word*)((C_word*)t0)[2])[1]);}

/* k27329 in k27318 in k27311 in k27308 in k27305 in k27302 in k27299 in parse-numerical-for in k26697 in k26694 in k26691 in k26688 in k26263 in k26260 in k26257 in k26254 in k26251 in k25668 in k25665 in k25142 in k25139 in k25136 in k25133 in k25130 in k25127 in k25124 in k25121 in k25118 in k25115 in k25112 in k25109 in k25106 in k25103 in k25100 in k25097 in k25094 in k25091 in k25088 in k25085 in k25082 in k24943 in k24940 in k24937 in k24934 in k24878 in k24875 in k24872 in k24869 in k24866 in k24863 in k24860 in k24857 in k23555 in k23486 in k23293 in k23290 in k23185 in k23134 in k11783 in k10718 in k10715 in k7274 in k7271 in k6978 in k6975 in k6971 in k6680 in k6677 in k6674 in k6671 */
static void C_ccall f_27331(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[6],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_27331,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_27335,a[2]=t1,a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],tmp=(C_word)a,a+=6,tmp);
C_trace("ChickenBridge.scm: 381  reverse");
t3=*((C_word*)lf[216]+1);
((C_proc3)C_retrieve_proc(t3))(3,t3,t2,((C_word*)((C_word*)t0)[2])[1]);}

/* k27333 in k27329 in k27318 in k27311 in k27308 in k27305 in k27302 in k27299 in parse-numerical-for in k26697 in k26694 in k26691 in k26688 in k26263 in k26260 in k26257 in k26254 in k26251 in k25668 in k25665 in k25142 in k25139 in k25136 in k25133 in k25130 in k25127 in k25124 in k25121 in k25118 in k25115 in k25112 in k25109 in k25106 in k25103 in k25100 in k25097 in k25094 in k25091 in k25088 in k25085 in k25082 in k24943 in k24940 in k24937 in k24934 in k24878 in k24875 in k24872 in k24869 in k24866 in k24863 in k24860 in k24857 in k23555 in k23486 in k23293 in k23290 in k23185 in k23134 in k11783 in k10718 in k10715 in k7274 in k7271 in k6978 in k6975 in k6971 in k6680 in k6677 in k6674 in k6671 */
static void C_ccall f_27335(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[36],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_27335,2,t0,t1);}
t2=(C_word)C_a_i_list(&a,1,((C_word*)((C_word*)t0)[5])[1]);
t3=((C_word*)((C_word*)t0)[4])[1];
t4=(C_truep(t3)?(C_word)C_a_i_list(&a,1,((C_word*)((C_word*)t0)[4])[1]):C_SCHEME_END_OF_LIST);
C_trace("ChickenBridge.scm: 381  make-loop-clause");
f_26809(((C_word*)t0)[3],(C_word)C_a_i_list(&a,10,lf[542],lf[572],lf[543],((C_word*)t0)[2],lf[545],t1,lf[548],t2,lf[546],t4));}

/* k27325 in k27318 in k27311 in k27308 in k27305 in k27302 in k27299 in parse-numerical-for in k26697 in k26694 in k26691 in k26688 in k26263 in k26260 in k26257 in k26254 in k26251 in k25668 in k25665 in k25142 in k25139 in k25136 in k25133 in k25130 in k25127 in k25124 in k25121 in k25118 in k25115 in k25112 in k25109 in k25106 in k25103 in k25100 in k25097 in k25094 in k25091 in k25088 in k25085 in k25082 in k24943 in k24940 in k24937 in k24934 in k24878 in k24875 in k24872 in k24869 in k24866 in k24863 in k24860 in k24857 in k23555 in k23486 in k23293 in k23290 in k23185 in k23134 in k11783 in k10718 in k10715 in k7274 in k7271 in k6978 in k6975 in k6971 in k6680 in k6677 in k6674 in k6671 */
static void C_ccall f_27327(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 381  values");
C_values(4,0,((C_word*)t0)[3],t1,((C_word*)((C_word*)t0)[2])[1]);}

/* parse-for in k26697 in k26694 in k26691 in k26688 in k26263 in k26260 in k26257 in k26254 in k26251 in k25668 in k25665 in k25142 in k25139 in k25136 in k25133 in k25130 in k25127 in k25124 in k25121 in k25118 in k25115 in k25112 in k25109 in k25106 in k25103 in k25100 in k25097 in k25094 in k25091 in k25088 in k25085 in k25082 in k24943 in k24940 in k24937 in k24934 in k24878 in k24875 in k24872 in k24869 in k24866 in k24863 in k24860 in k24857 in k23555 in k23486 in k23293 in k23290 in k23185 in k23134 in k11783 in k10718 in k10715 in k7274 in k7271 in k6978 in k6975 in k6971 in k6680 in k6677 in k6674 in k6671 */
static void C_ccall f_27209(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4){
C_word tmp;
C_word t5;
C_word t6;
C_word t7;
C_word ab[6],*a=ab;
if(c!=5) C_bad_argc_2(c,5,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr5,(void*)f_27209,5,t0,t1,t2,t3,t4);}
t5=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_27213,a[2]=t3,a[3]=t4,a[4]=t1,a[5]=t2,tmp=(C_word)a,a+=6,tmp);
t6=(C_word)C_i_car(t2);
C_trace("ChickenBridge.scm: 381  loop-op?");
f_27031(t5,t6,t4);}

/* k27211 in parse-for in k26697 in k26694 in k26691 in k26688 in k26263 in k26260 in k26257 in k26254 in k26251 in k25668 in k25665 in k25142 in k25139 in k25136 in k25133 in k25130 in k25127 in k25124 in k25121 in k25118 in k25115 in k25112 in k25109 in k25106 in k25103 in k25100 in k25097 in k25094 in k25091 in k25088 in k25085 in k25082 in k24943 in k24940 in k24937 in k24934 in k24878 in k24875 in k24872 in k24869 in k24866 in k24863 in k24860 in k24857 in k23555 in k23486 in k23293 in k23290 in k23185 in k23134 in k11783 in k10718 in k10715 in k7274 in k7271 in k6978 in k6975 in k6971 in k6680 in k6677 in k6674 in k6671 */
static void C_ccall f_27213(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[10],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_27213,2,t0,t1);}
t2=(C_word)C_i_cdr(((C_word*)t0)[5]);
if(C_truep((C_word)C_i_nullp(t2))){
C_trace("ChickenBridge.scm: 381  loop-error");
f_27049(((C_word*)t0)[4],((C_word*)t0)[3],((C_word*)t0)[5],(C_word)C_a_i_list(&a,1,lf[564]));}
else{
t3=(C_word)C_i_cadr(((C_word*)t0)[5]);
t4=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_27231,a[2]=((C_word*)t0)[2],a[3]=t1,a[4]=((C_word*)t0)[3],a[5]=((C_word*)t0)[4],a[6]=((C_word*)t0)[5],tmp=(C_word)a,a+=7,tmp);
C_trace("ChickenBridge.scm: 381  loop-variable?");
f_27037(t4,t3);}}

/* k27229 in k27211 in parse-for in k26697 in k26694 in k26691 in k26688 in k26263 in k26260 in k26257 in k26254 in k26251 in k25668 in k25665 in k25142 in k25139 in k25136 in k25133 in k25130 in k25127 in k25124 in k25121 in k25118 in k25115 in k25112 in k25109 in k25106 in k25103 in k25100 in k25097 in k25094 in k25091 in k25088 in k25085 in k25082 in k24943 in k24940 in k24937 in k24934 in k24878 in k24875 in k24872 in k24869 in k24866 in k24863 in k24860 in k24857 in k23555 in k23486 in k23293 in k23290 in k23185 in k23134 in k11783 in k10718 in k10715 in k7274 in k7271 in k6978 in k6975 in k6971 in k6680 in k6677 in k6674 in k6671 */
static void C_ccall f_27231(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word ab[24],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_27231,2,t0,t1);}
if(C_truep(t1)){
t2=(C_word)C_i_cddr(((C_word*)t0)[6]);
if(C_truep((C_word)C_i_nullp(t2))){
C_trace("ChickenBridge.scm: 381  loop-error");
f_27049(((C_word*)t0)[5],((C_word*)t0)[4],((C_word*)t0)[6],(C_word)C_a_i_list(&a,1,lf[565]));}
else{
t3=(C_word)C_i_caddr(((C_word*)t0)[6]);
t4=(C_word)C_i_cdddr(((C_word*)t0)[3]);
t5=(C_word)C_i_assoc(t3,t4);
if(C_truep(t5)){
t6=(C_word)C_i_cadr(t5);
t7=t6;
((C_proc5)C_retrieve_proc(t7))(5,t7,((C_word*)t0)[5],((C_word*)t0)[6],((C_word*)t0)[2],((C_word*)t0)[4]);}
else{
t6=(C_word)C_i_caddr(((C_word*)t0)[6]);
C_trace("ChickenBridge.scm: 381  loop-error");
f_27049(((C_word*)t0)[5],((C_word*)t0)[4],((C_word*)t0)[6],(C_word)C_a_i_list(&a,4,lf[566],t6,lf[567],lf[568]));}}}
else{
t2=(C_word)C_i_cadr(((C_word*)t0)[6]);
C_trace("ChickenBridge.scm: 381  loop-error");
f_27049(((C_word*)t0)[5],((C_word*)t0)[4],((C_word*)t0)[6],(C_word)C_a_i_list(&a,3,lf[569],t2,lf[570]));}}

/* loop-error in k26697 in k26694 in k26691 in k26688 in k26263 in k26260 in k26257 in k26254 in k26251 in k25668 in k25665 in k25142 in k25139 in k25136 in k25133 in k25130 in k25127 in k25124 in k25121 in k25118 in k25115 in k25112 in k25109 in k25106 in k25103 in k25100 in k25097 in k25094 in k25091 in k25088 in k25085 in k25082 in k24943 in k24940 in k24937 in k24934 in k24878 in k24875 in k24872 in k24869 in k24866 in k24863 in k24860 in k24857 in k23555 in k23486 in k23293 in k23290 in k23185 in k23134 in k11783 in k10718 in k10715 in k7274 in k7271 in k6978 in k6975 in k6971 in k6680 in k6677 in k6674 in k6671 */
static void C_fcall f_27049(C_word t1,C_word t2,C_word t3,C_word t4){
C_word tmp;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word ab[14],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_27049,NULL,4,t1,t2,t3,t4);}
t5=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_27105,a[2]=t4,a[3]=t1,tmp=(C_word)a,a+=4,tmp);
t6=t3;
t7=(*a=C_VECTOR_TYPE|1,a[1]=t6,tmp=(C_word)a,a+=2,tmp);
t8=C_SCHEME_UNDEFINED;
t9=(*a=C_VECTOR_TYPE|1,a[1]=t8,tmp=(C_word)a,a+=2,tmp);
t10=C_set_block_item(t9,0,(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_27057,a[2]=t2,a[3]=t9,a[4]=t7,a[5]=((C_word)li432),tmp=(C_word)a,a+=6,tmp));
t11=((C_word*)t9)[1];
f_27057(t11,t5,((C_word*)t7)[1],C_SCHEME_END_OF_LIST);}

/* do4344 in loop-error in k26697 in k26694 in k26691 in k26688 in k26263 in k26260 in k26257 in k26254 in k26251 in k25668 in k25665 in k25142 in k25139 in k25136 in k25133 in k25130 in k25127 in k25124 in k25121 in k25118 in k25115 in k25112 in k25109 in k25106 in k25103 in k25100 in k25097 in k25094 in k25091 in k25088 in k25085 in k25082 in k24943 in k24940 in k24937 in k24934 in k24878 in k24875 in k24872 in k24869 in k24866 in k24863 in k24860 in k24857 in k23555 in k23486 in k23293 in k23290 in k23185 in k23134 in k11783 in k10718 in k10715 in k7274 in k7271 in k6978 in k6975 in k6971 in k6680 in k6677 in k6674 in k6671 */
static void C_fcall f_27057(C_word t0,C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_27057,NULL,4,t0,t1,t2,t3);}
t4=(*a=C_VECTOR_TYPE|1,a[1]=t3,tmp=(C_word)a,a+=2,tmp);
t5=(C_word)C_i_nullp(((C_word*)((C_word*)t0)[4])[1]);
t6=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_27067,a[2]=t2,a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=t4,a[6]=t1,tmp=(C_word)a,a+=7,tmp);
if(C_truep(t5)){
t7=t6;
f_27067(2,t7,t5);}
else{
t7=(C_word)C_eqp(t2,((C_word*)((C_word*)t0)[4])[1]);
if(C_truep(t7)){
t8=t6;
f_27067(2,t8,C_SCHEME_FALSE);}
else{
t8=(C_word)C_i_car(((C_word*)((C_word*)t0)[4])[1]);
C_trace("ChickenBridge.scm: 381  loop-op?");
f_27031(t6,t8,((C_word*)t0)[2]);}}}

/* k27065 in do4344 in loop-error in k26697 in k26694 in k26691 in k26688 in k26263 in k26260 in k26257 in k26254 in k26251 in k25668 in k25665 in k25142 in k25139 in k25136 in k25133 in k25130 in k25127 in k25124 in k25121 in k25118 in k25115 in k25112 in k25109 in k25106 in k25103 in k25100 in k25097 in k25094 in k25091 in k25088 in k25085 in k25082 in k24943 in k24940 in k24937 in k24934 in k24878 in k24875 in k24872 in k24869 in k24866 in k24863 in k24860 in k24857 in k23555 in k23486 in k23293 in k23290 in k23185 in k23134 in k11783 in k10718 in k10715 in k7274 in k7271 in k6978 in k6975 in k6971 in k6680 in k6677 in k6674 in k6671 */
static void C_ccall f_27067(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word ab[3],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_27067,2,t0,t1);}
if(C_truep(t1)){
C_trace("ChickenBridge.scm: 381  reverse");
t2=*((C_word*)lf[216]+1);
((C_proc3)C_retrieve_proc(t2))(3,t2,((C_word*)t0)[6],((C_word*)((C_word*)t0)[5])[1]);}
else{
t2=(C_word)C_i_car(((C_word*)((C_word*)t0)[4])[1]);
t3=(C_word)C_a_i_cons(&a,2,t2,((C_word*)((C_word*)t0)[5])[1]);
t4=C_mutate(((C_word *)((C_word*)t0)[5])+1,t3);
t5=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[4])+1,t5);
t7=((C_word*)((C_word*)t0)[3])[1];
f_27057(t7,((C_word*)t0)[6],((C_word*)t0)[2],((C_word*)((C_word*)t0)[5])[1]);}}

/* k27103 in loop-error in k26697 in k26694 in k26691 in k26688 in k26263 in k26260 in k26257 in k26254 in k26251 in k25668 in k25665 in k25142 in k25139 in k25136 in k25133 in k25130 in k25127 in k25124 in k25121 in k25118 in k25115 in k25112 in k25109 in k25106 in k25103 in k25100 in k25097 in k25094 in k25091 in k25088 in k25085 in k25082 in k24943 in k24940 in k24937 in k24934 in k24878 in k24875 in k24872 in k24869 in k24866 in k24863 in k24860 in k24857 in k23555 in k23486 in k23293 in k23290 in k23185 in k23134 in k11783 in k10718 in k10715 in k7274 in k7271 in k6978 in k6975 in k6971 in k6680 in k6677 in k6674 in k6671 */
static void C_ccall f_27105(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[5],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_27105,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_27108,a[2]=((C_word*)t0)[2],a[3]=t1,a[4]=((C_word*)t0)[3],tmp=(C_word)a,a+=5,tmp);
C_trace("ChickenBridge.scm: 381  newline");
t3=*((C_word*)lf[398]+1);
((C_proc2)C_retrieve_proc(t3))(2,t3,t2);}

/* k27106 in k27103 in loop-error in k26697 in k26694 in k26691 in k26688 in k26263 in k26260 in k26257 in k26254 in k26251 in k25668 in k25665 in k25142 in k25139 in k25136 in k25133 in k25130 in k25127 in k25124 in k25121 in k25118 in k25115 in k25112 in k25109 in k25106 in k25103 in k25100 in k25097 in k25094 in k25091 in k25088 in k25085 in k25082 in k24943 in k24940 in k24937 in k24934 in k24878 in k24875 in k24872 in k24869 in k24866 in k24863 in k24860 in k24857 in k23555 in k23486 in k23293 in k23290 in k23185 in k23134 in k11783 in k10718 in k10715 in k7274 in k7271 in k6978 in k6975 in k6971 in k6680 in k6677 in k6674 in k6671 */
static void C_ccall f_27108(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[5],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_27108,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_27111,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],tmp=(C_word)a,a+=5,tmp);
C_trace("ChickenBridge.scm: 381  display");
t3=*((C_word*)lf[399]+1);
((C_proc3)C_retrieve_proc(t3))(3,t3,t2,lf[562]);}

/* k27109 in k27106 in k27103 in loop-error in k26697 in k26694 in k26691 in k26688 in k26263 in k26260 in k26257 in k26254 in k26251 in k25668 in k25665 in k25142 in k25139 in k25136 in k25133 in k25130 in k25127 in k25124 in k25121 in k25118 in k25115 in k25112 in k25109 in k25106 in k25103 in k25100 in k25097 in k25094 in k25091 in k25088 in k25085 in k25082 in k24943 in k24940 in k24937 in k24934 in k24878 in k24875 in k24872 in k24869 in k24866 in k24863 in k24860 in k24857 in k23555 in k23486 in k23293 in k23290 in k23185 in k23134 in k11783 in k10718 in k10715 in k7274 in k7271 in k6978 in k6975 in k6971 in k6680 in k6677 in k6674 in k6671 */
static void C_ccall f_27111(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[10],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_27111,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_27114,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],tmp=(C_word)a,a+=4,tmp);
t3=C_SCHEME_UNDEFINED;
t4=(*a=C_VECTOR_TYPE|1,a[1]=t3,tmp=(C_word)a,a+=2,tmp);
t5=C_set_block_item(t4,0,(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_27186,a[2]=t4,a[3]=((C_word)li431),tmp=(C_word)a,a+=4,tmp));
t6=((C_word*)t4)[1];
f_27186(t6,t2,((C_word*)t0)[2]);}

/* do4354 in k27109 in k27106 in k27103 in loop-error in k26697 in k26694 in k26691 in k26688 in k26263 in k26260 in k26257 in k26254 in k26251 in k25668 in k25665 in k25142 in k25139 in k25136 in k25133 in k25130 in k25127 in k25124 in k25121 in k25118 in k25115 in k25112 in k25109 in k25106 in k25103 in k25100 in k25097 in k25094 in k25091 in k25088 in k25085 in k25082 in k24943 in k24940 in k24937 in k24934 in k24878 in k24875 in k24872 in k24869 in k24866 in k24863 in k24860 in k24857 in k23555 in k23486 in k23293 in k23290 in k23185 in k23134 in k11783 in k10718 in k10715 in k7274 in k7271 in k6978 in k6975 in k6971 in k6680 in k6677 in k6674 in k6671 */
static void C_fcall f_27186(C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word t5;
C_word ab[5],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_27186,NULL,3,t0,t1,t2);}
if(C_truep((C_word)C_i_nullp(t2))){
t3=t1;
((C_proc2)(void*)(*((C_word*)t3+1)))(2,t3,C_SCHEME_FALSE);}
else{
t3=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_27196,a[2]=t1,a[3]=((C_word*)t0)[2],a[4]=t2,tmp=(C_word)a,a+=5,tmp);
t4=(C_word)C_i_car(t2);
C_trace("ChickenBridge.scm: 381  display");
t5=*((C_word*)lf[399]+1);
((C_proc3)C_retrieve_proc(t5))(3,t5,t3,t4);}}

/* k27194 in do4354 in k27109 in k27106 in k27103 in loop-error in k26697 in k26694 in k26691 in k26688 in k26263 in k26260 in k26257 in k26254 in k26251 in k25668 in k25665 in k25142 in k25139 in k25136 in k25133 in k25130 in k25127 in k25124 in k25121 in k25118 in k25115 in k25112 in k25109 in k25106 in k25103 in k25100 in k25097 in k25094 in k25091 in k25088 in k25085 in k25082 in k24943 in k24940 in k24937 in k24934 in k24878 in k24875 in k24872 in k24869 in k24866 in k24863 in k24860 in k24857 in k23555 in k23486 in k23293 in k23290 in k23185 in k23134 in k11783 in k10718 in k10715 in k7274 in k7271 in k6978 in k6975 in k6971 in k6680 in k6677 in k6674 in k6671 */
static void C_ccall f_27196(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word *a;
t2=(C_word)C_i_cdr(((C_word*)t0)[4]);
t3=((C_word*)((C_word*)t0)[3])[1];
f_27186(t3,((C_word*)t0)[2],t2);}

/* k27112 in k27109 in k27106 in k27103 in loop-error in k26697 in k26694 in k26691 in k26688 in k26263 in k26260 in k26257 in k26254 in k26251 in k25668 in k25665 in k25142 in k25139 in k25136 in k25133 in k25130 in k25127 in k25124 in k25121 in k25118 in k25115 in k25112 in k25109 in k25106 in k25103 in k25100 in k25097 in k25094 in k25091 in k25088 in k25085 in k25082 in k24943 in k24940 in k24937 in k24934 in k24878 in k24875 in k24872 in k24869 in k24866 in k24863 in k24860 in k24857 in k23555 in k23486 in k23293 in k23290 in k23185 in k23134 in k11783 in k10718 in k10715 in k7274 in k7271 in k6978 in k6975 in k6971 in k6680 in k6677 in k6674 in k6671 */
static void C_ccall f_27114(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[4],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_27114,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_27117,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 381  newline");
t3=*((C_word*)lf[398]+1);
((C_proc2)C_retrieve_proc(t3))(2,t3,t2);}

/* k27115 in k27112 in k27109 in k27106 in k27103 in loop-error in k26697 in k26694 in k26691 in k26688 in k26263 in k26260 in k26257 in k26254 in k26251 in k25668 in k25665 in k25142 in k25139 in k25136 in k25133 in k25130 in k25127 in k25124 in k25121 in k25118 in k25115 in k25112 in k25109 in k25106 in k25103 in k25100 in k25097 in k25094 in k25091 in k25088 in k25085 in k25082 in k24943 in k24940 in k24937 in k24934 in k24878 in k24875 in k24872 in k24869 in k24866 in k24863 in k24860 in k24857 in k23555 in k23486 in k23293 in k23290 in k23185 in k23134 in k11783 in k10718 in k10715 in k7274 in k7271 in k6978 in k6975 in k6971 in k6680 in k6677 in k6674 in k6671 */
static void C_ccall f_27117(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[4],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_27117,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_27120,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 381  display");
t3=*((C_word*)lf[399]+1);
((C_proc3)C_retrieve_proc(t3))(3,t3,t2,lf[561]);}

/* k27118 in k27115 in k27112 in k27109 in k27106 in k27103 in loop-error in k26697 in k26694 in k26691 in k26688 in k26263 in k26260 in k26257 in k26254 in k26251 in k25668 in k25665 in k25142 in k25139 in k25136 in k25133 in k25130 in k25127 in k25124 in k25121 in k25118 in k25115 in k25112 in k25109 in k25106 in k25103 in k25100 in k25097 in k25094 in k25091 in k25088 in k25085 in k25082 in k24943 in k24940 in k24937 in k24934 in k24878 in k24875 in k24872 in k24869 in k24866 in k24863 in k24860 in k24857 in k23555 in k23486 in k23293 in k23290 in k23185 in k23134 in k11783 in k10718 in k10715 in k7274 in k7271 in k6978 in k6975 in k6971 in k6680 in k6677 in k6674 in k6671 */
static void C_ccall f_27120(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[10],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_27120,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_27123,a[2]=((C_word*)t0)[3],tmp=(C_word)a,a+=3,tmp);
if(C_truep((C_word)C_i_nullp(((C_word*)t0)[2]))){
C_trace("ChickenBridge.scm: 381  display");
t3=*((C_word*)lf[399]+1);
((C_proc3)C_retrieve_proc(t3))(3,t3,t2,lf[557]);}
else{
t3=C_SCHEME_UNDEFINED;
t4=(*a=C_VECTOR_TYPE|1,a[1]=t3,tmp=(C_word)a,a+=2,tmp);
t5=C_set_block_item(t4,0,(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_27140,a[2]=((C_word*)t0)[2],a[3]=t4,a[4]=((C_word)li430),tmp=(C_word)a,a+=5,tmp));
t6=((C_word*)t4)[1];
f_27140(t6,t2,((C_word*)t0)[2]);}}

/* do4359 in k27118 in k27115 in k27112 in k27109 in k27106 in k27103 in loop-error in k26697 in k26694 in k26691 in k26688 in k26263 in k26260 in k26257 in k26254 in k26251 in k25668 in k25665 in k25142 in k25139 in k25136 in k25133 in k25130 in k25127 in k25124 in k25121 in k25118 in k25115 in k25112 in k25109 in k25106 in k25103 in k25100 in k25097 in k25094 in k25091 in k25088 in k25085 in k25082 in k24943 in k24940 in k24937 in k24934 in k24878 in k24875 in k24872 in k24869 in k24866 in k24863 in k24860 in k24857 in k23555 in k23486 in k23293 in k23290 in k23185 in k23134 in k11783 in k10718 in k10715 in k7274 in k7271 in k6978 in k6975 in k6971 in k6680 in k6677 in k6674 in k6671 */
static void C_fcall f_27140(C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word t5;
C_word ab[5],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_27140,NULL,3,t0,t1,t2);}
if(C_truep((C_word)C_i_nullp(t2))){
t3=t1;
((C_proc2)(void*)(*((C_word*)t3+1)))(2,t3,C_SCHEME_FALSE);}
else{
t3=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_27150,a[2]=t1,a[3]=((C_word*)t0)[3],a[4]=t2,tmp=(C_word)a,a+=5,tmp);
t4=(C_word)C_eqp(t2,((C_word*)t0)[2]);
if(C_truep(t4)){
C_trace("ChickenBridge.scm: 381  display");
t5=*((C_word*)lf[399]+1);
((C_proc3)C_retrieve_proc(t5))(3,t5,t3,lf[560]);}
else{
t5=t3;
f_27150(2,t5,C_SCHEME_UNDEFINED);}}}

/* k27148 in do4359 in k27118 in k27115 in k27112 in k27109 in k27106 in k27103 in loop-error in k26697 in k26694 in k26691 in k26688 in k26263 in k26260 in k26257 in k26254 in k26251 in k25668 in k25665 in k25142 in k25139 in k25136 in k25133 in k25130 in k25127 in k25124 in k25121 in k25118 in k25115 in k25112 in k25109 in k25106 in k25103 in k25100 in k25097 in k25094 in k25091 in k25088 in k25085 in k25082 in k24943 in k24940 in k24937 in k24934 in k24878 in k24875 in k24872 in k24869 in k24866 in k24863 in k24860 in k24857 in k23555 in k23486 in k23293 in k23290 in k23185 in k23134 in k11783 in k10718 in k10715 in k7274 in k7271 in k6978 in k6975 in k6971 in k6680 in k6677 in k6674 in k6671 */
static void C_ccall f_27150(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[5],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_27150,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_27153,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],tmp=(C_word)a,a+=5,tmp);
t3=(C_word)C_i_car(((C_word*)t0)[4]);
C_trace("ChickenBridge.scm: 381  display");
t4=*((C_word*)lf[399]+1);
((C_proc3)C_retrieve_proc(t4))(3,t4,t2,t3);}

/* k27151 in k27148 in do4359 in k27118 in k27115 in k27112 in k27109 in k27106 in k27103 in loop-error in k26697 in k26694 in k26691 in k26688 in k26263 in k26260 in k26257 in k26254 in k26251 in k25668 in k25665 in k25142 in k25139 in k25136 in k25133 in k25130 in k25127 in k25124 in k25121 in k25118 in k25115 in k25112 in k25109 in k25106 in k25103 in k25100 in k25097 in k25094 in k25091 in k25088 in k25085 in k25082 in k24943 in k24940 in k24937 in k24934 in k24878 in k24875 in k24872 in k24869 in k24866 in k24863 in k24860 in k24857 in k23555 in k23486 in k23293 in k23290 in k23185 in k23134 in k11783 in k10718 in k10715 in k7274 in k7271 in k6978 in k6975 in k6971 in k6680 in k6677 in k6674 in k6671 */
static void C_ccall f_27153(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[5],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_27153,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_27156,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],tmp=(C_word)a,a+=5,tmp);
t3=(C_word)C_i_cdr(((C_word*)t0)[4]);
t4=(C_word)C_i_nullp(t3);
t5=(C_truep(t4)?lf[558]:lf[559]);
C_trace("ChickenBridge.scm: 381  display");
t6=*((C_word*)lf[399]+1);
((C_proc3)C_retrieve_proc(t6))(3,t6,t2,t5);}

/* k27154 in k27151 in k27148 in do4359 in k27118 in k27115 in k27112 in k27109 in k27106 in k27103 in loop-error in k26697 in k26694 in k26691 in k26688 in k26263 in k26260 in k26257 in k26254 in k26251 in k25668 in k25665 in k25142 in k25139 in k25136 in k25133 in k25130 in k25127 in k25124 in k25121 in k25118 in k25115 in k25112 in k25109 in k25106 in k25103 in k25100 in k25097 in k25094 in k25091 in k25088 in k25085 in k25082 in k24943 in k24940 in k24937 in k24934 in k24878 in k24875 in k24872 in k24869 in k24866 in k24863 in k24860 in k24857 in k23555 in k23486 in k23293 in k23290 in k23185 in k23134 in k11783 in k10718 in k10715 in k7274 in k7271 in k6978 in k6975 in k6971 in k6680 in k6677 in k6674 in k6671 */
static void C_ccall f_27156(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word *a;
t2=(C_word)C_i_cdr(((C_word*)t0)[4]);
t3=((C_word*)((C_word*)t0)[3])[1];
f_27140(t3,((C_word*)t0)[2],t2);}

/* k27121 in k27118 in k27115 in k27112 in k27109 in k27106 in k27103 in loop-error in k26697 in k26694 in k26691 in k26688 in k26263 in k26260 in k26257 in k26254 in k26251 in k25668 in k25665 in k25142 in k25139 in k25136 in k25133 in k25130 in k25127 in k25124 in k25121 in k25118 in k25115 in k25112 in k25109 in k25106 in k25103 in k25100 in k25097 in k25094 in k25091 in k25088 in k25085 in k25082 in k24943 in k24940 in k24937 in k24934 in k24878 in k24875 in k24872 in k24869 in k24866 in k24863 in k24860 in k24857 in k23555 in k23486 in k23293 in k23290 in k23185 in k23134 in k11783 in k10718 in k10715 in k7274 in k7271 in k6978 in k6975 in k6971 in k6680 in k6677 in k6674 in k6671 */
static void C_ccall f_27123(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[3],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_27123,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_27126,a[2]=((C_word*)t0)[2],tmp=(C_word)a,a+=3,tmp);
C_trace("ChickenBridge.scm: 381  newline");
t3=*((C_word*)lf[398]+1);
((C_proc2)C_retrieve_proc(t3))(2,t3,t2);}

/* k27124 in k27121 in k27118 in k27115 in k27112 in k27109 in k27106 in k27103 in loop-error in k26697 in k26694 in k26691 in k26688 in k26263 in k26260 in k26257 in k26254 in k26251 in k25668 in k25665 in k25142 in k25139 in k25136 in k25133 in k25130 in k25127 in k25124 in k25121 in k25118 in k25115 in k25112 in k25109 in k25106 in k25103 in k25100 in k25097 in k25094 in k25091 in k25088 in k25085 in k25082 in k24943 in k24940 in k24937 in k24934 in k24878 in k24875 in k24872 in k24869 in k24866 in k24863 in k24860 in k24857 in k23555 in k23486 in k23293 in k23290 in k23185 in k23134 in k11783 in k10718 in k10715 in k7274 in k7271 in k6978 in k6975 in k6971 in k6680 in k6677 in k6674 in k6671 */
static void C_ccall f_27126(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 381  error");
t2=*((C_word*)lf[4]+1);
((C_proc3)C_retrieve_proc(t2))(3,t2,((C_word*)t0)[2],lf[556]);}

/* make-binding in k26697 in k26694 in k26691 in k26688 in k26263 in k26260 in k26257 in k26254 in k26251 in k25668 in k25665 in k25142 in k25139 in k25136 in k25133 in k25130 in k25127 in k25124 in k25121 in k25118 in k25115 in k25112 in k25109 in k25106 in k25103 in k25100 in k25097 in k25094 in k25091 in k25088 in k25085 in k25082 in k24943 in k24940 in k24937 in k24934 in k24878 in k24875 in k24872 in k24869 in k24866 in k24863 in k24860 in k24857 in k23555 in k23486 in k23293 in k23290 in k23185 in k23134 in k11783 in k10718 in k10715 in k7274 in k7271 in k6978 in k6975 in k6971 in k6680 in k6677 in k6674 in k6671 */
static void C_fcall f_27043(C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word ab[6],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_27043,NULL,3,t1,t2,t3);}
t4=t1;
((C_proc2)(void*)(*((C_word*)t4+1)))(2,t4,(C_word)C_a_i_list(&a,2,t2,t3));}

/* loop-variable? in k26697 in k26694 in k26691 in k26688 in k26263 in k26260 in k26257 in k26254 in k26251 in k25668 in k25665 in k25142 in k25139 in k25136 in k25133 in k25130 in k25127 in k25124 in k25121 in k25118 in k25115 in k25112 in k25109 in k25106 in k25103 in k25100 in k25097 in k25094 in k25091 in k25088 in k25085 in k25082 in k24943 in k24940 in k24937 in k24934 in k24878 in k24875 in k24872 in k24869 in k24866 in k24863 in k24860 in k24857 in k23555 in k23486 in k23293 in k23290 in k23185 in k23134 in k11783 in k10718 in k10715 in k7274 in k7271 in k6978 in k6975 in k6971 in k6680 in k6677 in k6674 in k6671 */
static void C_fcall f_27037(C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word *a;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_27037,NULL,2,t1,t2);}
t3=t1;
((C_proc2)(void*)(*((C_word*)t3+1)))(2,t3,(C_word)C_i_symbolp(t2));}

/* loop-op? in k26697 in k26694 in k26691 in k26688 in k26263 in k26260 in k26257 in k26254 in k26251 in k25668 in k25665 in k25142 in k25139 in k25136 in k25133 in k25130 in k25127 in k25124 in k25121 in k25118 in k25115 in k25112 in k25109 in k25106 in k25103 in k25100 in k25097 in k25094 in k25091 in k25088 in k25085 in k25082 in k24943 in k24940 in k24937 in k24934 in k24878 in k24875 in k24872 in k24869 in k24866 in k24863 in k24860 in k24857 in k23555 in k23486 in k23293 in k23290 in k23185 in k23134 in k11783 in k10718 in k10715 in k7274 in k7271 in k6978 in k6975 in k6971 in k6680 in k6677 in k6674 in k6671 */
static void C_fcall f_27031(C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word *a;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_27031,NULL,3,t1,t2,t3);}
t4=t1;
((C_proc2)(void*)(*((C_word*)t4+1)))(2,t4,(C_word)C_i_assoc(t2,t3));}

/* gather-clauses in k26697 in k26694 in k26691 in k26688 in k26263 in k26260 in k26257 in k26254 in k26251 in k25668 in k25665 in k25142 in k25139 in k25136 in k25133 in k25130 in k25127 in k25124 in k25121 in k25118 in k25115 in k25112 in k25109 in k25106 in k25103 in k25100 in k25097 in k25094 in k25091 in k25088 in k25085 in k25082 in k24943 in k24940 in k24937 in k24934 in k24878 in k24875 in k24872 in k24869 in k24866 in k24863 in k24860 in k24857 in k23555 in k23486 in k23293 in k23290 in k23185 in k23134 in k11783 in k10718 in k10715 in k7274 in k7271 in k6978 in k6975 in k6971 in k6680 in k6677 in k6674 in k6671 */
static void C_fcall f_26960(C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word t6;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_26960,NULL,3,t1,t2,t3);}
t4=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_26962,a[2]=((C_word)li425),tmp=(C_word)a,a+=3,tmp);
t5=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_27001,a[2]=t3,a[3]=t4,a[4]=t2,a[5]=t1,tmp=(C_word)a,a+=6,tmp);
C_trace("ChickenBridge.scm: 381  gather-clause");
f_26962(t5,t3,C_retrieve2(lf[532],"loop-bindings"));}

/* k26999 in gather-clauses in k26697 in k26694 in k26691 in k26688 in k26263 in k26260 in k26257 in k26254 in k26251 in k25668 in k25665 in k25142 in k25139 in k25136 in k25133 in k25130 in k25127 in k25124 in k25121 in k25118 in k25115 in k25112 in k25109 in k25106 in k25103 in k25100 in k25097 in k25094 in k25091 in k25088 in k25085 in k25082 in k24943 in k24940 in k24937 in k24934 in k24878 in k24875 in k24872 in k24869 in k24866 in k24863 in k24860 in k24857 in k23555 in k23486 in k23293 in k23290 in k23185 in k23134 in k11783 in k10718 in k10715 in k7274 in k7271 in k6978 in k6975 in k6971 in k6680 in k6677 in k6674 in k6671 */
static void C_ccall f_27001(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_27001,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_27005,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=t1,a[5]=((C_word*)t0)[4],a[6]=((C_word*)t0)[5],tmp=(C_word)a,a+=7,tmp);
C_trace("ChickenBridge.scm: 381  gather-clause");
f_26962(t2,((C_word*)t0)[2],C_retrieve2(lf[533],"loop-collectors"));}

/* k27003 in k26999 in gather-clauses in k26697 in k26694 in k26691 in k26688 in k26263 in k26260 in k26257 in k26254 in k26251 in k25668 in k25665 in k25142 in k25139 in k25136 in k25133 in k25130 in k25127 in k25124 in k25121 in k25118 in k25115 in k25112 in k25109 in k25106 in k25103 in k25100 in k25097 in k25094 in k25091 in k25088 in k25085 in k25082 in k24943 in k24940 in k24937 in k24934 in k24878 in k24875 in k24872 in k24869 in k24866 in k24863 in k24860 in k24857 in k23555 in k23486 in k23293 in k23290 in k23185 in k23134 in k11783 in k10718 in k10715 in k7274 in k7271 in k6978 in k6975 in k6971 in k6680 in k6677 in k6674 in k6671 */
static void C_ccall f_27005(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[8],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_27005,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_27009,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=t1,a[5]=((C_word*)t0)[4],a[6]=((C_word*)t0)[5],a[7]=((C_word*)t0)[6],tmp=(C_word)a,a+=8,tmp);
C_trace("ChickenBridge.scm: 381  gather-clause");
f_26962(t2,((C_word*)t0)[2],C_retrieve2(lf[534],"loop-initially"));}

/* k27007 in k27003 in k26999 in gather-clauses in k26697 in k26694 in k26691 in k26688 in k26263 in k26260 in k26257 in k26254 in k26251 in k25668 in k25665 in k25142 in k25139 in k25136 in k25133 in k25130 in k25127 in k25124 in k25121 in k25118 in k25115 in k25112 in k25109 in k25106 in k25103 in k25100 in k25097 in k25094 in k25091 in k25088 in k25085 in k25082 in k24943 in k24940 in k24937 in k24934 in k24878 in k24875 in k24872 in k24869 in k24866 in k24863 in k24860 in k24857 in k23555 in k23486 in k23293 in k23290 in k23185 in k23134 in k11783 in k10718 in k10715 in k7274 in k7271 in k6978 in k6975 in k6971 in k6680 in k6677 in k6674 in k6671 */
static void C_ccall f_27009(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_27009,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|8,a[1]=(C_word)f_27013,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=t1,a[5]=((C_word*)t0)[4],a[6]=((C_word*)t0)[5],a[7]=((C_word*)t0)[6],a[8]=((C_word*)t0)[7],tmp=(C_word)a,a+=9,tmp);
C_trace("ChickenBridge.scm: 381  gather-clause");
f_26962(t2,((C_word*)t0)[2],C_retrieve2(lf[535],"loop-end-tests"));}

/* k27011 in k27007 in k27003 in k26999 in gather-clauses in k26697 in k26694 in k26691 in k26688 in k26263 in k26260 in k26257 in k26254 in k26251 in k25668 in k25665 in k25142 in k25139 in k25136 in k25133 in k25130 in k25127 in k25124 in k25121 in k25118 in k25115 in k25112 in k25109 in k25106 in k25103 in k25100 in k25097 in k25094 in k25091 in k25088 in k25085 in k25082 in k24943 in k24940 in k24937 in k24934 in k24878 in k24875 in k24872 in k24869 in k24866 in k24863 in k24860 in k24857 in k23555 in k23486 in k23293 in k23290 in k23185 in k23134 in k11783 in k10718 in k10715 in k7274 in k7271 in k6978 in k6975 in k6971 in k6680 in k6677 in k6674 in k6671 */
static void C_ccall f_27013(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[10],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_27013,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|9,a[1]=(C_word)f_27017,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=t1,a[5]=((C_word*)t0)[4],a[6]=((C_word*)t0)[5],a[7]=((C_word*)t0)[6],a[8]=((C_word*)t0)[7],a[9]=((C_word*)t0)[8],tmp=(C_word)a,a+=10,tmp);
C_trace("ChickenBridge.scm: 381  gather-clause");
f_26962(t2,((C_word*)t0)[2],C_retrieve2(lf[536],"loop-looping"));}

/* k27015 in k27011 in k27007 in k27003 in k26999 in gather-clauses in k26697 in k26694 in k26691 in k26688 in k26263 in k26260 in k26257 in k26254 in k26251 in k25668 in k25665 in k25142 in k25139 in k25136 in k25133 in k25130 in k25127 in k25124 in k25121 in k25118 in k25115 in k25112 in k25109 in k25106 in k25103 in k25100 in k25097 in k25094 in k25091 in k25088 in k25085 in k25082 in k24943 in k24940 in k24937 in k24934 in k24878 in k24875 in k24872 in k24869 in k24866 in k24863 in k24860 in k24857 in k23555 in k23486 in k23293 in k23290 in k23185 in k23134 in k11783 in k10718 in k10715 in k7274 in k7271 in k6978 in k6975 in k6971 in k6680 in k6677 in k6674 in k6671 */
static void C_ccall f_27017(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[11],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_27017,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|10,a[1]=(C_word)f_27021,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=t1,a[5]=((C_word*)t0)[4],a[6]=((C_word*)t0)[5],a[7]=((C_word*)t0)[6],a[8]=((C_word*)t0)[7],a[9]=((C_word*)t0)[8],a[10]=((C_word*)t0)[9],tmp=(C_word)a,a+=11,tmp);
C_trace("ChickenBridge.scm: 381  gather-clause");
f_26962(t2,((C_word*)t0)[2],C_retrieve2(lf[538],"loop-stepping"));}

/* k27019 in k27015 in k27011 in k27007 in k27003 in k26999 in gather-clauses in k26697 in k26694 in k26691 in k26688 in k26263 in k26260 in k26257 in k26254 in k26251 in k25668 in k25665 in k25142 in k25139 in k25136 in k25133 in k25130 in k25127 in k25124 in k25121 in k25118 in k25115 in k25112 in k25109 in k25106 in k25103 in k25100 in k25097 in k25094 in k25091 in k25088 in k25085 in k25082 in k24943 in k24940 in k24937 in k24934 in k24878 in k24875 in k24872 in k24869 in k24866 in k24863 in k24860 in k24857 in k23555 in k23486 in k23293 in k23290 in k23185 in k23134 in k11783 in k10718 in k10715 in k7274 in k7271 in k6978 in k6975 in k6971 in k6680 in k6677 in k6674 in k6671 */
static void C_ccall f_27021(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[12],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_27021,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|11,a[1]=(C_word)f_27025,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=t1,a[5]=((C_word*)t0)[4],a[6]=((C_word*)t0)[5],a[7]=((C_word*)t0)[6],a[8]=((C_word*)t0)[7],a[9]=((C_word*)t0)[8],a[10]=((C_word*)t0)[9],a[11]=((C_word*)t0)[10],tmp=(C_word)a,a+=12,tmp);
C_trace("ChickenBridge.scm: 381  gather-clause");
f_26962(t2,((C_word*)t0)[2],C_retrieve2(lf[539],"loop-finally"));}

/* k27023 in k27019 in k27015 in k27011 in k27007 in k27003 in k26999 in gather-clauses in k26697 in k26694 in k26691 in k26688 in k26263 in k26260 in k26257 in k26254 in k26251 in k25668 in k25665 in k25142 in k25139 in k25136 in k25133 in k25130 in k25127 in k25124 in k25121 in k25118 in k25115 in k25112 in k25109 in k25106 in k25103 in k25100 in k25097 in k25094 in k25091 in k25088 in k25085 in k25082 in k24943 in k24940 in k24937 in k24934 in k24878 in k24875 in k24872 in k24869 in k24866 in k24863 in k24860 in k24857 in k23555 in k23486 in k23293 in k23290 in k23185 in k23134 in k11783 in k10718 in k10715 in k7274 in k7271 in k6978 in k6975 in k6971 in k6680 in k6677 in k6674 in k6671 */
static void C_ccall f_27025(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[11],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_27025,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|10,a[1]=(C_word)f_27029,a[2]=t1,a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],a[7]=((C_word*)t0)[8],a[8]=((C_word*)t0)[9],a[9]=((C_word*)t0)[10],a[10]=((C_word*)t0)[11],tmp=(C_word)a,a+=11,tmp);
C_trace("ChickenBridge.scm: 381  gather-clause");
f_26962(t2,((C_word*)t0)[2],C_retrieve2(lf[540],"loop-returning"));}

/* k27027 in k27023 in k27019 in k27015 in k27011 in k27007 in k27003 in k26999 in gather-clauses in k26697 in k26694 in k26691 in k26688 in k26263 in k26260 in k26257 in k26254 in k26251 in k25668 in k25665 in k25142 in k25139 in k25136 in k25133 in k25130 in k25127 in k25124 in k25121 in k25118 in k25115 in k25112 in k25109 in k25106 in k25103 in k25100 in k25097 in k25094 in k25091 in k25088 in k25085 in k25082 in k24943 in k24940 in k24937 in k24934 in k24878 in k24875 in k24872 in k24869 in k24866 in k24863 in k24860 in k24857 in k23555 in k23486 in k23293 in k23290 in k23185 in k23134 in k11783 in k10718 in k10715 in k7274 in k7271 in k6978 in k6975 in k6971 in k6680 in k6677 in k6674 in k6671 */
static void C_ccall f_27029(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word ab[54],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_27029,2,t0,t1);}
C_trace("ChickenBridge.scm: 381  make-loop-clause");
f_26809(((C_word*)t0)[10],(C_word)C_a_i_list(&a,18,lf[542],((C_word*)t0)[9],lf[543],((C_word*)t0)[8],lf[544],((C_word*)t0)[7],lf[545],((C_word*)t0)[6],lf[546],((C_word*)t0)[5],lf[547],((C_word*)t0)[4],lf[548],((C_word*)t0)[3],lf[549],((C_word*)t0)[2],lf[550],t1));}

/* gather-clause in gather-clauses in k26697 in k26694 in k26691 in k26688 in k26263 in k26260 in k26257 in k26254 in k26251 in k25668 in k25665 in k25142 in k25139 in k25136 in k25133 in k25130 in k25127 in k25124 in k25121 in k25118 in k25115 in k25112 in k25109 in k25106 in k25103 in k25100 in k25097 in k25094 in k25091 in k25088 in k25085 in k25082 in k24943 in k24940 in k24937 in k24934 in k24878 in k24875 in k24872 in k24869 in k24866 in k24863 in k24860 in k24857 in k23555 in k23486 in k23293 in k23290 in k23185 in k23134 in k11783 in k10718 in k10715 in k7274 in k7271 in k6978 in k6975 in k6971 in k6680 in k6677 in k6674 in k6671 */
static void C_fcall f_26962(C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word ab[10],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_26962,NULL,3,t1,t2,t3);}
t4=(*a=C_VECTOR_TYPE|1,a[1]=t2,tmp=(C_word)a,a+=2,tmp);
t5=C_SCHEME_UNDEFINED;
t6=(*a=C_VECTOR_TYPE|1,a[1]=t5,tmp=(C_word)a,a+=2,tmp);
t7=C_set_block_item(t6,0,(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_26968,a[2]=t3,a[3]=t6,a[4]=t4,a[5]=((C_word)li424),tmp=(C_word)a,a+=6,tmp));
t8=((C_word*)t6)[1];
f_26968(t8,t1,C_SCHEME_END_OF_LIST);}

/* do4327 in gather-clause in gather-clauses in k26697 in k26694 in k26691 in k26688 in k26263 in k26260 in k26257 in k26254 in k26251 in k25668 in k25665 in k25142 in k25139 in k25136 in k25133 in k25130 in k25127 in k25124 in k25121 in k25118 in k25115 in k25112 in k25109 in k25106 in k25103 in k25100 in k25097 in k25094 in k25091 in k25088 in k25085 in k25082 in k24943 in k24940 in k24937 in k24934 in k24878 in k24875 in k24872 in k24869 in k24866 in k24863 in k24860 in k24857 in k23555 in k23486 in k23293 in k23290 in k23185 in k23134 in k11783 in k10718 in k10715 in k7274 in k7271 in k6978 in k6975 in k6971 in k6680 in k6677 in k6674 in k6671 */
static void C_fcall f_26968(C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word ab[12],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_26968,NULL,3,t0,t1,t2);}
t3=(*a=C_VECTOR_TYPE|1,a[1]=t2,tmp=(C_word)a,a+=2,tmp);
if(C_truep((C_word)C_i_nullp(((C_word*)((C_word*)t0)[4])[1]))){
t4=t1;
((C_proc2)(void*)(*((C_word*)t4+1)))(2,t4,((C_word*)t3)[1]);}
else{
t4=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_26979,a[2]=t1,a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=t3,tmp=(C_word)a,a+=6,tmp);
t5=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_26990,a[2]=t3,a[3]=t4,tmp=(C_word)a,a+=4,tmp);
t6=(C_word)C_i_car(((C_word*)((C_word*)t0)[4])[1]);
C_trace("ChickenBridge.scm: 381  accessor");
t7=((C_word*)t0)[2];
((C_proc3)C_retrieve_proc(t7))(3,t7,t5,t6);}}

/* k26988 in do4327 in gather-clause in gather-clauses in k26697 in k26694 in k26691 in k26688 in k26263 in k26260 in k26257 in k26254 in k26251 in k25668 in k25665 in k25142 in k25139 in k25136 in k25133 in k25130 in k25127 in k25124 in k25121 in k25118 in k25115 in k25112 in k25109 in k25106 in k25103 in k25100 in k25097 in k25094 in k25091 in k25088 in k25085 in k25082 in k24943 in k24940 in k24937 in k24934 in k24878 in k24875 in k24872 in k24869 in k24866 in k24863 in k24860 in k24857 in k23555 in k23486 in k23293 in k23290 in k23185 in k23134 in k11783 in k10718 in k10715 in k7274 in k7271 in k6978 in k6975 in k6971 in k6680 in k6677 in k6674 in k6671 */
static void C_ccall f_26990(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 381  append");
t2=*((C_word*)lf[18]+1);
((C_proc4)C_retrieve_proc(t2))(4,t2,((C_word*)t0)[3],((C_word*)((C_word*)t0)[2])[1],t1);}

/* k26977 in do4327 in gather-clause in gather-clauses in k26697 in k26694 in k26691 in k26688 in k26263 in k26260 in k26257 in k26254 in k26251 in k25668 in k25665 in k25142 in k25139 in k25136 in k25133 in k25130 in k25127 in k25124 in k25121 in k25118 in k25115 in k25112 in k25109 in k25106 in k25103 in k25100 in k25097 in k25094 in k25091 in k25088 in k25085 in k25082 in k24943 in k24940 in k24937 in k24934 in k24878 in k24875 in k24872 in k24869 in k24866 in k24863 in k24860 in k24857 in k23555 in k23486 in k23293 in k23290 in k23185 in k23134 in k11783 in k10718 in k10715 in k7274 in k7271 in k6978 in k6975 in k6971 in k6680 in k6677 in k6674 in k6671 */
static void C_ccall f_26979(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[5])+1,t1);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
t4=C_mutate(((C_word *)((C_word*)t0)[4])+1,t3);
t5=((C_word*)((C_word*)t0)[3])[1];
f_26968(t5,((C_word*)t0)[2],((C_word*)((C_word*)t0)[5])[1]);}

/* make-loop-clause in k26697 in k26694 in k26691 in k26688 in k26263 in k26260 in k26257 in k26254 in k26251 in k25668 in k25665 in k25142 in k25139 in k25136 in k25133 in k25130 in k25127 in k25124 in k25121 in k25118 in k25115 in k25112 in k25109 in k25106 in k25103 in k25100 in k25097 in k25094 in k25091 in k25088 in k25085 in k25082 in k24943 in k24940 in k24937 in k24934 in k24878 in k24875 in k24872 in k24869 in k24866 in k24863 in k24860 in k24857 in k23555 in k23486 in k23293 in k23290 in k23185 in k23134 in k11783 in k10718 in k10715 in k7274 in k7271 in k6978 in k6975 in k6971 in k6680 in k6677 in k6674 in k6671 */
static void C_fcall f_26809(C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word ab[17],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_26809,NULL,2,t1,t2);}
t3=(C_word)C_a_i_vector(&a,9,C_SCHEME_FALSE,C_SCHEME_END_OF_LIST,C_SCHEME_END_OF_LIST,C_SCHEME_END_OF_LIST,C_SCHEME_END_OF_LIST,C_SCHEME_END_OF_LIST,C_SCHEME_END_OF_LIST,C_SCHEME_END_OF_LIST,C_SCHEME_END_OF_LIST);
if(C_truep((C_word)C_i_nullp(t2))){
t4=t1;
((C_proc2)(void*)(*((C_word*)t4+1)))(2,t4,t3);}
else{
t4=C_SCHEME_UNDEFINED;
t5=(*a=C_VECTOR_TYPE|1,a[1]=t4,tmp=(C_word)a,a+=2,tmp);
t6=C_set_block_item(t5,0,(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_26824,a[2]=t5,a[3]=t3,a[4]=((C_word)li422),tmp=(C_word)a,a+=5,tmp));
t7=((C_word*)t5)[1];
f_26824(t7,t1,t2);}}

/* do4315 in make-loop-clause in k26697 in k26694 in k26691 in k26688 in k26263 in k26260 in k26257 in k26254 in k26251 in k25668 in k25665 in k25142 in k25139 in k25136 in k25133 in k25130 in k25127 in k25124 in k25121 in k25118 in k25115 in k25112 in k25109 in k25106 in k25103 in k25100 in k25097 in k25094 in k25091 in k25088 in k25085 in k25082 in k24943 in k24940 in k24937 in k24934 in k24878 in k24875 in k24872 in k24869 in k24866 in k24863 in k24860 in k24857 in k23555 in k23486 in k23293 in k23290 in k23185 in k23134 in k11783 in k10718 in k10715 in k7274 in k7271 in k6978 in k6975 in k6971 in k6680 in k6677 in k6674 in k6671 */
static void C_fcall f_26824(C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word t14;
C_word t15;
C_word t16;
C_word t17;
C_word t18;
C_word t19;
C_word t20;
C_word t21;
C_word t22;
C_word t23;
C_word ab[5],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_26824,NULL,3,t0,t1,t2);}
if(C_truep((C_word)C_i_nullp(t2))){
t3=t1;
((C_proc2)(void*)(*((C_word*)t3+1)))(2,t3,((C_word*)t0)[3]);}
else{
t3=(C_word)C_i_car(t2);
t4=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_26837,a[2]=t1,a[3]=((C_word*)t0)[2],a[4]=t2,tmp=(C_word)a,a+=5,tmp);
t5=(C_word)C_eqp(t3,lf[542]);
if(C_truep(t5)){
t6=(C_word)C_i_cadr(t2);
C_trace("ChickenBridge.scm: 381  loop-operator-set!");
f_26707(t4,((C_word*)t0)[3],t6);}
else{
t6=(C_word)C_eqp(t3,lf[543]);
if(C_truep(t6)){
t7=(C_word)C_i_cadr(t2);
t8=t4;
f_26837(2,t8,(C_word)C_i_vector_set(((C_word*)t0)[3],C_fix(1),t7));}
else{
t7=(C_word)C_eqp(t3,lf[544]);
if(C_truep(t7)){
t8=(C_word)C_i_cadr(t2);
t9=t4;
f_26837(2,t9,(C_word)C_i_vector_set(((C_word*)t0)[3],C_fix(2),t8));}
else{
t8=(C_word)C_eqp(t3,lf[545]);
if(C_truep(t8)){
t9=(C_word)C_i_cadr(t2);
t10=t4;
f_26837(2,t10,(C_word)C_i_vector_set(((C_word*)t0)[3],C_fix(3),t9));}
else{
t9=(C_word)C_eqp(t3,lf[546]);
if(C_truep(t9)){
t10=(C_word)C_i_cadr(t2);
t11=t4;
f_26837(2,t11,(C_word)C_i_vector_set(((C_word*)t0)[3],C_fix(4),t10));}
else{
t10=(C_word)C_eqp(t3,lf[547]);
if(C_truep(t10)){
t11=(C_word)C_i_cadr(t2);
C_trace("ChickenBridge.scm: 381  loop-looping-set!");
f_26767(t4,((C_word*)t0)[3],t11);}
else{
t11=(C_word)C_eqp(t3,lf[548]);
if(C_truep(t11)){
t12=(C_word)C_i_cadr(t2);
t13=t4;
f_26837(2,t13,(C_word)C_i_vector_set(((C_word*)t0)[3],C_fix(6),t12));}
else{
t12=(C_word)C_eqp(t3,lf[549]);
if(C_truep(t12)){
t13=(C_word)C_i_cadr(t2);
t14=t4;
f_26837(2,t14,(C_word)C_i_vector_set(((C_word*)t0)[3],C_fix(7),t13));}
else{
t13=(C_word)C_eqp(t3,lf[550]);
if(C_truep(t13)){
t14=(C_word)C_i_cadr(t2);
t15=t4;
f_26837(2,t15,(C_word)C_i_vector_set(((C_word*)t0)[3],C_fix(8),t14));}
else{
t14=t4;
f_26837(2,t14,C_SCHEME_UNDEFINED);}}}}}}}}}}}

/* k26835 in do4315 in make-loop-clause in k26697 in k26694 in k26691 in k26688 in k26263 in k26260 in k26257 in k26254 in k26251 in k25668 in k25665 in k25142 in k25139 in k25136 in k25133 in k25130 in k25127 in k25124 in k25121 in k25118 in k25115 in k25112 in k25109 in k25106 in k25103 in k25100 in k25097 in k25094 in k25091 in k25088 in k25085 in k25082 in k24943 in k24940 in k24937 in k24934 in k24878 in k24875 in k24872 in k24869 in k24866 in k24863 in k24860 in k24857 in k23555 in k23486 in k23293 in k23290 in k23185 in k23134 in k11783 in k10718 in k10715 in k7274 in k7271 in k6978 in k6975 in k6971 in k6680 in k6677 in k6674 in k6671 */
static void C_ccall f_26837(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word *a;
t2=(C_word)C_i_cddr(((C_word*)t0)[4]);
t3=((C_word*)((C_word*)t0)[3])[1];
f_26824(t3,((C_word*)t0)[2],t2);}

/* loop-returning in k26697 in k26694 in k26691 in k26688 in k26263 in k26260 in k26257 in k26254 in k26251 in k25668 in k25665 in k25142 in k25139 in k25136 in k25133 in k25130 in k25127 in k25124 in k25121 in k25118 in k25115 in k25112 in k25109 in k25106 in k25103 in k25100 in k25097 in k25094 in k25091 in k25088 in k25085 in k25082 in k24943 in k24940 in k24937 in k24934 in k24878 in k24875 in k24872 in k24869 in k24866 in k24863 in k24860 in k24857 in k23555 in k23486 in k23293 in k23290 in k23185 in k23134 in k11783 in k10718 in k10715 in k7274 in k7271 in k6978 in k6975 in k6971 in k6680 in k6677 in k6674 in k6671 */
static void C_ccall f_26797(C_word c,C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word *a;
if(c!=3) C_bad_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr3,(void*)f_26797,3,t0,t1,t2);}
t3=t1;
((C_proc2)(void*)(*((C_word*)t3+1)))(2,t3,(C_word)C_i_vector_ref(t2,C_fix(8)));}

/* loop-finally in k26697 in k26694 in k26691 in k26688 in k26263 in k26260 in k26257 in k26254 in k26251 in k25668 in k25665 in k25142 in k25139 in k25136 in k25133 in k25130 in k25127 in k25124 in k25121 in k25118 in k25115 in k25112 in k25109 in k25106 in k25103 in k25100 in k25097 in k25094 in k25091 in k25088 in k25085 in k25082 in k24943 in k24940 in k24937 in k24934 in k24878 in k24875 in k24872 in k24869 in k24866 in k24863 in k24860 in k24857 in k23555 in k23486 in k23293 in k23290 in k23185 in k23134 in k11783 in k10718 in k10715 in k7274 in k7271 in k6978 in k6975 in k6971 in k6680 in k6677 in k6674 in k6671 */
static void C_ccall f_26785(C_word c,C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word *a;
if(c!=3) C_bad_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr3,(void*)f_26785,3,t0,t1,t2);}
t3=t1;
((C_proc2)(void*)(*((C_word*)t3+1)))(2,t3,(C_word)C_i_vector_ref(t2,C_fix(7)));}

/* loop-stepping in k26697 in k26694 in k26691 in k26688 in k26263 in k26260 in k26257 in k26254 in k26251 in k25668 in k25665 in k25142 in k25139 in k25136 in k25133 in k25130 in k25127 in k25124 in k25121 in k25118 in k25115 in k25112 in k25109 in k25106 in k25103 in k25100 in k25097 in k25094 in k25091 in k25088 in k25085 in k25082 in k24943 in k24940 in k24937 in k24934 in k24878 in k24875 in k24872 in k24869 in k24866 in k24863 in k24860 in k24857 in k23555 in k23486 in k23293 in k23290 in k23185 in k23134 in k11783 in k10718 in k10715 in k7274 in k7271 in k6978 in k6975 in k6971 in k6680 in k6677 in k6674 in k6671 */
static void C_ccall f_26773(C_word c,C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word *a;
if(c!=3) C_bad_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr3,(void*)f_26773,3,t0,t1,t2);}
t3=t1;
((C_proc2)(void*)(*((C_word*)t3+1)))(2,t3,(C_word)C_i_vector_ref(t2,C_fix(6)));}

/* loop-looping-set! in k26697 in k26694 in k26691 in k26688 in k26263 in k26260 in k26257 in k26254 in k26251 in k25668 in k25665 in k25142 in k25139 in k25136 in k25133 in k25130 in k25127 in k25124 in k25121 in k25118 in k25115 in k25112 in k25109 in k25106 in k25103 in k25100 in k25097 in k25094 in k25091 in k25088 in k25085 in k25082 in k24943 in k24940 in k24937 in k24934 in k24878 in k24875 in k24872 in k24869 in k24866 in k24863 in k24860 in k24857 in k23555 in k23486 in k23293 in k23290 in k23185 in k23134 in k11783 in k10718 in k10715 in k7274 in k7271 in k6978 in k6975 in k6971 in k6680 in k6677 in k6674 in k6671 */
static void C_fcall f_26767(C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word *a;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_26767,NULL,3,t1,t2,t3);}
t4=t1;
((C_proc2)(void*)(*((C_word*)t4+1)))(2,t4,(C_word)C_i_vector_set(t2,C_fix(5),t3));}

/* loop-looping in k26697 in k26694 in k26691 in k26688 in k26263 in k26260 in k26257 in k26254 in k26251 in k25668 in k25665 in k25142 in k25139 in k25136 in k25133 in k25130 in k25127 in k25124 in k25121 in k25118 in k25115 in k25112 in k25109 in k25106 in k25103 in k25100 in k25097 in k25094 in k25091 in k25088 in k25085 in k25082 in k24943 in k24940 in k24937 in k24934 in k24878 in k24875 in k24872 in k24869 in k24866 in k24863 in k24860 in k24857 in k23555 in k23486 in k23293 in k23290 in k23185 in k23134 in k11783 in k10718 in k10715 in k7274 in k7271 in k6978 in k6975 in k6971 in k6680 in k6677 in k6674 in k6671 */
static void C_ccall f_26761(C_word c,C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word *a;
if(c!=3) C_bad_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr3,(void*)f_26761,3,t0,t1,t2);}
t3=t1;
((C_proc2)(void*)(*((C_word*)t3+1)))(2,t3,(C_word)C_i_vector_ref(t2,C_fix(5)));}

/* loop-end-tests in k26697 in k26694 in k26691 in k26688 in k26263 in k26260 in k26257 in k26254 in k26251 in k25668 in k25665 in k25142 in k25139 in k25136 in k25133 in k25130 in k25127 in k25124 in k25121 in k25118 in k25115 in k25112 in k25109 in k25106 in k25103 in k25100 in k25097 in k25094 in k25091 in k25088 in k25085 in k25082 in k24943 in k24940 in k24937 in k24934 in k24878 in k24875 in k24872 in k24869 in k24866 in k24863 in k24860 in k24857 in k23555 in k23486 in k23293 in k23290 in k23185 in k23134 in k11783 in k10718 in k10715 in k7274 in k7271 in k6978 in k6975 in k6971 in k6680 in k6677 in k6674 in k6671 */
static void C_ccall f_26749(C_word c,C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word *a;
if(c!=3) C_bad_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr3,(void*)f_26749,3,t0,t1,t2);}
t3=t1;
((C_proc2)(void*)(*((C_word*)t3+1)))(2,t3,(C_word)C_i_vector_ref(t2,C_fix(4)));}

/* loop-initially in k26697 in k26694 in k26691 in k26688 in k26263 in k26260 in k26257 in k26254 in k26251 in k25668 in k25665 in k25142 in k25139 in k25136 in k25133 in k25130 in k25127 in k25124 in k25121 in k25118 in k25115 in k25112 in k25109 in k25106 in k25103 in k25100 in k25097 in k25094 in k25091 in k25088 in k25085 in k25082 in k24943 in k24940 in k24937 in k24934 in k24878 in k24875 in k24872 in k24869 in k24866 in k24863 in k24860 in k24857 in k23555 in k23486 in k23293 in k23290 in k23185 in k23134 in k11783 in k10718 in k10715 in k7274 in k7271 in k6978 in k6975 in k6971 in k6680 in k6677 in k6674 in k6671 */
static void C_ccall f_26737(C_word c,C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word *a;
if(c!=3) C_bad_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr3,(void*)f_26737,3,t0,t1,t2);}
t3=t1;
((C_proc2)(void*)(*((C_word*)t3+1)))(2,t3,(C_word)C_i_vector_ref(t2,C_fix(3)));}

/* loop-collectors in k26697 in k26694 in k26691 in k26688 in k26263 in k26260 in k26257 in k26254 in k26251 in k25668 in k25665 in k25142 in k25139 in k25136 in k25133 in k25130 in k25127 in k25124 in k25121 in k25118 in k25115 in k25112 in k25109 in k25106 in k25103 in k25100 in k25097 in k25094 in k25091 in k25088 in k25085 in k25082 in k24943 in k24940 in k24937 in k24934 in k24878 in k24875 in k24872 in k24869 in k24866 in k24863 in k24860 in k24857 in k23555 in k23486 in k23293 in k23290 in k23185 in k23134 in k11783 in k10718 in k10715 in k7274 in k7271 in k6978 in k6975 in k6971 in k6680 in k6677 in k6674 in k6671 */
static void C_ccall f_26725(C_word c,C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word *a;
if(c!=3) C_bad_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr3,(void*)f_26725,3,t0,t1,t2);}
t3=t1;
((C_proc2)(void*)(*((C_word*)t3+1)))(2,t3,(C_word)C_i_vector_ref(t2,C_fix(2)));}

/* loop-bindings in k26697 in k26694 in k26691 in k26688 in k26263 in k26260 in k26257 in k26254 in k26251 in k25668 in k25665 in k25142 in k25139 in k25136 in k25133 in k25130 in k25127 in k25124 in k25121 in k25118 in k25115 in k25112 in k25109 in k25106 in k25103 in k25100 in k25097 in k25094 in k25091 in k25088 in k25085 in k25082 in k24943 in k24940 in k24937 in k24934 in k24878 in k24875 in k24872 in k24869 in k24866 in k24863 in k24860 in k24857 in k23555 in k23486 in k23293 in k23290 in k23185 in k23134 in k11783 in k10718 in k10715 in k7274 in k7271 in k6978 in k6975 in k6971 in k6680 in k6677 in k6674 in k6671 */
static void C_ccall f_26713(C_word c,C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word *a;
if(c!=3) C_bad_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr3,(void*)f_26713,3,t0,t1,t2);}
t3=t1;
((C_proc2)(void*)(*((C_word*)t3+1)))(2,t3,(C_word)C_i_vector_ref(t2,C_fix(1)));}

/* loop-operator-set! in k26697 in k26694 in k26691 in k26688 in k26263 in k26260 in k26257 in k26254 in k26251 in k25668 in k25665 in k25142 in k25139 in k25136 in k25133 in k25130 in k25127 in k25124 in k25121 in k25118 in k25115 in k25112 in k25109 in k25106 in k25103 in k25100 in k25097 in k25094 in k25091 in k25088 in k25085 in k25082 in k24943 in k24940 in k24937 in k24934 in k24878 in k24875 in k24872 in k24869 in k24866 in k24863 in k24860 in k24857 in k23555 in k23486 in k23293 in k23290 in k23185 in k23134 in k11783 in k10718 in k10715 in k7274 in k7271 in k6978 in k6975 in k6971 in k6680 in k6677 in k6674 in k6671 */
static void C_fcall f_26707(C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word *a;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_26707,NULL,3,t1,t2,t3);}
t4=t1;
((C_proc2)(void*)(*((C_word*)t4+1)))(2,t4,(C_word)C_i_vector_set(t2,C_fix(0),t3));}

/* sal:output in k26263 in k26260 in k26257 in k26254 in k26251 in k25668 in k25665 in k25142 in k25139 in k25136 in k25133 in k25130 in k25127 in k25124 in k25121 in k25118 in k25115 in k25112 in k25109 in k25106 in k25103 in k25100 in k25097 in k25094 in k25091 in k25088 in k25085 in k25082 in k24943 in k24940 in k24937 in k24934 in k24878 in k24875 in k24872 in k24869 in k24866 in k24863 in k24860 in k24857 in k23555 in k23486 in k23293 in k23290 in k23185 in k23134 in k11783 in k10718 in k10715 in k7274 in k7271 in k6978 in k6975 in k6971 in k6680 in k6677 in k6674 in k6671 */
static void C_ccall f_26671(C_word c,C_word t0,C_word t1,...){
C_word tmp;
C_word t2;
C_word *a;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_26671,2,t0,t1);}
C_trace("ChickenBridge.scm: 380  print-error");
t2=C_retrieve(lf[496]);
((C_proc3)C_retrieve_proc(t2))(3,t2,t1,lf[530]);}

/* sal:open in k26263 in k26260 in k26257 in k26254 in k26251 in k25668 in k25665 in k25142 in k25139 in k25136 in k25133 in k25130 in k25127 in k25124 in k25121 in k25118 in k25115 in k25112 in k25109 in k25106 in k25103 in k25100 in k25097 in k25094 in k25091 in k25088 in k25085 in k25082 in k24943 in k24940 in k24937 in k24934 in k24878 in k24875 in k24872 in k24869 in k24866 in k24863 in k24860 in k24857 in k23555 in k23486 in k23293 in k23290 in k23185 in k23134 in k11783 in k10718 in k10715 in k7274 in k7271 in k6978 in k6975 in k6971 in k6680 in k6677 in k6674 in k6671 */
static void C_ccall f_26665(C_word c,C_word t0,C_word t1,...){
C_word tmp;
C_word t2;
C_word *a;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_26665,2,t0,t1);}
C_trace("ChickenBridge.scm: 380  print-error");
t2=C_retrieve(lf[496]);
((C_proc3)C_retrieve_proc(t2))(3,t2,t1,lf[528]);}

/* sal:load in k26263 in k26260 in k26257 in k26254 in k26251 in k25668 in k25665 in k25142 in k25139 in k25136 in k25133 in k25130 in k25127 in k25124 in k25121 in k25118 in k25115 in k25112 in k25109 in k25106 in k25103 in k25100 in k25097 in k25094 in k25091 in k25088 in k25085 in k25082 in k24943 in k24940 in k24937 in k24934 in k24878 in k24875 in k24872 in k24869 in k24866 in k24863 in k24860 in k24857 in k23555 in k23486 in k23293 in k23290 in k23185 in k23134 in k11783 in k10718 in k10715 in k7274 in k7271 in k6978 in k6975 in k6971 in k6680 in k6677 in k6674 in k6671 */
static void C_ccall f_26611(C_word c,C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word ab[4],*a=ab;
if(c!=3) C_bad_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr3,(void*)f_26611,3,t0,t1,t2);}
t3=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_26615,a[2]=t2,a[3]=t1,tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 380  file-exists?");
t4=C_retrieve(lf[526]);
((C_proc3)C_retrieve_proc(t4))(3,t4,t3,t2);}

/* k26613 in sal:load in k26263 in k26260 in k26257 in k26254 in k26251 in k25668 in k25665 in k25142 in k25139 in k25136 in k25133 in k25130 in k25127 in k25124 in k25121 in k25118 in k25115 in k25112 in k25109 in k25106 in k25103 in k25100 in k25097 in k25094 in k25091 in k25088 in k25085 in k25082 in k24943 in k24940 in k24937 in k24934 in k24878 in k24875 in k24872 in k24869 in k24866 in k24863 in k24860 in k24857 in k23555 in k23486 in k23293 in k23290 in k23185 in k23134 in k11783 in k10718 in k10715 in k7274 in k7271 in k6978 in k6975 in k6971 in k6680 in k6677 in k6674 in k6671 */
static void C_ccall f_26615(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word ab[14],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_26615,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_26618,a[2]=((C_word*)t0)[3],tmp=(C_word)a,a+=3,tmp);
if(C_truep(t1)){
t3=(C_word)C_i_string_length(((C_word*)t0)[2]);
t4=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_26637,a[2]=t3,a[3]=((C_word*)t0)[2],a[4]=t2,tmp=(C_word)a,a+=5,tmp);
t5=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_26663,a[2]=t4,tmp=(C_word)a,a+=3,tmp);
C_trace("ChickenBridge.scm: 380  string-append");
t6=*((C_word*)lf[53]+1);
((C_proc5)C_retrieve_proc(t6))(5,t6,t5,lf[522],((C_word*)t0)[2],lf[523]);}
else{
t3=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_26631,a[2]=t2,tmp=(C_word)a,a+=3,tmp);
C_trace("ChickenBridge.scm: 380  string-append");
t4=*((C_word*)lf[53]+1);
((C_proc5)C_retrieve_proc(t4))(5,t4,t3,lf[524],((C_word*)t0)[2],lf[525]);}}

/* k26629 in k26613 in sal:load in k26263 in k26260 in k26257 in k26254 in k26251 in k25668 in k25665 in k25142 in k25139 in k25136 in k25133 in k25130 in k25127 in k25124 in k25121 in k25118 in k25115 in k25112 in k25109 in k25106 in k25103 in k25100 in k25097 in k25094 in k25091 in k25088 in k25085 in k25082 in k24943 in k24940 in k24937 in k24934 in k24878 in k24875 in k24872 in k24869 in k24866 in k24863 in k24860 in k24857 in k23555 in k23486 in k23293 in k23290 in k23185 in k23134 in k11783 in k10718 in k10715 in k7274 in k7271 in k6978 in k6975 in k6971 in k6680 in k6677 in k6674 in k6671 */
static void C_ccall f_26631(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 380  print-error");
t2=C_retrieve(lf[496]);
((C_proc3)C_retrieve_proc(t2))(3,t2,((C_word*)t0)[2],t1);}

/* k26661 in k26613 in sal:load in k26263 in k26260 in k26257 in k26254 in k26251 in k25668 in k25665 in k25142 in k25139 in k25136 in k25133 in k25130 in k25127 in k25124 in k25121 in k25118 in k25115 in k25112 in k25109 in k25106 in k25103 in k25100 in k25097 in k25094 in k25091 in k25088 in k25085 in k25082 in k24943 in k24940 in k24937 in k24934 in k24878 in k24875 in k24872 in k24869 in k24866 in k24863 in k24860 in k24857 in k23555 in k23486 in k23293 in k23290 in k23185 in k23134 in k11783 in k10718 in k10715 in k7274 in k7271 in k6978 in k6975 in k6971 in k6680 in k6677 in k6674 in k6671 */
static void C_ccall f_26663(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 380  print-message");
t2=C_retrieve(lf[507]);
((C_proc3)C_retrieve_proc(t2))(3,t2,((C_word*)t0)[2],t1);}

/* k26635 in k26613 in sal:load in k26263 in k26260 in k26257 in k26254 in k26251 in k25668 in k25665 in k25142 in k25139 in k25136 in k25133 in k25130 in k25127 in k25124 in k25121 in k25118 in k25115 in k25112 in k25109 in k25106 in k25103 in k25100 in k25097 in k25094 in k25091 in k25088 in k25085 in k25082 in k24943 in k24940 in k24937 in k24934 in k24878 in k24875 in k24872 in k24869 in k24866 in k24863 in k24860 in k24857 in k23555 in k23486 in k23293 in k23290 in k23185 in k23134 in k11783 in k10718 in k10715 in k7274 in k7271 in k6978 in k6975 in k6971 in k6680 in k6677 in k6674 in k6671 */
static void C_ccall f_26637(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[8],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_26637,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_26643,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],tmp=(C_word)a,a+=4,tmp);
if(C_truep((C_word)C_i_greaterp(((C_word*)t0)[2],C_fix(4)))){
t3=(C_word)C_a_i_minus(&a,2,((C_word*)t0)[2],C_fix(4));
C_trace("substring=?");
t4=C_retrieve(lf[520]);
((C_proc7)(void*)(*((C_word*)t4+1)))(7,t4,t2,((C_word*)t0)[3],lf[521],t3,C_fix(0),C_SCHEME_FALSE);}
else{
t3=t2;
f_26643(2,t3,C_SCHEME_FALSE);}}

/* k26641 in k26635 in k26613 in sal:load in k26263 in k26260 in k26257 in k26254 in k26251 in k25668 in k25665 in k25142 in k25139 in k25136 in k25133 in k25130 in k25127 in k25124 in k25121 in k25118 in k25115 in k25112 in k25109 in k25106 in k25103 in k25100 in k25097 in k25094 in k25091 in k25088 in k25085 in k25082 in k24943 in k24940 in k24937 in k24934 in k24878 in k24875 in k24872 in k24869 in k24866 in k24863 in k24860 in k24857 in k23555 in k23486 in k23293 in k23290 in k23185 in k23134 in k11783 in k10718 in k10715 in k7274 in k7271 in k6978 in k6975 in k6971 in k6680 in k6677 in k6674 in k6671 */
static void C_ccall f_26643(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
if(C_truep(t1)){
C_trace("ChickenBridge.scm: 380  load-sal-file");
t2=C_retrieve(lf[518]);
((C_proc3)C_retrieve_proc(t2))(3,t2,((C_word*)t0)[3],((C_word*)t0)[2]);}
else{
C_trace("ChickenBridge.scm: 380  load");
t2=C_retrieve(lf[519]);
((C_proc3)C_retrieve_proc(t2))(3,t2,((C_word*)t0)[3],((C_word*)t0)[2]);}}

/* k26616 in k26613 in sal:load in k26263 in k26260 in k26257 in k26254 in k26251 in k25668 in k25665 in k25142 in k25139 in k25136 in k25133 in k25130 in k25127 in k25124 in k25121 in k25118 in k25115 in k25112 in k25109 in k25106 in k25103 in k25100 in k25097 in k25094 in k25091 in k25088 in k25085 in k25082 in k24943 in k24940 in k24937 in k24934 in k24878 in k24875 in k24872 in k24869 in k24866 in k24863 in k24860 in k24857 in k23555 in k23486 in k23293 in k23290 in k23185 in k23134 in k11783 in k10718 in k10715 in k7274 in k7271 in k6978 in k6975 in k6971 in k6680 in k6677 in k6674 in k6671 */
static void C_ccall f_26618(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 380  values");
C_values(2,0,((C_word*)t0)[2]);}

/* sal:chdir in k26263 in k26260 in k26257 in k26254 in k26251 in k25668 in k25665 in k25142 in k25139 in k25136 in k25133 in k25130 in k25127 in k25124 in k25121 in k25118 in k25115 in k25112 in k25109 in k25106 in k25103 in k25100 in k25097 in k25094 in k25091 in k25088 in k25085 in k25082 in k24943 in k24940 in k24937 in k24934 in k24878 in k24875 in k24872 in k24869 in k24866 in k24863 in k24860 in k24857 in k23555 in k23486 in k23293 in k23290 in k23185 in k23134 in k11783 in k10718 in k10715 in k7274 in k7271 in k6978 in k6975 in k6971 in k6680 in k6677 in k6674 in k6671 */
static void C_ccall f_26602(C_word c,C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word ab[3],*a=ab;
if(c!=3) C_bad_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr3,(void*)f_26602,3,t0,t1,t2);}
t3=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_26606,a[2]=t1,tmp=(C_word)a,a+=3,tmp);
C_trace("ChickenBridge.scm: 380  chdir");
t4=C_retrieve(lf[44]);
((C_proc3)C_retrieve_proc(t4))(3,t4,t3,t2);}

/* k26604 in sal:chdir in k26263 in k26260 in k26257 in k26254 in k26251 in k25668 in k25665 in k25142 in k25139 in k25136 in k25133 in k25130 in k25127 in k25124 in k25121 in k25118 in k25115 in k25112 in k25109 in k25106 in k25103 in k25100 in k25097 in k25094 in k25091 in k25088 in k25085 in k25082 in k24943 in k24940 in k24937 in k24934 in k24878 in k24875 in k24872 in k24869 in k24866 in k24863 in k24860 in k24857 in k23555 in k23486 in k23293 in k23290 in k23185 in k23134 in k11783 in k10718 in k10715 in k7274 in k7271 in k6978 in k6975 in k6971 in k6680 in k6677 in k6674 in k6671 */
static void C_ccall f_26606(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 380  values");
C_values(2,0,((C_word*)t0)[2]);}

/* sal:print in k26263 in k26260 in k26257 in k26254 in k26251 in k25668 in k25665 in k25142 in k25139 in k25136 in k25133 in k25130 in k25127 in k25124 in k25121 in k25118 in k25115 in k25112 in k25109 in k25106 in k25103 in k25100 in k25097 in k25094 in k25091 in k25088 in k25085 in k25082 in k24943 in k24940 in k24937 in k24934 in k24878 in k24875 in k24872 in k24869 in k24866 in k24863 in k24860 in k24857 in k23555 in k23486 in k23293 in k23290 in k23185 in k23134 in k11783 in k10718 in k10715 in k7274 in k7271 in k6978 in k6975 in k6971 in k6680 in k6677 in k6674 in k6671 */
static void C_ccall f_26449(C_word c,C_word t0,C_word t1,...){
C_word tmp;
C_word t2;
va_list v;
C_word *a,c2=c;
C_save_rest(t1,c2,2);
C_check_for_interrupt;
if(!C_demand(c*C_SIZEOF_PAIR+16)){
C_save_and_reclaim((void*)tr2r,(void*)f_26449r,2,t0,t1);}
else{
a=C_alloc((c-2)*3);
t2=C_restore_rest(a,C_rest_count(0));
f_26449r(t0,t1,t2);}}

static void C_ccall f_26449r(C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word *a=C_alloc(16);
t3=C_SCHEME_UNDEFINED;
t4=(*a=C_VECTOR_TYPE|1,a[1]=t3,tmp=(C_word)a,a+=2,tmp);
t5=C_set_block_item(t4,0,(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_26452,a[2]=t4,a[3]=((C_word)li405),tmp=(C_word)a,a+=4,tmp));
t6=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_26571,a[2]=t1,tmp=(C_word)a,a+=3,tmp);
t7=C_SCHEME_UNDEFINED;
t8=(*a=C_VECTOR_TYPE|1,a[1]=t7,tmp=(C_word)a,a+=2,tmp);
t9=C_set_block_item(t8,0,(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_26576,a[2]=t4,a[3]=t8,a[4]=((C_word)li406),tmp=(C_word)a,a+=5,tmp));
t10=((C_word*)t8)[1];
f_26576(t10,t6,t2);}

/* do4140 in sal:print in k26263 in k26260 in k26257 in k26254 in k26251 in k25668 in k25665 in k25142 in k25139 in k25136 in k25133 in k25130 in k25127 in k25124 in k25121 in k25118 in k25115 in k25112 in k25109 in k25106 in k25103 in k25100 in k25097 in k25094 in k25091 in k25088 in k25085 in k25082 in k24943 in k24940 in k24937 in k24934 in k24878 in k24875 in k24872 in k24869 in k24866 in k24863 in k24860 in k24857 in k23555 in k23486 in k23293 in k23290 in k23185 in k23134 in k11783 in k10718 in k10715 in k7274 in k7271 in k6978 in k6975 in k6971 in k6680 in k6677 in k6674 in k6671 */
static void C_fcall f_26576(C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word t5;
C_word ab[5],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_26576,NULL,3,t0,t1,t2);}
if(C_truep((C_word)C_i_nullp(t2))){
C_trace("ChickenBridge.scm: 380  print-message");
t3=C_retrieve(lf[507]);
((C_proc3)C_retrieve_proc(t3))(3,t3,t1,lf[515]);}
else{
t3=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_26589,a[2]=t1,a[3]=((C_word*)t0)[3],a[4]=t2,tmp=(C_word)a,a+=5,tmp);
t4=(C_word)C_i_car(t2);
C_trace("ChickenBridge.scm: 380  printer");
t5=((C_word*)((C_word*)t0)[2])[1];
f_26452(t5,t3,t4,C_fix(0));}}

/* k26587 in do4140 in sal:print in k26263 in k26260 in k26257 in k26254 in k26251 in k25668 in k25665 in k25142 in k25139 in k25136 in k25133 in k25130 in k25127 in k25124 in k25121 in k25118 in k25115 in k25112 in k25109 in k25106 in k25103 in k25100 in k25097 in k25094 in k25091 in k25088 in k25085 in k25082 in k24943 in k24940 in k24937 in k24934 in k24878 in k24875 in k24872 in k24869 in k24866 in k24863 in k24860 in k24857 in k23555 in k23486 in k23293 in k23290 in k23185 in k23134 in k11783 in k10718 in k10715 in k7274 in k7271 in k6978 in k6975 in k6971 in k6680 in k6677 in k6674 in k6671 */
static void C_ccall f_26589(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word *a;
t2=(C_word)C_i_cdr(((C_word*)t0)[4]);
t3=((C_word*)((C_word*)t0)[3])[1];
f_26576(t3,((C_word*)t0)[2],t2);}

/* k26569 in sal:print in k26263 in k26260 in k26257 in k26254 in k26251 in k25668 in k25665 in k25142 in k25139 in k25136 in k25133 in k25130 in k25127 in k25124 in k25121 in k25118 in k25115 in k25112 in k25109 in k25106 in k25103 in k25100 in k25097 in k25094 in k25091 in k25088 in k25085 in k25082 in k24943 in k24940 in k24937 in k24934 in k24878 in k24875 in k24872 in k24869 in k24866 in k24863 in k24860 in k24857 in k23555 in k23486 in k23293 in k23290 in k23185 in k23134 in k11783 in k10718 in k10715 in k7274 in k7271 in k6978 in k6975 in k6971 in k6680 in k6677 in k6674 in k6671 */
static void C_ccall f_26571(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 380  values");
C_values(2,0,((C_word*)t0)[2]);}

/* printer in sal:print in k26263 in k26260 in k26257 in k26254 in k26251 in k25668 in k25665 in k25142 in k25139 in k25136 in k25133 in k25130 in k25127 in k25124 in k25121 in k25118 in k25115 in k25112 in k25109 in k25106 in k25103 in k25100 in k25097 in k25094 in k25091 in k25088 in k25085 in k25082 in k24943 in k24940 in k24937 in k24934 in k24878 in k24875 in k24872 in k24869 in k24866 in k24863 in k24860 in k24857 in k23555 in k23486 in k23293 in k23290 in k23185 in k23134 in k11783 in k10718 in k10715 in k7274 in k7271 in k6978 in k6975 in k6971 in k6680 in k6677 in k6674 in k6671 */
static void C_fcall f_26452(C_word t0,C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word ab[12],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_26452,NULL,4,t0,t1,t2,t3);}
t4=t2;
if(C_truep(t4)){
if(C_truep((C_word)C_i_nullp(t2))){
C_trace("ChickenBridge.scm: 380  print-message");
t5=C_retrieve(lf[507]);
((C_proc3)C_retrieve_proc(t5))(3,t5,t1,lf[508]);}
else{
if(C_truep((C_word)C_i_pairp(t2))){
t5=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_26480,a[2]=t2,a[3]=((C_word*)t0)[2],a[4]=t3,a[5]=t1,tmp=(C_word)a,a+=6,tmp);
C_trace("ChickenBridge.scm: 380  print-message");
t6=C_retrieve(lf[507]);
((C_proc3)C_retrieve_proc(t6))(3,t6,t5,lf[511]);}
else{
t5=(C_word)C_eqp(t2,C_SCHEME_TRUE);
if(C_truep(t5)){
C_trace("ChickenBridge.scm: 380  print-message");
t6=C_retrieve(lf[507]);
((C_proc3)C_retrieve_proc(t6))(3,t6,t1,lf[512]);}
else{
if(C_truep((C_word)C_i_numberp(t2))){
t6=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_26552,a[2]=t1,tmp=(C_word)a,a+=3,tmp);
C_trace("ChickenBridge.scm: 380  number->string");
C_number_to_string(3,0,t6,t2);}
else{
if(C_truep((C_word)C_i_stringp(t2))){
C_trace("ChickenBridge.scm: 380  print-message");
t6=C_retrieve(lf[507]);
((C_proc3)C_retrieve_proc(t6))(3,t6,t1,t2);}
else{
t6=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_26568,a[2]=t1,tmp=(C_word)a,a+=3,tmp);
C_trace("ChickenBridge.scm: 380  sprintf");
t7=C_retrieve(lf[31]);
((C_proc4)C_retrieve_proc(t7))(4,t7,t6,lf[513],t2);}}}}}}
else{
C_trace("ChickenBridge.scm: 380  print-message");
t5=C_retrieve(lf[507]);
((C_proc3)C_retrieve_proc(t5))(3,t5,t1,lf[514]);}}

/* k26566 in printer in sal:print in k26263 in k26260 in k26257 in k26254 in k26251 in k25668 in k25665 in k25142 in k25139 in k25136 in k25133 in k25130 in k25127 in k25124 in k25121 in k25118 in k25115 in k25112 in k25109 in k25106 in k25103 in k25100 in k25097 in k25094 in k25091 in k25088 in k25085 in k25082 in k24943 in k24940 in k24937 in k24934 in k24878 in k24875 in k24872 in k24869 in k24866 in k24863 in k24860 in k24857 in k23555 in k23486 in k23293 in k23290 in k23185 in k23134 in k11783 in k10718 in k10715 in k7274 in k7271 in k6978 in k6975 in k6971 in k6680 in k6677 in k6674 in k6671 */
static void C_ccall f_26568(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 380  print-message");
t2=C_retrieve(lf[507]);
((C_proc3)C_retrieve_proc(t2))(3,t2,((C_word*)t0)[2],t1);}

/* k26550 in printer in sal:print in k26263 in k26260 in k26257 in k26254 in k26251 in k25668 in k25665 in k25142 in k25139 in k25136 in k25133 in k25130 in k25127 in k25124 in k25121 in k25118 in k25115 in k25112 in k25109 in k25106 in k25103 in k25100 in k25097 in k25094 in k25091 in k25088 in k25085 in k25082 in k24943 in k24940 in k24937 in k24934 in k24878 in k24875 in k24872 in k24869 in k24866 in k24863 in k24860 in k24857 in k23555 in k23486 in k23293 in k23290 in k23185 in k23134 in k11783 in k10718 in k10715 in k7274 in k7271 in k6978 in k6975 in k6971 in k6680 in k6677 in k6674 in k6671 */
static void C_ccall f_26552(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 380  print-message");
t2=C_retrieve(lf[507]);
((C_proc3)C_retrieve_proc(t2))(3,t2,((C_word*)t0)[2],t1);}

/* k26478 in printer in sal:print in k26263 in k26260 in k26257 in k26254 in k26251 in k25668 in k25665 in k25142 in k25139 in k25136 in k25133 in k25130 in k25127 in k25124 in k25121 in k25118 in k25115 in k25112 in k25109 in k25106 in k25103 in k25100 in k25097 in k25094 in k25091 in k25088 in k25085 in k25082 in k24943 in k24940 in k24937 in k24934 in k24878 in k24875 in k24872 in k24869 in k24866 in k24863 in k24860 in k24857 in k23555 in k23486 in k23293 in k23290 in k23185 in k23134 in k11783 in k10718 in k10715 in k7274 in k7271 in k6978 in k6975 in k6971 in k6680 in k6677 in k6674 in k6671 */
static void C_ccall f_26480(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[11],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_26480,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_26483,a[2]=((C_word*)t0)[5],tmp=(C_word)a,a+=3,tmp);
t3=C_SCHEME_UNDEFINED;
t4=(*a=C_VECTOR_TYPE|1,a[1]=t3,tmp=(C_word)a,a+=2,tmp);
t5=C_set_block_item(t4,0,(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_26488,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=t4,a[5]=((C_word)li404),tmp=(C_word)a,a+=6,tmp));
t6=((C_word*)t4)[1];
f_26488(t6,t2,((C_word*)t0)[2]);}

/* do4132 in k26478 in printer in sal:print in k26263 in k26260 in k26257 in k26254 in k26251 in k25668 in k25665 in k25142 in k25139 in k25136 in k25133 in k25130 in k25127 in k25124 in k25121 in k25118 in k25115 in k25112 in k25109 in k25106 in k25103 in k25100 in k25097 in k25094 in k25091 in k25088 in k25085 in k25082 in k24943 in k24940 in k24937 in k24934 in k24878 in k24875 in k24872 in k24869 in k24866 in k24863 in k24860 in k24857 in k23555 in k23486 in k23293 in k23290 in k23185 in k23134 in k11783 in k10718 in k10715 in k7274 in k7271 in k6978 in k6975 in k6971 in k6680 in k6677 in k6674 in k6671 */
static void C_fcall f_26488(C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_26488,NULL,3,t0,t1,t2);}
if(C_truep((C_word)C_i_nullp(t2))){
t3=t1;
((C_proc2)(void*)(*((C_word*)t3+1)))(2,t3,C_SCHEME_FALSE);}
else{
t3=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_26498,a[2]=t1,a[3]=((C_word*)t0)[4],a[4]=t2,tmp=(C_word)a,a+=5,tmp);
t4=(C_word)C_i_car(t2);
t5=(C_word)C_a_i_plus(&a,2,((C_word*)t0)[3],C_fix(1));
C_trace("ChickenBridge.scm: 380  printer");
t6=((C_word*)((C_word*)t0)[2])[1];
f_26452(t6,t3,t4,t5);}}

/* k26496 in do4132 in k26478 in printer in sal:print in k26263 in k26260 in k26257 in k26254 in k26251 in k25668 in k25665 in k25142 in k25139 in k25136 in k25133 in k25130 in k25127 in k25124 in k25121 in k25118 in k25115 in k25112 in k25109 in k25106 in k25103 in k25100 in k25097 in k25094 in k25091 in k25088 in k25085 in k25082 in k24943 in k24940 in k24937 in k24934 in k24878 in k24875 in k24872 in k24869 in k24866 in k24863 in k24860 in k24857 in k23555 in k23486 in k23293 in k23290 in k23185 in k23134 in k11783 in k10718 in k10715 in k7274 in k7271 in k6978 in k6975 in k6971 in k6680 in k6677 in k6674 in k6671 */
static void C_ccall f_26498(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[5],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_26498,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_26501,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],tmp=(C_word)a,a+=5,tmp);
t3=(C_word)C_i_cdr(((C_word*)t0)[4]);
if(C_truep((C_word)C_i_nullp(t3))){
t4=t2;
f_26501(2,t4,C_SCHEME_UNDEFINED);}
else{
C_trace("ChickenBridge.scm: 380  print-message");
t4=C_retrieve(lf[507]);
((C_proc3)C_retrieve_proc(t4))(3,t4,t2,lf[510]);}}

/* k26499 in k26496 in do4132 in k26478 in printer in sal:print in k26263 in k26260 in k26257 in k26254 in k26251 in k25668 in k25665 in k25142 in k25139 in k25136 in k25133 in k25130 in k25127 in k25124 in k25121 in k25118 in k25115 in k25112 in k25109 in k25106 in k25103 in k25100 in k25097 in k25094 in k25091 in k25088 in k25085 in k25082 in k24943 in k24940 in k24937 in k24934 in k24878 in k24875 in k24872 in k24869 in k24866 in k24863 in k24860 in k24857 in k23555 in k23486 in k23293 in k23290 in k23185 in k23134 in k11783 in k10718 in k10715 in k7274 in k7271 in k6978 in k6975 in k6971 in k6680 in k6677 in k6674 in k6671 */
static void C_ccall f_26501(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word *a;
t2=(C_word)C_i_cdr(((C_word*)t0)[4]);
t3=((C_word*)((C_word*)t0)[3])[1];
f_26488(t3,((C_word*)t0)[2],t2);}

/* k26481 in k26478 in printer in sal:print in k26263 in k26260 in k26257 in k26254 in k26251 in k25668 in k25665 in k25142 in k25139 in k25136 in k25133 in k25130 in k25127 in k25124 in k25121 in k25118 in k25115 in k25112 in k25109 in k25106 in k25103 in k25100 in k25097 in k25094 in k25091 in k25088 in k25085 in k25082 in k24943 in k24940 in k24937 in k24934 in k24878 in k24875 in k24872 in k24869 in k24866 in k24863 in k24860 in k24857 in k23555 in k23486 in k23293 in k23290 in k23185 in k23134 in k11783 in k10718 in k10715 in k7274 in k7271 in k6978 in k6975 in k6971 in k6680 in k6677 in k6674 in k6671 */
static void C_ccall f_26483(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 380  print-message");
t2=C_retrieve(lf[507]);
((C_proc3)C_retrieve_proc(t2))(3,t2,((C_word*)t0)[2],lf[509]);}

/* sal in k26263 in k26260 in k26257 in k26254 in k26251 in k25668 in k25665 in k25142 in k25139 in k25136 in k25133 in k25130 in k25127 in k25124 in k25121 in k25118 in k25115 in k25112 in k25109 in k25106 in k25103 in k25100 in k25097 in k25094 in k25091 in k25088 in k25085 in k25082 in k24943 in k24940 in k24937 in k24934 in k24878 in k24875 in k24872 in k24869 in k24866 in k24863 in k24860 in k24857 in k23555 in k23486 in k23293 in k23290 in k23185 in k23134 in k11783 in k10718 in k10715 in k7274 in k7271 in k6978 in k6975 in k6971 in k6680 in k6677 in k6674 in k6671 */
static void C_ccall f_26272(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4,C_word t5){
C_word tmp;
C_word t6;
C_word t7;
C_word t8;
C_word ab[9],*a=ab;
if(c!=6) C_bad_argc_2(c,6,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr6,(void*)f_26272,6,t0,t1,t2,t3,t4,t5);}
t6=(*a=C_VECTOR_TYPE|1,a[1]=t3,tmp=(C_word)a,a+=2,tmp);
t7=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_26276,a[2]=t4,a[3]=t6,a[4]=t5,a[5]=t1,a[6]=t2,tmp=(C_word)a,a+=7,tmp);
if(C_truep(C_retrieve(lf[494]))){
C_trace("ChickenBridge.scm: 380  printf");
t8=C_retrieve(lf[475]);
((C_proc4)C_retrieve_proc(t8))(4,t8,t7,lf[505],t4);}
else{
t8=t7;
f_26276(2,t8,C_SCHEME_UNDEFINED);}}

/* k26274 in sal in k26263 in k26260 in k26257 in k26254 in k26251 in k25668 in k25665 in k25142 in k25139 in k25136 in k25133 in k25130 in k25127 in k25124 in k25121 in k25118 in k25115 in k25112 in k25109 in k25106 in k25103 in k25100 in k25097 in k25094 in k25091 in k25088 in k25085 in k25082 in k24943 in k24940 in k24937 in k24934 in k24878 in k24875 in k24872 in k24869 in k24866 in k24863 in k24860 in k24857 in k23555 in k23486 in k23293 in k23290 in k23185 in k23134 in k11783 in k10718 in k10715 in k7274 in k7271 in k6978 in k6975 in k6971 in k6680 in k6677 in k6674 in k6671 */
static void C_ccall f_26276(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[5],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_26276,2,t0,t1);}
t2=C_mutate(&lf[491],((C_word*)t0)[6]);
t3=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_26281,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],tmp=(C_word)a,a+=5,tmp);
t4=((C_word*)t0)[2];
C_trace("map");
t5=*((C_word*)lf[17]+1);
((C_proc4)(void*)(*((C_word*)t5+1)))(4,t5,t3,C_retrieve2(lf[420],"list->token"),t4);}

/* k26279 in k26274 in sal in k26263 in k26260 in k26257 in k26254 in k26251 in k25668 in k25665 in k25142 in k25139 in k25136 in k25133 in k25130 in k25127 in k25124 in k25121 in k25118 in k25115 in k25112 in k25109 in k25106 in k25103 in k25100 in k25097 in k25094 in k25091 in k25088 in k25085 in k25082 in k24943 in k24940 in k24937 in k24934 in k24878 in k24875 in k24872 in k24869 in k24866 in k24863 in k24860 in k24857 in k23555 in k23486 in k23293 in k23290 in k23185 in k23134 in k11783 in k10718 in k10715 in k7274 in k7271 in k6978 in k6975 in k6971 in k6680 in k6677 in k6674 in k6671 */
static void C_ccall f_26281(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[5],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_26281,2,t0,t1);}
t2=C_mutate(&lf[492],t1);
t3=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_26284,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],tmp=(C_word)a,a+=5,tmp);
if(C_truep((C_word)C_i_nequalp(((C_word*)((C_word*)t0)[2])[1],C_fix(0)))){
t4=C_set_block_item(((C_word*)t0)[2],0,C_fix(36608));
t5=t3;
f_26284(t5,t4);}
else{
t4=t3;
f_26284(t4,C_SCHEME_FALSE);}}

/* k26282 in k26279 in k26274 in sal in k26263 in k26260 in k26257 in k26254 in k26251 in k25668 in k25665 in k25142 in k25139 in k25136 in k25133 in k25130 in k25127 in k25124 in k25121 in k25118 in k25115 in k25112 in k25109 in k25106 in k25103 in k25100 in k25097 in k25094 in k25091 in k25088 in k25085 in k25082 in k24943 in k24940 in k24937 in k24934 in k24878 in k24875 in k24872 in k24869 in k24866 in k24863 in k24860 in k24857 in k23555 in k23486 in k23293 in k23290 in k23185 in k23134 in k11783 in k10718 in k10715 in k7274 in k7271 in k6978 in k6975 in k6971 in k6680 in k6677 in k6674 in k6671 */
static void C_fcall f_26284(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word ab[21],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_26284,NULL,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_26288,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],tmp=(C_word)a,a+=4,tmp);
t3=((C_word*)((C_word*)t0)[2])[1];
t4=C_retrieve2(lf[492],"*sal-tokens*");
t5=(C_word)C_a_i_list(&a,4,C_SCHEME_FALSE,C_fix(0),C_SCHEME_FALSE,C_SCHEME_FALSE);
t6=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_24019,a[2]=t4,a[3]=t3,a[4]=((C_word)li402),tmp=(C_word)a,a+=5,tmp);
C_trace("ChickenBridge.scm: 380  call/cc");
t7=*((C_word*)lf[504]+1);
((C_proc3)C_retrieve_proc(t7))(3,t7,t2,t6);}

/* a24018 in k26282 in k26279 in k26274 in sal in k26263 in k26260 in k26257 in k26254 in k26251 in k25668 in k25665 in k25142 in k25139 in k25136 in k25133 in k25130 in k25127 in k25124 in k25121 in k25118 in k25115 in k25112 in k25109 in k25106 in k25103 in k25100 in k25097 in k25094 in k25091 in k25088 in k25085 in k25082 in k24943 in k24940 in k24937 in k24934 in k24878 in k24875 in k24872 in k24869 in k24866 in k24863 in k24860 in k24857 in k23555 in k23486 in k23293 in k23290 in k23185 in k23134 in k11783 in k10718 in k10715 in k7274 in k7271 in k6978 in k6975 in k6971 in k6680 in k6677 in k6674 in k6671 */
static void C_ccall f_24019(C_word c,C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word t5;
C_word ab[10],*a=ab;
if(c!=3) C_bad_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr3,(void*)f_24019,3,t0,t1,t2);}
t3=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_24025,a[2]=t2,a[3]=((C_word*)t0)[2],a[4]=((C_word*)t0)[3],a[5]=((C_word)li400),tmp=(C_word)a,a+=6,tmp);
t4=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_24032,a[2]=t2,a[3]=((C_word)li401),tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 380  call-with-values");
C_call_with_values(4,0,t1,t3,t4);}

/* a24031 in a24018 in k26282 in k26279 in k26274 in sal in k26263 in k26260 in k26257 in k26254 in k26251 in k25668 in k25665 in k25142 in k25139 in k25136 in k25133 in k25130 in k25127 in k25124 in k25121 in k25118 in k25115 in k25112 in k25109 in k25106 in k25103 in k25100 in k25097 in k25094 in k25091 in k25088 in k25085 in k25082 in k24943 in k24940 in k24937 in k24934 in k24878 in k24875 in k24872 in k24869 in k24866 in k24863 in k24860 in k24857 in k23555 in k23486 in k23293 in k23290 in k23185 in k23134 in k11783 in k10718 in k10715 in k7274 in k7271 in k6978 in k6975 in k6971 in k6680 in k6677 in k6674 in k6671 */
static void C_ccall f_24032(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4){
C_word tmp;
C_word t5;
C_word t6;
C_word t7;
C_word ab[5],*a=ab;
if(c!=5) C_bad_argc_2(c,5,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr5,(void*)f_24032,5,t0,t1,t2,t3,t4);}
t5=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_24039,a[2]=((C_word*)t0)[2],a[3]=t3,a[4]=t1,tmp=(C_word)a,a+=5,tmp);
if(C_truep(t2)){
t6=(C_word)C_i_nullp(t4);
t7=t5;
f_24039(t7,(C_truep(t6)?t6:C_SCHEME_FALSE));}
else{
t6=t5;
f_24039(t6,C_SCHEME_FALSE);}}

/* k24037 in a24031 in a24018 in k26282 in k26279 in k26274 in sal in k26263 in k26260 in k26257 in k26254 in k26251 in k25668 in k25665 in k25142 in k25139 in k25136 in k25133 in k25130 in k25127 in k25124 in k25121 in k25118 in k25115 in k25112 in k25109 in k25106 in k25103 in k25100 in k25097 in k25094 in k25091 in k25088 in k25085 in k25082 in k24943 in k24940 in k24937 in k24934 in k24878 in k24875 in k24872 in k24869 in k24866 in k24863 in k24860 in k24857 in k23555 in k23486 in k23293 in k23290 in k23185 in k23134 in k11783 in k10718 in k10715 in k7274 in k7271 in k6978 in k6975 in k6971 in k6680 in k6677 in k6674 in k6671 */
static void C_fcall f_24039(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[5],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_24039,NULL,2,t0,t1);}
if(C_truep(t1)){
t2=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_24046,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],tmp=(C_word)a,a+=5,tmp);
C_trace("ChickenBridge.scm: 380  add-emit-info");
f_23619(t2,lf[501],lf[502],C_SCHEME_END_OF_LIST);}
else{
C_trace("ChickenBridge.scm: 380  make-parse-error");
f_23439(((C_word*)t0)[4],lf[503],C_retrieve2(lf[469],"*maxtokpos*"));}}

/* k24044 in k24037 in a24031 in a24018 in k26282 in k26279 in k26274 in sal in k26263 in k26260 in k26257 in k26254 in k26251 in k25668 in k25665 in k25142 in k25139 in k25136 in k25133 in k25130 in k25127 in k25124 in k25121 in k25118 in k25115 in k25112 in k25109 in k25106 in k25103 in k25100 in k25097 in k25094 in k25091 in k25088 in k25085 in k25082 in k24943 in k24940 in k24937 in k24934 in k24878 in k24875 in k24872 in k24869 in k24866 in k24863 in k24860 in k24857 in k23555 in k23486 in k23293 in k23290 in k23185 in k23134 in k11783 in k10718 in k10715 in k7274 in k7271 in k6978 in k6975 in k6971 in k6680 in k6677 in k6674 in k6671 */
static void C_ccall f_24046(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 380  emit");
f_23704(((C_word*)t0)[4],((C_word*)t0)[3],t1,((C_word*)t0)[2]);}

/* a24024 in a24018 in k26282 in k26279 in k26274 in sal in k26263 in k26260 in k26257 in k26254 in k26251 in k25668 in k25665 in k25142 in k25139 in k25136 in k25133 in k25130 in k25127 in k25124 in k25121 in k25118 in k25115 in k25112 in k25109 in k25106 in k25103 in k25100 in k25097 in k25094 in k25091 in k25088 in k25085 in k25082 in k24943 in k24940 in k24937 in k24934 in k24878 in k24875 in k24872 in k24869 in k24866 in k24863 in k24860 in k24857 in k23555 in k23486 in k23293 in k23290 in k23185 in k23134 in k11783 in k10718 in k10715 in k7274 in k7271 in k6978 in k6975 in k6971 in k6680 in k6677 in k6674 in k6671 */
static void C_ccall f_24025(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word *a;
if(c!=2) C_bad_argc_2(c,2,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_24025,2,t0,t1);}
t2=lf[469]=C_fix(0);;
C_trace("ChickenBridge.scm: 380  parser");
f_24057(t1,((C_word*)t0)[4],((C_word*)t0)[3],C_SCHEME_FALSE,C_fix(0),C_SCHEME_FALSE,((C_word*)t0)[2]);}

/* k26286 in k26282 in k26279 in k26274 in sal in k26263 in k26260 in k26257 in k26254 in k26251 in k25668 in k25665 in k25142 in k25139 in k25136 in k25133 in k25130 in k25127 in k25124 in k25121 in k25118 in k25115 in k25112 in k25109 in k25106 in k25103 in k25100 in k25097 in k25094 in k25091 in k25088 in k25085 in k25082 in k24943 in k24940 in k24937 in k24934 in k24878 in k24875 in k24872 in k24869 in k24866 in k24863 in k24860 in k24857 in k23555 in k23486 in k23293 in k23290 in k23185 in k23134 in k11783 in k10718 in k10715 in k7274 in k7271 in k6978 in k6975 in k6971 in k6680 in k6677 in k6674 in k6671 */
static void C_ccall f_26288(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_26288,2,t0,t1);}
t2=C_mutate(&lf[493],t1);
t3=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_26291,a[2]=((C_word*)t0)[3],tmp=(C_word)a,a+=3,tmp);
t4=C_retrieve2(lf[493],"*sal-output*");
if(C_truep((C_word)C_i_structurep(t4,lf[436]))){
t5=C_retrieve2(lf[491],"*sal-string*");
t6=C_retrieve2(lf[493],"*sal-output*");
t7=(C_word)C_i_string_length(t5);
t8=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_26325,a[2]=t7,a[3]=t6,a[4]=t5,a[5]=t3,tmp=(C_word)a,a+=6,tmp);
C_trace("ChickenBridge.scm: 380  parse-error-position");
f_23478(t8,t6);}
else{
if(C_truep(((C_word*)t0)[2])){
C_trace("ChickenBridge.scm: 380  pp");
t5=C_retrieve(lf[499]);
((C_proc3)C_retrieve_proc(t5))(3,t5,t3,C_retrieve2(lf[493],"*sal-output*"));}
else{
C_trace("ChickenBridge.scm: 380  eval");
t5=C_retrieve(lf[500]);
((C_proc3)C_retrieve_proc(t5))(3,t5,t3,C_retrieve2(lf[493],"*sal-output*"));}}}

/* k26323 in k26286 in k26282 in k26279 in k26274 in sal in k26263 in k26260 in k26257 in k26254 in k26251 in k25668 in k25665 in k25142 in k25139 in k25136 in k25133 in k25130 in k25127 in k25124 in k25121 in k25118 in k25115 in k25112 in k25109 in k25106 in k25103 in k25100 in k25097 in k25094 in k25091 in k25088 in k25085 in k25082 in k24943 in k24940 in k24937 in k24934 in k24878 in k24875 in k24872 in k24869 in k24866 in k24863 in k24860 in k24857 in k23555 in k23486 in k23293 in k23290 in k23185 in k23134 in k11783 in k10718 in k10715 in k7274 in k7271 in k6978 in k6975 in k6971 in k6680 in k6677 in k6674 in k6671 */
static void C_ccall f_26325(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word ab[25],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_26325,2,t0,t1);}
t2=(C_word)C_a_i_minus(&a,2,t1,C_fix(1));
t3=t2;
t4=(*a=C_VECTOR_TYPE|1,a[1]=t3,tmp=(C_word)a,a+=2,tmp);
t5=C_fix(0);
t6=(*a=C_VECTOR_TYPE|1,a[1]=t5,tmp=(C_word)a,a+=2,tmp);
t7=(*a=C_CLOSURE_TYPE|8,a[1]=(C_word)f_26331,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=t1,a[7]=t6,a[8]=t4,tmp=(C_word)a,a+=9,tmp);
t8=C_SCHEME_UNDEFINED;
t9=(*a=C_VECTOR_TYPE|1,a[1]=t8,tmp=(C_word)a,a+=2,tmp);
t10=C_set_block_item(t9,0,(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_26418,a[2]=((C_word*)t0)[4],a[3]=t9,a[4]=t4,a[5]=((C_word)li399),tmp=(C_word)a,a+=6,tmp));
t11=((C_word*)t9)[1];
f_26418(t11,t7,C_SCHEME_FALSE);}

/* do4105 in k26323 in k26286 in k26282 in k26279 in k26274 in sal in k26263 in k26260 in k26257 in k26254 in k26251 in k25668 in k25665 in k25142 in k25139 in k25136 in k25133 in k25130 in k25127 in k25124 in k25121 in k25118 in k25115 in k25112 in k25109 in k25106 in k25103 in k25100 in k25097 in k25094 in k25091 in k25088 in k25085 in k25082 in k24943 in k24940 in k24937 in k24934 in k24878 in k24875 in k24872 in k24869 in k24866 in k24863 in k24860 in k24857 in k23555 in k23486 in k23293 in k23290 in k23185 in k23134 in k11783 in k10718 in k10715 in k7274 in k7271 in k6978 in k6975 in k6971 in k6680 in k6677 in k6674 in k6671 */
static void C_fcall f_26418(C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word ab[11],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_26418,NULL,3,t0,t1,t2);}
t3=(*a=C_VECTOR_TYPE|1,a[1]=t2,tmp=(C_word)a,a+=2,tmp);
t4=((C_word*)t3)[1];
t5=(C_truep(t4)?t4:(C_word)C_i_nequalp(((C_word*)((C_word*)t0)[4])[1],C_fix(-1)));
if(C_truep(t5)){
t6=t1;
((C_proc2)(void*)(*((C_word*)t6+1)))(2,t6,C_SCHEME_FALSE);}
else{
t6=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_26428,a[2]=t3,a[3]=t1,a[4]=((C_word*)t0)[3],tmp=(C_word)a,a+=5,tmp);
t7=(C_word)C_i_string_ref(((C_word*)t0)[2],((C_word*)((C_word*)t0)[4])[1]);
t8=(C_word)C_eqp(t7,C_make_character(10));
if(C_truep(t8)){
t9=C_set_block_item(t3,0,C_SCHEME_TRUE);
t10=t6;
f_26428(t10,t9);}
else{
t9=(C_word)C_a_i_minus(&a,2,((C_word*)((C_word*)t0)[4])[1],C_fix(1));
t10=C_mutate(((C_word *)((C_word*)t0)[4])+1,t9);
t11=t6;
f_26428(t11,t10);}}}

/* k26426 in do4105 in k26323 in k26286 in k26282 in k26279 in k26274 in sal in k26263 in k26260 in k26257 in k26254 in k26251 in k25668 in k25665 in k25142 in k25139 in k25136 in k25133 in k25130 in k25127 in k25124 in k25121 in k25118 in k25115 in k25112 in k25109 in k25106 in k25103 in k25100 in k25097 in k25094 in k25091 in k25088 in k25085 in k25082 in k24943 in k24940 in k24937 in k24934 in k24878 in k24875 in k24872 in k24869 in k24866 in k24863 in k24860 in k24857 in k23555 in k23486 in k23293 in k23290 in k23185 in k23134 in k11783 in k10718 in k10715 in k7274 in k7271 in k6978 in k6975 in k6971 in k6680 in k6677 in k6674 in k6671 */
static void C_fcall f_26428(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
t2=((C_word*)((C_word*)t0)[4])[1];
f_26418(t2,((C_word*)t0)[3],((C_word*)((C_word*)t0)[2])[1]);}

/* k26329 in k26323 in k26286 in k26282 in k26279 in k26274 in sal in k26263 in k26260 in k26257 in k26254 in k26251 in k25668 in k25665 in k25142 in k25139 in k25136 in k25133 in k25130 in k25127 in k25124 in k25121 in k25118 in k25115 in k25112 in k25109 in k25106 in k25103 in k25100 in k25097 in k25094 in k25091 in k25088 in k25085 in k25082 in k24943 in k24940 in k24937 in k24934 in k24878 in k24875 in k24872 in k24869 in k24866 in k24863 in k24860 in k24857 in k23555 in k23486 in k23293 in k23290 in k23185 in k23134 in k11783 in k10718 in k10715 in k7274 in k7271 in k6978 in k6975 in k6971 in k6680 in k6677 in k6674 in k6671 */
static void C_ccall f_26331(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word ab[21],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_26331,2,t0,t1);}
t2=(C_word)C_a_i_plus(&a,2,((C_word*)((C_word*)t0)[8])[1],C_fix(1));
t3=C_mutate(((C_word *)((C_word*)t0)[8])+1,t2);
t4=C_mutate(((C_word *)((C_word*)t0)[7])+1,((C_word*)t0)[6]);
t5=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_26339,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[7],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[8],a[6]=((C_word*)t0)[6],a[7]=((C_word*)t0)[5],tmp=(C_word)a,a+=8,tmp);
t6=C_SCHEME_UNDEFINED;
t7=(*a=C_VECTOR_TYPE|1,a[1]=t6,tmp=(C_word)a,a+=2,tmp);
t8=C_set_block_item(t7,0,(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_26388,a[2]=((C_word*)t0)[4],a[3]=t7,a[4]=((C_word*)t0)[2],a[5]=((C_word*)t0)[7],a[6]=((C_word)li398),tmp=(C_word)a,a+=7,tmp));
t9=((C_word*)t7)[1];
f_26388(t9,t5,C_SCHEME_FALSE);}

/* do4112 in k26329 in k26323 in k26286 in k26282 in k26279 in k26274 in sal in k26263 in k26260 in k26257 in k26254 in k26251 in k25668 in k25665 in k25142 in k25139 in k25136 in k25133 in k25130 in k25127 in k25124 in k25121 in k25118 in k25115 in k25112 in k25109 in k25106 in k25103 in k25100 in k25097 in k25094 in k25091 in k25088 in k25085 in k25082 in k24943 in k24940 in k24937 in k24934 in k24878 in k24875 in k24872 in k24869 in k24866 in k24863 in k24860 in k24857 in k23555 in k23486 in k23293 in k23290 in k23185 in k23134 in k11783 in k10718 in k10715 in k7274 in k7271 in k6978 in k6975 in k6971 in k6680 in k6677 in k6674 in k6671 */
static void C_fcall f_26388(C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word ab[11],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_26388,NULL,3,t0,t1,t2);}
t3=(*a=C_VECTOR_TYPE|1,a[1]=t2,tmp=(C_word)a,a+=2,tmp);
t4=((C_word*)t3)[1];
t5=(C_truep(t4)?t4:(C_word)C_i_nequalp(((C_word*)((C_word*)t0)[5])[1],((C_word*)t0)[4]));
if(C_truep(t5)){
t6=t1;
((C_proc2)(void*)(*((C_word*)t6+1)))(2,t6,C_SCHEME_FALSE);}
else{
t6=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_26398,a[2]=t3,a[3]=t1,a[4]=((C_word*)t0)[3],tmp=(C_word)a,a+=5,tmp);
t7=(C_word)C_i_string_ref(((C_word*)t0)[2],((C_word*)((C_word*)t0)[5])[1]);
t8=(C_word)C_eqp(t7,C_make_character(10));
if(C_truep(t8)){
t9=C_set_block_item(t3,0,C_SCHEME_TRUE);
t10=t6;
f_26398(t10,t9);}
else{
t9=(C_word)C_a_i_plus(&a,2,((C_word*)((C_word*)t0)[5])[1],C_fix(1));
t10=C_mutate(((C_word *)((C_word*)t0)[5])+1,t9);
t11=t6;
f_26398(t11,t10);}}}

/* k26396 in do4112 in k26329 in k26323 in k26286 in k26282 in k26279 in k26274 in sal in k26263 in k26260 in k26257 in k26254 in k26251 in k25668 in k25665 in k25142 in k25139 in k25136 in k25133 in k25130 in k25127 in k25124 in k25121 in k25118 in k25115 in k25112 in k25109 in k25106 in k25103 in k25100 in k25097 in k25094 in k25091 in k25088 in k25085 in k25082 in k24943 in k24940 in k24937 in k24934 in k24878 in k24875 in k24872 in k24869 in k24866 in k24863 in k24860 in k24857 in k23555 in k23486 in k23293 in k23290 in k23185 in k23134 in k11783 in k10718 in k10715 in k7274 in k7271 in k6978 in k6975 in k6971 in k6680 in k6677 in k6674 in k6671 */
static void C_fcall f_26398(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
t2=((C_word*)((C_word*)t0)[4])[1];
f_26388(t2,((C_word*)t0)[3],((C_word*)((C_word*)t0)[2])[1]);}

/* k26337 in k26329 in k26323 in k26286 in k26282 in k26279 in k26274 in sal in k26263 in k26260 in k26257 in k26254 in k26251 in k25668 in k25665 in k25142 in k25139 in k25136 in k25133 in k25130 in k25127 in k25124 in k25121 in k25118 in k25115 in k25112 in k25109 in k25106 in k25103 in k25100 in k25097 in k25094 in k25091 in k25088 in k25085 in k25082 in k24943 in k24940 in k24937 in k24934 in k24878 in k24875 in k24872 in k24869 in k24866 in k24863 in k24860 in k24857 in k23555 in k23486 in k23293 in k23290 in k23185 in k23134 in k11783 in k10718 in k10715 in k7274 in k7271 in k6978 in k6975 in k6971 in k6680 in k6677 in k6674 in k6671 */
static void C_ccall f_26339(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[13],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_26339,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_26342,a[2]=((C_word*)t0)[7],tmp=(C_word)a,a+=3,tmp);
t3=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_26349,a[2]=t2,tmp=(C_word)a,a+=3,tmp);
t4=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_26353,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=t3,a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],tmp=(C_word)a,a+=7,tmp);
C_trace("ChickenBridge.scm: 380  parse-error-string");
f_23460(t4,((C_word*)t0)[2]);}

/* k26351 in k26337 in k26329 in k26323 in k26286 in k26282 in k26279 in k26274 in sal in k26263 in k26260 in k26257 in k26254 in k26251 in k25668 in k25665 in k25142 in k25139 in k25136 in k25133 in k25130 in k25127 in k25124 in k25121 in k25118 in k25115 in k25112 in k25109 in k25106 in k25103 in k25100 in k25097 in k25094 in k25091 in k25088 in k25085 in k25082 in k24943 in k24940 in k24937 in k24934 in k24878 in k24875 in k24872 in k24869 in k24866 in k24863 in k24860 in k24857 in k23555 in k23486 in k23293 in k23290 in k23185 in k23134 in k11783 in k10718 in k10715 in k7274 in k7271 in k6978 in k6975 in k6971 in k6680 in k6677 in k6674 in k6671 */
static void C_ccall f_26353(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[8],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_26353,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_26357,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=t1,a[5]=((C_word*)t0)[4],a[6]=((C_word*)t0)[5],a[7]=((C_word*)t0)[6],tmp=(C_word)a,a+=8,tmp);
C_trace("ChickenBridge.scm: 380  make-string");
t3=*((C_word*)lf[407]+1);
((C_proc4)C_retrieve_proc(t3))(4,t3,t2,C_fix(1),C_make_character(10));}

/* k26355 in k26351 in k26337 in k26329 in k26323 in k26286 in k26282 in k26279 in k26274 in sal in k26263 in k26260 in k26257 in k26254 in k26251 in k25668 in k25665 in k25142 in k25139 in k25136 in k25133 in k25130 in k25127 in k25124 in k25121 in k25118 in k25115 in k25112 in k25109 in k25106 in k25103 in k25100 in k25097 in k25094 in k25091 in k25088 in k25085 in k25082 in k24943 in k24940 in k24937 in k24934 in k24878 in k24875 in k24872 in k24869 in k24866 in k24863 in k24860 in k24857 in k23555 in k23486 in k23293 in k23290 in k23185 in k23134 in k11783 in k10718 in k10715 in k7274 in k7271 in k6978 in k6975 in k6971 in k6680 in k6677 in k6674 in k6671 */
static void C_ccall f_26357(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_26357,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_26361,a[2]=t1,a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
C_trace("ChickenBridge.scm: 380  substring");
t3=*((C_word*)lf[498]+1);
((C_proc5)C_retrieve_proc(t3))(5,t3,t2,((C_word*)t0)[3],((C_word*)((C_word*)t0)[6])[1],((C_word*)((C_word*)t0)[2])[1]);}

/* k26359 in k26355 in k26351 in k26337 in k26329 in k26323 in k26286 in k26282 in k26279 in k26274 in sal in k26263 in k26260 in k26257 in k26254 in k26251 in k25668 in k25665 in k25142 in k25139 in k25136 in k25133 in k25130 in k25127 in k25124 in k25121 in k25118 in k25115 in k25112 in k25109 in k25106 in k25103 in k25100 in k25097 in k25094 in k25091 in k25088 in k25085 in k25082 in k24943 in k24940 in k24937 in k24934 in k24878 in k24875 in k24872 in k24869 in k24866 in k24863 in k24860 in k24857 in k23555 in k23486 in k23293 in k23290 in k23185 in k23134 in k11783 in k10718 in k10715 in k7274 in k7271 in k6978 in k6975 in k6971 in k6680 in k6677 in k6674 in k6671 */
static void C_ccall f_26361(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[8],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_26361,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_26365,a[2]=t1,a[3]=((C_word*)t0)[2],a[4]=((C_word*)t0)[3],a[5]=((C_word*)t0)[4],a[6]=((C_word*)t0)[5],a[7]=((C_word*)t0)[6],tmp=(C_word)a,a+=8,tmp);
C_trace("ChickenBridge.scm: 380  make-string");
t3=*((C_word*)lf[407]+1);
((C_proc4)C_retrieve_proc(t3))(4,t3,t2,C_fix(1),C_make_character(10));}

/* k26363 in k26359 in k26355 in k26351 in k26337 in k26329 in k26323 in k26286 in k26282 in k26279 in k26274 in sal in k26263 in k26260 in k26257 in k26254 in k26251 in k25668 in k25665 in k25142 in k25139 in k25136 in k25133 in k25130 in k25127 in k25124 in k25121 in k25118 in k25115 in k25112 in k25109 in k25106 in k25103 in k25100 in k25097 in k25094 in k25091 in k25088 in k25085 in k25082 in k24943 in k24940 in k24937 in k24934 in k24878 in k24875 in k24872 in k24869 in k24866 in k24863 in k24860 in k24857 in k23555 in k23486 in k23293 in k23290 in k23185 in k23134 in k11783 in k10718 in k10715 in k7274 in k7271 in k6978 in k6975 in k6971 in k6680 in k6677 in k6674 in k6671 */
static void C_ccall f_26365(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[16],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_26365,2,t0,t1);}
t2=(C_word)C_a_i_minus(&a,2,((C_word*)t0)[7],((C_word*)((C_word*)t0)[6])[1]);
t3=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_26372,a[2]=t1,a[3]=((C_word*)t0)[2],a[4]=((C_word*)t0)[3],a[5]=((C_word*)t0)[4],a[6]=((C_word*)t0)[5],a[7]=t2,tmp=(C_word)a,a+=8,tmp);
t4=(C_word)C_a_i_plus(&a,2,t2,C_fix(2));
C_trace("ChickenBridge.scm: 380  make-string");
t5=*((C_word*)lf[407]+1);
((C_proc4)C_retrieve_proc(t5))(4,t5,t3,t4,C_make_character(32));}

/* k26370 in k26363 in k26359 in k26355 in k26351 in k26337 in k26329 in k26323 in k26286 in k26282 in k26279 in k26274 in sal in k26263 in k26260 in k26257 in k26254 in k26251 in k25668 in k25665 in k25142 in k25139 in k25136 in k25133 in k25130 in k25127 in k25124 in k25121 in k25118 in k25115 in k25112 in k25109 in k25106 in k25103 in k25100 in k25097 in k25094 in k25091 in k25088 in k25085 in k25082 in k24943 in k24940 in k24937 in k24934 in k24878 in k24875 in k24872 in k24869 in k24866 in k24863 in k24860 in k24857 in k23555 in k23486 in k23293 in k23290 in k23185 in k23134 in k11783 in k10718 in k10715 in k7274 in k7271 in k6978 in k6975 in k6971 in k6680 in k6677 in k6674 in k6671 */
static void C_ccall f_26372(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[4],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_26372,2,t0,t1);}
t2=(C_word)C_i_string_set(t1,((C_word*)t0)[7],C_make_character(94));
t3=(C_word)C_a_i_plus(&a,2,((C_word*)t0)[7],C_fix(1));
t4=(C_word)C_i_string_set(t1,t3,C_make_character(10));
C_trace("ChickenBridge.scm: 380  string-append");
t5=*((C_word*)lf[53]+1);
((C_proc8)C_retrieve_proc(t5))(8,t5,((C_word*)t0)[6],lf[497],((C_word*)t0)[5],((C_word*)t0)[4],((C_word*)t0)[3],((C_word*)t0)[2],t1);}

/* k26347 in k26337 in k26329 in k26323 in k26286 in k26282 in k26279 in k26274 in sal in k26263 in k26260 in k26257 in k26254 in k26251 in k25668 in k25665 in k25142 in k25139 in k25136 in k25133 in k25130 in k25127 in k25124 in k25121 in k25118 in k25115 in k25112 in k25109 in k25106 in k25103 in k25100 in k25097 in k25094 in k25091 in k25088 in k25085 in k25082 in k24943 in k24940 in k24937 in k24934 in k24878 in k24875 in k24872 in k24869 in k24866 in k24863 in k24860 in k24857 in k23555 in k23486 in k23293 in k23290 in k23185 in k23134 in k11783 in k10718 in k10715 in k7274 in k7271 in k6978 in k6975 in k6971 in k6680 in k6677 in k6674 in k6671 */
static void C_ccall f_26349(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 380  print-error");
t2=C_retrieve(lf[496]);
((C_proc3)C_retrieve_proc(t2))(3,t2,((C_word*)t0)[2],t1);}

/* k26340 in k26337 in k26329 in k26323 in k26286 in k26282 in k26279 in k26274 in sal in k26263 in k26260 in k26257 in k26254 in k26251 in k25668 in k25665 in k25142 in k25139 in k25136 in k25133 in k25130 in k25127 in k25124 in k25121 in k25118 in k25115 in k25112 in k25109 in k25106 in k25103 in k25100 in k25097 in k25094 in k25091 in k25088 in k25085 in k25082 in k24943 in k24940 in k24937 in k24934 in k24878 in k24875 in k24872 in k24869 in k24866 in k24863 in k24860 in k24857 in k23555 in k23486 in k23293 in k23290 in k23185 in k23134 in k11783 in k10718 in k10715 in k7274 in k7271 in k6978 in k6975 in k6971 in k6680 in k6677 in k6674 in k6671 */
static void C_ccall f_26342(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 380  values");
C_values(2,0,((C_word*)t0)[2]);}

/* k26289 in k26286 in k26282 in k26279 in k26274 in sal in k26263 in k26260 in k26257 in k26254 in k26251 in k25668 in k25665 in k25142 in k25139 in k25136 in k25133 in k25130 in k25127 in k25124 in k25121 in k25118 in k25115 in k25112 in k25109 in k25106 in k25103 in k25100 in k25097 in k25094 in k25091 in k25088 in k25085 in k25082 in k24943 in k24940 in k24937 in k24934 in k24878 in k24875 in k24872 in k24869 in k24866 in k24863 in k24860 in k24857 in k23555 in k23486 in k23293 in k23290 in k23185 in k23134 in k11783 in k10718 in k10715 in k7274 in k7271 in k6978 in k6975 in k6971 in k6680 in k6677 in k6674 in k6671 */
static void C_ccall f_26291(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 380  values");
C_values(2,0,((C_word*)t0)[2]);}

/* sal-parse-stepping in k25142 in k25139 in k25136 in k25133 in k25130 in k25127 in k25124 in k25121 in k25118 in k25115 in k25112 in k25109 in k25106 in k25103 in k25100 in k25097 in k25094 in k25091 in k25088 in k25085 in k25082 in k24943 in k24940 in k24937 in k24934 in k24878 in k24875 in k24872 in k24869 in k24866 in k24863 in k24860 in k24857 in k23555 in k23486 in k23293 in k23290 in k23185 in k23134 in k11783 in k10718 in k10715 in k7274 in k7271 in k6978 in k6975 in k6971 in k6680 in k6677 in k6674 in k6671 */
static void C_ccall f_25146(C_word c,C_word t0,C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word t14;
C_word t15;
C_word t16;
C_word t17;
C_word t18;
C_word t19;
C_word t20;
C_word t21;
C_word t22;
C_word t23;
C_word t24;
C_word t25;
C_word t26;
C_word t27;
C_word t28;
C_word t29;
C_word t30;
C_word t31;
C_word t32;
C_word t33;
C_word t34;
C_word t35;
C_word ab[51],*a=ab;
if(c!=4) C_bad_argc_2(c,4,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr4,(void*)f_25146,4,t0,t1,t2,t3);}
t4=C_SCHEME_END_OF_LIST;
t5=(*a=C_VECTOR_TYPE|1,a[1]=t4,tmp=(C_word)a,a+=2,tmp);
t6=C_SCHEME_FALSE;
t7=(*a=C_VECTOR_TYPE|1,a[1]=t6,tmp=(C_word)a,a+=2,tmp);
t8=C_SCHEME_FALSE;
t9=(*a=C_VECTOR_TYPE|1,a[1]=t8,tmp=(C_word)a,a+=2,tmp);
t10=C_SCHEME_FALSE;
t11=(*a=C_VECTOR_TYPE|1,a[1]=t10,tmp=(C_word)a,a+=2,tmp);
t12=C_SCHEME_FALSE;
t13=(*a=C_VECTOR_TYPE|1,a[1]=t12,tmp=(C_word)a,a+=2,tmp);
t14=C_SCHEME_FALSE;
t15=(*a=C_VECTOR_TYPE|1,a[1]=t14,tmp=(C_word)a,a+=2,tmp);
t16=C_SCHEME_FALSE;
t17=(*a=C_VECTOR_TYPE|1,a[1]=t16,tmp=(C_word)a,a+=2,tmp);
t18=C_SCHEME_FALSE;
t19=(*a=C_VECTOR_TYPE|1,a[1]=t18,tmp=(C_word)a,a+=2,tmp);
t20=C_SCHEME_FALSE;
t21=(*a=C_VECTOR_TYPE|1,a[1]=t20,tmp=(C_word)a,a+=2,tmp);
t22=C_SCHEME_FALSE;
t23=(*a=C_VECTOR_TYPE|1,a[1]=t22,tmp=(C_word)a,a+=2,tmp);
t24=C_SCHEME_FALSE;
t25=(*a=C_VECTOR_TYPE|1,a[1]=t24,tmp=(C_word)a,a+=2,tmp);
t26=C_SCHEME_FALSE;
t27=(*a=C_VECTOR_TYPE|1,a[1]=t26,tmp=(C_word)a,a+=2,tmp);
t28=C_SCHEME_FALSE;
t29=(*a=C_VECTOR_TYPE|1,a[1]=t28,tmp=(C_word)a,a+=2,tmp);
t30=C_SCHEME_FALSE;
t31=(*a=C_VECTOR_TYPE|1,a[1]=t30,tmp=(C_word)a,a+=2,tmp);
t32=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_25153,a[2]=t5,a[3]=t1,tmp=(C_word)a,a+=4,tmp);
t33=(*a=C_CLOSURE_TYPE|18,a[1]=(C_word)f_25159,a[2]=t27,a[3]=t25,a[4]=t29,a[5]=t31,a[6]=t23,a[7]=t19,a[8]=t17,a[9]=t21,a[10]=t15,a[11]=t7,a[12]=t3,a[13]=t2,a[14]=t32,a[15]=t5,a[16]=t13,a[17]=t11,a[18]=t9,tmp=(C_word)a,a+=19,tmp);
t34=(C_word)C_i_car(t2);
C_trace("ChickenBridge.scm: 380  token-unit-type=?");
f_23575(t33,t34,C_fix(23296));}

/* k25157 in sal-parse-stepping in k25142 in k25139 in k25136 in k25133 in k25130 in k25127 in k25124 in k25121 in k25118 in k25115 in k25112 in k25109 in k25106 in k25103 in k25100 in k25097 in k25094 in k25091 in k25088 in k25085 in k25082 in k24943 in k24940 in k24937 in k24934 in k24878 in k24875 in k24872 in k24869 in k24866 in k24863 in k24860 in k24857 in k23555 in k23486 in k23293 in k23290 in k23185 in k23134 in k11783 in k10718 in k10715 in k7274 in k7271 in k6978 in k6975 in k6971 in k6680 in k6677 in k6674 in k6671 */
static void C_ccall f_25159(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[25],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_25159,2,t0,t1);}
if(C_truep(t1)){
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_25163,a[2]=((C_word*)t0)[14],a[3]=((C_word*)t0)[15],a[4]=((C_word*)t0)[16],a[5]=((C_word*)t0)[17],a[6]=((C_word*)t0)[18],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cadr(((C_word*)t0)[13]);
C_trace("ChickenBridge.scm: 380  emit");
f_23704(t2,t3,C_SCHEME_END_OF_LIST,((C_word*)t0)[12]);}
else{
t2=(*a=C_CLOSURE_TYPE|17,a[1]=(C_word)f_25209,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[16],a[5]=((C_word*)t0)[4],a[6]=((C_word*)t0)[5],a[7]=((C_word*)t0)[6],a[8]=((C_word*)t0)[7],a[9]=((C_word*)t0)[13],a[10]=((C_word*)t0)[12],a[11]=((C_word*)t0)[8],a[12]=((C_word*)t0)[9],a[13]=((C_word*)t0)[14],a[14]=((C_word*)t0)[15],a[15]=((C_word*)t0)[10],a[16]=((C_word*)t0)[18],a[17]=((C_word*)t0)[11],tmp=(C_word)a,a+=18,tmp);
t3=(C_word)C_i_caddr(((C_word*)t0)[13]);
C_trace("ChickenBridge.scm: 380  token-unit-type=?");
f_23575(t2,t3,C_fix(10756));}}

/* k25207 in k25157 in sal-parse-stepping in k25142 in k25139 in k25136 in k25133 in k25130 in k25127 in k25124 in k25121 in k25118 in k25115 in k25112 in k25109 in k25106 in k25103 in k25100 in k25097 in k25094 in k25091 in k25088 in k25085 in k25082 in k24943 in k24940 in k24937 in k24934 in k24878 in k24875 in k24872 in k24869 in k24866 in k24863 in k24860 in k24857 in k23555 in k23486 in k23293 in k23290 in k23185 in k23134 in k11783 in k10718 in k10715 in k7274 in k7271 in k6978 in k6975 in k6971 in k6680 in k6677 in k6674 in k6671 */
static void C_ccall f_25209(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[26],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_25209,2,t0,t1);}
if(C_truep(t1)){
t2=(*a=C_CLOSURE_TYPE|10,a[1]=(C_word)f_25213,a[2]=((C_word*)t0)[9],a[3]=((C_word*)t0)[10],a[4]=((C_word*)t0)[11],a[5]=((C_word*)t0)[12],a[6]=((C_word*)t0)[13],a[7]=((C_word*)t0)[14],a[8]=((C_word*)t0)[15],a[9]=((C_word*)t0)[16],a[10]=((C_word*)t0)[17],tmp=(C_word)a,a+=11,tmp);
t3=(C_word)C_i_cadr(((C_word*)t0)[9]);
C_trace("ChickenBridge.scm: 380  emit");
f_23704(t2,t3,C_SCHEME_END_OF_LIST,((C_word*)t0)[10]);}
else{
t2=(*a=C_CLOSURE_TYPE|14,a[1]=(C_word)f_25306,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],a[7]=((C_word*)t0)[7],a[8]=((C_word*)t0)[10],a[9]=((C_word*)t0)[9],a[10]=((C_word*)t0)[13],a[11]=((C_word*)t0)[14],a[12]=((C_word*)t0)[8],a[13]=((C_word*)t0)[16],a[14]=((C_word*)t0)[17],tmp=(C_word)a,a+=15,tmp);
t3=(C_word)C_i_caddr(((C_word*)t0)[9]);
C_trace("ChickenBridge.scm: 380  token-unit-type=?");
f_23575(t2,t3,C_fix(22784));}}

/* k25304 in k25207 in k25157 in sal-parse-stepping in k25142 in k25139 in k25136 in k25133 in k25130 in k25127 in k25124 in k25121 in k25118 in k25115 in k25112 in k25109 in k25106 in k25103 in k25100 in k25097 in k25094 in k25091 in k25088 in k25085 in k25082 in k24943 in k24940 in k24937 in k24934 in k24878 in k24875 in k24872 in k24869 in k24866 in k24863 in k24860 in k24857 in k23555 in k23486 in k23293 in k23290 in k23185 in k23134 in k11783 in k10718 in k10715 in k7274 in k7271 in k6978 in k6975 in k6971 in k6680 in k6677 in k6674 in k6671 */
static void C_ccall f_25306(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word ab[22],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_25306,2,t0,t1);}
if(C_truep(t1)){
t2=(*a=C_CLOSURE_TYPE|8,a[1]=(C_word)f_25310,a[2]=((C_word*)t0)[8],a[3]=((C_word*)t0)[9],a[4]=((C_word*)t0)[10],a[5]=((C_word*)t0)[11],a[6]=((C_word*)t0)[12],a[7]=((C_word*)t0)[13],a[8]=((C_word*)t0)[14],tmp=(C_word)a,a+=9,tmp);
t3=(C_word)C_i_cadr(((C_word*)t0)[9]);
C_trace("ChickenBridge.scm: 380  emit");
f_23704(t2,t3,C_SCHEME_END_OF_LIST,((C_word*)t0)[8]);}
else{
t2=(C_word)C_i_length(((C_word*)t0)[9]);
t3=C_mutate(((C_word *)((C_word*)t0)[7])+1,t2);
t4=(*a=C_CLOSURE_TYPE|12,a[1]=(C_word)f_25374,a[2]=((C_word*)t0)[8],a[3]=((C_word*)t0)[2],a[4]=((C_word*)t0)[3],a[5]=((C_word*)t0)[4],a[6]=((C_word*)t0)[5],a[7]=((C_word*)t0)[10],a[8]=((C_word*)t0)[11],a[9]=((C_word*)t0)[6],a[10]=((C_word*)t0)[9],a[11]=((C_word*)t0)[7],a[12]=((C_word*)t0)[14],tmp=(C_word)a,a+=13,tmp);
t5=(C_word)C_i_cadr(((C_word*)t0)[9]);
C_trace("ChickenBridge.scm: 380  emit");
f_23704(t4,t5,C_SCHEME_END_OF_LIST,((C_word*)t0)[8]);}}

/* k25372 in k25304 in k25207 in k25157 in sal-parse-stepping in k25142 in k25139 in k25136 in k25133 in k25130 in k25127 in k25124 in k25121 in k25118 in k25115 in k25112 in k25109 in k25106 in k25103 in k25100 in k25097 in k25094 in k25091 in k25088 in k25085 in k25082 in k24943 in k24940 in k24937 in k24934 in k24878 in k24875 in k24872 in k24869 in k24866 in k24863 in k24860 in k24857 in k23555 in k23486 in k23293 in k23290 in k23185 in k23134 in k11783 in k10718 in k10715 in k7274 in k7271 in k6978 in k6975 in k6971 in k6680 in k6677 in k6674 in k6671 */
static void C_ccall f_25374(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word ab[21],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_25374,2,t0,t1);}
t2=C_mutate(((C_word *)((C_word*)t0)[12])+1,t1);
t3=(C_word)C_a_i_minus(&a,2,((C_word*)((C_word*)t0)[11])[1],C_fix(1));
t4=(C_word)C_i_list_ref(((C_word*)t0)[10],t3);
t5=C_mutate(((C_word *)((C_word*)t0)[9])+1,t4);
t6=(*a=C_CLOSURE_TYPE|12,a[1]=(C_word)f_25381,a[2]=((C_word*)t0)[10],a[3]=((C_word*)t0)[2],a[4]=((C_word*)t0)[11],a[5]=((C_word*)t0)[3],a[6]=((C_word*)t0)[4],a[7]=((C_word*)t0)[5],a[8]=((C_word*)t0)[9],a[9]=((C_word*)t0)[6],a[10]=((C_word*)t0)[12],a[11]=((C_word*)t0)[7],a[12]=((C_word*)t0)[8],tmp=(C_word)a,a+=13,tmp);
if(C_truep(((C_word*)((C_word*)t0)[9])[1])){
t7=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_25631,a[2]=t6,a[3]=((C_word*)t0)[9],tmp=(C_word)a,a+=4,tmp);
t8=(C_word)C_i_cadr(((C_word*)((C_word*)t0)[9])[1]);
C_trace("ChickenBridge.scm: 380  emit");
f_23704(t7,t8,C_SCHEME_END_OF_LIST,((C_word*)t0)[2]);}
else{
t7=C_set_block_item(((C_word*)t0)[9],0,C_fix(1));
t8=t6;
f_25381(t8,t7);}}

/* k25629 in k25372 in k25304 in k25207 in k25157 in sal-parse-stepping in k25142 in k25139 in k25136 in k25133 in k25130 in k25127 in k25124 in k25121 in k25118 in k25115 in k25112 in k25109 in k25106 in k25103 in k25100 in k25097 in k25094 in k25091 in k25088 in k25085 in k25082 in k24943 in k24940 in k24937 in k24934 in k24878 in k24875 in k24872 in k24869 in k24866 in k24863 in k24860 in k24857 in k23555 in k23486 in k23293 in k23290 in k23185 in k23134 in k11783 in k10718 in k10715 in k7274 in k7271 in k6978 in k6975 in k6971 in k6680 in k6677 in k6674 in k6671 */
static void C_ccall f_25631(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[3])+1,t1);
t3=((C_word*)t0)[2];
f_25381(t3,t2);}

/* k25379 in k25372 in k25304 in k25207 in k25157 in sal-parse-stepping in k25142 in k25139 in k25136 in k25133 in k25130 in k25127 in k25124 in k25121 in k25118 in k25115 in k25112 in k25109 in k25106 in k25103 in k25100 in k25097 in k25094 in k25091 in k25088 in k25085 in k25082 in k24943 in k24940 in k24937 in k24934 in k24878 in k24875 in k24872 in k24869 in k24866 in k24863 in k24860 in k24857 in k23555 in k23486 in k23293 in k23290 in k23185 in k23134 in k11783 in k10718 in k10715 in k7274 in k7271 in k6978 in k6975 in k6971 in k6680 in k6677 in k6674 in k6671 */
static void C_fcall f_25381(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word ab[22],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_25381,NULL,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|9,a[1]=(C_word)f_25384,a[2]=((C_word*)t0)[5],a[3]=((C_word*)t0)[6],a[4]=((C_word*)t0)[7],a[5]=((C_word*)t0)[8],a[6]=((C_word*)t0)[9],a[7]=((C_word*)t0)[10],a[8]=((C_word*)t0)[11],a[9]=((C_word*)t0)[12],tmp=(C_word)a,a+=10,tmp);
if(C_truep((C_word)C_i_nequalp(((C_word*)((C_word*)t0)[4])[1],C_fix(6)))){
t3=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_25570,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=t2,a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],a[7]=((C_word*)t0)[9],tmp=(C_word)a,a+=8,tmp);
t4=(C_word)C_i_cadddr(((C_word*)t0)[2]);
C_trace("ChickenBridge.scm: 380  emit");
f_23704(t3,t4,C_SCHEME_END_OF_LIST,((C_word*)t0)[3]);}
else{
t3=C_set_block_item(((C_word*)t0)[9],0,C_fix(0));
t4=(C_word)C_i_caddr(((C_word*)t0)[2]);
t5=C_mutate(((C_word *)((C_word*)t0)[6])+1,t4);
t6=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_25619,a[2]=t2,a[3]=((C_word*)t0)[5],tmp=(C_word)a,a+=4,tmp);
t7=(C_word)C_i_cadddr(((C_word*)t0)[2]);
C_trace("ChickenBridge.scm: 380  emit");
f_23704(t6,t7,C_SCHEME_END_OF_LIST,((C_word*)t0)[3]);}}

/* k25617 in k25379 in k25372 in k25304 in k25207 in k25157 in sal-parse-stepping in k25142 in k25139 in k25136 in k25133 in k25130 in k25127 in k25124 in k25121 in k25118 in k25115 in k25112 in k25109 in k25106 in k25103 in k25100 in k25097 in k25094 in k25091 in k25088 in k25085 in k25082 in k24943 in k24940 in k24937 in k24934 in k24878 in k24875 in k24872 in k24869 in k24866 in k24863 in k24860 in k24857 in k23555 in k23486 in k23293 in k23290 in k23185 in k23134 in k11783 in k10718 in k10715 in k7274 in k7271 in k6978 in k6975 in k6971 in k6680 in k6677 in k6674 in k6671 */
static void C_ccall f_25619(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[3])+1,t1);
t3=((C_word*)t0)[2];
f_25384(t3,t2);}

/* k25568 in k25379 in k25372 in k25304 in k25207 in k25157 in sal-parse-stepping in k25142 in k25139 in k25136 in k25133 in k25130 in k25127 in k25124 in k25121 in k25118 in k25115 in k25112 in k25109 in k25106 in k25103 in k25100 in k25097 in k25094 in k25091 in k25088 in k25085 in k25082 in k24943 in k24940 in k24937 in k24934 in k24878 in k24875 in k24872 in k24869 in k24866 in k24863 in k24860 in k24857 in k23555 in k23486 in k23293 in k23290 in k23185 in k23134 in k11783 in k10718 in k10715 in k7274 in k7271 in k6978 in k6975 in k6971 in k6680 in k6677 in k6674 in k6671 */
static void C_ccall f_25570(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_25570,2,t0,t1);}
t2=C_mutate(((C_word *)((C_word*)t0)[7])+1,t1);
t3=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_25576,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],tmp=(C_word)a,a+=7,tmp);
C_trace("ChickenBridge.scm: 380  fifth");
t4=C_retrieve(lf[66]);
((C_proc3)C_retrieve_proc(t4))(3,t4,t3,((C_word*)t0)[2]);}

/* k25574 in k25568 in k25379 in k25372 in k25304 in k25207 in k25157 in sal-parse-stepping in k25142 in k25139 in k25136 in k25133 in k25130 in k25127 in k25124 in k25121 in k25118 in k25115 in k25112 in k25109 in k25106 in k25103 in k25100 in k25097 in k25094 in k25091 in k25088 in k25085 in k25082 in k24943 in k24940 in k24937 in k24934 in k24878 in k24875 in k24872 in k24869 in k24866 in k24863 in k24860 in k24857 in k23555 in k23486 in k23293 in k23290 in k23185 in k23134 in k11783 in k10718 in k10715 in k7274 in k7271 in k6978 in k6975 in k6971 in k6680 in k6677 in k6674 in k6671 */
static void C_ccall f_25576(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_25576,2,t0,t1);}
if(C_truep(t1)){
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_25600,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],tmp=(C_word)a,a+=7,tmp);
C_trace("ChickenBridge.scm: 380  fifth");
t3=C_retrieve(lf[66]);
((C_proc3)C_retrieve_proc(t3))(3,t3,t2,((C_word*)t0)[2]);}
else{
t2=C_set_block_item(((C_word*)t0)[6],0,C_SCHEME_FALSE);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_FALSE);
t4=((C_word*)t0)[4];
f_25384(t4,t3);}}

/* k25598 in k25574 in k25568 in k25379 in k25372 in k25304 in k25207 in k25157 in sal-parse-stepping in k25142 in k25139 in k25136 in k25133 in k25130 in k25127 in k25124 in k25121 in k25118 in k25115 in k25112 in k25109 in k25106 in k25103 in k25100 in k25097 in k25094 in k25091 in k25088 in k25085 in k25082 in k24943 in k24940 in k24937 in k24934 in k24878 in k24875 in k24872 in k24869 in k24866 in k24863 in k24860 in k24857 in k23555 in k23486 in k23293 in k23290 in k23185 in k23134 in k11783 in k10718 in k10715 in k7274 in k7271 in k6978 in k6975 in k6971 in k6680 in k6677 in k6674 in k6671 */
static void C_ccall f_25600(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[8],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_25600,2,t0,t1);}
t2=(C_word)C_i_car(t1);
t3=C_mutate(((C_word *)((C_word*)t0)[6])+1,t2);
t4=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_25584,a[2]=((C_word*)t0)[4],a[3]=((C_word*)t0)[5],tmp=(C_word)a,a+=4,tmp);
t5=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_25596,a[2]=((C_word*)t0)[3],a[3]=t4,tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 380  fifth");
t6=C_retrieve(lf[66]);
((C_proc3)C_retrieve_proc(t6))(3,t6,t5,((C_word*)t0)[2]);}

/* k25594 in k25598 in k25574 in k25568 in k25379 in k25372 in k25304 in k25207 in k25157 in sal-parse-stepping in k25142 in k25139 in k25136 in k25133 in k25130 in k25127 in k25124 in k25121 in k25118 in k25115 in k25112 in k25109 in k25106 in k25103 in k25100 in k25097 in k25094 in k25091 in k25088 in k25085 in k25082 in k24943 in k24940 in k24937 in k24934 in k24878 in k24875 in k24872 in k24869 in k24866 in k24863 in k24860 in k24857 in k23555 in k23486 in k23293 in k23290 in k23185 in k23134 in k11783 in k10718 in k10715 in k7274 in k7271 in k6978 in k6975 in k6971 in k6680 in k6677 in k6674 in k6671 */
static void C_ccall f_25596(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word *a;
t2=(C_word)C_i_cadr(t1);
C_trace("ChickenBridge.scm: 380  emit");
f_23704(((C_word*)t0)[3],t2,C_SCHEME_END_OF_LIST,((C_word*)t0)[2]);}

/* k25582 in k25598 in k25574 in k25568 in k25379 in k25372 in k25304 in k25207 in k25157 in sal-parse-stepping in k25142 in k25139 in k25136 in k25133 in k25130 in k25127 in k25124 in k25121 in k25118 in k25115 in k25112 in k25109 in k25106 in k25103 in k25100 in k25097 in k25094 in k25091 in k25088 in k25085 in k25082 in k24943 in k24940 in k24937 in k24934 in k24878 in k24875 in k24872 in k24869 in k24866 in k24863 in k24860 in k24857 in k23555 in k23486 in k23293 in k23290 in k23185 in k23134 in k11783 in k10718 in k10715 in k7274 in k7271 in k6978 in k6975 in k6971 in k6680 in k6677 in k6674 in k6671 */
static void C_ccall f_25584(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[3])+1,t1);
t3=((C_word*)t0)[2];
f_25384(t3,t2);}

/* k25382 in k25379 in k25372 in k25304 in k25207 in k25157 in sal-parse-stepping in k25142 in k25139 in k25136 in k25133 in k25130 in k25127 in k25124 in k25121 in k25118 in k25115 in k25112 in k25109 in k25106 in k25103 in k25100 in k25097 in k25094 in k25091 in k25088 in k25085 in k25082 in k24943 in k24940 in k24937 in k24934 in k24878 in k24875 in k24872 in k24869 in k24866 in k24863 in k24860 in k24857 in k23555 in k23486 in k23293 in k23290 in k23185 in k23134 in k11783 in k10718 in k10715 in k7274 in k7271 in k6978 in k6975 in k6971 in k6680 in k6677 in k6674 in k6671 */
static void C_fcall f_25384(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[15],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_25384,NULL,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|9,a[1]=(C_word)f_25387,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],a[7]=((C_word*)t0)[7],a[8]=((C_word*)t0)[8],a[9]=((C_word*)t0)[9],tmp=(C_word)a,a+=10,tmp);
if(C_truep((C_word)C_i_numberp(((C_word*)((C_word*)t0)[5])[1]))){
t3=t2;
f_25387(t3,C_SCHEME_UNDEFINED);}
else{
t3=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_25546,a[2]=t2,a[3]=((C_word*)t0)[5],a[4]=((C_word*)t0)[9],tmp=(C_word)a,a+=5,tmp);
C_trace("ChickenBridge.scm: 380  gensym");
t4=C_retrieve(lf[26]);
((C_proc3)C_retrieve_proc(t4))(3,t4,t3,lf[490]);}}

/* k25544 in k25382 in k25379 in k25372 in k25304 in k25207 in k25157 in sal-parse-stepping in k25142 in k25139 in k25136 in k25133 in k25130 in k25127 in k25124 in k25121 in k25118 in k25115 in k25112 in k25109 in k25106 in k25103 in k25100 in k25097 in k25094 in k25091 in k25088 in k25085 in k25082 in k24943 in k24940 in k24937 in k24934 in k24878 in k24875 in k24872 in k24869 in k24866 in k24863 in k24860 in k24857 in k23555 in k23486 in k23293 in k23290 in k23185 in k23134 in k11783 in k10718 in k10715 in k7274 in k7271 in k6978 in k6975 in k6971 in k6680 in k6677 in k6674 in k6671 */
static void C_ccall f_25546(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[24],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_25546,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_25550,a[2]=((C_word*)t0)[2],a[3]=t1,a[4]=((C_word*)t0)[3],a[5]=((C_word*)t0)[4],tmp=(C_word)a,a+=6,tmp);
t3=(C_word)C_a_i_list(&a,5,t1,((C_word*)((C_word*)t0)[3])[1],C_SCHEME_FALSE,C_SCHEME_FALSE,C_SCHEME_FALSE);
t4=(C_word)C_a_i_list(&a,1,t3);
C_trace("ChickenBridge.scm: 380  append");
t5=*((C_word*)lf[18]+1);
((C_proc4)C_retrieve_proc(t5))(4,t5,t2,((C_word*)((C_word*)t0)[4])[1],t4);}

/* k25548 in k25544 in k25382 in k25379 in k25372 in k25304 in k25207 in k25157 in sal-parse-stepping in k25142 in k25139 in k25136 in k25133 in k25130 in k25127 in k25124 in k25121 in k25118 in k25115 in k25112 in k25109 in k25106 in k25103 in k25100 in k25097 in k25094 in k25091 in k25088 in k25085 in k25082 in k24943 in k24940 in k24937 in k24934 in k24878 in k24875 in k24872 in k24869 in k24866 in k24863 in k24860 in k24857 in k23555 in k23486 in k23293 in k23290 in k23185 in k23134 in k11783 in k10718 in k10715 in k7274 in k7271 in k6978 in k6975 in k6971 in k6680 in k6677 in k6674 in k6671 */
static void C_ccall f_25550(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[5])+1,t1);
t3=C_mutate(((C_word *)((C_word*)t0)[4])+1,((C_word*)t0)[3]);
t4=((C_word*)t0)[2];
f_25387(t4,t3);}

/* k25385 in k25382 in k25379 in k25372 in k25304 in k25207 in k25157 in sal-parse-stepping in k25142 in k25139 in k25136 in k25133 in k25130 in k25127 in k25124 in k25121 in k25118 in k25115 in k25112 in k25109 in k25106 in k25103 in k25100 in k25097 in k25094 in k25091 in k25088 in k25085 in k25082 in k24943 in k24940 in k24937 in k24934 in k24878 in k24875 in k24872 in k24869 in k24866 in k24863 in k24860 in k24857 in k23555 in k23486 in k23293 in k23290 in k23185 in k23134 in k11783 in k10718 in k10715 in k7274 in k7271 in k6978 in k6975 in k6971 in k6680 in k6677 in k6674 in k6671 */
static void C_fcall f_25387(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[15],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_25387,NULL,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|9,a[1]=(C_word)f_25390,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],a[7]=((C_word*)t0)[7],a[8]=((C_word*)t0)[8],a[9]=((C_word*)t0)[9],tmp=(C_word)a,a+=10,tmp);
if(C_truep((C_word)C_i_numberp(((C_word*)((C_word*)t0)[6])[1]))){
t3=t2;
f_25390(t3,C_SCHEME_UNDEFINED);}
else{
t3=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_25523,a[2]=t2,a[3]=((C_word*)t0)[6],a[4]=((C_word*)t0)[9],tmp=(C_word)a,a+=5,tmp);
C_trace("ChickenBridge.scm: 380  gensym");
t4=C_retrieve(lf[26]);
((C_proc3)C_retrieve_proc(t4))(3,t4,t3,lf[489]);}}

/* k25521 in k25385 in k25382 in k25379 in k25372 in k25304 in k25207 in k25157 in sal-parse-stepping in k25142 in k25139 in k25136 in k25133 in k25130 in k25127 in k25124 in k25121 in k25118 in k25115 in k25112 in k25109 in k25106 in k25103 in k25100 in k25097 in k25094 in k25091 in k25088 in k25085 in k25082 in k24943 in k24940 in k24937 in k24934 in k24878 in k24875 in k24872 in k24869 in k24866 in k24863 in k24860 in k24857 in k23555 in k23486 in k23293 in k23290 in k23185 in k23134 in k11783 in k10718 in k10715 in k7274 in k7271 in k6978 in k6975 in k6971 in k6680 in k6677 in k6674 in k6671 */
static void C_ccall f_25523(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[24],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_25523,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_25527,a[2]=((C_word*)t0)[2],a[3]=t1,a[4]=((C_word*)t0)[3],a[5]=((C_word*)t0)[4],tmp=(C_word)a,a+=6,tmp);
t3=(C_word)C_a_i_list(&a,5,t1,((C_word*)((C_word*)t0)[3])[1],C_SCHEME_FALSE,C_SCHEME_FALSE,C_SCHEME_FALSE);
t4=(C_word)C_a_i_list(&a,1,t3);
C_trace("ChickenBridge.scm: 380  append");
t5=*((C_word*)lf[18]+1);
((C_proc4)C_retrieve_proc(t5))(4,t5,t2,((C_word*)((C_word*)t0)[4])[1],t4);}

/* k25525 in k25521 in k25385 in k25382 in k25379 in k25372 in k25304 in k25207 in k25157 in sal-parse-stepping in k25142 in k25139 in k25136 in k25133 in k25130 in k25127 in k25124 in k25121 in k25118 in k25115 in k25112 in k25109 in k25106 in k25103 in k25100 in k25097 in k25094 in k25091 in k25088 in k25085 in k25082 in k24943 in k24940 in k24937 in k24934 in k24878 in k24875 in k24872 in k24869 in k24866 in k24863 in k24860 in k24857 in k23555 in k23486 in k23293 in k23290 in k23185 in k23134 in k11783 in k10718 in k10715 in k7274 in k7271 in k6978 in k6975 in k6971 in k6680 in k6677 in k6674 in k6671 */
static void C_ccall f_25527(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[5])+1,t1);
t3=C_mutate(((C_word *)((C_word*)t0)[4])+1,((C_word*)t0)[3]);
t4=((C_word*)t0)[2];
f_25390(t4,t3);}

/* k25388 in k25385 in k25382 in k25379 in k25372 in k25304 in k25207 in k25157 in sal-parse-stepping in k25142 in k25139 in k25136 in k25133 in k25130 in k25127 in k25124 in k25121 in k25118 in k25115 in k25112 in k25109 in k25106 in k25103 in k25100 in k25097 in k25094 in k25091 in k25088 in k25085 in k25082 in k24943 in k24940 in k24937 in k24934 in k24878 in k24875 in k24872 in k24869 in k24866 in k24863 in k24860 in k24857 in k23555 in k23486 in k23293 in k23290 in k23185 in k23134 in k11783 in k10718 in k10715 in k7274 in k7271 in k6978 in k6975 in k6971 in k6680 in k6677 in k6674 in k6671 */
static void C_fcall f_25390(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[15],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_25390,NULL,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|9,a[1]=(C_word)f_25393,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],a[7]=((C_word*)t0)[7],a[8]=((C_word*)t0)[8],a[9]=((C_word*)t0)[9],tmp=(C_word)a,a+=10,tmp);
if(C_truep(((C_word*)((C_word*)t0)[2])[1])){
if(C_truep((C_word)C_i_numberp(((C_word*)((C_word*)t0)[2])[1]))){
t3=t2;
f_25393(t3,C_SCHEME_UNDEFINED);}
else{
t3=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_25500,a[2]=t2,a[3]=((C_word*)t0)[2],a[4]=((C_word*)t0)[9],tmp=(C_word)a,a+=5,tmp);
C_trace("ChickenBridge.scm: 380  gensym");
t4=C_retrieve(lf[26]);
((C_proc3)C_retrieve_proc(t4))(3,t4,t3,lf[488]);}}
else{
t3=t2;
f_25393(t3,C_SCHEME_UNDEFINED);}}

/* k25498 in k25388 in k25385 in k25382 in k25379 in k25372 in k25304 in k25207 in k25157 in sal-parse-stepping in k25142 in k25139 in k25136 in k25133 in k25130 in k25127 in k25124 in k25121 in k25118 in k25115 in k25112 in k25109 in k25106 in k25103 in k25100 in k25097 in k25094 in k25091 in k25088 in k25085 in k25082 in k24943 in k24940 in k24937 in k24934 in k24878 in k24875 in k24872 in k24869 in k24866 in k24863 in k24860 in k24857 in k23555 in k23486 in k23293 in k23290 in k23185 in k23134 in k11783 in k10718 in k10715 in k7274 in k7271 in k6978 in k6975 in k6971 in k6680 in k6677 in k6674 in k6671 */
static void C_ccall f_25500(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[24],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_25500,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_25504,a[2]=((C_word*)t0)[2],a[3]=t1,a[4]=((C_word*)t0)[3],a[5]=((C_word*)t0)[4],tmp=(C_word)a,a+=6,tmp);
t3=(C_word)C_a_i_list(&a,5,t1,((C_word*)((C_word*)t0)[3])[1],C_SCHEME_FALSE,C_SCHEME_FALSE,C_SCHEME_FALSE);
t4=(C_word)C_a_i_list(&a,1,t3);
C_trace("ChickenBridge.scm: 380  append");
t5=*((C_word*)lf[18]+1);
((C_proc4)C_retrieve_proc(t5))(4,t5,t2,((C_word*)((C_word*)t0)[4])[1],t4);}

/* k25502 in k25498 in k25388 in k25385 in k25382 in k25379 in k25372 in k25304 in k25207 in k25157 in sal-parse-stepping in k25142 in k25139 in k25136 in k25133 in k25130 in k25127 in k25124 in k25121 in k25118 in k25115 in k25112 in k25109 in k25106 in k25103 in k25100 in k25097 in k25094 in k25091 in k25088 in k25085 in k25082 in k24943 in k24940 in k24937 in k24934 in k24878 in k24875 in k24872 in k24869 in k24866 in k24863 in k24860 in k24857 in k23555 in k23486 in k23293 in k23290 in k23185 in k23134 in k11783 in k10718 in k10715 in k7274 in k7271 in k6978 in k6975 in k6971 in k6680 in k6677 in k6674 in k6671 */
static void C_ccall f_25504(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[5])+1,t1);
t3=C_mutate(((C_word *)((C_word*)t0)[4])+1,((C_word*)t0)[3]);
t4=((C_word*)t0)[2];
f_25393(t4,t3);}

/* k25391 in k25388 in k25385 in k25382 in k25379 in k25372 in k25304 in k25207 in k25157 in sal-parse-stepping in k25142 in k25139 in k25136 in k25133 in k25130 in k25127 in k25124 in k25121 in k25118 in k25115 in k25112 in k25109 in k25106 in k25103 in k25100 in k25097 in k25094 in k25091 in k25088 in k25085 in k25082 in k24943 in k24940 in k24937 in k24934 in k24878 in k24875 in k24872 in k24869 in k24866 in k24863 in k24860 in k24857 in k23555 in k23486 in k23293 in k23290 in k23185 in k23134 in k11783 in k10718 in k10715 in k7274 in k7271 in k6978 in k6975 in k6971 in k6680 in k6677 in k6674 in k6671 */
static void C_fcall f_25393(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word ab[34],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_25393,NULL,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_25396,a[2]=((C_word*)t0)[4],a[3]=((C_word*)t0)[5],a[4]=((C_word*)t0)[6],a[5]=((C_word*)t0)[7],a[6]=((C_word*)t0)[8],a[7]=((C_word*)t0)[9],tmp=(C_word)a,a+=8,tmp);
t3=((C_word*)((C_word*)t0)[3])[1];
if(C_truep(t3)){
t4=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_25425,a[2]=((C_word*)t0)[3],a[3]=t2,a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[4],a[6]=((C_word*)t0)[2],a[7]=((C_word*)t0)[7],tmp=(C_word)a,a+=8,tmp);
C_trace("ChickenBridge.scm: 380  token-unit-type=?");
f_23575(t4,((C_word*)((C_word*)t0)[3])[1],C_fix(21248));}
else{
t4=(C_word)C_a_i_list(&a,3,lf[127],((C_word*)((C_word*)t0)[7])[1],((C_word*)((C_word*)t0)[5])[1]);
t5=(C_word)C_a_i_list(&a,3,lf[12],((C_word*)((C_word*)t0)[7])[1],t4);
t6=C_mutate(((C_word *)((C_word*)t0)[5])+1,t5);
t7=t2;
f_25396(t7,t6);}}

/* k25423 in k25391 in k25388 in k25385 in k25382 in k25379 in k25372 in k25304 in k25207 in k25157 in sal-parse-stepping in k25142 in k25139 in k25136 in k25133 in k25130 in k25127 in k25124 in k25121 in k25118 in k25115 in k25112 in k25109 in k25106 in k25103 in k25100 in k25097 in k25094 in k25091 in k25088 in k25085 in k25082 in k24943 in k24940 in k24937 in k24934 in k24878 in k24875 in k24872 in k24869 in k24866 in k24863 in k24860 in k24857 in k23555 in k23486 in k23293 in k23290 in k23185 in k23134 in k11783 in k10718 in k10715 in k7274 in k7271 in k6978 in k6975 in k6971 in k6680 in k6677 in k6674 in k6671 */
static void C_ccall f_25425(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word ab[35],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_25425,2,t0,t1);}
if(C_truep(t1)){
t2=(C_word)C_a_i_list(&a,3,lf[481],((C_word*)((C_word*)t0)[7])[1],((C_word*)((C_word*)t0)[6])[1]);
t3=C_mutate(((C_word *)((C_word*)t0)[5])+1,t2);
t4=(C_word)C_a_i_list(&a,3,lf[127],((C_word*)((C_word*)t0)[7])[1],((C_word*)((C_word*)t0)[4])[1]);
t5=(C_word)C_a_i_list(&a,3,lf[12],((C_word*)((C_word*)t0)[7])[1],t4);
t6=C_mutate(((C_word *)((C_word*)t0)[4])+1,t5);
t7=((C_word*)t0)[3];
f_25396(t7,t6);}
else{
t2=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_25443,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],a[7]=((C_word*)t0)[7],tmp=(C_word)a,a+=8,tmp);
C_trace("ChickenBridge.scm: 380  token-unit-type=?");
f_23575(t2,((C_word*)((C_word*)t0)[2])[1],C_fix(23552));}}

/* k25441 in k25423 in k25391 in k25388 in k25385 in k25382 in k25379 in k25372 in k25304 in k25207 in k25157 in sal-parse-stepping in k25142 in k25139 in k25136 in k25133 in k25130 in k25127 in k25124 in k25121 in k25118 in k25115 in k25112 in k25109 in k25106 in k25103 in k25100 in k25097 in k25094 in k25091 in k25088 in k25085 in k25082 in k24943 in k24940 in k24937 in k24934 in k24878 in k24875 in k24872 in k24869 in k24866 in k24863 in k24860 in k24857 in k23555 in k23486 in k23293 in k23290 in k23185 in k23134 in k11783 in k10718 in k10715 in k7274 in k7271 in k6978 in k6975 in k6971 in k6680 in k6677 in k6674 in k6671 */
static void C_ccall f_25443(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word ab[35],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_25443,2,t0,t1);}
if(C_truep(t1)){
t2=(C_word)C_a_i_list(&a,3,lf[487],((C_word*)((C_word*)t0)[7])[1],((C_word*)((C_word*)t0)[6])[1]);
t3=C_mutate(((C_word *)((C_word*)t0)[5])+1,t2);
t4=(C_word)C_a_i_list(&a,3,lf[127],((C_word*)((C_word*)t0)[7])[1],((C_word*)((C_word*)t0)[4])[1]);
t5=(C_word)C_a_i_list(&a,3,lf[12],((C_word*)((C_word*)t0)[7])[1],t4);
t6=C_mutate(((C_word *)((C_word*)t0)[4])+1,t5);
t7=((C_word*)t0)[3];
f_25396(t7,t6);}
else{
t2=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_25461,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],a[7]=((C_word*)t0)[7],tmp=(C_word)a,a+=8,tmp);
C_trace("ChickenBridge.scm: 380  token-unit-type=?");
f_23575(t2,((C_word*)((C_word*)t0)[2])[1],C_fix(20992));}}

/* k25459 in k25441 in k25423 in k25391 in k25388 in k25385 in k25382 in k25379 in k25372 in k25304 in k25207 in k25157 in sal-parse-stepping in k25142 in k25139 in k25136 in k25133 in k25130 in k25127 in k25124 in k25121 in k25118 in k25115 in k25112 in k25109 in k25106 in k25103 in k25100 in k25097 in k25094 in k25091 in k25088 in k25085 in k25082 in k24943 in k24940 in k24937 in k24934 in k24878 in k24875 in k24872 in k24869 in k24866 in k24863 in k24860 in k24857 in k23555 in k23486 in k23293 in k23290 in k23185 in k23134 in k11783 in k10718 in k10715 in k7274 in k7271 in k6978 in k6975 in k6971 in k6680 in k6677 in k6674 in k6671 */
static void C_ccall f_25461(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word ab[34],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_25461,2,t0,t1);}
if(C_truep(t1)){
t2=(C_word)C_a_i_list(&a,3,lf[264],((C_word*)((C_word*)t0)[7])[1],((C_word*)((C_word*)t0)[6])[1]);
t3=C_mutate(((C_word *)((C_word*)t0)[5])+1,t2);
t4=(C_word)C_a_i_list(&a,3,lf[131],((C_word*)((C_word*)t0)[7])[1],((C_word*)((C_word*)t0)[4])[1]);
t5=(C_word)C_a_i_list(&a,3,lf[12],((C_word*)((C_word*)t0)[7])[1],t4);
t6=C_mutate(((C_word *)((C_word*)t0)[4])+1,t5);
t7=((C_word*)t0)[3];
f_25396(t7,t6);}
else{
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_25479,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
C_trace("ChickenBridge.scm: 380  token-unit-type=?");
f_23575(t2,((C_word*)((C_word*)t0)[2])[1],C_fix(21760));}}

/* k25477 in k25459 in k25441 in k25423 in k25391 in k25388 in k25385 in k25382 in k25379 in k25372 in k25304 in k25207 in k25157 in sal-parse-stepping in k25142 in k25139 in k25136 in k25133 in k25130 in k25127 in k25124 in k25121 in k25118 in k25115 in k25112 in k25109 in k25106 in k25103 in k25100 in k25097 in k25094 in k25091 in k25088 in k25085 in k25082 in k24943 in k24940 in k24937 in k24934 in k24878 in k24875 in k24872 in k24869 in k24866 in k24863 in k24860 in k24857 in k23555 in k23486 in k23293 in k23290 in k23185 in k23134 in k11783 in k10718 in k10715 in k7274 in k7271 in k6978 in k6975 in k6971 in k6680 in k6677 in k6674 in k6671 */
static void C_ccall f_25479(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word ab[27],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_25479,2,t0,t1);}
if(C_truep(t1)){
t2=(C_word)C_a_i_list(&a,3,lf[409],((C_word*)((C_word*)t0)[6])[1],((C_word*)((C_word*)t0)[5])[1]);
t3=C_mutate(((C_word *)((C_word*)t0)[4])+1,t2);
t4=(C_word)C_a_i_list(&a,3,lf[131],((C_word*)((C_word*)t0)[6])[1],((C_word*)((C_word*)t0)[3])[1]);
t5=(C_word)C_a_i_list(&a,3,lf[12],((C_word*)((C_word*)t0)[6])[1],t4);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_25396(t7,t6);}
else{
t2=((C_word*)t0)[2];
f_25396(t2,C_SCHEME_UNDEFINED);}}

/* k25394 in k25391 in k25388 in k25385 in k25382 in k25379 in k25372 in k25304 in k25207 in k25157 in sal-parse-stepping in k25142 in k25139 in k25136 in k25133 in k25130 in k25127 in k25124 in k25121 in k25118 in k25115 in k25112 in k25109 in k25106 in k25103 in k25100 in k25097 in k25094 in k25091 in k25088 in k25085 in k25082 in k24943 in k24940 in k24937 in k24934 in k24878 in k24875 in k24872 in k24869 in k24866 in k24863 in k24860 in k24857 in k23555 in k23486 in k23293 in k23290 in k23185 in k23134 in k11783 in k10718 in k10715 in k7274 in k7271 in k6978 in k6975 in k6971 in k6680 in k6677 in k6674 in k6671 */
static void C_fcall f_25396(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[22],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_25396,NULL,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_25400,a[2]=((C_word*)t0)[6],a[3]=((C_word*)t0)[7],tmp=(C_word)a,a+=4,tmp);
t3=(C_word)C_a_i_list(&a,5,((C_word*)((C_word*)t0)[5])[1],((C_word*)((C_word*)t0)[4])[1],C_SCHEME_FALSE,((C_word*)((C_word*)t0)[3])[1],((C_word*)((C_word*)t0)[2])[1]);
t4=(C_word)C_a_i_list(&a,1,t3);
C_trace("ChickenBridge.scm: 380  append");
t5=*((C_word*)lf[18]+1);
((C_proc4)C_retrieve_proc(t5))(4,t5,t2,((C_word*)((C_word*)t0)[7])[1],t4);}

/* k25398 in k25394 in k25391 in k25388 in k25385 in k25382 in k25379 in k25372 in k25304 in k25207 in k25157 in sal-parse-stepping in k25142 in k25139 in k25136 in k25133 in k25130 in k25127 in k25124 in k25121 in k25118 in k25115 in k25112 in k25109 in k25106 in k25103 in k25100 in k25097 in k25094 in k25091 in k25088 in k25085 in k25082 in k24943 in k24940 in k24937 in k24934 in k24878 in k24875 in k24872 in k24869 in k24866 in k24863 in k24860 in k24857 in k23555 in k23486 in k23293 in k23290 in k23185 in k23134 in k11783 in k10718 in k10715 in k7274 in k7271 in k6978 in k6975 in k6971 in k6680 in k6677 in k6674 in k6671 */
static void C_ccall f_25400(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[3])+1,t1);
t3=((C_word*)t0)[2];
f_25153(t3,t2);}

/* k25308 in k25304 in k25207 in k25157 in sal-parse-stepping in k25142 in k25139 in k25136 in k25133 in k25130 in k25127 in k25124 in k25121 in k25118 in k25115 in k25112 in k25109 in k25106 in k25103 in k25100 in k25097 in k25094 in k25091 in k25088 in k25085 in k25082 in k24943 in k24940 in k24937 in k24934 in k24878 in k24875 in k24872 in k24869 in k24866 in k24863 in k24860 in k24857 in k23555 in k23486 in k23293 in k23290 in k23185 in k23134 in k11783 in k10718 in k10715 in k7274 in k7271 in k6978 in k6975 in k6971 in k6680 in k6677 in k6674 in k6671 */
static void C_ccall f_25310(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_25310,2,t0,t1);}
t2=C_mutate(((C_word *)((C_word*)t0)[8])+1,t1);
t3=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_25314,a[2]=((C_word*)t0)[4],a[3]=((C_word*)t0)[5],a[4]=((C_word*)t0)[8],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t4=(C_word)C_i_cadddr(((C_word*)t0)[3]);
C_trace("ChickenBridge.scm: 380  emit");
f_23704(t3,t4,C_SCHEME_END_OF_LIST,((C_word*)t0)[2]);}

/* k25312 in k25308 in k25304 in k25207 in k25157 in sal-parse-stepping in k25142 in k25139 in k25136 in k25133 in k25130 in k25127 in k25124 in k25121 in k25118 in k25115 in k25112 in k25109 in k25106 in k25103 in k25100 in k25097 in k25094 in k25091 in k25088 in k25085 in k25082 in k24943 in k24940 in k24937 in k24934 in k24878 in k24875 in k24872 in k24869 in k24866 in k24863 in k24860 in k24857 in k23555 in k23486 in k23293 in k23290 in k23185 in k23134 in k11783 in k10718 in k10715 in k7274 in k7271 in k6978 in k6975 in k6971 in k6680 in k6677 in k6674 in k6671 */
static void C_ccall f_25314(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_25314,2,t0,t1);}
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_25318,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[5],tmp=(C_word)a,a+=7,tmp);
C_trace("ChickenBridge.scm: 380  gensym");
t4=C_retrieve(lf[26]);
((C_proc3)C_retrieve_proc(t4))(3,t4,t3,lf[486]);}

/* k25316 in k25312 in k25308 in k25304 in k25207 in k25157 in sal-parse-stepping in k25142 in k25139 in k25136 in k25133 in k25130 in k25127 in k25124 in k25121 in k25118 in k25115 in k25112 in k25109 in k25106 in k25103 in k25100 in k25097 in k25094 in k25091 in k25088 in k25085 in k25082 in k24943 in k24940 in k24937 in k24934 in k24878 in k24875 in k24872 in k24869 in k24866 in k24863 in k24860 in k24857 in k23555 in k23486 in k23293 in k23290 in k23185 in k23134 in k11783 in k10718 in k10715 in k7274 in k7271 in k6978 in k6975 in k6971 in k6680 in k6677 in k6674 in k6671 */
static void C_ccall f_25318(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word ab[72],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_25318,2,t0,t1);}
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=(C_word)C_a_i_list(&a,2,lf[15],((C_word*)((C_word*)t0)[6])[1]);
t4=(C_word)C_a_i_list(&a,3,lf[12],((C_word*)((C_word*)t0)[6])[1],t3);
t5=(C_word)C_a_i_list(&a,2,lf[3],((C_word*)((C_word*)t0)[6])[1]);
t6=(C_word)C_a_i_list(&a,5,((C_word*)((C_word*)t0)[6])[1],((C_word*)((C_word*)t0)[5])[1],C_SCHEME_FALSE,t4,t5);
t7=(C_word)C_a_i_list(&a,2,lf[8],((C_word*)((C_word*)t0)[6])[1]);
t8=(C_word)C_a_i_list(&a,3,lf[12],((C_word*)((C_word*)t0)[4])[1],t7);
t9=(C_word)C_a_i_list(&a,5,((C_word*)((C_word*)t0)[4])[1],C_SCHEME_FALSE,t8,C_SCHEME_FALSE,C_SCHEME_FALSE);
t10=(C_word)C_a_i_list(&a,2,t6,t9);
t11=C_mutate(((C_word *)((C_word*)t0)[3])+1,t10);
t12=((C_word*)t0)[2];
f_25153(t12,t11);}

/* k25211 in k25207 in k25157 in sal-parse-stepping in k25142 in k25139 in k25136 in k25133 in k25130 in k25127 in k25124 in k25121 in k25118 in k25115 in k25112 in k25109 in k25106 in k25103 in k25100 in k25097 in k25094 in k25091 in k25088 in k25085 in k25082 in k24943 in k24940 in k24937 in k24934 in k24878 in k24875 in k24872 in k24869 in k24866 in k24863 in k24860 in k24857 in k23555 in k23486 in k23293 in k23290 in k23185 in k23134 in k11783 in k10718 in k10715 in k7274 in k7271 in k6978 in k6975 in k6971 in k6680 in k6677 in k6674 in k6671 */
static void C_ccall f_25213(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[11],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_25213,2,t0,t1);}
t2=C_mutate(((C_word *)((C_word*)t0)[10])+1,t1);
t3=(*a=C_CLOSURE_TYPE|10,a[1]=(C_word)f_25217,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[10],a[7]=((C_word*)t0)[6],a[8]=((C_word*)t0)[7],a[9]=((C_word*)t0)[8],a[10]=((C_word*)t0)[9],tmp=(C_word)a,a+=11,tmp);
t4=(C_word)C_i_cadddr(((C_word*)t0)[2]);
C_trace("ChickenBridge.scm: 380  emit");
f_23704(t3,t4,C_SCHEME_END_OF_LIST,((C_word*)t0)[3]);}

/* k25215 in k25211 in k25207 in k25157 in sal-parse-stepping in k25142 in k25139 in k25136 in k25133 in k25130 in k25127 in k25124 in k25121 in k25118 in k25115 in k25112 in k25109 in k25106 in k25103 in k25100 in k25097 in k25094 in k25091 in k25088 in k25085 in k25082 in k24943 in k24940 in k24937 in k24934 in k24878 in k24875 in k24872 in k24869 in k24866 in k24863 in k24860 in k24857 in k23555 in k23486 in k23293 in k23290 in k23185 in k23134 in k11783 in k10718 in k10715 in k7274 in k7271 in k6978 in k6975 in k6971 in k6680 in k6677 in k6674 in k6671 */
static void C_ccall f_25217(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[10],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_25217,2,t0,t1);}
t2=C_mutate(((C_word *)((C_word*)t0)[10])+1,t1);
t3=(*a=C_CLOSURE_TYPE|9,a[1]=(C_word)f_25221,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[10],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],a[7]=((C_word*)t0)[7],a[8]=((C_word*)t0)[8],a[9]=((C_word*)t0)[9],tmp=(C_word)a,a+=10,tmp);
C_trace("ChickenBridge.scm: 380  fifth");
t4=C_retrieve(lf[66]);
((C_proc3)C_retrieve_proc(t4))(3,t4,t3,((C_word*)t0)[2]);}

/* k25219 in k25215 in k25211 in k25207 in k25157 in sal-parse-stepping in k25142 in k25139 in k25136 in k25133 in k25130 in k25127 in k25124 in k25121 in k25118 in k25115 in k25112 in k25109 in k25106 in k25103 in k25100 in k25097 in k25094 in k25091 in k25088 in k25085 in k25082 in k24943 in k24940 in k24937 in k24934 in k24878 in k24875 in k24872 in k24869 in k24866 in k24863 in k24860 in k24857 in k23555 in k23486 in k23293 in k23290 in k23185 in k23134 in k11783 in k10718 in k10715 in k7274 in k7271 in k6978 in k6975 in k6971 in k6680 in k6677 in k6674 in k6671 */
static void C_ccall f_25221(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word ab[24],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_25221,2,t0,t1);}
t2=C_mutate(((C_word *)((C_word*)t0)[9])+1,t1);
t3=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_25224,a[2]=((C_word*)t0)[5],a[3]=((C_word*)t0)[6],a[4]=((C_word*)t0)[7],a[5]=((C_word*)t0)[8],tmp=(C_word)a,a+=6,tmp);
if(C_truep(((C_word*)((C_word*)t0)[9])[1])){
t4=(*a=C_CLOSURE_TYPE|8,a[1]=(C_word)f_25240,a[2]=t3,a[3]=((C_word*)t0)[8],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[3],a[6]=((C_word*)t0)[6],a[7]=((C_word*)t0)[4],a[8]=((C_word*)t0)[9],tmp=(C_word)a,a+=9,tmp);
t5=(C_word)C_i_cadr(((C_word*)((C_word*)t0)[9])[1]);
C_trace("ChickenBridge.scm: 380  emit");
f_23704(t4,t5,C_SCHEME_END_OF_LIST,((C_word*)t0)[2]);}
else{
t4=(C_word)C_a_i_list(&a,3,lf[12],((C_word*)((C_word*)t0)[6])[1],((C_word*)((C_word*)t0)[3])[1]);
t5=C_mutate(((C_word *)((C_word*)t0)[5])+1,t4);
t6=t3;
f_25224(t6,t5);}}

/* k25238 in k25219 in k25215 in k25211 in k25207 in k25157 in sal-parse-stepping in k25142 in k25139 in k25136 in k25133 in k25130 in k25127 in k25124 in k25121 in k25118 in k25115 in k25112 in k25109 in k25106 in k25103 in k25100 in k25097 in k25094 in k25091 in k25088 in k25085 in k25082 in k24943 in k24940 in k24937 in k24934 in k24878 in k24875 in k24872 in k24869 in k24866 in k24863 in k24860 in k24857 in k23555 in k23486 in k23293 in k23290 in k23185 in k23134 in k11783 in k10718 in k10715 in k7274 in k7271 in k6978 in k6975 in k6971 in k6680 in k6677 in k6674 in k6671 */
static void C_ccall f_25240(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_25240,2,t0,t1);}
t2=C_mutate(((C_word *)((C_word*)t0)[8])+1,t1);
t3=(*a=C_CLOSURE_TYPE|8,a[1]=(C_word)f_25244,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[8],a[6]=((C_word*)t0)[5],a[7]=((C_word*)t0)[6],a[8]=((C_word*)t0)[7],tmp=(C_word)a,a+=9,tmp);
C_trace("ChickenBridge.scm: 380  gensym");
t4=C_retrieve(lf[26]);
((C_proc3)C_retrieve_proc(t4))(3,t4,t3,lf[485]);}

/* k25242 in k25238 in k25219 in k25215 in k25211 in k25207 in k25157 in sal-parse-stepping in k25142 in k25139 in k25136 in k25133 in k25130 in k25127 in k25124 in k25121 in k25118 in k25115 in k25112 in k25109 in k25106 in k25103 in k25100 in k25097 in k25094 in k25091 in k25088 in k25085 in k25082 in k24943 in k24940 in k24937 in k24934 in k24878 in k24875 in k24872 in k24869 in k24866 in k24863 in k24860 in k24857 in k23555 in k23486 in k23293 in k23290 in k23185 in k23134 in k11783 in k10718 in k10715 in k7274 in k7271 in k6978 in k6975 in k6971 in k6680 in k6677 in k6674 in k6671 */
static void C_ccall f_25244(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word ab[66],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_25244,2,t0,t1);}
t2=C_mutate(((C_word *)((C_word*)t0)[8])+1,t1);
t3=(C_word)C_a_i_list(&a,3,lf[12],((C_word*)((C_word*)t0)[8])[1],C_SCHEME_FALSE);
t4=(C_word)C_a_i_list(&a,3,lf[12],((C_word*)((C_word*)t0)[7])[1],((C_word*)((C_word*)t0)[6])[1]);
t5=(C_word)C_a_i_list(&a,3,lf[484],t3,t4);
t6=(C_word)C_a_i_list(&a,3,lf[12],((C_word*)((C_word*)t0)[7])[1],((C_word*)((C_word*)t0)[5])[1]);
t7=(C_word)C_a_i_list(&a,4,lf[20],((C_word*)((C_word*)t0)[8])[1],t5,t6);
t8=C_mutate(((C_word *)((C_word*)t0)[4])+1,t7);
t9=(C_word)C_a_i_list(&a,5,((C_word*)((C_word*)t0)[8])[1],C_SCHEME_TRUE,C_SCHEME_FALSE,C_SCHEME_FALSE,C_SCHEME_FALSE);
t10=(C_word)C_a_i_list(&a,1,t9);
t11=C_mutate(((C_word *)((C_word*)t0)[3])+1,t10);
t12=((C_word*)t0)[2];
f_25224(t12,t11);}

/* k25222 in k25219 in k25215 in k25211 in k25207 in k25157 in sal-parse-stepping in k25142 in k25139 in k25136 in k25133 in k25130 in k25127 in k25124 in k25121 in k25118 in k25115 in k25112 in k25109 in k25106 in k25103 in k25100 in k25097 in k25094 in k25091 in k25088 in k25085 in k25082 in k24943 in k24940 in k24937 in k24934 in k24878 in k24875 in k24872 in k24869 in k24866 in k24863 in k24860 in k24857 in k23555 in k23486 in k23293 in k23290 in k23185 in k23134 in k11783 in k10718 in k10715 in k7274 in k7271 in k6978 in k6975 in k6971 in k6680 in k6677 in k6674 in k6671 */
static void C_fcall f_25224(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[22],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_25224,NULL,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_25228,a[2]=((C_word*)t0)[4],a[3]=((C_word*)t0)[5],tmp=(C_word)a,a+=4,tmp);
t3=(C_word)C_a_i_list(&a,5,((C_word*)((C_word*)t0)[3])[1],C_SCHEME_FALSE,((C_word*)((C_word*)t0)[2])[1],C_SCHEME_FALSE,C_SCHEME_FALSE);
t4=(C_word)C_a_i_list(&a,1,t3);
C_trace("ChickenBridge.scm: 380  append");
t5=*((C_word*)lf[18]+1);
((C_proc4)C_retrieve_proc(t5))(4,t5,t2,((C_word*)((C_word*)t0)[5])[1],t4);}

/* k25226 in k25222 in k25219 in k25215 in k25211 in k25207 in k25157 in sal-parse-stepping in k25142 in k25139 in k25136 in k25133 in k25130 in k25127 in k25124 in k25121 in k25118 in k25115 in k25112 in k25109 in k25106 in k25103 in k25100 in k25097 in k25094 in k25091 in k25088 in k25085 in k25082 in k24943 in k24940 in k24937 in k24934 in k24878 in k24875 in k24872 in k24869 in k24866 in k24863 in k24860 in k24857 in k23555 in k23486 in k23293 in k23290 in k23185 in k23134 in k11783 in k10718 in k10715 in k7274 in k7271 in k6978 in k6975 in k6971 in k6680 in k6677 in k6674 in k6671 */
static void C_ccall f_25228(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[3])+1,t1);
t3=((C_word*)t0)[2];
f_25153(t3,t2);}

/* k25161 in k25157 in sal-parse-stepping in k25142 in k25139 in k25136 in k25133 in k25130 in k25127 in k25124 in k25121 in k25118 in k25115 in k25112 in k25109 in k25106 in k25103 in k25100 in k25097 in k25094 in k25091 in k25088 in k25085 in k25082 in k24943 in k24940 in k24937 in k24934 in k24878 in k24875 in k24872 in k24869 in k24866 in k24863 in k24860 in k24857 in k23555 in k23486 in k23293 in k23290 in k23185 in k23134 in k11783 in k10718 in k10715 in k7274 in k7271 in k6978 in k6975 in k6971 in k6680 in k6677 in k6674 in k6671 */
static void C_ccall f_25163(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_25163,2,t0,t1);}
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_25167,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[6],a[5]=((C_word*)t0)[4],a[6]=((C_word*)t0)[5],tmp=(C_word)a,a+=7,tmp);
C_trace("ChickenBridge.scm: 380  gensym");
t4=C_retrieve(lf[26]);
((C_proc3)C_retrieve_proc(t4))(3,t4,t3,lf[483]);}

/* k25165 in k25161 in k25157 in sal-parse-stepping in k25142 in k25139 in k25136 in k25133 in k25130 in k25127 in k25124 in k25121 in k25118 in k25115 in k25112 in k25109 in k25106 in k25103 in k25100 in k25097 in k25094 in k25091 in k25088 in k25085 in k25082 in k24943 in k24940 in k24937 in k24934 in k24878 in k24875 in k24872 in k24869 in k24866 in k24863 in k24860 in k24857 in k23555 in k23486 in k23293 in k23290 in k23185 in k23134 in k11783 in k10718 in k10715 in k7274 in k7271 in k6978 in k6975 in k6971 in k6680 in k6677 in k6674 in k6671 */
static void C_ccall f_25167(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_25167,2,t0,t1);}
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_25171,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[6],a[5]=((C_word*)t0)[4],a[6]=((C_word*)t0)[5],tmp=(C_word)a,a+=7,tmp);
C_trace("ChickenBridge.scm: 380  gensym");
t4=C_retrieve(lf[26]);
((C_proc3)C_retrieve_proc(t4))(3,t4,t3,lf[482]);}

/* k25169 in k25165 in k25161 in k25157 in sal-parse-stepping in k25142 in k25139 in k25136 in k25133 in k25130 in k25127 in k25124 in k25121 in k25118 in k25115 in k25112 in k25109 in k25106 in k25103 in k25100 in k25097 in k25094 in k25091 in k25088 in k25085 in k25082 in k24943 in k24940 in k24937 in k24934 in k24878 in k24875 in k24872 in k24869 in k24866 in k24863 in k24860 in k24857 in k23555 in k23486 in k23293 in k23290 in k23185 in k23134 in k11783 in k10718 in k10715 in k7274 in k7271 in k6978 in k6975 in k6971 in k6680 in k6677 in k6674 in k6671 */
static void C_ccall f_25171(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word ab[63],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_25171,2,t0,t1);}
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=(C_word)C_a_i_list(&a,5,((C_word*)((C_word*)t0)[6])[1],((C_word*)((C_word*)t0)[5])[1],C_SCHEME_FALSE,C_SCHEME_FALSE,C_SCHEME_FALSE);
t4=(C_word)C_a_i_list(&a,3,lf[127],((C_word*)((C_word*)t0)[4])[1],C_fix(1));
t5=(C_word)C_a_i_list(&a,3,lf[12],((C_word*)((C_word*)t0)[4])[1],t4);
t6=(C_word)C_a_i_list(&a,3,lf[481],((C_word*)((C_word*)t0)[4])[1],((C_word*)((C_word*)t0)[6])[1]);
t7=(C_word)C_a_i_list(&a,5,((C_word*)((C_word*)t0)[4])[1],C_fix(0),C_SCHEME_FALSE,t5,t6);
t8=(C_word)C_a_i_list(&a,2,t3,t7);
t9=C_mutate(((C_word *)((C_word*)t0)[3])+1,t8);
t10=((C_word*)t0)[2];
f_25153(t10,t9);}

/* k25151 in sal-parse-stepping in k25142 in k25139 in k25136 in k25133 in k25130 in k25127 in k25124 in k25121 in k25118 in k25115 in k25112 in k25109 in k25106 in k25103 in k25100 in k25097 in k25094 in k25091 in k25088 in k25085 in k25082 in k24943 in k24940 in k24937 in k24934 in k24878 in k24875 in k24872 in k24869 in k24866 in k24863 in k24860 in k24857 in k23555 in k23486 in k23293 in k23290 in k23185 in k23134 in k11783 in k10718 in k10715 in k7274 in k7271 in k6978 in k6975 in k6971 in k6680 in k6677 in k6674 in k6671 */
static void C_fcall f_25153(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 380  make-parse-unit");
f_23490(((C_word*)t0)[3],C_fix(33024),((C_word*)((C_word*)t0)[2])[1],C_SCHEME_FALSE);}

/* inf->pre in k24943 in k24940 in k24937 in k24934 in k24878 in k24875 in k24872 in k24869 in k24866 in k24863 in k24860 in k24857 in k23555 in k23486 in k23293 in k23290 in k23185 in k23134 in k11783 in k10718 in k10715 in k7274 in k7271 in k6978 in k6975 in k6971 in k6680 in k6677 in k6674 in k6671 */
static void C_fcall f_24968(C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word t14;
C_word t15;
C_word ab[21],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_24968,NULL,2,t1,t2);}
t3=(*a=C_VECTOR_TYPE|1,a[1]=t2,tmp=(C_word)a,a+=2,tmp);
t4=C_SCHEME_FALSE;
t5=(*a=C_VECTOR_TYPE|1,a[1]=t4,tmp=(C_word)a,a+=2,tmp);
t6=C_SCHEME_FALSE;
t7=(*a=C_VECTOR_TYPE|1,a[1]=t6,tmp=(C_word)a,a+=2,tmp);
t8=C_SCHEME_FALSE;
t9=(*a=C_VECTOR_TYPE|1,a[1]=t8,tmp=(C_word)a,a+=2,tmp);
t10=C_SCHEME_FALSE;
t11=(*a=C_VECTOR_TYPE|1,a[1]=t10,tmp=(C_word)a,a+=2,tmp);
if(C_truep((C_word)C_i_pairp(((C_word*)t3)[1]))){
t12=C_SCHEME_UNDEFINED;
t13=(*a=C_VECTOR_TYPE|1,a[1]=t12,tmp=(C_word)a,a+=2,tmp);
t14=C_set_block_item(t13,0,(*a=C_CLOSURE_TYPE|8,a[1]=(C_word)f_24980,a[2]=t9,a[3]=t13,a[4]=t11,a[5]=t5,a[6]=t7,a[7]=t3,a[8]=((C_word)li395),tmp=(C_word)a,a+=9,tmp));
t15=((C_word*)t13)[1];
f_24980(t15,t1);}
else{
t12=t1;
((C_proc2)(void*)(*((C_word*)t12+1)))(2,t12,((C_word*)t3)[1]);}}

/* do3733 in inf->pre in k24943 in k24940 in k24937 in k24934 in k24878 in k24875 in k24872 in k24869 in k24866 in k24863 in k24860 in k24857 in k23555 in k23486 in k23293 in k23290 in k23185 in k23134 in k11783 in k10718 in k10715 in k7274 in k7271 in k6978 in k6975 in k6971 in k6680 in k6677 in k6674 in k6671 */
static void C_fcall f_24980(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_24980,NULL,2,t0,t1);}
if(C_truep((C_word)C_i_nullp(((C_word*)((C_word*)t0)[7])[1]))){
t2=t1;
((C_proc2)(void*)(*((C_word*)t2+1)))(2,t2,((C_word*)((C_word*)t0)[6])[1]);}
else{
t2=(C_word)C_i_car(((C_word*)((C_word*)t0)[7])[1]);
t3=C_mutate(((C_word *)((C_word*)t0)[5])+1,t2);
t4=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[7])[1]);
t5=C_mutate(((C_word *)((C_word*)t0)[7])+1,t4);
t6=(*a=C_CLOSURE_TYPE|8,a[1]=(C_word)f_24999,a[2]=((C_word*)t0)[5],a[3]=((C_word*)t0)[6],a[4]=((C_word*)t0)[2],a[5]=((C_word*)t0)[7],a[6]=t1,a[7]=((C_word*)t0)[3],a[8]=((C_word*)t0)[4],tmp=(C_word)a,a+=9,tmp);
C_trace("ChickenBridge.scm: 380  is-op?");
f_24947(t6,((C_word*)((C_word*)t0)[5])[1]);}}

/* k24997 in do3733 in inf->pre in k24943 in k24940 in k24937 in k24934 in k24878 in k24875 in k24872 in k24869 in k24866 in k24863 in k24860 in k24857 in k23555 in k23486 in k23293 in k23290 in k23185 in k23134 in k11783 in k10718 in k10715 in k7274 in k7271 in k6978 in k6975 in k6971 in k6680 in k6677 in k6674 in k6671 */
static void C_ccall f_24999(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word ab[15],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_24999,2,t0,t1);}
t2=C_mutate(((C_word *)((C_word*)t0)[8])+1,t1);
t3=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_25002,a[2]=((C_word*)t0)[6],a[3]=((C_word*)t0)[7],tmp=(C_word)a,a+=4,tmp);
if(C_truep((C_word)C_i_numberp(((C_word*)((C_word*)t0)[8])[1]))){
t4=C_SCHEME_UNDEFINED;
t5=(*a=C_VECTOR_TYPE|1,a[1]=t4,tmp=(C_word)a,a+=2,tmp);
t6=C_set_block_item(t5,0,(*a=C_CLOSURE_TYPE|8,a[1]=(C_word)f_25017,a[2]=((C_word*)t0)[8],a[3]=t5,a[4]=((C_word*)t0)[2],a[5]=((C_word*)t0)[3],a[6]=((C_word*)t0)[4],a[7]=((C_word*)t0)[5],a[8]=((C_word)li394),tmp=(C_word)a,a+=9,tmp));
t7=((C_word*)t5)[1];
f_25017(t7,t3,C_SCHEME_FALSE,C_SCHEME_TRUE,C_SCHEME_END_OF_LIST);}
else{
t4=C_mutate(((C_word *)((C_word*)t0)[3])+1,((C_word*)((C_word*)t0)[2])[1]);
t5=t3;
f_25002(2,t5,t4);}}

/* do3735 in k24997 in do3733 in inf->pre in k24943 in k24940 in k24937 in k24934 in k24878 in k24875 in k24872 in k24869 in k24866 in k24863 in k24860 in k24857 in k23555 in k23486 in k23293 in k23290 in k23185 in k23134 in k11783 in k10718 in k10715 in k7274 in k7271 in k6978 in k6975 in k6971 in k6680 in k6677 in k6674 in k6671 */
static void C_fcall f_25017(C_word t0,C_word t1,C_word t2,C_word t3,C_word t4){
C_word tmp;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word t14;
C_word ab[24],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_25017,NULL,5,t0,t1,t2,t3,t4);}
t5=(*a=C_VECTOR_TYPE|1,a[1]=t2,tmp=(C_word)a,a+=2,tmp);
t6=(*a=C_VECTOR_TYPE|1,a[1]=t3,tmp=(C_word)a,a+=2,tmp);
t7=(*a=C_VECTOR_TYPE|1,a[1]=t4,tmp=(C_word)a,a+=2,tmp);
t8=(C_word)C_i_nullp(((C_word*)((C_word*)t0)[7])[1]);
t9=(C_truep(t8)?t8:(C_word)C_i_not(((C_word*)t6)[1]));
if(C_truep(t9)){
t10=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_25031,a[2]=t1,a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],tmp=(C_word)a,a+=6,tmp);
t11=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_25045,a[2]=t10,tmp=(C_word)a,a+=3,tmp);
C_trace("ChickenBridge.scm: 380  reverse");
t12=*((C_word*)lf[216]+1);
((C_proc3)C_retrieve_proc(t12))(3,t12,t11,((C_word*)t7)[1]);}
else{
t10=(*a=C_CLOSURE_TYPE|8,a[1]=(C_word)f_25049,a[2]=((C_word*)t0)[7],a[3]=((C_word*)t0)[2],a[4]=t7,a[5]=t6,a[6]=t1,a[7]=((C_word*)t0)[3],a[8]=t5,tmp=(C_word)a,a+=9,tmp);
t11=(C_word)C_i_car(((C_word*)((C_word*)t0)[7])[1]);
C_trace("ChickenBridge.scm: 380  is-op?");
f_24947(t10,t11);}}

/* k25047 in do3735 in k24997 in do3733 in inf->pre in k24943 in k24940 in k24937 in k24934 in k24878 in k24875 in k24872 in k24869 in k24866 in k24863 in k24860 in k24857 in k23555 in k23486 in k23293 in k23290 in k23185 in k23134 in k11783 in k10718 in k10715 in k7274 in k7271 in k6978 in k6975 in k6971 in k6680 in k6677 in k6674 in k6671 */
static void C_ccall f_25049(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word ab[10],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_25049,2,t0,t1);}
t2=C_mutate(((C_word *)((C_word*)t0)[8])+1,t1);
t3=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_25052,a[2]=((C_word*)t0)[4],a[3]=((C_word*)t0)[5],a[4]=((C_word*)t0)[8],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t4=(C_truep(((C_word*)((C_word*)t0)[8])[1])?(C_word)C_i_less_or_equalp(((C_word*)((C_word*)t0)[8])[1],((C_word*)((C_word*)t0)[3])[1]):C_SCHEME_FALSE);
if(C_truep(t4)){
t5=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_FALSE);
t6=t3;
f_25052(t6,t5);}
else{
t5=(C_word)C_i_car(((C_word*)((C_word*)t0)[2])[1]);
t6=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[2])[1]);
t7=C_mutate(((C_word *)((C_word*)t0)[2])+1,t6);
t8=(C_word)C_a_i_cons(&a,2,t5,((C_word*)((C_word*)t0)[4])[1]);
t9=C_mutate(((C_word *)((C_word*)t0)[4])+1,t8);
t10=t3;
f_25052(t10,t9);}}

/* k25050 in k25047 in do3735 in k24997 in do3733 in inf->pre in k24943 in k24940 in k24937 in k24934 in k24878 in k24875 in k24872 in k24869 in k24866 in k24863 in k24860 in k24857 in k23555 in k23486 in k23293 in k23290 in k23185 in k23134 in k11783 in k10718 in k10715 in k7274 in k7271 in k6978 in k6975 in k6971 in k6680 in k6677 in k6674 in k6671 */
static void C_fcall f_25052(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
t2=((C_word*)((C_word*)t0)[6])[1];
f_25017(t2,((C_word*)t0)[5],((C_word*)((C_word*)t0)[4])[1],((C_word*)((C_word*)t0)[3])[1],((C_word*)((C_word*)t0)[2])[1]);}

/* k25043 in do3735 in k24997 in do3733 in inf->pre in k24943 in k24940 in k24937 in k24934 in k24878 in k24875 in k24872 in k24869 in k24866 in k24863 in k24860 in k24857 in k23555 in k23486 in k23293 in k23290 in k23185 in k23134 in k11783 in k10718 in k10715 in k7274 in k7271 in k6978 in k6975 in k6971 in k6680 in k6677 in k6674 in k6671 */
static void C_ccall f_25045(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 380  inf->pre");
f_24968(((C_word*)t0)[2],t1);}

/* k25029 in do3735 in k24997 in do3733 in inf->pre in k24943 in k24940 in k24937 in k24934 in k24878 in k24875 in k24872 in k24869 in k24866 in k24863 in k24860 in k24857 in k23555 in k23486 in k23293 in k23290 in k23185 in k23134 in k11783 in k10718 in k10715 in k7274 in k7271 in k6978 in k6975 in k6971 in k6680 in k6677 in k6674 in k6671 */
static void C_ccall f_25031(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[18],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_25031,2,t0,t1);}
t2=C_mutate(((C_word *)((C_word*)t0)[5])+1,t1);
t3=(C_truep(((C_word*)((C_word*)t0)[4])[1])?(C_word)C_a_i_list(&a,3,((C_word*)((C_word*)t0)[3])[1],((C_word*)((C_word*)t0)[4])[1],((C_word*)((C_word*)t0)[5])[1]):(C_word)C_a_i_list(&a,3,((C_word*)((C_word*)t0)[3])[1],((C_word*)((C_word*)t0)[5])[1],C_SCHEME_FALSE));
t4=C_mutate(((C_word *)((C_word*)t0)[4])+1,t3);
t5=((C_word*)t0)[2];
((C_proc2)(void*)(*((C_word*)t5+1)))(2,t5,t4);}

/* k25000 in k24997 in do3733 in inf->pre in k24943 in k24940 in k24937 in k24934 in k24878 in k24875 in k24872 in k24869 in k24866 in k24863 in k24860 in k24857 in k23555 in k23486 in k23293 in k23290 in k23185 in k23134 in k11783 in k10718 in k10715 in k7274 in k7271 in k6978 in k6975 in k6971 in k6680 in k6677 in k6674 in k6671 */
static void C_ccall f_25002(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
t2=((C_word*)((C_word*)t0)[3])[1];
f_24980(t2,((C_word*)t0)[2]);}

/* is-op? in k24943 in k24940 in k24937 in k24934 in k24878 in k24875 in k24872 in k24869 in k24866 in k24863 in k24860 in k24857 in k23555 in k23486 in k23293 in k23290 in k23185 in k23134 in k11783 in k10718 in k10715 in k7274 in k7271 in k6978 in k6975 in k6971 in k6680 in k6677 in k6674 in k6671 */
static void C_fcall f_24947(C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word ab[4],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_24947,NULL,2,t1,t2);}
t3=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_24954,a[2]=t2,a[3]=t1,tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 380  token-unit?");
f_23559(t3,t2);}

/* k24952 in is-op? in k24943 in k24940 in k24937 in k24934 in k24878 in k24875 in k24872 in k24869 in k24866 in k24863 in k24860 in k24857 in k23555 in k23486 in k23293 in k23290 in k23185 in k23134 in k11783 in k10718 in k10715 in k7274 in k7271 in k6978 in k6975 in k6971 in k6680 in k6677 in k6674 in k6671 */
static void C_ccall f_24954(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[3],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_24954,2,t0,t1);}
if(C_truep(t1)){
t2=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_24957,a[2]=((C_word*)t0)[3],tmp=(C_word)a,a+=3,tmp);
C_trace("ChickenBridge.scm: 380  parse-unit-type");
f_23511(t2,((C_word*)t0)[2]);}
else{
t2=((C_word*)t0)[3];
((C_proc2)(void*)(*((C_word*)t2+1)))(2,t2,C_SCHEME_FALSE);}}

/* k24955 in k24952 in is-op? in k24943 in k24940 in k24937 in k24934 in k24878 in k24875 in k24872 in k24869 in k24866 in k24863 in k24860 in k24857 in k23555 in k23486 in k23293 in k23290 in k23185 in k23134 in k11783 in k10718 in k10715 in k7274 in k7271 in k6978 in k6975 in k6971 in k6680 in k6677 in k6674 in k6671 */
static void C_ccall f_24957(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[4],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_24957,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_24963,a[2]=t1,a[3]=((C_word*)t0)[2],tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 380  SalOpType?");
f_24724(t2,t1);}

/* k24961 in k24955 in k24952 in is-op? in k24943 in k24940 in k24937 in k24934 in k24878 in k24875 in k24872 in k24869 in k24866 in k24863 in k24860 in k24857 in k23555 in k23486 in k23293 in k23290 in k23185 in k23134 in k11783 in k10718 in k10715 in k7274 in k7271 in k6978 in k6975 in k6971 in k6680 in k6677 in k6674 in k6671 */
static void C_ccall f_24963(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[4],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_24963,2,t0,t1);}
if(C_truep(t1)){
t2=((C_word*)t0)[3];
t3=((C_word*)t0)[2];
t4=t2;
((C_proc2)(void*)(*((C_word*)t4+1)))(2,t4,(C_word)C_a_i_bitwise_and(&a,2,t3,C_fix(255)));}
else{
t2=((C_word*)t0)[3];
((C_proc2)(void*)(*((C_word*)t2+1)))(2,t2,C_SCHEME_FALSE);}}

/* remove-token-type in k24878 in k24875 in k24872 in k24869 in k24866 in k24863 in k24860 in k24857 in k23555 in k23486 in k23293 in k23290 in k23185 in k23134 in k11783 in k10718 in k10715 in k7274 in k7271 in k6978 in k6975 in k6971 in k6680 in k6677 in k6674 in k6671 */
static void C_fcall f_24882(C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word ab[14],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_24882,NULL,3,t1,t2,t3);}
t4=(C_word)C_a_i_list(&a,1,C_SCHEME_TRUE);
t5=t4;
t6=(*a=C_VECTOR_TYPE|1,a[1]=t5,tmp=(C_word)a,a+=2,tmp);
t7=C_SCHEME_UNDEFINED;
t8=(*a=C_VECTOR_TYPE|1,a[1]=t7,tmp=(C_word)a,a+=2,tmp);
t9=C_set_block_item(t8,0,(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_24891,a[2]=t3,a[3]=t6,a[4]=t8,a[5]=t4,a[6]=((C_word)li391),tmp=(C_word)a,a+=7,tmp));
t10=((C_word*)t8)[1];
f_24891(t10,t1,t2);}

/* do3699 in remove-token-type in k24878 in k24875 in k24872 in k24869 in k24866 in k24863 in k24860 in k24857 in k23555 in k23486 in k23293 in k23290 in k23185 in k23134 in k11783 in k10718 in k10715 in k7274 in k7271 in k6978 in k6975 in k6971 in k6680 in k6677 in k6674 in k6671 */
static void C_fcall f_24891(C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[10],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_24891,NULL,3,t0,t1,t2);}
if(C_truep((C_word)C_i_nullp(t2))){
t3=t1;
((C_proc2)(void*)(*((C_word*)t3+1)))(2,t3,(C_word)C_i_cdr(((C_word*)t0)[5]));}
else{
t3=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_24904,a[2]=t1,a[3]=((C_word*)t0)[4],a[4]=t2,tmp=(C_word)a,a+=5,tmp);
t4=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_24914,a[2]=((C_word*)t0)[3],a[3]=t2,a[4]=t3,tmp=(C_word)a,a+=5,tmp);
t5=(C_word)C_i_car(t2);
C_trace("ChickenBridge.scm: 380  token-unit-type=?");
f_23575(t4,t5,((C_word*)t0)[2]);}}

/* k24912 in do3699 in remove-token-type in k24878 in k24875 in k24872 in k24869 in k24866 in k24863 in k24860 in k24857 in k23555 in k23486 in k23293 in k23290 in k23185 in k23134 in k11783 in k10718 in k10715 in k7274 in k7271 in k6978 in k6975 in k6971 in k6680 in k6677 in k6674 in k6671 */
static void C_ccall f_24914(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word ab[3],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_24914,2,t0,t1);}
if(C_truep(t1)){
t2=((C_word*)t0)[4];
f_24904(t2,C_SCHEME_FALSE);}
else{
t2=(C_word)C_i_car(((C_word*)t0)[3]);
t3=(C_word)C_a_i_list(&a,1,t2);
t4=(C_word)C_i_set_cdr(((C_word*)((C_word*)t0)[2])[1],t3);
t5=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[2])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[2])+1,t5);
t7=((C_word*)t0)[4];
f_24904(t7,t6);}}

/* k24902 in do3699 in remove-token-type in k24878 in k24875 in k24872 in k24869 in k24866 in k24863 in k24860 in k24857 in k23555 in k23486 in k23293 in k23290 in k23185 in k23134 in k11783 in k10718 in k10715 in k7274 in k7271 in k6978 in k6975 in k6971 in k6680 in k6677 in k6674 in k6671 */
static void C_fcall f_24904(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word *a;
t2=(C_word)C_i_cdr(((C_word*)t0)[4]);
t3=((C_word*)((C_word*)t0)[3])[1];
f_24891(t3,((C_word*)t0)[2],t2);}

/* SalType=? in k23555 in k23486 in k23293 in k23290 in k23185 in k23134 in k11783 in k10718 in k10715 in k7274 in k7271 in k6978 in k6975 in k6971 in k6680 in k6677 in k6674 in k6671 */
static void C_fcall f_24838(C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word t6;
C_word ab[8],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_24838,NULL,3,t1,t2,t3);}
t4=(C_word)C_a_i_arithmetic_shift(&a,2,t2,C_fix(-8));
t5=(C_word)C_a_i_arithmetic_shift(&a,2,t3,C_fix(-8));
t6=t1;
((C_proc2)(void*)(*((C_word*)t6+1)))(2,t6,(C_word)C_i_nequalp(t4,t5));}

/* SalRuleType? in k23555 in k23486 in k23293 in k23290 in k23185 in k23134 in k11783 in k10718 in k10715 in k7274 in k7271 in k6978 in k6975 in k6971 in k6680 in k6677 in k6674 in k6671 */
static void C_fcall f_24826(C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word *a;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_24826,NULL,2,t1,t2);}
t3=(C_word)C_i_lessp(C_fix(25600),t2);
t4=t1;
((C_proc2)(void*)(*((C_word*)t4+1)))(2,t4,(C_truep(t3)?(C_word)C_i_lessp(t2,C_fix(38400)):C_SCHEME_FALSE));}

/* SalOpType? in k23555 in k23486 in k23293 in k23290 in k23185 in k23134 in k11783 in k10718 in k10715 in k7274 in k7271 in k6978 in k6975 in k6971 in k6680 in k6677 in k6674 in k6671 */
static void C_fcall f_24724(C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word *a;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_24724,NULL,2,t1,t2);}
t3=(C_word)C_i_lessp(C_fix(6656),t2);
t4=t1;
((C_proc2)(void*)(*((C_word*)t4+1)))(2,t4,(C_truep(t3)?(C_word)C_i_lessp(t2,C_fix(11520)):C_SCHEME_FALSE));}

/* SalTokenType? in k23555 in k23486 in k23293 in k23290 in k23185 in k23134 in k11783 in k10718 in k10715 in k7274 in k7271 in k6978 in k6975 in k6971 in k6680 in k6677 in k6674 in k6671 */
static void C_fcall f_24676(C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word *a;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_24676,NULL,2,t1,t2);}
t3=(C_word)C_i_lessp(C_fix(0),t2);
t4=t1;
((C_proc2)(void*)(*((C_word*)t4+1)))(2,t4,(C_truep(t3)?(C_word)C_i_lessp(t2,C_fix(25600)):C_SCHEME_FALSE));}

/* parser in k23555 in k23486 in k23293 in k23290 in k23185 in k23134 in k11783 in k10718 in k10715 in k7274 in k7271 in k6978 in k6975 in k6971 in k6680 in k6677 in k6674 in k6671 */
static void C_fcall f_24057(C_word t1,C_word t2,C_word t3,C_word t4,C_word t5,C_word t6,C_word t7){
C_word tmp;
C_word t8;
C_word t9;
C_word t10;
C_word ab[11],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_24057,NULL,7,t1,t2,t3,t4,t5,t6,t7);}
t8=(*a=C_VECTOR_TYPE|1,a[1]=t3,tmp=(C_word)a,a+=2,tmp);
t9=(*a=C_CLOSURE_TYPE|8,a[1]=(C_word)f_24061,a[2]=t4,a[3]=t7,a[4]=t6,a[5]=t5,a[6]=t8,a[7]=t1,a[8]=t2,tmp=(C_word)a,a+=9,tmp);
if(C_truep(t6)){
C_trace("ChickenBridge.scm: 380  printf");
t10=C_retrieve(lf[475]);
((C_proc6)C_retrieve_proc(t10))(6,t10,t9,lf[476],t5,t2,((C_word*)t8)[1]);}
else{
t10=t9;
f_24061(2,t10,C_SCHEME_UNDEFINED);}}

/* k24059 in parser in k23555 in k23486 in k23293 in k23290 in k23185 in k23134 in k11783 in k10718 in k10715 in k7274 in k7271 in k6978 in k6975 in k6971 in k6680 in k6677 in k6674 in k6671 */
static void C_ccall f_24061(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_24061,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|8,a[1]=(C_word)f_24064,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],a[7]=((C_word*)t0)[7],a[8]=((C_word*)t0)[8],tmp=(C_word)a,a+=9,tmp);
C_trace("ChickenBridge.scm: 380  null-tokens?");
f_23179(t2,((C_word*)((C_word*)t0)[6])[1]);}

/* k24062 in k24059 in parser in k23555 in k23486 in k23293 in k23290 in k23185 in k23134 in k11783 in k10718 in k10715 in k7274 in k7271 in k6978 in k6975 in k6971 in k6680 in k6677 in k6674 in k6671 */
static void C_ccall f_24064(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[18],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_24064,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|8,a[1]=(C_word)f_24067,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],a[7]=((C_word*)t0)[7],a[8]=((C_word*)t0)[8],tmp=(C_word)a,a+=9,tmp);
if(C_truep(t1)){
t3=t2;
f_24067(t3,t1);}
else{
t3=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_24482,a[2]=t2,tmp=(C_word)a,a+=3,tmp);
t4=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_24486,a[2]=t3,tmp=(C_word)a,a+=3,tmp);
t5=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_24490,a[2]=t4,tmp=(C_word)a,a+=3,tmp);
C_trace("ChickenBridge.scm: 380  first-token");
f_23167(t5,((C_word*)((C_word*)t0)[6])[1]);}}

/* k24488 in k24062 in k24059 in parser in k23555 in k23486 in k23293 in k23290 in k23185 in k23134 in k11783 in k10718 in k10715 in k7274 in k7271 in k6978 in k6975 in k6971 in k6680 in k6677 in k6674 in k6671 */
static void C_ccall f_24490(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 380  token-position");
f_23126(((C_word*)t0)[2],t1);}

/* k24484 in k24062 in k24059 in parser in k23555 in k23486 in k23293 in k23290 in k23185 in k23134 in k11783 in k10718 in k10715 in k7274 in k7271 in k6978 in k6975 in k6971 in k6680 in k6677 in k6674 in k6671 */
static void C_ccall f_24486(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 380  max");
t2=*((C_word*)lf[295]+1);
((C_proc4)C_retrieve_proc(t2))(4,t2,((C_word*)t0)[2],C_retrieve2(lf[469],"*maxtokpos*"),t1);}

/* k24480 in k24062 in k24059 in parser in k23555 in k23486 in k23293 in k23290 in k23185 in k23134 in k11783 in k10718 in k10715 in k7274 in k7271 in k6978 in k6975 in k6971 in k6680 in k6677 in k6674 in k6671 */
static void C_ccall f_24482(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word *a;
t2=C_mutate(&lf[469],t1);
t3=((C_word*)t0)[2];
f_24067(t3,t2);}

/* k24065 in k24062 in k24059 in parser in k23555 in k23486 in k23293 in k23290 in k23185 in k23134 in k11783 in k10718 in k10715 in k7274 in k7271 in k6978 in k6975 in k6971 in k6680 in k6677 in k6674 in k6671 */
static void C_fcall f_24067(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[16],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_24067,NULL,2,t0,t1);}
t2=((C_word*)t0)[8];
if(C_truep((C_word)C_i_numberp(t2))){
t3=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_24076,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
C_trace("ChickenBridge.scm: 380  pattern-value");
t4=C_retrieve2(lf[315],"pattern-value");
((C_proc3)C_retrieve_proc(t4))(3,t4,t3,((C_word*)t0)[8]);}
else{
t3=(*a=C_CLOSURE_TYPE|8,a[1]=(C_word)f_24190,a[2]=((C_word*)t0)[8],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[7],a[7]=((C_word*)t0)[6],a[8]=((C_word*)t0)[2],tmp=(C_word)a,a+=9,tmp);
C_trace("ChickenBridge.scm: 380  pattern-clause?");
f_23321(t3,((C_word*)t0)[8]);}}

/* k24188 in k24065 in k24062 in k24059 in parser in k23555 in k23486 in k23293 in k23290 in k23185 in k23134 in k11783 in k10718 in k10715 in k7274 in k7271 in k6978 in k6975 in k6971 in k6680 in k6677 in k6674 in k6671 */
static void C_ccall f_24190(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[13],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_24190,2,t0,t1);}
if(C_truep(t1)){
t2=(*a=C_CLOSURE_TYPE|8,a[1]=(C_word)f_24196,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],a[7]=((C_word*)t0)[7],a[8]=((C_word*)t0)[8],tmp=(C_word)a,a+=9,tmp);
t3=((C_word*)t0)[2];
t4=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_23366,a[2]=t2,a[3]=t3,tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 380  pattern-clause?");
f_23321(t4,t3);}
else{
C_trace("ChickenBridge.scm: 380  error");
t2=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t2))(4,t2,((C_word*)t0)[6],lf[474],((C_word*)t0)[2]);}}

/* k23364 in k24188 in k24065 in k24062 in k24059 in parser in k23555 in k23486 in k23293 in k23290 in k23185 in k23134 in k11783 in k10718 in k10715 in k7274 in k7271 in k6978 in k6975 in k6971 in k6680 in k6677 in k6674 in k6671 */
static void C_ccall f_23366(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word *a;
if(C_truep(t1)){
t2=(C_word)C_i_car(((C_word*)t0)[3]);
t3=((C_word*)t0)[2];
f_24196(t3,(C_word)C_eqp(t2,lf[456]));}
else{
t2=((C_word*)t0)[2];
f_24196(t2,C_SCHEME_FALSE);}}

/* k24194 in k24188 in k24065 in k24062 in k24059 in parser in k23555 in k23486 in k23293 in k23290 in k23185 in k23134 in k11783 in k10718 in k10715 in k7274 in k7271 in k6978 in k6975 in k6971 in k6680 in k6677 in k6674 in k6671 */
static void C_fcall f_24196(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word t14;
C_word t15;
C_word ab[32],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_24196,NULL,2,t0,t1);}
t2=(C_truep(t1)?t1:((C_word*)t0)[8]);
if(C_truep(t2)){
t3=C_SCHEME_FALSE;
t4=(*a=C_VECTOR_TYPE|1,a[1]=t3,tmp=(C_word)a,a+=2,tmp);
t5=((C_word*)((C_word*)t0)[7])[1];
t6=(*a=C_VECTOR_TYPE|1,a[1]=t5,tmp=(C_word)a,a+=2,tmp);
t7=C_SCHEME_END_OF_LIST;
t8=(*a=C_VECTOR_TYPE|1,a[1]=t7,tmp=(C_word)a,a+=2,tmp);
t9=C_SCHEME_FALSE;
t10=(*a=C_VECTOR_TYPE|1,a[1]=t9,tmp=(C_word)a,a+=2,tmp);
t11=(*a=C_CLOSURE_TYPE|11,a[1]=(C_word)f_24205,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=t10,a[7]=((C_word*)t0)[7],a[8]=t6,a[9]=t8,a[10]=t4,a[11]=((C_word*)t0)[6],tmp=(C_word)a,a+=12,tmp);
C_trace("ChickenBridge.scm: 380  pattern-nsubs");
f_23339(t11,((C_word*)t0)[2]);}
else{
t3=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_24284,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[7],a[7]=((C_word*)t0)[6],tmp=(C_word)a,a+=8,tmp);
t4=((C_word*)t0)[2];
t5=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_23382,a[2]=t3,a[3]=t4,tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 380  pattern-clause?");
f_23321(t5,t4);}}

/* k23380 in k24194 in k24188 in k24065 in k24062 in k24059 in parser in k23555 in k23486 in k23293 in k23290 in k23185 in k23134 in k11783 in k10718 in k10715 in k7274 in k7271 in k6978 in k6975 in k6971 in k6680 in k6677 in k6674 in k6671 */
static void C_ccall f_23382(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word *a;
if(C_truep(t1)){
t2=(C_word)C_i_car(((C_word*)t0)[3]);
t3=((C_word*)t0)[2];
f_24284(t3,(C_word)C_eqp(t2,lf[457]));}
else{
t2=((C_word*)t0)[2];
f_24284(t2,C_SCHEME_FALSE);}}

/* k24282 in k24194 in k24188 in k24065 in k24062 in k24059 in parser in k23555 in k23486 in k23293 in k23290 in k23185 in k23134 in k11783 in k10718 in k10715 in k7274 in k7271 in k6978 in k6975 in k6971 in k6680 in k6677 in k6674 in k6671 */
static void C_fcall f_24284(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word ab[25],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_24284,NULL,2,t0,t1);}
if(C_truep(t1)){
t2=C_SCHEME_FALSE;
t3=(*a=C_VECTOR_TYPE|1,a[1]=t2,tmp=(C_word)a,a+=2,tmp);
t4=C_SCHEME_FALSE;
t5=(*a=C_VECTOR_TYPE|1,a[1]=t4,tmp=(C_word)a,a+=2,tmp);
t6=C_SCHEME_END_OF_LIST;
t7=(*a=C_VECTOR_TYPE|1,a[1]=t6,tmp=(C_word)a,a+=2,tmp);
t8=(*a=C_CLOSURE_TYPE|10,a[1]=(C_word)f_24290,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],a[7]=t7,a[8]=t5,a[9]=((C_word*)t0)[7],a[10]=t3,tmp=(C_word)a,a+=11,tmp);
C_trace("ChickenBridge.scm: 380  pattern-nsubs");
f_23339(t8,((C_word*)t0)[2]);}
else{
t2=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_24354,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[2],a[6]=((C_word*)t0)[7],a[7]=((C_word*)t0)[6],tmp=(C_word)a,a+=8,tmp);
C_trace("ChickenBridge.scm: 380  pattern-zero-or-more?");
f_23407(t2,((C_word*)t0)[2]);}}

/* k24352 in k24282 in k24194 in k24188 in k24065 in k24062 in k24059 in parser in k23555 in k23486 in k23293 in k23290 in k23185 in k23134 in k11783 in k10718 in k10715 in k7274 in k7271 in k6978 in k6975 in k6971 in k6680 in k6677 in k6674 in k6671 */
static void C_ccall f_24354(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[12],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_24354,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_24357,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],a[7]=((C_word*)t0)[7],tmp=(C_word)a,a+=8,tmp);
if(C_truep(t1)){
t3=t2;
f_24357(t3,t1);}
else{
t3=((C_word*)t0)[5];
t4=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_23398,a[2]=t2,a[3]=t3,tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 380  pattern-clause?");
f_23321(t4,t3);}}

/* k23396 in k24352 in k24282 in k24194 in k24188 in k24065 in k24062 in k24059 in parser in k23555 in k23486 in k23293 in k23290 in k23185 in k23134 in k11783 in k10718 in k10715 in k7274 in k7271 in k6978 in k6975 in k6971 in k6680 in k6677 in k6674 in k6671 */
static void C_ccall f_23398(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word *a;
if(C_truep(t1)){
t2=(C_word)C_i_car(((C_word*)t0)[3]);
t3=((C_word*)t0)[2];
f_24357(t3,(C_word)C_eqp(t2,lf[127]));}
else{
t2=((C_word*)t0)[2];
f_24357(t2,C_SCHEME_FALSE);}}

/* k24355 in k24352 in k24282 in k24194 in k24188 in k24065 in k24062 in k24059 in parser in k23555 in k23486 in k23293 in k23290 in k23185 in k23134 in k11783 in k10718 in k10715 in k7274 in k7271 in k6978 in k6975 in k6971 in k6680 in k6677 in k6674 in k6671 */
static void C_fcall f_24357(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word t14;
C_word t15;
C_word t16;
C_word t17;
C_word t18;
C_word t19;
C_word ab[46],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_24357,NULL,2,t0,t1);}
if(C_truep(t1)){
t2=C_SCHEME_TRUE;
t3=(*a=C_VECTOR_TYPE|1,a[1]=t2,tmp=(C_word)a,a+=2,tmp);
t4=C_SCHEME_FALSE;
t5=(*a=C_VECTOR_TYPE|1,a[1]=t4,tmp=(C_word)a,a+=2,tmp);
t6=((C_word*)((C_word*)t0)[7])[1];
t7=(*a=C_VECTOR_TYPE|1,a[1]=t6,tmp=(C_word)a,a+=2,tmp);
t8=C_SCHEME_END_OF_LIST;
t9=(*a=C_VECTOR_TYPE|1,a[1]=t8,tmp=(C_word)a,a+=2,tmp);
t10=C_fix(0);
t11=(*a=C_VECTOR_TYPE|1,a[1]=t10,tmp=(C_word)a,a+=2,tmp);
t12=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_24363,a[2]=((C_word*)t0)[5],a[3]=t11,a[4]=((C_word*)t0)[7],a[5]=t9,a[6]=t3,a[7]=((C_word*)t0)[6],tmp=(C_word)a,a+=8,tmp);
t13=C_SCHEME_UNDEFINED;
t14=(*a=C_VECTOR_TYPE|1,a[1]=t13,tmp=(C_word)a,a+=2,tmp);
t15=C_set_block_item(t14,0,(*a=C_CLOSURE_TYPE|13,a[1]=(C_word)f_24386,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=t5,a[7]=t11,a[8]=t7,a[9]=((C_word*)t0)[7],a[10]=t9,a[11]=t14,a[12]=t3,a[13]=((C_word)li383),tmp=(C_word)a,a+=14,tmp));
t16=((C_word*)t14)[1];
f_24386(t16,t12);}
else{
t2=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_24435,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[7],a[7]=((C_word*)t0)[6],tmp=(C_word)a,a+=8,tmp);
t3=((C_word*)t0)[5];
t4=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_23430,a[2]=t2,a[3]=t3,tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 380  pattern-clause?");
f_23321(t4,t3);}}

/* k23428 in k24355 in k24352 in k24282 in k24194 in k24188 in k24065 in k24062 in k24059 in parser in k23555 in k23486 in k23293 in k23290 in k23185 in k23134 in k11783 in k10718 in k10715 in k7274 in k7271 in k6978 in k6975 in k6971 in k6680 in k6677 in k6674 in k6671 */
static void C_ccall f_23430(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word *a;
if(C_truep(t1)){
t2=(C_word)C_i_car(((C_word*)t0)[3]);
t3=((C_word*)t0)[2];
f_24435(t3,(C_word)C_eqp(t2,lf[473]));}
else{
t2=((C_word*)t0)[2];
f_24435(t2,C_SCHEME_FALSE);}}

/* k24433 in k24355 in k24352 in k24282 in k24194 in k24188 in k24065 in k24062 in k24059 in parser in k23555 in k23486 in k23293 in k23290 in k23185 in k23134 in k11783 in k10718 in k10715 in k7274 in k7271 in k6978 in k6975 in k6971 in k6680 in k6677 in k6674 in k6671 */
static void C_fcall f_24435(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word ab[27],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_24435,NULL,2,t0,t1);}
if(C_truep(t1)){
t2=C_SCHEME_FALSE;
t3=(*a=C_VECTOR_TYPE|1,a[1]=t2,tmp=(C_word)a,a+=2,tmp);
t4=C_SCHEME_END_OF_LIST;
t5=(*a=C_VECTOR_TYPE|1,a[1]=t4,tmp=(C_word)a,a+=2,tmp);
t6=C_SCHEME_END_OF_LIST;
t7=(*a=C_VECTOR_TYPE|1,a[1]=t6,tmp=(C_word)a,a+=2,tmp);
t8=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_24444,a[2]=((C_word*)t0)[6],a[3]=t7,a[4]=t5,a[5]=((C_word*)t0)[7],a[6]=t3,tmp=(C_word)a,a+=7,tmp);
t9=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_24455,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[5],a[7]=((C_word)li384),tmp=(C_word)a,a+=8,tmp);
t10=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_24461,a[2]=t7,a[3]=t5,a[4]=t3,a[5]=((C_word)li385),tmp=(C_word)a,a+=6,tmp);
C_trace("ChickenBridge.scm: 380  call-with-values");
C_call_with_values(4,0,t8,t9,t10);}
else{
t2=((C_word*)t0)[5];
t3=(C_word)C_i_car(t2);
C_trace("ChickenBridge.scm: 380  error");
t4=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,((C_word*)t0)[7],lf[472],t3);}}

/* a24460 in k24433 in k24355 in k24352 in k24282 in k24194 in k24188 in k24065 in k24062 in k24059 in parser in k23555 in k23486 in k23293 in k23290 in k23185 in k23134 in k11783 in k10718 in k10715 in k7274 in k7271 in k6978 in k6975 in k6971 in k6680 in k6677 in k6674 in k6671 */
static void C_ccall f_24461(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4){
C_word tmp;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word *a;
if(c!=5) C_bad_argc_2(c,5,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr5,(void*)f_24461,5,t0,t1,t2,t3,t4);}
t5=C_mutate(((C_word *)((C_word*)t0)[4])+1,t2);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t3);
t7=C_mutate(((C_word *)((C_word*)t0)[2])+1,t4);
t8=t1;
((C_proc2)(void*)(*((C_word*)t8+1)))(2,t8,t7);}

/* a24454 in k24433 in k24355 in k24352 in k24282 in k24194 in k24188 in k24065 in k24062 in k24059 in parser in k23555 in k23486 in k23293 in k23290 in k23185 in k23134 in k11783 in k10718 in k10715 in k7274 in k7271 in k6978 in k6975 in k6971 in k6680 in k6677 in k6674 in k6671 */
static void C_ccall f_24455(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
if(c!=2) C_bad_argc_2(c,2,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_24455,2,t0,t1);}
C_trace("ChickenBridge.scm: 380  parser");
f_24057(t1,((C_word*)t0)[6],((C_word*)((C_word*)t0)[5])[1],C_SCHEME_TRUE,((C_word*)t0)[4],((C_word*)t0)[3],((C_word*)t0)[2]);}

/* k24442 in k24433 in k24355 in k24352 in k24282 in k24194 in k24188 in k24065 in k24062 in k24059 in parser in k23555 in k23486 in k23293 in k23290 in k23185 in k23134 in k11783 in k10718 in k10715 in k7274 in k7271 in k6978 in k6975 in k6971 in k6680 in k6677 in k6674 in k6671 */
static void C_ccall f_24444(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
if(C_truep(((C_word*)((C_word*)t0)[6])[1])){
C_trace("ChickenBridge.scm: 380  values");
C_values(5,0,((C_word*)t0)[5],((C_word*)((C_word*)t0)[6])[1],((C_word*)((C_word*)t0)[4])[1],((C_word*)((C_word*)t0)[3])[1]);}
else{
C_trace("ChickenBridge.scm: 380  values");
C_values(5,0,((C_word*)t0)[5],C_SCHEME_TRUE,C_SCHEME_FALSE,((C_word*)((C_word*)t0)[2])[1]);}}

/* do3436 in k24355 in k24352 in k24282 in k24194 in k24188 in k24065 in k24062 in k24059 in parser in k23555 in k23486 in k23293 in k23290 in k23185 in k23134 in k11783 in k10718 in k10715 in k7274 in k7271 in k6978 in k6975 in k6971 in k6680 in k6677 in k6674 in k6671 */
static void C_fcall f_24386(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[14],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_24386,NULL,2,t0,t1);}
t2=(C_word)C_i_not(((C_word*)((C_word*)t0)[12])[1]);
t3=(*a=C_CLOSURE_TYPE|13,a[1]=(C_word)f_24396,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],a[7]=((C_word*)t0)[7],a[8]=((C_word*)t0)[8],a[9]=((C_word*)t0)[9],a[10]=((C_word*)t0)[10],a[11]=((C_word*)t0)[12],a[12]=((C_word*)t0)[11],a[13]=t1,tmp=(C_word)a,a+=14,tmp);
if(C_truep(t2)){
t4=t3;
f_24396(2,t4,t2);}
else{
C_trace("ChickenBridge.scm: 380  null-tokens?");
f_23179(t3,((C_word*)((C_word*)t0)[8])[1]);}}

/* k24394 in do3436 in k24355 in k24352 in k24282 in k24194 in k24188 in k24065 in k24062 in k24059 in parser in k23555 in k23486 in k23293 in k23290 in k23185 in k23134 in k11783 in k10718 in k10715 in k7274 in k7271 in k6978 in k6975 in k6971 in k6680 in k6677 in k6674 in k6671 */
static void C_ccall f_24396(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[24],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_24396,2,t0,t1);}
if(C_truep(t1)){
t2=((C_word*)t0)[13];
((C_proc2)(void*)(*((C_word*)t2+1)))(2,t2,C_SCHEME_FALSE);}
else{
t2=(*a=C_CLOSURE_TYPE|9,a[1]=(C_word)f_24399,a[2]=((C_word*)t0)[6],a[3]=((C_word*)t0)[7],a[4]=((C_word*)t0)[8],a[5]=((C_word*)t0)[9],a[6]=((C_word*)t0)[10],a[7]=((C_word*)t0)[11],a[8]=((C_word*)t0)[13],a[9]=((C_word*)t0)[12],tmp=(C_word)a,a+=10,tmp);
t3=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_24416,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[8],a[6]=((C_word*)t0)[5],a[7]=((C_word)li381),tmp=(C_word)a,a+=8,tmp);
t4=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_24422,a[2]=((C_word*)t0)[8],a[3]=((C_word*)t0)[6],a[4]=((C_word*)t0)[11],a[5]=((C_word)li382),tmp=(C_word)a,a+=6,tmp);
C_trace("ChickenBridge.scm: 380  call-with-values");
C_call_with_values(4,0,t2,t3,t4);}}

/* a24421 in k24394 in do3436 in k24355 in k24352 in k24282 in k24194 in k24188 in k24065 in k24062 in k24059 in parser in k23555 in k23486 in k23293 in k23290 in k23185 in k23134 in k11783 in k10718 in k10715 in k7274 in k7271 in k6978 in k6975 in k6971 in k6680 in k6677 in k6674 in k6671 */
static void C_ccall f_24422(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4){
C_word tmp;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word *a;
if(c!=5) C_bad_argc_2(c,5,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr5,(void*)f_24422,5,t0,t1,t2,t3,t4);}
t5=C_mutate(((C_word *)((C_word*)t0)[4])+1,t2);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t3);
t7=C_mutate(((C_word *)((C_word*)t0)[2])+1,t4);
t8=t1;
((C_proc2)(void*)(*((C_word*)t8+1)))(2,t8,t7);}

/* a24415 in k24394 in do3436 in k24355 in k24352 in k24282 in k24194 in k24188 in k24065 in k24062 in k24059 in parser in k23555 in k23486 in k23293 in k23290 in k23185 in k23134 in k11783 in k10718 in k10715 in k7274 in k7271 in k6978 in k6975 in k6971 in k6680 in k6677 in k6674 in k6671 */
static void C_ccall f_24416(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
if(c!=2) C_bad_argc_2(c,2,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_24416,2,t0,t1);}
C_trace("ChickenBridge.scm: 380  parser");
f_24057(t1,((C_word*)t0)[6],((C_word*)((C_word*)t0)[5])[1],C_SCHEME_TRUE,((C_word*)t0)[4],((C_word*)t0)[3],((C_word*)t0)[2]);}

/* k24397 in k24394 in do3436 in k24355 in k24352 in k24282 in k24194 in k24188 in k24065 in k24062 in k24059 in parser in k23555 in k23486 in k23293 in k23290 in k23185 in k23134 in k11783 in k10718 in k10715 in k7274 in k7271 in k6978 in k6975 in k6971 in k6680 in k6677 in k6674 in k6671 */
static void C_ccall f_24399(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[11],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_24399,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_24402,a[2]=((C_word*)t0)[8],a[3]=((C_word*)t0)[9],tmp=(C_word)a,a+=4,tmp);
if(C_truep(((C_word*)((C_word*)t0)[7])[1])){
t3=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_24409,a[2]=t2,a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],tmp=(C_word)a,a+=7,tmp);
C_trace("ChickenBridge.scm: 380  append");
t4=*((C_word*)lf[18]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t3,((C_word*)((C_word*)t0)[6])[1],((C_word*)((C_word*)t0)[2])[1]);}
else{
t3=t2;
f_24402(t3,C_SCHEME_UNDEFINED);}}

/* k24407 in k24397 in k24394 in do3436 in k24355 in k24352 in k24282 in k24194 in k24188 in k24065 in k24062 in k24059 in parser in k23555 in k23486 in k23293 in k23290 in k23185 in k23134 in k11783 in k10718 in k10715 in k7274 in k7271 in k6978 in k6975 in k6971 in k6680 in k6677 in k6674 in k6671 */
static void C_ccall f_24409(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[4],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_24409,2,t0,t1);}
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_mutate(((C_word *)((C_word*)t0)[5])+1,((C_word*)((C_word*)t0)[4])[1]);
t4=(C_word)C_a_i_plus(&a,2,((C_word*)((C_word*)t0)[3])[1],C_fix(1));
t5=C_mutate(((C_word *)((C_word*)t0)[3])+1,t4);
t6=((C_word*)t0)[2];
f_24402(t6,t5);}

/* k24400 in k24397 in k24394 in do3436 in k24355 in k24352 in k24282 in k24194 in k24188 in k24065 in k24062 in k24059 in parser in k23555 in k23486 in k23293 in k23290 in k23185 in k23134 in k11783 in k10718 in k10715 in k7274 in k7271 in k6978 in k6975 in k6971 in k6680 in k6677 in k6674 in k6671 */
static void C_fcall f_24402(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
t2=((C_word*)((C_word*)t0)[3])[1];
f_24386(t2,((C_word*)t0)[2]);}

/* k24361 in k24355 in k24352 in k24282 in k24194 in k24188 in k24065 in k24062 in k24059 in parser in k23555 in k23486 in k23293 in k23290 in k23185 in k23134 in k11783 in k10718 in k10715 in k7274 in k7271 in k6978 in k6975 in k6971 in k6680 in k6677 in k6674 in k6671 */
static void C_ccall f_24363(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[12],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_24363,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_24366,a[2]=((C_word*)t0)[4],a[3]=((C_word*)t0)[5],a[4]=((C_word*)t0)[6],a[5]=((C_word*)t0)[7],tmp=(C_word)a,a+=6,tmp);
t3=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_24372,a[2]=((C_word*)t0)[5],a[3]=t2,a[4]=((C_word*)t0)[6],a[5]=((C_word*)t0)[3],tmp=(C_word)a,a+=6,tmp);
C_trace("ChickenBridge.scm: 380  pattern-zero-or-more?");
f_23407(t3,((C_word*)t0)[2]);}

/* k24370 in k24361 in k24355 in k24352 in k24282 in k24194 in k24188 in k24065 in k24062 in k24059 in parser in k23555 in k23486 in k23293 in k23290 in k23185 in k23134 in k11783 in k10718 in k10715 in k7274 in k7271 in k6978 in k6975 in k6971 in k6680 in k6677 in k6674 in k6671 */
static void C_ccall f_24372(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word *a;
t2=(C_truep(t1)?t1:(C_word)C_i_greaterp(((C_word*)((C_word*)t0)[5])[1],C_fix(0)));
if(C_truep(t2)){
t3=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t4=((C_word*)t0)[3];
f_24366(t4,t3);}
else{
t3=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_FALSE);
t4=C_set_block_item(((C_word*)t0)[2],0,C_SCHEME_END_OF_LIST);
t5=((C_word*)t0)[3];
f_24366(t5,t4);}}

/* k24364 in k24361 in k24355 in k24352 in k24282 in k24194 in k24188 in k24065 in k24062 in k24059 in parser in k23555 in k23486 in k23293 in k23290 in k23185 in k23134 in k11783 in k10718 in k10715 in k7274 in k7271 in k6978 in k6975 in k6971 in k6680 in k6677 in k6674 in k6671 */
static void C_fcall f_24366(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 380  values");
C_values(5,0,((C_word*)t0)[5],((C_word*)((C_word*)t0)[4])[1],((C_word*)((C_word*)t0)[3])[1],((C_word*)((C_word*)t0)[2])[1]);}

/* k24288 in k24282 in k24194 in k24188 in k24065 in k24062 in k24059 in parser in k23555 in k23486 in k23293 in k23290 in k23185 in k23134 in k11783 in k10718 in k10715 in k7274 in k7271 in k6978 in k6975 in k6971 in k6680 in k6677 in k6674 in k6671 */
static void C_ccall f_24290(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[22],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_24290,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_24293,a[2]=((C_word*)t0)[6],a[3]=((C_word*)t0)[7],a[4]=((C_word*)t0)[8],a[5]=((C_word*)t0)[9],a[6]=((C_word*)t0)[10],tmp=(C_word)a,a+=7,tmp);
t3=C_SCHEME_UNDEFINED;
t4=(*a=C_VECTOR_TYPE|1,a[1]=t3,tmp=(C_word)a,a+=2,tmp);
t5=C_set_block_item(t4,0,(*a=C_CLOSURE_TYPE|12,a[1]=(C_word)f_24308,a[2]=((C_word*)t0)[7],a[3]=((C_word*)t0)[8],a[4]=((C_word*)t0)[2],a[5]=((C_word*)t0)[3],a[6]=((C_word*)t0)[4],a[7]=((C_word*)t0)[6],a[8]=((C_word*)t0)[5],a[9]=t4,a[10]=t1,a[11]=((C_word*)t0)[10],a[12]=((C_word)li380),tmp=(C_word)a,a+=13,tmp));
t6=((C_word*)t4)[1];
f_24308(t6,t2,C_fix(0));}

/* do3416 in k24288 in k24282 in k24194 in k24188 in k24065 in k24062 in k24059 in parser in k23555 in k23486 in k23293 in k23290 in k23185 in k23134 in k11783 in k10718 in k10715 in k7274 in k7271 in k6978 in k6975 in k6971 in k6680 in k6677 in k6674 in k6671 */
static void C_fcall f_24308(C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word ab[20],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_24308,NULL,3,t0,t1,t2);}
t3=((C_word*)((C_word*)t0)[11])[1];
t4=(C_truep(t3)?t3:(C_word)C_i_nequalp(t2,((C_word*)t0)[10]));
if(C_truep(t4)){
t5=t1;
((C_proc2)(void*)(*((C_word*)t5+1)))(2,t5,C_SCHEME_FALSE);}
else{
t5=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_24318,a[2]=t1,a[3]=((C_word*)t0)[9],a[4]=t2,tmp=(C_word)a,a+=5,tmp);
t6=(*a=C_CLOSURE_TYPE|8,a[1]=(C_word)f_24327,a[2]=t2,a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],a[7]=((C_word*)t0)[8],a[8]=((C_word)li378),tmp=(C_word)a,a+=9,tmp);
t7=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_24341,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[11],a[5]=((C_word)li379),tmp=(C_word)a,a+=6,tmp);
C_trace("ChickenBridge.scm: 380  call-with-values");
C_call_with_values(4,0,t5,t6,t7);}}

/* a24340 in do3416 in k24288 in k24282 in k24194 in k24188 in k24065 in k24062 in k24059 in parser in k23555 in k23486 in k23293 in k23290 in k23185 in k23134 in k11783 in k10718 in k10715 in k7274 in k7271 in k6978 in k6975 in k6971 in k6680 in k6677 in k6674 in k6671 */
static void C_ccall f_24341(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4){
C_word tmp;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word *a;
if(c!=5) C_bad_argc_2(c,5,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr5,(void*)f_24341,5,t0,t1,t2,t3,t4);}
t5=C_mutate(((C_word *)((C_word*)t0)[4])+1,t2);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t3);
t7=C_mutate(((C_word *)((C_word*)t0)[2])+1,t4);
t8=t1;
((C_proc2)(void*)(*((C_word*)t8+1)))(2,t8,t7);}

/* a24326 in do3416 in k24288 in k24282 in k24194 in k24188 in k24065 in k24062 in k24059 in parser in k23555 in k23486 in k23293 in k23290 in k23185 in k23134 in k11783 in k10718 in k10715 in k7274 in k7271 in k6978 in k6975 in k6971 in k6680 in k6677 in k6674 in k6671 */
static void C_ccall f_24327(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[7],*a=ab;
if(c!=2) C_bad_argc_2(c,2,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_24327,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_24335,a[2]=((C_word*)t0)[4],a[3]=((C_word*)t0)[5],a[4]=((C_word*)t0)[6],a[5]=t1,a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
C_trace("ChickenBridge.scm: 380  pattern-sub");
f_23349(t2,((C_word*)t0)[3],((C_word*)t0)[2]);}

/* k24333 in a24326 in do3416 in k24288 in k24282 in k24194 in k24188 in k24065 in k24062 in k24059 in parser in k23555 in k23486 in k23293 in k23290 in k23185 in k23134 in k11783 in k10718 in k10715 in k7274 in k7271 in k6978 in k6975 in k6971 in k6680 in k6677 in k6674 in k6671 */
static void C_ccall f_24335(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[4],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_24335,2,t0,t1);}
t2=(C_word)C_a_i_plus(&a,2,((C_word*)t0)[6],C_fix(1));
C_trace("ChickenBridge.scm: 380  parser");
f_24057(((C_word*)t0)[5],t1,((C_word*)((C_word*)t0)[4])[1],C_SCHEME_FALSE,t2,((C_word*)t0)[3],((C_word*)t0)[2]);}

/* k24316 in do3416 in k24288 in k24282 in k24194 in k24188 in k24065 in k24062 in k24059 in parser in k23555 in k23486 in k23293 in k23290 in k23185 in k23134 in k11783 in k10718 in k10715 in k7274 in k7271 in k6978 in k6975 in k6971 in k6680 in k6677 in k6674 in k6671 */
static void C_ccall f_24318(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[4],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_24318,2,t0,t1);}
t2=(C_word)C_a_i_plus(&a,2,((C_word*)t0)[4],C_fix(1));
t3=((C_word*)((C_word*)t0)[3])[1];
f_24308(t3,((C_word*)t0)[2],t2);}

/* k24291 in k24288 in k24282 in k24194 in k24188 in k24065 in k24062 in k24059 in parser in k23555 in k23486 in k23293 in k23290 in k23185 in k23134 in k11783 in k10718 in k10715 in k7274 in k7271 in k6978 in k6975 in k6971 in k6680 in k6677 in k6674 in k6671 */
static void C_ccall f_24293(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
if(C_truep(((C_word*)((C_word*)t0)[6])[1])){
C_trace("ChickenBridge.scm: 380  values");
C_values(5,0,((C_word*)t0)[5],((C_word*)((C_word*)t0)[6])[1],((C_word*)((C_word*)t0)[4])[1],((C_word*)((C_word*)t0)[3])[1]);}
else{
C_trace("ChickenBridge.scm: 380  values");
C_values(5,0,((C_word*)t0)[5],C_SCHEME_FALSE,C_SCHEME_END_OF_LIST,((C_word*)((C_word*)t0)[2])[1]);}}

/* k24203 in k24194 in k24188 in k24065 in k24062 in k24059 in parser in k23555 in k23486 in k23293 in k23290 in k23185 in k23134 in k11783 in k10718 in k10715 in k7274 in k7271 in k6978 in k6975 in k6971 in k6680 in k6677 in k6674 in k6671 */
static void C_ccall f_24205(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word ab[26],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_24205,2,t0,t1);}
t2=C_SCHEME_FALSE;
t3=(*a=C_VECTOR_TYPE|1,a[1]=t2,tmp=(C_word)a,a+=2,tmp);
t4=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_24208,a[2]=((C_word*)t0)[7],a[3]=t3,a[4]=((C_word*)t0)[8],a[5]=((C_word*)t0)[9],a[6]=((C_word*)t0)[10],a[7]=((C_word*)t0)[11],tmp=(C_word)a,a+=8,tmp);
t5=C_SCHEME_UNDEFINED;
t6=(*a=C_VECTOR_TYPE|1,a[1]=t5,tmp=(C_word)a,a+=2,tmp);
t7=C_set_block_item(t6,0,(*a=C_CLOSURE_TYPE|13,a[1]=(C_word)f_24227,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[8],a[6]=((C_word*)t0)[5],a[7]=((C_word*)t0)[9],a[8]=((C_word*)t0)[6],a[9]=((C_word*)t0)[10],a[10]=t6,a[11]=t3,a[12]=t1,a[13]=((C_word)li377),tmp=(C_word)a,a+=14,tmp));
t8=((C_word*)t6)[1];
f_24227(t8,t4,C_fix(0));}

/* do3394 in k24203 in k24194 in k24188 in k24065 in k24062 in k24059 in parser in k23555 in k23486 in k23293 in k23290 in k23185 in k23134 in k11783 in k10718 in k10715 in k7274 in k7271 in k6978 in k6975 in k6971 in k6680 in k6677 in k6674 in k6671 */
static void C_fcall f_24227(C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word ab[24],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_24227,NULL,3,t0,t1,t2);}
t3=(C_word)C_i_nequalp(t2,((C_word*)t0)[12]);
t4=(C_truep(t3)?t3:((C_word*)((C_word*)t0)[11])[1]);
if(C_truep(t4)){
t5=t1;
((C_proc2)(void*)(*((C_word*)t5+1)))(2,t5,C_SCHEME_FALSE);}
else{
t5=(*a=C_CLOSURE_TYPE|8,a[1]=(C_word)f_24240,a[2]=((C_word*)t0)[11],a[3]=((C_word*)t0)[7],a[4]=((C_word*)t0)[8],a[5]=((C_word*)t0)[9],a[6]=t1,a[7]=((C_word*)t0)[10],a[8]=t2,tmp=(C_word)a,a+=9,tmp);
t6=(*a=C_CLOSURE_TYPE|8,a[1]=(C_word)f_24260,a[2]=t2,a[3]=((C_word*)t0)[2],a[4]=((C_word*)t0)[3],a[5]=((C_word*)t0)[4],a[6]=((C_word*)t0)[5],a[7]=((C_word*)t0)[6],a[8]=((C_word)li375),tmp=(C_word)a,a+=9,tmp);
t7=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_24274,a[2]=((C_word*)t0)[5],a[3]=((C_word*)t0)[8],a[4]=((C_word*)t0)[9],a[5]=((C_word)li376),tmp=(C_word)a,a+=6,tmp);
C_trace("ChickenBridge.scm: 380  call-with-values");
C_call_with_values(4,0,t5,t6,t7);}}

/* a24273 in do3394 in k24203 in k24194 in k24188 in k24065 in k24062 in k24059 in parser in k23555 in k23486 in k23293 in k23290 in k23185 in k23134 in k11783 in k10718 in k10715 in k7274 in k7271 in k6978 in k6975 in k6971 in k6680 in k6677 in k6674 in k6671 */
static void C_ccall f_24274(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4){
C_word tmp;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word *a;
if(c!=5) C_bad_argc_2(c,5,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr5,(void*)f_24274,5,t0,t1,t2,t3,t4);}
t5=C_mutate(((C_word *)((C_word*)t0)[4])+1,t2);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t3);
t7=C_mutate(((C_word *)((C_word*)t0)[2])+1,t4);
t8=t1;
((C_proc2)(void*)(*((C_word*)t8+1)))(2,t8,t7);}

/* a24259 in do3394 in k24203 in k24194 in k24188 in k24065 in k24062 in k24059 in parser in k23555 in k23486 in k23293 in k23290 in k23185 in k23134 in k11783 in k10718 in k10715 in k7274 in k7271 in k6978 in k6975 in k6971 in k6680 in k6677 in k6674 in k6671 */
static void C_ccall f_24260(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[7],*a=ab;
if(c!=2) C_bad_argc_2(c,2,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_24260,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_24268,a[2]=((C_word*)t0)[4],a[3]=((C_word*)t0)[5],a[4]=((C_word*)t0)[6],a[5]=t1,a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
C_trace("ChickenBridge.scm: 380  pattern-sub");
f_23349(t2,((C_word*)t0)[3],((C_word*)t0)[2]);}

/* k24266 in a24259 in do3394 in k24203 in k24194 in k24188 in k24065 in k24062 in k24059 in parser in k23555 in k23486 in k23293 in k23290 in k23185 in k23134 in k11783 in k10718 in k10715 in k7274 in k7271 in k6978 in k6975 in k6971 in k6680 in k6677 in k6674 in k6671 */
static void C_ccall f_24268(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[4],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_24268,2,t0,t1);}
t2=(C_word)C_a_i_plus(&a,2,((C_word*)t0)[6],C_fix(1));
C_trace("ChickenBridge.scm: 380  parser");
f_24057(((C_word*)t0)[5],t1,((C_word*)((C_word*)t0)[4])[1],C_SCHEME_FALSE,t2,((C_word*)t0)[3],((C_word*)t0)[2]);}

/* k24238 in do3394 in k24203 in k24194 in k24188 in k24065 in k24062 in k24059 in parser in k23555 in k23486 in k23293 in k23290 in k23185 in k23134 in k11783 in k10718 in k10715 in k7274 in k7271 in k6978 in k6975 in k6971 in k6680 in k6677 in k6674 in k6671 */
static void C_ccall f_24240(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word ab[8],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_24240,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_24243,a[2]=((C_word*)t0)[6],a[3]=((C_word*)t0)[7],a[4]=((C_word*)t0)[8],tmp=(C_word)a,a+=5,tmp);
t3=((C_word*)((C_word*)t0)[5])[1];
if(C_truep(t3)){
t4=(C_word)C_a_i_cons(&a,2,((C_word*)((C_word*)t0)[4])[1],((C_word*)((C_word*)t0)[3])[1]);
t5=C_mutate(((C_word *)((C_word*)t0)[3])+1,t4);
t6=t2;
f_24243(t6,t5);}
else{
t4=C_set_block_item(((C_word*)t0)[2],0,C_SCHEME_TRUE);
t5=t2;
f_24243(t5,t4);}}

/* k24241 in k24238 in do3394 in k24203 in k24194 in k24188 in k24065 in k24062 in k24059 in parser in k23555 in k23486 in k23293 in k23290 in k23185 in k23134 in k11783 in k10718 in k10715 in k7274 in k7271 in k6978 in k6975 in k6971 in k6680 in k6677 in k6674 in k6671 */
static void C_fcall f_24243(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[4],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_24243,NULL,2,t0,t1);}
t2=(C_word)C_a_i_plus(&a,2,((C_word*)t0)[4],C_fix(1));
t3=((C_word*)((C_word*)t0)[3])[1];
f_24227(t3,((C_word*)t0)[2],t2);}

/* k24206 in k24203 in k24194 in k24188 in k24065 in k24062 in k24059 in parser in k23555 in k23486 in k23293 in k23290 in k23185 in k23134 in k11783 in k10718 in k10715 in k7274 in k7271 in k6978 in k6975 in k6971 in k6680 in k6677 in k6674 in k6671 */
static void C_ccall f_24208(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word ab[10],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_24208,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_24211,a[2]=((C_word*)t0)[4],a[3]=((C_word*)t0)[5],a[4]=((C_word*)t0)[6],a[5]=((C_word*)t0)[7],tmp=(C_word)a,a+=6,tmp);
if(C_truep(((C_word*)((C_word*)t0)[3])[1])){
t3=C_set_block_item(((C_word*)t0)[6],0,C_SCHEME_FALSE);
t4=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_END_OF_LIST);
t5=C_mutate(((C_word *)((C_word*)t0)[4])+1,((C_word*)((C_word*)t0)[2])[1]);
t6=t2;
f_24211(t6,t5);}
else{
t3=C_set_block_item(((C_word*)t0)[6],0,C_SCHEME_TRUE);
t4=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_24225,a[2]=t2,a[3]=((C_word*)t0)[5],tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 380  reverse");
t5=*((C_word*)lf[216]+1);
((C_proc3)C_retrieve_proc(t5))(3,t5,t4,((C_word*)((C_word*)t0)[5])[1]);}}

/* k24223 in k24206 in k24203 in k24194 in k24188 in k24065 in k24062 in k24059 in parser in k23555 in k23486 in k23293 in k23290 in k23185 in k23134 in k11783 in k10718 in k10715 in k7274 in k7271 in k6978 in k6975 in k6971 in k6680 in k6677 in k6674 in k6671 */
static void C_ccall f_24225(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[3])+1,t1);
t3=((C_word*)t0)[2];
f_24211(t3,t2);}

/* k24209 in k24206 in k24203 in k24194 in k24188 in k24065 in k24062 in k24059 in parser in k23555 in k23486 in k23293 in k23290 in k23185 in k23134 in k11783 in k10718 in k10715 in k7274 in k7271 in k6978 in k6975 in k6971 in k6680 in k6677 in k6674 in k6671 */
static void C_fcall f_24211(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 380  values");
C_values(5,0,((C_word*)t0)[5],((C_word*)((C_word*)t0)[4])[1],((C_word*)((C_word*)t0)[3])[1],((C_word*)((C_word*)t0)[2])[1]);}

/* k24074 in k24065 in k24062 in k24059 in parser in k23555 in k23486 in k23293 in k23290 in k23185 in k23134 in k11783 in k10718 in k10715 in k7274 in k7271 in k6978 in k6975 in k6971 in k6680 in k6677 in k6674 in k6671 */
static void C_ccall f_24076(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[8],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_24076,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_24082,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=t1,a[6]=((C_word*)t0)[5],a[7]=((C_word*)t0)[6],tmp=(C_word)a,a+=8,tmp);
C_trace("ChickenBridge.scm: 380  SalTokenType?");
f_24676(t2,t1);}

/* k24080 in k24074 in k24065 in k24062 in k24059 in parser in k23555 in k23486 in k23293 in k23290 in k23185 in k23134 in k11783 in k10718 in k10715 in k7274 in k7271 in k6978 in k6975 in k6971 in k6680 in k6677 in k6674 in k6671 */
static void C_ccall f_24082(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[13],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_24082,2,t0,t1);}
if(C_truep(t1)){
t2=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_24088,a[2]=((C_word*)t0)[5],a[3]=((C_word*)t0)[6],a[4]=((C_word*)t0)[7],tmp=(C_word)a,a+=5,tmp);
C_trace("ChickenBridge.scm: 380  null-tokens?");
f_23179(t2,((C_word*)((C_word*)t0)[6])[1]);}
else{
t2=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_24140,a[2]=((C_word*)t0)[5],a[3]=((C_word*)t0)[7],a[4]=((C_word*)t0)[2],a[5]=((C_word*)t0)[3],a[6]=((C_word*)t0)[6],a[7]=((C_word*)t0)[4],tmp=(C_word)a,a+=8,tmp);
C_trace("ChickenBridge.scm: 380  SalRuleType?");
f_24826(t2,((C_word*)t0)[5]);}}

/* k24138 in k24080 in k24074 in k24065 in k24062 in k24059 in parser in k23555 in k23486 in k23293 in k23290 in k23185 in k23134 in k11783 in k10718 in k10715 in k7274 in k7271 in k6978 in k6975 in k6971 in k6680 in k6677 in k6674 in k6671 */
static void C_ccall f_24140(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_24140,2,t0,t1);}
if(C_truep(t1)){
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_24143,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
C_trace("ChickenBridge.scm: 380  get-rule");
f_23297(t2,((C_word*)t0)[2],C_SCHEME_END_OF_LIST);}
else{
C_trace("ChickenBridge.scm: 380  error");
t2=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t2))(4,t2,((C_word*)t0)[3],lf[471],((C_word*)t0)[2]);}}

/* k24141 in k24138 in k24080 in k24074 in k24065 in k24062 in k24059 in parser in k23555 in k23486 in k23293 in k23290 in k23185 in k23134 in k11783 in k10718 in k10715 in k7274 in k7271 in k6978 in k6975 in k6971 in k6680 in k6677 in k6674 in k6671 */
static void C_ccall f_24143(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word ab[13],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_24143,2,t0,t1);}
t2=t1;
t3=(C_word)C_i_check_structure(t2,lf[426]);
t4=(C_word)C_i_block_ref(t2,C_fix(3));
t5=t1;
t6=(C_word)C_i_check_structure(t5,lf[426]);
t7=(C_word)C_i_block_ref(t5,C_fix(4));
t8=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_24154,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=t4,a[6]=((C_word*)t0)[6],a[7]=((C_word)li373),tmp=(C_word)a,a+=8,tmp);
t9=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_24164,a[2]=((C_word*)t0)[3],a[3]=t7,a[4]=((C_word)li374),tmp=(C_word)a,a+=5,tmp);
C_trace("ChickenBridge.scm: 380  call-with-values");
C_call_with_values(4,0,((C_word*)t0)[2],t8,t9);}

/* a24163 in k24141 in k24138 in k24080 in k24074 in k24065 in k24062 in k24059 in parser in k23555 in k23486 in k23293 in k23290 in k23185 in k23134 in k11783 in k10718 in k10715 in k7274 in k7271 in k6978 in k6975 in k6971 in k6680 in k6677 in k6674 in k6671 */
static void C_ccall f_24164(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4){
C_word tmp;
C_word t5;
C_word t6;
C_word ab[5],*a=ab;
if(c!=5) C_bad_argc_2(c,5,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr5,(void*)f_24164,5,t0,t1,t2,t3,t4);}
if(C_truep(t2)){
t5=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_24175,a[2]=t4,a[3]=t2,a[4]=t1,tmp=(C_word)a,a+=5,tmp);
if(C_truep(((C_word*)t0)[3])){
C_trace("ChickenBridge.scm: 380  func");
t6=((C_word*)t0)[3];
((C_proc4)C_retrieve_proc(t6))(4,t6,t5,t3,((C_word*)t0)[2]);}
else{
t6=t5;
f_24175(2,t6,t3);}}
else{
C_trace("ChickenBridge.scm: 380  values");
C_values(5,0,t1,C_SCHEME_FALSE,C_SCHEME_FALSE,t4);}}

/* k24173 in a24163 in k24141 in k24138 in k24080 in k24074 in k24065 in k24062 in k24059 in parser in k23555 in k23486 in k23293 in k23290 in k23185 in k23134 in k11783 in k10718 in k10715 in k7274 in k7271 in k6978 in k6975 in k6971 in k6680 in k6677 in k6674 in k6671 */
static void C_ccall f_24175(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 380  values");
C_values(5,0,((C_word*)t0)[4],((C_word*)t0)[3],t1,((C_word*)t0)[2]);}

/* a24153 in k24141 in k24138 in k24080 in k24074 in k24065 in k24062 in k24059 in parser in k23555 in k23486 in k23293 in k23290 in k23185 in k23134 in k11783 in k10718 in k10715 in k7274 in k7271 in k6978 in k6975 in k6971 in k6680 in k6677 in k6674 in k6671 */
static void C_ccall f_24154(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[4],*a=ab;
if(c!=2) C_bad_argc_2(c,2,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_24154,2,t0,t1);}
t2=(C_word)C_a_i_plus(&a,2,((C_word*)t0)[6],C_fix(1));
C_trace("ChickenBridge.scm: 380  parser");
f_24057(t1,((C_word*)t0)[5],((C_word*)((C_word*)t0)[4])[1],C_SCHEME_FALSE,t2,((C_word*)t0)[3],((C_word*)t0)[2]);}

/* k24086 in k24080 in k24074 in k24065 in k24062 in k24059 in parser in k23555 in k23486 in k23293 in k23290 in k23185 in k23134 in k11783 in k10718 in k10715 in k7274 in k7271 in k6978 in k6975 in k6971 in k6680 in k6677 in k6674 in k6671 */
static void C_ccall f_24088(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[5],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_24088,2,t0,t1);}
if(C_truep(t1)){
C_trace("ChickenBridge.scm: 380  values");
C_values(5,0,((C_word*)t0)[4],C_SCHEME_FALSE,C_SCHEME_FALSE,C_SCHEME_END_OF_LIST);}
else{
t2=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_24098,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[3],tmp=(C_word)a,a+=5,tmp);
C_trace("ChickenBridge.scm: 380  first-token");
f_23167(t2,((C_word*)((C_word*)t0)[3])[1]);}}

/* k24096 in k24086 in k24080 in k24074 in k24065 in k24062 in k24059 in parser in k23555 in k23486 in k23293 in k23290 in k23185 in k23134 in k11783 in k10718 in k10715 in k7274 in k7271 in k6978 in k6975 in k6971 in k6680 in k6677 in k6674 in k6671 */
static void C_ccall f_24098(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_24098,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_24104,a[2]=t1,a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],tmp=(C_word)a,a+=5,tmp);
t3=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_24134,a[2]=((C_word*)t0)[2],a[3]=t2,tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 380  token-type");
f_23090(t3,t1);}

/* k24132 in k24096 in k24086 in k24080 in k24074 in k24065 in k24062 in k24059 in parser in k23555 in k23486 in k23293 in k23290 in k23185 in k23134 in k11783 in k10718 in k10715 in k7274 in k7271 in k6978 in k6975 in k6971 in k6680 in k6677 in k6674 in k6671 */
static void C_ccall f_24134(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 380  SalType=?");
f_24838(((C_word*)t0)[3],t1,((C_word*)t0)[2]);}

/* k24102 in k24096 in k24086 in k24080 in k24074 in k24065 in k24062 in k24059 in parser in k23555 in k23486 in k23293 in k23290 in k23185 in k23134 in k11783 in k10718 in k10715 in k7274 in k7271 in k6978 in k6975 in k6971 in k6680 in k6677 in k6674 in k6671 */
static void C_ccall f_24104(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[8],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_24104,2,t0,t1);}
if(C_truep(t1)){
t2=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_24111,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],tmp=(C_word)a,a+=4,tmp);
t3=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_24119,a[2]=((C_word*)t0)[2],a[3]=t2,tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 380  token-type");
f_23090(t3,((C_word*)t0)[2]);}
else{
C_trace("ChickenBridge.scm: 380  values");
C_values(5,0,((C_word*)t0)[3],C_SCHEME_FALSE,C_SCHEME_FALSE,((C_word*)((C_word*)t0)[4])[1]);}}

/* k24117 in k24102 in k24096 in k24086 in k24080 in k24074 in k24065 in k24062 in k24059 in parser in k23555 in k23486 in k23293 in k23290 in k23185 in k23134 in k11783 in k10718 in k10715 in k7274 in k7271 in k6978 in k6975 in k6971 in k6680 in k6677 in k6674 in k6671 */
static void C_ccall f_24119(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[5],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_24119,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_24123,a[2]=((C_word*)t0)[2],a[3]=t1,a[4]=((C_word*)t0)[3],tmp=(C_word)a,a+=5,tmp);
C_trace("ChickenBridge.scm: 380  token-string");
f_23108(t2,((C_word*)t0)[2]);}

/* k24121 in k24117 in k24102 in k24096 in k24086 in k24080 in k24074 in k24065 in k24062 in k24059 in parser in k23555 in k23486 in k23293 in k23290 in k23185 in k23134 in k11783 in k10718 in k10715 in k7274 in k7271 in k6978 in k6975 in k6971 in k6680 in k6677 in k6674 in k6671 */
static void C_ccall f_24123(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[5],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_24123,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_24127,a[2]=t1,a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],tmp=(C_word)a,a+=5,tmp);
C_trace("ChickenBridge.scm: 380  token-position");
f_23126(t2,((C_word*)t0)[2]);}

/* k24125 in k24121 in k24117 in k24102 in k24096 in k24086 in k24080 in k24074 in k24065 in k24062 in k24059 in parser in k23555 in k23486 in k23293 in k23290 in k23185 in k23134 in k11783 in k10718 in k10715 in k7274 in k7271 in k6978 in k6975 in k6971 in k6680 in k6677 in k6674 in k6671 */
static void C_ccall f_24127(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 380  make-parse-unit");
f_23490(((C_word*)t0)[4],((C_word*)t0)[3],((C_word*)t0)[2],t1);}

/* k24109 in k24102 in k24096 in k24086 in k24080 in k24074 in k24065 in k24062 in k24059 in parser in k23555 in k23486 in k23293 in k23290 in k23185 in k23134 in k11783 in k10718 in k10715 in k7274 in k7271 in k6978 in k6975 in k6971 in k6680 in k6677 in k6674 in k6671 */
static void C_ccall f_24111(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word *a;
t2=((C_word*)((C_word*)t0)[3])[1];
t3=(C_word)C_i_cdr(t2);
C_trace("ChickenBridge.scm: 380  values");
C_values(5,0,((C_word*)t0)[2],C_SCHEME_TRUE,t1,t3);}

/* simple-unit-emitter in k23555 in k23486 in k23293 in k23290 in k23185 in k23134 in k11783 in k10718 in k10715 in k7274 in k7271 in k6978 in k6975 in k6971 in k6680 in k6677 in k6674 in k6671 */
static void C_fcall f_23953(C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word ab[4],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_23953,NULL,2,t1,t2);}
t3=t1;
((C_proc2)(void*)(*((C_word*)t3+1)))(2,t3,(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_23955,a[2]=t2,a[3]=((C_word)li371),tmp=(C_word)a,a+=4,tmp));}

/* f_23955 in simple-unit-emitter in k23555 in k23486 in k23293 in k23290 in k23185 in k23134 in k11783 in k10718 in k10715 in k7274 in k7271 in k6978 in k6975 in k6971 in k6680 in k6677 in k6674 in k6671 */
static void C_ccall f_23955(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4){
C_word tmp;
C_word t5;
C_word t6;
C_word t7;
C_word ab[9],*a=ab;
if(c!=5) C_bad_argc_2(c,5,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr5,(void*)f_23955,5,t0,t1,t2,t3,t4);}
t5=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_23959,a[2]=((C_word*)t0)[2],a[3]=t1,a[4]=t4,a[5]=t3,tmp=(C_word)a,a+=6,tmp);
t6=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_24003,a[2]=t5,tmp=(C_word)a,a+=3,tmp);
C_trace("ChickenBridge.scm: 380  parse-unit-parsed");
f_23529(t6,t2);}

/* k24001 */
static void C_ccall f_24003(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 380  append");
t2=*((C_word*)lf[18]+1);
((C_proc4)C_retrieve_proc(t2))(4,t2,((C_word*)t0)[2],t1,C_SCHEME_END_OF_LIST);}

/* k23957 */
static void C_ccall f_23959(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_23959,2,t0,t1);}
t2=t1;
t3=(*a=C_VECTOR_TYPE|1,a[1]=t2,tmp=(C_word)a,a+=2,tmp);
t4=((C_word*)t3)[1];
t5=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_23962,a[2]=t3,a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=t4,tmp=(C_word)a,a+=7,tmp);
if(C_truep(((C_word*)t0)[2])){
t6=(C_word)C_i_set_car(((C_word*)t3)[1],((C_word*)t0)[2]);
t7=(C_word)C_i_cdr(((C_word*)t3)[1]);
t8=C_set_block_item(t3,0,t7);
t9=t5;
f_23962(t9,t8);}
else{
t6=t5;
f_23962(t6,C_SCHEME_UNDEFINED);}}

/* k23960 in k23957 */
static void C_fcall f_23962(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_23962,NULL,2,t0,t1);}
t2=C_SCHEME_UNDEFINED;
t3=(*a=C_VECTOR_TYPE|1,a[1]=t2,tmp=(C_word)a,a+=2,tmp);
t4=C_set_block_item(t3,0,(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_23967,a[2]=((C_word*)t0)[4],a[3]=((C_word*)t0)[5],a[4]=t3,a[5]=((C_word*)t0)[6],a[6]=((C_word)li370),tmp=(C_word)a,a+=7,tmp));
t5=((C_word*)t3)[1];
f_23967(t5,((C_word*)t0)[3],((C_word*)((C_word*)t0)[2])[1]);}

/* do3351 in k23960 in k23957 */
static void C_fcall f_23967(C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word t5;
C_word ab[5],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_23967,NULL,3,t0,t1,t2);}
if(C_truep((C_word)C_i_nullp(t2))){
t3=t1;
((C_proc2)(void*)(*((C_word*)t3+1)))(2,t3,((C_word*)t0)[5]);}
else{
t3=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_23988,a[2]=t1,a[3]=((C_word*)t0)[4],a[4]=t2,tmp=(C_word)a,a+=5,tmp);
t4=(C_word)C_i_car(t2);
C_trace("ChickenBridge.scm: 380  emit");
f_23704(t3,t4,((C_word*)t0)[3],((C_word*)t0)[2]);}}

/* k23986 in do3351 in k23960 in k23957 */
static void C_ccall f_23988(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word *a;
t2=(C_word)C_i_set_car(((C_word*)t0)[4],t1);
t3=(C_word)C_i_cdr(((C_word*)t0)[4]);
t4=((C_word*)((C_word*)t0)[3])[1];
f_23967(t4,((C_word*)t0)[2],t3);}

/* simple-unit-parser in k23555 in k23486 in k23293 in k23290 in k23185 in k23134 in k11783 in k10718 in k10715 in k7274 in k7271 in k6978 in k6975 in k6971 in k6680 in k6677 in k6674 in k6671 */
static void C_fcall f_23945(C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word ab[4],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_23945,NULL,2,t1,t2);}
t3=t1;
((C_proc2)(void*)(*((C_word*)t3+1)))(2,t3,(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_23947,a[2]=t2,a[3]=((C_word)li368),tmp=(C_word)a,a+=4,tmp));}

/* f_23947 in simple-unit-parser in k23555 in k23486 in k23293 in k23290 in k23185 in k23134 in k11783 in k10718 in k10715 in k7274 in k7271 in k6978 in k6975 in k6971 in k6680 in k6677 in k6674 in k6671 */
static void C_ccall f_23947(C_word c,C_word t0,C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word *a;
if(c!=4) C_bad_argc_2(c,4,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr4,(void*)f_23947,4,t0,t1,t2,t3);}
C_trace("ChickenBridge.scm: 380  make-parse-unit");
f_23490(t1,((C_word*)t0)[2],t2,C_SCHEME_FALSE);}

/* != in k23555 in k23486 in k23293 in k23290 in k23185 in k23134 in k11783 in k10718 in k10715 in k7274 in k7271 in k6978 in k6975 in k6971 in k6680 in k6677 in k6674 in k6671 */
static void C_ccall f_23768(C_word c,C_word t0,C_word t1,...){
C_word tmp;
C_word t2;
va_list v;
C_word *a,c2=c;
C_save_rest(t1,c2,2);
C_check_for_interrupt;
if(!C_demand(c*C_SIZEOF_PAIR+3)){
C_save_and_reclaim((void*)tr2r,(void*)f_23768r,2,t0,t1);}
else{
a=C_alloc((c-2)*3);
t2=C_restore_rest(a,C_rest_count(0));
f_23768r(t0,t1,t2);}}

static void C_ccall f_23768r(C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word *a=C_alloc(3);
t3=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_23776,a[2]=t1,tmp=(C_word)a,a+=3,tmp);
C_apply(4,0,t3,*((C_word*)lf[466]+1),t2);}

/* k23774 in != in k23555 in k23486 in k23293 in k23290 in k23185 in k23134 in k11783 in k10718 in k10715 in k7274 in k7271 in k6978 in k6975 in k6971 in k6680 in k6677 in k6674 in k6671 */
static void C_ccall f_23776(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
t2=((C_word*)t0)[2];
((C_proc2)(void*)(*((C_word*)t2+1)))(2,t2,(C_word)C_i_not(t1));}

/* emit-list in k23555 in k23486 in k23293 in k23290 in k23185 in k23134 in k11783 in k10718 in k10715 in k7274 in k7271 in k6978 in k6975 in k6971 in k6680 in k6677 in k6674 in k6671 */
static void C_fcall f_23737(C_word t1,C_word t2,C_word t3,C_word t4){
C_word tmp;
C_word t5;
C_word t6;
C_word t7;
C_word ab[6],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_23737,NULL,4,t1,t2,t3,t4);}
if(C_truep((C_word)C_i_nullp(t2))){
t5=t1;
((C_proc2)(void*)(*((C_word*)t5+1)))(2,t5,C_SCHEME_END_OF_LIST);}
else{
t5=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_23754,a[2]=t4,a[3]=t3,a[4]=t2,a[5]=t1,tmp=(C_word)a,a+=6,tmp);
t6=(C_word)C_i_car(t2);
C_trace("ChickenBridge.scm: 380  emit");
f_23704(t5,t6,t3,t4);}}

/* k23752 in emit-list in k23555 in k23486 in k23293 in k23290 in k23185 in k23134 in k11783 in k10718 in k10715 in k7274 in k7271 in k6978 in k6975 in k6971 in k6680 in k6677 in k6674 in k6671 */
static void C_ccall f_23754(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[4],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_23754,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_23758,a[2]=t1,a[3]=((C_word*)t0)[5],tmp=(C_word)a,a+=4,tmp);
t3=(C_word)C_i_cdr(((C_word*)t0)[4]);
C_trace("ChickenBridge.scm: 380  emit-list");
f_23737(t2,t3,((C_word*)t0)[3],((C_word*)t0)[2]);}

/* k23756 in k23752 in emit-list in k23555 in k23486 in k23293 in k23290 in k23185 in k23134 in k11783 in k10718 in k10715 in k7274 in k7271 in k6978 in k6975 in k6971 in k6680 in k6677 in k6674 in k6671 */
static void C_ccall f_23758(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word ab[3],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_23758,2,t0,t1);}
t2=((C_word*)t0)[3];
((C_proc2)(void*)(*((C_word*)t2+1)))(2,t2,(C_word)C_a_i_cons(&a,2,((C_word*)t0)[2],t1));}

/* emit in k23555 in k23486 in k23293 in k23290 in k23185 in k23134 in k11783 in k10718 in k10715 in k7274 in k7271 in k6978 in k6975 in k6971 in k6680 in k6677 in k6674 in k6671 */
static void C_fcall f_23704(C_word t1,C_word t2,C_word t3,C_word t4){
C_word tmp;
C_word t5;
C_word t6;
C_word ab[6],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_23704,NULL,4,t1,t2,t3,t4);}
t5=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_23711,a[2]=t4,a[3]=t3,a[4]=t2,a[5]=t1,tmp=(C_word)a,a+=6,tmp);
C_trace("ChickenBridge.scm: 380  token-unit?");
f_23559(t5,t2);}

/* k23709 in emit in k23555 in k23486 in k23293 in k23290 in k23185 in k23134 in k11783 in k10718 in k10715 in k7274 in k7271 in k6978 in k6975 in k6971 in k6680 in k6677 in k6674 in k6671 */
static void C_ccall f_23711(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word ab[14],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_23711,2,t0,t1);}
if(C_truep(t1)){
t2=((C_word*)t0)[5];
t3=((C_word*)t0)[4];
t4=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_23782,a[2]=t3,a[3]=t2,tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 380  parse-unit-type");
f_23511(t4,t3);}
else{
t2=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_23720,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],tmp=(C_word)a,a+=6,tmp);
t3=((C_word*)t0)[4];
t4=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_23598,a[2]=t3,a[3]=t2,tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 380  parse-unit?");
f_23496(t4,t3);}}

/* k23596 in k23709 in emit in k23555 in k23486 in k23293 in k23290 in k23185 in k23134 in k11783 in k10718 in k10715 in k7274 in k7271 in k6978 in k6975 in k6971 in k6680 in k6677 in k6674 in k6671 */
static void C_ccall f_23598(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[3],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_23598,2,t0,t1);}
if(C_truep(t1)){
t2=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_23605,a[2]=((C_word*)t0)[3],tmp=(C_word)a,a+=3,tmp);
C_trace("ChickenBridge.scm: 380  parse-unit-type");
f_23511(t2,((C_word*)t0)[2]);}
else{
t2=((C_word*)t0)[3];
f_23720(2,t2,C_SCHEME_FALSE);}}

/* k23603 in k23596 in k23709 in emit in k23555 in k23486 in k23293 in k23290 in k23185 in k23134 in k11783 in k10718 in k10715 in k7274 in k7271 in k6978 in k6975 in k6971 in k6680 in k6677 in k6674 in k6671 */
static void C_ccall f_23605(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 380  SalRuleType?");
f_24826(((C_word*)t0)[2],t1);}

/* k23718 in k23709 in emit in k23555 in k23486 in k23293 in k23290 in k23185 in k23134 in k11783 in k10718 in k10715 in k7274 in k7271 in k6978 in k6975 in k6971 in k6680 in k6677 in k6674 in k6671 */
static void C_ccall f_23720(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_23720,2,t0,t1);}
if(C_truep(t1)){
t2=((C_word*)t0)[5];
t3=((C_word*)t0)[4];
t4=((C_word*)t0)[3];
t5=((C_word*)t0)[2];
t6=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_23920,a[2]=t5,a[3]=t4,a[4]=t3,a[5]=t2,tmp=(C_word)a,a+=6,tmp);
t7=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_23943,a[2]=t6,tmp=(C_word)a,a+=3,tmp);
C_trace("ChickenBridge.scm: 380  parse-unit-type");
f_23511(t7,t3);}
else{
if(C_truep((C_word)C_i_listp(((C_word*)t0)[4]))){
C_trace("ChickenBridge.scm: 380  emit-list");
f_23737(((C_word*)t0)[5],((C_word*)t0)[4],((C_word*)t0)[3],((C_word*)t0)[2]);}
else{
C_trace("ChickenBridge.scm: 380  error");
t2=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t2))(4,t2,((C_word*)t0)[5],lf[463],((C_word*)t0)[4]);}}}

/* k23941 in k23718 in k23709 in emit in k23555 in k23486 in k23293 in k23290 in k23185 in k23134 in k11783 in k10718 in k10715 in k7274 in k7271 in k6978 in k6975 in k6971 in k6680 in k6677 in k6674 in k6671 */
static void C_ccall f_23943(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 380  get-rule");
f_23297(((C_word*)t0)[2],t1,C_SCHEME_END_OF_LIST);}

/* k23918 in k23718 in k23709 in emit in k23555 in k23486 in k23293 in k23290 in k23185 in k23134 in k11783 in k10718 in k10715 in k7274 in k7271 in k6978 in k6975 in k6971 in k6680 in k6677 in k6674 in k6671 */
static void C_ccall f_23920(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[5],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_23920,2,t0,t1);}
t2=(C_word)C_i_check_structure(t1,lf[426]);
t3=(C_word)C_i_block_ref(t1,C_fix(5));
if(C_truep(t3)){
C_trace("ChickenBridge.scm: 380  meth");
t4=t3;
((C_proc5)C_retrieve_proc(t4))(5,t4,((C_word*)t0)[5],((C_word*)t0)[4],((C_word*)t0)[3],((C_word*)t0)[2]);}
else{
t4=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_23936,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[5],tmp=(C_word)a,a+=5,tmp);
C_trace("ChickenBridge.scm: 380  parse-unit-parsed");
f_23529(t4,((C_word*)t0)[4]);}}

/* k23934 in k23918 in k23718 in k23709 in emit in k23555 in k23486 in k23293 in k23290 in k23185 in k23134 in k11783 in k10718 in k10715 in k7274 in k7271 in k6978 in k6975 in k6971 in k6680 in k6677 in k6674 in k6671 */
static void C_ccall f_23936(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 380  emit");
f_23704(((C_word*)t0)[4],t1,((C_word*)t0)[3],((C_word*)t0)[2]);}

/* k23780 in k23709 in emit in k23555 in k23486 in k23293 in k23290 in k23185 in k23134 in k11783 in k10718 in k10715 in k7274 in k7271 in k6978 in k6975 in k6971 in k6680 in k6677 in k6674 in k6671 */
static void C_ccall f_23782(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[5],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_23782,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_23785,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=t1,tmp=(C_word)a,a+=5,tmp);
C_trace("ChickenBridge.scm: 380  parse-unit-parsed");
f_23529(t2,((C_word*)t0)[2]);}

/* k23783 in k23780 in k23709 in emit in k23555 in k23486 in k23293 in k23290 in k23185 in k23134 in k11783 in k10718 in k10715 in k7274 in k7271 in k6978 in k6975 in k6971 in k6680 in k6677 in k6674 in k6671 */
static void C_ccall f_23785(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word ab[6],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_23785,2,t0,t1);}
t2=((C_word*)t0)[4];
t3=(C_word)C_i_lessp(C_fix(2560),t2);
t4=(C_truep(t3)?(C_word)C_i_lessp(t2,C_fix(3584)):C_SCHEME_FALSE);
if(C_truep(t4)){
C_trace("ChickenBridge.scm: 380  string->number");
C_string_to_number(3,0,((C_word*)t0)[3],t1);}
else{
t5=((C_word*)t0)[4];
t6=(C_word)C_i_lessp(C_fix(13056),t5);
t7=(C_truep(t6)?(C_word)C_i_lessp(t5,C_fix(23808)):C_SCHEME_FALSE);
if(C_truep(t7)){
C_trace("ChickenBridge.scm: 380  string->symbol");
t8=*((C_word*)lf[454]+1);
((C_proc3)C_retrieve_proc(t8))(3,t8,((C_word*)t0)[3],t1);}
else{
t8=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_23809,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[4],a[4]=t1,a[5]=((C_word*)t0)[3],tmp=(C_word)a,a+=6,tmp);
C_trace("ChickenBridge.scm: 380  SalOpType?");
f_24724(t8,((C_word*)t0)[4]);}}}

/* k23807 in k23783 in k23780 in k23709 in emit in k23555 in k23486 in k23293 in k23290 in k23185 in k23134 in k11783 in k10718 in k10715 in k7274 in k7271 in k6978 in k6975 in k6971 in k6680 in k6677 in k6674 in k6671 */
static void C_ccall f_23809(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word ab[14],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_23809,2,t0,t1);}
if(C_truep(t1)){
t2=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_23815,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],tmp=(C_word)a,a+=5,tmp);
C_trace("ChickenBridge.scm: 380  SalType=?");
f_24838(t2,((C_word*)t0)[3],C_fix(7941));}
else{
t2=((C_word*)t0)[3];
t3=(C_word)C_i_lessp(C_fix(4096),t2);
t4=(C_truep(t3)?(C_word)C_i_lessp(t2,C_fix(4864)):C_SCHEME_FALSE);
if(C_truep(t4)){
t5=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_23860,a[2]=((C_word*)t0)[5],tmp=(C_word)a,a+=3,tmp);
C_trace("ChickenBridge.scm: 380  SalType=?");
f_24838(t5,((C_word*)t0)[3],C_fix(4352));}
else{
t5=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_23866,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[2],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],tmp=(C_word)a,a+=6,tmp);
C_trace("ChickenBridge.scm: 380  SalType=?");
f_24838(t5,((C_word*)t0)[3],C_fix(2304));}}}

/* k23864 in k23807 in k23783 in k23780 in k23709 in emit in k23555 in k23486 in k23293 in k23290 in k23185 in k23134 in k11783 in k10718 in k10715 in k7274 in k7271 in k6978 in k6975 in k6971 in k6680 in k6677 in k6674 in k6671 */
static void C_ccall f_23866(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[6],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_23866,2,t0,t1);}
if(C_truep(t1)){
t2=((C_word*)t0)[5];
((C_proc2)(void*)(*((C_word*)t2+1)))(2,t2,((C_word*)t0)[4]);}
else{
t2=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_23872,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],tmp=(C_word)a,a+=6,tmp);
C_trace("ChickenBridge.scm: 380  SalType=?");
f_24838(t2,((C_word*)t0)[2],C_fix(6144));}}

/* k23870 in k23864 in k23807 in k23783 in k23780 in k23709 in emit in k23555 in k23486 in k23293 in k23290 in k23185 in k23134 in k11783 in k10718 in k10715 in k7274 in k7271 in k6978 in k6975 in k6971 in k6680 in k6677 in k6674 in k6671 */
static void C_ccall f_23872(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[6],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_23872,2,t0,t1);}
if(C_truep(t1)){
C_trace("ChickenBridge.scm: 380  string->keyword");
t2=C_retrieve(lf[24]);
((C_proc3)C_retrieve_proc(t2))(3,t2,((C_word*)t0)[5],((C_word*)t0)[4]);}
else{
t2=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_23881,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],tmp=(C_word)a,a+=6,tmp);
C_trace("ChickenBridge.scm: 380  SalType=?");
f_24838(t2,((C_word*)t0)[2],C_fix(3840));}}

/* k23879 in k23870 in k23864 in k23807 in k23783 in k23780 in k23709 in emit in k23555 in k23486 in k23293 in k23290 in k23185 in k23134 in k11783 in k10718 in k10715 in k7274 in k7271 in k6978 in k6975 in k6971 in k6680 in k6677 in k6674 in k6671 */
static void C_ccall f_23881(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[6],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_23881,2,t0,t1);}
if(C_truep(t1)){
C_trace("ChickenBridge.scm: 380  string->keyword");
t2=C_retrieve(lf[24]);
((C_proc3)C_retrieve_proc(t2))(3,t2,((C_word*)t0)[5],((C_word*)t0)[4]);}
else{
t2=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_23890,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],tmp=(C_word)a,a+=6,tmp);
C_trace("ChickenBridge.scm: 380  SalType=?");
f_24838(t2,((C_word*)t0)[2],C_fix(6400));}}

/* k23888 in k23879 in k23870 in k23864 in k23807 in k23783 in k23780 in k23709 in emit in k23555 in k23486 in k23293 in k23290 in k23185 in k23134 in k11783 in k10718 in k10715 in k7274 in k7271 in k6978 in k6975 in k6971 in k6680 in k6677 in k6674 in k6671 */
static void C_ccall f_23890(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[6],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_23890,2,t0,t1);}
if(C_truep(t1)){
C_trace("ChickenBridge.scm: 380  string->symbol");
t2=*((C_word*)lf[454]+1);
((C_proc3)C_retrieve_proc(t2))(3,t2,((C_word*)t0)[5],((C_word*)t0)[4]);}
else{
t2=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_23899,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[3],a[5]=((C_word*)t0)[5],tmp=(C_word)a,a+=6,tmp);
C_trace("ChickenBridge.scm: 380  SalType=?");
f_24838(t2,((C_word*)t0)[2],C_fix(25344));}}

/* k23897 in k23888 in k23879 in k23870 in k23864 in k23807 in k23783 in k23780 in k23709 in emit in k23555 in k23486 in k23293 in k23290 in k23185 in k23134 in k11783 in k10718 in k10715 in k7274 in k7271 in k6978 in k6975 in k6971 in k6680 in k6677 in k6674 in k6671 */
static void C_ccall f_23899(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[5],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_23899,2,t0,t1);}
if(C_truep(t1)){
C_trace("ChickenBridge.scm: 380  error");
t2=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t2))(4,t2,((C_word*)t0)[5],lf[459],((C_word*)t0)[4]);}
else{
t2=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_23908,a[2]=((C_word*)t0)[4],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[5],tmp=(C_word)a,a+=5,tmp);
C_trace("ChickenBridge.scm: 380  SalType=?");
f_24838(t2,((C_word*)t0)[2],C_fix(25088));}}

/* k23906 in k23897 in k23888 in k23879 in k23870 in k23864 in k23807 in k23783 in k23780 in k23709 in emit in k23555 in k23486 in k23293 in k23290 in k23185 in k23134 in k11783 in k10718 in k10715 in k7274 in k7271 in k6978 in k6975 in k6971 in k6680 in k6677 in k6674 in k6671 */
static void C_ccall f_23908(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
if(C_truep(t1)){
C_trace("ChickenBridge.scm: 380  string->symbol");
t2=*((C_word*)lf[454]+1);
((C_proc3)C_retrieve_proc(t2))(3,t2,((C_word*)t0)[4],((C_word*)t0)[3]);}
else{
C_trace("ChickenBridge.scm: 380  error");
t2=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t2))(4,t2,((C_word*)t0)[4],lf[460],((C_word*)t0)[2]);}}

/* k23858 in k23807 in k23783 in k23780 in k23709 in emit in k23555 in k23486 in k23293 in k23290 in k23185 in k23134 in k11783 in k10718 in k10715 in k7274 in k7271 in k6978 in k6975 in k6971 in k6680 in k6677 in k6674 in k6671 */
static void C_ccall f_23860(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
t2=((C_word*)t0)[2];
((C_proc2)(void*)(*((C_word*)t2+1)))(2,t2,(C_truep(t1)?C_SCHEME_TRUE:C_SCHEME_FALSE));}

/* k23813 in k23807 in k23783 in k23780 in k23709 in emit in k23555 in k23486 in k23293 in k23290 in k23185 in k23134 in k11783 in k10718 in k10715 in k7274 in k7271 in k6978 in k6975 in k6971 in k6680 in k6677 in k6674 in k6671 */
static void C_ccall f_23815(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[5],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_23815,2,t0,t1);}
if(C_truep(t1)){
t2=((C_word*)t0)[4];
((C_proc2)(void*)(*((C_word*)t2+1)))(2,t2,lf[159]);}
else{
t2=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_23821,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],tmp=(C_word)a,a+=5,tmp);
C_trace("ChickenBridge.scm: 380  SalType=?");
f_24838(t2,((C_word*)t0)[2],C_fix(8199));}}

/* k23819 in k23813 in k23807 in k23783 in k23780 in k23709 in emit in k23555 in k23486 in k23293 in k23290 in k23185 in k23134 in k11783 in k10718 in k10715 in k7274 in k7271 in k6978 in k6975 in k6971 in k6680 in k6677 in k6674 in k6671 */
static void C_ccall f_23821(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[5],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_23821,2,t0,t1);}
if(C_truep(t1)){
t2=((C_word*)t0)[4];
((C_proc2)(void*)(*((C_word*)t2+1)))(2,t2,lf[137]);}
else{
t2=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_23827,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],tmp=(C_word)a,a+=5,tmp);
C_trace("ChickenBridge.scm: 380  SalType=?");
f_24838(t2,((C_word*)t0)[2],C_fix(10244));}}

/* k23825 in k23819 in k23813 in k23807 in k23783 in k23780 in k23709 in emit in k23555 in k23486 in k23293 in k23290 in k23185 in k23134 in k11783 in k10718 in k10715 in k7274 in k7271 in k6978 in k6975 in k6971 in k6680 in k6677 in k6674 in k6671 */
static void C_ccall f_23827(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[5],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_23827,2,t0,t1);}
if(C_truep(t1)){
t2=((C_word*)t0)[4];
((C_proc2)(void*)(*((C_word*)t2+1)))(2,t2,lf[455]);}
else{
t2=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_23833,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],tmp=(C_word)a,a+=5,tmp);
C_trace("ChickenBridge.scm: 380  SalType=?");
f_24838(t2,((C_word*)t0)[2],C_fix(8450));}}

/* k23831 in k23825 in k23819 in k23813 in k23807 in k23783 in k23780 in k23709 in emit in k23555 in k23486 in k23293 in k23290 in k23185 in k23134 in k11783 in k10718 in k10715 in k7274 in k7271 in k6978 in k6975 in k6971 in k6680 in k6677 in k6674 in k6671 */
static void C_ccall f_23833(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[5],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_23833,2,t0,t1);}
if(C_truep(t1)){
t2=((C_word*)t0)[4];
((C_proc2)(void*)(*((C_word*)t2+1)))(2,t2,lf[456]);}
else{
t2=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_23839,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],tmp=(C_word)a,a+=5,tmp);
C_trace("ChickenBridge.scm: 380  SalType=?");
f_24838(t2,((C_word*)t0)[2],C_fix(8705));}}

/* k23837 in k23831 in k23825 in k23819 in k23813 in k23807 in k23783 in k23780 in k23709 in emit in k23555 in k23486 in k23293 in k23290 in k23185 in k23134 in k11783 in k10718 in k10715 in k7274 in k7271 in k6978 in k6975 in k6971 in k6680 in k6677 in k6674 in k6671 */
static void C_ccall f_23839(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[4],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_23839,2,t0,t1);}
if(C_truep(t1)){
t2=((C_word*)t0)[4];
((C_proc2)(void*)(*((C_word*)t2+1)))(2,t2,lf[457]);}
else{
t2=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_23845,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 380  SalType=?");
f_24838(t2,((C_word*)t0)[2],C_fix(8963));}}

/* k23843 in k23837 in k23831 in k23825 in k23819 in k23813 in k23807 in k23783 in k23780 in k23709 in emit in k23555 in k23486 in k23293 in k23290 in k23185 in k23134 in k11783 in k10718 in k10715 in k7274 in k7271 in k6978 in k6975 in k6971 in k6680 in k6677 in k6674 in k6671 */
static void C_ccall f_23845(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
if(C_truep(t1)){
t2=((C_word*)t0)[3];
((C_proc2)(void*)(*((C_word*)t2+1)))(2,t2,lf[458]);}
else{
C_trace("ChickenBridge.scm: 380  string->symbol");
t2=*((C_word*)lf[454]+1);
((C_proc3)C_retrieve_proc(t2))(3,t2,((C_word*)t0)[3],((C_word*)t0)[2]);}}

/* set-emit-info! in k23555 in k23486 in k23293 in k23290 in k23185 in k23134 in k11783 in k10718 in k10715 in k7274 in k7271 in k6978 in k6975 in k6971 in k6680 in k6677 in k6674 in k6671 */
static void C_fcall f_23686(C_word t1,C_word t2,C_word t3,C_word t4){
C_word tmp;
C_word t5;
C_word t6;
C_word t7;
C_word ab[5],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_23686,NULL,4,t1,t2,t3,t4);}
t5=(C_word)C_i_assoc(t2,t4);
t6=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_23693,a[2]=t3,a[3]=t5,a[4]=t1,tmp=(C_word)a,a+=5,tmp);
if(C_truep(t5)){
t7=t6;
f_23693(2,t7,C_SCHEME_UNDEFINED);}
else{
C_trace("ChickenBridge.scm: 380  error");
t7=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t7))(4,t7,t6,lf[452],t2);}}

/* k23691 in set-emit-info! in k23555 in k23486 in k23293 in k23290 in k23185 in k23134 in k11783 in k10718 in k10715 in k7274 in k7271 in k6978 in k6975 in k6971 in k6680 in k6677 in k6674 in k6671 */
static void C_ccall f_23693(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
t2=((C_word*)t0)[4];
((C_proc2)(void*)(*((C_word*)t2+1)))(2,t2,(C_word)C_i_set_cdr(((C_word*)t0)[3],((C_word*)t0)[2]));}

/* add-emit-info in k23555 in k23486 in k23293 in k23290 in k23185 in k23134 in k11783 in k10718 in k10715 in k7274 in k7271 in k6978 in k6975 in k6971 in k6680 in k6677 in k6674 in k6671 */
static void C_fcall f_23619(C_word t1,C_word t2,C_word t3,C_word t4){
C_word tmp;
C_word t5;
C_word t6;
C_word ab[6],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_23619,NULL,4,t1,t2,t3,t4);}
t5=(C_word)C_a_i_cons(&a,2,t2,t3);
t6=t1;
((C_proc2)(void*)(*((C_word*)t6+1)))(2,t6,(C_word)C_a_i_cons(&a,2,t5,t4));}

/* get-emit-info in k23555 in k23486 in k23293 in k23290 in k23185 in k23134 in k11783 in k10718 in k10715 in k7274 in k7271 in k6978 in k6975 in k6971 in k6680 in k6677 in k6674 in k6671 */
static void C_fcall f_23607(C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word *a;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_23607,NULL,3,t1,t2,t3);}
t4=(C_word)C_i_assoc(t2,t3);
t5=t1;
((C_proc2)(void*)(*((C_word*)t5+1)))(2,t5,(C_truep(t4)?(C_word)C_i_cdr(t4):C_SCHEME_FALSE));}

/* token-unit-type=? in k23555 in k23486 in k23293 in k23290 in k23185 in k23134 in k11783 in k10718 in k10715 in k7274 in k7271 in k6978 in k6975 in k6971 in k6680 in k6677 in k6674 in k6671 */
static void C_fcall f_23575(C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word ab[5],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_23575,NULL,3,t1,t2,t3);}
t4=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_23582,a[2]=t2,a[3]=t3,a[4]=t1,tmp=(C_word)a,a+=5,tmp);
C_trace("ChickenBridge.scm: 380  token-unit?");
f_23559(t4,t2);}

/* k23580 in token-unit-type=? in k23555 in k23486 in k23293 in k23290 in k23185 in k23134 in k11783 in k10718 in k10715 in k7274 in k7271 in k6978 in k6975 in k6971 in k6680 in k6677 in k6674 in k6671 */
static void C_ccall f_23582(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[4],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_23582,2,t0,t1);}
if(C_truep(t1)){
t2=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_23589,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 380  parse-unit-type");
f_23511(t2,((C_word*)t0)[2]);}
else{
t2=((C_word*)t0)[4];
((C_proc2)(void*)(*((C_word*)t2+1)))(2,t2,C_SCHEME_FALSE);}}

/* k23587 in k23580 in token-unit-type=? in k23555 in k23486 in k23293 in k23290 in k23185 in k23134 in k11783 in k10718 in k10715 in k7274 in k7271 in k6978 in k6975 in k6971 in k6680 in k6677 in k6674 in k6671 */
static void C_ccall f_23589(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 380  SalType=?");
f_24838(((C_word*)t0)[3],t1,((C_word*)t0)[2]);}

/* token-unit? in k23555 in k23486 in k23293 in k23290 in k23185 in k23134 in k11783 in k10718 in k10715 in k7274 in k7271 in k6978 in k6975 in k6971 in k6680 in k6677 in k6674 in k6671 */
static void C_fcall f_23559(C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word ab[4],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_23559,NULL,2,t1,t2);}
t3=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_23566,a[2]=t2,a[3]=t1,tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 380  parse-unit?");
f_23496(t3,t2);}

/* k23564 in token-unit? in k23555 in k23486 in k23293 in k23290 in k23185 in k23134 in k11783 in k10718 in k10715 in k7274 in k7271 in k6978 in k6975 in k6971 in k6680 in k6677 in k6674 in k6671 */
static void C_ccall f_23566(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[3],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_23566,2,t0,t1);}
if(C_truep(t1)){
t2=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_23573,a[2]=((C_word*)t0)[3],tmp=(C_word)a,a+=3,tmp);
C_trace("ChickenBridge.scm: 380  parse-unit-type");
f_23511(t2,((C_word*)t0)[2]);}
else{
t2=((C_word*)t0)[3];
((C_proc2)(void*)(*((C_word*)t2+1)))(2,t2,C_SCHEME_FALSE);}}

/* k23571 in k23564 in token-unit? in k23555 in k23486 in k23293 in k23290 in k23185 in k23134 in k11783 in k10718 in k10715 in k7274 in k7271 in k6978 in k6975 in k6971 in k6680 in k6677 in k6674 in k6671 */
static void C_ccall f_23573(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 380  SalTokenType?");
f_24676(((C_word*)t0)[2],t1);}

/* parse-unit-position in k23486 in k23293 in k23290 in k23185 in k23134 in k11783 in k10718 in k10715 in k7274 in k7271 in k6978 in k6975 in k6971 in k6680 in k6677 in k6674 in k6671 */
static void C_fcall f_23547(C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word *a;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_23547,NULL,2,t1,t2);}
t3=(C_word)C_i_check_structure(t2,lf[440]);
t4=t1;
((C_proc2)(void*)(*((C_word*)t4+1)))(2,t4,(C_word)C_i_block_ref(t2,C_fix(3)));}

/* parse-unit-parsed in k23486 in k23293 in k23290 in k23185 in k23134 in k11783 in k10718 in k10715 in k7274 in k7271 in k6978 in k6975 in k6971 in k6680 in k6677 in k6674 in k6671 */
static void C_fcall f_23529(C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word *a;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_23529,NULL,2,t1,t2);}
t3=(C_word)C_i_check_structure(t2,lf[440]);
t4=t1;
((C_proc2)(void*)(*((C_word*)t4+1)))(2,t4,(C_word)C_i_block_ref(t2,C_fix(2)));}

/* parse-unit-type in k23486 in k23293 in k23290 in k23185 in k23134 in k11783 in k10718 in k10715 in k7274 in k7271 in k6978 in k6975 in k6971 in k6680 in k6677 in k6674 in k6671 */
static void C_fcall f_23511(C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word *a;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_23511,NULL,2,t1,t2);}
t3=(C_word)C_i_check_structure(t2,lf[440]);
t4=t1;
((C_proc2)(void*)(*((C_word*)t4+1)))(2,t4,(C_word)C_i_block_ref(t2,C_fix(1)));}

/* parse-unit? in k23486 in k23293 in k23290 in k23185 in k23134 in k11783 in k10718 in k10715 in k7274 in k7271 in k6978 in k6975 in k6971 in k6680 in k6677 in k6674 in k6671 */
static void C_fcall f_23496(C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word *a;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_23496,NULL,2,t1,t2);}
t3=t1;
((C_proc2)(void*)(*((C_word*)t3+1)))(2,t3,(C_word)C_i_structurep(t2,lf[440]));}

/* make-parse-unit in k23486 in k23293 in k23290 in k23185 in k23134 in k11783 in k10718 in k10715 in k7274 in k7271 in k6978 in k6975 in k6971 in k6680 in k6677 in k6674 in k6671 */
static void C_fcall f_23490(C_word t1,C_word t2,C_word t3,C_word t4){
C_word tmp;
C_word t5;
C_word ab[5],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_23490,NULL,4,t1,t2,t3,t4);}
t5=t1;
((C_proc2)(void*)(*((C_word*)t5+1)))(2,t5,(C_word)C_a_i_record(&a,4,lf[440],t2,t3,t4));}

/* parse-error-position in k23293 in k23290 in k23185 in k23134 in k11783 in k10718 in k10715 in k7274 in k7271 in k6978 in k6975 in k6971 in k6680 in k6677 in k6674 in k6671 */
static void C_fcall f_23478(C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word *a;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_23478,NULL,2,t1,t2);}
t3=(C_word)C_i_check_structure(t2,lf[436]);
t4=t1;
((C_proc2)(void*)(*((C_word*)t4+1)))(2,t4,(C_word)C_i_block_ref(t2,C_fix(2)));}

/* parse-error-string in k23293 in k23290 in k23185 in k23134 in k11783 in k10718 in k10715 in k7274 in k7271 in k6978 in k6975 in k6971 in k6680 in k6677 in k6674 in k6671 */
static void C_fcall f_23460(C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word *a;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_23460,NULL,2,t1,t2);}
t3=(C_word)C_i_check_structure(t2,lf[436]);
t4=t1;
((C_proc2)(void*)(*((C_word*)t4+1)))(2,t4,(C_word)C_i_block_ref(t2,C_fix(1)));}

/* make-parse-error in k23293 in k23290 in k23185 in k23134 in k11783 in k10718 in k10715 in k7274 in k7271 in k6978 in k6975 in k6971 in k6680 in k6677 in k6674 in k6671 */
static void C_fcall f_23439(C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word ab[4],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_23439,NULL,3,t1,t2,t3);}
t4=t1;
((C_proc2)(void*)(*((C_word*)t4+1)))(2,t4,(C_word)C_a_i_record(&a,3,lf[436],t2,t3));}

/* pattern-zero-or-more? in k23293 in k23290 in k23185 in k23134 in k11783 in k10718 in k10715 in k7274 in k7271 in k6978 in k6975 in k6971 in k6680 in k6677 in k6674 in k6671 */
static void C_fcall f_23407(C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word ab[4],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_23407,NULL,2,t1,t2);}
t3=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_23414,a[2]=t1,a[3]=t2,tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 380  pattern-clause?");
f_23321(t3,t2);}

/* k23412 in pattern-zero-or-more? in k23293 in k23290 in k23185 in k23134 in k11783 in k10718 in k10715 in k7274 in k7271 in k6978 in k6975 in k6971 in k6680 in k6677 in k6674 in k6671 */
static void C_ccall f_23414(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word *a;
if(C_truep(t1)){
t2=(C_word)C_i_car(((C_word*)t0)[3]);
t3=((C_word*)t0)[2];
((C_proc2)(void*)(*((C_word*)t3+1)))(2,t3,(C_word)C_eqp(t2,lf[129]));}
else{
t2=((C_word*)t0)[2];
((C_proc2)(void*)(*((C_word*)t2+1)))(2,t2,C_SCHEME_FALSE);}}

/* pattern-sub in k23293 in k23290 in k23185 in k23134 in k11783 in k10718 in k10715 in k7274 in k7271 in k6978 in k6975 in k6971 in k6680 in k6677 in k6674 in k6671 */
static void C_fcall f_23349(C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word ab[4],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_23349,NULL,3,t1,t2,t3);}
t4=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_23357,a[2]=t3,a[3]=t1,tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 380  pattern-subs");
f_23333(t4,t2);}

/* k23355 in pattern-sub in k23293 in k23290 in k23185 in k23134 in k11783 in k10718 in k10715 in k7274 in k7271 in k6978 in k6975 in k6971 in k6680 in k6677 in k6674 in k6671 */
static void C_ccall f_23357(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
t2=((C_word*)t0)[3];
((C_proc2)(void*)(*((C_word*)t2+1)))(2,t2,(C_word)C_i_list_ref(t1,((C_word*)t0)[2]));}

/* pattern-nsubs in k23293 in k23290 in k23185 in k23134 in k11783 in k10718 in k10715 in k7274 in k7271 in k6978 in k6975 in k6971 in k6680 in k6677 in k6674 in k6671 */
static void C_fcall f_23339(C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word ab[3],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_23339,NULL,2,t1,t2);}
t3=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_23347,a[2]=t1,tmp=(C_word)a,a+=3,tmp);
C_trace("ChickenBridge.scm: 380  pattern-subs");
f_23333(t3,t2);}

/* k23345 in pattern-nsubs in k23293 in k23290 in k23185 in k23134 in k11783 in k10718 in k10715 in k7274 in k7271 in k6978 in k6975 in k6971 in k6680 in k6677 in k6674 in k6671 */
static void C_ccall f_23347(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
t2=((C_word*)t0)[2];
((C_proc2)(void*)(*((C_word*)t2+1)))(2,t2,(C_word)C_i_length(t1));}

/* pattern-subs in k23293 in k23290 in k23185 in k23134 in k11783 in k10718 in k10715 in k7274 in k7271 in k6978 in k6975 in k6971 in k6680 in k6677 in k6674 in k6671 */
static void C_fcall f_23333(C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word *a;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_23333,NULL,2,t1,t2);}
t3=t1;
((C_proc2)(void*)(*((C_word*)t3+1)))(2,t3,(C_word)C_i_cdr(t2));}

/* pattern-clause? in k23293 in k23290 in k23185 in k23134 in k11783 in k10718 in k10715 in k7274 in k7271 in k6978 in k6975 in k6971 in k6680 in k6677 in k6674 in k6671 */
static void C_fcall f_23321(C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word *a;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_23321,NULL,2,t1,t2);}
t3=t1;
((C_proc2)(void*)(*((C_word*)t3+1)))(2,t3,(C_word)C_i_pairp(t2));}

/* pattern-value in k23293 in k23290 in k23185 in k23134 in k11783 in k10718 in k10715 in k7274 in k7271 in k6978 in k6975 in k6971 in k6680 in k6677 in k6674 in k6671 */
static void C_ccall f_23318(C_word c,C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word *a;
if(c!=3) C_bad_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr3,(void*)f_23318,3,t0,t1,t2);}
t3=t1;
((C_proc2)(void*)(*((C_word*)t3+1)))(2,t3,t2);}

/* get-rule in k23293 in k23290 in k23185 in k23134 in k11783 in k10718 in k10715 in k7274 in k7271 in k6978 in k6975 in k6971 in k6680 in k6677 in k6674 in k6671 */
static void C_fcall f_23297(C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word *a;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_23297,NULL,3,t1,t2,t3);}
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("ChickenBridge.scm: 380  hash-table-ref");
t4=*((C_word*)lf[41]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t1,C_retrieve2(lf[424],"*rules*"),t2);}
else{
C_trace("ChickenBridge.scm: 380  hash-table-ref/default");
t4=C_retrieve(lf[429]);
((C_proc4)C_retrieve_proc(t4))(4,t4,t1,C_retrieve2(lf[424],"*rules*"),t3);}}

/* rule-name in k23185 in k23134 in k11783 in k10718 in k10715 in k7274 in k7271 in k6978 in k6975 in k6971 in k6680 in k6677 in k6674 in k6671 */
static void C_fcall f_23210(C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word *a;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_23210,NULL,2,t1,t2);}
t3=(C_word)C_i_check_structure(t2,lf[426]);
t4=t1;
((C_proc2)(void*)(*((C_word*)t4+1)))(2,t4,(C_word)C_i_block_ref(t2,C_fix(1)));}

/* make-rule in k23185 in k23134 in k11783 in k10718 in k10715 in k7274 in k7271 in k6978 in k6975 in k6971 in k6680 in k6677 in k6674 in k6671 */
static void C_fcall f_23189(C_word t1,C_word t2,C_word t3,C_word t4,C_word t5,C_word t6){
C_word tmp;
C_word t7;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_23189,NULL,6,t1,t2,t3,t4,t5,t6);}
t7=t1;
((C_proc2)(void*)(*((C_word*)t7+1)))(2,t7,(C_word)C_a_i_record(&a,6,lf[426],t2,t3,t4,t5,t6));}

/* null-tokens? in k23134 in k11783 in k10718 in k10715 in k7274 in k7271 in k6978 in k6975 in k6971 in k6680 in k6677 in k6674 in k6671 */
static void C_fcall f_23179(C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word *a;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_23179,NULL,2,t1,t2);}
t3=t1;
((C_proc2)(void*)(*((C_word*)t3+1)))(2,t3,(C_word)C_i_nullp(t2));}

/* first-token in k23134 in k11783 in k10718 in k10715 in k7274 in k7271 in k6978 in k6975 in k6971 in k6680 in k6677 in k6674 in k6671 */
static void C_fcall f_23167(C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word *a;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_23167,NULL,2,t1,t2);}
t3=t1;
((C_proc2)(void*)(*((C_word*)t3+1)))(2,t3,(C_word)C_i_car(t2));}

/* list->token in k23134 in k11783 in k10718 in k10715 in k7274 in k7271 in k6978 in k6975 in k6971 in k6680 in k6677 in k6674 in k6671 */
static void C_ccall f_23138(C_word c,C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word *a;
if(c!=3) C_bad_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr3,(void*)f_23138,3,t0,t1,t2);}
t3=(C_word)C_i_car(t2);
t4=(C_word)C_eqp(t3,lf[421]);
if(C_truep(t4)){
t5=(C_word)C_i_cdr(t2);
C_apply(4,0,t1,C_retrieve2(lf[415],"make-token"),t5);}
else{
C_apply(4,0,t1,C_retrieve2(lf[415],"make-token"),t2);}}

/* token-position in k11783 in k10718 in k10715 in k7274 in k7271 in k6978 in k6975 in k6971 in k6680 in k6677 in k6674 in k6671 */
static void C_fcall f_23126(C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word *a;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_23126,NULL,2,t1,t2);}
t3=(C_word)C_i_check_structure(t2,lf[416]);
t4=t1;
((C_proc2)(void*)(*((C_word*)t4+1)))(2,t4,(C_word)C_i_block_ref(t2,C_fix(3)));}

/* token-string in k11783 in k10718 in k10715 in k7274 in k7271 in k6978 in k6975 in k6971 in k6680 in k6677 in k6674 in k6671 */
static void C_fcall f_23108(C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word *a;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_23108,NULL,2,t1,t2);}
t3=(C_word)C_i_check_structure(t2,lf[416]);
t4=t1;
((C_proc2)(void*)(*((C_word*)t4+1)))(2,t4,(C_word)C_i_block_ref(t2,C_fix(2)));}

/* token-type in k11783 in k10718 in k10715 in k7274 in k7271 in k6978 in k6975 in k6971 in k6680 in k6677 in k6674 in k6671 */
static void C_fcall f_23090(C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word *a;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_23090,NULL,2,t1,t2);}
t3=(C_word)C_i_check_structure(t2,lf[416]);
t4=t1;
((C_proc2)(void*)(*((C_word*)t4+1)))(2,t4,(C_word)C_i_block_ref(t2,C_fix(1)));}

/* make-token in k11783 in k10718 in k10715 in k7274 in k7271 in k6978 in k6975 in k6971 in k6680 in k6677 in k6674 in k6671 */
static void C_ccall f_23069(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4){
C_word tmp;
C_word t5;
C_word ab[5],*a=ab;
if(c!=5) C_bad_argc_2(c,5,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr5,(void*)f_23069,5,t0,t1,t2,t3,t4);}
t5=t1;
((C_proc2)(void*)(*((C_word*)t5+1)))(2,t5,(C_word)C_a_i_record(&a,4,lf[416],t2,t3,t4));}

/* markov-analyze in k11783 in k10718 in k10715 in k7274 in k7271 in k6978 in k6975 in k6971 in k6680 in k6677 in k6674 in k6671 */
static void C_ccall f_22047(C_word c,C_word t0,C_word t1,C_word t2,...){
C_word tmp;
C_word t3;
va_list v;
C_word *a,c2=c;
C_save_rest(t2,c2,3);
if(c<3) C_bad_min_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_demand(c*C_SIZEOF_PAIR+61)){
C_save_and_reclaim((void*)tr3r,(void*)f_22047r,3,t0,t1,t2);}
else{
a=C_alloc((c-3)*3);
t3=C_restore_rest(a,C_rest_count(0));
f_22047r(t0,t1,t2,t3);}}

static void C_ccall f_22047r(C_word t0,C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word t14;
C_word t15;
C_word t16;
C_word t17;
C_word t18;
C_word t19;
C_word t20;
C_word t21;
C_word t22;
C_word t23;
C_word t24;
C_word t25;
C_word t26;
C_word t27;
C_word t28;
C_word t29;
C_word t30;
C_word t31;
C_word t32;
C_word t33;
C_word t34;
C_word *a=C_alloc(61);
t4=C_SCHEME_FALSE;
t5=(*a=C_VECTOR_TYPE|1,a[1]=t4,tmp=(C_word)a,a+=2,tmp);
t6=C_SCHEME_FALSE;
t7=(*a=C_VECTOR_TYPE|1,a[1]=t6,tmp=(C_word)a,a+=2,tmp);
t8=(C_word)C_i_length(t2);
t9=C_SCHEME_END_OF_LIST;
t10=(*a=C_VECTOR_TYPE|1,a[1]=t9,tmp=(C_word)a,a+=2,tmp);
t11=C_SCHEME_END_OF_LIST;
t12=(*a=C_VECTOR_TYPE|1,a[1]=t11,tmp=(C_word)a,a+=2,tmp);
t13=C_fix(8);
t14=(*a=C_VECTOR_TYPE|1,a[1]=t13,tmp=(C_word)a,a+=2,tmp);
t15=C_fix(1);
t16=(*a=C_VECTOR_TYPE|1,a[1]=t15,tmp=(C_word)a,a+=2,tmp);
t17=C_fix(1);
t18=(*a=C_VECTOR_TYPE|1,a[1]=t17,tmp=(C_word)a,a+=2,tmp);
t19=C_SCHEME_FALSE;
t20=(*a=C_VECTOR_TYPE|1,a[1]=t19,tmp=(C_word)a,a+=2,tmp);
t21=C_SCHEME_FALSE;
t22=(*a=C_VECTOR_TYPE|1,a[1]=t21,tmp=(C_word)a,a+=2,tmp);
t23=t3;
t24=(*a=C_VECTOR_TYPE|1,a[1]=t23,tmp=(C_word)a,a+=2,tmp);
t25=C_SCHEME_FALSE;
t26=(*a=C_VECTOR_TYPE|1,a[1]=t25,tmp=(C_word)a,a+=2,tmp);
t27=(*a=C_CLOSURE_TYPE|16,a[1]=(C_word)f_22057,a[2]=t22,a[3]=t26,a[4]=t20,a[5]=t3,a[6]=t24,a[7]=t2,a[8]=t8,a[9]=t14,a[10]=t10,a[11]=t1,a[12]=t12,a[13]=t18,a[14]=t7,a[15]=t16,a[16]=t5,tmp=(C_word)a,a+=17,tmp);
if(C_truep((C_word)C_i_nullp(((C_word*)t24)[1]))){
t28=t27;
f_22057(t28,C_SCHEME_UNDEFINED);}
else{
t28=(C_word)C_i_car(((C_word*)t24)[1]);
t29=(C_word)C_eqp(t28,lf[243]);
if(C_truep(t29)){
t30=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_22982,a[2]=t3,a[3]=t27,a[4]=t24,a[5]=t26,a[6]=t20,a[7]=t16,tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)t20)[1])){
C_trace("error");
t31=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t31))(4,t31,t30,lf[19],lf[243]);}
else{
t31=t30;
f_22982(2,t31,C_SCHEME_UNDEFINED);}}
else{
t30=(C_word)C_eqp(t28,lf[414]);
if(C_truep(t30)){
t31=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_23017,a[2]=t3,a[3]=t27,a[4]=t24,a[5]=t26,a[6]=t22,a[7]=t18,tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)t22)[1])){
C_trace("error");
t32=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t32))(4,t32,t31,lf[19],lf[414]);}
else{
t32=t31;
f_23017(2,t32,C_SCHEME_UNDEFINED);}}
else{
t31=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_23046,a[2]=t27,a[3]=t20,a[4]=t16,a[5]=t24,tmp=(C_word)a,a+=6,tmp);
if(C_truep(((C_word*)t26)[1])){
C_trace("error");
t32=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t32))(4,t32,t31,lf[10],t3);}
else{
t32=t31;
f_23046(2,t32,C_SCHEME_UNDEFINED);}}}}}

/* k23044 in markov-analyze in k11783 in k10718 in k10715 in k7274 in k7271 in k6978 in k6975 in k6971 in k6680 in k6677 in k6674 in k6671 */
static void C_ccall f_23046(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_23046,2,t0,t1);}
t2=(C_word)C_i_car(((C_word*)((C_word*)t0)[5])[1]);
t3=C_mutate(((C_word *)((C_word*)t0)[4])+1,t2);
t4=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_23053,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[5],a[4]=((C_word*)t0)[3],tmp=(C_word)a,a+=5,tmp);
t5=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_23061,a[2]=((C_word*)t0)[4],a[3]=t4,tmp=(C_word)a,a+=4,tmp);
C_trace("keyword?");
t6=C_retrieve(lf[13]);
((C_proc3)C_retrieve_proc(t6))(3,t6,t5,((C_word*)((C_word*)t0)[4])[1]);}

/* k23059 in k23044 in markov-analyze in k11783 in k10718 in k10715 in k7274 in k7271 in k6978 in k6975 in k6971 in k6680 in k6677 in k6674 in k6671 */
static void C_ccall f_23061(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
if(C_truep(t1)){
C_trace("error");
t2=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t2))(4,t2,((C_word*)t0)[3],lf[14],((C_word*)((C_word*)t0)[2])[1]);}
else{
t2=((C_word*)t0)[3];
f_23053(2,t2,C_SCHEME_UNDEFINED);}}

/* k23051 in k23044 in markov-analyze in k11783 in k10718 in k10715 in k7274 in k7271 in k6978 in k6975 in k6971 in k6680 in k6677 in k6674 in k6671 */
static void C_ccall f_23053(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word *a;
t2=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[3])[1]);
t4=C_mutate(((C_word *)((C_word*)t0)[3])+1,t3);
t5=((C_word*)t0)[2];
f_22057(t5,t4);}

/* k23015 in markov-analyze in k11783 in k10718 in k10715 in k7274 in k7271 in k6978 in k6975 in k6971 in k6680 in k6677 in k6674 in k6671 */
static void C_ccall f_23017(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_23017,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_23021,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("error");
t4=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[21],((C_word*)t0)[2]);}
else{
t4=t2;
f_23021(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k23019 in k23015 in markov-analyze in k11783 in k10718 in k10715 in k7274 in k7271 in k6978 in k6975 in k6971 in k6680 in k6677 in k6674 in k6671 */
static void C_ccall f_23021(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_22057(t7,t6);}

/* k22980 in markov-analyze in k11783 in k10718 in k10715 in k7274 in k7271 in k6978 in k6975 in k6971 in k6680 in k6677 in k6674 in k6671 */
static void C_ccall f_22982(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_22982,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_22986,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("error");
t4=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[21],((C_word*)t0)[2]);}
else{
t4=t2;
f_22986(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k22984 in k22980 in markov-analyze in k11783 in k10718 in k10715 in k7274 in k7271 in k6978 in k6975 in k6971 in k6680 in k6677 in k6674 in k6671 */
static void C_ccall f_22986(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_22057(t7,t6);}

/* k22055 in markov-analyze in k11783 in k10718 in k10715 in k7274 in k7271 in k6978 in k6975 in k6971 in k6680 in k6677 in k6674 in k6671 */
static void C_fcall f_22057(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word ab[36],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_22057,NULL,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|13,a[1]=(C_word)f_22060,a[2]=((C_word*)t0)[5],a[3]=((C_word*)t0)[6],a[4]=((C_word*)t0)[7],a[5]=((C_word*)t0)[8],a[6]=((C_word*)t0)[9],a[7]=((C_word*)t0)[10],a[8]=((C_word*)t0)[11],a[9]=((C_word*)t0)[12],a[10]=((C_word*)t0)[13],a[11]=((C_word*)t0)[14],a[12]=((C_word*)t0)[15],a[13]=((C_word*)t0)[16],tmp=(C_word)a,a+=14,tmp);
if(C_truep((C_word)C_i_nullp(((C_word*)((C_word*)t0)[6])[1]))){
t3=t2;
f_22060(t3,C_SCHEME_UNDEFINED);}
else{
t3=(C_word)C_i_car(((C_word*)((C_word*)t0)[6])[1]);
t4=(C_word)C_eqp(t3,lf[243]);
if(C_truep(t4)){
t5=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_22882,a[2]=((C_word*)t0)[5],a[3]=t2,a[4]=((C_word*)t0)[6],a[5]=((C_word*)t0)[3],a[6]=((C_word*)t0)[4],a[7]=((C_word*)t0)[15],tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)((C_word*)t0)[4])[1])){
C_trace("error");
t6=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t6))(4,t6,t5,lf[19],lf[243]);}
else{
t6=t5;
f_22882(2,t6,C_SCHEME_UNDEFINED);}}
else{
t5=(C_word)C_eqp(t3,lf[414]);
if(C_truep(t5)){
t6=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_22917,a[2]=((C_word*)t0)[5],a[3]=t2,a[4]=((C_word*)t0)[6],a[5]=((C_word*)t0)[3],a[6]=((C_word*)t0)[2],a[7]=((C_word*)t0)[13],tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)((C_word*)t0)[2])[1])){
C_trace("error");
t7=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t7))(4,t7,t6,lf[19],lf[414]);}
else{
t7=t6;
f_22917(2,t7,C_SCHEME_UNDEFINED);}}
else{
t6=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_22946,a[2]=t2,a[3]=((C_word*)t0)[2],a[4]=((C_word*)t0)[13],a[5]=((C_word*)t0)[6],tmp=(C_word)a,a+=6,tmp);
if(C_truep(((C_word*)((C_word*)t0)[3])[1])){
C_trace("error");
t7=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t7))(4,t7,t6,lf[10],((C_word*)t0)[5]);}
else{
t7=t6;
f_22946(2,t7,C_SCHEME_UNDEFINED);}}}}}

/* k22944 in k22055 in markov-analyze in k11783 in k10718 in k10715 in k7274 in k7271 in k6978 in k6975 in k6971 in k6680 in k6677 in k6674 in k6671 */
static void C_ccall f_22946(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_22946,2,t0,t1);}
t2=(C_word)C_i_car(((C_word*)((C_word*)t0)[5])[1]);
t3=C_mutate(((C_word *)((C_word*)t0)[4])+1,t2);
t4=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_22953,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[5],a[4]=((C_word*)t0)[3],tmp=(C_word)a,a+=5,tmp);
t5=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_22961,a[2]=((C_word*)t0)[4],a[3]=t4,tmp=(C_word)a,a+=4,tmp);
C_trace("keyword?");
t6=C_retrieve(lf[13]);
((C_proc3)C_retrieve_proc(t6))(3,t6,t5,((C_word*)((C_word*)t0)[4])[1]);}

/* k22959 in k22944 in k22055 in markov-analyze in k11783 in k10718 in k10715 in k7274 in k7271 in k6978 in k6975 in k6971 in k6680 in k6677 in k6674 in k6671 */
static void C_ccall f_22961(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
if(C_truep(t1)){
C_trace("error");
t2=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t2))(4,t2,((C_word*)t0)[3],lf[14],((C_word*)((C_word*)t0)[2])[1]);}
else{
t2=((C_word*)t0)[3];
f_22953(2,t2,C_SCHEME_UNDEFINED);}}

/* k22951 in k22944 in k22055 in markov-analyze in k11783 in k10718 in k10715 in k7274 in k7271 in k6978 in k6975 in k6971 in k6680 in k6677 in k6674 in k6671 */
static void C_ccall f_22953(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word *a;
t2=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[3])[1]);
t4=C_mutate(((C_word *)((C_word*)t0)[3])+1,t3);
t5=((C_word*)t0)[2];
f_22060(t5,t4);}

/* k22915 in k22055 in markov-analyze in k11783 in k10718 in k10715 in k7274 in k7271 in k6978 in k6975 in k6971 in k6680 in k6677 in k6674 in k6671 */
static void C_ccall f_22917(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_22917,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_22921,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("error");
t4=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[21],((C_word*)t0)[2]);}
else{
t4=t2;
f_22921(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k22919 in k22915 in k22055 in markov-analyze in k11783 in k10718 in k10715 in k7274 in k7271 in k6978 in k6975 in k6971 in k6680 in k6677 in k6674 in k6671 */
static void C_ccall f_22921(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_22060(t7,t6);}

/* k22880 in k22055 in markov-analyze in k11783 in k10718 in k10715 in k7274 in k7271 in k6978 in k6975 in k6971 in k6680 in k6677 in k6674 in k6671 */
static void C_ccall f_22882(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_22882,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_22886,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("error");
t4=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[21],((C_word*)t0)[2]);}
else{
t4=t2;
f_22886(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k22884 in k22880 in k22055 in markov-analyze in k11783 in k10718 in k10715 in k7274 in k7271 in k6978 in k6975 in k6971 in k6680 in k6677 in k6674 in k6671 */
static void C_ccall f_22886(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_22060(t7,t6);}

/* k22058 in k22055 in markov-analyze in k11783 in k10718 in k10715 in k7274 in k7271 in k6978 in k6975 in k6971 in k6680 in k6677 in k6674 in k6671 */
static void C_fcall f_22060(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[12],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_22060,NULL,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|11,a[1]=(C_word)f_22063,a[2]=((C_word*)t0)[4],a[3]=((C_word*)t0)[5],a[4]=((C_word*)t0)[6],a[5]=((C_word*)t0)[7],a[6]=((C_word*)t0)[8],a[7]=((C_word*)t0)[9],a[8]=((C_word*)t0)[10],a[9]=((C_word*)t0)[11],a[10]=((C_word*)t0)[12],a[11]=((C_word*)t0)[13],tmp=(C_word)a,a+=12,tmp);
if(C_truep((C_word)C_i_nullp(((C_word*)((C_word*)t0)[3])[1]))){
t3=t2;
f_22063(2,t3,C_SCHEME_UNDEFINED);}
else{
C_trace("error");
t3=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t3))(4,t3,t2,lf[5],((C_word*)t0)[2]);}}

/* k22061 in k22058 in k22055 in markov-analyze in k11783 in k10718 in k10715 in k7274 in k7271 in k6978 in k6975 in k6971 in k6680 in k6677 in k6674 in k6671 */
static void C_ccall f_22063(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[10],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_22063,2,t0,t1);}
t2=C_mutate(((C_word *)((C_word*)t0)[11])+1,((C_word*)((C_word*)t0)[10])[1]);
t3=C_mutate(((C_word *)((C_word*)t0)[9])+1,((C_word*)((C_word*)t0)[8])[1]);
t4=(*a=C_CLOSURE_TYPE|9,a[1]=(C_word)f_22068,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[11],a[4]=((C_word*)t0)[3],a[5]=((C_word*)t0)[4],a[6]=((C_word*)t0)[5],a[7]=((C_word*)t0)[6],a[8]=((C_word*)t0)[9],a[9]=((C_word*)t0)[7],tmp=(C_word)a,a+=10,tmp);
t5=((C_word*)((C_word*)t0)[9])[1];
if(C_truep((C_truep((C_word)C_i_equalp(t5,C_fix(1)))?C_SCHEME_TRUE:(C_truep((C_word)C_i_equalp(t5,C_fix(2)))?C_SCHEME_TRUE:(C_truep((C_word)C_i_equalp(t5,C_fix(3)))?C_SCHEME_TRUE:C_SCHEME_FALSE))))){
t6=t4;
f_22068(2,t6,C_SCHEME_UNDEFINED);}
else{
C_trace("ChickenBridge.scm: 379  error");
t6=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t6))(4,t6,t4,lf[413],((C_word*)((C_word*)t0)[9])[1]);}}

/* k22066 in k22061 in k22058 in k22055 in markov-analyze in k11783 in k10718 in k10715 in k7274 in k7271 in k6978 in k6975 in k6971 in k6680 in k6677 in k6674 in k6671 */
static void C_ccall f_22068(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word ab[29],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_22068,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_22070,a[2]=((C_word*)t0)[9],a[3]=((C_word)li314),tmp=(C_word)a,a+=4,tmp);
t3=C_SCHEME_UNDEFINED;
t4=(*a=C_VECTOR_TYPE|1,a[1]=t3,tmp=(C_word)a,a+=2,tmp);
t5=C_set_block_item(t4,0,(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_22152,a[2]=t4,a[3]=((C_word)li317),tmp=(C_word)a,a+=4,tmp));
t6=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_22262,a[2]=t4,a[3]=((C_word*)t0)[5],a[4]=((C_word*)t0)[6],a[5]=((C_word*)t0)[7],a[6]=((C_word*)t0)[8],a[7]=((C_word*)t0)[9],tmp=(C_word)a,a+=8,tmp);
t7=C_SCHEME_UNDEFINED;
t8=(*a=C_VECTOR_TYPE|1,a[1]=t7,tmp=(C_word)a,a+=2,tmp);
t9=C_set_block_item(t8,0,(*a=C_CLOSURE_TYPE|8,a[1]=(C_word)f_22775,a[2]=((C_word*)t0)[2],a[3]=t2,a[4]=((C_word*)t0)[6],a[5]=((C_word*)t0)[3],a[6]=t8,a[7]=((C_word*)t0)[4],a[8]=((C_word)li334),tmp=(C_word)a,a+=9,tmp));
t10=((C_word*)t8)[1];
f_22775(t10,t6,C_fix(0));}

/* do2990 in k22066 in k22061 in k22058 in k22055 in markov-analyze in k11783 in k10718 in k10715 in k7274 in k7271 in k6978 in k6975 in k6971 in k6680 in k6677 in k6674 in k6671 */
static void C_fcall f_22775(C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word ab[17],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_22775,NULL,3,t0,t1,t2);}
if(C_truep((C_word)C_i_nequalp(t2,((C_word*)t0)[7]))){
t3=t1;
((C_proc2)(void*)(*((C_word*)t3+1)))(2,t3,C_SCHEME_FALSE);}
else{
t3=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_22785,a[2]=t1,a[3]=((C_word*)t0)[6],a[4]=t2,tmp=(C_word)a,a+=5,tmp);
t4=C_SCHEME_UNDEFINED;
t5=(*a=C_VECTOR_TYPE|1,a[1]=t4,tmp=(C_word)a,a+=2,tmp);
t6=C_set_block_item(t5,0,(*a=C_CLOSURE_TYPE|9,a[1]=(C_word)f_22798,a[2]=((C_word*)t0)[7],a[3]=t2,a[4]=t5,a[5]=((C_word*)t0)[2],a[6]=((C_word*)t0)[3],a[7]=((C_word*)t0)[4],a[8]=((C_word*)t0)[5],a[9]=((C_word)li333),tmp=(C_word)a,a+=10,tmp));
t7=((C_word*)t5)[1];
f_22798(t7,t3,C_SCHEME_END_OF_LIST,C_fix(0),C_SCHEME_FALSE);}}

/* do2993 in do2990 in k22066 in k22061 in k22058 in k22055 in markov-analyze in k11783 in k10718 in k10715 in k7274 in k7271 in k6978 in k6975 in k6971 in k6680 in k6677 in k6674 in k6671 */
static void C_fcall f_22798(C_word t0,C_word t1,C_word t2,C_word t3,C_word t4){
C_word tmp;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word ab[27],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_22798,NULL,5,t0,t1,t2,t3,t4);}
t5=(*a=C_VECTOR_TYPE|1,a[1]=t2,tmp=(C_word)a,a+=2,tmp);
t6=(*a=C_VECTOR_TYPE|1,a[1]=t4,tmp=(C_word)a,a+=2,tmp);
if(C_truep((C_word)C_i_greaterp(t3,((C_word*)((C_word*)t0)[8])[1]))){
t7=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_22808,a[2]=t1,a[3]=((C_word*)t0)[7],a[4]=t6,tmp=(C_word)a,a+=5,tmp);
t8=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_22826,a[2]=t6,a[3]=t7,a[4]=((C_word*)t0)[6],tmp=(C_word)a,a+=5,tmp);
C_trace("ChickenBridge.scm: 379  reverse");
t9=*((C_word*)lf[216]+1);
((C_proc3)C_retrieve_proc(t9))(3,t9,t8,((C_word*)t5)[1]);}
else{
t7=(*a=C_CLOSURE_TYPE|8,a[1]=(C_word)f_22851,a[2]=((C_word*)t0)[8],a[3]=t5,a[4]=t1,a[5]=((C_word*)t0)[4],a[6]=t3,a[7]=t6,a[8]=((C_word*)t0)[5],tmp=(C_word)a,a+=9,tmp);
t8=(C_word)C_a_i_plus(&a,2,((C_word*)t0)[3],t3);
C_trace("ChickenBridge.scm: 379  modulo");
t9=*((C_word*)lf[159]+1);
((C_proc4)C_retrieve_proc(t9))(4,t9,t7,t8,((C_word*)t0)[2]);}}

/* k22849 in do2993 in do2990 in k22066 in k22061 in k22058 in k22055 in markov-analyze in k11783 in k10718 in k10715 in k7274 in k7271 in k6978 in k6975 in k6971 in k6680 in k6677 in k6674 in k6671 */
static void C_ccall f_22851(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word ab[10],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_22851,2,t0,t1);}
t2=(C_word)C_i_list_ref(((C_word*)t0)[8],t1);
t3=C_mutate(((C_word *)((C_word*)t0)[7])+1,t2);
t4=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_22833,a[2]=((C_word*)t0)[7],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],tmp=(C_word)a,a+=7,tmp);
if(C_truep((C_word)C_i_lessp(((C_word*)t0)[6],((C_word*)((C_word*)t0)[2])[1]))){
t5=(C_word)C_a_i_cons(&a,2,((C_word*)((C_word*)t0)[7])[1],((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=t4;
f_22833(t7,t6);}
else{
t5=t4;
f_22833(t5,C_SCHEME_UNDEFINED);}}

/* k22831 in k22849 in do2993 in do2990 in k22066 in k22061 in k22058 in k22055 in markov-analyze in k11783 in k10718 in k10715 in k7274 in k7271 in k6978 in k6975 in k6971 in k6680 in k6677 in k6674 in k6671 */
static void C_fcall f_22833(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[4],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_22833,NULL,2,t0,t1);}
t2=(C_word)C_a_i_plus(&a,2,((C_word*)t0)[6],C_fix(1));
t3=((C_word*)((C_word*)t0)[5])[1];
f_22798(t3,((C_word*)t0)[4],((C_word*)((C_word*)t0)[3])[1],t2,((C_word*)((C_word*)t0)[2])[1]);}

/* k22824 in do2993 in do2990 in k22066 in k22061 in k22058 in k22055 in markov-analyze in k11783 in k10718 in k10715 in k7274 in k7271 in k6978 in k6975 in k6971 in k6680 in k6677 in k6674 in k6671 */
static void C_ccall f_22826(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 379  add-outcome");
t2=((C_word*)t0)[4];
f_22070(t2,((C_word*)t0)[3],t1,((C_word*)((C_word*)t0)[2])[1]);}

/* k22806 in do2993 in do2990 in k22066 in k22061 in k22058 in k22055 in markov-analyze in k11783 in k10718 in k10715 in k7274 in k7271 in k6978 in k6975 in k6971 in k6680 in k6677 in k6674 in k6671 */
static void C_ccall f_22808(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[3],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_22808,2,t0,t1);}
if(C_truep((C_word)C_i_member(((C_word*)((C_word*)t0)[4])[1],((C_word*)((C_word*)t0)[3])[1]))){
t2=((C_word*)t0)[2];
((C_proc2)(void*)(*((C_word*)t2+1)))(2,t2,C_SCHEME_UNDEFINED);}
else{
t2=(C_word)C_a_i_cons(&a,2,((C_word*)((C_word*)t0)[4])[1],((C_word*)((C_word*)t0)[3])[1]);
t3=C_mutate(((C_word *)((C_word*)t0)[3])+1,t2);
t4=((C_word*)t0)[2];
((C_proc2)(void*)(*((C_word*)t4+1)))(2,t4,t3);}}

/* k22783 in do2990 in k22066 in k22061 in k22058 in k22055 in markov-analyze in k11783 in k10718 in k10715 in k7274 in k7271 in k6978 in k6975 in k6971 in k6680 in k6677 in k6674 in k6671 */
static void C_ccall f_22785(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[4],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_22785,2,t0,t1);}
t2=(C_word)C_a_i_plus(&a,2,((C_word*)t0)[4],C_fix(1));
t3=((C_word*)((C_word*)t0)[3])[1];
f_22775(t3,((C_word*)t0)[2],t2);}

/* k22260 in k22066 in k22061 in k22058 in k22055 in markov-analyze in k11783 in k10718 in k10715 in k7274 in k7271 in k6978 in k6975 in k6971 in k6680 in k6677 in k6674 in k6671 */
static void C_ccall f_22262(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word ab[16],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_22262,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_22265,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],a[7]=((C_word*)t0)[7],tmp=(C_word)a,a+=8,tmp);
t3=(C_word)C_i_car(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_numberp(t3))){
t4=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_22731,a[2]=t2,a[3]=((C_word*)t0)[4],tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 379  sort");
t5=C_retrieve(lf[218]);
((C_proc4)C_retrieve_proc(t5))(4,t5,t4,((C_word*)((C_word*)t0)[4])[1],*((C_word*)lf[409]+1));}
else{
t4=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_22737,a[2]=t2,a[3]=((C_word*)t0)[4],tmp=(C_word)a,a+=4,tmp);
if(C_truep((C_word)C_i_car(((C_word*)((C_word*)t0)[4])[1]))){
t5=(C_word)C_i_car(((C_word*)((C_word*)t0)[4])[1]);
t6=t4;
f_22737(t6,(C_word)C_i_symbolp(t5));}
else{
t5=t4;
f_22737(t5,C_SCHEME_FALSE);}}}

/* k22735 in k22260 in k22066 in k22061 in k22058 in k22055 in markov-analyze in k11783 in k10718 in k10715 in k7274 in k7271 in k6978 in k6975 in k6971 in k6680 in k6677 in k6674 in k6671 */
static void C_fcall f_22737(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[11],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_22737,NULL,2,t0,t1);}
if(C_truep(t1)){
t2=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_22741,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],tmp=(C_word)a,a+=4,tmp);
t3=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_22743,a[2]=((C_word)li332),tmp=(C_word)a,a+=3,tmp);
C_trace("ChickenBridge.scm: 379  sort");
t4=C_retrieve(lf[218]);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,((C_word*)((C_word*)t0)[3])[1],t3);}
else{
t2=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_22759,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 379  reverse");
t3=*((C_word*)lf[216]+1);
((C_proc3)C_retrieve_proc(t3))(3,t3,t2,((C_word*)((C_word*)t0)[3])[1]);}}

/* k22757 in k22735 in k22260 in k22066 in k22061 in k22058 in k22055 in markov-analyze in k11783 in k10718 in k10715 in k7274 in k7271 in k6978 in k6975 in k6971 in k6680 in k6677 in k6674 in k6671 */
static void C_ccall f_22759(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[3])+1,t1);
t3=((C_word*)t0)[2];
f_22265(t3,t2);}

/* a22742 in k22735 in k22260 in k22066 in k22061 in k22058 in k22055 in markov-analyze in k11783 in k10718 in k10715 in k7274 in k7271 in k6978 in k6975 in k6971 in k6680 in k6677 in k6674 in k6671 */
static void C_ccall f_22743(C_word c,C_word t0,C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word ab[4],*a=ab;
if(c!=4) C_bad_argc_2(c,4,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr4,(void*)f_22743,4,t0,t1,t2,t3);}
t4=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_22751,a[2]=t3,a[3]=t1,tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 379  format");
t5=C_retrieve(lf[283]);
((C_proc5)C_retrieve_proc(t5))(5,t5,t4,C_SCHEME_FALSE,lf[412],t2);}

/* k22749 in a22742 in k22735 in k22260 in k22066 in k22061 in k22058 in k22055 in markov-analyze in k11783 in k10718 in k10715 in k7274 in k7271 in k6978 in k6975 in k6971 in k6680 in k6677 in k6674 in k6671 */
static void C_ccall f_22751(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[4],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_22751,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_22755,a[2]=t1,a[3]=((C_word*)t0)[3],tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 379  format");
t3=C_retrieve(lf[283]);
((C_proc5)C_retrieve_proc(t3))(5,t3,t2,C_SCHEME_FALSE,lf[411],((C_word*)t0)[2]);}

/* k22753 in k22749 in a22742 in k22735 in k22260 in k22066 in k22061 in k22058 in k22055 in markov-analyze in k11783 in k10718 in k10715 in k7274 in k7271 in k6978 in k6975 in k6971 in k6680 in k6677 in k6674 in k6671 */
static void C_ccall f_22755(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 379  string-ci<?");
t2=*((C_word*)lf[410]+1);
((C_proc4)C_retrieve_proc(t2))(4,t2,((C_word*)t0)[3],((C_word*)t0)[2],t1);}

/* k22739 in k22735 in k22260 in k22066 in k22061 in k22058 in k22055 in markov-analyze in k11783 in k10718 in k10715 in k7274 in k7271 in k6978 in k6975 in k6971 in k6680 in k6677 in k6674 in k6671 */
static void C_ccall f_22741(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[3])+1,t1);
t3=((C_word*)t0)[2];
f_22265(t3,t2);}

/* k22729 in k22260 in k22066 in k22061 in k22058 in k22055 in markov-analyze in k11783 in k10718 in k10715 in k7274 in k7271 in k6978 in k6975 in k6971 in k6680 in k6677 in k6674 in k6671 */
static void C_ccall f_22731(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[3])+1,t1);
t3=((C_word*)t0)[2];
f_22265(t3,t2);}

/* k22263 in k22260 in k22066 in k22061 in k22058 in k22055 in markov-analyze in k11783 in k10718 in k10715 in k7274 in k7271 in k6978 in k6975 in k6971 in k6680 in k6677 in k6674 in k6671 */
static void C_fcall f_22265(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[15],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_22265,NULL,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_22268,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],a[7]=((C_word*)t0)[7],tmp=(C_word)a,a+=8,tmp);
t3=C_SCHEME_UNDEFINED;
t4=(*a=C_VECTOR_TYPE|1,a[1]=t3,tmp=(C_word)a,a+=2,tmp);
t5=C_set_block_item(t4,0,(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_22608,a[2]=t4,a[3]=((C_word*)t0)[3],a[4]=((C_word)li331),tmp=(C_word)a,a+=5,tmp));
t6=((C_word*)t4)[1];
f_22608(t6,t2,((C_word*)((C_word*)t0)[7])[1],C_fix(0));}

/* do3006 in k22263 in k22260 in k22066 in k22061 in k22058 in k22055 in markov-analyze in k11783 in k10718 in k10715 in k7274 in k7271 in k6978 in k6975 in k6971 in k6680 in k6677 in k6674 in k6671 */
static void C_fcall f_22608(C_word t0,C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word ab[13],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_22608,NULL,4,t0,t1,t2,t3);}
t4=(*a=C_VECTOR_TYPE|1,a[1]=t3,tmp=(C_word)a,a+=2,tmp);
if(C_truep((C_word)C_i_nullp(t2))){
t5=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_22619,a[2]=t1,a[3]=((C_word*)t0)[3],tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 379  max");
t6=*((C_word*)lf[295]+1);
((C_proc4)C_retrieve_proc(t6))(4,t6,t5,((C_word*)t4)[1],((C_word*)((C_word*)t0)[3])[1]);}
else{
t5=(C_word)C_i_car(t2);
t6=(C_word)C_i_cadr(t5);
t7=(C_word)C_i_cddr(t5);
t8=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_22632,a[2]=t7,a[3]=t1,a[4]=((C_word*)t0)[2],a[5]=t2,a[6]=t4,tmp=(C_word)a,a+=7,tmp);
t9=(C_word)C_i_string_length(t6);
C_trace("ChickenBridge.scm: 379  max");
t10=*((C_word*)lf[295]+1);
((C_proc4)C_retrieve_proc(t10))(4,t10,t8,((C_word*)t4)[1],t9);}}

/* k22630 in do3006 in k22263 in k22260 in k22066 in k22061 in k22058 in k22055 in markov-analyze in k11783 in k10718 in k10715 in k7274 in k7271 in k6978 in k6975 in k6971 in k6680 in k6677 in k6674 in k6671 */
static void C_ccall f_22632(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word ab[13],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_22632,2,t0,t1);}
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_22635,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[6],a[4]=((C_word*)t0)[3],a[5]=((C_word*)t0)[4],a[6]=((C_word*)t0)[5],tmp=(C_word)a,a+=7,tmp);
t4=C_SCHEME_UNDEFINED;
t5=(*a=C_VECTOR_TYPE|1,a[1]=t4,tmp=(C_word)a,a+=2,tmp);
t6=C_set_block_item(t5,0,(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_22694,a[2]=t5,a[3]=((C_word)li330),tmp=(C_word)a,a+=4,tmp));
t7=((C_word*)t5)[1];
f_22694(t7,t3,((C_word*)t0)[2],C_fix(0));}

/* do3014 in k22630 in do3006 in k22263 in k22260 in k22066 in k22061 in k22058 in k22055 in markov-analyze in k11783 in k10718 in k10715 in k7274 in k7271 in k6978 in k6975 in k6971 in k6680 in k6677 in k6674 in k6671 */
static void C_fcall f_22694(C_word t0,C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word *a;
loop:
a=C_alloc(4);
C_check_for_interrupt;
if(!C_stack_probe(a)){
C_save_and_reclaim((void*)trf_22694,NULL,4,t0,t1,t2,t3);}
if(C_truep((C_word)C_i_nullp(t2))){
t4=t1;
((C_proc2)(void*)(*((C_word*)t4+1)))(2,t4,t3);}
else{
t4=(C_word)C_i_car(t2);
t5=(C_word)C_i_cadr(t4);
t6=(C_word)C_a_i_plus(&a,2,t3,t5);
t7=t3=t6;
t8=(C_word)C_i_cdr(t2);
t10=t1;
t11=t8;
t12=t3;
t1=t10;
t2=t11;
t3=t12;
goto loop;}}

/* k22633 in k22630 in do3006 in k22263 in k22260 in k22066 in k22061 in k22058 in k22055 in markov-analyze in k11783 in k10718 in k10715 in k7274 in k7271 in k6978 in k6975 in k6971 in k6680 in k6677 in k6674 in k6671 */
static void C_ccall f_22635(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word ab[19],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_22635,2,t0,t1);}
t2=t1;
t3=(*a=C_VECTOR_TYPE|1,a[1]=t2,tmp=(C_word)a,a+=2,tmp);
t4=(C_word)C_a_i_times(&a,2,((C_word*)t3)[1],lf[408]);
t5=C_set_block_item(t3,0,t4);
t6=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_22642,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],tmp=(C_word)a,a+=6,tmp);
t7=C_SCHEME_UNDEFINED;
t8=(*a=C_VECTOR_TYPE|1,a[1]=t7,tmp=(C_word)a,a+=2,tmp);
t9=C_set_block_item(t8,0,(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_22651,a[2]=t3,a[3]=t8,a[4]=((C_word)li329),tmp=(C_word)a,a+=5,tmp));
t10=((C_word*)t8)[1];
f_22651(t10,t6,((C_word*)t0)[2]);}

/* do3020 in k22633 in k22630 in do3006 in k22263 in k22260 in k22066 in k22061 in k22058 in k22055 in markov-analyze in k11783 in k10718 in k10715 in k7274 in k7271 in k6978 in k6975 in k6971 in k6680 in k6677 in k6674 in k6671 */
static void C_fcall f_22651(C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word ab[10],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_22651,NULL,3,t0,t1,t2);}
if(C_truep((C_word)C_i_nullp(t2))){
t3=t1;
((C_proc2)(void*)(*((C_word*)t3+1)))(2,t3,C_SCHEME_FALSE);}
else{
t3=(C_word)C_i_car(t2);
t4=(C_word)C_i_cdr(t3);
t5=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_22676,a[2]=t1,a[3]=((C_word*)t0)[3],a[4]=t2,a[5]=t4,tmp=(C_word)a,a+=6,tmp);
t6=(C_word)C_i_car(t2);
t7=(C_word)C_i_cadr(t6);
t8=(C_word)C_a_i_divide(&a,2,t7,((C_word*)((C_word*)t0)[2])[1]);
C_trace("ChickenBridge.scm: 379  decimals");
t9=C_retrieve(lf[135]);
((C_proc4)C_retrieve_proc(t9))(4,t9,t5,t8,C_fix(3));}}

/* k22674 in do3020 in k22633 in k22630 in do3006 in k22263 in k22260 in k22066 in k22061 in k22058 in k22055 in markov-analyze in k11783 in k10718 in k10715 in k7274 in k7271 in k6978 in k6975 in k6971 in k6680 in k6677 in k6674 in k6671 */
static void C_ccall f_22676(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word *a;
t2=(C_word)C_i_set_car(((C_word*)t0)[5],t1);
t3=(C_word)C_i_cdr(((C_word*)t0)[4]);
t4=((C_word*)((C_word*)t0)[3])[1];
f_22651(t4,((C_word*)t0)[2],t3);}

/* k22640 in k22633 in k22630 in do3006 in k22263 in k22260 in k22066 in k22061 in k22058 in k22055 in markov-analyze in k11783 in k10718 in k10715 in k7274 in k7271 in k6978 in k6975 in k6971 in k6680 in k6677 in k6674 in k6671 */
static void C_ccall f_22642(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word *a;
t2=(C_word)C_i_cdr(((C_word*)t0)[5]);
t3=((C_word*)((C_word*)t0)[4])[1];
f_22608(t3,((C_word*)t0)[3],t2,((C_word*)((C_word*)t0)[2])[1]);}

/* k22617 in do3006 in k22263 in k22260 in k22066 in k22061 in k22058 in k22055 in markov-analyze in k11783 in k10718 in k10715 in k7274 in k7271 in k6978 in k6975 in k6971 in k6680 in k6677 in k6674 in k6671 */
static void C_ccall f_22619(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[3])+1,t1);
t3=((C_word*)t0)[2];
((C_proc2)(void*)(*((C_word*)t3+1)))(2,t3,t2);}

/* k22266 in k22263 in k22260 in k22066 in k22061 in k22058 in k22055 in markov-analyze in k11783 in k10718 in k10715 in k7274 in k7271 in k6978 in k6975 in k6971 in k6680 in k6677 in k6674 in k6671 */
static void C_ccall f_22268(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[12],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_22268,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_22272,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_22594,a[2]=((C_word*)t0)[4],a[3]=((C_word*)t0)[2],a[4]=((C_word)li328),tmp=(C_word)a,a+=5,tmp);
C_trace("ChickenBridge.scm: 379  sort");
t4=C_retrieve(lf[218]);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,((C_word*)((C_word*)t0)[7])[1],t3);}

/* a22593 in k22266 in k22263 in k22260 in k22066 in k22061 in k22058 in k22055 in markov-analyze in k11783 in k10718 in k10715 in k7274 in k7271 in k6978 in k6975 in k6971 in k6680 in k6677 in k6674 in k6671 */
static void C_ccall f_22594(C_word c,C_word t0,C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word t6;
C_word *a;
if(c!=4) C_bad_argc_2(c,4,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr4,(void*)f_22594,4,t0,t1,t2,t3);}
t4=(C_word)C_i_car(t2);
t5=(C_word)C_i_car(t3);
C_trace("ChickenBridge.scm: 379  before?");
t6=((C_word*)((C_word*)t0)[3])[1];
f_22152(t6,t1,t4,t5,((C_word*)((C_word*)t0)[2])[1]);}

/* k22270 in k22266 in k22263 in k22260 in k22066 in k22061 in k22058 in k22055 in markov-analyze in k11783 in k10718 in k10715 in k7274 in k7271 in k6978 in k6975 in k6971 in k6680 in k6677 in k6674 in k6671 */
static void C_ccall f_22272(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word ab[12],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_22272,2,t0,t1);}
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_22275,a[2]=((C_word*)t0)[6],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],tmp=(C_word)a,a+=5,tmp);
t4=(C_word)C_eqp(((C_word*)((C_word*)t0)[5])[1],C_fix(1));
if(C_truep(t4)){
t5=lf[397];
t6=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_22316,a[2]=((C_word*)t0)[6],a[3]=((C_word*)t0)[2],a[4]=((C_word*)t0)[3],a[5]=t5,a[6]=t3,tmp=(C_word)a,a+=7,tmp);
C_trace("ChickenBridge.scm: 379  make-string");
t7=*((C_word*)lf[407]+1);
((C_proc4)C_retrieve_proc(t7))(4,t7,t6,C_fix(5),C_make_character(45));}
else{
t5=t3;
f_22275(2,t5,C_SCHEME_UNDEFINED);}}

/* k22314 in k22270 in k22266 in k22263 in k22260 in k22066 in k22061 in k22058 in k22055 in markov-analyze in k11783 in k10718 in k10715 in k7274 in k7271 in k6978 in k6975 in k6971 in k6680 in k6677 in k6674 in k6671 */
static void C_ccall f_22316(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[8],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_22316,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_22319,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=t1,a[6]=((C_word*)t0)[5],a[7]=((C_word*)t0)[6],tmp=(C_word)a,a+=8,tmp);
C_trace("ChickenBridge.scm: 379  newline");
t3=*((C_word*)lf[398]+1);
((C_proc2)C_retrieve_proc(t3))(2,t3,t2);}

/* k22317 in k22314 in k22270 in k22266 in k22263 in k22260 in k22066 in k22061 in k22058 in k22055 in markov-analyze in k11783 in k10718 in k10715 in k7274 in k7271 in k6978 in k6975 in k6971 in k6680 in k6677 in k6674 in k6671 */
static void C_ccall f_22319(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[15],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_22319,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_22322,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],a[7]=((C_word*)t0)[7],tmp=(C_word)a,a+=8,tmp);
t3=C_SCHEME_UNDEFINED;
t4=(*a=C_VECTOR_TYPE|1,a[1]=t3,tmp=(C_word)a,a+=2,tmp);
t5=C_set_block_item(t4,0,(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_22575,a[2]=t4,a[3]=((C_word*)t0)[3],a[4]=((C_word)li327),tmp=(C_word)a,a+=5,tmp));
t6=((C_word*)t4)[1];
f_22575(t6,t2,C_fix(0));}

/* do3033 in k22317 in k22314 in k22270 in k22266 in k22263 in k22260 in k22066 in k22061 in k22058 in k22055 in markov-analyze in k11783 in k10718 in k10715 in k7274 in k7271 in k6978 in k6975 in k6971 in k6680 in k6677 in k6674 in k6671 */
static void C_fcall f_22575(C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word ab[5],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_22575,NULL,3,t0,t1,t2);}
if(C_truep((C_word)C_i_nequalp(t2,((C_word*)((C_word*)t0)[3])[1]))){
t3=t1;
((C_proc2)(void*)(*((C_word*)t3+1)))(2,t3,C_SCHEME_FALSE);}
else{
t3=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_22585,a[2]=t1,a[3]=((C_word*)t0)[2],a[4]=t2,tmp=(C_word)a,a+=5,tmp);
C_trace("write-char/port");
t4=C_retrieve(lf[400]);
((C_proc4)(void*)(*((C_word*)t4+1)))(4,t4,t3,C_make_character(42),*((C_word*)lf[401]+1));}}

/* k22583 in do3033 in k22317 in k22314 in k22270 in k22266 in k22263 in k22260 in k22066 in k22061 in k22058 in k22055 in markov-analyze in k11783 in k10718 in k10715 in k7274 in k7271 in k6978 in k6975 in k6971 in k6680 in k6677 in k6674 in k6671 */
static void C_ccall f_22585(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[4],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_22585,2,t0,t1);}
t2=(C_word)C_a_i_plus(&a,2,((C_word*)t0)[4],C_fix(1));
t3=((C_word*)((C_word*)t0)[3])[1];
f_22575(t3,((C_word*)t0)[2],t2);}

/* k22320 in k22317 in k22314 in k22270 in k22266 in k22263 in k22260 in k22066 in k22061 in k22058 in k22055 in markov-analyze in k11783 in k10718 in k10715 in k7274 in k7271 in k6978 in k6975 in k6971 in k6680 in k6677 in k6674 in k6671 */
static void C_ccall f_22322(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[15],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_22322,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_22325,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],a[7]=((C_word*)t0)[7],tmp=(C_word)a,a+=8,tmp);
t3=C_SCHEME_UNDEFINED;
t4=(*a=C_VECTOR_TYPE|1,a[1]=t3,tmp=(C_word)a,a+=2,tmp);
t5=C_set_block_item(t4,0,(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_22513,a[2]=((C_word*)t0)[6],a[3]=t4,a[4]=((C_word)li326),tmp=(C_word)a,a+=5,tmp));
t6=((C_word*)t4)[1];
f_22513(t6,t2,((C_word*)((C_word*)t0)[4])[1]);}

/* do3038 in k22320 in k22317 in k22314 in k22270 in k22266 in k22263 in k22260 in k22066 in k22061 in k22058 in k22055 in markov-analyze in k11783 in k10718 in k10715 in k7274 in k7271 in k6978 in k6975 in k6971 in k6680 in k6677 in k6674 in k6671 */
static void C_fcall f_22513(C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word ab[5],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_22513,NULL,3,t0,t1,t2);}
if(C_truep((C_word)C_i_nullp(t2))){
t3=t1;
((C_proc2)(void*)(*((C_word*)t3+1)))(2,t3,C_SCHEME_FALSE);}
else{
t3=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_22523,a[2]=t1,a[3]=((C_word*)t0)[3],a[4]=t2,tmp=(C_word)a,a+=5,tmp);
C_trace("ChickenBridge.scm: 379  display");
t4=*((C_word*)lf[399]+1);
((C_proc3)C_retrieve_proc(t4))(3,t4,t3,((C_word*)t0)[2]);}}

/* k22521 in do3038 in k22320 in k22317 in k22314 in k22270 in k22266 in k22263 in k22260 in k22066 in k22061 in k22058 in k22055 in markov-analyze in k11783 in k10718 in k10715 in k7274 in k7271 in k6978 in k6975 in k6971 in k6680 in k6677 in k6674 in k6671 */
static void C_ccall f_22523(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[5],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_22523,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_22526,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],tmp=(C_word)a,a+=5,tmp);
t3=(C_word)C_i_car(((C_word*)t0)[4]);
C_trace("ChickenBridge.scm: 379  format");
t4=C_retrieve(lf[283]);
((C_proc5)C_retrieve_proc(t4))(5,t4,t2,C_SCHEME_FALSE,lf[406],t3);}

/* k22524 in k22521 in do3038 in k22320 in k22317 in k22314 in k22270 in k22266 in k22263 in k22260 in k22066 in k22061 in k22058 in k22055 in markov-analyze in k11783 in k10718 in k10715 in k7274 in k7271 in k6978 in k6975 in k6971 in k6680 in k6677 in k6674 in k6671 */
static void C_ccall f_22526(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[13],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_22526,2,t0,t1);}
t2=(C_word)C_i_string_length(t1);
t3=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_22532,a[2]=t1,a[3]=((C_word*)t0)[2],a[4]=((C_word*)t0)[3],a[5]=((C_word*)t0)[4],tmp=(C_word)a,a+=6,tmp);
t4=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_22546,a[2]=t3,tmp=(C_word)a,a+=3,tmp);
t5=(C_word)C_a_i_minus(&a,2,C_fix(5),t2);
C_trace("ChickenBridge.scm: 379  max");
t6=*((C_word*)lf[295]+1);
((C_proc4)C_retrieve_proc(t6))(4,t6,t4,t5,C_fix(0));}

/* k22544 in k22524 in k22521 in do3038 in k22320 in k22317 in k22314 in k22270 in k22266 in k22263 in k22260 in k22066 in k22061 in k22058 in k22055 in markov-analyze in k11783 in k10718 in k10715 in k7274 in k7271 in k6978 in k6975 in k6971 in k6680 in k6677 in k6674 in k6671 */
static void C_ccall f_22546(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[6],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_22546,2,t0,t1);}
t2=C_SCHEME_UNDEFINED;
t3=(*a=C_VECTOR_TYPE|1,a[1]=t2,tmp=(C_word)a,a+=2,tmp);
t4=C_set_block_item(t3,0,(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_22548,a[2]=t3,a[3]=((C_word)li325),tmp=(C_word)a,a+=4,tmp));
t5=((C_word*)t3)[1];
f_22548(t5,((C_word*)t0)[2],C_fix(0),t1);}

/* do3043 in k22544 in k22524 in k22521 in do3038 in k22320 in k22317 in k22314 in k22270 in k22266 in k22263 in k22260 in k22066 in k22061 in k22058 in k22055 in markov-analyze in k11783 in k10718 in k10715 in k7274 in k7271 in k6978 in k6975 in k6971 in k6680 in k6677 in k6674 in k6671 */
static void C_fcall f_22548(C_word t0,C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word ab[6],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_22548,NULL,4,t0,t1,t2,t3);}
if(C_truep((C_word)C_i_nequalp(t2,t3))){
t4=t1;
((C_proc2)(void*)(*((C_word*)t4+1)))(2,t4,C_SCHEME_FALSE);}
else{
t4=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_22558,a[2]=t3,a[3]=t1,a[4]=((C_word*)t0)[2],a[5]=t2,tmp=(C_word)a,a+=6,tmp);
C_trace("write-char/port");
t5=C_retrieve(lf[400]);
((C_proc4)(void*)(*((C_word*)t5+1)))(4,t5,t4,C_make_character(32),*((C_word*)lf[401]+1));}}

/* k22556 in do3043 in k22544 in k22524 in k22521 in do3038 in k22320 in k22317 in k22314 in k22270 in k22266 in k22263 in k22260 in k22066 in k22061 in k22058 in k22055 in markov-analyze in k11783 in k10718 in k10715 in k7274 in k7271 in k6978 in k6975 in k6971 in k6680 in k6677 in k6674 in k6671 */
static void C_ccall f_22558(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[4],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_22558,2,t0,t1);}
t2=(C_word)C_a_i_plus(&a,2,((C_word*)t0)[5],C_fix(1));
t3=((C_word*)((C_word*)t0)[4])[1];
f_22548(t3,((C_word*)t0)[3],t2,((C_word*)t0)[2]);}

/* k22530 in k22524 in k22521 in do3038 in k22320 in k22317 in k22314 in k22270 in k22266 in k22263 in k22260 in k22066 in k22061 in k22058 in k22055 in markov-analyze in k11783 in k10718 in k10715 in k7274 in k7271 in k6978 in k6975 in k6971 in k6680 in k6677 in k6674 in k6671 */
static void C_ccall f_22532(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[5],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_22532,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_22535,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],tmp=(C_word)a,a+=5,tmp);
C_trace("ChickenBridge.scm: 379  display");
t3=*((C_word*)lf[399]+1);
((C_proc3)C_retrieve_proc(t3))(3,t3,t2,((C_word*)t0)[2]);}

/* k22533 in k22530 in k22524 in k22521 in do3038 in k22320 in k22317 in k22314 in k22270 in k22266 in k22263 in k22260 in k22066 in k22061 in k22058 in k22055 in markov-analyze in k11783 in k10718 in k10715 in k7274 in k7271 in k6978 in k6975 in k6971 in k6680 in k6677 in k6674 in k6671 */
static void C_ccall f_22535(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word *a;
t2=(C_word)C_i_cdr(((C_word*)t0)[4]);
t3=((C_word*)((C_word*)t0)[3])[1];
f_22513(t3,((C_word*)t0)[2],t2);}

/* k22323 in k22320 in k22317 in k22314 in k22270 in k22266 in k22263 in k22260 in k22066 in k22061 in k22058 in k22055 in markov-analyze in k11783 in k10718 in k10715 in k7274 in k7271 in k6978 in k6975 in k6971 in k6680 in k6677 in k6674 in k6671 */
static void C_ccall f_22325(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[13],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_22325,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_22328,a[2]=((C_word*)t0)[7],tmp=(C_word)a,a+=3,tmp);
t3=C_SCHEME_UNDEFINED;
t4=(*a=C_VECTOR_TYPE|1,a[1]=t3,tmp=(C_word)a,a+=2,tmp);
t5=C_set_block_item(t4,0,(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_22333,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=t4,a[7]=((C_word)li324),tmp=(C_word)a,a+=8,tmp));
t6=((C_word*)t4)[1];
f_22333(t6,t2,((C_word*)((C_word*)t0)[2])[1]);}

/* do3053 in k22323 in k22320 in k22317 in k22314 in k22270 in k22266 in k22263 in k22260 in k22066 in k22061 in k22058 in k22055 in markov-analyze in k11783 in k10718 in k10715 in k7274 in k7271 in k6978 in k6975 in k6971 in k6680 in k6677 in k6674 in k6671 */
static void C_fcall f_22333(C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word t5;
C_word ab[10],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_22333,NULL,3,t0,t1,t2);}
if(C_truep((C_word)C_i_nullp(t2))){
t3=t1;
((C_proc2)(void*)(*((C_word*)t3+1)))(2,t3,C_SCHEME_FALSE);}
else{
t3=(C_word)C_i_car(t2);
t4=(*a=C_CLOSURE_TYPE|9,a[1]=(C_word)f_22346,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=t3,a[7]=t1,a[8]=((C_word*)t0)[6],a[9]=t2,tmp=(C_word)a,a+=10,tmp);
C_trace("ChickenBridge.scm: 379  newline");
t5=*((C_word*)lf[398]+1);
((C_proc2)C_retrieve_proc(t5))(2,t5,t4);}}

/* k22344 in do3053 in k22323 in k22320 in k22317 in k22314 in k22270 in k22266 in k22263 in k22260 in k22066 in k22061 in k22058 in k22055 in markov-analyze in k11783 in k10718 in k10715 in k7274 in k7271 in k6978 in k6975 in k6971 in k6680 in k6677 in k6674 in k6671 */
static void C_ccall f_22346(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[14],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_22346,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|9,a[1]=(C_word)f_22349,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],a[7]=((C_word*)t0)[7],a[8]=((C_word*)t0)[8],a[9]=((C_word*)t0)[9],tmp=(C_word)a,a+=10,tmp);
t3=(C_word)C_i_car(((C_word*)t0)[6]);
if(C_truep((C_word)C_i_nullp(t3))){
t4=t2;
f_22349(2,t4,lf[403]);}
else{
t4=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_22220,a[2]=t2,a[3]=t3,tmp=(C_word)a,a+=4,tmp);
t5=(C_word)C_i_car(t3);
C_trace("ChickenBridge.scm: 379  format");
t6=C_retrieve(lf[283]);
((C_proc5)C_retrieve_proc(t6))(5,t6,t4,C_SCHEME_FALSE,lf[405],t5);}}

/* k22218 in k22344 in do3053 in k22323 in k22320 in k22317 in k22314 in k22270 in k22266 in k22263 in k22260 in k22066 in k22061 in k22058 in k22055 in markov-analyze in k11783 in k10718 in k10715 in k7274 in k7271 in k6978 in k6975 in k6971 in k6680 in k6677 in k6674 in k6671 */
static void C_ccall f_22220(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_22220,2,t0,t1);}
t2=t1;
t3=(*a=C_VECTOR_TYPE|1,a[1]=t2,tmp=(C_word)a,a+=2,tmp);
t4=(C_word)C_i_cdr(((C_word*)t0)[3]);
t5=C_SCHEME_UNDEFINED;
t6=(*a=C_VECTOR_TYPE|1,a[1]=t5,tmp=(C_word)a,a+=2,tmp);
t7=C_set_block_item(t6,0,(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_22229,a[2]=t6,a[3]=t3,a[4]=((C_word)li323),tmp=(C_word)a,a+=5,tmp));
t8=((C_word*)t6)[1];
f_22229(t8,((C_word*)t0)[2],t4);}

/* do2985 in k22218 in k22344 in do3053 in k22323 in k22320 in k22317 in k22314 in k22270 in k22266 in k22263 in k22260 in k22066 in k22061 in k22058 in k22055 in markov-analyze in k11783 in k10718 in k10715 in k7274 in k7271 in k6978 in k6975 in k6971 in k6680 in k6677 in k6674 in k6671 */
static void C_fcall f_22229(C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[10],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_22229,NULL,3,t0,t1,t2);}
if(C_truep((C_word)C_i_nullp(t2))){
t3=t1;
((C_proc2)(void*)(*((C_word*)t3+1)))(2,t3,((C_word*)((C_word*)t0)[3])[1]);}
else{
t3=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_22240,a[2]=t1,a[3]=((C_word*)t0)[2],a[4]=t2,a[5]=((C_word*)t0)[3],tmp=(C_word)a,a+=6,tmp);
t4=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_22251,a[2]=((C_word*)t0)[3],a[3]=t3,tmp=(C_word)a,a+=4,tmp);
t5=(C_word)C_i_car(t2);
C_trace("ChickenBridge.scm: 379  format");
t6=C_retrieve(lf[283]);
((C_proc5)C_retrieve_proc(t6))(5,t6,t4,C_SCHEME_FALSE,lf[404],t5);}}

/* k22249 in do2985 in k22218 in k22344 in do3053 in k22323 in k22320 in k22317 in k22314 in k22270 in k22266 in k22263 in k22260 in k22066 in k22061 in k22058 in k22055 in markov-analyze in k11783 in k10718 in k10715 in k7274 in k7271 in k6978 in k6975 in k6971 in k6680 in k6677 in k6674 in k6671 */
static void C_ccall f_22251(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 379  string-append");
t2=*((C_word*)lf[53]+1);
((C_proc4)C_retrieve_proc(t2))(4,t2,((C_word*)t0)[3],((C_word*)((C_word*)t0)[2])[1],t1);}

/* k22238 in do2985 in k22218 in k22344 in do3053 in k22323 in k22320 in k22317 in k22314 in k22270 in k22266 in k22263 in k22260 in k22066 in k22061 in k22058 in k22055 in markov-analyze in k11783 in k10718 in k10715 in k7274 in k7271 in k6978 in k6975 in k6971 in k6680 in k6677 in k6674 in k6671 */
static void C_ccall f_22240(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[5])+1,t1);
t3=(C_word)C_i_cdr(((C_word*)t0)[4]);
t4=((C_word*)((C_word*)t0)[3])[1];
f_22229(t4,((C_word*)t0)[2],t3);}

/* k22347 in k22344 in do3053 in k22323 in k22320 in k22317 in k22314 in k22270 in k22266 in k22263 in k22260 in k22066 in k22061 in k22058 in k22055 in markov-analyze in k11783 in k10718 in k10715 in k7274 in k7271 in k6978 in k6975 in k6971 in k6680 in k6677 in k6674 in k6671 */
static void C_ccall f_22349(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[19],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_22349,2,t0,t1);}
t2=(C_word)C_i_string_length(t1);
t3=(*a=C_CLOSURE_TYPE|11,a[1]=(C_word)f_22355,a[2]=t2,a[3]=((C_word*)t0)[2],a[4]=t1,a[5]=((C_word*)t0)[3],a[6]=((C_word*)t0)[4],a[7]=((C_word*)t0)[5],a[8]=((C_word*)t0)[6],a[9]=((C_word*)t0)[7],a[10]=((C_word*)t0)[8],a[11]=((C_word*)t0)[9],tmp=(C_word)a,a+=12,tmp);
t4=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_22484,a[2]=t3,tmp=(C_word)a,a+=3,tmp);
t5=(C_word)C_a_i_minus(&a,2,((C_word*)((C_word*)t0)[2])[1],t2);
C_trace("ChickenBridge.scm: 379  max");
t6=*((C_word*)lf[295]+1);
((C_proc4)C_retrieve_proc(t6))(4,t6,t4,t5,C_fix(0));}

/* k22482 in k22347 in k22344 in do3053 in k22323 in k22320 in k22317 in k22314 in k22270 in k22266 in k22263 in k22260 in k22066 in k22061 in k22058 in k22055 in markov-analyze in k11783 in k10718 in k10715 in k7274 in k7271 in k6978 in k6975 in k6971 in k6680 in k6677 in k6674 in k6671 */
static void C_ccall f_22484(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[6],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_22484,2,t0,t1);}
t2=C_SCHEME_UNDEFINED;
t3=(*a=C_VECTOR_TYPE|1,a[1]=t2,tmp=(C_word)a,a+=2,tmp);
t4=C_set_block_item(t3,0,(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_22486,a[2]=t3,a[3]=((C_word)li322),tmp=(C_word)a,a+=4,tmp));
t5=((C_word*)t3)[1];
f_22486(t5,((C_word*)t0)[2],C_fix(0),t1);}

/* do3059 in k22482 in k22347 in k22344 in do3053 in k22323 in k22320 in k22317 in k22314 in k22270 in k22266 in k22263 in k22260 in k22066 in k22061 in k22058 in k22055 in markov-analyze in k11783 in k10718 in k10715 in k7274 in k7271 in k6978 in k6975 in k6971 in k6680 in k6677 in k6674 in k6671 */
static void C_fcall f_22486(C_word t0,C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word ab[6],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_22486,NULL,4,t0,t1,t2,t3);}
if(C_truep((C_word)C_i_nequalp(t2,t3))){
t4=t1;
((C_proc2)(void*)(*((C_word*)t4+1)))(2,t4,C_SCHEME_FALSE);}
else{
t4=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_22496,a[2]=t3,a[3]=t1,a[4]=((C_word*)t0)[2],a[5]=t2,tmp=(C_word)a,a+=6,tmp);
C_trace("write-char/port");
t5=C_retrieve(lf[400]);
((C_proc4)(void*)(*((C_word*)t5+1)))(4,t5,t4,C_make_character(32),*((C_word*)lf[401]+1));}}

/* k22494 in do3059 in k22482 in k22347 in k22344 in do3053 in k22323 in k22320 in k22317 in k22314 in k22270 in k22266 in k22263 in k22260 in k22066 in k22061 in k22058 in k22055 in markov-analyze in k11783 in k10718 in k10715 in k7274 in k7271 in k6978 in k6975 in k6971 in k6680 in k6677 in k6674 in k6671 */
static void C_ccall f_22496(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[4],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_22496,2,t0,t1);}
t2=(C_word)C_a_i_plus(&a,2,((C_word*)t0)[5],C_fix(1));
t3=((C_word*)((C_word*)t0)[4])[1];
f_22486(t3,((C_word*)t0)[3],t2,((C_word*)t0)[2]);}

/* k22353 in k22347 in k22344 in do3053 in k22323 in k22320 in k22317 in k22314 in k22270 in k22266 in k22263 in k22260 in k22066 in k22061 in k22058 in k22055 in markov-analyze in k11783 in k10718 in k10715 in k7274 in k7271 in k6978 in k6975 in k6971 in k6680 in k6677 in k6674 in k6671 */
static void C_ccall f_22355(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[13],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_22355,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|8,a[1]=(C_word)f_22358,a[2]=((C_word*)t0)[5],a[3]=((C_word*)t0)[6],a[4]=((C_word*)t0)[7],a[5]=((C_word*)t0)[8],a[6]=((C_word*)t0)[9],a[7]=((C_word*)t0)[10],a[8]=((C_word*)t0)[11],tmp=(C_word)a,a+=9,tmp);
t3=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_22457,a[2]=t2,a[3]=((C_word*)t0)[4],tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 379  min");
t4=*((C_word*)lf[402]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t3,((C_word*)((C_word*)t0)[3])[1],((C_word*)t0)[2]);}

/* k22455 in k22353 in k22347 in k22344 in do3053 in k22323 in k22320 in k22317 in k22314 in k22270 in k22266 in k22263 in k22260 in k22066 in k22061 in k22058 in k22055 in markov-analyze in k11783 in k10718 in k10715 in k7274 in k7271 in k6978 in k6975 in k6971 in k6680 in k6677 in k6674 in k6671 */
static void C_ccall f_22457(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_22457,2,t0,t1);}
t2=C_SCHEME_UNDEFINED;
t3=(*a=C_VECTOR_TYPE|1,a[1]=t2,tmp=(C_word)a,a+=2,tmp);
t4=C_set_block_item(t3,0,(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_22459,a[2]=((C_word*)t0)[3],a[3]=t3,a[4]=((C_word)li321),tmp=(C_word)a,a+=5,tmp));
t5=((C_word*)t3)[1];
f_22459(t5,((C_word*)t0)[2],C_fix(0),t1);}

/* do3065 in k22455 in k22353 in k22347 in k22344 in do3053 in k22323 in k22320 in k22317 in k22314 in k22270 in k22266 in k22263 in k22260 in k22066 in k22061 in k22058 in k22055 in markov-analyze in k11783 in k10718 in k10715 in k7274 in k7271 in k6978 in k6975 in k6971 in k6680 in k6677 in k6674 in k6671 */
static void C_fcall f_22459(C_word t0,C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word t6;
C_word ab[6],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_22459,NULL,4,t0,t1,t2,t3);}
if(C_truep((C_word)C_i_nequalp(t2,t3))){
t4=t1;
((C_proc2)(void*)(*((C_word*)t4+1)))(2,t4,C_SCHEME_FALSE);}
else{
t4=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_22469,a[2]=t3,a[3]=t1,a[4]=((C_word*)t0)[3],a[5]=t2,tmp=(C_word)a,a+=6,tmp);
t5=(C_word)C_i_string_ref(((C_word*)t0)[2],t2);
C_trace("write-char/port");
t6=C_retrieve(lf[400]);
((C_proc4)(void*)(*((C_word*)t6+1)))(4,t6,t4,t5,*((C_word*)lf[401]+1));}}

/* k22467 in do3065 in k22455 in k22353 in k22347 in k22344 in do3053 in k22323 in k22320 in k22317 in k22314 in k22270 in k22266 in k22263 in k22260 in k22066 in k22061 in k22058 in k22055 in markov-analyze in k11783 in k10718 in k10715 in k7274 in k7271 in k6978 in k6975 in k6971 in k6680 in k6677 in k6674 in k6671 */
static void C_ccall f_22469(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[4],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_22469,2,t0,t1);}
t2=(C_word)C_a_i_plus(&a,2,((C_word*)t0)[5],C_fix(1));
t3=((C_word*)((C_word*)t0)[4])[1];
f_22459(t3,((C_word*)t0)[3],t2,((C_word*)t0)[2]);}

/* k22356 in k22353 in k22347 in k22344 in do3053 in k22323 in k22320 in k22317 in k22314 in k22270 in k22266 in k22263 in k22260 in k22066 in k22061 in k22058 in k22055 in markov-analyze in k11783 in k10718 in k10715 in k7274 in k7271 in k6978 in k6975 in k6971 in k6680 in k6677 in k6674 in k6671 */
static void C_ccall f_22358(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[14],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_22358,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_22361,a[2]=((C_word*)t0)[6],a[3]=((C_word*)t0)[7],a[4]=((C_word*)t0)[8],tmp=(C_word)a,a+=5,tmp);
t3=C_SCHEME_UNDEFINED;
t4=(*a=C_VECTOR_TYPE|1,a[1]=t3,tmp=(C_word)a,a+=2,tmp);
t5=C_set_block_item(t4,0,(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_22370,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=t4,a[5]=((C_word*)t0)[5],a[6]=((C_word)li320),tmp=(C_word)a,a+=7,tmp));
t6=((C_word*)t4)[1];
f_22370(t6,t2,((C_word*)((C_word*)t0)[2])[1]);}

/* do3072 in k22356 in k22353 in k22347 in k22344 in do3053 in k22323 in k22320 in k22317 in k22314 in k22270 in k22266 in k22263 in k22260 in k22066 in k22061 in k22058 in k22055 in markov-analyze in k11783 in k10718 in k10715 in k7274 in k7271 in k6978 in k6975 in k6971 in k6680 in k6677 in k6674 in k6671 */
static void C_fcall f_22370(C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word ab[13],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_22370,NULL,3,t0,t1,t2);}
if(C_truep((C_word)C_i_nullp(t2))){
t3=t1;
((C_proc2)(void*)(*((C_word*)t3+1)))(2,t3,C_SCHEME_FALSE);}
else{
t3=(C_word)C_i_car(t2);
t4=(C_word)C_i_cddr(((C_word*)t0)[5]);
t5=(C_word)C_i_assoc(t3,t4);
t6=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_22383,a[2]=t1,a[3]=((C_word*)t0)[4],a[4]=t2,tmp=(C_word)a,a+=5,tmp);
if(C_truep(t5)){
t7=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_22402,a[2]=((C_word*)t0)[3],a[3]=t6,tmp=(C_word)a,a+=4,tmp);
t8=(C_word)C_i_cadr(t5);
C_trace("ChickenBridge.scm: 379  number->string");
C_number_to_string(3,0,t7,t8);}
else{
t7=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_22396,a[2]=((C_word*)t0)[2],a[3]=t6,tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 379  display");
t8=*((C_word*)lf[399]+1);
((C_proc3)C_retrieve_proc(t8))(3,t8,t7,((C_word*)t0)[3]);}}}

/* k22394 in do3072 in k22356 in k22353 in k22347 in k22344 in do3053 in k22323 in k22320 in k22317 in k22314 in k22270 in k22266 in k22263 in k22260 in k22066 in k22061 in k22058 in k22055 in markov-analyze in k11783 in k10718 in k10715 in k7274 in k7271 in k6978 in k6975 in k6971 in k6680 in k6677 in k6674 in k6671 */
static void C_ccall f_22396(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 379  display");
t2=*((C_word*)lf[399]+1);
((C_proc3)C_retrieve_proc(t2))(3,t2,((C_word*)t0)[3],((C_word*)t0)[2]);}

/* k22400 in do3072 in k22356 in k22353 in k22347 in k22344 in do3053 in k22323 in k22320 in k22317 in k22314 in k22270 in k22266 in k22263 in k22260 in k22066 in k22061 in k22058 in k22055 in markov-analyze in k11783 in k10718 in k10715 in k7274 in k7271 in k6978 in k6975 in k6971 in k6680 in k6677 in k6674 in k6671 */
static void C_ccall f_22402(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[5],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_22402,2,t0,t1);}
t2=(C_word)C_i_string_length(t1);
t3=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_22408,a[2]=t2,a[3]=t1,a[4]=((C_word*)t0)[3],tmp=(C_word)a,a+=5,tmp);
C_trace("ChickenBridge.scm: 379  display");
t4=*((C_word*)lf[399]+1);
((C_proc3)C_retrieve_proc(t4))(3,t4,t3,((C_word*)t0)[2]);}

/* k22406 in k22400 in do3072 in k22356 in k22353 in k22347 in k22344 in do3053 in k22323 in k22320 in k22317 in k22314 in k22270 in k22266 in k22263 in k22260 in k22066 in k22061 in k22058 in k22055 in markov-analyze in k11783 in k10718 in k10715 in k7274 in k7271 in k6978 in k6975 in k6971 in k6680 in k6677 in k6674 in k6671 */
static void C_ccall f_22408(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[11],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_22408,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_22411,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],tmp=(C_word)a,a+=4,tmp);
t3=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_22418,a[2]=t2,tmp=(C_word)a,a+=3,tmp);
t4=(C_word)C_a_i_minus(&a,2,C_fix(5),((C_word*)t0)[2]);
C_trace("ChickenBridge.scm: 379  max");
t5=*((C_word*)lf[295]+1);
((C_proc4)C_retrieve_proc(t5))(4,t5,t3,t4,C_fix(0));}

/* k22416 in k22406 in k22400 in do3072 in k22356 in k22353 in k22347 in k22344 in do3053 in k22323 in k22320 in k22317 in k22314 in k22270 in k22266 in k22263 in k22260 in k22066 in k22061 in k22058 in k22055 in markov-analyze in k11783 in k10718 in k10715 in k7274 in k7271 in k6978 in k6975 in k6971 in k6680 in k6677 in k6674 in k6671 */
static void C_ccall f_22418(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[6],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_22418,2,t0,t1);}
t2=C_SCHEME_UNDEFINED;
t3=(*a=C_VECTOR_TYPE|1,a[1]=t2,tmp=(C_word)a,a+=2,tmp);
t4=C_set_block_item(t3,0,(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_22420,a[2]=t3,a[3]=((C_word)li319),tmp=(C_word)a,a+=4,tmp));
t5=((C_word*)t3)[1];
f_22420(t5,((C_word*)t0)[2],C_fix(0),t1);}

/* do3079 in k22416 in k22406 in k22400 in do3072 in k22356 in k22353 in k22347 in k22344 in do3053 in k22323 in k22320 in k22317 in k22314 in k22270 in k22266 in k22263 in k22260 in k22066 in k22061 in k22058 in k22055 in markov-analyze in k11783 in k10718 in k10715 in k7274 in k7271 in k6978 in k6975 in k6971 in k6680 in k6677 in k6674 in k6671 */
static void C_fcall f_22420(C_word t0,C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word ab[6],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_22420,NULL,4,t0,t1,t2,t3);}
if(C_truep((C_word)C_i_nequalp(t2,t3))){
t4=t1;
((C_proc2)(void*)(*((C_word*)t4+1)))(2,t4,C_SCHEME_FALSE);}
else{
t4=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_22430,a[2]=t3,a[3]=t1,a[4]=((C_word*)t0)[2],a[5]=t2,tmp=(C_word)a,a+=6,tmp);
C_trace("write-char/port");
t5=C_retrieve(lf[400]);
((C_proc4)(void*)(*((C_word*)t5+1)))(4,t5,t4,C_make_character(32),*((C_word*)lf[401]+1));}}

/* k22428 in do3079 in k22416 in k22406 in k22400 in do3072 in k22356 in k22353 in k22347 in k22344 in do3053 in k22323 in k22320 in k22317 in k22314 in k22270 in k22266 in k22263 in k22260 in k22066 in k22061 in k22058 in k22055 in markov-analyze in k11783 in k10718 in k10715 in k7274 in k7271 in k6978 in k6975 in k6971 in k6680 in k6677 in k6674 in k6671 */
static void C_ccall f_22430(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[4],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_22430,2,t0,t1);}
t2=(C_word)C_a_i_plus(&a,2,((C_word*)t0)[5],C_fix(1));
t3=((C_word*)((C_word*)t0)[4])[1];
f_22420(t3,((C_word*)t0)[3],t2,((C_word*)t0)[2]);}

/* k22409 in k22406 in k22400 in do3072 in k22356 in k22353 in k22347 in k22344 in do3053 in k22323 in k22320 in k22317 in k22314 in k22270 in k22266 in k22263 in k22260 in k22066 in k22061 in k22058 in k22055 in markov-analyze in k11783 in k10718 in k10715 in k7274 in k7271 in k6978 in k6975 in k6971 in k6680 in k6677 in k6674 in k6671 */
static void C_ccall f_22411(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 379  display");
t2=*((C_word*)lf[399]+1);
((C_proc3)C_retrieve_proc(t2))(3,t2,((C_word*)t0)[3],((C_word*)t0)[2]);}

/* k22381 in do3072 in k22356 in k22353 in k22347 in k22344 in do3053 in k22323 in k22320 in k22317 in k22314 in k22270 in k22266 in k22263 in k22260 in k22066 in k22061 in k22058 in k22055 in markov-analyze in k11783 in k10718 in k10715 in k7274 in k7271 in k6978 in k6975 in k6971 in k6680 in k6677 in k6674 in k6671 */
static void C_ccall f_22383(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word *a;
t2=(C_word)C_i_cdr(((C_word*)t0)[4]);
t3=((C_word*)((C_word*)t0)[3])[1];
f_22370(t3,((C_word*)t0)[2],t2);}

/* k22359 in k22356 in k22353 in k22347 in k22344 in do3053 in k22323 in k22320 in k22317 in k22314 in k22270 in k22266 in k22263 in k22260 in k22066 in k22061 in k22058 in k22055 in markov-analyze in k11783 in k10718 in k10715 in k7274 in k7271 in k6978 in k6975 in k6971 in k6680 in k6677 in k6674 in k6671 */
static void C_ccall f_22361(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word *a;
t2=(C_word)C_i_cdr(((C_word*)t0)[4]);
t3=((C_word*)((C_word*)t0)[3])[1];
f_22333(t3,((C_word*)t0)[2],t2);}

/* k22326 in k22323 in k22320 in k22317 in k22314 in k22270 in k22266 in k22263 in k22260 in k22066 in k22061 in k22058 in k22055 in markov-analyze in k11783 in k10718 in k10715 in k7274 in k7271 in k6978 in k6975 in k6971 in k6680 in k6677 in k6674 in k6671 */
static void C_ccall f_22328(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 379  newline");
t2=*((C_word*)lf[398]+1);
((C_proc2)C_retrieve_proc(t2))(2,t2,((C_word*)t0)[2]);}

/* k22273 in k22270 in k22266 in k22263 in k22260 in k22066 in k22061 in k22058 in k22055 in markov-analyze in k11783 in k10718 in k10715 in k7274 in k7271 in k6978 in k6975 in k6971 in k6680 in k6677 in k6674 in k6671 */
static void C_ccall f_22275(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_22275,2,t0,t1);}
if(C_truep((C_word)C_i_nequalp(((C_word*)((C_word*)t0)[4])[1],C_fix(1)))){
C_trace("ChickenBridge.scm: 379  values");
C_values(2,0,((C_word*)t0)[3]);}
else{
t2=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_22287,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],tmp=(C_word)a,a+=4,tmp);
t3=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_22298,a[2]=((C_word)li318),tmp=(C_word)a,a+=3,tmp);
C_trace("map");
t4=*((C_word*)lf[17]+1);
((C_proc4)(void*)(*((C_word*)t4+1)))(4,t4,t2,t3,((C_word*)((C_word*)t0)[2])[1]);}}

/* a22297 in k22273 in k22270 in k22266 in k22263 in k22260 in k22066 in k22061 in k22058 in k22055 in markov-analyze in k11783 in k10718 in k10715 in k7274 in k7271 in k6978 in k6975 in k6971 in k6680 in k6677 in k6674 in k6671 */
static void C_ccall f_22298(C_word c,C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word t5;
C_word *a;
if(c!=3) C_bad_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr3,(void*)f_22298,3,t0,t1,t2);}
t3=(C_word)C_i_car(t2);
t4=(C_word)C_i_cddr(t2);
C_trace("ChickenBridge.scm: 379  append");
t5=*((C_word*)lf[18]+1);
((C_proc5)C_retrieve_proc(t5))(5,t5,t1,t3,lf[396],t4);}

/* k22285 in k22273 in k22270 in k22266 in k22263 in k22260 in k22066 in k22061 in k22058 in k22055 in markov-analyze in k11783 in k10718 in k10715 in k7274 in k7271 in k6978 in k6975 in k6971 in k6680 in k6677 in k6674 in k6671 */
static void C_ccall f_22287(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
if(C_truep((C_word)C_i_nequalp(((C_word*)((C_word*)t0)[3])[1],C_fix(2)))){
C_trace("ChickenBridge.scm: 379  make-markov");
t2=C_retrieve(lf[375]);
((C_proc3)C_retrieve_proc(t2))(3,t2,((C_word*)t0)[2],t1);}
else{
t2=((C_word*)t0)[2];
((C_proc2)(void*)(*((C_word*)t2+1)))(2,t2,t1);}}

/* before? in k22066 in k22061 in k22058 in k22055 in markov-analyze in k11783 in k10718 in k10715 in k7274 in k7271 in k6978 in k6975 in k6971 in k6680 in k6677 in k6674 in k6671 */
static void C_fcall f_22152(C_word t0,C_word t1,C_word t2,C_word t3,C_word t4){
C_word tmp;
C_word t5;
C_word t6;
C_word t7;
C_word ab[11],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_22152,NULL,5,t0,t1,t2,t3,t4);}
if(C_truep((C_word)C_i_nullp(t2))){
t5=t1;
((C_proc2)(void*)(*((C_word*)t5+1)))(2,t5,C_SCHEME_TRUE);}
else{
t5=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_22162,a[2]=t4,a[3]=((C_word*)t0)[2],a[4]=t3,a[5]=t2,a[6]=t1,tmp=(C_word)a,a+=7,tmp);
t6=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_22200,a[2]=t2,a[3]=((C_word)li316),tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 379  list-index");
t7=C_retrieve(lf[85]);
((C_proc4)C_retrieve_proc(t7))(4,t7,t5,t6,t4);}}

/* a22199 in before? in k22066 in k22061 in k22058 in k22055 in markov-analyze in k11783 in k10718 in k10715 in k7274 in k7271 in k6978 in k6975 in k6971 in k6680 in k6677 in k6674 in k6671 */
static void C_ccall f_22200(C_word c,C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word *a;
if(c!=3) C_bad_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr3,(void*)f_22200,3,t0,t1,t2);}
t3=(C_word)C_i_car(((C_word*)t0)[2]);
t4=t1;
((C_proc2)(void*)(*((C_word*)t4+1)))(2,t4,(C_word)C_i_equalp(t3,t2));}

/* k22160 in before? in k22066 in k22061 in k22058 in k22055 in markov-analyze in k11783 in k10718 in k10715 in k7274 in k7271 in k6978 in k6975 in k6971 in k6680 in k6677 in k6674 in k6671 */
static void C_ccall f_22162(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[12],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_22162,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_22165,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],a[7]=t1,tmp=(C_word)a,a+=8,tmp);
t3=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_22190,a[2]=((C_word*)t0)[4],a[3]=((C_word)li315),tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 379  list-index");
t4=C_retrieve(lf[85]);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,t3,((C_word*)t0)[2]);}

/* a22189 in k22160 in before? in k22066 in k22061 in k22058 in k22055 in markov-analyze in k11783 in k10718 in k10715 in k7274 in k7271 in k6978 in k6975 in k6971 in k6680 in k6677 in k6674 in k6671 */
static void C_ccall f_22190(C_word c,C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word *a;
if(c!=3) C_bad_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr3,(void*)f_22190,3,t0,t1,t2);}
t3=(C_word)C_i_car(((C_word*)t0)[2]);
t4=t1;
((C_proc2)(void*)(*((C_word*)t4+1)))(2,t4,(C_word)C_i_equalp(t3,t2));}

/* k22163 in k22160 in before? in k22066 in k22061 in k22058 in k22055 in markov-analyze in k11783 in k10718 in k10715 in k7274 in k7271 in k6978 in k6975 in k6971 in k6680 in k6677 in k6674 in k6671 */
static void C_ccall f_22165(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word *a;
if(C_truep((C_word)C_i_lessp(((C_word*)t0)[7],t1))){
t2=((C_word*)t0)[6];
((C_proc2)(void*)(*((C_word*)t2+1)))(2,t2,C_SCHEME_TRUE);}
else{
if(C_truep((C_word)C_i_nequalp(((C_word*)t0)[7],t1))){
t2=(C_word)C_i_cdr(((C_word*)t0)[5]);
t3=(C_word)C_i_cdr(((C_word*)t0)[4]);
C_trace("ChickenBridge.scm: 379  before?");
t4=((C_word*)((C_word*)t0)[3])[1];
f_22152(t4,((C_word*)t0)[6],t2,t3,((C_word*)t0)[2]);}
else{
t2=((C_word*)t0)[6];
((C_proc2)(void*)(*((C_word*)t2+1)))(2,t2,C_SCHEME_FALSE);}}}

/* add-outcome in k22066 in k22061 in k22058 in k22055 in markov-analyze in k11783 in k10718 in k10715 in k7274 in k7271 in k6978 in k6975 in k6971 in k6680 in k6677 in k6674 in k6671 */
static void C_fcall f_22070(C_word t0,C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word t6;
C_word ab[10],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_22070,NULL,4,t0,t1,t2,t3);}
t4=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_22074,a[2]=((C_word*)t0)[2],a[3]=t2,a[4]=t1,a[5]=t3,tmp=(C_word)a,a+=6,tmp);
t5=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_22142,a[2]=t2,a[3]=((C_word)li313),tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 379  list-find");
t6=C_retrieve(lf[86]);
((C_proc4)C_retrieve_proc(t6))(4,t6,t4,t5,((C_word*)((C_word*)t0)[2])[1]);}

/* a22141 in add-outcome in k22066 in k22061 in k22058 in k22055 in markov-analyze in k11783 in k10718 in k10715 in k7274 in k7271 in k6978 in k6975 in k6971 in k6680 in k6677 in k6674 in k6671 */
static void C_ccall f_22142(C_word c,C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word *a;
if(c!=3) C_bad_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr3,(void*)f_22142,3,t0,t1,t2);}
t3=(C_word)C_i_car(t2);
t4=t1;
((C_proc2)(void*)(*((C_word*)t4+1)))(2,t4,(C_word)C_i_equalp(((C_word*)t0)[2],t3));}

/* k22072 in add-outcome in k22066 in k22061 in k22058 in k22055 in markov-analyze in k11783 in k10718 in k10715 in k7274 in k7271 in k6978 in k6975 in k6971 in k6680 in k6677 in k6674 in k6671 */
static void C_ccall f_22074(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word ab[14],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_22074,2,t0,t1);}
t2=t1;
if(C_truep(t2)){
t3=(C_word)C_i_cddr(t1);
t4=(C_word)C_i_assoc(((C_word*)t0)[5],t3);
if(C_truep(t4)){
t5=(C_word)C_i_cdr(t4);
t6=(C_word)C_i_cadr(t4);
t7=(C_word)C_a_i_plus(&a,2,C_fix(1),t6);
t8=((C_word*)t0)[4];
((C_proc2)(void*)(*((C_word*)t8+1)))(2,t8,(C_word)C_i_set_car(t5,t7));}
else{
t5=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_22124,a[2]=((C_word*)t0)[4],a[3]=((C_word*)t0)[5],tmp=(C_word)a,a+=4,tmp);
t6=(C_word)C_i_cdr(t1);
C_trace("ChickenBridge.scm: 379  tail");
t7=C_retrieve(lf[77]);
((C_proc3)C_retrieve_proc(t7))(3,t7,t5,t6);}}
else{
t3=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_22092,a[2]=((C_word*)t0)[4],a[3]=((C_word*)t0)[2],a[4]=((C_word*)t0)[3],a[5]=((C_word*)t0)[5],tmp=(C_word)a,a+=6,tmp);
C_trace("ChickenBridge.scm: 379  format");
t4=C_retrieve(lf[283]);
((C_proc5)C_retrieve_proc(t4))(5,t4,t3,C_SCHEME_FALSE,lf[395],((C_word*)t0)[3]);}}

/* k22090 in k22072 in add-outcome in k22066 in k22061 in k22058 in k22055 in markov-analyze in k11783 in k10718 in k10715 in k7274 in k7271 in k6978 in k6975 in k6971 in k6680 in k6677 in k6674 in k6671 */
static void C_ccall f_22092(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[18],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_22092,2,t0,t1);}
t2=(C_word)C_a_i_list(&a,2,((C_word*)t0)[5],C_fix(1));
t3=(C_word)C_a_i_list(&a,3,((C_word*)t0)[4],t1,t2);
t4=(C_word)C_a_i_cons(&a,2,t3,((C_word*)((C_word*)t0)[3])[1]);
t5=C_mutate(((C_word *)((C_word*)t0)[3])+1,t4);
t6=((C_word*)t0)[2];
((C_proc2)(void*)(*((C_word*)t6+1)))(2,t6,t5);}

/* k22122 in k22072 in add-outcome in k22066 in k22061 in k22058 in k22055 in markov-analyze in k11783 in k10718 in k10715 in k7274 in k7271 in k6978 in k6975 in k6971 in k6680 in k6677 in k6674 in k6671 */
static void C_ccall f_22124(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_22124,2,t0,t1);}
t2=(C_word)C_a_i_list(&a,2,((C_word*)t0)[3],C_fix(1));
t3=(C_word)C_a_i_list(&a,1,t2);
t4=((C_word*)t0)[2];
((C_proc2)(void*)(*((C_word*)t4+1)))(2,t4,(C_word)C_i_set_cdr(t1,t3));}

/* next-in-graph in k11783 in k10718 in k10715 in k7274 in k7271 in k6978 in k6975 in k6971 in k6680 in k6677 in k6674 in k6671 */
static void C_ccall f_21953(C_word c,C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word ab[3],*a=ab;
if(c!=3) C_bad_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr3,(void*)f_21953,3,t0,t1,t2);}
t3=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_21957,a[2]=t1,tmp=(C_word)a,a+=3,tmp);
C_trace("ChickenBridge.scm: 379  pattern-data");
f_15548(t3,t2);}

/* k21955 in next-in-graph in k11783 in k10718 in k10715 in k7274 in k7271 in k6978 in k6975 in k6971 in k6680 in k6677 in k6674 in k6671 */
static void C_ccall f_21957(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word ab[5],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_21957,2,t0,t1);}
t2=(C_word)C_i_cdr(t1);
t3=(C_word)C_i_car(t1);
if(C_truep(t3)){
t4=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_21986,a[2]=t2,a[3]=((C_word*)t0)[2],a[4]=t1,tmp=(C_word)a,a+=5,tmp);
t5=(C_word)C_i_check_structure(t3,lf[386]);
t6=(C_word)C_i_block_ref(t3,C_fix(2));
C_trace("ChickenBridge.scm: 379  next-1");
f_16170(t4,t6);}
else{
t4=(C_word)C_i_car(t2);
t5=(C_word)C_i_set_car(t1,t4);
t6=(C_word)C_i_car(t2);
C_trace("ChickenBridge.scm: 379  graph-node-datum");
f_21372(((C_word*)t0)[2],t6);}}

/* k21984 in k21955 in next-in-graph in k11783 in k10718 in k10715 in k7274 in k7271 in k6978 in k6975 in k6971 in k6680 in k6677 in k6674 in k6671 */
static void C_ccall f_21986(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word ab[11],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_21986,2,t0,t1);}
t2=C_SCHEME_FALSE;
t3=(*a=C_VECTOR_TYPE|1,a[1]=t2,tmp=(C_word)a,a+=2,tmp);
t4=C_SCHEME_UNDEFINED;
t5=(*a=C_VECTOR_TYPE|1,a[1]=t4,tmp=(C_word)a,a+=2,tmp);
t6=C_set_block_item(t5,0,(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_21991,a[2]=t5,a[3]=t1,a[4]=((C_word*)t0)[4],a[5]=t3,a[6]=((C_word)li311),tmp=(C_word)a,a+=7,tmp));
t7=((C_word*)t5)[1];
f_21991(t7,((C_word*)t0)[3],((C_word*)t0)[2]);}

/* do2908 in k21984 in k21955 in next-in-graph in k11783 in k10718 in k10715 in k7274 in k7271 in k6978 in k6975 in k6971 in k6680 in k6677 in k6674 in k6671 */
static void C_fcall f_21991(C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word t14;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_21991,NULL,3,t0,t1,t2);}
t3=((C_word*)((C_word*)t0)[5])[1];
t4=(C_truep(t3)?t3:(C_word)C_i_nullp(t2));
if(C_truep(t4)){
t5=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_22001,a[2]=((C_word*)t0)[5],a[3]=t1,tmp=(C_word)a,a+=4,tmp);
t6=((C_word*)((C_word*)t0)[5])[1];
if(C_truep(t6)){
t7=t5;
f_22001(2,t7,(C_word)C_i_set_car(((C_word*)t0)[4],((C_word*)((C_word*)t0)[5])[1]));}
else{
C_trace("ChickenBridge.scm: 379  error");
t7=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t7))(4,t7,t5,lf[393],((C_word*)t0)[3]);}}
else{
t5=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_22016,a[2]=t1,a[3]=((C_word*)t0)[2],a[4]=t2,tmp=(C_word)a,a+=5,tmp);
t6=(C_word)C_i_car(t2);
t7=(C_word)C_i_check_structure(t6,lf[386]);
t8=(C_word)C_i_block_ref(t6,C_fix(3));
t9=(C_word)C_eqp(((C_word*)t0)[3],t8);
if(C_truep(t9)){
t10=(C_word)C_i_car(t2);
t11=C_mutate(((C_word *)((C_word*)t0)[5])+1,t10);
t12=t5;
f_22016(t12,t11);}
else{
t10=t5;
f_22016(t10,C_SCHEME_UNDEFINED);}}}

/* k22014 in do2908 in k21984 in k21955 in next-in-graph in k11783 in k10718 in k10715 in k7274 in k7271 in k6978 in k6975 in k6971 in k6680 in k6677 in k6674 in k6671 */
static void C_fcall f_22016(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word *a;
t2=(C_word)C_i_cdr(((C_word*)t0)[4]);
t3=((C_word*)((C_word*)t0)[3])[1];
f_21991(t3,((C_word*)t0)[2],t2);}

/* k21999 in do2908 in k21984 in k21955 in next-in-graph in k11783 in k10718 in k10715 in k7274 in k7271 in k6978 in k6975 in k6971 in k6680 in k6677 in k6674 in k6671 */
static void C_ccall f_22001(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 379  graph-node-datum");
f_21372(((C_word*)t0)[3],((C_word*)((C_word*)t0)[2])[1]);}

/* make-graph in k11783 in k10718 in k10715 in k7274 in k7271 in k6978 in k6975 in k6971 in k6680 in k6677 in k6674 in k6671 */
static void C_ccall f_21435(C_word c,C_word t0,C_word t1,C_word t2,...){
C_word tmp;
C_word t3;
va_list v;
C_word *a,c2=c;
C_save_rest(t2,c2,3);
if(c<3) C_bad_min_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_demand(c*C_SIZEOF_PAIR+17)){
C_save_and_reclaim((void*)tr3r,(void*)f_21435r,3,t0,t1,t2);}
else{
a=C_alloc((c-3)*3);
t3=C_restore_rest(a,C_rest_count(0));
f_21435r(t0,t1,t2,t3);}}

static void C_ccall f_21435r(C_word t0,C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word *a=C_alloc(17);
t4=(*a=C_VECTOR_TYPE|1,a[1]=t2,tmp=(C_word)a,a+=2,tmp);
t5=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_21439,a[2]=t1,a[3]=t4,a[4]=t3,tmp=(C_word)a,a+=5,tmp);
if(C_truep((C_word)C_i_pairp(((C_word*)t4)[1]))){
t6=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_21697,a[2]=t5,a[3]=t4,tmp=(C_word)a,a+=4,tmp);
t7=((C_word*)t4)[1];
t8=C_fix(1);
t9=(*a=C_VECTOR_TYPE|1,a[1]=t8,tmp=(C_word)a,a+=2,tmp);
t10=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_21706,a[2]=t9,a[3]=((C_word)li309),tmp=(C_word)a,a+=4,tmp);
C_trace("map");
t11=*((C_word*)lf[17]+1);
((C_proc4)(void*)(*((C_word*)t11+1)))(4,t11,t6,t10,t7);}
else{
C_trace("ChickenBridge.scm: 379  error");
t6=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t6))(4,t6,t5,lf[392],((C_word*)t4)[1]);}}

/* parse-graph-item in make-graph in k11783 in k10718 in k10715 in k7274 in k7271 in k6978 in k6975 in k6971 in k6680 in k6677 in k6674 in k6671 */
static void C_ccall f_21706(C_word c,C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word ab[5],*a=ab;
if(c!=3) C_bad_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr3,(void*)f_21706,3,t0,t1,t2);}
t3=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_21710,a[2]=t2,a[3]=t1,a[4]=((C_word*)t0)[2],tmp=(C_word)a,a+=5,tmp);
if(C_truep((C_word)C_i_pairp(t2))){
t4=t3;
f_21710(2,t4,C_SCHEME_UNDEFINED);}
else{
C_trace("ChickenBridge.scm: 379  error");
t4=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t3,lf[391],t2);}}

/* k21708 in parse-graph-item in make-graph in k11783 in k10718 in k10715 in k7274 in k7271 in k6978 in k6975 in k6971 in k6680 in k6677 in k6674 in k6671 */
static void C_ccall f_21710(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[4],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_21710,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_21715,a[2]=((C_word*)t0)[4],a[3]=((C_word)li308),tmp=(C_word)a,a+=4,tmp);
C_apply(4,0,((C_word*)t0)[3],t2,((C_word*)t0)[2]);}

/* a21714 in k21708 in parse-graph-item in make-graph in k11783 in k10718 in k10715 in k7274 in k7271 in k6978 in k6975 in k6971 in k6680 in k6677 in k6674 in k6671 */
static void C_ccall f_21715(C_word c,C_word t0,C_word t1,C_word t2,...){
C_word tmp;
C_word t3;
va_list v;
C_word *a,c2=c;
C_save_rest(t2,c2,3);
if(c<3) C_bad_min_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_demand(c*C_SIZEOF_PAIR+46)){
C_save_and_reclaim((void*)tr3r,(void*)f_21715r,3,t0,t1,t2);}
else{
a=C_alloc((c-3)*3);
t3=C_restore_rest(a,C_rest_count(0));
f_21715r(t0,t1,t2,t3);}}

static void C_ccall f_21715r(C_word t0,C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word t14;
C_word t15;
C_word t16;
C_word t17;
C_word t18;
C_word t19;
C_word t20;
C_word t21;
C_word t22;
C_word t23;
C_word *a=C_alloc(46);
t4=C_SCHEME_FALSE;
t5=(*a=C_VECTOR_TYPE|1,a[1]=t4,tmp=(C_word)a,a+=2,tmp);
t6=C_SCHEME_FALSE;
t7=(*a=C_VECTOR_TYPE|1,a[1]=t6,tmp=(C_word)a,a+=2,tmp);
t8=C_SCHEME_FALSE;
t9=(*a=C_VECTOR_TYPE|1,a[1]=t8,tmp=(C_word)a,a+=2,tmp);
t10=C_SCHEME_FALSE;
t11=(*a=C_VECTOR_TYPE|1,a[1]=t10,tmp=(C_word)a,a+=2,tmp);
t12=t3;
t13=(*a=C_VECTOR_TYPE|1,a[1]=t12,tmp=(C_word)a,a+=2,tmp);
t14=C_SCHEME_FALSE;
t15=(*a=C_VECTOR_TYPE|1,a[1]=t14,tmp=(C_word)a,a+=2,tmp);
t16=(*a=C_CLOSURE_TYPE|11,a[1]=(C_word)f_21719,a[2]=t11,a[3]=t15,a[4]=t9,a[5]=t3,a[6]=t13,a[7]=t7,a[8]=t5,a[9]=t2,a[10]=t1,a[11]=((C_word*)t0)[2],tmp=(C_word)a,a+=12,tmp);
if(C_truep((C_word)C_i_nullp(((C_word*)t13)[1]))){
t17=t16;
f_21719(t17,C_SCHEME_UNDEFINED);}
else{
t17=(C_word)C_i_car(((C_word*)t13)[1]);
t18=(C_word)C_eqp(t17,lf[389]);
if(C_truep(t18)){
t19=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_21857,a[2]=t3,a[3]=t16,a[4]=t13,a[5]=t15,a[6]=t9,a[7]=t5,tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)t9)[1])){
C_trace("error");
t20=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t20))(4,t20,t19,lf[19],lf[389]);}
else{
t20=t19;
f_21857(2,t20,C_SCHEME_UNDEFINED);}}
else{
t19=(C_word)C_eqp(t17,lf[390]);
if(C_truep(t19)){
t20=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_21892,a[2]=t3,a[3]=t16,a[4]=t13,a[5]=t15,a[6]=t11,a[7]=t7,tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)t11)[1])){
C_trace("error");
t21=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t21))(4,t21,t20,lf[19],lf[390]);}
else{
t21=t20;
f_21892(2,t21,C_SCHEME_UNDEFINED);}}
else{
t20=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_21921,a[2]=t16,a[3]=t9,a[4]=t5,a[5]=t13,tmp=(C_word)a,a+=6,tmp);
if(C_truep(((C_word*)t15)[1])){
C_trace("error");
t21=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t21))(4,t21,t20,lf[10],t3);}
else{
t21=t20;
f_21921(2,t21,C_SCHEME_UNDEFINED);}}}}}

/* k21919 in a21714 in k21708 in parse-graph-item in make-graph in k11783 in k10718 in k10715 in k7274 in k7271 in k6978 in k6975 in k6971 in k6680 in k6677 in k6674 in k6671 */
static void C_ccall f_21921(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_21921,2,t0,t1);}
t2=(C_word)C_i_car(((C_word*)((C_word*)t0)[5])[1]);
t3=C_mutate(((C_word *)((C_word*)t0)[4])+1,t2);
t4=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_21928,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[5],a[4]=((C_word*)t0)[3],tmp=(C_word)a,a+=5,tmp);
t5=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_21936,a[2]=((C_word*)t0)[4],a[3]=t4,tmp=(C_word)a,a+=4,tmp);
C_trace("keyword?");
t6=C_retrieve(lf[13]);
((C_proc3)C_retrieve_proc(t6))(3,t6,t5,((C_word*)((C_word*)t0)[4])[1]);}

/* k21934 in k21919 in a21714 in k21708 in parse-graph-item in make-graph in k11783 in k10718 in k10715 in k7274 in k7271 in k6978 in k6975 in k6971 in k6680 in k6677 in k6674 in k6671 */
static void C_ccall f_21936(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
if(C_truep(t1)){
C_trace("error");
t2=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t2))(4,t2,((C_word*)t0)[3],lf[14],((C_word*)((C_word*)t0)[2])[1]);}
else{
t2=((C_word*)t0)[3];
f_21928(2,t2,C_SCHEME_UNDEFINED);}}

/* k21926 in k21919 in a21714 in k21708 in parse-graph-item in make-graph in k11783 in k10718 in k10715 in k7274 in k7271 in k6978 in k6975 in k6971 in k6680 in k6677 in k6674 in k6671 */
static void C_ccall f_21928(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word *a;
t2=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[3])[1]);
t4=C_mutate(((C_word *)((C_word*)t0)[3])+1,t3);
t5=((C_word*)t0)[2];
f_21719(t5,t4);}

/* k21890 in a21714 in k21708 in parse-graph-item in make-graph in k11783 in k10718 in k10715 in k7274 in k7271 in k6978 in k6975 in k6971 in k6680 in k6677 in k6674 in k6671 */
static void C_ccall f_21892(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_21892,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_21896,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("error");
t4=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[21],((C_word*)t0)[2]);}
else{
t4=t2;
f_21896(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k21894 in k21890 in a21714 in k21708 in parse-graph-item in make-graph in k11783 in k10718 in k10715 in k7274 in k7271 in k6978 in k6975 in k6971 in k6680 in k6677 in k6674 in k6671 */
static void C_ccall f_21896(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_21719(t7,t6);}

/* k21855 in a21714 in k21708 in parse-graph-item in make-graph in k11783 in k10718 in k10715 in k7274 in k7271 in k6978 in k6975 in k6971 in k6680 in k6677 in k6674 in k6671 */
static void C_ccall f_21857(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_21857,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_21861,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("error");
t4=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[21],((C_word*)t0)[2]);}
else{
t4=t2;
f_21861(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k21859 in k21855 in a21714 in k21708 in parse-graph-item in make-graph in k11783 in k10718 in k10715 in k7274 in k7271 in k6978 in k6975 in k6971 in k6680 in k6677 in k6674 in k6671 */
static void C_ccall f_21861(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_21719(t7,t6);}

/* k21717 in a21714 in k21708 in parse-graph-item in make-graph in k11783 in k10718 in k10715 in k7274 in k7271 in k6978 in k6975 in k6971 in k6680 in k6677 in k6674 in k6671 */
static void C_fcall f_21719(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word ab[31],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_21719,NULL,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|8,a[1]=(C_word)f_21722,a[2]=((C_word*)t0)[5],a[3]=((C_word*)t0)[6],a[4]=((C_word*)t0)[7],a[5]=((C_word*)t0)[8],a[6]=((C_word*)t0)[9],a[7]=((C_word*)t0)[10],a[8]=((C_word*)t0)[11],tmp=(C_word)a,a+=9,tmp);
if(C_truep((C_word)C_i_nullp(((C_word*)((C_word*)t0)[6])[1]))){
t3=t2;
f_21722(t3,C_SCHEME_UNDEFINED);}
else{
t3=(C_word)C_i_car(((C_word*)((C_word*)t0)[6])[1]);
t4=(C_word)C_eqp(t3,lf[389]);
if(C_truep(t4)){
t5=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_21757,a[2]=((C_word*)t0)[5],a[3]=t2,a[4]=((C_word*)t0)[6],a[5]=((C_word*)t0)[3],a[6]=((C_word*)t0)[4],a[7]=((C_word*)t0)[8],tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)((C_word*)t0)[4])[1])){
C_trace("error");
t6=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t6))(4,t6,t5,lf[19],lf[389]);}
else{
t6=t5;
f_21757(2,t6,C_SCHEME_UNDEFINED);}}
else{
t5=(C_word)C_eqp(t3,lf[390]);
if(C_truep(t5)){
t6=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_21792,a[2]=((C_word*)t0)[5],a[3]=t2,a[4]=((C_word*)t0)[6],a[5]=((C_word*)t0)[3],a[6]=((C_word*)t0)[2],a[7]=((C_word*)t0)[7],tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)((C_word*)t0)[2])[1])){
C_trace("error");
t7=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t7))(4,t7,t6,lf[19],lf[390]);}
else{
t7=t6;
f_21792(2,t7,C_SCHEME_UNDEFINED);}}
else{
t6=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_21821,a[2]=t2,a[3]=((C_word*)t0)[2],a[4]=((C_word*)t0)[7],a[5]=((C_word*)t0)[6],tmp=(C_word)a,a+=6,tmp);
if(C_truep(((C_word*)((C_word*)t0)[3])[1])){
C_trace("error");
t7=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t7))(4,t7,t6,lf[10],((C_word*)t0)[5]);}
else{
t7=t6;
f_21821(2,t7,C_SCHEME_UNDEFINED);}}}}}

/* k21819 in k21717 in a21714 in k21708 in parse-graph-item in make-graph in k11783 in k10718 in k10715 in k7274 in k7271 in k6978 in k6975 in k6971 in k6680 in k6677 in k6674 in k6671 */
static void C_ccall f_21821(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_21821,2,t0,t1);}
t2=(C_word)C_i_car(((C_word*)((C_word*)t0)[5])[1]);
t3=C_mutate(((C_word *)((C_word*)t0)[4])+1,t2);
t4=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_21828,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[5],a[4]=((C_word*)t0)[3],tmp=(C_word)a,a+=5,tmp);
t5=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_21836,a[2]=((C_word*)t0)[4],a[3]=t4,tmp=(C_word)a,a+=4,tmp);
C_trace("keyword?");
t6=C_retrieve(lf[13]);
((C_proc3)C_retrieve_proc(t6))(3,t6,t5,((C_word*)((C_word*)t0)[4])[1]);}

/* k21834 in k21819 in k21717 in a21714 in k21708 in parse-graph-item in make-graph in k11783 in k10718 in k10715 in k7274 in k7271 in k6978 in k6975 in k6971 in k6680 in k6677 in k6674 in k6671 */
static void C_ccall f_21836(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
if(C_truep(t1)){
C_trace("error");
t2=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t2))(4,t2,((C_word*)t0)[3],lf[14],((C_word*)((C_word*)t0)[2])[1]);}
else{
t2=((C_word*)t0)[3];
f_21828(2,t2,C_SCHEME_UNDEFINED);}}

/* k21826 in k21819 in k21717 in a21714 in k21708 in parse-graph-item in make-graph in k11783 in k10718 in k10715 in k7274 in k7271 in k6978 in k6975 in k6971 in k6680 in k6677 in k6674 in k6671 */
static void C_ccall f_21828(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word *a;
t2=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[3])[1]);
t4=C_mutate(((C_word *)((C_word*)t0)[3])+1,t3);
t5=((C_word*)t0)[2];
f_21722(t5,t4);}

/* k21790 in k21717 in a21714 in k21708 in parse-graph-item in make-graph in k11783 in k10718 in k10715 in k7274 in k7271 in k6978 in k6975 in k6971 in k6680 in k6677 in k6674 in k6671 */
static void C_ccall f_21792(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_21792,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_21796,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("error");
t4=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[21],((C_word*)t0)[2]);}
else{
t4=t2;
f_21796(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k21794 in k21790 in k21717 in a21714 in k21708 in parse-graph-item in make-graph in k11783 in k10718 in k10715 in k7274 in k7271 in k6978 in k6975 in k6971 in k6680 in k6677 in k6674 in k6671 */
static void C_ccall f_21796(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_21722(t7,t6);}

/* k21755 in k21717 in a21714 in k21708 in parse-graph-item in make-graph in k11783 in k10718 in k10715 in k7274 in k7271 in k6978 in k6975 in k6971 in k6680 in k6677 in k6674 in k6671 */
static void C_ccall f_21757(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_21757,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_21761,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("error");
t4=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[21],((C_word*)t0)[2]);}
else{
t4=t2;
f_21761(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k21759 in k21755 in k21717 in a21714 in k21708 in parse-graph-item in make-graph in k11783 in k10718 in k10715 in k7274 in k7271 in k6978 in k6975 in k6971 in k6680 in k6677 in k6674 in k6671 */
static void C_ccall f_21761(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_21722(t7,t6);}

/* k21720 in k21717 in a21714 in k21708 in parse-graph-item in make-graph in k11783 in k10718 in k10715 in k7274 in k7271 in k6978 in k6975 in k6971 in k6680 in k6677 in k6674 in k6671 */
static void C_fcall f_21722(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_21722,NULL,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_21725,a[2]=((C_word*)t0)[4],a[3]=((C_word*)t0)[5],a[4]=((C_word*)t0)[6],a[5]=((C_word*)t0)[7],a[6]=((C_word*)t0)[8],tmp=(C_word)a,a+=7,tmp);
if(C_truep((C_word)C_i_nullp(((C_word*)((C_word*)t0)[3])[1]))){
t3=t2;
f_21725(2,t3,C_SCHEME_UNDEFINED);}
else{
C_trace("error");
t3=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t3))(4,t3,t2,lf[5],((C_word*)t0)[2]);}}

/* k21723 in k21720 in k21717 in a21714 in k21708 in parse-graph-item in make-graph in k11783 in k10718 in k10715 in k7274 in k7271 in k6978 in k6975 in k6971 in k6680 in k6677 in k6674 in k6671 */
static void C_ccall f_21725(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_21725,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_21728,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],tmp=(C_word)a,a+=7,tmp);
if(C_truep(((C_word*)((C_word*)t0)[2])[1])){
t3=t2;
f_21728(t3,C_SCHEME_UNDEFINED);}
else{
t3=C_mutate(((C_word *)((C_word*)t0)[2])+1,((C_word*)((C_word*)t0)[6])[1]);
t4=t2;
f_21728(t4,t3);}}

/* k21726 in k21723 in k21720 in k21717 in a21714 in k21708 in parse-graph-item in make-graph in k11783 in k10718 in k10715 in k7274 in k7271 in k6978 in k6975 in k6971 in k6680 in k6677 in k6674 in k6671 */
static void C_fcall f_21728(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_21728,NULL,2,t0,t1);}
t2=(C_word)C_a_i_plus(&a,2,((C_word*)((C_word*)t0)[6])[1],C_fix(1));
t3=C_mutate(((C_word *)((C_word*)t0)[6])+1,t2);
t4=((C_word*)t0)[5];
t5=((C_word*)t0)[4];
t6=((C_word*)((C_word*)t0)[3])[1];
t7=((C_word*)((C_word*)t0)[2])[1];
t8=t4;
((C_proc2)(void*)(*((C_word*)t8+1)))(2,t8,(C_word)C_a_i_record(&a,4,lf[386],t5,t6,t7));}

/* k21695 in make-graph in k11783 in k10718 in k10715 in k7274 in k7271 in k6978 in k6975 in k6971 in k6680 in k6677 in k6674 in k6671 */
static void C_ccall f_21697(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[3])+1,t1);
t3=((C_word*)t0)[2];
f_21439(2,t3,t2);}

/* k21437 in make-graph in k11783 in k10718 in k10715 in k7274 in k7271 in k6978 in k6975 in k6971 in k6680 in k6677 in k6674 in k6671 */
static void C_ccall f_21439(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word t14;
C_word t15;
C_word t16;
C_word t17;
C_word t18;
C_word t19;
C_word t20;
C_word t21;
C_word ab[45],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_21439,2,t0,t1);}
t2=C_SCHEME_FALSE;
t3=(*a=C_VECTOR_TYPE|1,a[1]=t2,tmp=(C_word)a,a+=2,tmp);
t4=C_SCHEME_FALSE;
t5=(*a=C_VECTOR_TYPE|1,a[1]=t4,tmp=(C_word)a,a+=2,tmp);
t6=C_SCHEME_FALSE;
t7=(*a=C_VECTOR_TYPE|1,a[1]=t6,tmp=(C_word)a,a+=2,tmp);
t8=C_SCHEME_FALSE;
t9=(*a=C_VECTOR_TYPE|1,a[1]=t8,tmp=(C_word)a,a+=2,tmp);
t10=((C_word*)t0)[4];
t11=(*a=C_VECTOR_TYPE|1,a[1]=t10,tmp=(C_word)a,a+=2,tmp);
t12=C_SCHEME_FALSE;
t13=(*a=C_VECTOR_TYPE|1,a[1]=t12,tmp=(C_word)a,a+=2,tmp);
t14=(*a=C_CLOSURE_TYPE|10,a[1]=(C_word)f_21442,a[2]=t9,a[3]=t13,a[4]=t7,a[5]=((C_word*)t0)[4],a[6]=t11,a[7]=t5,a[8]=t3,a[9]=((C_word*)t0)[2],a[10]=((C_word*)t0)[3],tmp=(C_word)a,a+=11,tmp);
if(C_truep((C_word)C_i_nullp(((C_word*)t11)[1]))){
t15=t14;
f_21442(t15,C_SCHEME_UNDEFINED);}
else{
t15=(C_word)C_i_car(((C_word*)t11)[1]);
t16=(C_word)C_eqp(t15,lf[344]);
if(C_truep(t16)){
t17=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_21602,a[2]=((C_word*)t0)[4],a[3]=t14,a[4]=t11,a[5]=t13,a[6]=t7,a[7]=t3,tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)t7)[1])){
C_trace("ChickenBridge.scm: 379  error");
t18=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t18))(4,t18,t17,lf[19],lf[344]);}
else{
t18=t17;
f_21602(2,t18,C_SCHEME_UNDEFINED);}}
else{
t17=(C_word)C_eqp(t15,lf[345]);
if(C_truep(t17)){
t18=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_21637,a[2]=((C_word*)t0)[4],a[3]=t14,a[4]=t11,a[5]=t13,a[6]=t9,a[7]=t5,tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)t9)[1])){
C_trace("ChickenBridge.scm: 379  error");
t19=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t19))(4,t19,t18,lf[19],lf[345]);}
else{
t19=t18;
f_21637(2,t19,C_SCHEME_UNDEFINED);}}
else{
t18=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_21666,a[2]=t14,a[3]=t7,a[4]=t3,a[5]=t11,tmp=(C_word)a,a+=6,tmp);
if(C_truep(((C_word*)t13)[1])){
C_trace("ChickenBridge.scm: 379  error");
t19=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t19))(4,t19,t18,lf[10],((C_word*)t0)[4]);}
else{
t19=t18;
f_21666(2,t19,C_SCHEME_UNDEFINED);}}}}}

/* k21664 in k21437 in make-graph in k11783 in k10718 in k10715 in k7274 in k7271 in k6978 in k6975 in k6971 in k6680 in k6677 in k6674 in k6671 */
static void C_ccall f_21666(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_21666,2,t0,t1);}
t2=(C_word)C_i_car(((C_word*)((C_word*)t0)[5])[1]);
t3=C_mutate(((C_word *)((C_word*)t0)[4])+1,t2);
t4=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_21673,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[5],a[4]=((C_word*)t0)[3],tmp=(C_word)a,a+=5,tmp);
t5=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_21681,a[2]=((C_word*)t0)[4],a[3]=t4,tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 379  keyword?");
t6=C_retrieve(lf[13]);
((C_proc3)C_retrieve_proc(t6))(3,t6,t5,((C_word*)((C_word*)t0)[4])[1]);}

/* k21679 in k21664 in k21437 in make-graph in k11783 in k10718 in k10715 in k7274 in k7271 in k6978 in k6975 in k6971 in k6680 in k6677 in k6674 in k6671 */
static void C_ccall f_21681(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
if(C_truep(t1)){
C_trace("ChickenBridge.scm: 379  error");
t2=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t2))(4,t2,((C_word*)t0)[3],lf[14],((C_word*)((C_word*)t0)[2])[1]);}
else{
t2=((C_word*)t0)[3];
f_21673(2,t2,C_SCHEME_UNDEFINED);}}

/* k21671 in k21664 in k21437 in make-graph in k11783 in k10718 in k10715 in k7274 in k7271 in k6978 in k6975 in k6971 in k6680 in k6677 in k6674 in k6671 */
static void C_ccall f_21673(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word *a;
t2=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[3])[1]);
t4=C_mutate(((C_word *)((C_word*)t0)[3])+1,t3);
t5=((C_word*)t0)[2];
f_21442(t5,t4);}

/* k21635 in k21437 in make-graph in k11783 in k10718 in k10715 in k7274 in k7271 in k6978 in k6975 in k6971 in k6680 in k6677 in k6674 in k6671 */
static void C_ccall f_21637(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_21637,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_21641,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("ChickenBridge.scm: 379  error");
t4=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[21],((C_word*)t0)[2]);}
else{
t4=t2;
f_21641(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k21639 in k21635 in k21437 in make-graph in k11783 in k10718 in k10715 in k7274 in k7271 in k6978 in k6975 in k6971 in k6680 in k6677 in k6674 in k6671 */
static void C_ccall f_21641(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_21442(t7,t6);}

/* k21600 in k21437 in make-graph in k11783 in k10718 in k10715 in k7274 in k7271 in k6978 in k6975 in k6971 in k6680 in k6677 in k6674 in k6671 */
static void C_ccall f_21602(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_21602,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_21606,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("ChickenBridge.scm: 379  error");
t4=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[21],((C_word*)t0)[2]);}
else{
t4=t2;
f_21606(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k21604 in k21600 in k21437 in make-graph in k11783 in k10718 in k10715 in k7274 in k7271 in k6978 in k6975 in k6971 in k6680 in k6677 in k6674 in k6671 */
static void C_ccall f_21606(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_21442(t7,t6);}

/* k21440 in k21437 in make-graph in k11783 in k10718 in k10715 in k7274 in k7271 in k6978 in k6975 in k6971 in k6680 in k6677 in k6674 in k6671 */
static void C_fcall f_21442(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word ab[30],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_21442,NULL,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_21445,a[2]=((C_word*)t0)[5],a[3]=((C_word*)t0)[6],a[4]=((C_word*)t0)[7],a[5]=((C_word*)t0)[8],a[6]=((C_word*)t0)[9],a[7]=((C_word*)t0)[10],tmp=(C_word)a,a+=8,tmp);
if(C_truep((C_word)C_i_nullp(((C_word*)((C_word*)t0)[6])[1]))){
t3=t2;
f_21445(t3,C_SCHEME_UNDEFINED);}
else{
t3=(C_word)C_i_car(((C_word*)((C_word*)t0)[6])[1]);
t4=(C_word)C_eqp(t3,lf[344]);
if(C_truep(t4)){
t5=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_21502,a[2]=((C_word*)t0)[5],a[3]=t2,a[4]=((C_word*)t0)[6],a[5]=((C_word*)t0)[3],a[6]=((C_word*)t0)[4],a[7]=((C_word*)t0)[8],tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)((C_word*)t0)[4])[1])){
C_trace("ChickenBridge.scm: 379  error");
t6=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t6))(4,t6,t5,lf[19],lf[344]);}
else{
t6=t5;
f_21502(2,t6,C_SCHEME_UNDEFINED);}}
else{
t5=(C_word)C_eqp(t3,lf[345]);
if(C_truep(t5)){
t6=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_21537,a[2]=((C_word*)t0)[5],a[3]=t2,a[4]=((C_word*)t0)[6],a[5]=((C_word*)t0)[3],a[6]=((C_word*)t0)[2],a[7]=((C_word*)t0)[7],tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)((C_word*)t0)[2])[1])){
C_trace("ChickenBridge.scm: 379  error");
t7=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t7))(4,t7,t6,lf[19],lf[345]);}
else{
t7=t6;
f_21537(2,t7,C_SCHEME_UNDEFINED);}}
else{
t6=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_21566,a[2]=t2,a[3]=((C_word*)t0)[2],a[4]=((C_word*)t0)[7],a[5]=((C_word*)t0)[6],tmp=(C_word)a,a+=6,tmp);
if(C_truep(((C_word*)((C_word*)t0)[3])[1])){
C_trace("ChickenBridge.scm: 379  error");
t7=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t7))(4,t7,t6,lf[10],((C_word*)t0)[5]);}
else{
t7=t6;
f_21566(2,t7,C_SCHEME_UNDEFINED);}}}}}

/* k21564 in k21440 in k21437 in make-graph in k11783 in k10718 in k10715 in k7274 in k7271 in k6978 in k6975 in k6971 in k6680 in k6677 in k6674 in k6671 */
static void C_ccall f_21566(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_21566,2,t0,t1);}
t2=(C_word)C_i_car(((C_word*)((C_word*)t0)[5])[1]);
t3=C_mutate(((C_word *)((C_word*)t0)[4])+1,t2);
t4=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_21573,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[5],a[4]=((C_word*)t0)[3],tmp=(C_word)a,a+=5,tmp);
t5=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_21581,a[2]=((C_word*)t0)[4],a[3]=t4,tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 379  keyword?");
t6=C_retrieve(lf[13]);
((C_proc3)C_retrieve_proc(t6))(3,t6,t5,((C_word*)((C_word*)t0)[4])[1]);}

/* k21579 in k21564 in k21440 in k21437 in make-graph in k11783 in k10718 in k10715 in k7274 in k7271 in k6978 in k6975 in k6971 in k6680 in k6677 in k6674 in k6671 */
static void C_ccall f_21581(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
if(C_truep(t1)){
C_trace("ChickenBridge.scm: 379  error");
t2=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t2))(4,t2,((C_word*)t0)[3],lf[14],((C_word*)((C_word*)t0)[2])[1]);}
else{
t2=((C_word*)t0)[3];
f_21573(2,t2,C_SCHEME_UNDEFINED);}}

/* k21571 in k21564 in k21440 in k21437 in make-graph in k11783 in k10718 in k10715 in k7274 in k7271 in k6978 in k6975 in k6971 in k6680 in k6677 in k6674 in k6671 */
static void C_ccall f_21573(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word *a;
t2=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[3])[1]);
t4=C_mutate(((C_word *)((C_word*)t0)[3])+1,t3);
t5=((C_word*)t0)[2];
f_21445(t5,t4);}

/* k21535 in k21440 in k21437 in make-graph in k11783 in k10718 in k10715 in k7274 in k7271 in k6978 in k6975 in k6971 in k6680 in k6677 in k6674 in k6671 */
static void C_ccall f_21537(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_21537,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_21541,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("ChickenBridge.scm: 379  error");
t4=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[21],((C_word*)t0)[2]);}
else{
t4=t2;
f_21541(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k21539 in k21535 in k21440 in k21437 in make-graph in k11783 in k10718 in k10715 in k7274 in k7271 in k6978 in k6975 in k6971 in k6680 in k6677 in k6674 in k6671 */
static void C_ccall f_21541(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_21445(t7,t6);}

/* k21500 in k21440 in k21437 in make-graph in k11783 in k10718 in k10715 in k7274 in k7271 in k6978 in k6975 in k6971 in k6680 in k6677 in k6674 in k6671 */
static void C_ccall f_21502(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_21502,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_21506,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("ChickenBridge.scm: 379  error");
t4=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[21],((C_word*)t0)[2]);}
else{
t4=t2;
f_21506(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k21504 in k21500 in k21440 in k21437 in make-graph in k11783 in k10718 in k10715 in k7274 in k7271 in k6978 in k6975 in k6971 in k6680 in k6677 in k6674 in k6671 */
static void C_ccall f_21506(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_21445(t7,t6);}

/* k21443 in k21440 in k21437 in make-graph in k11783 in k10718 in k10715 in k7274 in k7271 in k6978 in k6975 in k6971 in k6680 in k6677 in k6674 in k6671 */
static void C_fcall f_21445(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[6],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_21445,NULL,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_21448,a[2]=((C_word*)t0)[4],a[3]=((C_word*)t0)[5],a[4]=((C_word*)t0)[6],a[5]=((C_word*)t0)[7],tmp=(C_word)a,a+=6,tmp);
if(C_truep((C_word)C_i_nullp(((C_word*)((C_word*)t0)[3])[1]))){
t3=t2;
f_21448(2,t3,C_SCHEME_UNDEFINED);}
else{
C_trace("ChickenBridge.scm: 379  error");
t3=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t3))(4,t3,t2,lf[5],((C_word*)t0)[2]);}}

/* k21446 in k21443 in k21440 in k21437 in make-graph in k11783 in k10718 in k10715 in k7274 in k7271 in k6978 in k6975 in k6971 in k6680 in k6677 in k6674 in k6671 */
static void C_ccall f_21448(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[6],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_21448,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_21451,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],tmp=(C_word)a,a+=6,tmp);
C_trace("ChickenBridge.scm: 379  %alloc-pattern");
f_15819(t2);}

/* k21449 in k21446 in k21443 in k21440 in k21437 in make-graph in k11783 in k10718 in k10715 in k7274 in k7271 in k6978 in k6975 in k6971 in k6680 in k6677 in k6674 in k6671 */
static void C_ccall f_21451(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[10],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_21451,2,t0,t1);}
t2=(C_word)C_i_length(((C_word*)((C_word*)t0)[5])[1]);
t3=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_21457,a[2]=t1,a[3]=((C_word*)t0)[4],tmp=(C_word)a,a+=4,tmp);
t4=(C_word)C_a_i_cons(&a,2,C_SCHEME_FALSE,((C_word*)((C_word*)t0)[5])[1]);
t5=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_21463,a[2]=((C_word)li307),tmp=(C_word)a,a+=3,tmp);
C_trace("ChickenBridge.scm: 379  initialize-pattern");
f_15829(t3,t1,t4,((C_word*)((C_word*)t0)[3])[1],((C_word*)((C_word*)t0)[2])[1],C_fix(0),t2,t2,C_retrieve2(lf[388],"next-in-graph"),t5);}

/* a21462 in k21449 in k21446 in k21443 in k21440 in k21437 in make-graph in k11783 in k10718 in k10715 in k7274 in k7271 in k6978 in k6975 in k6971 in k6680 in k6677 in k6674 in k6671 */
static void C_ccall f_21463(C_word c,C_word t0,C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word t6;
C_word ab[7],*a=ab;
if(c!=4) C_bad_argc_2(c,4,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr4,(void*)f_21463,4,t0,t1,t2,t3);}
t4=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_21469,a[2]=((C_word)li306),tmp=(C_word)a,a+=3,tmp);
t5=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_21481,a[2]=t4,a[3]=t1,tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 379  pattern-data");
f_15548(t5,t3);}

/* k21479 in a21462 in k21449 in k21446 in k21443 in k21440 in k21437 in make-graph in k11783 in k10718 in k10715 in k7274 in k7271 in k6978 in k6975 in k6971 in k6680 in k6677 in k6674 in k6671 */
static void C_ccall f_21481(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word *a;
t2=(C_word)C_i_cdr(t1);
C_trace("for-each");
t3=*((C_word*)lf[237]+1);
((C_proc4)(void*)(*((C_word*)t3+1)))(4,t3,((C_word*)t0)[3],((C_word*)t0)[2],t2);}

/* a21468 in a21462 in k21449 in k21446 in k21443 in k21440 in k21437 in make-graph in k11783 in k10718 in k10715 in k7274 in k7271 in k6978 in k6975 in k6971 in k6680 in k6677 in k6674 in k6671 */
static void C_ccall f_21469(C_word c,C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word *a;
if(c!=3) C_bad_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr3,(void*)f_21469,3,t0,t1,t2);}
C_trace("ChickenBridge.scm: 379  graph-node-datum");
f_21372(t1,t2);}

/* k21455 in k21449 in k21446 in k21443 in k21440 in k21437 in make-graph in k11783 in k10718 in k10715 in k7274 in k7271 in k6978 in k6975 in k6971 in k6680 in k6677 in k6674 in k6671 */
static void C_ccall f_21457(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
t2=((C_word*)t0)[3];
((C_proc2)(void*)(*((C_word*)t2+1)))(2,t2,((C_word*)t0)[2]);}

/* graph-node-datum in k11783 in k10718 in k10715 in k7274 in k7271 in k6978 in k6975 in k6971 in k6680 in k6677 in k6674 in k6671 */
static void C_fcall f_21372(C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word *a;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_21372,NULL,2,t1,t2);}
t3=(C_word)C_i_check_structure(t2,lf[386]);
t4=t1;
((C_proc2)(void*)(*((C_word*)t4+1)))(2,t4,(C_word)C_i_block_ref(t2,C_fix(1)));}

/* next-in-markov in k11783 in k10718 in k10715 in k7274 in k7271 in k6978 in k6975 in k6971 in k6680 in k6677 in k6674 in k6671 */
static void C_ccall f_21032(C_word c,C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word ab[11],*a=ab;
if(c!=3) C_bad_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr3,(void*)f_21032,3,t0,t1,t2);}
t3=C_SCHEME_UNDEFINED;
t4=(*a=C_VECTOR_TYPE|1,a[1]=t3,tmp=(C_word)a,a+=2,tmp);
t5=C_set_block_item(t4,0,(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_21035,a[2]=t4,a[3]=((C_word)li300),tmp=(C_word)a,a+=4,tmp));
t6=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_21214,a[2]=t1,a[3]=t4,a[4]=t2,tmp=(C_word)a,a+=5,tmp);
C_trace("ChickenBridge.scm: 379  pattern-data");
f_15548(t6,t2);}

/* k21212 in next-in-markov in k11783 in k10718 in k10715 in k7274 in k7271 in k6978 in k6975 in k6971 in k6680 in k6677 in k6674 in k6671 */
static void C_ccall f_21214(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[6],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_21214,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_21218,a[2]=t1,a[3]=((C_word*)t0)[2],a[4]=((C_word*)t0)[3],a[5]=((C_word*)t0)[4],tmp=(C_word)a,a+=6,tmp);
C_trace("ChickenBridge.scm: 379  pattern-cache");
f_15764(t2,((C_word*)t0)[4]);}

/* k21216 in k21212 in next-in-markov in k11783 in k10718 in k10715 in k7274 in k7271 in k6978 in k6975 in k6971 in k6680 in k6677 in k6674 in k6671 */
static void C_ccall f_21218(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[8],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_21218,2,t0,t1);}
t2=C_SCHEME_UNDEFINED;
t3=(*a=C_VECTOR_TYPE|1,a[1]=t2,tmp=(C_word)a,a+=2,tmp);
t4=C_set_block_item(t3,0,(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_21220,a[2]=t3,a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word)li303),tmp=(C_word)a,a+=6,tmp));
t5=((C_word*)t3)[1];
f_21220(t5,((C_word*)t0)[3],((C_word*)t0)[2],t1,C_SCHEME_FALSE);}

/* do2749 in k21216 in k21212 in next-in-markov in k11783 in k10718 in k10715 in k7274 in k7271 in k6978 in k6975 in k6971 in k6680 in k6677 in k6674 in k6671 */
static void C_fcall f_21220(C_word t0,C_word t1,C_word t2,C_word t3,C_word t4){
C_word tmp;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word t14;
C_word t15;
C_word ab[17],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_21220,NULL,5,t0,t1,t2,t3,t4);}
t5=(*a=C_VECTOR_TYPE|1,a[1]=t4,tmp=(C_word)a,a+=2,tmp);
t6=(C_word)C_i_nullp(t2);
t7=(*a=C_CLOSURE_TYPE|8,a[1]=(C_word)f_21230,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=t2,a[5]=((C_word*)t0)[4],a[6]=t3,a[7]=t1,a[8]=t5,tmp=(C_word)a,a+=9,tmp);
if(C_truep(t6)){
t8=t7;
f_21230(2,t8,t6);}
else{
t8=(C_word)C_i_nullp(t3);
if(C_truep(t8)){
t9=t7;
f_21230(2,t9,t8);}
else{
t9=(C_word)C_i_car(t2);
t10=(C_word)C_i_car(t9);
t11=t3;
t12=C_SCHEME_UNDEFINED;
t13=(*a=C_VECTOR_TYPE|1,a[1]=t12,tmp=(C_word)a,a+=2,tmp);
t14=C_set_block_item(t13,0,(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_21145,a[2]=t13,a[3]=((C_word)li302),tmp=(C_word)a,a+=4,tmp));
t15=((C_word*)t13)[1];
f_21145(t15,t7,t10,t11,C_SCHEME_TRUE);}}}

/* do2734 in do2749 in k21216 in k21212 in next-in-markov in k11783 in k10718 in k10715 in k7274 in k7271 in k6978 in k6975 in k6971 in k6680 in k6677 in k6674 in k6671 */
static void C_fcall f_21145(C_word t0,C_word t1,C_word t2,C_word t3,C_word t4){
C_word tmp;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_21145,NULL,5,t0,t1,t2,t3,t4);}
t5=(*a=C_VECTOR_TYPE|1,a[1]=t4,tmp=(C_word)a,a+=2,tmp);
t6=(C_word)C_i_nullp(t2);
t7=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_21155,a[2]=((C_word*)t0)[2],a[3]=t3,a[4]=t2,a[5]=t5,a[6]=t1,tmp=(C_word)a,a+=7,tmp);
if(C_truep(t6)){
t8=t7;
f_21155(t8,t6);}
else{
t8=(C_word)C_i_nullp(t3);
t9=t7;
f_21155(t9,(C_truep(t8)?t8:(C_word)C_i_not(((C_word*)t5)[1])));}}

/* k21153 in do2734 in do2749 in k21216 in k21212 in next-in-markov in k11783 in k10718 in k10715 in k7274 in k7271 in k6978 in k6975 in k6971 in k6680 in k6677 in k6674 in k6671 */
static void C_fcall f_21155(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_21155,NULL,2,t0,t1);}
if(C_truep(t1)){
t2=((C_word*)t0)[6];
((C_proc2)(void*)(*((C_word*)t2+1)))(2,t2,((C_word*)((C_word*)t0)[5])[1]);}
else{
t2=(C_word)C_i_car(((C_word*)t0)[4]);
t3=(C_word)C_eqp(t2,lf[129]);
t4=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_21162,a[2]=((C_word*)t0)[6],a[3]=((C_word*)t0)[2],a[4]=((C_word*)t0)[3],a[5]=((C_word*)t0)[4],a[6]=((C_word*)t0)[5],tmp=(C_word)a,a+=7,tmp);
if(C_truep(t3)){
t5=t4;
f_21162(t5,t3);}
else{
t5=(C_word)C_i_car(((C_word*)t0)[4]);
t6=(C_word)C_i_car(((C_word*)t0)[3]);
t7=(C_word)C_i_equalp(t5,t6);
if(C_truep(t7)){
t8=t4;
f_21162(t8,t7);}
else{
t8=(C_word)C_i_car(((C_word*)t0)[3]);
t9=t4;
f_21162(t9,(C_word)C_eqp(t8,lf[129]));}}}}

/* k21160 in k21153 in do2734 in do2749 in k21216 in k21212 in next-in-markov in k11783 in k10718 in k10715 in k7274 in k7271 in k6978 in k6975 in k6971 in k6680 in k6677 in k6674 in k6671 */
static void C_fcall f_21162(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=(C_word)C_i_cdr(((C_word*)t0)[5]);
t4=(C_word)C_i_cdr(((C_word*)t0)[4]);
t5=((C_word*)((C_word*)t0)[3])[1];
f_21145(t5,((C_word*)t0)[2],t3,t4,((C_word*)((C_word*)t0)[6])[1]);}

/* k21228 in do2749 in k21216 in k21212 in next-in-markov in k11783 in k10718 in k10715 in k7274 in k7271 in k6978 in k6975 in k6971 in k6680 in k6677 in k6674 in k6671 */
static void C_ccall f_21230(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[8],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_21230,2,t0,t1);}
if(C_truep(t1)){
t2=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_21233,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],a[7]=((C_word*)t0)[8],tmp=(C_word)a,a+=8,tmp);
if(C_truep((C_word)C_i_nullp(((C_word*)t0)[4]))){
C_trace("ChickenBridge.scm: 379  error");
t3=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t3))(4,t3,t2,lf[384],((C_word*)t0)[6]);}
else{
t3=t2;
f_21233(2,t3,C_SCHEME_UNDEFINED);}}
else{
t2=(C_word)C_i_cdr(((C_word*)t0)[4]);
t3=((C_word*)((C_word*)t0)[2])[1];
f_21220(t3,((C_word*)t0)[7],t2,((C_word*)t0)[6],((C_word*)((C_word*)t0)[8])[1]);}}

/* k21231 in k21228 in do2749 in k21216 in k21212 in next-in-markov in k11783 in k10718 in k10715 in k7274 in k7271 in k6978 in k6975 in k6971 in k6680 in k6677 in k6674 in k6671 */
static void C_ccall f_21233(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word ab[6],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_21233,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_21237,a[2]=((C_word*)t0)[4],a[3]=((C_word*)t0)[5],a[4]=((C_word*)t0)[6],a[5]=((C_word*)t0)[7],tmp=(C_word)a,a+=6,tmp);
t3=(C_word)C_i_car(((C_word*)t0)[3]);
t4=(C_word)C_i_cadr(t3);
t5=(C_word)C_i_car(((C_word*)t0)[3]);
t6=(C_word)C_i_cddr(t5);
C_trace("ChickenBridge.scm: 379  select-output");
t7=((C_word*)((C_word*)t0)[2])[1];
f_21035(t7,t2,t4,t6);}

/* k21235 in k21231 in k21228 in do2749 in k21216 in k21212 in next-in-markov in k11783 in k10718 in k10715 in k7274 in k7271 in k6978 in k6975 in k6971 in k6680 in k6677 in k6674 in k6671 */
static void C_ccall f_21237(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word ab[13],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_21237,2,t0,t1);}
t2=C_mutate(((C_word *)((C_word*)t0)[5])+1,t1);
t3=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_21240,a[2]=((C_word*)t0)[5],a[3]=((C_word*)t0)[4],tmp=(C_word)a,a+=4,tmp);
if(C_truep((C_word)C_i_nullp(((C_word*)t0)[3]))){
t4=t3;
f_21240(2,t4,C_SCHEME_UNDEFINED);}
else{
t4=(C_word)C_i_cdr(((C_word*)t0)[3]);
if(C_truep((C_word)C_i_nullp(t4))){
t5=t3;
f_21240(2,t5,(C_word)C_i_set_car(((C_word*)t0)[3],((C_word*)((C_word*)t0)[5])[1]));}
else{
t5=C_SCHEME_UNDEFINED;
t6=(*a=C_VECTOR_TYPE|1,a[1]=t5,tmp=(C_word)a,a+=2,tmp);
t7=C_set_block_item(t6,0,(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_21257,a[2]=t6,a[3]=((C_word*)t0)[2],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[3],a[6]=((C_word)li301),tmp=(C_word)a,a+=7,tmp));
t8=((C_word*)t6)[1];
f_21257(t8,t3,((C_word*)t0)[3]);}}}

/* do2758 in k21235 in k21231 in k21228 in do2749 in k21216 in k21212 in next-in-markov in k11783 in k10718 in k10715 in k7274 in k7271 in k6978 in k6975 in k6971 in k6680 in k6677 in k6674 in k6671 */
static void C_fcall f_21257(C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word *a;
loop:
a=C_alloc(4);
C_check_for_interrupt;
if(!C_stack_probe(a)){
C_save_and_reclaim((void*)trf_21257,NULL,3,t0,t1,t2);}
t3=(C_word)C_i_cdr(t2);
if(C_truep((C_word)C_i_nullp(t3))){
t4=(C_word)C_i_set_car(((C_word*)t0)[5],((C_word*)((C_word*)t0)[4])[1]);
t5=(C_word)C_i_set_cdr(t2,((C_word*)t0)[5]);
t6=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_21273,a[2]=t1,a[3]=t2,tmp=(C_word)a,a+=4,tmp);
t7=(C_word)C_i_cdr(((C_word*)t0)[5]);
C_trace("ChickenBridge.scm: 379  pattern-cache-set!");
f_15755(t6,((C_word*)t0)[3],t7);}
else{
t4=(C_word)C_i_cdr(t2);
t10=t1;
t11=t4;
t1=t10;
t2=t11;
goto loop;}}

/* k21271 in do2758 in k21235 in k21231 in k21228 in do2749 in k21216 in k21212 in next-in-markov in k11783 in k10718 in k10715 in k7274 in k7271 in k6978 in k6975 in k6971 in k6680 in k6677 in k6674 in k6671 */
static void C_ccall f_21273(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word *a;
t2=(C_word)C_i_cdr(((C_word*)t0)[3]);
t3=((C_word*)t0)[2];
((C_proc2)(void*)(*((C_word*)t3+1)))(2,t3,(C_word)C_i_set_cdr(t2,C_SCHEME_END_OF_LIST));}

/* k21238 in k21235 in k21231 in k21228 in do2749 in k21216 in k21212 in next-in-markov in k11783 in k10718 in k10715 in k7274 in k7271 in k6978 in k6975 in k6971 in k6680 in k6677 in k6674 in k6671 */
static void C_ccall f_21240(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
t2=((C_word*)t0)[3];
((C_proc2)(void*)(*((C_word*)t2+1)))(2,t2,((C_word*)((C_word*)t0)[2])[1]);}

/* select-output in next-in-markov in k11783 in k10718 in k10715 in k7274 in k7271 in k6978 in k6975 in k6971 in k6680 in k6677 in k6674 in k6671 */
static void C_fcall f_21035(C_word t0,C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word ab[12],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_21035,NULL,4,t0,t1,t2,t3);}
t4=t2;
if(C_truep(t4)){
t5=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_21103,a[2]=t3,a[3]=t1,tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 379  tb:ranf");
f_8362(t5,t2);}
else{
t5=C_SCHEME_UNDEFINED;
t6=(*a=C_VECTOR_TYPE|1,a[1]=t5,tmp=(C_word)a,a+=2,tmp);
t7=C_set_block_item(t6,0,(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_21047,a[2]=t6,a[3]=t3,a[4]=((C_word*)t0)[2],a[5]=((C_word)li299),tmp=(C_word)a,a+=6,tmp));
t8=((C_word*)t6)[1];
f_21047(t8,t1,t3,C_SCHEME_FALSE,C_fix(0));}}

/* do2718 in select-output in next-in-markov in k11783 in k10718 in k10715 in k7274 in k7271 in k6978 in k6975 in k6971 in k6680 in k6677 in k6674 in k6671 */
static void C_fcall f_21047(C_word t0,C_word t1,C_word t2,C_word t3,C_word t4){
C_word tmp;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word ab[11],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_21047,NULL,5,t0,t1,t2,t3,t4);}
t5=(*a=C_VECTOR_TYPE|1,a[1]=t3,tmp=(C_word)a,a+=2,tmp);
t6=(*a=C_VECTOR_TYPE|1,a[1]=t4,tmp=(C_word)a,a+=2,tmp);
if(C_truep((C_word)C_i_nullp(t2))){
C_trace("ChickenBridge.scm: 379  select-output");
t7=((C_word*)((C_word*)t0)[4])[1];
f_21035(t7,t1,((C_word*)t6)[1],((C_word*)t0)[3]);}
else{
t7=(C_word)C_i_car(t2);
t8=C_set_block_item(t5,0,t7);
t9=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_21083,a[2]=t1,a[3]=((C_word*)t0)[2],a[4]=t2,a[5]=t5,a[6]=t6,tmp=(C_word)a,a+=7,tmp);
t10=(C_word)C_i_caddr(((C_word*)t5)[1]);
if(C_truep((C_word)C_i_numberp(t10))){
t11=t9;
f_21083(2,t11,(C_word)C_i_caddr(((C_word*)t5)[1]));}
else{
t11=(C_word)C_i_caddr(((C_word*)t5)[1]);
C_trace("ChickenBridge.scm: 379  next-1");
f_16170(t9,t11);}}}

/* k21081 in do2718 in select-output in next-in-markov in k11783 in k10718 in k10715 in k7274 in k7271 in k6978 in k6975 in k6971 in k6680 in k6677 in k6674 in k6671 */
static void C_ccall f_21083(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word ab[4],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_21083,2,t0,t1);}
t2=(C_word)C_a_i_plus(&a,2,((C_word*)((C_word*)t0)[6])[1],t1);
t3=C_mutate(((C_word *)((C_word*)t0)[6])+1,t2);
t4=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[5])[1]);
t5=(C_word)C_i_set_car(t4,((C_word*)((C_word*)t0)[6])[1]);
t6=(C_word)C_i_cdr(((C_word*)t0)[4]);
t7=((C_word*)((C_word*)t0)[3])[1];
f_21047(t7,((C_word*)t0)[2],t6,((C_word*)((C_word*)t0)[5])[1],((C_word*)((C_word*)t0)[6])[1]);}

/* k21101 in select-output in next-in-markov in k11783 in k10718 in k10715 in k7274 in k7271 in k6978 in k6975 in k6971 in k6680 in k6677 in k6674 in k6671 */
static void C_ccall f_21103(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_21103,2,t0,t1);}
t2=C_SCHEME_UNDEFINED;
t3=(*a=C_VECTOR_TYPE|1,a[1]=t2,tmp=(C_word)a,a+=2,tmp);
t4=C_set_block_item(t3,0,(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_21108,a[2]=t3,a[3]=t1,a[4]=((C_word)li298),tmp=(C_word)a,a+=5,tmp));
t5=((C_word*)t3)[1];
f_21108(t5,((C_word*)t0)[3],((C_word*)t0)[2]);}

/* do2728 in k21101 in select-output in next-in-markov in k11783 in k10718 in k10715 in k7274 in k7271 in k6978 in k6975 in k6971 in k6680 in k6677 in k6674 in k6671 */
static void C_fcall f_21108(C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word *a;
loop:
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_21108,NULL,3,t0,t1,t2);}
t3=(C_word)C_i_car(t2);
t4=(C_word)C_i_cadr(t3);
if(C_truep((C_word)C_i_lessp(((C_word*)t0)[3],t4))){
t5=(C_word)C_i_car(t2);
t6=t1;
((C_proc2)(void*)(*((C_word*)t6+1)))(2,t6,(C_word)C_i_car(t5));}
else{
t5=(C_word)C_i_cdr(t2);
t8=t1;
t9=t5;
t1=t8;
t2=t9;
goto loop;}}

/* make-markov in k11783 in k10718 in k10715 in k7274 in k7271 in k6978 in k6975 in k6971 in k6680 in k6677 in k6674 in k6671 */
static void C_ccall f_20545(C_word c,C_word t0,C_word t1,C_word t2,...){
C_word tmp;
C_word t3;
va_list v;
C_word *a,c2=c;
C_save_rest(t2,c2,3);
if(c<3) C_bad_min_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_demand(c*C_SIZEOF_PAIR+22)){
C_save_and_reclaim((void*)tr3r,(void*)f_20545r,3,t0,t1,t2);}
else{
a=C_alloc((c-3)*3);
t3=C_restore_rest(a,C_rest_count(0));
f_20545r(t0,t1,t2,t3);}}

static void C_ccall f_20545r(C_word t0,C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word *a=C_alloc(22);
t4=(*a=C_VECTOR_TYPE|1,a[1]=t2,tmp=(C_word)a,a+=2,tmp);
t5=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_20549,a[2]=t1,a[3]=t4,a[4]=t3,tmp=(C_word)a,a+=5,tmp);
if(C_truep((C_word)C_i_pairp(((C_word*)t4)[1]))){
t6=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_21026,a[2]=t5,a[3]=t4,tmp=(C_word)a,a+=4,tmp);
t7=((C_word*)t4)[1];
t8=(C_word)C_a_i_list(&a,1,C_SCHEME_FALSE);
t9=C_SCHEME_UNDEFINED;
t10=(*a=C_VECTOR_TYPE|1,a[1]=t9,tmp=(C_word)a,a+=2,tmp);
t11=C_set_block_item(t10,0,(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_20472,a[2]=t7,a[3]=t10,a[4]=t8,a[5]=((C_word)li296),tmp=(C_word)a,a+=6,tmp));
t12=((C_word*)t10)[1];
f_20472(t12,t6,t7,C_SCHEME_FALSE,t8,C_SCHEME_FALSE);}
else{
C_trace("ChickenBridge.scm: 379  error");
t6=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t6))(4,t6,t5,lf[383],((C_word*)t4)[1]);}}

/* do2619 in make-markov in k11783 in k10718 in k10715 in k7274 in k7271 in k6978 in k6975 in k6971 in k6680 in k6677 in k6674 in k6671 */
static void C_fcall f_20472(C_word t0,C_word t1,C_word t2,C_word t3,C_word t4,C_word t5){
C_word tmp;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word ab[18],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_20472,NULL,6,t0,t1,t2,t3,t4,t5);}
t6=(*a=C_VECTOR_TYPE|1,a[1]=t3,tmp=(C_word)a,a+=2,tmp);
t7=(*a=C_VECTOR_TYPE|1,a[1]=t4,tmp=(C_word)a,a+=2,tmp);
t8=(*a=C_VECTOR_TYPE|1,a[1]=t5,tmp=(C_word)a,a+=2,tmp);
if(C_truep((C_word)C_i_nullp(t2))){
t9=t1;
((C_proc2)(void*)(*((C_word*)t9+1)))(2,t9,(C_word)C_i_cdr(((C_word*)t0)[4]));}
else{
t9=(C_word)C_i_car(t2);
t10=t9;
t11=(*a=C_VECTOR_TYPE|1,a[1]=t10,tmp=(C_word)a,a+=2,tmp);
t12=(*a=C_CLOSURE_TYPE|9,a[1]=(C_word)f_20317,a[2]=((C_word*)t0)[2],a[3]=t6,a[4]=t1,a[5]=((C_word*)t0)[3],a[6]=t2,a[7]=t7,a[8]=t8,a[9]=t11,tmp=(C_word)a,a+=10,tmp);
if(C_truep((C_word)C_i_pairp(((C_word*)t11)[1]))){
t13=t12;
f_20317(2,t13,C_SCHEME_UNDEFINED);}
else{
C_trace("ChickenBridge.scm: 379  error");
t13=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t13))(4,t13,t12,lf[382],((C_word*)t11)[1]);}}}

/* k20315 in do2619 in make-markov in k11783 in k10718 in k10715 in k7274 in k7271 in k6978 in k6975 in k6971 in k6680 in k6677 in k6674 in k6671 */
static void C_ccall f_20317(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[10],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_20317,2,t0,t1);}
t2=(C_word)C_i_member(lf[378],((C_word*)((C_word*)t0)[9])[1]);
t3=(*a=C_CLOSURE_TYPE|9,a[1]=(C_word)f_20323,a[2]=((C_word*)t0)[9],a[3]=((C_word*)t0)[2],a[4]=((C_word*)t0)[3],a[5]=((C_word*)t0)[4],a[6]=((C_word*)t0)[5],a[7]=((C_word*)t0)[6],a[8]=((C_word*)t0)[7],a[9]=((C_word*)t0)[8],tmp=(C_word)a,a+=10,tmp);
if(C_truep(t2)){
t4=t3;
f_20323(2,t4,t2);}
else{
t4=(C_word)C_i_member(lf[380],((C_word*)((C_word*)t0)[9])[1]);
if(C_truep(t4)){
t5=t3;
f_20323(2,t5,t4);}
else{
C_trace("ChickenBridge.scm: 379  error");
t5=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t5))(4,t5,t3,lf[381],((C_word*)((C_word*)t0)[9])[1]);}}}

/* k20321 in k20315 in do2619 in make-markov in k11783 in k10718 in k10715 in k7274 in k7271 in k6978 in k6975 in k6971 in k6680 in k6677 in k6674 in k6671 */
static void C_ccall f_20323(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word t14;
C_word t15;
C_word t16;
C_word t17;
C_word ab[37],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_20323,2,t0,t1);}
t2=t1;
t3=(*a=C_VECTOR_TYPE|1,a[1]=t2,tmp=(C_word)a,a+=2,tmp);
t4=C_SCHEME_END_OF_LIST;
t5=(*a=C_VECTOR_TYPE|1,a[1]=t4,tmp=(C_word)a,a+=2,tmp);
t6=C_fix(0);
t7=(*a=C_VECTOR_TYPE|1,a[1]=t6,tmp=(C_word)a,a+=2,tmp);
t8=C_SCHEME_END_OF_LIST;
t9=(*a=C_VECTOR_TYPE|1,a[1]=t8,tmp=(C_word)a,a+=2,tmp);
t10=(C_word)C_a_i_list(&a,1,C_SCHEME_FALSE);
t11=t10;
t12=(*a=C_VECTOR_TYPE|1,a[1]=t11,tmp=(C_word)a,a+=2,tmp);
t13=(*a=C_CLOSURE_TYPE|12,a[1]=(C_word)f_20335,a[2]=t3,a[3]=t9,a[4]=((C_word*)t0)[3],a[5]=((C_word*)t0)[4],a[6]=((C_word*)t0)[5],a[7]=((C_word*)t0)[6],a[8]=((C_word*)t0)[7],a[9]=((C_word*)t0)[8],a[10]=((C_word*)t0)[9],a[11]=t5,a[12]=t7,tmp=(C_word)a,a+=13,tmp);
t14=C_SCHEME_UNDEFINED;
t15=(*a=C_VECTOR_TYPE|1,a[1]=t14,tmp=(C_word)a,a+=2,tmp);
t16=C_set_block_item(t15,0,(*a=C_CLOSURE_TYPE|8,a[1]=(C_word)f_20408,a[2]=t15,a[3]=t12,a[4]=t5,a[5]=t10,a[6]=t3,a[7]=((C_word*)t0)[2],a[8]=((C_word)li295),tmp=(C_word)a,a+=9,tmp));
t17=((C_word*)t15)[1];
f_20408(t17,t13);}

/* do2597 in k20321 in k20315 in do2619 in make-markov in k11783 in k10718 in k10715 in k7274 in k7271 in k6978 in k6975 in k6971 in k6680 in k6677 in k6674 in k6671 */
static void C_fcall f_20408(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word t14;
C_word t15;
C_word *a;
loop:
a=C_alloc(3);
C_check_for_interrupt;
if(!C_stack_probe(a)){
C_save_and_reclaim((void*)trf_20408,NULL,2,t0,t1);}
t2=(C_word)C_eqp(((C_word*)((C_word*)t0)[7])[1],((C_word*)((C_word*)t0)[6])[1]);
if(C_truep(t2)){
t3=(C_word)C_i_cdr(((C_word*)t0)[5]);
t4=C_mutate(((C_word *)((C_word*)t0)[4])+1,t3);
t5=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[6])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[6])+1,t5);
t7=t1;
((C_proc2)(void*)(*((C_word*)t7+1)))(2,t7,t6);}
else{
t3=(C_word)C_i_car(((C_word*)((C_word*)t0)[7])[1]);
t4=(C_word)C_a_i_list(&a,1,t3);
t5=(C_word)C_i_set_cdr(((C_word*)((C_word*)t0)[3])[1],t4);
t6=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[3])[1]);
t7=C_mutate(((C_word *)((C_word*)t0)[3])+1,t6);
t8=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[7])[1]);
t9=C_mutate(((C_word *)((C_word*)t0)[7])+1,t8);
t15=t1;
t1=t15;
goto loop;}}

/* k20333 in k20321 in k20315 in do2619 in make-markov in k11783 in k10718 in k10715 in k7274 in k7271 in k6978 in k6975 in k6971 in k6680 in k6677 in k6674 in k6671 */
static void C_ccall f_20335(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[17],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_20335,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|11,a[1]=(C_word)f_20338,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],a[7]=((C_word*)t0)[8],a[8]=((C_word*)t0)[9],a[9]=((C_word*)t0)[10],a[10]=((C_word*)t0)[11],a[11]=((C_word*)t0)[12],tmp=(C_word)a,a+=12,tmp);
t3=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_20351,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[12],a[4]=((C_word)li294),tmp=(C_word)a,a+=5,tmp);
C_trace("for-each");
t4=*((C_word*)lf[237]+1);
((C_proc4)(void*)(*((C_word*)t4+1)))(4,t4,t2,t3,((C_word*)((C_word*)t0)[2])[1]);}

/* a20350 in k20333 in k20321 in k20315 in do2619 in make-markov in k11783 in k10718 in k10715 in k7274 in k7271 in k6978 in k6975 in k6971 in k6680 in k6677 in k6674 in k6671 */
static void C_ccall f_20351(C_word c,C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word t14;
C_word t15;
C_word t16;
C_word t17;
C_word t18;
C_word t19;
C_word t20;
C_word t21;
C_word ab[14],*a=ab;
if(c!=3) C_bad_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr3,(void*)f_20351,3,t0,t1,t2);}
t3=C_SCHEME_FALSE;
t4=(*a=C_VECTOR_TYPE|1,a[1]=t3,tmp=(C_word)a,a+=2,tmp);
t5=C_SCHEME_FALSE;
t6=(*a=C_VECTOR_TYPE|1,a[1]=t5,tmp=(C_word)a,a+=2,tmp);
t7=C_SCHEME_FALSE;
t8=(*a=C_VECTOR_TYPE|1,a[1]=t7,tmp=(C_word)a,a+=2,tmp);
t9=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_20355,a[2]=t8,a[3]=t1,a[4]=((C_word*)t0)[2],a[5]=t6,a[6]=((C_word*)t0)[3],a[7]=t4,tmp=(C_word)a,a+=8,tmp);
if(C_truep((C_word)C_i_pairp(t2))){
t10=(C_word)C_i_car(t2);
t11=C_set_block_item(t4,0,t10);
t12=(C_word)C_i_cdr(t2);
t13=(C_word)C_i_nullp(t12);
t14=(C_truep(t13)?C_fix(1):(C_word)C_i_cadr(t2));
t15=C_set_block_item(t8,0,t14);
t16=C_set_block_item(t6,0,((C_word*)t8)[1]);
if(C_truep((C_word)C_i_numberp(((C_word*)t8)[1]))){
t17=t9;
f_20355(t17,C_SCHEME_UNDEFINED);}
else{
t17=C_set_block_item(t8,0,C_SCHEME_FALSE);
t18=t9;
f_20355(t18,t17);}}
else{
t10=C_set_block_item(t4,0,t2);
t11=C_set_block_item(t8,0,C_fix(1));
t12=C_set_block_item(t6,0,C_fix(1));
t13=t9;
f_20355(t13,t12);}}

/* k20353 in a20350 in k20333 in k20321 in k20315 in do2619 in make-markov in k11783 in k10718 in k10715 in k7274 in k7271 in k6978 in k6975 in k6971 in k6680 in k6677 in k6674 in k6671 */
static void C_fcall f_20355(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word ab[11],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_20355,NULL,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_20358,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_truep(((C_word*)((C_word*)t0)[2])[1])?((C_word*)((C_word*)t0)[6])[1]:C_SCHEME_FALSE);
if(C_truep(t3)){
t4=(C_word)C_a_i_plus(&a,2,((C_word*)((C_word*)t0)[6])[1],((C_word*)((C_word*)t0)[2])[1]);
t5=C_mutate(((C_word *)((C_word*)t0)[6])+1,t4);
t6=t2;
f_20358(t6,t5);}
else{
t4=C_set_block_item(((C_word*)t0)[6],0,C_SCHEME_FALSE);
t5=t2;
f_20358(t5,t4);}}

/* k20356 in k20353 in a20350 in k20333 in k20321 in k20315 in do2619 in make-markov in k11783 in k10718 in k10715 in k7274 in k7271 in k6978 in k6975 in k6971 in k6680 in k6677 in k6674 in k6671 */
static void C_fcall f_20358(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[12],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_20358,NULL,2,t0,t1);}
t2=(C_word)C_a_i_list(&a,3,((C_word*)((C_word*)t0)[6])[1],((C_word*)((C_word*)t0)[5])[1],((C_word*)((C_word*)t0)[4])[1]);
t3=(C_word)C_a_i_cons(&a,2,t2,((C_word*)((C_word*)t0)[3])[1]);
t4=C_mutate(((C_word *)((C_word*)t0)[3])+1,t3);
t5=((C_word*)t0)[2];
((C_proc2)(void*)(*((C_word*)t5+1)))(2,t5,t4);}

/* k20336 in k20333 in k20321 in k20315 in do2619 in make-markov in k11783 in k10718 in k10715 in k7274 in k7271 in k6978 in k6975 in k6971 in k6680 in k6677 in k6674 in k6671 */
static void C_ccall f_20338(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[11],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_20338,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|10,a[1]=(C_word)f_20349,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],a[7]=((C_word*)t0)[8],a[8]=((C_word*)t0)[9],a[9]=((C_word*)t0)[10],a[10]=((C_word*)t0)[11],tmp=(C_word)a,a+=11,tmp);
C_trace("ChickenBridge.scm: 379  reverse");
t3=*((C_word*)lf[216]+1);
((C_proc3)C_retrieve_proc(t3))(3,t3,t2,((C_word*)((C_word*)t0)[2])[1]);}

/* k20347 in k20336 in k20333 in k20321 in k20315 in do2619 in make-markov in k11783 in k10718 in k10715 in k7274 in k7271 in k6978 in k6975 in k6971 in k6680 in k6677 in k6674 in k6671 */
static void C_ccall f_20349(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word ab[14],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_20349,2,t0,t1);}
t2=(C_word)C_a_i_cons(&a,2,((C_word*)((C_word*)t0)[10])[1],t1);
t3=(C_word)C_a_i_cons(&a,2,((C_word*)((C_word*)t0)[9])[1],t2);
t4=C_mutate(((C_word *)((C_word*)t0)[8])+1,t3);
t5=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_20489,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],a[7]=((C_word*)t0)[8],tmp=(C_word)a,a+=8,tmp);
t6=((C_word*)((C_word*)t0)[3])[1];
if(C_truep(t6)){
t7=(C_word)C_i_car(((C_word*)((C_word*)t0)[8])[1]);
t8=(C_word)C_i_length(t7);
if(C_truep((C_word)C_i_nequalp(((C_word*)((C_word*)t0)[3])[1],t8))){
t9=t5;
f_20489(2,t9,C_SCHEME_UNDEFINED);}
else{
C_trace("ChickenBridge.scm: 379  error");
t9=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t9))(4,t9,t5,lf[379],((C_word*)t0)[2]);}}
else{
t7=(C_word)C_i_car(((C_word*)((C_word*)t0)[8])[1]);
t8=(C_word)C_i_length(t7);
t9=C_mutate(((C_word *)((C_word*)t0)[3])+1,t8);
t10=t5;
f_20489(2,t10,t9);}}

/* k20487 in k20347 in k20336 in k20333 in k20321 in k20315 in do2619 in make-markov in k11783 in k10718 in k10715 in k7274 in k7271 in k6978 in k6975 in k6971 in k6680 in k6677 in k6674 in k6671 */
static void C_ccall f_20489(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word ab[3],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_20489,2,t0,t1);}
t2=(C_word)C_a_i_list(&a,1,((C_word*)((C_word*)t0)[7])[1]);
t3=(C_word)C_i_set_cdr(((C_word*)((C_word*)t0)[6])[1],t2);
t4=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[6])[1]);
t5=C_mutate(((C_word *)((C_word*)t0)[6])+1,t4);
t6=(C_word)C_i_cdr(((C_word*)t0)[5]);
t7=((C_word*)((C_word*)t0)[4])[1];
f_20472(t7,((C_word*)t0)[3],t6,((C_word*)((C_word*)t0)[2])[1],((C_word*)((C_word*)t0)[6])[1],((C_word*)((C_word*)t0)[7])[1]);}

/* k21024 in make-markov in k11783 in k10718 in k10715 in k7274 in k7271 in k6978 in k6975 in k6971 in k6680 in k6677 in k6674 in k6671 */
static void C_ccall f_21026(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[3])+1,t1);
t3=((C_word*)t0)[2];
f_20549(2,t3,t2);}

/* k20547 in make-markov in k11783 in k10718 in k10715 in k7274 in k7271 in k6978 in k6975 in k6971 in k6680 in k6677 in k6674 in k6671 */
static void C_ccall f_20549(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word t14;
C_word t15;
C_word t16;
C_word t17;
C_word t18;
C_word t19;
C_word t20;
C_word t21;
C_word t22;
C_word t23;
C_word t24;
C_word t25;
C_word t26;
C_word t27;
C_word ab[59],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_20549,2,t0,t1);}
t2=C_SCHEME_FALSE;
t3=(*a=C_VECTOR_TYPE|1,a[1]=t2,tmp=(C_word)a,a+=2,tmp);
t4=C_SCHEME_FALSE;
t5=(*a=C_VECTOR_TYPE|1,a[1]=t4,tmp=(C_word)a,a+=2,tmp);
t6=C_SCHEME_FALSE;
t7=(*a=C_VECTOR_TYPE|1,a[1]=t6,tmp=(C_word)a,a+=2,tmp);
t8=C_SCHEME_FALSE;
t9=(*a=C_VECTOR_TYPE|1,a[1]=t8,tmp=(C_word)a,a+=2,tmp);
t10=C_SCHEME_FALSE;
t11=(*a=C_VECTOR_TYPE|1,a[1]=t10,tmp=(C_word)a,a+=2,tmp);
t12=C_SCHEME_FALSE;
t13=(*a=C_VECTOR_TYPE|1,a[1]=t12,tmp=(C_word)a,a+=2,tmp);
t14=((C_word*)t0)[4];
t15=(*a=C_VECTOR_TYPE|1,a[1]=t14,tmp=(C_word)a,a+=2,tmp);
t16=C_SCHEME_FALSE;
t17=(*a=C_VECTOR_TYPE|1,a[1]=t16,tmp=(C_word)a,a+=2,tmp);
t18=(*a=C_CLOSURE_TYPE|12,a[1]=(C_word)f_20552,a[2]=t13,a[3]=t11,a[4]=t17,a[5]=t9,a[6]=((C_word*)t0)[4],a[7]=t15,a[8]=t5,a[9]=t3,a[10]=t7,a[11]=((C_word*)t0)[2],a[12]=((C_word*)t0)[3],tmp=(C_word)a,a+=13,tmp);
if(C_truep((C_word)C_i_nullp(((C_word*)t15)[1]))){
t19=t18;
f_20552(t19,C_SCHEME_UNDEFINED);}
else{
t19=(C_word)C_i_car(((C_word*)t15)[1]);
t20=(C_word)C_eqp(t19,lf[344]);
if(C_truep(t20)){
t21=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_20896,a[2]=((C_word*)t0)[4],a[3]=t18,a[4]=t15,a[5]=t17,a[6]=t9,a[7]=t3,tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)t9)[1])){
C_trace("ChickenBridge.scm: 379  error");
t22=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t22))(4,t22,t21,lf[19],lf[344]);}
else{
t22=t21;
f_20896(2,t22,C_SCHEME_UNDEFINED);}}
else{
t21=(C_word)C_eqp(t19,lf[345]);
if(C_truep(t21)){
t22=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_20931,a[2]=((C_word*)t0)[4],a[3]=t18,a[4]=t15,a[5]=t17,a[6]=t11,a[7]=t5,tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)t11)[1])){
C_trace("ChickenBridge.scm: 379  error");
t23=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t23))(4,t23,t22,lf[19],lf[345]);}
else{
t23=t22;
f_20931(2,t23,C_SCHEME_UNDEFINED);}}
else{
t22=(C_word)C_eqp(t19,lf[377]);
if(C_truep(t22)){
t23=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_20966,a[2]=((C_word*)t0)[4],a[3]=t18,a[4]=t15,a[5]=t17,a[6]=t13,a[7]=t7,tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)t13)[1])){
C_trace("ChickenBridge.scm: 379  error");
t24=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t24))(4,t24,t23,lf[19],lf[377]);}
else{
t24=t23;
f_20966(2,t24,C_SCHEME_UNDEFINED);}}
else{
t23=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_20995,a[2]=t18,a[3]=t9,a[4]=t3,a[5]=t15,tmp=(C_word)a,a+=6,tmp);
if(C_truep(((C_word*)t17)[1])){
C_trace("ChickenBridge.scm: 379  error");
t24=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t24))(4,t24,t23,lf[10],((C_word*)t0)[4]);}
else{
t24=t23;
f_20995(2,t24,C_SCHEME_UNDEFINED);}}}}}}

/* k20993 in k20547 in make-markov in k11783 in k10718 in k10715 in k7274 in k7271 in k6978 in k6975 in k6971 in k6680 in k6677 in k6674 in k6671 */
static void C_ccall f_20995(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_20995,2,t0,t1);}
t2=(C_word)C_i_car(((C_word*)((C_word*)t0)[5])[1]);
t3=C_mutate(((C_word *)((C_word*)t0)[4])+1,t2);
t4=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_21002,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[5],a[4]=((C_word*)t0)[3],tmp=(C_word)a,a+=5,tmp);
t5=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_21010,a[2]=((C_word*)t0)[4],a[3]=t4,tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 379  keyword?");
t6=C_retrieve(lf[13]);
((C_proc3)C_retrieve_proc(t6))(3,t6,t5,((C_word*)((C_word*)t0)[4])[1]);}

/* k21008 in k20993 in k20547 in make-markov in k11783 in k10718 in k10715 in k7274 in k7271 in k6978 in k6975 in k6971 in k6680 in k6677 in k6674 in k6671 */
static void C_ccall f_21010(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
if(C_truep(t1)){
C_trace("ChickenBridge.scm: 379  error");
t2=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t2))(4,t2,((C_word*)t0)[3],lf[14],((C_word*)((C_word*)t0)[2])[1]);}
else{
t2=((C_word*)t0)[3];
f_21002(2,t2,C_SCHEME_UNDEFINED);}}

/* k21000 in k20993 in k20547 in make-markov in k11783 in k10718 in k10715 in k7274 in k7271 in k6978 in k6975 in k6971 in k6680 in k6677 in k6674 in k6671 */
static void C_ccall f_21002(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word *a;
t2=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[3])[1]);
t4=C_mutate(((C_word *)((C_word*)t0)[3])+1,t3);
t5=((C_word*)t0)[2];
f_20552(t5,t4);}

/* k20964 in k20547 in make-markov in k11783 in k10718 in k10715 in k7274 in k7271 in k6978 in k6975 in k6971 in k6680 in k6677 in k6674 in k6671 */
static void C_ccall f_20966(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_20966,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_20970,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("ChickenBridge.scm: 379  error");
t4=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[21],((C_word*)t0)[2]);}
else{
t4=t2;
f_20970(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k20968 in k20964 in k20547 in make-markov in k11783 in k10718 in k10715 in k7274 in k7271 in k6978 in k6975 in k6971 in k6680 in k6677 in k6674 in k6671 */
static void C_ccall f_20970(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_20552(t7,t6);}

/* k20929 in k20547 in make-markov in k11783 in k10718 in k10715 in k7274 in k7271 in k6978 in k6975 in k6971 in k6680 in k6677 in k6674 in k6671 */
static void C_ccall f_20931(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_20931,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_20935,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("ChickenBridge.scm: 379  error");
t4=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[21],((C_word*)t0)[2]);}
else{
t4=t2;
f_20935(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k20933 in k20929 in k20547 in make-markov in k11783 in k10718 in k10715 in k7274 in k7271 in k6978 in k6975 in k6971 in k6680 in k6677 in k6674 in k6671 */
static void C_ccall f_20935(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_20552(t7,t6);}

/* k20894 in k20547 in make-markov in k11783 in k10718 in k10715 in k7274 in k7271 in k6978 in k6975 in k6971 in k6680 in k6677 in k6674 in k6671 */
static void C_ccall f_20896(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_20896,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_20900,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("ChickenBridge.scm: 379  error");
t4=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[21],((C_word*)t0)[2]);}
else{
t4=t2;
f_20900(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k20898 in k20894 in k20547 in make-markov in k11783 in k10718 in k10715 in k7274 in k7271 in k6978 in k6975 in k6971 in k6680 in k6677 in k6674 in k6671 */
static void C_ccall f_20900(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_20552(t7,t6);}

/* k20550 in k20547 in make-markov in k11783 in k10718 in k10715 in k7274 in k7271 in k6978 in k6975 in k6971 in k6680 in k6677 in k6674 in k6671 */
static void C_fcall f_20552(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word ab[43],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_20552,NULL,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|12,a[1]=(C_word)f_20555,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],a[7]=((C_word*)t0)[7],a[8]=((C_word*)t0)[8],a[9]=((C_word*)t0)[9],a[10]=((C_word*)t0)[10],a[11]=((C_word*)t0)[11],a[12]=((C_word*)t0)[12],tmp=(C_word)a,a+=13,tmp);
if(C_truep((C_word)C_i_nullp(((C_word*)((C_word*)t0)[7])[1]))){
t3=t2;
f_20555(t3,C_SCHEME_UNDEFINED);}
else{
t3=(C_word)C_i_car(((C_word*)((C_word*)t0)[7])[1]);
t4=(C_word)C_eqp(t3,lf[344]);
if(C_truep(t4)){
t5=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_20761,a[2]=((C_word*)t0)[6],a[3]=t2,a[4]=((C_word*)t0)[7],a[5]=((C_word*)t0)[4],a[6]=((C_word*)t0)[5],a[7]=((C_word*)t0)[9],tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)((C_word*)t0)[5])[1])){
C_trace("ChickenBridge.scm: 379  error");
t6=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t6))(4,t6,t5,lf[19],lf[344]);}
else{
t6=t5;
f_20761(2,t6,C_SCHEME_UNDEFINED);}}
else{
t5=(C_word)C_eqp(t3,lf[345]);
if(C_truep(t5)){
t6=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_20796,a[2]=((C_word*)t0)[6],a[3]=t2,a[4]=((C_word*)t0)[7],a[5]=((C_word*)t0)[4],a[6]=((C_word*)t0)[3],a[7]=((C_word*)t0)[8],tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)((C_word*)t0)[3])[1])){
C_trace("ChickenBridge.scm: 379  error");
t7=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t7))(4,t7,t6,lf[19],lf[345]);}
else{
t7=t6;
f_20796(2,t7,C_SCHEME_UNDEFINED);}}
else{
t6=(C_word)C_eqp(t3,lf[377]);
if(C_truep(t6)){
t7=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_20831,a[2]=((C_word*)t0)[6],a[3]=t2,a[4]=((C_word*)t0)[7],a[5]=((C_word*)t0)[4],a[6]=((C_word*)t0)[2],a[7]=((C_word*)t0)[10],tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)((C_word*)t0)[2])[1])){
C_trace("ChickenBridge.scm: 379  error");
t8=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t8))(4,t8,t7,lf[19],lf[377]);}
else{
t8=t7;
f_20831(2,t8,C_SCHEME_UNDEFINED);}}
else{
t7=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_20860,a[2]=t2,a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[8],a[5]=((C_word*)t0)[7],tmp=(C_word)a,a+=6,tmp);
if(C_truep(((C_word*)((C_word*)t0)[4])[1])){
C_trace("ChickenBridge.scm: 379  error");
t8=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t8))(4,t8,t7,lf[10],((C_word*)t0)[6]);}
else{
t8=t7;
f_20860(2,t8,C_SCHEME_UNDEFINED);}}}}}}

/* k20858 in k20550 in k20547 in make-markov in k11783 in k10718 in k10715 in k7274 in k7271 in k6978 in k6975 in k6971 in k6680 in k6677 in k6674 in k6671 */
static void C_ccall f_20860(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_20860,2,t0,t1);}
t2=(C_word)C_i_car(((C_word*)((C_word*)t0)[5])[1]);
t3=C_mutate(((C_word *)((C_word*)t0)[4])+1,t2);
t4=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_20867,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[5],a[4]=((C_word*)t0)[3],tmp=(C_word)a,a+=5,tmp);
t5=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_20875,a[2]=((C_word*)t0)[4],a[3]=t4,tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 379  keyword?");
t6=C_retrieve(lf[13]);
((C_proc3)C_retrieve_proc(t6))(3,t6,t5,((C_word*)((C_word*)t0)[4])[1]);}

/* k20873 in k20858 in k20550 in k20547 in make-markov in k11783 in k10718 in k10715 in k7274 in k7271 in k6978 in k6975 in k6971 in k6680 in k6677 in k6674 in k6671 */
static void C_ccall f_20875(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
if(C_truep(t1)){
C_trace("ChickenBridge.scm: 379  error");
t2=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t2))(4,t2,((C_word*)t0)[3],lf[14],((C_word*)((C_word*)t0)[2])[1]);}
else{
t2=((C_word*)t0)[3];
f_20867(2,t2,C_SCHEME_UNDEFINED);}}

/* k20865 in k20858 in k20550 in k20547 in make-markov in k11783 in k10718 in k10715 in k7274 in k7271 in k6978 in k6975 in k6971 in k6680 in k6677 in k6674 in k6671 */
static void C_ccall f_20867(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word *a;
t2=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[3])[1]);
t4=C_mutate(((C_word *)((C_word*)t0)[3])+1,t3);
t5=((C_word*)t0)[2];
f_20555(t5,t4);}

/* k20829 in k20550 in k20547 in make-markov in k11783 in k10718 in k10715 in k7274 in k7271 in k6978 in k6975 in k6971 in k6680 in k6677 in k6674 in k6671 */
static void C_ccall f_20831(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_20831,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_20835,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("ChickenBridge.scm: 379  error");
t4=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[21],((C_word*)t0)[2]);}
else{
t4=t2;
f_20835(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k20833 in k20829 in k20550 in k20547 in make-markov in k11783 in k10718 in k10715 in k7274 in k7271 in k6978 in k6975 in k6971 in k6680 in k6677 in k6674 in k6671 */
static void C_ccall f_20835(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_20555(t7,t6);}

/* k20794 in k20550 in k20547 in make-markov in k11783 in k10718 in k10715 in k7274 in k7271 in k6978 in k6975 in k6971 in k6680 in k6677 in k6674 in k6671 */
static void C_ccall f_20796(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_20796,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_20800,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("ChickenBridge.scm: 379  error");
t4=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[21],((C_word*)t0)[2]);}
else{
t4=t2;
f_20800(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k20798 in k20794 in k20550 in k20547 in make-markov in k11783 in k10718 in k10715 in k7274 in k7271 in k6978 in k6975 in k6971 in k6680 in k6677 in k6674 in k6671 */
static void C_ccall f_20800(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_20555(t7,t6);}

/* k20759 in k20550 in k20547 in make-markov in k11783 in k10718 in k10715 in k7274 in k7271 in k6978 in k6975 in k6971 in k6680 in k6677 in k6674 in k6671 */
static void C_ccall f_20761(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_20761,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_20765,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("ChickenBridge.scm: 379  error");
t4=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[21],((C_word*)t0)[2]);}
else{
t4=t2;
f_20765(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k20763 in k20759 in k20550 in k20547 in make-markov in k11783 in k10718 in k10715 in k7274 in k7271 in k6978 in k6975 in k6971 in k6680 in k6677 in k6674 in k6671 */
static void C_ccall f_20765(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_20555(t7,t6);}

/* k20553 in k20550 in k20547 in make-markov in k11783 in k10718 in k10715 in k7274 in k7271 in k6978 in k6975 in k6971 in k6680 in k6677 in k6674 in k6671 */
static void C_fcall f_20555(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word ab[39],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_20555,NULL,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|8,a[1]=(C_word)f_20558,a[2]=((C_word*)t0)[6],a[3]=((C_word*)t0)[7],a[4]=((C_word*)t0)[8],a[5]=((C_word*)t0)[9],a[6]=((C_word*)t0)[10],a[7]=((C_word*)t0)[11],a[8]=((C_word*)t0)[12],tmp=(C_word)a,a+=9,tmp);
if(C_truep((C_word)C_i_nullp(((C_word*)((C_word*)t0)[7])[1]))){
t3=t2;
f_20558(t3,C_SCHEME_UNDEFINED);}
else{
t3=(C_word)C_i_car(((C_word*)((C_word*)t0)[7])[1]);
t4=(C_word)C_eqp(t3,lf[344]);
if(C_truep(t4)){
t5=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_20626,a[2]=((C_word*)t0)[6],a[3]=t2,a[4]=((C_word*)t0)[7],a[5]=((C_word*)t0)[4],a[6]=((C_word*)t0)[5],a[7]=((C_word*)t0)[9],tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)((C_word*)t0)[5])[1])){
C_trace("ChickenBridge.scm: 379  error");
t6=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t6))(4,t6,t5,lf[19],lf[344]);}
else{
t6=t5;
f_20626(2,t6,C_SCHEME_UNDEFINED);}}
else{
t5=(C_word)C_eqp(t3,lf[345]);
if(C_truep(t5)){
t6=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_20661,a[2]=((C_word*)t0)[6],a[3]=t2,a[4]=((C_word*)t0)[7],a[5]=((C_word*)t0)[4],a[6]=((C_word*)t0)[3],a[7]=((C_word*)t0)[8],tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)((C_word*)t0)[3])[1])){
C_trace("ChickenBridge.scm: 379  error");
t7=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t7))(4,t7,t6,lf[19],lf[345]);}
else{
t7=t6;
f_20661(2,t7,C_SCHEME_UNDEFINED);}}
else{
t6=(C_word)C_eqp(t3,lf[377]);
if(C_truep(t6)){
t7=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_20696,a[2]=((C_word*)t0)[6],a[3]=t2,a[4]=((C_word*)t0)[7],a[5]=((C_word*)t0)[4],a[6]=((C_word*)t0)[2],a[7]=((C_word*)t0)[10],tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)((C_word*)t0)[2])[1])){
C_trace("ChickenBridge.scm: 379  error");
t8=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t8))(4,t8,t7,lf[19],lf[377]);}
else{
t8=t7;
f_20696(2,t8,C_SCHEME_UNDEFINED);}}
else{
t7=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_20725,a[2]=t2,a[3]=((C_word*)t0)[2],a[4]=((C_word*)t0)[10],a[5]=((C_word*)t0)[7],tmp=(C_word)a,a+=6,tmp);
if(C_truep(((C_word*)((C_word*)t0)[4])[1])){
C_trace("ChickenBridge.scm: 379  error");
t8=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t8))(4,t8,t7,lf[10],((C_word*)t0)[6]);}
else{
t8=t7;
f_20725(2,t8,C_SCHEME_UNDEFINED);}}}}}}

/* k20723 in k20553 in k20550 in k20547 in make-markov in k11783 in k10718 in k10715 in k7274 in k7271 in k6978 in k6975 in k6971 in k6680 in k6677 in k6674 in k6671 */
static void C_ccall f_20725(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_20725,2,t0,t1);}
t2=(C_word)C_i_car(((C_word*)((C_word*)t0)[5])[1]);
t3=C_mutate(((C_word *)((C_word*)t0)[4])+1,t2);
t4=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_20732,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[5],a[4]=((C_word*)t0)[3],tmp=(C_word)a,a+=5,tmp);
t5=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_20740,a[2]=((C_word*)t0)[4],a[3]=t4,tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 379  keyword?");
t6=C_retrieve(lf[13]);
((C_proc3)C_retrieve_proc(t6))(3,t6,t5,((C_word*)((C_word*)t0)[4])[1]);}

/* k20738 in k20723 in k20553 in k20550 in k20547 in make-markov in k11783 in k10718 in k10715 in k7274 in k7271 in k6978 in k6975 in k6971 in k6680 in k6677 in k6674 in k6671 */
static void C_ccall f_20740(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
if(C_truep(t1)){
C_trace("ChickenBridge.scm: 379  error");
t2=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t2))(4,t2,((C_word*)t0)[3],lf[14],((C_word*)((C_word*)t0)[2])[1]);}
else{
t2=((C_word*)t0)[3];
f_20732(2,t2,C_SCHEME_UNDEFINED);}}

/* k20730 in k20723 in k20553 in k20550 in k20547 in make-markov in k11783 in k10718 in k10715 in k7274 in k7271 in k6978 in k6975 in k6971 in k6680 in k6677 in k6674 in k6671 */
static void C_ccall f_20732(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word *a;
t2=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[3])[1]);
t4=C_mutate(((C_word *)((C_word*)t0)[3])+1,t3);
t5=((C_word*)t0)[2];
f_20558(t5,t4);}

/* k20694 in k20553 in k20550 in k20547 in make-markov in k11783 in k10718 in k10715 in k7274 in k7271 in k6978 in k6975 in k6971 in k6680 in k6677 in k6674 in k6671 */
static void C_ccall f_20696(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_20696,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_20700,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("ChickenBridge.scm: 379  error");
t4=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[21],((C_word*)t0)[2]);}
else{
t4=t2;
f_20700(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k20698 in k20694 in k20553 in k20550 in k20547 in make-markov in k11783 in k10718 in k10715 in k7274 in k7271 in k6978 in k6975 in k6971 in k6680 in k6677 in k6674 in k6671 */
static void C_ccall f_20700(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_20558(t7,t6);}

/* k20659 in k20553 in k20550 in k20547 in make-markov in k11783 in k10718 in k10715 in k7274 in k7271 in k6978 in k6975 in k6971 in k6680 in k6677 in k6674 in k6671 */
static void C_ccall f_20661(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_20661,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_20665,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("ChickenBridge.scm: 379  error");
t4=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[21],((C_word*)t0)[2]);}
else{
t4=t2;
f_20665(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k20663 in k20659 in k20553 in k20550 in k20547 in make-markov in k11783 in k10718 in k10715 in k7274 in k7271 in k6978 in k6975 in k6971 in k6680 in k6677 in k6674 in k6671 */
static void C_ccall f_20665(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_20558(t7,t6);}

/* k20624 in k20553 in k20550 in k20547 in make-markov in k11783 in k10718 in k10715 in k7274 in k7271 in k6978 in k6975 in k6971 in k6680 in k6677 in k6674 in k6671 */
static void C_ccall f_20626(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_20626,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_20630,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("ChickenBridge.scm: 379  error");
t4=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[21],((C_word*)t0)[2]);}
else{
t4=t2;
f_20630(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k20628 in k20624 in k20553 in k20550 in k20547 in make-markov in k11783 in k10718 in k10715 in k7274 in k7271 in k6978 in k6975 in k6971 in k6680 in k6677 in k6674 in k6671 */
static void C_ccall f_20630(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_20558(t7,t6);}

/* k20556 in k20553 in k20550 in k20547 in make-markov in k11783 in k10718 in k10715 in k7274 in k7271 in k6978 in k6975 in k6971 in k6680 in k6677 in k6674 in k6671 */
static void C_fcall f_20558(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_20558,NULL,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_20561,a[2]=((C_word*)t0)[4],a[3]=((C_word*)t0)[5],a[4]=((C_word*)t0)[6],a[5]=((C_word*)t0)[7],a[6]=((C_word*)t0)[8],tmp=(C_word)a,a+=7,tmp);
if(C_truep((C_word)C_i_nullp(((C_word*)((C_word*)t0)[3])[1]))){
t3=t2;
f_20561(2,t3,C_SCHEME_UNDEFINED);}
else{
C_trace("ChickenBridge.scm: 379  error");
t3=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t3))(4,t3,t2,lf[5],((C_word*)t0)[2]);}}

/* k20559 in k20556 in k20553 in k20550 in k20547 in make-markov in k11783 in k10718 in k10715 in k7274 in k7271 in k6978 in k6975 in k6971 in k6680 in k6677 in k6674 in k6671 */
static void C_ccall f_20561(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_20561,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_20564,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],tmp=(C_word)a,a+=7,tmp);
C_trace("ChickenBridge.scm: 379  %alloc-pattern");
f_15819(t2);}

/* k20562 in k20559 in k20556 in k20553 in k20550 in k20547 in make-markov in k11783 in k10718 in k10715 in k7274 in k7271 in k6978 in k6975 in k6971 in k6680 in k6677 in k6674 in k6671 */
static void C_ccall f_20564(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_20564,2,t0,t1);}
t2=(C_word)C_i_length(((C_word*)((C_word*)t0)[6])[1]);
t3=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_20570,a[2]=((C_word*)t0)[6],a[3]=((C_word*)t0)[4],a[4]=t1,a[5]=((C_word*)t0)[5],tmp=(C_word)a,a+=6,tmp);
t4=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_20597,a[2]=((C_word)li293),tmp=(C_word)a,a+=3,tmp);
C_trace("ChickenBridge.scm: 379  initialize-pattern");
f_15829(t3,t1,((C_word*)((C_word*)t0)[6])[1],((C_word*)((C_word*)t0)[3])[1],((C_word*)((C_word*)t0)[2])[1],C_fix(0),t2,t2,C_retrieve2(lf[376],"next-in-markov"),t4);}

/* a20596 in k20562 in k20559 in k20556 in k20553 in k20550 in k20547 in make-markov in k11783 in k10718 in k10715 in k7274 in k7271 in k6978 in k6975 in k6971 in k6680 in k6677 in k6674 in k6671 */
static void C_ccall f_20597(C_word c,C_word t0,C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word ab[4],*a=ab;
if(c!=4) C_bad_argc_2(c,4,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr4,(void*)f_20597,4,t0,t1,t2,t3);}
t4=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_20605,a[2]=t2,a[3]=t1,tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 379  pattern-data");
f_15548(t4,t3);}

/* k20603 in a20596 in k20562 in k20559 in k20556 in k20553 in k20550 in k20547 in make-markov in k11783 in k10718 in k10715 in k7274 in k7271 in k6978 in k6975 in k6971 in k6680 in k6677 in k6674 in k6671 */
static void C_ccall f_20605(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("for-each");
t2=*((C_word*)lf[237]+1);
((C_proc4)(void*)(*((C_word*)t2+1)))(4,t2,((C_word*)t0)[3],((C_word*)t0)[2],t1);}

/* k20568 in k20562 in k20559 in k20556 in k20553 in k20550 in k20547 in make-markov in k11783 in k10718 in k10715 in k7274 in k7271 in k6978 in k6975 in k6971 in k6680 in k6677 in k6674 in k6671 */
static void C_ccall f_20570(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_20570,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_20573,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],tmp=(C_word)a,a+=5,tmp);
if(C_truep((C_word)C_i_pairp(((C_word*)((C_word*)t0)[3])[1]))){
t3=t2;
f_20573(t3,C_SCHEME_UNDEFINED);}
else{
t3=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_20583,a[2]=t2,a[3]=((C_word*)t0)[3],tmp=(C_word)a,a+=4,tmp);
t4=(C_word)C_i_car(((C_word*)((C_word*)t0)[2])[1]);
t5=(C_word)C_i_car(t4);
t6=(C_word)C_i_length(t5);
C_trace("ChickenBridge.scm: 379  make-list");
t7=C_retrieve(lf[83]);
((C_proc4)C_retrieve_proc(t7))(4,t7,t3,t6,lf[129]);}}

/* k20581 in k20568 in k20562 in k20559 in k20556 in k20553 in k20550 in k20547 in make-markov in k11783 in k10718 in k10715 in k7274 in k7271 in k6978 in k6975 in k6971 in k6680 in k6677 in k6674 in k6671 */
static void C_ccall f_20583(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[3])+1,t1);
t3=((C_word*)t0)[2];
f_20573(t3,t2);}

/* k20571 in k20568 in k20562 in k20559 in k20556 in k20553 in k20550 in k20547 in make-markov in k11783 in k10718 in k10715 in k7274 in k7271 in k6978 in k6975 in k6971 in k6680 in k6677 in k6674 in k6671 */
static void C_fcall f_20573(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[4],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_20573,NULL,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_20576,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 379  pattern-cache-set!");
f_15755(t2,((C_word*)t0)[3],((C_word*)((C_word*)t0)[2])[1]);}

/* k20574 in k20571 in k20568 in k20562 in k20559 in k20556 in k20553 in k20550 in k20547 in make-markov in k11783 in k10718 in k10715 in k7274 in k7271 in k6978 in k6975 in k6971 in k6680 in k6677 in k6674 in k6671 */
static void C_ccall f_20576(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
t2=((C_word*)t0)[3];
((C_proc2)(void*)(*((C_word*)t2+1)))(2,t2,((C_word*)t0)[2]);}

/* next-in-weighting in k11783 in k10718 in k10715 in k7274 in k7271 in k6978 in k6975 in k6971 in k6680 in k6677 in k6674 in k6671 */
static void C_ccall f_20112(C_word c,C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word ab[4],*a=ab;
if(c!=3) C_bad_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr3,(void*)f_20112,3,t0,t1,t2);}
t3=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_20116,a[2]=t2,a[3]=t1,tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 379  pattern-data");
f_15548(t3,t2);}

/* k20114 in next-in-weighting in k11783 in k10718 in k10715 in k7274 in k7271 in k6978 in k6975 in k6971 in k6680 in k6677 in k6674 in k6671 */
static void C_ccall f_20116(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[5],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_20116,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_20119,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=t1,tmp=(C_word)a,a+=5,tmp);
C_trace("ChickenBridge.scm: 379  pattern-period");
f_15602(t2,((C_word*)t0)[2]);}

/* k20117 in k20114 in next-in-weighting in k11783 in k10718 in k10715 in k7274 in k7271 in k6978 in k6975 in k6971 in k6680 in k6677 in k6674 in k6671 */
static void C_ccall f_20119(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[6],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_20119,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_20122,a[2]=t1,a[3]=((C_word*)t0)[2],a[4]=((C_word*)t0)[3],a[5]=((C_word*)t0)[4],tmp=(C_word)a,a+=6,tmp);
C_trace("ChickenBridge.scm: 379  pattern-flags");
f_15530(t2,((C_word*)t0)[2]);}

/* k20120 in k20117 in k20114 in next-in-weighting in k11783 in k10718 in k10715 in k7274 in k7271 in k6978 in k6975 in k6971 in k6680 in k6677 in k6674 in k6671 */
static void C_ccall f_20122(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[11],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_20122,2,t0,t1);}
t2=(C_word)C_i_cdr(((C_word*)t0)[5]);
t3=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_20128,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[5],a[4]=t2,a[5]=((C_word*)t0)[4],tmp=(C_word)a,a+=6,tmp);
t4=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_20291,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=t3,tmp=(C_word)a,a+=5,tmp);
C_trace("ChickenBridge.scm: 379  bitwise-test");
f_8151(t4,t1,C_fix(4));}

/* k20289 in k20120 in k20117 in k20114 in next-in-weighting in k11783 in k10718 in k10715 in k7274 in k7271 in k6978 in k6975 in k6971 in k6680 in k6677 in k6674 in k6671 */
static void C_ccall f_20291(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[5],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_20291,2,t0,t1);}
if(C_truep(t1)){
t2=((C_word*)t0)[4];
f_20128(2,t2,C_SCHEME_UNDEFINED);}
else{
t2=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_20304,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],tmp=(C_word)a,a+=5,tmp);
C_trace("ChickenBridge.scm: 379  period-count");
f_15380(t2,((C_word*)t0)[2]);}}

/* k20302 in k20289 in k20120 in k20117 in k20114 in next-in-weighting in k11783 in k10718 in k10715 in k7274 in k7271 in k6978 in k6975 in k6971 in k6680 in k6677 in k6674 in k6671 */
static void C_ccall f_20304(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[5],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_20304,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_20308,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=t1,tmp=(C_word)a,a+=5,tmp);
C_trace("ChickenBridge.scm: 379  period-length");
f_15398(t2,((C_word*)t0)[2]);}

/* k20306 in k20302 in k20289 in k20120 in k20117 in k20114 in next-in-weighting in k11783 in k10718 in k10715 in k7274 in k7271 in k6978 in k6975 in k6971 in k6680 in k6677 in k6674 in k6671 */
static void C_ccall f_20308(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
if(C_truep((C_word)C_i_nequalp(((C_word*)t0)[4],t1))){
C_trace("ChickenBridge.scm: 379  recalc-weightings");
f_20000(((C_word*)t0)[3],((C_word*)t0)[2],C_SCHEME_FALSE);}
else{
t2=((C_word*)t0)[3];
f_20128(2,t2,C_SCHEME_UNDEFINED);}}

/* k20126 in k20120 in k20117 in k20114 in next-in-weighting in k11783 in k10718 in k10715 in k7274 in k7271 in k6978 in k6975 in k6971 in k6680 in k6677 in k6674 in k6671 */
static void C_ccall f_20128(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[14],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_20128,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_20134,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],tmp=(C_word)a,a+=6,tmp);
if(C_truep((C_word)C_i_nullp(((C_word*)t0)[4]))){
t3=t2;
f_20134(t3,C_SCHEME_FALSE);}
else{
t3=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_20265,a[2]=((C_word*)t0)[4],a[3]=t2,tmp=(C_word)a,a+=4,tmp);
t4=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_20284,a[2]=((C_word*)t0)[4],a[3]=t3,tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 379  random-item-count");
f_19150(t4,((C_word*)t0)[4]);}}

/* k20282 in k20126 in k20120 in k20117 in k20114 in next-in-weighting in k11783 in k10718 in k10715 in k7274 in k7271 in k6978 in k6975 in k6971 in k6680 in k6677 in k6674 in k6671 */
static void C_ccall f_20284(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[4],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_20284,2,t0,t1);}
t2=(C_word)C_a_i_plus(&a,2,C_fix(1),t1);
C_trace("ChickenBridge.scm: 379  random-item-count-set!");
f_19141(((C_word*)t0)[3],((C_word*)t0)[2],t2);}

/* k20263 in k20126 in k20120 in k20117 in k20114 in next-in-weighting in k11783 in k10718 in k10715 in k7274 in k7271 in k6978 in k6975 in k6971 in k6680 in k6677 in k6674 in k6671 */
static void C_ccall f_20265(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[4],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_20265,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_20272,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 379  random-item-count");
f_19150(t2,((C_word*)t0)[2]);}

/* k20270 in k20263 in k20126 in k20120 in k20117 in k20114 in next-in-weighting in k11783 in k10718 in k10715 in k7274 in k7271 in k6978 in k6975 in k6971 in k6680 in k6677 in k6674 in k6671 */
static void C_ccall f_20272(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[4],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_20272,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_20276,a[2]=t1,a[3]=((C_word*)t0)[3],tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 379  random-item-min");
f_19114(t2,((C_word*)t0)[2]);}

/* k20274 in k20270 in k20263 in k20126 in k20120 in k20117 in k20114 in next-in-weighting in k11783 in k10718 in k10715 in k7274 in k7271 in k6978 in k6975 in k6971 in k6680 in k6677 in k6674 in k6671 */
static void C_ccall f_20276(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
t2=((C_word*)t0)[3];
f_20134(t2,(C_word)C_i_lessp(((C_word*)t0)[2],t1));}

/* k20132 in k20126 in k20120 in k20117 in k20114 in next-in-weighting in k11783 in k10718 in k10715 in k7274 in k7271 in k6978 in k6975 in k6971 in k6680 in k6677 in k6674 in k6671 */
static void C_fcall f_20134(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[5],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_20134,NULL,2,t0,t1);}
if(C_truep(t1)){
C_trace("ChickenBridge.scm: 379  random-item-datum");
f_19060(((C_word*)t0)[5],((C_word*)t0)[4]);}
else{
t2=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_20140,a[2]=((C_word*)t0)[4],a[3]=((C_word*)t0)[5],a[4]=((C_word*)t0)[3],tmp=(C_word)a,a+=5,tmp);
C_trace("ChickenBridge.scm: 379  pattern-cache");
f_15764(t2,((C_word*)t0)[2]);}}

/* k20138 in k20132 in k20126 in k20120 in k20117 in k20114 in next-in-weighting in k11783 in k10718 in k10715 in k7274 in k7271 in k6978 in k6975 in k6971 in k6680 in k6677 in k6674 in k6671 */
static void C_ccall f_20140(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word ab[19],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_20140,2,t0,t1);}
t2=(C_word)C_i_car(((C_word*)t0)[4]);
t3=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_20144,a[2]=((C_word)li289),tmp=(C_word)a,a+=3,tmp);
t4=C_SCHEME_FALSE;
t5=(*a=C_VECTOR_TYPE|1,a[1]=t4,tmp=(C_word)a,a+=2,tmp);
t6=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_20182,a[2]=t2,a[3]=((C_word*)t0)[2],a[4]=((C_word*)t0)[3],a[5]=t5,a[6]=((C_word*)t0)[4],tmp=(C_word)a,a+=7,tmp);
t7=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_20224,a[2]=t6,a[3]=t5,a[4]=t1,a[5]=t2,a[6]=t3,tmp=(C_word)a,a+=7,tmp);
C_trace("ChickenBridge.scm: 379  pick");
f_20144(t7,t2,t1);}

/* k20222 in k20138 in k20132 in k20126 in k20120 in k20117 in k20114 in next-in-weighting in k11783 in k10718 in k10715 in k7274 in k7271 in k6978 in k6975 in k6971 in k6680 in k6677 in k6674 in k6671 */
static void C_ccall f_20224(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[10],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_20224,2,t0,t1);}
t2=C_SCHEME_UNDEFINED;
t3=(*a=C_VECTOR_TYPE|1,a[1]=t2,tmp=(C_word)a,a+=2,tmp);
t4=C_set_block_item(t3,0,(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_20226,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=t3,a[7]=((C_word)li291),tmp=(C_word)a,a+=8,tmp));
t5=((C_word*)t3)[1];
f_20226(t5,((C_word*)t0)[2],t1);}

/* do2571 in k20222 in k20138 in k20132 in k20126 in k20120 in k20117 in k20114 in next-in-weighting in k11783 in k10718 in k10715 in k7274 in k7271 in k6978 in k6975 in k6971 in k6680 in k6677 in k6674 in k6671 */
static void C_fcall f_20226(C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word t5;
C_word ab[13],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_20226,NULL,3,t0,t1,t2);}
t3=(*a=C_CLOSURE_TYPE|8,a[1]=(C_word)f_20245,a[2]=t2,a[3]=((C_word*)t0)[2],a[4]=((C_word*)t0)[3],a[5]=((C_word*)t0)[4],a[6]=((C_word*)t0)[5],a[7]=t1,a[8]=((C_word*)t0)[6],tmp=(C_word)a,a+=9,tmp);
t4=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_20248,a[2]=t2,a[3]=t3,tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 379  random-item-max");
f_19132(t4,t2);}

/* k20246 in do2571 in k20222 in k20138 in k20132 in k20126 in k20120 in k20117 in k20114 in next-in-weighting in k11783 in k10718 in k10715 in k7274 in k7271 in k6978 in k6975 in k6971 in k6680 in k6677 in k6674 in k6671 */
static void C_ccall f_20248(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[4],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_20248,2,t0,t1);}
if(C_truep(t1)){
t2=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_20255,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 379  random-item-count");
f_19150(t2,((C_word*)t0)[2]);}
else{
t2=((C_word*)t0)[3];
f_20245(t2,C_SCHEME_FALSE);}}

/* k20253 in k20246 in do2571 in k20222 in k20138 in k20132 in k20126 in k20120 in k20117 in k20114 in next-in-weighting in k11783 in k10718 in k10715 in k7274 in k7271 in k6978 in k6975 in k6971 in k6680 in k6677 in k6674 in k6671 */
static void C_ccall f_20255(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[4],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_20255,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_20259,a[2]=t1,a[3]=((C_word*)t0)[3],tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 379  random-item-max");
f_19132(t2,((C_word*)t0)[2]);}

/* k20257 in k20253 in k20246 in do2571 in k20222 in k20138 in k20132 in k20126 in k20120 in k20117 in k20114 in next-in-weighting in k11783 in k10718 in k10715 in k7274 in k7271 in k6978 in k6975 in k6971 in k6680 in k6677 in k6674 in k6671 */
static void C_ccall f_20259(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
t2=((C_word*)t0)[3];
f_20245(t2,(C_word)C_i_nequalp(((C_word*)t0)[2],t1));}

/* k20243 in do2571 in k20222 in k20138 in k20132 in k20126 in k20120 in k20117 in k20114 in next-in-weighting in k11783 in k10718 in k10715 in k7274 in k7271 in k6978 in k6975 in k6971 in k6680 in k6677 in k6674 in k6671 */
static void C_fcall f_20245(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[4],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_20245,NULL,2,t0,t1);}
if(C_truep(t1)){
t2=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_20241,a[2]=((C_word*)t0)[7],a[3]=((C_word*)t0)[8],tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 379  pick");
f_20144(t2,((C_word*)t0)[5],((C_word*)t0)[4]);}
else{
t2=C_mutate(((C_word *)((C_word*)t0)[3])+1,((C_word*)t0)[2]);
t3=((C_word*)t0)[7];
((C_proc2)(void*)(*((C_word*)t3+1)))(2,t3,t2);}}

/* k20239 in k20243 in do2571 in k20222 in k20138 in k20132 in k20126 in k20120 in k20117 in k20114 in next-in-weighting in k11783 in k10718 in k10715 in k7274 in k7271 in k6978 in k6975 in k6971 in k6680 in k6677 in k6674 in k6671 */
static void C_ccall f_20241(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
t2=((C_word*)((C_word*)t0)[3])[1];
f_20226(t2,((C_word*)t0)[2],t1);}

/* k20180 in k20138 in k20132 in k20126 in k20120 in k20117 in k20114 in next-in-weighting in k11783 in k10718 in k10715 in k7274 in k7271 in k6978 in k6975 in k6971 in k6680 in k6677 in k6674 in k6671 */
static void C_ccall f_20182(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word ab[11],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_20182,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_20185,a[2]=((C_word*)t0)[4],a[3]=((C_word*)t0)[5],a[4]=((C_word*)t0)[6],tmp=(C_word)a,a+=5,tmp);
t3=(C_word)C_eqp(((C_word*)((C_word*)t0)[5])[1],((C_word*)t0)[3]);
if(C_truep(t3)){
t4=t2;
f_20185(2,t4,C_SCHEME_UNDEFINED);}
else{
t4=C_SCHEME_UNDEFINED;
t5=(*a=C_VECTOR_TYPE|1,a[1]=t4,tmp=(C_word)a,a+=2,tmp);
t6=C_set_block_item(t5,0,(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_20199,a[2]=t5,a[3]=((C_word)li290),tmp=(C_word)a,a+=4,tmp));
t7=((C_word*)t5)[1];
f_20199(t7,t2,((C_word*)t0)[2]);}}

/* do2575 in k20180 in k20138 in k20132 in k20126 in k20120 in k20117 in k20114 in next-in-weighting in k11783 in k10718 in k10715 in k7274 in k7271 in k6978 in k6975 in k6971 in k6680 in k6677 in k6674 in k6671 */
static void C_fcall f_20199(C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word t5;
C_word ab[5],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_20199,NULL,3,t0,t1,t2);}
if(C_truep((C_word)C_i_nullp(t2))){
t3=t1;
((C_proc2)(void*)(*((C_word*)t3+1)))(2,t3,C_SCHEME_FALSE);}
else{
t3=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_20209,a[2]=t1,a[3]=((C_word*)t0)[2],a[4]=t2,tmp=(C_word)a,a+=5,tmp);
t4=(C_word)C_i_car(t2);
C_trace("ChickenBridge.scm: 379  random-item-count-set!");
f_19141(t3,t4,C_fix(0));}}

/* k20207 in do2575 in k20180 in k20138 in k20132 in k20126 in k20120 in k20117 in k20114 in next-in-weighting in k11783 in k10718 in k10715 in k7274 in k7271 in k6978 in k6975 in k6971 in k6680 in k6677 in k6674 in k6671 */
static void C_ccall f_20209(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word *a;
t2=(C_word)C_i_cdr(((C_word*)t0)[4]);
t3=((C_word*)((C_word*)t0)[3])[1];
f_20199(t3,((C_word*)t0)[2],t2);}

/* k20183 in k20180 in k20138 in k20132 in k20126 in k20120 in k20117 in k20114 in next-in-weighting in k11783 in k10718 in k10715 in k7274 in k7271 in k6978 in k6975 in k6971 in k6680 in k6677 in k6674 in k6671 */
static void C_ccall f_20185(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word *a;
t2=(C_word)C_i_set_cdr(((C_word*)t0)[4],((C_word*)((C_word*)t0)[3])[1]);
C_trace("ChickenBridge.scm: 379  random-item-datum");
f_19060(((C_word*)t0)[2],((C_word*)((C_word*)t0)[3])[1]);}

/* pick in k20138 in k20132 in k20126 in k20120 in k20117 in k20114 in next-in-weighting in k11783 in k10718 in k10715 in k7274 in k7271 in k6978 in k6975 in k6971 in k6680 in k6677 in k6674 in k6671 */
static void C_fcall f_20144(C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word ab[4],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_20144,NULL,3,t1,t2,t3);}
t4=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_20152,a[2]=t2,a[3]=t1,tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 379  tb:ranf");
f_8362(t4,t3);}

/* k20150 in pick in k20138 in k20132 in k20126 in k20120 in k20117 in k20114 in next-in-weighting in k11783 in k10718 in k10715 in k7274 in k7271 in k6978 in k6975 in k6971 in k6680 in k6677 in k6674 in k6671 */
static void C_ccall f_20152(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[6],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_20152,2,t0,t1);}
t2=C_SCHEME_UNDEFINED;
t3=(*a=C_VECTOR_TYPE|1,a[1]=t2,tmp=(C_word)a,a+=2,tmp);
t4=C_set_block_item(t3,0,(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_20154,a[2]=t3,a[3]=((C_word)li288),tmp=(C_word)a,a+=4,tmp));
t5=((C_word*)t3)[1];
f_20154(t5,((C_word*)t0)[3],((C_word*)t0)[2],t1);}

/* do2566 in k20150 in pick in k20138 in k20132 in k20126 in k20120 in k20117 in k20114 in next-in-weighting in k11783 in k10718 in k10715 in k7274 in k7271 in k6978 in k6975 in k6971 in k6680 in k6677 in k6674 in k6671 */
static void C_fcall f_20154(C_word t0,C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word t6;
C_word ab[6],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_20154,NULL,4,t0,t1,t2,t3);}
t4=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_20175,a[2]=((C_word*)t0)[2],a[3]=t2,a[4]=t1,a[5]=t3,tmp=(C_word)a,a+=6,tmp);
t5=(C_word)C_i_car(t2);
C_trace("ChickenBridge.scm: 379  random-item-index");
f_19078(t4,t5);}

/* k20173 in do2566 in k20150 in pick in k20138 in k20132 in k20126 in k20120 in k20117 in k20114 in next-in-weighting in k11783 in k10718 in k10715 in k7274 in k7271 in k6978 in k6975 in k6971 in k6680 in k6677 in k6674 in k6671 */
static void C_ccall f_20175(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word *a;
if(C_truep((C_word)C_i_lessp(((C_word*)t0)[5],t1))){
t2=((C_word*)t0)[4];
((C_proc2)(void*)(*((C_word*)t2+1)))(2,t2,(C_word)C_i_car(((C_word*)t0)[3]));}
else{
t2=(C_word)C_i_cdr(((C_word*)t0)[3]);
t3=((C_word*)((C_word*)t0)[2])[1];
f_20154(t3,((C_word*)t0)[4],t2,((C_word*)t0)[5]);}}

/* recalc-weightings in k11783 in k10718 in k10715 in k7274 in k7271 in k6978 in k6975 in k6971 in k6680 in k6677 in k6674 in k6671 */
static void C_fcall f_20000(C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word ab[5],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_20000,NULL,3,t1,t2,t3);}
t4=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_20110,a[2]=t1,a[3]=t2,a[4]=t3,tmp=(C_word)a,a+=5,tmp);
C_trace("ChickenBridge.scm: 379  pattern-data");
f_15548(t4,t2);}

/* k20108 in recalc-weightings in k11783 in k10718 in k10715 in k7274 in k7271 in k6978 in k6975 in k6971 in k6680 in k6677 in k6674 in k6671 */
static void C_ccall f_20110(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word ab[16],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_20110,2,t0,t1);}
t2=(C_word)C_i_car(t1);
t3=lf[374];
t4=(*a=C_VECTOR_TYPE|1,a[1]=t3,tmp=(C_word)a,a+=2,tmp);
t5=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_20007,a[2]=t2,a[3]=((C_word*)t0)[2],a[4]=t4,a[5]=((C_word*)t0)[3],a[6]=((C_word*)t0)[4],tmp=(C_word)a,a+=7,tmp);
t6=C_SCHEME_UNDEFINED;
t7=(*a=C_VECTOR_TYPE|1,a[1]=t6,tmp=(C_word)a,a+=2,tmp);
t8=C_set_block_item(t7,0,(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_20069,a[2]=t7,a[3]=t4,a[4]=((C_word)li286),tmp=(C_word)a,a+=5,tmp));
t9=((C_word*)t7)[1];
f_20069(t9,t5,t2);}

/* do2538 in k20108 in recalc-weightings in k11783 in k10718 in k10715 in k7274 in k7271 in k6978 in k6975 in k6971 in k6680 in k6677 in k6674 in k6671 */
static void C_fcall f_20069(C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_20069,NULL,3,t0,t1,t2);}
if(C_truep((C_word)C_i_nullp(t2))){
t3=t1;
((C_proc2)(void*)(*((C_word*)t3+1)))(2,t3,C_SCHEME_FALSE);}
else{
t3=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_20098,a[2]=t1,a[3]=((C_word*)t0)[2],a[4]=t2,a[5]=((C_word*)t0)[3],tmp=(C_word)a,a+=6,tmp);
t4=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_20102,a[2]=t3,tmp=(C_word)a,a+=3,tmp);
t5=(C_word)C_i_car(t2);
C_trace("ChickenBridge.scm: 379  random-item-weight");
f_19096(t4,t5);}}

/* k20100 in do2538 in k20108 in recalc-weightings in k11783 in k10718 in k10715 in k7274 in k7271 in k6978 in k6975 in k6971 in k6680 in k6677 in k6674 in k6671 */
static void C_ccall f_20102(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 379  next-1");
f_16170(((C_word*)t0)[2],t1);}

/* k20096 in do2538 in k20108 in recalc-weightings in k11783 in k10718 in k10715 in k7274 in k7271 in k6978 in k6975 in k6971 in k6680 in k6677 in k6674 in k6671 */
static void C_ccall f_20098(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_20098,2,t0,t1);}
t2=(C_word)C_a_i_plus(&a,2,((C_word*)((C_word*)t0)[5])[1],t1);
t3=C_mutate(((C_word *)((C_word*)t0)[5])+1,t2);
t4=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_20083,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],tmp=(C_word)a,a+=5,tmp);
t5=(C_word)C_i_car(((C_word*)t0)[4]);
C_trace("ChickenBridge.scm: 379  random-item-index-set!");
f_19069(t4,t5,((C_word*)((C_word*)t0)[5])[1]);}

/* k20081 in k20096 in do2538 in k20108 in recalc-weightings in k11783 in k10718 in k10715 in k7274 in k7271 in k6978 in k6975 in k6971 in k6680 in k6677 in k6674 in k6671 */
static void C_ccall f_20083(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word *a;
t2=(C_word)C_i_cdr(((C_word*)t0)[4]);
t3=((C_word*)((C_word*)t0)[3])[1];
f_20069(t3,((C_word*)t0)[2],t2);}

/* k20005 in k20108 in recalc-weightings in k11783 in k10718 in k10715 in k7274 in k7271 in k6978 in k6975 in k6971 in k6680 in k6677 in k6674 in k6671 */
static void C_ccall f_20007(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[8],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_20007,2,t0,t1);}
if(C_truep(((C_word*)t0)[6])){
t2=C_SCHEME_UNDEFINED;
t3=(*a=C_VECTOR_TYPE|1,a[1]=t2,tmp=(C_word)a,a+=2,tmp);
t4=C_set_block_item(t3,0,(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_20015,a[2]=((C_word*)t0)[4],a[3]=t3,a[4]=((C_word*)t0)[5],a[5]=((C_word)li285),tmp=(C_word)a,a+=6,tmp));
t5=((C_word*)t3)[1];
f_20015(t5,((C_word*)t0)[3],((C_word*)t0)[2],C_fix(0),C_fix(0));}
else{
C_trace("ChickenBridge.scm: 379  pattern-cache-set!");
f_15755(((C_word*)t0)[3],((C_word*)t0)[5],((C_word*)((C_word*)t0)[4])[1]);}}

/* do2544 in k20005 in k20108 in recalc-weightings in k11783 in k10718 in k10715 in k7274 in k7271 in k6978 in k6975 in k6971 in k6680 in k6677 in k6674 in k6671 */
static void C_fcall f_20015(C_word t0,C_word t1,C_word t2,C_word t3,C_word t4){
C_word tmp;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word ab[15],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_20015,NULL,5,t0,t1,t2,t3,t4);}
t5=(*a=C_VECTOR_TYPE|1,a[1]=t3,tmp=(C_word)a,a+=2,tmp);
t6=(*a=C_VECTOR_TYPE|1,a[1]=t4,tmp=(C_word)a,a+=2,tmp);
if(C_truep((C_word)C_i_nullp(t2))){
C_trace("ChickenBridge.scm: 379  pattern-cache-set!");
f_15755(t1,((C_word*)t0)[4],((C_word*)t6)[1]);}
else{
t7=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_20048,a[2]=t1,a[3]=((C_word*)t0)[3],a[4]=t2,a[5]=t6,a[6]=t5,tmp=(C_word)a,a+=7,tmp);
t8=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_20060,a[2]=t7,a[3]=((C_word*)t0)[2],tmp=(C_word)a,a+=4,tmp);
t9=(C_word)C_i_car(t2);
C_trace("ChickenBridge.scm: 379  random-item-index");
f_19078(t8,t9);}}

/* k20058 in do2544 in k20005 in k20108 in recalc-weightings in k11783 in k10718 in k10715 in k7274 in k7271 in k6978 in k6975 in k6971 in k6680 in k6677 in k6674 in k6671 */
static void C_ccall f_20060(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[8],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_20060,2,t0,t1);}
t2=(C_word)C_a_i_divide(&a,2,t1,((C_word*)((C_word*)t0)[3])[1]);
t3=(C_word)C_a_i_times(&a,2,t2,C_retrieve(lf[124]));
C_trace("ChickenBridge.scm: 379  floor");
t4=*((C_word*)lf[201]+1);
((C_proc3)C_retrieve_proc(t4))(3,t4,((C_word*)t0)[2],t3);}

/* k20046 in do2544 in k20005 in k20108 in recalc-weightings in k11783 in k10718 in k10715 in k7274 in k7271 in k6978 in k6975 in k6971 in k6680 in k6677 in k6674 in k6671 */
static void C_ccall f_20048(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_20048,2,t0,t1);}
t2=(C_word)C_i_inexact_to_exact(t1);
t3=C_mutate(((C_word *)((C_word*)t0)[6])+1,t2);
t4=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_20032,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[5],tmp=(C_word)a,a+=7,tmp);
t5=(C_word)C_i_car(((C_word*)t0)[4]);
C_trace("ChickenBridge.scm: 379  random-item-index-set!");
f_19069(t4,t5,((C_word*)((C_word*)t0)[6])[1]);}

/* k20030 in k20046 in do2544 in k20005 in k20108 in recalc-weightings in k11783 in k10718 in k10715 in k7274 in k7271 in k6978 in k6975 in k6971 in k6680 in k6677 in k6674 in k6671 */
static void C_ccall f_20032(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,((C_word*)((C_word*)t0)[5])[1]);
t3=(C_word)C_i_cdr(((C_word*)t0)[4]);
t4=((C_word*)((C_word*)t0)[3])[1];
f_20015(t4,((C_word*)t0)[2],t3,((C_word*)((C_word*)t0)[5])[1],((C_word*)((C_word*)t0)[6])[1]);}

/* make-weighting in k11783 in k10718 in k10715 in k7274 in k7271 in k6978 in k6975 in k6971 in k6680 in k6677 in k6674 in k6671 */
static void C_ccall f_19233(C_word c,C_word t0,C_word t1,C_word t2,...){
C_word tmp;
C_word t3;
va_list v;
C_word *a,c2=c;
C_save_rest(t2,c2,3);
if(c<3) C_bad_min_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_demand(c*C_SIZEOF_PAIR+7)){
C_save_and_reclaim((void*)tr3r,(void*)f_19233r,3,t0,t1,t2);}
else{
a=C_alloc((c-3)*3);
t3=C_restore_rest(a,C_rest_count(0));
f_19233r(t0,t1,t2,t3);}}

static void C_ccall f_19233r(C_word t0,C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word t6;
C_word *a=C_alloc(7);
t4=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_19237,a[2]=t1,a[3]=t3,tmp=(C_word)a,a+=4,tmp);
t5=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_19550,a[2]=((C_word)li283),tmp=(C_word)a,a+=3,tmp);
C_trace("map");
t6=*((C_word*)lf[17]+1);
((C_proc4)(void*)(*((C_word*)t6+1)))(4,t6,t4,t5,t2);}

/* %make-random-item in make-weighting in k11783 in k10718 in k10715 in k7274 in k7271 in k6978 in k6975 in k6971 in k6680 in k6677 in k6674 in k6671 */
static void C_ccall f_19550(C_word c,C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word ab[9],*a=ab;
if(c!=3) C_bad_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr3,(void*)f_19550,3,t0,t1,t2);}
t3=C_SCHEME_FALSE;
t4=(*a=C_VECTOR_TYPE|1,a[1]=t3,tmp=(C_word)a,a+=2,tmp);
t5=C_SCHEME_END_OF_LIST;
t6=(*a=C_VECTOR_TYPE|1,a[1]=t5,tmp=(C_word)a,a+=2,tmp);
t7=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_19557,a[2]=t4,a[3]=t1,a[4]=t6,tmp=(C_word)a,a+=5,tmp);
if(C_truep((C_word)C_i_pairp(t2))){
t8=(C_word)C_i_car(t2);
t9=C_set_block_item(t4,0,t8);
t10=(C_word)C_i_cdr(t2);
t11=C_set_block_item(t6,0,t10);
t12=t7;
f_19557(t12,t11);}
else{
t8=C_set_block_item(t4,0,t2);
t9=t7;
f_19557(t9,t8);}}

/* k19555 in %make-random-item in make-weighting in k11783 in k10718 in k10715 in k7274 in k7271 in k6978 in k6975 in k6971 in k6680 in k6677 in k6674 in k6671 */
static void C_fcall f_19557(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word t14;
C_word t15;
C_word t16;
C_word t17;
C_word t18;
C_word t19;
C_word t20;
C_word t21;
C_word t22;
C_word t23;
C_word t24;
C_word t25;
C_word t26;
C_word t27;
C_word ab[59],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_19557,NULL,2,t0,t1);}
t2=C_fix(1);
t3=(*a=C_VECTOR_TYPE|1,a[1]=t2,tmp=(C_word)a,a+=2,tmp);
t4=C_fix(1);
t5=(*a=C_VECTOR_TYPE|1,a[1]=t4,tmp=(C_word)a,a+=2,tmp);
t6=C_SCHEME_FALSE;
t7=(*a=C_VECTOR_TYPE|1,a[1]=t6,tmp=(C_word)a,a+=2,tmp);
t8=C_SCHEME_FALSE;
t9=(*a=C_VECTOR_TYPE|1,a[1]=t8,tmp=(C_word)a,a+=2,tmp);
t10=C_SCHEME_FALSE;
t11=(*a=C_VECTOR_TYPE|1,a[1]=t10,tmp=(C_word)a,a+=2,tmp);
t12=C_SCHEME_FALSE;
t13=(*a=C_VECTOR_TYPE|1,a[1]=t12,tmp=(C_word)a,a+=2,tmp);
t14=((C_word*)((C_word*)t0)[4])[1];
t15=(*a=C_VECTOR_TYPE|1,a[1]=t14,tmp=(C_word)a,a+=2,tmp);
t16=C_SCHEME_FALSE;
t17=(*a=C_VECTOR_TYPE|1,a[1]=t16,tmp=(C_word)a,a+=2,tmp);
t18=(*a=C_CLOSURE_TYPE|12,a[1]=(C_word)f_19560,a[2]=t13,a[3]=t11,a[4]=t17,a[5]=t9,a[6]=((C_word*)t0)[4],a[7]=t15,a[8]=t7,a[9]=t5,a[10]=t3,a[11]=((C_word*)t0)[2],a[12]=((C_word*)t0)[3],tmp=(C_word)a,a+=13,tmp);
if(C_truep((C_word)C_i_nullp(((C_word*)t15)[1]))){
t19=t18;
f_19560(t19,C_SCHEME_UNDEFINED);}
else{
t19=(C_word)C_i_car(((C_word*)t15)[1]);
t20=(C_word)C_eqp(t19,lf[373]);
if(C_truep(t20)){
t21=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_19863,a[2]=((C_word*)t0)[4],a[3]=t18,a[4]=t15,a[5]=t17,a[6]=t9,a[7]=t3,tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)t9)[1])){
C_trace("ChickenBridge.scm: 379  error");
t22=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t22))(4,t22,t21,lf[19],lf[373]);}
else{
t22=t21;
f_19863(2,t22,C_SCHEME_UNDEFINED);}}
else{
t21=(C_word)C_eqp(t19,lf[247]);
if(C_truep(t21)){
t22=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_19898,a[2]=((C_word*)t0)[4],a[3]=t18,a[4]=t15,a[5]=t17,a[6]=t11,a[7]=t5,tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)t11)[1])){
C_trace("ChickenBridge.scm: 379  error");
t23=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t23))(4,t23,t22,lf[19],lf[247]);}
else{
t23=t22;
f_19898(2,t23,C_SCHEME_UNDEFINED);}}
else{
t22=(C_word)C_eqp(t19,lf[248]);
if(C_truep(t22)){
t23=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_19933,a[2]=((C_word*)t0)[4],a[3]=t18,a[4]=t15,a[5]=t17,a[6]=t13,a[7]=t7,tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)t13)[1])){
C_trace("ChickenBridge.scm: 379  error");
t24=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t24))(4,t24,t23,lf[19],lf[248]);}
else{
t24=t23;
f_19933(2,t24,C_SCHEME_UNDEFINED);}}
else{
t23=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_19962,a[2]=t18,a[3]=t9,a[4]=t3,a[5]=t15,tmp=(C_word)a,a+=6,tmp);
if(C_truep(((C_word*)t17)[1])){
C_trace("ChickenBridge.scm: 379  error");
t24=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t24))(4,t24,t23,lf[10],((C_word*)((C_word*)t0)[4])[1]);}
else{
t24=t23;
f_19962(2,t24,C_SCHEME_UNDEFINED);}}}}}}

/* k19960 in k19555 in %make-random-item in make-weighting in k11783 in k10718 in k10715 in k7274 in k7271 in k6978 in k6975 in k6971 in k6680 in k6677 in k6674 in k6671 */
static void C_ccall f_19962(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_19962,2,t0,t1);}
t2=(C_word)C_i_car(((C_word*)((C_word*)t0)[5])[1]);
t3=C_mutate(((C_word *)((C_word*)t0)[4])+1,t2);
t4=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_19969,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[5],a[4]=((C_word*)t0)[3],tmp=(C_word)a,a+=5,tmp);
t5=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_19977,a[2]=((C_word*)t0)[4],a[3]=t4,tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 379  keyword?");
t6=C_retrieve(lf[13]);
((C_proc3)C_retrieve_proc(t6))(3,t6,t5,((C_word*)((C_word*)t0)[4])[1]);}

/* k19975 in k19960 in k19555 in %make-random-item in make-weighting in k11783 in k10718 in k10715 in k7274 in k7271 in k6978 in k6975 in k6971 in k6680 in k6677 in k6674 in k6671 */
static void C_ccall f_19977(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
if(C_truep(t1)){
C_trace("ChickenBridge.scm: 379  error");
t2=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t2))(4,t2,((C_word*)t0)[3],lf[14],((C_word*)((C_word*)t0)[2])[1]);}
else{
t2=((C_word*)t0)[3];
f_19969(2,t2,C_SCHEME_UNDEFINED);}}

/* k19967 in k19960 in k19555 in %make-random-item in make-weighting in k11783 in k10718 in k10715 in k7274 in k7271 in k6978 in k6975 in k6971 in k6680 in k6677 in k6674 in k6671 */
static void C_ccall f_19969(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word *a;
t2=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[3])[1]);
t4=C_mutate(((C_word *)((C_word*)t0)[3])+1,t3);
t5=((C_word*)t0)[2];
f_19560(t5,t4);}

/* k19931 in k19555 in %make-random-item in make-weighting in k11783 in k10718 in k10715 in k7274 in k7271 in k6978 in k6975 in k6971 in k6680 in k6677 in k6674 in k6671 */
static void C_ccall f_19933(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_19933,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_19937,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("ChickenBridge.scm: 379  error");
t4=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[21],((C_word*)((C_word*)t0)[2])[1]);}
else{
t4=t2;
f_19937(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k19935 in k19931 in k19555 in %make-random-item in make-weighting in k11783 in k10718 in k10715 in k7274 in k7271 in k6978 in k6975 in k6971 in k6680 in k6677 in k6674 in k6671 */
static void C_ccall f_19937(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_19560(t7,t6);}

/* k19896 in k19555 in %make-random-item in make-weighting in k11783 in k10718 in k10715 in k7274 in k7271 in k6978 in k6975 in k6971 in k6680 in k6677 in k6674 in k6671 */
static void C_ccall f_19898(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_19898,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_19902,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("ChickenBridge.scm: 379  error");
t4=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[21],((C_word*)((C_word*)t0)[2])[1]);}
else{
t4=t2;
f_19902(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k19900 in k19896 in k19555 in %make-random-item in make-weighting in k11783 in k10718 in k10715 in k7274 in k7271 in k6978 in k6975 in k6971 in k6680 in k6677 in k6674 in k6671 */
static void C_ccall f_19902(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_19560(t7,t6);}

/* k19861 in k19555 in %make-random-item in make-weighting in k11783 in k10718 in k10715 in k7274 in k7271 in k6978 in k6975 in k6971 in k6680 in k6677 in k6674 in k6671 */
static void C_ccall f_19863(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_19863,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_19867,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("ChickenBridge.scm: 379  error");
t4=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[21],((C_word*)((C_word*)t0)[2])[1]);}
else{
t4=t2;
f_19867(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k19865 in k19861 in k19555 in %make-random-item in make-weighting in k11783 in k10718 in k10715 in k7274 in k7271 in k6978 in k6975 in k6971 in k6680 in k6677 in k6674 in k6671 */
static void C_ccall f_19867(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_19560(t7,t6);}

/* k19558 in k19555 in %make-random-item in make-weighting in k11783 in k10718 in k10715 in k7274 in k7271 in k6978 in k6975 in k6971 in k6680 in k6677 in k6674 in k6671 */
static void C_fcall f_19560(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word ab[43],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_19560,NULL,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|12,a[1]=(C_word)f_19563,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],a[7]=((C_word*)t0)[7],a[8]=((C_word*)t0)[8],a[9]=((C_word*)t0)[9],a[10]=((C_word*)t0)[10],a[11]=((C_word*)t0)[11],a[12]=((C_word*)t0)[12],tmp=(C_word)a,a+=13,tmp);
if(C_truep((C_word)C_i_nullp(((C_word*)((C_word*)t0)[7])[1]))){
t3=t2;
f_19563(t3,C_SCHEME_UNDEFINED);}
else{
t3=(C_word)C_i_car(((C_word*)((C_word*)t0)[7])[1]);
t4=(C_word)C_eqp(t3,lf[373]);
if(C_truep(t4)){
t5=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_19728,a[2]=((C_word*)t0)[6],a[3]=t2,a[4]=((C_word*)t0)[7],a[5]=((C_word*)t0)[4],a[6]=((C_word*)t0)[5],a[7]=((C_word*)t0)[10],tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)((C_word*)t0)[5])[1])){
C_trace("ChickenBridge.scm: 379  error");
t6=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t6))(4,t6,t5,lf[19],lf[373]);}
else{
t6=t5;
f_19728(2,t6,C_SCHEME_UNDEFINED);}}
else{
t5=(C_word)C_eqp(t3,lf[247]);
if(C_truep(t5)){
t6=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_19763,a[2]=((C_word*)t0)[6],a[3]=t2,a[4]=((C_word*)t0)[7],a[5]=((C_word*)t0)[4],a[6]=((C_word*)t0)[3],a[7]=((C_word*)t0)[9],tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)((C_word*)t0)[3])[1])){
C_trace("ChickenBridge.scm: 379  error");
t7=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t7))(4,t7,t6,lf[19],lf[247]);}
else{
t7=t6;
f_19763(2,t7,C_SCHEME_UNDEFINED);}}
else{
t6=(C_word)C_eqp(t3,lf[248]);
if(C_truep(t6)){
t7=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_19798,a[2]=((C_word*)t0)[6],a[3]=t2,a[4]=((C_word*)t0)[7],a[5]=((C_word*)t0)[4],a[6]=((C_word*)t0)[2],a[7]=((C_word*)t0)[8],tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)((C_word*)t0)[2])[1])){
C_trace("ChickenBridge.scm: 379  error");
t8=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t8))(4,t8,t7,lf[19],lf[248]);}
else{
t8=t7;
f_19798(2,t8,C_SCHEME_UNDEFINED);}}
else{
t7=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_19827,a[2]=t2,a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[9],a[5]=((C_word*)t0)[7],tmp=(C_word)a,a+=6,tmp);
if(C_truep(((C_word*)((C_word*)t0)[4])[1])){
C_trace("ChickenBridge.scm: 379  error");
t8=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t8))(4,t8,t7,lf[10],((C_word*)((C_word*)t0)[6])[1]);}
else{
t8=t7;
f_19827(2,t8,C_SCHEME_UNDEFINED);}}}}}}

/* k19825 in k19558 in k19555 in %make-random-item in make-weighting in k11783 in k10718 in k10715 in k7274 in k7271 in k6978 in k6975 in k6971 in k6680 in k6677 in k6674 in k6671 */
static void C_ccall f_19827(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_19827,2,t0,t1);}
t2=(C_word)C_i_car(((C_word*)((C_word*)t0)[5])[1]);
t3=C_mutate(((C_word *)((C_word*)t0)[4])+1,t2);
t4=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_19834,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[5],a[4]=((C_word*)t0)[3],tmp=(C_word)a,a+=5,tmp);
t5=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_19842,a[2]=((C_word*)t0)[4],a[3]=t4,tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 379  keyword?");
t6=C_retrieve(lf[13]);
((C_proc3)C_retrieve_proc(t6))(3,t6,t5,((C_word*)((C_word*)t0)[4])[1]);}

/* k19840 in k19825 in k19558 in k19555 in %make-random-item in make-weighting in k11783 in k10718 in k10715 in k7274 in k7271 in k6978 in k6975 in k6971 in k6680 in k6677 in k6674 in k6671 */
static void C_ccall f_19842(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
if(C_truep(t1)){
C_trace("ChickenBridge.scm: 379  error");
t2=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t2))(4,t2,((C_word*)t0)[3],lf[14],((C_word*)((C_word*)t0)[2])[1]);}
else{
t2=((C_word*)t0)[3];
f_19834(2,t2,C_SCHEME_UNDEFINED);}}

/* k19832 in k19825 in k19558 in k19555 in %make-random-item in make-weighting in k11783 in k10718 in k10715 in k7274 in k7271 in k6978 in k6975 in k6971 in k6680 in k6677 in k6674 in k6671 */
static void C_ccall f_19834(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word *a;
t2=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[3])[1]);
t4=C_mutate(((C_word *)((C_word*)t0)[3])+1,t3);
t5=((C_word*)t0)[2];
f_19563(t5,t4);}

/* k19796 in k19558 in k19555 in %make-random-item in make-weighting in k11783 in k10718 in k10715 in k7274 in k7271 in k6978 in k6975 in k6971 in k6680 in k6677 in k6674 in k6671 */
static void C_ccall f_19798(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_19798,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_19802,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("ChickenBridge.scm: 379  error");
t4=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[21],((C_word*)((C_word*)t0)[2])[1]);}
else{
t4=t2;
f_19802(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k19800 in k19796 in k19558 in k19555 in %make-random-item in make-weighting in k11783 in k10718 in k10715 in k7274 in k7271 in k6978 in k6975 in k6971 in k6680 in k6677 in k6674 in k6671 */
static void C_ccall f_19802(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_19563(t7,t6);}

/* k19761 in k19558 in k19555 in %make-random-item in make-weighting in k11783 in k10718 in k10715 in k7274 in k7271 in k6978 in k6975 in k6971 in k6680 in k6677 in k6674 in k6671 */
static void C_ccall f_19763(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_19763,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_19767,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("ChickenBridge.scm: 379  error");
t4=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[21],((C_word*)((C_word*)t0)[2])[1]);}
else{
t4=t2;
f_19767(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k19765 in k19761 in k19558 in k19555 in %make-random-item in make-weighting in k11783 in k10718 in k10715 in k7274 in k7271 in k6978 in k6975 in k6971 in k6680 in k6677 in k6674 in k6671 */
static void C_ccall f_19767(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_19563(t7,t6);}

/* k19726 in k19558 in k19555 in %make-random-item in make-weighting in k11783 in k10718 in k10715 in k7274 in k7271 in k6978 in k6975 in k6971 in k6680 in k6677 in k6674 in k6671 */
static void C_ccall f_19728(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_19728,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_19732,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("ChickenBridge.scm: 379  error");
t4=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[21],((C_word*)((C_word*)t0)[2])[1]);}
else{
t4=t2;
f_19732(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k19730 in k19726 in k19558 in k19555 in %make-random-item in make-weighting in k11783 in k10718 in k10715 in k7274 in k7271 in k6978 in k6975 in k6971 in k6680 in k6677 in k6674 in k6671 */
static void C_ccall f_19732(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_19563(t7,t6);}

/* k19561 in k19558 in k19555 in %make-random-item in make-weighting in k11783 in k10718 in k10715 in k7274 in k7271 in k6978 in k6975 in k6971 in k6680 in k6677 in k6674 in k6671 */
static void C_fcall f_19563(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word ab[39],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_19563,NULL,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|8,a[1]=(C_word)f_19566,a[2]=((C_word*)t0)[6],a[3]=((C_word*)t0)[7],a[4]=((C_word*)t0)[8],a[5]=((C_word*)t0)[9],a[6]=((C_word*)t0)[10],a[7]=((C_word*)t0)[11],a[8]=((C_word*)t0)[12],tmp=(C_word)a,a+=9,tmp);
if(C_truep((C_word)C_i_nullp(((C_word*)((C_word*)t0)[7])[1]))){
t3=t2;
f_19566(t3,C_SCHEME_UNDEFINED);}
else{
t3=(C_word)C_i_car(((C_word*)((C_word*)t0)[7])[1]);
t4=(C_word)C_eqp(t3,lf[373]);
if(C_truep(t4)){
t5=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_19593,a[2]=((C_word*)t0)[6],a[3]=t2,a[4]=((C_word*)t0)[7],a[5]=((C_word*)t0)[4],a[6]=((C_word*)t0)[5],a[7]=((C_word*)t0)[10],tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)((C_word*)t0)[5])[1])){
C_trace("ChickenBridge.scm: 379  error");
t6=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t6))(4,t6,t5,lf[19],lf[373]);}
else{
t6=t5;
f_19593(2,t6,C_SCHEME_UNDEFINED);}}
else{
t5=(C_word)C_eqp(t3,lf[247]);
if(C_truep(t5)){
t6=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_19628,a[2]=((C_word*)t0)[6],a[3]=t2,a[4]=((C_word*)t0)[7],a[5]=((C_word*)t0)[4],a[6]=((C_word*)t0)[3],a[7]=((C_word*)t0)[9],tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)((C_word*)t0)[3])[1])){
C_trace("ChickenBridge.scm: 379  error");
t7=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t7))(4,t7,t6,lf[19],lf[247]);}
else{
t7=t6;
f_19628(2,t7,C_SCHEME_UNDEFINED);}}
else{
t6=(C_word)C_eqp(t3,lf[248]);
if(C_truep(t6)){
t7=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_19663,a[2]=((C_word*)t0)[6],a[3]=t2,a[4]=((C_word*)t0)[7],a[5]=((C_word*)t0)[4],a[6]=((C_word*)t0)[2],a[7]=((C_word*)t0)[8],tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)((C_word*)t0)[2])[1])){
C_trace("ChickenBridge.scm: 379  error");
t8=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t8))(4,t8,t7,lf[19],lf[248]);}
else{
t8=t7;
f_19663(2,t8,C_SCHEME_UNDEFINED);}}
else{
t7=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_19692,a[2]=t2,a[3]=((C_word*)t0)[2],a[4]=((C_word*)t0)[8],a[5]=((C_word*)t0)[7],tmp=(C_word)a,a+=6,tmp);
if(C_truep(((C_word*)((C_word*)t0)[4])[1])){
C_trace("ChickenBridge.scm: 379  error");
t8=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t8))(4,t8,t7,lf[10],((C_word*)((C_word*)t0)[6])[1]);}
else{
t8=t7;
f_19692(2,t8,C_SCHEME_UNDEFINED);}}}}}}

/* k19690 in k19561 in k19558 in k19555 in %make-random-item in make-weighting in k11783 in k10718 in k10715 in k7274 in k7271 in k6978 in k6975 in k6971 in k6680 in k6677 in k6674 in k6671 */
static void C_ccall f_19692(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_19692,2,t0,t1);}
t2=(C_word)C_i_car(((C_word*)((C_word*)t0)[5])[1]);
t3=C_mutate(((C_word *)((C_word*)t0)[4])+1,t2);
t4=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_19699,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[5],a[4]=((C_word*)t0)[3],tmp=(C_word)a,a+=5,tmp);
t5=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_19707,a[2]=((C_word*)t0)[4],a[3]=t4,tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 379  keyword?");
t6=C_retrieve(lf[13]);
((C_proc3)C_retrieve_proc(t6))(3,t6,t5,((C_word*)((C_word*)t0)[4])[1]);}

/* k19705 in k19690 in k19561 in k19558 in k19555 in %make-random-item in make-weighting in k11783 in k10718 in k10715 in k7274 in k7271 in k6978 in k6975 in k6971 in k6680 in k6677 in k6674 in k6671 */
static void C_ccall f_19707(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
if(C_truep(t1)){
C_trace("ChickenBridge.scm: 379  error");
t2=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t2))(4,t2,((C_word*)t0)[3],lf[14],((C_word*)((C_word*)t0)[2])[1]);}
else{
t2=((C_word*)t0)[3];
f_19699(2,t2,C_SCHEME_UNDEFINED);}}

/* k19697 in k19690 in k19561 in k19558 in k19555 in %make-random-item in make-weighting in k11783 in k10718 in k10715 in k7274 in k7271 in k6978 in k6975 in k6971 in k6680 in k6677 in k6674 in k6671 */
static void C_ccall f_19699(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word *a;
t2=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[3])[1]);
t4=C_mutate(((C_word *)((C_word*)t0)[3])+1,t3);
t5=((C_word*)t0)[2];
f_19566(t5,t4);}

/* k19661 in k19561 in k19558 in k19555 in %make-random-item in make-weighting in k11783 in k10718 in k10715 in k7274 in k7271 in k6978 in k6975 in k6971 in k6680 in k6677 in k6674 in k6671 */
static void C_ccall f_19663(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_19663,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_19667,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("ChickenBridge.scm: 379  error");
t4=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[21],((C_word*)((C_word*)t0)[2])[1]);}
else{
t4=t2;
f_19667(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k19665 in k19661 in k19561 in k19558 in k19555 in %make-random-item in make-weighting in k11783 in k10718 in k10715 in k7274 in k7271 in k6978 in k6975 in k6971 in k6680 in k6677 in k6674 in k6671 */
static void C_ccall f_19667(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_19566(t7,t6);}

/* k19626 in k19561 in k19558 in k19555 in %make-random-item in make-weighting in k11783 in k10718 in k10715 in k7274 in k7271 in k6978 in k6975 in k6971 in k6680 in k6677 in k6674 in k6671 */
static void C_ccall f_19628(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_19628,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_19632,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("ChickenBridge.scm: 379  error");
t4=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[21],((C_word*)((C_word*)t0)[2])[1]);}
else{
t4=t2;
f_19632(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k19630 in k19626 in k19561 in k19558 in k19555 in %make-random-item in make-weighting in k11783 in k10718 in k10715 in k7274 in k7271 in k6978 in k6975 in k6971 in k6680 in k6677 in k6674 in k6671 */
static void C_ccall f_19632(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_19566(t7,t6);}

/* k19591 in k19561 in k19558 in k19555 in %make-random-item in make-weighting in k11783 in k10718 in k10715 in k7274 in k7271 in k6978 in k6975 in k6971 in k6680 in k6677 in k6674 in k6671 */
static void C_ccall f_19593(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_19593,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_19597,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("ChickenBridge.scm: 379  error");
t4=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[21],((C_word*)((C_word*)t0)[2])[1]);}
else{
t4=t2;
f_19597(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k19595 in k19591 in k19561 in k19558 in k19555 in %make-random-item in make-weighting in k11783 in k10718 in k10715 in k7274 in k7271 in k6978 in k6975 in k6971 in k6680 in k6677 in k6674 in k6671 */
static void C_ccall f_19597(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_19566(t7,t6);}

/* k19564 in k19561 in k19558 in k19555 in %make-random-item in make-weighting in k11783 in k10718 in k10715 in k7274 in k7271 in k6978 in k6975 in k6971 in k6680 in k6677 in k6674 in k6671 */
static void C_fcall f_19566(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_19566,NULL,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_19569,a[2]=((C_word*)t0)[4],a[3]=((C_word*)t0)[5],a[4]=((C_word*)t0)[6],a[5]=((C_word*)t0)[7],a[6]=((C_word*)t0)[8],tmp=(C_word)a,a+=7,tmp);
if(C_truep((C_word)C_i_nullp(((C_word*)((C_word*)t0)[3])[1]))){
t3=t2;
f_19569(2,t3,C_SCHEME_UNDEFINED);}
else{
C_trace("ChickenBridge.scm: 379  error");
t3=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t3))(4,t3,t2,lf[5],((C_word*)((C_word*)t0)[2])[1]);}}

/* k19567 in k19564 in k19561 in k19558 in k19555 in %make-random-item in make-weighting in k11783 in k10718 in k10715 in k7274 in k7271 in k6978 in k6975 in k6971 in k6680 in k6677 in k6674 in k6671 */
static void C_ccall f_19569(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word ab[10],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_19569,2,t0,t1);}
t2=((C_word*)t0)[6];
t3=((C_word*)((C_word*)t0)[5])[1];
t4=((C_word*)((C_word*)t0)[4])[1];
t5=((C_word*)((C_word*)t0)[3])[1];
t6=((C_word*)((C_word*)t0)[2])[1];
t7=t2;
((C_proc2)(void*)(*((C_word*)t7+1)))(2,t7,(C_word)C_a_i_record(&a,9,lf[362],t3,C_SCHEME_FALSE,t4,t5,t6,C_fix(0),C_SCHEME_FALSE,C_SCHEME_FALSE));}

/* k19235 in make-weighting in k11783 in k10718 in k10715 in k7274 in k7271 in k6978 in k6975 in k6971 in k6680 in k6677 in k6674 in k6671 */
static void C_ccall f_19237(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[5],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_19237,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_19240,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=t1,tmp=(C_word)a,a+=5,tmp);
C_trace("ChickenBridge.scm: 379  %alloc-pattern");
f_15819(t2);}

/* k19238 in k19235 in make-weighting in k11783 in k10718 in k10715 in k7274 in k7271 in k6978 in k6975 in k6971 in k6680 in k6677 in k6674 in k6671 */
static void C_ccall f_19240(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word ab[24],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_19240,2,t0,t1);}
t2=(C_word)C_i_length(((C_word*)t0)[4]);
t3=C_SCHEME_FALSE;
t4=(*a=C_VECTOR_TYPE|1,a[1]=t3,tmp=(C_word)a,a+=2,tmp);
t5=C_SCHEME_TRUE;
t6=(*a=C_VECTOR_TYPE|1,a[1]=t5,tmp=(C_word)a,a+=2,tmp);
t7=C_fix(0);
t8=(*a=C_VECTOR_TYPE|1,a[1]=t7,tmp=(C_word)a,a+=2,tmp);
t9=C_fix(0);
t10=(*a=C_VECTOR_TYPE|1,a[1]=t9,tmp=(C_word)a,a+=2,tmp);
t11=(*a=C_CLOSURE_TYPE|10,a[1]=(C_word)f_19246,a[2]=t10,a[3]=((C_word*)t0)[4],a[4]=t6,a[5]=t1,a[6]=((C_word*)t0)[2],a[7]=((C_word*)t0)[3],a[8]=t4,a[9]=t2,a[10]=t8,tmp=(C_word)a,a+=11,tmp);
t12=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_19514,a[2]=t8,a[3]=t6,a[4]=((C_word)li282),tmp=(C_word)a,a+=5,tmp);
C_trace("for-each");
t13=*((C_word*)lf[237]+1);
((C_proc4)(void*)(*((C_word*)t13+1)))(4,t13,t11,t12,((C_word*)t0)[4]);}

/* a19513 in k19238 in k19235 in make-weighting in k11783 in k10718 in k10715 in k7274 in k7271 in k6978 in k6975 in k6971 in k6680 in k6677 in k6674 in k6671 */
static void C_ccall f_19514(C_word c,C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word ab[6],*a=ab;
if(c!=3) C_bad_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr3,(void*)f_19514,3,t0,t1,t2);}
t3=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_19518,a[2]=t2,a[3]=((C_word*)t0)[2],a[4]=((C_word*)t0)[3],a[5]=t1,tmp=(C_word)a,a+=6,tmp);
C_trace("ChickenBridge.scm: 379  random-item-min");
f_19114(t3,t2);}

/* k19516 in a19513 in k19238 in k19235 in make-weighting in k11783 in k10718 in k10715 in k7274 in k7271 in k6978 in k6975 in k6971 in k6680 in k6677 in k6674 in k6671 */
static void C_ccall f_19518(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[6],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_19518,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_19521,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],tmp=(C_word)a,a+=6,tmp);
C_trace("ChickenBridge.scm: 379  random-item-max");
f_19132(t2,((C_word*)t0)[2]);}

/* k19519 in k19516 in a19513 in k19238 in k19235 in make-weighting in k11783 in k10718 in k10715 in k7274 in k7271 in k6978 in k6975 in k6971 in k6680 in k6677 in k6674 in k6671 */
static void C_ccall f_19521(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[6],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_19521,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_19524,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],tmp=(C_word)a,a+=6,tmp);
C_trace("ChickenBridge.scm: 379  random-item-weight");
f_19096(t2,((C_word*)t0)[2]);}

/* k19522 in k19519 in k19516 in a19513 in k19238 in k19235 in make-weighting in k11783 in k10718 in k10715 in k7274 in k7271 in k6978 in k6975 in k6971 in k6680 in k6677 in k6674 in k6671 */
static void C_ccall f_19524(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[6],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_19524,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_19527,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=t1,tmp=(C_word)a,a+=6,tmp);
C_trace("ChickenBridge.scm: 379  random-item-datum");
f_19060(t2,((C_word*)t0)[2]);}

/* k19525 in k19522 in k19519 in k19516 in a19513 in k19238 in k19235 in make-weighting in k11783 in k10718 in k10715 in k7274 in k7271 in k6978 in k6975 in k6971 in k6680 in k6677 in k6674 in k6671 */
static void C_ccall f_19527(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_19527,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_19530,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],tmp=(C_word)a,a+=5,tmp);
t3=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_19540,a[2]=t2,a[3]=((C_word*)t0)[2],tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 379  pattern?");
f_15515(t3,t1);}

/* k19538 in k19525 in k19522 in k19519 in k19516 in a19513 in k19238 in k19235 in make-weighting in k11783 in k10718 in k10715 in k7274 in k7271 in k6978 in k6975 in k6971 in k6680 in k6677 in k6674 in k6671 */
static void C_ccall f_19540(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[4],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_19540,2,t0,t1);}
if(C_truep(t1)){
t2=(C_word)C_a_i_plus(&a,2,((C_word*)((C_word*)t0)[3])[1],C_fix(1));
t3=C_mutate(((C_word *)((C_word*)t0)[3])+1,t2);
t4=((C_word*)t0)[2];
f_19530(t4,t3);}
else{
t2=((C_word*)t0)[2];
f_19530(t2,C_SCHEME_UNDEFINED);}}

/* k19528 in k19525 in k19522 in k19519 in k19516 in a19513 in k19238 in k19235 in make-weighting in k11783 in k10718 in k10715 in k7274 in k7271 in k6978 in k6975 in k6971 in k6680 in k6677 in k6674 in k6671 */
static void C_fcall f_19530(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word *a;
if(C_truep((C_word)C_i_numberp(((C_word*)t0)[4]))){
t2=((C_word*)t0)[3];
((C_proc2)(void*)(*((C_word*)t2+1)))(2,t2,C_SCHEME_UNDEFINED);}
else{
t2=C_set_block_item(((C_word*)t0)[2],0,C_SCHEME_FALSE);
t3=((C_word*)t0)[3];
((C_proc2)(void*)(*((C_word*)t3+1)))(2,t3,t2);}}

/* k19244 in k19238 in k19235 in make-weighting in k11783 in k10718 in k10715 in k7274 in k7271 in k6978 in k6975 in k6971 in k6680 in k6677 in k6674 in k6671 */
static void C_ccall f_19246(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word ab[14],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_19246,2,t0,t1);}
t2=(C_word)C_i_nequalp(((C_word*)((C_word*)t0)[10])[1],((C_word*)t0)[9]);
t3=(C_truep(t2)?C_fix(1):((C_word*)t0)[9]);
t4=C_mutate(((C_word *)((C_word*)t0)[8])+1,t3);
t5=(*a=C_CLOSURE_TYPE|9,a[1]=(C_word)f_19253,a[2]=((C_word*)t0)[8],a[3]=((C_word*)t0)[9],a[4]=((C_word*)t0)[2],a[5]=((C_word*)t0)[3],a[6]=((C_word*)t0)[4],a[7]=((C_word*)t0)[5],a[8]=((C_word*)t0)[6],a[9]=((C_word*)t0)[7],tmp=(C_word)a,a+=10,tmp);
if(C_truep(((C_word*)((C_word*)t0)[4])[1])){
t6=(C_word)C_a_i_bitwise_ior(&a,2,((C_word*)((C_word*)t0)[2])[1],C_fix(4));
t7=C_mutate(((C_word *)((C_word*)t0)[2])+1,t6);
t8=t5;
f_19253(t8,t7);}
else{
t6=t5;
f_19253(t6,C_SCHEME_UNDEFINED);}}

/* k19251 in k19244 in k19238 in k19235 in make-weighting in k11783 in k10718 in k10715 in k7274 in k7271 in k6978 in k6975 in k6971 in k6680 in k6677 in k6674 in k6671 */
static void C_fcall f_19253(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word t14;
C_word t15;
C_word t16;
C_word t17;
C_word t18;
C_word t19;
C_word t20;
C_word t21;
C_word ab[50],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_19253,NULL,2,t0,t1);}
t2=C_SCHEME_FALSE;
t3=(*a=C_VECTOR_TYPE|1,a[1]=t2,tmp=(C_word)a,a+=2,tmp);
t4=C_SCHEME_FALSE;
t5=(*a=C_VECTOR_TYPE|1,a[1]=t4,tmp=(C_word)a,a+=2,tmp);
t6=C_SCHEME_FALSE;
t7=(*a=C_VECTOR_TYPE|1,a[1]=t6,tmp=(C_word)a,a+=2,tmp);
t8=C_SCHEME_FALSE;
t9=(*a=C_VECTOR_TYPE|1,a[1]=t8,tmp=(C_word)a,a+=2,tmp);
t10=((C_word*)t0)[9];
t11=(*a=C_VECTOR_TYPE|1,a[1]=t10,tmp=(C_word)a,a+=2,tmp);
t12=C_SCHEME_FALSE;
t13=(*a=C_VECTOR_TYPE|1,a[1]=t12,tmp=(C_word)a,a+=2,tmp);
t14=(*a=C_CLOSURE_TYPE|15,a[1]=(C_word)f_19256,a[2]=t9,a[3]=t13,a[4]=t7,a[5]=((C_word*)t0)[9],a[6]=t11,a[7]=((C_word*)t0)[2],a[8]=((C_word*)t0)[3],a[9]=((C_word*)t0)[4],a[10]=t5,a[11]=t3,a[12]=((C_word*)t0)[5],a[13]=((C_word*)t0)[6],a[14]=((C_word*)t0)[7],a[15]=((C_word*)t0)[8],tmp=(C_word)a,a+=16,tmp);
if(C_truep((C_word)C_i_nullp(((C_word*)t11)[1]))){
t15=t14;
f_19256(t15,C_SCHEME_UNDEFINED);}
else{
t15=(C_word)C_i_car(((C_word*)t11)[1]);
t16=(C_word)C_eqp(t15,lf[344]);
if(C_truep(t16)){
t17=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_19420,a[2]=((C_word*)t0)[9],a[3]=t14,a[4]=t11,a[5]=t13,a[6]=t7,a[7]=t3,tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)t7)[1])){
C_trace("ChickenBridge.scm: 379  error");
t18=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t18))(4,t18,t17,lf[19],lf[344]);}
else{
t18=t17;
f_19420(2,t18,C_SCHEME_UNDEFINED);}}
else{
t17=(C_word)C_eqp(t15,lf[345]);
if(C_truep(t17)){
t18=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_19455,a[2]=((C_word*)t0)[9],a[3]=t14,a[4]=t11,a[5]=t13,a[6]=t9,a[7]=t5,tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)t9)[1])){
C_trace("ChickenBridge.scm: 379  error");
t19=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t19))(4,t19,t18,lf[19],lf[345]);}
else{
t19=t18;
f_19455(2,t19,C_SCHEME_UNDEFINED);}}
else{
t18=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_19484,a[2]=t14,a[3]=t7,a[4]=t3,a[5]=t11,tmp=(C_word)a,a+=6,tmp);
if(C_truep(((C_word*)t13)[1])){
C_trace("ChickenBridge.scm: 379  error");
t19=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t19))(4,t19,t18,lf[10],((C_word*)t0)[9]);}
else{
t19=t18;
f_19484(2,t19,C_SCHEME_UNDEFINED);}}}}}

/* k19482 in k19251 in k19244 in k19238 in k19235 in make-weighting in k11783 in k10718 in k10715 in k7274 in k7271 in k6978 in k6975 in k6971 in k6680 in k6677 in k6674 in k6671 */
static void C_ccall f_19484(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_19484,2,t0,t1);}
t2=(C_word)C_i_car(((C_word*)((C_word*)t0)[5])[1]);
t3=C_mutate(((C_word *)((C_word*)t0)[4])+1,t2);
t4=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_19491,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[5],a[4]=((C_word*)t0)[3],tmp=(C_word)a,a+=5,tmp);
t5=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_19499,a[2]=((C_word*)t0)[4],a[3]=t4,tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 379  keyword?");
t6=C_retrieve(lf[13]);
((C_proc3)C_retrieve_proc(t6))(3,t6,t5,((C_word*)((C_word*)t0)[4])[1]);}

/* k19497 in k19482 in k19251 in k19244 in k19238 in k19235 in make-weighting in k11783 in k10718 in k10715 in k7274 in k7271 in k6978 in k6975 in k6971 in k6680 in k6677 in k6674 in k6671 */
static void C_ccall f_19499(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
if(C_truep(t1)){
C_trace("ChickenBridge.scm: 379  error");
t2=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t2))(4,t2,((C_word*)t0)[3],lf[14],((C_word*)((C_word*)t0)[2])[1]);}
else{
t2=((C_word*)t0)[3];
f_19491(2,t2,C_SCHEME_UNDEFINED);}}

/* k19489 in k19482 in k19251 in k19244 in k19238 in k19235 in make-weighting in k11783 in k10718 in k10715 in k7274 in k7271 in k6978 in k6975 in k6971 in k6680 in k6677 in k6674 in k6671 */
static void C_ccall f_19491(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word *a;
t2=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[3])[1]);
t4=C_mutate(((C_word *)((C_word*)t0)[3])+1,t3);
t5=((C_word*)t0)[2];
f_19256(t5,t4);}

/* k19453 in k19251 in k19244 in k19238 in k19235 in make-weighting in k11783 in k10718 in k10715 in k7274 in k7271 in k6978 in k6975 in k6971 in k6680 in k6677 in k6674 in k6671 */
static void C_ccall f_19455(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_19455,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_19459,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("ChickenBridge.scm: 379  error");
t4=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[21],((C_word*)t0)[2]);}
else{
t4=t2;
f_19459(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k19457 in k19453 in k19251 in k19244 in k19238 in k19235 in make-weighting in k11783 in k10718 in k10715 in k7274 in k7271 in k6978 in k6975 in k6971 in k6680 in k6677 in k6674 in k6671 */
static void C_ccall f_19459(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_19256(t7,t6);}

/* k19418 in k19251 in k19244 in k19238 in k19235 in make-weighting in k11783 in k10718 in k10715 in k7274 in k7271 in k6978 in k6975 in k6971 in k6680 in k6677 in k6674 in k6671 */
static void C_ccall f_19420(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_19420,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_19424,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("ChickenBridge.scm: 379  error");
t4=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[21],((C_word*)t0)[2]);}
else{
t4=t2;
f_19424(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k19422 in k19418 in k19251 in k19244 in k19238 in k19235 in make-weighting in k11783 in k10718 in k10715 in k7274 in k7271 in k6978 in k6975 in k6971 in k6680 in k6677 in k6674 in k6671 */
static void C_ccall f_19424(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_19256(t7,t6);}

/* k19254 in k19251 in k19244 in k19238 in k19235 in make-weighting in k11783 in k10718 in k10715 in k7274 in k7271 in k6978 in k6975 in k6971 in k6680 in k6677 in k6674 in k6671 */
static void C_fcall f_19256(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word ab[35],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_19256,NULL,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|12,a[1]=(C_word)f_19259,a[2]=((C_word*)t0)[5],a[3]=((C_word*)t0)[6],a[4]=((C_word*)t0)[7],a[5]=((C_word*)t0)[8],a[6]=((C_word*)t0)[9],a[7]=((C_word*)t0)[10],a[8]=((C_word*)t0)[11],a[9]=((C_word*)t0)[12],a[10]=((C_word*)t0)[13],a[11]=((C_word*)t0)[14],a[12]=((C_word*)t0)[15],tmp=(C_word)a,a+=13,tmp);
if(C_truep((C_word)C_i_nullp(((C_word*)((C_word*)t0)[6])[1]))){
t3=t2;
f_19259(t3,C_SCHEME_UNDEFINED);}
else{
t3=(C_word)C_i_car(((C_word*)((C_word*)t0)[6])[1]);
t4=(C_word)C_eqp(t3,lf[344]);
if(C_truep(t4)){
t5=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_19320,a[2]=((C_word*)t0)[5],a[3]=t2,a[4]=((C_word*)t0)[6],a[5]=((C_word*)t0)[3],a[6]=((C_word*)t0)[4],a[7]=((C_word*)t0)[11],tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)((C_word*)t0)[4])[1])){
C_trace("ChickenBridge.scm: 379  error");
t6=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t6))(4,t6,t5,lf[19],lf[344]);}
else{
t6=t5;
f_19320(2,t6,C_SCHEME_UNDEFINED);}}
else{
t5=(C_word)C_eqp(t3,lf[345]);
if(C_truep(t5)){
t6=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_19355,a[2]=((C_word*)t0)[5],a[3]=t2,a[4]=((C_word*)t0)[6],a[5]=((C_word*)t0)[3],a[6]=((C_word*)t0)[2],a[7]=((C_word*)t0)[10],tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)((C_word*)t0)[2])[1])){
C_trace("ChickenBridge.scm: 379  error");
t7=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t7))(4,t7,t6,lf[19],lf[345]);}
else{
t7=t6;
f_19355(2,t7,C_SCHEME_UNDEFINED);}}
else{
t6=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_19384,a[2]=t2,a[3]=((C_word*)t0)[2],a[4]=((C_word*)t0)[10],a[5]=((C_word*)t0)[6],tmp=(C_word)a,a+=6,tmp);
if(C_truep(((C_word*)((C_word*)t0)[3])[1])){
C_trace("ChickenBridge.scm: 379  error");
t7=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t7))(4,t7,t6,lf[10],((C_word*)t0)[5]);}
else{
t7=t6;
f_19384(2,t7,C_SCHEME_UNDEFINED);}}}}}

/* k19382 in k19254 in k19251 in k19244 in k19238 in k19235 in make-weighting in k11783 in k10718 in k10715 in k7274 in k7271 in k6978 in k6975 in k6971 in k6680 in k6677 in k6674 in k6671 */
static void C_ccall f_19384(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_19384,2,t0,t1);}
t2=(C_word)C_i_car(((C_word*)((C_word*)t0)[5])[1]);
t3=C_mutate(((C_word *)((C_word*)t0)[4])+1,t2);
t4=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_19391,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[5],a[4]=((C_word*)t0)[3],tmp=(C_word)a,a+=5,tmp);
t5=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_19399,a[2]=((C_word*)t0)[4],a[3]=t4,tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 379  keyword?");
t6=C_retrieve(lf[13]);
((C_proc3)C_retrieve_proc(t6))(3,t6,t5,((C_word*)((C_word*)t0)[4])[1]);}

/* k19397 in k19382 in k19254 in k19251 in k19244 in k19238 in k19235 in make-weighting in k11783 in k10718 in k10715 in k7274 in k7271 in k6978 in k6975 in k6971 in k6680 in k6677 in k6674 in k6671 */
static void C_ccall f_19399(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
if(C_truep(t1)){
C_trace("ChickenBridge.scm: 379  error");
t2=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t2))(4,t2,((C_word*)t0)[3],lf[14],((C_word*)((C_word*)t0)[2])[1]);}
else{
t2=((C_word*)t0)[3];
f_19391(2,t2,C_SCHEME_UNDEFINED);}}

/* k19389 in k19382 in k19254 in k19251 in k19244 in k19238 in k19235 in make-weighting in k11783 in k10718 in k10715 in k7274 in k7271 in k6978 in k6975 in k6971 in k6680 in k6677 in k6674 in k6671 */
static void C_ccall f_19391(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word *a;
t2=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[3])[1]);
t4=C_mutate(((C_word *)((C_word*)t0)[3])+1,t3);
t5=((C_word*)t0)[2];
f_19259(t5,t4);}

/* k19353 in k19254 in k19251 in k19244 in k19238 in k19235 in make-weighting in k11783 in k10718 in k10715 in k7274 in k7271 in k6978 in k6975 in k6971 in k6680 in k6677 in k6674 in k6671 */
static void C_ccall f_19355(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_19355,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_19359,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("ChickenBridge.scm: 379  error");
t4=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[21],((C_word*)t0)[2]);}
else{
t4=t2;
f_19359(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k19357 in k19353 in k19254 in k19251 in k19244 in k19238 in k19235 in make-weighting in k11783 in k10718 in k10715 in k7274 in k7271 in k6978 in k6975 in k6971 in k6680 in k6677 in k6674 in k6671 */
static void C_ccall f_19359(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_19259(t7,t6);}

/* k19318 in k19254 in k19251 in k19244 in k19238 in k19235 in make-weighting in k11783 in k10718 in k10715 in k7274 in k7271 in k6978 in k6975 in k6971 in k6680 in k6677 in k6674 in k6671 */
static void C_ccall f_19320(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_19320,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_19324,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("ChickenBridge.scm: 379  error");
t4=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[21],((C_word*)t0)[2]);}
else{
t4=t2;
f_19324(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k19322 in k19318 in k19254 in k19251 in k19244 in k19238 in k19235 in make-weighting in k11783 in k10718 in k10715 in k7274 in k7271 in k6978 in k6975 in k6971 in k6680 in k6677 in k6674 in k6671 */
static void C_ccall f_19324(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_19259(t7,t6);}

/* k19257 in k19254 in k19251 in k19244 in k19238 in k19235 in make-weighting in k11783 in k10718 in k10715 in k7274 in k7271 in k6978 in k6975 in k6971 in k6680 in k6677 in k6674 in k6671 */
static void C_fcall f_19259(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[11],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_19259,NULL,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|10,a[1]=(C_word)f_19262,a[2]=((C_word*)t0)[4],a[3]=((C_word*)t0)[5],a[4]=((C_word*)t0)[6],a[5]=((C_word*)t0)[7],a[6]=((C_word*)t0)[8],a[7]=((C_word*)t0)[9],a[8]=((C_word*)t0)[10],a[9]=((C_word*)t0)[11],a[10]=((C_word*)t0)[12],tmp=(C_word)a,a+=11,tmp);
if(C_truep((C_word)C_i_nullp(((C_word*)((C_word*)t0)[3])[1]))){
t3=t2;
f_19262(2,t3,C_SCHEME_UNDEFINED);}
else{
C_trace("ChickenBridge.scm: 379  error");
t3=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t3))(4,t3,t2,lf[5],((C_word*)t0)[2]);}}

/* k19260 in k19257 in k19254 in k19251 in k19244 in k19238 in k19235 in make-weighting in k11783 in k10718 in k10715 in k7274 in k7271 in k6978 in k6975 in k6971 in k6680 in k6677 in k6674 in k6671 */
static void C_ccall f_19262(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[11],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_19262,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_19265,a[2]=((C_word*)t0)[8],a[3]=((C_word*)t0)[9],a[4]=((C_word*)t0)[10],tmp=(C_word)a,a+=5,tmp);
t3=(C_word)C_a_i_list(&a,1,((C_word*)t0)[7]);
t4=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_19277,a[2]=((C_word)li281),tmp=(C_word)a,a+=3,tmp);
C_trace("ChickenBridge.scm: 379  initialize-pattern");
f_15829(t2,((C_word*)t0)[9],t3,((C_word*)((C_word*)t0)[6])[1],((C_word*)((C_word*)t0)[5])[1],((C_word*)((C_word*)t0)[4])[1],((C_word*)t0)[3],((C_word*)((C_word*)t0)[2])[1],C_retrieve2(lf[372],"next-in-weighting"),t4);}

/* a19276 in k19260 in k19257 in k19254 in k19251 in k19244 in k19238 in k19235 in make-weighting in k11783 in k10718 in k10715 in k7274 in k7271 in k6978 in k6975 in k6971 in k6680 in k6677 in k6674 in k6671 */
static void C_ccall f_19277(C_word c,C_word t0,C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word t6;
C_word ab[8],*a=ab;
if(c!=4) C_bad_argc_2(c,4,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr4,(void*)f_19277,4,t0,t1,t2,t3);}
t4=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_19283,a[2]=t2,a[3]=((C_word)li280),tmp=(C_word)a,a+=4,tmp);
t5=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_19299,a[2]=t4,a[3]=t1,tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 379  pattern-data");
f_15548(t5,t3);}

/* k19297 in a19276 in k19260 in k19257 in k19254 in k19251 in k19244 in k19238 in k19235 in make-weighting in k11783 in k10718 in k10715 in k7274 in k7271 in k6978 in k6975 in k6971 in k6680 in k6677 in k6674 in k6671 */
static void C_ccall f_19299(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word *a;
t2=(C_word)C_i_car(t1);
C_trace("for-each");
t3=*((C_word*)lf[237]+1);
((C_proc4)(void*)(*((C_word*)t3+1)))(4,t3,((C_word*)t0)[3],((C_word*)t0)[2],t2);}

/* a19282 in a19276 in k19260 in k19257 in k19254 in k19251 in k19244 in k19238 in k19235 in make-weighting in k11783 in k10718 in k10715 in k7274 in k7271 in k6978 in k6975 in k6971 in k6680 in k6677 in k6674 in k6671 */
static void C_ccall f_19283(C_word c,C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word ab[4],*a=ab;
if(c!=3) C_bad_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr3,(void*)f_19283,3,t0,t1,t2);}
t3=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_19291,a[2]=t1,a[3]=((C_word*)t0)[2],tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 379  random-item-datum");
f_19060(t3,t2);}

/* k19289 in a19282 in a19276 in k19260 in k19257 in k19254 in k19251 in k19244 in k19238 in k19235 in make-weighting in k11783 in k10718 in k10715 in k7274 in k7271 in k6978 in k6975 in k6971 in k6680 in k6677 in k6674 in k6671 */
static void C_ccall f_19291(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 379  fn");
t2=((C_word*)t0)[3];
((C_proc3)C_retrieve_proc(t2))(3,t2,((C_word*)t0)[2],t1);}

/* k19263 in k19260 in k19257 in k19254 in k19251 in k19244 in k19238 in k19235 in make-weighting in k11783 in k10718 in k10715 in k7274 in k7271 in k6978 in k6975 in k6971 in k6680 in k6677 in k6674 in k6671 */
static void C_ccall f_19265(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[4],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_19265,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_19268,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],tmp=(C_word)a,a+=4,tmp);
if(C_truep(((C_word*)((C_word*)t0)[2])[1])){
C_trace("ChickenBridge.scm: 379  recalc-weightings");
f_20000(t2,((C_word*)t0)[3],C_SCHEME_TRUE);}
else{
t3=t2;
f_19268(2,t3,C_SCHEME_UNDEFINED);}}

/* k19266 in k19263 in k19260 in k19257 in k19254 in k19251 in k19244 in k19238 in k19235 in make-weighting in k11783 in k10718 in k10715 in k7274 in k7271 in k6978 in k6975 in k6971 in k6680 in k6677 in k6674 in k6671 */
static void C_ccall f_19268(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
t2=((C_word*)t0)[3];
((C_proc2)(void*)(*((C_word*)t2+1)))(2,t2,((C_word*)t0)[2]);}

/* random-item-count in k11783 in k10718 in k10715 in k7274 in k7271 in k6978 in k6975 in k6971 in k6680 in k6677 in k6674 in k6671 */
static void C_fcall f_19150(C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word *a;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_19150,NULL,2,t1,t2);}
t3=(C_word)C_i_check_structure(t2,lf[362]);
t4=t1;
((C_proc2)(void*)(*((C_word*)t4+1)))(2,t4,(C_word)C_i_block_ref(t2,C_fix(6)));}

/* random-item-count-set! in k11783 in k10718 in k10715 in k7274 in k7271 in k6978 in k6975 in k6971 in k6680 in k6677 in k6674 in k6671 */
static void C_fcall f_19141(C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word *a;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_19141,NULL,3,t1,t2,t3);}
t4=(C_word)C_i_check_structure(t2,lf[362]);
C_trace("ChickenBridge.scm: 379  ##sys#block-set!");
t5=*((C_word*)lf[225]+1);
((C_proc5)(void*)(*((C_word*)t5+1)))(5,t5,t1,t2,C_fix(6),t3);}

/* random-item-max in k11783 in k10718 in k10715 in k7274 in k7271 in k6978 in k6975 in k6971 in k6680 in k6677 in k6674 in k6671 */
static void C_fcall f_19132(C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word *a;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_19132,NULL,2,t1,t2);}
t3=(C_word)C_i_check_structure(t2,lf[362]);
t4=t1;
((C_proc2)(void*)(*((C_word*)t4+1)))(2,t4,(C_word)C_i_block_ref(t2,C_fix(5)));}

/* random-item-min in k11783 in k10718 in k10715 in k7274 in k7271 in k6978 in k6975 in k6971 in k6680 in k6677 in k6674 in k6671 */
static void C_fcall f_19114(C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word *a;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_19114,NULL,2,t1,t2);}
t3=(C_word)C_i_check_structure(t2,lf[362]);
t4=t1;
((C_proc2)(void*)(*((C_word*)t4+1)))(2,t4,(C_word)C_i_block_ref(t2,C_fix(4)));}

/* random-item-weight in k11783 in k10718 in k10715 in k7274 in k7271 in k6978 in k6975 in k6971 in k6680 in k6677 in k6674 in k6671 */
static void C_fcall f_19096(C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word *a;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_19096,NULL,2,t1,t2);}
t3=(C_word)C_i_check_structure(t2,lf[362]);
t4=t1;
((C_proc2)(void*)(*((C_word*)t4+1)))(2,t4,(C_word)C_i_block_ref(t2,C_fix(3)));}

/* random-item-index in k11783 in k10718 in k10715 in k7274 in k7271 in k6978 in k6975 in k6971 in k6680 in k6677 in k6674 in k6671 */
static void C_fcall f_19078(C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word *a;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_19078,NULL,2,t1,t2);}
t3=(C_word)C_i_check_structure(t2,lf[362]);
t4=t1;
((C_proc2)(void*)(*((C_word*)t4+1)))(2,t4,(C_word)C_i_block_ref(t2,C_fix(2)));}

/* random-item-index-set! in k11783 in k10718 in k10715 in k7274 in k7271 in k6978 in k6975 in k6971 in k6680 in k6677 in k6674 in k6671 */
static void C_fcall f_19069(C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word *a;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_19069,NULL,3,t1,t2,t3);}
t4=(C_word)C_i_check_structure(t2,lf[362]);
C_trace("ChickenBridge.scm: 379  ##sys#block-set!");
t5=*((C_word*)lf[225]+1);
((C_proc5)(void*)(*((C_word*)t5+1)))(5,t5,t1,t2,C_fix(2),t3);}

/* random-item-datum in k11783 in k10718 in k10715 in k7274 in k7271 in k6978 in k6975 in k6971 in k6680 in k6677 in k6674 in k6671 */
static void C_fcall f_19060(C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word *a;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_19060,NULL,2,t1,t2);}
t3=(C_word)C_i_check_structure(t2,lf[362]);
t4=t1;
((C_proc2)(void*)(*((C_word*)t4+1)))(2,t4,(C_word)C_i_block_ref(t2,C_fix(1)));}

/* next-in-rotation in k11783 in k10718 in k10715 in k7274 in k7271 in k6978 in k6975 in k6971 in k6680 in k6677 in k6674 in k6671 */
static void C_ccall f_18838(C_word c,C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word t5;
C_word ab[8],*a=ab;
if(c!=3) C_bad_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr3,(void*)f_18838,3,t0,t1,t2);}
t3=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_18841,a[2]=((C_word)li270),tmp=(C_word)a,a+=3,tmp);
t4=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_18888,a[2]=t2,a[3]=t3,a[4]=t1,tmp=(C_word)a,a+=5,tmp);
C_trace("ChickenBridge.scm: 379  pattern-data");
f_15548(t4,t2);}

/* k18886 in next-in-rotation in k11783 in k10718 in k10715 in k7274 in k7271 in k6978 in k6975 in k6971 in k6680 in k6677 in k6674 in k6671 */
static void C_ccall f_18888(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word ab[14],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_18888,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_18891,a[2]=((C_word*)t0)[4],a[3]=t1,tmp=(C_word)a,a+=4,tmp);
t3=(C_word)C_i_cdr(t1);
if(C_truep((C_word)C_i_nullp(t3))){
t4=(C_word)C_i_car(t1);
t5=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_18914,a[2]=((C_word*)t0)[2],a[3]=t4,a[4]=((C_word*)t0)[3],a[5]=t1,a[6]=t2,tmp=(C_word)a,a+=7,tmp);
t6=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_19033,a[2]=t5,tmp=(C_word)a,a+=3,tmp);
C_trace("ChickenBridge.scm: 379  pattern-cache");
f_15764(t6,((C_word*)t0)[2]);}
else{
t4=t2;
f_18891(t4,C_SCHEME_UNDEFINED);}}

/* k19031 in k18886 in next-in-rotation in k11783 in k10718 in k10715 in k7274 in k7271 in k6978 in k6975 in k6971 in k6680 in k6677 in k6674 in k6671 */
static void C_ccall f_19033(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 379  next-1");
f_16170(((C_word*)t0)[2],t1);}

/* k18912 in k18886 in next-in-rotation in k11783 in k10718 in k10715 in k7274 in k7271 in k6978 in k6975 in k6971 in k6680 in k6677 in k6674 in k6671 */
static void C_ccall f_18914(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word t14;
C_word t15;
C_word t16;
C_word ab[32],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_18914,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_18921,a[2]=((C_word*)t0)[5],a[3]=((C_word*)t0)[6],tmp=(C_word)a,a+=4,tmp);
if(C_truep((C_word)C_i_pairp(t1))){
t3=(C_word)C_i_cdr(t1);
if(C_truep((C_word)C_i_pairp(t3))){
t4=(C_word)C_i_cddr(t1);
if(C_truep((C_word)C_i_pairp(t4))){
t5=(C_word)C_i_cdddr(t1);
if(C_truep((C_word)C_i_pairp(t5))){
C_apply(5,0,t2,((C_word*)t0)[4],((C_word*)t0)[3],t1);}
else{
t6=(C_word)C_i_car(t1);
t7=(C_word)C_i_cadr(t1);
t8=(C_word)C_i_caddr(t1);
t9=(*a=C_CLOSURE_TYPE|8,a[1]=(C_word)f_18968,a[2]=t8,a[3]=t7,a[4]=t6,a[5]=((C_word*)t0)[3],a[6]=t2,a[7]=((C_word*)t0)[4],a[8]=t1,tmp=(C_word)a,a+=9,tmp);
C_trace("ChickenBridge.scm: 379  pattern-length");
f_15566(t9,((C_word*)t0)[2]);}}
else{
t5=(C_word)C_i_car(t1);
t6=(C_word)C_i_cadr(t1);
t7=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_18995,a[2]=t6,a[3]=t5,a[4]=((C_word*)t0)[3],a[5]=t2,a[6]=((C_word*)t0)[4],tmp=(C_word)a,a+=7,tmp);
C_trace("ChickenBridge.scm: 379  pattern-length");
f_15566(t7,((C_word*)t0)[2]);}}
else{
t4=(C_word)C_i_car(t1);
t5=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_19014,a[2]=t4,a[3]=((C_word*)t0)[3],a[4]=t2,a[5]=((C_word*)t0)[4],tmp=(C_word)a,a+=6,tmp);
C_trace("ChickenBridge.scm: 379  pattern-length");
f_15566(t5,((C_word*)t0)[2]);}}
else{
t3=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_19029,a[2]=t1,a[3]=((C_word*)t0)[3],a[4]=t2,a[5]=((C_word*)t0)[4],tmp=(C_word)a,a+=6,tmp);
C_trace("ChickenBridge.scm: 379  pattern-length");
f_15566(t3,((C_word*)t0)[2]);}}

/* k19027 in k18912 in k18886 in next-in-rotation in k11783 in k10718 in k10715 in k7274 in k7271 in k6978 in k6975 in k6971 in k6680 in k6677 in k6674 in k6671 */
static void C_ccall f_19029(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[4],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_19029,2,t0,t1);}
t2=(C_word)C_a_i_minus(&a,2,t1,C_fix(1));
C_trace("ChickenBridge.scm: 379  rotate-items");
t3=((C_word*)t0)[5];
f_18841(7,t3,((C_word*)t0)[4],((C_word*)t0)[3],((C_word*)t0)[2],C_fix(1),C_fix(1),t2);}

/* k19012 in k18912 in k18886 in next-in-rotation in k11783 in k10718 in k10715 in k7274 in k7271 in k6978 in k6975 in k6971 in k6680 in k6677 in k6674 in k6671 */
static void C_ccall f_19014(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[4],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_19014,2,t0,t1);}
t2=(C_word)C_a_i_minus(&a,2,t1,C_fix(1));
C_trace("ChickenBridge.scm: 379  rotate-items");
t3=((C_word*)t0)[5];
f_18841(7,t3,((C_word*)t0)[4],((C_word*)t0)[3],((C_word*)t0)[2],C_fix(1),C_fix(1),t2);}

/* k18993 in k18912 in k18886 in next-in-rotation in k11783 in k10718 in k10715 in k7274 in k7271 in k6978 in k6975 in k6971 in k6680 in k6677 in k6674 in k6671 */
static void C_ccall f_18995(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[4],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_18995,2,t0,t1);}
t2=(C_word)C_a_i_minus(&a,2,t1,C_fix(1));
C_trace("ChickenBridge.scm: 379  rotate-items");
t3=((C_word*)t0)[6];
f_18841(7,t3,((C_word*)t0)[5],((C_word*)t0)[4],((C_word*)t0)[3],((C_word*)t0)[2],C_fix(1),t2);}

/* k18966 in k18912 in k18886 in next-in-rotation in k11783 in k10718 in k10715 in k7274 in k7271 in k6978 in k6975 in k6971 in k6680 in k6677 in k6674 in k6671 */
static void C_ccall f_18968(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[4],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_18968,2,t0,t1);}
t2=(C_word)C_i_caddr(((C_word*)t0)[8]);
t3=(C_word)C_a_i_minus(&a,2,t1,t2);
C_trace("ChickenBridge.scm: 379  rotate-items");
t4=((C_word*)t0)[7];
f_18841(7,t4,((C_word*)t0)[6],((C_word*)t0)[5],((C_word*)t0)[4],((C_word*)t0)[3],((C_word*)t0)[2],t3);}

/* k18919 in k18912 in k18886 in next-in-rotation in k11783 in k10718 in k10715 in k7274 in k7271 in k6978 in k6975 in k6971 in k6680 in k6677 in k6674 in k6671 */
static void C_ccall f_18921(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
t2=((C_word*)t0)[3];
f_18891(t2,(C_word)C_i_set_cdr(((C_word*)t0)[2],t1));}

/* k18889 in k18886 in next-in-rotation in k11783 in k10718 in k10715 in k7274 in k7271 in k6978 in k6975 in k6971 in k6680 in k6677 in k6674 in k6671 */
static void C_fcall f_18891(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word *a;
t2=(C_word)C_i_cdr(((C_word*)t0)[3]);
t3=(C_word)C_i_car(t2);
t4=(C_word)C_i_cddr(((C_word*)t0)[3]);
t5=(C_word)C_i_set_cdr(((C_word*)t0)[3],t4);
t6=((C_word*)t0)[2];
((C_proc2)(void*)(*((C_word*)t6+1)))(2,t6,t3);}

/* rotate-items in next-in-rotation in k11783 in k10718 in k10715 in k7274 in k7271 in k6978 in k6975 in k6971 in k6680 in k6677 in k6674 in k6671 */
static void C_ccall f_18841(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4,C_word t5,C_word t6){
C_word tmp;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word ab[10],*a=ab;
if(c!=7) C_bad_argc_2(c,7,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr7,(void*)f_18841,7,t0,t1,t2,t3,t4,t5,t6);}
t7=C_SCHEME_UNDEFINED;
t8=(*a=C_VECTOR_TYPE|1,a[1]=t7,tmp=(C_word)a,a+=2,tmp);
t9=C_set_block_item(t8,0,(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_18847,a[2]=t8,a[3]=t4,a[4]=t5,a[5]=t2,a[6]=t6,a[7]=((C_word)li269),tmp=(C_word)a,a+=8,tmp));
t10=((C_word*)t8)[1];
f_18847(t10,t1,t3);}

/* do2306 in rotate-items in next-in-rotation in k11783 in k10718 in k10715 in k7274 in k7271 in k6978 in k6975 in k6971 in k6680 in k6677 in k6674 in k6671 */
static void C_fcall f_18847(C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word ab[13],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_18847,NULL,3,t0,t1,t2);}
if(C_truep((C_word)C_i_lessp(t2,((C_word*)t0)[6]))){
t3=(C_word)C_i_list_ref(((C_word*)t0)[5],t2);
t4=(C_word)C_a_i_plus(&a,2,t2,((C_word*)t0)[4]);
t5=(C_word)C_i_list_ref(((C_word*)t0)[5],t4);
t6=(*a=C_CLOSURE_TYPE|8,a[1]=(C_word)f_18863,a[2]=t3,a[3]=((C_word*)t0)[5],a[4]=((C_word*)t0)[4],a[5]=t1,a[6]=((C_word*)t0)[2],a[7]=((C_word*)t0)[3],a[8]=t2,tmp=(C_word)a,a+=9,tmp);
C_trace("ChickenBridge.scm: 379  list-set!");
t7=C_retrieve(lf[81]);
((C_proc5)C_retrieve_proc(t7))(5,t7,t6,((C_word*)t0)[5],t2,t5);}
else{
t3=t1;
((C_proc2)(void*)(*((C_word*)t3+1)))(2,t3,((C_word*)t0)[5]);}}

/* k18861 in do2306 in rotate-items in next-in-rotation in k11783 in k10718 in k10715 in k7274 in k7271 in k6978 in k6975 in k6971 in k6680 in k6677 in k6674 in k6671 */
static void C_ccall f_18863(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[10],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_18863,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_18866,a[2]=((C_word*)t0)[5],a[3]=((C_word*)t0)[6],a[4]=((C_word*)t0)[7],a[5]=((C_word*)t0)[8],tmp=(C_word)a,a+=6,tmp);
t3=(C_word)C_a_i_plus(&a,2,((C_word*)t0)[8],((C_word*)t0)[4]);
C_trace("ChickenBridge.scm: 379  list-set!");
t4=C_retrieve(lf[81]);
((C_proc5)C_retrieve_proc(t4))(5,t4,t2,((C_word*)t0)[3],t3,((C_word*)t0)[2]);}

/* k18864 in k18861 in do2306 in rotate-items in next-in-rotation in k11783 in k10718 in k10715 in k7274 in k7271 in k6978 in k6975 in k6971 in k6680 in k6677 in k6674 in k6671 */
static void C_ccall f_18866(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[4],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_18866,2,t0,t1);}
t2=(C_word)C_a_i_plus(&a,2,((C_word*)t0)[5],((C_word*)t0)[4]);
t3=((C_word*)((C_word*)t0)[3])[1];
f_18847(t3,((C_word*)t0)[2],t2);}

/* make-rotation in k11783 in k10718 in k10715 in k7274 in k7271 in k6978 in k6975 in k6971 in k6680 in k6677 in k6674 in k6671 */
static void C_ccall f_18364(C_word c,C_word t0,C_word t1,C_word t2,...){
C_word tmp;
C_word t3;
va_list v;
C_word *a,c2=c;
C_save_rest(t2,c2,3);
if(c<3) C_bad_min_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_demand(c*C_SIZEOF_PAIR+14)){
C_save_and_reclaim((void*)tr3r,(void*)f_18364r,3,t0,t1,t2);}
else{
a=C_alloc((c-3)*3);
t3=C_restore_rest(a,C_rest_count(0));
f_18364r(t0,t1,t2,t3);}}

static void C_ccall f_18364r(C_word t0,C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word *a=C_alloc(14);
t4=(*a=C_VECTOR_TYPE|1,a[1]=t2,tmp=(C_word)a,a+=2,tmp);
t5=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_18368,a[2]=t1,a[3]=t4,a[4]=t3,tmp=(C_word)a,a+=5,tmp);
if(C_truep((C_word)C_i_pairp(((C_word*)t4)[1]))){
t6=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_18828,a[2]=t5,a[3]=t4,tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 379  append");
t7=*((C_word*)lf[18]+1);
((C_proc4)C_retrieve_proc(t7))(4,t7,t6,((C_word*)t4)[1],C_SCHEME_END_OF_LIST);}
else{
t6=(C_word)C_a_i_list(&a,1,((C_word*)t4)[1]);
t7=C_set_block_item(t4,0,t6);
t8=t5;
f_18368(t8,t7);}}

/* k18826 in make-rotation in k11783 in k10718 in k10715 in k7274 in k7271 in k6978 in k6975 in k6971 in k6680 in k6677 in k6674 in k6671 */
static void C_ccall f_18828(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[3])+1,t1);
t3=((C_word*)t0)[2];
f_18368(t3,t2);}

/* k18366 in make-rotation in k11783 in k10718 in k10715 in k7274 in k7271 in k6978 in k6975 in k6971 in k6680 in k6677 in k6674 in k6671 */
static void C_fcall f_18368(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word t14;
C_word t15;
C_word t16;
C_word t17;
C_word t18;
C_word t19;
C_word t20;
C_word t21;
C_word t22;
C_word t23;
C_word t24;
C_word t25;
C_word t26;
C_word t27;
C_word ab[59],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_18368,NULL,2,t0,t1);}
t2=C_SCHEME_FALSE;
t3=(*a=C_VECTOR_TYPE|1,a[1]=t2,tmp=(C_word)a,a+=2,tmp);
t4=C_SCHEME_FALSE;
t5=(*a=C_VECTOR_TYPE|1,a[1]=t4,tmp=(C_word)a,a+=2,tmp);
t6=C_fix(0);
t7=(*a=C_VECTOR_TYPE|1,a[1]=t6,tmp=(C_word)a,a+=2,tmp);
t8=C_SCHEME_FALSE;
t9=(*a=C_VECTOR_TYPE|1,a[1]=t8,tmp=(C_word)a,a+=2,tmp);
t10=C_SCHEME_FALSE;
t11=(*a=C_VECTOR_TYPE|1,a[1]=t10,tmp=(C_word)a,a+=2,tmp);
t12=C_SCHEME_FALSE;
t13=(*a=C_VECTOR_TYPE|1,a[1]=t12,tmp=(C_word)a,a+=2,tmp);
t14=((C_word*)t0)[4];
t15=(*a=C_VECTOR_TYPE|1,a[1]=t14,tmp=(C_word)a,a+=2,tmp);
t16=C_SCHEME_FALSE;
t17=(*a=C_VECTOR_TYPE|1,a[1]=t16,tmp=(C_word)a,a+=2,tmp);
t18=(*a=C_CLOSURE_TYPE|12,a[1]=(C_word)f_18371,a[2]=t13,a[3]=t11,a[4]=t17,a[5]=t9,a[6]=((C_word*)t0)[4],a[7]=t15,a[8]=t5,a[9]=t3,a[10]=t7,a[11]=((C_word*)t0)[2],a[12]=((C_word*)t0)[3],tmp=(C_word)a,a+=13,tmp);
if(C_truep((C_word)C_i_nullp(((C_word*)t15)[1]))){
t19=t18;
f_18371(t19,C_SCHEME_UNDEFINED);}
else{
t19=(C_word)C_i_car(((C_word*)t15)[1]);
t20=(C_word)C_eqp(t19,lf[344]);
if(C_truep(t20)){
t21=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_18701,a[2]=((C_word*)t0)[4],a[3]=t18,a[4]=t15,a[5]=t17,a[6]=t9,a[7]=t3,tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)t9)[1])){
C_trace("ChickenBridge.scm: 379  error");
t22=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t22))(4,t22,t21,lf[19],lf[344]);}
else{
t22=t21;
f_18701(2,t22,C_SCHEME_UNDEFINED);}}
else{
t21=(C_word)C_eqp(t19,lf[345]);
if(C_truep(t21)){
t22=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_18736,a[2]=((C_word*)t0)[4],a[3]=t18,a[4]=t15,a[5]=t17,a[6]=t11,a[7]=t5,tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)t11)[1])){
C_trace("ChickenBridge.scm: 379  error");
t23=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t23))(4,t23,t22,lf[19],lf[345]);}
else{
t23=t22;
f_18736(2,t23,C_SCHEME_UNDEFINED);}}
else{
t22=(C_word)C_eqp(t19,lf[360]);
if(C_truep(t22)){
t23=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_18771,a[2]=((C_word*)t0)[4],a[3]=t18,a[4]=t15,a[5]=t17,a[6]=t13,a[7]=t7,tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)t13)[1])){
C_trace("ChickenBridge.scm: 379  error");
t24=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t24))(4,t24,t23,lf[19],lf[360]);}
else{
t24=t23;
f_18771(2,t24,C_SCHEME_UNDEFINED);}}
else{
t23=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_18800,a[2]=t18,a[3]=t9,a[4]=t3,a[5]=t15,tmp=(C_word)a,a+=6,tmp);
if(C_truep(((C_word*)t17)[1])){
C_trace("ChickenBridge.scm: 379  error");
t24=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t24))(4,t24,t23,lf[10],((C_word*)t0)[4]);}
else{
t24=t23;
f_18800(2,t24,C_SCHEME_UNDEFINED);}}}}}}

/* k18798 in k18366 in make-rotation in k11783 in k10718 in k10715 in k7274 in k7271 in k6978 in k6975 in k6971 in k6680 in k6677 in k6674 in k6671 */
static void C_ccall f_18800(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_18800,2,t0,t1);}
t2=(C_word)C_i_car(((C_word*)((C_word*)t0)[5])[1]);
t3=C_mutate(((C_word *)((C_word*)t0)[4])+1,t2);
t4=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_18807,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[5],a[4]=((C_word*)t0)[3],tmp=(C_word)a,a+=5,tmp);
t5=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_18815,a[2]=((C_word*)t0)[4],a[3]=t4,tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 379  keyword?");
t6=C_retrieve(lf[13]);
((C_proc3)C_retrieve_proc(t6))(3,t6,t5,((C_word*)((C_word*)t0)[4])[1]);}

/* k18813 in k18798 in k18366 in make-rotation in k11783 in k10718 in k10715 in k7274 in k7271 in k6978 in k6975 in k6971 in k6680 in k6677 in k6674 in k6671 */
static void C_ccall f_18815(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
if(C_truep(t1)){
C_trace("ChickenBridge.scm: 379  error");
t2=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t2))(4,t2,((C_word*)t0)[3],lf[14],((C_word*)((C_word*)t0)[2])[1]);}
else{
t2=((C_word*)t0)[3];
f_18807(2,t2,C_SCHEME_UNDEFINED);}}

/* k18805 in k18798 in k18366 in make-rotation in k11783 in k10718 in k10715 in k7274 in k7271 in k6978 in k6975 in k6971 in k6680 in k6677 in k6674 in k6671 */
static void C_ccall f_18807(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word *a;
t2=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[3])[1]);
t4=C_mutate(((C_word *)((C_word*)t0)[3])+1,t3);
t5=((C_word*)t0)[2];
f_18371(t5,t4);}

/* k18769 in k18366 in make-rotation in k11783 in k10718 in k10715 in k7274 in k7271 in k6978 in k6975 in k6971 in k6680 in k6677 in k6674 in k6671 */
static void C_ccall f_18771(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_18771,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_18775,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("ChickenBridge.scm: 379  error");
t4=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[21],((C_word*)t0)[2]);}
else{
t4=t2;
f_18775(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k18773 in k18769 in k18366 in make-rotation in k11783 in k10718 in k10715 in k7274 in k7271 in k6978 in k6975 in k6971 in k6680 in k6677 in k6674 in k6671 */
static void C_ccall f_18775(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_18371(t7,t6);}

/* k18734 in k18366 in make-rotation in k11783 in k10718 in k10715 in k7274 in k7271 in k6978 in k6975 in k6971 in k6680 in k6677 in k6674 in k6671 */
static void C_ccall f_18736(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_18736,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_18740,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("ChickenBridge.scm: 379  error");
t4=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[21],((C_word*)t0)[2]);}
else{
t4=t2;
f_18740(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k18738 in k18734 in k18366 in make-rotation in k11783 in k10718 in k10715 in k7274 in k7271 in k6978 in k6975 in k6971 in k6680 in k6677 in k6674 in k6671 */
static void C_ccall f_18740(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_18371(t7,t6);}

/* k18699 in k18366 in make-rotation in k11783 in k10718 in k10715 in k7274 in k7271 in k6978 in k6975 in k6971 in k6680 in k6677 in k6674 in k6671 */
static void C_ccall f_18701(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_18701,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_18705,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("ChickenBridge.scm: 379  error");
t4=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[21],((C_word*)t0)[2]);}
else{
t4=t2;
f_18705(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k18703 in k18699 in k18366 in make-rotation in k11783 in k10718 in k10715 in k7274 in k7271 in k6978 in k6975 in k6971 in k6680 in k6677 in k6674 in k6671 */
static void C_ccall f_18705(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_18371(t7,t6);}

/* k18369 in k18366 in make-rotation in k11783 in k10718 in k10715 in k7274 in k7271 in k6978 in k6975 in k6971 in k6680 in k6677 in k6674 in k6671 */
static void C_fcall f_18371(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word ab[43],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_18371,NULL,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|12,a[1]=(C_word)f_18374,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],a[7]=((C_word*)t0)[7],a[8]=((C_word*)t0)[8],a[9]=((C_word*)t0)[9],a[10]=((C_word*)t0)[10],a[11]=((C_word*)t0)[11],a[12]=((C_word*)t0)[12],tmp=(C_word)a,a+=13,tmp);
if(C_truep((C_word)C_i_nullp(((C_word*)((C_word*)t0)[7])[1]))){
t3=t2;
f_18374(t3,C_SCHEME_UNDEFINED);}
else{
t3=(C_word)C_i_car(((C_word*)((C_word*)t0)[7])[1]);
t4=(C_word)C_eqp(t3,lf[344]);
if(C_truep(t4)){
t5=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_18566,a[2]=((C_word*)t0)[6],a[3]=t2,a[4]=((C_word*)t0)[7],a[5]=((C_word*)t0)[4],a[6]=((C_word*)t0)[5],a[7]=((C_word*)t0)[9],tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)((C_word*)t0)[5])[1])){
C_trace("ChickenBridge.scm: 379  error");
t6=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t6))(4,t6,t5,lf[19],lf[344]);}
else{
t6=t5;
f_18566(2,t6,C_SCHEME_UNDEFINED);}}
else{
t5=(C_word)C_eqp(t3,lf[345]);
if(C_truep(t5)){
t6=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_18601,a[2]=((C_word*)t0)[6],a[3]=t2,a[4]=((C_word*)t0)[7],a[5]=((C_word*)t0)[4],a[6]=((C_word*)t0)[3],a[7]=((C_word*)t0)[8],tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)((C_word*)t0)[3])[1])){
C_trace("ChickenBridge.scm: 379  error");
t7=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t7))(4,t7,t6,lf[19],lf[345]);}
else{
t7=t6;
f_18601(2,t7,C_SCHEME_UNDEFINED);}}
else{
t6=(C_word)C_eqp(t3,lf[360]);
if(C_truep(t6)){
t7=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_18636,a[2]=((C_word*)t0)[6],a[3]=t2,a[4]=((C_word*)t0)[7],a[5]=((C_word*)t0)[4],a[6]=((C_word*)t0)[2],a[7]=((C_word*)t0)[10],tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)((C_word*)t0)[2])[1])){
C_trace("ChickenBridge.scm: 379  error");
t8=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t8))(4,t8,t7,lf[19],lf[360]);}
else{
t8=t7;
f_18636(2,t8,C_SCHEME_UNDEFINED);}}
else{
t7=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_18665,a[2]=t2,a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[8],a[5]=((C_word*)t0)[7],tmp=(C_word)a,a+=6,tmp);
if(C_truep(((C_word*)((C_word*)t0)[4])[1])){
C_trace("ChickenBridge.scm: 379  error");
t8=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t8))(4,t8,t7,lf[10],((C_word*)t0)[6]);}
else{
t8=t7;
f_18665(2,t8,C_SCHEME_UNDEFINED);}}}}}}

/* k18663 in k18369 in k18366 in make-rotation in k11783 in k10718 in k10715 in k7274 in k7271 in k6978 in k6975 in k6971 in k6680 in k6677 in k6674 in k6671 */
static void C_ccall f_18665(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_18665,2,t0,t1);}
t2=(C_word)C_i_car(((C_word*)((C_word*)t0)[5])[1]);
t3=C_mutate(((C_word *)((C_word*)t0)[4])+1,t2);
t4=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_18672,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[5],a[4]=((C_word*)t0)[3],tmp=(C_word)a,a+=5,tmp);
t5=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_18680,a[2]=((C_word*)t0)[4],a[3]=t4,tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 379  keyword?");
t6=C_retrieve(lf[13]);
((C_proc3)C_retrieve_proc(t6))(3,t6,t5,((C_word*)((C_word*)t0)[4])[1]);}

/* k18678 in k18663 in k18369 in k18366 in make-rotation in k11783 in k10718 in k10715 in k7274 in k7271 in k6978 in k6975 in k6971 in k6680 in k6677 in k6674 in k6671 */
static void C_ccall f_18680(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
if(C_truep(t1)){
C_trace("ChickenBridge.scm: 379  error");
t2=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t2))(4,t2,((C_word*)t0)[3],lf[14],((C_word*)((C_word*)t0)[2])[1]);}
else{
t2=((C_word*)t0)[3];
f_18672(2,t2,C_SCHEME_UNDEFINED);}}

/* k18670 in k18663 in k18369 in k18366 in make-rotation in k11783 in k10718 in k10715 in k7274 in k7271 in k6978 in k6975 in k6971 in k6680 in k6677 in k6674 in k6671 */
static void C_ccall f_18672(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word *a;
t2=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[3])[1]);
t4=C_mutate(((C_word *)((C_word*)t0)[3])+1,t3);
t5=((C_word*)t0)[2];
f_18374(t5,t4);}

/* k18634 in k18369 in k18366 in make-rotation in k11783 in k10718 in k10715 in k7274 in k7271 in k6978 in k6975 in k6971 in k6680 in k6677 in k6674 in k6671 */
static void C_ccall f_18636(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_18636,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_18640,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("ChickenBridge.scm: 379  error");
t4=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[21],((C_word*)t0)[2]);}
else{
t4=t2;
f_18640(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k18638 in k18634 in k18369 in k18366 in make-rotation in k11783 in k10718 in k10715 in k7274 in k7271 in k6978 in k6975 in k6971 in k6680 in k6677 in k6674 in k6671 */
static void C_ccall f_18640(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_18374(t7,t6);}

/* k18599 in k18369 in k18366 in make-rotation in k11783 in k10718 in k10715 in k7274 in k7271 in k6978 in k6975 in k6971 in k6680 in k6677 in k6674 in k6671 */
static void C_ccall f_18601(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_18601,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_18605,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("ChickenBridge.scm: 379  error");
t4=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[21],((C_word*)t0)[2]);}
else{
t4=t2;
f_18605(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k18603 in k18599 in k18369 in k18366 in make-rotation in k11783 in k10718 in k10715 in k7274 in k7271 in k6978 in k6975 in k6971 in k6680 in k6677 in k6674 in k6671 */
static void C_ccall f_18605(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_18374(t7,t6);}

/* k18564 in k18369 in k18366 in make-rotation in k11783 in k10718 in k10715 in k7274 in k7271 in k6978 in k6975 in k6971 in k6680 in k6677 in k6674 in k6671 */
static void C_ccall f_18566(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_18566,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_18570,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("ChickenBridge.scm: 379  error");
t4=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[21],((C_word*)t0)[2]);}
else{
t4=t2;
f_18570(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k18568 in k18564 in k18369 in k18366 in make-rotation in k11783 in k10718 in k10715 in k7274 in k7271 in k6978 in k6975 in k6971 in k6680 in k6677 in k6674 in k6671 */
static void C_ccall f_18570(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_18374(t7,t6);}

/* k18372 in k18369 in k18366 in make-rotation in k11783 in k10718 in k10715 in k7274 in k7271 in k6978 in k6975 in k6971 in k6680 in k6677 in k6674 in k6671 */
static void C_fcall f_18374(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word ab[39],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_18374,NULL,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|8,a[1]=(C_word)f_18377,a[2]=((C_word*)t0)[6],a[3]=((C_word*)t0)[7],a[4]=((C_word*)t0)[8],a[5]=((C_word*)t0)[9],a[6]=((C_word*)t0)[10],a[7]=((C_word*)t0)[11],a[8]=((C_word*)t0)[12],tmp=(C_word)a,a+=9,tmp);
if(C_truep((C_word)C_i_nullp(((C_word*)((C_word*)t0)[7])[1]))){
t3=t2;
f_18377(t3,C_SCHEME_UNDEFINED);}
else{
t3=(C_word)C_i_car(((C_word*)((C_word*)t0)[7])[1]);
t4=(C_word)C_eqp(t3,lf[344]);
if(C_truep(t4)){
t5=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_18431,a[2]=((C_word*)t0)[6],a[3]=t2,a[4]=((C_word*)t0)[7],a[5]=((C_word*)t0)[4],a[6]=((C_word*)t0)[5],a[7]=((C_word*)t0)[9],tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)((C_word*)t0)[5])[1])){
C_trace("ChickenBridge.scm: 379  error");
t6=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t6))(4,t6,t5,lf[19],lf[344]);}
else{
t6=t5;
f_18431(2,t6,C_SCHEME_UNDEFINED);}}
else{
t5=(C_word)C_eqp(t3,lf[345]);
if(C_truep(t5)){
t6=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_18466,a[2]=((C_word*)t0)[6],a[3]=t2,a[4]=((C_word*)t0)[7],a[5]=((C_word*)t0)[4],a[6]=((C_word*)t0)[3],a[7]=((C_word*)t0)[8],tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)((C_word*)t0)[3])[1])){
C_trace("ChickenBridge.scm: 379  error");
t7=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t7))(4,t7,t6,lf[19],lf[345]);}
else{
t7=t6;
f_18466(2,t7,C_SCHEME_UNDEFINED);}}
else{
t6=(C_word)C_eqp(t3,lf[360]);
if(C_truep(t6)){
t7=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_18501,a[2]=((C_word*)t0)[6],a[3]=t2,a[4]=((C_word*)t0)[7],a[5]=((C_word*)t0)[4],a[6]=((C_word*)t0)[2],a[7]=((C_word*)t0)[10],tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)((C_word*)t0)[2])[1])){
C_trace("ChickenBridge.scm: 379  error");
t8=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t8))(4,t8,t7,lf[19],lf[360]);}
else{
t8=t7;
f_18501(2,t8,C_SCHEME_UNDEFINED);}}
else{
t7=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_18530,a[2]=t2,a[3]=((C_word*)t0)[2],a[4]=((C_word*)t0)[10],a[5]=((C_word*)t0)[7],tmp=(C_word)a,a+=6,tmp);
if(C_truep(((C_word*)((C_word*)t0)[4])[1])){
C_trace("ChickenBridge.scm: 379  error");
t8=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t8))(4,t8,t7,lf[10],((C_word*)t0)[6]);}
else{
t8=t7;
f_18530(2,t8,C_SCHEME_UNDEFINED);}}}}}}

/* k18528 in k18372 in k18369 in k18366 in make-rotation in k11783 in k10718 in k10715 in k7274 in k7271 in k6978 in k6975 in k6971 in k6680 in k6677 in k6674 in k6671 */
static void C_ccall f_18530(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_18530,2,t0,t1);}
t2=(C_word)C_i_car(((C_word*)((C_word*)t0)[5])[1]);
t3=C_mutate(((C_word *)((C_word*)t0)[4])+1,t2);
t4=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_18537,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[5],a[4]=((C_word*)t0)[3],tmp=(C_word)a,a+=5,tmp);
t5=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_18545,a[2]=((C_word*)t0)[4],a[3]=t4,tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 379  keyword?");
t6=C_retrieve(lf[13]);
((C_proc3)C_retrieve_proc(t6))(3,t6,t5,((C_word*)((C_word*)t0)[4])[1]);}

/* k18543 in k18528 in k18372 in k18369 in k18366 in make-rotation in k11783 in k10718 in k10715 in k7274 in k7271 in k6978 in k6975 in k6971 in k6680 in k6677 in k6674 in k6671 */
static void C_ccall f_18545(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
if(C_truep(t1)){
C_trace("ChickenBridge.scm: 379  error");
t2=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t2))(4,t2,((C_word*)t0)[3],lf[14],((C_word*)((C_word*)t0)[2])[1]);}
else{
t2=((C_word*)t0)[3];
f_18537(2,t2,C_SCHEME_UNDEFINED);}}

/* k18535 in k18528 in k18372 in k18369 in k18366 in make-rotation in k11783 in k10718 in k10715 in k7274 in k7271 in k6978 in k6975 in k6971 in k6680 in k6677 in k6674 in k6671 */
static void C_ccall f_18537(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word *a;
t2=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[3])[1]);
t4=C_mutate(((C_word *)((C_word*)t0)[3])+1,t3);
t5=((C_word*)t0)[2];
f_18377(t5,t4);}

/* k18499 in k18372 in k18369 in k18366 in make-rotation in k11783 in k10718 in k10715 in k7274 in k7271 in k6978 in k6975 in k6971 in k6680 in k6677 in k6674 in k6671 */
static void C_ccall f_18501(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_18501,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_18505,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("ChickenBridge.scm: 379  error");
t4=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[21],((C_word*)t0)[2]);}
else{
t4=t2;
f_18505(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k18503 in k18499 in k18372 in k18369 in k18366 in make-rotation in k11783 in k10718 in k10715 in k7274 in k7271 in k6978 in k6975 in k6971 in k6680 in k6677 in k6674 in k6671 */
static void C_ccall f_18505(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_18377(t7,t6);}

/* k18464 in k18372 in k18369 in k18366 in make-rotation in k11783 in k10718 in k10715 in k7274 in k7271 in k6978 in k6975 in k6971 in k6680 in k6677 in k6674 in k6671 */
static void C_ccall f_18466(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_18466,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_18470,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("ChickenBridge.scm: 379  error");
t4=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[21],((C_word*)t0)[2]);}
else{
t4=t2;
f_18470(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k18468 in k18464 in k18372 in k18369 in k18366 in make-rotation in k11783 in k10718 in k10715 in k7274 in k7271 in k6978 in k6975 in k6971 in k6680 in k6677 in k6674 in k6671 */
static void C_ccall f_18470(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_18377(t7,t6);}

/* k18429 in k18372 in k18369 in k18366 in make-rotation in k11783 in k10718 in k10715 in k7274 in k7271 in k6978 in k6975 in k6971 in k6680 in k6677 in k6674 in k6671 */
static void C_ccall f_18431(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_18431,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_18435,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("ChickenBridge.scm: 379  error");
t4=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[21],((C_word*)t0)[2]);}
else{
t4=t2;
f_18435(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k18433 in k18429 in k18372 in k18369 in k18366 in make-rotation in k11783 in k10718 in k10715 in k7274 in k7271 in k6978 in k6975 in k6971 in k6680 in k6677 in k6674 in k6671 */
static void C_ccall f_18435(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_18377(t7,t6);}

/* k18375 in k18372 in k18369 in k18366 in make-rotation in k11783 in k10718 in k10715 in k7274 in k7271 in k6978 in k6975 in k6971 in k6680 in k6677 in k6674 in k6671 */
static void C_fcall f_18377(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_18377,NULL,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_18380,a[2]=((C_word*)t0)[4],a[3]=((C_word*)t0)[5],a[4]=((C_word*)t0)[6],a[5]=((C_word*)t0)[7],a[6]=((C_word*)t0)[8],tmp=(C_word)a,a+=7,tmp);
if(C_truep((C_word)C_i_nullp(((C_word*)((C_word*)t0)[3])[1]))){
t3=t2;
f_18380(2,t3,C_SCHEME_UNDEFINED);}
else{
C_trace("ChickenBridge.scm: 379  error");
t3=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t3))(4,t3,t2,lf[5],((C_word*)t0)[2]);}}

/* k18378 in k18375 in k18372 in k18369 in k18366 in make-rotation in k11783 in k10718 in k10715 in k7274 in k7271 in k6978 in k6975 in k6971 in k6680 in k6677 in k6674 in k6671 */
static void C_ccall f_18380(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_18380,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_18383,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],tmp=(C_word)a,a+=7,tmp);
C_trace("ChickenBridge.scm: 379  %alloc-pattern");
f_15819(t2);}

/* k18381 in k18378 in k18375 in k18372 in k18369 in k18366 in make-rotation in k11783 in k10718 in k10715 in k7274 in k7271 in k6978 in k6975 in k6971 in k6680 in k6677 in k6674 in k6671 */
static void C_ccall f_18383(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[11],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_18383,2,t0,t1);}
t2=(C_word)C_i_length(((C_word*)((C_word*)t0)[6])[1]);
t3=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_18389,a[2]=((C_word*)t0)[4],a[3]=t1,a[4]=((C_word*)t0)[5],tmp=(C_word)a,a+=5,tmp);
t4=(C_word)C_a_i_cons(&a,2,((C_word*)((C_word*)t0)[6])[1],((C_word*)((C_word*)t0)[6])[1]);
t5=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_18398,a[2]=((C_word)li267),tmp=(C_word)a,a+=3,tmp);
C_trace("ChickenBridge.scm: 379  initialize-pattern");
f_15829(t3,t1,t4,((C_word*)((C_word*)t0)[3])[1],((C_word*)((C_word*)t0)[2])[1],C_fix(0),t2,t2,C_retrieve2(lf[359],"next-in-rotation"),t5);}

/* a18397 in k18381 in k18378 in k18375 in k18372 in k18369 in k18366 in make-rotation in k11783 in k10718 in k10715 in k7274 in k7271 in k6978 in k6975 in k6971 in k6680 in k6677 in k6674 in k6671 */
static void C_ccall f_18398(C_word c,C_word t0,C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word ab[4],*a=ab;
if(c!=4) C_bad_argc_2(c,4,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr4,(void*)f_18398,4,t0,t1,t2,t3);}
t4=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_18410,a[2]=t2,a[3]=t1,tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 379  pattern-data");
f_15548(t4,t3);}

/* k18408 in a18397 in k18381 in k18378 in k18375 in k18372 in k18369 in k18366 in make-rotation in k11783 in k10718 in k10715 in k7274 in k7271 in k6978 in k6975 in k6971 in k6680 in k6677 in k6674 in k6671 */
static void C_ccall f_18410(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word *a;
t2=(C_word)C_i_car(t1);
C_trace("for-each");
t3=*((C_word*)lf[237]+1);
((C_proc4)(void*)(*((C_word*)t3+1)))(4,t3,((C_word*)t0)[3],((C_word*)t0)[2],t2);}

/* k18387 in k18381 in k18378 in k18375 in k18372 in k18369 in k18366 in make-rotation in k11783 in k10718 in k10715 in k7274 in k7271 in k6978 in k6975 in k6971 in k6680 in k6677 in k6674 in k6671 */
static void C_ccall f_18389(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[4],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_18389,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_18392,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 379  pattern-cache-set!");
f_15755(t2,((C_word*)t0)[3],((C_word*)((C_word*)t0)[2])[1]);}

/* k18390 in k18387 in k18381 in k18378 in k18375 in k18372 in k18369 in k18366 in make-rotation in k11783 in k10718 in k10715 in k7274 in k7271 in k6978 in k6975 in k6971 in k6680 in k6677 in k6674 in k6671 */
static void C_ccall f_18392(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
t2=((C_word*)t0)[3];
((C_proc2)(void*)(*((C_word*)t2+1)))(2,t2,((C_word*)t0)[2]);}

/* next-in-heap in k11783 in k10718 in k10715 in k7274 in k7271 in k6978 in k6975 in k6971 in k6680 in k6677 in k6674 in k6671 */
static void C_ccall f_18288(C_word c,C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word ab[4],*a=ab;
if(c!=3) C_bad_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr3,(void*)f_18288,3,t0,t1,t2);}
t3=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_18292,a[2]=t2,a[3]=t1,tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 379  pattern-data");
f_15548(t3,t2);}

/* k18290 in next-in-heap in k11783 in k10718 in k10715 in k7274 in k7271 in k6978 in k6975 in k6971 in k6680 in k6677 in k6674 in k6671 */
static void C_ccall f_18292(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[8],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_18292,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_18295,a[2]=((C_word*)t0)[3],a[3]=t1,tmp=(C_word)a,a+=4,tmp);
t3=(C_word)C_i_cdr(t1);
if(C_truep((C_word)C_i_nullp(t3))){
t4=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_18311,a[2]=t2,a[3]=t1,tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 379  pattern-length");
f_15566(t4,((C_word*)t0)[2]);}
else{
t4=t2;
f_18295(2,t4,C_SCHEME_UNDEFINED);}}

/* k18309 in k18290 in next-in-heap in k11783 in k10718 in k10715 in k7274 in k7271 in k6978 in k6975 in k6971 in k6680 in k6677 in k6674 in k6671 */
static void C_ccall f_18311(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[6],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_18311,2,t0,t1);}
t2=(C_word)C_i_car(((C_word*)t0)[3]);
t3=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_18321,a[2]=((C_word*)t0)[2],a[3]=t2,a[4]=((C_word*)t0)[3],a[5]=t1,tmp=(C_word)a,a+=6,tmp);
C_trace("ChickenBridge.scm: 379  tb:rani");
f_8355(t3,t1);}

/* k18319 in k18309 in k18290 in next-in-heap in k11783 in k10718 in k10715 in k7274 in k7271 in k6978 in k6975 in k6971 in k6680 in k6677 in k6674 in k6671 */
static void C_ccall f_18321(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_18321,2,t0,t1);}
t2=C_SCHEME_UNDEFINED;
t3=(*a=C_VECTOR_TYPE|1,a[1]=t2,tmp=(C_word)a,a+=2,tmp);
t4=C_set_block_item(t3,0,(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_18323,a[2]=t3,a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=((C_word)li265),tmp=(C_word)a,a+=7,tmp));
t5=((C_word*)t3)[1];
f_18323(t5,((C_word*)t0)[2],C_fix(0),t1,C_SCHEME_FALSE);}

/* do2206 in k18319 in k18309 in k18290 in next-in-heap in k11783 in k10718 in k10715 in k7274 in k7271 in k6978 in k6975 in k6971 in k6680 in k6677 in k6674 in k6671 */
static void C_fcall f_18323(C_word t0,C_word t1,C_word t2,C_word t3,C_word t4){
C_word tmp;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word ab[11],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_18323,NULL,5,t0,t1,t2,t3,t4);}
t5=(*a=C_VECTOR_TYPE|1,a[1]=t4,tmp=(C_word)a,a+=2,tmp);
if(C_truep((C_word)C_i_nequalp(t2,((C_word*)t0)[5]))){
t6=t1;
((C_proc2)(void*)(*((C_word*)t6+1)))(2,t6,(C_word)C_i_set_cdr(((C_word*)t0)[4],((C_word*)t0)[3]));}
else{
t6=(C_word)C_i_list_ref(((C_word*)t0)[3],t2);
t7=C_set_block_item(t5,0,t6);
t8=(*a=C_CLOSURE_TYPE|8,a[1]=(C_word)f_18340,a[2]=t3,a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[5],a[5]=t5,a[6]=t1,a[7]=((C_word*)t0)[2],a[8]=t2,tmp=(C_word)a,a+=9,tmp);
t9=(C_word)C_i_list_ref(((C_word*)t0)[3],t3);
C_trace("ChickenBridge.scm: 379  list-set!");
t10=C_retrieve(lf[81]);
((C_proc5)C_retrieve_proc(t10))(5,t10,t8,((C_word*)t0)[3],t2,t9);}}

/* k18338 in do2206 in k18319 in k18309 in k18290 in next-in-heap in k11783 in k10718 in k10715 in k7274 in k7271 in k6978 in k6975 in k6971 in k6680 in k6677 in k6674 in k6671 */
static void C_ccall f_18340(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_18340,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_18343,a[2]=((C_word*)t0)[4],a[3]=((C_word*)t0)[5],a[4]=((C_word*)t0)[6],a[5]=((C_word*)t0)[7],a[6]=((C_word*)t0)[8],tmp=(C_word)a,a+=7,tmp);
C_trace("ChickenBridge.scm: 379  list-set!");
t3=C_retrieve(lf[81]);
((C_proc5)C_retrieve_proc(t3))(5,t3,t2,((C_word*)t0)[3],((C_word*)t0)[2],((C_word*)((C_word*)t0)[5])[1]);}

/* k18341 in k18338 in do2206 in k18319 in k18309 in k18290 in next-in-heap in k11783 in k10718 in k10715 in k7274 in k7271 in k6978 in k6975 in k6971 in k6680 in k6677 in k6674 in k6671 */
static void C_ccall f_18343(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[10],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_18343,2,t0,t1);}
t2=(C_word)C_a_i_plus(&a,2,((C_word*)t0)[6],C_fix(1));
t3=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_18354,a[2]=((C_word*)t0)[3],a[3]=t2,a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],tmp=(C_word)a,a+=6,tmp);
C_trace("ChickenBridge.scm: 379  tb:rani");
f_8355(t3,((C_word*)t0)[2]);}

/* k18352 in k18341 in k18338 in do2206 in k18319 in k18309 in k18290 in next-in-heap in k11783 in k10718 in k10715 in k7274 in k7271 in k6978 in k6975 in k6971 in k6680 in k6677 in k6674 in k6671 */
static void C_ccall f_18354(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
t2=((C_word*)((C_word*)t0)[5])[1];
f_18323(t2,((C_word*)t0)[4],((C_word*)t0)[3],t1,((C_word*)((C_word*)t0)[2])[1]);}

/* k18293 in k18290 in next-in-heap in k11783 in k10718 in k10715 in k7274 in k7271 in k6978 in k6975 in k6971 in k6680 in k6677 in k6674 in k6671 */
static void C_ccall f_18295(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word *a;
t2=(C_word)C_i_cadr(((C_word*)t0)[3]);
t3=(C_word)C_i_cddr(((C_word*)t0)[3]);
t4=(C_word)C_i_set_cdr(((C_word*)t0)[3],t3);
t5=((C_word*)t0)[2];
((C_proc2)(void*)(*((C_word*)t5+1)))(2,t5,t2);}

/* make-heap in k11783 in k10718 in k10715 in k7274 in k7271 in k6978 in k6975 in k6971 in k6680 in k6677 in k6674 in k6671 */
static void C_ccall f_18025(C_word c,C_word t0,C_word t1,C_word t2,...){
C_word tmp;
C_word t3;
va_list v;
C_word *a,c2=c;
C_save_rest(t2,c2,3);
if(c<3) C_bad_min_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_demand(c*C_SIZEOF_PAIR+14)){
C_save_and_reclaim((void*)tr3r,(void*)f_18025r,3,t0,t1,t2);}
else{
a=C_alloc((c-3)*3);
t3=C_restore_rest(a,C_rest_count(0));
f_18025r(t0,t1,t2,t3);}}

static void C_ccall f_18025r(C_word t0,C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word *a=C_alloc(14);
t4=(*a=C_VECTOR_TYPE|1,a[1]=t2,tmp=(C_word)a,a+=2,tmp);
t5=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_18029,a[2]=t1,a[3]=t4,a[4]=t3,tmp=(C_word)a,a+=5,tmp);
if(C_truep((C_word)C_i_pairp(((C_word*)t4)[1]))){
t6=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_18278,a[2]=t5,a[3]=t4,tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 379  append");
t7=*((C_word*)lf[18]+1);
((C_proc4)C_retrieve_proc(t7))(4,t7,t6,((C_word*)t4)[1],C_SCHEME_END_OF_LIST);}
else{
t6=(C_word)C_a_i_list(&a,1,((C_word*)t4)[1]);
t7=C_set_block_item(t4,0,t6);
t8=t5;
f_18029(t8,t7);}}

/* k18276 in make-heap in k11783 in k10718 in k10715 in k7274 in k7271 in k6978 in k6975 in k6971 in k6680 in k6677 in k6674 in k6671 */
static void C_ccall f_18278(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[3])+1,t1);
t3=((C_word*)t0)[2];
f_18029(t3,t2);}

/* k18027 in make-heap in k11783 in k10718 in k10715 in k7274 in k7271 in k6978 in k6975 in k6971 in k6680 in k6677 in k6674 in k6671 */
static void C_fcall f_18029(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word t14;
C_word t15;
C_word t16;
C_word t17;
C_word t18;
C_word t19;
C_word t20;
C_word t21;
C_word ab[45],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_18029,NULL,2,t0,t1);}
t2=C_SCHEME_FALSE;
t3=(*a=C_VECTOR_TYPE|1,a[1]=t2,tmp=(C_word)a,a+=2,tmp);
t4=C_SCHEME_FALSE;
t5=(*a=C_VECTOR_TYPE|1,a[1]=t4,tmp=(C_word)a,a+=2,tmp);
t6=C_SCHEME_FALSE;
t7=(*a=C_VECTOR_TYPE|1,a[1]=t6,tmp=(C_word)a,a+=2,tmp);
t8=C_SCHEME_FALSE;
t9=(*a=C_VECTOR_TYPE|1,a[1]=t8,tmp=(C_word)a,a+=2,tmp);
t10=((C_word*)t0)[4];
t11=(*a=C_VECTOR_TYPE|1,a[1]=t10,tmp=(C_word)a,a+=2,tmp);
t12=C_SCHEME_FALSE;
t13=(*a=C_VECTOR_TYPE|1,a[1]=t12,tmp=(C_word)a,a+=2,tmp);
t14=(*a=C_CLOSURE_TYPE|10,a[1]=(C_word)f_18032,a[2]=t9,a[3]=t13,a[4]=t7,a[5]=((C_word*)t0)[4],a[6]=t11,a[7]=t5,a[8]=t3,a[9]=((C_word*)t0)[2],a[10]=((C_word*)t0)[3],tmp=(C_word)a,a+=11,tmp);
if(C_truep((C_word)C_i_nullp(((C_word*)t11)[1]))){
t15=t14;
f_18032(t15,C_SCHEME_UNDEFINED);}
else{
t15=(C_word)C_i_car(((C_word*)t11)[1]);
t16=(C_word)C_eqp(t15,lf[344]);
if(C_truep(t16)){
t17=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_18186,a[2]=((C_word*)t0)[4],a[3]=t14,a[4]=t11,a[5]=t13,a[6]=t7,a[7]=t3,tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)t7)[1])){
C_trace("ChickenBridge.scm: 379  error");
t18=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t18))(4,t18,t17,lf[19],lf[344]);}
else{
t18=t17;
f_18186(2,t18,C_SCHEME_UNDEFINED);}}
else{
t17=(C_word)C_eqp(t15,lf[345]);
if(C_truep(t17)){
t18=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_18221,a[2]=((C_word*)t0)[4],a[3]=t14,a[4]=t11,a[5]=t13,a[6]=t9,a[7]=t5,tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)t9)[1])){
C_trace("ChickenBridge.scm: 379  error");
t19=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t19))(4,t19,t18,lf[19],lf[345]);}
else{
t19=t18;
f_18221(2,t19,C_SCHEME_UNDEFINED);}}
else{
t18=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_18250,a[2]=t14,a[3]=t7,a[4]=t3,a[5]=t11,tmp=(C_word)a,a+=6,tmp);
if(C_truep(((C_word*)t13)[1])){
C_trace("ChickenBridge.scm: 379  error");
t19=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t19))(4,t19,t18,lf[10],((C_word*)t0)[4]);}
else{
t19=t18;
f_18250(2,t19,C_SCHEME_UNDEFINED);}}}}}

/* k18248 in k18027 in make-heap in k11783 in k10718 in k10715 in k7274 in k7271 in k6978 in k6975 in k6971 in k6680 in k6677 in k6674 in k6671 */
static void C_ccall f_18250(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_18250,2,t0,t1);}
t2=(C_word)C_i_car(((C_word*)((C_word*)t0)[5])[1]);
t3=C_mutate(((C_word *)((C_word*)t0)[4])+1,t2);
t4=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_18257,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[5],a[4]=((C_word*)t0)[3],tmp=(C_word)a,a+=5,tmp);
t5=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_18265,a[2]=((C_word*)t0)[4],a[3]=t4,tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 379  keyword?");
t6=C_retrieve(lf[13]);
((C_proc3)C_retrieve_proc(t6))(3,t6,t5,((C_word*)((C_word*)t0)[4])[1]);}

/* k18263 in k18248 in k18027 in make-heap in k11783 in k10718 in k10715 in k7274 in k7271 in k6978 in k6975 in k6971 in k6680 in k6677 in k6674 in k6671 */
static void C_ccall f_18265(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
if(C_truep(t1)){
C_trace("ChickenBridge.scm: 379  error");
t2=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t2))(4,t2,((C_word*)t0)[3],lf[14],((C_word*)((C_word*)t0)[2])[1]);}
else{
t2=((C_word*)t0)[3];
f_18257(2,t2,C_SCHEME_UNDEFINED);}}

/* k18255 in k18248 in k18027 in make-heap in k11783 in k10718 in k10715 in k7274 in k7271 in k6978 in k6975 in k6971 in k6680 in k6677 in k6674 in k6671 */
static void C_ccall f_18257(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word *a;
t2=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[3])[1]);
t4=C_mutate(((C_word *)((C_word*)t0)[3])+1,t3);
t5=((C_word*)t0)[2];
f_18032(t5,t4);}

/* k18219 in k18027 in make-heap in k11783 in k10718 in k10715 in k7274 in k7271 in k6978 in k6975 in k6971 in k6680 in k6677 in k6674 in k6671 */
static void C_ccall f_18221(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_18221,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_18225,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("ChickenBridge.scm: 379  error");
t4=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[21],((C_word*)t0)[2]);}
else{
t4=t2;
f_18225(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k18223 in k18219 in k18027 in make-heap in k11783 in k10718 in k10715 in k7274 in k7271 in k6978 in k6975 in k6971 in k6680 in k6677 in k6674 in k6671 */
static void C_ccall f_18225(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_18032(t7,t6);}

/* k18184 in k18027 in make-heap in k11783 in k10718 in k10715 in k7274 in k7271 in k6978 in k6975 in k6971 in k6680 in k6677 in k6674 in k6671 */
static void C_ccall f_18186(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_18186,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_18190,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("ChickenBridge.scm: 379  error");
t4=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[21],((C_word*)t0)[2]);}
else{
t4=t2;
f_18190(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k18188 in k18184 in k18027 in make-heap in k11783 in k10718 in k10715 in k7274 in k7271 in k6978 in k6975 in k6971 in k6680 in k6677 in k6674 in k6671 */
static void C_ccall f_18190(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_18032(t7,t6);}

/* k18030 in k18027 in make-heap in k11783 in k10718 in k10715 in k7274 in k7271 in k6978 in k6975 in k6971 in k6680 in k6677 in k6674 in k6671 */
static void C_fcall f_18032(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word ab[30],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_18032,NULL,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_18035,a[2]=((C_word*)t0)[5],a[3]=((C_word*)t0)[6],a[4]=((C_word*)t0)[7],a[5]=((C_word*)t0)[8],a[6]=((C_word*)t0)[9],a[7]=((C_word*)t0)[10],tmp=(C_word)a,a+=8,tmp);
if(C_truep((C_word)C_i_nullp(((C_word*)((C_word*)t0)[6])[1]))){
t3=t2;
f_18035(t3,C_SCHEME_UNDEFINED);}
else{
t3=(C_word)C_i_car(((C_word*)((C_word*)t0)[6])[1]);
t4=(C_word)C_eqp(t3,lf[344]);
if(C_truep(t4)){
t5=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_18086,a[2]=((C_word*)t0)[5],a[3]=t2,a[4]=((C_word*)t0)[6],a[5]=((C_word*)t0)[3],a[6]=((C_word*)t0)[4],a[7]=((C_word*)t0)[8],tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)((C_word*)t0)[4])[1])){
C_trace("ChickenBridge.scm: 379  error");
t6=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t6))(4,t6,t5,lf[19],lf[344]);}
else{
t6=t5;
f_18086(2,t6,C_SCHEME_UNDEFINED);}}
else{
t5=(C_word)C_eqp(t3,lf[345]);
if(C_truep(t5)){
t6=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_18121,a[2]=((C_word*)t0)[5],a[3]=t2,a[4]=((C_word*)t0)[6],a[5]=((C_word*)t0)[3],a[6]=((C_word*)t0)[2],a[7]=((C_word*)t0)[7],tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)((C_word*)t0)[2])[1])){
C_trace("ChickenBridge.scm: 379  error");
t7=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t7))(4,t7,t6,lf[19],lf[345]);}
else{
t7=t6;
f_18121(2,t7,C_SCHEME_UNDEFINED);}}
else{
t6=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_18150,a[2]=t2,a[3]=((C_word*)t0)[2],a[4]=((C_word*)t0)[7],a[5]=((C_word*)t0)[6],tmp=(C_word)a,a+=6,tmp);
if(C_truep(((C_word*)((C_word*)t0)[3])[1])){
C_trace("ChickenBridge.scm: 379  error");
t7=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t7))(4,t7,t6,lf[10],((C_word*)t0)[5]);}
else{
t7=t6;
f_18150(2,t7,C_SCHEME_UNDEFINED);}}}}}

/* k18148 in k18030 in k18027 in make-heap in k11783 in k10718 in k10715 in k7274 in k7271 in k6978 in k6975 in k6971 in k6680 in k6677 in k6674 in k6671 */
static void C_ccall f_18150(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_18150,2,t0,t1);}
t2=(C_word)C_i_car(((C_word*)((C_word*)t0)[5])[1]);
t3=C_mutate(((C_word *)((C_word*)t0)[4])+1,t2);
t4=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_18157,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[5],a[4]=((C_word*)t0)[3],tmp=(C_word)a,a+=5,tmp);
t5=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_18165,a[2]=((C_word*)t0)[4],a[3]=t4,tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 379  keyword?");
t6=C_retrieve(lf[13]);
((C_proc3)C_retrieve_proc(t6))(3,t6,t5,((C_word*)((C_word*)t0)[4])[1]);}

/* k18163 in k18148 in k18030 in k18027 in make-heap in k11783 in k10718 in k10715 in k7274 in k7271 in k6978 in k6975 in k6971 in k6680 in k6677 in k6674 in k6671 */
static void C_ccall f_18165(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
if(C_truep(t1)){
C_trace("ChickenBridge.scm: 379  error");
t2=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t2))(4,t2,((C_word*)t0)[3],lf[14],((C_word*)((C_word*)t0)[2])[1]);}
else{
t2=((C_word*)t0)[3];
f_18157(2,t2,C_SCHEME_UNDEFINED);}}

/* k18155 in k18148 in k18030 in k18027 in make-heap in k11783 in k10718 in k10715 in k7274 in k7271 in k6978 in k6975 in k6971 in k6680 in k6677 in k6674 in k6671 */
static void C_ccall f_18157(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word *a;
t2=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[3])[1]);
t4=C_mutate(((C_word *)((C_word*)t0)[3])+1,t3);
t5=((C_word*)t0)[2];
f_18035(t5,t4);}

/* k18119 in k18030 in k18027 in make-heap in k11783 in k10718 in k10715 in k7274 in k7271 in k6978 in k6975 in k6971 in k6680 in k6677 in k6674 in k6671 */
static void C_ccall f_18121(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_18121,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_18125,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("ChickenBridge.scm: 379  error");
t4=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[21],((C_word*)t0)[2]);}
else{
t4=t2;
f_18125(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k18123 in k18119 in k18030 in k18027 in make-heap in k11783 in k10718 in k10715 in k7274 in k7271 in k6978 in k6975 in k6971 in k6680 in k6677 in k6674 in k6671 */
static void C_ccall f_18125(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_18035(t7,t6);}

/* k18084 in k18030 in k18027 in make-heap in k11783 in k10718 in k10715 in k7274 in k7271 in k6978 in k6975 in k6971 in k6680 in k6677 in k6674 in k6671 */
static void C_ccall f_18086(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_18086,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_18090,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("ChickenBridge.scm: 379  error");
t4=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[21],((C_word*)t0)[2]);}
else{
t4=t2;
f_18090(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k18088 in k18084 in k18030 in k18027 in make-heap in k11783 in k10718 in k10715 in k7274 in k7271 in k6978 in k6975 in k6971 in k6680 in k6677 in k6674 in k6671 */
static void C_ccall f_18090(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_18035(t7,t6);}

/* k18033 in k18030 in k18027 in make-heap in k11783 in k10718 in k10715 in k7274 in k7271 in k6978 in k6975 in k6971 in k6680 in k6677 in k6674 in k6671 */
static void C_fcall f_18035(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[6],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_18035,NULL,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_18038,a[2]=((C_word*)t0)[4],a[3]=((C_word*)t0)[5],a[4]=((C_word*)t0)[6],a[5]=((C_word*)t0)[7],tmp=(C_word)a,a+=6,tmp);
if(C_truep((C_word)C_i_nullp(((C_word*)((C_word*)t0)[3])[1]))){
t3=t2;
f_18038(2,t3,C_SCHEME_UNDEFINED);}
else{
C_trace("ChickenBridge.scm: 379  error");
t3=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t3))(4,t3,t2,lf[5],((C_word*)t0)[2]);}}

/* k18036 in k18033 in k18030 in k18027 in make-heap in k11783 in k10718 in k10715 in k7274 in k7271 in k6978 in k6975 in k6971 in k6680 in k6677 in k6674 in k6671 */
static void C_ccall f_18038(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[6],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_18038,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_18041,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],tmp=(C_word)a,a+=6,tmp);
C_trace("ChickenBridge.scm: 379  %alloc-pattern");
f_15819(t2);}

/* k18039 in k18036 in k18033 in k18030 in k18027 in make-heap in k11783 in k10718 in k10715 in k7274 in k7271 in k6978 in k6975 in k6971 in k6680 in k6677 in k6674 in k6671 */
static void C_ccall f_18041(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[10],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_18041,2,t0,t1);}
t2=(C_word)C_i_length(((C_word*)((C_word*)t0)[5])[1]);
t3=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_18047,a[2]=t1,a[3]=((C_word*)t0)[4],tmp=(C_word)a,a+=4,tmp);
t4=(C_word)C_a_i_list(&a,1,((C_word*)((C_word*)t0)[5])[1]);
t5=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_18053,a[2]=((C_word)li263),tmp=(C_word)a,a+=3,tmp);
C_trace("ChickenBridge.scm: 379  initialize-pattern");
f_15829(t3,t1,t4,((C_word*)((C_word*)t0)[3])[1],((C_word*)((C_word*)t0)[2])[1],C_fix(0),t2,t2,C_retrieve2(lf[357],"next-in-heap"),t5);}

/* a18052 in k18039 in k18036 in k18033 in k18030 in k18027 in make-heap in k11783 in k10718 in k10715 in k7274 in k7271 in k6978 in k6975 in k6971 in k6680 in k6677 in k6674 in k6671 */
static void C_ccall f_18053(C_word c,C_word t0,C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word ab[4],*a=ab;
if(c!=4) C_bad_argc_2(c,4,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr4,(void*)f_18053,4,t0,t1,t2,t3);}
t4=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_18065,a[2]=t2,a[3]=t1,tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 379  pattern-data");
f_15548(t4,t3);}

/* k18063 in a18052 in k18039 in k18036 in k18033 in k18030 in k18027 in make-heap in k11783 in k10718 in k10715 in k7274 in k7271 in k6978 in k6975 in k6971 in k6680 in k6677 in k6674 in k6671 */
static void C_ccall f_18065(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word *a;
t2=(C_word)C_i_car(t1);
C_trace("for-each");
t3=*((C_word*)lf[237]+1);
((C_proc4)(void*)(*((C_word*)t3+1)))(4,t3,((C_word*)t0)[3],((C_word*)t0)[2],t2);}

/* k18045 in k18039 in k18036 in k18033 in k18030 in k18027 in make-heap in k11783 in k10718 in k10715 in k7274 in k7271 in k6978 in k6975 in k6971 in k6680 in k6677 in k6674 in k6671 */
static void C_ccall f_18047(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
t2=((C_word*)t0)[3];
((C_proc2)(void*)(*((C_word*)t2+1)))(2,t2,((C_word*)t0)[2]);}

/* next-in-line in k11783 in k10718 in k10715 in k7274 in k7271 in k6978 in k6975 in k6971 in k6680 in k6677 in k6674 in k6671 */
static void C_ccall f_17989(C_word c,C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word ab[4],*a=ab;
if(c!=3) C_bad_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr3,(void*)f_17989,3,t0,t1,t2);}
t3=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_17993,a[2]=t2,a[3]=t1,tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 379  pattern-data");
f_15548(t3,t2);}

/* k17991 in next-in-line in k11783 in k10718 in k10715 in k7274 in k7271 in k6978 in k6975 in k6971 in k6680 in k6677 in k6674 in k6671 */
static void C_ccall f_17993(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word ab[11],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_17993,2,t0,t1);}
t2=(C_word)C_i_cdr(t1);
if(C_truep((C_word)C_i_nullp(t2))){
t3=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_18002,a[2]=t1,a[3]=((C_word*)t0)[3],tmp=(C_word)a,a+=4,tmp);
t4=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_18009,a[2]=t3,tmp=(C_word)a,a+=3,tmp);
C_trace("ChickenBridge.scm: 379  pattern-period");
f_15602(t4,((C_word*)t0)[2]);}
else{
t3=(C_word)C_i_car(t1);
t4=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_18015,a[2]=t3,a[3]=((C_word*)t0)[3],tmp=(C_word)a,a+=4,tmp);
t5=(C_word)C_i_cdr(t1);
C_trace("ChickenBridge.scm: 379  pattern-data-set!");
f_15539(t4,((C_word*)t0)[2],t5);}}

/* k18013 in k17991 in next-in-line in k11783 in k10718 in k10715 in k7274 in k7271 in k6978 in k6975 in k6971 in k6680 in k6677 in k6674 in k6671 */
static void C_ccall f_18015(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
t2=((C_word*)t0)[3];
((C_proc2)(void*)(*((C_word*)t2+1)))(2,t2,((C_word*)t0)[2]);}

/* k18007 in k17991 in next-in-line in k11783 in k10718 in k10715 in k7274 in k7271 in k6978 in k6975 in k6971 in k6680 in k6677 in k6674 in k6671 */
static void C_ccall f_18009(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 379  period-count-set!");
f_15371(((C_word*)t0)[2],t1,C_fix(1));}

/* k18000 in k17991 in next-in-line in k11783 in k10718 in k10715 in k7274 in k7271 in k6978 in k6975 in k6971 in k6680 in k6677 in k6674 in k6671 */
static void C_ccall f_18002(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
t2=((C_word*)t0)[3];
((C_proc2)(void*)(*((C_word*)t2+1)))(2,t2,(C_word)C_i_car(((C_word*)t0)[2]));}

/* make-line in k11783 in k10718 in k10715 in k7274 in k7271 in k6978 in k6975 in k6971 in k6680 in k6677 in k6674 in k6671 */
static void C_ccall f_17742(C_word c,C_word t0,C_word t1,C_word t2,...){
C_word tmp;
C_word t3;
va_list v;
C_word *a,c2=c;
C_save_rest(t2,c2,3);
if(c<3) C_bad_min_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_demand(c*C_SIZEOF_PAIR+10)){
C_save_and_reclaim((void*)tr3r,(void*)f_17742r,3,t0,t1,t2);}
else{
a=C_alloc((c-3)*3);
t3=C_restore_rest(a,C_rest_count(0));
f_17742r(t0,t1,t2,t3);}}

static void C_ccall f_17742r(C_word t0,C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word *a=C_alloc(10);
t4=(*a=C_VECTOR_TYPE|1,a[1]=t2,tmp=(C_word)a,a+=2,tmp);
t5=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_17746,a[2]=t1,a[3]=t4,a[4]=t3,tmp=(C_word)a,a+=5,tmp);
if(C_truep((C_word)C_i_pairp(((C_word*)t4)[1]))){
t6=t5;
f_17746(t6,C_SCHEME_UNDEFINED);}
else{
t6=(C_word)C_a_i_list(&a,1,((C_word*)t4)[1]);
t7=C_set_block_item(t4,0,t6);
t8=t5;
f_17746(t8,t7);}}

/* k17744 in make-line in k11783 in k10718 in k10715 in k7274 in k7271 in k6978 in k6975 in k6971 in k6680 in k6677 in k6674 in k6671 */
static void C_fcall f_17746(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word t14;
C_word t15;
C_word t16;
C_word t17;
C_word t18;
C_word t19;
C_word t20;
C_word t21;
C_word ab[45],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_17746,NULL,2,t0,t1);}
t2=C_SCHEME_FALSE;
t3=(*a=C_VECTOR_TYPE|1,a[1]=t2,tmp=(C_word)a,a+=2,tmp);
t4=C_SCHEME_FALSE;
t5=(*a=C_VECTOR_TYPE|1,a[1]=t4,tmp=(C_word)a,a+=2,tmp);
t6=C_SCHEME_FALSE;
t7=(*a=C_VECTOR_TYPE|1,a[1]=t6,tmp=(C_word)a,a+=2,tmp);
t8=C_SCHEME_FALSE;
t9=(*a=C_VECTOR_TYPE|1,a[1]=t8,tmp=(C_word)a,a+=2,tmp);
t10=((C_word*)t0)[4];
t11=(*a=C_VECTOR_TYPE|1,a[1]=t10,tmp=(C_word)a,a+=2,tmp);
t12=C_SCHEME_FALSE;
t13=(*a=C_VECTOR_TYPE|1,a[1]=t12,tmp=(C_word)a,a+=2,tmp);
t14=(*a=C_CLOSURE_TYPE|10,a[1]=(C_word)f_17749,a[2]=t9,a[3]=t13,a[4]=t7,a[5]=((C_word*)t0)[4],a[6]=t11,a[7]=t5,a[8]=t3,a[9]=((C_word*)t0)[2],a[10]=((C_word*)t0)[3],tmp=(C_word)a,a+=11,tmp);
if(C_truep((C_word)C_i_nullp(((C_word*)t11)[1]))){
t15=t14;
f_17749(t15,C_SCHEME_UNDEFINED);}
else{
t15=(C_word)C_i_car(((C_word*)t11)[1]);
t16=(C_word)C_eqp(t15,lf[344]);
if(C_truep(t16)){
t17=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_17895,a[2]=((C_word*)t0)[4],a[3]=t14,a[4]=t11,a[5]=t13,a[6]=t7,a[7]=t3,tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)t7)[1])){
C_trace("ChickenBridge.scm: 379  error");
t18=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t18))(4,t18,t17,lf[19],lf[344]);}
else{
t18=t17;
f_17895(2,t18,C_SCHEME_UNDEFINED);}}
else{
t17=(C_word)C_eqp(t15,lf[345]);
if(C_truep(t17)){
t18=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_17930,a[2]=((C_word*)t0)[4],a[3]=t14,a[4]=t11,a[5]=t13,a[6]=t9,a[7]=t5,tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)t9)[1])){
C_trace("ChickenBridge.scm: 379  error");
t19=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t19))(4,t19,t18,lf[19],lf[345]);}
else{
t19=t18;
f_17930(2,t19,C_SCHEME_UNDEFINED);}}
else{
t18=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_17959,a[2]=t14,a[3]=t7,a[4]=t3,a[5]=t11,tmp=(C_word)a,a+=6,tmp);
if(C_truep(((C_word*)t13)[1])){
C_trace("ChickenBridge.scm: 379  error");
t19=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t19))(4,t19,t18,lf[10],((C_word*)t0)[4]);}
else{
t19=t18;
f_17959(2,t19,C_SCHEME_UNDEFINED);}}}}}

/* k17957 in k17744 in make-line in k11783 in k10718 in k10715 in k7274 in k7271 in k6978 in k6975 in k6971 in k6680 in k6677 in k6674 in k6671 */
static void C_ccall f_17959(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_17959,2,t0,t1);}
t2=(C_word)C_i_car(((C_word*)((C_word*)t0)[5])[1]);
t3=C_mutate(((C_word *)((C_word*)t0)[4])+1,t2);
t4=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_17966,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[5],a[4]=((C_word*)t0)[3],tmp=(C_word)a,a+=5,tmp);
t5=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_17974,a[2]=((C_word*)t0)[4],a[3]=t4,tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 379  keyword?");
t6=C_retrieve(lf[13]);
((C_proc3)C_retrieve_proc(t6))(3,t6,t5,((C_word*)((C_word*)t0)[4])[1]);}

/* k17972 in k17957 in k17744 in make-line in k11783 in k10718 in k10715 in k7274 in k7271 in k6978 in k6975 in k6971 in k6680 in k6677 in k6674 in k6671 */
static void C_ccall f_17974(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
if(C_truep(t1)){
C_trace("ChickenBridge.scm: 379  error");
t2=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t2))(4,t2,((C_word*)t0)[3],lf[14],((C_word*)((C_word*)t0)[2])[1]);}
else{
t2=((C_word*)t0)[3];
f_17966(2,t2,C_SCHEME_UNDEFINED);}}

/* k17964 in k17957 in k17744 in make-line in k11783 in k10718 in k10715 in k7274 in k7271 in k6978 in k6975 in k6971 in k6680 in k6677 in k6674 in k6671 */
static void C_ccall f_17966(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word *a;
t2=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[3])[1]);
t4=C_mutate(((C_word *)((C_word*)t0)[3])+1,t3);
t5=((C_word*)t0)[2];
f_17749(t5,t4);}

/* k17928 in k17744 in make-line in k11783 in k10718 in k10715 in k7274 in k7271 in k6978 in k6975 in k6971 in k6680 in k6677 in k6674 in k6671 */
static void C_ccall f_17930(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_17930,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_17934,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("ChickenBridge.scm: 379  error");
t4=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[21],((C_word*)t0)[2]);}
else{
t4=t2;
f_17934(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k17932 in k17928 in k17744 in make-line in k11783 in k10718 in k10715 in k7274 in k7271 in k6978 in k6975 in k6971 in k6680 in k6677 in k6674 in k6671 */
static void C_ccall f_17934(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_17749(t7,t6);}

/* k17893 in k17744 in make-line in k11783 in k10718 in k10715 in k7274 in k7271 in k6978 in k6975 in k6971 in k6680 in k6677 in k6674 in k6671 */
static void C_ccall f_17895(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_17895,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_17899,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("ChickenBridge.scm: 379  error");
t4=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[21],((C_word*)t0)[2]);}
else{
t4=t2;
f_17899(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k17897 in k17893 in k17744 in make-line in k11783 in k10718 in k10715 in k7274 in k7271 in k6978 in k6975 in k6971 in k6680 in k6677 in k6674 in k6671 */
static void C_ccall f_17899(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_17749(t7,t6);}

/* k17747 in k17744 in make-line in k11783 in k10718 in k10715 in k7274 in k7271 in k6978 in k6975 in k6971 in k6680 in k6677 in k6674 in k6671 */
static void C_fcall f_17749(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word ab[30],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_17749,NULL,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_17752,a[2]=((C_word*)t0)[5],a[3]=((C_word*)t0)[6],a[4]=((C_word*)t0)[7],a[5]=((C_word*)t0)[8],a[6]=((C_word*)t0)[9],a[7]=((C_word*)t0)[10],tmp=(C_word)a,a+=8,tmp);
if(C_truep((C_word)C_i_nullp(((C_word*)((C_word*)t0)[6])[1]))){
t3=t2;
f_17752(t3,C_SCHEME_UNDEFINED);}
else{
t3=(C_word)C_i_car(((C_word*)((C_word*)t0)[6])[1]);
t4=(C_word)C_eqp(t3,lf[344]);
if(C_truep(t4)){
t5=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_17795,a[2]=((C_word*)t0)[5],a[3]=t2,a[4]=((C_word*)t0)[6],a[5]=((C_word*)t0)[3],a[6]=((C_word*)t0)[4],a[7]=((C_word*)t0)[8],tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)((C_word*)t0)[4])[1])){
C_trace("ChickenBridge.scm: 379  error");
t6=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t6))(4,t6,t5,lf[19],lf[344]);}
else{
t6=t5;
f_17795(2,t6,C_SCHEME_UNDEFINED);}}
else{
t5=(C_word)C_eqp(t3,lf[345]);
if(C_truep(t5)){
t6=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_17830,a[2]=((C_word*)t0)[5],a[3]=t2,a[4]=((C_word*)t0)[6],a[5]=((C_word*)t0)[3],a[6]=((C_word*)t0)[2],a[7]=((C_word*)t0)[7],tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)((C_word*)t0)[2])[1])){
C_trace("ChickenBridge.scm: 379  error");
t7=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t7))(4,t7,t6,lf[19],lf[345]);}
else{
t7=t6;
f_17830(2,t7,C_SCHEME_UNDEFINED);}}
else{
t6=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_17859,a[2]=t2,a[3]=((C_word*)t0)[2],a[4]=((C_word*)t0)[7],a[5]=((C_word*)t0)[6],tmp=(C_word)a,a+=6,tmp);
if(C_truep(((C_word*)((C_word*)t0)[3])[1])){
C_trace("ChickenBridge.scm: 379  error");
t7=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t7))(4,t7,t6,lf[10],((C_word*)t0)[5]);}
else{
t7=t6;
f_17859(2,t7,C_SCHEME_UNDEFINED);}}}}}

/* k17857 in k17747 in k17744 in make-line in k11783 in k10718 in k10715 in k7274 in k7271 in k6978 in k6975 in k6971 in k6680 in k6677 in k6674 in k6671 */
static void C_ccall f_17859(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_17859,2,t0,t1);}
t2=(C_word)C_i_car(((C_word*)((C_word*)t0)[5])[1]);
t3=C_mutate(((C_word *)((C_word*)t0)[4])+1,t2);
t4=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_17866,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[5],a[4]=((C_word*)t0)[3],tmp=(C_word)a,a+=5,tmp);
t5=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_17874,a[2]=((C_word*)t0)[4],a[3]=t4,tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 379  keyword?");
t6=C_retrieve(lf[13]);
((C_proc3)C_retrieve_proc(t6))(3,t6,t5,((C_word*)((C_word*)t0)[4])[1]);}

/* k17872 in k17857 in k17747 in k17744 in make-line in k11783 in k10718 in k10715 in k7274 in k7271 in k6978 in k6975 in k6971 in k6680 in k6677 in k6674 in k6671 */
static void C_ccall f_17874(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
if(C_truep(t1)){
C_trace("ChickenBridge.scm: 379  error");
t2=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t2))(4,t2,((C_word*)t0)[3],lf[14],((C_word*)((C_word*)t0)[2])[1]);}
else{
t2=((C_word*)t0)[3];
f_17866(2,t2,C_SCHEME_UNDEFINED);}}

/* k17864 in k17857 in k17747 in k17744 in make-line in k11783 in k10718 in k10715 in k7274 in k7271 in k6978 in k6975 in k6971 in k6680 in k6677 in k6674 in k6671 */
static void C_ccall f_17866(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word *a;
t2=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[3])[1]);
t4=C_mutate(((C_word *)((C_word*)t0)[3])+1,t3);
t5=((C_word*)t0)[2];
f_17752(t5,t4);}

/* k17828 in k17747 in k17744 in make-line in k11783 in k10718 in k10715 in k7274 in k7271 in k6978 in k6975 in k6971 in k6680 in k6677 in k6674 in k6671 */
static void C_ccall f_17830(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_17830,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_17834,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("ChickenBridge.scm: 379  error");
t4=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[21],((C_word*)t0)[2]);}
else{
t4=t2;
f_17834(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k17832 in k17828 in k17747 in k17744 in make-line in k11783 in k10718 in k10715 in k7274 in k7271 in k6978 in k6975 in k6971 in k6680 in k6677 in k6674 in k6671 */
static void C_ccall f_17834(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_17752(t7,t6);}

/* k17793 in k17747 in k17744 in make-line in k11783 in k10718 in k10715 in k7274 in k7271 in k6978 in k6975 in k6971 in k6680 in k6677 in k6674 in k6671 */
static void C_ccall f_17795(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_17795,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_17799,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("ChickenBridge.scm: 379  error");
t4=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[21],((C_word*)t0)[2]);}
else{
t4=t2;
f_17799(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k17797 in k17793 in k17747 in k17744 in make-line in k11783 in k10718 in k10715 in k7274 in k7271 in k6978 in k6975 in k6971 in k6680 in k6677 in k6674 in k6671 */
static void C_ccall f_17799(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_17752(t7,t6);}

/* k17750 in k17747 in k17744 in make-line in k11783 in k10718 in k10715 in k7274 in k7271 in k6978 in k6975 in k6971 in k6680 in k6677 in k6674 in k6671 */
static void C_fcall f_17752(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[6],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_17752,NULL,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_17755,a[2]=((C_word*)t0)[4],a[3]=((C_word*)t0)[5],a[4]=((C_word*)t0)[6],a[5]=((C_word*)t0)[7],tmp=(C_word)a,a+=6,tmp);
if(C_truep((C_word)C_i_nullp(((C_word*)((C_word*)t0)[3])[1]))){
t3=t2;
f_17755(2,t3,C_SCHEME_UNDEFINED);}
else{
C_trace("ChickenBridge.scm: 379  error");
t3=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t3))(4,t3,t2,lf[5],((C_word*)t0)[2]);}}

/* k17753 in k17750 in k17747 in k17744 in make-line in k11783 in k10718 in k10715 in k7274 in k7271 in k6978 in k6975 in k6971 in k6680 in k6677 in k6674 in k6671 */
static void C_ccall f_17755(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[6],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_17755,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_17758,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],tmp=(C_word)a,a+=6,tmp);
C_trace("ChickenBridge.scm: 379  %alloc-pattern");
f_15819(t2);}

/* k17756 in k17753 in k17750 in k17747 in k17744 in make-line in k11783 in k10718 in k10715 in k7274 in k7271 in k6978 in k6975 in k6971 in k6680 in k6677 in k6674 in k6671 */
static void C_ccall f_17758(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_17758,2,t0,t1);}
t2=(C_word)C_i_length(((C_word*)((C_word*)t0)[5])[1]);
t3=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_17764,a[2]=t1,a[3]=((C_word*)t0)[4],tmp=(C_word)a,a+=4,tmp);
t4=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_17766,a[2]=((C_word)li260),tmp=(C_word)a,a+=3,tmp);
C_trace("ChickenBridge.scm: 379  initialize-pattern");
f_15829(t3,t1,((C_word*)((C_word*)t0)[5])[1],((C_word*)((C_word*)t0)[3])[1],((C_word*)((C_word*)t0)[2])[1],C_fix(0),t2,t2,C_retrieve2(lf[355],"next-in-line"),t4);}

/* a17765 in k17756 in k17753 in k17750 in k17747 in k17744 in make-line in k11783 in k10718 in k10715 in k7274 in k7271 in k6978 in k6975 in k6971 in k6680 in k6677 in k6674 in k6671 */
static void C_ccall f_17766(C_word c,C_word t0,C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word ab[4],*a=ab;
if(c!=4) C_bad_argc_2(c,4,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr4,(void*)f_17766,4,t0,t1,t2,t3);}
t4=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_17774,a[2]=t2,a[3]=t1,tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 379  pattern-data");
f_15548(t4,t3);}

/* k17772 in a17765 in k17756 in k17753 in k17750 in k17747 in k17744 in make-line in k11783 in k10718 in k10715 in k7274 in k7271 in k6978 in k6975 in k6971 in k6680 in k6677 in k6674 in k6671 */
static void C_ccall f_17774(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("for-each");
t2=*((C_word*)lf[237]+1);
((C_proc4)(void*)(*((C_word*)t2+1)))(4,t2,((C_word*)t0)[3],((C_word*)t0)[2],t1);}

/* k17762 in k17756 in k17753 in k17750 in k17747 in k17744 in make-line in k11783 in k10718 in k10715 in k7274 in k7271 in k6978 in k6975 in k6971 in k6680 in k6677 in k6674 in k6671 */
static void C_ccall f_17764(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
t2=((C_word*)t0)[3];
((C_proc2)(void*)(*((C_word*)t2+1)))(2,t2,((C_word*)t0)[2]);}

/* next-in-palindrome in k11783 in k10718 in k10715 in k7274 in k7271 in k6978 in k6975 in k6971 in k6680 in k6677 in k6674 in k6671 */
static void C_ccall f_17527(C_word c,C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word ab[4],*a=ab;
if(c!=3) C_bad_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr3,(void*)f_17527,3,t0,t1,t2);}
t3=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_17531,a[2]=t2,a[3]=t1,tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 379  pattern-cache");
f_15764(t3,t2);}

/* k17529 in next-in-palindrome in k11783 in k10718 in k10715 in k7274 in k7271 in k6978 in k6975 in k6971 in k6680 in k6677 in k6674 in k6671 */
static void C_ccall f_17531(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word ab[19],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_17531,2,t0,t1);}
t2=t1;
t3=(C_word)C_i_check_structure(t2,lf[347]);
t4=(C_word)C_i_block_ref(t2,C_fix(1));
t5=t4;
t6=(*a=C_VECTOR_TYPE|1,a[1]=t5,tmp=(C_word)a,a+=2,tmp);
t7=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_17537,a[2]=t1,a[3]=((C_word*)t0)[2],a[4]=t6,a[5]=((C_word*)t0)[3],tmp=(C_word)a,a+=6,tmp);
if(C_truep((C_word)C_i_lessp(((C_word*)t6)[1],C_fix(0)))){
t8=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_17561,a[2]=t1,a[3]=((C_word*)t0)[2],a[4]=t7,a[5]=t6,tmp=(C_word)a,a+=6,tmp);
t9=t1;
t10=(C_word)C_i_check_structure(t9,lf[347]);
t11=(C_word)C_i_block_ref(t9,C_fix(5));
C_trace("ChickenBridge.scm: 379  next-1");
f_16170(t8,t11);}
else{
t8=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_17740,a[2]=t7,a[3]=t1,a[4]=t6,tmp=(C_word)a,a+=5,tmp);
C_trace("ChickenBridge.scm: 379  palin-len");
f_16968(t8,t1);}}

/* k17738 in k17529 in next-in-palindrome in k11783 in k10718 in k10715 in k7274 in k7271 in k6978 in k6975 in k6971 in k6680 in k6677 in k6674 in k6671 */
static void C_ccall f_17740(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[5],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_17740,2,t0,t1);}
if(C_truep((C_word)C_i_nequalp(((C_word*)((C_word*)t0)[4])[1],t1))){
t2=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_17693,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[3],tmp=(C_word)a,a+=5,tmp);
C_trace("ChickenBridge.scm: 379  palin-inc-set!");
f_16977(t2,((C_word*)t0)[3],C_fix(-1));}
else{
t2=((C_word*)t0)[2];
f_17537(2,t2,C_SCHEME_UNDEFINED);}}

/* k17691 in k17738 in k17529 in next-in-palindrome in k11783 in k10718 in k10715 in k7274 in k7271 in k6978 in k6975 in k6971 in k6680 in k6677 in k6674 in k6671 */
static void C_ccall f_17693(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word ab[4],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_17693,2,t0,t1);}
t2=((C_word*)t0)[4];
t3=(C_word)C_i_check_structure(t2,lf[347]);
t4=(C_word)C_i_block_ref(t2,C_fix(4));
t5=(C_word)C_eqp(t4,C_SCHEME_TRUE);
t6=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_17705,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],tmp=(C_word)a,a+=4,tmp);
if(C_truep(t5)){
t7=t6;
f_17705(t7,t5);}
else{
if(C_truep((C_word)C_i_pairp(t4))){
t7=(C_word)C_i_cdr(t4);
if(C_truep((C_word)C_i_pairp(t7))){
t8=(C_word)C_i_cadr(t4);
t9=t6;
f_17705(t9,(C_word)C_eqp(t8,C_SCHEME_TRUE));}
else{
t8=t6;
f_17705(t8,C_SCHEME_FALSE);}}
else{
t7=t6;
f_17705(t7,C_SCHEME_FALSE);}}}

/* k17703 in k17691 in k17738 in k17529 in next-in-palindrome in k11783 in k10718 in k10715 in k7274 in k7271 in k6978 in k6975 in k6971 in k6680 in k6677 in k6674 in k6671 */
static void C_fcall f_17705(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[8],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_17705,NULL,2,t0,t1);}
if(C_truep(t1)){
t2=(C_word)C_a_i_minus(&a,2,((C_word*)((C_word*)t0)[3])[1],C_fix(2));
t3=C_mutate(((C_word *)((C_word*)t0)[3])+1,t2);
t4=((C_word*)t0)[2];
f_17537(2,t4,t3);}
else{
t2=(C_word)C_a_i_minus(&a,2,((C_word*)((C_word*)t0)[3])[1],C_fix(1));
t3=C_mutate(((C_word *)((C_word*)t0)[3])+1,t2);
t4=((C_word*)t0)[2];
f_17537(2,t4,t3);}}

/* k17559 in k17529 in next-in-palindrome in k11783 in k10718 in k10715 in k7274 in k7271 in k6978 in k6975 in k6971 in k6680 in k6677 in k6674 in k6671 */
static void C_ccall f_17561(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_17561,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_17564,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=t1,a[6]=((C_word*)t0)[5],tmp=(C_word)a,a+=7,tmp);
C_trace("ChickenBridge.scm: 379  palin-len");
f_16968(t2,((C_word*)t0)[2]);}

/* k17562 in k17559 in k17529 in next-in-palindrome in k11783 in k10718 in k10715 in k7274 in k7271 in k6978 in k6975 in k6971 in k6680 in k6677 in k6674 in k6671 */
static void C_ccall f_17564(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_17564,2,t0,t1);}
t2=(C_word)C_i_nequalp(((C_word*)((C_word*)t0)[6])[1],C_fix(-2));
t3=(*a=C_CLOSURE_TYPE|8,a[1]=(C_word)f_17570,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[6],a[4]=((C_word*)t0)[3],a[5]=t2,a[6]=((C_word*)t0)[4],a[7]=((C_word*)t0)[5],a[8]=t1,tmp=(C_word)a,a+=9,tmp);
t4=((C_word*)t0)[2];
t5=((C_word*)t0)[5];
t6=(C_word)C_i_check_structure(t4,lf[347]);
C_trace("ChickenBridge.scm: 379  ##sys#block-set!");
t7=*((C_word*)lf[225]+1);
((C_proc5)(void*)(*((C_word*)t7+1)))(5,t7,t3,t4,C_fix(4),t5);}

/* k17568 in k17562 in k17559 in k17529 in next-in-palindrome in k11783 in k10718 in k10715 in k7274 in k7271 in k6978 in k6975 in k6971 in k6680 in k6677 in k6674 in k6671 */
static void C_ccall f_17570(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[8],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_17570,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_17573,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],a[7]=((C_word*)t0)[8],tmp=(C_word)a,a+=8,tmp);
C_trace("ChickenBridge.scm: 379  palin-inc-set!");
f_16977(t2,((C_word*)t0)[2],C_fix(1));}

/* k17571 in k17568 in k17562 in k17559 in k17529 in next-in-palindrome in k11783 in k10718 in k10715 in k7274 in k7271 in k6978 in k6975 in k6971 in k6680 in k6677 in k6674 in k6671 */
static void C_ccall f_17573(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[12],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_17573,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_17576,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_eqp(((C_word*)t0)[6],C_SCHEME_TRUE);
t4=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_17661,a[2]=t2,a[3]=((C_word*)t0)[2],a[4]=((C_word*)t0)[4],tmp=(C_word)a,a+=5,tmp);
if(C_truep(t3)){
t5=t4;
f_17661(t5,t3);}
else{
if(C_truep((C_word)C_i_pairp(((C_word*)t0)[6]))){
t5=(C_word)C_i_car(((C_word*)t0)[6]);
t6=t4;
f_17661(t6,(C_word)C_eqp(t5,C_SCHEME_TRUE));}
else{
t5=t4;
f_17661(t5,C_SCHEME_FALSE);}}}

/* k17659 in k17571 in k17568 in k17562 in k17559 in k17529 in next-in-palindrome in k11783 in k10718 in k10715 in k7274 in k7271 in k6978 in k6975 in k6971 in k6680 in k6677 in k6674 in k6671 */
static void C_fcall f_17661(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word *a;
if(C_truep(t1)){
if(C_truep(((C_word*)t0)[4])){
t2=C_set_block_item(((C_word*)t0)[3],0,C_fix(0));
t3=((C_word*)t0)[2];
f_17576(t3,t2);}
else{
t2=C_set_block_item(((C_word*)t0)[3],0,C_fix(1));
t3=((C_word*)t0)[2];
f_17576(t3,t2);}}
else{
t2=C_set_block_item(((C_word*)t0)[3],0,C_fix(0));
t3=((C_word*)t0)[2];
f_17576(t3,t2);}}

/* k17574 in k17571 in k17568 in k17562 in k17559 in k17529 in next-in-palindrome in k11783 in k10718 in k10715 in k7274 in k7271 in k6978 in k6975 in k6971 in k6680 in k6677 in k6674 in k6671 */
static void C_fcall f_17576(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[10],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_17576,NULL,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_17582,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],tmp=(C_word)a,a+=7,tmp);
t3=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_17655,a[2]=t2,tmp=(C_word)a,a+=3,tmp);
C_trace("ChickenBridge.scm: 379  pattern-flags");
f_15530(t3,((C_word*)t0)[2]);}

/* k17653 in k17574 in k17571 in k17568 in k17562 in k17559 in k17529 in next-in-palindrome in k11783 in k10718 in k10715 in k7274 in k7271 in k6978 in k6975 in k6971 in k6680 in k6677 in k6674 in k6671 */
static void C_ccall f_17655(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 379  bitwise-test");
f_8151(((C_word*)t0)[2],t1,C_fix(2));}

/* k17580 in k17574 in k17571 in k17568 in k17562 in k17559 in k17529 in next-in-palindrome in k11783 in k10718 in k10715 in k7274 in k7271 in k6978 in k6975 in k6971 in k6680 in k6677 in k6674 in k6671 */
static void C_ccall f_17582(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[6],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_17582,2,t0,t1);}
if(C_truep(t1)){
t2=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_17585,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],tmp=(C_word)a,a+=6,tmp);
C_trace("ChickenBridge.scm: 379  pattern-period");
f_15602(t2,((C_word*)t0)[2]);}
else{
t2=((C_word*)t0)[4];
f_17537(2,t2,C_SCHEME_UNDEFINED);}}

/* k17583 in k17580 in k17574 in k17571 in k17568 in k17562 in k17559 in k17529 in next-in-palindrome in k11783 in k10718 in k10715 in k7274 in k7271 in k6978 in k6975 in k6971 in k6680 in k6677 in k6674 in k6671 */
static void C_ccall f_17585(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[24],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_17585,2,t0,t1);}
t2=(C_word)C_a_i_times(&a,2,((C_word*)t0)[5],C_fix(2));
switch(((C_word*)t0)[4]){
case C_SCHEME_FALSE:
C_trace("ChickenBridge.scm: 379  period-count-set!");
f_15371(((C_word*)t0)[3],t1,t2);
case C_SCHEME_TRUE:
t3=(C_truep(((C_word*)t0)[2])?(C_word)C_a_i_minus(&a,2,t2,C_fix(2)):(C_word)C_a_i_minus(&a,2,t2,C_fix(3)));
C_trace("ChickenBridge.scm: 379  period-count-set!");
f_15371(((C_word*)t0)[3],t1,t3);
default:
if(C_truep((C_word)C_i_equalp(((C_word*)t0)[4],lf[352]))){
t3=(C_word)C_a_i_minus(&a,2,t2,C_fix(1));
C_trace("ChickenBridge.scm: 379  period-count-set!");
f_15371(((C_word*)t0)[3],t1,t3);}
else{
if(C_truep((C_word)C_i_equalp(((C_word*)t0)[4],lf[353]))){
t3=(C_truep(((C_word*)t0)[2])?(C_word)C_a_i_minus(&a,2,t2,C_fix(1)):(C_word)C_a_i_minus(&a,2,t2,C_fix(2)));
C_trace("ChickenBridge.scm: 379  period-count-set!");
f_15371(((C_word*)t0)[3],t1,t3);}
else{
C_trace("ChickenBridge.scm: 379  period-count-set!");
f_15371(((C_word*)t0)[3],t1,t2);}}}}

/* k17535 in k17529 in next-in-palindrome in k11783 in k10718 in k10715 in k7274 in k7271 in k6978 in k6975 in k6971 in k6680 in k6677 in k6674 in k6671 */
static void C_ccall f_17537(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_17537,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_17540,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],tmp=(C_word)a,a+=5,tmp);
t3=((C_word*)t0)[2];
t4=(C_word)C_i_check_structure(t3,lf[347]);
t5=(C_word)C_i_block_ref(t3,C_fix(3));
t6=(C_word)C_a_i_plus(&a,2,((C_word*)((C_word*)t0)[4])[1],t5);
t7=((C_word*)t0)[2];
t8=(C_word)C_i_check_structure(t7,lf[347]);
C_trace("ChickenBridge.scm: 379  ##sys#block-set!");
t9=*((C_word*)lf[225]+1);
((C_proc5)(void*)(*((C_word*)t9+1)))(5,t9,t2,t7,C_fix(1),t6);}

/* k17538 in k17535 in k17529 in next-in-palindrome in k11783 in k10718 in k10715 in k7274 in k7271 in k6978 in k6975 in k6971 in k6680 in k6677 in k6674 in k6671 */
static void C_ccall f_17540(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[4],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_17540,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_17547,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 379  pattern-data");
f_15548(t2,((C_word*)t0)[2]);}

/* k17545 in k17538 in k17535 in k17529 in next-in-palindrome in k11783 in k10718 in k10715 in k7274 in k7271 in k6978 in k6975 in k6971 in k6680 in k6677 in k6674 in k6671 */
static void C_ccall f_17547(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
t2=((C_word*)t0)[3];
((C_proc2)(void*)(*((C_word*)t2+1)))(2,t2,(C_word)C_i_list_ref(t1,((C_word*)((C_word*)t0)[2])[1]));}

/* make-palindrome in k11783 in k10718 in k10715 in k7274 in k7271 in k6978 in k6975 in k6971 in k6680 in k6677 in k6674 in k6671 */
static void C_ccall f_17057(C_word c,C_word t0,C_word t1,C_word t2,...){
C_word tmp;
C_word t3;
va_list v;
C_word *a,c2=c;
C_save_rest(t2,c2,3);
if(c<3) C_bad_min_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_demand(c*C_SIZEOF_PAIR+10)){
C_save_and_reclaim((void*)tr3r,(void*)f_17057r,3,t0,t1,t2);}
else{
a=C_alloc((c-3)*3);
t3=C_restore_rest(a,C_rest_count(0));
f_17057r(t0,t1,t2,t3);}}

static void C_ccall f_17057r(C_word t0,C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word *a=C_alloc(10);
t4=(*a=C_VECTOR_TYPE|1,a[1]=t2,tmp=(C_word)a,a+=2,tmp);
t5=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_17061,a[2]=t1,a[3]=t4,a[4]=t3,tmp=(C_word)a,a+=5,tmp);
if(C_truep((C_word)C_i_pairp(((C_word*)t4)[1]))){
t6=t5;
f_17061(t6,C_SCHEME_UNDEFINED);}
else{
t6=(C_word)C_a_i_list(&a,1,((C_word*)t4)[1]);
t7=C_set_block_item(t4,0,t6);
t8=t5;
f_17061(t8,t7);}}

/* k17059 in make-palindrome in k11783 in k10718 in k10715 in k7274 in k7271 in k6978 in k6975 in k6971 in k6680 in k6677 in k6674 in k6671 */
static void C_fcall f_17061(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word t14;
C_word t15;
C_word t16;
C_word t17;
C_word t18;
C_word t19;
C_word t20;
C_word t21;
C_word t22;
C_word t23;
C_word t24;
C_word t25;
C_word t26;
C_word t27;
C_word ab[59],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_17061,NULL,2,t0,t1);}
t2=C_SCHEME_FALSE;
t3=(*a=C_VECTOR_TYPE|1,a[1]=t2,tmp=(C_word)a,a+=2,tmp);
t4=C_SCHEME_FALSE;
t5=(*a=C_VECTOR_TYPE|1,a[1]=t4,tmp=(C_word)a,a+=2,tmp);
t6=C_SCHEME_FALSE;
t7=(*a=C_VECTOR_TYPE|1,a[1]=t6,tmp=(C_word)a,a+=2,tmp);
t8=C_SCHEME_FALSE;
t9=(*a=C_VECTOR_TYPE|1,a[1]=t8,tmp=(C_word)a,a+=2,tmp);
t10=C_SCHEME_FALSE;
t11=(*a=C_VECTOR_TYPE|1,a[1]=t10,tmp=(C_word)a,a+=2,tmp);
t12=C_SCHEME_FALSE;
t13=(*a=C_VECTOR_TYPE|1,a[1]=t12,tmp=(C_word)a,a+=2,tmp);
t14=((C_word*)t0)[4];
t15=(*a=C_VECTOR_TYPE|1,a[1]=t14,tmp=(C_word)a,a+=2,tmp);
t16=C_SCHEME_FALSE;
t17=(*a=C_VECTOR_TYPE|1,a[1]=t16,tmp=(C_word)a,a+=2,tmp);
t18=(*a=C_CLOSURE_TYPE|12,a[1]=(C_word)f_17064,a[2]=t13,a[3]=t11,a[4]=t17,a[5]=t9,a[6]=((C_word*)t0)[4],a[7]=t15,a[8]=t5,a[9]=t3,a[10]=t7,a[11]=((C_word*)t0)[2],a[12]=((C_word*)t0)[3],tmp=(C_word)a,a+=13,tmp);
if(C_truep((C_word)C_i_nullp(((C_word*)t15)[1]))){
t19=t18;
f_17064(t19,C_SCHEME_UNDEFINED);}
else{
t19=(C_word)C_i_car(((C_word*)t15)[1]);
t20=(C_word)C_eqp(t19,lf[344]);
if(C_truep(t20)){
t21=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_17398,a[2]=((C_word*)t0)[4],a[3]=t18,a[4]=t15,a[5]=t17,a[6]=t9,a[7]=t3,tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)t9)[1])){
C_trace("ChickenBridge.scm: 379  error");
t22=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t22))(4,t22,t21,lf[19],lf[344]);}
else{
t22=t21;
f_17398(2,t22,C_SCHEME_UNDEFINED);}}
else{
t21=(C_word)C_eqp(t19,lf[345]);
if(C_truep(t21)){
t22=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_17433,a[2]=((C_word*)t0)[4],a[3]=t18,a[4]=t15,a[5]=t17,a[6]=t11,a[7]=t5,tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)t11)[1])){
C_trace("ChickenBridge.scm: 379  error");
t23=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t23))(4,t23,t22,lf[19],lf[345]);}
else{
t23=t22;
f_17433(2,t23,C_SCHEME_UNDEFINED);}}
else{
t22=(C_word)C_eqp(t19,lf[351]);
if(C_truep(t22)){
t23=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_17468,a[2]=((C_word*)t0)[4],a[3]=t18,a[4]=t15,a[5]=t17,a[6]=t13,a[7]=t7,tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)t13)[1])){
C_trace("ChickenBridge.scm: 379  error");
t24=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t24))(4,t24,t23,lf[19],lf[351]);}
else{
t24=t23;
f_17468(2,t24,C_SCHEME_UNDEFINED);}}
else{
t23=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_17497,a[2]=t18,a[3]=t9,a[4]=t3,a[5]=t15,tmp=(C_word)a,a+=6,tmp);
if(C_truep(((C_word*)t17)[1])){
C_trace("ChickenBridge.scm: 379  error");
t24=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t24))(4,t24,t23,lf[10],((C_word*)t0)[4]);}
else{
t24=t23;
f_17497(2,t24,C_SCHEME_UNDEFINED);}}}}}}

/* k17495 in k17059 in make-palindrome in k11783 in k10718 in k10715 in k7274 in k7271 in k6978 in k6975 in k6971 in k6680 in k6677 in k6674 in k6671 */
static void C_ccall f_17497(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_17497,2,t0,t1);}
t2=(C_word)C_i_car(((C_word*)((C_word*)t0)[5])[1]);
t3=C_mutate(((C_word *)((C_word*)t0)[4])+1,t2);
t4=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_17504,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[5],a[4]=((C_word*)t0)[3],tmp=(C_word)a,a+=5,tmp);
t5=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_17512,a[2]=((C_word*)t0)[4],a[3]=t4,tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 379  keyword?");
t6=C_retrieve(lf[13]);
((C_proc3)C_retrieve_proc(t6))(3,t6,t5,((C_word*)((C_word*)t0)[4])[1]);}

/* k17510 in k17495 in k17059 in make-palindrome in k11783 in k10718 in k10715 in k7274 in k7271 in k6978 in k6975 in k6971 in k6680 in k6677 in k6674 in k6671 */
static void C_ccall f_17512(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
if(C_truep(t1)){
C_trace("ChickenBridge.scm: 379  error");
t2=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t2))(4,t2,((C_word*)t0)[3],lf[14],((C_word*)((C_word*)t0)[2])[1]);}
else{
t2=((C_word*)t0)[3];
f_17504(2,t2,C_SCHEME_UNDEFINED);}}

/* k17502 in k17495 in k17059 in make-palindrome in k11783 in k10718 in k10715 in k7274 in k7271 in k6978 in k6975 in k6971 in k6680 in k6677 in k6674 in k6671 */
static void C_ccall f_17504(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word *a;
t2=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[3])[1]);
t4=C_mutate(((C_word *)((C_word*)t0)[3])+1,t3);
t5=((C_word*)t0)[2];
f_17064(t5,t4);}

/* k17466 in k17059 in make-palindrome in k11783 in k10718 in k10715 in k7274 in k7271 in k6978 in k6975 in k6971 in k6680 in k6677 in k6674 in k6671 */
static void C_ccall f_17468(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_17468,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_17472,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("ChickenBridge.scm: 379  error");
t4=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[21],((C_word*)t0)[2]);}
else{
t4=t2;
f_17472(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k17470 in k17466 in k17059 in make-palindrome in k11783 in k10718 in k10715 in k7274 in k7271 in k6978 in k6975 in k6971 in k6680 in k6677 in k6674 in k6671 */
static void C_ccall f_17472(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_17064(t7,t6);}

/* k17431 in k17059 in make-palindrome in k11783 in k10718 in k10715 in k7274 in k7271 in k6978 in k6975 in k6971 in k6680 in k6677 in k6674 in k6671 */
static void C_ccall f_17433(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_17433,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_17437,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("ChickenBridge.scm: 379  error");
t4=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[21],((C_word*)t0)[2]);}
else{
t4=t2;
f_17437(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k17435 in k17431 in k17059 in make-palindrome in k11783 in k10718 in k10715 in k7274 in k7271 in k6978 in k6975 in k6971 in k6680 in k6677 in k6674 in k6671 */
static void C_ccall f_17437(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_17064(t7,t6);}

/* k17396 in k17059 in make-palindrome in k11783 in k10718 in k10715 in k7274 in k7271 in k6978 in k6975 in k6971 in k6680 in k6677 in k6674 in k6671 */
static void C_ccall f_17398(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_17398,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_17402,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("ChickenBridge.scm: 379  error");
t4=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[21],((C_word*)t0)[2]);}
else{
t4=t2;
f_17402(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k17400 in k17396 in k17059 in make-palindrome in k11783 in k10718 in k10715 in k7274 in k7271 in k6978 in k6975 in k6971 in k6680 in k6677 in k6674 in k6671 */
static void C_ccall f_17402(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_17064(t7,t6);}

/* k17062 in k17059 in make-palindrome in k11783 in k10718 in k10715 in k7274 in k7271 in k6978 in k6975 in k6971 in k6680 in k6677 in k6674 in k6671 */
static void C_fcall f_17064(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word ab[43],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_17064,NULL,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|12,a[1]=(C_word)f_17067,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],a[7]=((C_word*)t0)[7],a[8]=((C_word*)t0)[8],a[9]=((C_word*)t0)[9],a[10]=((C_word*)t0)[10],a[11]=((C_word*)t0)[11],a[12]=((C_word*)t0)[12],tmp=(C_word)a,a+=13,tmp);
if(C_truep((C_word)C_i_nullp(((C_word*)((C_word*)t0)[7])[1]))){
t3=t2;
f_17067(t3,C_SCHEME_UNDEFINED);}
else{
t3=(C_word)C_i_car(((C_word*)((C_word*)t0)[7])[1]);
t4=(C_word)C_eqp(t3,lf[344]);
if(C_truep(t4)){
t5=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_17263,a[2]=((C_word*)t0)[6],a[3]=t2,a[4]=((C_word*)t0)[7],a[5]=((C_word*)t0)[4],a[6]=((C_word*)t0)[5],a[7]=((C_word*)t0)[9],tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)((C_word*)t0)[5])[1])){
C_trace("ChickenBridge.scm: 379  error");
t6=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t6))(4,t6,t5,lf[19],lf[344]);}
else{
t6=t5;
f_17263(2,t6,C_SCHEME_UNDEFINED);}}
else{
t5=(C_word)C_eqp(t3,lf[345]);
if(C_truep(t5)){
t6=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_17298,a[2]=((C_word*)t0)[6],a[3]=t2,a[4]=((C_word*)t0)[7],a[5]=((C_word*)t0)[4],a[6]=((C_word*)t0)[3],a[7]=((C_word*)t0)[8],tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)((C_word*)t0)[3])[1])){
C_trace("ChickenBridge.scm: 379  error");
t7=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t7))(4,t7,t6,lf[19],lf[345]);}
else{
t7=t6;
f_17298(2,t7,C_SCHEME_UNDEFINED);}}
else{
t6=(C_word)C_eqp(t3,lf[351]);
if(C_truep(t6)){
t7=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_17333,a[2]=((C_word*)t0)[6],a[3]=t2,a[4]=((C_word*)t0)[7],a[5]=((C_word*)t0)[4],a[6]=((C_word*)t0)[2],a[7]=((C_word*)t0)[10],tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)((C_word*)t0)[2])[1])){
C_trace("ChickenBridge.scm: 379  error");
t8=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t8))(4,t8,t7,lf[19],lf[351]);}
else{
t8=t7;
f_17333(2,t8,C_SCHEME_UNDEFINED);}}
else{
t7=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_17362,a[2]=t2,a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[8],a[5]=((C_word*)t0)[7],tmp=(C_word)a,a+=6,tmp);
if(C_truep(((C_word*)((C_word*)t0)[4])[1])){
C_trace("ChickenBridge.scm: 379  error");
t8=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t8))(4,t8,t7,lf[10],((C_word*)t0)[6]);}
else{
t8=t7;
f_17362(2,t8,C_SCHEME_UNDEFINED);}}}}}}

/* k17360 in k17062 in k17059 in make-palindrome in k11783 in k10718 in k10715 in k7274 in k7271 in k6978 in k6975 in k6971 in k6680 in k6677 in k6674 in k6671 */
static void C_ccall f_17362(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_17362,2,t0,t1);}
t2=(C_word)C_i_car(((C_word*)((C_word*)t0)[5])[1]);
t3=C_mutate(((C_word *)((C_word*)t0)[4])+1,t2);
t4=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_17369,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[5],a[4]=((C_word*)t0)[3],tmp=(C_word)a,a+=5,tmp);
t5=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_17377,a[2]=((C_word*)t0)[4],a[3]=t4,tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 379  keyword?");
t6=C_retrieve(lf[13]);
((C_proc3)C_retrieve_proc(t6))(3,t6,t5,((C_word*)((C_word*)t0)[4])[1]);}

/* k17375 in k17360 in k17062 in k17059 in make-palindrome in k11783 in k10718 in k10715 in k7274 in k7271 in k6978 in k6975 in k6971 in k6680 in k6677 in k6674 in k6671 */
static void C_ccall f_17377(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
if(C_truep(t1)){
C_trace("ChickenBridge.scm: 379  error");
t2=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t2))(4,t2,((C_word*)t0)[3],lf[14],((C_word*)((C_word*)t0)[2])[1]);}
else{
t2=((C_word*)t0)[3];
f_17369(2,t2,C_SCHEME_UNDEFINED);}}

/* k17367 in k17360 in k17062 in k17059 in make-palindrome in k11783 in k10718 in k10715 in k7274 in k7271 in k6978 in k6975 in k6971 in k6680 in k6677 in k6674 in k6671 */
static void C_ccall f_17369(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word *a;
t2=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[3])[1]);
t4=C_mutate(((C_word *)((C_word*)t0)[3])+1,t3);
t5=((C_word*)t0)[2];
f_17067(t5,t4);}

/* k17331 in k17062 in k17059 in make-palindrome in k11783 in k10718 in k10715 in k7274 in k7271 in k6978 in k6975 in k6971 in k6680 in k6677 in k6674 in k6671 */
static void C_ccall f_17333(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_17333,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_17337,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("ChickenBridge.scm: 379  error");
t4=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[21],((C_word*)t0)[2]);}
else{
t4=t2;
f_17337(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k17335 in k17331 in k17062 in k17059 in make-palindrome in k11783 in k10718 in k10715 in k7274 in k7271 in k6978 in k6975 in k6971 in k6680 in k6677 in k6674 in k6671 */
static void C_ccall f_17337(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_17067(t7,t6);}

/* k17296 in k17062 in k17059 in make-palindrome in k11783 in k10718 in k10715 in k7274 in k7271 in k6978 in k6975 in k6971 in k6680 in k6677 in k6674 in k6671 */
static void C_ccall f_17298(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_17298,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_17302,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("ChickenBridge.scm: 379  error");
t4=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[21],((C_word*)t0)[2]);}
else{
t4=t2;
f_17302(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k17300 in k17296 in k17062 in k17059 in make-palindrome in k11783 in k10718 in k10715 in k7274 in k7271 in k6978 in k6975 in k6971 in k6680 in k6677 in k6674 in k6671 */
static void C_ccall f_17302(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_17067(t7,t6);}

/* k17261 in k17062 in k17059 in make-palindrome in k11783 in k10718 in k10715 in k7274 in k7271 in k6978 in k6975 in k6971 in k6680 in k6677 in k6674 in k6671 */
static void C_ccall f_17263(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_17263,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_17267,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("ChickenBridge.scm: 379  error");
t4=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[21],((C_word*)t0)[2]);}
else{
t4=t2;
f_17267(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k17265 in k17261 in k17062 in k17059 in make-palindrome in k11783 in k10718 in k10715 in k7274 in k7271 in k6978 in k6975 in k6971 in k6680 in k6677 in k6674 in k6671 */
static void C_ccall f_17267(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_17067(t7,t6);}

/* k17065 in k17062 in k17059 in make-palindrome in k11783 in k10718 in k10715 in k7274 in k7271 in k6978 in k6975 in k6971 in k6680 in k6677 in k6674 in k6671 */
static void C_fcall f_17067(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word ab[39],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_17067,NULL,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|8,a[1]=(C_word)f_17070,a[2]=((C_word*)t0)[6],a[3]=((C_word*)t0)[7],a[4]=((C_word*)t0)[8],a[5]=((C_word*)t0)[9],a[6]=((C_word*)t0)[10],a[7]=((C_word*)t0)[11],a[8]=((C_word*)t0)[12],tmp=(C_word)a,a+=9,tmp);
if(C_truep((C_word)C_i_nullp(((C_word*)((C_word*)t0)[7])[1]))){
t3=t2;
f_17070(t3,C_SCHEME_UNDEFINED);}
else{
t3=(C_word)C_i_car(((C_word*)((C_word*)t0)[7])[1]);
t4=(C_word)C_eqp(t3,lf[344]);
if(C_truep(t4)){
t5=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_17128,a[2]=((C_word*)t0)[6],a[3]=t2,a[4]=((C_word*)t0)[7],a[5]=((C_word*)t0)[4],a[6]=((C_word*)t0)[5],a[7]=((C_word*)t0)[9],tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)((C_word*)t0)[5])[1])){
C_trace("ChickenBridge.scm: 379  error");
t6=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t6))(4,t6,t5,lf[19],lf[344]);}
else{
t6=t5;
f_17128(2,t6,C_SCHEME_UNDEFINED);}}
else{
t5=(C_word)C_eqp(t3,lf[345]);
if(C_truep(t5)){
t6=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_17163,a[2]=((C_word*)t0)[6],a[3]=t2,a[4]=((C_word*)t0)[7],a[5]=((C_word*)t0)[4],a[6]=((C_word*)t0)[3],a[7]=((C_word*)t0)[8],tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)((C_word*)t0)[3])[1])){
C_trace("ChickenBridge.scm: 379  error");
t7=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t7))(4,t7,t6,lf[19],lf[345]);}
else{
t7=t6;
f_17163(2,t7,C_SCHEME_UNDEFINED);}}
else{
t6=(C_word)C_eqp(t3,lf[351]);
if(C_truep(t6)){
t7=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_17198,a[2]=((C_word*)t0)[6],a[3]=t2,a[4]=((C_word*)t0)[7],a[5]=((C_word*)t0)[4],a[6]=((C_word*)t0)[2],a[7]=((C_word*)t0)[10],tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)((C_word*)t0)[2])[1])){
C_trace("ChickenBridge.scm: 379  error");
t8=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t8))(4,t8,t7,lf[19],lf[351]);}
else{
t8=t7;
f_17198(2,t8,C_SCHEME_UNDEFINED);}}
else{
t7=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_17227,a[2]=t2,a[3]=((C_word*)t0)[2],a[4]=((C_word*)t0)[10],a[5]=((C_word*)t0)[7],tmp=(C_word)a,a+=6,tmp);
if(C_truep(((C_word*)((C_word*)t0)[4])[1])){
C_trace("ChickenBridge.scm: 379  error");
t8=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t8))(4,t8,t7,lf[10],((C_word*)t0)[6]);}
else{
t8=t7;
f_17227(2,t8,C_SCHEME_UNDEFINED);}}}}}}

/* k17225 in k17065 in k17062 in k17059 in make-palindrome in k11783 in k10718 in k10715 in k7274 in k7271 in k6978 in k6975 in k6971 in k6680 in k6677 in k6674 in k6671 */
static void C_ccall f_17227(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_17227,2,t0,t1);}
t2=(C_word)C_i_car(((C_word*)((C_word*)t0)[5])[1]);
t3=C_mutate(((C_word *)((C_word*)t0)[4])+1,t2);
t4=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_17234,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[5],a[4]=((C_word*)t0)[3],tmp=(C_word)a,a+=5,tmp);
t5=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_17242,a[2]=((C_word*)t0)[4],a[3]=t4,tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 379  keyword?");
t6=C_retrieve(lf[13]);
((C_proc3)C_retrieve_proc(t6))(3,t6,t5,((C_word*)((C_word*)t0)[4])[1]);}

/* k17240 in k17225 in k17065 in k17062 in k17059 in make-palindrome in k11783 in k10718 in k10715 in k7274 in k7271 in k6978 in k6975 in k6971 in k6680 in k6677 in k6674 in k6671 */
static void C_ccall f_17242(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
if(C_truep(t1)){
C_trace("ChickenBridge.scm: 379  error");
t2=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t2))(4,t2,((C_word*)t0)[3],lf[14],((C_word*)((C_word*)t0)[2])[1]);}
else{
t2=((C_word*)t0)[3];
f_17234(2,t2,C_SCHEME_UNDEFINED);}}

/* k17232 in k17225 in k17065 in k17062 in k17059 in make-palindrome in k11783 in k10718 in k10715 in k7274 in k7271 in k6978 in k6975 in k6971 in k6680 in k6677 in k6674 in k6671 */
static void C_ccall f_17234(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word *a;
t2=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[3])[1]);
t4=C_mutate(((C_word *)((C_word*)t0)[3])+1,t3);
t5=((C_word*)t0)[2];
f_17070(t5,t4);}

/* k17196 in k17065 in k17062 in k17059 in make-palindrome in k11783 in k10718 in k10715 in k7274 in k7271 in k6978 in k6975 in k6971 in k6680 in k6677 in k6674 in k6671 */
static void C_ccall f_17198(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_17198,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_17202,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("ChickenBridge.scm: 379  error");
t4=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[21],((C_word*)t0)[2]);}
else{
t4=t2;
f_17202(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k17200 in k17196 in k17065 in k17062 in k17059 in make-palindrome in k11783 in k10718 in k10715 in k7274 in k7271 in k6978 in k6975 in k6971 in k6680 in k6677 in k6674 in k6671 */
static void C_ccall f_17202(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_17070(t7,t6);}

/* k17161 in k17065 in k17062 in k17059 in make-palindrome in k11783 in k10718 in k10715 in k7274 in k7271 in k6978 in k6975 in k6971 in k6680 in k6677 in k6674 in k6671 */
static void C_ccall f_17163(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_17163,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_17167,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("ChickenBridge.scm: 379  error");
t4=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[21],((C_word*)t0)[2]);}
else{
t4=t2;
f_17167(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k17165 in k17161 in k17065 in k17062 in k17059 in make-palindrome in k11783 in k10718 in k10715 in k7274 in k7271 in k6978 in k6975 in k6971 in k6680 in k6677 in k6674 in k6671 */
static void C_ccall f_17167(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_17070(t7,t6);}

/* k17126 in k17065 in k17062 in k17059 in make-palindrome in k11783 in k10718 in k10715 in k7274 in k7271 in k6978 in k6975 in k6971 in k6680 in k6677 in k6674 in k6671 */
static void C_ccall f_17128(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_17128,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_17132,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("ChickenBridge.scm: 379  error");
t4=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[21],((C_word*)t0)[2]);}
else{
t4=t2;
f_17132(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k17130 in k17126 in k17065 in k17062 in k17059 in make-palindrome in k11783 in k10718 in k10715 in k7274 in k7271 in k6978 in k6975 in k6971 in k6680 in k6677 in k6674 in k6671 */
static void C_ccall f_17132(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_17070(t7,t6);}

/* k17068 in k17065 in k17062 in k17059 in make-palindrome in k11783 in k10718 in k10715 in k7274 in k7271 in k6978 in k6975 in k6971 in k6680 in k6677 in k6674 in k6671 */
static void C_fcall f_17070(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_17070,NULL,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_17073,a[2]=((C_word*)t0)[4],a[3]=((C_word*)t0)[5],a[4]=((C_word*)t0)[6],a[5]=((C_word*)t0)[7],a[6]=((C_word*)t0)[8],tmp=(C_word)a,a+=7,tmp);
if(C_truep((C_word)C_i_nullp(((C_word*)((C_word*)t0)[3])[1]))){
t3=t2;
f_17073(2,t3,C_SCHEME_UNDEFINED);}
else{
C_trace("ChickenBridge.scm: 379  error");
t3=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t3))(4,t3,t2,lf[5],((C_word*)t0)[2]);}}

/* k17071 in k17068 in k17065 in k17062 in k17059 in make-palindrome in k11783 in k10718 in k10715 in k7274 in k7271 in k6978 in k6975 in k6971 in k6680 in k6677 in k6674 in k6671 */
static void C_ccall f_17073(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_17073,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_17076,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],tmp=(C_word)a,a+=7,tmp);
C_trace("ChickenBridge.scm: 379  %alloc-pattern");
f_15819(t2);}

/* k17074 in k17071 in k17068 in k17065 in k17062 in k17059 in make-palindrome in k11783 in k10718 in k10715 in k7274 in k7271 in k6978 in k6975 in k6971 in k6680 in k6677 in k6674 in k6671 */
static void C_ccall f_17076(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[13],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_17076,2,t0,t1);}
t2=(C_word)C_i_length(((C_word*)((C_word*)t0)[6])[1]);
t3=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_17082,a[2]=((C_word*)t0)[4],a[3]=((C_word*)t0)[6],a[4]=t1,a[5]=((C_word*)t0)[5],tmp=(C_word)a,a+=6,tmp);
t4=(C_word)C_a_i_times(&a,2,t2,C_fix(2));
t5=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_17099,a[2]=((C_word)li257),tmp=(C_word)a,a+=3,tmp);
C_trace("ChickenBridge.scm: 379  initialize-pattern");
f_15829(t3,t1,((C_word*)((C_word*)t0)[6])[1],((C_word*)((C_word*)t0)[3])[1],((C_word*)((C_word*)t0)[2])[1],C_fix(0),t2,t4,C_retrieve2(lf[350],"next-in-palindrome"),t5);}

/* a17098 in k17074 in k17071 in k17068 in k17065 in k17062 in k17059 in make-palindrome in k11783 in k10718 in k10715 in k7274 in k7271 in k6978 in k6975 in k6971 in k6680 in k6677 in k6674 in k6671 */
static void C_ccall f_17099(C_word c,C_word t0,C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word ab[4],*a=ab;
if(c!=4) C_bad_argc_2(c,4,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr4,(void*)f_17099,4,t0,t1,t2,t3);}
t4=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_17107,a[2]=t2,a[3]=t1,tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 379  pattern-data");
f_15548(t4,t3);}

/* k17105 in a17098 in k17074 in k17071 in k17068 in k17065 in k17062 in k17059 in make-palindrome in k11783 in k10718 in k10715 in k7274 in k7271 in k6978 in k6975 in k6971 in k6680 in k6677 in k6674 in k6671 */
static void C_ccall f_17107(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("for-each");
t2=*((C_word*)lf[237]+1);
((C_proc4)(void*)(*((C_word*)t2+1)))(4,t2,((C_word*)t0)[3],((C_word*)t0)[2],t1);}

/* k17080 in k17074 in k17071 in k17068 in k17065 in k17062 in k17059 in make-palindrome in k11783 in k10718 in k10715 in k7274 in k7271 in k6978 in k6975 in k6971 in k6680 in k6677 in k6674 in k6671 */
static void C_ccall f_17082(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[11],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_17082,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_17085,a[2]=((C_word*)t0)[4],a[3]=((C_word*)t0)[5],tmp=(C_word)a,a+=4,tmp);
t3=(C_word)C_i_length(((C_word*)((C_word*)t0)[3])[1]);
t4=((C_word*)((C_word*)t0)[2])[1];
t5=(C_word)C_a_i_record(&a,6,lf[347],C_fix(-2),t3,C_SCHEME_FALSE,C_SCHEME_FALSE,t4);
C_trace("ChickenBridge.scm: 379  pattern-cache-set!");
f_15755(t2,((C_word*)t0)[4],t5);}

/* k17083 in k17080 in k17074 in k17071 in k17068 in k17065 in k17062 in k17059 in make-palindrome in k11783 in k10718 in k10715 in k7274 in k7271 in k6978 in k6975 in k6971 in k6680 in k6677 in k6674 in k6671 */
static void C_ccall f_17085(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
t2=((C_word*)t0)[3];
((C_proc2)(void*)(*((C_word*)t2+1)))(2,t2,((C_word*)t0)[2]);}

/* palin-inc-set! in k11783 in k10718 in k10715 in k7274 in k7271 in k6978 in k6975 in k6971 in k6680 in k6677 in k6674 in k6671 */
static void C_fcall f_16977(C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word *a;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_16977,NULL,3,t1,t2,t3);}
t4=(C_word)C_i_check_structure(t2,lf[347]);
C_trace("ChickenBridge.scm: 379  ##sys#block-set!");
t5=*((C_word*)lf[225]+1);
((C_proc5)(void*)(*((C_word*)t5+1)))(5,t5,t1,t2,C_fix(3),t3);}

/* palin-len in k11783 in k10718 in k10715 in k7274 in k7271 in k6978 in k6975 in k6971 in k6680 in k6677 in k6674 in k6671 */
static void C_fcall f_16968(C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word *a;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_16968,NULL,2,t1,t2);}
t3=(C_word)C_i_check_structure(t2,lf[347]);
t4=t1;
((C_proc2)(void*)(*((C_word*)t4+1)))(2,t4,(C_word)C_i_block_ref(t2,C_fix(2)));}

/* next-in-cycle in k11783 in k10718 in k10715 in k7274 in k7271 in k6978 in k6975 in k6971 in k6680 in k6677 in k6674 in k6671 */
static void C_ccall f_16896(C_word c,C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word ab[3],*a=ab;
if(c!=3) C_bad_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr3,(void*)f_16896,3,t0,t1,t2);}
t3=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_16900,a[2]=t1,tmp=(C_word)a,a+=3,tmp);
C_trace("ChickenBridge.scm: 379  pattern-data");
f_15548(t3,t2);}

/* k16898 in next-in-cycle in k11783 in k10718 in k10715 in k7274 in k7271 in k6978 in k6975 in k6971 in k6680 in k6677 in k6674 in k6671 */
static void C_ccall f_16900(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[4],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_16900,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_16903,a[2]=((C_word*)t0)[2],a[3]=t1,tmp=(C_word)a,a+=4,tmp);
t3=(C_word)C_i_cdr(t1);
if(C_truep((C_word)C_i_nullp(t3))){
t4=(C_word)C_i_car(t1);
t5=t2;
f_16903(t5,(C_word)C_i_set_cdr(t1,t4));}
else{
t4=t2;
f_16903(t4,C_SCHEME_UNDEFINED);}}

/* k16901 in k16898 in next-in-cycle in k11783 in k10718 in k10715 in k7274 in k7271 in k6978 in k6975 in k6971 in k6680 in k6677 in k6674 in k6671 */
static void C_fcall f_16903(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word *a;
t2=(C_word)C_i_cadr(((C_word*)t0)[3]);
t3=(C_word)C_i_cddr(((C_word*)t0)[3]);
t4=(C_word)C_i_set_cdr(((C_word*)t0)[3],t3);
t5=((C_word*)t0)[2];
((C_proc2)(void*)(*((C_word*)t5+1)))(2,t5,t2);}

/* make-cycle in k11783 in k10718 in k10715 in k7274 in k7271 in k6978 in k6975 in k6971 in k6680 in k6677 in k6674 in k6671 */
static void C_ccall f_16641(C_word c,C_word t0,C_word t1,C_word t2,...){
C_word tmp;
C_word t3;
va_list v;
C_word *a,c2=c;
C_save_rest(t2,c2,3);
if(c<3) C_bad_min_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_demand(c*C_SIZEOF_PAIR+10)){
C_save_and_reclaim((void*)tr3r,(void*)f_16641r,3,t0,t1,t2);}
else{
a=C_alloc((c-3)*3);
t3=C_restore_rest(a,C_rest_count(0));
f_16641r(t0,t1,t2,t3);}}

static void C_ccall f_16641r(C_word t0,C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word *a=C_alloc(10);
t4=(*a=C_VECTOR_TYPE|1,a[1]=t2,tmp=(C_word)a,a+=2,tmp);
t5=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_16645,a[2]=t1,a[3]=t4,a[4]=t3,tmp=(C_word)a,a+=5,tmp);
if(C_truep((C_word)C_i_pairp(((C_word*)t4)[1]))){
t6=t5;
f_16645(t6,C_SCHEME_UNDEFINED);}
else{
t6=(C_word)C_a_i_list(&a,1,((C_word*)t4)[1]);
t7=C_set_block_item(t4,0,t6);
t8=t5;
f_16645(t8,t7);}}

/* k16643 in make-cycle in k11783 in k10718 in k10715 in k7274 in k7271 in k6978 in k6975 in k6971 in k6680 in k6677 in k6674 in k6671 */
static void C_fcall f_16645(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word t14;
C_word t15;
C_word t16;
C_word t17;
C_word t18;
C_word t19;
C_word t20;
C_word t21;
C_word ab[45],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_16645,NULL,2,t0,t1);}
t2=C_SCHEME_FALSE;
t3=(*a=C_VECTOR_TYPE|1,a[1]=t2,tmp=(C_word)a,a+=2,tmp);
t4=C_SCHEME_FALSE;
t5=(*a=C_VECTOR_TYPE|1,a[1]=t4,tmp=(C_word)a,a+=2,tmp);
t6=C_SCHEME_FALSE;
t7=(*a=C_VECTOR_TYPE|1,a[1]=t6,tmp=(C_word)a,a+=2,tmp);
t8=C_SCHEME_FALSE;
t9=(*a=C_VECTOR_TYPE|1,a[1]=t8,tmp=(C_word)a,a+=2,tmp);
t10=((C_word*)t0)[4];
t11=(*a=C_VECTOR_TYPE|1,a[1]=t10,tmp=(C_word)a,a+=2,tmp);
t12=C_SCHEME_FALSE;
t13=(*a=C_VECTOR_TYPE|1,a[1]=t12,tmp=(C_word)a,a+=2,tmp);
t14=(*a=C_CLOSURE_TYPE|10,a[1]=(C_word)f_16648,a[2]=t9,a[3]=t13,a[4]=t7,a[5]=((C_word*)t0)[4],a[6]=t11,a[7]=t5,a[8]=t3,a[9]=((C_word*)t0)[2],a[10]=((C_word*)t0)[3],tmp=(C_word)a,a+=11,tmp);
if(C_truep((C_word)C_i_nullp(((C_word*)t11)[1]))){
t15=t14;
f_16648(t15,C_SCHEME_UNDEFINED);}
else{
t15=(C_word)C_i_car(((C_word*)t11)[1]);
t16=(C_word)C_eqp(t15,lf[344]);
if(C_truep(t16)){
t17=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_16802,a[2]=((C_word*)t0)[4],a[3]=t14,a[4]=t11,a[5]=t13,a[6]=t7,a[7]=t3,tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)t7)[1])){
C_trace("ChickenBridge.scm: 379  error");
t18=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t18))(4,t18,t17,lf[19],lf[344]);}
else{
t18=t17;
f_16802(2,t18,C_SCHEME_UNDEFINED);}}
else{
t17=(C_word)C_eqp(t15,lf[345]);
if(C_truep(t17)){
t18=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_16837,a[2]=((C_word*)t0)[4],a[3]=t14,a[4]=t11,a[5]=t13,a[6]=t9,a[7]=t5,tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)t9)[1])){
C_trace("ChickenBridge.scm: 379  error");
t19=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t19))(4,t19,t18,lf[19],lf[345]);}
else{
t19=t18;
f_16837(2,t19,C_SCHEME_UNDEFINED);}}
else{
t18=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_16866,a[2]=t14,a[3]=t7,a[4]=t3,a[5]=t11,tmp=(C_word)a,a+=6,tmp);
if(C_truep(((C_word*)t13)[1])){
C_trace("ChickenBridge.scm: 379  error");
t19=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t19))(4,t19,t18,lf[10],((C_word*)t0)[4]);}
else{
t19=t18;
f_16866(2,t19,C_SCHEME_UNDEFINED);}}}}}

/* k16864 in k16643 in make-cycle in k11783 in k10718 in k10715 in k7274 in k7271 in k6978 in k6975 in k6971 in k6680 in k6677 in k6674 in k6671 */
static void C_ccall f_16866(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_16866,2,t0,t1);}
t2=(C_word)C_i_car(((C_word*)((C_word*)t0)[5])[1]);
t3=C_mutate(((C_word *)((C_word*)t0)[4])+1,t2);
t4=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_16873,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[5],a[4]=((C_word*)t0)[3],tmp=(C_word)a,a+=5,tmp);
t5=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_16881,a[2]=((C_word*)t0)[4],a[3]=t4,tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 379  keyword?");
t6=C_retrieve(lf[13]);
((C_proc3)C_retrieve_proc(t6))(3,t6,t5,((C_word*)((C_word*)t0)[4])[1]);}

/* k16879 in k16864 in k16643 in make-cycle in k11783 in k10718 in k10715 in k7274 in k7271 in k6978 in k6975 in k6971 in k6680 in k6677 in k6674 in k6671 */
static void C_ccall f_16881(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
if(C_truep(t1)){
C_trace("ChickenBridge.scm: 379  error");
t2=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t2))(4,t2,((C_word*)t0)[3],lf[14],((C_word*)((C_word*)t0)[2])[1]);}
else{
t2=((C_word*)t0)[3];
f_16873(2,t2,C_SCHEME_UNDEFINED);}}

/* k16871 in k16864 in k16643 in make-cycle in k11783 in k10718 in k10715 in k7274 in k7271 in k6978 in k6975 in k6971 in k6680 in k6677 in k6674 in k6671 */
static void C_ccall f_16873(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word *a;
t2=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[3])[1]);
t4=C_mutate(((C_word *)((C_word*)t0)[3])+1,t3);
t5=((C_word*)t0)[2];
f_16648(t5,t4);}

/* k16835 in k16643 in make-cycle in k11783 in k10718 in k10715 in k7274 in k7271 in k6978 in k6975 in k6971 in k6680 in k6677 in k6674 in k6671 */
static void C_ccall f_16837(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_16837,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_16841,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("ChickenBridge.scm: 379  error");
t4=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[21],((C_word*)t0)[2]);}
else{
t4=t2;
f_16841(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k16839 in k16835 in k16643 in make-cycle in k11783 in k10718 in k10715 in k7274 in k7271 in k6978 in k6975 in k6971 in k6680 in k6677 in k6674 in k6671 */
static void C_ccall f_16841(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_16648(t7,t6);}

/* k16800 in k16643 in make-cycle in k11783 in k10718 in k10715 in k7274 in k7271 in k6978 in k6975 in k6971 in k6680 in k6677 in k6674 in k6671 */
static void C_ccall f_16802(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_16802,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_16806,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("ChickenBridge.scm: 379  error");
t4=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[21],((C_word*)t0)[2]);}
else{
t4=t2;
f_16806(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k16804 in k16800 in k16643 in make-cycle in k11783 in k10718 in k10715 in k7274 in k7271 in k6978 in k6975 in k6971 in k6680 in k6677 in k6674 in k6671 */
static void C_ccall f_16806(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_16648(t7,t6);}

/* k16646 in k16643 in make-cycle in k11783 in k10718 in k10715 in k7274 in k7271 in k6978 in k6975 in k6971 in k6680 in k6677 in k6674 in k6671 */
static void C_fcall f_16648(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word ab[30],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_16648,NULL,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_16651,a[2]=((C_word*)t0)[5],a[3]=((C_word*)t0)[6],a[4]=((C_word*)t0)[7],a[5]=((C_word*)t0)[8],a[6]=((C_word*)t0)[9],a[7]=((C_word*)t0)[10],tmp=(C_word)a,a+=8,tmp);
if(C_truep((C_word)C_i_nullp(((C_word*)((C_word*)t0)[6])[1]))){
t3=t2;
f_16651(t3,C_SCHEME_UNDEFINED);}
else{
t3=(C_word)C_i_car(((C_word*)((C_word*)t0)[6])[1]);
t4=(C_word)C_eqp(t3,lf[344]);
if(C_truep(t4)){
t5=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_16702,a[2]=((C_word*)t0)[5],a[3]=t2,a[4]=((C_word*)t0)[6],a[5]=((C_word*)t0)[3],a[6]=((C_word*)t0)[4],a[7]=((C_word*)t0)[8],tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)((C_word*)t0)[4])[1])){
C_trace("ChickenBridge.scm: 379  error");
t6=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t6))(4,t6,t5,lf[19],lf[344]);}
else{
t6=t5;
f_16702(2,t6,C_SCHEME_UNDEFINED);}}
else{
t5=(C_word)C_eqp(t3,lf[345]);
if(C_truep(t5)){
t6=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_16737,a[2]=((C_word*)t0)[5],a[3]=t2,a[4]=((C_word*)t0)[6],a[5]=((C_word*)t0)[3],a[6]=((C_word*)t0)[2],a[7]=((C_word*)t0)[7],tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)((C_word*)t0)[2])[1])){
C_trace("ChickenBridge.scm: 379  error");
t7=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t7))(4,t7,t6,lf[19],lf[345]);}
else{
t7=t6;
f_16737(2,t7,C_SCHEME_UNDEFINED);}}
else{
t6=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_16766,a[2]=t2,a[3]=((C_word*)t0)[2],a[4]=((C_word*)t0)[7],a[5]=((C_word*)t0)[6],tmp=(C_word)a,a+=6,tmp);
if(C_truep(((C_word*)((C_word*)t0)[3])[1])){
C_trace("ChickenBridge.scm: 379  error");
t7=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t7))(4,t7,t6,lf[10],((C_word*)t0)[5]);}
else{
t7=t6;
f_16766(2,t7,C_SCHEME_UNDEFINED);}}}}}

/* k16764 in k16646 in k16643 in make-cycle in k11783 in k10718 in k10715 in k7274 in k7271 in k6978 in k6975 in k6971 in k6680 in k6677 in k6674 in k6671 */
static void C_ccall f_16766(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_16766,2,t0,t1);}
t2=(C_word)C_i_car(((C_word*)((C_word*)t0)[5])[1]);
t3=C_mutate(((C_word *)((C_word*)t0)[4])+1,t2);
t4=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_16773,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[5],a[4]=((C_word*)t0)[3],tmp=(C_word)a,a+=5,tmp);
t5=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_16781,a[2]=((C_word*)t0)[4],a[3]=t4,tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 379  keyword?");
t6=C_retrieve(lf[13]);
((C_proc3)C_retrieve_proc(t6))(3,t6,t5,((C_word*)((C_word*)t0)[4])[1]);}

/* k16779 in k16764 in k16646 in k16643 in make-cycle in k11783 in k10718 in k10715 in k7274 in k7271 in k6978 in k6975 in k6971 in k6680 in k6677 in k6674 in k6671 */
static void C_ccall f_16781(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
if(C_truep(t1)){
C_trace("ChickenBridge.scm: 379  error");
t2=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t2))(4,t2,((C_word*)t0)[3],lf[14],((C_word*)((C_word*)t0)[2])[1]);}
else{
t2=((C_word*)t0)[3];
f_16773(2,t2,C_SCHEME_UNDEFINED);}}

/* k16771 in k16764 in k16646 in k16643 in make-cycle in k11783 in k10718 in k10715 in k7274 in k7271 in k6978 in k6975 in k6971 in k6680 in k6677 in k6674 in k6671 */
static void C_ccall f_16773(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word *a;
t2=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[3])[1]);
t4=C_mutate(((C_word *)((C_word*)t0)[3])+1,t3);
t5=((C_word*)t0)[2];
f_16651(t5,t4);}

/* k16735 in k16646 in k16643 in make-cycle in k11783 in k10718 in k10715 in k7274 in k7271 in k6978 in k6975 in k6971 in k6680 in k6677 in k6674 in k6671 */
static void C_ccall f_16737(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_16737,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_16741,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("ChickenBridge.scm: 379  error");
t4=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[21],((C_word*)t0)[2]);}
else{
t4=t2;
f_16741(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k16739 in k16735 in k16646 in k16643 in make-cycle in k11783 in k10718 in k10715 in k7274 in k7271 in k6978 in k6975 in k6971 in k6680 in k6677 in k6674 in k6671 */
static void C_ccall f_16741(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_16651(t7,t6);}

/* k16700 in k16646 in k16643 in make-cycle in k11783 in k10718 in k10715 in k7274 in k7271 in k6978 in k6975 in k6971 in k6680 in k6677 in k6674 in k6671 */
static void C_ccall f_16702(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_16702,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_16706,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("ChickenBridge.scm: 379  error");
t4=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[21],((C_word*)t0)[2]);}
else{
t4=t2;
f_16706(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k16704 in k16700 in k16646 in k16643 in make-cycle in k11783 in k10718 in k10715 in k7274 in k7271 in k6978 in k6975 in k6971 in k6680 in k6677 in k6674 in k6671 */
static void C_ccall f_16706(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_16651(t7,t6);}

/* k16649 in k16646 in k16643 in make-cycle in k11783 in k10718 in k10715 in k7274 in k7271 in k6978 in k6975 in k6971 in k6680 in k6677 in k6674 in k6671 */
static void C_fcall f_16651(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[6],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_16651,NULL,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_16654,a[2]=((C_word*)t0)[4],a[3]=((C_word*)t0)[5],a[4]=((C_word*)t0)[6],a[5]=((C_word*)t0)[7],tmp=(C_word)a,a+=6,tmp);
if(C_truep((C_word)C_i_nullp(((C_word*)((C_word*)t0)[3])[1]))){
t3=t2;
f_16654(2,t3,C_SCHEME_UNDEFINED);}
else{
C_trace("ChickenBridge.scm: 379  error");
t3=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t3))(4,t3,t2,lf[5],((C_word*)t0)[2]);}}

/* k16652 in k16649 in k16646 in k16643 in make-cycle in k11783 in k10718 in k10715 in k7274 in k7271 in k6978 in k6975 in k6971 in k6680 in k6677 in k6674 in k6671 */
static void C_ccall f_16654(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[6],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_16654,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_16657,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],tmp=(C_word)a,a+=6,tmp);
C_trace("ChickenBridge.scm: 379  %alloc-pattern");
f_15819(t2);}

/* k16655 in k16652 in k16649 in k16646 in k16643 in make-cycle in k11783 in k10718 in k10715 in k7274 in k7271 in k6978 in k6975 in k6971 in k6680 in k6677 in k6674 in k6671 */
static void C_ccall f_16657(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[10],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_16657,2,t0,t1);}
t2=(C_word)C_i_length(((C_word*)((C_word*)t0)[5])[1]);
t3=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_16663,a[2]=t1,a[3]=((C_word*)t0)[4],tmp=(C_word)a,a+=4,tmp);
t4=(C_word)C_a_i_cons(&a,2,((C_word*)((C_word*)t0)[5])[1],((C_word*)((C_word*)t0)[5])[1]);
t5=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_16669,a[2]=((C_word)li252),tmp=(C_word)a,a+=3,tmp);
C_trace("ChickenBridge.scm: 379  initialize-pattern");
f_15829(t3,t1,t4,((C_word*)((C_word*)t0)[3])[1],((C_word*)((C_word*)t0)[2])[1],C_fix(0),t2,t2,C_retrieve2(lf[343],"next-in-cycle"),t5);}

/* a16668 in k16655 in k16652 in k16649 in k16646 in k16643 in make-cycle in k11783 in k10718 in k10715 in k7274 in k7271 in k6978 in k6975 in k6971 in k6680 in k6677 in k6674 in k6671 */
static void C_ccall f_16669(C_word c,C_word t0,C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word ab[4],*a=ab;
if(c!=4) C_bad_argc_2(c,4,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr4,(void*)f_16669,4,t0,t1,t2,t3);}
t4=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_16681,a[2]=t2,a[3]=t1,tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 379  pattern-data");
f_15548(t4,t3);}

/* k16679 in a16668 in k16655 in k16652 in k16649 in k16646 in k16643 in make-cycle in k11783 in k10718 in k10715 in k7274 in k7271 in k6978 in k6975 in k6971 in k6680 in k6677 in k6674 in k6671 */
static void C_ccall f_16681(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word *a;
t2=(C_word)C_i_car(t1);
C_trace("for-each");
t3=*((C_word*)lf[237]+1);
((C_proc4)(void*)(*((C_word*)t3+1)))(4,t3,((C_word*)t0)[3],((C_word*)t0)[2],t2);}

/* k16661 in k16655 in k16652 in k16649 in k16646 in k16643 in make-cycle in k11783 in k10718 in k10715 in k7274 in k7271 in k6978 in k6975 in k6971 in k6680 in k6677 in k6674 in k6671 */
static void C_ccall f_16663(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
t2=((C_word*)t0)[3];
((C_proc2)(void*)(*((C_word*)t2+1)))(2,t2,((C_word*)t0)[2]);}

/* reset-period in k11783 in k10718 in k10715 in k7274 in k7271 in k6978 in k6975 in k6971 in k6680 in k6677 in k6674 in k6671 */
static void C_fcall f_16526(C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word ab[4],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_16526,NULL,2,t1,t2);}
t3=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_16639,a[2]=t2,a[3]=t1,tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 379  pattern?");
f_15515(t3,t2);}

/* k16637 in reset-period in k11783 in k10718 in k10715 in k7274 in k7271 in k6978 in k6975 in k6971 in k6680 in k6677 in k6674 in k6671 */
static void C_ccall f_16639(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[4],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_16639,2,t0,t1);}
if(C_truep(t1)){
t2=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_16536,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 379  pattern-period");
f_15602(t2,((C_word*)t0)[2]);}
else{
t2=((C_word*)t0)[3];
((C_proc2)(void*)(*((C_word*)t2+1)))(2,t2,C_fix(1));}}

/* k16534 in k16637 in reset-period in k11783 in k10718 in k10715 in k7274 in k7271 in k6978 in k6975 in k6971 in k6680 in k6677 in k6674 in k6671 */
static void C_ccall f_16536(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word ab[15],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_16536,2,t0,t1);}
t2=C_SCHEME_FALSE;
t3=(*a=C_VECTOR_TYPE|1,a[1]=t2,tmp=(C_word)a,a+=2,tmp);
t4=C_SCHEME_FALSE;
t5=(*a=C_VECTOR_TYPE|1,a[1]=t4,tmp=(C_word)a,a+=2,tmp);
t6=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_16539,a[2]=((C_word*)t0)[2],a[3]=t1,a[4]=((C_word*)t0)[3],a[5]=t5,a[6]=t3,tmp=(C_word)a,a+=7,tmp);
t7=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_16624,a[2]=t6,a[3]=t1,tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 379  period-stream");
f_15416(t7,t1);}

/* k16622 in k16534 in k16637 in reset-period in k11783 in k10718 in k10715 in k7274 in k7271 in k6978 in k6975 in k6971 in k6680 in k6677 in k6674 in k6671 */
static void C_ccall f_16624(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_16624,2,t0,t1);}
if(C_truep(t1)){
t2=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_16631,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],tmp=(C_word)a,a+=4,tmp);
t3=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_16635,a[2]=t2,tmp=(C_word)a,a+=3,tmp);
C_trace("ChickenBridge.scm: 379  period-stream");
f_15416(t3,((C_word*)t0)[3]);}
else{
t2=((C_word*)t0)[2];
f_16539(2,t2,C_SCHEME_UNDEFINED);}}

/* k16633 in k16622 in k16534 in k16637 in reset-period in k11783 in k10718 in k10715 in k7274 in k7271 in k6978 in k6975 in k6971 in k6680 in k6677 in k6674 in k6671 */
static void C_ccall f_16635(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 379  next-1");
f_16170(((C_word*)t0)[2],t1);}

/* k16629 in k16622 in k16534 in k16637 in reset-period in k11783 in k10718 in k10715 in k7274 in k7271 in k6978 in k6975 in k6971 in k6680 in k6677 in k6674 in k6671 */
static void C_ccall f_16631(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word *a;
t2=((C_word*)t0)[3];
t3=(C_word)C_i_check_structure(t2,lf[297]);
C_trace("ChickenBridge.scm: 379  ##sys#block-set!");
t4=*((C_word*)lf[225]+1);
((C_proc5)(void*)(*((C_word*)t4+1)))(5,t4,((C_word*)t0)[2],t2,C_fix(2),t1);}

/* k16537 in k16534 in k16637 in reset-period in k11783 in k10718 in k10715 in k7274 in k7271 in k6978 in k6975 in k6971 in k6680 in k6677 in k6674 in k6671 */
static void C_ccall f_16539(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_16539,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_16621,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],tmp=(C_word)a,a+=7,tmp);
C_trace("ChickenBridge.scm: 379  period-length");
f_15398(t2,((C_word*)t0)[3]);}

/* k16619 in k16537 in k16534 in k16637 in reset-period in k11783 in k10718 in k10715 in k7274 in k7271 in k6978 in k6975 in k6971 in k6680 in k6677 in k6674 in k6671 */
static void C_ccall f_16621(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_16621,2,t0,t1);}
t2=(C_word)C_eqp(t1,C_SCHEME_TRUE);
t3=C_mutate(((C_word *)((C_word*)t0)[6])+1,t2);
t4=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_16547,a[2]=((C_word*)t0)[6],a[3]=((C_word*)t0)[2],a[4]=((C_word*)t0)[3],a[5]=((C_word*)t0)[4],a[6]=((C_word*)t0)[5],tmp=(C_word)a,a+=7,tmp);
if(C_truep(((C_word*)((C_word*)t0)[6])[1])){
t5=((C_word*)t0)[3];
t6=(C_word)C_i_check_structure(t5,lf[297]);
t7=t4;
f_16547(2,t7,(C_word)C_i_block_ref(t5,C_fix(4)));}
else{
C_trace("ChickenBridge.scm: 379  period-length");
f_15398(t4,((C_word*)t0)[3]);}}

/* k16545 in k16619 in k16537 in k16534 in k16637 in reset-period in k11783 in k10718 in k10715 in k7274 in k7271 in k6978 in k6975 in k6971 in k6680 in k6677 in k6674 in k6671 */
static void C_ccall f_16547(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[13],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_16547,2,t0,t1);}
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_16550,a[2]=((C_word*)t0)[4],a[3]=((C_word*)t0)[6],a[4]=((C_word*)t0)[5],tmp=(C_word)a,a+=5,tmp);
t4=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_16556,a[2]=((C_word*)t0)[3],a[3]=t3,a[4]=((C_word*)t0)[6],tmp=(C_word)a,a+=5,tmp);
if(C_truep(((C_word*)((C_word*)t0)[2])[1])){
t5=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_16611,a[2]=t4,tmp=(C_word)a,a+=3,tmp);
C_trace("ChickenBridge.scm: 379  pattern-flags");
f_15530(t5,((C_word*)t0)[3]);}
else{
t5=t4;
f_16556(2,t5,C_SCHEME_FALSE);}}

/* k16609 in k16545 in k16619 in k16537 in k16534 in k16637 in reset-period in k11783 in k10718 in k10715 in k7274 in k7271 in k6978 in k6975 in k6971 in k6680 in k6677 in k6674 in k6671 */
static void C_ccall f_16611(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 379  bitwise-test");
f_8151(((C_word*)t0)[2],t1,C_fix(8));}

/* k16554 in k16545 in k16619 in k16537 in k16534 in k16637 in reset-period in k11783 in k10718 in k10715 in k7274 in k7271 in k6978 in k6975 in k6971 in k6680 in k6677 in k6674 in k6671 */
static void C_ccall f_16556(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[11],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_16556,2,t0,t1);}
if(C_truep(t1)){
t2=C_fix(0);
t3=(*a=C_VECTOR_TYPE|1,a[1]=t2,tmp=(C_word)a,a+=2,tmp);
t4=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_16559,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=t3,tmp=(C_word)a,a+=5,tmp);
t5=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_16575,a[2]=t3,a[3]=((C_word)li250),tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 379  map-pattern-data");
f_16480(t4,t5,((C_word*)t0)[2]);}
else{
t2=((C_word*)t0)[3];
f_16550(t2,C_SCHEME_UNDEFINED);}}

/* a16574 in k16554 in k16545 in k16619 in k16537 in k16534 in k16637 in reset-period in k11783 in k10718 in k10715 in k7274 in k7271 in k6978 in k6975 in k6971 in k6680 in k6677 in k6674 in k6671 */
static void C_ccall f_16575(C_word c,C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word ab[5],*a=ab;
if(c!=3) C_bad_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr3,(void*)f_16575,3,t0,t1,t2);}
t3=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_16604,a[2]=t2,a[3]=t1,a[4]=((C_word*)t0)[2],tmp=(C_word)a,a+=5,tmp);
C_trace("ChickenBridge.scm: 379  reset-period");
f_16526(t3,t2);}

/* k16602 in a16574 in k16554 in k16545 in k16619 in k16537 in k16534 in k16637 in reset-period in k11783 in k10718 in k10715 in k7274 in k7271 in k6978 in k6975 in k6971 in k6680 in k6677 in k6674 in k6671 */
static void C_ccall f_16604(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[4],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_16604,2,t0,t1);}
if(C_truep((C_word)C_i_nequalp(t1,C_fix(0)))){
t2=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_16585,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 379  pattern-period");
f_15602(t2,((C_word*)t0)[2]);}
else{
t2=((C_word*)t0)[3];
((C_proc2)(void*)(*((C_word*)t2+1)))(2,t2,C_SCHEME_UNDEFINED);}}

/* k16583 in k16602 in a16574 in k16554 in k16545 in k16619 in k16537 in k16534 in k16637 in reset-period in k11783 in k10718 in k10715 in k7274 in k7271 in k6978 in k6975 in k6971 in k6680 in k6677 in k6674 in k6671 */
static void C_ccall f_16585(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[8],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_16585,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_16588,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],tmp=(C_word)a,a+=4,tmp);
t3=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_16600,a[2]=t1,a[3]=t2,tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 379  period-omit");
f_15452(t3,t1);}

/* k16598 in k16583 in k16602 in a16574 in k16554 in k16545 in k16619 in k16537 in k16534 in k16637 in reset-period in k11783 in k10718 in k10715 in k7274 in k7271 in k6978 in k6975 in k6971 in k6680 in k6677 in k6674 in k6671 */
static void C_ccall f_16600(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[4],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_16600,2,t0,t1);}
t2=(C_word)C_a_i_plus(&a,2,t1,C_fix(1));
C_trace("ChickenBridge.scm: 379  period-omit-set!");
f_15443(((C_word*)t0)[3],((C_word*)t0)[2],t2);}

/* k16586 in k16583 in k16602 in a16574 in k16554 in k16545 in k16619 in k16537 in k16534 in k16637 in reset-period in k11783 in k10718 in k10715 in k7274 in k7271 in k6978 in k6975 in k6971 in k6680 in k6677 in k6674 in k6671 */
static void C_ccall f_16588(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[4],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_16588,2,t0,t1);}
t2=(C_word)C_a_i_plus(&a,2,((C_word*)((C_word*)t0)[3])[1],C_fix(1));
t3=C_mutate(((C_word *)((C_word*)t0)[3])+1,t2);
t4=((C_word*)t0)[2];
((C_proc2)(void*)(*((C_word*)t4+1)))(2,t4,t3);}

/* k16557 in k16554 in k16545 in k16619 in k16537 in k16534 in k16637 in reset-period in k11783 in k10718 in k10715 in k7274 in k7271 in k6978 in k6975 in k6971 in k6680 in k6677 in k6674 in k6671 */
static void C_ccall f_16559(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[8],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_16559,2,t0,t1);}
if(C_truep((C_word)C_i_greaterp(((C_word*)((C_word*)t0)[4])[1],C_fix(0)))){
t2=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_16569,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],tmp=(C_word)a,a+=4,tmp);
t3=(C_word)C_a_i_minus(&a,2,((C_word*)((C_word*)t0)[3])[1],((C_word*)((C_word*)t0)[4])[1]);
C_trace("ChickenBridge.scm: 379  max");
t4=*((C_word*)lf[295]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,t3,C_fix(0));}
else{
t2=((C_word*)t0)[2];
f_16550(t2,C_SCHEME_UNDEFINED);}}

/* k16567 in k16557 in k16554 in k16545 in k16619 in k16537 in k16534 in k16637 in reset-period in k11783 in k10718 in k10715 in k7274 in k7271 in k6978 in k6975 in k6971 in k6680 in k6677 in k6674 in k6671 */
static void C_ccall f_16569(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[3])+1,t1);
t3=((C_word*)t0)[2];
f_16550(t3,t2);}

/* k16548 in k16545 in k16619 in k16537 in k16534 in k16637 in reset-period in k11783 in k10718 in k10715 in k7274 in k7271 in k6978 in k6975 in k6971 in k6680 in k6677 in k6674 in k6671 */
static void C_fcall f_16550(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[4],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_16550,NULL,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_16553,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 379  period-count-set!");
f_15371(t2,((C_word*)t0)[2],((C_word*)((C_word*)t0)[3])[1]);}

/* k16551 in k16548 in k16545 in k16619 in k16537 in k16534 in k16637 in reset-period in k11783 in k10718 in k10715 in k7274 in k7271 in k6978 in k6975 in k6971 in k6680 in k6677 in k6674 in k6671 */
static void C_ccall f_16553(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
t2=((C_word*)t0)[3];
((C_proc2)(void*)(*((C_word*)t2+1)))(2,t2,((C_word*)((C_word*)t0)[2])[1]);}

/* map-pattern-data in k11783 in k10718 in k10715 in k7274 in k7271 in k6978 in k6975 in k6971 in k6680 in k6677 in k6674 in k6671 */
static void C_fcall f_16480(C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_16480,NULL,3,t1,t2,t3);}
t4=t3;
t5=(C_word)C_i_check_structure(t4,lf[306]);
t6=(C_word)C_i_block_ref(t4,C_fix(13));
t7=t6;
((C_proc4)C_retrieve_proc(t7))(4,t7,t1,t2,t3);}

/* next-in-pattern in k11783 in k10718 in k10715 in k7274 in k7271 in k6978 in k6975 in k6971 in k6680 in k6677 in k6674 in k6671 */
static void C_fcall f_16471(C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word *a;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_16471,NULL,2,t1,t2);}
t3=t2;
t4=(C_word)C_i_check_structure(t3,lf[306]);
t5=(C_word)C_i_block_ref(t3,C_fix(12));
t6=t5;
((C_proc3)C_retrieve_proc(t6))(3,t6,t1,t2);}

/* next-1 in k11783 in k10718 in k10715 in k7274 in k7271 in k6978 in k6975 in k6971 in k6680 in k6677 in k6674 in k6671 */
static void C_fcall f_16170(C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word ab[4],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_16170,NULL,2,t1,t2);}
t3=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_16177,a[2]=t2,a[3]=t1,tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 379  pattern?");
f_15515(t3,t2);}

/* k16175 in next-1 in k11783 in k10718 in k10715 in k7274 in k7271 in k6978 in k6975 in k6971 in k6680 in k6677 in k6674 in k6671 */
static void C_ccall f_16177(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[8],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_16177,2,t0,t1);}
if(C_truep(t1)){
t2=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_16180,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 379  pattern-period");
f_15602(t2,((C_word*)t0)[2]);}
else{
if(C_truep((C_word)C_i_closurep(((C_word*)t0)[2]))){
C_trace("ChickenBridge.scm: 379  obj");
t2=((C_word*)t0)[2];
((C_proc2)C_retrieve_proc(t2))(2,t2,((C_word*)t0)[3]);}
else{
t2=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_16466,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 379  promise?");
t3=C_retrieve(lf[341]);
((C_proc3)C_retrieve_proc(t3))(3,t3,t2,((C_word*)t0)[2]);}}}

/* k16464 in k16175 in next-1 in k11783 in k10718 in k10715 in k7274 in k7271 in k6978 in k6975 in k6971 in k6680 in k6677 in k6674 in k6671 */
static void C_ccall f_16466(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
if(C_truep(t1)){
C_trace("ChickenBridge.scm: 379  force");
t2=C_retrieve(lf[340]);
((C_proc3)C_retrieve_proc(t2))(3,t2,((C_word*)t0)[3],((C_word*)t0)[2]);}
else{
t2=((C_word*)t0)[3];
((C_proc2)(void*)(*((C_word*)t2+1)))(2,t2,((C_word*)t0)[2]);}}

/* k16178 in k16175 in next-1 in k11783 in k10718 in k10715 in k7274 in k7271 in k6978 in k6975 in k6971 in k6680 in k6677 in k6674 in k6671 */
static void C_ccall f_16180(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[14],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_16180,2,t0,t1);}
t2=C_SCHEME_FALSE;
t3=(*a=C_VECTOR_TYPE|1,a[1]=t2,tmp=(C_word)a,a+=2,tmp);
t4=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_16183,a[2]=t1,a[3]=((C_word*)t0)[2],a[4]=((C_word*)t0)[3],a[5]=t3,tmp=(C_word)a,a+=6,tmp);
t5=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_16451,a[2]=t1,a[3]=((C_word*)t0)[2],a[4]=t4,a[5]=t3,tmp=(C_word)a,a+=6,tmp);
C_trace("ChickenBridge.scm: 379  period-count");
f_15380(t5,t1);}

/* k16449 in k16178 in k16175 in next-1 in k11783 in k10718 in k10715 in k7274 in k7271 in k6978 in k6975 in k6971 in k6680 in k6677 in k6674 in k6671 */
static void C_ccall f_16451(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[10],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_16451,2,t0,t1);}
if(C_truep((C_word)C_i_nequalp(t1,C_fix(0)))){
t2=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_16406,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],tmp=(C_word)a,a+=5,tmp);
t3=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_16443,a[2]=t2,a[3]=((C_word*)t0)[5],a[4]=((C_word*)t0)[3],tmp=(C_word)a,a+=5,tmp);
C_trace("ChickenBridge.scm: 379  period-reps");
f_15470(t3,((C_word*)t0)[2]);}
else{
t2=((C_word*)t0)[4];
f_16183(2,t2,C_SCHEME_UNDEFINED);}}

/* k16441 in k16449 in k16178 in k16175 in next-1 in k11783 in k10718 in k10715 in k7274 in k7271 in k6978 in k6975 in k6971 in k6680 in k6677 in k6674 in k6671 */
static void C_ccall f_16443(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[5],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_16443,2,t0,t1);}
t2=((C_word*)t0)[4];
t3=(C_word)C_i_check_structure(t2,lf[306]);
t4=(C_word)C_i_block_ref(t2,C_fix(8));
if(C_truep((C_word)C_i_greater_or_equalp(t1,t4))){
t5=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_16435,a[2]=((C_word*)t0)[4],a[3]=((C_word*)t0)[2],a[4]=((C_word*)t0)[3],tmp=(C_word)a,a+=5,tmp);
C_trace("ChickenBridge.scm: 379  pattern-value-set!");
f_15611(t5,((C_word*)t0)[4],lf[335]);}
else{
t5=((C_word*)t0)[2];
f_16406(t5,C_SCHEME_UNDEFINED);}}

/* k16433 in k16441 in k16449 in k16178 in k16175 in next-1 in k11783 in k10718 in k10715 in k7274 in k7271 in k6978 in k6975 in k6971 in k6680 in k6677 in k6674 in k6671 */
static void C_ccall f_16435(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[4],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_16435,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_16438,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 379  pattern-state-set!");
f_15629(t2,((C_word*)t0)[2],lf[333]);}

/* k16436 in k16433 in k16441 in k16449 in k16178 in k16175 in next-1 in k11783 in k10718 in k10715 in k7274 in k7271 in k6978 in k6975 in k6971 in k6680 in k6677 in k6674 in k6671 */
static void C_ccall f_16438(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[3])+1,lf[335]);
t3=((C_word*)t0)[2];
f_16406(t3,t2);}

/* k16404 in k16449 in k16178 in k16175 in next-1 in k11783 in k10718 in k10715 in k7274 in k7271 in k6978 in k6975 in k6971 in k6680 in k6677 in k6674 in k6671 */
static void C_fcall f_16406(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[8],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_16406,NULL,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_16412,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],tmp=(C_word)a,a+=5,tmp);
t3=((C_word*)((C_word*)t0)[4])[1];
if(C_truep(t3)){
t4=t2;
f_16412(t4,C_SCHEME_FALSE);}
else{
t4=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_16429,a[2]=t2,tmp=(C_word)a,a+=3,tmp);
C_trace("ChickenBridge.scm: 379  reset-period");
f_16526(t4,((C_word*)t0)[2]);}}

/* k16427 in k16404 in k16449 in k16178 in k16175 in next-1 in k11783 in k10718 in k10715 in k7274 in k7271 in k6978 in k6975 in k6971 in k6680 in k6677 in k6674 in k6671 */
static void C_ccall f_16429(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
t2=((C_word*)t0)[2];
f_16412(t2,(C_word)C_i_nequalp(t1,C_fix(0)));}

/* k16410 in k16404 in k16449 in k16178 in k16175 in next-1 in k11783 in k10718 in k10715 in k7274 in k7271 in k6978 in k6975 in k6971 in k6680 in k6677 in k6674 in k6671 */
static void C_fcall f_16412(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[4],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_16412,NULL,2,t0,t1);}
if(C_truep(t1)){
t2=C_mutate(((C_word *)((C_word*)t0)[4])+1,lf[321]);
t3=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_16416,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 379  pattern-value-set!");
f_15611(t3,((C_word*)t0)[2],lf[321]);}
else{
t2=((C_word*)t0)[3];
f_16183(2,t2,C_SCHEME_UNDEFINED);}}

/* k16414 in k16410 in k16404 in k16449 in k16178 in k16175 in next-1 in k11783 in k10718 in k10715 in k7274 in k7271 in k6978 in k6975 in k6971 in k6680 in k6677 in k6674 in k6671 */
static void C_ccall f_16416(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 379  pattern-state-set!");
f_15629(((C_word*)t0)[3],((C_word*)t0)[2],lf[333]);}

/* k16181 in k16178 in k16175 in next-1 in k11783 in k10718 in k10715 in k7274 in k7271 in k6978 in k6975 in k6971 in k6680 in k6677 in k6674 in k6671 */
static void C_ccall f_16183(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[5],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_16183,2,t0,t1);}
if(C_truep(((C_word*)((C_word*)t0)[5])[1])){
t2=((C_word*)t0)[4];
((C_proc2)(void*)(*((C_word*)t2+1)))(2,t2,((C_word*)((C_word*)t0)[5])[1]);}
else{
t2=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_16189,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[3],tmp=(C_word)a,a+=5,tmp);
C_trace("ChickenBridge.scm: 379  pattern-flags");
f_15530(t2,((C_word*)t0)[3]);}}

/* k16187 in k16181 in k16178 in k16175 in next-1 in k11783 in k10718 in k10715 in k7274 in k7271 in k6978 in k6975 in k6971 in k6680 in k6677 in k6674 in k6671 */
static void C_ccall f_16189(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word ab[21],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_16189,2,t0,t1);}
t2=((C_word*)t0)[4];
t3=(C_word)C_i_check_structure(t2,lf[306]);
t4=(C_word)C_i_block_ref(t2,C_fix(9));
t5=C_SCHEME_FALSE;
t6=(*a=C_VECTOR_TYPE|1,a[1]=t5,tmp=(C_word)a,a+=2,tmp);
t7=C_SCHEME_FALSE;
t8=(*a=C_VECTOR_TYPE|1,a[1]=t7,tmp=(C_word)a,a+=2,tmp);
t9=(*a=C_CLOSURE_TYPE|8,a[1]=(C_word)f_16195,a[2]=t1,a[3]=((C_word*)t0)[2],a[4]=t4,a[5]=t8,a[6]=((C_word*)t0)[4],a[7]=t6,a[8]=((C_word*)t0)[3],tmp=(C_word)a,a+=9,tmp);
t10=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_16281,a[2]=t1,a[3]=((C_word*)t0)[2],a[4]=((C_word*)t0)[4],a[5]=t9,a[6]=t8,a[7]=t6,tmp=(C_word)a,a+=8,tmp);
C_trace("ChickenBridge.scm: 379  bitwise-test");
f_8151(t10,t1,C_fix(1));}

/* k16279 in k16187 in k16181 in k16178 in k16175 in next-1 in k11783 in k10718 in k10715 in k7274 in k7271 in k6978 in k6975 in k6971 in k6680 in k6677 in k6674 in k6671 */
static void C_ccall f_16281(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[20],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_16281,2,t0,t1);}
if(C_truep(t1)){
t2=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_16284,a[2]=((C_word*)t0)[4],a[3]=((C_word*)t0)[5],a[4]=((C_word*)t0)[6],a[5]=((C_word*)t0)[7],tmp=(C_word)a,a+=6,tmp);
t3=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_16297,a[2]=((C_word*)t0)[4],a[3]=t2,tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 379  next-in-pattern");
f_16471(t3,((C_word*)t0)[4]);}
else{
t2=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_16304,a[2]=((C_word*)t0)[5],a[3]=((C_word*)t0)[6],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[7],tmp=(C_word)a,a+=6,tmp);
t3=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_16393,a[2]=((C_word*)t0)[3],a[3]=t2,tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 379  bitwise-test");
f_8151(t3,((C_word*)t0)[2],C_fix(8));}}

/* k16391 in k16279 in k16187 in k16181 in k16178 in k16175 in next-1 in k11783 in k10718 in k10715 in k7274 in k7271 in k6978 in k6975 in k6971 in k6680 in k6677 in k6674 in k6671 */
static void C_ccall f_16393(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[3],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_16393,2,t0,t1);}
if(C_truep(t1)){
t2=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_16400,a[2]=((C_word*)t0)[3],tmp=(C_word)a,a+=3,tmp);
C_trace("ChickenBridge.scm: 379  period-length");
f_15398(t2,((C_word*)t0)[2]);}
else{
t2=((C_word*)t0)[3];
f_16304(t2,C_SCHEME_FALSE);}}

/* k16398 in k16391 in k16279 in k16187 in k16181 in k16178 in k16175 in next-1 in k11783 in k10718 in k10715 in k7274 in k7271 in k6978 in k6975 in k6971 in k6680 in k6677 in k6674 in k6671 */
static void C_ccall f_16400(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
t2=((C_word*)t0)[2];
f_16304(t2,(C_word)C_eqp(t1,C_SCHEME_TRUE));}

/* k16302 in k16279 in k16187 in k16181 in k16178 in k16175 in next-1 in k11783 in k10718 in k10715 in k7274 in k7271 in k6978 in k6975 in k6971 in k6680 in k6677 in k6674 in k6671 */
static void C_fcall f_16304(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_16304,NULL,2,t0,t1);}
t2=C_SCHEME_UNDEFINED;
t3=(*a=C_VECTOR_TYPE|1,a[1]=t2,tmp=(C_word)a,a+=2,tmp);
t4=C_set_block_item(t3,0,(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_16306,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=t3,a[5]=((C_word*)t0)[5],a[6]=((C_word)li246),tmp=(C_word)a,a+=7,tmp));
t5=((C_word*)t3)[1];
f_16306(t5,((C_word*)t0)[2],t1,C_SCHEME_FALSE);}

/* do1854 in k16302 in k16279 in k16187 in k16181 in k16178 in k16175 in next-1 in k11783 in k10718 in k10715 in k7274 in k7271 in k6978 in k6975 in k6971 in k6680 in k6677 in k6674 in k6671 */
static void C_fcall f_16306(C_word t0,C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word ab[19],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_16306,NULL,4,t0,t1,t2,t3);}
t4=(*a=C_VECTOR_TYPE|1,a[1]=t3,tmp=(C_word)a,a+=2,tmp);
if(C_truep(((C_word*)t4)[1])){
t5=t1;
((C_proc2)(void*)(*((C_word*)t5+1)))(2,t5,C_SCHEME_FALSE);}
else{
t5=(*a=C_CLOSURE_TYPE|8,a[1]=(C_word)f_16313,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=t4,a[5]=t2,a[6]=t1,a[7]=((C_word*)t0)[4],a[8]=((C_word*)t0)[5],tmp=(C_word)a,a+=9,tmp);
t6=C_SCHEME_UNDEFINED;
t7=(*a=C_VECTOR_TYPE|1,a[1]=t6,tmp=(C_word)a,a+=2,tmp);
t8=C_set_block_item(t7,0,(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_16355,a[2]=t2,a[3]=((C_word*)t0)[3],a[4]=t7,a[5]=((C_word)li245),tmp=(C_word)a,a+=6,tmp));
t9=((C_word*)t7)[1];
f_16355(t9,t5);}}

/* do1858 in do1854 in k16302 in k16279 in k16187 in k16181 in k16178 in k16175 in next-1 in k11783 in k10718 in k10715 in k7274 in k7271 in k6978 in k6975 in k6971 in k6680 in k6677 in k6674 in k6671 */
static void C_fcall f_16355(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[6],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_16355,NULL,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_16390,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=t1,a[5]=((C_word*)t0)[4],tmp=(C_word)a,a+=6,tmp);
C_trace("ChickenBridge.scm: 379  pattern-datum");
f_15584(t2,((C_word*)t0)[3]);}

/* k16388 in do1858 in do1854 in k16302 in k16279 in k16187 in k16181 in k16178 in k16175 in next-1 in k11783 in k10718 in k10715 in k7274 in k7271 in k6978 in k6975 in k6971 in k6680 in k6677 in k6674 in k6671 */
static void C_ccall f_16390(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[11],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_16390,2,t0,t1);}
t2=(C_word)C_eqp(t1,lf[321]);
if(C_truep(t2)){
t3=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_16365,a[2]=((C_word*)t0)[4],a[3]=((C_word*)t0)[5],tmp=(C_word)a,a+=4,tmp);
t4=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_16372,a[2]=((C_word*)t0)[3],a[3]=t3,tmp=(C_word)a,a+=4,tmp);
if(C_truep(((C_word*)t0)[2])){
t5=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_16379,a[2]=t4,tmp=(C_word)a,a+=3,tmp);
C_trace("ChickenBridge.scm: 379  next-in-pattern");
f_16471(t5,((C_word*)t0)[3]);}
else{
C_trace("ChickenBridge.scm: 379  next-in-pattern");
f_16471(t4,((C_word*)t0)[3]);}}
else{
t3=((C_word*)t0)[4];
((C_proc2)(void*)(*((C_word*)t3+1)))(2,t3,C_SCHEME_FALSE);}}

/* k16377 in k16388 in do1858 in do1854 in k16302 in k16279 in k16187 in k16181 in k16178 in k16175 in next-1 in k11783 in k10718 in k10715 in k7274 in k7271 in k6978 in k6975 in k6971 in k6680 in k6677 in k6674 in k6671 */
static void C_ccall f_16379(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[4],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_16379,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_16524,a[2]=t1,a[3]=((C_word*)t0)[2],tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 379  pattern?");
f_15515(t2,t1);}

/* k16522 in k16377 in k16388 in do1858 in do1854 in k16302 in k16279 in k16187 in k16181 in k16178 in k16175 in next-1 in k11783 in k10718 in k10715 in k7274 in k7271 in k6978 in k6975 in k6971 in k6680 in k6677 in k6674 in k6671 */
static void C_ccall f_16524(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[4],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_16524,2,t0,t1);}
if(C_truep(t1)){
t2=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_16499,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 379  pattern-period");
f_15602(t2,((C_word*)t0)[2]);}
else{
t2=((C_word*)t0)[3];
f_16372(2,t2,((C_word*)t0)[2]);}}

/* k16497 in k16522 in k16377 in k16388 in do1858 in do1854 in k16302 in k16279 in k16187 in k16181 in k16178 in k16175 in next-1 in k11783 in k10718 in k10715 in k7274 in k7271 in k6978 in k6975 in k6971 in k6680 in k6677 in k6674 in k6671 */
static void C_ccall f_16499(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[5],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_16499,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_16520,a[2]=((C_word*)t0)[2],a[3]=t1,a[4]=((C_word*)t0)[3],tmp=(C_word)a,a+=5,tmp);
C_trace("ChickenBridge.scm: 379  period-omit");
f_15452(t2,t1);}

/* k16518 in k16497 in k16522 in k16377 in k16388 in do1858 in do1854 in k16302 in k16279 in k16187 in k16181 in k16178 in k16175 in next-1 in k11783 in k10718 in k10715 in k7274 in k7271 in k6978 in k6975 in k6971 in k6680 in k6677 in k6674 in k6671 */
static void C_ccall f_16520(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_16520,2,t0,t1);}
if(C_truep((C_word)C_i_greaterp(t1,C_fix(0)))){
t2=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_16508,a[2]=((C_word*)t0)[4],tmp=(C_word)a,a+=3,tmp);
t3=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_16516,a[2]=((C_word*)t0)[3],a[3]=t2,tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 379  period-omit");
f_15452(t3,((C_word*)t0)[3]);}
else{
t2=((C_word*)t0)[4];
f_16372(2,t2,((C_word*)t0)[2]);}}

/* k16514 in k16518 in k16497 in k16522 in k16377 in k16388 in do1858 in do1854 in k16302 in k16279 in k16187 in k16181 in k16178 in k16175 in next-1 in k11783 in k10718 in k10715 in k7274 in k7271 in k6978 in k6975 in k6971 in k6680 in k6677 in k6674 in k6671 */
static void C_ccall f_16516(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[4],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_16516,2,t0,t1);}
t2=(C_word)C_a_i_minus(&a,2,t1,C_fix(1));
C_trace("ChickenBridge.scm: 379  period-omit-set!");
f_15443(((C_word*)t0)[3],((C_word*)t0)[2],t2);}

/* k16506 in k16518 in k16497 in k16522 in k16377 in k16388 in do1858 in do1854 in k16302 in k16279 in k16187 in k16181 in k16178 in k16175 in next-1 in k11783 in k10718 in k10715 in k7274 in k7271 in k6978 in k6975 in k6971 in k6680 in k6677 in k6674 in k6671 */
static void C_ccall f_16508(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
t2=((C_word*)t0)[2];
f_16372(2,t2,lf[321]);}

/* k16370 in k16388 in do1858 in do1854 in k16302 in k16279 in k16187 in k16181 in k16178 in k16175 in next-1 in k11783 in k10718 in k10715 in k7274 in k7271 in k6978 in k6975 in k6971 in k6680 in k6677 in k6674 in k6671 */
static void C_ccall f_16372(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 379  pattern-datum-set!");
f_15575(((C_word*)t0)[3],((C_word*)t0)[2],t1);}

/* k16363 in k16388 in do1858 in do1854 in k16302 in k16279 in k16187 in k16181 in k16178 in k16175 in next-1 in k11783 in k10718 in k10715 in k7274 in k7271 in k6978 in k6975 in k6971 in k6680 in k6677 in k6674 in k6671 */
static void C_ccall f_16365(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
t2=((C_word*)((C_word*)t0)[3])[1];
f_16355(t2,((C_word*)t0)[2]);}

/* k16311 in do1854 in k16302 in k16279 in k16187 in k16181 in k16178 in k16175 in next-1 in k11783 in k10718 in k10715 in k7274 in k7271 in k6978 in k6975 in k6971 in k6680 in k6677 in k6674 in k6671 */
static void C_ccall f_16313(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[12],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_16313,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|8,a[1]=(C_word)f_16317,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],a[7]=((C_word*)t0)[7],a[8]=((C_word*)t0)[8],tmp=(C_word)a,a+=9,tmp);
t3=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_16353,a[2]=t2,tmp=(C_word)a,a+=3,tmp);
C_trace("ChickenBridge.scm: 379  pattern-datum");
f_15584(t3,((C_word*)t0)[3]);}

/* k16351 in k16311 in do1854 in k16302 in k16279 in k16187 in k16181 in k16178 in k16175 in next-1 in k11783 in k10718 in k10715 in k7274 in k7271 in k6978 in k6975 in k6971 in k6680 in k6677 in k6674 in k6671 */
static void C_ccall f_16353(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 379  next-1");
f_16170(((C_word*)t0)[2],t1);}

/* k16315 in k16311 in do1854 in k16302 in k16279 in k16187 in k16181 in k16178 in k16175 in next-1 in k11783 in k10718 in k10715 in k7274 in k7271 in k6978 in k6975 in k6971 in k6680 in k6677 in k6674 in k6671 */
static void C_ccall f_16317(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[16],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_16317,2,t0,t1);}
t2=C_mutate(((C_word *)((C_word*)t0)[8])+1,t1);
t3=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_16320,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[8],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],a[7]=((C_word*)t0)[7],tmp=(C_word)a,a+=8,tmp);
t4=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_16336,a[2]=((C_word*)t0)[3],a[3]=t3,a[4]=((C_word*)t0)[2],tmp=(C_word)a,a+=5,tmp);
t5=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_16349,a[2]=t4,tmp=(C_word)a,a+=3,tmp);
C_trace("ChickenBridge.scm: 379  pattern-datum");
f_15584(t5,((C_word*)t0)[3]);}

/* k16347 in k16315 in k16311 in do1854 in k16302 in k16279 in k16187 in k16181 in k16178 in k16175 in next-1 in k11783 in k10718 in k10715 in k7274 in k7271 in k6978 in k6975 in k6971 in k6680 in k6677 in k6674 in k6671 */
static void C_ccall f_16349(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 379  pattern?");
f_15515(((C_word*)t0)[2],t1);}

/* k16334 in k16315 in k16311 in do1854 in k16302 in k16279 in k16187 in k16181 in k16178 in k16175 in next-1 in k11783 in k10718 in k10715 in k7274 in k7271 in k6978 in k6975 in k6971 in k6680 in k6677 in k6674 in k6671 */
static void C_ccall f_16336(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_16336,2,t0,t1);}
if(C_truep(t1)){
t2=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_16340,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],tmp=(C_word)a,a+=4,tmp);
t3=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_16344,a[2]=t2,tmp=(C_word)a,a+=3,tmp);
C_trace("ChickenBridge.scm: 379  pattern-datum");
f_15584(t3,((C_word*)t0)[2]);}
else{
t2=C_mutate(((C_word *)((C_word*)t0)[4])+1,lf[333]);
t3=((C_word*)t0)[3];
f_16320(t3,t2);}}

/* k16342 in k16334 in k16315 in k16311 in do1854 in k16302 in k16279 in k16187 in k16181 in k16178 in k16175 in next-1 in k11783 in k10718 in k10715 in k7274 in k7271 in k6978 in k6975 in k6971 in k6680 in k6677 in k6674 in k6671 */
static void C_ccall f_16344(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 379  pattern-state");
f_15638(((C_word*)t0)[2],t1);}

/* k16338 in k16334 in k16315 in k16311 in do1854 in k16302 in k16279 in k16187 in k16181 in k16178 in k16175 in next-1 in k11783 in k10718 in k10715 in k7274 in k7271 in k6978 in k6975 in k6971 in k6680 in k6677 in k6674 in k6671 */
static void C_ccall f_16340(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[3])+1,t1);
t3=((C_word*)t0)[2];
f_16320(t3,t2);}

/* k16318 in k16315 in k16311 in do1854 in k16302 in k16279 in k16187 in k16181 in k16178 in k16175 in next-1 in k11783 in k10718 in k10715 in k7274 in k7271 in k6978 in k6975 in k6971 in k6680 in k6677 in k6674 in k6671 */
static void C_fcall f_16320(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[6],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_16320,NULL,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_16323,a[2]=((C_word*)t0)[4],a[3]=((C_word*)t0)[5],a[4]=((C_word*)t0)[6],a[5]=((C_word*)t0)[7],tmp=(C_word)a,a+=6,tmp);
t3=(C_word)C_eqp(((C_word*)((C_word*)t0)[3])[1],lf[321]);
if(C_truep(t3)){
C_trace("ChickenBridge.scm: 379  pattern-datum-set!");
f_15575(t2,((C_word*)t0)[2],((C_word*)((C_word*)t0)[3])[1]);}
else{
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=t2;
f_16323(2,t5,t4);}}

/* k16321 in k16318 in k16315 in k16311 in do1854 in k16302 in k16279 in k16187 in k16181 in k16178 in k16175 in next-1 in k11783 in k10718 in k10715 in k7274 in k7271 in k6978 in k6975 in k6971 in k6680 in k6677 in k6674 in k6671 */
static void C_ccall f_16323(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
t2=((C_word*)((C_word*)t0)[5])[1];
f_16306(t2,((C_word*)t0)[4],((C_word*)t0)[3],((C_word*)((C_word*)t0)[2])[1]);}

/* k16295 in k16279 in k16187 in k16181 in k16178 in k16175 in next-1 in k11783 in k10718 in k10715 in k7274 in k7271 in k6978 in k6975 in k6971 in k6680 in k6677 in k6674 in k6671 */
static void C_ccall f_16297(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 379  pattern-datum-set!");
f_15575(((C_word*)t0)[3],((C_word*)t0)[2],t1);}

/* k16282 in k16279 in k16187 in k16181 in k16178 in k16175 in next-1 in k11783 in k10718 in k10715 in k7274 in k7271 in k6978 in k6975 in k6971 in k6680 in k6677 in k6674 in k6671 */
static void C_ccall f_16284(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[8],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_16284,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_16288,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],tmp=(C_word)a,a+=5,tmp);
t3=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_16293,a[2]=t2,tmp=(C_word)a,a+=3,tmp);
C_trace("ChickenBridge.scm: 379  pattern-datum");
f_15584(t3,((C_word*)t0)[2]);}

/* k16291 in k16282 in k16279 in k16187 in k16181 in k16178 in k16175 in next-1 in k11783 in k10718 in k10715 in k7274 in k7271 in k6978 in k6975 in k6971 in k6680 in k6677 in k6674 in k6671 */
static void C_ccall f_16293(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 379  next-1");
f_16170(((C_word*)t0)[2],t1);}

/* k16286 in k16282 in k16279 in k16187 in k16181 in k16178 in k16175 in next-1 in k11783 in k10718 in k10715 in k7274 in k7271 in k6978 in k6975 in k6971 in k6680 in k6677 in k6674 in k6671 */
static void C_ccall f_16288(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[4])+1,t1);
t3=C_mutate(((C_word *)((C_word*)t0)[3])+1,lf[333]);
t4=((C_word*)t0)[2];
f_16195(2,t4,t3);}

/* k16193 in k16187 in k16181 in k16178 in k16175 in next-1 in k11783 in k10718 in k10715 in k7274 in k7271 in k6978 in k6975 in k6971 in k6680 in k6677 in k6674 in k6671 */
static void C_ccall f_16195(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word ab[26],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_16195,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_16198,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],a[7]=((C_word*)t0)[8],tmp=(C_word)a,a+=8,tmp);
t3=(C_word)C_eqp(((C_word*)((C_word*)t0)[5])[1],lf[333]);
if(C_truep(t3)){
t4=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_16240,a[2]=((C_word*)t0)[6],a[3]=t2,a[4]=((C_word*)t0)[5],tmp=(C_word)a,a+=5,tmp);
t5=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_16252,a[2]=((C_word*)t0)[3],a[3]=t4,tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 379  period-count");
f_15380(t5,((C_word*)t0)[3]);}
else{
t4=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_16255,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=t2,tmp=(C_word)a,a+=5,tmp);
t5=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_16275,a[2]=((C_word*)t0)[6],a[3]=t4,tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 379  bitwise-test");
f_8151(t5,((C_word*)t0)[2],C_fix(64));}}

/* k16273 in k16193 in k16187 in k16181 in k16178 in k16175 in next-1 in k11783 in k10718 in k10715 in k7274 in k7271 in k6978 in k6975 in k6971 in k6680 in k6677 in k6674 in k6671 */
static void C_ccall f_16275(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
if(C_truep(t1)){
C_trace("ChickenBridge.scm: 379  pattern-datum-set!");
f_15575(((C_word*)t0)[3],((C_word*)t0)[2],lf[321]);}
else{
t2=((C_word*)t0)[3];
f_16255(2,t2,C_SCHEME_UNDEFINED);}}

/* k16253 in k16193 in k16187 in k16181 in k16178 in k16175 in next-1 in k11783 in k10718 in k10715 in k7274 in k7271 in k6978 in k6975 in k6971 in k6680 in k6677 in k6674 in k6671 */
static void C_ccall f_16255(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[4],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_16255,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_16261,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 379  bitwise-test");
f_8151(t2,((C_word*)t0)[2],C_fix(16));}

/* k16259 in k16253 in k16193 in k16187 in k16181 in k16178 in k16175 in next-1 in k11783 in k10718 in k10715 in k7274 in k7271 in k6978 in k6975 in k6971 in k6680 in k6677 in k6674 in k6671 */
static void C_ccall f_16261(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[4],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_16261,2,t0,t1);}
if(C_truep(t1)){
t2=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_16272,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 379  period-count");
f_15380(t2,((C_word*)t0)[2]);}
else{
t2=((C_word*)t0)[3];
f_16198(2,t2,C_SCHEME_UNDEFINED);}}

/* k16270 in k16259 in k16253 in k16193 in k16187 in k16181 in k16178 in k16175 in next-1 in k11783 in k10718 in k10715 in k7274 in k7271 in k6978 in k6975 in k6971 in k6680 in k6677 in k6674 in k6671 */
static void C_ccall f_16272(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[4],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_16272,2,t0,t1);}
t2=(C_word)C_a_i_minus(&a,2,t1,C_fix(1));
C_trace("ChickenBridge.scm: 379  period-count-set!");
f_15371(((C_word*)t0)[3],((C_word*)t0)[2],t2);}

/* k16250 in k16193 in k16187 in k16181 in k16178 in k16175 in next-1 in k11783 in k10718 in k10715 in k7274 in k7271 in k6978 in k6975 in k6971 in k6680 in k6677 in k6674 in k6671 */
static void C_ccall f_16252(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[4],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_16252,2,t0,t1);}
t2=(C_word)C_a_i_minus(&a,2,t1,C_fix(1));
C_trace("ChickenBridge.scm: 379  period-count-set!");
f_15371(((C_word*)t0)[3],((C_word*)t0)[2],t2);}

/* k16238 in k16193 in k16187 in k16181 in k16178 in k16175 in next-1 in k11783 in k10718 in k10715 in k7274 in k7271 in k6978 in k6975 in k6971 in k6680 in k6677 in k6674 in k6671 */
static void C_ccall f_16240(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[4],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_16240,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_16243,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 379  pattern-datum-set!");
f_15575(t2,((C_word*)t0)[2],lf[321]);}

/* k16241 in k16238 in k16193 in k16187 in k16181 in k16178 in k16175 in next-1 in k11783 in k10718 in k10715 in k7274 in k7271 in k6978 in k6975 in k6971 in k6680 in k6677 in k6674 in k6671 */
static void C_ccall f_16243(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word *a;
t2=C_set_block_item(((C_word*)t0)[3],0,C_SCHEME_FALSE);
t3=((C_word*)t0)[2];
f_16198(2,t3,t2);}

/* k16196 in k16193 in k16187 in k16181 in k16178 in k16175 in next-1 in k11783 in k10718 in k10715 in k7274 in k7271 in k6978 in k6975 in k6971 in k6680 in k6677 in k6674 in k6671 */
static void C_ccall f_16198(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[12],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_16198,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_16201,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_16234,a[2]=t2,a[3]=((C_word*)t0)[2],a[4]=((C_word*)t0)[4],tmp=(C_word)a,a+=5,tmp);
C_trace("ChickenBridge.scm: 379  period-count");
f_15380(t3,((C_word*)t0)[2]);}

/* k16232 in k16196 in k16193 in k16187 in k16181 in k16178 in k16175 in next-1 in k11783 in k10718 in k10715 in k7274 in k7271 in k6978 in k6975 in k6971 in k6680 in k6677 in k6674 in k6671 */
static void C_ccall f_16234(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[4],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_16234,2,t0,t1);}
if(C_truep((C_word)C_i_nequalp(t1,C_fix(0)))){
t2=C_mutate(((C_word *)((C_word*)t0)[4])+1,lf[333]);
t3=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_16229,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 379  period-reps");
f_15470(t3,((C_word*)t0)[3]);}
else{
t2=C_mutate(((C_word *)((C_word*)t0)[4])+1,((C_word*)((C_word*)t0)[4])[1]);
t3=((C_word*)t0)[2];
f_16201(2,t3,t2);}}

/* k16227 in k16232 in k16196 in k16193 in k16187 in k16181 in k16178 in k16175 in next-1 in k11783 in k10718 in k10715 in k7274 in k7271 in k6978 in k6975 in k6971 in k6680 in k6677 in k6674 in k6671 */
static void C_ccall f_16229(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[4],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_16229,2,t0,t1);}
t2=(C_word)C_a_i_plus(&a,2,C_fix(1),t1);
t3=((C_word*)t0)[3];
t4=(C_word)C_i_check_structure(t3,lf[297]);
C_trace("ChickenBridge.scm: 379  ##sys#block-set!");
t5=*((C_word*)lf[225]+1);
((C_proc5)(void*)(*((C_word*)t5+1)))(5,t5,((C_word*)t0)[2],t3,C_fix(6),t2);}

/* k16199 in k16196 in k16193 in k16187 in k16181 in k16178 in k16175 in next-1 in k11783 in k10718 in k10715 in k7274 in k7271 in k6978 in k6975 in k6971 in k6680 in k6677 in k6674 in k6671 */
static void C_ccall f_16201(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[10],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_16201,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_16204,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],tmp=(C_word)a,a+=6,tmp);
if(C_truep(((C_word*)t0)[2])){
t3=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_16214,a[2]=t2,a[3]=((C_word*)t0)[5],tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 379  retfn");
t4=((C_word*)t0)[2];
((C_proc3)C_retrieve_proc(t4))(3,t4,t3,((C_word*)((C_word*)t0)[5])[1]);}
else{
t3=t2;
f_16204(t3,C_SCHEME_UNDEFINED);}}

/* k16212 in k16199 in k16196 in k16193 in k16187 in k16181 in k16178 in k16175 in next-1 in k11783 in k10718 in k10715 in k7274 in k7271 in k6978 in k6975 in k6971 in k6680 in k6677 in k6674 in k6671 */
static void C_ccall f_16214(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[3])+1,t1);
t3=((C_word*)t0)[2];
f_16204(t3,t2);}

/* k16202 in k16199 in k16196 in k16193 in k16187 in k16181 in k16178 in k16175 in next-1 in k11783 in k10718 in k10715 in k7274 in k7271 in k6978 in k6975 in k6971 in k6680 in k6677 in k6674 in k6671 */
static void C_fcall f_16204(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[5],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_16204,NULL,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_16207,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],tmp=(C_word)a,a+=5,tmp);
C_trace("ChickenBridge.scm: 379  pattern-state-set!");
f_15629(t2,((C_word*)t0)[3],((C_word*)((C_word*)t0)[2])[1]);}

/* k16205 in k16202 in k16199 in k16196 in k16193 in k16187 in k16181 in k16178 in k16175 in next-1 in k11783 in k10718 in k10715 in k7274 in k7271 in k6978 in k6975 in k6971 in k6680 in k6677 in k6674 in k6671 */
static void C_ccall f_16207(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[4],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_16207,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_16210,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 379  pattern-value-set!");
f_15611(t2,((C_word*)t0)[2],((C_word*)((C_word*)t0)[3])[1]);}

/* k16208 in k16205 in k16202 in k16199 in k16196 in k16193 in k16187 in k16181 in k16178 in k16175 in next-1 in k11783 in k10718 in k10715 in k7274 in k7271 in k6978 in k6975 in k6971 in k6680 in k6677 in k6674 in k6671 */
static void C_ccall f_16210(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
t2=((C_word*)t0)[3];
((C_proc2)(void*)(*((C_word*)t2+1)))(2,t2,((C_word*)((C_word*)t0)[2])[1]);}

/* next in k11783 in k10718 in k10715 in k7274 in k7271 in k6978 in k6975 in k6971 in k6680 in k6677 in k6674 in k6671 */
static void C_ccall f_16047(C_word c,C_word t0,C_word t1,C_word t2,...){
C_word tmp;
C_word t3;
va_list v;
C_word *a,c2=c;
C_save_rest(t2,c2,3);
if(c<3) C_bad_min_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_demand(c*C_SIZEOF_PAIR+16)){
C_save_and_reclaim((void*)tr3rv,(void*)f_16047r,3,t0,t1,t2);}
else{
a=C_alloc((c-3)*3);
t3=C_restore_rest_vector(a,C_rest_count(0));
f_16047r(t0,t1,t2,t3);}}

static void C_ccall f_16047r(C_word t0,C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word *a=C_alloc(16);
t4=(C_word)C_vemptyp(t3);
t5=(C_truep(t4)?C_SCHEME_FALSE:(C_word)C_i_vector_ref(t3,C_fix(0)));
if(C_truep(t5)){
if(C_truep((C_word)C_i_numberp(t5))){
t6=(C_word)C_a_i_list(&a,1,C_SCHEME_FALSE);
t7=C_SCHEME_UNDEFINED;
t8=(*a=C_VECTOR_TYPE|1,a[1]=t7,tmp=(C_word)a,a+=2,tmp);
t9=C_set_block_item(t8,0,(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_16068,a[2]=t2,a[3]=t8,a[4]=t6,a[5]=t5,a[6]=((C_word)li242),tmp=(C_word)a,a+=7,tmp));
t10=((C_word*)t8)[1];
f_16068(t10,t1,C_fix(0),t6);}
else{
t6=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_16106,a[2]=t1,a[3]=t2,tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 379  pattern?");
f_15515(t6,t2);}}
else{
C_trace("ChickenBridge.scm: 379  next-1");
f_16170(t1,t2);}}

/* k16104 in next in k11783 in k10718 in k10715 in k7274 in k7271 in k6978 in k6975 in k6971 in k6680 in k6677 in k6674 in k6671 */
static void C_ccall f_16106(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[11],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_16106,2,t0,t1);}
if(C_truep(t1)){
t2=(C_word)C_a_i_list(&a,1,C_SCHEME_FALSE);
t3=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_16116,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=t2,tmp=(C_word)a,a+=5,tmp);
C_trace("ChickenBridge.scm: 379  next-1");
f_16170(t3,((C_word*)t0)[3]);}
else{
t2=((C_word*)t0)[2];
((C_proc2)(void*)(*((C_word*)t2+1)))(2,t2,(C_word)C_a_i_list(&a,1,((C_word*)t0)[3]));}}

/* k16114 in k16104 in next in k11783 in k10718 in k10715 in k7274 in k7271 in k6978 in k6975 in k6971 in k6680 in k6677 in k6674 in k6671 */
static void C_ccall f_16116(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[8],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_16116,2,t0,t1);}
t2=C_SCHEME_UNDEFINED;
t3=(*a=C_VECTOR_TYPE|1,a[1]=t2,tmp=(C_word)a,a+=2,tmp);
t4=C_set_block_item(t3,0,(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_16118,a[2]=((C_word*)t0)[3],a[3]=t3,a[4]=((C_word*)t0)[4],a[5]=((C_word)li243),tmp=(C_word)a,a+=6,tmp));
t5=((C_word*)t3)[1];
f_16118(t5,((C_word*)t0)[2],t1,((C_word*)t0)[4],C_SCHEME_FALSE);}

/* do1830 in k16114 in k16104 in next in k11783 in k10718 in k10715 in k7274 in k7271 in k6978 in k6975 in k6971 in k6680 in k6677 in k6674 in k6671 */
static void C_fcall f_16118(C_word t0,C_word t1,C_word t2,C_word t3,C_word t4){
C_word tmp;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word ab[20],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_16118,NULL,5,t0,t1,t2,t3,t4);}
t5=(*a=C_VECTOR_TYPE|1,a[1]=t2,tmp=(C_word)a,a+=2,tmp);
t6=(*a=C_VECTOR_TYPE|1,a[1]=t4,tmp=(C_word)a,a+=2,tmp);
t7=(C_word)C_eqp(((C_word*)t5)[1],lf[335]);
t8=(C_truep(t7)?t7:((C_word*)t6)[1]);
if(C_truep(t8)){
t9=t1;
((C_proc2)(void*)(*((C_word*)t9+1)))(2,t9,(C_word)C_i_cdr(((C_word*)t0)[4]));}
else{
t9=(C_word)C_a_i_list(&a,1,((C_word*)t5)[1]);
t10=(C_word)C_i_set_cdr(t3,t9);
t11=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_16137,a[2]=t6,a[3]=t5,a[4]=t1,a[5]=((C_word*)t0)[3],a[6]=t3,tmp=(C_word)a,a+=7,tmp);
t12=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_16147,a[2]=((C_word*)t0)[2],a[3]=t5,a[4]=t11,a[5]=t6,tmp=(C_word)a,a+=6,tmp);
C_trace("ChickenBridge.scm: 379  eop?");
t13=C_retrieve(lf[332]);
((C_proc3)C_retrieve_proc(t13))(3,t13,t12,((C_word*)t0)[2]);}}

/* k16145 in do1830 in k16114 in k16104 in next in k11783 in k10718 in k10715 in k7274 in k7271 in k6978 in k6975 in k6971 in k6680 in k6677 in k6674 in k6671 */
static void C_ccall f_16147(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[4],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_16147,2,t0,t1);}
if(C_truep(t1)){
t2=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t3=((C_word*)t0)[4];
f_16137(t3,t2);}
else{
t2=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_16152,a[2]=((C_word*)t0)[4],a[3]=((C_word*)t0)[3],tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 379  next-1");
f_16170(t2,((C_word*)t0)[2]);}}

/* k16150 in k16145 in do1830 in k16114 in k16104 in next in k11783 in k10718 in k10715 in k7274 in k7271 in k6978 in k6975 in k6971 in k6680 in k6677 in k6674 in k6671 */
static void C_ccall f_16152(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[3])+1,t1);
t3=((C_word*)t0)[2];
f_16137(t3,t2);}

/* k16135 in do1830 in k16114 in k16104 in next in k11783 in k10718 in k10715 in k7274 in k7271 in k6978 in k6975 in k6971 in k6680 in k6677 in k6674 in k6671 */
static void C_fcall f_16137(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word *a;
t2=(C_word)C_i_cdr(((C_word*)t0)[6]);
t3=((C_word*)((C_word*)t0)[5])[1];
f_16118(t3,((C_word*)t0)[4],((C_word*)((C_word*)t0)[3])[1],t2,((C_word*)((C_word*)t0)[2])[1]);}

/* do1823 in next in k11783 in k10718 in k10715 in k7274 in k7271 in k6978 in k6975 in k6971 in k6680 in k6677 in k6674 in k6671 */
static void C_fcall f_16068(C_word t0,C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word ab[6],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_16068,NULL,4,t0,t1,t2,t3);}
if(C_truep((C_word)C_i_greater_or_equalp(t2,((C_word*)t0)[5]))){
t4=t1;
((C_proc2)(void*)(*((C_word*)t4+1)))(2,t4,(C_word)C_i_cdr(((C_word*)t0)[4]));}
else{
t4=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_16100,a[2]=t1,a[3]=((C_word*)t0)[3],a[4]=t2,a[5]=t3,tmp=(C_word)a,a+=6,tmp);
C_trace("ChickenBridge.scm: 379  next-1");
f_16170(t4,((C_word*)t0)[2]);}}

/* k16098 in do1823 in next in k11783 in k10718 in k10715 in k7274 in k7271 in k6978 in k6975 in k6971 in k6680 in k6677 in k6674 in k6671 */
static void C_ccall f_16100(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_16100,2,t0,t1);}
t2=(C_word)C_a_i_list(&a,1,t1);
t3=(C_word)C_i_set_cdr(((C_word*)t0)[5],t2);
t4=(C_word)C_a_i_plus(&a,2,C_fix(1),((C_word*)t0)[4]);
t5=(C_word)C_i_cdr(((C_word*)t0)[5]);
t6=((C_word*)((C_word*)t0)[3])[1];
f_16068(t6,((C_word*)t0)[2],t4,t5);}

/* eod? in k11783 in k10718 in k10715 in k7274 in k7271 in k6978 in k6975 in k6971 in k6680 in k6677 in k6674 in k6671 */
static void C_ccall f_16028(C_word c,C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word ab[4],*a=ab;
if(c!=3) C_bad_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr3,(void*)f_16028,3,t0,t1,t2);}
t3=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_16035,a[2]=t2,a[3]=t1,tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 379  pattern?");
f_15515(t3,t2);}

/* k16033 in eod? in k11783 in k10718 in k10715 in k7274 in k7271 in k6978 in k6975 in k6971 in k6680 in k6677 in k6674 in k6671 */
static void C_ccall f_16035(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[3],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_16035,2,t0,t1);}
if(C_truep(t1)){
t2=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_16042,a[2]=((C_word*)t0)[3],tmp=(C_word)a,a+=3,tmp);
C_trace("ChickenBridge.scm: 379  pattern-value");
t3=C_retrieve2(lf[315],"pattern-value");
((C_proc3)C_retrieve_proc(t3))(3,t3,t2,((C_word*)t0)[2]);}
else{
t2=((C_word*)t0)[3];
((C_proc2)(void*)(*((C_word*)t2+1)))(2,t2,(C_word)C_eqp(((C_word*)t0)[2],lf[335]));}}

/* k16040 in k16033 in eod? in k11783 in k10718 in k10715 in k7274 in k7271 in k6978 in k6975 in k6971 in k6680 in k6677 in k6674 in k6671 */
static void C_ccall f_16042(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 379  eod?");
t2=C_retrieve(lf[334]);
((C_proc3)C_retrieve_proc(t2))(3,t2,((C_word*)t0)[2],t1);}

/* eop? in k11783 in k10718 in k10715 in k7274 in k7271 in k6978 in k6975 in k6971 in k6680 in k6677 in k6674 in k6671 */
static void C_ccall f_16009(C_word c,C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word ab[4],*a=ab;
if(c!=3) C_bad_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr3,(void*)f_16009,3,t0,t1,t2);}
t3=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_16016,a[2]=t2,a[3]=t1,tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 379  pattern?");
f_15515(t3,t2);}

/* k16014 in eop? in k11783 in k10718 in k10715 in k7274 in k7271 in k6978 in k6975 in k6971 in k6680 in k6677 in k6674 in k6671 */
static void C_ccall f_16016(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[3],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_16016,2,t0,t1);}
if(C_truep(t1)){
t2=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_16023,a[2]=((C_word*)t0)[3],tmp=(C_word)a,a+=3,tmp);
C_trace("ChickenBridge.scm: 379  pattern-state");
f_15638(t2,((C_word*)t0)[2]);}
else{
t2=((C_word*)t0)[3];
((C_proc2)(void*)(*((C_word*)t2+1)))(2,t2,(C_word)C_eqp(((C_word*)t0)[2],lf[333]));}}

/* k16021 in k16014 in eop? in k11783 in k10718 in k10715 in k7274 in k7271 in k6978 in k6975 in k6971 in k6680 in k6677 in k6674 in k6671 */
static void C_ccall f_16023(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 379  eop?");
t2=C_retrieve(lf[332]);
((C_proc3)C_retrieve_proc(t2))(3,t2,((C_word*)t0)[2],t1);}

/* initialize-pattern in k11783 in k10718 in k10715 in k7274 in k7271 in k6978 in k6975 in k6971 in k6680 in k6677 in k6674 in k6671 */
static void C_fcall f_15829(C_word t1,C_word t2,C_word t3,C_word t4,C_word t5,C_word t6,C_word t7,C_word t8,C_word t9,C_word t10){
C_word tmp;
C_word t11;
C_word t12;
C_word t13;
C_word ab[13],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_15829,NULL,10,t1,t2,t3,t4,t5,t6,t7,t8,t9,t10);}
t11=(*a=C_VECTOR_TYPE|1,a[1]=t6,tmp=(C_word)a,a+=2,tmp);
t12=(*a=C_CLOSURE_TYPE|10,a[1]=(C_word)f_15833,a[2]=t7,a[3]=t10,a[4]=t9,a[5]=t5,a[6]=t11,a[7]=t1,a[8]=t8,a[9]=t4,a[10]=t2,tmp=(C_word)a,a+=11,tmp);
C_trace("ChickenBridge.scm: 379  pattern-data-set!");
f_15539(t12,t2,t3);}

/* k15831 in initialize-pattern in k11783 in k10718 in k10715 in k7274 in k7271 in k6978 in k6975 in k6971 in k6680 in k6677 in k6674 in k6671 */
static void C_ccall f_15833(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[10],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_15833,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|9,a[1]=(C_word)f_15836,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],a[7]=((C_word*)t0)[8],a[8]=((C_word*)t0)[9],a[9]=((C_word*)t0)[10],tmp=(C_word)a,a+=10,tmp);
t3=((C_word*)t0)[10];
t4=((C_word*)t0)[2];
t5=(C_word)C_i_check_structure(t3,lf[306]);
C_trace("ChickenBridge.scm: 379  ##sys#block-set!");
t6=*((C_word*)lf[225]+1);
((C_proc5)(void*)(*((C_word*)t6+1)))(5,t6,t2,t3,C_fix(3),t4);}

/* k15834 in k15831 in initialize-pattern in k11783 in k10718 in k10715 in k7274 in k7271 in k6978 in k6975 in k6971 in k6680 in k6677 in k6674 in k6671 */
static void C_ccall f_15836(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_15836,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|8,a[1]=(C_word)f_15839,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],a[7]=((C_word*)t0)[8],a[8]=((C_word*)t0)[9],tmp=(C_word)a,a+=9,tmp);
t3=((C_word*)t0)[9];
t4=((C_word*)t0)[2];
t5=(C_word)C_i_check_structure(t3,lf[306]);
C_trace("ChickenBridge.scm: 379  ##sys#block-set!");
t6=*((C_word*)lf[225]+1);
((C_proc5)(void*)(*((C_word*)t6+1)))(5,t6,t2,t3,C_fix(13),t4);}

/* k15837 in k15834 in k15831 in initialize-pattern in k11783 in k10718 in k10715 in k7274 in k7271 in k6978 in k6975 in k6971 in k6680 in k6677 in k6674 in k6671 */
static void C_ccall f_15839(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[8],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_15839,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_15842,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],a[7]=((C_word*)t0)[8],tmp=(C_word)a,a+=8,tmp);
t3=((C_word*)t0)[8];
t4=((C_word*)t0)[2];
t5=(C_word)C_i_check_structure(t3,lf[306]);
C_trace("ChickenBridge.scm: 379  ##sys#block-set!");
t6=*((C_word*)lf[225]+1);
((C_proc5)(void*)(*((C_word*)t6+1)))(5,t6,t2,t3,C_fix(12),t4);}

/* k15840 in k15837 in k15834 in k15831 in initialize-pattern in k11783 in k10718 in k10715 in k7274 in k7271 in k6978 in k6975 in k6971 in k6680 in k6677 in k6674 in k6671 */
static void C_ccall f_15842(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[15],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_15842,2,t0,t1);}
t2=C_SCHEME_TRUE;
t3=(*a=C_VECTOR_TYPE|1,a[1]=t2,tmp=(C_word)a,a+=2,tmp);
t4=(*a=C_CLOSURE_TYPE|8,a[1]=(C_word)f_15845,a[2]=t3,a[3]=((C_word*)t0)[2],a[4]=((C_word*)t0)[3],a[5]=((C_word*)t0)[4],a[6]=((C_word*)t0)[5],a[7]=((C_word*)t0)[6],a[8]=((C_word*)t0)[7],tmp=(C_word)a,a+=9,tmp);
t5=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_15999,a[2]=t3,a[3]=((C_word)li238),tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 379  map-pattern-data");
f_16480(t4,t5,((C_word*)t0)[7]);}

/* a15998 in k15840 in k15837 in k15834 in k15831 in initialize-pattern in k11783 in k10718 in k10715 in k7274 in k7271 in k6978 in k6975 in k6971 in k6680 in k6677 in k6674 in k6671 */
static void C_ccall f_15999(C_word c,C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word ab[4],*a=ab;
if(c!=3) C_bad_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr3,(void*)f_15999,3,t0,t1,t2);}
t3=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_16006,a[2]=t1,a[3]=((C_word*)t0)[2],tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 379  pattern?");
f_15515(t3,t2);}

/* k16004 in a15998 in k15840 in k15837 in k15834 in k15831 in initialize-pattern in k11783 in k10718 in k10715 in k7274 in k7271 in k6978 in k6975 in k6971 in k6680 in k6677 in k6674 in k6671 */
static void C_ccall f_16006(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word *a;
if(C_truep(t1)){
t2=C_set_block_item(((C_word*)t0)[3],0,C_SCHEME_FALSE);
t3=((C_word*)t0)[2];
((C_proc2)(void*)(*((C_word*)t3+1)))(2,t3,t2);}
else{
t2=((C_word*)t0)[2];
((C_proc2)(void*)(*((C_word*)t2+1)))(2,t2,C_SCHEME_UNDEFINED);}}

/* k15843 in k15840 in k15837 in k15834 in k15831 in initialize-pattern in k11783 in k10718 in k10715 in k7274 in k7271 in k6978 in k6975 in k6971 in k6680 in k6677 in k6674 in k6671 */
static void C_ccall f_15845(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[12],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_15845,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_15848,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],a[7]=((C_word*)t0)[8],tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)((C_word*)t0)[2])[1])){
t3=(C_word)C_a_i_bitwise_ior(&a,2,((C_word*)((C_word*)t0)[4])[1],C_fix(1));
t4=C_mutate(((C_word *)((C_word*)t0)[4])+1,t3);
t5=t2;
f_15848(t5,t4);}
else{
t3=t2;
f_15848(t3,C_SCHEME_UNDEFINED);}}

/* k15846 in k15843 in k15840 in k15837 in k15834 in k15831 in initialize-pattern in k11783 in k10718 in k10715 in k7274 in k7271 in k6978 in k6975 in k6971 in k6680 in k6677 in k6674 in k6671 */
static void C_fcall f_15848(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word ab[16],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_15848,NULL,2,t0,t1);}
t2=((C_word*)t0)[7];
t3=(C_word)C_i_check_structure(t2,lf[306]);
t4=(C_word)C_i_block_ref(t2,C_fix(10));
t5=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_15854,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],a[7]=((C_word*)t0)[7],tmp=(C_word)a,a+=8,tmp);
t6=(C_word)C_eqp(t4,lf[322]);
if(C_truep(t6)){
t7=(C_word)C_a_i_bitwise_ior(&a,2,((C_word*)((C_word*)t0)[3])[1],C_fix(8));
t8=C_mutate(((C_word *)((C_word*)t0)[3])+1,t7);
t9=t5;
f_15854(2,t9,t8);}
else{
t7=(C_word)C_eqp(t4,lf[329]);
if(C_truep(t7)){
t8=(C_word)C_a_i_bitwise_ior(&a,2,((C_word*)((C_word*)t0)[3])[1],C_fix(16));
t9=C_mutate(((C_word *)((C_word*)t0)[3])+1,t8);
t10=t5;
f_15854(2,t10,t9);}
else{
C_trace("ChickenBridge.scm: 379  error");
t8=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t8))(4,t8,t5,lf[330],t4);}}}

/* k15852 in k15846 in k15843 in k15840 in k15837 in k15834 in k15831 in initialize-pattern in k11783 in k10718 in k10715 in k7274 in k7271 in k6978 in k6975 in k6971 in k6680 in k6677 in k6674 in k6671 */
static void C_ccall f_15854(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word ab[16],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_15854,2,t0,t1);}
t2=((C_word*)t0)[7];
t3=(C_word)C_i_check_structure(t2,lf[306]);
t4=(C_word)C_i_block_ref(t2,C_fix(11));
t5=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_15860,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[7],a[5]=((C_word*)t0)[4],a[6]=((C_word*)t0)[5],a[7]=((C_word*)t0)[6],tmp=(C_word)a,a+=8,tmp);
t6=(C_word)C_eqp(t4,lf[323]);
if(C_truep(t6)){
t7=(C_word)C_a_i_bitwise_ior(&a,2,((C_word*)((C_word*)t0)[3])[1],C_fix(32));
t8=C_mutate(((C_word *)((C_word*)t0)[3])+1,t7);
t9=t5;
f_15860(2,t9,t8);}
else{
t7=(C_word)C_eqp(t4,lf[327]);
if(C_truep(t7)){
t8=(C_word)C_a_i_bitwise_ior(&a,2,((C_word*)((C_word*)t0)[3])[1],C_fix(64));
t9=C_mutate(((C_word *)((C_word*)t0)[3])+1,t8);
t10=t5;
f_15860(2,t10,t9);}
else{
C_trace("ChickenBridge.scm: 379  error");
t8=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t8))(4,t8,t5,lf[328],t4);}}}

/* k15858 in k15852 in k15846 in k15843 in k15840 in k15837 in k15834 in k15831 in initialize-pattern in k11783 in k10718 in k10715 in k7274 in k7271 in k6978 in k6975 in k6971 in k6680 in k6677 in k6674 in k6671 */
static void C_ccall f_15860(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[12],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_15860,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_15863,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],a[7]=((C_word*)t0)[7],tmp=(C_word)a,a+=8,tmp);
t3=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_15923,a[2]=t2,a[3]=((C_word*)t0)[3],tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 379  bitwise-test");
f_8151(t3,((C_word*)((C_word*)t0)[3])[1],C_fix(16));}

/* k15921 in k15858 in k15852 in k15846 in k15843 in k15840 in k15837 in k15834 in k15831 in initialize-pattern in k11783 in k10718 in k10715 in k7274 in k7271 in k6978 in k6975 in k6971 in k6680 in k6677 in k6674 in k6671 */
static void C_ccall f_15923(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[8],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_15923,2,t0,t1);}
if(C_truep(t1)){
t2=(C_word)C_a_i_bitwise_and(&a,2,((C_word*)((C_word*)t0)[3])[1],lf[325]);
t3=C_mutate(((C_word *)((C_word*)t0)[3])+1,t2);
t4=((C_word*)t0)[2];
f_15863(t4,t3);}
else{
t2=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_15937,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 379  bitwise-test");
f_8151(t2,((C_word*)((C_word*)t0)[3])[1],C_fix(1));}}

/* k15935 in k15921 in k15858 in k15852 in k15846 in k15843 in k15840 in k15837 in k15834 in k15831 in initialize-pattern in k11783 in k10718 in k10715 in k7274 in k7271 in k6978 in k6975 in k6971 in k6680 in k6677 in k6674 in k6671 */
static void C_ccall f_15937(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word ab[12],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_15937,2,t0,t1);}
if(C_truep(t1)){
t2=(C_word)C_a_i_bitwise_and(&a,2,((C_word*)((C_word*)t0)[3])[1],lf[326]);
t3=(C_word)C_a_i_bitwise_ior(&a,2,t2,C_fix(16));
t4=C_mutate(((C_word *)((C_word*)t0)[3])+1,t3);
t5=((C_word*)t0)[2];
f_15863(t5,t4);}
else{
t2=(C_word)C_a_i_bitwise_ior(&a,2,((C_word*)((C_word*)t0)[3])[1],C_fix(8));
t3=C_mutate(((C_word *)((C_word*)t0)[3])+1,t2);
t4=((C_word*)t0)[2];
f_15863(t4,t3);}}

/* k15861 in k15858 in k15852 in k15846 in k15843 in k15840 in k15837 in k15834 in k15831 in initialize-pattern in k11783 in k10718 in k10715 in k7274 in k7271 in k6978 in k6975 in k6971 in k6680 in k6677 in k6674 in k6671 */
static void C_fcall f_15863(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_15863,NULL,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_15866,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_numberp(((C_word*)t0)[2]);
t4=(C_truep(t3)?(C_word)C_i_greaterp(((C_word*)t0)[2],C_fix(0)):C_SCHEME_FALSE);
t5=(C_truep(t4)?((C_word*)t0)[2]:C_retrieve(lf[124]));
t6=((C_word*)t0)[4];
t7=(C_word)C_i_check_structure(t6,lf[306]);
C_trace("ChickenBridge.scm: 379  ##sys#block-set!");
t8=*((C_word*)lf[225]+1);
((C_proc5)(void*)(*((C_word*)t8+1)))(5,t8,t2,t6,C_fix(8),t5);}

/* k15864 in k15861 in k15858 in k15852 in k15846 in k15843 in k15840 in k15837 in k15834 in k15831 in initialize-pattern in k11783 in k10718 in k10715 in k7274 in k7271 in k6978 in k6975 in k6971 in k6680 in k6677 in k6674 in k6671 */
static void C_ccall f_15866(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word ab[11],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_15866,2,t0,t1);}
t2=((C_word*)t0)[6];
t3=(C_truep(t2)?t2:((C_word*)t0)[5]);
t4=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_15872,a[2]=((C_word*)t0)[5],a[3]=t3,a[4]=((C_word*)t0)[2],a[5]=((C_word*)t0)[3],a[6]=((C_word*)t0)[4],tmp=(C_word)a,a+=7,tmp);
t5=((C_word*)t0)[6];
if(C_truep(t5)){
t6=t4;
f_15872(t6,C_SCHEME_UNDEFINED);}
else{
t6=(C_word)C_a_i_bitwise_ior(&a,2,((C_word*)((C_word*)t0)[2])[1],C_fix(2));
t7=C_mutate(((C_word *)((C_word*)t0)[2])+1,t6);
t8=t4;
f_15872(t8,t7);}}

/* k15870 in k15864 in k15861 in k15858 in k15852 in k15846 in k15843 in k15840 in k15837 in k15834 in k15831 in initialize-pattern in k11783 in k10718 in k10715 in k7274 in k7271 in k6978 in k6975 in k6971 in k6680 in k6677 in k6674 in k6671 */
static void C_fcall f_15872(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_15872,NULL,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_15875,a[2]=((C_word*)t0)[4],a[3]=((C_word*)t0)[5],a[4]=((C_word*)t0)[6],tmp=(C_word)a,a+=5,tmp);
t3=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_15885,a[2]=t2,a[3]=((C_word*)t0)[5],tmp=(C_word)a,a+=4,tmp);
t4=(C_word)C_i_numberp(((C_word*)t0)[3]);
t5=(C_truep(t4)?t4:(C_word)C_eqp(((C_word*)t0)[3],C_SCHEME_TRUE));
if(C_truep(t5)){
C_trace("ChickenBridge.scm: 379  make-period");
f_15359(t3,C_fix(0),((C_word*)t0)[3],C_SCHEME_FALSE,((C_word*)t0)[2],C_fix(0),C_fix(0));}
else{
C_trace("ChickenBridge.scm: 379  make-period");
f_15359(t3,C_fix(0),C_SCHEME_FALSE,((C_word*)t0)[3],((C_word*)t0)[2],C_fix(0),C_fix(0));}}

/* k15883 in k15870 in k15864 in k15861 in k15858 in k15852 in k15846 in k15843 in k15840 in k15837 in k15834 in k15831 in initialize-pattern in k11783 in k10718 in k10715 in k7274 in k7271 in k6978 in k6975 in k6971 in k6680 in k6677 in k6674 in k6671 */
static void C_ccall f_15885(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word *a;
t2=((C_word*)t0)[3];
t3=(C_word)C_i_check_structure(t2,lf[306]);
C_trace("ChickenBridge.scm: 379  ##sys#block-set!");
t4=*((C_word*)lf[225]+1);
((C_proc5)(void*)(*((C_word*)t4+1)))(5,t4,((C_word*)t0)[2],t2,C_fix(5),t1);}

/* k15873 in k15870 in k15864 in k15861 in k15858 in k15852 in k15846 in k15843 in k15840 in k15837 in k15834 in k15831 in initialize-pattern in k11783 in k10718 in k10715 in k7274 in k7271 in k6978 in k6975 in k6971 in k6680 in k6677 in k6674 in k6671 */
static void C_ccall f_15875(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[3],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_15875,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_15878,a[2]=((C_word*)t0)[4],tmp=(C_word)a,a+=3,tmp);
t3=((C_word*)t0)[3];
t4=((C_word*)((C_word*)t0)[2])[1];
t5=(C_word)C_i_check_structure(t3,lf[306]);
C_trace("ChickenBridge.scm: 379  ##sys#block-set!");
t6=*((C_word*)lf[225]+1);
((C_proc5)(void*)(*((C_word*)t6+1)))(5,t6,t2,t3,C_fix(1),t4);}

/* k15876 in k15873 in k15870 in k15864 in k15861 in k15858 in k15852 in k15846 in k15843 in k15840 in k15837 in k15834 in k15831 in initialize-pattern in k11783 in k10718 in k10715 in k7274 in k7271 in k6978 in k6975 in k6971 in k6680 in k6677 in k6674 in k6671 */
static void C_ccall f_15878(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 379  values");
C_values(2,0,((C_word*)t0)[2]);}

/* %alloc-pattern in k11783 in k10718 in k10715 in k7274 in k7271 in k6978 in k6975 in k6971 in k6680 in k6677 in k6674 in k6671 */
static void C_fcall f_15819(C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word ab[16],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_15819,NULL,1,t1);}
t2=lf[321];
t3=lf[321];
t4=lf[321];
t5=C_retrieve(lf[124]);
t6=lf[322];
t7=lf[323];
t8=t1;
((C_proc2)(void*)(*((C_word*)t8+1)))(2,t8,(C_word)C_a_i_record(&a,15,lf[306],C_fix(0),C_SCHEME_END_OF_LIST,C_SCHEME_FALSE,t2,C_SCHEME_FALSE,t3,t4,t5,C_SCHEME_FALSE,t6,t7,C_SCHEME_FALSE,C_SCHEME_FALSE,C_SCHEME_FALSE));}

/* pattern-cache in k11783 in k10718 in k10715 in k7274 in k7271 in k6978 in k6975 in k6971 in k6680 in k6677 in k6674 in k6671 */
static void C_fcall f_15764(C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word *a;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_15764,NULL,2,t1,t2);}
t3=(C_word)C_i_check_structure(t2,lf[306]);
t4=t1;
((C_proc2)(void*)(*((C_word*)t4+1)))(2,t4,(C_word)C_i_block_ref(t2,C_fix(14)));}

/* pattern-cache-set! in k11783 in k10718 in k10715 in k7274 in k7271 in k6978 in k6975 in k6971 in k6680 in k6677 in k6674 in k6671 */
static void C_fcall f_15755(C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word *a;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_15755,NULL,3,t1,t2,t3);}
t4=(C_word)C_i_check_structure(t2,lf[306]);
C_trace("ChickenBridge.scm: 379  ##sys#block-set!");
t5=*((C_word*)lf[225]+1);
((C_proc5)(void*)(*((C_word*)t5+1)))(5,t5,t1,t2,C_fix(14),t3);}

/* pattern-state in k11783 in k10718 in k10715 in k7274 in k7271 in k6978 in k6975 in k6971 in k6680 in k6677 in k6674 in k6671 */
static void C_fcall f_15638(C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word *a;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_15638,NULL,2,t1,t2);}
t3=(C_word)C_i_check_structure(t2,lf[306]);
t4=t1;
((C_proc2)(void*)(*((C_word*)t4+1)))(2,t4,(C_word)C_i_block_ref(t2,C_fix(7)));}

/* pattern-state-set! in k11783 in k10718 in k10715 in k7274 in k7271 in k6978 in k6975 in k6971 in k6680 in k6677 in k6674 in k6671 */
static void C_fcall f_15629(C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word *a;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_15629,NULL,3,t1,t2,t3);}
t4=(C_word)C_i_check_structure(t2,lf[306]);
C_trace("ChickenBridge.scm: 379  ##sys#block-set!");
t5=*((C_word*)lf[225]+1);
((C_proc5)(void*)(*((C_word*)t5+1)))(5,t5,t1,t2,C_fix(7),t3);}

/* f_15620 in k11783 in k10718 in k10715 in k7274 in k7271 in k6978 in k6975 in k6971 in k6680 in k6677 in k6674 in k6671 */
static void C_ccall f_15620(C_word c,C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word *a;
if(c!=3) C_bad_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr3,(void*)f_15620,3,t0,t1,t2);}
t3=(C_word)C_i_check_structure(t2,lf[306]);
t4=t1;
((C_proc2)(void*)(*((C_word*)t4+1)))(2,t4,(C_word)C_i_block_ref(t2,C_fix(6)));}

/* pattern-value-set! in k11783 in k10718 in k10715 in k7274 in k7271 in k6978 in k6975 in k6971 in k6680 in k6677 in k6674 in k6671 */
static void C_fcall f_15611(C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word *a;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_15611,NULL,3,t1,t2,t3);}
t4=(C_word)C_i_check_structure(t2,lf[306]);
C_trace("ChickenBridge.scm: 379  ##sys#block-set!");
t5=*((C_word*)lf[225]+1);
((C_proc5)(void*)(*((C_word*)t5+1)))(5,t5,t1,t2,C_fix(6),t3);}

/* pattern-period in k11783 in k10718 in k10715 in k7274 in k7271 in k6978 in k6975 in k6971 in k6680 in k6677 in k6674 in k6671 */
static void C_fcall f_15602(C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word *a;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_15602,NULL,2,t1,t2);}
t3=(C_word)C_i_check_structure(t2,lf[306]);
t4=t1;
((C_proc2)(void*)(*((C_word*)t4+1)))(2,t4,(C_word)C_i_block_ref(t2,C_fix(5)));}

/* pattern-datum in k11783 in k10718 in k10715 in k7274 in k7271 in k6978 in k6975 in k6971 in k6680 in k6677 in k6674 in k6671 */
static void C_fcall f_15584(C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word *a;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_15584,NULL,2,t1,t2);}
t3=(C_word)C_i_check_structure(t2,lf[306]);
t4=t1;
((C_proc2)(void*)(*((C_word*)t4+1)))(2,t4,(C_word)C_i_block_ref(t2,C_fix(4)));}

/* pattern-datum-set! in k11783 in k10718 in k10715 in k7274 in k7271 in k6978 in k6975 in k6971 in k6680 in k6677 in k6674 in k6671 */
static void C_fcall f_15575(C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word *a;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_15575,NULL,3,t1,t2,t3);}
t4=(C_word)C_i_check_structure(t2,lf[306]);
C_trace("ChickenBridge.scm: 379  ##sys#block-set!");
t5=*((C_word*)lf[225]+1);
((C_proc5)(void*)(*((C_word*)t5+1)))(5,t5,t1,t2,C_fix(4),t3);}

/* pattern-length in k11783 in k10718 in k10715 in k7274 in k7271 in k6978 in k6975 in k6971 in k6680 in k6677 in k6674 in k6671 */
static void C_fcall f_15566(C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word *a;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_15566,NULL,2,t1,t2);}
t3=(C_word)C_i_check_structure(t2,lf[306]);
t4=t1;
((C_proc2)(void*)(*((C_word*)t4+1)))(2,t4,(C_word)C_i_block_ref(t2,C_fix(3)));}

/* pattern-data in k11783 in k10718 in k10715 in k7274 in k7271 in k6978 in k6975 in k6971 in k6680 in k6677 in k6674 in k6671 */
static void C_fcall f_15548(C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word *a;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_15548,NULL,2,t1,t2);}
t3=(C_word)C_i_check_structure(t2,lf[306]);
t4=t1;
((C_proc2)(void*)(*((C_word*)t4+1)))(2,t4,(C_word)C_i_block_ref(t2,C_fix(2)));}

/* pattern-data-set! in k11783 in k10718 in k10715 in k7274 in k7271 in k6978 in k6975 in k6971 in k6680 in k6677 in k6674 in k6671 */
static void C_fcall f_15539(C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word *a;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_15539,NULL,3,t1,t2,t3);}
t4=(C_word)C_i_check_structure(t2,lf[306]);
C_trace("ChickenBridge.scm: 379  ##sys#block-set!");
t5=*((C_word*)lf[225]+1);
((C_proc5)(void*)(*((C_word*)t5+1)))(5,t5,t1,t2,C_fix(2),t3);}

/* pattern-flags in k11783 in k10718 in k10715 in k7274 in k7271 in k6978 in k6975 in k6971 in k6680 in k6677 in k6674 in k6671 */
static void C_fcall f_15530(C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word *a;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_15530,NULL,2,t1,t2);}
t3=(C_word)C_i_check_structure(t2,lf[306]);
t4=t1;
((C_proc2)(void*)(*((C_word*)t4+1)))(2,t4,(C_word)C_i_block_ref(t2,C_fix(1)));}

/* pattern? in k11783 in k10718 in k10715 in k7274 in k7271 in k6978 in k6975 in k6971 in k6680 in k6677 in k6674 in k6671 */
static void C_fcall f_15515(C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word *a;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_15515,NULL,2,t1,t2);}
t3=t1;
((C_proc2)(void*)(*((C_word*)t3+1)))(2,t3,(C_word)C_i_structurep(t2,lf[306]));}

/* period-reps in k11783 in k10718 in k10715 in k7274 in k7271 in k6978 in k6975 in k6971 in k6680 in k6677 in k6674 in k6671 */
static void C_fcall f_15470(C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word *a;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_15470,NULL,2,t1,t2);}
t3=(C_word)C_i_check_structure(t2,lf[297]);
t4=t1;
((C_proc2)(void*)(*((C_word*)t4+1)))(2,t4,(C_word)C_i_block_ref(t2,C_fix(6)));}

/* period-omit in k11783 in k10718 in k10715 in k7274 in k7271 in k6978 in k6975 in k6971 in k6680 in k6677 in k6674 in k6671 */
static void C_fcall f_15452(C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word *a;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_15452,NULL,2,t1,t2);}
t3=(C_word)C_i_check_structure(t2,lf[297]);
t4=t1;
((C_proc2)(void*)(*((C_word*)t4+1)))(2,t4,(C_word)C_i_block_ref(t2,C_fix(5)));}

/* period-omit-set! in k11783 in k10718 in k10715 in k7274 in k7271 in k6978 in k6975 in k6971 in k6680 in k6677 in k6674 in k6671 */
static void C_fcall f_15443(C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word *a;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_15443,NULL,3,t1,t2,t3);}
t4=(C_word)C_i_check_structure(t2,lf[297]);
C_trace("ChickenBridge.scm: 379  ##sys#block-set!");
t5=*((C_word*)lf[225]+1);
((C_proc5)(void*)(*((C_word*)t5+1)))(5,t5,t1,t2,C_fix(5),t3);}

/* period-stream in k11783 in k10718 in k10715 in k7274 in k7271 in k6978 in k6975 in k6971 in k6680 in k6677 in k6674 in k6671 */
static void C_fcall f_15416(C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word *a;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_15416,NULL,2,t1,t2);}
t3=(C_word)C_i_check_structure(t2,lf[297]);
t4=t1;
((C_proc2)(void*)(*((C_word*)t4+1)))(2,t4,(C_word)C_i_block_ref(t2,C_fix(3)));}

/* period-length in k11783 in k10718 in k10715 in k7274 in k7271 in k6978 in k6975 in k6971 in k6680 in k6677 in k6674 in k6671 */
static void C_fcall f_15398(C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word *a;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_15398,NULL,2,t1,t2);}
t3=(C_word)C_i_check_structure(t2,lf[297]);
t4=t1;
((C_proc2)(void*)(*((C_word*)t4+1)))(2,t4,(C_word)C_i_block_ref(t2,C_fix(2)));}

/* period-count in k11783 in k10718 in k10715 in k7274 in k7271 in k6978 in k6975 in k6971 in k6680 in k6677 in k6674 in k6671 */
static void C_fcall f_15380(C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word *a;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_15380,NULL,2,t1,t2);}
t3=(C_word)C_i_check_structure(t2,lf[297]);
t4=t1;
((C_proc2)(void*)(*((C_word*)t4+1)))(2,t4,(C_word)C_i_block_ref(t2,C_fix(1)));}

/* period-count-set! in k11783 in k10718 in k10715 in k7274 in k7271 in k6978 in k6975 in k6971 in k6680 in k6677 in k6674 in k6671 */
static void C_fcall f_15371(C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word *a;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_15371,NULL,3,t1,t2,t3);}
t4=(C_word)C_i_check_structure(t2,lf[297]);
C_trace("ChickenBridge.scm: 379  ##sys#block-set!");
t5=*((C_word*)lf[225]+1);
((C_proc5)(void*)(*((C_word*)t5+1)))(5,t5,t1,t2,C_fix(1),t3);}

/* make-period in k11783 in k10718 in k10715 in k7274 in k7271 in k6978 in k6975 in k6971 in k6680 in k6677 in k6674 in k6671 */
static void C_fcall f_15359(C_word t1,C_word t2,C_word t3,C_word t4,C_word t5,C_word t6,C_word t7){
C_word tmp;
C_word t8;
C_word ab[8],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_15359,NULL,7,t1,t2,t3,t4,t5,t6,t7);}
t8=t1;
((C_proc2)(void*)(*((C_word*)t8+1)))(2,t8,(C_word)C_a_i_record(&a,7,lf[297],t2,t3,t4,t5,t6,t7));}

/* export-spear-frames in k11783 in k10718 in k10715 in k7274 in k7271 in k6978 in k6975 in k6971 in k6680 in k6677 in k6674 in k6671 */
static void C_ccall f_15163(C_word c,C_word t0,C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word ab[10],*a=ab;
if(c!=4) C_bad_argc_2(c,4,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr4,(void*)f_15163,4,t0,t1,t2,t3);}
t4=(*a=C_VECTOR_TYPE|1,a[1]=t2,tmp=(C_word)a,a+=2,tmp);
t5=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_15167,a[2]=t3,a[3]=t1,a[4]=t4,tmp=(C_word)a,a+=5,tmp);
if(C_truep((C_word)C_i_pairp(((C_word*)t4)[1]))){
t6=t5;
f_15167(t6,C_SCHEME_UNDEFINED);}
else{
t6=(C_word)C_a_i_list(&a,1,((C_word*)t4)[1]);
t7=C_set_block_item(t4,0,t6);
t8=t5;
f_15167(t8,t7);}}

/* k15165 in export-spear-frames in k11783 in k10718 in k10715 in k7274 in k7271 in k6978 in k6975 in k6971 in k6680 in k6677 in k6674 in k6671 */
static void C_fcall f_15167(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word ab[16],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_15167,NULL,2,t0,t1);}
t2=C_fix(0);
t3=(*a=C_VECTOR_TYPE|1,a[1]=t2,tmp=(C_word)a,a+=2,tmp);
t4=(C_word)C_i_length(((C_word*)((C_word*)t0)[4])[1]);
t5=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_15173,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=t3,a[5]=t4,a[6]=((C_word*)t0)[4],tmp=(C_word)a,a+=7,tmp);
t6=C_SCHEME_UNDEFINED;
t7=(*a=C_VECTOR_TYPE|1,a[1]=t6,tmp=(C_word)a,a+=2,tmp);
t8=C_set_block_item(t7,0,(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_15316,a[2]=t7,a[3]=t3,a[4]=((C_word)li213),tmp=(C_word)a,a+=5,tmp));
t9=((C_word*)t7)[1];
f_15316(t9,t5,((C_word*)((C_word*)t0)[4])[1]);}

/* do1566 in k15165 in export-spear-frames in k11783 in k10718 in k10715 in k7274 in k7271 in k6978 in k6975 in k6971 in k6680 in k6677 in k6674 in k6671 */
static void C_fcall f_15316(C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[10],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_15316,NULL,3,t0,t1,t2);}
if(C_truep((C_word)C_i_nullp(t2))){
t3=t1;
((C_proc2)(void*)(*((C_word*)t3+1)))(2,t3,C_SCHEME_FALSE);}
else{
t3=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_15327,a[2]=t1,a[3]=((C_word*)t0)[2],a[4]=t2,a[5]=((C_word*)t0)[3],tmp=(C_word)a,a+=6,tmp);
t4=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_15342,a[2]=((C_word*)t0)[3],a[3]=t3,tmp=(C_word)a,a+=4,tmp);
t5=(C_word)C_i_car(t2);
C_trace("ChickenBridge.scm: 378  spectrum-freqs");
t6=C_retrieve(lf[228]);
((C_proc3)C_retrieve_proc(t6))(3,t6,t4,t5);}}

/* k15340 in do1566 in k15165 in export-spear-frames in k11783 in k10718 in k10715 in k7274 in k7271 in k6978 in k6975 in k6971 in k6680 in k6677 in k6674 in k6671 */
static void C_ccall f_15342(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word *a;
t2=(C_word)C_i_length(t1);
C_trace("ChickenBridge.scm: 378  max");
t3=*((C_word*)lf[295]+1);
((C_proc4)C_retrieve_proc(t3))(4,t3,((C_word*)t0)[3],((C_word*)((C_word*)t0)[2])[1],t2);}

/* k15325 in do1566 in k15165 in export-spear-frames in k11783 in k10718 in k10715 in k7274 in k7271 in k6978 in k6975 in k6971 in k6680 in k6677 in k6674 in k6671 */
static void C_ccall f_15327(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[5])+1,t1);
t3=(C_word)C_i_cdr(((C_word*)t0)[4]);
t4=((C_word*)((C_word*)t0)[3])[1];
f_15316(t4,((C_word*)t0)[2],t3);}

/* k15171 in k15165 in export-spear-frames in k11783 in k10718 in k10715 in k7274 in k7271 in k6978 in k6975 in k6971 in k6680 in k6677 in k6674 in k6671 */
static void C_ccall f_15173(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[6],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_15173,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_15178,a[2]=((C_word*)t0)[4],a[3]=((C_word*)t0)[5],a[4]=((C_word*)t0)[6],a[5]=((C_word)li212),tmp=(C_word)a,a+=6,tmp);
C_trace("ChickenBridge.scm: 378  with-output-to-file");
t3=C_retrieve(lf[294]);
((C_proc4)C_retrieve_proc(t3))(4,t3,((C_word*)t0)[3],((C_word*)t0)[2],t2);}

/* a15177 in k15171 in k15165 in export-spear-frames in k11783 in k10718 in k10715 in k7274 in k7271 in k6978 in k6975 in k6971 in k6680 in k6677 in k6674 in k6671 */
static void C_ccall f_15178(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[6],*a=ab;
if(c!=2) C_bad_argc_2(c,2,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_15178,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_15182,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=t1,tmp=(C_word)a,a+=6,tmp);
C_trace("ChickenBridge.scm: 378  current-output-port");
t3=*((C_word*)lf[293]+1);
((C_proc2)C_retrieve_proc(t3))(2,t3,t2);}

/* k15180 in a15177 in k15171 in k15165 in export-spear-frames in k11783 in k10718 in k10715 in k7274 in k7271 in k6978 in k6975 in k6971 in k6680 in k6677 in k6674 in k6671 */
static void C_ccall f_15182(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_15182,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_15185,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=t1,tmp=(C_word)a,a+=7,tmp);
C_trace("ChickenBridge.scm: 378  format");
t3=C_retrieve(lf[283]);
((C_proc4)C_retrieve_proc(t3))(4,t3,t2,t1,lf[292]);}

/* k15183 in k15180 in a15177 in k15171 in k15165 in export-spear-frames in k11783 in k10718 in k10715 in k7274 in k7271 in k6978 in k6975 in k6971 in k6680 in k6677 in k6674 in k6671 */
static void C_ccall f_15185(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_15185,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_15188,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],tmp=(C_word)a,a+=7,tmp);
C_trace("ChickenBridge.scm: 378  format");
t3=C_retrieve(lf[283]);
((C_proc4)C_retrieve_proc(t3))(4,t3,t2,((C_word*)t0)[6],lf[291]);}

/* k15186 in k15183 in k15180 in a15177 in k15171 in k15165 in export-spear-frames in k11783 in k10718 in k10715 in k7274 in k7271 in k6978 in k6975 in k6971 in k6680 in k6677 in k6674 in k6671 */
static void C_ccall f_15188(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[6],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_15188,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_15191,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],tmp=(C_word)a,a+=6,tmp);
C_trace("ChickenBridge.scm: 378  format");
t3=C_retrieve(lf[283]);
((C_proc5)C_retrieve_proc(t3))(5,t3,t2,((C_word*)t0)[6],lf[290],((C_word*)((C_word*)t0)[2])[1]);}

/* k15189 in k15186 in k15183 in k15180 in a15177 in k15171 in k15165 in export-spear-frames in k11783 in k10718 in k10715 in k7274 in k7271 in k6978 in k6975 in k6971 in k6680 in k6677 in k6674 in k6671 */
static void C_ccall f_15191(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[5],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_15191,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_15194,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],tmp=(C_word)a,a+=5,tmp);
C_trace("ChickenBridge.scm: 378  format");
t3=C_retrieve(lf[283]);
((C_proc5)C_retrieve_proc(t3))(5,t3,t2,((C_word*)t0)[5],lf[289],((C_word*)t0)[2]);}

/* k15192 in k15189 in k15186 in k15183 in k15180 in a15177 in k15171 in k15165 in export-spear-frames in k11783 in k10718 in k10715 in k7274 in k7271 in k6978 in k6975 in k6971 in k6680 in k6677 in k6674 in k6671 */
static void C_ccall f_15194(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[5],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_15194,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_15197,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],tmp=(C_word)a,a+=5,tmp);
C_trace("ChickenBridge.scm: 378  format");
t3=C_retrieve(lf[283]);
((C_proc4)C_retrieve_proc(t3))(4,t3,t2,((C_word*)t0)[4],lf[288]);}

/* k15195 in k15192 in k15189 in k15186 in k15183 in k15180 in a15177 in k15171 in k15165 in export-spear-frames in k11783 in k10718 in k10715 in k7274 in k7271 in k6978 in k6975 in k6971 in k6680 in k6677 in k6674 in k6671 */
static void C_ccall f_15197(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_15197,2,t0,t1);}
t2=C_SCHEME_UNDEFINED;
t3=(*a=C_VECTOR_TYPE|1,a[1]=t2,tmp=(C_word)a,a+=2,tmp);
t4=C_set_block_item(t3,0,(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_15202,a[2]=((C_word*)t0)[4],a[3]=t3,a[4]=((C_word)li211),tmp=(C_word)a,a+=5,tmp));
t5=((C_word*)t3)[1];
f_15202(t5,((C_word*)t0)[3],((C_word*)((C_word*)t0)[2])[1],C_fix(0));}

/* do1572 in k15195 in k15192 in k15189 in k15186 in k15183 in k15180 in a15177 in k15171 in k15165 in export-spear-frames in k11783 in k10718 in k10715 in k7274 in k7271 in k6978 in k6975 in k6971 in k6680 in k6677 in k6674 in k6671 */
static void C_fcall f_15202(C_word t0,C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word ab[13],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_15202,NULL,4,t0,t1,t2,t3);}
if(C_truep((C_word)C_i_nullp(t2))){
t4=t1;
((C_proc2)(void*)(*((C_word*)t4+1)))(2,t4,C_SCHEME_FALSE);}
else{
t4=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_15212,a[2]=((C_word*)t0)[2],a[3]=t1,a[4]=((C_word*)t0)[3],a[5]=t3,a[6]=t2,tmp=(C_word)a,a+=7,tmp);
t5=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_15296,a[2]=t2,a[3]=((C_word*)t0)[2],a[4]=t4,a[5]=t3,tmp=(C_word)a,a+=6,tmp);
t6=(C_word)C_i_car(t2);
C_trace("ChickenBridge.scm: 378  spectrum-time");
t7=C_retrieve(lf[223]);
((C_proc3)C_retrieve_proc(t7))(3,t7,t5,t6);}}

/* k15294 in do1572 in k15195 in k15192 in k15189 in k15186 in k15183 in k15180 in a15177 in k15171 in k15165 in export-spear-frames in k11783 in k10718 in k10715 in k7274 in k7271 in k6978 in k6975 in k6971 in k6680 in k6677 in k6674 in k6671 */
static void C_ccall f_15296(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_15296,2,t0,t1);}
t2=(C_truep(t1)?t1:(C_word)C_a_i_times(&a,2,((C_word*)t0)[5],lf[286]));
t3=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_15303,a[2]=t2,a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],tmp=(C_word)a,a+=5,tmp);
t4=(C_word)C_i_car(((C_word*)t0)[2]);
C_trace("ChickenBridge.scm: 378  spectrum-size");
t5=C_retrieve(lf[226]);
((C_proc3)C_retrieve_proc(t5))(3,t5,t3,t4);}

/* k15301 in k15294 in do1572 in k15195 in k15192 in k15189 in k15186 in k15183 in k15180 in a15177 in k15171 in k15165 in export-spear-frames in k11783 in k10718 in k10715 in k7274 in k7271 in k6978 in k6975 in k6971 in k6680 in k6677 in k6674 in k6671 */
static void C_ccall f_15303(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 378  format");
t2=C_retrieve(lf[283]);
((C_proc6)C_retrieve_proc(t2))(6,t2,((C_word*)t0)[4],((C_word*)t0)[3],lf[287],((C_word*)t0)[2],t1);}

/* k15210 in do1572 in k15195 in k15192 in k15189 in k15186 in k15183 in k15180 in a15177 in k15171 in k15165 in export-spear-frames in k11783 in k10718 in k10715 in k7274 in k7271 in k6978 in k6975 in k6971 in k6680 in k6677 in k6674 in k6671 */
static void C_ccall f_15212(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[12],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_15212,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_15215,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],tmp=(C_word)a,a+=7,tmp);
t3=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_15233,a[2]=((C_word*)t0)[6],a[3]=t2,a[4]=((C_word*)t0)[2],tmp=(C_word)a,a+=5,tmp);
t4=(C_word)C_i_car(((C_word*)t0)[6]);
C_trace("ChickenBridge.scm: 378  spectrum-freqs");
t5=C_retrieve(lf[228]);
((C_proc3)C_retrieve_proc(t5))(3,t5,t3,t4);}

/* k15231 in k15210 in do1572 in k15195 in k15192 in k15189 in k15186 in k15183 in k15180 in a15177 in k15171 in k15165 in export-spear-frames in k11783 in k10718 in k10715 in k7274 in k7271 in k6978 in k6975 in k6971 in k6680 in k6677 in k6674 in k6671 */
static void C_ccall f_15233(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[6],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_15233,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_15237,a[2]=((C_word*)t0)[2],a[3]=t1,a[4]=((C_word*)t0)[3],a[5]=((C_word*)t0)[4],tmp=(C_word)a,a+=6,tmp);
t3=(C_word)C_i_car(((C_word*)t0)[2]);
C_trace("ChickenBridge.scm: 378  spectrum-amps");
t4=C_retrieve(lf[230]);
((C_proc3)C_retrieve_proc(t4))(3,t4,t2,t3);}

/* k15235 in k15231 in k15210 in do1572 in k15195 in k15192 in k15189 in k15186 in k15183 in k15180 in a15177 in k15171 in k15165 in export-spear-frames in k11783 in k10718 in k10715 in k7274 in k7271 in k6978 in k6975 in k6971 in k6680 in k6677 in k6674 in k6671 */
static void C_ccall f_15237(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[6],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_15237,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_15241,a[2]=t1,a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],tmp=(C_word)a,a+=6,tmp);
t3=(C_word)C_i_car(((C_word*)t0)[2]);
C_trace("ChickenBridge.scm: 378  spectrum-size");
t4=C_retrieve(lf[226]);
((C_proc3)C_retrieve_proc(t4))(3,t4,t2,t3);}

/* k15239 in k15235 in k15231 in k15210 in do1572 in k15195 in k15192 in k15189 in k15186 in k15183 in k15180 in a15177 in k15171 in k15165 in export-spear-frames in k11783 in k10718 in k10715 in k7274 in k7271 in k6978 in k6975 in k6971 in k6680 in k6677 in k6674 in k6671 */
static void C_ccall f_15241(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_15241,2,t0,t1);}
t2=C_SCHEME_UNDEFINED;
t3=(*a=C_VECTOR_TYPE|1,a[1]=t2,tmp=(C_word)a,a+=2,tmp);
t4=C_set_block_item(t3,0,(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_15243,a[2]=((C_word*)t0)[5],a[3]=t3,a[4]=((C_word)li210),tmp=(C_word)a,a+=5,tmp));
t5=((C_word*)t3)[1];
f_15243(t5,((C_word*)t0)[4],((C_word*)t0)[3],((C_word*)t0)[2],t1);}

/* do1578 in k15239 in k15235 in k15231 in k15210 in do1572 in k15195 in k15192 in k15189 in k15186 in k15183 in k15180 in a15177 in k15171 in k15165 in export-spear-frames in k11783 in k10718 in k10715 in k7274 in k7271 in k6978 in k6975 in k6971 in k6680 in k6677 in k6674 in k6671 */
static void C_fcall f_15243(C_word t0,C_word t1,C_word t2,C_word t3,C_word t4){
C_word tmp;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word ab[11],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_15243,NULL,5,t0,t1,t2,t3,t4);}
if(C_truep((C_word)C_i_less_or_equalp(t4,C_fix(0)))){
t5=t1;
((C_proc2)(void*)(*((C_word*)t5+1)))(2,t5,C_SCHEME_FALSE);}
else{
t5=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_15253,a[2]=t1,a[3]=((C_word*)t0)[3],a[4]=t4,a[5]=t3,a[6]=t2,tmp=(C_word)a,a+=7,tmp);
t6=(C_word)C_a_i_minus(&a,2,t4,C_fix(1));
t7=(C_word)C_i_car(t2);
t8=(C_word)C_i_car(t3);
C_trace("ChickenBridge.scm: 378  format");
t9=C_retrieve(lf[283]);
((C_proc7)C_retrieve_proc(t9))(7,t9,t5,((C_word*)t0)[2],lf[285],t6,t7,t8);}}

/* k15251 in do1578 in k15239 in k15235 in k15231 in k15210 in do1572 in k15195 in k15192 in k15189 in k15186 in k15183 in k15180 in a15177 in k15171 in k15165 in export-spear-frames in k11783 in k10718 in k10715 in k7274 in k7271 in k6978 in k6975 in k6971 in k6680 in k6677 in k6674 in k6671 */
static void C_ccall f_15253(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[4],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_15253,2,t0,t1);}
t2=(C_word)C_i_cdr(((C_word*)t0)[6]);
t3=(C_word)C_i_cdr(((C_word*)t0)[5]);
t4=(C_word)C_a_i_minus(&a,2,((C_word*)t0)[4],C_fix(1));
t5=((C_word*)((C_word*)t0)[3])[1];
f_15243(t5,((C_word*)t0)[2],t2,t3,t4);}

/* k15213 in k15210 in do1572 in k15195 in k15192 in k15189 in k15186 in k15183 in k15180 in a15177 in k15171 in k15165 in export-spear-frames in k11783 in k10718 in k10715 in k7274 in k7271 in k6978 in k6975 in k6971 in k6680 in k6677 in k6674 in k6671 */
static void C_ccall f_15215(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[6],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_15215,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_15218,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],tmp=(C_word)a,a+=6,tmp);
C_trace("ChickenBridge.scm: 378  format");
t3=C_retrieve(lf[283]);
((C_proc4)C_retrieve_proc(t3))(4,t3,t2,((C_word*)t0)[2],lf[284]);}

/* k15216 in k15213 in k15210 in do1572 in k15195 in k15192 in k15189 in k15186 in k15183 in k15180 in a15177 in k15171 in k15165 in export-spear-frames in k11783 in k10718 in k10715 in k7274 in k7271 in k6978 in k6975 in k6971 in k6680 in k6677 in k6674 in k6671 */
static void C_ccall f_15218(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[4],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_15218,2,t0,t1);}
t2=(C_word)C_i_cdr(((C_word*)t0)[5]);
t3=(C_word)C_a_i_plus(&a,2,((C_word*)t0)[4],C_fix(1));
t4=((C_word*)((C_word*)t0)[3])[1];
f_15202(t4,((C_word*)t0)[2],t2,t3);}

/* import-spear-frames in k11783 in k10718 in k10715 in k7274 in k7271 in k6978 in k6975 in k6971 in k6680 in k6677 in k6674 in k6671 */
static void C_ccall f_15037(C_word c,C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word ab[3],*a=ab;
if(c!=3) C_bad_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr3,(void*)f_15037,3,t0,t1,t2);}
t3=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_15043,a[2]=((C_word)li208),tmp=(C_word)a,a+=3,tmp);
C_trace("ChickenBridge.scm: 378  with-input-from-file");
t4=C_retrieve(lf[281]);
((C_proc4)C_retrieve_proc(t4))(4,t4,t1,t2,t3);}

/* a15042 in import-spear-frames in k11783 in k10718 in k10715 in k7274 in k7271 in k6978 in k6975 in k6971 in k6680 in k6677 in k6674 in k6671 */
static void C_ccall f_15043(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[3],*a=ab;
if(c!=2) C_bad_argc_2(c,2,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_15043,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_15047,a[2]=t1,tmp=(C_word)a,a+=3,tmp);
C_trace("ChickenBridge.scm: 378  current-input-port");
t3=*((C_word*)lf[280]+1);
((C_proc2)C_retrieve_proc(t3))(2,t3,t2);}

/* k15045 in a15042 in import-spear-frames in k11783 in k10718 in k10715 in k7274 in k7271 in k6978 in k6975 in k6971 in k6680 in k6677 in k6674 in k6671 */
static void C_ccall f_15047(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[11],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_15047,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_15048,a[2]=((C_word)li203),tmp=(C_word)a,a+=3,tmp);
t3=C_SCHEME_FALSE;
t4=(*a=C_VECTOR_TYPE|1,a[1]=t3,tmp=(C_word)a,a+=2,tmp);
t5=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_15065,a[2]=t2,a[3]=((C_word*)t0)[2],a[4]=t1,a[5]=t4,tmp=(C_word)a,a+=6,tmp);
C_trace("ChickenBridge.scm: 378  rhdr");
f_15048(t5,t1);}

/* k15063 in k15045 in a15042 in import-spear-frames in k11783 in k10718 in k10715 in k7274 in k7271 in k6978 in k6975 in k6971 in k6680 in k6677 in k6674 in k6671 */
static void C_ccall f_15065(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[6],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_15065,2,t0,t1);}
t2=C_mutate(((C_word *)((C_word*)t0)[5])+1,t1);
t3=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_15068,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],tmp=(C_word)a,a+=6,tmp);
if(C_truep((C_word)C_i_equalp(((C_word*)((C_word*)t0)[5])[1],lf[278]))){
t4=t3;
f_15068(2,t4,C_SCHEME_UNDEFINED);}
else{
C_trace("ChickenBridge.scm: 378  error");
t4=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t3,lf[279],((C_word*)t0)[4]);}}

/* k15066 in k15063 in k15045 in a15042 in import-spear-frames in k11783 in k10718 in k10715 in k7274 in k7271 in k6978 in k6975 in k6971 in k6680 in k6677 in k6674 in k6671 */
static void C_ccall f_15068(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[6],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_15068,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_15072,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],tmp=(C_word)a,a+=6,tmp);
C_trace("ChickenBridge.scm: 378  rhdr");
f_15048(t2,((C_word*)t0)[4]);}

/* k15070 in k15066 in k15063 in k15045 in a15042 in import-spear-frames in k11783 in k10718 in k10715 in k7274 in k7271 in k6978 in k6975 in k6971 in k6680 in k6677 in k6674 in k6671 */
static void C_ccall f_15072(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[6],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_15072,2,t0,t1);}
t2=C_mutate(((C_word *)((C_word*)t0)[5])+1,t1);
t3=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_15075,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[5],a[4]=((C_word*)t0)[3],a[5]=((C_word*)t0)[4],tmp=(C_word)a,a+=6,tmp);
if(C_truep((C_word)C_i_equalp(((C_word*)((C_word*)t0)[5])[1],lf[276]))){
t4=t3;
f_15075(2,t4,C_SCHEME_UNDEFINED);}
else{
C_trace("ChickenBridge.scm: 378  error");
t4=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t3,lf[277],((C_word*)t0)[4]);}}

/* k15073 in k15070 in k15066 in k15063 in k15045 in a15042 in import-spear-frames in k11783 in k10718 in k10715 in k7274 in k7271 in k6978 in k6975 in k6971 in k6680 in k6677 in k6674 in k6671 */
static void C_ccall f_15075(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[13],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_15075,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_15078,a[2]=((C_word*)t0)[4],a[3]=((C_word*)t0)[5],tmp=(C_word)a,a+=4,tmp);
t3=C_SCHEME_UNDEFINED;
t4=(*a=C_VECTOR_TYPE|1,a[1]=t3,tmp=(C_word)a,a+=2,tmp);
t5=C_set_block_item(t4,0,(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_15127,a[2]=((C_word*)t0)[5],a[3]=((C_word*)t0)[2],a[4]=t4,a[5]=((C_word*)t0)[3],a[6]=((C_word)li207),tmp=(C_word)a,a+=7,tmp));
t6=((C_word*)t4)[1];
f_15127(t6,t2);}

/* do1543 in k15073 in k15070 in k15066 in k15063 in k15045 in a15042 in import-spear-frames in k11783 in k10718 in k10715 in k7274 in k7271 in k6978 in k6975 in k6971 in k6680 in k6677 in k6674 in k6671 */
static void C_fcall f_15127(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[5],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_15127,NULL,2,t0,t1);}
if(C_truep((C_word)C_i_equalp(((C_word*)((C_word*)t0)[5])[1],lf[275]))){
t2=t1;
((C_proc2)(void*)(*((C_word*)t2+1)))(2,t2,C_SCHEME_FALSE);}
else{
t2=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_15138,a[2]=t1,a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],tmp=(C_word)a,a+=5,tmp);
C_trace("ChickenBridge.scm: 378  rhdr");
f_15048(t2,((C_word*)t0)[2]);}}

/* k15136 in do1543 in k15073 in k15070 in k15066 in k15063 in k15045 in a15042 in import-spear-frames in k11783 in k10718 in k10715 in k7274 in k7271 in k6978 in k6975 in k6971 in k6680 in k6677 in k6674 in k6671 */
static void C_ccall f_15138(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[4])+1,t1);
t3=((C_word*)((C_word*)t0)[3])[1];
f_15127(t3,((C_word*)t0)[2]);}

/* k15076 in k15073 in k15070 in k15066 in k15063 in k15045 in a15042 in import-spear-frames in k11783 in k10718 in k10715 in k7274 in k7271 in k6978 in k6975 in k6971 in k6680 in k6677 in k6674 in k6671 */
static void C_ccall f_15078(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[11],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_15078,2,t0,t1);}
t2=(C_word)C_a_i_list(&a,1,C_SCHEME_FALSE);
t3=t2;
t4=(*a=C_VECTOR_TYPE|1,a[1]=t3,tmp=(C_word)a,a+=2,tmp);
t5=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_15088,a[2]=((C_word*)t0)[2],a[3]=t4,a[4]=((C_word*)t0)[3],a[5]=t2,tmp=(C_word)a,a+=6,tmp);
C_trace("ChickenBridge.scm: 378  read-line");
t6=C_retrieve(lf[56]);
((C_proc3)C_retrieve_proc(t6))(3,t6,t5,((C_word*)t0)[3]);}

/* k15086 in k15076 in k15073 in k15070 in k15066 in k15063 in k15045 in a15042 in import-spear-frames in k11783 in k10718 in k10715 in k7274 in k7271 in k6978 in k6975 in k6971 in k6680 in k6677 in k6674 in k6671 */
static void C_ccall f_15088(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_15088,2,t0,t1);}
t2=C_SCHEME_UNDEFINED;
t3=(*a=C_VECTOR_TYPE|1,a[1]=t2,tmp=(C_word)a,a+=2,tmp);
t4=C_set_block_item(t3,0,(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_15090,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=t3,a[5]=((C_word*)t0)[5],a[6]=((C_word)li206),tmp=(C_word)a,a+=7,tmp));
t5=((C_word*)t3)[1];
f_15090(t5,((C_word*)t0)[2],t1,C_SCHEME_FALSE);}

/* do1553 in k15086 in k15076 in k15073 in k15070 in k15066 in k15063 in k15045 in a15042 in import-spear-frames in k11783 in k10718 in k10715 in k7274 in k7271 in k6978 in k6975 in k6971 in k6680 in k6677 in k6674 in k6671 */
static void C_fcall f_15090(C_word t0,C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word ab[13],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_15090,NULL,4,t0,t1,t2,t3);}
t4=(*a=C_VECTOR_TYPE|1,a[1]=t3,tmp=(C_word)a,a+=2,tmp);
if(C_truep((C_word)C_eofp(t2))){
t5=t1;
((C_proc2)(void*)(*((C_word*)t5+1)))(2,t5,(C_word)C_i_cdr(((C_word*)t0)[5]));}
else{
t5=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_15104,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=t1,a[5]=((C_word*)t0)[4],a[6]=t4,tmp=(C_word)a,a+=7,tmp);
t6=t2;
t7=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_14934,a[2]=t5,a[3]=t6,tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 378  open-input-string");
t8=C_retrieve(lf[274]);
((C_proc3)C_retrieve_proc(t8))(3,t8,t7,t6);}}

/* k14932 in do1553 in k15086 in k15076 in k15073 in k15070 in k15066 in k15063 in k15045 in a15042 in import-spear-frames in k11783 in k10718 in k10715 in k7274 in k7271 in k6978 in k6975 in k6971 in k6680 in k6677 in k6674 in k6671 */
static void C_ccall f_14934(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word ab[23],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_14934,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_14935,a[2]=((C_word*)t0)[3],a[3]=((C_word)li204),tmp=(C_word)a,a+=4,tmp);
t3=C_SCHEME_FALSE;
t4=(*a=C_VECTOR_TYPE|1,a[1]=t3,tmp=(C_word)a,a+=2,tmp);
t5=C_SCHEME_FALSE;
t6=(*a=C_VECTOR_TYPE|1,a[1]=t5,tmp=(C_word)a,a+=2,tmp);
t7=(C_word)C_a_i_list(&a,1,C_SCHEME_FALSE);
t8=(C_word)C_a_i_list(&a,1,C_SCHEME_FALSE);
t9=(*a=C_CLOSURE_TYPE|8,a[1]=(C_word)f_14958,a[2]=t1,a[3]=t2,a[4]=t7,a[5]=((C_word*)t0)[2],a[6]=t8,a[7]=t6,a[8]=t4,tmp=(C_word)a,a+=9,tmp);
C_trace("ChickenBridge.scm: 378  rdat");
t10=t2;
f_14935(t10,t9,t1);}

/* k14956 in k14932 in do1553 in k15086 in k15076 in k15073 in k15070 in k15066 in k15063 in k15045 in a15042 in import-spear-frames in k11783 in k10718 in k10715 in k7274 in k7271 in k6978 in k6975 in k6971 in k6680 in k6677 in k6674 in k6671 */
static void C_ccall f_14958(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_14958,2,t0,t1);}
t2=C_mutate(((C_word *)((C_word*)t0)[8])+1,t1);
t3=(*a=C_CLOSURE_TYPE|8,a[1]=(C_word)f_14962,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[8],a[5]=((C_word*)t0)[4],a[6]=((C_word*)t0)[5],a[7]=((C_word*)t0)[6],a[8]=((C_word*)t0)[7],tmp=(C_word)a,a+=9,tmp);
C_trace("ChickenBridge.scm: 378  rdat");
t4=((C_word*)t0)[3];
f_14935(t4,t3,((C_word*)t0)[2]);}

/* k14960 in k14956 in k14932 in do1553 in k15086 in k15076 in k15073 in k15070 in k15066 in k15063 in k15045 in a15042 in import-spear-frames in k11783 in k10718 in k10715 in k7274 in k7271 in k6978 in k6975 in k6971 in k6680 in k6677 in k6674 in k6671 */
static void C_ccall f_14962(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word ab[16],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_14962,2,t0,t1);}
t2=C_mutate(((C_word *)((C_word*)t0)[8])+1,t1);
t3=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_14965,a[2]=((C_word*)t0)[8],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t4=C_SCHEME_UNDEFINED;
t5=(*a=C_VECTOR_TYPE|1,a[1]=t4,tmp=(C_word)a,a+=2,tmp);
t6=C_set_block_item(t5,0,(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_14988,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=t5,a[5]=((C_word*)t0)[8],a[6]=((C_word)li205),tmp=(C_word)a,a+=7,tmp));
t7=((C_word*)t5)[1];
f_14988(t7,t3,C_fix(0),((C_word*)t0)[5],((C_word*)t0)[7]);}

/* do1522 in k14960 in k14956 in k14932 in do1553 in k15086 in k15076 in k15073 in k15070 in k15066 in k15063 in k15045 in a15042 in import-spear-frames in k11783 in k10718 in k10715 in k7274 in k7271 in k6978 in k6975 in k6971 in k6680 in k6677 in k6674 in k6671 */
static void C_fcall f_14988(C_word t0,C_word t1,C_word t2,C_word t3,C_word t4){
C_word tmp;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word ab[13],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_14988,NULL,5,t0,t1,t2,t3,t4);}
t5=(*a=C_VECTOR_TYPE|1,a[1]=t3,tmp=(C_word)a,a+=2,tmp);
t6=(*a=C_VECTOR_TYPE|1,a[1]=t4,tmp=(C_word)a,a+=2,tmp);
if(C_truep((C_word)C_i_nequalp(t2,((C_word*)((C_word*)t0)[5])[1]))){
t7=t1;
((C_proc2)(void*)(*((C_word*)t7+1)))(2,t7,C_SCHEME_FALSE);}
else{
t7=(*a=C_CLOSURE_TYPE|8,a[1]=(C_word)f_14998,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=t1,a[5]=((C_word*)t0)[4],a[6]=t2,a[7]=t5,a[8]=t6,tmp=(C_word)a,a+=9,tmp);
C_trace("ChickenBridge.scm: 378  rdat");
t8=((C_word*)t0)[3];
f_14935(t8,t7,((C_word*)t0)[2]);}}

/* k14996 in do1522 in k14960 in k14956 in k14932 in do1553 in k15086 in k15076 in k15073 in k15070 in k15066 in k15063 in k15045 in a15042 in import-spear-frames in k11783 in k10718 in k10715 in k7274 in k7271 in k6978 in k6975 in k6971 in k6680 in k6677 in k6674 in k6671 */
static void C_ccall f_14998(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_14998,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|8,a[1]=(C_word)f_15035,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],a[7]=((C_word*)t0)[7],a[8]=((C_word*)t0)[8],tmp=(C_word)a,a+=9,tmp);
C_trace("ChickenBridge.scm: 378  rdat");
t3=((C_word*)t0)[3];
f_14935(t3,t2,((C_word*)t0)[2]);}

/* k15033 in k14996 in do1522 in k14960 in k14956 in k14932 in do1553 in k15086 in k15076 in k15073 in k15070 in k15066 in k15063 in k15045 in a15042 in import-spear-frames in k11783 in k10718 in k10715 in k7274 in k7271 in k6978 in k6975 in k6971 in k6680 in k6677 in k6674 in k6671 */
static void C_ccall f_15035(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word ab[10],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_15035,2,t0,t1);}
t2=(C_word)C_a_i_list(&a,1,t1);
t3=(C_word)C_i_set_cdr(((C_word*)((C_word*)t0)[8])[1],t2);
t4=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[8])[1]);
t5=C_mutate(((C_word *)((C_word*)t0)[8])+1,t4);
t6=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_15027,a[2]=((C_word*)t0)[8],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
C_trace("ChickenBridge.scm: 378  rdat");
t7=((C_word*)t0)[3];
f_14935(t7,t6,((C_word*)t0)[2]);}

/* k15025 in k15033 in k14996 in do1522 in k14960 in k14956 in k14932 in do1553 in k15086 in k15076 in k15073 in k15070 in k15066 in k15063 in k15045 in a15042 in import-spear-frames in k11783 in k10718 in k10715 in k7274 in k7271 in k6978 in k6975 in k6971 in k6680 in k6677 in k6674 in k6671 */
static void C_ccall f_15027(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_15027,2,t0,t1);}
t2=(C_word)C_a_i_list(&a,1,t1);
t3=(C_word)C_i_set_cdr(((C_word*)((C_word*)t0)[6])[1],t2);
t4=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[6])[1]);
t5=C_mutate(((C_word *)((C_word*)t0)[6])+1,t4);
t6=(C_word)C_a_i_plus(&a,2,((C_word*)t0)[5],C_fix(1));
t7=((C_word*)((C_word*)t0)[4])[1];
f_14988(t7,((C_word*)t0)[3],t6,((C_word*)((C_word*)t0)[6])[1],((C_word*)((C_word*)t0)[2])[1]);}

/* k14963 in k14960 in k14956 in k14932 in do1553 in k15086 in k15076 in k15073 in k15070 in k15066 in k15063 in k15045 in a15042 in import-spear-frames in k11783 in k10718 in k10715 in k7274 in k7271 in k6978 in k6975 in k6971 in k6680 in k6677 in k6674 in k6671 */
static void C_ccall f_14965(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word *a;
t2=(C_word)C_i_cdr(((C_word*)t0)[6]);
if(C_truep((C_word)C_i_nullp(t2))){
t3=((C_word*)t0)[5];
f_15104(2,t3,C_SCHEME_FALSE);}
else{
t3=(C_word)C_i_cdr(((C_word*)t0)[6]);
t4=(C_word)C_i_cdr(((C_word*)t0)[4]);
C_trace("ChickenBridge.scm: 378  make-spectrum");
f_11700(((C_word*)t0)[5],((C_word*)((C_word*)t0)[3])[1],((C_word*)((C_word*)t0)[2])[1],t3,t4);}}

/* rdat in k14932 in do1553 in k15086 in k15076 in k15073 in k15070 in k15066 in k15063 in k15045 in a15042 in import-spear-frames in k11783 in k10718 in k10715 in k7274 in k7271 in k6978 in k6975 in k6971 in k6680 in k6677 in k6674 in k6671 */
static void C_fcall f_14935(C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word ab[4],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_14935,NULL,3,t0,t1,t2);}
t3=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_14939,a[2]=((C_word*)t0)[2],a[3]=t1,tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 378  read");
t4=*((C_word*)lf[273]+1);
((C_proc3)C_retrieve_proc(t4))(3,t4,t3,t2);}

/* k14937 in rdat in k14932 in do1553 in k15086 in k15076 in k15073 in k15070 in k15066 in k15063 in k15045 in a15042 in import-spear-frames in k11783 in k10718 in k10715 in k7274 in k7271 in k6978 in k6975 in k6971 in k6680 in k6677 in k6674 in k6671 */
static void C_ccall f_14939(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[4],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_14939,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_14942,a[2]=t1,a[3]=((C_word*)t0)[3],tmp=(C_word)a,a+=4,tmp);
if(C_truep((C_word)C_eofp(t1))){
C_trace("ChickenBridge.scm: 378  error");
t3=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t3))(4,t3,t2,lf[272],((C_word*)t0)[2]);}
else{
t3=t2;
f_14942(2,t3,C_SCHEME_UNDEFINED);}}

/* k14940 in k14937 in rdat in k14932 in do1553 in k15086 in k15076 in k15073 in k15070 in k15066 in k15063 in k15045 in a15042 in import-spear-frames in k11783 in k10718 in k10715 in k7274 in k7271 in k6978 in k6975 in k6971 in k6680 in k6677 in k6674 in k6671 */
static void C_ccall f_14942(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
t2=((C_word*)t0)[3];
((C_proc2)(void*)(*((C_word*)t2+1)))(2,t2,((C_word*)t0)[2]);}

/* k15102 in do1553 in k15086 in k15076 in k15073 in k15070 in k15066 in k15063 in k15045 in a15042 in import-spear-frames in k11783 in k10718 in k10715 in k7274 in k7271 in k6978 in k6975 in k6971 in k6680 in k6677 in k6674 in k6671 */
static void C_ccall f_15104(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_15104,2,t0,t1);}
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_15107,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[6],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],tmp=(C_word)a,a+=6,tmp);
if(C_truep(((C_word*)((C_word*)t0)[6])[1])){
t4=(C_word)C_a_i_list(&a,1,((C_word*)((C_word*)t0)[6])[1]);
t5=(C_word)C_i_set_cdr(((C_word*)((C_word*)t0)[2])[1],t4);
t6=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[2])[1]);
t7=C_mutate(((C_word *)((C_word*)t0)[2])+1,t6);
t8=t3;
f_15107(t8,t7);}
else{
t4=t3;
f_15107(t4,C_SCHEME_UNDEFINED);}}

/* k15105 in k15102 in do1553 in k15086 in k15076 in k15073 in k15070 in k15066 in k15063 in k15045 in a15042 in import-spear-frames in k11783 in k10718 in k10715 in k7274 in k7271 in k6978 in k6975 in k6971 in k6680 in k6677 in k6674 in k6671 */
static void C_fcall f_15107(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[5],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_15107,NULL,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_15114,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],tmp=(C_word)a,a+=5,tmp);
C_trace("ChickenBridge.scm: 378  read-line");
t3=C_retrieve(lf[56]);
((C_proc3)C_retrieve_proc(t3))(3,t3,t2,((C_word*)t0)[2]);}

/* k15112 in k15105 in k15102 in do1553 in k15086 in k15076 in k15073 in k15070 in k15066 in k15063 in k15045 in a15042 in import-spear-frames in k11783 in k10718 in k10715 in k7274 in k7271 in k6978 in k6975 in k6971 in k6680 in k6677 in k6674 in k6671 */
static void C_ccall f_15114(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
t2=((C_word*)((C_word*)t0)[4])[1];
f_15090(t2,((C_word*)t0)[3],t1,((C_word*)((C_word*)t0)[2])[1]);}

/* rhdr in k15045 in a15042 in import-spear-frames in k11783 in k10718 in k10715 in k7274 in k7271 in k6978 in k6975 in k6971 in k6680 in k6677 in k6674 in k6671 */
static void C_fcall f_15048(C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word ab[4],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_15048,NULL,2,t1,t2);}
t3=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_15052,a[2]=t2,a[3]=t1,tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 378  read-line");
t4=C_retrieve(lf[56]);
((C_proc3)C_retrieve_proc(t4))(3,t4,t3,t2);}

/* k15050 in rhdr in k15045 in a15042 in import-spear-frames in k11783 in k10718 in k10715 in k7274 in k7271 in k6978 in k6975 in k6971 in k6680 in k6677 in k6674 in k6671 */
static void C_ccall f_15052(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[4],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_15052,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_15055,a[2]=t1,a[3]=((C_word*)t0)[3],tmp=(C_word)a,a+=4,tmp);
if(C_truep((C_word)C_eofp(t1))){
C_trace("ChickenBridge.scm: 378  error");
t3=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t3))(4,t3,t2,lf[271],((C_word*)t0)[2]);}
else{
t3=t2;
f_15055(2,t3,C_SCHEME_UNDEFINED);}}

/* k15053 in k15050 in rhdr in k15045 in a15042 in import-spear-frames in k11783 in k10718 in k10715 in k7274 in k7271 in k6978 in k6975 in k6971 in k6680 in k6677 in k6674 in k6671 */
static void C_ccall f_15055(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
t2=((C_word*)t0)[3];
((C_proc2)(void*)(*((C_word*)t2+1)))(2,t2,((C_word*)t0)[2]);}

/* spectrum-rescale! in k11783 in k10718 in k10715 in k7274 in k7271 in k6978 in k6975 in k6971 in k6680 in k6677 in k6674 in k6671 */
static void C_ccall f_14524(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,...){
C_word tmp;
C_word t4;
va_list v;
C_word *a,c2=c;
C_save_rest(t3,c2,4);
if(c<4) C_bad_min_argc_2(c,4,t0);
C_check_for_interrupt;
if(!C_demand(c*C_SIZEOF_PAIR+24)){
C_save_and_reclaim((void*)tr4r,(void*)f_14524r,4,t0,t1,t2,t3);}
else{
a=C_alloc((c-4)*3);
t4=C_restore_rest(a,C_rest_count(0));
f_14524r(t0,t1,t2,t3,t4);}}

static void C_ccall f_14524r(C_word t0,C_word t1,C_word t2,C_word t3,C_word t4){
C_word tmp;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word t14;
C_word t15;
C_word t16;
C_word t17;
C_word t18;
C_word *a=C_alloc(24);
t5=(*a=C_VECTOR_TYPE|1,a[1]=t3,tmp=(C_word)a,a+=2,tmp);
t6=(*a=C_VECTOR_TYPE|1,a[1]=t4,tmp=(C_word)a,a+=2,tmp);
t7=C_SCHEME_FALSE;
t8=(*a=C_VECTOR_TYPE|1,a[1]=t7,tmp=(C_word)a,a+=2,tmp);
t9=C_SCHEME_FALSE;
t10=(*a=C_VECTOR_TYPE|1,a[1]=t9,tmp=(C_word)a,a+=2,tmp);
t11=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_14528,a[2]=t5,a[3]=t10,a[4]=t8,a[5]=t6,a[6]=t2,a[7]=t1,tmp=(C_word)a,a+=8,tmp);
if(C_truep((C_word)C_i_nullp(((C_word*)t6)[1]))){
C_trace("ChickenBridge.scm: 378  error");
t12=*((C_word*)lf[4]+1);
((C_proc3)C_retrieve_proc(t12))(3,t12,t11,lf[268]);}
else{
t12=(C_word)C_i_cdr(((C_word*)t6)[1]);
if(C_truep((C_word)C_i_nullp(t12))){
t13=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_14897,a[2]=t11,a[3]=t6,tmp=(C_word)a,a+=4,tmp);
t14=(C_word)C_i_car(((C_word*)t6)[1]);
t15=(C_word)C_i_pairp(t14);
t16=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_14903,a[2]=t6,a[3]=t13,tmp=(C_word)a,a+=4,tmp);
if(C_truep(t15)){
t17=t16;
f_14903(t17,t15);}
else{
t17=(C_word)C_i_car(((C_word*)t6)[1]);
t18=t16;
f_14903(t18,(C_word)C_i_numberp(t17));}}
else{
t13=t11;
f_14528(2,t13,C_SCHEME_UNDEFINED);}}}

/* k14901 in spectrum-rescale! in k11783 in k10718 in k10715 in k7274 in k7271 in k6978 in k6975 in k6971 in k6680 in k6677 in k6674 in k6671 */
static void C_fcall f_14903(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word *a;
if(C_truep(t1)){
t2=((C_word*)t0)[3];
f_14897(2,t2,(C_word)C_i_car(((C_word*)((C_word*)t0)[2])[1]));}
else{
t2=(C_word)C_i_car(((C_word*)((C_word*)t0)[2])[1]);
C_trace("ChickenBridge.scm: 378  error");
t3=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t3))(4,t3,((C_word*)t0)[3],lf[269],t2);}}

/* k14895 in spectrum-rescale! in k11783 in k10718 in k10715 in k7274 in k7271 in k6978 in k6975 in k6971 in k6680 in k6677 in k6674 in k6671 */
static void C_ccall f_14897(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[3])+1,t1);
t3=((C_word*)t0)[2];
f_14528(2,t3,t2);}

/* k14526 in spectrum-rescale! in k11783 in k10718 in k10715 in k7274 in k7271 in k6978 in k6975 in k6971 in k6680 in k6677 in k6674 in k6671 */
static void C_ccall f_14528(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[12],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_14528,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_14531,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],a[7]=((C_word*)t0)[7],tmp=(C_word)a,a+=8,tmp);
t3=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_14881,a[2]=t2,a[3]=((C_word*)t0)[2],tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 378  <=");
C_less_or_equal_p(5,0,t3,C_fix(1),((C_word*)((C_word*)t0)[2])[1],C_fix(8));}

/* k14879 in k14526 in spectrum-rescale! in k11783 in k10718 in k10715 in k7274 in k7271 in k6978 in k6975 in k6971 in k6680 in k6677 in k6674 in k6671 */
static void C_ccall f_14881(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[4],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_14881,2,t0,t1);}
if(C_truep(t1)){
t2=(C_word)C_a_i_minus(&a,2,((C_word*)((C_word*)t0)[3])[1],C_fix(1));
t3=C_mutate(((C_word *)((C_word*)t0)[3])+1,t2);
t4=((C_word*)t0)[2];
f_14531(2,t4,t3);}
else{
C_trace("ChickenBridge.scm: 378  error");
t2=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t2))(4,t2,((C_word*)t0)[2],lf[267],((C_word*)((C_word*)t0)[3])[1]);}}

/* k14529 in k14526 in spectrum-rescale! in k11783 in k10718 in k10715 in k7274 in k7271 in k6978 in k6975 in k6971 in k6680 in k6677 in k6674 in k6671 */
static void C_ccall f_14531(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[16],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_14531,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_14534,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],a[7]=((C_word*)t0)[7],tmp=(C_word)a,a+=8,tmp);
if(C_truep((C_word)C_i_bit_setp(((C_word*)((C_word*)t0)[2])[1],C_fix(2)))){
t3=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_14863,a[2]=t2,a[3]=((C_word*)t0)[3],tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 378  spectrum-amps");
t4=C_retrieve(lf[230]);
((C_proc3)C_retrieve_proc(t4))(3,t4,t3,((C_word*)t0)[6]);}
else{
t3=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_14867,a[2]=t2,a[3]=((C_word*)t0)[3],tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 378  spectrum-freqs");
t4=C_retrieve(lf[228]);
((C_proc3)C_retrieve_proc(t4))(3,t4,t3,((C_word*)t0)[6]);}}

/* k14865 in k14529 in k14526 in spectrum-rescale! in k11783 in k10718 in k10715 in k7274 in k7271 in k6978 in k6975 in k6971 in k6680 in k6677 in k6674 in k6671 */
static void C_ccall f_14867(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[3])+1,t1);
t3=((C_word*)t0)[2];
f_14534(t3,t2);}

/* k14861 in k14529 in k14526 in spectrum-rescale! in k11783 in k10718 in k10715 in k7274 in k7271 in k6978 in k6975 in k6971 in k6680 in k6677 in k6674 in k6671 */
static void C_ccall f_14863(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[3])+1,t1);
t3=((C_word*)t0)[2];
f_14534(t3,t2);}

/* k14532 in k14529 in k14526 in spectrum-rescale! in k11783 in k10718 in k10715 in k7274 in k7271 in k6978 in k6975 in k6971 in k6680 in k6677 in k6674 in k6671 */
static void C_fcall f_14534(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[14],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_14534,NULL,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_14537,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],a[7]=((C_word*)t0)[7],tmp=(C_word)a,a+=8,tmp);
if(C_truep((C_word)C_i_bit_setp(((C_word*)((C_word*)t0)[2])[1],C_fix(1)))){
t3=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_14852,a[2]=t2,tmp=(C_word)a,a+=3,tmp);
C_trace("ChickenBridge.scm: 378  spectrum-amps");
t4=C_retrieve(lf[230]);
((C_proc3)C_retrieve_proc(t4))(3,t4,t3,((C_word*)t0)[6]);}
else{
t3=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_14856,a[2]=t2,tmp=(C_word)a,a+=3,tmp);
C_trace("ChickenBridge.scm: 378  spectrum-freqs");
t4=C_retrieve(lf[228]);
((C_proc3)C_retrieve_proc(t4))(3,t4,t3,((C_word*)t0)[6]);}}

/* k14854 in k14532 in k14529 in k14526 in spectrum-rescale! in k11783 in k10718 in k10715 in k7274 in k7271 in k6978 in k6975 in k6971 in k6680 in k6677 in k6674 in k6671 */
static void C_ccall f_14856(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word *a;
t2=C_SCHEME_UNDEFINED;
t3=((C_word*)t0)[2];
f_14537(t3,t2);}

/* k14850 in k14532 in k14529 in k14526 in spectrum-rescale! in k11783 in k10718 in k10715 in k7274 in k7271 in k6978 in k6975 in k6971 in k6680 in k6677 in k6674 in k6671 */
static void C_ccall f_14852(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word *a;
t2=C_SCHEME_UNDEFINED;
t3=((C_word*)t0)[2];
f_14537(t3,t2);}

/* k14535 in k14532 in k14529 in k14526 in spectrum-rescale! in k11783 in k10718 in k10715 in k7274 in k7271 in k6978 in k6975 in k6971 in k6680 in k6677 in k6674 in k6671 */
static void C_fcall f_14537(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[8],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_14537,NULL,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_14540,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],a[7]=((C_word*)t0)[7],tmp=(C_word)a,a+=8,tmp);
if(C_truep((C_word)C_i_bit_setp(((C_word*)((C_word*)t0)[2])[1],C_fix(0)))){
t3=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t4=t2;
f_14540(t4,t3);}
else{
t3=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_FALSE);
t4=t2;
f_14540(t4,t3);}}

/* k14538 in k14535 in k14532 in k14529 in k14526 in spectrum-rescale! in k11783 in k10718 in k10715 in k7274 in k7271 in k6978 in k6975 in k6971 in k6680 in k6677 in k6674 in k6671 */
static void C_fcall f_14540(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word ab[32],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_14540,NULL,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_14543,a[2]=((C_word*)t0)[6],a[3]=((C_word*)t0)[7],tmp=(C_word)a,a+=4,tmp);
if(C_truep((C_word)C_i_numberp(((C_word*)((C_word*)t0)[5])[1]))){
if(C_truep(((C_word*)((C_word*)t0)[4])[1])){
t3=C_SCHEME_UNDEFINED;
t4=(*a=C_VECTOR_TYPE|1,a[1]=t3,tmp=(C_word)a,a+=2,tmp);
t5=C_set_block_item(t4,0,(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_14554,a[2]=t4,a[3]=((C_word*)t0)[5],a[4]=((C_word)li194),tmp=(C_word)a,a+=5,tmp));
t6=((C_word*)t4)[1];
f_14554(t6,t2,((C_word*)((C_word*)t0)[3])[1]);}
else{
t3=C_SCHEME_UNDEFINED;
t4=(*a=C_VECTOR_TYPE|1,a[1]=t3,tmp=(C_word)a,a+=2,tmp);
t5=C_set_block_item(t4,0,(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_14584,a[2]=t4,a[3]=((C_word*)t0)[5],a[4]=((C_word)li195),tmp=(C_word)a,a+=5,tmp));
t6=((C_word*)t4)[1];
f_14584(t6,t2,((C_word*)((C_word*)t0)[3])[1]);}}
else{
t3=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_14604,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[5],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[6],a[6]=t2,tmp=(C_word)a,a+=7,tmp);
t4=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_14840,a[2]=((C_word*)t0)[6],a[3]=((C_word*)t0)[2],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=t3,tmp=(C_word)a,a+=7,tmp);
C_trace("ChickenBridge.scm: 378  every?");
t5=C_retrieve(lf[87]);
((C_proc4)C_retrieve_proc(t5))(4,t5,t4,*((C_word*)lf[266]+1),((C_word*)((C_word*)t0)[5])[1]);}}

/* k14838 in k14538 in k14535 in k14532 in k14529 in k14526 in spectrum-rescale! in k11783 in k10718 in k10715 in k7274 in k7271 in k6978 in k6975 in k6971 in k6680 in k6677 in k6674 in k6671 */
static void C_ccall f_14840(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word ab[31],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_14840,2,t0,t1);}
if(C_truep(t1)){
t2=((C_word*)t0)[6];
f_14604(2,t2,C_SCHEME_UNDEFINED);}
else{
t2=C_SCHEME_FALSE;
t3=(*a=C_VECTOR_TYPE|1,a[1]=t2,tmp=(C_word)a,a+=2,tmp);
t4=C_SCHEME_FALSE;
t5=(*a=C_VECTOR_TYPE|1,a[1]=t4,tmp=(C_word)a,a+=2,tmp);
t6=C_SCHEME_FALSE;
t7=(*a=C_VECTOR_TYPE|1,a[1]=t6,tmp=(C_word)a,a+=2,tmp);
t8=C_SCHEME_FALSE;
t9=(*a=C_VECTOR_TYPE|1,a[1]=t8,tmp=(C_word)a,a+=2,tmp);
t10=(*a=C_CLOSURE_TYPE|10,a[1]=(C_word)f_14698,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[6],a[5]=t5,a[6]=t3,a[7]=t9,a[8]=t7,a[9]=((C_word*)t0)[4],a[10]=((C_word*)t0)[5],tmp=(C_word)a,a+=11,tmp);
if(C_truep((C_word)C_i_bit_setp(((C_word*)((C_word*)t0)[3])[1],C_fix(1)))){
t11=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_14824,a[2]=((C_word*)t0)[2],a[3]=t10,a[4]=t5,a[5]=t3,tmp=(C_word)a,a+=6,tmp);
C_trace("ChickenBridge.scm: 378  spectrum-minamp");
t12=C_retrieve(lf[236]);
((C_proc3)C_retrieve_proc(t12))(3,t12,t11,((C_word*)t0)[2]);}
else{
t11=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_14832,a[2]=((C_word*)t0)[2],a[3]=t10,a[4]=t5,a[5]=t3,tmp=(C_word)a,a+=6,tmp);
C_trace("ChickenBridge.scm: 378  spectrum-minfreq");
t12=C_retrieve(lf[234]);
((C_proc3)C_retrieve_proc(t12))(3,t12,t11,((C_word*)t0)[2]);}}}

/* k14830 in k14838 in k14538 in k14535 in k14532 in k14529 in k14526 in spectrum-rescale! in k11783 in k10718 in k10715 in k7274 in k7271 in k6978 in k6975 in k6971 in k6680 in k6677 in k6674 in k6671 */
static void C_ccall f_14832(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[4],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_14832,2,t0,t1);}
t2=C_mutate(((C_word *)((C_word*)t0)[5])+1,t1);
t3=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_14836,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 378  spectrum-maxfreq");
t4=C_retrieve(lf[235]);
((C_proc3)C_retrieve_proc(t4))(3,t4,t3,((C_word*)t0)[2]);}

/* k14834 in k14830 in k14838 in k14538 in k14535 in k14532 in k14529 in k14526 in spectrum-rescale! in k11783 in k10718 in k10715 in k7274 in k7271 in k6978 in k6975 in k6971 in k6680 in k6677 in k6674 in k6671 */
static void C_ccall f_14836(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[3])+1,t1);
t3=((C_word*)t0)[2];
f_14698(t3,t2);}

/* k14822 in k14838 in k14538 in k14535 in k14532 in k14529 in k14526 in spectrum-rescale! in k11783 in k10718 in k10715 in k7274 in k7271 in k6978 in k6975 in k6971 in k6680 in k6677 in k6674 in k6671 */
static void C_ccall f_14824(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[4],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_14824,2,t0,t1);}
t2=C_mutate(((C_word *)((C_word*)t0)[5])+1,t1);
t3=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_14828,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 378  spectrum-maxamp");
t4=C_retrieve(lf[239]);
((C_proc3)C_retrieve_proc(t4))(3,t4,t3,((C_word*)t0)[2]);}

/* k14826 in k14822 in k14838 in k14538 in k14535 in k14532 in k14529 in k14526 in spectrum-rescale! in k11783 in k10718 in k10715 in k7274 in k7271 in k6978 in k6975 in k6971 in k6680 in k6677 in k6674 in k6671 */
static void C_ccall f_14828(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[3])+1,t1);
t3=((C_word*)t0)[2];
f_14698(t3,t2);}

/* k14696 in k14838 in k14538 in k14535 in k14532 in k14529 in k14526 in spectrum-rescale! in k11783 in k10718 in k10715 in k7274 in k7271 in k6978 in k6975 in k6971 in k6680 in k6677 in k6674 in k6671 */
static void C_fcall f_14698(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[21],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_14698,NULL,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|8,a[1]=(C_word)f_14701,a[2]=((C_word*)t0)[4],a[3]=((C_word*)t0)[5],a[4]=((C_word*)t0)[6],a[5]=((C_word*)t0)[7],a[6]=((C_word*)t0)[8],a[7]=((C_word*)t0)[9],a[8]=((C_word*)t0)[10],tmp=(C_word)a,a+=9,tmp);
if(C_truep((C_word)C_i_bit_setp(((C_word*)((C_word*)t0)[3])[1],C_fix(2)))){
t3=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_14805,a[2]=((C_word*)t0)[2],a[3]=t2,a[4]=((C_word*)t0)[7],a[5]=((C_word*)t0)[8],tmp=(C_word)a,a+=6,tmp);
C_trace("ChickenBridge.scm: 378  spectrum-minamp");
t4=C_retrieve(lf[236]);
((C_proc3)C_retrieve_proc(t4))(3,t4,t3,((C_word*)t0)[2]);}
else{
t3=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_14813,a[2]=((C_word*)t0)[2],a[3]=t2,a[4]=((C_word*)t0)[7],a[5]=((C_word*)t0)[8],tmp=(C_word)a,a+=6,tmp);
C_trace("ChickenBridge.scm: 378  spectrum-minfreq");
t4=C_retrieve(lf[234]);
((C_proc3)C_retrieve_proc(t4))(3,t4,t3,((C_word*)t0)[2]);}}

/* k14811 in k14696 in k14838 in k14538 in k14535 in k14532 in k14529 in k14526 in spectrum-rescale! in k11783 in k10718 in k10715 in k7274 in k7271 in k6978 in k6975 in k6971 in k6680 in k6677 in k6674 in k6671 */
static void C_ccall f_14813(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[4],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_14813,2,t0,t1);}
t2=C_mutate(((C_word *)((C_word*)t0)[5])+1,t1);
t3=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_14817,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 378  spectrum-maxfreq");
t4=C_retrieve(lf[235]);
((C_proc3)C_retrieve_proc(t4))(3,t4,t3,((C_word*)t0)[2]);}

/* k14815 in k14811 in k14696 in k14838 in k14538 in k14535 in k14532 in k14529 in k14526 in spectrum-rescale! in k11783 in k10718 in k10715 in k7274 in k7271 in k6978 in k6975 in k6971 in k6680 in k6677 in k6674 in k6671 */
static void C_ccall f_14817(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[3])+1,t1);
t3=((C_word*)t0)[2];
f_14701(t3,t2);}

/* k14803 in k14696 in k14838 in k14538 in k14535 in k14532 in k14529 in k14526 in spectrum-rescale! in k11783 in k10718 in k10715 in k7274 in k7271 in k6978 in k6975 in k6971 in k6680 in k6677 in k6674 in k6671 */
static void C_ccall f_14805(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[4],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_14805,2,t0,t1);}
t2=C_mutate(((C_word *)((C_word*)t0)[5])+1,t1);
t3=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_14809,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 378  spectrum-maxamp");
t4=C_retrieve(lf[239]);
((C_proc3)C_retrieve_proc(t4))(3,t4,t3,((C_word*)t0)[2]);}

/* k14807 in k14803 in k14696 in k14838 in k14538 in k14535 in k14532 in k14529 in k14526 in spectrum-rescale! in k11783 in k10718 in k10715 in k7274 in k7271 in k6978 in k6975 in k6971 in k6680 in k6677 in k6674 in k6671 */
static void C_ccall f_14809(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[3])+1,t1);
t3=((C_word*)t0)[2];
f_14701(t3,t2);}

/* k14699 in k14696 in k14838 in k14538 in k14535 in k14532 in k14529 in k14526 in spectrum-rescale! in k11783 in k10718 in k10715 in k7274 in k7271 in k6978 in k6975 in k6971 in k6680 in k6677 in k6674 in k6671 */
static void C_fcall f_14701(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_14701,NULL,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|8,a[1]=(C_word)f_14705,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],a[7]=((C_word*)t0)[7],a[8]=((C_word*)t0)[8],tmp=(C_word)a,a+=9,tmp);
C_trace("ChickenBridge.scm: 378  append");
t3=*((C_word*)lf[18]+1);
((C_proc4)C_retrieve_proc(t3))(4,t3,t2,((C_word*)((C_word*)t0)[8])[1],C_SCHEME_END_OF_LIST);}

/* k14703 in k14699 in k14696 in k14838 in k14538 in k14535 in k14532 in k14529 in k14526 in spectrum-rescale! in k11783 in k10718 in k10715 in k7274 in k7271 in k6978 in k6975 in k6971 in k6680 in k6677 in k6674 in k6671 */
static void C_ccall f_14705(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[11],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_14705,2,t0,t1);}
t2=C_mutate(((C_word *)((C_word*)t0)[8])+1,t1);
t3=C_SCHEME_UNDEFINED;
t4=(*a=C_VECTOR_TYPE|1,a[1]=t3,tmp=(C_word)a,a+=2,tmp);
t5=C_set_block_item(t4,0,(*a=C_CLOSURE_TYPE|8,a[1]=(C_word)f_14710,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],a[7]=t4,a[8]=((C_word)li201),tmp=(C_word)a,a+=9,tmp));
t6=((C_word*)t4)[1];
f_14710(t6,((C_word*)t0)[2],((C_word*)((C_word*)t0)[8])[1]);}

/* do1485 in k14703 in k14699 in k14696 in k14838 in k14538 in k14535 in k14532 in k14529 in k14526 in spectrum-rescale! in k11783 in k10718 in k10715 in k7274 in k7271 in k6978 in k6975 in k6971 in k6680 in k6677 in k6674 in k6671 */
static void C_fcall f_14710(C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word ab[8],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_14710,NULL,3,t0,t1,t2);}
if(C_truep((C_word)C_i_nullp(t2))){
t3=t1;
((C_proc2)(void*)(*((C_word*)t3+1)))(2,t3,C_SCHEME_FALSE);}
else{
t3=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_14720,a[2]=((C_word*)t0)[4],a[3]=((C_word*)t0)[5],a[4]=((C_word*)t0)[6],a[5]=t1,a[6]=((C_word*)t0)[7],a[7]=t2,tmp=(C_word)a,a+=8,tmp);
t4=(C_word)C_i_car(t2);
t5=(C_word)C_eqp(t4,C_SCHEME_FALSE);
if(C_truep(t5)){
t6=t3;
f_14720(t6,(C_word)C_i_set_car(t2,((C_word*)((C_word*)t0)[3])[1]));}
else{
t6=(C_word)C_i_car(t2);
t7=(C_word)C_eqp(t6,C_SCHEME_TRUE);
t8=t3;
f_14720(t8,(C_truep(t7)?(C_word)C_i_set_car(t2,((C_word*)((C_word*)t0)[2])[1]):C_SCHEME_UNDEFINED));}}}

/* k14718 in do1485 in k14703 in k14699 in k14696 in k14838 in k14538 in k14535 in k14532 in k14529 in k14526 in spectrum-rescale! in k11783 in k10718 in k10715 in k7274 in k7271 in k6978 in k6975 in k6971 in k6680 in k6677 in k6674 in k6671 */
static void C_fcall f_14720(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word ab[5],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_14720,NULL,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_14723,a[2]=((C_word*)t0)[5],a[3]=((C_word*)t0)[6],a[4]=((C_word*)t0)[7],tmp=(C_word)a,a+=5,tmp);
if(C_truep(((C_word*)((C_word*)t0)[4])[1])){
t3=(C_word)C_i_cadr(((C_word*)t0)[7]);
C_trace("ChickenBridge.scm: 378  error");
t4=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[265],t3);}
else{
t3=(C_word)C_i_cadr(((C_word*)t0)[7]);
t4=(C_word)C_eqp(t3,C_SCHEME_FALSE);
if(C_truep(t4)){
t5=(C_word)C_i_cdr(((C_word*)t0)[7]);
t6=t2;
f_14723(2,t6,(C_word)C_i_set_car(t5,((C_word*)((C_word*)t0)[3])[1]));}
else{
t5=(C_word)C_i_cadr(((C_word*)t0)[7]);
t6=(C_word)C_eqp(t5,C_SCHEME_TRUE);
if(C_truep(t6)){
t7=(C_word)C_i_cdr(((C_word*)t0)[7]);
t8=t2;
f_14723(2,t8,(C_word)C_i_set_car(t7,((C_word*)((C_word*)t0)[2])[1]));}
else{
t7=t2;
f_14723(2,t7,C_SCHEME_UNDEFINED);}}}}

/* k14721 in k14718 in do1485 in k14703 in k14699 in k14696 in k14838 in k14538 in k14535 in k14532 in k14529 in k14526 in spectrum-rescale! in k11783 in k10718 in k10715 in k7274 in k7271 in k6978 in k6975 in k6971 in k6680 in k6677 in k6674 in k6671 */
static void C_ccall f_14723(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word *a;
t2=(C_word)C_i_cddr(((C_word*)t0)[4]);
t3=((C_word*)((C_word*)t0)[3])[1];
f_14710(t3,((C_word*)t0)[2],t2);}

/* k14602 in k14538 in k14535 in k14532 in k14529 in k14526 in spectrum-rescale! in k11783 in k10718 in k10715 in k7274 in k7271 in k6978 in k6975 in k6971 in k6680 in k6677 in k6674 in k6671 */
static void C_ccall f_14604(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word ab[18],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_14604,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_14607,a[2]=((C_word*)t0)[5],a[3]=((C_word*)t0)[6],tmp=(C_word)a,a+=4,tmp);
if(C_truep(((C_word*)((C_word*)t0)[4])[1])){
t3=C_SCHEME_UNDEFINED;
t4=(*a=C_VECTOR_TYPE|1,a[1]=t3,tmp=(C_word)a,a+=2,tmp);
t5=C_set_block_item(t4,0,(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_14629,a[2]=((C_word*)t0)[3],a[3]=t4,a[4]=((C_word)li199),tmp=(C_word)a,a+=5,tmp));
t6=((C_word*)t4)[1];
f_14629(t6,t2,((C_word*)((C_word*)t0)[2])[1]);}
else{
t3=C_SCHEME_UNDEFINED;
t4=(*a=C_VECTOR_TYPE|1,a[1]=t3,tmp=(C_word)a,a+=2,tmp);
t5=C_set_block_item(t4,0,(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_14667,a[2]=((C_word*)t0)[3],a[3]=t4,a[4]=((C_word)li200),tmp=(C_word)a,a+=5,tmp));
t6=((C_word*)t4)[1];
f_14667(t6,t2,((C_word*)((C_word*)t0)[2])[1]);}}

/* do1499 in k14602 in k14538 in k14535 in k14532 in k14529 in k14526 in spectrum-rescale! in k11783 in k10718 in k10715 in k7274 in k7271 in k6978 in k6975 in k6971 in k6680 in k6677 in k6674 in k6671 */
static void C_fcall f_14667(C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word t5;
C_word ab[5],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_14667,NULL,3,t0,t1,t2);}
if(C_truep((C_word)C_i_nullp(t2))){
t3=t1;
((C_proc2)(void*)(*((C_word*)t3+1)))(2,t3,C_SCHEME_FALSE);}
else{
t3=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_14688,a[2]=t1,a[3]=((C_word*)t0)[3],a[4]=t2,tmp=(C_word)a,a+=5,tmp);
t4=(C_word)C_i_car(t2);
C_trace("ChickenBridge.scm: 378  interp");
t5=C_retrieve(lf[151]);
((C_proc4)C_retrieve_proc(t5))(4,t5,t3,t4,((C_word*)((C_word*)t0)[2])[1]);}}

/* k14686 in do1499 in k14602 in k14538 in k14535 in k14532 in k14529 in k14526 in spectrum-rescale! in k11783 in k10718 in k10715 in k7274 in k7271 in k6978 in k6975 in k6971 in k6680 in k6677 in k6674 in k6671 */
static void C_ccall f_14688(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word *a;
t2=(C_word)C_i_set_car(((C_word*)t0)[4],t1);
t3=(C_word)C_i_cdr(((C_word*)t0)[4]);
t4=((C_word*)((C_word*)t0)[3])[1];
f_14667(t4,((C_word*)t0)[2],t3);}

/* do1494 in k14602 in k14538 in k14535 in k14532 in k14529 in k14526 in spectrum-rescale! in k11783 in k10718 in k10715 in k7274 in k7271 in k6978 in k6975 in k6971 in k6680 in k6677 in k6674 in k6671 */
static void C_fcall f_14629(C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[6],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_14629,NULL,3,t0,t1,t2);}
if(C_truep((C_word)C_i_nullp(t2))){
t3=t1;
((C_proc2)(void*)(*((C_word*)t3+1)))(2,t3,C_SCHEME_FALSE);}
else{
t3=(C_word)C_i_car(t2);
t4=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_14658,a[2]=t1,a[3]=((C_word*)t0)[3],a[4]=t2,a[5]=t3,tmp=(C_word)a,a+=6,tmp);
t5=(C_word)C_i_car(t2);
C_trace("ChickenBridge.scm: 378  interp");
t6=C_retrieve(lf[151]);
((C_proc4)C_retrieve_proc(t6))(4,t6,t4,t5,((C_word*)((C_word*)t0)[2])[1]);}}

/* k14656 in do1494 in k14602 in k14538 in k14535 in k14532 in k14529 in k14526 in spectrum-rescale! in k11783 in k10718 in k10715 in k7274 in k7271 in k6978 in k6975 in k6971 in k6680 in k6677 in k6674 in k6671 */
static void C_ccall f_14658(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[4],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_14658,2,t0,t1);}
t2=(C_word)C_a_i_times(&a,2,((C_word*)t0)[5],t1);
t3=(C_word)C_i_set_car(((C_word*)t0)[4],t2);
t4=(C_word)C_i_cdr(((C_word*)t0)[4]);
t5=((C_word*)((C_word*)t0)[3])[1];
f_14629(t5,((C_word*)t0)[2],t4);}

/* k14605 in k14602 in k14538 in k14535 in k14532 in k14529 in k14526 in spectrum-rescale! in k11783 in k10718 in k10715 in k7274 in k7271 in k6978 in k6975 in k6971 in k6680 in k6677 in k6674 in k6671 */
static void C_ccall f_14607(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_14607,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_14620,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],tmp=(C_word)a,a+=4,tmp);
t3=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_14624,a[2]=t2,tmp=(C_word)a,a+=3,tmp);
C_trace("ChickenBridge.scm: 378  spectrum-freqs");
t4=C_retrieve(lf[228]);
((C_proc3)C_retrieve_proc(t4))(3,t4,t3,((C_word*)t0)[2]);}

/* k14622 in k14605 in k14602 in k14538 in k14535 in k14532 in k14529 in k14526 in spectrum-rescale! in k11783 in k10718 in k10715 in k7274 in k7271 in k6978 in k6975 in k6971 in k6680 in k6677 in k6674 in k6671 */
static void C_ccall f_14624(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_apply(4,0,((C_word*)t0)[2],*((C_word*)lf[264]+1),t1);}

/* k14618 in k14605 in k14602 in k14538 in k14535 in k14532 in k14529 in k14526 in spectrum-rescale! in k11783 in k10718 in k10715 in k7274 in k7271 in k6978 in k6975 in k6971 in k6680 in k6677 in k6674 in k6671 */
static void C_ccall f_14620(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[12],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_14620,2,t0,t1);}
if(C_truep(t1)){
t2=((C_word*)t0)[3];
f_14543(2,t2,C_SCHEME_UNDEFINED);}
else{
t2=((C_word*)t0)[2];
t3=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_13987,a[2]=((C_word*)t0)[3],a[3]=t2,tmp=(C_word)a,a+=4,tmp);
t4=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_14062,a[2]=((C_word)li198),tmp=(C_word)a,a+=3,tmp);
t5=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_14070,a[2]=t2,a[3]=t4,a[4]=t3,tmp=(C_word)a,a+=5,tmp);
C_trace("ChickenBridge.scm: 378  spectrum-freqs");
t6=C_retrieve(lf[228]);
((C_proc3)C_retrieve_proc(t6))(3,t6,t5,t2);}}

/* k14068 in k14618 in k14605 in k14602 in k14538 in k14535 in k14532 in k14529 in k14526 in spectrum-rescale! in k11783 in k10718 in k10715 in k7274 in k7271 in k6978 in k6975 in k6971 in k6680 in k6677 in k6674 in k6671 */
static void C_ccall f_14070(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[5],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_14070,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_14074,a[2]=t1,a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],tmp=(C_word)a,a+=5,tmp);
C_trace("ChickenBridge.scm: 378  spectrum-amps");
t3=C_retrieve(lf[230]);
((C_proc3)C_retrieve_proc(t3))(3,t3,t2,((C_word*)t0)[2]);}

/* k14072 in k14068 in k14618 in k14605 in k14602 in k14538 in k14535 in k14532 in k14529 in k14526 in spectrum-rescale! in k11783 in k10718 in k10715 in k7274 in k7271 in k6978 in k6975 in k6971 in k6680 in k6677 in k6674 in k6671 */
static void C_ccall f_14074(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 378  map");
t2=*((C_word*)lf[263]+1);
((C_proc5)C_retrieve_proc(t2))(5,t2,((C_word*)t0)[4],((C_word*)t0)[3],((C_word*)t0)[2],t1);}

/* a14061 in k14618 in k14605 in k14602 in k14538 in k14535 in k14532 in k14529 in k14526 in spectrum-rescale! in k11783 in k10718 in k10715 in k7274 in k7271 in k6978 in k6975 in k6971 in k6680 in k6677 in k6674 in k6671 */
static void C_ccall f_14062(C_word c,C_word t0,C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word ab[6],*a=ab;
if(c!=4) C_bad_argc_2(c,4,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr4,(void*)f_14062,4,t0,t1,t2,t3);}
t4=t1;
((C_proc2)(void*)(*((C_word*)t4+1)))(2,t4,(C_word)C_a_i_list(&a,2,t2,t3));}

/* k13985 in k14618 in k14605 in k14602 in k14538 in k14535 in k14532 in k14529 in k14526 in spectrum-rescale! in k11783 in k10718 in k10715 in k7274 in k7271 in k6978 in k6975 in k6971 in k6680 in k6677 in k6674 in k6671 */
static void C_ccall f_13987(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[10],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_13987,2,t0,t1);}
t2=t1;
t3=(*a=C_VECTOR_TYPE|1,a[1]=t2,tmp=(C_word)a,a+=2,tmp);
t4=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_13991,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=t3,tmp=(C_word)a,a+=5,tmp);
t5=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_14048,a[2]=((C_word)li197),tmp=(C_word)a,a+=3,tmp);
C_trace("ChickenBridge.scm: 378  sort!");
t6=C_retrieve(lf[262]);
((C_proc4)C_retrieve_proc(t6))(4,t6,t4,((C_word*)t3)[1],t5);}

/* a14047 in k13985 in k14618 in k14605 in k14602 in k14538 in k14535 in k14532 in k14529 in k14526 in spectrum-rescale! in k11783 in k10718 in k10715 in k7274 in k7271 in k6978 in k6975 in k6971 in k6680 in k6677 in k6674 in k6671 */
static void C_ccall f_14048(C_word c,C_word t0,C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word t6;
C_word *a;
if(c!=4) C_bad_argc_2(c,4,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr4,(void*)f_14048,4,t0,t1,t2,t3);}
t4=(C_word)C_i_car(t2);
t5=(C_word)C_i_car(t3);
t6=t1;
((C_proc2)(void*)(*((C_word*)t6+1)))(2,t6,(C_word)C_i_lessp(t4,t5));}

/* k13989 in k13985 in k14618 in k14605 in k14602 in k14538 in k14535 in k14532 in k14529 in k14526 in spectrum-rescale! in k11783 in k10718 in k10715 in k7274 in k7271 in k6978 in k6975 in k6971 in k6680 in k6677 in k6674 in k6671 */
static void C_ccall f_13991(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_13991,2,t0,t1);}
t2=C_mutate(((C_word *)((C_word*)t0)[4])+1,t1);
t3=((C_word*)((C_word*)t0)[4])[1];
t4=(C_word)C_i_car(((C_word*)((C_word*)t0)[4])[1]);
t5=C_SCHEME_UNDEFINED;
t6=(*a=C_VECTOR_TYPE|1,a[1]=t5,tmp=(C_word)a,a+=2,tmp);
t7=C_set_block_item(t6,0,(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_13999,a[2]=t6,a[3]=t3,a[4]=t4,a[5]=((C_word*)t0)[3],a[6]=((C_word)li196),tmp=(C_word)a,a+=7,tmp));
t8=((C_word*)t6)[1];
f_13999(t8,((C_word*)t0)[2],((C_word*)((C_word*)t0)[4])[1],t4);}

/* do1370 in k13989 in k13985 in k14618 in k14605 in k14602 in k14538 in k14535 in k14532 in k14529 in k14526 in spectrum-rescale! in k11783 in k10718 in k10715 in k7274 in k7271 in k6978 in k6975 in k6971 in k6680 in k6677 in k6674 in k6671 */
static void C_fcall f_13999(C_word t0,C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word t14;
C_word ab[13],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_13999,NULL,4,t0,t1,t2,t3);}
t4=(*a=C_VECTOR_TYPE|1,a[1]=t3,tmp=(C_word)a,a+=2,tmp);
if(C_truep((C_word)C_i_nullp(t2))){
t5=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_14009,a[2]=((C_word*)t0)[4],a[3]=((C_word*)t0)[5],a[4]=t1,tmp=(C_word)a,a+=5,tmp);
C_trace("ChickenBridge.scm: 378  spectrum-freqs-set!");
f_11748(t5,((C_word*)t0)[5],((C_word*)t0)[3]);}
else{
t5=(C_word)C_i_car(t2);
t6=(C_word)C_i_car(t5);
t7=(C_word)C_i_cdr(t5);
t8=(C_word)C_i_set_cdr(((C_word*)t4)[1],t7);
t9=(C_word)C_i_cdr(((C_word*)t4)[1]);
t10=C_set_block_item(t4,0,t9);
t11=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_14032,a[2]=t4,a[3]=t1,a[4]=((C_word*)t0)[2],a[5]=t2,tmp=(C_word)a,a+=6,tmp);
t12=*((C_word*)lf[250]+1);
t13=t12;
((C_proc4)C_retrieve_proc(t13))(4,t13,t11,t2,t6);}}

/* k14030 in do1370 in k13989 in k13985 in k14618 in k14605 in k14602 in k14538 in k14535 in k14532 in k14529 in k14526 in spectrum-rescale! in k11783 in k10718 in k10715 in k7274 in k7271 in k6978 in k6975 in k6971 in k6680 in k6677 in k6674 in k6671 */
static void C_ccall f_14032(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word *a;
t2=(C_word)C_i_cdr(((C_word*)t0)[5]);
t3=((C_word*)((C_word*)t0)[4])[1];
f_13999(t3,((C_word*)t0)[3],t2,((C_word*)((C_word*)t0)[2])[1]);}

/* k14007 in do1370 in k13989 in k13985 in k14618 in k14605 in k14602 in k14538 in k14535 in k14532 in k14529 in k14526 in spectrum-rescale! in k11783 in k10718 in k10715 in k7274 in k7271 in k6978 in k6975 in k6971 in k6680 in k6677 in k6674 in k6671 */
static void C_ccall f_14009(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[4],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_14009,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_14012,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],tmp=(C_word)a,a+=4,tmp);
t3=(C_word)C_i_cdr(((C_word*)t0)[2]);
C_trace("ChickenBridge.scm: 378  spectrum-amps-set!");
f_11766(t2,((C_word*)t0)[3],t3);}

/* k14010 in k14007 in do1370 in k13989 in k13985 in k14618 in k14605 in k14602 in k14538 in k14535 in k14532 in k14529 in k14526 in spectrum-rescale! in k11783 in k10718 in k10715 in k7274 in k7271 in k6978 in k6975 in k6971 in k6680 in k6677 in k6674 in k6671 */
static void C_ccall f_14012(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
t2=((C_word*)t0)[3];
((C_proc2)(void*)(*((C_word*)t2+1)))(2,t2,((C_word*)t0)[2]);}

/* do1472 in k14538 in k14535 in k14532 in k14529 in k14526 in spectrum-rescale! in k11783 in k10718 in k10715 in k7274 in k7271 in k6978 in k6975 in k6971 in k6680 in k6677 in k6674 in k6671 */
static void C_fcall f_14584(C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
loop:
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_14584,NULL,3,t0,t1,t2);}
if(C_truep((C_word)C_i_nullp(t2))){
t3=t1;
((C_proc2)(void*)(*((C_word*)t3+1)))(2,t3,C_SCHEME_FALSE);}
else{
t3=(C_word)C_i_set_car(t2,((C_word*)((C_word*)t0)[3])[1]);
t4=(C_word)C_i_cdr(t2);
t6=t1;
t7=t4;
t1=t6;
t2=t7;
goto loop;}}

/* do1467 in k14538 in k14535 in k14532 in k14529 in k14526 in spectrum-rescale! in k11783 in k10718 in k10715 in k7274 in k7271 in k6978 in k6975 in k6971 in k6680 in k6677 in k6674 in k6671 */
static void C_fcall f_14554(C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word *a;
loop:
a=C_alloc(4);
C_check_for_interrupt;
if(!C_stack_probe(a)){
C_save_and_reclaim((void*)trf_14554,NULL,3,t0,t1,t2);}
if(C_truep((C_word)C_i_nullp(t2))){
t3=t1;
((C_proc2)(void*)(*((C_word*)t3+1)))(2,t3,C_SCHEME_FALSE);}
else{
t3=(C_word)C_i_car(t2);
t4=(C_word)C_a_i_times(&a,2,t3,((C_word*)((C_word*)t0)[3])[1]);
t5=(C_word)C_i_set_car(t2,t4);
t6=(C_word)C_i_cdr(t2);
t8=t1;
t9=t6;
t1=t8;
t2=t9;
goto loop;}}

/* k14541 in k14538 in k14535 in k14532 in k14529 in k14526 in spectrum-rescale! in k11783 in k10718 in k10715 in k7274 in k7271 in k6978 in k6975 in k6971 in k6680 in k6677 in k6674 in k6671 */
static void C_ccall f_14543(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
t2=((C_word*)t0)[3];
((C_proc2)(void*)(*((C_word*)t2+1)))(2,t2,((C_word*)t0)[2]);}

/* spectrum-flip! in k11783 in k10718 in k10715 in k7274 in k7271 in k6978 in k6975 in k6971 in k6680 in k6677 in k6674 in k6671 */
static void C_ccall f_14467(C_word c,C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word ab[4],*a=ab;
if(c!=3) C_bad_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr3,(void*)f_14467,3,t0,t1,t2);}
t3=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_14475,a[2]=t1,a[3]=t2,tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 378  spectrum-maxfreq");
t4=C_retrieve(lf[235]);
((C_proc3)C_retrieve_proc(t4))(3,t4,t3,t2);}

/* k14473 in spectrum-flip! in k11783 in k10718 in k10715 in k7274 in k7271 in k6978 in k6975 in k6971 in k6680 in k6677 in k6674 in k6671 */
static void C_ccall f_14475(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[5],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_14475,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_14479,a[2]=t1,a[3]=((C_word*)t0)[2],a[4]=((C_word*)t0)[3],tmp=(C_word)a,a+=5,tmp);
C_trace("ChickenBridge.scm: 378  spectrum-minfreq");
t3=C_retrieve(lf[234]);
((C_proc3)C_retrieve_proc(t3))(3,t3,t2,((C_word*)t0)[3]);}

/* k14477 in k14473 in spectrum-flip! in k11783 in k10718 in k10715 in k7274 in k7271 in k6978 in k6975 in k6971 in k6680 in k6677 in k6674 in k6671 */
static void C_ccall f_14479(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[6],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_14479,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_14483,a[2]=t1,a[3]=((C_word*)t0)[2],a[4]=((C_word*)t0)[3],a[5]=((C_word*)t0)[4],tmp=(C_word)a,a+=6,tmp);
C_trace("ChickenBridge.scm: 378  spectrum-freqs");
t3=C_retrieve(lf[228]);
((C_proc3)C_retrieve_proc(t3))(3,t3,t2,((C_word*)t0)[4]);}

/* k14481 in k14477 in k14473 in spectrum-flip! in k11783 in k10718 in k10715 in k7274 in k7271 in k6978 in k6975 in k6971 in k6680 in k6677 in k6674 in k6671 */
static void C_ccall f_14483(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_14483,2,t0,t1);}
t2=C_SCHEME_UNDEFINED;
t3=(*a=C_VECTOR_TYPE|1,a[1]=t2,tmp=(C_word)a,a+=2,tmp);
t4=C_set_block_item(t3,0,(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_14489,a[2]=t3,a[3]=((C_word*)t0)[5],a[4]=((C_word)li192),tmp=(C_word)a,a+=5,tmp));
t5=((C_word*)t3)[1];
f_14489(t5,((C_word*)t0)[4],((C_word*)t0)[3],((C_word*)t0)[2],t1,C_SCHEME_END_OF_LIST);}

/* do1448 in k14481 in k14477 in k14473 in spectrum-flip! in k11783 in k10718 in k10715 in k7274 in k7271 in k6978 in k6975 in k6971 in k6680 in k6677 in k6674 in k6671 */
static void C_fcall f_14489(C_word t0,C_word t1,C_word t2,C_word t3,C_word t4,C_word t5){
C_word tmp;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word t14;
C_word t15;
C_word t16;
C_word t17;
C_word t18;
C_word *a;
loop:
a=C_alloc(15);
C_check_for_interrupt;
if(!C_stack_probe(a)){
C_save_and_reclaim((void*)trf_14489,NULL,6,t0,t1,t2,t3,t4,t5);}
if(C_truep((C_word)C_i_nullp(t4))){
t6=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_14499,a[2]=((C_word*)t0)[3],a[3]=t1,tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 378  spectrum-freqs-set!");
f_11748(t6,((C_word*)t0)[3],t5);}
else{
t6=(C_word)C_i_car(t4);
t7=(C_word)C_a_i_divide(&a,2,t2,t6);
t8=(C_word)C_a_i_times(&a,2,t3,t7);
t9=(C_word)C_a_i_cons(&a,2,t8,t5);
t10=t5=t9;
t11=(C_word)C_i_cdr(t4);
t14=t1;
t15=t2;
t16=t3;
t17=t11;
t18=t5;
t1=t14;
t2=t15;
t3=t16;
t4=t17;
t5=t18;
goto loop;}}

/* k14497 in do1448 in k14481 in k14477 in k14473 in spectrum-flip! in k11783 in k10718 in k10715 in k7274 in k7271 in k6978 in k6975 in k6971 in k6680 in k6677 in k6674 in k6671 */
static void C_ccall f_14499(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
t2=((C_word*)t0)[3];
((C_proc2)(void*)(*((C_word*)t2+1)))(2,t2,((C_word*)t0)[2]);}

/* rm-spectrum in k11783 in k10718 in k10715 in k7274 in k7271 in k6978 in k6975 in k6971 in k6680 in k6677 in k6674 in k6671 */
static void C_ccall f_14255(C_word c,C_word t0,C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word ab[17],*a=ab;
if(c!=4) C_bad_argc_2(c,4,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr4,(void*)f_14255,4,t0,t1,t2,t3);}
t4=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_14257,a[2]=((C_word)li184),tmp=(C_word)a,a+=3,tmp);
t5=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_14274,a[2]=((C_word)li185),tmp=(C_word)a,a+=3,tmp);
t6=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_14291,a[2]=((C_word)li186),tmp=(C_word)a,a+=3,tmp);
t7=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_14323,a[2]=t4,a[3]=t2,a[4]=t3,a[5]=t5,a[6]=t6,a[7]=t1,tmp=(C_word)a,a+=8,tmp);
C_trace("ChickenBridge.scm: 378  getfreqs");
f_14257(t7,t2);}

/* k14321 in rm-spectrum in k11783 in k10718 in k10715 in k7274 in k7271 in k6978 in k6975 in k6971 in k6680 in k6677 in k6674 in k6671 */
static void C_ccall f_14323(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[8],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_14323,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_14326,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=t1,a[7]=((C_word*)t0)[7],tmp=(C_word)a,a+=8,tmp);
C_trace("ChickenBridge.scm: 378  getfreqs");
f_14257(t2,((C_word*)t0)[4]);}

/* k14324 in k14321 in rm-spectrum in k11783 in k10718 in k10715 in k7274 in k7271 in k6978 in k6975 in k6971 in k6680 in k6677 in k6674 in k6671 */
static void C_ccall f_14326(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[8],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_14326,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_14329,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=t1,a[6]=((C_word*)t0)[6],a[7]=((C_word*)t0)[7],tmp=(C_word)a,a+=8,tmp);
C_trace("ChickenBridge.scm: 378  getamps");
f_14274(t2,((C_word*)t0)[2]);}

/* k14327 in k14324 in k14321 in rm-spectrum in k11783 in k10718 in k10715 in k7274 in k7271 in k6978 in k6975 in k6971 in k6680 in k6677 in k6674 in k6671 */
static void C_ccall f_14329(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[6],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_14329,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_14332,a[2]=((C_word*)t0)[4],a[3]=((C_word*)t0)[5],a[4]=((C_word*)t0)[6],a[5]=((C_word*)t0)[7],tmp=(C_word)a,a+=6,tmp);
C_trace("ChickenBridge.scm: 378  getamps");
f_14274(t2,((C_word*)t0)[2]);}

/* k14330 in k14327 in k14324 in k14321 in rm-spectrum in k11783 in k10718 in k10715 in k7274 in k7271 in k6978 in k6975 in k6971 in k6680 in k6677 in k6674 in k6671 */
static void C_ccall f_14332(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[6],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_14332,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_14335,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],tmp=(C_word)a,a+=6,tmp);
C_trace("ChickenBridge.scm: 378  make-spectrum");
f_11700(t2,C_SCHEME_FALSE,C_fix(0),C_SCHEME_END_OF_LIST,C_SCHEME_END_OF_LIST);}

/* k14333 in k14330 in k14327 in k14324 in k14321 in rm-spectrum in k11783 in k10718 in k10715 in k7274 in k7271 in k6978 in k6975 in k6971 in k6680 in k6677 in k6674 in k6671 */
static void C_ccall f_14335(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word ab[31],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_14335,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_14338,a[2]=t1,a[3]=((C_word*)t0)[5],tmp=(C_word)a,a+=4,tmp);
if(C_truep((C_word)C_i_pairp(((C_word*)t0)[4]))){
if(C_truep((C_word)C_i_pairp(((C_word*)t0)[3]))){
t3=C_SCHEME_UNDEFINED;
t4=(*a=C_VECTOR_TYPE|1,a[1]=t3,tmp=(C_word)a,a+=2,tmp);
t5=C_set_block_item(t4,0,(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_14352,a[2]=((C_word*)t0)[4],a[3]=t1,a[4]=((C_word*)t0)[2],a[5]=t4,a[6]=((C_word)li188),tmp=(C_word)a,a+=7,tmp));
t6=((C_word*)t4)[1];
f_14352(t6,t2,((C_word*)t0)[3]);}
else{
t3=C_SCHEME_UNDEFINED;
t4=(*a=C_VECTOR_TYPE|1,a[1]=t3,tmp=(C_word)a,a+=2,tmp);
t5=C_set_block_item(t4,0,(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_14401,a[2]=((C_word*)t0)[3],a[3]=t1,a[4]=((C_word*)t0)[2],a[5]=t4,a[6]=((C_word)li189),tmp=(C_word)a,a+=7,tmp));
t6=((C_word*)t4)[1];
f_14401(t6,t2,((C_word*)t0)[4]);}}
else{
if(C_truep((C_word)C_i_pairp(((C_word*)t0)[3]))){
t3=C_SCHEME_UNDEFINED;
t4=(*a=C_VECTOR_TYPE|1,a[1]=t3,tmp=(C_word)a,a+=2,tmp);
t5=C_set_block_item(t4,0,(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_14433,a[2]=((C_word*)t0)[4],a[3]=t1,a[4]=((C_word*)t0)[2],a[5]=t4,a[6]=((C_word)li190),tmp=(C_word)a,a+=7,tmp));
t6=((C_word*)t4)[1];
f_14433(t6,t2,((C_word*)t0)[3]);}
else{
C_trace("ChickenBridge.scm: 378  sums-and-diffs");
f_14291(t2,t1,((C_word*)t0)[4],((C_word*)t0)[3]);}}}

/* do1441 in k14333 in k14330 in k14327 in k14324 in k14321 in rm-spectrum in k11783 in k10718 in k10715 in k7274 in k7271 in k6978 in k6975 in k6971 in k6680 in k6677 in k6674 in k6671 */
static void C_fcall f_14433(C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word t5;
C_word ab[5],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_14433,NULL,3,t0,t1,t2);}
if(C_truep((C_word)C_i_nullp(t2))){
t3=t1;
((C_proc2)(void*)(*((C_word*)t3+1)))(2,t3,C_SCHEME_FALSE);}
else{
t3=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_14443,a[2]=t1,a[3]=((C_word*)t0)[5],a[4]=t2,tmp=(C_word)a,a+=5,tmp);
t4=(C_word)C_i_car(t2);
C_trace("ChickenBridge.scm: 378  sums-and-diffs");
f_14291(t3,((C_word*)t0)[3],((C_word*)t0)[2],t4);}}

/* k14441 in do1441 in k14333 in k14330 in k14327 in k14324 in k14321 in rm-spectrum in k11783 in k10718 in k10715 in k7274 in k7271 in k6978 in k6975 in k6971 in k6680 in k6677 in k6674 in k6671 */
static void C_ccall f_14443(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word *a;
t2=(C_word)C_i_cdr(((C_word*)t0)[4]);
t3=((C_word*)((C_word*)t0)[3])[1];
f_14433(t3,((C_word*)t0)[2],t2);}

/* do1436 in k14333 in k14330 in k14327 in k14324 in k14321 in rm-spectrum in k11783 in k10718 in k10715 in k7274 in k7271 in k6978 in k6975 in k6971 in k6680 in k6677 in k6674 in k6671 */
static void C_fcall f_14401(C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word t5;
C_word ab[5],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_14401,NULL,3,t0,t1,t2);}
if(C_truep((C_word)C_i_nullp(t2))){
t3=t1;
((C_proc2)(void*)(*((C_word*)t3+1)))(2,t3,C_SCHEME_FALSE);}
else{
t3=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_14411,a[2]=t1,a[3]=((C_word*)t0)[5],a[4]=t2,tmp=(C_word)a,a+=5,tmp);
t4=(C_word)C_i_car(t2);
C_trace("ChickenBridge.scm: 378  sums-and-diffs");
f_14291(t3,((C_word*)t0)[3],t4,((C_word*)t0)[2]);}}

/* k14409 in do1436 in k14333 in k14330 in k14327 in k14324 in k14321 in rm-spectrum in k11783 in k10718 in k10715 in k7274 in k7271 in k6978 in k6975 in k6971 in k6680 in k6677 in k6674 in k6671 */
static void C_ccall f_14411(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word *a;
t2=(C_word)C_i_cdr(((C_word*)t0)[4]);
t3=((C_word*)((C_word*)t0)[3])[1];
f_14401(t3,((C_word*)t0)[2],t2);}

/* do1426 in k14333 in k14330 in k14327 in k14324 in k14321 in rm-spectrum in k11783 in k10718 in k10715 in k7274 in k7271 in k6978 in k6975 in k6971 in k6680 in k6677 in k6674 in k6671 */
static void C_fcall f_14352(C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word ab[14],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_14352,NULL,3,t0,t1,t2);}
if(C_truep((C_word)C_i_nullp(t2))){
t3=t1;
((C_proc2)(void*)(*((C_word*)t3+1)))(2,t3,C_SCHEME_FALSE);}
else{
t3=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_14362,a[2]=t1,a[3]=((C_word*)t0)[5],a[4]=t2,tmp=(C_word)a,a+=5,tmp);
t4=C_SCHEME_UNDEFINED;
t5=(*a=C_VECTOR_TYPE|1,a[1]=t4,tmp=(C_word)a,a+=2,tmp);
t6=C_set_block_item(t5,0,(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_14371,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=t2,a[5]=t5,a[6]=((C_word)li187),tmp=(C_word)a,a+=7,tmp));
t7=((C_word*)t5)[1];
f_14371(t7,t3,((C_word*)t0)[2]);}}

/* do1429 in do1426 in k14333 in k14330 in k14327 in k14324 in k14321 in rm-spectrum in k11783 in k10718 in k10715 in k7274 in k7271 in k6978 in k6975 in k6971 in k6680 in k6677 in k6674 in k6671 */
static void C_fcall f_14371(C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[5],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_14371,NULL,3,t0,t1,t2);}
if(C_truep((C_word)C_i_nullp(t2))){
t3=t1;
((C_proc2)(void*)(*((C_word*)t3+1)))(2,t3,C_SCHEME_FALSE);}
else{
t3=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_14381,a[2]=t1,a[3]=((C_word*)t0)[5],a[4]=t2,tmp=(C_word)a,a+=5,tmp);
t4=(C_word)C_i_car(t2);
t5=(C_word)C_i_car(((C_word*)t0)[4]);
C_trace("ChickenBridge.scm: 378  sums-and-diffs");
f_14291(t3,((C_word*)t0)[2],t4,t5);}}

/* k14379 in do1429 in do1426 in k14333 in k14330 in k14327 in k14324 in k14321 in rm-spectrum in k11783 in k10718 in k10715 in k7274 in k7271 in k6978 in k6975 in k6971 in k6680 in k6677 in k6674 in k6671 */
static void C_ccall f_14381(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word *a;
t2=(C_word)C_i_cdr(((C_word*)t0)[4]);
t3=((C_word*)((C_word*)t0)[3])[1];
f_14371(t3,((C_word*)t0)[2],t2);}

/* k14360 in do1426 in k14333 in k14330 in k14327 in k14324 in k14321 in rm-spectrum in k11783 in k10718 in k10715 in k7274 in k7271 in k6978 in k6975 in k6971 in k6680 in k6677 in k6674 in k6671 */
static void C_ccall f_14362(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word *a;
t2=(C_word)C_i_cdr(((C_word*)t0)[4]);
t3=((C_word*)((C_word*)t0)[3])[1];
f_14352(t3,((C_word*)t0)[2],t2);}

/* k14336 in k14333 in k14330 in k14327 in k14324 in k14321 in rm-spectrum in k11783 in k10718 in k10715 in k7274 in k7271 in k6978 in k6975 in k6971 in k6680 in k6677 in k6674 in k6671 */
static void C_ccall f_14338(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
t2=((C_word*)t0)[3];
((C_proc2)(void*)(*((C_word*)t2+1)))(2,t2,((C_word*)t0)[2]);}

/* sums-and-diffs in rm-spectrum in k11783 in k10718 in k10715 in k7274 in k7271 in k6978 in k6975 in k6971 in k6680 in k6677 in k6674 in k6671 */
static void C_fcall f_14291(C_word t1,C_word t2,C_word t3,C_word t4){
C_word tmp;
C_word t5;
C_word t6;
C_word t7;
C_word ab[10],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_14291,NULL,4,t1,t2,t3,t4);}
if(C_truep((C_word)C_i_nequalp(t3,t4))){
t5=t1;
((C_proc2)(void*)(*((C_word*)t5+1)))(2,t5,C_SCHEME_UNDEFINED);}
else{
t5=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_14301,a[2]=t2,a[3]=t1,a[4]=t4,a[5]=t3,tmp=(C_word)a,a+=6,tmp);
t6=(C_word)C_a_i_plus(&a,2,t3,t4);
C_trace("ChickenBridge.scm: 378  spectrum-add!");
t7=C_retrieve(lf[254]);
((C_proc5)C_retrieve_proc(t7))(5,t7,t5,t2,t6,lf[259]);}}

/* k14299 in sums-and-diffs in rm-spectrum in k11783 in k10718 in k10715 in k7274 in k7271 in k6978 in k6975 in k6971 in k6680 in k6677 in k6674 in k6671 */
static void C_ccall f_14301(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[8],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_14301,2,t0,t1);}
t2=(C_word)C_a_i_minus(&a,2,((C_word*)t0)[5],((C_word*)t0)[4]);
t3=(C_word)C_a_i_abs(&a,1,t2);
C_trace("ChickenBridge.scm: 378  spectrum-add!");
t4=C_retrieve(lf[254]);
((C_proc5)C_retrieve_proc(t4))(5,t4,((C_word*)t0)[3],((C_word*)t0)[2],t3,lf[258]);}

/* getamps in rm-spectrum in k11783 in k10718 in k10715 in k7274 in k7271 in k6978 in k6975 in k6971 in k6680 in k6677 in k6674 in k6671 */
static void C_fcall f_14274(C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word ab[4],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_14274,NULL,2,t1,t2);}
t3=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_14281,a[2]=t2,a[3]=t1,tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 378  spectrum?");
f_11706(t3,t2);}

/* k14279 in getamps in rm-spectrum in k11783 in k10718 in k10715 in k7274 in k7271 in k6978 in k6975 in k6971 in k6680 in k6677 in k6674 in k6671 */
static void C_ccall f_14281(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word *a;
if(C_truep(t1)){
C_trace("ChickenBridge.scm: 378  spectrum-amps");
t2=C_retrieve(lf[230]);
((C_proc3)C_retrieve_proc(t2))(3,t2,((C_word*)t0)[3],((C_word*)t0)[2]);}
else{
t2=(C_word)C_i_pairp(((C_word*)t0)[2]);
t3=((C_word*)t0)[3];
((C_proc2)(void*)(*((C_word*)t3+1)))(2,t3,(C_truep(t2)?lf[256]:lf[257]));}}

/* getfreqs in rm-spectrum in k11783 in k10718 in k10715 in k7274 in k7271 in k6978 in k6975 in k6971 in k6680 in k6677 in k6674 in k6671 */
static void C_fcall f_14257(C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word ab[4],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_14257,NULL,2,t1,t2);}
t3=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_14264,a[2]=t2,a[3]=t1,tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 378  spectrum?");
f_11706(t3,t2);}

/* k14262 in getfreqs in rm-spectrum in k11783 in k10718 in k10715 in k7274 in k7271 in k6978 in k6975 in k6971 in k6680 in k6677 in k6674 in k6671 */
static void C_ccall f_14264(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word *a;
if(C_truep(t1)){
C_trace("ChickenBridge.scm: 378  spectrum-freqs");
t2=C_retrieve(lf[228]);
((C_proc3)C_retrieve_proc(t2))(3,t2,((C_word*)t0)[3],((C_word*)t0)[2]);}
else{
t2=(C_word)C_i_pairp(((C_word*)t0)[2]);
t3=((C_word*)t0)[3];
((C_proc2)(void*)(*((C_word*)t3+1)))(2,t3,(C_truep(t2)?((C_word*)t0)[2]:((C_word*)t0)[2]));}}

/* spectrum-add! in k11783 in k10718 in k10715 in k7274 in k7271 in k6978 in k6975 in k6971 in k6680 in k6677 in k6674 in k6671 */
static void C_ccall f_14076(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4){
C_word tmp;
C_word t5;
C_word t6;
C_word ab[6],*a=ab;
if(c!=5) C_bad_argc_2(c,5,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr5,(void*)f_14076,5,t0,t1,t2,t3,t4);}
t5=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_14084,a[2]=t1,a[3]=t3,a[4]=t4,a[5]=t2,tmp=(C_word)a,a+=6,tmp);
C_trace("ChickenBridge.scm: 378  spectrum-freqs");
t6=C_retrieve(lf[228]);
((C_proc3)C_retrieve_proc(t6))(3,t6,t5,t2);}

/* k14082 in spectrum-add! in k11783 in k10718 in k10715 in k7274 in k7271 in k6978 in k6975 in k6971 in k6680 in k6677 in k6674 in k6671 */
static void C_ccall f_14084(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_14084,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_14088,a[2]=t1,a[3]=((C_word*)t0)[2],a[4]=((C_word*)t0)[3],a[5]=((C_word*)t0)[4],a[6]=((C_word*)t0)[5],tmp=(C_word)a,a+=7,tmp);
C_trace("ChickenBridge.scm: 378  spectrum-amps");
t3=C_retrieve(lf[230]);
((C_proc3)C_retrieve_proc(t3))(3,t3,t2,((C_word*)t0)[5]);}

/* k14086 in k14082 in spectrum-add! in k11783 in k10718 in k10715 in k7274 in k7271 in k6978 in k6975 in k6971 in k6680 in k6677 in k6674 in k6671 */
static void C_ccall f_14088(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_14088,2,t0,t1);}
t2=C_SCHEME_UNDEFINED;
t3=(*a=C_VECTOR_TYPE|1,a[1]=t2,tmp=(C_word)a,a+=2,tmp);
t4=C_set_block_item(t3,0,(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_14090,a[2]=t3,a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word)li182),tmp=(C_word)a,a+=7,tmp));
t5=((C_word*)t3)[1];
f_14090(t5,((C_word*)t0)[3],((C_word*)t0)[2],t1,C_SCHEME_END_OF_LIST,C_SCHEME_END_OF_LIST);}

/* do1386 in k14086 in k14082 in spectrum-add! in k11783 in k10718 in k10715 in k7274 in k7271 in k6978 in k6975 in k6971 in k6680 in k6677 in k6674 in k6671 */
static void C_fcall f_14090(C_word t0,C_word t1,C_word t2,C_word t3,C_word t4,C_word t5){
C_word tmp;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word ab[11],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_14090,NULL,6,t0,t1,t2,t3,t4,t5);}
t6=(C_word)C_i_nullp(t2);
t7=(*a=C_CLOSURE_TYPE|10,a[1]=(C_word)f_14100,a[2]=((C_word*)t0)[2],a[3]=t3,a[4]=t5,a[5]=((C_word*)t0)[3],a[6]=((C_word*)t0)[4],a[7]=t4,a[8]=t2,a[9]=((C_word*)t0)[5],a[10]=t1,tmp=(C_word)a,a+=11,tmp);
if(C_truep(t6)){
t8=t7;
f_14100(t8,t6);}
else{
t8=(C_word)C_i_car(t2);
t9=t7;
f_14100(t9,(C_word)C_i_greater_or_equalp(t8,((C_word*)t0)[3]));}}

/* k14098 in do1386 in k14086 in k14082 in spectrum-add! in k11783 in k10718 in k10715 in k7274 in k7271 in k6978 in k6975 in k6971 in k6680 in k6677 in k6674 in k6671 */
static void C_fcall f_14100(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word t14;
C_word t15;
C_word t16;
C_word t17;
C_word t18;
C_word t19;
C_word t20;
C_word t21;
C_word t22;
C_word t23;
C_word t24;
C_word ab[45],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_14100,NULL,2,t0,t1);}
if(C_truep(t1)){
t2=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_14103,a[2]=((C_word*)t0)[9],a[3]=((C_word*)t0)[10],tmp=(C_word)a,a+=4,tmp);
if(C_truep((C_word)C_i_nullp(((C_word*)t0)[8]))){
if(C_truep((C_word)C_i_nullp(((C_word*)t0)[7]))){
t3=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_14115,a[2]=((C_word*)t0)[6],a[3]=((C_word*)t0)[9],a[4]=t2,tmp=(C_word)a,a+=5,tmp);
t4=(C_word)C_a_i_list(&a,1,((C_word*)t0)[5]);
C_trace("ChickenBridge.scm: 378  spectrum-freqs-set!");
f_11748(t3,((C_word*)t0)[9],t4);}
else{
t3=(C_word)C_a_i_list(&a,1,((C_word*)t0)[5]);
t4=(C_word)C_i_set_cdr(((C_word*)t0)[7],t3);
t5=(C_word)C_a_i_list(&a,1,((C_word*)t0)[6]);
t6=(C_word)C_i_set_cdr(((C_word*)t0)[4],t5);
t7=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_14146,a[2]=((C_word*)t0)[9],a[3]=t2,tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 378  spectrum-size");
t8=C_retrieve(lf[226]);
((C_proc3)C_retrieve_proc(t8))(3,t8,t7,((C_word*)t0)[9]);}}
else{
t3=(C_word)C_i_car(((C_word*)t0)[8]);
if(C_truep((C_word)C_i_nequalp(t3,((C_word*)t0)[5]))){
t4=(C_word)C_i_car(((C_word*)t0)[3]);
t5=(C_word)C_a_i_plus(&a,2,t4,((C_word*)t0)[6]);
t6=t2;
f_14103(2,t6,(C_word)C_i_set_car(((C_word*)t0)[3],t5));}
else{
if(C_truep((C_word)C_i_nullp(((C_word*)t0)[7]))){
t4=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_14180,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[6],a[4]=((C_word*)t0)[9],a[5]=t2,tmp=(C_word)a,a+=6,tmp);
t5=(C_word)C_a_i_cons(&a,2,((C_word*)t0)[5],((C_word*)t0)[8]);
C_trace("ChickenBridge.scm: 378  spectrum-freqs-set!");
f_11748(t4,((C_word*)t0)[9],t5);}
else{
t4=(C_word)C_a_i_list(&a,1,((C_word*)t0)[5]);
t5=(C_word)C_a_i_list(&a,1,((C_word*)t0)[6]);
t6=(C_word)C_i_set_cdr(t4,((C_word*)t0)[8]);
t7=(C_word)C_i_set_cdr(((C_word*)t0)[7],t4);
t8=(C_word)C_i_set_cdr(t5,((C_word*)t0)[3]);
t9=(C_word)C_i_set_cdr(((C_word*)t0)[4],t5);
t10=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_14231,a[2]=((C_word*)t0)[9],a[3]=t2,tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 378  spectrum-size");
t11=C_retrieve(lf[226]);
((C_proc3)C_retrieve_proc(t11))(3,t11,t10,((C_word*)t0)[9]);}}}}
else{
t2=(C_word)C_i_cdr(((C_word*)t0)[8]);
t3=(C_word)C_i_cdr(((C_word*)t0)[3]);
t4=((C_word*)((C_word*)t0)[2])[1];
f_14090(t4,((C_word*)t0)[10],t2,t3,((C_word*)t0)[8],((C_word*)t0)[3]);}}

/* k14229 in k14098 in do1386 in k14086 in k14082 in spectrum-add! in k11783 in k10718 in k10715 in k7274 in k7271 in k6978 in k6975 in k6971 in k6680 in k6677 in k6674 in k6671 */
static void C_ccall f_14231(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[4],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_14231,2,t0,t1);}
t2=(C_word)C_a_i_plus(&a,2,t1,C_fix(1));
C_trace("ChickenBridge.scm: 378  spectrum-size-set!");
f_11730(((C_word*)t0)[3],((C_word*)t0)[2],t2);}

/* k14178 in k14098 in do1386 in k14086 in k14082 in spectrum-add! in k11783 in k10718 in k10715 in k7274 in k7271 in k6978 in k6975 in k6971 in k6680 in k6677 in k6674 in k6671 */
static void C_ccall f_14180(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_14180,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_14183,a[2]=((C_word*)t0)[4],a[3]=((C_word*)t0)[5],tmp=(C_word)a,a+=4,tmp);
t3=(C_word)C_a_i_cons(&a,2,((C_word*)t0)[3],((C_word*)t0)[2]);
C_trace("ChickenBridge.scm: 378  spectrum-amps-set!");
f_11766(t2,((C_word*)t0)[4],t3);}

/* k14181 in k14178 in k14098 in do1386 in k14086 in k14082 in spectrum-add! in k11783 in k10718 in k10715 in k7274 in k7271 in k6978 in k6975 in k6971 in k6680 in k6677 in k6674 in k6671 */
static void C_ccall f_14183(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[4],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_14183,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_14194,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 378  spectrum-size");
t3=C_retrieve(lf[226]);
((C_proc3)C_retrieve_proc(t3))(3,t3,t2,((C_word*)t0)[2]);}

/* k14192 in k14181 in k14178 in k14098 in do1386 in k14086 in k14082 in spectrum-add! in k11783 in k10718 in k10715 in k7274 in k7271 in k6978 in k6975 in k6971 in k6680 in k6677 in k6674 in k6671 */
static void C_ccall f_14194(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[4],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_14194,2,t0,t1);}
t2=(C_word)C_a_i_plus(&a,2,t1,C_fix(1));
C_trace("ChickenBridge.scm: 378  spectrum-size-set!");
f_11730(((C_word*)t0)[3],((C_word*)t0)[2],t2);}

/* k14144 in k14098 in do1386 in k14086 in k14082 in spectrum-add! in k11783 in k10718 in k10715 in k7274 in k7271 in k6978 in k6975 in k6971 in k6680 in k6677 in k6674 in k6671 */
static void C_ccall f_14146(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[4],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_14146,2,t0,t1);}
t2=(C_word)C_a_i_plus(&a,2,t1,C_fix(1));
C_trace("ChickenBridge.scm: 378  spectrum-size-set!");
f_11730(((C_word*)t0)[3],((C_word*)t0)[2],t2);}

/* k14113 in k14098 in do1386 in k14086 in k14082 in spectrum-add! in k11783 in k10718 in k10715 in k7274 in k7271 in k6978 in k6975 in k6971 in k6680 in k6677 in k6674 in k6671 */
static void C_ccall f_14115(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_14115,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_14118,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],tmp=(C_word)a,a+=4,tmp);
t3=(C_word)C_a_i_list(&a,1,((C_word*)t0)[2]);
C_trace("ChickenBridge.scm: 378  spectrum-amps-set!");
f_11766(t2,((C_word*)t0)[3],t3);}

/* k14116 in k14113 in k14098 in do1386 in k14086 in k14082 in spectrum-add! in k11783 in k10718 in k10715 in k7274 in k7271 in k6978 in k6975 in k6971 in k6680 in k6677 in k6674 in k6671 */
static void C_ccall f_14118(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 378  spectrum-size-set!");
f_11730(((C_word*)t0)[3],((C_word*)t0)[2],C_fix(1));}

/* k14101 in k14098 in do1386 in k14086 in k14082 in spectrum-add! in k11783 in k10718 in k10715 in k7274 in k7271 in k6978 in k6975 in k6971 in k6680 in k6677 in k6674 in k6671 */
static void C_ccall f_14103(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
t2=((C_word*)t0)[3];
((C_proc2)(void*)(*((C_word*)t2+1)))(2,t2,((C_word*)t0)[2]);}

/* fm-spectrum in k11783 in k10718 in k10715 in k7274 in k7271 in k6978 in k6975 in k6971 in k6680 in k6677 in k6674 in k6671 */
static void C_ccall f_13664(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4){
C_word tmp;
C_word t5;
C_word t6;
C_word t7;
C_word ab[10],*a=ab;
if(c!=5) C_bad_argc_2(c,5,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr5,(void*)f_13664,5,t0,t1,t2,t3,t4);}
t5=(C_word)C_a_i_times(&a,2,t2,t3);
t6=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_13981,a[2]=t4,a[3]=t2,a[4]=t5,a[5]=t1,tmp=(C_word)a,a+=6,tmp);
C_trace("ChickenBridge.scm: 378  round");
t7=*((C_word*)lf[136]+1);
((C_proc3)C_retrieve_proc(t7))(3,t7,t6,t4);}

/* k13979 in fm-spectrum in k11783 in k10718 in k10715 in k7274 in k7271 in k6978 in k6975 in k6971 in k6680 in k6677 in k6674 in k6671 */
static void C_ccall f_13981(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word ab[25],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_13981,2,t0,t1);}
t2=(C_word)C_i_inexact_to_exact(t1);
t3=(C_word)C_a_i_plus(&a,2,t2,C_fix(1));
t4=C_SCHEME_END_OF_LIST;
t5=(*a=C_VECTOR_TYPE|1,a[1]=t4,tmp=(C_word)a,a+=2,tmp);
t6=(C_word)C_a_i_list(&a,1,C_SCHEME_FALSE);
t7=t6;
t8=(*a=C_VECTOR_TYPE|1,a[1]=t7,tmp=(C_word)a,a+=2,tmp);
t9=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_13677,a[2]=((C_word*)t0)[5],a[3]=t5,tmp=(C_word)a,a+=4,tmp);
t10=(*a=C_CLOSURE_TYPE|9,a[1]=(C_word)f_13910,a[2]=t9,a[3]=((C_word*)t0)[2],a[4]=t8,a[5]=((C_word*)t0)[3],a[6]=((C_word*)t0)[4],a[7]=t5,a[8]=t6,a[9]=t3,tmp=(C_word)a,a+=10,tmp);
C_trace("ChickenBridge.scm: 378  -");
C_minus(3,0,t10,t3);}

/* k13908 in k13979 in fm-spectrum in k11783 in k10718 in k10715 in k7274 in k7271 in k6978 in k6975 in k6971 in k6680 in k6677 in k6674 in k6671 */
static void C_ccall f_13910(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[13],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_13910,2,t0,t1);}
t2=C_SCHEME_UNDEFINED;
t3=(*a=C_VECTOR_TYPE|1,a[1]=t2,tmp=(C_word)a,a+=2,tmp);
t4=C_set_block_item(t3,0,(*a=C_CLOSURE_TYPE|10,a[1]=(C_word)f_13912,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=t3,a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],a[7]=((C_word*)t0)[7],a[8]=((C_word*)t0)[8],a[9]=((C_word*)t0)[9],a[10]=((C_word)li180),tmp=(C_word)a,a+=11,tmp));
t5=((C_word*)t3)[1];
f_13912(t5,((C_word*)t0)[2],t1,C_SCHEME_FALSE,C_SCHEME_FALSE);}

/* do1308 in k13908 in k13979 in fm-spectrum in k11783 in k10718 in k10715 in k7274 in k7271 in k6978 in k6975 in k6971 in k6680 in k6677 in k6674 in k6671 */
static void C_fcall f_13912(C_word t0,C_word t1,C_word t2,C_word t3,C_word t4){
C_word tmp;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word t14;
C_word t15;
C_word ab[23],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_13912,NULL,5,t0,t1,t2,t3,t4);}
t5=(*a=C_VECTOR_TYPE|1,a[1]=t3,tmp=(C_word)a,a+=2,tmp);
t6=(*a=C_VECTOR_TYPE|1,a[1]=t4,tmp=(C_word)a,a+=2,tmp);
if(C_truep((C_word)C_i_greaterp(t2,((C_word*)t0)[9]))){
t7=(C_word)C_i_cdr(((C_word*)t0)[8]);
t8=C_mutate(((C_word *)((C_word*)t0)[7])+1,t7);
t9=t1;
((C_proc2)(void*)(*((C_word*)t9+1)))(2,t9,t8);}
else{
t7=(C_word)C_a_i_times(&a,2,((C_word*)t0)[6],t2);
t8=(C_word)C_a_i_plus(&a,2,((C_word*)t0)[5],t7);
t9=C_set_block_item(t5,0,t8);
t10=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_13931,a[2]=((C_word*)t0)[3],a[3]=t5,a[4]=t1,a[5]=((C_word*)t0)[4],a[6]=t2,a[7]=t6,tmp=(C_word)a,a+=8,tmp);
t11=t2;
t12=((C_word*)t0)[2];
t13=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_8457,a[2]=((C_word)li179),tmp=(C_word)a,a+=3,tmp);
((C_proc4)(void*)(*((C_word*)t13+1)))(4,t13,t10,t11,t12);}}

/* f_8457 in do1308 in k13908 in k13979 in fm-spectrum in k11783 in k10718 in k10715 in k7274 in k7271 in k6978 in k6975 in k6971 in k6680 in k6677 in k6674 in k6671 */
static void C_ccall f_8457(C_word c,C_word t0,C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word ab[6],*a=ab;
if(c!=4) C_bad_argc_2(c,4,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr4,(void*)f_8457,4,t0,t1,t2,t3);}
t4=(C_word)C_a_i_bytevector(&a,1,C_fix(4));
t5=(C_word)C_i_foreign_fixnum_argumentp(t2);
t6=(C_word)C_i_foreign_flonum_argumentp(t3);
t7=t1;
((C_proc2)(void*)(*((C_word*)t7+1)))(2,t7,(C_word)stub427(t4,t5,t6));}

/* k13929 in do1308 in k13908 in k13979 in fm-spectrum in k11783 in k10718 in k10715 in k7274 in k7271 in k6978 in k6975 in k6971 in k6680 in k6677 in k6674 in k6671 */
static void C_ccall f_13931(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word ab[16],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_13931,2,t0,t1);}
t2=C_mutate(((C_word *)((C_word*)t0)[7])+1,t1);
t3=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_13934,a[2]=((C_word*)t0)[7],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],tmp=(C_word)a,a+=7,tmp);
t4=(C_word)C_i_nequalp(((C_word*)((C_word*)t0)[7])[1],lf[252]);
t5=(C_truep(t4)?t4:(C_word)C_i_nequalp(((C_word*)((C_word*)t0)[3])[1],lf[253]));
if(C_truep(t5)){
t6=t3;
f_13934(t6,C_SCHEME_UNDEFINED);}
else{
t6=(C_word)C_a_i_list(&a,2,((C_word*)((C_word*)t0)[3])[1],((C_word*)((C_word*)t0)[7])[1]);
t7=(C_word)C_a_i_list(&a,1,t6);
t8=(C_word)C_i_set_cdr(((C_word*)((C_word*)t0)[2])[1],t7);
t9=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[2])[1]);
t10=C_mutate(((C_word *)((C_word*)t0)[2])+1,t9);
t11=t3;
f_13934(t11,t10);}}

/* k13932 in k13929 in do1308 in k13908 in k13979 in fm-spectrum in k11783 in k10718 in k10715 in k7274 in k7271 in k6978 in k6975 in k6971 in k6680 in k6677 in k6674 in k6671 */
static void C_fcall f_13934(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[4],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_13934,NULL,2,t0,t1);}
t2=(C_word)C_a_i_plus(&a,2,((C_word*)t0)[6],C_fix(1));
t3=((C_word*)((C_word*)t0)[5])[1];
f_13912(t3,((C_word*)t0)[4],t2,((C_word*)((C_word*)t0)[3])[1],((C_word*)((C_word*)t0)[2])[1]);}

/* k13675 in k13979 in fm-spectrum in k11783 in k10718 in k10715 in k7274 in k7271 in k6978 in k6975 in k6971 in k6680 in k6677 in k6674 in k6671 */
static void C_ccall f_13677(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[11],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_13677,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_13680,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],tmp=(C_word)a,a+=4,tmp);
t3=C_SCHEME_UNDEFINED;
t4=(*a=C_VECTOR_TYPE|1,a[1]=t3,tmp=(C_word)a,a+=2,tmp);
t5=C_set_block_item(t4,0,(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_13753,a[2]=t4,a[3]=((C_word*)t0)[3],a[4]=((C_word)li178),tmp=(C_word)a,a+=5,tmp));
t6=((C_word*)t4)[1];
f_13753(t6,t2,C_SCHEME_FALSE,C_SCHEME_FALSE);}

/* do1320 in k13675 in k13979 in fm-spectrum in k11783 in k10718 in k10715 in k7274 in k7271 in k6978 in k6975 in k6971 in k6680 in k6677 in k6674 in k6671 */
static void C_fcall f_13753(C_word t0,C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word ab[11],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_13753,NULL,4,t0,t1,t2,t3);}
t4=(*a=C_VECTOR_TYPE|1,a[1]=t2,tmp=(C_word)a,a+=2,tmp);
t5=(*a=C_VECTOR_TYPE|1,a[1]=t3,tmp=(C_word)a,a+=2,tmp);
t6=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_13906,a[2]=t1,a[3]=((C_word*)t0)[2],a[4]=t5,a[5]=t4,a[6]=((C_word*)t0)[3],tmp=(C_word)a,a+=7,tmp);
C_trace("ChickenBridge.scm: 378  caar");
t7=*((C_word*)lf[251]+1);
((C_proc3)C_retrieve_proc(t7))(3,t7,t6,((C_word*)((C_word*)t0)[3])[1]);}

/* k13904 in do1320 in k13675 in k13979 in fm-spectrum in k11783 in k10718 in k10715 in k7274 in k7271 in k6978 in k6975 in k6971 in k6680 in k6677 in k6674 in k6671 */
static void C_ccall f_13906(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word ab[12],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_13906,2,t0,t1);}
if(C_truep((C_word)C_i_negativep(t1))){
t2=(C_word)C_i_car(((C_word*)((C_word*)t0)[6])[1]);
t3=C_mutate(((C_word *)((C_word*)t0)[5])+1,t2);
t4=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[6])[1]);
t5=C_mutate(((C_word *)((C_word*)t0)[6])+1,t4);
t6=(C_word)C_i_car(((C_word*)((C_word*)t0)[5])[1]);
t7=(C_word)C_a_i_abs(&a,1,t6);
t8=C_mutate(((C_word *)((C_word*)t0)[4])+1,t7);
t9=(C_word)C_i_set_car(((C_word*)((C_word*)t0)[5])[1],((C_word*)((C_word*)t0)[4])[1]);
t10=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[5])[1]);
t11=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_13890,a[2]=((C_word*)t0)[4],a[3]=((C_word*)t0)[2],a[4]=((C_word*)t0)[3],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[5],a[7]=t10,tmp=(C_word)a,a+=8,tmp);
t12=(C_word)C_i_cadr(((C_word*)((C_word*)t0)[5])[1]);
C_trace("ChickenBridge.scm: 378  -");
C_minus(3,0,t11,t12);}
else{
t2=((C_word*)t0)[2];
((C_proc2)(void*)(*((C_word*)t2+1)))(2,t2,C_SCHEME_FALSE);}}

/* k13888 in k13904 in do1320 in k13675 in k13979 in fm-spectrum in k11783 in k10718 in k10715 in k7274 in k7271 in k6978 in k6975 in k6971 in k6680 in k6677 in k6674 in k6671 */
static void C_ccall f_13890(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word t14;
C_word t15;
C_word t16;
C_word ab[27],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_13890,2,t0,t1);}
t2=(C_word)C_i_set_car(((C_word*)t0)[7],t1);
t3=(C_word)C_i_car(((C_word*)((C_word*)t0)[6])[1]);
t4=(C_word)C_i_assoc(t3,((C_word*)((C_word*)t0)[5])[1]);
t5=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_13784,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[6],a[4]=((C_word*)t0)[3],a[5]=((C_word*)t0)[4],tmp=(C_word)a,a+=6,tmp);
if(C_truep(t4)){
t6=(C_word)C_i_cdr(t4);
t7=(C_word)C_i_cadr(t4);
t8=(C_word)C_i_cadr(((C_word*)((C_word*)t0)[6])[1]);
t9=(C_word)C_a_i_plus(&a,2,t7,t8);
t10=t5;
f_13784(t10,(C_word)C_i_set_car(t6,t9));}
else{
t6=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_13809,a[2]=t5,a[3]=((C_word*)t0)[6],a[4]=((C_word*)t0)[5],tmp=(C_word)a,a+=5,tmp);
t7=(C_word)C_i_length(((C_word*)((C_word*)t0)[5])[1]);
t8=(C_word)C_a_i_minus(&a,2,t7,C_fix(1));
t9=C_SCHEME_UNDEFINED;
t10=(*a=C_VECTOR_TYPE|1,a[1]=t9,tmp=(C_word)a,a+=2,tmp);
t11=C_set_block_item(t10,0,(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_13842,a[2]=((C_word*)t0)[2],a[3]=t10,a[4]=((C_word*)t0)[5],a[5]=((C_word)li177),tmp=(C_word)a,a+=6,tmp));
t12=((C_word*)t10)[1];
f_13842(t12,t6,t8,C_SCHEME_FALSE,C_SCHEME_FALSE);}}

/* do1326 in k13888 in k13904 in do1320 in k13675 in k13979 in fm-spectrum in k11783 in k10718 in k10715 in k7274 in k7271 in k6978 in k6975 in k6971 in k6680 in k6677 in k6674 in k6671 */
static void C_fcall f_13842(C_word t0,C_word t1,C_word t2,C_word t3,C_word t4){
C_word tmp;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word t14;
C_word ab[11],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_13842,NULL,5,t0,t1,t2,t3,t4);}
t5=(*a=C_VECTOR_TYPE|1,a[1]=t3,tmp=(C_word)a,a+=2,tmp);
t6=(*a=C_VECTOR_TYPE|1,a[1]=t4,tmp=(C_word)a,a+=2,tmp);
t7=((C_word*)t5)[1];
t8=(C_truep(t7)?t7:(C_word)C_i_lessp(t2,C_fix(0)));
if(C_truep(t8)){
t9=t1;
((C_proc2)(void*)(*((C_word*)t9+1)))(2,t9,((C_word*)t5)[1]);}
else{
t9=(C_word)C_i_list_ref(((C_word*)((C_word*)t0)[4])[1],t2);
t10=(C_word)C_i_car(t9);
t11=C_set_block_item(t6,0,t10);
t12=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_13856,a[2]=t6,a[3]=t5,a[4]=t1,a[5]=((C_word*)t0)[3],a[6]=t2,tmp=(C_word)a,a+=7,tmp);
if(C_truep((C_word)C_i_lessp(((C_word*)t6)[1],((C_word*)((C_word*)t0)[2])[1]))){
t13=C_set_block_item(t5,0,t2);
t14=t12;
f_13856(t14,t13);}
else{
t13=t12;
f_13856(t13,C_SCHEME_UNDEFINED);}}}

/* k13854 in do1326 in k13888 in k13904 in do1320 in k13675 in k13979 in fm-spectrum in k11783 in k10718 in k10715 in k7274 in k7271 in k6978 in k6975 in k6971 in k6680 in k6677 in k6674 in k6671 */
static void C_fcall f_13856(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[4],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_13856,NULL,2,t0,t1);}
t2=(C_word)C_a_i_minus(&a,2,((C_word*)t0)[6],C_fix(1));
t3=((C_word*)((C_word*)t0)[5])[1];
f_13842(t3,((C_word*)t0)[4],t2,((C_word*)((C_word*)t0)[3])[1],((C_word*)((C_word*)t0)[2])[1]);}

/* k13807 in k13888 in k13904 in do1320 in k13675 in k13979 in fm-spectrum in k11783 in k10718 in k10715 in k7274 in k7271 in k6978 in k6975 in k6971 in k6680 in k6677 in k6674 in k6671 */
static void C_ccall f_13809(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word ab[6],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_13809,2,t0,t1);}
t2=t1;
if(C_truep(t2)){
t3=(C_word)C_i_list_tail(((C_word*)((C_word*)t0)[4])[1],t1);
t4=(C_word)C_a_i_list(&a,1,((C_word*)((C_word*)t0)[3])[1]);
t5=C_mutate(((C_word *)((C_word*)t0)[3])+1,t4);
t6=(C_word)C_i_cdr(t3);
t7=(C_word)C_i_set_cdr(((C_word*)((C_word*)t0)[3])[1],t6);
t8=((C_word*)t0)[2];
f_13784(t8,(C_word)C_i_set_cdr(t3,((C_word*)((C_word*)t0)[3])[1]));}
else{
t3=(C_word)C_a_i_cons(&a,2,((C_word*)((C_word*)t0)[3])[1],((C_word*)((C_word*)t0)[4])[1]);
t4=C_mutate(((C_word *)((C_word*)t0)[4])+1,t3);
t5=((C_word*)t0)[2];
f_13784(t5,t4);}}

/* k13782 in k13888 in k13904 in do1320 in k13675 in k13979 in fm-spectrum in k11783 in k10718 in k10715 in k7274 in k7271 in k6978 in k6975 in k6971 in k6680 in k6677 in k6674 in k6671 */
static void C_fcall f_13784(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
t2=((C_word*)((C_word*)t0)[5])[1];
f_13753(t2,((C_word*)t0)[4],((C_word*)((C_word*)t0)[3])[1],((C_word*)((C_word*)t0)[2])[1]);}

/* k13678 in k13675 in k13979 in fm-spectrum in k11783 in k10718 in k10715 in k7274 in k7271 in k6978 in k6975 in k6971 in k6680 in k6677 in k6674 in k6671 */
static void C_ccall f_13680(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word ab[8],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_13680,2,t0,t1);}
t2=((C_word*)((C_word*)t0)[3])[1];
t3=(C_word)C_i_car(((C_word*)((C_word*)t0)[3])[1]);
t4=C_SCHEME_UNDEFINED;
t5=(*a=C_VECTOR_TYPE|1,a[1]=t4,tmp=(C_word)a,a+=2,tmp);
t6=C_set_block_item(t5,0,(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_13688,a[2]=t5,a[3]=t2,a[4]=t3,a[5]=((C_word)li176),tmp=(C_word)a,a+=6,tmp));
t7=((C_word*)t5)[1];
f_13688(t7,((C_word*)t0)[2],((C_word*)((C_word*)t0)[3])[1],C_fix(0),t3);}

/* do1348 in k13678 in k13675 in k13979 in fm-spectrum in k11783 in k10718 in k10715 in k7274 in k7271 in k6978 in k6975 in k6971 in k6680 in k6677 in k6674 in k6671 */
static void C_fcall f_13688(C_word t0,C_word t1,C_word t2,C_word t3,C_word t4){
C_word tmp;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word t14;
C_word t15;
C_word t16;
C_word t17;
C_word t18;
C_word t19;
C_word ab[13],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_13688,NULL,5,t0,t1,t2,t3,t4);}
t5=(*a=C_VECTOR_TYPE|1,a[1]=t4,tmp=(C_word)a,a+=2,tmp);
if(C_truep((C_word)C_i_nullp(t2))){
t6=(C_word)C_i_cdr(((C_word*)t0)[4]);
C_trace("ChickenBridge.scm: 378  make-spectrum");
f_11700(t1,C_SCHEME_FALSE,t3,((C_word*)t0)[3],t6);}
else{
t6=(C_word)C_i_car(t2);
t7=(C_word)C_i_car(t6);
t8=(C_word)C_i_cdr(t6);
t9=(C_word)C_i_cadr(t6);
t10=(C_word)C_a_i_abs(&a,1,t9);
t11=(C_word)C_i_set_car(t8,t10);
t12=(C_word)C_i_cdr(t6);
t13=(C_word)C_i_set_cdr(((C_word*)t5)[1],t12);
t14=(C_word)C_i_cdr(((C_word*)t5)[1]);
t15=C_set_block_item(t5,0,t14);
t16=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_13721,a[2]=t5,a[3]=t1,a[4]=((C_word*)t0)[2],a[5]=t3,a[6]=t2,tmp=(C_word)a,a+=7,tmp);
t17=*((C_word*)lf[250]+1);
t18=t17;
((C_proc4)C_retrieve_proc(t18))(4,t18,t16,t2,t7);}}

/* k13719 in do1348 in k13678 in k13675 in k13979 in fm-spectrum in k11783 in k10718 in k10715 in k7274 in k7271 in k6978 in k6975 in k6971 in k6680 in k6677 in k6674 in k6671 */
static void C_ccall f_13721(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[4],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_13721,2,t0,t1);}
t2=(C_word)C_i_cdr(((C_word*)t0)[6]);
t3=(C_word)C_a_i_plus(&a,2,((C_word*)t0)[5],C_fix(1));
t4=((C_word*)((C_word*)t0)[4])[1];
f_13688(t4,((C_word*)t0)[3],t2,t3,((C_word*)((C_word*)t0)[2])[1]);}

/* spectrum-keys in k11783 in k10718 in k10715 in k7274 in k7271 in k6978 in k6975 in k6971 in k6680 in k6677 in k6674 in k6671 */
static void C_ccall f_12191(C_word c,C_word t0,C_word t1,C_word t2,...){
C_word tmp;
C_word t3;
va_list v;
C_word *a,c2=c;
C_save_rest(t2,c2,3);
if(c<3) C_bad_min_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_demand(c*C_SIZEOF_PAIR+101)){
C_save_and_reclaim((void*)tr3r,(void*)f_12191r,3,t0,t1,t2);}
else{
a=C_alloc((c-3)*3);
t3=C_restore_rest(a,C_rest_count(0));
f_12191r(t0,t1,t2,t3);}}

static void C_ccall f_12191r(C_word t0,C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word t14;
C_word t15;
C_word t16;
C_word t17;
C_word t18;
C_word t19;
C_word t20;
C_word t21;
C_word t22;
C_word t23;
C_word t24;
C_word t25;
C_word t26;
C_word t27;
C_word t28;
C_word t29;
C_word t30;
C_word t31;
C_word t32;
C_word t33;
C_word t34;
C_word t35;
C_word t36;
C_word t37;
C_word t38;
C_word t39;
C_word t40;
C_word t41;
C_word t42;
C_word t43;
C_word t44;
C_word t45;
C_word t46;
C_word t47;
C_word *a=C_alloc(101);
t4=C_fix(1);
t5=(*a=C_VECTOR_TYPE|1,a[1]=t4,tmp=(C_word)a,a+=2,tmp);
t6=C_SCHEME_FALSE;
t7=(*a=C_VECTOR_TYPE|1,a[1]=t6,tmp=(C_word)a,a+=2,tmp);
t8=C_SCHEME_FALSE;
t9=(*a=C_VECTOR_TYPE|1,a[1]=t8,tmp=(C_word)a,a+=2,tmp);
t10=C_SCHEME_FALSE;
t11=(*a=C_VECTOR_TYPE|1,a[1]=t10,tmp=(C_word)a,a+=2,tmp);
t12=C_SCHEME_FALSE;
t13=(*a=C_VECTOR_TYPE|1,a[1]=t12,tmp=(C_word)a,a+=2,tmp);
t14=C_SCHEME_FALSE;
t15=(*a=C_VECTOR_TYPE|1,a[1]=t14,tmp=(C_word)a,a+=2,tmp);
t16=C_SCHEME_FALSE;
t17=(*a=C_VECTOR_TYPE|1,a[1]=t16,tmp=(C_word)a,a+=2,tmp);
t18=C_SCHEME_FALSE;
t19=(*a=C_VECTOR_TYPE|1,a[1]=t18,tmp=(C_word)a,a+=2,tmp);
t20=C_SCHEME_FALSE;
t21=(*a=C_VECTOR_TYPE|1,a[1]=t20,tmp=(C_word)a,a+=2,tmp);
t22=C_SCHEME_FALSE;
t23=(*a=C_VECTOR_TYPE|1,a[1]=t22,tmp=(C_word)a,a+=2,tmp);
t24=C_SCHEME_FALSE;
t25=(*a=C_VECTOR_TYPE|1,a[1]=t24,tmp=(C_word)a,a+=2,tmp);
t26=C_SCHEME_FALSE;
t27=(*a=C_VECTOR_TYPE|1,a[1]=t26,tmp=(C_word)a,a+=2,tmp);
t28=t3;
t29=(*a=C_VECTOR_TYPE|1,a[1]=t28,tmp=(C_word)a,a+=2,tmp);
t30=C_SCHEME_FALSE;
t31=(*a=C_VECTOR_TYPE|1,a[1]=t30,tmp=(C_word)a,a+=2,tmp);
t32=(*a=C_CLOSURE_TYPE|18,a[1]=(C_word)f_12195,a[2]=t27,a[3]=t25,a[4]=t23,a[5]=t21,a[6]=t19,a[7]=t31,a[8]=t17,a[9]=t3,a[10]=t29,a[11]=t15,a[12]=t13,a[13]=t11,a[14]=t9,a[15]=t7,a[16]=t5,a[17]=t2,a[18]=t1,tmp=(C_word)a,a+=19,tmp);
if(C_truep((C_word)C_i_nullp(((C_word*)t29)[1]))){
t33=t32;
f_12195(t33,C_SCHEME_UNDEFINED);}
else{
t33=(C_word)C_i_car(((C_word*)t29)[1]);
t34=(C_word)C_eqp(t33,lf[243]);
if(C_truep(t34)){
t35=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_13437,a[2]=t3,a[3]=t32,a[4]=t29,a[5]=t31,a[6]=t17,a[7]=t5,tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)t17)[1])){
C_trace("error");
t36=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t36))(4,t36,t35,lf[19],lf[243]);}
else{
t36=t35;
f_13437(2,t36,C_SCHEME_UNDEFINED);}}
else{
t35=(C_word)C_eqp(t33,lf[244]);
if(C_truep(t35)){
t36=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_13472,a[2]=t3,a[3]=t32,a[4]=t29,a[5]=t31,a[6]=t19,a[7]=t7,tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)t19)[1])){
C_trace("error");
t37=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t37))(4,t37,t36,lf[19],lf[244]);}
else{
t37=t36;
f_13472(2,t37,C_SCHEME_UNDEFINED);}}
else{
t36=(C_word)C_eqp(t33,lf[245]);
if(C_truep(t36)){
t37=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_13507,a[2]=t3,a[3]=t32,a[4]=t29,a[5]=t31,a[6]=t21,a[7]=t9,tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)t21)[1])){
C_trace("error");
t38=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t38))(4,t38,t37,lf[19],lf[245]);}
else{
t38=t37;
f_13507(2,t38,C_SCHEME_UNDEFINED);}}
else{
t37=(C_word)C_eqp(t33,lf[246]);
if(C_truep(t37)){
t38=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_13542,a[2]=t3,a[3]=t32,a[4]=t29,a[5]=t31,a[6]=t23,a[7]=t11,tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)t23)[1])){
C_trace("error");
t39=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t39))(4,t39,t38,lf[19],lf[246]);}
else{
t39=t38;
f_13542(2,t39,C_SCHEME_UNDEFINED);}}
else{
t38=(C_word)C_eqp(t33,lf[247]);
if(C_truep(t38)){
t39=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_13577,a[2]=t3,a[3]=t32,a[4]=t29,a[5]=t31,a[6]=t25,a[7]=t13,tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)t25)[1])){
C_trace("error");
t40=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t40))(4,t40,t39,lf[19],lf[247]);}
else{
t40=t39;
f_13577(2,t40,C_SCHEME_UNDEFINED);}}
else{
t39=(C_word)C_eqp(t33,lf[248]);
if(C_truep(t39)){
t40=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_13612,a[2]=t3,a[3]=t32,a[4]=t29,a[5]=t31,a[6]=t27,a[7]=t15,tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)t27)[1])){
C_trace("error");
t41=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t41))(4,t41,t40,lf[19],lf[248]);}
else{
t41=t40;
f_13612(2,t41,C_SCHEME_UNDEFINED);}}
else{
t40=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_13641,a[2]=t32,a[3]=t17,a[4]=t5,a[5]=t29,tmp=(C_word)a,a+=6,tmp);
if(C_truep(((C_word*)t31)[1])){
C_trace("error");
t41=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t41))(4,t41,t40,lf[10],t3);}
else{
t41=t40;
f_13641(2,t41,C_SCHEME_UNDEFINED);}}}}}}}}}

/* k13639 in spectrum-keys in k11783 in k10718 in k10715 in k7274 in k7271 in k6978 in k6975 in k6971 in k6680 in k6677 in k6674 in k6671 */
static void C_ccall f_13641(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_13641,2,t0,t1);}
t2=(C_word)C_i_car(((C_word*)((C_word*)t0)[5])[1]);
t3=C_mutate(((C_word *)((C_word*)t0)[4])+1,t2);
t4=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_13648,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[5],a[4]=((C_word*)t0)[3],tmp=(C_word)a,a+=5,tmp);
t5=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_13656,a[2]=((C_word*)t0)[4],a[3]=t4,tmp=(C_word)a,a+=4,tmp);
C_trace("keyword?");
t6=C_retrieve(lf[13]);
((C_proc3)C_retrieve_proc(t6))(3,t6,t5,((C_word*)((C_word*)t0)[4])[1]);}

/* k13654 in k13639 in spectrum-keys in k11783 in k10718 in k10715 in k7274 in k7271 in k6978 in k6975 in k6971 in k6680 in k6677 in k6674 in k6671 */
static void C_ccall f_13656(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
if(C_truep(t1)){
C_trace("error");
t2=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t2))(4,t2,((C_word*)t0)[3],lf[14],((C_word*)((C_word*)t0)[2])[1]);}
else{
t2=((C_word*)t0)[3];
f_13648(2,t2,C_SCHEME_UNDEFINED);}}

/* k13646 in k13639 in spectrum-keys in k11783 in k10718 in k10715 in k7274 in k7271 in k6978 in k6975 in k6971 in k6680 in k6677 in k6674 in k6671 */
static void C_ccall f_13648(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word *a;
t2=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[3])[1]);
t4=C_mutate(((C_word *)((C_word*)t0)[3])+1,t3);
t5=((C_word*)t0)[2];
f_12195(t5,t4);}

/* k13610 in spectrum-keys in k11783 in k10718 in k10715 in k7274 in k7271 in k6978 in k6975 in k6971 in k6680 in k6677 in k6674 in k6671 */
static void C_ccall f_13612(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_13612,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_13616,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("error");
t4=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[21],((C_word*)t0)[2]);}
else{
t4=t2;
f_13616(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k13614 in k13610 in spectrum-keys in k11783 in k10718 in k10715 in k7274 in k7271 in k6978 in k6975 in k6971 in k6680 in k6677 in k6674 in k6671 */
static void C_ccall f_13616(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_12195(t7,t6);}

/* k13575 in spectrum-keys in k11783 in k10718 in k10715 in k7274 in k7271 in k6978 in k6975 in k6971 in k6680 in k6677 in k6674 in k6671 */
static void C_ccall f_13577(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_13577,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_13581,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("error");
t4=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[21],((C_word*)t0)[2]);}
else{
t4=t2;
f_13581(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k13579 in k13575 in spectrum-keys in k11783 in k10718 in k10715 in k7274 in k7271 in k6978 in k6975 in k6971 in k6680 in k6677 in k6674 in k6671 */
static void C_ccall f_13581(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_12195(t7,t6);}

/* k13540 in spectrum-keys in k11783 in k10718 in k10715 in k7274 in k7271 in k6978 in k6975 in k6971 in k6680 in k6677 in k6674 in k6671 */
static void C_ccall f_13542(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_13542,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_13546,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("error");
t4=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[21],((C_word*)t0)[2]);}
else{
t4=t2;
f_13546(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k13544 in k13540 in spectrum-keys in k11783 in k10718 in k10715 in k7274 in k7271 in k6978 in k6975 in k6971 in k6680 in k6677 in k6674 in k6671 */
static void C_ccall f_13546(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_12195(t7,t6);}

/* k13505 in spectrum-keys in k11783 in k10718 in k10715 in k7274 in k7271 in k6978 in k6975 in k6971 in k6680 in k6677 in k6674 in k6671 */
static void C_ccall f_13507(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_13507,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_13511,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("error");
t4=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[21],((C_word*)t0)[2]);}
else{
t4=t2;
f_13511(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k13509 in k13505 in spectrum-keys in k11783 in k10718 in k10715 in k7274 in k7271 in k6978 in k6975 in k6971 in k6680 in k6677 in k6674 in k6671 */
static void C_ccall f_13511(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_12195(t7,t6);}

/* k13470 in spectrum-keys in k11783 in k10718 in k10715 in k7274 in k7271 in k6978 in k6975 in k6971 in k6680 in k6677 in k6674 in k6671 */
static void C_ccall f_13472(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_13472,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_13476,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("error");
t4=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[21],((C_word*)t0)[2]);}
else{
t4=t2;
f_13476(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k13474 in k13470 in spectrum-keys in k11783 in k10718 in k10715 in k7274 in k7271 in k6978 in k6975 in k6971 in k6680 in k6677 in k6674 in k6671 */
static void C_ccall f_13476(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_12195(t7,t6);}

/* k13435 in spectrum-keys in k11783 in k10718 in k10715 in k7274 in k7271 in k6978 in k6975 in k6971 in k6680 in k6677 in k6674 in k6671 */
static void C_ccall f_13437(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_13437,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_13441,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("error");
t4=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[21],((C_word*)t0)[2]);}
else{
t4=t2;
f_13441(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k13439 in k13435 in spectrum-keys in k11783 in k10718 in k10715 in k7274 in k7271 in k6978 in k6975 in k6971 in k6680 in k6677 in k6674 in k6671 */
static void C_ccall f_13441(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_12195(t7,t6);}

/* k12193 in spectrum-keys in k11783 in k10718 in k10715 in k7274 in k7271 in k6978 in k6975 in k6971 in k6680 in k6677 in k6674 in k6671 */
static void C_fcall f_12195(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word t14;
C_word t15;
C_word t16;
C_word t17;
C_word ab[73],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_12195,NULL,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|18,a[1]=(C_word)f_12198,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],a[7]=((C_word*)t0)[7],a[8]=((C_word*)t0)[8],a[9]=((C_word*)t0)[9],a[10]=((C_word*)t0)[10],a[11]=((C_word*)t0)[11],a[12]=((C_word*)t0)[12],a[13]=((C_word*)t0)[13],a[14]=((C_word*)t0)[14],a[15]=((C_word*)t0)[15],a[16]=((C_word*)t0)[16],a[17]=((C_word*)t0)[17],a[18]=((C_word*)t0)[18],tmp=(C_word)a,a+=19,tmp);
if(C_truep((C_word)C_i_nullp(((C_word*)((C_word*)t0)[10])[1]))){
t3=t2;
f_12198(t3,C_SCHEME_UNDEFINED);}
else{
t3=(C_word)C_i_car(((C_word*)((C_word*)t0)[10])[1]);
t4=(C_word)C_eqp(t3,lf[243]);
if(C_truep(t4)){
t5=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_13197,a[2]=((C_word*)t0)[9],a[3]=t2,a[4]=((C_word*)t0)[10],a[5]=((C_word*)t0)[7],a[6]=((C_word*)t0)[8],a[7]=((C_word*)t0)[16],tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)((C_word*)t0)[8])[1])){
C_trace("error");
t6=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t6))(4,t6,t5,lf[19],lf[243]);}
else{
t6=t5;
f_13197(2,t6,C_SCHEME_UNDEFINED);}}
else{
t5=(C_word)C_eqp(t3,lf[244]);
if(C_truep(t5)){
t6=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_13232,a[2]=((C_word*)t0)[9],a[3]=t2,a[4]=((C_word*)t0)[10],a[5]=((C_word*)t0)[7],a[6]=((C_word*)t0)[6],a[7]=((C_word*)t0)[15],tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)((C_word*)t0)[6])[1])){
C_trace("error");
t7=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t7))(4,t7,t6,lf[19],lf[244]);}
else{
t7=t6;
f_13232(2,t7,C_SCHEME_UNDEFINED);}}
else{
t6=(C_word)C_eqp(t3,lf[245]);
if(C_truep(t6)){
t7=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_13267,a[2]=((C_word*)t0)[9],a[3]=t2,a[4]=((C_word*)t0)[10],a[5]=((C_word*)t0)[7],a[6]=((C_word*)t0)[5],a[7]=((C_word*)t0)[14],tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)((C_word*)t0)[5])[1])){
C_trace("error");
t8=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t8))(4,t8,t7,lf[19],lf[245]);}
else{
t8=t7;
f_13267(2,t8,C_SCHEME_UNDEFINED);}}
else{
t7=(C_word)C_eqp(t3,lf[246]);
if(C_truep(t7)){
t8=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_13302,a[2]=((C_word*)t0)[9],a[3]=t2,a[4]=((C_word*)t0)[10],a[5]=((C_word*)t0)[7],a[6]=((C_word*)t0)[4],a[7]=((C_word*)t0)[13],tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)((C_word*)t0)[4])[1])){
C_trace("error");
t9=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t9))(4,t9,t8,lf[19],lf[246]);}
else{
t9=t8;
f_13302(2,t9,C_SCHEME_UNDEFINED);}}
else{
t8=(C_word)C_eqp(t3,lf[247]);
if(C_truep(t8)){
t9=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_13337,a[2]=((C_word*)t0)[9],a[3]=t2,a[4]=((C_word*)t0)[10],a[5]=((C_word*)t0)[7],a[6]=((C_word*)t0)[3],a[7]=((C_word*)t0)[12],tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)((C_word*)t0)[3])[1])){
C_trace("error");
t10=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t10))(4,t10,t9,lf[19],lf[247]);}
else{
t10=t9;
f_13337(2,t10,C_SCHEME_UNDEFINED);}}
else{
t9=(C_word)C_eqp(t3,lf[248]);
if(C_truep(t9)){
t10=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_13372,a[2]=((C_word*)t0)[9],a[3]=t2,a[4]=((C_word*)t0)[10],a[5]=((C_word*)t0)[7],a[6]=((C_word*)t0)[2],a[7]=((C_word*)t0)[11],tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)((C_word*)t0)[2])[1])){
C_trace("error");
t11=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t11))(4,t11,t10,lf[19],lf[248]);}
else{
t11=t10;
f_13372(2,t11,C_SCHEME_UNDEFINED);}}
else{
t10=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_13401,a[2]=t2,a[3]=((C_word*)t0)[6],a[4]=((C_word*)t0)[15],a[5]=((C_word*)t0)[10],tmp=(C_word)a,a+=6,tmp);
if(C_truep(((C_word*)((C_word*)t0)[7])[1])){
C_trace("error");
t11=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t11))(4,t11,t10,lf[10],((C_word*)t0)[9]);}
else{
t11=t10;
f_13401(2,t11,C_SCHEME_UNDEFINED);}}}}}}}}}

/* k13399 in k12193 in spectrum-keys in k11783 in k10718 in k10715 in k7274 in k7271 in k6978 in k6975 in k6971 in k6680 in k6677 in k6674 in k6671 */
static void C_ccall f_13401(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_13401,2,t0,t1);}
t2=(C_word)C_i_car(((C_word*)((C_word*)t0)[5])[1]);
t3=C_mutate(((C_word *)((C_word*)t0)[4])+1,t2);
t4=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_13408,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[5],a[4]=((C_word*)t0)[3],tmp=(C_word)a,a+=5,tmp);
t5=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_13416,a[2]=((C_word*)t0)[4],a[3]=t4,tmp=(C_word)a,a+=4,tmp);
C_trace("keyword?");
t6=C_retrieve(lf[13]);
((C_proc3)C_retrieve_proc(t6))(3,t6,t5,((C_word*)((C_word*)t0)[4])[1]);}

/* k13414 in k13399 in k12193 in spectrum-keys in k11783 in k10718 in k10715 in k7274 in k7271 in k6978 in k6975 in k6971 in k6680 in k6677 in k6674 in k6671 */
static void C_ccall f_13416(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
if(C_truep(t1)){
C_trace("error");
t2=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t2))(4,t2,((C_word*)t0)[3],lf[14],((C_word*)((C_word*)t0)[2])[1]);}
else{
t2=((C_word*)t0)[3];
f_13408(2,t2,C_SCHEME_UNDEFINED);}}

/* k13406 in k13399 in k12193 in spectrum-keys in k11783 in k10718 in k10715 in k7274 in k7271 in k6978 in k6975 in k6971 in k6680 in k6677 in k6674 in k6671 */
static void C_ccall f_13408(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word *a;
t2=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[3])[1]);
t4=C_mutate(((C_word *)((C_word*)t0)[3])+1,t3);
t5=((C_word*)t0)[2];
f_12198(t5,t4);}

/* k13370 in k12193 in spectrum-keys in k11783 in k10718 in k10715 in k7274 in k7271 in k6978 in k6975 in k6971 in k6680 in k6677 in k6674 in k6671 */
static void C_ccall f_13372(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_13372,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_13376,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("error");
t4=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[21],((C_word*)t0)[2]);}
else{
t4=t2;
f_13376(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k13374 in k13370 in k12193 in spectrum-keys in k11783 in k10718 in k10715 in k7274 in k7271 in k6978 in k6975 in k6971 in k6680 in k6677 in k6674 in k6671 */
static void C_ccall f_13376(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_12198(t7,t6);}

/* k13335 in k12193 in spectrum-keys in k11783 in k10718 in k10715 in k7274 in k7271 in k6978 in k6975 in k6971 in k6680 in k6677 in k6674 in k6671 */
static void C_ccall f_13337(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_13337,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_13341,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("error");
t4=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[21],((C_word*)t0)[2]);}
else{
t4=t2;
f_13341(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k13339 in k13335 in k12193 in spectrum-keys in k11783 in k10718 in k10715 in k7274 in k7271 in k6978 in k6975 in k6971 in k6680 in k6677 in k6674 in k6671 */
static void C_ccall f_13341(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_12198(t7,t6);}

/* k13300 in k12193 in spectrum-keys in k11783 in k10718 in k10715 in k7274 in k7271 in k6978 in k6975 in k6971 in k6680 in k6677 in k6674 in k6671 */
static void C_ccall f_13302(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_13302,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_13306,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("error");
t4=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[21],((C_word*)t0)[2]);}
else{
t4=t2;
f_13306(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k13304 in k13300 in k12193 in spectrum-keys in k11783 in k10718 in k10715 in k7274 in k7271 in k6978 in k6975 in k6971 in k6680 in k6677 in k6674 in k6671 */
static void C_ccall f_13306(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_12198(t7,t6);}

/* k13265 in k12193 in spectrum-keys in k11783 in k10718 in k10715 in k7274 in k7271 in k6978 in k6975 in k6971 in k6680 in k6677 in k6674 in k6671 */
static void C_ccall f_13267(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_13267,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_13271,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("error");
t4=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[21],((C_word*)t0)[2]);}
else{
t4=t2;
f_13271(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k13269 in k13265 in k12193 in spectrum-keys in k11783 in k10718 in k10715 in k7274 in k7271 in k6978 in k6975 in k6971 in k6680 in k6677 in k6674 in k6671 */
static void C_ccall f_13271(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_12198(t7,t6);}

/* k13230 in k12193 in spectrum-keys in k11783 in k10718 in k10715 in k7274 in k7271 in k6978 in k6975 in k6971 in k6680 in k6677 in k6674 in k6671 */
static void C_ccall f_13232(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_13232,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_13236,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("error");
t4=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[21],((C_word*)t0)[2]);}
else{
t4=t2;
f_13236(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k13234 in k13230 in k12193 in spectrum-keys in k11783 in k10718 in k10715 in k7274 in k7271 in k6978 in k6975 in k6971 in k6680 in k6677 in k6674 in k6671 */
static void C_ccall f_13236(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_12198(t7,t6);}

/* k13195 in k12193 in spectrum-keys in k11783 in k10718 in k10715 in k7274 in k7271 in k6978 in k6975 in k6971 in k6680 in k6677 in k6674 in k6671 */
static void C_ccall f_13197(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_13197,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_13201,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("error");
t4=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[21],((C_word*)t0)[2]);}
else{
t4=t2;
f_13201(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k13199 in k13195 in k12193 in spectrum-keys in k11783 in k10718 in k10715 in k7274 in k7271 in k6978 in k6975 in k6971 in k6680 in k6677 in k6674 in k6671 */
static void C_ccall f_13201(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_12198(t7,t6);}

/* k12196 in k12193 in spectrum-keys in k11783 in k10718 in k10715 in k7274 in k7271 in k6978 in k6975 in k6971 in k6680 in k6677 in k6674 in k6671 */
static void C_fcall f_12198(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word t14;
C_word t15;
C_word t16;
C_word t17;
C_word ab[73],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_12198,NULL,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|18,a[1]=(C_word)f_12201,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],a[7]=((C_word*)t0)[7],a[8]=((C_word*)t0)[8],a[9]=((C_word*)t0)[9],a[10]=((C_word*)t0)[10],a[11]=((C_word*)t0)[11],a[12]=((C_word*)t0)[12],a[13]=((C_word*)t0)[13],a[14]=((C_word*)t0)[14],a[15]=((C_word*)t0)[15],a[16]=((C_word*)t0)[16],a[17]=((C_word*)t0)[17],a[18]=((C_word*)t0)[18],tmp=(C_word)a,a+=19,tmp);
if(C_truep((C_word)C_i_nullp(((C_word*)((C_word*)t0)[10])[1]))){
t3=t2;
f_12201(t3,C_SCHEME_UNDEFINED);}
else{
t3=(C_word)C_i_car(((C_word*)((C_word*)t0)[10])[1]);
t4=(C_word)C_eqp(t3,lf[243]);
if(C_truep(t4)){
t5=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_12957,a[2]=((C_word*)t0)[9],a[3]=t2,a[4]=((C_word*)t0)[10],a[5]=((C_word*)t0)[7],a[6]=((C_word*)t0)[8],a[7]=((C_word*)t0)[16],tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)((C_word*)t0)[8])[1])){
C_trace("error");
t6=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t6))(4,t6,t5,lf[19],lf[243]);}
else{
t6=t5;
f_12957(2,t6,C_SCHEME_UNDEFINED);}}
else{
t5=(C_word)C_eqp(t3,lf[244]);
if(C_truep(t5)){
t6=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_12992,a[2]=((C_word*)t0)[9],a[3]=t2,a[4]=((C_word*)t0)[10],a[5]=((C_word*)t0)[7],a[6]=((C_word*)t0)[6],a[7]=((C_word*)t0)[15],tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)((C_word*)t0)[6])[1])){
C_trace("error");
t7=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t7))(4,t7,t6,lf[19],lf[244]);}
else{
t7=t6;
f_12992(2,t7,C_SCHEME_UNDEFINED);}}
else{
t6=(C_word)C_eqp(t3,lf[245]);
if(C_truep(t6)){
t7=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_13027,a[2]=((C_word*)t0)[9],a[3]=t2,a[4]=((C_word*)t0)[10],a[5]=((C_word*)t0)[7],a[6]=((C_word*)t0)[5],a[7]=((C_word*)t0)[14],tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)((C_word*)t0)[5])[1])){
C_trace("error");
t8=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t8))(4,t8,t7,lf[19],lf[245]);}
else{
t8=t7;
f_13027(2,t8,C_SCHEME_UNDEFINED);}}
else{
t7=(C_word)C_eqp(t3,lf[246]);
if(C_truep(t7)){
t8=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_13062,a[2]=((C_word*)t0)[9],a[3]=t2,a[4]=((C_word*)t0)[10],a[5]=((C_word*)t0)[7],a[6]=((C_word*)t0)[4],a[7]=((C_word*)t0)[13],tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)((C_word*)t0)[4])[1])){
C_trace("error");
t9=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t9))(4,t9,t8,lf[19],lf[246]);}
else{
t9=t8;
f_13062(2,t9,C_SCHEME_UNDEFINED);}}
else{
t8=(C_word)C_eqp(t3,lf[247]);
if(C_truep(t8)){
t9=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_13097,a[2]=((C_word*)t0)[9],a[3]=t2,a[4]=((C_word*)t0)[10],a[5]=((C_word*)t0)[7],a[6]=((C_word*)t0)[3],a[7]=((C_word*)t0)[12],tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)((C_word*)t0)[3])[1])){
C_trace("error");
t10=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t10))(4,t10,t9,lf[19],lf[247]);}
else{
t10=t9;
f_13097(2,t10,C_SCHEME_UNDEFINED);}}
else{
t9=(C_word)C_eqp(t3,lf[248]);
if(C_truep(t9)){
t10=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_13132,a[2]=((C_word*)t0)[9],a[3]=t2,a[4]=((C_word*)t0)[10],a[5]=((C_word*)t0)[7],a[6]=((C_word*)t0)[2],a[7]=((C_word*)t0)[11],tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)((C_word*)t0)[2])[1])){
C_trace("error");
t11=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t11))(4,t11,t10,lf[19],lf[248]);}
else{
t11=t10;
f_13132(2,t11,C_SCHEME_UNDEFINED);}}
else{
t10=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_13161,a[2]=t2,a[3]=((C_word*)t0)[5],a[4]=((C_word*)t0)[14],a[5]=((C_word*)t0)[10],tmp=(C_word)a,a+=6,tmp);
if(C_truep(((C_word*)((C_word*)t0)[7])[1])){
C_trace("error");
t11=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t11))(4,t11,t10,lf[10],((C_word*)t0)[9]);}
else{
t11=t10;
f_13161(2,t11,C_SCHEME_UNDEFINED);}}}}}}}}}

/* k13159 in k12196 in k12193 in spectrum-keys in k11783 in k10718 in k10715 in k7274 in k7271 in k6978 in k6975 in k6971 in k6680 in k6677 in k6674 in k6671 */
static void C_ccall f_13161(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_13161,2,t0,t1);}
t2=(C_word)C_i_car(((C_word*)((C_word*)t0)[5])[1]);
t3=C_mutate(((C_word *)((C_word*)t0)[4])+1,t2);
t4=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_13168,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[5],a[4]=((C_word*)t0)[3],tmp=(C_word)a,a+=5,tmp);
t5=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_13176,a[2]=((C_word*)t0)[4],a[3]=t4,tmp=(C_word)a,a+=4,tmp);
C_trace("keyword?");
t6=C_retrieve(lf[13]);
((C_proc3)C_retrieve_proc(t6))(3,t6,t5,((C_word*)((C_word*)t0)[4])[1]);}

/* k13174 in k13159 in k12196 in k12193 in spectrum-keys in k11783 in k10718 in k10715 in k7274 in k7271 in k6978 in k6975 in k6971 in k6680 in k6677 in k6674 in k6671 */
static void C_ccall f_13176(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
if(C_truep(t1)){
C_trace("error");
t2=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t2))(4,t2,((C_word*)t0)[3],lf[14],((C_word*)((C_word*)t0)[2])[1]);}
else{
t2=((C_word*)t0)[3];
f_13168(2,t2,C_SCHEME_UNDEFINED);}}

/* k13166 in k13159 in k12196 in k12193 in spectrum-keys in k11783 in k10718 in k10715 in k7274 in k7271 in k6978 in k6975 in k6971 in k6680 in k6677 in k6674 in k6671 */
static void C_ccall f_13168(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word *a;
t2=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[3])[1]);
t4=C_mutate(((C_word *)((C_word*)t0)[3])+1,t3);
t5=((C_word*)t0)[2];
f_12201(t5,t4);}

/* k13130 in k12196 in k12193 in spectrum-keys in k11783 in k10718 in k10715 in k7274 in k7271 in k6978 in k6975 in k6971 in k6680 in k6677 in k6674 in k6671 */
static void C_ccall f_13132(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_13132,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_13136,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("error");
t4=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[21],((C_word*)t0)[2]);}
else{
t4=t2;
f_13136(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k13134 in k13130 in k12196 in k12193 in spectrum-keys in k11783 in k10718 in k10715 in k7274 in k7271 in k6978 in k6975 in k6971 in k6680 in k6677 in k6674 in k6671 */
static void C_ccall f_13136(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_12201(t7,t6);}

/* k13095 in k12196 in k12193 in spectrum-keys in k11783 in k10718 in k10715 in k7274 in k7271 in k6978 in k6975 in k6971 in k6680 in k6677 in k6674 in k6671 */
static void C_ccall f_13097(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_13097,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_13101,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("error");
t4=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[21],((C_word*)t0)[2]);}
else{
t4=t2;
f_13101(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k13099 in k13095 in k12196 in k12193 in spectrum-keys in k11783 in k10718 in k10715 in k7274 in k7271 in k6978 in k6975 in k6971 in k6680 in k6677 in k6674 in k6671 */
static void C_ccall f_13101(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_12201(t7,t6);}

/* k13060 in k12196 in k12193 in spectrum-keys in k11783 in k10718 in k10715 in k7274 in k7271 in k6978 in k6975 in k6971 in k6680 in k6677 in k6674 in k6671 */
static void C_ccall f_13062(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_13062,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_13066,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("error");
t4=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[21],((C_word*)t0)[2]);}
else{
t4=t2;
f_13066(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k13064 in k13060 in k12196 in k12193 in spectrum-keys in k11783 in k10718 in k10715 in k7274 in k7271 in k6978 in k6975 in k6971 in k6680 in k6677 in k6674 in k6671 */
static void C_ccall f_13066(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_12201(t7,t6);}

/* k13025 in k12196 in k12193 in spectrum-keys in k11783 in k10718 in k10715 in k7274 in k7271 in k6978 in k6975 in k6971 in k6680 in k6677 in k6674 in k6671 */
static void C_ccall f_13027(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_13027,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_13031,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("error");
t4=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[21],((C_word*)t0)[2]);}
else{
t4=t2;
f_13031(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k13029 in k13025 in k12196 in k12193 in spectrum-keys in k11783 in k10718 in k10715 in k7274 in k7271 in k6978 in k6975 in k6971 in k6680 in k6677 in k6674 in k6671 */
static void C_ccall f_13031(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_12201(t7,t6);}

/* k12990 in k12196 in k12193 in spectrum-keys in k11783 in k10718 in k10715 in k7274 in k7271 in k6978 in k6975 in k6971 in k6680 in k6677 in k6674 in k6671 */
static void C_ccall f_12992(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_12992,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_12996,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("error");
t4=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[21],((C_word*)t0)[2]);}
else{
t4=t2;
f_12996(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k12994 in k12990 in k12196 in k12193 in spectrum-keys in k11783 in k10718 in k10715 in k7274 in k7271 in k6978 in k6975 in k6971 in k6680 in k6677 in k6674 in k6671 */
static void C_ccall f_12996(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_12201(t7,t6);}

/* k12955 in k12196 in k12193 in spectrum-keys in k11783 in k10718 in k10715 in k7274 in k7271 in k6978 in k6975 in k6971 in k6680 in k6677 in k6674 in k6671 */
static void C_ccall f_12957(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_12957,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_12961,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("error");
t4=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[21],((C_word*)t0)[2]);}
else{
t4=t2;
f_12961(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k12959 in k12955 in k12196 in k12193 in spectrum-keys in k11783 in k10718 in k10715 in k7274 in k7271 in k6978 in k6975 in k6971 in k6680 in k6677 in k6674 in k6671 */
static void C_ccall f_12961(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_12201(t7,t6);}

/* k12199 in k12196 in k12193 in spectrum-keys in k11783 in k10718 in k10715 in k7274 in k7271 in k6978 in k6975 in k6971 in k6680 in k6677 in k6674 in k6671 */
static void C_fcall f_12201(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word t14;
C_word t15;
C_word t16;
C_word t17;
C_word ab[73],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_12201,NULL,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|18,a[1]=(C_word)f_12204,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],a[7]=((C_word*)t0)[7],a[8]=((C_word*)t0)[8],a[9]=((C_word*)t0)[9],a[10]=((C_word*)t0)[10],a[11]=((C_word*)t0)[11],a[12]=((C_word*)t0)[12],a[13]=((C_word*)t0)[13],a[14]=((C_word*)t0)[14],a[15]=((C_word*)t0)[15],a[16]=((C_word*)t0)[16],a[17]=((C_word*)t0)[17],a[18]=((C_word*)t0)[18],tmp=(C_word)a,a+=19,tmp);
if(C_truep((C_word)C_i_nullp(((C_word*)((C_word*)t0)[10])[1]))){
t3=t2;
f_12204(t3,C_SCHEME_UNDEFINED);}
else{
t3=(C_word)C_i_car(((C_word*)((C_word*)t0)[10])[1]);
t4=(C_word)C_eqp(t3,lf[243]);
if(C_truep(t4)){
t5=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_12717,a[2]=((C_word*)t0)[9],a[3]=t2,a[4]=((C_word*)t0)[10],a[5]=((C_word*)t0)[7],a[6]=((C_word*)t0)[8],a[7]=((C_word*)t0)[16],tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)((C_word*)t0)[8])[1])){
C_trace("error");
t6=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t6))(4,t6,t5,lf[19],lf[243]);}
else{
t6=t5;
f_12717(2,t6,C_SCHEME_UNDEFINED);}}
else{
t5=(C_word)C_eqp(t3,lf[244]);
if(C_truep(t5)){
t6=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_12752,a[2]=((C_word*)t0)[9],a[3]=t2,a[4]=((C_word*)t0)[10],a[5]=((C_word*)t0)[7],a[6]=((C_word*)t0)[6],a[7]=((C_word*)t0)[15],tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)((C_word*)t0)[6])[1])){
C_trace("error");
t7=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t7))(4,t7,t6,lf[19],lf[244]);}
else{
t7=t6;
f_12752(2,t7,C_SCHEME_UNDEFINED);}}
else{
t6=(C_word)C_eqp(t3,lf[245]);
if(C_truep(t6)){
t7=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_12787,a[2]=((C_word*)t0)[9],a[3]=t2,a[4]=((C_word*)t0)[10],a[5]=((C_word*)t0)[7],a[6]=((C_word*)t0)[5],a[7]=((C_word*)t0)[14],tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)((C_word*)t0)[5])[1])){
C_trace("error");
t8=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t8))(4,t8,t7,lf[19],lf[245]);}
else{
t8=t7;
f_12787(2,t8,C_SCHEME_UNDEFINED);}}
else{
t7=(C_word)C_eqp(t3,lf[246]);
if(C_truep(t7)){
t8=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_12822,a[2]=((C_word*)t0)[9],a[3]=t2,a[4]=((C_word*)t0)[10],a[5]=((C_word*)t0)[7],a[6]=((C_word*)t0)[4],a[7]=((C_word*)t0)[13],tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)((C_word*)t0)[4])[1])){
C_trace("error");
t9=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t9))(4,t9,t8,lf[19],lf[246]);}
else{
t9=t8;
f_12822(2,t9,C_SCHEME_UNDEFINED);}}
else{
t8=(C_word)C_eqp(t3,lf[247]);
if(C_truep(t8)){
t9=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_12857,a[2]=((C_word*)t0)[9],a[3]=t2,a[4]=((C_word*)t0)[10],a[5]=((C_word*)t0)[7],a[6]=((C_word*)t0)[3],a[7]=((C_word*)t0)[12],tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)((C_word*)t0)[3])[1])){
C_trace("error");
t10=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t10))(4,t10,t9,lf[19],lf[247]);}
else{
t10=t9;
f_12857(2,t10,C_SCHEME_UNDEFINED);}}
else{
t9=(C_word)C_eqp(t3,lf[248]);
if(C_truep(t9)){
t10=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_12892,a[2]=((C_word*)t0)[9],a[3]=t2,a[4]=((C_word*)t0)[10],a[5]=((C_word*)t0)[7],a[6]=((C_word*)t0)[2],a[7]=((C_word*)t0)[11],tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)((C_word*)t0)[2])[1])){
C_trace("error");
t11=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t11))(4,t11,t10,lf[19],lf[248]);}
else{
t11=t10;
f_12892(2,t11,C_SCHEME_UNDEFINED);}}
else{
t10=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_12921,a[2]=t2,a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[13],a[5]=((C_word*)t0)[10],tmp=(C_word)a,a+=6,tmp);
if(C_truep(((C_word*)((C_word*)t0)[7])[1])){
C_trace("error");
t11=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t11))(4,t11,t10,lf[10],((C_word*)t0)[9]);}
else{
t11=t10;
f_12921(2,t11,C_SCHEME_UNDEFINED);}}}}}}}}}

/* k12919 in k12199 in k12196 in k12193 in spectrum-keys in k11783 in k10718 in k10715 in k7274 in k7271 in k6978 in k6975 in k6971 in k6680 in k6677 in k6674 in k6671 */
static void C_ccall f_12921(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_12921,2,t0,t1);}
t2=(C_word)C_i_car(((C_word*)((C_word*)t0)[5])[1]);
t3=C_mutate(((C_word *)((C_word*)t0)[4])+1,t2);
t4=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_12928,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[5],a[4]=((C_word*)t0)[3],tmp=(C_word)a,a+=5,tmp);
t5=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_12936,a[2]=((C_word*)t0)[4],a[3]=t4,tmp=(C_word)a,a+=4,tmp);
C_trace("keyword?");
t6=C_retrieve(lf[13]);
((C_proc3)C_retrieve_proc(t6))(3,t6,t5,((C_word*)((C_word*)t0)[4])[1]);}

/* k12934 in k12919 in k12199 in k12196 in k12193 in spectrum-keys in k11783 in k10718 in k10715 in k7274 in k7271 in k6978 in k6975 in k6971 in k6680 in k6677 in k6674 in k6671 */
static void C_ccall f_12936(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
if(C_truep(t1)){
C_trace("error");
t2=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t2))(4,t2,((C_word*)t0)[3],lf[14],((C_word*)((C_word*)t0)[2])[1]);}
else{
t2=((C_word*)t0)[3];
f_12928(2,t2,C_SCHEME_UNDEFINED);}}

/* k12926 in k12919 in k12199 in k12196 in k12193 in spectrum-keys in k11783 in k10718 in k10715 in k7274 in k7271 in k6978 in k6975 in k6971 in k6680 in k6677 in k6674 in k6671 */
static void C_ccall f_12928(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word *a;
t2=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[3])[1]);
t4=C_mutate(((C_word *)((C_word*)t0)[3])+1,t3);
t5=((C_word*)t0)[2];
f_12204(t5,t4);}

/* k12890 in k12199 in k12196 in k12193 in spectrum-keys in k11783 in k10718 in k10715 in k7274 in k7271 in k6978 in k6975 in k6971 in k6680 in k6677 in k6674 in k6671 */
static void C_ccall f_12892(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_12892,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_12896,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("error");
t4=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[21],((C_word*)t0)[2]);}
else{
t4=t2;
f_12896(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k12894 in k12890 in k12199 in k12196 in k12193 in spectrum-keys in k11783 in k10718 in k10715 in k7274 in k7271 in k6978 in k6975 in k6971 in k6680 in k6677 in k6674 in k6671 */
static void C_ccall f_12896(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_12204(t7,t6);}

/* k12855 in k12199 in k12196 in k12193 in spectrum-keys in k11783 in k10718 in k10715 in k7274 in k7271 in k6978 in k6975 in k6971 in k6680 in k6677 in k6674 in k6671 */
static void C_ccall f_12857(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_12857,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_12861,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("error");
t4=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[21],((C_word*)t0)[2]);}
else{
t4=t2;
f_12861(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k12859 in k12855 in k12199 in k12196 in k12193 in spectrum-keys in k11783 in k10718 in k10715 in k7274 in k7271 in k6978 in k6975 in k6971 in k6680 in k6677 in k6674 in k6671 */
static void C_ccall f_12861(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_12204(t7,t6);}

/* k12820 in k12199 in k12196 in k12193 in spectrum-keys in k11783 in k10718 in k10715 in k7274 in k7271 in k6978 in k6975 in k6971 in k6680 in k6677 in k6674 in k6671 */
static void C_ccall f_12822(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_12822,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_12826,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("error");
t4=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[21],((C_word*)t0)[2]);}
else{
t4=t2;
f_12826(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k12824 in k12820 in k12199 in k12196 in k12193 in spectrum-keys in k11783 in k10718 in k10715 in k7274 in k7271 in k6978 in k6975 in k6971 in k6680 in k6677 in k6674 in k6671 */
static void C_ccall f_12826(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_12204(t7,t6);}

/* k12785 in k12199 in k12196 in k12193 in spectrum-keys in k11783 in k10718 in k10715 in k7274 in k7271 in k6978 in k6975 in k6971 in k6680 in k6677 in k6674 in k6671 */
static void C_ccall f_12787(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_12787,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_12791,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("error");
t4=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[21],((C_word*)t0)[2]);}
else{
t4=t2;
f_12791(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k12789 in k12785 in k12199 in k12196 in k12193 in spectrum-keys in k11783 in k10718 in k10715 in k7274 in k7271 in k6978 in k6975 in k6971 in k6680 in k6677 in k6674 in k6671 */
static void C_ccall f_12791(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_12204(t7,t6);}

/* k12750 in k12199 in k12196 in k12193 in spectrum-keys in k11783 in k10718 in k10715 in k7274 in k7271 in k6978 in k6975 in k6971 in k6680 in k6677 in k6674 in k6671 */
static void C_ccall f_12752(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_12752,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_12756,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("error");
t4=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[21],((C_word*)t0)[2]);}
else{
t4=t2;
f_12756(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k12754 in k12750 in k12199 in k12196 in k12193 in spectrum-keys in k11783 in k10718 in k10715 in k7274 in k7271 in k6978 in k6975 in k6971 in k6680 in k6677 in k6674 in k6671 */
static void C_ccall f_12756(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_12204(t7,t6);}

/* k12715 in k12199 in k12196 in k12193 in spectrum-keys in k11783 in k10718 in k10715 in k7274 in k7271 in k6978 in k6975 in k6971 in k6680 in k6677 in k6674 in k6671 */
static void C_ccall f_12717(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_12717,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_12721,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("error");
t4=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[21],((C_word*)t0)[2]);}
else{
t4=t2;
f_12721(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k12719 in k12715 in k12199 in k12196 in k12193 in spectrum-keys in k11783 in k10718 in k10715 in k7274 in k7271 in k6978 in k6975 in k6971 in k6680 in k6677 in k6674 in k6671 */
static void C_ccall f_12721(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_12204(t7,t6);}

/* k12202 in k12199 in k12196 in k12193 in spectrum-keys in k11783 in k10718 in k10715 in k7274 in k7271 in k6978 in k6975 in k6971 in k6680 in k6677 in k6674 in k6671 */
static void C_fcall f_12204(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word t14;
C_word t15;
C_word t16;
C_word t17;
C_word ab[73],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_12204,NULL,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|18,a[1]=(C_word)f_12207,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],a[7]=((C_word*)t0)[7],a[8]=((C_word*)t0)[8],a[9]=((C_word*)t0)[9],a[10]=((C_word*)t0)[10],a[11]=((C_word*)t0)[11],a[12]=((C_word*)t0)[12],a[13]=((C_word*)t0)[13],a[14]=((C_word*)t0)[14],a[15]=((C_word*)t0)[15],a[16]=((C_word*)t0)[16],a[17]=((C_word*)t0)[17],a[18]=((C_word*)t0)[18],tmp=(C_word)a,a+=19,tmp);
if(C_truep((C_word)C_i_nullp(((C_word*)((C_word*)t0)[10])[1]))){
t3=t2;
f_12207(t3,C_SCHEME_UNDEFINED);}
else{
t3=(C_word)C_i_car(((C_word*)((C_word*)t0)[10])[1]);
t4=(C_word)C_eqp(t3,lf[243]);
if(C_truep(t4)){
t5=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_12477,a[2]=((C_word*)t0)[9],a[3]=t2,a[4]=((C_word*)t0)[10],a[5]=((C_word*)t0)[7],a[6]=((C_word*)t0)[8],a[7]=((C_word*)t0)[16],tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)((C_word*)t0)[8])[1])){
C_trace("error");
t6=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t6))(4,t6,t5,lf[19],lf[243]);}
else{
t6=t5;
f_12477(2,t6,C_SCHEME_UNDEFINED);}}
else{
t5=(C_word)C_eqp(t3,lf[244]);
if(C_truep(t5)){
t6=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_12512,a[2]=((C_word*)t0)[9],a[3]=t2,a[4]=((C_word*)t0)[10],a[5]=((C_word*)t0)[7],a[6]=((C_word*)t0)[6],a[7]=((C_word*)t0)[15],tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)((C_word*)t0)[6])[1])){
C_trace("error");
t7=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t7))(4,t7,t6,lf[19],lf[244]);}
else{
t7=t6;
f_12512(2,t7,C_SCHEME_UNDEFINED);}}
else{
t6=(C_word)C_eqp(t3,lf[245]);
if(C_truep(t6)){
t7=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_12547,a[2]=((C_word*)t0)[9],a[3]=t2,a[4]=((C_word*)t0)[10],a[5]=((C_word*)t0)[7],a[6]=((C_word*)t0)[5],a[7]=((C_word*)t0)[14],tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)((C_word*)t0)[5])[1])){
C_trace("error");
t8=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t8))(4,t8,t7,lf[19],lf[245]);}
else{
t8=t7;
f_12547(2,t8,C_SCHEME_UNDEFINED);}}
else{
t7=(C_word)C_eqp(t3,lf[246]);
if(C_truep(t7)){
t8=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_12582,a[2]=((C_word*)t0)[9],a[3]=t2,a[4]=((C_word*)t0)[10],a[5]=((C_word*)t0)[7],a[6]=((C_word*)t0)[4],a[7]=((C_word*)t0)[13],tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)((C_word*)t0)[4])[1])){
C_trace("error");
t9=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t9))(4,t9,t8,lf[19],lf[246]);}
else{
t9=t8;
f_12582(2,t9,C_SCHEME_UNDEFINED);}}
else{
t8=(C_word)C_eqp(t3,lf[247]);
if(C_truep(t8)){
t9=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_12617,a[2]=((C_word*)t0)[9],a[3]=t2,a[4]=((C_word*)t0)[10],a[5]=((C_word*)t0)[7],a[6]=((C_word*)t0)[3],a[7]=((C_word*)t0)[12],tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)((C_word*)t0)[3])[1])){
C_trace("error");
t10=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t10))(4,t10,t9,lf[19],lf[247]);}
else{
t10=t9;
f_12617(2,t10,C_SCHEME_UNDEFINED);}}
else{
t9=(C_word)C_eqp(t3,lf[248]);
if(C_truep(t9)){
t10=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_12652,a[2]=((C_word*)t0)[9],a[3]=t2,a[4]=((C_word*)t0)[10],a[5]=((C_word*)t0)[7],a[6]=((C_word*)t0)[2],a[7]=((C_word*)t0)[11],tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)((C_word*)t0)[2])[1])){
C_trace("error");
t11=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t11))(4,t11,t10,lf[19],lf[248]);}
else{
t11=t10;
f_12652(2,t11,C_SCHEME_UNDEFINED);}}
else{
t10=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_12681,a[2]=t2,a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[12],a[5]=((C_word*)t0)[10],tmp=(C_word)a,a+=6,tmp);
if(C_truep(((C_word*)((C_word*)t0)[7])[1])){
C_trace("error");
t11=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t11))(4,t11,t10,lf[10],((C_word*)t0)[9]);}
else{
t11=t10;
f_12681(2,t11,C_SCHEME_UNDEFINED);}}}}}}}}}

/* k12679 in k12202 in k12199 in k12196 in k12193 in spectrum-keys in k11783 in k10718 in k10715 in k7274 in k7271 in k6978 in k6975 in k6971 in k6680 in k6677 in k6674 in k6671 */
static void C_ccall f_12681(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_12681,2,t0,t1);}
t2=(C_word)C_i_car(((C_word*)((C_word*)t0)[5])[1]);
t3=C_mutate(((C_word *)((C_word*)t0)[4])+1,t2);
t4=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_12688,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[5],a[4]=((C_word*)t0)[3],tmp=(C_word)a,a+=5,tmp);
t5=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_12696,a[2]=((C_word*)t0)[4],a[3]=t4,tmp=(C_word)a,a+=4,tmp);
C_trace("keyword?");
t6=C_retrieve(lf[13]);
((C_proc3)C_retrieve_proc(t6))(3,t6,t5,((C_word*)((C_word*)t0)[4])[1]);}

/* k12694 in k12679 in k12202 in k12199 in k12196 in k12193 in spectrum-keys in k11783 in k10718 in k10715 in k7274 in k7271 in k6978 in k6975 in k6971 in k6680 in k6677 in k6674 in k6671 */
static void C_ccall f_12696(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
if(C_truep(t1)){
C_trace("error");
t2=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t2))(4,t2,((C_word*)t0)[3],lf[14],((C_word*)((C_word*)t0)[2])[1]);}
else{
t2=((C_word*)t0)[3];
f_12688(2,t2,C_SCHEME_UNDEFINED);}}

/* k12686 in k12679 in k12202 in k12199 in k12196 in k12193 in spectrum-keys in k11783 in k10718 in k10715 in k7274 in k7271 in k6978 in k6975 in k6971 in k6680 in k6677 in k6674 in k6671 */
static void C_ccall f_12688(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word *a;
t2=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[3])[1]);
t4=C_mutate(((C_word *)((C_word*)t0)[3])+1,t3);
t5=((C_word*)t0)[2];
f_12207(t5,t4);}

/* k12650 in k12202 in k12199 in k12196 in k12193 in spectrum-keys in k11783 in k10718 in k10715 in k7274 in k7271 in k6978 in k6975 in k6971 in k6680 in k6677 in k6674 in k6671 */
static void C_ccall f_12652(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_12652,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_12656,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("error");
t4=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[21],((C_word*)t0)[2]);}
else{
t4=t2;
f_12656(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k12654 in k12650 in k12202 in k12199 in k12196 in k12193 in spectrum-keys in k11783 in k10718 in k10715 in k7274 in k7271 in k6978 in k6975 in k6971 in k6680 in k6677 in k6674 in k6671 */
static void C_ccall f_12656(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_12207(t7,t6);}

/* k12615 in k12202 in k12199 in k12196 in k12193 in spectrum-keys in k11783 in k10718 in k10715 in k7274 in k7271 in k6978 in k6975 in k6971 in k6680 in k6677 in k6674 in k6671 */
static void C_ccall f_12617(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_12617,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_12621,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("error");
t4=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[21],((C_word*)t0)[2]);}
else{
t4=t2;
f_12621(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k12619 in k12615 in k12202 in k12199 in k12196 in k12193 in spectrum-keys in k11783 in k10718 in k10715 in k7274 in k7271 in k6978 in k6975 in k6971 in k6680 in k6677 in k6674 in k6671 */
static void C_ccall f_12621(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_12207(t7,t6);}

/* k12580 in k12202 in k12199 in k12196 in k12193 in spectrum-keys in k11783 in k10718 in k10715 in k7274 in k7271 in k6978 in k6975 in k6971 in k6680 in k6677 in k6674 in k6671 */
static void C_ccall f_12582(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_12582,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_12586,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("error");
t4=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[21],((C_word*)t0)[2]);}
else{
t4=t2;
f_12586(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k12584 in k12580 in k12202 in k12199 in k12196 in k12193 in spectrum-keys in k11783 in k10718 in k10715 in k7274 in k7271 in k6978 in k6975 in k6971 in k6680 in k6677 in k6674 in k6671 */
static void C_ccall f_12586(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_12207(t7,t6);}

/* k12545 in k12202 in k12199 in k12196 in k12193 in spectrum-keys in k11783 in k10718 in k10715 in k7274 in k7271 in k6978 in k6975 in k6971 in k6680 in k6677 in k6674 in k6671 */
static void C_ccall f_12547(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_12547,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_12551,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("error");
t4=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[21],((C_word*)t0)[2]);}
else{
t4=t2;
f_12551(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k12549 in k12545 in k12202 in k12199 in k12196 in k12193 in spectrum-keys in k11783 in k10718 in k10715 in k7274 in k7271 in k6978 in k6975 in k6971 in k6680 in k6677 in k6674 in k6671 */
static void C_ccall f_12551(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_12207(t7,t6);}

/* k12510 in k12202 in k12199 in k12196 in k12193 in spectrum-keys in k11783 in k10718 in k10715 in k7274 in k7271 in k6978 in k6975 in k6971 in k6680 in k6677 in k6674 in k6671 */
static void C_ccall f_12512(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_12512,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_12516,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("error");
t4=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[21],((C_word*)t0)[2]);}
else{
t4=t2;
f_12516(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k12514 in k12510 in k12202 in k12199 in k12196 in k12193 in spectrum-keys in k11783 in k10718 in k10715 in k7274 in k7271 in k6978 in k6975 in k6971 in k6680 in k6677 in k6674 in k6671 */
static void C_ccall f_12516(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_12207(t7,t6);}

/* k12475 in k12202 in k12199 in k12196 in k12193 in spectrum-keys in k11783 in k10718 in k10715 in k7274 in k7271 in k6978 in k6975 in k6971 in k6680 in k6677 in k6674 in k6671 */
static void C_ccall f_12477(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_12477,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_12481,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("error");
t4=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[21],((C_word*)t0)[2]);}
else{
t4=t2;
f_12481(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k12479 in k12475 in k12202 in k12199 in k12196 in k12193 in spectrum-keys in k11783 in k10718 in k10715 in k7274 in k7271 in k6978 in k6975 in k6971 in k6680 in k6677 in k6674 in k6671 */
static void C_ccall f_12481(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_12207(t7,t6);}

/* k12205 in k12202 in k12199 in k12196 in k12193 in spectrum-keys in k11783 in k10718 in k10715 in k7274 in k7271 in k6978 in k6975 in k6971 in k6680 in k6677 in k6674 in k6671 */
static void C_fcall f_12207(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word t14;
C_word t15;
C_word t16;
C_word t17;
C_word ab[66],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_12207,NULL,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|11,a[1]=(C_word)f_12210,a[2]=((C_word*)t0)[9],a[3]=((C_word*)t0)[10],a[4]=((C_word*)t0)[11],a[5]=((C_word*)t0)[12],a[6]=((C_word*)t0)[13],a[7]=((C_word*)t0)[14],a[8]=((C_word*)t0)[15],a[9]=((C_word*)t0)[16],a[10]=((C_word*)t0)[17],a[11]=((C_word*)t0)[18],tmp=(C_word)a,a+=12,tmp);
if(C_truep((C_word)C_i_nullp(((C_word*)((C_word*)t0)[10])[1]))){
t3=t2;
f_12210(t3,C_SCHEME_UNDEFINED);}
else{
t3=(C_word)C_i_car(((C_word*)((C_word*)t0)[10])[1]);
t4=(C_word)C_eqp(t3,lf[243]);
if(C_truep(t4)){
t5=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_12237,a[2]=((C_word*)t0)[9],a[3]=t2,a[4]=((C_word*)t0)[10],a[5]=((C_word*)t0)[7],a[6]=((C_word*)t0)[8],a[7]=((C_word*)t0)[16],tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)((C_word*)t0)[8])[1])){
C_trace("error");
t6=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t6))(4,t6,t5,lf[19],lf[243]);}
else{
t6=t5;
f_12237(2,t6,C_SCHEME_UNDEFINED);}}
else{
t5=(C_word)C_eqp(t3,lf[244]);
if(C_truep(t5)){
t6=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_12272,a[2]=((C_word*)t0)[9],a[3]=t2,a[4]=((C_word*)t0)[10],a[5]=((C_word*)t0)[7],a[6]=((C_word*)t0)[6],a[7]=((C_word*)t0)[15],tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)((C_word*)t0)[6])[1])){
C_trace("error");
t7=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t7))(4,t7,t6,lf[19],lf[244]);}
else{
t7=t6;
f_12272(2,t7,C_SCHEME_UNDEFINED);}}
else{
t6=(C_word)C_eqp(t3,lf[245]);
if(C_truep(t6)){
t7=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_12307,a[2]=((C_word*)t0)[9],a[3]=t2,a[4]=((C_word*)t0)[10],a[5]=((C_word*)t0)[7],a[6]=((C_word*)t0)[5],a[7]=((C_word*)t0)[14],tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)((C_word*)t0)[5])[1])){
C_trace("error");
t8=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t8))(4,t8,t7,lf[19],lf[245]);}
else{
t8=t7;
f_12307(2,t8,C_SCHEME_UNDEFINED);}}
else{
t7=(C_word)C_eqp(t3,lf[246]);
if(C_truep(t7)){
t8=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_12342,a[2]=((C_word*)t0)[9],a[3]=t2,a[4]=((C_word*)t0)[10],a[5]=((C_word*)t0)[7],a[6]=((C_word*)t0)[4],a[7]=((C_word*)t0)[13],tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)((C_word*)t0)[4])[1])){
C_trace("error");
t9=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t9))(4,t9,t8,lf[19],lf[246]);}
else{
t9=t8;
f_12342(2,t9,C_SCHEME_UNDEFINED);}}
else{
t8=(C_word)C_eqp(t3,lf[247]);
if(C_truep(t8)){
t9=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_12377,a[2]=((C_word*)t0)[9],a[3]=t2,a[4]=((C_word*)t0)[10],a[5]=((C_word*)t0)[7],a[6]=((C_word*)t0)[3],a[7]=((C_word*)t0)[12],tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)((C_word*)t0)[3])[1])){
C_trace("error");
t10=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t10))(4,t10,t9,lf[19],lf[247]);}
else{
t10=t9;
f_12377(2,t10,C_SCHEME_UNDEFINED);}}
else{
t9=(C_word)C_eqp(t3,lf[248]);
if(C_truep(t9)){
t10=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_12412,a[2]=((C_word*)t0)[9],a[3]=t2,a[4]=((C_word*)t0)[10],a[5]=((C_word*)t0)[7],a[6]=((C_word*)t0)[2],a[7]=((C_word*)t0)[11],tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)((C_word*)t0)[2])[1])){
C_trace("error");
t11=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t11))(4,t11,t10,lf[19],lf[248]);}
else{
t11=t10;
f_12412(2,t11,C_SCHEME_UNDEFINED);}}
else{
t10=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_12441,a[2]=t2,a[3]=((C_word*)t0)[2],a[4]=((C_word*)t0)[11],a[5]=((C_word*)t0)[10],tmp=(C_word)a,a+=6,tmp);
if(C_truep(((C_word*)((C_word*)t0)[7])[1])){
C_trace("error");
t11=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t11))(4,t11,t10,lf[10],((C_word*)t0)[9]);}
else{
t11=t10;
f_12441(2,t11,C_SCHEME_UNDEFINED);}}}}}}}}}

/* k12439 in k12205 in k12202 in k12199 in k12196 in k12193 in spectrum-keys in k11783 in k10718 in k10715 in k7274 in k7271 in k6978 in k6975 in k6971 in k6680 in k6677 in k6674 in k6671 */
static void C_ccall f_12441(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_12441,2,t0,t1);}
t2=(C_word)C_i_car(((C_word*)((C_word*)t0)[5])[1]);
t3=C_mutate(((C_word *)((C_word*)t0)[4])+1,t2);
t4=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_12448,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[5],a[4]=((C_word*)t0)[3],tmp=(C_word)a,a+=5,tmp);
t5=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_12456,a[2]=((C_word*)t0)[4],a[3]=t4,tmp=(C_word)a,a+=4,tmp);
C_trace("keyword?");
t6=C_retrieve(lf[13]);
((C_proc3)C_retrieve_proc(t6))(3,t6,t5,((C_word*)((C_word*)t0)[4])[1]);}

/* k12454 in k12439 in k12205 in k12202 in k12199 in k12196 in k12193 in spectrum-keys in k11783 in k10718 in k10715 in k7274 in k7271 in k6978 in k6975 in k6971 in k6680 in k6677 in k6674 in k6671 */
static void C_ccall f_12456(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
if(C_truep(t1)){
C_trace("error");
t2=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t2))(4,t2,((C_word*)t0)[3],lf[14],((C_word*)((C_word*)t0)[2])[1]);}
else{
t2=((C_word*)t0)[3];
f_12448(2,t2,C_SCHEME_UNDEFINED);}}

/* k12446 in k12439 in k12205 in k12202 in k12199 in k12196 in k12193 in spectrum-keys in k11783 in k10718 in k10715 in k7274 in k7271 in k6978 in k6975 in k6971 in k6680 in k6677 in k6674 in k6671 */
static void C_ccall f_12448(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word *a;
t2=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[3])[1]);
t4=C_mutate(((C_word *)((C_word*)t0)[3])+1,t3);
t5=((C_word*)t0)[2];
f_12210(t5,t4);}

/* k12410 in k12205 in k12202 in k12199 in k12196 in k12193 in spectrum-keys in k11783 in k10718 in k10715 in k7274 in k7271 in k6978 in k6975 in k6971 in k6680 in k6677 in k6674 in k6671 */
static void C_ccall f_12412(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_12412,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_12416,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("error");
t4=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[21],((C_word*)t0)[2]);}
else{
t4=t2;
f_12416(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k12414 in k12410 in k12205 in k12202 in k12199 in k12196 in k12193 in spectrum-keys in k11783 in k10718 in k10715 in k7274 in k7271 in k6978 in k6975 in k6971 in k6680 in k6677 in k6674 in k6671 */
static void C_ccall f_12416(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_12210(t7,t6);}

/* k12375 in k12205 in k12202 in k12199 in k12196 in k12193 in spectrum-keys in k11783 in k10718 in k10715 in k7274 in k7271 in k6978 in k6975 in k6971 in k6680 in k6677 in k6674 in k6671 */
static void C_ccall f_12377(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_12377,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_12381,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("error");
t4=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[21],((C_word*)t0)[2]);}
else{
t4=t2;
f_12381(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k12379 in k12375 in k12205 in k12202 in k12199 in k12196 in k12193 in spectrum-keys in k11783 in k10718 in k10715 in k7274 in k7271 in k6978 in k6975 in k6971 in k6680 in k6677 in k6674 in k6671 */
static void C_ccall f_12381(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_12210(t7,t6);}

/* k12340 in k12205 in k12202 in k12199 in k12196 in k12193 in spectrum-keys in k11783 in k10718 in k10715 in k7274 in k7271 in k6978 in k6975 in k6971 in k6680 in k6677 in k6674 in k6671 */
static void C_ccall f_12342(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_12342,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_12346,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("error");
t4=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[21],((C_word*)t0)[2]);}
else{
t4=t2;
f_12346(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k12344 in k12340 in k12205 in k12202 in k12199 in k12196 in k12193 in spectrum-keys in k11783 in k10718 in k10715 in k7274 in k7271 in k6978 in k6975 in k6971 in k6680 in k6677 in k6674 in k6671 */
static void C_ccall f_12346(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_12210(t7,t6);}

/* k12305 in k12205 in k12202 in k12199 in k12196 in k12193 in spectrum-keys in k11783 in k10718 in k10715 in k7274 in k7271 in k6978 in k6975 in k6971 in k6680 in k6677 in k6674 in k6671 */
static void C_ccall f_12307(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_12307,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_12311,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("error");
t4=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[21],((C_word*)t0)[2]);}
else{
t4=t2;
f_12311(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k12309 in k12305 in k12205 in k12202 in k12199 in k12196 in k12193 in spectrum-keys in k11783 in k10718 in k10715 in k7274 in k7271 in k6978 in k6975 in k6971 in k6680 in k6677 in k6674 in k6671 */
static void C_ccall f_12311(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_12210(t7,t6);}

/* k12270 in k12205 in k12202 in k12199 in k12196 in k12193 in spectrum-keys in k11783 in k10718 in k10715 in k7274 in k7271 in k6978 in k6975 in k6971 in k6680 in k6677 in k6674 in k6671 */
static void C_ccall f_12272(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_12272,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_12276,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("error");
t4=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[21],((C_word*)t0)[2]);}
else{
t4=t2;
f_12276(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k12274 in k12270 in k12205 in k12202 in k12199 in k12196 in k12193 in spectrum-keys in k11783 in k10718 in k10715 in k7274 in k7271 in k6978 in k6975 in k6971 in k6680 in k6677 in k6674 in k6671 */
static void C_ccall f_12276(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_12210(t7,t6);}

/* k12235 in k12205 in k12202 in k12199 in k12196 in k12193 in spectrum-keys in k11783 in k10718 in k10715 in k7274 in k7271 in k6978 in k6975 in k6971 in k6680 in k6677 in k6674 in k6671 */
static void C_ccall f_12237(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_12237,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_12241,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("error");
t4=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[21],((C_word*)t0)[2]);}
else{
t4=t2;
f_12241(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k12239 in k12235 in k12205 in k12202 in k12199 in k12196 in k12193 in spectrum-keys in k11783 in k10718 in k10715 in k7274 in k7271 in k6978 in k6975 in k6971 in k6680 in k6677 in k6674 in k6671 */
static void C_ccall f_12241(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_12210(t7,t6);}

/* k12208 in k12205 in k12202 in k12199 in k12196 in k12193 in spectrum-keys in k11783 in k10718 in k10715 in k7274 in k7271 in k6978 in k6975 in k6971 in k6680 in k6677 in k6674 in k6671 */
static void C_fcall f_12210(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[10],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_12210,NULL,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|9,a[1]=(C_word)f_12213,a[2]=((C_word*)t0)[4],a[3]=((C_word*)t0)[5],a[4]=((C_word*)t0)[6],a[5]=((C_word*)t0)[7],a[6]=((C_word*)t0)[8],a[7]=((C_word*)t0)[9],a[8]=((C_word*)t0)[10],a[9]=((C_word*)t0)[11],tmp=(C_word)a,a+=10,tmp);
if(C_truep((C_word)C_i_nullp(((C_word*)((C_word*)t0)[3])[1]))){
t3=t2;
f_12213(2,t3,C_SCHEME_UNDEFINED);}
else{
C_trace("error");
t3=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t3))(4,t3,t2,lf[5],((C_word*)t0)[2]);}}

/* k12211 in k12208 in k12205 in k12202 in k12199 in k12196 in k12193 in spectrum-keys in k11783 in k10718 in k10715 in k7274 in k7271 in k6978 in k6975 in k6971 in k6680 in k6677 in k6674 in k6671 */
static void C_ccall f_12213(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word t14;
C_word ab[12],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_12213,2,t0,t1);}
t2=((C_word*)t0)[9];
t3=((C_word*)t0)[8];
t4=((C_word*)((C_word*)t0)[7])[1];
t5=((C_word*)((C_word*)t0)[6])[1];
t6=((C_word*)((C_word*)t0)[5])[1];
t7=((C_word*)((C_word*)t0)[4])[1];
t8=(*a=C_VECTOR_TYPE|1,a[1]=t7,tmp=(C_word)a,a+=2,tmp);
t9=((C_word*)((C_word*)t0)[3])[1];
t10=((C_word*)((C_word*)t0)[2])[1];
t11=(*a=C_CLOSURE_TYPE|9,a[1]=(C_word)f_11972,a[2]=t3,a[3]=t8,a[4]=t5,a[5]=t2,a[6]=t4,a[7]=t6,a[8]=t10,a[9]=t9,tmp=(C_word)a,a+=10,tmp);
t12=(C_word)C_eqp(((C_word*)t8)[1],C_SCHEME_TRUE);
if(C_truep(t12)){
t13=C_set_block_item(t8,0,C_fix(1));
t14=t11;
f_11972(t14,t13);}
else{
t13=t11;
f_11972(t13,C_SCHEME_UNDEFINED);}}

/* k11970 in k12211 in k12208 in k12205 in k12202 in k12199 in k12196 in k12193 in spectrum-keys in k11783 in k10718 in k10715 in k7274 in k7271 in k6978 in k6975 in k6971 in k6680 in k6677 in k6674 in k6671 */
static void C_fcall f_11972(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word t14;
C_word t15;
C_word t16;
C_word t17;
C_word t18;
C_word t19;
C_word ab[35],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_11972,NULL,2,t0,t1);}
t2=C_SCHEME_UNDEFINED;
t3=(*a=C_VECTOR_TYPE|1,a[1]=t2,tmp=(C_word)a,a+=2,tmp);
t4=C_SCHEME_UNDEFINED;
t5=(*a=C_VECTOR_TYPE|1,a[1]=t4,tmp=(C_word)a,a+=2,tmp);
t6=C_SCHEME_UNDEFINED;
t7=(*a=C_VECTOR_TYPE|1,a[1]=t6,tmp=(C_word)a,a+=2,tmp);
t8=C_SCHEME_UNDEFINED;
t9=(*a=C_VECTOR_TYPE|1,a[1]=t8,tmp=(C_word)a,a+=2,tmp);
t10=C_SCHEME_UNDEFINED;
t11=(*a=C_VECTOR_TYPE|1,a[1]=t10,tmp=(C_word)a,a+=2,tmp);
t12=C_SCHEME_UNDEFINED;
t13=(*a=C_VECTOR_TYPE|1,a[1]=t12,tmp=(C_word)a,a+=2,tmp);
t14=C_SCHEME_UNDEFINED;
t15=(*a=C_VECTOR_TYPE|1,a[1]=t14,tmp=(C_word)a,a+=2,tmp);
t16=(C_word)C_a_i_list(&a,1,C_SCHEME_FALSE);
t17=C_set_block_item(t3,0,t16);
t18=(*a=C_CLOSURE_TYPE|17,a[1]=(C_word)f_11981,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=t15,a[7]=t13,a[8]=t3,a[9]=t16,a[10]=((C_word*)t0)[6],a[11]=t11,a[12]=((C_word*)t0)[7],a[13]=((C_word*)t0)[8],a[14]=((C_word*)t0)[9],a[15]=t9,a[16]=t7,a[17]=t5,tmp=(C_word)a,a+=18,tmp);
C_trace("ChickenBridge.scm: 378  spectrum-freqs");
t19=C_retrieve(lf[228]);
((C_proc3)C_retrieve_proc(t19))(3,t19,t18,((C_word*)t0)[2]);}

/* k11979 in k11970 in k12211 in k12208 in k12205 in k12202 in k12199 in k12196 in k12193 in spectrum-keys in k11783 in k10718 in k10715 in k7274 in k7271 in k6978 in k6975 in k6971 in k6680 in k6677 in k6674 in k6671 */
static void C_ccall f_11981(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[17],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_11981,2,t0,t1);}
t2=C_mutate(((C_word *)((C_word*)t0)[17])+1,t1);
t3=(*a=C_CLOSURE_TYPE|16,a[1]=(C_word)f_11985,a[2]=((C_word*)t0)[17],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],a[7]=((C_word*)t0)[7],a[8]=((C_word*)t0)[8],a[9]=((C_word*)t0)[9],a[10]=((C_word*)t0)[10],a[11]=((C_word*)t0)[11],a[12]=((C_word*)t0)[12],a[13]=((C_word*)t0)[13],a[14]=((C_word*)t0)[14],a[15]=((C_word*)t0)[15],a[16]=((C_word*)t0)[16],tmp=(C_word)a,a+=17,tmp);
C_trace("ChickenBridge.scm: 378  spectrum-amps");
t4=C_retrieve(lf[230]);
((C_proc3)C_retrieve_proc(t4))(3,t4,t3,((C_word*)t0)[2]);}

/* k11983 in k11979 in k11970 in k12211 in k12208 in k12205 in k12202 in k12199 in k12196 in k12193 in spectrum-keys in k11783 in k10718 in k10715 in k7274 in k7271 in k6978 in k6975 in k6971 in k6680 in k6677 in k6674 in k6671 */
static void C_ccall f_11985(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word ab[38],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_11985,2,t0,t1);}
t2=C_mutate(((C_word *)((C_word*)t0)[16])+1,t1);
t3=C_mutate(((C_word *)((C_word*)t0)[15])+1,(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_11987,a[2]=((C_word*)t0)[12],a[3]=((C_word*)t0)[13],a[4]=((C_word*)t0)[14],a[5]=((C_word)li169),tmp=(C_word)a,a+=6,tmp));
t4=C_mutate(((C_word *)((C_word*)t0)[11])+1,(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_12059,a[2]=((C_word*)t0)[8],a[3]=((C_word*)t0)[9],a[4]=((C_word*)t0)[10],a[5]=((C_word)li170),tmp=(C_word)a,a+=6,tmp));
t5=C_mutate(((C_word *)((C_word*)t0)[7])+1,(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_12092,a[2]=((C_word*)t0)[15],a[3]=((C_word*)t0)[11],a[4]=((C_word)li171),tmp=(C_word)a,a+=5,tmp));
t6=C_mutate(((C_word *)((C_word*)t0)[6])+1,(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_12102,a[2]=((C_word*)t0)[15],a[3]=((C_word*)t0)[11],a[4]=((C_word*)t0)[9],a[5]=((C_word)li172),tmp=(C_word)a,a+=6,tmp));
t7=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_12122,a[2]=((C_word*)t0)[5],a[3]=((C_word*)t0)[10],a[4]=((C_word*)t0)[9],tmp=(C_word)a,a+=5,tmp);
t8=(C_word)C_i_not(((C_word*)t0)[4]);
t9=(C_truep(t8)?t8:(C_word)C_i_not(((C_word*)((C_word*)t0)[16])[1]));
if(C_truep(t9)){
if(C_truep(((C_word*)((C_word*)t0)[3])[1])){
C_trace("for-each");
t10=*((C_word*)lf[237]+1);
((C_proc4)(void*)(*((C_word*)t10+1)))(4,t10,t7,((C_word*)((C_word*)t0)[6])[1],((C_word*)((C_word*)t0)[2])[1]);}
else{
C_trace("for-each");
t10=*((C_word*)lf[237]+1);
((C_proc4)(void*)(*((C_word*)t10+1)))(4,t10,t7,((C_word*)((C_word*)t0)[7])[1],((C_word*)((C_word*)t0)[2])[1]);}}
else{
if(C_truep(((C_word*)((C_word*)t0)[3])[1])){
t10=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_12157,a[2]=((C_word*)t0)[6],a[3]=((C_word*)t0)[4],a[4]=((C_word)li173),tmp=(C_word)a,a+=5,tmp);
C_trace("ChickenBridge.scm: 378  for-each");
t11=*((C_word*)lf[242]+1);
((C_proc5)C_retrieve_proc(t11))(5,t11,t7,t10,((C_word*)((C_word*)t0)[2])[1],((C_word*)((C_word*)t0)[16])[1]);}
else{
t10=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_12172,a[2]=((C_word*)t0)[7],a[3]=((C_word*)t0)[4],a[4]=((C_word)li174),tmp=(C_word)a,a+=5,tmp);
C_trace("ChickenBridge.scm: 378  for-each");
t11=*((C_word*)lf[242]+1);
((C_proc5)C_retrieve_proc(t11))(5,t11,t7,t10,((C_word*)((C_word*)t0)[2])[1],((C_word*)((C_word*)t0)[16])[1]);}}}

/* a12171 in k11983 in k11979 in k11970 in k12211 in k12208 in k12205 in k12202 in k12199 in k12196 in k12193 in spectrum-keys in k11783 in k10718 in k10715 in k7274 in k7271 in k6978 in k6975 in k6971 in k6680 in k6677 in k6674 in k6671 */
static void C_ccall f_12172(C_word c,C_word t0,C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word *a;
if(c!=4) C_bad_argc_2(c,4,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr4,(void*)f_12172,4,t0,t1,t2,t3);}
if(C_truep((C_word)C_i_greater_or_equalp(t3,((C_word*)t0)[3]))){
C_trace("ChickenBridge.scm: 378  addkey");
t4=((C_word*)((C_word*)t0)[2])[1];
((C_proc3)C_retrieve_proc(t4))(3,t4,t1,t2);}
else{
t4=t1;
((C_proc2)(void*)(*((C_word*)t4+1)))(2,t4,C_SCHEME_UNDEFINED);}}

/* a12156 in k11983 in k11979 in k11970 in k12211 in k12208 in k12205 in k12202 in k12199 in k12196 in k12193 in spectrum-keys in k11783 in k10718 in k10715 in k7274 in k7271 in k6978 in k6975 in k6971 in k6680 in k6677 in k6674 in k6671 */
static void C_ccall f_12157(C_word c,C_word t0,C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word *a;
if(c!=4) C_bad_argc_2(c,4,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr4,(void*)f_12157,4,t0,t1,t2,t3);}
if(C_truep((C_word)C_i_greater_or_equalp(t3,((C_word*)t0)[3]))){
C_trace("ChickenBridge.scm: 378  adduniquekey");
t4=((C_word*)((C_word*)t0)[2])[1];
((C_proc3)C_retrieve_proc(t4))(3,t4,t1,t2);}
else{
t4=t1;
((C_proc2)(void*)(*((C_word*)t4+1)))(2,t4,C_SCHEME_UNDEFINED);}}

/* k12120 in k11983 in k11979 in k11970 in k12211 in k12208 in k12205 in k12202 in k12199 in k12196 in k12193 in spectrum-keys in k11783 in k10718 in k10715 in k7274 in k7271 in k6978 in k6975 in k6971 in k6680 in k6677 in k6674 in k6671 */
static void C_ccall f_12122(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word *a;
t2=(C_word)C_i_cdr(((C_word*)t0)[4]);
t3=(C_word)C_eqp(((C_word*)t0)[3],C_fix(0));
if(C_truep(t3)){
C_trace("ChickenBridge.scm: 378  shuffle!");
t4=C_retrieve(lf[171]);
((C_proc3)C_retrieve_proc(t4))(3,t4,((C_word*)t0)[2],t2);}
else{
t4=((C_word*)t0)[2];
((C_proc2)(void*)(*((C_word*)t4+1)))(2,t4,t2);}}

/* f_12102 in k11983 in k11979 in k11970 in k12211 in k12208 in k12205 in k12202 in k12199 in k12196 in k12193 in spectrum-keys in k11783 in k10718 in k10715 in k7274 in k7271 in k6978 in k6975 in k6971 in k6680 in k6677 in k6674 in k6671 */
static void C_ccall f_12102(C_word c,C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word ab[5],*a=ab;
if(c!=3) C_bad_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr3,(void*)f_12102,3,t0,t1,t2);}
t3=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_12106,a[2]=((C_word*)t0)[3],a[3]=t1,a[4]=((C_word*)t0)[4],tmp=(C_word)a,a+=5,tmp);
C_trace("ChickenBridge.scm: 378  getkey");
t4=((C_word*)((C_word*)t0)[2])[1];
((C_proc3)C_retrieve_proc(t4))(3,t4,t3,t2);}

/* k12104 */
static void C_ccall f_12106(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word *a;
t2=(C_word)C_i_cdr(((C_word*)t0)[4]);
if(C_truep((C_word)C_i_member(t1,t2))){
t3=((C_word*)t0)[3];
((C_proc2)(void*)(*((C_word*)t3+1)))(2,t3,C_SCHEME_UNDEFINED);}
else{
C_trace("ChickenBridge.scm: 378  add");
t3=((C_word*)((C_word*)t0)[2])[1];
((C_proc3)C_retrieve_proc(t3))(3,t3,((C_word*)t0)[3],t1);}}

/* f_12092 in k11983 in k11979 in k11970 in k12211 in k12208 in k12205 in k12202 in k12199 in k12196 in k12193 in spectrum-keys in k11783 in k10718 in k10715 in k7274 in k7271 in k6978 in k6975 in k6971 in k6680 in k6677 in k6674 in k6671 */
static void C_ccall f_12092(C_word c,C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word ab[4],*a=ab;
if(c!=3) C_bad_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr3,(void*)f_12092,3,t0,t1,t2);}
t3=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_12100,a[2]=t1,a[3]=((C_word*)t0)[3],tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 378  getkey");
t4=((C_word*)((C_word*)t0)[2])[1];
((C_proc3)C_retrieve_proc(t4))(3,t4,t3,t2);}

/* k12098 */
static void C_ccall f_12100(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 378  add");
t2=((C_word*)((C_word*)t0)[3])[1];
((C_proc3)C_retrieve_proc(t2))(3,t2,((C_word*)t0)[2],t1);}

/* f_12059 in k11983 in k11979 in k11970 in k12211 in k12208 in k12205 in k12202 in k12199 in k12196 in k12193 in spectrum-keys in k11783 in k10718 in k10715 in k7274 in k7271 in k6978 in k6975 in k6971 in k6680 in k6677 in k6674 in k6671 */
static void C_ccall f_12059(C_word c,C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word ab[6],*a=ab;
if(c!=3) C_bad_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr3,(void*)f_12059,3,t0,t1,t2);}
t3=(C_word)C_eqp(((C_word*)t0)[4],C_fix(-1));
if(C_truep(t3)){
t4=(C_word)C_a_i_list(&a,1,t2);
t5=(C_word)C_i_cdr(((C_word*)t0)[3]);
t6=(C_word)C_i_set_cdr(t4,t5);
t7=t1;
((C_proc2)(void*)(*((C_word*)t7+1)))(2,t7,(C_word)C_i_set_cdr(((C_word*)t0)[3],t4));}
else{
t4=(C_word)C_a_i_list(&a,1,t2);
t5=(C_word)C_i_set_cdr(((C_word*)((C_word*)t0)[2])[1],t4);
t6=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[2])[1]);
t7=C_mutate(((C_word *)((C_word*)t0)[2])+1,t6);
t8=t1;
((C_proc2)(void*)(*((C_word*)t8+1)))(2,t8,t7);}}

/* f_11987 in k11983 in k11979 in k11970 in k12211 in k12208 in k12205 in k12202 in k12199 in k12196 in k12193 in spectrum-keys in k11783 in k10718 in k10715 in k7274 in k7271 in k6978 in k6975 in k6971 in k6680 in k6677 in k6674 in k6671 */
static void C_ccall f_11987(C_word c,C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word t5;
C_word ab[9],*a=ab;
if(c!=3) C_bad_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr3,(void*)f_11987,3,t0,t1,t2);}
t3=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_11991,a[2]=((C_word*)t0)[3],a[3]=t1,a[4]=((C_word*)t0)[4],tmp=(C_word)a,a+=5,tmp);
if(C_truep(((C_word*)t0)[2])){
t4=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_12054,a[2]=((C_word*)t0)[2],a[3]=t3,tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 378  key");
t5=C_retrieve(lf[205]);
((C_proc3)C_retrieve_proc(t5))(3,t5,t4,t2);}
else{
C_trace("ChickenBridge.scm: 378  key");
t4=C_retrieve(lf[205]);
((C_proc3)C_retrieve_proc(t4))(3,t4,t3,t2);}}

/* k12052 */
static void C_ccall f_12054(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 378  quantize");
t2=C_retrieve(lf[134]);
((C_proc4)C_retrieve_proc(t2))(4,t2,((C_word*)t0)[3],t1,((C_word*)t0)[2]);}

/* k11989 */
static void C_ccall f_11991(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word ab[18],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_11991,2,t0,t1);}
t2=t1;
t3=(*a=C_VECTOR_TYPE|1,a[1]=t2,tmp=(C_word)a,a+=2,tmp);
t4=(C_truep(((C_word*)t0)[4])?(C_word)C_i_lessp(((C_word*)t3)[1],((C_word*)t0)[4]):C_SCHEME_FALSE);
if(C_truep(t4)){
t5=C_SCHEME_UNDEFINED;
t6=(*a=C_VECTOR_TYPE|1,a[1]=t5,tmp=(C_word)a,a+=2,tmp);
t7=C_set_block_item(t6,0,(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_12002,a[2]=t6,a[3]=((C_word*)t0)[4],a[4]=t3,a[5]=((C_word)li167),tmp=(C_word)a,a+=6,tmp));
t8=((C_word*)t6)[1];
f_12002(t8,((C_word*)t0)[3]);}
else{
t5=(C_truep(((C_word*)t0)[2])?(C_word)C_i_greaterp(((C_word*)t3)[1],((C_word*)t0)[2]):C_SCHEME_FALSE);
if(C_truep(t5)){
t6=C_SCHEME_UNDEFINED;
t7=(*a=C_VECTOR_TYPE|1,a[1]=t6,tmp=(C_word)a,a+=2,tmp);
t8=C_set_block_item(t7,0,(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_12027,a[2]=t7,a[3]=((C_word*)t0)[2],a[4]=t3,a[5]=((C_word)li168),tmp=(C_word)a,a+=6,tmp));
t9=((C_word*)t7)[1];
f_12027(t9,((C_word*)t0)[3]);}
else{
t6=((C_word*)t0)[3];
((C_proc2)(void*)(*((C_word*)t6+1)))(2,t6,((C_word*)t3)[1]);}}}

/* do1061 in k11989 */
static void C_fcall f_12027(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word *a;
loop:
a=C_alloc(4);
C_check_for_interrupt;
if(!C_stack_probe(a)){
C_save_and_reclaim((void*)trf_12027,NULL,2,t0,t1);}
if(C_truep((C_word)C_i_less_or_equalp(((C_word*)((C_word*)t0)[4])[1],((C_word*)t0)[3]))){
t2=t1;
((C_proc2)(void*)(*((C_word*)t2+1)))(2,t2,((C_word*)((C_word*)t0)[4])[1]);}
else{
t2=(C_word)C_a_i_minus(&a,2,((C_word*)((C_word*)t0)[4])[1],C_fix(12));
t3=C_mutate(((C_word *)((C_word*)t0)[4])+1,t2);
t5=t1;
t1=t5;
goto loop;}}

/* do1057 in k11989 */
static void C_fcall f_12002(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word *a;
loop:
a=C_alloc(4);
C_check_for_interrupt;
if(!C_stack_probe(a)){
C_save_and_reclaim((void*)trf_12002,NULL,2,t0,t1);}
if(C_truep((C_word)C_i_greater_or_equalp(((C_word*)((C_word*)t0)[4])[1],((C_word*)t0)[3]))){
t2=t1;
((C_proc2)(void*)(*((C_word*)t2+1)))(2,t2,((C_word*)((C_word*)t0)[4])[1]);}
else{
t2=(C_word)C_a_i_plus(&a,2,((C_word*)((C_word*)t0)[4])[1],C_fix(12));
t3=C_mutate(((C_word *)((C_word*)t0)[4])+1,t2);
t5=t1;
t1=t5;
goto loop;}}

/* spectrum-maxamp in k11783 in k10718 in k10715 in k7274 in k7271 in k6978 in k6975 in k6971 in k6680 in k6677 in k6674 in k6671 */
static void C_ccall f_11943(C_word c,C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[6],*a=ab;
if(c!=3) C_bad_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr3,(void*)f_11943,3,t0,t1,t2);}
t3=lf[240];
t4=(*a=C_VECTOR_TYPE|1,a[1]=t3,tmp=(C_word)a,a+=2,tmp);
t5=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_11947,a[2]=t4,a[3]=t1,tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 378  spectrum-amps");
t6=C_retrieve(lf[230]);
((C_proc3)C_retrieve_proc(t6))(3,t6,t5,t2);}

/* k11945 in spectrum-maxamp in k11783 in k10718 in k10715 in k7274 in k7271 in k6978 in k6975 in k6971 in k6680 in k6677 in k6674 in k6671 */
static void C_ccall f_11947(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[8],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_11947,2,t0,t1);}
t2=t1;
if(C_truep(t2)){
t3=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_11956,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],tmp=(C_word)a,a+=4,tmp);
t4=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_11958,a[2]=((C_word*)t0)[2],a[3]=((C_word)li165),tmp=(C_word)a,a+=4,tmp);
C_trace("for-each");
t5=*((C_word*)lf[237]+1);
((C_proc4)(void*)(*((C_word*)t5+1)))(4,t5,t3,t4,t1);}
else{
t3=((C_word*)t0)[3];
((C_proc2)(void*)(*((C_word*)t3+1)))(2,t3,((C_word*)((C_word*)t0)[2])[1]);}}

/* a11957 in k11945 in spectrum-maxamp in k11783 in k10718 in k10715 in k7274 in k7271 in k6978 in k6975 in k6971 in k6680 in k6677 in k6674 in k6671 */
static void C_ccall f_11958(C_word c,C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word *a;
if(c!=3) C_bad_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr3,(void*)f_11958,3,t0,t1,t2);}
if(C_truep((C_word)C_i_greaterp(t2,((C_word*)((C_word*)t0)[2])[1]))){
t3=C_mutate(((C_word *)((C_word*)t0)[2])+1,t2);
t4=t1;
((C_proc2)(void*)(*((C_word*)t4+1)))(2,t4,t3);}
else{
t3=t1;
((C_proc2)(void*)(*((C_word*)t3+1)))(2,t3,C_SCHEME_UNDEFINED);}}

/* k11954 in k11945 in spectrum-maxamp in k11783 in k10718 in k10715 in k7274 in k7271 in k6978 in k6975 in k6971 in k6680 in k6677 in k6674 in k6671 */
static void C_ccall f_11956(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
t2=((C_word*)t0)[3];
((C_proc2)(void*)(*((C_word*)t2+1)))(2,t2,((C_word*)((C_word*)t0)[2])[1]);}

/* spectrum-minamp in k11783 in k10718 in k10715 in k7274 in k7271 in k6978 in k6975 in k6971 in k6680 in k6677 in k6674 in k6671 */
static void C_ccall f_11912(C_word c,C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[6],*a=ab;
if(c!=3) C_bad_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr3,(void*)f_11912,3,t0,t1,t2);}
t3=C_SCHEME_FALSE;
t4=(*a=C_VECTOR_TYPE|1,a[1]=t3,tmp=(C_word)a,a+=2,tmp);
t5=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_11916,a[2]=t4,a[3]=t1,tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 378  spectrum-amps");
t6=C_retrieve(lf[230]);
((C_proc3)C_retrieve_proc(t6))(3,t6,t5,t2);}

/* k11914 in spectrum-minamp in k11783 in k10718 in k10715 in k7274 in k7271 in k6978 in k6975 in k6971 in k6680 in k6677 in k6674 in k6671 */
static void C_ccall f_11916(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[8],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_11916,2,t0,t1);}
t2=t1;
if(C_truep(t2)){
t3=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_11925,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],tmp=(C_word)a,a+=4,tmp);
t4=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_11927,a[2]=((C_word*)t0)[2],a[3]=((C_word)li163),tmp=(C_word)a,a+=4,tmp);
C_trace("for-each");
t5=*((C_word*)lf[237]+1);
((C_proc4)(void*)(*((C_word*)t5+1)))(4,t5,t3,t4,t1);}
else{
t3=((C_word*)t0)[3];
((C_proc2)(void*)(*((C_word*)t3+1)))(2,t3,lf[238]);}}

/* a11926 in k11914 in spectrum-minamp in k11783 in k10718 in k10715 in k7274 in k7271 in k6978 in k6975 in k6971 in k6680 in k6677 in k6674 in k6671 */
static void C_ccall f_11927(C_word c,C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word *a;
if(c!=3) C_bad_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr3,(void*)f_11927,3,t0,t1,t2);}
t3=(C_word)C_i_not(((C_word*)((C_word*)t0)[2])[1]);
t4=(C_truep(t3)?t3:(C_word)C_i_lessp(t2,((C_word*)((C_word*)t0)[2])[1]));
if(C_truep(t4)){
t5=C_mutate(((C_word *)((C_word*)t0)[2])+1,t2);
t6=t1;
((C_proc2)(void*)(*((C_word*)t6+1)))(2,t6,t5);}
else{
t5=t1;
((C_proc2)(void*)(*((C_word*)t5+1)))(2,t5,C_SCHEME_UNDEFINED);}}

/* k11923 in k11914 in spectrum-minamp in k11783 in k10718 in k10715 in k7274 in k7271 in k6978 in k6975 in k6971 in k6680 in k6677 in k6674 in k6671 */
static void C_ccall f_11925(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
t2=((C_word*)t0)[3];
((C_proc2)(void*)(*((C_word*)t2+1)))(2,t2,((C_word*)((C_word*)t0)[2])[1]);}

/* spectrum-maxfreq in k11783 in k10718 in k10715 in k7274 in k7271 in k6978 in k6975 in k6971 in k6680 in k6677 in k6674 in k6671 */
static void C_ccall f_11894(C_word c,C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word ab[4],*a=ab;
if(c!=3) C_bad_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr3,(void*)f_11894,3,t0,t1,t2);}
t3=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_11902,a[2]=t2,a[3]=t1,tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 378  spectrum-freqs");
t4=C_retrieve(lf[228]);
((C_proc3)C_retrieve_proc(t4))(3,t4,t3,t2);}

/* k11900 in spectrum-maxfreq in k11783 in k10718 in k10715 in k7274 in k7271 in k6978 in k6975 in k6971 in k6680 in k6677 in k6674 in k6671 */
static void C_ccall f_11902(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[4],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_11902,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_11910,a[2]=t1,a[3]=((C_word*)t0)[3],tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 378  spectrum-size");
t3=C_retrieve(lf[226]);
((C_proc3)C_retrieve_proc(t3))(3,t3,t2,((C_word*)t0)[2]);}

/* k11908 in k11900 in spectrum-maxfreq in k11783 in k10718 in k10715 in k7274 in k7271 in k6978 in k6975 in k6971 in k6680 in k6677 in k6674 in k6671 */
static void C_ccall f_11910(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[4],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_11910,2,t0,t1);}
t2=(C_word)C_a_i_minus(&a,2,t1,C_fix(1));
t3=((C_word*)t0)[3];
((C_proc2)(void*)(*((C_word*)t3+1)))(2,t3,(C_word)C_i_list_ref(((C_word*)t0)[2],t2));}

/* spectrum-minfreq in k11783 in k10718 in k10715 in k7274 in k7271 in k6978 in k6975 in k6971 in k6680 in k6677 in k6674 in k6671 */
static void C_ccall f_11884(C_word c,C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word ab[3],*a=ab;
if(c!=3) C_bad_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr3,(void*)f_11884,3,t0,t1,t2);}
t3=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_11892,a[2]=t1,tmp=(C_word)a,a+=3,tmp);
C_trace("ChickenBridge.scm: 378  spectrum-freqs");
t4=C_retrieve(lf[228]);
((C_proc3)C_retrieve_proc(t4))(3,t4,t3,t2);}

/* k11890 in spectrum-minfreq in k11783 in k10718 in k10715 in k7274 in k7271 in k6978 in k6975 in k6971 in k6680 in k6677 in k6674 in k6671 */
static void C_ccall f_11892(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
t2=((C_word*)t0)[2];
((C_proc2)(void*)(*((C_word*)t2+1)))(2,t2,(C_word)C_i_car(t1));}

/* spectrum-pairs in k11783 in k10718 in k10715 in k7274 in k7271 in k6978 in k6975 in k6971 in k6680 in k6677 in k6674 in k6671 */
static void C_ccall f_11825(C_word c,C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word ab[11],*a=ab;
if(c!=3) C_bad_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr3,(void*)f_11825,3,t0,t1,t2);}
t3=(C_word)C_a_i_list(&a,1,C_SCHEME_FALSE);
t4=t3;
t5=(*a=C_VECTOR_TYPE|1,a[1]=t4,tmp=(C_word)a,a+=2,tmp);
t6=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_11832,a[2]=t2,a[3]=t1,a[4]=t5,a[5]=t3,tmp=(C_word)a,a+=6,tmp);
C_trace("ChickenBridge.scm: 378  spectrum-freqs");
t7=C_retrieve(lf[228]);
((C_proc3)C_retrieve_proc(t7))(3,t7,t6,t2);}

/* k11830 in spectrum-pairs in k11783 in k10718 in k10715 in k7274 in k7271 in k6978 in k6975 in k6971 in k6680 in k6677 in k6674 in k6671 */
static void C_ccall f_11832(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_11832,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_11835,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=t1,a[6]=((C_word*)t0)[5],tmp=(C_word)a,a+=7,tmp);
C_trace("ChickenBridge.scm: 378  spectrum-amps");
t3=C_retrieve(lf[230]);
((C_proc3)C_retrieve_proc(t3))(3,t3,t2,((C_word*)t0)[2]);}

/* k11833 in k11830 in spectrum-pairs in k11783 in k10718 in k10715 in k7274 in k7271 in k6978 in k6975 in k6971 in k6680 in k6677 in k6674 in k6671 */
static void C_ccall f_11835(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_11835,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_11838,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=t1,a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],tmp=(C_word)a,a+=7,tmp);
C_trace("ChickenBridge.scm: 378  spectrum-size");
t3=C_retrieve(lf[226]);
((C_proc3)C_retrieve_proc(t3))(3,t3,t2,((C_word*)t0)[2]);}

/* k11836 in k11833 in k11830 in spectrum-pairs in k11783 in k10718 in k10715 in k7274 in k7271 in k6978 in k6975 in k6971 in k6680 in k6677 in k6674 in k6671 */
static void C_ccall f_11838(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[11],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_11838,2,t0,t1);}
t2=C_SCHEME_UNDEFINED;
t3=(*a=C_VECTOR_TYPE|1,a[1]=t2,tmp=(C_word)a,a+=2,tmp);
t4=C_set_block_item(t3,0,(*a=C_CLOSURE_TYPE|8,a[1]=(C_word)f_11843,a[2]=t3,a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],a[7]=t1,a[8]=((C_word)li159),tmp=(C_word)a,a+=9,tmp));
t5=((C_word*)t3)[1];
f_11843(t5,((C_word*)t0)[2],C_fix(0));}

/* do1020 in k11836 in k11833 in k11830 in spectrum-pairs in k11783 in k10718 in k10715 in k7274 in k7271 in k6978 in k6975 in k6971 in k6680 in k6677 in k6674 in k6671 */
static void C_fcall f_11843(C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word *a;
loop:
a=C_alloc(10);
C_check_for_interrupt;
if(!C_stack_probe(a)){
C_save_and_reclaim((void*)trf_11843,NULL,3,t0,t1,t2);}
if(C_truep((C_word)C_i_nequalp(t2,((C_word*)t0)[7]))){
t3=t1;
((C_proc2)(void*)(*((C_word*)t3+1)))(2,t3,(C_word)C_i_cdr(((C_word*)t0)[6]));}
else{
t3=(C_word)C_i_list_ref(((C_word*)t0)[5],t2);
t4=(C_truep(((C_word*)t0)[4])?(C_word)C_i_list_ref(((C_word*)t0)[4],t2):lf[233]);
t5=(C_word)C_a_i_list(&a,2,t3,t4);
t6=(C_word)C_i_set_cdr(((C_word*)((C_word*)t0)[3])[1],t5);
t7=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t8=C_mutate(((C_word *)((C_word*)t0)[3])+1,t7);
t9=(C_word)C_a_i_plus(&a,2,t2,C_fix(1));
t11=t1;
t12=t9;
t1=t11;
t2=t12;
goto loop;}}

/* spectrum-copy in k11783 in k10718 in k10715 in k7274 in k7271 in k6978 in k6975 in k6971 in k6680 in k6677 in k6674 in k6671 */
static void C_ccall f_11787(C_word c,C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word ab[4],*a=ab;
if(c!=3) C_bad_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr3,(void*)f_11787,3,t0,t1,t2);}
t3=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_11795,a[2]=t2,a[3]=t1,tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 378  spectrum-time");
t4=C_retrieve(lf[223]);
((C_proc3)C_retrieve_proc(t4))(3,t4,t3,t2);}

/* k11793 in spectrum-copy in k11783 in k10718 in k10715 in k7274 in k7271 in k6978 in k6975 in k6971 in k6680 in k6677 in k6674 in k6671 */
static void C_ccall f_11795(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[5],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_11795,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_11799,a[2]=((C_word*)t0)[2],a[3]=t1,a[4]=((C_word*)t0)[3],tmp=(C_word)a,a+=5,tmp);
C_trace("ChickenBridge.scm: 378  spectrum-size");
t3=C_retrieve(lf[226]);
((C_proc3)C_retrieve_proc(t3))(3,t3,t2,((C_word*)t0)[2]);}

/* k11797 in k11793 in spectrum-copy in k11783 in k10718 in k10715 in k7274 in k7271 in k6978 in k6975 in k6971 in k6680 in k6677 in k6674 in k6671 */
static void C_ccall f_11799(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_11799,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_11803,a[2]=((C_word*)t0)[2],a[3]=t1,a[4]=((C_word*)t0)[3],a[5]=((C_word*)t0)[4],tmp=(C_word)a,a+=6,tmp);
t3=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_11819,a[2]=t2,tmp=(C_word)a,a+=3,tmp);
C_trace("ChickenBridge.scm: 378  spectrum-freqs");
t4=C_retrieve(lf[228]);
((C_proc3)C_retrieve_proc(t4))(3,t4,t3,((C_word*)t0)[2]);}

/* k11817 in k11797 in k11793 in spectrum-copy in k11783 in k10718 in k10715 in k7274 in k7271 in k6978 in k6975 in k6971 in k6680 in k6677 in k6674 in k6671 */
static void C_ccall f_11819(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 378  append");
t2=*((C_word*)lf[18]+1);
((C_proc4)C_retrieve_proc(t2))(4,t2,((C_word*)t0)[2],t1,C_SCHEME_END_OF_LIST);}

/* k11801 in k11797 in k11793 in spectrum-copy in k11783 in k10718 in k10715 in k7274 in k7271 in k6978 in k6975 in k6971 in k6680 in k6677 in k6674 in k6671 */
static void C_ccall f_11803(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_11803,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_11807,a[2]=t1,a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],tmp=(C_word)a,a+=6,tmp);
t3=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_11811,a[2]=t2,tmp=(C_word)a,a+=3,tmp);
C_trace("ChickenBridge.scm: 378  spectrum-amps");
t4=C_retrieve(lf[230]);
((C_proc3)C_retrieve_proc(t4))(3,t4,t3,((C_word*)t0)[2]);}

/* k11809 in k11801 in k11797 in k11793 in spectrum-copy in k11783 in k10718 in k10715 in k7274 in k7271 in k6978 in k6975 in k6971 in k6680 in k6677 in k6674 in k6671 */
static void C_ccall f_11811(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 378  append");
t2=*((C_word*)lf[18]+1);
((C_proc4)C_retrieve_proc(t2))(4,t2,((C_word*)t0)[2],t1,C_SCHEME_END_OF_LIST);}

/* k11805 in k11801 in k11797 in k11793 in spectrum-copy in k11783 in k10718 in k10715 in k7274 in k7271 in k6978 in k6975 in k6971 in k6680 in k6677 in k6674 in k6671 */
static void C_ccall f_11807(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 378  make-spectrum");
f_11700(((C_word*)t0)[5],((C_word*)t0)[4],((C_word*)t0)[3],((C_word*)t0)[2],t1);}

/* spectrum-amps in k10718 in k10715 in k7274 in k7271 in k6978 in k6975 in k6971 in k6680 in k6677 in k6674 in k6671 */
static void C_ccall f_11775(C_word c,C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word *a;
if(c!=3) C_bad_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr3,(void*)f_11775,3,t0,t1,t2);}
t3=(C_word)C_i_check_structure(t2,lf[221]);
t4=t1;
((C_proc2)(void*)(*((C_word*)t4+1)))(2,t4,(C_word)C_i_block_ref(t2,C_fix(4)));}

/* spectrum-amps-set! in k10718 in k10715 in k7274 in k7271 in k6978 in k6975 in k6971 in k6680 in k6677 in k6674 in k6671 */
static void C_fcall f_11766(C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word *a;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_11766,NULL,3,t1,t2,t3);}
t4=(C_word)C_i_check_structure(t2,lf[221]);
C_trace("ChickenBridge.scm: 378  ##sys#block-set!");
t5=*((C_word*)lf[225]+1);
((C_proc5)(void*)(*((C_word*)t5+1)))(5,t5,t1,t2,C_fix(4),t3);}

/* spectrum-freqs in k10718 in k10715 in k7274 in k7271 in k6978 in k6975 in k6971 in k6680 in k6677 in k6674 in k6671 */
static void C_ccall f_11757(C_word c,C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word *a;
if(c!=3) C_bad_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr3,(void*)f_11757,3,t0,t1,t2);}
t3=(C_word)C_i_check_structure(t2,lf[221]);
t4=t1;
((C_proc2)(void*)(*((C_word*)t4+1)))(2,t4,(C_word)C_i_block_ref(t2,C_fix(3)));}

/* spectrum-freqs-set! in k10718 in k10715 in k7274 in k7271 in k6978 in k6975 in k6971 in k6680 in k6677 in k6674 in k6671 */
static void C_fcall f_11748(C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word *a;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_11748,NULL,3,t1,t2,t3);}
t4=(C_word)C_i_check_structure(t2,lf[221]);
C_trace("ChickenBridge.scm: 378  ##sys#block-set!");
t5=*((C_word*)lf[225]+1);
((C_proc5)(void*)(*((C_word*)t5+1)))(5,t5,t1,t2,C_fix(3),t3);}

/* spectrum-size in k10718 in k10715 in k7274 in k7271 in k6978 in k6975 in k6971 in k6680 in k6677 in k6674 in k6671 */
static void C_ccall f_11739(C_word c,C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word *a;
if(c!=3) C_bad_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr3,(void*)f_11739,3,t0,t1,t2);}
t3=(C_word)C_i_check_structure(t2,lf[221]);
t4=t1;
((C_proc2)(void*)(*((C_word*)t4+1)))(2,t4,(C_word)C_i_block_ref(t2,C_fix(2)));}

/* spectrum-size-set! in k10718 in k10715 in k7274 in k7271 in k6978 in k6975 in k6971 in k6680 in k6677 in k6674 in k6671 */
static void C_fcall f_11730(C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word *a;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_11730,NULL,3,t1,t2,t3);}
t4=(C_word)C_i_check_structure(t2,lf[221]);
C_trace("ChickenBridge.scm: 378  ##sys#block-set!");
t5=*((C_word*)lf[225]+1);
((C_proc5)(void*)(*((C_word*)t5+1)))(5,t5,t1,t2,C_fix(2),t3);}

/* spectrum-time in k10718 in k10715 in k7274 in k7271 in k6978 in k6975 in k6971 in k6680 in k6677 in k6674 in k6671 */
static void C_ccall f_11721(C_word c,C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word *a;
if(c!=3) C_bad_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr3,(void*)f_11721,3,t0,t1,t2);}
t3=(C_word)C_i_check_structure(t2,lf[221]);
t4=t1;
((C_proc2)(void*)(*((C_word*)t4+1)))(2,t4,(C_word)C_i_block_ref(t2,C_fix(1)));}

/* spectrum? in k10718 in k10715 in k7274 in k7271 in k6978 in k6975 in k6971 in k6680 in k6677 in k6674 in k6671 */
static void C_fcall f_11706(C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word *a;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_11706,NULL,2,t1,t2);}
t3=t1;
((C_proc2)(void*)(*((C_word*)t3+1)))(2,t3,(C_word)C_i_structurep(t2,lf[221]));}

/* make-spectrum in k10718 in k10715 in k7274 in k7271 in k6978 in k6975 in k6971 in k6680 in k6677 in k6674 in k6671 */
static void C_fcall f_11700(C_word t1,C_word t2,C_word t3,C_word t4,C_word t5){
C_word tmp;
C_word t6;
C_word ab[6],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_11700,NULL,5,t1,t2,t3,t4,t5);}
t6=t1;
((C_proc2)(void*)(*((C_word*)t6+1)))(2,t6,(C_word)C_a_i_record(&a,5,lf[221],t2,t3,t4,t5));}

/* scale-order in k10718 in k10715 in k7274 in k7271 in k6978 in k6975 in k6971 in k6680 in k6677 in k6674 in k6671 */
static void C_ccall f_11558(C_word c,C_word t0,C_word t1,C_word t2,...){
C_word tmp;
C_word t3;
va_list v;
C_word *a,c2=c;
C_save_rest(t2,c2,3);
if(c<3) C_bad_min_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_demand(c*C_SIZEOF_PAIR+7)){
C_save_and_reclaim((void*)tr3r,(void*)f_11558r,3,t0,t1,t2);}
else{
a=C_alloc((c-3)*3);
t3=C_restore_rest(a,C_rest_count(0));
f_11558r(t0,t1,t2,t3);}}

static void C_ccall f_11558r(C_word t0,C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word *a=C_alloc(7);
t4=(*a=C_VECTOR_TYPE|1,a[1]=t3,tmp=(C_word)a,a+=2,tmp);
t5=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_11562,a[2]=t2,a[3]=t1,a[4]=t4,tmp=(C_word)a,a+=5,tmp);
if(C_truep((C_word)C_i_nullp(((C_word*)t4)[1]))){
t6=C_set_block_item(t4,0,C_fix(1));
t7=t5;
f_11562(t7,t6);}
else{
t6=(C_word)C_i_car(((C_word*)t4)[1]);
t7=C_set_block_item(t4,0,t6);
t8=t5;
f_11562(t8,t7);}}

/* k11560 in scale-order in k10718 in k10715 in k7274 in k7271 in k6978 in k6975 in k6971 in k6680 in k6677 in k6674 in k6671 */
static void C_fcall f_11562(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[6],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_11562,NULL,2,t0,t1);}
switch(((C_word*)((C_word*)t0)[4])[1]){
case C_fix(1):
t2=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_11573,a[2]=((C_word)li146),tmp=(C_word)a,a+=3,tmp);
C_trace("ChickenBridge.scm: 377  sort");
t3=C_retrieve(lf[218]);
((C_proc4)C_retrieve_proc(t3))(4,t3,((C_word*)t0)[3],((C_word*)t0)[2],t2);
case C_fix(-1):
t2=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_11631,a[2]=((C_word)li147),tmp=(C_word)a,a+=3,tmp);
C_trace("ChickenBridge.scm: 377  sort");
t3=C_retrieve(lf[218]);
((C_proc4)C_retrieve_proc(t3))(4,t3,((C_word*)t0)[3],((C_word*)t0)[2],t2);
case C_fix(0):
C_trace("ChickenBridge.scm: 377  shuffle");
t2=C_retrieve(lf[172]);
((C_proc3)C_retrieve_proc(t2))(3,t2,((C_word*)t0)[3],((C_word*)t0)[2]);
default:
C_trace("ChickenBridge.scm: 377  error");
t2=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t2))(4,t2,((C_word*)t0)[3],lf[219],((C_word*)((C_word*)t0)[4])[1]);}}

/* a11630 in k11560 in scale-order in k10718 in k10715 in k7274 in k7271 in k6978 in k6975 in k6971 in k6680 in k6677 in k6674 in k6671 */
static void C_ccall f_11631(C_word c,C_word t0,C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word ab[12],*a=ab;
if(c!=4) C_bad_argc_2(c,4,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr4,(void*)f_11631,4,t0,t1,t2,t3);}
if(C_truep((C_word)C_i_numberp(t2))){
if(C_truep((C_word)C_i_numberp(t3))){
t4=t1;
((C_proc2)(void*)(*((C_word*)t4+1)))(2,t4,(C_word)C_i_greaterp(t2,t3));}
else{
t4=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_11654,a[2]=t2,a[3]=t1,tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 377  key");
t5=C_retrieve(lf[205]);
((C_proc3)C_retrieve_proc(t5))(3,t5,t4,t3);}}
else{
if(C_truep((C_word)C_i_numberp(t3))){
t4=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_11667,a[2]=t3,a[3]=t1,tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 377  key");
t5=C_retrieve(lf[205]);
((C_proc3)C_retrieve_proc(t5))(3,t5,t4,t2);}
else{
t4=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_11674,a[2]=t3,a[3]=t1,tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 377  key");
t5=C_retrieve(lf[205]);
((C_proc3)C_retrieve_proc(t5))(3,t5,t4,t2);}}}

/* k11672 in a11630 in k11560 in scale-order in k10718 in k10715 in k7274 in k7271 in k6978 in k6975 in k6971 in k6680 in k6677 in k6674 in k6671 */
static void C_ccall f_11674(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[4],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_11674,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_11678,a[2]=t1,a[3]=((C_word*)t0)[3],tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 377  key");
t3=C_retrieve(lf[205]);
((C_proc3)C_retrieve_proc(t3))(3,t3,t2,((C_word*)t0)[2]);}

/* k11676 in k11672 in a11630 in k11560 in scale-order in k10718 in k10715 in k7274 in k7271 in k6978 in k6975 in k6971 in k6680 in k6677 in k6674 in k6671 */
static void C_ccall f_11678(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
t2=((C_word*)t0)[3];
((C_proc2)(void*)(*((C_word*)t2+1)))(2,t2,(C_word)C_i_greaterp(((C_word*)t0)[2],t1));}

/* k11665 in a11630 in k11560 in scale-order in k10718 in k10715 in k7274 in k7271 in k6978 in k6975 in k6971 in k6680 in k6677 in k6674 in k6671 */
static void C_ccall f_11667(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
t2=((C_word*)t0)[3];
((C_proc2)(void*)(*((C_word*)t2+1)))(2,t2,(C_word)C_i_greaterp(t1,((C_word*)t0)[2]));}

/* k11652 in a11630 in k11560 in scale-order in k10718 in k10715 in k7274 in k7271 in k6978 in k6975 in k6971 in k6680 in k6677 in k6674 in k6671 */
static void C_ccall f_11654(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
t2=((C_word*)t0)[3];
((C_proc2)(void*)(*((C_word*)t2+1)))(2,t2,(C_word)C_i_greaterp(((C_word*)t0)[2],t1));}

/* a11572 in k11560 in scale-order in k10718 in k10715 in k7274 in k7271 in k6978 in k6975 in k6971 in k6680 in k6677 in k6674 in k6671 */
static void C_ccall f_11573(C_word c,C_word t0,C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word ab[12],*a=ab;
if(c!=4) C_bad_argc_2(c,4,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr4,(void*)f_11573,4,t0,t1,t2,t3);}
if(C_truep((C_word)C_i_numberp(t2))){
if(C_truep((C_word)C_i_numberp(t3))){
t4=t1;
((C_proc2)(void*)(*((C_word*)t4+1)))(2,t4,(C_word)C_i_lessp(t2,t3));}
else{
t4=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_11596,a[2]=t2,a[3]=t1,tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 377  key");
t5=C_retrieve(lf[205]);
((C_proc3)C_retrieve_proc(t5))(3,t5,t4,t3);}}
else{
if(C_truep((C_word)C_i_numberp(t3))){
t4=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_11609,a[2]=t3,a[3]=t1,tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 377  key");
t5=C_retrieve(lf[205]);
((C_proc3)C_retrieve_proc(t5))(3,t5,t4,t2);}
else{
t4=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_11616,a[2]=t3,a[3]=t1,tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 377  key");
t5=C_retrieve(lf[205]);
((C_proc3)C_retrieve_proc(t5))(3,t5,t4,t2);}}}

/* k11614 in a11572 in k11560 in scale-order in k10718 in k10715 in k7274 in k7271 in k6978 in k6975 in k6971 in k6680 in k6677 in k6674 in k6671 */
static void C_ccall f_11616(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[4],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_11616,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_11620,a[2]=t1,a[3]=((C_word*)t0)[3],tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 377  key");
t3=C_retrieve(lf[205]);
((C_proc3)C_retrieve_proc(t3))(3,t3,t2,((C_word*)t0)[2]);}

/* k11618 in k11614 in a11572 in k11560 in scale-order in k10718 in k10715 in k7274 in k7271 in k6978 in k6975 in k6971 in k6680 in k6677 in k6674 in k6671 */
static void C_ccall f_11620(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
t2=((C_word*)t0)[3];
((C_proc2)(void*)(*((C_word*)t2+1)))(2,t2,(C_word)C_i_lessp(((C_word*)t0)[2],t1));}

/* k11607 in a11572 in k11560 in scale-order in k10718 in k10715 in k7274 in k7271 in k6978 in k6975 in k6971 in k6680 in k6677 in k6674 in k6671 */
static void C_ccall f_11609(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
t2=((C_word*)t0)[3];
((C_proc2)(void*)(*((C_word*)t2+1)))(2,t2,(C_word)C_i_lessp(t1,((C_word*)t0)[2]));}

/* k11594 in a11572 in k11560 in scale-order in k10718 in k10715 in k7274 in k7271 in k6978 in k6975 in k6971 in k6680 in k6677 in k6674 in k6671 */
static void C_ccall f_11596(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
t2=((C_word*)t0)[3];
((C_proc2)(void*)(*((C_word*)t2+1)))(2,t2,(C_word)C_i_lessp(((C_word*)t0)[2],t1));}

/* transpose in k10718 in k10715 in k7274 in k7271 in k6978 in k6975 in k6971 in k6680 in k6677 in k6674 in k6671 */
static void C_ccall f_11392(C_word c,C_word t0,C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word ab[20],*a=ab;
if(c!=4) C_bad_argc_2(c,4,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr4,(void*)f_11392,4,t0,t1,t2,t3);}
if(C_truep((C_word)C_i_numberp(t2))){
if(C_truep((C_word)C_i_numberp(t3))){
t4=(C_word)C_i_lessp(t2,C_fix(12));
t5=(C_truep(t4)?(C_word)C_i_lessp(t3,C_fix(12)):C_SCHEME_FALSE);
if(C_truep(t5)){
t6=(C_word)C_a_i_plus(&a,2,t2,t3);
C_trace("ChickenBridge.scm: 377  modulo");
t7=*((C_word*)lf[159]+1);
((C_proc4)C_retrieve_proc(t7))(4,t7,t1,t6,C_fix(12));}
else{
t6=t1;
((C_proc2)(void*)(*((C_word*)t6+1)))(2,t6,(C_word)C_a_i_plus(&a,2,t2,t3));}}
else{
t4=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_11438,a[2]=t1,a[3]=t2,tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 377  key");
t5=C_retrieve(lf[205]);
((C_proc3)C_retrieve_proc(t5))(3,t5,t4,t3);}}
else{
if(C_truep((C_word)C_i_pairp(t2))){
t4=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_11445,a[2]=((C_word)li143),tmp=(C_word)a,a+=3,tmp);
t5=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_11493,a[2]=t4,a[3]=t1,a[4]=t2,tmp=(C_word)a,a+=5,tmp);
if(C_truep((C_word)C_i_numberp(t3))){
t6=t5;
f_11493(2,t6,t3);}
else{
C_trace("ChickenBridge.scm: 377  key");
t6=C_retrieve(lf[205]);
((C_proc3)C_retrieve_proc(t6))(3,t6,t5,t3);}}
else{
C_trace("ChickenBridge.scm: 377  error");
t4=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t1,lf[214],t2);}}}

/* k11491 in transpose in k10718 in k10715 in k7274 in k7271 in k6978 in k6975 in k6971 in k6680 in k6677 in k6674 in k6671 */
static void C_ccall f_11493(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word ab[12],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_11493,2,t0,t1);}
t2=(C_word)C_i_car(((C_word*)t0)[4]);
if(C_truep((C_word)C_i_numberp(t2))){
t3=(C_word)C_i_car(((C_word*)t0)[4]);
t4=(C_word)C_i_lessp(t3,C_fix(12));
t5=(C_truep(t4)?(C_word)C_i_lessp(t1,C_fix(12)):C_SCHEME_FALSE);
if(C_truep(t5)){
t6=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_11510,a[2]=t1,a[3]=((C_word)li144),tmp=(C_word)a,a+=4,tmp);
C_trace("map");
t7=*((C_word*)lf[17]+1);
((C_proc4)(void*)(*((C_word*)t7+1)))(4,t7,((C_word*)t0)[3],t6,((C_word*)t0)[4]);}
else{
C_trace("ChickenBridge.scm: 377  transpkeys");
f_11445(((C_word*)t0)[3],((C_word*)t0)[4],t1);}}
else{
t3=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_11538,a[2]=((C_word*)t0)[3],tmp=(C_word)a,a+=3,tmp);
t4=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_11542,a[2]=t1,a[3]=t3,a[4]=((C_word*)t0)[2],tmp=(C_word)a,a+=5,tmp);
C_trace("ChickenBridge.scm: 377  key");
t5=C_retrieve(lf[205]);
((C_proc3)C_retrieve_proc(t5))(3,t5,t4,((C_word*)t0)[4]);}}

/* k11540 in k11491 in transpose in k10718 in k10715 in k7274 in k7271 in k6978 in k6975 in k6971 in k6680 in k6677 in k6674 in k6671 */
static void C_ccall f_11542(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 377  transpkeys");
f_11445(((C_word*)t0)[3],t1,((C_word*)t0)[2]);}

/* k11536 in k11491 in transpose in k10718 in k10715 in k7274 in k7271 in k6978 in k6975 in k6971 in k6680 in k6677 in k6674 in k6671 */
static void C_ccall f_11538(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 377  note");
t2=C_retrieve(lf[203]);
((C_proc3)C_retrieve_proc(t2))(3,t2,((C_word*)t0)[2],t1);}

/* a11509 in k11491 in transpose in k10718 in k10715 in k7274 in k7271 in k6978 in k6975 in k6971 in k6680 in k6677 in k6674 in k6671 */
static void C_ccall f_11510(C_word c,C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word ab[4],*a=ab;
if(c!=3) C_bad_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr3,(void*)f_11510,3,t0,t1,t2);}
t3=(C_word)C_a_i_plus(&a,2,t2,((C_word*)t0)[2]);
C_trace("ChickenBridge.scm: 377  modulo");
t4=*((C_word*)lf[159]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t1,t3,C_fix(12));}

/* transpkeys in transpose in k10718 in k10715 in k7274 in k7271 in k6978 in k6975 in k6971 in k6680 in k6677 in k6674 in k6671 */
static void C_fcall f_11445(C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word ab[11],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_11445,NULL,3,t1,t2,t3);}
t4=(C_word)C_a_i_list(&a,1,C_SCHEME_FALSE);
t5=C_SCHEME_UNDEFINED;
t6=(*a=C_VECTOR_TYPE|1,a[1]=t5,tmp=(C_word)a,a+=2,tmp);
t7=C_set_block_item(t6,0,(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_11454,a[2]=t6,a[3]=t3,a[4]=t4,a[5]=((C_word)li142),tmp=(C_word)a,a+=6,tmp));
t8=((C_word*)t6)[1];
f_11454(t8,t1,t2,t4);}

/* do878 in transpkeys in transpose in k10718 in k10715 in k7274 in k7271 in k6978 in k6975 in k6971 in k6680 in k6677 in k6674 in k6671 */
static void C_fcall f_11454(C_word t0,C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word t14;
C_word *a;
loop:
a=C_alloc(7);
C_check_for_interrupt;
if(!C_stack_probe(a)){
C_save_and_reclaim((void*)trf_11454,NULL,4,t0,t1,t2,t3);}
if(C_truep((C_word)C_i_nullp(t2))){
t4=t1;
((C_proc2)(void*)(*((C_word*)t4+1)))(2,t4,(C_word)C_i_cdr(((C_word*)t0)[4]));}
else{
t4=(C_word)C_i_car(t2);
t5=(C_word)C_a_i_plus(&a,2,((C_word*)t0)[3],t4);
t6=(C_word)C_a_i_list(&a,1,t5);
t7=(C_word)C_i_set_cdr(t3,t6);
t8=(C_word)C_i_cdr(t3);
t9=t3=t8;
t10=(C_word)C_i_cdr(t2);
t12=t1;
t13=t10;
t14=t3;
t1=t12;
t2=t13;
t3=t14;
goto loop;}}

/* k11436 in transpose in k10718 in k10715 in k7274 in k7271 in k6978 in k6975 in k6971 in k6680 in k6677 in k6674 in k6671 */
static void C_ccall f_11438(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[4],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_11438,2,t0,t1);}
t2=(C_word)C_a_i_plus(&a,2,((C_word*)t0)[3],t1);
C_trace("ChickenBridge.scm: 377  note");
t3=C_retrieve(lf[203]);
((C_proc3)C_retrieve_proc(t3))(3,t3,((C_word*)t0)[2],t2);}

/* invert in k10718 in k10715 in k7274 in k7271 in k6978 in k6975 in k6971 in k6680 in k6677 in k6674 in k6671 */
static void C_ccall f_11257(C_word c,C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word ab[17],*a=ab;
if(c!=3) C_bad_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr3,(void*)f_11257,3,t0,t1,t2);}
if(C_truep((C_word)C_i_numberp(t2))){
if(C_truep((C_word)C_i_lessp(t2,C_fix(12)))){
t3=(C_word)C_a_i_minus(&a,2,C_fix(12),t2);
C_trace("ChickenBridge.scm: 377  modulo");
t4=*((C_word*)lf[159]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t1,t3,C_fix(12));}
else{
C_trace("ChickenBridge.scm: 377  error");
t3=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t3))(4,t3,t1,lf[211],t2);}}
else{
if(C_truep((C_word)C_i_pairp(t2))){
t3=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_11287,a[2]=((C_word)li139),tmp=(C_word)a,a+=3,tmp);
t4=(C_word)C_i_car(t2);
if(C_truep((C_word)C_i_numberp(t4))){
t5=(C_word)C_i_car(t2);
if(C_truep((C_word)C_i_lessp(t5,C_fix(12)))){
t6=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_11357,a[2]=((C_word)li140),tmp=(C_word)a,a+=3,tmp);
C_trace("map");
t7=*((C_word*)lf[17]+1);
((C_proc4)(void*)(*((C_word*)t7+1)))(4,t7,t1,t6,t2);}
else{
C_trace("ChickenBridge.scm: 377  invkeys");
f_11287(t1,t2);}}
else{
t5=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_11379,a[2]=t1,tmp=(C_word)a,a+=3,tmp);
t6=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_11383,a[2]=t5,a[3]=t3,tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 377  key");
t7=C_retrieve(lf[205]);
((C_proc3)C_retrieve_proc(t7))(3,t7,t6,t2);}}
else{
C_trace("ChickenBridge.scm: 377  error");
t3=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t3))(4,t3,t1,lf[212],t2);}}}

/* k11381 in invert in k10718 in k10715 in k7274 in k7271 in k6978 in k6975 in k6971 in k6680 in k6677 in k6674 in k6671 */
static void C_ccall f_11383(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 377  invkeys");
f_11287(((C_word*)t0)[2],t1);}

/* k11377 in invert in k10718 in k10715 in k7274 in k7271 in k6978 in k6975 in k6971 in k6680 in k6677 in k6674 in k6671 */
static void C_ccall f_11379(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 377  note");
t2=C_retrieve(lf[203]);
((C_proc3)C_retrieve_proc(t2))(3,t2,((C_word*)t0)[2],t1);}

/* a11356 in invert in k10718 in k10715 in k7274 in k7271 in k6978 in k6975 in k6971 in k6680 in k6677 in k6674 in k6671 */
static void C_ccall f_11357(C_word c,C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word ab[4],*a=ab;
if(c!=3) C_bad_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr3,(void*)f_11357,3,t0,t1,t2);}
t3=(C_word)C_a_i_minus(&a,2,C_fix(12),t2);
C_trace("ChickenBridge.scm: 377  modulo");
t4=*((C_word*)lf[159]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t1,t3,C_fix(12));}

/* invkeys in invert in k10718 in k10715 in k7274 in k7271 in k6978 in k6975 in k6971 in k6680 in k6677 in k6674 in k6671 */
static void C_fcall f_11287(C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word ab[11],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_11287,NULL,2,t1,t2);}
t3=(C_word)C_i_car(t2);
t4=(C_word)C_a_i_list(&a,1,t3);
t5=(C_word)C_i_cdr(t2);
t6=C_SCHEME_UNDEFINED;
t7=(*a=C_VECTOR_TYPE|1,a[1]=t6,tmp=(C_word)a,a+=2,tmp);
t8=C_set_block_item(t7,0,(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_11303,a[2]=t7,a[3]=t3,a[4]=t4,a[5]=((C_word)li138),tmp=(C_word)a,a+=6,tmp));
t9=((C_word*)t7)[1];
f_11303(t9,t1,t5,t4);}

/* do863 in invkeys in invert in k10718 in k10715 in k7274 in k7271 in k6978 in k6975 in k6971 in k6680 in k6677 in k6674 in k6671 */
static void C_fcall f_11303(C_word t0,C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word t14;
C_word t15;
C_word *a;
loop:
a=C_alloc(11);
C_check_for_interrupt;
if(!C_stack_probe(a)){
C_save_and_reclaim((void*)trf_11303,NULL,4,t0,t1,t2,t3);}
if(C_truep((C_word)C_i_nullp(t2))){
t4=t1;
((C_proc2)(void*)(*((C_word*)t4+1)))(2,t4,((C_word*)t0)[4]);}
else{
t4=(C_word)C_i_car(t2);
t5=(C_word)C_a_i_minus(&a,2,t4,((C_word*)t0)[3]);
t6=(C_word)C_a_i_minus(&a,2,((C_word*)t0)[3],t5);
t7=(C_word)C_a_i_list(&a,1,t6);
t8=(C_word)C_i_set_cdr(t3,t7);
t9=(C_word)C_i_cdr(t3);
t10=t3=t9;
t11=(C_word)C_i_cdr(t2);
t13=t1;
t14=t11;
t15=t3;
t1=t13;
t2=t14;
t3=t15;
goto loop;}}

/* pc in k10718 in k10715 in k7274 in k7271 in k6978 in k6975 in k6971 in k6680 in k6677 in k6674 in k6671 */
static void C_ccall f_11212(C_word c,C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[6],*a=ab;
if(c!=3) C_bad_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr3,(void*)f_11212,3,t0,t1,t2);}
if(C_truep((C_word)C_i_numberp(t2))){
C_trace("ChickenBridge.scm: 377  modulo");
t3=*((C_word*)lf[159]+1);
((C_proc4)C_retrieve_proc(t3))(4,t3,t1,t2,C_fix(12));}
else{
if(C_truep((C_word)C_i_pairp(t2))){
t3=(C_word)C_i_car(t2);
if(C_truep((C_word)C_i_numberp(t3))){
C_trace("map");
t4=*((C_word*)lf[17]+1);
((C_proc4)(void*)(*((C_word*)t4+1)))(4,t4,t1,C_retrieve(lf[209]),t2);}
else{
t4=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_11244,a[2]=t1,tmp=(C_word)a,a+=3,tmp);
C_trace("ChickenBridge.scm: 377  key");
t5=C_retrieve(lf[205]);
((C_proc3)C_retrieve_proc(t5))(3,t5,t4,t2);}}
else{
t3=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_11255,a[2]=t1,tmp=(C_word)a,a+=3,tmp);
C_trace("ChickenBridge.scm: 377  key");
t4=C_retrieve(lf[205]);
((C_proc3)C_retrieve_proc(t4))(3,t4,t3,t2);}}}

/* k11253 in pc in k10718 in k10715 in k7274 in k7271 in k6978 in k6975 in k6971 in k6680 in k6677 in k6674 in k6671 */
static void C_ccall f_11255(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 377  modulo");
t2=*((C_word*)lf[159]+1);
((C_proc4)C_retrieve_proc(t2))(4,t2,((C_word*)t0)[2],t1,C_fix(12));}

/* k11242 in pc in k10718 in k10715 in k7274 in k7271 in k6978 in k6975 in k6971 in k6680 in k6677 in k6674 in k6671 */
static void C_ccall f_11244(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("map");
t2=*((C_word*)lf[17]+1);
((C_proc4)(void*)(*((C_word*)t2+1)))(4,t2,((C_word*)t0)[2],C_retrieve(lf[209]),t1);}

/* hz in k10718 in k10715 in k7274 in k7271 in k6978 in k6975 in k6971 in k6680 in k6677 in k6674 in k6671 */
static void C_ccall f_11096(C_word c,C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word ab[13],*a=ab;
if(c!=3) C_bad_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr3,(void*)f_11096,3,t0,t1,t2);}
if(C_truep((C_word)C_i_listp(t2))){
t3=(C_word)C_a_i_list(&a,1,C_SCHEME_FALSE);
t4=C_SCHEME_UNDEFINED;
t5=(*a=C_VECTOR_TYPE|1,a[1]=t4,tmp=(C_word)a,a+=2,tmp);
t6=C_set_block_item(t5,0,(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_11111,a[2]=t5,a[3]=t3,a[4]=((C_word)li135),tmp=(C_word)a,a+=5,tmp));
t7=((C_word*)t5)[1];
f_11111(t7,t1,t2,lf[208],C_SCHEME_FALSE,t3);}
else{
if(C_truep((C_word)C_i_numberp(t2))){
C_trace("ChickenBridge.scm: 377  tb:keynum->hertz");
f_8331(t1,t2);}
else{
t3=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_11210,a[2]=t1,tmp=(C_word)a,a+=3,tmp);
C_trace("ChickenBridge.scm: 377  note-aux");
f_10824(t3,t2,C_SCHEME_FALSE,C_SCHEME_TRUE);}}}

/* k11208 in hz in k10718 in k10715 in k7274 in k7271 in k6978 in k6975 in k6971 in k6680 in k6677 in k6674 in k6671 */
static void C_ccall f_11210(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
t2=((C_word*)t0)[2];
((C_proc2)(void*)(*((C_word*)t2+1)))(2,t2,(C_word)C_i_caddr(t1));}

/* do843 in hz in k10718 in k10715 in k7274 in k7271 in k6978 in k6975 in k6971 in k6680 in k6677 in k6674 in k6671 */
static void C_fcall f_11111(C_word t0,C_word t1,C_word t2,C_word t3,C_word t4,C_word t5){
C_word tmp;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word t14;
C_word ab[21],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_11111,NULL,6,t0,t1,t2,t3,t4,t5);}
t6=(*a=C_VECTOR_TYPE|1,a[1]=t3,tmp=(C_word)a,a+=2,tmp);
t7=(*a=C_VECTOR_TYPE|1,a[1]=t4,tmp=(C_word)a,a+=2,tmp);
t8=(*a=C_VECTOR_TYPE|1,a[1]=t5,tmp=(C_word)a,a+=2,tmp);
if(C_truep((C_word)C_i_nullp(t2))){
t9=t1;
((C_proc2)(void*)(*((C_word*)t9+1)))(2,t9,(C_word)C_i_cdr(((C_word*)t0)[3]));}
else{
t9=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_11124,a[2]=t7,a[3]=t6,a[4]=t1,a[5]=((C_word*)t0)[2],a[6]=t2,a[7]=t8,tmp=(C_word)a,a+=8,tmp);
t10=(C_word)C_i_car(t2);
t11=(C_word)C_i_numberp(t10);
t12=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_11141,a[2]=t6,a[3]=t2,a[4]=t8,a[5]=t9,a[6]=t7,tmp=(C_word)a,a+=7,tmp);
if(C_truep(t11)){
t13=t12;
f_11141(t13,t11);}
else{
t13=(C_word)C_i_car(t2);
t14=t12;
f_11141(t14,(C_word)C_i_listp(t13));}}}

/* k11139 in do843 in hz in k10718 in k10715 in k7274 in k7271 in k6978 in k6975 in k6971 in k6680 in k6677 in k6674 in k6671 */
static void C_fcall f_11141(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[11],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_11141,NULL,2,t0,t1);}
if(C_truep(t1)){
t2=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_11145,a[2]=((C_word*)t0)[4],a[3]=((C_word*)t0)[5],a[4]=((C_word*)t0)[6],tmp=(C_word)a,a+=5,tmp);
t3=(C_word)C_i_car(((C_word*)t0)[3]);
C_trace("ChickenBridge.scm: 377  hz");
t4=C_retrieve(lf[207]);
((C_proc3)C_retrieve_proc(t4))(3,t4,t2,t3);}
else{
t2=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_11160,a[2]=((C_word*)t0)[5],a[3]=((C_word*)t0)[2],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[6],tmp=(C_word)a,a+=6,tmp);
t3=(C_word)C_i_car(((C_word*)t0)[3]);
C_trace("ChickenBridge.scm: 377  note-aux");
f_10824(t2,t3,((C_word*)((C_word*)t0)[2])[1],C_SCHEME_TRUE);}}

/* k11158 in k11139 in do843 in hz in k10718 in k10715 in k7274 in k7271 in k6978 in k6975 in k6971 in k6680 in k6677 in k6674 in k6671 */
static void C_ccall f_11160(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word ab[3],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_11160,2,t0,t1);}
t2=C_mutate(((C_word *)((C_word*)t0)[5])+1,t1);
t3=(C_word)C_i_caddr(((C_word*)((C_word*)t0)[5])[1]);
t4=(C_word)C_a_i_list(&a,1,t3);
t5=(C_word)C_i_set_cdr(((C_word*)((C_word*)t0)[4])[1],t4);
t6=(C_word)C_i_cddddr(((C_word*)((C_word*)t0)[5])[1]);
t7=(C_word)C_i_car(t6);
t8=C_mutate(((C_word *)((C_word*)t0)[3])+1,t7);
t9=((C_word*)t0)[2];
f_11124(t9,t8);}

/* k11143 in k11139 in do843 in hz in k10718 in k10715 in k7274 in k7271 in k6978 in k6975 in k6971 in k6680 in k6677 in k6674 in k6671 */
static void C_ccall f_11145(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[3],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_11145,2,t0,t1);}
t2=C_mutate(((C_word *)((C_word*)t0)[4])+1,t1);
t3=(C_word)C_a_i_list(&a,1,((C_word*)((C_word*)t0)[4])[1]);
t4=((C_word*)t0)[3];
f_11124(t4,(C_word)C_i_set_cdr(((C_word*)((C_word*)t0)[2])[1],t3));}

/* k11122 in do843 in hz in k10718 in k10715 in k7274 in k7271 in k6978 in k6975 in k6971 in k6680 in k6677 in k6674 in k6671 */
static void C_fcall f_11124(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word *a;
t2=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[7])[1]);
t3=C_mutate(((C_word *)((C_word*)t0)[7])+1,t2);
t4=(C_word)C_i_cdr(((C_word*)t0)[6]);
t5=((C_word*)((C_word*)t0)[5])[1];
f_11111(t5,((C_word*)t0)[4],t4,((C_word*)((C_word*)t0)[3])[1],((C_word*)((C_word*)t0)[2])[1],((C_word*)((C_word*)t0)[7])[1]);}

/* key in k10718 in k10715 in k7274 in k7271 in k6978 in k6975 in k6971 in k6680 in k6677 in k6674 in k6671 */
static void C_ccall f_10974(C_word c,C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word ab[19],*a=ab;
if(c!=3) C_bad_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr3,(void*)f_10974,3,t0,t1,t2);}
if(C_truep((C_word)C_i_listp(t2))){
t3=(C_word)C_a_i_list(&a,1,C_SCHEME_FALSE);
t4=C_SCHEME_UNDEFINED;
t5=(*a=C_VECTOR_TYPE|1,a[1]=t4,tmp=(C_word)a,a+=2,tmp);
t6=C_set_block_item(t5,0,(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_10989,a[2]=t5,a[3]=t3,a[4]=((C_word)li133),tmp=(C_word)a,a+=5,tmp));
t7=((C_word*)t5)[1];
f_10989(t7,t1,t2,lf[206],C_SCHEME_FALSE,t3);}
else{
if(C_truep((C_word)C_i_numberp(t2))){
if(C_truep((C_word)C_i_greaterp(t2,C_fix(0)))){
t3=t1;
t4=t2;
t5=(C_word)C_a_i_bytevector(&a,1,C_fix(4));
t6=(C_word)C_i_foreign_flonum_argumentp(t4);
t7=t3;
((C_proc2)(void*)(*((C_word*)t7+1)))(2,t7,(C_word)stub347(t5,t6));}
else{
t3=t1;
((C_proc2)(void*)(*((C_word*)t3+1)))(2,t3,C_fix(-1));}}
else{
t3=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_11094,a[2]=t1,tmp=(C_word)a,a+=3,tmp);
C_trace("ChickenBridge.scm: 377  note-aux");
f_10824(t3,t2,C_SCHEME_FALSE,C_SCHEME_TRUE);}}}

/* k11092 in key in k10718 in k10715 in k7274 in k7271 in k6978 in k6975 in k6971 in k6680 in k6677 in k6674 in k6671 */
static void C_ccall f_11094(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
t2=((C_word*)t0)[2];
((C_proc2)(void*)(*((C_word*)t2+1)))(2,t2,(C_word)C_i_cadr(t1));}

/* do827 in key in k10718 in k10715 in k7274 in k7271 in k6978 in k6975 in k6971 in k6680 in k6677 in k6674 in k6671 */
static void C_fcall f_10989(C_word t0,C_word t1,C_word t2,C_word t3,C_word t4,C_word t5){
C_word tmp;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word t14;
C_word ab[21],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_10989,NULL,6,t0,t1,t2,t3,t4,t5);}
t6=(*a=C_VECTOR_TYPE|1,a[1]=t3,tmp=(C_word)a,a+=2,tmp);
t7=(*a=C_VECTOR_TYPE|1,a[1]=t4,tmp=(C_word)a,a+=2,tmp);
t8=(*a=C_VECTOR_TYPE|1,a[1]=t5,tmp=(C_word)a,a+=2,tmp);
if(C_truep((C_word)C_i_nullp(t2))){
t9=t1;
((C_proc2)(void*)(*((C_word*)t9+1)))(2,t9,(C_word)C_i_cdr(((C_word*)t0)[3]));}
else{
t9=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_11002,a[2]=t7,a[3]=t6,a[4]=t1,a[5]=((C_word*)t0)[2],a[6]=t2,a[7]=t8,tmp=(C_word)a,a+=8,tmp);
t10=(C_word)C_i_car(t2);
t11=(C_word)C_i_listp(t10);
t12=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_11019,a[2]=t6,a[3]=t2,a[4]=t8,a[5]=t9,a[6]=t7,tmp=(C_word)a,a+=7,tmp);
if(C_truep(t11)){
t13=t12;
f_11019(t13,t11);}
else{
t13=(C_word)C_i_car(t2);
t14=t12;
f_11019(t14,(C_word)C_i_numberp(t13));}}}

/* k11017 in do827 in key in k10718 in k10715 in k7274 in k7271 in k6978 in k6975 in k6971 in k6680 in k6677 in k6674 in k6671 */
static void C_fcall f_11019(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[11],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_11019,NULL,2,t0,t1);}
if(C_truep(t1)){
t2=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_11023,a[2]=((C_word*)t0)[4],a[3]=((C_word*)t0)[5],a[4]=((C_word*)t0)[6],tmp=(C_word)a,a+=5,tmp);
t3=(C_word)C_i_car(((C_word*)t0)[3]);
C_trace("ChickenBridge.scm: 377  key");
t4=C_retrieve(lf[205]);
((C_proc3)C_retrieve_proc(t4))(3,t4,t2,t3);}
else{
t2=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_11038,a[2]=((C_word*)t0)[5],a[3]=((C_word*)t0)[2],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[6],tmp=(C_word)a,a+=6,tmp);
t3=(C_word)C_i_car(((C_word*)t0)[3]);
C_trace("ChickenBridge.scm: 377  note-aux");
f_10824(t2,t3,((C_word*)((C_word*)t0)[2])[1],C_SCHEME_TRUE);}}

/* k11036 in k11017 in do827 in key in k10718 in k10715 in k7274 in k7271 in k6978 in k6975 in k6971 in k6680 in k6677 in k6674 in k6671 */
static void C_ccall f_11038(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word ab[3],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_11038,2,t0,t1);}
t2=C_mutate(((C_word *)((C_word*)t0)[5])+1,t1);
t3=(C_word)C_i_cadr(((C_word*)((C_word*)t0)[5])[1]);
t4=(C_word)C_a_i_list(&a,1,t3);
t5=(C_word)C_i_set_cdr(((C_word*)((C_word*)t0)[4])[1],t4);
t6=(C_word)C_i_cddddr(((C_word*)((C_word*)t0)[5])[1]);
t7=(C_word)C_i_car(t6);
t8=C_mutate(((C_word *)((C_word*)t0)[3])+1,t7);
t9=((C_word*)t0)[2];
f_11002(t9,t8);}

/* k11021 in k11017 in do827 in key in k10718 in k10715 in k7274 in k7271 in k6978 in k6975 in k6971 in k6680 in k6677 in k6674 in k6671 */
static void C_ccall f_11023(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[3],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_11023,2,t0,t1);}
t2=C_mutate(((C_word *)((C_word*)t0)[4])+1,t1);
t3=(C_word)C_a_i_list(&a,1,((C_word*)((C_word*)t0)[4])[1]);
t4=((C_word*)t0)[3];
f_11002(t4,(C_word)C_i_set_cdr(((C_word*)((C_word*)t0)[2])[1],t3));}

/* k11000 in do827 in key in k10718 in k10715 in k7274 in k7271 in k6978 in k6975 in k6971 in k6680 in k6677 in k6674 in k6671 */
static void C_fcall f_11002(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word *a;
t2=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[7])[1]);
t3=C_mutate(((C_word *)((C_word*)t0)[7])+1,t2);
t4=(C_word)C_i_cdr(((C_word*)t0)[6]);
t5=((C_word*)((C_word*)t0)[5])[1];
f_10989(t5,((C_word*)t0)[4],t4,((C_word*)((C_word*)t0)[3])[1],((C_word*)((C_word*)t0)[2])[1],((C_word*)((C_word*)t0)[7])[1]);}

/* note in k10718 in k10715 in k7274 in k7271 in k6978 in k6975 in k6971 in k6680 in k6677 in k6674 in k6671 */
static void C_ccall f_10877(C_word c,C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word ab[13],*a=ab;
if(c!=3) C_bad_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr3,(void*)f_10877,3,t0,t1,t2);}
if(C_truep((C_word)C_i_listp(t2))){
t3=(C_word)C_a_i_list(&a,1,C_SCHEME_FALSE);
t4=C_SCHEME_UNDEFINED;
t5=(*a=C_VECTOR_TYPE|1,a[1]=t4,tmp=(C_word)a,a+=2,tmp);
t6=C_set_block_item(t5,0,(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_10892,a[2]=t5,a[3]=t3,a[4]=((C_word)li131),tmp=(C_word)a,a+=5,tmp));
t7=((C_word*)t5)[1];
f_10892(t7,t1,t2,lf[204],C_SCHEME_FALSE,t3);}
else{
t3=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_10972,a[2]=t1,tmp=(C_word)a,a+=3,tmp);
C_trace("ChickenBridge.scm: 377  note-aux");
f_10824(t3,t2,C_SCHEME_FALSE,C_SCHEME_TRUE);}}

/* k10970 in note in k10718 in k10715 in k7274 in k7271 in k6978 in k6975 in k6971 in k6680 in k6677 in k6674 in k6671 */
static void C_ccall f_10972(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
t2=((C_word*)t0)[2];
((C_proc2)(void*)(*((C_word*)t2+1)))(2,t2,(C_word)C_i_car(t1));}

/* do813 in note in k10718 in k10715 in k7274 in k7271 in k6978 in k6975 in k6971 in k6680 in k6677 in k6674 in k6671 */
static void C_fcall f_10892(C_word t0,C_word t1,C_word t2,C_word t3,C_word t4,C_word t5){
C_word tmp;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word t14;
C_word t15;
C_word ab[25],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_10892,NULL,6,t0,t1,t2,t3,t4,t5);}
t6=(*a=C_VECTOR_TYPE|1,a[1]=t3,tmp=(C_word)a,a+=2,tmp);
t7=(*a=C_VECTOR_TYPE|1,a[1]=t4,tmp=(C_word)a,a+=2,tmp);
t8=(*a=C_VECTOR_TYPE|1,a[1]=t5,tmp=(C_word)a,a+=2,tmp);
if(C_truep((C_word)C_i_nullp(t2))){
t9=t1;
((C_proc2)(void*)(*((C_word*)t9+1)))(2,t9,(C_word)C_i_cdr(((C_word*)t0)[3]));}
else{
t9=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_10905,a[2]=t7,a[3]=t6,a[4]=t1,a[5]=((C_word*)t0)[2],a[6]=t2,a[7]=t8,tmp=(C_word)a,a+=8,tmp);
t10=(C_word)C_i_car(t2);
if(C_truep((C_word)C_i_listp(t10))){
t11=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_10923,a[2]=t8,a[3]=t9,a[4]=t7,tmp=(C_word)a,a+=5,tmp);
t12=(C_word)C_i_car(t2);
C_trace("ChickenBridge.scm: 377  note");
t13=C_retrieve(lf[203]);
((C_proc3)C_retrieve_proc(t13))(3,t13,t11,t12);}
else{
t11=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_10938,a[2]=t8,a[3]=t9,a[4]=t6,a[5]=t7,tmp=(C_word)a,a+=6,tmp);
t12=(C_word)C_i_car(t2);
C_trace("ChickenBridge.scm: 377  note-aux");
f_10824(t11,t12,((C_word*)t6)[1],C_SCHEME_TRUE);}}}

/* k10936 in do813 in note in k10718 in k10715 in k7274 in k7271 in k6978 in k6975 in k6971 in k6680 in k6677 in k6674 in k6671 */
static void C_ccall f_10938(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word ab[3],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_10938,2,t0,t1);}
t2=C_mutate(((C_word *)((C_word*)t0)[5])+1,t1);
t3=(C_word)C_i_cddddr(((C_word*)((C_word*)t0)[5])[1]);
t4=(C_word)C_i_car(t3);
t5=C_mutate(((C_word *)((C_word*)t0)[4])+1,t4);
t6=(C_word)C_i_car(((C_word*)((C_word*)t0)[5])[1]);
t7=(C_word)C_a_i_list(&a,1,t6);
t8=((C_word*)t0)[3];
f_10905(t8,(C_word)C_i_set_cdr(((C_word*)((C_word*)t0)[2])[1],t7));}

/* k10921 in do813 in note in k10718 in k10715 in k7274 in k7271 in k6978 in k6975 in k6971 in k6680 in k6677 in k6674 in k6671 */
static void C_ccall f_10923(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[3],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_10923,2,t0,t1);}
t2=C_mutate(((C_word *)((C_word*)t0)[4])+1,t1);
t3=(C_word)C_a_i_list(&a,1,((C_word*)((C_word*)t0)[4])[1]);
t4=((C_word*)t0)[3];
f_10905(t4,(C_word)C_i_set_cdr(((C_word*)((C_word*)t0)[2])[1],t3));}

/* k10903 in do813 in note in k10718 in k10715 in k7274 in k7271 in k6978 in k6975 in k6971 in k6680 in k6677 in k6674 in k6671 */
static void C_fcall f_10905(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word *a;
t2=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[7])[1]);
t3=C_mutate(((C_word *)((C_word*)t0)[7])+1,t2);
t4=(C_word)C_i_cdr(((C_word*)t0)[6]);
t5=((C_word*)((C_word*)t0)[5])[1];
f_10892(t5,((C_word*)t0)[4],t4,((C_word*)((C_word*)t0)[3])[1],((C_word*)((C_word*)t0)[2])[1],((C_word*)((C_word*)t0)[7])[1]);}

/* note-aux in k10718 in k10715 in k7274 in k7271 in k6978 in k6975 in k6971 in k6680 in k6677 in k6674 in k6671 */
static void C_fcall f_10824(C_word t1,C_word t2,C_word t3,C_word t4){
C_word tmp;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word ab[21],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_10824,NULL,4,t1,t2,t3,t4);}
if(C_truep((C_word)C_i_numberp(t2))){
t5=t1;
t6=t2;
t7=t4;
if(C_truep((C_word)C_i_exactp(t6))){
t8=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_10774,a[2]=t6,a[3]=t7,a[4]=((C_word)li128),tmp=(C_word)a,a+=5,tmp);
C_trace("ChickenBridge.scm: 377  hash-table-ref");
t9=*((C_word*)lf[41]+1);
((C_proc5)C_retrieve_proc(t9))(5,t9,t5,C_retrieve2(lf[191],"*notes*"),t6,t8);}
else{
t8=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_10822,a[2]=t5,a[3]=t7,a[4]=t6,tmp=(C_word)a,a+=5,tmp);
C_trace("ChickenBridge.scm: 377  floor");
t9=*((C_word*)lf[201]+1);
((C_proc3)C_retrieve_proc(t9))(3,t9,t8,t6);}}
else{
if(C_truep((C_word)C_i_symbolp(t2))){
t5=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_10847,a[2]=t4,a[3]=t3,a[4]=t1,tmp=(C_word)a,a+=5,tmp);
C_trace("ChickenBridge.scm: 377  symbol->string");
t6=*((C_word*)lf[25]+1);
((C_proc3)C_retrieve_proc(t6))(3,t6,t5,t2);}
else{
if(C_truep((C_word)C_i_stringp(t2))){
C_trace("ChickenBridge.scm: 377  string->note-entry");
f_10722(t1,t2,t3,t4);}
else{
t5=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_10862,a[2]=t2,a[3]=t4,a[4]=t3,a[5]=t1,tmp=(C_word)a,a+=6,tmp);
C_trace("ChickenBridge.scm: 377  keyword?");
t6=C_retrieve(lf[13]);
((C_proc3)C_retrieve_proc(t6))(3,t6,t5,t2);}}}}

/* k10860 in note-aux in k10718 in k10715 in k7274 in k7271 in k6978 in k6975 in k6971 in k6680 in k6677 in k6674 in k6671 */
static void C_ccall f_10862(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[5],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_10862,2,t0,t1);}
if(C_truep(t1)){
t2=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_10869,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],tmp=(C_word)a,a+=5,tmp);
C_trace("ChickenBridge.scm: 377  keyword->string");
t3=C_retrieve(lf[33]);
((C_proc3)C_retrieve_proc(t3))(3,t3,t2,((C_word*)t0)[2]);}
else{
if(C_truep(((C_word*)t0)[3])){
C_trace("ChickenBridge.scm: 377  error");
t2=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t2))(4,t2,((C_word*)t0)[5],lf[202],((C_word*)t0)[2]);}
else{
t2=((C_word*)t0)[5];
((C_proc2)(void*)(*((C_word*)t2+1)))(2,t2,C_SCHEME_FALSE);}}}

/* k10867 in k10860 in note-aux in k10718 in k10715 in k7274 in k7271 in k6978 in k6975 in k6971 in k6680 in k6677 in k6674 in k6671 */
static void C_ccall f_10869(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 377  string->note-entry");
f_10722(((C_word*)t0)[4],t1,((C_word*)t0)[3],((C_word*)t0)[2]);}

/* k10845 in note-aux in k10718 in k10715 in k7274 in k7271 in k6978 in k6975 in k6971 in k6680 in k6677 in k6674 in k6671 */
static void C_ccall f_10847(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 377  string->note-entry");
f_10722(((C_word*)t0)[4],t1,((C_word*)t0)[3],((C_word*)t0)[2]);}

/* k10820 in note-aux in k10718 in k10715 in k7274 in k7271 in k6978 in k6975 in k6971 in k6680 in k6677 in k6674 in k6671 */
static void C_ccall f_10822(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[17],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_10822,2,t0,t1);}
t2=(C_word)C_i_inexact_to_exact(t1);
t3=(C_word)C_a_i_minus(&a,2,((C_word*)t0)[4],t2);
t4=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_10794,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[3],tmp=(C_word)a,a+=5,tmp);
if(C_truep((C_word)C_i_lessp(t3,lf[198]))){
t5=t4;
f_10794(t5,t2);}
else{
t5=(C_word)C_i_lessp(t3,lf[199]);
t6=t4;
f_10794(t6,(C_truep(t5)?(C_word)C_a_i_plus(&a,2,t2,lf[200]):(C_word)C_a_i_plus(&a,2,t2,C_fix(1))));}}

/* k10792 in k10820 in note-aux in k10718 in k10715 in k7274 in k7271 in k6978 in k6975 in k6971 in k6680 in k6677 in k6674 in k6671 */
static void C_fcall f_10794(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[5],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_10794,NULL,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_10796,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word)li129),tmp=(C_word)a,a+=5,tmp);
C_trace("ChickenBridge.scm: 377  hash-table-ref");
t3=*((C_word*)lf[41]+1);
((C_proc5)C_retrieve_proc(t3))(5,t3,((C_word*)t0)[2],C_retrieve2(lf[191],"*notes*"),t1,t2);}

/* a10795 in k10792 in k10820 in note-aux in k10718 in k10715 in k7274 in k7271 in k6978 in k6975 in k6971 in k6680 in k6677 in k6674 in k6671 */
static void C_ccall f_10796(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
if(c!=2) C_bad_argc_2(c,2,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_10796,2,t0,t1);}
if(C_truep(((C_word*)t0)[3])){
C_trace("ChickenBridge.scm: 377  error");
t2=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t2))(4,t2,t1,lf[197],((C_word*)t0)[2]);}
else{
t2=t1;
((C_proc2)(void*)(*((C_word*)t2+1)))(2,t2,C_SCHEME_FALSE);}}

/* a10773 in note-aux in k10718 in k10715 in k7274 in k7271 in k6978 in k6975 in k6971 in k6680 in k6677 in k6674 in k6671 */
static void C_ccall f_10774(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
if(c!=2) C_bad_argc_2(c,2,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_10774,2,t0,t1);}
if(C_truep(((C_word*)t0)[3])){
C_trace("ChickenBridge.scm: 377  error");
t2=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t2))(4,t2,t1,lf[196],((C_word*)t0)[2]);}
else{
t2=t1;
((C_proc2)(void*)(*((C_word*)t2+1)))(2,t2,C_SCHEME_FALSE);}}

/* string->note-entry in k10718 in k10715 in k7274 in k7271 in k6978 in k6975 in k6971 in k6680 in k6677 in k6674 in k6671 */
static void C_fcall f_10722(C_word t1,C_word t2,C_word t3,C_word t4){
C_word tmp;
C_word t5;
C_word t6;
C_word t7;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_10722,NULL,4,t1,t2,t3,t4);}
t5=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_10726,a[2]=t2,a[3]=t4,a[4]=t3,a[5]=t1,tmp=(C_word)a,a+=6,tmp);
t6=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_10759,a[2]=((C_word)li126),tmp=(C_word)a,a+=3,tmp);
C_trace("ChickenBridge.scm: 377  hash-table-ref");
t7=*((C_word*)lf[41]+1);
((C_proc5)C_retrieve_proc(t7))(5,t7,t5,C_retrieve2(lf[191],"*notes*"),t2,t6);}

/* a10758 in string->note-entry in k10718 in k10715 in k7274 in k7271 in k6978 in k6975 in k6971 in k6680 in k6677 in k6674 in k6671 */
static void C_ccall f_10759(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
if(c!=2) C_bad_argc_2(c,2,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_10759,2,t0,t1);}
t2=t1;
((C_proc2)(void*)(*((C_word*)t2+1)))(2,t2,C_SCHEME_FALSE);}

/* k10724 in string->note-entry in k10718 in k10715 in k7274 in k7271 in k6978 in k6975 in k6971 in k6680 in k6677 in k6674 in k6671 */
static void C_ccall f_10726(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[5],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_10726,2,t0,t1);}
t2=t1;
if(C_truep(t2)){
t3=((C_word*)t0)[5];
((C_proc2)(void*)(*((C_word*)t3+1)))(2,t3,t1);}
else{
if(C_truep(((C_word*)t0)[4])){
t3=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_10742,a[2]=((C_word*)t0)[5],a[3]=((C_word*)t0)[2],a[4]=((C_word*)t0)[3],tmp=(C_word)a,a+=5,tmp);
C_trace("ChickenBridge.scm: 377  string-append");
t4=*((C_word*)lf[53]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t3,((C_word*)t0)[2],((C_word*)t0)[4]);}
else{
if(C_truep(((C_word*)t0)[3])){
C_trace("ChickenBridge.scm: 377  error");
t3=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t3))(4,t3,((C_word*)t0)[5],lf[194],((C_word*)t0)[2]);}
else{
t3=((C_word*)t0)[5];
((C_proc2)(void*)(*((C_word*)t3+1)))(2,t3,C_SCHEME_FALSE);}}}}

/* k10740 in k10724 in string->note-entry in k10718 in k10715 in k7274 in k7271 in k6978 in k6975 in k6971 in k6680 in k6677 in k6674 in k6671 */
static void C_ccall f_10742(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[5],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_10742,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_10744,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word)li125),tmp=(C_word)a,a+=5,tmp);
C_trace("ChickenBridge.scm: 377  hash-table-ref");
t3=*((C_word*)lf[41]+1);
((C_proc5)C_retrieve_proc(t3))(5,t3,((C_word*)t0)[2],C_retrieve2(lf[191],"*notes*"),t1,t2);}

/* a10743 in k10740 in k10724 in string->note-entry in k10718 in k10715 in k7274 in k7271 in k6978 in k6975 in k6971 in k6680 in k6677 in k6674 in k6671 */
static void C_ccall f_10744(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
if(c!=2) C_bad_argc_2(c,2,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_10744,2,t0,t1);}
if(C_truep(((C_word*)t0)[3])){
C_trace("ChickenBridge.scm: 377  error");
t2=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t2))(4,t2,t1,lf[193],((C_word*)t0)[2]);}
else{
t2=t1;
((C_proc2)(void*)(*((C_word*)t2+1)))(2,t2,C_SCHEME_FALSE);}}

/* segs in k7274 in k7271 in k6978 in k6975 in k6971 in k6680 in k6677 in k6674 in k6671 */
static void C_ccall f_10508(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,...){
C_word tmp;
C_word t4;
va_list v;
C_word *a,c2=c;
C_save_rest(t3,c2,4);
if(c<4) C_bad_min_argc_2(c,4,t0);
C_check_for_interrupt;
if(!C_demand(c*C_SIZEOF_PAIR+11)){
C_save_and_reclaim((void*)tr4r,(void*)f_10508r,4,t0,t1,t2,t3);}
else{
a=C_alloc((c-4)*3);
t4=C_restore_rest(a,C_rest_count(0));
f_10508r(t0,t1,t2,t3,t4);}}

static void C_ccall f_10508r(C_word t0,C_word t1,C_word t2,C_word t3,C_word t4){
C_word tmp;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word *a=C_alloc(11);
t5=(*a=C_VECTOR_TYPE|1,a[1]=t4,tmp=(C_word)a,a+=2,tmp);
if(C_truep((C_word)C_i_lessp(t2,C_fix(1)))){
t6=t1;
((C_proc2)(void*)(*((C_word*)t6+1)))(2,t6,C_SCHEME_END_OF_LIST);}
else{
t6=C_fix(1);
t7=(*a=C_VECTOR_TYPE|1,a[1]=t6,tmp=(C_word)a,a+=2,tmp);
t8=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_10521,a[2]=t1,a[3]=t3,a[4]=t2,a[5]=t5,a[6]=t7,tmp=(C_word)a,a+=7,tmp);
if(C_truep((C_word)C_i_pairp(((C_word*)t5)[1]))){
t9=(C_word)C_i_car(((C_word*)t5)[1]);
t10=C_set_block_item(t7,0,t9);
t11=(C_word)C_i_cdr(((C_word*)t5)[1]);
t12=C_set_block_item(t5,0,t11);
t13=t8;
f_10521(t13,t12);}
else{
t9=t8;
f_10521(t9,C_SCHEME_UNDEFINED);}}}

/* k10519 in segs in k7274 in k7271 in k6978 in k6975 in k6971 in k6680 in k6677 in k6674 in k6671 */
static void C_fcall f_10521(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word t14;
C_word t15;
C_word t16;
C_word t17;
C_word t18;
C_word t19;
C_word t20;
C_word ab[23],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_10521,NULL,2,t0,t1);}
t2=(C_word)C_eqp(((C_word*)((C_word*)t0)[6])[1],C_fix(1));
t3=(C_truep(t2)?t2:(C_word)C_eqp(((C_word*)((C_word*)t0)[6])[1],C_fix(2)));
if(C_truep(t3)){
t4=(C_word)C_eqp(((C_word*)((C_word*)t0)[6])[1],C_fix(1));
t5=(C_truep(t4)?C_retrieve2(lf[97],"tb:explseg"):C_retrieve2(lf[98],"tb:geoseg"));
t6=(C_word)C_i_nullp(((C_word*)((C_word*)t0)[5])[1]);
t7=(C_truep(t6)?C_fix(2):(C_word)C_i_car(((C_word*)((C_word*)t0)[5])[1]));
t8=(C_word)C_a_i_list(&a,1,C_SCHEME_FALSE);
t9=t8;
t10=(*a=C_VECTOR_TYPE|1,a[1]=t9,tmp=(C_word)a,a+=2,tmp);
t11=(*a=C_CLOSURE_TYPE|8,a[1]=(C_word)f_10542,a[2]=((C_word*)t0)[2],a[3]=t7,a[4]=((C_word*)t0)[3],a[5]=t5,a[6]=t10,a[7]=t8,a[8]=((C_word*)t0)[4],tmp=(C_word)a,a+=9,tmp);
if(C_truep((C_word)C_i_lessp(t7,C_fix(0)))){
C_trace("ChickenBridge.scm: 377  error");
t12=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t12))(4,t12,t11,lf[189],t7);}
else{
t12=t11;
f_10542(2,t12,C_SCHEME_UNDEFINED);}}
else{
t4=(C_word)C_eqp(((C_word*)((C_word*)t0)[6])[1],C_fix(3));
if(C_truep(t4)){
t5=C_retrieve(lf[154]);
t6=(*a=C_VECTOR_TYPE|1,a[1]=t5,tmp=(C_word)a,a+=2,tmp);
t7=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_10603,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[5],a[5]=t6,a[6]=((C_word*)t0)[4],tmp=(C_word)a,a+=7,tmp);
if(C_truep((C_word)C_i_nullp(((C_word*)((C_word*)t0)[5])[1]))){
t8=t7;
f_10603(t8,C_SCHEME_UNDEFINED);}
else{
t8=(C_word)C_i_car(((C_word*)((C_word*)t0)[5])[1]);
t9=C_set_block_item(t6,0,t8);
t10=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[5])[1]);
t11=C_mutate(((C_word *)((C_word*)t0)[5])+1,t10);
t12=t7;
f_10603(t12,t11);}}
else{
C_trace("ChickenBridge.scm: 377  error");
t5=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t5))(4,t5,((C_word*)t0)[2],lf[190],((C_word*)((C_word*)t0)[6])[1]);}}}

/* k10601 in k10519 in segs in k7274 in k7271 in k6978 in k6975 in k6971 in k6680 in k6677 in k6674 in k6671 */
static void C_fcall f_10603(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_10603,NULL,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_10606,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],tmp=(C_word)a,a+=7,tmp);
C_apply(4,0,t2,((C_word*)((C_word*)t0)[5])[1],((C_word*)((C_word*)t0)[4])[1]);}

/* k10604 in k10601 in k10519 in segs in k7274 in k7271 in k6978 in k6975 in k6971 in k6680 in k6677 in k6674 in k6671 */
static void C_ccall f_10606(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word ab[20],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_10606,2,t0,t1);}
t2=t1;
t3=(*a=C_VECTOR_TYPE|1,a[1]=t2,tmp=(C_word)a,a+=2,tmp);
t4=(C_word)C_a_i_list(&a,1,((C_word*)t3)[1]);
t5=t4;
t6=(*a=C_VECTOR_TYPE|1,a[1]=t5,tmp=(C_word)a,a+=2,tmp);
t7=C_SCHEME_UNDEFINED;
t8=(*a=C_VECTOR_TYPE|1,a[1]=t7,tmp=(C_word)a,a+=2,tmp);
t9=C_set_block_item(t8,0,(*a=C_CLOSURE_TYPE|10,a[1]=(C_word)f_10614,a[2]=((C_word*)t0)[3],a[3]=t4,a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=t8,a[7]=t3,a[8]=t6,a[9]=((C_word*)t0)[6],a[10]=((C_word)li123),tmp=(C_word)a,a+=11,tmp));
t10=((C_word*)t8)[1];
f_10614(t10,((C_word*)t0)[2],C_fix(1),C_SCHEME_FALSE);}

/* do743 in k10604 in k10601 in k10519 in segs in k7274 in k7271 in k6978 in k6975 in k6971 in k6680 in k6677 in k6674 in k6671 */
static void C_fcall f_10614(C_word t0,C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word ab[19],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_10614,NULL,4,t0,t1,t2,t3);}
t4=(*a=C_VECTOR_TYPE|1,a[1]=t3,tmp=(C_word)a,a+=2,tmp);
if(C_truep((C_word)C_i_lessp(t2,((C_word*)t0)[9]))){
t5=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_10655,a[2]=t1,a[3]=((C_word*)t0)[6],a[4]=t2,a[5]=((C_word*)t0)[7],a[6]=((C_word*)t0)[8],a[7]=t4,tmp=(C_word)a,a+=8,tmp);
C_apply(4,0,t5,((C_word*)((C_word*)t0)[5])[1],((C_word*)((C_word*)t0)[4])[1]);}
else{
t5=C_SCHEME_UNDEFINED;
t6=(*a=C_VECTOR_TYPE|1,a[1]=t5,tmp=(C_word)a,a+=2,tmp);
t7=C_set_block_item(t6,0,(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_10626,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[7],a[4]=t6,a[5]=((C_word*)t0)[3],a[6]=((C_word)li122),tmp=(C_word)a,a+=7,tmp));
t8=((C_word*)t6)[1];
f_10626(t8,t1,((C_word*)t0)[3]);}}

/* do747 in do743 in k10604 in k10601 in k10519 in segs in k7274 in k7271 in k6978 in k6975 in k6971 in k6680 in k6677 in k6674 in k6671 */
static void C_fcall f_10626(C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word t5;
C_word ab[5],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_10626,NULL,3,t0,t1,t2);}
if(C_truep((C_word)C_i_nullp(t2))){
t3=t1;
((C_proc2)(void*)(*((C_word*)t3+1)))(2,t3,((C_word*)t0)[5]);}
else{
t3=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_10647,a[2]=t1,a[3]=((C_word*)t0)[4],a[4]=t2,tmp=(C_word)a,a+=5,tmp);
t4=(C_word)C_i_car(t2);
C_trace("ChickenBridge.scm: 377  tb:rescale");
f_8192(t3,t4,C_fix(0),((C_word*)((C_word*)t0)[3])[1],C_fix(0),((C_word*)t0)[2],C_fix(1));}}

/* k10645 in do747 in do743 in k10604 in k10601 in k10519 in segs in k7274 in k7271 in k6978 in k6975 in k6971 in k6680 in k6677 in k6674 in k6671 */
static void C_ccall f_10647(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word *a;
t2=(C_word)C_i_set_car(((C_word*)t0)[4],t1);
t3=(C_word)C_i_cdr(((C_word*)t0)[4]);
t4=((C_word*)((C_word*)t0)[3])[1];
f_10626(t4,((C_word*)t0)[2],t3);}

/* k10653 in do743 in k10604 in k10601 in k10519 in segs in k7274 in k7271 in k6978 in k6975 in k6971 in k6680 in k6677 in k6674 in k6671 */
static void C_ccall f_10655(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word ab[11],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_10655,2,t0,t1);}
t2=C_mutate(((C_word *)((C_word*)t0)[7])+1,t1);
t3=(C_word)C_a_i_list(&a,1,((C_word*)((C_word*)t0)[7])[1]);
t4=(C_word)C_i_set_cdr(((C_word*)((C_word*)t0)[6])[1],t3);
t5=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[6])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[6])+1,t5);
t7=(C_word)C_a_i_plus(&a,2,((C_word*)((C_word*)t0)[5])[1],((C_word*)((C_word*)t0)[7])[1]);
t8=C_mutate(((C_word *)((C_word*)t0)[5])+1,t7);
t9=(C_word)C_a_i_plus(&a,2,((C_word*)t0)[4],C_fix(1));
t10=((C_word*)((C_word*)t0)[3])[1];
f_10614(t10,((C_word*)t0)[2],t9,((C_word*)((C_word*)t0)[7])[1]);}

/* k10540 in k10519 in segs in k7274 in k7271 in k6978 in k6975 in k6971 in k6680 in k6677 in k6674 in k6671 */
static void C_ccall f_10542(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[12],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_10542,2,t0,t1);}
t2=C_SCHEME_UNDEFINED;
t3=(*a=C_VECTOR_TYPE|1,a[1]=t2,tmp=(C_word)a,a+=2,tmp);
t4=C_set_block_item(t3,0,(*a=C_CLOSURE_TYPE|9,a[1]=(C_word)f_10547,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=t3,a[6]=((C_word*)t0)[6],a[7]=((C_word*)t0)[7],a[8]=((C_word*)t0)[8],a[9]=((C_word)li121),tmp=(C_word)a,a+=10,tmp));
t5=((C_word*)t3)[1];
f_10547(t5,((C_word*)t0)[2],C_fix(0));}

/* do731 in k10540 in k10519 in segs in k7274 in k7271 in k6978 in k6975 in k6971 in k6680 in k6677 in k6674 in k6671 */
static void C_fcall f_10547(C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word ab[6],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_10547,NULL,3,t0,t1,t2);}
if(C_truep((C_word)C_i_nequalp(t2,((C_word*)t0)[8]))){
t3=t1;
((C_proc2)(void*)(*((C_word*)t3+1)))(2,t3,(C_word)C_i_cdr(((C_word*)t0)[7]));}
else{
t3=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_10579,a[2]=t1,a[3]=((C_word*)t0)[5],a[4]=t2,a[5]=((C_word*)t0)[6],tmp=(C_word)a,a+=6,tmp);
C_trace("ChickenBridge.scm: 377  func");
t4=((C_word*)t0)[4];
((C_proc6)C_retrieve_proc(t4))(6,t4,t3,t2,((C_word*)t0)[8],((C_word*)t0)[3],((C_word*)t0)[2]);}}

/* k10577 in do731 in k10540 in k10519 in segs in k7274 in k7271 in k6978 in k6975 in k6971 in k6680 in k6677 in k6674 in k6671 */
static void C_ccall f_10579(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_10579,2,t0,t1);}
t2=(C_word)C_a_i_list(&a,1,t1);
t3=(C_word)C_i_set_cdr(((C_word*)((C_word*)t0)[5])[1],t2);
t4=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[5])[1]);
t5=C_mutate(((C_word *)((C_word*)t0)[5])+1,t4);
t6=(C_word)C_a_i_plus(&a,2,((C_word*)t0)[4],C_fix(1));
t7=((C_word*)((C_word*)t0)[3])[1];
f_10547(t7,((C_word*)t0)[2],t6);}

/* rangamma in k7274 in k7271 in k6978 in k6975 in k6971 in k6680 in k6677 in k6674 in k6671 */
static void C_ccall f_10487(C_word c,C_word t0,C_word t1,...){
C_word tmp;
C_word t2;
va_list v;
C_word *a,c2=c;
C_save_rest(t1,c2,2);
C_check_for_interrupt;
if(!C_demand(c*C_SIZEOF_PAIR+0)){
C_save_and_reclaim((void*)tr2rv,(void*)f_10487r,2,t0,t1);}
else{
a=C_alloc((c-2)*3);
t2=C_restore_rest_vector(a,C_rest_count(0));
f_10487r(t0,t1,t2);}}

static void C_ccall f_10487r(C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
if(C_truep((C_word)C_vemptyp(t2))){
C_trace("ChickenBridge.scm: 377  tb:rangamma");
f_8429(t1,C_fix(1));}
else{
t3=(C_word)C_i_vector_ref(t2,C_fix(0));
C_trace("ChickenBridge.scm: 377  tb:rangamma");
f_8429(t1,t3);}}

/* ranpoisson in k7274 in k7271 in k6978 in k6975 in k6971 in k6680 in k6677 in k6674 in k6671 */
static void C_ccall f_10468(C_word c,C_word t0,C_word t1,...){
C_word tmp;
C_word t2;
va_list v;
C_word *a,c2=c;
C_save_rest(t1,c2,2);
C_check_for_interrupt;
if(!C_demand(c*C_SIZEOF_PAIR+0)){
C_save_and_reclaim((void*)tr2rv,(void*)f_10468r,2,t0,t1);}
else{
a=C_alloc((c-2)*3);
t2=C_restore_rest_vector(a,C_rest_count(0));
f_10468r(t0,t1,t2);}}

static void C_ccall f_10468r(C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
if(C_truep((C_word)C_i_nullp(C_retrieve(lf[184])))){
C_trace("ChickenBridge.scm: 377  tb:ranpoisson");
f_8439(t1,C_fix(1));}
else{
t3=(C_word)C_i_vector_ref(t2,C_fix(0));
C_trace("ChickenBridge.scm: 377  tb:ranpoisson");
f_8439(t1,t3);}}

/* rangauss in k7274 in k7271 in k6978 in k6975 in k6971 in k6680 in k6677 in k6674 in k6671 */
static void C_ccall f_10427(C_word c,C_word t0,C_word t1,...){
C_word tmp;
C_word t2;
va_list v;
C_word *a,c2=c;
C_save_rest(t1,c2,2);
C_check_for_interrupt;
if(!C_demand(c*C_SIZEOF_PAIR+0)){
C_save_and_reclaim((void*)tr2r,(void*)f_10427r,2,t0,t1);}
else{
a=C_alloc((c-2)*3);
t2=C_restore_rest(a,C_rest_count(0));
f_10427r(t0,t1,t2);}}

static void C_ccall f_10427r(C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
if(C_truep((C_word)C_i_nullp(t2))){
C_trace("ChickenBridge.scm: 377  tb:rangauss");
f_8400(t1,C_fix(1),C_fix(0));}
else{
t3=(C_word)C_i_cdr(t2);
if(C_truep((C_word)C_i_nullp(t3))){
t4=(C_word)C_i_car(t2);
C_trace("ChickenBridge.scm: 377  tb:rangauss");
f_8400(t1,t4,C_fix(0));}
else{
t4=(C_word)C_i_car(t2);
t5=(C_word)C_i_cdr(t2);
C_trace("ChickenBridge.scm: 377  tb:rangauss");
f_8400(t1,t4,t5);}}}

/* ranexp in k7274 in k7271 in k6978 in k6975 in k6971 in k6680 in k6677 in k6674 in k6671 */
static void C_ccall f_10408(C_word c,C_word t0,C_word t1,...){
C_word tmp;
C_word t2;
va_list v;
C_word *a,c2=c;
C_save_rest(t1,c2,2);
C_check_for_interrupt;
if(!C_demand(c*C_SIZEOF_PAIR+0)){
C_save_and_reclaim((void*)tr2rv,(void*)f_10408r,2,t0,t1);}
else{
a=C_alloc((c-2)*3);
t2=C_restore_rest_vector(a,C_rest_count(0));
f_10408r(t0,t1,t2);}}

static void C_ccall f_10408r(C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
if(C_truep((C_word)C_vemptyp(t2))){
C_trace("ChickenBridge.scm: 377  tb:ranexp");
f_8411(t1,C_fix(1));}
else{
t3=(C_word)C_i_vector_ref(t2,C_fix(0));
C_trace("ChickenBridge.scm: 377  tb:ranexp");
f_8411(t1,t3);}}

/* ranbeta in k7274 in k7271 in k6978 in k6975 in k6971 in k6680 in k6677 in k6674 in k6671 */
static void C_ccall f_10180(C_word c,C_word t0,C_word t1,...){
C_word tmp;
C_word t2;
va_list v;
C_word *a,c2=c;
C_save_rest(t1,c2,2);
C_check_for_interrupt;
if(!C_demand(c*C_SIZEOF_PAIR+44)){
C_save_and_reclaim((void*)tr2r,(void*)f_10180r,2,t0,t1);}
else{
a=C_alloc((c-2)*3);
t2=C_restore_rest(a,C_rest_count(0));
f_10180r(t0,t1,t2);}}

static void C_ccall f_10180r(C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word t14;
C_word t15;
C_word t16;
C_word t17;
C_word t18;
C_word t19;
C_word t20;
C_word t21;
C_word t22;
C_word *a=C_alloc(44);
t3=lf[177];
t4=(*a=C_VECTOR_TYPE|1,a[1]=t3,tmp=(C_word)a,a+=2,tmp);
t5=C_SCHEME_FALSE;
t6=(*a=C_VECTOR_TYPE|1,a[1]=t5,tmp=(C_word)a,a+=2,tmp);
t7=C_SCHEME_FALSE;
t8=(*a=C_VECTOR_TYPE|1,a[1]=t7,tmp=(C_word)a,a+=2,tmp);
t9=C_SCHEME_FALSE;
t10=(*a=C_VECTOR_TYPE|1,a[1]=t9,tmp=(C_word)a,a+=2,tmp);
t11=t2;
t12=(*a=C_VECTOR_TYPE|1,a[1]=t11,tmp=(C_word)a,a+=2,tmp);
t13=C_SCHEME_FALSE;
t14=(*a=C_VECTOR_TYPE|1,a[1]=t13,tmp=(C_word)a,a+=2,tmp);
t15=(*a=C_CLOSURE_TYPE|9,a[1]=(C_word)f_10184,a[2]=t10,a[3]=t14,a[4]=t8,a[5]=t2,a[6]=t12,a[7]=t6,a[8]=t4,a[9]=t1,tmp=(C_word)a,a+=10,tmp);
if(C_truep((C_word)C_i_nullp(((C_word*)t12)[1]))){
t16=t15;
f_10184(t16,C_SCHEME_UNDEFINED);}
else{
t16=(C_word)C_i_car(((C_word*)t12)[1]);
t17=(C_word)C_eqp(t16,lf[178]);
if(C_truep(t17)){
t18=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_10321,a[2]=t2,a[3]=t15,a[4]=t12,a[5]=t14,a[6]=t8,a[7]=t4,tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)t8)[1])){
C_trace("error");
t19=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t19))(4,t19,t18,lf[19],lf[178]);}
else{
t19=t18;
f_10321(2,t19,C_SCHEME_UNDEFINED);}}
else{
t18=(C_word)C_eqp(t16,lf[179]);
if(C_truep(t18)){
t19=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_10356,a[2]=t2,a[3]=t15,a[4]=t12,a[5]=t14,a[6]=t10,a[7]=t6,tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)t10)[1])){
C_trace("error");
t20=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t20))(4,t20,t19,lf[19],lf[179]);}
else{
t20=t19;
f_10356(2,t20,C_SCHEME_UNDEFINED);}}
else{
t19=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_10385,a[2]=t15,a[3]=t8,a[4]=t4,a[5]=t12,tmp=(C_word)a,a+=6,tmp);
if(C_truep(((C_word*)t14)[1])){
C_trace("error");
t20=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t20))(4,t20,t19,lf[10],t2);}
else{
t20=t19;
f_10385(2,t20,C_SCHEME_UNDEFINED);}}}}}

/* k10383 in ranbeta in k7274 in k7271 in k6978 in k6975 in k6971 in k6680 in k6677 in k6674 in k6671 */
static void C_ccall f_10385(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_10385,2,t0,t1);}
t2=(C_word)C_i_car(((C_word*)((C_word*)t0)[5])[1]);
t3=C_mutate(((C_word *)((C_word*)t0)[4])+1,t2);
t4=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_10392,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[5],a[4]=((C_word*)t0)[3],tmp=(C_word)a,a+=5,tmp);
t5=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_10400,a[2]=((C_word*)t0)[4],a[3]=t4,tmp=(C_word)a,a+=4,tmp);
C_trace("keyword?");
t6=C_retrieve(lf[13]);
((C_proc3)C_retrieve_proc(t6))(3,t6,t5,((C_word*)((C_word*)t0)[4])[1]);}

/* k10398 in k10383 in ranbeta in k7274 in k7271 in k6978 in k6975 in k6971 in k6680 in k6677 in k6674 in k6671 */
static void C_ccall f_10400(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
if(C_truep(t1)){
C_trace("error");
t2=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t2))(4,t2,((C_word*)t0)[3],lf[14],((C_word*)((C_word*)t0)[2])[1]);}
else{
t2=((C_word*)t0)[3];
f_10392(2,t2,C_SCHEME_UNDEFINED);}}

/* k10390 in k10383 in ranbeta in k7274 in k7271 in k6978 in k6975 in k6971 in k6680 in k6677 in k6674 in k6671 */
static void C_ccall f_10392(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word *a;
t2=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[3])[1]);
t4=C_mutate(((C_word *)((C_word*)t0)[3])+1,t3);
t5=((C_word*)t0)[2];
f_10184(t5,t4);}

/* k10354 in ranbeta in k7274 in k7271 in k6978 in k6975 in k6971 in k6680 in k6677 in k6674 in k6671 */
static void C_ccall f_10356(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_10356,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_10360,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("error");
t4=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[21],((C_word*)t0)[2]);}
else{
t4=t2;
f_10360(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k10358 in k10354 in ranbeta in k7274 in k7271 in k6978 in k6975 in k6971 in k6680 in k6677 in k6674 in k6671 */
static void C_ccall f_10360(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_10184(t7,t6);}

/* k10319 in ranbeta in k7274 in k7271 in k6978 in k6975 in k6971 in k6680 in k6677 in k6674 in k6671 */
static void C_ccall f_10321(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_10321,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_10325,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("error");
t4=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[21],((C_word*)t0)[2]);}
else{
t4=t2;
f_10325(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k10323 in k10319 in ranbeta in k7274 in k7271 in k6978 in k6975 in k6971 in k6680 in k6677 in k6674 in k6671 */
static void C_ccall f_10325(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_10184(t7,t6);}

/* k10182 in ranbeta in k7274 in k7271 in k6978 in k6975 in k6971 in k6680 in k6677 in k6674 in k6671 */
static void C_fcall f_10184(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word ab[29],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_10184,NULL,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_10187,a[2]=((C_word*)t0)[5],a[3]=((C_word*)t0)[6],a[4]=((C_word*)t0)[7],a[5]=((C_word*)t0)[8],a[6]=((C_word*)t0)[9],tmp=(C_word)a,a+=7,tmp);
if(C_truep((C_word)C_i_nullp(((C_word*)((C_word*)t0)[6])[1]))){
t3=t2;
f_10187(t3,C_SCHEME_UNDEFINED);}
else{
t3=(C_word)C_i_car(((C_word*)((C_word*)t0)[6])[1]);
t4=(C_word)C_eqp(t3,lf[178]);
if(C_truep(t4)){
t5=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_10221,a[2]=((C_word*)t0)[5],a[3]=t2,a[4]=((C_word*)t0)[6],a[5]=((C_word*)t0)[3],a[6]=((C_word*)t0)[4],a[7]=((C_word*)t0)[8],tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)((C_word*)t0)[4])[1])){
C_trace("error");
t6=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t6))(4,t6,t5,lf[19],lf[178]);}
else{
t6=t5;
f_10221(2,t6,C_SCHEME_UNDEFINED);}}
else{
t5=(C_word)C_eqp(t3,lf[179]);
if(C_truep(t5)){
t6=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_10256,a[2]=((C_word*)t0)[5],a[3]=t2,a[4]=((C_word*)t0)[6],a[5]=((C_word*)t0)[3],a[6]=((C_word*)t0)[2],a[7]=((C_word*)t0)[7],tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)((C_word*)t0)[2])[1])){
C_trace("error");
t7=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t7))(4,t7,t6,lf[19],lf[179]);}
else{
t7=t6;
f_10256(2,t7,C_SCHEME_UNDEFINED);}}
else{
t6=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_10285,a[2]=t2,a[3]=((C_word*)t0)[2],a[4]=((C_word*)t0)[7],a[5]=((C_word*)t0)[6],tmp=(C_word)a,a+=6,tmp);
if(C_truep(((C_word*)((C_word*)t0)[3])[1])){
C_trace("error");
t7=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t7))(4,t7,t6,lf[10],((C_word*)t0)[5]);}
else{
t7=t6;
f_10285(2,t7,C_SCHEME_UNDEFINED);}}}}}

/* k10283 in k10182 in ranbeta in k7274 in k7271 in k6978 in k6975 in k6971 in k6680 in k6677 in k6674 in k6671 */
static void C_ccall f_10285(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_10285,2,t0,t1);}
t2=(C_word)C_i_car(((C_word*)((C_word*)t0)[5])[1]);
t3=C_mutate(((C_word *)((C_word*)t0)[4])+1,t2);
t4=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_10292,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[5],a[4]=((C_word*)t0)[3],tmp=(C_word)a,a+=5,tmp);
t5=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_10300,a[2]=((C_word*)t0)[4],a[3]=t4,tmp=(C_word)a,a+=4,tmp);
C_trace("keyword?");
t6=C_retrieve(lf[13]);
((C_proc3)C_retrieve_proc(t6))(3,t6,t5,((C_word*)((C_word*)t0)[4])[1]);}

/* k10298 in k10283 in k10182 in ranbeta in k7274 in k7271 in k6978 in k6975 in k6971 in k6680 in k6677 in k6674 in k6671 */
static void C_ccall f_10300(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
if(C_truep(t1)){
C_trace("error");
t2=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t2))(4,t2,((C_word*)t0)[3],lf[14],((C_word*)((C_word*)t0)[2])[1]);}
else{
t2=((C_word*)t0)[3];
f_10292(2,t2,C_SCHEME_UNDEFINED);}}

/* k10290 in k10283 in k10182 in ranbeta in k7274 in k7271 in k6978 in k6975 in k6971 in k6680 in k6677 in k6674 in k6671 */
static void C_ccall f_10292(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word *a;
t2=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[3])[1]);
t4=C_mutate(((C_word *)((C_word*)t0)[3])+1,t3);
t5=((C_word*)t0)[2];
f_10187(t5,t4);}

/* k10254 in k10182 in ranbeta in k7274 in k7271 in k6978 in k6975 in k6971 in k6680 in k6677 in k6674 in k6671 */
static void C_ccall f_10256(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_10256,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_10260,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("error");
t4=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[21],((C_word*)t0)[2]);}
else{
t4=t2;
f_10260(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k10258 in k10254 in k10182 in ranbeta in k7274 in k7271 in k6978 in k6975 in k6971 in k6680 in k6677 in k6674 in k6671 */
static void C_ccall f_10260(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_10187(t7,t6);}

/* k10219 in k10182 in ranbeta in k7274 in k7271 in k6978 in k6975 in k6971 in k6680 in k6677 in k6674 in k6671 */
static void C_ccall f_10221(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_10221,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_10225,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("error");
t4=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[21],((C_word*)t0)[2]);}
else{
t4=t2;
f_10225(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k10223 in k10219 in k10182 in ranbeta in k7274 in k7271 in k6978 in k6975 in k6971 in k6680 in k6677 in k6674 in k6671 */
static void C_ccall f_10225(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_10187(t7,t6);}

/* k10185 in k10182 in ranbeta in k7274 in k7271 in k6978 in k6975 in k6971 in k6680 in k6677 in k6674 in k6671 */
static void C_fcall f_10187(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[5],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_10187,NULL,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_10190,a[2]=((C_word*)t0)[4],a[3]=((C_word*)t0)[5],a[4]=((C_word*)t0)[6],tmp=(C_word)a,a+=5,tmp);
if(C_truep((C_word)C_i_nullp(((C_word*)((C_word*)t0)[3])[1]))){
t3=t2;
f_10190(2,t3,C_SCHEME_UNDEFINED);}
else{
C_trace("error");
t3=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t3))(4,t3,t2,lf[5],((C_word*)t0)[2]);}}

/* k10188 in k10185 in k10182 in ranbeta in k7274 in k7271 in k6978 in k6975 in k6971 in k6680 in k6677 in k6674 in k6671 */
static void C_ccall f_10190(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[5],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_10190,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_10193,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],tmp=(C_word)a,a+=5,tmp);
t3=((C_word*)((C_word*)t0)[2])[1];
if(C_truep(t3)){
t4=t2;
f_10193(t4,C_SCHEME_UNDEFINED);}
else{
t4=C_mutate(((C_word *)((C_word*)t0)[2])+1,((C_word*)((C_word*)t0)[3])[1]);
t5=t2;
f_10193(t5,t4);}}

/* k10191 in k10188 in k10185 in k10182 in ranbeta in k7274 in k7271 in k6978 in k6975 in k6971 in k6680 in k6677 in k6674 in k6671 */
static void C_fcall f_10193(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word ab[6],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_10193,NULL,2,t0,t1);}
t2=((C_word*)t0)[4];
t3=((C_word*)((C_word*)t0)[3])[1];
t4=((C_word*)((C_word*)t0)[2])[1];
t5=(C_word)C_a_i_bytevector(&a,1,C_fix(4));
t6=(C_word)C_i_foreign_flonum_argumentp(t3);
t7=(C_word)C_i_foreign_flonum_argumentp(t4);
t8=t2;
((C_proc2)(void*)(*((C_word*)t8+1)))(2,t8,(C_word)stub400(t5,t6,t7));}

/* shuffle in k7274 in k7271 in k6978 in k6975 in k6971 in k6680 in k6677 in k6674 in k6671 */
static void C_ccall f_10138(C_word c,C_word t0,C_word t1,...){
C_word tmp;
C_word t2;
va_list v;
C_word *a,c2=c;
C_save_rest(t1,c2,2);
C_check_for_interrupt;
if(!C_demand(c*C_SIZEOF_PAIR+6)){
C_save_and_reclaim((void*)tr2r,(void*)f_10138r,2,t0,t1);}
else{
a=C_alloc((c-2)*3);
t2=C_restore_rest(a,C_rest_count(0));
f_10138r(t0,t1,t2);}}

static void C_ccall f_10138r(C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a=C_alloc(6);
t3=(C_word)C_i_cdr(t2);
if(C_truep((C_word)C_i_nullp(t3))){
t4=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_10152,a[2]=t1,tmp=(C_word)a,a+=3,tmp);
t5=(C_word)C_i_car(t2);
C_trace("ChickenBridge.scm: 377  append");
t6=*((C_word*)lf[18]+1);
((C_proc4)C_retrieve_proc(t6))(4,t6,t4,t5,C_SCHEME_END_OF_LIST);}
else{
t4=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_10167,a[2]=t1,tmp=(C_word)a,a+=3,tmp);
C_trace("ChickenBridge.scm: 377  append");
t5=*((C_word*)lf[18]+1);
((C_proc4)C_retrieve_proc(t5))(4,t5,t4,t2,C_SCHEME_END_OF_LIST);}}

/* k10165 in shuffle in k7274 in k7271 in k6978 in k6975 in k6971 in k6680 in k6677 in k6674 in k6671 */
static void C_ccall f_10167(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 377  shuffle!");
t2=C_retrieve(lf[171]);
((C_proc3)C_retrieve_proc(t2))(3,t2,((C_word*)t0)[2],t1);}

/* k10150 in shuffle in k7274 in k7271 in k6978 in k6975 in k6971 in k6680 in k6677 in k6674 in k6671 */
static void C_ccall f_10152(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 377  shuffle!");
t2=C_retrieve(lf[171]);
((C_proc3)C_retrieve_proc(t2))(3,t2,((C_word*)t0)[2],t1);}

/* shuffle! in k7274 in k7271 in k6978 in k6975 in k6971 in k6680 in k6677 in k6674 in k6671 */
static void C_ccall f_10083(C_word c,C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word t5;
C_word ab[5],*a=ab;
if(c!=3) C_bad_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr3,(void*)f_10083,3,t0,t1,t2);}
t3=(C_word)C_i_length(t2);
t4=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_10094,a[2]=t1,a[3]=t2,a[4]=t3,tmp=(C_word)a,a+=5,tmp);
C_trace("ChickenBridge.scm: 377  tb:rani");
f_8355(t4,t3);}

/* k10092 in shuffle! in k7274 in k7271 in k6978 in k6975 in k6971 in k6680 in k6677 in k6674 in k6671 */
static void C_ccall f_10094(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[8],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_10094,2,t0,t1);}
t2=C_SCHEME_UNDEFINED;
t3=(*a=C_VECTOR_TYPE|1,a[1]=t2,tmp=(C_word)a,a+=2,tmp);
t4=C_set_block_item(t3,0,(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_10096,a[2]=t3,a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word)li113),tmp=(C_word)a,a+=6,tmp));
t5=((C_word*)t3)[1];
f_10096(t5,((C_word*)t0)[2],C_fix(0),t1,C_SCHEME_FALSE);}

/* do663 in k10092 in shuffle! in k7274 in k7271 in k6978 in k6975 in k6971 in k6680 in k6677 in k6674 in k6671 */
static void C_fcall f_10096(C_word t0,C_word t1,C_word t2,C_word t3,C_word t4){
C_word tmp;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word t14;
C_word t15;
C_word ab[12],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_10096,NULL,5,t0,t1,t2,t3,t4);}
t5=(*a=C_VECTOR_TYPE|1,a[1]=t4,tmp=(C_word)a,a+=2,tmp);
if(C_truep((C_word)C_i_nequalp(t2,((C_word*)t0)[4]))){
t6=t1;
((C_proc2)(void*)(*((C_word*)t6+1)))(2,t6,((C_word*)t0)[3]);}
else{
t6=(C_word)C_i_list_ref(((C_word*)t0)[3],t2);
t7=C_set_block_item(t5,0,t6);
t8=(C_word)C_i_list_tail(((C_word*)t0)[3],t2);
t9=(C_word)C_i_list_ref(((C_word*)t0)[3],t3);
t10=(C_word)C_i_set_car(t8,t9);
t11=(C_word)C_i_list_tail(((C_word*)t0)[3],t3);
t12=(C_word)C_i_set_car(t11,((C_word*)t5)[1]);
t13=(C_word)C_a_i_plus(&a,2,t2,C_fix(1));
t14=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_10124,a[2]=t5,a[3]=t13,a[4]=t1,a[5]=((C_word*)t0)[2],tmp=(C_word)a,a+=6,tmp);
C_trace("ChickenBridge.scm: 377  tb:rani");
f_8355(t14,((C_word*)t0)[4]);}}

/* k10122 in do663 in k10092 in shuffle! in k7274 in k7271 in k6978 in k6975 in k6971 in k6680 in k6677 in k6674 in k6671 */
static void C_ccall f_10124(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
t2=((C_word*)((C_word*)t0)[5])[1];
f_10096(t2,((C_word*)t0)[4],((C_word*)t0)[3],t1,((C_word*)((C_word*)t0)[2])[1]);}

/* vary in k7274 in k7271 in k6978 in k6975 in k6971 in k6680 in k6677 in k6674 in k6671 */
static void C_ccall f_9984(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,...){
C_word tmp;
C_word t4;
va_list v;
C_word *a,c2=c;
C_save_rest(t3,c2,4);
if(c<4) C_bad_min_argc_2(c,4,t0);
C_check_for_interrupt;
if(!C_demand(c*C_SIZEOF_PAIR+8)){
C_save_and_reclaim((void*)tr4r,(void*)f_9984r,4,t0,t1,t2,t3);}
else{
a=C_alloc((c-4)*3);
t4=C_restore_rest(a,C_rest_count(0));
f_9984r(t0,t1,t2,t3,t4);}}

static void C_ccall f_9984r(C_word t0,C_word t1,C_word t2,C_word t3,C_word t4){
C_word tmp;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word *a=C_alloc(8);
t5=(*a=C_VECTOR_TYPE|1,a[1]=t4,tmp=(C_word)a,a+=2,tmp);
t6=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_9988,a[2]=t1,a[3]=t5,a[4]=t3,a[5]=t2,tmp=(C_word)a,a+=6,tmp);
if(C_truep((C_word)C_i_nullp(((C_word*)t5)[1]))){
t7=C_set_block_item(t5,0,C_fix(0));
t8=t6;
f_9988(t8,t7);}
else{
t7=(C_word)C_i_car(((C_word*)t5)[1]);
t8=C_set_block_item(t5,0,t7);
t9=t6;
f_9988(t9,t8);}}

/* k9986 in vary in k7274 in k7271 in k6978 in k6975 in k6971 in k6680 in k6677 in k6674 in k6671 */
static void C_fcall f_9988(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[6],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_9988,NULL,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_9991,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],tmp=(C_word)a,a+=6,tmp);
t3=((C_word*)((C_word*)t0)[3])[1];
if(C_truep((C_truep((C_word)C_i_equalp(t3,C_fix(0)))?C_SCHEME_TRUE:(C_truep((C_word)C_i_equalp(t3,C_fix(-1)))?C_SCHEME_TRUE:(C_truep((C_word)C_i_equalp(t3,C_fix(1)))?C_SCHEME_TRUE:C_SCHEME_FALSE))))){
t4=t2;
f_9991(2,t4,C_SCHEME_UNDEFINED);}
else{
C_trace("ChickenBridge.scm: 377  error");
t4=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[170],((C_word*)((C_word*)t0)[3])[1]);}}

/* k9989 in k9986 in vary in k7274 in k7271 in k6978 in k6975 in k6971 in k6680 in k6677 in k6674 in k6671 */
static void C_ccall f_9991(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_9991,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_9993,a[2]=((C_word)li110),tmp=(C_word)a,a+=3,tmp);
if(C_truep((C_word)C_i_listp(((C_word*)t0)[5]))){
t3=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_10056,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=t2,a[5]=((C_word)li111),tmp=(C_word)a,a+=6,tmp);
C_trace("map");
t4=*((C_word*)lf[17]+1);
((C_proc4)(void*)(*((C_word*)t4+1)))(4,t4,((C_word*)t0)[2],t3,((C_word*)t0)[5]);}
else{
C_trace("ChickenBridge.scm: 377  vary1");
f_9993(((C_word*)t0)[2],((C_word*)t0)[5],((C_word*)t0)[4],((C_word*)((C_word*)t0)[3])[1]);}}

/* a10055 in k9989 in k9986 in vary in k7274 in k7271 in k6978 in k6975 in k6971 in k6680 in k6677 in k6674 in k6671 */
static void C_ccall f_10056(C_word c,C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word *a;
if(c!=3) C_bad_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr3,(void*)f_10056,3,t0,t1,t2);}
C_trace("ChickenBridge.scm: 377  vary1");
f_9993(t1,t2,((C_word*)t0)[3],((C_word*)((C_word*)t0)[2])[1]);}

/* vary1 in k9989 in k9986 in vary in k7274 in k7271 in k6978 in k6975 in k6971 in k6680 in k6677 in k6674 in k6671 */
static void C_fcall f_9993(C_word t1,C_word t2,C_word t3,C_word t4){
C_word tmp;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word ab[14],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_9993,NULL,4,t1,t2,t3,t4);}
t5=(C_word)C_i_less_or_equalp(t3,C_fix(0));
t6=(C_truep(t5)?t5:(C_word)C_i_nequalp(t2,C_fix(0)));
if(C_truep(t6)){
t7=t1;
((C_proc2)(void*)(*((C_word*)t7+1)))(2,t7,t2);}
else{
t7=(C_word)C_a_i_times(&a,2,t2,t3);
t8=(C_word)C_a_i_abs(&a,1,t7);
t9=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_10009,a[2]=t1,a[3]=t2,a[4]=t8,a[5]=t4,tmp=(C_word)a,a+=6,tmp);
C_trace("ChickenBridge.scm: 377  tb:ranf");
f_8362(t9,t8);}}

/* k10007 in vary1 in k9989 in k9986 in vary in k7274 in k7271 in k6978 in k6975 in k6971 in k6680 in k6677 in k6674 in k6671 */
static void C_ccall f_10009(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[20],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_10009,2,t0,t1);}
t2=(C_word)C_eqp(((C_word*)t0)[5],C_fix(0));
if(C_truep(t2)){
t3=(C_word)C_a_i_times(&a,2,((C_word*)t0)[4],lf[169]);
t4=(C_word)C_a_i_minus(&a,2,((C_word*)t0)[3],t3);
t5=((C_word*)t0)[2];
((C_proc2)(void*)(*((C_word*)t5+1)))(2,t5,(C_word)C_a_i_plus(&a,2,t4,t1));}
else{
t3=(C_word)C_eqp(((C_word*)t0)[5],C_fix(1));
t4=((C_word*)t0)[2];
((C_proc2)(void*)(*((C_word*)t4+1)))(2,t4,(C_truep(t3)?(C_word)C_a_i_plus(&a,2,((C_word*)t0)[3],t1):(C_word)C_a_i_minus(&a,2,((C_word*)t0)[3],t1)));}}

/* odds in k7274 in k7271 in k6978 in k6975 in k6971 in k6680 in k6677 in k6674 in k6671 */
static void C_ccall f_9756(C_word c,C_word t0,C_word t1,C_word t2,...){
C_word tmp;
C_word t3;
va_list v;
C_word *a,c2=c;
C_save_rest(t2,c2,3);
if(c<3) C_bad_min_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_demand(c*C_SIZEOF_PAIR+45)){
C_save_and_reclaim((void*)tr3r,(void*)f_9756r,3,t0,t1,t2);}
else{
a=C_alloc((c-3)*3);
t3=C_restore_rest(a,C_rest_count(0));
f_9756r(t0,t1,t2,t3);}}

static void C_ccall f_9756r(C_word t0,C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word t14;
C_word t15;
C_word t16;
C_word t17;
C_word t18;
C_word t19;
C_word t20;
C_word t21;
C_word t22;
C_word t23;
C_word *a=C_alloc(45);
t4=C_SCHEME_TRUE;
t5=(*a=C_VECTOR_TYPE|1,a[1]=t4,tmp=(C_word)a,a+=2,tmp);
t6=C_SCHEME_FALSE;
t7=(*a=C_VECTOR_TYPE|1,a[1]=t6,tmp=(C_word)a,a+=2,tmp);
t8=C_SCHEME_FALSE;
t9=(*a=C_VECTOR_TYPE|1,a[1]=t8,tmp=(C_word)a,a+=2,tmp);
t10=C_SCHEME_FALSE;
t11=(*a=C_VECTOR_TYPE|1,a[1]=t10,tmp=(C_word)a,a+=2,tmp);
t12=t3;
t13=(*a=C_VECTOR_TYPE|1,a[1]=t12,tmp=(C_word)a,a+=2,tmp);
t14=C_SCHEME_FALSE;
t15=(*a=C_VECTOR_TYPE|1,a[1]=t14,tmp=(C_word)a,a+=2,tmp);
t16=(*a=C_CLOSURE_TYPE|10,a[1]=(C_word)f_9760,a[2]=t11,a[3]=t15,a[4]=t9,a[5]=t3,a[6]=t13,a[7]=t7,a[8]=t5,a[9]=t1,a[10]=t2,tmp=(C_word)a,a+=11,tmp);
if(C_truep((C_word)C_i_nullp(((C_word*)t13)[1]))){
t17=t16;
f_9760(t17,C_SCHEME_UNDEFINED);}
else{
t17=(C_word)C_i_car(((C_word*)t13)[1]);
t18=(C_word)C_eqp(t17,lf[166]);
if(C_truep(t18)){
t19=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_9897,a[2]=t3,a[3]=t16,a[4]=t13,a[5]=t15,a[6]=t9,a[7]=t5,tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)t9)[1])){
C_trace("error");
t20=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t20))(4,t20,t19,lf[19],lf[166]);}
else{
t20=t19;
f_9897(2,t20,C_SCHEME_UNDEFINED);}}
else{
t19=(C_word)C_eqp(t17,lf[167]);
if(C_truep(t19)){
t20=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_9932,a[2]=t3,a[3]=t16,a[4]=t13,a[5]=t15,a[6]=t11,a[7]=t7,tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)t11)[1])){
C_trace("error");
t21=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t21))(4,t21,t20,lf[19],lf[167]);}
else{
t21=t20;
f_9932(2,t21,C_SCHEME_UNDEFINED);}}
else{
t20=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_9961,a[2]=t16,a[3]=t9,a[4]=t5,a[5]=t13,tmp=(C_word)a,a+=6,tmp);
if(C_truep(((C_word*)t15)[1])){
C_trace("error");
t21=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t21))(4,t21,t20,lf[10],t3);}
else{
t21=t20;
f_9961(2,t21,C_SCHEME_UNDEFINED);}}}}}

/* k9959 in odds in k7274 in k7271 in k6978 in k6975 in k6971 in k6680 in k6677 in k6674 in k6671 */
static void C_ccall f_9961(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_9961,2,t0,t1);}
t2=(C_word)C_i_car(((C_word*)((C_word*)t0)[5])[1]);
t3=C_mutate(((C_word *)((C_word*)t0)[4])+1,t2);
t4=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_9968,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[5],a[4]=((C_word*)t0)[3],tmp=(C_word)a,a+=5,tmp);
t5=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_9976,a[2]=((C_word*)t0)[4],a[3]=t4,tmp=(C_word)a,a+=4,tmp);
C_trace("keyword?");
t6=C_retrieve(lf[13]);
((C_proc3)C_retrieve_proc(t6))(3,t6,t5,((C_word*)((C_word*)t0)[4])[1]);}

/* k9974 in k9959 in odds in k7274 in k7271 in k6978 in k6975 in k6971 in k6680 in k6677 in k6674 in k6671 */
static void C_ccall f_9976(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
if(C_truep(t1)){
C_trace("error");
t2=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t2))(4,t2,((C_word*)t0)[3],lf[14],((C_word*)((C_word*)t0)[2])[1]);}
else{
t2=((C_word*)t0)[3];
f_9968(2,t2,C_SCHEME_UNDEFINED);}}

/* k9966 in k9959 in odds in k7274 in k7271 in k6978 in k6975 in k6971 in k6680 in k6677 in k6674 in k6671 */
static void C_ccall f_9968(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word *a;
t2=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[3])[1]);
t4=C_mutate(((C_word *)((C_word*)t0)[3])+1,t3);
t5=((C_word*)t0)[2];
f_9760(t5,t4);}

/* k9930 in odds in k7274 in k7271 in k6978 in k6975 in k6971 in k6680 in k6677 in k6674 in k6671 */
static void C_ccall f_9932(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_9932,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_9936,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("error");
t4=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[21],((C_word*)t0)[2]);}
else{
t4=t2;
f_9936(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k9934 in k9930 in odds in k7274 in k7271 in k6978 in k6975 in k6971 in k6680 in k6677 in k6674 in k6671 */
static void C_ccall f_9936(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_9760(t7,t6);}

/* k9895 in odds in k7274 in k7271 in k6978 in k6975 in k6971 in k6680 in k6677 in k6674 in k6671 */
static void C_ccall f_9897(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_9897,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_9901,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("error");
t4=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[21],((C_word*)t0)[2]);}
else{
t4=t2;
f_9901(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k9899 in k9895 in odds in k7274 in k7271 in k6978 in k6975 in k6971 in k6680 in k6677 in k6674 in k6671 */
static void C_ccall f_9901(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_9760(t7,t6);}

/* k9758 in odds in k7274 in k7271 in k6978 in k6975 in k6971 in k6680 in k6677 in k6674 in k6671 */
static void C_fcall f_9760(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word ab[30],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_9760,NULL,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_9763,a[2]=((C_word*)t0)[5],a[3]=((C_word*)t0)[6],a[4]=((C_word*)t0)[7],a[5]=((C_word*)t0)[8],a[6]=((C_word*)t0)[9],a[7]=((C_word*)t0)[10],tmp=(C_word)a,a+=8,tmp);
if(C_truep((C_word)C_i_nullp(((C_word*)((C_word*)t0)[6])[1]))){
t3=t2;
f_9763(t3,C_SCHEME_UNDEFINED);}
else{
t3=(C_word)C_i_car(((C_word*)((C_word*)t0)[6])[1]);
t4=(C_word)C_eqp(t3,lf[166]);
if(C_truep(t4)){
t5=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_9797,a[2]=((C_word*)t0)[5],a[3]=t2,a[4]=((C_word*)t0)[6],a[5]=((C_word*)t0)[3],a[6]=((C_word*)t0)[4],a[7]=((C_word*)t0)[8],tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)((C_word*)t0)[4])[1])){
C_trace("error");
t6=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t6))(4,t6,t5,lf[19],lf[166]);}
else{
t6=t5;
f_9797(2,t6,C_SCHEME_UNDEFINED);}}
else{
t5=(C_word)C_eqp(t3,lf[167]);
if(C_truep(t5)){
t6=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_9832,a[2]=((C_word*)t0)[5],a[3]=t2,a[4]=((C_word*)t0)[6],a[5]=((C_word*)t0)[3],a[6]=((C_word*)t0)[2],a[7]=((C_word*)t0)[7],tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)((C_word*)t0)[2])[1])){
C_trace("error");
t7=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t7))(4,t7,t6,lf[19],lf[167]);}
else{
t7=t6;
f_9832(2,t7,C_SCHEME_UNDEFINED);}}
else{
t6=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_9861,a[2]=t2,a[3]=((C_word*)t0)[2],a[4]=((C_word*)t0)[7],a[5]=((C_word*)t0)[6],tmp=(C_word)a,a+=6,tmp);
if(C_truep(((C_word*)((C_word*)t0)[3])[1])){
C_trace("error");
t7=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t7))(4,t7,t6,lf[10],((C_word*)t0)[5]);}
else{
t7=t6;
f_9861(2,t7,C_SCHEME_UNDEFINED);}}}}}

/* k9859 in k9758 in odds in k7274 in k7271 in k6978 in k6975 in k6971 in k6680 in k6677 in k6674 in k6671 */
static void C_ccall f_9861(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_9861,2,t0,t1);}
t2=(C_word)C_i_car(((C_word*)((C_word*)t0)[5])[1]);
t3=C_mutate(((C_word *)((C_word*)t0)[4])+1,t2);
t4=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_9868,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[5],a[4]=((C_word*)t0)[3],tmp=(C_word)a,a+=5,tmp);
t5=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_9876,a[2]=((C_word*)t0)[4],a[3]=t4,tmp=(C_word)a,a+=4,tmp);
C_trace("keyword?");
t6=C_retrieve(lf[13]);
((C_proc3)C_retrieve_proc(t6))(3,t6,t5,((C_word*)((C_word*)t0)[4])[1]);}

/* k9874 in k9859 in k9758 in odds in k7274 in k7271 in k6978 in k6975 in k6971 in k6680 in k6677 in k6674 in k6671 */
static void C_ccall f_9876(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
if(C_truep(t1)){
C_trace("error");
t2=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t2))(4,t2,((C_word*)t0)[3],lf[14],((C_word*)((C_word*)t0)[2])[1]);}
else{
t2=((C_word*)t0)[3];
f_9868(2,t2,C_SCHEME_UNDEFINED);}}

/* k9866 in k9859 in k9758 in odds in k7274 in k7271 in k6978 in k6975 in k6971 in k6680 in k6677 in k6674 in k6671 */
static void C_ccall f_9868(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word *a;
t2=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[3])[1]);
t4=C_mutate(((C_word *)((C_word*)t0)[3])+1,t3);
t5=((C_word*)t0)[2];
f_9763(t5,t4);}

/* k9830 in k9758 in odds in k7274 in k7271 in k6978 in k6975 in k6971 in k6680 in k6677 in k6674 in k6671 */
static void C_ccall f_9832(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_9832,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_9836,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("error");
t4=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[21],((C_word*)t0)[2]);}
else{
t4=t2;
f_9836(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k9834 in k9830 in k9758 in odds in k7274 in k7271 in k6978 in k6975 in k6971 in k6680 in k6677 in k6674 in k6671 */
static void C_ccall f_9836(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_9763(t7,t6);}

/* k9795 in k9758 in odds in k7274 in k7271 in k6978 in k6975 in k6971 in k6680 in k6677 in k6674 in k6671 */
static void C_ccall f_9797(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_9797,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_9801,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("error");
t4=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[21],((C_word*)t0)[2]);}
else{
t4=t2;
f_9801(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k9799 in k9795 in k9758 in odds in k7274 in k7271 in k6978 in k6975 in k6971 in k6680 in k6677 in k6674 in k6671 */
static void C_ccall f_9801(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_9763(t7,t6);}

/* k9761 in k9758 in odds in k7274 in k7271 in k6978 in k6975 in k6971 in k6680 in k6677 in k6674 in k6671 */
static void C_fcall f_9763(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[6],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_9763,NULL,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_9766,a[2]=((C_word*)t0)[4],a[3]=((C_word*)t0)[5],a[4]=((C_word*)t0)[6],a[5]=((C_word*)t0)[7],tmp=(C_word)a,a+=6,tmp);
if(C_truep((C_word)C_i_nullp(((C_word*)((C_word*)t0)[3])[1]))){
t3=t2;
f_9766(2,t3,C_SCHEME_UNDEFINED);}
else{
C_trace("error");
t3=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t3))(4,t3,t2,lf[5],((C_word*)t0)[2]);}}

/* k9764 in k9761 in k9758 in odds in k7274 in k7271 in k6978 in k6975 in k6971 in k6680 in k6677 in k6674 in k6671 */
static void C_ccall f_9766(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[6],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_9766,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_9776,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],tmp=(C_word)a,a+=6,tmp);
C_trace("ChickenBridge.scm: 377  tb:ranf");
f_8362(t2,lf[165]);}

/* k9774 in k9764 in k9761 in k9758 in odds in k7274 in k7271 in k6978 in k6975 in k6971 in k6680 in k6677 in k6674 in k6671 */
static void C_ccall f_9776(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word *a;
t2=(C_word)C_i_lessp(t1,((C_word*)t0)[5]);
t3=((C_word*)t0)[4];
((C_proc2)(void*)(*((C_word*)t3+1)))(2,t3,(C_truep(t2)?((C_word*)((C_word*)t0)[3])[1]:((C_word*)((C_word*)t0)[2])[1]));}

/* pick in k7274 in k7271 in k6978 in k6975 in k6971 in k6680 in k6677 in k6674 in k6671 */
static void C_ccall f_9713(C_word c,C_word t0,C_word t1,...){
C_word tmp;
C_word t2;
va_list v;
C_word *a,c2=c;
C_save_rest(t1,c2,2);
C_check_for_interrupt;
if(!C_demand(c*C_SIZEOF_PAIR+8)){
C_save_and_reclaim((void*)tr2r,(void*)f_9713r,2,t0,t1);}
else{
a=C_alloc((c-2)*3);
t2=C_restore_rest(a,C_rest_count(0));
f_9713r(t0,t1,t2);}}

static void C_ccall f_9713r(C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word *a=C_alloc(8);
t3=(C_word)C_i_cdr(t2);
if(C_truep((C_word)C_i_nullp(t3))){
t4=(C_word)C_i_car(t2);
t5=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_9731,a[2]=t4,a[3]=t1,tmp=(C_word)a,a+=4,tmp);
t6=(C_word)C_i_car(t2);
t7=(C_word)C_i_length(t6);
C_trace("ChickenBridge.scm: 377  tb:rani");
f_8355(t5,t7);}
else{
t4=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_9746,a[2]=t2,a[3]=t1,tmp=(C_word)a,a+=4,tmp);
t5=(C_word)C_i_length(t2);
C_trace("ChickenBridge.scm: 377  tb:rani");
f_8355(t4,t5);}}

/* k9744 in pick in k7274 in k7271 in k6978 in k6975 in k6971 in k6680 in k6677 in k6674 in k6671 */
static void C_ccall f_9746(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
t2=((C_word*)t0)[3];
((C_proc2)(void*)(*((C_word*)t2+1)))(2,t2,(C_word)C_i_list_ref(((C_word*)t0)[2],t1));}

/* k9729 in pick in k7274 in k7271 in k6978 in k6975 in k6971 in k6680 in k6677 in k6674 in k6671 */
static void C_ccall f_9731(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
t2=((C_word*)t0)[3];
((C_proc2)(void*)(*((C_word*)t2+1)))(2,t2,(C_word)C_i_list_ref(((C_word*)t0)[2],t1));}

/* between in k7274 in k7271 in k6978 in k6975 in k6971 in k6680 in k6677 in k6674 in k6671 */
static void C_ccall f_9692(C_word c,C_word t0,C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word t14;
C_word t15;
C_word t16;
C_word t17;
C_word ab[6],*a=ab;
if(c!=4) C_bad_argc_2(c,4,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr4,(void*)f_9692,4,t0,t1,t2,t3);}
t4=(C_word)C_fixnump(t2);
t5=(C_truep(t4)?(C_word)C_fixnump(t3):C_SCHEME_FALSE);
if(C_truep(t5)){
t6=t1;
t7=t2;
t8=t3;
t9=(C_word)C_i_foreign_fixnum_argumentp(t7);
t10=(C_word)C_i_foreign_fixnum_argumentp(t8);
t11=t6;
((C_proc2)(void*)(*((C_word*)t11+1)))(2,t11,(C_word)stub366(C_SCHEME_UNDEFINED,t9,t10));}
else{
t6=t1;
t7=t2;
t8=t3;
t9=(C_word)C_a_i_bytevector(&a,1,C_fix(4));
t10=(C_word)C_i_foreign_flonum_argumentp(t7);
t11=(C_word)C_i_foreign_flonum_argumentp(t8);
t12=t6;
((C_proc2)(void*)(*((C_word*)t12+1)))(2,t12,(C_word)stub372(t9,t10,t11));}}

/* ran in k7274 in k7271 in k6978 in k6975 in k6971 in k6680 in k6677 in k6674 in k6671 */
static void C_ccall f_9657(C_word c,C_word t0,C_word t1,...){
C_word tmp;
C_word t2;
va_list v;
C_word *a,c2=c;
C_save_rest(t1,c2,2);
C_check_for_interrupt;
if(!C_demand(c*C_SIZEOF_PAIR+6)){
C_save_and_reclaim((void*)tr2r,(void*)f_9657r,2,t0,t1);}
else{
a=C_alloc((c-2)*3);
t2=C_restore_rest(a,C_rest_count(0));
f_9657r(t0,t1,t2);}}

static void C_ccall f_9657r(C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word *a=C_alloc(6);
t3=(*a=C_VECTOR_TYPE|1,a[1]=t2,tmp=(C_word)a,a+=2,tmp);
t4=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_9661,a[2]=t1,a[3]=t3,tmp=(C_word)a,a+=4,tmp);
if(C_truep((C_word)C_i_nullp(((C_word*)t3)[1]))){
t5=C_set_block_item(t3,0,C_fix(1));
t6=t4;
f_9661(t6,t5);}
else{
t5=(C_word)C_i_car(((C_word*)t3)[1]);
t6=C_set_block_item(t3,0,t5);
t7=t4;
f_9661(t7,t6);}}

/* k9659 in ran in k7274 in k7271 in k6978 in k6975 in k6971 in k6680 in k6677 in k6674 in k6671 */
static void C_fcall f_9661(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
if(C_truep((C_word)C_i_greaterp(((C_word*)((C_word*)t0)[3])[1],C_fix(1)))){
if(C_truep((C_word)C_fixnump(((C_word*)((C_word*)t0)[3])[1]))){
C_trace("ChickenBridge.scm: 377  tb:rani");
f_8355(((C_word*)t0)[2],((C_word*)((C_word*)t0)[3])[1]);}
else{
C_trace("ChickenBridge.scm: 377  tb:ranf");
f_8362(((C_word*)t0)[2],((C_word*)((C_word*)t0)[3])[1]);}}
else{
C_trace("ChickenBridge.scm: 377  tb:ranf");
f_8362(((C_word*)t0)[2],((C_word*)((C_word*)t0)[3])[1]);}}

/* scale in k7274 in k7271 in k6978 in k6975 in k6971 in k6680 in k6677 in k6674 in k6671 */
static void C_ccall f_9549(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,...){
C_word tmp;
C_word t4;
va_list v;
C_word *a,c2=c;
C_save_rest(t3,c2,4);
if(c<4) C_bad_min_argc_2(c,4,t0);
C_check_for_interrupt;
if(!C_demand(c*C_SIZEOF_PAIR+19)){
C_save_and_reclaim((void*)tr4r,(void*)f_9549r,4,t0,t1,t2,t3);}
else{
a=C_alloc((c-4)*3);
t4=C_restore_rest(a,C_rest_count(0));
f_9549r(t0,t1,t2,t3,t4);}}

static void C_ccall f_9549r(C_word t0,C_word t1,C_word t2,C_word t3,C_word t4){
C_word tmp;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word t14;
C_word t15;
C_word t16;
C_word t17;
C_word *a=C_alloc(19);
t5=(*a=C_VECTOR_TYPE|1,a[1]=t4,tmp=(C_word)a,a+=2,tmp);
t6=(C_word)C_a_i_list(&a,1,C_SCHEME_TRUE);
t7=C_SCHEME_FALSE;
t8=(*a=C_VECTOR_TYPE|1,a[1]=t7,tmp=(C_word)a,a+=2,tmp);
t9=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_9556,a[2]=t1,a[3]=t6,a[4]=t3,a[5]=t8,a[6]=t2,a[7]=t5,tmp=(C_word)a,a+=8,tmp);
t10=(C_word)C_i_car(((C_word*)t5)[1]);
if(C_truep((C_word)C_i_pairp(t10))){
t11=(C_word)C_i_cdr(((C_word*)t5)[1]);
if(C_truep((C_word)C_i_nullp(t11))){
t12=(C_word)C_i_car(((C_word*)t5)[1]);
t13=C_set_block_item(t5,0,t12);
t14=t9;
f_9556(t14,t13);}
else{
t12=(C_word)C_i_cadr(((C_word*)t5)[1]);
t13=C_set_block_item(t8,0,t12);
t14=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_9636,a[2]=t9,a[3]=t5,tmp=(C_word)a,a+=4,tmp);
if(C_truep((C_word)C_i_nequalp(((C_word*)t8)[1],t3))){
C_trace("ChickenBridge.scm: 377  error");
t15=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t15))(4,t15,t14,lf[160],((C_word*)t8)[1]);}
else{
t15=t14;
f_9636(2,t15,C_SCHEME_UNDEFINED);}}}
else{
t11=t9;
f_9556(t11,C_SCHEME_UNDEFINED);}}

/* k9634 in scale in k7274 in k7271 in k6978 in k6975 in k6971 in k6680 in k6677 in k6674 in k6671 */
static void C_ccall f_9636(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word *a;
t2=(C_word)C_i_car(((C_word*)((C_word*)t0)[3])[1]);
t3=C_mutate(((C_word *)((C_word*)t0)[3])+1,t2);
t4=((C_word*)t0)[2];
f_9556(t4,t3);}

/* k9554 in scale in k7274 in k7271 in k6978 in k6975 in k6971 in k6680 in k6677 in k6674 in k6671 */
static void C_fcall f_9556(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[11],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_9556,NULL,2,t0,t1);}
t2=(C_word)C_i_length(((C_word*)((C_word*)t0)[7])[1]);
t3=C_SCHEME_UNDEFINED;
t4=(*a=C_VECTOR_TYPE|1,a[1]=t3,tmp=(C_word)a,a+=2,tmp);
t5=C_set_block_item(t4,0,(*a=C_CLOSURE_TYPE|8,a[1]=(C_word)f_9565,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=t4,a[6]=((C_word*)t0)[7],a[7]=((C_word*)t0)[6],a[8]=((C_word)li104),tmp=(C_word)a,a+=9,tmp));
t6=((C_word*)t4)[1];
f_9565(t6,((C_word*)t0)[2],C_fix(0),((C_word*)t0)[4],t2,((C_word*)t0)[3]);}

/* do586 in k9554 in scale in k7274 in k7271 in k6978 in k6975 in k6971 in k6680 in k6677 in k6674 in k6671 */
static void C_fcall f_9565(C_word t0,C_word t1,C_word t2,C_word t3,C_word t4,C_word t5){
C_word tmp;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word ab[17],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_9565,NULL,6,t0,t1,t2,t3,t4,t5);}
t6=(*a=C_VECTOR_TYPE|1,a[1]=t3,tmp=(C_word)a,a+=2,tmp);
t7=(*a=C_VECTOR_TYPE|1,a[1]=t5,tmp=(C_word)a,a+=2,tmp);
if(C_truep((C_word)C_i_lessp(t2,((C_word*)t0)[7]))){
t8=(*a=C_CLOSURE_TYPE|8,a[1]=(C_word)f_9578,a[2]=t4,a[3]=t1,a[4]=((C_word*)t0)[5],a[5]=t2,a[6]=((C_word*)t0)[6],a[7]=t7,a[8]=t6,tmp=(C_word)a,a+=9,tmp);
if(C_truep(((C_word*)((C_word*)t0)[4])[1])){
t9=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_9612,a[2]=t8,a[3]=t6,tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 377  fit");
t10=C_retrieve(lf[155]);
((C_proc6)C_retrieve_proc(t10))(6,t10,t9,((C_word*)t6)[1],((C_word*)t0)[3],((C_word*)((C_word*)t0)[4])[1],C_fix(1));}
else{
t9=t8;
f_9578(t9,C_SCHEME_UNDEFINED);}}
else{
t8=t1;
((C_proc2)(void*)(*((C_word*)t8+1)))(2,t8,(C_word)C_i_cdr(((C_word*)t0)[2]));}}

/* k9610 in do586 in k9554 in scale in k7274 in k7271 in k6978 in k6975 in k6971 in k6680 in k6677 in k6674 in k6671 */
static void C_ccall f_9612(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[3])+1,t1);
t3=((C_word*)t0)[2];
f_9578(t3,t2);}

/* k9576 in do586 in k9554 in scale in k7274 in k7271 in k6978 in k6975 in k6971 in k6680 in k6677 in k6674 in k6671 */
static void C_fcall f_9578(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word ab[12],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_9578,NULL,2,t0,t1);}
t2=(C_word)C_a_i_list(&a,1,((C_word*)((C_word*)t0)[8])[1]);
t3=(C_word)C_i_set_cdr(((C_word*)((C_word*)t0)[7])[1],t2);
t4=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[7])[1]);
t5=C_mutate(((C_word *)((C_word*)t0)[7])+1,t4);
t6=(*a=C_CLOSURE_TYPE|8,a[1]=(C_word)f_9604,a[2]=((C_word*)t0)[7],a[3]=((C_word*)t0)[2],a[4]=((C_word*)t0)[3],a[5]=((C_word*)t0)[4],a[6]=((C_word*)t0)[5],a[7]=((C_word*)t0)[8],a[8]=((C_word*)t0)[6],tmp=(C_word)a,a+=9,tmp);
C_trace("ChickenBridge.scm: 377  modulo");
t7=*((C_word*)lf[159]+1);
((C_proc4)C_retrieve_proc(t7))(4,t7,t6,((C_word*)t0)[5],((C_word*)t0)[2]);}

/* k9602 in k9576 in do586 in k9554 in scale in k7274 in k7271 in k6978 in k6975 in k6971 in k6680 in k6677 in k6674 in k6671 */
static void C_ccall f_9604(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[8],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_9604,2,t0,t1);}
t2=(C_word)C_i_list_ref(((C_word*)((C_word*)t0)[8])[1],t1);
t3=(C_word)C_a_i_plus(&a,2,((C_word*)((C_word*)t0)[7])[1],t2);
t4=C_mutate(((C_word *)((C_word*)t0)[7])+1,t3);
t5=(C_word)C_a_i_plus(&a,2,((C_word*)t0)[6],C_fix(1));
t6=((C_word*)((C_word*)t0)[5])[1];
f_9565(t6,((C_word*)t0)[4],t5,((C_word*)((C_word*)t0)[7])[1],((C_word*)t0)[3],((C_word*)((C_word*)t0)[2])[1]);}

/* fit in k7274 in k7271 in k6978 in k6975 in k6971 in k6680 in k6677 in k6674 in k6671 */
static void C_ccall f_9416(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4,...){
C_word tmp;
C_word t5;
va_list v;
C_word *a,c2=c;
C_save_rest(t4,c2,5);
if(c<5) C_bad_min_argc_2(c,5,t0);
C_check_for_interrupt;
if(!C_demand(c*C_SIZEOF_PAIR+13)){
C_save_and_reclaim((void*)tr5r,(void*)f_9416r,5,t0,t1,t2,t3,t4);}
else{
a=C_alloc((c-5)*3);
t5=C_restore_rest(a,C_rest_count(0));
f_9416r(t0,t1,t2,t3,t4,t5);}}

static void C_ccall f_9416r(C_word t0,C_word t1,C_word t2,C_word t3,C_word t4,C_word t5){
C_word tmp;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word *a=C_alloc(13);
t6=(*a=C_VECTOR_TYPE|1,a[1]=t3,tmp=(C_word)a,a+=2,tmp);
t7=(*a=C_VECTOR_TYPE|1,a[1]=t4,tmp=(C_word)a,a+=2,tmp);
t8=(*a=C_VECTOR_TYPE|1,a[1]=t5,tmp=(C_word)a,a+=2,tmp);
t9=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_9420,a[2]=t1,a[3]=t8,a[4]=t7,a[5]=t6,a[6]=t2,tmp=(C_word)a,a+=7,tmp);
if(C_truep((C_word)C_i_nullp(((C_word*)t8)[1]))){
t10=C_set_block_item(t8,0,C_fix(1));
t11=t9;
f_9420(t11,t10);}
else{
t10=(C_word)C_i_car(((C_word*)t8)[1]);
t11=C_set_block_item(t8,0,t10);
t12=t9;
f_9420(t12,t11);}}

/* k9418 in fit in k7274 in k7271 in k6978 in k6975 in k6971 in k6680 in k6677 in k6674 in k6671 */
static void C_fcall f_9420(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_9420,NULL,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_9423,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],tmp=(C_word)a,a+=7,tmp);
if(C_truep((C_word)C_i_greaterp(((C_word*)((C_word*)t0)[5])[1],((C_word*)((C_word*)t0)[4])[1]))){
t3=((C_word*)((C_word*)t0)[5])[1];
t4=C_mutate(((C_word *)((C_word*)t0)[5])+1,((C_word*)((C_word*)t0)[4])[1]);
t5=C_mutate(((C_word *)((C_word*)t0)[4])+1,t3);
t6=t2;
f_9423(t6,t5);}
else{
t3=t2;
f_9423(t3,C_SCHEME_UNDEFINED);}}

/* k9421 in k9418 in fit in k7274 in k7271 in k6978 in k6975 in k6971 in k6680 in k6677 in k6674 in k6671 */
static void C_fcall f_9423(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[10],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_9423,NULL,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_9425,a[2]=((C_word)li101),tmp=(C_word)a,a+=3,tmp);
if(C_truep((C_word)C_i_pairp(((C_word*)t0)[6]))){
t3=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_9527,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=t2,a[6]=((C_word)li102),tmp=(C_word)a,a+=7,tmp);
C_trace("map");
t4=*((C_word*)lf[17]+1);
((C_proc4)(void*)(*((C_word*)t4+1)))(4,t4,((C_word*)t0)[2],t3,((C_word*)t0)[6]);}
else{
C_trace("ChickenBridge.scm: 377  fit1");
f_9425(((C_word*)t0)[2],((C_word*)t0)[6],((C_word*)((C_word*)t0)[5])[1],((C_word*)((C_word*)t0)[4])[1],((C_word*)((C_word*)t0)[3])[1]);}}

/* a9526 in k9421 in k9418 in fit in k7274 in k7271 in k6978 in k6975 in k6971 in k6680 in k6677 in k6674 in k6671 */
static void C_ccall f_9527(C_word c,C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word *a;
if(c!=3) C_bad_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr3,(void*)f_9527,3,t0,t1,t2);}
C_trace("ChickenBridge.scm: 377  fit1");
f_9425(t1,t2,((C_word*)((C_word*)t0)[4])[1],((C_word*)((C_word*)t0)[3])[1],((C_word*)((C_word*)t0)[2])[1]);}

/* fit1 in k9421 in k9418 in fit in k7274 in k7271 in k6978 in k6975 in k6971 in k6680 in k6677 in k6674 in k6671 */
static void C_fcall f_9425(C_word t1,C_word t2,C_word t3,C_word t4,C_word t5){
C_word tmp;
C_word t6;
C_word t7;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_9425,NULL,5,t1,t2,t3,t4,t5);}
t6=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_9432,a[2]=t5,a[3]=t3,a[4]=t4,a[5]=t2,a[6]=t1,tmp=(C_word)a,a+=7,tmp);
C_trace("ChickenBridge.scm: 377  <=");
C_less_or_equal_p(5,0,t6,t3,t2,t4);}

/* k9430 in fit1 in k9421 in k9418 in fit in k7274 in k7271 in k6978 in k6975 in k6971 in k6680 in k6677 in k6674 in k6671 */
static void C_ccall f_9432(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word ab[26],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_9432,2,t0,t1);}
if(C_truep(t1)){
t2=((C_word*)t0)[6];
((C_proc2)(void*)(*((C_word*)t2+1)))(2,t2,((C_word*)t0)[5]);}
else{
t2=(C_word)C_i_greaterp(((C_word*)t0)[5],((C_word*)t0)[4]);
t3=(C_truep(t2)?((C_word*)t0)[4]:((C_word*)t0)[3]);
t4=(C_word)C_a_i_minus(&a,2,((C_word*)t0)[4],((C_word*)t0)[3]);
switch(((C_word*)t0)[2]){
case C_fix(1):
t5=(C_word)C_i_nequalp(t3,((C_word*)t0)[4]);
t6=(C_truep(t5)?((C_word*)t0)[3]:((C_word*)t0)[4]);
t7=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_9455,a[2]=t6,a[3]=((C_word*)t0)[6],tmp=(C_word)a,a+=4,tmp);
t8=(C_word)C_a_i_minus(&a,2,((C_word*)t0)[5],t3);
C_trace("ChickenBridge.scm: 377  remainder");
t9=*((C_word*)lf[156]+1);
((C_proc4)C_retrieve_proc(t9))(4,t9,t7,t8,t4);
case C_fix(2):
t5=(C_word)C_a_i_times(&a,2,C_fix(2),t4);
t6=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_9474,a[2]=t5,a[3]=t4,a[4]=t3,a[5]=((C_word*)t0)[6],tmp=(C_word)a,a+=6,tmp);
t7=(C_word)C_a_i_minus(&a,2,((C_word*)t0)[5],t3);
C_trace("ChickenBridge.scm: 377  remainder");
t8=*((C_word*)lf[156]+1);
((C_proc4)C_retrieve_proc(t8))(4,t8,t6,t7,t5);
case C_fix(3):
t5=((C_word*)t0)[6];
((C_proc2)(void*)(*((C_word*)t5+1)))(2,t5,t3);
default:
C_trace("ChickenBridge.scm: 377  error");
t5=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t5))(4,t5,((C_word*)t0)[6],lf[157],((C_word*)t0)[2]);}}}

/* k9472 in k9430 in fit1 in k9421 in k9418 in fit in k7274 in k7271 in k6978 in k6975 in k6971 in k6680 in k6677 in k6674 in k6671 */
static void C_ccall f_9474(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[8],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_9474,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_9481,a[2]=((C_word*)t0)[4],a[3]=((C_word*)t0)[5],tmp=(C_word)a,a+=4,tmp);
t3=(C_word)C_a_i_abs(&a,1,t1);
if(C_truep((C_word)C_i_greaterp(t3,((C_word*)t0)[3]))){
t4=(C_word)C_i_greater_or_equalp(t1,C_fix(0));
t5=(C_truep(t4)?*((C_word*)lf[131]+1):*((C_word*)lf[127]+1));
t6=t5;
((C_proc4)C_retrieve_proc(t6))(4,t6,t2,t1,((C_word*)t0)[2]);}
else{
C_trace("ChickenBridge.scm: 377  -");
C_minus(3,0,t2,t1);}}

/* k9479 in k9472 in k9430 in fit1 in k9421 in k9418 in fit in k7274 in k7271 in k6978 in k6975 in k6971 in k6680 in k6677 in k6674 in k6671 */
static void C_ccall f_9481(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word ab[4],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_9481,2,t0,t1);}
t2=((C_word*)t0)[3];
((C_proc2)(void*)(*((C_word*)t2+1)))(2,t2,(C_word)C_a_i_plus(&a,2,t1,((C_word*)t0)[2]));}

/* k9453 in k9430 in fit1 in k9421 in k9418 in fit in k7274 in k7271 in k6978 in k6975 in k6971 in k6680 in k6677 in k6674 in k6671 */
static void C_ccall f_9455(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word ab[4],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_9455,2,t0,t1);}
t2=((C_word*)t0)[3];
((C_proc2)(void*)(*((C_word*)t2+1)))(2,t2,(C_word)C_a_i_plus(&a,2,((C_word*)t0)[2],t1));}

/* tendency in k7274 in k7271 in k6978 in k6975 in k6971 in k6680 in k6677 in k6674 in k6671 */
static void C_ccall f_9349(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4,...){
C_word tmp;
C_word t5;
va_list v;
C_word *a,c2=c;
C_save_rest(t4,c2,5);
if(c<5) C_bad_min_argc_2(c,5,t0);
C_check_for_interrupt;
if(!C_demand(c*C_SIZEOF_PAIR+16)){
C_save_and_reclaim((void*)tr5r,(void*)f_9349r,5,t0,t1,t2,t3,t4);}
else{
a=C_alloc((c-5)*3);
t5=C_restore_rest(a,C_rest_count(0));
f_9349r(t0,t1,t2,t3,t4,t5);}}

static void C_ccall f_9349r(C_word t0,C_word t1,C_word t2,C_word t3,C_word t4,C_word t5){
C_word tmp;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word t14;
C_word t15;
C_word t16;
C_word *a=C_alloc(16);
t6=(*a=C_VECTOR_TYPE|1,a[1]=t3,tmp=(C_word)a,a+=2,tmp);
t7=(*a=C_VECTOR_TYPE|1,a[1]=t4,tmp=(C_word)a,a+=2,tmp);
t8=(*a=C_VECTOR_TYPE|1,a[1]=t5,tmp=(C_word)a,a+=2,tmp);
t9=C_retrieve(lf[154]);
t10=(*a=C_VECTOR_TYPE|1,a[1]=t9,tmp=(C_word)a,a+=2,tmp);
t11=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_9353,a[2]=t2,a[3]=t8,a[4]=t10,a[5]=t1,a[6]=t7,a[7]=t6,tmp=(C_word)a,a+=8,tmp);
if(C_truep((C_word)C_i_nullp(((C_word*)t8)[1]))){
t12=t11;
f_9353(t12,C_SCHEME_UNDEFINED);}
else{
t12=(C_word)C_i_car(((C_word*)t8)[1]);
t13=C_set_block_item(t10,0,t12);
t14=(C_word)C_i_cdr(((C_word*)t8)[1]);
t15=C_set_block_item(t8,0,t14);
t16=t11;
f_9353(t16,t15);}}

/* k9351 in tendency in k7274 in k7271 in k6978 in k6975 in k6971 in k6680 in k6677 in k6674 in k6671 */
static void C_fcall f_9353(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[12],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_9353,NULL,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_9356,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],a[7]=((C_word*)t0)[7],tmp=(C_word)a,a+=8,tmp);
if(C_truep((C_word)C_i_pairp(((C_word*)((C_word*)t0)[7])[1]))){
t3=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_9399,a[2]=t2,a[3]=((C_word*)t0)[7],tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 377  interp1");
f_9217(t3,((C_word*)t0)[2],((C_word*)((C_word*)t0)[7])[1],C_fix(1));}
else{
t3=t2;
f_9356(t3,C_SCHEME_UNDEFINED);}}

/* k9397 in k9351 in tendency in k7274 in k7271 in k6978 in k6975 in k6971 in k6680 in k6677 in k6674 in k6671 */
static void C_ccall f_9399(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[3])+1,t1);
t3=((C_word*)t0)[2];
f_9356(t3,t2);}

/* k9354 in k9351 in tendency in k7274 in k7271 in k6978 in k6975 in k6971 in k6680 in k6677 in k6674 in k6671 */
static void C_fcall f_9356(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[11],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_9356,NULL,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_9359,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
if(C_truep((C_word)C_i_pairp(((C_word*)((C_word*)t0)[6])[1]))){
t3=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_9392,a[2]=t2,a[3]=((C_word*)t0)[6],tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 377  interp1");
f_9217(t3,((C_word*)t0)[2],((C_word*)((C_word*)t0)[6])[1],C_fix(1));}
else{
t3=t2;
f_9359(t3,C_SCHEME_UNDEFINED);}}

/* k9390 in k9354 in k9351 in tendency in k7274 in k7271 in k6978 in k6975 in k6971 in k6680 in k6677 in k6674 in k6671 */
static void C_ccall f_9392(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[3])+1,t1);
t3=((C_word*)t0)[2];
f_9359(t3,t2);}

/* k9357 in k9354 in k9351 in tendency in k7274 in k7271 in k6978 in k6975 in k6971 in k6680 in k6677 in k6674 in k6671 */
static void C_fcall f_9359(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[12],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_9359,NULL,2,t0,t1);}
if(C_truep((C_word)C_i_nequalp(((C_word*)((C_word*)t0)[6])[1],((C_word*)((C_word*)t0)[5])[1]))){
t2=((C_word*)t0)[4];
((C_proc2)(void*)(*((C_word*)t2+1)))(2,t2,((C_word*)((C_word*)t0)[6])[1]);}
else{
t2=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_9372,a[2]=((C_word*)t0)[6],a[3]=((C_word*)t0)[4],tmp=(C_word)a,a+=4,tmp);
t3=(C_word)C_i_greaterp(((C_word*)((C_word*)t0)[6])[1],((C_word*)((C_word*)t0)[5])[1]);
t4=(C_truep(t3)?(C_word)C_a_i_minus(&a,2,((C_word*)((C_word*)t0)[6])[1],((C_word*)((C_word*)t0)[5])[1]):(C_word)C_a_i_minus(&a,2,((C_word*)((C_word*)t0)[5])[1],((C_word*)((C_word*)t0)[6])[1]));
C_apply(5,0,t2,((C_word*)((C_word*)t0)[3])[1],t4,((C_word*)((C_word*)t0)[2])[1]);}}

/* k9370 in k9357 in k9354 in k9351 in tendency in k7274 in k7271 in k6978 in k6975 in k6971 in k6680 in k6677 in k6674 in k6671 */
static void C_ccall f_9372(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word ab[4],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_9372,2,t0,t1);}
t2=((C_word*)t0)[3];
((C_proc2)(void*)(*((C_word*)t2+1)))(2,t2,(C_word)C_a_i_plus(&a,2,((C_word*)((C_word*)t0)[2])[1],t1));}

/* interp in k7274 in k7271 in k6978 in k6975 in k6971 in k6680 in k6677 in k6674 in k6671 */
static void C_ccall f_9303(C_word c,C_word t0,C_word t1,C_word t2,...){
C_word tmp;
C_word t3;
va_list v;
C_word *a,c2=c;
C_save_rest(t2,c2,3);
if(c<3) C_bad_min_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_demand(c*C_SIZEOF_PAIR+5)){
C_save_and_reclaim((void*)tr3r,(void*)f_9303r,3,t0,t1,t2);}
else{
a=C_alloc((c-3)*3);
t3=C_restore_rest(a,C_rest_count(0));
f_9303r(t0,t1,t2,t3);}}

static void C_ccall f_9303r(C_word t0,C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word *a=C_alloc(5);
t4=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_9307,a[2]=t2,a[3]=t1,a[4]=t3,tmp=(C_word)a,a+=5,tmp);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("ChickenBridge.scm: 377  error");
t5=*((C_word*)lf[4]+1);
((C_proc3)C_retrieve_proc(t5))(3,t5,t4,lf[152]);}
else{
t5=t4;
f_9307(2,t5,C_SCHEME_UNDEFINED);}}

/* k9305 in interp in k7274 in k7271 in k6978 in k6975 in k6971 in k6680 in k6677 in k6674 in k6671 */
static void C_ccall f_9307(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=(C_word)C_i_car(((C_word*)t0)[4]);
if(C_truep((C_word)C_i_pairp(t2))){
t3=(C_word)C_i_car(((C_word*)t0)[4]);
t4=(C_word)C_i_cdr(((C_word*)t0)[4]);
t5=(C_word)C_i_nullp(t4);
t6=(C_truep(t5)?C_fix(1):(C_word)C_i_cadr(((C_word*)t0)[4]));
C_trace("ChickenBridge.scm: 377  interp1");
f_9217(((C_word*)t0)[3],((C_word*)t0)[2],t3,t6);}
else{
C_trace("ChickenBridge.scm: 377  interp1");
f_9217(((C_word*)t0)[3],((C_word*)t0)[2],((C_word*)t0)[4],C_fix(1));}}

/* interp1 in k7274 in k7271 in k6978 in k6975 in k6971 in k6680 in k6677 in k6674 in k6671 */
static void C_fcall f_9217(C_word t1,C_word t2,C_word t3,C_word t4){
C_word tmp;
C_word t5;
C_word t6;
C_word ab[6],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_9217,NULL,4,t1,t2,t3,t4);}
t5=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_9221,a[2]=t1,a[3]=t2,a[4]=t3,a[5]=t4,tmp=(C_word)a,a+=6,tmp);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("ChickenBridge.scm: 377  error");
t6=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t6))(4,t6,t5,lf[150],t3);}
else{
t6=t5;
f_9221(2,t6,(C_word)C_i_car(t3));}}

/* k9219 in interp1 in k7274 in k7271 in k6978 in k6975 in k6971 in k6680 in k6677 in k6674 in k6671 */
static void C_ccall f_9221(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_9221,2,t0,t1);}
t2=t1;
t3=(*a=C_VECTOR_TYPE|1,a[1]=t2,tmp=(C_word)a,a+=2,tmp);
t4=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_9224,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=t3,tmp=(C_word)a,a+=7,tmp);
t5=(C_word)C_i_cdr(((C_word*)t0)[4]);
if(C_truep((C_word)C_i_nullp(t5))){
C_trace("ChickenBridge.scm: 377  err");
t6=C_retrieve(lf[148]);
((C_proc4)C_retrieve_proc(t6))(4,t6,t4,lf[149],((C_word*)t0)[4]);}
else{
t6=t4;
f_9224(2,t6,(C_word)C_i_cadr(((C_word*)t0)[4]));}}

/* k9222 in k9219 in interp1 in k7274 in k7271 in k6978 in k6975 in k6971 in k6680 in k6677 in k6674 in k6671 */
static void C_ccall f_9224(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word ab[19],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_9224,2,t0,t1);}
t2=t1;
t3=(*a=C_VECTOR_TYPE|1,a[1]=t2,tmp=(C_word)a,a+=2,tmp);
t4=((C_word*)((C_word*)t0)[6])[1];
t5=(*a=C_VECTOR_TYPE|1,a[1]=t4,tmp=(C_word)a,a+=2,tmp);
t6=((C_word*)t3)[1];
t7=(*a=C_VECTOR_TYPE|1,a[1]=t6,tmp=(C_word)a,a+=2,tmp);
t8=((C_word*)t0)[5];
t9=(C_word)C_i_cddr(((C_word*)t0)[4]);
t10=C_SCHEME_UNDEFINED;
t11=(*a=C_VECTOR_TYPE|1,a[1]=t10,tmp=(C_word)a,a+=2,tmp);
t12=C_set_block_item(t11,0,(*a=C_CLOSURE_TYPE|10,a[1]=(C_word)f_9233,a[2]=((C_word*)t0)[4],a[3]=t11,a[4]=t8,a[5]=t7,a[6]=t3,a[7]=((C_word*)t0)[6],a[8]=((C_word*)t0)[3],a[9]=t5,a[10]=((C_word)li97),tmp=(C_word)a,a+=11,tmp));
t13=((C_word*)t11)[1];
f_9233(t13,((C_word*)t0)[2],t9);}

/* do537 in k9222 in k9219 in interp1 in k7274 in k7271 in k6978 in k6975 in k6971 in k6680 in k6677 in k6674 in k6671 */
static void C_fcall f_9233(C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word ab[5],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_9233,NULL,3,t0,t1,t2);}
t3=(C_word)C_i_nullp(t2);
t4=(C_truep(t3)?t3:(C_word)C_i_greaterp(((C_word*)((C_word*)t0)[9])[1],((C_word*)t0)[8]));
if(C_truep(t4)){
C_trace("ChickenBridge.scm: 377  tb:rescale");
f_8192(t1,((C_word*)t0)[8],((C_word*)((C_word*)t0)[7])[1],((C_word*)((C_word*)t0)[9])[1],((C_word*)((C_word*)t0)[6])[1],((C_word*)((C_word*)t0)[5])[1],((C_word*)t0)[4]);}
else{
t5=C_mutate(((C_word *)((C_word*)t0)[7])+1,((C_word*)((C_word*)t0)[9])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[6])+1,((C_word*)((C_word*)t0)[5])[1]);
t7=(C_word)C_i_car(t2);
t8=C_mutate(((C_word *)((C_word*)t0)[9])+1,t7);
t9=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_9255,a[2]=t1,a[3]=((C_word*)t0)[3],a[4]=t2,tmp=(C_word)a,a+=5,tmp);
t10=(C_word)C_i_cdr(t2);
if(C_truep((C_word)C_i_nullp(t10))){
C_trace("ChickenBridge.scm: 377  error");
t11=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t11))(4,t11,t9,lf[147],((C_word*)t0)[2]);}
else{
t11=(C_word)C_i_cadr(t2);
t12=C_mutate(((C_word *)((C_word*)t0)[5])+1,t11);
t13=t9;
f_9255(2,t13,t12);}}}

/* k9253 in do537 in k9222 in k9219 in interp1 in k7274 in k7271 in k6978 in k6975 in k6971 in k6680 in k6677 in k6674 in k6671 */
static void C_ccall f_9255(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word *a;
t2=(C_word)C_i_cddr(((C_word*)t0)[4]);
t3=((C_word*)((C_word*)t0)[3])[1];
f_9233(t3,((C_word*)t0)[2],t2);}

/* ratio->cents in k7274 in k7271 in k6978 in k6975 in k6971 in k6680 in k6677 in k6674 in k6671 */
static void C_ccall f_9202(C_word c,C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word *a;
if(c!=3) C_bad_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr3,(void*)f_9202,3,t0,t1,t2);}
if(C_truep((C_word)C_i_listp(t2))){
C_trace("map");
t3=*((C_word*)lf[17]+1);
((C_proc4)(void*)(*((C_word*)t3+1)))(4,t3,t1,C_retrieve2(lf[96],"tb:scaler->cents"),t2);}
else{
C_trace("ChickenBridge.scm: 377  tb:scaler->cents");
t3=C_retrieve2(lf[96],"tb:scaler->cents");
f_8286(3,t3,t1,t2);}}

/* cents->ratio in k7274 in k7271 in k6978 in k6975 in k6971 in k6680 in k6677 in k6674 in k6671 */
static void C_ccall f_9187(C_word c,C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word *a;
if(c!=3) C_bad_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr3,(void*)f_9187,3,t0,t1,t2);}
if(C_truep((C_word)C_i_listp(t2))){
C_trace("map");
t3=*((C_word*)lf[17]+1);
((C_proc4)(void*)(*((C_word*)t3+1)))(4,t3,t1,C_retrieve2(lf[95],"tb:cents->scaler"),t2);}
else{
C_trace("ChickenBridge.scm: 377  tb:cents->scaler");
t3=C_retrieve2(lf[95],"tb:cents->scaler");
f_8279(3,t3,t1,t2);}}

/* rhythm->seconds in k7274 in k7271 in k6978 in k6975 in k6971 in k6680 in k6677 in k6674 in k6671 */
static void C_ccall f_8951(C_word c,C_word t0,C_word t1,C_word t2,...){
C_word tmp;
C_word t3;
va_list v;
C_word *a,c2=c;
C_save_rest(t2,c2,3);
if(c<3) C_bad_min_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_demand(c*C_SIZEOF_PAIR+45)){
C_save_and_reclaim((void*)tr3r,(void*)f_8951r,3,t0,t1,t2);}
else{
a=C_alloc((c-3)*3);
t3=C_restore_rest(a,C_rest_count(0));
f_8951r(t0,t1,t2,t3);}}

static void C_ccall f_8951r(C_word t0,C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word t14;
C_word t15;
C_word t16;
C_word t17;
C_word t18;
C_word t19;
C_word t20;
C_word t21;
C_word t22;
C_word t23;
C_word *a=C_alloc(45);
t4=lf[140];
t5=(*a=C_VECTOR_TYPE|1,a[1]=t4,tmp=(C_word)a,a+=2,tmp);
t6=lf[141];
t7=(*a=C_VECTOR_TYPE|1,a[1]=t6,tmp=(C_word)a,a+=2,tmp);
t8=C_SCHEME_FALSE;
t9=(*a=C_VECTOR_TYPE|1,a[1]=t8,tmp=(C_word)a,a+=2,tmp);
t10=C_SCHEME_FALSE;
t11=(*a=C_VECTOR_TYPE|1,a[1]=t10,tmp=(C_word)a,a+=2,tmp);
t12=t3;
t13=(*a=C_VECTOR_TYPE|1,a[1]=t12,tmp=(C_word)a,a+=2,tmp);
t14=C_SCHEME_FALSE;
t15=(*a=C_VECTOR_TYPE|1,a[1]=t14,tmp=(C_word)a,a+=2,tmp);
t16=(*a=C_CLOSURE_TYPE|10,a[1]=(C_word)f_8955,a[2]=t11,a[3]=t15,a[4]=t9,a[5]=t3,a[6]=t13,a[7]=t1,a[8]=t7,a[9]=t5,a[10]=t2,tmp=(C_word)a,a+=11,tmp);
if(C_truep((C_word)C_i_nullp(((C_word*)t13)[1]))){
t17=t16;
f_8955(t17,C_SCHEME_UNDEFINED);}
else{
t17=(C_word)C_i_car(((C_word*)t13)[1]);
t18=(C_word)C_eqp(t17,lf[142]);
if(C_truep(t18)){
t19=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_9100,a[2]=t3,a[3]=t16,a[4]=t13,a[5]=t15,a[6]=t9,a[7]=t5,tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)t9)[1])){
C_trace("error");
t20=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t20))(4,t20,t19,lf[19],lf[142]);}
else{
t20=t19;
f_9100(2,t20,C_SCHEME_UNDEFINED);}}
else{
t19=(C_word)C_eqp(t17,lf[143]);
if(C_truep(t19)){
t20=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_9135,a[2]=t3,a[3]=t16,a[4]=t13,a[5]=t15,a[6]=t11,a[7]=t7,tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)t11)[1])){
C_trace("error");
t21=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t21))(4,t21,t20,lf[19],lf[143]);}
else{
t21=t20;
f_9135(2,t21,C_SCHEME_UNDEFINED);}}
else{
t20=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_9164,a[2]=t16,a[3]=t9,a[4]=t5,a[5]=t13,tmp=(C_word)a,a+=6,tmp);
if(C_truep(((C_word*)t15)[1])){
C_trace("error");
t21=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t21))(4,t21,t20,lf[10],t3);}
else{
t21=t20;
f_9164(2,t21,C_SCHEME_UNDEFINED);}}}}}

/* k9162 in rhythm->seconds in k7274 in k7271 in k6978 in k6975 in k6971 in k6680 in k6677 in k6674 in k6671 */
static void C_ccall f_9164(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_9164,2,t0,t1);}
t2=(C_word)C_i_car(((C_word*)((C_word*)t0)[5])[1]);
t3=C_mutate(((C_word *)((C_word*)t0)[4])+1,t2);
t4=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_9171,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[5],a[4]=((C_word*)t0)[3],tmp=(C_word)a,a+=5,tmp);
t5=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_9179,a[2]=((C_word*)t0)[4],a[3]=t4,tmp=(C_word)a,a+=4,tmp);
C_trace("keyword?");
t6=C_retrieve(lf[13]);
((C_proc3)C_retrieve_proc(t6))(3,t6,t5,((C_word*)((C_word*)t0)[4])[1]);}

/* k9177 in k9162 in rhythm->seconds in k7274 in k7271 in k6978 in k6975 in k6971 in k6680 in k6677 in k6674 in k6671 */
static void C_ccall f_9179(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
if(C_truep(t1)){
C_trace("error");
t2=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t2))(4,t2,((C_word*)t0)[3],lf[14],((C_word*)((C_word*)t0)[2])[1]);}
else{
t2=((C_word*)t0)[3];
f_9171(2,t2,C_SCHEME_UNDEFINED);}}

/* k9169 in k9162 in rhythm->seconds in k7274 in k7271 in k6978 in k6975 in k6971 in k6680 in k6677 in k6674 in k6671 */
static void C_ccall f_9171(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word *a;
t2=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[3])[1]);
t4=C_mutate(((C_word *)((C_word*)t0)[3])+1,t3);
t5=((C_word*)t0)[2];
f_8955(t5,t4);}

/* k9133 in rhythm->seconds in k7274 in k7271 in k6978 in k6975 in k6971 in k6680 in k6677 in k6674 in k6671 */
static void C_ccall f_9135(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_9135,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_9139,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("error");
t4=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[21],((C_word*)t0)[2]);}
else{
t4=t2;
f_9139(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k9137 in k9133 in rhythm->seconds in k7274 in k7271 in k6978 in k6975 in k6971 in k6680 in k6677 in k6674 in k6671 */
static void C_ccall f_9139(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_8955(t7,t6);}

/* k9098 in rhythm->seconds in k7274 in k7271 in k6978 in k6975 in k6971 in k6680 in k6677 in k6674 in k6671 */
static void C_ccall f_9100(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_9100,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_9104,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("error");
t4=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[21],((C_word*)t0)[2]);}
else{
t4=t2;
f_9104(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k9102 in k9098 in rhythm->seconds in k7274 in k7271 in k6978 in k6975 in k6971 in k6680 in k6677 in k6674 in k6671 */
static void C_ccall f_9104(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_8955(t7,t6);}

/* k8953 in rhythm->seconds in k7274 in k7271 in k6978 in k6975 in k6971 in k6680 in k6677 in k6674 in k6671 */
static void C_fcall f_8955(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word ab[30],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_8955,NULL,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_8958,a[2]=((C_word*)t0)[5],a[3]=((C_word*)t0)[6],a[4]=((C_word*)t0)[7],a[5]=((C_word*)t0)[8],a[6]=((C_word*)t0)[9],a[7]=((C_word*)t0)[10],tmp=(C_word)a,a+=8,tmp);
if(C_truep((C_word)C_i_nullp(((C_word*)((C_word*)t0)[6])[1]))){
t3=t2;
f_8958(t3,C_SCHEME_UNDEFINED);}
else{
t3=(C_word)C_i_car(((C_word*)((C_word*)t0)[6])[1]);
t4=(C_word)C_eqp(t3,lf[142]);
if(C_truep(t4)){
t5=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_9000,a[2]=((C_word*)t0)[5],a[3]=t2,a[4]=((C_word*)t0)[6],a[5]=((C_word*)t0)[3],a[6]=((C_word*)t0)[4],a[7]=((C_word*)t0)[9],tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)((C_word*)t0)[4])[1])){
C_trace("error");
t6=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t6))(4,t6,t5,lf[19],lf[142]);}
else{
t6=t5;
f_9000(2,t6,C_SCHEME_UNDEFINED);}}
else{
t5=(C_word)C_eqp(t3,lf[143]);
if(C_truep(t5)){
t6=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_9035,a[2]=((C_word*)t0)[5],a[3]=t2,a[4]=((C_word*)t0)[6],a[5]=((C_word*)t0)[3],a[6]=((C_word*)t0)[2],a[7]=((C_word*)t0)[8],tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)((C_word*)t0)[2])[1])){
C_trace("error");
t7=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t7))(4,t7,t6,lf[19],lf[143]);}
else{
t7=t6;
f_9035(2,t7,C_SCHEME_UNDEFINED);}}
else{
t6=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_9064,a[2]=t2,a[3]=((C_word*)t0)[2],a[4]=((C_word*)t0)[8],a[5]=((C_word*)t0)[6],tmp=(C_word)a,a+=6,tmp);
if(C_truep(((C_word*)((C_word*)t0)[3])[1])){
C_trace("error");
t7=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t7))(4,t7,t6,lf[10],((C_word*)t0)[5]);}
else{
t7=t6;
f_9064(2,t7,C_SCHEME_UNDEFINED);}}}}}

/* k9062 in k8953 in rhythm->seconds in k7274 in k7271 in k6978 in k6975 in k6971 in k6680 in k6677 in k6674 in k6671 */
static void C_ccall f_9064(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_9064,2,t0,t1);}
t2=(C_word)C_i_car(((C_word*)((C_word*)t0)[5])[1]);
t3=C_mutate(((C_word *)((C_word*)t0)[4])+1,t2);
t4=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_9071,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[5],a[4]=((C_word*)t0)[3],tmp=(C_word)a,a+=5,tmp);
t5=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_9079,a[2]=((C_word*)t0)[4],a[3]=t4,tmp=(C_word)a,a+=4,tmp);
C_trace("keyword?");
t6=C_retrieve(lf[13]);
((C_proc3)C_retrieve_proc(t6))(3,t6,t5,((C_word*)((C_word*)t0)[4])[1]);}

/* k9077 in k9062 in k8953 in rhythm->seconds in k7274 in k7271 in k6978 in k6975 in k6971 in k6680 in k6677 in k6674 in k6671 */
static void C_ccall f_9079(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
if(C_truep(t1)){
C_trace("error");
t2=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t2))(4,t2,((C_word*)t0)[3],lf[14],((C_word*)((C_word*)t0)[2])[1]);}
else{
t2=((C_word*)t0)[3];
f_9071(2,t2,C_SCHEME_UNDEFINED);}}

/* k9069 in k9062 in k8953 in rhythm->seconds in k7274 in k7271 in k6978 in k6975 in k6971 in k6680 in k6677 in k6674 in k6671 */
static void C_ccall f_9071(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word *a;
t2=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[3])[1]);
t4=C_mutate(((C_word *)((C_word*)t0)[3])+1,t3);
t5=((C_word*)t0)[2];
f_8958(t5,t4);}

/* k9033 in k8953 in rhythm->seconds in k7274 in k7271 in k6978 in k6975 in k6971 in k6680 in k6677 in k6674 in k6671 */
static void C_ccall f_9035(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_9035,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_9039,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("error");
t4=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[21],((C_word*)t0)[2]);}
else{
t4=t2;
f_9039(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k9037 in k9033 in k8953 in rhythm->seconds in k7274 in k7271 in k6978 in k6975 in k6971 in k6680 in k6677 in k6674 in k6671 */
static void C_ccall f_9039(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_8958(t7,t6);}

/* k8998 in k8953 in rhythm->seconds in k7274 in k7271 in k6978 in k6975 in k6971 in k6680 in k6677 in k6674 in k6671 */
static void C_ccall f_9000(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_9000,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_9004,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("error");
t4=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[21],((C_word*)t0)[2]);}
else{
t4=t2;
f_9004(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k9002 in k8998 in k8953 in rhythm->seconds in k7274 in k7271 in k6978 in k6975 in k6971 in k6680 in k6677 in k6674 in k6671 */
static void C_ccall f_9004(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_8958(t7,t6);}

/* k8956 in k8953 in rhythm->seconds in k7274 in k7271 in k6978 in k6975 in k6971 in k6680 in k6677 in k6674 in k6671 */
static void C_fcall f_8958(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[6],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_8958,NULL,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_8961,a[2]=((C_word*)t0)[4],a[3]=((C_word*)t0)[5],a[4]=((C_word*)t0)[6],a[5]=((C_word*)t0)[7],tmp=(C_word)a,a+=6,tmp);
if(C_truep((C_word)C_i_nullp(((C_word*)((C_word*)t0)[3])[1]))){
t3=t2;
f_8961(2,t3,C_SCHEME_UNDEFINED);}
else{
C_trace("error");
t3=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t3))(4,t3,t2,lf[5],((C_word*)t0)[2]);}}

/* k8959 in k8956 in k8953 in rhythm->seconds in k7274 in k7271 in k6978 in k6975 in k6971 in k6680 in k6677 in k6674 in k6671 */
static void C_ccall f_8961(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[5],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_8961,2,t0,t1);}
if(C_truep((C_word)C_i_listp(((C_word*)t0)[5]))){
t2=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_8972,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word)li93),tmp=(C_word)a,a+=5,tmp);
C_trace("map");
t3=*((C_word*)lf[17]+1);
((C_proc4)(void*)(*((C_word*)t3+1)))(4,t3,((C_word*)t0)[2],t2,((C_word*)t0)[5]);}
else{
C_trace("ChickenBridge.scm: 377  tb:rhythm->seconds");
f_8264(((C_word*)t0)[2],((C_word*)t0)[5],((C_word*)((C_word*)t0)[4])[1],((C_word*)((C_word*)t0)[3])[1]);}}

/* a8971 in k8959 in k8956 in k8953 in rhythm->seconds in k7274 in k7271 in k6978 in k6975 in k6971 in k6680 in k6677 in k6674 in k6671 */
static void C_ccall f_8972(C_word c,C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word *a;
if(c!=3) C_bad_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr3,(void*)f_8972,3,t0,t1,t2);}
C_trace("ChickenBridge.scm: 377  tb:rhythm->seconds");
f_8264(t1,t2,((C_word*)((C_word*)t0)[3])[1],((C_word*)((C_word*)t0)[2])[1]);}

/* decimals in k7274 in k7271 in k6978 in k6975 in k6971 in k6680 in k6677 in k6674 in k6671 */
static void C_ccall f_8911(C_word c,C_word t0,C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word ab[4],*a=ab;
if(c!=4) C_bad_argc_2(c,4,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr4,(void*)f_8911,4,t0,t1,t2,t3);}
t4=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_8915,a[2]=t1,a[3]=t2,tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 377  expt");
t5=*((C_word*)lf[137]+1);
((C_proc4)C_retrieve_proc(t5))(4,t5,t4,lf[138],t3);}

/* k8913 in decimals in k7274 in k7271 in k6978 in k6975 in k6971 in k6680 in k6677 in k6674 in k6671 */
static void C_ccall f_8915(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[12],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_8915,2,t0,t1);}
if(C_truep((C_word)C_i_listp(((C_word*)t0)[3]))){
t2=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_8926,a[2]=t1,a[3]=((C_word)li91),tmp=(C_word)a,a+=4,tmp);
C_trace("map");
t3=*((C_word*)lf[17]+1);
((C_proc4)(void*)(*((C_word*)t3+1)))(4,t3,((C_word*)t0)[2],t2,((C_word*)t0)[3]);}
else{
t2=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_8945,a[2]=t1,a[3]=((C_word*)t0)[2],tmp=(C_word)a,a+=4,tmp);
t3=(C_word)C_a_i_times(&a,2,((C_word*)t0)[3],t1);
C_trace("ChickenBridge.scm: 377  round");
t4=*((C_word*)lf[136]+1);
((C_proc3)C_retrieve_proc(t4))(3,t4,t2,t3);}}

/* k8943 in k8913 in decimals in k7274 in k7271 in k6978 in k6975 in k6971 in k6680 in k6677 in k6674 in k6671 */
static void C_ccall f_8945(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word ab[4],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_8945,2,t0,t1);}
t2=((C_word*)t0)[3];
((C_proc2)(void*)(*((C_word*)t2+1)))(2,t2,(C_word)C_a_i_divide(&a,2,t1,((C_word*)t0)[2]));}

/* a8925 in k8913 in decimals in k7274 in k7271 in k6978 in k6975 in k6971 in k6680 in k6677 in k6674 in k6671 */
static void C_ccall f_8926(C_word c,C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word t5;
C_word ab[8],*a=ab;
if(c!=3) C_bad_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr3,(void*)f_8926,3,t0,t1,t2);}
t3=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_8934,a[2]=((C_word*)t0)[2],a[3]=t1,tmp=(C_word)a,a+=4,tmp);
t4=(C_word)C_a_i_times(&a,2,t2,((C_word*)t0)[2]);
C_trace("ChickenBridge.scm: 377  round");
t5=*((C_word*)lf[136]+1);
((C_proc3)C_retrieve_proc(t5))(3,t5,t3,t4);}

/* k8932 in a8925 in k8913 in decimals in k7274 in k7271 in k6978 in k6975 in k6971 in k6680 in k6677 in k6674 in k6671 */
static void C_ccall f_8934(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word ab[4],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_8934,2,t0,t1);}
t2=((C_word*)t0)[3];
((C_proc2)(void*)(*((C_word*)t2+1)))(2,t2,(C_word)C_a_i_divide(&a,2,t1,((C_word*)t0)[2]));}

/* quantize in k7274 in k7271 in k6978 in k6975 in k6971 in k6680 in k6677 in k6674 in k6671 */
static void C_ccall f_8890(C_word c,C_word t0,C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word ab[4],*a=ab;
if(c!=4) C_bad_argc_2(c,4,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr4,(void*)f_8890,4,t0,t1,t2,t3);}
if(C_truep((C_word)C_i_listp(t2))){
t4=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_8902,a[2]=t3,a[3]=((C_word)li89),tmp=(C_word)a,a+=4,tmp);
C_trace("map");
t5=*((C_word*)lf[17]+1);
((C_proc4)(void*)(*((C_word*)t5+1)))(4,t5,t1,t4,t2);}
else{
C_trace("ChickenBridge.scm: 377  tb:quantize");
f_8253(t1,t2,t3);}}

/* a8901 in quantize in k7274 in k7271 in k6978 in k6975 in k6971 in k6680 in k6677 in k6674 in k6671 */
static void C_ccall f_8902(C_word c,C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word *a;
if(c!=3) C_bad_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr3,(void*)f_8902,3,t0,t1,t2);}
C_trace("ChickenBridge.scm: 377  tb:quantize");
f_8253(t1,t2,((C_word*)t0)[2]);}

/* divide in k7274 in k7271 in k6978 in k6975 in k6971 in k6680 in k6677 in k6674 in k6671 */
static void C_ccall f_8847(C_word c,C_word t0,C_word t1,C_word t2,...){
C_word tmp;
C_word t3;
va_list v;
C_word *a,c2=c;
C_save_rest(t2,c2,3);
if(c<3) C_bad_min_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_demand(c*C_SIZEOF_PAIR+4)){
C_save_and_reclaim((void*)tr3r,(void*)f_8847r,3,t0,t1,t2);}
else{
a=C_alloc((c-3)*3);
t3=C_restore_rest(a,C_rest_count(0));
f_8847r(t0,t1,t2,t3);}}

static void C_ccall f_8847r(C_word t0,C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word *a=C_alloc(4);
if(C_truep((C_word)C_i_nullp(t3))){
if(C_truep((C_word)C_i_listp(t2))){
C_apply(4,0,t1,*((C_word*)lf[133]+1),t2);}
else{
C_trace("ChickenBridge.scm: 377  /");
C_divide(3,0,t1,t2);}}
else{
if(C_truep((C_word)C_i_listp(t2))){
t4=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_8877,a[2]=t3,a[3]=((C_word)li87),tmp=(C_word)a,a+=4,tmp);
C_trace("map");
t5=*((C_word*)lf[17]+1);
((C_proc4)(void*)(*((C_word*)t5+1)))(4,t5,t1,t4,t2);}
else{
C_apply(5,0,t1,*((C_word*)lf[133]+1),t2,t3);}}}

/* a8876 in divide in k7274 in k7271 in k6978 in k6975 in k6971 in k6680 in k6677 in k6674 in k6671 */
static void C_ccall f_8877(C_word c,C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word ab[4],*a=ab;
if(c!=3) C_bad_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr3,(void*)f_8877,3,t0,t1,t2);}
t3=(C_word)C_i_car(((C_word*)t0)[2]);
t4=t1;
((C_proc2)(void*)(*((C_word*)t4+1)))(2,t4,(C_word)C_a_i_divide(&a,2,t2,t3));}

/* minus in k7274 in k7271 in k6978 in k6975 in k6971 in k6680 in k6677 in k6674 in k6671 */
static void C_ccall f_8804(C_word c,C_word t0,C_word t1,C_word t2,...){
C_word tmp;
C_word t3;
va_list v;
C_word *a,c2=c;
C_save_rest(t2,c2,3);
if(c<3) C_bad_min_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_demand(c*C_SIZEOF_PAIR+4)){
C_save_and_reclaim((void*)tr3r,(void*)f_8804r,3,t0,t1,t2);}
else{
a=C_alloc((c-3)*3);
t3=C_restore_rest(a,C_rest_count(0));
f_8804r(t0,t1,t2,t3);}}

static void C_ccall f_8804r(C_word t0,C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word *a=C_alloc(4);
if(C_truep((C_word)C_i_nullp(t3))){
if(C_truep((C_word)C_i_listp(t2))){
C_apply(4,0,t1,*((C_word*)lf[131]+1),t2);}
else{
C_trace("ChickenBridge.scm: 377  -");
C_minus(3,0,t1,t2);}}
else{
if(C_truep((C_word)C_i_listp(t2))){
t4=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_8834,a[2]=t3,a[3]=((C_word)li85),tmp=(C_word)a,a+=4,tmp);
C_trace("map");
t5=*((C_word*)lf[17]+1);
((C_proc4)(void*)(*((C_word*)t5+1)))(4,t5,t1,t4,t2);}
else{
C_apply(5,0,t1,*((C_word*)lf[131]+1),t2,t3);}}}

/* a8833 in minus in k7274 in k7271 in k6978 in k6975 in k6971 in k6680 in k6677 in k6674 in k6671 */
static void C_ccall f_8834(C_word c,C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word ab[4],*a=ab;
if(c!=3) C_bad_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr3,(void*)f_8834,3,t0,t1,t2);}
t3=(C_word)C_i_car(((C_word*)t0)[2]);
t4=t1;
((C_proc2)(void*)(*((C_word*)t4+1)))(2,t4,(C_word)C_a_i_minus(&a,2,t2,t3));}

/* times in k7274 in k7271 in k6978 in k6975 in k6971 in k6680 in k6677 in k6674 in k6671 */
static void C_ccall f_8735(C_word c,C_word t0,C_word t1,...){
C_word tmp;
C_word t2;
va_list v;
C_word *a,c2=c;
C_save_rest(t1,c2,2);
C_check_for_interrupt;
if(!C_demand(c*C_SIZEOF_PAIR+4)){
C_save_and_reclaim((void*)tr2r,(void*)f_8735r,2,t0,t1);}
else{
a=C_alloc((c-2)*3);
t2=C_restore_rest(a,C_rest_count(0));
f_8735r(t0,t1,t2);}}

static void C_ccall f_8735r(C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word *a=C_alloc(4);
if(C_truep((C_word)C_i_nullp(t2))){
t3=t1;
((C_proc2)(void*)(*((C_word*)t3+1)))(2,t3,C_fix(1));}
else{
t3=(C_word)C_i_cdr(t2);
if(C_truep((C_word)C_i_nullp(t3))){
t4=(C_word)C_i_car(t2);
if(C_truep((C_word)C_i_listp(t4))){
t5=(C_word)C_i_car(t2);
C_apply(4,0,t1,*((C_word*)lf[129]+1),t5);}
else{
C_apply(4,0,t1,*((C_word*)lf[129]+1),t2);}}
else{
t4=(C_word)C_i_car(t2);
if(C_truep((C_word)C_i_pairp(t4))){
t5=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_8779,a[2]=t2,a[3]=((C_word)li83),tmp=(C_word)a,a+=4,tmp);
t6=(C_word)C_i_car(t2);
C_trace("map");
t7=*((C_word*)lf[17]+1);
((C_proc4)(void*)(*((C_word*)t7+1)))(4,t7,t1,t5,t6);}
else{
C_apply(4,0,t1,*((C_word*)lf[129]+1),t2);}}}}

/* a8778 in times in k7274 in k7271 in k6978 in k6975 in k6971 in k6680 in k6677 in k6674 in k6671 */
static void C_ccall f_8779(C_word c,C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word ab[4],*a=ab;
if(c!=3) C_bad_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr3,(void*)f_8779,3,t0,t1,t2);}
t3=(C_word)C_i_cadr(((C_word*)t0)[2]);
t4=t1;
((C_proc2)(void*)(*((C_word*)t4+1)))(2,t4,(C_word)C_a_i_times(&a,2,t2,t3));}

/* plus in k7274 in k7271 in k6978 in k6975 in k6971 in k6680 in k6677 in k6674 in k6671 */
static void C_ccall f_8666(C_word c,C_word t0,C_word t1,...){
C_word tmp;
C_word t2;
va_list v;
C_word *a,c2=c;
C_save_rest(t1,c2,2);
C_check_for_interrupt;
if(!C_demand(c*C_SIZEOF_PAIR+4)){
C_save_and_reclaim((void*)tr2r,(void*)f_8666r,2,t0,t1);}
else{
a=C_alloc((c-2)*3);
t2=C_restore_rest(a,C_rest_count(0));
f_8666r(t0,t1,t2);}}

static void C_ccall f_8666r(C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word *a=C_alloc(4);
if(C_truep((C_word)C_i_nullp(t2))){
t3=t1;
((C_proc2)(void*)(*((C_word*)t3+1)))(2,t3,C_fix(0));}
else{
t3=(C_word)C_i_cdr(t2);
if(C_truep((C_word)C_i_nullp(t3))){
t4=(C_word)C_i_car(t2);
if(C_truep((C_word)C_i_listp(t4))){
t5=(C_word)C_i_car(t2);
C_apply(4,0,t1,*((C_word*)lf[127]+1),t5);}
else{
C_apply(4,0,t1,*((C_word*)lf[127]+1),t2);}}
else{
t4=(C_word)C_i_car(t2);
if(C_truep((C_word)C_i_pairp(t4))){
t5=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_8710,a[2]=t2,a[3]=((C_word)li81),tmp=(C_word)a,a+=4,tmp);
t6=(C_word)C_i_car(t2);
C_trace("map");
t7=*((C_word*)lf[17]+1);
((C_proc4)(void*)(*((C_word*)t7+1)))(4,t7,t1,t5,t6);}
else{
C_apply(4,0,t1,*((C_word*)lf[127]+1),t2);}}}}

/* a8709 in plus in k7274 in k7271 in k6978 in k6975 in k6971 in k6680 in k6677 in k6674 in k6671 */
static void C_ccall f_8710(C_word c,C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word ab[4],*a=ab;
if(c!=3) C_bad_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr3,(void*)f_8710,3,t0,t1,t2);}
t3=(C_word)C_i_cadr(((C_word*)t0)[2]);
t4=t1;
((C_proc2)(void*)(*((C_word*)t4+1)))(2,t4,(C_word)C_a_i_plus(&a,2,t2,t3));}

/* float in k7274 in k7271 in k6978 in k6975 in k6971 in k6680 in k6677 in k6674 in k6671 */
static void C_ccall f_8642(C_word c,C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
if(c!=3) C_bad_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr3,(void*)f_8642,3,t0,t1,t2);}
if(C_truep((C_word)C_i_listp(t2))){
t3=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_8654,a[2]=((C_word)li79),tmp=(C_word)a,a+=3,tmp);
C_trace("map");
t4=*((C_word*)lf[17]+1);
((C_proc4)(void*)(*((C_word*)t4+1)))(4,t4,t1,t3,t2);}
else{
t3=t1;
((C_proc2)(void*)(*((C_word*)t3+1)))(2,t3,(C_word)C_a_i_times(&a,2,t2,lf[121]));}}

/* a8653 in float in k7274 in k7271 in k6978 in k6975 in k6971 in k6680 in k6677 in k6674 in k6671 */
static void C_ccall f_8654(C_word c,C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word ab[4],*a=ab;
if(c!=3) C_bad_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr3,(void*)f_8654,3,t0,t1,t2);}
t3=t1;
((C_proc2)(void*)(*((C_word*)t3+1)))(2,t3,(C_word)C_a_i_times(&a,2,t2,lf[120]));}

/* int in k7274 in k7271 in k6978 in k6975 in k6971 in k6680 in k6677 in k6674 in k6671 */
static void C_ccall f_8627(C_word c,C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word *a;
if(c!=3) C_bad_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr3,(void*)f_8627,3,t0,t1,t2);}
if(C_truep((C_word)C_i_listp(t2))){
C_trace("map");
t3=*((C_word*)lf[17]+1);
((C_proc4)(void*)(*((C_word*)t3+1)))(4,t3,t1,C_retrieve2(lf[92],"tb:int"),t2);}
else{
C_trace("ChickenBridge.scm: 377  tb:int");
t3=C_retrieve2(lf[92],"tb:int");
f_8246(3,t3,t1,t2);}}

/* discrete in k7274 in k7271 in k6978 in k6975 in k6971 in k6680 in k6677 in k6674 in k6671 */
static void C_ccall f_8516(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4,C_word t5,...){
C_word tmp;
C_word t6;
va_list v;
C_word *a,c2=c;
C_save_rest(t5,c2,6);
if(c<6) C_bad_min_argc_2(c,6,t0);
C_check_for_interrupt;
if(!C_demand(c*C_SIZEOF_PAIR+21)){
C_save_and_reclaim((void*)tr6r,(void*)f_8516r,6,t0,t1,t2,t3,t4,t5);}
else{
a=C_alloc((c-6)*3);
t6=C_restore_rest(a,C_rest_count(0));
f_8516r(t0,t1,t2,t3,t4,t5,t6);}}

static void C_ccall f_8516r(C_word t0,C_word t1,C_word t2,C_word t3,C_word t4,C_word t5,C_word t6){
C_word tmp;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word t14;
C_word t15;
C_word t16;
C_word t17;
C_word t18;
C_word t19;
C_word t20;
C_word t21;
C_word t22;
C_word t23;
C_word t24;
C_word t25;
C_word t26;
C_word t27;
C_word *a=C_alloc(21);
t7=C_SCHEME_FALSE;
t8=(*a=C_VECTOR_TYPE|1,a[1]=t7,tmp=(C_word)a,a+=2,tmp);
t9=C_SCHEME_FALSE;
t10=(*a=C_VECTOR_TYPE|1,a[1]=t9,tmp=(C_word)a,a+=2,tmp);
t11=C_fix(1);
t12=(*a=C_VECTOR_TYPE|1,a[1]=t11,tmp=(C_word)a,a+=2,tmp);
t13=(*a=C_CLOSURE_TYPE|9,a[1]=(C_word)f_8520,a[2]=t5,a[3]=t1,a[4]=t12,a[5]=t8,a[6]=t4,a[7]=t3,a[8]=t2,a[9]=t10,tmp=(C_word)a,a+=10,tmp);
if(C_truep((C_word)C_i_pairp(t5))){
t14=C_set_block_item(t10,0,t5);
if(C_truep((C_word)C_i_nullp(t6))){
t15=(C_word)C_i_length(((C_word*)t10)[1]);
t16=C_set_block_item(t8,0,t15);
t17=t13;
f_8520(t17,t16);}
else{
t15=(C_word)C_i_car(t6);
t16=C_set_block_item(t8,0,t15);
t17=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_8591,a[2]=t13,a[3]=t12,a[4]=t6,tmp=(C_word)a,a+=5,tmp);
t18=(C_word)C_i_cdr(t6);
t19=(C_word)C_i_nullp(t18);
C_trace("ChickenBridge.scm: 377  not?");
t20=C_retrieve(lf[117]);
((C_proc3)C_retrieve_proc(t20))(3,t20,t17,t19);}}
else{
t14=(C_word)C_i_car(t6);
t15=C_set_block_item(t8,0,t14);
t16=(C_word)C_i_cdr(t6);
if(C_truep((C_word)C_i_nullp(t16))){
t17=t13;
f_8520(t17,C_SCHEME_UNDEFINED);}
else{
t17=(C_word)C_i_cadr(t6);
t18=C_set_block_item(t12,0,t17);
t19=t13;
f_8520(t19,t18);}}}

/* k8589 in discrete in k7274 in k7271 in k6978 in k6975 in k6971 in k6680 in k6677 in k6674 in k6671 */
static void C_ccall f_8591(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word *a;
if(C_truep(t1)){
t2=(C_word)C_i_cadr(((C_word*)t0)[4]);
t3=C_mutate(((C_word *)((C_word*)t0)[3])+1,t2);
t4=((C_word*)t0)[2];
f_8520(t4,t3);}
else{
t2=((C_word*)t0)[2];
f_8520(t2,C_SCHEME_UNDEFINED);}}

/* k8518 in discrete in k7274 in k7271 in k6978 in k6975 in k6971 in k6680 in k6677 in k6674 in k6671 */
static void C_fcall f_8520(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[20],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_8520,NULL,2,t0,t1);}
if(C_truep(((C_word*)((C_word*)t0)[9])[1])){
if(C_truep((C_word)C_i_listp(((C_word*)t0)[8]))){
t2=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_8534,a[2]=((C_word*)t0)[4],a[3]=((C_word*)t0)[5],a[4]=((C_word*)t0)[6],a[5]=((C_word*)t0)[7],a[6]=((C_word*)t0)[9],a[7]=((C_word)li75),tmp=(C_word)a,a+=8,tmp);
C_trace("map");
t3=*((C_word*)lf[17]+1);
((C_proc4)(void*)(*((C_word*)t3+1)))(4,t3,((C_word*)t0)[3],t2,((C_word*)t0)[8]);}
else{
t2=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_8549,a[2]=((C_word*)t0)[9],a[3]=((C_word*)t0)[3],tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 377  tb:discrete");
f_8219(t2,((C_word*)t0)[8],((C_word*)t0)[7],((C_word*)t0)[6],C_fix(0),((C_word*)((C_word*)t0)[5])[1],((C_word*)((C_word*)t0)[4])[1]);}}
else{
if(C_truep((C_word)C_i_listp(((C_word*)t0)[8]))){
t2=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_8560,a[2]=((C_word*)t0)[4],a[3]=((C_word*)t0)[5],a[4]=((C_word*)t0)[2],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],a[7]=((C_word)li76),tmp=(C_word)a,a+=8,tmp);
C_trace("map");
t3=*((C_word*)lf[17]+1);
((C_proc4)(void*)(*((C_word*)t3+1)))(4,t3,((C_word*)t0)[3],t2,((C_word*)t0)[8]);}
else{
C_trace("ChickenBridge.scm: 377  tb:discrete");
f_8219(((C_word*)t0)[3],((C_word*)t0)[8],((C_word*)t0)[7],((C_word*)t0)[6],((C_word*)t0)[2],((C_word*)((C_word*)t0)[5])[1],((C_word*)((C_word*)t0)[4])[1]);}}}

/* a8559 in k8518 in discrete in k7274 in k7271 in k6978 in k6975 in k6971 in k6680 in k6677 in k6674 in k6671 */
static void C_ccall f_8560(C_word c,C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word *a;
if(c!=3) C_bad_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr3,(void*)f_8560,3,t0,t1,t2);}
C_trace("ChickenBridge.scm: 377  tb:discrete");
f_8219(t1,t2,((C_word*)t0)[6],((C_word*)t0)[5],((C_word*)t0)[4],((C_word*)((C_word*)t0)[3])[1],((C_word*)((C_word*)t0)[2])[1]);}

/* k8547 in k8518 in discrete in k7274 in k7271 in k6978 in k6975 in k6971 in k6680 in k6677 in k6674 in k6671 */
static void C_ccall f_8549(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
t2=((C_word*)t0)[3];
((C_proc2)(void*)(*((C_word*)t2+1)))(2,t2,(C_word)C_i_list_ref(((C_word*)((C_word*)t0)[2])[1],t1));}

/* a8533 in k8518 in discrete in k7274 in k7271 in k6978 in k6975 in k6971 in k6680 in k6677 in k6674 in k6671 */
static void C_ccall f_8534(C_word c,C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word ab[4],*a=ab;
if(c!=3) C_bad_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr3,(void*)f_8534,3,t0,t1,t2);}
t3=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_8542,a[2]=((C_word*)t0)[6],a[3]=t1,tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 377  tb:discrete");
f_8219(t3,t2,((C_word*)t0)[5],((C_word*)t0)[4],C_fix(0),((C_word*)((C_word*)t0)[3])[1],((C_word*)((C_word*)t0)[2])[1]);}

/* k8540 in a8533 in k8518 in discrete in k7274 in k7271 in k6978 in k6975 in k6971 in k6680 in k6677 in k6674 in k6671 */
static void C_ccall f_8542(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
t2=((C_word*)t0)[3];
((C_proc2)(void*)(*((C_word*)t2+1)))(2,t2,(C_word)C_i_list_ref(((C_word*)((C_word*)t0)[2])[1],t1));}

/* rescale in k7274 in k7271 in k6978 in k6975 in k6971 in k6680 in k6677 in k6674 in k6671 */
static void C_ccall f_8482(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4,C_word t5,C_word t6,...){
C_word tmp;
C_word t7;
va_list v;
C_word *a,c2=c;
C_save_rest(t6,c2,7);
if(c<7) C_bad_min_argc_2(c,7,t0);
C_check_for_interrupt;
if(!C_demand(c*C_SIZEOF_PAIR+8)){
C_save_and_reclaim((void*)tr7r,(void*)f_8482r,7,t0,t1,t2,t3,t4,t5,t6);}
else{
a=C_alloc((c-7)*3);
t7=C_restore_rest(a,C_rest_count(0));
f_8482r(t0,t1,t2,t3,t4,t5,t6,t7);}}

static void C_ccall f_8482r(C_word t0,C_word t1,C_word t2,C_word t3,C_word t4,C_word t5,C_word t6,C_word t7){
C_word tmp;
C_word t8;
C_word t9;
C_word t10;
C_word *a=C_alloc(8);
if(C_truep((C_word)C_i_listp(t2))){
t8=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_8494,a[2]=t7,a[3]=t6,a[4]=t5,a[5]=t4,a[6]=t3,a[7]=((C_word)li73),tmp=(C_word)a,a+=8,tmp);
C_trace("map");
t9=*((C_word*)lf[17]+1);
((C_proc4)(void*)(*((C_word*)t9+1)))(4,t9,t1,t8,t2);}
else{
if(C_truep((C_word)C_i_nullp(t7))){
C_trace("ChickenBridge.scm: 377  tb:rescale");
f_8192(t1,t2,t3,t4,t5,t6,C_fix(1));}
else{
t8=(C_word)C_i_car(t7);
C_trace("ChickenBridge.scm: 377  tb:rescale");
f_8192(t1,t2,t3,t4,t5,t6,t8);}}}

/* a8493 in rescale in k7274 in k7271 in k6978 in k6975 in k6971 in k6680 in k6677 in k6674 in k6671 */
static void C_ccall f_8494(C_word c,C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word *a;
if(c!=3) C_bad_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr3,(void*)f_8494,3,t0,t1,t2);}
C_apply(9,0,t1,C_retrieve(lf[115]),t2,((C_word*)t0)[6],((C_word*)t0)[5],((C_word*)t0)[4],((C_word*)t0)[3],((C_word*)t0)[2]);}

/* log2 in k7274 in k7271 in k6978 in k6975 in k6971 in k6680 in k6677 in k6674 in k6671 */
static void C_ccall f_8475(C_word c,C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word t5;
C_word ab[6],*a=ab;
if(c!=3) C_bad_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr3,(void*)f_8475,3,t0,t1,t2);}
t3=(C_word)C_a_i_bytevector(&a,1,C_fix(4));
t4=(C_word)C_i_foreign_flonum_argumentp(t2);
t5=t1;
((C_proc2)(void*)(*((C_word*)t5+1)))(2,t5,(C_word)stub438(t3,t4));}

/* log10 in k7274 in k7271 in k6978 in k6975 in k6971 in k6680 in k6677 in k6674 in k6671 */
static void C_ccall f_8468(C_word c,C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word t5;
C_word ab[6],*a=ab;
if(c!=3) C_bad_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr3,(void*)f_8468,3,t0,t1,t2);}
t3=(C_word)C_a_i_bytevector(&a,1,C_fix(4));
t4=(C_word)C_i_foreign_flonum_argumentp(t2);
t5=t1;
((C_proc2)(void*)(*((C_word*)t5+1)))(2,t5,(C_word)stub433(t3,t4));}

/* tb:ranbrown in k7274 in k7271 in k6978 in k6975 in k6971 in k6680 in k6677 in k6674 in k6671 */
static void C_ccall f_8449(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[6],*a=ab;
if(c!=2) C_bad_argc_2(c,2,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_8449,2,t0,t1);}
t2=(C_word)C_a_i_bytevector(&a,1,C_fix(4));
t3=t1;
((C_proc2)(void*)(*((C_word*)t3+1)))(2,t3,(C_word)stub420(t2));}

/* tb:ranpink in k7274 in k7271 in k6978 in k6975 in k6971 in k6680 in k6677 in k6674 in k6671 */
static void C_ccall f_8446(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[6],*a=ab;
if(c!=2) C_bad_argc_2(c,2,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_8446,2,t0,t1);}
t2=(C_word)C_a_i_bytevector(&a,1,C_fix(4));
t3=t1;
((C_proc2)(void*)(*((C_word*)t3+1)))(2,t3,(C_word)stub417(t2));}

/* tb:ranpoisson in k7274 in k7271 in k6978 in k6975 in k6971 in k6680 in k6677 in k6674 in k6671 */
static void C_fcall f_8439(C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word *a;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_8439,NULL,2,t1,t2);}
t3=(C_word)C_i_foreign_flonum_argumentp(t2);
t4=t1;
((C_proc2)(void*)(*((C_word*)t4+1)))(2,t4,(C_word)stub414(C_SCHEME_UNDEFINED,t3));}

/* tb:rancauchy in k7274 in k7271 in k6978 in k6975 in k6971 in k6680 in k6677 in k6674 in k6671 */
static void C_ccall f_8436(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[6],*a=ab;
if(c!=2) C_bad_argc_2(c,2,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_8436,2,t0,t1);}
t2=(C_word)C_a_i_bytevector(&a,1,C_fix(4));
t3=t1;
((C_proc2)(void*)(*((C_word*)t3+1)))(2,t3,(C_word)stub410(t2));}

/* tb:rangamma in k7274 in k7271 in k6978 in k6975 in k6971 in k6680 in k6677 in k6674 in k6671 */
static void C_fcall f_8429(C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word t5;
C_word ab[6],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_8429,NULL,2,t1,t2);}
t3=(C_word)C_a_i_bytevector(&a,1,C_fix(4));
t4=(C_word)C_i_foreign_flonum_argumentp(t2);
t5=t1;
((C_proc2)(void*)(*((C_word*)t5+1)))(2,t5,(C_word)stub406(t3,t4));}

/* tb:ranexp in k7274 in k7271 in k6978 in k6975 in k6971 in k6680 in k6677 in k6674 in k6671 */
static void C_fcall f_8411(C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word t5;
C_word ab[6],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_8411,NULL,2,t1,t2);}
t3=(C_word)C_a_i_bytevector(&a,1,C_fix(4));
t4=(C_word)C_i_foreign_flonum_argumentp(t2);
t5=t1;
((C_proc2)(void*)(*((C_word*)t5+1)))(2,t5,(C_word)stub394(t3,t4));}

/* tb:rangauss in k7274 in k7271 in k6978 in k6975 in k6971 in k6680 in k6677 in k6674 in k6671 */
static void C_fcall f_8400(C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word ab[6],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_8400,NULL,3,t1,t2,t3);}
t4=(C_word)C_a_i_bytevector(&a,1,C_fix(4));
t5=(C_word)C_i_foreign_flonum_argumentp(t2);
t6=(C_word)C_i_foreign_flonum_argumentp(t3);
t7=t1;
((C_proc2)(void*)(*((C_word*)t7+1)))(2,t7,(C_word)stub388(t4,t5,t6));}

/* tb:ranmiddle in k7274 in k7271 in k6978 in k6975 in k6971 in k6680 in k6677 in k6674 in k6671 */
static void C_ccall f_8397(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[6],*a=ab;
if(c!=2) C_bad_argc_2(c,2,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_8397,2,t0,t1);}
t2=(C_word)C_a_i_bytevector(&a,1,C_fix(4));
t3=t1;
((C_proc2)(void*)(*((C_word*)t3+1)))(2,t3,(C_word)stub383(t2));}

/* tb:ranhigh in k7274 in k7271 in k6978 in k6975 in k6971 in k6680 in k6677 in k6674 in k6671 */
static void C_ccall f_8394(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[6],*a=ab;
if(c!=2) C_bad_argc_2(c,2,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_8394,2,t0,t1);}
t2=(C_word)C_a_i_bytevector(&a,1,C_fix(4));
t3=t1;
((C_proc2)(void*)(*((C_word*)t3+1)))(2,t3,(C_word)stub380(t2));}

/* tb:ranlow in k7274 in k7271 in k6978 in k6975 in k6971 in k6680 in k6677 in k6674 in k6671 */
static void C_ccall f_8391(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[6],*a=ab;
if(c!=2) C_bad_argc_2(c,2,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_8391,2,t0,t1);}
t2=(C_word)C_a_i_bytevector(&a,1,C_fix(4));
t3=t1;
((C_proc2)(void*)(*((C_word*)t3+1)))(2,t3,(C_word)stub377(t2));}

/* tb:ranf in k7274 in k7271 in k6978 in k6975 in k6971 in k6680 in k6677 in k6674 in k6671 */
static void C_fcall f_8362(C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word t5;
C_word ab[6],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_8362,NULL,2,t1,t2);}
t3=(C_word)C_a_i_bytevector(&a,1,C_fix(4));
t4=(C_word)C_i_foreign_flonum_argumentp(t2);
t5=t1;
((C_proc2)(void*)(*((C_word*)t5+1)))(2,t5,(C_word)stub360(t3,t4));}

/* tb:rani in k7274 in k7271 in k6978 in k6975 in k6971 in k6680 in k6677 in k6674 in k6671 */
static void C_fcall f_8355(C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word *a;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_8355,NULL,2,t1,t2);}
t3=(C_word)C_i_foreign_fixnum_argumentp(t2);
t4=t1;
((C_proc2)(void*)(*((C_word*)t4+1)))(2,t4,(C_word)stub356(C_SCHEME_UNDEFINED,t3));}

/* tb:ran-set! in k7274 in k7271 in k6978 in k6975 in k6971 in k6680 in k6677 in k6674 in k6671 */
static void C_ccall f_8352(C_word c,C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word *a;
if(c!=3) C_bad_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr3,(void*)f_8352,3,t0,t1,t2);}
t3=t1;
((C_proc2)(void*)(*((C_word*)t3+1)))(2,t3,(C_word)stub352(C_SCHEME_UNDEFINED,t2));}

/* tb:keynum->hertz in k7274 in k7271 in k6978 in k6975 in k6971 in k6680 in k6677 in k6674 in k6671 */
static void C_fcall f_8331(C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word t5;
C_word ab[6],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_8331,NULL,2,t1,t2);}
t3=(C_word)C_a_i_bytevector(&a,1,C_fix(4));
t4=(C_word)C_i_foreign_flonum_argumentp(t2);
t5=t1;
((C_proc2)(void*)(*((C_word*)t5+1)))(2,t5,(C_word)stub338(t3,t4));}

/* tb:geoseg in k7274 in k7271 in k6978 in k6975 in k6971 in k6680 in k6677 in k6674 in k6671 */
static void C_ccall f_8312(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4,C_word t5){
C_word tmp;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word ab[6],*a=ab;
if(c!=6) C_bad_argc_2(c,6,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr6,(void*)f_8312,6,t0,t1,t2,t3,t4,t5);}
t6=(C_word)C_a_i_bytevector(&a,1,C_fix(4));
t7=(C_word)C_i_foreign_fixnum_argumentp(t2);
t8=(C_word)C_i_foreign_fixnum_argumentp(t3);
t9=(C_word)C_i_foreign_flonum_argumentp(t4);
t10=(C_word)C_i_foreign_flonum_argumentp(t5);
t11=t1;
((C_proc2)(void*)(*((C_word*)t11+1)))(2,t11,(C_word)stub330(t6,t7,t8,t9,t10));}

/* tb:explseg in k7274 in k7271 in k6978 in k6975 in k6971 in k6680 in k6677 in k6674 in k6671 */
static void C_ccall f_8293(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4,C_word t5){
C_word tmp;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word ab[6],*a=ab;
if(c!=6) C_bad_argc_2(c,6,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr6,(void*)f_8293,6,t0,t1,t2,t3,t4,t5);}
t6=(C_word)C_a_i_bytevector(&a,1,C_fix(4));
t7=(C_word)C_i_foreign_fixnum_argumentp(t2);
t8=(C_word)C_i_foreign_fixnum_argumentp(t3);
t9=(C_word)C_i_foreign_flonum_argumentp(t4);
t10=(C_word)C_i_foreign_flonum_argumentp(t5);
t11=t1;
((C_proc2)(void*)(*((C_word*)t11+1)))(2,t11,(C_word)stub319(t6,t7,t8,t9,t10));}

/* tb:scaler->cents in k7274 in k7271 in k6978 in k6975 in k6971 in k6680 in k6677 in k6674 in k6671 */
static void C_ccall f_8286(C_word c,C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word *a;
if(c!=3) C_bad_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr3,(void*)f_8286,3,t0,t1,t2);}
t3=(C_word)C_i_foreign_flonum_argumentp(t2);
t4=t1;
((C_proc2)(void*)(*((C_word*)t4+1)))(2,t4,(C_word)stub312(C_SCHEME_UNDEFINED,t3));}

/* tb:cents->scaler in k7274 in k7271 in k6978 in k6975 in k6971 in k6680 in k6677 in k6674 in k6671 */
static void C_ccall f_8279(C_word c,C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word t5;
C_word ab[6],*a=ab;
if(c!=3) C_bad_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr3,(void*)f_8279,3,t0,t1,t2);}
t3=(C_word)C_a_i_bytevector(&a,1,C_fix(4));
t4=(C_word)C_i_foreign_fixnum_argumentp(t2);
t5=t1;
((C_proc2)(void*)(*((C_word*)t5+1)))(2,t5,(C_word)stub307(t3,t4));}

/* tb:rhythm->seconds in k7274 in k7271 in k6978 in k6975 in k6971 in k6680 in k6677 in k6674 in k6671 */
static void C_fcall f_8264(C_word t1,C_word t2,C_word t3,C_word t4){
C_word tmp;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word ab[6],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_8264,NULL,4,t1,t2,t3,t4);}
t5=(C_word)C_a_i_bytevector(&a,1,C_fix(4));
t6=(C_word)C_i_foreign_flonum_argumentp(t2);
t7=(C_word)C_i_foreign_flonum_argumentp(t3);
t8=(C_word)C_i_foreign_flonum_argumentp(t4);
t9=t1;
((C_proc2)(void*)(*((C_word*)t9+1)))(2,t9,(C_word)stub300(t5,t6,t7,t8));}

/* tb:quantize in k7274 in k7271 in k6978 in k6975 in k6971 in k6680 in k6677 in k6674 in k6671 */
static void C_fcall f_8253(C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word ab[6],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_8253,NULL,3,t1,t2,t3);}
t4=(C_word)C_a_i_bytevector(&a,1,C_fix(4));
t5=(C_word)C_i_foreign_flonum_argumentp(t2);
t6=(C_word)C_i_foreign_flonum_argumentp(t3);
t7=t1;
((C_proc2)(void*)(*((C_word*)t7+1)))(2,t7,(C_word)stub292(t4,t5,t6));}

/* tb:int in k7274 in k7271 in k6978 in k6975 in k6971 in k6680 in k6677 in k6674 in k6671 */
static void C_ccall f_8246(C_word c,C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word *a;
if(c!=3) C_bad_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr3,(void*)f_8246,3,t0,t1,t2);}
t3=(C_word)C_i_foreign_flonum_argumentp(t2);
t4=t1;
((C_proc2)(void*)(*((C_word*)t4+1)))(2,t4,(C_word)stub287(C_SCHEME_UNDEFINED,t3));}

/* tb:discrete in k7274 in k7271 in k6978 in k6975 in k6971 in k6680 in k6677 in k6674 in k6671 */
static void C_fcall f_8219(C_word t1,C_word t2,C_word t3,C_word t4,C_word t5,C_word t6,C_word t7){
C_word tmp;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word t14;
C_word *a;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_8219,NULL,7,t1,t2,t3,t4,t5,t6,t7);}
t8=(C_word)C_i_foreign_flonum_argumentp(t2);
t9=(C_word)C_i_foreign_flonum_argumentp(t3);
t10=(C_word)C_i_foreign_flonum_argumentp(t4);
t11=(C_word)C_i_foreign_fixnum_argumentp(t5);
t12=(C_word)C_i_foreign_fixnum_argumentp(t6);
t13=(C_word)C_i_foreign_flonum_argumentp(t7);
t14=t1;
((C_proc2)(void*)(*((C_word*)t14+1)))(2,t14,(C_word)stub278(C_SCHEME_UNDEFINED,t8,t9,t10,t11,t12,t13));}

/* tb:rescale in k7274 in k7271 in k6978 in k6975 in k6971 in k6680 in k6677 in k6674 in k6671 */
static void C_fcall f_8192(C_word t1,C_word t2,C_word t3,C_word t4,C_word t5,C_word t6,C_word t7){
C_word tmp;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word t14;
C_word t15;
C_word ab[6],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_8192,NULL,7,t1,t2,t3,t4,t5,t6,t7);}
t8=(C_word)C_a_i_bytevector(&a,1,C_fix(4));
t9=(C_word)C_i_foreign_flonum_argumentp(t2);
t10=(C_word)C_i_foreign_flonum_argumentp(t3);
t11=(C_word)C_i_foreign_flonum_argumentp(t4);
t12=(C_word)C_i_foreign_flonum_argumentp(t5);
t13=(C_word)C_i_foreign_flonum_argumentp(t6);
t14=(C_word)C_i_foreign_flonum_argumentp(t7);
t15=t1;
((C_proc2)(void*)(*((C_word*)t15+1)))(2,t15,(C_word)stub263(t8,t9,t10,t11,t12,t13,t14));}

/* bitwise-test in k7274 in k7271 in k6978 in k6975 in k6971 in k6680 in k6677 in k6674 in k6671 */
static void C_fcall f_8151(C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word ab[12],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_8151,NULL,3,t1,t2,t3);}
t4=(*a=C_VECTOR_TYPE|1,a[1]=t2,tmp=(C_word)a,a+=2,tmp);
t5=(*a=C_VECTOR_TYPE|1,a[1]=t3,tmp=(C_word)a,a+=2,tmp);
t6=C_SCHEME_UNDEFINED;
t7=(*a=C_VECTOR_TYPE|1,a[1]=t6,tmp=(C_word)a,a+=2,tmp);
t8=C_set_block_item(t7,0,(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_8157,a[2]=t7,a[3]=t4,a[4]=t5,a[5]=((C_word)li46),tmp=(C_word)a,a+=6,tmp));
t9=((C_word*)t7)[1];
f_8157(t9,t1,C_SCHEME_FALSE);}

/* do223 in bitwise-test in k7274 in k7271 in k6978 in k6975 in k6971 in k6680 in k6677 in k6674 in k6671 */
static void C_fcall f_8157(C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_8157,NULL,3,t0,t1,t2);}
t3=(*a=C_VECTOR_TYPE|1,a[1]=t2,tmp=(C_word)a,a+=2,tmp);
if(C_truep((C_word)C_i_nequalp(((C_word*)((C_word*)t0)[4])[1],C_fix(0)))){
t4=t1;
((C_proc2)(void*)(*((C_word*)t4+1)))(2,t4,((C_word*)t3)[1]);}
else{
t4=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_8167,a[2]=t3,a[3]=t1,a[4]=((C_word*)t0)[2],a[5]=((C_word*)t0)[4],a[6]=((C_word*)t0)[3],tmp=(C_word)a,a+=7,tmp);
if(C_truep((C_word)C_i_bit_setp(((C_word*)((C_word*)t0)[4])[1],C_fix(0)))){
if(C_truep((C_word)C_i_bit_setp(((C_word*)((C_word*)t0)[3])[1],C_fix(0)))){
t5=C_set_block_item(t3,0,C_SCHEME_TRUE);
t6=t4;
f_8167(t6,t5);}
else{
t5=C_set_block_item(t3,0,C_SCHEME_FALSE);
t6=C_set_block_item(((C_word*)t0)[4],0,C_fix(0));
t7=t4;
f_8167(t7,t6);}}
else{
t5=t4;
f_8167(t5,C_SCHEME_UNDEFINED);}}}

/* k8165 in do223 in bitwise-test in k7274 in k7271 in k6978 in k6975 in k6971 in k6680 in k6677 in k6674 in k6671 */
static void C_fcall f_8167(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[8],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_8167,NULL,2,t0,t1);}
t2=(C_word)C_a_i_arithmetic_shift(&a,2,((C_word*)((C_word*)t0)[6])[1],C_fix(-1));
t3=C_mutate(((C_word *)((C_word*)t0)[6])+1,t2);
t4=(C_word)C_a_i_arithmetic_shift(&a,2,((C_word*)((C_word*)t0)[5])[1],C_fix(-1));
t5=C_mutate(((C_word *)((C_word*)t0)[5])+1,t4);
t6=((C_word*)((C_word*)t0)[4])[1];
f_8157(t6,((C_word*)t0)[3],((C_word*)((C_word*)t0)[2])[1]);}

/* list-prop in k7274 in k7271 in k6978 in k6975 in k6971 in k6680 in k6677 in k6674 in k6671 */
static void C_ccall f_8065(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,...){
C_word tmp;
C_word t4;
va_list v;
C_word *a,c2=c;
C_save_rest(t3,c2,4);
if(c<4) C_bad_min_argc_2(c,4,t0);
C_check_for_interrupt;
if(!C_demand(c*C_SIZEOF_PAIR+0)){
C_save_and_reclaim((void*)tr4r,(void*)f_8065r,4,t0,t1,t2,t3);}
else{
a=C_alloc((c-4)*3);
t4=C_restore_rest(a,C_rest_count(0));
f_8065r(t0,t1,t2,t3,t4);}}

static void C_ccall f_8065r(C_word t0,C_word t1,C_word t2,C_word t3,C_word t4){
C_word tmp;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
if(C_truep((C_word)C_i_nullp(t2))){
t5=(C_word)C_i_nullp(t4);
t6=t1;
((C_proc2)(void*)(*((C_word*)t6+1)))(2,t6,(C_truep(t5)?C_SCHEME_FALSE:(C_word)C_i_car(t4)));}
else{
t5=(C_word)C_i_car(t2);
t6=(C_word)C_eqp(t5,t3);
if(C_truep(t6)){
t7=t1;
((C_proc2)(void*)(*((C_word*)t7+1)))(2,t7,(C_word)C_i_cadr(t2));}
else{
t7=(C_word)C_i_cddr(t2);
C_apply(6,0,t1,C_retrieve2(lf[88],"list-prop"),t7,t3,t4);}}}

/* every? in k7274 in k7271 in k6978 in k6975 in k6971 in k6680 in k6677 in k6674 in k6671 */
static void C_ccall f_8026(C_word c,C_word t0,C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word ab[7],*a=ab;
if(c!=4) C_bad_argc_2(c,4,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr4,(void*)f_8026,4,t0,t1,t2,t3);}
t4=C_SCHEME_UNDEFINED;
t5=(*a=C_VECTOR_TYPE|1,a[1]=t4,tmp=(C_word)a,a+=2,tmp);
t6=C_set_block_item(t5,0,(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_8032,a[2]=t2,a[3]=t5,a[4]=((C_word)li43),tmp=(C_word)a,a+=5,tmp));
t7=((C_word*)t5)[1];
f_8032(t7,t1,t3,C_SCHEME_TRUE);}

/* do207 in every? in k7274 in k7271 in k6978 in k6975 in k6971 in k6680 in k6677 in k6674 in k6671 */
static void C_fcall f_8032(C_word t0,C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word ab[12],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_8032,NULL,4,t0,t1,t2,t3);}
t4=(*a=C_VECTOR_TYPE|1,a[1]=t3,tmp=(C_word)a,a+=2,tmp);
t5=(C_word)C_i_not(((C_word*)t4)[1]);
t6=(C_truep(t5)?t5:(C_word)C_i_nullp(t2));
if(C_truep(t6)){
t7=t1;
((C_proc2)(void*)(*((C_word*)t7+1)))(2,t7,((C_word*)t4)[1]);}
else{
t7=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_8045,a[2]=t4,a[3]=t1,a[4]=((C_word*)t0)[3],a[5]=t2,tmp=(C_word)a,a+=6,tmp);
t8=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_8055,a[2]=t4,a[3]=t7,tmp=(C_word)a,a+=4,tmp);
t9=(C_word)C_i_car(t2);
C_trace("ChickenBridge.scm: 376  f");
t10=((C_word*)t0)[2];
((C_proc3)C_retrieve_proc(t10))(3,t10,t8,t9);}}

/* k8053 in do207 in every? in k7274 in k7271 in k6978 in k6975 in k6971 in k6680 in k6677 in k6674 in k6671 */
static void C_ccall f_8055(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word *a;
if(C_truep(t1)){
t2=((C_word*)t0)[3];
f_8045(t2,C_SCHEME_FALSE);}
else{
t2=C_set_block_item(((C_word*)t0)[2],0,C_SCHEME_FALSE);
t3=((C_word*)t0)[3];
f_8045(t3,t2);}}

/* k8043 in do207 in every? in k7274 in k7271 in k6978 in k6975 in k6971 in k6680 in k6677 in k6674 in k6671 */
static void C_fcall f_8045(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word *a;
t2=(C_word)C_i_cdr(((C_word*)t0)[5]);
t3=((C_word*)((C_word*)t0)[4])[1];
f_8032(t3,((C_word*)t0)[3],t2,((C_word*)((C_word*)t0)[2])[1]);}

/* list-find in k7274 in k7271 in k6978 in k6975 in k6971 in k6680 in k6677 in k6674 in k6671 */
static void C_ccall f_7987(C_word c,C_word t0,C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word ab[7],*a=ab;
if(c!=4) C_bad_argc_2(c,4,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr4,(void*)f_7987,4,t0,t1,t2,t3);}
t4=C_SCHEME_UNDEFINED;
t5=(*a=C_VECTOR_TYPE|1,a[1]=t4,tmp=(C_word)a,a+=2,tmp);
t6=C_set_block_item(t5,0,(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_7993,a[2]=t2,a[3]=t5,a[4]=((C_word)li41),tmp=(C_word)a,a+=5,tmp));
t7=((C_word*)t5)[1];
f_7993(t7,t1,t3,C_SCHEME_FALSE,C_SCHEME_FALSE);}

/* do196 in list-find in k7274 in k7271 in k6978 in k6975 in k6971 in k6680 in k6677 in k6674 in k6671 */
static void C_fcall f_7993(C_word t0,C_word t1,C_word t2,C_word t3,C_word t4){
C_word tmp;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word ab[14],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_7993,NULL,5,t0,t1,t2,t3,t4);}
t5=(*a=C_VECTOR_TYPE|1,a[1]=t4,tmp=(C_word)a,a+=2,tmp);
t6=((C_word*)t5)[1];
t7=(C_truep(t6)?t6:(C_word)C_i_nullp(t2));
if(C_truep(t7)){
t8=t1;
((C_proc2)(void*)(*((C_word*)t8+1)))(2,t8,((C_word*)t5)[1]);}
else{
t8=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_8003,a[2]=t5,a[3]=t3,a[4]=t1,a[5]=((C_word*)t0)[3],a[6]=t2,tmp=(C_word)a,a+=7,tmp);
t9=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_8013,a[2]=t8,a[3]=t5,a[4]=t2,tmp=(C_word)a,a+=5,tmp);
t10=(C_word)C_i_car(t2);
C_trace("ChickenBridge.scm: 376  p");
t11=((C_word*)t0)[2];
((C_proc3)C_retrieve_proc(t11))(3,t11,t9,t10);}}

/* k8011 in do196 in list-find in k7274 in k7271 in k6978 in k6975 in k6971 in k6680 in k6677 in k6674 in k6671 */
static void C_ccall f_8013(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word *a;
if(C_truep(t1)){
t2=(C_word)C_i_car(((C_word*)t0)[4]);
t3=C_mutate(((C_word *)((C_word*)t0)[3])+1,t2);
t4=((C_word*)t0)[2];
f_8003(t4,t3);}
else{
t2=((C_word*)t0)[2];
f_8003(t2,C_SCHEME_UNDEFINED);}}

/* k8001 in do196 in list-find in k7274 in k7271 in k6978 in k6975 in k6971 in k6680 in k6677 in k6674 in k6671 */
static void C_fcall f_8003(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word *a;
t2=(C_word)C_i_cdr(((C_word*)t0)[6]);
t3=((C_word*)((C_word*)t0)[5])[1];
f_7993(t3,((C_word*)t0)[4],t2,((C_word*)t0)[3],((C_word*)((C_word*)t0)[2])[1]);}

/* list-index in k7274 in k7271 in k6978 in k6975 in k6971 in k6680 in k6677 in k6674 in k6671 */
static void C_ccall f_7947(C_word c,C_word t0,C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word ab[7],*a=ab;
if(c!=4) C_bad_argc_2(c,4,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr4,(void*)f_7947,4,t0,t1,t2,t3);}
t4=C_SCHEME_UNDEFINED;
t5=(*a=C_VECTOR_TYPE|1,a[1]=t4,tmp=(C_word)a,a+=2,tmp);
t6=C_set_block_item(t5,0,(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_7953,a[2]=t2,a[3]=t5,a[4]=((C_word)li39),tmp=(C_word)a,a+=5,tmp));
t7=((C_word*)t5)[1];
f_7953(t7,t1,t3,C_fix(0),C_SCHEME_FALSE);}

/* do185 in list-index in k7274 in k7271 in k6978 in k6975 in k6971 in k6680 in k6677 in k6674 in k6671 */
static void C_fcall f_7953(C_word t0,C_word t1,C_word t2,C_word t3,C_word t4){
C_word tmp;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word ab[14],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_7953,NULL,5,t0,t1,t2,t3,t4);}
t5=(*a=C_VECTOR_TYPE|1,a[1]=t4,tmp=(C_word)a,a+=2,tmp);
t6=((C_word*)t5)[1];
t7=(C_truep(t6)?t6:(C_word)C_i_nullp(t2));
if(C_truep(t7)){
t8=t1;
((C_proc2)(void*)(*((C_word*)t8+1)))(2,t8,((C_word*)t5)[1]);}
else{
t8=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_7963,a[2]=t5,a[3]=t1,a[4]=((C_word*)t0)[3],a[5]=t3,a[6]=t2,tmp=(C_word)a,a+=7,tmp);
t9=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_7977,a[2]=t8,a[3]=t3,a[4]=t5,tmp=(C_word)a,a+=5,tmp);
t10=(C_word)C_i_car(t2);
C_trace("ChickenBridge.scm: 376  p");
t11=((C_word*)t0)[2];
((C_proc3)C_retrieve_proc(t11))(3,t11,t9,t10);}}

/* k7975 in do185 in list-index in k7274 in k7271 in k6978 in k6975 in k6971 in k6680 in k6677 in k6674 in k6671 */
static void C_ccall f_7977(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word *a;
if(C_truep(t1)){
t2=C_mutate(((C_word *)((C_word*)t0)[4])+1,((C_word*)t0)[3]);
t3=((C_word*)t0)[2];
f_7963(t3,t2);}
else{
t2=((C_word*)t0)[2];
f_7963(t2,C_SCHEME_UNDEFINED);}}

/* k7961 in do185 in list-index in k7274 in k7271 in k6978 in k6975 in k6971 in k6680 in k6677 in k6674 in k6671 */
static void C_fcall f_7963(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[4],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_7963,NULL,2,t0,t1);}
t2=(C_word)C_i_cdr(((C_word*)t0)[6]);
t3=(C_word)C_a_i_plus(&a,2,((C_word*)t0)[5],C_fix(1));
t4=((C_word*)((C_word*)t0)[4])[1];
f_7953(t4,((C_word*)t0)[3],t2,t3,((C_word*)((C_word*)t0)[2])[1]);}

/* make-list in k7274 in k7271 in k6978 in k6975 in k6971 in k6680 in k6677 in k6674 in k6671 */
static void C_ccall f_7848(C_word c,C_word t0,C_word t1,C_word t2,...){
C_word tmp;
C_word t3;
va_list v;
C_word *a,c2=c;
C_save_rest(t2,c2,3);
if(c<3) C_bad_min_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_demand(c*C_SIZEOF_PAIR+5)){
C_save_and_reclaim((void*)tr3r,(void*)f_7848r,3,t0,t1,t2);}
else{
a=C_alloc((c-3)*3);
t3=C_restore_rest(a,C_rest_count(0));
f_7848r(t0,t1,t2,t3);}}

static void C_ccall f_7848r(C_word t0,C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word *a=C_alloc(5);
t4=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_7852,a[2]=t2,a[3]=t1,a[4]=t3,tmp=(C_word)a,a+=5,tmp);
if(C_truep((C_word)C_i_lessp(t2,C_fix(0)))){
C_trace("ChickenBridge.scm: 376  error");
t5=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t5))(4,t5,t4,lf[84],t2);}
else{
t5=t4;
f_7852(2,t5,C_SCHEME_UNDEFINED);}}

/* k7850 in make-list in k7274 in k7271 in k6978 in k6975 in k6971 in k6680 in k6677 in k6674 in k6671 */
static void C_ccall f_7852(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word ab[12],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_7852,2,t0,t1);}
t2=C_SCHEME_UNDEFINED;
t3=(*a=C_VECTOR_TYPE|1,a[1]=t2,tmp=(C_word)a,a+=2,tmp);
t4=C_SCHEME_UNDEFINED;
t5=(*a=C_VECTOR_TYPE|1,a[1]=t4,tmp=(C_word)a,a+=2,tmp);
t6=C_set_block_item(t3,0,(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_7854,a[2]=t3,a[3]=((C_word)li36),tmp=(C_word)a,a+=4,tmp));
t7=C_set_block_item(t5,0,(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_7877,a[2]=t5,a[3]=((C_word)li37),tmp=(C_word)a,a+=4,tmp));
if(C_truep((C_word)C_i_nullp(((C_word*)t0)[4]))){
C_trace("ChickenBridge.scm: 376  l1");
t8=((C_word*)t3)[1];
f_7854(t8,((C_word*)t0)[3],((C_word*)t0)[2],C_SCHEME_FALSE);}
else{
t8=(C_word)C_i_car(((C_word*)t0)[4]);
if(C_truep((C_word)C_i_closurep(t8))){
C_trace("ChickenBridge.scm: 376  l2");
t9=((C_word*)t5)[1];
f_7877(t9,((C_word*)t0)[3],((C_word*)t0)[2],((C_word*)t0)[4]);}
else{
t9=(C_word)C_i_car(((C_word*)t0)[4]);
C_trace("ChickenBridge.scm: 376  l1");
t10=((C_word*)t3)[1];
f_7854(t10,((C_word*)t0)[3],((C_word*)t0)[2],t9);}}}

/* l2 in k7850 in make-list in k7274 in k7271 in k6978 in k6975 in k6971 in k6680 in k6677 in k6674 in k6671 */
static void C_fcall f_7877(C_word t0,C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word ab[6],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_7877,NULL,4,t0,t1,t2,t3);}
if(C_truep((C_word)C_i_nequalp(t2,C_fix(0)))){
t4=t1;
((C_proc2)(void*)(*((C_word*)t4+1)))(2,t4,C_SCHEME_END_OF_LIST);}
else{
t4=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_7894,a[2]=t3,a[3]=((C_word*)t0)[2],a[4]=t2,a[5]=t1,tmp=(C_word)a,a+=6,tmp);
t5=(C_word)C_i_car(t3);
t6=(C_word)C_i_cdr(t3);
C_apply(4,0,t4,t5,t6);}}

/* k7892 in l2 in k7850 in make-list in k7274 in k7271 in k6978 in k6975 in k6971 in k6680 in k6677 in k6674 in k6671 */
static void C_ccall f_7894(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[8],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_7894,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_7898,a[2]=t1,a[3]=((C_word*)t0)[5],tmp=(C_word)a,a+=4,tmp);
t3=(C_word)C_a_i_minus(&a,2,((C_word*)t0)[4],C_fix(1));
C_trace("ChickenBridge.scm: 376  l2");
t4=((C_word*)((C_word*)t0)[3])[1];
f_7877(t4,t2,t3,((C_word*)t0)[2]);}

/* k7896 in k7892 in l2 in k7850 in make-list in k7274 in k7271 in k6978 in k6975 in k6971 in k6680 in k6677 in k6674 in k6671 */
static void C_ccall f_7898(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word ab[3],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_7898,2,t0,t1);}
t2=((C_word*)t0)[3];
((C_proc2)(void*)(*((C_word*)t2+1)))(2,t2,(C_word)C_a_i_cons(&a,2,((C_word*)t0)[2],t1));}

/* l1 in k7850 in make-list in k7274 in k7271 in k6978 in k6975 in k6971 in k6680 in k6677 in k6674 in k6671 */
static void C_fcall f_7854(C_word t0,C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word *a;
loop:
a=C_alloc(8);
C_check_for_interrupt;
if(!C_stack_probe(a)){
C_save_and_reclaim((void*)trf_7854,NULL,4,t0,t1,t2,t3);}
if(C_truep((C_word)C_i_nequalp(t2,C_fix(0)))){
t4=t1;
((C_proc2)(void*)(*((C_word*)t4+1)))(2,t4,C_SCHEME_END_OF_LIST);}
else{
t4=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_7871,a[2]=t3,a[3]=t1,tmp=(C_word)a,a+=4,tmp);
t5=(C_word)C_a_i_minus(&a,2,t2,C_fix(1));
C_trace("ChickenBridge.scm: 376  l1");
t7=t4;
t8=t5;
t9=t3;
t1=t7;
t2=t8;
t3=t9;
goto loop;}}

/* k7869 in l1 in k7850 in make-list in k7274 in k7271 in k6978 in k6975 in k6971 in k6680 in k6677 in k6674 in k6671 */
static void C_ccall f_7871(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word ab[3],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_7871,2,t0,t1);}
t2=((C_word*)t0)[3];
((C_proc2)(void*)(*((C_word*)t2+1)))(2,t2,(C_word)C_a_i_cons(&a,2,((C_word*)t0)[2],t1));}

/* reverse! in k7274 in k7271 in k6978 in k6975 in k6971 in k6680 in k6677 in k6674 in k6671 */
static void C_ccall f_7787(C_word c,C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word ab[11],*a=ab;
if(c!=3) C_bad_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr3,(void*)f_7787,3,t0,t1,t2);}
t3=(C_word)C_i_length(t2);
t4=(C_word)C_a_i_minus(&a,2,t3,C_fix(1));
t5=C_SCHEME_UNDEFINED;
t6=(*a=C_VECTOR_TYPE|1,a[1]=t5,tmp=(C_word)a,a+=2,tmp);
t7=C_set_block_item(t6,0,(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_7800,a[2]=t2,a[3]=t6,a[4]=((C_word)li34),tmp=(C_word)a,a+=5,tmp));
t8=((C_word*)t6)[1];
f_7800(t8,t1,C_fix(0),t4,t2);}

/* do162 in reverse! in k7274 in k7271 in k6978 in k6975 in k6971 in k6680 in k6677 in k6674 in k6671 */
static void C_fcall f_7800(C_word t0,C_word t1,C_word t2,C_word t3,C_word t4){
C_word tmp;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word t14;
C_word t15;
C_word t16;
C_word t17;
C_word t18;
C_word *a;
loop:
a=C_alloc(12);
C_check_for_interrupt;
if(!C_stack_probe(a)){
C_save_and_reclaim((void*)trf_7800,NULL,5,t0,t1,t2,t3,t4);}
if(C_truep((C_word)C_i_lessp(t2,t3))){
t5=(C_word)C_i_car(t4);
t6=(C_word)C_a_i_minus(&a,2,t3,t2);
t7=(C_word)C_i_list_tail(t4,t6);
t8=(C_word)C_i_car(t7);
t9=(C_word)C_i_set_car(t4,t8);
t10=(C_word)C_i_set_car(t7,t5);
t11=(C_word)C_a_i_plus(&a,2,t2,C_fix(1));
t12=(C_word)C_a_i_minus(&a,2,t3,C_fix(1));
t13=(C_word)C_i_cdr(t4);
t15=t1;
t16=t11;
t17=t12;
t18=t13;
t1=t15;
t2=t16;
t3=t17;
t4=t18;
goto loop;}
else{
t5=t1;
((C_proc2)(void*)(*((C_word*)t5+1)))(2,t5,((C_word*)t0)[2]);}}

/* list-set! in k7274 in k7271 in k6978 in k6975 in k6971 in k6680 in k6677 in k6674 in k6671 */
static void C_ccall f_7777(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4){
C_word tmp;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
if(c!=5) C_bad_argc_2(c,5,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr5,(void*)f_7777,5,t0,t1,t2,t3,t4);}
t5=(C_word)C_i_list_tail(t2,t3);
t6=(C_word)C_i_set_car(t5,t4);
t7=t1;
((C_proc2)(void*)(*((C_word*)t7+1)))(2,t7,t4);}

/* concat in k7274 in k7271 in k6978 in k6975 in k6971 in k6680 in k6677 in k6674 in k6671 */
static void C_ccall f_7676(C_word c,C_word t0,C_word t1,...){
C_word tmp;
C_word t2;
va_list v;
C_word *a,c2=c;
C_save_rest(t1,c2,2);
C_check_for_interrupt;
if(!C_demand(c*C_SIZEOF_PAIR+13)){
C_save_and_reclaim((void*)tr2r,(void*)f_7676r,2,t0,t1);}
else{
a=C_alloc((c-2)*3);
t2=C_restore_rest(a,C_rest_count(0));
f_7676r(t0,t1,t2);}}

static void C_ccall f_7676r(C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word *a=C_alloc(13);
t3=(C_word)C_a_i_list(&a,1,C_SCHEME_FALSE);
t4=t3;
t5=(*a=C_VECTOR_TYPE|1,a[1]=t4,tmp=(C_word)a,a+=2,tmp);
t6=C_SCHEME_UNDEFINED;
t7=(*a=C_VECTOR_TYPE|1,a[1]=t6,tmp=(C_word)a,a+=2,tmp);
t8=C_set_block_item(t7,0,(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_7685,a[2]=t5,a[3]=t7,a[4]=t3,a[5]=((C_word)li31),tmp=(C_word)a,a+=6,tmp));
t9=((C_word*)t7)[1];
f_7685(t9,t1,t2);}

/* do142 in concat in k7274 in k7271 in k6978 in k6975 in k6971 in k6680 in k6677 in k6674 in k6671 */
static void C_fcall f_7685(C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word t14;
C_word t15;
C_word t16;
C_word ab[15],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_7685,NULL,3,t0,t1,t2);}
if(C_truep((C_word)C_i_nullp(t2))){
t3=t1;
((C_proc2)(void*)(*((C_word*)t3+1)))(2,t3,(C_word)C_i_cdr(((C_word*)t0)[4]));}
else{
t3=(C_word)C_i_car(t2);
t4=(C_word)C_i_nullp(t3);
t5=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_7701,a[2]=t1,a[3]=((C_word*)t0)[3],a[4]=t2,tmp=(C_word)a,a+=5,tmp);
if(C_truep(t4)){
t6=t5;
f_7701(2,t6,t4);}
else{
t6=(C_word)C_i_car(t2);
if(C_truep((C_word)C_i_pairp(t6))){
t7=(C_word)C_i_car(t2);
t8=C_SCHEME_UNDEFINED;
t9=(*a=C_VECTOR_TYPE|1,a[1]=t8,tmp=(C_word)a,a+=2,tmp);
t10=C_set_block_item(t9,0,(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_7723,a[2]=t9,a[3]=((C_word*)t0)[2],a[4]=((C_word)li30),tmp=(C_word)a,a+=5,tmp));
t11=((C_word*)t9)[1];
f_7723(t11,t5,t7);}
else{
t7=(C_word)C_i_car(t2);
t8=(C_word)C_a_i_list(&a,1,t7);
t9=(C_word)C_i_set_cdr(((C_word*)((C_word*)t0)[2])[1],t8);
t10=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[2])[1]);
t11=C_mutate(((C_word *)((C_word*)t0)[2])+1,t10);
t12=t5;
f_7701(2,t12,t11);}}}}

/* do147 in do142 in concat in k7274 in k7271 in k6978 in k6975 in k6971 in k6680 in k6677 in k6674 in k6671 */
static void C_fcall f_7723(C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word *a;
loop:
a=C_alloc(3);
C_check_for_interrupt;
if(!C_stack_probe(a)){
C_save_and_reclaim((void*)trf_7723,NULL,3,t0,t1,t2);}
if(C_truep((C_word)C_i_nullp(t2))){
t3=t1;
((C_proc2)(void*)(*((C_word*)t3+1)))(2,t3,C_SCHEME_FALSE);}
else{
t3=(C_word)C_i_car(t2);
t4=(C_word)C_a_i_list(&a,1,t3);
t5=(C_word)C_i_set_cdr(((C_word*)((C_word*)t0)[3])[1],t4);
t6=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[3])[1]);
t7=C_mutate(((C_word *)((C_word*)t0)[3])+1,t6);
t8=(C_word)C_i_cdr(t2);
t10=t1;
t11=t8;
t1=t10;
t2=t11;
goto loop;}}

/* k7699 in do142 in concat in k7274 in k7271 in k6978 in k6975 in k6971 in k6680 in k6677 in k6674 in k6671 */
static void C_ccall f_7701(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word *a;
t2=(C_word)C_i_cdr(((C_word*)t0)[4]);
t3=((C_word*)((C_word*)t0)[3])[1];
f_7685(t3,((C_word*)t0)[2],t2);}

/* list* in k7274 in k7271 in k6978 in k6975 in k6971 in k6680 in k6677 in k6674 in k6671 */
static void C_ccall f_7636(C_word c,C_word t0,C_word t1,...){
C_word tmp;
C_word t2;
va_list v;
C_word *a,c2=c;
C_save_rest(t1,c2,2);
C_check_for_interrupt;
if(!C_demand(c*C_SIZEOF_PAIR+4)){
C_save_and_reclaim((void*)tr2r,(void*)f_7636r,2,t0,t1);}
else{
a=C_alloc((c-2)*3);
t2=C_restore_rest(a,C_rest_count(0));
f_7636r(t0,t1,t2);}}

static void C_ccall f_7636r(C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a=C_alloc(4);
if(C_truep((C_word)C_i_nullp(t2))){
C_trace("ChickenBridge.scm: 376  error");
t3=*((C_word*)lf[4]+1);
((C_proc3)C_retrieve_proc(t3))(3,t3,t1,lf[79]);}
else{
t3=(C_word)C_i_cdr(t2);
if(C_truep((C_word)C_i_nullp(t3))){
t4=t1;
((C_proc2)(void*)(*((C_word*)t4+1)))(2,t4,(C_word)C_i_car(t2));}
else{
t4=(C_word)C_i_car(t2);
t5=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_7666,a[2]=t4,a[3]=t1,tmp=(C_word)a,a+=4,tmp);
t6=(C_word)C_i_cdr(t2);
C_apply(4,0,t5,C_retrieve(lf[78]),t6);}}}

/* k7664 in list* in k7274 in k7271 in k6978 in k6975 in k6971 in k6680 in k6677 in k6674 in k6671 */
static void C_ccall f_7666(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word ab[3],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_7666,2,t0,t1);}
t2=((C_word*)t0)[3];
((C_proc2)(void*)(*((C_word*)t2+1)))(2,t2,(C_word)C_a_i_cons(&a,2,((C_word*)t0)[2],t1));}

/* tail in k7274 in k7271 in k6978 in k6975 in k6971 in k6680 in k6677 in k6674 in k6671 */
static void C_ccall f_7546(C_word c,C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word t5;
C_word *a;
if(c!=3) C_bad_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr3,(void*)f_7546,3,t0,t1,t2);}
t3=(C_word)C_i_cdr(t2);
if(C_truep((C_word)C_i_nullp(t3))){
t4=t1;
((C_proc2)(void*)(*((C_word*)t4+1)))(2,t4,t2);}
else{
t4=(C_word)C_i_cdr(t2);
C_trace("ChickenBridge.scm: 376  tail");
t5=C_retrieve(lf[77]);
((C_proc3)C_retrieve_proc(t5))(3,t5,t1,t4);}}

/* butlast in k7274 in k7271 in k6978 in k6975 in k6971 in k6680 in k6677 in k6674 in k6671 */
static void C_ccall f_7498(C_word c,C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word ab[7],*a=ab;
if(c!=3) C_bad_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr3,(void*)f_7498,3,t0,t1,t2);}
t3=(C_word)C_i_cdr(t2);
if(C_truep((C_word)C_i_nullp(t3))){
t4=t1;
((C_proc2)(void*)(*((C_word*)t4+1)))(2,t4,C_SCHEME_END_OF_LIST);}
else{
t4=(C_word)C_i_cddr(t2);
if(C_truep((C_word)C_i_nullp(t4))){
t5=(C_word)C_i_car(t2);
t6=t1;
((C_proc2)(void*)(*((C_word*)t6+1)))(2,t6,(C_word)C_a_i_list(&a,1,t5));}
else{
t5=(C_word)C_i_car(t2);
t6=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_7532,a[2]=t5,a[3]=t1,tmp=(C_word)a,a+=4,tmp);
t7=(C_word)C_i_cdr(t2);
C_trace("ChickenBridge.scm: 376  butlast");
t8=C_retrieve(lf[76]);
((C_proc3)C_retrieve_proc(t8))(3,t8,t6,t7);}}}

/* k7530 in butlast in k7274 in k7271 in k6978 in k6975 in k6971 in k6680 in k6677 in k6674 in k6671 */
static void C_ccall f_7532(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word ab[3],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_7532,2,t0,t1);}
t2=((C_word*)t0)[3];
((C_proc2)(void*)(*((C_word*)t2+1)))(2,t2,(C_word)C_a_i_cons(&a,2,((C_word*)t0)[2],t1));}

/* last in k7274 in k7271 in k6978 in k6975 in k6971 in k6680 in k6677 in k6674 in k6671 */
static void C_ccall f_7475(C_word c,C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word t5;
C_word *a;
if(c!=3) C_bad_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr3,(void*)f_7475,3,t0,t1,t2);}
t3=(C_word)C_i_cdr(t2);
if(C_truep((C_word)C_i_nullp(t3))){
t4=t1;
((C_proc2)(void*)(*((C_word*)t4+1)))(2,t4,(C_word)C_i_car(t2));}
else{
t4=(C_word)C_i_cdr(t2);
C_trace("ChickenBridge.scm: 376  last");
t5=C_retrieve(lf[75]);
((C_proc3)C_retrieve_proc(t5))(3,t5,t1,t4);}}

/* rest in k7274 in k7271 in k6978 in k6975 in k6971 in k6680 in k6677 in k6674 in k6671 */
static void C_ccall f_7469(C_word c,C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word *a;
if(c!=3) C_bad_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr3,(void*)f_7469,3,t0,t1,t2);}
t3=t1;
((C_proc2)(void*)(*((C_word*)t3+1)))(2,t3,(C_word)C_i_cdr(t2));}

/* tenth in k7274 in k7271 in k6978 in k6975 in k6971 in k6680 in k6677 in k6674 in k6671 */
static void C_ccall f_7454(C_word c,C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word t5;
C_word *a;
if(c!=3) C_bad_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr3,(void*)f_7454,3,t0,t1,t2);}
t3=(C_word)C_i_cddddr(t2);
t4=(C_word)C_i_cddddr(t3);
t5=t1;
((C_proc2)(void*)(*((C_word*)t5+1)))(2,t5,(C_word)C_i_cadr(t4));}

/* ninth in k7274 in k7271 in k6978 in k6975 in k6971 in k6680 in k6677 in k6674 in k6671 */
static void C_ccall f_7440(C_word c,C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word t5;
C_word *a;
if(c!=3) C_bad_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr3,(void*)f_7440,3,t0,t1,t2);}
t3=(C_word)C_i_cddddr(t2);
t4=(C_word)C_i_cddddr(t3);
t5=t1;
((C_proc2)(void*)(*((C_word*)t5+1)))(2,t5,(C_word)C_i_car(t4));}

/* eighth in k7274 in k7271 in k6978 in k6975 in k6971 in k6680 in k6677 in k6674 in k6671 */
static void C_ccall f_7430(C_word c,C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word *a;
if(c!=3) C_bad_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr3,(void*)f_7430,3,t0,t1,t2);}
t3=(C_word)C_i_cddddr(t2);
t4=t1;
((C_proc2)(void*)(*((C_word*)t4+1)))(2,t4,(C_word)C_i_cadddr(t3));}

/* seventh in k7274 in k7271 in k6978 in k6975 in k6971 in k6680 in k6677 in k6674 in k6671 */
static void C_ccall f_7420(C_word c,C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word *a;
if(c!=3) C_bad_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr3,(void*)f_7420,3,t0,t1,t2);}
t3=(C_word)C_i_cddddr(t2);
t4=t1;
((C_proc2)(void*)(*((C_word*)t4+1)))(2,t4,(C_word)C_i_caddr(t3));}

/* sixth in k7274 in k7271 in k6978 in k6975 in k6971 in k6680 in k6677 in k6674 in k6671 */
static void C_ccall f_7410(C_word c,C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word *a;
if(c!=3) C_bad_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr3,(void*)f_7410,3,t0,t1,t2);}
t3=(C_word)C_i_cddddr(t2);
t4=t1;
((C_proc2)(void*)(*((C_word*)t4+1)))(2,t4,(C_word)C_i_cadr(t3));}

/* fifth in k7274 in k7271 in k6978 in k6975 in k6971 in k6680 in k6677 in k6674 in k6671 */
static void C_ccall f_7400(C_word c,C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word *a;
if(c!=3) C_bad_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr3,(void*)f_7400,3,t0,t1,t2);}
t3=(C_word)C_i_cddddr(t2);
t4=t1;
((C_proc2)(void*)(*((C_word*)t4+1)))(2,t4,(C_word)C_i_car(t3));}

/* shell in k7274 in k7271 in k6978 in k6975 in k6971 in k6680 in k6677 in k6674 in k6671 */
static void C_ccall f_7374(C_word c,C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[7],*a=ab;
if(c!=3) C_bad_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr3,(void*)f_7374,3,t0,t1,t2);}
t3=lf[48];
t4=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_7322,a[2]=t3,a[3]=t1,tmp=(C_word)a,a+=4,tmp);
t5=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_7372,a[2]=t4,tmp=(C_word)a,a+=3,tmp);
C_trace("ChickenBridge.scm: 353  string-append");
t6=*((C_word*)lf[53]+1);
((C_proc5)C_retrieve_proc(t6))(5,t6,t5,t2,lf[59],t3);}

/* k7370 in shell in k7274 in k7271 in k6978 in k6975 in k6971 in k6680 in k6677 in k6674 in k6671 */
static void C_ccall f_7372(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 353  system");
t2=C_retrieve(lf[52]);
((C_proc3)C_retrieve_proc(t2))(3,t2,((C_word*)t0)[2],t1);}

/* k7320 in shell in k7274 in k7271 in k6978 in k6975 in k6971 in k6680 in k6677 in k6674 in k6671 */
static void C_ccall f_7322(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[10],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_7322,2,t0,t1);}
t2=lf[49];
t3=(*a=C_VECTOR_TYPE|1,a[1]=t2,tmp=(C_word)a,a+=2,tmp);
t4=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_7325,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=t3,tmp=(C_word)a,a+=5,tmp);
t5=(C_word)C_a_i_list(&a,1,C_make_character(10));
C_trace("list->string");
t6=C_retrieve(lf[58]);
((C_proc3)(void*)(*((C_word*)t6+1)))(3,t6,t4,t5);}

/* k7323 in k7320 in shell in k7274 in k7271 in k6978 in k6975 in k6971 in k6680 in k6677 in k6674 in k6671 */
static void C_ccall f_7325(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[6],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_7325,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_7328,a[2]=t1,a[3]=((C_word*)t0)[2],a[4]=((C_word*)t0)[3],a[5]=((C_word*)t0)[4],tmp=(C_word)a,a+=6,tmp);
C_trace("ChickenBridge.scm: 356  open-input-file");
t3=*((C_word*)lf[57]+1);
((C_proc3)C_retrieve_proc(t3))(3,t3,t2,((C_word*)t0)[2]);}

/* k7326 in k7323 in k7320 in shell in k7274 in k7271 in k6978 in k6975 in k6971 in k6680 in k6677 in k6674 in k6671 */
static void C_ccall f_7328(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_7328,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_7331,a[2]=((C_word*)t0)[2],a[3]=t1,a[4]=((C_word*)t0)[3],a[5]=((C_word*)t0)[4],a[6]=((C_word*)t0)[5],tmp=(C_word)a,a+=7,tmp);
C_trace("ChickenBridge.scm: 357  read-line");
t3=C_retrieve(lf[56]);
((C_proc3)C_retrieve_proc(t3))(3,t3,t2,t1);}

/* k7329 in k7326 in k7323 in k7320 in shell in k7274 in k7271 in k6978 in k6975 in k6971 in k6680 in k6677 in k6674 in k6671 */
static void C_ccall f_7331(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word ab[18],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_7331,2,t0,t1);}
t2=t1;
t3=(*a=C_VECTOR_TYPE|1,a[1]=t2,tmp=(C_word)a,a+=2,tmp);
t4=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_7334,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],tmp=(C_word)a,a+=6,tmp);
t5=C_SCHEME_UNDEFINED;
t6=(*a=C_VECTOR_TYPE|1,a[1]=t5,tmp=(C_word)a,a+=2,tmp);
t7=C_set_block_item(t6,0,(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_7346,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=t6,a[5]=((C_word*)t0)[6],a[6]=t3,a[7]=((C_word)li17),tmp=(C_word)a,a+=8,tmp));
t8=((C_word*)t6)[1];
f_7346(t8,t4);}

/* do107 in k7329 in k7326 in k7323 in k7320 in shell in k7274 in k7271 in k6978 in k6975 in k6971 in k6680 in k6677 in k6674 in k6671 */
static void C_fcall f_7346(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_7346,NULL,2,t0,t1);}
if(C_truep((C_word)C_eofp(((C_word*)((C_word*)t0)[6])[1]))){
t2=t1;
((C_proc2)(void*)(*((C_word*)t2+1)))(2,t2,C_SCHEME_FALSE);}
else{
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_7357,a[2]=((C_word*)t0)[3],a[3]=t1,a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[5],tmp=(C_word)a,a+=7,tmp);
C_trace("ChickenBridge.scm: 360  string-append");
t3=*((C_word*)lf[53]+1);
((C_proc5)C_retrieve_proc(t3))(5,t3,t2,((C_word*)((C_word*)t0)[5])[1],((C_word*)((C_word*)t0)[6])[1],((C_word*)t0)[2]);}}

/* k7355 in do107 in k7329 in k7326 in k7323 in k7320 in shell in k7274 in k7271 in k6978 in k6975 in k6971 in k6680 in k6677 in k6674 in k6671 */
static void C_ccall f_7357(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[5],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_7357,2,t0,t1);}
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_7361,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],tmp=(C_word)a,a+=5,tmp);
C_trace("ChickenBridge.scm: 361  read-line");
t4=C_retrieve(lf[56]);
((C_proc3)C_retrieve_proc(t4))(3,t4,t3,((C_word*)t0)[2]);}

/* k7359 in k7355 in do107 in k7329 in k7326 in k7323 in k7320 in shell in k7274 in k7271 in k6978 in k6975 in k6971 in k6680 in k6677 in k6674 in k6671 */
static void C_ccall f_7361(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[4])+1,t1);
t3=((C_word*)((C_word*)t0)[3])[1];
f_7346(t3,((C_word*)t0)[2]);}

/* k7332 in k7329 in k7326 in k7323 in k7320 in shell in k7274 in k7271 in k6978 in k6975 in k6971 in k6680 in k6677 in k6674 in k6671 */
static void C_ccall f_7334(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[5],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_7334,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_7337,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],tmp=(C_word)a,a+=5,tmp);
C_trace("ChickenBridge.scm: 362  close-input-port");
t3=*((C_word*)lf[55]+1);
((C_proc3)C_retrieve_proc(t3))(3,t3,t2,((C_word*)t0)[2]);}

/* k7335 in k7332 in k7329 in k7326 in k7323 in k7320 in shell in k7274 in k7271 in k6978 in k6975 in k6971 in k6680 in k6677 in k6674 in k6671 */
static void C_ccall f_7337(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_7337,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_7340,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],tmp=(C_word)a,a+=4,tmp);
t3=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_7344,a[2]=t2,tmp=(C_word)a,a+=3,tmp);
C_trace("ChickenBridge.scm: 363  string-append");
t4=*((C_word*)lf[53]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t3,lf[54],((C_word*)t0)[2]);}

/* k7342 in k7335 in k7332 in k7329 in k7326 in k7323 in k7320 in shell in k7274 in k7271 in k6978 in k6975 in k6971 in k6680 in k6677 in k6674 in k6671 */
static void C_ccall f_7344(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 363  system");
t2=C_retrieve(lf[52]);
((C_proc3)C_retrieve_proc(t2))(3,t2,((C_word*)t0)[2],t1);}

/* k7338 in k7335 in k7332 in k7329 in k7326 in k7323 in k7320 in shell in k7274 in k7271 in k6978 in k6975 in k6971 in k6680 in k6677 in k6674 in k6671 */
static void C_ccall f_7340(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[3],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_7340,2,t0,t1);}
t2=((C_word*)((C_word*)t0)[3])[1];
t3=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_7381,a[2]=((C_word*)t0)[2],tmp=(C_word)a,a+=3,tmp);
if(C_truep((C_word)C_i_equalp(t2,lf[50]))){
t4=t3;
f_7381(2,t4,C_SCHEME_UNDEFINED);}
else{
C_trace("ChickenBridge.scm: 369  print");
t4=*((C_word*)lf[51]+1);
((C_proc3)C_retrieve_proc(t4))(3,t4,t3,t2);}}

/* k7379 in k7338 in k7335 in k7332 in k7329 in k7326 in k7323 in k7320 in shell in k7274 in k7271 in k6978 in k6975 in k6971 in k6680 in k6677 in k6674 in k6671 */
static void C_ccall f_7381(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 370  values");
C_values(2,0,((C_word*)t0)[2]);}

/* chdir in k7274 in k7271 in k6978 in k6975 in k6971 in k6680 in k6677 in k6674 in k6671 */
static void C_ccall f_7289(C_word c,C_word t0,C_word t1,...){
C_word tmp;
C_word t2;
va_list v;
C_word *a,c2=c;
C_save_rest(t1,c2,2);
C_check_for_interrupt;
if(!C_demand(c*C_SIZEOF_PAIR+3)){
C_save_and_reclaim((void*)tr2rv,(void*)f_7289r,2,t0,t1);}
else{
a=C_alloc((c-2)*3);
t2=C_restore_rest_vector(a,C_rest_count(0));
f_7289r(t0,t1,t2);}}

static void C_ccall f_7289r(C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word t5;
C_word *a=C_alloc(3);
t3=(C_word)C_vemptyp(t2);
t4=(C_truep(t3)?lf[45]:(C_word)C_i_vector_ref(t2,C_fix(0)));
t5=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_7298,a[2]=((C_word)li15),tmp=(C_word)a,a+=3,tmp);
((C_proc3)(void*)(*((C_word*)t5+1)))(3,t5,t1,t4);}

/* f_7298 in chdir in k7274 in k7271 in k6978 in k6975 in k6971 in k6680 in k6677 in k6674 in k6671 */
static void C_ccall f_7298(C_word c,C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word t5;
C_word ab[3],*a=ab;
if(c!=3) C_bad_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr3,(void*)f_7298,3,t0,t1,t2);}
t3=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_7303,a[2]=t1,tmp=(C_word)a,a+=3,tmp);
if(C_truep(t2)){
t4=(C_word)C_i_foreign_string_argumentp(t2);
C_trace("##sys#make-c-string");
t5=C_retrieve(lf[46]);
((C_proc3)C_retrieve_proc(t5))(3,t5,t3,t4);}
else{
t4=t3;
f_7303(2,t4,C_SCHEME_FALSE);}}

/* k7301 */
static void C_ccall f_7303(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
t2=((C_word*)t0)[2];
((C_proc2)(void*)(*((C_word*)t2+1)))(2,t2,(C_word)stub96(C_SCHEME_UNDEFINED,t1));}

/* cwd in k7274 in k7271 in k6978 in k6975 in k6971 in k6680 in k6677 in k6674 in k6671 */
static void C_ccall f_7278(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word ab[3],*a=ab;
if(c!=2) C_bad_argc_2(c,2,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_7278,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_7283,a[2]=((C_word)li13),tmp=(C_word)a,a+=3,tmp);
((C_proc2)(void*)(*((C_word*)t2+1)))(2,t2,t1);}

/* f_7283 in cwd in k7274 in k7271 in k6978 in k6975 in k6971 in k6680 in k6677 in k6674 in k6671 */
static void C_ccall f_7283(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[5],*a=ab;
if(c!=2) C_bad_argc_2(c,2,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_7283,2,t0,t1);}
t2=(C_word)C_a_i_bytevector(&a,1,C_fix(3));
C_trace("##sys#peek-c-string");
t3=*((C_word*)lf[43]+1);
((C_proc4)(void*)(*((C_word*)t3+1)))(4,t3,t1,(C_word)stub91(t2),C_fix(0));}

/* expand-send in k6978 in k6975 in k6971 in k6680 in k6677 in k6674 in k6671 */
static void C_ccall f_6982(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4){
C_word tmp;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word ab[17],*a=ab;
if(c!=5) C_bad_argc_2(c,5,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr5,(void*)f_6982,5,t0,t1,t2,t3,t4);}
t5=(*a=C_VECTOR_TYPE|1,a[1]=t3,tmp=(C_word)a,a+=2,tmp);
t6=t4;
t7=(C_truep(t6)?t6:(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_7262,a[2]=((C_word)li5),tmp=(C_word)a,a+=3,tmp));
t8=t4;
t9=(C_truep(t8)?(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_7251,a[2]=((C_word)li6),tmp=(C_word)a,a+=3,tmp):(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_7260,a[2]=((C_word)li7),tmp=(C_word)a,a+=3,tmp));
t10=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_6992,a[2]=t9,a[3]=t7,a[4]=t1,a[5]=t5,tmp=(C_word)a,a+=6,tmp);
if(C_truep((C_word)C_i_symbolp(t2))){
C_trace("ChickenBridge.scm: 266  symbol->string");
t11=*((C_word*)lf[25]+1);
((C_proc3)C_retrieve_proc(t11))(3,t11,t10,t2);}
else{
t11=t10;
f_6992(2,t11,t2);}}

/* k6990 in expand-send in k6978 in k6975 in k6971 in k6680 in k6677 in k6674 in k6671 */
static void C_ccall f_6992(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[10],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_6992,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_6995,a[2]=((C_word*)t0)[2],a[3]=t1,a[4]=((C_word*)t0)[3],a[5]=((C_word*)t0)[4],a[6]=((C_word*)t0)[5],tmp=(C_word)a,a+=7,tmp);
t3=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_7243,a[2]=((C_word)li11),tmp=(C_word)a,a+=3,tmp);
C_trace("ChickenBridge.scm: 267  hash-table-ref");
t4=*((C_word*)lf[41]+1);
((C_proc5)C_retrieve_proc(t4))(5,t4,t2,C_retrieve(lf[29]),t1,t3);}

/* a7242 in k6990 in expand-send in k6978 in k6975 in k6971 in k6680 in k6677 in k6674 in k6671 */
static void C_ccall f_7243(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
if(c!=2) C_bad_argc_2(c,2,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_7243,2,t0,t1);}
t2=t1;
((C_proc2)(void*)(*((C_word*)t2+1)))(2,t2,C_SCHEME_FALSE);}

/* k6993 in k6990 in expand-send in k6978 in k6975 in k6971 in k6680 in k6677 in k6674 in k6671 */
static void C_ccall f_6995(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[8],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_6995,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_6998,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=t1,a[7]=((C_word*)t0)[6],tmp=(C_word)a,a+=8,tmp);
t3=t1;
if(C_truep(t3)){
t4=t2;
f_6998(2,t4,C_SCHEME_UNDEFINED);}
else{
C_trace("ChickenBridge.scm: 268  ferror");
t4=((C_word*)t0)[4];
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[40],((C_word*)t0)[3]);}}

/* k6996 in k6993 in k6990 in expand-send in k6978 in k6975 in k6971 in k6680 in k6677 in k6674 in k6671 */
static void C_ccall f_6998(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word ab[14],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_6998,2,t0,t1);}
t2=((C_word*)((C_word*)t0)[7])[1];
t3=(C_word)C_i_car(((C_word*)t0)[6]);
t4=(C_word)C_i_cdr(((C_word*)t0)[6]);
t5=C_SCHEME_FALSE;
t6=(*a=C_VECTOR_TYPE|1,a[1]=t5,tmp=(C_word)a,a+=2,tmp);
t7=(C_word)C_i_length(t4);
t8=(*a=C_CLOSURE_TYPE|11,a[1]=(C_word)f_7013,a[2]=t2,a[3]=t7,a[4]=((C_word*)t0)[2],a[5]=((C_word*)t0)[3],a[6]=((C_word*)t0)[4],a[7]=t6,a[8]=t4,a[9]=((C_word*)t0)[7],a[10]=t3,a[11]=((C_word*)t0)[5],tmp=(C_word)a,a+=12,tmp);
if(C_truep((C_word)C_i_nequalp(t7,C_fix(1)))){
t9=(C_word)C_i_car(t4);
t10=t8;
f_7013(t10,(C_word)C_eqp(t9,lf[39]));}
else{
t9=t8;
f_7013(t9,C_SCHEME_FALSE);}}

/* k7011 in k6996 in k6993 in k6990 in expand-send in k6978 in k6975 in k6971 in k6680 in k6677 in k6674 in k6671 */
static void C_fcall f_7013(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[15],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_7013,NULL,2,t0,t1);}
if(C_truep(t1)){
t2=((C_word*)t0)[11];
((C_proc2)(void*)(*((C_word*)t2+1)))(2,t2,(C_word)C_a_i_cons(&a,2,((C_word*)t0)[10],((C_word*)((C_word*)t0)[9])[1]));}
else{
t2=(*a=C_CLOSURE_TYPE|11,a[1]=(C_word)f_7023,a[2]=((C_word*)t0)[11],a[3]=((C_word*)t0)[2],a[4]=((C_word*)t0)[3],a[5]=((C_word*)t0)[4],a[6]=((C_word*)t0)[5],a[7]=((C_word*)t0)[6],a[8]=((C_word*)t0)[7],a[9]=((C_word*)t0)[8],a[10]=((C_word*)t0)[10],a[11]=((C_word*)t0)[9],tmp=(C_word)a,a+=12,tmp);
C_trace("ChickenBridge.scm: 282  append");
t3=*((C_word*)lf[18]+1);
((C_proc4)C_retrieve_proc(t3))(4,t3,t2,((C_word*)t0)[8],C_SCHEME_END_OF_LIST);}}

/* k7021 in k7011 in k6996 in k6993 in k6990 in expand-send in k6978 in k6975 in k6971 in k6680 in k6677 in k6674 in k6671 */
static void C_ccall f_7023(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[15],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_7023,2,t0,t1);}
t2=C_SCHEME_UNDEFINED;
t3=(*a=C_VECTOR_TYPE|1,a[1]=t2,tmp=(C_word)a,a+=2,tmp);
t4=C_set_block_item(t3,0,(*a=C_CLOSURE_TYPE|12,a[1]=(C_word)f_7025,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],a[7]=((C_word*)t0)[8],a[8]=t3,a[9]=((C_word*)t0)[9],a[10]=((C_word*)t0)[10],a[11]=((C_word*)t0)[11],a[12]=((C_word)li10),tmp=(C_word)a,a+=13,tmp));
t5=((C_word*)t3)[1];
f_7025(t5,((C_word*)t0)[2],t1,C_SCHEME_FALSE,C_SCHEME_FALSE,C_fix(0));}

/* do63 in k7021 in k7011 in k6996 in k6993 in k6990 in expand-send in k6978 in k6975 in k6971 in k6680 in k6677 in k6674 in k6671 */
static void C_fcall f_7025(C_word t0,C_word t1,C_word t2,C_word t3,C_word t4,C_word t5){
C_word tmp;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word t14;
C_word t15;
C_word t16;
C_word ab[38],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_7025,NULL,6,t0,t1,t2,t3,t4,t5);}
t6=(*a=C_VECTOR_TYPE|1,a[1]=t3,tmp=(C_word)a,a+=2,tmp);
t7=(*a=C_VECTOR_TYPE|1,a[1]=t4,tmp=(C_word)a,a+=2,tmp);
t8=(*a=C_VECTOR_TYPE|1,a[1]=t5,tmp=(C_word)a,a+=2,tmp);
if(C_truep((C_word)C_i_nullp(((C_word*)((C_word*)t0)[11])[1]))){
t9=C_SCHEME_UNDEFINED;
t10=(*a=C_VECTOR_TYPE|1,a[1]=t9,tmp=(C_word)a,a+=2,tmp);
t11=C_set_block_item(t10,0,(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_7037,a[2]=((C_word*)t0)[9],a[3]=t10,a[4]=t2,a[5]=((C_word*)t0)[10],a[6]=((C_word)li8),tmp=(C_word)a,a+=7,tmp));
t12=((C_word*)t10)[1];
f_7037(t12,t1,t2);}
else{
t9=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_7078,a[2]=t8,a[3]=t7,a[4]=t6,a[5]=t2,a[6]=t1,a[7]=((C_word*)t0)[8],tmp=(C_word)a,a+=8,tmp);
t10=(*a=C_CLOSURE_TYPE|14,a[1]=(C_word)f_7084,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=t8,a[5]=((C_word*)t0)[4],a[6]=((C_word*)t0)[5],a[7]=((C_word*)t0)[6],a[8]=t2,a[9]=t7,a[10]=((C_word*)t0)[9],a[11]=t6,a[12]=((C_word*)t0)[11],a[13]=t9,a[14]=((C_word*)t0)[7],tmp=(C_word)a,a+=15,tmp);
t11=((C_word*)((C_word*)t0)[7])[1];
if(C_truep(t11)){
t12=t10;
f_7084(2,t12,C_SCHEME_FALSE);}
else{
t12=(C_word)C_i_car(((C_word*)((C_word*)t0)[11])[1]);
C_trace("ChickenBridge.scm: 297  keyword?");
t13=C_retrieve(lf[13]);
((C_proc3)C_retrieve_proc(t13))(3,t13,t10,t12);}}}

/* k7082 in do63 in k7021 in k7011 in k6996 in k6993 in k6990 in expand-send in k6978 in k6975 in k6971 in k6680 in k6677 in k6674 in k6671 */
static void C_ccall f_7084(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word t14;
C_word ab[26],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_7084,2,t0,t1);}
if(C_truep(t1)){
t2=C_set_block_item(((C_word*)t0)[14],0,C_SCHEME_TRUE);
t3=((C_word*)t0)[13];
f_7078(t3,t2);}
else{
t2=((C_word*)((C_word*)t0)[14])[1];
if(C_truep(t2)){
t3=(C_word)C_i_car(((C_word*)((C_word*)t0)[12])[1]);
t4=C_mutate(((C_word *)((C_word*)t0)[11])+1,t3);
t5=(C_word)C_i_assoc(((C_word*)((C_word*)t0)[11])[1],((C_word*)t0)[10]);
t6=C_mutate(((C_word *)((C_word*)t0)[9])+1,t5);
t7=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[12])[1]);
t8=C_mutate(((C_word *)((C_word*)t0)[12])+1,t7);
t9=(*a=C_CLOSURE_TYPE|9,a[1]=(C_word)f_7138,a[2]=((C_word*)t0)[11],a[3]=((C_word*)t0)[5],a[4]=((C_word*)t0)[6],a[5]=((C_word*)t0)[7],a[6]=((C_word*)t0)[13],a[7]=((C_word*)t0)[12],a[8]=((C_word*)t0)[8],a[9]=((C_word*)t0)[9],tmp=(C_word)a,a+=10,tmp);
t10=(*a=C_CLOSURE_TYPE|9,a[1]=(C_word)f_7211,a[2]=((C_word*)t0)[10],a[3]=((C_word*)t0)[9],a[4]=((C_word*)t0)[11],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],a[7]=t9,a[8]=((C_word*)t0)[7],a[9]=((C_word*)t0)[12],tmp=(C_word)a,a+=10,tmp);
C_trace("ChickenBridge.scm: 318  keyword?");
t11=C_retrieve(lf[13]);
((C_proc3)C_retrieve_proc(t11))(3,t11,t10,((C_word*)((C_word*)t0)[11])[1]);}
else{
t3=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_7094,a[2]=((C_word*)t0)[13],a[3]=((C_word*)t0)[12],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[8],tmp=(C_word)a,a+=6,tmp);
if(C_truep((C_word)C_i_nequalp(((C_word*)((C_word*)t0)[4])[1],((C_word*)t0)[3]))){
t4=(C_word)C_i_length(((C_word*)t0)[2]);
C_trace("ChickenBridge.scm: 308  ferror");
t5=((C_word*)t0)[7];
((C_proc6)C_retrieve_proc(t5))(6,t5,t3,lf[38],((C_word*)t0)[6],((C_word*)t0)[3],t4);}
else{
t4=t3;
f_7094(2,t4,C_SCHEME_UNDEFINED);}}}}

/* k7092 in k7082 in do63 in k7021 in k7011 in k6996 in k6993 in k6990 in expand-send in k6978 in k6975 in k6971 in k6680 in k6677 in k6674 in k6671 */
static void C_ccall f_7094(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word ab[4],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_7094,2,t0,t1);}
t2=(C_word)C_i_list_tail(((C_word*)t0)[5],((C_word*)((C_word*)t0)[4])[1]);
t3=(C_word)C_i_car(((C_word*)((C_word*)t0)[3])[1]);
t4=(C_word)C_i_set_car(t2,t3);
t5=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=(C_word)C_a_i_plus(&a,2,((C_word*)((C_word*)t0)[4])[1],C_fix(1));
t8=C_mutate(((C_word *)((C_word*)t0)[4])+1,t7);
t9=((C_word*)t0)[2];
f_7078(t9,t8);}

/* k7209 in k7082 in do63 in k7021 in k7011 in k6996 in k6993 in k6990 in expand-send in k6978 in k6975 in k6971 in k6680 in k6677 in k6674 in k6671 */
static void C_ccall f_7211(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[15],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_7211,2,t0,t1);}
if(C_truep(t1)){
if(C_truep((C_word)C_i_nullp(((C_word*)((C_word*)t0)[9])[1]))){
t2=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_7184,a[2]=((C_word*)t0)[6],a[3]=((C_word*)t0)[7],a[4]=((C_word*)t0)[8],tmp=(C_word)a,a+=5,tmp);
C_trace("ChickenBridge.scm: 323  keyname");
t3=((C_word*)t0)[5];
((C_proc3)C_retrieve_proc(t3))(3,t3,t2,((C_word*)((C_word*)t0)[4])[1]);}
else{
t2=((C_word*)((C_word*)t0)[3])[1];
if(C_truep(t2)){
t3=((C_word*)t0)[7];
f_7138(2,t3,C_SCHEME_UNDEFINED);}
else{
t3=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_7197,a[2]=((C_word*)t0)[4],a[3]=((C_word*)t0)[6],a[4]=((C_word*)t0)[7],a[5]=((C_word*)t0)[8],tmp=(C_word)a,a+=6,tmp);
t4=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_7199,a[2]=((C_word*)t0)[5],a[3]=((C_word)li9),tmp=(C_word)a,a+=4,tmp);
C_trace("map");
t5=*((C_word*)lf[17]+1);
((C_proc4)(void*)(*((C_word*)t5+1)))(4,t5,t3,t4,((C_word*)t0)[2]);}}}
else{
C_trace("ChickenBridge.scm: 319  ferror");
t2=((C_word*)t0)[8];
((C_proc5)C_retrieve_proc(t2))(5,t2,((C_word*)t0)[7],lf[37],((C_word*)t0)[6],((C_word*)((C_word*)t0)[4])[1]);}}

/* a7198 in k7209 in k7082 in do63 in k7021 in k7011 in k6996 in k6993 in k6990 in expand-send in k6978 in k6975 in k6971 in k6680 in k6677 in k6674 in k6671 */
static void C_ccall f_7199(C_word c,C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word *a;
if(c!=3) C_bad_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr3,(void*)f_7199,3,t0,t1,t2);}
t3=(C_word)C_i_car(t2);
C_trace("ChickenBridge.scm: 327  keyname");
t4=((C_word*)t0)[2];
((C_proc3)C_retrieve_proc(t4))(3,t4,t1,t3);}

/* k7195 in k7209 in k7082 in do63 in k7021 in k7011 in k6996 in k6993 in k6990 in expand-send in k6978 in k6975 in k6971 in k6680 in k6677 in k6674 in k6671 */
static void C_ccall f_7197(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 325  ferror");
t2=((C_word*)t0)[5];
((C_proc6)C_retrieve_proc(t2))(6,t2,((C_word*)t0)[4],lf[36],((C_word*)t0)[3],((C_word*)((C_word*)t0)[2])[1],t1);}

/* k7182 in k7209 in k7082 in do63 in k7021 in k7011 in k6996 in k6993 in k6990 in expand-send in k6978 in k6975 in k6971 in k6680 in k6677 in k6674 in k6671 */
static void C_ccall f_7184(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 322  ferror");
t2=((C_word*)t0)[4];
((C_proc5)C_retrieve_proc(t2))(5,t2,((C_word*)t0)[3],lf[35],((C_word*)t0)[2],t1);}

/* k7136 in k7082 in do63 in k7021 in k7011 in k6996 in k6993 in k6990 in expand-send in k6978 in k6975 in k6971 in k6680 in k6677 in k6674 in k6671 */
static void C_ccall f_7138(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[10],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_7138,2,t0,t1);}
t2=(C_word)C_i_member(((C_word*)((C_word*)t0)[9])[1],((C_word*)t0)[8]);
t3=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_7144,a[2]=((C_word*)t0)[6],a[3]=t2,a[4]=((C_word*)t0)[7],tmp=(C_word)a,a+=5,tmp);
if(C_truep(t2)){
t4=t3;
f_7144(2,t4,C_SCHEME_UNDEFINED);}
else{
t4=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_7165,a[2]=((C_word*)t0)[4],a[3]=t3,a[4]=((C_word*)t0)[5],tmp=(C_word)a,a+=5,tmp);
C_trace("ChickenBridge.scm: 334  keyname");
t5=((C_word*)t0)[3];
((C_proc3)C_retrieve_proc(t5))(3,t5,t4,((C_word*)((C_word*)t0)[2])[1]);}}

/* k7163 in k7136 in k7082 in do63 in k7021 in k7011 in k6996 in k6993 in k6990 in expand-send in k6978 in k6975 in k6971 in k6680 in k6677 in k6674 in k6671 */
static void C_ccall f_7165(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 333  ferror");
t2=((C_word*)t0)[4];
((C_proc5)C_retrieve_proc(t2))(5,t2,((C_word*)t0)[3],lf[34],((C_word*)t0)[2],t1);}

/* k7142 in k7136 in k7082 in do63 in k7021 in k7011 in k6996 in k6993 in k6990 in expand-send in k6978 in k6975 in k6971 in k6680 in k6677 in k6674 in k6671 */
static void C_ccall f_7144(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word *a;
t2=(C_word)C_i_car(((C_word*)((C_word*)t0)[4])[1]);
t3=(C_word)C_i_set_car(((C_word*)t0)[3],t2);
t4=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
t5=C_mutate(((C_word *)((C_word*)t0)[4])+1,t4);
t6=((C_word*)t0)[2];
f_7078(t6,t5);}

/* k7076 in do63 in k7021 in k7011 in k6996 in k6993 in k6990 in expand-send in k6978 in k6975 in k6971 in k6680 in k6677 in k6674 in k6671 */
static void C_fcall f_7078(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
t2=((C_word*)((C_word*)t0)[7])[1];
f_7025(t2,((C_word*)t0)[6],((C_word*)t0)[5],((C_word*)((C_word*)t0)[4])[1],((C_word*)((C_word*)t0)[3])[1],((C_word*)((C_word*)t0)[2])[1]);}

/* do69 in do63 in k7021 in k7011 in k6996 in k6993 in k6990 in expand-send in k6978 in k6975 in k6971 in k6680 in k6677 in k6674 in k6671 */
static void C_fcall f_7037(C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word ab[8],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_7037,NULL,3,t0,t1,t2);}
if(C_truep((C_word)C_i_nullp(t2))){
t3=t1;
((C_proc2)(void*)(*((C_word*)t3+1)))(2,t3,(C_word)C_a_i_cons(&a,2,((C_word*)t0)[5],((C_word*)t0)[4]));}
else{
t3=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_7050,a[2]=t1,a[3]=((C_word*)t0)[3],a[4]=t2,tmp=(C_word)a,a+=5,tmp);
t4=(C_word)C_i_car(t2);
if(C_truep((C_word)C_i_member(t4,((C_word*)t0)[2]))){
t5=(C_word)C_i_car(t2);
t6=(C_word)C_i_cadr(t5);
t7=t3;
f_7050(t7,(C_word)C_i_set_car(t2,t6));}
else{
t5=t3;
f_7050(t5,C_SCHEME_UNDEFINED);}}}

/* k7048 in do69 in do63 in k7021 in k7011 in k6996 in k6993 in k6990 in expand-send in k6978 in k6975 in k6971 in k6680 in k6677 in k6674 in k6671 */
static void C_fcall f_7050(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word *a;
t2=(C_word)C_i_cdr(((C_word*)t0)[4]);
t3=((C_word*)((C_word*)t0)[3])[1];
f_7037(t3,((C_word*)t0)[2],t2);}

/* f_7260 in expand-send in k6978 in k6975 in k6971 in k6680 in k6677 in k6674 in k6671 */
static void C_ccall f_7260(C_word c,C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word *a;
if(c!=3) C_bad_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr3,(void*)f_7260,3,t0,t1,t2);}
t3=t1;
((C_proc2)(void*)(*((C_word*)t3+1)))(2,t3,t2);}

/* f_7251 in expand-send in k6978 in k6975 in k6971 in k6680 in k6677 in k6674 in k6671 */
static void C_ccall f_7251(C_word c,C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word ab[3],*a=ab;
if(c!=3) C_bad_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr3,(void*)f_7251,3,t0,t1,t2);}
t3=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_7259,a[2]=t1,tmp=(C_word)a,a+=3,tmp);
C_trace("ChickenBridge.scm: 264  keyword->string");
t4=C_retrieve(lf[33]);
((C_proc3)C_retrieve_proc(t4))(3,t4,t3,t2);}

/* k7257 */
static void C_ccall f_7259(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 264  sprintf");
t2=C_retrieve(lf[31]);
((C_proc4)C_retrieve_proc(t2))(4,t2,((C_word*)t0)[2],lf[32],t1);}

/* f_7262 in expand-send in k6978 in k6975 in k6971 in k6680 in k6677 in k6674 in k6671 */
static void C_ccall f_7262(C_word c,C_word t0,C_word t1,C_word t2,...){
C_word tmp;
C_word t3;
va_list v;
C_word *a,c2=c;
C_save_rest(t2,c2,3);
if(c<3) C_bad_min_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_demand(c*C_SIZEOF_PAIR+3)){
C_save_and_reclaim((void*)tr3r,(void*)f_7262r,3,t0,t1,t2);}
else{
a=C_alloc((c-3)*3);
t3=C_restore_rest(a,C_rest_count(0));
f_7262r(t0,t1,t2,t3);}}

static void C_ccall f_7262r(C_word t0,C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word *a=C_alloc(3);
t4=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_7270,a[2]=t1,tmp=(C_word)a,a+=3,tmp);
C_apply(5,0,t4,C_retrieve(lf[31]),t2,t3);}

/* k7268 */
static void C_ccall f_7270(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 260  error");
t2=*((C_word*)lf[4]+1);
((C_proc3)C_retrieve_proc(t2))(3,t2,((C_word*)t0)[2],t1);}

/* expand-optkeys in k6680 in k6677 in k6674 in k6671 */
static void C_ccall f_6684(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4){
C_word tmp;
C_word t5;
C_word t6;
C_word t7;
C_word ab[8],*a=ab;
if(c!=5) C_bad_argc_2(c,5,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr5,(void*)f_6684,5,t0,t1,t2,t3,t4);}
t5=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_6845,a[2]=t4,a[3]=t2,a[4]=t1,tmp=(C_word)a,a+=5,tmp);
t6=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_6937,a[2]=((C_word)li3),tmp=(C_word)a,a+=3,tmp);
C_trace("map");
t7=*((C_word*)lf[17]+1);
((C_proc4)(void*)(*((C_word*)t7+1)))(4,t7,t5,t6,t3);}

/* a6936 in expand-optkeys in k6680 in k6677 in k6674 in k6671 */
static void C_ccall f_6937(C_word c,C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word ab[14],*a=ab;
if(c!=3) C_bad_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr3,(void*)f_6937,3,t0,t1,t2);}
if(C_truep((C_word)C_i_pairp(t2))){
t3=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_6951,a[2]=t2,a[3]=t1,tmp=(C_word)a,a+=4,tmp);
t4=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_6955,a[2]=t3,tmp=(C_word)a,a+=3,tmp);
t5=(C_word)C_i_car(t2);
C_trace("ChickenBridge.scm: 212  symbol->string");
t6=*((C_word*)lf[25]+1);
((C_proc3)C_retrieve_proc(t6))(3,t6,t4,t5);}
else{
t3=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_6966,a[2]=t2,a[3]=t1,tmp=(C_word)a,a+=4,tmp);
t4=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_6970,a[2]=t3,tmp=(C_word)a,a+=3,tmp);
C_trace("ChickenBridge.scm: 213  symbol->string");
t5=*((C_word*)lf[25]+1);
((C_proc3)C_retrieve_proc(t5))(3,t5,t4,t2);}}

/* k6968 in a6936 in expand-optkeys in k6680 in k6677 in k6674 in k6671 */
static void C_ccall f_6970(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 213  gensym");
t2=C_retrieve(lf[26]);
((C_proc3)C_retrieve_proc(t2))(3,t2,((C_word*)t0)[2],t1);}

/* k6964 in a6936 in expand-optkeys in k6680 in k6677 in k6674 in k6671 */
static void C_ccall f_6966(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_6966,2,t0,t1);}
t2=((C_word*)t0)[3];
((C_proc2)(void*)(*((C_word*)t2+1)))(2,t2,(C_word)C_a_i_list(&a,3,t1,((C_word*)t0)[2],C_SCHEME_FALSE));}

/* k6953 in a6936 in expand-optkeys in k6680 in k6677 in k6674 in k6671 */
static void C_ccall f_6955(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 212  gensym");
t2=C_retrieve(lf[26]);
((C_proc3)C_retrieve_proc(t2))(3,t2,((C_word*)t0)[2],t1);}

/* k6949 in a6936 in expand-optkeys in k6680 in k6677 in k6674 in k6671 */
static void C_ccall f_6951(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word ab[3],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_6951,2,t0,t1);}
t2=((C_word*)t0)[3];
((C_proc2)(void*)(*((C_word*)t2+1)))(2,t2,(C_word)C_a_i_cons(&a,2,t1,((C_word*)t0)[2]));}

/* k6843 in expand-optkeys in k6680 in k6677 in k6674 in k6671 */
static void C_ccall f_6845(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[6],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_6845,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_6848,a[2]=t1,a[3]=((C_word*)t0)[2],a[4]=((C_word*)t0)[3],a[5]=((C_word*)t0)[4],tmp=(C_word)a,a+=6,tmp);
C_trace("ChickenBridge.scm: 215  gensym");
t3=C_retrieve(lf[26]);
((C_proc3)C_retrieve_proc(t3))(3,t3,t2,lf[28]);}

/* k6846 in k6843 in expand-optkeys in k6680 in k6677 in k6674 in k6671 */
static void C_ccall f_6848(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_6848,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_6851,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=t1,a[6]=((C_word*)t0)[5],tmp=(C_word)a,a+=7,tmp);
C_trace("ChickenBridge.scm: 216  gensym");
t3=C_retrieve(lf[26]);
((C_proc3)C_retrieve_proc(t3))(3,t3,t2,lf[27]);}

/* k6849 in k6846 in k6843 in expand-optkeys in k6680 in k6677 in k6674 in k6671 */
static void C_ccall f_6851(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[14],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_6851,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_6854,a[2]=((C_word*)t0)[2],a[3]=t1,a[4]=((C_word*)t0)[3],a[5]=((C_word*)t0)[4],a[6]=((C_word*)t0)[5],a[7]=((C_word*)t0)[6],tmp=(C_word)a,a+=8,tmp);
t3=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_6931,a[2]=((C_word*)t0)[4],a[3]=((C_word*)t0)[5],a[4]=t1,a[5]=((C_word)li2),tmp=(C_word)a,a+=6,tmp);
C_trace("map");
t4=*((C_word*)lf[17]+1);
((C_proc4)(void*)(*((C_word*)t4+1)))(4,t4,t2,t3,((C_word*)t0)[2]);}

/* a6930 in k6849 in k6846 in k6843 in expand-optkeys in k6680 in k6677 in k6674 in k6671 */
static void C_ccall f_6931(C_word c,C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word ab[11],*a=ab;
if(c!=3) C_bad_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr3,(void*)f_6931,3,t0,t1,t2);}
t3=((C_word*)t0)[4];
t4=((C_word*)t0)[3];
t5=((C_word*)t0)[2];
t6=(C_word)C_i_car(t2);
t7=(C_word)C_i_cadr(t2);
t8=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_6697,a[2]=t1,a[3]=t3,a[4]=t7,a[5]=t5,a[6]=t4,a[7]=t6,tmp=(C_word)a,a+=8,tmp);
t9=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_6756,a[2]=t8,tmp=(C_word)a,a+=3,tmp);
C_trace("ChickenBridge.scm: 176  symbol->string");
t10=*((C_word*)lf[25]+1);
((C_proc3)C_retrieve_proc(t10))(3,t10,t9,t7);}

/* k6754 in a6930 in k6849 in k6846 in k6843 in expand-optkeys in k6680 in k6677 in k6674 in k6671 */
static void C_ccall f_6756(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 176  string->keyword");
t2=C_retrieve(lf[24]);
((C_proc3)C_retrieve_proc(t2))(3,t2,((C_word*)t0)[2],t1);}

/* k6695 in a6930 in k6849 in k6846 in k6843 in expand-optkeys in k6680 in k6677 in k6674 in k6671 */
static void C_ccall f_6697(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word t14;
C_word t15;
C_word ab[120],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_6697,2,t0,t1);}
t2=(C_word)C_a_i_list(&a,1,t1);
t3=(C_word)C_a_i_list(&a,3,lf[4],lf[19],t1);
t4=(C_word)C_a_i_list(&a,3,lf[20],((C_word*)t0)[7],t3);
t5=(C_word)C_a_i_list(&a,2,lf[15],((C_word*)t0)[6]);
t6=(C_word)C_a_i_list(&a,2,lf[3],t5);
t7=(C_word)C_a_i_list(&a,3,lf[4],lf[21],((C_word*)t0)[5]);
t8=(C_word)C_a_i_list(&a,2,lf[22],((C_word*)t0)[6]);
t9=(C_word)C_a_i_list(&a,4,lf[20],t6,t7,t8);
t10=(C_word)C_a_i_list(&a,3,lf[12],((C_word*)t0)[4],t9);
t11=(C_word)C_a_i_list(&a,3,lf[12],((C_word*)t0)[7],C_SCHEME_TRUE);
t12=(C_word)C_a_i_list(&a,3,lf[12],((C_word*)t0)[3],C_SCHEME_TRUE);
t13=(C_word)C_a_i_list(&a,2,lf[23],((C_word*)t0)[6]);
t14=(C_word)C_a_i_list(&a,3,lf[12],((C_word*)t0)[6],t13);
t15=((C_word*)t0)[2];
((C_proc2)(void*)(*((C_word*)t15+1)))(2,t15,(C_word)C_a_i_list(&a,6,t2,t4,t10,t11,t12,t14));}

/* k6852 in k6849 in k6846 in k6843 in expand-optkeys in k6680 in k6677 in k6674 in k6671 */
static void C_ccall f_6854(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_6854,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|8,a[1]=(C_word)f_6861,a[2]=((C_word*)t0)[2],a[3]=t1,a[4]=((C_word*)t0)[3],a[5]=((C_word*)t0)[4],a[6]=((C_word*)t0)[5],a[7]=((C_word*)t0)[6],a[8]=((C_word*)t0)[7],tmp=(C_word)a,a+=9,tmp);
C_trace("map");
t3=*((C_word*)lf[17]+1);
((C_proc4)(void*)(*((C_word*)t3+1)))(4,t3,t2,*((C_word*)lf[15]+1),((C_word*)t0)[2]);}

/* k6859 in k6852 in k6849 in k6846 in k6843 in expand-optkeys in k6680 in k6677 in k6674 in k6671 */
static void C_ccall f_6861(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[19],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_6861,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|9,a[1]=(C_word)f_6873,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],a[7]=((C_word*)t0)[7],a[8]=t1,a[9]=((C_word*)t0)[8],tmp=(C_word)a,a+=10,tmp);
t3=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_6907,a[2]=t2,a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[6],a[5]=((C_word*)t0)[7],tmp=(C_word)a,a+=6,tmp);
t4=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_6921,a[2]=((C_word)li1),tmp=(C_word)a,a+=3,tmp);
C_trace("map");
t5=*((C_word*)lf[17]+1);
((C_proc4)(void*)(*((C_word*)t5+1)))(4,t5,t3,t4,((C_word*)t0)[2]);}

/* a6920 in k6859 in k6852 in k6849 in k6846 in k6843 in expand-optkeys in k6680 in k6677 in k6674 in k6671 */
static void C_ccall f_6921(C_word c,C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word ab[6],*a=ab;
if(c!=3) C_bad_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr3,(void*)f_6921,3,t0,t1,t2);}
t3=(C_word)C_i_car(t2);
t4=t1;
((C_proc2)(void*)(*((C_word*)t4+1)))(2,t4,(C_word)C_a_i_list(&a,2,t3,C_SCHEME_FALSE));}

/* k6905 in k6859 in k6852 in k6849 in k6846 in k6843 in expand-optkeys in k6680 in k6677 in k6674 in k6671 */
static void C_ccall f_6907(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[18],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_6907,2,t0,t1);}
t2=(C_word)C_a_i_list(&a,2,((C_word*)t0)[5],((C_word*)t0)[4]);
t3=(C_word)C_a_i_list(&a,2,((C_word*)t0)[3],C_SCHEME_FALSE);
t4=(C_word)C_a_i_list(&a,2,t2,t3);
C_trace("ChickenBridge.scm: 222  append");
t5=*((C_word*)lf[18]+1);
((C_proc4)C_retrieve_proc(t5))(4,t5,((C_word*)t0)[2],t1,t4);}

/* k6871 in k6859 in k6852 in k6849 in k6846 in k6843 in expand-optkeys in k6680 in k6677 in k6674 in k6671 */
static void C_ccall f_6873(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[18],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_6873,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_6877,a[2]=((C_word*)t0)[8],a[3]=((C_word*)t0)[9],a[4]=t1,tmp=(C_word)a,a+=5,tmp);
t3=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_6881,a[2]=t2,a[3]=((C_word*)t0)[5],a[4]=((C_word*)t0)[6],a[5]=((C_word*)t0)[7],tmp=(C_word)a,a+=6,tmp);
t4=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_6899,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[6],a[4]=((C_word*)t0)[7],a[5]=((C_word*)t0)[4],a[6]=((C_word)li0),tmp=(C_word)a,a+=7,tmp);
C_trace("map");
t5=*((C_word*)lf[17]+1);
((C_proc4)(void*)(*((C_word*)t5+1)))(4,t5,t3,t4,((C_word*)t0)[2]);}

/* a6898 in k6871 in k6859 in k6852 in k6849 in k6846 in k6843 in expand-optkeys in k6680 in k6677 in k6674 in k6671 */
static void C_ccall f_6899(C_word c,C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word t14;
C_word t15;
C_word t16;
C_word t17;
C_word t18;
C_word t19;
C_word t20;
C_word t21;
C_word t22;
C_word t23;
C_word t24;
C_word ab[119],*a=ab;
if(c!=3) C_bad_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr3,(void*)f_6899,3,t0,t1,t2);}
t3=((C_word*)t0)[5];
t4=((C_word*)t0)[4];
t5=((C_word*)t0)[3];
t6=((C_word*)t0)[2];
t7=(C_word)C_a_i_list(&a,2,lf[3],t4);
t8=(C_word)C_a_i_list(&a,2,lf[8],t4);
t9=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_6834,a[2]=t7,a[3]=t1,a[4]=t8,tmp=(C_word)a,a+=5,tmp);
t10=(C_word)C_i_car(t2);
t11=(C_word)C_i_cadr(t2);
t12=(C_word)C_a_i_list(&a,3,lf[4],lf[10],t5);
t13=(C_word)C_a_i_list(&a,3,lf[11],t3,t12);
t14=(C_word)C_a_i_list(&a,2,lf[8],t4);
t15=(C_word)C_a_i_list(&a,3,lf[12],t11,t14);
t16=(C_word)C_a_i_list(&a,2,lf[13],t11);
t17=(C_word)C_a_i_list(&a,3,lf[4],lf[14],t11);
t18=(C_word)C_a_i_list(&a,3,lf[11],t16,t17);
t19=(C_word)C_a_i_list(&a,3,lf[12],t10,C_SCHEME_TRUE);
t20=(C_word)C_a_i_list(&a,2,lf[15],t4);
t21=(C_word)C_a_i_list(&a,3,lf[12],t4,t20);
t22=(C_word)C_a_i_list(&a,6,lf[16],t13,t15,t18,t19,t21);
t23=(C_word)C_a_i_list(&a,1,t22);
C_trace("##sys#append");
t24=*((C_word*)lf[7]+1);
((C_proc4)(void*)(*((C_word*)t24+1)))(4,t24,t9,t6,t23);}

/* k6832 in a6898 in k6871 in k6859 in k6852 in k6849 in k6846 in k6843 in expand-optkeys in k6680 in k6677 in k6674 in k6671 */
static void C_ccall f_6834(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[15],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_6834,2,t0,t1);}
t2=(C_word)C_a_i_cons(&a,2,((C_word*)t0)[4],t1);
t3=(C_word)C_a_i_cons(&a,2,lf[9],t2);
t4=((C_word*)t0)[3];
((C_proc2)(void*)(*((C_word*)t4+1)))(2,t4,(C_word)C_a_i_list(&a,3,lf[6],((C_word*)t0)[2],t3));}

/* k6879 in k6871 in k6859 in k6852 in k6849 in k6846 in k6843 in expand-optkeys in k6680 in k6677 in k6674 in k6671 */
static void C_ccall f_6881(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[27],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_6881,2,t0,t1);}
t2=(C_word)C_a_i_list(&a,2,lf[3],((C_word*)t0)[5]);
t3=(C_word)C_a_i_list(&a,3,lf[4],lf[5],((C_word*)t0)[4]);
t4=(C_word)C_a_i_list(&a,3,lf[6],t2,t3);
t5=(C_word)C_a_i_cons(&a,2,t4,((C_word*)t0)[3]);
C_trace("##sys#append");
t6=*((C_word*)lf[7]+1);
((C_proc4)(void*)(*((C_word*)t6+1)))(4,t6,((C_word*)t0)[2],t1,t5);}

/* k6875 in k6871 in k6859 in k6852 in k6849 in k6846 in k6843 in expand-optkeys in k6680 in k6677 in k6674 in k6671 */
static void C_ccall f_6877(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[15],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_6877,2,t0,t1);}
t2=(C_word)C_a_i_cons(&a,2,((C_word*)t0)[4],t1);
t3=(C_word)C_a_i_cons(&a,2,lf[1],t2);
t4=((C_word*)t0)[3];
((C_proc2)(void*)(*((C_word*)t4+1)))(2,t4,(C_word)C_a_i_list(&a,3,lf[2],((C_word*)t0)[2],t3));}

#ifdef C_ENABLE_PTABLES
static C_PTABLE_ENTRY ptable[2913] = {
{"toplevelChickenBridge.scm",(void*)C_grace_toplevel},
{"f_6673ChickenBridge.scm",(void*)f_6673},
{"f_6676ChickenBridge.scm",(void*)f_6676},
{"f_6679ChickenBridge.scm",(void*)f_6679},
{"f_6682ChickenBridge.scm",(void*)f_6682},
{"f_42425ChickenBridge.scm",(void*)f_42425},
{"f_6973ChickenBridge.scm",(void*)f_6973},
{"f_6977ChickenBridge.scm",(void*)f_6977},
{"f_42373ChickenBridge.scm",(void*)f_42373},
{"f_42420ChickenBridge.scm",(void*)f_42420},
{"f_42410ChickenBridge.scm",(void*)f_42410},
{"f_42377ChickenBridge.scm",(void*)f_42377},
{"f_6980ChickenBridge.scm",(void*)f_6980},
{"f_42367ChickenBridge.scm",(void*)f_42367},
{"f_7273ChickenBridge.scm",(void*)f_7273},
{"f_42361ChickenBridge.scm",(void*)f_42361},
{"f_7276ChickenBridge.scm",(void*)f_7276},
{"f_10717ChickenBridge.scm",(void*)f_10717},
{"f_42145ChickenBridge.scm",(void*)f_42145},
{"f_42359ChickenBridge.scm",(void*)f_42359},
{"f_42179ChickenBridge.scm",(void*)f_42179},
{"f_42191ChickenBridge.scm",(void*)f_42191},
{"f_42195ChickenBridge.scm",(void*)f_42195},
{"f_42199ChickenBridge.scm",(void*)f_42199},
{"f_42343ChickenBridge.scm",(void*)f_42343},
{"f_42205ChickenBridge.scm",(void*)f_42205},
{"f_42225ChickenBridge.scm",(void*)f_42225},
{"f_42228ChickenBridge.scm",(void*)f_42228},
{"f_42236ChickenBridge.scm",(void*)f_42236},
{"f_42243ChickenBridge.scm",(void*)f_42243},
{"f_42246ChickenBridge.scm",(void*)f_42246},
{"f_42250ChickenBridge.scm",(void*)f_42250},
{"f_42257ChickenBridge.scm",(void*)f_42257},
{"f_42260ChickenBridge.scm",(void*)f_42260},
{"f_42264ChickenBridge.scm",(void*)f_42264},
{"f_42271ChickenBridge.scm",(void*)f_42271},
{"f_42215ChickenBridge.scm",(void*)f_42215},
{"f_42168ChickenBridge.scm",(void*)f_42168},
{"f_42158ChickenBridge.scm",(void*)f_42158},
{"f_42161ChickenBridge.scm",(void*)f_42161},
{"f_10720ChickenBridge.scm",(void*)f_10720},
{"f_42135ChickenBridge.scm",(void*)f_42135},
{"f_42143ChickenBridge.scm",(void*)f_42143},
{"f_11785ChickenBridge.scm",(void*)f_11785},
{"f_42121ChickenBridge.scm",(void*)f_42121},
{"f_42129ChickenBridge.scm",(void*)f_42129},
{"f_42133ChickenBridge.scm",(void*)f_42133},
{"f_23136ChickenBridge.scm",(void*)f_23136},
{"f_23187ChickenBridge.scm",(void*)f_23187},
{"f_42111ChickenBridge.scm",(void*)f_42111},
{"f_42119ChickenBridge.scm",(void*)f_42119},
{"f_23292ChickenBridge.scm",(void*)f_23292},
{"f_42008ChickenBridge.scm",(void*)f_42008},
{"f_42071ChickenBridge.scm",(void*)f_42071},
{"f_42075ChickenBridge.scm",(void*)f_42075},
{"f_42089ChickenBridge.scm",(void*)f_42089},
{"f_42011ChickenBridge.scm",(void*)f_42011},
{"f_42031ChickenBridge.scm",(void*)f_42031},
{"f_42035ChickenBridge.scm",(void*)f_42035},
{"f_23295ChickenBridge.scm",(void*)f_23295},
{"f_41994ChickenBridge.scm",(void*)f_41994},
{"f_42002ChickenBridge.scm",(void*)f_42002},
{"f_42006ChickenBridge.scm",(void*)f_42006},
{"f_23488ChickenBridge.scm",(void*)f_23488},
{"f_41968ChickenBridge.scm",(void*)f_41968},
{"f_41972ChickenBridge.scm",(void*)f_41972},
{"f_41978ChickenBridge.scm",(void*)f_41978},
{"f_41989ChickenBridge.scm",(void*)f_41989},
{"f_41985ChickenBridge.scm",(void*)f_41985},
{"f_23557ChickenBridge.scm",(void*)f_23557},
{"f_41946ChickenBridge.scm",(void*)f_41946},
{"f_24859ChickenBridge.scm",(void*)f_24859},
{"f_41926ChickenBridge.scm",(void*)f_41926},
{"f_24862ChickenBridge.scm",(void*)f_24862},
{"f_41886ChickenBridge.scm",(void*)f_41886},
{"f_24865ChickenBridge.scm",(void*)f_24865},
{"f_41792ChickenBridge.scm",(void*)f_41792},
{"f_41796ChickenBridge.scm",(void*)f_41796},
{"f_41799ChickenBridge.scm",(void*)f_41799},
{"f_41817ChickenBridge.scm",(void*)f_41817},
{"f_41820ChickenBridge.scm",(void*)f_41820},
{"f_41851ChickenBridge.scm",(void*)f_41851},
{"f_41823ChickenBridge.scm",(void*)f_41823},
{"f_41829ChickenBridge.scm",(void*)f_41829},
{"f_41782ChickenBridge.scm",(void*)f_41782},
{"f_41776ChickenBridge.scm",(void*)f_41776},
{"f_24868ChickenBridge.scm",(void*)f_24868},
{"f_41680ChickenBridge.scm",(void*)f_41680},
{"f_41682ChickenBridge.scm",(void*)f_41682},
{"f_41686ChickenBridge.scm",(void*)f_41686},
{"f_41689ChickenBridge.scm",(void*)f_41689},
{"f_41692ChickenBridge.scm",(void*)f_41692},
{"f_41736ChickenBridge.scm",(void*)f_41736},
{"f_41728ChickenBridge.scm",(void*)f_41728},
{"f_41695ChickenBridge.scm",(void*)f_41695},
{"f_23638ChickenBridge.scm",(void*)f_23638},
{"f_23684ChickenBridge.scm",(void*)f_23684},
{"f_23651ChickenBridge.scm",(void*)f_23651},
{"f_41718ChickenBridge.scm",(void*)f_41718},
{"f_41698ChickenBridge.scm",(void*)f_41698},
{"f_41701ChickenBridge.scm",(void*)f_41701},
{"f_41672ChickenBridge.scm",(void*)f_41672},
{"f_24871ChickenBridge.scm",(void*)f_24871},
{"f_41644ChickenBridge.scm",(void*)f_41644},
{"f_24874ChickenBridge.scm",(void*)f_24874},
{"f_41608ChickenBridge.scm",(void*)f_41608},
{"f_41620ChickenBridge.scm",(void*)f_41620},
{"f_41616ChickenBridge.scm",(void*)f_41616},
{"f_41590ChickenBridge.scm",(void*)f_41590},
{"f_41584ChickenBridge.scm",(void*)f_41584},
{"f_24877ChickenBridge.scm",(void*)f_24877},
{"f_41498ChickenBridge.scm",(void*)f_41498},
{"f_41502ChickenBridge.scm",(void*)f_41502},
{"f_41505ChickenBridge.scm",(void*)f_41505},
{"f_41508ChickenBridge.scm",(void*)f_41508},
{"f_41521ChickenBridge.scm",(void*)f_41521},
{"f_41467ChickenBridge.scm",(void*)f_41467},
{"f_41471ChickenBridge.scm",(void*)f_41471},
{"f_41486ChickenBridge.scm",(void*)f_41486},
{"f_41461ChickenBridge.scm",(void*)f_41461},
{"f_24880ChickenBridge.scm",(void*)f_24880},
{"f_41347ChickenBridge.scm",(void*)f_41347},
{"f_41363ChickenBridge.scm",(void*)f_41363},
{"f_41374ChickenBridge.scm",(void*)f_41374},
{"f_41341ChickenBridge.scm",(void*)f_41341},
{"f_24936ChickenBridge.scm",(void*)f_24936},
{"f_41208ChickenBridge.scm",(void*)f_41208},
{"f_41231ChickenBridge.scm",(void*)f_41231},
{"f_41228ChickenBridge.scm",(void*)f_41228},
{"f_41202ChickenBridge.scm",(void*)f_41202},
{"f_24939ChickenBridge.scm",(void*)f_24939},
{"f_41056ChickenBridge.scm",(void*)f_41056},
{"f_41074ChickenBridge.scm",(void*)f_41074},
{"f_41083ChickenBridge.scm",(void*)f_41083},
{"f_41050ChickenBridge.scm",(void*)f_41050},
{"f_24942ChickenBridge.scm",(void*)f_24942},
{"f_41003ChickenBridge.scm",(void*)f_41003},
{"f_41007ChickenBridge.scm",(void*)f_41007},
{"f_41010ChickenBridge.scm",(void*)f_41010},
{"f_41026ChickenBridge.scm",(void*)f_41026},
{"f_40985ChickenBridge.scm",(void*)f_40985},
{"f_40979ChickenBridge.scm",(void*)f_40979},
{"f_24945ChickenBridge.scm",(void*)f_24945},
{"f_40903ChickenBridge.scm",(void*)f_40903},
{"f_25084ChickenBridge.scm",(void*)f_25084},
{"f_40829ChickenBridge.scm",(void*)f_40829},
{"f_40836ChickenBridge.scm",(void*)f_40836},
{"f_40823ChickenBridge.scm",(void*)f_40823},
{"f_25087ChickenBridge.scm",(void*)f_25087},
{"f_40719ChickenBridge.scm",(void*)f_40719},
{"f_40727ChickenBridge.scm",(void*)f_40727},
{"f_40693ChickenBridge.scm",(void*)f_40693},
{"f_40710ChickenBridge.scm",(void*)f_40710},
{"f_40701ChickenBridge.scm",(void*)f_40701},
{"f_40687ChickenBridge.scm",(void*)f_40687},
{"f_25090ChickenBridge.scm",(void*)f_25090},
{"f_40643ChickenBridge.scm",(void*)f_40643},
{"f_25093ChickenBridge.scm",(void*)f_25093},
{"f_40561ChickenBridge.scm",(void*)f_40561},
{"f_40572ChickenBridge.scm",(void*)f_40572},
{"f_40574ChickenBridge.scm",(void*)f_40574},
{"f_40603ChickenBridge.scm",(void*)f_40603},
{"f_40539ChickenBridge.scm",(void*)f_40539},
{"f_40555ChickenBridge.scm",(void*)f_40555},
{"f_40533ChickenBridge.scm",(void*)f_40533},
{"f_25096ChickenBridge.scm",(void*)f_25096},
{"f_40486ChickenBridge.scm",(void*)f_40486},
{"f_40490ChickenBridge.scm",(void*)f_40490},
{"f_40497ChickenBridge.scm",(void*)f_40497},
{"f_40464ChickenBridge.scm",(void*)f_40464},
{"f_40480ChickenBridge.scm",(void*)f_40480},
{"f_40458ChickenBridge.scm",(void*)f_40458},
{"f_25099ChickenBridge.scm",(void*)f_25099},
{"f_40326ChickenBridge.scm",(void*)f_40326},
{"f_40366ChickenBridge.scm",(void*)f_40366},
{"f_40330ChickenBridge.scm",(void*)f_40330},
{"f_40346ChickenBridge.scm",(void*)f_40346},
{"f_40358ChickenBridge.scm",(void*)f_40358},
{"f_40362ChickenBridge.scm",(void*)f_40362},
{"f_40354ChickenBridge.scm",(void*)f_40354},
{"f_40251ChickenBridge.scm",(void*)f_40251},
{"f_40294ChickenBridge.scm",(void*)f_40294},
{"f_40298ChickenBridge.scm",(void*)f_40298},
{"f_40258ChickenBridge.scm",(void*)f_40258},
{"f_40269ChickenBridge.scm",(void*)f_40269},
{"f_40245ChickenBridge.scm",(void*)f_40245},
{"f_25102ChickenBridge.scm",(void*)f_25102},
{"f_40225ChickenBridge.scm",(void*)f_40225},
{"f_40219ChickenBridge.scm",(void*)f_40219},
{"f_25105ChickenBridge.scm",(void*)f_25105},
{"f_40199ChickenBridge.scm",(void*)f_40199},
{"f_40203ChickenBridge.scm",(void*)f_40203},
{"f_40191ChickenBridge.scm",(void*)f_40191},
{"f_25108ChickenBridge.scm",(void*)f_25108},
{"f_40171ChickenBridge.scm",(void*)f_40171},
{"f_40175ChickenBridge.scm",(void*)f_40175},
{"f_40163ChickenBridge.scm",(void*)f_40163},
{"f_25111ChickenBridge.scm",(void*)f_25111},
{"f_40143ChickenBridge.scm",(void*)f_40143},
{"f_40147ChickenBridge.scm",(void*)f_40147},
{"f_40135ChickenBridge.scm",(void*)f_40135},
{"f_25114ChickenBridge.scm",(void*)f_25114},
{"f_40115ChickenBridge.scm",(void*)f_40115},
{"f_40119ChickenBridge.scm",(void*)f_40119},
{"f_40107ChickenBridge.scm",(void*)f_40107},
{"f_25117ChickenBridge.scm",(void*)f_25117},
{"f_40006ChickenBridge.scm",(void*)f_40006},
{"f_39976ChickenBridge.scm",(void*)f_39976},
{"f_40000ChickenBridge.scm",(void*)f_40000},
{"f_39970ChickenBridge.scm",(void*)f_39970},
{"f_25120ChickenBridge.scm",(void*)f_25120},
{"f_39920ChickenBridge.scm",(void*)f_39920},
{"f_39922ChickenBridge.scm",(void*)f_39922},
{"f_39926ChickenBridge.scm",(void*)f_39926},
{"f_39954ChickenBridge.scm",(void*)f_39954},
{"f_39946ChickenBridge.scm",(void*)f_39946},
{"f_39942ChickenBridge.scm",(void*)f_39942},
{"f_39929ChickenBridge.scm",(void*)f_39929},
{"f_39912ChickenBridge.scm",(void*)f_39912},
{"f_25123ChickenBridge.scm",(void*)f_25123},
{"f_39859ChickenBridge.scm",(void*)f_39859},
{"f_39861ChickenBridge.scm",(void*)f_39861},
{"f_39865ChickenBridge.scm",(void*)f_39865},
{"f_39896ChickenBridge.scm",(void*)f_39896},
{"f_39888ChickenBridge.scm",(void*)f_39888},
{"f_39884ChickenBridge.scm",(void*)f_39884},
{"f_39868ChickenBridge.scm",(void*)f_39868},
{"f_39871ChickenBridge.scm",(void*)f_39871},
{"f_39851ChickenBridge.scm",(void*)f_39851},
{"f_25126ChickenBridge.scm",(void*)f_25126},
{"f_39801ChickenBridge.scm",(void*)f_39801},
{"f_39815ChickenBridge.scm",(void*)f_39815},
{"f_39807ChickenBridge.scm",(void*)f_39807},
{"f_39766ChickenBridge.scm",(void*)f_39766},
{"f_39799ChickenBridge.scm",(void*)f_39799},
{"f_39760ChickenBridge.scm",(void*)f_39760},
{"f_25129ChickenBridge.scm",(void*)f_25129},
{"f_39707ChickenBridge.scm",(void*)f_39707},
{"f_39711ChickenBridge.scm",(void*)f_39711},
{"f_39724ChickenBridge.scm",(void*)f_39724},
{"f_39716ChickenBridge.scm",(void*)f_39716},
{"f_39664ChickenBridge.scm",(void*)f_39664},
{"f_39697ChickenBridge.scm",(void*)f_39697},
{"f_39658ChickenBridge.scm",(void*)f_39658},
{"f_25132ChickenBridge.scm",(void*)f_25132},
{"f_39578ChickenBridge.scm",(void*)f_39578},
{"f_39572ChickenBridge.scm",(void*)f_39572},
{"f_25135ChickenBridge.scm",(void*)f_25135},
{"f_39341ChickenBridge.scm",(void*)f_39341},
{"f_39345ChickenBridge.scm",(void*)f_39345},
{"f_39353ChickenBridge.scm",(void*)f_39353},
{"f_39376ChickenBridge.scm",(void*)f_39376},
{"f_39379ChickenBridge.scm",(void*)f_39379},
{"f_39382ChickenBridge.scm",(void*)f_39382},
{"f_39385ChickenBridge.scm",(void*)f_39385},
{"f_39445ChickenBridge.scm",(void*)f_39445},
{"f_39452ChickenBridge.scm",(void*)f_39452},
{"f_39462ChickenBridge.scm",(void*)f_39462},
{"f_39472ChickenBridge.scm",(void*)f_39472},
{"f_39486ChickenBridge.scm",(void*)f_39486},
{"f_39496ChickenBridge.scm",(void*)f_39496},
{"f_39506ChickenBridge.scm",(void*)f_39506},
{"f_39516ChickenBridge.scm",(void*)f_39516},
{"f_39388ChickenBridge.scm",(void*)f_39388},
{"f_39412ChickenBridge.scm",(void*)f_39412},
{"f_39391ChickenBridge.scm",(void*)f_39391},
{"f_39298ChickenBridge.scm",(void*)f_39298},
{"f_39331ChickenBridge.scm",(void*)f_39331},
{"f_39292ChickenBridge.scm",(void*)f_39292},
{"f_25138ChickenBridge.scm",(void*)f_25138},
{"f_39210ChickenBridge.scm",(void*)f_39210},
{"f_39214ChickenBridge.scm",(void*)f_39214},
{"f_39220ChickenBridge.scm",(void*)f_39220},
{"f_39240ChickenBridge.scm",(void*)f_39240},
{"f_39184ChickenBridge.scm",(void*)f_39184},
{"f_39194ChickenBridge.scm",(void*)f_39194},
{"f_39178ChickenBridge.scm",(void*)f_39178},
{"f_25141ChickenBridge.scm",(void*)f_25141},
{"f_38993ChickenBridge.scm",(void*)f_38993},
{"f_38997ChickenBridge.scm",(void*)f_38997},
{"f_39003ChickenBridge.scm",(void*)f_39003},
{"f_39012ChickenBridge.scm",(void*)f_39012},
{"f_39050ChickenBridge.scm",(void*)f_39050},
{"f_39042ChickenBridge.scm",(void*)f_39042},
{"f_39019ChickenBridge.scm",(void*)f_39019},
{"f_39023ChickenBridge.scm",(void*)f_39023},
{"f_38925ChickenBridge.scm",(void*)f_38925},
{"f_38944ChickenBridge.scm",(void*)f_38944},
{"f_38979ChickenBridge.scm",(void*)f_38979},
{"f_38950ChickenBridge.scm",(void*)f_38950},
{"f_38954ChickenBridge.scm",(void*)f_38954},
{"f_38968ChickenBridge.scm",(void*)f_38968},
{"f_38957ChickenBridge.scm",(void*)f_38957},
{"f_38938ChickenBridge.scm",(void*)f_38938},
{"f_38919ChickenBridge.scm",(void*)f_38919},
{"f_25144ChickenBridge.scm",(void*)f_25144},
{"f_38647ChickenBridge.scm",(void*)f_38647},
{"f_25667ChickenBridge.scm",(void*)f_25667},
{"f_38599ChickenBridge.scm",(void*)f_38599},
{"f_38591ChickenBridge.scm",(void*)f_38591},
{"f_25670ChickenBridge.scm",(void*)f_25670},
{"f_38471ChickenBridge.scm",(void*)f_38471},
{"f_25676ChickenBridge.scm",(void*)f_25676},
{"f_26212ChickenBridge.scm",(void*)f_26212},
{"f_26246ChickenBridge.scm",(void*)f_26246},
{"f_26238ChickenBridge.scm",(void*)f_26238},
{"f_26234ChickenBridge.scm",(void*)f_26234},
{"f_26219ChickenBridge.scm",(void*)f_26219},
{"f_26223ChickenBridge.scm",(void*)f_26223},
{"f_26216ChickenBridge.scm",(void*)f_26216},
{"f_25694ChickenBridge.scm",(void*)f_25694},
{"f_26205ChickenBridge.scm",(void*)f_26205},
{"f_26201ChickenBridge.scm",(void*)f_26201},
{"f_25701ChickenBridge.scm",(void*)f_25701},
{"f_26076ChickenBridge.scm",(void*)f_26076},
{"f_26097ChickenBridge.scm",(void*)f_26097},
{"f_26099ChickenBridge.scm",(void*)f_26099},
{"f_26113ChickenBridge.scm",(void*)f_26113},
{"f_26166ChickenBridge.scm",(void*)f_26166},
{"f_26116ChickenBridge.scm",(void*)f_26116},
{"f_26151ChickenBridge.scm",(void*)f_26151},
{"f_26119ChickenBridge.scm",(void*)f_26119},
{"f_26132ChickenBridge.scm",(void*)f_26132},
{"f_26144ChickenBridge.scm",(void*)f_26144},
{"f_26136ChickenBridge.scm",(void*)f_26136},
{"f_26122ChickenBridge.scm",(void*)f_26122},
{"f_26086ChickenBridge.scm",(void*)f_26086},
{"f_25704ChickenBridge.scm",(void*)f_25704},
{"f_26040ChickenBridge.scm",(void*)f_26040},
{"f_26066ChickenBridge.scm",(void*)f_26066},
{"f_26051ChickenBridge.scm",(void*)f_26051},
{"f_25710ChickenBridge.scm",(void*)f_25710},
{"f_25714ChickenBridge.scm",(void*)f_25714},
{"f_25917ChickenBridge.scm",(void*)f_25917},
{"f_25921ChickenBridge.scm",(void*)f_25921},
{"f_25925ChickenBridge.scm",(void*)f_25925},
{"f_25968ChickenBridge.scm",(void*)f_25968},
{"f_25978ChickenBridge.scm",(void*)f_25978},
{"f_25981ChickenBridge.scm",(void*)f_25981},
{"f_26002ChickenBridge.scm",(void*)f_26002},
{"f_25984ChickenBridge.scm",(void*)f_25984},
{"f_25988ChickenBridge.scm",(void*)f_25988},
{"f_25928ChickenBridge.scm",(void*)f_25928},
{"f_25931ChickenBridge.scm",(void*)f_25931},
{"f_25717ChickenBridge.scm",(void*)f_25717},
{"f_25721ChickenBridge.scm",(void*)f_25721},
{"f_25724ChickenBridge.scm",(void*)f_25724},
{"f_25877ChickenBridge.scm",(void*)f_25877},
{"f_25885ChickenBridge.scm",(void*)f_25885},
{"f_25881ChickenBridge.scm",(void*)f_25881},
{"f_25727ChickenBridge.scm",(void*)f_25727},
{"f_25755ChickenBridge.scm",(void*)f_25755},
{"f_25758ChickenBridge.scm",(void*)f_25758},
{"f_25761ChickenBridge.scm",(void*)f_25761},
{"f_25764ChickenBridge.scm",(void*)f_25764},
{"f_25767ChickenBridge.scm",(void*)f_25767},
{"f_25826ChickenBridge.scm",(void*)f_25826},
{"f_38425ChickenBridge.scm",(void*)f_38425},
{"f_38441ChickenBridge.scm",(void*)f_38441},
{"f_38444ChickenBridge.scm",(void*)f_38444},
{"f_38447ChickenBridge.scm",(void*)f_38447},
{"f_38450ChickenBridge.scm",(void*)f_38450},
{"f_38461ChickenBridge.scm",(void*)f_38461},
{"f_38419ChickenBridge.scm",(void*)f_38419},
{"f_26253ChickenBridge.scm",(void*)f_26253},
{"f_38280ChickenBridge.scm",(void*)f_38280},
{"f_38319ChickenBridge.scm",(void*)f_38319},
{"f_38293ChickenBridge.scm",(void*)f_38293},
{"f_38274ChickenBridge.scm",(void*)f_38274},
{"f_26256ChickenBridge.scm",(void*)f_26256},
{"f_37862ChickenBridge.scm",(void*)f_37862},
{"f_37866ChickenBridge.scm",(void*)f_37866},
{"f_37878ChickenBridge.scm",(void*)f_37878},
{"f_37936ChickenBridge.scm",(void*)f_37936},
{"f_37939ChickenBridge.scm",(void*)f_37939},
{"f_37942ChickenBridge.scm",(void*)f_37942},
{"f_38154ChickenBridge.scm",(void*)f_38154},
{"f_38092ChickenBridge.scm",(void*)f_38092},
{"f_38126ChickenBridge.scm",(void*)f_38126},
{"f_38101ChickenBridge.scm",(void*)f_38101},
{"f_38112ChickenBridge.scm",(void*)f_38112},
{"f_38108ChickenBridge.scm",(void*)f_38108},
{"f_37951ChickenBridge.scm",(void*)f_37951},
{"f_38029ChickenBridge.scm",(void*)f_38029},
{"f_38070ChickenBridge.scm",(void*)f_38070},
{"f_38074ChickenBridge.scm",(void*)f_38074},
{"f_38078ChickenBridge.scm",(void*)f_38078},
{"f_38033ChickenBridge.scm",(void*)f_38033},
{"f_38037ChickenBridge.scm",(void*)f_38037},
{"f_38064ChickenBridge.scm",(void*)f_38064},
{"f_38040ChickenBridge.scm",(void*)f_38040},
{"f_37954ChickenBridge.scm",(void*)f_37954},
{"f_38026ChickenBridge.scm",(void*)f_38026},
{"f_37968ChickenBridge.scm",(void*)f_37968},
{"f_37970ChickenBridge.scm",(void*)f_37970},
{"f_38018ChickenBridge.scm",(void*)f_38018},
{"f_37989ChickenBridge.scm",(void*)f_37989},
{"f_38006ChickenBridge.scm",(void*)f_38006},
{"f_37992ChickenBridge.scm",(void*)f_37992},
{"f_37985ChickenBridge.scm",(void*)f_37985},
{"f_37957ChickenBridge.scm",(void*)f_37957},
{"f_37887ChickenBridge.scm",(void*)f_37887},
{"f_37897ChickenBridge.scm",(void*)f_37897},
{"f_37903ChickenBridge.scm",(void*)f_37903},
{"f_37875ChickenBridge.scm",(void*)f_37875},
{"f_37823ChickenBridge.scm",(void*)f_37823},
{"f_37840ChickenBridge.scm",(void*)f_37840},
{"f_37856ChickenBridge.scm",(void*)f_37856},
{"f_37834ChickenBridge.scm",(void*)f_37834},
{"f_37817ChickenBridge.scm",(void*)f_37817},
{"f_26259ChickenBridge.scm",(void*)f_26259},
{"f_37741ChickenBridge.scm",(void*)f_37741},
{"f_26262ChickenBridge.scm",(void*)f_26262},
{"f_37717ChickenBridge.scm",(void*)f_37717},
{"f_37729ChickenBridge.scm",(void*)f_37729},
{"f_37725ChickenBridge.scm",(void*)f_37725},
{"f_37703ChickenBridge.scm",(void*)f_37703},
{"f_37711ChickenBridge.scm",(void*)f_37711},
{"f_37697ChickenBridge.scm",(void*)f_37697},
{"f_26265ChickenBridge.scm",(void*)f_26265},
{"f_37689ChickenBridge.scm",(void*)f_37689},
{"f_30043ChickenBridge.scm",(void*)f_30043},
{"f_30046ChickenBridge.scm",(void*)f_30046},
{"f_30212ChickenBridge.scm",(void*)f_30212},
{"f_30208ChickenBridge.scm",(void*)f_30208},
{"f_30198ChickenBridge.scm",(void*)f_30198},
{"f_30053ChickenBridge.scm",(void*)f_30053},
{"f_30057ChickenBridge.scm",(void*)f_30057},
{"f_30060ChickenBridge.scm",(void*)f_30060},
{"f_30071ChickenBridge.scm",(void*)f_30071},
{"f_30079ChickenBridge.scm",(void*)f_30079},
{"f_30151ChickenBridge.scm",(void*)f_30151},
{"f_30159ChickenBridge.scm",(void*)f_30159},
{"f_30155ChickenBridge.scm",(void*)f_30155},
{"f_30147ChickenBridge.scm",(void*)f_30147},
{"f_30143ChickenBridge.scm",(void*)f_30143},
{"f_30115ChickenBridge.scm",(void*)f_30115},
{"f_30111ChickenBridge.scm",(void*)f_30111},
{"f_30075ChickenBridge.scm",(void*)f_30075},
{"f_26690ChickenBridge.scm",(void*)f_26690},
{"f_37675ChickenBridge.scm",(void*)f_37675},
{"f_26693ChickenBridge.scm",(void*)f_26693},
{"f_37646ChickenBridge.scm",(void*)f_37646},
{"f_37650ChickenBridge.scm",(void*)f_37650},
{"f_26696ChickenBridge.scm",(void*)f_26696},
{"f_37643ChickenBridge.scm",(void*)f_37643},
{"f_26699ChickenBridge.scm",(void*)f_26699},
{"f_37501ChickenBridge.scm",(void*)f_37501},
{"f_30225ChickenBridge.scm",(void*)f_30225},
{"f_30357ChickenBridge.scm",(void*)f_30357},
{"f_30228ChickenBridge.scm",(void*)f_30228},
{"f_30239ChickenBridge.scm",(void*)f_30239},
{"f_30247ChickenBridge.scm",(void*)f_30247},
{"f_30271ChickenBridge.scm",(void*)f_30271},
{"f_30274ChickenBridge.scm",(void*)f_30274},
{"f_30282ChickenBridge.scm",(void*)f_30282},
{"f_30290ChickenBridge.scm",(void*)f_30290},
{"f_30310ChickenBridge.scm",(void*)f_30310},
{"f_30306ChickenBridge.scm",(void*)f_30306},
{"f_30286ChickenBridge.scm",(void*)f_30286},
{"f_30278ChickenBridge.scm",(void*)f_30278},
{"f_30267ChickenBridge.scm",(void*)f_30267},
{"f_30243ChickenBridge.scm",(void*)f_30243},
{"f_30219ChickenBridge.scm",(void*)f_30219},
{"f_35488ChickenBridge.scm",(void*)f_35488},
{"f_35491ChickenBridge.scm",(void*)f_35491},
{"f_35494ChickenBridge.scm",(void*)f_35494},
{"f_35497ChickenBridge.scm",(void*)f_35497},
{"f_35500ChickenBridge.scm",(void*)f_35500},
{"f_35503ChickenBridge.scm",(void*)f_35503},
{"f_35506ChickenBridge.scm",(void*)f_35506},
{"f_35509ChickenBridge.scm",(void*)f_35509},
{"f_35512ChickenBridge.scm",(void*)f_35512},
{"f_35515ChickenBridge.scm",(void*)f_35515},
{"f_35518ChickenBridge.scm",(void*)f_35518},
{"f_35521ChickenBridge.scm",(void*)f_35521},
{"f_35524ChickenBridge.scm",(void*)f_35524},
{"f_35527ChickenBridge.scm",(void*)f_35527},
{"f_35530ChickenBridge.scm",(void*)f_35530},
{"f_35533ChickenBridge.scm",(void*)f_35533},
{"f_35536ChickenBridge.scm",(void*)f_35536},
{"f_35539ChickenBridge.scm",(void*)f_35539},
{"f_35542ChickenBridge.scm",(void*)f_35542},
{"f_35545ChickenBridge.scm",(void*)f_35545},
{"f_36401ChickenBridge.scm",(void*)f_36401},
{"f_36404ChickenBridge.scm",(void*)f_36404},
{"f_36407ChickenBridge.scm",(void*)f_36407},
{"f_36410ChickenBridge.scm",(void*)f_36410},
{"f_36413ChickenBridge.scm",(void*)f_36413},
{"f_36416ChickenBridge.scm",(void*)f_36416},
{"f_36419ChickenBridge.scm",(void*)f_36419},
{"f_36422ChickenBridge.scm",(void*)f_36422},
{"f_37438ChickenBridge.scm",(void*)f_37438},
{"f_37466ChickenBridge.scm",(void*)f_37466},
{"f_37105ChickenBridge.scm",(void*)f_37105},
{"f_37432ChickenBridge.scm",(void*)f_37432},
{"f_37150ChickenBridge.scm",(void*)f_37150},
{"f_37156ChickenBridge.scm",(void*)f_37156},
{"f_37159ChickenBridge.scm",(void*)f_37159},
{"f_37162ChickenBridge.scm",(void*)f_37162},
{"f_37166ChickenBridge.scm",(void*)f_37166},
{"f_37376ChickenBridge.scm",(void*)f_37376},
{"f_37388ChickenBridge.scm",(void*)f_37388},
{"f_37384ChickenBridge.scm",(void*)f_37384},
{"f_37169ChickenBridge.scm",(void*)f_37169},
{"f_37333ChickenBridge.scm",(void*)f_37333},
{"f_37369ChickenBridge.scm",(void*)f_37369},
{"f_37362ChickenBridge.scm",(void*)f_37362},
{"f_37172ChickenBridge.scm",(void*)f_37172},
{"f_37271ChickenBridge.scm",(void*)f_37271},
{"f_37279ChickenBridge.scm",(void*)f_37279},
{"f_37275ChickenBridge.scm",(void*)f_37275},
{"f_37267ChickenBridge.scm",(void*)f_37267},
{"f_37263ChickenBridge.scm",(void*)f_37263},
{"f_37219ChickenBridge.scm",(void*)f_37219},
{"f_37215ChickenBridge.scm",(void*)f_37215},
{"f_37182ChickenBridge.scm",(void*)f_37182},
{"f_37193ChickenBridge.scm",(void*)f_37193},
{"f_37201ChickenBridge.scm",(void*)f_37201},
{"f_37197ChickenBridge.scm",(void*)f_37197},
{"f_37395ChickenBridge.scm",(void*)f_37395},
{"f_37403ChickenBridge.scm",(void*)f_37403},
{"f_37417ChickenBridge.scm",(void*)f_37417},
{"f_37407ChickenBridge.scm",(void*)f_37407},
{"f_37398ChickenBridge.scm",(void*)f_37398},
{"f_37401ChickenBridge.scm",(void*)f_37401},
{"f_37107ChickenBridge.scm",(void*)f_37107},
{"f_37123ChickenBridge.scm",(void*)f_37123},
{"f_37034ChickenBridge.scm",(void*)f_37034},
{"f_37045ChickenBridge.scm",(void*)f_37045},
{"f_37048ChickenBridge.scm",(void*)f_37048},
{"f_37055ChickenBridge.scm",(void*)f_37055},
{"f_37024ChickenBridge.scm",(void*)f_37024},
{"f_36703ChickenBridge.scm",(void*)f_36703},
{"f_37028ChickenBridge.scm",(void*)f_37028},
{"f_36966ChickenBridge.scm",(void*)f_36966},
{"f_36984ChickenBridge.scm",(void*)f_36984},
{"f_36994ChickenBridge.scm",(void*)f_36994},
{"f_36970ChickenBridge.scm",(void*)f_36970},
{"f_36957ChickenBridge.scm",(void*)f_36957},
{"f_36681ChickenBridge.scm",(void*)f_36681},
{"f_36961ChickenBridge.scm",(void*)f_36961},
{"f_36951ChickenBridge.scm",(void*)f_36951},
{"f_36663ChickenBridge.scm",(void*)f_36663},
{"f_36942ChickenBridge.scm",(void*)f_36942},
{"f_36672ChickenBridge.scm",(void*)f_36672},
{"f_36946ChickenBridge.scm",(void*)f_36946},
{"f_36939ChickenBridge.scm",(void*)f_36939},
{"f_36727ChickenBridge.scm",(void*)f_36727},
{"f_36891ChickenBridge.scm",(void*)f_36891},
{"f_36886ChickenBridge.scm",(void*)f_36886},
{"f_36729ChickenBridge.scm",(void*)f_36729},
{"f_36878ChickenBridge.scm",(void*)f_36878},
{"f_36882ChickenBridge.scm",(void*)f_36882},
{"f_36874ChickenBridge.scm",(void*)f_36874},
{"f_36834ChickenBridge.scm",(void*)f_36834},
{"f_36844ChickenBridge.scm",(void*)f_36844},
{"f_36798ChickenBridge.scm",(void*)f_36798},
{"f_36803ChickenBridge.scm",(void*)f_36803},
{"f_36828ChickenBridge.scm",(void*)f_36828},
{"f_36832ChickenBridge.scm",(void*)f_36832},
{"f_36813ChickenBridge.scm",(void*)f_36813},
{"f_36789ChickenBridge.scm",(void*)f_36789},
{"f_36759ChickenBridge.scm",(void*)f_36759},
{"f_36731ChickenBridge.scm",(void*)f_36731},
{"f_36708ChickenBridge.scm",(void*)f_36708},
{"f_36713ChickenBridge.scm",(void*)f_36713},
{"f_36718ChickenBridge.scm",(void*)f_36718},
{"f_36686ChickenBridge.scm",(void*)f_36686},
{"f_36690ChickenBridge.scm",(void*)f_36690},
{"f_36642ChickenBridge.scm",(void*)f_36642},
{"f_36646ChickenBridge.scm",(void*)f_36646},
{"f_36628ChickenBridge.scm",(void*)f_36628},
{"f_36633ChickenBridge.scm",(void*)f_36633},
{"f_36614ChickenBridge.scm",(void*)f_36614},
{"f_36619ChickenBridge.scm",(void*)f_36619},
{"f_36424ChickenBridge.scm",(void*)f_36424},
{"f_36485ChickenBridge.scm",(void*)f_36485},
{"f_36487ChickenBridge.scm",(void*)f_36487},
{"f_36497ChickenBridge.scm",(void*)f_36497},
{"f_36516ChickenBridge.scm",(void*)f_36516},
{"f_36556ChickenBridge.scm",(void*)f_36556},
{"f_36598ChickenBridge.scm",(void*)f_36598},
{"f_36568ChickenBridge.scm",(void*)f_36568},
{"f_36553ChickenBridge.scm",(void*)f_36553},
{"f_36471ChickenBridge.scm",(void*)f_36471},
{"f_36436ChickenBridge.scm",(void*)f_36436},
{"f_36463ChickenBridge.scm",(void*)f_36463},
{"f_36444ChickenBridge.scm",(void*)f_36444},
{"f_36451ChickenBridge.scm",(void*)f_36451},
{"f_36455ChickenBridge.scm",(void*)f_36455},
{"f_36459ChickenBridge.scm",(void*)f_36459},
{"f_36536ChickenBridge.scm",(void*)f_36536},
{"f_36514ChickenBridge.scm",(void*)f_36514},
{"f_36500ChickenBridge.scm",(void*)f_36500},
{"f_36503ChickenBridge.scm",(void*)f_36503},
{"f_36478ChickenBridge.scm",(void*)f_36478},
{"f_35950ChickenBridge.scm",(void*)f_35950},
{"f_36377ChickenBridge.scm",(void*)f_36377},
{"f_36392ChickenBridge.scm",(void*)f_36392},
{"f_36384ChickenBridge.scm",(void*)f_36384},
{"f_36348ChickenBridge.scm",(void*)f_36348},
{"f_36352ChickenBridge.scm",(void*)f_36352},
{"f_36313ChickenBridge.scm",(void*)f_36313},
{"f_36317ChickenBridge.scm",(void*)f_36317},
{"f_36278ChickenBridge.scm",(void*)f_36278},
{"f_36282ChickenBridge.scm",(void*)f_36282},
{"f_35954ChickenBridge.scm",(void*)f_35954},
{"f_36242ChickenBridge.scm",(void*)f_36242},
{"f_36257ChickenBridge.scm",(void*)f_36257},
{"f_36249ChickenBridge.scm",(void*)f_36249},
{"f_36213ChickenBridge.scm",(void*)f_36213},
{"f_36217ChickenBridge.scm",(void*)f_36217},
{"f_36178ChickenBridge.scm",(void*)f_36178},
{"f_36182ChickenBridge.scm",(void*)f_36182},
{"f_36143ChickenBridge.scm",(void*)f_36143},
{"f_36147ChickenBridge.scm",(void*)f_36147},
{"f_35957ChickenBridge.scm",(void*)f_35957},
{"f_36107ChickenBridge.scm",(void*)f_36107},
{"f_36122ChickenBridge.scm",(void*)f_36122},
{"f_36114ChickenBridge.scm",(void*)f_36114},
{"f_36078ChickenBridge.scm",(void*)f_36078},
{"f_36082ChickenBridge.scm",(void*)f_36082},
{"f_36043ChickenBridge.scm",(void*)f_36043},
{"f_36047ChickenBridge.scm",(void*)f_36047},
{"f_36008ChickenBridge.scm",(void*)f_36008},
{"f_36012ChickenBridge.scm",(void*)f_36012},
{"f_35960ChickenBridge.scm",(void*)f_35960},
{"f_35963ChickenBridge.scm",(void*)f_35963},
{"f_35966ChickenBridge.scm",(void*)f_35966},
{"f_35970ChickenBridge.scm",(void*)f_35970},
{"f_35712ChickenBridge.scm",(void*)f_35712},
{"f_35927ChickenBridge.scm",(void*)f_35927},
{"f_35942ChickenBridge.scm",(void*)f_35942},
{"f_35934ChickenBridge.scm",(void*)f_35934},
{"f_35898ChickenBridge.scm",(void*)f_35898},
{"f_35902ChickenBridge.scm",(void*)f_35902},
{"f_35863ChickenBridge.scm",(void*)f_35863},
{"f_35867ChickenBridge.scm",(void*)f_35867},
{"f_35716ChickenBridge.scm",(void*)f_35716},
{"f_35827ChickenBridge.scm",(void*)f_35827},
{"f_35842ChickenBridge.scm",(void*)f_35842},
{"f_35834ChickenBridge.scm",(void*)f_35834},
{"f_35798ChickenBridge.scm",(void*)f_35798},
{"f_35802ChickenBridge.scm",(void*)f_35802},
{"f_35763ChickenBridge.scm",(void*)f_35763},
{"f_35767ChickenBridge.scm",(void*)f_35767},
{"f_35719ChickenBridge.scm",(void*)f_35719},
{"f_35722ChickenBridge.scm",(void*)f_35722},
{"f_35725ChickenBridge.scm",(void*)f_35725},
{"f_35729ChickenBridge.scm",(void*)f_35729},
{"f_35655ChickenBridge.scm",(void*)f_35655},
{"f_35688ChickenBridge.scm",(void*)f_35688},
{"f_35668ChickenBridge.scm",(void*)f_35668},
{"f_35676ChickenBridge.scm",(void*)f_35676},
{"f_35659ChickenBridge.scm",(void*)f_35659},
{"f_35598ChickenBridge.scm",(void*)f_35598},
{"f_35631ChickenBridge.scm",(void*)f_35631},
{"f_35611ChickenBridge.scm",(void*)f_35611},
{"f_35619ChickenBridge.scm",(void*)f_35619},
{"f_35602ChickenBridge.scm",(void*)f_35602},
{"f_35590ChickenBridge.scm",(void*)f_35590},
{"f_35595ChickenBridge.scm",(void*)f_35595},
{"f_35547ChickenBridge.scm",(void*)f_35547},
{"f_35574ChickenBridge.scm",(void*)f_35574},
{"f_35568ChickenBridge.scm",(void*)f_35568},
{"f_35572ChickenBridge.scm",(void*)f_35572},
{"f_35558ChickenBridge.scm",(void*)f_35558},
{"f_35467ChickenBridge.scm",(void*)f_35467},
{"f_35478ChickenBridge.scm",(void*)f_35478},
{"f_35474ChickenBridge.scm",(void*)f_35474},
{"f_35456ChickenBridge.scm",(void*)f_35456},
{"f_35464ChickenBridge.scm",(void*)f_35464},
{"f_35460ChickenBridge.scm",(void*)f_35460},
{"f_35445ChickenBridge.scm",(void*)f_35445},
{"f_35453ChickenBridge.scm",(void*)f_35453},
{"f_35449ChickenBridge.scm",(void*)f_35449},
{"f_35434ChickenBridge.scm",(void*)f_35434},
{"f_35442ChickenBridge.scm",(void*)f_35442},
{"f_35438ChickenBridge.scm",(void*)f_35438},
{"f_35423ChickenBridge.scm",(void*)f_35423},
{"f_35431ChickenBridge.scm",(void*)f_35431},
{"f_35427ChickenBridge.scm",(void*)f_35427},
{"f_35412ChickenBridge.scm",(void*)f_35412},
{"f_35420ChickenBridge.scm",(void*)f_35420},
{"f_35416ChickenBridge.scm",(void*)f_35416},
{"f_35373ChickenBridge.scm",(void*)f_35373},
{"f_35386ChickenBridge.scm",(void*)f_35386},
{"f_35390ChickenBridge.scm",(void*)f_35390},
{"f_35380ChickenBridge.scm",(void*)f_35380},
{"f_35258ChickenBridge.scm",(void*)f_35258},
{"f_35283ChickenBridge.scm",(void*)f_35283},
{"f_35290ChickenBridge.scm",(void*)f_35290},
{"f_35296ChickenBridge.scm",(void*)f_35296},
{"f_35316ChickenBridge.scm",(void*)f_35316},
{"f_35306ChickenBridge.scm",(void*)f_35306},
{"f_35262ChickenBridge.scm",(void*)f_35262},
{"f_35266ChickenBridge.scm",(void*)f_35266},
{"f_35147ChickenBridge.scm",(void*)f_35147},
{"f_35172ChickenBridge.scm",(void*)f_35172},
{"f_35179ChickenBridge.scm",(void*)f_35179},
{"f_35185ChickenBridge.scm",(void*)f_35185},
{"f_35205ChickenBridge.scm",(void*)f_35205},
{"f_35195ChickenBridge.scm",(void*)f_35195},
{"f_35151ChickenBridge.scm",(void*)f_35151},
{"f_35155ChickenBridge.scm",(void*)f_35155},
{"f_35090ChickenBridge.scm",(void*)f_35090},
{"f_35144ChickenBridge.scm",(void*)f_35144},
{"f_35139ChickenBridge.scm",(void*)f_35139},
{"f_35102ChickenBridge.scm",(void*)f_35102},
{"f_35108ChickenBridge.scm",(void*)f_35108},
{"f_35134ChickenBridge.scm",(void*)f_35134},
{"f_35138ChickenBridge.scm",(void*)f_35138},
{"f_35114ChickenBridge.scm",(void*)f_35114},
{"f_35132ChickenBridge.scm",(void*)f_35132},
{"f_35129ChickenBridge.scm",(void*)f_35129},
{"f_35125ChickenBridge.scm",(void*)f_35125},
{"f_35118ChickenBridge.scm",(void*)f_35118},
{"f_35075ChickenBridge.scm",(void*)f_35075},
{"f_35080ChickenBridge.scm",(void*)f_35080},
{"f_35047ChickenBridge.scm",(void*)f_35047},
{"f_35052ChickenBridge.scm",(void*)f_35052},
{"f_35019ChickenBridge.scm",(void*)f_35019},
{"f_35024ChickenBridge.scm",(void*)f_35024},
{"f_34991ChickenBridge.scm",(void*)f_34991},
{"f_34996ChickenBridge.scm",(void*)f_34996},
{"f_34963ChickenBridge.scm",(void*)f_34963},
{"f_34968ChickenBridge.scm",(void*)f_34968},
{"f_34935ChickenBridge.scm",(void*)f_34935},
{"f_34940ChickenBridge.scm",(void*)f_34940},
{"f_34907ChickenBridge.scm",(void*)f_34907},
{"f_34912ChickenBridge.scm",(void*)f_34912},
{"f_34879ChickenBridge.scm",(void*)f_34879},
{"f_34884ChickenBridge.scm",(void*)f_34884},
{"f_34851ChickenBridge.scm",(void*)f_34851},
{"f_34856ChickenBridge.scm",(void*)f_34856},
{"f_34823ChickenBridge.scm",(void*)f_34823},
{"f_34828ChickenBridge.scm",(void*)f_34828},
{"f_34800ChickenBridge.scm",(void*)f_34800},
{"f_34805ChickenBridge.scm",(void*)f_34805},
{"f_34804ChickenBridge.scm",(void*)f_34804},
{"f_34781ChickenBridge.scm",(void*)f_34781},
{"f_34786ChickenBridge.scm",(void*)f_34786},
{"f_34726ChickenBridge.scm",(void*)f_34726},
{"f_34733ChickenBridge.scm",(void*)f_34733},
{"f_34736ChickenBridge.scm",(void*)f_34736},
{"f_34760ChickenBridge.scm",(void*)f_34760},
{"f_34740ChickenBridge.scm",(void*)f_34740},
{"f_34730ChickenBridge.scm",(void*)f_34730},
{"f_34679ChickenBridge.scm",(void*)f_34679},
{"f_34686ChickenBridge.scm",(void*)f_34686},
{"f_34689ChickenBridge.scm",(void*)f_34689},
{"f_34709ChickenBridge.scm",(void*)f_34709},
{"f_34693ChickenBridge.scm",(void*)f_34693},
{"f_34656ChickenBridge.scm",(void*)f_34656},
{"f_34661ChickenBridge.scm",(void*)f_34661},
{"f_34660ChickenBridge.scm",(void*)f_34660},
{"f_34637ChickenBridge.scm",(void*)f_34637},
{"f_34642ChickenBridge.scm",(void*)f_34642},
{"f_34614ChickenBridge.scm",(void*)f_34614},
{"f_34619ChickenBridge.scm",(void*)f_34619},
{"f_34618ChickenBridge.scm",(void*)f_34618},
{"f_34595ChickenBridge.scm",(void*)f_34595},
{"f_34600ChickenBridge.scm",(void*)f_34600},
{"f_34576ChickenBridge.scm",(void*)f_34576},
{"f_34581ChickenBridge.scm",(void*)f_34581},
{"f_34580ChickenBridge.scm",(void*)f_34580},
{"f_34561ChickenBridge.scm",(void*)f_34561},
{"f_34566ChickenBridge.scm",(void*)f_34566},
{"f_34542ChickenBridge.scm",(void*)f_34542},
{"f_34547ChickenBridge.scm",(void*)f_34547},
{"f_34546ChickenBridge.scm",(void*)f_34546},
{"f_34527ChickenBridge.scm",(void*)f_34527},
{"f_34532ChickenBridge.scm",(void*)f_34532},
{"f_34512ChickenBridge.scm",(void*)f_34512},
{"f_34517ChickenBridge.scm",(void*)f_34517},
{"f_34494ChickenBridge.scm",(void*)f_34494},
{"f_34502ChickenBridge.scm",(void*)f_34502},
{"f_34498ChickenBridge.scm",(void*)f_34498},
{"f_34024ChickenBridge.scm",(void*)f_34024},
{"f_34452ChickenBridge.scm",(void*)f_34452},
{"f_34467ChickenBridge.scm",(void*)f_34467},
{"f_34459ChickenBridge.scm",(void*)f_34459},
{"f_34423ChickenBridge.scm",(void*)f_34423},
{"f_34427ChickenBridge.scm",(void*)f_34427},
{"f_34388ChickenBridge.scm",(void*)f_34388},
{"f_34392ChickenBridge.scm",(void*)f_34392},
{"f_34353ChickenBridge.scm",(void*)f_34353},
{"f_34357ChickenBridge.scm",(void*)f_34357},
{"f_34028ChickenBridge.scm",(void*)f_34028},
{"f_34317ChickenBridge.scm",(void*)f_34317},
{"f_34332ChickenBridge.scm",(void*)f_34332},
{"f_34324ChickenBridge.scm",(void*)f_34324},
{"f_34288ChickenBridge.scm",(void*)f_34288},
{"f_34292ChickenBridge.scm",(void*)f_34292},
{"f_34253ChickenBridge.scm",(void*)f_34253},
{"f_34257ChickenBridge.scm",(void*)f_34257},
{"f_34218ChickenBridge.scm",(void*)f_34218},
{"f_34222ChickenBridge.scm",(void*)f_34222},
{"f_34031ChickenBridge.scm",(void*)f_34031},
{"f_34182ChickenBridge.scm",(void*)f_34182},
{"f_34197ChickenBridge.scm",(void*)f_34197},
{"f_34189ChickenBridge.scm",(void*)f_34189},
{"f_34153ChickenBridge.scm",(void*)f_34153},
{"f_34157ChickenBridge.scm",(void*)f_34157},
{"f_34118ChickenBridge.scm",(void*)f_34118},
{"f_34122ChickenBridge.scm",(void*)f_34122},
{"f_34083ChickenBridge.scm",(void*)f_34083},
{"f_34087ChickenBridge.scm",(void*)f_34087},
{"f_34034ChickenBridge.scm",(void*)f_34034},
{"f_34037ChickenBridge.scm",(void*)f_34037},
{"f_34041ChickenBridge.scm",(void*)f_34041},
{"f_34005ChickenBridge.scm",(void*)f_34005},
{"f_34010ChickenBridge.scm",(void*)f_34010},
{"f_33554ChickenBridge.scm",(void*)f_33554},
{"f_33982ChickenBridge.scm",(void*)f_33982},
{"f_33997ChickenBridge.scm",(void*)f_33997},
{"f_33989ChickenBridge.scm",(void*)f_33989},
{"f_33953ChickenBridge.scm",(void*)f_33953},
{"f_33957ChickenBridge.scm",(void*)f_33957},
{"f_33918ChickenBridge.scm",(void*)f_33918},
{"f_33922ChickenBridge.scm",(void*)f_33922},
{"f_33883ChickenBridge.scm",(void*)f_33883},
{"f_33887ChickenBridge.scm",(void*)f_33887},
{"f_33558ChickenBridge.scm",(void*)f_33558},
{"f_33847ChickenBridge.scm",(void*)f_33847},
{"f_33862ChickenBridge.scm",(void*)f_33862},
{"f_33854ChickenBridge.scm",(void*)f_33854},
{"f_33818ChickenBridge.scm",(void*)f_33818},
{"f_33822ChickenBridge.scm",(void*)f_33822},
{"f_33783ChickenBridge.scm",(void*)f_33783},
{"f_33787ChickenBridge.scm",(void*)f_33787},
{"f_33748ChickenBridge.scm",(void*)f_33748},
{"f_33752ChickenBridge.scm",(void*)f_33752},
{"f_33561ChickenBridge.scm",(void*)f_33561},
{"f_33712ChickenBridge.scm",(void*)f_33712},
{"f_33727ChickenBridge.scm",(void*)f_33727},
{"f_33719ChickenBridge.scm",(void*)f_33719},
{"f_33683ChickenBridge.scm",(void*)f_33683},
{"f_33687ChickenBridge.scm",(void*)f_33687},
{"f_33648ChickenBridge.scm",(void*)f_33648},
{"f_33652ChickenBridge.scm",(void*)f_33652},
{"f_33613ChickenBridge.scm",(void*)f_33613},
{"f_33617ChickenBridge.scm",(void*)f_33617},
{"f_33564ChickenBridge.scm",(void*)f_33564},
{"f_33567ChickenBridge.scm",(void*)f_33567},
{"f_33571ChickenBridge.scm",(void*)f_33571},
{"f_33535ChickenBridge.scm",(void*)f_33535},
{"f_33540ChickenBridge.scm",(void*)f_33540},
{"f_33084ChickenBridge.scm",(void*)f_33084},
{"f_33512ChickenBridge.scm",(void*)f_33512},
{"f_33527ChickenBridge.scm",(void*)f_33527},
{"f_33519ChickenBridge.scm",(void*)f_33519},
{"f_33483ChickenBridge.scm",(void*)f_33483},
{"f_33487ChickenBridge.scm",(void*)f_33487},
{"f_33448ChickenBridge.scm",(void*)f_33448},
{"f_33452ChickenBridge.scm",(void*)f_33452},
{"f_33413ChickenBridge.scm",(void*)f_33413},
{"f_33417ChickenBridge.scm",(void*)f_33417},
{"f_33088ChickenBridge.scm",(void*)f_33088},
{"f_33377ChickenBridge.scm",(void*)f_33377},
{"f_33392ChickenBridge.scm",(void*)f_33392},
{"f_33384ChickenBridge.scm",(void*)f_33384},
{"f_33348ChickenBridge.scm",(void*)f_33348},
{"f_33352ChickenBridge.scm",(void*)f_33352},
{"f_33313ChickenBridge.scm",(void*)f_33313},
{"f_33317ChickenBridge.scm",(void*)f_33317},
{"f_33278ChickenBridge.scm",(void*)f_33278},
{"f_33282ChickenBridge.scm",(void*)f_33282},
{"f_33091ChickenBridge.scm",(void*)f_33091},
{"f_33242ChickenBridge.scm",(void*)f_33242},
{"f_33257ChickenBridge.scm",(void*)f_33257},
{"f_33249ChickenBridge.scm",(void*)f_33249},
{"f_33213ChickenBridge.scm",(void*)f_33213},
{"f_33217ChickenBridge.scm",(void*)f_33217},
{"f_33178ChickenBridge.scm",(void*)f_33178},
{"f_33182ChickenBridge.scm",(void*)f_33182},
{"f_33143ChickenBridge.scm",(void*)f_33143},
{"f_33147ChickenBridge.scm",(void*)f_33147},
{"f_33094ChickenBridge.scm",(void*)f_33094},
{"f_33097ChickenBridge.scm",(void*)f_33097},
{"f_33101ChickenBridge.scm",(void*)f_33101},
{"f_33065ChickenBridge.scm",(void*)f_33065},
{"f_33070ChickenBridge.scm",(void*)f_33070},
{"f_32336ChickenBridge.scm",(void*)f_32336},
{"f_33042ChickenBridge.scm",(void*)f_33042},
{"f_33057ChickenBridge.scm",(void*)f_33057},
{"f_33049ChickenBridge.scm",(void*)f_33049},
{"f_33013ChickenBridge.scm",(void*)f_33013},
{"f_33017ChickenBridge.scm",(void*)f_33017},
{"f_32978ChickenBridge.scm",(void*)f_32978},
{"f_32982ChickenBridge.scm",(void*)f_32982},
{"f_32943ChickenBridge.scm",(void*)f_32943},
{"f_32947ChickenBridge.scm",(void*)f_32947},
{"f_32908ChickenBridge.scm",(void*)f_32908},
{"f_32912ChickenBridge.scm",(void*)f_32912},
{"f_32340ChickenBridge.scm",(void*)f_32340},
{"f_32872ChickenBridge.scm",(void*)f_32872},
{"f_32887ChickenBridge.scm",(void*)f_32887},
{"f_32879ChickenBridge.scm",(void*)f_32879},
{"f_32843ChickenBridge.scm",(void*)f_32843},
{"f_32847ChickenBridge.scm",(void*)f_32847},
{"f_32808ChickenBridge.scm",(void*)f_32808},
{"f_32812ChickenBridge.scm",(void*)f_32812},
{"f_32773ChickenBridge.scm",(void*)f_32773},
{"f_32777ChickenBridge.scm",(void*)f_32777},
{"f_32738ChickenBridge.scm",(void*)f_32738},
{"f_32742ChickenBridge.scm",(void*)f_32742},
{"f_32343ChickenBridge.scm",(void*)f_32343},
{"f_32702ChickenBridge.scm",(void*)f_32702},
{"f_32717ChickenBridge.scm",(void*)f_32717},
{"f_32709ChickenBridge.scm",(void*)f_32709},
{"f_32673ChickenBridge.scm",(void*)f_32673},
{"f_32677ChickenBridge.scm",(void*)f_32677},
{"f_32638ChickenBridge.scm",(void*)f_32638},
{"f_32642ChickenBridge.scm",(void*)f_32642},
{"f_32603ChickenBridge.scm",(void*)f_32603},
{"f_32607ChickenBridge.scm",(void*)f_32607},
{"f_32568ChickenBridge.scm",(void*)f_32568},
{"f_32572ChickenBridge.scm",(void*)f_32572},
{"f_32346ChickenBridge.scm",(void*)f_32346},
{"f_32532ChickenBridge.scm",(void*)f_32532},
{"f_32547ChickenBridge.scm",(void*)f_32547},
{"f_32539ChickenBridge.scm",(void*)f_32539},
{"f_32503ChickenBridge.scm",(void*)f_32503},
{"f_32507ChickenBridge.scm",(void*)f_32507},
{"f_32468ChickenBridge.scm",(void*)f_32468},
{"f_32472ChickenBridge.scm",(void*)f_32472},
{"f_32433ChickenBridge.scm",(void*)f_32433},
{"f_32437ChickenBridge.scm",(void*)f_32437},
{"f_32398ChickenBridge.scm",(void*)f_32398},
{"f_32402ChickenBridge.scm",(void*)f_32402},
{"f_32349ChickenBridge.scm",(void*)f_32349},
{"f_32352ChickenBridge.scm",(void*)f_32352},
{"f_32356ChickenBridge.scm",(void*)f_32356},
{"f_32317ChickenBridge.scm",(void*)f_32317},
{"f_32322ChickenBridge.scm",(void*)f_32322},
{"f_31588ChickenBridge.scm",(void*)f_31588},
{"f_32294ChickenBridge.scm",(void*)f_32294},
{"f_32309ChickenBridge.scm",(void*)f_32309},
{"f_32301ChickenBridge.scm",(void*)f_32301},
{"f_32265ChickenBridge.scm",(void*)f_32265},
{"f_32269ChickenBridge.scm",(void*)f_32269},
{"f_32230ChickenBridge.scm",(void*)f_32230},
{"f_32234ChickenBridge.scm",(void*)f_32234},
{"f_32195ChickenBridge.scm",(void*)f_32195},
{"f_32199ChickenBridge.scm",(void*)f_32199},
{"f_32160ChickenBridge.scm",(void*)f_32160},
{"f_32164ChickenBridge.scm",(void*)f_32164},
{"f_31592ChickenBridge.scm",(void*)f_31592},
{"f_32124ChickenBridge.scm",(void*)f_32124},
{"f_32139ChickenBridge.scm",(void*)f_32139},
{"f_32131ChickenBridge.scm",(void*)f_32131},
{"f_32095ChickenBridge.scm",(void*)f_32095},
{"f_32099ChickenBridge.scm",(void*)f_32099},
{"f_32060ChickenBridge.scm",(void*)f_32060},
{"f_32064ChickenBridge.scm",(void*)f_32064},
{"f_32025ChickenBridge.scm",(void*)f_32025},
{"f_32029ChickenBridge.scm",(void*)f_32029},
{"f_31990ChickenBridge.scm",(void*)f_31990},
{"f_31994ChickenBridge.scm",(void*)f_31994},
{"f_31595ChickenBridge.scm",(void*)f_31595},
{"f_31954ChickenBridge.scm",(void*)f_31954},
{"f_31969ChickenBridge.scm",(void*)f_31969},
{"f_31961ChickenBridge.scm",(void*)f_31961},
{"f_31925ChickenBridge.scm",(void*)f_31925},
{"f_31929ChickenBridge.scm",(void*)f_31929},
{"f_31890ChickenBridge.scm",(void*)f_31890},
{"f_31894ChickenBridge.scm",(void*)f_31894},
{"f_31855ChickenBridge.scm",(void*)f_31855},
{"f_31859ChickenBridge.scm",(void*)f_31859},
{"f_31820ChickenBridge.scm",(void*)f_31820},
{"f_31824ChickenBridge.scm",(void*)f_31824},
{"f_31598ChickenBridge.scm",(void*)f_31598},
{"f_31784ChickenBridge.scm",(void*)f_31784},
{"f_31799ChickenBridge.scm",(void*)f_31799},
{"f_31791ChickenBridge.scm",(void*)f_31791},
{"f_31755ChickenBridge.scm",(void*)f_31755},
{"f_31759ChickenBridge.scm",(void*)f_31759},
{"f_31720ChickenBridge.scm",(void*)f_31720},
{"f_31724ChickenBridge.scm",(void*)f_31724},
{"f_31685ChickenBridge.scm",(void*)f_31685},
{"f_31689ChickenBridge.scm",(void*)f_31689},
{"f_31650ChickenBridge.scm",(void*)f_31650},
{"f_31654ChickenBridge.scm",(void*)f_31654},
{"f_31601ChickenBridge.scm",(void*)f_31601},
{"f_31604ChickenBridge.scm",(void*)f_31604},
{"f_31608ChickenBridge.scm",(void*)f_31608},
{"f_31569ChickenBridge.scm",(void*)f_31569},
{"f_31574ChickenBridge.scm",(void*)f_31574},
{"f_31118ChickenBridge.scm",(void*)f_31118},
{"f_31546ChickenBridge.scm",(void*)f_31546},
{"f_31561ChickenBridge.scm",(void*)f_31561},
{"f_31553ChickenBridge.scm",(void*)f_31553},
{"f_31517ChickenBridge.scm",(void*)f_31517},
{"f_31521ChickenBridge.scm",(void*)f_31521},
{"f_31482ChickenBridge.scm",(void*)f_31482},
{"f_31486ChickenBridge.scm",(void*)f_31486},
{"f_31447ChickenBridge.scm",(void*)f_31447},
{"f_31451ChickenBridge.scm",(void*)f_31451},
{"f_31122ChickenBridge.scm",(void*)f_31122},
{"f_31411ChickenBridge.scm",(void*)f_31411},
{"f_31426ChickenBridge.scm",(void*)f_31426},
{"f_31418ChickenBridge.scm",(void*)f_31418},
{"f_31382ChickenBridge.scm",(void*)f_31382},
{"f_31386ChickenBridge.scm",(void*)f_31386},
{"f_31347ChickenBridge.scm",(void*)f_31347},
{"f_31351ChickenBridge.scm",(void*)f_31351},
{"f_31312ChickenBridge.scm",(void*)f_31312},
{"f_31316ChickenBridge.scm",(void*)f_31316},
{"f_31125ChickenBridge.scm",(void*)f_31125},
{"f_31276ChickenBridge.scm",(void*)f_31276},
{"f_31291ChickenBridge.scm",(void*)f_31291},
{"f_31283ChickenBridge.scm",(void*)f_31283},
{"f_31247ChickenBridge.scm",(void*)f_31247},
{"f_31251ChickenBridge.scm",(void*)f_31251},
{"f_31212ChickenBridge.scm",(void*)f_31212},
{"f_31216ChickenBridge.scm",(void*)f_31216},
{"f_31177ChickenBridge.scm",(void*)f_31177},
{"f_31181ChickenBridge.scm",(void*)f_31181},
{"f_31128ChickenBridge.scm",(void*)f_31128},
{"f_31131ChickenBridge.scm",(void*)f_31131},
{"f_31135ChickenBridge.scm",(void*)f_31135},
{"f_31099ChickenBridge.scm",(void*)f_31099},
{"f_31104ChickenBridge.scm",(void*)f_31104},
{"f_30370ChickenBridge.scm",(void*)f_30370},
{"f_31076ChickenBridge.scm",(void*)f_31076},
{"f_31091ChickenBridge.scm",(void*)f_31091},
{"f_31083ChickenBridge.scm",(void*)f_31083},
{"f_31047ChickenBridge.scm",(void*)f_31047},
{"f_31051ChickenBridge.scm",(void*)f_31051},
{"f_31012ChickenBridge.scm",(void*)f_31012},
{"f_31016ChickenBridge.scm",(void*)f_31016},
{"f_30977ChickenBridge.scm",(void*)f_30977},
{"f_30981ChickenBridge.scm",(void*)f_30981},
{"f_30942ChickenBridge.scm",(void*)f_30942},
{"f_30946ChickenBridge.scm",(void*)f_30946},
{"f_30374ChickenBridge.scm",(void*)f_30374},
{"f_30906ChickenBridge.scm",(void*)f_30906},
{"f_30921ChickenBridge.scm",(void*)f_30921},
{"f_30913ChickenBridge.scm",(void*)f_30913},
{"f_30877ChickenBridge.scm",(void*)f_30877},
{"f_30881ChickenBridge.scm",(void*)f_30881},
{"f_30842ChickenBridge.scm",(void*)f_30842},
{"f_30846ChickenBridge.scm",(void*)f_30846},
{"f_30807ChickenBridge.scm",(void*)f_30807},
{"f_30811ChickenBridge.scm",(void*)f_30811},
{"f_30772ChickenBridge.scm",(void*)f_30772},
{"f_30776ChickenBridge.scm",(void*)f_30776},
{"f_30377ChickenBridge.scm",(void*)f_30377},
{"f_30736ChickenBridge.scm",(void*)f_30736},
{"f_30751ChickenBridge.scm",(void*)f_30751},
{"f_30743ChickenBridge.scm",(void*)f_30743},
{"f_30707ChickenBridge.scm",(void*)f_30707},
{"f_30711ChickenBridge.scm",(void*)f_30711},
{"f_30672ChickenBridge.scm",(void*)f_30672},
{"f_30676ChickenBridge.scm",(void*)f_30676},
{"f_30637ChickenBridge.scm",(void*)f_30637},
{"f_30641ChickenBridge.scm",(void*)f_30641},
{"f_30602ChickenBridge.scm",(void*)f_30602},
{"f_30606ChickenBridge.scm",(void*)f_30606},
{"f_30380ChickenBridge.scm",(void*)f_30380},
{"f_30566ChickenBridge.scm",(void*)f_30566},
{"f_30581ChickenBridge.scm",(void*)f_30581},
{"f_30573ChickenBridge.scm",(void*)f_30573},
{"f_30537ChickenBridge.scm",(void*)f_30537},
{"f_30541ChickenBridge.scm",(void*)f_30541},
{"f_30502ChickenBridge.scm",(void*)f_30502},
{"f_30506ChickenBridge.scm",(void*)f_30506},
{"f_30467ChickenBridge.scm",(void*)f_30467},
{"f_30471ChickenBridge.scm",(void*)f_30471},
{"f_30432ChickenBridge.scm",(void*)f_30432},
{"f_30436ChickenBridge.scm",(void*)f_30436},
{"f_30383ChickenBridge.scm",(void*)f_30383},
{"f_30386ChickenBridge.scm",(void*)f_30386},
{"f_30390ChickenBridge.scm",(void*)f_30390},
{"f_30025ChickenBridge.scm",(void*)f_30025},
{"f_29865ChickenBridge.scm",(void*)f_29865},
{"f_29900ChickenBridge.scm",(void*)f_29900},
{"f_29910ChickenBridge.scm",(void*)f_29910},
{"f_29914ChickenBridge.scm",(void*)f_29914},
{"f_29917ChickenBridge.scm",(void*)f_29917},
{"f_29978ChickenBridge.scm",(void*)f_29978},
{"f_29969ChickenBridge.scm",(void*)f_29969},
{"f_29920ChickenBridge.scm",(void*)f_29920},
{"f_29939ChickenBridge.scm",(void*)f_29939},
{"f_29946ChickenBridge.scm",(void*)f_29946},
{"f_29923ChickenBridge.scm",(void*)f_29923},
{"f_29929ChickenBridge.scm",(void*)f_29929},
{"f_29898ChickenBridge.scm",(void*)f_29898},
{"f_29873ChickenBridge.scm",(void*)f_29873},
{"f_29872ChickenBridge.scm",(void*)f_29872},
{"f_30033ChickenBridge.scm",(void*)f_30033},
{"f_29611ChickenBridge.scm",(void*)f_29611},
{"f_29633ChickenBridge.scm",(void*)f_29633},
{"f_29648ChickenBridge.scm",(void*)f_29648},
{"f_29651ChickenBridge.scm",(void*)f_29651},
{"f_29827ChickenBridge.scm",(void*)f_29827},
{"f_29821ChickenBridge.scm",(void*)f_29821},
{"f_29654ChickenBridge.scm",(void*)f_29654},
{"f_29803ChickenBridge.scm",(void*)f_29803},
{"f_29657ChickenBridge.scm",(void*)f_29657},
{"f_29660ChickenBridge.scm",(void*)f_29660},
{"f_29796ChickenBridge.scm",(void*)f_29796},
{"f_29784ChickenBridge.scm",(void*)f_29784},
{"f_29680ChickenBridge.scm",(void*)f_29680},
{"f_29687ChickenBridge.scm",(void*)f_29687},
{"f_29757ChickenBridge.scm",(void*)f_29757},
{"f_29743ChickenBridge.scm",(void*)f_29743},
{"f_29751ChickenBridge.scm",(void*)f_29751},
{"f_29690ChickenBridge.scm",(void*)f_29690},
{"f_29729ChickenBridge.scm",(void*)f_29729},
{"f_29693ChickenBridge.scm",(void*)f_29693},
{"f_29722ChickenBridge.scm",(void*)f_29722},
{"f_29699ChickenBridge.scm",(void*)f_29699},
{"f_29702ChickenBridge.scm",(void*)f_29702},
{"f_29706ChickenBridge.scm",(void*)f_29706},
{"f_29667ChickenBridge.scm",(void*)f_29667},
{"f_29670ChickenBridge.scm",(void*)f_29670},
{"f_29480ChickenBridge.scm",(void*)f_29480},
{"f_29489ChickenBridge.scm",(void*)f_29489},
{"f_29437ChickenBridge.scm",(void*)f_29437},
{"f_29443ChickenBridge.scm",(void*)f_29443},
{"f_29506ChickenBridge.scm",(void*)f_29506},
{"f_29592ChickenBridge.scm",(void*)f_29592},
{"f_29579ChickenBridge.scm",(void*)f_29579},
{"f_29587ChickenBridge.scm",(void*)f_29587},
{"f_29509ChickenBridge.scm",(void*)f_29509},
{"f_29513ChickenBridge.scm",(void*)f_29513},
{"f_29556ChickenBridge.scm",(void*)f_29556},
{"f_29518ChickenBridge.scm",(void*)f_29518},
{"f_29484ChickenBridge.scm",(void*)f_29484},
{"f_29379ChickenBridge.scm",(void*)f_29379},
{"f_29386ChickenBridge.scm",(void*)f_29386},
{"f_29417ChickenBridge.scm",(void*)f_29417},
{"f_29413ChickenBridge.scm",(void*)f_29413},
{"f_29405ChickenBridge.scm",(void*)f_29405},
{"f_29288ChickenBridge.scm",(void*)f_29288},
{"f_29295ChickenBridge.scm",(void*)f_29295},
{"f_29363ChickenBridge.scm",(void*)f_29363},
{"f_29306ChickenBridge.scm",(void*)f_29306},
{"f_29333ChickenBridge.scm",(void*)f_29333},
{"f_29317ChickenBridge.scm",(void*)f_29317},
{"f_29222ChickenBridge.scm",(void*)f_29222},
{"f_29233ChickenBridge.scm",(void*)f_29233},
{"f_29236ChickenBridge.scm",(void*)f_29236},
{"f_29243ChickenBridge.scm",(void*)f_29243},
{"f_29216ChickenBridge.scm",(void*)f_29216},
{"f_28670ChickenBridge.scm",(void*)f_28670},
{"f_28701ChickenBridge.scm",(void*)f_28701},
{"f_29165ChickenBridge.scm",(void*)f_29165},
{"f_29171ChickenBridge.scm",(void*)f_29171},
{"f_28712ChickenBridge.scm",(void*)f_28712},
{"f_28597ChickenBridge.scm",(void*)f_28597},
{"f_28622ChickenBridge.scm",(void*)f_28622},
{"f_28557ChickenBridge.scm",(void*)f_28557},
{"f_28570ChickenBridge.scm",(void*)f_28570},
{"f_28611ChickenBridge.scm",(void*)f_28611},
{"f_28716ChickenBridge.scm",(void*)f_28716},
{"f_29153ChickenBridge.scm",(void*)f_29153},
{"f_29149ChickenBridge.scm",(void*)f_29149},
{"f_29145ChickenBridge.scm",(void*)f_29145},
{"f_28719ChickenBridge.scm",(void*)f_28719},
{"f_28939ChickenBridge.scm",(void*)f_28939},
{"f_29048ChickenBridge.scm",(void*)f_29048},
{"f_29113ChickenBridge.scm",(void*)f_29113},
{"f_29055ChickenBridge.scm",(void*)f_29055},
{"f_29059ChickenBridge.scm",(void*)f_29059},
{"f_29063ChickenBridge.scm",(void*)f_29063},
{"f_29105ChickenBridge.scm",(void*)f_29105},
{"f_29101ChickenBridge.scm",(void*)f_29101},
{"f_29079ChickenBridge.scm",(void*)f_29079},
{"f_28942ChickenBridge.scm",(void*)f_28942},
{"f_28945ChickenBridge.scm",(void*)f_28945},
{"f_28844ChickenBridge.scm",(void*)f_28844},
{"f_28927ChickenBridge.scm",(void*)f_28927},
{"f_28894ChickenBridge.scm",(void*)f_28894},
{"f_28920ChickenBridge.scm",(void*)f_28920},
{"f_28902ChickenBridge.scm",(void*)f_28902},
{"f_28850ChickenBridge.scm",(void*)f_28850},
{"f_28890ChickenBridge.scm",(void*)f_28890},
{"f_28832ChickenBridge.scm",(void*)f_28832},
{"f_28803ChickenBridge.scm",(void*)f_28803},
{"f_28825ChickenBridge.scm",(void*)f_28825},
{"f_28811ChickenBridge.scm",(void*)f_28811},
{"f_28765ChickenBridge.scm",(void*)f_28765},
{"f_28722ChickenBridge.scm",(void*)f_28722},
{"f_28733ChickenBridge.scm",(void*)f_28733},
{"f_28737ChickenBridge.scm",(void*)f_28737},
{"f_28741ChickenBridge.scm",(void*)f_28741},
{"f_28745ChickenBridge.scm",(void*)f_28745},
{"f_28729ChickenBridge.scm",(void*)f_28729},
{"f_28689ChickenBridge.scm",(void*)f_28689},
{"f_28684ChickenBridge.scm",(void*)f_28684},
{"f_28679ChickenBridge.scm",(void*)f_28679},
{"f_28511ChickenBridge.scm",(void*)f_28511},
{"f_28522ChickenBridge.scm",(void*)f_28522},
{"f_28537ChickenBridge.scm",(void*)f_28537},
{"f_28473ChickenBridge.scm",(void*)f_28473},
{"f_28484ChickenBridge.scm",(void*)f_28484},
{"f_28499ChickenBridge.scm",(void*)f_28499},
{"f_28406ChickenBridge.scm",(void*)f_28406},
{"f_28426ChickenBridge.scm",(void*)f_28426},
{"f_28436ChickenBridge.scm",(void*)f_28436},
{"f_28449ChickenBridge.scm",(void*)f_28449},
{"f_28417ChickenBridge.scm",(void*)f_28417},
{"f_28424ChickenBridge.scm",(void*)f_28424},
{"f_28213ChickenBridge.scm",(void*)f_28213},
{"f_28273ChickenBridge.scm",(void*)f_28273},
{"f_28283ChickenBridge.scm",(void*)f_28283},
{"f_28397ChickenBridge.scm",(void*)f_28397},
{"f_28362ChickenBridge.scm",(void*)f_28362},
{"f_28354ChickenBridge.scm",(void*)f_28354},
{"f_28325ChickenBridge.scm",(void*)f_28325},
{"f_28303ChickenBridge.scm",(void*)f_28303},
{"f_28306ChickenBridge.scm",(void*)f_28306},
{"f_28294ChickenBridge.scm",(void*)f_28294},
{"f_28220ChickenBridge.scm",(void*)f_28220},
{"f_28271ChickenBridge.scm",(void*)f_28271},
{"f_28263ChickenBridge.scm",(void*)f_28263},
{"f_28223ChickenBridge.scm",(void*)f_28223},
{"f_28234ChickenBridge.scm",(void*)f_28234},
{"f_28238ChickenBridge.scm",(void*)f_28238},
{"f_28230ChickenBridge.scm",(void*)f_28230},
{"f_28071ChickenBridge.scm",(void*)f_28071},
{"f_28119ChickenBridge.scm",(void*)f_28119},
{"f_28129ChickenBridge.scm",(void*)f_28129},
{"f_28140ChickenBridge.scm",(void*)f_28140},
{"f_28177ChickenBridge.scm",(void*)f_28177},
{"f_28152ChickenBridge.scm",(void*)f_28152},
{"f_28143ChickenBridge.scm",(void*)f_28143},
{"f_28081ChickenBridge.scm",(void*)f_28081},
{"f_28117ChickenBridge.scm",(void*)f_28117},
{"f_28088ChickenBridge.scm",(void*)f_28088},
{"f_27720ChickenBridge.scm",(void*)f_27720},
{"f_27727ChickenBridge.scm",(void*)f_27727},
{"f_27961ChickenBridge.scm",(void*)f_27961},
{"f_27971ChickenBridge.scm",(void*)f_27971},
{"f_27982ChickenBridge.scm",(void*)f_27982},
{"f_27994ChickenBridge.scm",(void*)f_27994},
{"f_27997ChickenBridge.scm",(void*)f_27997},
{"f_27985ChickenBridge.scm",(void*)f_27985},
{"f_27733ChickenBridge.scm",(void*)f_27733},
{"f_27959ChickenBridge.scm",(void*)f_27959},
{"f_27955ChickenBridge.scm",(void*)f_27955},
{"f_27901ChickenBridge.scm",(void*)f_27901},
{"f_27866ChickenBridge.scm",(void*)f_27866},
{"f_27882ChickenBridge.scm",(void*)f_27882},
{"f_27837ChickenBridge.scm",(void*)f_27837},
{"f_27761ChickenBridge.scm",(void*)f_27761},
{"f_27764ChickenBridge.scm",(void*)f_27764},
{"f_27828ChickenBridge.scm",(void*)f_27828},
{"f_27824ChickenBridge.scm",(void*)f_27824},
{"f_27744ChickenBridge.scm",(void*)f_27744},
{"f_27755ChickenBridge.scm",(void*)f_27755},
{"f_27751ChickenBridge.scm",(void*)f_27751},
{"f_27673ChickenBridge.scm",(void*)f_27673},
{"f_27706ChickenBridge.scm",(void*)f_27706},
{"f_27688ChickenBridge.scm",(void*)f_27688},
{"f_27700ChickenBridge.scm",(void*)f_27700},
{"f_27291ChickenBridge.scm",(void*)f_27291},
{"f_27500ChickenBridge.scm",(void*)f_27500},
{"f_27510ChickenBridge.scm",(void*)f_27510},
{"f_27521ChickenBridge.scm",(void*)f_27521},
{"f_27641ChickenBridge.scm",(void*)f_27641},
{"f_27620ChickenBridge.scm",(void*)f_27620},
{"f_27599ChickenBridge.scm",(void*)f_27599},
{"f_27578ChickenBridge.scm",(void*)f_27578},
{"f_27557ChickenBridge.scm",(void*)f_27557},
{"f_27536ChickenBridge.scm",(void*)f_27536},
{"f_27524ChickenBridge.scm",(void*)f_27524},
{"f_27301ChickenBridge.scm",(void*)f_27301},
{"f_27304ChickenBridge.scm",(void*)f_27304},
{"f_27467ChickenBridge.scm",(void*)f_27467},
{"f_27307ChickenBridge.scm",(void*)f_27307},
{"f_27458ChickenBridge.scm",(void*)f_27458},
{"f_27438ChickenBridge.scm",(void*)f_27438},
{"f_27310ChickenBridge.scm",(void*)f_27310},
{"f_27403ChickenBridge.scm",(void*)f_27403},
{"f_27420ChickenBridge.scm",(void*)f_27420},
{"f_27313ChickenBridge.scm",(void*)f_27313},
{"f_27352ChickenBridge.scm",(void*)f_27352},
{"f_27386ChickenBridge.scm",(void*)f_27386},
{"f_27370ChickenBridge.scm",(void*)f_27370},
{"f_27355ChickenBridge.scm",(void*)f_27355},
{"f_27320ChickenBridge.scm",(void*)f_27320},
{"f_27331ChickenBridge.scm",(void*)f_27331},
{"f_27335ChickenBridge.scm",(void*)f_27335},
{"f_27327ChickenBridge.scm",(void*)f_27327},
{"f_27209ChickenBridge.scm",(void*)f_27209},
{"f_27213ChickenBridge.scm",(void*)f_27213},
{"f_27231ChickenBridge.scm",(void*)f_27231},
{"f_27049ChickenBridge.scm",(void*)f_27049},
{"f_27057ChickenBridge.scm",(void*)f_27057},
{"f_27067ChickenBridge.scm",(void*)f_27067},
{"f_27105ChickenBridge.scm",(void*)f_27105},
{"f_27108ChickenBridge.scm",(void*)f_27108},
{"f_27111ChickenBridge.scm",(void*)f_27111},
{"f_27186ChickenBridge.scm",(void*)f_27186},
{"f_27196ChickenBridge.scm",(void*)f_27196},
{"f_27114ChickenBridge.scm",(void*)f_27114},
{"f_27117ChickenBridge.scm",(void*)f_27117},
{"f_27120ChickenBridge.scm",(void*)f_27120},
{"f_27140ChickenBridge.scm",(void*)f_27140},
{"f_27150ChickenBridge.scm",(void*)f_27150},
{"f_27153ChickenBridge.scm",(void*)f_27153},
{"f_27156ChickenBridge.scm",(void*)f_27156},
{"f_27123ChickenBridge.scm",(void*)f_27123},
{"f_27126ChickenBridge.scm",(void*)f_27126},
{"f_27043ChickenBridge.scm",(void*)f_27043},
{"f_27037ChickenBridge.scm",(void*)f_27037},
{"f_27031ChickenBridge.scm",(void*)f_27031},
{"f_26960ChickenBridge.scm",(void*)f_26960},
{"f_27001ChickenBridge.scm",(void*)f_27001},
{"f_27005ChickenBridge.scm",(void*)f_27005},
{"f_27009ChickenBridge.scm",(void*)f_27009},
{"f_27013ChickenBridge.scm",(void*)f_27013},
{"f_27017ChickenBridge.scm",(void*)f_27017},
{"f_27021ChickenBridge.scm",(void*)f_27021},
{"f_27025ChickenBridge.scm",(void*)f_27025},
{"f_27029ChickenBridge.scm",(void*)f_27029},
{"f_26962ChickenBridge.scm",(void*)f_26962},
{"f_26968ChickenBridge.scm",(void*)f_26968},
{"f_26990ChickenBridge.scm",(void*)f_26990},
{"f_26979ChickenBridge.scm",(void*)f_26979},
{"f_26809ChickenBridge.scm",(void*)f_26809},
{"f_26824ChickenBridge.scm",(void*)f_26824},
{"f_26837ChickenBridge.scm",(void*)f_26837},
{"f_26797ChickenBridge.scm",(void*)f_26797},
{"f_26785ChickenBridge.scm",(void*)f_26785},
{"f_26773ChickenBridge.scm",(void*)f_26773},
{"f_26767ChickenBridge.scm",(void*)f_26767},
{"f_26761ChickenBridge.scm",(void*)f_26761},
{"f_26749ChickenBridge.scm",(void*)f_26749},
{"f_26737ChickenBridge.scm",(void*)f_26737},
{"f_26725ChickenBridge.scm",(void*)f_26725},
{"f_26713ChickenBridge.scm",(void*)f_26713},
{"f_26707ChickenBridge.scm",(void*)f_26707},
{"f_26671ChickenBridge.scm",(void*)f_26671},
{"f_26665ChickenBridge.scm",(void*)f_26665},
{"f_26611ChickenBridge.scm",(void*)f_26611},
{"f_26615ChickenBridge.scm",(void*)f_26615},
{"f_26631ChickenBridge.scm",(void*)f_26631},
{"f_26663ChickenBridge.scm",(void*)f_26663},
{"f_26637ChickenBridge.scm",(void*)f_26637},
{"f_26643ChickenBridge.scm",(void*)f_26643},
{"f_26618ChickenBridge.scm",(void*)f_26618},
{"f_26602ChickenBridge.scm",(void*)f_26602},
{"f_26606ChickenBridge.scm",(void*)f_26606},
{"f_26449ChickenBridge.scm",(void*)f_26449},
{"f_26576ChickenBridge.scm",(void*)f_26576},
{"f_26589ChickenBridge.scm",(void*)f_26589},
{"f_26571ChickenBridge.scm",(void*)f_26571},
{"f_26452ChickenBridge.scm",(void*)f_26452},
{"f_26568ChickenBridge.scm",(void*)f_26568},
{"f_26552ChickenBridge.scm",(void*)f_26552},
{"f_26480ChickenBridge.scm",(void*)f_26480},
{"f_26488ChickenBridge.scm",(void*)f_26488},
{"f_26498ChickenBridge.scm",(void*)f_26498},
{"f_26501ChickenBridge.scm",(void*)f_26501},
{"f_26483ChickenBridge.scm",(void*)f_26483},
{"f_26272ChickenBridge.scm",(void*)f_26272},
{"f_26276ChickenBridge.scm",(void*)f_26276},
{"f_26281ChickenBridge.scm",(void*)f_26281},
{"f_26284ChickenBridge.scm",(void*)f_26284},
{"f_24019ChickenBridge.scm",(void*)f_24019},
{"f_24032ChickenBridge.scm",(void*)f_24032},
{"f_24039ChickenBridge.scm",(void*)f_24039},
{"f_24046ChickenBridge.scm",(void*)f_24046},
{"f_24025ChickenBridge.scm",(void*)f_24025},
{"f_26288ChickenBridge.scm",(void*)f_26288},
{"f_26325ChickenBridge.scm",(void*)f_26325},
{"f_26418ChickenBridge.scm",(void*)f_26418},
{"f_26428ChickenBridge.scm",(void*)f_26428},
{"f_26331ChickenBridge.scm",(void*)f_26331},
{"f_26388ChickenBridge.scm",(void*)f_26388},
{"f_26398ChickenBridge.scm",(void*)f_26398},
{"f_26339ChickenBridge.scm",(void*)f_26339},
{"f_26353ChickenBridge.scm",(void*)f_26353},
{"f_26357ChickenBridge.scm",(void*)f_26357},
{"f_26361ChickenBridge.scm",(void*)f_26361},
{"f_26365ChickenBridge.scm",(void*)f_26365},
{"f_26372ChickenBridge.scm",(void*)f_26372},
{"f_26349ChickenBridge.scm",(void*)f_26349},
{"f_26342ChickenBridge.scm",(void*)f_26342},
{"f_26291ChickenBridge.scm",(void*)f_26291},
{"f_25146ChickenBridge.scm",(void*)f_25146},
{"f_25159ChickenBridge.scm",(void*)f_25159},
{"f_25209ChickenBridge.scm",(void*)f_25209},
{"f_25306ChickenBridge.scm",(void*)f_25306},
{"f_25374ChickenBridge.scm",(void*)f_25374},
{"f_25631ChickenBridge.scm",(void*)f_25631},
{"f_25381ChickenBridge.scm",(void*)f_25381},
{"f_25619ChickenBridge.scm",(void*)f_25619},
{"f_25570ChickenBridge.scm",(void*)f_25570},
{"f_25576ChickenBridge.scm",(void*)f_25576},
{"f_25600ChickenBridge.scm",(void*)f_25600},
{"f_25596ChickenBridge.scm",(void*)f_25596},
{"f_25584ChickenBridge.scm",(void*)f_25584},
{"f_25384ChickenBridge.scm",(void*)f_25384},
{"f_25546ChickenBridge.scm",(void*)f_25546},
{"f_25550ChickenBridge.scm",(void*)f_25550},
{"f_25387ChickenBridge.scm",(void*)f_25387},
{"f_25523ChickenBridge.scm",(void*)f_25523},
{"f_25527ChickenBridge.scm",(void*)f_25527},
{"f_25390ChickenBridge.scm",(void*)f_25390},
{"f_25500ChickenBridge.scm",(void*)f_25500},
{"f_25504ChickenBridge.scm",(void*)f_25504},
{"f_25393ChickenBridge.scm",(void*)f_25393},
{"f_25425ChickenBridge.scm",(void*)f_25425},
{"f_25443ChickenBridge.scm",(void*)f_25443},
{"f_25461ChickenBridge.scm",(void*)f_25461},
{"f_25479ChickenBridge.scm",(void*)f_25479},
{"f_25396ChickenBridge.scm",(void*)f_25396},
{"f_25400ChickenBridge.scm",(void*)f_25400},
{"f_25310ChickenBridge.scm",(void*)f_25310},
{"f_25314ChickenBridge.scm",(void*)f_25314},
{"f_25318ChickenBridge.scm",(void*)f_25318},
{"f_25213ChickenBridge.scm",(void*)f_25213},
{"f_25217ChickenBridge.scm",(void*)f_25217},
{"f_25221ChickenBridge.scm",(void*)f_25221},
{"f_25240ChickenBridge.scm",(void*)f_25240},
{"f_25244ChickenBridge.scm",(void*)f_25244},
{"f_25224ChickenBridge.scm",(void*)f_25224},
{"f_25228ChickenBridge.scm",(void*)f_25228},
{"f_25163ChickenBridge.scm",(void*)f_25163},
{"f_25167ChickenBridge.scm",(void*)f_25167},
{"f_25171ChickenBridge.scm",(void*)f_25171},
{"f_25153ChickenBridge.scm",(void*)f_25153},
{"f_24968ChickenBridge.scm",(void*)f_24968},
{"f_24980ChickenBridge.scm",(void*)f_24980},
{"f_24999ChickenBridge.scm",(void*)f_24999},
{"f_25017ChickenBridge.scm",(void*)f_25017},
{"f_25049ChickenBridge.scm",(void*)f_25049},
{"f_25052ChickenBridge.scm",(void*)f_25052},
{"f_25045ChickenBridge.scm",(void*)f_25045},
{"f_25031ChickenBridge.scm",(void*)f_25031},
{"f_25002ChickenBridge.scm",(void*)f_25002},
{"f_24947ChickenBridge.scm",(void*)f_24947},
{"f_24954ChickenBridge.scm",(void*)f_24954},
{"f_24957ChickenBridge.scm",(void*)f_24957},
{"f_24963ChickenBridge.scm",(void*)f_24963},
{"f_24882ChickenBridge.scm",(void*)f_24882},
{"f_24891ChickenBridge.scm",(void*)f_24891},
{"f_24914ChickenBridge.scm",(void*)f_24914},
{"f_24904ChickenBridge.scm",(void*)f_24904},
{"f_24838ChickenBridge.scm",(void*)f_24838},
{"f_24826ChickenBridge.scm",(void*)f_24826},
{"f_24724ChickenBridge.scm",(void*)f_24724},
{"f_24676ChickenBridge.scm",(void*)f_24676},
{"f_24057ChickenBridge.scm",(void*)f_24057},
{"f_24061ChickenBridge.scm",(void*)f_24061},
{"f_24064ChickenBridge.scm",(void*)f_24064},
{"f_24490ChickenBridge.scm",(void*)f_24490},
{"f_24486ChickenBridge.scm",(void*)f_24486},
{"f_24482ChickenBridge.scm",(void*)f_24482},
{"f_24067ChickenBridge.scm",(void*)f_24067},
{"f_24190ChickenBridge.scm",(void*)f_24190},
{"f_23366ChickenBridge.scm",(void*)f_23366},
{"f_24196ChickenBridge.scm",(void*)f_24196},
{"f_23382ChickenBridge.scm",(void*)f_23382},
{"f_24284ChickenBridge.scm",(void*)f_24284},
{"f_24354ChickenBridge.scm",(void*)f_24354},
{"f_23398ChickenBridge.scm",(void*)f_23398},
{"f_24357ChickenBridge.scm",(void*)f_24357},
{"f_23430ChickenBridge.scm",(void*)f_23430},
{"f_24435ChickenBridge.scm",(void*)f_24435},
{"f_24461ChickenBridge.scm",(void*)f_24461},
{"f_24455ChickenBridge.scm",(void*)f_24455},
{"f_24444ChickenBridge.scm",(void*)f_24444},
{"f_24386ChickenBridge.scm",(void*)f_24386},
{"f_24396ChickenBridge.scm",(void*)f_24396},
{"f_24422ChickenBridge.scm",(void*)f_24422},
{"f_24416ChickenBridge.scm",(void*)f_24416},
{"f_24399ChickenBridge.scm",(void*)f_24399},
{"f_24409ChickenBridge.scm",(void*)f_24409},
{"f_24402ChickenBridge.scm",(void*)f_24402},
{"f_24363ChickenBridge.scm",(void*)f_24363},
{"f_24372ChickenBridge.scm",(void*)f_24372},
{"f_24366ChickenBridge.scm",(void*)f_24366},
{"f_24290ChickenBridge.scm",(void*)f_24290},
{"f_24308ChickenBridge.scm",(void*)f_24308},
{"f_24341ChickenBridge.scm",(void*)f_24341},
{"f_24327ChickenBridge.scm",(void*)f_24327},
{"f_24335ChickenBridge.scm",(void*)f_24335},
{"f_24318ChickenBridge.scm",(void*)f_24318},
{"f_24293ChickenBridge.scm",(void*)f_24293},
{"f_24205ChickenBridge.scm",(void*)f_24205},
{"f_24227ChickenBridge.scm",(void*)f_24227},
{"f_24274ChickenBridge.scm",(void*)f_24274},
{"f_24260ChickenBridge.scm",(void*)f_24260},
{"f_24268ChickenBridge.scm",(void*)f_24268},
{"f_24240ChickenBridge.scm",(void*)f_24240},
{"f_24243ChickenBridge.scm",(void*)f_24243},
{"f_24208ChickenBridge.scm",(void*)f_24208},
{"f_24225ChickenBridge.scm",(void*)f_24225},
{"f_24211ChickenBridge.scm",(void*)f_24211},
{"f_24076ChickenBridge.scm",(void*)f_24076},
{"f_24082ChickenBridge.scm",(void*)f_24082},
{"f_24140ChickenBridge.scm",(void*)f_24140},
{"f_24143ChickenBridge.scm",(void*)f_24143},
{"f_24164ChickenBridge.scm",(void*)f_24164},
{"f_24175ChickenBridge.scm",(void*)f_24175},
{"f_24154ChickenBridge.scm",(void*)f_24154},
{"f_24088ChickenBridge.scm",(void*)f_24088},
{"f_24098ChickenBridge.scm",(void*)f_24098},
{"f_24134ChickenBridge.scm",(void*)f_24134},
{"f_24104ChickenBridge.scm",(void*)f_24104},
{"f_24119ChickenBridge.scm",(void*)f_24119},
{"f_24123ChickenBridge.scm",(void*)f_24123},
{"f_24127ChickenBridge.scm",(void*)f_24127},
{"f_24111ChickenBridge.scm",(void*)f_24111},
{"f_23953ChickenBridge.scm",(void*)f_23953},
{"f_23955ChickenBridge.scm",(void*)f_23955},
{"f_24003ChickenBridge.scm",(void*)f_24003},
{"f_23959ChickenBridge.scm",(void*)f_23959},
{"f_23962ChickenBridge.scm",(void*)f_23962},
{"f_23967ChickenBridge.scm",(void*)f_23967},
{"f_23988ChickenBridge.scm",(void*)f_23988},
{"f_23945ChickenBridge.scm",(void*)f_23945},
{"f_23947ChickenBridge.scm",(void*)f_23947},
{"f_23768ChickenBridge.scm",(void*)f_23768},
{"f_23776ChickenBridge.scm",(void*)f_23776},
{"f_23737ChickenBridge.scm",(void*)f_23737},
{"f_23754ChickenBridge.scm",(void*)f_23754},
{"f_23758ChickenBridge.scm",(void*)f_23758},
{"f_23704ChickenBridge.scm",(void*)f_23704},
{"f_23711ChickenBridge.scm",(void*)f_23711},
{"f_23598ChickenBridge.scm",(void*)f_23598},
{"f_23605ChickenBridge.scm",(void*)f_23605},
{"f_23720ChickenBridge.scm",(void*)f_23720},
{"f_23943ChickenBridge.scm",(void*)f_23943},
{"f_23920ChickenBridge.scm",(void*)f_23920},
{"f_23936ChickenBridge.scm",(void*)f_23936},
{"f_23782ChickenBridge.scm",(void*)f_23782},
{"f_23785ChickenBridge.scm",(void*)f_23785},
{"f_23809ChickenBridge.scm",(void*)f_23809},
{"f_23866ChickenBridge.scm",(void*)f_23866},
{"f_23872ChickenBridge.scm",(void*)f_23872},
{"f_23881ChickenBridge.scm",(void*)f_23881},
{"f_23890ChickenBridge.scm",(void*)f_23890},
{"f_23899ChickenBridge.scm",(void*)f_23899},
{"f_23908ChickenBridge.scm",(void*)f_23908},
{"f_23860ChickenBridge.scm",(void*)f_23860},
{"f_23815ChickenBridge.scm",(void*)f_23815},
{"f_23821ChickenBridge.scm",(void*)f_23821},
{"f_23827ChickenBridge.scm",(void*)f_23827},
{"f_23833ChickenBridge.scm",(void*)f_23833},
{"f_23839ChickenBridge.scm",(void*)f_23839},
{"f_23845ChickenBridge.scm",(void*)f_23845},
{"f_23686ChickenBridge.scm",(void*)f_23686},
{"f_23693ChickenBridge.scm",(void*)f_23693},
{"f_23619ChickenBridge.scm",(void*)f_23619},
{"f_23607ChickenBridge.scm",(void*)f_23607},
{"f_23575ChickenBridge.scm",(void*)f_23575},
{"f_23582ChickenBridge.scm",(void*)f_23582},
{"f_23589ChickenBridge.scm",(void*)f_23589},
{"f_23559ChickenBridge.scm",(void*)f_23559},
{"f_23566ChickenBridge.scm",(void*)f_23566},
{"f_23573ChickenBridge.scm",(void*)f_23573},
{"f_23547ChickenBridge.scm",(void*)f_23547},
{"f_23529ChickenBridge.scm",(void*)f_23529},
{"f_23511ChickenBridge.scm",(void*)f_23511},
{"f_23496ChickenBridge.scm",(void*)f_23496},
{"f_23490ChickenBridge.scm",(void*)f_23490},
{"f_23478ChickenBridge.scm",(void*)f_23478},
{"f_23460ChickenBridge.scm",(void*)f_23460},
{"f_23439ChickenBridge.scm",(void*)f_23439},
{"f_23407ChickenBridge.scm",(void*)f_23407},
{"f_23414ChickenBridge.scm",(void*)f_23414},
{"f_23349ChickenBridge.scm",(void*)f_23349},
{"f_23357ChickenBridge.scm",(void*)f_23357},
{"f_23339ChickenBridge.scm",(void*)f_23339},
{"f_23347ChickenBridge.scm",(void*)f_23347},
{"f_23333ChickenBridge.scm",(void*)f_23333},
{"f_23321ChickenBridge.scm",(void*)f_23321},
{"f_23318ChickenBridge.scm",(void*)f_23318},
{"f_23297ChickenBridge.scm",(void*)f_23297},
{"f_23210ChickenBridge.scm",(void*)f_23210},
{"f_23189ChickenBridge.scm",(void*)f_23189},
{"f_23179ChickenBridge.scm",(void*)f_23179},
{"f_23167ChickenBridge.scm",(void*)f_23167},
{"f_23138ChickenBridge.scm",(void*)f_23138},
{"f_23126ChickenBridge.scm",(void*)f_23126},
{"f_23108ChickenBridge.scm",(void*)f_23108},
{"f_23090ChickenBridge.scm",(void*)f_23090},
{"f_23069ChickenBridge.scm",(void*)f_23069},
{"f_22047ChickenBridge.scm",(void*)f_22047},
{"f_23046ChickenBridge.scm",(void*)f_23046},
{"f_23061ChickenBridge.scm",(void*)f_23061},
{"f_23053ChickenBridge.scm",(void*)f_23053},
{"f_23017ChickenBridge.scm",(void*)f_23017},
{"f_23021ChickenBridge.scm",(void*)f_23021},
{"f_22982ChickenBridge.scm",(void*)f_22982},
{"f_22986ChickenBridge.scm",(void*)f_22986},
{"f_22057ChickenBridge.scm",(void*)f_22057},
{"f_22946ChickenBridge.scm",(void*)f_22946},
{"f_22961ChickenBridge.scm",(void*)f_22961},
{"f_22953ChickenBridge.scm",(void*)f_22953},
{"f_22917ChickenBridge.scm",(void*)f_22917},
{"f_22921ChickenBridge.scm",(void*)f_22921},
{"f_22882ChickenBridge.scm",(void*)f_22882},
{"f_22886ChickenBridge.scm",(void*)f_22886},
{"f_22060ChickenBridge.scm",(void*)f_22060},
{"f_22063ChickenBridge.scm",(void*)f_22063},
{"f_22068ChickenBridge.scm",(void*)f_22068},
{"f_22775ChickenBridge.scm",(void*)f_22775},
{"f_22798ChickenBridge.scm",(void*)f_22798},
{"f_22851ChickenBridge.scm",(void*)f_22851},
{"f_22833ChickenBridge.scm",(void*)f_22833},
{"f_22826ChickenBridge.scm",(void*)f_22826},
{"f_22808ChickenBridge.scm",(void*)f_22808},
{"f_22785ChickenBridge.scm",(void*)f_22785},
{"f_22262ChickenBridge.scm",(void*)f_22262},
{"f_22737ChickenBridge.scm",(void*)f_22737},
{"f_22759ChickenBridge.scm",(void*)f_22759},
{"f_22743ChickenBridge.scm",(void*)f_22743},
{"f_22751ChickenBridge.scm",(void*)f_22751},
{"f_22755ChickenBridge.scm",(void*)f_22755},
{"f_22741ChickenBridge.scm",(void*)f_22741},
{"f_22731ChickenBridge.scm",(void*)f_22731},
{"f_22265ChickenBridge.scm",(void*)f_22265},
{"f_22608ChickenBridge.scm",(void*)f_22608},
{"f_22632ChickenBridge.scm",(void*)f_22632},
{"f_22694ChickenBridge.scm",(void*)f_22694},
{"f_22635ChickenBridge.scm",(void*)f_22635},
{"f_22651ChickenBridge.scm",(void*)f_22651},
{"f_22676ChickenBridge.scm",(void*)f_22676},
{"f_22642ChickenBridge.scm",(void*)f_22642},
{"f_22619ChickenBridge.scm",(void*)f_22619},
{"f_22268ChickenBridge.scm",(void*)f_22268},
{"f_22594ChickenBridge.scm",(void*)f_22594},
{"f_22272ChickenBridge.scm",(void*)f_22272},
{"f_22316ChickenBridge.scm",(void*)f_22316},
{"f_22319ChickenBridge.scm",(void*)f_22319},
{"f_22575ChickenBridge.scm",(void*)f_22575},
{"f_22585ChickenBridge.scm",(void*)f_22585},
{"f_22322ChickenBridge.scm",(void*)f_22322},
{"f_22513ChickenBridge.scm",(void*)f_22513},
{"f_22523ChickenBridge.scm",(void*)f_22523},
{"f_22526ChickenBridge.scm",(void*)f_22526},
{"f_22546ChickenBridge.scm",(void*)f_22546},
{"f_22548ChickenBridge.scm",(void*)f_22548},
{"f_22558ChickenBridge.scm",(void*)f_22558},
{"f_22532ChickenBridge.scm",(void*)f_22532},
{"f_22535ChickenBridge.scm",(void*)f_22535},
{"f_22325ChickenBridge.scm",(void*)f_22325},
{"f_22333ChickenBridge.scm",(void*)f_22333},
{"f_22346ChickenBridge.scm",(void*)f_22346},
{"f_22220ChickenBridge.scm",(void*)f_22220},
{"f_22229ChickenBridge.scm",(void*)f_22229},
{"f_22251ChickenBridge.scm",(void*)f_22251},
{"f_22240ChickenBridge.scm",(void*)f_22240},
{"f_22349ChickenBridge.scm",(void*)f_22349},
{"f_22484ChickenBridge.scm",(void*)f_22484},
{"f_22486ChickenBridge.scm",(void*)f_22486},
{"f_22496ChickenBridge.scm",(void*)f_22496},
{"f_22355ChickenBridge.scm",(void*)f_22355},
{"f_22457ChickenBridge.scm",(void*)f_22457},
{"f_22459ChickenBridge.scm",(void*)f_22459},
{"f_22469ChickenBridge.scm",(void*)f_22469},
{"f_22358ChickenBridge.scm",(void*)f_22358},
{"f_22370ChickenBridge.scm",(void*)f_22370},
{"f_22396ChickenBridge.scm",(void*)f_22396},
{"f_22402ChickenBridge.scm",(void*)f_22402},
{"f_22408ChickenBridge.scm",(void*)f_22408},
{"f_22418ChickenBridge.scm",(void*)f_22418},
{"f_22420ChickenBridge.scm",(void*)f_22420},
{"f_22430ChickenBridge.scm",(void*)f_22430},
{"f_22411ChickenBridge.scm",(void*)f_22411},
{"f_22383ChickenBridge.scm",(void*)f_22383},
{"f_22361ChickenBridge.scm",(void*)f_22361},
{"f_22328ChickenBridge.scm",(void*)f_22328},
{"f_22275ChickenBridge.scm",(void*)f_22275},
{"f_22298ChickenBridge.scm",(void*)f_22298},
{"f_22287ChickenBridge.scm",(void*)f_22287},
{"f_22152ChickenBridge.scm",(void*)f_22152},
{"f_22200ChickenBridge.scm",(void*)f_22200},
{"f_22162ChickenBridge.scm",(void*)f_22162},
{"f_22190ChickenBridge.scm",(void*)f_22190},
{"f_22165ChickenBridge.scm",(void*)f_22165},
{"f_22070ChickenBridge.scm",(void*)f_22070},
{"f_22142ChickenBridge.scm",(void*)f_22142},
{"f_22074ChickenBridge.scm",(void*)f_22074},
{"f_22092ChickenBridge.scm",(void*)f_22092},
{"f_22124ChickenBridge.scm",(void*)f_22124},
{"f_21953ChickenBridge.scm",(void*)f_21953},
{"f_21957ChickenBridge.scm",(void*)f_21957},
{"f_21986ChickenBridge.scm",(void*)f_21986},
{"f_21991ChickenBridge.scm",(void*)f_21991},
{"f_22016ChickenBridge.scm",(void*)f_22016},
{"f_22001ChickenBridge.scm",(void*)f_22001},
{"f_21435ChickenBridge.scm",(void*)f_21435},
{"f_21706ChickenBridge.scm",(void*)f_21706},
{"f_21710ChickenBridge.scm",(void*)f_21710},
{"f_21715ChickenBridge.scm",(void*)f_21715},
{"f_21921ChickenBridge.scm",(void*)f_21921},
{"f_21936ChickenBridge.scm",(void*)f_21936},
{"f_21928ChickenBridge.scm",(void*)f_21928},
{"f_21892ChickenBridge.scm",(void*)f_21892},
{"f_21896ChickenBridge.scm",(void*)f_21896},
{"f_21857ChickenBridge.scm",(void*)f_21857},
{"f_21861ChickenBridge.scm",(void*)f_21861},
{"f_21719ChickenBridge.scm",(void*)f_21719},
{"f_21821ChickenBridge.scm",(void*)f_21821},
{"f_21836ChickenBridge.scm",(void*)f_21836},
{"f_21828ChickenBridge.scm",(void*)f_21828},
{"f_21792ChickenBridge.scm",(void*)f_21792},
{"f_21796ChickenBridge.scm",(void*)f_21796},
{"f_21757ChickenBridge.scm",(void*)f_21757},
{"f_21761ChickenBridge.scm",(void*)f_21761},
{"f_21722ChickenBridge.scm",(void*)f_21722},
{"f_21725ChickenBridge.scm",(void*)f_21725},
{"f_21728ChickenBridge.scm",(void*)f_21728},
{"f_21697ChickenBridge.scm",(void*)f_21697},
{"f_21439ChickenBridge.scm",(void*)f_21439},
{"f_21666ChickenBridge.scm",(void*)f_21666},
{"f_21681ChickenBridge.scm",(void*)f_21681},
{"f_21673ChickenBridge.scm",(void*)f_21673},
{"f_21637ChickenBridge.scm",(void*)f_21637},
{"f_21641ChickenBridge.scm",(void*)f_21641},
{"f_21602ChickenBridge.scm",(void*)f_21602},
{"f_21606ChickenBridge.scm",(void*)f_21606},
{"f_21442ChickenBridge.scm",(void*)f_21442},
{"f_21566ChickenBridge.scm",(void*)f_21566},
{"f_21581ChickenBridge.scm",(void*)f_21581},
{"f_21573ChickenBridge.scm",(void*)f_21573},
{"f_21537ChickenBridge.scm",(void*)f_21537},
{"f_21541ChickenBridge.scm",(void*)f_21541},
{"f_21502ChickenBridge.scm",(void*)f_21502},
{"f_21506ChickenBridge.scm",(void*)f_21506},
{"f_21445ChickenBridge.scm",(void*)f_21445},
{"f_21448ChickenBridge.scm",(void*)f_21448},
{"f_21451ChickenBridge.scm",(void*)f_21451},
{"f_21463ChickenBridge.scm",(void*)f_21463},
{"f_21481ChickenBridge.scm",(void*)f_21481},
{"f_21469ChickenBridge.scm",(void*)f_21469},
{"f_21457ChickenBridge.scm",(void*)f_21457},
{"f_21372ChickenBridge.scm",(void*)f_21372},
{"f_21032ChickenBridge.scm",(void*)f_21032},
{"f_21214ChickenBridge.scm",(void*)f_21214},
{"f_21218ChickenBridge.scm",(void*)f_21218},
{"f_21220ChickenBridge.scm",(void*)f_21220},
{"f_21145ChickenBridge.scm",(void*)f_21145},
{"f_21155ChickenBridge.scm",(void*)f_21155},
{"f_21162ChickenBridge.scm",(void*)f_21162},
{"f_21230ChickenBridge.scm",(void*)f_21230},
{"f_21233ChickenBridge.scm",(void*)f_21233},
{"f_21237ChickenBridge.scm",(void*)f_21237},
{"f_21257ChickenBridge.scm",(void*)f_21257},
{"f_21273ChickenBridge.scm",(void*)f_21273},
{"f_21240ChickenBridge.scm",(void*)f_21240},
{"f_21035ChickenBridge.scm",(void*)f_21035},
{"f_21047ChickenBridge.scm",(void*)f_21047},
{"f_21083ChickenBridge.scm",(void*)f_21083},
{"f_21103ChickenBridge.scm",(void*)f_21103},
{"f_21108ChickenBridge.scm",(void*)f_21108},
{"f_20545ChickenBridge.scm",(void*)f_20545},
{"f_20472ChickenBridge.scm",(void*)f_20472},
{"f_20317ChickenBridge.scm",(void*)f_20317},
{"f_20323ChickenBridge.scm",(void*)f_20323},
{"f_20408ChickenBridge.scm",(void*)f_20408},
{"f_20335ChickenBridge.scm",(void*)f_20335},
{"f_20351ChickenBridge.scm",(void*)f_20351},
{"f_20355ChickenBridge.scm",(void*)f_20355},
{"f_20358ChickenBridge.scm",(void*)f_20358},
{"f_20338ChickenBridge.scm",(void*)f_20338},
{"f_20349ChickenBridge.scm",(void*)f_20349},
{"f_20489ChickenBridge.scm",(void*)f_20489},
{"f_21026ChickenBridge.scm",(void*)f_21026},
{"f_20549ChickenBridge.scm",(void*)f_20549},
{"f_20995ChickenBridge.scm",(void*)f_20995},
{"f_21010ChickenBridge.scm",(void*)f_21010},
{"f_21002ChickenBridge.scm",(void*)f_21002},
{"f_20966ChickenBridge.scm",(void*)f_20966},
{"f_20970ChickenBridge.scm",(void*)f_20970},
{"f_20931ChickenBridge.scm",(void*)f_20931},
{"f_20935ChickenBridge.scm",(void*)f_20935},
{"f_20896ChickenBridge.scm",(void*)f_20896},
{"f_20900ChickenBridge.scm",(void*)f_20900},
{"f_20552ChickenBridge.scm",(void*)f_20552},
{"f_20860ChickenBridge.scm",(void*)f_20860},
{"f_20875ChickenBridge.scm",(void*)f_20875},
{"f_20867ChickenBridge.scm",(void*)f_20867},
{"f_20831ChickenBridge.scm",(void*)f_20831},
{"f_20835ChickenBridge.scm",(void*)f_20835},
{"f_20796ChickenBridge.scm",(void*)f_20796},
{"f_20800ChickenBridge.scm",(void*)f_20800},
{"f_20761ChickenBridge.scm",(void*)f_20761},
{"f_20765ChickenBridge.scm",(void*)f_20765},
{"f_20555ChickenBridge.scm",(void*)f_20555},
{"f_20725ChickenBridge.scm",(void*)f_20725},
{"f_20740ChickenBridge.scm",(void*)f_20740},
{"f_20732ChickenBridge.scm",(void*)f_20732},
{"f_20696ChickenBridge.scm",(void*)f_20696},
{"f_20700ChickenBridge.scm",(void*)f_20700},
{"f_20661ChickenBridge.scm",(void*)f_20661},
{"f_20665ChickenBridge.scm",(void*)f_20665},
{"f_20626ChickenBridge.scm",(void*)f_20626},
{"f_20630ChickenBridge.scm",(void*)f_20630},
{"f_20558ChickenBridge.scm",(void*)f_20558},
{"f_20561ChickenBridge.scm",(void*)f_20561},
{"f_20564ChickenBridge.scm",(void*)f_20564},
{"f_20597ChickenBridge.scm",(void*)f_20597},
{"f_20605ChickenBridge.scm",(void*)f_20605},
{"f_20570ChickenBridge.scm",(void*)f_20570},
{"f_20583ChickenBridge.scm",(void*)f_20583},
{"f_20573ChickenBridge.scm",(void*)f_20573},
{"f_20576ChickenBridge.scm",(void*)f_20576},
{"f_20112ChickenBridge.scm",(void*)f_20112},
{"f_20116ChickenBridge.scm",(void*)f_20116},
{"f_20119ChickenBridge.scm",(void*)f_20119},
{"f_20122ChickenBridge.scm",(void*)f_20122},
{"f_20291ChickenBridge.scm",(void*)f_20291},
{"f_20304ChickenBridge.scm",(void*)f_20304},
{"f_20308ChickenBridge.scm",(void*)f_20308},
{"f_20128ChickenBridge.scm",(void*)f_20128},
{"f_20284ChickenBridge.scm",(void*)f_20284},
{"f_20265ChickenBridge.scm",(void*)f_20265},
{"f_20272ChickenBridge.scm",(void*)f_20272},
{"f_20276ChickenBridge.scm",(void*)f_20276},
{"f_20134ChickenBridge.scm",(void*)f_20134},
{"f_20140ChickenBridge.scm",(void*)f_20140},
{"f_20224ChickenBridge.scm",(void*)f_20224},
{"f_20226ChickenBridge.scm",(void*)f_20226},
{"f_20248ChickenBridge.scm",(void*)f_20248},
{"f_20255ChickenBridge.scm",(void*)f_20255},
{"f_20259ChickenBridge.scm",(void*)f_20259},
{"f_20245ChickenBridge.scm",(void*)f_20245},
{"f_20241ChickenBridge.scm",(void*)f_20241},
{"f_20182ChickenBridge.scm",(void*)f_20182},
{"f_20199ChickenBridge.scm",(void*)f_20199},
{"f_20209ChickenBridge.scm",(void*)f_20209},
{"f_20185ChickenBridge.scm",(void*)f_20185},
{"f_20144ChickenBridge.scm",(void*)f_20144},
{"f_20152ChickenBridge.scm",(void*)f_20152},
{"f_20154ChickenBridge.scm",(void*)f_20154},
{"f_20175ChickenBridge.scm",(void*)f_20175},
{"f_20000ChickenBridge.scm",(void*)f_20000},
{"f_20110ChickenBridge.scm",(void*)f_20110},
{"f_20069ChickenBridge.scm",(void*)f_20069},
{"f_20102ChickenBridge.scm",(void*)f_20102},
{"f_20098ChickenBridge.scm",(void*)f_20098},
{"f_20083ChickenBridge.scm",(void*)f_20083},
{"f_20007ChickenBridge.scm",(void*)f_20007},
{"f_20015ChickenBridge.scm",(void*)f_20015},
{"f_20060ChickenBridge.scm",(void*)f_20060},
{"f_20048ChickenBridge.scm",(void*)f_20048},
{"f_20032ChickenBridge.scm",(void*)f_20032},
{"f_19233ChickenBridge.scm",(void*)f_19233},
{"f_19550ChickenBridge.scm",(void*)f_19550},
{"f_19557ChickenBridge.scm",(void*)f_19557},
{"f_19962ChickenBridge.scm",(void*)f_19962},
{"f_19977ChickenBridge.scm",(void*)f_19977},
{"f_19969ChickenBridge.scm",(void*)f_19969},
{"f_19933ChickenBridge.scm",(void*)f_19933},
{"f_19937ChickenBridge.scm",(void*)f_19937},
{"f_19898ChickenBridge.scm",(void*)f_19898},
{"f_19902ChickenBridge.scm",(void*)f_19902},
{"f_19863ChickenBridge.scm",(void*)f_19863},
{"f_19867ChickenBridge.scm",(void*)f_19867},
{"f_19560ChickenBridge.scm",(void*)f_19560},
{"f_19827ChickenBridge.scm",(void*)f_19827},
{"f_19842ChickenBridge.scm",(void*)f_19842},
{"f_19834ChickenBridge.scm",(void*)f_19834},
{"f_19798ChickenBridge.scm",(void*)f_19798},
{"f_19802ChickenBridge.scm",(void*)f_19802},
{"f_19763ChickenBridge.scm",(void*)f_19763},
{"f_19767ChickenBridge.scm",(void*)f_19767},
{"f_19728ChickenBridge.scm",(void*)f_19728},
{"f_19732ChickenBridge.scm",(void*)f_19732},
{"f_19563ChickenBridge.scm",(void*)f_19563},
{"f_19692ChickenBridge.scm",(void*)f_19692},
{"f_19707ChickenBridge.scm",(void*)f_19707},
{"f_19699ChickenBridge.scm",(void*)f_19699},
{"f_19663ChickenBridge.scm",(void*)f_19663},
{"f_19667ChickenBridge.scm",(void*)f_19667},
{"f_19628ChickenBridge.scm",(void*)f_19628},
{"f_19632ChickenBridge.scm",(void*)f_19632},
{"f_19593ChickenBridge.scm",(void*)f_19593},
{"f_19597ChickenBridge.scm",(void*)f_19597},
{"f_19566ChickenBridge.scm",(void*)f_19566},
{"f_19569ChickenBridge.scm",(void*)f_19569},
{"f_19237ChickenBridge.scm",(void*)f_19237},
{"f_19240ChickenBridge.scm",(void*)f_19240},
{"f_19514ChickenBridge.scm",(void*)f_19514},
{"f_19518ChickenBridge.scm",(void*)f_19518},
{"f_19521ChickenBridge.scm",(void*)f_19521},
{"f_19524ChickenBridge.scm",(void*)f_19524},
{"f_19527ChickenBridge.scm",(void*)f_19527},
{"f_19540ChickenBridge.scm",(void*)f_19540},
{"f_19530ChickenBridge.scm",(void*)f_19530},
{"f_19246ChickenBridge.scm",(void*)f_19246},
{"f_19253ChickenBridge.scm",(void*)f_19253},
{"f_19484ChickenBridge.scm",(void*)f_19484},
{"f_19499ChickenBridge.scm",(void*)f_19499},
{"f_19491ChickenBridge.scm",(void*)f_19491},
{"f_19455ChickenBridge.scm",(void*)f_19455},
{"f_19459ChickenBridge.scm",(void*)f_19459},
{"f_19420ChickenBridge.scm",(void*)f_19420},
{"f_19424ChickenBridge.scm",(void*)f_19424},
{"f_19256ChickenBridge.scm",(void*)f_19256},
{"f_19384ChickenBridge.scm",(void*)f_19384},
{"f_19399ChickenBridge.scm",(void*)f_19399},
{"f_19391ChickenBridge.scm",(void*)f_19391},
{"f_19355ChickenBridge.scm",(void*)f_19355},
{"f_19359ChickenBridge.scm",(void*)f_19359},
{"f_19320ChickenBridge.scm",(void*)f_19320},
{"f_19324ChickenBridge.scm",(void*)f_19324},
{"f_19259ChickenBridge.scm",(void*)f_19259},
{"f_19262ChickenBridge.scm",(void*)f_19262},
{"f_19277ChickenBridge.scm",(void*)f_19277},
{"f_19299ChickenBridge.scm",(void*)f_19299},
{"f_19283ChickenBridge.scm",(void*)f_19283},
{"f_19291ChickenBridge.scm",(void*)f_19291},
{"f_19265ChickenBridge.scm",(void*)f_19265},
{"f_19268ChickenBridge.scm",(void*)f_19268},
{"f_19150ChickenBridge.scm",(void*)f_19150},
{"f_19141ChickenBridge.scm",(void*)f_19141},
{"f_19132ChickenBridge.scm",(void*)f_19132},
{"f_19114ChickenBridge.scm",(void*)f_19114},
{"f_19096ChickenBridge.scm",(void*)f_19096},
{"f_19078ChickenBridge.scm",(void*)f_19078},
{"f_19069ChickenBridge.scm",(void*)f_19069},
{"f_19060ChickenBridge.scm",(void*)f_19060},
{"f_18838ChickenBridge.scm",(void*)f_18838},
{"f_18888ChickenBridge.scm",(void*)f_18888},
{"f_19033ChickenBridge.scm",(void*)f_19033},
{"f_18914ChickenBridge.scm",(void*)f_18914},
{"f_19029ChickenBridge.scm",(void*)f_19029},
{"f_19014ChickenBridge.scm",(void*)f_19014},
{"f_18995ChickenBridge.scm",(void*)f_18995},
{"f_18968ChickenBridge.scm",(void*)f_18968},
{"f_18921ChickenBridge.scm",(void*)f_18921},
{"f_18891ChickenBridge.scm",(void*)f_18891},
{"f_18841ChickenBridge.scm",(void*)f_18841},
{"f_18847ChickenBridge.scm",(void*)f_18847},
{"f_18863ChickenBridge.scm",(void*)f_18863},
{"f_18866ChickenBridge.scm",(void*)f_18866},
{"f_18364ChickenBridge.scm",(void*)f_18364},
{"f_18828ChickenBridge.scm",(void*)f_18828},
{"f_18368ChickenBridge.scm",(void*)f_18368},
{"f_18800ChickenBridge.scm",(void*)f_18800},
{"f_18815ChickenBridge.scm",(void*)f_18815},
{"f_18807ChickenBridge.scm",(void*)f_18807},
{"f_18771ChickenBridge.scm",(void*)f_18771},
{"f_18775ChickenBridge.scm",(void*)f_18775},
{"f_18736ChickenBridge.scm",(void*)f_18736},
{"f_18740ChickenBridge.scm",(void*)f_18740},
{"f_18701ChickenBridge.scm",(void*)f_18701},
{"f_18705ChickenBridge.scm",(void*)f_18705},
{"f_18371ChickenBridge.scm",(void*)f_18371},
{"f_18665ChickenBridge.scm",(void*)f_18665},
{"f_18680ChickenBridge.scm",(void*)f_18680},
{"f_18672ChickenBridge.scm",(void*)f_18672},
{"f_18636ChickenBridge.scm",(void*)f_18636},
{"f_18640ChickenBridge.scm",(void*)f_18640},
{"f_18601ChickenBridge.scm",(void*)f_18601},
{"f_18605ChickenBridge.scm",(void*)f_18605},
{"f_18566ChickenBridge.scm",(void*)f_18566},
{"f_18570ChickenBridge.scm",(void*)f_18570},
{"f_18374ChickenBridge.scm",(void*)f_18374},
{"f_18530ChickenBridge.scm",(void*)f_18530},
{"f_18545ChickenBridge.scm",(void*)f_18545},
{"f_18537ChickenBridge.scm",(void*)f_18537},
{"f_18501ChickenBridge.scm",(void*)f_18501},
{"f_18505ChickenBridge.scm",(void*)f_18505},
{"f_18466ChickenBridge.scm",(void*)f_18466},
{"f_18470ChickenBridge.scm",(void*)f_18470},
{"f_18431ChickenBridge.scm",(void*)f_18431},
{"f_18435ChickenBridge.scm",(void*)f_18435},
{"f_18377ChickenBridge.scm",(void*)f_18377},
{"f_18380ChickenBridge.scm",(void*)f_18380},
{"f_18383ChickenBridge.scm",(void*)f_18383},
{"f_18398ChickenBridge.scm",(void*)f_18398},
{"f_18410ChickenBridge.scm",(void*)f_18410},
{"f_18389ChickenBridge.scm",(void*)f_18389},
{"f_18392ChickenBridge.scm",(void*)f_18392},
{"f_18288ChickenBridge.scm",(void*)f_18288},
{"f_18292ChickenBridge.scm",(void*)f_18292},
{"f_18311ChickenBridge.scm",(void*)f_18311},
{"f_18321ChickenBridge.scm",(void*)f_18321},
{"f_18323ChickenBridge.scm",(void*)f_18323},
{"f_18340ChickenBridge.scm",(void*)f_18340},
{"f_18343ChickenBridge.scm",(void*)f_18343},
{"f_18354ChickenBridge.scm",(void*)f_18354},
{"f_18295ChickenBridge.scm",(void*)f_18295},
{"f_18025ChickenBridge.scm",(void*)f_18025},
{"f_18278ChickenBridge.scm",(void*)f_18278},
{"f_18029ChickenBridge.scm",(void*)f_18029},
{"f_18250ChickenBridge.scm",(void*)f_18250},
{"f_18265ChickenBridge.scm",(void*)f_18265},
{"f_18257ChickenBridge.scm",(void*)f_18257},
{"f_18221ChickenBridge.scm",(void*)f_18221},
{"f_18225ChickenBridge.scm",(void*)f_18225},
{"f_18186ChickenBridge.scm",(void*)f_18186},
{"f_18190ChickenBridge.scm",(void*)f_18190},
{"f_18032ChickenBridge.scm",(void*)f_18032},
{"f_18150ChickenBridge.scm",(void*)f_18150},
{"f_18165ChickenBridge.scm",(void*)f_18165},
{"f_18157ChickenBridge.scm",(void*)f_18157},
{"f_18121ChickenBridge.scm",(void*)f_18121},
{"f_18125ChickenBridge.scm",(void*)f_18125},
{"f_18086ChickenBridge.scm",(void*)f_18086},
{"f_18090ChickenBridge.scm",(void*)f_18090},
{"f_18035ChickenBridge.scm",(void*)f_18035},
{"f_18038ChickenBridge.scm",(void*)f_18038},
{"f_18041ChickenBridge.scm",(void*)f_18041},
{"f_18053ChickenBridge.scm",(void*)f_18053},
{"f_18065ChickenBridge.scm",(void*)f_18065},
{"f_18047ChickenBridge.scm",(void*)f_18047},
{"f_17989ChickenBridge.scm",(void*)f_17989},
{"f_17993ChickenBridge.scm",(void*)f_17993},
{"f_18015ChickenBridge.scm",(void*)f_18015},
{"f_18009ChickenBridge.scm",(void*)f_18009},
{"f_18002ChickenBridge.scm",(void*)f_18002},
{"f_17742ChickenBridge.scm",(void*)f_17742},
{"f_17746ChickenBridge.scm",(void*)f_17746},
{"f_17959ChickenBridge.scm",(void*)f_17959},
{"f_17974ChickenBridge.scm",(void*)f_17974},
{"f_17966ChickenBridge.scm",(void*)f_17966},
{"f_17930ChickenBridge.scm",(void*)f_17930},
{"f_17934ChickenBridge.scm",(void*)f_17934},
{"f_17895ChickenBridge.scm",(void*)f_17895},
{"f_17899ChickenBridge.scm",(void*)f_17899},
{"f_17749ChickenBridge.scm",(void*)f_17749},
{"f_17859ChickenBridge.scm",(void*)f_17859},
{"f_17874ChickenBridge.scm",(void*)f_17874},
{"f_17866ChickenBridge.scm",(void*)f_17866},
{"f_17830ChickenBridge.scm",(void*)f_17830},
{"f_17834ChickenBridge.scm",(void*)f_17834},
{"f_17795ChickenBridge.scm",(void*)f_17795},
{"f_17799ChickenBridge.scm",(void*)f_17799},
{"f_17752ChickenBridge.scm",(void*)f_17752},
{"f_17755ChickenBridge.scm",(void*)f_17755},
{"f_17758ChickenBridge.scm",(void*)f_17758},
{"f_17766ChickenBridge.scm",(void*)f_17766},
{"f_17774ChickenBridge.scm",(void*)f_17774},
{"f_17764ChickenBridge.scm",(void*)f_17764},
{"f_17527ChickenBridge.scm",(void*)f_17527},
{"f_17531ChickenBridge.scm",(void*)f_17531},
{"f_17740ChickenBridge.scm",(void*)f_17740},
{"f_17693ChickenBridge.scm",(void*)f_17693},
{"f_17705ChickenBridge.scm",(void*)f_17705},
{"f_17561ChickenBridge.scm",(void*)f_17561},
{"f_17564ChickenBridge.scm",(void*)f_17564},
{"f_17570ChickenBridge.scm",(void*)f_17570},
{"f_17573ChickenBridge.scm",(void*)f_17573},
{"f_17661ChickenBridge.scm",(void*)f_17661},
{"f_17576ChickenBridge.scm",(void*)f_17576},
{"f_17655ChickenBridge.scm",(void*)f_17655},
{"f_17582ChickenBridge.scm",(void*)f_17582},
{"f_17585ChickenBridge.scm",(void*)f_17585},
{"f_17537ChickenBridge.scm",(void*)f_17537},
{"f_17540ChickenBridge.scm",(void*)f_17540},
{"f_17547ChickenBridge.scm",(void*)f_17547},
{"f_17057ChickenBridge.scm",(void*)f_17057},
{"f_17061ChickenBridge.scm",(void*)f_17061},
{"f_17497ChickenBridge.scm",(void*)f_17497},
{"f_17512ChickenBridge.scm",(void*)f_17512},
{"f_17504ChickenBridge.scm",(void*)f_17504},
{"f_17468ChickenBridge.scm",(void*)f_17468},
{"f_17472ChickenBridge.scm",(void*)f_17472},
{"f_17433ChickenBridge.scm",(void*)f_17433},
{"f_17437ChickenBridge.scm",(void*)f_17437},
{"f_17398ChickenBridge.scm",(void*)f_17398},
{"f_17402ChickenBridge.scm",(void*)f_17402},
{"f_17064ChickenBridge.scm",(void*)f_17064},
{"f_17362ChickenBridge.scm",(void*)f_17362},
{"f_17377ChickenBridge.scm",(void*)f_17377},
{"f_17369ChickenBridge.scm",(void*)f_17369},
{"f_17333ChickenBridge.scm",(void*)f_17333},
{"f_17337ChickenBridge.scm",(void*)f_17337},
{"f_17298ChickenBridge.scm",(void*)f_17298},
{"f_17302ChickenBridge.scm",(void*)f_17302},
{"f_17263ChickenBridge.scm",(void*)f_17263},
{"f_17267ChickenBridge.scm",(void*)f_17267},
{"f_17067ChickenBridge.scm",(void*)f_17067},
{"f_17227ChickenBridge.scm",(void*)f_17227},
{"f_17242ChickenBridge.scm",(void*)f_17242},
{"f_17234ChickenBridge.scm",(void*)f_17234},
{"f_17198ChickenBridge.scm",(void*)f_17198},
{"f_17202ChickenBridge.scm",(void*)f_17202},
{"f_17163ChickenBridge.scm",(void*)f_17163},
{"f_17167ChickenBridge.scm",(void*)f_17167},
{"f_17128ChickenBridge.scm",(void*)f_17128},
{"f_17132ChickenBridge.scm",(void*)f_17132},
{"f_17070ChickenBridge.scm",(void*)f_17070},
{"f_17073ChickenBridge.scm",(void*)f_17073},
{"f_17076ChickenBridge.scm",(void*)f_17076},
{"f_17099ChickenBridge.scm",(void*)f_17099},
{"f_17107ChickenBridge.scm",(void*)f_17107},
{"f_17082ChickenBridge.scm",(void*)f_17082},
{"f_17085ChickenBridge.scm",(void*)f_17085},
{"f_16977ChickenBridge.scm",(void*)f_16977},
{"f_16968ChickenBridge.scm",(void*)f_16968},
{"f_16896ChickenBridge.scm",(void*)f_16896},
{"f_16900ChickenBridge.scm",(void*)f_16900},
{"f_16903ChickenBridge.scm",(void*)f_16903},
{"f_16641ChickenBridge.scm",(void*)f_16641},
{"f_16645ChickenBridge.scm",(void*)f_16645},
{"f_16866ChickenBridge.scm",(void*)f_16866},
{"f_16881ChickenBridge.scm",(void*)f_16881},
{"f_16873ChickenBridge.scm",(void*)f_16873},
{"f_16837ChickenBridge.scm",(void*)f_16837},
{"f_16841ChickenBridge.scm",(void*)f_16841},
{"f_16802ChickenBridge.scm",(void*)f_16802},
{"f_16806ChickenBridge.scm",(void*)f_16806},
{"f_16648ChickenBridge.scm",(void*)f_16648},
{"f_16766ChickenBridge.scm",(void*)f_16766},
{"f_16781ChickenBridge.scm",(void*)f_16781},
{"f_16773ChickenBridge.scm",(void*)f_16773},
{"f_16737ChickenBridge.scm",(void*)f_16737},
{"f_16741ChickenBridge.scm",(void*)f_16741},
{"f_16702ChickenBridge.scm",(void*)f_16702},
{"f_16706ChickenBridge.scm",(void*)f_16706},
{"f_16651ChickenBridge.scm",(void*)f_16651},
{"f_16654ChickenBridge.scm",(void*)f_16654},
{"f_16657ChickenBridge.scm",(void*)f_16657},
{"f_16669ChickenBridge.scm",(void*)f_16669},
{"f_16681ChickenBridge.scm",(void*)f_16681},
{"f_16663ChickenBridge.scm",(void*)f_16663},
{"f_16526ChickenBridge.scm",(void*)f_16526},
{"f_16639ChickenBridge.scm",(void*)f_16639},
{"f_16536ChickenBridge.scm",(void*)f_16536},
{"f_16624ChickenBridge.scm",(void*)f_16624},
{"f_16635ChickenBridge.scm",(void*)f_16635},
{"f_16631ChickenBridge.scm",(void*)f_16631},
{"f_16539ChickenBridge.scm",(void*)f_16539},
{"f_16621ChickenBridge.scm",(void*)f_16621},
{"f_16547ChickenBridge.scm",(void*)f_16547},
{"f_16611ChickenBridge.scm",(void*)f_16611},
{"f_16556ChickenBridge.scm",(void*)f_16556},
{"f_16575ChickenBridge.scm",(void*)f_16575},
{"f_16604ChickenBridge.scm",(void*)f_16604},
{"f_16585ChickenBridge.scm",(void*)f_16585},
{"f_16600ChickenBridge.scm",(void*)f_16600},
{"f_16588ChickenBridge.scm",(void*)f_16588},
{"f_16559ChickenBridge.scm",(void*)f_16559},
{"f_16569ChickenBridge.scm",(void*)f_16569},
{"f_16550ChickenBridge.scm",(void*)f_16550},
{"f_16553ChickenBridge.scm",(void*)f_16553},
{"f_16480ChickenBridge.scm",(void*)f_16480},
{"f_16471ChickenBridge.scm",(void*)f_16471},
{"f_16170ChickenBridge.scm",(void*)f_16170},
{"f_16177ChickenBridge.scm",(void*)f_16177},
{"f_16466ChickenBridge.scm",(void*)f_16466},
{"f_16180ChickenBridge.scm",(void*)f_16180},
{"f_16451ChickenBridge.scm",(void*)f_16451},
{"f_16443ChickenBridge.scm",(void*)f_16443},
{"f_16435ChickenBridge.scm",(void*)f_16435},
{"f_16438ChickenBridge.scm",(void*)f_16438},
{"f_16406ChickenBridge.scm",(void*)f_16406},
{"f_16429ChickenBridge.scm",(void*)f_16429},
{"f_16412ChickenBridge.scm",(void*)f_16412},
{"f_16416ChickenBridge.scm",(void*)f_16416},
{"f_16183ChickenBridge.scm",(void*)f_16183},
{"f_16189ChickenBridge.scm",(void*)f_16189},
{"f_16281ChickenBridge.scm",(void*)f_16281},
{"f_16393ChickenBridge.scm",(void*)f_16393},
{"f_16400ChickenBridge.scm",(void*)f_16400},
{"f_16304ChickenBridge.scm",(void*)f_16304},
{"f_16306ChickenBridge.scm",(void*)f_16306},
{"f_16355ChickenBridge.scm",(void*)f_16355},
{"f_16390ChickenBridge.scm",(void*)f_16390},
{"f_16379ChickenBridge.scm",(void*)f_16379},
{"f_16524ChickenBridge.scm",(void*)f_16524},
{"f_16499ChickenBridge.scm",(void*)f_16499},
{"f_16520ChickenBridge.scm",(void*)f_16520},
{"f_16516ChickenBridge.scm",(void*)f_16516},
{"f_16508ChickenBridge.scm",(void*)f_16508},
{"f_16372ChickenBridge.scm",(void*)f_16372},
{"f_16365ChickenBridge.scm",(void*)f_16365},
{"f_16313ChickenBridge.scm",(void*)f_16313},
{"f_16353ChickenBridge.scm",(void*)f_16353},
{"f_16317ChickenBridge.scm",(void*)f_16317},
{"f_16349ChickenBridge.scm",(void*)f_16349},
{"f_16336ChickenBridge.scm",(void*)f_16336},
{"f_16344ChickenBridge.scm",(void*)f_16344},
{"f_16340ChickenBridge.scm",(void*)f_16340},
{"f_16320ChickenBridge.scm",(void*)f_16320},
{"f_16323ChickenBridge.scm",(void*)f_16323},
{"f_16297ChickenBridge.scm",(void*)f_16297},
{"f_16284ChickenBridge.scm",(void*)f_16284},
{"f_16293ChickenBridge.scm",(void*)f_16293},
{"f_16288ChickenBridge.scm",(void*)f_16288},
{"f_16195ChickenBridge.scm",(void*)f_16195},
{"f_16275ChickenBridge.scm",(void*)f_16275},
{"f_16255ChickenBridge.scm",(void*)f_16255},
{"f_16261ChickenBridge.scm",(void*)f_16261},
{"f_16272ChickenBridge.scm",(void*)f_16272},
{"f_16252ChickenBridge.scm",(void*)f_16252},
{"f_16240ChickenBridge.scm",(void*)f_16240},
{"f_16243ChickenBridge.scm",(void*)f_16243},
{"f_16198ChickenBridge.scm",(void*)f_16198},
{"f_16234ChickenBridge.scm",(void*)f_16234},
{"f_16229ChickenBridge.scm",(void*)f_16229},
{"f_16201ChickenBridge.scm",(void*)f_16201},
{"f_16214ChickenBridge.scm",(void*)f_16214},
{"f_16204ChickenBridge.scm",(void*)f_16204},
{"f_16207ChickenBridge.scm",(void*)f_16207},
{"f_16210ChickenBridge.scm",(void*)f_16210},
{"f_16047ChickenBridge.scm",(void*)f_16047},
{"f_16106ChickenBridge.scm",(void*)f_16106},
{"f_16116ChickenBridge.scm",(void*)f_16116},
{"f_16118ChickenBridge.scm",(void*)f_16118},
{"f_16147ChickenBridge.scm",(void*)f_16147},
{"f_16152ChickenBridge.scm",(void*)f_16152},
{"f_16137ChickenBridge.scm",(void*)f_16137},
{"f_16068ChickenBridge.scm",(void*)f_16068},
{"f_16100ChickenBridge.scm",(void*)f_16100},
{"f_16028ChickenBridge.scm",(void*)f_16028},
{"f_16035ChickenBridge.scm",(void*)f_16035},
{"f_16042ChickenBridge.scm",(void*)f_16042},
{"f_16009ChickenBridge.scm",(void*)f_16009},
{"f_16016ChickenBridge.scm",(void*)f_16016},
{"f_16023ChickenBridge.scm",(void*)f_16023},
{"f_15829ChickenBridge.scm",(void*)f_15829},
{"f_15833ChickenBridge.scm",(void*)f_15833},
{"f_15836ChickenBridge.scm",(void*)f_15836},
{"f_15839ChickenBridge.scm",(void*)f_15839},
{"f_15842ChickenBridge.scm",(void*)f_15842},
{"f_15999ChickenBridge.scm",(void*)f_15999},
{"f_16006ChickenBridge.scm",(void*)f_16006},
{"f_15845ChickenBridge.scm",(void*)f_15845},
{"f_15848ChickenBridge.scm",(void*)f_15848},
{"f_15854ChickenBridge.scm",(void*)f_15854},
{"f_15860ChickenBridge.scm",(void*)f_15860},
{"f_15923ChickenBridge.scm",(void*)f_15923},
{"f_15937ChickenBridge.scm",(void*)f_15937},
{"f_15863ChickenBridge.scm",(void*)f_15863},
{"f_15866ChickenBridge.scm",(void*)f_15866},
{"f_15872ChickenBridge.scm",(void*)f_15872},
{"f_15885ChickenBridge.scm",(void*)f_15885},
{"f_15875ChickenBridge.scm",(void*)f_15875},
{"f_15878ChickenBridge.scm",(void*)f_15878},
{"f_15819ChickenBridge.scm",(void*)f_15819},
{"f_15764ChickenBridge.scm",(void*)f_15764},
{"f_15755ChickenBridge.scm",(void*)f_15755},
{"f_15638ChickenBridge.scm",(void*)f_15638},
{"f_15629ChickenBridge.scm",(void*)f_15629},
{"f_15620ChickenBridge.scm",(void*)f_15620},
{"f_15611ChickenBridge.scm",(void*)f_15611},
{"f_15602ChickenBridge.scm",(void*)f_15602},
{"f_15584ChickenBridge.scm",(void*)f_15584},
{"f_15575ChickenBridge.scm",(void*)f_15575},
{"f_15566ChickenBridge.scm",(void*)f_15566},
{"f_15548ChickenBridge.scm",(void*)f_15548},
{"f_15539ChickenBridge.scm",(void*)f_15539},
{"f_15530ChickenBridge.scm",(void*)f_15530},
{"f_15515ChickenBridge.scm",(void*)f_15515},
{"f_15470ChickenBridge.scm",(void*)f_15470},
{"f_15452ChickenBridge.scm",(void*)f_15452},
{"f_15443ChickenBridge.scm",(void*)f_15443},
{"f_15416ChickenBridge.scm",(void*)f_15416},
{"f_15398ChickenBridge.scm",(void*)f_15398},
{"f_15380ChickenBridge.scm",(void*)f_15380},
{"f_15371ChickenBridge.scm",(void*)f_15371},
{"f_15359ChickenBridge.scm",(void*)f_15359},
{"f_15163ChickenBridge.scm",(void*)f_15163},
{"f_15167ChickenBridge.scm",(void*)f_15167},
{"f_15316ChickenBridge.scm",(void*)f_15316},
{"f_15342ChickenBridge.scm",(void*)f_15342},
{"f_15327ChickenBridge.scm",(void*)f_15327},
{"f_15173ChickenBridge.scm",(void*)f_15173},
{"f_15178ChickenBridge.scm",(void*)f_15178},
{"f_15182ChickenBridge.scm",(void*)f_15182},
{"f_15185ChickenBridge.scm",(void*)f_15185},
{"f_15188ChickenBridge.scm",(void*)f_15188},
{"f_15191ChickenBridge.scm",(void*)f_15191},
{"f_15194ChickenBridge.scm",(void*)f_15194},
{"f_15197ChickenBridge.scm",(void*)f_15197},
{"f_15202ChickenBridge.scm",(void*)f_15202},
{"f_15296ChickenBridge.scm",(void*)f_15296},
{"f_15303ChickenBridge.scm",(void*)f_15303},
{"f_15212ChickenBridge.scm",(void*)f_15212},
{"f_15233ChickenBridge.scm",(void*)f_15233},
{"f_15237ChickenBridge.scm",(void*)f_15237},
{"f_15241ChickenBridge.scm",(void*)f_15241},
{"f_15243ChickenBridge.scm",(void*)f_15243},
{"f_15253ChickenBridge.scm",(void*)f_15253},
{"f_15215ChickenBridge.scm",(void*)f_15215},
{"f_15218ChickenBridge.scm",(void*)f_15218},
{"f_15037ChickenBridge.scm",(void*)f_15037},
{"f_15043ChickenBridge.scm",(void*)f_15043},
{"f_15047ChickenBridge.scm",(void*)f_15047},
{"f_15065ChickenBridge.scm",(void*)f_15065},
{"f_15068ChickenBridge.scm",(void*)f_15068},
{"f_15072ChickenBridge.scm",(void*)f_15072},
{"f_15075ChickenBridge.scm",(void*)f_15075},
{"f_15127ChickenBridge.scm",(void*)f_15127},
{"f_15138ChickenBridge.scm",(void*)f_15138},
{"f_15078ChickenBridge.scm",(void*)f_15078},
{"f_15088ChickenBridge.scm",(void*)f_15088},
{"f_15090ChickenBridge.scm",(void*)f_15090},
{"f_14934ChickenBridge.scm",(void*)f_14934},
{"f_14958ChickenBridge.scm",(void*)f_14958},
{"f_14962ChickenBridge.scm",(void*)f_14962},
{"f_14988ChickenBridge.scm",(void*)f_14988},
{"f_14998ChickenBridge.scm",(void*)f_14998},
{"f_15035ChickenBridge.scm",(void*)f_15035},
{"f_15027ChickenBridge.scm",(void*)f_15027},
{"f_14965ChickenBridge.scm",(void*)f_14965},
{"f_14935ChickenBridge.scm",(void*)f_14935},
{"f_14939ChickenBridge.scm",(void*)f_14939},
{"f_14942ChickenBridge.scm",(void*)f_14942},
{"f_15104ChickenBridge.scm",(void*)f_15104},
{"f_15107ChickenBridge.scm",(void*)f_15107},
{"f_15114ChickenBridge.scm",(void*)f_15114},
{"f_15048ChickenBridge.scm",(void*)f_15048},
{"f_15052ChickenBridge.scm",(void*)f_15052},
{"f_15055ChickenBridge.scm",(void*)f_15055},
{"f_14524ChickenBridge.scm",(void*)f_14524},
{"f_14903ChickenBridge.scm",(void*)f_14903},
{"f_14897ChickenBridge.scm",(void*)f_14897},
{"f_14528ChickenBridge.scm",(void*)f_14528},
{"f_14881ChickenBridge.scm",(void*)f_14881},
{"f_14531ChickenBridge.scm",(void*)f_14531},
{"f_14867ChickenBridge.scm",(void*)f_14867},
{"f_14863ChickenBridge.scm",(void*)f_14863},
{"f_14534ChickenBridge.scm",(void*)f_14534},
{"f_14856ChickenBridge.scm",(void*)f_14856},
{"f_14852ChickenBridge.scm",(void*)f_14852},
{"f_14537ChickenBridge.scm",(void*)f_14537},
{"f_14540ChickenBridge.scm",(void*)f_14540},
{"f_14840ChickenBridge.scm",(void*)f_14840},
{"f_14832ChickenBridge.scm",(void*)f_14832},
{"f_14836ChickenBridge.scm",(void*)f_14836},
{"f_14824ChickenBridge.scm",(void*)f_14824},
{"f_14828ChickenBridge.scm",(void*)f_14828},
{"f_14698ChickenBridge.scm",(void*)f_14698},
{"f_14813ChickenBridge.scm",(void*)f_14813},
{"f_14817ChickenBridge.scm",(void*)f_14817},
{"f_14805ChickenBridge.scm",(void*)f_14805},
{"f_14809ChickenBridge.scm",(void*)f_14809},
{"f_14701ChickenBridge.scm",(void*)f_14701},
{"f_14705ChickenBridge.scm",(void*)f_14705},
{"f_14710ChickenBridge.scm",(void*)f_14710},
{"f_14720ChickenBridge.scm",(void*)f_14720},
{"f_14723ChickenBridge.scm",(void*)f_14723},
{"f_14604ChickenBridge.scm",(void*)f_14604},
{"f_14667ChickenBridge.scm",(void*)f_14667},
{"f_14688ChickenBridge.scm",(void*)f_14688},
{"f_14629ChickenBridge.scm",(void*)f_14629},
{"f_14658ChickenBridge.scm",(void*)f_14658},
{"f_14607ChickenBridge.scm",(void*)f_14607},
{"f_14624ChickenBridge.scm",(void*)f_14624},
{"f_14620ChickenBridge.scm",(void*)f_14620},
{"f_14070ChickenBridge.scm",(void*)f_14070},
{"f_14074ChickenBridge.scm",(void*)f_14074},
{"f_14062ChickenBridge.scm",(void*)f_14062},
{"f_13987ChickenBridge.scm",(void*)f_13987},
{"f_14048ChickenBridge.scm",(void*)f_14048},
{"f_13991ChickenBridge.scm",(void*)f_13991},
{"f_13999ChickenBridge.scm",(void*)f_13999},
{"f_14032ChickenBridge.scm",(void*)f_14032},
{"f_14009ChickenBridge.scm",(void*)f_14009},
{"f_14012ChickenBridge.scm",(void*)f_14012},
{"f_14584ChickenBridge.scm",(void*)f_14584},
{"f_14554ChickenBridge.scm",(void*)f_14554},
{"f_14543ChickenBridge.scm",(void*)f_14543},
{"f_14467ChickenBridge.scm",(void*)f_14467},
{"f_14475ChickenBridge.scm",(void*)f_14475},
{"f_14479ChickenBridge.scm",(void*)f_14479},
{"f_14483ChickenBridge.scm",(void*)f_14483},
{"f_14489ChickenBridge.scm",(void*)f_14489},
{"f_14499ChickenBridge.scm",(void*)f_14499},
{"f_14255ChickenBridge.scm",(void*)f_14255},
{"f_14323ChickenBridge.scm",(void*)f_14323},
{"f_14326ChickenBridge.scm",(void*)f_14326},
{"f_14329ChickenBridge.scm",(void*)f_14329},
{"f_14332ChickenBridge.scm",(void*)f_14332},
{"f_14335ChickenBridge.scm",(void*)f_14335},
{"f_14433ChickenBridge.scm",(void*)f_14433},
{"f_14443ChickenBridge.scm",(void*)f_14443},
{"f_14401ChickenBridge.scm",(void*)f_14401},
{"f_14411ChickenBridge.scm",(void*)f_14411},
{"f_14352ChickenBridge.scm",(void*)f_14352},
{"f_14371ChickenBridge.scm",(void*)f_14371},
{"f_14381ChickenBridge.scm",(void*)f_14381},
{"f_14362ChickenBridge.scm",(void*)f_14362},
{"f_14338ChickenBridge.scm",(void*)f_14338},
{"f_14291ChickenBridge.scm",(void*)f_14291},
{"f_14301ChickenBridge.scm",(void*)f_14301},
{"f_14274ChickenBridge.scm",(void*)f_14274},
{"f_14281ChickenBridge.scm",(void*)f_14281},
{"f_14257ChickenBridge.scm",(void*)f_14257},
{"f_14264ChickenBridge.scm",(void*)f_14264},
{"f_14076ChickenBridge.scm",(void*)f_14076},
{"f_14084ChickenBridge.scm",(void*)f_14084},
{"f_14088ChickenBridge.scm",(void*)f_14088},
{"f_14090ChickenBridge.scm",(void*)f_14090},
{"f_14100ChickenBridge.scm",(void*)f_14100},
{"f_14231ChickenBridge.scm",(void*)f_14231},
{"f_14180ChickenBridge.scm",(void*)f_14180},
{"f_14183ChickenBridge.scm",(void*)f_14183},
{"f_14194ChickenBridge.scm",(void*)f_14194},
{"f_14146ChickenBridge.scm",(void*)f_14146},
{"f_14115ChickenBridge.scm",(void*)f_14115},
{"f_14118ChickenBridge.scm",(void*)f_14118},
{"f_14103ChickenBridge.scm",(void*)f_14103},
{"f_13664ChickenBridge.scm",(void*)f_13664},
{"f_13981ChickenBridge.scm",(void*)f_13981},
{"f_13910ChickenBridge.scm",(void*)f_13910},
{"f_13912ChickenBridge.scm",(void*)f_13912},
{"f_8457ChickenBridge.scm",(void*)f_8457},
{"f_13931ChickenBridge.scm",(void*)f_13931},
{"f_13934ChickenBridge.scm",(void*)f_13934},
{"f_13677ChickenBridge.scm",(void*)f_13677},
{"f_13753ChickenBridge.scm",(void*)f_13753},
{"f_13906ChickenBridge.scm",(void*)f_13906},
{"f_13890ChickenBridge.scm",(void*)f_13890},
{"f_13842ChickenBridge.scm",(void*)f_13842},
{"f_13856ChickenBridge.scm",(void*)f_13856},
{"f_13809ChickenBridge.scm",(void*)f_13809},
{"f_13784ChickenBridge.scm",(void*)f_13784},
{"f_13680ChickenBridge.scm",(void*)f_13680},
{"f_13688ChickenBridge.scm",(void*)f_13688},
{"f_13721ChickenBridge.scm",(void*)f_13721},
{"f_12191ChickenBridge.scm",(void*)f_12191},
{"f_13641ChickenBridge.scm",(void*)f_13641},
{"f_13656ChickenBridge.scm",(void*)f_13656},
{"f_13648ChickenBridge.scm",(void*)f_13648},
{"f_13612ChickenBridge.scm",(void*)f_13612},
{"f_13616ChickenBridge.scm",(void*)f_13616},
{"f_13577ChickenBridge.scm",(void*)f_13577},
{"f_13581ChickenBridge.scm",(void*)f_13581},
{"f_13542ChickenBridge.scm",(void*)f_13542},
{"f_13546ChickenBridge.scm",(void*)f_13546},
{"f_13507ChickenBridge.scm",(void*)f_13507},
{"f_13511ChickenBridge.scm",(void*)f_13511},
{"f_13472ChickenBridge.scm",(void*)f_13472},
{"f_13476ChickenBridge.scm",(void*)f_13476},
{"f_13437ChickenBridge.scm",(void*)f_13437},
{"f_13441ChickenBridge.scm",(void*)f_13441},
{"f_12195ChickenBridge.scm",(void*)f_12195},
{"f_13401ChickenBridge.scm",(void*)f_13401},
{"f_13416ChickenBridge.scm",(void*)f_13416},
{"f_13408ChickenBridge.scm",(void*)f_13408},
{"f_13372ChickenBridge.scm",(void*)f_13372},
{"f_13376ChickenBridge.scm",(void*)f_13376},
{"f_13337ChickenBridge.scm",(void*)f_13337},
{"f_13341ChickenBridge.scm",(void*)f_13341},
{"f_13302ChickenBridge.scm",(void*)f_13302},
{"f_13306ChickenBridge.scm",(void*)f_13306},
{"f_13267ChickenBridge.scm",(void*)f_13267},
{"f_13271ChickenBridge.scm",(void*)f_13271},
{"f_13232ChickenBridge.scm",(void*)f_13232},
{"f_13236ChickenBridge.scm",(void*)f_13236},
{"f_13197ChickenBridge.scm",(void*)f_13197},
{"f_13201ChickenBridge.scm",(void*)f_13201},
{"f_12198ChickenBridge.scm",(void*)f_12198},
{"f_13161ChickenBridge.scm",(void*)f_13161},
{"f_13176ChickenBridge.scm",(void*)f_13176},
{"f_13168ChickenBridge.scm",(void*)f_13168},
{"f_13132ChickenBridge.scm",(void*)f_13132},
{"f_13136ChickenBridge.scm",(void*)f_13136},
{"f_13097ChickenBridge.scm",(void*)f_13097},
{"f_13101ChickenBridge.scm",(void*)f_13101},
{"f_13062ChickenBridge.scm",(void*)f_13062},
{"f_13066ChickenBridge.scm",(void*)f_13066},
{"f_13027ChickenBridge.scm",(void*)f_13027},
{"f_13031ChickenBridge.scm",(void*)f_13031},
{"f_12992ChickenBridge.scm",(void*)f_12992},
{"f_12996ChickenBridge.scm",(void*)f_12996},
{"f_12957ChickenBridge.scm",(void*)f_12957},
{"f_12961ChickenBridge.scm",(void*)f_12961},
{"f_12201ChickenBridge.scm",(void*)f_12201},
{"f_12921ChickenBridge.scm",(void*)f_12921},
{"f_12936ChickenBridge.scm",(void*)f_12936},
{"f_12928ChickenBridge.scm",(void*)f_12928},
{"f_12892ChickenBridge.scm",(void*)f_12892},
{"f_12896ChickenBridge.scm",(void*)f_12896},
{"f_12857ChickenBridge.scm",(void*)f_12857},
{"f_12861ChickenBridge.scm",(void*)f_12861},
{"f_12822ChickenBridge.scm",(void*)f_12822},
{"f_12826ChickenBridge.scm",(void*)f_12826},
{"f_12787ChickenBridge.scm",(void*)f_12787},
{"f_12791ChickenBridge.scm",(void*)f_12791},
{"f_12752ChickenBridge.scm",(void*)f_12752},
{"f_12756ChickenBridge.scm",(void*)f_12756},
{"f_12717ChickenBridge.scm",(void*)f_12717},
{"f_12721ChickenBridge.scm",(void*)f_12721},
{"f_12204ChickenBridge.scm",(void*)f_12204},
{"f_12681ChickenBridge.scm",(void*)f_12681},
{"f_12696ChickenBridge.scm",(void*)f_12696},
{"f_12688ChickenBridge.scm",(void*)f_12688},
{"f_12652ChickenBridge.scm",(void*)f_12652},
{"f_12656ChickenBridge.scm",(void*)f_12656},
{"f_12617ChickenBridge.scm",(void*)f_12617},
{"f_12621ChickenBridge.scm",(void*)f_12621},
{"f_12582ChickenBridge.scm",(void*)f_12582},
{"f_12586ChickenBridge.scm",(void*)f_12586},
{"f_12547ChickenBridge.scm",(void*)f_12547},
{"f_12551ChickenBridge.scm",(void*)f_12551},
{"f_12512ChickenBridge.scm",(void*)f_12512},
{"f_12516ChickenBridge.scm",(void*)f_12516},
{"f_12477ChickenBridge.scm",(void*)f_12477},
{"f_12481ChickenBridge.scm",(void*)f_12481},
{"f_12207ChickenBridge.scm",(void*)f_12207},
{"f_12441ChickenBridge.scm",(void*)f_12441},
{"f_12456ChickenBridge.scm",(void*)f_12456},
{"f_12448ChickenBridge.scm",(void*)f_12448},
{"f_12412ChickenBridge.scm",(void*)f_12412},
{"f_12416ChickenBridge.scm",(void*)f_12416},
{"f_12377ChickenBridge.scm",(void*)f_12377},
{"f_12381ChickenBridge.scm",(void*)f_12381},
{"f_12342ChickenBridge.scm",(void*)f_12342},
{"f_12346ChickenBridge.scm",(void*)f_12346},
{"f_12307ChickenBridge.scm",(void*)f_12307},
{"f_12311ChickenBridge.scm",(void*)f_12311},
{"f_12272ChickenBridge.scm",(void*)f_12272},
{"f_12276ChickenBridge.scm",(void*)f_12276},
{"f_12237ChickenBridge.scm",(void*)f_12237},
{"f_12241ChickenBridge.scm",(void*)f_12241},
{"f_12210ChickenBridge.scm",(void*)f_12210},
{"f_12213ChickenBridge.scm",(void*)f_12213},
{"f_11972ChickenBridge.scm",(void*)f_11972},
{"f_11981ChickenBridge.scm",(void*)f_11981},
{"f_11985ChickenBridge.scm",(void*)f_11985},
{"f_12172ChickenBridge.scm",(void*)f_12172},
{"f_12157ChickenBridge.scm",(void*)f_12157},
{"f_12122ChickenBridge.scm",(void*)f_12122},
{"f_12102ChickenBridge.scm",(void*)f_12102},
{"f_12106ChickenBridge.scm",(void*)f_12106},
{"f_12092ChickenBridge.scm",(void*)f_12092},
{"f_12100ChickenBridge.scm",(void*)f_12100},
{"f_12059ChickenBridge.scm",(void*)f_12059},
{"f_11987ChickenBridge.scm",(void*)f_11987},
{"f_12054ChickenBridge.scm",(void*)f_12054},
{"f_11991ChickenBridge.scm",(void*)f_11991},
{"f_12027ChickenBridge.scm",(void*)f_12027},
{"f_12002ChickenBridge.scm",(void*)f_12002},
{"f_11943ChickenBridge.scm",(void*)f_11943},
{"f_11947ChickenBridge.scm",(void*)f_11947},
{"f_11958ChickenBridge.scm",(void*)f_11958},
{"f_11956ChickenBridge.scm",(void*)f_11956},
{"f_11912ChickenBridge.scm",(void*)f_11912},
{"f_11916ChickenBridge.scm",(void*)f_11916},
{"f_11927ChickenBridge.scm",(void*)f_11927},
{"f_11925ChickenBridge.scm",(void*)f_11925},
{"f_11894ChickenBridge.scm",(void*)f_11894},
{"f_11902ChickenBridge.scm",(void*)f_11902},
{"f_11910ChickenBridge.scm",(void*)f_11910},
{"f_11884ChickenBridge.scm",(void*)f_11884},
{"f_11892ChickenBridge.scm",(void*)f_11892},
{"f_11825ChickenBridge.scm",(void*)f_11825},
{"f_11832ChickenBridge.scm",(void*)f_11832},
{"f_11835ChickenBridge.scm",(void*)f_11835},
{"f_11838ChickenBridge.scm",(void*)f_11838},
{"f_11843ChickenBridge.scm",(void*)f_11843},
{"f_11787ChickenBridge.scm",(void*)f_11787},
{"f_11795ChickenBridge.scm",(void*)f_11795},
{"f_11799ChickenBridge.scm",(void*)f_11799},
{"f_11819ChickenBridge.scm",(void*)f_11819},
{"f_11803ChickenBridge.scm",(void*)f_11803},
{"f_11811ChickenBridge.scm",(void*)f_11811},
{"f_11807ChickenBridge.scm",(void*)f_11807},
{"f_11775ChickenBridge.scm",(void*)f_11775},
{"f_11766ChickenBridge.scm",(void*)f_11766},
{"f_11757ChickenBridge.scm",(void*)f_11757},
{"f_11748ChickenBridge.scm",(void*)f_11748},
{"f_11739ChickenBridge.scm",(void*)f_11739},
{"f_11730ChickenBridge.scm",(void*)f_11730},
{"f_11721ChickenBridge.scm",(void*)f_11721},
{"f_11706ChickenBridge.scm",(void*)f_11706},
{"f_11700ChickenBridge.scm",(void*)f_11700},
{"f_11558ChickenBridge.scm",(void*)f_11558},
{"f_11562ChickenBridge.scm",(void*)f_11562},
{"f_11631ChickenBridge.scm",(void*)f_11631},
{"f_11674ChickenBridge.scm",(void*)f_11674},
{"f_11678ChickenBridge.scm",(void*)f_11678},
{"f_11667ChickenBridge.scm",(void*)f_11667},
{"f_11654ChickenBridge.scm",(void*)f_11654},
{"f_11573ChickenBridge.scm",(void*)f_11573},
{"f_11616ChickenBridge.scm",(void*)f_11616},
{"f_11620ChickenBridge.scm",(void*)f_11620},
{"f_11609ChickenBridge.scm",(void*)f_11609},
{"f_11596ChickenBridge.scm",(void*)f_11596},
{"f_11392ChickenBridge.scm",(void*)f_11392},
{"f_11493ChickenBridge.scm",(void*)f_11493},
{"f_11542ChickenBridge.scm",(void*)f_11542},
{"f_11538ChickenBridge.scm",(void*)f_11538},
{"f_11510ChickenBridge.scm",(void*)f_11510},
{"f_11445ChickenBridge.scm",(void*)f_11445},
{"f_11454ChickenBridge.scm",(void*)f_11454},
{"f_11438ChickenBridge.scm",(void*)f_11438},
{"f_11257ChickenBridge.scm",(void*)f_11257},
{"f_11383ChickenBridge.scm",(void*)f_11383},
{"f_11379ChickenBridge.scm",(void*)f_11379},
{"f_11357ChickenBridge.scm",(void*)f_11357},
{"f_11287ChickenBridge.scm",(void*)f_11287},
{"f_11303ChickenBridge.scm",(void*)f_11303},
{"f_11212ChickenBridge.scm",(void*)f_11212},
{"f_11255ChickenBridge.scm",(void*)f_11255},
{"f_11244ChickenBridge.scm",(void*)f_11244},
{"f_11096ChickenBridge.scm",(void*)f_11096},
{"f_11210ChickenBridge.scm",(void*)f_11210},
{"f_11111ChickenBridge.scm",(void*)f_11111},
{"f_11141ChickenBridge.scm",(void*)f_11141},
{"f_11160ChickenBridge.scm",(void*)f_11160},
{"f_11145ChickenBridge.scm",(void*)f_11145},
{"f_11124ChickenBridge.scm",(void*)f_11124},
{"f_10974ChickenBridge.scm",(void*)f_10974},
{"f_11094ChickenBridge.scm",(void*)f_11094},
{"f_10989ChickenBridge.scm",(void*)f_10989},
{"f_11019ChickenBridge.scm",(void*)f_11019},
{"f_11038ChickenBridge.scm",(void*)f_11038},
{"f_11023ChickenBridge.scm",(void*)f_11023},
{"f_11002ChickenBridge.scm",(void*)f_11002},
{"f_10877ChickenBridge.scm",(void*)f_10877},
{"f_10972ChickenBridge.scm",(void*)f_10972},
{"f_10892ChickenBridge.scm",(void*)f_10892},
{"f_10938ChickenBridge.scm",(void*)f_10938},
{"f_10923ChickenBridge.scm",(void*)f_10923},
{"f_10905ChickenBridge.scm",(void*)f_10905},
{"f_10824ChickenBridge.scm",(void*)f_10824},
{"f_10862ChickenBridge.scm",(void*)f_10862},
{"f_10869ChickenBridge.scm",(void*)f_10869},
{"f_10847ChickenBridge.scm",(void*)f_10847},
{"f_10822ChickenBridge.scm",(void*)f_10822},
{"f_10794ChickenBridge.scm",(void*)f_10794},
{"f_10796ChickenBridge.scm",(void*)f_10796},
{"f_10774ChickenBridge.scm",(void*)f_10774},
{"f_10722ChickenBridge.scm",(void*)f_10722},
{"f_10759ChickenBridge.scm",(void*)f_10759},
{"f_10726ChickenBridge.scm",(void*)f_10726},
{"f_10742ChickenBridge.scm",(void*)f_10742},
{"f_10744ChickenBridge.scm",(void*)f_10744},
{"f_10508ChickenBridge.scm",(void*)f_10508},
{"f_10521ChickenBridge.scm",(void*)f_10521},
{"f_10603ChickenBridge.scm",(void*)f_10603},
{"f_10606ChickenBridge.scm",(void*)f_10606},
{"f_10614ChickenBridge.scm",(void*)f_10614},
{"f_10626ChickenBridge.scm",(void*)f_10626},
{"f_10647ChickenBridge.scm",(void*)f_10647},
{"f_10655ChickenBridge.scm",(void*)f_10655},
{"f_10542ChickenBridge.scm",(void*)f_10542},
{"f_10547ChickenBridge.scm",(void*)f_10547},
{"f_10579ChickenBridge.scm",(void*)f_10579},
{"f_10487ChickenBridge.scm",(void*)f_10487},
{"f_10468ChickenBridge.scm",(void*)f_10468},
{"f_10427ChickenBridge.scm",(void*)f_10427},
{"f_10408ChickenBridge.scm",(void*)f_10408},
{"f_10180ChickenBridge.scm",(void*)f_10180},
{"f_10385ChickenBridge.scm",(void*)f_10385},
{"f_10400ChickenBridge.scm",(void*)f_10400},
{"f_10392ChickenBridge.scm",(void*)f_10392},
{"f_10356ChickenBridge.scm",(void*)f_10356},
{"f_10360ChickenBridge.scm",(void*)f_10360},
{"f_10321ChickenBridge.scm",(void*)f_10321},
{"f_10325ChickenBridge.scm",(void*)f_10325},
{"f_10184ChickenBridge.scm",(void*)f_10184},
{"f_10285ChickenBridge.scm",(void*)f_10285},
{"f_10300ChickenBridge.scm",(void*)f_10300},
{"f_10292ChickenBridge.scm",(void*)f_10292},
{"f_10256ChickenBridge.scm",(void*)f_10256},
{"f_10260ChickenBridge.scm",(void*)f_10260},
{"f_10221ChickenBridge.scm",(void*)f_10221},
{"f_10225ChickenBridge.scm",(void*)f_10225},
{"f_10187ChickenBridge.scm",(void*)f_10187},
{"f_10190ChickenBridge.scm",(void*)f_10190},
{"f_10193ChickenBridge.scm",(void*)f_10193},
{"f_10138ChickenBridge.scm",(void*)f_10138},
{"f_10167ChickenBridge.scm",(void*)f_10167},
{"f_10152ChickenBridge.scm",(void*)f_10152},
{"f_10083ChickenBridge.scm",(void*)f_10083},
{"f_10094ChickenBridge.scm",(void*)f_10094},
{"f_10096ChickenBridge.scm",(void*)f_10096},
{"f_10124ChickenBridge.scm",(void*)f_10124},
{"f_9984ChickenBridge.scm",(void*)f_9984},
{"f_9988ChickenBridge.scm",(void*)f_9988},
{"f_9991ChickenBridge.scm",(void*)f_9991},
{"f_10056ChickenBridge.scm",(void*)f_10056},
{"f_9993ChickenBridge.scm",(void*)f_9993},
{"f_10009ChickenBridge.scm",(void*)f_10009},
{"f_9756ChickenBridge.scm",(void*)f_9756},
{"f_9961ChickenBridge.scm",(void*)f_9961},
{"f_9976ChickenBridge.scm",(void*)f_9976},
{"f_9968ChickenBridge.scm",(void*)f_9968},
{"f_9932ChickenBridge.scm",(void*)f_9932},
{"f_9936ChickenBridge.scm",(void*)f_9936},
{"f_9897ChickenBridge.scm",(void*)f_9897},
{"f_9901ChickenBridge.scm",(void*)f_9901},
{"f_9760ChickenBridge.scm",(void*)f_9760},
{"f_9861ChickenBridge.scm",(void*)f_9861},
{"f_9876ChickenBridge.scm",(void*)f_9876},
{"f_9868ChickenBridge.scm",(void*)f_9868},
{"f_9832ChickenBridge.scm",(void*)f_9832},
{"f_9836ChickenBridge.scm",(void*)f_9836},
{"f_9797ChickenBridge.scm",(void*)f_9797},
{"f_9801ChickenBridge.scm",(void*)f_9801},
{"f_9763ChickenBridge.scm",(void*)f_9763},
{"f_9766ChickenBridge.scm",(void*)f_9766},
{"f_9776ChickenBridge.scm",(void*)f_9776},
{"f_9713ChickenBridge.scm",(void*)f_9713},
{"f_9746ChickenBridge.scm",(void*)f_9746},
{"f_9731ChickenBridge.scm",(void*)f_9731},
{"f_9692ChickenBridge.scm",(void*)f_9692},
{"f_9657ChickenBridge.scm",(void*)f_9657},
{"f_9661ChickenBridge.scm",(void*)f_9661},
{"f_9549ChickenBridge.scm",(void*)f_9549},
{"f_9636ChickenBridge.scm",(void*)f_9636},
{"f_9556ChickenBridge.scm",(void*)f_9556},
{"f_9565ChickenBridge.scm",(void*)f_9565},
{"f_9612ChickenBridge.scm",(void*)f_9612},
{"f_9578ChickenBridge.scm",(void*)f_9578},
{"f_9604ChickenBridge.scm",(void*)f_9604},
{"f_9416ChickenBridge.scm",(void*)f_9416},
{"f_9420ChickenBridge.scm",(void*)f_9420},
{"f_9423ChickenBridge.scm",(void*)f_9423},
{"f_9527ChickenBridge.scm",(void*)f_9527},
{"f_9425ChickenBridge.scm",(void*)f_9425},
{"f_9432ChickenBridge.scm",(void*)f_9432},
{"f_9474ChickenBridge.scm",(void*)f_9474},
{"f_9481ChickenBridge.scm",(void*)f_9481},
{"f_9455ChickenBridge.scm",(void*)f_9455},
{"f_9349ChickenBridge.scm",(void*)f_9349},
{"f_9353ChickenBridge.scm",(void*)f_9353},
{"f_9399ChickenBridge.scm",(void*)f_9399},
{"f_9356ChickenBridge.scm",(void*)f_9356},
{"f_9392ChickenBridge.scm",(void*)f_9392},
{"f_9359ChickenBridge.scm",(void*)f_9359},
{"f_9372ChickenBridge.scm",(void*)f_9372},
{"f_9303ChickenBridge.scm",(void*)f_9303},
{"f_9307ChickenBridge.scm",(void*)f_9307},
{"f_9217ChickenBridge.scm",(void*)f_9217},
{"f_9221ChickenBridge.scm",(void*)f_9221},
{"f_9224ChickenBridge.scm",(void*)f_9224},
{"f_9233ChickenBridge.scm",(void*)f_9233},
{"f_9255ChickenBridge.scm",(void*)f_9255},
{"f_9202ChickenBridge.scm",(void*)f_9202},
{"f_9187ChickenBridge.scm",(void*)f_9187},
{"f_8951ChickenBridge.scm",(void*)f_8951},
{"f_9164ChickenBridge.scm",(void*)f_9164},
{"f_9179ChickenBridge.scm",(void*)f_9179},
{"f_9171ChickenBridge.scm",(void*)f_9171},
{"f_9135ChickenBridge.scm",(void*)f_9135},
{"f_9139ChickenBridge.scm",(void*)f_9139},
{"f_9100ChickenBridge.scm",(void*)f_9100},
{"f_9104ChickenBridge.scm",(void*)f_9104},
{"f_8955ChickenBridge.scm",(void*)f_8955},
{"f_9064ChickenBridge.scm",(void*)f_9064},
{"f_9079ChickenBridge.scm",(void*)f_9079},
{"f_9071ChickenBridge.scm",(void*)f_9071},
{"f_9035ChickenBridge.scm",(void*)f_9035},
{"f_9039ChickenBridge.scm",(void*)f_9039},
{"f_9000ChickenBridge.scm",(void*)f_9000},
{"f_9004ChickenBridge.scm",(void*)f_9004},
{"f_8958ChickenBridge.scm",(void*)f_8958},
{"f_8961ChickenBridge.scm",(void*)f_8961},
{"f_8972ChickenBridge.scm",(void*)f_8972},
{"f_8911ChickenBridge.scm",(void*)f_8911},
{"f_8915ChickenBridge.scm",(void*)f_8915},
{"f_8945ChickenBridge.scm",(void*)f_8945},
{"f_8926ChickenBridge.scm",(void*)f_8926},
{"f_8934ChickenBridge.scm",(void*)f_8934},
{"f_8890ChickenBridge.scm",(void*)f_8890},
{"f_8902ChickenBridge.scm",(void*)f_8902},
{"f_8847ChickenBridge.scm",(void*)f_8847},
{"f_8877ChickenBridge.scm",(void*)f_8877},
{"f_8804ChickenBridge.scm",(void*)f_8804},
{"f_8834ChickenBridge.scm",(void*)f_8834},
{"f_8735ChickenBridge.scm",(void*)f_8735},
{"f_8779ChickenBridge.scm",(void*)f_8779},
{"f_8666ChickenBridge.scm",(void*)f_8666},
{"f_8710ChickenBridge.scm",(void*)f_8710},
{"f_8642ChickenBridge.scm",(void*)f_8642},
{"f_8654ChickenBridge.scm",(void*)f_8654},
{"f_8627ChickenBridge.scm",(void*)f_8627},
{"f_8516ChickenBridge.scm",(void*)f_8516},
{"f_8591ChickenBridge.scm",(void*)f_8591},
{"f_8520ChickenBridge.scm",(void*)f_8520},
{"f_8560ChickenBridge.scm",(void*)f_8560},
{"f_8549ChickenBridge.scm",(void*)f_8549},
{"f_8534ChickenBridge.scm",(void*)f_8534},
{"f_8542ChickenBridge.scm",(void*)f_8542},
{"f_8482ChickenBridge.scm",(void*)f_8482},
{"f_8494ChickenBridge.scm",(void*)f_8494},
{"f_8475ChickenBridge.scm",(void*)f_8475},
{"f_8468ChickenBridge.scm",(void*)f_8468},
{"f_8449ChickenBridge.scm",(void*)f_8449},
{"f_8446ChickenBridge.scm",(void*)f_8446},
{"f_8439ChickenBridge.scm",(void*)f_8439},
{"f_8436ChickenBridge.scm",(void*)f_8436},
{"f_8429ChickenBridge.scm",(void*)f_8429},
{"f_8411ChickenBridge.scm",(void*)f_8411},
{"f_8400ChickenBridge.scm",(void*)f_8400},
{"f_8397ChickenBridge.scm",(void*)f_8397},
{"f_8394ChickenBridge.scm",(void*)f_8394},
{"f_8391ChickenBridge.scm",(void*)f_8391},
{"f_8362ChickenBridge.scm",(void*)f_8362},
{"f_8355ChickenBridge.scm",(void*)f_8355},
{"f_8352ChickenBridge.scm",(void*)f_8352},
{"f_8331ChickenBridge.scm",(void*)f_8331},
{"f_8312ChickenBridge.scm",(void*)f_8312},
{"f_8293ChickenBridge.scm",(void*)f_8293},
{"f_8286ChickenBridge.scm",(void*)f_8286},
{"f_8279ChickenBridge.scm",(void*)f_8279},
{"f_8264ChickenBridge.scm",(void*)f_8264},
{"f_8253ChickenBridge.scm",(void*)f_8253},
{"f_8246ChickenBridge.scm",(void*)f_8246},
{"f_8219ChickenBridge.scm",(void*)f_8219},
{"f_8192ChickenBridge.scm",(void*)f_8192},
{"f_8151ChickenBridge.scm",(void*)f_8151},
{"f_8157ChickenBridge.scm",(void*)f_8157},
{"f_8167ChickenBridge.scm",(void*)f_8167},
{"f_8065ChickenBridge.scm",(void*)f_8065},
{"f_8026ChickenBridge.scm",(void*)f_8026},
{"f_8032ChickenBridge.scm",(void*)f_8032},
{"f_8055ChickenBridge.scm",(void*)f_8055},
{"f_8045ChickenBridge.scm",(void*)f_8045},
{"f_7987ChickenBridge.scm",(void*)f_7987},
{"f_7993ChickenBridge.scm",(void*)f_7993},
{"f_8013ChickenBridge.scm",(void*)f_8013},
{"f_8003ChickenBridge.scm",(void*)f_8003},
{"f_7947ChickenBridge.scm",(void*)f_7947},
{"f_7953ChickenBridge.scm",(void*)f_7953},
{"f_7977ChickenBridge.scm",(void*)f_7977},
{"f_7963ChickenBridge.scm",(void*)f_7963},
{"f_7848ChickenBridge.scm",(void*)f_7848},
{"f_7852ChickenBridge.scm",(void*)f_7852},
{"f_7877ChickenBridge.scm",(void*)f_7877},
{"f_7894ChickenBridge.scm",(void*)f_7894},
{"f_7898ChickenBridge.scm",(void*)f_7898},
{"f_7854ChickenBridge.scm",(void*)f_7854},
{"f_7871ChickenBridge.scm",(void*)f_7871},
{"f_7787ChickenBridge.scm",(void*)f_7787},
{"f_7800ChickenBridge.scm",(void*)f_7800},
{"f_7777ChickenBridge.scm",(void*)f_7777},
{"f_7676ChickenBridge.scm",(void*)f_7676},
{"f_7685ChickenBridge.scm",(void*)f_7685},
{"f_7723ChickenBridge.scm",(void*)f_7723},
{"f_7701ChickenBridge.scm",(void*)f_7701},
{"f_7636ChickenBridge.scm",(void*)f_7636},
{"f_7666ChickenBridge.scm",(void*)f_7666},
{"f_7546ChickenBridge.scm",(void*)f_7546},
{"f_7498ChickenBridge.scm",(void*)f_7498},
{"f_7532ChickenBridge.scm",(void*)f_7532},
{"f_7475ChickenBridge.scm",(void*)f_7475},
{"f_7469ChickenBridge.scm",(void*)f_7469},
{"f_7454ChickenBridge.scm",(void*)f_7454},
{"f_7440ChickenBridge.scm",(void*)f_7440},
{"f_7430ChickenBridge.scm",(void*)f_7430},
{"f_7420ChickenBridge.scm",(void*)f_7420},
{"f_7410ChickenBridge.scm",(void*)f_7410},
{"f_7400ChickenBridge.scm",(void*)f_7400},
{"f_7374ChickenBridge.scm",(void*)f_7374},
{"f_7372ChickenBridge.scm",(void*)f_7372},
{"f_7322ChickenBridge.scm",(void*)f_7322},
{"f_7325ChickenBridge.scm",(void*)f_7325},
{"f_7328ChickenBridge.scm",(void*)f_7328},
{"f_7331ChickenBridge.scm",(void*)f_7331},
{"f_7346ChickenBridge.scm",(void*)f_7346},
{"f_7357ChickenBridge.scm",(void*)f_7357},
{"f_7361ChickenBridge.scm",(void*)f_7361},
{"f_7334ChickenBridge.scm",(void*)f_7334},
{"f_7337ChickenBridge.scm",(void*)f_7337},
{"f_7344ChickenBridge.scm",(void*)f_7344},
{"f_7340ChickenBridge.scm",(void*)f_7340},
{"f_7381ChickenBridge.scm",(void*)f_7381},
{"f_7289ChickenBridge.scm",(void*)f_7289},
{"f_7298ChickenBridge.scm",(void*)f_7298},
{"f_7303ChickenBridge.scm",(void*)f_7303},
{"f_7278ChickenBridge.scm",(void*)f_7278},
{"f_7283ChickenBridge.scm",(void*)f_7283},
{"f_6982ChickenBridge.scm",(void*)f_6982},
{"f_6992ChickenBridge.scm",(void*)f_6992},
{"f_7243ChickenBridge.scm",(void*)f_7243},
{"f_6995ChickenBridge.scm",(void*)f_6995},
{"f_6998ChickenBridge.scm",(void*)f_6998},
{"f_7013ChickenBridge.scm",(void*)f_7013},
{"f_7023ChickenBridge.scm",(void*)f_7023},
{"f_7025ChickenBridge.scm",(void*)f_7025},
{"f_7084ChickenBridge.scm",(void*)f_7084},
{"f_7094ChickenBridge.scm",(void*)f_7094},
{"f_7211ChickenBridge.scm",(void*)f_7211},
{"f_7199ChickenBridge.scm",(void*)f_7199},
{"f_7197ChickenBridge.scm",(void*)f_7197},
{"f_7184ChickenBridge.scm",(void*)f_7184},
{"f_7138ChickenBridge.scm",(void*)f_7138},
{"f_7165ChickenBridge.scm",(void*)f_7165},
{"f_7144ChickenBridge.scm",(void*)f_7144},
{"f_7078ChickenBridge.scm",(void*)f_7078},
{"f_7037ChickenBridge.scm",(void*)f_7037},
{"f_7050ChickenBridge.scm",(void*)f_7050},
{"f_7260ChickenBridge.scm",(void*)f_7260},
{"f_7251ChickenBridge.scm",(void*)f_7251},
{"f_7259ChickenBridge.scm",(void*)f_7259},
{"f_7262ChickenBridge.scm",(void*)f_7262},
{"f_7270ChickenBridge.scm",(void*)f_7270},
{"f_6684ChickenBridge.scm",(void*)f_6684},
{"f_6937ChickenBridge.scm",(void*)f_6937},
{"f_6970ChickenBridge.scm",(void*)f_6970},
{"f_6966ChickenBridge.scm",(void*)f_6966},
{"f_6955ChickenBridge.scm",(void*)f_6955},
{"f_6951ChickenBridge.scm",(void*)f_6951},
{"f_6845ChickenBridge.scm",(void*)f_6845},
{"f_6848ChickenBridge.scm",(void*)f_6848},
{"f_6851ChickenBridge.scm",(void*)f_6851},
{"f_6931ChickenBridge.scm",(void*)f_6931},
{"f_6756ChickenBridge.scm",(void*)f_6756},
{"f_6697ChickenBridge.scm",(void*)f_6697},
{"f_6854ChickenBridge.scm",(void*)f_6854},
{"f_6861ChickenBridge.scm",(void*)f_6861},
{"f_6921ChickenBridge.scm",(void*)f_6921},
{"f_6907ChickenBridge.scm",(void*)f_6907},
{"f_6873ChickenBridge.scm",(void*)f_6873},
{"f_6899ChickenBridge.scm",(void*)f_6899},
{"f_6834ChickenBridge.scm",(void*)f_6834},
{"f_6881ChickenBridge.scm",(void*)f_6881},
{"f_6877ChickenBridge.scm",(void*)f_6877},
{NULL,NULL}};
#endif

static C_PTABLE_ENTRY *create_ptable(void){
#ifdef C_ENABLE_PTABLES
return ptable;
#else
return NULL;
#endif
}
/* end of file */
