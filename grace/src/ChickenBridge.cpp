/* Generated from ChickenBridge.scm by the CHICKEN compiler
   http://www.call-with-current-continuation.org
   2008-03-22 19:31
   Version 3.0.0 - macosx-unix-gnu-x86	[ manyargs dload ptables applyhook ]
   (c)2000-2008 Felix L. Winkelmann	compiled 2008-02-24 on zippy.local (Darwin)
   command line: ChickenBridge.scm -output-file ChickenBridge.cpp -quiet
   unit: grace
*/

#include "chicken.h"


/*************************************************************************
 * Copyright (C) 2007 Todd Ingalls, Rick Taube.                          *
 * This program is free software; you can redistribute it and/or modify  *
 * it under the terms of the Lisp Lesser Gnu Public License. The text of *
 * this agreement is available at http://www.cliki.net/LLGPL             *
 *************************************************************************/

#include "Grace.h"
#include "Scheme.h"
#include "Syntax.h"
#include "Midi.h"
#include <juce.h>

//
// Console Window code
//

void print_message(char * st) {
  // attempt at buffering: if string ends with #\Return, send string
  // AND trigger update else send string without triggering update
  String s=String(st);
  if ( s.endsWithChar('\n') )
    ((GraceApp *)GraceApp::getInstance())->getConsole()->postConsoleTextMessage(s, ConsoleMessage::TEXT, true);
  else
    ((GraceApp *)GraceApp::getInstance())->getConsole()->postConsoleTextMessage(s, ConsoleMessage::TEXT, false);
}

void print_error(char * st) {
  // attempt at buffering: if string ends with #\Return, send string
  // AND trigger update else send string without triggering update
  String s=String(st);
  if ( s.endsWithChar('\n') )
    ((GraceApp *)GraceApp::getInstance())->getConsole()->postConsoleTextMessage(s, ConsoleMessage::ERROR, true);
  else
    ((GraceApp *)GraceApp::getInstance())->getConsole()->postConsoleTextMessage(s, ConsoleMessage::ERROR, false);
}

//
// Scheduler code
//

void scheduler_sprout( C_word proc, double time, int id)
{
  ((GraceApp *)
   GraceApp::getInstance())->schemeProcess->addNode(0, time, proc, id);
}

bool scheduler_is_paused () {
  ((GraceApp *)GraceApp::getInstance())->schemeProcess->isPaused();
}

void scheduler_pause() {
  ((GraceApp *)GraceApp::getInstance())->schemeProcess->setPaused(true);
}

void scheduler_cont () {
  ((GraceApp *)GraceApp::getInstance())->schemeProcess->setPaused(false);
}

void scheduler_stop (int id) {
  ((GraceApp *)GraceApp::getInstance())->schemeProcess->stop(id);
}

void scheduler_hush () {
  ((GraceApp *)GraceApp::getInstance())->schemeProcess->stop(-1);
  ((GraceApp *)GraceApp::getInstance())->midiOutPort->clear();
}

bool scheduler_is_time_milliseconds () {
  ((GraceApp *)GraceApp::getInstance())->schemeProcess->isTimeMilliseconds();
}
 
void scheduler_set_time_milliseconds (bool b) {
  ((GraceApp *)GraceApp::getInstance())->schemeProcess->setTimeMilliseconds(b);
}

//void print_current_directory() {
//  String s=File::getCurrentWorkingDirectory().getFullPathName().quoted() + T("\n");
//  ((GraceApp *)GraceApp::getInstance())->getConsole()->postConsoleTextMessage(s, ConsoleMessage::TEXT, true);
//}

char *get_current_directory() {
  return (char *)File::getCurrentWorkingDirectory().getFullPathName().toUTF8();
}

void set_current_directory (char *path) {
  File dir=File(String(path));
  if ( dir.isDirectory() ) {
    dir.setAsCurrentWorkingDirectory();
    //print_working_directory();
  }
  else {
    String s=T(">>> Error: ") + dir.getFullPathName().quoted() + T(" is not a directory.\n");
    ((GraceApp *)GraceApp::getInstance())->getConsole()->postConsoleTextMessage(s, ConsoleMessage::ERROR, true);
  }			 
}

void load_sal_file(char *path) {
  SalSyntax::getInstance()->loadFile( String(path) );  
}



#include "Toolbox.h"



void mp_note(double time, double dur, float key, float vel, float chan) {
 ((GraceApp *)GraceApp::getInstance())->midiOutPort->sendNote(time, dur, key, vel, chan); 
}

void mp_data(int type, double time, float chan, float data1, float data2) {
 ((GraceApp *)GraceApp::getInstance())->midiOutPort->sendData(type, time, chan, data1, data2) ;
}

void mp_message(MidiMessage *m) {
 ((GraceApp *)GraceApp::getInstance())->midiOutPort->sendMessage(m) ;
}

/// MidiMessage accessors

MidiMessage *mm_make(int type, double time, int chan, 
		     int data1, int data2 ) {
  MidiMessage *m;
  chan++; // juce channels are 1 based
  switch (type) {
  case MidiNode::MM_OFF :
    m=new MidiMessage(MidiMessage::noteOff(chan, data1));
    break;
  case MidiNode::MM_ON :
    m=new MidiMessage(MidiMessage::noteOn(chan, data1, (juce::uint8)data2));
    break;
  case MidiNode::MM_TOUCH :
    m=new MidiMessage(MidiMessage::aftertouchChange(chan, data1, data2));
    break;
  case MidiNode::MM_CTRL :
    m=new MidiMessage(MidiMessage::controllerEvent(chan, data1, data2));
    break;
  case MidiNode::MM_PROG :
    m=new MidiMessage(MidiMessage::programChange(chan, data1));
    break;
  case MidiNode::MM_PRESS :
    m=new MidiMessage(MidiMessage::channelPressureChange(chan, data1));
    break;
  case MidiNode::MM_BEND :
    m=new MidiMessage(MidiMessage::pitchWheel(chan, data1));
    break;
  default:
    return NULL;
  }
  return m;
}

MidiMessage *mm_copy(MidiMessage *m) {
  return new MidiMessage(*m);
}

void mm_free(MidiMessage *m) {
  delete m;
}

bool mm_is_type(MidiMessage *m, int typ) {
  switch (typ) {
  case MidiNode::MM_OFF :
    return m->isNoteOff();
    break;
  case MidiNode::MM_ON :
    return m->isNoteOn();
    break;
  case MidiNode::MM_TOUCH :
    return m->isAftertouch();
    break;
  case MidiNode::MM_CTRL :
    return m->isController();
    break;
  case MidiNode::MM_PROG :
    return m->isProgramChange();
    break;
  case MidiNode::MM_PRESS :
    return m->isChannelPressure();
    break;
  case MidiNode::MM_BEND :
    return m->isPitchWheel();
    break;
  default:
    return false;
  }
}

double mm_time(MidiMessage *m) {
  return m->getTimeStamp();
}

void mm_set_time(MidiMessage *m, double t) {
  m->setTimeStamp(t);
  return ;		
}

int mm_chan(MidiMessage *m) {
  // juce channels are 1 based
  return m->getChannel()-1;
}

void mm_set_chan(MidiMessage *m, int chan) {
  // juce channels are 1 based
  m->setChannel(chan+1);
}

int mm_data(MidiMessage *m, int n ) {
  juce::uint8 *data=m->getRawData();
  return (int)data[n];
}

void mm_set_data(MidiMessage *m, int n, int v ) {
  juce::uint8 *data=m->getRawData();
  data[n]=(v & 0x7f);
}

//INput Hook Code
void set_input_hook( C_word proc )
{
 // FIX
 ((GraceApp *)GraceApp::getInstance())->schemeProcess->setInputHook( proc);
}



#include "Csound.h"

void cs_send_score_event (int type, int len, C_word lyst) {
  MYFLT buf[len];
  int i=0;
  for ( ; C_SCHEME_END_OF_LIST != lyst; lyst = C_u_i_cdr( lyst ) ) {
    if (i==len) break;
    C_word w = C_u_i_car( lyst );
    if ( C_immediatep(w) ) {
      if ( C_truep(C_fixnump(w)) ) {
	// printf("FIX: buf[%d]=%d\n", i, C_unfix(w) );
	buf[i++] = (MYFLT)C_unfix(w);
      }
      else
        buf[i++] = 0.0;
    }
    else if ( C_truep(C_blockp(w)) && C_truep( C_flonump( w ) )) {
      // printf("FLO: buf[%d]=%f\n", i, (float)C_flonum_magnitude( w ));
      buf[i++] = (MYFLT)C_flonum_magnitude( w );
    }
    else {
      buf[i++] = 0.0;
    }
  }
  ((GraceApp *)GraceApp::getInstance())->getCsoundPort()->sendScoreEvent( ((type==2) ? 'f' : 'i'), len, buf);  
}

void cs_clear_score () {
  ((GraceApp *)GraceApp::getInstance())->getCsoundPort()->clearScore();
}



static C_PTABLE_ENTRY *create_ptable(void);
C_noret_decl(C_library_toplevel)
C_externimport void C_ccall C_library_toplevel(C_word c,C_word d,C_word k) C_noret;
C_noret_decl(C_eval_toplevel)
C_externimport void C_ccall C_eval_toplevel(C_word c,C_word d,C_word k) C_noret;
C_noret_decl(C_extras_toplevel)
C_externimport void C_ccall C_extras_toplevel(C_word c,C_word d,C_word k) C_noret;
C_noret_decl(C_extras_toplevel)
C_externimport void C_ccall C_extras_toplevel(C_word c,C_word d,C_word k) C_noret;

static C_TLS C_word lf[815];
static double C_possibly_force_alignment;
static C_char C_TLS li0[] C_aligned={C_lihdr(0,0,11),40,97,53,52,54,53,32,105,51,50,41,0,0,0};
static C_char C_TLS li1[] C_aligned={C_lihdr(0,0,11),40,97,53,52,56,55,32,105,51,49,41,0,0,0};
static C_char C_TLS li2[] C_aligned={C_lihdr(0,0,11),40,97,53,52,57,55,32,105,51,48,41,0,0,0};
static C_char C_TLS li3[] C_aligned={C_lihdr(0,0,11),40,97,53,53,48,51,32,118,50,54,41,0,0,0};
static C_char C_TLS li4[] C_aligned={C_lihdr(0,0,34),40,101,120,112,97,110,100,45,111,112,116,107,101,121,115,32,117,115,101,114,48,32,115,112,101,99,49,32,98,111,100,121,50,41,0,0};
static C_char C_TLS li5[] C_aligned={C_lihdr(0,0,23),40,102,95,53,56,50,57,32,115,116,114,53,48,32,46,32,97,114,103,115,53,49,41,0,0,0,0,0,0,0};
static C_char C_TLS li6[] C_aligned={C_lihdr(0,0,12),40,102,95,53,56,49,56,32,107,53,52,41,0,0,0,0};
static C_char C_TLS li7[] C_aligned={C_lihdr(0,0,12),40,102,95,53,56,50,55,32,107,53,53,41,0,0,0,0};
static C_char C_TLS li8[] C_aligned={C_lihdr(0,0,13),40,100,111,54,57,32,116,97,105,108,55,49,41,0,0,0,0,0};
static C_char C_TLS li9[] C_aligned={C_lihdr(0,0,11),40,97,53,55,54,53,32,120,55,55,41,0,0,0};
static C_char C_TLS li10[] C_aligned={C_lihdr(0,0,31),40,100,111,54,51,32,97,114,103,115,54,53,32,107,101,121,54,54,32,97,114,103,54,55,32,112,111,115,54,56,41,0,0,0,0,0,0,0};
static C_char C_TLS li11[] C_aligned={C_lihdr(0,0,7),40,97,53,56,48,57,41,0,0,0,0,0,0,0};
static C_char C_TLS li12[] C_aligned={C_lihdr(0,0,34),40,101,120,112,97,110,100,45,115,101,110,100,32,109,101,115,103,52,52,32,100,97,116,97,52,53,32,101,114,114,102,52,54,41,0,0};
static C_char C_TLS li13[] C_aligned={C_lihdr(0,0,8),40,102,95,53,56,52,55,41};
static C_char C_TLS li14[] C_aligned={C_lihdr(0,0,5),40,99,119,100,41,0,0,0,0,0};
static C_char C_TLS li15[] C_aligned={C_lihdr(0,0,14),40,102,95,53,56,54,50,32,97,57,52,57,56,41,0,0,0,0,0,0};
static C_char C_TLS li16[] C_aligned={C_lihdr(0,0,15),40,99,104,100,105,114,32,46,32,100,105,114,57,51,41,0,0,0,0,0,0,0};
static C_char C_TLS li17[] C_aligned={C_lihdr(0,0,12),40,102,105,102,116,104,32,108,49,48,48,41,0,0,0,0};
static C_char C_TLS li18[] C_aligned={C_lihdr(0,0,12),40,115,105,120,116,104,32,108,49,48,49,41,0,0,0,0};
static C_char C_TLS li19[] C_aligned={C_lihdr(0,0,14),40,115,101,118,101,110,116,104,32,108,49,48,50,41,0,0,0,0,0,0};
static C_char C_TLS li20[] C_aligned={C_lihdr(0,0,13),40,101,105,103,104,116,104,32,108,49,48,51,41,0,0,0,0,0};
static C_char C_TLS li21[] C_aligned={C_lihdr(0,0,12),40,110,105,110,116,104,32,108,49,48,52,41,0,0,0,0};
static C_char C_TLS li22[] C_aligned={C_lihdr(0,0,12),40,116,101,110,116,104,32,108,49,48,53,41,0,0,0,0};
static C_char C_TLS li23[] C_aligned={C_lihdr(0,0,11),40,108,97,115,116,32,108,49,48,55,41,0,0,0};
static C_char C_TLS li24[] C_aligned={C_lihdr(0,0,14),40,98,117,116,108,97,115,116,32,108,49,48,56,41,0,0,0,0,0,0};
static C_char C_TLS li25[] C_aligned={C_lihdr(0,0,17),40,108,105,115,116,42,32,46,32,97,114,103,115,49,48,57,41,0};
static C_char C_TLS li26[] C_aligned={C_lihdr(0,0,32),40,108,105,115,116,45,115,101,116,33,32,108,105,115,49,49,48,32,112,111,115,49,49,49,32,118,97,108,49,49,50,41};
static C_char C_TLS li27[] C_aligned={C_lihdr(0,0,35),40,108,105,115,116,45,112,114,111,112,32,108,105,115,49,50,48,32,112,114,111,112,49,50,49,32,46,32,100,101,102,49,50,50,41,0,0,0};
static C_char C_TLS li28[] C_aligned={C_lihdr(0,0,12),40,100,111,49,50,56,32,102,49,51,48,41,0,0,0,0};
static C_char C_TLS li29[] C_aligned={C_lihdr(0,0,24),40,98,105,116,119,105,115,101,45,116,101,115,116,32,97,49,50,54,32,98,49,50,55,41};
static C_char C_TLS li30[] C_aligned={C_lihdr(0,0,60),40,116,98,58,114,101,115,99,97,108,101,32,97,49,53,57,49,54,50,32,97,49,53,56,49,54,51,32,97,49,53,55,49,54,52,32,97,49,53,54,49,54,53,32,97,49,53,53,49,54,54,32,97,49,53,52,49,54,55,41,0,0,0,0};
static C_char C_TLS li31[] C_aligned={C_lihdr(0,0,61),40,116,98,58,100,105,115,99,114,101,116,101,32,97,49,55,52,49,55,55,32,97,49,55,51,49,55,56,32,97,49,55,50,49,55,57,32,97,49,55,49,49,56,48,32,97,49,55,48,49,56,49,32,97,49,54,57,49,56,50,41,0,0,0,0,0};
static C_char C_TLS li32[] C_aligned={C_lihdr(0,0,29),40,116,98,58,100,101,99,105,109,97,108,115,32,97,49,56,56,49,57,49,32,97,49,56,55,49,57,50,41,0,0,0,0,0};
static C_char C_TLS li33[] C_aligned={C_lihdr(0,0,26),40,116,98,58,107,101,121,110,117,109,45,62,104,101,114,116,122,32,97,50,49,57,50,50,50,41,0,0};
static C_char C_TLS li34[] C_aligned={C_lihdr(0,0,17),40,116,98,58,114,97,110,105,32,97,50,51,55,50,52,48,41,0};
static C_char C_TLS li35[] C_aligned={C_lihdr(0,0,17),40,116,98,58,114,97,110,102,32,97,50,52,49,50,52,52,41,0};
static C_char C_TLS li36[] C_aligned={C_lihdr(0,0,29),40,116,98,58,114,97,110,103,97,117,115,115,32,97,50,54,57,50,55,50,32,97,50,54,56,50,55,51,41,0,0,0,0,0};
static C_char C_TLS li37[] C_aligned={C_lihdr(0,0,19),40,116,98,58,114,97,110,101,120,112,32,97,50,55,53,50,55,56,41,0,0,0};
static C_char C_TLS li38[] C_aligned={C_lihdr(0,0,21),40,116,98,58,114,97,110,103,97,109,109,97,32,97,50,56,55,50,57,48,41,0,0,0,0,0};
static C_char C_TLS li39[] C_aligned={C_lihdr(0,0,23),40,116,98,58,114,97,110,112,111,105,115,115,111,110,32,97,50,57,53,50,57,56,41,0,0,0,0,0,0,0};
static C_char C_TLS li40[] C_aligned={C_lihdr(0,0,12),40,97,54,53,48,48,32,122,51,49,49,41,0,0,0,0};
static C_char C_TLS li41[] C_aligned={C_lihdr(0,0,45),40,114,101,115,99,97,108,101,32,120,51,48,53,32,120,49,51,48,54,32,120,50,51,48,55,32,121,49,51,48,56,32,121,50,51,48,57,32,46,32,98,51,49,48,41,0,0,0,0,0};
static C_char C_TLS li42[] C_aligned={C_lihdr(0,0,43),40,100,105,115,99,114,101,116,101,32,120,51,49,50,32,120,49,51,49,51,32,120,50,51,49,52,32,105,49,51,49,53,32,46,32,97,114,103,115,51,49,54,41,0,0,0};
static C_char C_TLS li43[] C_aligned={C_lihdr(0,0,10),40,105,110,116,32,102,51,49,55,41,0,0};
static C_char C_TLS li44[] C_aligned={C_lihdr(0,0,26),40,113,117,97,110,116,105,122,101,32,110,117,109,51,49,56,32,115,116,101,112,115,51,49,57,41,0,0};
static C_char C_TLS li45[] C_aligned={C_lihdr(0,0,29),40,100,101,99,105,109,97,108,115,32,110,117,109,51,50,48,32,46,32,100,105,103,105,116,115,51,50,49,41,0,0,0,0,0};
static C_char C_TLS li46[] C_aligned={C_lihdr(0,0,26),40,98,111,100,121,51,50,54,32,116,101,109,112,111,51,51,50,32,98,101,97,116,51,51,51,41,0,0};
static C_char C_TLS li47[] C_aligned={C_lihdr(0,0,26),40,100,101,102,45,98,101,97,116,51,50,57,32,37,116,101,109,112,111,51,50,52,51,51,53,41,0,0};
static C_char C_TLS li48[] C_aligned={C_lihdr(0,0,14),40,100,101,102,45,116,101,109,112,111,51,50,56,41,0,0,0,0,0,0};
static C_char C_TLS li49[] C_aligned={C_lihdr(0,0,36),40,114,104,121,116,104,109,45,62,115,101,99,111,110,100,115,32,98,101,97,116,115,51,50,50,32,46,32,97,114,103,115,51,50,51,41,0,0,0,0};
static C_char C_TLS li50[] C_aligned={C_lihdr(0,0,24),40,99,101,110,116,115,45,62,115,99,97,108,101,114,32,99,101,110,116,115,51,52,50,41};
static C_char C_TLS li51[] C_aligned={C_lihdr(0,0,22),40,115,99,97,108,101,114,45,62,99,101,110,116,115,32,110,117,109,51,52,51,41,0,0,0,0,0,0};
static C_char C_TLS li52[] C_aligned={C_lihdr(0,0,15),40,100,111,51,53,50,32,116,97,105,108,51,53,52,41,0,0,0,0,0,0,0};
static C_char C_TLS li53[] C_aligned={C_lihdr(0,0,34),40,105,110,116,101,114,112,108,32,120,51,52,52,32,99,111,111,114,100,115,51,52,53,32,46,32,98,97,115,101,51,52,54,41,0,0};
static C_char C_TLS li54[] C_aligned={C_lihdr(0,0,23),40,105,110,116,101,114,112,32,120,51,54,50,32,46,32,97,114,103,115,51,54,51,41,0,0,0,0,0,0,0};
static C_char C_TLS li55[] C_aligned={C_lihdr(0,0,27),40,100,111,51,54,56,32,105,51,55,48,32,107,51,55,49,32,108,51,55,50,32,116,51,55,51,41,0,0,0};
static C_char C_TLS li56[] C_aligned={C_lihdr(0,0,34),40,115,116,101,112,115,32,108,101,110,51,54,52,32,107,101,121,110,117,109,51,54,53,32,46,32,97,114,103,115,51,54,54,41,0,0};
static C_char C_TLS li57[] C_aligned={C_lihdr(0,0,18),40,114,97,110,45,115,101,116,33,32,115,101,101,100,51,55,56,41,0,0};
static C_char C_TLS li58[] C_aligned={C_lihdr(0,0,12),40,114,97,110,32,110,117,109,51,55,57,41,0,0,0,0};
static C_char C_TLS li59[] C_aligned={C_lihdr(0,0,19),40,98,101,116,119,101,101,110,32,97,51,56,48,32,98,51,56,49,41,0,0,0};
static C_char C_TLS li60[] C_aligned={C_lihdr(0,0,14),40,112,105,99,107,32,97,114,103,115,51,56,50,41,0,0,0,0,0,0};
static C_char C_TLS li61[] C_aligned={C_lihdr(0,0,21),40,111,100,100,115,32,110,51,56,51,32,46,32,97,114,103,115,51,56,52,41,0,0,0,0,0};
static C_char C_TLS li62[] C_aligned={C_lihdr(0,0,8),40,114,97,110,108,111,119,41};
static C_char C_TLS li63[] C_aligned={C_lihdr(0,0,9),40,114,97,110,104,105,103,104,41,0};
static C_char C_TLS li64[] C_aligned={C_lihdr(0,0,11),40,114,97,110,109,105,100,100,108,101,41,0,0,0};
static C_char C_TLS li65[] C_aligned={C_lihdr(0,0,19),40,114,97,110,98,101,116,97,32,46,32,97,114,103,115,52,50,54,41,0,0,0};
static C_char C_TLS li66[] C_aligned={C_lihdr(0,0,18),40,114,97,110,101,120,112,32,46,32,97,114,103,115,52,54,57,41,0,0};
static C_char C_TLS li67[] C_aligned={C_lihdr(0,0,20),40,114,97,110,103,97,117,115,115,32,46,32,97,114,103,115,52,55,48,41,0,0,0,0};
static C_char C_TLS li68[] C_aligned={C_lihdr(0,0,11),40,114,97,110,99,97,117,99,104,121,41,0,0,0};
static C_char C_TLS li69[] C_aligned={C_lihdr(0,0,22),40,114,97,110,112,111,105,115,115,111,110,32,46,32,97,114,103,115,52,55,49,41,0,0,0,0,0,0};
static C_char C_TLS li70[] C_aligned={C_lihdr(0,0,20),40,114,97,110,103,97,109,109,97,32,46,32,97,114,103,115,52,55,50,41,0,0,0,0};
static C_char C_TLS li71[] C_aligned={C_lihdr(0,0,10),40,114,97,110,98,114,111,119,110,41,0,0};
static C_char C_TLS li72[] C_aligned={C_lihdr(0,0,9),40,114,97,110,112,105,110,107,41,0};
static C_char C_TLS li73[] C_aligned={C_lihdr(0,0,7),40,97,55,54,51,50,41,0,0,0,0,0,0,0};
static C_char C_TLS li74[] C_aligned={C_lihdr(0,0,7),40,97,55,54,52,55,41,0,0,0,0,0,0,0};
static C_char C_TLS li75[] C_aligned={C_lihdr(0,0,41),40,115,116,114,105,110,103,45,62,110,111,116,101,45,101,110,116,114,121,32,115,116,114,53,49,52,32,111,99,116,53,49,53,32,101,114,114,53,49,54,41,0};
static C_char C_TLS li76[] C_aligned={C_lihdr(0,0,7),40,97,55,54,54,50,41,0,0,0,0,0,0,0};
static C_char C_TLS li77[] C_aligned={C_lihdr(0,0,7),40,97,55,54,56,52,41,0,0,0,0,0,0,0};
static C_char C_TLS li78[] C_aligned={C_lihdr(0,0,34),40,110,111,116,101,45,97,117,120,32,102,114,101,113,53,50,50,32,100,111,99,116,53,50,51,32,101,114,114,63,53,50,52,41,0,0};
static C_char C_TLS li79[] C_aligned={C_lihdr(0,0,39),40,100,111,53,50,55,32,116,97,105,108,53,50,57,32,100,101,102,111,53,51,48,32,116,104,105,115,53,51,49,32,114,101,115,108,53,51,50,41,0,0,0,0,0,0,0};
static C_char C_TLS li80[] C_aligned={C_lihdr(0,0,14),40,110,111,116,101,32,102,114,101,113,53,50,53,41,0,0,0,0,0,0};
static C_char C_TLS li81[] C_aligned={C_lihdr(0,0,39),40,100,111,53,52,49,32,116,97,105,108,53,52,51,32,100,101,102,111,53,52,52,32,116,104,105,115,53,52,53,32,114,101,115,108,53,52,54,41,0,0,0,0,0,0,0};
static C_char C_TLS li82[] C_aligned={C_lihdr(0,0,13),40,107,101,121,32,102,114,101,113,53,51,57,41,0,0,0,0,0};
static C_char C_TLS li83[] C_aligned={C_lihdr(0,0,39),40,100,111,53,53,55,32,116,97,105,108,53,53,57,32,100,101,102,111,53,54,48,32,116,104,105,115,53,54,49,32,114,101,115,108,53,54,50,41,0,0,0,0,0,0,0};
static C_char C_TLS li84[] C_aligned={C_lihdr(0,0,12),40,104,122,32,102,114,101,113,53,53,53,41,0,0,0,0};
static C_char C_TLS li85[] C_aligned={C_lihdr(0,0,69),40,109,97,107,101,45,112,101,114,105,111,100,32,99,111,117,110,116,54,51,50,32,108,101,110,103,116,104,54,51,51,32,115,116,114,101,97,109,54,51,52,32,100,101,102,97,117,108,116,54,51,53,32,111,109,105,116,54,51,54,32,114,101,112,115,54,51,55,41,0,0,0,0,0};
static C_char C_TLS li86[] C_aligned={C_lihdr(0,0,31),40,112,101,114,105,111,100,45,99,111,117,110,116,45,115,101,116,33,32,120,54,51,57,32,118,97,108,54,52,48,41,0,0,0,0,0,0,0};
static C_char C_TLS li87[] C_aligned={C_lihdr(0,0,19),40,112,101,114,105,111,100,45,99,111,117,110,116,32,120,54,52,50,41,0,0,0};
static C_char C_TLS li88[] C_aligned={C_lihdr(0,0,20),40,112,101,114,105,111,100,45,108,101,110,103,116,104,32,120,54,52,56,41,0,0,0,0};
static C_char C_TLS li89[] C_aligned={C_lihdr(0,0,20),40,112,101,114,105,111,100,45,115,116,114,101,97,109,32,120,54,53,52,41,0,0,0,0};
static C_char C_TLS li90[] C_aligned={C_lihdr(0,0,30),40,112,101,114,105,111,100,45,111,109,105,116,45,115,101,116,33,32,120,54,54,51,32,118,97,108,54,54,52,41,0,0,0,0,0,0};
static C_char C_TLS li91[] C_aligned={C_lihdr(0,0,18),40,112,101,114,105,111,100,45,111,109,105,116,32,120,54,54,54,41,0,0};
static C_char C_TLS li92[] C_aligned={C_lihdr(0,0,18),40,112,101,114,105,111,100,45,114,101,112,115,32,120,54,55,50,41,0,0};
static C_char C_TLS li93[] C_aligned={C_lihdr(0,0,15),40,112,97,116,116,101,114,110,63,32,120,54,57,56,41,0,0,0,0,0,0,0};
static C_char C_TLS li94[] C_aligned={C_lihdr(0,0,20),40,112,97,116,116,101,114,110,45,102,108,97,103,115,32,120,55,48,50,41,0,0,0,0};
static C_char C_TLS li95[] C_aligned={C_lihdr(0,0,31),40,112,97,116,116,101,114,110,45,100,97,116,97,45,115,101,116,33,32,120,55,48,53,32,118,97,108,55,48,54,41,0,0,0,0,0,0,0};
static C_char C_TLS li96[] C_aligned={C_lihdr(0,0,19),40,112,97,116,116,101,114,110,45,100,97,116,97,32,120,55,48,56,41,0,0,0};
static C_char C_TLS li97[] C_aligned={C_lihdr(0,0,21),40,112,97,116,116,101,114,110,45,108,101,110,103,116,104,32,120,55,49,52,41,0,0,0,0,0};
static C_char C_TLS li98[] C_aligned={C_lihdr(0,0,32),40,112,97,116,116,101,114,110,45,100,97,116,117,109,45,115,101,116,33,32,120,55,49,55,32,118,97,108,55,49,56,41};
static C_char C_TLS li99[] C_aligned={C_lihdr(0,0,20),40,112,97,116,116,101,114,110,45,100,97,116,117,109,32,120,55,50,48,41,0,0,0,0};
static C_char C_TLS li100[] C_aligned={C_lihdr(0,0,21),40,112,97,116,116,101,114,110,45,112,101,114,105,111,100,32,120,55,50,54,41,0,0,0,0,0};
static C_char C_TLS li101[] C_aligned={C_lihdr(0,0,32),40,112,97,116,116,101,114,110,45,118,97,108,117,101,45,115,101,116,33,32,120,55,50,57,32,118,97,108,55,51,48,41};
static C_char C_TLS li102[] C_aligned={C_lihdr(0,0,13),40,102,95,56,51,53,56,32,120,55,51,50,41,0,0,0,0,0};
static C_char C_TLS li103[] C_aligned={C_lihdr(0,0,32),40,112,97,116,116,101,114,110,45,115,116,97,116,101,45,115,101,116,33,32,120,55,51,53,32,118,97,108,55,51,54,41};
static C_char C_TLS li104[] C_aligned={C_lihdr(0,0,20),40,112,97,116,116,101,114,110,45,115,116,97,116,101,32,120,55,51,56,41,0,0,0,0};
static C_char C_TLS li105[] C_aligned={C_lihdr(0,0,32),40,112,97,116,116,101,114,110,45,99,97,99,104,101,45,115,101,116,33,32,120,55,55,55,32,118,97,108,55,55,56,41};
static C_char C_TLS li106[] C_aligned={C_lihdr(0,0,20),40,112,97,116,116,101,114,110,45,99,97,99,104,101,32,120,55,56,48,41,0,0,0,0};
static C_char C_TLS li107[] C_aligned={C_lihdr(0,0,16),40,37,97,108,108,111,99,45,112,97,116,116,101,114,110,41};
static C_char C_TLS li108[] C_aligned={C_lihdr(0,0,12),40,97,56,55,51,54,32,120,56,49,48,41,0,0,0,0};
static C_char C_TLS li109[] C_aligned={C_lihdr(0,0,89),40,105,110,105,116,105,97,108,105,122,101,45,112,97,116,116,101,114,110,32,111,98,106,56,48,48,32,100,97,116,97,56,48,49,32,102,111,114,56,48,50,32,114,101,112,56,48,51,32,102,108,97,103,115,56,48,52,32,108,101,110,56,48,53,32,100,112,101,114,56,48,54,32,103,101,116,114,56,48,55,32,109,97,112,114,56,48,56,41,0};
static C_char C_TLS li110[] C_aligned={C_lihdr(0,0,11),40,101,111,112,63,32,120,56,51,53,41,0,0,0};
static C_char C_TLS li111[] C_aligned={C_lihdr(0,0,11),40,101,111,100,63,32,120,56,51,54,41,0,0,0};
static C_char C_TLS li112[] C_aligned={C_lihdr(0,0,17),40,100,111,56,52,49,32,105,56,52,51,32,101,56,52,52,41,0};
static C_char C_TLS li113[] C_aligned={C_lihdr(0,0,22),40,100,111,56,52,56,32,110,56,53,48,32,101,56,53,49,32,102,56,53,50,41,0,0,0,0,0,0};
static C_char C_TLS li114[] C_aligned={C_lihdr(0,0,23),40,110,101,120,116,32,111,98,106,56,51,55,32,46,32,97,114,103,115,56,51,56,41,0,0,0,0,0,0,0};
static C_char C_TLS li115[] C_aligned={C_lihdr(0,0,7),40,100,111,56,55,54,41,0,0,0,0,0,0,0};
static C_char C_TLS li116[] C_aligned={C_lihdr(0,0,23),40,100,111,56,55,50,32,100,121,110,63,56,55,52,32,115,116,111,112,56,55,53,41,0,0,0,0,0,0,0};
static C_char C_TLS li117[] C_aligned={C_lihdr(0,0,15),40,110,101,120,116,45,49,32,111,98,106,56,53,56,41,0,0,0,0,0,0,0};
static C_char C_TLS li118[] C_aligned={C_lihdr(0,0,24),40,110,101,120,116,45,105,110,45,112,97,116,116,101,114,110,32,111,98,106,56,57,54,41};
static C_char C_TLS li119[] C_aligned={C_lihdr(0,0,31),40,109,97,112,45,112,97,116,116,101,114,110,45,100,97,116,97,32,102,110,56,57,55,32,111,98,106,56,57,56,41,0,0,0,0,0,0,0};
static C_char C_TLS li120[] C_aligned={C_lihdr(0,0,12),40,97,57,51,49,50,32,120,57,48,55,41,0,0,0,0};
static C_char C_TLS li121[] C_aligned={C_lihdr(0,0,21),40,114,101,115,101,116,45,112,101,114,105,111,100,32,111,98,106,57,48,50,41,0,0,0,0,0};
static C_char C_TLS li122[] C_aligned={C_lihdr(0,0,20),40,97,57,52,48,54,32,102,110,57,53,57,32,111,98,106,57,54,48,41,0,0,0,0};
static C_char C_TLS li123[] C_aligned={C_lihdr(0,0,30),40,109,97,107,101,45,99,121,99,108,101,32,100,97,116,97,57,49,54,32,46,32,97,114,103,115,57,49,55,41,0,0,0,0,0,0};
static C_char C_TLS li124[] C_aligned={C_lihdr(0,0,22),40,110,101,120,116,45,105,110,45,99,121,99,108,101,32,111,98,106,57,54,54,41,0,0,0,0,0,0};
static C_char C_TLS li125[] C_aligned={C_lihdr(0,0,16),40,112,97,108,105,110,45,108,101,110,32,120,57,56,54,41};
static C_char C_TLS li126[] C_aligned={C_lihdr(0,0,28),40,112,97,108,105,110,45,105,110,99,45,115,101,116,33,32,120,57,56,57,32,118,97,108,57,57,48,41,0,0,0,0};
static C_char C_TLS li127[] C_aligned={C_lihdr(0,0,22),40,97,57,56,51,54,32,102,110,49,48,56,55,32,111,98,106,49,48,56,56,41,0,0,0,0,0,0};
static C_char C_TLS li128[] C_aligned={C_lihdr(0,0,37),40,109,97,107,101,45,112,97,108,105,110,100,114,111,109,101,32,100,97,116,97,49,48,49,53,32,46,32,97,114,103,115,49,48,49,54,41,0,0,0,0,0};
static C_char C_TLS li129[] C_aligned={C_lihdr(0,0,28),40,110,101,120,116,45,105,110,45,112,97,108,105,110,100,114,111,109,101,32,111,98,106,49,48,57,54,41,0,0,0,0};
static C_char C_TLS li130[] C_aligned={C_lihdr(0,0,23),40,97,49,48,53,48,51,32,102,110,49,49,53,56,32,111,98,106,49,49,53,57,41,0,0,0,0,0,0,0};
static C_char C_TLS li131[] C_aligned={C_lihdr(0,0,31),40,109,97,107,101,45,108,105,110,101,32,100,97,116,97,49,49,49,53,32,46,32,97,114,103,115,49,49,49,54,41,0,0,0,0,0,0,0};
static C_char C_TLS li132[] C_aligned={C_lihdr(0,0,22),40,110,101,120,116,45,105,110,45,108,105,110,101,32,111,98,106,49,49,54,53,41,0,0,0,0,0,0};
static C_char C_TLS li133[] C_aligned={C_lihdr(0,0,23),40,97,49,48,55,57,48,32,102,110,49,50,49,51,32,111,98,106,49,50,49,52,41,0,0,0,0,0,0,0};
static C_char C_TLS li134[] C_aligned={C_lihdr(0,0,31),40,109,97,107,101,45,104,101,97,112,32,100,97,116,97,49,49,55,48,32,46,32,97,114,103,115,49,49,55,49,41,0,0,0,0,0,0,0};
static C_char C_TLS li135[] C_aligned={C_lihdr(0,0,26),40,100,111,49,50,50,52,32,105,49,50,50,54,32,106,49,50,50,55,32,118,49,50,50,56,41,0,0};
static C_char C_TLS li136[] C_aligned={C_lihdr(0,0,22),40,110,101,120,116,45,105,110,45,104,101,97,112,32,111,98,106,49,50,50,48,41,0,0,0,0,0,0};
static C_char C_TLS li137[] C_aligned={C_lihdr(0,0,23),40,97,49,49,49,51,53,32,102,110,49,51,48,56,32,111,98,106,49,51,48,57,41,0,0,0,0,0,0,0};
static C_char C_TLS li138[] C_aligned={C_lihdr(0,0,35),40,109,97,107,101,45,114,111,116,97,116,105,111,110,32,100,97,116,97,49,50,51,54,32,46,32,97,114,103,115,49,50,51,55,41,0,0,0};
static C_char C_TLS li139[] C_aligned={C_lihdr(0,0,14),40,100,111,49,51,50,52,32,105,49,51,50,54,41,0,0,0,0,0,0};
static C_char C_TLS li140[] C_aligned={C_lihdr(0,0,61),40,114,111,116,97,116,101,45,105,116,101,109,115,32,105,116,101,109,115,49,51,49,57,32,115,116,97,114,116,49,51,50,48,32,115,116,101,112,49,51,50,49,32,119,105,100,116,104,49,51,50,50,32,101,110,100,49,51,50,51,41,0,0,0,0,0};
static C_char C_TLS li141[] C_aligned={C_lihdr(0,0,26),40,110,101,120,116,45,105,110,45,114,111,116,97,116,105,111,110,32,111,98,106,49,51,49,55,41,0,0};
static C_char C_TLS li142[] C_aligned={C_lihdr(0,0,25),40,114,97,110,100,111,109,45,105,116,101,109,45,100,97,116,117,109,32,120,49,51,53,49,41,0};
static C_char C_TLS li143[] C_aligned={C_lihdr(0,0,38),40,114,97,110,100,111,109,45,105,116,101,109,45,105,110,100,101,120,45,115,101,116,33,32,120,49,51,53,52,32,118,97,108,49,51,53,53,41,0,0,0,0,0,0};
static C_char C_TLS li144[] C_aligned={C_lihdr(0,0,25),40,114,97,110,100,111,109,45,105,116,101,109,45,105,110,100,101,120,32,120,49,51,53,55,41,0};
static C_char C_TLS li145[] C_aligned={C_lihdr(0,0,26),40,114,97,110,100,111,109,45,105,116,101,109,45,119,101,105,103,104,116,32,120,49,51,54,51,41,0,0};
static C_char C_TLS li146[] C_aligned={C_lihdr(0,0,23),40,114,97,110,100,111,109,45,105,116,101,109,45,109,105,110,32,120,49,51,54,57,41,0,0,0,0,0,0,0};
static C_char C_TLS li147[] C_aligned={C_lihdr(0,0,23),40,114,97,110,100,111,109,45,105,116,101,109,45,109,97,120,32,120,49,51,55,53,41,0,0,0,0,0,0,0};
static C_char C_TLS li148[] C_aligned={C_lihdr(0,0,38),40,114,97,110,100,111,109,45,105,116,101,109,45,99,111,117,110,116,45,115,101,116,33,32,120,49,51,55,56,32,118,97,108,49,51,55,57,41,0,0,0,0,0,0};
static C_char C_TLS li149[] C_aligned={C_lihdr(0,0,25),40,114,97,110,100,111,109,45,105,116,101,109,45,99,111,117,110,116,32,120,49,51,56,49,41,0};
static C_char C_TLS li150[] C_aligned={C_lihdr(0,0,14),40,97,49,50,48,50,48,32,105,49,52,54,52,41,0,0,0,0,0,0};
static C_char C_TLS li151[] C_aligned={C_lihdr(0,0,23),40,97,49,50,48,49,52,32,102,110,49,52,54,50,32,111,98,106,49,52,54,51,41,0,0,0,0,0,0,0};
static C_char C_TLS li152[] C_aligned={C_lihdr(0,0,17),40,97,49,50,50,53,49,32,105,116,101,109,49,52,49,55,41,0};
static C_char C_TLS li153[] C_aligned={C_lihdr(0,0,25),40,37,109,97,107,101,45,114,97,110,100,111,109,45,105,116,101,109,32,119,49,52,55,53,41,0};
static C_char C_TLS li154[] C_aligned={C_lihdr(0,0,36),40,109,97,107,101,45,119,101,105,103,104,116,105,110,103,32,100,97,116,97,49,52,48,55,32,46,32,97,114,103,115,49,52,48,56,41,0,0,0,0};
static C_char C_TLS li155[] C_aligned={C_lihdr(0,0,37),40,100,111,49,53,54,50,32,116,97,105,108,49,53,54,52,32,105,110,100,101,120,49,53,54,53,32,116,111,116,97,108,49,53,54,54,41,0,0,0,0,0};
static C_char C_TLS li156[] C_aligned={C_lihdr(0,0,17),40,100,111,49,53,53,54,32,116,97,105,108,49,53,53,56,41,0};
static C_char C_TLS li157[] C_aligned={C_lihdr(0,0,36),40,114,101,99,97,108,99,45,119,101,105,103,104,116,105,110,103,115,32,111,98,106,49,53,53,50,32,102,105,120,63,49,53,53,51,41,0,0,0,0};
static C_char C_TLS li158[] C_aligned={C_lihdr(0,0,27),40,100,111,49,53,56,52,32,116,97,105,108,49,53,56,54,32,105,110,100,101,120,49,53,56,55,41,0,0,0};
static C_char C_TLS li159[] C_aligned={C_lihdr(0,0,18),40,112,105,99,107,32,99,49,53,56,50,32,114,49,53,56,51,41,0,0};
static C_char C_TLS li160[] C_aligned={C_lihdr(0,0,17),40,100,111,49,53,57,51,32,116,97,105,108,49,53,57,53,41,0};
static C_char C_TLS li161[] C_aligned={C_lihdr(0,0,17),40,100,111,49,53,56,57,32,105,116,101,109,49,53,57,49,41,0};
static C_char C_TLS li162[] C_aligned={C_lihdr(0,0,27),40,110,101,120,116,45,105,110,45,119,101,105,103,104,116,105,110,103,32,111,98,106,49,53,55,50,41,0,0,0};
static C_char C_TLS li163[] C_aligned={C_lihdr(0,0,14),40,109,107,32,97,49,49,55,32,98,49,49,56,41,0,0,0,0,0,0};
static C_char C_TLS li164[] C_aligned={C_lihdr(0,0,23),40,97,49,51,51,51,52,32,102,110,49,55,50,49,32,111,98,106,49,55,50,50,41,0,0,0,0,0,0,0};
static C_char C_TLS li165[] C_aligned={C_lihdr(0,0,14),40,97,49,51,48,56,56,32,115,49,54,50,50,41,0,0,0,0,0,0};
static C_char C_TLS li166[] C_aligned={C_lihdr(0,0,8),40,100,111,49,54,49,53,41};
static C_char C_TLS li167[] C_aligned={C_lihdr(0,0,41),40,100,111,49,54,51,55,32,116,97,105,108,49,54,51,57,32,111,114,100,101,114,49,54,52,48,32,108,105,115,49,54,52,49,32,112,49,54,52,50,41,0};
static C_char C_TLS li168[] C_aligned={C_lihdr(0,0,33),40,109,97,107,101,45,109,97,114,107,111,118,32,100,97,116,97,49,54,52,57,32,46,32,97,114,103,115,49,54,53,48,41,0};
static C_char C_TLS li169[] C_aligned={C_lihdr(0,0,17),40,100,111,49,55,52,54,32,116,97,105,108,49,55,52,56,41,0};
static C_char C_TLS li170[] C_aligned={C_lihdr(0,0,33),40,100,111,49,55,51,54,32,116,97,105,108,49,55,51,56,32,111,117,116,49,55,51,57,32,115,117,109,49,55,52,48,41,0};
static C_char C_TLS li171[] C_aligned={C_lihdr(0,0,37),40,115,101,108,101,99,116,45,111,117,116,112,117,116,32,114,97,110,103,101,49,55,51,52,32,111,117,116,112,117,116,115,49,55,51,53,41,0,0,0,0,0};
static C_char C_TLS li172[] C_aligned={C_lihdr(0,0,17),40,100,111,49,55,55,54,32,108,97,115,116,49,55,55,56,41,0};
static C_char C_TLS li173[] C_aligned={C_lihdr(0,0,26),40,100,111,49,55,53,50,32,105,49,55,53,52,32,106,49,55,53,53,32,102,49,55,53,54,41,0,0};
static C_char C_TLS li174[] C_aligned={C_lihdr(0,0,35),40,100,111,49,55,54,55,32,116,97,105,108,49,55,54,57,32,112,97,115,116,49,55,55,48,32,105,116,101,109,49,55,55,49,41,0,0,0};
static C_char C_TLS li175[] C_aligned={C_lihdr(0,0,24),40,110,101,120,116,45,105,110,45,109,97,114,107,111,118,32,111,98,106,49,55,51,49,41};
static C_char C_TLS li176[] C_aligned={C_lihdr(0,0,24),40,103,114,97,112,104,45,110,111,100,101,45,100,97,116,117,109,32,120,49,55,57,54,41};
static C_char C_TLS li177[] C_aligned={C_lihdr(0,0,14),40,97,49,52,50,48,54,32,110,49,56,54,50,41,0,0,0,0,0,0};
static C_char C_TLS li178[] C_aligned={C_lihdr(0,0,23),40,97,49,52,50,48,48,32,102,110,49,56,54,48,32,111,98,106,49,56,54,49,41,0,0,0,0,0,0,0};
static C_char C_TLS li179[] C_aligned={C_lihdr(0,0,28),40,97,49,52,52,53,50,32,105,116,101,109,49,56,55,50,32,46,32,97,114,103,115,49,56,55,51,41,0,0,0,0};
static C_char C_TLS li180[] C_aligned={C_lihdr(0,0,29),40,112,97,114,115,101,45,103,114,97,112,104,45,105,116,101,109,32,101,120,116,101,114,110,49,56,55,49,41,0,0,0,0,0};
static C_char C_TLS li181[] C_aligned={C_lihdr(0,0,32),40,109,97,107,101,45,103,114,97,112,104,32,100,97,116,97,49,56,49,55,32,46,32,97,114,103,115,49,56,49,56,41};
static C_char C_TLS li182[] C_aligned={C_lihdr(0,0,17),40,100,111,49,57,50,54,32,116,97,105,108,49,57,50,56,41,0};
static C_char C_TLS li183[] C_aligned={C_lihdr(0,0,23),40,110,101,120,116,45,105,110,45,103,114,97,112,104,32,111,98,106,49,57,49,57,41,0,0,0,0,0,0,0};
static C_char C_TLS li184[] C_aligned={C_lihdr(0,0,45),40,109,97,107,101,45,116,111,107,101,110,32,116,121,112,101,49,57,55,51,32,115,116,114,105,110,103,49,57,55,52,32,112,111,115,105,116,105,111,110,49,57,55,53,41,0,0,0,0,0};
static C_char C_TLS li185[] C_aligned={C_lihdr(0,0,18),40,116,111,107,101,110,45,116,121,112,101,32,120,49,57,56,48,41,0,0};
static C_char C_TLS li186[] C_aligned={C_lihdr(0,0,20),40,116,111,107,101,110,45,115,116,114,105,110,103,32,120,49,57,56,54,41,0,0,0,0};
static C_char C_TLS li187[] C_aligned={C_lihdr(0,0,22),40,116,111,107,101,110,45,112,111,115,105,116,105,111,110,32,120,49,57,57,50,41,0,0,0,0,0,0};
static C_char C_TLS li188[] C_aligned={C_lihdr(0,0,19),40,108,105,115,116,45,62,116,111,107,101,110,32,108,50,48,48,49,41,0,0,0};
static C_char C_TLS li189[] C_aligned={C_lihdr(0,0,22),40,102,105,114,115,116,45,116,111,107,101,110,32,116,111,107,115,50,48,48,51,41,0,0,0,0,0,0};
static C_char C_TLS li190[] C_aligned={C_lihdr(0,0,23),40,110,117,108,108,45,116,111,107,101,110,115,63,32,116,111,107,115,50,48,48,53,41,0,0,0,0,0,0,0};
static C_char C_TLS li191[] C_aligned={C_lihdr(0,0,63),40,109,97,107,101,45,114,117,108,101,32,110,97,109,101,50,48,48,54,32,116,121,112,101,50,48,48,55,32,112,97,116,116,101,114,110,50,48,48,56,32,112,97,114,115,101,114,50,48,48,57,32,101,109,105,116,101,114,50,48,49,48,41,0,0,0,0,0,0,0};
static C_char C_TLS li192[] C_aligned={C_lihdr(0,0,17),40,114,117,108,101,45,110,97,109,101,32,120,50,48,49,53,41,0};
static C_char C_TLS li193[] C_aligned={C_lihdr(0,0,26),40,103,101,116,45,114,117,108,101,32,116,121,112,50,48,53,57,32,100,101,102,50,48,54,48,41,0,0};
static C_char C_TLS li194[] C_aligned={C_lihdr(0,0,21),40,112,97,116,116,101,114,110,45,118,97,108,117,101,32,120,50,48,54,50,41,0,0,0,0,0};
static C_char C_TLS li195[] C_aligned={C_lihdr(0,0,23),40,112,97,116,116,101,114,110,45,99,108,97,117,115,101,63,32,120,50,48,54,51,41,0,0,0,0,0,0,0};
static C_char C_TLS li196[] C_aligned={C_lihdr(0,0,20),40,112,97,116,116,101,114,110,45,115,117,98,115,32,120,50,48,54,53,41,0,0,0,0};
static C_char C_TLS li197[] C_aligned={C_lihdr(0,0,21),40,112,97,116,116,101,114,110,45,110,115,117,98,115,32,120,50,48,54,54,41,0,0,0,0,0};
static C_char C_TLS li198[] C_aligned={C_lihdr(0,0,25),40,112,97,116,116,101,114,110,45,115,117,98,32,120,50,48,54,55,32,105,50,48,54,56,41,0};
static C_char C_TLS li199[] C_aligned={C_lihdr(0,0,29),40,112,97,116,116,101,114,110,45,122,101,114,111,45,111,114,45,109,111,114,101,63,32,120,50,48,55,50,41,0,0,0,0,0};
static C_char C_TLS li200[] C_aligned={C_lihdr(0,0,42),40,109,97,107,101,45,112,97,114,115,101,45,101,114,114,111,114,32,115,116,114,105,110,103,50,48,55,52,32,112,111,115,105,116,105,111,110,50,48,55,53,41,0,0};
static C_char C_TLS li201[] C_aligned={C_lihdr(0,0,26),40,112,97,114,115,101,45,101,114,114,111,114,45,115,116,114,105,110,103,32,120,50,48,56,48,41,0,0};
static C_char C_TLS li202[] C_aligned={C_lihdr(0,0,28),40,112,97,114,115,101,45,101,114,114,111,114,45,112,111,115,105,116,105,111,110,32,120,50,48,56,54,41,0,0,0,0};
static C_char C_TLS li203[] C_aligned={C_lihdr(0,0,50),40,109,97,107,101,45,112,97,114,115,101,45,117,110,105,116,32,116,121,112,101,50,48,57,52,32,112,97,114,115,101,100,50,48,57,53,32,112,111,115,105,116,105,111,110,50,48,57,54,41,0,0};
static C_char C_TLS li204[] C_aligned={C_lihdr(0,0,19),40,112,97,114,115,101,45,117,110,105,116,63,32,120,50,48,57,55,41,0,0,0};
static C_char C_TLS li205[] C_aligned={C_lihdr(0,0,23),40,112,97,114,115,101,45,117,110,105,116,45,116,121,112,101,32,120,50,49,48,49,41,0,0,0,0,0,0,0};
static C_char C_TLS li206[] C_aligned={C_lihdr(0,0,25),40,112,97,114,115,101,45,117,110,105,116,45,112,97,114,115,101,100,32,120,50,49,48,55,41,0};
static C_char C_TLS li207[] C_aligned={C_lihdr(0,0,27),40,112,97,114,115,101,45,117,110,105,116,45,112,111,115,105,116,105,111,110,32,120,50,49,49,51,41,0,0,0};
static C_char C_TLS li208[] C_aligned={C_lihdr(0,0,19),40,116,111,107,101,110,45,117,110,105,116,63,32,120,50,49,50,51,41,0,0,0};
static C_char C_TLS li209[] C_aligned={C_lihdr(0,0,33),40,116,111,107,101,110,45,117,110,105,116,45,116,121,112,101,61,63,32,120,50,49,50,52,32,116,121,112,50,49,50,53,41,0};
static C_char C_TLS li210[] C_aligned={C_lihdr(0,0,33),40,103,101,116,45,101,109,105,116,45,105,110,102,111,32,110,97,109,101,50,49,50,55,32,105,110,102,111,50,49,50,56,41,0};
static C_char C_TLS li211[] C_aligned={C_lihdr(0,0,42),40,97,100,100,45,101,109,105,116,45,105,110,102,111,32,110,97,109,101,50,49,51,48,32,100,97,116,97,50,49,51,49,32,105,110,102,111,50,49,51,50,41,0,0};
static C_char C_TLS li212[] C_aligned={C_lihdr(0,0,43),40,115,101,116,45,101,109,105,116,45,105,110,102,111,33,32,110,97,109,101,50,49,51,51,32,100,97,116,97,50,49,51,52,32,105,110,102,111,50,49,51,53,41,0,0,0};
static C_char C_TLS li213[] C_aligned={C_lihdr(0,0,30),40,101,109,105,116,32,120,50,49,51,56,32,105,110,102,111,50,49,51,57,32,101,114,114,102,50,49,52,48,41,0,0,0,0,0,0};
static C_char C_TLS li214[] C_aligned={C_lihdr(0,0,37),40,101,109,105,116,45,108,105,115,116,32,108,105,115,50,49,52,49,32,105,110,102,111,50,49,52,50,32,101,114,114,102,50,49,52,51,41,0,0,0,0,0};
static C_char C_TLS li215[] C_aligned={C_lihdr(0,0,27),40,102,95,49,53,54,48,54,32,97,114,103,115,50,49,53,54,32,101,114,114,102,50,49,53,55,41,0,0,0};
static C_char C_TLS li216[] C_aligned={C_lihdr(0,0,29),40,115,105,109,112,108,101,45,117,110,105,116,45,112,97,114,115,101,114,32,116,121,112,101,50,49,53,53,41,0,0,0,0,0};
static C_char C_TLS li217[] C_aligned={C_lihdr(0,0,17),40,100,111,50,49,54,53,32,116,97,105,108,50,49,54,55,41,0};
static C_char C_TLS li218[] C_aligned={C_lihdr(0,0,36),40,102,95,49,53,54,49,52,32,117,110,105,116,50,49,53,57,32,105,110,102,111,50,49,54,48,32,101,114,114,102,50,49,54,49,41,0,0,0,0};
static C_char C_TLS li219[] C_aligned={C_lihdr(0,0,30),40,115,105,109,112,108,101,45,117,110,105,116,45,101,109,105,116,116,101,114,32,102,117,110,99,50,49,53,56,41,0,0,0,0,0,0};
static C_char C_TLS li220[] C_aligned={C_lihdr(0,0,8),40,97,49,53,56,49,50,41};
static C_char C_TLS li221[] C_aligned={C_lihdr(0,0,26),40,97,49,53,56,50,50,32,97,50,49,57,55,32,98,50,49,57,56,32,99,50,49,57,57,41,0,0};
static C_char C_TLS li222[] C_aligned={C_lihdr(0,0,8),40,97,49,53,57,49,56,41};
static C_char C_TLS li223[] C_aligned={C_lihdr(0,0,26),40,97,49,53,57,51,50,32,97,50,50,49,51,32,98,50,50,49,52,32,99,50,50,49,53,41,0,0};
static C_char C_TLS li224[] C_aligned={C_lihdr(0,0,14),40,100,111,50,50,48,56,32,105,50,50,49,48,41,0,0,0,0,0,0};
static C_char C_TLS li225[] C_aligned={C_lihdr(0,0,8),40,97,49,53,57,56,53,41};
static C_char C_TLS li226[] C_aligned={C_lihdr(0,0,26),40,97,49,53,57,57,57,32,97,50,50,51,53,32,98,50,50,51,54,32,99,50,50,51,55,41,0,0};
static C_char C_TLS li227[] C_aligned={C_lihdr(0,0,14),40,100,111,50,50,51,48,32,105,50,50,51,50,41,0,0,0,0,0,0};
static C_char C_TLS li228[] C_aligned={C_lihdr(0,0,8),40,97,49,54,48,55,52,41};
static C_char C_TLS li229[] C_aligned={C_lihdr(0,0,26),40,97,49,54,48,56,48,32,97,50,50,53,52,32,98,50,50,53,53,32,99,50,50,53,54,41,0,0};
static C_char C_TLS li230[] C_aligned={C_lihdr(0,0,8),40,100,111,50,50,53,48,41};
static C_char C_TLS li231[] C_aligned={C_lihdr(0,0,8),40,97,49,54,49,49,51,41};
static C_char C_TLS li232[] C_aligned={C_lihdr(0,0,26),40,97,49,54,49,49,57,32,97,50,50,55,50,32,98,50,50,55,51,32,99,50,50,55,52,41,0,0};
static C_char C_TLS li233[] C_aligned={C_lihdr(0,0,70),40,112,97,114,115,101,114,32,112,97,116,50,49,56,52,32,116,111,107,101,110,115,50,49,56,53,32,102,111,114,99,101,45,97,110,100,50,49,56,54,32,108,101,118,101,108,50,49,56,55,32,116,114,97,99,101,50,49,56,56,32,101,114,114,102,50,49,56,57,41,0,0,0,0,0,0};
static C_char C_TLS li234[] C_aligned={C_lihdr(0,0,21),40,83,97,108,84,111,107,101,110,84,121,112,101,63,32,105,50,52,52,57,41,0,0,0,0,0};
static C_char C_TLS li235[] C_aligned={C_lihdr(0,0,18),40,83,97,108,79,112,84,121,112,101,63,32,105,50,52,53,51,41,0,0};
static C_char C_TLS li236[] C_aligned={C_lihdr(0,0,20),40,83,97,108,82,117,108,101,84,121,112,101,63,32,105,50,52,54,50,41,0,0,0,0};
static C_char C_TLS li237[] C_aligned={C_lihdr(0,0,29),40,83,97,108,84,121,112,101,61,63,32,116,121,112,49,50,52,54,51,32,116,121,112,50,50,52,54,52,41,0,0,0,0,0};
static C_char C_TLS li238[] C_aligned={C_lihdr(0,0,17),40,100,111,50,53,49,51,32,116,111,107,115,50,53,49,53,41,0};
static C_char C_TLS li239[] C_aligned={C_lihdr(0,0,36),40,114,101,109,111,118,101,45,116,111,107,101,110,45,116,121,112,101,32,116,111,107,115,50,53,48,57,32,116,121,112,50,53,49,48,41,0,0,0,0};
static C_char C_TLS li240[] C_aligned={C_lihdr(0,0,14),40,105,115,45,111,112,63,32,120,50,53,52,48,41,0,0,0,0,0,0};
static C_char C_TLS li241[] C_aligned={C_lihdr(0,0,29),40,100,111,50,53,52,57,32,119,50,50,53,53,49,32,111,107,50,53,53,50,32,108,105,50,53,53,51,41,0,0,0,0,0};
static C_char C_TLS li242[] C_aligned={C_lihdr(0,0,8),40,100,111,50,53,52,55,41};
static C_char C_TLS li243[] C_aligned={C_lihdr(0,0,18),40,105,110,102,45,62,112,114,101,32,105,110,102,50,53,52,50,41,0,0};
static C_char C_TLS li244[] C_aligned={C_lihdr(0,0,38),40,115,97,108,45,112,97,114,115,101,45,115,116,101,112,112,105,110,103,32,97,114,103,115,50,55,48,56,32,101,114,114,102,50,55,48,57,41,0,0,0,0,0,0};
static C_char C_TLS li245[] C_aligned={C_lihdr(0,0,14),40,100,111,50,57,49,55,32,102,50,57,49,57,41,0,0,0,0,0,0};
static C_char C_TLS li246[] C_aligned={C_lihdr(0,0,14),40,100,111,50,57,49,48,32,102,50,57,49,50,41,0,0,0,0,0,0};
static C_char C_TLS li247[] C_aligned={C_lihdr(0,0,8),40,97,49,53,54,56,51,41};
static C_char C_TLS li248[] C_aligned={C_lihdr(0,0,44),40,97,49,53,54,57,48,32,115,117,99,99,101,115,115,50,49,55,57,32,114,101,115,117,108,116,115,50,49,56,48,32,114,101,109,97,105,110,115,50,49,56,49,41,0,0,0,0};
static C_char C_TLS li249[] C_aligned={C_lihdr(0,0,17),40,97,49,53,54,55,55,32,101,114,114,102,50,49,55,55,41,0};
static C_char C_TLS li250[] C_aligned={C_lihdr(0,0,47),40,115,97,108,32,115,116,114,105,110,103,50,56,57,53,32,114,117,108,101,50,56,57,54,32,116,111,107,101,110,115,50,56,57,55,32,116,114,97,99,101,63,50,56,57,56,41,0,0,0,0,0,0,0};
static C_char C_TLS li251[] C_aligned={C_lihdr(0,0,17),40,100,111,50,57,51,54,32,116,97,105,108,50,57,51,56,41,0};
static C_char C_TLS li252[] C_aligned={C_lihdr(0,0,19),40,112,114,105,110,116,101,114,32,116,104,105,110,103,50,57,51,53,41,0,0,0};
static C_char C_TLS li253[] C_aligned={C_lihdr(0,0,17),40,100,111,50,57,52,52,32,116,97,105,108,50,57,52,54,41,0};
static C_char C_TLS li254[] C_aligned={C_lihdr(0,0,22),40,115,97,108,58,112,114,105,110,116,32,46,32,97,114,103,115,50,57,51,51,41,0,0,0,0,0,0};
static C_char C_TLS li255[] C_aligned={C_lihdr(0,0,20),40,115,97,108,58,99,104,100,105,114,32,112,97,116,104,50,57,53,49,41,0,0,0,0};
static C_char C_TLS li256[] C_aligned={C_lihdr(0,0,19),40,115,97,108,58,108,111,97,100,32,102,105,108,101,50,57,53,51,41,0,0,0};
static C_char C_TLS li257[] C_aligned={C_lihdr(0,0,21),40,115,97,108,58,111,112,101,110,32,46,32,97,114,103,115,50,57,53,55,41,0,0,0,0,0};
static C_char C_TLS li258[] C_aligned={C_lihdr(0,0,23),40,115,97,108,58,111,117,116,112,117,116,32,46,32,97,114,103,115,50,57,53,56,41,0,0,0,0,0,0,0};
static C_char C_TLS li259[] C_aligned={C_lihdr(0,0,32),40,108,111,111,112,45,111,112,101,114,97,116,111,114,45,115,101,116,33,32,99,51,48,56,56,32,120,51,48,56,57,41};
static C_char C_TLS li260[] C_aligned={C_lihdr(0,0,21),40,108,111,111,112,45,98,105,110,100,105,110,103,115,32,99,51,48,57,48,41,0,0,0,0,0};
static C_char C_TLS li261[] C_aligned={C_lihdr(0,0,23),40,108,111,111,112,45,99,111,108,108,101,99,116,111,114,115,32,99,51,48,57,51,41,0,0,0,0,0,0,0};
static C_char C_TLS li262[] C_aligned={C_lihdr(0,0,22),40,108,111,111,112,45,105,110,105,116,105,97,108,108,121,32,99,51,48,57,54,41,0,0,0,0,0,0};
static C_char C_TLS li263[] C_aligned={C_lihdr(0,0,22),40,108,111,111,112,45,101,110,100,45,116,101,115,116,115,32,99,51,48,57,57,41,0,0,0,0,0,0};
static C_char C_TLS li264[] C_aligned={C_lihdr(0,0,20),40,108,111,111,112,45,108,111,111,112,105,110,103,32,99,51,49,48,50,41,0,0,0,0};
static C_char C_TLS li265[] C_aligned={C_lihdr(0,0,31),40,108,111,111,112,45,108,111,111,112,105,110,103,45,115,101,116,33,32,99,51,49,48,51,32,120,51,49,48,52,41,0,0,0,0,0,0,0};
static C_char C_TLS li266[] C_aligned={C_lihdr(0,0,21),40,108,111,111,112,45,115,116,101,112,112,105,110,103,32,99,51,49,48,53,41,0,0,0,0,0};
static C_char C_TLS li267[] C_aligned={C_lihdr(0,0,20),40,108,111,111,112,45,102,105,110,97,108,108,121,32,99,51,49,48,56,41,0,0,0,0};
static C_char C_TLS li268[] C_aligned={C_lihdr(0,0,22),40,108,111,111,112,45,114,101,116,117,114,110,105,110,103,32,99,51,49,49,49,41,0,0,0,0,0,0};
static C_char C_TLS li269[] C_aligned={C_lihdr(0,0,14),40,100,111,51,49,49,54,32,97,51,49,49,56,41,0,0,0,0,0,0};
static C_char C_TLS li270[] C_aligned={C_lihdr(0,0,27),40,109,97,107,101,45,108,111,111,112,45,99,108,97,117,115,101,32,97,114,103,115,51,49,49,52,41,0,0,0};
static C_char C_TLS li271[] C_aligned={C_lihdr(0,0,14),40,100,111,51,49,50,56,32,108,51,49,51,48,41,0,0,0,0,0,0};
static C_char C_TLS li272[] C_aligned={C_lihdr(0,0,40),40,103,97,116,104,101,114,45,99,108,97,117,115,101,32,99,108,97,117,115,101,115,51,49,50,54,32,97,99,99,101,115,115,111,114,51,49,50,55,41};
static C_char C_TLS li273[] C_aligned={C_lihdr(0,0,39),40,103,97,116,104,101,114,45,99,108,97,117,115,101,115,32,99,97,108,108,101,114,51,49,50,51,32,99,108,97,117,115,101,115,51,49,50,52,41,0,0,0,0,0,0,0};
static C_char C_TLS li274[] C_aligned={C_lihdr(0,0,24),40,108,111,111,112,45,111,112,63,32,120,51,49,51,52,32,111,112,115,51,49,51,53,41};
static C_char C_TLS li275[] C_aligned={C_lihdr(0,0,22),40,108,111,111,112,45,118,97,114,105,97,98,108,101,63,32,120,51,49,51,54,41,0,0,0,0,0,0};
static C_char C_TLS li276[] C_aligned={C_lihdr(0,0,30),40,109,97,107,101,45,98,105,110,100,105,110,103,32,118,97,114,51,49,51,55,32,118,97,108,51,49,51,56,41,0,0,0,0,0,0};
static C_char C_TLS li277[] C_aligned={C_lihdr(0,0,17),40,100,111,51,49,54,48,32,116,97,105,108,51,49,54,50,41,0};
static C_char C_TLS li278[] C_aligned={C_lihdr(0,0,17),40,100,111,51,49,53,53,32,116,97,105,108,51,49,53,55,41,0};
static C_char C_TLS li279[] C_aligned={C_lihdr(0,0,20),40,100,111,51,49,52,53,32,104,51,49,52,55,32,108,51,49,52,56,41,0,0,0,0};
static C_char C_TLS li280[] C_aligned={C_lihdr(0,0,39),40,108,111,111,112,45,101,114,114,111,114,32,111,112,115,51,49,51,57,32,102,111,114,109,115,51,49,52,48,32,97,114,103,115,51,49,52,49,41,0,0,0,0,0,0,0};
static C_char C_TLS li281[] C_aligned={C_lihdr(0,0,41),40,112,97,114,115,101,45,102,111,114,32,102,111,114,109,115,51,49,55,52,32,99,108,97,117,115,101,115,51,49,55,53,32,111,112,115,51,49,55,54,41,0};
static C_char C_TLS li282[] C_aligned={C_lihdr(0,0,17),40,100,111,51,49,57,52,32,110,101,120,116,51,49,57,54,41,0};
static C_char C_TLS li283[] C_aligned={C_lihdr(0,0,51),40,112,97,114,115,101,45,110,117,109,101,114,105,99,97,108,45,102,111,114,32,102,111,114,109,115,51,49,56,48,32,99,108,97,117,115,101,115,51,49,56,49,32,111,112,115,51,49,56,50,41,0,0,0};
static C_char C_TLS li284[] C_aligned={C_lihdr(0,0,8),40,97,49,57,50,57,55,41};
static C_char C_TLS li285[] C_aligned={C_lihdr(0,0,30),40,97,49,57,51,49,53,32,99,108,97,117,115,101,51,50,55,53,32,105,103,110,111,114,101,51,50,55,54,41,0,0,0,0,0,0};
static C_char C_TLS li286[] C_aligned={C_lihdr(0,0,44),40,112,97,114,115,101,45,114,101,112,101,97,116,32,102,111,114,109,115,51,50,55,50,32,99,108,97,117,115,101,115,51,50,55,51,32,111,112,115,51,50,55,52,41,0,0,0,0};
static C_char C_TLS li287[] C_aligned={C_lihdr(0,0,17),40,100,111,51,50,57,51,32,110,101,120,116,51,50,57,53,41,0};
static C_char C_TLS li288[] C_aligned={C_lihdr(0,0,56),40,112,97,114,115,101,45,115,101,113,117,101,110,99,101,45,105,116,101,114,97,116,105,111,110,32,102,111,114,109,115,51,50,55,56,32,99,108,97,117,115,101,115,51,50,55,57,32,111,112,115,51,50,56,48,41};
static C_char C_TLS li289[] C_aligned={C_lihdr(0,0,17),40,100,111,51,51,54,48,32,110,101,120,116,51,51,54,50,41,0};
static C_char C_TLS li290[] C_aligned={C_lihdr(0,0,55),40,112,97,114,115,101,45,103,101,110,101,114,97,108,45,105,116,101,114,97,116,105,111,110,32,102,111,114,109,115,51,51,53,48,32,99,108,97,117,115,101,115,51,51,53,49,32,111,112,115,51,51,53,50,41,0,0,0,0,0,0,0};
static C_char C_TLS li291[] C_aligned={C_lihdr(0,0,26),40,100,111,51,51,57,56,32,110,101,101,100,51,52,48,48,32,110,101,120,116,51,52,48,49,41,0,0};
static C_char C_TLS li292[] C_aligned={C_lihdr(0,0,42),40,112,97,114,115,101,45,119,105,116,104,32,102,111,114,109,115,51,51,56,56,32,99,108,97,117,115,101,115,51,51,56,57,32,111,112,115,51,51,57,48,41,0,0};
static C_char C_TLS li293[] C_aligned={C_lihdr(0,0,8),40,100,111,51,52,52,50,41};
static C_char C_TLS li294[] C_aligned={C_lihdr(0,0,40),40,112,97,114,115,101,45,100,111,32,102,111,114,109,115,51,52,51,51,32,99,108,97,117,115,101,115,51,52,51,52,32,111,112,115,51,52,51,53,41};
static C_char C_TLS li295[] C_aligned={C_lihdr(0,0,45),40,112,97,114,115,101,45,102,105,110,97,108,108,121,32,102,111,114,109,115,51,52,53,50,32,99,108,97,117,115,101,115,51,52,53,51,32,111,112,115,51,52,53,52,41,0,0,0,0,0};
static C_char C_TLS li296[] C_aligned={C_lihdr(0,0,47),40,112,97,114,115,101,45,105,110,105,116,105,97,108,108,121,32,102,111,114,109,115,51,52,54,54,32,99,108,97,117,115,101,115,51,52,54,55,32,111,112,115,51,52,54,56,41,0,0,0,0,0,0,0};
static C_char C_TLS li297[] C_aligned={C_lihdr(0,0,50),40,109,97,107,101,45,99,111,108,108,101,99,116,111,114,32,118,97,114,51,53,51,51,32,116,121,112,101,51,53,51,52,32,97,99,99,51,53,51,53,32,104,101,97,100,51,53,51,54,41,0,0};
static C_char C_TLS li298[] C_aligned={C_lihdr(0,0,24),40,99,111,108,108,101,99,116,111,114,45,116,121,112,101,32,99,111,108,51,53,51,55,41};
static C_char C_TLS li299[] C_aligned={C_lihdr(0,0,23),40,99,111,108,108,101,99,116,111,114,45,97,99,99,32,99,111,108,51,53,51,56,41,0,0,0,0,0,0,0};
static C_char C_TLS li300[] C_aligned={C_lihdr(0,0,14),40,100,111,51,52,56,53,32,97,51,52,56,55,41,0,0,0,0,0,0};
static C_char C_TLS li301[] C_aligned={C_lihdr(0,0,14),40,100,111,51,52,57,51,32,99,51,52,57,53,41,0,0,0,0,0,0};
static C_char C_TLS li302[] C_aligned={C_lihdr(0,0,50),40,112,97,114,115,101,45,97,99,99,117,109,117,108,97,116,105,111,110,32,102,111,114,109,115,51,53,49,50,32,99,108,97,117,115,101,115,51,53,49,51,32,111,112,115,51,53,49,52,41,0,0};
static C_char C_TLS li303[] C_aligned={C_lihdr(0,0,22),40,108,111,111,112,45,114,101,116,117,114,110,32,101,120,112,114,51,54,49,51,41,0,0,0,0,0,0};
static C_char C_TLS li304[] C_aligned={C_lihdr(0,0,49),40,112,97,114,115,101,45,119,104,105,108,101,45,117,110,116,105,108,32,102,111,114,109,115,51,54,49,52,32,99,108,97,117,115,101,115,51,54,49,53,32,111,112,115,51,54,49,54,41,0};
static C_char C_TLS li305[] C_aligned={C_lihdr(0,0,45),40,112,97,114,115,101,45,116,104,101,114,101,105,115,32,102,111,114,109,115,51,54,51,53,32,99,108,97,117,115,101,115,51,54,51,54,32,111,112,115,51,54,51,55,41,0,0,0,0,0};
static C_char C_TLS li306[] C_aligned={C_lihdr(0,0,44),40,112,97,114,115,101,45,114,101,116,117,114,110,32,102,111,114,109,115,51,54,53,49,32,99,108,97,117,115,101,115,51,54,53,50,32,111,112,115,51,54,53,51,41,0,0,0,0};
static C_char C_TLS li307[] C_aligned={C_lihdr(0,0,8),40,97,50,49,49,56,56,41};
static C_char C_TLS li308[] C_aligned={C_lihdr(0,0,20),40,97,50,49,50,48,49,32,97,51,54,55,56,32,98,51,54,55,57,41,0,0,0,0};
static C_char C_TLS li309[] C_aligned={C_lihdr(0,0,38),40,100,111,51,54,55,49,32,111,112,51,54,55,51,32,99,108,97,117,115,101,51,54,55,52,32,114,101,109,97,105,110,115,51,54,55,53,41,0,0,0,0,0,0};
static C_char C_TLS li310[] C_aligned={C_lihdr(0,0,58),40,112,97,114,115,101,45,116,104,101,110,45,101,108,115,101,45,100,101,112,101,110,100,101,110,116,115,32,102,111,114,109,115,51,54,54,53,32,99,108,97,117,115,101,115,51,54,54,54,32,111,112,115,51,54,54,55,41,0,0};
static C_char C_TLS li311[] C_aligned={C_lihdr(0,0,8),40,97,50,49,51,53,50,41};
static C_char C_TLS li312[] C_aligned={C_lihdr(0,0,20),40,97,50,49,51,54,54,32,97,51,55,48,55,32,98,51,55,48,56,41,0,0,0,0};
static C_char C_TLS li313[] C_aligned={C_lihdr(0,0,8),40,97,50,49,52,51,48,41};
static C_char C_TLS li314[] C_aligned={C_lihdr(0,0,20),40,97,50,49,52,51,54,32,97,51,55,48,52,32,98,51,55,48,53,41,0,0,0,0};
static C_char C_TLS li315[] C_aligned={C_lihdr(0,0,49),40,112,97,114,115,101,45,99,111,110,100,105,116,105,111,110,97,108,32,102,111,114,109,115,51,54,57,49,32,99,108,97,117,115,101,115,51,54,57,50,32,111,112,115,51,54,57,51,41,0};
static C_char C_TLS li316[] C_aligned={C_lihdr(0,0,26),40,111,112,45,116,121,112,101,63,32,111,112,51,55,51,52,32,116,121,112,101,51,55,51,53,41,0,0};
static C_char C_TLS li317[] C_aligned={C_lihdr(0,0,8),40,97,50,49,53,55,56,41};
static C_char C_TLS li318[] C_aligned={C_lihdr(0,0,20),40,97,50,49,53,56,55,32,97,51,55,52,55,32,98,51,55,52,56,41,0,0,0,0};
static C_char C_TLS li319[] C_aligned={C_lihdr(0,0,47),40,100,111,51,55,51,56,32,111,112,51,55,52,48,32,99,108,97,117,115,101,51,55,52,49,32,114,101,109,97,105,110,115,51,55,52,50,32,98,111,100,121,51,55,52,51,41,0,0,0,0,0,0,0};
static C_char C_TLS li320[] C_aligned={C_lihdr(0,0,46),40,112,97,114,115,101,45,105,116,101,114,97,116,105,111,110,32,99,97,108,108,101,114,51,55,54,48,32,102,111,114,109,115,51,55,54,49,32,111,112,115,51,55,54,50,41,0,0,0,0,0,0};
static C_char C_TLS li321[] C_aligned={C_lihdr(0,0,59),40,102,95,50,49,57,57,51,32,97,51,57,51,57,51,57,52,50,32,97,51,57,51,56,51,57,52,51,32,97,51,57,51,55,51,57,52,52,32,97,51,57,51,54,51,57,52,53,32,97,51,57,51,53,51,57,52,54,41,0,0,0};
static C_char C_TLS li322[] C_aligned={C_lihdr(0,0,23),40,109,109,58,109,97,107,101,45,111,110,32,46,32,97,114,103,115,51,56,51,48,41,0,0,0,0,0,0,0};
static C_char C_TLS li323[] C_aligned={C_lihdr(0,0,29),40,102,95,50,50,55,48,55,32,97,51,57,53,53,51,57,53,57,32,97,51,57,53,52,51,57,54,48,41,0,0,0,0,0};
static C_char C_TLS li324[] C_aligned={C_lihdr(0,0,14),40,109,109,58,111,110,63,32,109,51,57,53,51,41,0,0,0,0,0,0};
static C_char C_TLS li325[] C_aligned={C_lihdr(0,0,59),40,102,95,50,50,55,51,56,32,97,52,48,51,52,52,48,51,55,32,97,52,48,51,51,52,48,51,56,32,97,52,48,51,50,52,48,51,57,32,97,52,48,51,49,52,48,52,48,32,97,52,48,51,48,52,48,52,49,41,0,0,0};
static C_char C_TLS li326[] C_aligned={C_lihdr(0,0,24),40,109,109,58,109,97,107,101,45,111,102,102,32,46,32,97,114,103,115,51,57,54,50,41};
static C_char C_TLS li327[] C_aligned={C_lihdr(0,0,29),40,102,95,50,51,49,55,55,32,97,52,48,52,57,52,48,53,51,32,97,52,48,52,56,52,48,53,52,41,0,0,0,0,0};
static C_char C_TLS li328[] C_aligned={C_lihdr(0,0,15),40,109,109,58,111,102,102,63,32,109,52,48,52,55,41,0,0,0,0,0,0,0};
static C_char C_TLS li329[] C_aligned={C_lihdr(0,0,59),40,102,95,50,51,50,49,49,32,97,52,49,54,53,52,49,54,56,32,97,52,49,54,52,52,49,54,57,32,97,52,49,54,51,52,49,55,48,32,97,52,49,54,50,52,49,55,49,32,97,52,49,54,49,52,49,55,50,41,0,0,0};
static C_char C_TLS li330[] C_aligned={C_lihdr(0,0,26),40,109,109,58,109,97,107,101,45,116,111,117,99,104,32,46,32,97,114,103,115,52,48,53,54,41,0,0};
static C_char C_TLS li331[] C_aligned={C_lihdr(0,0,29),40,102,95,50,51,57,50,53,32,97,52,49,56,49,52,49,56,53,32,97,52,49,56,48,52,49,56,54,41,0,0,0,0,0};
static C_char C_TLS li332[] C_aligned={C_lihdr(0,0,17),40,109,109,58,116,111,117,99,104,63,32,109,52,49,55,57,41,0};
static C_char C_TLS li333[] C_aligned={C_lihdr(0,0,59),40,102,95,50,51,57,53,57,32,97,52,50,57,55,52,51,48,48,32,97,52,50,57,54,52,51,48,49,32,97,52,50,57,53,52,51,48,50,32,97,52,50,57,52,52,51,48,51,32,97,52,50,57,51,52,51,48,52,41,0,0,0};
static C_char C_TLS li334[] C_aligned={C_lihdr(0,0,25),40,109,109,58,109,97,107,101,45,99,116,114,108,32,46,32,97,114,103,115,52,49,56,56,41,0};
static C_char C_TLS li335[] C_aligned={C_lihdr(0,0,29),40,102,95,50,52,54,55,51,32,97,52,51,49,51,52,51,49,55,32,97,52,51,49,50,52,51,49,56,41,0,0,0,0,0};
static C_char C_TLS li336[] C_aligned={C_lihdr(0,0,16),40,109,109,58,99,116,114,108,63,32,109,52,51,49,49,41};
static C_char C_TLS li337[] C_aligned={C_lihdr(0,0,59),40,102,95,50,52,55,48,52,32,97,52,51,57,50,52,51,57,53,32,97,52,51,57,49,52,51,57,54,32,97,52,51,57,48,52,51,57,55,32,97,52,51,56,57,52,51,57,56,32,97,52,51,56,56,52,51,57,57,41,0,0,0};
static C_char C_TLS li338[] C_aligned={C_lihdr(0,0,25),40,109,109,58,109,97,107,101,45,112,114,111,103,32,46,32,97,114,103,115,52,51,50,48,41,0};
static C_char C_TLS li339[] C_aligned={C_lihdr(0,0,29),40,102,95,50,53,49,52,51,32,97,52,52,48,55,52,52,49,49,32,97,52,52,48,54,52,52,49,50,41,0,0,0,0,0};
static C_char C_TLS li340[] C_aligned={C_lihdr(0,0,16),40,109,109,58,112,114,111,103,63,32,109,52,52,48,53,41};
static C_char C_TLS li341[] C_aligned={C_lihdr(0,0,59),40,102,95,50,53,49,55,52,32,97,52,52,56,54,52,52,56,57,32,97,52,52,56,53,52,52,57,48,32,97,52,52,56,52,52,52,57,49,32,97,52,52,56,51,52,52,57,50,32,97,52,52,56,50,52,52,57,51,41,0,0,0};
static C_char C_TLS li342[] C_aligned={C_lihdr(0,0,26),40,109,109,58,109,97,107,101,45,112,114,101,115,115,32,46,32,97,114,103,115,52,52,49,52,41,0,0};
static C_char C_TLS li343[] C_aligned={C_lihdr(0,0,29),40,102,95,50,53,54,49,51,32,97,52,53,48,49,52,53,48,53,32,97,52,53,48,48,52,53,48,54,41,0,0,0,0,0};
static C_char C_TLS li344[] C_aligned={C_lihdr(0,0,17),40,109,109,58,112,114,101,115,115,63,32,109,52,52,57,57,41,0};
static C_char C_TLS li345[] C_aligned={C_lihdr(0,0,59),40,102,95,50,53,54,52,52,32,97,52,53,56,48,52,53,56,51,32,97,52,53,55,57,52,53,56,52,32,97,52,53,55,56,52,53,56,53,32,97,52,53,55,55,52,53,56,54,32,97,52,53,55,54,52,53,56,55,41,0,0,0};
static C_char C_TLS li346[] C_aligned={C_lihdr(0,0,25),40,109,109,58,109,97,107,101,45,98,101,110,100,32,46,32,97,114,103,115,52,53,48,56,41,0};
static C_char C_TLS li347[] C_aligned={C_lihdr(0,0,19),40,102,95,50,54,49,48,53,32,97,52,54,48,51,52,54,48,55,41,0,0,0};
static C_char C_TLS li348[] C_aligned={C_lihdr(0,0,15),40,109,109,58,102,114,101,101,32,109,52,54,48,50,41,0,0,0,0,0,0,0};
static C_char C_TLS li349[] C_aligned={C_lihdr(0,0,19),40,102,95,50,54,49,50,48,32,97,52,54,49,49,52,54,49,53,41,0,0,0};
static C_char C_TLS li350[] C_aligned={C_lihdr(0,0,15),40,109,109,58,99,111,112,121,32,109,52,54,49,48,41,0,0,0,0,0,0,0};
static C_char C_TLS li351[] C_aligned={C_lihdr(0,0,19),40,102,95,50,54,49,51,53,32,97,52,54,49,57,52,54,50,51,41,0,0,0};
static C_char C_TLS li352[] C_aligned={C_lihdr(0,0,15),40,109,109,58,116,105,109,101,32,109,52,54,49,56,41,0,0,0,0,0,0,0};
static C_char C_TLS li353[] C_aligned={C_lihdr(0,0,29),40,102,95,50,54,49,53,48,32,97,52,54,50,57,52,54,51,51,32,97,52,54,50,56,52,54,51,52,41,0,0,0,0,0};
static C_char C_TLS li354[] C_aligned={C_lihdr(0,0,26),40,109,109,58,116,105,109,101,45,115,101,116,33,32,109,52,54,50,54,32,116,52,54,50,55,41,0,0};
static C_char C_TLS li355[] C_aligned={C_lihdr(0,0,19),40,102,95,50,54,49,54,57,32,97,52,54,51,56,52,54,52,50,41,0,0,0};
static C_char C_TLS li356[] C_aligned={C_lihdr(0,0,15),40,109,109,58,99,104,97,110,32,109,52,54,51,55,41,0,0,0,0,0,0,0};
static C_char C_TLS li357[] C_aligned={C_lihdr(0,0,29),40,102,95,50,54,49,56,52,32,97,52,54,52,55,52,54,53,49,32,97,52,54,52,54,52,54,53,50,41,0,0,0,0,0};
static C_char C_TLS li358[] C_aligned={C_lihdr(0,0,26),40,109,109,58,99,104,97,110,45,115,101,116,33,32,109,52,54,52,52,32,99,52,54,52,53,41,0,0};
static C_char C_TLS li359[] C_aligned={C_lihdr(0,0,29),40,102,95,50,54,50,48,51,32,97,52,54,53,55,52,54,54,49,32,97,52,54,53,54,52,54,54,50,41,0,0,0,0,0};
static C_char C_TLS li360[] C_aligned={C_lihdr(0,0,14),40,109,109,58,107,101,121,32,109,52,54,53,53,41,0,0,0,0,0,0};
static C_char C_TLS li361[] C_aligned={C_lihdr(0,0,39),40,102,95,50,54,50,50,50,32,97,52,54,54,56,52,54,55,50,32,97,52,54,54,55,52,54,55,51,32,97,52,54,54,54,52,54,55,52,41,0,0,0,0,0,0,0};
static C_char C_TLS li362[] C_aligned={C_lihdr(0,0,25),40,109,109,58,107,101,121,45,115,101,116,33,32,109,52,54,54,52,32,107,52,54,54,53,41,0};
static C_char C_TLS li363[] C_aligned={C_lihdr(0,0,29),40,102,95,50,54,50,52,53,32,97,52,54,55,57,52,54,56,51,32,97,52,54,55,56,52,54,56,52,41,0,0,0,0,0};
static C_char C_TLS li364[] C_aligned={C_lihdr(0,0,14),40,109,109,58,118,101,108,32,109,52,54,55,55,41,0,0,0,0,0,0};
static C_char C_TLS li365[] C_aligned={C_lihdr(0,0,39),40,102,95,50,54,50,54,52,32,97,52,54,57,48,52,54,57,52,32,97,52,54,56,57,52,54,57,53,32,97,52,54,56,56,52,54,57,54,41,0,0,0,0,0,0,0};
static C_char C_TLS li366[] C_aligned={C_lihdr(0,0,25),40,109,109,58,118,101,108,45,115,101,116,33,32,109,52,54,56,54,32,118,52,54,56,55,41,0};
static C_char C_TLS li367[] C_aligned={C_lihdr(0,0,29),40,102,95,50,54,50,57,54,32,97,52,55,48,51,52,55,48,55,32,97,52,55,48,50,52,55,48,56,41,0,0,0,0,0};
static C_char C_TLS li368[] C_aligned={C_lihdr(0,0,29),40,102,95,50,54,51,49,50,32,97,52,55,49,49,52,55,49,53,32,97,52,55,49,48,52,55,49,54,41,0,0,0,0,0};
static C_char C_TLS li369[] C_aligned={C_lihdr(0,0,14),40,109,109,58,118,97,108,32,109,52,54,57,57,41,0,0,0,0,0,0};
static C_char C_TLS li370[] C_aligned={C_lihdr(0,0,39),40,102,95,50,54,51,52,51,32,97,52,55,50,52,52,55,50,56,32,97,52,55,50,51,52,55,50,57,32,97,52,55,50,50,52,55,51,48,41,0,0,0,0,0,0,0};
static C_char C_TLS li371[] C_aligned={C_lihdr(0,0,39),40,102,95,50,54,51,54,51,32,97,52,55,51,52,52,55,51,56,32,97,52,55,51,51,52,55,51,57,32,97,52,55,51,50,52,55,52,48,41,0,0,0,0,0,0,0};
static C_char C_TLS li372[] C_aligned={C_lihdr(0,0,25),40,109,109,58,118,97,108,45,115,101,116,33,32,109,52,55,49,56,32,118,52,55,49,57,41,0};
static C_char C_TLS li373[] C_aligned={C_lihdr(0,0,29),40,102,95,50,54,51,56,57,32,97,52,55,52,53,52,55,52,57,32,97,52,55,52,52,52,55,53,48,41,0,0,0,0,0};
static C_char C_TLS li374[] C_aligned={C_lihdr(0,0,14),40,109,109,58,110,117,109,32,109,52,55,52,51,41,0,0,0,0,0,0};
static C_char C_TLS li375[] C_aligned={C_lihdr(0,0,39),40,102,95,50,54,52,48,56,32,97,52,55,53,54,52,55,54,48,32,97,52,55,53,53,52,55,54,49,32,97,52,55,53,52,52,55,54,50,41,0,0,0,0,0,0,0};
static C_char C_TLS li376[] C_aligned={C_lihdr(0,0,25),40,109,109,58,110,117,109,45,115,101,116,33,32,109,52,55,53,50,32,118,52,55,53,51,41,0};
static C_char C_TLS li377[] C_aligned={C_lihdr(0,0,59),40,102,95,50,54,52,51,49,32,97,52,55,55,52,52,55,55,55,32,97,52,55,55,51,52,55,55,56,32,97,52,55,55,50,52,55,55,57,32,97,52,55,55,49,52,55,56,48,32,97,52,55,55,48,52,55,56,49,41,0,0,0};
static C_char C_TLS li378[] C_aligned={C_lihdr(0,0,51),40,109,112,58,110,111,116,101,32,116,105,109,101,52,55,54,53,32,100,117,114,52,55,54,54,32,107,101,121,52,55,54,55,32,97,109,112,52,55,54,56,32,99,104,97,110,52,55,54,57,41,0,0,0};
static C_char C_TLS li379[] C_aligned={C_lihdr(0,0,59),40,102,95,50,54,52,53,57,32,97,52,55,57,49,52,55,57,52,32,97,52,55,57,48,52,55,57,53,32,97,52,55,56,57,52,55,57,54,32,97,52,55,56,56,52,55,57,55,32,97,52,55,56,55,52,55,57,56,41,0,0,0};
static C_char C_TLS li380[] C_aligned={C_lihdr(0,0,51),40,109,112,58,109,105,100,105,32,116,105,109,101,52,55,56,50,32,100,117,114,52,55,56,51,32,107,101,121,52,55,56,52,32,97,109,112,52,55,56,53,32,99,104,97,110,52,55,56,54,41,0,0,0};
static C_char C_TLS li381[] C_aligned={C_lihdr(0,0,59),40,102,95,50,54,52,56,55,32,97,52,56,48,54,52,56,48,57,32,97,52,56,48,53,52,56,49,48,32,97,52,56,48,52,52,56,49,49,32,97,52,56,48,51,52,56,49,50,32,97,52,56,48,50,52,56,49,51,41,0,0,0};
static C_char C_TLS li382[] C_aligned={C_lihdr(0,0,34),40,109,112,58,111,102,102,32,116,105,109,101,52,55,57,57,32,107,101,121,52,56,48,48,32,99,104,97,110,52,56,48,49,41,0,0};
static C_char C_TLS li383[] C_aligned={C_lihdr(0,0,59),40,102,95,50,54,53,49,53,32,97,52,56,50,50,52,56,50,53,32,97,52,56,50,49,52,56,50,54,32,97,52,56,50,48,52,56,50,55,32,97,52,56,49,57,52,56,50,56,32,97,52,56,49,56,52,56,50,57,41,0,0,0};
static C_char C_TLS li384[] C_aligned={C_lihdr(0,0,41),40,109,112,58,111,110,32,116,105,109,101,52,56,49,52,32,107,101,121,52,56,49,53,32,118,101,108,52,56,49,54,32,99,104,97,110,52,56,49,55,41,0};
static C_char C_TLS li385[] C_aligned={C_lihdr(0,0,59),40,102,95,50,54,53,52,51,32,97,52,56,51,56,52,56,52,49,32,97,52,56,51,55,52,56,52,50,32,97,52,56,51,54,52,56,52,51,32,97,52,56,51,53,52,56,52,52,32,97,52,56,51,52,52,56,52,53,41,0,0,0};
static C_char C_TLS li386[] C_aligned={C_lihdr(0,0,44),40,109,112,58,116,111,117,99,104,32,116,105,109,101,52,56,51,48,32,107,101,121,52,56,51,49,32,118,97,108,52,56,51,50,32,99,104,97,110,52,56,51,51,41,0,0,0,0};
static C_char C_TLS li387[] C_aligned={C_lihdr(0,0,59),40,102,95,50,54,53,55,49,32,97,52,56,53,52,52,56,53,55,32,97,52,56,53,51,52,56,53,56,32,97,52,56,53,50,52,56,53,57,32,97,52,56,53,49,52,56,54,48,32,97,52,56,53,48,52,56,54,49,41,0,0,0};
static C_char C_TLS li388[] C_aligned={C_lihdr(0,0,43),40,109,112,58,99,116,114,108,32,116,105,109,101,52,56,52,54,32,110,117,109,52,56,52,55,32,118,97,108,52,56,52,56,32,99,104,97,110,52,56,52,57,41,0,0,0};
static C_char C_TLS li389[] C_aligned={C_lihdr(0,0,59),40,102,95,50,54,53,57,57,32,97,52,56,54,57,52,56,55,50,32,97,52,56,54,56,52,56,55,51,32,97,52,56,54,55,52,56,55,52,32,97,52,56,54,54,52,56,55,53,32,97,52,56,54,53,52,56,55,54,41,0,0,0};
static C_char C_TLS li390[] C_aligned={C_lihdr(0,0,35),40,109,112,58,112,114,111,103,32,116,105,109,101,52,56,54,50,32,118,97,108,52,56,54,51,32,99,104,97,110,52,56,54,52,41,0,0,0};
static C_char C_TLS li391[] C_aligned={C_lihdr(0,0,59),40,102,95,50,54,54,50,55,32,97,52,56,56,52,52,56,56,55,32,97,52,56,56,51,52,56,56,56,32,97,52,56,56,50,52,56,56,57,32,97,52,56,56,49,52,56,57,48,32,97,52,56,56,48,52,56,57,49,41,0,0,0};
static C_char C_TLS li392[] C_aligned={C_lihdr(0,0,36),40,109,112,58,112,114,101,115,115,32,116,105,109,101,52,56,55,55,32,118,97,108,52,56,55,56,32,99,104,97,110,52,56,55,57,41,0,0,0,0};
static C_char C_TLS li393[] C_aligned={C_lihdr(0,0,59),40,102,95,50,54,54,53,53,32,97,52,56,57,57,52,57,48,50,32,97,52,56,57,56,52,57,48,51,32,97,52,56,57,55,52,57,48,52,32,97,52,56,57,54,52,57,48,53,32,97,52,56,57,53,52,57,48,54,41,0,0,0};
static C_char C_TLS li394[] C_aligned={C_lihdr(0,0,35),40,109,112,58,98,101,110,100,32,116,105,109,101,52,56,57,50,32,118,97,108,52,56,57,51,32,99,104,97,110,52,56,57,52,41,0,0,0};
static C_char C_TLS li395[] C_aligned={C_lihdr(0,0,19),40,102,95,50,54,54,56,51,32,97,52,57,48,56,52,57,49,50,41,0,0,0};
static C_char C_TLS li396[] C_aligned={C_lihdr(0,0,15),40,109,112,58,109,109,32,112,116,114,52,57,48,55,41,0,0,0,0,0,0,0};
static C_char C_TLS li397[] C_aligned={C_lihdr(0,0,17),40,97,50,54,55,49,54,32,37,101,114,114,52,57,50,49,41,0};
static C_char C_TLS li398[] C_aligned={C_lihdr(0,0,8),40,97,50,54,55,51,54,41};
static C_char C_TLS li399[] C_aligned={C_lihdr(0,0,18),40,97,50,54,55,49,48,32,37,99,111,110,116,52,57,50,48,41,0,0};
static C_char C_TLS li400[] C_aligned={C_lihdr(0,0,17),40,97,50,54,55,48,52,32,37,109,115,103,52,57,49,57,41,0};
static C_char C_TLS li401[] C_aligned={C_lihdr(0,0,19),40,102,95,50,54,55,52,50,32,97,52,57,49,53,52,57,49,56,41,0,0,0};
static C_char C_TLS li402[] C_aligned={C_lihdr(0,0,19),40,102,95,50,54,55,52,55,32,97,52,57,50,52,52,57,50,55,41,0,0,0};
static C_char C_TLS li403[] C_aligned={C_lihdr(0,0,21),40,109,112,58,105,110,104,111,111,107,32,37,104,111,111,107,52,57,49,52,41,0,0,0,0,0};
static C_char C_TLS li404[] C_aligned={C_lihdr(0,0,39),40,102,95,50,54,56,48,52,32,97,52,57,56,48,52,57,56,51,32,97,52,57,55,57,52,57,56,52,32,97,52,57,55,56,52,57,56,53,41,0,0,0,0,0,0,0};
static C_char C_TLS li405[] C_aligned={C_lihdr(0,0,17),40,99,115,58,105,32,46,32,97,114,103,115,52,57,55,55,41,0};
static C_char C_TLS li406[] C_aligned={C_lihdr(0,0,39),40,102,95,50,54,56,54,49,32,97,52,57,57,49,52,57,57,52,32,97,52,57,57,48,52,57,57,53,32,97,52,57,56,57,52,57,57,54,41,0,0,0,0,0,0,0};
static C_char C_TLS li407[] C_aligned={C_lihdr(0,0,17),40,99,115,58,102,32,46,32,97,114,103,115,52,57,56,56,41,0};
static C_char C_TLS li408[] C_aligned={C_lihdr(0,0,9),40,102,95,50,54,57,48,50,41,0};
static C_char C_TLS li409[] C_aligned={C_lihdr(0,0,10),40,99,115,58,99,108,101,97,114,41,0,0};
static C_char C_TLS li410[] C_aligned={C_lihdr(0,0,14),40,100,111,53,48,50,49,32,120,53,48,50,51,41,0,0,0,0,0,0};
static C_char C_TLS li411[] C_aligned={C_lihdr(0,0,26),40,100,111,53,48,48,55,32,101,53,48,49,56,32,118,53,48,49,57,32,121,53,48,50,48,41,0,0};
static C_char C_TLS li412[] C_aligned={C_lihdr(0,0,18),40,99,109,45,108,111,103,111,32,118,101,114,115,53,48,48,54,41,0,0};
static C_char C_TLS li413[] C_aligned={C_lihdr(0,0,25),40,112,114,105,110,116,45,109,101,115,115,97,103,101,32,97,53,48,51,49,53,48,51,53,41,0};
static C_char C_TLS li414[] C_aligned={C_lihdr(0,0,23),40,112,114,105,110,116,45,101,114,114,111,114,32,97,53,48,51,55,53,48,52,49,41,0,0,0,0,0,0,0};
static C_char C_TLS li415[] C_aligned={C_lihdr(0,0,27),40,99,117,114,114,101,110,116,45,116,105,109,101,45,109,105,108,108,105,115,101,99,111,110,100,115,41,0,0,0};
static C_char C_TLS li416[] C_aligned={C_lihdr(0,0,22),40,99,117,114,114,101,110,116,45,116,105,109,101,45,115,101,99,111,110,100,115,41,0,0,0,0,0,0};
static C_char C_TLS li417[] C_aligned={C_lihdr(0,0,3),46,0,0,0,0,0};
static C_char C_TLS li418[] C_aligned={C_lihdr(0,0,43),40,115,99,104,101,100,117,108,101,114,45,115,101,116,45,116,105,109,101,45,109,105,108,108,105,115,101,99,111,110,100,115,32,97,53,48,53,51,53,48,53,54,41,0,0,0};
static C_char C_TLS li419[] C_aligned={C_lihdr(0,0,3),46,0,0,0,0,0};
static C_char C_TLS li420[] C_aligned={C_lihdr(0,0,48),40,115,99,104,101,100,117,108,101,114,45,115,112,114,111,117,116,32,97,53,48,54,49,53,48,54,52,32,97,53,48,54,48,53,48,54,53,32,97,53,48,53,57,53,48,54,54,41};
static C_char C_TLS li421[] C_aligned={C_lihdr(0,0,3),46,0,0,0,0,0};
static C_char C_TLS li422[] C_aligned={C_lihdr(0,0,26),40,115,99,104,101,100,117,108,101,114,45,115,116,111,112,32,97,53,48,56,49,53,48,56,52,41,0,0};
static C_char C_TLS li423[] C_aligned={C_lihdr(0,0,19),40,102,95,50,55,50,49,56,32,97,53,48,57,50,53,48,57,54,41,0,0,0};
static C_char C_TLS li424[] C_aligned={C_lihdr(0,0,24),40,108,111,97,100,45,115,97,108,45,102,105,108,101,32,102,105,108,101,53,48,57,49,41};
static C_char C_TLS li425[] C_aligned={C_lihdr(0,0,11),40,110,101,120,116,115,116,97,114,116,41,0,0,0};
static C_char C_TLS li426[] C_aligned={C_lihdr(0,0,8),40,110,101,120,116,105,100,41};
static C_char C_TLS li427[] C_aligned={C_lihdr(0,0,14),40,100,111,53,49,49,54,32,112,53,49,49,56,41,0,0,0,0,0,0};
static C_char C_TLS li428[] C_aligned={C_lihdr(0,0,27),40,98,111,100,121,53,49,48,50,32,115,116,97,114,116,53,49,48,56,32,105,100,53,49,48,57,41,0,0,0};
static C_char C_TLS li429[] C_aligned={C_lihdr(0,0,27),40,100,101,102,45,105,100,53,49,48,53,32,37,115,116,97,114,116,53,49,48,48,53,49,50,52,41,0,0,0};
static C_char C_TLS li430[] C_aligned={C_lihdr(0,0,15),40,100,101,102,45,115,116,97,114,116,53,49,48,52,41,0,0,0,0,0,0,0};
static C_char C_TLS li431[] C_aligned={C_lihdr(0,0,28),40,115,112,114,111,117,116,32,112,114,111,99,53,48,57,56,32,46,32,97,114,103,115,53,48,57,57,41,0,0,0,0};
static C_char C_TLS li432[] C_aligned={C_lihdr(0,0,3),46,0,0,0,0,0};
static C_char C_TLS li433[] C_aligned={C_lihdr(0,0,23),40,116,105,109,101,45,102,111,114,109,97,116,32,46,32,97,114,103,53,49,51,48,41,0,0,0,0,0,0,0};
static C_char C_TLS li434[] C_aligned={C_lihdr(0,0,3),46,0,0,0,0,0};
static C_char C_TLS li435[] C_aligned={C_lihdr(0,0,7),40,112,97,117,115,101,41,0,0,0,0,0,0,0};
static C_char C_TLS li436[] C_aligned={C_lihdr(0,0,3),46,0,0,0,0,0};
static C_char C_TLS li437[] C_aligned={C_lihdr(0,0,9),40,112,97,117,115,101,100,63,41,0};
static C_char C_TLS li438[] C_aligned={C_lihdr(0,0,3),46,0,0,0,0,0};
static C_char C_TLS li439[] C_aligned={C_lihdr(0,0,6),40,99,111,110,116,41,0,0,0,0,0,0};
static C_char C_TLS li440[] C_aligned={C_lihdr(0,0,17),40,100,111,53,49,52,52,32,116,97,105,108,53,49,52,54,41,0};
static C_char C_TLS li441[] C_aligned={C_lihdr(0,0,19),40,115,116,111,112,32,46,32,112,114,111,99,105,100,53,49,52,51,41,0,0,0};
static C_char C_TLS li442[] C_aligned={C_lihdr(0,0,3),46,0,0,0,0,0};
static C_char C_TLS li443[] C_aligned={C_lihdr(0,0,6),40,104,117,115,104,41,0,0,0,0,0,0};
static C_char C_TLS li444[] C_aligned={C_lihdr(0,0,17),40,100,111,53,49,55,54,32,100,101,99,108,53,49,55,56,41,0};
static C_char C_TLS li445[] C_aligned={C_lihdr(0,0,17),40,100,111,53,49,54,48,32,116,97,105,108,53,49,54,50,41,0};
static C_char C_TLS li446[] C_aligned={C_lihdr(0,0,46),40,97,50,56,48,49,53,32,98,105,110,100,105,110,103,115,53,49,53,49,32,116,101,114,109,105,110,97,116,101,53,49,53,50,32,46,32,98,111,100,121,53,49,53,51,41,0,0,0,0,0,0};
static C_char C_TLS li447[] C_aligned={C_lihdr(0,0,17),40,97,50,56,48,50,49,32,97,114,103,115,51,55,55,51,41,0};
static C_char C_TLS li448[] C_aligned={C_lihdr(0,0,16),40,97,50,56,49,54,51,32,115,121,109,51,48,56,54,41};
static C_char C_TLS li449[] C_aligned={C_lihdr(0,0,16),40,97,50,56,49,54,54,32,115,121,109,51,48,56,52,41};
static C_char C_TLS li450[] C_aligned={C_lihdr(0,0,24),40,97,50,56,49,57,53,32,118,97,108,51,48,56,50,32,115,121,109,51,48,56,51,41};
static C_char C_TLS li451[] C_aligned={C_lihdr(0,0,17),40,97,50,56,50,48,57,32,97,114,103,115,51,48,56,49,41,0};
static C_char C_TLS li452[] C_aligned={C_lihdr(0,0,26),40,97,50,56,50,50,51,32,97,114,103,115,50,56,57,48,32,101,114,114,102,50,56,57,49,41,0,0};
static C_char C_TLS li453[] C_aligned={C_lihdr(0,0,35),40,97,50,56,50,51,55,32,117,110,105,116,50,56,57,50,32,105,110,102,111,50,56,57,51,32,101,114,114,102,50,56,57,52,41,0,0,0};
static C_char C_TLS li454[] C_aligned={C_lihdr(0,0,26),40,97,50,56,51,52,51,32,97,114,103,115,50,56,51,57,32,101,114,114,102,50,56,52,48,41,0,0};
static C_char C_TLS li455[] C_aligned={C_lihdr(0,0,17),40,100,111,50,56,53,49,32,114,101,115,116,50,56,53,51,41,0};
static C_char C_TLS li456[] C_aligned={C_lihdr(0,0,26),40,100,111,50,56,55,55,32,97,114,103,115,50,56,55,57,32,116,97,105,108,50,56,56,48,41,0,0};
static C_char C_TLS li457[] C_aligned={C_lihdr(0,0,35),40,97,50,56,51,56,50,32,117,110,105,116,50,56,52,52,32,105,110,102,111,50,56,52,53,32,101,114,114,102,50,56,52,54,41,0,0,0};
static C_char C_TLS li458[] C_aligned={C_lihdr(0,0,26),40,97,50,56,56,48,48,32,97,114,103,115,50,56,51,50,32,101,114,114,102,50,56,51,51,41,0,0};
static C_char C_TLS li459[] C_aligned={C_lihdr(0,0,26),40,97,50,56,57,52,53,32,97,114,103,115,50,56,49,56,32,101,114,114,102,50,56,49,57,41,0,0};
static C_char C_TLS li460[] C_aligned={C_lihdr(0,0,17),40,100,111,50,55,57,53,32,116,97,105,108,50,55,57,55,41,0};
static C_char C_TLS li461[] C_aligned={C_lihdr(0,0,17),40,100,111,50,55,57,48,32,116,97,105,108,50,55,57,50,41,0};
static C_char C_TLS li462[] C_aligned={C_lihdr(0,0,20),40,100,111,50,55,55,57,32,99,108,97,117,115,101,115,50,55,56,49,41,0,0,0,0};
static C_char C_TLS li463[] C_aligned={C_lihdr(0,0,17),40,100,111,50,55,55,54,32,116,97,105,108,50,55,55,56,41,0};
static C_char C_TLS li464[] C_aligned={C_lihdr(0,0,35),40,97,50,56,57,57,49,32,117,110,105,116,50,56,50,56,32,105,110,102,111,50,56,50,57,32,101,114,114,102,50,56,51,48,41,0,0,0};
static C_char C_TLS li465[] C_aligned={C_lihdr(0,0,26),40,97,50,57,52,52,53,32,97,114,103,115,50,54,57,50,32,101,114,114,102,50,54,57,51,41,0,0};
static C_char C_TLS li466[] C_aligned={C_lihdr(0,0,35),40,97,50,57,53,49,51,32,117,110,105,116,50,55,48,52,32,105,110,102,111,50,55,48,53,32,101,114,114,102,50,55,48,54,41,0,0,0};
static C_char C_TLS li467[] C_aligned={C_lihdr(0,0,26),40,97,50,57,54,52,50,32,97,114,103,115,50,54,56,48,32,101,114,114,102,50,54,56,49,41,0,0};
static C_char C_TLS li468[] C_aligned={C_lihdr(0,0,35),40,97,50,57,54,54,56,32,117,110,105,116,50,54,56,53,32,105,110,102,111,50,54,56,54,32,101,114,114,102,50,54,56,55,41,0,0,0};
static C_char C_TLS li469[] C_aligned={C_lihdr(0,0,26),40,97,50,57,55,53,54,32,97,114,103,115,50,54,53,56,32,101,114,114,102,50,54,53,57,41,0,0};
static C_char C_TLS li470[] C_aligned={C_lihdr(0,0,17),40,100,111,50,54,54,54,32,105,116,101,114,50,54,54,56,41,0};
static C_char C_TLS li471[] C_aligned={C_lihdr(0,0,35),40,97,50,57,55,57,57,32,117,110,105,116,50,54,54,48,32,105,110,102,111,50,54,54,49,32,101,114,114,102,50,54,54,50,41,0,0,0};
static C_char C_TLS li472[] C_aligned={C_lihdr(0,0,26),40,97,51,48,48,51,54,32,97,114,103,115,50,54,53,53,32,101,114,114,102,50,54,53,54,41,0,0};
static C_char C_TLS li473[] C_aligned={C_lihdr(0,0,26),40,97,51,48,49,50,50,32,97,114,103,115,50,54,52,55,32,101,114,114,102,50,54,52,56,41,0,0};
static C_char C_TLS li474[] C_aligned={C_lihdr(0,0,14),40,97,51,48,49,55,52,32,101,50,54,53,51,41,0,0,0,0,0,0};
static C_char C_TLS li475[] C_aligned={C_lihdr(0,0,35),40,97,51,48,49,54,53,32,117,110,105,116,50,54,52,57,32,105,110,102,111,50,54,53,48,32,101,114,114,102,50,54,53,49,41,0,0,0};
static C_char C_TLS li476[] C_aligned={C_lihdr(0,0,26),40,97,51,48,50,50,52,32,97,114,103,115,50,54,52,48,32,101,114,114,102,50,54,52,49,41,0,0};
static C_char C_TLS li477[] C_aligned={C_lihdr(0,0,14),40,97,51,48,50,54,53,32,101,50,54,52,53,41,0,0,0,0,0,0};
static C_char C_TLS li478[] C_aligned={C_lihdr(0,0,35),40,97,51,48,50,53,57,32,117,110,105,116,50,54,52,50,32,105,110,102,111,50,54,52,51,32,101,114,114,102,50,54,52,52,41,0,0,0};
static C_char C_TLS li479[] C_aligned={C_lihdr(0,0,35),40,97,51,48,51,49,57,32,117,110,105,116,50,54,51,51,32,105,110,102,111,50,54,51,52,32,101,114,114,102,50,54,51,53,41,0,0,0};
static C_char C_TLS li480[] C_aligned={C_lihdr(0,0,35),40,97,51,48,51,56,48,32,117,110,105,116,50,54,50,55,32,105,110,102,111,50,54,50,56,32,101,114,114,102,50,54,50,57,41,0,0,0};
static C_char C_TLS li481[] C_aligned={C_lihdr(0,0,26),40,97,51,48,52,51,52,32,97,114,103,115,50,54,50,49,32,101,114,114,102,50,54,50,50,41,0,0};
static C_char C_TLS li482[] C_aligned={C_lihdr(0,0,35),40,97,51,48,52,54,52,32,117,110,105,116,50,54,50,51,32,105,110,102,111,50,54,50,52,32,101,114,114,102,50,54,50,53,41,0,0,0};
static C_char C_TLS li483[] C_aligned={C_lihdr(0,0,26),40,97,51,48,54,56,51,32,97,114,103,115,50,54,49,52,32,101,114,114,102,50,54,49,53,41,0,0};
static C_char C_TLS li484[] C_aligned={C_lihdr(0,0,26),40,97,51,48,55,48,57,32,97,114,103,115,50,54,48,49,32,101,114,114,102,50,54,48,50,41,0,0};
static C_char C_TLS li485[] C_aligned={C_lihdr(0,0,27),40,97,51,48,55,57,48,32,115,116,114,50,54,49,49,32,46,32,97,114,103,115,50,54,49,50,41,0,0,0};
static C_char C_TLS li486[] C_aligned={C_lihdr(0,0,35),40,97,51,48,55,55,48,32,117,110,105,116,50,54,48,54,32,105,110,102,111,50,54,48,55,32,101,114,114,102,50,54,48,56,41,0,0,0};
static C_char C_TLS li487[] C_aligned={C_lihdr(0,0,26),40,97,51,48,57,48,56,32,97,114,103,115,50,53,57,52,32,101,114,114,102,50,53,57,53,41,0,0};
static C_char C_TLS li488[] C_aligned={C_lihdr(0,0,35),40,97,51,48,57,51,48,32,117,110,105,116,50,53,57,54,32,105,110,102,111,50,53,57,55,32,101,114,114,102,50,53,57,56,41,0,0,0};
static C_char C_TLS li489[] C_aligned={C_lihdr(0,0,26),40,97,51,48,57,56,51,32,97,114,103,115,50,53,56,48,32,101,114,114,102,50,53,56,49,41,0,0};
static C_char C_TLS li490[] C_aligned={C_lihdr(0,0,17),40,100,111,50,53,56,55,32,97,114,103,115,50,53,56,57,41,0};
static C_char C_TLS li491[] C_aligned={C_lihdr(0,0,35),40,97,51,49,48,48,53,32,117,110,105,116,50,53,56,50,32,105,110,102,111,50,53,56,51,32,101,114,114,102,50,53,56,52,41,0,0,0};
static C_char C_TLS li492[] C_aligned={C_lihdr(0,0,26),40,97,51,49,49,51,55,32,97,114,103,115,50,53,55,51,32,101,114,114,102,50,53,55,52,41,0,0};
static C_char C_TLS li493[] C_aligned={C_lihdr(0,0,35),40,97,51,49,49,54,51,32,117,110,105,116,50,53,55,53,32,105,110,102,111,50,53,55,54,32,101,114,114,102,50,53,55,55,41,0,0,0};
static C_char C_TLS li494[] C_aligned={C_lihdr(0,0,26),40,97,51,49,50,55,51,32,97,114,103,115,50,53,54,57,32,101,114,114,102,50,53,55,48,41,0,0};
static C_char C_TLS li495[] C_aligned={C_lihdr(0,0,26),40,97,51,49,52,50,57,32,97,114,103,115,50,53,51,50,32,101,114,114,102,50,53,51,51,41,0,0};
static C_char C_TLS li496[] C_aligned={C_lihdr(0,0,35),40,97,51,49,52,52,55,32,117,110,105,116,50,53,51,52,32,105,110,102,111,50,53,51,53,32,101,114,114,102,50,53,51,54,41,0,0,0};
static C_char C_TLS li497[] C_aligned={C_lihdr(0,0,26),40,97,51,49,53,48,48,32,97,114,103,115,50,53,50,54,32,101,114,114,102,50,53,50,55,41,0,0};
static C_char C_TLS li498[] C_aligned={C_lihdr(0,0,26),40,97,51,49,54,53,50,32,97,114,103,115,50,53,50,51,32,101,114,114,102,50,53,50,52,41,0,0};
static C_char C_TLS li499[] C_aligned={C_lihdr(0,0,26),40,97,51,49,55,57,49,32,97,114,103,115,50,53,50,48,32,101,114,114,102,50,53,50,49,41,0,0};
static C_char C_TLS li500[] C_aligned={C_lihdr(0,0,26),40,97,51,49,57,49,49,32,97,114,103,115,50,52,57,57,32,101,114,114,102,50,53,48,48,41,0,0};
static C_char C_TLS li501[] C_aligned={C_lihdr(0,0,35),40,97,51,49,57,52,50,32,117,110,105,116,50,53,48,50,32,105,110,102,111,50,53,48,51,32,101,114,114,102,50,53,48,52,41,0,0,0};
static C_char C_TLS li502[] C_aligned={C_lihdr(0,0,26),40,97,51,50,48,51,52,32,97,114,103,115,50,52,57,51,32,101,114,114,102,50,52,57,52,41,0,0};
static C_char C_TLS li503[] C_aligned={C_lihdr(0,0,35),40,97,51,50,48,53,50,32,117,110,105,116,50,52,57,53,32,105,110,102,111,50,52,57,54,32,101,114,114,102,50,52,57,55,41,0,0,0};
static C_char C_TLS li504[] C_aligned={C_lihdr(0,0,35),40,97,51,50,49,50,54,32,117,110,105,116,50,52,56,50,32,105,110,102,111,50,52,56,51,32,101,114,114,102,50,52,56,52,41,0,0,0};
static C_char C_TLS li505[] C_aligned={C_lihdr(0,0,26),40,97,51,50,50,50,50,32,97,114,103,115,50,52,55,48,32,101,114,114,102,50,52,55,49,41,0,0};
static C_char C_TLS li506[] C_aligned={C_lihdr(0,0,35),40,97,51,50,50,51,50,32,117,110,105,116,50,52,55,50,32,105,110,102,111,50,52,55,51,32,101,114,114,102,50,52,55,52,41,0,0,0};
static C_char C_TLS li507[] C_aligned={C_lihdr(0,0,20),40,97,51,50,52,48,56,32,117,50,49,50,48,32,112,50,49,50,49,41,0,0,0,0};
static C_char C_TLS li508[] C_aligned={C_lihdr(0,0,20),40,97,51,50,52,51,52,32,101,50,48,57,50,32,112,50,48,57,51,41,0,0,0,0};
static C_char C_TLS li509[] C_aligned={C_lihdr(0,0,12),40,112,112,97,116,32,112,50,48,53,53,41,0,0,0,0};
static C_char C_TLS li510[] C_aligned={C_lihdr(0,0,35),40,97,51,50,52,52,56,32,116,121,112,50,48,53,49,32,112,97,116,50,48,53,50,32,46,32,97,114,103,115,50,48,53,51,41,0,0,0};
static C_char C_TLS li511[] C_aligned={C_lihdr(0,0,20),40,97,51,50,53,53,49,32,114,50,48,52,56,32,112,50,48,52,57,41,0,0,0,0};
static C_char C_TLS li512[] C_aligned={C_lihdr(0,0,20),40,97,51,50,53,54,49,32,116,49,57,57,57,32,112,50,48,48,48,41,0,0,0,0};
static C_char C_TLS li513[] C_aligned={C_lihdr(0,0,71),40,100,111,52,56,50,32,100,52,56,52,32,107,52,56,53,32,112,52,56,54,32,107,60,52,56,55,32,107,62,52,56,56,32,102,52,56,57,32,102,62,52,57,48,32,102,60,52,57,49,32,111,52,57,50,32,120,52,57,51,32,110,52,57,52,32,101,52,57,53,41,0,0,0,0,0,0,0};
static C_char C_TLS li514[] C_aligned={C_lihdr(0,0,14),40,100,111,52,55,54,32,107,101,121,52,55,56,41,0,0,0,0,0,0};
static C_char C_TLS li515[] C_aligned={C_lihdr(0,0,24),40,97,51,50,55,57,49,32,109,101,115,115,56,56,32,46,32,100,97,116,97,56,57,41};
static C_char C_TLS li516[] C_aligned={C_lihdr(0,0,22),40,97,51,50,55,57,55,32,102,117,110,99,51,56,32,105,110,102,111,51,57,41,0,0,0,0,0,0};
static C_char C_TLS li517[] C_aligned={C_lihdr(0,0,24),40,97,51,50,56,52,57,32,115,112,101,99,51,54,32,46,32,98,111,100,121,51,55,41};
static C_char C_TLS li518[] C_aligned={C_lihdr(0,0,10),40,116,111,112,108,101,118,101,108,41,0,0};


/* from k27221 */
static C_word C_fcall stub5093(C_word C_buf,C_word C_a0) C_regparm;
C_regparm static C_word C_fcall stub5093(C_word C_buf,C_word C_a0){
C_word C_r=C_SCHEME_UNDEFINED,*C_a=(C_word*)C_buf;
char * t0=(char * )C_string_or_null(C_a0);
load_sal_file(t0);
return C_r;}

/* from k27206 in hush in k26910 in k26907 in k26904 in k26779 in k26776 in k26773 in k26770 in k26767 in k26764 in k26761 in k26758 in k26755 in k26752 in k26749 in k21827 in k18307 in k18304 in k18301 in k18298 in k17861 in k17858 in k17855 in k17852 in k17849 in k17327 in k17324 in k16801 in k16798 in k16795 in k16792 in k16789 in k16786 in k16783 in k16780 in k16777 in k16774 in k16771 in k16768 in k16765 in k16762 in k16759 in k16756 in k16753 in k16750 in k16747 in k16744 in k16741 in k16602 in k16599 in k16596 in k16593 in k16537 in k16534 in k16531 in k16528 in k16525 in k16522 in k16519 in k16516 in k15271 in k15202 in k15009 in k15006 in k14901 in k14850 in k7607 in k7604 in k5838 in k5545 in k5542 in k5538 in k5247 in k5244 in k5241 in k5238 */
C_noret_decl(stub5087)
static void C_ccall stub5087(C_word C_c,C_word C_self,C_word C_k,C_word C_buf) C_noret;
static void C_ccall stub5087(C_word C_c,C_word C_self,C_word C_k,C_word C_buf){
C_word C_r=C_SCHEME_UNDEFINED,*C_a=(C_word*)C_buf;
int C_level=C_save_callback_continuation(&C_a,C_k);
scheduler_hush();
C_k=C_restore_callback_continuation2(C_level);
C_kontinue(C_k,C_r);}

/* from k27200 */
C_noret_decl(stub5082)
static void C_ccall stub5082(C_word C_c,C_word C_self,C_word C_k,C_word C_buf,C_word C_a0) C_noret;
static void C_ccall stub5082(C_word C_c,C_word C_self,C_word C_k,C_word C_buf,C_word C_a0){
C_word C_r=C_SCHEME_UNDEFINED,*C_a=(C_word*)C_buf;
int t0=(int )C_unfix(C_a0);
int C_level=C_save_callback_continuation(&C_a,C_k);
scheduler_stop(t0);
C_k=C_restore_callback_continuation2(C_level);
C_kontinue(C_k,C_r);}

/* from k27184 in cont in k26910 in k26907 in k26904 in k26779 in k26776 in k26773 in k26770 in k26767 in k26764 in k26761 in k26758 in k26755 in k26752 in k26749 in k21827 in k18307 in k18304 in k18301 in k18298 in k17861 in k17858 in k17855 in k17852 in k17849 in k17327 in k17324 in k16801 in k16798 in k16795 in k16792 in k16789 in k16786 in k16783 in k16780 in k16777 in k16774 in k16771 in k16768 in k16765 in k16762 in k16759 in k16756 in k16753 in k16750 in k16747 in k16744 in k16741 in k16602 in k16599 in k16596 in k16593 in k16537 in k16534 in k16531 in k16528 in k16525 in k16522 in k16519 in k16516 in k15271 in k15202 in k15009 in k15006 in k14901 in k14850 in k7607 in k7604 in k5838 in k5545 in k5542 in k5538 in k5247 in k5244 in k5241 in k5238 */
C_noret_decl(stub5077)
static void C_ccall stub5077(C_word C_c,C_word C_self,C_word C_k,C_word C_buf) C_noret;
static void C_ccall stub5077(C_word C_c,C_word C_self,C_word C_k,C_word C_buf){
C_word C_r=C_SCHEME_UNDEFINED,*C_a=(C_word*)C_buf;
int C_level=C_save_callback_continuation(&C_a,C_k);
scheduler_cont();
C_k=C_restore_callback_continuation2(C_level);
C_kontinue(C_k,C_r);}

/* from k27175 in pause in k26910 in k26907 in k26904 in k26779 in k26776 in k26773 in k26770 in k26767 in k26764 in k26761 in k26758 in k26755 in k26752 in k26749 in k21827 in k18307 in k18304 in k18301 in k18298 in k17861 in k17858 in k17855 in k17852 in k17849 in k17327 in k17324 in k16801 in k16798 in k16795 in k16792 in k16789 in k16786 in k16783 in k16780 in k16777 in k16774 in k16771 in k16768 in k16765 in k16762 in k16759 in k16756 in k16753 in k16750 in k16747 in k16744 in k16741 in k16602 in k16599 in k16596 in k16593 in k16537 in k16534 in k16531 in k16528 in k16525 in k16522 in k16519 in k16516 in k15271 in k15202 in k15009 in k15006 in k14901 in k14850 in k7607 in k7604 in k5838 in k5545 in k5542 in k5538 in k5247 in k5244 in k5241 in k5238 */
C_noret_decl(stub5073)
static void C_ccall stub5073(C_word C_c,C_word C_self,C_word C_k,C_word C_buf) C_noret;
static void C_ccall stub5073(C_word C_c,C_word C_self,C_word C_k,C_word C_buf){
C_word C_r=C_SCHEME_UNDEFINED,*C_a=(C_word*)C_buf;
int C_level=C_save_callback_continuation(&C_a,C_k);
scheduler_pause();
C_k=C_restore_callback_continuation2(C_level);
C_kontinue(C_k,C_r);}

/* from k27166 in paused? in k26910 in k26907 in k26904 in k26779 in k26776 in k26773 in k26770 in k26767 in k26764 in k26761 in k26758 in k26755 in k26752 in k26749 in k21827 in k18307 in k18304 in k18301 in k18298 in k17861 in k17858 in k17855 in k17852 in k17849 in k17327 in k17324 in k16801 in k16798 in k16795 in k16792 in k16789 in k16786 in k16783 in k16780 in k16777 in k16774 in k16771 in k16768 in k16765 in k16762 in k16759 in k16756 in k16753 in k16750 in k16747 in k16744 in k16741 in k16602 in k16599 in k16596 in k16593 in k16537 in k16534 in k16531 in k16528 in k16525 in k16522 in k16519 in k16516 in k15271 in k15202 in k15009 in k15006 in k14901 in k14850 in k7607 in k7604 in k5838 in k5545 in k5542 in k5538 in k5247 in k5244 in k5241 in k5238 */
C_noret_decl(stub5069)
static void C_ccall stub5069(C_word C_c,C_word C_self,C_word C_k,C_word C_buf) C_noret;
static void C_ccall stub5069(C_word C_c,C_word C_self,C_word C_k,C_word C_buf){
C_word C_r=C_SCHEME_UNDEFINED,*C_a=(C_word*)C_buf;
int C_level=C_save_callback_continuation(&C_a,C_k);
C_r=C_mk_bool(scheduler_is_paused());
C_k=C_restore_callback_continuation2(C_level);
C_kontinue(C_k,C_r);}

/* from k27160 */
C_noret_decl(stub5062)
static void C_ccall stub5062(C_word C_c,C_word C_self,C_word C_k,C_word C_buf,C_word C_a0,C_word C_a1,C_word C_a2) C_noret;
static void C_ccall stub5062(C_word C_c,C_word C_self,C_word C_k,C_word C_buf,C_word C_a0,C_word C_a1,C_word C_a2){
C_word C_r=C_SCHEME_UNDEFINED,*C_a=(C_word*)C_buf;
C_word t0=(C_word )(C_a0);
double t1=(double )C_c_double(C_a1);
int t2=(int )C_unfix(C_a2);
int C_level=C_save_callback_continuation(&C_a,C_k);
scheduler_sprout(t0,t1,t2);
C_k=C_restore_callback_continuation2(C_level);
C_kontinue(C_k,C_r);}

/* from k27140 in scheduler-set-time-milliseconds in k26910 in k26907 in k26904 in k26779 in k26776 in k26773 in k26770 in k26767 in k26764 in k26761 in k26758 in k26755 in k26752 in k26749 in k21827 in k18307 in k18304 in k18301 in k18298 in k17861 in k17858 in k17855 in k17852 in k17849 in k17327 in k17324 in k16801 in k16798 in k16795 in k16792 in k16789 in k16786 in k16783 in k16780 in k16777 in k16774 in k16771 in k16768 in k16765 in k16762 in k16759 in k16756 in k16753 in k16750 in k16747 in k16744 in k16741 in k16602 in k16599 in k16596 in k16593 in k16537 in k16534 in k16531 in k16528 in k16525 in k16522 in k16519 in k16516 in k15271 in k15202 in k15009 in k15006 in k14901 in k14850 in k7607 in k7604 in k5838 in k5545 in k5542 in k5538 in k5247 in k5244 in k5241 in k5238 */
C_noret_decl(stub5054)
static void C_ccall stub5054(C_word C_c,C_word C_self,C_word C_k,C_word C_buf,C_word C_a0) C_noret;
static void C_ccall stub5054(C_word C_c,C_word C_self,C_word C_k,C_word C_buf,C_word C_a0){
C_word C_r=C_SCHEME_UNDEFINED,*C_a=(C_word*)C_buf;
int t0=(int )C_truep(C_a0);
int C_level=C_save_callback_continuation(&C_a,C_k);
scheduler_set_time_milliseconds(t0);
C_k=C_restore_callback_continuation2(C_level);
C_kontinue(C_k,C_r);}

/* from k27131 in time-format in k26910 in k26907 in k26904 in k26779 in k26776 in k26773 in k26770 in k26767 in k26764 in k26761 in k26758 in k26755 in k26752 in k26749 in k21827 in k18307 in k18304 in k18301 in k18298 in k17861 in k17858 in k17855 in k17852 in k17849 in k17327 in k17324 in k16801 in k16798 in k16795 in k16792 in k16789 in k16786 in k16783 in k16780 in k16777 in k16774 in k16771 in k16768 in k16765 in k16762 in k16759 in k16756 in k16753 in k16750 in k16747 in k16744 in k16741 in k16602 in k16599 in k16596 in k16593 in k16537 in k16534 in k16531 in k16528 in k16525 in k16522 in k16519 in k16516 in k15271 in k15202 in k15009 in k15006 in k14901 in k14850 in k7607 in k7604 in k5838 in k5545 in k5542 in k5538 in k5247 in k5244 in k5241 in k5238 */
C_noret_decl(stub5049)
static void C_ccall stub5049(C_word C_c,C_word C_self,C_word C_k,C_word C_buf) C_noret;
static void C_ccall stub5049(C_word C_c,C_word C_self,C_word C_k,C_word C_buf){
C_word C_r=C_SCHEME_UNDEFINED,*C_a=(C_word*)C_buf;
int C_level=C_save_callback_continuation(&C_a,C_k);
C_r=C_mk_bool(scheduler_is_time_milliseconds());
C_k=C_restore_callback_continuation2(C_level);
C_kontinue(C_k,C_r);}

/* from current-time-seconds in k26910 in k26907 in k26904 in k26779 in k26776 in k26773 in k26770 in k26767 in k26764 in k26761 in k26758 in k26755 in k26752 in k26749 in k21827 in k18307 in k18304 in k18301 in k18298 in k17861 in k17858 in k17855 in k17852 in k17849 in k17327 in k17324 in k16801 in k16798 in k16795 in k16792 in k16789 in k16786 in k16783 in k16780 in k16777 in k16774 in k16771 in k16768 in k16765 in k16762 in k16759 in k16756 in k16753 in k16750 in k16747 in k16744 in k16741 in k16602 in k16599 in k16596 in k16593 in k16537 in k16534 in k16531 in k16528 in k16525 in k16522 in k16519 in k16516 in k15271 in k15202 in k15009 in k15006 in k14901 in k14850 in k7607 in k7604 in k5838 in k5545 in k5542 in k5538 in k5247 in k5244 in k5241 in k5238 */
#define return(x) C_cblock C_r = (C_flonum(&C_a,(x))); goto C_ret; C_cblockend
static C_word C_fcall stub5046(C_word C_buf) C_regparm;
C_regparm static C_word C_fcall stub5046(C_word C_buf){
C_word C_r=C_SCHEME_UNDEFINED,*C_a=(C_word*)C_buf;
 C_return( (Time::getMillisecondCounterHiRes() / 1000.0) );
C_ret:
#undef return

return C_r;}

/* from current-time-milliseconds in k26910 in k26907 in k26904 in k26779 in k26776 in k26773 in k26770 in k26767 in k26764 in k26761 in k26758 in k26755 in k26752 in k26749 in k21827 in k18307 in k18304 in k18301 in k18298 in k17861 in k17858 in k17855 in k17852 in k17849 in k17327 in k17324 in k16801 in k16798 in k16795 in k16792 in k16789 in k16786 in k16783 in k16780 in k16777 in k16774 in k16771 in k16768 in k16765 in k16762 in k16759 in k16756 in k16753 in k16750 in k16747 in k16744 in k16741 in k16602 in k16599 in k16596 in k16593 in k16537 in k16534 in k16531 in k16528 in k16525 in k16522 in k16519 in k16516 in k15271 in k15202 in k15009 in k15006 in k14901 in k14850 in k7607 in k7604 in k5838 in k5545 in k5542 in k5538 in k5247 in k5244 in k5241 in k5238 */
#define return(x) C_cblock C_r = (C_flonum(&C_a,(x))); goto C_ret; C_cblockend
static C_word C_fcall stub5043(C_word C_buf) C_regparm;
C_regparm static C_word C_fcall stub5043(C_word C_buf){
C_word C_r=C_SCHEME_UNDEFINED,*C_a=(C_word*)C_buf;
 C_return( Time::getMillisecondCounterHiRes());
C_ret:
#undef return

return C_r;}

/* from k27112 in print-error in k26910 in k26907 in k26904 in k26779 in k26776 in k26773 in k26770 in k26767 in k26764 in k26761 in k26758 in k26755 in k26752 in k26749 in k21827 in k18307 in k18304 in k18301 in k18298 in k17861 in k17858 in k17855 in k17852 in k17849 in k17327 in k17324 in k16801 in k16798 in k16795 in k16792 in k16789 in k16786 in k16783 in k16780 in k16777 in k16774 in k16771 in k16768 in k16765 in k16762 in k16759 in k16756 in k16753 in k16750 in k16747 in k16744 in k16741 in k16602 in k16599 in k16596 in k16593 in k16537 in k16534 in k16531 in k16528 in k16525 in k16522 in k16519 in k16516 in k15271 in k15202 in k15009 in k15006 in k14901 in k14850 in k7607 in k7604 in k5838 in k5545 in k5542 in k5538 in k5247 in k5244 in k5241 in k5238 */
static C_word C_fcall stub5038(C_word C_buf,C_word C_a0) C_regparm;
C_regparm static C_word C_fcall stub5038(C_word C_buf,C_word C_a0){
C_word C_r=C_SCHEME_UNDEFINED,*C_a=(C_word*)C_buf;
char * t0=(char * )C_string_or_null(C_a0);
print_error(t0);
return C_r;}

/* from k27098 in print-message in k26910 in k26907 in k26904 in k26779 in k26776 in k26773 in k26770 in k26767 in k26764 in k26761 in k26758 in k26755 in k26752 in k26749 in k21827 in k18307 in k18304 in k18301 in k18298 in k17861 in k17858 in k17855 in k17852 in k17849 in k17327 in k17324 in k16801 in k16798 in k16795 in k16792 in k16789 in k16786 in k16783 in k16780 in k16777 in k16774 in k16771 in k16768 in k16765 in k16762 in k16759 in k16756 in k16753 in k16750 in k16747 in k16744 in k16741 in k16602 in k16599 in k16596 in k16593 in k16537 in k16534 in k16531 in k16528 in k16525 in k16522 in k16519 in k16516 in k15271 in k15202 in k15009 in k15006 in k14901 in k14850 in k7607 in k7604 in k5838 in k5545 in k5542 in k5538 in k5247 in k5244 in k5241 in k5238 */
static C_word C_fcall stub5032(C_word C_buf,C_word C_a0) C_regparm;
C_regparm static C_word C_fcall stub5032(C_word C_buf,C_word C_a0){
C_word C_r=C_SCHEME_UNDEFINED,*C_a=(C_word*)C_buf;
char * t0=(char * )C_string_or_null(C_a0);
print_message(t0);
return C_r;}

/* from f_26902 in cs:clear in k26779 in k26776 in k26773 in k26770 in k26767 in k26764 in k26761 in k26758 in k26755 in k26752 in k26749 in k21827 in k18307 in k18304 in k18301 in k18298 in k17861 in k17858 in k17855 in k17852 in k17849 in k17327 in k17324 in k16801 in k16798 in k16795 in k16792 in k16789 in k16786 in k16783 in k16780 in k16777 in k16774 in k16771 in k16768 in k16765 in k16762 in k16759 in k16756 in k16753 in k16750 in k16747 in k16744 in k16741 in k16602 in k16599 in k16596 in k16593 in k16537 in k16534 in k16531 in k16528 in k16525 in k16522 in k16519 in k16516 in k15271 in k15202 in k15009 in k15006 in k14901 in k14850 in k7607 in k7604 in k5838 in k5545 in k5542 in k5538 in k5247 in k5244 in k5241 in k5238 */
static C_word C_fcall stub4999(C_word C_buf) C_regparm;
C_regparm static C_word C_fcall stub4999(C_word C_buf){
C_word C_r=C_SCHEME_UNDEFINED,*C_a=(C_word*)C_buf;
cs_clear_score();
return C_r;}

/* from k26868 */
static C_word C_fcall stub4992(C_word C_buf,C_word C_a0,C_word C_a1,C_word C_a2) C_regparm;
C_regparm static C_word C_fcall stub4992(C_word C_buf,C_word C_a0,C_word C_a1,C_word C_a2){
C_word C_r=C_SCHEME_UNDEFINED,*C_a=(C_word*)C_buf;
int t0=(int )C_unfix(C_a0);
int t1=(int )C_unfix(C_a1);
C_word t2=(C_word )(C_a2);
cs_send_score_event(t0,t1,t2);
return C_r;}

/* from k26811 */
static C_word C_fcall stub4981(C_word C_buf,C_word C_a0,C_word C_a1,C_word C_a2) C_regparm;
C_regparm static C_word C_fcall stub4981(C_word C_buf,C_word C_a0,C_word C_a1,C_word C_a2){
C_word C_r=C_SCHEME_UNDEFINED,*C_a=(C_word*)C_buf;
int t0=(int )C_unfix(C_a0);
int t1=(int )C_unfix(C_a1);
C_word t2=(C_word )(C_a2);
cs_send_score_event(t0,t1,t2);
return C_r;}

/* from f_26747 in mp:inhook in k21827 in k18307 in k18304 in k18301 in k18298 in k17861 in k17858 in k17855 in k17852 in k17849 in k17327 in k17324 in k16801 in k16798 in k16795 in k16792 in k16789 in k16786 in k16783 in k16780 in k16777 in k16774 in k16771 in k16768 in k16765 in k16762 in k16759 in k16756 in k16753 in k16750 in k16747 in k16744 in k16741 in k16602 in k16599 in k16596 in k16593 in k16537 in k16534 in k16531 in k16528 in k16525 in k16522 in k16519 in k16516 in k15271 in k15202 in k15009 in k15006 in k14901 in k14850 in k7607 in k7604 in k5838 in k5545 in k5542 in k5538 in k5247 in k5244 in k5241 in k5238 */
static C_word C_fcall stub4925(C_word C_buf,C_word C_a0) C_regparm;
C_regparm static C_word C_fcall stub4925(C_word C_buf,C_word C_a0){
C_word C_r=C_SCHEME_UNDEFINED,*C_a=(C_word*)C_buf;
C_word t0=(C_word )(C_a0);
set_input_hook(t0);
return C_r;}

/* from f_26742 in mp:inhook in k21827 in k18307 in k18304 in k18301 in k18298 in k17861 in k17858 in k17855 in k17852 in k17849 in k17327 in k17324 in k16801 in k16798 in k16795 in k16792 in k16789 in k16786 in k16783 in k16780 in k16777 in k16774 in k16771 in k16768 in k16765 in k16762 in k16759 in k16756 in k16753 in k16750 in k16747 in k16744 in k16741 in k16602 in k16599 in k16596 in k16593 in k16537 in k16534 in k16531 in k16528 in k16525 in k16522 in k16519 in k16516 in k15271 in k15202 in k15009 in k15006 in k14901 in k14850 in k7607 in k7604 in k5838 in k5545 in k5542 in k5538 in k5247 in k5244 in k5241 in k5238 */
static C_word C_fcall stub4916(C_word C_buf,C_word C_a0) C_regparm;
C_regparm static C_word C_fcall stub4916(C_word C_buf,C_word C_a0){
C_word C_r=C_SCHEME_UNDEFINED,*C_a=(C_word*)C_buf;
C_word t0=(C_word )(C_a0);
set_input_hook(t0);
return C_r;}

/* from k26686 */
static C_word C_fcall stub4909(C_word C_buf,C_word C_a0) C_regparm;
C_regparm static C_word C_fcall stub4909(C_word C_buf,C_word C_a0){
C_word C_r=C_SCHEME_UNDEFINED,*C_a=(C_word*)C_buf;
MidiMessage *t0=(MidiMessage *)C_c_pointer_or_null(C_a0);
mp_message(t0);
return C_r;}

/* from k26674 */
static C_word C_fcall stub4900(C_word C_buf,C_word C_a0,C_word C_a1,C_word C_a2,C_word C_a3,C_word C_a4) C_regparm;
C_regparm static C_word C_fcall stub4900(C_word C_buf,C_word C_a0,C_word C_a1,C_word C_a2,C_word C_a3,C_word C_a4){
C_word C_r=C_SCHEME_UNDEFINED,*C_a=(C_word*)C_buf;
int t0=(int )C_unfix(C_a0);
double t1=(double )C_c_double(C_a1);
float t2=(float )C_c_double(C_a2);
float t3=(float )C_c_double(C_a3);
float t4=(float )C_c_double(C_a4);
mp_data(t0,t1,t2,t3,t4);
return C_r;}

/* from k26646 */
static C_word C_fcall stub4885(C_word C_buf,C_word C_a0,C_word C_a1,C_word C_a2,C_word C_a3,C_word C_a4) C_regparm;
C_regparm static C_word C_fcall stub4885(C_word C_buf,C_word C_a0,C_word C_a1,C_word C_a2,C_word C_a3,C_word C_a4){
C_word C_r=C_SCHEME_UNDEFINED,*C_a=(C_word*)C_buf;
int t0=(int )C_unfix(C_a0);
double t1=(double )C_c_double(C_a1);
float t2=(float )C_c_double(C_a2);
float t3=(float )C_c_double(C_a3);
float t4=(float )C_c_double(C_a4);
mp_data(t0,t1,t2,t3,t4);
return C_r;}

/* from k26618 */
static C_word C_fcall stub4870(C_word C_buf,C_word C_a0,C_word C_a1,C_word C_a2,C_word C_a3,C_word C_a4) C_regparm;
C_regparm static C_word C_fcall stub4870(C_word C_buf,C_word C_a0,C_word C_a1,C_word C_a2,C_word C_a3,C_word C_a4){
C_word C_r=C_SCHEME_UNDEFINED,*C_a=(C_word*)C_buf;
int t0=(int )C_unfix(C_a0);
double t1=(double )C_c_double(C_a1);
float t2=(float )C_c_double(C_a2);
float t3=(float )C_c_double(C_a3);
float t4=(float )C_c_double(C_a4);
mp_data(t0,t1,t2,t3,t4);
return C_r;}

/* from k26590 */
static C_word C_fcall stub4855(C_word C_buf,C_word C_a0,C_word C_a1,C_word C_a2,C_word C_a3,C_word C_a4) C_regparm;
C_regparm static C_word C_fcall stub4855(C_word C_buf,C_word C_a0,C_word C_a1,C_word C_a2,C_word C_a3,C_word C_a4){
C_word C_r=C_SCHEME_UNDEFINED,*C_a=(C_word*)C_buf;
int t0=(int )C_unfix(C_a0);
double t1=(double )C_c_double(C_a1);
float t2=(float )C_c_double(C_a2);
float t3=(float )C_c_double(C_a3);
float t4=(float )C_c_double(C_a4);
mp_data(t0,t1,t2,t3,t4);
return C_r;}

/* from k26562 */
static C_word C_fcall stub4839(C_word C_buf,C_word C_a0,C_word C_a1,C_word C_a2,C_word C_a3,C_word C_a4) C_regparm;
C_regparm static C_word C_fcall stub4839(C_word C_buf,C_word C_a0,C_word C_a1,C_word C_a2,C_word C_a3,C_word C_a4){
C_word C_r=C_SCHEME_UNDEFINED,*C_a=(C_word*)C_buf;
int t0=(int )C_unfix(C_a0);
double t1=(double )C_c_double(C_a1);
float t2=(float )C_c_double(C_a2);
float t3=(float )C_c_double(C_a3);
float t4=(float )C_c_double(C_a4);
mp_data(t0,t1,t2,t3,t4);
return C_r;}

/* from k26534 */
static C_word C_fcall stub4823(C_word C_buf,C_word C_a0,C_word C_a1,C_word C_a2,C_word C_a3,C_word C_a4) C_regparm;
C_regparm static C_word C_fcall stub4823(C_word C_buf,C_word C_a0,C_word C_a1,C_word C_a2,C_word C_a3,C_word C_a4){
C_word C_r=C_SCHEME_UNDEFINED,*C_a=(C_word*)C_buf;
int t0=(int )C_unfix(C_a0);
double t1=(double )C_c_double(C_a1);
float t2=(float )C_c_double(C_a2);
float t3=(float )C_c_double(C_a3);
float t4=(float )C_c_double(C_a4);
mp_data(t0,t1,t2,t3,t4);
return C_r;}

/* from k26506 */
static C_word C_fcall stub4807(C_word C_buf,C_word C_a0,C_word C_a1,C_word C_a2,C_word C_a3,C_word C_a4) C_regparm;
C_regparm static C_word C_fcall stub4807(C_word C_buf,C_word C_a0,C_word C_a1,C_word C_a2,C_word C_a3,C_word C_a4){
C_word C_r=C_SCHEME_UNDEFINED,*C_a=(C_word*)C_buf;
int t0=(int )C_unfix(C_a0);
double t1=(double )C_c_double(C_a1);
float t2=(float )C_c_double(C_a2);
float t3=(float )C_c_double(C_a3);
float t4=(float )C_c_double(C_a4);
mp_data(t0,t1,t2,t3,t4);
return C_r;}

/* from k26478 */
static C_word C_fcall stub4792(C_word C_buf,C_word C_a0,C_word C_a1,C_word C_a2,C_word C_a3,C_word C_a4) C_regparm;
C_regparm static C_word C_fcall stub4792(C_word C_buf,C_word C_a0,C_word C_a1,C_word C_a2,C_word C_a3,C_word C_a4){
C_word C_r=C_SCHEME_UNDEFINED,*C_a=(C_word*)C_buf;
double t0=(double )C_c_double(C_a0);
double t1=(double )C_c_double(C_a1);
float t2=(float )C_c_double(C_a2);
float t3=(float )C_c_double(C_a3);
float t4=(float )C_c_double(C_a4);
mp_note(t0,t1,t2,t3,t4);
return C_r;}

/* from k26450 */
static C_word C_fcall stub4775(C_word C_buf,C_word C_a0,C_word C_a1,C_word C_a2,C_word C_a3,C_word C_a4) C_regparm;
C_regparm static C_word C_fcall stub4775(C_word C_buf,C_word C_a0,C_word C_a1,C_word C_a2,C_word C_a3,C_word C_a4){
C_word C_r=C_SCHEME_UNDEFINED,*C_a=(C_word*)C_buf;
double t0=(double )C_c_double(C_a0);
double t1=(double )C_c_double(C_a1);
float t2=(float )C_c_double(C_a2);
float t3=(float )C_c_double(C_a3);
float t4=(float )C_c_double(C_a4);
mp_note(t0,t1,t2,t3,t4);
return C_r;}

/* from k26419 */
static C_word C_fcall stub4757(C_word C_buf,C_word C_a0,C_word C_a1,C_word C_a2) C_regparm;
C_regparm static C_word C_fcall stub4757(C_word C_buf,C_word C_a0,C_word C_a1,C_word C_a2){
C_word C_r=C_SCHEME_UNDEFINED,*C_a=(C_word*)C_buf;
MidiMessage *t0=(MidiMessage *)C_c_pointer_or_null(C_a0);
int t1=(int )C_unfix(C_a1);
int t2=(int )C_unfix(C_a2);
mm_set_data(t0,t1,t2);
return C_r;}

/* from k26396 */
static C_word C_fcall stub4746(C_word C_buf,C_word C_a0,C_word C_a1) C_regparm;
C_regparm static C_word C_fcall stub4746(C_word C_buf,C_word C_a0,C_word C_a1){
C_word C_r=C_SCHEME_UNDEFINED,*C_a=(C_word*)C_buf;
MidiMessage *t0=(MidiMessage *)C_c_pointer_or_null(C_a0);
int t1=(int )C_unfix(C_a1);
C_r=C_fix((C_word)mm_data(t0,t1));
return C_r;}

/* from k26374 */
static C_word C_fcall stub4735(C_word C_buf,C_word C_a0,C_word C_a1,C_word C_a2) C_regparm;
C_regparm static C_word C_fcall stub4735(C_word C_buf,C_word C_a0,C_word C_a1,C_word C_a2){
C_word C_r=C_SCHEME_UNDEFINED,*C_a=(C_word*)C_buf;
MidiMessage *t0=(MidiMessage *)C_c_pointer_or_null(C_a0);
int t1=(int )C_unfix(C_a1);
int t2=(int )C_unfix(C_a2);
mm_set_data(t0,t1,t2);
return C_r;}

/* from k26354 */
static C_word C_fcall stub4725(C_word C_buf,C_word C_a0,C_word C_a1,C_word C_a2) C_regparm;
C_regparm static C_word C_fcall stub4725(C_word C_buf,C_word C_a0,C_word C_a1,C_word C_a2){
C_word C_r=C_SCHEME_UNDEFINED,*C_a=(C_word*)C_buf;
MidiMessage *t0=(MidiMessage *)C_c_pointer_or_null(C_a0);
int t1=(int )C_unfix(C_a1);
int t2=(int )C_unfix(C_a2);
mm_set_data(t0,t1,t2);
return C_r;}

/* from k26319 */
static C_word C_fcall stub4712(C_word C_buf,C_word C_a0,C_word C_a1) C_regparm;
C_regparm static C_word C_fcall stub4712(C_word C_buf,C_word C_a0,C_word C_a1){
C_word C_r=C_SCHEME_UNDEFINED,*C_a=(C_word*)C_buf;
MidiMessage *t0=(MidiMessage *)C_c_pointer_or_null(C_a0);
int t1=(int )C_unfix(C_a1);
C_r=C_fix((C_word)mm_data(t0,t1));
return C_r;}

/* from k26303 */
static C_word C_fcall stub4704(C_word C_buf,C_word C_a0,C_word C_a1) C_regparm;
C_regparm static C_word C_fcall stub4704(C_word C_buf,C_word C_a0,C_word C_a1){
C_word C_r=C_SCHEME_UNDEFINED,*C_a=(C_word*)C_buf;
MidiMessage *t0=(MidiMessage *)C_c_pointer_or_null(C_a0);
int t1=(int )C_unfix(C_a1);
C_r=C_fix((C_word)mm_data(t0,t1));
return C_r;}

/* from k26275 */
static C_word C_fcall stub4691(C_word C_buf,C_word C_a0,C_word C_a1,C_word C_a2) C_regparm;
C_regparm static C_word C_fcall stub4691(C_word C_buf,C_word C_a0,C_word C_a1,C_word C_a2){
C_word C_r=C_SCHEME_UNDEFINED,*C_a=(C_word*)C_buf;
MidiMessage *t0=(MidiMessage *)C_c_pointer_or_null(C_a0);
int t1=(int )C_unfix(C_a1);
int t2=(int )C_unfix(C_a2);
mm_set_data(t0,t1,t2);
return C_r;}

/* from k26252 */
static C_word C_fcall stub4680(C_word C_buf,C_word C_a0,C_word C_a1) C_regparm;
C_regparm static C_word C_fcall stub4680(C_word C_buf,C_word C_a0,C_word C_a1){
C_word C_r=C_SCHEME_UNDEFINED,*C_a=(C_word*)C_buf;
MidiMessage *t0=(MidiMessage *)C_c_pointer_or_null(C_a0);
int t1=(int )C_unfix(C_a1);
C_r=C_fix((C_word)mm_data(t0,t1));
return C_r;}

/* from k26233 */
static C_word C_fcall stub4669(C_word C_buf,C_word C_a0,C_word C_a1,C_word C_a2) C_regparm;
C_regparm static C_word C_fcall stub4669(C_word C_buf,C_word C_a0,C_word C_a1,C_word C_a2){
C_word C_r=C_SCHEME_UNDEFINED,*C_a=(C_word*)C_buf;
MidiMessage *t0=(MidiMessage *)C_c_pointer_or_null(C_a0);
int t1=(int )C_unfix(C_a1);
int t2=(int )C_unfix(C_a2);
mm_set_data(t0,t1,t2);
return C_r;}

/* from k26210 */
static C_word C_fcall stub4658(C_word C_buf,C_word C_a0,C_word C_a1) C_regparm;
C_regparm static C_word C_fcall stub4658(C_word C_buf,C_word C_a0,C_word C_a1){
C_word C_r=C_SCHEME_UNDEFINED,*C_a=(C_word*)C_buf;
MidiMessage *t0=(MidiMessage *)C_c_pointer_or_null(C_a0);
int t1=(int )C_unfix(C_a1);
C_r=C_fix((C_word)mm_data(t0,t1));
return C_r;}

/* from k26191 */
static C_word C_fcall stub4648(C_word C_buf,C_word C_a0,C_word C_a1) C_regparm;
C_regparm static C_word C_fcall stub4648(C_word C_buf,C_word C_a0,C_word C_a1){
C_word C_r=C_SCHEME_UNDEFINED,*C_a=(C_word*)C_buf;
MidiMessage *t0=(MidiMessage *)C_c_pointer_or_null(C_a0);
int t1=(int )C_unfix(C_a1);
mm_set_chan(t0,t1);
return C_r;}

/* from k26172 */
static C_word C_fcall stub4639(C_word C_buf,C_word C_a0) C_regparm;
C_regparm static C_word C_fcall stub4639(C_word C_buf,C_word C_a0){
C_word C_r=C_SCHEME_UNDEFINED,*C_a=(C_word*)C_buf;
MidiMessage *t0=(MidiMessage *)C_c_pointer_or_null(C_a0);
C_r=C_fix((C_word)mm_chan(t0));
return C_r;}

/* from k26157 */
static C_word C_fcall stub4630(C_word C_buf,C_word C_a0,C_word C_a1) C_regparm;
C_regparm static C_word C_fcall stub4630(C_word C_buf,C_word C_a0,C_word C_a1){
C_word C_r=C_SCHEME_UNDEFINED,*C_a=(C_word*)C_buf;
MidiMessage *t0=(MidiMessage *)C_c_pointer_or_null(C_a0);
double t1=(double )C_c_double(C_a1);
mm_set_time(t0,t1);
return C_r;}

/* from k26138 */
static C_word C_fcall stub4620(C_word C_buf,C_word C_a0) C_regparm;
C_regparm static C_word C_fcall stub4620(C_word C_buf,C_word C_a0){
C_word C_r=C_SCHEME_UNDEFINED,*C_a=(C_word*)C_buf;
MidiMessage *t0=(MidiMessage *)C_c_pointer_or_null(C_a0);
C_r=C_flonum(&C_a,mm_time(t0));
return C_r;}

/* from k26123 */
static C_word C_fcall stub4612(C_word C_buf,C_word C_a0) C_regparm;
C_regparm static C_word C_fcall stub4612(C_word C_buf,C_word C_a0){
C_word C_r=C_SCHEME_UNDEFINED,*C_a=(C_word*)C_buf;
MidiMessage *t0=(MidiMessage *)C_c_pointer_or_null(C_a0);
C_r=C_mpointer_or_false(&C_a,(void*)mm_copy(t0));
return C_r;}

/* from k26108 */
static C_word C_fcall stub4604(C_word C_buf,C_word C_a0) C_regparm;
C_regparm static C_word C_fcall stub4604(C_word C_buf,C_word C_a0){
C_word C_r=C_SCHEME_UNDEFINED,*C_a=(C_word*)C_buf;
MidiMessage *t0=(MidiMessage *)C_c_pointer_or_null(C_a0);
mm_free(t0);
return C_r;}

/* from k26090 */
static C_word C_fcall stub4596(C_word C_buf,C_word C_a0,C_word C_a1) C_regparm;
C_regparm static C_word C_fcall stub4596(C_word C_buf,C_word C_a0,C_word C_a1){
C_word C_r=C_SCHEME_UNDEFINED,*C_a=(C_word*)C_buf;
MidiMessage *t0=(MidiMessage *)C_c_pointer_or_null(C_a0);
int t1=(int )C_unfix(C_a1);
C_r=C_mk_bool(mm_is_type(t0,t1));
return C_r;}

/* from k25663 */
static C_word C_fcall stub4581(C_word C_buf,C_word C_a0,C_word C_a1,C_word C_a2,C_word C_a3,C_word C_a4) C_regparm;
C_regparm static C_word C_fcall stub4581(C_word C_buf,C_word C_a0,C_word C_a1,C_word C_a2,C_word C_a3,C_word C_a4){
C_word C_r=C_SCHEME_UNDEFINED,*C_a=(C_word*)C_buf;
int t0=(int )C_unfix(C_a0);
double t1=(double )C_c_double(C_a1);
int t2=(int )C_unfix(C_a2);
int t3=(int )C_unfix(C_a3);
int t4=(int )C_unfix(C_a4);
C_r=C_mpointer_or_false(&C_a,(void*)mm_make(t0,t1,t2,t3,t4));
return C_r;}

/* from k25620 */
static C_word C_fcall stub4502(C_word C_buf,C_word C_a0,C_word C_a1) C_regparm;
C_regparm static C_word C_fcall stub4502(C_word C_buf,C_word C_a0,C_word C_a1){
C_word C_r=C_SCHEME_UNDEFINED,*C_a=(C_word*)C_buf;
MidiMessage *t0=(MidiMessage *)C_c_pointer_or_null(C_a0);
int t1=(int )C_unfix(C_a1);
C_r=C_mk_bool(mm_is_type(t0,t1));
return C_r;}

/* from k25193 */
static C_word C_fcall stub4487(C_word C_buf,C_word C_a0,C_word C_a1,C_word C_a2,C_word C_a3,C_word C_a4) C_regparm;
C_regparm static C_word C_fcall stub4487(C_word C_buf,C_word C_a0,C_word C_a1,C_word C_a2,C_word C_a3,C_word C_a4){
C_word C_r=C_SCHEME_UNDEFINED,*C_a=(C_word*)C_buf;
int t0=(int )C_unfix(C_a0);
double t1=(double )C_c_double(C_a1);
int t2=(int )C_unfix(C_a2);
int t3=(int )C_unfix(C_a3);
int t4=(int )C_unfix(C_a4);
C_r=C_mpointer_or_false(&C_a,(void*)mm_make(t0,t1,t2,t3,t4));
return C_r;}

/* from k25150 */
static C_word C_fcall stub4408(C_word C_buf,C_word C_a0,C_word C_a1) C_regparm;
C_regparm static C_word C_fcall stub4408(C_word C_buf,C_word C_a0,C_word C_a1){
C_word C_r=C_SCHEME_UNDEFINED,*C_a=(C_word*)C_buf;
MidiMessage *t0=(MidiMessage *)C_c_pointer_or_null(C_a0);
int t1=(int )C_unfix(C_a1);
C_r=C_mk_bool(mm_is_type(t0,t1));
return C_r;}

/* from k24723 */
static C_word C_fcall stub4393(C_word C_buf,C_word C_a0,C_word C_a1,C_word C_a2,C_word C_a3,C_word C_a4) C_regparm;
C_regparm static C_word C_fcall stub4393(C_word C_buf,C_word C_a0,C_word C_a1,C_word C_a2,C_word C_a3,C_word C_a4){
C_word C_r=C_SCHEME_UNDEFINED,*C_a=(C_word*)C_buf;
int t0=(int )C_unfix(C_a0);
double t1=(double )C_c_double(C_a1);
int t2=(int )C_unfix(C_a2);
int t3=(int )C_unfix(C_a3);
int t4=(int )C_unfix(C_a4);
C_r=C_mpointer_or_false(&C_a,(void*)mm_make(t0,t1,t2,t3,t4));
return C_r;}

/* from k24680 */
static C_word C_fcall stub4314(C_word C_buf,C_word C_a0,C_word C_a1) C_regparm;
C_regparm static C_word C_fcall stub4314(C_word C_buf,C_word C_a0,C_word C_a1){
C_word C_r=C_SCHEME_UNDEFINED,*C_a=(C_word*)C_buf;
MidiMessage *t0=(MidiMessage *)C_c_pointer_or_null(C_a0);
int t1=(int )C_unfix(C_a1);
C_r=C_mk_bool(mm_is_type(t0,t1));
return C_r;}

/* from k23978 */
static C_word C_fcall stub4298(C_word C_buf,C_word C_a0,C_word C_a1,C_word C_a2,C_word C_a3,C_word C_a4) C_regparm;
C_regparm static C_word C_fcall stub4298(C_word C_buf,C_word C_a0,C_word C_a1,C_word C_a2,C_word C_a3,C_word C_a4){
C_word C_r=C_SCHEME_UNDEFINED,*C_a=(C_word*)C_buf;
int t0=(int )C_unfix(C_a0);
double t1=(double )C_c_double(C_a1);
int t2=(int )C_unfix(C_a2);
int t3=(int )C_unfix(C_a3);
int t4=(int )C_unfix(C_a4);
C_r=C_mpointer_or_false(&C_a,(void*)mm_make(t0,t1,t2,t3,t4));
return C_r;}

/* from k23932 */
static C_word C_fcall stub4182(C_word C_buf,C_word C_a0,C_word C_a1) C_regparm;
C_regparm static C_word C_fcall stub4182(C_word C_buf,C_word C_a0,C_word C_a1){
C_word C_r=C_SCHEME_UNDEFINED,*C_a=(C_word*)C_buf;
MidiMessage *t0=(MidiMessage *)C_c_pointer_or_null(C_a0);
int t1=(int )C_unfix(C_a1);
C_r=C_mk_bool(mm_is_type(t0,t1));
return C_r;}

/* from k23230 */
static C_word C_fcall stub4166(C_word C_buf,C_word C_a0,C_word C_a1,C_word C_a2,C_word C_a3,C_word C_a4) C_regparm;
C_regparm static C_word C_fcall stub4166(C_word C_buf,C_word C_a0,C_word C_a1,C_word C_a2,C_word C_a3,C_word C_a4){
C_word C_r=C_SCHEME_UNDEFINED,*C_a=(C_word*)C_buf;
int t0=(int )C_unfix(C_a0);
double t1=(double )C_c_double(C_a1);
int t2=(int )C_unfix(C_a2);
int t3=(int )C_unfix(C_a3);
int t4=(int )C_unfix(C_a4);
C_r=C_mpointer_or_false(&C_a,(void*)mm_make(t0,t1,t2,t3,t4));
return C_r;}

/* from k23184 */
static C_word C_fcall stub4050(C_word C_buf,C_word C_a0,C_word C_a1) C_regparm;
C_regparm static C_word C_fcall stub4050(C_word C_buf,C_word C_a0,C_word C_a1){
C_word C_r=C_SCHEME_UNDEFINED,*C_a=(C_word*)C_buf;
MidiMessage *t0=(MidiMessage *)C_c_pointer_or_null(C_a0);
int t1=(int )C_unfix(C_a1);
C_r=C_mk_bool(mm_is_type(t0,t1));
return C_r;}

/* from k22757 */
static C_word C_fcall stub4035(C_word C_buf,C_word C_a0,C_word C_a1,C_word C_a2,C_word C_a3,C_word C_a4) C_regparm;
C_regparm static C_word C_fcall stub4035(C_word C_buf,C_word C_a0,C_word C_a1,C_word C_a2,C_word C_a3,C_word C_a4){
C_word C_r=C_SCHEME_UNDEFINED,*C_a=(C_word*)C_buf;
int t0=(int )C_unfix(C_a0);
double t1=(double )C_c_double(C_a1);
int t2=(int )C_unfix(C_a2);
int t3=(int )C_unfix(C_a3);
int t4=(int )C_unfix(C_a4);
C_r=C_mpointer_or_false(&C_a,(void*)mm_make(t0,t1,t2,t3,t4));
return C_r;}

/* from k22714 */
static C_word C_fcall stub3956(C_word C_buf,C_word C_a0,C_word C_a1) C_regparm;
C_regparm static C_word C_fcall stub3956(C_word C_buf,C_word C_a0,C_word C_a1){
C_word C_r=C_SCHEME_UNDEFINED,*C_a=(C_word*)C_buf;
MidiMessage *t0=(MidiMessage *)C_c_pointer_or_null(C_a0);
int t1=(int )C_unfix(C_a1);
C_r=C_mk_bool(mm_is_type(t0,t1));
return C_r;}

/* from k22012 */
static C_word C_fcall stub3940(C_word C_buf,C_word C_a0,C_word C_a1,C_word C_a2,C_word C_a3,C_word C_a4) C_regparm;
C_regparm static C_word C_fcall stub3940(C_word C_buf,C_word C_a0,C_word C_a1,C_word C_a2,C_word C_a3,C_word C_a4){
C_word C_r=C_SCHEME_UNDEFINED,*C_a=(C_word*)C_buf;
int t0=(int )C_unfix(C_a0);
double t1=(double )C_c_double(C_a1);
int t2=(int )C_unfix(C_a2);
int t3=(int )C_unfix(C_a3);
int t4=(int )C_unfix(C_a4);
C_r=C_mpointer_or_false(&C_a,(void*)mm_make(t0,t1,t2,t3,t4));
return C_r;}

/* from tb:ranbrown */
static C_word C_fcall stub302(C_word C_buf) C_regparm;
C_regparm static C_word C_fcall stub302(C_word C_buf){
C_word C_r=C_SCHEME_UNDEFINED,*C_a=(C_word*)C_buf;
C_r=C_flonum(&C_a,Toolbox::ranbrown());
return C_r;}

/* from tb:ranpink */
static C_word C_fcall stub299(C_word C_buf) C_regparm;
C_regparm static C_word C_fcall stub299(C_word C_buf){
C_word C_r=C_SCHEME_UNDEFINED,*C_a=(C_word*)C_buf;
C_r=C_flonum(&C_a,Toolbox::ranpink());
return C_r;}

/* from k6479 */
static C_word C_fcall stub296(C_word C_buf,C_word C_a0) C_regparm;
C_regparm static C_word C_fcall stub296(C_word C_buf,C_word C_a0){
C_word C_r=C_SCHEME_UNDEFINED,*C_a=(C_word*)C_buf;
float t0=(float )C_c_double(C_a0);
C_r=C_fix((C_word)Toolbox::ranpoisson(t0));
return C_r;}

/* from tb:rancauchy */
static C_word C_fcall stub292(C_word C_buf) C_regparm;
C_regparm static C_word C_fcall stub292(C_word C_buf){
C_word C_r=C_SCHEME_UNDEFINED,*C_a=(C_word*)C_buf;
C_r=C_flonum(&C_a,Toolbox::rancauchy());
return C_r;}

/* from k6469 */
static C_word C_fcall stub288(C_word C_buf,C_word C_a0) C_regparm;
C_regparm static C_word C_fcall stub288(C_word C_buf,C_word C_a0){
C_word C_r=C_SCHEME_UNDEFINED,*C_a=(C_word*)C_buf;
float t0=(float )C_c_double(C_a0);
C_r=C_flonum(&C_a,Toolbox::rangamma(t0));
return C_r;}

/* from k6462 */
static C_word C_fcall stub282(C_word C_buf,C_word C_a0,C_word C_a1) C_regparm;
C_regparm static C_word C_fcall stub282(C_word C_buf,C_word C_a0,C_word C_a1){
C_word C_r=C_SCHEME_UNDEFINED,*C_a=(C_word*)C_buf;
float t0=(float )C_c_double(C_a0);
float t1=(float )C_c_double(C_a1);
C_r=C_flonum(&C_a,Toolbox::ranbeta(t0,t1));
return C_r;}

/* from k6451 */
static C_word C_fcall stub276(C_word C_buf,C_word C_a0) C_regparm;
C_regparm static C_word C_fcall stub276(C_word C_buf,C_word C_a0){
C_word C_r=C_SCHEME_UNDEFINED,*C_a=(C_word*)C_buf;
float t0=(float )C_c_double(C_a0);
C_r=C_flonum(&C_a,Toolbox::ranexp(t0));
return C_r;}

/* from k6444 */
static C_word C_fcall stub270(C_word C_buf,C_word C_a0,C_word C_a1) C_regparm;
C_regparm static C_word C_fcall stub270(C_word C_buf,C_word C_a0,C_word C_a1){
C_word C_r=C_SCHEME_UNDEFINED,*C_a=(C_word*)C_buf;
float t0=(float )C_c_double(C_a0);
float t1=(float )C_c_double(C_a1);
C_r=C_flonum(&C_a,Toolbox::rangauss(t0,t1));
return C_r;}

/* from tb:ranmiddle */
static C_word C_fcall stub265(C_word C_buf) C_regparm;
C_regparm static C_word C_fcall stub265(C_word C_buf){
C_word C_r=C_SCHEME_UNDEFINED,*C_a=(C_word*)C_buf;
C_r=C_flonum(&C_a,Toolbox::ranmiddle());
return C_r;}

/* from tb:ranhigh */
static C_word C_fcall stub262(C_word C_buf) C_regparm;
C_regparm static C_word C_fcall stub262(C_word C_buf){
C_word C_r=C_SCHEME_UNDEFINED,*C_a=(C_word*)C_buf;
C_r=C_flonum(&C_a,Toolbox::ranhigh());
return C_r;}

/* from tb:ranlow */
static C_word C_fcall stub259(C_word C_buf) C_regparm;
C_regparm static C_word C_fcall stub259(C_word C_buf){
C_word C_r=C_SCHEME_UNDEFINED,*C_a=(C_word*)C_buf;
C_r=C_flonum(&C_a,Toolbox::ranlow());
return C_r;}

/* from k6424 */
static C_word C_fcall stub254(C_word C_buf,C_word C_a0,C_word C_a1) C_regparm;
C_regparm static C_word C_fcall stub254(C_word C_buf,C_word C_a0,C_word C_a1){
C_word C_r=C_SCHEME_UNDEFINED,*C_a=(C_word*)C_buf;
float t0=(float )C_c_double(C_a0);
float t1=(float )C_c_double(C_a1);
C_r=C_flonum(&C_a,Toolbox::ran(t0,t1));
return C_r;}

/* from k6413 */
static C_word C_fcall stub248(C_word C_buf,C_word C_a0,C_word C_a1) C_regparm;
C_regparm static C_word C_fcall stub248(C_word C_buf,C_word C_a0,C_word C_a1){
C_word C_r=C_SCHEME_UNDEFINED,*C_a=(C_word*)C_buf;
int t0=(int )C_unfix(C_a0);
int t1=(int )C_unfix(C_a1);
C_r=C_fix((C_word)Toolbox::ran(t0,t1));
return C_r;}

/* from k6402 */
static C_word C_fcall stub242(C_word C_buf,C_word C_a0) C_regparm;
C_regparm static C_word C_fcall stub242(C_word C_buf,C_word C_a0){
C_word C_r=C_SCHEME_UNDEFINED,*C_a=(C_word*)C_buf;
float t0=(float )C_c_double(C_a0);
C_r=C_flonum(&C_a,Toolbox::ran(t0));
return C_r;}

/* from k6395 */
static C_word C_fcall stub238(C_word C_buf,C_word C_a0) C_regparm;
C_regparm static C_word C_fcall stub238(C_word C_buf,C_word C_a0){
C_word C_r=C_SCHEME_UNDEFINED,*C_a=(C_word*)C_buf;
int t0=(int )C_unfix(C_a0);
C_r=C_fix((C_word)Toolbox::ran(t0));
return C_r;}

/* from tb:ran-set! */
static C_word C_fcall stub234(C_word C_buf,C_word C_a0) C_regparm;
C_regparm static C_word C_fcall stub234(C_word C_buf,C_word C_a0){
C_word C_r=C_SCHEME_UNDEFINED,*C_a=(C_word*)C_buf;
C_s64 t0=(C_s64 )C_num_to_int64(C_a0);
Toolbox::ranstate_set(t0);
return C_r;}

/* from k6385 */
static C_word C_fcall stub229(C_word C_buf,C_word C_a0) C_regparm;
C_regparm static C_word C_fcall stub229(C_word C_buf,C_word C_a0){
C_word C_r=C_SCHEME_UNDEFINED,*C_a=(C_word*)C_buf;
float t0=(float )C_c_double(C_a0);
C_r=C_flonum(&C_a,Toolbox::hertz_to_keynum(t0));
return C_r;}

/* from k6378 */
static C_word C_fcall stub225(C_word C_buf,C_word C_a0) C_regparm;
C_regparm static C_word C_fcall stub225(C_word C_buf,C_word C_a0){
C_word C_r=C_SCHEME_UNDEFINED,*C_a=(C_word*)C_buf;
float t0=(float )C_c_double(C_a0);
C_r=C_fix((C_word)Toolbox::keynum_to_pc(t0));
return C_r;}

/* from k6371 */
static C_word C_fcall stub220(C_word C_buf,C_word C_a0) C_regparm;
C_regparm static C_word C_fcall stub220(C_word C_buf,C_word C_a0){
C_word C_r=C_SCHEME_UNDEFINED,*C_a=(C_word*)C_buf;
float t0=(float )C_c_double(C_a0);
C_r=C_flonum(&C_a,Toolbox::keynum_to_hertz(t0));
return C_r;}

/* from k6364 */
static C_word C_fcall stub216(C_word C_buf,C_word C_a0) C_regparm;
C_regparm static C_word C_fcall stub216(C_word C_buf,C_word C_a0){
C_word C_r=C_SCHEME_UNDEFINED,*C_a=(C_word*)C_buf;
float t0=(float )C_c_double(C_a0);
C_r=C_fix((C_word)Toolbox::scaler_to_cents(t0));
return C_r;}

/* from k6357 */
static C_word C_fcall stub211(C_word C_buf,C_word C_a0) C_regparm;
C_regparm static C_word C_fcall stub211(C_word C_buf,C_word C_a0){
C_word C_r=C_SCHEME_UNDEFINED,*C_a=(C_word*)C_buf;
int t0=(int )C_unfix(C_a0);
C_r=C_flonum(&C_a,Toolbox::cents_to_scaler(t0));
return C_r;}

/* from k6350 */
static C_word C_fcall stub204(C_word C_buf,C_word C_a0,C_word C_a1,C_word C_a2) C_regparm;
C_regparm static C_word C_fcall stub204(C_word C_buf,C_word C_a0,C_word C_a1,C_word C_a2){
C_word C_r=C_SCHEME_UNDEFINED,*C_a=(C_word*)C_buf;
float t0=(float )C_c_double(C_a0);
float t1=(float )C_c_double(C_a1);
float t2=(float )C_c_double(C_a2);
C_r=C_flonum(&C_a,Toolbox::rhythm_to_seconds(t0,t1,t2));
return C_r;}

/* from k6335 */
static C_word C_fcall stub196(C_word C_buf,C_word C_a0,C_word C_a1) C_regparm;
C_regparm static C_word C_fcall stub196(C_word C_buf,C_word C_a0,C_word C_a1){
C_word C_r=C_SCHEME_UNDEFINED,*C_a=(C_word*)C_buf;
float t0=(float )C_c_double(C_a0);
float t1=(float )C_c_double(C_a1);
C_r=C_flonum(&C_a,Toolbox::quantize(t0,t1));
return C_r;}

/* from k6324 */
static C_word C_fcall stub189(C_word C_buf,C_word C_a0,C_word C_a1) C_regparm;
C_regparm static C_word C_fcall stub189(C_word C_buf,C_word C_a0,C_word C_a1){
C_word C_r=C_SCHEME_UNDEFINED,*C_a=(C_word*)C_buf;
float t0=(float )C_c_double(C_a0);
int t1=(int )C_unfix(C_a1);
C_r=C_flonum(&C_a,Toolbox::decimals(t0,t1));
return C_r;}

/* from k6313 */
static C_word C_fcall stub184(C_word C_buf,C_word C_a0) C_regparm;
C_regparm static C_word C_fcall stub184(C_word C_buf,C_word C_a0){
C_word C_r=C_SCHEME_UNDEFINED,*C_a=(C_word*)C_buf;
float t0=(float )C_c_double(C_a0);
C_r=C_fix((C_word)Toolbox::float_to_fixnum(t0));
return C_r;}

/* from k6306 */
static C_word C_fcall stub175(C_word C_buf,C_word C_a0,C_word C_a1,C_word C_a2,C_word C_a3,C_word C_a4,C_word C_a5) C_regparm;
C_regparm static C_word C_fcall stub175(C_word C_buf,C_word C_a0,C_word C_a1,C_word C_a2,C_word C_a3,C_word C_a4,C_word C_a5){
C_word C_r=C_SCHEME_UNDEFINED,*C_a=(C_word*)C_buf;
float t0=(float )C_c_double(C_a0);
float t1=(float )C_c_double(C_a1);
float t2=(float )C_c_double(C_a2);
int t3=(int )C_unfix(C_a3);
int t4=(int )C_unfix(C_a4);
float t5=(float )C_c_double(C_a5);
C_r=C_fix((C_word)Toolbox::discrete(t0,t1,t2,t3,t4,t5));
return C_r;}

/* from k6279 */
static C_word C_fcall stub160(C_word C_buf,C_word C_a0,C_word C_a1,C_word C_a2,C_word C_a3,C_word C_a4,C_word C_a5) C_regparm;
C_regparm static C_word C_fcall stub160(C_word C_buf,C_word C_a0,C_word C_a1,C_word C_a2,C_word C_a3,C_word C_a4,C_word C_a5){
C_word C_r=C_SCHEME_UNDEFINED,*C_a=(C_word*)C_buf;
float t0=(float )C_c_double(C_a0);
float t1=(float )C_c_double(C_a1);
float t2=(float )C_c_double(C_a2);
float t3=(float )C_c_double(C_a3);
float t4=(float )C_c_double(C_a4);
float t5=(float )C_c_double(C_a5);
C_r=C_flonum(&C_a,Toolbox::rescale(t0,t1,t2,t3,t4,t5));
return C_r;}

/* from k5865 */
static C_word C_fcall stub95(C_word C_buf,C_word C_a0) C_regparm;
C_regparm static C_word C_fcall stub95(C_word C_buf,C_word C_a0){
C_word C_r=C_SCHEME_UNDEFINED,*C_a=(C_word*)C_buf;
char * t0=(char * )C_string_or_null(C_a0);
set_current_directory(t0);
return C_r;}

/* from f_5847 in cwd in k5838 in k5545 in k5542 in k5538 in k5247 in k5244 in k5241 in k5238 */
static C_word C_fcall stub90(C_word C_buf) C_regparm;
C_regparm static C_word C_fcall stub90(C_word C_buf){
C_word C_r=C_SCHEME_UNDEFINED,*C_a=(C_word*)C_buf;
C_r=C_mpointer(&C_a,(void*)get_current_directory());
return C_r;}

C_noret_decl(C_grace_toplevel)
C_externexport void C_ccall C_grace_toplevel(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_5240)
static void C_ccall f_5240(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_5243)
static void C_ccall f_5243(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_5246)
static void C_ccall f_5246(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_5249)
static void C_ccall f_5249(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_32850)
static void C_ccall f_32850(C_word c,C_word t0,C_word t1,C_word t2,...) C_noret;
C_noret_decl(f_32850)
static void C_ccall f_32850r(C_word t0,C_word t1,C_word t2,C_word t4) C_noret;
C_noret_decl(f_5540)
static void C_ccall f_5540(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_5544)
static void C_ccall f_5544(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_32798)
static void C_ccall f_32798(C_word c,C_word t0,C_word t1,C_word t2,C_word t3) C_noret;
C_noret_decl(f_32845)
static void C_ccall f_32845(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_32835)
static void C_ccall f_32835(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_32802)
static void C_ccall f_32802(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_5547)
static void C_ccall f_5547(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_32792)
static void C_ccall f_32792(C_word c,C_word t0,C_word t1,C_word t2,...) C_noret;
C_noret_decl(f_32792)
static void C_ccall f_32792r(C_word t0,C_word t1,C_word t2,C_word t4) C_noret;
C_noret_decl(f_5840)
static void C_ccall f_5840(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_7606)
static void C_ccall f_7606(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_32576)
static void C_fcall f_32576(C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_32790)
static void C_ccall f_32790(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_32610)
static void C_ccall f_32610(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_32622)
static void C_ccall f_32622(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_32626)
static void C_ccall f_32626(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_32630)
static void C_ccall f_32630(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_32774)
static void C_ccall f_32774(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_32636)
static void C_fcall f_32636(C_word t0,C_word t1,C_word t2,C_word t3,C_word t4,C_word t5,C_word t6,C_word t7,C_word t8,C_word t9,C_word t10,C_word t11,C_word t12,C_word t13) C_noret;
C_noret_decl(f_32656)
static void C_fcall f_32656(C_word t0,C_word t1) C_noret;
C_noret_decl(f_32659)
static void C_fcall f_32659(C_word t0,C_word t1) C_noret;
C_noret_decl(f_32667)
static void C_ccall f_32667(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_32674)
static void C_ccall f_32674(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_32677)
static void C_ccall f_32677(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_32681)
static void C_ccall f_32681(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_32688)
static void C_ccall f_32688(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_32691)
static void C_ccall f_32691(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_32695)
static void C_ccall f_32695(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_32702)
static void C_ccall f_32702(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_32646)
static void C_ccall f_32646(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_32599)
static void C_ccall f_32599(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_32589)
static void C_ccall f_32589(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_32592)
static void C_ccall f_32592(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_7609)
static void C_ccall f_7609(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_32562)
static void C_ccall f_32562(C_word c,C_word t0,C_word t1,C_word t2,C_word t3) C_noret;
C_noret_decl(f_32570)
static void C_ccall f_32570(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_32574)
static void C_ccall f_32574(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_14852)
static void C_ccall f_14852(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_14903)
static void C_ccall f_14903(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_32552)
static void C_ccall f_32552(C_word c,C_word t0,C_word t1,C_word t2,C_word t3) C_noret;
C_noret_decl(f_32560)
static void C_ccall f_32560(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_15008)
static void C_ccall f_15008(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_32449)
static void C_ccall f_32449(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,...) C_noret;
C_noret_decl(f_32449)
static void C_ccall f_32449r(C_word t0,C_word t1,C_word t2,C_word t3,C_word t5) C_noret;
C_noret_decl(f_32512)
static void C_ccall f_32512(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_32516)
static void C_ccall f_32516(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_32530)
static void C_fcall f_32530(C_word t0,C_word t1) C_noret;
C_noret_decl(f_32452)
static void C_fcall f_32452(C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_32472)
static void C_ccall f_32472(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_32476)
static void C_ccall f_32476(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_15011)
static void C_ccall f_15011(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_32435)
static void C_ccall f_32435(C_word c,C_word t0,C_word t1,C_word t2,C_word t3) C_noret;
C_noret_decl(f_32443)
static void C_ccall f_32443(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_32447)
static void C_ccall f_32447(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_15204)
static void C_ccall f_15204(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_32409)
static void C_ccall f_32409(C_word c,C_word t0,C_word t1,C_word t2,C_word t3) C_noret;
C_noret_decl(f_32413)
static void C_ccall f_32413(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_32419)
static void C_ccall f_32419(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_32430)
static void C_ccall f_32430(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_32426)
static void C_ccall f_32426(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_15273)
static void C_ccall f_15273(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_32387)
static void C_ccall f_32387(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_16518)
static void C_ccall f_16518(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_32367)
static void C_ccall f_32367(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_16521)
static void C_ccall f_16521(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_32327)
static void C_ccall f_32327(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_16524)
static void C_ccall f_16524(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_32233)
static void C_ccall f_32233(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4) C_noret;
C_noret_decl(f_32237)
static void C_ccall f_32237(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_32240)
static void C_ccall f_32240(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_32258)
static void C_ccall f_32258(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_32261)
static void C_ccall f_32261(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_32292)
static void C_ccall f_32292(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_32264)
static void C_fcall f_32264(C_word t0,C_word t1) C_noret;
C_noret_decl(f_32270)
static void C_ccall f_32270(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_32223)
static void C_ccall f_32223(C_word c,C_word t0,C_word t1,C_word t2,C_word t3) C_noret;
C_noret_decl(f_32217)
static void C_ccall f_32217(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_16527)
static void C_ccall f_16527(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_32125)
static void C_ccall f_32125(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_32127)
static void C_ccall f_32127(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4) C_noret;
C_noret_decl(f_32131)
static void C_ccall f_32131(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_32134)
static void C_ccall f_32134(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_32137)
static void C_ccall f_32137(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_32177)
static void C_ccall f_32177(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_32169)
static void C_ccall f_32169(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_32140)
static void C_ccall f_32140(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_32143)
static void C_ccall f_32143(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_32146)
static void C_ccall f_32146(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_32117)
static void C_ccall f_32117(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_16530)
static void C_ccall f_16530(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_32089)
static void C_ccall f_32089(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_16533)
static void C_ccall f_16533(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_32053)
static void C_ccall f_32053(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4) C_noret;
C_noret_decl(f_32065)
static void C_ccall f_32065(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_32061)
static void C_ccall f_32061(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_32035)
static void C_ccall f_32035(C_word c,C_word t0,C_word t1,C_word t2,C_word t3) C_noret;
C_noret_decl(f_32029)
static void C_ccall f_32029(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_16536)
static void C_ccall f_16536(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_31943)
static void C_ccall f_31943(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4) C_noret;
C_noret_decl(f_31947)
static void C_ccall f_31947(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_31950)
static void C_ccall f_31950(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_31953)
static void C_ccall f_31953(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_31966)
static void C_ccall f_31966(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_31912)
static void C_ccall f_31912(C_word c,C_word t0,C_word t1,C_word t2,C_word t3) C_noret;
C_noret_decl(f_31916)
static void C_ccall f_31916(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_31931)
static void C_ccall f_31931(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_31906)
static void C_ccall f_31906(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_16539)
static void C_ccall f_16539(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_31792)
static void C_ccall f_31792(C_word c,C_word t0,C_word t1,C_word t2,C_word t3) C_noret;
C_noret_decl(f_31808)
static void C_ccall f_31808(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_31819)
static void C_ccall f_31819(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_31786)
static void C_ccall f_31786(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_16595)
static void C_ccall f_16595(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_31653)
static void C_ccall f_31653(C_word c,C_word t0,C_word t1,C_word t2,C_word t3) C_noret;
C_noret_decl(f_31676)
static void C_ccall f_31676(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_31673)
static void C_ccall f_31673(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_31647)
static void C_ccall f_31647(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_16598)
static void C_ccall f_16598(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_31501)
static void C_ccall f_31501(C_word c,C_word t0,C_word t1,C_word t2,C_word t3) C_noret;
C_noret_decl(f_31519)
static void C_ccall f_31519(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_31528)
static void C_ccall f_31528(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_31495)
static void C_ccall f_31495(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_16601)
static void C_ccall f_16601(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_31448)
static void C_ccall f_31448(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4) C_noret;
C_noret_decl(f_31452)
static void C_ccall f_31452(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_31455)
static void C_ccall f_31455(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_31471)
static void C_ccall f_31471(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_31430)
static void C_ccall f_31430(C_word c,C_word t0,C_word t1,C_word t2,C_word t3) C_noret;
C_noret_decl(f_31424)
static void C_ccall f_31424(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_16604)
static void C_ccall f_16604(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_31348)
static void C_ccall f_31348(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_16743)
static void C_ccall f_16743(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_31274)
static void C_ccall f_31274(C_word c,C_word t0,C_word t1,C_word t2,C_word t3) C_noret;
C_noret_decl(f_31281)
static void C_ccall f_31281(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_31268)
static void C_ccall f_31268(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_16746)
static void C_ccall f_16746(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_31164)
static void C_ccall f_31164(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4) C_noret;
C_noret_decl(f_31172)
static void C_ccall f_31172(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_31138)
static void C_ccall f_31138(C_word c,C_word t0,C_word t1,C_word t2,C_word t3) C_noret;
C_noret_decl(f_31155)
static void C_ccall f_31155(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_31146)
static void C_fcall f_31146(C_word t0,C_word t1) C_noret;
C_noret_decl(f_31132)
static void C_ccall f_31132(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_16749)
static void C_ccall f_16749(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_31088)
static void C_ccall f_31088(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_16752)
static void C_ccall f_16752(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_31006)
static void C_ccall f_31006(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4) C_noret;
C_noret_decl(f_31017)
static void C_ccall f_31017(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_31019)
static void C_fcall f_31019(C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_31048)
static void C_ccall f_31048(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_30984)
static void C_ccall f_30984(C_word c,C_word t0,C_word t1,C_word t2,C_word t3) C_noret;
C_noret_decl(f_31000)
static void C_ccall f_31000(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_30978)
static void C_ccall f_30978(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_16755)
static void C_ccall f_16755(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_30931)
static void C_ccall f_30931(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4) C_noret;
C_noret_decl(f_30935)
static void C_ccall f_30935(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_30942)
static void C_ccall f_30942(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_30909)
static void C_ccall f_30909(C_word c,C_word t0,C_word t1,C_word t2,C_word t3) C_noret;
C_noret_decl(f_30925)
static void C_ccall f_30925(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_30903)
static void C_ccall f_30903(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_16758)
static void C_ccall f_16758(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_30771)
static void C_ccall f_30771(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4) C_noret;
C_noret_decl(f_30811)
static void C_ccall f_30811(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_30775)
static void C_ccall f_30775(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_30791)
static void C_ccall f_30791(C_word c,C_word t0,C_word t1,C_word t2,...) C_noret;
C_noret_decl(f_30791)
static void C_ccall f_30791r(C_word t0,C_word t1,C_word t2,C_word t4) C_noret;
C_noret_decl(f_30803)
static void C_ccall f_30803(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_30807)
static void C_ccall f_30807(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_30799)
static void C_ccall f_30799(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_30710)
static void C_ccall f_30710(C_word c,C_word t0,C_word t1,C_word t2,C_word t3) C_noret;
C_noret_decl(f_30757)
static void C_ccall f_30757(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_30717)
static void C_fcall f_30717(C_word t0,C_word t1) C_noret;
C_noret_decl(f_30728)
static void C_ccall f_30728(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_30704)
static void C_ccall f_30704(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_16761)
static void C_ccall f_16761(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_30684)
static void C_ccall f_30684(C_word c,C_word t0,C_word t1,C_word t2,C_word t3) C_noret;
C_noret_decl(f_30678)
static void C_ccall f_30678(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_16764)
static void C_ccall f_16764(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_30658)
static void C_ccall f_30658(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_30662)
static void C_ccall f_30662(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_30650)
static void C_ccall f_30650(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_16767)
static void C_ccall f_16767(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_30630)
static void C_ccall f_30630(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_30634)
static void C_ccall f_30634(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_30622)
static void C_ccall f_30622(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_16770)
static void C_ccall f_16770(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_30602)
static void C_ccall f_30602(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_30606)
static void C_ccall f_30606(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_30594)
static void C_ccall f_30594(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_16773)
static void C_ccall f_16773(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_30574)
static void C_ccall f_30574(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_30578)
static void C_ccall f_30578(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_30566)
static void C_ccall f_30566(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_16776)
static void C_ccall f_16776(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_30465)
static void C_ccall f_30465(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4) C_noret;
C_noret_decl(f_30435)
static void C_ccall f_30435(C_word c,C_word t0,C_word t1,C_word t2,C_word t3) C_noret;
C_noret_decl(f_30459)
static void C_ccall f_30459(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_30429)
static void C_ccall f_30429(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_16779)
static void C_ccall f_16779(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_30379)
static void C_ccall f_30379(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_30381)
static void C_ccall f_30381(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4) C_noret;
C_noret_decl(f_30385)
static void C_ccall f_30385(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_30413)
static void C_ccall f_30413(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_30405)
static void C_ccall f_30405(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_30401)
static void C_ccall f_30401(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_30388)
static void C_ccall f_30388(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_30371)
static void C_ccall f_30371(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_16782)
static void C_ccall f_16782(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_30318)
static void C_ccall f_30318(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_30320)
static void C_ccall f_30320(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4) C_noret;
C_noret_decl(f_30324)
static void C_ccall f_30324(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_30355)
static void C_ccall f_30355(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_30347)
static void C_ccall f_30347(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_30343)
static void C_ccall f_30343(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_30327)
static void C_ccall f_30327(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_30330)
static void C_ccall f_30330(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_30310)
static void C_ccall f_30310(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_16785)
static void C_ccall f_16785(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_30260)
static void C_ccall f_30260(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4) C_noret;
C_noret_decl(f_30274)
static void C_ccall f_30274(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_30266)
static void C_ccall f_30266(C_word c,C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_30225)
static void C_ccall f_30225(C_word c,C_word t0,C_word t1,C_word t2,C_word t3) C_noret;
C_noret_decl(f_30258)
static void C_ccall f_30258(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_30219)
static void C_ccall f_30219(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_16788)
static void C_ccall f_16788(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_30166)
static void C_ccall f_30166(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4) C_noret;
C_noret_decl(f_30170)
static void C_ccall f_30170(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_30183)
static void C_ccall f_30183(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_30175)
static void C_ccall f_30175(C_word c,C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_30123)
static void C_ccall f_30123(C_word c,C_word t0,C_word t1,C_word t2,C_word t3) C_noret;
C_noret_decl(f_30156)
static void C_ccall f_30156(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_30117)
static void C_ccall f_30117(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_16791)
static void C_ccall f_16791(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_30037)
static void C_ccall f_30037(C_word c,C_word t0,C_word t1,C_word t2,C_word t3) C_noret;
C_noret_decl(f_30031)
static void C_ccall f_30031(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_16794)
static void C_ccall f_16794(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_29800)
static void C_ccall f_29800(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4) C_noret;
C_noret_decl(f_29804)
static void C_ccall f_29804(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_29812)
static void C_fcall f_29812(C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_29835)
static void C_ccall f_29835(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_29838)
static void C_ccall f_29838(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_29841)
static void C_ccall f_29841(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_29844)
static void C_ccall f_29844(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_29904)
static void C_ccall f_29904(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_29911)
static void C_ccall f_29911(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_29921)
static void C_ccall f_29921(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_29931)
static void C_ccall f_29931(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_29945)
static void C_ccall f_29945(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_29955)
static void C_ccall f_29955(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_29965)
static void C_ccall f_29965(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_29975)
static void C_ccall f_29975(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_29847)
static void C_fcall f_29847(C_word t0,C_word t1) C_noret;
C_noret_decl(f_29871)
static void C_fcall f_29871(C_word t0,C_word t1) C_noret;
C_noret_decl(f_29850)
static void C_fcall f_29850(C_word t0,C_word t1) C_noret;
C_noret_decl(f_29757)
static void C_ccall f_29757(C_word c,C_word t0,C_word t1,C_word t2,C_word t3) C_noret;
C_noret_decl(f_29790)
static void C_ccall f_29790(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_29751)
static void C_ccall f_29751(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_16797)
static void C_ccall f_16797(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_29669)
static void C_ccall f_29669(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4) C_noret;
C_noret_decl(f_29673)
static void C_ccall f_29673(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_29679)
static void C_ccall f_29679(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_29699)
static void C_ccall f_29699(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_29643)
static void C_ccall f_29643(C_word c,C_word t0,C_word t1,C_word t2,C_word t3) C_noret;
C_noret_decl(f_29653)
static void C_fcall f_29653(C_word t0,C_word t1) C_noret;
C_noret_decl(f_29637)
static void C_ccall f_29637(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_16800)
static void C_ccall f_16800(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_29514)
static void C_ccall f_29514(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4) C_noret;
C_noret_decl(f_29518)
static void C_ccall f_29518(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_29446)
static void C_ccall f_29446(C_word c,C_word t0,C_word t1,C_word t2,C_word t3) C_noret;
C_noret_decl(f_29465)
static void C_ccall f_29465(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_29500)
static void C_ccall f_29500(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_29471)
static void C_fcall f_29471(C_word t0,C_word t1) C_noret;
C_noret_decl(f_29475)
static void C_ccall f_29475(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_29489)
static void C_ccall f_29489(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_29478)
static void C_fcall f_29478(C_word t0,C_word t1) C_noret;
C_noret_decl(f_29459)
static void C_fcall f_29459(C_word t0,C_word t1) C_noret;
C_noret_decl(f_29440)
static void C_ccall f_29440(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_16803)
static void C_ccall f_16803(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_29168)
static void C_ccall f_29168(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_17326)
static void C_ccall f_17326(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_29120)
static void C_ccall f_29120(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_29112)
static void C_ccall f_29112(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_17329)
static void C_ccall f_17329(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_28992)
static void C_ccall f_28992(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4) C_noret;
C_noret_decl(f_17335)
static void C_ccall f_17335(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_17810)
static void C_ccall f_17810(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_17844)
static void C_ccall f_17844(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_17836)
static void C_ccall f_17836(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_17832)
static void C_ccall f_17832(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_17817)
static void C_ccall f_17817(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_17821)
static void C_ccall f_17821(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_17814)
static void C_ccall f_17814(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_17353)
static void C_fcall f_17353(C_word t0,C_word t1) C_noret;
C_noret_decl(f_17803)
static void C_ccall f_17803(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_17799)
static void C_ccall f_17799(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_17360)
static void C_fcall f_17360(C_word t0,C_word t1) C_noret;
C_noret_decl(f_17674)
static void C_fcall f_17674(C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_17695)
static void C_ccall f_17695(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_17697)
static void C_fcall f_17697(C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_17711)
static void C_ccall f_17711(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_17764)
static void C_ccall f_17764(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_17714)
static void C_fcall f_17714(C_word t0,C_word t1) C_noret;
C_noret_decl(f_17749)
static void C_ccall f_17749(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_17717)
static void C_fcall f_17717(C_word t0,C_word t1) C_noret;
C_noret_decl(f_17730)
static void C_ccall f_17730(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_17742)
static void C_ccall f_17742(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_17734)
static void C_ccall f_17734(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_17720)
static void C_fcall f_17720(C_word t0,C_word t1) C_noret;
C_noret_decl(f_17684)
static void C_ccall f_17684(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_17363)
static void C_ccall f_17363(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_17638)
static void C_fcall f_17638(C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_17664)
static void C_ccall f_17664(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_17649)
static void C_ccall f_17649(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_17366)
static void C_ccall f_17366(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_17370)
static void C_ccall f_17370(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_17582)
static void C_fcall f_17582(C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_17592)
static void C_ccall f_17592(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_17595)
static void C_ccall f_17595(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_17616)
static void C_ccall f_17616(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_17598)
static void C_fcall f_17598(C_word t0,C_word t1) C_noret;
C_noret_decl(f_17602)
static void C_ccall f_17602(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_17373)
static void C_ccall f_17373(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_17376)
static void C_fcall f_17376(C_word t0,C_word t1) C_noret;
C_noret_decl(f_17545)
static void C_ccall f_17545(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_17553)
static void C_ccall f_17553(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_17549)
static void C_ccall f_17549(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_17379)
static void C_fcall f_17379(C_word t0,C_word t1) C_noret;
C_noret_decl(f_17407)
static void C_ccall f_17407(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_17410)
static void C_ccall f_17410(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_17413)
static void C_ccall f_17413(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_17416)
static void C_ccall f_17416(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_17419)
static void C_ccall f_17419(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_17478)
static void C_ccall f_17478(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_28946)
static void C_ccall f_28946(C_word c,C_word t0,C_word t1,C_word t2,C_word t3) C_noret;
C_noret_decl(f_28962)
static void C_ccall f_28962(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_28965)
static void C_ccall f_28965(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_28968)
static void C_fcall f_28968(C_word t0,C_word t1) C_noret;
C_noret_decl(f_28971)
static void C_fcall f_28971(C_word t0,C_word t1) C_noret;
C_noret_decl(f_28982)
static void C_ccall f_28982(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_28940)
static void C_ccall f_28940(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_17851)
static void C_ccall f_17851(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_28801)
static void C_ccall f_28801(C_word c,C_word t0,C_word t1,C_word t2,C_word t3) C_noret;
C_noret_decl(f_28840)
static void C_ccall f_28840(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_28814)
static void C_fcall f_28814(C_word t0,C_word t1) C_noret;
C_noret_decl(f_28795)
static void C_ccall f_28795(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_17854)
static void C_ccall f_17854(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_28383)
static void C_ccall f_28383(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4) C_noret;
C_noret_decl(f_28387)
static void C_ccall f_28387(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_28399)
static void C_ccall f_28399(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_28457)
static void C_ccall f_28457(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_28460)
static void C_ccall f_28460(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_28463)
static void C_ccall f_28463(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_28675)
static void C_ccall f_28675(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_28613)
static void C_ccall f_28613(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_28647)
static void C_ccall f_28647(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_28622)
static void C_fcall f_28622(C_word t0,C_word t1) C_noret;
C_noret_decl(f_28633)
static void C_ccall f_28633(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_28629)
static void C_ccall f_28629(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_28472)
static void C_fcall f_28472(C_word t0,C_word t1) C_noret;
C_noret_decl(f_28550)
static void C_ccall f_28550(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_28591)
static void C_ccall f_28591(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_28595)
static void C_ccall f_28595(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_28599)
static void C_ccall f_28599(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_28554)
static void C_ccall f_28554(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_28558)
static void C_ccall f_28558(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_28585)
static void C_ccall f_28585(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_28561)
static void C_fcall f_28561(C_word t0,C_word t1) C_noret;
C_noret_decl(f_28475)
static void C_fcall f_28475(C_word t0,C_word t1) C_noret;
C_noret_decl(f_28547)
static void C_ccall f_28547(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_28489)
static void C_ccall f_28489(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_28491)
static void C_fcall f_28491(C_word t0,C_word t1,C_word t2,C_word t3) C_noret;
C_noret_decl(f_28539)
static void C_ccall f_28539(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_28510)
static void C_ccall f_28510(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_28527)
static void C_ccall f_28527(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_28513)
static void C_fcall f_28513(C_word t0,C_word t1) C_noret;
C_noret_decl(f_28506)
static void C_ccall f_28506(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_28478)
static void C_ccall f_28478(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_28408)
static void C_fcall f_28408(C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_28418)
static void C_ccall f_28418(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_28424)
static void C_ccall f_28424(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_28396)
static void C_ccall f_28396(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_28344)
static void C_ccall f_28344(C_word c,C_word t0,C_word t1,C_word t2,C_word t3) C_noret;
C_noret_decl(f_28361)
static void C_ccall f_28361(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_28377)
static void C_ccall f_28377(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_28355)
static void C_fcall f_28355(C_word t0,C_word t1) C_noret;
C_noret_decl(f_28338)
static void C_ccall f_28338(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_17857)
static void C_ccall f_17857(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_28262)
static void C_ccall f_28262(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_17860)
static void C_ccall f_17860(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_28238)
static void C_ccall f_28238(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4) C_noret;
C_noret_decl(f_28250)
static void C_ccall f_28250(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_28246)
static void C_ccall f_28246(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_28224)
static void C_ccall f_28224(C_word c,C_word t0,C_word t1,C_word t2,C_word t3) C_noret;
C_noret_decl(f_28232)
static void C_ccall f_28232(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_28218)
static void C_ccall f_28218(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_17863)
static void C_ccall f_17863(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_28210)
static void C_ccall f_28210(C_word c,C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_21653)
static void C_ccall f_21653(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_21656)
static void C_ccall f_21656(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_21822)
static void C_ccall f_21822(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_21818)
static void C_ccall f_21818(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_21808)
static void C_fcall f_21808(C_word t0,C_word t1) C_noret;
C_noret_decl(f_21663)
static void C_ccall f_21663(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_21667)
static void C_ccall f_21667(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_21670)
static void C_fcall f_21670(C_word t0,C_word t1) C_noret;
C_noret_decl(f_21681)
static void C_ccall f_21681(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_21689)
static void C_ccall f_21689(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_21761)
static void C_ccall f_21761(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_21769)
static void C_ccall f_21769(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_21765)
static void C_ccall f_21765(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_21757)
static void C_ccall f_21757(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_21753)
static void C_ccall f_21753(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_21725)
static void C_ccall f_21725(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_21721)
static void C_ccall f_21721(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_21685)
static void C_ccall f_21685(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_18300)
static void C_ccall f_18300(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_28196)
static void C_ccall f_28196(C_word c,C_word t0,C_word t1,C_word t2,C_word t3) C_noret;
C_noret_decl(f_18303)
static void C_ccall f_18303(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_28167)
static void C_ccall f_28167(C_word c,C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_28171)
static void C_ccall f_28171(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_18306)
static void C_ccall f_18306(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_28164)
static void C_ccall f_28164(C_word c,C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_18309)
static void C_ccall f_18309(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_28022)
static void C_ccall f_28022(C_word c,C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_21835)
static void C_ccall f_21835(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_21967)
static void C_ccall f_21967(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_21838)
static void C_ccall f_21838(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_21849)
static void C_ccall f_21849(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_21857)
static void C_ccall f_21857(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_21881)
static void C_ccall f_21881(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_21884)
static void C_fcall f_21884(C_word t0,C_word t1) C_noret;
C_noret_decl(f_21892)
static void C_ccall f_21892(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_21900)
static void C_ccall f_21900(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_21920)
static void C_ccall f_21920(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_21916)
static void C_ccall f_21916(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_21896)
static void C_ccall f_21896(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_21888)
static void C_ccall f_21888(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_21877)
static void C_ccall f_21877(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_21853)
static void C_ccall f_21853(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_21829)
static void C_ccall f_21829(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_26751)
static void C_ccall f_26751(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_26754)
static void C_ccall f_26754(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_26757)
static void C_ccall f_26757(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_26760)
static void C_ccall f_26760(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_26763)
static void C_ccall f_26763(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_26766)
static void C_ccall f_26766(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_26769)
static void C_ccall f_26769(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_26772)
static void C_ccall f_26772(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_26775)
static void C_ccall f_26775(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_26778)
static void C_ccall f_26778(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_26781)
static void C_ccall f_26781(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_26906)
static void C_ccall f_26906(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_26909)
static void C_ccall f_26909(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_26912)
static void C_ccall f_26912(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_28016)
static void C_ccall f_28016(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,...) C_noret;
C_noret_decl(f_28016)
static void C_ccall f_28016r(C_word t0,C_word t1,C_word t2,C_word t3,C_word t5) C_noret;
C_noret_decl(f_27570)
static void C_ccall f_27570(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_27573)
static void C_ccall f_27573(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_27851)
static void C_fcall f_27851(C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_27959)
static void C_ccall f_27959(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_27871)
static void C_fcall f_27871(C_word t0,C_word t1) C_noret;
C_noret_decl(f_27880)
static void C_fcall f_27880(C_word t0,C_word t1) C_noret;
C_noret_decl(f_27884)
static void C_ccall f_27884(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_27888)
static void C_ccall f_27888(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_27896)
static void C_fcall f_27896(C_word t0,C_word t1) C_noret;
C_noret_decl(f_27892)
static void C_ccall f_27892(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_27861)
static void C_ccall f_27861(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_27576)
static void C_ccall f_27576(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_27579)
static void C_ccall f_27579(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_27582)
static void C_ccall f_27582(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_27585)
static void C_ccall f_27585(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_27588)
static void C_ccall f_27588(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_27845)
static void C_ccall f_27845(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_27744)
static void C_fcall f_27744(C_word t0,C_word t1) C_noret;
C_noret_decl(f_27751)
static void C_ccall f_27751(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_27753)
static void C_fcall f_27753(C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_27825)
static void C_ccall f_27825(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_27777)
static void C_fcall f_27777(C_word t0,C_word t1) C_noret;
C_noret_decl(f_27780)
static void C_ccall f_27780(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_27801)
static void C_ccall f_27801(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_27767)
static void C_ccall f_27767(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_27591)
static void C_ccall f_27591(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_27733)
static void C_ccall f_27733(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_27721)
static void C_ccall f_27721(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_27717)
static void C_ccall f_27717(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_27598)
static void C_fcall f_27598(C_word t0,C_word t1) C_noret;
C_noret_decl(f_27555)
static void C_ccall f_27555(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_28014)
static void C_ccall f_28014(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_27545)
static void C_ccall f_27545(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_27208)
static void C_ccall f_27208(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_27549)
static void C_ccall f_27549(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_27487)
static void C_ccall f_27487(C_word c,C_word t0,C_word t1,...) C_noret;
C_noret_decl(f_27487)
static void C_ccall f_27487r(C_word t0,C_word t1,C_word t3) C_noret;
C_noret_decl(f_27505)
static void C_fcall f_27505(C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_27515)
static void C_ccall f_27515(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_27491)
static void C_ccall f_27491(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_27478)
static void C_ccall f_27478(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_27186)
static void C_ccall f_27186(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_27482)
static void C_ccall f_27482(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_27472)
static void C_ccall f_27472(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_27168)
static void C_ccall f_27168(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_27463)
static void C_ccall f_27463(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_27177)
static void C_ccall f_27177(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_27467)
static void C_ccall f_27467(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_27400)
static void C_ccall f_27400(C_word c,C_word t0,C_word t1,...) C_noret;
C_noret_decl(f_27400)
static void C_ccall f_27400r(C_word t0,C_word t1,C_word t3) C_noret;
C_noret_decl(f_27425)
static void C_fcall f_27425(C_word t0,C_word t1) C_noret;
C_noret_decl(f_27133)
static void C_ccall f_27133(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_27413)
static void C_ccall f_27413(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_27232)
static void C_ccall f_27232(C_word c,C_word t0,C_word t1,C_word t2,...) C_noret;
C_noret_decl(f_27232)
static void C_ccall f_27232r(C_word t0,C_word t1,C_word t2,C_word t4) C_noret;
C_noret_decl(f_27351)
static void C_fcall f_27351(C_word t0,C_word t1) C_noret;
C_noret_decl(f_27346)
static void C_fcall f_27346(C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_27234)
static void C_fcall f_27234(C_word t0,C_word t1,C_word t2,C_word t3) C_noret;
C_noret_decl(f_27341)
static void C_ccall f_27341(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_27345)
static void C_ccall f_27345(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_27337)
static void C_ccall f_27337(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_27305)
static void C_fcall f_27305(C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_27330)
static void C_ccall f_27330(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_27334)
static void C_ccall f_27334(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_27315)
static void C_ccall f_27315(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_27294)
static void C_ccall f_27294(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_27264)
static void C_fcall f_27264(C_word t0,C_word t1) C_noret;
C_noret_decl(f_27236)
static void C_fcall f_27236(C_word t0,C_word t1) C_noret;
C_noret_decl(f_27213)
static void C_ccall f_27213(C_word c,C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_27218)
static void C_ccall f_27218(C_word c,C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_27223)
static void C_ccall f_27223(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_27191)
static void C_fcall f_27191(C_word t0,C_word t1) C_noret;
C_noret_decl(f_27195)
static void C_ccall f_27195(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_27147)
static void C_fcall f_27147(C_word t0,C_word t1,C_word t2,C_word t3) C_noret;
C_noret_decl(f_27151)
static void C_ccall f_27151(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_27138)
static void C_fcall f_27138(C_word t0,C_word t1) C_noret;
C_noret_decl(f_27142)
static void C_ccall f_27142(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_27126)
static void C_ccall f_27126(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_27123)
static void C_ccall f_27123(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_27109)
static void C_ccall f_27109(C_word c,C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_27114)
static void C_ccall f_27114(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_27095)
static void C_ccall f_27095(C_word c,C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_27100)
static void C_ccall f_27100(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_26914)
static void C_ccall f_26914(C_word c,C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_26975)
static void C_ccall f_26975(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_26977)
static void C_fcall f_26977(C_word t0,C_word t1,C_word t2,C_word t3,C_word t4) C_noret;
C_noret_decl(f_27003)
static void C_fcall f_27003(C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_27043)
static void C_ccall f_27043(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_27085)
static void C_ccall f_27085(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_27055)
static void C_ccall f_27055(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_27040)
static void C_fcall f_27040(C_word t0,C_word t1) C_noret;
C_noret_decl(f_26961)
static void C_ccall f_26961(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_26926)
static void C_ccall f_26926(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_26953)
static void C_ccall f_26953(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_26934)
static void C_ccall f_26934(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_26941)
static void C_ccall f_26941(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_26945)
static void C_ccall f_26945(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_26949)
static void C_ccall f_26949(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_27023)
static void C_ccall f_27023(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_27001)
static void C_ccall f_27001(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_26987)
static void C_ccall f_26987(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_26990)
static void C_ccall f_26990(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_26968)
static void C_ccall f_26968(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_26897)
static void C_ccall f_26897(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_26902)
static void C_ccall f_26902(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_26840)
static void C_ccall f_26840(C_word c,C_word t0,C_word t1,...) C_noret;
C_noret_decl(f_26840)
static void C_ccall f_26840r(C_word t0,C_word t1,C_word t3) C_noret;
C_noret_decl(f_26873)
static void C_fcall f_26873(C_word t0,C_word t1) C_noret;
C_noret_decl(f_26853)
static void C_fcall f_26853(C_word t0,C_word t1) C_noret;
C_noret_decl(f_26861)
static void C_ccall f_26861(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4) C_noret;
C_noret_decl(f_26844)
static void C_ccall f_26844(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_26783)
static void C_ccall f_26783(C_word c,C_word t0,C_word t1,...) C_noret;
C_noret_decl(f_26783)
static void C_ccall f_26783r(C_word t0,C_word t1,C_word t3) C_noret;
C_noret_decl(f_26816)
static void C_fcall f_26816(C_word t0,C_word t1) C_noret;
C_noret_decl(f_26796)
static void C_fcall f_26796(C_word t0,C_word t1) C_noret;
C_noret_decl(f_26804)
static void C_ccall f_26804(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4) C_noret;
C_noret_decl(f_26787)
static void C_ccall f_26787(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_26693)
static void C_ccall f_26693(C_word c,C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_26747)
static void C_ccall f_26747(C_word c,C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_26742)
static void C_ccall f_26742(C_word c,C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_26705)
static void C_ccall f_26705(C_word c,C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_26711)
static void C_ccall f_26711(C_word c,C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_26737)
static void C_ccall f_26737(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_26741)
static void C_ccall f_26741(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_26717)
static void C_ccall f_26717(C_word c,C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_26735)
static void C_ccall f_26735(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_26732)
static void C_ccall f_26732(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_26728)
static void C_ccall f_26728(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_26721)
static void C_ccall f_26721(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_26678)
static void C_ccall f_26678(C_word c,C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_26683)
static void C_ccall f_26683(C_word c,C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_26650)
static void C_ccall f_26650(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4) C_noret;
C_noret_decl(f_26655)
static void C_ccall f_26655(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4,C_word t5,C_word t6) C_noret;
C_noret_decl(f_26622)
static void C_ccall f_26622(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4) C_noret;
C_noret_decl(f_26627)
static void C_ccall f_26627(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4,C_word t5,C_word t6) C_noret;
C_noret_decl(f_26594)
static void C_ccall f_26594(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4) C_noret;
C_noret_decl(f_26599)
static void C_ccall f_26599(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4,C_word t5,C_word t6) C_noret;
C_noret_decl(f_26566)
static void C_ccall f_26566(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4,C_word t5) C_noret;
C_noret_decl(f_26571)
static void C_ccall f_26571(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4,C_word t5,C_word t6) C_noret;
C_noret_decl(f_26538)
static void C_ccall f_26538(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4,C_word t5) C_noret;
C_noret_decl(f_26543)
static void C_ccall f_26543(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4,C_word t5,C_word t6) C_noret;
C_noret_decl(f_26510)
static void C_ccall f_26510(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4,C_word t5) C_noret;
C_noret_decl(f_26515)
static void C_ccall f_26515(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4,C_word t5,C_word t6) C_noret;
C_noret_decl(f_26482)
static void C_ccall f_26482(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4) C_noret;
C_noret_decl(f_26487)
static void C_ccall f_26487(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4,C_word t5,C_word t6) C_noret;
C_noret_decl(f_26454)
static void C_ccall f_26454(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4,C_word t5,C_word t6) C_noret;
C_noret_decl(f_26459)
static void C_ccall f_26459(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4,C_word t5,C_word t6) C_noret;
C_noret_decl(f_26426)
static void C_ccall f_26426(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4,C_word t5,C_word t6) C_noret;
C_noret_decl(f_26431)
static void C_ccall f_26431(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4,C_word t5,C_word t6) C_noret;
C_noret_decl(f_26403)
static void C_ccall f_26403(C_word c,C_word t0,C_word t1,C_word t2,C_word t3) C_noret;
C_noret_decl(f_26408)
static void C_ccall f_26408(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4) C_noret;
C_noret_decl(f_26407)
static void C_ccall f_26407(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_26384)
static void C_ccall f_26384(C_word c,C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_26389)
static void C_ccall f_26389(C_word c,C_word t0,C_word t1,C_word t2,C_word t3) C_noret;
C_noret_decl(f_26329)
static void C_ccall f_26329(C_word c,C_word t0,C_word t1,C_word t2,C_word t3) C_noret;
C_noret_decl(f_26336)
static void C_ccall f_26336(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_26339)
static void C_ccall f_26339(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_26363)
static void C_ccall f_26363(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4) C_noret;
C_noret_decl(f_26343)
static void C_ccall f_26343(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4) C_noret;
C_noret_decl(f_26333)
static void C_ccall f_26333(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_26282)
static void C_ccall f_26282(C_word c,C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_26289)
static void C_ccall f_26289(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_26292)
static void C_ccall f_26292(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_26312)
static void C_ccall f_26312(C_word c,C_word t0,C_word t1,C_word t2,C_word t3) C_noret;
C_noret_decl(f_26296)
static void C_ccall f_26296(C_word c,C_word t0,C_word t1,C_word t2,C_word t3) C_noret;
C_noret_decl(f_26259)
static void C_ccall f_26259(C_word c,C_word t0,C_word t1,C_word t2,C_word t3) C_noret;
C_noret_decl(f_26264)
static void C_ccall f_26264(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4) C_noret;
C_noret_decl(f_26263)
static void C_ccall f_26263(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_26240)
static void C_ccall f_26240(C_word c,C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_26245)
static void C_ccall f_26245(C_word c,C_word t0,C_word t1,C_word t2,C_word t3) C_noret;
C_noret_decl(f_26217)
static void C_ccall f_26217(C_word c,C_word t0,C_word t1,C_word t2,C_word t3) C_noret;
C_noret_decl(f_26222)
static void C_ccall f_26222(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4) C_noret;
C_noret_decl(f_26221)
static void C_ccall f_26221(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_26198)
static void C_ccall f_26198(C_word c,C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_26203)
static void C_ccall f_26203(C_word c,C_word t0,C_word t1,C_word t2,C_word t3) C_noret;
C_noret_decl(f_26179)
static void C_ccall f_26179(C_word c,C_word t0,C_word t1,C_word t2,C_word t3) C_noret;
C_noret_decl(f_26184)
static void C_ccall f_26184(C_word c,C_word t0,C_word t1,C_word t2,C_word t3) C_noret;
C_noret_decl(f_26183)
static void C_ccall f_26183(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_26164)
static void C_ccall f_26164(C_word c,C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_26169)
static void C_ccall f_26169(C_word c,C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_26145)
static void C_ccall f_26145(C_word c,C_word t0,C_word t1,C_word t2,C_word t3) C_noret;
C_noret_decl(f_26150)
static void C_ccall f_26150(C_word c,C_word t0,C_word t1,C_word t2,C_word t3) C_noret;
C_noret_decl(f_26149)
static void C_ccall f_26149(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_26130)
static void C_ccall f_26130(C_word c,C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_26135)
static void C_ccall f_26135(C_word c,C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_26115)
static void C_ccall f_26115(C_word c,C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_26120)
static void C_ccall f_26120(C_word c,C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_26097)
static void C_ccall f_26097(C_word c,C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_26105)
static void C_ccall f_26105(C_word c,C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_26101)
static void C_ccall f_26101(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_25627)
static void C_ccall f_25627(C_word c,C_word t0,C_word t1,...) C_noret;
C_noret_decl(f_25627)
static void C_ccall f_25627r(C_word t0,C_word t1,C_word t3) C_noret;
C_noret_decl(f_26055)
static void C_ccall f_26055(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_26070)
static void C_ccall f_26070(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_26062)
static void C_ccall f_26062(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_26026)
static void C_ccall f_26026(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_26030)
static void C_ccall f_26030(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_25991)
static void C_ccall f_25991(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_25995)
static void C_ccall f_25995(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_25956)
static void C_ccall f_25956(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_25960)
static void C_ccall f_25960(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_25631)
static void C_fcall f_25631(C_word t0,C_word t1) C_noret;
C_noret_decl(f_25920)
static void C_ccall f_25920(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_25935)
static void C_ccall f_25935(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_25927)
static void C_ccall f_25927(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_25891)
static void C_ccall f_25891(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_25895)
static void C_ccall f_25895(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_25856)
static void C_ccall f_25856(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_25860)
static void C_ccall f_25860(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_25821)
static void C_ccall f_25821(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_25825)
static void C_ccall f_25825(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_25634)
static void C_fcall f_25634(C_word t0,C_word t1) C_noret;
C_noret_decl(f_25785)
static void C_ccall f_25785(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_25800)
static void C_ccall f_25800(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_25792)
static void C_ccall f_25792(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_25756)
static void C_ccall f_25756(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_25760)
static void C_ccall f_25760(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_25721)
static void C_ccall f_25721(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_25725)
static void C_ccall f_25725(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_25686)
static void C_ccall f_25686(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_25690)
static void C_ccall f_25690(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_25637)
static void C_fcall f_25637(C_word t0,C_word t1) C_noret;
C_noret_decl(f_25640)
static void C_ccall f_25640(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_25644)
static void C_ccall f_25644(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4,C_word t5,C_word t6) C_noret;
C_noret_decl(f_25608)
static void C_ccall f_25608(C_word c,C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_25613)
static void C_ccall f_25613(C_word c,C_word t0,C_word t1,C_word t2,C_word t3) C_noret;
C_noret_decl(f_25157)
static void C_ccall f_25157(C_word c,C_word t0,C_word t1,...) C_noret;
C_noret_decl(f_25157)
static void C_ccall f_25157r(C_word t0,C_word t1,C_word t3) C_noret;
C_noret_decl(f_25585)
static void C_ccall f_25585(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_25600)
static void C_ccall f_25600(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_25592)
static void C_ccall f_25592(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_25556)
static void C_ccall f_25556(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_25560)
static void C_ccall f_25560(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_25521)
static void C_ccall f_25521(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_25525)
static void C_ccall f_25525(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_25486)
static void C_ccall f_25486(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_25490)
static void C_ccall f_25490(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_25161)
static void C_fcall f_25161(C_word t0,C_word t1) C_noret;
C_noret_decl(f_25450)
static void C_ccall f_25450(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_25465)
static void C_ccall f_25465(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_25457)
static void C_ccall f_25457(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_25421)
static void C_ccall f_25421(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_25425)
static void C_ccall f_25425(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_25386)
static void C_ccall f_25386(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_25390)
static void C_ccall f_25390(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_25351)
static void C_ccall f_25351(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_25355)
static void C_ccall f_25355(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_25164)
static void C_fcall f_25164(C_word t0,C_word t1) C_noret;
C_noret_decl(f_25315)
static void C_ccall f_25315(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_25330)
static void C_ccall f_25330(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_25322)
static void C_ccall f_25322(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_25286)
static void C_ccall f_25286(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_25290)
static void C_ccall f_25290(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_25251)
static void C_ccall f_25251(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_25255)
static void C_ccall f_25255(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_25216)
static void C_ccall f_25216(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_25220)
static void C_ccall f_25220(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_25167)
static void C_fcall f_25167(C_word t0,C_word t1) C_noret;
C_noret_decl(f_25170)
static void C_ccall f_25170(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_25174)
static void C_ccall f_25174(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4,C_word t5,C_word t6) C_noret;
C_noret_decl(f_25138)
static void C_ccall f_25138(C_word c,C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_25143)
static void C_ccall f_25143(C_word c,C_word t0,C_word t1,C_word t2,C_word t3) C_noret;
C_noret_decl(f_24687)
static void C_ccall f_24687(C_word c,C_word t0,C_word t1,...) C_noret;
C_noret_decl(f_24687)
static void C_ccall f_24687r(C_word t0,C_word t1,C_word t3) C_noret;
C_noret_decl(f_25115)
static void C_ccall f_25115(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_25130)
static void C_ccall f_25130(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_25122)
static void C_ccall f_25122(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_25086)
static void C_ccall f_25086(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_25090)
static void C_ccall f_25090(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_25051)
static void C_ccall f_25051(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_25055)
static void C_ccall f_25055(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_25016)
static void C_ccall f_25016(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_25020)
static void C_ccall f_25020(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_24691)
static void C_fcall f_24691(C_word t0,C_word t1) C_noret;
C_noret_decl(f_24980)
static void C_ccall f_24980(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_24995)
static void C_ccall f_24995(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_24987)
static void C_ccall f_24987(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_24951)
static void C_ccall f_24951(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_24955)
static void C_ccall f_24955(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_24916)
static void C_ccall f_24916(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_24920)
static void C_ccall f_24920(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_24881)
static void C_ccall f_24881(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_24885)
static void C_ccall f_24885(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_24694)
static void C_fcall f_24694(C_word t0,C_word t1) C_noret;
C_noret_decl(f_24845)
static void C_ccall f_24845(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_24860)
static void C_ccall f_24860(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_24852)
static void C_ccall f_24852(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_24816)
static void C_ccall f_24816(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_24820)
static void C_ccall f_24820(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_24781)
static void C_ccall f_24781(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_24785)
static void C_ccall f_24785(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_24746)
static void C_ccall f_24746(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_24750)
static void C_ccall f_24750(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_24697)
static void C_fcall f_24697(C_word t0,C_word t1) C_noret;
C_noret_decl(f_24700)
static void C_ccall f_24700(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_24704)
static void C_ccall f_24704(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4,C_word t5,C_word t6) C_noret;
C_noret_decl(f_24668)
static void C_ccall f_24668(C_word c,C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_24673)
static void C_ccall f_24673(C_word c,C_word t0,C_word t1,C_word t2,C_word t3) C_noret;
C_noret_decl(f_23939)
static void C_ccall f_23939(C_word c,C_word t0,C_word t1,...) C_noret;
C_noret_decl(f_23939)
static void C_ccall f_23939r(C_word t0,C_word t1,C_word t3) C_noret;
C_noret_decl(f_24645)
static void C_ccall f_24645(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_24660)
static void C_ccall f_24660(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_24652)
static void C_ccall f_24652(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_24616)
static void C_ccall f_24616(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_24620)
static void C_ccall f_24620(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_24581)
static void C_ccall f_24581(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_24585)
static void C_ccall f_24585(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_24546)
static void C_ccall f_24546(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_24550)
static void C_ccall f_24550(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_24511)
static void C_ccall f_24511(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_24515)
static void C_ccall f_24515(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_23943)
static void C_fcall f_23943(C_word t0,C_word t1) C_noret;
C_noret_decl(f_24475)
static void C_ccall f_24475(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_24490)
static void C_ccall f_24490(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_24482)
static void C_ccall f_24482(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_24446)
static void C_ccall f_24446(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_24450)
static void C_ccall f_24450(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_24411)
static void C_ccall f_24411(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_24415)
static void C_ccall f_24415(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_24376)
static void C_ccall f_24376(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_24380)
static void C_ccall f_24380(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_24341)
static void C_ccall f_24341(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_24345)
static void C_ccall f_24345(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_23946)
static void C_fcall f_23946(C_word t0,C_word t1) C_noret;
C_noret_decl(f_24305)
static void C_ccall f_24305(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_24320)
static void C_ccall f_24320(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_24312)
static void C_ccall f_24312(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_24276)
static void C_ccall f_24276(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_24280)
static void C_ccall f_24280(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_24241)
static void C_ccall f_24241(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_24245)
static void C_ccall f_24245(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_24206)
static void C_ccall f_24206(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_24210)
static void C_ccall f_24210(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_24171)
static void C_ccall f_24171(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_24175)
static void C_ccall f_24175(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_23949)
static void C_fcall f_23949(C_word t0,C_word t1) C_noret;
C_noret_decl(f_24135)
static void C_ccall f_24135(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_24150)
static void C_ccall f_24150(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_24142)
static void C_ccall f_24142(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_24106)
static void C_ccall f_24106(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_24110)
static void C_ccall f_24110(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_24071)
static void C_ccall f_24071(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_24075)
static void C_ccall f_24075(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_24036)
static void C_ccall f_24036(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_24040)
static void C_ccall f_24040(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_24001)
static void C_ccall f_24001(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_24005)
static void C_ccall f_24005(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_23952)
static void C_fcall f_23952(C_word t0,C_word t1) C_noret;
C_noret_decl(f_23955)
static void C_ccall f_23955(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_23959)
static void C_ccall f_23959(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4,C_word t5,C_word t6) C_noret;
C_noret_decl(f_23920)
static void C_ccall f_23920(C_word c,C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_23925)
static void C_ccall f_23925(C_word c,C_word t0,C_word t1,C_word t2,C_word t3) C_noret;
C_noret_decl(f_23191)
static void C_ccall f_23191(C_word c,C_word t0,C_word t1,...) C_noret;
C_noret_decl(f_23191)
static void C_ccall f_23191r(C_word t0,C_word t1,C_word t3) C_noret;
C_noret_decl(f_23897)
static void C_ccall f_23897(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_23912)
static void C_ccall f_23912(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_23904)
static void C_ccall f_23904(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_23868)
static void C_ccall f_23868(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_23872)
static void C_ccall f_23872(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_23833)
static void C_ccall f_23833(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_23837)
static void C_ccall f_23837(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_23798)
static void C_ccall f_23798(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_23802)
static void C_ccall f_23802(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_23763)
static void C_ccall f_23763(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_23767)
static void C_ccall f_23767(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_23195)
static void C_fcall f_23195(C_word t0,C_word t1) C_noret;
C_noret_decl(f_23727)
static void C_ccall f_23727(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_23742)
static void C_ccall f_23742(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_23734)
static void C_ccall f_23734(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_23698)
static void C_ccall f_23698(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_23702)
static void C_ccall f_23702(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_23663)
static void C_ccall f_23663(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_23667)
static void C_ccall f_23667(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_23628)
static void C_ccall f_23628(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_23632)
static void C_ccall f_23632(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_23593)
static void C_ccall f_23593(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_23597)
static void C_ccall f_23597(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_23198)
static void C_fcall f_23198(C_word t0,C_word t1) C_noret;
C_noret_decl(f_23557)
static void C_ccall f_23557(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_23572)
static void C_ccall f_23572(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_23564)
static void C_ccall f_23564(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_23528)
static void C_ccall f_23528(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_23532)
static void C_ccall f_23532(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_23493)
static void C_ccall f_23493(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_23497)
static void C_ccall f_23497(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_23458)
static void C_ccall f_23458(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_23462)
static void C_ccall f_23462(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_23423)
static void C_ccall f_23423(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_23427)
static void C_ccall f_23427(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_23201)
static void C_fcall f_23201(C_word t0,C_word t1) C_noret;
C_noret_decl(f_23387)
static void C_ccall f_23387(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_23402)
static void C_ccall f_23402(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_23394)
static void C_ccall f_23394(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_23358)
static void C_ccall f_23358(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_23362)
static void C_ccall f_23362(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_23323)
static void C_ccall f_23323(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_23327)
static void C_ccall f_23327(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_23288)
static void C_ccall f_23288(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_23292)
static void C_ccall f_23292(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_23253)
static void C_ccall f_23253(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_23257)
static void C_ccall f_23257(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_23204)
static void C_fcall f_23204(C_word t0,C_word t1) C_noret;
C_noret_decl(f_23207)
static void C_ccall f_23207(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_23211)
static void C_ccall f_23211(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4,C_word t5,C_word t6) C_noret;
C_noret_decl(f_23172)
static void C_ccall f_23172(C_word c,C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_23177)
static void C_ccall f_23177(C_word c,C_word t0,C_word t1,C_word t2,C_word t3) C_noret;
C_noret_decl(f_22721)
static void C_ccall f_22721(C_word c,C_word t0,C_word t1,...) C_noret;
C_noret_decl(f_22721)
static void C_ccall f_22721r(C_word t0,C_word t1,C_word t3) C_noret;
C_noret_decl(f_23149)
static void C_ccall f_23149(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_23164)
static void C_ccall f_23164(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_23156)
static void C_ccall f_23156(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_23120)
static void C_ccall f_23120(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_23124)
static void C_ccall f_23124(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_23085)
static void C_ccall f_23085(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_23089)
static void C_ccall f_23089(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_23050)
static void C_ccall f_23050(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_23054)
static void C_ccall f_23054(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_22725)
static void C_fcall f_22725(C_word t0,C_word t1) C_noret;
C_noret_decl(f_23014)
static void C_ccall f_23014(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_23029)
static void C_ccall f_23029(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_23021)
static void C_ccall f_23021(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_22985)
static void C_ccall f_22985(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_22989)
static void C_ccall f_22989(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_22950)
static void C_ccall f_22950(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_22954)
static void C_ccall f_22954(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_22915)
static void C_ccall f_22915(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_22919)
static void C_ccall f_22919(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_22728)
static void C_fcall f_22728(C_word t0,C_word t1) C_noret;
C_noret_decl(f_22879)
static void C_ccall f_22879(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_22894)
static void C_ccall f_22894(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_22886)
static void C_ccall f_22886(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_22850)
static void C_ccall f_22850(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_22854)
static void C_ccall f_22854(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_22815)
static void C_ccall f_22815(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_22819)
static void C_ccall f_22819(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_22780)
static void C_ccall f_22780(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_22784)
static void C_ccall f_22784(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_22731)
static void C_fcall f_22731(C_word t0,C_word t1) C_noret;
C_noret_decl(f_22734)
static void C_ccall f_22734(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_22738)
static void C_ccall f_22738(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4,C_word t5,C_word t6) C_noret;
C_noret_decl(f_22702)
static void C_ccall f_22702(C_word c,C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_22707)
static void C_ccall f_22707(C_word c,C_word t0,C_word t1,C_word t2,C_word t3) C_noret;
C_noret_decl(f_21973)
static void C_ccall f_21973(C_word c,C_word t0,C_word t1,...) C_noret;
C_noret_decl(f_21973)
static void C_ccall f_21973r(C_word t0,C_word t1,C_word t3) C_noret;
C_noret_decl(f_22679)
static void C_ccall f_22679(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_22694)
static void C_ccall f_22694(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_22686)
static void C_ccall f_22686(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_22650)
static void C_ccall f_22650(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_22654)
static void C_ccall f_22654(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_22615)
static void C_ccall f_22615(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_22619)
static void C_ccall f_22619(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_22580)
static void C_ccall f_22580(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_22584)
static void C_ccall f_22584(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_22545)
static void C_ccall f_22545(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_22549)
static void C_ccall f_22549(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_21977)
static void C_fcall f_21977(C_word t0,C_word t1) C_noret;
C_noret_decl(f_22509)
static void C_ccall f_22509(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_22524)
static void C_ccall f_22524(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_22516)
static void C_ccall f_22516(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_22480)
static void C_ccall f_22480(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_22484)
static void C_ccall f_22484(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_22445)
static void C_ccall f_22445(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_22449)
static void C_ccall f_22449(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_22410)
static void C_ccall f_22410(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_22414)
static void C_ccall f_22414(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_22375)
static void C_ccall f_22375(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_22379)
static void C_ccall f_22379(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_21980)
static void C_fcall f_21980(C_word t0,C_word t1) C_noret;
C_noret_decl(f_22339)
static void C_ccall f_22339(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_22354)
static void C_ccall f_22354(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_22346)
static void C_ccall f_22346(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_22310)
static void C_ccall f_22310(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_22314)
static void C_ccall f_22314(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_22275)
static void C_ccall f_22275(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_22279)
static void C_ccall f_22279(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_22240)
static void C_ccall f_22240(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_22244)
static void C_ccall f_22244(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_22205)
static void C_ccall f_22205(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_22209)
static void C_ccall f_22209(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_21983)
static void C_fcall f_21983(C_word t0,C_word t1) C_noret;
C_noret_decl(f_22169)
static void C_ccall f_22169(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_22184)
static void C_ccall f_22184(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_22176)
static void C_ccall f_22176(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_22140)
static void C_ccall f_22140(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_22144)
static void C_ccall f_22144(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_22105)
static void C_ccall f_22105(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_22109)
static void C_ccall f_22109(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_22070)
static void C_ccall f_22070(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_22074)
static void C_ccall f_22074(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_22035)
static void C_ccall f_22035(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_22039)
static void C_ccall f_22039(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_21986)
static void C_fcall f_21986(C_word t0,C_word t1) C_noret;
C_noret_decl(f_21989)
static void C_ccall f_21989(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_21993)
static void C_ccall f_21993(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4,C_word t5,C_word t6) C_noret;
C_noret_decl(f_21635)
static void C_fcall f_21635(C_word t0,C_word t1,C_word t2,C_word t3) C_noret;
C_noret_decl(f_21475)
static void C_fcall f_21475(C_word t0,C_word t1) C_noret;
C_noret_decl(f_21510)
static void C_fcall f_21510(C_word t0,C_word t1,C_word t2,C_word t3,C_word t4,C_word t5) C_noret;
C_noret_decl(f_21520)
static void C_fcall f_21520(C_word t0,C_word t1) C_noret;
C_noret_decl(f_21524)
static void C_ccall f_21524(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_21527)
static void C_ccall f_21527(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_21588)
static void C_ccall f_21588(C_word c,C_word t0,C_word t1,C_word t2,C_word t3) C_noret;
C_noret_decl(f_21579)
static void C_ccall f_21579(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_21530)
static void C_ccall f_21530(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_21549)
static void C_ccall f_21549(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_21556)
static void C_ccall f_21556(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_21533)
static void C_ccall f_21533(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_21539)
static void C_ccall f_21539(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_21508)
static void C_ccall f_21508(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_21483)
static void C_fcall f_21483(C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_21482)
static void C_ccall f_21482(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_21643)
static void C_fcall f_21643(C_word t0,C_word t1) C_noret;
C_noret_decl(f_21221)
static void C_ccall f_21221(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4) C_noret;
C_noret_decl(f_21243)
static void C_ccall f_21243(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_21258)
static void C_ccall f_21258(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_21261)
static void C_fcall f_21261(C_word t0,C_word t1) C_noret;
C_noret_decl(f_21437)
static void C_ccall f_21437(C_word c,C_word t0,C_word t1,C_word t2,C_word t3) C_noret;
C_noret_decl(f_21431)
static void C_ccall f_21431(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_21264)
static void C_ccall f_21264(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_21413)
static void C_ccall f_21413(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_21267)
static void C_fcall f_21267(C_word t0,C_word t1) C_noret;
C_noret_decl(f_21270)
static void C_ccall f_21270(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_21406)
static void C_ccall f_21406(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_21394)
static void C_ccall f_21394(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_21290)
static void C_fcall f_21290(C_word t0,C_word t1) C_noret;
C_noret_decl(f_21297)
static void C_ccall f_21297(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_21367)
static void C_ccall f_21367(C_word c,C_word t0,C_word t1,C_word t2,C_word t3) C_noret;
C_noret_decl(f_21353)
static void C_ccall f_21353(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_21361)
static void C_ccall f_21361(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_21300)
static void C_ccall f_21300(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_21339)
static void C_ccall f_21339(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_21303)
static void C_fcall f_21303(C_word t0,C_word t1) C_noret;
C_noret_decl(f_21332)
static void C_ccall f_21332(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_21309)
static void C_ccall f_21309(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_21312)
static void C_ccall f_21312(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_21316)
static void C_ccall f_21316(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_21277)
static void C_fcall f_21277(C_word t0,C_word t1) C_noret;
C_noret_decl(f_21280)
static void C_ccall f_21280(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_21090)
static void C_fcall f_21090(C_word t0,C_word t1,C_word t2,C_word t3) C_noret;
C_noret_decl(f_21099)
static void C_fcall f_21099(C_word t0,C_word t1,C_word t2,C_word t3,C_word t4) C_noret;
C_noret_decl(f_21047)
static void C_ccall f_21047(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_21053)
static void C_fcall f_21053(C_word t0,C_word t1) C_noret;
C_noret_decl(f_21116)
static void C_ccall f_21116(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_21202)
static void C_ccall f_21202(C_word c,C_word t0,C_word t1,C_word t2,C_word t3) C_noret;
C_noret_decl(f_21189)
static void C_ccall f_21189(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_21197)
static void C_ccall f_21197(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_21119)
static void C_ccall f_21119(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_21123)
static void C_ccall f_21123(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_21166)
static void C_ccall f_21166(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_21128)
static void C_ccall f_21128(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_21094)
static void C_ccall f_21094(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_20989)
static void C_ccall f_20989(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4) C_noret;
C_noret_decl(f_20996)
static void C_ccall f_20996(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_21027)
static void C_ccall f_21027(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_21023)
static void C_ccall f_21023(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_21015)
static void C_ccall f_21015(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_20898)
static void C_ccall f_20898(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4) C_noret;
C_noret_decl(f_20905)
static void C_ccall f_20905(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_20973)
static void C_ccall f_20973(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_20916)
static void C_fcall f_20916(C_word t0,C_word t1) C_noret;
C_noret_decl(f_20943)
static void C_ccall f_20943(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_20927)
static void C_ccall f_20927(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_20832)
static void C_ccall f_20832(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4) C_noret;
C_noret_decl(f_20843)
static void C_ccall f_20843(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_20846)
static void C_fcall f_20846(C_word t0,C_word t1) C_noret;
C_noret_decl(f_20853)
static void C_ccall f_20853(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_20826)
static void C_ccall f_20826(C_word c,C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_20280)
static void C_ccall f_20280(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4) C_noret;
C_noret_decl(f_20311)
static void C_ccall f_20311(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_20775)
static void C_ccall f_20775(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_20781)
static void C_ccall f_20781(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_20322)
static void C_ccall f_20322(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_20207)
static void C_fcall f_20207(C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_20232)
static void C_ccall f_20232(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_20167)
static void C_fcall f_20167(C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_20180)
static void C_fcall f_20180(C_word t0,C_word t1) C_noret;
C_noret_decl(f_20221)
static void C_ccall f_20221(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_20326)
static void C_ccall f_20326(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_20763)
static void C_ccall f_20763(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_20759)
static void C_fcall f_20759(C_word t0,C_word t1) C_noret;
C_noret_decl(f_20755)
static void C_ccall f_20755(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_20329)
static void C_ccall f_20329(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_20549)
static void C_fcall f_20549(C_word t0,C_word t1) C_noret;
C_noret_decl(f_20658)
static void C_ccall f_20658(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_20723)
static void C_ccall f_20723(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_20665)
static void C_fcall f_20665(C_word t0,C_word t1) C_noret;
C_noret_decl(f_20669)
static void C_ccall f_20669(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_20673)
static void C_ccall f_20673(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_20715)
static void C_ccall f_20715(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_20711)
static void C_ccall f_20711(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_20689)
static void C_ccall f_20689(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_20552)
static void C_fcall f_20552(C_word t0,C_word t1) C_noret;
C_noret_decl(f_20555)
static void C_fcall f_20555(C_word t0,C_word t1) C_noret;
C_noret_decl(f_20454)
static void C_ccall f_20454(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_20537)
static void C_ccall f_20537(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_20504)
static void C_ccall f_20504(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_20530)
static void C_ccall f_20530(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_20512)
static void C_ccall f_20512(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_20460)
static void C_fcall f_20460(C_word t0,C_word t1) C_noret;
C_noret_decl(f_20500)
static void C_ccall f_20500(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_20442)
static void C_ccall f_20442(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_20413)
static void C_ccall f_20413(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_20435)
static void C_ccall f_20435(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_20421)
static void C_ccall f_20421(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_20375)
static void C_fcall f_20375(C_word t0,C_word t1) C_noret;
C_noret_decl(f_20332)
static void C_fcall f_20332(C_word t0,C_word t1) C_noret;
C_noret_decl(f_20343)
static void C_ccall f_20343(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_20347)
static void C_ccall f_20347(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_20351)
static void C_ccall f_20351(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_20355)
static void C_ccall f_20355(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_20339)
static void C_ccall f_20339(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_20299)
static void C_fcall f_20299(C_word t0,C_word t1) C_noret;
C_noret_decl(f_20294)
static void C_fcall f_20294(C_word t0,C_word t1) C_noret;
C_noret_decl(f_20289)
static void C_fcall f_20289(C_word t0,C_word t1,C_word t2,C_word t3,C_word t4) C_noret;
C_noret_decl(f_20121)
static void C_ccall f_20121(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4) C_noret;
C_noret_decl(f_20132)
static void C_ccall f_20132(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_20147)
static void C_ccall f_20147(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_20083)
static void C_ccall f_20083(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4) C_noret;
C_noret_decl(f_20094)
static void C_ccall f_20094(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_20109)
static void C_ccall f_20109(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_20016)
static void C_ccall f_20016(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4) C_noret;
C_noret_decl(f_20036)
static void C_fcall f_20036(C_word t0,C_word t1) C_noret;
C_noret_decl(f_20046)
static void C_ccall f_20046(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_20059)
static void C_ccall f_20059(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_20027)
static void C_ccall f_20027(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_20034)
static void C_ccall f_20034(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_19823)
static void C_ccall f_19823(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4) C_noret;
C_noret_decl(f_19883)
static void C_fcall f_19883(C_word t0,C_word t1,C_word t2,C_word t3) C_noret;
C_noret_decl(f_19893)
static void C_ccall f_19893(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_20007)
static void C_ccall f_20007(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_19972)
static void C_ccall f_19972(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_19964)
static void C_ccall f_19964(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_19935)
static void C_ccall f_19935(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_19913)
static void C_ccall f_19913(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_19916)
static void C_ccall f_19916(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_19904)
static void C_ccall f_19904(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_19830)
static void C_ccall f_19830(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_19881)
static void C_ccall f_19881(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_19873)
static void C_ccall f_19873(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_19833)
static void C_ccall f_19833(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_19844)
static void C_ccall f_19844(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_19848)
static void C_ccall f_19848(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_19840)
static void C_ccall f_19840(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_19681)
static void C_ccall f_19681(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4) C_noret;
C_noret_decl(f_19729)
static void C_fcall f_19729(C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_19739)
static void C_ccall f_19739(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_19750)
static void C_ccall f_19750(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_19787)
static void C_ccall f_19787(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_19762)
static void C_ccall f_19762(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_19753)
static void C_ccall f_19753(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_19691)
static void C_ccall f_19691(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_19727)
static void C_ccall f_19727(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_19698)
static void C_ccall f_19698(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_19330)
static void C_ccall f_19330(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4) C_noret;
C_noret_decl(f_19337)
static void C_ccall f_19337(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_19571)
static void C_fcall f_19571(C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_19581)
static void C_ccall f_19581(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_19592)
static void C_ccall f_19592(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_19604)
static void C_fcall f_19604(C_word t0,C_word t1) C_noret;
C_noret_decl(f_19607)
static void C_ccall f_19607(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_19595)
static void C_ccall f_19595(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_19343)
static void C_ccall f_19343(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_19569)
static void C_ccall f_19569(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_19565)
static void C_ccall f_19565(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_19511)
static void C_fcall f_19511(C_word t0,C_word t1) C_noret;
C_noret_decl(f_19476)
static void C_fcall f_19476(C_word t0,C_word t1) C_noret;
C_noret_decl(f_19492)
static void C_fcall f_19492(C_word t0,C_word t1) C_noret;
C_noret_decl(f_19447)
static void C_fcall f_19447(C_word t0,C_word t1) C_noret;
C_noret_decl(f_19371)
static void C_ccall f_19371(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_19374)
static void C_ccall f_19374(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_19438)
static void C_ccall f_19438(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_19434)
static void C_ccall f_19434(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_19354)
static void C_fcall f_19354(C_word t0,C_word t1) C_noret;
C_noret_decl(f_19365)
static void C_ccall f_19365(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_19361)
static void C_ccall f_19361(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_19283)
static void C_ccall f_19283(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4) C_noret;
C_noret_decl(f_19316)
static void C_ccall f_19316(C_word c,C_word t0,C_word t1,C_word t2,C_word t3) C_noret;
C_noret_decl(f_19298)
static void C_ccall f_19298(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_19310)
static void C_ccall f_19310(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_18901)
static void C_ccall f_18901(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4) C_noret;
C_noret_decl(f_19110)
static void C_fcall f_19110(C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_19120)
static void C_ccall f_19120(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_19131)
static void C_ccall f_19131(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_19251)
static void C_ccall f_19251(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_19230)
static void C_ccall f_19230(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_19209)
static void C_ccall f_19209(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_19188)
static void C_ccall f_19188(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_19167)
static void C_ccall f_19167(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_19146)
static void C_ccall f_19146(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_19134)
static void C_ccall f_19134(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_18911)
static void C_ccall f_18911(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_18914)
static void C_fcall f_18914(C_word t0,C_word t1) C_noret;
C_noret_decl(f_19077)
static void C_fcall f_19077(C_word t0,C_word t1) C_noret;
C_noret_decl(f_18917)
static void C_fcall f_18917(C_word t0,C_word t1) C_noret;
C_noret_decl(f_19068)
static void C_ccall f_19068(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_19048)
static void C_ccall f_19048(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_18920)
static void C_fcall f_18920(C_word t0,C_word t1) C_noret;
C_noret_decl(f_19013)
static void C_ccall f_19013(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_19030)
static void C_ccall f_19030(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_18923)
static void C_fcall f_18923(C_word t0,C_word t1) C_noret;
C_noret_decl(f_18962)
static void C_ccall f_18962(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_18996)
static void C_ccall f_18996(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_18980)
static void C_ccall f_18980(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_18965)
static void C_fcall f_18965(C_word t0,C_word t1) C_noret;
C_noret_decl(f_18930)
static void C_fcall f_18930(C_word t0,C_word t1) C_noret;
C_noret_decl(f_18941)
static void C_ccall f_18941(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_18945)
static void C_ccall f_18945(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_18937)
static void C_ccall f_18937(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_18819)
static void C_ccall f_18819(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4) C_noret;
C_noret_decl(f_18823)
static void C_ccall f_18823(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_18841)
static void C_ccall f_18841(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_18659)
static void C_fcall f_18659(C_word t0,C_word t1,C_word t2,C_word t3) C_noret;
C_noret_decl(f_18667)
static void C_fcall f_18667(C_word t0,C_word t1,C_word t2,C_word t3) C_noret;
C_noret_decl(f_18677)
static void C_ccall f_18677(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_18715)
static void C_ccall f_18715(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_18718)
static void C_ccall f_18718(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_18721)
static void C_ccall f_18721(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_18796)
static void C_fcall f_18796(C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_18806)
static void C_ccall f_18806(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_18724)
static void C_ccall f_18724(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_18727)
static void C_ccall f_18727(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_18730)
static void C_ccall f_18730(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_18750)
static void C_fcall f_18750(C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_18760)
static void C_ccall f_18760(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_18763)
static void C_ccall f_18763(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_18766)
static void C_ccall f_18766(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_18733)
static void C_ccall f_18733(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_18736)
static void C_ccall f_18736(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_18653)
static void C_fcall f_18653(C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_18647)
static void C_fcall f_18647(C_word t0,C_word t1) C_noret;
C_noret_decl(f_18641)
static void C_fcall f_18641(C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_18570)
static void C_fcall f_18570(C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_18611)
static void C_ccall f_18611(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_18615)
static void C_ccall f_18615(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_18619)
static void C_ccall f_18619(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_18623)
static void C_ccall f_18623(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_18627)
static void C_ccall f_18627(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_18631)
static void C_ccall f_18631(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_18635)
static void C_ccall f_18635(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_18639)
static void C_ccall f_18639(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_18572)
static void C_fcall f_18572(C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_18578)
static void C_fcall f_18578(C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_18600)
static void C_ccall f_18600(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_18589)
static void C_ccall f_18589(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_18419)
static void C_fcall f_18419(C_word t0,C_word t1) C_noret;
C_noret_decl(f_18434)
static void C_fcall f_18434(C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_18447)
static void C_ccall f_18447(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_18407)
static void C_ccall f_18407(C_word c,C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_18395)
static void C_ccall f_18395(C_word c,C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_18383)
static void C_ccall f_18383(C_word c,C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_18377)
static void C_fcall f_18377(C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_18371)
static void C_ccall f_18371(C_word c,C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_18359)
static void C_ccall f_18359(C_word c,C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_18347)
static void C_ccall f_18347(C_word c,C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_18335)
static void C_ccall f_18335(C_word c,C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_18323)
static void C_ccall f_18323(C_word c,C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_18317)
static void C_fcall f_18317(C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_18281)
static void C_ccall f_18281(C_word c,C_word t0,C_word t1,...) C_noret;
C_noret_decl(f_18275)
static void C_ccall f_18275(C_word c,C_word t0,C_word t1,...) C_noret;
C_noret_decl(f_18228)
static void C_ccall f_18228(C_word c,C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_18232)
static void C_ccall f_18232(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_18248)
static void C_ccall f_18248(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_18257)
static void C_ccall f_18257(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_18235)
static void C_ccall f_18235(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_18219)
static void C_ccall f_18219(C_word c,C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_18223)
static void C_ccall f_18223(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_18040)
static void C_ccall f_18040(C_word c,C_word t0,C_word t1,...) C_noret;
C_noret_decl(f_18040)
static void C_ccall f_18040r(C_word t0,C_word t1,C_word t3) C_noret;
C_noret_decl(f_18193)
static void C_fcall f_18193(C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_18206)
static void C_ccall f_18206(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_18188)
static void C_ccall f_18188(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_18043)
static void C_fcall f_18043(C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_18185)
static void C_ccall f_18185(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_18169)
static void C_ccall f_18169(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_18162)
static void C_ccall f_18162(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_18158)
static void C_ccall f_18158(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_18071)
static void C_ccall f_18071(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_18079)
static void C_fcall f_18079(C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_18089)
static void C_ccall f_18089(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_18092)
static void C_ccall f_18092(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_18074)
static void C_ccall f_18074(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_17869)
static void C_ccall f_17869(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4,C_word t5) C_noret;
C_noret_decl(f_17875)
static void C_ccall f_17875(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_17878)
static void C_fcall f_17878(C_word t0,C_word t1) C_noret;
C_noret_decl(f_15678)
static void C_ccall f_15678(C_word c,C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_15691)
static void C_ccall f_15691(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4) C_noret;
C_noret_decl(f_15698)
static void C_fcall f_15698(C_word t0,C_word t1) C_noret;
C_noret_decl(f_15705)
static void C_ccall f_15705(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_15684)
static void C_ccall f_15684(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_17882)
static void C_ccall f_17882(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_17916)
static void C_ccall f_17916(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_18009)
static void C_fcall f_18009(C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_18019)
static void C_fcall f_18019(C_word t0,C_word t1) C_noret;
C_noret_decl(f_17922)
static void C_ccall f_17922(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_17979)
static void C_fcall f_17979(C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_17989)
static void C_fcall f_17989(C_word t0,C_word t1) C_noret;
C_noret_decl(f_17930)
static void C_ccall f_17930(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_17944)
static void C_ccall f_17944(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_17948)
static void C_ccall f_17948(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_17952)
static void C_ccall f_17952(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_17956)
static void C_ccall f_17956(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_17963)
static void C_ccall f_17963(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_17940)
static void C_ccall f_17940(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_17933)
static void C_ccall f_17933(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_17885)
static void C_ccall f_17885(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_16805)
static void C_ccall f_16805(C_word c,C_word t0,C_word t1,C_word t2,C_word t3) C_noret;
C_noret_decl(f_16818)
static void C_ccall f_16818(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_16868)
static void C_ccall f_16868(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_16965)
static void C_ccall f_16965(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_17033)
static void C_ccall f_17033(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_17290)
static void C_ccall f_17290(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_17040)
static void C_fcall f_17040(C_word t0,C_word t1) C_noret;
C_noret_decl(f_17278)
static void C_ccall f_17278(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_17229)
static void C_ccall f_17229(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_17235)
static void C_ccall f_17235(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_17259)
static void C_ccall f_17259(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_17255)
static void C_ccall f_17255(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_17243)
static void C_ccall f_17243(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_17043)
static void C_fcall f_17043(C_word t0,C_word t1) C_noret;
C_noret_decl(f_17205)
static void C_ccall f_17205(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_17209)
static void C_ccall f_17209(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_17046)
static void C_fcall f_17046(C_word t0,C_word t1) C_noret;
C_noret_decl(f_17182)
static void C_ccall f_17182(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_17186)
static void C_ccall f_17186(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_17049)
static void C_fcall f_17049(C_word t0,C_word t1) C_noret;
C_noret_decl(f_17159)
static void C_ccall f_17159(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_17163)
static void C_ccall f_17163(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_17052)
static void C_fcall f_17052(C_word t0,C_word t1) C_noret;
C_noret_decl(f_17084)
static void C_ccall f_17084(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_17102)
static void C_ccall f_17102(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_17120)
static void C_ccall f_17120(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_17138)
static void C_ccall f_17138(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_17055)
static void C_fcall f_17055(C_word t0,C_word t1) C_noret;
C_noret_decl(f_17059)
static void C_ccall f_17059(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_16969)
static void C_ccall f_16969(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_16973)
static void C_ccall f_16973(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_16977)
static void C_ccall f_16977(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_16872)
static void C_ccall f_16872(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_16876)
static void C_ccall f_16876(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_16880)
static void C_ccall f_16880(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_16899)
static void C_ccall f_16899(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_16903)
static void C_ccall f_16903(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_16883)
static void C_fcall f_16883(C_word t0,C_word t1) C_noret;
C_noret_decl(f_16887)
static void C_ccall f_16887(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_16822)
static void C_ccall f_16822(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_16826)
static void C_ccall f_16826(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_16830)
static void C_ccall f_16830(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_16812)
static void C_fcall f_16812(C_word t0,C_word t1) C_noret;
C_noret_decl(f_16627)
static void C_fcall f_16627(C_word t0,C_word t1) C_noret;
C_noret_decl(f_16639)
static void C_fcall f_16639(C_word t0,C_word t1) C_noret;
C_noret_decl(f_16658)
static void C_ccall f_16658(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_16676)
static void C_fcall f_16676(C_word t0,C_word t1,C_word t2,C_word t3,C_word t4) C_noret;
C_noret_decl(f_16708)
static void C_ccall f_16708(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_16711)
static void C_fcall f_16711(C_word t0,C_word t1) C_noret;
C_noret_decl(f_16704)
static void C_ccall f_16704(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_16690)
static void C_ccall f_16690(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_16661)
static void C_ccall f_16661(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_16606)
static void C_fcall f_16606(C_word t0,C_word t1) C_noret;
C_noret_decl(f_16613)
static void C_ccall f_16613(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_16616)
static void C_ccall f_16616(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_16622)
static void C_ccall f_16622(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_16541)
static void C_fcall f_16541(C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_16550)
static void C_fcall f_16550(C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_16573)
static void C_ccall f_16573(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_16563)
static void C_fcall f_16563(C_word t0,C_word t1) C_noret;
C_noret_decl(f_16497)
static void C_fcall f_16497(C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_16485)
static void C_fcall f_16485(C_word t0,C_word t1) C_noret;
C_noret_decl(f_16383)
static void C_fcall f_16383(C_word t0,C_word t1) C_noret;
C_noret_decl(f_16335)
static void C_fcall f_16335(C_word t0,C_word t1) C_noret;
C_noret_decl(f_15716)
static void C_fcall f_15716(C_word t0,C_word t1,C_word t2,C_word t3,C_word t4,C_word t5,C_word t6) C_noret;
C_noret_decl(f_15720)
static void C_ccall f_15720(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_15723)
static void C_ccall f_15723(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_16149)
static void C_ccall f_16149(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_16145)
static void C_ccall f_16145(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_16141)
static void C_ccall f_16141(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_15726)
static void C_fcall f_15726(C_word t0,C_word t1) C_noret;
C_noret_decl(f_15849)
static void C_ccall f_15849(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_15082)
static void C_ccall f_15082(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_15855)
static void C_fcall f_15855(C_word t0,C_word t1) C_noret;
C_noret_decl(f_15098)
static void C_ccall f_15098(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_15943)
static void C_fcall f_15943(C_word t0,C_word t1) C_noret;
C_noret_decl(f_16013)
static void C_ccall f_16013(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_15114)
static void C_ccall f_15114(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_16016)
static void C_fcall f_16016(C_word t0,C_word t1) C_noret;
C_noret_decl(f_15146)
static void C_ccall f_15146(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_16094)
static void C_fcall f_16094(C_word t0,C_word t1) C_noret;
C_noret_decl(f_16120)
static void C_ccall f_16120(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4) C_noret;
C_noret_decl(f_16114)
static void C_ccall f_16114(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_16103)
static void C_ccall f_16103(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_16045)
static void C_fcall f_16045(C_word t0,C_word t1) C_noret;
C_noret_decl(f_16055)
static void C_ccall f_16055(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_16081)
static void C_ccall f_16081(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4) C_noret;
C_noret_decl(f_16075)
static void C_ccall f_16075(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_16058)
static void C_ccall f_16058(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_16068)
static void C_ccall f_16068(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_16061)
static void C_fcall f_16061(C_word t0,C_word t1) C_noret;
C_noret_decl(f_16022)
static void C_ccall f_16022(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_16031)
static void C_ccall f_16031(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_16025)
static void C_fcall f_16025(C_word t0,C_word t1) C_noret;
C_noret_decl(f_15949)
static void C_ccall f_15949(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_15967)
static void C_fcall f_15967(C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_16000)
static void C_ccall f_16000(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4) C_noret;
C_noret_decl(f_15986)
static void C_ccall f_15986(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_15994)
static void C_ccall f_15994(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_15977)
static void C_ccall f_15977(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_15952)
static void C_ccall f_15952(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_15864)
static void C_ccall f_15864(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_15886)
static void C_fcall f_15886(C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_15933)
static void C_ccall f_15933(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4) C_noret;
C_noret_decl(f_15919)
static void C_ccall f_15919(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_15927)
static void C_ccall f_15927(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_15899)
static void C_ccall f_15899(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_15902)
static void C_fcall f_15902(C_word t0,C_word t1) C_noret;
C_noret_decl(f_15867)
static void C_ccall f_15867(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_15884)
static void C_ccall f_15884(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_15870)
static void C_fcall f_15870(C_word t0,C_word t1) C_noret;
C_noret_decl(f_15735)
static void C_ccall f_15735(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_15741)
static void C_ccall f_15741(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_15799)
static void C_ccall f_15799(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_15802)
static void C_ccall f_15802(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_15823)
static void C_ccall f_15823(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4) C_noret;
C_noret_decl(f_15834)
static void C_ccall f_15834(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_15813)
static void C_ccall f_15813(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_15747)
static void C_ccall f_15747(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_15757)
static void C_ccall f_15757(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_15793)
static void C_ccall f_15793(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_15763)
static void C_ccall f_15763(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_15778)
static void C_ccall f_15778(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_15782)
static void C_ccall f_15782(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_15786)
static void C_ccall f_15786(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_15770)
static void C_ccall f_15770(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_15612)
static void C_fcall f_15612(C_word t0,C_word t1) C_noret;
C_noret_decl(f_15614)
static void C_ccall f_15614(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4) C_noret;
C_noret_decl(f_15662)
static void C_ccall f_15662(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_15618)
static void C_ccall f_15618(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_15621)
static void C_fcall f_15621(C_word t0,C_word t1) C_noret;
C_noret_decl(f_15626)
static void C_fcall f_15626(C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_15647)
static void C_ccall f_15647(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_15604)
static void C_fcall f_15604(C_word t0,C_word t1) C_noret;
C_noret_decl(f_15606)
static void C_ccall f_15606(C_word c,C_word t0,C_word t1,C_word t2,C_word t3) C_noret;
C_noret_decl(f_15396)
static void C_fcall f_15396(C_word t0,C_word t1,C_word t2,C_word t3) C_noret;
C_noret_decl(f_15413)
static void C_ccall f_15413(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_15417)
static void C_ccall f_15417(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_15363)
static void C_fcall f_15363(C_word t0,C_word t1,C_word t2,C_word t3) C_noret;
C_noret_decl(f_15370)
static void C_ccall f_15370(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_15314)
static void C_ccall f_15314(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_15321)
static void C_ccall f_15321(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_15379)
static void C_ccall f_15379(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_15602)
static void C_ccall f_15602(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_15579)
static void C_ccall f_15579(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_15595)
static void C_ccall f_15595(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_15441)
static void C_ccall f_15441(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_15444)
static void C_ccall f_15444(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_15468)
static void C_ccall f_15468(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_15525)
static void C_ccall f_15525(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_15531)
static void C_ccall f_15531(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_15540)
static void C_ccall f_15540(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_15549)
static void C_ccall f_15549(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_15558)
static void C_ccall f_15558(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_15567)
static void C_ccall f_15567(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_15519)
static void C_ccall f_15519(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_15474)
static void C_ccall f_15474(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_15480)
static void C_ccall f_15480(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_15486)
static void C_ccall f_15486(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_15492)
static void C_ccall f_15492(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_15498)
static void C_ccall f_15498(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_15504)
static void C_ccall f_15504(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_15345)
static void C_fcall f_15345(C_word t0,C_word t1,C_word t2,C_word t3) C_noret;
C_noret_decl(f_15352)
static void C_ccall f_15352(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_15335)
static void C_fcall f_15335(C_word t0,C_word t1,C_word t2,C_word t3) C_noret;
C_noret_decl(f_15323)
static void C_fcall f_15323(C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_15291)
static void C_fcall f_15291(C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_15298)
static void C_ccall f_15298(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_15305)
static void C_ccall f_15305(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_15275)
static void C_fcall f_15275(C_word t0,C_word t1) C_noret;
C_noret_decl(f_15282)
static void C_ccall f_15282(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_15289)
static void C_ccall f_15289(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_15263)
static void C_fcall f_15263(C_word t0,C_word t1) C_noret;
C_noret_decl(f_15245)
static void C_fcall f_15245(C_word t0,C_word t1) C_noret;
C_noret_decl(f_15227)
static void C_fcall f_15227(C_word t0,C_word t1) C_noret;
C_noret_decl(f_15212)
static void C_fcall f_15212(C_word t0,C_word t1) C_noret;
C_noret_decl(f_15206)
static void C_fcall f_15206(C_word t0,C_word t1,C_word t2,C_word t3) C_noret;
C_noret_decl(f_15194)
static void C_fcall f_15194(C_word t0,C_word t1) C_noret;
C_noret_decl(f_15176)
static void C_fcall f_15176(C_word t0,C_word t1) C_noret;
C_noret_decl(f_15155)
static void C_fcall f_15155(C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_15123)
static void C_fcall f_15123(C_word t0,C_word t1) C_noret;
C_noret_decl(f_15130)
static void C_ccall f_15130(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_15065)
static void C_fcall f_15065(C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_15073)
static void C_ccall f_15073(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_15055)
static void C_fcall f_15055(C_word t0,C_word t1) C_noret;
C_noret_decl(f_15063)
static void C_ccall f_15063(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_15049)
static void C_fcall f_15049(C_word t0,C_word t1) C_noret;
C_noret_decl(f_15037)
static void C_fcall f_15037(C_word t0,C_word t1) C_noret;
C_noret_decl(f_15034)
static void C_ccall f_15034(C_word c,C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_15013)
static void C_fcall f_15013(C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_14926)
static void C_fcall f_14926(C_word t0,C_word t1) C_noret;
C_noret_decl(f_14905)
static void C_fcall f_14905(C_word t0,C_word t1,C_word t2,C_word t3,C_word t4,C_word t5) C_noret;
C_noret_decl(f_14895)
static void C_fcall f_14895(C_word t0,C_word t1) C_noret;
C_noret_decl(f_14883)
static void C_fcall f_14883(C_word t0,C_word t1) C_noret;
C_noret_decl(f_14854)
static void C_ccall f_14854(C_word c,C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_14842)
static void C_fcall f_14842(C_word t0,C_word t1) C_noret;
C_noret_decl(f_14824)
static void C_fcall f_14824(C_word t0,C_word t1) C_noret;
C_noret_decl(f_14806)
static void C_fcall f_14806(C_word t0,C_word t1) C_noret;
C_noret_decl(f_14785)
static void C_ccall f_14785(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4) C_noret;
C_noret_decl(f_14691)
static void C_ccall f_14691(C_word c,C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_14695)
static void C_ccall f_14695(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_14724)
static void C_ccall f_14724(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_14729)
static void C_fcall f_14729(C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_14754)
static void C_fcall f_14754(C_word t0,C_word t1) C_noret;
C_noret_decl(f_14739)
static void C_ccall f_14739(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_14173)
static void C_ccall f_14173(C_word c,C_word t0,C_word t1,C_word t2,...) C_noret;
C_noret_decl(f_14173)
static void C_ccall f_14173r(C_word t0,C_word t1,C_word t2,C_word t4) C_noret;
C_noret_decl(f_14444)
static void C_ccall f_14444(C_word c,C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_14448)
static void C_ccall f_14448(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_14453)
static void C_ccall f_14453(C_word c,C_word t0,C_word t1,C_word t2,...) C_noret;
C_noret_decl(f_14453)
static void C_ccall f_14453r(C_word t0,C_word t1,C_word t2,C_word t4) C_noret;
C_noret_decl(f_14659)
static void C_ccall f_14659(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_14674)
static void C_ccall f_14674(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_14666)
static void C_ccall f_14666(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_14630)
static void C_ccall f_14630(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_14634)
static void C_ccall f_14634(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_14595)
static void C_ccall f_14595(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_14599)
static void C_ccall f_14599(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_14457)
static void C_fcall f_14457(C_word t0,C_word t1) C_noret;
C_noret_decl(f_14559)
static void C_ccall f_14559(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_14574)
static void C_ccall f_14574(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_14566)
static void C_ccall f_14566(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_14530)
static void C_ccall f_14530(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_14534)
static void C_ccall f_14534(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_14495)
static void C_ccall f_14495(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_14499)
static void C_ccall f_14499(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_14460)
static void C_fcall f_14460(C_word t0,C_word t1) C_noret;
C_noret_decl(f_14463)
static void C_ccall f_14463(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_14466)
static void C_fcall f_14466(C_word t0,C_word t1) C_noret;
C_noret_decl(f_14435)
static void C_ccall f_14435(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_14177)
static void C_ccall f_14177(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_14404)
static void C_ccall f_14404(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_14419)
static void C_ccall f_14419(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_14411)
static void C_ccall f_14411(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_14375)
static void C_ccall f_14375(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_14379)
static void C_ccall f_14379(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_14340)
static void C_ccall f_14340(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_14344)
static void C_ccall f_14344(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_14180)
static void C_fcall f_14180(C_word t0,C_word t1) C_noret;
C_noret_decl(f_14304)
static void C_ccall f_14304(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_14319)
static void C_ccall f_14319(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_14311)
static void C_ccall f_14311(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_14275)
static void C_ccall f_14275(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_14279)
static void C_ccall f_14279(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_14240)
static void C_ccall f_14240(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_14244)
static void C_ccall f_14244(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_14183)
static void C_fcall f_14183(C_word t0,C_word t1) C_noret;
C_noret_decl(f_14186)
static void C_ccall f_14186(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_14189)
static void C_ccall f_14189(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_14201)
static void C_ccall f_14201(C_word c,C_word t0,C_word t1,C_word t2,C_word t3) C_noret;
C_noret_decl(f_14219)
static void C_ccall f_14219(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_14207)
static void C_ccall f_14207(C_word c,C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_14195)
static void C_ccall f_14195(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_14110)
static void C_fcall f_14110(C_word t0,C_word t1) C_noret;
C_noret_decl(f_13770)
static void C_ccall f_13770(C_word c,C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_13952)
static void C_ccall f_13952(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_13956)
static void C_ccall f_13956(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_13958)
static void C_fcall f_13958(C_word t0,C_word t1,C_word t2,C_word t3,C_word t4) C_noret;
C_noret_decl(f_13883)
static void C_fcall f_13883(C_word t0,C_word t1,C_word t2,C_word t3,C_word t4) C_noret;
C_noret_decl(f_13893)
static void C_fcall f_13893(C_word t0,C_word t1) C_noret;
C_noret_decl(f_13900)
static void C_fcall f_13900(C_word t0,C_word t1) C_noret;
C_noret_decl(f_13968)
static void C_ccall f_13968(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_13971)
static void C_ccall f_13971(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_13975)
static void C_ccall f_13975(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_13995)
static void C_fcall f_13995(C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_14011)
static void C_ccall f_14011(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_13978)
static void C_ccall f_13978(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_13773)
static void C_fcall f_13773(C_word t0,C_word t1,C_word t2,C_word t3) C_noret;
C_noret_decl(f_13785)
static void C_fcall f_13785(C_word t0,C_word t1,C_word t2,C_word t3,C_word t4) C_noret;
C_noret_decl(f_13821)
static void C_ccall f_13821(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_13841)
static void C_ccall f_13841(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_13846)
static void C_fcall f_13846(C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_13283)
static void C_ccall f_13283(C_word c,C_word t0,C_word t1,C_word t2,...) C_noret;
C_noret_decl(f_13283)
static void C_ccall f_13283r(C_word t0,C_word t1,C_word t2,C_word t4) C_noret;
C_noret_decl(f_13210)
static void C_fcall f_13210(C_word t0,C_word t1,C_word t2,C_word t3,C_word t4,C_word t5) C_noret;
C_noret_decl(f_13055)
static void C_ccall f_13055(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_13061)
static void C_ccall f_13061(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_13146)
static void C_fcall f_13146(C_word t0,C_word t1) C_noret;
C_noret_decl(f_13073)
static void C_ccall f_13073(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_13089)
static void C_ccall f_13089(C_word c,C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_13093)
static void C_fcall f_13093(C_word t0,C_word t1) C_noret;
C_noret_decl(f_13096)
static void C_fcall f_13096(C_word t0,C_word t1) C_noret;
C_noret_decl(f_13076)
static void C_ccall f_13076(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_13087)
static void C_ccall f_13087(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_13227)
static void C_ccall f_13227(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_13764)
static void C_ccall f_13764(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_13287)
static void C_ccall f_13287(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_13733)
static void C_ccall f_13733(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_13748)
static void C_ccall f_13748(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_13740)
static void C_ccall f_13740(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_13704)
static void C_ccall f_13704(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_13708)
static void C_ccall f_13708(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_13669)
static void C_ccall f_13669(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_13673)
static void C_ccall f_13673(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_13634)
static void C_ccall f_13634(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_13638)
static void C_ccall f_13638(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_13290)
static void C_fcall f_13290(C_word t0,C_word t1) C_noret;
C_noret_decl(f_13598)
static void C_ccall f_13598(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_13613)
static void C_ccall f_13613(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_13605)
static void C_ccall f_13605(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_13569)
static void C_ccall f_13569(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_13573)
static void C_ccall f_13573(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_13534)
static void C_ccall f_13534(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_13538)
static void C_ccall f_13538(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_13499)
static void C_ccall f_13499(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_13503)
static void C_ccall f_13503(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_13293)
static void C_fcall f_13293(C_word t0,C_word t1) C_noret;
C_noret_decl(f_13463)
static void C_ccall f_13463(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_13478)
static void C_ccall f_13478(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_13470)
static void C_ccall f_13470(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_13434)
static void C_ccall f_13434(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_13438)
static void C_ccall f_13438(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_13399)
static void C_ccall f_13399(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_13403)
static void C_ccall f_13403(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_13364)
static void C_ccall f_13364(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_13368)
static void C_ccall f_13368(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_13296)
static void C_fcall f_13296(C_word t0,C_word t1) C_noret;
C_noret_decl(f_13299)
static void C_ccall f_13299(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_13302)
static void C_ccall f_13302(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_13335)
static void C_ccall f_13335(C_word c,C_word t0,C_word t1,C_word t2,C_word t3) C_noret;
C_noret_decl(f_13343)
static void C_ccall f_13343(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_13308)
static void C_ccall f_13308(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_6093)
static void C_fcall f_6093(C_word t0,C_word t1,C_word t2,C_word t3) C_noret;
C_noret_decl(f_6110)
static void C_ccall f_6110(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_13321)
static void C_ccall f_13321(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_13311)
static void C_fcall f_13311(C_word t0,C_word t1) C_noret;
C_noret_decl(f_13314)
static void C_ccall f_13314(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_12850)
static void C_ccall f_12850(C_word c,C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_12854)
static void C_ccall f_12854(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_12857)
static void C_ccall f_12857(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_12860)
static void C_ccall f_12860(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_13029)
static void C_ccall f_13029(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_13042)
static void C_ccall f_13042(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_13046)
static void C_ccall f_13046(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_12866)
static void C_ccall f_12866(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_13022)
static void C_ccall f_13022(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_13003)
static void C_ccall f_13003(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_13010)
static void C_ccall f_13010(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_13014)
static void C_ccall f_13014(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_12872)
static void C_fcall f_12872(C_word t0,C_word t1) C_noret;
C_noret_decl(f_12878)
static void C_ccall f_12878(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_12962)
static void C_ccall f_12962(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_12964)
static void C_fcall f_12964(C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_12986)
static void C_ccall f_12986(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_12993)
static void C_ccall f_12993(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_12997)
static void C_ccall f_12997(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_12983)
static void C_fcall f_12983(C_word t0,C_word t1) C_noret;
C_noret_decl(f_12979)
static void C_ccall f_12979(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_12920)
static void C_ccall f_12920(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_12937)
static void C_fcall f_12937(C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_12947)
static void C_ccall f_12947(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_12923)
static void C_ccall f_12923(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_12882)
static void C_fcall f_12882(C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_12890)
static void C_ccall f_12890(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_12892)
static void C_fcall f_12892(C_word t0,C_word t1,C_word t2,C_word t3) C_noret;
C_noret_decl(f_12913)
static void C_ccall f_12913(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_12738)
static void C_fcall f_12738(C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_12848)
static void C_ccall f_12848(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_12807)
static void C_fcall f_12807(C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_12840)
static void C_ccall f_12840(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_12836)
static void C_ccall f_12836(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_12821)
static void C_ccall f_12821(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_12745)
static void C_ccall f_12745(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_12753)
static void C_fcall f_12753(C_word t0,C_word t1,C_word t2,C_word t3,C_word t4) C_noret;
C_noret_decl(f_12798)
static void C_ccall f_12798(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_12786)
static void C_ccall f_12786(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_12770)
static void C_ccall f_12770(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_11971)
static void C_ccall f_11971(C_word c,C_word t0,C_word t1,C_word t2,...) C_noret;
C_noret_decl(f_11971)
static void C_ccall f_11971r(C_word t0,C_word t1,C_word t2,C_word t4) C_noret;
C_noret_decl(f_12288)
static void C_ccall f_12288(C_word c,C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_12295)
static void C_fcall f_12295(C_word t0,C_word t1) C_noret;
C_noret_decl(f_12700)
static void C_ccall f_12700(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_12715)
static void C_ccall f_12715(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_12707)
static void C_ccall f_12707(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_12671)
static void C_ccall f_12671(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_12675)
static void C_ccall f_12675(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_12636)
static void C_ccall f_12636(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_12640)
static void C_ccall f_12640(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_12601)
static void C_ccall f_12601(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_12605)
static void C_ccall f_12605(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_12298)
static void C_fcall f_12298(C_word t0,C_word t1) C_noret;
C_noret_decl(f_12565)
static void C_ccall f_12565(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_12580)
static void C_ccall f_12580(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_12572)
static void C_ccall f_12572(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_12536)
static void C_ccall f_12536(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_12540)
static void C_ccall f_12540(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_12501)
static void C_ccall f_12501(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_12505)
static void C_ccall f_12505(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_12466)
static void C_ccall f_12466(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_12470)
static void C_ccall f_12470(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_12301)
static void C_fcall f_12301(C_word t0,C_word t1) C_noret;
C_noret_decl(f_12430)
static void C_ccall f_12430(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_12445)
static void C_ccall f_12445(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_12437)
static void C_ccall f_12437(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_12401)
static void C_ccall f_12401(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_12405)
static void C_ccall f_12405(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_12366)
static void C_ccall f_12366(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_12370)
static void C_ccall f_12370(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_12331)
static void C_ccall f_12331(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_12335)
static void C_ccall f_12335(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_12304)
static void C_fcall f_12304(C_word t0,C_word t1) C_noret;
C_noret_decl(f_12307)
static void C_ccall f_12307(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_11975)
static void C_ccall f_11975(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_11978)
static void C_ccall f_11978(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_12252)
static void C_ccall f_12252(C_word c,C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_12256)
static void C_ccall f_12256(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_12259)
static void C_ccall f_12259(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_12262)
static void C_ccall f_12262(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_12265)
static void C_ccall f_12265(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_12278)
static void C_ccall f_12278(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_12268)
static void C_fcall f_12268(C_word t0,C_word t1) C_noret;
C_noret_decl(f_11984)
static void C_ccall f_11984(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_11991)
static void C_fcall f_11991(C_word t0,C_word t1) C_noret;
C_noret_decl(f_12222)
static void C_ccall f_12222(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_12237)
static void C_ccall f_12237(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_12229)
static void C_ccall f_12229(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_12193)
static void C_ccall f_12193(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_12197)
static void C_ccall f_12197(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_12158)
static void C_ccall f_12158(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_12162)
static void C_ccall f_12162(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_11994)
static void C_fcall f_11994(C_word t0,C_word t1) C_noret;
C_noret_decl(f_12122)
static void C_ccall f_12122(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_12137)
static void C_ccall f_12137(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_12129)
static void C_ccall f_12129(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_12093)
static void C_ccall f_12093(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_12097)
static void C_ccall f_12097(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_12058)
static void C_ccall f_12058(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_12062)
static void C_ccall f_12062(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_11997)
static void C_fcall f_11997(C_word t0,C_word t1) C_noret;
C_noret_decl(f_12000)
static void C_ccall f_12000(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_12015)
static void C_ccall f_12015(C_word c,C_word t0,C_word t1,C_word t2,C_word t3) C_noret;
C_noret_decl(f_12037)
static void C_ccall f_12037(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_12021)
static void C_ccall f_12021(C_word c,C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_12029)
static void C_ccall f_12029(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_12003)
static void C_ccall f_12003(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_12006)
static void C_ccall f_12006(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_11888)
static void C_fcall f_11888(C_word t0,C_word t1) C_noret;
C_noret_decl(f_11879)
static void C_fcall f_11879(C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_11870)
static void C_fcall f_11870(C_word t0,C_word t1) C_noret;
C_noret_decl(f_11852)
static void C_fcall f_11852(C_word t0,C_word t1) C_noret;
C_noret_decl(f_11834)
static void C_fcall f_11834(C_word t0,C_word t1) C_noret;
C_noret_decl(f_11816)
static void C_fcall f_11816(C_word t0,C_word t1) C_noret;
C_noret_decl(f_11807)
static void C_fcall f_11807(C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_11798)
static void C_fcall f_11798(C_word t0,C_word t1) C_noret;
C_noret_decl(f_11576)
static void C_ccall f_11576(C_word c,C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_11626)
static void C_ccall f_11626(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_11771)
static void C_ccall f_11771(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_11652)
static void C_ccall f_11652(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_11767)
static void C_ccall f_11767(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_11752)
static void C_ccall f_11752(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_11733)
static void C_ccall f_11733(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_11706)
static void C_ccall f_11706(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_11659)
static void C_ccall f_11659(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_11629)
static void C_fcall f_11629(C_word t0,C_word t1) C_noret;
C_noret_decl(f_11579)
static void C_ccall f_11579(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4,C_word t5,C_word t6) C_noret;
C_noret_decl(f_11585)
static void C_fcall f_11585(C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_11601)
static void C_ccall f_11601(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_11604)
static void C_ccall f_11604(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_11102)
static void C_ccall f_11102(C_word c,C_word t0,C_word t1,C_word t2,...) C_noret;
C_noret_decl(f_11102)
static void C_ccall f_11102r(C_word t0,C_word t1,C_word t2,C_word t4) C_noret;
C_noret_decl(f_11566)
static void C_ccall f_11566(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_11106)
static void C_fcall f_11106(C_word t0,C_word t1) C_noret;
C_noret_decl(f_11538)
static void C_ccall f_11538(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_11553)
static void C_ccall f_11553(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_11545)
static void C_ccall f_11545(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_11509)
static void C_ccall f_11509(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_11513)
static void C_ccall f_11513(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_11474)
static void C_ccall f_11474(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_11478)
static void C_ccall f_11478(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_11439)
static void C_ccall f_11439(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_11443)
static void C_ccall f_11443(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_11109)
static void C_fcall f_11109(C_word t0,C_word t1) C_noret;
C_noret_decl(f_11403)
static void C_ccall f_11403(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_11418)
static void C_ccall f_11418(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_11410)
static void C_ccall f_11410(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_11374)
static void C_ccall f_11374(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_11378)
static void C_ccall f_11378(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_11339)
static void C_ccall f_11339(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_11343)
static void C_ccall f_11343(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_11304)
static void C_ccall f_11304(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_11308)
static void C_ccall f_11308(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_11112)
static void C_fcall f_11112(C_word t0,C_word t1) C_noret;
C_noret_decl(f_11268)
static void C_ccall f_11268(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_11283)
static void C_ccall f_11283(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_11275)
static void C_ccall f_11275(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_11239)
static void C_ccall f_11239(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_11243)
static void C_ccall f_11243(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_11204)
static void C_ccall f_11204(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_11208)
static void C_ccall f_11208(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_11169)
static void C_ccall f_11169(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_11173)
static void C_ccall f_11173(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_11115)
static void C_fcall f_11115(C_word t0,C_word t1) C_noret;
C_noret_decl(f_11118)
static void C_ccall f_11118(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_11121)
static void C_ccall f_11121(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_11136)
static void C_ccall f_11136(C_word c,C_word t0,C_word t1,C_word t2,C_word t3) C_noret;
C_noret_decl(f_11148)
static void C_ccall f_11148(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_11127)
static void C_ccall f_11127(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_11130)
static void C_ccall f_11130(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_11026)
static void C_ccall f_11026(C_word c,C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_11030)
static void C_ccall f_11030(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_11049)
static void C_ccall f_11049(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_11059)
static void C_ccall f_11059(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_11061)
static void C_fcall f_11061(C_word t0,C_word t1,C_word t2,C_word t3,C_word t4) C_noret;
C_noret_decl(f_11078)
static void C_ccall f_11078(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_11081)
static void C_ccall f_11081(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_11092)
static void C_ccall f_11092(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_11033)
static void C_ccall f_11033(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_10763)
static void C_ccall f_10763(C_word c,C_word t0,C_word t1,C_word t2,...) C_noret;
C_noret_decl(f_10763)
static void C_ccall f_10763r(C_word t0,C_word t1,C_word t2,C_word t4) C_noret;
C_noret_decl(f_11016)
static void C_ccall f_11016(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_10767)
static void C_fcall f_10767(C_word t0,C_word t1) C_noret;
C_noret_decl(f_10988)
static void C_ccall f_10988(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_11003)
static void C_ccall f_11003(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_10995)
static void C_ccall f_10995(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_10959)
static void C_ccall f_10959(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_10963)
static void C_ccall f_10963(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_10924)
static void C_ccall f_10924(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_10928)
static void C_ccall f_10928(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_10770)
static void C_fcall f_10770(C_word t0,C_word t1) C_noret;
C_noret_decl(f_10888)
static void C_ccall f_10888(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_10903)
static void C_ccall f_10903(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_10895)
static void C_ccall f_10895(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_10859)
static void C_ccall f_10859(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_10863)
static void C_ccall f_10863(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_10824)
static void C_ccall f_10824(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_10828)
static void C_ccall f_10828(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_10773)
static void C_fcall f_10773(C_word t0,C_word t1) C_noret;
C_noret_decl(f_10776)
static void C_ccall f_10776(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_10779)
static void C_ccall f_10779(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_10791)
static void C_ccall f_10791(C_word c,C_word t0,C_word t1,C_word t2,C_word t3) C_noret;
C_noret_decl(f_10803)
static void C_ccall f_10803(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_10785)
static void C_ccall f_10785(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_10727)
static void C_ccall f_10727(C_word c,C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_10731)
static void C_ccall f_10731(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_10753)
static void C_ccall f_10753(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_10747)
static void C_ccall f_10747(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_10740)
static void C_ccall f_10740(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_10480)
static void C_ccall f_10480(C_word c,C_word t0,C_word t1,C_word t2,...) C_noret;
C_noret_decl(f_10480)
static void C_ccall f_10480r(C_word t0,C_word t1,C_word t2,C_word t4) C_noret;
C_noret_decl(f_10484)
static void C_fcall f_10484(C_word t0,C_word t1) C_noret;
C_noret_decl(f_10697)
static void C_ccall f_10697(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_10712)
static void C_ccall f_10712(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_10704)
static void C_ccall f_10704(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_10668)
static void C_ccall f_10668(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_10672)
static void C_ccall f_10672(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_10633)
static void C_ccall f_10633(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_10637)
static void C_ccall f_10637(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_10487)
static void C_fcall f_10487(C_word t0,C_word t1) C_noret;
C_noret_decl(f_10597)
static void C_ccall f_10597(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_10612)
static void C_ccall f_10612(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_10604)
static void C_ccall f_10604(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_10568)
static void C_ccall f_10568(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_10572)
static void C_ccall f_10572(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_10533)
static void C_ccall f_10533(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_10537)
static void C_ccall f_10537(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_10490)
static void C_fcall f_10490(C_word t0,C_word t1) C_noret;
C_noret_decl(f_10493)
static void C_ccall f_10493(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_10496)
static void C_ccall f_10496(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_10504)
static void C_ccall f_10504(C_word c,C_word t0,C_word t1,C_word t2,C_word t3) C_noret;
C_noret_decl(f_10512)
static void C_ccall f_10512(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_10502)
static void C_ccall f_10502(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_10265)
static void C_ccall f_10265(C_word c,C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_10269)
static void C_ccall f_10269(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_10478)
static void C_ccall f_10478(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_10431)
static void C_ccall f_10431(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_10443)
static void C_fcall f_10443(C_word t0,C_word t1) C_noret;
C_noret_decl(f_10299)
static void C_ccall f_10299(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_10302)
static void C_ccall f_10302(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_10308)
static void C_ccall f_10308(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_10311)
static void C_ccall f_10311(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_10399)
static void C_fcall f_10399(C_word t0,C_word t1) C_noret;
C_noret_decl(f_10314)
static void C_fcall f_10314(C_word t0,C_word t1) C_noret;
C_noret_decl(f_10393)
static void C_ccall f_10393(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_10320)
static void C_ccall f_10320(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_10323)
static void C_ccall f_10323(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_10275)
static void C_ccall f_10275(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_10278)
static void C_ccall f_10278(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_10285)
static void C_ccall f_10285(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_9795)
static void C_ccall f_9795(C_word c,C_word t0,C_word t1,C_word t2,...) C_noret;
C_noret_decl(f_9795)
static void C_ccall f_9795r(C_word t0,C_word t1,C_word t2,C_word t4) C_noret;
C_noret_decl(f_9799)
static void C_fcall f_9799(C_word t0,C_word t1) C_noret;
C_noret_decl(f_10235)
static void C_ccall f_10235(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_10250)
static void C_ccall f_10250(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_10242)
static void C_ccall f_10242(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_10206)
static void C_ccall f_10206(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_10210)
static void C_ccall f_10210(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_10171)
static void C_ccall f_10171(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_10175)
static void C_ccall f_10175(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_10136)
static void C_ccall f_10136(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_10140)
static void C_ccall f_10140(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_9802)
static void C_fcall f_9802(C_word t0,C_word t1) C_noret;
C_noret_decl(f_10100)
static void C_ccall f_10100(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_10115)
static void C_ccall f_10115(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_10107)
static void C_ccall f_10107(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_10071)
static void C_ccall f_10071(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_10075)
static void C_ccall f_10075(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_10036)
static void C_ccall f_10036(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_10040)
static void C_ccall f_10040(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_10001)
static void C_ccall f_10001(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_10005)
static void C_ccall f_10005(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_9805)
static void C_fcall f_9805(C_word t0,C_word t1) C_noret;
C_noret_decl(f_9965)
static void C_ccall f_9965(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_9980)
static void C_ccall f_9980(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_9972)
static void C_ccall f_9972(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_9936)
static void C_ccall f_9936(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_9940)
static void C_ccall f_9940(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_9901)
static void C_ccall f_9901(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_9905)
static void C_ccall f_9905(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_9866)
static void C_ccall f_9866(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_9870)
static void C_ccall f_9870(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_9808)
static void C_fcall f_9808(C_word t0,C_word t1) C_noret;
C_noret_decl(f_9811)
static void C_ccall f_9811(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_9814)
static void C_ccall f_9814(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_9837)
static void C_ccall f_9837(C_word c,C_word t0,C_word t1,C_word t2,C_word t3) C_noret;
C_noret_decl(f_9845)
static void C_ccall f_9845(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_9820)
static void C_ccall f_9820(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_9823)
static void C_ccall f_9823(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_9715)
static void C_fcall f_9715(C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_9706)
static void C_fcall f_9706(C_word t0,C_word t1) C_noret;
C_noret_decl(f_9634)
static void C_ccall f_9634(C_word c,C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_9638)
static void C_ccall f_9638(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_9641)
static void C_fcall f_9641(C_word t0,C_word t1) C_noret;
C_noret_decl(f_9379)
static void C_ccall f_9379(C_word c,C_word t0,C_word t1,C_word t2,...) C_noret;
C_noret_decl(f_9379)
static void C_ccall f_9379r(C_word t0,C_word t1,C_word t2,C_word t4) C_noret;
C_noret_decl(f_9383)
static void C_fcall f_9383(C_word t0,C_word t1) C_noret;
C_noret_decl(f_9604)
static void C_ccall f_9604(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_9619)
static void C_ccall f_9619(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_9611)
static void C_ccall f_9611(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_9575)
static void C_ccall f_9575(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_9579)
static void C_ccall f_9579(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_9540)
static void C_ccall f_9540(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_9544)
static void C_ccall f_9544(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_9386)
static void C_fcall f_9386(C_word t0,C_word t1) C_noret;
C_noret_decl(f_9504)
static void C_ccall f_9504(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_9519)
static void C_ccall f_9519(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_9511)
static void C_ccall f_9511(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_9475)
static void C_ccall f_9475(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_9479)
static void C_ccall f_9479(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_9440)
static void C_ccall f_9440(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_9444)
static void C_ccall f_9444(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_9389)
static void C_fcall f_9389(C_word t0,C_word t1) C_noret;
C_noret_decl(f_9392)
static void C_ccall f_9392(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_9395)
static void C_ccall f_9395(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_9407)
static void C_ccall f_9407(C_word c,C_word t0,C_word t1,C_word t2,C_word t3) C_noret;
C_noret_decl(f_9419)
static void C_ccall f_9419(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_9401)
static void C_ccall f_9401(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_9264)
static void C_fcall f_9264(C_word t0,C_word t1) C_noret;
C_noret_decl(f_9377)
static void C_ccall f_9377(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_9274)
static void C_ccall f_9274(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_9362)
static void C_ccall f_9362(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_9373)
static void C_ccall f_9373(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_9369)
static void C_ccall f_9369(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_9277)
static void C_ccall f_9277(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_9359)
static void C_ccall f_9359(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_9285)
static void C_ccall f_9285(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_9349)
static void C_ccall f_9349(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_9294)
static void C_ccall f_9294(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_9313)
static void C_ccall f_9313(C_word c,C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_9342)
static void C_ccall f_9342(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_9323)
static void C_ccall f_9323(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_9338)
static void C_ccall f_9338(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_9326)
static void C_ccall f_9326(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_9297)
static void C_ccall f_9297(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_9307)
static void C_ccall f_9307(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_9288)
static void C_fcall f_9288(C_word t0,C_word t1) C_noret;
C_noret_decl(f_9291)
static void C_ccall f_9291(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_9218)
static void C_fcall f_9218(C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_9209)
static void C_fcall f_9209(C_word t0,C_word t1) C_noret;
C_noret_decl(f_8908)
static void C_fcall f_8908(C_word t0,C_word t1) C_noret;
C_noret_decl(f_8915)
static void C_ccall f_8915(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_9204)
static void C_ccall f_9204(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_8918)
static void C_ccall f_8918(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_9189)
static void C_ccall f_9189(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_9181)
static void C_ccall f_9181(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_9173)
static void C_ccall f_9173(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_9176)
static void C_ccall f_9176(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_9144)
static void C_fcall f_9144(C_word t0,C_word t1) C_noret;
C_noret_decl(f_9167)
static void C_ccall f_9167(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_9150)
static void C_fcall f_9150(C_word t0,C_word t1) C_noret;
C_noret_decl(f_9154)
static void C_ccall f_9154(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_8921)
static void C_ccall f_8921(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_8927)
static void C_ccall f_8927(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_9019)
static void C_ccall f_9019(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_9131)
static void C_ccall f_9131(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_9138)
static void C_ccall f_9138(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_9042)
static void C_fcall f_9042(C_word t0,C_word t1) C_noret;
C_noret_decl(f_9044)
static void C_fcall f_9044(C_word t0,C_word t1,C_word t2,C_word t3) C_noret;
C_noret_decl(f_9093)
static void C_fcall f_9093(C_word t0,C_word t1) C_noret;
C_noret_decl(f_9128)
static void C_ccall f_9128(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_9117)
static void C_ccall f_9117(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_9262)
static void C_ccall f_9262(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_9237)
static void C_ccall f_9237(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_9258)
static void C_ccall f_9258(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_9254)
static void C_ccall f_9254(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_9246)
static void C_ccall f_9246(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_9110)
static void C_ccall f_9110(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_9103)
static void C_ccall f_9103(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_9051)
static void C_ccall f_9051(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_9091)
static void C_ccall f_9091(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_9055)
static void C_ccall f_9055(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_9087)
static void C_ccall f_9087(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_9074)
static void C_ccall f_9074(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_9082)
static void C_ccall f_9082(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_9078)
static void C_ccall f_9078(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_9058)
static void C_fcall f_9058(C_word t0,C_word t1) C_noret;
C_noret_decl(f_9061)
static void C_ccall f_9061(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_9035)
static void C_ccall f_9035(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_9022)
static void C_ccall f_9022(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_9031)
static void C_ccall f_9031(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_9026)
static void C_ccall f_9026(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_8933)
static void C_ccall f_8933(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_9013)
static void C_ccall f_9013(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_8993)
static void C_ccall f_8993(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_8999)
static void C_ccall f_8999(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_9010)
static void C_ccall f_9010(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_8990)
static void C_ccall f_8990(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_8978)
static void C_ccall f_8978(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_8981)
static void C_ccall f_8981(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_8936)
static void C_ccall f_8936(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_8972)
static void C_ccall f_8972(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_8967)
static void C_ccall f_8967(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_8939)
static void C_ccall f_8939(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_8952)
static void C_ccall f_8952(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_8942)
static void C_fcall f_8942(C_word t0,C_word t1) C_noret;
C_noret_decl(f_8945)
static void C_ccall f_8945(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_8948)
static void C_ccall f_8948(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_8785)
static void C_ccall f_8785(C_word c,C_word t0,C_word t1,C_word t2,...) C_noret;
C_noret_decl(f_8785)
static void C_ccall f_8785r(C_word t0,C_word t1,C_word t2,C_word t4) C_noret;
C_noret_decl(f_8844)
static void C_ccall f_8844(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_8854)
static void C_ccall f_8854(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_8856)
static void C_fcall f_8856(C_word t0,C_word t1,C_word t2,C_word t3,C_word t4) C_noret;
C_noret_decl(f_8885)
static void C_ccall f_8885(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_8890)
static void C_ccall f_8890(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_8875)
static void C_fcall f_8875(C_word t0,C_word t1) C_noret;
C_noret_decl(f_8806)
static void C_fcall f_8806(C_word t0,C_word t1,C_word t2,C_word t3) C_noret;
C_noret_decl(f_8838)
static void C_ccall f_8838(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_8766)
static void C_ccall f_8766(C_word c,C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_8773)
static void C_ccall f_8773(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_8780)
static void C_ccall f_8780(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_8747)
static void C_ccall f_8747(C_word c,C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_8754)
static void C_ccall f_8754(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_8761)
static void C_ccall f_8761(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_8567)
static void C_fcall f_8567(C_word t0,C_word t1,C_word t2,C_word t3,C_word t4,C_word t5,C_word t6,C_word t7,C_word t8,C_word t9) C_noret;
C_noret_decl(f_8571)
static void C_ccall f_8571(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_8574)
static void C_ccall f_8574(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_8577)
static void C_ccall f_8577(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_8580)
static void C_ccall f_8580(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_8737)
static void C_ccall f_8737(C_word c,C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_8744)
static void C_ccall f_8744(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_8583)
static void C_ccall f_8583(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_8586)
static void C_fcall f_8586(C_word t0,C_word t1) C_noret;
C_noret_decl(f_8592)
static void C_ccall f_8592(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_8598)
static void C_ccall f_8598(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_8661)
static void C_ccall f_8661(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_8675)
static void C_ccall f_8675(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_8601)
static void C_fcall f_8601(C_word t0,C_word t1) C_noret;
C_noret_decl(f_8604)
static void C_ccall f_8604(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_8610)
static void C_fcall f_8610(C_word t0,C_word t1) C_noret;
C_noret_decl(f_8623)
static void C_ccall f_8623(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_8613)
static void C_ccall f_8613(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_8616)
static void C_ccall f_8616(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_8557)
static void C_fcall f_8557(C_word t0) C_noret;
C_noret_decl(f_8502)
static void C_fcall f_8502(C_word t0,C_word t1) C_noret;
C_noret_decl(f_8493)
static void C_fcall f_8493(C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_8376)
static void C_fcall f_8376(C_word t0,C_word t1) C_noret;
C_noret_decl(f_8367)
static void C_fcall f_8367(C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_8358)
static void C_ccall f_8358(C_word c,C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_8349)
static void C_fcall f_8349(C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_8340)
static void C_fcall f_8340(C_word t0,C_word t1) C_noret;
C_noret_decl(f_8322)
static void C_fcall f_8322(C_word t0,C_word t1) C_noret;
C_noret_decl(f_8313)
static void C_fcall f_8313(C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_8304)
static void C_fcall f_8304(C_word t0,C_word t1) C_noret;
C_noret_decl(f_8286)
static void C_fcall f_8286(C_word t0,C_word t1) C_noret;
C_noret_decl(f_8277)
static void C_fcall f_8277(C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_8268)
static void C_fcall f_8268(C_word t0,C_word t1) C_noret;
C_noret_decl(f_8253)
static void C_fcall f_8253(C_word t0,C_word t1) C_noret;
C_noret_decl(f_8208)
static void C_fcall f_8208(C_word t0,C_word t1) C_noret;
C_noret_decl(f_8190)
static void C_fcall f_8190(C_word t0,C_word t1) C_noret;
C_noret_decl(f_8181)
static void C_fcall f_8181(C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_8154)
static void C_fcall f_8154(C_word t0,C_word t1) C_noret;
C_noret_decl(f_8136)
static void C_fcall f_8136(C_word t0,C_word t1) C_noret;
C_noret_decl(f_8118)
static void C_fcall f_8118(C_word t0,C_word t1) C_noret;
C_noret_decl(f_8109)
static void C_fcall f_8109(C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_8097)
static void C_fcall f_8097(C_word t0,C_word t1,C_word t2,C_word t3,C_word t4,C_word t5,C_word t6) C_noret;
C_noret_decl(f_7981)
static void C_ccall f_7981(C_word c,C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_8095)
static void C_ccall f_8095(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_7996)
static void C_fcall f_7996(C_word t0,C_word t1,C_word t2,C_word t3,C_word t4,C_word t5) C_noret;
C_noret_decl(f_8026)
static void C_fcall f_8026(C_word t0,C_word t1) C_noret;
C_noret_decl(f_8045)
static void C_ccall f_8045(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_8030)
static void C_ccall f_8030(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_8009)
static void C_fcall f_8009(C_word t0,C_word t1) C_noret;
C_noret_decl(f_7859)
static void C_ccall f_7859(C_word c,C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_7979)
static void C_ccall f_7979(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_7874)
static void C_fcall f_7874(C_word t0,C_word t1,C_word t2,C_word t3,C_word t4,C_word t5) C_noret;
C_noret_decl(f_7904)
static void C_fcall f_7904(C_word t0,C_word t1) C_noret;
C_noret_decl(f_7923)
static void C_ccall f_7923(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_7908)
static void C_ccall f_7908(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_7887)
static void C_fcall f_7887(C_word t0,C_word t1) C_noret;
C_noret_decl(f_7762)
static void C_ccall f_7762(C_word c,C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_7857)
static void C_ccall f_7857(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_7777)
static void C_fcall f_7777(C_word t0,C_word t1,C_word t2,C_word t3,C_word t4,C_word t5) C_noret;
C_noret_decl(f_7823)
static void C_ccall f_7823(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_7808)
static void C_ccall f_7808(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_7790)
static void C_fcall f_7790(C_word t0,C_word t1) C_noret;
C_noret_decl(f_7709)
static void C_fcall f_7709(C_word t0,C_word t1,C_word t2,C_word t3) C_noret;
C_noret_decl(f_7747)
static void C_ccall f_7747(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_7754)
static void C_ccall f_7754(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_7732)
static void C_ccall f_7732(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_7673)
static void C_ccall f_7673(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_7683)
static void C_fcall f_7683(C_word t0,C_word t1) C_noret;
C_noret_decl(f_7685)
static void C_ccall f_7685(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_7663)
static void C_ccall f_7663(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_7611)
static void C_fcall f_7611(C_word t0,C_word t1,C_word t2,C_word t3) C_noret;
C_noret_decl(f_7648)
static void C_ccall f_7648(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_7615)
static void C_ccall f_7615(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_7631)
static void C_ccall f_7631(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_7633)
static void C_ccall f_7633(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_7598)
static void C_ccall f_7598(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_7592)
static void C_ccall f_7592(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_7573)
static void C_ccall f_7573(C_word c,C_word t0,C_word t1,...) C_noret;
C_noret_decl(f_7573)
static void C_ccall f_7573r(C_word t0,C_word t1,C_word t3) C_noret;
C_noret_decl(f_7554)
static void C_ccall f_7554(C_word c,C_word t0,C_word t1,...) C_noret;
C_noret_decl(f_7554)
static void C_ccall f_7554r(C_word t0,C_word t1,C_word t3) C_noret;
C_noret_decl(f_7548)
static void C_ccall f_7548(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_7508)
static void C_ccall f_7508(C_word c,C_word t0,C_word t1,...) C_noret;
C_noret_decl(f_7508)
static void C_ccall f_7508r(C_word t0,C_word t1,C_word t3) C_noret;
C_noret_decl(f_7489)
static void C_ccall f_7489(C_word c,C_word t0,C_word t1,...) C_noret;
C_noret_decl(f_7489)
static void C_ccall f_7489r(C_word t0,C_word t1,C_word t3) C_noret;
C_noret_decl(f_7261)
static void C_ccall f_7261(C_word c,C_word t0,C_word t1,...) C_noret;
C_noret_decl(f_7261)
static void C_ccall f_7261r(C_word t0,C_word t1,C_word t3) C_noret;
C_noret_decl(f_7466)
static void C_ccall f_7466(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_7481)
static void C_ccall f_7481(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_7473)
static void C_ccall f_7473(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_7437)
static void C_ccall f_7437(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_7441)
static void C_ccall f_7441(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_7402)
static void C_ccall f_7402(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_7406)
static void C_ccall f_7406(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_7265)
static void C_fcall f_7265(C_word t0,C_word t1) C_noret;
C_noret_decl(f_7366)
static void C_ccall f_7366(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_7381)
static void C_ccall f_7381(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_7373)
static void C_ccall f_7373(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_7337)
static void C_ccall f_7337(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_7341)
static void C_ccall f_7341(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_7302)
static void C_ccall f_7302(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_7306)
static void C_ccall f_7306(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_7268)
static void C_fcall f_7268(C_word t0,C_word t1) C_noret;
C_noret_decl(f_7271)
static void C_ccall f_7271(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_7274)
static void C_fcall f_7274(C_word t0,C_word t1) C_noret;
C_noret_decl(f_7255)
static void C_ccall f_7255(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_7249)
static void C_ccall f_7249(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_7243)
static void C_ccall f_7243(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_7015)
static void C_ccall f_7015(C_word c,C_word t0,C_word t1,C_word t2,...) C_noret;
C_noret_decl(f_7015)
static void C_ccall f_7015r(C_word t0,C_word t1,C_word t2,C_word t4) C_noret;
C_noret_decl(f_7220)
static void C_ccall f_7220(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_7235)
static void C_ccall f_7235(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_7227)
static void C_ccall f_7227(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_7191)
static void C_ccall f_7191(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_7195)
static void C_ccall f_7195(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_7156)
static void C_ccall f_7156(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_7160)
static void C_ccall f_7160(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_7019)
static void C_fcall f_7019(C_word t0,C_word t1) C_noret;
C_noret_decl(f_7120)
static void C_ccall f_7120(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_7135)
static void C_ccall f_7135(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_7127)
static void C_ccall f_7127(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_7091)
static void C_ccall f_7091(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_7095)
static void C_ccall f_7095(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_7056)
static void C_ccall f_7056(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_7060)
static void C_ccall f_7060(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_7022)
static void C_fcall f_7022(C_word t0,C_word t1) C_noret;
C_noret_decl(f_7025)
static void C_ccall f_7025(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_7035)
static void C_ccall f_7035(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_6967)
static void C_ccall f_6967(C_word c,C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_7005)
static void C_ccall f_7005(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_6994)
static void C_ccall f_6994(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_6946)
static void C_ccall f_6946(C_word c,C_word t0,C_word t1,C_word t2,C_word t3) C_noret;
C_noret_decl(f_6922)
static void C_ccall f_6922(C_word c,C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_6916)
static void C_ccall f_6916(C_word c,C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_6857)
static void C_ccall f_6857(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,...) C_noret;
C_noret_decl(f_6857)
static void C_ccall f_6857r(C_word t0,C_word t1,C_word t2,C_word t3,C_word t5) C_noret;
C_noret_decl(f_6870)
static void C_fcall f_6870(C_word t0,C_word t1,C_word t2,C_word t3,C_word t4,C_word t5) C_noret;
C_noret_decl(f_6906)
static void C_ccall f_6906(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_6830)
static void C_ccall f_6830(C_word c,C_word t0,C_word t1,C_word t2,...) C_noret;
C_noret_decl(f_6830)
static void C_ccall f_6830r(C_word t0,C_word t1,C_word t2,C_word t4) C_noret;
C_noret_decl(f_6735)
static void C_ccall f_6735(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,...) C_noret;
C_noret_decl(f_6735)
static void C_ccall f_6735r(C_word t0,C_word t1,C_word t2,C_word t3,C_word t5) C_noret;
C_noret_decl(f_6739)
static void C_ccall f_6739(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_6742)
static void C_ccall f_6742(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_6754)
static void C_fcall f_6754(C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_6776)
static void C_ccall f_6776(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_6720)
static void C_ccall f_6720(C_word c,C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_6705)
static void C_ccall f_6705(C_word c,C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_6645)
static void C_ccall f_6645(C_word c,C_word t0,C_word t1,C_word t2,...) C_noret;
C_noret_decl(f_6645)
static void C_ccall f_6645r(C_word t0,C_word t1,C_word t2,C_word t4) C_noret;
C_noret_decl(f_6657)
static void C_fcall f_6657(C_word t0,C_word t1) C_noret;
C_noret_decl(f_6652)
static void C_fcall f_6652(C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_6647)
static void C_fcall f_6647(C_word t0,C_word t1,C_word t2,C_word t3) C_noret;
C_noret_decl(f_6626)
static void C_ccall f_6626(C_word c,C_word t0,C_word t1,C_word t2,...) C_noret;
C_noret_decl(f_6626)
static void C_ccall f_6626r(C_word t0,C_word t1,C_word t2,C_word t4) C_noret;
C_noret_decl(f_6620)
static void C_ccall f_6620(C_word c,C_word t0,C_word t1,C_word t2,C_word t3) C_noret;
C_noret_decl(f_6605)
static void C_ccall f_6605(C_word c,C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_6523)
static void C_ccall f_6523(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4,C_word t5,...) C_noret;
C_noret_decl(f_6523)
static void C_ccall f_6523r(C_word t0,C_word t1,C_word t2,C_word t3,C_word t4,C_word t5,C_word t7) C_noret;
C_noret_decl(f_6537)
static void C_ccall f_6537(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_6489)
static void C_ccall f_6489(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4,C_word t5,C_word t6,...) C_noret;
C_noret_decl(f_6489)
static void C_ccall f_6489r(C_word t0,C_word t1,C_word t2,C_word t3,C_word t4,C_word t5,C_word t6,C_word t8) C_noret;
C_noret_decl(f_6501)
static void C_ccall f_6501(C_word c,C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_6476)
static void C_fcall f_6476(C_word t0,C_word t1) C_noret;
C_noret_decl(f_6466)
static void C_fcall f_6466(C_word t0,C_word t1) C_noret;
C_noret_decl(f_6448)
static void C_fcall f_6448(C_word t0,C_word t1) C_noret;
C_noret_decl(f_6437)
static void C_fcall f_6437(C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_6399)
static void C_fcall f_6399(C_word t0,C_word t1) C_noret;
C_noret_decl(f_6392)
static void C_fcall f_6392(C_word t0,C_word t1) C_noret;
C_noret_decl(f_6368)
static void C_fcall f_6368(C_word t0,C_word t1) C_noret;
C_noret_decl(f_6317)
static void C_fcall f_6317(C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_6283)
static void C_fcall f_6283(C_word t0,C_word t1,C_word t2,C_word t3,C_word t4,C_word t5,C_word t6) C_noret;
C_noret_decl(f_6256)
static void C_fcall f_6256(C_word t0,C_word t1,C_word t2,C_word t3,C_word t4,C_word t5,C_word t6) C_noret;
C_noret_decl(f_6215)
static void C_fcall f_6215(C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_6221)
static void C_fcall f_6221(C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_6231)
static void C_fcall f_6231(C_word t0,C_word t1) C_noret;
C_noret_decl(f_6129)
static void C_ccall f_6129(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,...) C_noret;
C_noret_decl(f_6129)
static void C_ccall f_6129r(C_word t0,C_word t1,C_word t2,C_word t3,C_word t5) C_noret;
C_noret_decl(f_6071)
static void C_fcall f_6071(C_word t0,C_word t1,C_word t2,C_word t3) C_noret;
C_noret_decl(f_6031)
static void C_ccall f_6031(C_word c,C_word t0,C_word t1,...) C_noret;
C_noret_decl(f_6031)
static void C_ccall f_6031r(C_word t0,C_word t1,C_word t3) C_noret;
C_noret_decl(f_6061)
static void C_ccall f_6061(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_5983)
static void C_ccall f_5983(C_word c,C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_6017)
static void C_ccall f_6017(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_5960)
static void C_ccall f_5960(C_word c,C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_5940)
static void C_ccall f_5940(C_word c,C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_5926)
static void C_ccall f_5926(C_word c,C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_5916)
static void C_ccall f_5916(C_word c,C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_5906)
static void C_ccall f_5906(C_word c,C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_5896)
static void C_ccall f_5896(C_word c,C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_5886)
static void C_ccall f_5886(C_word c,C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_5853)
static void C_ccall f_5853(C_word c,C_word t0,C_word t1,...) C_noret;
C_noret_decl(f_5853)
static void C_ccall f_5853r(C_word t0,C_word t1,C_word t3) C_noret;
C_noret_decl(f_5862)
static void C_ccall f_5862(C_word c,C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_5867)
static void C_ccall f_5867(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_5842)
static void C_ccall f_5842(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_5847)
static void C_ccall f_5847(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_5549)
static void C_ccall f_5549(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4) C_noret;
C_noret_decl(f_5559)
static void C_ccall f_5559(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_5810)
static void C_ccall f_5810(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_5562)
static void C_ccall f_5562(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_5565)
static void C_ccall f_5565(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_5580)
static void C_fcall f_5580(C_word t0,C_word t1) C_noret;
C_noret_decl(f_5590)
static void C_ccall f_5590(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_5592)
static void C_fcall f_5592(C_word t0,C_word t1,C_word t2,C_word t3,C_word t4,C_word t5) C_noret;
C_noret_decl(f_5651)
static void C_ccall f_5651(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_5661)
static void C_ccall f_5661(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_5778)
static void C_ccall f_5778(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_5766)
static void C_ccall f_5766(C_word c,C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_5764)
static void C_ccall f_5764(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_5751)
static void C_ccall f_5751(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_5705)
static void C_ccall f_5705(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_5732)
static void C_ccall f_5732(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_5711)
static void C_ccall f_5711(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_5645)
static void C_fcall f_5645(C_word t0,C_word t1) C_noret;
C_noret_decl(f_5604)
static void C_fcall f_5604(C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_5617)
static void C_fcall f_5617(C_word t0,C_word t1) C_noret;
C_noret_decl(f_5827)
static void C_ccall f_5827(C_word c,C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_5818)
static void C_ccall f_5818(C_word c,C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_5826)
static void C_ccall f_5826(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_5829)
static void C_ccall f_5829(C_word c,C_word t0,C_word t1,C_word t2,...) C_noret;
C_noret_decl(f_5829)
static void C_ccall f_5829r(C_word t0,C_word t1,C_word t2,C_word t4) C_noret;
C_noret_decl(f_5837)
static void C_ccall f_5837(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_5251)
static void C_ccall f_5251(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4) C_noret;
C_noret_decl(f_5504)
static void C_ccall f_5504(C_word c,C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_5537)
static void C_ccall f_5537(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_5533)
static void C_ccall f_5533(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_5522)
static void C_ccall f_5522(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_5518)
static void C_ccall f_5518(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_5412)
static void C_ccall f_5412(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_5415)
static void C_ccall f_5415(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_5418)
static void C_ccall f_5418(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_5498)
static void C_ccall f_5498(C_word c,C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_5323)
static void C_ccall f_5323(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_5264)
static void C_ccall f_5264(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_5421)
static void C_ccall f_5421(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_5428)
static void C_ccall f_5428(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_5488)
static void C_ccall f_5488(C_word c,C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_5474)
static void C_ccall f_5474(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_5440)
static void C_ccall f_5440(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_5466)
static void C_ccall f_5466(C_word c,C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_5401)
static void C_ccall f_5401(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_5448)
static void C_ccall f_5448(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_5444)
static void C_ccall f_5444(C_word c,C_word t0,C_word t1) C_noret;

C_noret_decl(trf_32576)
static void C_fcall trf_32576(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_32576(void *dummy){
C_word t2=C_pick(0);
C_word t1=C_pick(1);
C_word t0=C_pick(2);
C_adjust_stack(-3);
f_32576(t0,t1,t2);}

C_noret_decl(trf_32636)
static void C_fcall trf_32636(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_32636(void *dummy){
C_word t13=C_pick(0);
C_word t12=C_pick(1);
C_word t11=C_pick(2);
C_word t10=C_pick(3);
C_word t9=C_pick(4);
C_word t8=C_pick(5);
C_word t7=C_pick(6);
C_word t6=C_pick(7);
C_word t5=C_pick(8);
C_word t4=C_pick(9);
C_word t3=C_pick(10);
C_word t2=C_pick(11);
C_word t1=C_pick(12);
C_word t0=C_pick(13);
C_adjust_stack(-14);
f_32636(t0,t1,t2,t3,t4,t5,t6,t7,t8,t9,t10,t11,t12,t13);}

C_noret_decl(trf_32656)
static void C_fcall trf_32656(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_32656(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_32656(t0,t1);}

C_noret_decl(trf_32659)
static void C_fcall trf_32659(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_32659(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_32659(t0,t1);}

C_noret_decl(trf_32530)
static void C_fcall trf_32530(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_32530(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_32530(t0,t1);}

C_noret_decl(trf_32452)
static void C_fcall trf_32452(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_32452(void *dummy){
C_word t2=C_pick(0);
C_word t1=C_pick(1);
C_word t0=C_pick(2);
C_adjust_stack(-3);
f_32452(t0,t1,t2);}

C_noret_decl(trf_32264)
static void C_fcall trf_32264(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_32264(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_32264(t0,t1);}

C_noret_decl(trf_31146)
static void C_fcall trf_31146(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_31146(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_31146(t0,t1);}

C_noret_decl(trf_31019)
static void C_fcall trf_31019(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_31019(void *dummy){
C_word t2=C_pick(0);
C_word t1=C_pick(1);
C_word t0=C_pick(2);
C_adjust_stack(-3);
f_31019(t0,t1,t2);}

C_noret_decl(trf_30717)
static void C_fcall trf_30717(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_30717(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_30717(t0,t1);}

C_noret_decl(trf_29812)
static void C_fcall trf_29812(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_29812(void *dummy){
C_word t2=C_pick(0);
C_word t1=C_pick(1);
C_word t0=C_pick(2);
C_adjust_stack(-3);
f_29812(t0,t1,t2);}

C_noret_decl(trf_29847)
static void C_fcall trf_29847(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_29847(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_29847(t0,t1);}

C_noret_decl(trf_29871)
static void C_fcall trf_29871(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_29871(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_29871(t0,t1);}

C_noret_decl(trf_29850)
static void C_fcall trf_29850(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_29850(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_29850(t0,t1);}

C_noret_decl(trf_29653)
static void C_fcall trf_29653(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_29653(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_29653(t0,t1);}

C_noret_decl(trf_29471)
static void C_fcall trf_29471(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_29471(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_29471(t0,t1);}

C_noret_decl(trf_29478)
static void C_fcall trf_29478(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_29478(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_29478(t0,t1);}

C_noret_decl(trf_29459)
static void C_fcall trf_29459(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_29459(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_29459(t0,t1);}

C_noret_decl(trf_17353)
static void C_fcall trf_17353(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_17353(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_17353(t0,t1);}

C_noret_decl(trf_17360)
static void C_fcall trf_17360(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_17360(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_17360(t0,t1);}

C_noret_decl(trf_17674)
static void C_fcall trf_17674(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_17674(void *dummy){
C_word t2=C_pick(0);
C_word t1=C_pick(1);
C_word t0=C_pick(2);
C_adjust_stack(-3);
f_17674(t0,t1,t2);}

C_noret_decl(trf_17697)
static void C_fcall trf_17697(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_17697(void *dummy){
C_word t2=C_pick(0);
C_word t1=C_pick(1);
C_word t0=C_pick(2);
C_adjust_stack(-3);
f_17697(t0,t1,t2);}

C_noret_decl(trf_17714)
static void C_fcall trf_17714(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_17714(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_17714(t0,t1);}

C_noret_decl(trf_17717)
static void C_fcall trf_17717(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_17717(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_17717(t0,t1);}

C_noret_decl(trf_17720)
static void C_fcall trf_17720(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_17720(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_17720(t0,t1);}

C_noret_decl(trf_17638)
static void C_fcall trf_17638(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_17638(void *dummy){
C_word t2=C_pick(0);
C_word t1=C_pick(1);
C_word t0=C_pick(2);
C_adjust_stack(-3);
f_17638(t0,t1,t2);}

C_noret_decl(trf_17582)
static void C_fcall trf_17582(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_17582(void *dummy){
C_word t2=C_pick(0);
C_word t1=C_pick(1);
C_word t0=C_pick(2);
C_adjust_stack(-3);
f_17582(t0,t1,t2);}

C_noret_decl(trf_17598)
static void C_fcall trf_17598(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_17598(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_17598(t0,t1);}

C_noret_decl(trf_17376)
static void C_fcall trf_17376(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_17376(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_17376(t0,t1);}

C_noret_decl(trf_17379)
static void C_fcall trf_17379(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_17379(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_17379(t0,t1);}

C_noret_decl(trf_28968)
static void C_fcall trf_28968(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_28968(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_28968(t0,t1);}

C_noret_decl(trf_28971)
static void C_fcall trf_28971(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_28971(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_28971(t0,t1);}

C_noret_decl(trf_28814)
static void C_fcall trf_28814(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_28814(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_28814(t0,t1);}

C_noret_decl(trf_28622)
static void C_fcall trf_28622(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_28622(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_28622(t0,t1);}

C_noret_decl(trf_28472)
static void C_fcall trf_28472(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_28472(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_28472(t0,t1);}

C_noret_decl(trf_28561)
static void C_fcall trf_28561(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_28561(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_28561(t0,t1);}

C_noret_decl(trf_28475)
static void C_fcall trf_28475(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_28475(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_28475(t0,t1);}

C_noret_decl(trf_28491)
static void C_fcall trf_28491(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_28491(void *dummy){
C_word t3=C_pick(0);
C_word t2=C_pick(1);
C_word t1=C_pick(2);
C_word t0=C_pick(3);
C_adjust_stack(-4);
f_28491(t0,t1,t2,t3);}

C_noret_decl(trf_28513)
static void C_fcall trf_28513(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_28513(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_28513(t0,t1);}

C_noret_decl(trf_28408)
static void C_fcall trf_28408(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_28408(void *dummy){
C_word t2=C_pick(0);
C_word t1=C_pick(1);
C_word t0=C_pick(2);
C_adjust_stack(-3);
f_28408(t0,t1,t2);}

C_noret_decl(trf_28355)
static void C_fcall trf_28355(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_28355(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_28355(t0,t1);}

C_noret_decl(trf_21808)
static void C_fcall trf_21808(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_21808(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_21808(t0,t1);}

C_noret_decl(trf_21670)
static void C_fcall trf_21670(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_21670(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_21670(t0,t1);}

C_noret_decl(trf_21884)
static void C_fcall trf_21884(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_21884(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_21884(t0,t1);}

C_noret_decl(trf_27851)
static void C_fcall trf_27851(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_27851(void *dummy){
C_word t2=C_pick(0);
C_word t1=C_pick(1);
C_word t0=C_pick(2);
C_adjust_stack(-3);
f_27851(t0,t1,t2);}

C_noret_decl(trf_27871)
static void C_fcall trf_27871(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_27871(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_27871(t0,t1);}

C_noret_decl(trf_27880)
static void C_fcall trf_27880(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_27880(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_27880(t0,t1);}

C_noret_decl(trf_27896)
static void C_fcall trf_27896(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_27896(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_27896(t0,t1);}

C_noret_decl(trf_27744)
static void C_fcall trf_27744(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_27744(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_27744(t0,t1);}

C_noret_decl(trf_27753)
static void C_fcall trf_27753(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_27753(void *dummy){
C_word t2=C_pick(0);
C_word t1=C_pick(1);
C_word t0=C_pick(2);
C_adjust_stack(-3);
f_27753(t0,t1,t2);}

C_noret_decl(trf_27777)
static void C_fcall trf_27777(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_27777(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_27777(t0,t1);}

C_noret_decl(trf_27598)
static void C_fcall trf_27598(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_27598(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_27598(t0,t1);}

C_noret_decl(trf_27505)
static void C_fcall trf_27505(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_27505(void *dummy){
C_word t2=C_pick(0);
C_word t1=C_pick(1);
C_word t0=C_pick(2);
C_adjust_stack(-3);
f_27505(t0,t1,t2);}

C_noret_decl(trf_27425)
static void C_fcall trf_27425(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_27425(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_27425(t0,t1);}

C_noret_decl(trf_27351)
static void C_fcall trf_27351(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_27351(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_27351(t0,t1);}

C_noret_decl(trf_27346)
static void C_fcall trf_27346(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_27346(void *dummy){
C_word t2=C_pick(0);
C_word t1=C_pick(1);
C_word t0=C_pick(2);
C_adjust_stack(-3);
f_27346(t0,t1,t2);}

C_noret_decl(trf_27234)
static void C_fcall trf_27234(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_27234(void *dummy){
C_word t3=C_pick(0);
C_word t2=C_pick(1);
C_word t1=C_pick(2);
C_word t0=C_pick(3);
C_adjust_stack(-4);
f_27234(t0,t1,t2,t3);}

C_noret_decl(trf_27305)
static void C_fcall trf_27305(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_27305(void *dummy){
C_word t2=C_pick(0);
C_word t1=C_pick(1);
C_word t0=C_pick(2);
C_adjust_stack(-3);
f_27305(t0,t1,t2);}

C_noret_decl(trf_27264)
static void C_fcall trf_27264(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_27264(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_27264(t0,t1);}

C_noret_decl(trf_27236)
static void C_fcall trf_27236(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_27236(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_27236(t0,t1);}

C_noret_decl(trf_27191)
static void C_fcall trf_27191(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_27191(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_27191(t0,t1);}

C_noret_decl(trf_27147)
static void C_fcall trf_27147(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_27147(void *dummy){
C_word t3=C_pick(0);
C_word t2=C_pick(1);
C_word t1=C_pick(2);
C_word t0=C_pick(3);
C_adjust_stack(-4);
f_27147(t0,t1,t2,t3);}

C_noret_decl(trf_27138)
static void C_fcall trf_27138(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_27138(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_27138(t0,t1);}

C_noret_decl(trf_26977)
static void C_fcall trf_26977(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_26977(void *dummy){
C_word t4=C_pick(0);
C_word t3=C_pick(1);
C_word t2=C_pick(2);
C_word t1=C_pick(3);
C_word t0=C_pick(4);
C_adjust_stack(-5);
f_26977(t0,t1,t2,t3,t4);}

C_noret_decl(trf_27003)
static void C_fcall trf_27003(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_27003(void *dummy){
C_word t2=C_pick(0);
C_word t1=C_pick(1);
C_word t0=C_pick(2);
C_adjust_stack(-3);
f_27003(t0,t1,t2);}

C_noret_decl(trf_27040)
static void C_fcall trf_27040(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_27040(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_27040(t0,t1);}

C_noret_decl(trf_26873)
static void C_fcall trf_26873(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_26873(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_26873(t0,t1);}

C_noret_decl(trf_26853)
static void C_fcall trf_26853(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_26853(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_26853(t0,t1);}

C_noret_decl(trf_26816)
static void C_fcall trf_26816(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_26816(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_26816(t0,t1);}

C_noret_decl(trf_26796)
static void C_fcall trf_26796(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_26796(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_26796(t0,t1);}

C_noret_decl(trf_25631)
static void C_fcall trf_25631(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_25631(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_25631(t0,t1);}

C_noret_decl(trf_25634)
static void C_fcall trf_25634(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_25634(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_25634(t0,t1);}

C_noret_decl(trf_25637)
static void C_fcall trf_25637(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_25637(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_25637(t0,t1);}

C_noret_decl(trf_25161)
static void C_fcall trf_25161(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_25161(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_25161(t0,t1);}

C_noret_decl(trf_25164)
static void C_fcall trf_25164(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_25164(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_25164(t0,t1);}

C_noret_decl(trf_25167)
static void C_fcall trf_25167(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_25167(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_25167(t0,t1);}

C_noret_decl(trf_24691)
static void C_fcall trf_24691(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_24691(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_24691(t0,t1);}

C_noret_decl(trf_24694)
static void C_fcall trf_24694(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_24694(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_24694(t0,t1);}

C_noret_decl(trf_24697)
static void C_fcall trf_24697(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_24697(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_24697(t0,t1);}

C_noret_decl(trf_23943)
static void C_fcall trf_23943(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_23943(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_23943(t0,t1);}

C_noret_decl(trf_23946)
static void C_fcall trf_23946(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_23946(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_23946(t0,t1);}

C_noret_decl(trf_23949)
static void C_fcall trf_23949(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_23949(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_23949(t0,t1);}

C_noret_decl(trf_23952)
static void C_fcall trf_23952(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_23952(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_23952(t0,t1);}

C_noret_decl(trf_23195)
static void C_fcall trf_23195(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_23195(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_23195(t0,t1);}

C_noret_decl(trf_23198)
static void C_fcall trf_23198(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_23198(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_23198(t0,t1);}

C_noret_decl(trf_23201)
static void C_fcall trf_23201(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_23201(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_23201(t0,t1);}

C_noret_decl(trf_23204)
static void C_fcall trf_23204(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_23204(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_23204(t0,t1);}

C_noret_decl(trf_22725)
static void C_fcall trf_22725(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_22725(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_22725(t0,t1);}

C_noret_decl(trf_22728)
static void C_fcall trf_22728(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_22728(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_22728(t0,t1);}

C_noret_decl(trf_22731)
static void C_fcall trf_22731(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_22731(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_22731(t0,t1);}

C_noret_decl(trf_21977)
static void C_fcall trf_21977(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_21977(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_21977(t0,t1);}

C_noret_decl(trf_21980)
static void C_fcall trf_21980(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_21980(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_21980(t0,t1);}

C_noret_decl(trf_21983)
static void C_fcall trf_21983(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_21983(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_21983(t0,t1);}

C_noret_decl(trf_21986)
static void C_fcall trf_21986(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_21986(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_21986(t0,t1);}

C_noret_decl(trf_21635)
static void C_fcall trf_21635(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_21635(void *dummy){
C_word t3=C_pick(0);
C_word t2=C_pick(1);
C_word t1=C_pick(2);
C_word t0=C_pick(3);
C_adjust_stack(-4);
f_21635(t0,t1,t2,t3);}

C_noret_decl(trf_21475)
static void C_fcall trf_21475(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_21475(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_21475(t0,t1);}

C_noret_decl(trf_21510)
static void C_fcall trf_21510(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_21510(void *dummy){
C_word t5=C_pick(0);
C_word t4=C_pick(1);
C_word t3=C_pick(2);
C_word t2=C_pick(3);
C_word t1=C_pick(4);
C_word t0=C_pick(5);
C_adjust_stack(-6);
f_21510(t0,t1,t2,t3,t4,t5);}

C_noret_decl(trf_21520)
static void C_fcall trf_21520(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_21520(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_21520(t0,t1);}

C_noret_decl(trf_21483)
static void C_fcall trf_21483(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_21483(void *dummy){
C_word t2=C_pick(0);
C_word t1=C_pick(1);
C_word t0=C_pick(2);
C_adjust_stack(-3);
f_21483(t0,t1,t2);}

C_noret_decl(trf_21643)
static void C_fcall trf_21643(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_21643(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_21643(t0,t1);}

C_noret_decl(trf_21261)
static void C_fcall trf_21261(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_21261(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_21261(t0,t1);}

C_noret_decl(trf_21267)
static void C_fcall trf_21267(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_21267(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_21267(t0,t1);}

C_noret_decl(trf_21290)
static void C_fcall trf_21290(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_21290(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_21290(t0,t1);}

C_noret_decl(trf_21303)
static void C_fcall trf_21303(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_21303(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_21303(t0,t1);}

C_noret_decl(trf_21277)
static void C_fcall trf_21277(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_21277(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_21277(t0,t1);}

C_noret_decl(trf_21090)
static void C_fcall trf_21090(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_21090(void *dummy){
C_word t3=C_pick(0);
C_word t2=C_pick(1);
C_word t1=C_pick(2);
C_word t0=C_pick(3);
C_adjust_stack(-4);
f_21090(t0,t1,t2,t3);}

C_noret_decl(trf_21099)
static void C_fcall trf_21099(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_21099(void *dummy){
C_word t4=C_pick(0);
C_word t3=C_pick(1);
C_word t2=C_pick(2);
C_word t1=C_pick(3);
C_word t0=C_pick(4);
C_adjust_stack(-5);
f_21099(t0,t1,t2,t3,t4);}

C_noret_decl(trf_21053)
static void C_fcall trf_21053(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_21053(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_21053(t0,t1);}

C_noret_decl(trf_20916)
static void C_fcall trf_20916(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_20916(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_20916(t0,t1);}

C_noret_decl(trf_20846)
static void C_fcall trf_20846(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_20846(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_20846(t0,t1);}

C_noret_decl(trf_20207)
static void C_fcall trf_20207(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_20207(void *dummy){
C_word t2=C_pick(0);
C_word t1=C_pick(1);
C_word t0=C_pick(2);
C_adjust_stack(-3);
f_20207(t0,t1,t2);}

C_noret_decl(trf_20167)
static void C_fcall trf_20167(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_20167(void *dummy){
C_word t2=C_pick(0);
C_word t1=C_pick(1);
C_word t0=C_pick(2);
C_adjust_stack(-3);
f_20167(t0,t1,t2);}

C_noret_decl(trf_20180)
static void C_fcall trf_20180(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_20180(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_20180(t0,t1);}

C_noret_decl(trf_20759)
static void C_fcall trf_20759(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_20759(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_20759(t0,t1);}

C_noret_decl(trf_20549)
static void C_fcall trf_20549(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_20549(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_20549(t0,t1);}

C_noret_decl(trf_20665)
static void C_fcall trf_20665(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_20665(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_20665(t0,t1);}

C_noret_decl(trf_20552)
static void C_fcall trf_20552(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_20552(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_20552(t0,t1);}

C_noret_decl(trf_20555)
static void C_fcall trf_20555(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_20555(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_20555(t0,t1);}

C_noret_decl(trf_20460)
static void C_fcall trf_20460(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_20460(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_20460(t0,t1);}

C_noret_decl(trf_20375)
static void C_fcall trf_20375(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_20375(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_20375(t0,t1);}

C_noret_decl(trf_20332)
static void C_fcall trf_20332(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_20332(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_20332(t0,t1);}

C_noret_decl(trf_20299)
static void C_fcall trf_20299(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_20299(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_20299(t0,t1);}

C_noret_decl(trf_20294)
static void C_fcall trf_20294(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_20294(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_20294(t0,t1);}

C_noret_decl(trf_20289)
static void C_fcall trf_20289(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_20289(void *dummy){
C_word t4=C_pick(0);
C_word t3=C_pick(1);
C_word t2=C_pick(2);
C_word t1=C_pick(3);
C_word t0=C_pick(4);
C_adjust_stack(-5);
f_20289(t0,t1,t2,t3,t4);}

C_noret_decl(trf_20036)
static void C_fcall trf_20036(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_20036(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_20036(t0,t1);}

C_noret_decl(trf_19883)
static void C_fcall trf_19883(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_19883(void *dummy){
C_word t3=C_pick(0);
C_word t2=C_pick(1);
C_word t1=C_pick(2);
C_word t0=C_pick(3);
C_adjust_stack(-4);
f_19883(t0,t1,t2,t3);}

C_noret_decl(trf_19729)
static void C_fcall trf_19729(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_19729(void *dummy){
C_word t2=C_pick(0);
C_word t1=C_pick(1);
C_word t0=C_pick(2);
C_adjust_stack(-3);
f_19729(t0,t1,t2);}

C_noret_decl(trf_19571)
static void C_fcall trf_19571(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_19571(void *dummy){
C_word t2=C_pick(0);
C_word t1=C_pick(1);
C_word t0=C_pick(2);
C_adjust_stack(-3);
f_19571(t0,t1,t2);}

C_noret_decl(trf_19604)
static void C_fcall trf_19604(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_19604(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_19604(t0,t1);}

C_noret_decl(trf_19511)
static void C_fcall trf_19511(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_19511(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_19511(t0,t1);}

C_noret_decl(trf_19476)
static void C_fcall trf_19476(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_19476(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_19476(t0,t1);}

C_noret_decl(trf_19492)
static void C_fcall trf_19492(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_19492(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_19492(t0,t1);}

C_noret_decl(trf_19447)
static void C_fcall trf_19447(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_19447(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_19447(t0,t1);}

C_noret_decl(trf_19354)
static void C_fcall trf_19354(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_19354(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_19354(t0,t1);}

C_noret_decl(trf_19110)
static void C_fcall trf_19110(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_19110(void *dummy){
C_word t2=C_pick(0);
C_word t1=C_pick(1);
C_word t0=C_pick(2);
C_adjust_stack(-3);
f_19110(t0,t1,t2);}

C_noret_decl(trf_18914)
static void C_fcall trf_18914(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_18914(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_18914(t0,t1);}

C_noret_decl(trf_19077)
static void C_fcall trf_19077(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_19077(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_19077(t0,t1);}

C_noret_decl(trf_18917)
static void C_fcall trf_18917(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_18917(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_18917(t0,t1);}

C_noret_decl(trf_18920)
static void C_fcall trf_18920(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_18920(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_18920(t0,t1);}

C_noret_decl(trf_18923)
static void C_fcall trf_18923(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_18923(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_18923(t0,t1);}

C_noret_decl(trf_18965)
static void C_fcall trf_18965(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_18965(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_18965(t0,t1);}

C_noret_decl(trf_18930)
static void C_fcall trf_18930(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_18930(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_18930(t0,t1);}

C_noret_decl(trf_18659)
static void C_fcall trf_18659(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_18659(void *dummy){
C_word t3=C_pick(0);
C_word t2=C_pick(1);
C_word t1=C_pick(2);
C_word t0=C_pick(3);
C_adjust_stack(-4);
f_18659(t0,t1,t2,t3);}

C_noret_decl(trf_18667)
static void C_fcall trf_18667(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_18667(void *dummy){
C_word t3=C_pick(0);
C_word t2=C_pick(1);
C_word t1=C_pick(2);
C_word t0=C_pick(3);
C_adjust_stack(-4);
f_18667(t0,t1,t2,t3);}

C_noret_decl(trf_18796)
static void C_fcall trf_18796(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_18796(void *dummy){
C_word t2=C_pick(0);
C_word t1=C_pick(1);
C_word t0=C_pick(2);
C_adjust_stack(-3);
f_18796(t0,t1,t2);}

C_noret_decl(trf_18750)
static void C_fcall trf_18750(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_18750(void *dummy){
C_word t2=C_pick(0);
C_word t1=C_pick(1);
C_word t0=C_pick(2);
C_adjust_stack(-3);
f_18750(t0,t1,t2);}

C_noret_decl(trf_18653)
static void C_fcall trf_18653(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_18653(void *dummy){
C_word t2=C_pick(0);
C_word t1=C_pick(1);
C_word t0=C_pick(2);
C_adjust_stack(-3);
f_18653(t0,t1,t2);}

C_noret_decl(trf_18647)
static void C_fcall trf_18647(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_18647(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_18647(t0,t1);}

C_noret_decl(trf_18641)
static void C_fcall trf_18641(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_18641(void *dummy){
C_word t2=C_pick(0);
C_word t1=C_pick(1);
C_word t0=C_pick(2);
C_adjust_stack(-3);
f_18641(t0,t1,t2);}

C_noret_decl(trf_18570)
static void C_fcall trf_18570(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_18570(void *dummy){
C_word t2=C_pick(0);
C_word t1=C_pick(1);
C_word t0=C_pick(2);
C_adjust_stack(-3);
f_18570(t0,t1,t2);}

C_noret_decl(trf_18572)
static void C_fcall trf_18572(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_18572(void *dummy){
C_word t2=C_pick(0);
C_word t1=C_pick(1);
C_word t0=C_pick(2);
C_adjust_stack(-3);
f_18572(t0,t1,t2);}

C_noret_decl(trf_18578)
static void C_fcall trf_18578(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_18578(void *dummy){
C_word t2=C_pick(0);
C_word t1=C_pick(1);
C_word t0=C_pick(2);
C_adjust_stack(-3);
f_18578(t0,t1,t2);}

C_noret_decl(trf_18419)
static void C_fcall trf_18419(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_18419(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_18419(t0,t1);}

C_noret_decl(trf_18434)
static void C_fcall trf_18434(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_18434(void *dummy){
C_word t2=C_pick(0);
C_word t1=C_pick(1);
C_word t0=C_pick(2);
C_adjust_stack(-3);
f_18434(t0,t1,t2);}

C_noret_decl(trf_18377)
static void C_fcall trf_18377(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_18377(void *dummy){
C_word t2=C_pick(0);
C_word t1=C_pick(1);
C_word t0=C_pick(2);
C_adjust_stack(-3);
f_18377(t0,t1,t2);}

C_noret_decl(trf_18317)
static void C_fcall trf_18317(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_18317(void *dummy){
C_word t2=C_pick(0);
C_word t1=C_pick(1);
C_word t0=C_pick(2);
C_adjust_stack(-3);
f_18317(t0,t1,t2);}

C_noret_decl(trf_18193)
static void C_fcall trf_18193(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_18193(void *dummy){
C_word t2=C_pick(0);
C_word t1=C_pick(1);
C_word t0=C_pick(2);
C_adjust_stack(-3);
f_18193(t0,t1,t2);}

C_noret_decl(trf_18043)
static void C_fcall trf_18043(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_18043(void *dummy){
C_word t2=C_pick(0);
C_word t1=C_pick(1);
C_word t0=C_pick(2);
C_adjust_stack(-3);
f_18043(t0,t1,t2);}

C_noret_decl(trf_18079)
static void C_fcall trf_18079(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_18079(void *dummy){
C_word t2=C_pick(0);
C_word t1=C_pick(1);
C_word t0=C_pick(2);
C_adjust_stack(-3);
f_18079(t0,t1,t2);}

C_noret_decl(trf_17878)
static void C_fcall trf_17878(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_17878(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_17878(t0,t1);}

C_noret_decl(trf_15698)
static void C_fcall trf_15698(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_15698(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_15698(t0,t1);}

C_noret_decl(trf_18009)
static void C_fcall trf_18009(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_18009(void *dummy){
C_word t2=C_pick(0);
C_word t1=C_pick(1);
C_word t0=C_pick(2);
C_adjust_stack(-3);
f_18009(t0,t1,t2);}

C_noret_decl(trf_18019)
static void C_fcall trf_18019(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_18019(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_18019(t0,t1);}

C_noret_decl(trf_17979)
static void C_fcall trf_17979(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_17979(void *dummy){
C_word t2=C_pick(0);
C_word t1=C_pick(1);
C_word t0=C_pick(2);
C_adjust_stack(-3);
f_17979(t0,t1,t2);}

C_noret_decl(trf_17989)
static void C_fcall trf_17989(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_17989(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_17989(t0,t1);}

C_noret_decl(trf_17040)
static void C_fcall trf_17040(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_17040(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_17040(t0,t1);}

C_noret_decl(trf_17043)
static void C_fcall trf_17043(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_17043(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_17043(t0,t1);}

C_noret_decl(trf_17046)
static void C_fcall trf_17046(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_17046(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_17046(t0,t1);}

C_noret_decl(trf_17049)
static void C_fcall trf_17049(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_17049(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_17049(t0,t1);}

C_noret_decl(trf_17052)
static void C_fcall trf_17052(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_17052(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_17052(t0,t1);}

C_noret_decl(trf_17055)
static void C_fcall trf_17055(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_17055(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_17055(t0,t1);}

C_noret_decl(trf_16883)
static void C_fcall trf_16883(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_16883(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_16883(t0,t1);}

C_noret_decl(trf_16812)
static void C_fcall trf_16812(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_16812(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_16812(t0,t1);}

C_noret_decl(trf_16627)
static void C_fcall trf_16627(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_16627(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_16627(t0,t1);}

C_noret_decl(trf_16639)
static void C_fcall trf_16639(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_16639(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_16639(t0,t1);}

C_noret_decl(trf_16676)
static void C_fcall trf_16676(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_16676(void *dummy){
C_word t4=C_pick(0);
C_word t3=C_pick(1);
C_word t2=C_pick(2);
C_word t1=C_pick(3);
C_word t0=C_pick(4);
C_adjust_stack(-5);
f_16676(t0,t1,t2,t3,t4);}

C_noret_decl(trf_16711)
static void C_fcall trf_16711(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_16711(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_16711(t0,t1);}

C_noret_decl(trf_16606)
static void C_fcall trf_16606(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_16606(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_16606(t0,t1);}

C_noret_decl(trf_16541)
static void C_fcall trf_16541(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_16541(void *dummy){
C_word t2=C_pick(0);
C_word t1=C_pick(1);
C_word t0=C_pick(2);
C_adjust_stack(-3);
f_16541(t0,t1,t2);}

C_noret_decl(trf_16550)
static void C_fcall trf_16550(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_16550(void *dummy){
C_word t2=C_pick(0);
C_word t1=C_pick(1);
C_word t0=C_pick(2);
C_adjust_stack(-3);
f_16550(t0,t1,t2);}

C_noret_decl(trf_16563)
static void C_fcall trf_16563(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_16563(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_16563(t0,t1);}

C_noret_decl(trf_16497)
static void C_fcall trf_16497(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_16497(void *dummy){
C_word t2=C_pick(0);
C_word t1=C_pick(1);
C_word t0=C_pick(2);
C_adjust_stack(-3);
f_16497(t0,t1,t2);}

C_noret_decl(trf_16485)
static void C_fcall trf_16485(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_16485(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_16485(t0,t1);}

C_noret_decl(trf_16383)
static void C_fcall trf_16383(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_16383(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_16383(t0,t1);}

C_noret_decl(trf_16335)
static void C_fcall trf_16335(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_16335(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_16335(t0,t1);}

C_noret_decl(trf_15716)
static void C_fcall trf_15716(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_15716(void *dummy){
C_word t6=C_pick(0);
C_word t5=C_pick(1);
C_word t4=C_pick(2);
C_word t3=C_pick(3);
C_word t2=C_pick(4);
C_word t1=C_pick(5);
C_word t0=C_pick(6);
C_adjust_stack(-7);
f_15716(t0,t1,t2,t3,t4,t5,t6);}

C_noret_decl(trf_15726)
static void C_fcall trf_15726(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_15726(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_15726(t0,t1);}

C_noret_decl(trf_15855)
static void C_fcall trf_15855(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_15855(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_15855(t0,t1);}

C_noret_decl(trf_15943)
static void C_fcall trf_15943(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_15943(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_15943(t0,t1);}

C_noret_decl(trf_16016)
static void C_fcall trf_16016(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_16016(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_16016(t0,t1);}

C_noret_decl(trf_16094)
static void C_fcall trf_16094(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_16094(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_16094(t0,t1);}

C_noret_decl(trf_16045)
static void C_fcall trf_16045(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_16045(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_16045(t0,t1);}

C_noret_decl(trf_16061)
static void C_fcall trf_16061(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_16061(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_16061(t0,t1);}

C_noret_decl(trf_16025)
static void C_fcall trf_16025(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_16025(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_16025(t0,t1);}

C_noret_decl(trf_15967)
static void C_fcall trf_15967(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_15967(void *dummy){
C_word t2=C_pick(0);
C_word t1=C_pick(1);
C_word t0=C_pick(2);
C_adjust_stack(-3);
f_15967(t0,t1,t2);}

C_noret_decl(trf_15886)
static void C_fcall trf_15886(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_15886(void *dummy){
C_word t2=C_pick(0);
C_word t1=C_pick(1);
C_word t0=C_pick(2);
C_adjust_stack(-3);
f_15886(t0,t1,t2);}

C_noret_decl(trf_15902)
static void C_fcall trf_15902(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_15902(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_15902(t0,t1);}

C_noret_decl(trf_15870)
static void C_fcall trf_15870(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_15870(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_15870(t0,t1);}

C_noret_decl(trf_15612)
static void C_fcall trf_15612(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_15612(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_15612(t0,t1);}

C_noret_decl(trf_15621)
static void C_fcall trf_15621(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_15621(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_15621(t0,t1);}

C_noret_decl(trf_15626)
static void C_fcall trf_15626(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_15626(void *dummy){
C_word t2=C_pick(0);
C_word t1=C_pick(1);
C_word t0=C_pick(2);
C_adjust_stack(-3);
f_15626(t0,t1,t2);}

C_noret_decl(trf_15604)
static void C_fcall trf_15604(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_15604(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_15604(t0,t1);}

C_noret_decl(trf_15396)
static void C_fcall trf_15396(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_15396(void *dummy){
C_word t3=C_pick(0);
C_word t2=C_pick(1);
C_word t1=C_pick(2);
C_word t0=C_pick(3);
C_adjust_stack(-4);
f_15396(t0,t1,t2,t3);}

C_noret_decl(trf_15363)
static void C_fcall trf_15363(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_15363(void *dummy){
C_word t3=C_pick(0);
C_word t2=C_pick(1);
C_word t1=C_pick(2);
C_word t0=C_pick(3);
C_adjust_stack(-4);
f_15363(t0,t1,t2,t3);}

C_noret_decl(trf_15345)
static void C_fcall trf_15345(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_15345(void *dummy){
C_word t3=C_pick(0);
C_word t2=C_pick(1);
C_word t1=C_pick(2);
C_word t0=C_pick(3);
C_adjust_stack(-4);
f_15345(t0,t1,t2,t3);}

C_noret_decl(trf_15335)
static void C_fcall trf_15335(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_15335(void *dummy){
C_word t3=C_pick(0);
C_word t2=C_pick(1);
C_word t1=C_pick(2);
C_word t0=C_pick(3);
C_adjust_stack(-4);
f_15335(t0,t1,t2,t3);}

C_noret_decl(trf_15323)
static void C_fcall trf_15323(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_15323(void *dummy){
C_word t2=C_pick(0);
C_word t1=C_pick(1);
C_word t0=C_pick(2);
C_adjust_stack(-3);
f_15323(t0,t1,t2);}

C_noret_decl(trf_15291)
static void C_fcall trf_15291(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_15291(void *dummy){
C_word t2=C_pick(0);
C_word t1=C_pick(1);
C_word t0=C_pick(2);
C_adjust_stack(-3);
f_15291(t0,t1,t2);}

C_noret_decl(trf_15275)
static void C_fcall trf_15275(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_15275(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_15275(t0,t1);}

C_noret_decl(trf_15263)
static void C_fcall trf_15263(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_15263(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_15263(t0,t1);}

C_noret_decl(trf_15245)
static void C_fcall trf_15245(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_15245(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_15245(t0,t1);}

C_noret_decl(trf_15227)
static void C_fcall trf_15227(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_15227(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_15227(t0,t1);}

C_noret_decl(trf_15212)
static void C_fcall trf_15212(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_15212(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_15212(t0,t1);}

C_noret_decl(trf_15206)
static void C_fcall trf_15206(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_15206(void *dummy){
C_word t3=C_pick(0);
C_word t2=C_pick(1);
C_word t1=C_pick(2);
C_word t0=C_pick(3);
C_adjust_stack(-4);
f_15206(t0,t1,t2,t3);}

C_noret_decl(trf_15194)
static void C_fcall trf_15194(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_15194(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_15194(t0,t1);}

C_noret_decl(trf_15176)
static void C_fcall trf_15176(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_15176(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_15176(t0,t1);}

C_noret_decl(trf_15155)
static void C_fcall trf_15155(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_15155(void *dummy){
C_word t2=C_pick(0);
C_word t1=C_pick(1);
C_word t0=C_pick(2);
C_adjust_stack(-3);
f_15155(t0,t1,t2);}

C_noret_decl(trf_15123)
static void C_fcall trf_15123(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_15123(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_15123(t0,t1);}

C_noret_decl(trf_15065)
static void C_fcall trf_15065(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_15065(void *dummy){
C_word t2=C_pick(0);
C_word t1=C_pick(1);
C_word t0=C_pick(2);
C_adjust_stack(-3);
f_15065(t0,t1,t2);}

C_noret_decl(trf_15055)
static void C_fcall trf_15055(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_15055(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_15055(t0,t1);}

C_noret_decl(trf_15049)
static void C_fcall trf_15049(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_15049(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_15049(t0,t1);}

C_noret_decl(trf_15037)
static void C_fcall trf_15037(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_15037(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_15037(t0,t1);}

C_noret_decl(trf_15013)
static void C_fcall trf_15013(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_15013(void *dummy){
C_word t2=C_pick(0);
C_word t1=C_pick(1);
C_word t0=C_pick(2);
C_adjust_stack(-3);
f_15013(t0,t1,t2);}

C_noret_decl(trf_14926)
static void C_fcall trf_14926(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_14926(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_14926(t0,t1);}

C_noret_decl(trf_14905)
static void C_fcall trf_14905(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_14905(void *dummy){
C_word t5=C_pick(0);
C_word t4=C_pick(1);
C_word t3=C_pick(2);
C_word t2=C_pick(3);
C_word t1=C_pick(4);
C_word t0=C_pick(5);
C_adjust_stack(-6);
f_14905(t0,t1,t2,t3,t4,t5);}

C_noret_decl(trf_14895)
static void C_fcall trf_14895(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_14895(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_14895(t0,t1);}

C_noret_decl(trf_14883)
static void C_fcall trf_14883(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_14883(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_14883(t0,t1);}

C_noret_decl(trf_14842)
static void C_fcall trf_14842(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_14842(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_14842(t0,t1);}

C_noret_decl(trf_14824)
static void C_fcall trf_14824(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_14824(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_14824(t0,t1);}

C_noret_decl(trf_14806)
static void C_fcall trf_14806(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_14806(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_14806(t0,t1);}

C_noret_decl(trf_14729)
static void C_fcall trf_14729(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_14729(void *dummy){
C_word t2=C_pick(0);
C_word t1=C_pick(1);
C_word t0=C_pick(2);
C_adjust_stack(-3);
f_14729(t0,t1,t2);}

C_noret_decl(trf_14754)
static void C_fcall trf_14754(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_14754(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_14754(t0,t1);}

C_noret_decl(trf_14457)
static void C_fcall trf_14457(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_14457(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_14457(t0,t1);}

C_noret_decl(trf_14460)
static void C_fcall trf_14460(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_14460(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_14460(t0,t1);}

C_noret_decl(trf_14466)
static void C_fcall trf_14466(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_14466(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_14466(t0,t1);}

C_noret_decl(trf_14180)
static void C_fcall trf_14180(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_14180(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_14180(t0,t1);}

C_noret_decl(trf_14183)
static void C_fcall trf_14183(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_14183(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_14183(t0,t1);}

C_noret_decl(trf_14110)
static void C_fcall trf_14110(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_14110(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_14110(t0,t1);}

C_noret_decl(trf_13958)
static void C_fcall trf_13958(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_13958(void *dummy){
C_word t4=C_pick(0);
C_word t3=C_pick(1);
C_word t2=C_pick(2);
C_word t1=C_pick(3);
C_word t0=C_pick(4);
C_adjust_stack(-5);
f_13958(t0,t1,t2,t3,t4);}

C_noret_decl(trf_13883)
static void C_fcall trf_13883(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_13883(void *dummy){
C_word t4=C_pick(0);
C_word t3=C_pick(1);
C_word t2=C_pick(2);
C_word t1=C_pick(3);
C_word t0=C_pick(4);
C_adjust_stack(-5);
f_13883(t0,t1,t2,t3,t4);}

C_noret_decl(trf_13893)
static void C_fcall trf_13893(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_13893(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_13893(t0,t1);}

C_noret_decl(trf_13900)
static void C_fcall trf_13900(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_13900(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_13900(t0,t1);}

C_noret_decl(trf_13995)
static void C_fcall trf_13995(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_13995(void *dummy){
C_word t2=C_pick(0);
C_word t1=C_pick(1);
C_word t0=C_pick(2);
C_adjust_stack(-3);
f_13995(t0,t1,t2);}

C_noret_decl(trf_13773)
static void C_fcall trf_13773(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_13773(void *dummy){
C_word t3=C_pick(0);
C_word t2=C_pick(1);
C_word t1=C_pick(2);
C_word t0=C_pick(3);
C_adjust_stack(-4);
f_13773(t0,t1,t2,t3);}

C_noret_decl(trf_13785)
static void C_fcall trf_13785(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_13785(void *dummy){
C_word t4=C_pick(0);
C_word t3=C_pick(1);
C_word t2=C_pick(2);
C_word t1=C_pick(3);
C_word t0=C_pick(4);
C_adjust_stack(-5);
f_13785(t0,t1,t2,t3,t4);}

C_noret_decl(trf_13846)
static void C_fcall trf_13846(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_13846(void *dummy){
C_word t2=C_pick(0);
C_word t1=C_pick(1);
C_word t0=C_pick(2);
C_adjust_stack(-3);
f_13846(t0,t1,t2);}

C_noret_decl(trf_13210)
static void C_fcall trf_13210(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_13210(void *dummy){
C_word t5=C_pick(0);
C_word t4=C_pick(1);
C_word t3=C_pick(2);
C_word t2=C_pick(3);
C_word t1=C_pick(4);
C_word t0=C_pick(5);
C_adjust_stack(-6);
f_13210(t0,t1,t2,t3,t4,t5);}

C_noret_decl(trf_13146)
static void C_fcall trf_13146(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_13146(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_13146(t0,t1);}

C_noret_decl(trf_13093)
static void C_fcall trf_13093(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_13093(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_13093(t0,t1);}

C_noret_decl(trf_13096)
static void C_fcall trf_13096(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_13096(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_13096(t0,t1);}

C_noret_decl(trf_13290)
static void C_fcall trf_13290(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_13290(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_13290(t0,t1);}

C_noret_decl(trf_13293)
static void C_fcall trf_13293(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_13293(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_13293(t0,t1);}

C_noret_decl(trf_13296)
static void C_fcall trf_13296(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_13296(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_13296(t0,t1);}

C_noret_decl(trf_6093)
static void C_fcall trf_6093(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_6093(void *dummy){
C_word t3=C_pick(0);
C_word t2=C_pick(1);
C_word t1=C_pick(2);
C_word t0=C_pick(3);
C_adjust_stack(-4);
f_6093(t0,t1,t2,t3);}

C_noret_decl(trf_13311)
static void C_fcall trf_13311(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_13311(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_13311(t0,t1);}

C_noret_decl(trf_12872)
static void C_fcall trf_12872(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_12872(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_12872(t0,t1);}

C_noret_decl(trf_12964)
static void C_fcall trf_12964(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_12964(void *dummy){
C_word t2=C_pick(0);
C_word t1=C_pick(1);
C_word t0=C_pick(2);
C_adjust_stack(-3);
f_12964(t0,t1,t2);}

C_noret_decl(trf_12983)
static void C_fcall trf_12983(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_12983(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_12983(t0,t1);}

C_noret_decl(trf_12937)
static void C_fcall trf_12937(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_12937(void *dummy){
C_word t2=C_pick(0);
C_word t1=C_pick(1);
C_word t0=C_pick(2);
C_adjust_stack(-3);
f_12937(t0,t1,t2);}

C_noret_decl(trf_12882)
static void C_fcall trf_12882(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_12882(void *dummy){
C_word t2=C_pick(0);
C_word t1=C_pick(1);
C_word t0=C_pick(2);
C_adjust_stack(-3);
f_12882(t0,t1,t2);}

C_noret_decl(trf_12892)
static void C_fcall trf_12892(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_12892(void *dummy){
C_word t3=C_pick(0);
C_word t2=C_pick(1);
C_word t1=C_pick(2);
C_word t0=C_pick(3);
C_adjust_stack(-4);
f_12892(t0,t1,t2,t3);}

C_noret_decl(trf_12738)
static void C_fcall trf_12738(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_12738(void *dummy){
C_word t2=C_pick(0);
C_word t1=C_pick(1);
C_word t0=C_pick(2);
C_adjust_stack(-3);
f_12738(t0,t1,t2);}

C_noret_decl(trf_12807)
static void C_fcall trf_12807(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_12807(void *dummy){
C_word t2=C_pick(0);
C_word t1=C_pick(1);
C_word t0=C_pick(2);
C_adjust_stack(-3);
f_12807(t0,t1,t2);}

C_noret_decl(trf_12753)
static void C_fcall trf_12753(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_12753(void *dummy){
C_word t4=C_pick(0);
C_word t3=C_pick(1);
C_word t2=C_pick(2);
C_word t1=C_pick(3);
C_word t0=C_pick(4);
C_adjust_stack(-5);
f_12753(t0,t1,t2,t3,t4);}

C_noret_decl(trf_12295)
static void C_fcall trf_12295(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_12295(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_12295(t0,t1);}

C_noret_decl(trf_12298)
static void C_fcall trf_12298(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_12298(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_12298(t0,t1);}

C_noret_decl(trf_12301)
static void C_fcall trf_12301(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_12301(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_12301(t0,t1);}

C_noret_decl(trf_12304)
static void C_fcall trf_12304(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_12304(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_12304(t0,t1);}

C_noret_decl(trf_12268)
static void C_fcall trf_12268(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_12268(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_12268(t0,t1);}

C_noret_decl(trf_11991)
static void C_fcall trf_11991(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_11991(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_11991(t0,t1);}

C_noret_decl(trf_11994)
static void C_fcall trf_11994(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_11994(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_11994(t0,t1);}

C_noret_decl(trf_11997)
static void C_fcall trf_11997(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_11997(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_11997(t0,t1);}

C_noret_decl(trf_11888)
static void C_fcall trf_11888(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_11888(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_11888(t0,t1);}

C_noret_decl(trf_11879)
static void C_fcall trf_11879(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_11879(void *dummy){
C_word t2=C_pick(0);
C_word t1=C_pick(1);
C_word t0=C_pick(2);
C_adjust_stack(-3);
f_11879(t0,t1,t2);}

C_noret_decl(trf_11870)
static void C_fcall trf_11870(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_11870(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_11870(t0,t1);}

C_noret_decl(trf_11852)
static void C_fcall trf_11852(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_11852(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_11852(t0,t1);}

C_noret_decl(trf_11834)
static void C_fcall trf_11834(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_11834(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_11834(t0,t1);}

C_noret_decl(trf_11816)
static void C_fcall trf_11816(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_11816(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_11816(t0,t1);}

C_noret_decl(trf_11807)
static void C_fcall trf_11807(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_11807(void *dummy){
C_word t2=C_pick(0);
C_word t1=C_pick(1);
C_word t0=C_pick(2);
C_adjust_stack(-3);
f_11807(t0,t1,t2);}

C_noret_decl(trf_11798)
static void C_fcall trf_11798(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_11798(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_11798(t0,t1);}

C_noret_decl(trf_11629)
static void C_fcall trf_11629(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_11629(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_11629(t0,t1);}

C_noret_decl(trf_11585)
static void C_fcall trf_11585(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_11585(void *dummy){
C_word t2=C_pick(0);
C_word t1=C_pick(1);
C_word t0=C_pick(2);
C_adjust_stack(-3);
f_11585(t0,t1,t2);}

C_noret_decl(trf_11106)
static void C_fcall trf_11106(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_11106(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_11106(t0,t1);}

C_noret_decl(trf_11109)
static void C_fcall trf_11109(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_11109(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_11109(t0,t1);}

C_noret_decl(trf_11112)
static void C_fcall trf_11112(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_11112(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_11112(t0,t1);}

C_noret_decl(trf_11115)
static void C_fcall trf_11115(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_11115(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_11115(t0,t1);}

C_noret_decl(trf_11061)
static void C_fcall trf_11061(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_11061(void *dummy){
C_word t4=C_pick(0);
C_word t3=C_pick(1);
C_word t2=C_pick(2);
C_word t1=C_pick(3);
C_word t0=C_pick(4);
C_adjust_stack(-5);
f_11061(t0,t1,t2,t3,t4);}

C_noret_decl(trf_10767)
static void C_fcall trf_10767(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_10767(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_10767(t0,t1);}

C_noret_decl(trf_10770)
static void C_fcall trf_10770(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_10770(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_10770(t0,t1);}

C_noret_decl(trf_10773)
static void C_fcall trf_10773(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_10773(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_10773(t0,t1);}

C_noret_decl(trf_10484)
static void C_fcall trf_10484(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_10484(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_10484(t0,t1);}

C_noret_decl(trf_10487)
static void C_fcall trf_10487(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_10487(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_10487(t0,t1);}

C_noret_decl(trf_10490)
static void C_fcall trf_10490(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_10490(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_10490(t0,t1);}

C_noret_decl(trf_10443)
static void C_fcall trf_10443(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_10443(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_10443(t0,t1);}

C_noret_decl(trf_10399)
static void C_fcall trf_10399(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_10399(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_10399(t0,t1);}

C_noret_decl(trf_10314)
static void C_fcall trf_10314(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_10314(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_10314(t0,t1);}

C_noret_decl(trf_9799)
static void C_fcall trf_9799(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_9799(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_9799(t0,t1);}

C_noret_decl(trf_9802)
static void C_fcall trf_9802(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_9802(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_9802(t0,t1);}

C_noret_decl(trf_9805)
static void C_fcall trf_9805(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_9805(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_9805(t0,t1);}

C_noret_decl(trf_9808)
static void C_fcall trf_9808(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_9808(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_9808(t0,t1);}

C_noret_decl(trf_9715)
static void C_fcall trf_9715(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_9715(void *dummy){
C_word t2=C_pick(0);
C_word t1=C_pick(1);
C_word t0=C_pick(2);
C_adjust_stack(-3);
f_9715(t0,t1,t2);}

C_noret_decl(trf_9706)
static void C_fcall trf_9706(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_9706(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_9706(t0,t1);}

C_noret_decl(trf_9641)
static void C_fcall trf_9641(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_9641(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_9641(t0,t1);}

C_noret_decl(trf_9383)
static void C_fcall trf_9383(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_9383(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_9383(t0,t1);}

C_noret_decl(trf_9386)
static void C_fcall trf_9386(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_9386(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_9386(t0,t1);}

C_noret_decl(trf_9389)
static void C_fcall trf_9389(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_9389(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_9389(t0,t1);}

C_noret_decl(trf_9264)
static void C_fcall trf_9264(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_9264(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_9264(t0,t1);}

C_noret_decl(trf_9288)
static void C_fcall trf_9288(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_9288(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_9288(t0,t1);}

C_noret_decl(trf_9218)
static void C_fcall trf_9218(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_9218(void *dummy){
C_word t2=C_pick(0);
C_word t1=C_pick(1);
C_word t0=C_pick(2);
C_adjust_stack(-3);
f_9218(t0,t1,t2);}

C_noret_decl(trf_9209)
static void C_fcall trf_9209(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_9209(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_9209(t0,t1);}

C_noret_decl(trf_8908)
static void C_fcall trf_8908(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_8908(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_8908(t0,t1);}

C_noret_decl(trf_9144)
static void C_fcall trf_9144(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_9144(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_9144(t0,t1);}

C_noret_decl(trf_9150)
static void C_fcall trf_9150(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_9150(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_9150(t0,t1);}

C_noret_decl(trf_9042)
static void C_fcall trf_9042(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_9042(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_9042(t0,t1);}

C_noret_decl(trf_9044)
static void C_fcall trf_9044(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_9044(void *dummy){
C_word t3=C_pick(0);
C_word t2=C_pick(1);
C_word t1=C_pick(2);
C_word t0=C_pick(3);
C_adjust_stack(-4);
f_9044(t0,t1,t2,t3);}

C_noret_decl(trf_9093)
static void C_fcall trf_9093(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_9093(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_9093(t0,t1);}

C_noret_decl(trf_9058)
static void C_fcall trf_9058(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_9058(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_9058(t0,t1);}

C_noret_decl(trf_8942)
static void C_fcall trf_8942(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_8942(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_8942(t0,t1);}

C_noret_decl(trf_8856)
static void C_fcall trf_8856(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_8856(void *dummy){
C_word t4=C_pick(0);
C_word t3=C_pick(1);
C_word t2=C_pick(2);
C_word t1=C_pick(3);
C_word t0=C_pick(4);
C_adjust_stack(-5);
f_8856(t0,t1,t2,t3,t4);}

C_noret_decl(trf_8875)
static void C_fcall trf_8875(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_8875(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_8875(t0,t1);}

C_noret_decl(trf_8806)
static void C_fcall trf_8806(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_8806(void *dummy){
C_word t3=C_pick(0);
C_word t2=C_pick(1);
C_word t1=C_pick(2);
C_word t0=C_pick(3);
C_adjust_stack(-4);
f_8806(t0,t1,t2,t3);}

C_noret_decl(trf_8567)
static void C_fcall trf_8567(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_8567(void *dummy){
C_word t9=C_pick(0);
C_word t8=C_pick(1);
C_word t7=C_pick(2);
C_word t6=C_pick(3);
C_word t5=C_pick(4);
C_word t4=C_pick(5);
C_word t3=C_pick(6);
C_word t2=C_pick(7);
C_word t1=C_pick(8);
C_word t0=C_pick(9);
C_adjust_stack(-10);
f_8567(t0,t1,t2,t3,t4,t5,t6,t7,t8,t9);}

C_noret_decl(trf_8586)
static void C_fcall trf_8586(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_8586(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_8586(t0,t1);}

C_noret_decl(trf_8601)
static void C_fcall trf_8601(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_8601(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_8601(t0,t1);}

C_noret_decl(trf_8610)
static void C_fcall trf_8610(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_8610(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_8610(t0,t1);}

C_noret_decl(trf_8557)
static void C_fcall trf_8557(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_8557(void *dummy){
C_word t0=C_pick(0);
C_adjust_stack(-1);
f_8557(t0);}

C_noret_decl(trf_8502)
static void C_fcall trf_8502(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_8502(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_8502(t0,t1);}

C_noret_decl(trf_8493)
static void C_fcall trf_8493(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_8493(void *dummy){
C_word t2=C_pick(0);
C_word t1=C_pick(1);
C_word t0=C_pick(2);
C_adjust_stack(-3);
f_8493(t0,t1,t2);}

C_noret_decl(trf_8376)
static void C_fcall trf_8376(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_8376(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_8376(t0,t1);}

C_noret_decl(trf_8367)
static void C_fcall trf_8367(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_8367(void *dummy){
C_word t2=C_pick(0);
C_word t1=C_pick(1);
C_word t0=C_pick(2);
C_adjust_stack(-3);
f_8367(t0,t1,t2);}

C_noret_decl(trf_8349)
static void C_fcall trf_8349(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_8349(void *dummy){
C_word t2=C_pick(0);
C_word t1=C_pick(1);
C_word t0=C_pick(2);
C_adjust_stack(-3);
f_8349(t0,t1,t2);}

C_noret_decl(trf_8340)
static void C_fcall trf_8340(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_8340(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_8340(t0,t1);}

C_noret_decl(trf_8322)
static void C_fcall trf_8322(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_8322(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_8322(t0,t1);}

C_noret_decl(trf_8313)
static void C_fcall trf_8313(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_8313(void *dummy){
C_word t2=C_pick(0);
C_word t1=C_pick(1);
C_word t0=C_pick(2);
C_adjust_stack(-3);
f_8313(t0,t1,t2);}

C_noret_decl(trf_8304)
static void C_fcall trf_8304(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_8304(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_8304(t0,t1);}

C_noret_decl(trf_8286)
static void C_fcall trf_8286(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_8286(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_8286(t0,t1);}

C_noret_decl(trf_8277)
static void C_fcall trf_8277(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_8277(void *dummy){
C_word t2=C_pick(0);
C_word t1=C_pick(1);
C_word t0=C_pick(2);
C_adjust_stack(-3);
f_8277(t0,t1,t2);}

C_noret_decl(trf_8268)
static void C_fcall trf_8268(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_8268(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_8268(t0,t1);}

C_noret_decl(trf_8253)
static void C_fcall trf_8253(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_8253(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_8253(t0,t1);}

C_noret_decl(trf_8208)
static void C_fcall trf_8208(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_8208(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_8208(t0,t1);}

C_noret_decl(trf_8190)
static void C_fcall trf_8190(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_8190(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_8190(t0,t1);}

C_noret_decl(trf_8181)
static void C_fcall trf_8181(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_8181(void *dummy){
C_word t2=C_pick(0);
C_word t1=C_pick(1);
C_word t0=C_pick(2);
C_adjust_stack(-3);
f_8181(t0,t1,t2);}

C_noret_decl(trf_8154)
static void C_fcall trf_8154(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_8154(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_8154(t0,t1);}

C_noret_decl(trf_8136)
static void C_fcall trf_8136(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_8136(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_8136(t0,t1);}

C_noret_decl(trf_8118)
static void C_fcall trf_8118(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_8118(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_8118(t0,t1);}

C_noret_decl(trf_8109)
static void C_fcall trf_8109(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_8109(void *dummy){
C_word t2=C_pick(0);
C_word t1=C_pick(1);
C_word t0=C_pick(2);
C_adjust_stack(-3);
f_8109(t0,t1,t2);}

C_noret_decl(trf_8097)
static void C_fcall trf_8097(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_8097(void *dummy){
C_word t6=C_pick(0);
C_word t5=C_pick(1);
C_word t4=C_pick(2);
C_word t3=C_pick(3);
C_word t2=C_pick(4);
C_word t1=C_pick(5);
C_word t0=C_pick(6);
C_adjust_stack(-7);
f_8097(t0,t1,t2,t3,t4,t5,t6);}

C_noret_decl(trf_7996)
static void C_fcall trf_7996(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_7996(void *dummy){
C_word t5=C_pick(0);
C_word t4=C_pick(1);
C_word t3=C_pick(2);
C_word t2=C_pick(3);
C_word t1=C_pick(4);
C_word t0=C_pick(5);
C_adjust_stack(-6);
f_7996(t0,t1,t2,t3,t4,t5);}

C_noret_decl(trf_8026)
static void C_fcall trf_8026(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_8026(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_8026(t0,t1);}

C_noret_decl(trf_8009)
static void C_fcall trf_8009(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_8009(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_8009(t0,t1);}

C_noret_decl(trf_7874)
static void C_fcall trf_7874(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_7874(void *dummy){
C_word t5=C_pick(0);
C_word t4=C_pick(1);
C_word t3=C_pick(2);
C_word t2=C_pick(3);
C_word t1=C_pick(4);
C_word t0=C_pick(5);
C_adjust_stack(-6);
f_7874(t0,t1,t2,t3,t4,t5);}

C_noret_decl(trf_7904)
static void C_fcall trf_7904(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_7904(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_7904(t0,t1);}

C_noret_decl(trf_7887)
static void C_fcall trf_7887(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_7887(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_7887(t0,t1);}

C_noret_decl(trf_7777)
static void C_fcall trf_7777(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_7777(void *dummy){
C_word t5=C_pick(0);
C_word t4=C_pick(1);
C_word t3=C_pick(2);
C_word t2=C_pick(3);
C_word t1=C_pick(4);
C_word t0=C_pick(5);
C_adjust_stack(-6);
f_7777(t0,t1,t2,t3,t4,t5);}

C_noret_decl(trf_7790)
static void C_fcall trf_7790(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_7790(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_7790(t0,t1);}

C_noret_decl(trf_7709)
static void C_fcall trf_7709(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_7709(void *dummy){
C_word t3=C_pick(0);
C_word t2=C_pick(1);
C_word t1=C_pick(2);
C_word t0=C_pick(3);
C_adjust_stack(-4);
f_7709(t0,t1,t2,t3);}

C_noret_decl(trf_7683)
static void C_fcall trf_7683(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_7683(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_7683(t0,t1);}

C_noret_decl(trf_7611)
static void C_fcall trf_7611(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_7611(void *dummy){
C_word t3=C_pick(0);
C_word t2=C_pick(1);
C_word t1=C_pick(2);
C_word t0=C_pick(3);
C_adjust_stack(-4);
f_7611(t0,t1,t2,t3);}

C_noret_decl(trf_7265)
static void C_fcall trf_7265(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_7265(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_7265(t0,t1);}

C_noret_decl(trf_7268)
static void C_fcall trf_7268(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_7268(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_7268(t0,t1);}

C_noret_decl(trf_7274)
static void C_fcall trf_7274(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_7274(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_7274(t0,t1);}

C_noret_decl(trf_7019)
static void C_fcall trf_7019(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_7019(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_7019(t0,t1);}

C_noret_decl(trf_7022)
static void C_fcall trf_7022(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_7022(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_7022(t0,t1);}

C_noret_decl(trf_6870)
static void C_fcall trf_6870(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_6870(void *dummy){
C_word t5=C_pick(0);
C_word t4=C_pick(1);
C_word t3=C_pick(2);
C_word t2=C_pick(3);
C_word t1=C_pick(4);
C_word t0=C_pick(5);
C_adjust_stack(-6);
f_6870(t0,t1,t2,t3,t4,t5);}

C_noret_decl(trf_6754)
static void C_fcall trf_6754(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_6754(void *dummy){
C_word t2=C_pick(0);
C_word t1=C_pick(1);
C_word t0=C_pick(2);
C_adjust_stack(-3);
f_6754(t0,t1,t2);}

C_noret_decl(trf_6657)
static void C_fcall trf_6657(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_6657(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_6657(t0,t1);}

C_noret_decl(trf_6652)
static void C_fcall trf_6652(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_6652(void *dummy){
C_word t2=C_pick(0);
C_word t1=C_pick(1);
C_word t0=C_pick(2);
C_adjust_stack(-3);
f_6652(t0,t1,t2);}

C_noret_decl(trf_6647)
static void C_fcall trf_6647(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_6647(void *dummy){
C_word t3=C_pick(0);
C_word t2=C_pick(1);
C_word t1=C_pick(2);
C_word t0=C_pick(3);
C_adjust_stack(-4);
f_6647(t0,t1,t2,t3);}

C_noret_decl(trf_6476)
static void C_fcall trf_6476(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_6476(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_6476(t0,t1);}

C_noret_decl(trf_6466)
static void C_fcall trf_6466(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_6466(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_6466(t0,t1);}

C_noret_decl(trf_6448)
static void C_fcall trf_6448(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_6448(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_6448(t0,t1);}

C_noret_decl(trf_6437)
static void C_fcall trf_6437(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_6437(void *dummy){
C_word t2=C_pick(0);
C_word t1=C_pick(1);
C_word t0=C_pick(2);
C_adjust_stack(-3);
f_6437(t0,t1,t2);}

C_noret_decl(trf_6399)
static void C_fcall trf_6399(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_6399(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_6399(t0,t1);}

C_noret_decl(trf_6392)
static void C_fcall trf_6392(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_6392(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_6392(t0,t1);}

C_noret_decl(trf_6368)
static void C_fcall trf_6368(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_6368(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_6368(t0,t1);}

C_noret_decl(trf_6317)
static void C_fcall trf_6317(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_6317(void *dummy){
C_word t2=C_pick(0);
C_word t1=C_pick(1);
C_word t0=C_pick(2);
C_adjust_stack(-3);
f_6317(t0,t1,t2);}

C_noret_decl(trf_6283)
static void C_fcall trf_6283(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_6283(void *dummy){
C_word t6=C_pick(0);
C_word t5=C_pick(1);
C_word t4=C_pick(2);
C_word t3=C_pick(3);
C_word t2=C_pick(4);
C_word t1=C_pick(5);
C_word t0=C_pick(6);
C_adjust_stack(-7);
f_6283(t0,t1,t2,t3,t4,t5,t6);}

C_noret_decl(trf_6256)
static void C_fcall trf_6256(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_6256(void *dummy){
C_word t6=C_pick(0);
C_word t5=C_pick(1);
C_word t4=C_pick(2);
C_word t3=C_pick(3);
C_word t2=C_pick(4);
C_word t1=C_pick(5);
C_word t0=C_pick(6);
C_adjust_stack(-7);
f_6256(t0,t1,t2,t3,t4,t5,t6);}

C_noret_decl(trf_6215)
static void C_fcall trf_6215(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_6215(void *dummy){
C_word t2=C_pick(0);
C_word t1=C_pick(1);
C_word t0=C_pick(2);
C_adjust_stack(-3);
f_6215(t0,t1,t2);}

C_noret_decl(trf_6221)
static void C_fcall trf_6221(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_6221(void *dummy){
C_word t2=C_pick(0);
C_word t1=C_pick(1);
C_word t0=C_pick(2);
C_adjust_stack(-3);
f_6221(t0,t1,t2);}

C_noret_decl(trf_6231)
static void C_fcall trf_6231(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_6231(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_6231(t0,t1);}

C_noret_decl(trf_6071)
static void C_fcall trf_6071(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_6071(void *dummy){
C_word t3=C_pick(0);
C_word t2=C_pick(1);
C_word t1=C_pick(2);
C_word t0=C_pick(3);
C_adjust_stack(-4);
f_6071(t0,t1,t2,t3);}

C_noret_decl(trf_5580)
static void C_fcall trf_5580(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_5580(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_5580(t0,t1);}

C_noret_decl(trf_5592)
static void C_fcall trf_5592(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_5592(void *dummy){
C_word t5=C_pick(0);
C_word t4=C_pick(1);
C_word t3=C_pick(2);
C_word t2=C_pick(3);
C_word t1=C_pick(4);
C_word t0=C_pick(5);
C_adjust_stack(-6);
f_5592(t0,t1,t2,t3,t4,t5);}

C_noret_decl(trf_5645)
static void C_fcall trf_5645(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_5645(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_5645(t0,t1);}

C_noret_decl(trf_5604)
static void C_fcall trf_5604(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_5604(void *dummy){
C_word t2=C_pick(0);
C_word t1=C_pick(1);
C_word t0=C_pick(2);
C_adjust_stack(-3);
f_5604(t0,t1,t2);}

C_noret_decl(trf_5617)
static void C_fcall trf_5617(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_5617(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_5617(t0,t1);}

C_noret_decl(tr6)
static void C_fcall tr6(C_proc6 k) C_regparm C_noret;
C_regparm static void C_fcall tr6(C_proc6 k){
C_word t5=C_pick(0);
C_word t4=C_pick(1);
C_word t3=C_pick(2);
C_word t2=C_pick(3);
C_word t1=C_pick(4);
C_word t0=C_pick(5);
C_adjust_stack(-6);
(k)(6,t0,t1,t2,t3,t4,t5);}

C_noret_decl(tr7)
static void C_fcall tr7(C_proc7 k) C_regparm C_noret;
C_regparm static void C_fcall tr7(C_proc7 k){
C_word t6=C_pick(0);
C_word t5=C_pick(1);
C_word t4=C_pick(2);
C_word t3=C_pick(3);
C_word t2=C_pick(4);
C_word t1=C_pick(5);
C_word t0=C_pick(6);
C_adjust_stack(-7);
(k)(7,t0,t1,t2,t3,t4,t5,t6);}

C_noret_decl(tr3)
static void C_fcall tr3(C_proc3 k) C_regparm C_noret;
C_regparm static void C_fcall tr3(C_proc3 k){
C_word t2=C_pick(0);
C_word t1=C_pick(1);
C_word t0=C_pick(2);
C_adjust_stack(-3);
(k)(3,t0,t1,t2);}

C_noret_decl(tr5)
static void C_fcall tr5(C_proc5 k) C_regparm C_noret;
C_regparm static void C_fcall tr5(C_proc5 k){
C_word t4=C_pick(0);
C_word t3=C_pick(1);
C_word t2=C_pick(2);
C_word t1=C_pick(3);
C_word t0=C_pick(4);
C_adjust_stack(-5);
(k)(5,t0,t1,t2,t3,t4);}

C_noret_decl(tr4)
static void C_fcall tr4(C_proc4 k) C_regparm C_noret;
C_regparm static void C_fcall tr4(C_proc4 k){
C_word t3=C_pick(0);
C_word t2=C_pick(1);
C_word t1=C_pick(2);
C_word t0=C_pick(3);
C_adjust_stack(-4);
(k)(4,t0,t1,t2,t3);}

C_noret_decl(tr2)
static void C_fcall tr2(C_proc2 k) C_regparm C_noret;
C_regparm static void C_fcall tr2(C_proc2 k){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
(k)(2,t0,t1);}

C_noret_decl(tr7r)
static void C_fcall tr7r(C_proc7 k) C_regparm C_noret;
C_regparm static void C_fcall tr7r(C_proc7 k){
int n;
C_word *a,t7;
C_word t6=C_pick(0);
C_word t5=C_pick(1);
C_word t4=C_pick(2);
C_word t3=C_pick(3);
C_word t2=C_pick(4);
C_word t1=C_pick(5);
C_word t0=C_pick(6);
C_adjust_stack(-7);
n=C_rest_count(0);
a=C_alloc(n*3);
t7=C_restore_rest(a,n);
(k)(t0,t1,t2,t3,t4,t5,t6,t7);}

C_noret_decl(tr6r)
static void C_fcall tr6r(C_proc6 k) C_regparm C_noret;
C_regparm static void C_fcall tr6r(C_proc6 k){
int n;
C_word *a,t6;
C_word t5=C_pick(0);
C_word t4=C_pick(1);
C_word t3=C_pick(2);
C_word t2=C_pick(3);
C_word t1=C_pick(4);
C_word t0=C_pick(5);
C_adjust_stack(-6);
n=C_rest_count(0);
a=C_alloc(n*3);
t6=C_restore_rest(a,n);
(k)(t0,t1,t2,t3,t4,t5,t6);}

C_noret_decl(tr2r)
static void C_fcall tr2r(C_proc2 k) C_regparm C_noret;
C_regparm static void C_fcall tr2r(C_proc2 k){
int n;
C_word *a,t2;
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
n=C_rest_count(0);
a=C_alloc(n*3);
t2=C_restore_rest(a,n);
(k)(t0,t1,t2);}

C_noret_decl(tr4r)
static void C_fcall tr4r(C_proc4 k) C_regparm C_noret;
C_regparm static void C_fcall tr4r(C_proc4 k){
int n;
C_word *a,t4;
C_word t3=C_pick(0);
C_word t2=C_pick(1);
C_word t1=C_pick(2);
C_word t0=C_pick(3);
C_adjust_stack(-4);
n=C_rest_count(0);
a=C_alloc(n*3);
t4=C_restore_rest(a,n);
(k)(t0,t1,t2,t3,t4);}

C_noret_decl(tr3r)
static void C_fcall tr3r(C_proc3 k) C_regparm C_noret;
C_regparm static void C_fcall tr3r(C_proc3 k){
int n;
C_word *a,t3;
C_word t2=C_pick(0);
C_word t1=C_pick(1);
C_word t0=C_pick(2);
C_adjust_stack(-3);
n=C_rest_count(0);
a=C_alloc(n*3);
t3=C_restore_rest(a,n);
(k)(t0,t1,t2,t3);}

C_noret_decl(tr4rv)
static void C_fcall tr4rv(C_proc4 k) C_regparm C_noret;
C_regparm static void C_fcall tr4rv(C_proc4 k){
int n;
C_word *a,t4;
C_word t3=C_pick(0);
C_word t2=C_pick(1);
C_word t1=C_pick(2);
C_word t0=C_pick(3);
C_adjust_stack(-4);
n=C_rest_count(0);
a=C_alloc(n+1);
t4=C_restore_rest_vector(a,n);
(k)(t0,t1,t2,t3,t4);}

C_noret_decl(tr3rv)
static void C_fcall tr3rv(C_proc3 k) C_regparm C_noret;
C_regparm static void C_fcall tr3rv(C_proc3 k){
int n;
C_word *a,t3;
C_word t2=C_pick(0);
C_word t1=C_pick(1);
C_word t0=C_pick(2);
C_adjust_stack(-3);
n=C_rest_count(0);
a=C_alloc(n+1);
t3=C_restore_rest_vector(a,n);
(k)(t0,t1,t2,t3);}

C_noret_decl(tr2rv)
static void C_fcall tr2rv(C_proc2 k) C_regparm C_noret;
C_regparm static void C_fcall tr2rv(C_proc2 k){
int n;
C_word *a,t2;
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
n=C_rest_count(0);
a=C_alloc(n+1);
t2=C_restore_rest_vector(a,n);
(k)(t0,t1,t2);}

/* toplevel */
static C_TLS int toplevel_initialized=0;
C_noret_decl(toplevel_trampoline)
static void C_fcall toplevel_trampoline(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall toplevel_trampoline(void *dummy){
C_grace_toplevel(2,C_SCHEME_UNDEFINED,C_restore);}

void C_ccall C_grace_toplevel(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word *a;
if(toplevel_initialized) C_kontinue(t1,C_SCHEME_UNDEFINED);
else C_toplevel_entry(C_text("grace_toplevel"));
C_check_nursery_minimum(3);
if(!C_demand(3)){
C_save(t1);
C_reclaim((void*)toplevel_trampoline,NULL);}
toplevel_initialized=1;
if(!C_demand_2(4838)){
C_save(t1);
C_rereclaim2(4838*sizeof(C_word), 1);
t1=C_restore;}
a=C_alloc(3);
C_initialize_lf(lf,815);
lf[1]=C_decode_literal(C_heaptop,"\376B\000\000\033too many optional arguments");
lf[2]=C_h_intern(&lf[2],14,"expand-optkeys");
lf[3]=C_h_intern(&lf[3],3,"let");
lf[4]=C_h_intern(&lf[4],4,"let*");
lf[5]=C_h_intern(&lf[5],5,"null\077");
lf[6]=C_h_intern(&lf[6],5,"error");
lf[7]=C_decode_literal(C_heaptop,"\376B\000\000\022Too many arguments");
lf[8]=C_h_intern(&lf[8],6,"unless");
lf[9]=C_h_intern(&lf[9],10,"\003sysappend");
lf[10]=C_h_intern(&lf[10],3,"car");
lf[11]=C_h_intern(&lf[11],4,"case");
lf[12]=C_decode_literal(C_heaptop,"\376B\000\000\031Positional after keywords");
lf[13]=C_h_intern(&lf[13],4,"when");
lf[14]=C_h_intern(&lf[14],4,"set!");
lf[15]=C_h_intern(&lf[15],8,"keyword\077");
lf[16]=C_decode_literal(C_heaptop,"\376B\000\000\017Unknown keyword");
lf[17]=C_h_intern(&lf[17],3,"cdr");
lf[18]=C_h_intern(&lf[18],4,"else");
lf[19]=C_h_intern(&lf[19],7,"\003sysmap");
lf[20]=C_h_intern(&lf[20],6,"append");
lf[21]=C_decode_literal(C_heaptop,"\376B\000\000\021Redundant keyword");
lf[22]=C_h_intern(&lf[22],2,"if");
lf[23]=C_decode_literal(C_heaptop,"\376B\000\000\030Missing keyword value in");
lf[24]=C_h_intern(&lf[24],4,"cadr");
lf[25]=C_h_intern(&lf[25],4,"cddr");
lf[26]=C_h_intern(&lf[26],15,"string->keyword");
lf[27]=C_h_intern(&lf[27],14,"symbol->string");
lf[28]=C_h_intern(&lf[28],6,"gensym");
lf[29]=C_decode_literal(C_heaptop,"\376B\000\000\004keyp");
lf[30]=C_decode_literal(C_heaptop,"\376B\000\000\004args");
lf[31]=C_h_intern(&lf[31],10,"*messages*");
lf[32]=C_h_intern(&lf[32],11,"expand-send");
lf[33]=C_h_intern(&lf[33],7,"sprintf");
lf[34]=C_decode_literal(C_heaptop,"\376B\000\000\003~A:");
lf[35]=C_h_intern(&lf[35],15,"keyword->string");
lf[36]=C_decode_literal(C_heaptop,"\376B\000\000\031~S duplicate keyword \047~S\047");
lf[37]=C_decode_literal(C_heaptop,"\376B\000\000!~S missing value for keyword \047~A\047");
lf[38]=C_decode_literal(C_heaptop,"\376B\000\000/~S invalid keyword \047~A\047~%Available keywords: ~A");
lf[39]=C_decode_literal(C_heaptop,"\376B\000\000 ~S expected keyword but got \047~S\047");
lf[40]=C_decode_literal(C_heaptop,"\376B\000\000#~S expected ~A arguments but got ~A");
lf[41]=C_h_intern(&lf[41],5,"&rest");
lf[42]=C_decode_literal(C_heaptop,"\376B\000\000\030~S is an invalid message");
lf[43]=C_h_intern(&lf[43],14,"hash-table-ref");
lf[44]=C_h_intern(&lf[44],3,"cwd");
lf[45]=C_h_intern(&lf[45],17,"\003syspeek-c-string");
lf[46]=C_h_intern(&lf[46],5,"chdir");
lf[47]=C_decode_literal(C_heaptop,"\376B\000\000\002~/");
lf[48]=C_h_intern(&lf[48],17,"\003sysmake-c-string");
lf[49]=C_h_intern(&lf[49],5,"first");
lf[50]=C_h_intern(&lf[50],6,"second");
lf[51]=C_h_intern(&lf[51],5,"third");
lf[52]=C_h_intern(&lf[52],5,"caddr");
lf[53]=C_h_intern(&lf[53],6,"fourth");
lf[54]=C_h_intern(&lf[54],6,"cadddr");
lf[55]=C_h_intern(&lf[55],5,"fifth");
lf[56]=C_h_intern(&lf[56],5,"sixth");
lf[57]=C_h_intern(&lf[57],7,"seventh");
lf[58]=C_h_intern(&lf[58],6,"eighth");
lf[59]=C_h_intern(&lf[59],5,"ninth");
lf[60]=C_h_intern(&lf[60],5,"tenth");
lf[61]=C_h_intern(&lf[61],4,"last");
lf[62]=C_h_intern(&lf[62],7,"butlast");
lf[63]=C_h_intern(&lf[63],5,"list*");
lf[64]=C_decode_literal(C_heaptop,"\376B\000\000&>>> Error: too few arguments to list*.");
lf[78]=C_h_intern(&lf[78],7,"rescale");
lf[79]=C_h_intern(&lf[79],8,"discrete");
lf[80]=C_h_intern(&lf[80],3,"int");
lf[81]=C_h_intern(&lf[81],8,"quantize");
lf[82]=C_h_intern(&lf[82],8,"decimals");
lf[83]=C_h_intern(&lf[83],15,"rhythm->seconds");
lf[84]=C_decode_literal(C_heaptop,"\376U0.25\000");
lf[85]=C_decode_literal(C_heaptop,"\376U60.0\000");
lf[86]=C_h_intern(&lf[86],9,"\003syserror");
lf[87]=C_h_intern(&lf[87],13,"cents->scaler");
lf[88]=C_h_intern(&lf[88],13,"scaler->cents");
lf[89]=C_h_intern(&lf[89],7,"interpl");
lf[90]=C_decode_literal(C_heaptop,"\376B\000\000\033not an x y coordinate list:");
lf[91]=C_h_intern(&lf[91],3,"err");
lf[92]=C_decode_literal(C_heaptop,"\376B\000\000\033not an x y coordinate list:");
lf[93]=C_decode_literal(C_heaptop,"\376B\000\000\033not an x y coordinate list:");
lf[94]=C_h_intern(&lf[94],6,"interp");
lf[95]=C_h_intern(&lf[95],5,"steps");
lf[96]=C_h_intern(&lf[96],6,"modulo");
lf[97]=C_h_intern(&lf[97],8,"ran-set!");
lf[98]=C_h_intern(&lf[98],3,"ran");
lf[99]=C_h_intern(&lf[99],7,"between");
lf[100]=C_h_intern(&lf[100],4,"pick");
lf[101]=C_decode_literal(C_heaptop,"\376B\000\000\027Missing values to pick.");
lf[102]=C_h_intern(&lf[102],4,"odds");
lf[103]=C_decode_literal(C_heaptop,"\376U1.0\000");
lf[104]=C_h_intern(&lf[104],5,"\000true");
lf[105]=C_h_intern(&lf[105],6,"\000false");
lf[106]=C_h_intern(&lf[106],6,"ranlow");
lf[107]=C_h_intern(&lf[107],7,"ranhigh");
lf[108]=C_h_intern(&lf[108],9,"ranmiddle");
lf[109]=C_h_intern(&lf[109],7,"ranbeta");
lf[110]=C_decode_literal(C_heaptop,"\376U0.5\000");
lf[111]=C_h_intern(&lf[111],2,"\000a");
lf[112]=C_h_intern(&lf[112],2,"\000b");
lf[113]=C_h_intern(&lf[113],6,"ranexp");
lf[114]=C_h_intern(&lf[114],8,"rangauss");
lf[115]=C_h_intern(&lf[115],9,"rancauchy");
lf[116]=C_h_intern(&lf[116],10,"ranpoisson");
lf[117]=C_h_intern(&lf[117],3,"arg");
lf[118]=C_h_intern(&lf[118],8,"rangamma");
lf[119]=C_h_intern(&lf[119],8,"ranbrown");
lf[120]=C_h_intern(&lf[120],7,"ranpink");
lf[123]=C_decode_literal(C_heaptop,"\376B\000\000\021Not a note or key");
lf[124]=C_h_intern(&lf[124],13,"string-append");
lf[125]=C_decode_literal(C_heaptop,"\376B\000\000\021Not a note or key");
lf[127]=C_decode_literal(C_heaptop,"\376B\000\000\021Not a note or key");
lf[128]=C_decode_literal(C_heaptop,"\376B\000\000\021Not a note or key");
lf[129]=C_decode_literal(C_heaptop,"\376U0.333333333333333\000");
lf[130]=C_decode_literal(C_heaptop,"\376U0.666666666666667\000");
lf[131]=C_decode_literal(C_heaptop,"\376U0.5\000");
lf[132]=C_h_intern(&lf[132],5,"floor");
lf[133]=C_decode_literal(C_heaptop,"\376B\000\000\021Not a note or key");
lf[134]=C_h_intern(&lf[134],4,"note");
lf[135]=C_decode_literal(C_heaptop,"\376B\000\000\0014");
lf[136]=C_h_intern(&lf[136],3,"key");
lf[137]=C_decode_literal(C_heaptop,"\376B\000\000\0014");
lf[138]=C_h_intern(&lf[138],2,"hz");
lf[139]=C_decode_literal(C_heaptop,"\376B\000\000\0014");
lf[141]=C_h_intern(&lf[141],6,"period");
lf[143]=C_h_intern(&lf[143],14,"\003sysblock-set!");
lf[151]=C_h_intern(&lf[151],7,"pattern");
lf[166]=C_h_intern(&lf[166],4,"\000nad");
lf[167]=C_h_intern(&lf[167],8,"\000periods");
lf[168]=C_h_intern(&lf[168],12,"\000depth-first");
lf[170]=C_decode_literal(C_heaptop,"\376U4294967287.0\000");
lf[171]=C_decode_literal(C_heaptop,"\376U4294967287.0\000");
lf[172]=C_h_intern(&lf[172],14,"\000breadth-first");
lf[173]=C_decode_literal(C_heaptop,"\376B\000\000\026Illegal for traversing");
lf[174]=C_h_intern(&lf[174],7,"\000values");
lf[175]=C_decode_literal(C_heaptop,"\376B\000\000\024Illegal for counting");
lf[177]=C_h_intern(&lf[177],4,"eop\077");
lf[178]=C_h_intern(&lf[178],4,"\000eop");
lf[179]=C_h_intern(&lf[179],4,"eod\077");
lf[180]=C_h_intern(&lf[180],4,"\000eod");
lf[181]=C_h_intern(&lf[181],4,"next");
lf[185]=C_h_intern(&lf[185],5,"force");
lf[186]=C_h_intern(&lf[186],8,"promise\077");
lf[187]=C_h_intern(&lf[187],3,"max");
lf[188]=C_h_intern(&lf[188],10,"make-cycle");
lf[189]=C_h_intern(&lf[189],12,"\003sysfor-each");
lf[191]=C_h_intern(&lf[191],4,"\000for");
lf[192]=C_h_intern(&lf[192],7,"\000repeat");
lf[194]=C_h_intern(&lf[194],5,"palin");
lf[196]=C_h_intern(&lf[196],15,"make-palindrome");
lf[198]=C_h_intern(&lf[198],6,"\000elide");
lf[199]=C_decode_literal(C_heaptop,"\376\003\000\000\002\376\377\006\000\376\003\000\000\002\376\377\006\001\376\377\016");
lf[200]=C_decode_literal(C_heaptop,"\376\003\000\000\002\376\377\006\001\376\003\000\000\002\376\377\006\000\376\377\016");
lf[201]=C_h_intern(&lf[201],9,"make-line");
lf[203]=C_h_intern(&lf[203],9,"make-heap");
lf[205]=C_h_intern(&lf[205],6,"random");
lf[206]=C_h_intern(&lf[206],13,"make-rotation");
lf[208]=C_h_intern(&lf[208],7,"\000rotate");
lf[210]=C_h_intern(&lf[210],11,"random-item");
lf[218]=C_h_intern(&lf[218],14,"make-weighting");
lf[221]=C_h_intern(&lf[221],7,"\000weight");
lf[222]=C_h_intern(&lf[222],4,"\000min");
lf[223]=C_h_intern(&lf[223],4,"\000max");
lf[224]=C_decode_literal(C_heaptop,"\376U0.0\000");
lf[225]=C_h_intern(&lf[225],11,"make-markov");
lf[226]=C_h_intern(&lf[226],1,"*");
lf[227]=C_decode_literal(C_heaptop,"\376B\000\000\034Negative length to make-list");
lf[229]=C_h_intern(&lf[229],5,"\000past");
lf[230]=C_h_intern(&lf[230],2,"->");
lf[231]=C_decode_literal(C_heaptop,"\376B\000\000.Left hand sides have different number of items");
lf[232]=C_h_intern(&lf[232],7,"reverse");
lf[233]=C_h_intern(&lf[233],3,"\000->");
lf[234]=C_decode_literal(C_heaptop,"\376B\000\000\042Transition missing right hand side");
lf[235]=C_decode_literal(C_heaptop,"\376B\000\000\030Transition is not a list");
lf[236]=C_decode_literal(C_heaptop,"\376B\000\000 Not a list of Markov transitions");
lf[237]=C_decode_literal(C_heaptop,"\376B\000\000\032No transition matches past");
lf[239]=C_h_intern(&lf[239],10,"graph-node");
lf[240]=C_h_intern(&lf[240],10,"make-graph");
lf[242]=C_h_intern(&lf[242],3,"\000to");
lf[243]=C_h_intern(&lf[243],3,"\000id");
lf[244]=C_decode_literal(C_heaptop,"\376B\000\000\025Graph node not a list");
lf[245]=C_decode_literal(C_heaptop,"\376B\000\000\016Not graph data");
lf[246]=C_decode_literal(C_heaptop,"\376B\000\000\024No graph node for id");
lf[248]=C_h_intern(&lf[248],5,"token");
lf[253]=C_h_intern(&lf[253],1,"t");
lf[258]=C_h_intern(&lf[258],4,"rule");
lf[261]=C_h_intern(&lf[261],22,"hash-table-ref/default");
lf[268]=C_h_intern(&lf[268],11,"parse-error");
lf[272]=C_h_intern(&lf[272],10,"parse-unit");
lf[284]=C_decode_literal(C_heaptop,"\376B\000\000\014no info for ");
lf[286]=C_h_intern(&lf[286],14,"string->symbol");
lf[287]=C_h_intern(&lf[287],4,"expt");
lf[288]=C_h_intern(&lf[288],5,"equal");
lf[289]=C_h_intern(&lf[289],3,"and");
lf[290]=C_h_intern(&lf[290],2,"or");
lf[291]=C_h_intern(&lf[291],3,"not");
lf[292]=C_decode_literal(C_heaptop,"\376B\000\0005emit-token-unit: dont know how to emit slotref token ");
lf[293]=C_decode_literal(C_heaptop,"\376B\000\000\047emit-token-unit: dont know how to emit ");
lf[296]=C_decode_literal(C_heaptop,"\376B\000\000\033emit: dont know how to emit");
lf[302]=C_decode_literal(C_heaptop,"\376B\000\000\035Not a token type or rule type");
lf[303]=C_decode_literal(C_heaptop,"\376B\000\000\047Pattern opr not one of and, or, *, +, @");
lf[304]=C_h_intern(&lf[304],1,"@");
lf[305]=C_h_intern(&lf[305],1,"+");
lf[306]=C_decode_literal(C_heaptop,"\376B\000\000\047Not a pattern value or pattern operator");
lf[307]=C_h_intern(&lf[307],6,"printf");
lf[308]=C_decode_literal(C_heaptop,"\376B\000\000!~%parse[~A]: pattern=~S tokens=~S");
lf[313]=C_h_intern(&lf[313],2,">=");
lf[314]=C_decode_literal(C_heaptop,"\376B\000\000\004stop");
lf[315]=C_decode_literal(C_heaptop,"\376B\000\000\004temp");
lf[316]=C_h_intern(&lf[316],5,"begin");
lf[317]=C_decode_literal(C_heaptop,"\376B\000\000\004bool");
lf[318]=C_decode_literal(C_heaptop,"\376B\000\000\004tail");
lf[319]=C_h_intern(&lf[319],1,">");
lf[320]=C_h_intern(&lf[320],2,"<=");
lf[321]=C_h_intern(&lf[321],1,"-");
lf[322]=C_h_intern(&lf[322],1,"<");
lf[323]=C_decode_literal(C_heaptop,"\376B\000\000\004goal");
lf[324]=C_decode_literal(C_heaptop,"\376B\000\000\004from");
lf[325]=C_decode_literal(C_heaptop,"\376B\000\000\004step");
lf[329]=C_h_intern(&lf[329],3,"sal");
lf[330]=C_h_intern(&lf[330],11,"print-error");
lf[331]=C_decode_literal(C_heaptop,"\376B\000\000\013>>> Error: ");
lf[332]=C_h_intern(&lf[332],11,"make-string");
lf[333]=C_h_intern(&lf[333],9,"substring");
lf[334]=C_h_intern(&lf[334],2,"pp");
lf[335]=C_h_intern(&lf[335],4,"eval");
lf[336]=C_h_intern(&lf[336],7,"\000syntax");
lf[337]=C_h_intern(&lf[337],7,"\000scheme");
lf[338]=C_decode_literal(C_heaptop,"\376B\000\000\023Illegal statement: ");
lf[339]=C_h_intern(&lf[339],7,"call/cc");
lf[340]=C_h_intern(&lf[340],9,"sal:print");
lf[341]=C_h_intern(&lf[341],13,"print-message");
lf[342]=C_decode_literal(C_heaptop,"\376B\000\000\002{}");
lf[343]=C_decode_literal(C_heaptop,"\376B\000\000\001}");
lf[344]=C_decode_literal(C_heaptop,"\376B\000\000\001 ");
lf[345]=C_decode_literal(C_heaptop,"\376B\000\000\001{");
lf[346]=C_decode_literal(C_heaptop,"\376B\000\000\002#t");
lf[347]=C_decode_literal(C_heaptop,"\376B\000\000\002~S");
lf[348]=C_decode_literal(C_heaptop,"\376B\000\000\002#f");
lf[349]=C_decode_literal(C_heaptop,"\376B\000\000\001\012");
lf[350]=C_h_intern(&lf[350],9,"sal:chdir");
lf[351]=C_h_intern(&lf[351],8,"sal:load");
lf[352]=C_h_intern(&lf[352],13,"load-sal-file");
lf[353]=C_h_intern(&lf[353],4,"load");
lf[354]=C_h_intern(&lf[354],15,"\003syssubstring=\077");
lf[355]=C_decode_literal(C_heaptop,"\376B\000\000\004.sal");
lf[356]=C_decode_literal(C_heaptop,"\376B\000\000\021>>> Error: file \042");
lf[357]=C_decode_literal(C_heaptop,"\376B\000\000\020\042does not exist\012");
lf[358]=C_h_intern(&lf[358],12,"file-exists\077");
lf[359]=C_h_intern(&lf[359],8,"sal:open");
lf[360]=C_decode_literal(C_heaptop,"\376B\000\000)>>> Error: open command not implemented.\012");
lf[361]=C_h_intern(&lf[361],10,"sal:output");
lf[362]=C_decode_literal(C_heaptop,"\376B\000\000+>>> Error: output command not implemented.\012");
lf[374]=C_h_intern(&lf[374],8,"operator");
lf[375]=C_h_intern(&lf[375],8,"bindings");
lf[376]=C_h_intern(&lf[376],10,"collectors");
lf[377]=C_h_intern(&lf[377],9,"initially");
lf[378]=C_h_intern(&lf[378],9,"end-tests");
lf[379]=C_h_intern(&lf[379],7,"looping");
lf[380]=C_h_intern(&lf[380],8,"stepping");
lf[381]=C_h_intern(&lf[381],7,"finally");
lf[382]=C_h_intern(&lf[382],9,"returning");
lf[388]=C_decode_literal(C_heaptop,"\376B\000\000\023illegal loop syntax");
lf[389]=C_h_intern(&lf[389],7,"newline");
lf[390]=C_h_intern(&lf[390],7,"display");
lf[391]=C_decode_literal(C_heaptop,"\376B\000\000\002()");
lf[392]=C_decode_literal(C_heaptop,"\376B\000\000\001\047");
lf[393]=C_decode_literal(C_heaptop,"\376B\000\000\001 ");
lf[394]=C_decode_literal(C_heaptop,"\376B\000\000\001\047");
lf[395]=C_decode_literal(C_heaptop,"\376B\000\000\020clause context: ");
lf[396]=C_decode_literal(C_heaptop,"\376B\000\000\014LOOP ERROR: ");
lf[398]=C_decode_literal(C_heaptop,"\376B\000\000*Variable expected but source code ran out.");
lf[399]=C_decode_literal(C_heaptop,"\376B\000\000.\047for\047 clause expected but source code ran out.");
lf[400]=C_decode_literal(C_heaptop,"\376B\000\000\001\047");
lf[401]=C_decode_literal(C_heaptop,"\376B\000\000\001\047");
lf[402]=C_decode_literal(C_heaptop,"\376B\000\000\031 is not valid with \047for\047.");
lf[403]=C_decode_literal(C_heaptop,"\376B\000\000\007Found \047");
lf[404]=C_decode_literal(C_heaptop,"\376B\000\000\034\047 where a variable expected.");
lf[406]=C_h_intern(&lf[406],3,"for");
lf[407]=C_decode_literal(C_heaptop,"\376B\000\000\001v");
lf[408]=C_decode_literal(C_heaptop,"\376B\000\000\001v");
lf[409]=C_h_intern(&lf[409],8,"downfrom");
lf[410]=C_h_intern(&lf[410],5,"above");
lf[411]=C_h_intern(&lf[411],5,"below");
lf[412]=C_h_intern(&lf[412],6,"downto");
lf[413]=C_h_intern(&lf[413],4,"from");
lf[414]=C_decode_literal(C_heaptop,"\376B\000\000\007Found \047");
lf[415]=C_decode_literal(C_heaptop,"\376B\000\000\010\047 when \047");
lf[416]=C_decode_literal(C_heaptop,"\376B\000\000\014\047 in effect.");
lf[417]=C_decode_literal(C_heaptop,"\376B\000\000\007Found \047");
lf[418]=C_decode_literal(C_heaptop,"\376B\000\000\010\047 when \047");
lf[419]=C_decode_literal(C_heaptop,"\376B\000\000\014\047 in effect.");
lf[420]=C_h_intern(&lf[420],2,"to");
lf[421]=C_decode_literal(C_heaptop,"\376B\000\000\007Found \047");
lf[422]=C_decode_literal(C_heaptop,"\376B\000\000\010\047 when \047");
lf[423]=C_decode_literal(C_heaptop,"\376B\000\000\014\047 in effect.");
lf[424]=C_decode_literal(C_heaptop,"\376B\000\000\007Found \047");
lf[425]=C_decode_literal(C_heaptop,"\376B\000\000\010\047 when \047");
lf[426]=C_decode_literal(C_heaptop,"\376B\000\000\014\047 in effect.");
lf[427]=C_decode_literal(C_heaptop,"\376B\000\000\007Found \047");
lf[428]=C_decode_literal(C_heaptop,"\376B\000\000\010\047 when \047");
lf[429]=C_decode_literal(C_heaptop,"\376B\000\000\014\047 in effect.");
lf[430]=C_h_intern(&lf[430],2,"by");
lf[431]=C_decode_literal(C_heaptop,"\376B\000\000\025Found duplicate \047by\047.");
lf[432]=C_decode_literal(C_heaptop,"\376B\000\000\001\047");
lf[433]=C_decode_literal(C_heaptop,"\376B\000\000\032\047 is not valid with \047for\047.");
lf[434]=C_decode_literal(C_heaptop,"\376B\000\000,Expected expression but source code ran out.");
lf[436]=C_decode_literal(C_heaptop,"\376B\000\0001\047repeat\047 clause expected but source code ran out.");
lf[437]=C_decode_literal(C_heaptop,"\376B\000\000\001v");
lf[439]=C_h_intern(&lf[439],6,"across");
lf[440]=C_h_intern(&lf[440],13,"vector-length");
lf[441]=C_h_intern(&lf[441],10,"vector-ref");
lf[442]=C_decode_literal(C_heaptop,"\376B\000\000\001v");
lf[443]=C_decode_literal(C_heaptop,"\376B\000\000\001v");
lf[444]=C_h_intern(&lf[444],4,"over");
lf[445]=C_h_intern(&lf[445],2,"in");
lf[446]=C_h_intern(&lf[446],5,"quote");
lf[447]=C_decode_literal(C_heaptop,"\376B\000\000\014Extraneous \047");
lf[448]=C_decode_literal(C_heaptop,"\376B\000\000\010\047 when \047");
lf[449]=C_decode_literal(C_heaptop,"\376B\000\000\014\047 in effect.");
lf[450]=C_decode_literal(C_heaptop,"\376B\000\000\017Duplicate \047by\047.");
lf[451]=C_decode_literal(C_heaptop,"\376B\000\000\036\047by\047 is invalid with \047across\047.");
lf[452]=C_decode_literal(C_heaptop,"\376B\000\000\001\047");
lf[453]=C_decode_literal(C_heaptop,"\376B\000\000\032\047 is not valid with \047for\047.");
lf[454]=C_h_intern(&lf[454],2,"on");
lf[455]=C_decode_literal(C_heaptop,"\376B\000\000,Expression expected but source code ran out.");
lf[456]=C_decode_literal(C_heaptop,"\376B\000\000\001v");
lf[458]=C_h_intern(&lf[458],1,"=");
lf[459]=C_decode_literal(C_heaptop,"\376B\000\000\016Duplicate \047=\047.");
lf[460]=C_h_intern(&lf[460],4,"then");
lf[461]=C_decode_literal(C_heaptop,"\376B\000\000\021Duplicate \047then\047.");
lf[462]=C_decode_literal(C_heaptop,"\376B\000\000\001\047");
lf[463]=C_decode_literal(C_heaptop,"\376B\000\000\032\047 is not valid with \047for\047.");
lf[464]=C_decode_literal(C_heaptop,"\376B\000\000,Expression expected but source code ran out.");
lf[466]=C_h_intern(&lf[466],4,"with");
lf[467]=C_decode_literal(C_heaptop,"\376B\000\000\021Extraneous \047and\047.");
lf[468]=C_decode_literal(C_heaptop,"\376B\000\000\007Found \047");
lf[469]=C_decode_literal(C_heaptop,"\376B\000\000\027\047 where \047and\047 expected.");
lf[470]=C_decode_literal(C_heaptop,"\376B\000\000\007Found \047");
lf[471]=C_decode_literal(C_heaptop,"\376B\000\000\027\047 where \047and\047 expected.");
lf[472]=C_decode_literal(C_heaptop,"\376B\000\000\020Duplicate \047and\047.");
lf[473]=C_decode_literal(C_heaptop,"\376B\000\000\021Extraneous \047and\047.");
lf[474]=C_decode_literal(C_heaptop,"\376B\000\000\037Found \047=\047 where \047and\047 expected.");
lf[475]=C_decode_literal(C_heaptop,"\376B\000\000\007Found \047");
lf[476]=C_decode_literal(C_heaptop,"\376B\000\000\032\047 where variable expected.");
lf[477]=C_decode_literal(C_heaptop,"\376B\000\000\007Found \047");
lf[478]=C_decode_literal(C_heaptop,"\376B\000\000\036\047 where \047=\047 or \047and\047 expected.");
lf[480]=C_decode_literal(C_heaptop,"\376B\000\000\011Missing \047");
lf[481]=C_decode_literal(C_heaptop,"\376B\000\000\015\047 expression.");
lf[483]=C_decode_literal(C_heaptop,"\376B\000\000\011Missing \047");
lf[484]=C_decode_literal(C_heaptop,"\376B\000\000\015\047 expression.");
lf[486]=C_decode_literal(C_heaptop,"\376B\000\000\011Missing \047");
lf[487]=C_decode_literal(C_heaptop,"\376B\000\000\015\047 expression.");
lf[489]=C_h_intern(&lf[489],3,"sum");
lf[490]=C_h_intern(&lf[490],5,"count");
lf[491]=C_decode_literal(C_heaptop,"\376B\000\000\001v");
lf[492]=C_h_intern(&lf[492],8,"minimize");
lf[493]=C_h_intern(&lf[493],8,"maximize");
lf[494]=C_decode_literal(C_heaptop,"\376B\000\000\001v");
lf[495]=C_decode_literal(C_heaptop,"\376B\000\000\001v");
lf[496]=C_h_intern(&lf[496],4,"list");
lf[497]=C_h_intern(&lf[497],8,"set-cdr!");
lf[498]=C_h_intern(&lf[498],9,"last-pair");
lf[499]=C_h_intern(&lf[499],7,"collect");
lf[500]=C_decode_literal(C_heaptop,"\376\003\000\000\002\376\001\000\000\004list\376\003\000\000\002\376\377\006\000\376\377\016");
lf[501]=C_decode_literal(C_heaptop,"\376B\000\000\001v");
lf[502]=C_decode_literal(C_heaptop,"\376B\000\000\001v");
lf[503]=C_decode_literal(C_heaptop,"\376\003\000\000\002\376\001\000\000\004list\376\377\016");
lf[504]=C_h_intern(&lf[504],5,"nconc");
lf[505]=C_decode_literal(C_heaptop,"\376B\000\000\001\047");
lf[506]=C_decode_literal(C_heaptop,"\376B\000\000\007\047 and \047");
lf[507]=C_decode_literal(C_heaptop,"\376B\000\000 \047 are incompatible accumulators.");
lf[508]=C_decode_literal(C_heaptop,"\376\003\000\000\002\376\001\000\000\007collect\376\003\000\000\002\376\001\000\000\006append\376\003\000\000\002\376\001\000\000\005nconc\376\377\016");
lf[509]=C_decode_literal(C_heaptop,"\376\003\000\000\002\376\001\000\000\005never\376\003\000\000\002\376\001\000\000\006always\376\377\016");
lf[510]=C_decode_literal(C_heaptop,"\376\003\000\000\002\376\001\000\000\010minimize\376\003\000\000\002\376\001\000\000\010maximize\376\377\016");
lf[511]=C_h_intern(&lf[511],4,"into");
lf[512]=C_decode_literal(C_heaptop,"\376B\000\000\007Found \047");
lf[513]=C_decode_literal(C_heaptop,"\376B\000\000!\047 where \047into\047 variable expected.");
lf[514]=C_decode_literal(C_heaptop,"\376B\000\000\030Missing \047into\047 variable.");
lf[515]=C_decode_literal(C_heaptop,"\376B\000\000\011Missing \047");
lf[516]=C_decode_literal(C_heaptop,"\376B\000\000\015\047 expression.");
lf[518]=C_h_intern(&lf[518],6,"return");
lf[520]=C_decode_literal(C_heaptop,"\376\003\000\000\002\376\001\000\000\002go\376\003\000\000\002\376\377\006\001\376\377\016");
lf[521]=C_h_intern(&lf[521],5,"until");
lf[522]=C_h_intern(&lf[522],5,"while");
lf[523]=C_decode_literal(C_heaptop,"\376B\000\000\011Missing \047");
lf[524]=C_decode_literal(C_heaptop,"\376B\000\000\015\047 expression.");
lf[526]=C_h_intern(&lf[526],7,"thereis");
lf[527]=C_h_intern(&lf[527],6,"always");
lf[528]=C_h_intern(&lf[528],5,"never");
lf[529]=C_decode_literal(C_heaptop,"\376B\000\000\011Missing \047");
lf[530]=C_decode_literal(C_heaptop,"\376B\000\000\015\047 expression.");
lf[532]=C_decode_literal(C_heaptop,"\376B\000\000\011Missing \047");
lf[533]=C_decode_literal(C_heaptop,"\376B\000\000\015\047 expression.");
lf[535]=C_decode_literal(C_heaptop,"\376B\000\000\025Missing \047and\047 clause.");
lf[536]=C_decode_literal(C_heaptop,"\376B\000\000\001\047");
lf[537]=C_decode_literal(C_heaptop,"\376B\000\000\036\047 is not conditional operator.");
lf[538]=C_h_intern(&lf[538],4,"task");
lf[539]=C_decode_literal(C_heaptop,"\376\003\000\000\002\376\001\000\000\007thereis\376\003\000\000\002\376\001\000\000\005never\376\003\000\000\002\376\001\000\000\006always\376\377\016");
lf[541]=C_decode_literal(C_heaptop,"\376\003\000\000\002\376\001\000\000\004else\376\377\016");
lf[542]=C_decode_literal(C_heaptop,"\376B\000\000\026Missing \047else\047 clause.");
lf[543]=C_decode_literal(C_heaptop,"\376B\000\000\033Missing conditional clause.");
lf[544]=C_decode_literal(C_heaptop,"\376B\000\000\011Missing \047");
lf[545]=C_decode_literal(C_heaptop,"\376B\000\000\015\047 expression.");
lf[547]=C_h_intern(&lf[547],2,"do");
lf[548]=C_decode_literal(C_heaptop,"\376B\000\000\001\047");
lf[549]=C_decode_literal(C_heaptop,"\376B\000\000\030\047 clause cannot follow \047");
lf[550]=C_decode_literal(C_heaptop,"\376B\000\000\002\047.");
lf[551]=C_h_intern(&lf[551],4,"iter");
lf[552]=C_decode_literal(C_heaptop,"\376B\000\000\007Found \047");
lf[553]=C_decode_literal(C_heaptop,"\376B\000\000\032\047 where operator expected.");
lf[554]=C_h_intern(&lf[554],6,"repeat");
lf[555]=C_h_intern(&lf[555],2,"as");
lf[557]=C_h_intern(&lf[557],10,"mm:make-on");
lf[558]=C_h_intern(&lf[558],5,"\000time");
lf[559]=C_h_intern(&lf[559],4,"\000key");
lf[560]=C_h_intern(&lf[560],4,"\000vel");
lf[561]=C_h_intern(&lf[561],5,"\000chan");
lf[562]=C_h_intern(&lf[562],6,"mm:on\077");
lf[563]=C_h_intern(&lf[563],11,"mm:make-off");
lf[564]=C_h_intern(&lf[564],7,"mm:off\077");
lf[565]=C_h_intern(&lf[565],13,"mm:make-touch");
lf[566]=C_h_intern(&lf[566],4,"\000val");
lf[567]=C_h_intern(&lf[567],9,"mm:touch\077");
lf[568]=C_h_intern(&lf[568],12,"mm:make-ctrl");
lf[569]=C_h_intern(&lf[569],4,"\000num");
lf[570]=C_h_intern(&lf[570],8,"mm:ctrl\077");
lf[571]=C_h_intern(&lf[571],12,"mm:make-prog");
lf[572]=C_h_intern(&lf[572],8,"mm:prog\077");
lf[573]=C_h_intern(&lf[573],13,"mm:make-press");
lf[574]=C_h_intern(&lf[574],9,"mm:press\077");
lf[575]=C_h_intern(&lf[575],12,"mm:make-bend");
lf[576]=C_h_intern(&lf[576],7,"mm:free");
lf[577]=C_h_intern(&lf[577],7,"mm:copy");
lf[578]=C_h_intern(&lf[578],7,"mm:time");
lf[579]=C_h_intern(&lf[579],12,"mm:time-set!");
lf[580]=C_h_intern(&lf[580],7,"mm:chan");
lf[581]=C_h_intern(&lf[581],12,"mm:chan-set!");
lf[582]=C_h_intern(&lf[582],6,"mm:key");
lf[583]=C_h_intern(&lf[583],11,"mm:key-set!");
lf[584]=C_h_intern(&lf[584],6,"mm:vel");
lf[585]=C_h_intern(&lf[585],11,"mm:vel-set!");
lf[586]=C_h_intern(&lf[586],6,"mm:val");
lf[587]=C_h_intern(&lf[587],8,"mm:type\077");
lf[588]=C_h_intern(&lf[588],11,"mm:val-set!");
lf[589]=C_h_intern(&lf[589],1,"k");
lf[590]=C_h_intern(&lf[590],6,"mm:num");
lf[591]=C_h_intern(&lf[591],11,"mm:num-set!");
lf[592]=C_h_intern(&lf[592],7,"mp:note");
lf[593]=C_h_intern(&lf[593],7,"mp:midi");
lf[594]=C_h_intern(&lf[594],6,"mp:off");
lf[595]=C_h_intern(&lf[595],5,"mp:on");
lf[596]=C_h_intern(&lf[596],8,"mp:touch");
lf[597]=C_h_intern(&lf[597],7,"mp:ctrl");
lf[598]=C_h_intern(&lf[598],7,"mp:prog");
lf[599]=C_h_intern(&lf[599],8,"mp:press");
lf[600]=C_h_intern(&lf[600],7,"mp:bend");
lf[601]=C_h_intern(&lf[601],5,"mp:mm");
lf[602]=C_h_intern(&lf[602],9,"mp:inhook");
lf[603]=C_decode_literal(C_heaptop,"\376B\000\000*>>> Error: ~A~%    Aborting MIDI inhook.~%");
lf[604]=C_h_intern(&lf[604],27,"condition-property-accessor");
lf[605]=C_h_intern(&lf[605],3,"exn");
lf[606]=C_h_intern(&lf[606],7,"message");
lf[607]=C_h_intern(&lf[607],22,"with-exception-handler");
lf[608]=C_h_intern(&lf[608],30,"call-with-current-continuation");
lf[609]=C_h_intern(&lf[609],4,"cs:i");
lf[610]=C_h_intern(&lf[610],4,"cs:f");
lf[611]=C_h_intern(&lf[611],8,"cs:clear");
lf[612]=C_h_intern(&lf[612],7,"cm-logo");
lf[613]=C_decode_literal(C_heaptop,"\376B\000\000\001 ");
lf[614]=C_decode_literal(C_heaptop,"\376B\000\000\000");
lf[615]=C_decode_literal(C_heaptop,"\376B\000\000\015Common Music ");
lf[616]=C_decode_literal(C_heaptop,"\376B\000\000\001.");
lf[617]=C_decode_literal(C_heaptop,"\376B\000\000\001.");
lf[618]=C_decode_literal(C_heaptop,"\376B\000\000\000");
lf[619]=C_decode_literal(C_heaptop,"\376B\000\000\002~%");
lf[620]=C_h_intern(&lf[620],25,"current-time-milliseconds");
lf[621]=C_h_intern(&lf[621],20,"current-time-seconds");
lf[623]=C_h_intern(&lf[623],6,"\003sysgc");
lf[626]=C_h_intern(&lf[626],6,"sprout");
lf[627]=C_h_intern(&lf[627],3,"now");
lf[628]=C_h_intern(&lf[628],11,"time-format");
lf[629]=C_decode_literal(C_heaptop,"\376U1.0\000");
lf[630]=C_decode_literal(C_heaptop,"\376U1.0\000");
lf[631]=C_h_intern(&lf[631],1,"m");
lf[632]=C_decode_literal(C_heaptop,"\376B\000\000\021not a time-format");
lf[633]=C_h_intern(&lf[633],1,"s");
lf[634]=C_h_intern(&lf[634],5,"pause");
lf[635]=C_h_intern(&lf[635],7,"paused\077");
lf[636]=C_h_intern(&lf[636],4,"cont");
lf[637]=C_h_intern(&lf[637],4,"stop");
lf[638]=C_decode_literal(C_heaptop,"\376B\000\000\021Not an integer id");
lf[639]=C_h_intern(&lf[639],4,"hush");
lf[640]=C_h_intern(&lf[640],14,"return-to-host");
lf[641]=C_h_intern(&lf[641],4,"cond");
lf[642]=C_h_intern(&lf[642],6,"lambda");
lf[643]=C_h_intern(&lf[643],7,"elapsed");
lf[644]=C_h_intern(&lf[644],1,"x");
lf[645]=C_h_intern(&lf[645],4,"wait");
lf[646]=C_decode_literal(C_heaptop,"\376B\000\0000>>> Error: ~A~%    Aborting process at time ~S~%");
lf[647]=C_h_intern(&lf[647],6,"safety");
lf[648]=C_h_intern(&lf[648],4,"cdar");
lf[649]=C_decode_literal(C_heaptop,"\376B\000\000\023unknown declaration");
lf[650]=C_h_intern(&lf[650],4,"caar");
lf[651]=C_decode_literal(C_heaptop,"\376B\000\000\037declaration not list (decl val)");
lf[652]=C_h_intern(&lf[652],7,"declare");
lf[653]=C_h_intern(&lf[653],5,"\000null");
lf[654]=C_decode_literal(C_heaptop,"\376B\000\000)binding clause not list (var init [step])");
lf[655]=C_decode_literal(C_heaptop,"\376B\000\000$go stopping clause missing test form");
lf[656]=C_decode_literal(C_heaptop,"\376B\000\000\035go stopping clause not a list");
lf[657]=C_decode_literal(C_heaptop,"\376B\000\000\026go bindings not a list");
lf[658]=C_h_intern(&lf[658],18,"\003sysregister-macro");
lf[659]=C_h_intern(&lf[659],2,"go");
lf[660]=C_h_intern(&lf[660],15,"hash-table-set!");
lf[661]=C_decode_literal(C_heaptop,"\376B\000\000\010cs:clear");
lf[662]=C_decode_literal(C_heaptop,"\376\003\000\000\002\376\001\000\000\010cs:clear\376\377\016");
lf[663]=C_decode_literal(C_heaptop,"\376B\000\000\004cs:f");
lf[664]=C_decode_literal(C_heaptop,"\376\003\000\000\002\376\001\000\000\004cs:f\376\003\000\000\002\376\001\000\000\005&rest\376\377\016");
lf[665]=C_decode_literal(C_heaptop,"\376B\000\000\004cs:i");
lf[666]=C_decode_literal(C_heaptop,"\376\003\000\000\002\376\001\000\000\004cs:i\376\003\000\000\002\376\001\000\000\005&rest\376\377\016");
lf[667]=C_decode_literal(C_heaptop,"\376B\000\000\011mp:inhook");
lf[668]=C_decode_literal(C_heaptop,"\376\003\000\000\002\376\001\000\000\011mp:inhook\376\003\000\000\002\376\003\000\000\002\376\001\000\000\005\000func\376\003\000\000\002\376\377\006\000\376\377\016\376\377\016");
lf[669]=C_decode_literal(C_heaptop,"\376B\000\000\005mp:mm");
lf[670]=C_decode_literal(C_heaptop,"\376\003\000\000\002\376\001\000\000\005mp:mm\376\003\000\000\002\376\003\000\000\002\376\001\000\000\003\000mm\376\003\000\000\002\376\377\006\000\376\377\016\376\377\016");
lf[671]=C_decode_literal(C_heaptop,"\376B\000\000\007mp:bend");
lf[672]=C_decode_literal(C_heaptop,"\376\003\000\000\002\376\001\000\000\007mp:bend\376\003\000\000\002\376\003\000\000\002\376\001\000\000\005\000time\376\003\000\000\002\376\377\001\000\000\000\000\376\377\016\376\003\000\000\002\376\003\000\000\002\376\001\000\000\004\000val\376\003\000\000\002\376\377\001\000"
"\000 \000\376\377\016\376\003\000\000\002\376\003\000\000\002\376\001\000\000\005\000chan\376\003\000\000\002\376\377\001\000\000\000\000\376\377\016\376\377\016");
lf[673]=C_decode_literal(C_heaptop,"\376B\000\000\010mp:press");
lf[674]=C_decode_literal(C_heaptop,"\376\003\000\000\002\376\001\000\000\010mp:press\376\003\000\000\002\376\003\000\000\002\376\001\000\000\005\000time\376\003\000\000\002\376\377\001\000\000\000\000\376\377\016\376\003\000\000\002\376\003\000\000\002\376\001\000\000\004\000val\376\003\000\000\002\376\377\001"
"\000\000\000\000\376\377\016\376\003\000\000\002\376\003\000\000\002\376\001\000\000\005\000chan\376\003\000\000\002\376\377\001\000\000\000\000\376\377\016\376\377\016");
lf[675]=C_decode_literal(C_heaptop,"\376B\000\000\007mp:prog");
lf[676]=C_decode_literal(C_heaptop,"\376\003\000\000\002\376\001\000\000\007mp:prog\376\003\000\000\002\376\003\000\000\002\376\001\000\000\005\000time\376\003\000\000\002\376\377\001\000\000\000\000\376\377\016\376\003\000\000\002\376\003\000\000\002\376\001\000\000\004\000val\376\003\000\000\002\376\377\001\000"
"\000\000\000\376\377\016\376\003\000\000\002\376\003\000\000\002\376\001\000\000\005\000chan\376\003\000\000\002\376\377\001\000\000\000\000\376\377\016\376\377\016");
lf[677]=C_decode_literal(C_heaptop,"\376B\000\000\007mp:ctrl");
lf[678]=C_decode_literal(C_heaptop,"\376\003\000\000\002\376\001\000\000\007mp:ctrl\376\003\000\000\002\376\003\000\000\002\376\001\000\000\005\000time\376\003\000\000\002\376\377\001\000\000\000\000\376\377\016\376\003\000\000\002\376\003\000\000\002\376\001\000\000\004\000num\376\003\000\000\002\376\377\001\000"
"\000\000\000\376\377\016\376\003\000\000\002\376\003\000\000\002\376\001\000\000\004\000val\376\003\000\000\002\376\377\001\000\000\000\000\376\377\016\376\003\000\000\002\376\003\000\000\002\376\001\000\000\005\000chan\376\003\000\000\002\376\377\001\000\000\000\000\376\377\016\376\377\016");
lf[679]=C_decode_literal(C_heaptop,"\376B\000\000\010mp:touch");
lf[680]=C_decode_literal(C_heaptop,"\376\003\000\000\002\376\001\000\000\010mp:touch\376\003\000\000\002\376\003\000\000\002\376\001\000\000\005\000time\376\003\000\000\002\376\377\001\000\000\000\000\376\377\016\376\003\000\000\002\376\003\000\000\002\376\001\000\000\004\000key\376\003\000\000\002\376\377\001"
"\000\000\000\000\376\377\016\376\003\000\000\002\376\003\000\000\002\376\001\000\000\004\000val\376\003\000\000\002\376\377\001\000\000\000\000\376\377\016\376\003\000\000\002\376\003\000\000\002\376\001\000\000\005\000chan\376\003\000\000\002\376\377\001\000\000\000\000\376\377\016\376\377\016");
lf[681]=C_decode_literal(C_heaptop,"\376B\000\000\005mp:on");
lf[682]=C_decode_literal(C_heaptop,"\376\003\000\000\002\376\001\000\000\005mp:on\376\003\000\000\002\376\003\000\000\002\376\001\000\000\005\000time\376\003\000\000\002\376\377\001\000\000\000\000\376\377\016\376\003\000\000\002\376\003\000\000\002\376\001\000\000\004\000key\376\003\000\000\002\376\377\001\000\000\000"
"<\376\377\016\376\003\000\000\002\376\003\000\000\002\376\001\000\000\004\000vel\376\003\000\000\002\376\377\001\000\000\000@\376\377\016\376\003\000\000\002\376\003\000\000\002\376\001\000\000\005\000chan\376\003\000\000\002\376\377\001\000\000\000\000\376\377\016\376\377\016");
lf[683]=C_decode_literal(C_heaptop,"\376B\000\000\006mp:off");
lf[684]=C_decode_literal(C_heaptop,"\376\003\000\000\002\376\001\000\000\006mp:off\376\003\000\000\002\376\003\000\000\002\376\001\000\000\005\000time\376\003\000\000\002\376\377\001\000\000\000\000\376\377\016\376\003\000\000\002\376\003\000\000\002\376\001\000\000\004\000key\376\003\000\000\002\376\377\001\000\000"
"\000<\376\377\016\376\003\000\000\002\376\003\000\000\002\376\001\000\000\005\000chan\376\003\000\000\002\376\377\001\000\000\000\000\376\377\016\376\377\016");
lf[685]=C_decode_literal(C_heaptop,"\376B\000\000\007mp:midi");
lf[686]=C_decode_literal(C_heaptop,"\376\003\000\000\002\376\001\000\000\007mp:midi\376\003\000\000\002\376\003\000\000\002\376\001\000\000\005\000time\376\003\000\000\002\376\377\001\000\000\000\000\376\377\016\376\003\000\000\002\376\003\000\000\002\376\001\000\000\004\000dur\376\003\000\000\002\376U0."
"5\000\376\377\016\376\003\000\000\002\376\003\000\000\002\376\001\000\000\004\000key\376\003\000\000\002\376\377\001\000\000\000<\376\377\016\376\003\000\000\002\376\003\000\000\002\376\001\000\000\004\000amp\376\003\000\000\002\376U0.5\000\376\377\016\376\003\000\000\002\376\003\000"
"\000\002\376\001\000\000\005\000chan\376\003\000\000\002\376\377\001\000\000\000\000\376\377\016\376\377\016");
lf[687]=C_decode_literal(C_heaptop,"\376B\000\000\007mp:note");
lf[688]=C_decode_literal(C_heaptop,"\376\003\000\000\002\376\001\000\000\007mp:note\376\003\000\000\002\376\003\000\000\002\376\001\000\000\005\000time\376\003\000\000\002\376\377\001\000\000\000\000\376\377\016\376\003\000\000\002\376\003\000\000\002\376\001\000\000\004\000dur\376\003\000\000\002\376U0."
"5\000\376\377\016\376\003\000\000\002\376\003\000\000\002\376\001\000\000\004\000key\376\003\000\000\002\376\377\001\000\000\000<\376\377\016\376\003\000\000\002\376\003\000\000\002\376\001\000\000\004\000amp\376\003\000\000\002\376U0.5\000\376\377\016\376\003\000\000\002\376\003\000"
"\000\002\376\001\000\000\005\000chan\376\003\000\000\002\376\377\001\000\000\000\000\376\377\016\376\377\016");
lf[689]=C_h_intern(&lf[689],5,":loop");
lf[690]=C_h_intern(&lf[690],7,"tagbody");
lf[691]=C_h_intern(&lf[691],5,"block");
lf[692]=C_h_intern(&lf[692],3,"nil");
lf[693]=C_h_intern(&lf[693],20,"\003sysregister-macro-2");
lf[694]=C_h_intern(&lf[694],8,"function");
lf[695]=C_decode_literal(C_heaptop,"\376B\000\000\001v");
lf[696]=C_h_intern(&lf[696],3,"pop");
lf[697]=C_h_intern(&lf[697],4,"cons");
lf[698]=C_h_intern(&lf[698],4,"push");
lf[699]=C_decode_literal(C_heaptop,"\376\003\000\000\002\376\001\000\000\002go\376\003\000\000\002\376\377\006\001\376\377\016");
lf[700]=C_h_intern(&lf[700],4,"loop");
lf[701]=C_decode_literal(C_heaptop,"\376B\000\000\001v");
lf[702]=C_decode_literal(C_heaptop,"\376B\000\000\030SalStatementSequenceRule");
lf[703]=C_decode_literal(C_heaptop,"\376B\000\000\020SalStatementRule");
lf[704]=C_h_intern(&lf[704],6,"define");
lf[705]=C_decode_literal(C_heaptop,"\376B\000\000\017Variable: ~A = ");
lf[706]=C_decode_literal(C_heaptop,"\376B\000\000\002)\012");
lf[707]=C_decode_literal(C_heaptop,"\376B\000\000\002, ");
lf[708]=C_decode_literal(C_heaptop,"\376B\000\000\002 (");
lf[709]=C_decode_literal(C_heaptop,"\376B\000\000\012Function: ");
lf[710]=C_h_intern(&lf[710],7,"\000return");
lf[711]=C_h_intern(&lf[711],9,"\000function");
lf[712]=C_decode_literal(C_heaptop,"\376B\000\000\011Process: ");
lf[713]=C_h_intern(&lf[713],8,"\000process");
lf[714]=C_decode_literal(C_heaptop,"\376B\000\000\003...");
lf[715]=C_decode_literal(C_heaptop,"\376B\000\000\026SalDefineStatementRule");
lf[716]=C_decode_literal(C_heaptop,"\376B\000\000\016SalFunDeclRule");
lf[717]=C_decode_literal(C_heaptop,"\376B\000\000/>>> Error: ~A~%    process aborted at time ~S~%");
lf[718]=C_decode_literal(C_heaptop,"\376B\000\000\005abort");
lf[719]=C_decode_literal(C_heaptop,"\376B\000\000\005error");
lf[720]=C_decode_literal(C_heaptop,"\376B\000\000\004wait");
lf[721]=C_decode_literal(C_heaptop,"\376B\000\000\004wait");
lf[722]=C_decode_literal(C_heaptop,"\376B\000\000\004time");
lf[723]=C_h_intern(&lf[723],5,"\000loop");
lf[724]=C_h_intern(&lf[724],4,"\000run");
lf[725]=C_decode_literal(C_heaptop,"\376B\000\000\035run statement outside process");
lf[726]=C_decode_literal(C_heaptop,"\376B\000\000\024SalLoopStatementRule");
lf[727]=C_decode_literal(C_heaptop,"\376B\000\000\022SalTerminationRule");
lf[728]=C_decode_literal(C_heaptop,"\376B\000\000\017SalSteppingRule");
lf[729]=C_decode_literal(C_heaptop,"\376B\000\000\002#f");
lf[730]=C_decode_literal(C_heaptop,"\376B\000\000\002#f");
lf[731]=C_decode_literal(C_heaptop,"\376B\000\000\022SalConditionalRule");
lf[732]=C_decode_literal(C_heaptop,"\376B\000\000\014SalBlockRule");
lf[733]=C_h_intern(&lf[733],9,"list-tail");
lf[734]=C_h_intern(&lf[734],8,"set-car!");
lf[735]=C_h_intern(&lf[735],8,"list-ref");
lf[736]=C_h_intern(&lf[736],3,"min");
lf[737]=C_decode_literal(C_heaptop,"\376B\000\000\021SalAssignmentRule");
lf[738]=C_decode_literal(C_heaptop,"\376B\000\000\015SalAssignRule");
lf[739]=C_h_intern(&lf[739],9,"\000bindings");
lf[740]=C_decode_literal(C_heaptop,"\376B\000\000\017SalBindingsRule");
lf[741]=C_decode_literal(C_heaptop,"\376B\000\000\002#f");
lf[742]=C_decode_literal(C_heaptop,"\376B\000\000\013SalBindRule");
lf[743]=C_decode_literal(C_heaptop,"\376B\000\000!return statement outside function");
lf[744]=C_decode_literal(C_heaptop,"\376B\000\000\025SalFunctionReturnRule");
lf[745]=C_decode_literal(C_heaptop,"\376B\000\000 wait statement outside run block");
lf[746]=C_decode_literal(C_heaptop,"\376B\000\000\022SalProcessWaitRule");
lf[747]=C_decode_literal(C_heaptop,"\376\003\000\000\002\376\001\000\000\006fix-me\376\003\000\000\002\376\001\000\000\004plot\376\377\016");
lf[748]=C_decode_literal(C_heaptop,"\376B\000\000\024SalPlotStatementRule");
lf[749]=C_decode_literal(C_heaptop,"\376B\000\000\026SalOutputStatementRule");
lf[750]=C_decode_literal(C_heaptop,"\376B\000\000\026SalSystemStatementRule");
lf[751]=C_h_intern(&lf[751],10,"sal:system");
lf[752]=C_decode_literal(C_heaptop,"\376B\000\000\025SalChdirStatementRule");
lf[753]=C_decode_literal(C_heaptop,"\376B\000\000\024SalLoadStatementRule");
lf[754]=C_decode_literal(C_heaptop,"\376B\000\000\024SalExecStatementRule");
lf[755]=C_decode_literal(C_heaptop,"\376B\000\000\024SalSendStatementRule");
lf[756]=C_decode_literal(C_heaptop,"\376B\000\000\026SalSproutStatementRule");
lf[757]=C_decode_literal(C_heaptop,"\376B\000\000\025SalPrintStatementRule");
lf[758]=C_decode_literal(C_heaptop,"\376B\000\000\014SalSexprRule");
lf[759]=C_decode_literal(C_heaptop,"\376B\000\000\013SalTermRule");
lf[760]=C_decode_literal(C_heaptop,"\376B\000\000\014SalMexprRule");
lf[761]=C_decode_literal(C_heaptop,"\376B\000\000\011SalOpRule");
lf[762]=C_decode_literal(C_heaptop,"\376B\000\000\016SalFuncallRule");
lf[763]=C_decode_literal(C_heaptop,"\376B\000\000\016SalFunargsRule");
lf[764]=C_decode_literal(C_heaptop,"\376B\000\000\014SalKargsRule");
lf[765]=C_decode_literal(C_heaptop,"\376B\000\000\014SalPargsRule");
lf[766]=C_decode_literal(C_heaptop,"\376B\000\000\015SalIfExprRule");
lf[767]=C_decode_literal(C_heaptop,"\376B\000\000\013SalArefRule");
lf[768]=C_decode_literal(C_heaptop,"\376B\000\000\012SalEltRule");
lf[769]=C_h_intern(&lf[769],7,"unquote");
lf[770]=C_h_intern(&lf[770],16,"unquote-splicing");
lf[771]=C_h_intern(&lf[771],5,"\000list");
lf[772]=C_h_intern(&lf[772],8,"\000unquote");
lf[773]=C_decode_literal(C_heaptop,"\376B\000\000\023#$ outside of list.");
lf[774]=C_decode_literal(C_heaptop,"\376B\000\000\023#^ outside of list.");
lf[775]=C_decode_literal(C_heaptop,"\376B\000\000\016SalUnquoteRule");
lf[776]=C_h_intern(&lf[776],10,"quasiquote");
lf[777]=C_decode_literal(C_heaptop,"\376B\000\000\013SalListRule");
lf[778]=C_decode_literal(C_heaptop,"\376B\000\000\013SalAtomRule");
lf[779]=C_decode_literal(C_heaptop,"\376B\000\000\013SalBoolRule");
lf[780]=C_decode_literal(C_heaptop,"\376B\000\000\015SalNumberRule");
lf[781]=C_h_intern(&lf[781],7,"fprintf");
lf[782]=C_decode_literal(C_heaptop,"\376B\000\000\007#<u ~A>");
lf[783]=C_decode_literal(C_heaptop,"\376B\000\000\010#<u x~X>");
lf[784]=C_h_intern(&lf[784],27,"\003sysregister-record-printer");
lf[785]=C_decode_literal(C_heaptop,"\376B\000\000\030#<parse-error ~S (@ ~S)>");
lf[786]=C_decode_literal(C_heaptop,"\376\003\000\000\002\376\001\000\000\004list\376\377\016");
lf[787]=C_decode_literal(C_heaptop,"\376\003\000\000\002\376\001\000\000\001+\376\003\000\000\002\376\001\000\000\001*\376\003\000\000\002\376\001\000\000\001@\376\003\000\000\002\376\001\000\000\003and\376\003\000\000\002\376\001\000\000\002or\376\377\016");
lf[788]=C_h_intern(&lf[788],6,"ruleid");
lf[789]=C_h_intern(&lf[789],9,"make-rule");
lf[790]=C_h_intern(&lf[790],7,"*rules*");
lf[791]=C_h_intern(&lf[791],7,"defrule");
lf[792]=C_decode_literal(C_heaptop,"\376B\000\000\007#<r ~A>");
lf[793]=C_h_intern(&lf[793],15,"make-hash-table");
lf[794]=C_h_intern(&lf[794],3,"eq\077");
lf[795]=C_decode_literal(C_heaptop,"\376B\000\000\013#<t x~X ~S>");
lf[796]=C_decode_literal(C_heaptop,"\376B\000\000\001r");
lf[797]=C_decode_literal(C_heaptop,"\376U0.0\000");
lf[798]=C_decode_literal(C_heaptop,"\376B\000\000\001r");
lf[799]=C_decode_literal(C_heaptop,"\376\003\000\000\002\376\003\000\000\002\376B\000\000\001c\376\003\000\000\002\376B\000\000\002bs\376\377\016\376\003\000\000\002\376\003\000\000\002\376B\000\000\002df\376\003\000\000\002\376B\000\000\002cs\376\377\016\376\003\000\000\002\376\003\000\000\002\376B\000\000\001d\376"
"\377\016\376\003\000\000\002\376\003\000\000\002\376B\000\000\002ef\376\003\000\000\002\376B\000\000\002ds\376\377\016\376\003\000\000\002\376\003\000\000\002\376B\000\000\001e\376\003\000\000\002\376B\000\000\002ff\376\377\016\376\003\000\000\002\376\003\000\000\002\376B\000\000\001"
"f\376\003\000\000\002\376B\000\000\002es\376\377\016\376\003\000\000\002\376\003\000\000\002\376B\000\000\002fs\376\003\000\000\002\376B\000\000\002gf\376\377\016\376\003\000\000\002\376\003\000\000\002\376B\000\000\001g\376\377\016\376\003\000\000\002\376\003\000\000\002\376B\000"
"\000\002af\376\003\000\000\002\376B\000\000\002gs\376\377\016\376\003\000\000\002\376\003\000\000\002\376B\000\000\001a\376\377\016\376\003\000\000\002\376\003\000\000\002\376B\000\000\002bf\376\003\000\000\002\376B\000\000\002as\376\377\016\376\003\000\000\002\376\003\000\000\002"
"\376B\000\000\001b\376\003\000\000\002\376B\000\000\002cf\376\377\016\376\377\016");
lf[800]=C_decode_literal(C_heaptop,"\376U0.5\000");
lf[801]=C_decode_literal(C_heaptop,"\376U0.5\000");
lf[802]=C_decode_literal(C_heaptop,"\376\003\000\000\002\376B\000\000\00200\376\003\000\000\002\376B\000\000\0010\376\003\000\000\002\376B\000\000\0011\376\003\000\000\002\376B\000\000\0012\376\003\000\000\002\376B\000\000\0013\376\003\000\000\002\376B\000\000\0014\376\003\000\000\002\376B\000\000\0015\376\003"
"\000\000\002\376B\000\000\0016\376\003\000\000\002\376B\000\000\0017\376\003\000\000\002\376B\000\000\0018\376\003\000\000\002\376B\000\000\0019\376\377\016");
lf[803]=C_decode_literal(C_heaptop,"\376B\000\000\001>");
lf[804]=C_decode_literal(C_heaptop,"\376B\000\000\001<");
lf[805]=C_decode_literal(C_heaptop,"\376B\000\000\002bs");
lf[806]=C_decode_literal(C_heaptop,"\376B\000\000\002cf");
lf[807]=C_decode_literal(C_heaptop,"\376B\000\000\002bs");
lf[808]=C_decode_literal(C_heaptop,"\376U0.5\000");
lf[809]=C_decode_literal(C_heaptop,"\376U0.5\000");
lf[810]=C_h_intern(&lf[810],6,"equal\077");
lf[811]=C_h_intern(&lf[811],4,"send");
lf[812]=C_decode_literal(C_heaptop,"\376B\000\0003message function not string, symbol or list of both");
lf[813]=C_h_intern(&lf[813],19,"define-send-message");
lf[814]=C_h_intern(&lf[814],12,"with-optkeys");
C_register_lf2(lf,815,create_ptable());
t2=C_mutate(&lf[0],lf[1]);
t3=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_5240,a[2]=t1,tmp=(C_word)a,a+=3,tmp);
C_library_toplevel(2,C_SCHEME_UNDEFINED,t3);}

/* k5238 */
static void C_ccall f_5240(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[3],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_5240,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_5243,a[2]=((C_word*)t0)[2],tmp=(C_word)a,a+=3,tmp);
C_eval_toplevel(2,C_SCHEME_UNDEFINED,t2);}

/* k5241 in k5238 */
static void C_ccall f_5243(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[3],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_5243,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_5246,a[2]=((C_word*)t0)[2],tmp=(C_word)a,a+=3,tmp);
C_extras_toplevel(2,C_SCHEME_UNDEFINED,t2);}

/* k5244 in k5241 in k5238 */
static void C_ccall f_5246(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[3],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_5246,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_5249,a[2]=((C_word*)t0)[2],tmp=(C_word)a,a+=3,tmp);
C_extras_toplevel(2,C_SCHEME_UNDEFINED,t2);}

/* k5247 in k5244 in k5241 in k5238 */
static void C_ccall f_5249(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_5249,2,t0,t1);}
t2=C_mutate((C_word*)lf[2]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_5251,a[2]=((C_word)li4),tmp=(C_word)a,a+=3,tmp));
t3=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_5540,a[2]=((C_word*)t0)[2],tmp=(C_word)a,a+=3,tmp);
t4=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_32850,a[2]=((C_word)li517),tmp=(C_word)a,a+=3,tmp);
C_trace("ChickenBridge.scm: 235  ##sys#register-macro");
t5=C_retrieve(lf[658]);
((C_proc4)C_retrieve_proc(t5))(4,t5,t3,lf[814],t4);}

/* a32849 in k5247 in k5244 in k5241 in k5238 */
static void C_ccall f_32850(C_word c,C_word t0,C_word t1,C_word t2,...){
C_word tmp;
C_word t3;
va_list v;
C_word *a,c2=c;
C_save_rest(t2,c2,3);
if(c<3) C_bad_min_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_demand(c*C_SIZEOF_PAIR+0)){
C_save_and_reclaim((void*)tr3r,(void*)f_32850r,3,t0,t1,t2);}
else{
a=C_alloc((c-3)*3);
t3=C_restore_rest(a,C_rest_count(0));
f_32850r(t0,t1,t2,t3);}}

static void C_ccall f_32850r(C_word t0,C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word t6;
t4=(C_word)C_i_car(t2);
t5=(C_word)C_i_cdr(t2);
C_trace("ChickenBridge.scm: 236  expand-optkeys");
t6=*((C_word*)lf[2]+1);
((C_proc5)C_retrieve_proc(t6))(5,t6,t1,t4,t5,t3);}

/* k5538 in k5247 in k5244 in k5241 in k5238 */
static void C_ccall f_5540(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[3],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_5540,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_5544,a[2]=((C_word*)t0)[2],tmp=(C_word)a,a+=3,tmp);
C_trace("ChickenBridge.scm: 242  make-hash-table");
t3=C_retrieve(lf[793]);
((C_proc3)C_retrieve_proc(t3))(3,t3,t2,*((C_word*)lf[810]+1));}

/* k5542 in k5538 in k5247 in k5244 in k5241 in k5238 */
static void C_ccall f_5544(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[6],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_5544,2,t0,t1);}
t2=C_mutate((C_word*)lf[31]+1,t1);
t3=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_5547,a[2]=((C_word*)t0)[2],tmp=(C_word)a,a+=3,tmp);
t4=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_32798,a[2]=((C_word)li516),tmp=(C_word)a,a+=3,tmp);
C_trace("ChickenBridge.scm: 244  ##sys#register-macro");
t5=C_retrieve(lf[658]);
((C_proc4)C_retrieve_proc(t5))(4,t5,t3,lf[813],t4);}

/* a32797 in k5542 in k5538 in k5247 in k5244 in k5241 in k5238 */
static void C_ccall f_32798(C_word c,C_word t0,C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word t14;
C_word t15;
C_word ab[18],*a=ab;
if(c!=4) C_bad_argc_2(c,4,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr4,(void*)f_32798,4,t0,t1,t2,t3);}
t4=(*a=C_VECTOR_TYPE|1,a[1]=t2,tmp=(C_word)a,a+=2,tmp);
t5=C_SCHEME_FALSE;
t6=(*a=C_VECTOR_TYPE|1,a[1]=t5,tmp=(C_word)a,a+=2,tmp);
t7=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_32802,a[2]=t6,a[3]=t1,a[4]=t3,a[5]=t4,tmp=(C_word)a,a+=6,tmp);
if(C_truep((C_word)C_i_pairp(((C_word*)t4)[1]))){
t8=(C_word)C_i_car(((C_word*)t4)[1]);
t9=C_set_block_item(t6,0,t8);
t10=(C_word)C_i_cadr(((C_word*)t4)[1]);
t11=C_set_block_item(t4,0,t10);
t12=t7;
f_32802(2,t12,t11);}
else{
if(C_truep((C_word)C_i_stringp(((C_word*)t4)[1]))){
t8=C_set_block_item(t6,0,((C_word*)t4)[1]);
t9=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_32835,a[2]=t7,a[3]=t4,tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 251  string->symbol");
t10=*((C_word*)lf[286]+1);
((C_proc3)C_retrieve_proc(t10))(3,t10,t9,((C_word*)t4)[1]);}
else{
if(C_truep((C_word)C_i_symbolp(((C_word*)t4)[1]))){
t8=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_32845,a[2]=t7,a[3]=t6,tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 253  symbol->string");
t9=*((C_word*)lf[27]+1);
((C_proc3)C_retrieve_proc(t9))(3,t9,t8,((C_word*)t4)[1]);}
else{
C_trace("ChickenBridge.scm: 255  error");
t8=*((C_word*)lf[6]+1);
((C_proc3)C_retrieve_proc(t8))(3,t8,t7,lf[812]);}}}}

/* k32843 in a32797 in k5542 in k5538 in k5247 in k5244 in k5241 in k5238 */
static void C_ccall f_32845(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[3])+1,t1);
t3=((C_word*)t0)[2];
f_32802(2,t3,t2);}

/* k32833 in a32797 in k5542 in k5538 in k5247 in k5244 in k5241 in k5238 */
static void C_ccall f_32835(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[3])+1,t1);
t3=((C_word*)t0)[2];
f_32802(2,t3,t2);}

/* k32800 in a32797 in k5542 in k5538 in k5247 in k5244 in k5241 in k5238 */
static void C_ccall f_32802(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[21],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_32802,2,t0,t1);}
t2=(C_word)C_a_i_cons(&a,2,((C_word*)((C_word*)t0)[5])[1],((C_word*)t0)[4]);
t3=(C_word)C_a_i_list(&a,2,lf[446],t2);
t4=((C_word*)t0)[3];
((C_proc2)(void*)(*((C_word*)t4+1)))(2,t4,(C_word)C_a_i_list(&a,4,lf[660],lf[31],((C_word*)((C_word*)t0)[2])[1],t3));}

/* k5545 in k5542 in k5538 in k5247 in k5244 in k5241 in k5238 */
static void C_ccall f_5547(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_5547,2,t0,t1);}
t2=C_mutate((C_word*)lf[32]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_5549,a[2]=((C_word)li12),tmp=(C_word)a,a+=3,tmp));
t3=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_5840,a[2]=((C_word*)t0)[2],tmp=(C_word)a,a+=3,tmp);
t4=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_32792,a[2]=((C_word)li515),tmp=(C_word)a,a+=3,tmp);
C_trace("ChickenBridge.scm: 340  ##sys#register-macro");
t5=C_retrieve(lf[658]);
((C_proc4)C_retrieve_proc(t5))(4,t5,t3,lf[811],t4);}

/* a32791 in k5545 in k5542 in k5538 in k5247 in k5244 in k5241 in k5238 */
static void C_ccall f_32792(C_word c,C_word t0,C_word t1,C_word t2,...){
C_word tmp;
C_word t3;
va_list v;
C_word *a,c2=c;
C_save_rest(t2,c2,3);
if(c<3) C_bad_min_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_demand(c*C_SIZEOF_PAIR+0)){
C_save_and_reclaim((void*)tr3r,(void*)f_32792r,3,t0,t1,t2);}
else{
a=C_alloc((c-3)*3);
t3=C_restore_rest(a,C_rest_count(0));
f_32792r(t0,t1,t2,t3);}}

static void C_ccall f_32792r(C_word t0,C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_trace("ChickenBridge.scm: 341  expand-send");
t4=C_retrieve(lf[32]);
((C_proc5)C_retrieve_proc(t4))(5,t4,t1,t2,t3,C_SCHEME_FALSE);}

/* k5838 in k5545 in k5542 in k5538 in k5247 in k5244 in k5241 in k5238 */
static void C_ccall f_5840(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word t14;
C_word t15;
C_word t16;
C_word t17;
C_word t18;
C_word t19;
C_word t20;
C_word t21;
C_word t22;
C_word t23;
C_word t24;
C_word t25;
C_word t26;
C_word t27;
C_word t28;
C_word t29;
C_word t30;
C_word t31;
C_word t32;
C_word t33;
C_word t34;
C_word t35;
C_word t36;
C_word t37;
C_word t38;
C_word t39;
C_word t40;
C_word t41;
C_word t42;
C_word t43;
C_word t44;
C_word t45;
C_word t46;
C_word t47;
C_word t48;
C_word t49;
C_word t50;
C_word t51;
C_word t52;
C_word t53;
C_word t54;
C_word t55;
C_word t56;
C_word t57;
C_word t58;
C_word ab[156],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_5840,2,t0,t1);}
t2=C_mutate((C_word*)lf[44]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_5842,a[2]=((C_word)li14),tmp=(C_word)a,a+=3,tmp));
t3=C_mutate((C_word*)lf[46]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_5853,a[2]=((C_word)li16),tmp=(C_word)a,a+=3,tmp));
t4=C_mutate((C_word*)lf[49]+1,*((C_word*)lf[10]+1));
t5=C_mutate((C_word*)lf[50]+1,*((C_word*)lf[24]+1));
t6=C_mutate((C_word*)lf[51]+1,*((C_word*)lf[52]+1));
t7=C_mutate((C_word*)lf[53]+1,*((C_word*)lf[54]+1));
t8=C_mutate((C_word*)lf[55]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_5886,a[2]=((C_word)li17),tmp=(C_word)a,a+=3,tmp));
t9=C_mutate((C_word*)lf[56]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_5896,a[2]=((C_word)li18),tmp=(C_word)a,a+=3,tmp));
t10=C_mutate((C_word*)lf[57]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_5906,a[2]=((C_word)li19),tmp=(C_word)a,a+=3,tmp));
t11=C_mutate((C_word*)lf[58]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_5916,a[2]=((C_word)li20),tmp=(C_word)a,a+=3,tmp));
t12=C_mutate((C_word*)lf[59]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_5926,a[2]=((C_word)li21),tmp=(C_word)a,a+=3,tmp));
t13=C_mutate((C_word*)lf[60]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_5940,a[2]=((C_word)li22),tmp=(C_word)a,a+=3,tmp));
t14=C_mutate((C_word*)lf[61]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_5960,a[2]=((C_word)li23),tmp=(C_word)a,a+=3,tmp));
t15=C_mutate((C_word*)lf[62]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_5983,a[2]=((C_word)li24),tmp=(C_word)a,a+=3,tmp));
t16=C_mutate((C_word*)lf[63]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_6031,a[2]=((C_word)li25),tmp=(C_word)a,a+=3,tmp));
t17=C_mutate(&lf[65],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_6071,a[2]=((C_word)li26),tmp=(C_word)a,a+=3,tmp));
t18=C_mutate(&lf[66],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_6129,a[2]=((C_word)li27),tmp=(C_word)a,a+=3,tmp));
t19=C_mutate(&lf[67],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_6215,a[2]=((C_word)li29),tmp=(C_word)a,a+=3,tmp));
t20=C_mutate(&lf[68],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_6256,a[2]=((C_word)li30),tmp=(C_word)a,a+=3,tmp));
t21=C_mutate(&lf[69],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_6283,a[2]=((C_word)li31),tmp=(C_word)a,a+=3,tmp));
t22=C_mutate(&lf[70],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_6317,a[2]=((C_word)li32),tmp=(C_word)a,a+=3,tmp));
t23=C_mutate(&lf[71],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_6368,a[2]=((C_word)li33),tmp=(C_word)a,a+=3,tmp));
t24=C_mutate(&lf[72],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_6392,a[2]=((C_word)li34),tmp=(C_word)a,a+=3,tmp));
t25=C_mutate(&lf[73],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_6399,a[2]=((C_word)li35),tmp=(C_word)a,a+=3,tmp));
t26=C_mutate(&lf[74],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_6437,a[2]=((C_word)li36),tmp=(C_word)a,a+=3,tmp));
t27=C_mutate(&lf[75],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_6448,a[2]=((C_word)li37),tmp=(C_word)a,a+=3,tmp));
t28=C_mutate(&lf[76],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_6466,a[2]=((C_word)li38),tmp=(C_word)a,a+=3,tmp));
t29=C_mutate(&lf[77],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_6476,a[2]=((C_word)li39),tmp=(C_word)a,a+=3,tmp));
t30=C_mutate((C_word*)lf[78]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_6489,a[2]=((C_word)li41),tmp=(C_word)a,a+=3,tmp));
t31=C_mutate((C_word*)lf[79]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_6523,a[2]=((C_word)li42),tmp=(C_word)a,a+=3,tmp));
t32=C_mutate((C_word*)lf[80]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_6605,a[2]=((C_word)li43),tmp=(C_word)a,a+=3,tmp));
t33=C_mutate((C_word*)lf[81]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_6620,a[2]=((C_word)li44),tmp=(C_word)a,a+=3,tmp));
t34=C_mutate((C_word*)lf[82]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_6626,a[2]=((C_word)li45),tmp=(C_word)a,a+=3,tmp));
t35=C_mutate((C_word*)lf[83]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_6645,a[2]=((C_word)li49),tmp=(C_word)a,a+=3,tmp));
t36=C_mutate((C_word*)lf[87]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_6705,a[2]=((C_word)li50),tmp=(C_word)a,a+=3,tmp));
t37=C_mutate((C_word*)lf[88]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_6720,a[2]=((C_word)li51),tmp=(C_word)a,a+=3,tmp));
t38=C_mutate((C_word*)lf[89]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_6735,a[2]=((C_word)li53),tmp=(C_word)a,a+=3,tmp));
t39=C_mutate((C_word*)lf[94]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_6830,a[2]=((C_word)li54),tmp=(C_word)a,a+=3,tmp));
t40=C_mutate((C_word*)lf[95]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_6857,a[2]=((C_word)li56),tmp=(C_word)a,a+=3,tmp));
t41=C_mutate((C_word*)lf[97]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_6916,a[2]=((C_word)li57),tmp=(C_word)a,a+=3,tmp));
t42=C_mutate((C_word*)lf[98]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_6922,a[2]=((C_word)li58),tmp=(C_word)a,a+=3,tmp));
t43=C_mutate((C_word*)lf[99]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_6946,a[2]=((C_word)li59),tmp=(C_word)a,a+=3,tmp));
t44=C_mutate((C_word*)lf[100]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_6967,a[2]=((C_word)li60),tmp=(C_word)a,a+=3,tmp));
t45=C_mutate((C_word*)lf[102]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_7015,a[2]=((C_word)li61),tmp=(C_word)a,a+=3,tmp));
t46=C_mutate((C_word*)lf[106]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_7243,a[2]=((C_word)li62),tmp=(C_word)a,a+=3,tmp));
t47=C_mutate((C_word*)lf[107]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_7249,a[2]=((C_word)li63),tmp=(C_word)a,a+=3,tmp));
t48=C_mutate((C_word*)lf[108]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_7255,a[2]=((C_word)li64),tmp=(C_word)a,a+=3,tmp));
t49=C_mutate((C_word*)lf[109]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_7261,a[2]=((C_word)li65),tmp=(C_word)a,a+=3,tmp));
t50=C_mutate((C_word*)lf[113]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_7489,a[2]=((C_word)li66),tmp=(C_word)a,a+=3,tmp));
t51=C_mutate((C_word*)lf[114]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_7508,a[2]=((C_word)li67),tmp=(C_word)a,a+=3,tmp));
t52=C_mutate((C_word*)lf[115]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_7548,a[2]=((C_word)li68),tmp=(C_word)a,a+=3,tmp));
t53=C_mutate((C_word*)lf[116]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_7554,a[2]=((C_word)li69),tmp=(C_word)a,a+=3,tmp));
t54=C_mutate((C_word*)lf[118]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_7573,a[2]=((C_word)li70),tmp=(C_word)a,a+=3,tmp));
t55=C_mutate((C_word*)lf[119]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_7592,a[2]=((C_word)li71),tmp=(C_word)a,a+=3,tmp));
t56=C_mutate((C_word*)lf[120]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_7598,a[2]=((C_word)li72),tmp=(C_word)a,a+=3,tmp));
t57=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_7606,a[2]=((C_word*)t0)[2],tmp=(C_word)a,a+=3,tmp);
C_trace("ChickenBridge.scm: 362  make-hash-table");
t58=C_retrieve(lf[793]);
((C_proc3)C_retrieve_proc(t58))(3,t58,t57,*((C_word*)lf[810]+1));}

/* k7604 in k5838 in k5545 in k5542 in k5538 in k5247 in k5244 in k5241 in k5238 */
static void C_ccall f_7606(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word ab[12],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_7606,2,t0,t1);}
t2=C_mutate(&lf[121],t1);
t3=C_SCHEME_END_OF_LIST;
t4=(*a=C_VECTOR_TYPE|1,a[1]=t3,tmp=(C_word)a,a+=2,tmp);
t5=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_7609,a[2]=((C_word*)t0)[2],tmp=(C_word)a,a+=3,tmp);
t6=C_SCHEME_UNDEFINED;
t7=(*a=C_VECTOR_TYPE|1,a[1]=t6,tmp=(C_word)a,a+=2,tmp);
t8=C_set_block_item(t7,0,(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_32576,a[2]=t7,a[3]=t4,a[4]=((C_word)li514),tmp=(C_word)a,a+=5,tmp));
t9=((C_word*)t7)[1];
f_32576(t9,t5,C_fix(0));}

/* do476 in k7604 in k5838 in k5545 in k5542 in k5538 in k5247 in k5244 in k5241 in k5238 */
static void C_fcall f_32576(C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[25],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_32576,NULL,3,t0,t1,t2);}
if(C_truep((C_word)C_i_nequalp(t2,C_fix(128)))){
t3=(C_word)C_a_i_list(&a,5,lf[796],C_fix(-1),lf[797],C_SCHEME_FALSE,C_SCHEME_FALSE);
t4=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_32589,a[2]=t3,a[3]=t1,tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 362  hash-table-set!");
t5=C_retrieve(lf[660]);
((C_proc5)C_retrieve_proc(t5))(5,t5,t4,C_retrieve2(lf[121],"*notes*"),lf[798],t3);}
else{
t3=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_32790,a[2]=t1,a[3]=((C_word*)t0)[2],a[4]=t2,a[5]=((C_word*)t0)[3],tmp=(C_word)a,a+=6,tmp);
C_trace("ChickenBridge.scm: 362  modulo");
t4=*((C_word*)lf[96]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t3,t2,C_fix(12));}}

/* k32788 in do476 in k7604 in k5838 in k5545 in k5542 in k5538 in k5247 in k5244 in k5241 in k5238 */
static void C_ccall f_32790(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[10],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_32790,2,t0,t1);}
t2=(C_word)C_i_list_ref(lf[799],t1);
t3=C_mutate(((C_word *)((C_word*)t0)[5])+1,t2);
t4=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_32599,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],tmp=(C_word)a,a+=5,tmp);
t5=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_32610,a[2]=t4,a[3]=((C_word*)t0)[5],a[4]=((C_word*)t0)[4],tmp=(C_word)a,a+=5,tmp);
C_trace("ChickenBridge.scm: 362  modulo");
t6=*((C_word*)lf[96]+1);
((C_proc4)C_retrieve_proc(t6))(4,t6,t5,((C_word*)t0)[4],C_fix(12));}

/* k32608 in k32788 in do476 in k7604 in k5838 in k5545 in k5542 in k5538 in k5247 in k5244 in k5241 in k5238 */
static void C_ccall f_32610(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[16],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_32610,2,t0,t1);}
t2=(C_word)C_a_i_minus(&a,2,((C_word*)t0)[4],lf[800]);
t3=(C_word)C_a_i_plus(&a,2,((C_word*)t0)[4],lf[801]);
t4=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_32622,a[2]=t3,a[3]=t2,a[4]=t1,a[5]=((C_word*)t0)[4],a[6]=((C_word*)t0)[2],a[7]=((C_word*)t0)[3],tmp=(C_word)a,a+=8,tmp);
C_trace("ChickenBridge.scm: 362  tb:keynum->hertz");
f_6368(t4,((C_word*)t0)[4]);}

/* k32620 in k32608 in k32788 in do476 in k7604 in k5838 in k5545 in k5542 in k5538 in k5247 in k5244 in k5241 in k5238 */
static void C_ccall f_32622(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[13],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_32622,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|8,a[1]=(C_word)f_32626,a[2]=t1,a[3]=((C_word*)t0)[2],a[4]=((C_word*)t0)[3],a[5]=((C_word*)t0)[4],a[6]=((C_word*)t0)[5],a[7]=((C_word*)t0)[6],a[8]=((C_word*)t0)[7],tmp=(C_word)a,a+=9,tmp);
t3=(C_word)C_a_i_plus(&a,2,((C_word*)t0)[5],lf[809]);
C_trace("ChickenBridge.scm: 362  tb:keynum->hertz");
f_6368(t2,t3);}

/* k32624 in k32620 in k32608 in k32788 in do476 in k7604 in k5838 in k5545 in k5542 in k5538 in k5247 in k5244 in k5241 in k5238 */
static void C_ccall f_32626(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[14],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_32626,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|9,a[1]=(C_word)f_32630,a[2]=t1,a[3]=((C_word*)t0)[2],a[4]=((C_word*)t0)[3],a[5]=((C_word*)t0)[4],a[6]=((C_word*)t0)[5],a[7]=((C_word*)t0)[6],a[8]=((C_word*)t0)[7],a[9]=((C_word*)t0)[8],tmp=(C_word)a,a+=10,tmp);
t3=(C_word)C_a_i_minus(&a,2,((C_word*)t0)[6],lf[808]);
C_trace("ChickenBridge.scm: 362  tb:keynum->hertz");
f_6368(t2,t3);}

/* k32628 in k32624 in k32620 in k32608 in k32788 in do476 in k7604 in k5838 in k5545 in k5542 in k5538 in k5247 in k5244 in k5241 in k5238 */
static void C_ccall f_32630(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[15],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_32630,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|10,a[1]=(C_word)f_32774,a[2]=t1,a[3]=((C_word*)t0)[2],a[4]=((C_word*)t0)[3],a[5]=((C_word*)t0)[4],a[6]=((C_word*)t0)[5],a[7]=((C_word*)t0)[6],a[8]=((C_word*)t0)[7],a[9]=((C_word*)t0)[8],a[10]=((C_word*)t0)[9],tmp=(C_word)a,a+=11,tmp);
t3=(C_word)C_a_i_divide(&a,2,((C_word*)t0)[7],C_fix(12));
C_trace("ChickenBridge.scm: 362  floor");
t4=*((C_word*)lf[132]+1);
((C_proc3)C_retrieve_proc(t4))(3,t4,t2,t3);}

/* k32772 in k32628 in k32624 in k32620 in k32608 in k32788 in do476 in k7604 in k5838 in k5545 in k5542 in k5538 in k5247 in k5244 in k5241 in k5238 */
static void C_ccall f_32774(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_32774,2,t0,t1);}
t2=(C_word)C_i_inexact_to_exact(t1);
t3=C_SCHEME_UNDEFINED;
t4=(*a=C_VECTOR_TYPE|1,a[1]=t3,tmp=(C_word)a,a+=2,tmp);
t5=C_set_block_item(t4,0,(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_32636,a[2]=((C_word*)t0)[10],a[3]=t4,a[4]=((C_word)li513),tmp=(C_word)a,a+=5,tmp));
t6=((C_word*)t4)[1];
f_32636(t6,((C_word*)t0)[9],((C_word*)((C_word*)t0)[10])[1],((C_word*)t0)[8],((C_word*)t0)[7],((C_word*)t0)[6],((C_word*)t0)[5],((C_word*)t0)[4],((C_word*)t0)[3],((C_word*)t0)[2],t2,C_SCHEME_FALSE,C_SCHEME_FALSE,C_SCHEME_FALSE);}

/* do482 in k32772 in k32628 in k32624 in k32620 in k32608 in k32788 in do476 in k7604 in k5838 in k5545 in k5542 in k5538 in k5247 in k5244 in k5241 in k5238 */
static void C_fcall f_32636(C_word t0,C_word t1,C_word t2,C_word t3,C_word t4,C_word t5,C_word t6,C_word t7,C_word t8,C_word t9,C_word t10,C_word t11,C_word t12,C_word t13){
C_word tmp;
C_word t14;
C_word t15;
C_word t16;
C_word t17;
C_word t18;
C_word t19;
C_word t20;
C_word t21;
C_word ab[40],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_32636,NULL,14,t0,t1,t2,t3,t4,t5,t6,t7,t8,t9,t10,t11,t12,t13);}
t14=(*a=C_VECTOR_TYPE|1,a[1]=t10,tmp=(C_word)a,a+=2,tmp);
t15=(*a=C_VECTOR_TYPE|1,a[1]=t11,tmp=(C_word)a,a+=2,tmp);
t16=(*a=C_VECTOR_TYPE|1,a[1]=t12,tmp=(C_word)a,a+=2,tmp);
t17=(*a=C_VECTOR_TYPE|1,a[1]=t13,tmp=(C_word)a,a+=2,tmp);
if(C_truep((C_word)C_i_nullp(t2))){
t18=t1;
((C_proc2)(void*)(*((C_word*)t18+1)))(2,t18,C_SCHEME_FALSE);}
else{
t18=(*a=C_CLOSURE_TYPE|15,a[1]=(C_word)f_32646,a[2]=t17,a[3]=t16,a[4]=t15,a[5]=t14,a[6]=t9,a[7]=t8,a[8]=t7,a[9]=t6,a[10]=t5,a[11]=t4,a[12]=t3,a[13]=t1,a[14]=((C_word*)t0)[3],a[15]=t2,tmp=(C_word)a,a+=16,tmp);
t19=(*a=C_CLOSURE_TYPE|15,a[1]=(C_word)f_32656,a[2]=((C_word*)t0)[2],a[3]=t2,a[4]=t8,a[5]=t6,a[6]=t9,a[7]=t5,a[8]=t17,a[9]=t4,a[10]=t7,a[11]=t3,a[12]=t16,a[13]=t15,a[14]=t14,a[15]=t18,tmp=(C_word)a,a+=16,tmp);
if(C_truep((C_word)C_i_nequalp(t3,C_fix(0)))){
t20=(C_word)C_i_car(t2);
t21=t19;
f_32656(t21,(C_word)C_i_string_equal_p(t20,lf[807]));}
else{
t20=t19;
f_32656(t20,C_SCHEME_FALSE);}}}

/* k32654 in do482 in k32772 in k32628 in k32624 in k32620 in k32608 in k32788 in do476 in k7604 in k5838 in k5545 in k5542 in k5538 in k5247 in k5244 in k5241 in k5238 */
static void C_fcall f_32656(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word ab[24],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_32656,NULL,2,t0,t1);}
if(C_truep(t1)){
t2=((C_word*)t0)[15];
f_32646(2,t2,C_SCHEME_UNDEFINED);}
else{
t2=(*a=C_CLOSURE_TYPE|15,a[1]=(C_word)f_32659,a[2]=((C_word*)t0)[15],a[3]=((C_word*)t0)[2],a[4]=((C_word*)t0)[3],a[5]=((C_word*)t0)[4],a[6]=((C_word*)t0)[5],a[7]=((C_word*)t0)[6],a[8]=((C_word*)t0)[7],a[9]=((C_word*)t0)[8],a[10]=((C_word*)t0)[9],a[11]=((C_word*)t0)[10],a[12]=((C_word*)t0)[11],a[13]=((C_word*)t0)[12],a[14]=((C_word*)t0)[13],a[15]=((C_word*)t0)[14],tmp=(C_word)a,a+=16,tmp);
t3=(C_word)C_i_car(((C_word*)t0)[3]);
if(C_truep((C_word)C_i_string_equal_p(t3,lf[805]))){
t4=(C_word)C_a_i_minus(&a,2,((C_word*)((C_word*)t0)[14])[1],C_fix(1));
t5=C_mutate(((C_word *)((C_word*)t0)[14])+1,t4);
t6=t2;
f_32659(t6,t5);}
else{
t4=(C_word)C_i_car(((C_word*)t0)[3]);
if(C_truep((C_word)C_i_string_equal_p(t4,lf[806]))){
t5=(C_word)C_a_i_plus(&a,2,((C_word*)((C_word*)t0)[14])[1],C_fix(1));
t6=C_mutate(((C_word *)((C_word*)t0)[14])+1,t5);
t7=t2;
f_32659(t7,t6);}
else{
t5=t2;
f_32659(t5,C_SCHEME_UNDEFINED);}}}}

/* k32657 in k32654 in do482 in k32772 in k32628 in k32624 in k32620 in k32608 in k32788 in do476 in k7604 in k5838 in k5545 in k5542 in k5538 in k5247 in k5244 in k5241 in k5238 */
static void C_fcall f_32659(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[15],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_32659,NULL,2,t0,t1);}
t2=(C_word)C_i_list_ref(lf[802],((C_word*)((C_word*)t0)[15])[1]);
t3=C_mutate(((C_word *)((C_word*)t0)[14])+1,t2);
t4=(*a=C_CLOSURE_TYPE|14,a[1]=(C_word)f_32667,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],a[7]=((C_word*)t0)[7],a[8]=((C_word*)t0)[8],a[9]=((C_word*)t0)[9],a[10]=((C_word*)t0)[14],a[11]=((C_word*)t0)[10],a[12]=((C_word*)t0)[11],a[13]=((C_word*)t0)[12],a[14]=((C_word*)t0)[13],tmp=(C_word)a,a+=15,tmp);
t5=(C_word)C_i_car(((C_word*)t0)[4]);
C_trace("ChickenBridge.scm: 362  string-append");
t6=*((C_word*)lf[124]+1);
((C_proc4)C_retrieve_proc(t6))(4,t6,t4,t5,((C_word*)((C_word*)t0)[14])[1]);}

/* k32665 in k32657 in k32654 in do482 in k32772 in k32628 in k32624 in k32620 in k32608 in k32788 in do476 in k7604 in k5838 in k5545 in k5542 in k5538 in k5247 in k5244 in k5241 in k5238 */
static void C_ccall f_32667(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[28],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_32667,2,t0,t1);}
t2=C_mutate(((C_word *)((C_word*)t0)[14])+1,t1);
t3=(C_word)C_a_i_list(&a,5,((C_word*)((C_word*)t0)[14])[1],((C_word*)t0)[13],((C_word*)t0)[12],((C_word*)t0)[11],((C_word*)((C_word*)t0)[10])[1]);
t4=C_mutate(((C_word *)((C_word*)t0)[9])+1,t3);
t5=(*a=C_CLOSURE_TYPE|12,a[1]=(C_word)f_32674,a[2]=((C_word*)t0)[13],a[3]=((C_word*)t0)[2],a[4]=((C_word*)t0)[3],a[5]=((C_word*)t0)[4],a[6]=((C_word*)t0)[5],a[7]=((C_word*)t0)[6],a[8]=((C_word*)t0)[9],a[9]=((C_word*)t0)[10],a[10]=((C_word*)t0)[7],a[11]=((C_word*)t0)[8],a[12]=((C_word*)t0)[14],tmp=(C_word)a,a+=13,tmp);
C_trace("ChickenBridge.scm: 362  hash-table-set!");
t6=C_retrieve(lf[660]);
((C_proc5)C_retrieve_proc(t6))(5,t6,t5,C_retrieve2(lf[121],"*notes*"),((C_word*)((C_word*)t0)[14])[1],((C_word*)((C_word*)t0)[9])[1]);}

/* k32672 in k32665 in k32657 in k32654 in do482 in k32772 in k32628 in k32624 in k32620 in k32608 in k32788 in do476 in k7604 in k5838 in k5545 in k5542 in k5538 in k5247 in k5244 in k5241 in k5238 */
static void C_ccall f_32674(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[12],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_32674,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|11,a[1]=(C_word)f_32677,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],a[7]=((C_word*)t0)[8],a[8]=((C_word*)t0)[9],a[9]=((C_word*)t0)[10],a[10]=((C_word*)t0)[11],a[11]=((C_word*)t0)[12],tmp=(C_word)a,a+=12,tmp);
t3=(C_word)C_eqp(((C_word*)t0)[5],((C_word*)((C_word*)t0)[4])[1]);
if(C_truep(t3)){
C_trace("ChickenBridge.scm: 362  hash-table-set!");
t4=C_retrieve(lf[660]);
((C_proc5)C_retrieve_proc(t4))(5,t4,t2,C_retrieve2(lf[121],"*notes*"),((C_word*)t0)[2],((C_word*)((C_word*)t0)[8])[1]);}
else{
t4=t2;
f_32677(2,t4,C_SCHEME_UNDEFINED);}}

/* k32675 in k32672 in k32665 in k32657 in k32654 in do482 in k32772 in k32628 in k32624 in k32620 in k32608 in k32788 in do476 in k7604 in k5838 in k5545 in k5542 in k5538 in k5247 in k5244 in k5241 in k5238 */
static void C_ccall f_32677(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[12],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_32677,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|11,a[1]=(C_word)f_32681,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],a[7]=((C_word*)t0)[7],a[8]=((C_word*)t0)[8],a[9]=((C_word*)t0)[9],a[10]=((C_word*)t0)[10],a[11]=((C_word*)t0)[11],tmp=(C_word)a,a+=12,tmp);
t3=(C_word)C_i_car(((C_word*)t0)[4]);
C_trace("ChickenBridge.scm: 362  string-append");
t4=*((C_word*)lf[124]+1);
((C_proc5)C_retrieve_proc(t4))(5,t4,t2,t3,lf[804],((C_word*)((C_word*)t0)[8])[1]);}

/* k32679 in k32675 in k32672 in k32665 in k32657 in k32654 in do482 in k32772 in k32628 in k32624 in k32620 in k32608 in k32788 in do476 in k7604 in k5838 in k5545 in k5542 in k5538 in k5247 in k5244 in k5241 in k5238 */
static void C_ccall f_32681(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[26],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_32681,2,t0,t1);}
t2=C_mutate(((C_word *)((C_word*)t0)[11])+1,t1);
t3=(C_word)C_a_i_list(&a,5,((C_word*)((C_word*)t0)[11])[1],((C_word*)t0)[10],((C_word*)t0)[9],C_SCHEME_FALSE,((C_word*)((C_word*)t0)[8])[1]);
t4=C_mutate(((C_word *)((C_word*)t0)[7])+1,t3);
t5=(*a=C_CLOSURE_TYPE|10,a[1]=(C_word)f_32688,a[2]=((C_word*)t0)[10],a[3]=((C_word*)t0)[2],a[4]=((C_word*)t0)[3],a[5]=((C_word*)t0)[4],a[6]=((C_word*)t0)[7],a[7]=((C_word*)t0)[8],a[8]=((C_word*)t0)[5],a[9]=((C_word*)t0)[6],a[10]=((C_word*)t0)[11],tmp=(C_word)a,a+=11,tmp);
C_trace("ChickenBridge.scm: 362  hash-table-set!");
t6=C_retrieve(lf[660]);
((C_proc5)C_retrieve_proc(t6))(5,t6,t5,C_retrieve2(lf[121],"*notes*"),((C_word*)((C_word*)t0)[11])[1],((C_word*)((C_word*)t0)[7])[1]);}

/* k32686 in k32679 in k32675 in k32672 in k32665 in k32657 in k32654 in do482 in k32772 in k32628 in k32624 in k32620 in k32608 in k32788 in do476 in k7604 in k5838 in k5545 in k5542 in k5538 in k5247 in k5244 in k5241 in k5238 */
static void C_ccall f_32688(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[10],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_32688,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|9,a[1]=(C_word)f_32691,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],a[7]=((C_word*)t0)[8],a[8]=((C_word*)t0)[9],a[9]=((C_word*)t0)[10],tmp=(C_word)a,a+=10,tmp);
t3=(C_word)C_eqp(((C_word*)t0)[5],((C_word*)((C_word*)t0)[4])[1]);
if(C_truep(t3)){
C_trace("ChickenBridge.scm: 362  hash-table-set!");
t4=C_retrieve(lf[660]);
((C_proc5)C_retrieve_proc(t4))(5,t4,t2,C_retrieve2(lf[121],"*notes*"),((C_word*)t0)[2],((C_word*)((C_word*)t0)[6])[1]);}
else{
t4=t2;
f_32691(2,t4,C_SCHEME_UNDEFINED);}}

/* k32689 in k32686 in k32679 in k32675 in k32672 in k32665 in k32657 in k32654 in do482 in k32772 in k32628 in k32624 in k32620 in k32608 in k32788 in do476 in k7604 in k5838 in k5545 in k5542 in k5538 in k5247 in k5244 in k5241 in k5238 */
static void C_ccall f_32691(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[10],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_32691,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|9,a[1]=(C_word)f_32695,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],a[7]=((C_word*)t0)[7],a[8]=((C_word*)t0)[8],a[9]=((C_word*)t0)[9],tmp=(C_word)a,a+=10,tmp);
t3=(C_word)C_i_car(((C_word*)t0)[4]);
C_trace("ChickenBridge.scm: 362  string-append");
t4=*((C_word*)lf[124]+1);
((C_proc5)C_retrieve_proc(t4))(5,t4,t2,t3,lf[803],((C_word*)((C_word*)t0)[6])[1]);}

/* k32693 in k32689 in k32686 in k32679 in k32675 in k32672 in k32665 in k32657 in k32654 in do482 in k32772 in k32628 in k32624 in k32620 in k32608 in k32788 in do476 in k7604 in k5838 in k5545 in k5542 in k5538 in k5247 in k5244 in k5241 in k5238 */
static void C_ccall f_32695(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[22],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_32695,2,t0,t1);}
t2=C_mutate(((C_word *)((C_word*)t0)[9])+1,t1);
t3=(C_word)C_a_i_list(&a,5,((C_word*)((C_word*)t0)[9])[1],((C_word*)t0)[8],((C_word*)t0)[7],C_SCHEME_FALSE,((C_word*)((C_word*)t0)[6])[1]);
t4=C_mutate(((C_word *)((C_word*)t0)[5])+1,t3);
t5=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_32702,a[2]=((C_word*)t0)[5],a[3]=((C_word*)t0)[8],a[4]=((C_word*)t0)[2],a[5]=((C_word*)t0)[3],a[6]=((C_word*)t0)[4],tmp=(C_word)a,a+=7,tmp);
C_trace("ChickenBridge.scm: 362  hash-table-set!");
t6=C_retrieve(lf[660]);
((C_proc5)C_retrieve_proc(t6))(5,t6,t5,C_retrieve2(lf[121],"*notes*"),((C_word*)((C_word*)t0)[9])[1],((C_word*)((C_word*)t0)[5])[1]);}

/* k32700 in k32693 in k32689 in k32686 in k32679 in k32675 in k32672 in k32665 in k32657 in k32654 in do482 in k32772 in k32628 in k32624 in k32620 in k32608 in k32788 in do476 in k7604 in k5838 in k5545 in k5542 in k5538 in k5247 in k5244 in k5241 in k5238 */
static void C_ccall f_32702(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word *a;
t2=(C_word)C_eqp(((C_word*)t0)[6],((C_word*)((C_word*)t0)[5])[1]);
if(C_truep(t2)){
C_trace("ChickenBridge.scm: 362  hash-table-set!");
t3=C_retrieve(lf[660]);
((C_proc5)C_retrieve_proc(t3))(5,t3,((C_word*)t0)[4],C_retrieve2(lf[121],"*notes*"),((C_word*)t0)[3],((C_word*)((C_word*)t0)[2])[1]);}
else{
t3=((C_word*)t0)[4];
f_32646(2,t3,C_SCHEME_UNDEFINED);}}

/* k32644 in do482 in k32772 in k32628 in k32624 in k32620 in k32608 in k32788 in do476 in k7604 in k5838 in k5545 in k5542 in k5538 in k5247 in k5244 in k5241 in k5238 */
static void C_ccall f_32646(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word *a;
t2=(C_word)C_i_cdr(((C_word*)t0)[15]);
t3=((C_word*)((C_word*)t0)[14])[1];
f_32636(t3,((C_word*)t0)[13],t2,((C_word*)t0)[12],((C_word*)t0)[11],((C_word*)t0)[10],((C_word*)t0)[9],((C_word*)t0)[8],((C_word*)t0)[7],((C_word*)t0)[6],((C_word*)((C_word*)t0)[5])[1],((C_word*)((C_word*)t0)[4])[1],((C_word*)((C_word*)t0)[3])[1],((C_word*)((C_word*)t0)[2])[1]);}

/* k32597 in k32788 in do476 in k7604 in k5838 in k5545 in k5542 in k5538 in k5247 in k5244 in k5241 in k5238 */
static void C_ccall f_32599(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[4],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_32599,2,t0,t1);}
t2=(C_word)C_a_i_plus(&a,2,((C_word*)t0)[4],C_fix(1));
t3=((C_word*)((C_word*)t0)[3])[1];
f_32576(t3,((C_word*)t0)[2],t2);}

/* k32587 in do476 in k7604 in k5838 in k5545 in k5542 in k5538 in k5247 in k5244 in k5241 in k5238 */
static void C_ccall f_32589(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[3],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_32589,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_32592,a[2]=((C_word*)t0)[3],tmp=(C_word)a,a+=3,tmp);
C_trace("ChickenBridge.scm: 362  hash-table-set!");
t3=C_retrieve(lf[660]);
((C_proc5)C_retrieve_proc(t3))(5,t3,t2,C_retrieve2(lf[121],"*notes*"),C_fix(-1),((C_word*)t0)[2]);}

/* k32590 in k32587 in do476 in k7604 in k5838 in k5545 in k5542 in k5538 in k5247 in k5244 in k5241 in k5238 */
static void C_ccall f_32592(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
t2=((C_word*)t0)[2];
((C_proc2)(void*)(*((C_word*)t2+1)))(2,t2,C_SCHEME_TRUE);}

/* k7607 in k7604 in k5838 in k5545 in k5542 in k5538 in k5247 in k5244 in k5241 in k5238 */
static void C_ccall f_7609(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word t14;
C_word t15;
C_word t16;
C_word t17;
C_word t18;
C_word t19;
C_word t20;
C_word t21;
C_word t22;
C_word t23;
C_word t24;
C_word t25;
C_word t26;
C_word t27;
C_word t28;
C_word t29;
C_word t30;
C_word t31;
C_word t32;
C_word t33;
C_word t34;
C_word t35;
C_word t36;
C_word t37;
C_word t38;
C_word t39;
C_word t40;
C_word t41;
C_word t42;
C_word t43;
C_word t44;
C_word t45;
C_word t46;
C_word t47;
C_word t48;
C_word t49;
C_word t50;
C_word t51;
C_word t52;
C_word t53;
C_word t54;
C_word t55;
C_word t56;
C_word t57;
C_word t58;
C_word t59;
C_word t60;
C_word t61;
C_word t62;
C_word t63;
C_word t64;
C_word t65;
C_word t66;
C_word t67;
C_word t68;
C_word t69;
C_word t70;
C_word t71;
C_word t72;
C_word ab[210],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_7609,2,t0,t1);}
t2=C_mutate(&lf[122],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_7611,a[2]=((C_word)li75),tmp=(C_word)a,a+=3,tmp));
t3=C_mutate(&lf[126],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_7709,a[2]=((C_word)li78),tmp=(C_word)a,a+=3,tmp));
t4=C_mutate((C_word*)lf[134]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_7762,a[2]=((C_word)li80),tmp=(C_word)a,a+=3,tmp));
t5=C_mutate((C_word*)lf[136]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_7859,a[2]=((C_word)li82),tmp=(C_word)a,a+=3,tmp));
t6=C_mutate((C_word*)lf[138]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_7981,a[2]=((C_word)li84),tmp=(C_word)a,a+=3,tmp));
t7=C_mutate(&lf[140],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_8097,a[2]=((C_word)li85),tmp=(C_word)a,a+=3,tmp));
t8=C_mutate(&lf[142],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_8109,a[2]=((C_word)li86),tmp=(C_word)a,a+=3,tmp));
t9=C_mutate(&lf[144],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_8118,a[2]=((C_word)li87),tmp=(C_word)a,a+=3,tmp));
t10=C_mutate(&lf[145],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_8136,a[2]=((C_word)li88),tmp=(C_word)a,a+=3,tmp));
t11=C_mutate(&lf[146],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_8154,a[2]=((C_word)li89),tmp=(C_word)a,a+=3,tmp));
t12=C_mutate(&lf[147],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_8181,a[2]=((C_word)li90),tmp=(C_word)a,a+=3,tmp));
t13=C_mutate(&lf[148],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_8190,a[2]=((C_word)li91),tmp=(C_word)a,a+=3,tmp));
t14=C_mutate(&lf[149],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_8208,a[2]=((C_word)li92),tmp=(C_word)a,a+=3,tmp));
t15=C_mutate(&lf[150],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_8253,a[2]=((C_word)li93),tmp=(C_word)a,a+=3,tmp));
t16=C_mutate(&lf[152],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_8268,a[2]=((C_word)li94),tmp=(C_word)a,a+=3,tmp));
t17=C_mutate(&lf[153],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_8277,a[2]=((C_word)li95),tmp=(C_word)a,a+=3,tmp));
t18=C_mutate(&lf[154],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_8286,a[2]=((C_word)li96),tmp=(C_word)a,a+=3,tmp));
t19=C_mutate(&lf[155],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_8304,a[2]=((C_word)li97),tmp=(C_word)a,a+=3,tmp));
t20=C_mutate(&lf[156],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_8313,a[2]=((C_word)li98),tmp=(C_word)a,a+=3,tmp));
t21=C_mutate(&lf[157],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_8322,a[2]=((C_word)li99),tmp=(C_word)a,a+=3,tmp));
t22=C_mutate(&lf[158],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_8340,a[2]=((C_word)li100),tmp=(C_word)a,a+=3,tmp));
t23=C_mutate(&lf[159],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_8349,a[2]=((C_word)li101),tmp=(C_word)a,a+=3,tmp));
t24=C_mutate(&lf[160],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_8358,a[2]=((C_word)li102),tmp=(C_word)a,a+=3,tmp));
t25=C_mutate(&lf[161],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_8367,a[2]=((C_word)li103),tmp=(C_word)a,a+=3,tmp));
t26=C_mutate(&lf[162],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_8376,a[2]=((C_word)li104),tmp=(C_word)a,a+=3,tmp));
t27=C_mutate(&lf[163],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_8493,a[2]=((C_word)li105),tmp=(C_word)a,a+=3,tmp));
t28=C_mutate(&lf[164],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_8502,a[2]=((C_word)li106),tmp=(C_word)a,a+=3,tmp));
t29=C_mutate(&lf[165],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_8557,a[2]=((C_word)li107),tmp=(C_word)a,a+=3,tmp));
t30=C_mutate(&lf[169],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_8567,a[2]=((C_word)li109),tmp=(C_word)a,a+=3,tmp));
t31=C_mutate((C_word*)lf[177]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_8747,a[2]=((C_word)li110),tmp=(C_word)a,a+=3,tmp));
t32=C_mutate((C_word*)lf[179]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_8766,a[2]=((C_word)li111),tmp=(C_word)a,a+=3,tmp));
t33=C_mutate((C_word*)lf[181]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_8785,a[2]=((C_word)li114),tmp=(C_word)a,a+=3,tmp));
t34=C_mutate(&lf[182],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_8908,a[2]=((C_word)li117),tmp=(C_word)a,a+=3,tmp));
t35=C_mutate(&lf[183],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_9209,a[2]=((C_word)li118),tmp=(C_word)a,a+=3,tmp));
t36=C_mutate(&lf[176],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_9218,a[2]=((C_word)li119),tmp=(C_word)a,a+=3,tmp));
t37=C_mutate(&lf[184],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_9264,a[2]=((C_word)li121),tmp=(C_word)a,a+=3,tmp));
t38=C_mutate((C_word*)lf[188]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_9379,a[2]=((C_word)li123),tmp=(C_word)a,a+=3,tmp));
t39=C_mutate(&lf[190],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_9634,a[2]=((C_word)li124),tmp=(C_word)a,a+=3,tmp));
t40=C_mutate(&lf[193],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_9706,a[2]=((C_word)li125),tmp=(C_word)a,a+=3,tmp));
t41=C_mutate(&lf[195],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_9715,a[2]=((C_word)li126),tmp=(C_word)a,a+=3,tmp));
t42=C_mutate((C_word*)lf[196]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_9795,a[2]=((C_word)li128),tmp=(C_word)a,a+=3,tmp));
t43=C_mutate(&lf[197],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_10265,a[2]=((C_word)li129),tmp=(C_word)a,a+=3,tmp));
t44=C_mutate((C_word*)lf[201]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_10480,a[2]=((C_word)li131),tmp=(C_word)a,a+=3,tmp));
t45=C_mutate(&lf[202],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_10727,a[2]=((C_word)li132),tmp=(C_word)a,a+=3,tmp));
t46=C_mutate((C_word*)lf[203]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_10763,a[2]=((C_word)li134),tmp=(C_word)a,a+=3,tmp));
t47=C_mutate(&lf[204],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_11026,a[2]=((C_word)li136),tmp=(C_word)a,a+=3,tmp));
t48=C_mutate((C_word*)lf[206]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_11102,a[2]=((C_word)li138),tmp=(C_word)a,a+=3,tmp));
t49=C_mutate(&lf[207],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_11576,a[2]=((C_word)li141),tmp=(C_word)a,a+=3,tmp));
t50=C_mutate(&lf[209],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_11798,a[2]=((C_word)li142),tmp=(C_word)a,a+=3,tmp));
t51=C_mutate(&lf[211],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_11807,a[2]=((C_word)li143),tmp=(C_word)a,a+=3,tmp));
t52=C_mutate(&lf[212],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_11816,a[2]=((C_word)li144),tmp=(C_word)a,a+=3,tmp));
t53=C_mutate(&lf[213],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_11834,a[2]=((C_word)li145),tmp=(C_word)a,a+=3,tmp));
t54=C_mutate(&lf[214],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_11852,a[2]=((C_word)li146),tmp=(C_word)a,a+=3,tmp));
t55=C_mutate(&lf[215],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_11870,a[2]=((C_word)li147),tmp=(C_word)a,a+=3,tmp));
t56=C_mutate(&lf[216],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_11879,a[2]=((C_word)li148),tmp=(C_word)a,a+=3,tmp));
t57=C_mutate(&lf[217],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_11888,a[2]=((C_word)li149),tmp=(C_word)a,a+=3,tmp));
t58=C_mutate((C_word*)lf[218]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_11971,a[2]=((C_word)li154),tmp=(C_word)a,a+=3,tmp));
t59=C_mutate(&lf[219],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_12738,a[2]=((C_word)li157),tmp=(C_word)a,a+=3,tmp));
t60=C_mutate(&lf[220],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_12850,a[2]=((C_word)li162),tmp=(C_word)a,a+=3,tmp));
t61=C_mutate((C_word*)lf[225]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_13283,a[2]=((C_word)li168),tmp=(C_word)a,a+=3,tmp));
t62=C_mutate(&lf[228],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_13770,a[2]=((C_word)li175),tmp=(C_word)a,a+=3,tmp));
t63=C_mutate(&lf[238],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_14110,a[2]=((C_word)li176),tmp=(C_word)a,a+=3,tmp));
t64=C_mutate((C_word*)lf[240]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_14173,a[2]=((C_word)li181),tmp=(C_word)a,a+=3,tmp));
t65=C_mutate(&lf[241],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_14691,a[2]=((C_word)li183),tmp=(C_word)a,a+=3,tmp));
t66=C_mutate(&lf[247],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_14785,a[2]=((C_word)li184),tmp=(C_word)a,a+=3,tmp));
t67=C_mutate(&lf[249],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_14806,a[2]=((C_word)li185),tmp=(C_word)a,a+=3,tmp));
t68=C_mutate(&lf[250],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_14824,a[2]=((C_word)li186),tmp=(C_word)a,a+=3,tmp));
t69=C_mutate(&lf[251],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_14842,a[2]=((C_word)li187),tmp=(C_word)a,a+=3,tmp));
t70=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_14852,a[2]=((C_word*)t0)[2],tmp=(C_word)a,a+=3,tmp);
t71=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_32562,a[2]=((C_word)li512),tmp=(C_word)a,a+=3,tmp);
C_trace("ChickenBridge.scm: 364  ##sys#register-record-printer");
t72=C_retrieve(lf[784]);
((C_proc4)C_retrieve_proc(t72))(4,t72,t70,lf[248],t71);}

/* a32561 in k7607 in k7604 in k5838 in k5545 in k5542 in k5538 in k5247 in k5244 in k5241 in k5238 */
static void C_ccall f_32562(C_word c,C_word t0,C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word ab[5],*a=ab;
if(c!=4) C_bad_argc_2(c,4,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr4,(void*)f_32562,4,t0,t1,t2,t3);}
t4=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_32570,a[2]=t2,a[3]=t3,a[4]=t1,tmp=(C_word)a,a+=5,tmp);
C_trace("ChickenBridge.scm: 364  token-type");
f_14806(t4,t2);}

/* k32568 in a32561 in k7607 in k7604 in k5838 in k5545 in k5542 in k5538 in k5247 in k5244 in k5241 in k5238 */
static void C_ccall f_32570(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[5],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_32570,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_32574,a[2]=t1,a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],tmp=(C_word)a,a+=5,tmp);
C_trace("ChickenBridge.scm: 364  token-string");
f_14824(t2,((C_word*)t0)[2]);}

/* k32572 in k32568 in a32561 in k7607 in k7604 in k5838 in k5545 in k5542 in k5538 in k5247 in k5244 in k5241 in k5238 */
static void C_ccall f_32574(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 364  fprintf");
t2=C_retrieve(lf[781]);
((C_proc6)C_retrieve_proc(t2))(6,t2,((C_word*)t0)[4],((C_word*)t0)[3],lf[795],((C_word*)t0)[2],t1);}

/* k14850 in k7607 in k7604 in k5838 in k5545 in k5542 in k5538 in k5247 in k5244 in k5241 in k5238 */
static void C_ccall f_14852(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[12],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_14852,2,t0,t1);}
t2=C_mutate(&lf[252],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_14854,a[2]=((C_word)li188),tmp=(C_word)a,a+=3,tmp));
t3=C_mutate(&lf[254],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_14883,a[2]=((C_word)li189),tmp=(C_word)a,a+=3,tmp));
t4=C_mutate(&lf[255],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_14895,a[2]=((C_word)li190),tmp=(C_word)a,a+=3,tmp));
t5=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_14903,a[2]=((C_word*)t0)[2],tmp=(C_word)a,a+=3,tmp);
C_trace("ChickenBridge.scm: 364  make-hash-table");
t6=C_retrieve(lf[793]);
((C_proc3)C_retrieve_proc(t6))(3,t6,t5,*((C_word*)lf[794]+1));}

/* k14901 in k14850 in k7607 in k7604 in k5838 in k5545 in k5542 in k5538 in k5247 in k5244 in k5241 in k5238 */
static void C_ccall f_14903(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word ab[12],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_14903,2,t0,t1);}
t2=C_mutate(&lf[256],t1);
t3=C_mutate(&lf[257],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_14905,a[2]=((C_word)li191),tmp=(C_word)a,a+=3,tmp));
t4=C_mutate(&lf[259],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_14926,a[2]=((C_word)li192),tmp=(C_word)a,a+=3,tmp));
t5=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_15008,a[2]=((C_word*)t0)[2],tmp=(C_word)a,a+=3,tmp);
t6=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_32552,a[2]=((C_word)li511),tmp=(C_word)a,a+=3,tmp);
C_trace("ChickenBridge.scm: 364  ##sys#register-record-printer");
t7=C_retrieve(lf[784]);
((C_proc4)C_retrieve_proc(t7))(4,t7,t5,lf[258],t6);}

/* a32551 in k14901 in k14850 in k7607 in k7604 in k5838 in k5545 in k5542 in k5538 in k5247 in k5244 in k5241 in k5238 */
static void C_ccall f_32552(C_word c,C_word t0,C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word ab[4],*a=ab;
if(c!=4) C_bad_argc_2(c,4,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr4,(void*)f_32552,4,t0,t1,t2,t3);}
t4=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_32560,a[2]=t3,a[3]=t1,tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 364  rule-name");
f_14926(t4,t2);}

/* k32558 in a32551 in k14901 in k14850 in k7607 in k7604 in k5838 in k5545 in k5542 in k5538 in k5247 in k5244 in k5241 in k5238 */
static void C_ccall f_32560(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 364  fprintf");
t2=C_retrieve(lf[781]);
((C_proc5)C_retrieve_proc(t2))(5,t2,((C_word*)t0)[3],((C_word*)t0)[2],lf[792],t1);}

/* k15006 in k14901 in k14850 in k7607 in k7604 in k5838 in k5545 in k5542 in k5538 in k5247 in k5244 in k5241 in k5238 */
static void C_ccall f_15008(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[6],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_15008,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_15011,a[2]=((C_word*)t0)[2],tmp=(C_word)a,a+=3,tmp);
t3=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_32449,a[2]=((C_word)li510),tmp=(C_word)a,a+=3,tmp);
C_trace("ChickenBridge.scm: 364  ##sys#register-macro");
t4=C_retrieve(lf[658]);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[791],t3);}

/* a32448 in k15006 in k14901 in k14850 in k7607 in k7604 in k5838 in k5545 in k5542 in k5538 in k5247 in k5244 in k5241 in k5238 */
static void C_ccall f_32449(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,...){
C_word tmp;
C_word t4;
va_list v;
C_word *a,c2=c;
C_save_rest(t3,c2,4);
if(c<4) C_bad_min_argc_2(c,4,t0);
C_check_for_interrupt;
if(!C_demand(c*C_SIZEOF_PAIR+22)){
C_save_and_reclaim((void*)tr4r,(void*)f_32449r,4,t0,t1,t2,t3);}
else{
a=C_alloc((c-4)*3);
t4=C_restore_rest(a,C_rest_count(0));
f_32449r(t0,t1,t2,t3,t4);}}

static void C_ccall f_32449r(C_word t0,C_word t1,C_word t2,C_word t3,C_word t4){
C_word tmp;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word *a=C_alloc(22);
t5=C_SCHEME_UNDEFINED;
t6=(*a=C_VECTOR_TYPE|1,a[1]=t5,tmp=(C_word)a,a+=2,tmp);
t7=C_set_block_item(t6,0,(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_32452,a[2]=t6,a[3]=((C_word)li509),tmp=(C_word)a,a+=4,tmp));
t8=(C_word)C_a_i_list(&a,2,lf[788],t2);
t9=(C_word)C_a_i_list(&a,1,t8);
t10=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_32512,a[2]=t3,a[3]=t6,a[4]=t9,a[5]=t1,a[6]=t4,tmp=(C_word)a,a+=7,tmp);
C_trace("ChickenBridge.scm: 364  symbol->string");
t11=*((C_word*)lf[27]+1);
((C_proc3)C_retrieve_proc(t11))(3,t11,t10,t2);}

/* k32510 in a32448 in k15006 in k14901 in k14850 in k7607 in k7604 in k5838 in k5545 in k5542 in k5538 in k5247 in k5244 in k5241 in k5238 */
static void C_ccall f_32512(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[6],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_32512,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_32516,a[2]=((C_word*)t0)[4],a[3]=((C_word*)t0)[5],a[4]=t1,a[5]=((C_word*)t0)[6],tmp=(C_word)a,a+=6,tmp);
C_trace("ChickenBridge.scm: 364  ppat");
t3=((C_word*)((C_word*)t0)[3])[1];
f_32452(t3,t2,((C_word*)t0)[2]);}

/* k32514 in k32510 in a32448 in k15006 in k14901 in k14850 in k7607 in k7604 in k5838 in k5545 in k5542 in k5538 in k5247 in k5244 in k5241 in k5238 */
static void C_ccall f_32516(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word ab[8],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_32516,2,t0,t1);}
t2=(C_word)C_i_nullp(((C_word*)t0)[5]);
t3=(C_truep(t2)?C_SCHEME_FALSE:(C_word)C_i_car(((C_word*)t0)[5]));
t4=(C_word)C_i_nullp(((C_word*)t0)[5]);
t5=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_32530,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=t3,a[5]=t1,a[6]=((C_word*)t0)[4],a[7]=((C_word*)t0)[5],tmp=(C_word)a,a+=8,tmp);
if(C_truep(t4)){
t6=t5;
f_32530(t6,t4);}
else{
t6=(C_word)C_i_cdr(((C_word*)t0)[5]);
t7=t5;
f_32530(t7,(C_word)C_i_nullp(t6));}}

/* k32528 in k32514 in k32510 in a32448 in k15006 in k14901 in k14850 in k7607 in k7604 in k5838 in k5545 in k5542 in k5538 in k5247 in k5244 in k5241 in k5238 */
static void C_fcall f_32530(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[39],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_32530,NULL,2,t0,t1);}
t2=(C_truep(t1)?C_SCHEME_FALSE:(C_word)C_i_cadr(((C_word*)t0)[7]));
t3=(C_word)C_a_i_list(&a,6,lf[789],((C_word*)t0)[6],lf[788],((C_word*)t0)[5],((C_word*)t0)[4],t2);
t4=(C_word)C_a_i_list(&a,4,lf[660],lf[790],lf[788],t3);
t5=((C_word*)t0)[3];
((C_proc2)(void*)(*((C_word*)t5+1)))(2,t5,(C_word)C_a_i_list(&a,3,lf[3],((C_word*)t0)[2],t4));}

/* ppat in a32448 in k15006 in k14901 in k14850 in k7607 in k7604 in k5838 in k5545 in k5542 in k5538 in k5247 in k5244 in k5241 in k5238 */
static void C_fcall f_32452(C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word *a;
loop:
a=C_alloc(11);
C_check_for_interrupt;
if(!C_stack_probe(a)){
C_save_and_reclaim((void*)trf_32452,NULL,3,t0,t1,t2);}
if(C_truep((C_word)C_i_nullp(t2))){
t3=t1;
((C_proc2)(void*)(*((C_word*)t3+1)))(2,t3,lf[786]);}
else{
if(C_truep((C_word)C_i_pairp(t2))){
t3=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_32472,a[2]=((C_word*)t0)[2],a[3]=t2,a[4]=t1,tmp=(C_word)a,a+=5,tmp);
t4=(C_word)C_i_car(t2);
C_trace("ChickenBridge.scm: 364  ppat");
t7=t3;
t8=t4;
t1=t7;
t2=t8;
goto loop;}
else{
t3=(C_word)C_i_member(t2,lf[787]);
t4=t1;
((C_proc2)(void*)(*((C_word*)t4+1)))(2,t4,(C_truep(t3)?(C_word)C_a_i_list(&a,2,lf[446],t2):t2));}}}

/* k32470 in ppat in a32448 in k15006 in k14901 in k14850 in k7607 in k7604 in k5838 in k5545 in k5542 in k5538 in k5247 in k5244 in k5241 in k5238 */
static void C_ccall f_32472(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[4],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_32472,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_32476,a[2]=t1,a[3]=((C_word*)t0)[4],tmp=(C_word)a,a+=4,tmp);
t3=(C_word)C_i_cdr(((C_word*)t0)[3]);
C_trace("ChickenBridge.scm: 364  ppat");
t4=((C_word*)((C_word*)t0)[2])[1];
f_32452(t4,t2,t3);}

/* k32474 in k32470 in ppat in a32448 in k15006 in k14901 in k14850 in k7607 in k7604 in k5838 in k5545 in k5542 in k5538 in k5247 in k5244 in k5241 in k5238 */
static void C_ccall f_32476(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_32476,2,t0,t1);}
t2=((C_word*)t0)[3];
((C_proc2)(void*)(*((C_word*)t2+1)))(2,t2,(C_word)C_a_i_list(&a,3,lf[697],((C_word*)t0)[2],t1));}

/* k15009 in k15006 in k14901 in k14850 in k7607 in k7604 in k5838 in k5545 in k5542 in k5538 in k5247 in k5244 in k5241 in k5238 */
static void C_ccall f_15011(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word t14;
C_word ab[36],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_15011,2,t0,t1);}
t2=C_mutate(&lf[260],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_15013,a[2]=((C_word)li193),tmp=(C_word)a,a+=3,tmp));
t3=C_mutate(&lf[160],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_15034,a[2]=((C_word)li194),tmp=(C_word)a,a+=3,tmp));
t4=C_mutate(&lf[262],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_15037,a[2]=((C_word)li195),tmp=(C_word)a,a+=3,tmp));
t5=C_mutate(&lf[263],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_15049,a[2]=((C_word)li196),tmp=(C_word)a,a+=3,tmp));
t6=C_mutate(&lf[264],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_15055,a[2]=((C_word)li197),tmp=(C_word)a,a+=3,tmp));
t7=C_mutate(&lf[265],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_15065,a[2]=((C_word)li198),tmp=(C_word)a,a+=3,tmp));
t8=C_mutate(&lf[266],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_15123,a[2]=((C_word)li199),tmp=(C_word)a,a+=3,tmp));
t9=C_mutate(&lf[267],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_15155,a[2]=((C_word)li200),tmp=(C_word)a,a+=3,tmp));
t10=C_mutate(&lf[269],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_15176,a[2]=((C_word)li201),tmp=(C_word)a,a+=3,tmp));
t11=C_mutate(&lf[270],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_15194,a[2]=((C_word)li202),tmp=(C_word)a,a+=3,tmp));
t12=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_15204,a[2]=((C_word*)t0)[2],tmp=(C_word)a,a+=3,tmp);
t13=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_32435,a[2]=((C_word)li508),tmp=(C_word)a,a+=3,tmp);
C_trace("ChickenBridge.scm: 364  ##sys#register-record-printer");
t14=C_retrieve(lf[784]);
((C_proc4)C_retrieve_proc(t14))(4,t14,t12,lf[268],t13);}

/* a32434 in k15009 in k15006 in k14901 in k14850 in k7607 in k7604 in k5838 in k5545 in k5542 in k5538 in k5247 in k5244 in k5241 in k5238 */
static void C_ccall f_32435(C_word c,C_word t0,C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word ab[5],*a=ab;
if(c!=4) C_bad_argc_2(c,4,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr4,(void*)f_32435,4,t0,t1,t2,t3);}
t4=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_32443,a[2]=t2,a[3]=t3,a[4]=t1,tmp=(C_word)a,a+=5,tmp);
C_trace("ChickenBridge.scm: 364  parse-error-string");
f_15176(t4,t2);}

/* k32441 in a32434 in k15009 in k15006 in k14901 in k14850 in k7607 in k7604 in k5838 in k5545 in k5542 in k5538 in k5247 in k5244 in k5241 in k5238 */
static void C_ccall f_32443(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[5],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_32443,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_32447,a[2]=t1,a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],tmp=(C_word)a,a+=5,tmp);
C_trace("ChickenBridge.scm: 364  parse-error-position");
f_15194(t2,((C_word*)t0)[2]);}

/* k32445 in k32441 in a32434 in k15009 in k15006 in k14901 in k14850 in k7607 in k7604 in k5838 in k5545 in k5542 in k5538 in k5247 in k5244 in k5241 in k5238 */
static void C_ccall f_32447(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 364  fprintf");
t2=C_retrieve(lf[781]);
((C_proc6)C_retrieve_proc(t2))(6,t2,((C_word*)t0)[4],((C_word*)t0)[3],lf[785],((C_word*)t0)[2],t1);}

/* k15202 in k15009 in k15006 in k14901 in k14850 in k7607 in k7604 in k5838 in k5545 in k5542 in k5538 in k5247 in k5244 in k5241 in k5238 */
static void C_ccall f_15204(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word ab[21],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_15204,2,t0,t1);}
t2=C_mutate(&lf[271],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_15206,a[2]=((C_word)li203),tmp=(C_word)a,a+=3,tmp));
t3=C_mutate(&lf[273],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_15212,a[2]=((C_word)li204),tmp=(C_word)a,a+=3,tmp));
t4=C_mutate(&lf[274],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_15227,a[2]=((C_word)li205),tmp=(C_word)a,a+=3,tmp));
t5=C_mutate(&lf[275],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_15245,a[2]=((C_word)li206),tmp=(C_word)a,a+=3,tmp));
t6=C_mutate(&lf[276],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_15263,a[2]=((C_word)li207),tmp=(C_word)a,a+=3,tmp));
t7=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_15273,a[2]=((C_word*)t0)[2],tmp=(C_word)a,a+=3,tmp);
t8=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_32409,a[2]=((C_word)li507),tmp=(C_word)a,a+=3,tmp);
C_trace("ChickenBridge.scm: 364  ##sys#register-record-printer");
t9=C_retrieve(lf[784]);
((C_proc4)C_retrieve_proc(t9))(4,t9,t7,lf[272],t8);}

/* a32408 in k15202 in k15009 in k15006 in k14901 in k14850 in k7607 in k7604 in k5838 in k5545 in k5542 in k5538 in k5247 in k5244 in k5241 in k5238 */
static void C_ccall f_32409(C_word c,C_word t0,C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word ab[4],*a=ab;
if(c!=4) C_bad_argc_2(c,4,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr4,(void*)f_32409,4,t0,t1,t2,t3);}
t4=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_32413,a[2]=t3,a[3]=t1,tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 364  parse-unit-type");
f_15227(t4,t2);}

/* k32411 in a32408 in k15202 in k15009 in k15006 in k14901 in k14850 in k7607 in k7604 in k5838 in k5545 in k5542 in k5538 in k5247 in k5244 in k5241 in k5238 */
static void C_ccall f_32413(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[5],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_32413,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_32419,a[2]=t1,a[3]=((C_word*)t0)[2],a[4]=((C_word*)t0)[3],tmp=(C_word)a,a+=5,tmp);
C_trace("ChickenBridge.scm: 364  SalRuleType?");
f_16485(t2,t1);}

/* k32417 in k32411 in a32408 in k15202 in k15009 in k15006 in k14901 in k14850 in k7607 in k7604 in k5838 in k5545 in k5542 in k5538 in k5247 in k5244 in k5241 in k5238 */
static void C_ccall f_32419(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_32419,2,t0,t1);}
if(C_truep(t1)){
t2=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_32426,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],tmp=(C_word)a,a+=4,tmp);
t3=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_32430,a[2]=t2,tmp=(C_word)a,a+=3,tmp);
C_trace("ChickenBridge.scm: 364  get-rule");
f_15013(t3,((C_word*)t0)[2],C_SCHEME_END_OF_LIST);}
else{
C_trace("ChickenBridge.scm: 364  fprintf");
t2=C_retrieve(lf[781]);
((C_proc5)C_retrieve_proc(t2))(5,t2,((C_word*)t0)[4],((C_word*)t0)[3],lf[783],((C_word*)t0)[2]);}}

/* k32428 in k32417 in k32411 in a32408 in k15202 in k15009 in k15006 in k14901 in k14850 in k7607 in k7604 in k5838 in k5545 in k5542 in k5538 in k5247 in k5244 in k5241 in k5238 */
static void C_ccall f_32430(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 364  rule-name");
f_14926(((C_word*)t0)[2],t1);}

/* k32424 in k32417 in k32411 in a32408 in k15202 in k15009 in k15006 in k14901 in k14850 in k7607 in k7604 in k5838 in k5545 in k5542 in k5538 in k5247 in k5244 in k5241 in k5238 */
static void C_ccall f_32426(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 364  fprintf");
t2=C_retrieve(lf[781]);
((C_proc5)C_retrieve_proc(t2))(5,t2,((C_word*)t0)[3],((C_word*)t0)[2],lf[782],t1);}

/* k15271 in k15202 in k15009 in k15006 in k14901 in k14850 in k7607 in k7604 in k5838 in k5545 in k5542 in k5538 in k5247 in k5244 in k5241 in k5238 */
static void C_ccall f_15273(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word t14;
C_word t15;
C_word t16;
C_word t17;
C_word t18;
C_word t19;
C_word t20;
C_word t21;
C_word t22;
C_word t23;
C_word ab[60],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_15273,2,t0,t1);}
t2=C_mutate(&lf[277],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_15275,a[2]=((C_word)li208),tmp=(C_word)a,a+=3,tmp));
t3=C_mutate(&lf[279],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_15291,a[2]=((C_word)li209),tmp=(C_word)a,a+=3,tmp));
t4=C_mutate(&lf[281],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_15323,a[2]=((C_word)li210),tmp=(C_word)a,a+=3,tmp));
t5=C_mutate(&lf[282],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_15335,a[2]=((C_word)li211),tmp=(C_word)a,a+=3,tmp));
t6=C_mutate(&lf[283],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_15345,a[2]=((C_word)li212),tmp=(C_word)a,a+=3,tmp));
t7=C_mutate(&lf[285],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_15363,a[2]=((C_word)li213),tmp=(C_word)a,a+=3,tmp));
t8=C_mutate(&lf[295],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_15396,a[2]=((C_word)li214),tmp=(C_word)a,a+=3,tmp));
t9=C_mutate(&lf[298],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_15604,a[2]=((C_word)li216),tmp=(C_word)a,a+=3,tmp));
t10=C_mutate(&lf[299],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_15612,a[2]=((C_word)li219),tmp=(C_word)a,a+=3,tmp));
t11=lf[300]=C_SCHEME_FALSE;;
t12=C_mutate(&lf[301],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_15716,a[2]=((C_word)li233),tmp=(C_word)a,a+=3,tmp));
t13=C_mutate(&lf[278],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_16335,a[2]=((C_word)li234),tmp=(C_word)a,a+=3,tmp));
t14=C_mutate(&lf[294],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_16383,a[2]=((C_word)li235),tmp=(C_word)a,a+=3,tmp));
t15=C_mutate(&lf[297],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_16485,a[2]=((C_word)li236),tmp=(C_word)a,a+=3,tmp));
t16=C_mutate(&lf[280],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_16497,a[2]=((C_word)li237),tmp=(C_word)a,a+=3,tmp));
t17=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_16518,a[2]=((C_word*)t0)[2],tmp=(C_word)a,a+=3,tmp);
t18=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_32387,a[2]=t17,tmp=(C_word)a,a+=3,tmp);
t19=(C_word)C_a_i_cons(&a,2,C_fix(3072),C_SCHEME_END_OF_LIST);
t20=(C_word)C_a_i_cons(&a,2,C_fix(3328),t19);
t21=(C_word)C_a_i_cons(&a,2,C_fix(2816),t20);
t22=(C_word)C_a_i_cons(&a,2,lf[290],t21);
C_trace("ChickenBridge.scm: 364  make-rule");
f_14905(t18,lf[780],C_fix(25856),t22,C_SCHEME_FALSE,C_SCHEME_FALSE);}

/* k32385 in k15271 in k15202 in k15009 in k15006 in k14901 in k14850 in k7607 in k7604 in k5838 in k5545 in k5542 in k5538 in k5247 in k5244 in k5241 in k5238 */
static void C_ccall f_32387(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 364  hash-table-set!");
t2=C_retrieve(lf[660]);
((C_proc5)C_retrieve_proc(t2))(5,t2,((C_word*)t0)[2],C_retrieve2(lf[256],"*rules*"),C_fix(25856),t1);}

/* k16516 in k15271 in k15202 in k15009 in k15006 in k14901 in k14850 in k7607 in k7604 in k5838 in k5545 in k5542 in k5538 in k5247 in k5244 in k5241 in k5238 */
static void C_ccall f_16518(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word ab[15],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_16518,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_16521,a[2]=((C_word*)t0)[2],tmp=(C_word)a,a+=3,tmp);
t3=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_32367,a[2]=t2,tmp=(C_word)a,a+=3,tmp);
t4=(C_word)C_a_i_cons(&a,2,C_fix(4608),C_SCHEME_END_OF_LIST);
t5=(C_word)C_a_i_cons(&a,2,C_fix(4352),t4);
t6=(C_word)C_a_i_cons(&a,2,lf[290],t5);
C_trace("ChickenBridge.scm: 364  make-rule");
f_14905(t3,lf[779],C_fix(26112),t6,C_SCHEME_FALSE,C_SCHEME_FALSE);}

/* k32365 in k16516 in k15271 in k15202 in k15009 in k15006 in k14901 in k14850 in k7607 in k7604 in k5838 in k5545 in k5542 in k5538 in k5247 in k5244 in k5241 in k5238 */
static void C_ccall f_32367(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 364  hash-table-set!");
t2=C_retrieve(lf[660]);
((C_proc5)C_retrieve_proc(t2))(5,t2,((C_word*)t0)[2],C_retrieve2(lf[256],"*rules*"),C_fix(26112),t1);}

/* k16519 in k16516 in k15271 in k15202 in k15009 in k15006 in k14901 in k14850 in k7607 in k7604 in k5838 in k5545 in k5542 in k5538 in k5247 in k5244 in k5241 in k5238 */
static void C_ccall f_16521(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word ab[30],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_16521,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_16524,a[2]=((C_word*)t0)[2],tmp=(C_word)a,a+=3,tmp);
t3=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_32327,a[2]=t2,tmp=(C_word)a,a+=3,tmp);
t4=(C_word)C_a_i_cons(&a,2,C_fix(4608),C_SCHEME_END_OF_LIST);
t5=(C_word)C_a_i_cons(&a,2,C_fix(4352),t4);
t6=(C_word)C_a_i_cons(&a,2,C_fix(25088),t5);
t7=(C_word)C_a_i_cons(&a,2,C_fix(3840),t6);
t8=(C_word)C_a_i_cons(&a,2,C_fix(3072),t7);
t9=(C_word)C_a_i_cons(&a,2,C_fix(3328),t8);
t10=(C_word)C_a_i_cons(&a,2,C_fix(2816),t9);
t11=(C_word)C_a_i_cons(&a,2,lf[290],t10);
C_trace("ChickenBridge.scm: 364  make-rule");
f_14905(t3,lf[778],C_fix(26368),t11,C_SCHEME_FALSE,C_SCHEME_FALSE);}

/* k32325 in k16519 in k16516 in k15271 in k15202 in k15009 in k15006 in k14901 in k14850 in k7607 in k7604 in k5838 in k5545 in k5542 in k5538 in k5247 in k5244 in k5241 in k5238 */
static void C_ccall f_32327(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 364  hash-table-set!");
t2=C_retrieve(lf[660]);
((C_proc5)C_retrieve_proc(t2))(5,t2,((C_word*)t0)[2],C_retrieve2(lf[256],"*rules*"),C_fix(26368),t1);}

/* k16522 in k16519 in k16516 in k15271 in k15202 in k15009 in k15006 in k14901 in k14850 in k7607 in k7604 in k5838 in k5545 in k5542 in k5538 in k5247 in k5244 in k5241 in k5238 */
static void C_ccall f_16524(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word ab[30],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_16524,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_16527,a[2]=((C_word*)t0)[2],tmp=(C_word)a,a+=3,tmp);
t3=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_32217,a[2]=t2,tmp=(C_word)a,a+=3,tmp);
t4=(C_word)C_a_i_cons(&a,2,C_fix(26880),C_SCHEME_END_OF_LIST);
t5=(C_word)C_a_i_cons(&a,2,lf[226],t4);
t6=(C_word)C_a_i_cons(&a,2,C_fix(1280),C_SCHEME_END_OF_LIST);
t7=(C_word)C_a_i_cons(&a,2,t5,t6);
t8=(C_word)C_a_i_cons(&a,2,C_fix(1024),t7);
t9=(C_word)C_a_i_cons(&a,2,lf[289],t8);
t10=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_32223,a[2]=((C_word)li505),tmp=(C_word)a,a+=3,tmp);
t11=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_32233,a[2]=((C_word)li506),tmp=(C_word)a,a+=3,tmp);
C_trace("ChickenBridge.scm: 364  make-rule");
f_14905(t3,lf[777],C_fix(26624),t9,t10,t11);}

/* a32232 in k16522 in k16519 in k16516 in k15271 in k15202 in k15009 in k15006 in k14901 in k14850 in k7607 in k7604 in k5838 in k5545 in k5542 in k5538 in k5247 in k5244 in k5241 in k5238 */
static void C_ccall f_32233(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4){
C_word tmp;
C_word t5;
C_word t6;
C_word ab[6],*a=ab;
if(c!=5) C_bad_argc_2(c,5,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr5,(void*)f_32233,5,t0,t1,t2,t3,t4);}
t5=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_32237,a[2]=t2,a[3]=t4,a[4]=t3,a[5]=t1,tmp=(C_word)a,a+=6,tmp);
C_trace("ChickenBridge.scm: 364  get-emit-info");
f_15323(t5,lf[771],t3);}

/* k32235 in a32232 in k16522 in k16519 in k16516 in k15271 in k15202 in k15009 in k15006 in k14901 in k14850 in k7607 in k7604 in k5838 in k5545 in k5542 in k5538 in k5247 in k5244 in k5241 in k5238 */
static void C_ccall f_32237(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[6],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_32237,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_32240,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=t1,tmp=(C_word)a,a+=6,tmp);
C_trace("ChickenBridge.scm: 364  parse-unit-parsed");
f_15245(t2,((C_word*)t0)[2]);}

/* k32238 in k32235 in a32232 in k16522 in k16519 in k16516 in k15271 in k15202 in k15009 in k15006 in k14901 in k14850 in k7607 in k7604 in k5838 in k5545 in k5542 in k5538 in k5247 in k5244 in k5241 in k5238 */
static void C_ccall f_32240(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_32240,2,t0,t1);}
t2=((C_word*)t0)[5];
if(C_truep(t2)){
C_trace("ChickenBridge.scm: 364  emit");
f_15363(((C_word*)t0)[4],t1,((C_word*)t0)[3],((C_word*)t0)[2]);}
else{
if(C_truep((C_word)C_i_nullp(t1))){
t3=((C_word*)t0)[4];
((C_proc2)(void*)(*((C_word*)t3+1)))(2,t3,(C_word)C_a_i_list(&a,1,lf[496]));}
else{
t3=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_32258,a[2]=((C_word*)t0)[2],a[3]=t1,a[4]=((C_word*)t0)[3],a[5]=((C_word*)t0)[4],tmp=(C_word)a,a+=6,tmp);
C_trace("ChickenBridge.scm: 364  add-emit-info");
f_15335(t3,lf[771],C_SCHEME_TRUE,((C_word*)t0)[3]);}}}

/* k32256 in k32238 in k32235 in a32232 in k16522 in k16519 in k16516 in k15271 in k15202 in k15009 in k15006 in k14901 in k14850 in k7607 in k7604 in k5838 in k5545 in k5542 in k5538 in k5247 in k5244 in k5241 in k5238 */
static void C_ccall f_32258(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[5],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_32258,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_32261,a[2]=t1,a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],tmp=(C_word)a,a+=5,tmp);
C_trace("ChickenBridge.scm: 364  emit");
f_15363(t2,((C_word*)t0)[3],t1,((C_word*)t0)[2]);}

/* k32259 in k32256 in k32238 in k32235 in a32232 in k16522 in k16519 in k16516 in k15271 in k15202 in k15009 in k15006 in k14901 in k14850 in k7607 in k7604 in k5838 in k5545 in k5542 in k5538 in k5247 in k5244 in k5241 in k5238 */
static void C_ccall f_32261(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[12],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_32261,2,t0,t1);}
t2=C_SCHEME_FALSE;
t3=(*a=C_VECTOR_TYPE|1,a[1]=t2,tmp=(C_word)a,a+=2,tmp);
t4=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_32264,a[2]=((C_word*)t0)[3],a[3]=t3,a[4]=((C_word*)t0)[4],tmp=(C_word)a,a+=5,tmp);
t5=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_32292,a[2]=t4,a[3]=t3,a[4]=t1,tmp=(C_word)a,a+=5,tmp);
C_trace("ChickenBridge.scm: 364  get-emit-info");
f_15323(t5,lf[771],((C_word*)t0)[2]);}

/* k32290 in k32259 in k32256 in k32238 in k32235 in a32232 in k16522 in k16519 in k16516 in k15271 in k15202 in k15009 in k15006 in k14901 in k14850 in k7607 in k7604 in k5838 in k5545 in k5542 in k5538 in k5247 in k5244 in k5241 in k5238 */
static void C_ccall f_32292(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word ab[12],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_32292,2,t0,t1);}
t2=(C_word)C_eqp(t1,lf[772]);
if(C_truep(t2)){
t3=(C_word)C_a_i_list(&a,2,lf[776],((C_word*)t0)[4]);
t4=C_mutate(((C_word *)((C_word*)t0)[3])+1,t3);
t5=((C_word*)t0)[2];
f_32264(t5,t4);}
else{
t3=(C_word)C_a_i_list(&a,2,lf[446],((C_word*)t0)[4]);
t4=C_mutate(((C_word *)((C_word*)t0)[3])+1,t3);
t5=((C_word*)t0)[2];
f_32264(t5,t4);}}

/* k32262 in k32259 in k32256 in k32238 in k32235 in a32232 in k16522 in k16519 in k16516 in k15271 in k15202 in k15009 in k15006 in k14901 in k14850 in k7607 in k7604 in k5838 in k5545 in k5542 in k5538 in k5247 in k5244 in k5241 in k5238 */
static void C_fcall f_32264(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[4],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_32264,NULL,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_32270,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 364  get-emit-info");
f_15323(t2,lf[739],((C_word*)t0)[2]);}

/* k32268 in k32262 in k32259 in k32256 in k32238 in k32235 in a32232 in k16522 in k16519 in k16516 in k15271 in k15202 in k15009 in k15006 in k14901 in k14850 in k7607 in k7604 in k5838 in k5545 in k5542 in k5538 in k5247 in k5244 in k5241 in k5238 */
static void C_ccall f_32270(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[12],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_32270,2,t0,t1);}
if(C_truep(t1)){
t2=(C_word)C_a_i_list(&a,1,lf[496]);
t3=((C_word*)t0)[3];
((C_proc2)(void*)(*((C_word*)t3+1)))(2,t3,(C_word)C_a_i_list(&a,3,lf[20],((C_word*)((C_word*)t0)[2])[1],t2));}
else{
t2=((C_word*)t0)[3];
((C_proc2)(void*)(*((C_word*)t2+1)))(2,t2,((C_word*)((C_word*)t0)[2])[1]);}}

/* a32222 in k16522 in k16519 in k16516 in k15271 in k15202 in k15009 in k15006 in k14901 in k14850 in k7607 in k7604 in k5838 in k5545 in k5542 in k5538 in k5247 in k5244 in k5241 in k5238 */
static void C_ccall f_32223(C_word c,C_word t0,C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word *a;
if(c!=4) C_bad_argc_2(c,4,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr4,(void*)f_32223,4,t0,t1,t2,t3);}
t4=(C_word)C_i_cadr(t2);
C_trace("ChickenBridge.scm: 364  make-parse-unit");
f_15206(t1,C_fix(26624),t4,C_SCHEME_FALSE);}

/* k32215 in k16522 in k16519 in k16516 in k15271 in k15202 in k15009 in k15006 in k14901 in k14850 in k7607 in k7604 in k5838 in k5545 in k5542 in k5538 in k5247 in k5244 in k5241 in k5238 */
static void C_ccall f_32217(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 364  hash-table-set!");
t2=C_retrieve(lf[660]);
((C_proc5)C_retrieve_proc(t2))(5,t2,((C_word*)t0)[2],C_retrieve2(lf[256],"*rules*"),C_fix(26624),t1);}

/* k16525 in k16522 in k16519 in k16516 in k15271 in k15202 in k15009 in k15006 in k14901 in k14850 in k7607 in k7604 in k5838 in k5545 in k5542 in k5538 in k5247 in k5244 in k5241 in k5238 */
static void C_ccall f_16527(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word ab[28],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_16527,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_16530,a[2]=((C_word*)t0)[2],tmp=(C_word)a,a+=3,tmp);
t3=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_32117,a[2]=t2,tmp=(C_word)a,a+=3,tmp);
t4=(C_word)C_a_i_cons(&a,2,C_fix(5632),C_SCHEME_END_OF_LIST);
t5=(C_word)C_a_i_cons(&a,2,C_fix(5376),t4);
t6=(C_word)C_a_i_cons(&a,2,lf[290],t5);
t7=(C_word)C_a_i_cons(&a,2,C_fix(29696),C_SCHEME_END_OF_LIST);
t8=(C_word)C_a_i_cons(&a,2,t6,t7);
t9=(C_word)C_a_i_cons(&a,2,lf[289],t8);
t10=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_32125,a[2]=t9,a[3]=t3,tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 364  simple-unit-parser");
f_15604(t10,C_fix(27648));}

/* k32123 in k16525 in k16522 in k16519 in k16516 in k15271 in k15202 in k15009 in k15006 in k14901 in k14850 in k7607 in k7604 in k5838 in k5545 in k5542 in k5538 in k5247 in k5244 in k5241 in k5238 */
static void C_ccall f_32125(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[3],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_32125,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_32127,a[2]=((C_word)li504),tmp=(C_word)a,a+=3,tmp);
C_trace("ChickenBridge.scm: 364  make-rule");
f_14905(((C_word*)t0)[3],lf[775],C_fix(27648),((C_word*)t0)[2],t1,t2);}

/* a32126 in k32123 in k16525 in k16522 in k16519 in k16516 in k15271 in k15202 in k15009 in k15006 in k14901 in k14850 in k7607 in k7604 in k5838 in k5545 in k5542 in k5538 in k5247 in k5244 in k5241 in k5238 */
static void C_ccall f_32127(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4){
C_word tmp;
C_word t5;
C_word t6;
C_word ab[5],*a=ab;
if(c!=5) C_bad_argc_2(c,5,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr5,(void*)f_32127,5,t0,t1,t2,t3,t4);}
t5=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_32131,a[2]=t4,a[3]=t3,a[4]=t1,tmp=(C_word)a,a+=5,tmp);
C_trace("ChickenBridge.scm: 364  parse-unit-parsed");
f_15245(t5,t2);}

/* k32129 in a32126 in k32123 in k16525 in k16522 in k16519 in k16516 in k15271 in k15202 in k15009 in k15006 in k14901 in k14850 in k7607 in k7604 in k5838 in k5545 in k5542 in k5538 in k5247 in k5244 in k5241 in k5238 */
static void C_ccall f_32131(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[6],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_32131,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_32134,a[2]=((C_word*)t0)[2],a[3]=t1,a[4]=((C_word*)t0)[3],a[5]=((C_word*)t0)[4],tmp=(C_word)a,a+=6,tmp);
t3=(C_word)C_i_car(t1);
C_trace("ChickenBridge.scm: 364  token-unit-type=?");
f_15291(t2,t3,C_fix(5376));}

/* k32132 in k32129 in a32126 in k32123 in k16525 in k16522 in k16519 in k16516 in k15271 in k15202 in k15009 in k15006 in k14901 in k14850 in k7607 in k7604 in k5838 in k5545 in k5542 in k5538 in k5247 in k5244 in k5241 in k5238 */
static void C_ccall f_32134(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_32134,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_32137,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=t1,a[6]=((C_word*)t0)[5],tmp=(C_word)a,a+=7,tmp);
C_trace("ChickenBridge.scm: 364  get-emit-info");
f_15323(t2,lf[771],((C_word*)t0)[4]);}

/* k32135 in k32132 in k32129 in a32126 in k32123 in k16525 in k16522 in k16519 in k16516 in k15271 in k15202 in k15009 in k15006 in k14901 in k14850 in k7607 in k7604 in k5838 in k5545 in k5542 in k5538 in k5247 in k5244 in k5241 in k5238 */
static void C_ccall f_32137(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word ab[15],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_32137,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_32140,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],tmp=(C_word)a,a+=7,tmp);
if(C_truep(t1)){
t3=t2;
f_32140(2,t3,C_SCHEME_UNDEFINED);}
else{
t3=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_32169,a[2]=t2,a[3]=((C_word*)t0)[2],tmp=(C_word)a,a+=4,tmp);
t4=(C_truep(((C_word*)t0)[5])?lf[773]:lf[774]);
t5=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_32177,a[2]=t4,a[3]=t3,tmp=(C_word)a,a+=4,tmp);
t6=(C_word)C_i_car(((C_word*)t0)[3]);
C_trace("ChickenBridge.scm: 364  parse-unit-position");
f_15263(t5,t6);}}

/* k32175 in k32135 in k32132 in k32129 in a32126 in k32123 in k16525 in k16522 in k16519 in k16516 in k15271 in k15202 in k15009 in k15006 in k14901 in k14850 in k7607 in k7604 in k5838 in k5545 in k5542 in k5538 in k5247 in k5244 in k5241 in k5238 */
static void C_ccall f_32177(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 364  make-parse-error");
f_15155(((C_word*)t0)[3],((C_word*)t0)[2],t1);}

/* k32167 in k32135 in k32132 in k32129 in a32126 in k32123 in k16525 in k16522 in k16519 in k16516 in k15271 in k15202 in k15009 in k15006 in k14901 in k14850 in k7607 in k7604 in k5838 in k5545 in k5542 in k5538 in k5247 in k5244 in k5241 in k5238 */
static void C_ccall f_32169(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 364  errf");
t2=((C_word*)t0)[3];
((C_proc3)C_retrieve_proc(t2))(3,t2,((C_word*)t0)[2],t1);}

/* k32138 in k32135 in k32132 in k32129 in a32126 in k32123 in k16525 in k16522 in k16519 in k16516 in k15271 in k15202 in k15009 in k15006 in k14901 in k14850 in k7607 in k7604 in k5838 in k5545 in k5542 in k5538 in k5247 in k5244 in k5241 in k5238 */
static void C_ccall f_32140(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[5],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_32140,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_32143,a[2]=((C_word*)t0)[4],a[3]=((C_word*)t0)[5],a[4]=((C_word*)t0)[6],tmp=(C_word)a,a+=5,tmp);
t3=(C_word)C_i_cadr(((C_word*)t0)[3]);
C_trace("ChickenBridge.scm: 364  emit");
f_15363(t2,t3,((C_word*)t0)[4],((C_word*)t0)[2]);}

/* k32141 in k32138 in k32135 in k32132 in k32129 in a32126 in k32123 in k16525 in k16522 in k16519 in k16516 in k15271 in k15202 in k15009 in k15006 in k14901 in k14850 in k7607 in k7604 in k5838 in k5545 in k5542 in k5538 in k5247 in k5244 in k5241 in k5238 */
static void C_ccall f_32143(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[5],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_32143,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_32146,a[2]=t1,a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],tmp=(C_word)a,a+=5,tmp);
C_trace("ChickenBridge.scm: 364  set-emit-info!");
f_15345(t2,lf[771],lf[772],((C_word*)t0)[2]);}

/* k32144 in k32141 in k32138 in k32135 in k32132 in k32129 in a32126 in k32123 in k16525 in k16522 in k16519 in k16516 in k15271 in k15202 in k15009 in k15006 in k14901 in k14850 in k7607 in k7604 in k5838 in k5545 in k5542 in k5538 in k5247 in k5244 in k5241 in k5238 */
static void C_ccall f_32146(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word ab[12],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_32146,2,t0,t1);}
t2=((C_word*)t0)[4];
((C_proc2)(void*)(*((C_word*)t2+1)))(2,t2,(C_truep(((C_word*)t0)[3])?(C_word)C_a_i_list(&a,2,lf[769],((C_word*)t0)[2]):(C_word)C_a_i_list(&a,2,lf[770],((C_word*)t0)[2])));}

/* k32115 in k16525 in k16522 in k16519 in k16516 in k15271 in k15202 in k15009 in k15006 in k14901 in k14850 in k7607 in k7604 in k5838 in k5545 in k5542 in k5538 in k5247 in k5244 in k5241 in k5238 */
static void C_ccall f_32117(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 364  hash-table-set!");
t2=C_retrieve(lf[660]);
((C_proc5)C_retrieve_proc(t2))(5,t2,((C_word*)t0)[2],C_retrieve2(lf[256],"*rules*"),C_fix(27648),t1);}

/* k16528 in k16525 in k16522 in k16519 in k16516 in k15271 in k15202 in k15009 in k15006 in k14901 in k14850 in k7607 in k7604 in k5838 in k5545 in k5542 in k5538 in k5247 in k5244 in k5241 in k5238 */
static void C_ccall f_16530(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word ab[21],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_16530,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_16533,a[2]=((C_word*)t0)[2],tmp=(C_word)a,a+=3,tmp);
t3=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_32089,a[2]=t2,tmp=(C_word)a,a+=3,tmp);
t4=(C_word)C_a_i_cons(&a,2,C_fix(27648),C_SCHEME_END_OF_LIST);
t5=(C_word)C_a_i_cons(&a,2,C_fix(2304),t4);
t6=(C_word)C_a_i_cons(&a,2,C_fix(26624),t5);
t7=(C_word)C_a_i_cons(&a,2,C_fix(26368),t6);
t8=(C_word)C_a_i_cons(&a,2,lf[290],t7);
C_trace("ChickenBridge.scm: 364  make-rule");
f_14905(t3,lf[768],C_fix(26880),t8,C_SCHEME_FALSE,C_SCHEME_FALSE);}

/* k32087 in k16528 in k16525 in k16522 in k16519 in k16516 in k15271 in k15202 in k15009 in k15006 in k14901 in k14850 in k7607 in k7604 in k5838 in k5545 in k5542 in k5538 in k5247 in k5244 in k5241 in k5238 */
static void C_ccall f_32089(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 364  hash-table-set!");
t2=C_retrieve(lf[660]);
((C_proc5)C_retrieve_proc(t2))(5,t2,((C_word*)t0)[2],C_retrieve2(lf[256],"*rules*"),C_fix(26880),t1);}

/* k16531 in k16528 in k16525 in k16522 in k16519 in k16516 in k15271 in k15202 in k15009 in k15006 in k14901 in k14850 in k7607 in k7604 in k5838 in k5545 in k5542 in k5538 in k5247 in k5244 in k5241 in k5238 */
static void C_ccall f_16533(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word ab[27],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_16533,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_16536,a[2]=((C_word*)t0)[2],tmp=(C_word)a,a+=3,tmp);
t3=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_32029,a[2]=t2,tmp=(C_word)a,a+=3,tmp);
t4=(C_word)C_a_i_cons(&a,2,C_fix(1792),C_SCHEME_END_OF_LIST);
t5=(C_word)C_a_i_cons(&a,2,C_fix(29696),t4);
t6=(C_word)C_a_i_cons(&a,2,C_fix(1536),t5);
t7=(C_word)C_a_i_cons(&a,2,C_fix(25088),t6);
t8=(C_word)C_a_i_cons(&a,2,lf[289],t7);
t9=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_32035,a[2]=((C_word)li502),tmp=(C_word)a,a+=3,tmp);
t10=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_32053,a[2]=((C_word)li503),tmp=(C_word)a,a+=3,tmp);
C_trace("ChickenBridge.scm: 364  make-rule");
f_14905(t3,lf[767],C_fix(27136),t8,t9,t10);}

/* a32052 in k16531 in k16528 in k16525 in k16522 in k16519 in k16516 in k15271 in k15202 in k15009 in k15006 in k14901 in k14850 in k7607 in k7604 in k5838 in k5545 in k5542 in k5538 in k5247 in k5244 in k5241 in k5238 */
static void C_ccall f_32053(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4){
C_word tmp;
C_word t5;
C_word t6;
C_word t7;
C_word ab[8],*a=ab;
if(c!=5) C_bad_argc_2(c,5,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr5,(void*)f_32053,5,t0,t1,t2,t3,t4);}
t5=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_32061,a[2]=t1,tmp=(C_word)a,a+=3,tmp);
t6=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_32065,a[2]=t4,a[3]=t3,a[4]=t5,tmp=(C_word)a,a+=5,tmp);
C_trace("ChickenBridge.scm: 364  parse-unit-parsed");
f_15245(t6,t2);}

/* k32063 in a32052 in k16531 in k16528 in k16525 in k16522 in k16519 in k16516 in k15271 in k15202 in k15009 in k15006 in k14901 in k14850 in k7607 in k7604 in k5838 in k5545 in k5542 in k5538 in k5247 in k5244 in k5241 in k5238 */
static void C_ccall f_32065(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 364  emit");
f_15363(((C_word*)t0)[4],t1,((C_word*)t0)[3],((C_word*)t0)[2]);}

/* k32059 in a32052 in k16531 in k16528 in k16525 in k16522 in k16519 in k16516 in k15271 in k15202 in k15009 in k15006 in k14901 in k14850 in k7607 in k7604 in k5838 in k5545 in k5542 in k5538 in k5247 in k5244 in k5241 in k5238 */
static void C_ccall f_32061(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word ab[3],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_32061,2,t0,t1);}
t2=((C_word*)t0)[2];
((C_proc2)(void*)(*((C_word*)t2+1)))(2,t2,(C_word)C_a_i_cons(&a,2,lf[735],t1));}

/* a32034 in k16531 in k16528 in k16525 in k16522 in k16519 in k16516 in k15271 in k15202 in k15009 in k15006 in k14901 in k14850 in k7607 in k7604 in k5838 in k5545 in k5542 in k5538 in k5247 in k5244 in k5241 in k5238 */
static void C_ccall f_32035(C_word c,C_word t0,C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word ab[6],*a=ab;
if(c!=4) C_bad_argc_2(c,4,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr4,(void*)f_32035,4,t0,t1,t2,t3);}
t4=(C_word)C_i_car(t2);
t5=(C_word)C_i_caddr(t2);
t6=(C_word)C_a_i_list(&a,2,t4,t5);
C_trace("ChickenBridge.scm: 364  make-parse-unit");
f_15206(t1,C_fix(27136),t6,C_SCHEME_FALSE);}

/* k32027 in k16531 in k16528 in k16525 in k16522 in k16519 in k16516 in k15271 in k15202 in k15009 in k15006 in k14901 in k14850 in k7607 in k7604 in k5838 in k5545 in k5542 in k5538 in k5247 in k5244 in k5241 in k5238 */
static void C_ccall f_32029(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 364  hash-table-set!");
t2=C_retrieve(lf[660]);
((C_proc5)C_retrieve_proc(t2))(5,t2,((C_word*)t0)[2],C_retrieve2(lf[256],"*rules*"),C_fix(27136),t1);}

/* k16534 in k16531 in k16528 in k16525 in k16522 in k16519 in k16516 in k15271 in k15202 in k15009 in k15006 in k14901 in k14850 in k7607 in k7604 in k5838 in k5545 in k5542 in k5538 in k5247 in k5244 in k5241 in k5238 */
static void C_ccall f_16536(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word t14;
C_word t15;
C_word t16;
C_word t17;
C_word ab[45],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_16536,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_16539,a[2]=((C_word*)t0)[2],tmp=(C_word)a,a+=3,tmp);
t3=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_31906,a[2]=t2,tmp=(C_word)a,a+=3,tmp);
t4=(C_word)C_a_i_cons(&a,2,C_fix(29696),C_SCHEME_END_OF_LIST);
t5=(C_word)C_a_i_cons(&a,2,C_fix(256),t4);
t6=(C_word)C_a_i_cons(&a,2,lf[304],t5);
t7=(C_word)C_a_i_cons(&a,2,C_fix(768),C_SCHEME_END_OF_LIST);
t8=(C_word)C_a_i_cons(&a,2,t6,t7);
t9=(C_word)C_a_i_cons(&a,2,C_fix(29696),t8);
t10=(C_word)C_a_i_cons(&a,2,C_fix(256),t9);
t11=(C_word)C_a_i_cons(&a,2,C_fix(29696),t10);
t12=(C_word)C_a_i_cons(&a,2,C_fix(512),t11);
t13=(C_word)C_a_i_cons(&a,2,C_fix(5120),t12);
t14=(C_word)C_a_i_cons(&a,2,lf[289],t13);
t15=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_31912,a[2]=((C_word)li500),tmp=(C_word)a,a+=3,tmp);
t16=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_31943,a[2]=((C_word)li501),tmp=(C_word)a,a+=3,tmp);
C_trace("ChickenBridge.scm: 364  make-rule");
f_14905(t3,lf[766],C_fix(27392),t14,t15,t16);}

/* a31942 in k16534 in k16531 in k16528 in k16525 in k16522 in k16519 in k16516 in k15271 in k15202 in k15009 in k15006 in k14901 in k14850 in k7607 in k7604 in k5838 in k5545 in k5542 in k5538 in k5247 in k5244 in k5241 in k5238 */
static void C_ccall f_31943(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4){
C_word tmp;
C_word t5;
C_word t6;
C_word ab[5],*a=ab;
if(c!=5) C_bad_argc_2(c,5,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr5,(void*)f_31943,5,t0,t1,t2,t3,t4);}
t5=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_31947,a[2]=t4,a[3]=t3,a[4]=t1,tmp=(C_word)a,a+=5,tmp);
C_trace("ChickenBridge.scm: 364  parse-unit-parsed");
f_15245(t5,t2);}

/* k31945 in a31942 in k16534 in k16531 in k16528 in k16525 in k16522 in k16519 in k16516 in k15271 in k15202 in k15009 in k15006 in k14901 in k14850 in k7607 in k7604 in k5838 in k5545 in k5542 in k5538 in k5247 in k5244 in k5241 in k5238 */
static void C_ccall f_31947(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[6],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_31947,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_31950,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=t1,tmp=(C_word)a,a+=6,tmp);
t3=(C_word)C_i_car(t1);
C_trace("ChickenBridge.scm: 364  emit");
f_15363(t2,t3,((C_word*)t0)[3],((C_word*)t0)[2]);}

/* k31948 in k31945 in a31942 in k16534 in k16531 in k16528 in k16525 in k16522 in k16519 in k16516 in k15271 in k15202 in k15009 in k15006 in k14901 in k14850 in k7607 in k7604 in k5838 in k5545 in k5542 in k5538 in k5247 in k5244 in k5241 in k5238 */
static void C_ccall f_31950(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_31950,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_31953,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=t1,a[5]=((C_word*)t0)[4],a[6]=((C_word*)t0)[5],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cadr(((C_word*)t0)[5]);
C_trace("ChickenBridge.scm: 364  emit");
f_15363(t2,t3,((C_word*)t0)[3],((C_word*)t0)[2]);}

/* k31951 in k31948 in k31945 in a31942 in k16534 in k16531 in k16528 in k16525 in k16522 in k16519 in k16516 in k15271 in k15202 in k15009 in k15006 in k14901 in k14850 in k7607 in k7604 in k5838 in k5545 in k5542 in k5538 in k5247 in k5244 in k5241 in k5238 */
static void C_ccall f_31953(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[17],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_31953,2,t0,t1);}
t2=(C_word)C_i_caddr(((C_word*)t0)[6]);
if(C_truep(t2)){
t3=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_31966,a[2]=t1,a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],tmp=(C_word)a,a+=5,tmp);
C_trace("ChickenBridge.scm: 364  emit");
f_15363(t3,t2,((C_word*)t0)[3],((C_word*)t0)[2]);}
else{
t3=((C_word*)t0)[5];
((C_proc2)(void*)(*((C_word*)t3+1)))(2,t3,(C_word)C_a_i_list(&a,4,lf[22],((C_word*)t0)[4],t1,C_SCHEME_FALSE));}}

/* k31964 in k31951 in k31948 in k31945 in a31942 in k16534 in k16531 in k16528 in k16525 in k16522 in k16519 in k16516 in k15271 in k15202 in k15009 in k15006 in k14901 in k14850 in k7607 in k7604 in k5838 in k5545 in k5542 in k5538 in k5247 in k5244 in k5241 in k5238 */
static void C_ccall f_31966(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word ab[12],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_31966,2,t0,t1);}
t2=((C_word*)t0)[4];
((C_proc2)(void*)(*((C_word*)t2+1)))(2,t2,(C_word)C_a_i_list(&a,4,lf[22],((C_word*)t0)[3],((C_word*)t0)[2],t1));}

/* a31911 in k16534 in k16531 in k16528 in k16525 in k16522 in k16519 in k16516 in k15271 in k15202 in k15009 in k15006 in k14901 in k14850 in k7607 in k7604 in k5838 in k5545 in k5542 in k5538 in k5247 in k5244 in k5241 in k5238 */
static void C_ccall f_31912(C_word c,C_word t0,C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word ab[4],*a=ab;
if(c!=4) C_bad_argc_2(c,4,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr4,(void*)f_31912,4,t0,t1,t2,t3);}
t4=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_31916,a[2]=t1,a[3]=t2,tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 364  sixth");
t5=C_retrieve(lf[56]);
((C_proc3)C_retrieve_proc(t5))(3,t5,t4,t2);}

/* k31914 in a31911 in k16534 in k16531 in k16528 in k16525 in k16522 in k16519 in k16516 in k15271 in k15202 in k15009 in k15006 in k14901 in k14850 in k7607 in k7604 in k5838 in k5545 in k5542 in k5538 in k5247 in k5244 in k5241 in k5238 */
static void C_ccall f_31916(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[5],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_31916,2,t0,t1);}
t2=(C_word)C_i_caddr(((C_word*)t0)[3]);
t3=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_31931,a[2]=((C_word*)t0)[2],a[3]=t2,a[4]=t1,tmp=(C_word)a,a+=5,tmp);
C_trace("ChickenBridge.scm: 364  fifth");
t4=C_retrieve(lf[55]);
((C_proc3)C_retrieve_proc(t4))(3,t4,t3,((C_word*)t0)[3]);}

/* k31929 in k31914 in a31911 in k16534 in k16531 in k16528 in k16525 in k16522 in k16519 in k16516 in k15271 in k15202 in k15009 in k15006 in k14901 in k14850 in k7607 in k7604 in k5838 in k5545 in k5542 in k5538 in k5247 in k5244 in k5241 in k5238 */
static void C_ccall f_31931(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_31931,2,t0,t1);}
t2=(C_word)C_i_pairp(((C_word*)t0)[4]);
t3=(C_truep(t2)?(C_word)C_i_cadr(((C_word*)t0)[4]):C_SCHEME_FALSE);
t4=(C_word)C_a_i_list(&a,3,((C_word*)t0)[3],t1,t3);
C_trace("ChickenBridge.scm: 364  make-parse-unit");
f_15206(((C_word*)t0)[2],C_fix(27392),t4,C_SCHEME_FALSE);}

/* k31904 in k16534 in k16531 in k16528 in k16525 in k16522 in k16519 in k16516 in k15271 in k15202 in k15009 in k15006 in k14901 in k14850 in k7607 in k7604 in k5838 in k5545 in k5542 in k5538 in k5247 in k5244 in k5241 in k5238 */
static void C_ccall f_31906(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 364  hash-table-set!");
t2=C_retrieve(lf[660]);
((C_proc5)C_retrieve_proc(t2))(5,t2,((C_word*)t0)[2],C_retrieve2(lf[256],"*rules*"),C_fix(27392),t1);}

/* k16537 in k16534 in k16531 in k16528 in k16525 in k16522 in k16519 in k16516 in k15271 in k15202 in k15009 in k15006 in k14901 in k14850 in k7607 in k7604 in k5838 in k5545 in k5542 in k5538 in k5247 in k5244 in k5241 in k5238 */
static void C_ccall f_16539(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word t14;
C_word t15;
C_word ab[39],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_16539,2,t0,t1);}
t2=C_mutate(&lf[309],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_16541,a[2]=((C_word)li239),tmp=(C_word)a,a+=3,tmp));
t3=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_16595,a[2]=((C_word*)t0)[2],tmp=(C_word)a,a+=3,tmp);
t4=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_31786,a[2]=t3,tmp=(C_word)a,a+=3,tmp);
t5=(C_word)C_a_i_cons(&a,2,C_fix(29696),C_SCHEME_END_OF_LIST);
t6=(C_word)C_a_i_cons(&a,2,C_fix(256),t5);
t7=(C_word)C_a_i_cons(&a,2,lf[305],t6);
t8=(C_word)C_a_i_cons(&a,2,t7,C_SCHEME_END_OF_LIST);
t9=(C_word)C_a_i_cons(&a,2,C_fix(29696),t8);
t10=(C_word)C_a_i_cons(&a,2,lf[289],t9);
t11=(C_word)C_a_i_cons(&a,2,C_fix(29696),C_SCHEME_END_OF_LIST);
t12=(C_word)C_a_i_cons(&a,2,t10,t11);
t13=(C_word)C_a_i_cons(&a,2,lf[290],t12);
t14=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_31792,a[2]=((C_word)li499),tmp=(C_word)a,a+=3,tmp);
C_trace("ChickenBridge.scm: 364  make-rule");
f_14905(t4,lf[765],C_fix(28416),t13,t14,C_SCHEME_FALSE);}

/* a31791 in k16537 in k16534 in k16531 in k16528 in k16525 in k16522 in k16519 in k16516 in k15271 in k15202 in k15009 in k15006 in k14901 in k14850 in k7607 in k7604 in k5838 in k5545 in k5542 in k5538 in k5247 in k5244 in k5241 in k5238 */
static void C_ccall f_31792(C_word c,C_word t0,C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word ab[7],*a=ab;
if(c!=4) C_bad_argc_2(c,4,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr4,(void*)f_31792,4,t0,t1,t2,t3);}
if(C_truep((C_word)C_i_pairp(t2))){
t4=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_31808,a[2]=t1,a[3]=t2,tmp=(C_word)a,a+=4,tmp);
t5=(C_word)C_i_cdr(t2);
if(C_truep((C_word)C_i_pairp(t5))){
t6=(C_word)C_i_cadr(t2);
if(C_truep((C_word)C_i_pairp(t6))){
t7=(C_word)C_i_cadr(t2);
t8=(C_word)C_i_car(t7);
C_trace("ChickenBridge.scm: 364  token-unit-type=?");
f_15291(t4,t8,C_fix(256));}
else{
t7=t4;
f_31808(2,t7,C_SCHEME_FALSE);}}
else{
t6=t4;
f_31808(2,t6,C_SCHEME_FALSE);}}
else{
t4=t1;
((C_proc2)(void*)(*((C_word*)t4+1)))(2,t4,(C_word)C_a_i_list(&a,1,t2));}}

/* k31806 in a31791 in k16537 in k16534 in k16531 in k16528 in k16525 in k16522 in k16519 in k16516 in k15271 in k15202 in k15009 in k15006 in k14901 in k14850 in k7607 in k7604 in k5838 in k5545 in k5542 in k5538 in k5247 in k5244 in k5241 in k5238 */
static void C_ccall f_31808(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_31808,2,t0,t1);}
if(C_truep(t1)){
t2=(C_word)C_i_car(((C_word*)t0)[3]);
t3=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_31819,a[2]=t2,a[3]=((C_word*)t0)[2],tmp=(C_word)a,a+=4,tmp);
t4=(C_word)C_i_cadr(((C_word*)t0)[3]);
C_trace("ChickenBridge.scm: 364  remove-token-type");
f_16541(t3,t4,C_fix(256));}
else{
t2=((C_word*)t0)[2];
((C_proc2)(void*)(*((C_word*)t2+1)))(2,t2,(C_word)C_a_i_list(&a,1,((C_word*)t0)[3]));}}

/* k31817 in k31806 in a31791 in k16537 in k16534 in k16531 in k16528 in k16525 in k16522 in k16519 in k16516 in k15271 in k15202 in k15009 in k15006 in k14901 in k14850 in k7607 in k7604 in k5838 in k5545 in k5542 in k5538 in k5247 in k5244 in k5241 in k5238 */
static void C_ccall f_31819(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word ab[3],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_31819,2,t0,t1);}
t2=((C_word*)t0)[3];
((C_proc2)(void*)(*((C_word*)t2+1)))(2,t2,(C_word)C_a_i_cons(&a,2,((C_word*)t0)[2],t1));}

/* k31784 in k16537 in k16534 in k16531 in k16528 in k16525 in k16522 in k16519 in k16516 in k15271 in k15202 in k15009 in k15006 in k14901 in k14850 in k7607 in k7604 in k5838 in k5545 in k5542 in k5538 in k5247 in k5244 in k5241 in k5238 */
static void C_ccall f_31786(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 364  hash-table-set!");
t2=C_retrieve(lf[660]);
((C_proc5)C_retrieve_proc(t2))(5,t2,((C_word*)t0)[2],C_retrieve2(lf[256],"*rules*"),C_fix(28416),t1);}

/* k16593 in k16537 in k16534 in k16531 in k16528 in k16525 in k16522 in k16519 in k16516 in k15271 in k15202 in k15009 in k15006 in k14901 in k14850 in k7607 in k7604 in k5838 in k5545 in k5542 in k5538 in k5247 in k5244 in k5241 in k5238 */
static void C_ccall f_16595(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word t14;
C_word t15;
C_word t16;
C_word t17;
C_word t18;
C_word t19;
C_word ab[51],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_16595,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_16598,a[2]=((C_word*)t0)[2],tmp=(C_word)a,a+=3,tmp);
t3=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_31647,a[2]=t2,tmp=(C_word)a,a+=3,tmp);
t4=(C_word)C_a_i_cons(&a,2,C_fix(29696),C_SCHEME_END_OF_LIST);
t5=(C_word)C_a_i_cons(&a,2,C_fix(6144),t4);
t6=(C_word)C_a_i_cons(&a,2,C_fix(256),t5);
t7=(C_word)C_a_i_cons(&a,2,lf[305],t6);
t8=(C_word)C_a_i_cons(&a,2,t7,C_SCHEME_END_OF_LIST);
t9=(C_word)C_a_i_cons(&a,2,C_fix(29696),t8);
t10=(C_word)C_a_i_cons(&a,2,C_fix(6144),t9);
t11=(C_word)C_a_i_cons(&a,2,lf[289],t10);
t12=(C_word)C_a_i_cons(&a,2,C_fix(29696),C_SCHEME_END_OF_LIST);
t13=(C_word)C_a_i_cons(&a,2,C_fix(6144),t12);
t14=(C_word)C_a_i_cons(&a,2,lf[289],t13);
t15=(C_word)C_a_i_cons(&a,2,t14,C_SCHEME_END_OF_LIST);
t16=(C_word)C_a_i_cons(&a,2,t11,t15);
t17=(C_word)C_a_i_cons(&a,2,lf[290],t16);
t18=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_31653,a[2]=((C_word)li498),tmp=(C_word)a,a+=3,tmp);
C_trace("ChickenBridge.scm: 364  make-rule");
f_14905(t3,lf[764],C_fix(28672),t17,t18,C_SCHEME_FALSE);}

/* a31652 in k16593 in k16537 in k16534 in k16531 in k16528 in k16525 in k16522 in k16519 in k16516 in k15271 in k15202 in k15009 in k15006 in k14901 in k14850 in k7607 in k7604 in k5838 in k5545 in k5542 in k5538 in k5247 in k5244 in k5241 in k5238 */
static void C_ccall f_31653(C_word c,C_word t0,C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word ab[9],*a=ab;
if(c!=4) C_bad_argc_2(c,4,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr4,(void*)f_31653,4,t0,t1,t2,t3);}
t4=(C_word)C_i_car(t2);
t5=(C_word)C_i_cadr(t2);
t6=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_31673,a[2]=t4,a[3]=t1,a[4]=t5,tmp=(C_word)a,a+=5,tmp);
t7=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_31676,a[2]=t6,a[3]=t2,tmp=(C_word)a,a+=4,tmp);
t8=(C_word)C_i_cddr(t2);
if(C_truep((C_word)C_i_pairp(t8))){
t9=(C_word)C_i_caddr(t2);
if(C_truep((C_word)C_i_pairp(t9))){
t10=(C_word)C_i_caddr(t2);
t11=(C_word)C_i_car(t10);
C_trace("ChickenBridge.scm: 364  token-unit-type=?");
f_15291(t7,t11,C_fix(256));}
else{
t10=t7;
f_31676(2,t10,C_SCHEME_FALSE);}}
else{
t9=t7;
f_31676(2,t9,C_SCHEME_FALSE);}}

/* k31674 in a31652 in k16593 in k16537 in k16534 in k16531 in k16528 in k16525 in k16522 in k16519 in k16516 in k15271 in k15202 in k15009 in k15006 in k14901 in k14850 in k7607 in k7604 in k5838 in k5545 in k5542 in k5538 in k5247 in k5244 in k5241 in k5238 */
static void C_ccall f_31676(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word *a;
if(C_truep(t1)){
t2=(C_word)C_i_caddr(((C_word*)t0)[3]);
C_trace("ChickenBridge.scm: 364  remove-token-type");
f_16541(((C_word*)t0)[2],t2,C_fix(256));}
else{
t2=((C_word*)t0)[2];
f_31673(2,t2,C_SCHEME_END_OF_LIST);}}

/* k31671 in a31652 in k16593 in k16537 in k16534 in k16531 in k16528 in k16525 in k16522 in k16519 in k16516 in k15271 in k15202 in k15009 in k15006 in k14901 in k14850 in k7607 in k7604 in k5838 in k5545 in k5542 in k5538 in k5247 in k5244 in k5241 in k5238 */
static void C_ccall f_31673(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[6],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_31673,2,t0,t1);}
t2=(C_word)C_a_i_cons(&a,2,((C_word*)t0)[4],t1);
t3=((C_word*)t0)[3];
((C_proc2)(void*)(*((C_word*)t3+1)))(2,t3,(C_word)C_a_i_cons(&a,2,((C_word*)t0)[2],t2));}

/* k31645 in k16593 in k16537 in k16534 in k16531 in k16528 in k16525 in k16522 in k16519 in k16516 in k15271 in k15202 in k15009 in k15006 in k14901 in k14850 in k7607 in k7604 in k5838 in k5545 in k5542 in k5538 in k5247 in k5244 in k5241 in k5238 */
static void C_ccall f_31647(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 364  hash-table-set!");
t2=C_retrieve(lf[660]);
((C_proc5)C_retrieve_proc(t2))(5,t2,((C_word*)t0)[2],C_retrieve2(lf[256],"*rules*"),C_fix(28672),t1);}

/* k16596 in k16593 in k16537 in k16534 in k16531 in k16528 in k16525 in k16522 in k16519 in k16516 in k15271 in k15202 in k15009 in k15006 in k14901 in k14850 in k7607 in k7604 in k5838 in k5545 in k5542 in k5538 in k5247 in k5244 in k5241 in k5238 */
static void C_ccall f_16598(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word t14;
C_word t15;
C_word t16;
C_word t17;
C_word t18;
C_word t19;
C_word t20;
C_word t21;
C_word t22;
C_word t23;
C_word t24;
C_word t25;
C_word t26;
C_word t27;
C_word ab[75],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_16598,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_16601,a[2]=((C_word*)t0)[2],tmp=(C_word)a,a+=3,tmp);
t3=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_31495,a[2]=t2,tmp=(C_word)a,a+=3,tmp);
t4=(C_word)C_a_i_cons(&a,2,C_fix(768),C_SCHEME_END_OF_LIST);
t5=(C_word)C_a_i_cons(&a,2,C_fix(512),t4);
t6=(C_word)C_a_i_cons(&a,2,lf[289],t5);
t7=(C_word)C_a_i_cons(&a,2,C_fix(768),C_SCHEME_END_OF_LIST);
t8=(C_word)C_a_i_cons(&a,2,C_fix(28416),t7);
t9=(C_word)C_a_i_cons(&a,2,C_fix(512),t8);
t10=(C_word)C_a_i_cons(&a,2,lf[289],t9);
t11=(C_word)C_a_i_cons(&a,2,C_fix(768),C_SCHEME_END_OF_LIST);
t12=(C_word)C_a_i_cons(&a,2,C_fix(28672),t11);
t13=(C_word)C_a_i_cons(&a,2,C_fix(512),t12);
t14=(C_word)C_a_i_cons(&a,2,lf[289],t13);
t15=(C_word)C_a_i_cons(&a,2,C_fix(768),C_SCHEME_END_OF_LIST);
t16=(C_word)C_a_i_cons(&a,2,C_fix(28672),t15);
t17=(C_word)C_a_i_cons(&a,2,C_fix(256),t16);
t18=(C_word)C_a_i_cons(&a,2,C_fix(28416),t17);
t19=(C_word)C_a_i_cons(&a,2,C_fix(512),t18);
t20=(C_word)C_a_i_cons(&a,2,lf[289],t19);
t21=(C_word)C_a_i_cons(&a,2,t20,C_SCHEME_END_OF_LIST);
t22=(C_word)C_a_i_cons(&a,2,t14,t21);
t23=(C_word)C_a_i_cons(&a,2,t10,t22);
t24=(C_word)C_a_i_cons(&a,2,t6,t23);
t25=(C_word)C_a_i_cons(&a,2,lf[290],t24);
t26=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_31501,a[2]=((C_word)li497),tmp=(C_word)a,a+=3,tmp);
C_trace("ChickenBridge.scm: 364  make-rule");
f_14905(t3,lf[763],C_fix(28160),t25,t26,C_SCHEME_FALSE);}

/* a31500 in k16596 in k16593 in k16537 in k16534 in k16531 in k16528 in k16525 in k16522 in k16519 in k16516 in k15271 in k15202 in k15009 in k15006 in k14901 in k14850 in k7607 in k7604 in k5838 in k5545 in k5542 in k5538 in k5247 in k5244 in k5241 in k5238 */
static void C_ccall f_31501(C_word c,C_word t0,C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word ab[7],*a=ab;
if(c!=4) C_bad_argc_2(c,4,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr4,(void*)f_31501,4,t0,t1,t2,t3);}
t4=(*a=C_VECTOR_TYPE|1,a[1]=t2,tmp=(C_word)a,a+=2,tmp);
t5=(C_word)C_i_cdr(((C_word*)t4)[1]);
t6=C_set_block_item(t4,0,t5);
t7=(C_word)C_i_car(((C_word*)t4)[1]);
t8=(C_word)C_i_cdr(((C_word*)t4)[1]);
t9=C_set_block_item(t4,0,t8);
t10=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_31519,a[2]=t7,a[3]=t4,a[4]=t1,tmp=(C_word)a,a+=5,tmp);
C_trace("ChickenBridge.scm: 364  token-unit-type=?");
f_15291(t10,t7,C_fix(768));}

/* k31517 in a31500 in k16596 in k16593 in k16537 in k16534 in k16531 in k16528 in k16525 in k16522 in k16519 in k16516 in k15271 in k15202 in k15009 in k15006 in k14901 in k14850 in k7607 in k7604 in k5838 in k5545 in k5542 in k5538 in k5247 in k5244 in k5241 in k5238 */
static void C_ccall f_31519(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[5],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_31519,2,t0,t1);}
if(C_truep(t1)){
t2=((C_word*)t0)[4];
((C_proc2)(void*)(*((C_word*)t2+1)))(2,t2,C_SCHEME_END_OF_LIST);}
else{
t2=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_31528,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[3],tmp=(C_word)a,a+=5,tmp);
t3=(C_word)C_i_car(((C_word*)((C_word*)t0)[3])[1]);
C_trace("ChickenBridge.scm: 364  token-unit-type=?");
f_15291(t2,t3,C_fix(256));}}

/* k31526 in k31517 in a31500 in k16596 in k16593 in k16537 in k16534 in k16531 in k16528 in k16525 in k16522 in k16519 in k16516 in k15271 in k15202 in k15009 in k15006 in k14901 in k14850 in k7607 in k7604 in k5838 in k5545 in k5542 in k5538 in k5247 in k5244 in k5241 in k5238 */
static void C_ccall f_31528(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word *a;
if(C_truep(t1)){
t2=(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]);
C_trace("ChickenBridge.scm: 364  append");
t3=*((C_word*)lf[20]+1);
((C_proc4)C_retrieve_proc(t3))(4,t3,((C_word*)t0)[3],((C_word*)t0)[2],t2);}
else{
t2=((C_word*)t0)[3];
((C_proc2)(void*)(*((C_word*)t2+1)))(2,t2,((C_word*)t0)[2]);}}

/* k31493 in k16596 in k16593 in k16537 in k16534 in k16531 in k16528 in k16525 in k16522 in k16519 in k16516 in k15271 in k15202 in k15009 in k15006 in k14901 in k14850 in k7607 in k7604 in k5838 in k5545 in k5542 in k5538 in k5247 in k5244 in k5241 in k5238 */
static void C_ccall f_31495(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 364  hash-table-set!");
t2=C_retrieve(lf[660]);
((C_proc5)C_retrieve_proc(t2))(5,t2,((C_word*)t0)[2],C_retrieve2(lf[256],"*rules*"),C_fix(28160),t1);}

/* k16599 in k16596 in k16593 in k16537 in k16534 in k16531 in k16528 in k16525 in k16522 in k16519 in k16516 in k15271 in k15202 in k15009 in k15006 in k14901 in k14850 in k7607 in k7604 in k5838 in k5545 in k5542 in k5538 in k5247 in k5244 in k5241 in k5238 */
static void C_ccall f_16601(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word ab[21],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_16601,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_16604,a[2]=((C_word*)t0)[2],tmp=(C_word)a,a+=3,tmp);
t3=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_31424,a[2]=t2,tmp=(C_word)a,a+=3,tmp);
t4=(C_word)C_a_i_cons(&a,2,C_fix(28160),C_SCHEME_END_OF_LIST);
t5=(C_word)C_a_i_cons(&a,2,C_fix(25088),t4);
t6=(C_word)C_a_i_cons(&a,2,lf[289],t5);
t7=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_31430,a[2]=((C_word)li495),tmp=(C_word)a,a+=3,tmp);
t8=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_31448,a[2]=((C_word)li496),tmp=(C_word)a,a+=3,tmp);
C_trace("ChickenBridge.scm: 364  make-rule");
f_14905(t3,lf[762],C_fix(27904),t6,t7,t8);}

/* a31447 in k16599 in k16596 in k16593 in k16537 in k16534 in k16531 in k16528 in k16525 in k16522 in k16519 in k16516 in k15271 in k15202 in k15009 in k15006 in k14901 in k14850 in k7607 in k7604 in k5838 in k5545 in k5542 in k5538 in k5247 in k5244 in k5241 in k5238 */
static void C_ccall f_31448(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4){
C_word tmp;
C_word t5;
C_word t6;
C_word ab[5],*a=ab;
if(c!=5) C_bad_argc_2(c,5,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr5,(void*)f_31448,5,t0,t1,t2,t3,t4);}
t5=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_31452,a[2]=t4,a[3]=t3,a[4]=t1,tmp=(C_word)a,a+=5,tmp);
C_trace("ChickenBridge.scm: 364  parse-unit-parsed");
f_15245(t5,t2);}

/* k31450 in a31447 in k16599 in k16596 in k16593 in k16537 in k16534 in k16531 in k16528 in k16525 in k16522 in k16519 in k16516 in k15271 in k15202 in k15009 in k15006 in k14901 in k14850 in k7607 in k7604 in k5838 in k5545 in k5542 in k5538 in k5247 in k5244 in k5241 in k5238 */
static void C_ccall f_31452(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[6],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_31452,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_31455,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=t1,a[5]=((C_word*)t0)[4],tmp=(C_word)a,a+=6,tmp);
t3=(C_word)C_i_car(t1);
C_trace("ChickenBridge.scm: 364  emit");
f_15363(t2,t3,((C_word*)t0)[3],((C_word*)t0)[2]);}

/* k31453 in k31450 in a31447 in k16599 in k16596 in k16593 in k16537 in k16534 in k16531 in k16528 in k16525 in k16522 in k16519 in k16516 in k15271 in k15202 in k15009 in k15006 in k14901 in k14850 in k7607 in k7604 in k5838 in k5545 in k5542 in k5538 in k5247 in k5244 in k5241 in k5238 */
static void C_ccall f_31455(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[4],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_31455,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_31471,a[2]=t1,a[3]=((C_word*)t0)[5],tmp=(C_word)a,a+=4,tmp);
t3=(C_word)C_i_cdr(((C_word*)t0)[4]);
C_trace("ChickenBridge.scm: 364  emit");
f_15363(t2,t3,((C_word*)t0)[3],((C_word*)t0)[2]);}

/* k31469 in k31453 in k31450 in a31447 in k16599 in k16596 in k16593 in k16537 in k16534 in k16531 in k16528 in k16525 in k16522 in k16519 in k16516 in k15271 in k15202 in k15009 in k15006 in k14901 in k14850 in k7607 in k7604 in k5838 in k5545 in k5542 in k5538 in k5247 in k5244 in k5241 in k5238 */
static void C_ccall f_31471(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word ab[3],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_31471,2,t0,t1);}
t2=((C_word*)t0)[3];
((C_proc2)(void*)(*((C_word*)t2+1)))(2,t2,(C_word)C_a_i_cons(&a,2,((C_word*)t0)[2],t1));}

/* a31429 in k16599 in k16596 in k16593 in k16537 in k16534 in k16531 in k16528 in k16525 in k16522 in k16519 in k16516 in k15271 in k15202 in k15009 in k15006 in k14901 in k14850 in k7607 in k7604 in k5838 in k5545 in k5542 in k5538 in k5247 in k5244 in k5241 in k5238 */
static void C_ccall f_31430(C_word c,C_word t0,C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word ab[3],*a=ab;
if(c!=4) C_bad_argc_2(c,4,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr4,(void*)f_31430,4,t0,t1,t2,t3);}
t4=(C_word)C_i_car(t2);
t5=(C_word)C_i_cadr(t2);
t6=(C_word)C_a_i_cons(&a,2,t4,t5);
C_trace("ChickenBridge.scm: 364  make-parse-unit");
f_15206(t1,C_fix(27904),t6,C_SCHEME_FALSE);}

/* k31422 in k16599 in k16596 in k16593 in k16537 in k16534 in k16531 in k16528 in k16525 in k16522 in k16519 in k16516 in k15271 in k15202 in k15009 in k15006 in k14901 in k14850 in k7607 in k7604 in k5838 in k5545 in k5542 in k5538 in k5247 in k5244 in k5241 in k5238 */
static void C_ccall f_31424(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 364  hash-table-set!");
t2=C_retrieve(lf[660]);
((C_proc5)C_retrieve_proc(t2))(5,t2,((C_word*)t0)[2],C_retrieve2(lf[256],"*rules*"),C_fix(27904),t1);}

/* k16602 in k16599 in k16596 in k16593 in k16537 in k16534 in k16531 in k16528 in k16525 in k16522 in k16519 in k16516 in k15271 in k15202 in k15009 in k15006 in k14901 in k14850 in k7607 in k7604 in k5838 in k5545 in k5542 in k5538 in k5247 in k5244 in k5241 in k5238 */
static void C_ccall f_16604(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word t14;
C_word t15;
C_word t16;
C_word t17;
C_word t18;
C_word t19;
C_word t20;
C_word t21;
C_word t22;
C_word t23;
C_word ab[63],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_16604,2,t0,t1);}
t2=C_mutate(&lf[310],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_16606,a[2]=((C_word)li240),tmp=(C_word)a,a+=3,tmp));
t3=C_mutate(&lf[311],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_16627,a[2]=((C_word)li243),tmp=(C_word)a,a+=3,tmp));
t4=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_16743,a[2]=((C_word*)t0)[2],tmp=(C_word)a,a+=3,tmp);
t5=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_31348,a[2]=t4,tmp=(C_word)a,a+=3,tmp);
t6=(C_word)C_a_i_cons(&a,2,C_fix(8705),C_SCHEME_END_OF_LIST);
t7=(C_word)C_a_i_cons(&a,2,C_fix(8450),t6);
t8=(C_word)C_a_i_cons(&a,2,C_fix(8963),t7);
t9=(C_word)C_a_i_cons(&a,2,C_fix(10244),t8);
t10=(C_word)C_a_i_cons(&a,2,C_fix(11268),t9);
t11=(C_word)C_a_i_cons(&a,2,C_fix(11012),t10);
t12=(C_word)C_a_i_cons(&a,2,C_fix(9732),t11);
t13=(C_word)C_a_i_cons(&a,2,C_fix(9476),t12);
t14=(C_word)C_a_i_cons(&a,2,C_fix(9988),t13);
t15=(C_word)C_a_i_cons(&a,2,C_fix(10756),t14);
t16=(C_word)C_a_i_cons(&a,2,C_fix(8199),t15);
t17=(C_word)C_a_i_cons(&a,2,C_fix(7941),t16);
t18=(C_word)C_a_i_cons(&a,2,C_fix(7686),t17);
t19=(C_word)C_a_i_cons(&a,2,C_fix(7430),t18);
t20=(C_word)C_a_i_cons(&a,2,C_fix(7173),t19);
t21=(C_word)C_a_i_cons(&a,2,C_fix(6917),t20);
t22=(C_word)C_a_i_cons(&a,2,lf[290],t21);
C_trace("ChickenBridge.scm: 364  make-rule");
f_14905(t5,lf[761],C_fix(28928),t22,C_SCHEME_FALSE,C_SCHEME_FALSE);}

/* k31346 in k16602 in k16599 in k16596 in k16593 in k16537 in k16534 in k16531 in k16528 in k16525 in k16522 in k16519 in k16516 in k15271 in k15202 in k15009 in k15006 in k14901 in k14850 in k7607 in k7604 in k5838 in k5545 in k5542 in k5538 in k5247 in k5244 in k5241 in k5238 */
static void C_ccall f_31348(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 364  hash-table-set!");
t2=C_retrieve(lf[660]);
((C_proc5)C_retrieve_proc(t2))(5,t2,((C_word*)t0)[2],C_retrieve2(lf[256],"*rules*"),C_fix(28928),t1);}

/* k16741 in k16602 in k16599 in k16596 in k16593 in k16537 in k16534 in k16531 in k16528 in k16525 in k16522 in k16519 in k16516 in k15271 in k15202 in k15009 in k15006 in k14901 in k14850 in k7607 in k7604 in k5838 in k5545 in k5542 in k5538 in k5247 in k5244 in k5241 in k5238 */
static void C_ccall f_16743(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word ab[27],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_16743,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_16746,a[2]=((C_word*)t0)[2],tmp=(C_word)a,a+=3,tmp);
t3=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_31268,a[2]=t2,tmp=(C_word)a,a+=3,tmp);
t4=(C_word)C_a_i_cons(&a,2,C_fix(29440),C_SCHEME_END_OF_LIST);
t5=(C_word)C_a_i_cons(&a,2,C_fix(28928),t4);
t6=(C_word)C_a_i_cons(&a,2,lf[226],t5);
t7=(C_word)C_a_i_cons(&a,2,t6,C_SCHEME_END_OF_LIST);
t8=(C_word)C_a_i_cons(&a,2,C_fix(29440),t7);
t9=(C_word)C_a_i_cons(&a,2,lf[289],t8);
t10=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_31274,a[2]=((C_word)li494),tmp=(C_word)a,a+=3,tmp);
C_trace("ChickenBridge.scm: 364  make-rule");
f_14905(t3,lf[760],C_fix(29184),t9,t10,C_SCHEME_FALSE);}

/* a31273 in k16741 in k16602 in k16599 in k16596 in k16593 in k16537 in k16534 in k16531 in k16528 in k16525 in k16522 in k16519 in k16516 in k15271 in k15202 in k15009 in k15006 in k14901 in k14850 in k7607 in k7604 in k5838 in k5545 in k5542 in k5538 in k5247 in k5244 in k5241 in k5238 */
static void C_ccall f_31274(C_word c,C_word t0,C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word ab[4],*a=ab;
if(c!=4) C_bad_argc_2(c,4,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr4,(void*)f_31274,4,t0,t1,t2,t3);}
t4=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_31281,a[2]=t1,a[3]=t2,tmp=(C_word)a,a+=4,tmp);
t5=(C_word)C_i_cadr(t2);
if(C_truep((C_word)C_i_pairp(t5))){
t6=(C_word)C_i_cadr(t2);
t7=(C_word)C_i_car(t6);
C_trace("ChickenBridge.scm: 364  is-op?");
f_16606(t4,t7);}
else{
t6=t4;
f_31281(2,t6,C_SCHEME_FALSE);}}

/* k31279 in a31273 in k16741 in k16602 in k16599 in k16596 in k16593 in k16537 in k16534 in k16531 in k16528 in k16525 in k16522 in k16519 in k16516 in k15271 in k15202 in k15009 in k15006 in k14901 in k14850 in k7607 in k7604 in k5838 in k5545 in k5542 in k5538 in k5247 in k5244 in k5241 in k5238 */
static void C_ccall f_31281(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[3],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_31281,2,t0,t1);}
if(C_truep(t1)){
t2=(C_word)C_i_car(((C_word*)t0)[3]);
t3=(C_word)C_i_cadr(((C_word*)t0)[3]);
t4=(C_word)C_a_i_cons(&a,2,t2,t3);
C_trace("ChickenBridge.scm: 364  inf->pre");
f_16627(((C_word*)t0)[2],t4);}
else{
t2=((C_word*)t0)[2];
((C_proc2)(void*)(*((C_word*)t2+1)))(2,t2,(C_word)C_i_car(((C_word*)t0)[3]));}}

/* k31266 in k16741 in k16602 in k16599 in k16596 in k16593 in k16537 in k16534 in k16531 in k16528 in k16525 in k16522 in k16519 in k16516 in k15271 in k15202 in k15009 in k15006 in k14901 in k14850 in k7607 in k7604 in k5838 in k5545 in k5542 in k5538 in k5247 in k5244 in k5241 in k5238 */
static void C_ccall f_31268(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 364  hash-table-set!");
t2=C_retrieve(lf[660]);
((C_proc5)C_retrieve_proc(t2))(5,t2,((C_word*)t0)[2],C_retrieve2(lf[256],"*rules*"),C_fix(29184),t1);}

/* k16744 in k16741 in k16602 in k16599 in k16596 in k16593 in k16537 in k16534 in k16531 in k16528 in k16525 in k16522 in k16519 in k16516 in k15271 in k15202 in k15009 in k15006 in k14901 in k14850 in k7607 in k7604 in k5838 in k5545 in k5542 in k5538 in k5247 in k5244 in k5241 in k5238 */
static void C_ccall f_16746(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word t14;
C_word t15;
C_word t16;
C_word t17;
C_word t18;
C_word t19;
C_word t20;
C_word t21;
C_word t22;
C_word t23;
C_word t24;
C_word t25;
C_word t26;
C_word ab[72],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_16746,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_16749,a[2]=((C_word*)t0)[2],tmp=(C_word)a,a+=3,tmp);
t3=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_31132,a[2]=t2,tmp=(C_word)a,a+=3,tmp);
t4=(C_word)C_a_i_cons(&a,2,C_fix(29440),C_SCHEME_END_OF_LIST);
t5=(C_word)C_a_i_cons(&a,2,C_fix(7173),t4);
t6=(C_word)C_a_i_cons(&a,2,lf[289],t5);
t7=(C_word)C_a_i_cons(&a,2,C_fix(29440),C_SCHEME_END_OF_LIST);
t8=(C_word)C_a_i_cons(&a,2,C_fix(8963),t7);
t9=(C_word)C_a_i_cons(&a,2,lf[289],t8);
t10=(C_word)C_a_i_cons(&a,2,C_fix(768),C_SCHEME_END_OF_LIST);
t11=(C_word)C_a_i_cons(&a,2,C_fix(29184),t10);
t12=(C_word)C_a_i_cons(&a,2,C_fix(512),t11);
t13=(C_word)C_a_i_cons(&a,2,lf[289],t12);
t14=(C_word)C_a_i_cons(&a,2,C_fix(2304),C_SCHEME_END_OF_LIST);
t15=(C_word)C_a_i_cons(&a,2,C_fix(26624),t14);
t16=(C_word)C_a_i_cons(&a,2,C_fix(26368),t15);
t17=(C_word)C_a_i_cons(&a,2,C_fix(27136),t16);
t18=(C_word)C_a_i_cons(&a,2,C_fix(27904),t17);
t19=(C_word)C_a_i_cons(&a,2,C_fix(27392),t18);
t20=(C_word)C_a_i_cons(&a,2,t13,t19);
t21=(C_word)C_a_i_cons(&a,2,t9,t20);
t22=(C_word)C_a_i_cons(&a,2,t6,t21);
t23=(C_word)C_a_i_cons(&a,2,lf[290],t22);
t24=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_31138,a[2]=((C_word)li492),tmp=(C_word)a,a+=3,tmp);
t25=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_31164,a[2]=((C_word)li493),tmp=(C_word)a,a+=3,tmp);
C_trace("ChickenBridge.scm: 364  make-rule");
f_14905(t3,lf[759],C_fix(29440),t23,t24,t25);}

/* a31163 in k16744 in k16741 in k16602 in k16599 in k16596 in k16593 in k16537 in k16534 in k16531 in k16528 in k16525 in k16522 in k16519 in k16516 in k15271 in k15202 in k15009 in k15006 in k14901 in k14850 in k7607 in k7604 in k5838 in k5545 in k5542 in k5538 in k5247 in k5244 in k5241 in k5238 */
static void C_ccall f_31164(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4){
C_word tmp;
C_word t5;
C_word t6;
C_word ab[5],*a=ab;
if(c!=5) C_bad_argc_2(c,5,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr5,(void*)f_31164,5,t0,t1,t2,t3,t4);}
t5=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_31172,a[2]=t4,a[3]=t3,a[4]=t1,tmp=(C_word)a,a+=5,tmp);
C_trace("ChickenBridge.scm: 364  parse-unit-parsed");
f_15245(t5,t2);}

/* k31170 in a31163 in k16744 in k16741 in k16602 in k16599 in k16596 in k16593 in k16537 in k16534 in k16531 in k16528 in k16525 in k16522 in k16519 in k16516 in k15271 in k15202 in k15009 in k15006 in k14901 in k14850 in k7607 in k7604 in k5838 in k5545 in k5542 in k5538 in k5247 in k5244 in k5241 in k5238 */
static void C_ccall f_31172(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 364  emit");
f_15363(((C_word*)t0)[4],t1,((C_word*)t0)[3],((C_word*)t0)[2]);}

/* a31137 in k16744 in k16741 in k16602 in k16599 in k16596 in k16593 in k16537 in k16534 in k16531 in k16528 in k16525 in k16522 in k16519 in k16516 in k15271 in k15202 in k15009 in k15006 in k14901 in k14850 in k7607 in k7604 in k5838 in k5545 in k5542 in k5538 in k5247 in k5244 in k5241 in k5238 */
static void C_ccall f_31138(C_word c,C_word t0,C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word ab[7],*a=ab;
if(c!=4) C_bad_argc_2(c,4,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr4,(void*)f_31138,4,t0,t1,t2,t3);}
t4=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_31146,a[2]=t1,tmp=(C_word)a,a+=3,tmp);
if(C_truep((C_word)C_i_pairp(t2))){
t5=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_31155,a[2]=t2,a[3]=t4,tmp=(C_word)a,a+=4,tmp);
t6=(C_word)C_i_car(t2);
C_trace("ChickenBridge.scm: 364  token-unit-type=?");
f_15291(t5,t6,C_fix(512));}
else{
t5=t4;
f_31146(t5,t2);}}

/* k31153 in a31137 in k16744 in k16741 in k16602 in k16599 in k16596 in k16593 in k16537 in k16534 in k16531 in k16528 in k16525 in k16522 in k16519 in k16516 in k15271 in k15202 in k15009 in k15006 in k14901 in k14850 in k7607 in k7604 in k5838 in k5545 in k5542 in k5538 in k5247 in k5244 in k5241 in k5238 */
static void C_ccall f_31155(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
t2=((C_word*)t0)[3];
f_31146(t2,(C_truep(t1)?(C_word)C_i_cadr(((C_word*)t0)[2]):((C_word*)t0)[2]));}

/* k31144 in a31137 in k16744 in k16741 in k16602 in k16599 in k16596 in k16593 in k16537 in k16534 in k16531 in k16528 in k16525 in k16522 in k16519 in k16516 in k15271 in k15202 in k15009 in k15006 in k14901 in k14850 in k7607 in k7604 in k5838 in k5545 in k5542 in k5538 in k5247 in k5244 in k5241 in k5238 */
static void C_fcall f_31146(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 364  make-parse-unit");
f_15206(((C_word*)t0)[2],C_fix(29440),t1,C_SCHEME_FALSE);}

/* k31130 in k16744 in k16741 in k16602 in k16599 in k16596 in k16593 in k16537 in k16534 in k16531 in k16528 in k16525 in k16522 in k16519 in k16516 in k15271 in k15202 in k15009 in k15006 in k14901 in k14850 in k7607 in k7604 in k5838 in k5545 in k5542 in k5538 in k5247 in k5244 in k5241 in k5238 */
static void C_ccall f_31132(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 364  hash-table-set!");
t2=C_retrieve(lf[660]);
((C_proc5)C_retrieve_proc(t2))(5,t2,((C_word*)t0)[2],C_retrieve2(lf[256],"*rules*"),C_fix(29440),t1);}

/* k16747 in k16744 in k16741 in k16602 in k16599 in k16596 in k16593 in k16537 in k16534 in k16531 in k16528 in k16525 in k16522 in k16519 in k16516 in k15271 in k15202 in k15009 in k15006 in k14901 in k14850 in k7607 in k7604 in k5838 in k5545 in k5542 in k5538 in k5247 in k5244 in k5241 in k5238 */
static void C_ccall f_16749(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word ab[33],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_16749,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_16752,a[2]=((C_word*)t0)[2],tmp=(C_word)a,a+=3,tmp);
t3=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_31088,a[2]=t2,tmp=(C_word)a,a+=3,tmp);
t4=(C_word)C_a_i_cons(&a,2,C_fix(26368),C_SCHEME_END_OF_LIST);
t5=(C_word)C_a_i_cons(&a,2,C_fix(6400),t4);
t6=(C_word)C_a_i_cons(&a,2,C_fix(2304),t5);
t7=(C_word)C_a_i_cons(&a,2,C_fix(26624),t6);
t8=(C_word)C_a_i_cons(&a,2,C_fix(27136),t7);
t9=(C_word)C_a_i_cons(&a,2,C_fix(27904),t8);
t10=(C_word)C_a_i_cons(&a,2,C_fix(27392),t9);
t11=(C_word)C_a_i_cons(&a,2,C_fix(29184),t10);
t12=(C_word)C_a_i_cons(&a,2,lf[290],t11);
C_trace("ChickenBridge.scm: 364  make-rule");
f_14905(t3,lf[758],C_fix(29696),t12,C_SCHEME_FALSE,C_SCHEME_FALSE);}

/* k31086 in k16747 in k16744 in k16741 in k16602 in k16599 in k16596 in k16593 in k16537 in k16534 in k16531 in k16528 in k16525 in k16522 in k16519 in k16516 in k15271 in k15202 in k15009 in k15006 in k14901 in k14850 in k7607 in k7604 in k5838 in k5545 in k5542 in k5538 in k5247 in k5244 in k5241 in k5238 */
static void C_ccall f_31088(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 364  hash-table-set!");
t2=C_retrieve(lf[660]);
((C_proc5)C_retrieve_proc(t2))(5,t2,((C_word*)t0)[2],C_retrieve2(lf[256],"*rules*"),C_fix(29696),t1);}

/* k16750 in k16747 in k16744 in k16741 in k16602 in k16599 in k16596 in k16593 in k16537 in k16534 in k16531 in k16528 in k16525 in k16522 in k16519 in k16516 in k15271 in k15202 in k15009 in k15006 in k14901 in k14850 in k7607 in k7604 in k5838 in k5545 in k5542 in k5538 in k5247 in k5244 in k5241 in k5238 */
static void C_ccall f_16752(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word ab[33],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_16752,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_16755,a[2]=((C_word*)t0)[2],tmp=(C_word)a,a+=3,tmp);
t3=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_30978,a[2]=t2,tmp=(C_word)a,a+=3,tmp);
t4=(C_word)C_a_i_cons(&a,2,C_fix(29696),C_SCHEME_END_OF_LIST);
t5=(C_word)C_a_i_cons(&a,2,C_fix(256),t4);
t6=(C_word)C_a_i_cons(&a,2,lf[226],t5);
t7=(C_word)C_a_i_cons(&a,2,t6,C_SCHEME_END_OF_LIST);
t8=(C_word)C_a_i_cons(&a,2,C_fix(29696),t7);
t9=(C_word)C_a_i_cons(&a,2,C_fix(15872),t8);
t10=(C_word)C_a_i_cons(&a,2,lf[289],t9);
t11=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_30984,a[2]=((C_word)li489),tmp=(C_word)a,a+=3,tmp);
t12=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_31006,a[2]=((C_word)li491),tmp=(C_word)a,a+=3,tmp);
C_trace("ChickenBridge.scm: 364  make-rule");
f_14905(t3,lf[757],C_fix(33536),t10,t11,t12);}

/* a31005 in k16750 in k16747 in k16744 in k16741 in k16602 in k16599 in k16596 in k16593 in k16537 in k16534 in k16531 in k16528 in k16525 in k16522 in k16519 in k16516 in k15271 in k15202 in k15009 in k15006 in k14901 in k14850 in k7607 in k7604 in k5838 in k5545 in k5542 in k5538 in k5247 in k5244 in k5241 in k5238 */
static void C_ccall f_31006(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4){
C_word tmp;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word ab[12],*a=ab;
if(c!=5) C_bad_argc_2(c,5,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr5,(void*)f_31006,5,t0,t1,t2,t3,t4);}
t5=(C_word)C_a_i_list(&a,1,lf[340]);
t6=t5;
t7=(*a=C_VECTOR_TYPE|1,a[1]=t6,tmp=(C_word)a,a+=2,tmp);
t8=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_31017,a[2]=t1,a[3]=t4,a[4]=t3,a[5]=t7,a[6]=t5,tmp=(C_word)a,a+=7,tmp);
C_trace("ChickenBridge.scm: 364  parse-unit-parsed");
f_15245(t8,t2);}

/* k31015 in a31005 in k16750 in k16747 in k16744 in k16741 in k16602 in k16599 in k16596 in k16593 in k16537 in k16534 in k16531 in k16528 in k16525 in k16522 in k16519 in k16516 in k15271 in k15202 in k15009 in k15006 in k14901 in k14850 in k7607 in k7604 in k5838 in k5545 in k5542 in k5538 in k5247 in k5244 in k5241 in k5238 */
static void C_ccall f_31017(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[10],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_31017,2,t0,t1);}
t2=C_SCHEME_UNDEFINED;
t3=(*a=C_VECTOR_TYPE|1,a[1]=t2,tmp=(C_word)a,a+=2,tmp);
t4=C_set_block_item(t3,0,(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_31019,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=t3,a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],a[7]=((C_word)li490),tmp=(C_word)a,a+=8,tmp));
t5=((C_word*)t3)[1];
f_31019(t5,((C_word*)t0)[2],t1);}

/* do2587 in k31015 in a31005 in k16750 in k16747 in k16744 in k16741 in k16602 in k16599 in k16596 in k16593 in k16537 in k16534 in k16531 in k16528 in k16525 in k16522 in k16519 in k16516 in k15271 in k15202 in k15009 in k15006 in k14901 in k14850 in k7607 in k7604 in k5838 in k5545 in k5542 in k5538 in k5247 in k5244 in k5241 in k5238 */
static void C_fcall f_31019(C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word t5;
C_word ab[6],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_31019,NULL,3,t0,t1,t2);}
if(C_truep((C_word)C_i_nullp(t2))){
t3=t1;
((C_proc2)(void*)(*((C_word*)t3+1)))(2,t3,((C_word*)t0)[6]);}
else{
t3=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_31048,a[2]=t1,a[3]=((C_word*)t0)[4],a[4]=t2,a[5]=((C_word*)t0)[5],tmp=(C_word)a,a+=6,tmp);
t4=(C_word)C_i_car(t2);
C_trace("ChickenBridge.scm: 364  emit");
f_15363(t3,t4,((C_word*)t0)[3],((C_word*)t0)[2]);}}

/* k31046 in do2587 in k31015 in a31005 in k16750 in k16747 in k16744 in k16741 in k16602 in k16599 in k16596 in k16593 in k16537 in k16534 in k16531 in k16528 in k16525 in k16522 in k16519 in k16516 in k15271 in k15202 in k15009 in k15006 in k14901 in k14850 in k7607 in k7604 in k5838 in k5545 in k5542 in k5538 in k5247 in k5244 in k5241 in k5238 */
static void C_ccall f_31048(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word ab[3],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_31048,2,t0,t1);}
t2=(C_word)C_a_i_list(&a,1,t1);
t3=(C_word)C_i_set_cdr(((C_word*)((C_word*)t0)[5])[1],t2);
t4=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[5])[1]);
t5=C_mutate(((C_word *)((C_word*)t0)[5])+1,t4);
t6=(C_word)C_i_cdr(((C_word*)t0)[4]);
t7=((C_word*)((C_word*)t0)[3])[1];
f_31019(t7,((C_word*)t0)[2],t6);}

/* a30983 in k16750 in k16747 in k16744 in k16741 in k16602 in k16599 in k16596 in k16593 in k16537 in k16534 in k16531 in k16528 in k16525 in k16522 in k16519 in k16516 in k15271 in k15202 in k15009 in k15006 in k14901 in k14850 in k7607 in k7604 in k5838 in k5545 in k5542 in k5538 in k5247 in k5244 in k5241 in k5238 */
static void C_ccall f_30984(C_word c,C_word t0,C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word ab[4],*a=ab;
if(c!=4) C_bad_argc_2(c,4,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr4,(void*)f_30984,4,t0,t1,t2,t3);}
t4=(C_word)C_i_cadr(t2);
t5=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_31000,a[2]=t1,a[3]=t4,tmp=(C_word)a,a+=4,tmp);
t6=(C_word)C_i_caddr(t2);
C_trace("ChickenBridge.scm: 364  remove-token-type");
f_16541(t5,t6,C_fix(256));}

/* k30998 in a30983 in k16750 in k16747 in k16744 in k16741 in k16602 in k16599 in k16596 in k16593 in k16537 in k16534 in k16531 in k16528 in k16525 in k16522 in k16519 in k16516 in k15271 in k15202 in k15009 in k15006 in k14901 in k14850 in k7607 in k7604 in k5838 in k5545 in k5542 in k5538 in k5247 in k5244 in k5241 in k5238 */
static void C_ccall f_31000(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[3],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_31000,2,t0,t1);}
t2=(C_word)C_a_i_cons(&a,2,((C_word*)t0)[3],t1);
C_trace("ChickenBridge.scm: 364  make-parse-unit");
f_15206(((C_word*)t0)[2],C_fix(33536),t2,C_SCHEME_FALSE);}

/* k30976 in k16750 in k16747 in k16744 in k16741 in k16602 in k16599 in k16596 in k16593 in k16537 in k16534 in k16531 in k16528 in k16525 in k16522 in k16519 in k16516 in k15271 in k15202 in k15009 in k15006 in k14901 in k14850 in k7607 in k7604 in k5838 in k5545 in k5542 in k5538 in k5247 in k5244 in k5241 in k5238 */
static void C_ccall f_30978(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 364  hash-table-set!");
t2=C_retrieve(lf[660]);
((C_proc5)C_retrieve_proc(t2))(5,t2,((C_word*)t0)[2],C_retrieve2(lf[256],"*rules*"),C_fix(33536),t1);}

/* k16753 in k16750 in k16747 in k16744 in k16741 in k16602 in k16599 in k16596 in k16593 in k16537 in k16534 in k16531 in k16528 in k16525 in k16522 in k16519 in k16516 in k15271 in k15202 in k15009 in k15006 in k14901 in k14850 in k7607 in k7604 in k5838 in k5545 in k5542 in k5538 in k5247 in k5244 in k5241 in k5238 */
static void C_ccall f_16755(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word ab[33],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_16755,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_16758,a[2]=((C_word*)t0)[2],tmp=(C_word)a,a+=3,tmp);
t3=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_30903,a[2]=t2,tmp=(C_word)a,a+=3,tmp);
t4=(C_word)C_a_i_cons(&a,2,C_fix(29696),C_SCHEME_END_OF_LIST);
t5=(C_word)C_a_i_cons(&a,2,C_fix(256),t4);
t6=(C_word)C_a_i_cons(&a,2,lf[226],t5);
t7=(C_word)C_a_i_cons(&a,2,t6,C_SCHEME_END_OF_LIST);
t8=(C_word)C_a_i_cons(&a,2,C_fix(29696),t7);
t9=(C_word)C_a_i_cons(&a,2,C_fix(16896),t8);
t10=(C_word)C_a_i_cons(&a,2,lf[289],t9);
t11=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_30909,a[2]=((C_word)li487),tmp=(C_word)a,a+=3,tmp);
t12=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_30931,a[2]=((C_word)li488),tmp=(C_word)a,a+=3,tmp);
C_trace("ChickenBridge.scm: 364  make-rule");
f_14905(t3,lf[756],C_fix(34560),t10,t11,t12);}

/* a30930 in k16753 in k16750 in k16747 in k16744 in k16741 in k16602 in k16599 in k16596 in k16593 in k16537 in k16534 in k16531 in k16528 in k16525 in k16522 in k16519 in k16516 in k15271 in k15202 in k15009 in k15006 in k14901 in k14850 in k7607 in k7604 in k5838 in k5545 in k5542 in k5538 in k5247 in k5244 in k5241 in k5238 */
static void C_ccall f_30931(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4){
C_word tmp;
C_word t5;
C_word t6;
C_word ab[5],*a=ab;
if(c!=5) C_bad_argc_2(c,5,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr5,(void*)f_30931,5,t0,t1,t2,t3,t4);}
t5=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_30935,a[2]=t4,a[3]=t3,a[4]=t1,tmp=(C_word)a,a+=5,tmp);
C_trace("ChickenBridge.scm: 364  parse-unit-parsed");
f_15245(t5,t2);}

/* k30933 in a30930 in k16753 in k16750 in k16747 in k16744 in k16741 in k16602 in k16599 in k16596 in k16593 in k16537 in k16534 in k16531 in k16528 in k16525 in k16522 in k16519 in k16516 in k15271 in k15202 in k15009 in k15006 in k14901 in k14850 in k7607 in k7604 in k5838 in k5545 in k5542 in k5538 in k5247 in k5244 in k5241 in k5238 */
static void C_ccall f_30935(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[3],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_30935,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_30942,a[2]=((C_word*)t0)[4],tmp=(C_word)a,a+=3,tmp);
C_trace("ChickenBridge.scm: 364  emit");
f_15363(t2,t1,((C_word*)t0)[3],((C_word*)t0)[2]);}

/* k30940 in k30933 in a30930 in k16753 in k16750 in k16747 in k16744 in k16741 in k16602 in k16599 in k16596 in k16593 in k16537 in k16534 in k16531 in k16528 in k16525 in k16522 in k16519 in k16516 in k15271 in k15202 in k15009 in k15006 in k14901 in k14850 in k7607 in k7604 in k5838 in k5545 in k5542 in k5538 in k5247 in k5244 in k5241 in k5238 */
static void C_ccall f_30942(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word ab[3],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_30942,2,t0,t1);}
t2=((C_word*)t0)[2];
((C_proc2)(void*)(*((C_word*)t2+1)))(2,t2,(C_word)C_a_i_cons(&a,2,lf[626],t1));}

/* a30908 in k16753 in k16750 in k16747 in k16744 in k16741 in k16602 in k16599 in k16596 in k16593 in k16537 in k16534 in k16531 in k16528 in k16525 in k16522 in k16519 in k16516 in k15271 in k15202 in k15009 in k15006 in k14901 in k14850 in k7607 in k7604 in k5838 in k5545 in k5542 in k5538 in k5247 in k5244 in k5241 in k5238 */
static void C_ccall f_30909(C_word c,C_word t0,C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word ab[4],*a=ab;
if(c!=4) C_bad_argc_2(c,4,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr4,(void*)f_30909,4,t0,t1,t2,t3);}
t4=(C_word)C_i_cadr(t2);
t5=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_30925,a[2]=t1,a[3]=t4,tmp=(C_word)a,a+=4,tmp);
t6=(C_word)C_i_caddr(t2);
C_trace("ChickenBridge.scm: 364  remove-token-type");
f_16541(t5,t6,C_fix(256));}

/* k30923 in a30908 in k16753 in k16750 in k16747 in k16744 in k16741 in k16602 in k16599 in k16596 in k16593 in k16537 in k16534 in k16531 in k16528 in k16525 in k16522 in k16519 in k16516 in k15271 in k15202 in k15009 in k15006 in k14901 in k14850 in k7607 in k7604 in k5838 in k5545 in k5542 in k5538 in k5247 in k5244 in k5241 in k5238 */
static void C_ccall f_30925(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[3],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_30925,2,t0,t1);}
t2=(C_word)C_a_i_cons(&a,2,((C_word*)t0)[3],t1);
C_trace("ChickenBridge.scm: 364  make-parse-unit");
f_15206(((C_word*)t0)[2],C_fix(34560),t2,C_SCHEME_FALSE);}

/* k30901 in k16753 in k16750 in k16747 in k16744 in k16741 in k16602 in k16599 in k16596 in k16593 in k16537 in k16534 in k16531 in k16528 in k16525 in k16522 in k16519 in k16516 in k15271 in k15202 in k15009 in k15006 in k14901 in k14850 in k7607 in k7604 in k5838 in k5545 in k5542 in k5538 in k5247 in k5244 in k5241 in k5238 */
static void C_ccall f_30903(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 364  hash-table-set!");
t2=C_retrieve(lf[660]);
((C_proc5)C_retrieve_proc(t2))(5,t2,((C_word*)t0)[2],C_retrieve2(lf[256],"*rules*"),C_fix(34560),t1);}

/* k16756 in k16753 in k16750 in k16747 in k16744 in k16741 in k16602 in k16599 in k16596 in k16593 in k16537 in k16534 in k16531 in k16528 in k16525 in k16522 in k16519 in k16516 in k15271 in k15202 in k15009 in k15006 in k14901 in k14850 in k7607 in k7604 in k5838 in k5545 in k5542 in k5538 in k5247 in k5244 in k5241 in k5238 */
static void C_ccall f_16758(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word t14;
C_word t15;
C_word t16;
C_word t17;
C_word t18;
C_word t19;
C_word t20;
C_word t21;
C_word t22;
C_word t23;
C_word t24;
C_word ab[66],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_16758,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_16761,a[2]=((C_word*)t0)[2],tmp=(C_word)a,a+=3,tmp);
t3=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_30704,a[2]=t2,tmp=(C_word)a,a+=3,tmp);
t4=(C_word)C_a_i_cons(&a,2,C_fix(25088),C_SCHEME_END_OF_LIST);
t5=(C_word)C_a_i_cons(&a,2,C_fix(2304),t4);
t6=(C_word)C_a_i_cons(&a,2,lf[290],t5);
t7=(C_word)C_a_i_cons(&a,2,C_fix(28672),C_SCHEME_END_OF_LIST);
t8=(C_word)C_a_i_cons(&a,2,C_fix(256),t7);
t9=(C_word)C_a_i_cons(&a,2,C_fix(28416),t8);
t10=(C_word)C_a_i_cons(&a,2,lf[289],t9);
t11=(C_word)C_a_i_cons(&a,2,C_fix(28672),C_SCHEME_END_OF_LIST);
t12=(C_word)C_a_i_cons(&a,2,C_fix(28416),t11);
t13=(C_word)C_a_i_cons(&a,2,t10,t12);
t14=(C_word)C_a_i_cons(&a,2,lf[290],t13);
t15=(C_word)C_a_i_cons(&a,2,t14,C_SCHEME_END_OF_LIST);
t16=(C_word)C_a_i_cons(&a,2,C_fix(256),t15);
t17=(C_word)C_a_i_cons(&a,2,lf[304],t16);
t18=(C_word)C_a_i_cons(&a,2,t17,C_SCHEME_END_OF_LIST);
t19=(C_word)C_a_i_cons(&a,2,t6,t18);
t20=(C_word)C_a_i_cons(&a,2,C_fix(16384),t19);
t21=(C_word)C_a_i_cons(&a,2,lf[289],t20);
t22=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_30710,a[2]=((C_word)li484),tmp=(C_word)a,a+=3,tmp);
t23=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_30771,a[2]=((C_word)li486),tmp=(C_word)a,a+=3,tmp);
C_trace("ChickenBridge.scm: 364  make-rule");
f_14905(t3,lf[755],C_fix(34304),t21,t22,t23);}

/* a30770 in k16756 in k16753 in k16750 in k16747 in k16744 in k16741 in k16602 in k16599 in k16596 in k16593 in k16537 in k16534 in k16531 in k16528 in k16525 in k16522 in k16519 in k16516 in k15271 in k15202 in k15009 in k15006 in k14901 in k14850 in k7607 in k7604 in k5838 in k5545 in k5542 in k5538 in k5247 in k5244 in k5241 in k5238 */
static void C_ccall f_30771(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4){
C_word tmp;
C_word t5;
C_word t6;
C_word t7;
C_word ab[10],*a=ab;
if(c!=5) C_bad_argc_2(c,5,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr5,(void*)f_30771,5,t0,t1,t2,t3,t4);}
t5=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_30775,a[2]=t1,a[3]=t2,a[4]=t4,tmp=(C_word)a,a+=5,tmp);
t6=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_30811,a[2]=t4,a[3]=t3,a[4]=t5,tmp=(C_word)a,a+=5,tmp);
C_trace("ChickenBridge.scm: 364  parse-unit-parsed");
f_15245(t6,t2);}

/* k30809 in a30770 in k16756 in k16753 in k16750 in k16747 in k16744 in k16741 in k16602 in k16599 in k16596 in k16593 in k16537 in k16534 in k16531 in k16528 in k16525 in k16522 in k16519 in k16516 in k15271 in k15202 in k15009 in k15006 in k14901 in k14850 in k7607 in k7604 in k5838 in k5545 in k5542 in k5538 in k5247 in k5244 in k5241 in k5238 */
static void C_ccall f_30811(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 364  emit");
f_15363(((C_word*)t0)[4],t1,((C_word*)t0)[3],((C_word*)t0)[2]);}

/* k30773 in a30770 in k16756 in k16753 in k16750 in k16747 in k16744 in k16741 in k16602 in k16599 in k16596 in k16593 in k16537 in k16534 in k16531 in k16528 in k16525 in k16522 in k16519 in k16516 in k15271 in k15202 in k15009 in k15006 in k14901 in k14850 in k7607 in k7604 in k5838 in k5545 in k5542 in k5538 in k5247 in k5244 in k5241 in k5238 */
static void C_ccall f_30775(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[5],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_30775,2,t0,t1);}
t2=(C_word)C_i_car(t1);
t3=(C_word)C_i_car(t1);
t4=(C_word)C_i_cdr(t1);
t5=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_30791,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word)li485),tmp=(C_word)a,a+=5,tmp);
C_trace("ChickenBridge.scm: 364  expand-send");
t6=C_retrieve(lf[32]);
((C_proc5)C_retrieve_proc(t6))(5,t6,((C_word*)t0)[2],t3,t4,t5);}

/* a30790 in k30773 in a30770 in k16756 in k16753 in k16750 in k16747 in k16744 in k16741 in k16602 in k16599 in k16596 in k16593 in k16537 in k16534 in k16531 in k16528 in k16525 in k16522 in k16519 in k16516 in k15271 in k15202 in k15009 in k15006 in k14901 in k14850 in k7607 in k7604 in k5838 in k5545 in k5542 in k5538 in k5247 in k5244 in k5241 in k5238 */
static void C_ccall f_30791(C_word c,C_word t0,C_word t1,C_word t2,...){
C_word tmp;
C_word t3;
va_list v;
C_word *a,c2=c;
C_save_rest(t2,c2,3);
if(c<3) C_bad_min_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_demand(c*C_SIZEOF_PAIR+8)){
C_save_and_reclaim((void*)tr3r,(void*)f_30791r,3,t0,t1,t2);}
else{
a=C_alloc((c-3)*3);
t3=C_restore_rest(a,C_rest_count(0));
f_30791r(t0,t1,t2,t3);}}

static void C_ccall f_30791r(C_word t0,C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word t6;
C_word *a=C_alloc(8);
t4=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_30799,a[2]=t1,a[3]=((C_word*)t0)[3],tmp=(C_word)a,a+=4,tmp);
t5=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_30803,a[2]=((C_word*)t0)[2],a[3]=t4,tmp=(C_word)a,a+=4,tmp);
C_apply(5,0,t5,C_retrieve(lf[33]),t2,t3);}

/* k30801 in a30790 in k30773 in a30770 in k16756 in k16753 in k16750 in k16747 in k16744 in k16741 in k16602 in k16599 in k16596 in k16593 in k16537 in k16534 in k16531 in k16528 in k16525 in k16522 in k16519 in k16516 in k15271 in k15202 in k15009 in k15006 in k14901 in k14850 in k7607 in k7604 in k5838 in k5545 in k5542 in k5538 in k5247 in k5244 in k5241 in k5238 */
static void C_ccall f_30803(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[4],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_30803,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_30807,a[2]=t1,a[3]=((C_word*)t0)[3],tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 364  parse-unit-position");
f_15263(t2,((C_word*)t0)[2]);}

/* k30805 in k30801 in a30790 in k30773 in a30770 in k16756 in k16753 in k16750 in k16747 in k16744 in k16741 in k16602 in k16599 in k16596 in k16593 in k16537 in k16534 in k16531 in k16528 in k16525 in k16522 in k16519 in k16516 in k15271 in k15202 in k15009 in k15006 in k14901 in k14850 in k7607 in k7604 in k5838 in k5545 in k5542 in k5538 in k5247 in k5244 in k5241 in k5238 */
static void C_ccall f_30807(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 364  make-parse-error");
f_15155(((C_word*)t0)[3],((C_word*)t0)[2],t1);}

/* k30797 in a30790 in k30773 in a30770 in k16756 in k16753 in k16750 in k16747 in k16744 in k16741 in k16602 in k16599 in k16596 in k16593 in k16537 in k16534 in k16531 in k16528 in k16525 in k16522 in k16519 in k16516 in k15271 in k15202 in k15009 in k15006 in k14901 in k14850 in k7607 in k7604 in k5838 in k5545 in k5542 in k5538 in k5247 in k5244 in k5241 in k5238 */
static void C_ccall f_30799(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 364  errf");
t2=((C_word*)t0)[3];
((C_proc3)C_retrieve_proc(t2))(3,t2,((C_word*)t0)[2],t1);}

/* a30709 in k16756 in k16753 in k16750 in k16747 in k16744 in k16741 in k16602 in k16599 in k16596 in k16593 in k16537 in k16534 in k16531 in k16528 in k16525 in k16522 in k16519 in k16516 in k15271 in k15202 in k15009 in k15006 in k14901 in k14850 in k7607 in k7604 in k5838 in k5545 in k5542 in k5538 in k5247 in k5244 in k5241 in k5238 */
static void C_ccall f_30710(C_word c,C_word t0,C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word t14;
C_word t15;
C_word t16;
C_word ab[11],*a=ab;
if(c!=4) C_bad_argc_2(c,4,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr4,(void*)f_30710,4,t0,t1,t2,t3);}
t4=(C_word)C_i_caddr(t2);
t5=t4;
t6=(*a=C_VECTOR_TYPE|1,a[1]=t5,tmp=(C_word)a,a+=2,tmp);
t7=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_30717,a[2]=t1,a[3]=t6,a[4]=t2,tmp=(C_word)a,a+=5,tmp);
t8=((C_word*)t6)[1];
if(C_truep(t8)){
t9=(C_word)C_i_cadr(((C_word*)t6)[1]);
t10=C_set_block_item(t6,0,t9);
t11=(C_word)C_i_car(((C_word*)t6)[1]);
if(C_truep((C_word)C_i_pairp(t11))){
t12=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_30757,a[2]=t7,a[3]=t6,tmp=(C_word)a,a+=4,tmp);
t13=(C_word)C_i_car(((C_word*)t6)[1]);
t14=(C_word)C_i_caddr(((C_word*)t6)[1]);
C_trace("ChickenBridge.scm: 364  append");
t15=*((C_word*)lf[20]+1);
((C_proc4)C_retrieve_proc(t15))(4,t15,t12,t13,t14);}
else{
t12=t7;
f_30717(t12,C_SCHEME_UNDEFINED);}}
else{
t9=C_set_block_item(t6,0,C_SCHEME_END_OF_LIST);
t10=t7;
f_30717(t10,t9);}}

/* k30755 in a30709 in k16756 in k16753 in k16750 in k16747 in k16744 in k16741 in k16602 in k16599 in k16596 in k16593 in k16537 in k16534 in k16531 in k16528 in k16525 in k16522 in k16519 in k16516 in k15271 in k15202 in k15009 in k15006 in k14901 in k14850 in k7607 in k7604 in k5838 in k5545 in k5542 in k5538 in k5247 in k5244 in k5241 in k5238 */
static void C_ccall f_30757(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[3])+1,t1);
t3=((C_word*)t0)[2];
f_30717(t3,t2);}

/* k30715 in a30709 in k16756 in k16753 in k16750 in k16747 in k16744 in k16741 in k16602 in k16599 in k16596 in k16593 in k16537 in k16534 in k16531 in k16528 in k16525 in k16522 in k16519 in k16516 in k15271 in k15202 in k15009 in k15006 in k14901 in k14850 in k7607 in k7604 in k5838 in k5545 in k5542 in k5538 in k5247 in k5244 in k5241 in k5238 */
static void C_fcall f_30717(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_30717,NULL,2,t0,t1);}
t2=(C_word)C_i_cadr(((C_word*)t0)[4]);
t3=(C_word)C_a_i_cons(&a,2,t2,((C_word*)((C_word*)t0)[3])[1]);
t4=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_30728,a[2]=t3,a[3]=((C_word*)t0)[2],tmp=(C_word)a,a+=4,tmp);
t5=(C_word)C_i_car(((C_word*)t0)[4]);
C_trace("ChickenBridge.scm: 364  parse-unit-position");
f_15263(t4,t5);}

/* k30726 in k30715 in a30709 in k16756 in k16753 in k16750 in k16747 in k16744 in k16741 in k16602 in k16599 in k16596 in k16593 in k16537 in k16534 in k16531 in k16528 in k16525 in k16522 in k16519 in k16516 in k15271 in k15202 in k15009 in k15006 in k14901 in k14850 in k7607 in k7604 in k5838 in k5545 in k5542 in k5538 in k5247 in k5244 in k5241 in k5238 */
static void C_ccall f_30728(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 364  make-parse-unit");
f_15206(((C_word*)t0)[3],C_fix(34304),((C_word*)t0)[2],t1);}

/* k30702 in k16756 in k16753 in k16750 in k16747 in k16744 in k16741 in k16602 in k16599 in k16596 in k16593 in k16537 in k16534 in k16531 in k16528 in k16525 in k16522 in k16519 in k16516 in k15271 in k15202 in k15009 in k15006 in k14901 in k14850 in k7607 in k7604 in k5838 in k5545 in k5542 in k5538 in k5247 in k5244 in k5241 in k5238 */
static void C_ccall f_30704(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 364  hash-table-set!");
t2=C_retrieve(lf[660]);
((C_proc5)C_retrieve_proc(t2))(5,t2,((C_word*)t0)[2],C_retrieve2(lf[256],"*rules*"),C_fix(34304),t1);}

/* k16759 in k16756 in k16753 in k16750 in k16747 in k16744 in k16741 in k16602 in k16599 in k16596 in k16593 in k16537 in k16534 in k16531 in k16528 in k16525 in k16522 in k16519 in k16516 in k15271 in k15202 in k15009 in k15006 in k14901 in k14850 in k7607 in k7604 in k5838 in k5545 in k5542 in k5538 in k5247 in k5244 in k5241 in k5238 */
static void C_ccall f_16761(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word ab[18],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_16761,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_16764,a[2]=((C_word*)t0)[2],tmp=(C_word)a,a+=3,tmp);
t3=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_30678,a[2]=t2,tmp=(C_word)a,a+=3,tmp);
t4=(C_word)C_a_i_cons(&a,2,C_fix(29696),C_SCHEME_END_OF_LIST);
t5=(C_word)C_a_i_cons(&a,2,C_fix(14080),t4);
t6=(C_word)C_a_i_cons(&a,2,lf[289],t5);
t7=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_30684,a[2]=((C_word)li483),tmp=(C_word)a,a+=3,tmp);
C_trace("ChickenBridge.scm: 364  make-rule");
f_14905(t3,lf[754],C_fix(33792),t6,t7,C_SCHEME_FALSE);}

/* a30683 in k16759 in k16756 in k16753 in k16750 in k16747 in k16744 in k16741 in k16602 in k16599 in k16596 in k16593 in k16537 in k16534 in k16531 in k16528 in k16525 in k16522 in k16519 in k16516 in k15271 in k15202 in k15009 in k15006 in k14901 in k14850 in k7607 in k7604 in k5838 in k5545 in k5542 in k5538 in k5247 in k5244 in k5241 in k5238 */
static void C_ccall f_30684(C_word c,C_word t0,C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word *a;
if(c!=4) C_bad_argc_2(c,4,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr4,(void*)f_30684,4,t0,t1,t2,t3);}
t4=t1;
((C_proc2)(void*)(*((C_word*)t4+1)))(2,t4,(C_word)C_i_cadr(t2));}

/* k30676 in k16759 in k16756 in k16753 in k16750 in k16747 in k16744 in k16741 in k16602 in k16599 in k16596 in k16593 in k16537 in k16534 in k16531 in k16528 in k16525 in k16522 in k16519 in k16516 in k15271 in k15202 in k15009 in k15006 in k14901 in k14850 in k7607 in k7604 in k5838 in k5545 in k5542 in k5538 in k5247 in k5244 in k5241 in k5238 */
static void C_ccall f_30678(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 364  hash-table-set!");
t2=C_retrieve(lf[660]);
((C_proc5)C_retrieve_proc(t2))(5,t2,((C_word*)t0)[2],C_retrieve2(lf[256],"*rules*"),C_fix(33792),t1);}

/* k16762 in k16759 in k16756 in k16753 in k16750 in k16747 in k16744 in k16741 in k16602 in k16599 in k16596 in k16593 in k16537 in k16534 in k16531 in k16528 in k16525 in k16522 in k16519 in k16516 in k15271 in k15202 in k15009 in k15006 in k14901 in k14850 in k7607 in k7604 in k5838 in k5545 in k5542 in k5538 in k5247 in k5244 in k5241 in k5238 */
static void C_ccall f_16764(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word ab[19],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_16764,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_16767,a[2]=((C_word*)t0)[2],tmp=(C_word)a,a+=3,tmp);
t3=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_30650,a[2]=t2,tmp=(C_word)a,a+=3,tmp);
t4=(C_word)C_a_i_cons(&a,2,C_fix(29696),C_SCHEME_END_OF_LIST);
t5=(C_word)C_a_i_cons(&a,2,C_fix(14592),t4);
t6=(C_word)C_a_i_cons(&a,2,lf[289],t5);
t7=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_30658,a[2]=t6,a[3]=t3,tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 364  simple-unit-parser");
f_15604(t7,C_fix(35072));}

/* k30656 in k16762 in k16759 in k16756 in k16753 in k16750 in k16747 in k16744 in k16741 in k16602 in k16599 in k16596 in k16593 in k16537 in k16534 in k16531 in k16528 in k16525 in k16522 in k16519 in k16516 in k15271 in k15202 in k15009 in k15006 in k14901 in k14850 in k7607 in k7604 in k5838 in k5545 in k5542 in k5538 in k5247 in k5244 in k5241 in k5238 */
static void C_ccall f_30658(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[5],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_30658,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_30662,a[2]=t1,a[3]=((C_word*)t0)[2],a[4]=((C_word*)t0)[3],tmp=(C_word)a,a+=5,tmp);
C_trace("ChickenBridge.scm: 364  simple-unit-emitter");
f_15612(t2,lf[351]);}

/* k30660 in k30656 in k16762 in k16759 in k16756 in k16753 in k16750 in k16747 in k16744 in k16741 in k16602 in k16599 in k16596 in k16593 in k16537 in k16534 in k16531 in k16528 in k16525 in k16522 in k16519 in k16516 in k15271 in k15202 in k15009 in k15006 in k14901 in k14850 in k7607 in k7604 in k5838 in k5545 in k5542 in k5538 in k5247 in k5244 in k5241 in k5238 */
static void C_ccall f_30662(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 364  make-rule");
f_14905(((C_word*)t0)[4],lf[753],C_fix(35072),((C_word*)t0)[3],((C_word*)t0)[2],t1);}

/* k30648 in k16762 in k16759 in k16756 in k16753 in k16750 in k16747 in k16744 in k16741 in k16602 in k16599 in k16596 in k16593 in k16537 in k16534 in k16531 in k16528 in k16525 in k16522 in k16519 in k16516 in k15271 in k15202 in k15009 in k15006 in k14901 in k14850 in k7607 in k7604 in k5838 in k5545 in k5542 in k5538 in k5247 in k5244 in k5241 in k5238 */
static void C_ccall f_30650(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 364  hash-table-set!");
t2=C_retrieve(lf[660]);
((C_proc5)C_retrieve_proc(t2))(5,t2,((C_word*)t0)[2],C_retrieve2(lf[256],"*rules*"),C_fix(35072),t1);}

/* k16765 in k16762 in k16759 in k16756 in k16753 in k16750 in k16747 in k16744 in k16741 in k16602 in k16599 in k16596 in k16593 in k16537 in k16534 in k16531 in k16528 in k16525 in k16522 in k16519 in k16516 in k15271 in k15202 in k15009 in k15006 in k14901 in k14850 in k7607 in k7604 in k5838 in k5545 in k5542 in k5538 in k5247 in k5244 in k5241 in k5238 */
static void C_ccall f_16767(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word ab[19],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_16767,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_16770,a[2]=((C_word*)t0)[2],tmp=(C_word)a,a+=3,tmp);
t3=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_30622,a[2]=t2,tmp=(C_word)a,a+=3,tmp);
t4=(C_word)C_a_i_cons(&a,2,C_fix(29696),C_SCHEME_END_OF_LIST);
t5=(C_word)C_a_i_cons(&a,2,C_fix(13568),t4);
t6=(C_word)C_a_i_cons(&a,2,lf[289],t5);
t7=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_30630,a[2]=t6,a[3]=t3,tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 364  simple-unit-parser");
f_15604(t7,C_fix(35584));}

/* k30628 in k16765 in k16762 in k16759 in k16756 in k16753 in k16750 in k16747 in k16744 in k16741 in k16602 in k16599 in k16596 in k16593 in k16537 in k16534 in k16531 in k16528 in k16525 in k16522 in k16519 in k16516 in k15271 in k15202 in k15009 in k15006 in k14901 in k14850 in k7607 in k7604 in k5838 in k5545 in k5542 in k5538 in k5247 in k5244 in k5241 in k5238 */
static void C_ccall f_30630(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[5],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_30630,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_30634,a[2]=t1,a[3]=((C_word*)t0)[2],a[4]=((C_word*)t0)[3],tmp=(C_word)a,a+=5,tmp);
C_trace("ChickenBridge.scm: 364  simple-unit-emitter");
f_15612(t2,lf[350]);}

/* k30632 in k30628 in k16765 in k16762 in k16759 in k16756 in k16753 in k16750 in k16747 in k16744 in k16741 in k16602 in k16599 in k16596 in k16593 in k16537 in k16534 in k16531 in k16528 in k16525 in k16522 in k16519 in k16516 in k15271 in k15202 in k15009 in k15006 in k14901 in k14850 in k7607 in k7604 in k5838 in k5545 in k5542 in k5538 in k5247 in k5244 in k5241 in k5238 */
static void C_ccall f_30634(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 364  make-rule");
f_14905(((C_word*)t0)[4],lf[752],C_fix(35584),((C_word*)t0)[3],((C_word*)t0)[2],t1);}

/* k30620 in k16765 in k16762 in k16759 in k16756 in k16753 in k16750 in k16747 in k16744 in k16741 in k16602 in k16599 in k16596 in k16593 in k16537 in k16534 in k16531 in k16528 in k16525 in k16522 in k16519 in k16516 in k15271 in k15202 in k15009 in k15006 in k14901 in k14850 in k7607 in k7604 in k5838 in k5545 in k5542 in k5538 in k5247 in k5244 in k5241 in k5238 */
static void C_ccall f_30622(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 364  hash-table-set!");
t2=C_retrieve(lf[660]);
((C_proc5)C_retrieve_proc(t2))(5,t2,((C_word*)t0)[2],C_retrieve2(lf[256],"*rules*"),C_fix(35584),t1);}

/* k16768 in k16765 in k16762 in k16759 in k16756 in k16753 in k16750 in k16747 in k16744 in k16741 in k16602 in k16599 in k16596 in k16593 in k16537 in k16534 in k16531 in k16528 in k16525 in k16522 in k16519 in k16516 in k15271 in k15202 in k15009 in k15006 in k14901 in k14850 in k7607 in k7604 in k5838 in k5545 in k5542 in k5538 in k5247 in k5244 in k5241 in k5238 */
static void C_ccall f_16770(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word ab[19],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_16770,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_16773,a[2]=((C_word*)t0)[2],tmp=(C_word)a,a+=3,tmp);
t3=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_30594,a[2]=t2,tmp=(C_word)a,a+=3,tmp);
t4=(C_word)C_a_i_cons(&a,2,C_fix(29696),C_SCHEME_END_OF_LIST);
t5=(C_word)C_a_i_cons(&a,2,C_fix(17152),t4);
t6=(C_word)C_a_i_cons(&a,2,lf[289],t5);
t7=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_30602,a[2]=t6,a[3]=t3,tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 364  simple-unit-parser");
f_15604(t7,C_fix(35328));}

/* k30600 in k16768 in k16765 in k16762 in k16759 in k16756 in k16753 in k16750 in k16747 in k16744 in k16741 in k16602 in k16599 in k16596 in k16593 in k16537 in k16534 in k16531 in k16528 in k16525 in k16522 in k16519 in k16516 in k15271 in k15202 in k15009 in k15006 in k14901 in k14850 in k7607 in k7604 in k5838 in k5545 in k5542 in k5538 in k5247 in k5244 in k5241 in k5238 */
static void C_ccall f_30602(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[5],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_30602,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_30606,a[2]=t1,a[3]=((C_word*)t0)[2],a[4]=((C_word*)t0)[3],tmp=(C_word)a,a+=5,tmp);
C_trace("ChickenBridge.scm: 364  simple-unit-emitter");
f_15612(t2,lf[751]);}

/* k30604 in k30600 in k16768 in k16765 in k16762 in k16759 in k16756 in k16753 in k16750 in k16747 in k16744 in k16741 in k16602 in k16599 in k16596 in k16593 in k16537 in k16534 in k16531 in k16528 in k16525 in k16522 in k16519 in k16516 in k15271 in k15202 in k15009 in k15006 in k14901 in k14850 in k7607 in k7604 in k5838 in k5545 in k5542 in k5538 in k5247 in k5244 in k5241 in k5238 */
static void C_ccall f_30606(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 364  make-rule");
f_14905(((C_word*)t0)[4],lf[750],C_fix(35328),((C_word*)t0)[3],((C_word*)t0)[2],t1);}

/* k30592 in k16768 in k16765 in k16762 in k16759 in k16756 in k16753 in k16750 in k16747 in k16744 in k16741 in k16602 in k16599 in k16596 in k16593 in k16537 in k16534 in k16531 in k16528 in k16525 in k16522 in k16519 in k16516 in k15271 in k15202 in k15009 in k15006 in k14901 in k14850 in k7607 in k7604 in k5838 in k5545 in k5542 in k5538 in k5247 in k5244 in k5241 in k5238 */
static void C_ccall f_30594(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 364  hash-table-set!");
t2=C_retrieve(lf[660]);
((C_proc5)C_retrieve_proc(t2))(5,t2,((C_word*)t0)[2],C_retrieve2(lf[256],"*rules*"),C_fix(35328),t1);}

/* k16771 in k16768 in k16765 in k16762 in k16759 in k16756 in k16753 in k16750 in k16747 in k16744 in k16741 in k16602 in k16599 in k16596 in k16593 in k16537 in k16534 in k16531 in k16528 in k16525 in k16522 in k16519 in k16516 in k15271 in k15202 in k15009 in k15006 in k14901 in k14850 in k7607 in k7604 in k5838 in k5545 in k5542 in k5538 in k5247 in k5244 in k5241 in k5238 */
static void C_ccall f_16773(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word ab[19],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_16773,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_16776,a[2]=((C_word*)t0)[2],tmp=(C_word)a,a+=3,tmp);
t3=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_30566,a[2]=t2,tmp=(C_word)a,a+=3,tmp);
t4=(C_word)C_a_i_cons(&a,2,C_fix(29696),C_SCHEME_END_OF_LIST);
t5=(C_word)C_a_i_cons(&a,2,C_fix(18432),t4);
t6=(C_word)C_a_i_cons(&a,2,lf[289],t5);
t7=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_30574,a[2]=t6,a[3]=t3,tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 364  simple-unit-parser");
f_15604(t7,C_fix(34816));}

/* k30572 in k16771 in k16768 in k16765 in k16762 in k16759 in k16756 in k16753 in k16750 in k16747 in k16744 in k16741 in k16602 in k16599 in k16596 in k16593 in k16537 in k16534 in k16531 in k16528 in k16525 in k16522 in k16519 in k16516 in k15271 in k15202 in k15009 in k15006 in k14901 in k14850 in k7607 in k7604 in k5838 in k5545 in k5542 in k5538 in k5247 in k5244 in k5241 in k5238 */
static void C_ccall f_30574(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[5],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_30574,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_30578,a[2]=t1,a[3]=((C_word*)t0)[2],a[4]=((C_word*)t0)[3],tmp=(C_word)a,a+=5,tmp);
C_trace("ChickenBridge.scm: 364  simple-unit-emitter");
f_15612(t2,lf[361]);}

/* k30576 in k30572 in k16771 in k16768 in k16765 in k16762 in k16759 in k16756 in k16753 in k16750 in k16747 in k16744 in k16741 in k16602 in k16599 in k16596 in k16593 in k16537 in k16534 in k16531 in k16528 in k16525 in k16522 in k16519 in k16516 in k15271 in k15202 in k15009 in k15006 in k14901 in k14850 in k7607 in k7604 in k5838 in k5545 in k5542 in k5538 in k5247 in k5244 in k5241 in k5238 */
static void C_ccall f_30578(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 364  make-rule");
f_14905(((C_word*)t0)[4],lf[749],C_fix(34816),((C_word*)t0)[3],((C_word*)t0)[2],t1);}

/* k30564 in k16771 in k16768 in k16765 in k16762 in k16759 in k16756 in k16753 in k16750 in k16747 in k16744 in k16741 in k16602 in k16599 in k16596 in k16593 in k16537 in k16534 in k16531 in k16528 in k16525 in k16522 in k16519 in k16516 in k15271 in k15202 in k15009 in k15006 in k14901 in k14850 in k7607 in k7604 in k5838 in k5545 in k5542 in k5538 in k5247 in k5244 in k5241 in k5238 */
static void C_ccall f_30566(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 364  hash-table-set!");
t2=C_retrieve(lf[660]);
((C_proc5)C_retrieve_proc(t2))(5,t2,((C_word*)t0)[2],C_retrieve2(lf[256],"*rules*"),C_fix(34816),t1);}

/* k16774 in k16771 in k16768 in k16765 in k16762 in k16759 in k16756 in k16753 in k16750 in k16747 in k16744 in k16741 in k16602 in k16599 in k16596 in k16593 in k16537 in k16534 in k16531 in k16528 in k16525 in k16522 in k16519 in k16516 in k15271 in k15202 in k15009 in k15006 in k14901 in k14850 in k7607 in k7604 in k5838 in k5545 in k5542 in k5538 in k5247 in k5244 in k5241 in k5238 */
static void C_ccall f_16776(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word t14;
C_word t15;
C_word t16;
C_word t17;
C_word t18;
C_word t19;
C_word t20;
C_word t21;
C_word t22;
C_word t23;
C_word t24;
C_word t25;
C_word ab[69],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_16776,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_16779,a[2]=((C_word*)t0)[2],tmp=(C_word)a,a+=3,tmp);
t3=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_30429,a[2]=t2,tmp=(C_word)a,a+=3,tmp);
t4=(C_word)C_a_i_cons(&a,2,C_fix(29696),C_SCHEME_END_OF_LIST);
t5=(C_word)C_a_i_cons(&a,2,C_fix(6144),t4);
t6=(C_word)C_a_i_cons(&a,2,lf[289],t5);
t7=(C_word)C_a_i_cons(&a,2,C_fix(29696),C_SCHEME_END_OF_LIST);
t8=(C_word)C_a_i_cons(&a,2,t6,t7);
t9=(C_word)C_a_i_cons(&a,2,lf[290],t8);
t10=(C_word)C_a_i_cons(&a,2,C_fix(29696),C_SCHEME_END_OF_LIST);
t11=(C_word)C_a_i_cons(&a,2,C_fix(6144),t10);
t12=(C_word)C_a_i_cons(&a,2,lf[289],t11);
t13=(C_word)C_a_i_cons(&a,2,C_fix(29696),C_SCHEME_END_OF_LIST);
t14=(C_word)C_a_i_cons(&a,2,t12,t13);
t15=(C_word)C_a_i_cons(&a,2,lf[290],t14);
t16=(C_word)C_a_i_cons(&a,2,t15,C_SCHEME_END_OF_LIST);
t17=(C_word)C_a_i_cons(&a,2,C_fix(256),t16);
t18=(C_word)C_a_i_cons(&a,2,lf[226],t17);
t19=(C_word)C_a_i_cons(&a,2,t18,C_SCHEME_END_OF_LIST);
t20=(C_word)C_a_i_cons(&a,2,t9,t19);
t21=(C_word)C_a_i_cons(&a,2,C_fix(15616),t20);
t22=(C_word)C_a_i_cons(&a,2,lf[289],t21);
t23=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_30435,a[2]=((C_word)li481),tmp=(C_word)a,a+=3,tmp);
t24=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_30465,a[2]=((C_word)li482),tmp=(C_word)a,a+=3,tmp);
C_trace("ChickenBridge.scm: 364  make-rule");
f_14905(t3,lf[748],C_fix(36096),t22,t23,t24);}

/* a30464 in k16774 in k16771 in k16768 in k16765 in k16762 in k16759 in k16756 in k16753 in k16750 in k16747 in k16744 in k16741 in k16602 in k16599 in k16596 in k16593 in k16537 in k16534 in k16531 in k16528 in k16525 in k16522 in k16519 in k16516 in k15271 in k15202 in k15009 in k15006 in k14901 in k14850 in k7607 in k7604 in k5838 in k5545 in k5542 in k5538 in k5247 in k5244 in k5241 in k5238 */
static void C_ccall f_30465(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4){
C_word tmp;
C_word t5;
C_word *a;
if(c!=5) C_bad_argc_2(c,5,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr5,(void*)f_30465,5,t0,t1,t2,t3,t4);}
t5=t1;
((C_proc2)(void*)(*((C_word*)t5+1)))(2,t5,lf[747]);}

/* a30434 in k16774 in k16771 in k16768 in k16765 in k16762 in k16759 in k16756 in k16753 in k16750 in k16747 in k16744 in k16741 in k16602 in k16599 in k16596 in k16593 in k16537 in k16534 in k16531 in k16528 in k16525 in k16522 in k16519 in k16516 in k15271 in k15202 in k15009 in k15006 in k14901 in k14850 in k7607 in k7604 in k5838 in k5545 in k5542 in k5538 in k5247 in k5244 in k5241 in k5238 */
static void C_ccall f_30435(C_word c,C_word t0,C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word ab[5],*a=ab;
if(c!=4) C_bad_argc_2(c,4,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr4,(void*)f_30435,4,t0,t1,t2,t3);}
t4=(C_word)C_i_car(t2);
t5=(C_word)C_i_cadr(t2);
t6=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_30459,a[2]=t1,a[3]=t4,a[4]=t5,tmp=(C_word)a,a+=5,tmp);
t7=(C_word)C_i_caddr(t2);
C_trace("ChickenBridge.scm: 364  remove-token-type");
f_16541(t6,t7,C_fix(256));}

/* k30457 in a30434 in k16774 in k16771 in k16768 in k16765 in k16762 in k16759 in k16756 in k16753 in k16750 in k16747 in k16744 in k16741 in k16602 in k16599 in k16596 in k16593 in k16537 in k16534 in k16531 in k16528 in k16525 in k16522 in k16519 in k16516 in k15271 in k15202 in k15009 in k15006 in k14901 in k14850 in k7607 in k7604 in k5838 in k5545 in k5542 in k5538 in k5247 in k5244 in k5241 in k5238 */
static void C_ccall f_30459(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[6],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_30459,2,t0,t1);}
t2=(C_word)C_a_i_cons(&a,2,((C_word*)t0)[4],t1);
t3=(C_word)C_a_i_cons(&a,2,((C_word*)t0)[3],t2);
C_trace("ChickenBridge.scm: 364  make-parse-unit");
f_15206(((C_word*)t0)[2],C_fix(36096),t3,C_SCHEME_FALSE);}

/* k30427 in k16774 in k16771 in k16768 in k16765 in k16762 in k16759 in k16756 in k16753 in k16750 in k16747 in k16744 in k16741 in k16602 in k16599 in k16596 in k16593 in k16537 in k16534 in k16531 in k16528 in k16525 in k16522 in k16519 in k16516 in k15271 in k15202 in k15009 in k15006 in k14901 in k14850 in k7607 in k7604 in k5838 in k5545 in k5542 in k5538 in k5247 in k5244 in k5241 in k5238 */
static void C_ccall f_30429(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 364  hash-table-set!");
t2=C_retrieve(lf[660]);
((C_proc5)C_retrieve_proc(t2))(5,t2,((C_word*)t0)[2],C_retrieve2(lf[256],"*rules*"),C_fix(36096),t1);}

/* k16777 in k16774 in k16771 in k16768 in k16765 in k16762 in k16759 in k16756 in k16753 in k16750 in k16747 in k16744 in k16741 in k16602 in k16599 in k16596 in k16593 in k16537 in k16534 in k16531 in k16528 in k16525 in k16522 in k16519 in k16516 in k15271 in k15202 in k15009 in k15006 in k14901 in k14850 in k7607 in k7604 in k5838 in k5545 in k5542 in k5538 in k5247 in k5244 in k5241 in k5238 */
static void C_ccall f_16779(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word ab[19],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_16779,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_16782,a[2]=((C_word*)t0)[2],tmp=(C_word)a,a+=3,tmp);
t3=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_30371,a[2]=t2,tmp=(C_word)a,a+=3,tmp);
t4=(C_word)C_a_i_cons(&a,2,C_fix(29696),C_SCHEME_END_OF_LIST);
t5=(C_word)C_a_i_cons(&a,2,C_fix(19712),t4);
t6=(C_word)C_a_i_cons(&a,2,lf[289],t5);
t7=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_30379,a[2]=t6,a[3]=t3,tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 364  simple-unit-parser");
f_15604(t7,C_fix(31744));}

/* k30377 in k16777 in k16774 in k16771 in k16768 in k16765 in k16762 in k16759 in k16756 in k16753 in k16750 in k16747 in k16744 in k16741 in k16602 in k16599 in k16596 in k16593 in k16537 in k16534 in k16531 in k16528 in k16525 in k16522 in k16519 in k16516 in k15271 in k15202 in k15009 in k15006 in k14901 in k14850 in k7607 in k7604 in k5838 in k5545 in k5542 in k5538 in k5247 in k5244 in k5241 in k5238 */
static void C_ccall f_30379(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[3],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_30379,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_30381,a[2]=((C_word)li480),tmp=(C_word)a,a+=3,tmp);
C_trace("ChickenBridge.scm: 364  make-rule");
f_14905(((C_word*)t0)[3],lf[746],C_fix(31744),((C_word*)t0)[2],t1,t2);}

/* a30380 in k30377 in k16777 in k16774 in k16771 in k16768 in k16765 in k16762 in k16759 in k16756 in k16753 in k16750 in k16747 in k16744 in k16741 in k16602 in k16599 in k16596 in k16593 in k16537 in k16534 in k16531 in k16528 in k16525 in k16522 in k16519 in k16516 in k15271 in k15202 in k15009 in k15006 in k14901 in k14850 in k7607 in k7604 in k5838 in k5545 in k5542 in k5538 in k5247 in k5244 in k5241 in k5238 */
static void C_ccall f_30381(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4){
C_word tmp;
C_word t5;
C_word t6;
C_word ab[5],*a=ab;
if(c!=5) C_bad_argc_2(c,5,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr5,(void*)f_30381,5,t0,t1,t2,t3,t4);}
t5=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_30385,a[2]=t4,a[3]=t3,a[4]=t1,tmp=(C_word)a,a+=5,tmp);
C_trace("ChickenBridge.scm: 364  parse-unit-parsed");
f_15245(t5,t2);}

/* k30383 in a30380 in k30377 in k16777 in k16774 in k16771 in k16768 in k16765 in k16762 in k16759 in k16756 in k16753 in k16750 in k16747 in k16744 in k16741 in k16602 in k16599 in k16596 in k16593 in k16537 in k16534 in k16531 in k16528 in k16525 in k16522 in k16519 in k16516 in k15271 in k15202 in k15009 in k15006 in k14901 in k14850 in k7607 in k7604 in k5838 in k5545 in k5542 in k5538 in k5247 in k5244 in k5241 in k5238 */
static void C_ccall f_30385(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[11],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_30385,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_30388,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=t1,a[5]=((C_word*)t0)[4],tmp=(C_word)a,a+=6,tmp);
t3=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_30413,a[2]=t1,a[3]=((C_word*)t0)[2],a[4]=t2,tmp=(C_word)a,a+=5,tmp);
C_trace("ChickenBridge.scm: 364  get-emit-info");
f_15323(t3,lf[724],((C_word*)t0)[3]);}

/* k30411 in k30383 in a30380 in k30377 in k16777 in k16774 in k16771 in k16768 in k16765 in k16762 in k16759 in k16756 in k16753 in k16750 in k16747 in k16744 in k16741 in k16602 in k16599 in k16596 in k16593 in k16537 in k16534 in k16531 in k16528 in k16525 in k16522 in k16519 in k16516 in k15271 in k15202 in k15009 in k15006 in k14901 in k14850 in k7607 in k7604 in k5838 in k5545 in k5542 in k5538 in k5247 in k5244 in k5241 in k5238 */
static void C_ccall f_30413(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_30413,2,t0,t1);}
if(C_truep(t1)){
t2=((C_word*)t0)[4];
f_30388(2,t2,C_SCHEME_UNDEFINED);}
else{
t2=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_30401,a[2]=((C_word*)t0)[4],a[3]=((C_word*)t0)[3],tmp=(C_word)a,a+=4,tmp);
t3=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_30405,a[2]=t2,tmp=(C_word)a,a+=3,tmp);
t4=(C_word)C_i_car(((C_word*)t0)[2]);
C_trace("ChickenBridge.scm: 364  parse-unit-position");
f_15263(t3,t4);}}

/* k30403 in k30411 in k30383 in a30380 in k30377 in k16777 in k16774 in k16771 in k16768 in k16765 in k16762 in k16759 in k16756 in k16753 in k16750 in k16747 in k16744 in k16741 in k16602 in k16599 in k16596 in k16593 in k16537 in k16534 in k16531 in k16528 in k16525 in k16522 in k16519 in k16516 in k15271 in k15202 in k15009 in k15006 in k14901 in k14850 in k7607 in k7604 in k5838 in k5545 in k5542 in k5538 in k5247 in k5244 in k5241 in k5238 */
static void C_ccall f_30405(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 364  make-parse-error");
f_15155(((C_word*)t0)[2],lf[745],t1);}

/* k30399 in k30411 in k30383 in a30380 in k30377 in k16777 in k16774 in k16771 in k16768 in k16765 in k16762 in k16759 in k16756 in k16753 in k16750 in k16747 in k16744 in k16741 in k16602 in k16599 in k16596 in k16593 in k16537 in k16534 in k16531 in k16528 in k16525 in k16522 in k16519 in k16516 in k15271 in k15202 in k15009 in k15006 in k14901 in k14850 in k7607 in k7604 in k5838 in k5545 in k5542 in k5538 in k5247 in k5244 in k5241 in k5238 */
static void C_ccall f_30401(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 364  errf");
t2=((C_word*)t0)[3];
((C_proc3)C_retrieve_proc(t2))(3,t2,((C_word*)t0)[2],t1);}

/* k30386 in k30383 in a30380 in k30377 in k16777 in k16774 in k16771 in k16768 in k16765 in k16762 in k16759 in k16756 in k16753 in k16750 in k16747 in k16744 in k16741 in k16602 in k16599 in k16596 in k16593 in k16537 in k16534 in k16531 in k16528 in k16525 in k16522 in k16519 in k16516 in k15271 in k15202 in k15009 in k15006 in k14901 in k14850 in k7607 in k7604 in k5838 in k5545 in k5542 in k5538 in k5247 in k5244 in k5241 in k5238 */
static void C_ccall f_30388(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 364  emit");
f_15363(((C_word*)t0)[5],((C_word*)t0)[4],((C_word*)t0)[3],((C_word*)t0)[2]);}

/* k30369 in k16777 in k16774 in k16771 in k16768 in k16765 in k16762 in k16759 in k16756 in k16753 in k16750 in k16747 in k16744 in k16741 in k16602 in k16599 in k16596 in k16593 in k16537 in k16534 in k16531 in k16528 in k16525 in k16522 in k16519 in k16516 in k15271 in k15202 in k15009 in k15006 in k14901 in k14850 in k7607 in k7604 in k5838 in k5545 in k5542 in k5538 in k5247 in k5244 in k5241 in k5238 */
static void C_ccall f_30371(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 364  hash-table-set!");
t2=C_retrieve(lf[660]);
((C_proc5)C_retrieve_proc(t2))(5,t2,((C_word*)t0)[2],C_retrieve2(lf[256],"*rules*"),C_fix(31744),t1);}

/* k16780 in k16777 in k16774 in k16771 in k16768 in k16765 in k16762 in k16759 in k16756 in k16753 in k16750 in k16747 in k16744 in k16741 in k16602 in k16599 in k16596 in k16593 in k16537 in k16534 in k16531 in k16528 in k16525 in k16522 in k16519 in k16516 in k15271 in k15202 in k15009 in k15006 in k14901 in k14850 in k7607 in k7604 in k5838 in k5545 in k5542 in k5538 in k5247 in k5244 in k5241 in k5238 */
static void C_ccall f_16782(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word ab[19],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_16782,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_16785,a[2]=((C_word*)t0)[2],tmp=(C_word)a,a+=3,tmp);
t3=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_30310,a[2]=t2,tmp=(C_word)a,a+=3,tmp);
t4=(C_word)C_a_i_cons(&a,2,C_fix(29696),C_SCHEME_END_OF_LIST);
t5=(C_word)C_a_i_cons(&a,2,C_fix(18688),t4);
t6=(C_word)C_a_i_cons(&a,2,lf[289],t5);
t7=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_30318,a[2]=t6,a[3]=t3,tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 364  simple-unit-parser");
f_15604(t7,C_fix(31488));}

/* k30316 in k16780 in k16777 in k16774 in k16771 in k16768 in k16765 in k16762 in k16759 in k16756 in k16753 in k16750 in k16747 in k16744 in k16741 in k16602 in k16599 in k16596 in k16593 in k16537 in k16534 in k16531 in k16528 in k16525 in k16522 in k16519 in k16516 in k15271 in k15202 in k15009 in k15006 in k14901 in k14850 in k7607 in k7604 in k5838 in k5545 in k5542 in k5538 in k5247 in k5244 in k5241 in k5238 */
static void C_ccall f_30318(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[3],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_30318,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_30320,a[2]=((C_word)li479),tmp=(C_word)a,a+=3,tmp);
C_trace("ChickenBridge.scm: 364  make-rule");
f_14905(((C_word*)t0)[3],lf[744],C_fix(31488),((C_word*)t0)[2],t1,t2);}

/* a30319 in k30316 in k16780 in k16777 in k16774 in k16771 in k16768 in k16765 in k16762 in k16759 in k16756 in k16753 in k16750 in k16747 in k16744 in k16741 in k16602 in k16599 in k16596 in k16593 in k16537 in k16534 in k16531 in k16528 in k16525 in k16522 in k16519 in k16516 in k15271 in k15202 in k15009 in k15006 in k14901 in k14850 in k7607 in k7604 in k5838 in k5545 in k5542 in k5538 in k5247 in k5244 in k5241 in k5238 */
static void C_ccall f_30320(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4){
C_word tmp;
C_word t5;
C_word t6;
C_word ab[5],*a=ab;
if(c!=5) C_bad_argc_2(c,5,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr5,(void*)f_30320,5,t0,t1,t2,t3,t4);}
t5=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_30324,a[2]=t4,a[3]=t3,a[4]=t1,tmp=(C_word)a,a+=5,tmp);
C_trace("ChickenBridge.scm: 364  parse-unit-parsed");
f_15245(t5,t2);}

/* k30322 in a30319 in k30316 in k16780 in k16777 in k16774 in k16771 in k16768 in k16765 in k16762 in k16759 in k16756 in k16753 in k16750 in k16747 in k16744 in k16741 in k16602 in k16599 in k16596 in k16593 in k16537 in k16534 in k16531 in k16528 in k16525 in k16522 in k16519 in k16516 in k15271 in k15202 in k15009 in k15006 in k14901 in k14850 in k7607 in k7604 in k5838 in k5545 in k5542 in k5538 in k5247 in k5244 in k5241 in k5238 */
static void C_ccall f_30324(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[11],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_30324,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_30327,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=t1,a[5]=((C_word*)t0)[4],tmp=(C_word)a,a+=6,tmp);
t3=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_30355,a[2]=t1,a[3]=((C_word*)t0)[2],a[4]=t2,tmp=(C_word)a,a+=5,tmp);
C_trace("ChickenBridge.scm: 364  get-emit-info");
f_15323(t3,lf[711],((C_word*)t0)[3]);}

/* k30353 in k30322 in a30319 in k30316 in k16780 in k16777 in k16774 in k16771 in k16768 in k16765 in k16762 in k16759 in k16756 in k16753 in k16750 in k16747 in k16744 in k16741 in k16602 in k16599 in k16596 in k16593 in k16537 in k16534 in k16531 in k16528 in k16525 in k16522 in k16519 in k16516 in k15271 in k15202 in k15009 in k15006 in k14901 in k14850 in k7607 in k7604 in k5838 in k5545 in k5542 in k5538 in k5247 in k5244 in k5241 in k5238 */
static void C_ccall f_30355(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_30355,2,t0,t1);}
if(C_truep(t1)){
t2=((C_word*)t0)[4];
f_30327(2,t2,C_SCHEME_UNDEFINED);}
else{
t2=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_30343,a[2]=((C_word*)t0)[4],a[3]=((C_word*)t0)[3],tmp=(C_word)a,a+=4,tmp);
t3=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_30347,a[2]=t2,tmp=(C_word)a,a+=3,tmp);
t4=(C_word)C_i_car(((C_word*)t0)[2]);
C_trace("ChickenBridge.scm: 364  parse-unit-position");
f_15263(t3,t4);}}

/* k30345 in k30353 in k30322 in a30319 in k30316 in k16780 in k16777 in k16774 in k16771 in k16768 in k16765 in k16762 in k16759 in k16756 in k16753 in k16750 in k16747 in k16744 in k16741 in k16602 in k16599 in k16596 in k16593 in k16537 in k16534 in k16531 in k16528 in k16525 in k16522 in k16519 in k16516 in k15271 in k15202 in k15009 in k15006 in k14901 in k14850 in k7607 in k7604 in k5838 in k5545 in k5542 in k5538 in k5247 in k5244 in k5241 in k5238 */
static void C_ccall f_30347(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 364  make-parse-error");
f_15155(((C_word*)t0)[2],lf[743],t1);}

/* k30341 in k30353 in k30322 in a30319 in k30316 in k16780 in k16777 in k16774 in k16771 in k16768 in k16765 in k16762 in k16759 in k16756 in k16753 in k16750 in k16747 in k16744 in k16741 in k16602 in k16599 in k16596 in k16593 in k16537 in k16534 in k16531 in k16528 in k16525 in k16522 in k16519 in k16516 in k15271 in k15202 in k15009 in k15006 in k14901 in k14850 in k7607 in k7604 in k5838 in k5545 in k5542 in k5538 in k5247 in k5244 in k5241 in k5238 */
static void C_ccall f_30343(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 364  errf");
t2=((C_word*)t0)[3];
((C_proc3)C_retrieve_proc(t2))(3,t2,((C_word*)t0)[2],t1);}

/* k30325 in k30322 in a30319 in k30316 in k16780 in k16777 in k16774 in k16771 in k16768 in k16765 in k16762 in k16759 in k16756 in k16753 in k16750 in k16747 in k16744 in k16741 in k16602 in k16599 in k16596 in k16593 in k16537 in k16534 in k16531 in k16528 in k16525 in k16522 in k16519 in k16516 in k15271 in k15202 in k15009 in k15006 in k14901 in k14850 in k7607 in k7604 in k5838 in k5545 in k5542 in k5538 in k5247 in k5244 in k5241 in k5238 */
static void C_ccall f_30327(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[6],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_30327,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_30330,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],tmp=(C_word)a,a+=6,tmp);
C_trace("ChickenBridge.scm: 364  set-emit-info!");
f_15345(t2,lf[711],lf[710],((C_word*)t0)[3]);}

/* k30328 in k30325 in k30322 in a30319 in k30316 in k16780 in k16777 in k16774 in k16771 in k16768 in k16765 in k16762 in k16759 in k16756 in k16753 in k16750 in k16747 in k16744 in k16741 in k16602 in k16599 in k16596 in k16593 in k16537 in k16534 in k16531 in k16528 in k16525 in k16522 in k16519 in k16516 in k15271 in k15202 in k15009 in k15006 in k14901 in k14850 in k7607 in k7604 in k5838 in k5545 in k5542 in k5538 in k5247 in k5244 in k5241 in k5238 */
static void C_ccall f_30330(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 364  emit");
f_15363(((C_word*)t0)[5],((C_word*)t0)[4],((C_word*)t0)[3],((C_word*)t0)[2]);}

/* k30308 in k16780 in k16777 in k16774 in k16771 in k16768 in k16765 in k16762 in k16759 in k16756 in k16753 in k16750 in k16747 in k16744 in k16741 in k16602 in k16599 in k16596 in k16593 in k16537 in k16534 in k16531 in k16528 in k16525 in k16522 in k16519 in k16516 in k15271 in k15202 in k15009 in k15006 in k14901 in k14850 in k7607 in k7604 in k5838 in k5545 in k5542 in k5538 in k5247 in k5244 in k5241 in k5238 */
static void C_ccall f_30310(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 364  hash-table-set!");
t2=C_retrieve(lf[660]);
((C_proc5)C_retrieve_proc(t2))(5,t2,((C_word*)t0)[2],C_retrieve2(lf[256],"*rules*"),C_fix(31488),t1);}

/* k16783 in k16780 in k16777 in k16774 in k16771 in k16768 in k16765 in k16762 in k16759 in k16756 in k16753 in k16750 in k16747 in k16744 in k16741 in k16602 in k16599 in k16596 in k16593 in k16537 in k16534 in k16531 in k16528 in k16525 in k16522 in k16519 in k16516 in k15271 in k15202 in k15009 in k15006 in k14901 in k14850 in k7607 in k7604 in k5838 in k5545 in k5542 in k5538 in k5247 in k5244 in k5241 in k5238 */
static void C_ccall f_16785(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word ab[33],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_16785,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_16788,a[2]=((C_word*)t0)[2],tmp=(C_word)a,a+=3,tmp);
t3=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_30219,a[2]=t2,tmp=(C_word)a,a+=3,tmp);
t4=(C_word)C_a_i_cons(&a,2,C_fix(29696),C_SCHEME_END_OF_LIST);
t5=(C_word)C_a_i_cons(&a,2,C_fix(10756),t4);
t6=(C_word)C_a_i_cons(&a,2,C_fix(25088),t5);
t7=(C_word)C_a_i_cons(&a,2,lf[289],t6);
t8=(C_word)C_a_i_cons(&a,2,C_fix(25088),C_SCHEME_END_OF_LIST);
t9=(C_word)C_a_i_cons(&a,2,t7,t8);
t10=(C_word)C_a_i_cons(&a,2,lf[290],t9);
t11=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_30225,a[2]=((C_word)li476),tmp=(C_word)a,a+=3,tmp);
t12=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_30260,a[2]=((C_word)li478),tmp=(C_word)a,a+=3,tmp);
C_trace("ChickenBridge.scm: 364  make-rule");
f_14905(t3,lf[742],C_fix(30208),t10,t11,t12);}

/* a30259 in k16783 in k16780 in k16777 in k16774 in k16771 in k16768 in k16765 in k16762 in k16759 in k16756 in k16753 in k16750 in k16747 in k16744 in k16741 in k16602 in k16599 in k16596 in k16593 in k16537 in k16534 in k16531 in k16528 in k16525 in k16522 in k16519 in k16516 in k15271 in k15202 in k15009 in k15006 in k14901 in k14850 in k7607 in k7604 in k5838 in k5545 in k5542 in k5538 in k5247 in k5244 in k5241 in k5238 */
static void C_ccall f_30260(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4){
C_word tmp;
C_word t5;
C_word t6;
C_word t7;
C_word ab[9],*a=ab;
if(c!=5) C_bad_argc_2(c,5,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr5,(void*)f_30260,5,t0,t1,t2,t3,t4);}
t5=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_30266,a[2]=t4,a[3]=t3,a[4]=((C_word)li477),tmp=(C_word)a,a+=5,tmp);
t6=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_30274,a[2]=t5,a[3]=t1,tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 364  parse-unit-parsed");
f_15245(t6,t2);}

/* k30272 in a30259 in k16783 in k16780 in k16777 in k16774 in k16771 in k16768 in k16765 in k16762 in k16759 in k16756 in k16753 in k16750 in k16747 in k16744 in k16741 in k16602 in k16599 in k16596 in k16593 in k16537 in k16534 in k16531 in k16528 in k16525 in k16522 in k16519 in k16516 in k15271 in k15202 in k15009 in k15006 in k14901 in k14850 in k7607 in k7604 in k5838 in k5545 in k5542 in k5538 in k5247 in k5244 in k5241 in k5238 */
static void C_ccall f_30274(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("map");
t2=*((C_word*)lf[19]+1);
((C_proc4)(void*)(*((C_word*)t2+1)))(4,t2,((C_word*)t0)[3],((C_word*)t0)[2],t1);}

/* a30265 in a30259 in k16783 in k16780 in k16777 in k16774 in k16771 in k16768 in k16765 in k16762 in k16759 in k16756 in k16753 in k16750 in k16747 in k16744 in k16741 in k16602 in k16599 in k16596 in k16593 in k16537 in k16534 in k16531 in k16528 in k16525 in k16522 in k16519 in k16516 in k15271 in k15202 in k15009 in k15006 in k14901 in k14850 in k7607 in k7604 in k5838 in k5545 in k5542 in k5538 in k5247 in k5244 in k5241 in k5238 */
static void C_ccall f_30266(C_word c,C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word *a;
if(c!=3) C_bad_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr3,(void*)f_30266,3,t0,t1,t2);}
C_trace("ChickenBridge.scm: 364  emit");
f_15363(t1,t2,((C_word*)t0)[3],((C_word*)t0)[2]);}

/* a30224 in k16783 in k16780 in k16777 in k16774 in k16771 in k16768 in k16765 in k16762 in k16759 in k16756 in k16753 in k16750 in k16747 in k16744 in k16741 in k16602 in k16599 in k16596 in k16593 in k16537 in k16534 in k16531 in k16528 in k16525 in k16522 in k16519 in k16516 in k15271 in k15202 in k15009 in k15006 in k14901 in k14850 in k7607 in k7604 in k5838 in k5545 in k5542 in k5538 in k5247 in k5244 in k5241 in k5238 */
static void C_ccall f_30225(C_word c,C_word t0,C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word ab[10],*a=ab;
if(c!=4) C_bad_argc_2(c,4,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr4,(void*)f_30225,4,t0,t1,t2,t3);}
if(C_truep((C_word)C_i_pairp(t2))){
t4=(C_word)C_i_car(t2);
t5=(C_word)C_i_caddr(t2);
t6=(C_word)C_a_i_list(&a,2,t4,t5);
C_trace("ChickenBridge.scm: 364  make-parse-unit");
f_15206(t1,C_fix(30208),t6,C_SCHEME_FALSE);}
else{
t4=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_30258,a[2]=t1,a[3]=t2,tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 364  make-parse-unit");
f_15206(t4,C_fix(4608),lf[741],C_SCHEME_FALSE);}}

/* k30256 in a30224 in k16783 in k16780 in k16777 in k16774 in k16771 in k16768 in k16765 in k16762 in k16759 in k16756 in k16753 in k16750 in k16747 in k16744 in k16741 in k16602 in k16599 in k16596 in k16593 in k16537 in k16534 in k16531 in k16528 in k16525 in k16522 in k16519 in k16516 in k15271 in k15202 in k15009 in k15006 in k14901 in k14850 in k7607 in k7604 in k5838 in k5545 in k5542 in k5538 in k5247 in k5244 in k5241 in k5238 */
static void C_ccall f_30258(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[6],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_30258,2,t0,t1);}
t2=(C_word)C_a_i_list(&a,2,((C_word*)t0)[3],t1);
C_trace("ChickenBridge.scm: 364  make-parse-unit");
f_15206(((C_word*)t0)[2],C_fix(30208),t2,C_SCHEME_FALSE);}

/* k30217 in k16783 in k16780 in k16777 in k16774 in k16771 in k16768 in k16765 in k16762 in k16759 in k16756 in k16753 in k16750 in k16747 in k16744 in k16741 in k16602 in k16599 in k16596 in k16593 in k16537 in k16534 in k16531 in k16528 in k16525 in k16522 in k16519 in k16516 in k15271 in k15202 in k15009 in k15006 in k14901 in k14850 in k7607 in k7604 in k5838 in k5545 in k5542 in k5538 in k5247 in k5244 in k5241 in k5238 */
static void C_ccall f_30219(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 364  hash-table-set!");
t2=C_retrieve(lf[660]);
((C_proc5)C_retrieve_proc(t2))(5,t2,((C_word*)t0)[2],C_retrieve2(lf[256],"*rules*"),C_fix(30208),t1);}

/* k16786 in k16783 in k16780 in k16777 in k16774 in k16771 in k16768 in k16765 in k16762 in k16759 in k16756 in k16753 in k16750 in k16747 in k16744 in k16741 in k16602 in k16599 in k16596 in k16593 in k16537 in k16534 in k16531 in k16528 in k16525 in k16522 in k16519 in k16516 in k15271 in k15202 in k15009 in k15006 in k14901 in k14850 in k7607 in k7604 in k5838 in k5545 in k5542 in k5538 in k5247 in k5244 in k5241 in k5238 */
static void C_ccall f_16788(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word ab[33],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_16788,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_16791,a[2]=((C_word*)t0)[2],tmp=(C_word)a,a+=3,tmp);
t3=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_30117,a[2]=t2,tmp=(C_word)a,a+=3,tmp);
t4=(C_word)C_a_i_cons(&a,2,C_fix(30208),C_SCHEME_END_OF_LIST);
t5=(C_word)C_a_i_cons(&a,2,C_fix(256),t4);
t6=(C_word)C_a_i_cons(&a,2,lf[226],t5);
t7=(C_word)C_a_i_cons(&a,2,t6,C_SCHEME_END_OF_LIST);
t8=(C_word)C_a_i_cons(&a,2,C_fix(30208),t7);
t9=(C_word)C_a_i_cons(&a,2,C_fix(20480),t8);
t10=(C_word)C_a_i_cons(&a,2,lf[289],t9);
t11=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_30123,a[2]=((C_word)li473),tmp=(C_word)a,a+=3,tmp);
t12=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_30166,a[2]=((C_word)li475),tmp=(C_word)a,a+=3,tmp);
C_trace("ChickenBridge.scm: 364  make-rule");
f_14905(t3,lf[740],C_fix(29952),t10,t11,t12);}

/* a30165 in k16786 in k16783 in k16780 in k16777 in k16774 in k16771 in k16768 in k16765 in k16762 in k16759 in k16756 in k16753 in k16750 in k16747 in k16744 in k16741 in k16602 in k16599 in k16596 in k16593 in k16537 in k16534 in k16531 in k16528 in k16525 in k16522 in k16519 in k16516 in k15271 in k15202 in k15009 in k15006 in k14901 in k14850 in k7607 in k7604 in k5838 in k5545 in k5542 in k5538 in k5247 in k5244 in k5241 in k5238 */
static void C_ccall f_30166(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4){
C_word tmp;
C_word t5;
C_word t6;
C_word ab[5],*a=ab;
if(c!=5) C_bad_argc_2(c,5,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr5,(void*)f_30166,5,t0,t1,t2,t3,t4);}
t5=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_30170,a[2]=t2,a[3]=t1,a[4]=t4,tmp=(C_word)a,a+=5,tmp);
C_trace("ChickenBridge.scm: 364  add-emit-info");
f_15335(t5,lf[739],C_SCHEME_TRUE,t3);}

/* k30168 in a30165 in k16786 in k16783 in k16780 in k16777 in k16774 in k16771 in k16768 in k16765 in k16762 in k16759 in k16756 in k16753 in k16750 in k16747 in k16744 in k16741 in k16602 in k16599 in k16596 in k16593 in k16537 in k16534 in k16531 in k16528 in k16525 in k16522 in k16519 in k16516 in k15271 in k15202 in k15009 in k15006 in k14901 in k14850 in k7607 in k7604 in k5838 in k5545 in k5542 in k5538 in k5247 in k5244 in k5241 in k5238 */
static void C_ccall f_30170(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_30170,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_30175,a[2]=((C_word*)t0)[4],a[3]=t1,a[4]=((C_word)li474),tmp=(C_word)a,a+=5,tmp);
t3=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_30183,a[2]=t2,a[3]=((C_word*)t0)[3],tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 364  parse-unit-parsed");
f_15245(t3,((C_word*)t0)[2]);}

/* k30181 in k30168 in a30165 in k16786 in k16783 in k16780 in k16777 in k16774 in k16771 in k16768 in k16765 in k16762 in k16759 in k16756 in k16753 in k16750 in k16747 in k16744 in k16741 in k16602 in k16599 in k16596 in k16593 in k16537 in k16534 in k16531 in k16528 in k16525 in k16522 in k16519 in k16516 in k15271 in k15202 in k15009 in k15006 in k14901 in k14850 in k7607 in k7604 in k5838 in k5545 in k5542 in k5538 in k5247 in k5244 in k5241 in k5238 */
static void C_ccall f_30183(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("map");
t2=*((C_word*)lf[19]+1);
((C_proc4)(void*)(*((C_word*)t2+1)))(4,t2,((C_word*)t0)[3],((C_word*)t0)[2],t1);}

/* a30174 in k30168 in a30165 in k16786 in k16783 in k16780 in k16777 in k16774 in k16771 in k16768 in k16765 in k16762 in k16759 in k16756 in k16753 in k16750 in k16747 in k16744 in k16741 in k16602 in k16599 in k16596 in k16593 in k16537 in k16534 in k16531 in k16528 in k16525 in k16522 in k16519 in k16516 in k15271 in k15202 in k15009 in k15006 in k14901 in k14850 in k7607 in k7604 in k5838 in k5545 in k5542 in k5538 in k5247 in k5244 in k5241 in k5238 */
static void C_ccall f_30175(C_word c,C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word *a;
if(c!=3) C_bad_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr3,(void*)f_30175,3,t0,t1,t2);}
C_trace("ChickenBridge.scm: 364  emit");
f_15363(t1,t2,((C_word*)t0)[3],((C_word*)t0)[2]);}

/* a30122 in k16786 in k16783 in k16780 in k16777 in k16774 in k16771 in k16768 in k16765 in k16762 in k16759 in k16756 in k16753 in k16750 in k16747 in k16744 in k16741 in k16602 in k16599 in k16596 in k16593 in k16537 in k16534 in k16531 in k16528 in k16525 in k16522 in k16519 in k16516 in k15271 in k15202 in k15009 in k15006 in k14901 in k14850 in k7607 in k7604 in k5838 in k5545 in k5542 in k5538 in k5247 in k5244 in k5241 in k5238 */
static void C_ccall f_30123(C_word c,C_word t0,C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word ab[7],*a=ab;
if(c!=4) C_bad_argc_2(c,4,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr4,(void*)f_30123,4,t0,t1,t2,t3);}
if(C_truep((C_word)C_i_caddr(t2))){
t4=(C_word)C_i_cadr(t2);
t5=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_30156,a[2]=t1,a[3]=t4,tmp=(C_word)a,a+=4,tmp);
t6=(C_word)C_i_caddr(t2);
C_trace("ChickenBridge.scm: 364  remove-token-type");
f_16541(t5,t6,C_fix(256));}
else{
t4=(C_word)C_i_cadr(t2);
t5=(C_word)C_a_i_list(&a,1,t4);
C_trace("ChickenBridge.scm: 364  make-parse-unit");
f_15206(t1,C_fix(29952),t5,C_SCHEME_FALSE);}}

/* k30154 in a30122 in k16786 in k16783 in k16780 in k16777 in k16774 in k16771 in k16768 in k16765 in k16762 in k16759 in k16756 in k16753 in k16750 in k16747 in k16744 in k16741 in k16602 in k16599 in k16596 in k16593 in k16537 in k16534 in k16531 in k16528 in k16525 in k16522 in k16519 in k16516 in k15271 in k15202 in k15009 in k15006 in k14901 in k14850 in k7607 in k7604 in k5838 in k5545 in k5542 in k5538 in k5247 in k5244 in k5241 in k5238 */
static void C_ccall f_30156(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[3],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_30156,2,t0,t1);}
t2=(C_word)C_a_i_cons(&a,2,((C_word*)t0)[3],t1);
C_trace("ChickenBridge.scm: 364  make-parse-unit");
f_15206(((C_word*)t0)[2],C_fix(29952),t2,C_SCHEME_FALSE);}

/* k30115 in k16786 in k16783 in k16780 in k16777 in k16774 in k16771 in k16768 in k16765 in k16762 in k16759 in k16756 in k16753 in k16750 in k16747 in k16744 in k16741 in k16602 in k16599 in k16596 in k16593 in k16537 in k16534 in k16531 in k16528 in k16525 in k16522 in k16519 in k16516 in k15271 in k15202 in k15009 in k15006 in k14901 in k14850 in k7607 in k7604 in k5838 in k5545 in k5542 in k5538 in k5247 in k5244 in k5241 in k5238 */
static void C_ccall f_30117(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 364  hash-table-set!");
t2=C_retrieve(lf[660]);
((C_proc5)C_retrieve_proc(t2))(5,t2,((C_word*)t0)[2],C_retrieve2(lf[256],"*rules*"),C_fix(29952),t1);}

/* k16789 in k16786 in k16783 in k16780 in k16777 in k16774 in k16771 in k16768 in k16765 in k16762 in k16759 in k16756 in k16753 in k16750 in k16747 in k16744 in k16741 in k16602 in k16599 in k16596 in k16593 in k16537 in k16534 in k16531 in k16528 in k16525 in k16522 in k16519 in k16516 in k15271 in k15202 in k15009 in k15006 in k14901 in k14850 in k7607 in k7604 in k5838 in k5545 in k5542 in k5538 in k5247 in k5244 in k5241 in k5238 */
static void C_ccall f_16791(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word t14;
C_word t15;
C_word t16;
C_word t17;
C_word t18;
C_word t19;
C_word t20;
C_word t21;
C_word ab[57],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_16791,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_16794,a[2]=((C_word*)t0)[2],tmp=(C_word)a,a+=3,tmp);
t3=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_30031,a[2]=t2,tmp=(C_word)a,a+=3,tmp);
t4=(C_word)C_a_i_cons(&a,2,C_fix(25088),C_SCHEME_END_OF_LIST);
t5=(C_word)C_a_i_cons(&a,2,C_fix(27136),t4);
t6=(C_word)C_a_i_cons(&a,2,lf[290],t5);
t7=(C_word)C_a_i_cons(&a,2,C_fix(12800),C_SCHEME_END_OF_LIST);
t8=(C_word)C_a_i_cons(&a,2,C_fix(12544),t7);
t9=(C_word)C_a_i_cons(&a,2,C_fix(12288),t8);
t10=(C_word)C_a_i_cons(&a,2,C_fix(12032),t9);
t11=(C_word)C_a_i_cons(&a,2,C_fix(11776),t10);
t12=(C_word)C_a_i_cons(&a,2,C_fix(11268),t11);
t13=(C_word)C_a_i_cons(&a,2,C_fix(11012),t12);
t14=(C_word)C_a_i_cons(&a,2,C_fix(10756),t13);
t15=(C_word)C_a_i_cons(&a,2,lf[290],t14);
t16=(C_word)C_a_i_cons(&a,2,C_fix(29696),C_SCHEME_END_OF_LIST);
t17=(C_word)C_a_i_cons(&a,2,t15,t16);
t18=(C_word)C_a_i_cons(&a,2,t6,t17);
t19=(C_word)C_a_i_cons(&a,2,lf[289],t18);
t20=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_30037,a[2]=((C_word)li472),tmp=(C_word)a,a+=3,tmp);
C_trace("ChickenBridge.scm: 364  make-rule");
f_14905(t3,lf[738],C_fix(30720),t19,t20,C_SCHEME_FALSE);}

/* a30036 in k16789 in k16786 in k16783 in k16780 in k16777 in k16774 in k16771 in k16768 in k16765 in k16762 in k16759 in k16756 in k16753 in k16750 in k16747 in k16744 in k16741 in k16602 in k16599 in k16596 in k16593 in k16537 in k16534 in k16531 in k16528 in k16525 in k16522 in k16519 in k16516 in k15271 in k15202 in k15009 in k15006 in k14901 in k14850 in k7607 in k7604 in k5838 in k5545 in k5542 in k5538 in k5247 in k5244 in k5241 in k5238 */
static void C_ccall f_30037(C_word c,C_word t0,C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word *a;
if(c!=4) C_bad_argc_2(c,4,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr4,(void*)f_30037,4,t0,t1,t2,t3);}
C_trace("ChickenBridge.scm: 364  make-parse-unit");
f_15206(t1,C_fix(30720),t2,C_SCHEME_FALSE);}

/* k30029 in k16789 in k16786 in k16783 in k16780 in k16777 in k16774 in k16771 in k16768 in k16765 in k16762 in k16759 in k16756 in k16753 in k16750 in k16747 in k16744 in k16741 in k16602 in k16599 in k16596 in k16593 in k16537 in k16534 in k16531 in k16528 in k16525 in k16522 in k16519 in k16516 in k15271 in k15202 in k15009 in k15006 in k14901 in k14850 in k7607 in k7604 in k5838 in k5545 in k5542 in k5538 in k5247 in k5244 in k5241 in k5238 */
static void C_ccall f_30031(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 364  hash-table-set!");
t2=C_retrieve(lf[660]);
((C_proc5)C_retrieve_proc(t2))(5,t2,((C_word*)t0)[2],C_retrieve2(lf[256],"*rules*"),C_fix(30720),t1);}

/* k16792 in k16789 in k16786 in k16783 in k16780 in k16777 in k16774 in k16771 in k16768 in k16765 in k16762 in k16759 in k16756 in k16753 in k16750 in k16747 in k16744 in k16741 in k16602 in k16599 in k16596 in k16593 in k16537 in k16534 in k16531 in k16528 in k16525 in k16522 in k16519 in k16516 in k15271 in k15202 in k15009 in k15006 in k14901 in k14850 in k7607 in k7604 in k5838 in k5545 in k5542 in k5538 in k5247 in k5244 in k5241 in k5238 */
static void C_ccall f_16794(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word ab[33],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_16794,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_16797,a[2]=((C_word*)t0)[2],tmp=(C_word)a,a+=3,tmp);
t3=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_29751,a[2]=t2,tmp=(C_word)a,a+=3,tmp);
t4=(C_word)C_a_i_cons(&a,2,C_fix(30720),C_SCHEME_END_OF_LIST);
t5=(C_word)C_a_i_cons(&a,2,C_fix(256),t4);
t6=(C_word)C_a_i_cons(&a,2,lf[226],t5);
t7=(C_word)C_a_i_cons(&a,2,t6,C_SCHEME_END_OF_LIST);
t8=(C_word)C_a_i_cons(&a,2,C_fix(30720),t7);
t9=(C_word)C_a_i_cons(&a,2,C_fix(16640),t8);
t10=(C_word)C_a_i_cons(&a,2,lf[289],t9);
t11=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_29757,a[2]=((C_word)li469),tmp=(C_word)a,a+=3,tmp);
t12=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_29800,a[2]=((C_word)li471),tmp=(C_word)a,a+=3,tmp);
C_trace("ChickenBridge.scm: 364  make-rule");
f_14905(t3,lf[737],C_fix(30464),t10,t11,t12);}

/* a29799 in k16792 in k16789 in k16786 in k16783 in k16780 in k16777 in k16774 in k16771 in k16768 in k16765 in k16762 in k16759 in k16756 in k16753 in k16750 in k16747 in k16744 in k16741 in k16602 in k16599 in k16596 in k16593 in k16537 in k16534 in k16531 in k16528 in k16525 in k16522 in k16519 in k16516 in k15271 in k15202 in k15009 in k15006 in k14901 in k14850 in k7607 in k7604 in k5838 in k5545 in k5542 in k5538 in k5247 in k5244 in k5241 in k5238 */
static void C_ccall f_29800(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4){
C_word tmp;
C_word t5;
C_word t6;
C_word ab[5],*a=ab;
if(c!=5) C_bad_argc_2(c,5,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr5,(void*)f_29800,5,t0,t1,t2,t3,t4);}
t5=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_29804,a[2]=t1,a[3]=t4,a[4]=t3,tmp=(C_word)a,a+=5,tmp);
C_trace("ChickenBridge.scm: 364  parse-unit-parsed");
f_15245(t5,t2);}

/* k29802 in a29799 in k16792 in k16789 in k16786 in k16783 in k16780 in k16777 in k16774 in k16771 in k16768 in k16765 in k16762 in k16759 in k16756 in k16753 in k16750 in k16747 in k16744 in k16741 in k16602 in k16599 in k16596 in k16593 in k16537 in k16534 in k16531 in k16528 in k16525 in k16522 in k16519 in k16516 in k15271 in k15202 in k15009 in k15006 in k14901 in k14850 in k7607 in k7604 in k5838 in k5545 in k5542 in k5538 in k5247 in k5244 in k5241 in k5238 */
static void C_ccall f_29804(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word ab[15],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_29804,2,t0,t1);}
t2=(C_word)C_a_i_list(&a,1,lf[316]);
t3=t2;
t4=(*a=C_VECTOR_TYPE|1,a[1]=t3,tmp=(C_word)a,a+=2,tmp);
t5=C_SCHEME_UNDEFINED;
t6=(*a=C_VECTOR_TYPE|1,a[1]=t5,tmp=(C_word)a,a+=2,tmp);
t7=C_set_block_item(t6,0,(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_29812,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=t6,a[5]=t4,a[6]=t2,a[7]=((C_word)li470),tmp=(C_word)a,a+=8,tmp));
t8=((C_word*)t6)[1];
f_29812(t8,((C_word*)t0)[2],t1);}

/* do2666 in k29802 in a29799 in k16792 in k16789 in k16786 in k16783 in k16780 in k16777 in k16774 in k16771 in k16768 in k16765 in k16762 in k16759 in k16756 in k16753 in k16750 in k16747 in k16744 in k16741 in k16602 in k16599 in k16596 in k16593 in k16537 in k16534 in k16531 in k16528 in k16525 in k16522 in k16519 in k16516 in k15271 in k15202 in k15009 in k15006 in k14901 in k14850 in k7607 in k7604 in k5838 in k5545 in k5542 in k5538 in k5247 in k5244 in k5241 in k5238 */
static void C_fcall f_29812(C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word ab[8],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_29812,NULL,3,t0,t1,t2);}
if(C_truep((C_word)C_i_nullp(t2))){
t3=(C_word)C_i_cddr(((C_word*)t0)[6]);
t4=(C_word)C_i_nullp(t3);
t5=t1;
((C_proc2)(void*)(*((C_word*)t5+1)))(2,t5,(C_truep(t4)?(C_word)C_i_cadr(((C_word*)t0)[6]):((C_word*)t0)[6]));}
else{
t3=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_29835,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=t1,a[5]=((C_word*)t0)[4],a[6]=t2,a[7]=((C_word*)t0)[5],tmp=(C_word)a,a+=8,tmp);
t4=(C_word)C_i_car(t2);
C_trace("ChickenBridge.scm: 364  parse-unit-parsed");
f_15245(t3,t4);}}

/* k29833 in do2666 in k29802 in a29799 in k16792 in k16789 in k16786 in k16783 in k16780 in k16777 in k16774 in k16771 in k16768 in k16765 in k16762 in k16759 in k16756 in k16753 in k16750 in k16747 in k16744 in k16741 in k16602 in k16599 in k16596 in k16593 in k16537 in k16534 in k16531 in k16528 in k16525 in k16522 in k16519 in k16516 in k15271 in k15202 in k15009 in k15006 in k14901 in k14850 in k7607 in k7604 in k5838 in k5545 in k5542 in k5538 in k5247 in k5244 in k5241 in k5238 */
static void C_ccall f_29835(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_29835,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|8,a[1]=(C_word)f_29838,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=t1,a[5]=((C_word*)t0)[4],a[6]=((C_word*)t0)[5],a[7]=((C_word*)t0)[6],a[8]=((C_word*)t0)[7],tmp=(C_word)a,a+=9,tmp);
t3=(C_word)C_i_car(t1);
C_trace("ChickenBridge.scm: 364  emit");
f_15363(t2,t3,((C_word*)t0)[3],((C_word*)t0)[2]);}

/* k29836 in k29833 in do2666 in k29802 in a29799 in k16792 in k16789 in k16786 in k16783 in k16780 in k16777 in k16774 in k16771 in k16768 in k16765 in k16762 in k16759 in k16756 in k16753 in k16750 in k16747 in k16744 in k16741 in k16602 in k16599 in k16596 in k16593 in k16537 in k16534 in k16531 in k16528 in k16525 in k16522 in k16519 in k16516 in k15271 in k15202 in k15009 in k15006 in k14901 in k14850 in k7607 in k7604 in k5838 in k5545 in k5542 in k5538 in k5247 in k5244 in k5241 in k5238 */
static void C_ccall f_29838(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[10],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_29838,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|9,a[1]=(C_word)f_29841,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=t1,a[6]=((C_word*)t0)[5],a[7]=((C_word*)t0)[6],a[8]=((C_word*)t0)[7],a[9]=((C_word*)t0)[8],tmp=(C_word)a,a+=10,tmp);
t3=(C_word)C_i_cadr(((C_word*)t0)[4]);
C_trace("ChickenBridge.scm: 364  parse-unit-type");
f_15227(t2,t3);}

/* k29839 in k29836 in k29833 in do2666 in k29802 in a29799 in k16792 in k16789 in k16786 in k16783 in k16780 in k16777 in k16774 in k16771 in k16768 in k16765 in k16762 in k16759 in k16756 in k16753 in k16750 in k16747 in k16744 in k16741 in k16602 in k16599 in k16596 in k16593 in k16537 in k16534 in k16531 in k16528 in k16525 in k16522 in k16519 in k16516 in k15271 in k15202 in k15009 in k15006 in k14901 in k14850 in k7607 in k7604 in k5838 in k5545 in k5542 in k5538 in k5247 in k5244 in k5241 in k5238 */
static void C_ccall f_29841(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[8],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_29841,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_29844,a[2]=t1,a[3]=((C_word*)t0)[5],a[4]=((C_word*)t0)[6],a[5]=((C_word*)t0)[7],a[6]=((C_word*)t0)[8],a[7]=((C_word*)t0)[9],tmp=(C_word)a,a+=8,tmp);
t3=(C_word)C_i_caddr(((C_word*)t0)[4]);
C_trace("ChickenBridge.scm: 364  emit");
f_15363(t2,t3,((C_word*)t0)[3],((C_word*)t0)[2]);}

/* k29842 in k29839 in k29836 in k29833 in do2666 in k29802 in a29799 in k16792 in k16789 in k16786 in k16783 in k16780 in k16777 in k16774 in k16771 in k16768 in k16765 in k16762 in k16759 in k16756 in k16753 in k16750 in k16747 in k16744 in k16741 in k16602 in k16599 in k16596 in k16593 in k16537 in k16534 in k16531 in k16528 in k16525 in k16522 in k16519 in k16516 in k15271 in k15202 in k15009 in k15006 in k14901 in k14850 in k7607 in k7604 in k5838 in k5545 in k5542 in k5538 in k5247 in k5244 in k5241 in k5238 */
static void C_ccall f_29844(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[17],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_29844,2,t0,t1);}
t2=C_SCHEME_FALSE;
t3=(*a=C_VECTOR_TYPE|1,a[1]=t2,tmp=(C_word)a,a+=2,tmp);
t4=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_29847,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],a[7]=t3,tmp=(C_word)a,a+=8,tmp);
t5=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_29904,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=t4,a[5]=t1,a[6]=t3,tmp=(C_word)a,a+=7,tmp);
C_trace("ChickenBridge.scm: 364  SalType=?");
f_16497(t5,((C_word*)t0)[2],C_fix(10756));}

/* k29902 in k29842 in k29839 in k29836 in k29833 in do2666 in k29802 in a29799 in k16792 in k16789 in k16786 in k16783 in k16780 in k16777 in k16774 in k16771 in k16768 in k16765 in k16762 in k16759 in k16756 in k16753 in k16750 in k16747 in k16744 in k16741 in k16602 in k16599 in k16596 in k16593 in k16537 in k16534 in k16531 in k16528 in k16525 in k16522 in k16519 in k16516 in k15271 in k15202 in k15009 in k15006 in k14901 in k14850 in k7607 in k7604 in k5838 in k5545 in k5542 in k5538 in k5247 in k5244 in k5241 in k5238 */
static void C_ccall f_29904(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_29904,2,t0,t1);}
if(C_truep(t1)){
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,((C_word*)t0)[5]);
t3=((C_word*)t0)[4];
f_29847(t3,t2);}
else{
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_29911,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[6],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[3],tmp=(C_word)a,a+=7,tmp);
C_trace("ChickenBridge.scm: 364  SalType=?");
f_16497(t2,((C_word*)t0)[2],C_fix(11776));}}

/* k29909 in k29902 in k29842 in k29839 in k29836 in k29833 in do2666 in k29802 in a29799 in k16792 in k16789 in k16786 in k16783 in k16780 in k16777 in k16774 in k16771 in k16768 in k16765 in k16762 in k16759 in k16756 in k16753 in k16750 in k16747 in k16744 in k16741 in k16602 in k16599 in k16596 in k16593 in k16537 in k16534 in k16531 in k16528 in k16525 in k16522 in k16519 in k16516 in k15271 in k15202 in k15009 in k15006 in k14901 in k14850 in k7607 in k7604 in k5838 in k5545 in k5542 in k5538 in k5247 in k5244 in k5241 in k5238 */
static void C_ccall f_29911(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[16],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_29911,2,t0,t1);}
if(C_truep(t1)){
t2=(C_word)C_a_i_list(&a,3,lf[305],((C_word*)t0)[6],((C_word*)t0)[5]);
t3=C_mutate(((C_word *)((C_word*)t0)[4])+1,t2);
t4=((C_word*)t0)[3];
f_29847(t4,t3);}
else{
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_29921,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],tmp=(C_word)a,a+=7,tmp);
C_trace("ChickenBridge.scm: 364  SalType=?");
f_16497(t2,((C_word*)t0)[2],C_fix(12032));}}

/* k29919 in k29909 in k29902 in k29842 in k29839 in k29836 in k29833 in do2666 in k29802 in a29799 in k16792 in k16789 in k16786 in k16783 in k16780 in k16777 in k16774 in k16771 in k16768 in k16765 in k16762 in k16759 in k16756 in k16753 in k16750 in k16747 in k16744 in k16741 in k16602 in k16599 in k16596 in k16593 in k16537 in k16534 in k16531 in k16528 in k16525 in k16522 in k16519 in k16516 in k15271 in k15202 in k15009 in k15006 in k14901 in k14850 in k7607 in k7604 in k5838 in k5545 in k5542 in k5538 in k5247 in k5244 in k5241 in k5238 */
static void C_ccall f_29921(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[16],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_29921,2,t0,t1);}
if(C_truep(t1)){
t2=(C_word)C_a_i_list(&a,3,lf[226],((C_word*)t0)[6],((C_word*)t0)[5]);
t3=C_mutate(((C_word *)((C_word*)t0)[4])+1,t2);
t4=((C_word*)t0)[3];
f_29847(t4,t3);}
else{
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_29931,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[5],tmp=(C_word)a,a+=7,tmp);
C_trace("ChickenBridge.scm: 364  SalType=?");
f_16497(t2,((C_word*)t0)[2],C_fix(12288));}}

/* k29929 in k29919 in k29909 in k29902 in k29842 in k29839 in k29836 in k29833 in do2666 in k29802 in a29799 in k16792 in k16789 in k16786 in k16783 in k16780 in k16777 in k16774 in k16771 in k16768 in k16765 in k16762 in k16759 in k16756 in k16753 in k16750 in k16747 in k16744 in k16741 in k16602 in k16599 in k16596 in k16593 in k16537 in k16534 in k16531 in k16528 in k16525 in k16522 in k16519 in k16516 in k15271 in k15202 in k15009 in k15006 in k14901 in k14850 in k7607 in k7604 in k5838 in k5545 in k5542 in k5538 in k5247 in k5244 in k5241 in k5238 */
static void C_ccall f_29931(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[22],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_29931,2,t0,t1);}
if(C_truep(t1)){
t2=(C_word)C_a_i_list(&a,2,lf[496],((C_word*)t0)[6]);
t3=(C_word)C_a_i_list(&a,3,lf[20],((C_word*)t0)[5],t2);
t4=C_mutate(((C_word *)((C_word*)t0)[4])+1,t3);
t5=((C_word*)t0)[3];
f_29847(t5,t4);}
else{
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_29945,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],tmp=(C_word)a,a+=7,tmp);
C_trace("ChickenBridge.scm: 364  SalType=?");
f_16497(t2,((C_word*)t0)[2],C_fix(12544));}}

/* k29943 in k29929 in k29919 in k29909 in k29902 in k29842 in k29839 in k29836 in k29833 in do2666 in k29802 in a29799 in k16792 in k16789 in k16786 in k16783 in k16780 in k16777 in k16774 in k16771 in k16768 in k16765 in k16762 in k16759 in k16756 in k16753 in k16750 in k16747 in k16744 in k16741 in k16602 in k16599 in k16596 in k16593 in k16537 in k16534 in k16531 in k16528 in k16525 in k16522 in k16519 in k16516 in k15271 in k15202 in k15009 in k15006 in k14901 in k14850 in k7607 in k7604 in k5838 in k5545 in k5542 in k5538 in k5247 in k5244 in k5241 in k5238 */
static void C_ccall f_29945(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[16],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_29945,2,t0,t1);}
if(C_truep(t1)){
t2=(C_word)C_a_i_list(&a,3,lf[697],((C_word*)t0)[6],((C_word*)t0)[5]);
t3=C_mutate(((C_word *)((C_word*)t0)[4])+1,t2);
t4=((C_word*)t0)[3];
f_29847(t4,t3);}
else{
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_29955,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[5],tmp=(C_word)a,a+=7,tmp);
C_trace("ChickenBridge.scm: 364  SalType=?");
f_16497(t2,((C_word*)t0)[2],C_fix(12800));}}

/* k29953 in k29943 in k29929 in k29919 in k29909 in k29902 in k29842 in k29839 in k29836 in k29833 in do2666 in k29802 in a29799 in k16792 in k16789 in k16786 in k16783 in k16780 in k16777 in k16774 in k16771 in k16768 in k16765 in k16762 in k16759 in k16756 in k16753 in k16750 in k16747 in k16744 in k16741 in k16602 in k16599 in k16596 in k16593 in k16537 in k16534 in k16531 in k16528 in k16525 in k16522 in k16519 in k16516 in k15271 in k15202 in k15009 in k15006 in k14901 in k14850 in k7607 in k7604 in k5838 in k5545 in k5542 in k5538 in k5247 in k5244 in k5241 in k5238 */
static void C_ccall f_29955(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[16],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_29955,2,t0,t1);}
if(C_truep(t1)){
t2=(C_word)C_a_i_list(&a,3,lf[20],((C_word*)t0)[6],((C_word*)t0)[5]);
t3=C_mutate(((C_word *)((C_word*)t0)[4])+1,t2);
t4=((C_word*)t0)[3];
f_29847(t4,t3);}
else{
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_29965,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],tmp=(C_word)a,a+=7,tmp);
C_trace("ChickenBridge.scm: 364  SalType=?");
f_16497(t2,((C_word*)t0)[2],C_fix(11012));}}

/* k29963 in k29953 in k29943 in k29929 in k29919 in k29909 in k29902 in k29842 in k29839 in k29836 in k29833 in do2666 in k29802 in a29799 in k16792 in k16789 in k16786 in k16783 in k16780 in k16777 in k16774 in k16771 in k16768 in k16765 in k16762 in k16759 in k16756 in k16753 in k16750 in k16747 in k16744 in k16741 in k16602 in k16599 in k16596 in k16593 in k16537 in k16534 in k16531 in k16528 in k16525 in k16522 in k16519 in k16516 in k15271 in k15202 in k15009 in k15006 in k14901 in k14850 in k7607 in k7604 in k5838 in k5545 in k5542 in k5538 in k5247 in k5244 in k5241 in k5238 */
static void C_ccall f_29965(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[15],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_29965,2,t0,t1);}
if(C_truep(t1)){
t2=(C_word)C_a_i_list(&a,3,lf[736],((C_word*)t0)[6],((C_word*)t0)[5]);
t3=C_mutate(((C_word *)((C_word*)t0)[4])+1,t2);
t4=((C_word*)t0)[3];
f_29847(t4,t3);}
else{
t2=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_29975,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],tmp=(C_word)a,a+=6,tmp);
C_trace("ChickenBridge.scm: 364  SalType=?");
f_16497(t2,((C_word*)t0)[2],C_fix(11268));}}

/* k29973 in k29963 in k29953 in k29943 in k29929 in k29919 in k29909 in k29902 in k29842 in k29839 in k29836 in k29833 in do2666 in k29802 in a29799 in k16792 in k16789 in k16786 in k16783 in k16780 in k16777 in k16774 in k16771 in k16768 in k16765 in k16762 in k16759 in k16756 in k16753 in k16750 in k16747 in k16744 in k16741 in k16602 in k16599 in k16596 in k16593 in k16537 in k16534 in k16531 in k16528 in k16525 in k16522 in k16519 in k16516 in k15271 in k15202 in k15009 in k15006 in k14901 in k14850 in k7607 in k7604 in k5838 in k5545 in k5542 in k5538 in k5247 in k5244 in k5241 in k5238 */
static void C_ccall f_29975(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_29975,2,t0,t1);}
if(C_truep(t1)){
t2=(C_word)C_a_i_list(&a,3,lf[187],((C_word*)t0)[5],((C_word*)t0)[4]);
t3=C_mutate(((C_word *)((C_word*)t0)[3])+1,t2);
t4=((C_word*)t0)[2];
f_29847(t4,t3);}
else{
t2=((C_word*)t0)[2];
f_29847(t2,C_SCHEME_UNDEFINED);}}

/* k29845 in k29842 in k29839 in k29836 in k29833 in do2666 in k29802 in a29799 in k16792 in k16789 in k16786 in k16783 in k16780 in k16777 in k16774 in k16771 in k16768 in k16765 in k16762 in k16759 in k16756 in k16753 in k16750 in k16747 in k16744 in k16741 in k16602 in k16599 in k16596 in k16593 in k16537 in k16534 in k16531 in k16528 in k16525 in k16522 in k16519 in k16516 in k15271 in k15202 in k15009 in k15006 in k14901 in k14850 in k7607 in k7604 in k5838 in k5545 in k5542 in k5538 in k5247 in k5244 in k5241 in k5238 */
static void C_fcall f_29847(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[12],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_29847,NULL,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_29850,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_29871,a[2]=t2,a[3]=((C_word*)t0)[7],a[4]=((C_word*)t0)[2],tmp=(C_word)a,a+=5,tmp);
if(C_truep((C_word)C_i_pairp(((C_word*)t0)[2]))){
t4=(C_word)C_i_car(((C_word*)t0)[2]);
t5=t3;
f_29871(t5,(C_word)C_eqp(t4,lf[735]));}
else{
t4=t3;
f_29871(t4,C_SCHEME_FALSE);}}

/* k29869 in k29845 in k29842 in k29839 in k29836 in k29833 in do2666 in k29802 in a29799 in k16792 in k16789 in k16786 in k16783 in k16780 in k16777 in k16774 in k16771 in k16768 in k16765 in k16762 in k16759 in k16756 in k16753 in k16750 in k16747 in k16744 in k16741 in k16602 in k16599 in k16596 in k16593 in k16537 in k16534 in k16531 in k16528 in k16525 in k16522 in k16519 in k16516 in k15271 in k15202 in k15009 in k15006 in k14901 in k14850 in k7607 in k7604 in k5838 in k5545 in k5542 in k5538 in k5247 in k5244 in k5241 in k5238 */
static void C_fcall f_29871(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word ab[27],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_29871,NULL,2,t0,t1);}
if(C_truep(t1)){
t2=(C_word)C_i_cadr(((C_word*)t0)[4]);
t3=(C_word)C_i_caddr(((C_word*)t0)[4]);
t4=(C_word)C_a_i_list(&a,3,lf[733],t2,t3);
t5=(C_word)C_a_i_list(&a,3,lf[734],t4,((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_29850(t7,t6);}
else{
t2=(C_word)C_a_i_list(&a,3,lf[14],((C_word*)t0)[4],((C_word*)((C_word*)t0)[3])[1]);
t3=C_mutate(((C_word *)((C_word*)t0)[3])+1,t2);
t4=((C_word*)t0)[2];
f_29850(t4,t3);}}

/* k29848 in k29845 in k29842 in k29839 in k29836 in k29833 in do2666 in k29802 in a29799 in k16792 in k16789 in k16786 in k16783 in k16780 in k16777 in k16774 in k16771 in k16768 in k16765 in k16762 in k16759 in k16756 in k16753 in k16750 in k16747 in k16744 in k16741 in k16602 in k16599 in k16596 in k16593 in k16537 in k16534 in k16531 in k16528 in k16525 in k16522 in k16519 in k16516 in k15271 in k15202 in k15009 in k15006 in k14901 in k14850 in k7607 in k7604 in k5838 in k5545 in k5542 in k5538 in k5247 in k5244 in k5241 in k5238 */
static void C_fcall f_29850(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word ab[3],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_29850,NULL,2,t0,t1);}
t2=(C_word)C_a_i_list(&a,1,((C_word*)((C_word*)t0)[6])[1]);
t3=(C_word)C_i_set_cdr(((C_word*)((C_word*)t0)[5])[1],t2);
t4=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[5])[1]);
t5=C_mutate(((C_word *)((C_word*)t0)[5])+1,t4);
t6=(C_word)C_i_cdr(((C_word*)t0)[4]);
t7=((C_word*)((C_word*)t0)[3])[1];
f_29812(t7,((C_word*)t0)[2],t6);}

/* a29756 in k16792 in k16789 in k16786 in k16783 in k16780 in k16777 in k16774 in k16771 in k16768 in k16765 in k16762 in k16759 in k16756 in k16753 in k16750 in k16747 in k16744 in k16741 in k16602 in k16599 in k16596 in k16593 in k16537 in k16534 in k16531 in k16528 in k16525 in k16522 in k16519 in k16516 in k15271 in k15202 in k15009 in k15006 in k14901 in k14850 in k7607 in k7604 in k5838 in k5545 in k5542 in k5538 in k5247 in k5244 in k5241 in k5238 */
static void C_ccall f_29757(C_word c,C_word t0,C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word ab[7],*a=ab;
if(c!=4) C_bad_argc_2(c,4,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr4,(void*)f_29757,4,t0,t1,t2,t3);}
if(C_truep((C_word)C_i_caddr(t2))){
t4=(C_word)C_i_cadr(t2);
t5=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_29790,a[2]=t1,a[3]=t4,tmp=(C_word)a,a+=4,tmp);
t6=(C_word)C_i_caddr(t2);
C_trace("ChickenBridge.scm: 364  remove-token-type");
f_16541(t5,t6,C_fix(256));}
else{
t4=(C_word)C_i_cadr(t2);
t5=(C_word)C_a_i_list(&a,1,t4);
C_trace("ChickenBridge.scm: 364  make-parse-unit");
f_15206(t1,C_fix(30464),t5,C_SCHEME_FALSE);}}

/* k29788 in a29756 in k16792 in k16789 in k16786 in k16783 in k16780 in k16777 in k16774 in k16771 in k16768 in k16765 in k16762 in k16759 in k16756 in k16753 in k16750 in k16747 in k16744 in k16741 in k16602 in k16599 in k16596 in k16593 in k16537 in k16534 in k16531 in k16528 in k16525 in k16522 in k16519 in k16516 in k15271 in k15202 in k15009 in k15006 in k14901 in k14850 in k7607 in k7604 in k5838 in k5545 in k5542 in k5538 in k5247 in k5244 in k5241 in k5238 */
static void C_ccall f_29790(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[3],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_29790,2,t0,t1);}
t2=(C_word)C_a_i_cons(&a,2,((C_word*)t0)[3],t1);
C_trace("ChickenBridge.scm: 364  make-parse-unit");
f_15206(((C_word*)t0)[2],C_fix(30464),t2,C_SCHEME_FALSE);}

/* k29749 in k16792 in k16789 in k16786 in k16783 in k16780 in k16777 in k16774 in k16771 in k16768 in k16765 in k16762 in k16759 in k16756 in k16753 in k16750 in k16747 in k16744 in k16741 in k16602 in k16599 in k16596 in k16593 in k16537 in k16534 in k16531 in k16528 in k16525 in k16522 in k16519 in k16516 in k15271 in k15202 in k15009 in k15006 in k14901 in k14850 in k7607 in k7604 in k5838 in k5545 in k5542 in k5538 in k5247 in k5244 in k5241 in k5238 */
static void C_ccall f_29751(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 364  hash-table-set!");
t2=C_retrieve(lf[660]);
((C_proc5)C_retrieve_proc(t2))(5,t2,((C_word*)t0)[2],C_retrieve2(lf[256],"*rules*"),C_fix(30464),t1);}

/* k16795 in k16792 in k16789 in k16786 in k16783 in k16780 in k16777 in k16774 in k16771 in k16768 in k16765 in k16762 in k16759 in k16756 in k16753 in k16750 in k16747 in k16744 in k16741 in k16602 in k16599 in k16596 in k16593 in k16537 in k16534 in k16531 in k16528 in k16525 in k16522 in k16519 in k16516 in k15271 in k15202 in k15009 in k15006 in k14901 in k14850 in k7607 in k7604 in k5838 in k5545 in k5542 in k5538 in k5247 in k5244 in k5241 in k5238 */
static void C_ccall f_16797(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word t14;
C_word t15;
C_word ab[39],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_16797,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_16800,a[2]=((C_word*)t0)[2],tmp=(C_word)a,a+=3,tmp);
t3=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_29637,a[2]=t2,tmp=(C_word)a,a+=3,tmp);
t4=(C_word)C_a_i_cons(&a,2,C_fix(29952),C_SCHEME_END_OF_LIST);
t5=(C_word)C_a_i_cons(&a,2,lf[304],t4);
t6=(C_word)C_a_i_cons(&a,2,C_fix(36608),C_SCHEME_END_OF_LIST);
t7=(C_word)C_a_i_cons(&a,2,lf[226],t6);
t8=(C_word)C_a_i_cons(&a,2,C_fix(18193),C_SCHEME_END_OF_LIST);
t9=(C_word)C_a_i_cons(&a,2,t7,t8);
t10=(C_word)C_a_i_cons(&a,2,t5,t9);
t11=(C_word)C_a_i_cons(&a,2,C_fix(13328),t10);
t12=(C_word)C_a_i_cons(&a,2,lf[289],t11);
t13=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_29643,a[2]=((C_word)li467),tmp=(C_word)a,a+=3,tmp);
t14=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_29669,a[2]=((C_word)li468),tmp=(C_word)a,a+=3,tmp);
C_trace("ChickenBridge.scm: 364  make-rule");
f_14905(t3,lf[732],C_fix(32000),t12,t13,t14);}

/* a29668 in k16795 in k16792 in k16789 in k16786 in k16783 in k16780 in k16777 in k16774 in k16771 in k16768 in k16765 in k16762 in k16759 in k16756 in k16753 in k16750 in k16747 in k16744 in k16741 in k16602 in k16599 in k16596 in k16593 in k16537 in k16534 in k16531 in k16528 in k16525 in k16522 in k16519 in k16516 in k15271 in k15202 in k15009 in k15006 in k14901 in k14850 in k7607 in k7604 in k5838 in k5545 in k5542 in k5538 in k5247 in k5244 in k5241 in k5238 */
static void C_ccall f_29669(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4){
C_word tmp;
C_word t5;
C_word t6;
C_word ab[5],*a=ab;
if(c!=5) C_bad_argc_2(c,5,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr5,(void*)f_29669,5,t0,t1,t2,t3,t4);}
t5=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_29673,a[2]=t4,a[3]=t3,a[4]=t1,tmp=(C_word)a,a+=5,tmp);
C_trace("ChickenBridge.scm: 364  parse-unit-parsed");
f_15245(t5,t2);}

/* k29671 in a29668 in k16795 in k16792 in k16789 in k16786 in k16783 in k16780 in k16777 in k16774 in k16771 in k16768 in k16765 in k16762 in k16759 in k16756 in k16753 in k16750 in k16747 in k16744 in k16741 in k16602 in k16599 in k16596 in k16593 in k16537 in k16534 in k16531 in k16528 in k16525 in k16522 in k16519 in k16516 in k15271 in k15202 in k15009 in k15006 in k14901 in k14850 in k7607 in k7604 in k5838 in k5545 in k5542 in k5538 in k5247 in k5244 in k5241 in k5238 */
static void C_ccall f_29673(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[6],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_29673,2,t0,t1);}
t2=(C_word)C_i_car(t1);
t3=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_29679,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=t2,tmp=(C_word)a,a+=6,tmp);
t4=(C_word)C_i_cdr(t1);
C_trace("ChickenBridge.scm: 364  emit");
f_15363(t3,t4,((C_word*)t0)[3],((C_word*)t0)[2]);}

/* k29677 in k29671 in a29668 in k16795 in k16792 in k16789 in k16786 in k16783 in k16780 in k16777 in k16774 in k16771 in k16768 in k16765 in k16762 in k16759 in k16756 in k16753 in k16750 in k16747 in k16744 in k16741 in k16602 in k16599 in k16596 in k16593 in k16537 in k16534 in k16531 in k16528 in k16525 in k16522 in k16519 in k16516 in k15271 in k15202 in k15009 in k15006 in k14901 in k14850 in k7607 in k7604 in k5838 in k5545 in k5542 in k5538 in k5247 in k5244 in k5241 in k5238 */
static void C_ccall f_29679(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_29679,2,t0,t1);}
if(C_truep(((C_word*)t0)[5])){
t2=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_29699,a[2]=((C_word*)t0)[4],a[3]=t1,tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 364  emit");
f_15363(t2,((C_word*)t0)[5],((C_word*)t0)[3],((C_word*)t0)[2]);}
else{
t2=((C_word*)t0)[4];
((C_proc2)(void*)(*((C_word*)t2+1)))(2,t2,(C_word)C_a_i_cons(&a,2,lf[316],t1));}}

/* k29697 in k29677 in k29671 in a29668 in k16795 in k16792 in k16789 in k16786 in k16783 in k16780 in k16777 in k16774 in k16771 in k16768 in k16765 in k16762 in k16759 in k16756 in k16753 in k16750 in k16747 in k16744 in k16741 in k16602 in k16599 in k16596 in k16593 in k16537 in k16534 in k16531 in k16528 in k16525 in k16522 in k16519 in k16516 in k15271 in k15202 in k15009 in k15006 in k14901 in k14850 in k7607 in k7604 in k5838 in k5545 in k5542 in k5538 in k5247 in k5244 in k5241 in k5238 */
static void C_ccall f_29699(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[6],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_29699,2,t0,t1);}
t2=(C_word)C_a_i_cons(&a,2,t1,((C_word*)t0)[3]);
t3=((C_word*)t0)[2];
((C_proc2)(void*)(*((C_word*)t3+1)))(2,t3,(C_word)C_a_i_cons(&a,2,lf[4],t2));}

/* a29642 in k16795 in k16792 in k16789 in k16786 in k16783 in k16780 in k16777 in k16774 in k16771 in k16768 in k16765 in k16762 in k16759 in k16756 in k16753 in k16750 in k16747 in k16744 in k16741 in k16602 in k16599 in k16596 in k16593 in k16537 in k16534 in k16531 in k16528 in k16525 in k16522 in k16519 in k16516 in k15271 in k15202 in k15009 in k15006 in k14901 in k14850 in k7607 in k7604 in k5838 in k5545 in k5542 in k5538 in k5247 in k5244 in k5241 in k5238 */
static void C_ccall f_29643(C_word c,C_word t0,C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word ab[7],*a=ab;
if(c!=4) C_bad_argc_2(c,4,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr4,(void*)f_29643,4,t0,t1,t2,t3);}
t4=(C_word)C_i_cadr(t2);
t5=t4;
t6=(*a=C_VECTOR_TYPE|1,a[1]=t5,tmp=(C_word)a,a+=2,tmp);
t7=(C_word)C_i_caddr(t2);
t8=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_29653,a[2]=t1,a[3]=t7,a[4]=t6,tmp=(C_word)a,a+=5,tmp);
t9=((C_word*)t6)[1];
if(C_truep(t9)){
t10=(C_word)C_i_car(((C_word*)t6)[1]);
t11=C_set_block_item(t6,0,t10);
t12=t8;
f_29653(t12,t11);}
else{
t10=t8;
f_29653(t10,C_SCHEME_FALSE);}}

/* k29651 in a29642 in k16795 in k16792 in k16789 in k16786 in k16783 in k16780 in k16777 in k16774 in k16771 in k16768 in k16765 in k16762 in k16759 in k16756 in k16753 in k16750 in k16747 in k16744 in k16741 in k16602 in k16599 in k16596 in k16593 in k16537 in k16534 in k16531 in k16528 in k16525 in k16522 in k16519 in k16516 in k15271 in k15202 in k15009 in k15006 in k14901 in k14850 in k7607 in k7604 in k5838 in k5545 in k5542 in k5538 in k5247 in k5244 in k5241 in k5238 */
static void C_fcall f_29653(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[3],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_29653,NULL,2,t0,t1);}
t2=(C_word)C_a_i_cons(&a,2,((C_word*)((C_word*)t0)[4])[1],((C_word*)t0)[3]);
C_trace("ChickenBridge.scm: 364  make-parse-unit");
f_15206(((C_word*)t0)[2],C_fix(32000),t2,C_SCHEME_FALSE);}

/* k29635 in k16795 in k16792 in k16789 in k16786 in k16783 in k16780 in k16777 in k16774 in k16771 in k16768 in k16765 in k16762 in k16759 in k16756 in k16753 in k16750 in k16747 in k16744 in k16741 in k16602 in k16599 in k16596 in k16593 in k16537 in k16534 in k16531 in k16528 in k16525 in k16522 in k16519 in k16516 in k15271 in k15202 in k15009 in k15006 in k14901 in k14850 in k7607 in k7604 in k5838 in k5545 in k5542 in k5538 in k5247 in k5244 in k5241 in k5238 */
static void C_ccall f_29637(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 364  hash-table-set!");
t2=C_retrieve(lf[660]);
((C_proc5)C_retrieve_proc(t2))(5,t2,((C_word*)t0)[2],C_retrieve2(lf[256],"*rules*"),C_fix(32000),t1);}

/* k16798 in k16795 in k16792 in k16789 in k16786 in k16783 in k16780 in k16777 in k16774 in k16771 in k16768 in k16765 in k16762 in k16759 in k16756 in k16753 in k16750 in k16747 in k16744 in k16741 in k16602 in k16599 in k16596 in k16593 in k16537 in k16534 in k16531 in k16528 in k16525 in k16522 in k16519 in k16516 in k15271 in k15202 in k15009 in k15006 in k14901 in k14850 in k7607 in k7604 in k5838 in k5545 in k5542 in k5538 in k5247 in k5244 in k5241 in k5238 */
static void C_ccall f_16800(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word t14;
C_word t15;
C_word t16;
C_word t17;
C_word t18;
C_word t19;
C_word t20;
C_word t21;
C_word t22;
C_word t23;
C_word t24;
C_word t25;
C_word t26;
C_word t27;
C_word t28;
C_word t29;
C_word ab[81],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_16800,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_16803,a[2]=((C_word*)t0)[2],tmp=(C_word)a,a+=3,tmp);
t3=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_29440,a[2]=t2,tmp=(C_word)a,a+=3,tmp);
t4=(C_word)C_a_i_cons(&a,2,C_fix(36608),C_SCHEME_END_OF_LIST);
t5=(C_word)C_a_i_cons(&a,2,lf[304],t4);
t6=(C_word)C_a_i_cons(&a,2,C_fix(36608),C_SCHEME_END_OF_LIST);
t7=(C_word)C_a_i_cons(&a,2,C_fix(17920),t6);
t8=(C_word)C_a_i_cons(&a,2,lf[304],t7);
t9=(C_word)C_a_i_cons(&a,2,t8,C_SCHEME_END_OF_LIST);
t10=(C_word)C_a_i_cons(&a,2,t5,t9);
t11=(C_word)C_a_i_cons(&a,2,C_fix(18944),t10);
t12=(C_word)C_a_i_cons(&a,2,C_fix(29696),t11);
t13=(C_word)C_a_i_cons(&a,2,C_fix(14336),t12);
t14=(C_word)C_a_i_cons(&a,2,lf[289],t13);
t15=(C_word)C_a_i_cons(&a,2,C_fix(36608),C_SCHEME_END_OF_LIST);
t16=(C_word)C_a_i_cons(&a,2,C_fix(29696),t15);
t17=(C_word)C_a_i_cons(&a,2,C_fix(19968),t16);
t18=(C_word)C_a_i_cons(&a,2,lf[289],t17);
t19=(C_word)C_a_i_cons(&a,2,C_fix(36608),C_SCHEME_END_OF_LIST);
t20=(C_word)C_a_i_cons(&a,2,C_fix(29696),t19);
t21=(C_word)C_a_i_cons(&a,2,C_fix(19200),t20);
t22=(C_word)C_a_i_cons(&a,2,lf[289],t21);
t23=(C_word)C_a_i_cons(&a,2,t22,C_SCHEME_END_OF_LIST);
t24=(C_word)C_a_i_cons(&a,2,t18,t23);
t25=(C_word)C_a_i_cons(&a,2,t14,t24);
t26=(C_word)C_a_i_cons(&a,2,lf[290],t25);
t27=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_29446,a[2]=((C_word)li465),tmp=(C_word)a,a+=3,tmp);
t28=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_29514,a[2]=((C_word)li466),tmp=(C_word)a,a+=3,tmp);
C_trace("ChickenBridge.scm: 364  make-rule");
f_14905(t3,lf[731],C_fix(32256),t26,t27,t28);}

/* a29513 in k16798 in k16795 in k16792 in k16789 in k16786 in k16783 in k16780 in k16777 in k16774 in k16771 in k16768 in k16765 in k16762 in k16759 in k16756 in k16753 in k16750 in k16747 in k16744 in k16741 in k16602 in k16599 in k16596 in k16593 in k16537 in k16534 in k16531 in k16528 in k16525 in k16522 in k16519 in k16516 in k15271 in k15202 in k15009 in k15006 in k14901 in k14850 in k7607 in k7604 in k5838 in k5545 in k5542 in k5538 in k5247 in k5244 in k5241 in k5238 */
static void C_ccall f_29514(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4){
C_word tmp;
C_word t5;
C_word t6;
C_word ab[5],*a=ab;
if(c!=5) C_bad_argc_2(c,5,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr5,(void*)f_29514,5,t0,t1,t2,t3,t4);}
t5=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_29518,a[2]=t4,a[3]=t3,a[4]=t1,tmp=(C_word)a,a+=5,tmp);
C_trace("ChickenBridge.scm: 364  parse-unit-parsed");
f_15245(t5,t2);}

/* k29516 in a29513 in k16798 in k16795 in k16792 in k16789 in k16786 in k16783 in k16780 in k16777 in k16774 in k16771 in k16768 in k16765 in k16762 in k16759 in k16756 in k16753 in k16750 in k16747 in k16744 in k16741 in k16602 in k16599 in k16596 in k16593 in k16537 in k16534 in k16531 in k16528 in k16525 in k16522 in k16519 in k16516 in k15271 in k15202 in k15009 in k15006 in k14901 in k14850 in k7607 in k7604 in k5838 in k5545 in k5542 in k5538 in k5247 in k5244 in k5241 in k5238 */
static void C_ccall f_29518(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 364  emit");
f_15363(((C_word*)t0)[4],t1,((C_word*)t0)[3],((C_word*)t0)[2]);}

/* a29445 in k16798 in k16795 in k16792 in k16789 in k16786 in k16783 in k16780 in k16777 in k16774 in k16771 in k16768 in k16765 in k16762 in k16759 in k16756 in k16753 in k16750 in k16747 in k16744 in k16741 in k16602 in k16599 in k16596 in k16593 in k16537 in k16534 in k16531 in k16528 in k16525 in k16522 in k16519 in k16516 in k15271 in k15202 in k15009 in k15006 in k14901 in k14850 in k7607 in k7604 in k5838 in k5545 in k5542 in k5538 in k5247 in k5244 in k5241 in k5238 */
static void C_ccall f_29446(C_word c,C_word t0,C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word ab[13],*a=ab;
if(c!=4) C_bad_argc_2(c,4,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr4,(void*)f_29446,4,t0,t1,t2,t3);}
t4=(C_word)C_i_car(t2);
t5=(C_word)C_i_cadr(t2);
t6=C_SCHEME_END_OF_LIST;
t7=(*a=C_VECTOR_TYPE|1,a[1]=t6,tmp=(C_word)a,a+=2,tmp);
t8=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_29459,a[2]=t7,a[3]=t1,tmp=(C_word)a,a+=4,tmp);
t9=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_29465,a[2]=t8,a[3]=t7,a[4]=t5,a[5]=t4,a[6]=t2,tmp=(C_word)a,a+=7,tmp);
C_trace("ChickenBridge.scm: 364  token-unit-type=?");
f_15291(t9,t4,C_fix(14336));}

/* k29463 in a29445 in k16798 in k16795 in k16792 in k16789 in k16786 in k16783 in k16780 in k16777 in k16774 in k16771 in k16768 in k16765 in k16762 in k16759 in k16756 in k16753 in k16750 in k16747 in k16744 in k16741 in k16602 in k16599 in k16596 in k16593 in k16537 in k16534 in k16531 in k16528 in k16525 in k16522 in k16519 in k16516 in k15271 in k15202 in k15009 in k15006 in k14901 in k14850 in k7607 in k7604 in k5838 in k5545 in k5542 in k5538 in k5247 in k5244 in k5241 in k5238 */
static void C_ccall f_29465(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word t14;
C_word t15;
C_word t16;
C_word t17;
C_word ab[29],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_29465,2,t0,t1);}
if(C_truep(t1)){
t2=(C_word)C_i_cadddr(((C_word*)t0)[6]);
t3=t2;
t4=(*a=C_VECTOR_TYPE|1,a[1]=t3,tmp=(C_word)a,a+=2,tmp);
t5=C_SCHEME_FALSE;
t6=(*a=C_VECTOR_TYPE|1,a[1]=t5,tmp=(C_word)a,a+=2,tmp);
t7=C_SCHEME_FALSE;
t8=(*a=C_VECTOR_TYPE|1,a[1]=t7,tmp=(C_word)a,a+=2,tmp);
t9=(*a=C_CLOSURE_TYPE|9,a[1]=(C_word)f_29471,a[2]=((C_word*)t0)[6],a[3]=((C_word*)t0)[2],a[4]=((C_word*)t0)[3],a[5]=t8,a[6]=t6,a[7]=((C_word*)t0)[4],a[8]=((C_word*)t0)[5],a[9]=t4,tmp=(C_word)a,a+=10,tmp);
t10=((C_word*)t4)[1];
if(C_truep(t10)){
t11=(C_word)C_i_car(((C_word*)t4)[1]);
t12=C_set_block_item(t6,0,t11);
t13=t9;
f_29471(t13,t12);}
else{
t11=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_29500,a[2]=t9,a[3]=t6,tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 364  make-parse-unit");
f_15206(t11,C_fix(4608),lf[730],C_SCHEME_FALSE);}}
else{
t2=(C_word)C_i_caddr(((C_word*)t0)[6]);
t3=(C_word)C_a_i_list(&a,3,((C_word*)t0)[5],((C_word*)t0)[4],t2);
t4=C_mutate(((C_word *)((C_word*)t0)[3])+1,t3);
t5=((C_word*)t0)[2];
f_29459(t5,t4);}}

/* k29498 in k29463 in a29445 in k16798 in k16795 in k16792 in k16789 in k16786 in k16783 in k16780 in k16777 in k16774 in k16771 in k16768 in k16765 in k16762 in k16759 in k16756 in k16753 in k16750 in k16747 in k16744 in k16741 in k16602 in k16599 in k16596 in k16593 in k16537 in k16534 in k16531 in k16528 in k16525 in k16522 in k16519 in k16516 in k15271 in k15202 in k15009 in k15006 in k14901 in k14850 in k7607 in k7604 in k5838 in k5545 in k5542 in k5538 in k5247 in k5244 in k5241 in k5238 */
static void C_ccall f_29500(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[3])+1,t1);
t3=((C_word*)t0)[2];
f_29471(t3,t2);}

/* k29469 in k29463 in a29445 in k16798 in k16795 in k16792 in k16789 in k16786 in k16783 in k16780 in k16777 in k16774 in k16771 in k16768 in k16765 in k16762 in k16759 in k16756 in k16753 in k16750 in k16747 in k16744 in k16741 in k16602 in k16599 in k16596 in k16593 in k16537 in k16534 in k16531 in k16528 in k16525 in k16522 in k16519 in k16516 in k15271 in k15202 in k15009 in k15006 in k14901 in k14850 in k7607 in k7604 in k5838 in k5545 in k5542 in k5538 in k5247 in k5244 in k5241 in k5238 */
static void C_fcall f_29471(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_29471,NULL,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|8,a[1]=(C_word)f_29475,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],a[7]=((C_word*)t0)[8],a[8]=((C_word*)t0)[9],tmp=(C_word)a,a+=9,tmp);
C_trace("ChickenBridge.scm: 364  fifth");
t3=C_retrieve(lf[55]);
((C_proc3)C_retrieve_proc(t3))(3,t3,t2,((C_word*)t0)[2]);}

/* k29473 in k29469 in k29463 in a29445 in k16798 in k16795 in k16792 in k16789 in k16786 in k16783 in k16780 in k16777 in k16774 in k16771 in k16768 in k16765 in k16762 in k16759 in k16756 in k16753 in k16750 in k16747 in k16744 in k16741 in k16602 in k16599 in k16596 in k16593 in k16537 in k16534 in k16531 in k16528 in k16525 in k16522 in k16519 in k16516 in k15271 in k15202 in k15009 in k15006 in k14901 in k14850 in k7607 in k7604 in k5838 in k5545 in k5542 in k5538 in k5247 in k5244 in k5241 in k5238 */
static void C_ccall f_29475(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word ab[12],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_29475,2,t0,t1);}
t2=C_mutate(((C_word *)((C_word*)t0)[8])+1,t1);
t3=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_29478,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],a[7]=((C_word*)t0)[7],tmp=(C_word)a,a+=8,tmp);
t4=((C_word*)((C_word*)t0)[8])[1];
if(C_truep(t4)){
t5=(C_word)C_i_cadr(((C_word*)((C_word*)t0)[8])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[4])+1,t5);
t7=t3;
f_29478(t7,t6);}
else{
t5=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_29489,a[2]=t3,a[3]=((C_word*)t0)[4],tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 364  make-parse-unit");
f_15206(t5,C_fix(4608),lf[729],C_SCHEME_FALSE);}}

/* k29487 in k29473 in k29469 in k29463 in a29445 in k16798 in k16795 in k16792 in k16789 in k16786 in k16783 in k16780 in k16777 in k16774 in k16771 in k16768 in k16765 in k16762 in k16759 in k16756 in k16753 in k16750 in k16747 in k16744 in k16741 in k16602 in k16599 in k16596 in k16593 in k16537 in k16534 in k16531 in k16528 in k16525 in k16522 in k16519 in k16516 in k15271 in k15202 in k15009 in k15006 in k14901 in k14850 in k7607 in k7604 in k5838 in k5545 in k5542 in k5538 in k5247 in k5244 in k5241 in k5238 */
static void C_ccall f_29489(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[3])+1,t1);
t3=((C_word*)t0)[2];
f_29478(t3,t2);}

/* k29476 in k29473 in k29469 in k29463 in a29445 in k16798 in k16795 in k16792 in k16789 in k16786 in k16783 in k16780 in k16777 in k16774 in k16771 in k16768 in k16765 in k16762 in k16759 in k16756 in k16753 in k16750 in k16747 in k16744 in k16741 in k16602 in k16599 in k16596 in k16593 in k16537 in k16534 in k16531 in k16528 in k16525 in k16522 in k16519 in k16516 in k15271 in k15202 in k15009 in k15006 in k14901 in k14850 in k7607 in k7604 in k5838 in k5545 in k5542 in k5538 in k5247 in k5244 in k5241 in k5238 */
static void C_fcall f_29478(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[12],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_29478,NULL,2,t0,t1);}
t2=(C_word)C_a_i_list(&a,4,((C_word*)t0)[7],((C_word*)t0)[6],((C_word*)((C_word*)t0)[5])[1],((C_word*)((C_word*)t0)[4])[1]);
t3=C_mutate(((C_word *)((C_word*)t0)[3])+1,t2);
t4=((C_word*)t0)[2];
f_29459(t4,t3);}

/* k29457 in a29445 in k16798 in k16795 in k16792 in k16789 in k16786 in k16783 in k16780 in k16777 in k16774 in k16771 in k16768 in k16765 in k16762 in k16759 in k16756 in k16753 in k16750 in k16747 in k16744 in k16741 in k16602 in k16599 in k16596 in k16593 in k16537 in k16534 in k16531 in k16528 in k16525 in k16522 in k16519 in k16516 in k15271 in k15202 in k15009 in k15006 in k14901 in k14850 in k7607 in k7604 in k5838 in k5545 in k5542 in k5538 in k5247 in k5244 in k5241 in k5238 */
static void C_fcall f_29459(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 364  make-parse-unit");
f_15206(((C_word*)t0)[3],C_fix(32256),((C_word*)((C_word*)t0)[2])[1],C_SCHEME_FALSE);}

/* k29438 in k16798 in k16795 in k16792 in k16789 in k16786 in k16783 in k16780 in k16777 in k16774 in k16771 in k16768 in k16765 in k16762 in k16759 in k16756 in k16753 in k16750 in k16747 in k16744 in k16741 in k16602 in k16599 in k16596 in k16593 in k16537 in k16534 in k16531 in k16528 in k16525 in k16522 in k16519 in k16516 in k15271 in k15202 in k15009 in k15006 in k14901 in k14850 in k7607 in k7604 in k5838 in k5545 in k5542 in k5538 in k5247 in k5244 in k5241 in k5238 */
static void C_ccall f_29440(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 364  hash-table-set!");
t2=C_retrieve(lf[660]);
((C_proc5)C_retrieve_proc(t2))(5,t2,((C_word*)t0)[2],C_retrieve2(lf[256],"*rules*"),C_fix(32256),t1);}

/* k16801 in k16798 in k16795 in k16792 in k16789 in k16786 in k16783 in k16780 in k16777 in k16774 in k16771 in k16768 in k16765 in k16762 in k16759 in k16756 in k16753 in k16750 in k16747 in k16744 in k16741 in k16602 in k16599 in k16596 in k16593 in k16537 in k16534 in k16531 in k16528 in k16525 in k16522 in k16519 in k16516 in k15271 in k15202 in k15009 in k15006 in k14901 in k14850 in k7607 in k7604 in k5838 in k5545 in k5542 in k5538 in k5247 in k5244 in k5241 in k5238 */
static void C_ccall f_16803(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word t14;
C_word t15;
C_word t16;
C_word t17;
C_word t18;
C_word t19;
C_word t20;
C_word t21;
C_word t22;
C_word t23;
C_word t24;
C_word t25;
C_word t26;
C_word t27;
C_word t28;
C_word t29;
C_word t30;
C_word t31;
C_word t32;
C_word t33;
C_word t34;
C_word t35;
C_word t36;
C_word t37;
C_word t38;
C_word t39;
C_word t40;
C_word t41;
C_word t42;
C_word t43;
C_word t44;
C_word t45;
C_word t46;
C_word t47;
C_word t48;
C_word t49;
C_word t50;
C_word t51;
C_word t52;
C_word t53;
C_word t54;
C_word t55;
C_word t56;
C_word t57;
C_word t58;
C_word t59;
C_word t60;
C_word ab[174],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_16803,2,t0,t1);}
t2=C_mutate(&lf[312],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_16805,a[2]=((C_word)li244),tmp=(C_word)a,a+=3,tmp));
t3=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_17326,a[2]=((C_word*)t0)[2],tmp=(C_word)a,a+=3,tmp);
t4=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_29168,a[2]=t3,tmp=(C_word)a,a+=3,tmp);
t5=(C_word)C_a_i_cons(&a,2,C_fix(29696),C_SCHEME_END_OF_LIST);
t6=(C_word)C_a_i_cons(&a,2,C_fix(23296),t5);
t7=(C_word)C_a_i_cons(&a,2,lf[289],t6);
t8=(C_word)C_a_i_cons(&a,2,C_fix(29696),C_SCHEME_END_OF_LIST);
t9=(C_word)C_a_i_cons(&a,2,C_fix(18944),t8);
t10=(C_word)C_a_i_cons(&a,2,lf[304],t9);
t11=(C_word)C_a_i_cons(&a,2,t10,C_SCHEME_END_OF_LIST);
t12=(C_word)C_a_i_cons(&a,2,C_fix(29696),t11);
t13=(C_word)C_a_i_cons(&a,2,C_fix(10756),t12);
t14=(C_word)C_a_i_cons(&a,2,C_fix(25088),t13);
t15=(C_word)C_a_i_cons(&a,2,C_fix(22272),t14);
t16=(C_word)C_a_i_cons(&a,2,lf[289],t15);
t17=(C_word)C_a_i_cons(&a,2,C_fix(29696),C_SCHEME_END_OF_LIST);
t18=(C_word)C_a_i_cons(&a,2,C_fix(22784),t17);
t19=(C_word)C_a_i_cons(&a,2,C_fix(25088),t18);
t20=(C_word)C_a_i_cons(&a,2,C_fix(22272),t19);
t21=(C_word)C_a_i_cons(&a,2,lf[289],t20);
t22=(C_word)C_a_i_cons(&a,2,C_fix(21760),C_SCHEME_END_OF_LIST);
t23=(C_word)C_a_i_cons(&a,2,C_fix(20992),t22);
t24=(C_word)C_a_i_cons(&a,2,C_fix(23552),t23);
t25=(C_word)C_a_i_cons(&a,2,C_fix(21248),t24);
t26=(C_word)C_a_i_cons(&a,2,lf[290],t25);
t27=(C_word)C_a_i_cons(&a,2,C_fix(29696),C_SCHEME_END_OF_LIST);
t28=(C_word)C_a_i_cons(&a,2,t26,t27);
t29=(C_word)C_a_i_cons(&a,2,lf[304],t28);
t30=(C_word)C_a_i_cons(&a,2,C_fix(29696),C_SCHEME_END_OF_LIST);
t31=(C_word)C_a_i_cons(&a,2,C_fix(21504),t30);
t32=(C_word)C_a_i_cons(&a,2,lf[304],t31);
t33=(C_word)C_a_i_cons(&a,2,t32,C_SCHEME_END_OF_LIST);
t34=(C_word)C_a_i_cons(&a,2,t29,t33);
t35=(C_word)C_a_i_cons(&a,2,C_fix(29696),t34);
t36=(C_word)C_a_i_cons(&a,2,C_fix(22528),t35);
t37=(C_word)C_a_i_cons(&a,2,C_fix(25088),t36);
t38=(C_word)C_a_i_cons(&a,2,C_fix(22272),t37);
t39=(C_word)C_a_i_cons(&a,2,lf[289],t38);
t40=(C_word)C_a_i_cons(&a,2,C_fix(21760),C_SCHEME_END_OF_LIST);
t41=(C_word)C_a_i_cons(&a,2,C_fix(20992),t40);
t42=(C_word)C_a_i_cons(&a,2,C_fix(23552),t41);
t43=(C_word)C_a_i_cons(&a,2,C_fix(21248),t42);
t44=(C_word)C_a_i_cons(&a,2,lf[290],t43);
t45=(C_word)C_a_i_cons(&a,2,C_fix(29696),C_SCHEME_END_OF_LIST);
t46=(C_word)C_a_i_cons(&a,2,C_fix(21504),t45);
t47=(C_word)C_a_i_cons(&a,2,lf[304],t46);
t48=(C_word)C_a_i_cons(&a,2,t47,C_SCHEME_END_OF_LIST);
t49=(C_word)C_a_i_cons(&a,2,C_fix(29696),t48);
t50=(C_word)C_a_i_cons(&a,2,t44,t49);
t51=(C_word)C_a_i_cons(&a,2,C_fix(25088),t50);
t52=(C_word)C_a_i_cons(&a,2,C_fix(22272),t51);
t53=(C_word)C_a_i_cons(&a,2,lf[289],t52);
t54=(C_word)C_a_i_cons(&a,2,t53,C_SCHEME_END_OF_LIST);
t55=(C_word)C_a_i_cons(&a,2,t39,t54);
t56=(C_word)C_a_i_cons(&a,2,t21,t55);
t57=(C_word)C_a_i_cons(&a,2,t16,t56);
t58=(C_word)C_a_i_cons(&a,2,t7,t57);
t59=(C_word)C_a_i_cons(&a,2,lf[290],t58);
C_trace("ChickenBridge.scm: 364  make-rule");
f_14905(t4,lf[728],C_fix(33024),t59,C_retrieve2(lf[312],"sal-parse-stepping"),C_SCHEME_FALSE);}

/* k29166 in k16801 in k16798 in k16795 in k16792 in k16789 in k16786 in k16783 in k16780 in k16777 in k16774 in k16771 in k16768 in k16765 in k16762 in k16759 in k16756 in k16753 in k16750 in k16747 in k16744 in k16741 in k16602 in k16599 in k16596 in k16593 in k16537 in k16534 in k16531 in k16528 in k16525 in k16522 in k16519 in k16516 in k15271 in k15202 in k15009 in k15006 in k14901 in k14850 in k7607 in k7604 in k5838 in k5545 in k5542 in k5538 in k5247 in k5244 in k5241 in k5238 */
static void C_ccall f_29168(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 364  hash-table-set!");
t2=C_retrieve(lf[660]);
((C_proc5)C_retrieve_proc(t2))(5,t2,((C_word*)t0)[2],C_retrieve2(lf[256],"*rules*"),C_fix(33024),t1);}

/* k17324 in k16801 in k16798 in k16795 in k16792 in k16789 in k16786 in k16783 in k16780 in k16777 in k16774 in k16771 in k16768 in k16765 in k16762 in k16759 in k16756 in k16753 in k16750 in k16747 in k16744 in k16741 in k16602 in k16599 in k16596 in k16593 in k16537 in k16534 in k16531 in k16528 in k16525 in k16522 in k16519 in k16516 in k15271 in k15202 in k15009 in k15006 in k14901 in k14850 in k7607 in k7604 in k5838 in k5545 in k5542 in k5538 in k5247 in k5244 in k5241 in k5238 */
static void C_ccall f_17326(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word t14;
C_word ab[37],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_17326,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_17329,a[2]=((C_word*)t0)[2],tmp=(C_word)a,a+=3,tmp);
t3=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_29112,a[2]=t2,tmp=(C_word)a,a+=3,tmp);
t4=(C_word)C_a_i_cons(&a,2,C_fix(29696),C_SCHEME_END_OF_LIST);
t5=(C_word)C_a_i_cons(&a,2,C_fix(20224),t4);
t6=(C_word)C_a_i_cons(&a,2,lf[289],t5);
t7=(C_word)C_a_i_cons(&a,2,C_fix(29696),C_SCHEME_END_OF_LIST);
t8=(C_word)C_a_i_cons(&a,2,C_fix(19456),t7);
t9=(C_word)C_a_i_cons(&a,2,lf[289],t8);
t10=(C_word)C_a_i_cons(&a,2,t9,C_SCHEME_END_OF_LIST);
t11=(C_word)C_a_i_cons(&a,2,t6,t10);
t12=(C_word)C_a_i_cons(&a,2,lf[290],t11);
t13=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_29120,a[2]=t12,a[3]=t3,tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 364  simple-unit-parser");
f_15604(t13,C_fix(33280));}

/* k29118 in k17324 in k16801 in k16798 in k16795 in k16792 in k16789 in k16786 in k16783 in k16780 in k16777 in k16774 in k16771 in k16768 in k16765 in k16762 in k16759 in k16756 in k16753 in k16750 in k16747 in k16744 in k16741 in k16602 in k16599 in k16596 in k16593 in k16537 in k16534 in k16531 in k16528 in k16525 in k16522 in k16519 in k16516 in k15271 in k15202 in k15009 in k15006 in k14901 in k14850 in k7607 in k7604 in k5838 in k5545 in k5542 in k5538 in k5247 in k5244 in k5241 in k5238 */
static void C_ccall f_29120(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 364  make-rule");
f_14905(((C_word*)t0)[3],lf[727],C_fix(33280),((C_word*)t0)[2],t1,C_SCHEME_FALSE);}

/* k29110 in k17324 in k16801 in k16798 in k16795 in k16792 in k16789 in k16786 in k16783 in k16780 in k16777 in k16774 in k16771 in k16768 in k16765 in k16762 in k16759 in k16756 in k16753 in k16750 in k16747 in k16744 in k16741 in k16602 in k16599 in k16596 in k16593 in k16537 in k16534 in k16531 in k16528 in k16525 in k16522 in k16519 in k16516 in k15271 in k15202 in k15009 in k15006 in k14901 in k14850 in k7607 in k7604 in k5838 in k5545 in k5542 in k5538 in k5247 in k5244 in k5241 in k5238 */
static void C_ccall f_29112(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 364  hash-table-set!");
t2=C_retrieve(lf[660]);
((C_proc5)C_retrieve_proc(t2))(5,t2,((C_word*)t0)[2],C_retrieve2(lf[256],"*rules*"),C_fix(33280),t1);}

/* k17327 in k17324 in k16801 in k16798 in k16795 in k16792 in k16789 in k16786 in k16783 in k16780 in k16777 in k16774 in k16771 in k16768 in k16765 in k16762 in k16759 in k16756 in k16753 in k16750 in k16747 in k16744 in k16741 in k16602 in k16599 in k16596 in k16593 in k16537 in k16534 in k16531 in k16528 in k16525 in k16522 in k16519 in k16516 in k15271 in k15202 in k15009 in k15006 in k14901 in k14850 in k7607 in k7604 in k5838 in k5545 in k5542 in k5538 in k5247 in k5244 in k5241 in k5238 */
static void C_ccall f_17329(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word t14;
C_word t15;
C_word t16;
C_word t17;
C_word t18;
C_word t19;
C_word t20;
C_word t21;
C_word t22;
C_word t23;
C_word t24;
C_word t25;
C_word t26;
C_word t27;
C_word t28;
C_word ab[78],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_17329,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_17851,a[2]=((C_word*)t0)[2],tmp=(C_word)a,a+=3,tmp);
t3=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_28940,a[2]=t2,tmp=(C_word)a,a+=3,tmp);
t4=(C_word)C_a_i_cons(&a,2,C_fix(16144),C_SCHEME_END_OF_LIST);
t5=(C_word)C_a_i_cons(&a,2,C_fix(14864),t4);
t6=(C_word)C_a_i_cons(&a,2,lf[290],t5);
t7=(C_word)C_a_i_cons(&a,2,C_fix(29952),C_SCHEME_END_OF_LIST);
t8=(C_word)C_a_i_cons(&a,2,lf[304],t7);
t9=(C_word)C_a_i_cons(&a,2,C_fix(33024),C_SCHEME_END_OF_LIST);
t10=(C_word)C_a_i_cons(&a,2,lf[226],t9);
t11=(C_word)C_a_i_cons(&a,2,C_fix(33280),C_SCHEME_END_OF_LIST);
t12=(C_word)C_a_i_cons(&a,2,lf[226],t11);
t13=(C_word)C_a_i_cons(&a,2,C_fix(36608),C_SCHEME_END_OF_LIST);
t14=(C_word)C_a_i_cons(&a,2,lf[305],t13);
t15=(C_word)C_a_i_cons(&a,2,C_fix(36608),C_SCHEME_END_OF_LIST);
t16=(C_word)C_a_i_cons(&a,2,C_fix(22016),t15);
t17=(C_word)C_a_i_cons(&a,2,lf[304],t16);
t18=(C_word)C_a_i_cons(&a,2,C_fix(18193),C_SCHEME_END_OF_LIST);
t19=(C_word)C_a_i_cons(&a,2,t17,t18);
t20=(C_word)C_a_i_cons(&a,2,t14,t19);
t21=(C_word)C_a_i_cons(&a,2,t12,t20);
t22=(C_word)C_a_i_cons(&a,2,t10,t21);
t23=(C_word)C_a_i_cons(&a,2,t8,t22);
t24=(C_word)C_a_i_cons(&a,2,t6,t23);
t25=(C_word)C_a_i_cons(&a,2,lf[289],t24);
t26=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_28946,a[2]=((C_word)li459),tmp=(C_word)a,a+=3,tmp);
t27=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_28992,a[2]=((C_word)li464),tmp=(C_word)a,a+=3,tmp);
C_trace("ChickenBridge.scm: 364  make-rule");
f_14905(t3,lf[726],C_fix(32512),t25,t26,t27);}

/* a28991 in k17327 in k17324 in k16801 in k16798 in k16795 in k16792 in k16789 in k16786 in k16783 in k16780 in k16777 in k16774 in k16771 in k16768 in k16765 in k16762 in k16759 in k16756 in k16753 in k16750 in k16747 in k16744 in k16741 in k16602 in k16599 in k16596 in k16593 in k16537 in k16534 in k16531 in k16528 in k16525 in k16522 in k16519 in k16516 in k15271 in k15202 in k15009 in k15006 in k14901 in k14850 in k7607 in k7604 in k5838 in k5545 in k5542 in k5538 in k5247 in k5244 in k5241 in k5238 */
static void C_ccall f_28992(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4){
C_word tmp;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word ab[7],*a=ab;
if(c!=5) C_bad_argc_2(c,5,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr5,(void*)f_28992,5,t0,t1,t2,t3,t4);}
t5=t3;
t6=(*a=C_VECTOR_TYPE|1,a[1]=t5,tmp=(C_word)a,a+=2,tmp);
t7=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_17335,a[2]=t4,a[3]=t6,a[4]=t1,tmp=(C_word)a,a+=5,tmp);
C_trace("ChickenBridge.scm: 364  parse-unit-parsed");
f_15245(t7,t2);}

/* k17333 in a28991 in k17327 in k17324 in k16801 in k16798 in k16795 in k16792 in k16789 in k16786 in k16783 in k16780 in k16777 in k16774 in k16771 in k16768 in k16765 in k16762 in k16759 in k16756 in k16753 in k16750 in k16747 in k16744 in k16741 in k16602 in k16599 in k16596 in k16593 in k16537 in k16534 in k16531 in k16528 in k16525 in k16522 in k16519 in k16516 in k15271 in k15202 in k15009 in k15006 in k14901 in k14850 in k7607 in k7604 in k5838 in k5545 in k5542 in k5538 in k5247 in k5244 in k5241 in k5238 */
static void C_ccall f_17335(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word t14;
C_word t15;
C_word t16;
C_word t17;
C_word t18;
C_word t19;
C_word ab[33],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_17335,2,t0,t1);}
t2=t1;
t3=(*a=C_VECTOR_TYPE|1,a[1]=t2,tmp=(C_word)a,a+=2,tmp);
t4=C_SCHEME_FALSE;
t5=(*a=C_VECTOR_TYPE|1,a[1]=t4,tmp=(C_word)a,a+=2,tmp);
t6=C_SCHEME_END_OF_LIST;
t7=(*a=C_VECTOR_TYPE|1,a[1]=t6,tmp=(C_word)a,a+=2,tmp);
t8=C_SCHEME_END_OF_LIST;
t9=(*a=C_VECTOR_TYPE|1,a[1]=t8,tmp=(C_word)a,a+=2,tmp);
t10=C_SCHEME_END_OF_LIST;
t11=(*a=C_VECTOR_TYPE|1,a[1]=t10,tmp=(C_word)a,a+=2,tmp);
t12=C_SCHEME_END_OF_LIST;
t13=(*a=C_VECTOR_TYPE|1,a[1]=t12,tmp=(C_word)a,a+=2,tmp);
t14=C_SCHEME_END_OF_LIST;
t15=(*a=C_VECTOR_TYPE|1,a[1]=t14,tmp=(C_word)a,a+=2,tmp);
t16=(*a=C_CLOSURE_TYPE|11,a[1]=(C_word)f_17353,a[2]=t11,a[3]=((C_word*)t0)[2],a[4]=((C_word*)t0)[3],a[5]=t7,a[6]=((C_word*)t0)[4],a[7]=t15,a[8]=t13,a[9]=t5,a[10]=t9,a[11]=t3,tmp=(C_word)a,a+=12,tmp);
t17=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_17810,a[2]=t3,a[3]=((C_word*)t0)[2],a[4]=t5,a[5]=t16,a[6]=((C_word*)t0)[3],tmp=(C_word)a,a+=7,tmp);
t18=(C_word)C_i_car(((C_word*)t3)[1]);
C_trace("ChickenBridge.scm: 364  token-unit-type=?");
f_15291(t17,t18,C_fix(14864));}

/* k17808 in k17333 in a28991 in k17327 in k17324 in k16801 in k16798 in k16795 in k16792 in k16789 in k16786 in k16783 in k16780 in k16777 in k16774 in k16771 in k16768 in k16765 in k16762 in k16759 in k16756 in k16753 in k16750 in k16747 in k16744 in k16741 in k16602 in k16599 in k16596 in k16593 in k16537 in k16534 in k16531 in k16528 in k16525 in k16522 in k16519 in k16516 in k15271 in k15202 in k15009 in k15006 in k14901 in k14850 in k7607 in k7604 in k5838 in k5545 in k5542 in k5538 in k5247 in k5244 in k5241 in k5238 */
static void C_ccall f_17810(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[14],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_17810,2,t0,t1);}
if(C_truep(t1)){
t2=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_17814,a[2]=((C_word*)t0)[5],a[3]=((C_word*)t0)[6],tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 364  add-emit-info");
f_15335(t2,lf[723],C_SCHEME_TRUE,((C_word*)((C_word*)t0)[6])[1]);}
else{
t2=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_17817,a[2]=((C_word*)t0)[5],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[6],tmp=(C_word)a,a+=5,tmp);
t3=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_17844,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=t2,tmp=(C_word)a,a+=5,tmp);
C_trace("ChickenBridge.scm: 364  get-emit-info");
f_15323(t3,lf[713],((C_word*)((C_word*)t0)[6])[1]);}}

/* k17842 in k17808 in k17333 in a28991 in k17327 in k17324 in k16801 in k16798 in k16795 in k16792 in k16789 in k16786 in k16783 in k16780 in k16777 in k16774 in k16771 in k16768 in k16765 in k16762 in k16759 in k16756 in k16753 in k16750 in k16747 in k16744 in k16741 in k16602 in k16599 in k16596 in k16593 in k16537 in k16534 in k16531 in k16528 in k16525 in k16522 in k16519 in k16516 in k15271 in k15202 in k15009 in k15006 in k14901 in k14850 in k7607 in k7604 in k5838 in k5545 in k5542 in k5538 in k5247 in k5244 in k5241 in k5238 */
static void C_ccall f_17844(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_17844,2,t0,t1);}
if(C_truep(t1)){
t2=((C_word*)t0)[4];
f_17817(2,t2,C_SCHEME_UNDEFINED);}
else{
t2=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_17832,a[2]=((C_word*)t0)[4],a[3]=((C_word*)t0)[3],tmp=(C_word)a,a+=4,tmp);
t3=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_17836,a[2]=t2,tmp=(C_word)a,a+=3,tmp);
t4=(C_word)C_i_car(((C_word*)((C_word*)t0)[2])[1]);
C_trace("ChickenBridge.scm: 364  parse-unit-position");
f_15263(t3,t4);}}

/* k17834 in k17842 in k17808 in k17333 in a28991 in k17327 in k17324 in k16801 in k16798 in k16795 in k16792 in k16789 in k16786 in k16783 in k16780 in k16777 in k16774 in k16771 in k16768 in k16765 in k16762 in k16759 in k16756 in k16753 in k16750 in k16747 in k16744 in k16741 in k16602 in k16599 in k16596 in k16593 in k16537 in k16534 in k16531 in k16528 in k16525 in k16522 in k16519 in k16516 in k15271 in k15202 in k15009 in k15006 in k14901 in k14850 in k7607 in k7604 in k5838 in k5545 in k5542 in k5538 in k5247 in k5244 in k5241 in k5238 */
static void C_ccall f_17836(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 364  make-parse-error");
f_15155(((C_word*)t0)[2],lf[725],t1);}

/* k17830 in k17842 in k17808 in k17333 in a28991 in k17327 in k17324 in k16801 in k16798 in k16795 in k16792 in k16789 in k16786 in k16783 in k16780 in k16777 in k16774 in k16771 in k16768 in k16765 in k16762 in k16759 in k16756 in k16753 in k16750 in k16747 in k16744 in k16741 in k16602 in k16599 in k16596 in k16593 in k16537 in k16534 in k16531 in k16528 in k16525 in k16522 in k16519 in k16516 in k15271 in k15202 in k15009 in k15006 in k14901 in k14850 in k7607 in k7604 in k5838 in k5545 in k5542 in k5538 in k5247 in k5244 in k5241 in k5238 */
static void C_ccall f_17832(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 364  errf");
t2=((C_word*)t0)[3];
((C_proc3)C_retrieve_proc(t2))(3,t2,((C_word*)t0)[2],t1);}

/* k17815 in k17808 in k17333 in a28991 in k17327 in k17324 in k16801 in k16798 in k16795 in k16792 in k16789 in k16786 in k16783 in k16780 in k16777 in k16774 in k16771 in k16768 in k16765 in k16762 in k16759 in k16756 in k16753 in k16750 in k16747 in k16744 in k16741 in k16602 in k16599 in k16596 in k16593 in k16537 in k16534 in k16531 in k16528 in k16525 in k16522 in k16519 in k16516 in k15271 in k15202 in k15009 in k15006 in k14901 in k14850 in k7607 in k7604 in k5838 in k5545 in k5542 in k5538 in k5247 in k5244 in k5241 in k5238 */
static void C_ccall f_17817(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[5],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_17817,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_17821,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],tmp=(C_word)a,a+=5,tmp);
C_trace("ChickenBridge.scm: 364  add-emit-info");
f_15335(t2,lf[724],C_SCHEME_TRUE,((C_word*)((C_word*)t0)[4])[1]);}

/* k17819 in k17815 in k17808 in k17333 in a28991 in k17327 in k17324 in k16801 in k16798 in k16795 in k16792 in k16789 in k16786 in k16783 in k16780 in k16777 in k16774 in k16771 in k16768 in k16765 in k16762 in k16759 in k16756 in k16753 in k16750 in k16747 in k16744 in k16741 in k16602 in k16599 in k16596 in k16593 in k16537 in k16534 in k16531 in k16528 in k16525 in k16522 in k16519 in k16516 in k15271 in k15202 in k15009 in k15006 in k14901 in k14850 in k7607 in k7604 in k5838 in k5545 in k5542 in k5538 in k5247 in k5244 in k5241 in k5238 */
static void C_ccall f_17821(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[4])+1,t1);
t3=C_set_block_item(((C_word*)t0)[3],0,C_SCHEME_TRUE);
t4=((C_word*)t0)[2];
f_17353(t4,t3);}

/* k17812 in k17808 in k17333 in a28991 in k17327 in k17324 in k16801 in k16798 in k16795 in k16792 in k16789 in k16786 in k16783 in k16780 in k16777 in k16774 in k16771 in k16768 in k16765 in k16762 in k16759 in k16756 in k16753 in k16750 in k16747 in k16744 in k16741 in k16602 in k16599 in k16596 in k16593 in k16537 in k16534 in k16531 in k16528 in k16525 in k16522 in k16519 in k16516 in k15271 in k15202 in k15009 in k15006 in k14901 in k14850 in k7607 in k7604 in k5838 in k5545 in k5542 in k5538 in k5247 in k5244 in k5241 in k5238 */
static void C_ccall f_17814(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[3])+1,t1);
t3=((C_word*)t0)[2];
f_17353(t3,t2);}

/* k17351 in k17333 in a28991 in k17327 in k17324 in k16801 in k16798 in k16795 in k16792 in k16789 in k16786 in k16783 in k16780 in k16777 in k16774 in k16771 in k16768 in k16765 in k16762 in k16759 in k16756 in k16753 in k16750 in k16747 in k16744 in k16741 in k16602 in k16599 in k16596 in k16593 in k16537 in k16534 in k16531 in k16528 in k16525 in k16522 in k16519 in k16516 in k15271 in k15202 in k15009 in k15006 in k14901 in k14850 in k7607 in k7604 in k5838 in k5545 in k5542 in k5538 in k5247 in k5244 in k5241 in k5238 */
static void C_fcall f_17353(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word ab[20],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_17353,NULL,2,t0,t1);}
t2=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[11])[1]);
t3=C_mutate(((C_word *)((C_word*)t0)[11])+1,t2);
t4=(*a=C_CLOSURE_TYPE|11,a[1]=(C_word)f_17360,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[11],a[4]=((C_word*)t0)[3],a[5]=((C_word*)t0)[4],a[6]=((C_word*)t0)[5],a[7]=((C_word*)t0)[6],a[8]=((C_word*)t0)[7],a[9]=((C_word*)t0)[8],a[10]=((C_word*)t0)[9],a[11]=((C_word*)t0)[10],tmp=(C_word)a,a+=12,tmp);
if(C_truep((C_word)C_i_car(((C_word*)((C_word*)t0)[11])[1]))){
t5=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_17799,a[2]=t4,a[3]=((C_word*)t0)[5],tmp=(C_word)a,a+=4,tmp);
t6=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_17803,a[2]=((C_word*)t0)[5],a[3]=t5,tmp=(C_word)a,a+=4,tmp);
t7=(C_word)C_i_car(((C_word*)((C_word*)t0)[11])[1]);
C_trace("ChickenBridge.scm: 364  emit");
f_15363(t6,t7,((C_word*)((C_word*)t0)[4])[1],((C_word*)t0)[3]);}
else{
t5=t4;
f_17360(t5,C_SCHEME_UNDEFINED);}}

/* k17801 in k17351 in k17333 in a28991 in k17327 in k17324 in k16801 in k16798 in k16795 in k16792 in k16789 in k16786 in k16783 in k16780 in k16777 in k16774 in k16771 in k16768 in k16765 in k16762 in k16759 in k16756 in k16753 in k16750 in k16747 in k16744 in k16741 in k16602 in k16599 in k16596 in k16593 in k16537 in k16534 in k16531 in k16528 in k16525 in k16522 in k16519 in k16516 in k15271 in k15202 in k15009 in k15006 in k14901 in k14850 in k7607 in k7604 in k5838 in k5545 in k5542 in k5538 in k5247 in k5244 in k5241 in k5238 */
static void C_ccall f_17803(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 364  append");
t2=*((C_word*)lf[20]+1);
((C_proc4)C_retrieve_proc(t2))(4,t2,((C_word*)t0)[3],((C_word*)((C_word*)t0)[2])[1],t1);}

/* k17797 in k17351 in k17333 in a28991 in k17327 in k17324 in k16801 in k16798 in k16795 in k16792 in k16789 in k16786 in k16783 in k16780 in k16777 in k16774 in k16771 in k16768 in k16765 in k16762 in k16759 in k16756 in k16753 in k16750 in k16747 in k16744 in k16741 in k16602 in k16599 in k16596 in k16593 in k16537 in k16534 in k16531 in k16528 in k16525 in k16522 in k16519 in k16516 in k15271 in k15202 in k15009 in k15006 in k14901 in k14850 in k7607 in k7604 in k5838 in k5545 in k5542 in k5538 in k5247 in k5244 in k5241 in k5238 */
static void C_ccall f_17799(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[3])+1,t1);
t3=((C_word*)t0)[2];
f_17360(t3,t2);}

/* k17358 in k17351 in k17333 in a28991 in k17327 in k17324 in k16801 in k16798 in k16795 in k16792 in k16789 in k16786 in k16783 in k16780 in k16777 in k16774 in k16771 in k16768 in k16765 in k16762 in k16759 in k16756 in k16753 in k16750 in k16747 in k16744 in k16741 in k16602 in k16599 in k16596 in k16593 in k16537 in k16534 in k16531 in k16528 in k16525 in k16522 in k16519 in k16516 in k15271 in k15202 in k15009 in k15006 in k14901 in k14850 in k7607 in k7604 in k5838 in k5545 in k5542 in k5538 in k5247 in k5244 in k5241 in k5238 */
static void C_fcall f_17360(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word ab[22],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_17360,NULL,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|11,a[1]=(C_word)f_17363,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],a[7]=((C_word*)t0)[7],a[8]=((C_word*)t0)[8],a[9]=((C_word*)t0)[9],a[10]=((C_word*)t0)[10],a[11]=((C_word*)t0)[11],tmp=(C_word)a,a+=12,tmp);
t3=(C_word)C_i_cadr(((C_word*)((C_word*)t0)[3])[1]);
t4=C_SCHEME_UNDEFINED;
t5=(*a=C_VECTOR_TYPE|1,a[1]=t4,tmp=(C_word)a,a+=2,tmp);
t6=C_set_block_item(t5,0,(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_17674,a[2]=((C_word*)t0)[11],a[3]=((C_word*)t0)[2],a[4]=((C_word*)t0)[9],a[5]=((C_word*)t0)[6],a[6]=t5,a[7]=((C_word)li463),tmp=(C_word)a,a+=8,tmp));
t7=((C_word*)t5)[1];
f_17674(t7,t2,t3);}

/* do2776 in k17358 in k17351 in k17333 in a28991 in k17327 in k17324 in k16801 in k16798 in k16795 in k16792 in k16789 in k16786 in k16783 in k16780 in k16777 in k16774 in k16771 in k16768 in k16765 in k16762 in k16759 in k16756 in k16753 in k16750 in k16747 in k16744 in k16741 in k16602 in k16599 in k16596 in k16593 in k16537 in k16534 in k16531 in k16528 in k16525 in k16522 in k16519 in k16516 in k15271 in k15202 in k15009 in k15006 in k14901 in k14850 in k7607 in k7604 in k5838 in k5545 in k5542 in k5538 in k5247 in k5244 in k5241 in k5238 */
static void C_fcall f_17674(C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[12],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_17674,NULL,3,t0,t1,t2);}
if(C_truep((C_word)C_i_nullp(t2))){
t3=t1;
((C_proc2)(void*)(*((C_word*)t3+1)))(2,t3,C_SCHEME_FALSE);}
else{
t3=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_17684,a[2]=t1,a[3]=((C_word*)t0)[6],a[4]=t2,tmp=(C_word)a,a+=5,tmp);
t4=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_17695,a[2]=t3,a[3]=((C_word*)t0)[2],a[4]=((C_word*)t0)[3],a[5]=((C_word*)t0)[4],a[6]=((C_word*)t0)[5],tmp=(C_word)a,a+=7,tmp);
t5=(C_word)C_i_car(t2);
C_trace("ChickenBridge.scm: 364  parse-unit-parsed");
f_15245(t4,t5);}}

/* k17693 in do2776 in k17358 in k17351 in k17333 in a28991 in k17327 in k17324 in k16801 in k16798 in k16795 in k16792 in k16789 in k16786 in k16783 in k16780 in k16777 in k16774 in k16771 in k16768 in k16765 in k16762 in k16759 in k16756 in k16753 in k16750 in k16747 in k16744 in k16741 in k16602 in k16599 in k16596 in k16593 in k16537 in k16534 in k16531 in k16528 in k16525 in k16522 in k16519 in k16516 in k15271 in k15202 in k15009 in k15006 in k14901 in k14850 in k7607 in k7604 in k5838 in k5545 in k5542 in k5538 in k5247 in k5244 in k5241 in k5238 */
static void C_ccall f_17695(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[10],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_17695,2,t0,t1);}
t2=C_SCHEME_UNDEFINED;
t3=(*a=C_VECTOR_TYPE|1,a[1]=t2,tmp=(C_word)a,a+=2,tmp);
t4=C_set_block_item(t3,0,(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_17697,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=t3,a[6]=((C_word*)t0)[6],a[7]=((C_word)li462),tmp=(C_word)a,a+=8,tmp));
t5=((C_word*)t3)[1];
f_17697(t5,((C_word*)t0)[2],t1);}

/* do2779 in k17693 in do2776 in k17358 in k17351 in k17333 in a28991 in k17327 in k17324 in k16801 in k16798 in k16795 in k16792 in k16789 in k16786 in k16783 in k16780 in k16777 in k16774 in k16771 in k16768 in k16765 in k16762 in k16759 in k16756 in k16753 in k16750 in k16747 in k16744 in k16741 in k16602 in k16599 in k16596 in k16593 in k16537 in k16534 in k16531 in k16528 in k16525 in k16522 in k16519 in k16516 in k15271 in k15202 in k15009 in k15006 in k14901 in k14850 in k7607 in k7604 in k5838 in k5545 in k5542 in k5538 in k5247 in k5244 in k5241 in k5238 */
static void C_fcall f_17697(C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word ab[19],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_17697,NULL,3,t0,t1,t2);}
if(C_truep((C_word)C_i_nullp(t2))){
t3=t1;
((C_proc2)(void*)(*((C_word*)t3+1)))(2,t3,C_SCHEME_FALSE);}
else{
t3=(C_word)C_i_car(t2);
t4=(*a=C_CLOSURE_TYPE|9,a[1]=(C_word)f_17711,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=t3,a[5]=((C_word*)t0)[4],a[6]=t1,a[7]=((C_word*)t0)[5],a[8]=t2,a[9]=((C_word*)t0)[6],tmp=(C_word)a,a+=10,tmp);
t5=(C_word)C_i_car(t3);
t6=(C_word)C_i_cadr(t3);
t7=(C_word)C_a_i_list(&a,2,t5,t6);
t8=(C_word)C_a_i_list(&a,1,t7);
C_trace("ChickenBridge.scm: 364  append");
t9=*((C_word*)lf[20]+1);
((C_proc4)C_retrieve_proc(t9))(4,t9,t4,((C_word*)((C_word*)t0)[6])[1],t8);}}

/* k17709 in do2779 in k17693 in do2776 in k17358 in k17351 in k17333 in a28991 in k17327 in k17324 in k16801 in k16798 in k16795 in k16792 in k16789 in k16786 in k16783 in k16780 in k16777 in k16774 in k16771 in k16768 in k16765 in k16762 in k16759 in k16756 in k16753 in k16750 in k16747 in k16744 in k16741 in k16602 in k16599 in k16596 in k16593 in k16537 in k16534 in k16531 in k16528 in k16525 in k16522 in k16519 in k16516 in k15271 in k15202 in k15009 in k15006 in k14901 in k14850 in k7607 in k7604 in k5838 in k5545 in k5542 in k5538 in k5247 in k5244 in k5241 in k5238 */
static void C_ccall f_17711(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word ab[15],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_17711,2,t0,t1);}
t2=C_mutate(((C_word *)((C_word*)t0)[9])+1,t1);
t3=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_17714,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],a[7]=((C_word*)t0)[8],tmp=(C_word)a,a+=8,tmp);
if(C_truep((C_word)C_i_caddr(((C_word*)t0)[4]))){
t4=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_17764,a[2]=t3,a[3]=((C_word*)t0)[2],tmp=(C_word)a,a+=4,tmp);
t5=(C_word)C_i_caddr(((C_word*)t0)[4]);
t6=(C_word)C_a_i_list(&a,1,t5);
C_trace("ChickenBridge.scm: 364  append");
t7=*((C_word*)lf[20]+1);
((C_proc4)C_retrieve_proc(t7))(4,t7,t4,((C_word*)((C_word*)t0)[2])[1],t6);}
else{
t4=t3;
f_17714(t4,C_SCHEME_UNDEFINED);}}

/* k17762 in k17709 in do2779 in k17693 in do2776 in k17358 in k17351 in k17333 in a28991 in k17327 in k17324 in k16801 in k16798 in k16795 in k16792 in k16789 in k16786 in k16783 in k16780 in k16777 in k16774 in k16771 in k16768 in k16765 in k16762 in k16759 in k16756 in k16753 in k16750 in k16747 in k16744 in k16741 in k16602 in k16599 in k16596 in k16593 in k16537 in k16534 in k16531 in k16528 in k16525 in k16522 in k16519 in k16516 in k15271 in k15202 in k15009 in k15006 in k14901 in k14850 in k7607 in k7604 in k5838 in k5545 in k5542 in k5538 in k5247 in k5244 in k5241 in k5238 */
static void C_ccall f_17764(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[3])+1,t1);
t3=((C_word*)t0)[2];
f_17714(t3,t2);}

/* k17712 in k17709 in do2779 in k17693 in do2776 in k17358 in k17351 in k17333 in a28991 in k17327 in k17324 in k16801 in k16798 in k16795 in k16792 in k16789 in k16786 in k16783 in k16780 in k16777 in k16774 in k16771 in k16768 in k16765 in k16762 in k16759 in k16756 in k16753 in k16750 in k16747 in k16744 in k16741 in k16602 in k16599 in k16596 in k16593 in k16537 in k16534 in k16531 in k16528 in k16525 in k16522 in k16519 in k16516 in k15271 in k15202 in k15009 in k15006 in k14901 in k14850 in k7607 in k7604 in k5838 in k5545 in k5542 in k5538 in k5247 in k5244 in k5241 in k5238 */
static void C_fcall f_17714(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[14],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_17714,NULL,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_17717,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
if(C_truep((C_word)C_i_cadddr(((C_word*)t0)[3]))){
t3=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_17749,a[2]=t2,a[3]=((C_word*)t0)[2],tmp=(C_word)a,a+=4,tmp);
t4=(C_word)C_i_cadddr(((C_word*)t0)[3]);
t5=(C_word)C_a_i_list(&a,1,t4);
C_trace("ChickenBridge.scm: 364  append");
t6=*((C_word*)lf[20]+1);
((C_proc4)C_retrieve_proc(t6))(4,t6,t3,((C_word*)((C_word*)t0)[2])[1],t5);}
else{
t3=t2;
f_17717(t3,C_SCHEME_UNDEFINED);}}

/* k17747 in k17712 in k17709 in do2779 in k17693 in do2776 in k17358 in k17351 in k17333 in a28991 in k17327 in k17324 in k16801 in k16798 in k16795 in k16792 in k16789 in k16786 in k16783 in k16780 in k16777 in k16774 in k16771 in k16768 in k16765 in k16762 in k16759 in k16756 in k16753 in k16750 in k16747 in k16744 in k16741 in k16602 in k16599 in k16596 in k16593 in k16537 in k16534 in k16531 in k16528 in k16525 in k16522 in k16519 in k16516 in k15271 in k15202 in k15009 in k15006 in k14901 in k14850 in k7607 in k7604 in k5838 in k5545 in k5542 in k5538 in k5247 in k5244 in k5241 in k5238 */
static void C_ccall f_17749(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[3])+1,t1);
t3=((C_word*)t0)[2];
f_17717(t3,t2);}

/* k17715 in k17712 in k17709 in do2779 in k17693 in do2776 in k17358 in k17351 in k17333 in a28991 in k17327 in k17324 in k16801 in k16798 in k16795 in k16792 in k16789 in k16786 in k16783 in k16780 in k16777 in k16774 in k16771 in k16768 in k16765 in k16762 in k16759 in k16756 in k16753 in k16750 in k16747 in k16744 in k16741 in k16602 in k16599 in k16596 in k16593 in k16537 in k16534 in k16531 in k16528 in k16525 in k16522 in k16519 in k16516 in k15271 in k15202 in k15009 in k15006 in k14901 in k14850 in k7607 in k7604 in k5838 in k5545 in k5542 in k5538 in k5247 in k5244 in k5241 in k5238 */
static void C_fcall f_17717(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[10],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_17717,NULL,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_17720,a[2]=((C_word*)t0)[4],a[3]=((C_word*)t0)[5],a[4]=((C_word*)t0)[6],tmp=(C_word)a,a+=5,tmp);
t3=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_17730,a[2]=((C_word*)t0)[2],a[3]=t2,a[4]=((C_word*)t0)[3],tmp=(C_word)a,a+=5,tmp);
C_trace("ChickenBridge.scm: 364  fifth");
t4=C_retrieve(lf[55]);
((C_proc3)C_retrieve_proc(t4))(3,t4,t3,((C_word*)t0)[2]);}

/* k17728 in k17715 in k17712 in k17709 in do2779 in k17693 in do2776 in k17358 in k17351 in k17333 in a28991 in k17327 in k17324 in k16801 in k16798 in k16795 in k16792 in k16789 in k16786 in k16783 in k16780 in k16777 in k16774 in k16771 in k16768 in k16765 in k16762 in k16759 in k16756 in k16753 in k16750 in k16747 in k16744 in k16741 in k16602 in k16599 in k16596 in k16593 in k16537 in k16534 in k16531 in k16528 in k16525 in k16522 in k16519 in k16516 in k15271 in k15202 in k15009 in k15006 in k14901 in k14850 in k7607 in k7604 in k5838 in k5545 in k5542 in k5538 in k5247 in k5244 in k5241 in k5238 */
static void C_ccall f_17730(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[8],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_17730,2,t0,t1);}
if(C_truep(t1)){
t2=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_17734,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],tmp=(C_word)a,a+=4,tmp);
t3=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_17742,a[2]=((C_word*)t0)[4],a[3]=t2,tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 364  fifth");
t4=C_retrieve(lf[55]);
((C_proc3)C_retrieve_proc(t4))(3,t4,t3,((C_word*)t0)[2]);}
else{
t2=((C_word*)t0)[3];
f_17720(t2,C_SCHEME_UNDEFINED);}}

/* k17740 in k17728 in k17715 in k17712 in k17709 in do2779 in k17693 in do2776 in k17358 in k17351 in k17333 in a28991 in k17327 in k17324 in k16801 in k16798 in k16795 in k16792 in k16789 in k16786 in k16783 in k16780 in k16777 in k16774 in k16771 in k16768 in k16765 in k16762 in k16759 in k16756 in k16753 in k16750 in k16747 in k16744 in k16741 in k16602 in k16599 in k16596 in k16593 in k16537 in k16534 in k16531 in k16528 in k16525 in k16522 in k16519 in k16516 in k15271 in k15202 in k15009 in k15006 in k14901 in k14850 in k7607 in k7604 in k5838 in k5545 in k5542 in k5538 in k5247 in k5244 in k5241 in k5238 */
static void C_ccall f_17742(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[3],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_17742,2,t0,t1);}
t2=(C_word)C_a_i_list(&a,1,t1);
C_trace("ChickenBridge.scm: 364  append");
t3=*((C_word*)lf[20]+1);
((C_proc4)C_retrieve_proc(t3))(4,t3,((C_word*)t0)[3],((C_word*)((C_word*)t0)[2])[1],t2);}

/* k17732 in k17728 in k17715 in k17712 in k17709 in do2779 in k17693 in do2776 in k17358 in k17351 in k17333 in a28991 in k17327 in k17324 in k16801 in k16798 in k16795 in k16792 in k16789 in k16786 in k16783 in k16780 in k16777 in k16774 in k16771 in k16768 in k16765 in k16762 in k16759 in k16756 in k16753 in k16750 in k16747 in k16744 in k16741 in k16602 in k16599 in k16596 in k16593 in k16537 in k16534 in k16531 in k16528 in k16525 in k16522 in k16519 in k16516 in k15271 in k15202 in k15009 in k15006 in k14901 in k14850 in k7607 in k7604 in k5838 in k5545 in k5542 in k5538 in k5247 in k5244 in k5241 in k5238 */
static void C_ccall f_17734(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[3])+1,t1);
t3=((C_word*)t0)[2];
f_17720(t3,t2);}

/* k17718 in k17715 in k17712 in k17709 in do2779 in k17693 in do2776 in k17358 in k17351 in k17333 in a28991 in k17327 in k17324 in k16801 in k16798 in k16795 in k16792 in k16789 in k16786 in k16783 in k16780 in k16777 in k16774 in k16771 in k16768 in k16765 in k16762 in k16759 in k16756 in k16753 in k16750 in k16747 in k16744 in k16741 in k16602 in k16599 in k16596 in k16593 in k16537 in k16534 in k16531 in k16528 in k16525 in k16522 in k16519 in k16516 in k15271 in k15202 in k15009 in k15006 in k14901 in k14850 in k7607 in k7604 in k5838 in k5545 in k5542 in k5538 in k5247 in k5244 in k5241 in k5238 */
static void C_fcall f_17720(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word *a;
t2=(C_word)C_i_cdr(((C_word*)t0)[4]);
t3=((C_word*)((C_word*)t0)[3])[1];
f_17697(t3,((C_word*)t0)[2],t2);}

/* k17682 in do2776 in k17358 in k17351 in k17333 in a28991 in k17327 in k17324 in k16801 in k16798 in k16795 in k16792 in k16789 in k16786 in k16783 in k16780 in k16777 in k16774 in k16771 in k16768 in k16765 in k16762 in k16759 in k16756 in k16753 in k16750 in k16747 in k16744 in k16741 in k16602 in k16599 in k16596 in k16593 in k16537 in k16534 in k16531 in k16528 in k16525 in k16522 in k16519 in k16516 in k15271 in k15202 in k15009 in k15006 in k14901 in k14850 in k7607 in k7604 in k5838 in k5545 in k5542 in k5538 in k5247 in k5244 in k5241 in k5238 */
static void C_ccall f_17684(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word *a;
t2=(C_word)C_i_cdr(((C_word*)t0)[4]);
t3=((C_word*)((C_word*)t0)[3])[1];
f_17674(t3,((C_word*)t0)[2],t2);}

/* k17361 in k17358 in k17351 in k17333 in a28991 in k17327 in k17324 in k16801 in k16798 in k16795 in k16792 in k16789 in k16786 in k16783 in k16780 in k16777 in k16774 in k16771 in k16768 in k16765 in k16762 in k16759 in k16756 in k16753 in k16750 in k16747 in k16744 in k16741 in k16602 in k16599 in k16596 in k16593 in k16537 in k16534 in k16531 in k16528 in k16525 in k16522 in k16519 in k16516 in k15271 in k15202 in k15009 in k15006 in k14901 in k14850 in k7607 in k7604 in k5838 in k5545 in k5542 in k5538 in k5247 in k5244 in k5241 in k5238 */
static void C_ccall f_17363(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word ab[21],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_17363,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|11,a[1]=(C_word)f_17366,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],a[7]=((C_word*)t0)[7],a[8]=((C_word*)t0)[8],a[9]=((C_word*)t0)[9],a[10]=((C_word*)t0)[10],a[11]=((C_word*)t0)[11],tmp=(C_word)a,a+=12,tmp);
t3=(C_word)C_i_cadddr(((C_word*)((C_word*)t0)[3])[1]);
t4=C_SCHEME_UNDEFINED;
t5=(*a=C_VECTOR_TYPE|1,a[1]=t4,tmp=(C_word)a,a+=2,tmp);
t6=C_set_block_item(t5,0,(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_17638,a[2]=((C_word*)t0)[4],a[3]=((C_word*)t0)[5],a[4]=t5,a[5]=((C_word*)t0)[11],a[6]=((C_word)li461),tmp=(C_word)a,a+=7,tmp));
t7=((C_word*)t5)[1];
f_17638(t7,t2,t3);}

/* do2790 in k17361 in k17358 in k17351 in k17333 in a28991 in k17327 in k17324 in k16801 in k16798 in k16795 in k16792 in k16789 in k16786 in k16783 in k16780 in k16777 in k16774 in k16771 in k16768 in k16765 in k16762 in k16759 in k16756 in k16753 in k16750 in k16747 in k16744 in k16741 in k16602 in k16599 in k16596 in k16593 in k16537 in k16534 in k16531 in k16528 in k16525 in k16522 in k16519 in k16516 in k15271 in k15202 in k15009 in k15006 in k14901 in k14850 in k7607 in k7604 in k5838 in k5545 in k5542 in k5538 in k5247 in k5244 in k5241 in k5238 */
static void C_fcall f_17638(C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[10],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_17638,NULL,3,t0,t1,t2);}
if(C_truep((C_word)C_i_nullp(t2))){
t3=t1;
((C_proc2)(void*)(*((C_word*)t3+1)))(2,t3,C_SCHEME_FALSE);}
else{
t3=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_17649,a[2]=t1,a[3]=((C_word*)t0)[4],a[4]=t2,a[5]=((C_word*)t0)[5],tmp=(C_word)a,a+=6,tmp);
t4=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_17664,a[2]=((C_word*)t0)[5],a[3]=t3,tmp=(C_word)a,a+=4,tmp);
t5=(C_word)C_i_car(t2);
C_trace("ChickenBridge.scm: 364  emit");
f_15363(t4,t5,((C_word*)((C_word*)t0)[3])[1],((C_word*)t0)[2]);}}

/* k17662 in do2790 in k17361 in k17358 in k17351 in k17333 in a28991 in k17327 in k17324 in k16801 in k16798 in k16795 in k16792 in k16789 in k16786 in k16783 in k16780 in k16777 in k16774 in k16771 in k16768 in k16765 in k16762 in k16759 in k16756 in k16753 in k16750 in k16747 in k16744 in k16741 in k16602 in k16599 in k16596 in k16593 in k16537 in k16534 in k16531 in k16528 in k16525 in k16522 in k16519 in k16516 in k15271 in k15202 in k15009 in k15006 in k14901 in k14850 in k7607 in k7604 in k5838 in k5545 in k5542 in k5538 in k5247 in k5244 in k5241 in k5238 */
static void C_ccall f_17664(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[3],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_17664,2,t0,t1);}
t2=(C_word)C_a_i_list(&a,1,t1);
C_trace("ChickenBridge.scm: 364  append");
t3=*((C_word*)lf[20]+1);
((C_proc4)C_retrieve_proc(t3))(4,t3,((C_word*)t0)[3],((C_word*)((C_word*)t0)[2])[1],t2);}

/* k17647 in do2790 in k17361 in k17358 in k17351 in k17333 in a28991 in k17327 in k17324 in k16801 in k16798 in k16795 in k16792 in k16789 in k16786 in k16783 in k16780 in k16777 in k16774 in k16771 in k16768 in k16765 in k16762 in k16759 in k16756 in k16753 in k16750 in k16747 in k16744 in k16741 in k16602 in k16599 in k16596 in k16593 in k16537 in k16534 in k16531 in k16528 in k16525 in k16522 in k16519 in k16516 in k15271 in k15202 in k15009 in k15006 in k14901 in k14850 in k7607 in k7604 in k5838 in k5545 in k5542 in k5538 in k5247 in k5244 in k5241 in k5238 */
static void C_ccall f_17649(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[5])+1,t1);
t3=(C_word)C_i_cdr(((C_word*)t0)[4]);
t4=((C_word*)((C_word*)t0)[3])[1];
f_17638(t4,((C_word*)t0)[2],t3);}

/* k17364 in k17361 in k17358 in k17351 in k17333 in a28991 in k17327 in k17324 in k16801 in k16798 in k16795 in k16792 in k16789 in k16786 in k16783 in k16780 in k16777 in k16774 in k16771 in k16768 in k16765 in k16762 in k16759 in k16756 in k16753 in k16750 in k16747 in k16744 in k16741 in k16602 in k16599 in k16596 in k16593 in k16537 in k16534 in k16531 in k16528 in k16525 in k16522 in k16519 in k16516 in k15271 in k15202 in k15009 in k15006 in k14901 in k14850 in k7607 in k7604 in k5838 in k5545 in k5542 in k5538 in k5247 in k5244 in k5241 in k5238 */
static void C_ccall f_17366(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[11],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_17366,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|10,a[1]=(C_word)f_17370,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],a[7]=((C_word*)t0)[8],a[8]=((C_word*)t0)[9],a[9]=((C_word*)t0)[10],a[10]=((C_word*)t0)[11],tmp=(C_word)a,a+=11,tmp);
C_trace("ChickenBridge.scm: 364  append");
t3=*((C_word*)lf[20]+1);
((C_proc4)C_retrieve_proc(t3))(4,t3,t2,((C_word*)((C_word*)t0)[11])[1],((C_word*)((C_word*)t0)[2])[1]);}

/* k17368 in k17364 in k17361 in k17358 in k17351 in k17333 in a28991 in k17327 in k17324 in k16801 in k16798 in k16795 in k16792 in k16789 in k16786 in k16783 in k16780 in k16777 in k16774 in k16771 in k16768 in k16765 in k16762 in k16759 in k16756 in k16753 in k16750 in k16747 in k16744 in k16741 in k16602 in k16599 in k16596 in k16593 in k16537 in k16534 in k16531 in k16528 in k16525 in k16522 in k16519 in k16516 in k15271 in k15202 in k15009 in k15006 in k14901 in k14850 in k7607 in k7604 in k5838 in k5545 in k5542 in k5538 in k5247 in k5244 in k5241 in k5238 */
static void C_ccall f_17370(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word ab[20],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_17370,2,t0,t1);}
t2=C_mutate(((C_word *)((C_word*)t0)[10])+1,t1);
t3=(*a=C_CLOSURE_TYPE|10,a[1]=(C_word)f_17373,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[10],a[6]=((C_word*)t0)[5],a[7]=((C_word*)t0)[6],a[8]=((C_word*)t0)[7],a[9]=((C_word*)t0)[8],a[10]=((C_word*)t0)[9],tmp=(C_word)a,a+=11,tmp);
t4=(C_word)C_i_caddr(((C_word*)((C_word*)t0)[2])[1]);
t5=C_SCHEME_UNDEFINED;
t6=(*a=C_VECTOR_TYPE|1,a[1]=t5,tmp=(C_word)a,a+=2,tmp);
t7=C_set_block_item(t6,0,(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_17582,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=t6,a[5]=((C_word*)t0)[8],a[6]=((C_word)li460),tmp=(C_word)a,a+=7,tmp));
t8=((C_word*)t6)[1];
f_17582(t8,t3,t4);}

/* do2795 in k17368 in k17364 in k17361 in k17358 in k17351 in k17333 in a28991 in k17327 in k17324 in k16801 in k16798 in k16795 in k16792 in k16789 in k16786 in k16783 in k16780 in k16777 in k16774 in k16771 in k16768 in k16765 in k16762 in k16759 in k16756 in k16753 in k16750 in k16747 in k16744 in k16741 in k16602 in k16599 in k16596 in k16593 in k16537 in k16534 in k16531 in k16528 in k16525 in k16522 in k16519 in k16516 in k15271 in k15202 in k15009 in k15006 in k14901 in k14850 in k7607 in k7604 in k5838 in k5545 in k5542 in k5538 in k5247 in k5244 in k5241 in k5238 */
static void C_fcall f_17582(C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word t5;
C_word ab[8],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_17582,NULL,3,t0,t1,t2);}
if(C_truep((C_word)C_i_nullp(t2))){
t3=t1;
((C_proc2)(void*)(*((C_word*)t3+1)))(2,t3,C_SCHEME_FALSE);}
else{
t3=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_17592,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=t1,a[5]=((C_word*)t0)[4],a[6]=t2,a[7]=((C_word*)t0)[5],tmp=(C_word)a,a+=8,tmp);
t4=(C_word)C_i_car(t2);
C_trace("ChickenBridge.scm: 364  parse-unit-parsed");
f_15245(t3,t4);}}

/* k17590 in do2795 in k17368 in k17364 in k17361 in k17358 in k17351 in k17333 in a28991 in k17327 in k17324 in k16801 in k16798 in k16795 in k16792 in k16789 in k16786 in k16783 in k16780 in k16777 in k16774 in k16771 in k16768 in k16765 in k16762 in k16759 in k16756 in k16753 in k16750 in k16747 in k16744 in k16741 in k16602 in k16599 in k16596 in k16593 in k16537 in k16534 in k16531 in k16528 in k16525 in k16522 in k16519 in k16516 in k15271 in k15202 in k15009 in k15006 in k14901 in k14850 in k7607 in k7604 in k5838 in k5545 in k5542 in k5538 in k5247 in k5244 in k5241 in k5238 */
static void C_ccall f_17592(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_17592,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_17595,a[2]=t1,a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cadr(t1);
C_trace("ChickenBridge.scm: 364  emit");
f_15363(t2,t3,((C_word*)((C_word*)t0)[3])[1],((C_word*)t0)[2]);}

/* k17593 in k17590 in do2795 in k17368 in k17364 in k17361 in k17358 in k17351 in k17333 in a28991 in k17327 in k17324 in k16801 in k16798 in k16795 in k16792 in k16789 in k16786 in k16783 in k16780 in k16777 in k16774 in k16771 in k16768 in k16765 in k16762 in k16759 in k16756 in k16753 in k16750 in k16747 in k16744 in k16741 in k16602 in k16599 in k16596 in k16593 in k16537 in k16534 in k16531 in k16528 in k16525 in k16522 in k16519 in k16516 in k15271 in k15202 in k15009 in k15006 in k14901 in k14850 in k7607 in k7604 in k5838 in k5545 in k5542 in k5538 in k5247 in k5244 in k5241 in k5238 */
static void C_ccall f_17595(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word ab[13],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_17595,2,t0,t1);}
t2=t1;
t3=(*a=C_VECTOR_TYPE|1,a[1]=t2,tmp=(C_word)a,a+=2,tmp);
t4=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_17598,a[2]=t3,a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],tmp=(C_word)a,a+=7,tmp);
t5=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_17616,a[2]=t4,a[3]=t3,tmp=(C_word)a,a+=4,tmp);
t6=(C_word)C_i_car(((C_word*)t0)[2]);
C_trace("ChickenBridge.scm: 364  token-unit-type=?");
f_15291(t5,t6,C_fix(20224));}

/* k17614 in k17593 in k17590 in do2795 in k17368 in k17364 in k17361 in k17358 in k17351 in k17333 in a28991 in k17327 in k17324 in k16801 in k16798 in k16795 in k16792 in k16789 in k16786 in k16783 in k16780 in k16777 in k16774 in k16771 in k16768 in k16765 in k16762 in k16759 in k16756 in k16753 in k16750 in k16747 in k16744 in k16741 in k16602 in k16599 in k16596 in k16593 in k16537 in k16534 in k16531 in k16528 in k16525 in k16522 in k16519 in k16516 in k15271 in k15202 in k15009 in k15006 in k14901 in k14850 in k7607 in k7604 in k5838 in k5545 in k5542 in k5538 in k5247 in k5244 in k5241 in k5238 */
static void C_ccall f_17616(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[6],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_17616,2,t0,t1);}
if(C_truep(t1)){
t2=(C_word)C_a_i_list(&a,2,lf[291],((C_word*)((C_word*)t0)[3])[1]);
t3=C_mutate(((C_word *)((C_word*)t0)[3])+1,t2);
t4=((C_word*)t0)[2];
f_17598(t4,t3);}
else{
t2=((C_word*)t0)[2];
f_17598(t2,C_SCHEME_UNDEFINED);}}

/* k17596 in k17593 in k17590 in do2795 in k17368 in k17364 in k17361 in k17358 in k17351 in k17333 in a28991 in k17327 in k17324 in k16801 in k16798 in k16795 in k16792 in k16789 in k16786 in k16783 in k16780 in k16777 in k16774 in k16771 in k16768 in k16765 in k16762 in k16759 in k16756 in k16753 in k16750 in k16747 in k16744 in k16741 in k16602 in k16599 in k16596 in k16593 in k16537 in k16534 in k16531 in k16528 in k16525 in k16522 in k16519 in k16516 in k15271 in k15202 in k15009 in k15006 in k14901 in k14850 in k7607 in k7604 in k5838 in k5545 in k5542 in k5538 in k5247 in k5244 in k5241 in k5238 */
static void C_fcall f_17598(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_17598,NULL,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_17602,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],tmp=(C_word)a,a+=6,tmp);
t3=(C_word)C_a_i_list(&a,1,((C_word*)((C_word*)t0)[2])[1]);
C_trace("ChickenBridge.scm: 364  append");
t4=*((C_word*)lf[20]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,((C_word*)((C_word*)t0)[6])[1],t3);}

/* k17600 in k17596 in k17593 in k17590 in do2795 in k17368 in k17364 in k17361 in k17358 in k17351 in k17333 in a28991 in k17327 in k17324 in k16801 in k16798 in k16795 in k16792 in k16789 in k16786 in k16783 in k16780 in k16777 in k16774 in k16771 in k16768 in k16765 in k16762 in k16759 in k16756 in k16753 in k16750 in k16747 in k16744 in k16741 in k16602 in k16599 in k16596 in k16593 in k16537 in k16534 in k16531 in k16528 in k16525 in k16522 in k16519 in k16516 in k15271 in k15202 in k15009 in k15006 in k14901 in k14850 in k7607 in k7604 in k5838 in k5545 in k5542 in k5538 in k5247 in k5244 in k5241 in k5238 */
static void C_ccall f_17602(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[5])+1,t1);
t3=(C_word)C_i_cdr(((C_word*)t0)[4]);
t4=((C_word*)((C_word*)t0)[3])[1];
f_17582(t4,((C_word*)t0)[2],t3);}

/* k17371 in k17368 in k17364 in k17361 in k17358 in k17351 in k17333 in a28991 in k17327 in k17324 in k16801 in k16798 in k16795 in k16792 in k16789 in k16786 in k16783 in k16780 in k16777 in k16774 in k16771 in k16768 in k16765 in k16762 in k16759 in k16756 in k16753 in k16750 in k16747 in k16744 in k16741 in k16602 in k16599 in k16596 in k16593 in k16537 in k16534 in k16531 in k16528 in k16525 in k16522 in k16519 in k16516 in k15271 in k15202 in k15009 in k15006 in k14901 in k14850 in k7607 in k7604 in k5838 in k5545 in k5542 in k5538 in k5247 in k5244 in k5241 in k5238 */
static void C_ccall f_17373(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word ab[14],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_17373,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|10,a[1]=(C_word)f_17376,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],a[7]=((C_word*)t0)[7],a[8]=((C_word*)t0)[8],a[9]=((C_word*)t0)[9],a[10]=((C_word*)t0)[10],tmp=(C_word)a,a+=11,tmp);
if(C_truep((C_word)C_i_pairp(((C_word*)((C_word*)t0)[9])[1]))){
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[9])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
t4=(C_word)C_i_car(((C_word*)((C_word*)t0)[9])[1]);
t5=C_mutate(((C_word *)((C_word*)t0)[9])+1,t4);
t6=t2;
f_17376(t6,t5);}
else{
t4=(C_word)C_a_i_cons(&a,2,lf[290],((C_word*)((C_word*)t0)[9])[1]);
t5=C_mutate(((C_word *)((C_word*)t0)[9])+1,t4);
t6=t2;
f_17376(t6,t5);}}
else{
t3=C_set_block_item(((C_word*)t0)[9],0,C_SCHEME_FALSE);
t4=t2;
f_17376(t4,t3);}}

/* k17374 in k17371 in k17368 in k17364 in k17361 in k17358 in k17351 in k17333 in a28991 in k17327 in k17324 in k16801 in k16798 in k16795 in k16792 in k16789 in k16786 in k16783 in k16780 in k16777 in k16774 in k16771 in k16768 in k16765 in k16762 in k16759 in k16756 in k16753 in k16750 in k16747 in k16744 in k16741 in k16602 in k16599 in k16596 in k16593 in k16537 in k16534 in k16531 in k16528 in k16525 in k16522 in k16519 in k16516 in k15271 in k15202 in k15009 in k15006 in k14901 in k14850 in k7607 in k7604 in k5838 in k5545 in k5542 in k5538 in k5247 in k5244 in k5241 in k5238 */
static void C_fcall f_17376(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[15],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_17376,NULL,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_17379,a[2]=((C_word*)t0)[5],a[3]=((C_word*)t0)[6],a[4]=((C_word*)t0)[7],a[5]=((C_word*)t0)[8],a[6]=((C_word*)t0)[9],a[7]=((C_word*)t0)[10],tmp=(C_word)a,a+=8,tmp);
t3=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_17545,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=t2,a[6]=((C_word*)t0)[8],tmp=(C_word)a,a+=7,tmp);
C_trace("ChickenBridge.scm: 364  fifth");
t4=C_retrieve(lf[55]);
((C_proc3)C_retrieve_proc(t4))(3,t4,t3,((C_word*)((C_word*)t0)[2])[1]);}

/* k17543 in k17374 in k17371 in k17368 in k17364 in k17361 in k17358 in k17351 in k17333 in a28991 in k17327 in k17324 in k16801 in k16798 in k16795 in k16792 in k16789 in k16786 in k16783 in k16780 in k16777 in k16774 in k16771 in k16768 in k16765 in k16762 in k16759 in k16756 in k16753 in k16750 in k16747 in k16744 in k16741 in k16602 in k16599 in k16596 in k16593 in k16537 in k16534 in k16531 in k16528 in k16525 in k16522 in k16519 in k16516 in k15271 in k15202 in k15009 in k15006 in k14901 in k14850 in k7607 in k7604 in k5838 in k5545 in k5542 in k5538 in k5247 in k5244 in k5241 in k5238 */
static void C_ccall f_17545(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_17545,2,t0,t1);}
if(C_truep(t1)){
t2=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_17549,a[2]=((C_word*)t0)[5],a[3]=((C_word*)t0)[6],tmp=(C_word)a,a+=4,tmp);
t3=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_17553,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=t2,tmp=(C_word)a,a+=5,tmp);
C_trace("ChickenBridge.scm: 364  fifth");
t4=C_retrieve(lf[55]);
((C_proc3)C_retrieve_proc(t4))(3,t4,t3,((C_word*)((C_word*)t0)[2])[1]);}
else{
t2=C_set_block_item(((C_word*)t0)[6],0,C_SCHEME_FALSE);
t3=((C_word*)t0)[5];
f_17379(t3,t2);}}

/* k17551 in k17543 in k17374 in k17371 in k17368 in k17364 in k17361 in k17358 in k17351 in k17333 in a28991 in k17327 in k17324 in k16801 in k16798 in k16795 in k16792 in k16789 in k16786 in k16783 in k16780 in k16777 in k16774 in k16771 in k16768 in k16765 in k16762 in k16759 in k16756 in k16753 in k16750 in k16747 in k16744 in k16741 in k16602 in k16599 in k16596 in k16593 in k16537 in k16534 in k16531 in k16528 in k16525 in k16522 in k16519 in k16516 in k15271 in k15202 in k15009 in k15006 in k14901 in k14850 in k7607 in k7604 in k5838 in k5545 in k5542 in k5538 in k5247 in k5244 in k5241 in k5238 */
static void C_ccall f_17553(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 364  emit");
f_15363(((C_word*)t0)[4],t1,((C_word*)((C_word*)t0)[3])[1],((C_word*)t0)[2]);}

/* k17547 in k17543 in k17374 in k17371 in k17368 in k17364 in k17361 in k17358 in k17351 in k17333 in a28991 in k17327 in k17324 in k16801 in k16798 in k16795 in k16792 in k16789 in k16786 in k16783 in k16780 in k16777 in k16774 in k16771 in k16768 in k16765 in k16762 in k16759 in k16756 in k16753 in k16750 in k16747 in k16744 in k16741 in k16602 in k16599 in k16596 in k16593 in k16537 in k16534 in k16531 in k16528 in k16525 in k16522 in k16519 in k16516 in k15271 in k15202 in k15009 in k15006 in k14901 in k14850 in k7607 in k7604 in k5838 in k5545 in k5542 in k5538 in k5247 in k5244 in k5241 in k5238 */
static void C_ccall f_17549(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[3])+1,t1);
t3=((C_word*)t0)[2];
f_17379(t3,t2);}

/* k17377 in k17374 in k17371 in k17368 in k17364 in k17361 in k17358 in k17351 in k17333 in a28991 in k17327 in k17324 in k16801 in k16798 in k16795 in k16792 in k16789 in k16786 in k16783 in k16780 in k16777 in k16774 in k16771 in k16768 in k16765 in k16762 in k16759 in k16756 in k16753 in k16750 in k16747 in k16744 in k16741 in k16602 in k16599 in k16596 in k16593 in k16537 in k16534 in k16531 in k16528 in k16525 in k16522 in k16519 in k16516 in k15271 in k15202 in k15009 in k15006 in k14901 in k14850 in k7607 in k7604 in k5838 in k5545 in k5542 in k5538 in k5247 in k5244 in k5241 in k5238 */
static void C_fcall f_17379(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word ab[31],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_17379,NULL,2,t0,t1);}
t2=((C_word*)((C_word*)t0)[7])[1];
if(C_truep(t2)){
t3=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_17407,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],tmp=(C_word)a,a+=7,tmp);
C_trace("ChickenBridge.scm: 364  gensym");
t4=C_retrieve(lf[28]);
((C_proc3)C_retrieve_proc(t4))(3,t4,t3,lf[722]);}
else{
t3=(C_word)C_a_i_list(&a,2,((C_word*)((C_word*)t0)[6])[1],((C_word*)((C_word*)t0)[5])[1]);
t4=(C_word)C_a_i_cons(&a,2,t3,((C_word*)((C_word*)t0)[2])[1]);
t5=(C_word)C_a_i_cons(&a,2,C_SCHEME_END_OF_LIST,t4);
t6=(C_word)C_a_i_cons(&a,2,lf[547],t5);
t7=((C_word*)t0)[4];
((C_proc2)(void*)(*((C_word*)t7+1)))(2,t7,(C_word)C_a_i_list(&a,3,lf[4],((C_word*)((C_word*)t0)[3])[1],t6));}}

/* k17405 in k17377 in k17374 in k17371 in k17368 in k17364 in k17361 in k17358 in k17351 in k17333 in a28991 in k17327 in k17324 in k16801 in k16798 in k16795 in k16792 in k16789 in k16786 in k16783 in k16780 in k16777 in k16774 in k16771 in k16768 in k16765 in k16762 in k16759 in k16756 in k16753 in k16750 in k16747 in k16744 in k16741 in k16602 in k16599 in k16596 in k16593 in k16537 in k16534 in k16531 in k16528 in k16525 in k16522 in k16519 in k16516 in k15271 in k15202 in k15009 in k15006 in k14901 in k14850 in k7607 in k7604 in k5838 in k5545 in k5542 in k5538 in k5247 in k5244 in k5241 in k5238 */
static void C_ccall f_17407(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[8],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_17407,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_17410,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],a[7]=t1,tmp=(C_word)a,a+=8,tmp);
C_trace("ChickenBridge.scm: 364  gensym");
t3=C_retrieve(lf[28]);
((C_proc3)C_retrieve_proc(t3))(3,t3,t2,lf[721]);}

/* k17408 in k17405 in k17377 in k17374 in k17371 in k17368 in k17364 in k17361 in k17358 in k17351 in k17333 in a28991 in k17327 in k17324 in k16801 in k16798 in k16795 in k16792 in k16789 in k16786 in k16783 in k16780 in k16777 in k16774 in k16771 in k16768 in k16765 in k16762 in k16759 in k16756 in k16753 in k16750 in k16747 in k16744 in k16741 in k16602 in k16599 in k16596 in k16593 in k16537 in k16534 in k16531 in k16528 in k16525 in k16522 in k16519 in k16516 in k15271 in k15202 in k15009 in k15006 in k14901 in k14850 in k7607 in k7604 in k5838 in k5545 in k5542 in k5538 in k5247 in k5244 in k5241 in k5238 */
static void C_ccall f_17410(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_17410,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|8,a[1]=(C_word)f_17413,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],a[7]=t1,a[8]=((C_word*)t0)[7],tmp=(C_word)a,a+=9,tmp);
C_trace("ChickenBridge.scm: 364  gensym");
t3=C_retrieve(lf[28]);
((C_proc3)C_retrieve_proc(t3))(3,t3,t2,lf[720]);}

/* k17411 in k17408 in k17405 in k17377 in k17374 in k17371 in k17368 in k17364 in k17361 in k17358 in k17351 in k17333 in a28991 in k17327 in k17324 in k16801 in k16798 in k16795 in k16792 in k16789 in k16786 in k16783 in k16780 in k16777 in k16774 in k16771 in k16768 in k16765 in k16762 in k16759 in k16756 in k16753 in k16750 in k16747 in k16744 in k16741 in k16602 in k16599 in k16596 in k16593 in k16537 in k16534 in k16531 in k16528 in k16525 in k16522 in k16519 in k16516 in k15271 in k15202 in k15009 in k15006 in k14901 in k14850 in k7607 in k7604 in k5838 in k5545 in k5542 in k5538 in k5247 in k5244 in k5241 in k5238 */
static void C_ccall f_17413(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[10],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_17413,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|9,a[1]=(C_word)f_17416,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],a[7]=t1,a[8]=((C_word*)t0)[7],a[9]=((C_word*)t0)[8],tmp=(C_word)a,a+=10,tmp);
C_trace("ChickenBridge.scm: 364  gensym");
t3=C_retrieve(lf[28]);
((C_proc3)C_retrieve_proc(t3))(3,t3,t2,lf[719]);}

/* k17414 in k17411 in k17408 in k17405 in k17377 in k17374 in k17371 in k17368 in k17364 in k17361 in k17358 in k17351 in k17333 in a28991 in k17327 in k17324 in k16801 in k16798 in k16795 in k16792 in k16789 in k16786 in k16783 in k16780 in k16777 in k16774 in k16771 in k16768 in k16765 in k16762 in k16759 in k16756 in k16753 in k16750 in k16747 in k16744 in k16741 in k16602 in k16599 in k16596 in k16593 in k16537 in k16534 in k16531 in k16528 in k16525 in k16522 in k16519 in k16516 in k15271 in k15202 in k15009 in k15006 in k14901 in k14850 in k7607 in k7604 in k5838 in k5545 in k5542 in k5538 in k5247 in k5244 in k5241 in k5238 */
static void C_ccall f_17416(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[11],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_17416,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|10,a[1]=(C_word)f_17419,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],a[7]=t1,a[8]=((C_word*)t0)[7],a[9]=((C_word*)t0)[8],a[10]=((C_word*)t0)[9],tmp=(C_word)a,a+=11,tmp);
C_trace("ChickenBridge.scm: 364  gensym");
t3=C_retrieve(lf[28]);
((C_proc3)C_retrieve_proc(t3))(3,t3,t2,lf[718]);}

/* k17417 in k17414 in k17411 in k17408 in k17405 in k17377 in k17374 in k17371 in k17368 in k17364 in k17361 in k17358 in k17351 in k17333 in a28991 in k17327 in k17324 in k16801 in k16798 in k16795 in k16792 in k16789 in k16786 in k16783 in k16780 in k16777 in k16774 in k16771 in k16768 in k16765 in k16762 in k16759 in k16756 in k16753 in k16750 in k16747 in k16744 in k16741 in k16602 in k16599 in k16596 in k16593 in k16537 in k16534 in k16531 in k16528 in k16525 in k16522 in k16519 in k16516 in k15271 in k15202 in k15009 in k15006 in k14901 in k14850 in k7607 in k7604 in k5838 in k5545 in k5542 in k5538 in k5247 in k5244 in k5241 in k5238 */
static void C_ccall f_17419(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word t14;
C_word t15;
C_word t16;
C_word t17;
C_word t18;
C_word t19;
C_word t20;
C_word t21;
C_word t22;
C_word t23;
C_word t24;
C_word ab[150],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_17419,2,t0,t1);}
t2=(C_word)C_a_i_list(&a,1,((C_word*)t0)[10]);
t3=(C_word)C_a_i_list(&a,2,((C_word*)t0)[9],C_fix(0));
t4=(C_word)C_a_i_list(&a,3,lf[642],C_SCHEME_END_OF_LIST,((C_word*)t0)[10]);
t5=(C_word)C_a_i_list(&a,2,lf[643],t4);
t6=(C_word)C_a_i_list(&a,1,((C_word*)t0)[8]);
t7=(C_word)C_a_i_list(&a,3,lf[14],((C_word*)t0)[9],((C_word*)t0)[8]);
t8=(C_word)C_a_i_list(&a,3,lf[642],t6,t7);
t9=(C_word)C_a_i_list(&a,2,lf[645],t8);
t10=(C_word)C_a_i_list(&a,3,t3,t5,t9);
t11=(C_word)C_a_i_list(&a,1,t1);
t12=(C_word)C_a_i_list(&a,1,((C_word*)t0)[7]);
t13=(C_word)C_a_i_list(&a,2,lf[446],lf[605]);
t14=(C_word)C_a_i_list(&a,2,lf[446],lf[606]);
t15=(C_word)C_a_i_list(&a,3,lf[604],t13,t14);
t16=(C_word)C_a_i_list(&a,2,t15,((C_word*)t0)[7]);
t17=(C_word)C_a_i_list(&a,4,lf[33],lf[717],t16,((C_word*)t0)[10]);
t18=(C_word)C_a_i_list(&a,2,lf[330],t17);
t19=(C_word)C_a_i_list(&a,2,t1,C_fix(-2));
t20=(C_word)C_a_i_list(&a,4,lf[642],t12,t18,t19);
t21=(C_word)C_a_i_list(&a,3,((C_word*)((C_word*)t0)[6])[1],((C_word*)((C_word*)t0)[5])[1],C_fix(-1));
t22=(*a=C_CLOSURE_TYPE|8,a[1]=(C_word)f_17478,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=t2,a[5]=t10,a[6]=t11,a[7]=t20,a[8]=t21,tmp=(C_word)a,a+=9,tmp);
t23=(C_word)C_a_i_list(&a,1,((C_word*)t0)[9]);
C_trace("##sys#append");
t24=*((C_word*)lf[9]+1);
((C_proc4)(void*)(*((C_word*)t24+1)))(4,t24,t22,((C_word*)((C_word*)t0)[2])[1],t23);}

/* k17476 in k17417 in k17414 in k17411 in k17408 in k17405 in k17377 in k17374 in k17371 in k17368 in k17364 in k17361 in k17358 in k17351 in k17333 in a28991 in k17327 in k17324 in k16801 in k16798 in k16795 in k16792 in k16789 in k16786 in k16783 in k16780 in k16777 in k16774 in k16771 in k16768 in k16765 in k16762 in k16759 in k16756 in k16753 in k16750 in k16747 in k16744 in k16741 in k16602 in k16599 in k16596 in k16593 in k16537 in k16534 in k16531 in k16528 in k16525 in k16522 in k16519 in k16516 in k15271 in k15202 in k15009 in k15006 in k14901 in k14850 in k7607 in k7604 in k5838 in k5545 in k5542 in k5538 in k5247 in k5244 in k5241 in k5238 */
static void C_ccall f_17478(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word ab[72],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_17478,2,t0,t1);}
t2=(C_word)C_a_i_cons(&a,2,lf[18],t1);
t3=(C_word)C_a_i_list(&a,3,lf[641],((C_word*)t0)[8],t2);
t4=(C_word)C_a_i_list(&a,3,lf[642],C_SCHEME_END_OF_LIST,t3);
t5=(C_word)C_a_i_list(&a,3,lf[607],((C_word*)t0)[7],t4);
t6=(C_word)C_a_i_list(&a,3,lf[642],((C_word*)t0)[6],t5);
t7=(C_word)C_a_i_list(&a,2,lf[608],t6);
t8=(C_word)C_a_i_list(&a,3,lf[4],((C_word*)t0)[5],t7);
t9=(C_word)C_a_i_list(&a,3,lf[642],((C_word*)t0)[4],t8);
t10=((C_word*)t0)[3];
((C_proc2)(void*)(*((C_word*)t10+1)))(2,t10,(C_word)C_a_i_list(&a,3,lf[4],((C_word*)((C_word*)t0)[2])[1],t9));}

/* a28945 in k17327 in k17324 in k16801 in k16798 in k16795 in k16792 in k16789 in k16786 in k16783 in k16780 in k16777 in k16774 in k16771 in k16768 in k16765 in k16762 in k16759 in k16756 in k16753 in k16750 in k16747 in k16744 in k16741 in k16602 in k16599 in k16596 in k16593 in k16537 in k16534 in k16531 in k16528 in k16525 in k16522 in k16519 in k16516 in k15271 in k15202 in k15009 in k15006 in k14901 in k14850 in k7607 in k7604 in k5838 in k5545 in k5542 in k5538 in k5247 in k5244 in k5241 in k5238 */
static void C_ccall f_28946(C_word c,C_word t0,C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word ab[10],*a=ab;
if(c!=4) C_bad_argc_2(c,4,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr4,(void*)f_28946,4,t0,t1,t2,t3);}
t4=(C_word)C_i_car(t2);
t5=(C_word)C_i_cadr(t2);
t6=t5;
t7=(*a=C_VECTOR_TYPE|1,a[1]=t6,tmp=(C_word)a,a+=2,tmp);
t8=(C_word)C_i_caddr(t2);
t9=(C_word)C_i_cadddr(t2);
t10=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_28962,a[2]=t2,a[3]=t1,a[4]=t9,a[5]=t8,a[6]=t7,a[7]=t4,tmp=(C_word)a,a+=8,tmp);
C_trace("ChickenBridge.scm: 364  fifth");
t11=C_retrieve(lf[55]);
((C_proc3)C_retrieve_proc(t11))(3,t11,t10,t2);}

/* k28960 in a28945 in k17327 in k17324 in k16801 in k16798 in k16795 in k16792 in k16789 in k16786 in k16783 in k16780 in k16777 in k16774 in k16771 in k16768 in k16765 in k16762 in k16759 in k16756 in k16753 in k16750 in k16747 in k16744 in k16741 in k16602 in k16599 in k16596 in k16593 in k16537 in k16534 in k16531 in k16528 in k16525 in k16522 in k16519 in k16516 in k15271 in k15202 in k15009 in k15006 in k14901 in k14850 in k7607 in k7604 in k5838 in k5545 in k5542 in k5538 in k5247 in k5244 in k5241 in k5238 */
static void C_ccall f_28962(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[8],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_28962,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_28965,a[2]=((C_word*)t0)[3],a[3]=t1,a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],a[7]=((C_word*)t0)[7],tmp=(C_word)a,a+=8,tmp);
C_trace("ChickenBridge.scm: 364  sixth");
t3=C_retrieve(lf[56]);
((C_proc3)C_retrieve_proc(t3))(3,t3,t2,((C_word*)t0)[2]);}

/* k28963 in k28960 in a28945 in k17327 in k17324 in k16801 in k16798 in k16795 in k16792 in k16789 in k16786 in k16783 in k16780 in k16777 in k16774 in k16771 in k16768 in k16765 in k16762 in k16759 in k16756 in k16753 in k16750 in k16747 in k16744 in k16741 in k16602 in k16599 in k16596 in k16593 in k16537 in k16534 in k16531 in k16528 in k16525 in k16522 in k16519 in k16516 in k15271 in k15202 in k15009 in k15006 in k14901 in k14850 in k7607 in k7604 in k5838 in k5545 in k5542 in k5538 in k5247 in k5244 in k5241 in k5238 */
static void C_ccall f_28965(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word ab[11],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_28965,2,t0,t1);}
t2=t1;
t3=(*a=C_VECTOR_TYPE|1,a[1]=t2,tmp=(C_word)a,a+=2,tmp);
t4=(*a=C_CLOSURE_TYPE|8,a[1]=(C_word)f_28968,a[2]=((C_word*)t0)[2],a[3]=t3,a[4]=((C_word*)t0)[3],a[5]=((C_word*)t0)[4],a[6]=((C_word*)t0)[5],a[7]=((C_word*)t0)[6],a[8]=((C_word*)t0)[7],tmp=(C_word)a,a+=9,tmp);
if(C_truep(((C_word*)((C_word*)t0)[6])[1])){
t5=(C_word)C_i_car(((C_word*)((C_word*)t0)[6])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[6])+1,t5);
t7=t4;
f_28968(t7,t6);}
else{
t5=t4;
f_28968(t5,C_SCHEME_UNDEFINED);}}

/* k28966 in k28963 in k28960 in a28945 in k17327 in k17324 in k16801 in k16798 in k16795 in k16792 in k16789 in k16786 in k16783 in k16780 in k16777 in k16774 in k16771 in k16768 in k16765 in k16762 in k16759 in k16756 in k16753 in k16750 in k16747 in k16744 in k16741 in k16602 in k16599 in k16596 in k16593 in k16537 in k16534 in k16531 in k16528 in k16525 in k16522 in k16519 in k16516 in k15271 in k15202 in k15009 in k15006 in k14901 in k14850 in k7607 in k7604 in k5838 in k5545 in k5542 in k5538 in k5247 in k5244 in k5241 in k5238 */
static void C_fcall f_28968(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_28968,NULL,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|8,a[1]=(C_word)f_28971,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],a[7]=((C_word*)t0)[7],a[8]=((C_word*)t0)[8],tmp=(C_word)a,a+=9,tmp);
if(C_truep(((C_word*)((C_word*)t0)[3])[1])){
t3=(C_word)C_i_cadr(((C_word*)((C_word*)t0)[3])[1]);
t4=C_mutate(((C_word *)((C_word*)t0)[3])+1,t3);
t5=t2;
f_28971(t5,t4);}
else{
t3=t2;
f_28971(t3,C_SCHEME_UNDEFINED);}}

/* k28969 in k28966 in k28963 in k28960 in a28945 in k17327 in k17324 in k16801 in k16798 in k16795 in k16792 in k16789 in k16786 in k16783 in k16780 in k16777 in k16774 in k16771 in k16768 in k16765 in k16762 in k16759 in k16756 in k16753 in k16750 in k16747 in k16744 in k16741 in k16602 in k16599 in k16596 in k16593 in k16537 in k16534 in k16531 in k16528 in k16525 in k16522 in k16519 in k16516 in k15271 in k15202 in k15009 in k15006 in k14901 in k14850 in k7607 in k7604 in k5838 in k5545 in k5542 in k5538 in k5247 in k5244 in k5241 in k5238 */
static void C_fcall f_28971(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[22],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_28971,NULL,2,t0,t1);}
t2=(C_word)C_a_i_list(&a,6,((C_word*)t0)[8],((C_word*)((C_word*)t0)[7])[1],((C_word*)t0)[6],((C_word*)t0)[5],((C_word*)t0)[4],((C_word*)((C_word*)t0)[3])[1]);
t3=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_28982,a[2]=t2,a[3]=((C_word*)t0)[2],tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 364  parse-unit-position");
f_15263(t3,((C_word*)t0)[8]);}

/* k28980 in k28969 in k28966 in k28963 in k28960 in a28945 in k17327 in k17324 in k16801 in k16798 in k16795 in k16792 in k16789 in k16786 in k16783 in k16780 in k16777 in k16774 in k16771 in k16768 in k16765 in k16762 in k16759 in k16756 in k16753 in k16750 in k16747 in k16744 in k16741 in k16602 in k16599 in k16596 in k16593 in k16537 in k16534 in k16531 in k16528 in k16525 in k16522 in k16519 in k16516 in k15271 in k15202 in k15009 in k15006 in k14901 in k14850 in k7607 in k7604 in k5838 in k5545 in k5542 in k5538 in k5247 in k5244 in k5241 in k5238 */
static void C_ccall f_28982(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 364  make-parse-unit");
f_15206(((C_word*)t0)[3],C_fix(32512),((C_word*)t0)[2],t1);}

/* k28938 in k17327 in k17324 in k16801 in k16798 in k16795 in k16792 in k16789 in k16786 in k16783 in k16780 in k16777 in k16774 in k16771 in k16768 in k16765 in k16762 in k16759 in k16756 in k16753 in k16750 in k16747 in k16744 in k16741 in k16602 in k16599 in k16596 in k16593 in k16537 in k16534 in k16531 in k16528 in k16525 in k16522 in k16519 in k16516 in k15271 in k15202 in k15009 in k15006 in k14901 in k14850 in k7607 in k7604 in k5838 in k5545 in k5542 in k5538 in k5247 in k5244 in k5241 in k5238 */
static void C_ccall f_28940(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 364  hash-table-set!");
t2=C_retrieve(lf[660]);
((C_proc5)C_retrieve_proc(t2))(5,t2,((C_word*)t0)[2],C_retrieve2(lf[256],"*rules*"),C_fix(32512),t1);}

/* k17849 in k17327 in k17324 in k16801 in k16798 in k16795 in k16792 in k16789 in k16786 in k16783 in k16780 in k16777 in k16774 in k16771 in k16768 in k16765 in k16762 in k16759 in k16756 in k16753 in k16750 in k16747 in k16744 in k16741 in k16602 in k16599 in k16596 in k16593 in k16537 in k16534 in k16531 in k16528 in k16525 in k16522 in k16519 in k16516 in k15271 in k15202 in k15009 in k15006 in k14901 in k14850 in k7607 in k7604 in k5838 in k5545 in k5542 in k5538 in k5247 in k5244 in k5241 in k5238 */
static void C_ccall f_17851(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word t14;
C_word t15;
C_word t16;
C_word t17;
C_word t18;
C_word t19;
C_word t20;
C_word t21;
C_word t22;
C_word t23;
C_word ab[63],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_17851,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_17854,a[2]=((C_word*)t0)[2],tmp=(C_word)a,a+=3,tmp);
t3=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_28795,a[2]=t2,tmp=(C_word)a,a+=3,tmp);
t4=(C_word)C_a_i_cons(&a,2,C_fix(768),C_SCHEME_END_OF_LIST);
t5=(C_word)C_a_i_cons(&a,2,C_fix(512),t4);
t6=(C_word)C_a_i_cons(&a,2,lf[289],t5);
t7=(C_word)C_a_i_cons(&a,2,C_fix(25088),C_SCHEME_END_OF_LIST);
t8=(C_word)C_a_i_cons(&a,2,C_fix(256),t7);
t9=(C_word)C_a_i_cons(&a,2,lf[226],t8);
t10=(C_word)C_a_i_cons(&a,2,C_fix(768),C_SCHEME_END_OF_LIST);
t11=(C_word)C_a_i_cons(&a,2,t9,t10);
t12=(C_word)C_a_i_cons(&a,2,C_fix(25088),t11);
t13=(C_word)C_a_i_cons(&a,2,C_fix(512),t12);
t14=(C_word)C_a_i_cons(&a,2,lf[289],t13);
t15=(C_word)C_a_i_cons(&a,2,t14,C_SCHEME_END_OF_LIST);
t16=(C_word)C_a_i_cons(&a,2,t6,t15);
t17=(C_word)C_a_i_cons(&a,2,lf[290],t16);
t18=(C_word)C_a_i_cons(&a,2,C_fix(36608),C_SCHEME_END_OF_LIST);
t19=(C_word)C_a_i_cons(&a,2,t17,t18);
t20=(C_word)C_a_i_cons(&a,2,C_fix(25088),t19);
t21=(C_word)C_a_i_cons(&a,2,lf[289],t20);
t22=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_28801,a[2]=((C_word)li458),tmp=(C_word)a,a+=3,tmp);
C_trace("ChickenBridge.scm: 364  make-rule");
f_14905(t3,lf[716],C_fix(37632),t21,t22,C_SCHEME_FALSE);}

/* a28800 in k17849 in k17327 in k17324 in k16801 in k16798 in k16795 in k16792 in k16789 in k16786 in k16783 in k16780 in k16777 in k16774 in k16771 in k16768 in k16765 in k16762 in k16759 in k16756 in k16753 in k16750 in k16747 in k16744 in k16741 in k16602 in k16599 in k16596 in k16593 in k16537 in k16534 in k16531 in k16528 in k16525 in k16522 in k16519 in k16516 in k15271 in k15202 in k15009 in k15006 in k14901 in k14850 in k7607 in k7604 in k5838 in k5545 in k5542 in k5538 in k5247 in k5244 in k5241 in k5238 */
static void C_ccall f_28801(C_word c,C_word t0,C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word t14;
C_word t15;
C_word ab[13],*a=ab;
if(c!=4) C_bad_argc_2(c,4,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr4,(void*)f_28801,4,t0,t1,t2,t3);}
t4=(C_word)C_i_car(t2);
t5=(C_word)C_i_cadr(t2);
t6=t5;
t7=(*a=C_VECTOR_TYPE|1,a[1]=t6,tmp=(C_word)a,a+=2,tmp);
t8=(C_word)C_i_caddr(t2);
t9=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_28814,a[2]=t1,a[3]=t8,a[4]=t7,a[5]=t4,tmp=(C_word)a,a+=6,tmp);
t10=(C_word)C_i_length(((C_word*)t7)[1]);
if(C_truep((C_word)C_i_nequalp(t10,C_fix(2)))){
t11=C_set_block_item(t7,0,C_SCHEME_END_OF_LIST);
t12=t9;
f_28814(t12,t11);}
else{
t11=(C_word)C_i_cadr(((C_word*)t7)[1]);
t12=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_28840,a[2]=t9,a[3]=t7,a[4]=t11,tmp=(C_word)a,a+=5,tmp);
t13=(C_word)C_i_caddr(((C_word*)t7)[1]);
C_trace("ChickenBridge.scm: 364  remove-token-type");
f_16541(t12,t13,C_fix(256));}}

/* k28838 in a28800 in k17849 in k17327 in k17324 in k16801 in k16798 in k16795 in k16792 in k16789 in k16786 in k16783 in k16780 in k16777 in k16774 in k16771 in k16768 in k16765 in k16762 in k16759 in k16756 in k16753 in k16750 in k16747 in k16744 in k16741 in k16602 in k16599 in k16596 in k16593 in k16537 in k16534 in k16531 in k16528 in k16525 in k16522 in k16519 in k16516 in k15271 in k15202 in k15009 in k15006 in k14901 in k14850 in k7607 in k7604 in k5838 in k5545 in k5542 in k5538 in k5247 in k5244 in k5241 in k5238 */
static void C_ccall f_28840(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[3],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_28840,2,t0,t1);}
t2=(C_word)C_a_i_cons(&a,2,((C_word*)t0)[4],t1);
t3=C_mutate(((C_word *)((C_word*)t0)[3])+1,t2);
t4=((C_word*)t0)[2];
f_28814(t4,t3);}

/* k28812 in a28800 in k17849 in k17327 in k17324 in k16801 in k16798 in k16795 in k16792 in k16789 in k16786 in k16783 in k16780 in k16777 in k16774 in k16771 in k16768 in k16765 in k16762 in k16759 in k16756 in k16753 in k16750 in k16747 in k16744 in k16741 in k16602 in k16599 in k16596 in k16593 in k16537 in k16534 in k16531 in k16528 in k16525 in k16522 in k16519 in k16516 in k15271 in k15202 in k15009 in k15006 in k14901 in k14850 in k7607 in k7604 in k5838 in k5545 in k5542 in k5538 in k5247 in k5244 in k5241 in k5238 */
static void C_fcall f_28814(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_28814,NULL,2,t0,t1);}
t2=(C_word)C_a_i_list(&a,3,((C_word*)t0)[5],((C_word*)((C_word*)t0)[4])[1],((C_word*)t0)[3]);
C_trace("ChickenBridge.scm: 364  make-parse-unit");
f_15206(((C_word*)t0)[2],C_fix(37632),t2,C_SCHEME_FALSE);}

/* k28793 in k17849 in k17327 in k17324 in k16801 in k16798 in k16795 in k16792 in k16789 in k16786 in k16783 in k16780 in k16777 in k16774 in k16771 in k16768 in k16765 in k16762 in k16759 in k16756 in k16753 in k16750 in k16747 in k16744 in k16741 in k16602 in k16599 in k16596 in k16593 in k16537 in k16534 in k16531 in k16528 in k16525 in k16522 in k16519 in k16516 in k15271 in k15202 in k15009 in k15006 in k14901 in k14850 in k7607 in k7604 in k5838 in k5545 in k5542 in k5538 in k5247 in k5244 in k5241 in k5238 */
static void C_ccall f_28795(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 364  hash-table-set!");
t2=C_retrieve(lf[660]);
((C_proc5)C_retrieve_proc(t2))(5,t2,((C_word*)t0)[2],C_retrieve2(lf[256],"*rules*"),C_fix(37632),t1);}

/* k17852 in k17849 in k17327 in k17324 in k16801 in k16798 in k16795 in k16792 in k16789 in k16786 in k16783 in k16780 in k16777 in k16774 in k16771 in k16768 in k16765 in k16762 in k16759 in k16756 in k16753 in k16750 in k16747 in k16744 in k16741 in k16602 in k16599 in k16596 in k16593 in k16537 in k16534 in k16531 in k16528 in k16525 in k16522 in k16519 in k16516 in k15271 in k15202 in k15009 in k15006 in k14901 in k14850 in k7607 in k7604 in k5838 in k5545 in k5542 in k5538 in k5247 in k5244 in k5241 in k5238 */
static void C_ccall f_17854(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word t14;
C_word t15;
C_word t16;
C_word t17;
C_word t18;
C_word t19;
C_word t20;
C_word t21;
C_word t22;
C_word t23;
C_word t24;
C_word t25;
C_word t26;
C_word ab[72],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_17854,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_17857,a[2]=((C_word*)t0)[2],tmp=(C_word)a,a+=3,tmp);
t3=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_28338,a[2]=t2,tmp=(C_word)a,a+=3,tmp);
t4=(C_word)C_a_i_cons(&a,2,C_fix(30208),C_SCHEME_END_OF_LIST);
t5=(C_word)C_a_i_cons(&a,2,C_fix(256),t4);
t6=(C_word)C_a_i_cons(&a,2,lf[226],t5);
t7=(C_word)C_a_i_cons(&a,2,t6,C_SCHEME_END_OF_LIST);
t8=(C_word)C_a_i_cons(&a,2,C_fix(30208),t7);
t9=(C_word)C_a_i_cons(&a,2,C_fix(24576),t8);
t10=(C_word)C_a_i_cons(&a,2,lf[289],t9);
t11=(C_word)C_a_i_cons(&a,2,C_fix(37632),C_SCHEME_END_OF_LIST);
t12=(C_word)C_a_i_cons(&a,2,C_fix(24064),t11);
t13=(C_word)C_a_i_cons(&a,2,lf[289],t12);
t14=(C_word)C_a_i_cons(&a,2,C_fix(37632),C_SCHEME_END_OF_LIST);
t15=(C_word)C_a_i_cons(&a,2,C_fix(24320),t14);
t16=(C_word)C_a_i_cons(&a,2,lf[289],t15);
t17=(C_word)C_a_i_cons(&a,2,t16,C_SCHEME_END_OF_LIST);
t18=(C_word)C_a_i_cons(&a,2,t13,t17);
t19=(C_word)C_a_i_cons(&a,2,t10,t18);
t20=(C_word)C_a_i_cons(&a,2,lf[290],t19);
t21=(C_word)C_a_i_cons(&a,2,t20,C_SCHEME_END_OF_LIST);
t22=(C_word)C_a_i_cons(&a,2,C_fix(13824),t21);
t23=(C_word)C_a_i_cons(&a,2,lf[289],t22);
t24=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_28344,a[2]=((C_word)li454),tmp=(C_word)a,a+=3,tmp);
t25=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_28383,a[2]=((C_word)li457),tmp=(C_word)a,a+=3,tmp);
C_trace("ChickenBridge.scm: 364  make-rule");
f_14905(t3,lf[715],C_fix(36352),t23,t24,t25);}

/* a28382 in k17852 in k17849 in k17327 in k17324 in k16801 in k16798 in k16795 in k16792 in k16789 in k16786 in k16783 in k16780 in k16777 in k16774 in k16771 in k16768 in k16765 in k16762 in k16759 in k16756 in k16753 in k16750 in k16747 in k16744 in k16741 in k16602 in k16599 in k16596 in k16593 in k16537 in k16534 in k16531 in k16528 in k16525 in k16522 in k16519 in k16516 in k15271 in k15202 in k15009 in k15006 in k14901 in k14850 in k7607 in k7604 in k5838 in k5545 in k5542 in k5538 in k5247 in k5244 in k5241 in k5238 */
static void C_ccall f_28383(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4){
C_word tmp;
C_word t5;
C_word t6;
C_word t7;
C_word ab[7],*a=ab;
if(c!=5) C_bad_argc_2(c,5,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr5,(void*)f_28383,5,t0,t1,t2,t3,t4);}
t5=(*a=C_VECTOR_TYPE|1,a[1]=t3,tmp=(C_word)a,a+=2,tmp);
t6=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_28387,a[2]=t4,a[3]=t5,a[4]=t1,tmp=(C_word)a,a+=5,tmp);
C_trace("ChickenBridge.scm: 364  parse-unit-parsed");
f_15245(t6,t2);}

/* k28385 in a28382 in k17852 in k17849 in k17327 in k17324 in k16801 in k16798 in k16795 in k16792 in k16789 in k16786 in k16783 in k16780 in k16777 in k16774 in k16771 in k16768 in k16765 in k16762 in k16759 in k16756 in k16753 in k16750 in k16747 in k16744 in k16741 in k16602 in k16599 in k16596 in k16593 in k16537 in k16534 in k16531 in k16528 in k16525 in k16522 in k16519 in k16516 in k15271 in k15202 in k15009 in k15006 in k14901 in k14850 in k7607 in k7604 in k5838 in k5545 in k5542 in k5538 in k5247 in k5244 in k5241 in k5238 */
static void C_ccall f_28387(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word ab[18],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_28387,2,t0,t1);}
t2=(C_word)C_i_car(t1);
t3=(C_word)C_a_i_list(&a,1,lf[316]);
t4=t3;
t5=(*a=C_VECTOR_TYPE|1,a[1]=t4,tmp=(C_word)a,a+=2,tmp);
t6=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_28396,a[2]=t3,a[3]=((C_word*)t0)[4],tmp=(C_word)a,a+=4,tmp);
t7=(*a=C_CLOSURE_TYPE|8,a[1]=(C_word)f_28399,a[2]=t2,a[3]=t3,a[4]=t6,a[5]=((C_word*)t0)[2],a[6]=((C_word*)t0)[3],a[7]=t5,a[8]=t1,tmp=(C_word)a,a+=9,tmp);
C_trace("ChickenBridge.scm: 364  token-unit-type=?");
f_15291(t7,t2,C_fix(24576));}

/* k28397 in k28385 in a28382 in k17852 in k17849 in k17327 in k17324 in k16801 in k16798 in k16795 in k16792 in k16789 in k16786 in k16783 in k16780 in k16777 in k16774 in k16771 in k16768 in k16765 in k16762 in k16759 in k16756 in k16753 in k16750 in k16747 in k16744 in k16741 in k16602 in k16599 in k16596 in k16593 in k16537 in k16534 in k16531 in k16528 in k16525 in k16522 in k16519 in k16516 in k15271 in k15202 in k15009 in k15006 in k14901 in k14850 in k7607 in k7604 in k5838 in k5545 in k5542 in k5538 in k5247 in k5244 in k5241 in k5238 */
static void C_ccall f_28399(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word ab[16],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_28399,2,t0,t1);}
if(C_truep(t1)){
t2=(C_word)C_i_cdr(((C_word*)t0)[8]);
t3=C_SCHEME_UNDEFINED;
t4=(*a=C_VECTOR_TYPE|1,a[1]=t3,tmp=(C_word)a,a+=2,tmp);
t5=C_set_block_item(t4,0,(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_28408,a[2]=((C_word*)t0)[5],a[3]=((C_word*)t0)[6],a[4]=t4,a[5]=((C_word*)t0)[7],a[6]=((C_word)li455),tmp=(C_word)a,a+=7,tmp));
t6=((C_word*)t4)[1];
f_28408(t6,((C_word*)t0)[4],t2);}
else{
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_28457,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[5],a[4]=((C_word*)t0)[6],a[5]=((C_word*)t0)[3],a[6]=((C_word*)t0)[4],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cadr(((C_word*)t0)[8]);
C_trace("ChickenBridge.scm: 364  parse-unit-parsed");
f_15245(t2,t3);}}

/* k28455 in k28397 in k28385 in a28382 in k17852 in k17849 in k17327 in k17324 in k16801 in k16798 in k16795 in k16792 in k16789 in k16786 in k16783 in k16780 in k16777 in k16774 in k16771 in k16768 in k16765 in k16762 in k16759 in k16756 in k16753 in k16750 in k16747 in k16744 in k16741 in k16602 in k16599 in k16596 in k16593 in k16537 in k16534 in k16531 in k16528 in k16525 in k16522 in k16519 in k16516 in k15271 in k15202 in k15009 in k15006 in k14901 in k14850 in k7607 in k7604 in k5838 in k5545 in k5542 in k5538 in k5247 in k5244 in k5241 in k5238 */
static void C_ccall f_28457(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[8],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_28457,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_28460,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],a[7]=t1,tmp=(C_word)a,a+=8,tmp);
t3=(C_word)C_i_car(t1);
C_trace("ChickenBridge.scm: 364  emit");
f_15363(t2,t3,((C_word*)((C_word*)t0)[4])[1],((C_word*)t0)[3]);}

/* k28458 in k28455 in k28397 in k28385 in a28382 in k17852 in k17849 in k17327 in k17324 in k16801 in k16798 in k16795 in k16792 in k16789 in k16786 in k16783 in k16780 in k16777 in k16774 in k16771 in k16768 in k16765 in k16762 in k16759 in k16756 in k16753 in k16750 in k16747 in k16744 in k16741 in k16602 in k16599 in k16596 in k16593 in k16537 in k16534 in k16531 in k16528 in k16525 in k16522 in k16519 in k16516 in k15271 in k15202 in k15009 in k15006 in k14901 in k14850 in k7607 in k7604 in k5838 in k5545 in k5542 in k5538 in k5247 in k5244 in k5241 in k5238 */
static void C_ccall f_28460(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_28460,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|8,a[1]=(C_word)f_28463,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],a[7]=((C_word*)t0)[7],a[8]=t1,tmp=(C_word)a,a+=9,tmp);
t3=(C_word)C_i_cadr(((C_word*)t0)[7]);
C_trace("ChickenBridge.scm: 364  emit");
f_15363(t2,t3,((C_word*)((C_word*)t0)[4])[1],((C_word*)t0)[3]);}

/* k28461 in k28458 in k28455 in k28397 in k28385 in a28382 in k17852 in k17849 in k17327 in k17324 in k16801 in k16798 in k16795 in k16792 in k16789 in k16786 in k16783 in k16780 in k16777 in k16774 in k16771 in k16768 in k16765 in k16762 in k16759 in k16756 in k16753 in k16750 in k16747 in k16744 in k16741 in k16602 in k16599 in k16596 in k16593 in k16537 in k16534 in k16531 in k16528 in k16525 in k16522 in k16519 in k16516 in k15271 in k15202 in k15009 in k15006 in k14901 in k14850 in k7607 in k7604 in k5838 in k5545 in k5542 in k5538 in k5247 in k5244 in k5241 in k5238 */
static void C_ccall f_28463(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[10],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_28463,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|9,a[1]=(C_word)f_28675,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=t1,a[6]=((C_word*)t0)[5],a[7]=((C_word*)t0)[6],a[8]=((C_word*)t0)[7],a[9]=((C_word*)t0)[8],tmp=(C_word)a,a+=10,tmp);
C_trace("ChickenBridge.scm: 364  append");
t3=*((C_word*)lf[20]+1);
((C_proc4)C_retrieve_proc(t3))(4,t3,t2,t1,C_SCHEME_END_OF_LIST);}

/* k28673 in k28461 in k28458 in k28455 in k28397 in k28385 in a28382 in k17852 in k17849 in k17327 in k17324 in k16801 in k16798 in k16795 in k16792 in k16789 in k16786 in k16783 in k16780 in k16777 in k16774 in k16771 in k16768 in k16765 in k16762 in k16759 in k16756 in k16753 in k16750 in k16747 in k16744 in k16741 in k16602 in k16599 in k16596 in k16593 in k16537 in k16534 in k16531 in k16528 in k16525 in k16522 in k16519 in k16516 in k15271 in k15202 in k15009 in k15006 in k14901 in k14850 in k7607 in k7604 in k5838 in k5545 in k5542 in k5538 in k5247 in k5244 in k5241 in k5238 */
static void C_ccall f_28675(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word t14;
C_word t15;
C_word ab[28],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_28675,2,t0,t1);}
t2=(C_word)C_a_i_cons(&a,2,((C_word*)t0)[9],t1);
t3=(C_word)C_i_caddr(((C_word*)t0)[8]);
t4=C_SCHEME_FALSE;
t5=(*a=C_VECTOR_TYPE|1,a[1]=t4,tmp=(C_word)a,a+=2,tmp);
t6=C_SCHEME_FALSE;
t7=(*a=C_VECTOR_TYPE|1,a[1]=t6,tmp=(C_word)a,a+=2,tmp);
t8=(*a=C_CLOSURE_TYPE|12,a[1]=(C_word)f_28472,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=t3,a[5]=t2,a[6]=((C_word*)t0)[4],a[7]=((C_word*)t0)[9],a[8]=((C_word*)t0)[5],a[9]=((C_word*)t0)[6],a[10]=((C_word*)t0)[7],a[11]=t7,a[12]=t5,tmp=(C_word)a,a+=13,tmp);
t9=(C_word)C_i_cdr(t2);
if(C_truep((C_word)C_i_nullp(t9))){
t10=t8;
f_28472(t10,C_SCHEME_UNDEFINED);}
else{
t10=(C_word)C_i_length(t2);
t11=(C_word)C_a_i_minus(&a,2,t10,C_fix(2));
t12=(C_word)C_i_list_tail(t2,t11);
t13=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_28613,a[2]=t12,a[3]=t8,tmp=(C_word)a,a+=4,tmp);
t14=(C_word)C_i_cadr(t12);
C_trace("ChickenBridge.scm: 364  symbol->string");
t15=*((C_word*)lf[27]+1);
((C_proc3)C_retrieve_proc(t15))(3,t15,t13,t14);}}

/* k28611 in k28673 in k28461 in k28458 in k28455 in k28397 in k28385 in a28382 in k17852 in k17849 in k17327 in k17324 in k16801 in k16798 in k16795 in k16792 in k16789 in k16786 in k16783 in k16780 in k16777 in k16774 in k16771 in k16768 in k16765 in k16762 in k16759 in k16756 in k16753 in k16750 in k16747 in k16744 in k16741 in k16602 in k16599 in k16596 in k16593 in k16537 in k16534 in k16531 in k16528 in k16525 in k16522 in k16519 in k16516 in k15271 in k15202 in k15009 in k15006 in k14901 in k14850 in k7607 in k7604 in k5838 in k5545 in k5542 in k5538 in k5247 in k5244 in k5241 in k5238 */
static void C_ccall f_28613(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[13],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_28613,2,t0,t1);}
t2=(C_word)C_i_string_length(t1);
t3=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_28622,a[2]=t1,a[3]=t2,a[4]=((C_word*)t0)[2],a[5]=((C_word*)t0)[3],tmp=(C_word)a,a+=6,tmp);
if(C_truep((C_word)C_i_greaterp(t2,C_fix(3)))){
t4=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_28647,a[2]=t3,tmp=(C_word)a,a+=3,tmp);
t5=(C_word)C_a_i_minus(&a,2,t2,C_fix(3));
C_trace("ChickenBridge.scm: 364  substring");
t6=*((C_word*)lf[333]+1);
((C_proc4)C_retrieve_proc(t6))(4,t6,t4,t1,t5);}
else{
t4=t3;
f_28622(t4,C_SCHEME_FALSE);}}

/* k28645 in k28611 in k28673 in k28461 in k28458 in k28455 in k28397 in k28385 in a28382 in k17852 in k17849 in k17327 in k17324 in k16801 in k16798 in k16795 in k16792 in k16789 in k16786 in k16783 in k16780 in k16777 in k16774 in k16771 in k16768 in k16765 in k16762 in k16759 in k16756 in k16753 in k16750 in k16747 in k16744 in k16741 in k16602 in k16599 in k16596 in k16593 in k16537 in k16534 in k16531 in k16528 in k16525 in k16522 in k16519 in k16516 in k15271 in k15202 in k15009 in k15006 in k14901 in k14850 in k7607 in k7604 in k5838 in k5545 in k5542 in k5538 in k5247 in k5244 in k5241 in k5238 */
static void C_ccall f_28647(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
t2=((C_word*)t0)[2];
f_28622(t2,(C_word)C_i_string_equal_p(t1,lf[714]));}

/* k28620 in k28611 in k28673 in k28461 in k28458 in k28455 in k28397 in k28385 in a28382 in k17852 in k17849 in k17327 in k17324 in k16801 in k16798 in k16795 in k16792 in k16789 in k16786 in k16783 in k16780 in k16777 in k16774 in k16771 in k16768 in k16765 in k16762 in k16759 in k16756 in k16753 in k16750 in k16747 in k16744 in k16741 in k16602 in k16599 in k16596 in k16593 in k16537 in k16534 in k16531 in k16528 in k16525 in k16522 in k16519 in k16516 in k15271 in k15202 in k15009 in k15006 in k14901 in k14850 in k7607 in k7604 in k5838 in k5545 in k5542 in k5538 in k5247 in k5244 in k5241 in k5238 */
static void C_fcall f_28622(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[11],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_28622,NULL,2,t0,t1);}
if(C_truep(t1)){
t2=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_28629,a[2]=((C_word*)t0)[4],a[3]=((C_word*)t0)[5],tmp=(C_word)a,a+=4,tmp);
t3=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_28633,a[2]=t2,tmp=(C_word)a,a+=3,tmp);
t4=(C_word)C_a_i_minus(&a,2,((C_word*)t0)[3],C_fix(3));
C_trace("ChickenBridge.scm: 364  substring");
t5=*((C_word*)lf[333]+1);
((C_proc5)C_retrieve_proc(t5))(5,t5,t3,((C_word*)t0)[2],C_fix(0),t4);}
else{
t2=((C_word*)t0)[5];
f_28472(t2,C_SCHEME_UNDEFINED);}}

/* k28631 in k28620 in k28611 in k28673 in k28461 in k28458 in k28455 in k28397 in k28385 in a28382 in k17852 in k17849 in k17327 in k17324 in k16801 in k16798 in k16795 in k16792 in k16789 in k16786 in k16783 in k16780 in k16777 in k16774 in k16771 in k16768 in k16765 in k16762 in k16759 in k16756 in k16753 in k16750 in k16747 in k16744 in k16741 in k16602 in k16599 in k16596 in k16593 in k16537 in k16534 in k16531 in k16528 in k16525 in k16522 in k16519 in k16516 in k15271 in k15202 in k15009 in k15006 in k14901 in k14850 in k7607 in k7604 in k5838 in k5545 in k5542 in k5538 in k5247 in k5244 in k5241 in k5238 */
static void C_ccall f_28633(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 364  string->symbol");
t2=*((C_word*)lf[286]+1);
((C_proc3)C_retrieve_proc(t2))(3,t2,((C_word*)t0)[2],t1);}

/* k28627 in k28620 in k28611 in k28673 in k28461 in k28458 in k28455 in k28397 in k28385 in a28382 in k17852 in k17849 in k17327 in k17324 in k16801 in k16798 in k16795 in k16792 in k16789 in k16786 in k16783 in k16780 in k16777 in k16774 in k16771 in k16768 in k16765 in k16762 in k16759 in k16756 in k16753 in k16750 in k16747 in k16744 in k16741 in k16602 in k16599 in k16596 in k16593 in k16537 in k16534 in k16531 in k16528 in k16525 in k16522 in k16519 in k16516 in k15271 in k15202 in k15009 in k15006 in k14901 in k14850 in k7607 in k7604 in k5838 in k5545 in k5542 in k5538 in k5247 in k5244 in k5241 in k5238 */
static void C_ccall f_28629(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
t2=((C_word*)t0)[3];
f_28472(t2,(C_word)C_i_set_cdr(((C_word*)t0)[2],t1));}

/* k28470 in k28673 in k28461 in k28458 in k28455 in k28397 in k28385 in a28382 in k17852 in k17849 in k17327 in k17324 in k16801 in k16798 in k16795 in k16792 in k16789 in k16786 in k16783 in k16780 in k16777 in k16774 in k16771 in k16768 in k16765 in k16762 in k16759 in k16756 in k16753 in k16750 in k16747 in k16744 in k16741 in k16602 in k16599 in k16596 in k16593 in k16537 in k16534 in k16531 in k16528 in k16525 in k16522 in k16519 in k16516 in k15271 in k15202 in k15009 in k15006 in k14901 in k14850 in k7607 in k7604 in k5838 in k5545 in k5542 in k5538 in k5247 in k5244 in k5241 in k5238 */
static void C_fcall f_28472(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[18],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_28472,NULL,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_28475,a[2]=((C_word*)t0)[7],a[3]=((C_word*)t0)[8],a[4]=((C_word*)t0)[9],a[5]=((C_word*)t0)[10],a[6]=((C_word*)t0)[11],a[7]=((C_word*)t0)[12],tmp=(C_word)a,a+=8,tmp);
t3=(*a=C_CLOSURE_TYPE|9,a[1]=(C_word)f_28550,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=t2,a[6]=((C_word*)t0)[12],a[7]=((C_word*)t0)[5],a[8]=((C_word*)t0)[11],a[9]=((C_word*)t0)[6],tmp=(C_word)a,a+=10,tmp);
C_trace("ChickenBridge.scm: 364  token-unit-type=?");
f_15291(t3,((C_word*)t0)[2],C_fix(24064));}

/* k28548 in k28470 in k28673 in k28461 in k28458 in k28455 in k28397 in k28385 in a28382 in k17852 in k17849 in k17327 in k17324 in k16801 in k16798 in k16795 in k16792 in k16789 in k16786 in k16783 in k16780 in k16777 in k16774 in k16771 in k16768 in k16765 in k16762 in k16759 in k16756 in k16753 in k16750 in k16747 in k16744 in k16741 in k16602 in k16599 in k16596 in k16593 in k16537 in k16534 in k16531 in k16528 in k16525 in k16522 in k16519 in k16516 in k15271 in k15202 in k15009 in k15006 in k14901 in k14850 in k7607 in k7604 in k5838 in k5545 in k5542 in k5538 in k5247 in k5244 in k5241 in k5238 */
static void C_ccall f_28550(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[18],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_28550,2,t0,t1);}
if(C_truep(t1)){
t2=(*a=C_CLOSURE_TYPE|8,a[1]=(C_word)f_28554,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],a[7]=((C_word*)t0)[8],a[8]=((C_word*)t0)[9],tmp=(C_word)a,a+=9,tmp);
C_trace("ChickenBridge.scm: 364  add-emit-info");
f_15335(t2,lf[711],C_SCHEME_TRUE,((C_word*)((C_word*)t0)[9])[1]);}
else{
t2=(*a=C_CLOSURE_TYPE|8,a[1]=(C_word)f_28591,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],a[7]=((C_word*)t0)[8],a[8]=((C_word*)t0)[9],tmp=(C_word)a,a+=9,tmp);
C_trace("ChickenBridge.scm: 364  token-unit-type=?");
f_15291(t2,((C_word*)t0)[2],C_fix(24320));}}

/* k28589 in k28548 in k28470 in k28673 in k28461 in k28458 in k28455 in k28397 in k28385 in a28382 in k17852 in k17849 in k17327 in k17324 in k16801 in k16798 in k16795 in k16792 in k16789 in k16786 in k16783 in k16780 in k16777 in k16774 in k16771 in k16768 in k16765 in k16762 in k16759 in k16756 in k16753 in k16750 in k16747 in k16744 in k16741 in k16602 in k16599 in k16596 in k16593 in k16537 in k16534 in k16531 in k16528 in k16525 in k16522 in k16519 in k16516 in k15271 in k15202 in k15009 in k15006 in k14901 in k14850 in k7607 in k7604 in k5838 in k5545 in k5542 in k5538 in k5247 in k5244 in k5241 in k5238 */
static void C_ccall f_28591(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_28591,2,t0,t1);}
if(C_truep(t1)){
t2=(*a=C_CLOSURE_TYPE|8,a[1]=(C_word)f_28595,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],a[7]=((C_word*)t0)[7],a[8]=((C_word*)t0)[8],tmp=(C_word)a,a+=9,tmp);
C_trace("ChickenBridge.scm: 364  add-emit-info");
f_15335(t2,lf[713],C_SCHEME_TRUE,((C_word*)((C_word*)t0)[8])[1]);}
else{
t2=((C_word*)t0)[4];
f_28475(t2,C_SCHEME_UNDEFINED);}}

/* k28593 in k28589 in k28548 in k28470 in k28673 in k28461 in k28458 in k28455 in k28397 in k28385 in a28382 in k17852 in k17849 in k17327 in k17324 in k16801 in k16798 in k16795 in k16792 in k16789 in k16786 in k16783 in k16780 in k16777 in k16774 in k16771 in k16768 in k16765 in k16762 in k16759 in k16756 in k16753 in k16750 in k16747 in k16744 in k16741 in k16602 in k16599 in k16596 in k16593 in k16537 in k16534 in k16531 in k16528 in k16525 in k16522 in k16519 in k16516 in k15271 in k15202 in k15009 in k15006 in k14901 in k14850 in k7607 in k7604 in k5838 in k5545 in k5542 in k5538 in k5247 in k5244 in k5241 in k5238 */
static void C_ccall f_28595(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[6],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_28595,2,t0,t1);}
t2=C_mutate(((C_word *)((C_word*)t0)[8])+1,t1);
t3=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_28599,a[2]=((C_word*)t0)[4],a[3]=((C_word*)t0)[5],a[4]=((C_word*)t0)[6],a[5]=((C_word*)t0)[7],tmp=(C_word)a,a+=6,tmp);
C_trace("ChickenBridge.scm: 364  emit");
f_15363(t3,((C_word*)t0)[3],((C_word*)((C_word*)t0)[8])[1],((C_word*)t0)[2]);}

/* k28597 in k28593 in k28589 in k28548 in k28470 in k28673 in k28461 in k28458 in k28455 in k28397 in k28385 in a28382 in k17852 in k17849 in k17327 in k17324 in k16801 in k16798 in k16795 in k16792 in k16789 in k16786 in k16783 in k16780 in k16777 in k16774 in k16771 in k16768 in k16765 in k16762 in k16759 in k16756 in k16753 in k16750 in k16747 in k16744 in k16741 in k16602 in k16599 in k16596 in k16593 in k16537 in k16534 in k16531 in k16528 in k16525 in k16522 in k16519 in k16516 in k15271 in k15202 in k15009 in k15006 in k14901 in k14850 in k7607 in k7604 in k5838 in k5545 in k5542 in k5538 in k5247 in k5244 in k5241 in k5238 */
static void C_ccall f_28599(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_28599,2,t0,t1);}
t2=C_mutate(((C_word *)((C_word*)t0)[5])+1,t1);
t3=(C_word)C_a_i_list(&a,3,lf[704],((C_word*)t0)[4],((C_word*)((C_word*)t0)[5])[1]);
t4=C_mutate(((C_word *)((C_word*)t0)[5])+1,t3);
t5=C_mutate(((C_word *)((C_word*)t0)[3])+1,lf[712]);
t6=((C_word*)t0)[2];
f_28475(t6,t5);}

/* k28552 in k28548 in k28470 in k28673 in k28461 in k28458 in k28455 in k28397 in k28385 in a28382 in k17852 in k17849 in k17327 in k17324 in k16801 in k16798 in k16795 in k16792 in k16789 in k16786 in k16783 in k16780 in k16777 in k16774 in k16771 in k16768 in k16765 in k16762 in k16759 in k16756 in k16753 in k16750 in k16747 in k16744 in k16741 in k16602 in k16599 in k16596 in k16593 in k16537 in k16534 in k16531 in k16528 in k16525 in k16522 in k16519 in k16516 in k15271 in k15202 in k15009 in k15006 in k14901 in k14850 in k7607 in k7604 in k5838 in k5545 in k5542 in k5538 in k5247 in k5244 in k5241 in k5238 */
static void C_ccall f_28554(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_28554,2,t0,t1);}
t2=C_mutate(((C_word *)((C_word*)t0)[8])+1,t1);
t3=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_28558,a[2]=((C_word*)t0)[8],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
C_trace("ChickenBridge.scm: 364  emit");
f_15363(t3,((C_word*)t0)[3],((C_word*)((C_word*)t0)[8])[1],((C_word*)t0)[2]);}

/* k28556 in k28552 in k28548 in k28470 in k28673 in k28461 in k28458 in k28455 in k28397 in k28385 in a28382 in k17852 in k17849 in k17327 in k17324 in k16801 in k16798 in k16795 in k16792 in k16789 in k16786 in k16783 in k16780 in k16777 in k16774 in k16771 in k16768 in k16765 in k16762 in k16759 in k16756 in k16753 in k16750 in k16747 in k16744 in k16741 in k16602 in k16599 in k16596 in k16593 in k16537 in k16534 in k16531 in k16528 in k16525 in k16522 in k16519 in k16516 in k15271 in k15202 in k15009 in k15006 in k14901 in k14850 in k7607 in k7604 in k5838 in k5545 in k5542 in k5538 in k5247 in k5244 in k5241 in k5238 */
static void C_ccall f_28558(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[10],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_28558,2,t0,t1);}
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_28561,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[6],a[5]=((C_word*)t0)[5],tmp=(C_word)a,a+=6,tmp);
t4=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_28585,a[2]=t3,a[3]=((C_word*)t0)[6],tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 364  get-emit-info");
f_15323(t4,lf[711],((C_word*)((C_word*)t0)[2])[1]);}

/* k28583 in k28556 in k28552 in k28548 in k28470 in k28673 in k28461 in k28458 in k28455 in k28397 in k28385 in a28382 in k17852 in k17849 in k17327 in k17324 in k16801 in k16798 in k16795 in k16792 in k16789 in k16786 in k16783 in k16780 in k16777 in k16774 in k16771 in k16768 in k16765 in k16762 in k16759 in k16756 in k16753 in k16750 in k16747 in k16744 in k16741 in k16602 in k16599 in k16596 in k16593 in k16537 in k16534 in k16531 in k16528 in k16525 in k16522 in k16519 in k16516 in k15271 in k15202 in k15009 in k15006 in k14901 in k14850 in k7607 in k7604 in k5838 in k5545 in k5542 in k5538 in k5247 in k5244 in k5241 in k5238 */
static void C_ccall f_28585(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word ab[18],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_28585,2,t0,t1);}
t2=(C_word)C_eqp(lf[710],t1);
if(C_truep(t2)){
t3=(C_word)C_a_i_list(&a,1,lf[518]);
t4=(C_word)C_a_i_list(&a,3,lf[642],t3,((C_word*)((C_word*)t0)[3])[1]);
t5=(C_word)C_a_i_list(&a,2,lf[608],t4);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_28561(t7,t6);}
else{
t3=((C_word*)t0)[2];
f_28561(t3,C_SCHEME_UNDEFINED);}}

/* k28559 in k28556 in k28552 in k28548 in k28470 in k28673 in k28461 in k28458 in k28455 in k28397 in k28385 in a28382 in k17852 in k17849 in k17327 in k17324 in k16801 in k16798 in k16795 in k16792 in k16789 in k16786 in k16783 in k16780 in k16777 in k16774 in k16771 in k16768 in k16765 in k16762 in k16759 in k16756 in k16753 in k16750 in k16747 in k16744 in k16741 in k16602 in k16599 in k16596 in k16593 in k16537 in k16534 in k16531 in k16528 in k16525 in k16522 in k16519 in k16516 in k15271 in k15202 in k15009 in k15006 in k14901 in k14850 in k7607 in k7604 in k5838 in k5545 in k5542 in k5538 in k5247 in k5244 in k5241 in k5238 */
static void C_fcall f_28561(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_28561,NULL,2,t0,t1);}
t2=(C_word)C_a_i_list(&a,3,lf[704],((C_word*)t0)[5],((C_word*)((C_word*)t0)[4])[1]);
t3=C_mutate(((C_word *)((C_word*)t0)[4])+1,t2);
t4=C_mutate(((C_word *)((C_word*)t0)[3])+1,lf[709]);
t5=((C_word*)t0)[2];
f_28475(t5,t4);}

/* k28473 in k28470 in k28673 in k28461 in k28458 in k28455 in k28397 in k28385 in a28382 in k17852 in k17849 in k17327 in k17324 in k16801 in k16798 in k16795 in k16792 in k16789 in k16786 in k16783 in k16780 in k16777 in k16774 in k16771 in k16768 in k16765 in k16762 in k16759 in k16756 in k16753 in k16750 in k16747 in k16744 in k16741 in k16602 in k16599 in k16596 in k16593 in k16537 in k16534 in k16531 in k16528 in k16525 in k16522 in k16519 in k16516 in k15271 in k15202 in k15009 in k15006 in k14901 in k14850 in k7607 in k7604 in k5838 in k5545 in k5542 in k5538 in k5247 in k5244 in k5241 in k5238 */
static void C_fcall f_28475(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[15],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_28475,NULL,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_28478,a[2]=((C_word*)t0)[4],a[3]=((C_word*)t0)[5],a[4]=((C_word*)t0)[6],a[5]=((C_word*)t0)[7],tmp=(C_word)a,a+=6,tmp);
t3=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_28489,a[2]=((C_word*)t0)[3],a[3]=t2,a[4]=((C_word*)t0)[7],tmp=(C_word)a,a+=5,tmp);
t4=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_28547,a[2]=((C_word*)t0)[7],a[3]=t3,tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 364  symbol->string");
t5=*((C_word*)lf[27]+1);
((C_proc3)C_retrieve_proc(t5))(3,t5,t4,((C_word*)t0)[2]);}

/* k28545 in k28473 in k28470 in k28673 in k28461 in k28458 in k28455 in k28397 in k28385 in a28382 in k17852 in k17849 in k17327 in k17324 in k16801 in k16798 in k16795 in k16792 in k16789 in k16786 in k16783 in k16780 in k16777 in k16774 in k16771 in k16768 in k16765 in k16762 in k16759 in k16756 in k16753 in k16750 in k16747 in k16744 in k16741 in k16602 in k16599 in k16596 in k16593 in k16537 in k16534 in k16531 in k16528 in k16525 in k16522 in k16519 in k16516 in k15271 in k15202 in k15009 in k15006 in k14901 in k14850 in k7607 in k7604 in k5838 in k5545 in k5542 in k5538 in k5247 in k5244 in k5241 in k5238 */
static void C_ccall f_28547(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 364  string-append");
t2=*((C_word*)lf[124]+1);
((C_proc5)C_retrieve_proc(t2))(5,t2,((C_word*)t0)[3],((C_word*)((C_word*)t0)[2])[1],t1,lf[708]);}

/* k28487 in k28473 in k28470 in k28673 in k28461 in k28458 in k28455 in k28397 in k28385 in a28382 in k17852 in k17849 in k17327 in k17324 in k16801 in k16798 in k16795 in k16792 in k16789 in k16786 in k16783 in k16780 in k16777 in k16774 in k16771 in k16768 in k16765 in k16762 in k16759 in k16756 in k16753 in k16750 in k16747 in k16744 in k16741 in k16602 in k16599 in k16596 in k16593 in k16537 in k16534 in k16531 in k16528 in k16525 in k16522 in k16519 in k16516 in k15271 in k15202 in k15009 in k15006 in k14901 in k14850 in k7607 in k7604 in k5838 in k5545 in k5542 in k5538 in k5247 in k5244 in k5241 in k5238 */
static void C_ccall f_28489(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_28489,2,t0,t1);}
t2=C_SCHEME_UNDEFINED;
t3=(*a=C_VECTOR_TYPE|1,a[1]=t2,tmp=(C_word)a,a+=2,tmp);
t4=C_set_block_item(t3,0,(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_28491,a[2]=t3,a[3]=((C_word*)t0)[4],a[4]=((C_word)li456),tmp=(C_word)a,a+=5,tmp));
t5=((C_word*)t3)[1];
f_28491(t5,((C_word*)t0)[3],t1,((C_word*)t0)[2]);}

/* do2877 in k28487 in k28473 in k28470 in k28673 in k28461 in k28458 in k28455 in k28397 in k28385 in a28382 in k17852 in k17849 in k17327 in k17324 in k16801 in k16798 in k16795 in k16792 in k16789 in k16786 in k16783 in k16780 in k16777 in k16774 in k16771 in k16768 in k16765 in k16762 in k16759 in k16756 in k16753 in k16750 in k16747 in k16744 in k16741 in k16602 in k16599 in k16596 in k16593 in k16537 in k16534 in k16531 in k16528 in k16525 in k16522 in k16519 in k16516 in k15271 in k15202 in k15009 in k15006 in k14901 in k14850 in k7607 in k7604 in k5838 in k5545 in k5542 in k5538 in k5247 in k5244 in k5241 in k5238 */
static void C_fcall f_28491(C_word t0,C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word ab[16],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_28491,NULL,4,t0,t1,t2,t3);}
t4=(*a=C_VECTOR_TYPE|1,a[1]=t2,tmp=(C_word)a,a+=2,tmp);
if(C_truep((C_word)C_i_nullp(t3))){
t5=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_28506,a[2]=t1,a[3]=((C_word*)t0)[3],tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 364  string-append");
t6=*((C_word*)lf[124]+1);
((C_proc4)C_retrieve_proc(t6))(4,t6,t5,((C_word*)t4)[1],lf[706]);}
else{
t5=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_28510,a[2]=t1,a[3]=((C_word*)t0)[2],a[4]=t3,a[5]=t4,tmp=(C_word)a,a+=6,tmp);
t6=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_28539,a[2]=t4,a[3]=t5,tmp=(C_word)a,a+=4,tmp);
t7=(C_word)C_i_car(t3);
C_trace("ChickenBridge.scm: 364  symbol->string");
t8=*((C_word*)lf[27]+1);
((C_proc3)C_retrieve_proc(t8))(3,t8,t6,t7);}}

/* k28537 in do2877 in k28487 in k28473 in k28470 in k28673 in k28461 in k28458 in k28455 in k28397 in k28385 in a28382 in k17852 in k17849 in k17327 in k17324 in k16801 in k16798 in k16795 in k16792 in k16789 in k16786 in k16783 in k16780 in k16777 in k16774 in k16771 in k16768 in k16765 in k16762 in k16759 in k16756 in k16753 in k16750 in k16747 in k16744 in k16741 in k16602 in k16599 in k16596 in k16593 in k16537 in k16534 in k16531 in k16528 in k16525 in k16522 in k16519 in k16516 in k15271 in k15202 in k15009 in k15006 in k14901 in k14850 in k7607 in k7604 in k5838 in k5545 in k5542 in k5538 in k5247 in k5244 in k5241 in k5238 */
static void C_ccall f_28539(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 364  string-append");
t2=*((C_word*)lf[124]+1);
((C_proc4)C_retrieve_proc(t2))(4,t2,((C_word*)t0)[3],((C_word*)((C_word*)t0)[2])[1],t1);}

/* k28508 in do2877 in k28487 in k28473 in k28470 in k28673 in k28461 in k28458 in k28455 in k28397 in k28385 in a28382 in k17852 in k17849 in k17327 in k17324 in k16801 in k16798 in k16795 in k16792 in k16789 in k16786 in k16783 in k16780 in k16777 in k16774 in k16771 in k16768 in k16765 in k16762 in k16759 in k16756 in k16753 in k16750 in k16747 in k16744 in k16741 in k16602 in k16599 in k16596 in k16593 in k16537 in k16534 in k16531 in k16528 in k16525 in k16522 in k16519 in k16516 in k15271 in k15202 in k15009 in k15006 in k14901 in k14850 in k7607 in k7604 in k5838 in k5545 in k5542 in k5538 in k5247 in k5244 in k5241 in k5238 */
static void C_ccall f_28510(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[10],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_28510,2,t0,t1);}
t2=C_mutate(((C_word *)((C_word*)t0)[5])+1,t1);
t3=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_28513,a[2]=((C_word*)t0)[5],a[3]=((C_word*)t0)[2],a[4]=((C_word*)t0)[3],a[5]=((C_word*)t0)[4],tmp=(C_word)a,a+=6,tmp);
t4=(C_word)C_i_cdr(((C_word*)t0)[4]);
if(C_truep((C_word)C_i_nullp(t4))){
t5=t3;
f_28513(t5,C_SCHEME_UNDEFINED);}
else{
t5=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_28527,a[2]=t3,a[3]=((C_word*)t0)[5],tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 364  string-append");
t6=*((C_word*)lf[124]+1);
((C_proc4)C_retrieve_proc(t6))(4,t6,t5,((C_word*)((C_word*)t0)[5])[1],lf[707]);}}

/* k28525 in k28508 in do2877 in k28487 in k28473 in k28470 in k28673 in k28461 in k28458 in k28455 in k28397 in k28385 in a28382 in k17852 in k17849 in k17327 in k17324 in k16801 in k16798 in k16795 in k16792 in k16789 in k16786 in k16783 in k16780 in k16777 in k16774 in k16771 in k16768 in k16765 in k16762 in k16759 in k16756 in k16753 in k16750 in k16747 in k16744 in k16741 in k16602 in k16599 in k16596 in k16593 in k16537 in k16534 in k16531 in k16528 in k16525 in k16522 in k16519 in k16516 in k15271 in k15202 in k15009 in k15006 in k14901 in k14850 in k7607 in k7604 in k5838 in k5545 in k5542 in k5538 in k5247 in k5244 in k5241 in k5238 */
static void C_ccall f_28527(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[3])+1,t1);
t3=((C_word*)t0)[2];
f_28513(t3,t2);}

/* k28511 in k28508 in do2877 in k28487 in k28473 in k28470 in k28673 in k28461 in k28458 in k28455 in k28397 in k28385 in a28382 in k17852 in k17849 in k17327 in k17324 in k16801 in k16798 in k16795 in k16792 in k16789 in k16786 in k16783 in k16780 in k16777 in k16774 in k16771 in k16768 in k16765 in k16762 in k16759 in k16756 in k16753 in k16750 in k16747 in k16744 in k16741 in k16602 in k16599 in k16596 in k16593 in k16537 in k16534 in k16531 in k16528 in k16525 in k16522 in k16519 in k16516 in k15271 in k15202 in k15009 in k15006 in k14901 in k14850 in k7607 in k7604 in k5838 in k5545 in k5542 in k5538 in k5247 in k5244 in k5241 in k5238 */
static void C_fcall f_28513(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word *a;
t2=(C_word)C_i_cdr(((C_word*)t0)[5]);
t3=((C_word*)((C_word*)t0)[4])[1];
f_28491(t3,((C_word*)t0)[3],((C_word*)((C_word*)t0)[2])[1],t2);}

/* k28504 in do2877 in k28487 in k28473 in k28470 in k28673 in k28461 in k28458 in k28455 in k28397 in k28385 in a28382 in k17852 in k17849 in k17327 in k17324 in k16801 in k16798 in k16795 in k16792 in k16789 in k16786 in k16783 in k16780 in k16777 in k16774 in k16771 in k16768 in k16765 in k16762 in k16759 in k16756 in k16753 in k16750 in k16747 in k16744 in k16741 in k16602 in k16599 in k16596 in k16593 in k16537 in k16534 in k16531 in k16528 in k16525 in k16522 in k16519 in k16516 in k15271 in k15202 in k15009 in k15006 in k14901 in k14850 in k7607 in k7604 in k5838 in k5545 in k5542 in k5538 in k5247 in k5244 in k5241 in k5238 */
static void C_ccall f_28506(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[6],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_28506,2,t0,t1);}
t2=(C_word)C_a_i_list(&a,2,lf[341],t1);
t3=C_mutate(((C_word *)((C_word*)t0)[3])+1,t2);
t4=((C_word*)t0)[2];
((C_proc2)(void*)(*((C_word*)t4+1)))(2,t4,t3);}

/* k28476 in k28473 in k28470 in k28673 in k28461 in k28458 in k28455 in k28397 in k28385 in a28382 in k17852 in k17849 in k17327 in k17324 in k16801 in k16798 in k16795 in k16792 in k16789 in k16786 in k16783 in k16780 in k16777 in k16774 in k16771 in k16768 in k16765 in k16762 in k16759 in k16756 in k16753 in k16750 in k16747 in k16744 in k16741 in k16602 in k16599 in k16596 in k16593 in k16537 in k16534 in k16531 in k16528 in k16525 in k16522 in k16519 in k16516 in k15271 in k15202 in k15009 in k15006 in k14901 in k14850 in k7607 in k7604 in k5838 in k5545 in k5542 in k5538 in k5247 in k5244 in k5241 in k5238 */
static void C_ccall f_28478(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[6],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_28478,2,t0,t1);}
t2=(C_word)C_a_i_list(&a,2,((C_word*)((C_word*)t0)[5])[1],((C_word*)((C_word*)t0)[4])[1]);
t3=((C_word*)t0)[3];
f_28396(2,t3,(C_word)C_i_set_cdr(((C_word*)t0)[2],t2));}

/* do2851 in k28397 in k28385 in a28382 in k17852 in k17849 in k17327 in k17324 in k16801 in k16798 in k16795 in k16792 in k16789 in k16786 in k16783 in k16780 in k16777 in k16774 in k16771 in k16768 in k16765 in k16762 in k16759 in k16756 in k16753 in k16750 in k16747 in k16744 in k16741 in k16602 in k16599 in k16596 in k16593 in k16537 in k16534 in k16531 in k16528 in k16525 in k16522 in k16519 in k16516 in k15271 in k15202 in k15009 in k15006 in k14901 in k14850 in k7607 in k7604 in k5838 in k5545 in k5542 in k5538 in k5247 in k5244 in k5241 in k5238 */
static void C_fcall f_28408(C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word t5;
C_word ab[6],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_28408,NULL,3,t0,t1,t2);}
if(C_truep((C_word)C_i_nullp(t2))){
t3=t1;
((C_proc2)(void*)(*((C_word*)t3+1)))(2,t3,C_SCHEME_FALSE);}
else{
t3=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_28418,a[2]=t1,a[3]=((C_word*)t0)[4],a[4]=t2,a[5]=((C_word*)t0)[5],tmp=(C_word)a,a+=6,tmp);
t4=(C_word)C_i_car(t2);
C_trace("ChickenBridge.scm: 364  emit");
f_15363(t3,t4,((C_word*)((C_word*)t0)[3])[1],((C_word*)t0)[2]);}}

/* k28416 in do2851 in k28397 in k28385 in a28382 in k17852 in k17849 in k17327 in k17324 in k16801 in k16798 in k16795 in k16792 in k16789 in k16786 in k16783 in k16780 in k16777 in k16774 in k16771 in k16768 in k16765 in k16762 in k16759 in k16756 in k16753 in k16750 in k16747 in k16744 in k16741 in k16602 in k16599 in k16596 in k16593 in k16537 in k16534 in k16531 in k16528 in k16525 in k16522 in k16519 in k16516 in k15271 in k15202 in k15009 in k15006 in k14901 in k14850 in k7607 in k7604 in k5838 in k5545 in k5542 in k5538 in k5247 in k5244 in k5241 in k5238 */
static void C_ccall f_28418(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[8],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_28418,2,t0,t1);}
t2=(C_word)C_i_car(t1);
t3=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_28424,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=t2,a[7]=t1,tmp=(C_word)a,a+=8,tmp);
C_trace("ChickenBridge.scm: 364  sprintf");
t4=C_retrieve(lf[33]);
((C_proc4)C_retrieve_proc(t4))(4,t4,t3,lf[705],t2);}

/* k28422 in k28416 in do2851 in k28397 in k28385 in a28382 in k17852 in k17849 in k17327 in k17324 in k16801 in k16798 in k16795 in k16792 in k16789 in k16786 in k16783 in k16780 in k16777 in k16774 in k16771 in k16768 in k16765 in k16762 in k16759 in k16756 in k16753 in k16750 in k16747 in k16744 in k16741 in k16602 in k16599 in k16596 in k16593 in k16537 in k16534 in k16531 in k16528 in k16525 in k16522 in k16519 in k16516 in k15271 in k15202 in k15009 in k15006 in k14901 in k14850 in k7607 in k7604 in k5838 in k5545 in k5542 in k5538 in k5247 in k5244 in k5241 in k5238 */
static void C_ccall f_28424(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word ab[18],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_28424,2,t0,t1);}
t2=(C_word)C_a_i_cons(&a,2,lf[704],((C_word*)t0)[7]);
t3=(C_word)C_a_i_list(&a,3,lf[340],t1,((C_word*)t0)[6]);
t4=(C_word)C_a_i_list(&a,2,t2,t3);
t5=(C_word)C_i_set_cdr(((C_word*)((C_word*)t0)[5])[1],t4);
t6=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[5])[1]);
t7=C_mutate(((C_word *)((C_word*)t0)[5])+1,t6);
t8=(C_word)C_i_cdr(((C_word*)t0)[4]);
t9=((C_word*)((C_word*)t0)[3])[1];
f_28408(t9,((C_word*)t0)[2],t8);}

/* k28394 in k28385 in a28382 in k17852 in k17849 in k17327 in k17324 in k16801 in k16798 in k16795 in k16792 in k16789 in k16786 in k16783 in k16780 in k16777 in k16774 in k16771 in k16768 in k16765 in k16762 in k16759 in k16756 in k16753 in k16750 in k16747 in k16744 in k16741 in k16602 in k16599 in k16596 in k16593 in k16537 in k16534 in k16531 in k16528 in k16525 in k16522 in k16519 in k16516 in k15271 in k15202 in k15009 in k15006 in k14901 in k14850 in k7607 in k7604 in k5838 in k5545 in k5542 in k5538 in k5247 in k5244 in k5241 in k5238 */
static void C_ccall f_28396(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
t2=((C_word*)t0)[3];
((C_proc2)(void*)(*((C_word*)t2+1)))(2,t2,((C_word*)t0)[2]);}

/* a28343 in k17852 in k17849 in k17327 in k17324 in k16801 in k16798 in k16795 in k16792 in k16789 in k16786 in k16783 in k16780 in k16777 in k16774 in k16771 in k16768 in k16765 in k16762 in k16759 in k16756 in k16753 in k16750 in k16747 in k16744 in k16741 in k16602 in k16599 in k16596 in k16593 in k16537 in k16534 in k16531 in k16528 in k16525 in k16522 in k16519 in k16516 in k15271 in k15202 in k15009 in k15006 in k14901 in k14850 in k7607 in k7604 in k5838 in k5545 in k5542 in k5538 in k5247 in k5244 in k5241 in k5238 */
static void C_ccall f_28344(C_word c,C_word t0,C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word ab[11],*a=ab;
if(c!=4) C_bad_argc_2(c,4,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr4,(void*)f_28344,4,t0,t1,t2,t3);}
t4=(*a=C_VECTOR_TYPE|1,a[1]=t2,tmp=(C_word)a,a+=2,tmp);
t5=(C_word)C_i_cadr(((C_word*)t4)[1]);
t6=C_set_block_item(t4,0,t5);
t7=(C_word)C_i_car(((C_word*)t4)[1]);
t8=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_28355,a[2]=t4,a[3]=t1,tmp=(C_word)a,a+=4,tmp);
t9=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_28361,a[2]=t8,a[3]=t7,a[4]=t4,tmp=(C_word)a,a+=5,tmp);
C_trace("ChickenBridge.scm: 364  token-unit-type=?");
f_15291(t9,t7,C_fix(24576));}

/* k28359 in a28343 in k17852 in k17849 in k17327 in k17324 in k16801 in k16798 in k16795 in k16792 in k16789 in k16786 in k16783 in k16780 in k16777 in k16774 in k16771 in k16768 in k16765 in k16762 in k16759 in k16756 in k16753 in k16750 in k16747 in k16744 in k16741 in k16602 in k16599 in k16596 in k16593 in k16537 in k16534 in k16531 in k16528 in k16525 in k16522 in k16519 in k16516 in k15271 in k15202 in k15009 in k15006 in k14901 in k14850 in k7607 in k7604 in k5838 in k5545 in k5542 in k5538 in k5247 in k5244 in k5241 in k5238 */
static void C_ccall f_28361(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[6],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_28361,2,t0,t1);}
if(C_truep(t1)){
t2=(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]);
t3=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_28377,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[3],a[5]=t2,tmp=(C_word)a,a+=6,tmp);
t4=(C_word)C_i_caddr(((C_word*)((C_word*)t0)[4])[1]);
C_trace("ChickenBridge.scm: 364  remove-token-type");
f_16541(t3,t4,C_fix(256));}
else{
t2=((C_word*)t0)[2];
f_28355(t2,C_SCHEME_UNDEFINED);}}

/* k28375 in k28359 in a28343 in k17852 in k17849 in k17327 in k17324 in k16801 in k16798 in k16795 in k16792 in k16789 in k16786 in k16783 in k16780 in k16777 in k16774 in k16771 in k16768 in k16765 in k16762 in k16759 in k16756 in k16753 in k16750 in k16747 in k16744 in k16741 in k16602 in k16599 in k16596 in k16593 in k16537 in k16534 in k16531 in k16528 in k16525 in k16522 in k16519 in k16516 in k15271 in k15202 in k15009 in k15006 in k14901 in k14850 in k7607 in k7604 in k5838 in k5545 in k5542 in k5538 in k5247 in k5244 in k5241 in k5238 */
static void C_ccall f_28377(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[6],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_28377,2,t0,t1);}
t2=(C_word)C_a_i_cons(&a,2,((C_word*)t0)[5],t1);
t3=(C_word)C_a_i_cons(&a,2,((C_word*)t0)[4],t2);
t4=C_mutate(((C_word *)((C_word*)t0)[3])+1,t3);
t5=((C_word*)t0)[2];
f_28355(t5,t4);}

/* k28353 in a28343 in k17852 in k17849 in k17327 in k17324 in k16801 in k16798 in k16795 in k16792 in k16789 in k16786 in k16783 in k16780 in k16777 in k16774 in k16771 in k16768 in k16765 in k16762 in k16759 in k16756 in k16753 in k16750 in k16747 in k16744 in k16741 in k16602 in k16599 in k16596 in k16593 in k16537 in k16534 in k16531 in k16528 in k16525 in k16522 in k16519 in k16516 in k15271 in k15202 in k15009 in k15006 in k14901 in k14850 in k7607 in k7604 in k5838 in k5545 in k5542 in k5538 in k5247 in k5244 in k5241 in k5238 */
static void C_fcall f_28355(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 364  make-parse-unit");
f_15206(((C_word*)t0)[3],C_fix(36352),((C_word*)((C_word*)t0)[2])[1],C_SCHEME_FALSE);}

/* k28336 in k17852 in k17849 in k17327 in k17324 in k16801 in k16798 in k16795 in k16792 in k16789 in k16786 in k16783 in k16780 in k16777 in k16774 in k16771 in k16768 in k16765 in k16762 in k16759 in k16756 in k16753 in k16750 in k16747 in k16744 in k16741 in k16602 in k16599 in k16596 in k16593 in k16537 in k16534 in k16531 in k16528 in k16525 in k16522 in k16519 in k16516 in k15271 in k15202 in k15009 in k15006 in k14901 in k14850 in k7607 in k7604 in k5838 in k5545 in k5542 in k5538 in k5247 in k5244 in k5241 in k5238 */
static void C_ccall f_28338(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 364  hash-table-set!");
t2=C_retrieve(lf[660]);
((C_proc5)C_retrieve_proc(t2))(5,t2,((C_word*)t0)[2],C_retrieve2(lf[256],"*rules*"),C_fix(36352),t1);}

/* k17855 in k17852 in k17849 in k17327 in k17324 in k16801 in k16798 in k16795 in k16792 in k16789 in k16786 in k16783 in k16780 in k16777 in k16774 in k16771 in k16768 in k16765 in k16762 in k16759 in k16756 in k16753 in k16750 in k16747 in k16744 in k16741 in k16602 in k16599 in k16596 in k16593 in k16537 in k16534 in k16531 in k16528 in k16525 in k16522 in k16519 in k16516 in k15271 in k15202 in k15009 in k15006 in k14901 in k14850 in k7607 in k7604 in k5838 in k5545 in k5542 in k5538 in k5247 in k5244 in k5241 in k5238 */
static void C_ccall f_17857(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word t14;
C_word t15;
C_word t16;
C_word t17;
C_word t18;
C_word t19;
C_word t20;
C_word t21;
C_word ab[57],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_17857,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_17860,a[2]=((C_word*)t0)[2],tmp=(C_word)a,a+=3,tmp);
t3=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_28262,a[2]=t2,tmp=(C_word)a,a+=3,tmp);
t4=(C_word)C_a_i_cons(&a,2,C_fix(33792),C_SCHEME_END_OF_LIST);
t5=(C_word)C_a_i_cons(&a,2,C_fix(35584),t4);
t6=(C_word)C_a_i_cons(&a,2,C_fix(35072),t5);
t7=(C_word)C_a_i_cons(&a,2,C_fix(36096),t6);
t8=(C_word)C_a_i_cons(&a,2,C_fix(34816),t7);
t9=(C_word)C_a_i_cons(&a,2,C_fix(35328),t8);
t10=(C_word)C_a_i_cons(&a,2,C_fix(31488),t9);
t11=(C_word)C_a_i_cons(&a,2,C_fix(31744),t10);
t12=(C_word)C_a_i_cons(&a,2,C_fix(32512),t11);
t13=(C_word)C_a_i_cons(&a,2,C_fix(32256),t12);
t14=(C_word)C_a_i_cons(&a,2,C_fix(30464),t13);
t15=(C_word)C_a_i_cons(&a,2,C_fix(34304),t14);
t16=(C_word)C_a_i_cons(&a,2,C_fix(34560),t15);
t17=(C_word)C_a_i_cons(&a,2,C_fix(33536),t16);
t18=(C_word)C_a_i_cons(&a,2,C_fix(32000),t17);
t19=(C_word)C_a_i_cons(&a,2,C_fix(36352),t18);
t20=(C_word)C_a_i_cons(&a,2,lf[290],t19);
C_trace("ChickenBridge.scm: 364  make-rule");
f_14905(t3,lf[703],C_fix(36608),t20,C_SCHEME_FALSE,C_SCHEME_FALSE);}

/* k28260 in k17855 in k17852 in k17849 in k17327 in k17324 in k16801 in k16798 in k16795 in k16792 in k16789 in k16786 in k16783 in k16780 in k16777 in k16774 in k16771 in k16768 in k16765 in k16762 in k16759 in k16756 in k16753 in k16750 in k16747 in k16744 in k16741 in k16602 in k16599 in k16596 in k16593 in k16537 in k16534 in k16531 in k16528 in k16525 in k16522 in k16519 in k16516 in k15271 in k15202 in k15009 in k15006 in k14901 in k14850 in k7607 in k7604 in k5838 in k5545 in k5542 in k5538 in k5247 in k5244 in k5241 in k5238 */
static void C_ccall f_28262(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 364  hash-table-set!");
t2=C_retrieve(lf[660]);
((C_proc5)C_retrieve_proc(t2))(5,t2,((C_word*)t0)[2],C_retrieve2(lf[256],"*rules*"),C_fix(36608),t1);}

/* k17858 in k17855 in k17852 in k17849 in k17327 in k17324 in k16801 in k16798 in k16795 in k16792 in k16789 in k16786 in k16783 in k16780 in k16777 in k16774 in k16771 in k16768 in k16765 in k16762 in k16759 in k16756 in k16753 in k16750 in k16747 in k16744 in k16741 in k16602 in k16599 in k16596 in k16593 in k16537 in k16534 in k16531 in k16528 in k16525 in k16522 in k16519 in k16516 in k15271 in k15202 in k15009 in k15006 in k14901 in k14850 in k7607 in k7604 in k5838 in k5545 in k5542 in k5538 in k5247 in k5244 in k5241 in k5238 */
static void C_ccall f_17860(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word ab[18],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_17860,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_17863,a[2]=((C_word*)t0)[2],tmp=(C_word)a,a+=3,tmp);
t3=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_28218,a[2]=t2,tmp=(C_word)a,a+=3,tmp);
t4=(C_word)C_a_i_cons(&a,2,C_fix(36608),C_SCHEME_END_OF_LIST);
t5=(C_word)C_a_i_cons(&a,2,lf[305],t4);
t6=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_28224,a[2]=((C_word)li452),tmp=(C_word)a,a+=3,tmp);
t7=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_28238,a[2]=((C_word)li453),tmp=(C_word)a,a+=3,tmp);
C_trace("ChickenBridge.scm: 364  make-rule");
f_14905(t3,lf[702],C_fix(36864),t5,t6,t7);}

/* a28237 in k17858 in k17855 in k17852 in k17849 in k17327 in k17324 in k16801 in k16798 in k16795 in k16792 in k16789 in k16786 in k16783 in k16780 in k16777 in k16774 in k16771 in k16768 in k16765 in k16762 in k16759 in k16756 in k16753 in k16750 in k16747 in k16744 in k16741 in k16602 in k16599 in k16596 in k16593 in k16537 in k16534 in k16531 in k16528 in k16525 in k16522 in k16519 in k16516 in k15271 in k15202 in k15009 in k15006 in k14901 in k14850 in k7607 in k7604 in k5838 in k5545 in k5542 in k5538 in k5247 in k5244 in k5241 in k5238 */
static void C_ccall f_28238(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4){
C_word tmp;
C_word t5;
C_word t6;
C_word t7;
C_word ab[8],*a=ab;
if(c!=5) C_bad_argc_2(c,5,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr5,(void*)f_28238,5,t0,t1,t2,t3,t4);}
t5=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_28246,a[2]=t1,tmp=(C_word)a,a+=3,tmp);
t6=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_28250,a[2]=t4,a[3]=t3,a[4]=t5,tmp=(C_word)a,a+=5,tmp);
C_trace("ChickenBridge.scm: 364  parse-unit-parsed");
f_15245(t6,t2);}

/* k28248 in a28237 in k17858 in k17855 in k17852 in k17849 in k17327 in k17324 in k16801 in k16798 in k16795 in k16792 in k16789 in k16786 in k16783 in k16780 in k16777 in k16774 in k16771 in k16768 in k16765 in k16762 in k16759 in k16756 in k16753 in k16750 in k16747 in k16744 in k16741 in k16602 in k16599 in k16596 in k16593 in k16537 in k16534 in k16531 in k16528 in k16525 in k16522 in k16519 in k16516 in k15271 in k15202 in k15009 in k15006 in k14901 in k14850 in k7607 in k7604 in k5838 in k5545 in k5542 in k5538 in k5247 in k5244 in k5241 in k5238 */
static void C_ccall f_28250(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 364  emit");
f_15363(((C_word*)t0)[4],t1,((C_word*)t0)[3],((C_word*)t0)[2]);}

/* k28244 in a28237 in k17858 in k17855 in k17852 in k17849 in k17327 in k17324 in k16801 in k16798 in k16795 in k16792 in k16789 in k16786 in k16783 in k16780 in k16777 in k16774 in k16771 in k16768 in k16765 in k16762 in k16759 in k16756 in k16753 in k16750 in k16747 in k16744 in k16741 in k16602 in k16599 in k16596 in k16593 in k16537 in k16534 in k16531 in k16528 in k16525 in k16522 in k16519 in k16516 in k15271 in k15202 in k15009 in k15006 in k14901 in k14850 in k7607 in k7604 in k5838 in k5545 in k5542 in k5538 in k5247 in k5244 in k5241 in k5238 */
static void C_ccall f_28246(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word ab[3],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_28246,2,t0,t1);}
t2=((C_word*)t0)[2];
((C_proc2)(void*)(*((C_word*)t2+1)))(2,t2,(C_word)C_a_i_cons(&a,2,lf[316],t1));}

/* a28223 in k17858 in k17855 in k17852 in k17849 in k17327 in k17324 in k16801 in k16798 in k16795 in k16792 in k16789 in k16786 in k16783 in k16780 in k16777 in k16774 in k16771 in k16768 in k16765 in k16762 in k16759 in k16756 in k16753 in k16750 in k16747 in k16744 in k16741 in k16602 in k16599 in k16596 in k16593 in k16537 in k16534 in k16531 in k16528 in k16525 in k16522 in k16519 in k16516 in k15271 in k15202 in k15009 in k15006 in k14901 in k14850 in k7607 in k7604 in k5838 in k5545 in k5542 in k5538 in k5247 in k5244 in k5241 in k5238 */
static void C_ccall f_28224(C_word c,C_word t0,C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word t6;
C_word ab[4],*a=ab;
if(c!=4) C_bad_argc_2(c,4,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr4,(void*)f_28224,4,t0,t1,t2,t3);}
t4=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_28232,a[2]=t2,a[3]=t1,tmp=(C_word)a,a+=4,tmp);
t5=(C_word)C_i_car(t2);
C_trace("ChickenBridge.scm: 364  parse-unit-position");
f_15263(t4,t5);}

/* k28230 in a28223 in k17858 in k17855 in k17852 in k17849 in k17327 in k17324 in k16801 in k16798 in k16795 in k16792 in k16789 in k16786 in k16783 in k16780 in k16777 in k16774 in k16771 in k16768 in k16765 in k16762 in k16759 in k16756 in k16753 in k16750 in k16747 in k16744 in k16741 in k16602 in k16599 in k16596 in k16593 in k16537 in k16534 in k16531 in k16528 in k16525 in k16522 in k16519 in k16516 in k15271 in k15202 in k15009 in k15006 in k14901 in k14850 in k7607 in k7604 in k5838 in k5545 in k5542 in k5538 in k5247 in k5244 in k5241 in k5238 */
static void C_ccall f_28232(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 364  make-parse-unit");
f_15206(((C_word*)t0)[3],C_fix(36864),((C_word*)t0)[2],t1);}

/* k28216 in k17858 in k17855 in k17852 in k17849 in k17327 in k17324 in k16801 in k16798 in k16795 in k16792 in k16789 in k16786 in k16783 in k16780 in k16777 in k16774 in k16771 in k16768 in k16765 in k16762 in k16759 in k16756 in k16753 in k16750 in k16747 in k16744 in k16741 in k16602 in k16599 in k16596 in k16593 in k16537 in k16534 in k16531 in k16528 in k16525 in k16522 in k16519 in k16516 in k15271 in k15202 in k15009 in k15006 in k14901 in k14850 in k7607 in k7604 in k5838 in k5545 in k5542 in k5538 in k5247 in k5244 in k5241 in k5238 */
static void C_ccall f_28218(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 364  hash-table-set!");
t2=C_retrieve(lf[660]);
((C_proc5)C_retrieve_proc(t2))(5,t2,((C_word*)t0)[2],C_retrieve2(lf[256],"*rules*"),C_fix(36864),t1);}

/* k17861 in k17858 in k17855 in k17852 in k17849 in k17327 in k17324 in k16801 in k16798 in k16795 in k16792 in k16789 in k16786 in k16783 in k16780 in k16777 in k16774 in k16771 in k16768 in k16765 in k16762 in k16759 in k16756 in k16753 in k16750 in k16747 in k16744 in k16741 in k16602 in k16599 in k16596 in k16593 in k16537 in k16534 in k16531 in k16528 in k16525 in k16522 in k16519 in k16516 in k15271 in k15202 in k15009 in k15006 in k14901 in k14850 in k7607 in k7604 in k5838 in k5545 in k5542 in k5538 in k5247 in k5244 in k5241 in k5238 */
static void C_ccall f_17863(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word ab[24],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_17863,2,t0,t1);}
t2=lf[326]=C_SCHEME_FALSE;;
t3=lf[327]=C_SCHEME_FALSE;;
t4=lf[328]=C_SCHEME_FALSE;;
t5=C_mutate((C_word*)lf[329]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_17869,a[2]=((C_word)li250),tmp=(C_word)a,a+=3,tmp));
t6=C_mutate((C_word*)lf[340]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_18040,a[2]=((C_word)li254),tmp=(C_word)a,a+=3,tmp));
t7=C_mutate((C_word*)lf[350]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_18219,a[2]=((C_word)li255),tmp=(C_word)a,a+=3,tmp));
t8=C_mutate((C_word*)lf[351]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_18228,a[2]=((C_word)li256),tmp=(C_word)a,a+=3,tmp));
t9=C_mutate((C_word*)lf[359]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_18275,a[2]=((C_word)li257),tmp=(C_word)a,a+=3,tmp));
t10=C_mutate((C_word*)lf[361]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_18281,a[2]=((C_word)li258),tmp=(C_word)a,a+=3,tmp));
t11=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_18300,a[2]=((C_word*)t0)[2],tmp=(C_word)a,a+=3,tmp);
t12=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_28210,a[2]=((C_word)li451),tmp=(C_word)a,a+=3,tmp);
C_trace("ChickenBridge.scm: 365  ##sys#register-macro-2");
t13=C_retrieve(lf[693]);
((C_proc4)C_retrieve_proc(t13))(4,t13,t11,lf[700],t12);}

/* a28209 in k17861 in k17858 in k17855 in k17852 in k17849 in k17327 in k17324 in k16801 in k16798 in k16795 in k16792 in k16789 in k16786 in k16783 in k16780 in k16777 in k16774 in k16771 in k16768 in k16765 in k16762 in k16759 in k16756 in k16753 in k16750 in k16747 in k16744 in k16741 in k16602 in k16599 in k16596 in k16593 in k16537 in k16534 in k16531 in k16528 in k16525 in k16522 in k16519 in k16516 in k15271 in k15202 in k15009 in k15006 in k14901 in k14850 in k7607 in k7604 in k5838 in k5545 in k5542 in k5538 in k5247 in k5244 in k5241 in k5238 */
static void C_ccall f_28210(C_word c,C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word ab[4],*a=ab;
if(c!=3) C_bad_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr3,(void*)f_28210,3,t0,t1,t2);}
t3=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_21653,a[2]=t2,a[3]=t1,tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 365  gensym");
t4=C_retrieve(lf[28]);
((C_proc3)C_retrieve_proc(t4))(3,t4,t3,lf[701]);}

/* k21651 in a28209 in k17861 in k17858 in k17855 in k17852 in k17849 in k17327 in k17324 in k16801 in k16798 in k16795 in k16792 in k16789 in k16786 in k16783 in k16780 in k16777 in k16774 in k16771 in k16768 in k16765 in k16762 in k16759 in k16756 in k16753 in k16750 in k16747 in k16744 in k16741 in k16602 in k16599 in k16596 in k16593 in k16537 in k16534 in k16531 in k16528 in k16525 in k16522 in k16519 in k16516 in k15271 in k15202 in k15009 in k15006 in k14901 in k14850 in k7607 in k7604 in k5838 in k5545 in k5542 in k5538 in k5247 in k5244 in k5241 in k5238 */
static void C_ccall f_21653(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[4],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_21653,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_21656,a[2]=t1,a[3]=((C_word*)t0)[3],tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 365  parse-iteration");
f_21635(t2,lf[700],((C_word*)t0)[2],C_retrieve2(lf[556],"*loop-operators*"));}

/* k21654 in k21651 in a28209 in k17861 in k17858 in k17855 in k17852 in k17849 in k17327 in k17324 in k16801 in k16798 in k16795 in k16792 in k16789 in k16786 in k16783 in k16780 in k16777 in k16774 in k16771 in k16768 in k16765 in k16762 in k16759 in k16756 in k16753 in k16750 in k16747 in k16744 in k16741 in k16602 in k16599 in k16596 in k16593 in k16537 in k16534 in k16531 in k16528 in k16525 in k16522 in k16519 in k16516 in k15271 in k15202 in k15009 in k15006 in k14901 in k14850 in k7607 in k7604 in k5838 in k5545 in k5542 in k5538 in k5247 in k5244 in k5241 in k5238 */
static void C_ccall f_21656(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word ab[19],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_21656,2,t0,t1);}
t2=C_SCHEME_END_OF_LIST;
t3=(*a=C_VECTOR_TYPE|1,a[1]=t2,tmp=(C_word)a,a+=2,tmp);
t4=C_SCHEME_FALSE;
t5=(*a=C_VECTOR_TYPE|1,a[1]=t4,tmp=(C_word)a,a+=2,tmp);
t6=(C_word)C_i_assoc(lf[518],C_retrieve2(lf[556],"*loop-operators*"));
t7=(C_word)C_i_cadddr(t6);
t8=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_21663,a[2]=t1,a[3]=((C_word*)t0)[2],a[4]=((C_word*)t0)[3],a[5]=t3,a[6]=t5,tmp=(C_word)a,a+=7,tmp);
t9=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_21808,a[2]=t8,a[3]=t7,tmp=(C_word)a,a+=4,tmp);
t10=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_21822,a[2]=t1,a[3]=t9,tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 365  loop-returning");
t11=C_retrieve2(lf[372],"loop-returning");
f_18407(3,t11,t10,t1);}

/* k21820 in k21654 in k21651 in a28209 in k17861 in k17858 in k17855 in k17852 in k17849 in k17327 in k17324 in k16801 in k16798 in k16795 in k16792 in k16789 in k16786 in k16783 in k16780 in k16777 in k16774 in k16771 in k16768 in k16765 in k16762 in k16759 in k16756 in k16753 in k16750 in k16747 in k16744 in k16741 in k16602 in k16599 in k16596 in k16593 in k16537 in k16534 in k16531 in k16528 in k16525 in k16522 in k16519 in k16516 in k15271 in k15202 in k15009 in k15006 in k14901 in k14850 in k7607 in k7604 in k5838 in k5545 in k5542 in k5538 in k5247 in k5244 in k5241 in k5238 */
static void C_ccall f_21822(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[3],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_21822,2,t0,t1);}
if(C_truep((C_word)C_i_nullp(t1))){
t2=((C_word*)t0)[3];
f_21808(t2,C_SCHEME_FALSE);}
else{
t2=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_21818,a[2]=((C_word*)t0)[3],tmp=(C_word)a,a+=3,tmp);
C_trace("ChickenBridge.scm: 365  loop-returning");
t3=C_retrieve2(lf[372],"loop-returning");
f_18407(3,t3,t2,((C_word*)t0)[2]);}}

/* k21816 in k21820 in k21654 in k21651 in a28209 in k17861 in k17858 in k17855 in k17852 in k17849 in k17327 in k17324 in k16801 in k16798 in k16795 in k16792 in k16789 in k16786 in k16783 in k16780 in k16777 in k16774 in k16771 in k16768 in k16765 in k16762 in k16759 in k16756 in k16753 in k16750 in k16747 in k16744 in k16741 in k16602 in k16599 in k16596 in k16593 in k16537 in k16534 in k16531 in k16528 in k16525 in k16522 in k16519 in k16516 in k15271 in k15202 in k15009 in k15006 in k14901 in k14850 in k7607 in k7604 in k5838 in k5545 in k5542 in k5538 in k5247 in k5244 in k5241 in k5238 */
static void C_ccall f_21818(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
t2=((C_word*)t0)[2];
f_21808(t2,(C_word)C_i_car(t1));}

/* k21806 in k21654 in k21651 in a28209 in k17861 in k17858 in k17855 in k17852 in k17849 in k17327 in k17324 in k16801 in k16798 in k16795 in k16792 in k16789 in k16786 in k16783 in k16780 in k16777 in k16774 in k16771 in k16768 in k16765 in k16762 in k16759 in k16756 in k16753 in k16750 in k16747 in k16744 in k16741 in k16602 in k16599 in k16596 in k16593 in k16537 in k16534 in k16531 in k16528 in k16525 in k16522 in k16519 in k16516 in k15271 in k15202 in k15009 in k15006 in k14901 in k14850 in k7607 in k7604 in k5838 in k5545 in k5542 in k5538 in k5247 in k5244 in k5241 in k5238 */
static void C_fcall f_21808(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 365  returnfn");
t2=((C_word*)t0)[3];
((C_proc3)C_retrieve_proc(t2))(3,t2,((C_word*)t0)[2],t1);}

/* k21661 in k21654 in k21651 in a28209 in k17861 in k17858 in k17855 in k17852 in k17849 in k17327 in k17324 in k16801 in k16798 in k16795 in k16792 in k16789 in k16786 in k16783 in k16780 in k16777 in k16774 in k16771 in k16768 in k16765 in k16762 in k16759 in k16756 in k16753 in k16750 in k16747 in k16744 in k16741 in k16602 in k16599 in k16596 in k16593 in k16537 in k16534 in k16531 in k16528 in k16525 in k16522 in k16519 in k16516 in k15271 in k15202 in k15009 in k15006 in k14901 in k14850 in k7607 in k7604 in k5838 in k5545 in k5542 in k5538 in k5247 in k5244 in k5241 in k5238 */
static void C_ccall f_21663(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_21663,2,t0,t1);}
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_21667,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[6],a[4]=((C_word*)t0)[3],a[5]=((C_word*)t0)[4],a[6]=((C_word*)t0)[5],tmp=(C_word)a,a+=7,tmp);
C_trace("ChickenBridge.scm: 365  loop-end-tests");
t4=C_retrieve2(lf[367],"loop-end-tests");
f_18359(3,t4,t3,((C_word*)t0)[2]);}

/* k21665 in k21661 in k21654 in k21651 in a28209 in k17861 in k17858 in k17855 in k17852 in k17849 in k17327 in k17324 in k16801 in k16798 in k16795 in k16792 in k16789 in k16786 in k16783 in k16780 in k16777 in k16774 in k16771 in k16768 in k16765 in k16762 in k16759 in k16756 in k16753 in k16750 in k16747 in k16744 in k16741 in k16602 in k16599 in k16596 in k16593 in k16537 in k16534 in k16531 in k16528 in k16525 in k16522 in k16519 in k16516 in k15271 in k15202 in k15009 in k15006 in k14901 in k14850 in k7607 in k7604 in k5838 in k5545 in k5542 in k5538 in k5247 in k5244 in k5241 in k5238 */
static void C_ccall f_21667(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word ab[25],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_21667,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_21670,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],tmp=(C_word)a,a+=7,tmp);
if(C_truep((C_word)C_i_nullp(t1))){
t3=t2;
f_21670(t3,C_SCHEME_END_OF_LIST);}
else{
t3=(C_word)C_i_cdr(t1);
t4=(C_word)C_i_nullp(t3);
t5=(C_truep(t4)?(C_word)C_i_car(t1):(C_word)C_a_i_cons(&a,2,lf[290],t1));
t6=(C_word)C_a_i_list(&a,4,lf[22],t5,lf[699],C_SCHEME_FALSE);
t7=t2;
f_21670(t7,(C_word)C_a_i_list(&a,1,t6));}}

/* k21668 in k21665 in k21661 in k21654 in k21651 in a28209 in k17861 in k17858 in k17855 in k17852 in k17849 in k17327 in k17324 in k16801 in k16798 in k16795 in k16792 in k16789 in k16786 in k16783 in k16780 in k16777 in k16774 in k16771 in k16768 in k16765 in k16762 in k16759 in k16756 in k16753 in k16750 in k16747 in k16744 in k16741 in k16602 in k16599 in k16596 in k16593 in k16537 in k16534 in k16531 in k16528 in k16525 in k16522 in k16519 in k16516 in k15271 in k15202 in k15009 in k15006 in k14901 in k14850 in k7607 in k7604 in k5838 in k5545 in k5542 in k5538 in k5247 in k5244 in k5241 in k5238 */
static void C_fcall f_21670(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_21670,NULL,2,t0,t1);}
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_21681,a[2]=((C_word*)t0)[6],a[3]=((C_word*)t0)[2],a[4]=((C_word*)t0)[3],a[5]=((C_word*)t0)[4],a[6]=((C_word*)t0)[5],tmp=(C_word)a,a+=7,tmp);
C_trace("ChickenBridge.scm: 365  loop-bindings");
t4=C_retrieve2(lf[364],"loop-bindings");
f_18323(3,t4,t3,((C_word*)t0)[2]);}

/* k21679 in k21668 in k21665 in k21661 in k21654 in k21651 in a28209 in k17861 in k17858 in k17855 in k17852 in k17849 in k17327 in k17324 in k16801 in k16798 in k16795 in k16792 in k16789 in k16786 in k16783 in k16780 in k16777 in k16774 in k16771 in k16768 in k16765 in k16762 in k16759 in k16756 in k16753 in k16750 in k16747 in k16744 in k16741 in k16602 in k16599 in k16596 in k16593 in k16537 in k16534 in k16531 in k16528 in k16525 in k16522 in k16519 in k16516 in k15271 in k15202 in k15009 in k15006 in k14901 in k14850 in k7607 in k7604 in k5838 in k5545 in k5542 in k5538 in k5247 in k5244 in k5241 in k5238 */
static void C_ccall f_21681(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[11],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_21681,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_21685,a[2]=((C_word*)t0)[6],a[3]=t1,tmp=(C_word)a,a+=4,tmp);
t3=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_21689,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=t2,a[6]=((C_word*)t0)[5],tmp=(C_word)a,a+=7,tmp);
C_trace("ChickenBridge.scm: 365  loop-initially");
t4=C_retrieve2(lf[366],"loop-initially");
f_18347(3,t4,t3,((C_word*)t0)[3]);}

/* k21687 in k21679 in k21668 in k21665 in k21661 in k21654 in k21651 in a28209 in k17861 in k17858 in k17855 in k17852 in k17849 in k17327 in k17324 in k16801 in k16798 in k16795 in k16792 in k16789 in k16786 in k16783 in k16780 in k16777 in k16774 in k16771 in k16768 in k16765 in k16762 in k16759 in k16756 in k16753 in k16750 in k16747 in k16744 in k16741 in k16602 in k16599 in k16596 in k16593 in k16537 in k16534 in k16531 in k16528 in k16525 in k16522 in k16519 in k16516 in k15271 in k15202 in k15009 in k15006 in k14901 in k14850 in k7607 in k7604 in k5838 in k5545 in k5542 in k5538 in k5247 in k5244 in k5241 in k5238 */
static void C_ccall f_21689(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word ab[24],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_21689,2,t0,t1);}
t2=(C_word)C_a_i_list(&a,1,lf[518]);
t3=(C_word)C_a_i_list(&a,1,lf[659]);
t4=(*a=C_CLOSURE_TYPE|8,a[1]=(C_word)f_21753,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=t1,a[5]=((C_word*)t0)[5],a[6]=t2,a[7]=t3,a[8]=((C_word*)t0)[6],tmp=(C_word)a,a+=9,tmp);
t5=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_21757,a[2]=((C_word*)t0)[2],a[3]=t4,tmp=(C_word)a,a+=4,tmp);
t6=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_21761,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[6],a[4]=t5,tmp=(C_word)a,a+=5,tmp);
C_trace("ChickenBridge.scm: 365  loop-looping");
t7=C_retrieve2(lf[368],"loop-looping");
f_18371(3,t7,t6,((C_word*)t0)[3]);}

/* k21759 in k21687 in k21679 in k21668 in k21665 in k21661 in k21654 in k21651 in a28209 in k17861 in k17858 in k17855 in k17852 in k17849 in k17327 in k17324 in k16801 in k16798 in k16795 in k16792 in k16789 in k16786 in k16783 in k16780 in k16777 in k16774 in k16771 in k16768 in k16765 in k16762 in k16759 in k16756 in k16753 in k16750 in k16747 in k16744 in k16741 in k16602 in k16599 in k16596 in k16593 in k16537 in k16534 in k16531 in k16528 in k16525 in k16522 in k16519 in k16516 in k15271 in k15202 in k15009 in k15006 in k14901 in k14850 in k7607 in k7604 in k5838 in k5545 in k5542 in k5538 in k5247 in k5244 in k5241 in k5238 */
static void C_ccall f_21761(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[8],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_21761,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_21765,a[2]=t1,a[3]=((C_word*)t0)[4],tmp=(C_word)a,a+=4,tmp);
t3=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_21769,a[2]=t2,a[3]=((C_word*)t0)[3],tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 365  loop-stepping");
t4=C_retrieve2(lf[370],"loop-stepping");
f_18383(3,t4,t3,((C_word*)t0)[2]);}

/* k21767 in k21759 in k21687 in k21679 in k21668 in k21665 in k21661 in k21654 in k21651 in a28209 in k17861 in k17858 in k17855 in k17852 in k17849 in k17327 in k17324 in k16801 in k16798 in k16795 in k16792 in k16789 in k16786 in k16783 in k16780 in k16777 in k16774 in k16771 in k16768 in k16765 in k16762 in k16759 in k16756 in k16753 in k16750 in k16747 in k16744 in k16741 in k16602 in k16599 in k16596 in k16593 in k16537 in k16534 in k16531 in k16528 in k16525 in k16522 in k16519 in k16516 in k15271 in k15202 in k15009 in k15006 in k14901 in k14850 in k7607 in k7604 in k5838 in k5545 in k5542 in k5538 in k5247 in k5244 in k5241 in k5238 */
static void C_ccall f_21769(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[6],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_21769,2,t0,t1);}
t2=(C_word)C_a_i_list(&a,1,((C_word*)t0)[3]);
t3=(C_word)C_a_i_list(&a,1,t2);
C_trace("ChickenBridge.scm: 365  ##sys#append");
t4=*((C_word*)lf[9]+1);
((C_proc4)(void*)(*((C_word*)t4+1)))(4,t4,((C_word*)t0)[2],t1,t3);}

/* k21763 in k21759 in k21687 in k21679 in k21668 in k21665 in k21661 in k21654 in k21651 in a28209 in k17861 in k17858 in k17855 in k17852 in k17849 in k17327 in k17324 in k16801 in k16798 in k16795 in k16792 in k16789 in k16786 in k16783 in k16780 in k16777 in k16774 in k16771 in k16768 in k16765 in k16762 in k16759 in k16756 in k16753 in k16750 in k16747 in k16744 in k16741 in k16602 in k16599 in k16596 in k16593 in k16537 in k16534 in k16531 in k16528 in k16525 in k16522 in k16519 in k16516 in k15271 in k15202 in k15009 in k15006 in k14901 in k14850 in k7607 in k7604 in k5838 in k5545 in k5542 in k5538 in k5247 in k5244 in k5241 in k5238 */
static void C_ccall f_21765(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 365  ##sys#append");
t2=*((C_word*)lf[9]+1);
((C_proc4)(void*)(*((C_word*)t2+1)))(4,t2,((C_word*)t0)[3],((C_word*)t0)[2],t1);}

/* k21755 in k21687 in k21679 in k21668 in k21665 in k21661 in k21654 in k21651 in a28209 in k17861 in k17858 in k17855 in k17852 in k17849 in k17327 in k17324 in k16801 in k16798 in k16795 in k16792 in k16789 in k16786 in k16783 in k16780 in k16777 in k16774 in k16771 in k16768 in k16765 in k16762 in k16759 in k16756 in k16753 in k16750 in k16747 in k16744 in k16741 in k16602 in k16599 in k16596 in k16593 in k16537 in k16534 in k16531 in k16528 in k16525 in k16522 in k16519 in k16516 in k15271 in k15202 in k15009 in k15006 in k14901 in k14850 in k7607 in k7604 in k5838 in k5545 in k5542 in k5538 in k5247 in k5244 in k5241 in k5238 */
static void C_ccall f_21757(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 365  ##sys#append");
t2=*((C_word*)lf[9]+1);
((C_proc4)(void*)(*((C_word*)t2+1)))(4,t2,((C_word*)t0)[3],((C_word*)((C_word*)t0)[2])[1],t1);}

/* k21751 in k21687 in k21679 in k21668 in k21665 in k21661 in k21654 in k21651 in a28209 in k17861 in k17858 in k17855 in k17852 in k17849 in k17327 in k17324 in k16801 in k16798 in k16795 in k16792 in k16789 in k16786 in k16783 in k16780 in k16777 in k16774 in k16771 in k16768 in k16765 in k16762 in k16759 in k16756 in k16753 in k16750 in k16747 in k16744 in k16741 in k16602 in k16599 in k16596 in k16593 in k16537 in k16534 in k16531 in k16528 in k16525 in k16522 in k16519 in k16516 in k15271 in k15202 in k15009 in k15006 in k14901 in k14850 in k7607 in k7604 in k5838 in k5545 in k5542 in k5538 in k5247 in k5244 in k5241 in k5238 */
static void C_ccall f_21753(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word ab[34],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_21753,2,t0,t1);}
t2=(C_word)C_a_i_cons(&a,2,C_SCHEME_END_OF_LIST,t1);
t3=(C_word)C_a_i_cons(&a,2,((C_word*)t0)[8],t2);
t4=(C_word)C_a_i_cons(&a,2,lf[3],t3);
t5=(C_word)C_a_i_list(&a,3,lf[642],((C_word*)t0)[7],t4);
t6=(C_word)C_a_i_list(&a,2,lf[608],t5);
t7=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_21721,a[2]=((C_word*)t0)[4],a[3]=((C_word*)t0)[5],a[4]=((C_word*)t0)[6],a[5]=t6,tmp=(C_word)a,a+=6,tmp);
t8=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_21725,a[2]=t7,a[3]=((C_word*)t0)[3],tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 365  loop-finally");
t9=C_retrieve2(lf[371],"loop-finally");
f_18395(3,t9,t8,((C_word*)t0)[2]);}

/* k21723 in k21751 in k21687 in k21679 in k21668 in k21665 in k21661 in k21654 in k21651 in a28209 in k17861 in k17858 in k17855 in k17852 in k17849 in k17327 in k17324 in k16801 in k16798 in k16795 in k16792 in k16789 in k16786 in k16783 in k16780 in k16777 in k16774 in k16771 in k16768 in k16765 in k16762 in k16759 in k16756 in k16753 in k16750 in k16747 in k16744 in k16741 in k16602 in k16599 in k16596 in k16593 in k16537 in k16534 in k16531 in k16528 in k16525 in k16522 in k16519 in k16516 in k15271 in k15202 in k15009 in k15006 in k14901 in k14850 in k7607 in k7604 in k5838 in k5545 in k5542 in k5538 in k5247 in k5244 in k5241 in k5238 */
static void C_ccall f_21725(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[3],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_21725,2,t0,t1);}
t2=(C_word)C_a_i_list(&a,1,((C_word*)((C_word*)t0)[3])[1]);
C_trace("ChickenBridge.scm: 365  ##sys#append");
t3=*((C_word*)lf[9]+1);
((C_proc4)(void*)(*((C_word*)t3+1)))(4,t3,((C_word*)t0)[2],t1,t2);}

/* k21719 in k21751 in k21687 in k21679 in k21668 in k21665 in k21661 in k21654 in k21651 in a28209 in k17861 in k17858 in k17855 in k17852 in k17849 in k17327 in k17324 in k16801 in k16798 in k16795 in k16792 in k16789 in k16786 in k16783 in k16780 in k16777 in k16774 in k16771 in k16768 in k16765 in k16762 in k16759 in k16756 in k16753 in k16750 in k16747 in k16744 in k16741 in k16602 in k16599 in k16596 in k16593 in k16537 in k16534 in k16531 in k16528 in k16525 in k16522 in k16519 in k16516 in k15271 in k15202 in k15009 in k15006 in k14901 in k14850 in k7607 in k7604 in k5838 in k5545 in k5542 in k5538 in k5247 in k5244 in k5241 in k5238 */
static void C_ccall f_21721(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word ab[18],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_21721,2,t0,t1);}
t2=(C_word)C_a_i_cons(&a,2,((C_word*)t0)[5],t1);
t3=(C_word)C_a_i_cons(&a,2,((C_word*)t0)[4],t2);
t4=(C_word)C_a_i_cons(&a,2,lf[642],t3);
t5=(C_word)C_a_i_list(&a,2,lf[608],t4);
t6=(C_word)C_a_i_list(&a,1,t5);
C_trace("ChickenBridge.scm: 365  ##sys#append");
t7=*((C_word*)lf[9]+1);
((C_proc4)(void*)(*((C_word*)t7+1)))(4,t7,((C_word*)t0)[3],((C_word*)t0)[2],t6);}

/* k21683 in k21679 in k21668 in k21665 in k21661 in k21654 in k21651 in a28209 in k17861 in k17858 in k17855 in k17852 in k17849 in k17327 in k17324 in k16801 in k16798 in k16795 in k16792 in k16789 in k16786 in k16783 in k16780 in k16777 in k16774 in k16771 in k16768 in k16765 in k16762 in k16759 in k16756 in k16753 in k16750 in k16747 in k16744 in k16741 in k16602 in k16599 in k16596 in k16593 in k16537 in k16534 in k16531 in k16528 in k16525 in k16522 in k16519 in k16516 in k15271 in k15202 in k15009 in k15006 in k14901 in k14850 in k7607 in k7604 in k5838 in k5545 in k5542 in k5538 in k5247 in k5244 in k5241 in k5238 */
static void C_ccall f_21685(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[6],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_21685,2,t0,t1);}
t2=(C_word)C_a_i_cons(&a,2,((C_word*)t0)[3],t1);
t3=((C_word*)t0)[2];
((C_proc2)(void*)(*((C_word*)t3+1)))(2,t3,(C_word)C_a_i_cons(&a,2,lf[3],t2));}

/* k18298 in k17861 in k17858 in k17855 in k17852 in k17849 in k17327 in k17324 in k16801 in k16798 in k16795 in k16792 in k16789 in k16786 in k16783 in k16780 in k16777 in k16774 in k16771 in k16768 in k16765 in k16762 in k16759 in k16756 in k16753 in k16750 in k16747 in k16744 in k16741 in k16602 in k16599 in k16596 in k16593 in k16537 in k16534 in k16531 in k16528 in k16525 in k16522 in k16519 in k16516 in k15271 in k15202 in k15009 in k15006 in k14901 in k14850 in k7607 in k7604 in k5838 in k5545 in k5542 in k5538 in k5247 in k5244 in k5241 in k5238 */
static void C_ccall f_18300(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[6],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_18300,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_18303,a[2]=((C_word*)t0)[2],tmp=(C_word)a,a+=3,tmp);
t3=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_28196,a[2]=((C_word)li450),tmp=(C_word)a,a+=3,tmp);
C_trace("ChickenBridge.scm: 365  ##sys#register-macro");
t4=C_retrieve(lf[658]);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[698],t3);}

/* a28195 in k18298 in k17861 in k17858 in k17855 in k17852 in k17849 in k17327 in k17324 in k16801 in k16798 in k16795 in k16792 in k16789 in k16786 in k16783 in k16780 in k16777 in k16774 in k16771 in k16768 in k16765 in k16762 in k16759 in k16756 in k16753 in k16750 in k16747 in k16744 in k16741 in k16602 in k16599 in k16596 in k16593 in k16537 in k16534 in k16531 in k16528 in k16525 in k16522 in k16519 in k16516 in k15271 in k15202 in k15009 in k15006 in k14901 in k14850 in k7607 in k7604 in k5838 in k5545 in k5542 in k5538 in k5247 in k5244 in k5241 in k5238 */
static void C_ccall f_28196(C_word c,C_word t0,C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word t6;
C_word ab[27],*a=ab;
if(c!=4) C_bad_argc_2(c,4,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr4,(void*)f_28196,4,t0,t1,t2,t3);}
t4=(C_word)C_a_i_list(&a,3,lf[697],t2,t3);
t5=(C_word)C_a_i_list(&a,3,lf[14],t3,t4);
t6=t1;
((C_proc2)(void*)(*((C_word*)t6+1)))(2,t6,(C_word)C_a_i_list(&a,3,lf[316],t5,t3));}

/* k18301 in k18298 in k17861 in k17858 in k17855 in k17852 in k17849 in k17327 in k17324 in k16801 in k16798 in k16795 in k16792 in k16789 in k16786 in k16783 in k16780 in k16777 in k16774 in k16771 in k16768 in k16765 in k16762 in k16759 in k16756 in k16753 in k16750 in k16747 in k16744 in k16741 in k16602 in k16599 in k16596 in k16593 in k16537 in k16534 in k16531 in k16528 in k16525 in k16522 in k16519 in k16516 in k15271 in k15202 in k15009 in k15006 in k14901 in k14850 in k7607 in k7604 in k5838 in k5545 in k5542 in k5538 in k5247 in k5244 in k5241 in k5238 */
static void C_ccall f_18303(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[6],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_18303,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_18306,a[2]=((C_word*)t0)[2],tmp=(C_word)a,a+=3,tmp);
t3=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_28167,a[2]=((C_word)li449),tmp=(C_word)a,a+=3,tmp);
C_trace("ChickenBridge.scm: 365  ##sys#register-macro");
t4=C_retrieve(lf[658]);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[696],t3);}

/* a28166 in k18301 in k18298 in k17861 in k17858 in k17855 in k17852 in k17849 in k17327 in k17324 in k16801 in k16798 in k16795 in k16792 in k16789 in k16786 in k16783 in k16780 in k16777 in k16774 in k16771 in k16768 in k16765 in k16762 in k16759 in k16756 in k16753 in k16750 in k16747 in k16744 in k16741 in k16602 in k16599 in k16596 in k16593 in k16537 in k16534 in k16531 in k16528 in k16525 in k16522 in k16519 in k16516 in k15271 in k15202 in k15009 in k15006 in k14901 in k14850 in k7607 in k7604 in k5838 in k5545 in k5542 in k5538 in k5247 in k5244 in k5241 in k5238 */
static void C_ccall f_28167(C_word c,C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word ab[4],*a=ab;
if(c!=3) C_bad_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr3,(void*)f_28167,3,t0,t1,t2);}
t3=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_28171,a[2]=t1,a[3]=t2,tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 365  gensym");
t4=C_retrieve(lf[28]);
((C_proc3)C_retrieve_proc(t4))(3,t4,t3,lf[695]);}

/* k28169 in a28166 in k18301 in k18298 in k17861 in k17858 in k17855 in k17852 in k17849 in k17327 in k17324 in k16801 in k16798 in k16795 in k16792 in k16789 in k16786 in k16783 in k16780 in k16777 in k16774 in k16771 in k16768 in k16765 in k16762 in k16759 in k16756 in k16753 in k16750 in k16747 in k16744 in k16741 in k16602 in k16599 in k16596 in k16593 in k16537 in k16534 in k16531 in k16528 in k16525 in k16522 in k16519 in k16516 in k15271 in k15202 in k15009 in k15006 in k14901 in k14850 in k7607 in k7604 in k5838 in k5545 in k5542 in k5538 in k5247 in k5244 in k5241 in k5238 */
static void C_ccall f_28171(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word ab[42],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_28171,2,t0,t1);}
t2=(C_word)C_a_i_list(&a,2,lf[10],((C_word*)t0)[3]);
t3=(C_word)C_a_i_list(&a,2,t1,t2);
t4=(C_word)C_a_i_list(&a,1,t3);
t5=(C_word)C_a_i_list(&a,2,lf[17],((C_word*)t0)[3]);
t6=(C_word)C_a_i_list(&a,3,lf[14],((C_word*)t0)[3],t5);
t7=((C_word*)t0)[2];
((C_proc2)(void*)(*((C_word*)t7+1)))(2,t7,(C_word)C_a_i_list(&a,4,lf[3],t4,t6,t1));}

/* k18304 in k18301 in k18298 in k17861 in k17858 in k17855 in k17852 in k17849 in k17327 in k17324 in k16801 in k16798 in k16795 in k16792 in k16789 in k16786 in k16783 in k16780 in k16777 in k16774 in k16771 in k16768 in k16765 in k16762 in k16759 in k16756 in k16753 in k16750 in k16747 in k16744 in k16741 in k16602 in k16599 in k16596 in k16593 in k16537 in k16534 in k16531 in k16528 in k16525 in k16522 in k16519 in k16516 in k15271 in k15202 in k15009 in k15006 in k14901 in k14850 in k7607 in k7604 in k5838 in k5545 in k5542 in k5538 in k5247 in k5244 in k5241 in k5238 */
static void C_ccall f_18306(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[6],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_18306,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_18309,a[2]=((C_word*)t0)[2],tmp=(C_word)a,a+=3,tmp);
t3=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_28164,a[2]=((C_word)li448),tmp=(C_word)a,a+=3,tmp);
C_trace("ChickenBridge.scm: 365  ##sys#register-macro");
t4=C_retrieve(lf[658]);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[694],t3);}

/* a28163 in k18304 in k18301 in k18298 in k17861 in k17858 in k17855 in k17852 in k17849 in k17327 in k17324 in k16801 in k16798 in k16795 in k16792 in k16789 in k16786 in k16783 in k16780 in k16777 in k16774 in k16771 in k16768 in k16765 in k16762 in k16759 in k16756 in k16753 in k16750 in k16747 in k16744 in k16741 in k16602 in k16599 in k16596 in k16593 in k16537 in k16534 in k16531 in k16528 in k16525 in k16522 in k16519 in k16516 in k15271 in k15202 in k15009 in k15006 in k14901 in k14850 in k7607 in k7604 in k5838 in k5545 in k5542 in k5538 in k5247 in k5244 in k5241 in k5238 */
static void C_ccall f_28164(C_word c,C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word *a;
if(c!=3) C_bad_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr3,(void*)f_28164,3,t0,t1,t2);}
t3=t1;
((C_proc2)(void*)(*((C_word*)t3+1)))(2,t3,t2);}

/* k18307 in k18304 in k18301 in k18298 in k17861 in k17858 in k17855 in k17852 in k17849 in k17327 in k17324 in k16801 in k16798 in k16795 in k16792 in k16789 in k16786 in k16783 in k16780 in k16777 in k16774 in k16771 in k16768 in k16765 in k16762 in k16759 in k16756 in k16753 in k16750 in k16747 in k16744 in k16741 in k16602 in k16599 in k16596 in k16593 in k16537 in k16534 in k16531 in k16528 in k16525 in k16522 in k16519 in k16516 in k15271 in k15202 in k15009 in k15006 in k14901 in k14850 in k7607 in k7604 in k5838 in k5545 in k5542 in k5538 in k5247 in k5244 in k5241 in k5238 */
static void C_ccall f_18309(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word t14;
C_word t15;
C_word t16;
C_word t17;
C_word t18;
C_word t19;
C_word t20;
C_word t21;
C_word t22;
C_word t23;
C_word t24;
C_word t25;
C_word t26;
C_word t27;
C_word t28;
C_word t29;
C_word t30;
C_word t31;
C_word t32;
C_word t33;
C_word t34;
C_word t35;
C_word t36;
C_word t37;
C_word t38;
C_word t39;
C_word t40;
C_word t41;
C_word t42;
C_word t43;
C_word t44;
C_word t45;
C_word t46;
C_word t47;
C_word t48;
C_word t49;
C_word t50;
C_word t51;
C_word t52;
C_word t53;
C_word t54;
C_word t55;
C_word t56;
C_word t57;
C_word t58;
C_word t59;
C_word t60;
C_word t61;
C_word t62;
C_word t63;
C_word t64;
C_word t65;
C_word t66;
C_word t67;
C_word t68;
C_word t69;
C_word t70;
C_word t71;
C_word t72;
C_word t73;
C_word ab[492],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_18309,2,t0,t1);}
t2=C_mutate(&lf[363],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_18317,a[2]=((C_word)li259),tmp=(C_word)a,a+=3,tmp));
t3=C_mutate(&lf[364],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_18323,a[2]=((C_word)li260),tmp=(C_word)a,a+=3,tmp));
t4=C_mutate(&lf[365],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_18335,a[2]=((C_word)li261),tmp=(C_word)a,a+=3,tmp));
t5=C_mutate(&lf[366],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_18347,a[2]=((C_word)li262),tmp=(C_word)a,a+=3,tmp));
t6=C_mutate(&lf[367],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_18359,a[2]=((C_word)li263),tmp=(C_word)a,a+=3,tmp));
t7=C_mutate(&lf[368],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_18371,a[2]=((C_word)li264),tmp=(C_word)a,a+=3,tmp));
t8=C_mutate(&lf[369],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_18377,a[2]=((C_word)li265),tmp=(C_word)a,a+=3,tmp));
t9=C_mutate(&lf[370],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_18383,a[2]=((C_word)li266),tmp=(C_word)a,a+=3,tmp));
t10=C_mutate(&lf[371],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_18395,a[2]=((C_word)li267),tmp=(C_word)a,a+=3,tmp));
t11=C_mutate(&lf[372],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_18407,a[2]=((C_word)li268),tmp=(C_word)a,a+=3,tmp));
t12=C_mutate(&lf[373],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_18419,a[2]=((C_word)li270),tmp=(C_word)a,a+=3,tmp));
t13=C_mutate(&lf[383],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_18570,a[2]=((C_word)li273),tmp=(C_word)a,a+=3,tmp));
t14=C_mutate(&lf[384],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_18641,a[2]=((C_word)li274),tmp=(C_word)a,a+=3,tmp));
t15=C_mutate(&lf[385],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_18647,a[2]=((C_word)li275),tmp=(C_word)a,a+=3,tmp));
t16=C_mutate(&lf[386],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_18653,a[2]=((C_word)li276),tmp=(C_word)a,a+=3,tmp));
t17=C_mutate(&lf[387],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_18659,a[2]=((C_word)li280),tmp=(C_word)a,a+=3,tmp));
t18=C_mutate(&lf[397],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_18819,a[2]=((C_word)li281),tmp=(C_word)a,a+=3,tmp));
t19=C_mutate(&lf[405],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_18901,a[2]=((C_word)li283),tmp=(C_word)a,a+=3,tmp));
t20=C_mutate(&lf[435],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_19283,a[2]=((C_word)li286),tmp=(C_word)a,a+=3,tmp));
t21=C_mutate(&lf[438],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_19330,a[2]=((C_word)li288),tmp=(C_word)a,a+=3,tmp));
t22=C_mutate(&lf[457],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_19681,a[2]=((C_word)li290),tmp=(C_word)a,a+=3,tmp));
t23=C_mutate(&lf[465],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_19823,a[2]=((C_word)li292),tmp=(C_word)a,a+=3,tmp));
t24=C_mutate(&lf[479],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_20016,a[2]=((C_word)li294),tmp=(C_word)a,a+=3,tmp));
t25=C_mutate(&lf[482],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_20083,a[2]=((C_word)li295),tmp=(C_word)a,a+=3,tmp));
t26=C_mutate(&lf[485],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_20121,a[2]=((C_word)li296),tmp=(C_word)a,a+=3,tmp));
t27=C_mutate(&lf[488],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_20280,a[2]=((C_word)li302),tmp=(C_word)a,a+=3,tmp));
t28=C_mutate(&lf[517],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_20826,a[2]=((C_word)li303),tmp=(C_word)a,a+=3,tmp));
t29=C_mutate(&lf[519],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_20832,a[2]=((C_word)li304),tmp=(C_word)a,a+=3,tmp));
t30=C_mutate(&lf[525],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_20898,a[2]=((C_word)li305),tmp=(C_word)a,a+=3,tmp));
t31=C_mutate(&lf[531],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_20989,a[2]=((C_word)li306),tmp=(C_word)a,a+=3,tmp));
t32=C_mutate(&lf[534],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_21090,a[2]=((C_word)li310),tmp=(C_word)a,a+=3,tmp));
t33=C_mutate(&lf[540],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_21221,a[2]=((C_word)li315),tmp=(C_word)a,a+=3,tmp));
t34=C_mutate(&lf[546],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_21635,a[2]=((C_word)li320),tmp=(C_word)a,a+=3,tmp));
t35=(C_word)C_a_i_list(&a,3,lf[466],C_retrieve2(lf[465],"parse-with"),C_SCHEME_FALSE);
t36=(C_word)C_a_i_list(&a,3,lf[377],C_retrieve2(lf[485],"parse-initially"),C_SCHEME_FALSE);
t37=(C_word)C_a_i_list(&a,3,lf[554],C_retrieve2(lf[435],"parse-repeat"),lf[551]);
t38=(C_word)C_a_i_list(&a,2,lf[413],C_retrieve2(lf[405],"parse-numerical-for"));
t39=(C_word)C_a_i_list(&a,2,lf[409],C_retrieve2(lf[405],"parse-numerical-for"));
t40=(C_word)C_a_i_list(&a,2,lf[411],C_retrieve2(lf[405],"parse-numerical-for"));
t41=(C_word)C_a_i_list(&a,2,lf[420],C_retrieve2(lf[405],"parse-numerical-for"));
t42=(C_word)C_a_i_list(&a,2,lf[410],C_retrieve2(lf[405],"parse-numerical-for"));
t43=(C_word)C_a_i_list(&a,2,lf[412],C_retrieve2(lf[405],"parse-numerical-for"));
t44=(C_word)C_a_i_list(&a,2,lf[445],C_retrieve2(lf[438],"parse-sequence-iteration"));
t45=(C_word)C_a_i_list(&a,2,lf[454],C_retrieve2(lf[438],"parse-sequence-iteration"));
t46=(C_word)C_a_i_list(&a,2,lf[439],C_retrieve2(lf[438],"parse-sequence-iteration"));
t47=(C_word)C_a_i_list(&a,2,lf[458],C_retrieve2(lf[457],"parse-general-iteration"));
t48=(C_word)C_a_i_list(&a,2,lf[444],C_retrieve2(lf[438],"parse-sequence-iteration"));
t49=(C_word)C_a_i_list(&a,14,lf[406],C_retrieve2(lf[397],"parse-for"),lf[551],t38,t39,t40,t41,t42,t43,t44,t45,t46,t47,t48);
t50=(C_word)C_a_i_list(&a,3,lf[555],C_retrieve2(lf[397],"parse-for"),lf[551]);
t51=(C_word)C_a_i_list(&a,3,lf[547],C_retrieve2(lf[479],"parse-do"),lf[538]);
t52=(C_word)C_a_i_list(&a,3,lf[499],C_retrieve2(lf[488],"parse-accumulation"),lf[538]);
t53=(C_word)C_a_i_list(&a,3,lf[20],C_retrieve2(lf[488],"parse-accumulation"),lf[538]);
t54=(C_word)C_a_i_list(&a,3,lf[504],C_retrieve2(lf[488],"parse-accumulation"),lf[538]);
t55=(C_word)C_a_i_list(&a,3,lf[489],C_retrieve2(lf[488],"parse-accumulation"),lf[538]);
t56=(C_word)C_a_i_list(&a,3,lf[490],C_retrieve2(lf[488],"parse-accumulation"),lf[538]);
t57=(C_word)C_a_i_list(&a,3,lf[492],C_retrieve2(lf[488],"parse-accumulation"),lf[538]);
t58=(C_word)C_a_i_list(&a,3,lf[493],C_retrieve2(lf[488],"parse-accumulation"),lf[538]);
t59=(C_word)C_a_i_list(&a,4,lf[526],C_retrieve2(lf[525],"parse-thereis"),lf[538],C_retrieve2(lf[517],"loop-return"));
t60=(C_word)C_a_i_list(&a,4,lf[527],C_retrieve2(lf[525],"parse-thereis"),lf[538],C_retrieve2(lf[517],"loop-return"));
t61=(C_word)C_a_i_list(&a,4,lf[528],C_retrieve2(lf[525],"parse-thereis"),lf[538],C_retrieve2(lf[517],"loop-return"));
t62=(C_word)C_a_i_list(&a,4,lf[518],C_retrieve2(lf[531],"parse-return"),lf[538],C_retrieve2(lf[517],"loop-return"));
t63=(C_word)C_a_i_list(&a,3,lf[522],C_retrieve2(lf[519],"parse-while-until"),C_SCHEME_FALSE);
t64=(C_word)C_a_i_list(&a,3,lf[521],C_retrieve2(lf[519],"parse-while-until"),C_SCHEME_FALSE);
t65=(C_word)C_a_i_list(&a,3,lf[13],C_retrieve2(lf[540],"parse-conditional"),lf[538]);
t66=(C_word)C_a_i_list(&a,3,lf[8],C_retrieve2(lf[540],"parse-conditional"),lf[538]);
t67=(C_word)C_a_i_list(&a,3,lf[22],C_retrieve2(lf[540],"parse-conditional"),lf[538]);
t68=(C_word)C_a_i_list(&a,3,lf[381],C_retrieve2(lf[482],"parse-finally"),C_SCHEME_FALSE);
t69=(C_word)C_a_i_list(&a,23,t35,t36,t37,t49,t50,t51,t52,t53,t54,t55,t56,t57,t58,t59,t60,t61,t62,t63,t64,t65,t66,t67,t68);
t70=C_mutate(&lf[556],t69);
t71=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_21829,a[2]=((C_word*)t0)[2],tmp=(C_word)a,a+=3,tmp);
t72=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_28022,a[2]=((C_word)li447),tmp=(C_word)a,a+=3,tmp);
C_trace("ChickenBridge.scm: 365  ##sys#register-macro-2");
t73=C_retrieve(lf[693]);
((C_proc4)C_retrieve_proc(t73))(4,t73,t71,lf[551],t72);}

/* a28021 in k18307 in k18304 in k18301 in k18298 in k17861 in k17858 in k17855 in k17852 in k17849 in k17327 in k17324 in k16801 in k16798 in k16795 in k16792 in k16789 in k16786 in k16783 in k16780 in k16777 in k16774 in k16771 in k16768 in k16765 in k16762 in k16759 in k16756 in k16753 in k16750 in k16747 in k16744 in k16741 in k16602 in k16599 in k16596 in k16593 in k16537 in k16534 in k16531 in k16528 in k16525 in k16522 in k16519 in k16516 in k15271 in k15202 in k15009 in k15006 in k14901 in k14850 in k7607 in k7604 in k5838 in k5545 in k5542 in k5538 in k5247 in k5244 in k5241 in k5238 */
static void C_ccall f_28022(C_word c,C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word ab[3],*a=ab;
if(c!=3) C_bad_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr3,(void*)f_28022,3,t0,t1,t2);}
t3=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_21835,a[2]=t1,tmp=(C_word)a,a+=3,tmp);
C_trace("ChickenBridge.scm: 365  parse-iteration");
f_21635(t3,lf[551],t2,C_retrieve2(lf[556],"*loop-operators*"));}

/* k21833 in a28021 in k18307 in k18304 in k18301 in k18298 in k17861 in k17858 in k17855 in k17852 in k17849 in k17327 in k17324 in k16801 in k16798 in k16795 in k16792 in k16789 in k16786 in k16783 in k16780 in k16777 in k16774 in k16771 in k16768 in k16765 in k16762 in k16759 in k16756 in k16753 in k16750 in k16747 in k16744 in k16741 in k16602 in k16599 in k16596 in k16593 in k16537 in k16534 in k16531 in k16528 in k16525 in k16522 in k16519 in k16516 in k15271 in k15202 in k15009 in k15006 in k14901 in k14850 in k7607 in k7604 in k5838 in k5545 in k5542 in k5538 in k5247 in k5244 in k5241 in k5238 */
static void C_ccall f_21835(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[8],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_21835,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_21838,a[2]=t1,a[3]=((C_word*)t0)[2],tmp=(C_word)a,a+=4,tmp);
t3=(C_word)C_i_assoc(lf[518],C_retrieve2(lf[556],"*loop-operators*"));
t4=(C_word)C_i_cadddr(t3);
t5=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_21967,a[2]=t4,a[3]=t2,tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 365  loop-returning");
t6=C_retrieve2(lf[372],"loop-returning");
f_18407(3,t6,t5,t1);}

/* k21965 in k21833 in a28021 in k18307 in k18304 in k18301 in k18298 in k17861 in k17858 in k17855 in k17852 in k17849 in k17327 in k17324 in k16801 in k16798 in k16795 in k16792 in k16789 in k16786 in k16783 in k16780 in k16777 in k16774 in k16771 in k16768 in k16765 in k16762 in k16759 in k16756 in k16753 in k16750 in k16747 in k16744 in k16741 in k16602 in k16599 in k16596 in k16593 in k16537 in k16534 in k16531 in k16528 in k16525 in k16522 in k16519 in k16516 in k15271 in k15202 in k15009 in k15006 in k14901 in k14850 in k7607 in k7604 in k5838 in k5545 in k5542 in k5538 in k5247 in k5244 in k5241 in k5238 */
static void C_ccall f_21967(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[3],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_21967,2,t0,t1);}
t2=(C_word)C_i_car(t1);
t3=(C_word)C_a_i_list(&a,1,t2);
C_apply(4,0,((C_word*)t0)[3],((C_word*)t0)[2],t3);}

/* k21836 in k21833 in a28021 in k18307 in k18304 in k18301 in k18298 in k17861 in k17858 in k17855 in k17852 in k17849 in k17327 in k17324 in k16801 in k16798 in k16795 in k16792 in k16789 in k16786 in k16783 in k16780 in k16777 in k16774 in k16771 in k16768 in k16765 in k16762 in k16759 in k16756 in k16753 in k16750 in k16747 in k16744 in k16741 in k16602 in k16599 in k16596 in k16593 in k16537 in k16534 in k16531 in k16528 in k16525 in k16522 in k16519 in k16516 in k15271 in k15202 in k15009 in k15006 in k14901 in k14850 in k7607 in k7604 in k5838 in k5545 in k5542 in k5538 in k5247 in k5244 in k5241 in k5238 */
static void C_ccall f_21838(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[5],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_21838,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_21849,a[2]=((C_word*)t0)[2],a[3]=t1,a[4]=((C_word*)t0)[3],tmp=(C_word)a,a+=5,tmp);
C_trace("ChickenBridge.scm: 365  loop-bindings");
t3=C_retrieve2(lf[364],"loop-bindings");
f_18323(3,t3,t2,((C_word*)t0)[2]);}

/* k21847 in k21836 in k21833 in a28021 in k18307 in k18304 in k18301 in k18298 in k17861 in k17858 in k17855 in k17852 in k17849 in k17327 in k17324 in k16801 in k16798 in k16795 in k16792 in k16789 in k16786 in k16783 in k16780 in k16777 in k16774 in k16771 in k16768 in k16765 in k16762 in k16759 in k16756 in k16753 in k16750 in k16747 in k16744 in k16741 in k16602 in k16599 in k16596 in k16593 in k16537 in k16534 in k16531 in k16528 in k16525 in k16522 in k16519 in k16516 in k15271 in k15202 in k15009 in k15006 in k14901 in k14850 in k7607 in k7604 in k5838 in k5545 in k5542 in k5538 in k5247 in k5244 in k5241 in k5238 */
static void C_ccall f_21849(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_21849,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_21853,a[2]=((C_word*)t0)[4],a[3]=t1,tmp=(C_word)a,a+=4,tmp);
t3=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_21857,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=t2,tmp=(C_word)a,a+=5,tmp);
C_trace("ChickenBridge.scm: 365  loop-initially");
t4=C_retrieve2(lf[366],"loop-initially");
f_18347(3,t4,t3,((C_word*)t0)[2]);}

/* k21855 in k21847 in k21836 in k21833 in a28021 in k18307 in k18304 in k18301 in k18298 in k17861 in k17858 in k17855 in k17852 in k17849 in k17327 in k17324 in k16801 in k16798 in k16795 in k16792 in k16789 in k16786 in k16783 in k16780 in k16777 in k16774 in k16771 in k16768 in k16765 in k16762 in k16759 in k16756 in k16753 in k16750 in k16747 in k16744 in k16741 in k16602 in k16599 in k16596 in k16593 in k16537 in k16534 in k16531 in k16528 in k16525 in k16522 in k16519 in k16516 in k15271 in k15202 in k15009 in k15006 in k14901 in k14850 in k7607 in k7604 in k5838 in k5545 in k5542 in k5538 in k5247 in k5244 in k5241 in k5238 */
static void C_ccall f_21857(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_21857,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_21877,a[2]=t1,a[3]=((C_word*)t0)[4],tmp=(C_word)a,a+=4,tmp);
t3=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_21881,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=t2,tmp=(C_word)a,a+=5,tmp);
C_trace("ChickenBridge.scm: 365  loop-end-tests");
t4=C_retrieve2(lf[367],"loop-end-tests");
f_18359(3,t4,t3,((C_word*)t0)[2]);}

/* k21879 in k21855 in k21847 in k21836 in k21833 in a28021 in k18307 in k18304 in k18301 in k18298 in k17861 in k17858 in k17855 in k17852 in k17849 in k17327 in k17324 in k16801 in k16798 in k16795 in k16792 in k16789 in k16786 in k16783 in k16780 in k16777 in k16774 in k16771 in k16768 in k16765 in k16762 in k16759 in k16756 in k16753 in k16750 in k16747 in k16744 in k16741 in k16602 in k16599 in k16596 in k16593 in k16537 in k16534 in k16531 in k16528 in k16525 in k16522 in k16519 in k16516 in k15271 in k15202 in k15009 in k15006 in k14901 in k14850 in k7607 in k7604 in k5838 in k5545 in k5542 in k5538 in k5247 in k5244 in k5241 in k5238 */
static void C_ccall f_21881(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word ab[26],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_21881,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_21884,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],tmp=(C_word)a,a+=5,tmp);
if(C_truep(t1)){
t3=(C_word)C_i_cdr(t1);
t4=(C_truep(t3)?(C_word)C_a_i_cons(&a,2,lf[290],t1):(C_word)C_i_car(t1));
t5=(C_word)C_a_i_list(&a,2,lf[659],lf[253]);
t6=(C_word)C_a_i_list(&a,3,lf[22],t4,t5);
t7=t2;
f_21884(t7,(C_word)C_a_i_list(&a,1,t6));}
else{
t3=t2;
f_21884(t3,C_SCHEME_END_OF_LIST);}}

/* k21882 in k21879 in k21855 in k21847 in k21836 in k21833 in a28021 in k18307 in k18304 in k18301 in k18298 in k17861 in k17858 in k17855 in k17852 in k17849 in k17327 in k17324 in k16801 in k16798 in k16795 in k16792 in k16789 in k16786 in k16783 in k16780 in k16777 in k16774 in k16771 in k16768 in k16765 in k16762 in k16759 in k16756 in k16753 in k16750 in k16747 in k16744 in k16741 in k16602 in k16599 in k16596 in k16593 in k16537 in k16534 in k16531 in k16528 in k16525 in k16522 in k16519 in k16516 in k15271 in k15202 in k15009 in k15006 in k14901 in k14850 in k7607 in k7604 in k5838 in k5545 in k5542 in k5538 in k5247 in k5244 in k5241 in k5238 */
static void C_fcall f_21884(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_21884,NULL,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_21888,a[2]=t1,a[3]=((C_word*)t0)[4],tmp=(C_word)a,a+=4,tmp);
t3=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_21892,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=t2,tmp=(C_word)a,a+=5,tmp);
C_trace("ChickenBridge.scm: 365  loop-looping");
t4=C_retrieve2(lf[368],"loop-looping");
f_18371(3,t4,t3,((C_word*)t0)[2]);}

/* k21890 in k21882 in k21879 in k21855 in k21847 in k21836 in k21833 in a28021 in k18307 in k18304 in k18301 in k18298 in k17861 in k17858 in k17855 in k17852 in k17849 in k17327 in k17324 in k16801 in k16798 in k16795 in k16792 in k16789 in k16786 in k16783 in k16780 in k16777 in k16774 in k16771 in k16768 in k16765 in k16762 in k16759 in k16756 in k16753 in k16750 in k16747 in k16744 in k16741 in k16602 in k16599 in k16596 in k16593 in k16537 in k16534 in k16531 in k16528 in k16525 in k16522 in k16519 in k16516 in k15271 in k15202 in k15009 in k15006 in k14901 in k14850 in k7607 in k7604 in k5838 in k5545 in k5542 in k5538 in k5247 in k5244 in k5241 in k5238 */
static void C_ccall f_21892(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_21892,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_21896,a[2]=t1,a[3]=((C_word*)t0)[4],tmp=(C_word)a,a+=4,tmp);
t3=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_21900,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=t2,tmp=(C_word)a,a+=5,tmp);
C_trace("ChickenBridge.scm: 365  loop-stepping");
t4=C_retrieve2(lf[370],"loop-stepping");
f_18383(3,t4,t3,((C_word*)t0)[2]);}

/* k21898 in k21890 in k21882 in k21879 in k21855 in k21847 in k21836 in k21833 in a28021 in k18307 in k18304 in k18301 in k18298 in k17861 in k17858 in k17855 in k17852 in k17849 in k17327 in k17324 in k16801 in k16798 in k16795 in k16792 in k16789 in k16786 in k16783 in k16780 in k16777 in k16774 in k16771 in k16768 in k16765 in k16762 in k16759 in k16756 in k16753 in k16750 in k16747 in k16744 in k16741 in k16602 in k16599 in k16596 in k16593 in k16537 in k16534 in k16531 in k16528 in k16525 in k16522 in k16519 in k16516 in k15271 in k15202 in k15009 in k15006 in k14901 in k14850 in k7607 in k7604 in k5838 in k5545 in k5542 in k5538 in k5247 in k5244 in k5241 in k5238 */
static void C_ccall f_21900(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[15],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_21900,2,t0,t1);}
t2=(C_word)C_a_i_list(&a,2,lf[659],lf[689]);
t3=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_21916,a[2]=t1,a[3]=((C_word*)t0)[4],a[4]=t2,tmp=(C_word)a,a+=5,tmp);
t4=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_21920,a[2]=t3,a[3]=((C_word*)t0)[3],tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 365  loop-finally");
t5=C_retrieve2(lf[371],"loop-finally");
f_18395(3,t5,t4,((C_word*)t0)[2]);}

/* k21918 in k21898 in k21890 in k21882 in k21879 in k21855 in k21847 in k21836 in k21833 in a28021 in k18307 in k18304 in k18301 in k18298 in k17861 in k17858 in k17855 in k17852 in k17849 in k17327 in k17324 in k16801 in k16798 in k16795 in k16792 in k16789 in k16786 in k16783 in k16780 in k16777 in k16774 in k16771 in k16768 in k16765 in k16762 in k16759 in k16756 in k16753 in k16750 in k16747 in k16744 in k16741 in k16602 in k16599 in k16596 in k16593 in k16537 in k16534 in k16531 in k16528 in k16525 in k16522 in k16519 in k16516 in k15271 in k15202 in k15009 in k15006 in k14901 in k14850 in k7607 in k7604 in k5838 in k5545 in k5542 in k5538 in k5247 in k5244 in k5241 in k5238 */
static void C_ccall f_21920(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[3],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_21920,2,t0,t1);}
t2=(C_word)C_a_i_list(&a,1,((C_word*)t0)[3]);
C_trace("##sys#append");
t3=*((C_word*)lf[9]+1);
((C_proc4)(void*)(*((C_word*)t3+1)))(4,t3,((C_word*)t0)[2],t1,t2);}

/* k21914 in k21898 in k21890 in k21882 in k21879 in k21855 in k21847 in k21836 in k21833 in a28021 in k18307 in k18304 in k18301 in k18298 in k17861 in k17858 in k17855 in k17852 in k17849 in k17327 in k17324 in k16801 in k16798 in k16795 in k16792 in k16789 in k16786 in k16783 in k16780 in k16777 in k16774 in k16771 in k16768 in k16765 in k16762 in k16759 in k16756 in k16753 in k16750 in k16747 in k16744 in k16741 in k16602 in k16599 in k16596 in k16593 in k16537 in k16534 in k16531 in k16528 in k16525 in k16522 in k16519 in k16516 in k15271 in k15202 in k15009 in k15006 in k14901 in k14850 in k7607 in k7604 in k5838 in k5545 in k5542 in k5538 in k5247 in k5244 in k5241 in k5238 */
static void C_ccall f_21916(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[6],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_21916,2,t0,t1);}
t2=(C_word)C_a_i_cons(&a,2,lf[253],t1);
t3=(C_word)C_a_i_cons(&a,2,((C_word*)t0)[4],t2);
C_trace("##sys#append");
t4=*((C_word*)lf[9]+1);
((C_proc4)(void*)(*((C_word*)t4+1)))(4,t4,((C_word*)t0)[3],((C_word*)t0)[2],t3);}

/* k21894 in k21890 in k21882 in k21879 in k21855 in k21847 in k21836 in k21833 in a28021 in k18307 in k18304 in k18301 in k18298 in k17861 in k17858 in k17855 in k17852 in k17849 in k17327 in k17324 in k16801 in k16798 in k16795 in k16792 in k16789 in k16786 in k16783 in k16780 in k16777 in k16774 in k16771 in k16768 in k16765 in k16762 in k16759 in k16756 in k16753 in k16750 in k16747 in k16744 in k16741 in k16602 in k16599 in k16596 in k16593 in k16537 in k16534 in k16531 in k16528 in k16525 in k16522 in k16519 in k16516 in k15271 in k15202 in k15009 in k15006 in k14901 in k14850 in k7607 in k7604 in k5838 in k5545 in k5542 in k5538 in k5247 in k5244 in k5241 in k5238 */
static void C_ccall f_21896(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("##sys#append");
t2=*((C_word*)lf[9]+1);
((C_proc4)(void*)(*((C_word*)t2+1)))(4,t2,((C_word*)t0)[3],((C_word*)t0)[2],t1);}

/* k21886 in k21882 in k21879 in k21855 in k21847 in k21836 in k21833 in a28021 in k18307 in k18304 in k18301 in k18298 in k17861 in k17858 in k17855 in k17852 in k17849 in k17327 in k17324 in k16801 in k16798 in k16795 in k16792 in k16789 in k16786 in k16783 in k16780 in k16777 in k16774 in k16771 in k16768 in k16765 in k16762 in k16759 in k16756 in k16753 in k16750 in k16747 in k16744 in k16741 in k16602 in k16599 in k16596 in k16593 in k16537 in k16534 in k16531 in k16528 in k16525 in k16522 in k16519 in k16516 in k15271 in k15202 in k15009 in k15006 in k14901 in k14850 in k7607 in k7604 in k5838 in k5545 in k5542 in k5538 in k5247 in k5244 in k5241 in k5238 */
static void C_ccall f_21888(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("##sys#append");
t2=*((C_word*)lf[9]+1);
((C_proc4)(void*)(*((C_word*)t2+1)))(4,t2,((C_word*)t0)[3],((C_word*)t0)[2],t1);}

/* k21875 in k21855 in k21847 in k21836 in k21833 in a28021 in k18307 in k18304 in k18301 in k18298 in k17861 in k17858 in k17855 in k17852 in k17849 in k17327 in k17324 in k16801 in k16798 in k16795 in k16792 in k16789 in k16786 in k16783 in k16780 in k16777 in k16774 in k16771 in k16768 in k16765 in k16762 in k16759 in k16756 in k16753 in k16750 in k16747 in k16744 in k16741 in k16602 in k16599 in k16596 in k16593 in k16537 in k16534 in k16531 in k16528 in k16525 in k16522 in k16519 in k16516 in k15271 in k15202 in k15009 in k15006 in k14901 in k14850 in k7607 in k7604 in k5838 in k5545 in k5542 in k5538 in k5247 in k5244 in k5241 in k5238 */
static void C_ccall f_21877(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[18],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_21877,2,t0,t1);}
t2=(C_word)C_a_i_cons(&a,2,lf[689],t1);
t3=(C_word)C_a_i_cons(&a,2,lf[690],t2);
t4=(C_word)C_a_i_list(&a,3,lf[691],lf[692],t3);
t5=(C_word)C_a_i_list(&a,1,t4);
C_trace("##sys#append");
t6=*((C_word*)lf[9]+1);
((C_proc4)(void*)(*((C_word*)t6+1)))(4,t6,((C_word*)t0)[3],((C_word*)t0)[2],t5);}

/* k21851 in k21847 in k21836 in k21833 in a28021 in k18307 in k18304 in k18301 in k18298 in k17861 in k17858 in k17855 in k17852 in k17849 in k17327 in k17324 in k16801 in k16798 in k16795 in k16792 in k16789 in k16786 in k16783 in k16780 in k16777 in k16774 in k16771 in k16768 in k16765 in k16762 in k16759 in k16756 in k16753 in k16750 in k16747 in k16744 in k16741 in k16602 in k16599 in k16596 in k16593 in k16537 in k16534 in k16531 in k16528 in k16525 in k16522 in k16519 in k16516 in k15271 in k15202 in k15009 in k15006 in k14901 in k14850 in k7607 in k7604 in k5838 in k5545 in k5542 in k5538 in k5247 in k5244 in k5241 in k5238 */
static void C_ccall f_21853(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[6],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_21853,2,t0,t1);}
t2=(C_word)C_a_i_cons(&a,2,((C_word*)t0)[3],t1);
t3=((C_word*)t0)[2];
((C_proc2)(void*)(*((C_word*)t3+1)))(2,t3,(C_word)C_a_i_cons(&a,2,lf[3],t2));}

/* k21827 in k18307 in k18304 in k18301 in k18298 in k17861 in k17858 in k17855 in k17852 in k17849 in k17327 in k17324 in k16801 in k16798 in k16795 in k16792 in k16789 in k16786 in k16783 in k16780 in k16777 in k16774 in k16771 in k16768 in k16765 in k16762 in k16759 in k16756 in k16753 in k16750 in k16747 in k16744 in k16741 in k16602 in k16599 in k16596 in k16593 in k16537 in k16534 in k16531 in k16528 in k16525 in k16522 in k16519 in k16516 in k15271 in k15202 in k15009 in k15006 in k14901 in k14850 in k7607 in k7604 in k5838 in k5545 in k5542 in k5538 in k5247 in k5244 in k5241 in k5238 */
static void C_ccall f_21829(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word t14;
C_word t15;
C_word t16;
C_word t17;
C_word t18;
C_word t19;
C_word t20;
C_word t21;
C_word t22;
C_word t23;
C_word t24;
C_word t25;
C_word t26;
C_word t27;
C_word t28;
C_word t29;
C_word t30;
C_word t31;
C_word t32;
C_word t33;
C_word t34;
C_word t35;
C_word t36;
C_word t37;
C_word t38;
C_word t39;
C_word t40;
C_word t41;
C_word ab[117],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_21829,2,t0,t1);}
t2=C_mutate((C_word*)lf[557]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_21973,a[2]=((C_word)li322),tmp=(C_word)a,a+=3,tmp));
t3=C_mutate((C_word*)lf[562]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_22702,a[2]=((C_word)li324),tmp=(C_word)a,a+=3,tmp));
t4=C_mutate((C_word*)lf[563]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_22721,a[2]=((C_word)li326),tmp=(C_word)a,a+=3,tmp));
t5=C_mutate((C_word*)lf[564]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_23172,a[2]=((C_word)li328),tmp=(C_word)a,a+=3,tmp));
t6=C_mutate((C_word*)lf[565]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_23191,a[2]=((C_word)li330),tmp=(C_word)a,a+=3,tmp));
t7=C_mutate((C_word*)lf[567]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_23920,a[2]=((C_word)li332),tmp=(C_word)a,a+=3,tmp));
t8=C_mutate((C_word*)lf[568]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_23939,a[2]=((C_word)li334),tmp=(C_word)a,a+=3,tmp));
t9=C_mutate((C_word*)lf[570]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_24668,a[2]=((C_word)li336),tmp=(C_word)a,a+=3,tmp));
t10=C_mutate((C_word*)lf[571]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_24687,a[2]=((C_word)li338),tmp=(C_word)a,a+=3,tmp));
t11=C_mutate((C_word*)lf[572]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_25138,a[2]=((C_word)li340),tmp=(C_word)a,a+=3,tmp));
t12=C_mutate((C_word*)lf[573]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_25157,a[2]=((C_word)li342),tmp=(C_word)a,a+=3,tmp));
t13=C_mutate((C_word*)lf[574]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_25608,a[2]=((C_word)li344),tmp=(C_word)a,a+=3,tmp));
t14=C_mutate((C_word*)lf[575]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_25627,a[2]=((C_word)li346),tmp=(C_word)a,a+=3,tmp));
t15=C_mutate((C_word*)lf[576]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_26097,a[2]=((C_word)li348),tmp=(C_word)a,a+=3,tmp));
t16=C_mutate((C_word*)lf[577]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_26115,a[2]=((C_word)li350),tmp=(C_word)a,a+=3,tmp));
t17=C_mutate((C_word*)lf[578]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_26130,a[2]=((C_word)li352),tmp=(C_word)a,a+=3,tmp));
t18=C_mutate((C_word*)lf[579]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_26145,a[2]=((C_word)li354),tmp=(C_word)a,a+=3,tmp));
t19=C_mutate((C_word*)lf[580]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_26164,a[2]=((C_word)li356),tmp=(C_word)a,a+=3,tmp));
t20=C_mutate((C_word*)lf[581]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_26179,a[2]=((C_word)li358),tmp=(C_word)a,a+=3,tmp));
t21=C_mutate((C_word*)lf[582]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_26198,a[2]=((C_word)li360),tmp=(C_word)a,a+=3,tmp));
t22=C_mutate((C_word*)lf[583]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_26217,a[2]=((C_word)li362),tmp=(C_word)a,a+=3,tmp));
t23=C_mutate((C_word*)lf[584]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_26240,a[2]=((C_word)li364),tmp=(C_word)a,a+=3,tmp));
t24=C_mutate((C_word*)lf[585]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_26259,a[2]=((C_word)li366),tmp=(C_word)a,a+=3,tmp));
t25=C_mutate((C_word*)lf[586]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_26282,a[2]=((C_word)li369),tmp=(C_word)a,a+=3,tmp));
t26=C_mutate((C_word*)lf[588]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_26329,a[2]=((C_word)li372),tmp=(C_word)a,a+=3,tmp));
t27=C_mutate((C_word*)lf[590]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_26384,a[2]=((C_word)li374),tmp=(C_word)a,a+=3,tmp));
t28=C_mutate((C_word*)lf[591]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_26403,a[2]=((C_word)li376),tmp=(C_word)a,a+=3,tmp));
t29=C_mutate((C_word*)lf[592]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_26426,a[2]=((C_word)li378),tmp=(C_word)a,a+=3,tmp));
t30=C_mutate((C_word*)lf[593]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_26454,a[2]=((C_word)li380),tmp=(C_word)a,a+=3,tmp));
t31=C_mutate((C_word*)lf[594]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_26482,a[2]=((C_word)li382),tmp=(C_word)a,a+=3,tmp));
t32=C_mutate((C_word*)lf[595]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_26510,a[2]=((C_word)li384),tmp=(C_word)a,a+=3,tmp));
t33=C_mutate((C_word*)lf[596]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_26538,a[2]=((C_word)li386),tmp=(C_word)a,a+=3,tmp));
t34=C_mutate((C_word*)lf[597]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_26566,a[2]=((C_word)li388),tmp=(C_word)a,a+=3,tmp));
t35=C_mutate((C_word*)lf[598]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_26594,a[2]=((C_word)li390),tmp=(C_word)a,a+=3,tmp));
t36=C_mutate((C_word*)lf[599]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_26622,a[2]=((C_word)li392),tmp=(C_word)a,a+=3,tmp));
t37=C_mutate((C_word*)lf[600]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_26650,a[2]=((C_word)li394),tmp=(C_word)a,a+=3,tmp));
t38=C_mutate((C_word*)lf[601]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_26678,a[2]=((C_word)li396),tmp=(C_word)a,a+=3,tmp));
t39=C_mutate((C_word*)lf[602]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_26693,a[2]=((C_word)li403),tmp=(C_word)a,a+=3,tmp));
t40=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_26751,a[2]=((C_word*)t0)[2],tmp=(C_word)a,a+=3,tmp);
C_trace("ChickenBridge.scm: 366  hash-table-set!");
t41=C_retrieve(lf[660]);
((C_proc5)C_retrieve_proc(t41))(5,t41,t40,C_retrieve(lf[31]),lf[687],lf[688]);}

/* k26749 in k21827 in k18307 in k18304 in k18301 in k18298 in k17861 in k17858 in k17855 in k17852 in k17849 in k17327 in k17324 in k16801 in k16798 in k16795 in k16792 in k16789 in k16786 in k16783 in k16780 in k16777 in k16774 in k16771 in k16768 in k16765 in k16762 in k16759 in k16756 in k16753 in k16750 in k16747 in k16744 in k16741 in k16602 in k16599 in k16596 in k16593 in k16537 in k16534 in k16531 in k16528 in k16525 in k16522 in k16519 in k16516 in k15271 in k15202 in k15009 in k15006 in k14901 in k14850 in k7607 in k7604 in k5838 in k5545 in k5542 in k5538 in k5247 in k5244 in k5241 in k5238 */
static void C_ccall f_26751(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[3],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_26751,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_26754,a[2]=((C_word*)t0)[2],tmp=(C_word)a,a+=3,tmp);
C_trace("ChickenBridge.scm: 366  hash-table-set!");
t3=C_retrieve(lf[660]);
((C_proc5)C_retrieve_proc(t3))(5,t3,t2,C_retrieve(lf[31]),lf[685],lf[686]);}

/* k26752 in k26749 in k21827 in k18307 in k18304 in k18301 in k18298 in k17861 in k17858 in k17855 in k17852 in k17849 in k17327 in k17324 in k16801 in k16798 in k16795 in k16792 in k16789 in k16786 in k16783 in k16780 in k16777 in k16774 in k16771 in k16768 in k16765 in k16762 in k16759 in k16756 in k16753 in k16750 in k16747 in k16744 in k16741 in k16602 in k16599 in k16596 in k16593 in k16537 in k16534 in k16531 in k16528 in k16525 in k16522 in k16519 in k16516 in k15271 in k15202 in k15009 in k15006 in k14901 in k14850 in k7607 in k7604 in k5838 in k5545 in k5542 in k5538 in k5247 in k5244 in k5241 in k5238 */
static void C_ccall f_26754(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[3],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_26754,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_26757,a[2]=((C_word*)t0)[2],tmp=(C_word)a,a+=3,tmp);
C_trace("ChickenBridge.scm: 366  hash-table-set!");
t3=C_retrieve(lf[660]);
((C_proc5)C_retrieve_proc(t3))(5,t3,t2,C_retrieve(lf[31]),lf[683],lf[684]);}

/* k26755 in k26752 in k26749 in k21827 in k18307 in k18304 in k18301 in k18298 in k17861 in k17858 in k17855 in k17852 in k17849 in k17327 in k17324 in k16801 in k16798 in k16795 in k16792 in k16789 in k16786 in k16783 in k16780 in k16777 in k16774 in k16771 in k16768 in k16765 in k16762 in k16759 in k16756 in k16753 in k16750 in k16747 in k16744 in k16741 in k16602 in k16599 in k16596 in k16593 in k16537 in k16534 in k16531 in k16528 in k16525 in k16522 in k16519 in k16516 in k15271 in k15202 in k15009 in k15006 in k14901 in k14850 in k7607 in k7604 in k5838 in k5545 in k5542 in k5538 in k5247 in k5244 in k5241 in k5238 */
static void C_ccall f_26757(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[3],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_26757,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_26760,a[2]=((C_word*)t0)[2],tmp=(C_word)a,a+=3,tmp);
C_trace("ChickenBridge.scm: 366  hash-table-set!");
t3=C_retrieve(lf[660]);
((C_proc5)C_retrieve_proc(t3))(5,t3,t2,C_retrieve(lf[31]),lf[681],lf[682]);}

/* k26758 in k26755 in k26752 in k26749 in k21827 in k18307 in k18304 in k18301 in k18298 in k17861 in k17858 in k17855 in k17852 in k17849 in k17327 in k17324 in k16801 in k16798 in k16795 in k16792 in k16789 in k16786 in k16783 in k16780 in k16777 in k16774 in k16771 in k16768 in k16765 in k16762 in k16759 in k16756 in k16753 in k16750 in k16747 in k16744 in k16741 in k16602 in k16599 in k16596 in k16593 in k16537 in k16534 in k16531 in k16528 in k16525 in k16522 in k16519 in k16516 in k15271 in k15202 in k15009 in k15006 in k14901 in k14850 in k7607 in k7604 in k5838 in k5545 in k5542 in k5538 in k5247 in k5244 in k5241 in k5238 */
static void C_ccall f_26760(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[3],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_26760,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_26763,a[2]=((C_word*)t0)[2],tmp=(C_word)a,a+=3,tmp);
C_trace("ChickenBridge.scm: 366  hash-table-set!");
t3=C_retrieve(lf[660]);
((C_proc5)C_retrieve_proc(t3))(5,t3,t2,C_retrieve(lf[31]),lf[679],lf[680]);}

/* k26761 in k26758 in k26755 in k26752 in k26749 in k21827 in k18307 in k18304 in k18301 in k18298 in k17861 in k17858 in k17855 in k17852 in k17849 in k17327 in k17324 in k16801 in k16798 in k16795 in k16792 in k16789 in k16786 in k16783 in k16780 in k16777 in k16774 in k16771 in k16768 in k16765 in k16762 in k16759 in k16756 in k16753 in k16750 in k16747 in k16744 in k16741 in k16602 in k16599 in k16596 in k16593 in k16537 in k16534 in k16531 in k16528 in k16525 in k16522 in k16519 in k16516 in k15271 in k15202 in k15009 in k15006 in k14901 in k14850 in k7607 in k7604 in k5838 in k5545 in k5542 in k5538 in k5247 in k5244 in k5241 in k5238 */
static void C_ccall f_26763(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[3],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_26763,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_26766,a[2]=((C_word*)t0)[2],tmp=(C_word)a,a+=3,tmp);
C_trace("ChickenBridge.scm: 366  hash-table-set!");
t3=C_retrieve(lf[660]);
((C_proc5)C_retrieve_proc(t3))(5,t3,t2,C_retrieve(lf[31]),lf[677],lf[678]);}

/* k26764 in k26761 in k26758 in k26755 in k26752 in k26749 in k21827 in k18307 in k18304 in k18301 in k18298 in k17861 in k17858 in k17855 in k17852 in k17849 in k17327 in k17324 in k16801 in k16798 in k16795 in k16792 in k16789 in k16786 in k16783 in k16780 in k16777 in k16774 in k16771 in k16768 in k16765 in k16762 in k16759 in k16756 in k16753 in k16750 in k16747 in k16744 in k16741 in k16602 in k16599 in k16596 in k16593 in k16537 in k16534 in k16531 in k16528 in k16525 in k16522 in k16519 in k16516 in k15271 in k15202 in k15009 in k15006 in k14901 in k14850 in k7607 in k7604 in k5838 in k5545 in k5542 in k5538 in k5247 in k5244 in k5241 in k5238 */
static void C_ccall f_26766(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[3],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_26766,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_26769,a[2]=((C_word*)t0)[2],tmp=(C_word)a,a+=3,tmp);
C_trace("ChickenBridge.scm: 366  hash-table-set!");
t3=C_retrieve(lf[660]);
((C_proc5)C_retrieve_proc(t3))(5,t3,t2,C_retrieve(lf[31]),lf[675],lf[676]);}

/* k26767 in k26764 in k26761 in k26758 in k26755 in k26752 in k26749 in k21827 in k18307 in k18304 in k18301 in k18298 in k17861 in k17858 in k17855 in k17852 in k17849 in k17327 in k17324 in k16801 in k16798 in k16795 in k16792 in k16789 in k16786 in k16783 in k16780 in k16777 in k16774 in k16771 in k16768 in k16765 in k16762 in k16759 in k16756 in k16753 in k16750 in k16747 in k16744 in k16741 in k16602 in k16599 in k16596 in k16593 in k16537 in k16534 in k16531 in k16528 in k16525 in k16522 in k16519 in k16516 in k15271 in k15202 in k15009 in k15006 in k14901 in k14850 in k7607 in k7604 in k5838 in k5545 in k5542 in k5538 in k5247 in k5244 in k5241 in k5238 */
static void C_ccall f_26769(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[3],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_26769,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_26772,a[2]=((C_word*)t0)[2],tmp=(C_word)a,a+=3,tmp);
C_trace("ChickenBridge.scm: 366  hash-table-set!");
t3=C_retrieve(lf[660]);
((C_proc5)C_retrieve_proc(t3))(5,t3,t2,C_retrieve(lf[31]),lf[673],lf[674]);}

/* k26770 in k26767 in k26764 in k26761 in k26758 in k26755 in k26752 in k26749 in k21827 in k18307 in k18304 in k18301 in k18298 in k17861 in k17858 in k17855 in k17852 in k17849 in k17327 in k17324 in k16801 in k16798 in k16795 in k16792 in k16789 in k16786 in k16783 in k16780 in k16777 in k16774 in k16771 in k16768 in k16765 in k16762 in k16759 in k16756 in k16753 in k16750 in k16747 in k16744 in k16741 in k16602 in k16599 in k16596 in k16593 in k16537 in k16534 in k16531 in k16528 in k16525 in k16522 in k16519 in k16516 in k15271 in k15202 in k15009 in k15006 in k14901 in k14850 in k7607 in k7604 in k5838 in k5545 in k5542 in k5538 in k5247 in k5244 in k5241 in k5238 */
static void C_ccall f_26772(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[3],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_26772,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_26775,a[2]=((C_word*)t0)[2],tmp=(C_word)a,a+=3,tmp);
C_trace("ChickenBridge.scm: 366  hash-table-set!");
t3=C_retrieve(lf[660]);
((C_proc5)C_retrieve_proc(t3))(5,t3,t2,C_retrieve(lf[31]),lf[671],lf[672]);}

/* k26773 in k26770 in k26767 in k26764 in k26761 in k26758 in k26755 in k26752 in k26749 in k21827 in k18307 in k18304 in k18301 in k18298 in k17861 in k17858 in k17855 in k17852 in k17849 in k17327 in k17324 in k16801 in k16798 in k16795 in k16792 in k16789 in k16786 in k16783 in k16780 in k16777 in k16774 in k16771 in k16768 in k16765 in k16762 in k16759 in k16756 in k16753 in k16750 in k16747 in k16744 in k16741 in k16602 in k16599 in k16596 in k16593 in k16537 in k16534 in k16531 in k16528 in k16525 in k16522 in k16519 in k16516 in k15271 in k15202 in k15009 in k15006 in k14901 in k14850 in k7607 in k7604 in k5838 in k5545 in k5542 in k5538 in k5247 in k5244 in k5241 in k5238 */
static void C_ccall f_26775(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[3],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_26775,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_26778,a[2]=((C_word*)t0)[2],tmp=(C_word)a,a+=3,tmp);
C_trace("ChickenBridge.scm: 366  hash-table-set!");
t3=C_retrieve(lf[660]);
((C_proc5)C_retrieve_proc(t3))(5,t3,t2,C_retrieve(lf[31]),lf[669],lf[670]);}

/* k26776 in k26773 in k26770 in k26767 in k26764 in k26761 in k26758 in k26755 in k26752 in k26749 in k21827 in k18307 in k18304 in k18301 in k18298 in k17861 in k17858 in k17855 in k17852 in k17849 in k17327 in k17324 in k16801 in k16798 in k16795 in k16792 in k16789 in k16786 in k16783 in k16780 in k16777 in k16774 in k16771 in k16768 in k16765 in k16762 in k16759 in k16756 in k16753 in k16750 in k16747 in k16744 in k16741 in k16602 in k16599 in k16596 in k16593 in k16537 in k16534 in k16531 in k16528 in k16525 in k16522 in k16519 in k16516 in k15271 in k15202 in k15009 in k15006 in k14901 in k14850 in k7607 in k7604 in k5838 in k5545 in k5542 in k5538 in k5247 in k5244 in k5241 in k5238 */
static void C_ccall f_26778(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[3],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_26778,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_26781,a[2]=((C_word*)t0)[2],tmp=(C_word)a,a+=3,tmp);
C_trace("ChickenBridge.scm: 366  hash-table-set!");
t3=C_retrieve(lf[660]);
((C_proc5)C_retrieve_proc(t3))(5,t3,t2,C_retrieve(lf[31]),lf[667],lf[668]);}

/* k26779 in k26776 in k26773 in k26770 in k26767 in k26764 in k26761 in k26758 in k26755 in k26752 in k26749 in k21827 in k18307 in k18304 in k18301 in k18298 in k17861 in k17858 in k17855 in k17852 in k17849 in k17327 in k17324 in k16801 in k16798 in k16795 in k16792 in k16789 in k16786 in k16783 in k16780 in k16777 in k16774 in k16771 in k16768 in k16765 in k16762 in k16759 in k16756 in k16753 in k16750 in k16747 in k16744 in k16741 in k16602 in k16599 in k16596 in k16593 in k16537 in k16534 in k16531 in k16528 in k16525 in k16522 in k16519 in k16516 in k15271 in k15202 in k15009 in k15006 in k14901 in k14850 in k7607 in k7604 in k5838 in k5545 in k5542 in k5538 in k5247 in k5244 in k5241 in k5238 */
static void C_ccall f_26781(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[12],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_26781,2,t0,t1);}
t2=C_mutate((C_word*)lf[609]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_26783,a[2]=((C_word)li405),tmp=(C_word)a,a+=3,tmp));
t3=C_mutate((C_word*)lf[610]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_26840,a[2]=((C_word)li407),tmp=(C_word)a,a+=3,tmp));
t4=C_mutate((C_word*)lf[611]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_26897,a[2]=((C_word)li409),tmp=(C_word)a,a+=3,tmp));
t5=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_26906,a[2]=((C_word*)t0)[2],tmp=(C_word)a,a+=3,tmp);
C_trace("ChickenBridge.scm: 367  hash-table-set!");
t6=C_retrieve(lf[660]);
((C_proc5)C_retrieve_proc(t6))(5,t6,t5,C_retrieve(lf[31]),lf[665],lf[666]);}

/* k26904 in k26779 in k26776 in k26773 in k26770 in k26767 in k26764 in k26761 in k26758 in k26755 in k26752 in k26749 in k21827 in k18307 in k18304 in k18301 in k18298 in k17861 in k17858 in k17855 in k17852 in k17849 in k17327 in k17324 in k16801 in k16798 in k16795 in k16792 in k16789 in k16786 in k16783 in k16780 in k16777 in k16774 in k16771 in k16768 in k16765 in k16762 in k16759 in k16756 in k16753 in k16750 in k16747 in k16744 in k16741 in k16602 in k16599 in k16596 in k16593 in k16537 in k16534 in k16531 in k16528 in k16525 in k16522 in k16519 in k16516 in k15271 in k15202 in k15009 in k15006 in k14901 in k14850 in k7607 in k7604 in k5838 in k5545 in k5542 in k5538 in k5247 in k5244 in k5241 in k5238 */
static void C_ccall f_26906(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[3],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_26906,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_26909,a[2]=((C_word*)t0)[2],tmp=(C_word)a,a+=3,tmp);
C_trace("ChickenBridge.scm: 367  hash-table-set!");
t3=C_retrieve(lf[660]);
((C_proc5)C_retrieve_proc(t3))(5,t3,t2,C_retrieve(lf[31]),lf[663],lf[664]);}

/* k26907 in k26904 in k26779 in k26776 in k26773 in k26770 in k26767 in k26764 in k26761 in k26758 in k26755 in k26752 in k26749 in k21827 in k18307 in k18304 in k18301 in k18298 in k17861 in k17858 in k17855 in k17852 in k17849 in k17327 in k17324 in k16801 in k16798 in k16795 in k16792 in k16789 in k16786 in k16783 in k16780 in k16777 in k16774 in k16771 in k16768 in k16765 in k16762 in k16759 in k16756 in k16753 in k16750 in k16747 in k16744 in k16741 in k16602 in k16599 in k16596 in k16593 in k16537 in k16534 in k16531 in k16528 in k16525 in k16522 in k16519 in k16516 in k15271 in k15202 in k15009 in k15006 in k14901 in k14850 in k7607 in k7604 in k5838 in k5545 in k5542 in k5538 in k5247 in k5244 in k5241 in k5238 */
static void C_ccall f_26909(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[3],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_26909,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_26912,a[2]=((C_word*)t0)[2],tmp=(C_word)a,a+=3,tmp);
C_trace("ChickenBridge.scm: 367  hash-table-set!");
t3=C_retrieve(lf[660]);
((C_proc5)C_retrieve_proc(t3))(5,t3,t2,C_retrieve(lf[31]),lf[661],lf[662]);}

/* k26910 in k26907 in k26904 in k26779 in k26776 in k26773 in k26770 in k26767 in k26764 in k26761 in k26758 in k26755 in k26752 in k26749 in k21827 in k18307 in k18304 in k18301 in k18298 in k17861 in k17858 in k17855 in k17852 in k17849 in k17327 in k17324 in k16801 in k16798 in k16795 in k16792 in k16789 in k16786 in k16783 in k16780 in k16777 in k16774 in k16771 in k16768 in k16765 in k16762 in k16759 in k16756 in k16753 in k16750 in k16747 in k16744 in k16741 in k16602 in k16599 in k16596 in k16593 in k16537 in k16534 in k16531 in k16528 in k16525 in k16522 in k16519 in k16516 in k15271 in k15202 in k15009 in k15006 in k14901 in k14850 in k7607 in k7604 in k5838 in k5545 in k5542 in k5538 in k5247 in k5244 in k5241 in k5238 */
static void C_ccall f_26912(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word t14;
C_word t15;
C_word t16;
C_word t17;
C_word t18;
C_word t19;
C_word t20;
C_word t21;
C_word ab[54],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_26912,2,t0,t1);}
t2=C_mutate((C_word*)lf[612]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_26914,a[2]=((C_word)li412),tmp=(C_word)a,a+=3,tmp));
t3=C_mutate((C_word*)lf[341]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_27095,a[2]=((C_word)li413),tmp=(C_word)a,a+=3,tmp));
t4=C_mutate((C_word*)lf[330]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_27109,a[2]=((C_word)li414),tmp=(C_word)a,a+=3,tmp));
t5=C_mutate((C_word*)lf[620]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_27123,a[2]=((C_word)li415),tmp=(C_word)a,a+=3,tmp));
t6=C_mutate((C_word*)lf[621]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_27126,a[2]=((C_word)li416),tmp=(C_word)a,a+=3,tmp));
t7=C_mutate(&lf[622],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_27138,a[2]=((C_word)li418),tmp=(C_word)a,a+=3,tmp));
t8=C_mutate(&lf[624],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_27147,a[2]=((C_word)li420),tmp=(C_word)a,a+=3,tmp));
t9=C_mutate(&lf[625],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_27191,a[2]=((C_word)li422),tmp=(C_word)a,a+=3,tmp));
t10=C_mutate((C_word*)lf[352]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_27213,a[2]=((C_word)li424),tmp=(C_word)a,a+=3,tmp));
t11=C_mutate((C_word*)lf[626]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_27232,a[2]=((C_word)li431),tmp=(C_word)a,a+=3,tmp));
t12=C_mutate((C_word*)lf[627]+1,C_retrieve(lf[621]));
t13=C_mutate((C_word*)lf[628]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_27400,a[2]=((C_word)li433),tmp=(C_word)a,a+=3,tmp));
t14=C_mutate((C_word*)lf[634]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_27463,a[2]=((C_word)li435),tmp=(C_word)a,a+=3,tmp));
t15=C_mutate((C_word*)lf[635]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_27472,a[2]=((C_word)li437),tmp=(C_word)a,a+=3,tmp));
t16=C_mutate((C_word*)lf[636]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_27478,a[2]=((C_word)li439),tmp=(C_word)a,a+=3,tmp));
t17=C_mutate((C_word*)lf[637]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_27487,a[2]=((C_word)li441),tmp=(C_word)a,a+=3,tmp));
t18=C_mutate((C_word*)lf[639]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_27545,a[2]=((C_word)li443),tmp=(C_word)a,a+=3,tmp));
t19=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_27555,a[2]=((C_word*)t0)[2],tmp=(C_word)a,a+=3,tmp);
t20=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_28016,a[2]=((C_word)li446),tmp=(C_word)a,a+=3,tmp);
C_trace("ChickenBridge.scm: 541  ##sys#register-macro");
t21=C_retrieve(lf[658]);
((C_proc4)C_retrieve_proc(t21))(4,t21,t19,lf[659],t20);}

/* a28015 in k26910 in k26907 in k26904 in k26779 in k26776 in k26773 in k26770 in k26767 in k26764 in k26761 in k26758 in k26755 in k26752 in k26749 in k21827 in k18307 in k18304 in k18301 in k18298 in k17861 in k17858 in k17855 in k17852 in k17849 in k17327 in k17324 in k16801 in k16798 in k16795 in k16792 in k16789 in k16786 in k16783 in k16780 in k16777 in k16774 in k16771 in k16768 in k16765 in k16762 in k16759 in k16756 in k16753 in k16750 in k16747 in k16744 in k16741 in k16602 in k16599 in k16596 in k16593 in k16537 in k16534 in k16531 in k16528 in k16525 in k16522 in k16519 in k16516 in k15271 in k15202 in k15009 in k15006 in k14901 in k14850 in k7607 in k7604 in k5838 in k5545 in k5542 in k5538 in k5247 in k5244 in k5241 in k5238 */
static void C_ccall f_28016(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,...){
C_word tmp;
C_word t4;
va_list v;
C_word *a,c2=c;
C_save_rest(t3,c2,4);
if(c<4) C_bad_min_argc_2(c,4,t0);
C_check_for_interrupt;
if(!C_demand(c*C_SIZEOF_PAIR+17)){
C_save_and_reclaim((void*)tr4r,(void*)f_28016r,4,t0,t1,t2,t3);}
else{
a=C_alloc((c-4)*3);
t4=C_restore_rest(a,C_rest_count(0));
f_28016r(t0,t1,t2,t3,t4);}}

static void C_ccall f_28016r(C_word t0,C_word t1,C_word t2,C_word t3,C_word t4){
C_word tmp;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word t14;
C_word *a=C_alloc(17);
t5=t4;
t6=(*a=C_VECTOR_TYPE|1,a[1]=t5,tmp=(C_word)a,a+=2,tmp);
t7=C_SCHEME_END_OF_LIST;
t8=(*a=C_VECTOR_TYPE|1,a[1]=t7,tmp=(C_word)a,a+=2,tmp);
t9=C_SCHEME_END_OF_LIST;
t10=(*a=C_VECTOR_TYPE|1,a[1]=t9,tmp=(C_word)a,a+=2,tmp);
t11=C_SCHEME_END_OF_LIST;
t12=(*a=C_VECTOR_TYPE|1,a[1]=t11,tmp=(C_word)a,a+=2,tmp);
t13=(*a=C_CLOSURE_TYPE|8,a[1]=(C_word)f_27570,a[2]=t2,a[3]=t12,a[4]=t6,a[5]=t10,a[6]=t1,a[7]=t8,a[8]=t3,tmp=(C_word)a,a+=9,tmp);
if(C_truep((C_word)C_i_listp(t2))){
t14=t13;
f_27570(2,t14,C_SCHEME_UNDEFINED);}
else{
C_trace("ChickenBridge.scm: 550  error");
t14=*((C_word*)lf[6]+1);
((C_proc4)C_retrieve_proc(t14))(4,t14,t13,lf[657],t2);}}

/* k27568 in a28015 in k26910 in k26907 in k26904 in k26779 in k26776 in k26773 in k26770 in k26767 in k26764 in k26761 in k26758 in k26755 in k26752 in k26749 in k21827 in k18307 in k18304 in k18301 in k18298 in k17861 in k17858 in k17855 in k17852 in k17849 in k17327 in k17324 in k16801 in k16798 in k16795 in k16792 in k16789 in k16786 in k16783 in k16780 in k16777 in k16774 in k16771 in k16768 in k16765 in k16762 in k16759 in k16756 in k16753 in k16750 in k16747 in k16744 in k16741 in k16602 in k16599 in k16596 in k16593 in k16537 in k16534 in k16531 in k16528 in k16525 in k16522 in k16519 in k16516 in k15271 in k15202 in k15009 in k15006 in k14901 in k14850 in k7607 in k7604 in k5838 in k5545 in k5542 in k5538 in k5247 in k5244 in k5241 in k5238 */
static void C_ccall f_27570(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_27570,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|8,a[1]=(C_word)f_27573,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],a[7]=((C_word*)t0)[7],a[8]=((C_word*)t0)[8],tmp=(C_word)a,a+=9,tmp);
if(C_truep((C_word)C_i_listp(((C_word*)t0)[8]))){
if(C_truep((C_word)C_i_nullp(((C_word*)t0)[8]))){
C_trace("ChickenBridge.scm: 554  error");
t3=*((C_word*)lf[6]+1);
((C_proc3)C_retrieve_proc(t3))(3,t3,t2,lf[655]);}
else{
t3=t2;
f_27573(2,t3,C_SCHEME_UNDEFINED);}}
else{
C_trace("ChickenBridge.scm: 552  error");
t3=*((C_word*)lf[6]+1);
((C_proc4)C_retrieve_proc(t3))(4,t3,t2,lf[656],((C_word*)t0)[8]);}}

/* k27571 in k27568 in a28015 in k26910 in k26907 in k26904 in k26779 in k26776 in k26773 in k26770 in k26767 in k26764 in k26761 in k26758 in k26755 in k26752 in k26749 in k21827 in k18307 in k18304 in k18301 in k18298 in k17861 in k17858 in k17855 in k17852 in k17849 in k17327 in k17324 in k16801 in k16798 in k16795 in k16792 in k16789 in k16786 in k16783 in k16780 in k16777 in k16774 in k16771 in k16768 in k16765 in k16762 in k16759 in k16756 in k16753 in k16750 in k16747 in k16744 in k16741 in k16602 in k16599 in k16596 in k16593 in k16537 in k16534 in k16531 in k16528 in k16525 in k16522 in k16519 in k16516 in k15271 in k15202 in k15009 in k15006 in k14901 in k14850 in k7607 in k7604 in k5838 in k5545 in k5542 in k5538 in k5247 in k5244 in k5241 in k5238 */
static void C_ccall f_27573(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[17],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_27573,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_27576,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],a[7]=((C_word*)t0)[8],tmp=(C_word)a,a+=8,tmp);
t3=C_SCHEME_UNDEFINED;
t4=(*a=C_VECTOR_TYPE|1,a[1]=t3,tmp=(C_word)a,a+=2,tmp);
t5=C_set_block_item(t4,0,(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_27851,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[5],a[4]=((C_word*)t0)[7],a[5]=t4,a[6]=((C_word)li445),tmp=(C_word)a,a+=7,tmp));
t6=((C_word*)t4)[1];
f_27851(t6,t2,((C_word*)t0)[2]);}

/* do5160 in k27571 in k27568 in a28015 in k26910 in k26907 in k26904 in k26779 in k26776 in k26773 in k26770 in k26767 in k26764 in k26761 in k26758 in k26755 in k26752 in k26749 in k21827 in k18307 in k18304 in k18301 in k18298 in k17861 in k17858 in k17855 in k17852 in k17849 in k17327 in k17324 in k16801 in k16798 in k16795 in k16792 in k16789 in k16786 in k16783 in k16780 in k16777 in k16774 in k16771 in k16768 in k16765 in k16762 in k16759 in k16756 in k16753 in k16750 in k16747 in k16744 in k16741 in k16602 in k16599 in k16596 in k16593 in k16537 in k16534 in k16531 in k16528 in k16525 in k16522 in k16519 in k16516 in k15271 in k15202 in k15009 in k15006 in k14901 in k14850 in k7607 in k7604 in k5838 in k5545 in k5542 in k5538 in k5247 in k5244 in k5241 in k5238 */
static void C_fcall f_27851(C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word ab[16],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_27851,NULL,3,t0,t1,t2);}
if(C_truep((C_word)C_i_nullp(t2))){
t3=t1;
((C_proc2)(void*)(*((C_word*)t3+1)))(2,t3,C_SCHEME_FALSE);}
else{
t3=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_27861,a[2]=t1,a[3]=((C_word*)t0)[5],a[4]=t2,tmp=(C_word)a,a+=5,tmp);
t4=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_27871,a[2]=t3,a[3]=((C_word*)t0)[2],a[4]=((C_word*)t0)[3],a[5]=((C_word*)t0)[4],a[6]=t2,tmp=(C_word)a,a+=7,tmp);
t5=(C_word)C_i_car(t2);
if(C_truep((C_word)C_i_pairp(t5))){
t6=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_27959,a[2]=t4,a[3]=t2,tmp=(C_word)a,a+=4,tmp);
t7=(C_word)C_i_car(t2);
t8=(C_word)C_i_length(t7);
C_trace("ChickenBridge.scm: 558  <");
C_lessp(5,0,t6,C_fix(0),t8,C_fix(4));}
else{
t6=t4;
f_27871(t6,C_SCHEME_FALSE);}}}

/* k27957 in do5160 in k27571 in k27568 in a28015 in k26910 in k26907 in k26904 in k26779 in k26776 in k26773 in k26770 in k26767 in k26764 in k26761 in k26758 in k26755 in k26752 in k26749 in k21827 in k18307 in k18304 in k18301 in k18298 in k17861 in k17858 in k17855 in k17852 in k17849 in k17327 in k17324 in k16801 in k16798 in k16795 in k16792 in k16789 in k16786 in k16783 in k16780 in k16777 in k16774 in k16771 in k16768 in k16765 in k16762 in k16759 in k16756 in k16753 in k16750 in k16747 in k16744 in k16741 in k16602 in k16599 in k16596 in k16593 in k16537 in k16534 in k16531 in k16528 in k16525 in k16522 in k16519 in k16516 in k15271 in k15202 in k15009 in k15006 in k14901 in k14850 in k7607 in k7604 in k5838 in k5545 in k5542 in k5538 in k5247 in k5244 in k5241 in k5238 */
static void C_ccall f_27959(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word *a;
if(C_truep(t1)){
t2=(C_word)C_i_car(((C_word*)t0)[3]);
t3=(C_word)C_i_car(t2);
t4=((C_word*)t0)[2];
f_27871(t4,(C_word)C_i_symbolp(t3));}
else{
t2=((C_word*)t0)[2];
f_27871(t2,C_SCHEME_FALSE);}}

/* k27869 in do5160 in k27571 in k27568 in a28015 in k26910 in k26907 in k26904 in k26779 in k26776 in k26773 in k26770 in k26767 in k26764 in k26761 in k26758 in k26755 in k26752 in k26749 in k21827 in k18307 in k18304 in k18301 in k18298 in k17861 in k17858 in k17855 in k17852 in k17849 in k17327 in k17324 in k16801 in k16798 in k16795 in k16792 in k16789 in k16786 in k16783 in k16780 in k16777 in k16774 in k16771 in k16768 in k16765 in k16762 in k16759 in k16756 in k16753 in k16750 in k16747 in k16744 in k16741 in k16602 in k16599 in k16596 in k16593 in k16537 in k16534 in k16531 in k16528 in k16525 in k16522 in k16519 in k16516 in k15271 in k15202 in k15009 in k15006 in k14901 in k14850 in k7607 in k7604 in k5838 in k5545 in k5542 in k5538 in k5247 in k5244 in k5241 in k5238 */
static void C_fcall f_27871(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word ab[8],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_27871,NULL,2,t0,t1);}
if(C_truep(t1)){
t2=(C_word)C_i_car(((C_word*)t0)[6]);
t3=(C_word)C_i_car(t2);
t4=(C_word)C_i_car(((C_word*)t0)[6]);
t5=(C_word)C_i_cadr(t4);
t6=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_27880,a[2]=t5,a[3]=t3,a[4]=((C_word*)t0)[2],a[5]=((C_word*)t0)[3],a[6]=((C_word*)t0)[4],a[7]=((C_word*)t0)[5],tmp=(C_word)a,a+=8,tmp);
t7=(C_word)C_i_car(((C_word*)t0)[6]);
t8=(C_word)C_i_cddr(t7);
if(C_truep((C_word)C_i_nullp(t8))){
t9=t6;
f_27880(t9,lf[653]);}
else{
t9=(C_word)C_i_car(((C_word*)t0)[6]);
t10=t6;
f_27880(t10,(C_word)C_i_caddr(t9));}}
else{
t2=(C_word)C_i_car(((C_word*)t0)[6]);
C_trace("ChickenBridge.scm: 571  error");
t3=*((C_word*)lf[6]+1);
((C_proc4)C_retrieve_proc(t3))(4,t3,((C_word*)t0)[2],lf[654],t2);}}

/* k27878 in k27869 in do5160 in k27571 in k27568 in a28015 in k26910 in k26907 in k26904 in k26779 in k26776 in k26773 in k26770 in k26767 in k26764 in k26761 in k26758 in k26755 in k26752 in k26749 in k21827 in k18307 in k18304 in k18301 in k18298 in k17861 in k17858 in k17855 in k17852 in k17849 in k17327 in k17324 in k16801 in k16798 in k16795 in k16792 in k16789 in k16786 in k16783 in k16780 in k16777 in k16774 in k16771 in k16768 in k16765 in k16762 in k16759 in k16756 in k16753 in k16750 in k16747 in k16744 in k16741 in k16602 in k16599 in k16596 in k16593 in k16537 in k16534 in k16531 in k16528 in k16525 in k16522 in k16519 in k16516 in k15271 in k15202 in k15009 in k15006 in k14901 in k14850 in k7607 in k7604 in k5838 in k5545 in k5542 in k5538 in k5247 in k5244 in k5241 in k5238 */
static void C_fcall f_27880(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[12],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_27880,NULL,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|8,a[1]=(C_word)f_27884,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=t1,a[5]=((C_word*)t0)[4],a[6]=((C_word*)t0)[5],a[7]=((C_word*)t0)[6],a[8]=((C_word*)t0)[7],tmp=(C_word)a,a+=9,tmp);
t3=(C_word)C_a_i_list(&a,1,((C_word*)t0)[3]);
C_trace("ChickenBridge.scm: 566  append");
t4=*((C_word*)lf[20]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,((C_word*)((C_word*)t0)[7])[1],t3);}

/* k27882 in k27878 in k27869 in do5160 in k27571 in k27568 in a28015 in k26910 in k26907 in k26904 in k26779 in k26776 in k26773 in k26770 in k26767 in k26764 in k26761 in k26758 in k26755 in k26752 in k26749 in k21827 in k18307 in k18304 in k18301 in k18298 in k17861 in k17858 in k17855 in k17852 in k17849 in k17327 in k17324 in k16801 in k16798 in k16795 in k16792 in k16789 in k16786 in k16783 in k16780 in k16777 in k16774 in k16771 in k16768 in k16765 in k16762 in k16759 in k16756 in k16753 in k16750 in k16747 in k16744 in k16741 in k16602 in k16599 in k16596 in k16593 in k16537 in k16534 in k16531 in k16528 in k16525 in k16522 in k16519 in k16516 in k15271 in k15202 in k15009 in k15006 in k14901 in k14850 in k7607 in k7604 in k5838 in k5545 in k5542 in k5538 in k5247 in k5244 in k5241 in k5238 */
static void C_ccall f_27884(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[10],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_27884,2,t0,t1);}
t2=C_mutate(((C_word *)((C_word*)t0)[8])+1,t1);
t3=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_27888,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t4=(C_word)C_a_i_list(&a,1,((C_word*)t0)[2]);
C_trace("ChickenBridge.scm: 567  append");
t5=*((C_word*)lf[20]+1);
((C_proc4)C_retrieve_proc(t5))(4,t5,t3,((C_word*)((C_word*)t0)[7])[1],t4);}

/* k27886 in k27882 in k27878 in k27869 in do5160 in k27571 in k27568 in a28015 in k26910 in k26907 in k26904 in k26779 in k26776 in k26773 in k26770 in k26767 in k26764 in k26761 in k26758 in k26755 in k26752 in k26749 in k21827 in k18307 in k18304 in k18301 in k18298 in k17861 in k17858 in k17855 in k17852 in k17849 in k17327 in k17324 in k16801 in k16798 in k16795 in k16792 in k16789 in k16786 in k16783 in k16780 in k16777 in k16774 in k16771 in k16768 in k16765 in k16762 in k16759 in k16756 in k16753 in k16750 in k16747 in k16744 in k16741 in k16602 in k16599 in k16596 in k16593 in k16537 in k16534 in k16531 in k16528 in k16525 in k16522 in k16519 in k16516 in k15271 in k15202 in k15009 in k15006 in k14901 in k14850 in k7607 in k7604 in k5838 in k5545 in k5542 in k5538 in k5247 in k5244 in k5241 in k5238 */
static void C_ccall f_27888(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word ab[20],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_27888,2,t0,t1);}
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_27892,a[2]=((C_word*)t0)[4],a[3]=((C_word*)t0)[5],tmp=(C_word)a,a+=4,tmp);
t4=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_27896,a[2]=((C_word*)t0)[5],a[3]=t3,tmp=(C_word)a,a+=4,tmp);
t5=(C_word)C_eqp(((C_word*)t0)[3],lf[653]);
if(C_truep(t5)){
t6=t4;
f_27896(t6,C_SCHEME_END_OF_LIST);}
else{
t6=(C_word)C_a_i_list(&a,3,lf[14],((C_word*)t0)[2],((C_word*)t0)[3]);
t7=t4;
f_27896(t7,(C_word)C_a_i_list(&a,1,t6));}}

/* k27894 in k27886 in k27882 in k27878 in k27869 in do5160 in k27571 in k27568 in a28015 in k26910 in k26907 in k26904 in k26779 in k26776 in k26773 in k26770 in k26767 in k26764 in k26761 in k26758 in k26755 in k26752 in k26749 in k21827 in k18307 in k18304 in k18301 in k18298 in k17861 in k17858 in k17855 in k17852 in k17849 in k17327 in k17324 in k16801 in k16798 in k16795 in k16792 in k16789 in k16786 in k16783 in k16780 in k16777 in k16774 in k16771 in k16768 in k16765 in k16762 in k16759 in k16756 in k16753 in k16750 in k16747 in k16744 in k16741 in k16602 in k16599 in k16596 in k16593 in k16537 in k16534 in k16531 in k16528 in k16525 in k16522 in k16519 in k16516 in k15271 in k15202 in k15009 in k15006 in k14901 in k14850 in k7607 in k7604 in k5838 in k5545 in k5542 in k5538 in k5247 in k5244 in k5241 in k5238 */
static void C_fcall f_27896(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 568  append");
t2=*((C_word*)lf[20]+1);
((C_proc4)C_retrieve_proc(t2))(4,t2,((C_word*)t0)[3],((C_word*)((C_word*)t0)[2])[1],t1);}

/* k27890 in k27886 in k27882 in k27878 in k27869 in do5160 in k27571 in k27568 in a28015 in k26910 in k26907 in k26904 in k26779 in k26776 in k26773 in k26770 in k26767 in k26764 in k26761 in k26758 in k26755 in k26752 in k26749 in k21827 in k18307 in k18304 in k18301 in k18298 in k17861 in k17858 in k17855 in k17852 in k17849 in k17327 in k17324 in k16801 in k16798 in k16795 in k16792 in k16789 in k16786 in k16783 in k16780 in k16777 in k16774 in k16771 in k16768 in k16765 in k16762 in k16759 in k16756 in k16753 in k16750 in k16747 in k16744 in k16741 in k16602 in k16599 in k16596 in k16593 in k16537 in k16534 in k16531 in k16528 in k16525 in k16522 in k16519 in k16516 in k15271 in k15202 in k15009 in k15006 in k14901 in k14850 in k7607 in k7604 in k5838 in k5545 in k5542 in k5538 in k5247 in k5244 in k5241 in k5238 */
static void C_ccall f_27892(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[3])+1,t1);
t3=((C_word*)t0)[2];
f_27861(2,t3,t2);}

/* k27859 in do5160 in k27571 in k27568 in a28015 in k26910 in k26907 in k26904 in k26779 in k26776 in k26773 in k26770 in k26767 in k26764 in k26761 in k26758 in k26755 in k26752 in k26749 in k21827 in k18307 in k18304 in k18301 in k18298 in k17861 in k17858 in k17855 in k17852 in k17849 in k17327 in k17324 in k16801 in k16798 in k16795 in k16792 in k16789 in k16786 in k16783 in k16780 in k16777 in k16774 in k16771 in k16768 in k16765 in k16762 in k16759 in k16756 in k16753 in k16750 in k16747 in k16744 in k16741 in k16602 in k16599 in k16596 in k16593 in k16537 in k16534 in k16531 in k16528 in k16525 in k16522 in k16519 in k16516 in k15271 in k15202 in k15009 in k15006 in k14901 in k14850 in k7607 in k7604 in k5838 in k5545 in k5542 in k5538 in k5247 in k5244 in k5241 in k5238 */
static void C_ccall f_27861(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word *a;
t2=(C_word)C_i_cdr(((C_word*)t0)[4]);
t3=((C_word*)((C_word*)t0)[3])[1];
f_27851(t3,((C_word*)t0)[2],t2);}

/* k27574 in k27571 in k27568 in a28015 in k26910 in k26907 in k26904 in k26779 in k26776 in k26773 in k26770 in k26767 in k26764 in k26761 in k26758 in k26755 in k26752 in k26749 in k21827 in k18307 in k18304 in k18301 in k18298 in k17861 in k17858 in k17855 in k17852 in k17849 in k17327 in k17324 in k16801 in k16798 in k16795 in k16792 in k16789 in k16786 in k16783 in k16780 in k16777 in k16774 in k16771 in k16768 in k16765 in k16762 in k16759 in k16756 in k16753 in k16750 in k16747 in k16744 in k16741 in k16602 in k16599 in k16596 in k16593 in k16537 in k16534 in k16531 in k16528 in k16525 in k16522 in k16519 in k16516 in k15271 in k15202 in k15009 in k15006 in k14901 in k14850 in k7607 in k7604 in k5838 in k5545 in k5542 in k5538 in k5247 in k5244 in k5241 in k5238 */
static void C_ccall f_27576(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[8],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_27576,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_27579,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],a[7]=((C_word*)t0)[7],tmp=(C_word)a,a+=8,tmp);
C_trace("ChickenBridge.scm: 573  gensym");
t3=C_retrieve(lf[28]);
((C_proc2)C_retrieve_proc(t3))(2,t3,t2);}

/* k27577 in k27574 in k27571 in k27568 in a28015 in k26910 in k26907 in k26904 in k26779 in k26776 in k26773 in k26770 in k26767 in k26764 in k26761 in k26758 in k26755 in k26752 in k26749 in k21827 in k18307 in k18304 in k18301 in k18298 in k17861 in k17858 in k17855 in k17852 in k17849 in k17327 in k17324 in k16801 in k16798 in k16795 in k16792 in k16789 in k16786 in k16783 in k16780 in k16777 in k16774 in k16771 in k16768 in k16765 in k16762 in k16759 in k16756 in k16753 in k16750 in k16747 in k16744 in k16741 in k16602 in k16599 in k16596 in k16593 in k16537 in k16534 in k16531 in k16528 in k16525 in k16522 in k16519 in k16516 in k15271 in k15202 in k15009 in k15006 in k14901 in k14850 in k7607 in k7604 in k5838 in k5545 in k5542 in k5538 in k5247 in k5244 in k5241 in k5238 */
static void C_ccall f_27579(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_27579,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|8,a[1]=(C_word)f_27582,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],a[7]=t1,a[8]=((C_word*)t0)[7],tmp=(C_word)a,a+=9,tmp);
C_trace("ChickenBridge.scm: 574  gensym");
t3=C_retrieve(lf[28]);
((C_proc2)C_retrieve_proc(t3))(2,t3,t2);}

/* k27580 in k27577 in k27574 in k27571 in k27568 in a28015 in k26910 in k26907 in k26904 in k26779 in k26776 in k26773 in k26770 in k26767 in k26764 in k26761 in k26758 in k26755 in k26752 in k26749 in k21827 in k18307 in k18304 in k18301 in k18298 in k17861 in k17858 in k17855 in k17852 in k17849 in k17327 in k17324 in k16801 in k16798 in k16795 in k16792 in k16789 in k16786 in k16783 in k16780 in k16777 in k16774 in k16771 in k16768 in k16765 in k16762 in k16759 in k16756 in k16753 in k16750 in k16747 in k16744 in k16741 in k16602 in k16599 in k16596 in k16593 in k16537 in k16534 in k16531 in k16528 in k16525 in k16522 in k16519 in k16516 in k15271 in k15202 in k15009 in k15006 in k14901 in k14850 in k7607 in k7604 in k5838 in k5545 in k5542 in k5538 in k5247 in k5244 in k5241 in k5238 */
static void C_ccall f_27582(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[10],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_27582,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|9,a[1]=(C_word)f_27585,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],a[7]=t1,a[8]=((C_word*)t0)[7],a[9]=((C_word*)t0)[8],tmp=(C_word)a,a+=10,tmp);
C_trace("ChickenBridge.scm: 575  gensym");
t3=C_retrieve(lf[28]);
((C_proc2)C_retrieve_proc(t3))(2,t3,t2);}

/* k27583 in k27580 in k27577 in k27574 in k27571 in k27568 in a28015 in k26910 in k26907 in k26904 in k26779 in k26776 in k26773 in k26770 in k26767 in k26764 in k26761 in k26758 in k26755 in k26752 in k26749 in k21827 in k18307 in k18304 in k18301 in k18298 in k17861 in k17858 in k17855 in k17852 in k17849 in k17327 in k17324 in k16801 in k16798 in k16795 in k16792 in k16789 in k16786 in k16783 in k16780 in k16777 in k16774 in k16771 in k16768 in k16765 in k16762 in k16759 in k16756 in k16753 in k16750 in k16747 in k16744 in k16741 in k16602 in k16599 in k16596 in k16593 in k16537 in k16534 in k16531 in k16528 in k16525 in k16522 in k16519 in k16516 in k15271 in k15202 in k15009 in k15006 in k14901 in k14850 in k7607 in k7604 in k5838 in k5545 in k5542 in k5538 in k5247 in k5244 in k5241 in k5238 */
static void C_ccall f_27585(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[11],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_27585,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|10,a[1]=(C_word)f_27588,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=t1,a[5]=((C_word*)t0)[4],a[6]=((C_word*)t0)[5],a[7]=((C_word*)t0)[6],a[8]=((C_word*)t0)[7],a[9]=((C_word*)t0)[8],a[10]=((C_word*)t0)[9],tmp=(C_word)a,a+=11,tmp);
C_trace("ChickenBridge.scm: 576  gensym");
t3=C_retrieve(lf[28]);
((C_proc2)C_retrieve_proc(t3))(2,t3,t2);}

/* k27586 in k27583 in k27580 in k27577 in k27574 in k27571 in k27568 in a28015 in k26910 in k26907 in k26904 in k26779 in k26776 in k26773 in k26770 in k26767 in k26764 in k26761 in k26758 in k26755 in k26752 in k26749 in k21827 in k18307 in k18304 in k18301 in k18298 in k17861 in k17858 in k17855 in k17852 in k17849 in k17327 in k17324 in k16801 in k16798 in k16795 in k16792 in k16789 in k16786 in k16783 in k16780 in k16777 in k16774 in k16771 in k16768 in k16765 in k16762 in k16759 in k16756 in k16753 in k16750 in k16747 in k16744 in k16741 in k16602 in k16599 in k16596 in k16593 in k16537 in k16534 in k16531 in k16528 in k16525 in k16522 in k16519 in k16516 in k15271 in k15202 in k15009 in k15006 in k14901 in k14850 in k7607 in k7604 in k5838 in k5545 in k5542 in k5538 in k5247 in k5244 in k5241 in k5238 */
static void C_ccall f_27588(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word ab[26],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_27588,2,t0,t1);}
t2=C_SCHEME_TRUE;
t3=(*a=C_VECTOR_TYPE|1,a[1]=t2,tmp=(C_word)a,a+=2,tmp);
t4=C_SCHEME_END_OF_LIST;
t5=(*a=C_VECTOR_TYPE|1,a[1]=t4,tmp=(C_word)a,a+=2,tmp);
t6=(*a=C_CLOSURE_TYPE|13,a[1]=(C_word)f_27591,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=t1,a[6]=t3,a[7]=((C_word*)t0)[5],a[8]=((C_word*)t0)[6],a[9]=((C_word*)t0)[7],a[10]=((C_word*)t0)[8],a[11]=((C_word*)t0)[9],a[12]=t5,a[13]=((C_word*)t0)[10],tmp=(C_word)a,a+=14,tmp);
t7=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_27744,a[2]=t6,a[3]=t3,a[4]=((C_word*)t0)[3],tmp=(C_word)a,a+=5,tmp);
if(C_truep((C_word)C_i_pairp(((C_word*)((C_word*)t0)[3])[1]))){
t8=(C_word)C_i_car(((C_word*)((C_word*)t0)[3])[1]);
if(C_truep((C_word)C_i_pairp(t8))){
t9=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_27845,a[2]=t7,tmp=(C_word)a,a+=3,tmp);
C_trace("ChickenBridge.scm: 582  caar");
t10=*((C_word*)lf[650]+1);
((C_proc3)C_retrieve_proc(t10))(3,t10,t9,((C_word*)((C_word*)t0)[3])[1]);}
else{
t9=t7;
f_27744(t9,C_SCHEME_FALSE);}}
else{
t8=t7;
f_27744(t8,C_SCHEME_FALSE);}}

/* k27843 in k27586 in k27583 in k27580 in k27577 in k27574 in k27571 in k27568 in a28015 in k26910 in k26907 in k26904 in k26779 in k26776 in k26773 in k26770 in k26767 in k26764 in k26761 in k26758 in k26755 in k26752 in k26749 in k21827 in k18307 in k18304 in k18301 in k18298 in k17861 in k17858 in k17855 in k17852 in k17849 in k17327 in k17324 in k16801 in k16798 in k16795 in k16792 in k16789 in k16786 in k16783 in k16780 in k16777 in k16774 in k16771 in k16768 in k16765 in k16762 in k16759 in k16756 in k16753 in k16750 in k16747 in k16744 in k16741 in k16602 in k16599 in k16596 in k16593 in k16537 in k16534 in k16531 in k16528 in k16525 in k16522 in k16519 in k16516 in k15271 in k15202 in k15009 in k15006 in k14901 in k14850 in k7607 in k7604 in k5838 in k5545 in k5542 in k5538 in k5247 in k5244 in k5241 in k5238 */
static void C_ccall f_27845(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
t2=((C_word*)t0)[2];
f_27744(t2,(C_word)C_eqp(t1,lf[652]));}

/* k27742 in k27586 in k27583 in k27580 in k27577 in k27574 in k27571 in k27568 in a28015 in k26910 in k26907 in k26904 in k26779 in k26776 in k26773 in k26770 in k26767 in k26764 in k26761 in k26758 in k26755 in k26752 in k26749 in k21827 in k18307 in k18304 in k18301 in k18298 in k17861 in k17858 in k17855 in k17852 in k17849 in k17327 in k17324 in k16801 in k16798 in k16795 in k16792 in k16789 in k16786 in k16783 in k16780 in k16777 in k16774 in k16771 in k16768 in k16765 in k16762 in k16759 in k16756 in k16753 in k16750 in k16747 in k16744 in k16741 in k16602 in k16599 in k16596 in k16593 in k16537 in k16534 in k16531 in k16528 in k16525 in k16522 in k16519 in k16516 in k15271 in k15202 in k15009 in k15006 in k14901 in k14850 in k7607 in k7604 in k5838 in k5545 in k5542 in k5538 in k5247 in k5244 in k5241 in k5238 */
static void C_fcall f_27744(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[5],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_27744,NULL,2,t0,t1);}
if(C_truep(t1)){
t2=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_27751,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],tmp=(C_word)a,a+=5,tmp);
C_trace("ChickenBridge.scm: 583  cdar");
t3=*((C_word*)lf[648]+1);
((C_proc3)C_retrieve_proc(t3))(3,t3,t2,((C_word*)((C_word*)t0)[4])[1]);}
else{
t2=((C_word*)t0)[2];
f_27591(2,t2,C_SCHEME_UNDEFINED);}}

/* k27749 in k27742 in k27586 in k27583 in k27580 in k27577 in k27574 in k27571 in k27568 in a28015 in k26910 in k26907 in k26904 in k26779 in k26776 in k26773 in k26770 in k26767 in k26764 in k26761 in k26758 in k26755 in k26752 in k26749 in k21827 in k18307 in k18304 in k18301 in k18298 in k17861 in k17858 in k17855 in k17852 in k17849 in k17327 in k17324 in k16801 in k16798 in k16795 in k16792 in k16789 in k16786 in k16783 in k16780 in k16777 in k16774 in k16771 in k16768 in k16765 in k16762 in k16759 in k16756 in k16753 in k16750 in k16747 in k16744 in k16741 in k16602 in k16599 in k16596 in k16593 in k16537 in k16534 in k16531 in k16528 in k16525 in k16522 in k16519 in k16516 in k15271 in k15202 in k15009 in k15006 in k14901 in k14850 in k7607 in k7604 in k5838 in k5545 in k5542 in k5538 in k5247 in k5244 in k5241 in k5238 */
static void C_ccall f_27751(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[8],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_27751,2,t0,t1);}
t2=C_SCHEME_UNDEFINED;
t3=(*a=C_VECTOR_TYPE|1,a[1]=t2,tmp=(C_word)a,a+=2,tmp);
t4=C_set_block_item(t3,0,(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_27753,a[2]=((C_word*)t0)[3],a[3]=t3,a[4]=((C_word*)t0)[4],a[5]=((C_word)li444),tmp=(C_word)a,a+=6,tmp));
t5=((C_word*)t3)[1];
f_27753(t5,((C_word*)t0)[2],t1);}

/* do5176 in k27749 in k27742 in k27586 in k27583 in k27580 in k27577 in k27574 in k27571 in k27568 in a28015 in k26910 in k26907 in k26904 in k26779 in k26776 in k26773 in k26770 in k26767 in k26764 in k26761 in k26758 in k26755 in k26752 in k26749 in k21827 in k18307 in k18304 in k18301 in k18298 in k17861 in k17858 in k17855 in k17852 in k17849 in k17327 in k17324 in k16801 in k16798 in k16795 in k16792 in k16789 in k16786 in k16783 in k16780 in k16777 in k16774 in k16771 in k16768 in k16765 in k16762 in k16759 in k16756 in k16753 in k16750 in k16747 in k16744 in k16741 in k16602 in k16599 in k16596 in k16593 in k16537 in k16534 in k16531 in k16528 in k16525 in k16522 in k16519 in k16516 in k15271 in k15202 in k15009 in k15006 in k14901 in k14850 in k7607 in k7604 in k5838 in k5545 in k5542 in k5538 in k5247 in k5244 in k5241 in k5238 */
static void C_fcall f_27753(C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word ab[13],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_27753,NULL,3,t0,t1,t2);}
if(C_truep((C_word)C_i_nullp(t2))){
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
t4=C_mutate(((C_word *)((C_word*)t0)[4])+1,t3);
t5=t1;
((C_proc2)(void*)(*((C_word*)t5+1)))(2,t5,t4);}
else{
t3=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_27767,a[2]=t1,a[3]=((C_word*)t0)[3],a[4]=t2,tmp=(C_word)a,a+=5,tmp);
t4=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_27777,a[2]=t2,a[3]=((C_word*)t0)[2],a[4]=t3,tmp=(C_word)a,a+=5,tmp);
t5=(C_word)C_i_car(t2);
if(C_truep((C_word)C_i_pairp(t5))){
t6=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_27825,a[2]=t4,tmp=(C_word)a,a+=3,tmp);
C_trace("ChickenBridge.scm: 587  cdar");
t7=*((C_word*)lf[648]+1);
((C_proc3)C_retrieve_proc(t7))(3,t7,t6,t2);}
else{
t6=t4;
f_27777(t6,C_SCHEME_FALSE);}}}

/* k27823 in do5176 in k27749 in k27742 in k27586 in k27583 in k27580 in k27577 in k27574 in k27571 in k27568 in a28015 in k26910 in k26907 in k26904 in k26779 in k26776 in k26773 in k26770 in k26767 in k26764 in k26761 in k26758 in k26755 in k26752 in k26749 in k21827 in k18307 in k18304 in k18301 in k18298 in k17861 in k17858 in k17855 in k17852 in k17849 in k17327 in k17324 in k16801 in k16798 in k16795 in k16792 in k16789 in k16786 in k16783 in k16780 in k16777 in k16774 in k16771 in k16768 in k16765 in k16762 in k16759 in k16756 in k16753 in k16750 in k16747 in k16744 in k16741 in k16602 in k16599 in k16596 in k16593 in k16537 in k16534 in k16531 in k16528 in k16525 in k16522 in k16519 in k16516 in k15271 in k15202 in k15009 in k15006 in k14901 in k14850 in k7607 in k7604 in k5838 in k5545 in k5542 in k5538 in k5247 in k5244 in k5241 in k5238 */
static void C_ccall f_27825(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
t2=((C_word*)t0)[2];
f_27777(t2,(C_word)C_i_pairp(t1));}

/* k27775 in do5176 in k27749 in k27742 in k27586 in k27583 in k27580 in k27577 in k27574 in k27571 in k27568 in a28015 in k26910 in k26907 in k26904 in k26779 in k26776 in k26773 in k26770 in k26767 in k26764 in k26761 in k26758 in k26755 in k26752 in k26749 in k21827 in k18307 in k18304 in k18301 in k18298 in k17861 in k17858 in k17855 in k17852 in k17849 in k17327 in k17324 in k16801 in k16798 in k16795 in k16792 in k16789 in k16786 in k16783 in k16780 in k16777 in k16774 in k16771 in k16768 in k16765 in k16762 in k16759 in k16756 in k16753 in k16750 in k16747 in k16744 in k16741 in k16602 in k16599 in k16596 in k16593 in k16537 in k16534 in k16531 in k16528 in k16525 in k16522 in k16519 in k16516 in k15271 in k15202 in k15009 in k15006 in k14901 in k14850 in k7607 in k7604 in k5838 in k5545 in k5542 in k5538 in k5247 in k5244 in k5241 in k5238 */
static void C_fcall f_27777(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[5],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_27777,NULL,2,t0,t1);}
if(C_truep(t1)){
t2=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_27780,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],tmp=(C_word)a,a+=5,tmp);
C_trace("ChickenBridge.scm: 588  caar");
t3=*((C_word*)lf[650]+1);
((C_proc3)C_retrieve_proc(t3))(3,t3,t2,((C_word*)t0)[2]);}
else{
t2=(C_word)C_i_car(((C_word*)t0)[2]);
C_trace("ChickenBridge.scm: 594  error");
t3=*((C_word*)lf[6]+1);
((C_proc4)C_retrieve_proc(t3))(4,t3,((C_word*)t0)[4],lf[651],t2);}}

/* k27778 in k27775 in do5176 in k27749 in k27742 in k27586 in k27583 in k27580 in k27577 in k27574 in k27571 in k27568 in a28015 in k26910 in k26907 in k26904 in k26779 in k26776 in k26773 in k26770 in k26767 in k26764 in k26761 in k26758 in k26755 in k26752 in k26749 in k21827 in k18307 in k18304 in k18301 in k18298 in k17861 in k17858 in k17855 in k17852 in k17849 in k17327 in k17324 in k16801 in k16798 in k16795 in k16792 in k16789 in k16786 in k16783 in k16780 in k16777 in k16774 in k16771 in k16768 in k16765 in k16762 in k16759 in k16756 in k16753 in k16750 in k16747 in k16744 in k16741 in k16602 in k16599 in k16596 in k16593 in k16537 in k16534 in k16531 in k16528 in k16525 in k16522 in k16519 in k16516 in k15271 in k15202 in k15009 in k15006 in k14901 in k14850 in k7607 in k7604 in k5838 in k5545 in k5542 in k5538 in k5247 in k5244 in k5241 in k5238 */
static void C_ccall f_27780(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[4],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_27780,2,t0,t1);}
t2=(C_word)C_eqp(t1,lf[647]);
if(C_truep(t2)){
t3=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_27801,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 590  cdar");
t4=*((C_word*)lf[648]+1);
((C_proc3)C_retrieve_proc(t4))(3,t4,t3,((C_word*)t0)[2]);}
else{
t3=(C_word)C_i_car(((C_word*)t0)[2]);
C_trace("ChickenBridge.scm: 593  error");
t4=*((C_word*)lf[6]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,((C_word*)t0)[4],lf[649],t3);}}

/* k27799 in k27778 in k27775 in do5176 in k27749 in k27742 in k27586 in k27583 in k27580 in k27577 in k27574 in k27571 in k27568 in a28015 in k26910 in k26907 in k26904 in k26779 in k26776 in k26773 in k26770 in k26767 in k26764 in k26761 in k26758 in k26755 in k26752 in k26749 in k21827 in k18307 in k18304 in k18301 in k18298 in k17861 in k17858 in k17855 in k17852 in k17849 in k17327 in k17324 in k16801 in k16798 in k16795 in k16792 in k16789 in k16786 in k16783 in k16780 in k16777 in k16774 in k16771 in k16768 in k16765 in k16762 in k16759 in k16756 in k16753 in k16750 in k16747 in k16744 in k16741 in k16602 in k16599 in k16596 in k16593 in k16537 in k16534 in k16531 in k16528 in k16525 in k16522 in k16519 in k16516 in k15271 in k15202 in k15009 in k15006 in k14901 in k14850 in k7607 in k7604 in k5838 in k5545 in k5542 in k5538 in k5247 in k5244 in k5241 in k5238 */
static void C_ccall f_27801(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word *a;
if(C_truep((C_word)C_i_car(t1))){
t2=((C_word*)t0)[3];
f_27767(2,t2,C_SCHEME_UNDEFINED);}
else{
t2=C_set_block_item(((C_word*)t0)[2],0,C_SCHEME_FALSE);
t3=((C_word*)t0)[3];
f_27767(2,t3,t2);}}

/* k27765 in do5176 in k27749 in k27742 in k27586 in k27583 in k27580 in k27577 in k27574 in k27571 in k27568 in a28015 in k26910 in k26907 in k26904 in k26779 in k26776 in k26773 in k26770 in k26767 in k26764 in k26761 in k26758 in k26755 in k26752 in k26749 in k21827 in k18307 in k18304 in k18301 in k18298 in k17861 in k17858 in k17855 in k17852 in k17849 in k17327 in k17324 in k16801 in k16798 in k16795 in k16792 in k16789 in k16786 in k16783 in k16780 in k16777 in k16774 in k16771 in k16768 in k16765 in k16762 in k16759 in k16756 in k16753 in k16750 in k16747 in k16744 in k16741 in k16602 in k16599 in k16596 in k16593 in k16537 in k16534 in k16531 in k16528 in k16525 in k16522 in k16519 in k16516 in k15271 in k15202 in k15009 in k15006 in k14901 in k14850 in k7607 in k7604 in k5838 in k5545 in k5542 in k5538 in k5247 in k5244 in k5241 in k5238 */
static void C_ccall f_27767(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word *a;
t2=(C_word)C_i_cdr(((C_word*)t0)[4]);
t3=((C_word*)((C_word*)t0)[3])[1];
f_27753(t3,((C_word*)t0)[2],t2);}

/* k27589 in k27586 in k27583 in k27580 in k27577 in k27574 in k27571 in k27568 in a28015 in k26910 in k26907 in k26904 in k26779 in k26776 in k26773 in k26770 in k26767 in k26764 in k26761 in k26758 in k26755 in k26752 in k26749 in k21827 in k18307 in k18304 in k18301 in k18298 in k17861 in k17858 in k17855 in k17852 in k17849 in k17327 in k17324 in k16801 in k16798 in k16795 in k16792 in k16789 in k16786 in k16783 in k16780 in k16777 in k16774 in k16771 in k16768 in k16765 in k16762 in k16759 in k16756 in k16753 in k16750 in k16747 in k16744 in k16741 in k16602 in k16599 in k16596 in k16593 in k16537 in k16534 in k16531 in k16528 in k16525 in k16522 in k16519 in k16516 in k15271 in k15202 in k15009 in k15006 in k14901 in k14850 in k7607 in k7604 in k5838 in k5545 in k5542 in k5538 in k5247 in k5244 in k5241 in k5238 */
static void C_ccall f_27591(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[17],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_27591,2,t0,t1);}
t2=(C_word)C_i_car(((C_word*)t0)[13]);
t3=(*a=C_CLOSURE_TYPE|13,a[1]=(C_word)f_27733,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],a[7]=((C_word*)t0)[7],a[8]=((C_word*)t0)[8],a[9]=((C_word*)t0)[9],a[10]=((C_word*)t0)[10],a[11]=((C_word*)t0)[11],a[12]=((C_word*)t0)[12],a[13]=t2,tmp=(C_word)a,a+=14,tmp);
t4=(C_word)C_i_cdr(((C_word*)t0)[13]);
t5=(C_word)C_a_i_list(&a,1,C_fix(-1));
C_trace("ChickenBridge.scm: 545  ##sys#append");
t6=*((C_word*)lf[9]+1);
((C_proc4)(void*)(*((C_word*)t6+1)))(4,t6,t3,t4,t5);}

/* k27731 in k27589 in k27586 in k27583 in k27580 in k27577 in k27574 in k27571 in k27568 in a28015 in k26910 in k26907 in k26904 in k26779 in k26776 in k26773 in k26770 in k26767 in k26764 in k26761 in k26758 in k26755 in k26752 in k26749 in k21827 in k18307 in k18304 in k18301 in k18298 in k17861 in k17858 in k17855 in k17852 in k17849 in k17327 in k17324 in k16801 in k16798 in k16795 in k16792 in k16789 in k16786 in k16783 in k16780 in k16777 in k16774 in k16771 in k16768 in k16765 in k16762 in k16759 in k16756 in k16753 in k16750 in k16747 in k16744 in k16741 in k16602 in k16599 in k16596 in k16593 in k16537 in k16534 in k16531 in k16528 in k16525 in k16522 in k16519 in k16516 in k15271 in k15202 in k15009 in k15006 in k14901 in k14850 in k7607 in k7604 in k5838 in k5545 in k5542 in k5538 in k5247 in k5244 in k5241 in k5238 */
static void C_ccall f_27733(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[22],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_27733,2,t0,t1);}
t2=(C_word)C_a_i_cons(&a,2,((C_word*)t0)[13],t1);
t3=(*a=C_CLOSURE_TYPE|11,a[1]=(C_word)f_27717,a[2]=((C_word*)t0)[4],a[3]=((C_word*)t0)[5],a[4]=((C_word*)t0)[6],a[5]=((C_word*)t0)[7],a[6]=((C_word*)t0)[8],a[7]=((C_word*)t0)[9],a[8]=((C_word*)t0)[10],a[9]=((C_word*)t0)[11],a[10]=((C_word*)t0)[12],a[11]=t2,tmp=(C_word)a,a+=12,tmp);
t4=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_27721,a[2]=((C_word*)t0)[3],a[3]=t3,tmp=(C_word)a,a+=4,tmp);
t5=(C_word)C_a_i_list(&a,1,((C_word*)t0)[10]);
C_trace("ChickenBridge.scm: 545  ##sys#append");
t6=*((C_word*)lf[9]+1);
((C_proc4)(void*)(*((C_word*)t6+1)))(4,t6,t4,((C_word*)((C_word*)t0)[2])[1],t5);}

/* k27719 in k27731 in k27589 in k27586 in k27583 in k27580 in k27577 in k27574 in k27571 in k27568 in a28015 in k26910 in k26907 in k26904 in k26779 in k26776 in k26773 in k26770 in k26767 in k26764 in k26761 in k26758 in k26755 in k26752 in k26749 in k21827 in k18307 in k18304 in k18301 in k18298 in k17861 in k17858 in k17855 in k17852 in k17849 in k17327 in k17324 in k16801 in k16798 in k16795 in k16792 in k16789 in k16786 in k16783 in k16780 in k16777 in k16774 in k16771 in k16768 in k16765 in k16762 in k16759 in k16756 in k16753 in k16750 in k16747 in k16744 in k16741 in k16602 in k16599 in k16596 in k16593 in k16537 in k16534 in k16531 in k16528 in k16525 in k16522 in k16519 in k16516 in k15271 in k15202 in k15009 in k15006 in k14901 in k14850 in k7607 in k7604 in k5838 in k5545 in k5542 in k5538 in k5247 in k5244 in k5241 in k5238 */
static void C_ccall f_27721(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 545  ##sys#append");
t2=*((C_word*)lf[9]+1);
((C_proc4)(void*)(*((C_word*)t2+1)))(4,t2,((C_word*)t0)[3],((C_word*)((C_word*)t0)[2])[1],t1);}

/* k27715 in k27731 in k27589 in k27586 in k27583 in k27580 in k27577 in k27574 in k27571 in k27568 in a28015 in k26910 in k26907 in k26904 in k26779 in k26776 in k26773 in k26770 in k26767 in k26764 in k26761 in k26758 in k26755 in k26752 in k26749 in k21827 in k18307 in k18304 in k18301 in k18298 in k17861 in k17858 in k17855 in k17852 in k17849 in k17327 in k17324 in k16801 in k16798 in k16795 in k16792 in k16789 in k16786 in k16783 in k16780 in k16777 in k16774 in k16771 in k16768 in k16765 in k16762 in k16759 in k16756 in k16753 in k16750 in k16747 in k16744 in k16741 in k16602 in k16599 in k16596 in k16593 in k16537 in k16534 in k16531 in k16528 in k16525 in k16522 in k16519 in k16516 in k15271 in k15202 in k15009 in k15006 in k14901 in k14850 in k7607 in k7604 in k5838 in k5545 in k5542 in k5538 in k5247 in k5244 in k5241 in k5238 */
static void C_ccall f_27717(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word t14;
C_word t15;
C_word t16;
C_word t17;
C_word t18;
C_word t19;
C_word t20;
C_word t21;
C_word ab[122],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_27717,2,t0,t1);}
t2=(C_word)C_a_i_cons(&a,2,lf[18],t1);
t3=(C_word)C_a_i_list(&a,3,lf[641],((C_word*)t0)[11],t2);
t4=C_mutate(((C_word *)((C_word*)t0)[10])+1,t3);
t5=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_27598,a[2]=((C_word*)t0)[5],a[3]=((C_word*)t0)[6],a[4]=((C_word*)t0)[7],a[5]=((C_word*)t0)[10],a[6]=((C_word*)t0)[8],a[7]=((C_word*)t0)[9],tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)((C_word*)t0)[4])[1])){
t6=(C_word)C_a_i_list(&a,1,((C_word*)t0)[3]);
t7=(C_word)C_a_i_list(&a,1,((C_word*)t0)[2]);
t8=(C_word)C_a_i_list(&a,2,lf[446],lf[605]);
t9=(C_word)C_a_i_list(&a,2,lf[446],lf[606]);
t10=(C_word)C_a_i_list(&a,3,lf[604],t8,t9);
t11=(C_word)C_a_i_list(&a,2,t10,((C_word*)t0)[2]);
t12=(C_word)C_a_i_list(&a,4,lf[33],lf[646],t11,((C_word*)t0)[9]);
t13=(C_word)C_a_i_list(&a,2,lf[330],t12);
t14=(C_word)C_a_i_list(&a,2,((C_word*)t0)[3],C_fix(-2));
t15=(C_word)C_a_i_list(&a,4,lf[642],t7,t13,t14);
t16=(C_word)C_a_i_list(&a,3,lf[642],C_SCHEME_END_OF_LIST,((C_word*)((C_word*)t0)[10])[1]);
t17=(C_word)C_a_i_list(&a,3,lf[607],t15,t16);
t18=(C_word)C_a_i_list(&a,3,lf[642],t6,t17);
t19=(C_word)C_a_i_list(&a,2,lf[608],t18);
t20=C_mutate(((C_word *)((C_word*)t0)[10])+1,t19);
t21=t5;
f_27598(t21,t20);}
else{
t6=t5;
f_27598(t6,C_SCHEME_UNDEFINED);}}

/* k27596 in k27715 in k27731 in k27589 in k27586 in k27583 in k27580 in k27577 in k27574 in k27571 in k27568 in a28015 in k26910 in k26907 in k26904 in k26779 in k26776 in k26773 in k26770 in k26767 in k26764 in k26761 in k26758 in k26755 in k26752 in k26749 in k21827 in k18307 in k18304 in k18301 in k18298 in k17861 in k17858 in k17855 in k17852 in k17849 in k17327 in k17324 in k16801 in k16798 in k16795 in k16792 in k16789 in k16786 in k16783 in k16780 in k16777 in k16774 in k16771 in k16768 in k16765 in k16762 in k16759 in k16756 in k16753 in k16750 in k16747 in k16744 in k16741 in k16602 in k16599 in k16596 in k16593 in k16537 in k16534 in k16531 in k16528 in k16525 in k16522 in k16519 in k16516 in k15271 in k15202 in k15009 in k15006 in k14901 in k14850 in k7607 in k7604 in k5838 in k5545 in k5542 in k5538 in k5247 in k5244 in k5241 in k5238 */
static void C_fcall f_27598(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word t14;
C_word ab[90],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_27598,NULL,2,t0,t1);}
t2=(C_word)C_a_i_list(&a,1,((C_word*)t0)[7]);
t3=(C_word)C_a_i_list(&a,2,((C_word*)t0)[6],C_fix(0));
t4=(C_word)C_a_i_list(&a,3,lf[642],C_SCHEME_END_OF_LIST,((C_word*)t0)[7]);
t5=(C_word)C_a_i_list(&a,2,lf[643],t4);
t6=(C_word)C_a_i_list(&a,1,lf[644]);
t7=(C_word)C_a_i_list(&a,3,lf[14],((C_word*)t0)[6],lf[644]);
t8=(C_word)C_a_i_list(&a,3,lf[642],t6,t7);
t9=(C_word)C_a_i_list(&a,2,lf[645],t8);
t10=(C_word)C_a_i_list(&a,3,t3,t5,t9);
t11=(C_word)C_a_i_list(&a,3,lf[4],t10,((C_word*)((C_word*)t0)[5])[1]);
t12=(C_word)C_a_i_list(&a,3,lf[642],t2,t11);
t13=(C_word)C_a_i_list(&a,3,lf[642],((C_word*)((C_word*)t0)[4])[1],t12);
t14=((C_word*)t0)[3];
((C_proc2)(void*)(*((C_word*)t14+1)))(2,t14,(C_word)C_a_i_cons(&a,2,t13,((C_word*)((C_word*)t0)[2])[1]));}

/* k27553 in k26910 in k26907 in k26904 in k26779 in k26776 in k26773 in k26770 in k26767 in k26764 in k26761 in k26758 in k26755 in k26752 in k26749 in k21827 in k18307 in k18304 in k18301 in k18298 in k17861 in k17858 in k17855 in k17852 in k17849 in k17327 in k17324 in k16801 in k16798 in k16795 in k16792 in k16789 in k16786 in k16783 in k16780 in k16777 in k16774 in k16771 in k16768 in k16765 in k16762 in k16759 in k16756 in k16753 in k16750 in k16747 in k16744 in k16741 in k16602 in k16599 in k16596 in k16593 in k16537 in k16534 in k16531 in k16528 in k16525 in k16522 in k16519 in k16516 in k15271 in k15202 in k15009 in k15006 in k14901 in k14850 in k7607 in k7604 in k5838 in k5545 in k5542 in k5538 in k5247 in k5244 in k5241 in k5238 */
static void C_ccall f_27555(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[3],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_27555,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_28014,a[2]=((C_word*)t0)[2],tmp=(C_word)a,a+=3,tmp);
C_trace("ChickenBridge.scm: 639  return-to-host");
t3=C_retrieve(lf[640]);
((C_proc2)C_retrieve_proc(t3))(2,t3,t2);}

/* k28012 in k27553 in k26910 in k26907 in k26904 in k26779 in k26776 in k26773 in k26770 in k26767 in k26764 in k26761 in k26758 in k26755 in k26752 in k26749 in k21827 in k18307 in k18304 in k18301 in k18298 in k17861 in k17858 in k17855 in k17852 in k17849 in k17327 in k17324 in k16801 in k16798 in k16795 in k16792 in k16789 in k16786 in k16783 in k16780 in k16777 in k16774 in k16771 in k16768 in k16765 in k16762 in k16759 in k16756 in k16753 in k16750 in k16747 in k16744 in k16741 in k16602 in k16599 in k16596 in k16593 in k16537 in k16534 in k16531 in k16528 in k16525 in k16522 in k16519 in k16516 in k15271 in k15202 in k15009 in k15006 in k14901 in k14850 in k7607 in k7604 in k5838 in k5545 in k5542 in k5538 in k5247 in k5244 in k5241 in k5238 */
static void C_ccall f_28014(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
t2=((C_word*)t0)[2];
((C_proc2)(void*)(*((C_word*)t2+1)))(2,t2,C_SCHEME_UNDEFINED);}

/* hush in k26910 in k26907 in k26904 in k26779 in k26776 in k26773 in k26770 in k26767 in k26764 in k26761 in k26758 in k26755 in k26752 in k26749 in k21827 in k18307 in k18304 in k18301 in k18298 in k17861 in k17858 in k17855 in k17852 in k17849 in k17327 in k17324 in k16801 in k16798 in k16795 in k16792 in k16789 in k16786 in k16783 in k16780 in k16777 in k16774 in k16771 in k16768 in k16765 in k16762 in k16759 in k16756 in k16753 in k16750 in k16747 in k16744 in k16741 in k16602 in k16599 in k16596 in k16593 in k16537 in k16534 in k16531 in k16528 in k16525 in k16522 in k16519 in k16516 in k15271 in k15202 in k15009 in k15006 in k14901 in k14850 in k7607 in k7604 in k5838 in k5545 in k5542 in k5538 in k5247 in k5244 in k5241 in k5238 */
static void C_ccall f_27545(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[6],*a=ab;
if(c!=2) C_bad_argc_2(c,2,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_27545,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_27549,a[2]=t1,tmp=(C_word)a,a+=3,tmp);
t3=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_27208,a[2]=t2,tmp=(C_word)a,a+=3,tmp);
C_trace("##sys#gc");
t4=C_retrieve(lf[623]);
((C_proc3)C_retrieve_proc(t4))(3,t4,t3,C_SCHEME_FALSE);}

/* k27206 in hush in k26910 in k26907 in k26904 in k26779 in k26776 in k26773 in k26770 in k26767 in k26764 in k26761 in k26758 in k26755 in k26752 in k26749 in k21827 in k18307 in k18304 in k18301 in k18298 in k17861 in k17858 in k17855 in k17852 in k17849 in k17327 in k17324 in k16801 in k16798 in k16795 in k16792 in k16789 in k16786 in k16783 in k16780 in k16777 in k16774 in k16771 in k16768 in k16765 in k16762 in k16759 in k16756 in k16753 in k16750 in k16747 in k16744 in k16741 in k16602 in k16599 in k16596 in k16593 in k16537 in k16534 in k16531 in k16528 in k16525 in k16522 in k16519 in k16516 in k15271 in k15202 in k15009 in k15006 in k14901 in k14850 in k7607 in k7604 in k5838 in k5545 in k5542 in k5538 in k5247 in k5244 in k5241 in k5238 */
static void C_ccall f_27208(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[11],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_27208,2,t0,t1);}
t2=(C_word)C_a_i_bytevector(&a,1,C_fix(6));
t3=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)stub5087,a[2]=((C_word)li442),tmp=(C_word)a,a+=3,tmp);
((C_proc3)C_retrieve_proc(t3))(3,t3,((C_word*)t0)[2],t2);}

/* k27547 in hush in k26910 in k26907 in k26904 in k26779 in k26776 in k26773 in k26770 in k26767 in k26764 in k26761 in k26758 in k26755 in k26752 in k26749 in k21827 in k18307 in k18304 in k18301 in k18298 in k17861 in k17858 in k17855 in k17852 in k17849 in k17327 in k17324 in k16801 in k16798 in k16795 in k16792 in k16789 in k16786 in k16783 in k16780 in k16777 in k16774 in k16771 in k16768 in k16765 in k16762 in k16759 in k16756 in k16753 in k16750 in k16747 in k16744 in k16741 in k16602 in k16599 in k16596 in k16593 in k16537 in k16534 in k16531 in k16528 in k16525 in k16522 in k16519 in k16516 in k15271 in k15202 in k15009 in k15006 in k14901 in k14850 in k7607 in k7604 in k5838 in k5545 in k5542 in k5538 in k5247 in k5244 in k5241 in k5238 */
static void C_ccall f_27549(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 535  values");
C_values(2,0,((C_word*)t0)[2]);}

/* stop in k26910 in k26907 in k26904 in k26779 in k26776 in k26773 in k26770 in k26767 in k26764 in k26761 in k26758 in k26755 in k26752 in k26749 in k21827 in k18307 in k18304 in k18301 in k18298 in k17861 in k17858 in k17855 in k17852 in k17849 in k17327 in k17324 in k16801 in k16798 in k16795 in k16792 in k16789 in k16786 in k16783 in k16780 in k16777 in k16774 in k16771 in k16768 in k16765 in k16762 in k16759 in k16756 in k16753 in k16750 in k16747 in k16744 in k16741 in k16602 in k16599 in k16596 in k16593 in k16537 in k16534 in k16531 in k16528 in k16525 in k16522 in k16519 in k16516 in k15271 in k15202 in k15009 in k15006 in k14901 in k14850 in k7607 in k7604 in k5838 in k5545 in k5542 in k5538 in k5247 in k5244 in k5241 in k5238 */
static void C_ccall f_27487(C_word c,C_word t0,C_word t1,...){
C_word tmp;
C_word t2;
va_list v;
C_word *a,c2=c;
C_save_rest(t1,c2,2);
C_check_for_interrupt;
if(!C_demand(c*C_SIZEOF_PAIR+9)){
C_save_and_reclaim((void*)tr2r,(void*)f_27487r,2,t0,t1);}
else{
a=C_alloc((c-2)*3);
t2=C_restore_rest(a,C_rest_count(0));
f_27487r(t0,t1,t2);}}

static void C_ccall f_27487r(C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a=C_alloc(9);
t3=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_27491,a[2]=t1,tmp=(C_word)a,a+=3,tmp);
if(C_truep((C_word)C_i_nullp(t2))){
C_trace("ChickenBridge.scm: 525  scheduler-stop");
f_27191(t3,C_fix(-1));}
else{
t4=C_SCHEME_UNDEFINED;
t5=(*a=C_VECTOR_TYPE|1,a[1]=t4,tmp=(C_word)a,a+=2,tmp);
t6=C_set_block_item(t5,0,(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_27505,a[2]=t5,a[3]=((C_word)li440),tmp=(C_word)a,a+=4,tmp));
t7=((C_word*)t5)[1];
f_27505(t7,t3,t2);}}

/* do5144 in stop in k26910 in k26907 in k26904 in k26779 in k26776 in k26773 in k26770 in k26767 in k26764 in k26761 in k26758 in k26755 in k26752 in k26749 in k21827 in k18307 in k18304 in k18301 in k18298 in k17861 in k17858 in k17855 in k17852 in k17849 in k17327 in k17324 in k16801 in k16798 in k16795 in k16792 in k16789 in k16786 in k16783 in k16780 in k16777 in k16774 in k16771 in k16768 in k16765 in k16762 in k16759 in k16756 in k16753 in k16750 in k16747 in k16744 in k16741 in k16602 in k16599 in k16596 in k16593 in k16537 in k16534 in k16531 in k16528 in k16525 in k16522 in k16519 in k16516 in k15271 in k15202 in k15009 in k15006 in k14901 in k14850 in k7607 in k7604 in k5838 in k5545 in k5542 in k5538 in k5247 in k5244 in k5241 in k5238 */
static void C_fcall f_27505(C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word ab[5],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_27505,NULL,3,t0,t1,t2);}
if(C_truep((C_word)C_i_nullp(t2))){
t3=t1;
((C_proc2)(void*)(*((C_word*)t3+1)))(2,t3,C_SCHEME_FALSE);}
else{
t3=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_27515,a[2]=t1,a[3]=((C_word*)t0)[2],a[4]=t2,tmp=(C_word)a,a+=5,tmp);
t4=(C_word)C_i_car(t2);
if(C_truep((C_word)C_fixnump(t4))){
t5=(C_word)C_i_car(t2);
C_trace("ChickenBridge.scm: 529  scheduler-stop");
f_27191(t3,t5);}
else{
t5=(C_word)C_i_car(t2);
C_trace("ChickenBridge.scm: 530  error");
t6=*((C_word*)lf[6]+1);
((C_proc4)C_retrieve_proc(t6))(4,t6,t3,lf[638],t5);}}}

/* k27513 in do5144 in stop in k26910 in k26907 in k26904 in k26779 in k26776 in k26773 in k26770 in k26767 in k26764 in k26761 in k26758 in k26755 in k26752 in k26749 in k21827 in k18307 in k18304 in k18301 in k18298 in k17861 in k17858 in k17855 in k17852 in k17849 in k17327 in k17324 in k16801 in k16798 in k16795 in k16792 in k16789 in k16786 in k16783 in k16780 in k16777 in k16774 in k16771 in k16768 in k16765 in k16762 in k16759 in k16756 in k16753 in k16750 in k16747 in k16744 in k16741 in k16602 in k16599 in k16596 in k16593 in k16537 in k16534 in k16531 in k16528 in k16525 in k16522 in k16519 in k16516 in k15271 in k15202 in k15009 in k15006 in k14901 in k14850 in k7607 in k7604 in k5838 in k5545 in k5542 in k5538 in k5247 in k5244 in k5241 in k5238 */
static void C_ccall f_27515(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word *a;
t2=(C_word)C_i_cdr(((C_word*)t0)[4]);
t3=((C_word*)((C_word*)t0)[3])[1];
f_27505(t3,((C_word*)t0)[2],t2);}

/* k27489 in stop in k26910 in k26907 in k26904 in k26779 in k26776 in k26773 in k26770 in k26767 in k26764 in k26761 in k26758 in k26755 in k26752 in k26749 in k21827 in k18307 in k18304 in k18301 in k18298 in k17861 in k17858 in k17855 in k17852 in k17849 in k17327 in k17324 in k16801 in k16798 in k16795 in k16792 in k16789 in k16786 in k16783 in k16780 in k16777 in k16774 in k16771 in k16768 in k16765 in k16762 in k16759 in k16756 in k16753 in k16750 in k16747 in k16744 in k16741 in k16602 in k16599 in k16596 in k16593 in k16537 in k16534 in k16531 in k16528 in k16525 in k16522 in k16519 in k16516 in k15271 in k15202 in k15009 in k15006 in k14901 in k14850 in k7607 in k7604 in k5838 in k5545 in k5542 in k5538 in k5247 in k5244 in k5241 in k5238 */
static void C_ccall f_27491(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 531  values");
C_values(2,0,((C_word*)t0)[2]);}

/* cont in k26910 in k26907 in k26904 in k26779 in k26776 in k26773 in k26770 in k26767 in k26764 in k26761 in k26758 in k26755 in k26752 in k26749 in k21827 in k18307 in k18304 in k18301 in k18298 in k17861 in k17858 in k17855 in k17852 in k17849 in k17327 in k17324 in k16801 in k16798 in k16795 in k16792 in k16789 in k16786 in k16783 in k16780 in k16777 in k16774 in k16771 in k16768 in k16765 in k16762 in k16759 in k16756 in k16753 in k16750 in k16747 in k16744 in k16741 in k16602 in k16599 in k16596 in k16593 in k16537 in k16534 in k16531 in k16528 in k16525 in k16522 in k16519 in k16516 in k15271 in k15202 in k15009 in k15006 in k14901 in k14850 in k7607 in k7604 in k5838 in k5545 in k5542 in k5538 in k5247 in k5244 in k5241 in k5238 */
static void C_ccall f_27478(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[6],*a=ab;
if(c!=2) C_bad_argc_2(c,2,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_27478,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_27482,a[2]=t1,tmp=(C_word)a,a+=3,tmp);
t3=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_27186,a[2]=t2,tmp=(C_word)a,a+=3,tmp);
C_trace("##sys#gc");
t4=C_retrieve(lf[623]);
((C_proc3)C_retrieve_proc(t4))(3,t4,t3,C_SCHEME_FALSE);}

/* k27184 in cont in k26910 in k26907 in k26904 in k26779 in k26776 in k26773 in k26770 in k26767 in k26764 in k26761 in k26758 in k26755 in k26752 in k26749 in k21827 in k18307 in k18304 in k18301 in k18298 in k17861 in k17858 in k17855 in k17852 in k17849 in k17327 in k17324 in k16801 in k16798 in k16795 in k16792 in k16789 in k16786 in k16783 in k16780 in k16777 in k16774 in k16771 in k16768 in k16765 in k16762 in k16759 in k16756 in k16753 in k16750 in k16747 in k16744 in k16741 in k16602 in k16599 in k16596 in k16593 in k16537 in k16534 in k16531 in k16528 in k16525 in k16522 in k16519 in k16516 in k15271 in k15202 in k15009 in k15006 in k14901 in k14850 in k7607 in k7604 in k5838 in k5545 in k5542 in k5538 in k5247 in k5244 in k5241 in k5238 */
static void C_ccall f_27186(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[11],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_27186,2,t0,t1);}
t2=(C_word)C_a_i_bytevector(&a,1,C_fix(6));
t3=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)stub5077,a[2]=((C_word)li438),tmp=(C_word)a,a+=3,tmp);
((C_proc3)C_retrieve_proc(t3))(3,t3,((C_word*)t0)[2],t2);}

/* k27480 in cont in k26910 in k26907 in k26904 in k26779 in k26776 in k26773 in k26770 in k26767 in k26764 in k26761 in k26758 in k26755 in k26752 in k26749 in k21827 in k18307 in k18304 in k18301 in k18298 in k17861 in k17858 in k17855 in k17852 in k17849 in k17327 in k17324 in k16801 in k16798 in k16795 in k16792 in k16789 in k16786 in k16783 in k16780 in k16777 in k16774 in k16771 in k16768 in k16765 in k16762 in k16759 in k16756 in k16753 in k16750 in k16747 in k16744 in k16741 in k16602 in k16599 in k16596 in k16593 in k16537 in k16534 in k16531 in k16528 in k16525 in k16522 in k16519 in k16516 in k15271 in k15202 in k15009 in k15006 in k14901 in k14850 in k7607 in k7604 in k5838 in k5545 in k5542 in k5538 in k5247 in k5244 in k5241 in k5238 */
static void C_ccall f_27482(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 521  values");
C_values(2,0,((C_word*)t0)[2]);}

/* paused? in k26910 in k26907 in k26904 in k26779 in k26776 in k26773 in k26770 in k26767 in k26764 in k26761 in k26758 in k26755 in k26752 in k26749 in k21827 in k18307 in k18304 in k18301 in k18298 in k17861 in k17858 in k17855 in k17852 in k17849 in k17327 in k17324 in k16801 in k16798 in k16795 in k16792 in k16789 in k16786 in k16783 in k16780 in k16777 in k16774 in k16771 in k16768 in k16765 in k16762 in k16759 in k16756 in k16753 in k16750 in k16747 in k16744 in k16741 in k16602 in k16599 in k16596 in k16593 in k16537 in k16534 in k16531 in k16528 in k16525 in k16522 in k16519 in k16516 in k15271 in k15202 in k15009 in k15006 in k14901 in k14850 in k7607 in k7604 in k5838 in k5545 in k5542 in k5538 in k5247 in k5244 in k5241 in k5238 */
static void C_ccall f_27472(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[3],*a=ab;
if(c!=2) C_bad_argc_2(c,2,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_27472,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_27168,a[2]=t1,tmp=(C_word)a,a+=3,tmp);
C_trace("##sys#gc");
t3=C_retrieve(lf[623]);
((C_proc3)C_retrieve_proc(t3))(3,t3,t2,C_SCHEME_FALSE);}

/* k27166 in paused? in k26910 in k26907 in k26904 in k26779 in k26776 in k26773 in k26770 in k26767 in k26764 in k26761 in k26758 in k26755 in k26752 in k26749 in k21827 in k18307 in k18304 in k18301 in k18298 in k17861 in k17858 in k17855 in k17852 in k17849 in k17327 in k17324 in k16801 in k16798 in k16795 in k16792 in k16789 in k16786 in k16783 in k16780 in k16777 in k16774 in k16771 in k16768 in k16765 in k16762 in k16759 in k16756 in k16753 in k16750 in k16747 in k16744 in k16741 in k16602 in k16599 in k16596 in k16593 in k16537 in k16534 in k16531 in k16528 in k16525 in k16522 in k16519 in k16516 in k15271 in k15202 in k15009 in k15006 in k14901 in k14850 in k7607 in k7604 in k5838 in k5545 in k5542 in k5538 in k5247 in k5244 in k5241 in k5238 */
static void C_ccall f_27168(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[11],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_27168,2,t0,t1);}
t2=(C_word)C_a_i_bytevector(&a,1,C_fix(6));
t3=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)stub5069,a[2]=((C_word)li436),tmp=(C_word)a,a+=3,tmp);
((C_proc3)C_retrieve_proc(t3))(3,t3,((C_word*)t0)[2],t2);}

/* pause in k26910 in k26907 in k26904 in k26779 in k26776 in k26773 in k26770 in k26767 in k26764 in k26761 in k26758 in k26755 in k26752 in k26749 in k21827 in k18307 in k18304 in k18301 in k18298 in k17861 in k17858 in k17855 in k17852 in k17849 in k17327 in k17324 in k16801 in k16798 in k16795 in k16792 in k16789 in k16786 in k16783 in k16780 in k16777 in k16774 in k16771 in k16768 in k16765 in k16762 in k16759 in k16756 in k16753 in k16750 in k16747 in k16744 in k16741 in k16602 in k16599 in k16596 in k16593 in k16537 in k16534 in k16531 in k16528 in k16525 in k16522 in k16519 in k16516 in k15271 in k15202 in k15009 in k15006 in k14901 in k14850 in k7607 in k7604 in k5838 in k5545 in k5542 in k5538 in k5247 in k5244 in k5241 in k5238 */
static void C_ccall f_27463(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[6],*a=ab;
if(c!=2) C_bad_argc_2(c,2,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_27463,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_27467,a[2]=t1,tmp=(C_word)a,a+=3,tmp);
t3=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_27177,a[2]=t2,tmp=(C_word)a,a+=3,tmp);
C_trace("##sys#gc");
t4=C_retrieve(lf[623]);
((C_proc3)C_retrieve_proc(t4))(3,t4,t3,C_SCHEME_FALSE);}

/* k27175 in pause in k26910 in k26907 in k26904 in k26779 in k26776 in k26773 in k26770 in k26767 in k26764 in k26761 in k26758 in k26755 in k26752 in k26749 in k21827 in k18307 in k18304 in k18301 in k18298 in k17861 in k17858 in k17855 in k17852 in k17849 in k17327 in k17324 in k16801 in k16798 in k16795 in k16792 in k16789 in k16786 in k16783 in k16780 in k16777 in k16774 in k16771 in k16768 in k16765 in k16762 in k16759 in k16756 in k16753 in k16750 in k16747 in k16744 in k16741 in k16602 in k16599 in k16596 in k16593 in k16537 in k16534 in k16531 in k16528 in k16525 in k16522 in k16519 in k16516 in k15271 in k15202 in k15009 in k15006 in k14901 in k14850 in k7607 in k7604 in k5838 in k5545 in k5542 in k5538 in k5247 in k5244 in k5241 in k5238 */
static void C_ccall f_27177(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[11],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_27177,2,t0,t1);}
t2=(C_word)C_a_i_bytevector(&a,1,C_fix(6));
t3=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)stub5073,a[2]=((C_word)li434),tmp=(C_word)a,a+=3,tmp);
((C_proc3)C_retrieve_proc(t3))(3,t3,((C_word*)t0)[2],t2);}

/* k27465 in pause in k26910 in k26907 in k26904 in k26779 in k26776 in k26773 in k26770 in k26767 in k26764 in k26761 in k26758 in k26755 in k26752 in k26749 in k21827 in k18307 in k18304 in k18301 in k18298 in k17861 in k17858 in k17855 in k17852 in k17849 in k17327 in k17324 in k16801 in k16798 in k16795 in k16792 in k16789 in k16786 in k16783 in k16780 in k16777 in k16774 in k16771 in k16768 in k16765 in k16762 in k16759 in k16756 in k16753 in k16750 in k16747 in k16744 in k16741 in k16602 in k16599 in k16596 in k16593 in k16537 in k16534 in k16531 in k16528 in k16525 in k16522 in k16519 in k16516 in k15271 in k15202 in k15009 in k15006 in k14901 in k14850 in k7607 in k7604 in k5838 in k5545 in k5542 in k5538 in k5247 in k5244 in k5241 in k5238 */
static void C_ccall f_27467(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 514  values");
C_values(2,0,((C_word*)t0)[2]);}

/* time-format in k26910 in k26907 in k26904 in k26779 in k26776 in k26773 in k26770 in k26767 in k26764 in k26761 in k26758 in k26755 in k26752 in k26749 in k21827 in k18307 in k18304 in k18301 in k18298 in k17861 in k17858 in k17855 in k17852 in k17849 in k17327 in k17324 in k16801 in k16798 in k16795 in k16792 in k16789 in k16786 in k16783 in k16780 in k16777 in k16774 in k16771 in k16768 in k16765 in k16762 in k16759 in k16756 in k16753 in k16750 in k16747 in k16744 in k16741 in k16602 in k16599 in k16596 in k16593 in k16537 in k16534 in k16531 in k16528 in k16525 in k16522 in k16519 in k16516 in k15271 in k15202 in k15009 in k15006 in k14901 in k14850 in k7607 in k7604 in k5838 in k5545 in k5542 in k5538 in k5247 in k5244 in k5241 in k5238 */
static void C_ccall f_27400(C_word c,C_word t0,C_word t1,...){
C_word tmp;
C_word t2;
va_list v;
C_word *a,c2=c;
C_save_rest(t1,c2,2);
C_check_for_interrupt;
if(!C_demand(c*C_SIZEOF_PAIR+11)){
C_save_and_reclaim((void*)tr2rv,(void*)f_27400r,2,t0,t1);}
else{
a=C_alloc((c-2)*3);
t2=C_restore_rest_vector(a,C_rest_count(0));
f_27400r(t0,t1,t2);}}

static void C_ccall f_27400r(C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word *a=C_alloc(11);
if(C_truep((C_word)C_vemptyp(t2))){
t3=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_27413,a[2]=t1,tmp=(C_word)a,a+=3,tmp);
t4=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_27133,a[2]=t3,tmp=(C_word)a,a+=3,tmp);
C_trace("##sys#gc");
t5=C_retrieve(lf[623]);
((C_proc3)C_retrieve_proc(t5))(3,t5,t4,C_SCHEME_FALSE);}
else{
t3=(C_word)C_i_vector_ref(t2,C_fix(0));
t4=(C_word)C_i_eqvp(t3,lf[630]);
t5=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_27425,a[2]=t2,a[3]=t3,a[4]=t1,tmp=(C_word)a,a+=5,tmp);
if(C_truep(t4)){
t6=t5;
f_27425(t6,t4);}
else{
t6=(C_word)C_eqp(t3,C_fix(1));
t7=t5;
f_27425(t7,(C_truep(t6)?t6:(C_word)C_eqp(t3,lf[633])));}}}

/* k27423 in time-format in k26910 in k26907 in k26904 in k26779 in k26776 in k26773 in k26770 in k26767 in k26764 in k26761 in k26758 in k26755 in k26752 in k26749 in k21827 in k18307 in k18304 in k18301 in k18298 in k17861 in k17858 in k17855 in k17852 in k17849 in k17327 in k17324 in k16801 in k16798 in k16795 in k16792 in k16789 in k16786 in k16783 in k16780 in k16777 in k16774 in k16771 in k16768 in k16765 in k16762 in k16759 in k16756 in k16753 in k16750 in k16747 in k16744 in k16741 in k16602 in k16599 in k16596 in k16593 in k16537 in k16534 in k16531 in k16528 in k16525 in k16522 in k16519 in k16516 in k15271 in k15202 in k15009 in k15006 in k14901 in k14850 in k7607 in k7604 in k5838 in k5545 in k5542 in k5538 in k5247 in k5244 in k5241 in k5238 */
static void C_fcall f_27425(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
if(C_truep(t1)){
t2=C_mutate((C_word*)lf[627]+1,C_retrieve(lf[621]));
C_trace("ChickenBridge.scm: 503  scheduler-set-time-milliseconds");
f_27138(((C_word*)t0)[4],C_SCHEME_FALSE);}
else{
t2=(C_word)C_eqp(((C_word*)t0)[3],C_fix(1000));
t3=(C_truep(t2)?t2:(C_word)C_eqp(((C_word*)t0)[3],lf[631]));
if(C_truep(t3)){
t4=C_mutate((C_word*)lf[627]+1,C_retrieve(lf[620]));
C_trace("ChickenBridge.scm: 507  scheduler-set-time-milliseconds");
f_27138(((C_word*)t0)[4],C_SCHEME_TRUE);}
else{
t4=(C_word)C_i_vector_ref(((C_word*)t0)[2],C_fix(0));
C_trace("ChickenBridge.scm: 510  error");
t5=*((C_word*)lf[6]+1);
((C_proc4)C_retrieve_proc(t5))(4,t5,((C_word*)t0)[4],lf[632],t4);}}}

/* k27131 in time-format in k26910 in k26907 in k26904 in k26779 in k26776 in k26773 in k26770 in k26767 in k26764 in k26761 in k26758 in k26755 in k26752 in k26749 in k21827 in k18307 in k18304 in k18301 in k18298 in k17861 in k17858 in k17855 in k17852 in k17849 in k17327 in k17324 in k16801 in k16798 in k16795 in k16792 in k16789 in k16786 in k16783 in k16780 in k16777 in k16774 in k16771 in k16768 in k16765 in k16762 in k16759 in k16756 in k16753 in k16750 in k16747 in k16744 in k16741 in k16602 in k16599 in k16596 in k16593 in k16537 in k16534 in k16531 in k16528 in k16525 in k16522 in k16519 in k16516 in k15271 in k15202 in k15009 in k15006 in k14901 in k14850 in k7607 in k7604 in k5838 in k5545 in k5542 in k5538 in k5247 in k5244 in k5241 in k5238 */
static void C_ccall f_27133(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[11],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_27133,2,t0,t1);}
t2=(C_word)C_a_i_bytevector(&a,1,C_fix(6));
t3=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)stub5049,a[2]=((C_word)li432),tmp=(C_word)a,a+=3,tmp);
((C_proc3)C_retrieve_proc(t3))(3,t3,((C_word*)t0)[2],t2);}

/* k27411 in time-format in k26910 in k26907 in k26904 in k26779 in k26776 in k26773 in k26770 in k26767 in k26764 in k26761 in k26758 in k26755 in k26752 in k26749 in k21827 in k18307 in k18304 in k18301 in k18298 in k17861 in k17858 in k17855 in k17852 in k17849 in k17327 in k17324 in k16801 in k16798 in k16795 in k16792 in k16789 in k16786 in k16783 in k16780 in k16777 in k16774 in k16771 in k16768 in k16765 in k16762 in k16759 in k16756 in k16753 in k16750 in k16747 in k16744 in k16741 in k16602 in k16599 in k16596 in k16593 in k16537 in k16534 in k16531 in k16528 in k16525 in k16522 in k16519 in k16516 in k15271 in k15202 in k15009 in k15006 in k14901 in k14850 in k7607 in k7604 in k5838 in k5545 in k5542 in k5538 in k5247 in k5244 in k5241 in k5238 */
static void C_ccall f_27413(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
t2=((C_word*)t0)[2];
((C_proc2)(void*)(*((C_word*)t2+1)))(2,t2,(C_truep(t1)?C_fix(1000):lf[629]));}

/* sprout in k26910 in k26907 in k26904 in k26779 in k26776 in k26773 in k26770 in k26767 in k26764 in k26761 in k26758 in k26755 in k26752 in k26749 in k21827 in k18307 in k18304 in k18301 in k18298 in k17861 in k17858 in k17855 in k17852 in k17849 in k17327 in k17324 in k16801 in k16798 in k16795 in k16792 in k16789 in k16786 in k16783 in k16780 in k16777 in k16774 in k16771 in k16768 in k16765 in k16762 in k16759 in k16756 in k16753 in k16750 in k16747 in k16744 in k16741 in k16602 in k16599 in k16596 in k16593 in k16537 in k16534 in k16531 in k16528 in k16525 in k16522 in k16519 in k16516 in k15271 in k15202 in k15009 in k15006 in k14901 in k14850 in k7607 in k7604 in k5838 in k5545 in k5542 in k5538 in k5247 in k5244 in k5241 in k5238 */
static void C_ccall f_27232(C_word c,C_word t0,C_word t1,C_word t2,...){
C_word tmp;
C_word t3;
va_list v;
C_word *a,c2=c;
C_save_rest(t2,c2,3);
if(c<3) C_bad_min_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_demand(c*C_SIZEOF_PAIR+12)){
C_save_and_reclaim((void*)tr3r,(void*)f_27232r,3,t0,t1,t2);}
else{
a=C_alloc((c-3)*3);
t3=C_restore_rest(a,C_rest_count(0));
f_27232r(t0,t1,t2,t3);}}

static void C_ccall f_27232r(C_word t0,C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word *a=C_alloc(12);
t4=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_27234,a[2]=t2,a[3]=((C_word)li428),tmp=(C_word)a,a+=4,tmp);
t5=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_27346,a[2]=t4,a[3]=((C_word)li429),tmp=(C_word)a,a+=4,tmp);
t6=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_27351,a[2]=t5,a[3]=((C_word)li430),tmp=(C_word)a,a+=4,tmp);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("def-start51045125");
t7=t6;
f_27351(t7,t1);}
else{
t7=(C_word)C_i_car(t3);
t8=(C_word)C_i_cdr(t3);
if(C_truep((C_word)C_i_nullp(t8))){
C_trace("def-id51055123");
t9=t5;
f_27346(t9,t1,t7);}
else{
t9=(C_word)C_i_car(t8);
t10=(C_word)C_i_cdr(t8);
if(C_truep((C_word)C_i_nullp(t10))){
C_trace("body51025107");
t11=t4;
f_27234(t11,t1,t7,t9);}
else{
C_trace("##sys#error");
t11=*((C_word*)lf[86]+1);
((C_proc4)(void*)(*((C_word*)t11+1)))(4,t11,t1,lf[0],t10);}}}}

/* def-start5104 in sprout in k26910 in k26907 in k26904 in k26779 in k26776 in k26773 in k26770 in k26767 in k26764 in k26761 in k26758 in k26755 in k26752 in k26749 in k21827 in k18307 in k18304 in k18301 in k18298 in k17861 in k17858 in k17855 in k17852 in k17849 in k17327 in k17324 in k16801 in k16798 in k16795 in k16792 in k16789 in k16786 in k16783 in k16780 in k16777 in k16774 in k16771 in k16768 in k16765 in k16762 in k16759 in k16756 in k16753 in k16750 in k16747 in k16744 in k16741 in k16602 in k16599 in k16596 in k16593 in k16537 in k16534 in k16531 in k16528 in k16525 in k16522 in k16519 in k16516 in k15271 in k15202 in k15009 in k15006 in k14901 in k14850 in k7607 in k7604 in k5838 in k5545 in k5542 in k5538 in k5247 in k5244 in k5241 in k5238 */
static void C_fcall f_27351(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_27351,NULL,2,t0,t1);}
C_trace("def-id51055123");
t2=((C_word*)t0)[2];
f_27346(t2,t1,C_fix(0));}

/* def-id5105 in sprout in k26910 in k26907 in k26904 in k26779 in k26776 in k26773 in k26770 in k26767 in k26764 in k26761 in k26758 in k26755 in k26752 in k26749 in k21827 in k18307 in k18304 in k18301 in k18298 in k17861 in k17858 in k17855 in k17852 in k17849 in k17327 in k17324 in k16801 in k16798 in k16795 in k16792 in k16789 in k16786 in k16783 in k16780 in k16777 in k16774 in k16771 in k16768 in k16765 in k16762 in k16759 in k16756 in k16753 in k16750 in k16747 in k16744 in k16741 in k16602 in k16599 in k16596 in k16593 in k16537 in k16534 in k16531 in k16528 in k16525 in k16522 in k16519 in k16516 in k15271 in k15202 in k15009 in k15006 in k14901 in k14850 in k7607 in k7604 in k5838 in k5545 in k5542 in k5538 in k5247 in k5244 in k5241 in k5238 */
static void C_fcall f_27346(C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word *a;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_27346,NULL,3,t0,t1,t2);}
C_trace("body51025107");
t3=((C_word*)t0)[2];
f_27234(t3,t1,t2,C_fix(-1));}

/* body5102 in sprout in k26910 in k26907 in k26904 in k26779 in k26776 in k26773 in k26770 in k26767 in k26764 in k26761 in k26758 in k26755 in k26752 in k26749 in k21827 in k18307 in k18304 in k18301 in k18298 in k17861 in k17858 in k17855 in k17852 in k17849 in k17327 in k17324 in k16801 in k16798 in k16795 in k16792 in k16789 in k16786 in k16783 in k16780 in k16777 in k16774 in k16771 in k16768 in k16765 in k16762 in k16759 in k16756 in k16753 in k16750 in k16747 in k16744 in k16741 in k16602 in k16599 in k16596 in k16593 in k16537 in k16534 in k16531 in k16528 in k16525 in k16522 in k16519 in k16516 in k15271 in k15202 in k15009 in k15006 in k14901 in k14850 in k7607 in k7604 in k5838 in k5545 in k5542 in k5538 in k5247 in k5244 in k5241 in k5238 */
static void C_fcall f_27234(C_word t0,C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word t14;
C_word ab[33],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_27234,NULL,4,t0,t1,t2,t3);}
t4=(*a=C_VECTOR_TYPE|1,a[1]=t2,tmp=(C_word)a,a+=2,tmp);
t5=(*a=C_VECTOR_TYPE|1,a[1]=t3,tmp=(C_word)a,a+=2,tmp);
t6=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_27236,a[2]=t4,a[3]=((C_word)li425),tmp=(C_word)a,a+=4,tmp);
t7=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_27264,a[2]=t5,a[3]=((C_word)li426),tmp=(C_word)a,a+=4,tmp);
t8=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_27294,a[2]=t1,tmp=(C_word)a,a+=3,tmp);
if(C_truep((C_word)C_i_pairp(((C_word*)t0)[2]))){
t9=C_SCHEME_UNDEFINED;
t10=(*a=C_VECTOR_TYPE|1,a[1]=t9,tmp=(C_word)a,a+=2,tmp);
t11=C_set_block_item(t10,0,(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_27305,a[2]=t6,a[3]=t7,a[4]=t10,a[5]=((C_word*)t0)[2],a[6]=((C_word)li427),tmp=(C_word)a,a+=7,tmp));
t12=((C_word*)t10)[1];
f_27305(t12,t8,((C_word*)t0)[2]);}
else{
t9=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_27337,a[2]=((C_word*)t0)[2],a[3]=t8,tmp=(C_word)a,a+=4,tmp);
t10=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_27341,a[2]=t7,a[3]=((C_word*)t0)[2],a[4]=t9,tmp=(C_word)a,a+=5,tmp);
C_trace("ChickenBridge.scm: 487  nextstart");
t11=t6;
f_27236(t11,t10);}}

/* k27339 in body5102 in sprout in k26910 in k26907 in k26904 in k26779 in k26776 in k26773 in k26770 in k26767 in k26764 in k26761 in k26758 in k26755 in k26752 in k26749 in k21827 in k18307 in k18304 in k18301 in k18298 in k17861 in k17858 in k17855 in k17852 in k17849 in k17327 in k17324 in k16801 in k16798 in k16795 in k16792 in k16789 in k16786 in k16783 in k16780 in k16777 in k16774 in k16771 in k16768 in k16765 in k16762 in k16759 in k16756 in k16753 in k16750 in k16747 in k16744 in k16741 in k16602 in k16599 in k16596 in k16593 in k16537 in k16534 in k16531 in k16528 in k16525 in k16522 in k16519 in k16516 in k15271 in k15202 in k15009 in k15006 in k14901 in k14850 in k7607 in k7604 in k5838 in k5545 in k5542 in k5538 in k5247 in k5244 in k5241 in k5238 */
static void C_ccall f_27341(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[5],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_27341,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_27345,a[2]=t1,a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],tmp=(C_word)a,a+=5,tmp);
C_trace("ChickenBridge.scm: 487  nextid");
t3=((C_word*)t0)[2];
f_27264(t3,t2);}

/* k27343 in k27339 in body5102 in sprout in k26910 in k26907 in k26904 in k26779 in k26776 in k26773 in k26770 in k26767 in k26764 in k26761 in k26758 in k26755 in k26752 in k26749 in k21827 in k18307 in k18304 in k18301 in k18298 in k17861 in k17858 in k17855 in k17852 in k17849 in k17327 in k17324 in k16801 in k16798 in k16795 in k16792 in k16789 in k16786 in k16783 in k16780 in k16777 in k16774 in k16771 in k16768 in k16765 in k16762 in k16759 in k16756 in k16753 in k16750 in k16747 in k16744 in k16741 in k16602 in k16599 in k16596 in k16593 in k16537 in k16534 in k16531 in k16528 in k16525 in k16522 in k16519 in k16516 in k15271 in k15202 in k15009 in k15006 in k14901 in k14850 in k7607 in k7604 in k5838 in k5545 in k5542 in k5538 in k5247 in k5244 in k5241 in k5238 */
static void C_ccall f_27345(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 487  scheduler-sprout");
f_27147(((C_word*)t0)[4],((C_word*)t0)[3],((C_word*)t0)[2],t1);}

/* k27335 in body5102 in sprout in k26910 in k26907 in k26904 in k26779 in k26776 in k26773 in k26770 in k26767 in k26764 in k26761 in k26758 in k26755 in k26752 in k26749 in k21827 in k18307 in k18304 in k18301 in k18298 in k17861 in k17858 in k17855 in k17852 in k17849 in k17327 in k17324 in k16801 in k16798 in k16795 in k16792 in k16789 in k16786 in k16783 in k16780 in k16777 in k16774 in k16771 in k16768 in k16765 in k16762 in k16759 in k16756 in k16753 in k16750 in k16747 in k16744 in k16741 in k16602 in k16599 in k16596 in k16593 in k16537 in k16534 in k16531 in k16528 in k16525 in k16522 in k16519 in k16516 in k15271 in k15202 in k15009 in k15006 in k14901 in k14850 in k7607 in k7604 in k5838 in k5545 in k5542 in k5538 in k5247 in k5244 in k5241 in k5238 */
static void C_ccall f_27337(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
t2=((C_word*)t0)[3];
f_27294(2,t2,((C_word*)t0)[2]);}

/* do5116 in body5102 in sprout in k26910 in k26907 in k26904 in k26779 in k26776 in k26773 in k26770 in k26767 in k26764 in k26761 in k26758 in k26755 in k26752 in k26749 in k21827 in k18307 in k18304 in k18301 in k18298 in k17861 in k17858 in k17855 in k17852 in k17849 in k17327 in k17324 in k16801 in k16798 in k16795 in k16792 in k16789 in k16786 in k16783 in k16780 in k16777 in k16774 in k16771 in k16768 in k16765 in k16762 in k16759 in k16756 in k16753 in k16750 in k16747 in k16744 in k16741 in k16602 in k16599 in k16596 in k16593 in k16537 in k16534 in k16531 in k16528 in k16525 in k16522 in k16519 in k16516 in k15271 in k15202 in k15009 in k15006 in k14901 in k14850 in k7607 in k7604 in k5838 in k5545 in k5542 in k5538 in k5247 in k5244 in k5241 in k5238 */
static void C_fcall f_27305(C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[10],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_27305,NULL,3,t0,t1,t2);}
if(C_truep((C_word)C_i_nullp(t2))){
t3=t1;
((C_proc2)(void*)(*((C_word*)t3+1)))(2,t3,((C_word*)t0)[5]);}
else{
t3=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_27315,a[2]=t1,a[3]=((C_word*)t0)[4],a[4]=t2,tmp=(C_word)a,a+=5,tmp);
t4=(C_word)C_i_car(t2);
t5=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_27330,a[2]=((C_word*)t0)[3],a[3]=t4,a[4]=t3,tmp=(C_word)a,a+=5,tmp);
C_trace("ChickenBridge.scm: 485  nextstart");
t6=((C_word*)t0)[2];
f_27236(t6,t5);}}

/* k27328 in do5116 in body5102 in sprout in k26910 in k26907 in k26904 in k26779 in k26776 in k26773 in k26770 in k26767 in k26764 in k26761 in k26758 in k26755 in k26752 in k26749 in k21827 in k18307 in k18304 in k18301 in k18298 in k17861 in k17858 in k17855 in k17852 in k17849 in k17327 in k17324 in k16801 in k16798 in k16795 in k16792 in k16789 in k16786 in k16783 in k16780 in k16777 in k16774 in k16771 in k16768 in k16765 in k16762 in k16759 in k16756 in k16753 in k16750 in k16747 in k16744 in k16741 in k16602 in k16599 in k16596 in k16593 in k16537 in k16534 in k16531 in k16528 in k16525 in k16522 in k16519 in k16516 in k15271 in k15202 in k15009 in k15006 in k14901 in k14850 in k7607 in k7604 in k5838 in k5545 in k5542 in k5538 in k5247 in k5244 in k5241 in k5238 */
static void C_ccall f_27330(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[5],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_27330,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_27334,a[2]=t1,a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],tmp=(C_word)a,a+=5,tmp);
C_trace("ChickenBridge.scm: 485  nextid");
t3=((C_word*)t0)[2];
f_27264(t3,t2);}

/* k27332 in k27328 in do5116 in body5102 in sprout in k26910 in k26907 in k26904 in k26779 in k26776 in k26773 in k26770 in k26767 in k26764 in k26761 in k26758 in k26755 in k26752 in k26749 in k21827 in k18307 in k18304 in k18301 in k18298 in k17861 in k17858 in k17855 in k17852 in k17849 in k17327 in k17324 in k16801 in k16798 in k16795 in k16792 in k16789 in k16786 in k16783 in k16780 in k16777 in k16774 in k16771 in k16768 in k16765 in k16762 in k16759 in k16756 in k16753 in k16750 in k16747 in k16744 in k16741 in k16602 in k16599 in k16596 in k16593 in k16537 in k16534 in k16531 in k16528 in k16525 in k16522 in k16519 in k16516 in k15271 in k15202 in k15009 in k15006 in k14901 in k14850 in k7607 in k7604 in k5838 in k5545 in k5542 in k5538 in k5247 in k5244 in k5241 in k5238 */
static void C_ccall f_27334(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 485  scheduler-sprout");
f_27147(((C_word*)t0)[4],((C_word*)t0)[3],((C_word*)t0)[2],t1);}

/* k27313 in do5116 in body5102 in sprout in k26910 in k26907 in k26904 in k26779 in k26776 in k26773 in k26770 in k26767 in k26764 in k26761 in k26758 in k26755 in k26752 in k26749 in k21827 in k18307 in k18304 in k18301 in k18298 in k17861 in k17858 in k17855 in k17852 in k17849 in k17327 in k17324 in k16801 in k16798 in k16795 in k16792 in k16789 in k16786 in k16783 in k16780 in k16777 in k16774 in k16771 in k16768 in k16765 in k16762 in k16759 in k16756 in k16753 in k16750 in k16747 in k16744 in k16741 in k16602 in k16599 in k16596 in k16593 in k16537 in k16534 in k16531 in k16528 in k16525 in k16522 in k16519 in k16516 in k15271 in k15202 in k15009 in k15006 in k14901 in k14850 in k7607 in k7604 in k5838 in k5545 in k5542 in k5538 in k5247 in k5244 in k5241 in k5238 */
static void C_ccall f_27315(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word *a;
t2=(C_word)C_i_cdr(((C_word*)t0)[4]);
t3=((C_word*)((C_word*)t0)[3])[1];
f_27305(t3,((C_word*)t0)[2],t2);}

/* k27292 in body5102 in sprout in k26910 in k26907 in k26904 in k26779 in k26776 in k26773 in k26770 in k26767 in k26764 in k26761 in k26758 in k26755 in k26752 in k26749 in k21827 in k18307 in k18304 in k18301 in k18298 in k17861 in k17858 in k17855 in k17852 in k17849 in k17327 in k17324 in k16801 in k16798 in k16795 in k16792 in k16789 in k16786 in k16783 in k16780 in k16777 in k16774 in k16771 in k16768 in k16765 in k16762 in k16759 in k16756 in k16753 in k16750 in k16747 in k16744 in k16741 in k16602 in k16599 in k16596 in k16593 in k16537 in k16534 in k16531 in k16528 in k16525 in k16522 in k16519 in k16516 in k15271 in k15202 in k15009 in k15006 in k14901 in k14850 in k7607 in k7604 in k5838 in k5545 in k5542 in k5538 in k5247 in k5244 in k5241 in k5238 */
static void C_ccall f_27294(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 491  values");
C_values(2,0,((C_word*)t0)[2]);}

/* nextid in body5102 in sprout in k26910 in k26907 in k26904 in k26779 in k26776 in k26773 in k26770 in k26767 in k26764 in k26761 in k26758 in k26755 in k26752 in k26749 in k21827 in k18307 in k18304 in k18301 in k18298 in k17861 in k17858 in k17855 in k17852 in k17849 in k17327 in k17324 in k16801 in k16798 in k16795 in k16792 in k16789 in k16786 in k16783 in k16780 in k16777 in k16774 in k16771 in k16768 in k16765 in k16762 in k16759 in k16756 in k16753 in k16750 in k16747 in k16744 in k16741 in k16602 in k16599 in k16596 in k16593 in k16537 in k16534 in k16531 in k16528 in k16525 in k16522 in k16519 in k16516 in k15271 in k15202 in k15009 in k15006 in k14901 in k14850 in k7607 in k7604 in k5838 in k5545 in k5542 in k5538 in k5247 in k5244 in k5241 in k5238 */
static void C_fcall f_27264(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_27264,NULL,2,t0,t1);}
if(C_truep((C_word)C_i_pairp(((C_word*)((C_word*)t0)[2])[1]))){
t2=(C_word)C_i_car(((C_word*)((C_word*)t0)[2])[1]);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[2])[1]);
t4=(C_word)C_i_nullp(t3);
t5=(C_truep(t4)?(C_word)C_i_car(((C_word*)((C_word*)t0)[2])[1]):(C_word)C_i_cdr(((C_word*)((C_word*)t0)[2])[1]));
t6=C_mutate(((C_word *)((C_word*)t0)[2])+1,t5);
t7=t1;
((C_proc2)(void*)(*((C_word*)t7+1)))(2,t7,t2);}
else{
t2=t1;
((C_proc2)(void*)(*((C_word*)t2+1)))(2,t2,((C_word*)((C_word*)t0)[2])[1]);}}

/* nextstart in body5102 in sprout in k26910 in k26907 in k26904 in k26779 in k26776 in k26773 in k26770 in k26767 in k26764 in k26761 in k26758 in k26755 in k26752 in k26749 in k21827 in k18307 in k18304 in k18301 in k18298 in k17861 in k17858 in k17855 in k17852 in k17849 in k17327 in k17324 in k16801 in k16798 in k16795 in k16792 in k16789 in k16786 in k16783 in k16780 in k16777 in k16774 in k16771 in k16768 in k16765 in k16762 in k16759 in k16756 in k16753 in k16750 in k16747 in k16744 in k16741 in k16602 in k16599 in k16596 in k16593 in k16537 in k16534 in k16531 in k16528 in k16525 in k16522 in k16519 in k16516 in k15271 in k15202 in k15009 in k15006 in k14901 in k14850 in k7607 in k7604 in k5838 in k5545 in k5542 in k5538 in k5247 in k5244 in k5241 in k5238 */
static void C_fcall f_27236(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_27236,NULL,2,t0,t1);}
if(C_truep((C_word)C_i_pairp(((C_word*)((C_word*)t0)[2])[1]))){
t2=(C_word)C_i_car(((C_word*)((C_word*)t0)[2])[1]);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[2])[1]);
t4=(C_word)C_i_nullp(t3);
t5=(C_truep(t4)?(C_word)C_i_car(((C_word*)((C_word*)t0)[2])[1]):(C_word)C_i_cdr(((C_word*)((C_word*)t0)[2])[1]));
t6=C_mutate(((C_word *)((C_word*)t0)[2])+1,t5);
t7=t1;
((C_proc2)(void*)(*((C_word*)t7+1)))(2,t7,t2);}
else{
t2=t1;
((C_proc2)(void*)(*((C_word*)t2+1)))(2,t2,((C_word*)((C_word*)t0)[2])[1]);}}

/* load-sal-file in k26910 in k26907 in k26904 in k26779 in k26776 in k26773 in k26770 in k26767 in k26764 in k26761 in k26758 in k26755 in k26752 in k26749 in k21827 in k18307 in k18304 in k18301 in k18298 in k17861 in k17858 in k17855 in k17852 in k17849 in k17327 in k17324 in k16801 in k16798 in k16795 in k16792 in k16789 in k16786 in k16783 in k16780 in k16777 in k16774 in k16771 in k16768 in k16765 in k16762 in k16759 in k16756 in k16753 in k16750 in k16747 in k16744 in k16741 in k16602 in k16599 in k16596 in k16593 in k16537 in k16534 in k16531 in k16528 in k16525 in k16522 in k16519 in k16516 in k15271 in k15202 in k15009 in k15006 in k14901 in k14850 in k7607 in k7604 in k5838 in k5545 in k5542 in k5538 in k5247 in k5244 in k5241 in k5238 */
static void C_ccall f_27213(C_word c,C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word ab[3],*a=ab;
if(c!=3) C_bad_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr3,(void*)f_27213,3,t0,t1,t2);}
t3=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_27218,a[2]=((C_word)li423),tmp=(C_word)a,a+=3,tmp);
((C_proc3)(void*)(*((C_word*)t3+1)))(3,t3,t1,t2);}

/* f_27218 in load-sal-file in k26910 in k26907 in k26904 in k26779 in k26776 in k26773 in k26770 in k26767 in k26764 in k26761 in k26758 in k26755 in k26752 in k26749 in k21827 in k18307 in k18304 in k18301 in k18298 in k17861 in k17858 in k17855 in k17852 in k17849 in k17327 in k17324 in k16801 in k16798 in k16795 in k16792 in k16789 in k16786 in k16783 in k16780 in k16777 in k16774 in k16771 in k16768 in k16765 in k16762 in k16759 in k16756 in k16753 in k16750 in k16747 in k16744 in k16741 in k16602 in k16599 in k16596 in k16593 in k16537 in k16534 in k16531 in k16528 in k16525 in k16522 in k16519 in k16516 in k15271 in k15202 in k15009 in k15006 in k14901 in k14850 in k7607 in k7604 in k5838 in k5545 in k5542 in k5538 in k5247 in k5244 in k5241 in k5238 */
static void C_ccall f_27218(C_word c,C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word t5;
C_word ab[3],*a=ab;
if(c!=3) C_bad_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr3,(void*)f_27218,3,t0,t1,t2);}
t3=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_27223,a[2]=t1,tmp=(C_word)a,a+=3,tmp);
if(C_truep(t2)){
t4=(C_word)C_i_foreign_string_argumentp(t2);
C_trace("##sys#make-c-string");
t5=C_retrieve(lf[48]);
((C_proc3)C_retrieve_proc(t5))(3,t5,t3,t4);}
else{
t4=t3;
f_27223(2,t4,C_SCHEME_FALSE);}}

/* k27221 */
static void C_ccall f_27223(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
t2=((C_word*)t0)[2];
((C_proc2)(void*)(*((C_word*)t2+1)))(2,t2,(C_word)stub5093(C_SCHEME_UNDEFINED,t1));}

/* scheduler-stop in k26910 in k26907 in k26904 in k26779 in k26776 in k26773 in k26770 in k26767 in k26764 in k26761 in k26758 in k26755 in k26752 in k26749 in k21827 in k18307 in k18304 in k18301 in k18298 in k17861 in k17858 in k17855 in k17852 in k17849 in k17327 in k17324 in k16801 in k16798 in k16795 in k16792 in k16789 in k16786 in k16783 in k16780 in k16777 in k16774 in k16771 in k16768 in k16765 in k16762 in k16759 in k16756 in k16753 in k16750 in k16747 in k16744 in k16741 in k16602 in k16599 in k16596 in k16593 in k16537 in k16534 in k16531 in k16528 in k16525 in k16522 in k16519 in k16516 in k15271 in k15202 in k15009 in k15006 in k14901 in k14850 in k7607 in k7604 in k5838 in k5545 in k5542 in k5538 in k5247 in k5244 in k5241 in k5238 */
static void C_fcall f_27191(C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word ab[4],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_27191,NULL,2,t1,t2);}
t3=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_27195,a[2]=t1,a[3]=t2,tmp=(C_word)a,a+=4,tmp);
C_trace("##sys#gc");
t4=C_retrieve(lf[623]);
((C_proc3)C_retrieve_proc(t4))(3,t4,t3,C_SCHEME_FALSE);}

/* k27193 in scheduler-stop in k26910 in k26907 in k26904 in k26779 in k26776 in k26773 in k26770 in k26767 in k26764 in k26761 in k26758 in k26755 in k26752 in k26749 in k21827 in k18307 in k18304 in k18301 in k18298 in k17861 in k17858 in k17855 in k17852 in k17849 in k17327 in k17324 in k16801 in k16798 in k16795 in k16792 in k16789 in k16786 in k16783 in k16780 in k16777 in k16774 in k16771 in k16768 in k16765 in k16762 in k16759 in k16756 in k16753 in k16750 in k16747 in k16744 in k16741 in k16602 in k16599 in k16596 in k16593 in k16537 in k16534 in k16531 in k16528 in k16525 in k16522 in k16519 in k16516 in k15271 in k15202 in k15009 in k15006 in k14901 in k14850 in k7607 in k7604 in k5838 in k5545 in k5542 in k5538 in k5247 in k5244 in k5241 in k5238 */
static void C_ccall f_27195(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[11],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_27195,2,t0,t1);}
t2=(C_word)C_a_i_bytevector(&a,1,C_fix(6));
t3=(C_word)C_i_foreign_fixnum_argumentp(((C_word*)t0)[3]);
t4=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)stub5082,a[2]=((C_word)li421),tmp=(C_word)a,a+=3,tmp);
((C_proc4)C_retrieve_proc(t4))(4,t4,((C_word*)t0)[2],t2,t3);}

/* scheduler-sprout in k26910 in k26907 in k26904 in k26779 in k26776 in k26773 in k26770 in k26767 in k26764 in k26761 in k26758 in k26755 in k26752 in k26749 in k21827 in k18307 in k18304 in k18301 in k18298 in k17861 in k17858 in k17855 in k17852 in k17849 in k17327 in k17324 in k16801 in k16798 in k16795 in k16792 in k16789 in k16786 in k16783 in k16780 in k16777 in k16774 in k16771 in k16768 in k16765 in k16762 in k16759 in k16756 in k16753 in k16750 in k16747 in k16744 in k16741 in k16602 in k16599 in k16596 in k16593 in k16537 in k16534 in k16531 in k16528 in k16525 in k16522 in k16519 in k16516 in k15271 in k15202 in k15009 in k15006 in k14901 in k14850 in k7607 in k7604 in k5838 in k5545 in k5542 in k5538 in k5247 in k5244 in k5241 in k5238 */
static void C_fcall f_27147(C_word t1,C_word t2,C_word t3,C_word t4){
C_word tmp;
C_word t5;
C_word t6;
C_word ab[6],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_27147,NULL,4,t1,t2,t3,t4);}
t5=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_27151,a[2]=t2,a[3]=t1,a[4]=t4,a[5]=t3,tmp=(C_word)a,a+=6,tmp);
C_trace("##sys#gc");
t6=C_retrieve(lf[623]);
((C_proc3)C_retrieve_proc(t6))(3,t6,t5,C_SCHEME_FALSE);}

/* k27149 in scheduler-sprout in k26910 in k26907 in k26904 in k26779 in k26776 in k26773 in k26770 in k26767 in k26764 in k26761 in k26758 in k26755 in k26752 in k26749 in k21827 in k18307 in k18304 in k18301 in k18298 in k17861 in k17858 in k17855 in k17852 in k17849 in k17327 in k17324 in k16801 in k16798 in k16795 in k16792 in k16789 in k16786 in k16783 in k16780 in k16777 in k16774 in k16771 in k16768 in k16765 in k16762 in k16759 in k16756 in k16753 in k16750 in k16747 in k16744 in k16741 in k16602 in k16599 in k16596 in k16593 in k16537 in k16534 in k16531 in k16528 in k16525 in k16522 in k16519 in k16516 in k15271 in k15202 in k15009 in k15006 in k14901 in k14850 in k7607 in k7604 in k5838 in k5545 in k5542 in k5538 in k5247 in k5244 in k5241 in k5238 */
static void C_ccall f_27151(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[11],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_27151,2,t0,t1);}
t2=(C_word)C_a_i_bytevector(&a,1,C_fix(6));
t3=(C_word)C_i_foreign_flonum_argumentp(((C_word*)t0)[5]);
t4=(C_word)C_i_foreign_fixnum_argumentp(((C_word*)t0)[4]);
t5=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)stub5062,a[2]=((C_word)li419),tmp=(C_word)a,a+=3,tmp);
((C_proc6)C_retrieve_proc(t5))(6,t5,((C_word*)t0)[3],t2,((C_word*)t0)[2],t3,t4);}

/* scheduler-set-time-milliseconds in k26910 in k26907 in k26904 in k26779 in k26776 in k26773 in k26770 in k26767 in k26764 in k26761 in k26758 in k26755 in k26752 in k26749 in k21827 in k18307 in k18304 in k18301 in k18298 in k17861 in k17858 in k17855 in k17852 in k17849 in k17327 in k17324 in k16801 in k16798 in k16795 in k16792 in k16789 in k16786 in k16783 in k16780 in k16777 in k16774 in k16771 in k16768 in k16765 in k16762 in k16759 in k16756 in k16753 in k16750 in k16747 in k16744 in k16741 in k16602 in k16599 in k16596 in k16593 in k16537 in k16534 in k16531 in k16528 in k16525 in k16522 in k16519 in k16516 in k15271 in k15202 in k15009 in k15006 in k14901 in k14850 in k7607 in k7604 in k5838 in k5545 in k5542 in k5538 in k5247 in k5244 in k5241 in k5238 */
static void C_fcall f_27138(C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word ab[4],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_27138,NULL,2,t1,t2);}
t3=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_27142,a[2]=t2,a[3]=t1,tmp=(C_word)a,a+=4,tmp);
C_trace("##sys#gc");
t4=C_retrieve(lf[623]);
((C_proc3)C_retrieve_proc(t4))(3,t4,t3,C_SCHEME_FALSE);}

/* k27140 in scheduler-set-time-milliseconds in k26910 in k26907 in k26904 in k26779 in k26776 in k26773 in k26770 in k26767 in k26764 in k26761 in k26758 in k26755 in k26752 in k26749 in k21827 in k18307 in k18304 in k18301 in k18298 in k17861 in k17858 in k17855 in k17852 in k17849 in k17327 in k17324 in k16801 in k16798 in k16795 in k16792 in k16789 in k16786 in k16783 in k16780 in k16777 in k16774 in k16771 in k16768 in k16765 in k16762 in k16759 in k16756 in k16753 in k16750 in k16747 in k16744 in k16741 in k16602 in k16599 in k16596 in k16593 in k16537 in k16534 in k16531 in k16528 in k16525 in k16522 in k16519 in k16516 in k15271 in k15202 in k15009 in k15006 in k14901 in k14850 in k7607 in k7604 in k5838 in k5545 in k5542 in k5538 in k5247 in k5244 in k5241 in k5238 */
static void C_ccall f_27142(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[11],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_27142,2,t0,t1);}
t2=(C_word)C_a_i_bytevector(&a,1,C_fix(6));
t3=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)stub5054,a[2]=((C_word)li417),tmp=(C_word)a,a+=3,tmp);
((C_proc4)C_retrieve_proc(t3))(4,t3,((C_word*)t0)[3],t2,((C_word*)t0)[2]);}

/* current-time-seconds in k26910 in k26907 in k26904 in k26779 in k26776 in k26773 in k26770 in k26767 in k26764 in k26761 in k26758 in k26755 in k26752 in k26749 in k21827 in k18307 in k18304 in k18301 in k18298 in k17861 in k17858 in k17855 in k17852 in k17849 in k17327 in k17324 in k16801 in k16798 in k16795 in k16792 in k16789 in k16786 in k16783 in k16780 in k16777 in k16774 in k16771 in k16768 in k16765 in k16762 in k16759 in k16756 in k16753 in k16750 in k16747 in k16744 in k16741 in k16602 in k16599 in k16596 in k16593 in k16537 in k16534 in k16531 in k16528 in k16525 in k16522 in k16519 in k16516 in k15271 in k15202 in k15009 in k15006 in k14901 in k14850 in k7607 in k7604 in k5838 in k5545 in k5542 in k5538 in k5247 in k5244 in k5241 in k5238 */
static void C_ccall f_27126(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[6],*a=ab;
if(c!=2) C_bad_argc_2(c,2,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_27126,2,t0,t1);}
t2=(C_word)C_a_i_bytevector(&a,1,C_fix(4));
t3=t1;
((C_proc2)(void*)(*((C_word*)t3+1)))(2,t3,(C_word)stub5046(t2));}

/* current-time-milliseconds in k26910 in k26907 in k26904 in k26779 in k26776 in k26773 in k26770 in k26767 in k26764 in k26761 in k26758 in k26755 in k26752 in k26749 in k21827 in k18307 in k18304 in k18301 in k18298 in k17861 in k17858 in k17855 in k17852 in k17849 in k17327 in k17324 in k16801 in k16798 in k16795 in k16792 in k16789 in k16786 in k16783 in k16780 in k16777 in k16774 in k16771 in k16768 in k16765 in k16762 in k16759 in k16756 in k16753 in k16750 in k16747 in k16744 in k16741 in k16602 in k16599 in k16596 in k16593 in k16537 in k16534 in k16531 in k16528 in k16525 in k16522 in k16519 in k16516 in k15271 in k15202 in k15009 in k15006 in k14901 in k14850 in k7607 in k7604 in k5838 in k5545 in k5542 in k5538 in k5247 in k5244 in k5241 in k5238 */
static void C_ccall f_27123(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[6],*a=ab;
if(c!=2) C_bad_argc_2(c,2,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_27123,2,t0,t1);}
t2=(C_word)C_a_i_bytevector(&a,1,C_fix(4));
t3=t1;
((C_proc2)(void*)(*((C_word*)t3+1)))(2,t3,(C_word)stub5043(t2));}

/* print-error in k26910 in k26907 in k26904 in k26779 in k26776 in k26773 in k26770 in k26767 in k26764 in k26761 in k26758 in k26755 in k26752 in k26749 in k21827 in k18307 in k18304 in k18301 in k18298 in k17861 in k17858 in k17855 in k17852 in k17849 in k17327 in k17324 in k16801 in k16798 in k16795 in k16792 in k16789 in k16786 in k16783 in k16780 in k16777 in k16774 in k16771 in k16768 in k16765 in k16762 in k16759 in k16756 in k16753 in k16750 in k16747 in k16744 in k16741 in k16602 in k16599 in k16596 in k16593 in k16537 in k16534 in k16531 in k16528 in k16525 in k16522 in k16519 in k16516 in k15271 in k15202 in k15009 in k15006 in k14901 in k14850 in k7607 in k7604 in k5838 in k5545 in k5542 in k5538 in k5247 in k5244 in k5241 in k5238 */
static void C_ccall f_27109(C_word c,C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word t5;
C_word ab[3],*a=ab;
if(c!=3) C_bad_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr3,(void*)f_27109,3,t0,t1,t2);}
t3=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_27114,a[2]=t1,tmp=(C_word)a,a+=3,tmp);
if(C_truep(t2)){
t4=(C_word)C_i_foreign_string_argumentp(t2);
C_trace("##sys#make-c-string");
t5=C_retrieve(lf[48]);
((C_proc3)C_retrieve_proc(t5))(3,t5,t3,t4);}
else{
t4=t3;
f_27114(2,t4,C_SCHEME_FALSE);}}

/* k27112 in print-error in k26910 in k26907 in k26904 in k26779 in k26776 in k26773 in k26770 in k26767 in k26764 in k26761 in k26758 in k26755 in k26752 in k26749 in k21827 in k18307 in k18304 in k18301 in k18298 in k17861 in k17858 in k17855 in k17852 in k17849 in k17327 in k17324 in k16801 in k16798 in k16795 in k16792 in k16789 in k16786 in k16783 in k16780 in k16777 in k16774 in k16771 in k16768 in k16765 in k16762 in k16759 in k16756 in k16753 in k16750 in k16747 in k16744 in k16741 in k16602 in k16599 in k16596 in k16593 in k16537 in k16534 in k16531 in k16528 in k16525 in k16522 in k16519 in k16516 in k15271 in k15202 in k15009 in k15006 in k14901 in k14850 in k7607 in k7604 in k5838 in k5545 in k5542 in k5538 in k5247 in k5244 in k5241 in k5238 */
static void C_ccall f_27114(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
t2=((C_word*)t0)[2];
((C_proc2)(void*)(*((C_word*)t2+1)))(2,t2,(C_word)stub5038(C_SCHEME_UNDEFINED,t1));}

/* print-message in k26910 in k26907 in k26904 in k26779 in k26776 in k26773 in k26770 in k26767 in k26764 in k26761 in k26758 in k26755 in k26752 in k26749 in k21827 in k18307 in k18304 in k18301 in k18298 in k17861 in k17858 in k17855 in k17852 in k17849 in k17327 in k17324 in k16801 in k16798 in k16795 in k16792 in k16789 in k16786 in k16783 in k16780 in k16777 in k16774 in k16771 in k16768 in k16765 in k16762 in k16759 in k16756 in k16753 in k16750 in k16747 in k16744 in k16741 in k16602 in k16599 in k16596 in k16593 in k16537 in k16534 in k16531 in k16528 in k16525 in k16522 in k16519 in k16516 in k15271 in k15202 in k15009 in k15006 in k14901 in k14850 in k7607 in k7604 in k5838 in k5545 in k5542 in k5538 in k5247 in k5244 in k5241 in k5238 */
static void C_ccall f_27095(C_word c,C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word t5;
C_word ab[3],*a=ab;
if(c!=3) C_bad_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr3,(void*)f_27095,3,t0,t1,t2);}
t3=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_27100,a[2]=t1,tmp=(C_word)a,a+=3,tmp);
if(C_truep(t2)){
t4=(C_word)C_i_foreign_string_argumentp(t2);
C_trace("##sys#make-c-string");
t5=C_retrieve(lf[48]);
((C_proc3)C_retrieve_proc(t5))(3,t5,t3,t4);}
else{
t4=t3;
f_27100(2,t4,C_SCHEME_FALSE);}}

/* k27098 in print-message in k26910 in k26907 in k26904 in k26779 in k26776 in k26773 in k26770 in k26767 in k26764 in k26761 in k26758 in k26755 in k26752 in k26749 in k21827 in k18307 in k18304 in k18301 in k18298 in k17861 in k17858 in k17855 in k17852 in k17849 in k17327 in k17324 in k16801 in k16798 in k16795 in k16792 in k16789 in k16786 in k16783 in k16780 in k16777 in k16774 in k16771 in k16768 in k16765 in k16762 in k16759 in k16756 in k16753 in k16750 in k16747 in k16744 in k16741 in k16602 in k16599 in k16596 in k16593 in k16537 in k16534 in k16531 in k16528 in k16525 in k16522 in k16519 in k16516 in k15271 in k15202 in k15009 in k15006 in k14901 in k14850 in k7607 in k7604 in k5838 in k5545 in k5542 in k5538 in k5247 in k5244 in k5241 in k5238 */
static void C_ccall f_27100(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
t2=((C_word*)t0)[2];
((C_proc2)(void*)(*((C_word*)t2+1)))(2,t2,(C_word)stub5032(C_SCHEME_UNDEFINED,t1));}

/* cm-logo in k26910 in k26907 in k26904 in k26779 in k26776 in k26773 in k26770 in k26767 in k26764 in k26761 in k26758 in k26755 in k26752 in k26749 in k21827 in k18307 in k18304 in k18301 in k18298 in k17861 in k17858 in k17855 in k17852 in k17849 in k17327 in k17324 in k16801 in k16798 in k16795 in k16792 in k16789 in k16786 in k16783 in k16780 in k16777 in k16774 in k16771 in k16768 in k16765 in k16762 in k16759 in k16756 in k16753 in k16750 in k16747 in k16744 in k16741 in k16602 in k16599 in k16596 in k16593 in k16537 in k16534 in k16531 in k16528 in k16525 in k16522 in k16519 in k16516 in k15271 in k15202 in k15009 in k15006 in k14901 in k14850 in k7607 in k7604 in k5838 in k5545 in k5542 in k5538 in k5247 in k5244 in k5241 in k5238 */
static void C_ccall f_26914(C_word c,C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word t5;
C_word ab[7],*a=ab;
if(c!=3) C_bad_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr3,(void*)f_26914,3,t0,t1,t2);}
t3=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_26968,a[2]=t1,tmp=(C_word)a,a+=3,tmp);
t4=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_26975,a[2]=t3,a[3]=t2,tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 383  make-string");
t5=*((C_word*)lf[332]+1);
((C_proc3)C_retrieve_proc(t5))(3,t5,t4,C_fix(15));}

/* k26973 in cm-logo in k26910 in k26907 in k26904 in k26779 in k26776 in k26773 in k26770 in k26767 in k26764 in k26761 in k26758 in k26755 in k26752 in k26749 in k21827 in k18307 in k18304 in k18301 in k18298 in k17861 in k17858 in k17855 in k17852 in k17849 in k17327 in k17324 in k16801 in k16798 in k16795 in k16792 in k16789 in k16786 in k16783 in k16780 in k16777 in k16774 in k16771 in k16768 in k16765 in k16762 in k16759 in k16756 in k16753 in k16750 in k16747 in k16744 in k16741 in k16602 in k16599 in k16596 in k16593 in k16537 in k16534 in k16531 in k16528 in k16525 in k16522 in k16519 in k16516 in k15271 in k15202 in k15009 in k15006 in k14901 in k14850 in k7607 in k7604 in k5838 in k5545 in k5542 in k5538 in k5247 in k5244 in k5241 in k5238 */
static void C_ccall f_26975(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_26975,2,t0,t1);}
t2=C_SCHEME_UNDEFINED;
t3=(*a=C_VECTOR_TYPE|1,a[1]=t2,tmp=(C_word)a,a+=2,tmp);
t4=C_set_block_item(t3,0,(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_26977,a[2]=((C_word*)t0)[3],a[3]=t3,a[4]=((C_word)li411),tmp=(C_word)a,a+=5,tmp));
t5=((C_word*)t3)[1];
f_26977(t5,((C_word*)t0)[2],lf[619],t1,C_fix(0));}

/* do5007 in k26973 in cm-logo in k26910 in k26907 in k26904 in k26779 in k26776 in k26773 in k26770 in k26767 in k26764 in k26761 in k26758 in k26755 in k26752 in k26749 in k21827 in k18307 in k18304 in k18301 in k18298 in k17861 in k17858 in k17855 in k17852 in k17849 in k17327 in k17324 in k16801 in k16798 in k16795 in k16792 in k16789 in k16786 in k16783 in k16780 in k16777 in k16774 in k16771 in k16768 in k16765 in k16762 in k16759 in k16756 in k16753 in k16750 in k16747 in k16744 in k16741 in k16602 in k16599 in k16596 in k16593 in k16537 in k16534 in k16531 in k16528 in k16525 in k16522 in k16519 in k16516 in k15271 in k15202 in k15009 in k15006 in k14901 in k14850 in k7607 in k7604 in k5838 in k5545 in k5542 in k5538 in k5247 in k5244 in k5241 in k5238 */
static void C_fcall f_26977(C_word t0,C_word t1,C_word t2,C_word t3,C_word t4){
C_word tmp;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word ab[19],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_26977,NULL,5,t0,t1,t2,t3,t4);}
if(C_truep((C_word)C_i_nequalp(t4,C_fix(7)))){
t5=t1;
((C_proc2)(void*)(*((C_word*)t5+1)))(2,t5,C_SCHEME_FALSE);}
else{
t5=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_26987,a[2]=t3,a[3]=t2,a[4]=t1,a[5]=((C_word*)t0)[3],a[6]=t4,tmp=(C_word)a,a+=7,tmp);
t6=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_27001,a[2]=t5,tmp=(C_word)a,a+=3,tmp);
t7=C_SCHEME_UNDEFINED;
t8=(*a=C_VECTOR_TYPE|1,a[1]=t7,tmp=(C_word)a,a+=2,tmp);
t9=C_set_block_item(t8,0,(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_27003,a[2]=t8,a[3]=((C_word*)t0)[2],a[4]=t3,a[5]=t4,a[6]=((C_word)li410),tmp=(C_word)a,a+=7,tmp));
t10=((C_word*)t8)[1];
f_27003(t10,t6,C_fix(0));}}

/* do5021 in do5007 in k26973 in cm-logo in k26910 in k26907 in k26904 in k26779 in k26776 in k26773 in k26770 in k26767 in k26764 in k26761 in k26758 in k26755 in k26752 in k26749 in k21827 in k18307 in k18304 in k18301 in k18298 in k17861 in k17858 in k17855 in k17852 in k17849 in k17327 in k17324 in k16801 in k16798 in k16795 in k16792 in k16789 in k16786 in k16783 in k16780 in k16777 in k16774 in k16771 in k16768 in k16765 in k16762 in k16759 in k16756 in k16753 in k16750 in k16747 in k16744 in k16741 in k16602 in k16599 in k16596 in k16593 in k16537 in k16534 in k16531 in k16528 in k16525 in k16522 in k16519 in k16516 in k15271 in k15202 in k15009 in k15006 in k14901 in k14850 in k7607 in k7604 in k5838 in k5545 in k5542 in k5538 in k5247 in k5244 in k5241 in k5238 */
static void C_fcall f_27003(C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word t14;
C_word t15;
C_word t16;
C_word t17;
C_word ab[38],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_27003,NULL,3,t0,t1,t2);}
if(C_truep((C_word)C_i_nequalp(t2,C_fix(15)))){
if(C_truep((C_word)C_i_nequalp(((C_word*)t0)[5],C_fix(3)))){
t3=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_27023,a[2]=((C_word*)t0)[4],a[3]=t1,tmp=(C_word)a,a+=4,tmp);
t4=((C_word*)t0)[3];
t5=(*a=C_VECTOR_TYPE|1,a[1]=t4,tmp=(C_word)a,a+=2,tmp);
t6=C_fix(0);
t7=(*a=C_VECTOR_TYPE|1,a[1]=t6,tmp=(C_word)a,a+=2,tmp);
t8=C_fix(0);
t9=(*a=C_VECTOR_TYPE|1,a[1]=t8,tmp=(C_word)a,a+=2,tmp);
t10=C_fix(0);
t11=(*a=C_VECTOR_TYPE|1,a[1]=t10,tmp=(C_word)a,a+=2,tmp);
t12=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_26961,a[2]=t3,a[3]=t11,a[4]=t9,a[5]=t5,a[6]=t7,tmp=(C_word)a,a+=7,tmp);
t13=(C_word)C_a_i_divide(&a,2,((C_word*)t5)[1],C_fix(10000));
C_trace("ChickenBridge.scm: 375  floor");
t14=*((C_word*)lf[132]+1);
((C_proc3)C_retrieve_proc(t14))(3,t14,t12,t13);}
else{
C_trace("ChickenBridge.scm: 390  string-append");
t3=*((C_word*)lf[124]+1);
((C_proc4)C_retrieve_proc(t3))(4,t3,t1,((C_word*)t0)[4],lf[618]);}}
else{
t3=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_27040,a[2]=t1,a[3]=((C_word*)t0)[2],a[4]=t2,a[5]=((C_word*)t0)[4],tmp=(C_word)a,a+=6,tmp);
t4=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_27043,a[2]=((C_word*)t0)[5],a[3]=t2,a[4]=t3,tmp=(C_word)a,a+=5,tmp);
t5=(C_word)C_a_i_minus(&a,2,t2,((C_word*)t0)[5]);
C_trace("ChickenBridge.scm: 392  <=");
C_less_or_equal_p(5,0,t4,C_fix(2),t5,C_fix(4));}}

/* k27041 in do5021 in do5007 in k26973 in cm-logo in k26910 in k26907 in k26904 in k26779 in k26776 in k26773 in k26770 in k26767 in k26764 in k26761 in k26758 in k26755 in k26752 in k26749 in k21827 in k18307 in k18304 in k18301 in k18298 in k17861 in k17858 in k17855 in k17852 in k17849 in k17327 in k17324 in k16801 in k16798 in k16795 in k16792 in k16789 in k16786 in k16783 in k16780 in k16777 in k16774 in k16771 in k16768 in k16765 in k16762 in k16759 in k16756 in k16753 in k16750 in k16747 in k16744 in k16741 in k16602 in k16599 in k16596 in k16593 in k16537 in k16534 in k16531 in k16528 in k16525 in k16522 in k16519 in k16516 in k15271 in k15202 in k15009 in k15006 in k14901 in k14850 in k7607 in k7604 in k5838 in k5545 in k5542 in k5538 in k5247 in k5244 in k5241 in k5238 */
static void C_ccall f_27043(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_27043,2,t0,t1);}
if(C_truep(t1)){
t2=((C_word*)t0)[4];
f_27040(t2,C_make_character(92));}
else{
t2=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_27085,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[3],tmp=(C_word)a,a+=5,tmp);
t3=(C_word)C_a_i_plus(&a,2,C_fix(13),((C_word*)t0)[2]);
C_trace("ChickenBridge.scm: 393  modulo");
t4=*((C_word*)lf[96]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,t3,C_fix(15));}}

/* k27083 in k27041 in do5021 in do5007 in k26973 in cm-logo in k26910 in k26907 in k26904 in k26779 in k26776 in k26773 in k26770 in k26767 in k26764 in k26761 in k26758 in k26755 in k26752 in k26749 in k21827 in k18307 in k18304 in k18301 in k18298 in k17861 in k17858 in k17855 in k17852 in k17849 in k17327 in k17324 in k16801 in k16798 in k16795 in k16792 in k16789 in k16786 in k16783 in k16780 in k16777 in k16774 in k16771 in k16768 in k16765 in k16762 in k16759 in k16756 in k16753 in k16750 in k16747 in k16744 in k16741 in k16602 in k16599 in k16596 in k16593 in k16537 in k16534 in k16531 in k16528 in k16525 in k16522 in k16519 in k16516 in k15271 in k15202 in k15009 in k15006 in k14901 in k14850 in k7607 in k7604 in k5838 in k5545 in k5542 in k5538 in k5247 in k5244 in k5241 in k5238 */
static void C_ccall f_27085(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[13],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_27085,2,t0,t1);}
t2=(C_word)C_a_i_minus(&a,2,C_fix(4),t1);
t3=(C_word)C_a_i_minus(&a,2,((C_word*)t0)[4],t2);
if(C_truep((C_word)C_i_nequalp(t3,C_fix(1)))){
t4=((C_word*)t0)[3];
f_27040(t4,C_make_character(47));}
else{
t4=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_27055,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[3],tmp=(C_word)a,a+=5,tmp);
C_trace("ChickenBridge.scm: 395  <=");
C_less_or_equal_p(5,0,t4,C_fix(1),((C_word*)t0)[2],C_fix(5));}}

/* k27053 in k27083 in k27041 in do5021 in do5007 in k26973 in cm-logo in k26910 in k26907 in k26904 in k26779 in k26776 in k26773 in k26770 in k26767 in k26764 in k26761 in k26758 in k26755 in k26752 in k26749 in k21827 in k18307 in k18304 in k18301 in k18298 in k17861 in k17858 in k17855 in k17852 in k17849 in k17327 in k17324 in k16801 in k16798 in k16795 in k16792 in k16789 in k16786 in k16783 in k16780 in k16777 in k16774 in k16771 in k16768 in k16765 in k16762 in k16759 in k16756 in k16753 in k16750 in k16747 in k16744 in k16741 in k16602 in k16599 in k16596 in k16593 in k16537 in k16534 in k16531 in k16528 in k16525 in k16522 in k16519 in k16516 in k15271 in k15202 in k15009 in k15006 in k14901 in k14850 in k7607 in k7604 in k5838 in k5545 in k5542 in k5538 in k5247 in k5244 in k5241 in k5238 */
static void C_ccall f_27055(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[12],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_27055,2,t0,t1);}
if(C_truep(t1)){
t2=((C_word*)t0)[4];
f_27040(t2,C_make_character(45));}
else{
t2=(C_word)C_a_i_minus(&a,2,((C_word*)t0)[3],C_fix(6));
t3=(C_word)C_a_i_minus(&a,2,((C_word*)t0)[2],C_fix(3));
t4=(C_word)C_a_i_times(&a,2,t2,t3);
t5=(C_word)C_i_nequalp(t4,C_fix(15));
t6=((C_word*)t0)[4];
f_27040(t6,(C_truep(t5)?C_make_character(47):C_make_character(32)));}}

/* k27038 in do5021 in do5007 in k26973 in cm-logo in k26910 in k26907 in k26904 in k26779 in k26776 in k26773 in k26770 in k26767 in k26764 in k26761 in k26758 in k26755 in k26752 in k26749 in k21827 in k18307 in k18304 in k18301 in k18298 in k17861 in k17858 in k17855 in k17852 in k17849 in k17327 in k17324 in k16801 in k16798 in k16795 in k16792 in k16789 in k16786 in k16783 in k16780 in k16777 in k16774 in k16771 in k16768 in k16765 in k16762 in k16759 in k16756 in k16753 in k16750 in k16747 in k16744 in k16741 in k16602 in k16599 in k16596 in k16593 in k16537 in k16534 in k16531 in k16528 in k16525 in k16522 in k16519 in k16516 in k15271 in k15202 in k15009 in k15006 in k14901 in k14850 in k7607 in k7604 in k5838 in k5545 in k5542 in k5538 in k5247 in k5244 in k5241 in k5238 */
static void C_fcall f_27040(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[4],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_27040,NULL,2,t0,t1);}
t2=(C_word)C_i_string_set(((C_word*)t0)[5],((C_word*)t0)[4],t1);
t3=(C_word)C_a_i_plus(&a,2,((C_word*)t0)[4],C_fix(1));
t4=((C_word*)((C_word*)t0)[3])[1];
f_27003(t4,((C_word*)t0)[2],t3);}

/* k26959 in do5021 in do5007 in k26973 in cm-logo in k26910 in k26907 in k26904 in k26779 in k26776 in k26773 in k26770 in k26767 in k26764 in k26761 in k26758 in k26755 in k26752 in k26749 in k21827 in k18307 in k18304 in k18301 in k18298 in k17861 in k17858 in k17855 in k17852 in k17849 in k17327 in k17324 in k16801 in k16798 in k16795 in k16792 in k16789 in k16786 in k16783 in k16780 in k16777 in k16774 in k16771 in k16768 in k16765 in k16762 in k16759 in k16756 in k16753 in k16750 in k16747 in k16744 in k16741 in k16602 in k16599 in k16596 in k16593 in k16537 in k16534 in k16531 in k16528 in k16525 in k16522 in k16519 in k16516 in k15271 in k15202 in k15009 in k15006 in k14901 in k14850 in k7607 in k7604 in k5838 in k5545 in k5542 in k5538 in k5247 in k5244 in k5241 in k5238 */
static void C_ccall f_26961(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_26961,2,t0,t1);}
t2=(C_word)C_i_inexact_to_exact(t1);
t3=C_mutate(((C_word *)((C_word*)t0)[6])+1,t2);
t4=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_26926,a[2]=((C_word*)t0)[6],a[3]=((C_word*)t0)[2],a[4]=((C_word*)t0)[3],a[5]=((C_word*)t0)[4],a[6]=((C_word*)t0)[5],tmp=(C_word)a,a+=7,tmp);
C_trace("ChickenBridge.scm: 376  modulo");
t5=*((C_word*)lf[96]+1);
((C_proc4)C_retrieve_proc(t5))(4,t5,t4,((C_word*)((C_word*)t0)[5])[1],C_fix(10000));}

/* k26924 in k26959 in do5021 in do5007 in k26973 in cm-logo in k26910 in k26907 in k26904 in k26779 in k26776 in k26773 in k26770 in k26767 in k26764 in k26761 in k26758 in k26755 in k26752 in k26749 in k21827 in k18307 in k18304 in k18301 in k18298 in k17861 in k17858 in k17855 in k17852 in k17849 in k17327 in k17324 in k16801 in k16798 in k16795 in k16792 in k16789 in k16786 in k16783 in k16780 in k16777 in k16774 in k16771 in k16768 in k16765 in k16762 in k16759 in k16756 in k16753 in k16750 in k16747 in k16744 in k16741 in k16602 in k16599 in k16596 in k16593 in k16537 in k16534 in k16531 in k16528 in k16525 in k16522 in k16519 in k16516 in k15271 in k15202 in k15009 in k15006 in k14901 in k14850 in k7607 in k7604 in k5838 in k5545 in k5542 in k5538 in k5247 in k5244 in k5241 in k5238 */
static void C_ccall f_26926(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[11],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_26926,2,t0,t1);}
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_26953,a[2]=((C_word*)t0)[6],a[3]=((C_word*)t0)[2],a[4]=((C_word*)t0)[3],a[5]=((C_word*)t0)[4],a[6]=((C_word*)t0)[5],tmp=(C_word)a,a+=7,tmp);
t4=(C_word)C_a_i_divide(&a,2,((C_word*)((C_word*)t0)[6])[1],C_fix(100));
C_trace("ChickenBridge.scm: 377  floor");
t5=*((C_word*)lf[132]+1);
((C_proc3)C_retrieve_proc(t5))(3,t5,t3,t4);}

/* k26951 in k26924 in k26959 in do5021 in do5007 in k26973 in cm-logo in k26910 in k26907 in k26904 in k26779 in k26776 in k26773 in k26770 in k26767 in k26764 in k26761 in k26758 in k26755 in k26752 in k26749 in k21827 in k18307 in k18304 in k18301 in k18298 in k17861 in k17858 in k17855 in k17852 in k17849 in k17327 in k17324 in k16801 in k16798 in k16795 in k16792 in k16789 in k16786 in k16783 in k16780 in k16777 in k16774 in k16771 in k16768 in k16765 in k16762 in k16759 in k16756 in k16753 in k16750 in k16747 in k16744 in k16741 in k16602 in k16599 in k16596 in k16593 in k16537 in k16534 in k16531 in k16528 in k16525 in k16522 in k16519 in k16516 in k15271 in k15202 in k15009 in k15006 in k14901 in k14850 in k7607 in k7604 in k5838 in k5545 in k5542 in k5538 in k5247 in k5244 in k5241 in k5238 */
static void C_ccall f_26953(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[6],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_26953,2,t0,t1);}
t2=(C_word)C_i_inexact_to_exact(t1);
t3=C_mutate(((C_word *)((C_word*)t0)[6])+1,t2);
t4=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_26934,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[6],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],tmp=(C_word)a,a+=6,tmp);
C_trace("ChickenBridge.scm: 378  modulo");
t5=*((C_word*)lf[96]+1);
((C_proc4)C_retrieve_proc(t5))(4,t5,t4,((C_word*)((C_word*)t0)[2])[1],C_fix(100));}

/* k26932 in k26951 in k26924 in k26959 in do5021 in do5007 in k26973 in cm-logo in k26910 in k26907 in k26904 in k26779 in k26776 in k26773 in k26770 in k26767 in k26764 in k26761 in k26758 in k26755 in k26752 in k26749 in k21827 in k18307 in k18304 in k18301 in k18298 in k17861 in k17858 in k17855 in k17852 in k17849 in k17327 in k17324 in k16801 in k16798 in k16795 in k16792 in k16789 in k16786 in k16783 in k16780 in k16777 in k16774 in k16771 in k16768 in k16765 in k16762 in k16759 in k16756 in k16753 in k16750 in k16747 in k16744 in k16741 in k16602 in k16599 in k16596 in k16593 in k16537 in k16534 in k16531 in k16528 in k16525 in k16522 in k16519 in k16516 in k15271 in k15202 in k15009 in k15006 in k14901 in k14850 in k7607 in k7604 in k5838 in k5545 in k5542 in k5538 in k5247 in k5244 in k5241 in k5238 */
static void C_ccall f_26934(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[5],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_26934,2,t0,t1);}
t2=C_mutate(((C_word *)((C_word*)t0)[5])+1,t1);
t3=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_26941,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[5],a[4]=((C_word*)t0)[4],tmp=(C_word)a,a+=5,tmp);
C_trace("ChickenBridge.scm: 379  number->string");
C_number_to_string(3,0,t3,((C_word*)((C_word*)t0)[2])[1]);}

/* k26939 in k26932 in k26951 in k26924 in k26959 in do5021 in do5007 in k26973 in cm-logo in k26910 in k26907 in k26904 in k26779 in k26776 in k26773 in k26770 in k26767 in k26764 in k26761 in k26758 in k26755 in k26752 in k26749 in k21827 in k18307 in k18304 in k18301 in k18298 in k17861 in k17858 in k17855 in k17852 in k17849 in k17327 in k17324 in k16801 in k16798 in k16795 in k16792 in k16789 in k16786 in k16783 in k16780 in k16777 in k16774 in k16771 in k16768 in k16765 in k16762 in k16759 in k16756 in k16753 in k16750 in k16747 in k16744 in k16741 in k16602 in k16599 in k16596 in k16593 in k16537 in k16534 in k16531 in k16528 in k16525 in k16522 in k16519 in k16516 in k15271 in k15202 in k15009 in k15006 in k14901 in k14850 in k7607 in k7604 in k5838 in k5545 in k5542 in k5538 in k5247 in k5244 in k5241 in k5238 */
static void C_ccall f_26941(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[5],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_26941,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_26945,a[2]=((C_word*)t0)[3],a[3]=t1,a[4]=((C_word*)t0)[4],tmp=(C_word)a,a+=5,tmp);
C_trace("ChickenBridge.scm: 380  number->string");
C_number_to_string(3,0,t2,((C_word*)((C_word*)t0)[2])[1]);}

/* k26943 in k26939 in k26932 in k26951 in k26924 in k26959 in do5021 in do5007 in k26973 in cm-logo in k26910 in k26907 in k26904 in k26779 in k26776 in k26773 in k26770 in k26767 in k26764 in k26761 in k26758 in k26755 in k26752 in k26749 in k21827 in k18307 in k18304 in k18301 in k18298 in k17861 in k17858 in k17855 in k17852 in k17849 in k17327 in k17324 in k16801 in k16798 in k16795 in k16792 in k16789 in k16786 in k16783 in k16780 in k16777 in k16774 in k16771 in k16768 in k16765 in k16762 in k16759 in k16756 in k16753 in k16750 in k16747 in k16744 in k16741 in k16602 in k16599 in k16596 in k16593 in k16537 in k16534 in k16531 in k16528 in k16525 in k16522 in k16519 in k16516 in k15271 in k15202 in k15009 in k15006 in k14901 in k14850 in k7607 in k7604 in k5838 in k5545 in k5542 in k5538 in k5247 in k5244 in k5241 in k5238 */
static void C_ccall f_26945(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[5],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_26945,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_26949,a[2]=t1,a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],tmp=(C_word)a,a+=5,tmp);
C_trace("ChickenBridge.scm: 381  number->string");
C_number_to_string(3,0,t2,((C_word*)((C_word*)t0)[2])[1]);}

/* k26947 in k26943 in k26939 in k26932 in k26951 in k26924 in k26959 in do5021 in do5007 in k26973 in cm-logo in k26910 in k26907 in k26904 in k26779 in k26776 in k26773 in k26770 in k26767 in k26764 in k26761 in k26758 in k26755 in k26752 in k26749 in k21827 in k18307 in k18304 in k18301 in k18298 in k17861 in k17858 in k17855 in k17852 in k17849 in k17327 in k17324 in k16801 in k16798 in k16795 in k16792 in k16789 in k16786 in k16783 in k16780 in k16777 in k16774 in k16771 in k16768 in k16765 in k16762 in k16759 in k16756 in k16753 in k16750 in k16747 in k16744 in k16741 in k16602 in k16599 in k16596 in k16593 in k16537 in k16534 in k16531 in k16528 in k16525 in k16522 in k16519 in k16516 in k15271 in k15202 in k15009 in k15006 in k14901 in k14850 in k7607 in k7604 in k5838 in k5545 in k5542 in k5538 in k5247 in k5244 in k5241 in k5238 */
static void C_ccall f_26949(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 379  string-append");
t2=*((C_word*)lf[124]+1);
((C_proc8)C_retrieve_proc(t2))(8,t2,((C_word*)t0)[4],lf[615],((C_word*)t0)[3],lf[616],((C_word*)t0)[2],lf[617],t1);}

/* k27021 in do5021 in do5007 in k26973 in cm-logo in k26910 in k26907 in k26904 in k26779 in k26776 in k26773 in k26770 in k26767 in k26764 in k26761 in k26758 in k26755 in k26752 in k26749 in k21827 in k18307 in k18304 in k18301 in k18298 in k17861 in k17858 in k17855 in k17852 in k17849 in k17327 in k17324 in k16801 in k16798 in k16795 in k16792 in k16789 in k16786 in k16783 in k16780 in k16777 in k16774 in k16771 in k16768 in k16765 in k16762 in k16759 in k16756 in k16753 in k16750 in k16747 in k16744 in k16741 in k16602 in k16599 in k16596 in k16593 in k16537 in k16534 in k16531 in k16528 in k16525 in k16522 in k16519 in k16516 in k15271 in k15202 in k15009 in k15006 in k14901 in k14850 in k7607 in k7604 in k5838 in k5545 in k5542 in k5538 in k5247 in k5244 in k5241 in k5238 */
static void C_ccall f_27023(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 389  string-append");
t2=*((C_word*)lf[124]+1);
((C_proc6)C_retrieve_proc(t2))(6,t2,((C_word*)t0)[3],((C_word*)t0)[2],lf[613],t1,lf[614]);}

/* k26999 in do5007 in k26973 in cm-logo in k26910 in k26907 in k26904 in k26779 in k26776 in k26773 in k26770 in k26767 in k26764 in k26761 in k26758 in k26755 in k26752 in k26749 in k21827 in k18307 in k18304 in k18301 in k18298 in k17861 in k17858 in k17855 in k17852 in k17849 in k17327 in k17324 in k16801 in k16798 in k16795 in k16792 in k16789 in k16786 in k16783 in k16780 in k16777 in k16774 in k16771 in k16768 in k16765 in k16762 in k16759 in k16756 in k16753 in k16750 in k16747 in k16744 in k16741 in k16602 in k16599 in k16596 in k16593 in k16537 in k16534 in k16531 in k16528 in k16525 in k16522 in k16519 in k16516 in k15271 in k15202 in k15009 in k15006 in k14901 in k14850 in k7607 in k7604 in k5838 in k5545 in k5542 in k5538 in k5247 in k5244 in k5241 in k5238 */
static void C_ccall f_27001(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 386  printf");
t2=C_retrieve(lf[307]);
((C_proc3)C_retrieve_proc(t2))(3,t2,((C_word*)t0)[2],t1);}

/* k26985 in do5007 in k26973 in cm-logo in k26910 in k26907 in k26904 in k26779 in k26776 in k26773 in k26770 in k26767 in k26764 in k26761 in k26758 in k26755 in k26752 in k26749 in k21827 in k18307 in k18304 in k18301 in k18298 in k17861 in k17858 in k17855 in k17852 in k17849 in k17327 in k17324 in k16801 in k16798 in k16795 in k16792 in k16789 in k16786 in k16783 in k16780 in k16777 in k16774 in k16771 in k16768 in k16765 in k16762 in k16759 in k16756 in k16753 in k16750 in k16747 in k16744 in k16741 in k16602 in k16599 in k16596 in k16593 in k16537 in k16534 in k16531 in k16528 in k16525 in k16522 in k16519 in k16516 in k15271 in k15202 in k15009 in k15006 in k14901 in k14850 in k7607 in k7604 in k5838 in k5545 in k5542 in k5538 in k5247 in k5244 in k5241 in k5238 */
static void C_ccall f_26987(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_26987,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_26990,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],tmp=(C_word)a,a+=7,tmp);
C_trace("ChickenBridge.scm: 398  printf");
t3=C_retrieve(lf[307]);
((C_proc3)C_retrieve_proc(t3))(3,t3,t2,((C_word*)t0)[3]);}

/* k26988 in k26985 in do5007 in k26973 in cm-logo in k26910 in k26907 in k26904 in k26779 in k26776 in k26773 in k26770 in k26767 in k26764 in k26761 in k26758 in k26755 in k26752 in k26749 in k21827 in k18307 in k18304 in k18301 in k18298 in k17861 in k17858 in k17855 in k17852 in k17849 in k17327 in k17324 in k16801 in k16798 in k16795 in k16792 in k16789 in k16786 in k16783 in k16780 in k16777 in k16774 in k16771 in k16768 in k16765 in k16762 in k16759 in k16756 in k16753 in k16750 in k16747 in k16744 in k16741 in k16602 in k16599 in k16596 in k16593 in k16537 in k16534 in k16531 in k16528 in k16525 in k16522 in k16519 in k16516 in k15271 in k15202 in k15009 in k15006 in k14901 in k14850 in k7607 in k7604 in k5838 in k5545 in k5542 in k5538 in k5247 in k5244 in k5241 in k5238 */
static void C_ccall f_26990(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[4],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_26990,2,t0,t1);}
t2=(C_word)C_a_i_plus(&a,2,((C_word*)t0)[6],C_fix(1));
t3=((C_word*)((C_word*)t0)[5])[1];
f_26977(t3,((C_word*)t0)[4],((C_word*)t0)[3],((C_word*)t0)[2],t2);}

/* k26966 in cm-logo in k26910 in k26907 in k26904 in k26779 in k26776 in k26773 in k26770 in k26767 in k26764 in k26761 in k26758 in k26755 in k26752 in k26749 in k21827 in k18307 in k18304 in k18301 in k18298 in k17861 in k17858 in k17855 in k17852 in k17849 in k17327 in k17324 in k16801 in k16798 in k16795 in k16792 in k16789 in k16786 in k16783 in k16780 in k16777 in k16774 in k16771 in k16768 in k16765 in k16762 in k16759 in k16756 in k16753 in k16750 in k16747 in k16744 in k16741 in k16602 in k16599 in k16596 in k16593 in k16537 in k16534 in k16531 in k16528 in k16525 in k16522 in k16519 in k16516 in k15271 in k15202 in k15009 in k15006 in k14901 in k14850 in k7607 in k7604 in k5838 in k5545 in k5542 in k5538 in k5247 in k5244 in k5241 in k5238 */
static void C_ccall f_26968(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 399  values");
C_values(2,0,((C_word*)t0)[2]);}

/* cs:clear in k26779 in k26776 in k26773 in k26770 in k26767 in k26764 in k26761 in k26758 in k26755 in k26752 in k26749 in k21827 in k18307 in k18304 in k18301 in k18298 in k17861 in k17858 in k17855 in k17852 in k17849 in k17327 in k17324 in k16801 in k16798 in k16795 in k16792 in k16789 in k16786 in k16783 in k16780 in k16777 in k16774 in k16771 in k16768 in k16765 in k16762 in k16759 in k16756 in k16753 in k16750 in k16747 in k16744 in k16741 in k16602 in k16599 in k16596 in k16593 in k16537 in k16534 in k16531 in k16528 in k16525 in k16522 in k16519 in k16516 in k15271 in k15202 in k15009 in k15006 in k14901 in k14850 in k7607 in k7604 in k5838 in k5545 in k5542 in k5538 in k5247 in k5244 in k5241 in k5238 */
static void C_ccall f_26897(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word ab[3],*a=ab;
if(c!=2) C_bad_argc_2(c,2,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_26897,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_26902,a[2]=((C_word)li408),tmp=(C_word)a,a+=3,tmp);
((C_proc2)(void*)(*((C_word*)t2+1)))(2,t2,t1);}

/* f_26902 in cs:clear in k26779 in k26776 in k26773 in k26770 in k26767 in k26764 in k26761 in k26758 in k26755 in k26752 in k26749 in k21827 in k18307 in k18304 in k18301 in k18298 in k17861 in k17858 in k17855 in k17852 in k17849 in k17327 in k17324 in k16801 in k16798 in k16795 in k16792 in k16789 in k16786 in k16783 in k16780 in k16777 in k16774 in k16771 in k16768 in k16765 in k16762 in k16759 in k16756 in k16753 in k16750 in k16747 in k16744 in k16741 in k16602 in k16599 in k16596 in k16593 in k16537 in k16534 in k16531 in k16528 in k16525 in k16522 in k16519 in k16516 in k15271 in k15202 in k15009 in k15006 in k14901 in k14850 in k7607 in k7604 in k5838 in k5545 in k5542 in k5538 in k5247 in k5244 in k5241 in k5238 */
static void C_ccall f_26902(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
if(c!=2) C_bad_argc_2(c,2,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_26902,2,t0,t1);}
t2=t1;
((C_proc2)(void*)(*((C_word*)t2+1)))(2,t2,(C_word)stub4999(C_SCHEME_UNDEFINED));}

/* cs:f in k26779 in k26776 in k26773 in k26770 in k26767 in k26764 in k26761 in k26758 in k26755 in k26752 in k26749 in k21827 in k18307 in k18304 in k18301 in k18298 in k17861 in k17858 in k17855 in k17852 in k17849 in k17327 in k17324 in k16801 in k16798 in k16795 in k16792 in k16789 in k16786 in k16783 in k16780 in k16777 in k16774 in k16771 in k16768 in k16765 in k16762 in k16759 in k16756 in k16753 in k16750 in k16747 in k16744 in k16741 in k16602 in k16599 in k16596 in k16593 in k16537 in k16534 in k16531 in k16528 in k16525 in k16522 in k16519 in k16516 in k15271 in k15202 in k15009 in k15006 in k14901 in k14850 in k7607 in k7604 in k5838 in k5545 in k5542 in k5538 in k5247 in k5244 in k5241 in k5238 */
static void C_ccall f_26840(C_word c,C_word t0,C_word t1,...){
C_word tmp;
C_word t2;
va_list v;
C_word *a,c2=c;
C_save_rest(t1,c2,2);
C_check_for_interrupt;
if(!C_demand(c*C_SIZEOF_PAIR+13)){
C_save_and_reclaim((void*)tr2r,(void*)f_26840r,2,t0,t1);}
else{
a=C_alloc((c-2)*3);
t2=C_restore_rest(a,C_rest_count(0));
f_26840r(t0,t1,t2);}}

static void C_ccall f_26840r(C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word *a=C_alloc(13);
t3=(*a=C_VECTOR_TYPE|1,a[1]=t2,tmp=(C_word)a,a+=2,tmp);
t4=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_26844,a[2]=t1,tmp=(C_word)a,a+=3,tmp);
if(C_truep((C_word)C_i_nullp(((C_word*)t3)[1]))){
t5=t4;
f_26844(2,t5,C_SCHEME_UNDEFINED);}
else{
t5=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_26853,a[2]=t4,a[3]=t3,tmp=(C_word)a,a+=4,tmp);
t6=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_26873,a[2]=t5,a[3]=t3,tmp=(C_word)a,a+=4,tmp);
t7=(C_word)C_i_cdr(((C_word*)t3)[1]);
if(C_truep((C_word)C_i_nullp(t7))){
t8=(C_word)C_i_car(((C_word*)t3)[1]);
t9=t6;
f_26873(t9,(C_word)C_i_pairp(t8));}
else{
t8=t6;
f_26873(t8,C_SCHEME_FALSE);}}}

/* k26871 in cs:f in k26779 in k26776 in k26773 in k26770 in k26767 in k26764 in k26761 in k26758 in k26755 in k26752 in k26749 in k21827 in k18307 in k18304 in k18301 in k18298 in k17861 in k17858 in k17855 in k17852 in k17849 in k17327 in k17324 in k16801 in k16798 in k16795 in k16792 in k16789 in k16786 in k16783 in k16780 in k16777 in k16774 in k16771 in k16768 in k16765 in k16762 in k16759 in k16756 in k16753 in k16750 in k16747 in k16744 in k16741 in k16602 in k16599 in k16596 in k16593 in k16537 in k16534 in k16531 in k16528 in k16525 in k16522 in k16519 in k16516 in k15271 in k15202 in k15009 in k15006 in k14901 in k14850 in k7607 in k7604 in k5838 in k5545 in k5542 in k5538 in k5247 in k5244 in k5241 in k5238 */
static void C_fcall f_26873(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word *a;
if(C_truep(t1)){
t2=(C_word)C_i_car(((C_word*)((C_word*)t0)[3])[1]);
t3=C_mutate(((C_word *)((C_word*)t0)[3])+1,t2);
t4=((C_word*)t0)[2];
f_26853(t4,t3);}
else{
t2=((C_word*)t0)[2];
f_26853(t2,C_SCHEME_UNDEFINED);}}

/* k26851 in cs:f in k26779 in k26776 in k26773 in k26770 in k26767 in k26764 in k26761 in k26758 in k26755 in k26752 in k26749 in k21827 in k18307 in k18304 in k18301 in k18298 in k17861 in k17858 in k17855 in k17852 in k17849 in k17327 in k17324 in k16801 in k16798 in k16795 in k16792 in k16789 in k16786 in k16783 in k16780 in k16777 in k16774 in k16771 in k16768 in k16765 in k16762 in k16759 in k16756 in k16753 in k16750 in k16747 in k16744 in k16741 in k16602 in k16599 in k16596 in k16593 in k16537 in k16534 in k16531 in k16528 in k16525 in k16522 in k16519 in k16516 in k15271 in k15202 in k15009 in k15006 in k14901 in k14850 in k7607 in k7604 in k5838 in k5545 in k5542 in k5538 in k5247 in k5244 in k5241 in k5238 */
static void C_fcall f_26853(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[3],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_26853,NULL,2,t0,t1);}
t2=(C_word)C_i_length(((C_word*)((C_word*)t0)[3])[1]);
t3=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_26861,a[2]=((C_word)li406),tmp=(C_word)a,a+=3,tmp);
((C_proc5)(void*)(*((C_word*)t3+1)))(5,t3,((C_word*)t0)[2],C_fix(2),t2,((C_word*)((C_word*)t0)[3])[1]);}

/* f_26861 in k26851 in cs:f in k26779 in k26776 in k26773 in k26770 in k26767 in k26764 in k26761 in k26758 in k26755 in k26752 in k26749 in k21827 in k18307 in k18304 in k18301 in k18298 in k17861 in k17858 in k17855 in k17852 in k17849 in k17327 in k17324 in k16801 in k16798 in k16795 in k16792 in k16789 in k16786 in k16783 in k16780 in k16777 in k16774 in k16771 in k16768 in k16765 in k16762 in k16759 in k16756 in k16753 in k16750 in k16747 in k16744 in k16741 in k16602 in k16599 in k16596 in k16593 in k16537 in k16534 in k16531 in k16528 in k16525 in k16522 in k16519 in k16516 in k15271 in k15202 in k15009 in k15006 in k14901 in k14850 in k7607 in k7604 in k5838 in k5545 in k5542 in k5538 in k5247 in k5244 in k5241 in k5238 */
static void C_ccall f_26861(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4){
C_word tmp;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
if(c!=5) C_bad_argc_2(c,5,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr5,(void*)f_26861,5,t0,t1,t2,t3,t4);}
t5=(C_word)C_i_foreign_fixnum_argumentp(t2);
t6=(C_word)C_i_foreign_fixnum_argumentp(t3);
t7=t1;
((C_proc2)(void*)(*((C_word*)t7+1)))(2,t7,(C_word)stub4992(C_SCHEME_UNDEFINED,t5,t6,t4));}

/* k26842 in cs:f in k26779 in k26776 in k26773 in k26770 in k26767 in k26764 in k26761 in k26758 in k26755 in k26752 in k26749 in k21827 in k18307 in k18304 in k18301 in k18298 in k17861 in k17858 in k17855 in k17852 in k17849 in k17327 in k17324 in k16801 in k16798 in k16795 in k16792 in k16789 in k16786 in k16783 in k16780 in k16777 in k16774 in k16771 in k16768 in k16765 in k16762 in k16759 in k16756 in k16753 in k16750 in k16747 in k16744 in k16741 in k16602 in k16599 in k16596 in k16593 in k16537 in k16534 in k16531 in k16528 in k16525 in k16522 in k16519 in k16516 in k15271 in k15202 in k15009 in k15006 in k14901 in k14850 in k7607 in k7604 in k5838 in k5545 in k5542 in k5538 in k5247 in k5244 in k5241 in k5238 */
static void C_ccall f_26844(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 367  values");
C_values(2,0,((C_word*)t0)[2]);}

/* cs:i in k26779 in k26776 in k26773 in k26770 in k26767 in k26764 in k26761 in k26758 in k26755 in k26752 in k26749 in k21827 in k18307 in k18304 in k18301 in k18298 in k17861 in k17858 in k17855 in k17852 in k17849 in k17327 in k17324 in k16801 in k16798 in k16795 in k16792 in k16789 in k16786 in k16783 in k16780 in k16777 in k16774 in k16771 in k16768 in k16765 in k16762 in k16759 in k16756 in k16753 in k16750 in k16747 in k16744 in k16741 in k16602 in k16599 in k16596 in k16593 in k16537 in k16534 in k16531 in k16528 in k16525 in k16522 in k16519 in k16516 in k15271 in k15202 in k15009 in k15006 in k14901 in k14850 in k7607 in k7604 in k5838 in k5545 in k5542 in k5538 in k5247 in k5244 in k5241 in k5238 */
static void C_ccall f_26783(C_word c,C_word t0,C_word t1,...){
C_word tmp;
C_word t2;
va_list v;
C_word *a,c2=c;
C_save_rest(t1,c2,2);
C_check_for_interrupt;
if(!C_demand(c*C_SIZEOF_PAIR+13)){
C_save_and_reclaim((void*)tr2r,(void*)f_26783r,2,t0,t1);}
else{
a=C_alloc((c-2)*3);
t2=C_restore_rest(a,C_rest_count(0));
f_26783r(t0,t1,t2);}}

static void C_ccall f_26783r(C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word *a=C_alloc(13);
t3=(*a=C_VECTOR_TYPE|1,a[1]=t2,tmp=(C_word)a,a+=2,tmp);
t4=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_26787,a[2]=t1,tmp=(C_word)a,a+=3,tmp);
if(C_truep((C_word)C_i_nullp(((C_word*)t3)[1]))){
t5=t4;
f_26787(2,t5,C_SCHEME_UNDEFINED);}
else{
t5=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_26796,a[2]=t4,a[3]=t3,tmp=(C_word)a,a+=4,tmp);
t6=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_26816,a[2]=t5,a[3]=t3,tmp=(C_word)a,a+=4,tmp);
t7=(C_word)C_i_cdr(((C_word*)t3)[1]);
if(C_truep((C_word)C_i_nullp(t7))){
t8=(C_word)C_i_car(((C_word*)t3)[1]);
t9=t6;
f_26816(t9,(C_word)C_i_pairp(t8));}
else{
t8=t6;
f_26816(t8,C_SCHEME_FALSE);}}}

/* k26814 in cs:i in k26779 in k26776 in k26773 in k26770 in k26767 in k26764 in k26761 in k26758 in k26755 in k26752 in k26749 in k21827 in k18307 in k18304 in k18301 in k18298 in k17861 in k17858 in k17855 in k17852 in k17849 in k17327 in k17324 in k16801 in k16798 in k16795 in k16792 in k16789 in k16786 in k16783 in k16780 in k16777 in k16774 in k16771 in k16768 in k16765 in k16762 in k16759 in k16756 in k16753 in k16750 in k16747 in k16744 in k16741 in k16602 in k16599 in k16596 in k16593 in k16537 in k16534 in k16531 in k16528 in k16525 in k16522 in k16519 in k16516 in k15271 in k15202 in k15009 in k15006 in k14901 in k14850 in k7607 in k7604 in k5838 in k5545 in k5542 in k5538 in k5247 in k5244 in k5241 in k5238 */
static void C_fcall f_26816(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word *a;
if(C_truep(t1)){
t2=(C_word)C_i_car(((C_word*)((C_word*)t0)[3])[1]);
t3=C_mutate(((C_word *)((C_word*)t0)[3])+1,t2);
t4=((C_word*)t0)[2];
f_26796(t4,t3);}
else{
t2=((C_word*)t0)[2];
f_26796(t2,C_SCHEME_UNDEFINED);}}

/* k26794 in cs:i in k26779 in k26776 in k26773 in k26770 in k26767 in k26764 in k26761 in k26758 in k26755 in k26752 in k26749 in k21827 in k18307 in k18304 in k18301 in k18298 in k17861 in k17858 in k17855 in k17852 in k17849 in k17327 in k17324 in k16801 in k16798 in k16795 in k16792 in k16789 in k16786 in k16783 in k16780 in k16777 in k16774 in k16771 in k16768 in k16765 in k16762 in k16759 in k16756 in k16753 in k16750 in k16747 in k16744 in k16741 in k16602 in k16599 in k16596 in k16593 in k16537 in k16534 in k16531 in k16528 in k16525 in k16522 in k16519 in k16516 in k15271 in k15202 in k15009 in k15006 in k14901 in k14850 in k7607 in k7604 in k5838 in k5545 in k5542 in k5538 in k5247 in k5244 in k5241 in k5238 */
static void C_fcall f_26796(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[3],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_26796,NULL,2,t0,t1);}
t2=(C_word)C_i_length(((C_word*)((C_word*)t0)[3])[1]);
t3=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_26804,a[2]=((C_word)li404),tmp=(C_word)a,a+=3,tmp);
((C_proc5)(void*)(*((C_word*)t3+1)))(5,t3,((C_word*)t0)[2],C_fix(1),t2,((C_word*)((C_word*)t0)[3])[1]);}

/* f_26804 in k26794 in cs:i in k26779 in k26776 in k26773 in k26770 in k26767 in k26764 in k26761 in k26758 in k26755 in k26752 in k26749 in k21827 in k18307 in k18304 in k18301 in k18298 in k17861 in k17858 in k17855 in k17852 in k17849 in k17327 in k17324 in k16801 in k16798 in k16795 in k16792 in k16789 in k16786 in k16783 in k16780 in k16777 in k16774 in k16771 in k16768 in k16765 in k16762 in k16759 in k16756 in k16753 in k16750 in k16747 in k16744 in k16741 in k16602 in k16599 in k16596 in k16593 in k16537 in k16534 in k16531 in k16528 in k16525 in k16522 in k16519 in k16516 in k15271 in k15202 in k15009 in k15006 in k14901 in k14850 in k7607 in k7604 in k5838 in k5545 in k5542 in k5538 in k5247 in k5244 in k5241 in k5238 */
static void C_ccall f_26804(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4){
C_word tmp;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
if(c!=5) C_bad_argc_2(c,5,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr5,(void*)f_26804,5,t0,t1,t2,t3,t4);}
t5=(C_word)C_i_foreign_fixnum_argumentp(t2);
t6=(C_word)C_i_foreign_fixnum_argumentp(t3);
t7=t1;
((C_proc2)(void*)(*((C_word*)t7+1)))(2,t7,(C_word)stub4981(C_SCHEME_UNDEFINED,t5,t6,t4));}

/* k26785 in cs:i in k26779 in k26776 in k26773 in k26770 in k26767 in k26764 in k26761 in k26758 in k26755 in k26752 in k26749 in k21827 in k18307 in k18304 in k18301 in k18298 in k17861 in k17858 in k17855 in k17852 in k17849 in k17327 in k17324 in k16801 in k16798 in k16795 in k16792 in k16789 in k16786 in k16783 in k16780 in k16777 in k16774 in k16771 in k16768 in k16765 in k16762 in k16759 in k16756 in k16753 in k16750 in k16747 in k16744 in k16741 in k16602 in k16599 in k16596 in k16593 in k16537 in k16534 in k16531 in k16528 in k16525 in k16522 in k16519 in k16516 in k15271 in k15202 in k15009 in k15006 in k14901 in k14850 in k7607 in k7604 in k5838 in k5545 in k5542 in k5538 in k5247 in k5244 in k5241 in k5238 */
static void C_ccall f_26787(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 367  values");
C_values(2,0,((C_word*)t0)[2]);}

/* mp:inhook in k21827 in k18307 in k18304 in k18301 in k18298 in k17861 in k17858 in k17855 in k17852 in k17849 in k17327 in k17324 in k16801 in k16798 in k16795 in k16792 in k16789 in k16786 in k16783 in k16780 in k16777 in k16774 in k16771 in k16768 in k16765 in k16762 in k16759 in k16756 in k16753 in k16750 in k16747 in k16744 in k16741 in k16602 in k16599 in k16596 in k16593 in k16537 in k16534 in k16531 in k16528 in k16525 in k16522 in k16519 in k16516 in k15271 in k15202 in k15009 in k15006 in k14901 in k14850 in k7607 in k7604 in k5838 in k5545 in k5542 in k5538 in k5247 in k5244 in k5241 in k5238 */
static void C_ccall f_26693(C_word c,C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word ab[10],*a=ab;
if(c!=3) C_bad_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr3,(void*)f_26693,3,t0,t1,t2);}
if(C_truep((C_word)C_i_closurep(t2))){
t3=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_26705,a[2]=t2,a[3]=((C_word)li400),tmp=(C_word)a,a+=4,tmp);
t4=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_26742,a[2]=((C_word)li401),tmp=(C_word)a,a+=3,tmp);
((C_proc3)(void*)(*((C_word*)t4+1)))(3,t4,t1,t3);}
else{
t3=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_26747,a[2]=((C_word)li402),tmp=(C_word)a,a+=3,tmp);
((C_proc3)(void*)(*((C_word*)t3+1)))(3,t3,t1,C_SCHEME_FALSE);}}

/* f_26747 in mp:inhook in k21827 in k18307 in k18304 in k18301 in k18298 in k17861 in k17858 in k17855 in k17852 in k17849 in k17327 in k17324 in k16801 in k16798 in k16795 in k16792 in k16789 in k16786 in k16783 in k16780 in k16777 in k16774 in k16771 in k16768 in k16765 in k16762 in k16759 in k16756 in k16753 in k16750 in k16747 in k16744 in k16741 in k16602 in k16599 in k16596 in k16593 in k16537 in k16534 in k16531 in k16528 in k16525 in k16522 in k16519 in k16516 in k15271 in k15202 in k15009 in k15006 in k14901 in k14850 in k7607 in k7604 in k5838 in k5545 in k5542 in k5538 in k5247 in k5244 in k5241 in k5238 */
static void C_ccall f_26747(C_word c,C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word *a;
if(c!=3) C_bad_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr3,(void*)f_26747,3,t0,t1,t2);}
t3=t1;
((C_proc2)(void*)(*((C_word*)t3+1)))(2,t3,(C_word)stub4925(C_SCHEME_UNDEFINED,t2));}

/* f_26742 in mp:inhook in k21827 in k18307 in k18304 in k18301 in k18298 in k17861 in k17858 in k17855 in k17852 in k17849 in k17327 in k17324 in k16801 in k16798 in k16795 in k16792 in k16789 in k16786 in k16783 in k16780 in k16777 in k16774 in k16771 in k16768 in k16765 in k16762 in k16759 in k16756 in k16753 in k16750 in k16747 in k16744 in k16741 in k16602 in k16599 in k16596 in k16593 in k16537 in k16534 in k16531 in k16528 in k16525 in k16522 in k16519 in k16516 in k15271 in k15202 in k15009 in k15006 in k14901 in k14850 in k7607 in k7604 in k5838 in k5545 in k5542 in k5538 in k5247 in k5244 in k5241 in k5238 */
static void C_ccall f_26742(C_word c,C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word *a;
if(c!=3) C_bad_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr3,(void*)f_26742,3,t0,t1,t2);}
t3=t1;
((C_proc2)(void*)(*((C_word*)t3+1)))(2,t3,(C_word)stub4916(C_SCHEME_UNDEFINED,t2));}

/* a26704 in mp:inhook in k21827 in k18307 in k18304 in k18301 in k18298 in k17861 in k17858 in k17855 in k17852 in k17849 in k17327 in k17324 in k16801 in k16798 in k16795 in k16792 in k16789 in k16786 in k16783 in k16780 in k16777 in k16774 in k16771 in k16768 in k16765 in k16762 in k16759 in k16756 in k16753 in k16750 in k16747 in k16744 in k16741 in k16602 in k16599 in k16596 in k16593 in k16537 in k16534 in k16531 in k16528 in k16525 in k16522 in k16519 in k16516 in k15271 in k15202 in k15009 in k15006 in k14901 in k14850 in k7607 in k7604 in k5838 in k5545 in k5542 in k5538 in k5247 in k5244 in k5241 in k5238 */
static void C_ccall f_26705(C_word c,C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word ab[5],*a=ab;
if(c!=3) C_bad_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr3,(void*)f_26705,3,t0,t1,t2);}
t3=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_26711,a[2]=t2,a[3]=((C_word*)t0)[2],a[4]=((C_word)li399),tmp=(C_word)a,a+=5,tmp);
C_trace("ChickenBridge.scm: 366  call-with-current-continuation");
t4=*((C_word*)lf[608]+1);
((C_proc3)C_retrieve_proc(t4))(3,t4,t1,t3);}

/* a26710 in a26704 in mp:inhook in k21827 in k18307 in k18304 in k18301 in k18298 in k17861 in k17858 in k17855 in k17852 in k17849 in k17327 in k17324 in k16801 in k16798 in k16795 in k16792 in k16789 in k16786 in k16783 in k16780 in k16777 in k16774 in k16771 in k16768 in k16765 in k16762 in k16759 in k16756 in k16753 in k16750 in k16747 in k16744 in k16741 in k16602 in k16599 in k16596 in k16593 in k16537 in k16534 in k16531 in k16528 in k16525 in k16522 in k16519 in k16516 in k15271 in k15202 in k15009 in k15006 in k14901 in k14850 in k7607 in k7604 in k5838 in k5545 in k5542 in k5538 in k5247 in k5244 in k5241 in k5238 */
static void C_ccall f_26711(C_word c,C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word t5;
C_word ab[9],*a=ab;
if(c!=3) C_bad_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr3,(void*)f_26711,3,t0,t1,t2);}
t3=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_26717,a[2]=t2,a[3]=((C_word)li397),tmp=(C_word)a,a+=4,tmp);
t4=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_26737,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word)li398),tmp=(C_word)a,a+=5,tmp);
C_trace("ChickenBridge.scm: 366  with-exception-handler");
t5=C_retrieve(lf[607]);
((C_proc4)C_retrieve_proc(t5))(4,t5,t1,t3,t4);}

/* a26736 in a26710 in a26704 in mp:inhook in k21827 in k18307 in k18304 in k18301 in k18298 in k17861 in k17858 in k17855 in k17852 in k17849 in k17327 in k17324 in k16801 in k16798 in k16795 in k16792 in k16789 in k16786 in k16783 in k16780 in k16777 in k16774 in k16771 in k16768 in k16765 in k16762 in k16759 in k16756 in k16753 in k16750 in k16747 in k16744 in k16741 in k16602 in k16599 in k16596 in k16593 in k16537 in k16534 in k16531 in k16528 in k16525 in k16522 in k16519 in k16516 in k15271 in k15202 in k15009 in k15006 in k14901 in k14850 in k7607 in k7604 in k5838 in k5545 in k5542 in k5538 in k5247 in k5244 in k5241 in k5238 */
static void C_ccall f_26737(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[3],*a=ab;
if(c!=2) C_bad_argc_2(c,2,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_26737,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_26741,a[2]=t1,tmp=(C_word)a,a+=3,tmp);
C_trace("ChickenBridge.scm: 366  %hook");
t3=((C_word*)t0)[3];
((C_proc3)C_retrieve_proc(t3))(3,t3,t2,((C_word*)t0)[2]);}

/* k26739 in a26736 in a26710 in a26704 in mp:inhook in k21827 in k18307 in k18304 in k18301 in k18298 in k17861 in k17858 in k17855 in k17852 in k17849 in k17327 in k17324 in k16801 in k16798 in k16795 in k16792 in k16789 in k16786 in k16783 in k16780 in k16777 in k16774 in k16771 in k16768 in k16765 in k16762 in k16759 in k16756 in k16753 in k16750 in k16747 in k16744 in k16741 in k16602 in k16599 in k16596 in k16593 in k16537 in k16534 in k16531 in k16528 in k16525 in k16522 in k16519 in k16516 in k15271 in k15202 in k15009 in k15006 in k14901 in k14850 in k7607 in k7604 in k5838 in k5545 in k5542 in k5538 in k5247 in k5244 in k5241 in k5238 */
static void C_ccall f_26741(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
t2=((C_word*)t0)[2];
((C_proc2)(void*)(*((C_word*)t2+1)))(2,t2,C_fix(0));}

/* a26716 in a26710 in a26704 in mp:inhook in k21827 in k18307 in k18304 in k18301 in k18298 in k17861 in k17858 in k17855 in k17852 in k17849 in k17327 in k17324 in k16801 in k16798 in k16795 in k16792 in k16789 in k16786 in k16783 in k16780 in k16777 in k16774 in k16771 in k16768 in k16765 in k16762 in k16759 in k16756 in k16753 in k16750 in k16747 in k16744 in k16741 in k16602 in k16599 in k16596 in k16593 in k16537 in k16534 in k16531 in k16528 in k16525 in k16522 in k16519 in k16516 in k15271 in k15202 in k15009 in k15006 in k14901 in k14850 in k7607 in k7604 in k5838 in k5545 in k5542 in k5538 in k5247 in k5244 in k5241 in k5238 */
static void C_ccall f_26717(C_word c,C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word ab[14],*a=ab;
if(c!=3) C_bad_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr3,(void*)f_26717,3,t0,t1,t2);}
t3=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_26721,a[2]=t1,a[3]=((C_word*)t0)[2],tmp=(C_word)a,a+=4,tmp);
t4=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_26728,a[2]=t3,tmp=(C_word)a,a+=3,tmp);
t5=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_26732,a[2]=t4,tmp=(C_word)a,a+=3,tmp);
t6=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_26735,a[2]=t2,a[3]=t5,tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 366  condition-property-accessor");
t7=C_retrieve(lf[604]);
((C_proc4)C_retrieve_proc(t7))(4,t7,t6,lf[605],lf[606]);}

/* k26733 in a26716 in a26710 in a26704 in mp:inhook in k21827 in k18307 in k18304 in k18301 in k18298 in k17861 in k17858 in k17855 in k17852 in k17849 in k17327 in k17324 in k16801 in k16798 in k16795 in k16792 in k16789 in k16786 in k16783 in k16780 in k16777 in k16774 in k16771 in k16768 in k16765 in k16762 in k16759 in k16756 in k16753 in k16750 in k16747 in k16744 in k16741 in k16602 in k16599 in k16596 in k16593 in k16537 in k16534 in k16531 in k16528 in k16525 in k16522 in k16519 in k16516 in k15271 in k15202 in k15009 in k15006 in k14901 in k14850 in k7607 in k7604 in k5838 in k5545 in k5542 in k5538 in k5247 in k5244 in k5241 in k5238 */
static void C_ccall f_26735(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
t2=t1;
((C_proc3)C_retrieve_proc(t2))(3,t2,((C_word*)t0)[3],((C_word*)t0)[2]);}

/* k26730 in a26716 in a26710 in a26704 in mp:inhook in k21827 in k18307 in k18304 in k18301 in k18298 in k17861 in k17858 in k17855 in k17852 in k17849 in k17327 in k17324 in k16801 in k16798 in k16795 in k16792 in k16789 in k16786 in k16783 in k16780 in k16777 in k16774 in k16771 in k16768 in k16765 in k16762 in k16759 in k16756 in k16753 in k16750 in k16747 in k16744 in k16741 in k16602 in k16599 in k16596 in k16593 in k16537 in k16534 in k16531 in k16528 in k16525 in k16522 in k16519 in k16516 in k15271 in k15202 in k15009 in k15006 in k14901 in k14850 in k7607 in k7604 in k5838 in k5545 in k5542 in k5538 in k5247 in k5244 in k5241 in k5238 */
static void C_ccall f_26732(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 366  sprintf");
t2=C_retrieve(lf[33]);
((C_proc4)C_retrieve_proc(t2))(4,t2,((C_word*)t0)[2],lf[603],t1);}

/* k26726 in a26716 in a26710 in a26704 in mp:inhook in k21827 in k18307 in k18304 in k18301 in k18298 in k17861 in k17858 in k17855 in k17852 in k17849 in k17327 in k17324 in k16801 in k16798 in k16795 in k16792 in k16789 in k16786 in k16783 in k16780 in k16777 in k16774 in k16771 in k16768 in k16765 in k16762 in k16759 in k16756 in k16753 in k16750 in k16747 in k16744 in k16741 in k16602 in k16599 in k16596 in k16593 in k16537 in k16534 in k16531 in k16528 in k16525 in k16522 in k16519 in k16516 in k15271 in k15202 in k15009 in k15006 in k14901 in k14850 in k7607 in k7604 in k5838 in k5545 in k5542 in k5538 in k5247 in k5244 in k5241 in k5238 */
static void C_ccall f_26728(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 366  print-error");
t2=C_retrieve(lf[330]);
((C_proc3)C_retrieve_proc(t2))(3,t2,((C_word*)t0)[2],t1);}

/* k26719 in a26716 in a26710 in a26704 in mp:inhook in k21827 in k18307 in k18304 in k18301 in k18298 in k17861 in k17858 in k17855 in k17852 in k17849 in k17327 in k17324 in k16801 in k16798 in k16795 in k16792 in k16789 in k16786 in k16783 in k16780 in k16777 in k16774 in k16771 in k16768 in k16765 in k16762 in k16759 in k16756 in k16753 in k16750 in k16747 in k16744 in k16741 in k16602 in k16599 in k16596 in k16593 in k16537 in k16534 in k16531 in k16528 in k16525 in k16522 in k16519 in k16516 in k15271 in k15202 in k15009 in k15006 in k14901 in k14850 in k7607 in k7604 in k5838 in k5545 in k5542 in k5538 in k5247 in k5244 in k5241 in k5238 */
static void C_ccall f_26721(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 366  %cont");
t2=((C_word*)t0)[3];
((C_proc3)C_retrieve_proc(t2))(3,t2,((C_word*)t0)[2],C_fix(-1));}

/* mp:mm in k21827 in k18307 in k18304 in k18301 in k18298 in k17861 in k17858 in k17855 in k17852 in k17849 in k17327 in k17324 in k16801 in k16798 in k16795 in k16792 in k16789 in k16786 in k16783 in k16780 in k16777 in k16774 in k16771 in k16768 in k16765 in k16762 in k16759 in k16756 in k16753 in k16750 in k16747 in k16744 in k16741 in k16602 in k16599 in k16596 in k16593 in k16537 in k16534 in k16531 in k16528 in k16525 in k16522 in k16519 in k16516 in k15271 in k15202 in k15009 in k15006 in k14901 in k14850 in k7607 in k7604 in k5838 in k5545 in k5542 in k5538 in k5247 in k5244 in k5241 in k5238 */
static void C_ccall f_26678(C_word c,C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word ab[3],*a=ab;
if(c!=3) C_bad_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr3,(void*)f_26678,3,t0,t1,t2);}
t3=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_26683,a[2]=((C_word)li395),tmp=(C_word)a,a+=3,tmp);
((C_proc3)(void*)(*((C_word*)t3+1)))(3,t3,t1,t2);}

/* f_26683 in mp:mm in k21827 in k18307 in k18304 in k18301 in k18298 in k17861 in k17858 in k17855 in k17852 in k17849 in k17327 in k17324 in k16801 in k16798 in k16795 in k16792 in k16789 in k16786 in k16783 in k16780 in k16777 in k16774 in k16771 in k16768 in k16765 in k16762 in k16759 in k16756 in k16753 in k16750 in k16747 in k16744 in k16741 in k16602 in k16599 in k16596 in k16593 in k16537 in k16534 in k16531 in k16528 in k16525 in k16522 in k16519 in k16516 in k15271 in k15202 in k15009 in k15006 in k14901 in k14850 in k7607 in k7604 in k5838 in k5545 in k5542 in k5538 in k5247 in k5244 in k5241 in k5238 */
static void C_ccall f_26683(C_word c,C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word *a;
if(c!=3) C_bad_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr3,(void*)f_26683,3,t0,t1,t2);}
t3=(C_truep(t2)?(C_word)C_i_foreign_pointer_argumentp(t2):C_SCHEME_FALSE);
t4=t1;
((C_proc2)(void*)(*((C_word*)t4+1)))(2,t4,(C_word)stub4909(C_SCHEME_UNDEFINED,t3));}

/* mp:bend in k21827 in k18307 in k18304 in k18301 in k18298 in k17861 in k17858 in k17855 in k17852 in k17849 in k17327 in k17324 in k16801 in k16798 in k16795 in k16792 in k16789 in k16786 in k16783 in k16780 in k16777 in k16774 in k16771 in k16768 in k16765 in k16762 in k16759 in k16756 in k16753 in k16750 in k16747 in k16744 in k16741 in k16602 in k16599 in k16596 in k16593 in k16537 in k16534 in k16531 in k16528 in k16525 in k16522 in k16519 in k16516 in k15271 in k15202 in k15009 in k15006 in k14901 in k14850 in k7607 in k7604 in k5838 in k5545 in k5542 in k5538 in k5247 in k5244 in k5241 in k5238 */
static void C_ccall f_26650(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4){
C_word tmp;
C_word t5;
C_word ab[3],*a=ab;
if(c!=5) C_bad_argc_2(c,5,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr5,(void*)f_26650,5,t0,t1,t2,t3,t4);}
t5=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_26655,a[2]=((C_word)li393),tmp=(C_word)a,a+=3,tmp);
((C_proc7)(void*)(*((C_word*)t5+1)))(7,t5,t1,C_fix(14),t2,t4,t3,C_fix(0));}

/* f_26655 in mp:bend in k21827 in k18307 in k18304 in k18301 in k18298 in k17861 in k17858 in k17855 in k17852 in k17849 in k17327 in k17324 in k16801 in k16798 in k16795 in k16792 in k16789 in k16786 in k16783 in k16780 in k16777 in k16774 in k16771 in k16768 in k16765 in k16762 in k16759 in k16756 in k16753 in k16750 in k16747 in k16744 in k16741 in k16602 in k16599 in k16596 in k16593 in k16537 in k16534 in k16531 in k16528 in k16525 in k16522 in k16519 in k16516 in k15271 in k15202 in k15009 in k15006 in k14901 in k14850 in k7607 in k7604 in k5838 in k5545 in k5542 in k5538 in k5247 in k5244 in k5241 in k5238 */
static void C_ccall f_26655(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4,C_word t5,C_word t6){
C_word tmp;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word *a;
if(c!=7) C_bad_argc_2(c,7,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr7,(void*)f_26655,7,t0,t1,t2,t3,t4,t5,t6);}
t7=(C_word)C_i_foreign_fixnum_argumentp(t2);
t8=(C_word)C_i_foreign_flonum_argumentp(t3);
t9=(C_word)C_i_foreign_flonum_argumentp(t4);
t10=(C_word)C_i_foreign_flonum_argumentp(t5);
t11=(C_word)C_i_foreign_flonum_argumentp(t6);
t12=t1;
((C_proc2)(void*)(*((C_word*)t12+1)))(2,t12,(C_word)stub4900(C_SCHEME_UNDEFINED,t7,t8,t9,t10,t11));}

/* mp:press in k21827 in k18307 in k18304 in k18301 in k18298 in k17861 in k17858 in k17855 in k17852 in k17849 in k17327 in k17324 in k16801 in k16798 in k16795 in k16792 in k16789 in k16786 in k16783 in k16780 in k16777 in k16774 in k16771 in k16768 in k16765 in k16762 in k16759 in k16756 in k16753 in k16750 in k16747 in k16744 in k16741 in k16602 in k16599 in k16596 in k16593 in k16537 in k16534 in k16531 in k16528 in k16525 in k16522 in k16519 in k16516 in k15271 in k15202 in k15009 in k15006 in k14901 in k14850 in k7607 in k7604 in k5838 in k5545 in k5542 in k5538 in k5247 in k5244 in k5241 in k5238 */
static void C_ccall f_26622(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4){
C_word tmp;
C_word t5;
C_word ab[3],*a=ab;
if(c!=5) C_bad_argc_2(c,5,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr5,(void*)f_26622,5,t0,t1,t2,t3,t4);}
t5=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_26627,a[2]=((C_word)li391),tmp=(C_word)a,a+=3,tmp);
((C_proc7)(void*)(*((C_word*)t5+1)))(7,t5,t1,C_fix(13),t2,t4,t3,C_fix(0));}

/* f_26627 in mp:press in k21827 in k18307 in k18304 in k18301 in k18298 in k17861 in k17858 in k17855 in k17852 in k17849 in k17327 in k17324 in k16801 in k16798 in k16795 in k16792 in k16789 in k16786 in k16783 in k16780 in k16777 in k16774 in k16771 in k16768 in k16765 in k16762 in k16759 in k16756 in k16753 in k16750 in k16747 in k16744 in k16741 in k16602 in k16599 in k16596 in k16593 in k16537 in k16534 in k16531 in k16528 in k16525 in k16522 in k16519 in k16516 in k15271 in k15202 in k15009 in k15006 in k14901 in k14850 in k7607 in k7604 in k5838 in k5545 in k5542 in k5538 in k5247 in k5244 in k5241 in k5238 */
static void C_ccall f_26627(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4,C_word t5,C_word t6){
C_word tmp;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word *a;
if(c!=7) C_bad_argc_2(c,7,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr7,(void*)f_26627,7,t0,t1,t2,t3,t4,t5,t6);}
t7=(C_word)C_i_foreign_fixnum_argumentp(t2);
t8=(C_word)C_i_foreign_flonum_argumentp(t3);
t9=(C_word)C_i_foreign_flonum_argumentp(t4);
t10=(C_word)C_i_foreign_flonum_argumentp(t5);
t11=(C_word)C_i_foreign_flonum_argumentp(t6);
t12=t1;
((C_proc2)(void*)(*((C_word*)t12+1)))(2,t12,(C_word)stub4885(C_SCHEME_UNDEFINED,t7,t8,t9,t10,t11));}

/* mp:prog in k21827 in k18307 in k18304 in k18301 in k18298 in k17861 in k17858 in k17855 in k17852 in k17849 in k17327 in k17324 in k16801 in k16798 in k16795 in k16792 in k16789 in k16786 in k16783 in k16780 in k16777 in k16774 in k16771 in k16768 in k16765 in k16762 in k16759 in k16756 in k16753 in k16750 in k16747 in k16744 in k16741 in k16602 in k16599 in k16596 in k16593 in k16537 in k16534 in k16531 in k16528 in k16525 in k16522 in k16519 in k16516 in k15271 in k15202 in k15009 in k15006 in k14901 in k14850 in k7607 in k7604 in k5838 in k5545 in k5542 in k5538 in k5247 in k5244 in k5241 in k5238 */
static void C_ccall f_26594(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4){
C_word tmp;
C_word t5;
C_word ab[3],*a=ab;
if(c!=5) C_bad_argc_2(c,5,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr5,(void*)f_26594,5,t0,t1,t2,t3,t4);}
t5=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_26599,a[2]=((C_word)li389),tmp=(C_word)a,a+=3,tmp);
((C_proc7)(void*)(*((C_word*)t5+1)))(7,t5,t1,C_fix(12),t2,t4,t3,C_fix(0));}

/* f_26599 in mp:prog in k21827 in k18307 in k18304 in k18301 in k18298 in k17861 in k17858 in k17855 in k17852 in k17849 in k17327 in k17324 in k16801 in k16798 in k16795 in k16792 in k16789 in k16786 in k16783 in k16780 in k16777 in k16774 in k16771 in k16768 in k16765 in k16762 in k16759 in k16756 in k16753 in k16750 in k16747 in k16744 in k16741 in k16602 in k16599 in k16596 in k16593 in k16537 in k16534 in k16531 in k16528 in k16525 in k16522 in k16519 in k16516 in k15271 in k15202 in k15009 in k15006 in k14901 in k14850 in k7607 in k7604 in k5838 in k5545 in k5542 in k5538 in k5247 in k5244 in k5241 in k5238 */
static void C_ccall f_26599(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4,C_word t5,C_word t6){
C_word tmp;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word *a;
if(c!=7) C_bad_argc_2(c,7,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr7,(void*)f_26599,7,t0,t1,t2,t3,t4,t5,t6);}
t7=(C_word)C_i_foreign_fixnum_argumentp(t2);
t8=(C_word)C_i_foreign_flonum_argumentp(t3);
t9=(C_word)C_i_foreign_flonum_argumentp(t4);
t10=(C_word)C_i_foreign_flonum_argumentp(t5);
t11=(C_word)C_i_foreign_flonum_argumentp(t6);
t12=t1;
((C_proc2)(void*)(*((C_word*)t12+1)))(2,t12,(C_word)stub4870(C_SCHEME_UNDEFINED,t7,t8,t9,t10,t11));}

/* mp:ctrl in k21827 in k18307 in k18304 in k18301 in k18298 in k17861 in k17858 in k17855 in k17852 in k17849 in k17327 in k17324 in k16801 in k16798 in k16795 in k16792 in k16789 in k16786 in k16783 in k16780 in k16777 in k16774 in k16771 in k16768 in k16765 in k16762 in k16759 in k16756 in k16753 in k16750 in k16747 in k16744 in k16741 in k16602 in k16599 in k16596 in k16593 in k16537 in k16534 in k16531 in k16528 in k16525 in k16522 in k16519 in k16516 in k15271 in k15202 in k15009 in k15006 in k14901 in k14850 in k7607 in k7604 in k5838 in k5545 in k5542 in k5538 in k5247 in k5244 in k5241 in k5238 */
static void C_ccall f_26566(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4,C_word t5){
C_word tmp;
C_word t6;
C_word ab[3],*a=ab;
if(c!=6) C_bad_argc_2(c,6,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr6,(void*)f_26566,6,t0,t1,t2,t3,t4,t5);}
t6=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_26571,a[2]=((C_word)li387),tmp=(C_word)a,a+=3,tmp);
((C_proc7)(void*)(*((C_word*)t6+1)))(7,t6,t1,C_fix(11),t2,t5,t3,t4);}

/* f_26571 in mp:ctrl in k21827 in k18307 in k18304 in k18301 in k18298 in k17861 in k17858 in k17855 in k17852 in k17849 in k17327 in k17324 in k16801 in k16798 in k16795 in k16792 in k16789 in k16786 in k16783 in k16780 in k16777 in k16774 in k16771 in k16768 in k16765 in k16762 in k16759 in k16756 in k16753 in k16750 in k16747 in k16744 in k16741 in k16602 in k16599 in k16596 in k16593 in k16537 in k16534 in k16531 in k16528 in k16525 in k16522 in k16519 in k16516 in k15271 in k15202 in k15009 in k15006 in k14901 in k14850 in k7607 in k7604 in k5838 in k5545 in k5542 in k5538 in k5247 in k5244 in k5241 in k5238 */
static void C_ccall f_26571(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4,C_word t5,C_word t6){
C_word tmp;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word *a;
if(c!=7) C_bad_argc_2(c,7,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr7,(void*)f_26571,7,t0,t1,t2,t3,t4,t5,t6);}
t7=(C_word)C_i_foreign_fixnum_argumentp(t2);
t8=(C_word)C_i_foreign_flonum_argumentp(t3);
t9=(C_word)C_i_foreign_flonum_argumentp(t4);
t10=(C_word)C_i_foreign_flonum_argumentp(t5);
t11=(C_word)C_i_foreign_flonum_argumentp(t6);
t12=t1;
((C_proc2)(void*)(*((C_word*)t12+1)))(2,t12,(C_word)stub4855(C_SCHEME_UNDEFINED,t7,t8,t9,t10,t11));}

/* mp:touch in k21827 in k18307 in k18304 in k18301 in k18298 in k17861 in k17858 in k17855 in k17852 in k17849 in k17327 in k17324 in k16801 in k16798 in k16795 in k16792 in k16789 in k16786 in k16783 in k16780 in k16777 in k16774 in k16771 in k16768 in k16765 in k16762 in k16759 in k16756 in k16753 in k16750 in k16747 in k16744 in k16741 in k16602 in k16599 in k16596 in k16593 in k16537 in k16534 in k16531 in k16528 in k16525 in k16522 in k16519 in k16516 in k15271 in k15202 in k15009 in k15006 in k14901 in k14850 in k7607 in k7604 in k5838 in k5545 in k5542 in k5538 in k5247 in k5244 in k5241 in k5238 */
static void C_ccall f_26538(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4,C_word t5){
C_word tmp;
C_word t6;
C_word ab[3],*a=ab;
if(c!=6) C_bad_argc_2(c,6,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr6,(void*)f_26538,6,t0,t1,t2,t3,t4,t5);}
t6=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_26543,a[2]=((C_word)li385),tmp=(C_word)a,a+=3,tmp);
((C_proc7)(void*)(*((C_word*)t6+1)))(7,t6,t1,C_fix(10),t2,t5,t3,t4);}

/* f_26543 in mp:touch in k21827 in k18307 in k18304 in k18301 in k18298 in k17861 in k17858 in k17855 in k17852 in k17849 in k17327 in k17324 in k16801 in k16798 in k16795 in k16792 in k16789 in k16786 in k16783 in k16780 in k16777 in k16774 in k16771 in k16768 in k16765 in k16762 in k16759 in k16756 in k16753 in k16750 in k16747 in k16744 in k16741 in k16602 in k16599 in k16596 in k16593 in k16537 in k16534 in k16531 in k16528 in k16525 in k16522 in k16519 in k16516 in k15271 in k15202 in k15009 in k15006 in k14901 in k14850 in k7607 in k7604 in k5838 in k5545 in k5542 in k5538 in k5247 in k5244 in k5241 in k5238 */
static void C_ccall f_26543(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4,C_word t5,C_word t6){
C_word tmp;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word *a;
if(c!=7) C_bad_argc_2(c,7,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr7,(void*)f_26543,7,t0,t1,t2,t3,t4,t5,t6);}
t7=(C_word)C_i_foreign_fixnum_argumentp(t2);
t8=(C_word)C_i_foreign_flonum_argumentp(t3);
t9=(C_word)C_i_foreign_flonum_argumentp(t4);
t10=(C_word)C_i_foreign_flonum_argumentp(t5);
t11=(C_word)C_i_foreign_flonum_argumentp(t6);
t12=t1;
((C_proc2)(void*)(*((C_word*)t12+1)))(2,t12,(C_word)stub4839(C_SCHEME_UNDEFINED,t7,t8,t9,t10,t11));}

/* mp:on in k21827 in k18307 in k18304 in k18301 in k18298 in k17861 in k17858 in k17855 in k17852 in k17849 in k17327 in k17324 in k16801 in k16798 in k16795 in k16792 in k16789 in k16786 in k16783 in k16780 in k16777 in k16774 in k16771 in k16768 in k16765 in k16762 in k16759 in k16756 in k16753 in k16750 in k16747 in k16744 in k16741 in k16602 in k16599 in k16596 in k16593 in k16537 in k16534 in k16531 in k16528 in k16525 in k16522 in k16519 in k16516 in k15271 in k15202 in k15009 in k15006 in k14901 in k14850 in k7607 in k7604 in k5838 in k5545 in k5542 in k5538 in k5247 in k5244 in k5241 in k5238 */
static void C_ccall f_26510(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4,C_word t5){
C_word tmp;
C_word t6;
C_word ab[3],*a=ab;
if(c!=6) C_bad_argc_2(c,6,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr6,(void*)f_26510,6,t0,t1,t2,t3,t4,t5);}
t6=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_26515,a[2]=((C_word)li383),tmp=(C_word)a,a+=3,tmp);
((C_proc7)(void*)(*((C_word*)t6+1)))(7,t6,t1,C_fix(9),t2,t5,t3,t4);}

/* f_26515 in mp:on in k21827 in k18307 in k18304 in k18301 in k18298 in k17861 in k17858 in k17855 in k17852 in k17849 in k17327 in k17324 in k16801 in k16798 in k16795 in k16792 in k16789 in k16786 in k16783 in k16780 in k16777 in k16774 in k16771 in k16768 in k16765 in k16762 in k16759 in k16756 in k16753 in k16750 in k16747 in k16744 in k16741 in k16602 in k16599 in k16596 in k16593 in k16537 in k16534 in k16531 in k16528 in k16525 in k16522 in k16519 in k16516 in k15271 in k15202 in k15009 in k15006 in k14901 in k14850 in k7607 in k7604 in k5838 in k5545 in k5542 in k5538 in k5247 in k5244 in k5241 in k5238 */
static void C_ccall f_26515(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4,C_word t5,C_word t6){
C_word tmp;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word *a;
if(c!=7) C_bad_argc_2(c,7,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr7,(void*)f_26515,7,t0,t1,t2,t3,t4,t5,t6);}
t7=(C_word)C_i_foreign_fixnum_argumentp(t2);
t8=(C_word)C_i_foreign_flonum_argumentp(t3);
t9=(C_word)C_i_foreign_flonum_argumentp(t4);
t10=(C_word)C_i_foreign_flonum_argumentp(t5);
t11=(C_word)C_i_foreign_flonum_argumentp(t6);
t12=t1;
((C_proc2)(void*)(*((C_word*)t12+1)))(2,t12,(C_word)stub4823(C_SCHEME_UNDEFINED,t7,t8,t9,t10,t11));}

/* mp:off in k21827 in k18307 in k18304 in k18301 in k18298 in k17861 in k17858 in k17855 in k17852 in k17849 in k17327 in k17324 in k16801 in k16798 in k16795 in k16792 in k16789 in k16786 in k16783 in k16780 in k16777 in k16774 in k16771 in k16768 in k16765 in k16762 in k16759 in k16756 in k16753 in k16750 in k16747 in k16744 in k16741 in k16602 in k16599 in k16596 in k16593 in k16537 in k16534 in k16531 in k16528 in k16525 in k16522 in k16519 in k16516 in k15271 in k15202 in k15009 in k15006 in k14901 in k14850 in k7607 in k7604 in k5838 in k5545 in k5542 in k5538 in k5247 in k5244 in k5241 in k5238 */
static void C_ccall f_26482(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4){
C_word tmp;
C_word t5;
C_word ab[3],*a=ab;
if(c!=5) C_bad_argc_2(c,5,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr5,(void*)f_26482,5,t0,t1,t2,t3,t4);}
t5=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_26487,a[2]=((C_word)li381),tmp=(C_word)a,a+=3,tmp);
((C_proc7)(void*)(*((C_word*)t5+1)))(7,t5,t1,C_fix(8),t2,t4,t3,C_fix(0));}

/* f_26487 in mp:off in k21827 in k18307 in k18304 in k18301 in k18298 in k17861 in k17858 in k17855 in k17852 in k17849 in k17327 in k17324 in k16801 in k16798 in k16795 in k16792 in k16789 in k16786 in k16783 in k16780 in k16777 in k16774 in k16771 in k16768 in k16765 in k16762 in k16759 in k16756 in k16753 in k16750 in k16747 in k16744 in k16741 in k16602 in k16599 in k16596 in k16593 in k16537 in k16534 in k16531 in k16528 in k16525 in k16522 in k16519 in k16516 in k15271 in k15202 in k15009 in k15006 in k14901 in k14850 in k7607 in k7604 in k5838 in k5545 in k5542 in k5538 in k5247 in k5244 in k5241 in k5238 */
static void C_ccall f_26487(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4,C_word t5,C_word t6){
C_word tmp;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word *a;
if(c!=7) C_bad_argc_2(c,7,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr7,(void*)f_26487,7,t0,t1,t2,t3,t4,t5,t6);}
t7=(C_word)C_i_foreign_fixnum_argumentp(t2);
t8=(C_word)C_i_foreign_flonum_argumentp(t3);
t9=(C_word)C_i_foreign_flonum_argumentp(t4);
t10=(C_word)C_i_foreign_flonum_argumentp(t5);
t11=(C_word)C_i_foreign_flonum_argumentp(t6);
t12=t1;
((C_proc2)(void*)(*((C_word*)t12+1)))(2,t12,(C_word)stub4807(C_SCHEME_UNDEFINED,t7,t8,t9,t10,t11));}

/* mp:midi in k21827 in k18307 in k18304 in k18301 in k18298 in k17861 in k17858 in k17855 in k17852 in k17849 in k17327 in k17324 in k16801 in k16798 in k16795 in k16792 in k16789 in k16786 in k16783 in k16780 in k16777 in k16774 in k16771 in k16768 in k16765 in k16762 in k16759 in k16756 in k16753 in k16750 in k16747 in k16744 in k16741 in k16602 in k16599 in k16596 in k16593 in k16537 in k16534 in k16531 in k16528 in k16525 in k16522 in k16519 in k16516 in k15271 in k15202 in k15009 in k15006 in k14901 in k14850 in k7607 in k7604 in k5838 in k5545 in k5542 in k5538 in k5247 in k5244 in k5241 in k5238 */
static void C_ccall f_26454(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4,C_word t5,C_word t6){
C_word tmp;
C_word t7;
C_word ab[3],*a=ab;
if(c!=7) C_bad_argc_2(c,7,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr7,(void*)f_26454,7,t0,t1,t2,t3,t4,t5,t6);}
t7=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_26459,a[2]=((C_word)li379),tmp=(C_word)a,a+=3,tmp);
((C_proc7)(void*)(*((C_word*)t7+1)))(7,t7,t1,t2,t3,t4,t5,t6);}

/* f_26459 in mp:midi in k21827 in k18307 in k18304 in k18301 in k18298 in k17861 in k17858 in k17855 in k17852 in k17849 in k17327 in k17324 in k16801 in k16798 in k16795 in k16792 in k16789 in k16786 in k16783 in k16780 in k16777 in k16774 in k16771 in k16768 in k16765 in k16762 in k16759 in k16756 in k16753 in k16750 in k16747 in k16744 in k16741 in k16602 in k16599 in k16596 in k16593 in k16537 in k16534 in k16531 in k16528 in k16525 in k16522 in k16519 in k16516 in k15271 in k15202 in k15009 in k15006 in k14901 in k14850 in k7607 in k7604 in k5838 in k5545 in k5542 in k5538 in k5247 in k5244 in k5241 in k5238 */
static void C_ccall f_26459(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4,C_word t5,C_word t6){
C_word tmp;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word *a;
if(c!=7) C_bad_argc_2(c,7,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr7,(void*)f_26459,7,t0,t1,t2,t3,t4,t5,t6);}
t7=(C_word)C_i_foreign_flonum_argumentp(t2);
t8=(C_word)C_i_foreign_flonum_argumentp(t3);
t9=(C_word)C_i_foreign_flonum_argumentp(t4);
t10=(C_word)C_i_foreign_flonum_argumentp(t5);
t11=(C_word)C_i_foreign_flonum_argumentp(t6);
t12=t1;
((C_proc2)(void*)(*((C_word*)t12+1)))(2,t12,(C_word)stub4792(C_SCHEME_UNDEFINED,t7,t8,t9,t10,t11));}

/* mp:note in k21827 in k18307 in k18304 in k18301 in k18298 in k17861 in k17858 in k17855 in k17852 in k17849 in k17327 in k17324 in k16801 in k16798 in k16795 in k16792 in k16789 in k16786 in k16783 in k16780 in k16777 in k16774 in k16771 in k16768 in k16765 in k16762 in k16759 in k16756 in k16753 in k16750 in k16747 in k16744 in k16741 in k16602 in k16599 in k16596 in k16593 in k16537 in k16534 in k16531 in k16528 in k16525 in k16522 in k16519 in k16516 in k15271 in k15202 in k15009 in k15006 in k14901 in k14850 in k7607 in k7604 in k5838 in k5545 in k5542 in k5538 in k5247 in k5244 in k5241 in k5238 */
static void C_ccall f_26426(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4,C_word t5,C_word t6){
C_word tmp;
C_word t7;
C_word ab[3],*a=ab;
if(c!=7) C_bad_argc_2(c,7,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr7,(void*)f_26426,7,t0,t1,t2,t3,t4,t5,t6);}
t7=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_26431,a[2]=((C_word)li377),tmp=(C_word)a,a+=3,tmp);
((C_proc7)(void*)(*((C_word*)t7+1)))(7,t7,t1,t2,t3,t4,t5,t6);}

/* f_26431 in mp:note in k21827 in k18307 in k18304 in k18301 in k18298 in k17861 in k17858 in k17855 in k17852 in k17849 in k17327 in k17324 in k16801 in k16798 in k16795 in k16792 in k16789 in k16786 in k16783 in k16780 in k16777 in k16774 in k16771 in k16768 in k16765 in k16762 in k16759 in k16756 in k16753 in k16750 in k16747 in k16744 in k16741 in k16602 in k16599 in k16596 in k16593 in k16537 in k16534 in k16531 in k16528 in k16525 in k16522 in k16519 in k16516 in k15271 in k15202 in k15009 in k15006 in k14901 in k14850 in k7607 in k7604 in k5838 in k5545 in k5542 in k5538 in k5247 in k5244 in k5241 in k5238 */
static void C_ccall f_26431(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4,C_word t5,C_word t6){
C_word tmp;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word *a;
if(c!=7) C_bad_argc_2(c,7,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr7,(void*)f_26431,7,t0,t1,t2,t3,t4,t5,t6);}
t7=(C_word)C_i_foreign_flonum_argumentp(t2);
t8=(C_word)C_i_foreign_flonum_argumentp(t3);
t9=(C_word)C_i_foreign_flonum_argumentp(t4);
t10=(C_word)C_i_foreign_flonum_argumentp(t5);
t11=(C_word)C_i_foreign_flonum_argumentp(t6);
t12=t1;
((C_proc2)(void*)(*((C_word*)t12+1)))(2,t12,(C_word)stub4775(C_SCHEME_UNDEFINED,t7,t8,t9,t10,t11));}

/* mm:num-set! in k21827 in k18307 in k18304 in k18301 in k18298 in k17861 in k17858 in k17855 in k17852 in k17849 in k17327 in k17324 in k16801 in k16798 in k16795 in k16792 in k16789 in k16786 in k16783 in k16780 in k16777 in k16774 in k16771 in k16768 in k16765 in k16762 in k16759 in k16756 in k16753 in k16750 in k16747 in k16744 in k16741 in k16602 in k16599 in k16596 in k16593 in k16537 in k16534 in k16531 in k16528 in k16525 in k16522 in k16519 in k16516 in k15271 in k15202 in k15009 in k15006 in k14901 in k14850 in k7607 in k7604 in k5838 in k5545 in k5542 in k5538 in k5247 in k5244 in k5241 in k5238 */
static void C_ccall f_26403(C_word c,C_word t0,C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word ab[7],*a=ab;
if(c!=4) C_bad_argc_2(c,4,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr4,(void*)f_26403,4,t0,t1,t2,t3);}
t4=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_26407,a[2]=t3,a[3]=t1,tmp=(C_word)a,a+=4,tmp);
t5=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_26408,a[2]=((C_word)li375),tmp=(C_word)a,a+=3,tmp);
((C_proc5)(void*)(*((C_word*)t5+1)))(5,t5,t4,t2,C_fix(1),t3);}

/* f_26408 in mm:num-set! in k21827 in k18307 in k18304 in k18301 in k18298 in k17861 in k17858 in k17855 in k17852 in k17849 in k17327 in k17324 in k16801 in k16798 in k16795 in k16792 in k16789 in k16786 in k16783 in k16780 in k16777 in k16774 in k16771 in k16768 in k16765 in k16762 in k16759 in k16756 in k16753 in k16750 in k16747 in k16744 in k16741 in k16602 in k16599 in k16596 in k16593 in k16537 in k16534 in k16531 in k16528 in k16525 in k16522 in k16519 in k16516 in k15271 in k15202 in k15009 in k15006 in k14901 in k14850 in k7607 in k7604 in k5838 in k5545 in k5542 in k5538 in k5247 in k5244 in k5241 in k5238 */
static void C_ccall f_26408(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4){
C_word tmp;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word *a;
if(c!=5) C_bad_argc_2(c,5,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr5,(void*)f_26408,5,t0,t1,t2,t3,t4);}
t5=(C_truep(t2)?(C_word)C_i_foreign_pointer_argumentp(t2):C_SCHEME_FALSE);
t6=(C_word)C_i_foreign_fixnum_argumentp(t3);
t7=(C_word)C_i_foreign_fixnum_argumentp(t4);
t8=t1;
((C_proc2)(void*)(*((C_word*)t8+1)))(2,t8,(C_word)stub4757(C_SCHEME_UNDEFINED,t5,t6,t7));}

/* k26405 in mm:num-set! in k21827 in k18307 in k18304 in k18301 in k18298 in k17861 in k17858 in k17855 in k17852 in k17849 in k17327 in k17324 in k16801 in k16798 in k16795 in k16792 in k16789 in k16786 in k16783 in k16780 in k16777 in k16774 in k16771 in k16768 in k16765 in k16762 in k16759 in k16756 in k16753 in k16750 in k16747 in k16744 in k16741 in k16602 in k16599 in k16596 in k16593 in k16537 in k16534 in k16531 in k16528 in k16525 in k16522 in k16519 in k16516 in k15271 in k15202 in k15009 in k15006 in k14901 in k14850 in k7607 in k7604 in k5838 in k5545 in k5542 in k5538 in k5247 in k5244 in k5241 in k5238 */
static void C_ccall f_26407(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
t2=((C_word*)t0)[3];
((C_proc2)(void*)(*((C_word*)t2+1)))(2,t2,((C_word*)t0)[2]);}

/* mm:num in k21827 in k18307 in k18304 in k18301 in k18298 in k17861 in k17858 in k17855 in k17852 in k17849 in k17327 in k17324 in k16801 in k16798 in k16795 in k16792 in k16789 in k16786 in k16783 in k16780 in k16777 in k16774 in k16771 in k16768 in k16765 in k16762 in k16759 in k16756 in k16753 in k16750 in k16747 in k16744 in k16741 in k16602 in k16599 in k16596 in k16593 in k16537 in k16534 in k16531 in k16528 in k16525 in k16522 in k16519 in k16516 in k15271 in k15202 in k15009 in k15006 in k14901 in k14850 in k7607 in k7604 in k5838 in k5545 in k5542 in k5538 in k5247 in k5244 in k5241 in k5238 */
static void C_ccall f_26384(C_word c,C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word ab[3],*a=ab;
if(c!=3) C_bad_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr3,(void*)f_26384,3,t0,t1,t2);}
t3=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_26389,a[2]=((C_word)li373),tmp=(C_word)a,a+=3,tmp);
((C_proc4)(void*)(*((C_word*)t3+1)))(4,t3,t1,t2,C_fix(1));}

/* f_26389 in mm:num in k21827 in k18307 in k18304 in k18301 in k18298 in k17861 in k17858 in k17855 in k17852 in k17849 in k17327 in k17324 in k16801 in k16798 in k16795 in k16792 in k16789 in k16786 in k16783 in k16780 in k16777 in k16774 in k16771 in k16768 in k16765 in k16762 in k16759 in k16756 in k16753 in k16750 in k16747 in k16744 in k16741 in k16602 in k16599 in k16596 in k16593 in k16537 in k16534 in k16531 in k16528 in k16525 in k16522 in k16519 in k16516 in k15271 in k15202 in k15009 in k15006 in k14901 in k14850 in k7607 in k7604 in k5838 in k5545 in k5542 in k5538 in k5247 in k5244 in k5241 in k5238 */
static void C_ccall f_26389(C_word c,C_word t0,C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word t6;
C_word *a;
if(c!=4) C_bad_argc_2(c,4,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr4,(void*)f_26389,4,t0,t1,t2,t3);}
t4=(C_truep(t2)?(C_word)C_i_foreign_pointer_argumentp(t2):C_SCHEME_FALSE);
t5=(C_word)C_i_foreign_fixnum_argumentp(t3);
t6=t1;
((C_proc2)(void*)(*((C_word*)t6+1)))(2,t6,(C_word)stub4746(C_SCHEME_UNDEFINED,t4,t5));}

/* mm:val-set! in k21827 in k18307 in k18304 in k18301 in k18298 in k17861 in k17858 in k17855 in k17852 in k17849 in k17327 in k17324 in k16801 in k16798 in k16795 in k16792 in k16789 in k16786 in k16783 in k16780 in k16777 in k16774 in k16771 in k16768 in k16765 in k16762 in k16759 in k16756 in k16753 in k16750 in k16747 in k16744 in k16741 in k16602 in k16599 in k16596 in k16593 in k16537 in k16534 in k16531 in k16528 in k16525 in k16522 in k16519 in k16516 in k15271 in k15202 in k15009 in k15006 in k14901 in k14850 in k7607 in k7604 in k5838 in k5545 in k5542 in k5538 in k5247 in k5244 in k5241 in k5238 */
static void C_ccall f_26329(C_word c,C_word t0,C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word t6;
C_word ab[9],*a=ab;
if(c!=4) C_bad_argc_2(c,4,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr4,(void*)f_26329,4,t0,t1,t2,t3);}
t4=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_26333,a[2]=t3,a[3]=t1,tmp=(C_word)a,a+=4,tmp);
t5=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_26336,a[2]=t3,a[3]=t2,a[4]=t4,tmp=(C_word)a,a+=5,tmp);
C_trace("ChickenBridge.scm: 366  mm:type?");
t6=C_retrieve(lf[587]);
((C_proc4)C_retrieve_proc(t6))(4,t6,t5,t2,C_fix(11));}

/* k26334 in mm:val-set! in k21827 in k18307 in k18304 in k18301 in k18298 in k17861 in k17858 in k17855 in k17852 in k17849 in k17327 in k17324 in k16801 in k16798 in k16795 in k16792 in k16789 in k16786 in k16783 in k16780 in k16777 in k16774 in k16771 in k16768 in k16765 in k16762 in k16759 in k16756 in k16753 in k16750 in k16747 in k16744 in k16741 in k16602 in k16599 in k16596 in k16593 in k16537 in k16534 in k16531 in k16528 in k16525 in k16522 in k16519 in k16516 in k15271 in k15202 in k15009 in k15006 in k14901 in k14850 in k7607 in k7604 in k5838 in k5545 in k5542 in k5538 in k5247 in k5244 in k5241 in k5238 */
static void C_ccall f_26336(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[5],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_26336,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_26339,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],tmp=(C_word)a,a+=5,tmp);
if(C_truep(t1)){
t3=t2;
f_26339(2,t3,t1);}
else{
C_trace("ChickenBridge.scm: 366  mm:type?");
t3=C_retrieve(lf[587]);
((C_proc4)C_retrieve_proc(t3))(4,t3,t2,((C_word*)t0)[3],C_fix(10));}}

/* k26337 in k26334 in mm:val-set! in k21827 in k18307 in k18304 in k18301 in k18298 in k17861 in k17858 in k17855 in k17852 in k17849 in k17327 in k17324 in k16801 in k16798 in k16795 in k16792 in k16789 in k16786 in k16783 in k16780 in k16777 in k16774 in k16771 in k16768 in k16765 in k16762 in k16759 in k16756 in k16753 in k16750 in k16747 in k16744 in k16741 in k16602 in k16599 in k16596 in k16593 in k16537 in k16534 in k16531 in k16528 in k16525 in k16522 in k16519 in k16516 in k15271 in k15202 in k15009 in k15006 in k14901 in k14850 in k7607 in k7604 in k5838 in k5545 in k5542 in k5538 in k5247 in k5244 in k5241 in k5238 */
static void C_ccall f_26339(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word ab[6],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_26339,2,t0,t1);}
if(C_truep(t1)){
t2=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_26343,a[2]=((C_word)li370),tmp=(C_word)a,a+=3,tmp);
((C_proc5)(void*)(*((C_word*)t2+1)))(5,t2,((C_word*)t0)[4],((C_word*)t0)[3],C_fix(2),((C_word*)t0)[2]);}
else{
t2=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_26363,a[2]=((C_word)li371),tmp=(C_word)a,a+=3,tmp);
((C_proc5)(void*)(*((C_word*)t2+1)))(5,t2,((C_word*)t0)[4],((C_word*)t0)[3],C_fix(1),C_retrieve(lf[589]));}}

/* f_26363 in k26337 in k26334 in mm:val-set! in k21827 in k18307 in k18304 in k18301 in k18298 in k17861 in k17858 in k17855 in k17852 in k17849 in k17327 in k17324 in k16801 in k16798 in k16795 in k16792 in k16789 in k16786 in k16783 in k16780 in k16777 in k16774 in k16771 in k16768 in k16765 in k16762 in k16759 in k16756 in k16753 in k16750 in k16747 in k16744 in k16741 in k16602 in k16599 in k16596 in k16593 in k16537 in k16534 in k16531 in k16528 in k16525 in k16522 in k16519 in k16516 in k15271 in k15202 in k15009 in k15006 in k14901 in k14850 in k7607 in k7604 in k5838 in k5545 in k5542 in k5538 in k5247 in k5244 in k5241 in k5238 */
static void C_ccall f_26363(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4){
C_word tmp;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word *a;
if(c!=5) C_bad_argc_2(c,5,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr5,(void*)f_26363,5,t0,t1,t2,t3,t4);}
t5=(C_truep(t2)?(C_word)C_i_foreign_pointer_argumentp(t2):C_SCHEME_FALSE);
t6=(C_word)C_i_foreign_fixnum_argumentp(t3);
t7=(C_word)C_i_foreign_fixnum_argumentp(t4);
t8=t1;
((C_proc2)(void*)(*((C_word*)t8+1)))(2,t8,(C_word)stub4735(C_SCHEME_UNDEFINED,t5,t6,t7));}

/* f_26343 in k26337 in k26334 in mm:val-set! in k21827 in k18307 in k18304 in k18301 in k18298 in k17861 in k17858 in k17855 in k17852 in k17849 in k17327 in k17324 in k16801 in k16798 in k16795 in k16792 in k16789 in k16786 in k16783 in k16780 in k16777 in k16774 in k16771 in k16768 in k16765 in k16762 in k16759 in k16756 in k16753 in k16750 in k16747 in k16744 in k16741 in k16602 in k16599 in k16596 in k16593 in k16537 in k16534 in k16531 in k16528 in k16525 in k16522 in k16519 in k16516 in k15271 in k15202 in k15009 in k15006 in k14901 in k14850 in k7607 in k7604 in k5838 in k5545 in k5542 in k5538 in k5247 in k5244 in k5241 in k5238 */
static void C_ccall f_26343(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4){
C_word tmp;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word *a;
if(c!=5) C_bad_argc_2(c,5,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr5,(void*)f_26343,5,t0,t1,t2,t3,t4);}
t5=(C_truep(t2)?(C_word)C_i_foreign_pointer_argumentp(t2):C_SCHEME_FALSE);
t6=(C_word)C_i_foreign_fixnum_argumentp(t3);
t7=(C_word)C_i_foreign_fixnum_argumentp(t4);
t8=t1;
((C_proc2)(void*)(*((C_word*)t8+1)))(2,t8,(C_word)stub4725(C_SCHEME_UNDEFINED,t5,t6,t7));}

/* k26331 in mm:val-set! in k21827 in k18307 in k18304 in k18301 in k18298 in k17861 in k17858 in k17855 in k17852 in k17849 in k17327 in k17324 in k16801 in k16798 in k16795 in k16792 in k16789 in k16786 in k16783 in k16780 in k16777 in k16774 in k16771 in k16768 in k16765 in k16762 in k16759 in k16756 in k16753 in k16750 in k16747 in k16744 in k16741 in k16602 in k16599 in k16596 in k16593 in k16537 in k16534 in k16531 in k16528 in k16525 in k16522 in k16519 in k16516 in k15271 in k15202 in k15009 in k15006 in k14901 in k14850 in k7607 in k7604 in k5838 in k5545 in k5542 in k5538 in k5247 in k5244 in k5241 in k5238 */
static void C_ccall f_26333(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
t2=((C_word*)t0)[3];
((C_proc2)(void*)(*((C_word*)t2+1)))(2,t2,((C_word*)t0)[2]);}

/* mm:val in k21827 in k18307 in k18304 in k18301 in k18298 in k17861 in k17858 in k17855 in k17852 in k17849 in k17327 in k17324 in k16801 in k16798 in k16795 in k16792 in k16789 in k16786 in k16783 in k16780 in k16777 in k16774 in k16771 in k16768 in k16765 in k16762 in k16759 in k16756 in k16753 in k16750 in k16747 in k16744 in k16741 in k16602 in k16599 in k16596 in k16593 in k16537 in k16534 in k16531 in k16528 in k16525 in k16522 in k16519 in k16516 in k15271 in k15202 in k15009 in k15006 in k14901 in k14850 in k7607 in k7604 in k5838 in k5545 in k5542 in k5538 in k5247 in k5244 in k5241 in k5238 */
static void C_ccall f_26282(C_word c,C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word ab[4],*a=ab;
if(c!=3) C_bad_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr3,(void*)f_26282,3,t0,t1,t2);}
t3=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_26289,a[2]=t2,a[3]=t1,tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 366  mm:type?");
t4=C_retrieve(lf[587]);
((C_proc4)C_retrieve_proc(t4))(4,t4,t3,t2,C_fix(11));}

/* k26287 in mm:val in k21827 in k18307 in k18304 in k18301 in k18298 in k17861 in k17858 in k17855 in k17852 in k17849 in k17327 in k17324 in k16801 in k16798 in k16795 in k16792 in k16789 in k16786 in k16783 in k16780 in k16777 in k16774 in k16771 in k16768 in k16765 in k16762 in k16759 in k16756 in k16753 in k16750 in k16747 in k16744 in k16741 in k16602 in k16599 in k16596 in k16593 in k16537 in k16534 in k16531 in k16528 in k16525 in k16522 in k16519 in k16516 in k15271 in k15202 in k15009 in k15006 in k14901 in k14850 in k7607 in k7604 in k5838 in k5545 in k5542 in k5538 in k5247 in k5244 in k5241 in k5238 */
static void C_ccall f_26289(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[4],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_26289,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_26292,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],tmp=(C_word)a,a+=4,tmp);
if(C_truep(t1)){
t3=t2;
f_26292(2,t3,t1);}
else{
C_trace("ChickenBridge.scm: 366  mm:type?");
t3=C_retrieve(lf[587]);
((C_proc4)C_retrieve_proc(t3))(4,t3,t2,((C_word*)t0)[2],C_fix(10));}}

/* k26290 in k26287 in mm:val in k21827 in k18307 in k18304 in k18301 in k18298 in k17861 in k17858 in k17855 in k17852 in k17849 in k17327 in k17324 in k16801 in k16798 in k16795 in k16792 in k16789 in k16786 in k16783 in k16780 in k16777 in k16774 in k16771 in k16768 in k16765 in k16762 in k16759 in k16756 in k16753 in k16750 in k16747 in k16744 in k16741 in k16602 in k16599 in k16596 in k16593 in k16537 in k16534 in k16531 in k16528 in k16525 in k16522 in k16519 in k16516 in k15271 in k15202 in k15009 in k15006 in k14901 in k14850 in k7607 in k7604 in k5838 in k5545 in k5542 in k5538 in k5247 in k5244 in k5241 in k5238 */
static void C_ccall f_26292(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word ab[6],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_26292,2,t0,t1);}
if(C_truep(t1)){
t2=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_26296,a[2]=((C_word)li367),tmp=(C_word)a,a+=3,tmp);
((C_proc4)(void*)(*((C_word*)t2+1)))(4,t2,((C_word*)t0)[3],((C_word*)t0)[2],C_fix(2));}
else{
t2=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_26312,a[2]=((C_word)li368),tmp=(C_word)a,a+=3,tmp);
((C_proc4)(void*)(*((C_word*)t2+1)))(4,t2,((C_word*)t0)[3],((C_word*)t0)[2],C_fix(1));}}

/* f_26312 in k26290 in k26287 in mm:val in k21827 in k18307 in k18304 in k18301 in k18298 in k17861 in k17858 in k17855 in k17852 in k17849 in k17327 in k17324 in k16801 in k16798 in k16795 in k16792 in k16789 in k16786 in k16783 in k16780 in k16777 in k16774 in k16771 in k16768 in k16765 in k16762 in k16759 in k16756 in k16753 in k16750 in k16747 in k16744 in k16741 in k16602 in k16599 in k16596 in k16593 in k16537 in k16534 in k16531 in k16528 in k16525 in k16522 in k16519 in k16516 in k15271 in k15202 in k15009 in k15006 in k14901 in k14850 in k7607 in k7604 in k5838 in k5545 in k5542 in k5538 in k5247 in k5244 in k5241 in k5238 */
static void C_ccall f_26312(C_word c,C_word t0,C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word t6;
C_word *a;
if(c!=4) C_bad_argc_2(c,4,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr4,(void*)f_26312,4,t0,t1,t2,t3);}
t4=(C_truep(t2)?(C_word)C_i_foreign_pointer_argumentp(t2):C_SCHEME_FALSE);
t5=(C_word)C_i_foreign_fixnum_argumentp(t3);
t6=t1;
((C_proc2)(void*)(*((C_word*)t6+1)))(2,t6,(C_word)stub4712(C_SCHEME_UNDEFINED,t4,t5));}

/* f_26296 in k26290 in k26287 in mm:val in k21827 in k18307 in k18304 in k18301 in k18298 in k17861 in k17858 in k17855 in k17852 in k17849 in k17327 in k17324 in k16801 in k16798 in k16795 in k16792 in k16789 in k16786 in k16783 in k16780 in k16777 in k16774 in k16771 in k16768 in k16765 in k16762 in k16759 in k16756 in k16753 in k16750 in k16747 in k16744 in k16741 in k16602 in k16599 in k16596 in k16593 in k16537 in k16534 in k16531 in k16528 in k16525 in k16522 in k16519 in k16516 in k15271 in k15202 in k15009 in k15006 in k14901 in k14850 in k7607 in k7604 in k5838 in k5545 in k5542 in k5538 in k5247 in k5244 in k5241 in k5238 */
static void C_ccall f_26296(C_word c,C_word t0,C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word t6;
C_word *a;
if(c!=4) C_bad_argc_2(c,4,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr4,(void*)f_26296,4,t0,t1,t2,t3);}
t4=(C_truep(t2)?(C_word)C_i_foreign_pointer_argumentp(t2):C_SCHEME_FALSE);
t5=(C_word)C_i_foreign_fixnum_argumentp(t3);
t6=t1;
((C_proc2)(void*)(*((C_word*)t6+1)))(2,t6,(C_word)stub4704(C_SCHEME_UNDEFINED,t4,t5));}

/* mm:vel-set! in k21827 in k18307 in k18304 in k18301 in k18298 in k17861 in k17858 in k17855 in k17852 in k17849 in k17327 in k17324 in k16801 in k16798 in k16795 in k16792 in k16789 in k16786 in k16783 in k16780 in k16777 in k16774 in k16771 in k16768 in k16765 in k16762 in k16759 in k16756 in k16753 in k16750 in k16747 in k16744 in k16741 in k16602 in k16599 in k16596 in k16593 in k16537 in k16534 in k16531 in k16528 in k16525 in k16522 in k16519 in k16516 in k15271 in k15202 in k15009 in k15006 in k14901 in k14850 in k7607 in k7604 in k5838 in k5545 in k5542 in k5538 in k5247 in k5244 in k5241 in k5238 */
static void C_ccall f_26259(C_word c,C_word t0,C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word ab[7],*a=ab;
if(c!=4) C_bad_argc_2(c,4,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr4,(void*)f_26259,4,t0,t1,t2,t3);}
t4=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_26263,a[2]=t3,a[3]=t1,tmp=(C_word)a,a+=4,tmp);
t5=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_26264,a[2]=((C_word)li365),tmp=(C_word)a,a+=3,tmp);
((C_proc5)(void*)(*((C_word*)t5+1)))(5,t5,t4,t2,C_fix(2),t3);}

/* f_26264 in mm:vel-set! in k21827 in k18307 in k18304 in k18301 in k18298 in k17861 in k17858 in k17855 in k17852 in k17849 in k17327 in k17324 in k16801 in k16798 in k16795 in k16792 in k16789 in k16786 in k16783 in k16780 in k16777 in k16774 in k16771 in k16768 in k16765 in k16762 in k16759 in k16756 in k16753 in k16750 in k16747 in k16744 in k16741 in k16602 in k16599 in k16596 in k16593 in k16537 in k16534 in k16531 in k16528 in k16525 in k16522 in k16519 in k16516 in k15271 in k15202 in k15009 in k15006 in k14901 in k14850 in k7607 in k7604 in k5838 in k5545 in k5542 in k5538 in k5247 in k5244 in k5241 in k5238 */
static void C_ccall f_26264(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4){
C_word tmp;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word *a;
if(c!=5) C_bad_argc_2(c,5,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr5,(void*)f_26264,5,t0,t1,t2,t3,t4);}
t5=(C_truep(t2)?(C_word)C_i_foreign_pointer_argumentp(t2):C_SCHEME_FALSE);
t6=(C_word)C_i_foreign_fixnum_argumentp(t3);
t7=(C_word)C_i_foreign_fixnum_argumentp(t4);
t8=t1;
((C_proc2)(void*)(*((C_word*)t8+1)))(2,t8,(C_word)stub4691(C_SCHEME_UNDEFINED,t5,t6,t7));}

/* k26261 in mm:vel-set! in k21827 in k18307 in k18304 in k18301 in k18298 in k17861 in k17858 in k17855 in k17852 in k17849 in k17327 in k17324 in k16801 in k16798 in k16795 in k16792 in k16789 in k16786 in k16783 in k16780 in k16777 in k16774 in k16771 in k16768 in k16765 in k16762 in k16759 in k16756 in k16753 in k16750 in k16747 in k16744 in k16741 in k16602 in k16599 in k16596 in k16593 in k16537 in k16534 in k16531 in k16528 in k16525 in k16522 in k16519 in k16516 in k15271 in k15202 in k15009 in k15006 in k14901 in k14850 in k7607 in k7604 in k5838 in k5545 in k5542 in k5538 in k5247 in k5244 in k5241 in k5238 */
static void C_ccall f_26263(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
t2=((C_word*)t0)[3];
((C_proc2)(void*)(*((C_word*)t2+1)))(2,t2,((C_word*)t0)[2]);}

/* mm:vel in k21827 in k18307 in k18304 in k18301 in k18298 in k17861 in k17858 in k17855 in k17852 in k17849 in k17327 in k17324 in k16801 in k16798 in k16795 in k16792 in k16789 in k16786 in k16783 in k16780 in k16777 in k16774 in k16771 in k16768 in k16765 in k16762 in k16759 in k16756 in k16753 in k16750 in k16747 in k16744 in k16741 in k16602 in k16599 in k16596 in k16593 in k16537 in k16534 in k16531 in k16528 in k16525 in k16522 in k16519 in k16516 in k15271 in k15202 in k15009 in k15006 in k14901 in k14850 in k7607 in k7604 in k5838 in k5545 in k5542 in k5538 in k5247 in k5244 in k5241 in k5238 */
static void C_ccall f_26240(C_word c,C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word ab[3],*a=ab;
if(c!=3) C_bad_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr3,(void*)f_26240,3,t0,t1,t2);}
t3=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_26245,a[2]=((C_word)li363),tmp=(C_word)a,a+=3,tmp);
((C_proc4)(void*)(*((C_word*)t3+1)))(4,t3,t1,t2,C_fix(2));}

/* f_26245 in mm:vel in k21827 in k18307 in k18304 in k18301 in k18298 in k17861 in k17858 in k17855 in k17852 in k17849 in k17327 in k17324 in k16801 in k16798 in k16795 in k16792 in k16789 in k16786 in k16783 in k16780 in k16777 in k16774 in k16771 in k16768 in k16765 in k16762 in k16759 in k16756 in k16753 in k16750 in k16747 in k16744 in k16741 in k16602 in k16599 in k16596 in k16593 in k16537 in k16534 in k16531 in k16528 in k16525 in k16522 in k16519 in k16516 in k15271 in k15202 in k15009 in k15006 in k14901 in k14850 in k7607 in k7604 in k5838 in k5545 in k5542 in k5538 in k5247 in k5244 in k5241 in k5238 */
static void C_ccall f_26245(C_word c,C_word t0,C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word t6;
C_word *a;
if(c!=4) C_bad_argc_2(c,4,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr4,(void*)f_26245,4,t0,t1,t2,t3);}
t4=(C_truep(t2)?(C_word)C_i_foreign_pointer_argumentp(t2):C_SCHEME_FALSE);
t5=(C_word)C_i_foreign_fixnum_argumentp(t3);
t6=t1;
((C_proc2)(void*)(*((C_word*)t6+1)))(2,t6,(C_word)stub4680(C_SCHEME_UNDEFINED,t4,t5));}

/* mm:key-set! in k21827 in k18307 in k18304 in k18301 in k18298 in k17861 in k17858 in k17855 in k17852 in k17849 in k17327 in k17324 in k16801 in k16798 in k16795 in k16792 in k16789 in k16786 in k16783 in k16780 in k16777 in k16774 in k16771 in k16768 in k16765 in k16762 in k16759 in k16756 in k16753 in k16750 in k16747 in k16744 in k16741 in k16602 in k16599 in k16596 in k16593 in k16537 in k16534 in k16531 in k16528 in k16525 in k16522 in k16519 in k16516 in k15271 in k15202 in k15009 in k15006 in k14901 in k14850 in k7607 in k7604 in k5838 in k5545 in k5542 in k5538 in k5247 in k5244 in k5241 in k5238 */
static void C_ccall f_26217(C_word c,C_word t0,C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word ab[7],*a=ab;
if(c!=4) C_bad_argc_2(c,4,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr4,(void*)f_26217,4,t0,t1,t2,t3);}
t4=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_26221,a[2]=t3,a[3]=t1,tmp=(C_word)a,a+=4,tmp);
t5=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_26222,a[2]=((C_word)li361),tmp=(C_word)a,a+=3,tmp);
((C_proc5)(void*)(*((C_word*)t5+1)))(5,t5,t4,t2,C_fix(1),t3);}

/* f_26222 in mm:key-set! in k21827 in k18307 in k18304 in k18301 in k18298 in k17861 in k17858 in k17855 in k17852 in k17849 in k17327 in k17324 in k16801 in k16798 in k16795 in k16792 in k16789 in k16786 in k16783 in k16780 in k16777 in k16774 in k16771 in k16768 in k16765 in k16762 in k16759 in k16756 in k16753 in k16750 in k16747 in k16744 in k16741 in k16602 in k16599 in k16596 in k16593 in k16537 in k16534 in k16531 in k16528 in k16525 in k16522 in k16519 in k16516 in k15271 in k15202 in k15009 in k15006 in k14901 in k14850 in k7607 in k7604 in k5838 in k5545 in k5542 in k5538 in k5247 in k5244 in k5241 in k5238 */
static void C_ccall f_26222(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4){
C_word tmp;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word *a;
if(c!=5) C_bad_argc_2(c,5,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr5,(void*)f_26222,5,t0,t1,t2,t3,t4);}
t5=(C_truep(t2)?(C_word)C_i_foreign_pointer_argumentp(t2):C_SCHEME_FALSE);
t6=(C_word)C_i_foreign_fixnum_argumentp(t3);
t7=(C_word)C_i_foreign_fixnum_argumentp(t4);
t8=t1;
((C_proc2)(void*)(*((C_word*)t8+1)))(2,t8,(C_word)stub4669(C_SCHEME_UNDEFINED,t5,t6,t7));}

/* k26219 in mm:key-set! in k21827 in k18307 in k18304 in k18301 in k18298 in k17861 in k17858 in k17855 in k17852 in k17849 in k17327 in k17324 in k16801 in k16798 in k16795 in k16792 in k16789 in k16786 in k16783 in k16780 in k16777 in k16774 in k16771 in k16768 in k16765 in k16762 in k16759 in k16756 in k16753 in k16750 in k16747 in k16744 in k16741 in k16602 in k16599 in k16596 in k16593 in k16537 in k16534 in k16531 in k16528 in k16525 in k16522 in k16519 in k16516 in k15271 in k15202 in k15009 in k15006 in k14901 in k14850 in k7607 in k7604 in k5838 in k5545 in k5542 in k5538 in k5247 in k5244 in k5241 in k5238 */
static void C_ccall f_26221(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
t2=((C_word*)t0)[3];
((C_proc2)(void*)(*((C_word*)t2+1)))(2,t2,((C_word*)t0)[2]);}

/* mm:key in k21827 in k18307 in k18304 in k18301 in k18298 in k17861 in k17858 in k17855 in k17852 in k17849 in k17327 in k17324 in k16801 in k16798 in k16795 in k16792 in k16789 in k16786 in k16783 in k16780 in k16777 in k16774 in k16771 in k16768 in k16765 in k16762 in k16759 in k16756 in k16753 in k16750 in k16747 in k16744 in k16741 in k16602 in k16599 in k16596 in k16593 in k16537 in k16534 in k16531 in k16528 in k16525 in k16522 in k16519 in k16516 in k15271 in k15202 in k15009 in k15006 in k14901 in k14850 in k7607 in k7604 in k5838 in k5545 in k5542 in k5538 in k5247 in k5244 in k5241 in k5238 */
static void C_ccall f_26198(C_word c,C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word ab[3],*a=ab;
if(c!=3) C_bad_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr3,(void*)f_26198,3,t0,t1,t2);}
t3=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_26203,a[2]=((C_word)li359),tmp=(C_word)a,a+=3,tmp);
((C_proc4)(void*)(*((C_word*)t3+1)))(4,t3,t1,t2,C_fix(1));}

/* f_26203 in mm:key in k21827 in k18307 in k18304 in k18301 in k18298 in k17861 in k17858 in k17855 in k17852 in k17849 in k17327 in k17324 in k16801 in k16798 in k16795 in k16792 in k16789 in k16786 in k16783 in k16780 in k16777 in k16774 in k16771 in k16768 in k16765 in k16762 in k16759 in k16756 in k16753 in k16750 in k16747 in k16744 in k16741 in k16602 in k16599 in k16596 in k16593 in k16537 in k16534 in k16531 in k16528 in k16525 in k16522 in k16519 in k16516 in k15271 in k15202 in k15009 in k15006 in k14901 in k14850 in k7607 in k7604 in k5838 in k5545 in k5542 in k5538 in k5247 in k5244 in k5241 in k5238 */
static void C_ccall f_26203(C_word c,C_word t0,C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word t6;
C_word *a;
if(c!=4) C_bad_argc_2(c,4,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr4,(void*)f_26203,4,t0,t1,t2,t3);}
t4=(C_truep(t2)?(C_word)C_i_foreign_pointer_argumentp(t2):C_SCHEME_FALSE);
t5=(C_word)C_i_foreign_fixnum_argumentp(t3);
t6=t1;
((C_proc2)(void*)(*((C_word*)t6+1)))(2,t6,(C_word)stub4658(C_SCHEME_UNDEFINED,t4,t5));}

/* mm:chan-set! in k21827 in k18307 in k18304 in k18301 in k18298 in k17861 in k17858 in k17855 in k17852 in k17849 in k17327 in k17324 in k16801 in k16798 in k16795 in k16792 in k16789 in k16786 in k16783 in k16780 in k16777 in k16774 in k16771 in k16768 in k16765 in k16762 in k16759 in k16756 in k16753 in k16750 in k16747 in k16744 in k16741 in k16602 in k16599 in k16596 in k16593 in k16537 in k16534 in k16531 in k16528 in k16525 in k16522 in k16519 in k16516 in k15271 in k15202 in k15009 in k15006 in k14901 in k14850 in k7607 in k7604 in k5838 in k5545 in k5542 in k5538 in k5247 in k5244 in k5241 in k5238 */
static void C_ccall f_26179(C_word c,C_word t0,C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word ab[7],*a=ab;
if(c!=4) C_bad_argc_2(c,4,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr4,(void*)f_26179,4,t0,t1,t2,t3);}
t4=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_26183,a[2]=t3,a[3]=t1,tmp=(C_word)a,a+=4,tmp);
t5=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_26184,a[2]=((C_word)li357),tmp=(C_word)a,a+=3,tmp);
((C_proc4)(void*)(*((C_word*)t5+1)))(4,t5,t4,t2,t3);}

/* f_26184 in mm:chan-set! in k21827 in k18307 in k18304 in k18301 in k18298 in k17861 in k17858 in k17855 in k17852 in k17849 in k17327 in k17324 in k16801 in k16798 in k16795 in k16792 in k16789 in k16786 in k16783 in k16780 in k16777 in k16774 in k16771 in k16768 in k16765 in k16762 in k16759 in k16756 in k16753 in k16750 in k16747 in k16744 in k16741 in k16602 in k16599 in k16596 in k16593 in k16537 in k16534 in k16531 in k16528 in k16525 in k16522 in k16519 in k16516 in k15271 in k15202 in k15009 in k15006 in k14901 in k14850 in k7607 in k7604 in k5838 in k5545 in k5542 in k5538 in k5247 in k5244 in k5241 in k5238 */
static void C_ccall f_26184(C_word c,C_word t0,C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word t6;
C_word *a;
if(c!=4) C_bad_argc_2(c,4,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr4,(void*)f_26184,4,t0,t1,t2,t3);}
t4=(C_truep(t2)?(C_word)C_i_foreign_pointer_argumentp(t2):C_SCHEME_FALSE);
t5=(C_word)C_i_foreign_fixnum_argumentp(t3);
t6=t1;
((C_proc2)(void*)(*((C_word*)t6+1)))(2,t6,(C_word)stub4648(C_SCHEME_UNDEFINED,t4,t5));}

/* k26181 in mm:chan-set! in k21827 in k18307 in k18304 in k18301 in k18298 in k17861 in k17858 in k17855 in k17852 in k17849 in k17327 in k17324 in k16801 in k16798 in k16795 in k16792 in k16789 in k16786 in k16783 in k16780 in k16777 in k16774 in k16771 in k16768 in k16765 in k16762 in k16759 in k16756 in k16753 in k16750 in k16747 in k16744 in k16741 in k16602 in k16599 in k16596 in k16593 in k16537 in k16534 in k16531 in k16528 in k16525 in k16522 in k16519 in k16516 in k15271 in k15202 in k15009 in k15006 in k14901 in k14850 in k7607 in k7604 in k5838 in k5545 in k5542 in k5538 in k5247 in k5244 in k5241 in k5238 */
static void C_ccall f_26183(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
t2=((C_word*)t0)[3];
((C_proc2)(void*)(*((C_word*)t2+1)))(2,t2,((C_word*)t0)[2]);}

/* mm:chan in k21827 in k18307 in k18304 in k18301 in k18298 in k17861 in k17858 in k17855 in k17852 in k17849 in k17327 in k17324 in k16801 in k16798 in k16795 in k16792 in k16789 in k16786 in k16783 in k16780 in k16777 in k16774 in k16771 in k16768 in k16765 in k16762 in k16759 in k16756 in k16753 in k16750 in k16747 in k16744 in k16741 in k16602 in k16599 in k16596 in k16593 in k16537 in k16534 in k16531 in k16528 in k16525 in k16522 in k16519 in k16516 in k15271 in k15202 in k15009 in k15006 in k14901 in k14850 in k7607 in k7604 in k5838 in k5545 in k5542 in k5538 in k5247 in k5244 in k5241 in k5238 */
static void C_ccall f_26164(C_word c,C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word ab[3],*a=ab;
if(c!=3) C_bad_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr3,(void*)f_26164,3,t0,t1,t2);}
t3=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_26169,a[2]=((C_word)li355),tmp=(C_word)a,a+=3,tmp);
((C_proc3)(void*)(*((C_word*)t3+1)))(3,t3,t1,t2);}

/* f_26169 in mm:chan in k21827 in k18307 in k18304 in k18301 in k18298 in k17861 in k17858 in k17855 in k17852 in k17849 in k17327 in k17324 in k16801 in k16798 in k16795 in k16792 in k16789 in k16786 in k16783 in k16780 in k16777 in k16774 in k16771 in k16768 in k16765 in k16762 in k16759 in k16756 in k16753 in k16750 in k16747 in k16744 in k16741 in k16602 in k16599 in k16596 in k16593 in k16537 in k16534 in k16531 in k16528 in k16525 in k16522 in k16519 in k16516 in k15271 in k15202 in k15009 in k15006 in k14901 in k14850 in k7607 in k7604 in k5838 in k5545 in k5542 in k5538 in k5247 in k5244 in k5241 in k5238 */
static void C_ccall f_26169(C_word c,C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word *a;
if(c!=3) C_bad_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr3,(void*)f_26169,3,t0,t1,t2);}
t3=(C_truep(t2)?(C_word)C_i_foreign_pointer_argumentp(t2):C_SCHEME_FALSE);
t4=t1;
((C_proc2)(void*)(*((C_word*)t4+1)))(2,t4,(C_word)stub4639(C_SCHEME_UNDEFINED,t3));}

/* mm:time-set! in k21827 in k18307 in k18304 in k18301 in k18298 in k17861 in k17858 in k17855 in k17852 in k17849 in k17327 in k17324 in k16801 in k16798 in k16795 in k16792 in k16789 in k16786 in k16783 in k16780 in k16777 in k16774 in k16771 in k16768 in k16765 in k16762 in k16759 in k16756 in k16753 in k16750 in k16747 in k16744 in k16741 in k16602 in k16599 in k16596 in k16593 in k16537 in k16534 in k16531 in k16528 in k16525 in k16522 in k16519 in k16516 in k15271 in k15202 in k15009 in k15006 in k14901 in k14850 in k7607 in k7604 in k5838 in k5545 in k5542 in k5538 in k5247 in k5244 in k5241 in k5238 */
static void C_ccall f_26145(C_word c,C_word t0,C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word ab[7],*a=ab;
if(c!=4) C_bad_argc_2(c,4,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr4,(void*)f_26145,4,t0,t1,t2,t3);}
t4=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_26149,a[2]=t3,a[3]=t1,tmp=(C_word)a,a+=4,tmp);
t5=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_26150,a[2]=((C_word)li353),tmp=(C_word)a,a+=3,tmp);
((C_proc4)(void*)(*((C_word*)t5+1)))(4,t5,t4,t2,t3);}

/* f_26150 in mm:time-set! in k21827 in k18307 in k18304 in k18301 in k18298 in k17861 in k17858 in k17855 in k17852 in k17849 in k17327 in k17324 in k16801 in k16798 in k16795 in k16792 in k16789 in k16786 in k16783 in k16780 in k16777 in k16774 in k16771 in k16768 in k16765 in k16762 in k16759 in k16756 in k16753 in k16750 in k16747 in k16744 in k16741 in k16602 in k16599 in k16596 in k16593 in k16537 in k16534 in k16531 in k16528 in k16525 in k16522 in k16519 in k16516 in k15271 in k15202 in k15009 in k15006 in k14901 in k14850 in k7607 in k7604 in k5838 in k5545 in k5542 in k5538 in k5247 in k5244 in k5241 in k5238 */
static void C_ccall f_26150(C_word c,C_word t0,C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word t6;
C_word *a;
if(c!=4) C_bad_argc_2(c,4,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr4,(void*)f_26150,4,t0,t1,t2,t3);}
t4=(C_truep(t2)?(C_word)C_i_foreign_pointer_argumentp(t2):C_SCHEME_FALSE);
t5=(C_word)C_i_foreign_flonum_argumentp(t3);
t6=t1;
((C_proc2)(void*)(*((C_word*)t6+1)))(2,t6,(C_word)stub4630(C_SCHEME_UNDEFINED,t4,t5));}

/* k26147 in mm:time-set! in k21827 in k18307 in k18304 in k18301 in k18298 in k17861 in k17858 in k17855 in k17852 in k17849 in k17327 in k17324 in k16801 in k16798 in k16795 in k16792 in k16789 in k16786 in k16783 in k16780 in k16777 in k16774 in k16771 in k16768 in k16765 in k16762 in k16759 in k16756 in k16753 in k16750 in k16747 in k16744 in k16741 in k16602 in k16599 in k16596 in k16593 in k16537 in k16534 in k16531 in k16528 in k16525 in k16522 in k16519 in k16516 in k15271 in k15202 in k15009 in k15006 in k14901 in k14850 in k7607 in k7604 in k5838 in k5545 in k5542 in k5538 in k5247 in k5244 in k5241 in k5238 */
static void C_ccall f_26149(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
t2=((C_word*)t0)[3];
((C_proc2)(void*)(*((C_word*)t2+1)))(2,t2,((C_word*)t0)[2]);}

/* mm:time in k21827 in k18307 in k18304 in k18301 in k18298 in k17861 in k17858 in k17855 in k17852 in k17849 in k17327 in k17324 in k16801 in k16798 in k16795 in k16792 in k16789 in k16786 in k16783 in k16780 in k16777 in k16774 in k16771 in k16768 in k16765 in k16762 in k16759 in k16756 in k16753 in k16750 in k16747 in k16744 in k16741 in k16602 in k16599 in k16596 in k16593 in k16537 in k16534 in k16531 in k16528 in k16525 in k16522 in k16519 in k16516 in k15271 in k15202 in k15009 in k15006 in k14901 in k14850 in k7607 in k7604 in k5838 in k5545 in k5542 in k5538 in k5247 in k5244 in k5241 in k5238 */
static void C_ccall f_26130(C_word c,C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word ab[3],*a=ab;
if(c!=3) C_bad_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr3,(void*)f_26130,3,t0,t1,t2);}
t3=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_26135,a[2]=((C_word)li351),tmp=(C_word)a,a+=3,tmp);
((C_proc3)(void*)(*((C_word*)t3+1)))(3,t3,t1,t2);}

/* f_26135 in mm:time in k21827 in k18307 in k18304 in k18301 in k18298 in k17861 in k17858 in k17855 in k17852 in k17849 in k17327 in k17324 in k16801 in k16798 in k16795 in k16792 in k16789 in k16786 in k16783 in k16780 in k16777 in k16774 in k16771 in k16768 in k16765 in k16762 in k16759 in k16756 in k16753 in k16750 in k16747 in k16744 in k16741 in k16602 in k16599 in k16596 in k16593 in k16537 in k16534 in k16531 in k16528 in k16525 in k16522 in k16519 in k16516 in k15271 in k15202 in k15009 in k15006 in k14901 in k14850 in k7607 in k7604 in k5838 in k5545 in k5542 in k5538 in k5247 in k5244 in k5241 in k5238 */
static void C_ccall f_26135(C_word c,C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word t5;
C_word ab[6],*a=ab;
if(c!=3) C_bad_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr3,(void*)f_26135,3,t0,t1,t2);}
t3=(C_word)C_a_i_bytevector(&a,1,C_fix(4));
t4=(C_truep(t2)?(C_word)C_i_foreign_pointer_argumentp(t2):C_SCHEME_FALSE);
t5=t1;
((C_proc2)(void*)(*((C_word*)t5+1)))(2,t5,(C_word)stub4620(t3,t4));}

/* mm:copy in k21827 in k18307 in k18304 in k18301 in k18298 in k17861 in k17858 in k17855 in k17852 in k17849 in k17327 in k17324 in k16801 in k16798 in k16795 in k16792 in k16789 in k16786 in k16783 in k16780 in k16777 in k16774 in k16771 in k16768 in k16765 in k16762 in k16759 in k16756 in k16753 in k16750 in k16747 in k16744 in k16741 in k16602 in k16599 in k16596 in k16593 in k16537 in k16534 in k16531 in k16528 in k16525 in k16522 in k16519 in k16516 in k15271 in k15202 in k15009 in k15006 in k14901 in k14850 in k7607 in k7604 in k5838 in k5545 in k5542 in k5538 in k5247 in k5244 in k5241 in k5238 */
static void C_ccall f_26115(C_word c,C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word ab[3],*a=ab;
if(c!=3) C_bad_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr3,(void*)f_26115,3,t0,t1,t2);}
t3=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_26120,a[2]=((C_word)li349),tmp=(C_word)a,a+=3,tmp);
((C_proc3)(void*)(*((C_word*)t3+1)))(3,t3,t1,t2);}

/* f_26120 in mm:copy in k21827 in k18307 in k18304 in k18301 in k18298 in k17861 in k17858 in k17855 in k17852 in k17849 in k17327 in k17324 in k16801 in k16798 in k16795 in k16792 in k16789 in k16786 in k16783 in k16780 in k16777 in k16774 in k16771 in k16768 in k16765 in k16762 in k16759 in k16756 in k16753 in k16750 in k16747 in k16744 in k16741 in k16602 in k16599 in k16596 in k16593 in k16537 in k16534 in k16531 in k16528 in k16525 in k16522 in k16519 in k16516 in k15271 in k15202 in k15009 in k15006 in k14901 in k14850 in k7607 in k7604 in k5838 in k5545 in k5542 in k5538 in k5247 in k5244 in k5241 in k5238 */
static void C_ccall f_26120(C_word c,C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word t5;
C_word ab[5],*a=ab;
if(c!=3) C_bad_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr3,(void*)f_26120,3,t0,t1,t2);}
t3=(C_word)C_a_i_bytevector(&a,1,C_fix(3));
t4=(C_truep(t2)?(C_word)C_i_foreign_pointer_argumentp(t2):C_SCHEME_FALSE);
t5=t1;
((C_proc2)(void*)(*((C_word*)t5+1)))(2,t5,(C_word)stub4612(t3,t4));}

/* mm:free in k21827 in k18307 in k18304 in k18301 in k18298 in k17861 in k17858 in k17855 in k17852 in k17849 in k17327 in k17324 in k16801 in k16798 in k16795 in k16792 in k16789 in k16786 in k16783 in k16780 in k16777 in k16774 in k16771 in k16768 in k16765 in k16762 in k16759 in k16756 in k16753 in k16750 in k16747 in k16744 in k16741 in k16602 in k16599 in k16596 in k16593 in k16537 in k16534 in k16531 in k16528 in k16525 in k16522 in k16519 in k16516 in k15271 in k15202 in k15009 in k15006 in k14901 in k14850 in k7607 in k7604 in k5838 in k5545 in k5542 in k5538 in k5247 in k5244 in k5241 in k5238 */
static void C_ccall f_26097(C_word c,C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word ab[6],*a=ab;
if(c!=3) C_bad_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr3,(void*)f_26097,3,t0,t1,t2);}
t3=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_26101,a[2]=t1,tmp=(C_word)a,a+=3,tmp);
t4=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_26105,a[2]=((C_word)li347),tmp=(C_word)a,a+=3,tmp);
((C_proc3)(void*)(*((C_word*)t4+1)))(3,t4,t3,t2);}

/* f_26105 in mm:free in k21827 in k18307 in k18304 in k18301 in k18298 in k17861 in k17858 in k17855 in k17852 in k17849 in k17327 in k17324 in k16801 in k16798 in k16795 in k16792 in k16789 in k16786 in k16783 in k16780 in k16777 in k16774 in k16771 in k16768 in k16765 in k16762 in k16759 in k16756 in k16753 in k16750 in k16747 in k16744 in k16741 in k16602 in k16599 in k16596 in k16593 in k16537 in k16534 in k16531 in k16528 in k16525 in k16522 in k16519 in k16516 in k15271 in k15202 in k15009 in k15006 in k14901 in k14850 in k7607 in k7604 in k5838 in k5545 in k5542 in k5538 in k5247 in k5244 in k5241 in k5238 */
static void C_ccall f_26105(C_word c,C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word *a;
if(c!=3) C_bad_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr3,(void*)f_26105,3,t0,t1,t2);}
t3=(C_truep(t2)?(C_word)C_i_foreign_pointer_argumentp(t2):C_SCHEME_FALSE);
t4=t1;
((C_proc2)(void*)(*((C_word*)t4+1)))(2,t4,(C_word)stub4604(C_SCHEME_UNDEFINED,t3));}

/* k26099 in mm:free in k21827 in k18307 in k18304 in k18301 in k18298 in k17861 in k17858 in k17855 in k17852 in k17849 in k17327 in k17324 in k16801 in k16798 in k16795 in k16792 in k16789 in k16786 in k16783 in k16780 in k16777 in k16774 in k16771 in k16768 in k16765 in k16762 in k16759 in k16756 in k16753 in k16750 in k16747 in k16744 in k16741 in k16602 in k16599 in k16596 in k16593 in k16537 in k16534 in k16531 in k16528 in k16525 in k16522 in k16519 in k16516 in k15271 in k15202 in k15009 in k15006 in k14901 in k14850 in k7607 in k7604 in k5838 in k5545 in k5542 in k5538 in k5247 in k5244 in k5241 in k5238 */
static void C_ccall f_26101(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 366  values");
C_values(2,0,((C_word*)t0)[2]);}

/* mm:make-bend in k21827 in k18307 in k18304 in k18301 in k18298 in k17861 in k17858 in k17855 in k17852 in k17849 in k17327 in k17324 in k16801 in k16798 in k16795 in k16792 in k16789 in k16786 in k16783 in k16780 in k16777 in k16774 in k16771 in k16768 in k16765 in k16762 in k16759 in k16756 in k16753 in k16750 in k16747 in k16744 in k16741 in k16602 in k16599 in k16596 in k16593 in k16537 in k16534 in k16531 in k16528 in k16525 in k16522 in k16519 in k16516 in k15271 in k15202 in k15009 in k15006 in k14901 in k14850 in k7607 in k7604 in k5838 in k5545 in k5542 in k5538 in k5247 in k5244 in k5241 in k5238 */
static void C_ccall f_25627(C_word c,C_word t0,C_word t1,...){
C_word tmp;
C_word t2;
va_list v;
C_word *a,c2=c;
C_save_rest(t1,c2,2);
C_check_for_interrupt;
if(!C_demand(c*C_SIZEOF_PAIR+58)){
C_save_and_reclaim((void*)tr2r,(void*)f_25627r,2,t0,t1);}
else{
a=C_alloc((c-2)*3);
t2=C_restore_rest(a,C_rest_count(0));
f_25627r(t0,t1,t2);}}

static void C_ccall f_25627r(C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word t14;
C_word t15;
C_word t16;
C_word t17;
C_word t18;
C_word t19;
C_word t20;
C_word t21;
C_word t22;
C_word t23;
C_word t24;
C_word t25;
C_word t26;
C_word t27;
C_word t28;
C_word *a=C_alloc(58);
t3=C_fix(0);
t4=(*a=C_VECTOR_TYPE|1,a[1]=t3,tmp=(C_word)a,a+=2,tmp);
t5=C_fix(0);
t6=(*a=C_VECTOR_TYPE|1,a[1]=t5,tmp=(C_word)a,a+=2,tmp);
t7=C_fix(0);
t8=(*a=C_VECTOR_TYPE|1,a[1]=t7,tmp=(C_word)a,a+=2,tmp);
t9=C_SCHEME_FALSE;
t10=(*a=C_VECTOR_TYPE|1,a[1]=t9,tmp=(C_word)a,a+=2,tmp);
t11=C_SCHEME_FALSE;
t12=(*a=C_VECTOR_TYPE|1,a[1]=t11,tmp=(C_word)a,a+=2,tmp);
t13=C_SCHEME_FALSE;
t14=(*a=C_VECTOR_TYPE|1,a[1]=t13,tmp=(C_word)a,a+=2,tmp);
t15=t2;
t16=(*a=C_VECTOR_TYPE|1,a[1]=t15,tmp=(C_word)a,a+=2,tmp);
t17=C_SCHEME_FALSE;
t18=(*a=C_VECTOR_TYPE|1,a[1]=t17,tmp=(C_word)a,a+=2,tmp);
t19=(*a=C_CLOSURE_TYPE|11,a[1]=(C_word)f_25631,a[2]=t14,a[3]=t12,a[4]=t18,a[5]=t10,a[6]=t2,a[7]=t16,a[8]=t6,a[9]=t8,a[10]=t4,a[11]=t1,tmp=(C_word)a,a+=12,tmp);
if(C_truep((C_word)C_i_nullp(((C_word*)t16)[1]))){
t20=t19;
f_25631(t20,C_SCHEME_UNDEFINED);}
else{
t20=(C_word)C_i_car(((C_word*)t16)[1]);
t21=(C_word)C_eqp(t20,lf[558]);
if(C_truep(t21)){
t22=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_25956,a[2]=t2,a[3]=t19,a[4]=t16,a[5]=t18,a[6]=t10,a[7]=t4,tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)t10)[1])){
C_trace("error");
t23=*((C_word*)lf[6]+1);
((C_proc4)C_retrieve_proc(t23))(4,t23,t22,lf[21],lf[558]);}
else{
t23=t22;
f_25956(2,t23,C_SCHEME_UNDEFINED);}}
else{
t22=(C_word)C_eqp(t20,lf[566]);
if(C_truep(t22)){
t23=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_25991,a[2]=t2,a[3]=t19,a[4]=t16,a[5]=t18,a[6]=t12,a[7]=t6,tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)t12)[1])){
C_trace("error");
t24=*((C_word*)lf[6]+1);
((C_proc4)C_retrieve_proc(t24))(4,t24,t23,lf[21],lf[566]);}
else{
t24=t23;
f_25991(2,t24,C_SCHEME_UNDEFINED);}}
else{
t23=(C_word)C_eqp(t20,lf[561]);
if(C_truep(t23)){
t24=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_26026,a[2]=t2,a[3]=t19,a[4]=t16,a[5]=t18,a[6]=t14,a[7]=t8,tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)t14)[1])){
C_trace("error");
t25=*((C_word*)lf[6]+1);
((C_proc4)C_retrieve_proc(t25))(4,t25,t24,lf[21],lf[561]);}
else{
t25=t24;
f_26026(2,t25,C_SCHEME_UNDEFINED);}}
else{
t24=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_26055,a[2]=t19,a[3]=t10,a[4]=t4,a[5]=t16,tmp=(C_word)a,a+=6,tmp);
if(C_truep(((C_word*)t18)[1])){
C_trace("error");
t25=*((C_word*)lf[6]+1);
((C_proc4)C_retrieve_proc(t25))(4,t25,t24,lf[12],t2);}
else{
t25=t24;
f_26055(2,t25,C_SCHEME_UNDEFINED);}}}}}}

/* k26053 in mm:make-bend in k21827 in k18307 in k18304 in k18301 in k18298 in k17861 in k17858 in k17855 in k17852 in k17849 in k17327 in k17324 in k16801 in k16798 in k16795 in k16792 in k16789 in k16786 in k16783 in k16780 in k16777 in k16774 in k16771 in k16768 in k16765 in k16762 in k16759 in k16756 in k16753 in k16750 in k16747 in k16744 in k16741 in k16602 in k16599 in k16596 in k16593 in k16537 in k16534 in k16531 in k16528 in k16525 in k16522 in k16519 in k16516 in k15271 in k15202 in k15009 in k15006 in k14901 in k14850 in k7607 in k7604 in k5838 in k5545 in k5542 in k5538 in k5247 in k5244 in k5241 in k5238 */
static void C_ccall f_26055(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_26055,2,t0,t1);}
t2=(C_word)C_i_car(((C_word*)((C_word*)t0)[5])[1]);
t3=C_mutate(((C_word *)((C_word*)t0)[4])+1,t2);
t4=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_26062,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[5],a[4]=((C_word*)t0)[3],tmp=(C_word)a,a+=5,tmp);
t5=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_26070,a[2]=((C_word*)t0)[4],a[3]=t4,tmp=(C_word)a,a+=4,tmp);
C_trace("keyword?");
t6=C_retrieve(lf[15]);
((C_proc3)C_retrieve_proc(t6))(3,t6,t5,((C_word*)((C_word*)t0)[4])[1]);}

/* k26068 in k26053 in mm:make-bend in k21827 in k18307 in k18304 in k18301 in k18298 in k17861 in k17858 in k17855 in k17852 in k17849 in k17327 in k17324 in k16801 in k16798 in k16795 in k16792 in k16789 in k16786 in k16783 in k16780 in k16777 in k16774 in k16771 in k16768 in k16765 in k16762 in k16759 in k16756 in k16753 in k16750 in k16747 in k16744 in k16741 in k16602 in k16599 in k16596 in k16593 in k16537 in k16534 in k16531 in k16528 in k16525 in k16522 in k16519 in k16516 in k15271 in k15202 in k15009 in k15006 in k14901 in k14850 in k7607 in k7604 in k5838 in k5545 in k5542 in k5538 in k5247 in k5244 in k5241 in k5238 */
static void C_ccall f_26070(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
if(C_truep(t1)){
C_trace("error");
t2=*((C_word*)lf[6]+1);
((C_proc4)C_retrieve_proc(t2))(4,t2,((C_word*)t0)[3],lf[16],((C_word*)((C_word*)t0)[2])[1]);}
else{
t2=((C_word*)t0)[3];
f_26062(2,t2,C_SCHEME_UNDEFINED);}}

/* k26060 in k26053 in mm:make-bend in k21827 in k18307 in k18304 in k18301 in k18298 in k17861 in k17858 in k17855 in k17852 in k17849 in k17327 in k17324 in k16801 in k16798 in k16795 in k16792 in k16789 in k16786 in k16783 in k16780 in k16777 in k16774 in k16771 in k16768 in k16765 in k16762 in k16759 in k16756 in k16753 in k16750 in k16747 in k16744 in k16741 in k16602 in k16599 in k16596 in k16593 in k16537 in k16534 in k16531 in k16528 in k16525 in k16522 in k16519 in k16516 in k15271 in k15202 in k15009 in k15006 in k14901 in k14850 in k7607 in k7604 in k5838 in k5545 in k5542 in k5538 in k5247 in k5244 in k5241 in k5238 */
static void C_ccall f_26062(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word *a;
t2=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[3])[1]);
t4=C_mutate(((C_word *)((C_word*)t0)[3])+1,t3);
t5=((C_word*)t0)[2];
f_25631(t5,t4);}

/* k26024 in mm:make-bend in k21827 in k18307 in k18304 in k18301 in k18298 in k17861 in k17858 in k17855 in k17852 in k17849 in k17327 in k17324 in k16801 in k16798 in k16795 in k16792 in k16789 in k16786 in k16783 in k16780 in k16777 in k16774 in k16771 in k16768 in k16765 in k16762 in k16759 in k16756 in k16753 in k16750 in k16747 in k16744 in k16741 in k16602 in k16599 in k16596 in k16593 in k16537 in k16534 in k16531 in k16528 in k16525 in k16522 in k16519 in k16516 in k15271 in k15202 in k15009 in k15006 in k14901 in k14850 in k7607 in k7604 in k5838 in k5545 in k5542 in k5538 in k5247 in k5244 in k5241 in k5238 */
static void C_ccall f_26026(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_26026,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_26030,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("error");
t4=*((C_word*)lf[6]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[23],((C_word*)t0)[2]);}
else{
t4=t2;
f_26030(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k26028 in k26024 in mm:make-bend in k21827 in k18307 in k18304 in k18301 in k18298 in k17861 in k17858 in k17855 in k17852 in k17849 in k17327 in k17324 in k16801 in k16798 in k16795 in k16792 in k16789 in k16786 in k16783 in k16780 in k16777 in k16774 in k16771 in k16768 in k16765 in k16762 in k16759 in k16756 in k16753 in k16750 in k16747 in k16744 in k16741 in k16602 in k16599 in k16596 in k16593 in k16537 in k16534 in k16531 in k16528 in k16525 in k16522 in k16519 in k16516 in k15271 in k15202 in k15009 in k15006 in k14901 in k14850 in k7607 in k7604 in k5838 in k5545 in k5542 in k5538 in k5247 in k5244 in k5241 in k5238 */
static void C_ccall f_26030(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_25631(t7,t6);}

/* k25989 in mm:make-bend in k21827 in k18307 in k18304 in k18301 in k18298 in k17861 in k17858 in k17855 in k17852 in k17849 in k17327 in k17324 in k16801 in k16798 in k16795 in k16792 in k16789 in k16786 in k16783 in k16780 in k16777 in k16774 in k16771 in k16768 in k16765 in k16762 in k16759 in k16756 in k16753 in k16750 in k16747 in k16744 in k16741 in k16602 in k16599 in k16596 in k16593 in k16537 in k16534 in k16531 in k16528 in k16525 in k16522 in k16519 in k16516 in k15271 in k15202 in k15009 in k15006 in k14901 in k14850 in k7607 in k7604 in k5838 in k5545 in k5542 in k5538 in k5247 in k5244 in k5241 in k5238 */
static void C_ccall f_25991(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_25991,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_25995,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("error");
t4=*((C_word*)lf[6]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[23],((C_word*)t0)[2]);}
else{
t4=t2;
f_25995(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k25993 in k25989 in mm:make-bend in k21827 in k18307 in k18304 in k18301 in k18298 in k17861 in k17858 in k17855 in k17852 in k17849 in k17327 in k17324 in k16801 in k16798 in k16795 in k16792 in k16789 in k16786 in k16783 in k16780 in k16777 in k16774 in k16771 in k16768 in k16765 in k16762 in k16759 in k16756 in k16753 in k16750 in k16747 in k16744 in k16741 in k16602 in k16599 in k16596 in k16593 in k16537 in k16534 in k16531 in k16528 in k16525 in k16522 in k16519 in k16516 in k15271 in k15202 in k15009 in k15006 in k14901 in k14850 in k7607 in k7604 in k5838 in k5545 in k5542 in k5538 in k5247 in k5244 in k5241 in k5238 */
static void C_ccall f_25995(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_25631(t7,t6);}

/* k25954 in mm:make-bend in k21827 in k18307 in k18304 in k18301 in k18298 in k17861 in k17858 in k17855 in k17852 in k17849 in k17327 in k17324 in k16801 in k16798 in k16795 in k16792 in k16789 in k16786 in k16783 in k16780 in k16777 in k16774 in k16771 in k16768 in k16765 in k16762 in k16759 in k16756 in k16753 in k16750 in k16747 in k16744 in k16741 in k16602 in k16599 in k16596 in k16593 in k16537 in k16534 in k16531 in k16528 in k16525 in k16522 in k16519 in k16516 in k15271 in k15202 in k15009 in k15006 in k14901 in k14850 in k7607 in k7604 in k5838 in k5545 in k5542 in k5538 in k5247 in k5244 in k5241 in k5238 */
static void C_ccall f_25956(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_25956,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_25960,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("error");
t4=*((C_word*)lf[6]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[23],((C_word*)t0)[2]);}
else{
t4=t2;
f_25960(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k25958 in k25954 in mm:make-bend in k21827 in k18307 in k18304 in k18301 in k18298 in k17861 in k17858 in k17855 in k17852 in k17849 in k17327 in k17324 in k16801 in k16798 in k16795 in k16792 in k16789 in k16786 in k16783 in k16780 in k16777 in k16774 in k16771 in k16768 in k16765 in k16762 in k16759 in k16756 in k16753 in k16750 in k16747 in k16744 in k16741 in k16602 in k16599 in k16596 in k16593 in k16537 in k16534 in k16531 in k16528 in k16525 in k16522 in k16519 in k16516 in k15271 in k15202 in k15009 in k15006 in k14901 in k14850 in k7607 in k7604 in k5838 in k5545 in k5542 in k5538 in k5247 in k5244 in k5241 in k5238 */
static void C_ccall f_25960(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_25631(t7,t6);}

/* k25629 in mm:make-bend in k21827 in k18307 in k18304 in k18301 in k18298 in k17861 in k17858 in k17855 in k17852 in k17849 in k17327 in k17324 in k16801 in k16798 in k16795 in k16792 in k16789 in k16786 in k16783 in k16780 in k16777 in k16774 in k16771 in k16768 in k16765 in k16762 in k16759 in k16756 in k16753 in k16750 in k16747 in k16744 in k16741 in k16602 in k16599 in k16596 in k16593 in k16537 in k16534 in k16531 in k16528 in k16525 in k16522 in k16519 in k16516 in k15271 in k15202 in k15009 in k15006 in k14901 in k14850 in k7607 in k7604 in k5838 in k5545 in k5542 in k5538 in k5247 in k5244 in k5241 in k5238 */
static void C_fcall f_25631(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word ab[42],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_25631,NULL,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|11,a[1]=(C_word)f_25634,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],a[7]=((C_word*)t0)[7],a[8]=((C_word*)t0)[8],a[9]=((C_word*)t0)[9],a[10]=((C_word*)t0)[10],a[11]=((C_word*)t0)[11],tmp=(C_word)a,a+=12,tmp);
if(C_truep((C_word)C_i_nullp(((C_word*)((C_word*)t0)[7])[1]))){
t3=t2;
f_25634(t3,C_SCHEME_UNDEFINED);}
else{
t3=(C_word)C_i_car(((C_word*)((C_word*)t0)[7])[1]);
t4=(C_word)C_eqp(t3,lf[558]);
if(C_truep(t4)){
t5=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_25821,a[2]=((C_word*)t0)[6],a[3]=t2,a[4]=((C_word*)t0)[7],a[5]=((C_word*)t0)[4],a[6]=((C_word*)t0)[5],a[7]=((C_word*)t0)[10],tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)((C_word*)t0)[5])[1])){
C_trace("error");
t6=*((C_word*)lf[6]+1);
((C_proc4)C_retrieve_proc(t6))(4,t6,t5,lf[21],lf[558]);}
else{
t6=t5;
f_25821(2,t6,C_SCHEME_UNDEFINED);}}
else{
t5=(C_word)C_eqp(t3,lf[566]);
if(C_truep(t5)){
t6=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_25856,a[2]=((C_word*)t0)[6],a[3]=t2,a[4]=((C_word*)t0)[7],a[5]=((C_word*)t0)[4],a[6]=((C_word*)t0)[3],a[7]=((C_word*)t0)[8],tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)((C_word*)t0)[3])[1])){
C_trace("error");
t7=*((C_word*)lf[6]+1);
((C_proc4)C_retrieve_proc(t7))(4,t7,t6,lf[21],lf[566]);}
else{
t7=t6;
f_25856(2,t7,C_SCHEME_UNDEFINED);}}
else{
t6=(C_word)C_eqp(t3,lf[561]);
if(C_truep(t6)){
t7=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_25891,a[2]=((C_word*)t0)[6],a[3]=t2,a[4]=((C_word*)t0)[7],a[5]=((C_word*)t0)[4],a[6]=((C_word*)t0)[2],a[7]=((C_word*)t0)[9],tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)((C_word*)t0)[2])[1])){
C_trace("error");
t8=*((C_word*)lf[6]+1);
((C_proc4)C_retrieve_proc(t8))(4,t8,t7,lf[21],lf[561]);}
else{
t8=t7;
f_25891(2,t8,C_SCHEME_UNDEFINED);}}
else{
t7=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_25920,a[2]=t2,a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[8],a[5]=((C_word*)t0)[7],tmp=(C_word)a,a+=6,tmp);
if(C_truep(((C_word*)((C_word*)t0)[4])[1])){
C_trace("error");
t8=*((C_word*)lf[6]+1);
((C_proc4)C_retrieve_proc(t8))(4,t8,t7,lf[12],((C_word*)t0)[6]);}
else{
t8=t7;
f_25920(2,t8,C_SCHEME_UNDEFINED);}}}}}}

/* k25918 in k25629 in mm:make-bend in k21827 in k18307 in k18304 in k18301 in k18298 in k17861 in k17858 in k17855 in k17852 in k17849 in k17327 in k17324 in k16801 in k16798 in k16795 in k16792 in k16789 in k16786 in k16783 in k16780 in k16777 in k16774 in k16771 in k16768 in k16765 in k16762 in k16759 in k16756 in k16753 in k16750 in k16747 in k16744 in k16741 in k16602 in k16599 in k16596 in k16593 in k16537 in k16534 in k16531 in k16528 in k16525 in k16522 in k16519 in k16516 in k15271 in k15202 in k15009 in k15006 in k14901 in k14850 in k7607 in k7604 in k5838 in k5545 in k5542 in k5538 in k5247 in k5244 in k5241 in k5238 */
static void C_ccall f_25920(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_25920,2,t0,t1);}
t2=(C_word)C_i_car(((C_word*)((C_word*)t0)[5])[1]);
t3=C_mutate(((C_word *)((C_word*)t0)[4])+1,t2);
t4=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_25927,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[5],a[4]=((C_word*)t0)[3],tmp=(C_word)a,a+=5,tmp);
t5=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_25935,a[2]=((C_word*)t0)[4],a[3]=t4,tmp=(C_word)a,a+=4,tmp);
C_trace("keyword?");
t6=C_retrieve(lf[15]);
((C_proc3)C_retrieve_proc(t6))(3,t6,t5,((C_word*)((C_word*)t0)[4])[1]);}

/* k25933 in k25918 in k25629 in mm:make-bend in k21827 in k18307 in k18304 in k18301 in k18298 in k17861 in k17858 in k17855 in k17852 in k17849 in k17327 in k17324 in k16801 in k16798 in k16795 in k16792 in k16789 in k16786 in k16783 in k16780 in k16777 in k16774 in k16771 in k16768 in k16765 in k16762 in k16759 in k16756 in k16753 in k16750 in k16747 in k16744 in k16741 in k16602 in k16599 in k16596 in k16593 in k16537 in k16534 in k16531 in k16528 in k16525 in k16522 in k16519 in k16516 in k15271 in k15202 in k15009 in k15006 in k14901 in k14850 in k7607 in k7604 in k5838 in k5545 in k5542 in k5538 in k5247 in k5244 in k5241 in k5238 */
static void C_ccall f_25935(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
if(C_truep(t1)){
C_trace("error");
t2=*((C_word*)lf[6]+1);
((C_proc4)C_retrieve_proc(t2))(4,t2,((C_word*)t0)[3],lf[16],((C_word*)((C_word*)t0)[2])[1]);}
else{
t2=((C_word*)t0)[3];
f_25927(2,t2,C_SCHEME_UNDEFINED);}}

/* k25925 in k25918 in k25629 in mm:make-bend in k21827 in k18307 in k18304 in k18301 in k18298 in k17861 in k17858 in k17855 in k17852 in k17849 in k17327 in k17324 in k16801 in k16798 in k16795 in k16792 in k16789 in k16786 in k16783 in k16780 in k16777 in k16774 in k16771 in k16768 in k16765 in k16762 in k16759 in k16756 in k16753 in k16750 in k16747 in k16744 in k16741 in k16602 in k16599 in k16596 in k16593 in k16537 in k16534 in k16531 in k16528 in k16525 in k16522 in k16519 in k16516 in k15271 in k15202 in k15009 in k15006 in k14901 in k14850 in k7607 in k7604 in k5838 in k5545 in k5542 in k5538 in k5247 in k5244 in k5241 in k5238 */
static void C_ccall f_25927(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word *a;
t2=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[3])[1]);
t4=C_mutate(((C_word *)((C_word*)t0)[3])+1,t3);
t5=((C_word*)t0)[2];
f_25634(t5,t4);}

/* k25889 in k25629 in mm:make-bend in k21827 in k18307 in k18304 in k18301 in k18298 in k17861 in k17858 in k17855 in k17852 in k17849 in k17327 in k17324 in k16801 in k16798 in k16795 in k16792 in k16789 in k16786 in k16783 in k16780 in k16777 in k16774 in k16771 in k16768 in k16765 in k16762 in k16759 in k16756 in k16753 in k16750 in k16747 in k16744 in k16741 in k16602 in k16599 in k16596 in k16593 in k16537 in k16534 in k16531 in k16528 in k16525 in k16522 in k16519 in k16516 in k15271 in k15202 in k15009 in k15006 in k14901 in k14850 in k7607 in k7604 in k5838 in k5545 in k5542 in k5538 in k5247 in k5244 in k5241 in k5238 */
static void C_ccall f_25891(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_25891,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_25895,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("error");
t4=*((C_word*)lf[6]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[23],((C_word*)t0)[2]);}
else{
t4=t2;
f_25895(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k25893 in k25889 in k25629 in mm:make-bend in k21827 in k18307 in k18304 in k18301 in k18298 in k17861 in k17858 in k17855 in k17852 in k17849 in k17327 in k17324 in k16801 in k16798 in k16795 in k16792 in k16789 in k16786 in k16783 in k16780 in k16777 in k16774 in k16771 in k16768 in k16765 in k16762 in k16759 in k16756 in k16753 in k16750 in k16747 in k16744 in k16741 in k16602 in k16599 in k16596 in k16593 in k16537 in k16534 in k16531 in k16528 in k16525 in k16522 in k16519 in k16516 in k15271 in k15202 in k15009 in k15006 in k14901 in k14850 in k7607 in k7604 in k5838 in k5545 in k5542 in k5538 in k5247 in k5244 in k5241 in k5238 */
static void C_ccall f_25895(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_25634(t7,t6);}

/* k25854 in k25629 in mm:make-bend in k21827 in k18307 in k18304 in k18301 in k18298 in k17861 in k17858 in k17855 in k17852 in k17849 in k17327 in k17324 in k16801 in k16798 in k16795 in k16792 in k16789 in k16786 in k16783 in k16780 in k16777 in k16774 in k16771 in k16768 in k16765 in k16762 in k16759 in k16756 in k16753 in k16750 in k16747 in k16744 in k16741 in k16602 in k16599 in k16596 in k16593 in k16537 in k16534 in k16531 in k16528 in k16525 in k16522 in k16519 in k16516 in k15271 in k15202 in k15009 in k15006 in k14901 in k14850 in k7607 in k7604 in k5838 in k5545 in k5542 in k5538 in k5247 in k5244 in k5241 in k5238 */
static void C_ccall f_25856(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_25856,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_25860,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("error");
t4=*((C_word*)lf[6]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[23],((C_word*)t0)[2]);}
else{
t4=t2;
f_25860(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k25858 in k25854 in k25629 in mm:make-bend in k21827 in k18307 in k18304 in k18301 in k18298 in k17861 in k17858 in k17855 in k17852 in k17849 in k17327 in k17324 in k16801 in k16798 in k16795 in k16792 in k16789 in k16786 in k16783 in k16780 in k16777 in k16774 in k16771 in k16768 in k16765 in k16762 in k16759 in k16756 in k16753 in k16750 in k16747 in k16744 in k16741 in k16602 in k16599 in k16596 in k16593 in k16537 in k16534 in k16531 in k16528 in k16525 in k16522 in k16519 in k16516 in k15271 in k15202 in k15009 in k15006 in k14901 in k14850 in k7607 in k7604 in k5838 in k5545 in k5542 in k5538 in k5247 in k5244 in k5241 in k5238 */
static void C_ccall f_25860(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_25634(t7,t6);}

/* k25819 in k25629 in mm:make-bend in k21827 in k18307 in k18304 in k18301 in k18298 in k17861 in k17858 in k17855 in k17852 in k17849 in k17327 in k17324 in k16801 in k16798 in k16795 in k16792 in k16789 in k16786 in k16783 in k16780 in k16777 in k16774 in k16771 in k16768 in k16765 in k16762 in k16759 in k16756 in k16753 in k16750 in k16747 in k16744 in k16741 in k16602 in k16599 in k16596 in k16593 in k16537 in k16534 in k16531 in k16528 in k16525 in k16522 in k16519 in k16516 in k15271 in k15202 in k15009 in k15006 in k14901 in k14850 in k7607 in k7604 in k5838 in k5545 in k5542 in k5538 in k5247 in k5244 in k5241 in k5238 */
static void C_ccall f_25821(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_25821,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_25825,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("error");
t4=*((C_word*)lf[6]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[23],((C_word*)t0)[2]);}
else{
t4=t2;
f_25825(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k25823 in k25819 in k25629 in mm:make-bend in k21827 in k18307 in k18304 in k18301 in k18298 in k17861 in k17858 in k17855 in k17852 in k17849 in k17327 in k17324 in k16801 in k16798 in k16795 in k16792 in k16789 in k16786 in k16783 in k16780 in k16777 in k16774 in k16771 in k16768 in k16765 in k16762 in k16759 in k16756 in k16753 in k16750 in k16747 in k16744 in k16741 in k16602 in k16599 in k16596 in k16593 in k16537 in k16534 in k16531 in k16528 in k16525 in k16522 in k16519 in k16516 in k15271 in k15202 in k15009 in k15006 in k14901 in k14850 in k7607 in k7604 in k5838 in k5545 in k5542 in k5538 in k5247 in k5244 in k5241 in k5238 */
static void C_ccall f_25825(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_25634(t7,t6);}

/* k25632 in k25629 in mm:make-bend in k21827 in k18307 in k18304 in k18301 in k18298 in k17861 in k17858 in k17855 in k17852 in k17849 in k17327 in k17324 in k16801 in k16798 in k16795 in k16792 in k16789 in k16786 in k16783 in k16780 in k16777 in k16774 in k16771 in k16768 in k16765 in k16762 in k16759 in k16756 in k16753 in k16750 in k16747 in k16744 in k16741 in k16602 in k16599 in k16596 in k16593 in k16537 in k16534 in k16531 in k16528 in k16525 in k16522 in k16519 in k16516 in k15271 in k15202 in k15009 in k15006 in k14901 in k14850 in k7607 in k7604 in k5838 in k5545 in k5542 in k5538 in k5247 in k5244 in k5241 in k5238 */
static void C_fcall f_25634(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word ab[38],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_25634,NULL,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_25637,a[2]=((C_word*)t0)[6],a[3]=((C_word*)t0)[7],a[4]=((C_word*)t0)[8],a[5]=((C_word*)t0)[9],a[6]=((C_word*)t0)[10],a[7]=((C_word*)t0)[11],tmp=(C_word)a,a+=8,tmp);
if(C_truep((C_word)C_i_nullp(((C_word*)((C_word*)t0)[7])[1]))){
t3=t2;
f_25637(t3,C_SCHEME_UNDEFINED);}
else{
t3=(C_word)C_i_car(((C_word*)((C_word*)t0)[7])[1]);
t4=(C_word)C_eqp(t3,lf[558]);
if(C_truep(t4)){
t5=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_25686,a[2]=((C_word*)t0)[6],a[3]=t2,a[4]=((C_word*)t0)[7],a[5]=((C_word*)t0)[4],a[6]=((C_word*)t0)[5],a[7]=((C_word*)t0)[10],tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)((C_word*)t0)[5])[1])){
C_trace("error");
t6=*((C_word*)lf[6]+1);
((C_proc4)C_retrieve_proc(t6))(4,t6,t5,lf[21],lf[558]);}
else{
t6=t5;
f_25686(2,t6,C_SCHEME_UNDEFINED);}}
else{
t5=(C_word)C_eqp(t3,lf[566]);
if(C_truep(t5)){
t6=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_25721,a[2]=((C_word*)t0)[6],a[3]=t2,a[4]=((C_word*)t0)[7],a[5]=((C_word*)t0)[4],a[6]=((C_word*)t0)[3],a[7]=((C_word*)t0)[8],tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)((C_word*)t0)[3])[1])){
C_trace("error");
t7=*((C_word*)lf[6]+1);
((C_proc4)C_retrieve_proc(t7))(4,t7,t6,lf[21],lf[566]);}
else{
t7=t6;
f_25721(2,t7,C_SCHEME_UNDEFINED);}}
else{
t6=(C_word)C_eqp(t3,lf[561]);
if(C_truep(t6)){
t7=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_25756,a[2]=((C_word*)t0)[6],a[3]=t2,a[4]=((C_word*)t0)[7],a[5]=((C_word*)t0)[4],a[6]=((C_word*)t0)[2],a[7]=((C_word*)t0)[9],tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)((C_word*)t0)[2])[1])){
C_trace("error");
t8=*((C_word*)lf[6]+1);
((C_proc4)C_retrieve_proc(t8))(4,t8,t7,lf[21],lf[561]);}
else{
t8=t7;
f_25756(2,t8,C_SCHEME_UNDEFINED);}}
else{
t7=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_25785,a[2]=t2,a[3]=((C_word*)t0)[2],a[4]=((C_word*)t0)[9],a[5]=((C_word*)t0)[7],tmp=(C_word)a,a+=6,tmp);
if(C_truep(((C_word*)((C_word*)t0)[4])[1])){
C_trace("error");
t8=*((C_word*)lf[6]+1);
((C_proc4)C_retrieve_proc(t8))(4,t8,t7,lf[12],((C_word*)t0)[6]);}
else{
t8=t7;
f_25785(2,t8,C_SCHEME_UNDEFINED);}}}}}}

/* k25783 in k25632 in k25629 in mm:make-bend in k21827 in k18307 in k18304 in k18301 in k18298 in k17861 in k17858 in k17855 in k17852 in k17849 in k17327 in k17324 in k16801 in k16798 in k16795 in k16792 in k16789 in k16786 in k16783 in k16780 in k16777 in k16774 in k16771 in k16768 in k16765 in k16762 in k16759 in k16756 in k16753 in k16750 in k16747 in k16744 in k16741 in k16602 in k16599 in k16596 in k16593 in k16537 in k16534 in k16531 in k16528 in k16525 in k16522 in k16519 in k16516 in k15271 in k15202 in k15009 in k15006 in k14901 in k14850 in k7607 in k7604 in k5838 in k5545 in k5542 in k5538 in k5247 in k5244 in k5241 in k5238 */
static void C_ccall f_25785(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_25785,2,t0,t1);}
t2=(C_word)C_i_car(((C_word*)((C_word*)t0)[5])[1]);
t3=C_mutate(((C_word *)((C_word*)t0)[4])+1,t2);
t4=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_25792,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[5],a[4]=((C_word*)t0)[3],tmp=(C_word)a,a+=5,tmp);
t5=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_25800,a[2]=((C_word*)t0)[4],a[3]=t4,tmp=(C_word)a,a+=4,tmp);
C_trace("keyword?");
t6=C_retrieve(lf[15]);
((C_proc3)C_retrieve_proc(t6))(3,t6,t5,((C_word*)((C_word*)t0)[4])[1]);}

/* k25798 in k25783 in k25632 in k25629 in mm:make-bend in k21827 in k18307 in k18304 in k18301 in k18298 in k17861 in k17858 in k17855 in k17852 in k17849 in k17327 in k17324 in k16801 in k16798 in k16795 in k16792 in k16789 in k16786 in k16783 in k16780 in k16777 in k16774 in k16771 in k16768 in k16765 in k16762 in k16759 in k16756 in k16753 in k16750 in k16747 in k16744 in k16741 in k16602 in k16599 in k16596 in k16593 in k16537 in k16534 in k16531 in k16528 in k16525 in k16522 in k16519 in k16516 in k15271 in k15202 in k15009 in k15006 in k14901 in k14850 in k7607 in k7604 in k5838 in k5545 in k5542 in k5538 in k5247 in k5244 in k5241 in k5238 */
static void C_ccall f_25800(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
if(C_truep(t1)){
C_trace("error");
t2=*((C_word*)lf[6]+1);
((C_proc4)C_retrieve_proc(t2))(4,t2,((C_word*)t0)[3],lf[16],((C_word*)((C_word*)t0)[2])[1]);}
else{
t2=((C_word*)t0)[3];
f_25792(2,t2,C_SCHEME_UNDEFINED);}}

/* k25790 in k25783 in k25632 in k25629 in mm:make-bend in k21827 in k18307 in k18304 in k18301 in k18298 in k17861 in k17858 in k17855 in k17852 in k17849 in k17327 in k17324 in k16801 in k16798 in k16795 in k16792 in k16789 in k16786 in k16783 in k16780 in k16777 in k16774 in k16771 in k16768 in k16765 in k16762 in k16759 in k16756 in k16753 in k16750 in k16747 in k16744 in k16741 in k16602 in k16599 in k16596 in k16593 in k16537 in k16534 in k16531 in k16528 in k16525 in k16522 in k16519 in k16516 in k15271 in k15202 in k15009 in k15006 in k14901 in k14850 in k7607 in k7604 in k5838 in k5545 in k5542 in k5538 in k5247 in k5244 in k5241 in k5238 */
static void C_ccall f_25792(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word *a;
t2=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[3])[1]);
t4=C_mutate(((C_word *)((C_word*)t0)[3])+1,t3);
t5=((C_word*)t0)[2];
f_25637(t5,t4);}

/* k25754 in k25632 in k25629 in mm:make-bend in k21827 in k18307 in k18304 in k18301 in k18298 in k17861 in k17858 in k17855 in k17852 in k17849 in k17327 in k17324 in k16801 in k16798 in k16795 in k16792 in k16789 in k16786 in k16783 in k16780 in k16777 in k16774 in k16771 in k16768 in k16765 in k16762 in k16759 in k16756 in k16753 in k16750 in k16747 in k16744 in k16741 in k16602 in k16599 in k16596 in k16593 in k16537 in k16534 in k16531 in k16528 in k16525 in k16522 in k16519 in k16516 in k15271 in k15202 in k15009 in k15006 in k14901 in k14850 in k7607 in k7604 in k5838 in k5545 in k5542 in k5538 in k5247 in k5244 in k5241 in k5238 */
static void C_ccall f_25756(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_25756,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_25760,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("error");
t4=*((C_word*)lf[6]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[23],((C_word*)t0)[2]);}
else{
t4=t2;
f_25760(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k25758 in k25754 in k25632 in k25629 in mm:make-bend in k21827 in k18307 in k18304 in k18301 in k18298 in k17861 in k17858 in k17855 in k17852 in k17849 in k17327 in k17324 in k16801 in k16798 in k16795 in k16792 in k16789 in k16786 in k16783 in k16780 in k16777 in k16774 in k16771 in k16768 in k16765 in k16762 in k16759 in k16756 in k16753 in k16750 in k16747 in k16744 in k16741 in k16602 in k16599 in k16596 in k16593 in k16537 in k16534 in k16531 in k16528 in k16525 in k16522 in k16519 in k16516 in k15271 in k15202 in k15009 in k15006 in k14901 in k14850 in k7607 in k7604 in k5838 in k5545 in k5542 in k5538 in k5247 in k5244 in k5241 in k5238 */
static void C_ccall f_25760(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_25637(t7,t6);}

/* k25719 in k25632 in k25629 in mm:make-bend in k21827 in k18307 in k18304 in k18301 in k18298 in k17861 in k17858 in k17855 in k17852 in k17849 in k17327 in k17324 in k16801 in k16798 in k16795 in k16792 in k16789 in k16786 in k16783 in k16780 in k16777 in k16774 in k16771 in k16768 in k16765 in k16762 in k16759 in k16756 in k16753 in k16750 in k16747 in k16744 in k16741 in k16602 in k16599 in k16596 in k16593 in k16537 in k16534 in k16531 in k16528 in k16525 in k16522 in k16519 in k16516 in k15271 in k15202 in k15009 in k15006 in k14901 in k14850 in k7607 in k7604 in k5838 in k5545 in k5542 in k5538 in k5247 in k5244 in k5241 in k5238 */
static void C_ccall f_25721(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_25721,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_25725,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("error");
t4=*((C_word*)lf[6]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[23],((C_word*)t0)[2]);}
else{
t4=t2;
f_25725(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k25723 in k25719 in k25632 in k25629 in mm:make-bend in k21827 in k18307 in k18304 in k18301 in k18298 in k17861 in k17858 in k17855 in k17852 in k17849 in k17327 in k17324 in k16801 in k16798 in k16795 in k16792 in k16789 in k16786 in k16783 in k16780 in k16777 in k16774 in k16771 in k16768 in k16765 in k16762 in k16759 in k16756 in k16753 in k16750 in k16747 in k16744 in k16741 in k16602 in k16599 in k16596 in k16593 in k16537 in k16534 in k16531 in k16528 in k16525 in k16522 in k16519 in k16516 in k15271 in k15202 in k15009 in k15006 in k14901 in k14850 in k7607 in k7604 in k5838 in k5545 in k5542 in k5538 in k5247 in k5244 in k5241 in k5238 */
static void C_ccall f_25725(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_25637(t7,t6);}

/* k25684 in k25632 in k25629 in mm:make-bend in k21827 in k18307 in k18304 in k18301 in k18298 in k17861 in k17858 in k17855 in k17852 in k17849 in k17327 in k17324 in k16801 in k16798 in k16795 in k16792 in k16789 in k16786 in k16783 in k16780 in k16777 in k16774 in k16771 in k16768 in k16765 in k16762 in k16759 in k16756 in k16753 in k16750 in k16747 in k16744 in k16741 in k16602 in k16599 in k16596 in k16593 in k16537 in k16534 in k16531 in k16528 in k16525 in k16522 in k16519 in k16516 in k15271 in k15202 in k15009 in k15006 in k14901 in k14850 in k7607 in k7604 in k5838 in k5545 in k5542 in k5538 in k5247 in k5244 in k5241 in k5238 */
static void C_ccall f_25686(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_25686,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_25690,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("error");
t4=*((C_word*)lf[6]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[23],((C_word*)t0)[2]);}
else{
t4=t2;
f_25690(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k25688 in k25684 in k25632 in k25629 in mm:make-bend in k21827 in k18307 in k18304 in k18301 in k18298 in k17861 in k17858 in k17855 in k17852 in k17849 in k17327 in k17324 in k16801 in k16798 in k16795 in k16792 in k16789 in k16786 in k16783 in k16780 in k16777 in k16774 in k16771 in k16768 in k16765 in k16762 in k16759 in k16756 in k16753 in k16750 in k16747 in k16744 in k16741 in k16602 in k16599 in k16596 in k16593 in k16537 in k16534 in k16531 in k16528 in k16525 in k16522 in k16519 in k16516 in k15271 in k15202 in k15009 in k15006 in k14901 in k14850 in k7607 in k7604 in k5838 in k5545 in k5542 in k5538 in k5247 in k5244 in k5241 in k5238 */
static void C_ccall f_25690(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_25637(t7,t6);}

/* k25635 in k25632 in k25629 in mm:make-bend in k21827 in k18307 in k18304 in k18301 in k18298 in k17861 in k17858 in k17855 in k17852 in k17849 in k17327 in k17324 in k16801 in k16798 in k16795 in k16792 in k16789 in k16786 in k16783 in k16780 in k16777 in k16774 in k16771 in k16768 in k16765 in k16762 in k16759 in k16756 in k16753 in k16750 in k16747 in k16744 in k16741 in k16602 in k16599 in k16596 in k16593 in k16537 in k16534 in k16531 in k16528 in k16525 in k16522 in k16519 in k16516 in k15271 in k15202 in k15009 in k15006 in k14901 in k14850 in k7607 in k7604 in k5838 in k5545 in k5542 in k5538 in k5247 in k5244 in k5241 in k5238 */
static void C_fcall f_25637(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[6],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_25637,NULL,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_25640,a[2]=((C_word*)t0)[4],a[3]=((C_word*)t0)[5],a[4]=((C_word*)t0)[6],a[5]=((C_word*)t0)[7],tmp=(C_word)a,a+=6,tmp);
if(C_truep((C_word)C_i_nullp(((C_word*)((C_word*)t0)[3])[1]))){
t3=t2;
f_25640(2,t3,C_SCHEME_UNDEFINED);}
else{
C_trace("error");
t3=*((C_word*)lf[6]+1);
((C_proc4)C_retrieve_proc(t3))(4,t3,t2,lf[7],((C_word*)t0)[2]);}}

/* k25638 in k25635 in k25632 in k25629 in mm:make-bend in k21827 in k18307 in k18304 in k18301 in k18298 in k17861 in k17858 in k17855 in k17852 in k17849 in k17327 in k17324 in k16801 in k16798 in k16795 in k16792 in k16789 in k16786 in k16783 in k16780 in k16777 in k16774 in k16771 in k16768 in k16765 in k16762 in k16759 in k16756 in k16753 in k16750 in k16747 in k16744 in k16741 in k16602 in k16599 in k16596 in k16593 in k16537 in k16534 in k16531 in k16528 in k16525 in k16522 in k16519 in k16516 in k15271 in k15202 in k15009 in k15006 in k14901 in k14850 in k7607 in k7604 in k5838 in k5545 in k5542 in k5538 in k5247 in k5244 in k5241 in k5238 */
static void C_ccall f_25640(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word ab[3],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_25640,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_25644,a[2]=((C_word)li345),tmp=(C_word)a,a+=3,tmp);
((C_proc7)(void*)(*((C_word*)t2+1)))(7,t2,((C_word*)t0)[5],C_fix(14),((C_word*)((C_word*)t0)[4])[1],((C_word*)((C_word*)t0)[3])[1],((C_word*)((C_word*)t0)[2])[1],C_fix(0));}

/* f_25644 in k25638 in k25635 in k25632 in k25629 in mm:make-bend in k21827 in k18307 in k18304 in k18301 in k18298 in k17861 in k17858 in k17855 in k17852 in k17849 in k17327 in k17324 in k16801 in k16798 in k16795 in k16792 in k16789 in k16786 in k16783 in k16780 in k16777 in k16774 in k16771 in k16768 in k16765 in k16762 in k16759 in k16756 in k16753 in k16750 in k16747 in k16744 in k16741 in k16602 in k16599 in k16596 in k16593 in k16537 in k16534 in k16531 in k16528 in k16525 in k16522 in k16519 in k16516 in k15271 in k15202 in k15009 in k15006 in k14901 in k14850 in k7607 in k7604 in k5838 in k5545 in k5542 in k5538 in k5247 in k5244 in k5241 in k5238 */
static void C_ccall f_25644(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4,C_word t5,C_word t6){
C_word tmp;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word ab[5],*a=ab;
if(c!=7) C_bad_argc_2(c,7,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr7,(void*)f_25644,7,t0,t1,t2,t3,t4,t5,t6);}
t7=(C_word)C_a_i_bytevector(&a,1,C_fix(3));
t8=(C_word)C_i_foreign_fixnum_argumentp(t2);
t9=(C_word)C_i_foreign_flonum_argumentp(t3);
t10=(C_word)C_i_foreign_fixnum_argumentp(t4);
t11=(C_word)C_i_foreign_fixnum_argumentp(t5);
t12=(C_word)C_i_foreign_fixnum_argumentp(t6);
t13=t1;
((C_proc2)(void*)(*((C_word*)t13+1)))(2,t13,(C_word)stub4581(t7,t8,t9,t10,t11,t12));}

/* mm:press? in k21827 in k18307 in k18304 in k18301 in k18298 in k17861 in k17858 in k17855 in k17852 in k17849 in k17327 in k17324 in k16801 in k16798 in k16795 in k16792 in k16789 in k16786 in k16783 in k16780 in k16777 in k16774 in k16771 in k16768 in k16765 in k16762 in k16759 in k16756 in k16753 in k16750 in k16747 in k16744 in k16741 in k16602 in k16599 in k16596 in k16593 in k16537 in k16534 in k16531 in k16528 in k16525 in k16522 in k16519 in k16516 in k15271 in k15202 in k15009 in k15006 in k14901 in k14850 in k7607 in k7604 in k5838 in k5545 in k5542 in k5538 in k5247 in k5244 in k5241 in k5238 */
static void C_ccall f_25608(C_word c,C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word ab[3],*a=ab;
if(c!=3) C_bad_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr3,(void*)f_25608,3,t0,t1,t2);}
t3=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_25613,a[2]=((C_word)li343),tmp=(C_word)a,a+=3,tmp);
((C_proc4)(void*)(*((C_word*)t3+1)))(4,t3,t1,t2,C_fix(13));}

/* f_25613 in mm:press? in k21827 in k18307 in k18304 in k18301 in k18298 in k17861 in k17858 in k17855 in k17852 in k17849 in k17327 in k17324 in k16801 in k16798 in k16795 in k16792 in k16789 in k16786 in k16783 in k16780 in k16777 in k16774 in k16771 in k16768 in k16765 in k16762 in k16759 in k16756 in k16753 in k16750 in k16747 in k16744 in k16741 in k16602 in k16599 in k16596 in k16593 in k16537 in k16534 in k16531 in k16528 in k16525 in k16522 in k16519 in k16516 in k15271 in k15202 in k15009 in k15006 in k14901 in k14850 in k7607 in k7604 in k5838 in k5545 in k5542 in k5538 in k5247 in k5244 in k5241 in k5238 */
static void C_ccall f_25613(C_word c,C_word t0,C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word t6;
C_word *a;
if(c!=4) C_bad_argc_2(c,4,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr4,(void*)f_25613,4,t0,t1,t2,t3);}
t4=(C_truep(t2)?(C_word)C_i_foreign_pointer_argumentp(t2):C_SCHEME_FALSE);
t5=(C_word)C_i_foreign_fixnum_argumentp(t3);
t6=t1;
((C_proc2)(void*)(*((C_word*)t6+1)))(2,t6,(C_word)stub4502(C_SCHEME_UNDEFINED,t4,t5));}

/* mm:make-press in k21827 in k18307 in k18304 in k18301 in k18298 in k17861 in k17858 in k17855 in k17852 in k17849 in k17327 in k17324 in k16801 in k16798 in k16795 in k16792 in k16789 in k16786 in k16783 in k16780 in k16777 in k16774 in k16771 in k16768 in k16765 in k16762 in k16759 in k16756 in k16753 in k16750 in k16747 in k16744 in k16741 in k16602 in k16599 in k16596 in k16593 in k16537 in k16534 in k16531 in k16528 in k16525 in k16522 in k16519 in k16516 in k15271 in k15202 in k15009 in k15006 in k14901 in k14850 in k7607 in k7604 in k5838 in k5545 in k5542 in k5538 in k5247 in k5244 in k5241 in k5238 */
static void C_ccall f_25157(C_word c,C_word t0,C_word t1,...){
C_word tmp;
C_word t2;
va_list v;
C_word *a,c2=c;
C_save_rest(t1,c2,2);
C_check_for_interrupt;
if(!C_demand(c*C_SIZEOF_PAIR+58)){
C_save_and_reclaim((void*)tr2r,(void*)f_25157r,2,t0,t1);}
else{
a=C_alloc((c-2)*3);
t2=C_restore_rest(a,C_rest_count(0));
f_25157r(t0,t1,t2);}}

static void C_ccall f_25157r(C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word t14;
C_word t15;
C_word t16;
C_word t17;
C_word t18;
C_word t19;
C_word t20;
C_word t21;
C_word t22;
C_word t23;
C_word t24;
C_word t25;
C_word t26;
C_word t27;
C_word t28;
C_word *a=C_alloc(58);
t3=C_fix(0);
t4=(*a=C_VECTOR_TYPE|1,a[1]=t3,tmp=(C_word)a,a+=2,tmp);
t5=C_fix(0);
t6=(*a=C_VECTOR_TYPE|1,a[1]=t5,tmp=(C_word)a,a+=2,tmp);
t7=C_fix(0);
t8=(*a=C_VECTOR_TYPE|1,a[1]=t7,tmp=(C_word)a,a+=2,tmp);
t9=C_SCHEME_FALSE;
t10=(*a=C_VECTOR_TYPE|1,a[1]=t9,tmp=(C_word)a,a+=2,tmp);
t11=C_SCHEME_FALSE;
t12=(*a=C_VECTOR_TYPE|1,a[1]=t11,tmp=(C_word)a,a+=2,tmp);
t13=C_SCHEME_FALSE;
t14=(*a=C_VECTOR_TYPE|1,a[1]=t13,tmp=(C_word)a,a+=2,tmp);
t15=t2;
t16=(*a=C_VECTOR_TYPE|1,a[1]=t15,tmp=(C_word)a,a+=2,tmp);
t17=C_SCHEME_FALSE;
t18=(*a=C_VECTOR_TYPE|1,a[1]=t17,tmp=(C_word)a,a+=2,tmp);
t19=(*a=C_CLOSURE_TYPE|11,a[1]=(C_word)f_25161,a[2]=t14,a[3]=t12,a[4]=t18,a[5]=t10,a[6]=t2,a[7]=t16,a[8]=t6,a[9]=t8,a[10]=t4,a[11]=t1,tmp=(C_word)a,a+=12,tmp);
if(C_truep((C_word)C_i_nullp(((C_word*)t16)[1]))){
t20=t19;
f_25161(t20,C_SCHEME_UNDEFINED);}
else{
t20=(C_word)C_i_car(((C_word*)t16)[1]);
t21=(C_word)C_eqp(t20,lf[558]);
if(C_truep(t21)){
t22=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_25486,a[2]=t2,a[3]=t19,a[4]=t16,a[5]=t18,a[6]=t10,a[7]=t4,tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)t10)[1])){
C_trace("error");
t23=*((C_word*)lf[6]+1);
((C_proc4)C_retrieve_proc(t23))(4,t23,t22,lf[21],lf[558]);}
else{
t23=t22;
f_25486(2,t23,C_SCHEME_UNDEFINED);}}
else{
t22=(C_word)C_eqp(t20,lf[566]);
if(C_truep(t22)){
t23=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_25521,a[2]=t2,a[3]=t19,a[4]=t16,a[5]=t18,a[6]=t12,a[7]=t6,tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)t12)[1])){
C_trace("error");
t24=*((C_word*)lf[6]+1);
((C_proc4)C_retrieve_proc(t24))(4,t24,t23,lf[21],lf[566]);}
else{
t24=t23;
f_25521(2,t24,C_SCHEME_UNDEFINED);}}
else{
t23=(C_word)C_eqp(t20,lf[561]);
if(C_truep(t23)){
t24=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_25556,a[2]=t2,a[3]=t19,a[4]=t16,a[5]=t18,a[6]=t14,a[7]=t8,tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)t14)[1])){
C_trace("error");
t25=*((C_word*)lf[6]+1);
((C_proc4)C_retrieve_proc(t25))(4,t25,t24,lf[21],lf[561]);}
else{
t25=t24;
f_25556(2,t25,C_SCHEME_UNDEFINED);}}
else{
t24=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_25585,a[2]=t19,a[3]=t10,a[4]=t4,a[5]=t16,tmp=(C_word)a,a+=6,tmp);
if(C_truep(((C_word*)t18)[1])){
C_trace("error");
t25=*((C_word*)lf[6]+1);
((C_proc4)C_retrieve_proc(t25))(4,t25,t24,lf[12],t2);}
else{
t25=t24;
f_25585(2,t25,C_SCHEME_UNDEFINED);}}}}}}

/* k25583 in mm:make-press in k21827 in k18307 in k18304 in k18301 in k18298 in k17861 in k17858 in k17855 in k17852 in k17849 in k17327 in k17324 in k16801 in k16798 in k16795 in k16792 in k16789 in k16786 in k16783 in k16780 in k16777 in k16774 in k16771 in k16768 in k16765 in k16762 in k16759 in k16756 in k16753 in k16750 in k16747 in k16744 in k16741 in k16602 in k16599 in k16596 in k16593 in k16537 in k16534 in k16531 in k16528 in k16525 in k16522 in k16519 in k16516 in k15271 in k15202 in k15009 in k15006 in k14901 in k14850 in k7607 in k7604 in k5838 in k5545 in k5542 in k5538 in k5247 in k5244 in k5241 in k5238 */
static void C_ccall f_25585(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_25585,2,t0,t1);}
t2=(C_word)C_i_car(((C_word*)((C_word*)t0)[5])[1]);
t3=C_mutate(((C_word *)((C_word*)t0)[4])+1,t2);
t4=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_25592,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[5],a[4]=((C_word*)t0)[3],tmp=(C_word)a,a+=5,tmp);
t5=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_25600,a[2]=((C_word*)t0)[4],a[3]=t4,tmp=(C_word)a,a+=4,tmp);
C_trace("keyword?");
t6=C_retrieve(lf[15]);
((C_proc3)C_retrieve_proc(t6))(3,t6,t5,((C_word*)((C_word*)t0)[4])[1]);}

/* k25598 in k25583 in mm:make-press in k21827 in k18307 in k18304 in k18301 in k18298 in k17861 in k17858 in k17855 in k17852 in k17849 in k17327 in k17324 in k16801 in k16798 in k16795 in k16792 in k16789 in k16786 in k16783 in k16780 in k16777 in k16774 in k16771 in k16768 in k16765 in k16762 in k16759 in k16756 in k16753 in k16750 in k16747 in k16744 in k16741 in k16602 in k16599 in k16596 in k16593 in k16537 in k16534 in k16531 in k16528 in k16525 in k16522 in k16519 in k16516 in k15271 in k15202 in k15009 in k15006 in k14901 in k14850 in k7607 in k7604 in k5838 in k5545 in k5542 in k5538 in k5247 in k5244 in k5241 in k5238 */
static void C_ccall f_25600(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
if(C_truep(t1)){
C_trace("error");
t2=*((C_word*)lf[6]+1);
((C_proc4)C_retrieve_proc(t2))(4,t2,((C_word*)t0)[3],lf[16],((C_word*)((C_word*)t0)[2])[1]);}
else{
t2=((C_word*)t0)[3];
f_25592(2,t2,C_SCHEME_UNDEFINED);}}

/* k25590 in k25583 in mm:make-press in k21827 in k18307 in k18304 in k18301 in k18298 in k17861 in k17858 in k17855 in k17852 in k17849 in k17327 in k17324 in k16801 in k16798 in k16795 in k16792 in k16789 in k16786 in k16783 in k16780 in k16777 in k16774 in k16771 in k16768 in k16765 in k16762 in k16759 in k16756 in k16753 in k16750 in k16747 in k16744 in k16741 in k16602 in k16599 in k16596 in k16593 in k16537 in k16534 in k16531 in k16528 in k16525 in k16522 in k16519 in k16516 in k15271 in k15202 in k15009 in k15006 in k14901 in k14850 in k7607 in k7604 in k5838 in k5545 in k5542 in k5538 in k5247 in k5244 in k5241 in k5238 */
static void C_ccall f_25592(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word *a;
t2=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[3])[1]);
t4=C_mutate(((C_word *)((C_word*)t0)[3])+1,t3);
t5=((C_word*)t0)[2];
f_25161(t5,t4);}

/* k25554 in mm:make-press in k21827 in k18307 in k18304 in k18301 in k18298 in k17861 in k17858 in k17855 in k17852 in k17849 in k17327 in k17324 in k16801 in k16798 in k16795 in k16792 in k16789 in k16786 in k16783 in k16780 in k16777 in k16774 in k16771 in k16768 in k16765 in k16762 in k16759 in k16756 in k16753 in k16750 in k16747 in k16744 in k16741 in k16602 in k16599 in k16596 in k16593 in k16537 in k16534 in k16531 in k16528 in k16525 in k16522 in k16519 in k16516 in k15271 in k15202 in k15009 in k15006 in k14901 in k14850 in k7607 in k7604 in k5838 in k5545 in k5542 in k5538 in k5247 in k5244 in k5241 in k5238 */
static void C_ccall f_25556(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_25556,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_25560,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("error");
t4=*((C_word*)lf[6]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[23],((C_word*)t0)[2]);}
else{
t4=t2;
f_25560(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k25558 in k25554 in mm:make-press in k21827 in k18307 in k18304 in k18301 in k18298 in k17861 in k17858 in k17855 in k17852 in k17849 in k17327 in k17324 in k16801 in k16798 in k16795 in k16792 in k16789 in k16786 in k16783 in k16780 in k16777 in k16774 in k16771 in k16768 in k16765 in k16762 in k16759 in k16756 in k16753 in k16750 in k16747 in k16744 in k16741 in k16602 in k16599 in k16596 in k16593 in k16537 in k16534 in k16531 in k16528 in k16525 in k16522 in k16519 in k16516 in k15271 in k15202 in k15009 in k15006 in k14901 in k14850 in k7607 in k7604 in k5838 in k5545 in k5542 in k5538 in k5247 in k5244 in k5241 in k5238 */
static void C_ccall f_25560(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_25161(t7,t6);}

/* k25519 in mm:make-press in k21827 in k18307 in k18304 in k18301 in k18298 in k17861 in k17858 in k17855 in k17852 in k17849 in k17327 in k17324 in k16801 in k16798 in k16795 in k16792 in k16789 in k16786 in k16783 in k16780 in k16777 in k16774 in k16771 in k16768 in k16765 in k16762 in k16759 in k16756 in k16753 in k16750 in k16747 in k16744 in k16741 in k16602 in k16599 in k16596 in k16593 in k16537 in k16534 in k16531 in k16528 in k16525 in k16522 in k16519 in k16516 in k15271 in k15202 in k15009 in k15006 in k14901 in k14850 in k7607 in k7604 in k5838 in k5545 in k5542 in k5538 in k5247 in k5244 in k5241 in k5238 */
static void C_ccall f_25521(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_25521,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_25525,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("error");
t4=*((C_word*)lf[6]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[23],((C_word*)t0)[2]);}
else{
t4=t2;
f_25525(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k25523 in k25519 in mm:make-press in k21827 in k18307 in k18304 in k18301 in k18298 in k17861 in k17858 in k17855 in k17852 in k17849 in k17327 in k17324 in k16801 in k16798 in k16795 in k16792 in k16789 in k16786 in k16783 in k16780 in k16777 in k16774 in k16771 in k16768 in k16765 in k16762 in k16759 in k16756 in k16753 in k16750 in k16747 in k16744 in k16741 in k16602 in k16599 in k16596 in k16593 in k16537 in k16534 in k16531 in k16528 in k16525 in k16522 in k16519 in k16516 in k15271 in k15202 in k15009 in k15006 in k14901 in k14850 in k7607 in k7604 in k5838 in k5545 in k5542 in k5538 in k5247 in k5244 in k5241 in k5238 */
static void C_ccall f_25525(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_25161(t7,t6);}

/* k25484 in mm:make-press in k21827 in k18307 in k18304 in k18301 in k18298 in k17861 in k17858 in k17855 in k17852 in k17849 in k17327 in k17324 in k16801 in k16798 in k16795 in k16792 in k16789 in k16786 in k16783 in k16780 in k16777 in k16774 in k16771 in k16768 in k16765 in k16762 in k16759 in k16756 in k16753 in k16750 in k16747 in k16744 in k16741 in k16602 in k16599 in k16596 in k16593 in k16537 in k16534 in k16531 in k16528 in k16525 in k16522 in k16519 in k16516 in k15271 in k15202 in k15009 in k15006 in k14901 in k14850 in k7607 in k7604 in k5838 in k5545 in k5542 in k5538 in k5247 in k5244 in k5241 in k5238 */
static void C_ccall f_25486(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_25486,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_25490,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("error");
t4=*((C_word*)lf[6]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[23],((C_word*)t0)[2]);}
else{
t4=t2;
f_25490(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k25488 in k25484 in mm:make-press in k21827 in k18307 in k18304 in k18301 in k18298 in k17861 in k17858 in k17855 in k17852 in k17849 in k17327 in k17324 in k16801 in k16798 in k16795 in k16792 in k16789 in k16786 in k16783 in k16780 in k16777 in k16774 in k16771 in k16768 in k16765 in k16762 in k16759 in k16756 in k16753 in k16750 in k16747 in k16744 in k16741 in k16602 in k16599 in k16596 in k16593 in k16537 in k16534 in k16531 in k16528 in k16525 in k16522 in k16519 in k16516 in k15271 in k15202 in k15009 in k15006 in k14901 in k14850 in k7607 in k7604 in k5838 in k5545 in k5542 in k5538 in k5247 in k5244 in k5241 in k5238 */
static void C_ccall f_25490(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_25161(t7,t6);}

/* k25159 in mm:make-press in k21827 in k18307 in k18304 in k18301 in k18298 in k17861 in k17858 in k17855 in k17852 in k17849 in k17327 in k17324 in k16801 in k16798 in k16795 in k16792 in k16789 in k16786 in k16783 in k16780 in k16777 in k16774 in k16771 in k16768 in k16765 in k16762 in k16759 in k16756 in k16753 in k16750 in k16747 in k16744 in k16741 in k16602 in k16599 in k16596 in k16593 in k16537 in k16534 in k16531 in k16528 in k16525 in k16522 in k16519 in k16516 in k15271 in k15202 in k15009 in k15006 in k14901 in k14850 in k7607 in k7604 in k5838 in k5545 in k5542 in k5538 in k5247 in k5244 in k5241 in k5238 */
static void C_fcall f_25161(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word ab[42],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_25161,NULL,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|11,a[1]=(C_word)f_25164,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],a[7]=((C_word*)t0)[7],a[8]=((C_word*)t0)[8],a[9]=((C_word*)t0)[9],a[10]=((C_word*)t0)[10],a[11]=((C_word*)t0)[11],tmp=(C_word)a,a+=12,tmp);
if(C_truep((C_word)C_i_nullp(((C_word*)((C_word*)t0)[7])[1]))){
t3=t2;
f_25164(t3,C_SCHEME_UNDEFINED);}
else{
t3=(C_word)C_i_car(((C_word*)((C_word*)t0)[7])[1]);
t4=(C_word)C_eqp(t3,lf[558]);
if(C_truep(t4)){
t5=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_25351,a[2]=((C_word*)t0)[6],a[3]=t2,a[4]=((C_word*)t0)[7],a[5]=((C_word*)t0)[4],a[6]=((C_word*)t0)[5],a[7]=((C_word*)t0)[10],tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)((C_word*)t0)[5])[1])){
C_trace("error");
t6=*((C_word*)lf[6]+1);
((C_proc4)C_retrieve_proc(t6))(4,t6,t5,lf[21],lf[558]);}
else{
t6=t5;
f_25351(2,t6,C_SCHEME_UNDEFINED);}}
else{
t5=(C_word)C_eqp(t3,lf[566]);
if(C_truep(t5)){
t6=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_25386,a[2]=((C_word*)t0)[6],a[3]=t2,a[4]=((C_word*)t0)[7],a[5]=((C_word*)t0)[4],a[6]=((C_word*)t0)[3],a[7]=((C_word*)t0)[8],tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)((C_word*)t0)[3])[1])){
C_trace("error");
t7=*((C_word*)lf[6]+1);
((C_proc4)C_retrieve_proc(t7))(4,t7,t6,lf[21],lf[566]);}
else{
t7=t6;
f_25386(2,t7,C_SCHEME_UNDEFINED);}}
else{
t6=(C_word)C_eqp(t3,lf[561]);
if(C_truep(t6)){
t7=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_25421,a[2]=((C_word*)t0)[6],a[3]=t2,a[4]=((C_word*)t0)[7],a[5]=((C_word*)t0)[4],a[6]=((C_word*)t0)[2],a[7]=((C_word*)t0)[9],tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)((C_word*)t0)[2])[1])){
C_trace("error");
t8=*((C_word*)lf[6]+1);
((C_proc4)C_retrieve_proc(t8))(4,t8,t7,lf[21],lf[561]);}
else{
t8=t7;
f_25421(2,t8,C_SCHEME_UNDEFINED);}}
else{
t7=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_25450,a[2]=t2,a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[8],a[5]=((C_word*)t0)[7],tmp=(C_word)a,a+=6,tmp);
if(C_truep(((C_word*)((C_word*)t0)[4])[1])){
C_trace("error");
t8=*((C_word*)lf[6]+1);
((C_proc4)C_retrieve_proc(t8))(4,t8,t7,lf[12],((C_word*)t0)[6]);}
else{
t8=t7;
f_25450(2,t8,C_SCHEME_UNDEFINED);}}}}}}

/* k25448 in k25159 in mm:make-press in k21827 in k18307 in k18304 in k18301 in k18298 in k17861 in k17858 in k17855 in k17852 in k17849 in k17327 in k17324 in k16801 in k16798 in k16795 in k16792 in k16789 in k16786 in k16783 in k16780 in k16777 in k16774 in k16771 in k16768 in k16765 in k16762 in k16759 in k16756 in k16753 in k16750 in k16747 in k16744 in k16741 in k16602 in k16599 in k16596 in k16593 in k16537 in k16534 in k16531 in k16528 in k16525 in k16522 in k16519 in k16516 in k15271 in k15202 in k15009 in k15006 in k14901 in k14850 in k7607 in k7604 in k5838 in k5545 in k5542 in k5538 in k5247 in k5244 in k5241 in k5238 */
static void C_ccall f_25450(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_25450,2,t0,t1);}
t2=(C_word)C_i_car(((C_word*)((C_word*)t0)[5])[1]);
t3=C_mutate(((C_word *)((C_word*)t0)[4])+1,t2);
t4=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_25457,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[5],a[4]=((C_word*)t0)[3],tmp=(C_word)a,a+=5,tmp);
t5=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_25465,a[2]=((C_word*)t0)[4],a[3]=t4,tmp=(C_word)a,a+=4,tmp);
C_trace("keyword?");
t6=C_retrieve(lf[15]);
((C_proc3)C_retrieve_proc(t6))(3,t6,t5,((C_word*)((C_word*)t0)[4])[1]);}

/* k25463 in k25448 in k25159 in mm:make-press in k21827 in k18307 in k18304 in k18301 in k18298 in k17861 in k17858 in k17855 in k17852 in k17849 in k17327 in k17324 in k16801 in k16798 in k16795 in k16792 in k16789 in k16786 in k16783 in k16780 in k16777 in k16774 in k16771 in k16768 in k16765 in k16762 in k16759 in k16756 in k16753 in k16750 in k16747 in k16744 in k16741 in k16602 in k16599 in k16596 in k16593 in k16537 in k16534 in k16531 in k16528 in k16525 in k16522 in k16519 in k16516 in k15271 in k15202 in k15009 in k15006 in k14901 in k14850 in k7607 in k7604 in k5838 in k5545 in k5542 in k5538 in k5247 in k5244 in k5241 in k5238 */
static void C_ccall f_25465(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
if(C_truep(t1)){
C_trace("error");
t2=*((C_word*)lf[6]+1);
((C_proc4)C_retrieve_proc(t2))(4,t2,((C_word*)t0)[3],lf[16],((C_word*)((C_word*)t0)[2])[1]);}
else{
t2=((C_word*)t0)[3];
f_25457(2,t2,C_SCHEME_UNDEFINED);}}

/* k25455 in k25448 in k25159 in mm:make-press in k21827 in k18307 in k18304 in k18301 in k18298 in k17861 in k17858 in k17855 in k17852 in k17849 in k17327 in k17324 in k16801 in k16798 in k16795 in k16792 in k16789 in k16786 in k16783 in k16780 in k16777 in k16774 in k16771 in k16768 in k16765 in k16762 in k16759 in k16756 in k16753 in k16750 in k16747 in k16744 in k16741 in k16602 in k16599 in k16596 in k16593 in k16537 in k16534 in k16531 in k16528 in k16525 in k16522 in k16519 in k16516 in k15271 in k15202 in k15009 in k15006 in k14901 in k14850 in k7607 in k7604 in k5838 in k5545 in k5542 in k5538 in k5247 in k5244 in k5241 in k5238 */
static void C_ccall f_25457(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word *a;
t2=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[3])[1]);
t4=C_mutate(((C_word *)((C_word*)t0)[3])+1,t3);
t5=((C_word*)t0)[2];
f_25164(t5,t4);}

/* k25419 in k25159 in mm:make-press in k21827 in k18307 in k18304 in k18301 in k18298 in k17861 in k17858 in k17855 in k17852 in k17849 in k17327 in k17324 in k16801 in k16798 in k16795 in k16792 in k16789 in k16786 in k16783 in k16780 in k16777 in k16774 in k16771 in k16768 in k16765 in k16762 in k16759 in k16756 in k16753 in k16750 in k16747 in k16744 in k16741 in k16602 in k16599 in k16596 in k16593 in k16537 in k16534 in k16531 in k16528 in k16525 in k16522 in k16519 in k16516 in k15271 in k15202 in k15009 in k15006 in k14901 in k14850 in k7607 in k7604 in k5838 in k5545 in k5542 in k5538 in k5247 in k5244 in k5241 in k5238 */
static void C_ccall f_25421(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_25421,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_25425,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("error");
t4=*((C_word*)lf[6]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[23],((C_word*)t0)[2]);}
else{
t4=t2;
f_25425(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k25423 in k25419 in k25159 in mm:make-press in k21827 in k18307 in k18304 in k18301 in k18298 in k17861 in k17858 in k17855 in k17852 in k17849 in k17327 in k17324 in k16801 in k16798 in k16795 in k16792 in k16789 in k16786 in k16783 in k16780 in k16777 in k16774 in k16771 in k16768 in k16765 in k16762 in k16759 in k16756 in k16753 in k16750 in k16747 in k16744 in k16741 in k16602 in k16599 in k16596 in k16593 in k16537 in k16534 in k16531 in k16528 in k16525 in k16522 in k16519 in k16516 in k15271 in k15202 in k15009 in k15006 in k14901 in k14850 in k7607 in k7604 in k5838 in k5545 in k5542 in k5538 in k5247 in k5244 in k5241 in k5238 */
static void C_ccall f_25425(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_25164(t7,t6);}

/* k25384 in k25159 in mm:make-press in k21827 in k18307 in k18304 in k18301 in k18298 in k17861 in k17858 in k17855 in k17852 in k17849 in k17327 in k17324 in k16801 in k16798 in k16795 in k16792 in k16789 in k16786 in k16783 in k16780 in k16777 in k16774 in k16771 in k16768 in k16765 in k16762 in k16759 in k16756 in k16753 in k16750 in k16747 in k16744 in k16741 in k16602 in k16599 in k16596 in k16593 in k16537 in k16534 in k16531 in k16528 in k16525 in k16522 in k16519 in k16516 in k15271 in k15202 in k15009 in k15006 in k14901 in k14850 in k7607 in k7604 in k5838 in k5545 in k5542 in k5538 in k5247 in k5244 in k5241 in k5238 */
static void C_ccall f_25386(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_25386,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_25390,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("error");
t4=*((C_word*)lf[6]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[23],((C_word*)t0)[2]);}
else{
t4=t2;
f_25390(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k25388 in k25384 in k25159 in mm:make-press in k21827 in k18307 in k18304 in k18301 in k18298 in k17861 in k17858 in k17855 in k17852 in k17849 in k17327 in k17324 in k16801 in k16798 in k16795 in k16792 in k16789 in k16786 in k16783 in k16780 in k16777 in k16774 in k16771 in k16768 in k16765 in k16762 in k16759 in k16756 in k16753 in k16750 in k16747 in k16744 in k16741 in k16602 in k16599 in k16596 in k16593 in k16537 in k16534 in k16531 in k16528 in k16525 in k16522 in k16519 in k16516 in k15271 in k15202 in k15009 in k15006 in k14901 in k14850 in k7607 in k7604 in k5838 in k5545 in k5542 in k5538 in k5247 in k5244 in k5241 in k5238 */
static void C_ccall f_25390(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_25164(t7,t6);}

/* k25349 in k25159 in mm:make-press in k21827 in k18307 in k18304 in k18301 in k18298 in k17861 in k17858 in k17855 in k17852 in k17849 in k17327 in k17324 in k16801 in k16798 in k16795 in k16792 in k16789 in k16786 in k16783 in k16780 in k16777 in k16774 in k16771 in k16768 in k16765 in k16762 in k16759 in k16756 in k16753 in k16750 in k16747 in k16744 in k16741 in k16602 in k16599 in k16596 in k16593 in k16537 in k16534 in k16531 in k16528 in k16525 in k16522 in k16519 in k16516 in k15271 in k15202 in k15009 in k15006 in k14901 in k14850 in k7607 in k7604 in k5838 in k5545 in k5542 in k5538 in k5247 in k5244 in k5241 in k5238 */
static void C_ccall f_25351(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_25351,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_25355,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("error");
t4=*((C_word*)lf[6]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[23],((C_word*)t0)[2]);}
else{
t4=t2;
f_25355(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k25353 in k25349 in k25159 in mm:make-press in k21827 in k18307 in k18304 in k18301 in k18298 in k17861 in k17858 in k17855 in k17852 in k17849 in k17327 in k17324 in k16801 in k16798 in k16795 in k16792 in k16789 in k16786 in k16783 in k16780 in k16777 in k16774 in k16771 in k16768 in k16765 in k16762 in k16759 in k16756 in k16753 in k16750 in k16747 in k16744 in k16741 in k16602 in k16599 in k16596 in k16593 in k16537 in k16534 in k16531 in k16528 in k16525 in k16522 in k16519 in k16516 in k15271 in k15202 in k15009 in k15006 in k14901 in k14850 in k7607 in k7604 in k5838 in k5545 in k5542 in k5538 in k5247 in k5244 in k5241 in k5238 */
static void C_ccall f_25355(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_25164(t7,t6);}

/* k25162 in k25159 in mm:make-press in k21827 in k18307 in k18304 in k18301 in k18298 in k17861 in k17858 in k17855 in k17852 in k17849 in k17327 in k17324 in k16801 in k16798 in k16795 in k16792 in k16789 in k16786 in k16783 in k16780 in k16777 in k16774 in k16771 in k16768 in k16765 in k16762 in k16759 in k16756 in k16753 in k16750 in k16747 in k16744 in k16741 in k16602 in k16599 in k16596 in k16593 in k16537 in k16534 in k16531 in k16528 in k16525 in k16522 in k16519 in k16516 in k15271 in k15202 in k15009 in k15006 in k14901 in k14850 in k7607 in k7604 in k5838 in k5545 in k5542 in k5538 in k5247 in k5244 in k5241 in k5238 */
static void C_fcall f_25164(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word ab[38],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_25164,NULL,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_25167,a[2]=((C_word*)t0)[6],a[3]=((C_word*)t0)[7],a[4]=((C_word*)t0)[8],a[5]=((C_word*)t0)[9],a[6]=((C_word*)t0)[10],a[7]=((C_word*)t0)[11],tmp=(C_word)a,a+=8,tmp);
if(C_truep((C_word)C_i_nullp(((C_word*)((C_word*)t0)[7])[1]))){
t3=t2;
f_25167(t3,C_SCHEME_UNDEFINED);}
else{
t3=(C_word)C_i_car(((C_word*)((C_word*)t0)[7])[1]);
t4=(C_word)C_eqp(t3,lf[558]);
if(C_truep(t4)){
t5=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_25216,a[2]=((C_word*)t0)[6],a[3]=t2,a[4]=((C_word*)t0)[7],a[5]=((C_word*)t0)[4],a[6]=((C_word*)t0)[5],a[7]=((C_word*)t0)[10],tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)((C_word*)t0)[5])[1])){
C_trace("error");
t6=*((C_word*)lf[6]+1);
((C_proc4)C_retrieve_proc(t6))(4,t6,t5,lf[21],lf[558]);}
else{
t6=t5;
f_25216(2,t6,C_SCHEME_UNDEFINED);}}
else{
t5=(C_word)C_eqp(t3,lf[566]);
if(C_truep(t5)){
t6=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_25251,a[2]=((C_word*)t0)[6],a[3]=t2,a[4]=((C_word*)t0)[7],a[5]=((C_word*)t0)[4],a[6]=((C_word*)t0)[3],a[7]=((C_word*)t0)[8],tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)((C_word*)t0)[3])[1])){
C_trace("error");
t7=*((C_word*)lf[6]+1);
((C_proc4)C_retrieve_proc(t7))(4,t7,t6,lf[21],lf[566]);}
else{
t7=t6;
f_25251(2,t7,C_SCHEME_UNDEFINED);}}
else{
t6=(C_word)C_eqp(t3,lf[561]);
if(C_truep(t6)){
t7=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_25286,a[2]=((C_word*)t0)[6],a[3]=t2,a[4]=((C_word*)t0)[7],a[5]=((C_word*)t0)[4],a[6]=((C_word*)t0)[2],a[7]=((C_word*)t0)[9],tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)((C_word*)t0)[2])[1])){
C_trace("error");
t8=*((C_word*)lf[6]+1);
((C_proc4)C_retrieve_proc(t8))(4,t8,t7,lf[21],lf[561]);}
else{
t8=t7;
f_25286(2,t8,C_SCHEME_UNDEFINED);}}
else{
t7=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_25315,a[2]=t2,a[3]=((C_word*)t0)[2],a[4]=((C_word*)t0)[9],a[5]=((C_word*)t0)[7],tmp=(C_word)a,a+=6,tmp);
if(C_truep(((C_word*)((C_word*)t0)[4])[1])){
C_trace("error");
t8=*((C_word*)lf[6]+1);
((C_proc4)C_retrieve_proc(t8))(4,t8,t7,lf[12],((C_word*)t0)[6]);}
else{
t8=t7;
f_25315(2,t8,C_SCHEME_UNDEFINED);}}}}}}

/* k25313 in k25162 in k25159 in mm:make-press in k21827 in k18307 in k18304 in k18301 in k18298 in k17861 in k17858 in k17855 in k17852 in k17849 in k17327 in k17324 in k16801 in k16798 in k16795 in k16792 in k16789 in k16786 in k16783 in k16780 in k16777 in k16774 in k16771 in k16768 in k16765 in k16762 in k16759 in k16756 in k16753 in k16750 in k16747 in k16744 in k16741 in k16602 in k16599 in k16596 in k16593 in k16537 in k16534 in k16531 in k16528 in k16525 in k16522 in k16519 in k16516 in k15271 in k15202 in k15009 in k15006 in k14901 in k14850 in k7607 in k7604 in k5838 in k5545 in k5542 in k5538 in k5247 in k5244 in k5241 in k5238 */
static void C_ccall f_25315(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_25315,2,t0,t1);}
t2=(C_word)C_i_car(((C_word*)((C_word*)t0)[5])[1]);
t3=C_mutate(((C_word *)((C_word*)t0)[4])+1,t2);
t4=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_25322,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[5],a[4]=((C_word*)t0)[3],tmp=(C_word)a,a+=5,tmp);
t5=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_25330,a[2]=((C_word*)t0)[4],a[3]=t4,tmp=(C_word)a,a+=4,tmp);
C_trace("keyword?");
t6=C_retrieve(lf[15]);
((C_proc3)C_retrieve_proc(t6))(3,t6,t5,((C_word*)((C_word*)t0)[4])[1]);}

/* k25328 in k25313 in k25162 in k25159 in mm:make-press in k21827 in k18307 in k18304 in k18301 in k18298 in k17861 in k17858 in k17855 in k17852 in k17849 in k17327 in k17324 in k16801 in k16798 in k16795 in k16792 in k16789 in k16786 in k16783 in k16780 in k16777 in k16774 in k16771 in k16768 in k16765 in k16762 in k16759 in k16756 in k16753 in k16750 in k16747 in k16744 in k16741 in k16602 in k16599 in k16596 in k16593 in k16537 in k16534 in k16531 in k16528 in k16525 in k16522 in k16519 in k16516 in k15271 in k15202 in k15009 in k15006 in k14901 in k14850 in k7607 in k7604 in k5838 in k5545 in k5542 in k5538 in k5247 in k5244 in k5241 in k5238 */
static void C_ccall f_25330(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
if(C_truep(t1)){
C_trace("error");
t2=*((C_word*)lf[6]+1);
((C_proc4)C_retrieve_proc(t2))(4,t2,((C_word*)t0)[3],lf[16],((C_word*)((C_word*)t0)[2])[1]);}
else{
t2=((C_word*)t0)[3];
f_25322(2,t2,C_SCHEME_UNDEFINED);}}

/* k25320 in k25313 in k25162 in k25159 in mm:make-press in k21827 in k18307 in k18304 in k18301 in k18298 in k17861 in k17858 in k17855 in k17852 in k17849 in k17327 in k17324 in k16801 in k16798 in k16795 in k16792 in k16789 in k16786 in k16783 in k16780 in k16777 in k16774 in k16771 in k16768 in k16765 in k16762 in k16759 in k16756 in k16753 in k16750 in k16747 in k16744 in k16741 in k16602 in k16599 in k16596 in k16593 in k16537 in k16534 in k16531 in k16528 in k16525 in k16522 in k16519 in k16516 in k15271 in k15202 in k15009 in k15006 in k14901 in k14850 in k7607 in k7604 in k5838 in k5545 in k5542 in k5538 in k5247 in k5244 in k5241 in k5238 */
static void C_ccall f_25322(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word *a;
t2=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[3])[1]);
t4=C_mutate(((C_word *)((C_word*)t0)[3])+1,t3);
t5=((C_word*)t0)[2];
f_25167(t5,t4);}

/* k25284 in k25162 in k25159 in mm:make-press in k21827 in k18307 in k18304 in k18301 in k18298 in k17861 in k17858 in k17855 in k17852 in k17849 in k17327 in k17324 in k16801 in k16798 in k16795 in k16792 in k16789 in k16786 in k16783 in k16780 in k16777 in k16774 in k16771 in k16768 in k16765 in k16762 in k16759 in k16756 in k16753 in k16750 in k16747 in k16744 in k16741 in k16602 in k16599 in k16596 in k16593 in k16537 in k16534 in k16531 in k16528 in k16525 in k16522 in k16519 in k16516 in k15271 in k15202 in k15009 in k15006 in k14901 in k14850 in k7607 in k7604 in k5838 in k5545 in k5542 in k5538 in k5247 in k5244 in k5241 in k5238 */
static void C_ccall f_25286(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_25286,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_25290,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("error");
t4=*((C_word*)lf[6]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[23],((C_word*)t0)[2]);}
else{
t4=t2;
f_25290(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k25288 in k25284 in k25162 in k25159 in mm:make-press in k21827 in k18307 in k18304 in k18301 in k18298 in k17861 in k17858 in k17855 in k17852 in k17849 in k17327 in k17324 in k16801 in k16798 in k16795 in k16792 in k16789 in k16786 in k16783 in k16780 in k16777 in k16774 in k16771 in k16768 in k16765 in k16762 in k16759 in k16756 in k16753 in k16750 in k16747 in k16744 in k16741 in k16602 in k16599 in k16596 in k16593 in k16537 in k16534 in k16531 in k16528 in k16525 in k16522 in k16519 in k16516 in k15271 in k15202 in k15009 in k15006 in k14901 in k14850 in k7607 in k7604 in k5838 in k5545 in k5542 in k5538 in k5247 in k5244 in k5241 in k5238 */
static void C_ccall f_25290(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_25167(t7,t6);}

/* k25249 in k25162 in k25159 in mm:make-press in k21827 in k18307 in k18304 in k18301 in k18298 in k17861 in k17858 in k17855 in k17852 in k17849 in k17327 in k17324 in k16801 in k16798 in k16795 in k16792 in k16789 in k16786 in k16783 in k16780 in k16777 in k16774 in k16771 in k16768 in k16765 in k16762 in k16759 in k16756 in k16753 in k16750 in k16747 in k16744 in k16741 in k16602 in k16599 in k16596 in k16593 in k16537 in k16534 in k16531 in k16528 in k16525 in k16522 in k16519 in k16516 in k15271 in k15202 in k15009 in k15006 in k14901 in k14850 in k7607 in k7604 in k5838 in k5545 in k5542 in k5538 in k5247 in k5244 in k5241 in k5238 */
static void C_ccall f_25251(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_25251,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_25255,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("error");
t4=*((C_word*)lf[6]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[23],((C_word*)t0)[2]);}
else{
t4=t2;
f_25255(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k25253 in k25249 in k25162 in k25159 in mm:make-press in k21827 in k18307 in k18304 in k18301 in k18298 in k17861 in k17858 in k17855 in k17852 in k17849 in k17327 in k17324 in k16801 in k16798 in k16795 in k16792 in k16789 in k16786 in k16783 in k16780 in k16777 in k16774 in k16771 in k16768 in k16765 in k16762 in k16759 in k16756 in k16753 in k16750 in k16747 in k16744 in k16741 in k16602 in k16599 in k16596 in k16593 in k16537 in k16534 in k16531 in k16528 in k16525 in k16522 in k16519 in k16516 in k15271 in k15202 in k15009 in k15006 in k14901 in k14850 in k7607 in k7604 in k5838 in k5545 in k5542 in k5538 in k5247 in k5244 in k5241 in k5238 */
static void C_ccall f_25255(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_25167(t7,t6);}

/* k25214 in k25162 in k25159 in mm:make-press in k21827 in k18307 in k18304 in k18301 in k18298 in k17861 in k17858 in k17855 in k17852 in k17849 in k17327 in k17324 in k16801 in k16798 in k16795 in k16792 in k16789 in k16786 in k16783 in k16780 in k16777 in k16774 in k16771 in k16768 in k16765 in k16762 in k16759 in k16756 in k16753 in k16750 in k16747 in k16744 in k16741 in k16602 in k16599 in k16596 in k16593 in k16537 in k16534 in k16531 in k16528 in k16525 in k16522 in k16519 in k16516 in k15271 in k15202 in k15009 in k15006 in k14901 in k14850 in k7607 in k7604 in k5838 in k5545 in k5542 in k5538 in k5247 in k5244 in k5241 in k5238 */
static void C_ccall f_25216(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_25216,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_25220,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("error");
t4=*((C_word*)lf[6]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[23],((C_word*)t0)[2]);}
else{
t4=t2;
f_25220(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k25218 in k25214 in k25162 in k25159 in mm:make-press in k21827 in k18307 in k18304 in k18301 in k18298 in k17861 in k17858 in k17855 in k17852 in k17849 in k17327 in k17324 in k16801 in k16798 in k16795 in k16792 in k16789 in k16786 in k16783 in k16780 in k16777 in k16774 in k16771 in k16768 in k16765 in k16762 in k16759 in k16756 in k16753 in k16750 in k16747 in k16744 in k16741 in k16602 in k16599 in k16596 in k16593 in k16537 in k16534 in k16531 in k16528 in k16525 in k16522 in k16519 in k16516 in k15271 in k15202 in k15009 in k15006 in k14901 in k14850 in k7607 in k7604 in k5838 in k5545 in k5542 in k5538 in k5247 in k5244 in k5241 in k5238 */
static void C_ccall f_25220(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_25167(t7,t6);}

/* k25165 in k25162 in k25159 in mm:make-press in k21827 in k18307 in k18304 in k18301 in k18298 in k17861 in k17858 in k17855 in k17852 in k17849 in k17327 in k17324 in k16801 in k16798 in k16795 in k16792 in k16789 in k16786 in k16783 in k16780 in k16777 in k16774 in k16771 in k16768 in k16765 in k16762 in k16759 in k16756 in k16753 in k16750 in k16747 in k16744 in k16741 in k16602 in k16599 in k16596 in k16593 in k16537 in k16534 in k16531 in k16528 in k16525 in k16522 in k16519 in k16516 in k15271 in k15202 in k15009 in k15006 in k14901 in k14850 in k7607 in k7604 in k5838 in k5545 in k5542 in k5538 in k5247 in k5244 in k5241 in k5238 */
static void C_fcall f_25167(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[6],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_25167,NULL,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_25170,a[2]=((C_word*)t0)[4],a[3]=((C_word*)t0)[5],a[4]=((C_word*)t0)[6],a[5]=((C_word*)t0)[7],tmp=(C_word)a,a+=6,tmp);
if(C_truep((C_word)C_i_nullp(((C_word*)((C_word*)t0)[3])[1]))){
t3=t2;
f_25170(2,t3,C_SCHEME_UNDEFINED);}
else{
C_trace("error");
t3=*((C_word*)lf[6]+1);
((C_proc4)C_retrieve_proc(t3))(4,t3,t2,lf[7],((C_word*)t0)[2]);}}

/* k25168 in k25165 in k25162 in k25159 in mm:make-press in k21827 in k18307 in k18304 in k18301 in k18298 in k17861 in k17858 in k17855 in k17852 in k17849 in k17327 in k17324 in k16801 in k16798 in k16795 in k16792 in k16789 in k16786 in k16783 in k16780 in k16777 in k16774 in k16771 in k16768 in k16765 in k16762 in k16759 in k16756 in k16753 in k16750 in k16747 in k16744 in k16741 in k16602 in k16599 in k16596 in k16593 in k16537 in k16534 in k16531 in k16528 in k16525 in k16522 in k16519 in k16516 in k15271 in k15202 in k15009 in k15006 in k14901 in k14850 in k7607 in k7604 in k5838 in k5545 in k5542 in k5538 in k5247 in k5244 in k5241 in k5238 */
static void C_ccall f_25170(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word ab[3],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_25170,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_25174,a[2]=((C_word)li341),tmp=(C_word)a,a+=3,tmp);
((C_proc7)(void*)(*((C_word*)t2+1)))(7,t2,((C_word*)t0)[5],C_fix(13),((C_word*)((C_word*)t0)[4])[1],((C_word*)((C_word*)t0)[3])[1],((C_word*)((C_word*)t0)[2])[1],C_fix(0));}

/* f_25174 in k25168 in k25165 in k25162 in k25159 in mm:make-press in k21827 in k18307 in k18304 in k18301 in k18298 in k17861 in k17858 in k17855 in k17852 in k17849 in k17327 in k17324 in k16801 in k16798 in k16795 in k16792 in k16789 in k16786 in k16783 in k16780 in k16777 in k16774 in k16771 in k16768 in k16765 in k16762 in k16759 in k16756 in k16753 in k16750 in k16747 in k16744 in k16741 in k16602 in k16599 in k16596 in k16593 in k16537 in k16534 in k16531 in k16528 in k16525 in k16522 in k16519 in k16516 in k15271 in k15202 in k15009 in k15006 in k14901 in k14850 in k7607 in k7604 in k5838 in k5545 in k5542 in k5538 in k5247 in k5244 in k5241 in k5238 */
static void C_ccall f_25174(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4,C_word t5,C_word t6){
C_word tmp;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word ab[5],*a=ab;
if(c!=7) C_bad_argc_2(c,7,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr7,(void*)f_25174,7,t0,t1,t2,t3,t4,t5,t6);}
t7=(C_word)C_a_i_bytevector(&a,1,C_fix(3));
t8=(C_word)C_i_foreign_fixnum_argumentp(t2);
t9=(C_word)C_i_foreign_flonum_argumentp(t3);
t10=(C_word)C_i_foreign_fixnum_argumentp(t4);
t11=(C_word)C_i_foreign_fixnum_argumentp(t5);
t12=(C_word)C_i_foreign_fixnum_argumentp(t6);
t13=t1;
((C_proc2)(void*)(*((C_word*)t13+1)))(2,t13,(C_word)stub4487(t7,t8,t9,t10,t11,t12));}

/* mm:prog? in k21827 in k18307 in k18304 in k18301 in k18298 in k17861 in k17858 in k17855 in k17852 in k17849 in k17327 in k17324 in k16801 in k16798 in k16795 in k16792 in k16789 in k16786 in k16783 in k16780 in k16777 in k16774 in k16771 in k16768 in k16765 in k16762 in k16759 in k16756 in k16753 in k16750 in k16747 in k16744 in k16741 in k16602 in k16599 in k16596 in k16593 in k16537 in k16534 in k16531 in k16528 in k16525 in k16522 in k16519 in k16516 in k15271 in k15202 in k15009 in k15006 in k14901 in k14850 in k7607 in k7604 in k5838 in k5545 in k5542 in k5538 in k5247 in k5244 in k5241 in k5238 */
static void C_ccall f_25138(C_word c,C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word ab[3],*a=ab;
if(c!=3) C_bad_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr3,(void*)f_25138,3,t0,t1,t2);}
t3=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_25143,a[2]=((C_word)li339),tmp=(C_word)a,a+=3,tmp);
((C_proc4)(void*)(*((C_word*)t3+1)))(4,t3,t1,t2,C_fix(12));}

/* f_25143 in mm:prog? in k21827 in k18307 in k18304 in k18301 in k18298 in k17861 in k17858 in k17855 in k17852 in k17849 in k17327 in k17324 in k16801 in k16798 in k16795 in k16792 in k16789 in k16786 in k16783 in k16780 in k16777 in k16774 in k16771 in k16768 in k16765 in k16762 in k16759 in k16756 in k16753 in k16750 in k16747 in k16744 in k16741 in k16602 in k16599 in k16596 in k16593 in k16537 in k16534 in k16531 in k16528 in k16525 in k16522 in k16519 in k16516 in k15271 in k15202 in k15009 in k15006 in k14901 in k14850 in k7607 in k7604 in k5838 in k5545 in k5542 in k5538 in k5247 in k5244 in k5241 in k5238 */
static void C_ccall f_25143(C_word c,C_word t0,C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word t6;
C_word *a;
if(c!=4) C_bad_argc_2(c,4,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr4,(void*)f_25143,4,t0,t1,t2,t3);}
t4=(C_truep(t2)?(C_word)C_i_foreign_pointer_argumentp(t2):C_SCHEME_FALSE);
t5=(C_word)C_i_foreign_fixnum_argumentp(t3);
t6=t1;
((C_proc2)(void*)(*((C_word*)t6+1)))(2,t6,(C_word)stub4408(C_SCHEME_UNDEFINED,t4,t5));}

/* mm:make-prog in k21827 in k18307 in k18304 in k18301 in k18298 in k17861 in k17858 in k17855 in k17852 in k17849 in k17327 in k17324 in k16801 in k16798 in k16795 in k16792 in k16789 in k16786 in k16783 in k16780 in k16777 in k16774 in k16771 in k16768 in k16765 in k16762 in k16759 in k16756 in k16753 in k16750 in k16747 in k16744 in k16741 in k16602 in k16599 in k16596 in k16593 in k16537 in k16534 in k16531 in k16528 in k16525 in k16522 in k16519 in k16516 in k15271 in k15202 in k15009 in k15006 in k14901 in k14850 in k7607 in k7604 in k5838 in k5545 in k5542 in k5538 in k5247 in k5244 in k5241 in k5238 */
static void C_ccall f_24687(C_word c,C_word t0,C_word t1,...){
C_word tmp;
C_word t2;
va_list v;
C_word *a,c2=c;
C_save_rest(t1,c2,2);
C_check_for_interrupt;
if(!C_demand(c*C_SIZEOF_PAIR+58)){
C_save_and_reclaim((void*)tr2r,(void*)f_24687r,2,t0,t1);}
else{
a=C_alloc((c-2)*3);
t2=C_restore_rest(a,C_rest_count(0));
f_24687r(t0,t1,t2);}}

static void C_ccall f_24687r(C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word t14;
C_word t15;
C_word t16;
C_word t17;
C_word t18;
C_word t19;
C_word t20;
C_word t21;
C_word t22;
C_word t23;
C_word t24;
C_word t25;
C_word t26;
C_word t27;
C_word t28;
C_word *a=C_alloc(58);
t3=C_fix(0);
t4=(*a=C_VECTOR_TYPE|1,a[1]=t3,tmp=(C_word)a,a+=2,tmp);
t5=C_fix(0);
t6=(*a=C_VECTOR_TYPE|1,a[1]=t5,tmp=(C_word)a,a+=2,tmp);
t7=C_fix(0);
t8=(*a=C_VECTOR_TYPE|1,a[1]=t7,tmp=(C_word)a,a+=2,tmp);
t9=C_SCHEME_FALSE;
t10=(*a=C_VECTOR_TYPE|1,a[1]=t9,tmp=(C_word)a,a+=2,tmp);
t11=C_SCHEME_FALSE;
t12=(*a=C_VECTOR_TYPE|1,a[1]=t11,tmp=(C_word)a,a+=2,tmp);
t13=C_SCHEME_FALSE;
t14=(*a=C_VECTOR_TYPE|1,a[1]=t13,tmp=(C_word)a,a+=2,tmp);
t15=t2;
t16=(*a=C_VECTOR_TYPE|1,a[1]=t15,tmp=(C_word)a,a+=2,tmp);
t17=C_SCHEME_FALSE;
t18=(*a=C_VECTOR_TYPE|1,a[1]=t17,tmp=(C_word)a,a+=2,tmp);
t19=(*a=C_CLOSURE_TYPE|11,a[1]=(C_word)f_24691,a[2]=t14,a[3]=t12,a[4]=t18,a[5]=t10,a[6]=t2,a[7]=t16,a[8]=t6,a[9]=t8,a[10]=t4,a[11]=t1,tmp=(C_word)a,a+=12,tmp);
if(C_truep((C_word)C_i_nullp(((C_word*)t16)[1]))){
t20=t19;
f_24691(t20,C_SCHEME_UNDEFINED);}
else{
t20=(C_word)C_i_car(((C_word*)t16)[1]);
t21=(C_word)C_eqp(t20,lf[558]);
if(C_truep(t21)){
t22=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_25016,a[2]=t2,a[3]=t19,a[4]=t16,a[5]=t18,a[6]=t10,a[7]=t4,tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)t10)[1])){
C_trace("error");
t23=*((C_word*)lf[6]+1);
((C_proc4)C_retrieve_proc(t23))(4,t23,t22,lf[21],lf[558]);}
else{
t23=t22;
f_25016(2,t23,C_SCHEME_UNDEFINED);}}
else{
t22=(C_word)C_eqp(t20,lf[566]);
if(C_truep(t22)){
t23=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_25051,a[2]=t2,a[3]=t19,a[4]=t16,a[5]=t18,a[6]=t12,a[7]=t6,tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)t12)[1])){
C_trace("error");
t24=*((C_word*)lf[6]+1);
((C_proc4)C_retrieve_proc(t24))(4,t24,t23,lf[21],lf[566]);}
else{
t24=t23;
f_25051(2,t24,C_SCHEME_UNDEFINED);}}
else{
t23=(C_word)C_eqp(t20,lf[561]);
if(C_truep(t23)){
t24=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_25086,a[2]=t2,a[3]=t19,a[4]=t16,a[5]=t18,a[6]=t14,a[7]=t8,tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)t14)[1])){
C_trace("error");
t25=*((C_word*)lf[6]+1);
((C_proc4)C_retrieve_proc(t25))(4,t25,t24,lf[21],lf[561]);}
else{
t25=t24;
f_25086(2,t25,C_SCHEME_UNDEFINED);}}
else{
t24=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_25115,a[2]=t19,a[3]=t10,a[4]=t4,a[5]=t16,tmp=(C_word)a,a+=6,tmp);
if(C_truep(((C_word*)t18)[1])){
C_trace("error");
t25=*((C_word*)lf[6]+1);
((C_proc4)C_retrieve_proc(t25))(4,t25,t24,lf[12],t2);}
else{
t25=t24;
f_25115(2,t25,C_SCHEME_UNDEFINED);}}}}}}

/* k25113 in mm:make-prog in k21827 in k18307 in k18304 in k18301 in k18298 in k17861 in k17858 in k17855 in k17852 in k17849 in k17327 in k17324 in k16801 in k16798 in k16795 in k16792 in k16789 in k16786 in k16783 in k16780 in k16777 in k16774 in k16771 in k16768 in k16765 in k16762 in k16759 in k16756 in k16753 in k16750 in k16747 in k16744 in k16741 in k16602 in k16599 in k16596 in k16593 in k16537 in k16534 in k16531 in k16528 in k16525 in k16522 in k16519 in k16516 in k15271 in k15202 in k15009 in k15006 in k14901 in k14850 in k7607 in k7604 in k5838 in k5545 in k5542 in k5538 in k5247 in k5244 in k5241 in k5238 */
static void C_ccall f_25115(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_25115,2,t0,t1);}
t2=(C_word)C_i_car(((C_word*)((C_word*)t0)[5])[1]);
t3=C_mutate(((C_word *)((C_word*)t0)[4])+1,t2);
t4=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_25122,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[5],a[4]=((C_word*)t0)[3],tmp=(C_word)a,a+=5,tmp);
t5=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_25130,a[2]=((C_word*)t0)[4],a[3]=t4,tmp=(C_word)a,a+=4,tmp);
C_trace("keyword?");
t6=C_retrieve(lf[15]);
((C_proc3)C_retrieve_proc(t6))(3,t6,t5,((C_word*)((C_word*)t0)[4])[1]);}

/* k25128 in k25113 in mm:make-prog in k21827 in k18307 in k18304 in k18301 in k18298 in k17861 in k17858 in k17855 in k17852 in k17849 in k17327 in k17324 in k16801 in k16798 in k16795 in k16792 in k16789 in k16786 in k16783 in k16780 in k16777 in k16774 in k16771 in k16768 in k16765 in k16762 in k16759 in k16756 in k16753 in k16750 in k16747 in k16744 in k16741 in k16602 in k16599 in k16596 in k16593 in k16537 in k16534 in k16531 in k16528 in k16525 in k16522 in k16519 in k16516 in k15271 in k15202 in k15009 in k15006 in k14901 in k14850 in k7607 in k7604 in k5838 in k5545 in k5542 in k5538 in k5247 in k5244 in k5241 in k5238 */
static void C_ccall f_25130(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
if(C_truep(t1)){
C_trace("error");
t2=*((C_word*)lf[6]+1);
((C_proc4)C_retrieve_proc(t2))(4,t2,((C_word*)t0)[3],lf[16],((C_word*)((C_word*)t0)[2])[1]);}
else{
t2=((C_word*)t0)[3];
f_25122(2,t2,C_SCHEME_UNDEFINED);}}

/* k25120 in k25113 in mm:make-prog in k21827 in k18307 in k18304 in k18301 in k18298 in k17861 in k17858 in k17855 in k17852 in k17849 in k17327 in k17324 in k16801 in k16798 in k16795 in k16792 in k16789 in k16786 in k16783 in k16780 in k16777 in k16774 in k16771 in k16768 in k16765 in k16762 in k16759 in k16756 in k16753 in k16750 in k16747 in k16744 in k16741 in k16602 in k16599 in k16596 in k16593 in k16537 in k16534 in k16531 in k16528 in k16525 in k16522 in k16519 in k16516 in k15271 in k15202 in k15009 in k15006 in k14901 in k14850 in k7607 in k7604 in k5838 in k5545 in k5542 in k5538 in k5247 in k5244 in k5241 in k5238 */
static void C_ccall f_25122(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word *a;
t2=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[3])[1]);
t4=C_mutate(((C_word *)((C_word*)t0)[3])+1,t3);
t5=((C_word*)t0)[2];
f_24691(t5,t4);}

/* k25084 in mm:make-prog in k21827 in k18307 in k18304 in k18301 in k18298 in k17861 in k17858 in k17855 in k17852 in k17849 in k17327 in k17324 in k16801 in k16798 in k16795 in k16792 in k16789 in k16786 in k16783 in k16780 in k16777 in k16774 in k16771 in k16768 in k16765 in k16762 in k16759 in k16756 in k16753 in k16750 in k16747 in k16744 in k16741 in k16602 in k16599 in k16596 in k16593 in k16537 in k16534 in k16531 in k16528 in k16525 in k16522 in k16519 in k16516 in k15271 in k15202 in k15009 in k15006 in k14901 in k14850 in k7607 in k7604 in k5838 in k5545 in k5542 in k5538 in k5247 in k5244 in k5241 in k5238 */
static void C_ccall f_25086(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_25086,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_25090,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("error");
t4=*((C_word*)lf[6]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[23],((C_word*)t0)[2]);}
else{
t4=t2;
f_25090(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k25088 in k25084 in mm:make-prog in k21827 in k18307 in k18304 in k18301 in k18298 in k17861 in k17858 in k17855 in k17852 in k17849 in k17327 in k17324 in k16801 in k16798 in k16795 in k16792 in k16789 in k16786 in k16783 in k16780 in k16777 in k16774 in k16771 in k16768 in k16765 in k16762 in k16759 in k16756 in k16753 in k16750 in k16747 in k16744 in k16741 in k16602 in k16599 in k16596 in k16593 in k16537 in k16534 in k16531 in k16528 in k16525 in k16522 in k16519 in k16516 in k15271 in k15202 in k15009 in k15006 in k14901 in k14850 in k7607 in k7604 in k5838 in k5545 in k5542 in k5538 in k5247 in k5244 in k5241 in k5238 */
static void C_ccall f_25090(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_24691(t7,t6);}

/* k25049 in mm:make-prog in k21827 in k18307 in k18304 in k18301 in k18298 in k17861 in k17858 in k17855 in k17852 in k17849 in k17327 in k17324 in k16801 in k16798 in k16795 in k16792 in k16789 in k16786 in k16783 in k16780 in k16777 in k16774 in k16771 in k16768 in k16765 in k16762 in k16759 in k16756 in k16753 in k16750 in k16747 in k16744 in k16741 in k16602 in k16599 in k16596 in k16593 in k16537 in k16534 in k16531 in k16528 in k16525 in k16522 in k16519 in k16516 in k15271 in k15202 in k15009 in k15006 in k14901 in k14850 in k7607 in k7604 in k5838 in k5545 in k5542 in k5538 in k5247 in k5244 in k5241 in k5238 */
static void C_ccall f_25051(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_25051,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_25055,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("error");
t4=*((C_word*)lf[6]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[23],((C_word*)t0)[2]);}
else{
t4=t2;
f_25055(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k25053 in k25049 in mm:make-prog in k21827 in k18307 in k18304 in k18301 in k18298 in k17861 in k17858 in k17855 in k17852 in k17849 in k17327 in k17324 in k16801 in k16798 in k16795 in k16792 in k16789 in k16786 in k16783 in k16780 in k16777 in k16774 in k16771 in k16768 in k16765 in k16762 in k16759 in k16756 in k16753 in k16750 in k16747 in k16744 in k16741 in k16602 in k16599 in k16596 in k16593 in k16537 in k16534 in k16531 in k16528 in k16525 in k16522 in k16519 in k16516 in k15271 in k15202 in k15009 in k15006 in k14901 in k14850 in k7607 in k7604 in k5838 in k5545 in k5542 in k5538 in k5247 in k5244 in k5241 in k5238 */
static void C_ccall f_25055(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_24691(t7,t6);}

/* k25014 in mm:make-prog in k21827 in k18307 in k18304 in k18301 in k18298 in k17861 in k17858 in k17855 in k17852 in k17849 in k17327 in k17324 in k16801 in k16798 in k16795 in k16792 in k16789 in k16786 in k16783 in k16780 in k16777 in k16774 in k16771 in k16768 in k16765 in k16762 in k16759 in k16756 in k16753 in k16750 in k16747 in k16744 in k16741 in k16602 in k16599 in k16596 in k16593 in k16537 in k16534 in k16531 in k16528 in k16525 in k16522 in k16519 in k16516 in k15271 in k15202 in k15009 in k15006 in k14901 in k14850 in k7607 in k7604 in k5838 in k5545 in k5542 in k5538 in k5247 in k5244 in k5241 in k5238 */
static void C_ccall f_25016(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_25016,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_25020,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("error");
t4=*((C_word*)lf[6]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[23],((C_word*)t0)[2]);}
else{
t4=t2;
f_25020(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k25018 in k25014 in mm:make-prog in k21827 in k18307 in k18304 in k18301 in k18298 in k17861 in k17858 in k17855 in k17852 in k17849 in k17327 in k17324 in k16801 in k16798 in k16795 in k16792 in k16789 in k16786 in k16783 in k16780 in k16777 in k16774 in k16771 in k16768 in k16765 in k16762 in k16759 in k16756 in k16753 in k16750 in k16747 in k16744 in k16741 in k16602 in k16599 in k16596 in k16593 in k16537 in k16534 in k16531 in k16528 in k16525 in k16522 in k16519 in k16516 in k15271 in k15202 in k15009 in k15006 in k14901 in k14850 in k7607 in k7604 in k5838 in k5545 in k5542 in k5538 in k5247 in k5244 in k5241 in k5238 */
static void C_ccall f_25020(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_24691(t7,t6);}

/* k24689 in mm:make-prog in k21827 in k18307 in k18304 in k18301 in k18298 in k17861 in k17858 in k17855 in k17852 in k17849 in k17327 in k17324 in k16801 in k16798 in k16795 in k16792 in k16789 in k16786 in k16783 in k16780 in k16777 in k16774 in k16771 in k16768 in k16765 in k16762 in k16759 in k16756 in k16753 in k16750 in k16747 in k16744 in k16741 in k16602 in k16599 in k16596 in k16593 in k16537 in k16534 in k16531 in k16528 in k16525 in k16522 in k16519 in k16516 in k15271 in k15202 in k15009 in k15006 in k14901 in k14850 in k7607 in k7604 in k5838 in k5545 in k5542 in k5538 in k5247 in k5244 in k5241 in k5238 */
static void C_fcall f_24691(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word ab[42],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_24691,NULL,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|11,a[1]=(C_word)f_24694,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],a[7]=((C_word*)t0)[7],a[8]=((C_word*)t0)[8],a[9]=((C_word*)t0)[9],a[10]=((C_word*)t0)[10],a[11]=((C_word*)t0)[11],tmp=(C_word)a,a+=12,tmp);
if(C_truep((C_word)C_i_nullp(((C_word*)((C_word*)t0)[7])[1]))){
t3=t2;
f_24694(t3,C_SCHEME_UNDEFINED);}
else{
t3=(C_word)C_i_car(((C_word*)((C_word*)t0)[7])[1]);
t4=(C_word)C_eqp(t3,lf[558]);
if(C_truep(t4)){
t5=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_24881,a[2]=((C_word*)t0)[6],a[3]=t2,a[4]=((C_word*)t0)[7],a[5]=((C_word*)t0)[4],a[6]=((C_word*)t0)[5],a[7]=((C_word*)t0)[10],tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)((C_word*)t0)[5])[1])){
C_trace("error");
t6=*((C_word*)lf[6]+1);
((C_proc4)C_retrieve_proc(t6))(4,t6,t5,lf[21],lf[558]);}
else{
t6=t5;
f_24881(2,t6,C_SCHEME_UNDEFINED);}}
else{
t5=(C_word)C_eqp(t3,lf[566]);
if(C_truep(t5)){
t6=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_24916,a[2]=((C_word*)t0)[6],a[3]=t2,a[4]=((C_word*)t0)[7],a[5]=((C_word*)t0)[4],a[6]=((C_word*)t0)[3],a[7]=((C_word*)t0)[8],tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)((C_word*)t0)[3])[1])){
C_trace("error");
t7=*((C_word*)lf[6]+1);
((C_proc4)C_retrieve_proc(t7))(4,t7,t6,lf[21],lf[566]);}
else{
t7=t6;
f_24916(2,t7,C_SCHEME_UNDEFINED);}}
else{
t6=(C_word)C_eqp(t3,lf[561]);
if(C_truep(t6)){
t7=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_24951,a[2]=((C_word*)t0)[6],a[3]=t2,a[4]=((C_word*)t0)[7],a[5]=((C_word*)t0)[4],a[6]=((C_word*)t0)[2],a[7]=((C_word*)t0)[9],tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)((C_word*)t0)[2])[1])){
C_trace("error");
t8=*((C_word*)lf[6]+1);
((C_proc4)C_retrieve_proc(t8))(4,t8,t7,lf[21],lf[561]);}
else{
t8=t7;
f_24951(2,t8,C_SCHEME_UNDEFINED);}}
else{
t7=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_24980,a[2]=t2,a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[8],a[5]=((C_word*)t0)[7],tmp=(C_word)a,a+=6,tmp);
if(C_truep(((C_word*)((C_word*)t0)[4])[1])){
C_trace("error");
t8=*((C_word*)lf[6]+1);
((C_proc4)C_retrieve_proc(t8))(4,t8,t7,lf[12],((C_word*)t0)[6]);}
else{
t8=t7;
f_24980(2,t8,C_SCHEME_UNDEFINED);}}}}}}

/* k24978 in k24689 in mm:make-prog in k21827 in k18307 in k18304 in k18301 in k18298 in k17861 in k17858 in k17855 in k17852 in k17849 in k17327 in k17324 in k16801 in k16798 in k16795 in k16792 in k16789 in k16786 in k16783 in k16780 in k16777 in k16774 in k16771 in k16768 in k16765 in k16762 in k16759 in k16756 in k16753 in k16750 in k16747 in k16744 in k16741 in k16602 in k16599 in k16596 in k16593 in k16537 in k16534 in k16531 in k16528 in k16525 in k16522 in k16519 in k16516 in k15271 in k15202 in k15009 in k15006 in k14901 in k14850 in k7607 in k7604 in k5838 in k5545 in k5542 in k5538 in k5247 in k5244 in k5241 in k5238 */
static void C_ccall f_24980(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_24980,2,t0,t1);}
t2=(C_word)C_i_car(((C_word*)((C_word*)t0)[5])[1]);
t3=C_mutate(((C_word *)((C_word*)t0)[4])+1,t2);
t4=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_24987,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[5],a[4]=((C_word*)t0)[3],tmp=(C_word)a,a+=5,tmp);
t5=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_24995,a[2]=((C_word*)t0)[4],a[3]=t4,tmp=(C_word)a,a+=4,tmp);
C_trace("keyword?");
t6=C_retrieve(lf[15]);
((C_proc3)C_retrieve_proc(t6))(3,t6,t5,((C_word*)((C_word*)t0)[4])[1]);}

/* k24993 in k24978 in k24689 in mm:make-prog in k21827 in k18307 in k18304 in k18301 in k18298 in k17861 in k17858 in k17855 in k17852 in k17849 in k17327 in k17324 in k16801 in k16798 in k16795 in k16792 in k16789 in k16786 in k16783 in k16780 in k16777 in k16774 in k16771 in k16768 in k16765 in k16762 in k16759 in k16756 in k16753 in k16750 in k16747 in k16744 in k16741 in k16602 in k16599 in k16596 in k16593 in k16537 in k16534 in k16531 in k16528 in k16525 in k16522 in k16519 in k16516 in k15271 in k15202 in k15009 in k15006 in k14901 in k14850 in k7607 in k7604 in k5838 in k5545 in k5542 in k5538 in k5247 in k5244 in k5241 in k5238 */
static void C_ccall f_24995(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
if(C_truep(t1)){
C_trace("error");
t2=*((C_word*)lf[6]+1);
((C_proc4)C_retrieve_proc(t2))(4,t2,((C_word*)t0)[3],lf[16],((C_word*)((C_word*)t0)[2])[1]);}
else{
t2=((C_word*)t0)[3];
f_24987(2,t2,C_SCHEME_UNDEFINED);}}

/* k24985 in k24978 in k24689 in mm:make-prog in k21827 in k18307 in k18304 in k18301 in k18298 in k17861 in k17858 in k17855 in k17852 in k17849 in k17327 in k17324 in k16801 in k16798 in k16795 in k16792 in k16789 in k16786 in k16783 in k16780 in k16777 in k16774 in k16771 in k16768 in k16765 in k16762 in k16759 in k16756 in k16753 in k16750 in k16747 in k16744 in k16741 in k16602 in k16599 in k16596 in k16593 in k16537 in k16534 in k16531 in k16528 in k16525 in k16522 in k16519 in k16516 in k15271 in k15202 in k15009 in k15006 in k14901 in k14850 in k7607 in k7604 in k5838 in k5545 in k5542 in k5538 in k5247 in k5244 in k5241 in k5238 */
static void C_ccall f_24987(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word *a;
t2=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[3])[1]);
t4=C_mutate(((C_word *)((C_word*)t0)[3])+1,t3);
t5=((C_word*)t0)[2];
f_24694(t5,t4);}

/* k24949 in k24689 in mm:make-prog in k21827 in k18307 in k18304 in k18301 in k18298 in k17861 in k17858 in k17855 in k17852 in k17849 in k17327 in k17324 in k16801 in k16798 in k16795 in k16792 in k16789 in k16786 in k16783 in k16780 in k16777 in k16774 in k16771 in k16768 in k16765 in k16762 in k16759 in k16756 in k16753 in k16750 in k16747 in k16744 in k16741 in k16602 in k16599 in k16596 in k16593 in k16537 in k16534 in k16531 in k16528 in k16525 in k16522 in k16519 in k16516 in k15271 in k15202 in k15009 in k15006 in k14901 in k14850 in k7607 in k7604 in k5838 in k5545 in k5542 in k5538 in k5247 in k5244 in k5241 in k5238 */
static void C_ccall f_24951(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_24951,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_24955,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("error");
t4=*((C_word*)lf[6]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[23],((C_word*)t0)[2]);}
else{
t4=t2;
f_24955(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k24953 in k24949 in k24689 in mm:make-prog in k21827 in k18307 in k18304 in k18301 in k18298 in k17861 in k17858 in k17855 in k17852 in k17849 in k17327 in k17324 in k16801 in k16798 in k16795 in k16792 in k16789 in k16786 in k16783 in k16780 in k16777 in k16774 in k16771 in k16768 in k16765 in k16762 in k16759 in k16756 in k16753 in k16750 in k16747 in k16744 in k16741 in k16602 in k16599 in k16596 in k16593 in k16537 in k16534 in k16531 in k16528 in k16525 in k16522 in k16519 in k16516 in k15271 in k15202 in k15009 in k15006 in k14901 in k14850 in k7607 in k7604 in k5838 in k5545 in k5542 in k5538 in k5247 in k5244 in k5241 in k5238 */
static void C_ccall f_24955(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_24694(t7,t6);}

/* k24914 in k24689 in mm:make-prog in k21827 in k18307 in k18304 in k18301 in k18298 in k17861 in k17858 in k17855 in k17852 in k17849 in k17327 in k17324 in k16801 in k16798 in k16795 in k16792 in k16789 in k16786 in k16783 in k16780 in k16777 in k16774 in k16771 in k16768 in k16765 in k16762 in k16759 in k16756 in k16753 in k16750 in k16747 in k16744 in k16741 in k16602 in k16599 in k16596 in k16593 in k16537 in k16534 in k16531 in k16528 in k16525 in k16522 in k16519 in k16516 in k15271 in k15202 in k15009 in k15006 in k14901 in k14850 in k7607 in k7604 in k5838 in k5545 in k5542 in k5538 in k5247 in k5244 in k5241 in k5238 */
static void C_ccall f_24916(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_24916,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_24920,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("error");
t4=*((C_word*)lf[6]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[23],((C_word*)t0)[2]);}
else{
t4=t2;
f_24920(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k24918 in k24914 in k24689 in mm:make-prog in k21827 in k18307 in k18304 in k18301 in k18298 in k17861 in k17858 in k17855 in k17852 in k17849 in k17327 in k17324 in k16801 in k16798 in k16795 in k16792 in k16789 in k16786 in k16783 in k16780 in k16777 in k16774 in k16771 in k16768 in k16765 in k16762 in k16759 in k16756 in k16753 in k16750 in k16747 in k16744 in k16741 in k16602 in k16599 in k16596 in k16593 in k16537 in k16534 in k16531 in k16528 in k16525 in k16522 in k16519 in k16516 in k15271 in k15202 in k15009 in k15006 in k14901 in k14850 in k7607 in k7604 in k5838 in k5545 in k5542 in k5538 in k5247 in k5244 in k5241 in k5238 */
static void C_ccall f_24920(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_24694(t7,t6);}

/* k24879 in k24689 in mm:make-prog in k21827 in k18307 in k18304 in k18301 in k18298 in k17861 in k17858 in k17855 in k17852 in k17849 in k17327 in k17324 in k16801 in k16798 in k16795 in k16792 in k16789 in k16786 in k16783 in k16780 in k16777 in k16774 in k16771 in k16768 in k16765 in k16762 in k16759 in k16756 in k16753 in k16750 in k16747 in k16744 in k16741 in k16602 in k16599 in k16596 in k16593 in k16537 in k16534 in k16531 in k16528 in k16525 in k16522 in k16519 in k16516 in k15271 in k15202 in k15009 in k15006 in k14901 in k14850 in k7607 in k7604 in k5838 in k5545 in k5542 in k5538 in k5247 in k5244 in k5241 in k5238 */
static void C_ccall f_24881(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_24881,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_24885,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("error");
t4=*((C_word*)lf[6]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[23],((C_word*)t0)[2]);}
else{
t4=t2;
f_24885(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k24883 in k24879 in k24689 in mm:make-prog in k21827 in k18307 in k18304 in k18301 in k18298 in k17861 in k17858 in k17855 in k17852 in k17849 in k17327 in k17324 in k16801 in k16798 in k16795 in k16792 in k16789 in k16786 in k16783 in k16780 in k16777 in k16774 in k16771 in k16768 in k16765 in k16762 in k16759 in k16756 in k16753 in k16750 in k16747 in k16744 in k16741 in k16602 in k16599 in k16596 in k16593 in k16537 in k16534 in k16531 in k16528 in k16525 in k16522 in k16519 in k16516 in k15271 in k15202 in k15009 in k15006 in k14901 in k14850 in k7607 in k7604 in k5838 in k5545 in k5542 in k5538 in k5247 in k5244 in k5241 in k5238 */
static void C_ccall f_24885(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_24694(t7,t6);}

/* k24692 in k24689 in mm:make-prog in k21827 in k18307 in k18304 in k18301 in k18298 in k17861 in k17858 in k17855 in k17852 in k17849 in k17327 in k17324 in k16801 in k16798 in k16795 in k16792 in k16789 in k16786 in k16783 in k16780 in k16777 in k16774 in k16771 in k16768 in k16765 in k16762 in k16759 in k16756 in k16753 in k16750 in k16747 in k16744 in k16741 in k16602 in k16599 in k16596 in k16593 in k16537 in k16534 in k16531 in k16528 in k16525 in k16522 in k16519 in k16516 in k15271 in k15202 in k15009 in k15006 in k14901 in k14850 in k7607 in k7604 in k5838 in k5545 in k5542 in k5538 in k5247 in k5244 in k5241 in k5238 */
static void C_fcall f_24694(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word ab[38],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_24694,NULL,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_24697,a[2]=((C_word*)t0)[6],a[3]=((C_word*)t0)[7],a[4]=((C_word*)t0)[8],a[5]=((C_word*)t0)[9],a[6]=((C_word*)t0)[10],a[7]=((C_word*)t0)[11],tmp=(C_word)a,a+=8,tmp);
if(C_truep((C_word)C_i_nullp(((C_word*)((C_word*)t0)[7])[1]))){
t3=t2;
f_24697(t3,C_SCHEME_UNDEFINED);}
else{
t3=(C_word)C_i_car(((C_word*)((C_word*)t0)[7])[1]);
t4=(C_word)C_eqp(t3,lf[558]);
if(C_truep(t4)){
t5=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_24746,a[2]=((C_word*)t0)[6],a[3]=t2,a[4]=((C_word*)t0)[7],a[5]=((C_word*)t0)[4],a[6]=((C_word*)t0)[5],a[7]=((C_word*)t0)[10],tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)((C_word*)t0)[5])[1])){
C_trace("error");
t6=*((C_word*)lf[6]+1);
((C_proc4)C_retrieve_proc(t6))(4,t6,t5,lf[21],lf[558]);}
else{
t6=t5;
f_24746(2,t6,C_SCHEME_UNDEFINED);}}
else{
t5=(C_word)C_eqp(t3,lf[566]);
if(C_truep(t5)){
t6=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_24781,a[2]=((C_word*)t0)[6],a[3]=t2,a[4]=((C_word*)t0)[7],a[5]=((C_word*)t0)[4],a[6]=((C_word*)t0)[3],a[7]=((C_word*)t0)[8],tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)((C_word*)t0)[3])[1])){
C_trace("error");
t7=*((C_word*)lf[6]+1);
((C_proc4)C_retrieve_proc(t7))(4,t7,t6,lf[21],lf[566]);}
else{
t7=t6;
f_24781(2,t7,C_SCHEME_UNDEFINED);}}
else{
t6=(C_word)C_eqp(t3,lf[561]);
if(C_truep(t6)){
t7=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_24816,a[2]=((C_word*)t0)[6],a[3]=t2,a[4]=((C_word*)t0)[7],a[5]=((C_word*)t0)[4],a[6]=((C_word*)t0)[2],a[7]=((C_word*)t0)[9],tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)((C_word*)t0)[2])[1])){
C_trace("error");
t8=*((C_word*)lf[6]+1);
((C_proc4)C_retrieve_proc(t8))(4,t8,t7,lf[21],lf[561]);}
else{
t8=t7;
f_24816(2,t8,C_SCHEME_UNDEFINED);}}
else{
t7=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_24845,a[2]=t2,a[3]=((C_word*)t0)[2],a[4]=((C_word*)t0)[9],a[5]=((C_word*)t0)[7],tmp=(C_word)a,a+=6,tmp);
if(C_truep(((C_word*)((C_word*)t0)[4])[1])){
C_trace("error");
t8=*((C_word*)lf[6]+1);
((C_proc4)C_retrieve_proc(t8))(4,t8,t7,lf[12],((C_word*)t0)[6]);}
else{
t8=t7;
f_24845(2,t8,C_SCHEME_UNDEFINED);}}}}}}

/* k24843 in k24692 in k24689 in mm:make-prog in k21827 in k18307 in k18304 in k18301 in k18298 in k17861 in k17858 in k17855 in k17852 in k17849 in k17327 in k17324 in k16801 in k16798 in k16795 in k16792 in k16789 in k16786 in k16783 in k16780 in k16777 in k16774 in k16771 in k16768 in k16765 in k16762 in k16759 in k16756 in k16753 in k16750 in k16747 in k16744 in k16741 in k16602 in k16599 in k16596 in k16593 in k16537 in k16534 in k16531 in k16528 in k16525 in k16522 in k16519 in k16516 in k15271 in k15202 in k15009 in k15006 in k14901 in k14850 in k7607 in k7604 in k5838 in k5545 in k5542 in k5538 in k5247 in k5244 in k5241 in k5238 */
static void C_ccall f_24845(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_24845,2,t0,t1);}
t2=(C_word)C_i_car(((C_word*)((C_word*)t0)[5])[1]);
t3=C_mutate(((C_word *)((C_word*)t0)[4])+1,t2);
t4=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_24852,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[5],a[4]=((C_word*)t0)[3],tmp=(C_word)a,a+=5,tmp);
t5=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_24860,a[2]=((C_word*)t0)[4],a[3]=t4,tmp=(C_word)a,a+=4,tmp);
C_trace("keyword?");
t6=C_retrieve(lf[15]);
((C_proc3)C_retrieve_proc(t6))(3,t6,t5,((C_word*)((C_word*)t0)[4])[1]);}

/* k24858 in k24843 in k24692 in k24689 in mm:make-prog in k21827 in k18307 in k18304 in k18301 in k18298 in k17861 in k17858 in k17855 in k17852 in k17849 in k17327 in k17324 in k16801 in k16798 in k16795 in k16792 in k16789 in k16786 in k16783 in k16780 in k16777 in k16774 in k16771 in k16768 in k16765 in k16762 in k16759 in k16756 in k16753 in k16750 in k16747 in k16744 in k16741 in k16602 in k16599 in k16596 in k16593 in k16537 in k16534 in k16531 in k16528 in k16525 in k16522 in k16519 in k16516 in k15271 in k15202 in k15009 in k15006 in k14901 in k14850 in k7607 in k7604 in k5838 in k5545 in k5542 in k5538 in k5247 in k5244 in k5241 in k5238 */
static void C_ccall f_24860(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
if(C_truep(t1)){
C_trace("error");
t2=*((C_word*)lf[6]+1);
((C_proc4)C_retrieve_proc(t2))(4,t2,((C_word*)t0)[3],lf[16],((C_word*)((C_word*)t0)[2])[1]);}
else{
t2=((C_word*)t0)[3];
f_24852(2,t2,C_SCHEME_UNDEFINED);}}

/* k24850 in k24843 in k24692 in k24689 in mm:make-prog in k21827 in k18307 in k18304 in k18301 in k18298 in k17861 in k17858 in k17855 in k17852 in k17849 in k17327 in k17324 in k16801 in k16798 in k16795 in k16792 in k16789 in k16786 in k16783 in k16780 in k16777 in k16774 in k16771 in k16768 in k16765 in k16762 in k16759 in k16756 in k16753 in k16750 in k16747 in k16744 in k16741 in k16602 in k16599 in k16596 in k16593 in k16537 in k16534 in k16531 in k16528 in k16525 in k16522 in k16519 in k16516 in k15271 in k15202 in k15009 in k15006 in k14901 in k14850 in k7607 in k7604 in k5838 in k5545 in k5542 in k5538 in k5247 in k5244 in k5241 in k5238 */
static void C_ccall f_24852(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word *a;
t2=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[3])[1]);
t4=C_mutate(((C_word *)((C_word*)t0)[3])+1,t3);
t5=((C_word*)t0)[2];
f_24697(t5,t4);}

/* k24814 in k24692 in k24689 in mm:make-prog in k21827 in k18307 in k18304 in k18301 in k18298 in k17861 in k17858 in k17855 in k17852 in k17849 in k17327 in k17324 in k16801 in k16798 in k16795 in k16792 in k16789 in k16786 in k16783 in k16780 in k16777 in k16774 in k16771 in k16768 in k16765 in k16762 in k16759 in k16756 in k16753 in k16750 in k16747 in k16744 in k16741 in k16602 in k16599 in k16596 in k16593 in k16537 in k16534 in k16531 in k16528 in k16525 in k16522 in k16519 in k16516 in k15271 in k15202 in k15009 in k15006 in k14901 in k14850 in k7607 in k7604 in k5838 in k5545 in k5542 in k5538 in k5247 in k5244 in k5241 in k5238 */
static void C_ccall f_24816(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_24816,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_24820,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("error");
t4=*((C_word*)lf[6]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[23],((C_word*)t0)[2]);}
else{
t4=t2;
f_24820(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k24818 in k24814 in k24692 in k24689 in mm:make-prog in k21827 in k18307 in k18304 in k18301 in k18298 in k17861 in k17858 in k17855 in k17852 in k17849 in k17327 in k17324 in k16801 in k16798 in k16795 in k16792 in k16789 in k16786 in k16783 in k16780 in k16777 in k16774 in k16771 in k16768 in k16765 in k16762 in k16759 in k16756 in k16753 in k16750 in k16747 in k16744 in k16741 in k16602 in k16599 in k16596 in k16593 in k16537 in k16534 in k16531 in k16528 in k16525 in k16522 in k16519 in k16516 in k15271 in k15202 in k15009 in k15006 in k14901 in k14850 in k7607 in k7604 in k5838 in k5545 in k5542 in k5538 in k5247 in k5244 in k5241 in k5238 */
static void C_ccall f_24820(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_24697(t7,t6);}

/* k24779 in k24692 in k24689 in mm:make-prog in k21827 in k18307 in k18304 in k18301 in k18298 in k17861 in k17858 in k17855 in k17852 in k17849 in k17327 in k17324 in k16801 in k16798 in k16795 in k16792 in k16789 in k16786 in k16783 in k16780 in k16777 in k16774 in k16771 in k16768 in k16765 in k16762 in k16759 in k16756 in k16753 in k16750 in k16747 in k16744 in k16741 in k16602 in k16599 in k16596 in k16593 in k16537 in k16534 in k16531 in k16528 in k16525 in k16522 in k16519 in k16516 in k15271 in k15202 in k15009 in k15006 in k14901 in k14850 in k7607 in k7604 in k5838 in k5545 in k5542 in k5538 in k5247 in k5244 in k5241 in k5238 */
static void C_ccall f_24781(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_24781,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_24785,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("error");
t4=*((C_word*)lf[6]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[23],((C_word*)t0)[2]);}
else{
t4=t2;
f_24785(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k24783 in k24779 in k24692 in k24689 in mm:make-prog in k21827 in k18307 in k18304 in k18301 in k18298 in k17861 in k17858 in k17855 in k17852 in k17849 in k17327 in k17324 in k16801 in k16798 in k16795 in k16792 in k16789 in k16786 in k16783 in k16780 in k16777 in k16774 in k16771 in k16768 in k16765 in k16762 in k16759 in k16756 in k16753 in k16750 in k16747 in k16744 in k16741 in k16602 in k16599 in k16596 in k16593 in k16537 in k16534 in k16531 in k16528 in k16525 in k16522 in k16519 in k16516 in k15271 in k15202 in k15009 in k15006 in k14901 in k14850 in k7607 in k7604 in k5838 in k5545 in k5542 in k5538 in k5247 in k5244 in k5241 in k5238 */
static void C_ccall f_24785(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_24697(t7,t6);}

/* k24744 in k24692 in k24689 in mm:make-prog in k21827 in k18307 in k18304 in k18301 in k18298 in k17861 in k17858 in k17855 in k17852 in k17849 in k17327 in k17324 in k16801 in k16798 in k16795 in k16792 in k16789 in k16786 in k16783 in k16780 in k16777 in k16774 in k16771 in k16768 in k16765 in k16762 in k16759 in k16756 in k16753 in k16750 in k16747 in k16744 in k16741 in k16602 in k16599 in k16596 in k16593 in k16537 in k16534 in k16531 in k16528 in k16525 in k16522 in k16519 in k16516 in k15271 in k15202 in k15009 in k15006 in k14901 in k14850 in k7607 in k7604 in k5838 in k5545 in k5542 in k5538 in k5247 in k5244 in k5241 in k5238 */
static void C_ccall f_24746(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_24746,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_24750,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("error");
t4=*((C_word*)lf[6]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[23],((C_word*)t0)[2]);}
else{
t4=t2;
f_24750(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k24748 in k24744 in k24692 in k24689 in mm:make-prog in k21827 in k18307 in k18304 in k18301 in k18298 in k17861 in k17858 in k17855 in k17852 in k17849 in k17327 in k17324 in k16801 in k16798 in k16795 in k16792 in k16789 in k16786 in k16783 in k16780 in k16777 in k16774 in k16771 in k16768 in k16765 in k16762 in k16759 in k16756 in k16753 in k16750 in k16747 in k16744 in k16741 in k16602 in k16599 in k16596 in k16593 in k16537 in k16534 in k16531 in k16528 in k16525 in k16522 in k16519 in k16516 in k15271 in k15202 in k15009 in k15006 in k14901 in k14850 in k7607 in k7604 in k5838 in k5545 in k5542 in k5538 in k5247 in k5244 in k5241 in k5238 */
static void C_ccall f_24750(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_24697(t7,t6);}

/* k24695 in k24692 in k24689 in mm:make-prog in k21827 in k18307 in k18304 in k18301 in k18298 in k17861 in k17858 in k17855 in k17852 in k17849 in k17327 in k17324 in k16801 in k16798 in k16795 in k16792 in k16789 in k16786 in k16783 in k16780 in k16777 in k16774 in k16771 in k16768 in k16765 in k16762 in k16759 in k16756 in k16753 in k16750 in k16747 in k16744 in k16741 in k16602 in k16599 in k16596 in k16593 in k16537 in k16534 in k16531 in k16528 in k16525 in k16522 in k16519 in k16516 in k15271 in k15202 in k15009 in k15006 in k14901 in k14850 in k7607 in k7604 in k5838 in k5545 in k5542 in k5538 in k5247 in k5244 in k5241 in k5238 */
static void C_fcall f_24697(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[6],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_24697,NULL,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_24700,a[2]=((C_word*)t0)[4],a[3]=((C_word*)t0)[5],a[4]=((C_word*)t0)[6],a[5]=((C_word*)t0)[7],tmp=(C_word)a,a+=6,tmp);
if(C_truep((C_word)C_i_nullp(((C_word*)((C_word*)t0)[3])[1]))){
t3=t2;
f_24700(2,t3,C_SCHEME_UNDEFINED);}
else{
C_trace("error");
t3=*((C_word*)lf[6]+1);
((C_proc4)C_retrieve_proc(t3))(4,t3,t2,lf[7],((C_word*)t0)[2]);}}

/* k24698 in k24695 in k24692 in k24689 in mm:make-prog in k21827 in k18307 in k18304 in k18301 in k18298 in k17861 in k17858 in k17855 in k17852 in k17849 in k17327 in k17324 in k16801 in k16798 in k16795 in k16792 in k16789 in k16786 in k16783 in k16780 in k16777 in k16774 in k16771 in k16768 in k16765 in k16762 in k16759 in k16756 in k16753 in k16750 in k16747 in k16744 in k16741 in k16602 in k16599 in k16596 in k16593 in k16537 in k16534 in k16531 in k16528 in k16525 in k16522 in k16519 in k16516 in k15271 in k15202 in k15009 in k15006 in k14901 in k14850 in k7607 in k7604 in k5838 in k5545 in k5542 in k5538 in k5247 in k5244 in k5241 in k5238 */
static void C_ccall f_24700(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word ab[3],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_24700,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_24704,a[2]=((C_word)li337),tmp=(C_word)a,a+=3,tmp);
((C_proc7)(void*)(*((C_word*)t2+1)))(7,t2,((C_word*)t0)[5],C_fix(12),((C_word*)((C_word*)t0)[4])[1],((C_word*)((C_word*)t0)[3])[1],((C_word*)((C_word*)t0)[2])[1],C_fix(0));}

/* f_24704 in k24698 in k24695 in k24692 in k24689 in mm:make-prog in k21827 in k18307 in k18304 in k18301 in k18298 in k17861 in k17858 in k17855 in k17852 in k17849 in k17327 in k17324 in k16801 in k16798 in k16795 in k16792 in k16789 in k16786 in k16783 in k16780 in k16777 in k16774 in k16771 in k16768 in k16765 in k16762 in k16759 in k16756 in k16753 in k16750 in k16747 in k16744 in k16741 in k16602 in k16599 in k16596 in k16593 in k16537 in k16534 in k16531 in k16528 in k16525 in k16522 in k16519 in k16516 in k15271 in k15202 in k15009 in k15006 in k14901 in k14850 in k7607 in k7604 in k5838 in k5545 in k5542 in k5538 in k5247 in k5244 in k5241 in k5238 */
static void C_ccall f_24704(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4,C_word t5,C_word t6){
C_word tmp;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word ab[5],*a=ab;
if(c!=7) C_bad_argc_2(c,7,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr7,(void*)f_24704,7,t0,t1,t2,t3,t4,t5,t6);}
t7=(C_word)C_a_i_bytevector(&a,1,C_fix(3));
t8=(C_word)C_i_foreign_fixnum_argumentp(t2);
t9=(C_word)C_i_foreign_flonum_argumentp(t3);
t10=(C_word)C_i_foreign_fixnum_argumentp(t4);
t11=(C_word)C_i_foreign_fixnum_argumentp(t5);
t12=(C_word)C_i_foreign_fixnum_argumentp(t6);
t13=t1;
((C_proc2)(void*)(*((C_word*)t13+1)))(2,t13,(C_word)stub4393(t7,t8,t9,t10,t11,t12));}

/* mm:ctrl? in k21827 in k18307 in k18304 in k18301 in k18298 in k17861 in k17858 in k17855 in k17852 in k17849 in k17327 in k17324 in k16801 in k16798 in k16795 in k16792 in k16789 in k16786 in k16783 in k16780 in k16777 in k16774 in k16771 in k16768 in k16765 in k16762 in k16759 in k16756 in k16753 in k16750 in k16747 in k16744 in k16741 in k16602 in k16599 in k16596 in k16593 in k16537 in k16534 in k16531 in k16528 in k16525 in k16522 in k16519 in k16516 in k15271 in k15202 in k15009 in k15006 in k14901 in k14850 in k7607 in k7604 in k5838 in k5545 in k5542 in k5538 in k5247 in k5244 in k5241 in k5238 */
static void C_ccall f_24668(C_word c,C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word ab[3],*a=ab;
if(c!=3) C_bad_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr3,(void*)f_24668,3,t0,t1,t2);}
t3=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_24673,a[2]=((C_word)li335),tmp=(C_word)a,a+=3,tmp);
((C_proc4)(void*)(*((C_word*)t3+1)))(4,t3,t1,t2,C_fix(11));}

/* f_24673 in mm:ctrl? in k21827 in k18307 in k18304 in k18301 in k18298 in k17861 in k17858 in k17855 in k17852 in k17849 in k17327 in k17324 in k16801 in k16798 in k16795 in k16792 in k16789 in k16786 in k16783 in k16780 in k16777 in k16774 in k16771 in k16768 in k16765 in k16762 in k16759 in k16756 in k16753 in k16750 in k16747 in k16744 in k16741 in k16602 in k16599 in k16596 in k16593 in k16537 in k16534 in k16531 in k16528 in k16525 in k16522 in k16519 in k16516 in k15271 in k15202 in k15009 in k15006 in k14901 in k14850 in k7607 in k7604 in k5838 in k5545 in k5542 in k5538 in k5247 in k5244 in k5241 in k5238 */
static void C_ccall f_24673(C_word c,C_word t0,C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word t6;
C_word *a;
if(c!=4) C_bad_argc_2(c,4,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr4,(void*)f_24673,4,t0,t1,t2,t3);}
t4=(C_truep(t2)?(C_word)C_i_foreign_pointer_argumentp(t2):C_SCHEME_FALSE);
t5=(C_word)C_i_foreign_fixnum_argumentp(t3);
t6=t1;
((C_proc2)(void*)(*((C_word*)t6+1)))(2,t6,(C_word)stub4314(C_SCHEME_UNDEFINED,t4,t5));}

/* mm:make-ctrl in k21827 in k18307 in k18304 in k18301 in k18298 in k17861 in k17858 in k17855 in k17852 in k17849 in k17327 in k17324 in k16801 in k16798 in k16795 in k16792 in k16789 in k16786 in k16783 in k16780 in k16777 in k16774 in k16771 in k16768 in k16765 in k16762 in k16759 in k16756 in k16753 in k16750 in k16747 in k16744 in k16741 in k16602 in k16599 in k16596 in k16593 in k16537 in k16534 in k16531 in k16528 in k16525 in k16522 in k16519 in k16516 in k15271 in k15202 in k15009 in k15006 in k14901 in k14850 in k7607 in k7604 in k5838 in k5545 in k5542 in k5538 in k5247 in k5244 in k5241 in k5238 */
static void C_ccall f_23939(C_word c,C_word t0,C_word t1,...){
C_word tmp;
C_word t2;
va_list v;
C_word *a,c2=c;
C_save_rest(t1,c2,2);
C_check_for_interrupt;
if(!C_demand(c*C_SIZEOF_PAIR+72)){
C_save_and_reclaim((void*)tr2r,(void*)f_23939r,2,t0,t1);}
else{
a=C_alloc((c-2)*3);
t2=C_restore_rest(a,C_rest_count(0));
f_23939r(t0,t1,t2);}}

static void C_ccall f_23939r(C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word t14;
C_word t15;
C_word t16;
C_word t17;
C_word t18;
C_word t19;
C_word t20;
C_word t21;
C_word t22;
C_word t23;
C_word t24;
C_word t25;
C_word t26;
C_word t27;
C_word t28;
C_word t29;
C_word t30;
C_word t31;
C_word t32;
C_word t33;
C_word t34;
C_word *a=C_alloc(72);
t3=C_fix(0);
t4=(*a=C_VECTOR_TYPE|1,a[1]=t3,tmp=(C_word)a,a+=2,tmp);
t5=C_fix(0);
t6=(*a=C_VECTOR_TYPE|1,a[1]=t5,tmp=(C_word)a,a+=2,tmp);
t7=C_fix(0);
t8=(*a=C_VECTOR_TYPE|1,a[1]=t7,tmp=(C_word)a,a+=2,tmp);
t9=C_fix(0);
t10=(*a=C_VECTOR_TYPE|1,a[1]=t9,tmp=(C_word)a,a+=2,tmp);
t11=C_SCHEME_FALSE;
t12=(*a=C_VECTOR_TYPE|1,a[1]=t11,tmp=(C_word)a,a+=2,tmp);
t13=C_SCHEME_FALSE;
t14=(*a=C_VECTOR_TYPE|1,a[1]=t13,tmp=(C_word)a,a+=2,tmp);
t15=C_SCHEME_FALSE;
t16=(*a=C_VECTOR_TYPE|1,a[1]=t15,tmp=(C_word)a,a+=2,tmp);
t17=C_SCHEME_FALSE;
t18=(*a=C_VECTOR_TYPE|1,a[1]=t17,tmp=(C_word)a,a+=2,tmp);
t19=t2;
t20=(*a=C_VECTOR_TYPE|1,a[1]=t19,tmp=(C_word)a,a+=2,tmp);
t21=C_SCHEME_FALSE;
t22=(*a=C_VECTOR_TYPE|1,a[1]=t21,tmp=(C_word)a,a+=2,tmp);
t23=(*a=C_CLOSURE_TYPE|13,a[1]=(C_word)f_23943,a[2]=t18,a[3]=t16,a[4]=t14,a[5]=t22,a[6]=t12,a[7]=t2,a[8]=t20,a[9]=t8,a[10]=t6,a[11]=t10,a[12]=t4,a[13]=t1,tmp=(C_word)a,a+=14,tmp);
if(C_truep((C_word)C_i_nullp(((C_word*)t20)[1]))){
t24=t23;
f_23943(t24,C_SCHEME_UNDEFINED);}
else{
t24=(C_word)C_i_car(((C_word*)t20)[1]);
t25=(C_word)C_eqp(t24,lf[558]);
if(C_truep(t25)){
t26=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_24511,a[2]=t2,a[3]=t23,a[4]=t20,a[5]=t22,a[6]=t12,a[7]=t4,tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)t12)[1])){
C_trace("error");
t27=*((C_word*)lf[6]+1);
((C_proc4)C_retrieve_proc(t27))(4,t27,t26,lf[21],lf[558]);}
else{
t27=t26;
f_24511(2,t27,C_SCHEME_UNDEFINED);}}
else{
t26=(C_word)C_eqp(t24,lf[569]);
if(C_truep(t26)){
t27=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_24546,a[2]=t2,a[3]=t23,a[4]=t20,a[5]=t22,a[6]=t14,a[7]=t6,tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)t14)[1])){
C_trace("error");
t28=*((C_word*)lf[6]+1);
((C_proc4)C_retrieve_proc(t28))(4,t28,t27,lf[21],lf[569]);}
else{
t28=t27;
f_24546(2,t28,C_SCHEME_UNDEFINED);}}
else{
t27=(C_word)C_eqp(t24,lf[566]);
if(C_truep(t27)){
t28=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_24581,a[2]=t2,a[3]=t23,a[4]=t20,a[5]=t22,a[6]=t16,a[7]=t8,tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)t16)[1])){
C_trace("error");
t29=*((C_word*)lf[6]+1);
((C_proc4)C_retrieve_proc(t29))(4,t29,t28,lf[21],lf[566]);}
else{
t29=t28;
f_24581(2,t29,C_SCHEME_UNDEFINED);}}
else{
t28=(C_word)C_eqp(t24,lf[561]);
if(C_truep(t28)){
t29=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_24616,a[2]=t2,a[3]=t23,a[4]=t20,a[5]=t22,a[6]=t18,a[7]=t10,tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)t18)[1])){
C_trace("error");
t30=*((C_word*)lf[6]+1);
((C_proc4)C_retrieve_proc(t30))(4,t30,t29,lf[21],lf[561]);}
else{
t30=t29;
f_24616(2,t30,C_SCHEME_UNDEFINED);}}
else{
t29=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_24645,a[2]=t23,a[3]=t12,a[4]=t4,a[5]=t20,tmp=(C_word)a,a+=6,tmp);
if(C_truep(((C_word*)t22)[1])){
C_trace("error");
t30=*((C_word*)lf[6]+1);
((C_proc4)C_retrieve_proc(t30))(4,t30,t29,lf[12],t2);}
else{
t30=t29;
f_24645(2,t30,C_SCHEME_UNDEFINED);}}}}}}}

/* k24643 in mm:make-ctrl in k21827 in k18307 in k18304 in k18301 in k18298 in k17861 in k17858 in k17855 in k17852 in k17849 in k17327 in k17324 in k16801 in k16798 in k16795 in k16792 in k16789 in k16786 in k16783 in k16780 in k16777 in k16774 in k16771 in k16768 in k16765 in k16762 in k16759 in k16756 in k16753 in k16750 in k16747 in k16744 in k16741 in k16602 in k16599 in k16596 in k16593 in k16537 in k16534 in k16531 in k16528 in k16525 in k16522 in k16519 in k16516 in k15271 in k15202 in k15009 in k15006 in k14901 in k14850 in k7607 in k7604 in k5838 in k5545 in k5542 in k5538 in k5247 in k5244 in k5241 in k5238 */
static void C_ccall f_24645(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_24645,2,t0,t1);}
t2=(C_word)C_i_car(((C_word*)((C_word*)t0)[5])[1]);
t3=C_mutate(((C_word *)((C_word*)t0)[4])+1,t2);
t4=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_24652,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[5],a[4]=((C_word*)t0)[3],tmp=(C_word)a,a+=5,tmp);
t5=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_24660,a[2]=((C_word*)t0)[4],a[3]=t4,tmp=(C_word)a,a+=4,tmp);
C_trace("keyword?");
t6=C_retrieve(lf[15]);
((C_proc3)C_retrieve_proc(t6))(3,t6,t5,((C_word*)((C_word*)t0)[4])[1]);}

/* k24658 in k24643 in mm:make-ctrl in k21827 in k18307 in k18304 in k18301 in k18298 in k17861 in k17858 in k17855 in k17852 in k17849 in k17327 in k17324 in k16801 in k16798 in k16795 in k16792 in k16789 in k16786 in k16783 in k16780 in k16777 in k16774 in k16771 in k16768 in k16765 in k16762 in k16759 in k16756 in k16753 in k16750 in k16747 in k16744 in k16741 in k16602 in k16599 in k16596 in k16593 in k16537 in k16534 in k16531 in k16528 in k16525 in k16522 in k16519 in k16516 in k15271 in k15202 in k15009 in k15006 in k14901 in k14850 in k7607 in k7604 in k5838 in k5545 in k5542 in k5538 in k5247 in k5244 in k5241 in k5238 */
static void C_ccall f_24660(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
if(C_truep(t1)){
C_trace("error");
t2=*((C_word*)lf[6]+1);
((C_proc4)C_retrieve_proc(t2))(4,t2,((C_word*)t0)[3],lf[16],((C_word*)((C_word*)t0)[2])[1]);}
else{
t2=((C_word*)t0)[3];
f_24652(2,t2,C_SCHEME_UNDEFINED);}}

/* k24650 in k24643 in mm:make-ctrl in k21827 in k18307 in k18304 in k18301 in k18298 in k17861 in k17858 in k17855 in k17852 in k17849 in k17327 in k17324 in k16801 in k16798 in k16795 in k16792 in k16789 in k16786 in k16783 in k16780 in k16777 in k16774 in k16771 in k16768 in k16765 in k16762 in k16759 in k16756 in k16753 in k16750 in k16747 in k16744 in k16741 in k16602 in k16599 in k16596 in k16593 in k16537 in k16534 in k16531 in k16528 in k16525 in k16522 in k16519 in k16516 in k15271 in k15202 in k15009 in k15006 in k14901 in k14850 in k7607 in k7604 in k5838 in k5545 in k5542 in k5538 in k5247 in k5244 in k5241 in k5238 */
static void C_ccall f_24652(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word *a;
t2=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[3])[1]);
t4=C_mutate(((C_word *)((C_word*)t0)[3])+1,t3);
t5=((C_word*)t0)[2];
f_23943(t5,t4);}

/* k24614 in mm:make-ctrl in k21827 in k18307 in k18304 in k18301 in k18298 in k17861 in k17858 in k17855 in k17852 in k17849 in k17327 in k17324 in k16801 in k16798 in k16795 in k16792 in k16789 in k16786 in k16783 in k16780 in k16777 in k16774 in k16771 in k16768 in k16765 in k16762 in k16759 in k16756 in k16753 in k16750 in k16747 in k16744 in k16741 in k16602 in k16599 in k16596 in k16593 in k16537 in k16534 in k16531 in k16528 in k16525 in k16522 in k16519 in k16516 in k15271 in k15202 in k15009 in k15006 in k14901 in k14850 in k7607 in k7604 in k5838 in k5545 in k5542 in k5538 in k5247 in k5244 in k5241 in k5238 */
static void C_ccall f_24616(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_24616,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_24620,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("error");
t4=*((C_word*)lf[6]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[23],((C_word*)t0)[2]);}
else{
t4=t2;
f_24620(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k24618 in k24614 in mm:make-ctrl in k21827 in k18307 in k18304 in k18301 in k18298 in k17861 in k17858 in k17855 in k17852 in k17849 in k17327 in k17324 in k16801 in k16798 in k16795 in k16792 in k16789 in k16786 in k16783 in k16780 in k16777 in k16774 in k16771 in k16768 in k16765 in k16762 in k16759 in k16756 in k16753 in k16750 in k16747 in k16744 in k16741 in k16602 in k16599 in k16596 in k16593 in k16537 in k16534 in k16531 in k16528 in k16525 in k16522 in k16519 in k16516 in k15271 in k15202 in k15009 in k15006 in k14901 in k14850 in k7607 in k7604 in k5838 in k5545 in k5542 in k5538 in k5247 in k5244 in k5241 in k5238 */
static void C_ccall f_24620(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_23943(t7,t6);}

/* k24579 in mm:make-ctrl in k21827 in k18307 in k18304 in k18301 in k18298 in k17861 in k17858 in k17855 in k17852 in k17849 in k17327 in k17324 in k16801 in k16798 in k16795 in k16792 in k16789 in k16786 in k16783 in k16780 in k16777 in k16774 in k16771 in k16768 in k16765 in k16762 in k16759 in k16756 in k16753 in k16750 in k16747 in k16744 in k16741 in k16602 in k16599 in k16596 in k16593 in k16537 in k16534 in k16531 in k16528 in k16525 in k16522 in k16519 in k16516 in k15271 in k15202 in k15009 in k15006 in k14901 in k14850 in k7607 in k7604 in k5838 in k5545 in k5542 in k5538 in k5247 in k5244 in k5241 in k5238 */
static void C_ccall f_24581(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_24581,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_24585,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("error");
t4=*((C_word*)lf[6]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[23],((C_word*)t0)[2]);}
else{
t4=t2;
f_24585(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k24583 in k24579 in mm:make-ctrl in k21827 in k18307 in k18304 in k18301 in k18298 in k17861 in k17858 in k17855 in k17852 in k17849 in k17327 in k17324 in k16801 in k16798 in k16795 in k16792 in k16789 in k16786 in k16783 in k16780 in k16777 in k16774 in k16771 in k16768 in k16765 in k16762 in k16759 in k16756 in k16753 in k16750 in k16747 in k16744 in k16741 in k16602 in k16599 in k16596 in k16593 in k16537 in k16534 in k16531 in k16528 in k16525 in k16522 in k16519 in k16516 in k15271 in k15202 in k15009 in k15006 in k14901 in k14850 in k7607 in k7604 in k5838 in k5545 in k5542 in k5538 in k5247 in k5244 in k5241 in k5238 */
static void C_ccall f_24585(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_23943(t7,t6);}

/* k24544 in mm:make-ctrl in k21827 in k18307 in k18304 in k18301 in k18298 in k17861 in k17858 in k17855 in k17852 in k17849 in k17327 in k17324 in k16801 in k16798 in k16795 in k16792 in k16789 in k16786 in k16783 in k16780 in k16777 in k16774 in k16771 in k16768 in k16765 in k16762 in k16759 in k16756 in k16753 in k16750 in k16747 in k16744 in k16741 in k16602 in k16599 in k16596 in k16593 in k16537 in k16534 in k16531 in k16528 in k16525 in k16522 in k16519 in k16516 in k15271 in k15202 in k15009 in k15006 in k14901 in k14850 in k7607 in k7604 in k5838 in k5545 in k5542 in k5538 in k5247 in k5244 in k5241 in k5238 */
static void C_ccall f_24546(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_24546,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_24550,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("error");
t4=*((C_word*)lf[6]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[23],((C_word*)t0)[2]);}
else{
t4=t2;
f_24550(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k24548 in k24544 in mm:make-ctrl in k21827 in k18307 in k18304 in k18301 in k18298 in k17861 in k17858 in k17855 in k17852 in k17849 in k17327 in k17324 in k16801 in k16798 in k16795 in k16792 in k16789 in k16786 in k16783 in k16780 in k16777 in k16774 in k16771 in k16768 in k16765 in k16762 in k16759 in k16756 in k16753 in k16750 in k16747 in k16744 in k16741 in k16602 in k16599 in k16596 in k16593 in k16537 in k16534 in k16531 in k16528 in k16525 in k16522 in k16519 in k16516 in k15271 in k15202 in k15009 in k15006 in k14901 in k14850 in k7607 in k7604 in k5838 in k5545 in k5542 in k5538 in k5247 in k5244 in k5241 in k5238 */
static void C_ccall f_24550(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_23943(t7,t6);}

/* k24509 in mm:make-ctrl in k21827 in k18307 in k18304 in k18301 in k18298 in k17861 in k17858 in k17855 in k17852 in k17849 in k17327 in k17324 in k16801 in k16798 in k16795 in k16792 in k16789 in k16786 in k16783 in k16780 in k16777 in k16774 in k16771 in k16768 in k16765 in k16762 in k16759 in k16756 in k16753 in k16750 in k16747 in k16744 in k16741 in k16602 in k16599 in k16596 in k16593 in k16537 in k16534 in k16531 in k16528 in k16525 in k16522 in k16519 in k16516 in k15271 in k15202 in k15009 in k15006 in k14901 in k14850 in k7607 in k7604 in k5838 in k5545 in k5542 in k5538 in k5247 in k5244 in k5241 in k5238 */
static void C_ccall f_24511(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_24511,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_24515,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("error");
t4=*((C_word*)lf[6]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[23],((C_word*)t0)[2]);}
else{
t4=t2;
f_24515(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k24513 in k24509 in mm:make-ctrl in k21827 in k18307 in k18304 in k18301 in k18298 in k17861 in k17858 in k17855 in k17852 in k17849 in k17327 in k17324 in k16801 in k16798 in k16795 in k16792 in k16789 in k16786 in k16783 in k16780 in k16777 in k16774 in k16771 in k16768 in k16765 in k16762 in k16759 in k16756 in k16753 in k16750 in k16747 in k16744 in k16741 in k16602 in k16599 in k16596 in k16593 in k16537 in k16534 in k16531 in k16528 in k16525 in k16522 in k16519 in k16516 in k15271 in k15202 in k15009 in k15006 in k14901 in k14850 in k7607 in k7604 in k5838 in k5545 in k5542 in k5538 in k5247 in k5244 in k5241 in k5238 */
static void C_ccall f_24515(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_23943(t7,t6);}

/* k23941 in mm:make-ctrl in k21827 in k18307 in k18304 in k18301 in k18298 in k17861 in k17858 in k17855 in k17852 in k17849 in k17327 in k17324 in k16801 in k16798 in k16795 in k16792 in k16789 in k16786 in k16783 in k16780 in k16777 in k16774 in k16771 in k16768 in k16765 in k16762 in k16759 in k16756 in k16753 in k16750 in k16747 in k16744 in k16741 in k16602 in k16599 in k16596 in k16593 in k16537 in k16534 in k16531 in k16528 in k16525 in k16522 in k16519 in k16516 in k15271 in k15202 in k15009 in k15006 in k14901 in k14850 in k7607 in k7604 in k5838 in k5545 in k5542 in k5538 in k5247 in k5244 in k5241 in k5238 */
static void C_fcall f_23943(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word ab[52],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_23943,NULL,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|13,a[1]=(C_word)f_23946,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],a[7]=((C_word*)t0)[7],a[8]=((C_word*)t0)[8],a[9]=((C_word*)t0)[9],a[10]=((C_word*)t0)[10],a[11]=((C_word*)t0)[11],a[12]=((C_word*)t0)[12],a[13]=((C_word*)t0)[13],tmp=(C_word)a,a+=14,tmp);
if(C_truep((C_word)C_i_nullp(((C_word*)((C_word*)t0)[8])[1]))){
t3=t2;
f_23946(t3,C_SCHEME_UNDEFINED);}
else{
t3=(C_word)C_i_car(((C_word*)((C_word*)t0)[8])[1]);
t4=(C_word)C_eqp(t3,lf[558]);
if(C_truep(t4)){
t5=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_24341,a[2]=((C_word*)t0)[7],a[3]=t2,a[4]=((C_word*)t0)[8],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],a[7]=((C_word*)t0)[12],tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)((C_word*)t0)[6])[1])){
C_trace("error");
t6=*((C_word*)lf[6]+1);
((C_proc4)C_retrieve_proc(t6))(4,t6,t5,lf[21],lf[558]);}
else{
t6=t5;
f_24341(2,t6,C_SCHEME_UNDEFINED);}}
else{
t5=(C_word)C_eqp(t3,lf[569]);
if(C_truep(t5)){
t6=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_24376,a[2]=((C_word*)t0)[7],a[3]=t2,a[4]=((C_word*)t0)[8],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[4],a[7]=((C_word*)t0)[10],tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)((C_word*)t0)[4])[1])){
C_trace("error");
t7=*((C_word*)lf[6]+1);
((C_proc4)C_retrieve_proc(t7))(4,t7,t6,lf[21],lf[569]);}
else{
t7=t6;
f_24376(2,t7,C_SCHEME_UNDEFINED);}}
else{
t6=(C_word)C_eqp(t3,lf[566]);
if(C_truep(t6)){
t7=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_24411,a[2]=((C_word*)t0)[7],a[3]=t2,a[4]=((C_word*)t0)[8],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[3],a[7]=((C_word*)t0)[9],tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)((C_word*)t0)[3])[1])){
C_trace("error");
t8=*((C_word*)lf[6]+1);
((C_proc4)C_retrieve_proc(t8))(4,t8,t7,lf[21],lf[566]);}
else{
t8=t7;
f_24411(2,t8,C_SCHEME_UNDEFINED);}}
else{
t7=(C_word)C_eqp(t3,lf[561]);
if(C_truep(t7)){
t8=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_24446,a[2]=((C_word*)t0)[7],a[3]=t2,a[4]=((C_word*)t0)[8],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[2],a[7]=((C_word*)t0)[11],tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)((C_word*)t0)[2])[1])){
C_trace("error");
t9=*((C_word*)lf[6]+1);
((C_proc4)C_retrieve_proc(t9))(4,t9,t8,lf[21],lf[561]);}
else{
t9=t8;
f_24446(2,t9,C_SCHEME_UNDEFINED);}}
else{
t8=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_24475,a[2]=t2,a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[10],a[5]=((C_word*)t0)[8],tmp=(C_word)a,a+=6,tmp);
if(C_truep(((C_word*)((C_word*)t0)[5])[1])){
C_trace("error");
t9=*((C_word*)lf[6]+1);
((C_proc4)C_retrieve_proc(t9))(4,t9,t8,lf[12],((C_word*)t0)[7]);}
else{
t9=t8;
f_24475(2,t9,C_SCHEME_UNDEFINED);}}}}}}}

/* k24473 in k23941 in mm:make-ctrl in k21827 in k18307 in k18304 in k18301 in k18298 in k17861 in k17858 in k17855 in k17852 in k17849 in k17327 in k17324 in k16801 in k16798 in k16795 in k16792 in k16789 in k16786 in k16783 in k16780 in k16777 in k16774 in k16771 in k16768 in k16765 in k16762 in k16759 in k16756 in k16753 in k16750 in k16747 in k16744 in k16741 in k16602 in k16599 in k16596 in k16593 in k16537 in k16534 in k16531 in k16528 in k16525 in k16522 in k16519 in k16516 in k15271 in k15202 in k15009 in k15006 in k14901 in k14850 in k7607 in k7604 in k5838 in k5545 in k5542 in k5538 in k5247 in k5244 in k5241 in k5238 */
static void C_ccall f_24475(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_24475,2,t0,t1);}
t2=(C_word)C_i_car(((C_word*)((C_word*)t0)[5])[1]);
t3=C_mutate(((C_word *)((C_word*)t0)[4])+1,t2);
t4=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_24482,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[5],a[4]=((C_word*)t0)[3],tmp=(C_word)a,a+=5,tmp);
t5=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_24490,a[2]=((C_word*)t0)[4],a[3]=t4,tmp=(C_word)a,a+=4,tmp);
C_trace("keyword?");
t6=C_retrieve(lf[15]);
((C_proc3)C_retrieve_proc(t6))(3,t6,t5,((C_word*)((C_word*)t0)[4])[1]);}

/* k24488 in k24473 in k23941 in mm:make-ctrl in k21827 in k18307 in k18304 in k18301 in k18298 in k17861 in k17858 in k17855 in k17852 in k17849 in k17327 in k17324 in k16801 in k16798 in k16795 in k16792 in k16789 in k16786 in k16783 in k16780 in k16777 in k16774 in k16771 in k16768 in k16765 in k16762 in k16759 in k16756 in k16753 in k16750 in k16747 in k16744 in k16741 in k16602 in k16599 in k16596 in k16593 in k16537 in k16534 in k16531 in k16528 in k16525 in k16522 in k16519 in k16516 in k15271 in k15202 in k15009 in k15006 in k14901 in k14850 in k7607 in k7604 in k5838 in k5545 in k5542 in k5538 in k5247 in k5244 in k5241 in k5238 */
static void C_ccall f_24490(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
if(C_truep(t1)){
C_trace("error");
t2=*((C_word*)lf[6]+1);
((C_proc4)C_retrieve_proc(t2))(4,t2,((C_word*)t0)[3],lf[16],((C_word*)((C_word*)t0)[2])[1]);}
else{
t2=((C_word*)t0)[3];
f_24482(2,t2,C_SCHEME_UNDEFINED);}}

/* k24480 in k24473 in k23941 in mm:make-ctrl in k21827 in k18307 in k18304 in k18301 in k18298 in k17861 in k17858 in k17855 in k17852 in k17849 in k17327 in k17324 in k16801 in k16798 in k16795 in k16792 in k16789 in k16786 in k16783 in k16780 in k16777 in k16774 in k16771 in k16768 in k16765 in k16762 in k16759 in k16756 in k16753 in k16750 in k16747 in k16744 in k16741 in k16602 in k16599 in k16596 in k16593 in k16537 in k16534 in k16531 in k16528 in k16525 in k16522 in k16519 in k16516 in k15271 in k15202 in k15009 in k15006 in k14901 in k14850 in k7607 in k7604 in k5838 in k5545 in k5542 in k5538 in k5247 in k5244 in k5241 in k5238 */
static void C_ccall f_24482(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word *a;
t2=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[3])[1]);
t4=C_mutate(((C_word *)((C_word*)t0)[3])+1,t3);
t5=((C_word*)t0)[2];
f_23946(t5,t4);}

/* k24444 in k23941 in mm:make-ctrl in k21827 in k18307 in k18304 in k18301 in k18298 in k17861 in k17858 in k17855 in k17852 in k17849 in k17327 in k17324 in k16801 in k16798 in k16795 in k16792 in k16789 in k16786 in k16783 in k16780 in k16777 in k16774 in k16771 in k16768 in k16765 in k16762 in k16759 in k16756 in k16753 in k16750 in k16747 in k16744 in k16741 in k16602 in k16599 in k16596 in k16593 in k16537 in k16534 in k16531 in k16528 in k16525 in k16522 in k16519 in k16516 in k15271 in k15202 in k15009 in k15006 in k14901 in k14850 in k7607 in k7604 in k5838 in k5545 in k5542 in k5538 in k5247 in k5244 in k5241 in k5238 */
static void C_ccall f_24446(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_24446,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_24450,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("error");
t4=*((C_word*)lf[6]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[23],((C_word*)t0)[2]);}
else{
t4=t2;
f_24450(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k24448 in k24444 in k23941 in mm:make-ctrl in k21827 in k18307 in k18304 in k18301 in k18298 in k17861 in k17858 in k17855 in k17852 in k17849 in k17327 in k17324 in k16801 in k16798 in k16795 in k16792 in k16789 in k16786 in k16783 in k16780 in k16777 in k16774 in k16771 in k16768 in k16765 in k16762 in k16759 in k16756 in k16753 in k16750 in k16747 in k16744 in k16741 in k16602 in k16599 in k16596 in k16593 in k16537 in k16534 in k16531 in k16528 in k16525 in k16522 in k16519 in k16516 in k15271 in k15202 in k15009 in k15006 in k14901 in k14850 in k7607 in k7604 in k5838 in k5545 in k5542 in k5538 in k5247 in k5244 in k5241 in k5238 */
static void C_ccall f_24450(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_23946(t7,t6);}

/* k24409 in k23941 in mm:make-ctrl in k21827 in k18307 in k18304 in k18301 in k18298 in k17861 in k17858 in k17855 in k17852 in k17849 in k17327 in k17324 in k16801 in k16798 in k16795 in k16792 in k16789 in k16786 in k16783 in k16780 in k16777 in k16774 in k16771 in k16768 in k16765 in k16762 in k16759 in k16756 in k16753 in k16750 in k16747 in k16744 in k16741 in k16602 in k16599 in k16596 in k16593 in k16537 in k16534 in k16531 in k16528 in k16525 in k16522 in k16519 in k16516 in k15271 in k15202 in k15009 in k15006 in k14901 in k14850 in k7607 in k7604 in k5838 in k5545 in k5542 in k5538 in k5247 in k5244 in k5241 in k5238 */
static void C_ccall f_24411(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_24411,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_24415,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("error");
t4=*((C_word*)lf[6]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[23],((C_word*)t0)[2]);}
else{
t4=t2;
f_24415(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k24413 in k24409 in k23941 in mm:make-ctrl in k21827 in k18307 in k18304 in k18301 in k18298 in k17861 in k17858 in k17855 in k17852 in k17849 in k17327 in k17324 in k16801 in k16798 in k16795 in k16792 in k16789 in k16786 in k16783 in k16780 in k16777 in k16774 in k16771 in k16768 in k16765 in k16762 in k16759 in k16756 in k16753 in k16750 in k16747 in k16744 in k16741 in k16602 in k16599 in k16596 in k16593 in k16537 in k16534 in k16531 in k16528 in k16525 in k16522 in k16519 in k16516 in k15271 in k15202 in k15009 in k15006 in k14901 in k14850 in k7607 in k7604 in k5838 in k5545 in k5542 in k5538 in k5247 in k5244 in k5241 in k5238 */
static void C_ccall f_24415(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_23946(t7,t6);}

/* k24374 in k23941 in mm:make-ctrl in k21827 in k18307 in k18304 in k18301 in k18298 in k17861 in k17858 in k17855 in k17852 in k17849 in k17327 in k17324 in k16801 in k16798 in k16795 in k16792 in k16789 in k16786 in k16783 in k16780 in k16777 in k16774 in k16771 in k16768 in k16765 in k16762 in k16759 in k16756 in k16753 in k16750 in k16747 in k16744 in k16741 in k16602 in k16599 in k16596 in k16593 in k16537 in k16534 in k16531 in k16528 in k16525 in k16522 in k16519 in k16516 in k15271 in k15202 in k15009 in k15006 in k14901 in k14850 in k7607 in k7604 in k5838 in k5545 in k5542 in k5538 in k5247 in k5244 in k5241 in k5238 */
static void C_ccall f_24376(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_24376,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_24380,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("error");
t4=*((C_word*)lf[6]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[23],((C_word*)t0)[2]);}
else{
t4=t2;
f_24380(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k24378 in k24374 in k23941 in mm:make-ctrl in k21827 in k18307 in k18304 in k18301 in k18298 in k17861 in k17858 in k17855 in k17852 in k17849 in k17327 in k17324 in k16801 in k16798 in k16795 in k16792 in k16789 in k16786 in k16783 in k16780 in k16777 in k16774 in k16771 in k16768 in k16765 in k16762 in k16759 in k16756 in k16753 in k16750 in k16747 in k16744 in k16741 in k16602 in k16599 in k16596 in k16593 in k16537 in k16534 in k16531 in k16528 in k16525 in k16522 in k16519 in k16516 in k15271 in k15202 in k15009 in k15006 in k14901 in k14850 in k7607 in k7604 in k5838 in k5545 in k5542 in k5538 in k5247 in k5244 in k5241 in k5238 */
static void C_ccall f_24380(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_23946(t7,t6);}

/* k24339 in k23941 in mm:make-ctrl in k21827 in k18307 in k18304 in k18301 in k18298 in k17861 in k17858 in k17855 in k17852 in k17849 in k17327 in k17324 in k16801 in k16798 in k16795 in k16792 in k16789 in k16786 in k16783 in k16780 in k16777 in k16774 in k16771 in k16768 in k16765 in k16762 in k16759 in k16756 in k16753 in k16750 in k16747 in k16744 in k16741 in k16602 in k16599 in k16596 in k16593 in k16537 in k16534 in k16531 in k16528 in k16525 in k16522 in k16519 in k16516 in k15271 in k15202 in k15009 in k15006 in k14901 in k14850 in k7607 in k7604 in k5838 in k5545 in k5542 in k5538 in k5247 in k5244 in k5241 in k5238 */
static void C_ccall f_24341(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_24341,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_24345,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("error");
t4=*((C_word*)lf[6]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[23],((C_word*)t0)[2]);}
else{
t4=t2;
f_24345(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k24343 in k24339 in k23941 in mm:make-ctrl in k21827 in k18307 in k18304 in k18301 in k18298 in k17861 in k17858 in k17855 in k17852 in k17849 in k17327 in k17324 in k16801 in k16798 in k16795 in k16792 in k16789 in k16786 in k16783 in k16780 in k16777 in k16774 in k16771 in k16768 in k16765 in k16762 in k16759 in k16756 in k16753 in k16750 in k16747 in k16744 in k16741 in k16602 in k16599 in k16596 in k16593 in k16537 in k16534 in k16531 in k16528 in k16525 in k16522 in k16519 in k16516 in k15271 in k15202 in k15009 in k15006 in k14901 in k14850 in k7607 in k7604 in k5838 in k5545 in k5542 in k5538 in k5247 in k5244 in k5241 in k5238 */
static void C_ccall f_24345(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_23946(t7,t6);}

/* k23944 in k23941 in mm:make-ctrl in k21827 in k18307 in k18304 in k18301 in k18298 in k17861 in k17858 in k17855 in k17852 in k17849 in k17327 in k17324 in k16801 in k16798 in k16795 in k16792 in k16789 in k16786 in k16783 in k16780 in k16777 in k16774 in k16771 in k16768 in k16765 in k16762 in k16759 in k16756 in k16753 in k16750 in k16747 in k16744 in k16741 in k16602 in k16599 in k16596 in k16593 in k16537 in k16534 in k16531 in k16528 in k16525 in k16522 in k16519 in k16516 in k15271 in k15202 in k15009 in k15006 in k14901 in k14850 in k7607 in k7604 in k5838 in k5545 in k5542 in k5538 in k5247 in k5244 in k5241 in k5238 */
static void C_fcall f_23946(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word ab[52],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_23946,NULL,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|13,a[1]=(C_word)f_23949,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],a[7]=((C_word*)t0)[7],a[8]=((C_word*)t0)[8],a[9]=((C_word*)t0)[9],a[10]=((C_word*)t0)[10],a[11]=((C_word*)t0)[11],a[12]=((C_word*)t0)[12],a[13]=((C_word*)t0)[13],tmp=(C_word)a,a+=14,tmp);
if(C_truep((C_word)C_i_nullp(((C_word*)((C_word*)t0)[8])[1]))){
t3=t2;
f_23949(t3,C_SCHEME_UNDEFINED);}
else{
t3=(C_word)C_i_car(((C_word*)((C_word*)t0)[8])[1]);
t4=(C_word)C_eqp(t3,lf[558]);
if(C_truep(t4)){
t5=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_24171,a[2]=((C_word*)t0)[7],a[3]=t2,a[4]=((C_word*)t0)[8],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],a[7]=((C_word*)t0)[12],tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)((C_word*)t0)[6])[1])){
C_trace("error");
t6=*((C_word*)lf[6]+1);
((C_proc4)C_retrieve_proc(t6))(4,t6,t5,lf[21],lf[558]);}
else{
t6=t5;
f_24171(2,t6,C_SCHEME_UNDEFINED);}}
else{
t5=(C_word)C_eqp(t3,lf[569]);
if(C_truep(t5)){
t6=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_24206,a[2]=((C_word*)t0)[7],a[3]=t2,a[4]=((C_word*)t0)[8],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[4],a[7]=((C_word*)t0)[10],tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)((C_word*)t0)[4])[1])){
C_trace("error");
t7=*((C_word*)lf[6]+1);
((C_proc4)C_retrieve_proc(t7))(4,t7,t6,lf[21],lf[569]);}
else{
t7=t6;
f_24206(2,t7,C_SCHEME_UNDEFINED);}}
else{
t6=(C_word)C_eqp(t3,lf[566]);
if(C_truep(t6)){
t7=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_24241,a[2]=((C_word*)t0)[7],a[3]=t2,a[4]=((C_word*)t0)[8],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[3],a[7]=((C_word*)t0)[9],tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)((C_word*)t0)[3])[1])){
C_trace("error");
t8=*((C_word*)lf[6]+1);
((C_proc4)C_retrieve_proc(t8))(4,t8,t7,lf[21],lf[566]);}
else{
t8=t7;
f_24241(2,t8,C_SCHEME_UNDEFINED);}}
else{
t7=(C_word)C_eqp(t3,lf[561]);
if(C_truep(t7)){
t8=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_24276,a[2]=((C_word*)t0)[7],a[3]=t2,a[4]=((C_word*)t0)[8],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[2],a[7]=((C_word*)t0)[11],tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)((C_word*)t0)[2])[1])){
C_trace("error");
t9=*((C_word*)lf[6]+1);
((C_proc4)C_retrieve_proc(t9))(4,t9,t8,lf[21],lf[561]);}
else{
t9=t8;
f_24276(2,t9,C_SCHEME_UNDEFINED);}}
else{
t8=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_24305,a[2]=t2,a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[9],a[5]=((C_word*)t0)[8],tmp=(C_word)a,a+=6,tmp);
if(C_truep(((C_word*)((C_word*)t0)[5])[1])){
C_trace("error");
t9=*((C_word*)lf[6]+1);
((C_proc4)C_retrieve_proc(t9))(4,t9,t8,lf[12],((C_word*)t0)[7]);}
else{
t9=t8;
f_24305(2,t9,C_SCHEME_UNDEFINED);}}}}}}}

/* k24303 in k23944 in k23941 in mm:make-ctrl in k21827 in k18307 in k18304 in k18301 in k18298 in k17861 in k17858 in k17855 in k17852 in k17849 in k17327 in k17324 in k16801 in k16798 in k16795 in k16792 in k16789 in k16786 in k16783 in k16780 in k16777 in k16774 in k16771 in k16768 in k16765 in k16762 in k16759 in k16756 in k16753 in k16750 in k16747 in k16744 in k16741 in k16602 in k16599 in k16596 in k16593 in k16537 in k16534 in k16531 in k16528 in k16525 in k16522 in k16519 in k16516 in k15271 in k15202 in k15009 in k15006 in k14901 in k14850 in k7607 in k7604 in k5838 in k5545 in k5542 in k5538 in k5247 in k5244 in k5241 in k5238 */
static void C_ccall f_24305(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_24305,2,t0,t1);}
t2=(C_word)C_i_car(((C_word*)((C_word*)t0)[5])[1]);
t3=C_mutate(((C_word *)((C_word*)t0)[4])+1,t2);
t4=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_24312,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[5],a[4]=((C_word*)t0)[3],tmp=(C_word)a,a+=5,tmp);
t5=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_24320,a[2]=((C_word*)t0)[4],a[3]=t4,tmp=(C_word)a,a+=4,tmp);
C_trace("keyword?");
t6=C_retrieve(lf[15]);
((C_proc3)C_retrieve_proc(t6))(3,t6,t5,((C_word*)((C_word*)t0)[4])[1]);}

/* k24318 in k24303 in k23944 in k23941 in mm:make-ctrl in k21827 in k18307 in k18304 in k18301 in k18298 in k17861 in k17858 in k17855 in k17852 in k17849 in k17327 in k17324 in k16801 in k16798 in k16795 in k16792 in k16789 in k16786 in k16783 in k16780 in k16777 in k16774 in k16771 in k16768 in k16765 in k16762 in k16759 in k16756 in k16753 in k16750 in k16747 in k16744 in k16741 in k16602 in k16599 in k16596 in k16593 in k16537 in k16534 in k16531 in k16528 in k16525 in k16522 in k16519 in k16516 in k15271 in k15202 in k15009 in k15006 in k14901 in k14850 in k7607 in k7604 in k5838 in k5545 in k5542 in k5538 in k5247 in k5244 in k5241 in k5238 */
static void C_ccall f_24320(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
if(C_truep(t1)){
C_trace("error");
t2=*((C_word*)lf[6]+1);
((C_proc4)C_retrieve_proc(t2))(4,t2,((C_word*)t0)[3],lf[16],((C_word*)((C_word*)t0)[2])[1]);}
else{
t2=((C_word*)t0)[3];
f_24312(2,t2,C_SCHEME_UNDEFINED);}}

/* k24310 in k24303 in k23944 in k23941 in mm:make-ctrl in k21827 in k18307 in k18304 in k18301 in k18298 in k17861 in k17858 in k17855 in k17852 in k17849 in k17327 in k17324 in k16801 in k16798 in k16795 in k16792 in k16789 in k16786 in k16783 in k16780 in k16777 in k16774 in k16771 in k16768 in k16765 in k16762 in k16759 in k16756 in k16753 in k16750 in k16747 in k16744 in k16741 in k16602 in k16599 in k16596 in k16593 in k16537 in k16534 in k16531 in k16528 in k16525 in k16522 in k16519 in k16516 in k15271 in k15202 in k15009 in k15006 in k14901 in k14850 in k7607 in k7604 in k5838 in k5545 in k5542 in k5538 in k5247 in k5244 in k5241 in k5238 */
static void C_ccall f_24312(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word *a;
t2=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[3])[1]);
t4=C_mutate(((C_word *)((C_word*)t0)[3])+1,t3);
t5=((C_word*)t0)[2];
f_23949(t5,t4);}

/* k24274 in k23944 in k23941 in mm:make-ctrl in k21827 in k18307 in k18304 in k18301 in k18298 in k17861 in k17858 in k17855 in k17852 in k17849 in k17327 in k17324 in k16801 in k16798 in k16795 in k16792 in k16789 in k16786 in k16783 in k16780 in k16777 in k16774 in k16771 in k16768 in k16765 in k16762 in k16759 in k16756 in k16753 in k16750 in k16747 in k16744 in k16741 in k16602 in k16599 in k16596 in k16593 in k16537 in k16534 in k16531 in k16528 in k16525 in k16522 in k16519 in k16516 in k15271 in k15202 in k15009 in k15006 in k14901 in k14850 in k7607 in k7604 in k5838 in k5545 in k5542 in k5538 in k5247 in k5244 in k5241 in k5238 */
static void C_ccall f_24276(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_24276,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_24280,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("error");
t4=*((C_word*)lf[6]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[23],((C_word*)t0)[2]);}
else{
t4=t2;
f_24280(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k24278 in k24274 in k23944 in k23941 in mm:make-ctrl in k21827 in k18307 in k18304 in k18301 in k18298 in k17861 in k17858 in k17855 in k17852 in k17849 in k17327 in k17324 in k16801 in k16798 in k16795 in k16792 in k16789 in k16786 in k16783 in k16780 in k16777 in k16774 in k16771 in k16768 in k16765 in k16762 in k16759 in k16756 in k16753 in k16750 in k16747 in k16744 in k16741 in k16602 in k16599 in k16596 in k16593 in k16537 in k16534 in k16531 in k16528 in k16525 in k16522 in k16519 in k16516 in k15271 in k15202 in k15009 in k15006 in k14901 in k14850 in k7607 in k7604 in k5838 in k5545 in k5542 in k5538 in k5247 in k5244 in k5241 in k5238 */
static void C_ccall f_24280(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_23949(t7,t6);}

/* k24239 in k23944 in k23941 in mm:make-ctrl in k21827 in k18307 in k18304 in k18301 in k18298 in k17861 in k17858 in k17855 in k17852 in k17849 in k17327 in k17324 in k16801 in k16798 in k16795 in k16792 in k16789 in k16786 in k16783 in k16780 in k16777 in k16774 in k16771 in k16768 in k16765 in k16762 in k16759 in k16756 in k16753 in k16750 in k16747 in k16744 in k16741 in k16602 in k16599 in k16596 in k16593 in k16537 in k16534 in k16531 in k16528 in k16525 in k16522 in k16519 in k16516 in k15271 in k15202 in k15009 in k15006 in k14901 in k14850 in k7607 in k7604 in k5838 in k5545 in k5542 in k5538 in k5247 in k5244 in k5241 in k5238 */
static void C_ccall f_24241(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_24241,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_24245,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("error");
t4=*((C_word*)lf[6]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[23],((C_word*)t0)[2]);}
else{
t4=t2;
f_24245(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k24243 in k24239 in k23944 in k23941 in mm:make-ctrl in k21827 in k18307 in k18304 in k18301 in k18298 in k17861 in k17858 in k17855 in k17852 in k17849 in k17327 in k17324 in k16801 in k16798 in k16795 in k16792 in k16789 in k16786 in k16783 in k16780 in k16777 in k16774 in k16771 in k16768 in k16765 in k16762 in k16759 in k16756 in k16753 in k16750 in k16747 in k16744 in k16741 in k16602 in k16599 in k16596 in k16593 in k16537 in k16534 in k16531 in k16528 in k16525 in k16522 in k16519 in k16516 in k15271 in k15202 in k15009 in k15006 in k14901 in k14850 in k7607 in k7604 in k5838 in k5545 in k5542 in k5538 in k5247 in k5244 in k5241 in k5238 */
static void C_ccall f_24245(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_23949(t7,t6);}

/* k24204 in k23944 in k23941 in mm:make-ctrl in k21827 in k18307 in k18304 in k18301 in k18298 in k17861 in k17858 in k17855 in k17852 in k17849 in k17327 in k17324 in k16801 in k16798 in k16795 in k16792 in k16789 in k16786 in k16783 in k16780 in k16777 in k16774 in k16771 in k16768 in k16765 in k16762 in k16759 in k16756 in k16753 in k16750 in k16747 in k16744 in k16741 in k16602 in k16599 in k16596 in k16593 in k16537 in k16534 in k16531 in k16528 in k16525 in k16522 in k16519 in k16516 in k15271 in k15202 in k15009 in k15006 in k14901 in k14850 in k7607 in k7604 in k5838 in k5545 in k5542 in k5538 in k5247 in k5244 in k5241 in k5238 */
static void C_ccall f_24206(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_24206,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_24210,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("error");
t4=*((C_word*)lf[6]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[23],((C_word*)t0)[2]);}
else{
t4=t2;
f_24210(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k24208 in k24204 in k23944 in k23941 in mm:make-ctrl in k21827 in k18307 in k18304 in k18301 in k18298 in k17861 in k17858 in k17855 in k17852 in k17849 in k17327 in k17324 in k16801 in k16798 in k16795 in k16792 in k16789 in k16786 in k16783 in k16780 in k16777 in k16774 in k16771 in k16768 in k16765 in k16762 in k16759 in k16756 in k16753 in k16750 in k16747 in k16744 in k16741 in k16602 in k16599 in k16596 in k16593 in k16537 in k16534 in k16531 in k16528 in k16525 in k16522 in k16519 in k16516 in k15271 in k15202 in k15009 in k15006 in k14901 in k14850 in k7607 in k7604 in k5838 in k5545 in k5542 in k5538 in k5247 in k5244 in k5241 in k5238 */
static void C_ccall f_24210(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_23949(t7,t6);}

/* k24169 in k23944 in k23941 in mm:make-ctrl in k21827 in k18307 in k18304 in k18301 in k18298 in k17861 in k17858 in k17855 in k17852 in k17849 in k17327 in k17324 in k16801 in k16798 in k16795 in k16792 in k16789 in k16786 in k16783 in k16780 in k16777 in k16774 in k16771 in k16768 in k16765 in k16762 in k16759 in k16756 in k16753 in k16750 in k16747 in k16744 in k16741 in k16602 in k16599 in k16596 in k16593 in k16537 in k16534 in k16531 in k16528 in k16525 in k16522 in k16519 in k16516 in k15271 in k15202 in k15009 in k15006 in k14901 in k14850 in k7607 in k7604 in k5838 in k5545 in k5542 in k5538 in k5247 in k5244 in k5241 in k5238 */
static void C_ccall f_24171(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_24171,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_24175,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("error");
t4=*((C_word*)lf[6]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[23],((C_word*)t0)[2]);}
else{
t4=t2;
f_24175(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k24173 in k24169 in k23944 in k23941 in mm:make-ctrl in k21827 in k18307 in k18304 in k18301 in k18298 in k17861 in k17858 in k17855 in k17852 in k17849 in k17327 in k17324 in k16801 in k16798 in k16795 in k16792 in k16789 in k16786 in k16783 in k16780 in k16777 in k16774 in k16771 in k16768 in k16765 in k16762 in k16759 in k16756 in k16753 in k16750 in k16747 in k16744 in k16741 in k16602 in k16599 in k16596 in k16593 in k16537 in k16534 in k16531 in k16528 in k16525 in k16522 in k16519 in k16516 in k15271 in k15202 in k15009 in k15006 in k14901 in k14850 in k7607 in k7604 in k5838 in k5545 in k5542 in k5538 in k5247 in k5244 in k5241 in k5238 */
static void C_ccall f_24175(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_23949(t7,t6);}

/* k23947 in k23944 in k23941 in mm:make-ctrl in k21827 in k18307 in k18304 in k18301 in k18298 in k17861 in k17858 in k17855 in k17852 in k17849 in k17327 in k17324 in k16801 in k16798 in k16795 in k16792 in k16789 in k16786 in k16783 in k16780 in k16777 in k16774 in k16771 in k16768 in k16765 in k16762 in k16759 in k16756 in k16753 in k16750 in k16747 in k16744 in k16741 in k16602 in k16599 in k16596 in k16593 in k16537 in k16534 in k16531 in k16528 in k16525 in k16522 in k16519 in k16516 in k15271 in k15202 in k15009 in k15006 in k14901 in k14850 in k7607 in k7604 in k5838 in k5545 in k5542 in k5538 in k5247 in k5244 in k5241 in k5238 */
static void C_fcall f_23949(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word ab[47],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_23949,NULL,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|8,a[1]=(C_word)f_23952,a[2]=((C_word*)t0)[7],a[3]=((C_word*)t0)[8],a[4]=((C_word*)t0)[9],a[5]=((C_word*)t0)[10],a[6]=((C_word*)t0)[11],a[7]=((C_word*)t0)[12],a[8]=((C_word*)t0)[13],tmp=(C_word)a,a+=9,tmp);
if(C_truep((C_word)C_i_nullp(((C_word*)((C_word*)t0)[8])[1]))){
t3=t2;
f_23952(t3,C_SCHEME_UNDEFINED);}
else{
t3=(C_word)C_i_car(((C_word*)((C_word*)t0)[8])[1]);
t4=(C_word)C_eqp(t3,lf[558]);
if(C_truep(t4)){
t5=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_24001,a[2]=((C_word*)t0)[7],a[3]=t2,a[4]=((C_word*)t0)[8],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],a[7]=((C_word*)t0)[12],tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)((C_word*)t0)[6])[1])){
C_trace("error");
t6=*((C_word*)lf[6]+1);
((C_proc4)C_retrieve_proc(t6))(4,t6,t5,lf[21],lf[558]);}
else{
t6=t5;
f_24001(2,t6,C_SCHEME_UNDEFINED);}}
else{
t5=(C_word)C_eqp(t3,lf[569]);
if(C_truep(t5)){
t6=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_24036,a[2]=((C_word*)t0)[7],a[3]=t2,a[4]=((C_word*)t0)[8],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[4],a[7]=((C_word*)t0)[10],tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)((C_word*)t0)[4])[1])){
C_trace("error");
t7=*((C_word*)lf[6]+1);
((C_proc4)C_retrieve_proc(t7))(4,t7,t6,lf[21],lf[569]);}
else{
t7=t6;
f_24036(2,t7,C_SCHEME_UNDEFINED);}}
else{
t6=(C_word)C_eqp(t3,lf[566]);
if(C_truep(t6)){
t7=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_24071,a[2]=((C_word*)t0)[7],a[3]=t2,a[4]=((C_word*)t0)[8],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[3],a[7]=((C_word*)t0)[9],tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)((C_word*)t0)[3])[1])){
C_trace("error");
t8=*((C_word*)lf[6]+1);
((C_proc4)C_retrieve_proc(t8))(4,t8,t7,lf[21],lf[566]);}
else{
t8=t7;
f_24071(2,t8,C_SCHEME_UNDEFINED);}}
else{
t7=(C_word)C_eqp(t3,lf[561]);
if(C_truep(t7)){
t8=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_24106,a[2]=((C_word*)t0)[7],a[3]=t2,a[4]=((C_word*)t0)[8],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[2],a[7]=((C_word*)t0)[11],tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)((C_word*)t0)[2])[1])){
C_trace("error");
t9=*((C_word*)lf[6]+1);
((C_proc4)C_retrieve_proc(t9))(4,t9,t8,lf[21],lf[561]);}
else{
t9=t8;
f_24106(2,t9,C_SCHEME_UNDEFINED);}}
else{
t8=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_24135,a[2]=t2,a[3]=((C_word*)t0)[2],a[4]=((C_word*)t0)[11],a[5]=((C_word*)t0)[8],tmp=(C_word)a,a+=6,tmp);
if(C_truep(((C_word*)((C_word*)t0)[5])[1])){
C_trace("error");
t9=*((C_word*)lf[6]+1);
((C_proc4)C_retrieve_proc(t9))(4,t9,t8,lf[12],((C_word*)t0)[7]);}
else{
t9=t8;
f_24135(2,t9,C_SCHEME_UNDEFINED);}}}}}}}

/* k24133 in k23947 in k23944 in k23941 in mm:make-ctrl in k21827 in k18307 in k18304 in k18301 in k18298 in k17861 in k17858 in k17855 in k17852 in k17849 in k17327 in k17324 in k16801 in k16798 in k16795 in k16792 in k16789 in k16786 in k16783 in k16780 in k16777 in k16774 in k16771 in k16768 in k16765 in k16762 in k16759 in k16756 in k16753 in k16750 in k16747 in k16744 in k16741 in k16602 in k16599 in k16596 in k16593 in k16537 in k16534 in k16531 in k16528 in k16525 in k16522 in k16519 in k16516 in k15271 in k15202 in k15009 in k15006 in k14901 in k14850 in k7607 in k7604 in k5838 in k5545 in k5542 in k5538 in k5247 in k5244 in k5241 in k5238 */
static void C_ccall f_24135(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_24135,2,t0,t1);}
t2=(C_word)C_i_car(((C_word*)((C_word*)t0)[5])[1]);
t3=C_mutate(((C_word *)((C_word*)t0)[4])+1,t2);
t4=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_24142,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[5],a[4]=((C_word*)t0)[3],tmp=(C_word)a,a+=5,tmp);
t5=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_24150,a[2]=((C_word*)t0)[4],a[3]=t4,tmp=(C_word)a,a+=4,tmp);
C_trace("keyword?");
t6=C_retrieve(lf[15]);
((C_proc3)C_retrieve_proc(t6))(3,t6,t5,((C_word*)((C_word*)t0)[4])[1]);}

/* k24148 in k24133 in k23947 in k23944 in k23941 in mm:make-ctrl in k21827 in k18307 in k18304 in k18301 in k18298 in k17861 in k17858 in k17855 in k17852 in k17849 in k17327 in k17324 in k16801 in k16798 in k16795 in k16792 in k16789 in k16786 in k16783 in k16780 in k16777 in k16774 in k16771 in k16768 in k16765 in k16762 in k16759 in k16756 in k16753 in k16750 in k16747 in k16744 in k16741 in k16602 in k16599 in k16596 in k16593 in k16537 in k16534 in k16531 in k16528 in k16525 in k16522 in k16519 in k16516 in k15271 in k15202 in k15009 in k15006 in k14901 in k14850 in k7607 in k7604 in k5838 in k5545 in k5542 in k5538 in k5247 in k5244 in k5241 in k5238 */
static void C_ccall f_24150(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
if(C_truep(t1)){
C_trace("error");
t2=*((C_word*)lf[6]+1);
((C_proc4)C_retrieve_proc(t2))(4,t2,((C_word*)t0)[3],lf[16],((C_word*)((C_word*)t0)[2])[1]);}
else{
t2=((C_word*)t0)[3];
f_24142(2,t2,C_SCHEME_UNDEFINED);}}

/* k24140 in k24133 in k23947 in k23944 in k23941 in mm:make-ctrl in k21827 in k18307 in k18304 in k18301 in k18298 in k17861 in k17858 in k17855 in k17852 in k17849 in k17327 in k17324 in k16801 in k16798 in k16795 in k16792 in k16789 in k16786 in k16783 in k16780 in k16777 in k16774 in k16771 in k16768 in k16765 in k16762 in k16759 in k16756 in k16753 in k16750 in k16747 in k16744 in k16741 in k16602 in k16599 in k16596 in k16593 in k16537 in k16534 in k16531 in k16528 in k16525 in k16522 in k16519 in k16516 in k15271 in k15202 in k15009 in k15006 in k14901 in k14850 in k7607 in k7604 in k5838 in k5545 in k5542 in k5538 in k5247 in k5244 in k5241 in k5238 */
static void C_ccall f_24142(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word *a;
t2=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[3])[1]);
t4=C_mutate(((C_word *)((C_word*)t0)[3])+1,t3);
t5=((C_word*)t0)[2];
f_23952(t5,t4);}

/* k24104 in k23947 in k23944 in k23941 in mm:make-ctrl in k21827 in k18307 in k18304 in k18301 in k18298 in k17861 in k17858 in k17855 in k17852 in k17849 in k17327 in k17324 in k16801 in k16798 in k16795 in k16792 in k16789 in k16786 in k16783 in k16780 in k16777 in k16774 in k16771 in k16768 in k16765 in k16762 in k16759 in k16756 in k16753 in k16750 in k16747 in k16744 in k16741 in k16602 in k16599 in k16596 in k16593 in k16537 in k16534 in k16531 in k16528 in k16525 in k16522 in k16519 in k16516 in k15271 in k15202 in k15009 in k15006 in k14901 in k14850 in k7607 in k7604 in k5838 in k5545 in k5542 in k5538 in k5247 in k5244 in k5241 in k5238 */
static void C_ccall f_24106(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_24106,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_24110,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("error");
t4=*((C_word*)lf[6]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[23],((C_word*)t0)[2]);}
else{
t4=t2;
f_24110(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k24108 in k24104 in k23947 in k23944 in k23941 in mm:make-ctrl in k21827 in k18307 in k18304 in k18301 in k18298 in k17861 in k17858 in k17855 in k17852 in k17849 in k17327 in k17324 in k16801 in k16798 in k16795 in k16792 in k16789 in k16786 in k16783 in k16780 in k16777 in k16774 in k16771 in k16768 in k16765 in k16762 in k16759 in k16756 in k16753 in k16750 in k16747 in k16744 in k16741 in k16602 in k16599 in k16596 in k16593 in k16537 in k16534 in k16531 in k16528 in k16525 in k16522 in k16519 in k16516 in k15271 in k15202 in k15009 in k15006 in k14901 in k14850 in k7607 in k7604 in k5838 in k5545 in k5542 in k5538 in k5247 in k5244 in k5241 in k5238 */
static void C_ccall f_24110(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_23952(t7,t6);}

/* k24069 in k23947 in k23944 in k23941 in mm:make-ctrl in k21827 in k18307 in k18304 in k18301 in k18298 in k17861 in k17858 in k17855 in k17852 in k17849 in k17327 in k17324 in k16801 in k16798 in k16795 in k16792 in k16789 in k16786 in k16783 in k16780 in k16777 in k16774 in k16771 in k16768 in k16765 in k16762 in k16759 in k16756 in k16753 in k16750 in k16747 in k16744 in k16741 in k16602 in k16599 in k16596 in k16593 in k16537 in k16534 in k16531 in k16528 in k16525 in k16522 in k16519 in k16516 in k15271 in k15202 in k15009 in k15006 in k14901 in k14850 in k7607 in k7604 in k5838 in k5545 in k5542 in k5538 in k5247 in k5244 in k5241 in k5238 */
static void C_ccall f_24071(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_24071,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_24075,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("error");
t4=*((C_word*)lf[6]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[23],((C_word*)t0)[2]);}
else{
t4=t2;
f_24075(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k24073 in k24069 in k23947 in k23944 in k23941 in mm:make-ctrl in k21827 in k18307 in k18304 in k18301 in k18298 in k17861 in k17858 in k17855 in k17852 in k17849 in k17327 in k17324 in k16801 in k16798 in k16795 in k16792 in k16789 in k16786 in k16783 in k16780 in k16777 in k16774 in k16771 in k16768 in k16765 in k16762 in k16759 in k16756 in k16753 in k16750 in k16747 in k16744 in k16741 in k16602 in k16599 in k16596 in k16593 in k16537 in k16534 in k16531 in k16528 in k16525 in k16522 in k16519 in k16516 in k15271 in k15202 in k15009 in k15006 in k14901 in k14850 in k7607 in k7604 in k5838 in k5545 in k5542 in k5538 in k5247 in k5244 in k5241 in k5238 */
static void C_ccall f_24075(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_23952(t7,t6);}

/* k24034 in k23947 in k23944 in k23941 in mm:make-ctrl in k21827 in k18307 in k18304 in k18301 in k18298 in k17861 in k17858 in k17855 in k17852 in k17849 in k17327 in k17324 in k16801 in k16798 in k16795 in k16792 in k16789 in k16786 in k16783 in k16780 in k16777 in k16774 in k16771 in k16768 in k16765 in k16762 in k16759 in k16756 in k16753 in k16750 in k16747 in k16744 in k16741 in k16602 in k16599 in k16596 in k16593 in k16537 in k16534 in k16531 in k16528 in k16525 in k16522 in k16519 in k16516 in k15271 in k15202 in k15009 in k15006 in k14901 in k14850 in k7607 in k7604 in k5838 in k5545 in k5542 in k5538 in k5247 in k5244 in k5241 in k5238 */
static void C_ccall f_24036(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_24036,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_24040,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("error");
t4=*((C_word*)lf[6]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[23],((C_word*)t0)[2]);}
else{
t4=t2;
f_24040(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k24038 in k24034 in k23947 in k23944 in k23941 in mm:make-ctrl in k21827 in k18307 in k18304 in k18301 in k18298 in k17861 in k17858 in k17855 in k17852 in k17849 in k17327 in k17324 in k16801 in k16798 in k16795 in k16792 in k16789 in k16786 in k16783 in k16780 in k16777 in k16774 in k16771 in k16768 in k16765 in k16762 in k16759 in k16756 in k16753 in k16750 in k16747 in k16744 in k16741 in k16602 in k16599 in k16596 in k16593 in k16537 in k16534 in k16531 in k16528 in k16525 in k16522 in k16519 in k16516 in k15271 in k15202 in k15009 in k15006 in k14901 in k14850 in k7607 in k7604 in k5838 in k5545 in k5542 in k5538 in k5247 in k5244 in k5241 in k5238 */
static void C_ccall f_24040(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_23952(t7,t6);}

/* k23999 in k23947 in k23944 in k23941 in mm:make-ctrl in k21827 in k18307 in k18304 in k18301 in k18298 in k17861 in k17858 in k17855 in k17852 in k17849 in k17327 in k17324 in k16801 in k16798 in k16795 in k16792 in k16789 in k16786 in k16783 in k16780 in k16777 in k16774 in k16771 in k16768 in k16765 in k16762 in k16759 in k16756 in k16753 in k16750 in k16747 in k16744 in k16741 in k16602 in k16599 in k16596 in k16593 in k16537 in k16534 in k16531 in k16528 in k16525 in k16522 in k16519 in k16516 in k15271 in k15202 in k15009 in k15006 in k14901 in k14850 in k7607 in k7604 in k5838 in k5545 in k5542 in k5538 in k5247 in k5244 in k5241 in k5238 */
static void C_ccall f_24001(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_24001,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_24005,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("error");
t4=*((C_word*)lf[6]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[23],((C_word*)t0)[2]);}
else{
t4=t2;
f_24005(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k24003 in k23999 in k23947 in k23944 in k23941 in mm:make-ctrl in k21827 in k18307 in k18304 in k18301 in k18298 in k17861 in k17858 in k17855 in k17852 in k17849 in k17327 in k17324 in k16801 in k16798 in k16795 in k16792 in k16789 in k16786 in k16783 in k16780 in k16777 in k16774 in k16771 in k16768 in k16765 in k16762 in k16759 in k16756 in k16753 in k16750 in k16747 in k16744 in k16741 in k16602 in k16599 in k16596 in k16593 in k16537 in k16534 in k16531 in k16528 in k16525 in k16522 in k16519 in k16516 in k15271 in k15202 in k15009 in k15006 in k14901 in k14850 in k7607 in k7604 in k5838 in k5545 in k5542 in k5538 in k5247 in k5244 in k5241 in k5238 */
static void C_ccall f_24005(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_23952(t7,t6);}

/* k23950 in k23947 in k23944 in k23941 in mm:make-ctrl in k21827 in k18307 in k18304 in k18301 in k18298 in k17861 in k17858 in k17855 in k17852 in k17849 in k17327 in k17324 in k16801 in k16798 in k16795 in k16792 in k16789 in k16786 in k16783 in k16780 in k16777 in k16774 in k16771 in k16768 in k16765 in k16762 in k16759 in k16756 in k16753 in k16750 in k16747 in k16744 in k16741 in k16602 in k16599 in k16596 in k16593 in k16537 in k16534 in k16531 in k16528 in k16525 in k16522 in k16519 in k16516 in k15271 in k15202 in k15009 in k15006 in k14901 in k14850 in k7607 in k7604 in k5838 in k5545 in k5542 in k5538 in k5247 in k5244 in k5241 in k5238 */
static void C_fcall f_23952(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_23952,NULL,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_23955,a[2]=((C_word*)t0)[4],a[3]=((C_word*)t0)[5],a[4]=((C_word*)t0)[6],a[5]=((C_word*)t0)[7],a[6]=((C_word*)t0)[8],tmp=(C_word)a,a+=7,tmp);
if(C_truep((C_word)C_i_nullp(((C_word*)((C_word*)t0)[3])[1]))){
t3=t2;
f_23955(2,t3,C_SCHEME_UNDEFINED);}
else{
C_trace("error");
t3=*((C_word*)lf[6]+1);
((C_proc4)C_retrieve_proc(t3))(4,t3,t2,lf[7],((C_word*)t0)[2]);}}

/* k23953 in k23950 in k23947 in k23944 in k23941 in mm:make-ctrl in k21827 in k18307 in k18304 in k18301 in k18298 in k17861 in k17858 in k17855 in k17852 in k17849 in k17327 in k17324 in k16801 in k16798 in k16795 in k16792 in k16789 in k16786 in k16783 in k16780 in k16777 in k16774 in k16771 in k16768 in k16765 in k16762 in k16759 in k16756 in k16753 in k16750 in k16747 in k16744 in k16741 in k16602 in k16599 in k16596 in k16593 in k16537 in k16534 in k16531 in k16528 in k16525 in k16522 in k16519 in k16516 in k15271 in k15202 in k15009 in k15006 in k14901 in k14850 in k7607 in k7604 in k5838 in k5545 in k5542 in k5538 in k5247 in k5244 in k5241 in k5238 */
static void C_ccall f_23955(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word ab[3],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_23955,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_23959,a[2]=((C_word)li333),tmp=(C_word)a,a+=3,tmp);
((C_proc7)(void*)(*((C_word*)t2+1)))(7,t2,((C_word*)t0)[6],C_fix(11),((C_word*)((C_word*)t0)[5])[1],((C_word*)((C_word*)t0)[4])[1],((C_word*)((C_word*)t0)[3])[1],((C_word*)((C_word*)t0)[2])[1]);}

/* f_23959 in k23953 in k23950 in k23947 in k23944 in k23941 in mm:make-ctrl in k21827 in k18307 in k18304 in k18301 in k18298 in k17861 in k17858 in k17855 in k17852 in k17849 in k17327 in k17324 in k16801 in k16798 in k16795 in k16792 in k16789 in k16786 in k16783 in k16780 in k16777 in k16774 in k16771 in k16768 in k16765 in k16762 in k16759 in k16756 in k16753 in k16750 in k16747 in k16744 in k16741 in k16602 in k16599 in k16596 in k16593 in k16537 in k16534 in k16531 in k16528 in k16525 in k16522 in k16519 in k16516 in k15271 in k15202 in k15009 in k15006 in k14901 in k14850 in k7607 in k7604 in k5838 in k5545 in k5542 in k5538 in k5247 in k5244 in k5241 in k5238 */
static void C_ccall f_23959(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4,C_word t5,C_word t6){
C_word tmp;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word ab[5],*a=ab;
if(c!=7) C_bad_argc_2(c,7,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr7,(void*)f_23959,7,t0,t1,t2,t3,t4,t5,t6);}
t7=(C_word)C_a_i_bytevector(&a,1,C_fix(3));
t8=(C_word)C_i_foreign_fixnum_argumentp(t2);
t9=(C_word)C_i_foreign_flonum_argumentp(t3);
t10=(C_word)C_i_foreign_fixnum_argumentp(t4);
t11=(C_word)C_i_foreign_fixnum_argumentp(t5);
t12=(C_word)C_i_foreign_fixnum_argumentp(t6);
t13=t1;
((C_proc2)(void*)(*((C_word*)t13+1)))(2,t13,(C_word)stub4298(t7,t8,t9,t10,t11,t12));}

/* mm:touch? in k21827 in k18307 in k18304 in k18301 in k18298 in k17861 in k17858 in k17855 in k17852 in k17849 in k17327 in k17324 in k16801 in k16798 in k16795 in k16792 in k16789 in k16786 in k16783 in k16780 in k16777 in k16774 in k16771 in k16768 in k16765 in k16762 in k16759 in k16756 in k16753 in k16750 in k16747 in k16744 in k16741 in k16602 in k16599 in k16596 in k16593 in k16537 in k16534 in k16531 in k16528 in k16525 in k16522 in k16519 in k16516 in k15271 in k15202 in k15009 in k15006 in k14901 in k14850 in k7607 in k7604 in k5838 in k5545 in k5542 in k5538 in k5247 in k5244 in k5241 in k5238 */
static void C_ccall f_23920(C_word c,C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word ab[3],*a=ab;
if(c!=3) C_bad_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr3,(void*)f_23920,3,t0,t1,t2);}
t3=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_23925,a[2]=((C_word)li331),tmp=(C_word)a,a+=3,tmp);
((C_proc4)(void*)(*((C_word*)t3+1)))(4,t3,t1,t2,C_fix(10));}

/* f_23925 in mm:touch? in k21827 in k18307 in k18304 in k18301 in k18298 in k17861 in k17858 in k17855 in k17852 in k17849 in k17327 in k17324 in k16801 in k16798 in k16795 in k16792 in k16789 in k16786 in k16783 in k16780 in k16777 in k16774 in k16771 in k16768 in k16765 in k16762 in k16759 in k16756 in k16753 in k16750 in k16747 in k16744 in k16741 in k16602 in k16599 in k16596 in k16593 in k16537 in k16534 in k16531 in k16528 in k16525 in k16522 in k16519 in k16516 in k15271 in k15202 in k15009 in k15006 in k14901 in k14850 in k7607 in k7604 in k5838 in k5545 in k5542 in k5538 in k5247 in k5244 in k5241 in k5238 */
static void C_ccall f_23925(C_word c,C_word t0,C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word t6;
C_word *a;
if(c!=4) C_bad_argc_2(c,4,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr4,(void*)f_23925,4,t0,t1,t2,t3);}
t4=(C_truep(t2)?(C_word)C_i_foreign_pointer_argumentp(t2):C_SCHEME_FALSE);
t5=(C_word)C_i_foreign_fixnum_argumentp(t3);
t6=t1;
((C_proc2)(void*)(*((C_word*)t6+1)))(2,t6,(C_word)stub4182(C_SCHEME_UNDEFINED,t4,t5));}

/* mm:make-touch in k21827 in k18307 in k18304 in k18301 in k18298 in k17861 in k17858 in k17855 in k17852 in k17849 in k17327 in k17324 in k16801 in k16798 in k16795 in k16792 in k16789 in k16786 in k16783 in k16780 in k16777 in k16774 in k16771 in k16768 in k16765 in k16762 in k16759 in k16756 in k16753 in k16750 in k16747 in k16744 in k16741 in k16602 in k16599 in k16596 in k16593 in k16537 in k16534 in k16531 in k16528 in k16525 in k16522 in k16519 in k16516 in k15271 in k15202 in k15009 in k15006 in k14901 in k14850 in k7607 in k7604 in k5838 in k5545 in k5542 in k5538 in k5247 in k5244 in k5241 in k5238 */
static void C_ccall f_23191(C_word c,C_word t0,C_word t1,...){
C_word tmp;
C_word t2;
va_list v;
C_word *a,c2=c;
C_save_rest(t1,c2,2);
C_check_for_interrupt;
if(!C_demand(c*C_SIZEOF_PAIR+72)){
C_save_and_reclaim((void*)tr2r,(void*)f_23191r,2,t0,t1);}
else{
a=C_alloc((c-2)*3);
t2=C_restore_rest(a,C_rest_count(0));
f_23191r(t0,t1,t2);}}

static void C_ccall f_23191r(C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word t14;
C_word t15;
C_word t16;
C_word t17;
C_word t18;
C_word t19;
C_word t20;
C_word t21;
C_word t22;
C_word t23;
C_word t24;
C_word t25;
C_word t26;
C_word t27;
C_word t28;
C_word t29;
C_word t30;
C_word t31;
C_word t32;
C_word t33;
C_word t34;
C_word *a=C_alloc(72);
t3=C_fix(0);
t4=(*a=C_VECTOR_TYPE|1,a[1]=t3,tmp=(C_word)a,a+=2,tmp);
t5=C_fix(0);
t6=(*a=C_VECTOR_TYPE|1,a[1]=t5,tmp=(C_word)a,a+=2,tmp);
t7=C_fix(0);
t8=(*a=C_VECTOR_TYPE|1,a[1]=t7,tmp=(C_word)a,a+=2,tmp);
t9=C_fix(0);
t10=(*a=C_VECTOR_TYPE|1,a[1]=t9,tmp=(C_word)a,a+=2,tmp);
t11=C_SCHEME_FALSE;
t12=(*a=C_VECTOR_TYPE|1,a[1]=t11,tmp=(C_word)a,a+=2,tmp);
t13=C_SCHEME_FALSE;
t14=(*a=C_VECTOR_TYPE|1,a[1]=t13,tmp=(C_word)a,a+=2,tmp);
t15=C_SCHEME_FALSE;
t16=(*a=C_VECTOR_TYPE|1,a[1]=t15,tmp=(C_word)a,a+=2,tmp);
t17=C_SCHEME_FALSE;
t18=(*a=C_VECTOR_TYPE|1,a[1]=t17,tmp=(C_word)a,a+=2,tmp);
t19=t2;
t20=(*a=C_VECTOR_TYPE|1,a[1]=t19,tmp=(C_word)a,a+=2,tmp);
t21=C_SCHEME_FALSE;
t22=(*a=C_VECTOR_TYPE|1,a[1]=t21,tmp=(C_word)a,a+=2,tmp);
t23=(*a=C_CLOSURE_TYPE|13,a[1]=(C_word)f_23195,a[2]=t18,a[3]=t16,a[4]=t14,a[5]=t22,a[6]=t12,a[7]=t2,a[8]=t20,a[9]=t8,a[10]=t6,a[11]=t10,a[12]=t4,a[13]=t1,tmp=(C_word)a,a+=14,tmp);
if(C_truep((C_word)C_i_nullp(((C_word*)t20)[1]))){
t24=t23;
f_23195(t24,C_SCHEME_UNDEFINED);}
else{
t24=(C_word)C_i_car(((C_word*)t20)[1]);
t25=(C_word)C_eqp(t24,lf[558]);
if(C_truep(t25)){
t26=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_23763,a[2]=t2,a[3]=t23,a[4]=t20,a[5]=t22,a[6]=t12,a[7]=t4,tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)t12)[1])){
C_trace("error");
t27=*((C_word*)lf[6]+1);
((C_proc4)C_retrieve_proc(t27))(4,t27,t26,lf[21],lf[558]);}
else{
t27=t26;
f_23763(2,t27,C_SCHEME_UNDEFINED);}}
else{
t26=(C_word)C_eqp(t24,lf[559]);
if(C_truep(t26)){
t27=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_23798,a[2]=t2,a[3]=t23,a[4]=t20,a[5]=t22,a[6]=t14,a[7]=t6,tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)t14)[1])){
C_trace("error");
t28=*((C_word*)lf[6]+1);
((C_proc4)C_retrieve_proc(t28))(4,t28,t27,lf[21],lf[559]);}
else{
t28=t27;
f_23798(2,t28,C_SCHEME_UNDEFINED);}}
else{
t27=(C_word)C_eqp(t24,lf[566]);
if(C_truep(t27)){
t28=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_23833,a[2]=t2,a[3]=t23,a[4]=t20,a[5]=t22,a[6]=t16,a[7]=t8,tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)t16)[1])){
C_trace("error");
t29=*((C_word*)lf[6]+1);
((C_proc4)C_retrieve_proc(t29))(4,t29,t28,lf[21],lf[566]);}
else{
t29=t28;
f_23833(2,t29,C_SCHEME_UNDEFINED);}}
else{
t28=(C_word)C_eqp(t24,lf[561]);
if(C_truep(t28)){
t29=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_23868,a[2]=t2,a[3]=t23,a[4]=t20,a[5]=t22,a[6]=t18,a[7]=t10,tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)t18)[1])){
C_trace("error");
t30=*((C_word*)lf[6]+1);
((C_proc4)C_retrieve_proc(t30))(4,t30,t29,lf[21],lf[561]);}
else{
t30=t29;
f_23868(2,t30,C_SCHEME_UNDEFINED);}}
else{
t29=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_23897,a[2]=t23,a[3]=t12,a[4]=t4,a[5]=t20,tmp=(C_word)a,a+=6,tmp);
if(C_truep(((C_word*)t22)[1])){
C_trace("error");
t30=*((C_word*)lf[6]+1);
((C_proc4)C_retrieve_proc(t30))(4,t30,t29,lf[12],t2);}
else{
t30=t29;
f_23897(2,t30,C_SCHEME_UNDEFINED);}}}}}}}

/* k23895 in mm:make-touch in k21827 in k18307 in k18304 in k18301 in k18298 in k17861 in k17858 in k17855 in k17852 in k17849 in k17327 in k17324 in k16801 in k16798 in k16795 in k16792 in k16789 in k16786 in k16783 in k16780 in k16777 in k16774 in k16771 in k16768 in k16765 in k16762 in k16759 in k16756 in k16753 in k16750 in k16747 in k16744 in k16741 in k16602 in k16599 in k16596 in k16593 in k16537 in k16534 in k16531 in k16528 in k16525 in k16522 in k16519 in k16516 in k15271 in k15202 in k15009 in k15006 in k14901 in k14850 in k7607 in k7604 in k5838 in k5545 in k5542 in k5538 in k5247 in k5244 in k5241 in k5238 */
static void C_ccall f_23897(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_23897,2,t0,t1);}
t2=(C_word)C_i_car(((C_word*)((C_word*)t0)[5])[1]);
t3=C_mutate(((C_word *)((C_word*)t0)[4])+1,t2);
t4=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_23904,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[5],a[4]=((C_word*)t0)[3],tmp=(C_word)a,a+=5,tmp);
t5=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_23912,a[2]=((C_word*)t0)[4],a[3]=t4,tmp=(C_word)a,a+=4,tmp);
C_trace("keyword?");
t6=C_retrieve(lf[15]);
((C_proc3)C_retrieve_proc(t6))(3,t6,t5,((C_word*)((C_word*)t0)[4])[1]);}

/* k23910 in k23895 in mm:make-touch in k21827 in k18307 in k18304 in k18301 in k18298 in k17861 in k17858 in k17855 in k17852 in k17849 in k17327 in k17324 in k16801 in k16798 in k16795 in k16792 in k16789 in k16786 in k16783 in k16780 in k16777 in k16774 in k16771 in k16768 in k16765 in k16762 in k16759 in k16756 in k16753 in k16750 in k16747 in k16744 in k16741 in k16602 in k16599 in k16596 in k16593 in k16537 in k16534 in k16531 in k16528 in k16525 in k16522 in k16519 in k16516 in k15271 in k15202 in k15009 in k15006 in k14901 in k14850 in k7607 in k7604 in k5838 in k5545 in k5542 in k5538 in k5247 in k5244 in k5241 in k5238 */
static void C_ccall f_23912(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
if(C_truep(t1)){
C_trace("error");
t2=*((C_word*)lf[6]+1);
((C_proc4)C_retrieve_proc(t2))(4,t2,((C_word*)t0)[3],lf[16],((C_word*)((C_word*)t0)[2])[1]);}
else{
t2=((C_word*)t0)[3];
f_23904(2,t2,C_SCHEME_UNDEFINED);}}

/* k23902 in k23895 in mm:make-touch in k21827 in k18307 in k18304 in k18301 in k18298 in k17861 in k17858 in k17855 in k17852 in k17849 in k17327 in k17324 in k16801 in k16798 in k16795 in k16792 in k16789 in k16786 in k16783 in k16780 in k16777 in k16774 in k16771 in k16768 in k16765 in k16762 in k16759 in k16756 in k16753 in k16750 in k16747 in k16744 in k16741 in k16602 in k16599 in k16596 in k16593 in k16537 in k16534 in k16531 in k16528 in k16525 in k16522 in k16519 in k16516 in k15271 in k15202 in k15009 in k15006 in k14901 in k14850 in k7607 in k7604 in k5838 in k5545 in k5542 in k5538 in k5247 in k5244 in k5241 in k5238 */
static void C_ccall f_23904(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word *a;
t2=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[3])[1]);
t4=C_mutate(((C_word *)((C_word*)t0)[3])+1,t3);
t5=((C_word*)t0)[2];
f_23195(t5,t4);}

/* k23866 in mm:make-touch in k21827 in k18307 in k18304 in k18301 in k18298 in k17861 in k17858 in k17855 in k17852 in k17849 in k17327 in k17324 in k16801 in k16798 in k16795 in k16792 in k16789 in k16786 in k16783 in k16780 in k16777 in k16774 in k16771 in k16768 in k16765 in k16762 in k16759 in k16756 in k16753 in k16750 in k16747 in k16744 in k16741 in k16602 in k16599 in k16596 in k16593 in k16537 in k16534 in k16531 in k16528 in k16525 in k16522 in k16519 in k16516 in k15271 in k15202 in k15009 in k15006 in k14901 in k14850 in k7607 in k7604 in k5838 in k5545 in k5542 in k5538 in k5247 in k5244 in k5241 in k5238 */
static void C_ccall f_23868(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_23868,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_23872,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("error");
t4=*((C_word*)lf[6]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[23],((C_word*)t0)[2]);}
else{
t4=t2;
f_23872(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k23870 in k23866 in mm:make-touch in k21827 in k18307 in k18304 in k18301 in k18298 in k17861 in k17858 in k17855 in k17852 in k17849 in k17327 in k17324 in k16801 in k16798 in k16795 in k16792 in k16789 in k16786 in k16783 in k16780 in k16777 in k16774 in k16771 in k16768 in k16765 in k16762 in k16759 in k16756 in k16753 in k16750 in k16747 in k16744 in k16741 in k16602 in k16599 in k16596 in k16593 in k16537 in k16534 in k16531 in k16528 in k16525 in k16522 in k16519 in k16516 in k15271 in k15202 in k15009 in k15006 in k14901 in k14850 in k7607 in k7604 in k5838 in k5545 in k5542 in k5538 in k5247 in k5244 in k5241 in k5238 */
static void C_ccall f_23872(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_23195(t7,t6);}

/* k23831 in mm:make-touch in k21827 in k18307 in k18304 in k18301 in k18298 in k17861 in k17858 in k17855 in k17852 in k17849 in k17327 in k17324 in k16801 in k16798 in k16795 in k16792 in k16789 in k16786 in k16783 in k16780 in k16777 in k16774 in k16771 in k16768 in k16765 in k16762 in k16759 in k16756 in k16753 in k16750 in k16747 in k16744 in k16741 in k16602 in k16599 in k16596 in k16593 in k16537 in k16534 in k16531 in k16528 in k16525 in k16522 in k16519 in k16516 in k15271 in k15202 in k15009 in k15006 in k14901 in k14850 in k7607 in k7604 in k5838 in k5545 in k5542 in k5538 in k5247 in k5244 in k5241 in k5238 */
static void C_ccall f_23833(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_23833,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_23837,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("error");
t4=*((C_word*)lf[6]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[23],((C_word*)t0)[2]);}
else{
t4=t2;
f_23837(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k23835 in k23831 in mm:make-touch in k21827 in k18307 in k18304 in k18301 in k18298 in k17861 in k17858 in k17855 in k17852 in k17849 in k17327 in k17324 in k16801 in k16798 in k16795 in k16792 in k16789 in k16786 in k16783 in k16780 in k16777 in k16774 in k16771 in k16768 in k16765 in k16762 in k16759 in k16756 in k16753 in k16750 in k16747 in k16744 in k16741 in k16602 in k16599 in k16596 in k16593 in k16537 in k16534 in k16531 in k16528 in k16525 in k16522 in k16519 in k16516 in k15271 in k15202 in k15009 in k15006 in k14901 in k14850 in k7607 in k7604 in k5838 in k5545 in k5542 in k5538 in k5247 in k5244 in k5241 in k5238 */
static void C_ccall f_23837(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_23195(t7,t6);}

/* k23796 in mm:make-touch in k21827 in k18307 in k18304 in k18301 in k18298 in k17861 in k17858 in k17855 in k17852 in k17849 in k17327 in k17324 in k16801 in k16798 in k16795 in k16792 in k16789 in k16786 in k16783 in k16780 in k16777 in k16774 in k16771 in k16768 in k16765 in k16762 in k16759 in k16756 in k16753 in k16750 in k16747 in k16744 in k16741 in k16602 in k16599 in k16596 in k16593 in k16537 in k16534 in k16531 in k16528 in k16525 in k16522 in k16519 in k16516 in k15271 in k15202 in k15009 in k15006 in k14901 in k14850 in k7607 in k7604 in k5838 in k5545 in k5542 in k5538 in k5247 in k5244 in k5241 in k5238 */
static void C_ccall f_23798(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_23798,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_23802,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("error");
t4=*((C_word*)lf[6]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[23],((C_word*)t0)[2]);}
else{
t4=t2;
f_23802(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k23800 in k23796 in mm:make-touch in k21827 in k18307 in k18304 in k18301 in k18298 in k17861 in k17858 in k17855 in k17852 in k17849 in k17327 in k17324 in k16801 in k16798 in k16795 in k16792 in k16789 in k16786 in k16783 in k16780 in k16777 in k16774 in k16771 in k16768 in k16765 in k16762 in k16759 in k16756 in k16753 in k16750 in k16747 in k16744 in k16741 in k16602 in k16599 in k16596 in k16593 in k16537 in k16534 in k16531 in k16528 in k16525 in k16522 in k16519 in k16516 in k15271 in k15202 in k15009 in k15006 in k14901 in k14850 in k7607 in k7604 in k5838 in k5545 in k5542 in k5538 in k5247 in k5244 in k5241 in k5238 */
static void C_ccall f_23802(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_23195(t7,t6);}

/* k23761 in mm:make-touch in k21827 in k18307 in k18304 in k18301 in k18298 in k17861 in k17858 in k17855 in k17852 in k17849 in k17327 in k17324 in k16801 in k16798 in k16795 in k16792 in k16789 in k16786 in k16783 in k16780 in k16777 in k16774 in k16771 in k16768 in k16765 in k16762 in k16759 in k16756 in k16753 in k16750 in k16747 in k16744 in k16741 in k16602 in k16599 in k16596 in k16593 in k16537 in k16534 in k16531 in k16528 in k16525 in k16522 in k16519 in k16516 in k15271 in k15202 in k15009 in k15006 in k14901 in k14850 in k7607 in k7604 in k5838 in k5545 in k5542 in k5538 in k5247 in k5244 in k5241 in k5238 */
static void C_ccall f_23763(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_23763,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_23767,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("error");
t4=*((C_word*)lf[6]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[23],((C_word*)t0)[2]);}
else{
t4=t2;
f_23767(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k23765 in k23761 in mm:make-touch in k21827 in k18307 in k18304 in k18301 in k18298 in k17861 in k17858 in k17855 in k17852 in k17849 in k17327 in k17324 in k16801 in k16798 in k16795 in k16792 in k16789 in k16786 in k16783 in k16780 in k16777 in k16774 in k16771 in k16768 in k16765 in k16762 in k16759 in k16756 in k16753 in k16750 in k16747 in k16744 in k16741 in k16602 in k16599 in k16596 in k16593 in k16537 in k16534 in k16531 in k16528 in k16525 in k16522 in k16519 in k16516 in k15271 in k15202 in k15009 in k15006 in k14901 in k14850 in k7607 in k7604 in k5838 in k5545 in k5542 in k5538 in k5247 in k5244 in k5241 in k5238 */
static void C_ccall f_23767(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_23195(t7,t6);}

/* k23193 in mm:make-touch in k21827 in k18307 in k18304 in k18301 in k18298 in k17861 in k17858 in k17855 in k17852 in k17849 in k17327 in k17324 in k16801 in k16798 in k16795 in k16792 in k16789 in k16786 in k16783 in k16780 in k16777 in k16774 in k16771 in k16768 in k16765 in k16762 in k16759 in k16756 in k16753 in k16750 in k16747 in k16744 in k16741 in k16602 in k16599 in k16596 in k16593 in k16537 in k16534 in k16531 in k16528 in k16525 in k16522 in k16519 in k16516 in k15271 in k15202 in k15009 in k15006 in k14901 in k14850 in k7607 in k7604 in k5838 in k5545 in k5542 in k5538 in k5247 in k5244 in k5241 in k5238 */
static void C_fcall f_23195(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word ab[52],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_23195,NULL,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|13,a[1]=(C_word)f_23198,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],a[7]=((C_word*)t0)[7],a[8]=((C_word*)t0)[8],a[9]=((C_word*)t0)[9],a[10]=((C_word*)t0)[10],a[11]=((C_word*)t0)[11],a[12]=((C_word*)t0)[12],a[13]=((C_word*)t0)[13],tmp=(C_word)a,a+=14,tmp);
if(C_truep((C_word)C_i_nullp(((C_word*)((C_word*)t0)[8])[1]))){
t3=t2;
f_23198(t3,C_SCHEME_UNDEFINED);}
else{
t3=(C_word)C_i_car(((C_word*)((C_word*)t0)[8])[1]);
t4=(C_word)C_eqp(t3,lf[558]);
if(C_truep(t4)){
t5=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_23593,a[2]=((C_word*)t0)[7],a[3]=t2,a[4]=((C_word*)t0)[8],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],a[7]=((C_word*)t0)[12],tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)((C_word*)t0)[6])[1])){
C_trace("error");
t6=*((C_word*)lf[6]+1);
((C_proc4)C_retrieve_proc(t6))(4,t6,t5,lf[21],lf[558]);}
else{
t6=t5;
f_23593(2,t6,C_SCHEME_UNDEFINED);}}
else{
t5=(C_word)C_eqp(t3,lf[559]);
if(C_truep(t5)){
t6=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_23628,a[2]=((C_word*)t0)[7],a[3]=t2,a[4]=((C_word*)t0)[8],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[4],a[7]=((C_word*)t0)[10],tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)((C_word*)t0)[4])[1])){
C_trace("error");
t7=*((C_word*)lf[6]+1);
((C_proc4)C_retrieve_proc(t7))(4,t7,t6,lf[21],lf[559]);}
else{
t7=t6;
f_23628(2,t7,C_SCHEME_UNDEFINED);}}
else{
t6=(C_word)C_eqp(t3,lf[566]);
if(C_truep(t6)){
t7=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_23663,a[2]=((C_word*)t0)[7],a[3]=t2,a[4]=((C_word*)t0)[8],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[3],a[7]=((C_word*)t0)[9],tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)((C_word*)t0)[3])[1])){
C_trace("error");
t8=*((C_word*)lf[6]+1);
((C_proc4)C_retrieve_proc(t8))(4,t8,t7,lf[21],lf[566]);}
else{
t8=t7;
f_23663(2,t8,C_SCHEME_UNDEFINED);}}
else{
t7=(C_word)C_eqp(t3,lf[561]);
if(C_truep(t7)){
t8=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_23698,a[2]=((C_word*)t0)[7],a[3]=t2,a[4]=((C_word*)t0)[8],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[2],a[7]=((C_word*)t0)[11],tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)((C_word*)t0)[2])[1])){
C_trace("error");
t9=*((C_word*)lf[6]+1);
((C_proc4)C_retrieve_proc(t9))(4,t9,t8,lf[21],lf[561]);}
else{
t9=t8;
f_23698(2,t9,C_SCHEME_UNDEFINED);}}
else{
t8=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_23727,a[2]=t2,a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[10],a[5]=((C_word*)t0)[8],tmp=(C_word)a,a+=6,tmp);
if(C_truep(((C_word*)((C_word*)t0)[5])[1])){
C_trace("error");
t9=*((C_word*)lf[6]+1);
((C_proc4)C_retrieve_proc(t9))(4,t9,t8,lf[12],((C_word*)t0)[7]);}
else{
t9=t8;
f_23727(2,t9,C_SCHEME_UNDEFINED);}}}}}}}

/* k23725 in k23193 in mm:make-touch in k21827 in k18307 in k18304 in k18301 in k18298 in k17861 in k17858 in k17855 in k17852 in k17849 in k17327 in k17324 in k16801 in k16798 in k16795 in k16792 in k16789 in k16786 in k16783 in k16780 in k16777 in k16774 in k16771 in k16768 in k16765 in k16762 in k16759 in k16756 in k16753 in k16750 in k16747 in k16744 in k16741 in k16602 in k16599 in k16596 in k16593 in k16537 in k16534 in k16531 in k16528 in k16525 in k16522 in k16519 in k16516 in k15271 in k15202 in k15009 in k15006 in k14901 in k14850 in k7607 in k7604 in k5838 in k5545 in k5542 in k5538 in k5247 in k5244 in k5241 in k5238 */
static void C_ccall f_23727(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_23727,2,t0,t1);}
t2=(C_word)C_i_car(((C_word*)((C_word*)t0)[5])[1]);
t3=C_mutate(((C_word *)((C_word*)t0)[4])+1,t2);
t4=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_23734,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[5],a[4]=((C_word*)t0)[3],tmp=(C_word)a,a+=5,tmp);
t5=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_23742,a[2]=((C_word*)t0)[4],a[3]=t4,tmp=(C_word)a,a+=4,tmp);
C_trace("keyword?");
t6=C_retrieve(lf[15]);
((C_proc3)C_retrieve_proc(t6))(3,t6,t5,((C_word*)((C_word*)t0)[4])[1]);}

/* k23740 in k23725 in k23193 in mm:make-touch in k21827 in k18307 in k18304 in k18301 in k18298 in k17861 in k17858 in k17855 in k17852 in k17849 in k17327 in k17324 in k16801 in k16798 in k16795 in k16792 in k16789 in k16786 in k16783 in k16780 in k16777 in k16774 in k16771 in k16768 in k16765 in k16762 in k16759 in k16756 in k16753 in k16750 in k16747 in k16744 in k16741 in k16602 in k16599 in k16596 in k16593 in k16537 in k16534 in k16531 in k16528 in k16525 in k16522 in k16519 in k16516 in k15271 in k15202 in k15009 in k15006 in k14901 in k14850 in k7607 in k7604 in k5838 in k5545 in k5542 in k5538 in k5247 in k5244 in k5241 in k5238 */
static void C_ccall f_23742(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
if(C_truep(t1)){
C_trace("error");
t2=*((C_word*)lf[6]+1);
((C_proc4)C_retrieve_proc(t2))(4,t2,((C_word*)t0)[3],lf[16],((C_word*)((C_word*)t0)[2])[1]);}
else{
t2=((C_word*)t0)[3];
f_23734(2,t2,C_SCHEME_UNDEFINED);}}

/* k23732 in k23725 in k23193 in mm:make-touch in k21827 in k18307 in k18304 in k18301 in k18298 in k17861 in k17858 in k17855 in k17852 in k17849 in k17327 in k17324 in k16801 in k16798 in k16795 in k16792 in k16789 in k16786 in k16783 in k16780 in k16777 in k16774 in k16771 in k16768 in k16765 in k16762 in k16759 in k16756 in k16753 in k16750 in k16747 in k16744 in k16741 in k16602 in k16599 in k16596 in k16593 in k16537 in k16534 in k16531 in k16528 in k16525 in k16522 in k16519 in k16516 in k15271 in k15202 in k15009 in k15006 in k14901 in k14850 in k7607 in k7604 in k5838 in k5545 in k5542 in k5538 in k5247 in k5244 in k5241 in k5238 */
static void C_ccall f_23734(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word *a;
t2=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[3])[1]);
t4=C_mutate(((C_word *)((C_word*)t0)[3])+1,t3);
t5=((C_word*)t0)[2];
f_23198(t5,t4);}

/* k23696 in k23193 in mm:make-touch in k21827 in k18307 in k18304 in k18301 in k18298 in k17861 in k17858 in k17855 in k17852 in k17849 in k17327 in k17324 in k16801 in k16798 in k16795 in k16792 in k16789 in k16786 in k16783 in k16780 in k16777 in k16774 in k16771 in k16768 in k16765 in k16762 in k16759 in k16756 in k16753 in k16750 in k16747 in k16744 in k16741 in k16602 in k16599 in k16596 in k16593 in k16537 in k16534 in k16531 in k16528 in k16525 in k16522 in k16519 in k16516 in k15271 in k15202 in k15009 in k15006 in k14901 in k14850 in k7607 in k7604 in k5838 in k5545 in k5542 in k5538 in k5247 in k5244 in k5241 in k5238 */
static void C_ccall f_23698(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_23698,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_23702,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("error");
t4=*((C_word*)lf[6]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[23],((C_word*)t0)[2]);}
else{
t4=t2;
f_23702(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k23700 in k23696 in k23193 in mm:make-touch in k21827 in k18307 in k18304 in k18301 in k18298 in k17861 in k17858 in k17855 in k17852 in k17849 in k17327 in k17324 in k16801 in k16798 in k16795 in k16792 in k16789 in k16786 in k16783 in k16780 in k16777 in k16774 in k16771 in k16768 in k16765 in k16762 in k16759 in k16756 in k16753 in k16750 in k16747 in k16744 in k16741 in k16602 in k16599 in k16596 in k16593 in k16537 in k16534 in k16531 in k16528 in k16525 in k16522 in k16519 in k16516 in k15271 in k15202 in k15009 in k15006 in k14901 in k14850 in k7607 in k7604 in k5838 in k5545 in k5542 in k5538 in k5247 in k5244 in k5241 in k5238 */
static void C_ccall f_23702(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_23198(t7,t6);}

/* k23661 in k23193 in mm:make-touch in k21827 in k18307 in k18304 in k18301 in k18298 in k17861 in k17858 in k17855 in k17852 in k17849 in k17327 in k17324 in k16801 in k16798 in k16795 in k16792 in k16789 in k16786 in k16783 in k16780 in k16777 in k16774 in k16771 in k16768 in k16765 in k16762 in k16759 in k16756 in k16753 in k16750 in k16747 in k16744 in k16741 in k16602 in k16599 in k16596 in k16593 in k16537 in k16534 in k16531 in k16528 in k16525 in k16522 in k16519 in k16516 in k15271 in k15202 in k15009 in k15006 in k14901 in k14850 in k7607 in k7604 in k5838 in k5545 in k5542 in k5538 in k5247 in k5244 in k5241 in k5238 */
static void C_ccall f_23663(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_23663,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_23667,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("error");
t4=*((C_word*)lf[6]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[23],((C_word*)t0)[2]);}
else{
t4=t2;
f_23667(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k23665 in k23661 in k23193 in mm:make-touch in k21827 in k18307 in k18304 in k18301 in k18298 in k17861 in k17858 in k17855 in k17852 in k17849 in k17327 in k17324 in k16801 in k16798 in k16795 in k16792 in k16789 in k16786 in k16783 in k16780 in k16777 in k16774 in k16771 in k16768 in k16765 in k16762 in k16759 in k16756 in k16753 in k16750 in k16747 in k16744 in k16741 in k16602 in k16599 in k16596 in k16593 in k16537 in k16534 in k16531 in k16528 in k16525 in k16522 in k16519 in k16516 in k15271 in k15202 in k15009 in k15006 in k14901 in k14850 in k7607 in k7604 in k5838 in k5545 in k5542 in k5538 in k5247 in k5244 in k5241 in k5238 */
static void C_ccall f_23667(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_23198(t7,t6);}

/* k23626 in k23193 in mm:make-touch in k21827 in k18307 in k18304 in k18301 in k18298 in k17861 in k17858 in k17855 in k17852 in k17849 in k17327 in k17324 in k16801 in k16798 in k16795 in k16792 in k16789 in k16786 in k16783 in k16780 in k16777 in k16774 in k16771 in k16768 in k16765 in k16762 in k16759 in k16756 in k16753 in k16750 in k16747 in k16744 in k16741 in k16602 in k16599 in k16596 in k16593 in k16537 in k16534 in k16531 in k16528 in k16525 in k16522 in k16519 in k16516 in k15271 in k15202 in k15009 in k15006 in k14901 in k14850 in k7607 in k7604 in k5838 in k5545 in k5542 in k5538 in k5247 in k5244 in k5241 in k5238 */
static void C_ccall f_23628(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_23628,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_23632,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("error");
t4=*((C_word*)lf[6]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[23],((C_word*)t0)[2]);}
else{
t4=t2;
f_23632(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k23630 in k23626 in k23193 in mm:make-touch in k21827 in k18307 in k18304 in k18301 in k18298 in k17861 in k17858 in k17855 in k17852 in k17849 in k17327 in k17324 in k16801 in k16798 in k16795 in k16792 in k16789 in k16786 in k16783 in k16780 in k16777 in k16774 in k16771 in k16768 in k16765 in k16762 in k16759 in k16756 in k16753 in k16750 in k16747 in k16744 in k16741 in k16602 in k16599 in k16596 in k16593 in k16537 in k16534 in k16531 in k16528 in k16525 in k16522 in k16519 in k16516 in k15271 in k15202 in k15009 in k15006 in k14901 in k14850 in k7607 in k7604 in k5838 in k5545 in k5542 in k5538 in k5247 in k5244 in k5241 in k5238 */
static void C_ccall f_23632(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_23198(t7,t6);}

/* k23591 in k23193 in mm:make-touch in k21827 in k18307 in k18304 in k18301 in k18298 in k17861 in k17858 in k17855 in k17852 in k17849 in k17327 in k17324 in k16801 in k16798 in k16795 in k16792 in k16789 in k16786 in k16783 in k16780 in k16777 in k16774 in k16771 in k16768 in k16765 in k16762 in k16759 in k16756 in k16753 in k16750 in k16747 in k16744 in k16741 in k16602 in k16599 in k16596 in k16593 in k16537 in k16534 in k16531 in k16528 in k16525 in k16522 in k16519 in k16516 in k15271 in k15202 in k15009 in k15006 in k14901 in k14850 in k7607 in k7604 in k5838 in k5545 in k5542 in k5538 in k5247 in k5244 in k5241 in k5238 */
static void C_ccall f_23593(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_23593,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_23597,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("error");
t4=*((C_word*)lf[6]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[23],((C_word*)t0)[2]);}
else{
t4=t2;
f_23597(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k23595 in k23591 in k23193 in mm:make-touch in k21827 in k18307 in k18304 in k18301 in k18298 in k17861 in k17858 in k17855 in k17852 in k17849 in k17327 in k17324 in k16801 in k16798 in k16795 in k16792 in k16789 in k16786 in k16783 in k16780 in k16777 in k16774 in k16771 in k16768 in k16765 in k16762 in k16759 in k16756 in k16753 in k16750 in k16747 in k16744 in k16741 in k16602 in k16599 in k16596 in k16593 in k16537 in k16534 in k16531 in k16528 in k16525 in k16522 in k16519 in k16516 in k15271 in k15202 in k15009 in k15006 in k14901 in k14850 in k7607 in k7604 in k5838 in k5545 in k5542 in k5538 in k5247 in k5244 in k5241 in k5238 */
static void C_ccall f_23597(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_23198(t7,t6);}

/* k23196 in k23193 in mm:make-touch in k21827 in k18307 in k18304 in k18301 in k18298 in k17861 in k17858 in k17855 in k17852 in k17849 in k17327 in k17324 in k16801 in k16798 in k16795 in k16792 in k16789 in k16786 in k16783 in k16780 in k16777 in k16774 in k16771 in k16768 in k16765 in k16762 in k16759 in k16756 in k16753 in k16750 in k16747 in k16744 in k16741 in k16602 in k16599 in k16596 in k16593 in k16537 in k16534 in k16531 in k16528 in k16525 in k16522 in k16519 in k16516 in k15271 in k15202 in k15009 in k15006 in k14901 in k14850 in k7607 in k7604 in k5838 in k5545 in k5542 in k5538 in k5247 in k5244 in k5241 in k5238 */
static void C_fcall f_23198(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word ab[52],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_23198,NULL,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|13,a[1]=(C_word)f_23201,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],a[7]=((C_word*)t0)[7],a[8]=((C_word*)t0)[8],a[9]=((C_word*)t0)[9],a[10]=((C_word*)t0)[10],a[11]=((C_word*)t0)[11],a[12]=((C_word*)t0)[12],a[13]=((C_word*)t0)[13],tmp=(C_word)a,a+=14,tmp);
if(C_truep((C_word)C_i_nullp(((C_word*)((C_word*)t0)[8])[1]))){
t3=t2;
f_23201(t3,C_SCHEME_UNDEFINED);}
else{
t3=(C_word)C_i_car(((C_word*)((C_word*)t0)[8])[1]);
t4=(C_word)C_eqp(t3,lf[558]);
if(C_truep(t4)){
t5=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_23423,a[2]=((C_word*)t0)[7],a[3]=t2,a[4]=((C_word*)t0)[8],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],a[7]=((C_word*)t0)[12],tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)((C_word*)t0)[6])[1])){
C_trace("error");
t6=*((C_word*)lf[6]+1);
((C_proc4)C_retrieve_proc(t6))(4,t6,t5,lf[21],lf[558]);}
else{
t6=t5;
f_23423(2,t6,C_SCHEME_UNDEFINED);}}
else{
t5=(C_word)C_eqp(t3,lf[559]);
if(C_truep(t5)){
t6=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_23458,a[2]=((C_word*)t0)[7],a[3]=t2,a[4]=((C_word*)t0)[8],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[4],a[7]=((C_word*)t0)[10],tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)((C_word*)t0)[4])[1])){
C_trace("error");
t7=*((C_word*)lf[6]+1);
((C_proc4)C_retrieve_proc(t7))(4,t7,t6,lf[21],lf[559]);}
else{
t7=t6;
f_23458(2,t7,C_SCHEME_UNDEFINED);}}
else{
t6=(C_word)C_eqp(t3,lf[566]);
if(C_truep(t6)){
t7=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_23493,a[2]=((C_word*)t0)[7],a[3]=t2,a[4]=((C_word*)t0)[8],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[3],a[7]=((C_word*)t0)[9],tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)((C_word*)t0)[3])[1])){
C_trace("error");
t8=*((C_word*)lf[6]+1);
((C_proc4)C_retrieve_proc(t8))(4,t8,t7,lf[21],lf[566]);}
else{
t8=t7;
f_23493(2,t8,C_SCHEME_UNDEFINED);}}
else{
t7=(C_word)C_eqp(t3,lf[561]);
if(C_truep(t7)){
t8=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_23528,a[2]=((C_word*)t0)[7],a[3]=t2,a[4]=((C_word*)t0)[8],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[2],a[7]=((C_word*)t0)[11],tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)((C_word*)t0)[2])[1])){
C_trace("error");
t9=*((C_word*)lf[6]+1);
((C_proc4)C_retrieve_proc(t9))(4,t9,t8,lf[21],lf[561]);}
else{
t9=t8;
f_23528(2,t9,C_SCHEME_UNDEFINED);}}
else{
t8=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_23557,a[2]=t2,a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[9],a[5]=((C_word*)t0)[8],tmp=(C_word)a,a+=6,tmp);
if(C_truep(((C_word*)((C_word*)t0)[5])[1])){
C_trace("error");
t9=*((C_word*)lf[6]+1);
((C_proc4)C_retrieve_proc(t9))(4,t9,t8,lf[12],((C_word*)t0)[7]);}
else{
t9=t8;
f_23557(2,t9,C_SCHEME_UNDEFINED);}}}}}}}

/* k23555 in k23196 in k23193 in mm:make-touch in k21827 in k18307 in k18304 in k18301 in k18298 in k17861 in k17858 in k17855 in k17852 in k17849 in k17327 in k17324 in k16801 in k16798 in k16795 in k16792 in k16789 in k16786 in k16783 in k16780 in k16777 in k16774 in k16771 in k16768 in k16765 in k16762 in k16759 in k16756 in k16753 in k16750 in k16747 in k16744 in k16741 in k16602 in k16599 in k16596 in k16593 in k16537 in k16534 in k16531 in k16528 in k16525 in k16522 in k16519 in k16516 in k15271 in k15202 in k15009 in k15006 in k14901 in k14850 in k7607 in k7604 in k5838 in k5545 in k5542 in k5538 in k5247 in k5244 in k5241 in k5238 */
static void C_ccall f_23557(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_23557,2,t0,t1);}
t2=(C_word)C_i_car(((C_word*)((C_word*)t0)[5])[1]);
t3=C_mutate(((C_word *)((C_word*)t0)[4])+1,t2);
t4=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_23564,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[5],a[4]=((C_word*)t0)[3],tmp=(C_word)a,a+=5,tmp);
t5=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_23572,a[2]=((C_word*)t0)[4],a[3]=t4,tmp=(C_word)a,a+=4,tmp);
C_trace("keyword?");
t6=C_retrieve(lf[15]);
((C_proc3)C_retrieve_proc(t6))(3,t6,t5,((C_word*)((C_word*)t0)[4])[1]);}

/* k23570 in k23555 in k23196 in k23193 in mm:make-touch in k21827 in k18307 in k18304 in k18301 in k18298 in k17861 in k17858 in k17855 in k17852 in k17849 in k17327 in k17324 in k16801 in k16798 in k16795 in k16792 in k16789 in k16786 in k16783 in k16780 in k16777 in k16774 in k16771 in k16768 in k16765 in k16762 in k16759 in k16756 in k16753 in k16750 in k16747 in k16744 in k16741 in k16602 in k16599 in k16596 in k16593 in k16537 in k16534 in k16531 in k16528 in k16525 in k16522 in k16519 in k16516 in k15271 in k15202 in k15009 in k15006 in k14901 in k14850 in k7607 in k7604 in k5838 in k5545 in k5542 in k5538 in k5247 in k5244 in k5241 in k5238 */
static void C_ccall f_23572(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
if(C_truep(t1)){
C_trace("error");
t2=*((C_word*)lf[6]+1);
((C_proc4)C_retrieve_proc(t2))(4,t2,((C_word*)t0)[3],lf[16],((C_word*)((C_word*)t0)[2])[1]);}
else{
t2=((C_word*)t0)[3];
f_23564(2,t2,C_SCHEME_UNDEFINED);}}

/* k23562 in k23555 in k23196 in k23193 in mm:make-touch in k21827 in k18307 in k18304 in k18301 in k18298 in k17861 in k17858 in k17855 in k17852 in k17849 in k17327 in k17324 in k16801 in k16798 in k16795 in k16792 in k16789 in k16786 in k16783 in k16780 in k16777 in k16774 in k16771 in k16768 in k16765 in k16762 in k16759 in k16756 in k16753 in k16750 in k16747 in k16744 in k16741 in k16602 in k16599 in k16596 in k16593 in k16537 in k16534 in k16531 in k16528 in k16525 in k16522 in k16519 in k16516 in k15271 in k15202 in k15009 in k15006 in k14901 in k14850 in k7607 in k7604 in k5838 in k5545 in k5542 in k5538 in k5247 in k5244 in k5241 in k5238 */
static void C_ccall f_23564(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word *a;
t2=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[3])[1]);
t4=C_mutate(((C_word *)((C_word*)t0)[3])+1,t3);
t5=((C_word*)t0)[2];
f_23201(t5,t4);}

/* k23526 in k23196 in k23193 in mm:make-touch in k21827 in k18307 in k18304 in k18301 in k18298 in k17861 in k17858 in k17855 in k17852 in k17849 in k17327 in k17324 in k16801 in k16798 in k16795 in k16792 in k16789 in k16786 in k16783 in k16780 in k16777 in k16774 in k16771 in k16768 in k16765 in k16762 in k16759 in k16756 in k16753 in k16750 in k16747 in k16744 in k16741 in k16602 in k16599 in k16596 in k16593 in k16537 in k16534 in k16531 in k16528 in k16525 in k16522 in k16519 in k16516 in k15271 in k15202 in k15009 in k15006 in k14901 in k14850 in k7607 in k7604 in k5838 in k5545 in k5542 in k5538 in k5247 in k5244 in k5241 in k5238 */
static void C_ccall f_23528(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_23528,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_23532,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("error");
t4=*((C_word*)lf[6]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[23],((C_word*)t0)[2]);}
else{
t4=t2;
f_23532(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k23530 in k23526 in k23196 in k23193 in mm:make-touch in k21827 in k18307 in k18304 in k18301 in k18298 in k17861 in k17858 in k17855 in k17852 in k17849 in k17327 in k17324 in k16801 in k16798 in k16795 in k16792 in k16789 in k16786 in k16783 in k16780 in k16777 in k16774 in k16771 in k16768 in k16765 in k16762 in k16759 in k16756 in k16753 in k16750 in k16747 in k16744 in k16741 in k16602 in k16599 in k16596 in k16593 in k16537 in k16534 in k16531 in k16528 in k16525 in k16522 in k16519 in k16516 in k15271 in k15202 in k15009 in k15006 in k14901 in k14850 in k7607 in k7604 in k5838 in k5545 in k5542 in k5538 in k5247 in k5244 in k5241 in k5238 */
static void C_ccall f_23532(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_23201(t7,t6);}

/* k23491 in k23196 in k23193 in mm:make-touch in k21827 in k18307 in k18304 in k18301 in k18298 in k17861 in k17858 in k17855 in k17852 in k17849 in k17327 in k17324 in k16801 in k16798 in k16795 in k16792 in k16789 in k16786 in k16783 in k16780 in k16777 in k16774 in k16771 in k16768 in k16765 in k16762 in k16759 in k16756 in k16753 in k16750 in k16747 in k16744 in k16741 in k16602 in k16599 in k16596 in k16593 in k16537 in k16534 in k16531 in k16528 in k16525 in k16522 in k16519 in k16516 in k15271 in k15202 in k15009 in k15006 in k14901 in k14850 in k7607 in k7604 in k5838 in k5545 in k5542 in k5538 in k5247 in k5244 in k5241 in k5238 */
static void C_ccall f_23493(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_23493,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_23497,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("error");
t4=*((C_word*)lf[6]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[23],((C_word*)t0)[2]);}
else{
t4=t2;
f_23497(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k23495 in k23491 in k23196 in k23193 in mm:make-touch in k21827 in k18307 in k18304 in k18301 in k18298 in k17861 in k17858 in k17855 in k17852 in k17849 in k17327 in k17324 in k16801 in k16798 in k16795 in k16792 in k16789 in k16786 in k16783 in k16780 in k16777 in k16774 in k16771 in k16768 in k16765 in k16762 in k16759 in k16756 in k16753 in k16750 in k16747 in k16744 in k16741 in k16602 in k16599 in k16596 in k16593 in k16537 in k16534 in k16531 in k16528 in k16525 in k16522 in k16519 in k16516 in k15271 in k15202 in k15009 in k15006 in k14901 in k14850 in k7607 in k7604 in k5838 in k5545 in k5542 in k5538 in k5247 in k5244 in k5241 in k5238 */
static void C_ccall f_23497(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_23201(t7,t6);}

/* k23456 in k23196 in k23193 in mm:make-touch in k21827 in k18307 in k18304 in k18301 in k18298 in k17861 in k17858 in k17855 in k17852 in k17849 in k17327 in k17324 in k16801 in k16798 in k16795 in k16792 in k16789 in k16786 in k16783 in k16780 in k16777 in k16774 in k16771 in k16768 in k16765 in k16762 in k16759 in k16756 in k16753 in k16750 in k16747 in k16744 in k16741 in k16602 in k16599 in k16596 in k16593 in k16537 in k16534 in k16531 in k16528 in k16525 in k16522 in k16519 in k16516 in k15271 in k15202 in k15009 in k15006 in k14901 in k14850 in k7607 in k7604 in k5838 in k5545 in k5542 in k5538 in k5247 in k5244 in k5241 in k5238 */
static void C_ccall f_23458(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_23458,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_23462,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("error");
t4=*((C_word*)lf[6]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[23],((C_word*)t0)[2]);}
else{
t4=t2;
f_23462(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k23460 in k23456 in k23196 in k23193 in mm:make-touch in k21827 in k18307 in k18304 in k18301 in k18298 in k17861 in k17858 in k17855 in k17852 in k17849 in k17327 in k17324 in k16801 in k16798 in k16795 in k16792 in k16789 in k16786 in k16783 in k16780 in k16777 in k16774 in k16771 in k16768 in k16765 in k16762 in k16759 in k16756 in k16753 in k16750 in k16747 in k16744 in k16741 in k16602 in k16599 in k16596 in k16593 in k16537 in k16534 in k16531 in k16528 in k16525 in k16522 in k16519 in k16516 in k15271 in k15202 in k15009 in k15006 in k14901 in k14850 in k7607 in k7604 in k5838 in k5545 in k5542 in k5538 in k5247 in k5244 in k5241 in k5238 */
static void C_ccall f_23462(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_23201(t7,t6);}

/* k23421 in k23196 in k23193 in mm:make-touch in k21827 in k18307 in k18304 in k18301 in k18298 in k17861 in k17858 in k17855 in k17852 in k17849 in k17327 in k17324 in k16801 in k16798 in k16795 in k16792 in k16789 in k16786 in k16783 in k16780 in k16777 in k16774 in k16771 in k16768 in k16765 in k16762 in k16759 in k16756 in k16753 in k16750 in k16747 in k16744 in k16741 in k16602 in k16599 in k16596 in k16593 in k16537 in k16534 in k16531 in k16528 in k16525 in k16522 in k16519 in k16516 in k15271 in k15202 in k15009 in k15006 in k14901 in k14850 in k7607 in k7604 in k5838 in k5545 in k5542 in k5538 in k5247 in k5244 in k5241 in k5238 */
static void C_ccall f_23423(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_23423,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_23427,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("error");
t4=*((C_word*)lf[6]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[23],((C_word*)t0)[2]);}
else{
t4=t2;
f_23427(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k23425 in k23421 in k23196 in k23193 in mm:make-touch in k21827 in k18307 in k18304 in k18301 in k18298 in k17861 in k17858 in k17855 in k17852 in k17849 in k17327 in k17324 in k16801 in k16798 in k16795 in k16792 in k16789 in k16786 in k16783 in k16780 in k16777 in k16774 in k16771 in k16768 in k16765 in k16762 in k16759 in k16756 in k16753 in k16750 in k16747 in k16744 in k16741 in k16602 in k16599 in k16596 in k16593 in k16537 in k16534 in k16531 in k16528 in k16525 in k16522 in k16519 in k16516 in k15271 in k15202 in k15009 in k15006 in k14901 in k14850 in k7607 in k7604 in k5838 in k5545 in k5542 in k5538 in k5247 in k5244 in k5241 in k5238 */
static void C_ccall f_23427(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_23201(t7,t6);}

/* k23199 in k23196 in k23193 in mm:make-touch in k21827 in k18307 in k18304 in k18301 in k18298 in k17861 in k17858 in k17855 in k17852 in k17849 in k17327 in k17324 in k16801 in k16798 in k16795 in k16792 in k16789 in k16786 in k16783 in k16780 in k16777 in k16774 in k16771 in k16768 in k16765 in k16762 in k16759 in k16756 in k16753 in k16750 in k16747 in k16744 in k16741 in k16602 in k16599 in k16596 in k16593 in k16537 in k16534 in k16531 in k16528 in k16525 in k16522 in k16519 in k16516 in k15271 in k15202 in k15009 in k15006 in k14901 in k14850 in k7607 in k7604 in k5838 in k5545 in k5542 in k5538 in k5247 in k5244 in k5241 in k5238 */
static void C_fcall f_23201(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word ab[47],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_23201,NULL,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|8,a[1]=(C_word)f_23204,a[2]=((C_word*)t0)[7],a[3]=((C_word*)t0)[8],a[4]=((C_word*)t0)[9],a[5]=((C_word*)t0)[10],a[6]=((C_word*)t0)[11],a[7]=((C_word*)t0)[12],a[8]=((C_word*)t0)[13],tmp=(C_word)a,a+=9,tmp);
if(C_truep((C_word)C_i_nullp(((C_word*)((C_word*)t0)[8])[1]))){
t3=t2;
f_23204(t3,C_SCHEME_UNDEFINED);}
else{
t3=(C_word)C_i_car(((C_word*)((C_word*)t0)[8])[1]);
t4=(C_word)C_eqp(t3,lf[558]);
if(C_truep(t4)){
t5=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_23253,a[2]=((C_word*)t0)[7],a[3]=t2,a[4]=((C_word*)t0)[8],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],a[7]=((C_word*)t0)[12],tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)((C_word*)t0)[6])[1])){
C_trace("error");
t6=*((C_word*)lf[6]+1);
((C_proc4)C_retrieve_proc(t6))(4,t6,t5,lf[21],lf[558]);}
else{
t6=t5;
f_23253(2,t6,C_SCHEME_UNDEFINED);}}
else{
t5=(C_word)C_eqp(t3,lf[559]);
if(C_truep(t5)){
t6=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_23288,a[2]=((C_word*)t0)[7],a[3]=t2,a[4]=((C_word*)t0)[8],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[4],a[7]=((C_word*)t0)[10],tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)((C_word*)t0)[4])[1])){
C_trace("error");
t7=*((C_word*)lf[6]+1);
((C_proc4)C_retrieve_proc(t7))(4,t7,t6,lf[21],lf[559]);}
else{
t7=t6;
f_23288(2,t7,C_SCHEME_UNDEFINED);}}
else{
t6=(C_word)C_eqp(t3,lf[566]);
if(C_truep(t6)){
t7=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_23323,a[2]=((C_word*)t0)[7],a[3]=t2,a[4]=((C_word*)t0)[8],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[3],a[7]=((C_word*)t0)[9],tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)((C_word*)t0)[3])[1])){
C_trace("error");
t8=*((C_word*)lf[6]+1);
((C_proc4)C_retrieve_proc(t8))(4,t8,t7,lf[21],lf[566]);}
else{
t8=t7;
f_23323(2,t8,C_SCHEME_UNDEFINED);}}
else{
t7=(C_word)C_eqp(t3,lf[561]);
if(C_truep(t7)){
t8=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_23358,a[2]=((C_word*)t0)[7],a[3]=t2,a[4]=((C_word*)t0)[8],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[2],a[7]=((C_word*)t0)[11],tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)((C_word*)t0)[2])[1])){
C_trace("error");
t9=*((C_word*)lf[6]+1);
((C_proc4)C_retrieve_proc(t9))(4,t9,t8,lf[21],lf[561]);}
else{
t9=t8;
f_23358(2,t9,C_SCHEME_UNDEFINED);}}
else{
t8=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_23387,a[2]=t2,a[3]=((C_word*)t0)[2],a[4]=((C_word*)t0)[11],a[5]=((C_word*)t0)[8],tmp=(C_word)a,a+=6,tmp);
if(C_truep(((C_word*)((C_word*)t0)[5])[1])){
C_trace("error");
t9=*((C_word*)lf[6]+1);
((C_proc4)C_retrieve_proc(t9))(4,t9,t8,lf[12],((C_word*)t0)[7]);}
else{
t9=t8;
f_23387(2,t9,C_SCHEME_UNDEFINED);}}}}}}}

/* k23385 in k23199 in k23196 in k23193 in mm:make-touch in k21827 in k18307 in k18304 in k18301 in k18298 in k17861 in k17858 in k17855 in k17852 in k17849 in k17327 in k17324 in k16801 in k16798 in k16795 in k16792 in k16789 in k16786 in k16783 in k16780 in k16777 in k16774 in k16771 in k16768 in k16765 in k16762 in k16759 in k16756 in k16753 in k16750 in k16747 in k16744 in k16741 in k16602 in k16599 in k16596 in k16593 in k16537 in k16534 in k16531 in k16528 in k16525 in k16522 in k16519 in k16516 in k15271 in k15202 in k15009 in k15006 in k14901 in k14850 in k7607 in k7604 in k5838 in k5545 in k5542 in k5538 in k5247 in k5244 in k5241 in k5238 */
static void C_ccall f_23387(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_23387,2,t0,t1);}
t2=(C_word)C_i_car(((C_word*)((C_word*)t0)[5])[1]);
t3=C_mutate(((C_word *)((C_word*)t0)[4])+1,t2);
t4=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_23394,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[5],a[4]=((C_word*)t0)[3],tmp=(C_word)a,a+=5,tmp);
t5=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_23402,a[2]=((C_word*)t0)[4],a[3]=t4,tmp=(C_word)a,a+=4,tmp);
C_trace("keyword?");
t6=C_retrieve(lf[15]);
((C_proc3)C_retrieve_proc(t6))(3,t6,t5,((C_word*)((C_word*)t0)[4])[1]);}

/* k23400 in k23385 in k23199 in k23196 in k23193 in mm:make-touch in k21827 in k18307 in k18304 in k18301 in k18298 in k17861 in k17858 in k17855 in k17852 in k17849 in k17327 in k17324 in k16801 in k16798 in k16795 in k16792 in k16789 in k16786 in k16783 in k16780 in k16777 in k16774 in k16771 in k16768 in k16765 in k16762 in k16759 in k16756 in k16753 in k16750 in k16747 in k16744 in k16741 in k16602 in k16599 in k16596 in k16593 in k16537 in k16534 in k16531 in k16528 in k16525 in k16522 in k16519 in k16516 in k15271 in k15202 in k15009 in k15006 in k14901 in k14850 in k7607 in k7604 in k5838 in k5545 in k5542 in k5538 in k5247 in k5244 in k5241 in k5238 */
static void C_ccall f_23402(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
if(C_truep(t1)){
C_trace("error");
t2=*((C_word*)lf[6]+1);
((C_proc4)C_retrieve_proc(t2))(4,t2,((C_word*)t0)[3],lf[16],((C_word*)((C_word*)t0)[2])[1]);}
else{
t2=((C_word*)t0)[3];
f_23394(2,t2,C_SCHEME_UNDEFINED);}}

/* k23392 in k23385 in k23199 in k23196 in k23193 in mm:make-touch in k21827 in k18307 in k18304 in k18301 in k18298 in k17861 in k17858 in k17855 in k17852 in k17849 in k17327 in k17324 in k16801 in k16798 in k16795 in k16792 in k16789 in k16786 in k16783 in k16780 in k16777 in k16774 in k16771 in k16768 in k16765 in k16762 in k16759 in k16756 in k16753 in k16750 in k16747 in k16744 in k16741 in k16602 in k16599 in k16596 in k16593 in k16537 in k16534 in k16531 in k16528 in k16525 in k16522 in k16519 in k16516 in k15271 in k15202 in k15009 in k15006 in k14901 in k14850 in k7607 in k7604 in k5838 in k5545 in k5542 in k5538 in k5247 in k5244 in k5241 in k5238 */
static void C_ccall f_23394(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word *a;
t2=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[3])[1]);
t4=C_mutate(((C_word *)((C_word*)t0)[3])+1,t3);
t5=((C_word*)t0)[2];
f_23204(t5,t4);}

/* k23356 in k23199 in k23196 in k23193 in mm:make-touch in k21827 in k18307 in k18304 in k18301 in k18298 in k17861 in k17858 in k17855 in k17852 in k17849 in k17327 in k17324 in k16801 in k16798 in k16795 in k16792 in k16789 in k16786 in k16783 in k16780 in k16777 in k16774 in k16771 in k16768 in k16765 in k16762 in k16759 in k16756 in k16753 in k16750 in k16747 in k16744 in k16741 in k16602 in k16599 in k16596 in k16593 in k16537 in k16534 in k16531 in k16528 in k16525 in k16522 in k16519 in k16516 in k15271 in k15202 in k15009 in k15006 in k14901 in k14850 in k7607 in k7604 in k5838 in k5545 in k5542 in k5538 in k5247 in k5244 in k5241 in k5238 */
static void C_ccall f_23358(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_23358,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_23362,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("error");
t4=*((C_word*)lf[6]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[23],((C_word*)t0)[2]);}
else{
t4=t2;
f_23362(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k23360 in k23356 in k23199 in k23196 in k23193 in mm:make-touch in k21827 in k18307 in k18304 in k18301 in k18298 in k17861 in k17858 in k17855 in k17852 in k17849 in k17327 in k17324 in k16801 in k16798 in k16795 in k16792 in k16789 in k16786 in k16783 in k16780 in k16777 in k16774 in k16771 in k16768 in k16765 in k16762 in k16759 in k16756 in k16753 in k16750 in k16747 in k16744 in k16741 in k16602 in k16599 in k16596 in k16593 in k16537 in k16534 in k16531 in k16528 in k16525 in k16522 in k16519 in k16516 in k15271 in k15202 in k15009 in k15006 in k14901 in k14850 in k7607 in k7604 in k5838 in k5545 in k5542 in k5538 in k5247 in k5244 in k5241 in k5238 */
static void C_ccall f_23362(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_23204(t7,t6);}

/* k23321 in k23199 in k23196 in k23193 in mm:make-touch in k21827 in k18307 in k18304 in k18301 in k18298 in k17861 in k17858 in k17855 in k17852 in k17849 in k17327 in k17324 in k16801 in k16798 in k16795 in k16792 in k16789 in k16786 in k16783 in k16780 in k16777 in k16774 in k16771 in k16768 in k16765 in k16762 in k16759 in k16756 in k16753 in k16750 in k16747 in k16744 in k16741 in k16602 in k16599 in k16596 in k16593 in k16537 in k16534 in k16531 in k16528 in k16525 in k16522 in k16519 in k16516 in k15271 in k15202 in k15009 in k15006 in k14901 in k14850 in k7607 in k7604 in k5838 in k5545 in k5542 in k5538 in k5247 in k5244 in k5241 in k5238 */
static void C_ccall f_23323(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_23323,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_23327,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("error");
t4=*((C_word*)lf[6]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[23],((C_word*)t0)[2]);}
else{
t4=t2;
f_23327(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k23325 in k23321 in k23199 in k23196 in k23193 in mm:make-touch in k21827 in k18307 in k18304 in k18301 in k18298 in k17861 in k17858 in k17855 in k17852 in k17849 in k17327 in k17324 in k16801 in k16798 in k16795 in k16792 in k16789 in k16786 in k16783 in k16780 in k16777 in k16774 in k16771 in k16768 in k16765 in k16762 in k16759 in k16756 in k16753 in k16750 in k16747 in k16744 in k16741 in k16602 in k16599 in k16596 in k16593 in k16537 in k16534 in k16531 in k16528 in k16525 in k16522 in k16519 in k16516 in k15271 in k15202 in k15009 in k15006 in k14901 in k14850 in k7607 in k7604 in k5838 in k5545 in k5542 in k5538 in k5247 in k5244 in k5241 in k5238 */
static void C_ccall f_23327(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_23204(t7,t6);}

/* k23286 in k23199 in k23196 in k23193 in mm:make-touch in k21827 in k18307 in k18304 in k18301 in k18298 in k17861 in k17858 in k17855 in k17852 in k17849 in k17327 in k17324 in k16801 in k16798 in k16795 in k16792 in k16789 in k16786 in k16783 in k16780 in k16777 in k16774 in k16771 in k16768 in k16765 in k16762 in k16759 in k16756 in k16753 in k16750 in k16747 in k16744 in k16741 in k16602 in k16599 in k16596 in k16593 in k16537 in k16534 in k16531 in k16528 in k16525 in k16522 in k16519 in k16516 in k15271 in k15202 in k15009 in k15006 in k14901 in k14850 in k7607 in k7604 in k5838 in k5545 in k5542 in k5538 in k5247 in k5244 in k5241 in k5238 */
static void C_ccall f_23288(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_23288,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_23292,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("error");
t4=*((C_word*)lf[6]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[23],((C_word*)t0)[2]);}
else{
t4=t2;
f_23292(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k23290 in k23286 in k23199 in k23196 in k23193 in mm:make-touch in k21827 in k18307 in k18304 in k18301 in k18298 in k17861 in k17858 in k17855 in k17852 in k17849 in k17327 in k17324 in k16801 in k16798 in k16795 in k16792 in k16789 in k16786 in k16783 in k16780 in k16777 in k16774 in k16771 in k16768 in k16765 in k16762 in k16759 in k16756 in k16753 in k16750 in k16747 in k16744 in k16741 in k16602 in k16599 in k16596 in k16593 in k16537 in k16534 in k16531 in k16528 in k16525 in k16522 in k16519 in k16516 in k15271 in k15202 in k15009 in k15006 in k14901 in k14850 in k7607 in k7604 in k5838 in k5545 in k5542 in k5538 in k5247 in k5244 in k5241 in k5238 */
static void C_ccall f_23292(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_23204(t7,t6);}

/* k23251 in k23199 in k23196 in k23193 in mm:make-touch in k21827 in k18307 in k18304 in k18301 in k18298 in k17861 in k17858 in k17855 in k17852 in k17849 in k17327 in k17324 in k16801 in k16798 in k16795 in k16792 in k16789 in k16786 in k16783 in k16780 in k16777 in k16774 in k16771 in k16768 in k16765 in k16762 in k16759 in k16756 in k16753 in k16750 in k16747 in k16744 in k16741 in k16602 in k16599 in k16596 in k16593 in k16537 in k16534 in k16531 in k16528 in k16525 in k16522 in k16519 in k16516 in k15271 in k15202 in k15009 in k15006 in k14901 in k14850 in k7607 in k7604 in k5838 in k5545 in k5542 in k5538 in k5247 in k5244 in k5241 in k5238 */
static void C_ccall f_23253(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_23253,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_23257,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("error");
t4=*((C_word*)lf[6]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[23],((C_word*)t0)[2]);}
else{
t4=t2;
f_23257(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k23255 in k23251 in k23199 in k23196 in k23193 in mm:make-touch in k21827 in k18307 in k18304 in k18301 in k18298 in k17861 in k17858 in k17855 in k17852 in k17849 in k17327 in k17324 in k16801 in k16798 in k16795 in k16792 in k16789 in k16786 in k16783 in k16780 in k16777 in k16774 in k16771 in k16768 in k16765 in k16762 in k16759 in k16756 in k16753 in k16750 in k16747 in k16744 in k16741 in k16602 in k16599 in k16596 in k16593 in k16537 in k16534 in k16531 in k16528 in k16525 in k16522 in k16519 in k16516 in k15271 in k15202 in k15009 in k15006 in k14901 in k14850 in k7607 in k7604 in k5838 in k5545 in k5542 in k5538 in k5247 in k5244 in k5241 in k5238 */
static void C_ccall f_23257(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_23204(t7,t6);}

/* k23202 in k23199 in k23196 in k23193 in mm:make-touch in k21827 in k18307 in k18304 in k18301 in k18298 in k17861 in k17858 in k17855 in k17852 in k17849 in k17327 in k17324 in k16801 in k16798 in k16795 in k16792 in k16789 in k16786 in k16783 in k16780 in k16777 in k16774 in k16771 in k16768 in k16765 in k16762 in k16759 in k16756 in k16753 in k16750 in k16747 in k16744 in k16741 in k16602 in k16599 in k16596 in k16593 in k16537 in k16534 in k16531 in k16528 in k16525 in k16522 in k16519 in k16516 in k15271 in k15202 in k15009 in k15006 in k14901 in k14850 in k7607 in k7604 in k5838 in k5545 in k5542 in k5538 in k5247 in k5244 in k5241 in k5238 */
static void C_fcall f_23204(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_23204,NULL,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_23207,a[2]=((C_word*)t0)[4],a[3]=((C_word*)t0)[5],a[4]=((C_word*)t0)[6],a[5]=((C_word*)t0)[7],a[6]=((C_word*)t0)[8],tmp=(C_word)a,a+=7,tmp);
if(C_truep((C_word)C_i_nullp(((C_word*)((C_word*)t0)[3])[1]))){
t3=t2;
f_23207(2,t3,C_SCHEME_UNDEFINED);}
else{
C_trace("error");
t3=*((C_word*)lf[6]+1);
((C_proc4)C_retrieve_proc(t3))(4,t3,t2,lf[7],((C_word*)t0)[2]);}}

/* k23205 in k23202 in k23199 in k23196 in k23193 in mm:make-touch in k21827 in k18307 in k18304 in k18301 in k18298 in k17861 in k17858 in k17855 in k17852 in k17849 in k17327 in k17324 in k16801 in k16798 in k16795 in k16792 in k16789 in k16786 in k16783 in k16780 in k16777 in k16774 in k16771 in k16768 in k16765 in k16762 in k16759 in k16756 in k16753 in k16750 in k16747 in k16744 in k16741 in k16602 in k16599 in k16596 in k16593 in k16537 in k16534 in k16531 in k16528 in k16525 in k16522 in k16519 in k16516 in k15271 in k15202 in k15009 in k15006 in k14901 in k14850 in k7607 in k7604 in k5838 in k5545 in k5542 in k5538 in k5247 in k5244 in k5241 in k5238 */
static void C_ccall f_23207(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word ab[3],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_23207,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_23211,a[2]=((C_word)li329),tmp=(C_word)a,a+=3,tmp);
((C_proc7)(void*)(*((C_word*)t2+1)))(7,t2,((C_word*)t0)[6],C_fix(10),((C_word*)((C_word*)t0)[5])[1],((C_word*)((C_word*)t0)[4])[1],((C_word*)((C_word*)t0)[3])[1],((C_word*)((C_word*)t0)[2])[1]);}

/* f_23211 in k23205 in k23202 in k23199 in k23196 in k23193 in mm:make-touch in k21827 in k18307 in k18304 in k18301 in k18298 in k17861 in k17858 in k17855 in k17852 in k17849 in k17327 in k17324 in k16801 in k16798 in k16795 in k16792 in k16789 in k16786 in k16783 in k16780 in k16777 in k16774 in k16771 in k16768 in k16765 in k16762 in k16759 in k16756 in k16753 in k16750 in k16747 in k16744 in k16741 in k16602 in k16599 in k16596 in k16593 in k16537 in k16534 in k16531 in k16528 in k16525 in k16522 in k16519 in k16516 in k15271 in k15202 in k15009 in k15006 in k14901 in k14850 in k7607 in k7604 in k5838 in k5545 in k5542 in k5538 in k5247 in k5244 in k5241 in k5238 */
static void C_ccall f_23211(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4,C_word t5,C_word t6){
C_word tmp;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word ab[5],*a=ab;
if(c!=7) C_bad_argc_2(c,7,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr7,(void*)f_23211,7,t0,t1,t2,t3,t4,t5,t6);}
t7=(C_word)C_a_i_bytevector(&a,1,C_fix(3));
t8=(C_word)C_i_foreign_fixnum_argumentp(t2);
t9=(C_word)C_i_foreign_flonum_argumentp(t3);
t10=(C_word)C_i_foreign_fixnum_argumentp(t4);
t11=(C_word)C_i_foreign_fixnum_argumentp(t5);
t12=(C_word)C_i_foreign_fixnum_argumentp(t6);
t13=t1;
((C_proc2)(void*)(*((C_word*)t13+1)))(2,t13,(C_word)stub4166(t7,t8,t9,t10,t11,t12));}

/* mm:off? in k21827 in k18307 in k18304 in k18301 in k18298 in k17861 in k17858 in k17855 in k17852 in k17849 in k17327 in k17324 in k16801 in k16798 in k16795 in k16792 in k16789 in k16786 in k16783 in k16780 in k16777 in k16774 in k16771 in k16768 in k16765 in k16762 in k16759 in k16756 in k16753 in k16750 in k16747 in k16744 in k16741 in k16602 in k16599 in k16596 in k16593 in k16537 in k16534 in k16531 in k16528 in k16525 in k16522 in k16519 in k16516 in k15271 in k15202 in k15009 in k15006 in k14901 in k14850 in k7607 in k7604 in k5838 in k5545 in k5542 in k5538 in k5247 in k5244 in k5241 in k5238 */
static void C_ccall f_23172(C_word c,C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word ab[3],*a=ab;
if(c!=3) C_bad_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr3,(void*)f_23172,3,t0,t1,t2);}
t3=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_23177,a[2]=((C_word)li327),tmp=(C_word)a,a+=3,tmp);
((C_proc4)(void*)(*((C_word*)t3+1)))(4,t3,t1,t2,C_fix(8));}

/* f_23177 in mm:off? in k21827 in k18307 in k18304 in k18301 in k18298 in k17861 in k17858 in k17855 in k17852 in k17849 in k17327 in k17324 in k16801 in k16798 in k16795 in k16792 in k16789 in k16786 in k16783 in k16780 in k16777 in k16774 in k16771 in k16768 in k16765 in k16762 in k16759 in k16756 in k16753 in k16750 in k16747 in k16744 in k16741 in k16602 in k16599 in k16596 in k16593 in k16537 in k16534 in k16531 in k16528 in k16525 in k16522 in k16519 in k16516 in k15271 in k15202 in k15009 in k15006 in k14901 in k14850 in k7607 in k7604 in k5838 in k5545 in k5542 in k5538 in k5247 in k5244 in k5241 in k5238 */
static void C_ccall f_23177(C_word c,C_word t0,C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word t6;
C_word *a;
if(c!=4) C_bad_argc_2(c,4,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr4,(void*)f_23177,4,t0,t1,t2,t3);}
t4=(C_truep(t2)?(C_word)C_i_foreign_pointer_argumentp(t2):C_SCHEME_FALSE);
t5=(C_word)C_i_foreign_fixnum_argumentp(t3);
t6=t1;
((C_proc2)(void*)(*((C_word*)t6+1)))(2,t6,(C_word)stub4050(C_SCHEME_UNDEFINED,t4,t5));}

/* mm:make-off in k21827 in k18307 in k18304 in k18301 in k18298 in k17861 in k17858 in k17855 in k17852 in k17849 in k17327 in k17324 in k16801 in k16798 in k16795 in k16792 in k16789 in k16786 in k16783 in k16780 in k16777 in k16774 in k16771 in k16768 in k16765 in k16762 in k16759 in k16756 in k16753 in k16750 in k16747 in k16744 in k16741 in k16602 in k16599 in k16596 in k16593 in k16537 in k16534 in k16531 in k16528 in k16525 in k16522 in k16519 in k16516 in k15271 in k15202 in k15009 in k15006 in k14901 in k14850 in k7607 in k7604 in k5838 in k5545 in k5542 in k5538 in k5247 in k5244 in k5241 in k5238 */
static void C_ccall f_22721(C_word c,C_word t0,C_word t1,...){
C_word tmp;
C_word t2;
va_list v;
C_word *a,c2=c;
C_save_rest(t1,c2,2);
C_check_for_interrupt;
if(!C_demand(c*C_SIZEOF_PAIR+58)){
C_save_and_reclaim((void*)tr2r,(void*)f_22721r,2,t0,t1);}
else{
a=C_alloc((c-2)*3);
t2=C_restore_rest(a,C_rest_count(0));
f_22721r(t0,t1,t2);}}

static void C_ccall f_22721r(C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word t14;
C_word t15;
C_word t16;
C_word t17;
C_word t18;
C_word t19;
C_word t20;
C_word t21;
C_word t22;
C_word t23;
C_word t24;
C_word t25;
C_word t26;
C_word t27;
C_word t28;
C_word *a=C_alloc(58);
t3=C_fix(0);
t4=(*a=C_VECTOR_TYPE|1,a[1]=t3,tmp=(C_word)a,a+=2,tmp);
t5=C_fix(60);
t6=(*a=C_VECTOR_TYPE|1,a[1]=t5,tmp=(C_word)a,a+=2,tmp);
t7=C_fix(0);
t8=(*a=C_VECTOR_TYPE|1,a[1]=t7,tmp=(C_word)a,a+=2,tmp);
t9=C_SCHEME_FALSE;
t10=(*a=C_VECTOR_TYPE|1,a[1]=t9,tmp=(C_word)a,a+=2,tmp);
t11=C_SCHEME_FALSE;
t12=(*a=C_VECTOR_TYPE|1,a[1]=t11,tmp=(C_word)a,a+=2,tmp);
t13=C_SCHEME_FALSE;
t14=(*a=C_VECTOR_TYPE|1,a[1]=t13,tmp=(C_word)a,a+=2,tmp);
t15=t2;
t16=(*a=C_VECTOR_TYPE|1,a[1]=t15,tmp=(C_word)a,a+=2,tmp);
t17=C_SCHEME_FALSE;
t18=(*a=C_VECTOR_TYPE|1,a[1]=t17,tmp=(C_word)a,a+=2,tmp);
t19=(*a=C_CLOSURE_TYPE|11,a[1]=(C_word)f_22725,a[2]=t14,a[3]=t12,a[4]=t18,a[5]=t10,a[6]=t2,a[7]=t16,a[8]=t6,a[9]=t8,a[10]=t4,a[11]=t1,tmp=(C_word)a,a+=12,tmp);
if(C_truep((C_word)C_i_nullp(((C_word*)t16)[1]))){
t20=t19;
f_22725(t20,C_SCHEME_UNDEFINED);}
else{
t20=(C_word)C_i_car(((C_word*)t16)[1]);
t21=(C_word)C_eqp(t20,lf[558]);
if(C_truep(t21)){
t22=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_23050,a[2]=t2,a[3]=t19,a[4]=t16,a[5]=t18,a[6]=t10,a[7]=t4,tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)t10)[1])){
C_trace("error");
t23=*((C_word*)lf[6]+1);
((C_proc4)C_retrieve_proc(t23))(4,t23,t22,lf[21],lf[558]);}
else{
t23=t22;
f_23050(2,t23,C_SCHEME_UNDEFINED);}}
else{
t22=(C_word)C_eqp(t20,lf[559]);
if(C_truep(t22)){
t23=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_23085,a[2]=t2,a[3]=t19,a[4]=t16,a[5]=t18,a[6]=t12,a[7]=t6,tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)t12)[1])){
C_trace("error");
t24=*((C_word*)lf[6]+1);
((C_proc4)C_retrieve_proc(t24))(4,t24,t23,lf[21],lf[559]);}
else{
t24=t23;
f_23085(2,t24,C_SCHEME_UNDEFINED);}}
else{
t23=(C_word)C_eqp(t20,lf[561]);
if(C_truep(t23)){
t24=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_23120,a[2]=t2,a[3]=t19,a[4]=t16,a[5]=t18,a[6]=t14,a[7]=t8,tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)t14)[1])){
C_trace("error");
t25=*((C_word*)lf[6]+1);
((C_proc4)C_retrieve_proc(t25))(4,t25,t24,lf[21],lf[561]);}
else{
t25=t24;
f_23120(2,t25,C_SCHEME_UNDEFINED);}}
else{
t24=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_23149,a[2]=t19,a[3]=t10,a[4]=t4,a[5]=t16,tmp=(C_word)a,a+=6,tmp);
if(C_truep(((C_word*)t18)[1])){
C_trace("error");
t25=*((C_word*)lf[6]+1);
((C_proc4)C_retrieve_proc(t25))(4,t25,t24,lf[12],t2);}
else{
t25=t24;
f_23149(2,t25,C_SCHEME_UNDEFINED);}}}}}}

/* k23147 in mm:make-off in k21827 in k18307 in k18304 in k18301 in k18298 in k17861 in k17858 in k17855 in k17852 in k17849 in k17327 in k17324 in k16801 in k16798 in k16795 in k16792 in k16789 in k16786 in k16783 in k16780 in k16777 in k16774 in k16771 in k16768 in k16765 in k16762 in k16759 in k16756 in k16753 in k16750 in k16747 in k16744 in k16741 in k16602 in k16599 in k16596 in k16593 in k16537 in k16534 in k16531 in k16528 in k16525 in k16522 in k16519 in k16516 in k15271 in k15202 in k15009 in k15006 in k14901 in k14850 in k7607 in k7604 in k5838 in k5545 in k5542 in k5538 in k5247 in k5244 in k5241 in k5238 */
static void C_ccall f_23149(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_23149,2,t0,t1);}
t2=(C_word)C_i_car(((C_word*)((C_word*)t0)[5])[1]);
t3=C_mutate(((C_word *)((C_word*)t0)[4])+1,t2);
t4=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_23156,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[5],a[4]=((C_word*)t0)[3],tmp=(C_word)a,a+=5,tmp);
t5=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_23164,a[2]=((C_word*)t0)[4],a[3]=t4,tmp=(C_word)a,a+=4,tmp);
C_trace("keyword?");
t6=C_retrieve(lf[15]);
((C_proc3)C_retrieve_proc(t6))(3,t6,t5,((C_word*)((C_word*)t0)[4])[1]);}

/* k23162 in k23147 in mm:make-off in k21827 in k18307 in k18304 in k18301 in k18298 in k17861 in k17858 in k17855 in k17852 in k17849 in k17327 in k17324 in k16801 in k16798 in k16795 in k16792 in k16789 in k16786 in k16783 in k16780 in k16777 in k16774 in k16771 in k16768 in k16765 in k16762 in k16759 in k16756 in k16753 in k16750 in k16747 in k16744 in k16741 in k16602 in k16599 in k16596 in k16593 in k16537 in k16534 in k16531 in k16528 in k16525 in k16522 in k16519 in k16516 in k15271 in k15202 in k15009 in k15006 in k14901 in k14850 in k7607 in k7604 in k5838 in k5545 in k5542 in k5538 in k5247 in k5244 in k5241 in k5238 */
static void C_ccall f_23164(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
if(C_truep(t1)){
C_trace("error");
t2=*((C_word*)lf[6]+1);
((C_proc4)C_retrieve_proc(t2))(4,t2,((C_word*)t0)[3],lf[16],((C_word*)((C_word*)t0)[2])[1]);}
else{
t2=((C_word*)t0)[3];
f_23156(2,t2,C_SCHEME_UNDEFINED);}}

/* k23154 in k23147 in mm:make-off in k21827 in k18307 in k18304 in k18301 in k18298 in k17861 in k17858 in k17855 in k17852 in k17849 in k17327 in k17324 in k16801 in k16798 in k16795 in k16792 in k16789 in k16786 in k16783 in k16780 in k16777 in k16774 in k16771 in k16768 in k16765 in k16762 in k16759 in k16756 in k16753 in k16750 in k16747 in k16744 in k16741 in k16602 in k16599 in k16596 in k16593 in k16537 in k16534 in k16531 in k16528 in k16525 in k16522 in k16519 in k16516 in k15271 in k15202 in k15009 in k15006 in k14901 in k14850 in k7607 in k7604 in k5838 in k5545 in k5542 in k5538 in k5247 in k5244 in k5241 in k5238 */
static void C_ccall f_23156(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word *a;
t2=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[3])[1]);
t4=C_mutate(((C_word *)((C_word*)t0)[3])+1,t3);
t5=((C_word*)t0)[2];
f_22725(t5,t4);}

/* k23118 in mm:make-off in k21827 in k18307 in k18304 in k18301 in k18298 in k17861 in k17858 in k17855 in k17852 in k17849 in k17327 in k17324 in k16801 in k16798 in k16795 in k16792 in k16789 in k16786 in k16783 in k16780 in k16777 in k16774 in k16771 in k16768 in k16765 in k16762 in k16759 in k16756 in k16753 in k16750 in k16747 in k16744 in k16741 in k16602 in k16599 in k16596 in k16593 in k16537 in k16534 in k16531 in k16528 in k16525 in k16522 in k16519 in k16516 in k15271 in k15202 in k15009 in k15006 in k14901 in k14850 in k7607 in k7604 in k5838 in k5545 in k5542 in k5538 in k5247 in k5244 in k5241 in k5238 */
static void C_ccall f_23120(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_23120,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_23124,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("error");
t4=*((C_word*)lf[6]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[23],((C_word*)t0)[2]);}
else{
t4=t2;
f_23124(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k23122 in k23118 in mm:make-off in k21827 in k18307 in k18304 in k18301 in k18298 in k17861 in k17858 in k17855 in k17852 in k17849 in k17327 in k17324 in k16801 in k16798 in k16795 in k16792 in k16789 in k16786 in k16783 in k16780 in k16777 in k16774 in k16771 in k16768 in k16765 in k16762 in k16759 in k16756 in k16753 in k16750 in k16747 in k16744 in k16741 in k16602 in k16599 in k16596 in k16593 in k16537 in k16534 in k16531 in k16528 in k16525 in k16522 in k16519 in k16516 in k15271 in k15202 in k15009 in k15006 in k14901 in k14850 in k7607 in k7604 in k5838 in k5545 in k5542 in k5538 in k5247 in k5244 in k5241 in k5238 */
static void C_ccall f_23124(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_22725(t7,t6);}

/* k23083 in mm:make-off in k21827 in k18307 in k18304 in k18301 in k18298 in k17861 in k17858 in k17855 in k17852 in k17849 in k17327 in k17324 in k16801 in k16798 in k16795 in k16792 in k16789 in k16786 in k16783 in k16780 in k16777 in k16774 in k16771 in k16768 in k16765 in k16762 in k16759 in k16756 in k16753 in k16750 in k16747 in k16744 in k16741 in k16602 in k16599 in k16596 in k16593 in k16537 in k16534 in k16531 in k16528 in k16525 in k16522 in k16519 in k16516 in k15271 in k15202 in k15009 in k15006 in k14901 in k14850 in k7607 in k7604 in k5838 in k5545 in k5542 in k5538 in k5247 in k5244 in k5241 in k5238 */
static void C_ccall f_23085(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_23085,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_23089,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("error");
t4=*((C_word*)lf[6]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[23],((C_word*)t0)[2]);}
else{
t4=t2;
f_23089(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k23087 in k23083 in mm:make-off in k21827 in k18307 in k18304 in k18301 in k18298 in k17861 in k17858 in k17855 in k17852 in k17849 in k17327 in k17324 in k16801 in k16798 in k16795 in k16792 in k16789 in k16786 in k16783 in k16780 in k16777 in k16774 in k16771 in k16768 in k16765 in k16762 in k16759 in k16756 in k16753 in k16750 in k16747 in k16744 in k16741 in k16602 in k16599 in k16596 in k16593 in k16537 in k16534 in k16531 in k16528 in k16525 in k16522 in k16519 in k16516 in k15271 in k15202 in k15009 in k15006 in k14901 in k14850 in k7607 in k7604 in k5838 in k5545 in k5542 in k5538 in k5247 in k5244 in k5241 in k5238 */
static void C_ccall f_23089(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_22725(t7,t6);}

/* k23048 in mm:make-off in k21827 in k18307 in k18304 in k18301 in k18298 in k17861 in k17858 in k17855 in k17852 in k17849 in k17327 in k17324 in k16801 in k16798 in k16795 in k16792 in k16789 in k16786 in k16783 in k16780 in k16777 in k16774 in k16771 in k16768 in k16765 in k16762 in k16759 in k16756 in k16753 in k16750 in k16747 in k16744 in k16741 in k16602 in k16599 in k16596 in k16593 in k16537 in k16534 in k16531 in k16528 in k16525 in k16522 in k16519 in k16516 in k15271 in k15202 in k15009 in k15006 in k14901 in k14850 in k7607 in k7604 in k5838 in k5545 in k5542 in k5538 in k5247 in k5244 in k5241 in k5238 */
static void C_ccall f_23050(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_23050,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_23054,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("error");
t4=*((C_word*)lf[6]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[23],((C_word*)t0)[2]);}
else{
t4=t2;
f_23054(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k23052 in k23048 in mm:make-off in k21827 in k18307 in k18304 in k18301 in k18298 in k17861 in k17858 in k17855 in k17852 in k17849 in k17327 in k17324 in k16801 in k16798 in k16795 in k16792 in k16789 in k16786 in k16783 in k16780 in k16777 in k16774 in k16771 in k16768 in k16765 in k16762 in k16759 in k16756 in k16753 in k16750 in k16747 in k16744 in k16741 in k16602 in k16599 in k16596 in k16593 in k16537 in k16534 in k16531 in k16528 in k16525 in k16522 in k16519 in k16516 in k15271 in k15202 in k15009 in k15006 in k14901 in k14850 in k7607 in k7604 in k5838 in k5545 in k5542 in k5538 in k5247 in k5244 in k5241 in k5238 */
static void C_ccall f_23054(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_22725(t7,t6);}

/* k22723 in mm:make-off in k21827 in k18307 in k18304 in k18301 in k18298 in k17861 in k17858 in k17855 in k17852 in k17849 in k17327 in k17324 in k16801 in k16798 in k16795 in k16792 in k16789 in k16786 in k16783 in k16780 in k16777 in k16774 in k16771 in k16768 in k16765 in k16762 in k16759 in k16756 in k16753 in k16750 in k16747 in k16744 in k16741 in k16602 in k16599 in k16596 in k16593 in k16537 in k16534 in k16531 in k16528 in k16525 in k16522 in k16519 in k16516 in k15271 in k15202 in k15009 in k15006 in k14901 in k14850 in k7607 in k7604 in k5838 in k5545 in k5542 in k5538 in k5247 in k5244 in k5241 in k5238 */
static void C_fcall f_22725(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word ab[42],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_22725,NULL,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|11,a[1]=(C_word)f_22728,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],a[7]=((C_word*)t0)[7],a[8]=((C_word*)t0)[8],a[9]=((C_word*)t0)[9],a[10]=((C_word*)t0)[10],a[11]=((C_word*)t0)[11],tmp=(C_word)a,a+=12,tmp);
if(C_truep((C_word)C_i_nullp(((C_word*)((C_word*)t0)[7])[1]))){
t3=t2;
f_22728(t3,C_SCHEME_UNDEFINED);}
else{
t3=(C_word)C_i_car(((C_word*)((C_word*)t0)[7])[1]);
t4=(C_word)C_eqp(t3,lf[558]);
if(C_truep(t4)){
t5=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_22915,a[2]=((C_word*)t0)[6],a[3]=t2,a[4]=((C_word*)t0)[7],a[5]=((C_word*)t0)[4],a[6]=((C_word*)t0)[5],a[7]=((C_word*)t0)[10],tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)((C_word*)t0)[5])[1])){
C_trace("error");
t6=*((C_word*)lf[6]+1);
((C_proc4)C_retrieve_proc(t6))(4,t6,t5,lf[21],lf[558]);}
else{
t6=t5;
f_22915(2,t6,C_SCHEME_UNDEFINED);}}
else{
t5=(C_word)C_eqp(t3,lf[559]);
if(C_truep(t5)){
t6=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_22950,a[2]=((C_word*)t0)[6],a[3]=t2,a[4]=((C_word*)t0)[7],a[5]=((C_word*)t0)[4],a[6]=((C_word*)t0)[3],a[7]=((C_word*)t0)[8],tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)((C_word*)t0)[3])[1])){
C_trace("error");
t7=*((C_word*)lf[6]+1);
((C_proc4)C_retrieve_proc(t7))(4,t7,t6,lf[21],lf[559]);}
else{
t7=t6;
f_22950(2,t7,C_SCHEME_UNDEFINED);}}
else{
t6=(C_word)C_eqp(t3,lf[561]);
if(C_truep(t6)){
t7=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_22985,a[2]=((C_word*)t0)[6],a[3]=t2,a[4]=((C_word*)t0)[7],a[5]=((C_word*)t0)[4],a[6]=((C_word*)t0)[2],a[7]=((C_word*)t0)[9],tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)((C_word*)t0)[2])[1])){
C_trace("error");
t8=*((C_word*)lf[6]+1);
((C_proc4)C_retrieve_proc(t8))(4,t8,t7,lf[21],lf[561]);}
else{
t8=t7;
f_22985(2,t8,C_SCHEME_UNDEFINED);}}
else{
t7=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_23014,a[2]=t2,a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[8],a[5]=((C_word*)t0)[7],tmp=(C_word)a,a+=6,tmp);
if(C_truep(((C_word*)((C_word*)t0)[4])[1])){
C_trace("error");
t8=*((C_word*)lf[6]+1);
((C_proc4)C_retrieve_proc(t8))(4,t8,t7,lf[12],((C_word*)t0)[6]);}
else{
t8=t7;
f_23014(2,t8,C_SCHEME_UNDEFINED);}}}}}}

/* k23012 in k22723 in mm:make-off in k21827 in k18307 in k18304 in k18301 in k18298 in k17861 in k17858 in k17855 in k17852 in k17849 in k17327 in k17324 in k16801 in k16798 in k16795 in k16792 in k16789 in k16786 in k16783 in k16780 in k16777 in k16774 in k16771 in k16768 in k16765 in k16762 in k16759 in k16756 in k16753 in k16750 in k16747 in k16744 in k16741 in k16602 in k16599 in k16596 in k16593 in k16537 in k16534 in k16531 in k16528 in k16525 in k16522 in k16519 in k16516 in k15271 in k15202 in k15009 in k15006 in k14901 in k14850 in k7607 in k7604 in k5838 in k5545 in k5542 in k5538 in k5247 in k5244 in k5241 in k5238 */
static void C_ccall f_23014(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_23014,2,t0,t1);}
t2=(C_word)C_i_car(((C_word*)((C_word*)t0)[5])[1]);
t3=C_mutate(((C_word *)((C_word*)t0)[4])+1,t2);
t4=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_23021,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[5],a[4]=((C_word*)t0)[3],tmp=(C_word)a,a+=5,tmp);
t5=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_23029,a[2]=((C_word*)t0)[4],a[3]=t4,tmp=(C_word)a,a+=4,tmp);
C_trace("keyword?");
t6=C_retrieve(lf[15]);
((C_proc3)C_retrieve_proc(t6))(3,t6,t5,((C_word*)((C_word*)t0)[4])[1]);}

/* k23027 in k23012 in k22723 in mm:make-off in k21827 in k18307 in k18304 in k18301 in k18298 in k17861 in k17858 in k17855 in k17852 in k17849 in k17327 in k17324 in k16801 in k16798 in k16795 in k16792 in k16789 in k16786 in k16783 in k16780 in k16777 in k16774 in k16771 in k16768 in k16765 in k16762 in k16759 in k16756 in k16753 in k16750 in k16747 in k16744 in k16741 in k16602 in k16599 in k16596 in k16593 in k16537 in k16534 in k16531 in k16528 in k16525 in k16522 in k16519 in k16516 in k15271 in k15202 in k15009 in k15006 in k14901 in k14850 in k7607 in k7604 in k5838 in k5545 in k5542 in k5538 in k5247 in k5244 in k5241 in k5238 */
static void C_ccall f_23029(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
if(C_truep(t1)){
C_trace("error");
t2=*((C_word*)lf[6]+1);
((C_proc4)C_retrieve_proc(t2))(4,t2,((C_word*)t0)[3],lf[16],((C_word*)((C_word*)t0)[2])[1]);}
else{
t2=((C_word*)t0)[3];
f_23021(2,t2,C_SCHEME_UNDEFINED);}}

/* k23019 in k23012 in k22723 in mm:make-off in k21827 in k18307 in k18304 in k18301 in k18298 in k17861 in k17858 in k17855 in k17852 in k17849 in k17327 in k17324 in k16801 in k16798 in k16795 in k16792 in k16789 in k16786 in k16783 in k16780 in k16777 in k16774 in k16771 in k16768 in k16765 in k16762 in k16759 in k16756 in k16753 in k16750 in k16747 in k16744 in k16741 in k16602 in k16599 in k16596 in k16593 in k16537 in k16534 in k16531 in k16528 in k16525 in k16522 in k16519 in k16516 in k15271 in k15202 in k15009 in k15006 in k14901 in k14850 in k7607 in k7604 in k5838 in k5545 in k5542 in k5538 in k5247 in k5244 in k5241 in k5238 */
static void C_ccall f_23021(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word *a;
t2=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[3])[1]);
t4=C_mutate(((C_word *)((C_word*)t0)[3])+1,t3);
t5=((C_word*)t0)[2];
f_22728(t5,t4);}

/* k22983 in k22723 in mm:make-off in k21827 in k18307 in k18304 in k18301 in k18298 in k17861 in k17858 in k17855 in k17852 in k17849 in k17327 in k17324 in k16801 in k16798 in k16795 in k16792 in k16789 in k16786 in k16783 in k16780 in k16777 in k16774 in k16771 in k16768 in k16765 in k16762 in k16759 in k16756 in k16753 in k16750 in k16747 in k16744 in k16741 in k16602 in k16599 in k16596 in k16593 in k16537 in k16534 in k16531 in k16528 in k16525 in k16522 in k16519 in k16516 in k15271 in k15202 in k15009 in k15006 in k14901 in k14850 in k7607 in k7604 in k5838 in k5545 in k5542 in k5538 in k5247 in k5244 in k5241 in k5238 */
static void C_ccall f_22985(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_22985,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_22989,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("error");
t4=*((C_word*)lf[6]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[23],((C_word*)t0)[2]);}
else{
t4=t2;
f_22989(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k22987 in k22983 in k22723 in mm:make-off in k21827 in k18307 in k18304 in k18301 in k18298 in k17861 in k17858 in k17855 in k17852 in k17849 in k17327 in k17324 in k16801 in k16798 in k16795 in k16792 in k16789 in k16786 in k16783 in k16780 in k16777 in k16774 in k16771 in k16768 in k16765 in k16762 in k16759 in k16756 in k16753 in k16750 in k16747 in k16744 in k16741 in k16602 in k16599 in k16596 in k16593 in k16537 in k16534 in k16531 in k16528 in k16525 in k16522 in k16519 in k16516 in k15271 in k15202 in k15009 in k15006 in k14901 in k14850 in k7607 in k7604 in k5838 in k5545 in k5542 in k5538 in k5247 in k5244 in k5241 in k5238 */
static void C_ccall f_22989(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_22728(t7,t6);}

/* k22948 in k22723 in mm:make-off in k21827 in k18307 in k18304 in k18301 in k18298 in k17861 in k17858 in k17855 in k17852 in k17849 in k17327 in k17324 in k16801 in k16798 in k16795 in k16792 in k16789 in k16786 in k16783 in k16780 in k16777 in k16774 in k16771 in k16768 in k16765 in k16762 in k16759 in k16756 in k16753 in k16750 in k16747 in k16744 in k16741 in k16602 in k16599 in k16596 in k16593 in k16537 in k16534 in k16531 in k16528 in k16525 in k16522 in k16519 in k16516 in k15271 in k15202 in k15009 in k15006 in k14901 in k14850 in k7607 in k7604 in k5838 in k5545 in k5542 in k5538 in k5247 in k5244 in k5241 in k5238 */
static void C_ccall f_22950(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_22950,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_22954,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("error");
t4=*((C_word*)lf[6]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[23],((C_word*)t0)[2]);}
else{
t4=t2;
f_22954(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k22952 in k22948 in k22723 in mm:make-off in k21827 in k18307 in k18304 in k18301 in k18298 in k17861 in k17858 in k17855 in k17852 in k17849 in k17327 in k17324 in k16801 in k16798 in k16795 in k16792 in k16789 in k16786 in k16783 in k16780 in k16777 in k16774 in k16771 in k16768 in k16765 in k16762 in k16759 in k16756 in k16753 in k16750 in k16747 in k16744 in k16741 in k16602 in k16599 in k16596 in k16593 in k16537 in k16534 in k16531 in k16528 in k16525 in k16522 in k16519 in k16516 in k15271 in k15202 in k15009 in k15006 in k14901 in k14850 in k7607 in k7604 in k5838 in k5545 in k5542 in k5538 in k5247 in k5244 in k5241 in k5238 */
static void C_ccall f_22954(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_22728(t7,t6);}

/* k22913 in k22723 in mm:make-off in k21827 in k18307 in k18304 in k18301 in k18298 in k17861 in k17858 in k17855 in k17852 in k17849 in k17327 in k17324 in k16801 in k16798 in k16795 in k16792 in k16789 in k16786 in k16783 in k16780 in k16777 in k16774 in k16771 in k16768 in k16765 in k16762 in k16759 in k16756 in k16753 in k16750 in k16747 in k16744 in k16741 in k16602 in k16599 in k16596 in k16593 in k16537 in k16534 in k16531 in k16528 in k16525 in k16522 in k16519 in k16516 in k15271 in k15202 in k15009 in k15006 in k14901 in k14850 in k7607 in k7604 in k5838 in k5545 in k5542 in k5538 in k5247 in k5244 in k5241 in k5238 */
static void C_ccall f_22915(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_22915,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_22919,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("error");
t4=*((C_word*)lf[6]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[23],((C_word*)t0)[2]);}
else{
t4=t2;
f_22919(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k22917 in k22913 in k22723 in mm:make-off in k21827 in k18307 in k18304 in k18301 in k18298 in k17861 in k17858 in k17855 in k17852 in k17849 in k17327 in k17324 in k16801 in k16798 in k16795 in k16792 in k16789 in k16786 in k16783 in k16780 in k16777 in k16774 in k16771 in k16768 in k16765 in k16762 in k16759 in k16756 in k16753 in k16750 in k16747 in k16744 in k16741 in k16602 in k16599 in k16596 in k16593 in k16537 in k16534 in k16531 in k16528 in k16525 in k16522 in k16519 in k16516 in k15271 in k15202 in k15009 in k15006 in k14901 in k14850 in k7607 in k7604 in k5838 in k5545 in k5542 in k5538 in k5247 in k5244 in k5241 in k5238 */
static void C_ccall f_22919(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_22728(t7,t6);}

/* k22726 in k22723 in mm:make-off in k21827 in k18307 in k18304 in k18301 in k18298 in k17861 in k17858 in k17855 in k17852 in k17849 in k17327 in k17324 in k16801 in k16798 in k16795 in k16792 in k16789 in k16786 in k16783 in k16780 in k16777 in k16774 in k16771 in k16768 in k16765 in k16762 in k16759 in k16756 in k16753 in k16750 in k16747 in k16744 in k16741 in k16602 in k16599 in k16596 in k16593 in k16537 in k16534 in k16531 in k16528 in k16525 in k16522 in k16519 in k16516 in k15271 in k15202 in k15009 in k15006 in k14901 in k14850 in k7607 in k7604 in k5838 in k5545 in k5542 in k5538 in k5247 in k5244 in k5241 in k5238 */
static void C_fcall f_22728(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word ab[38],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_22728,NULL,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_22731,a[2]=((C_word*)t0)[6],a[3]=((C_word*)t0)[7],a[4]=((C_word*)t0)[8],a[5]=((C_word*)t0)[9],a[6]=((C_word*)t0)[10],a[7]=((C_word*)t0)[11],tmp=(C_word)a,a+=8,tmp);
if(C_truep((C_word)C_i_nullp(((C_word*)((C_word*)t0)[7])[1]))){
t3=t2;
f_22731(t3,C_SCHEME_UNDEFINED);}
else{
t3=(C_word)C_i_car(((C_word*)((C_word*)t0)[7])[1]);
t4=(C_word)C_eqp(t3,lf[558]);
if(C_truep(t4)){
t5=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_22780,a[2]=((C_word*)t0)[6],a[3]=t2,a[4]=((C_word*)t0)[7],a[5]=((C_word*)t0)[4],a[6]=((C_word*)t0)[5],a[7]=((C_word*)t0)[10],tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)((C_word*)t0)[5])[1])){
C_trace("error");
t6=*((C_word*)lf[6]+1);
((C_proc4)C_retrieve_proc(t6))(4,t6,t5,lf[21],lf[558]);}
else{
t6=t5;
f_22780(2,t6,C_SCHEME_UNDEFINED);}}
else{
t5=(C_word)C_eqp(t3,lf[559]);
if(C_truep(t5)){
t6=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_22815,a[2]=((C_word*)t0)[6],a[3]=t2,a[4]=((C_word*)t0)[7],a[5]=((C_word*)t0)[4],a[6]=((C_word*)t0)[3],a[7]=((C_word*)t0)[8],tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)((C_word*)t0)[3])[1])){
C_trace("error");
t7=*((C_word*)lf[6]+1);
((C_proc4)C_retrieve_proc(t7))(4,t7,t6,lf[21],lf[559]);}
else{
t7=t6;
f_22815(2,t7,C_SCHEME_UNDEFINED);}}
else{
t6=(C_word)C_eqp(t3,lf[561]);
if(C_truep(t6)){
t7=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_22850,a[2]=((C_word*)t0)[6],a[3]=t2,a[4]=((C_word*)t0)[7],a[5]=((C_word*)t0)[4],a[6]=((C_word*)t0)[2],a[7]=((C_word*)t0)[9],tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)((C_word*)t0)[2])[1])){
C_trace("error");
t8=*((C_word*)lf[6]+1);
((C_proc4)C_retrieve_proc(t8))(4,t8,t7,lf[21],lf[561]);}
else{
t8=t7;
f_22850(2,t8,C_SCHEME_UNDEFINED);}}
else{
t7=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_22879,a[2]=t2,a[3]=((C_word*)t0)[2],a[4]=((C_word*)t0)[9],a[5]=((C_word*)t0)[7],tmp=(C_word)a,a+=6,tmp);
if(C_truep(((C_word*)((C_word*)t0)[4])[1])){
C_trace("error");
t8=*((C_word*)lf[6]+1);
((C_proc4)C_retrieve_proc(t8))(4,t8,t7,lf[12],((C_word*)t0)[6]);}
else{
t8=t7;
f_22879(2,t8,C_SCHEME_UNDEFINED);}}}}}}

/* k22877 in k22726 in k22723 in mm:make-off in k21827 in k18307 in k18304 in k18301 in k18298 in k17861 in k17858 in k17855 in k17852 in k17849 in k17327 in k17324 in k16801 in k16798 in k16795 in k16792 in k16789 in k16786 in k16783 in k16780 in k16777 in k16774 in k16771 in k16768 in k16765 in k16762 in k16759 in k16756 in k16753 in k16750 in k16747 in k16744 in k16741 in k16602 in k16599 in k16596 in k16593 in k16537 in k16534 in k16531 in k16528 in k16525 in k16522 in k16519 in k16516 in k15271 in k15202 in k15009 in k15006 in k14901 in k14850 in k7607 in k7604 in k5838 in k5545 in k5542 in k5538 in k5247 in k5244 in k5241 in k5238 */
static void C_ccall f_22879(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_22879,2,t0,t1);}
t2=(C_word)C_i_car(((C_word*)((C_word*)t0)[5])[1]);
t3=C_mutate(((C_word *)((C_word*)t0)[4])+1,t2);
t4=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_22886,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[5],a[4]=((C_word*)t0)[3],tmp=(C_word)a,a+=5,tmp);
t5=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_22894,a[2]=((C_word*)t0)[4],a[3]=t4,tmp=(C_word)a,a+=4,tmp);
C_trace("keyword?");
t6=C_retrieve(lf[15]);
((C_proc3)C_retrieve_proc(t6))(3,t6,t5,((C_word*)((C_word*)t0)[4])[1]);}

/* k22892 in k22877 in k22726 in k22723 in mm:make-off in k21827 in k18307 in k18304 in k18301 in k18298 in k17861 in k17858 in k17855 in k17852 in k17849 in k17327 in k17324 in k16801 in k16798 in k16795 in k16792 in k16789 in k16786 in k16783 in k16780 in k16777 in k16774 in k16771 in k16768 in k16765 in k16762 in k16759 in k16756 in k16753 in k16750 in k16747 in k16744 in k16741 in k16602 in k16599 in k16596 in k16593 in k16537 in k16534 in k16531 in k16528 in k16525 in k16522 in k16519 in k16516 in k15271 in k15202 in k15009 in k15006 in k14901 in k14850 in k7607 in k7604 in k5838 in k5545 in k5542 in k5538 in k5247 in k5244 in k5241 in k5238 */
static void C_ccall f_22894(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
if(C_truep(t1)){
C_trace("error");
t2=*((C_word*)lf[6]+1);
((C_proc4)C_retrieve_proc(t2))(4,t2,((C_word*)t0)[3],lf[16],((C_word*)((C_word*)t0)[2])[1]);}
else{
t2=((C_word*)t0)[3];
f_22886(2,t2,C_SCHEME_UNDEFINED);}}

/* k22884 in k22877 in k22726 in k22723 in mm:make-off in k21827 in k18307 in k18304 in k18301 in k18298 in k17861 in k17858 in k17855 in k17852 in k17849 in k17327 in k17324 in k16801 in k16798 in k16795 in k16792 in k16789 in k16786 in k16783 in k16780 in k16777 in k16774 in k16771 in k16768 in k16765 in k16762 in k16759 in k16756 in k16753 in k16750 in k16747 in k16744 in k16741 in k16602 in k16599 in k16596 in k16593 in k16537 in k16534 in k16531 in k16528 in k16525 in k16522 in k16519 in k16516 in k15271 in k15202 in k15009 in k15006 in k14901 in k14850 in k7607 in k7604 in k5838 in k5545 in k5542 in k5538 in k5247 in k5244 in k5241 in k5238 */
static void C_ccall f_22886(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word *a;
t2=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[3])[1]);
t4=C_mutate(((C_word *)((C_word*)t0)[3])+1,t3);
t5=((C_word*)t0)[2];
f_22731(t5,t4);}

/* k22848 in k22726 in k22723 in mm:make-off in k21827 in k18307 in k18304 in k18301 in k18298 in k17861 in k17858 in k17855 in k17852 in k17849 in k17327 in k17324 in k16801 in k16798 in k16795 in k16792 in k16789 in k16786 in k16783 in k16780 in k16777 in k16774 in k16771 in k16768 in k16765 in k16762 in k16759 in k16756 in k16753 in k16750 in k16747 in k16744 in k16741 in k16602 in k16599 in k16596 in k16593 in k16537 in k16534 in k16531 in k16528 in k16525 in k16522 in k16519 in k16516 in k15271 in k15202 in k15009 in k15006 in k14901 in k14850 in k7607 in k7604 in k5838 in k5545 in k5542 in k5538 in k5247 in k5244 in k5241 in k5238 */
static void C_ccall f_22850(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_22850,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_22854,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("error");
t4=*((C_word*)lf[6]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[23],((C_word*)t0)[2]);}
else{
t4=t2;
f_22854(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k22852 in k22848 in k22726 in k22723 in mm:make-off in k21827 in k18307 in k18304 in k18301 in k18298 in k17861 in k17858 in k17855 in k17852 in k17849 in k17327 in k17324 in k16801 in k16798 in k16795 in k16792 in k16789 in k16786 in k16783 in k16780 in k16777 in k16774 in k16771 in k16768 in k16765 in k16762 in k16759 in k16756 in k16753 in k16750 in k16747 in k16744 in k16741 in k16602 in k16599 in k16596 in k16593 in k16537 in k16534 in k16531 in k16528 in k16525 in k16522 in k16519 in k16516 in k15271 in k15202 in k15009 in k15006 in k14901 in k14850 in k7607 in k7604 in k5838 in k5545 in k5542 in k5538 in k5247 in k5244 in k5241 in k5238 */
static void C_ccall f_22854(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_22731(t7,t6);}

/* k22813 in k22726 in k22723 in mm:make-off in k21827 in k18307 in k18304 in k18301 in k18298 in k17861 in k17858 in k17855 in k17852 in k17849 in k17327 in k17324 in k16801 in k16798 in k16795 in k16792 in k16789 in k16786 in k16783 in k16780 in k16777 in k16774 in k16771 in k16768 in k16765 in k16762 in k16759 in k16756 in k16753 in k16750 in k16747 in k16744 in k16741 in k16602 in k16599 in k16596 in k16593 in k16537 in k16534 in k16531 in k16528 in k16525 in k16522 in k16519 in k16516 in k15271 in k15202 in k15009 in k15006 in k14901 in k14850 in k7607 in k7604 in k5838 in k5545 in k5542 in k5538 in k5247 in k5244 in k5241 in k5238 */
static void C_ccall f_22815(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_22815,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_22819,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("error");
t4=*((C_word*)lf[6]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[23],((C_word*)t0)[2]);}
else{
t4=t2;
f_22819(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k22817 in k22813 in k22726 in k22723 in mm:make-off in k21827 in k18307 in k18304 in k18301 in k18298 in k17861 in k17858 in k17855 in k17852 in k17849 in k17327 in k17324 in k16801 in k16798 in k16795 in k16792 in k16789 in k16786 in k16783 in k16780 in k16777 in k16774 in k16771 in k16768 in k16765 in k16762 in k16759 in k16756 in k16753 in k16750 in k16747 in k16744 in k16741 in k16602 in k16599 in k16596 in k16593 in k16537 in k16534 in k16531 in k16528 in k16525 in k16522 in k16519 in k16516 in k15271 in k15202 in k15009 in k15006 in k14901 in k14850 in k7607 in k7604 in k5838 in k5545 in k5542 in k5538 in k5247 in k5244 in k5241 in k5238 */
static void C_ccall f_22819(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_22731(t7,t6);}

/* k22778 in k22726 in k22723 in mm:make-off in k21827 in k18307 in k18304 in k18301 in k18298 in k17861 in k17858 in k17855 in k17852 in k17849 in k17327 in k17324 in k16801 in k16798 in k16795 in k16792 in k16789 in k16786 in k16783 in k16780 in k16777 in k16774 in k16771 in k16768 in k16765 in k16762 in k16759 in k16756 in k16753 in k16750 in k16747 in k16744 in k16741 in k16602 in k16599 in k16596 in k16593 in k16537 in k16534 in k16531 in k16528 in k16525 in k16522 in k16519 in k16516 in k15271 in k15202 in k15009 in k15006 in k14901 in k14850 in k7607 in k7604 in k5838 in k5545 in k5542 in k5538 in k5247 in k5244 in k5241 in k5238 */
static void C_ccall f_22780(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_22780,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_22784,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("error");
t4=*((C_word*)lf[6]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[23],((C_word*)t0)[2]);}
else{
t4=t2;
f_22784(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k22782 in k22778 in k22726 in k22723 in mm:make-off in k21827 in k18307 in k18304 in k18301 in k18298 in k17861 in k17858 in k17855 in k17852 in k17849 in k17327 in k17324 in k16801 in k16798 in k16795 in k16792 in k16789 in k16786 in k16783 in k16780 in k16777 in k16774 in k16771 in k16768 in k16765 in k16762 in k16759 in k16756 in k16753 in k16750 in k16747 in k16744 in k16741 in k16602 in k16599 in k16596 in k16593 in k16537 in k16534 in k16531 in k16528 in k16525 in k16522 in k16519 in k16516 in k15271 in k15202 in k15009 in k15006 in k14901 in k14850 in k7607 in k7604 in k5838 in k5545 in k5542 in k5538 in k5247 in k5244 in k5241 in k5238 */
static void C_ccall f_22784(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_22731(t7,t6);}

/* k22729 in k22726 in k22723 in mm:make-off in k21827 in k18307 in k18304 in k18301 in k18298 in k17861 in k17858 in k17855 in k17852 in k17849 in k17327 in k17324 in k16801 in k16798 in k16795 in k16792 in k16789 in k16786 in k16783 in k16780 in k16777 in k16774 in k16771 in k16768 in k16765 in k16762 in k16759 in k16756 in k16753 in k16750 in k16747 in k16744 in k16741 in k16602 in k16599 in k16596 in k16593 in k16537 in k16534 in k16531 in k16528 in k16525 in k16522 in k16519 in k16516 in k15271 in k15202 in k15009 in k15006 in k14901 in k14850 in k7607 in k7604 in k5838 in k5545 in k5542 in k5538 in k5247 in k5244 in k5241 in k5238 */
static void C_fcall f_22731(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[6],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_22731,NULL,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_22734,a[2]=((C_word*)t0)[4],a[3]=((C_word*)t0)[5],a[4]=((C_word*)t0)[6],a[5]=((C_word*)t0)[7],tmp=(C_word)a,a+=6,tmp);
if(C_truep((C_word)C_i_nullp(((C_word*)((C_word*)t0)[3])[1]))){
t3=t2;
f_22734(2,t3,C_SCHEME_UNDEFINED);}
else{
C_trace("error");
t3=*((C_word*)lf[6]+1);
((C_proc4)C_retrieve_proc(t3))(4,t3,t2,lf[7],((C_word*)t0)[2]);}}

/* k22732 in k22729 in k22726 in k22723 in mm:make-off in k21827 in k18307 in k18304 in k18301 in k18298 in k17861 in k17858 in k17855 in k17852 in k17849 in k17327 in k17324 in k16801 in k16798 in k16795 in k16792 in k16789 in k16786 in k16783 in k16780 in k16777 in k16774 in k16771 in k16768 in k16765 in k16762 in k16759 in k16756 in k16753 in k16750 in k16747 in k16744 in k16741 in k16602 in k16599 in k16596 in k16593 in k16537 in k16534 in k16531 in k16528 in k16525 in k16522 in k16519 in k16516 in k15271 in k15202 in k15009 in k15006 in k14901 in k14850 in k7607 in k7604 in k5838 in k5545 in k5542 in k5538 in k5247 in k5244 in k5241 in k5238 */
static void C_ccall f_22734(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word ab[3],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_22734,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_22738,a[2]=((C_word)li325),tmp=(C_word)a,a+=3,tmp);
((C_proc7)(void*)(*((C_word*)t2+1)))(7,t2,((C_word*)t0)[5],C_fix(8),((C_word*)((C_word*)t0)[4])[1],((C_word*)((C_word*)t0)[3])[1],((C_word*)((C_word*)t0)[2])[1],C_fix(0));}

/* f_22738 in k22732 in k22729 in k22726 in k22723 in mm:make-off in k21827 in k18307 in k18304 in k18301 in k18298 in k17861 in k17858 in k17855 in k17852 in k17849 in k17327 in k17324 in k16801 in k16798 in k16795 in k16792 in k16789 in k16786 in k16783 in k16780 in k16777 in k16774 in k16771 in k16768 in k16765 in k16762 in k16759 in k16756 in k16753 in k16750 in k16747 in k16744 in k16741 in k16602 in k16599 in k16596 in k16593 in k16537 in k16534 in k16531 in k16528 in k16525 in k16522 in k16519 in k16516 in k15271 in k15202 in k15009 in k15006 in k14901 in k14850 in k7607 in k7604 in k5838 in k5545 in k5542 in k5538 in k5247 in k5244 in k5241 in k5238 */
static void C_ccall f_22738(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4,C_word t5,C_word t6){
C_word tmp;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word ab[5],*a=ab;
if(c!=7) C_bad_argc_2(c,7,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr7,(void*)f_22738,7,t0,t1,t2,t3,t4,t5,t6);}
t7=(C_word)C_a_i_bytevector(&a,1,C_fix(3));
t8=(C_word)C_i_foreign_fixnum_argumentp(t2);
t9=(C_word)C_i_foreign_flonum_argumentp(t3);
t10=(C_word)C_i_foreign_fixnum_argumentp(t4);
t11=(C_word)C_i_foreign_fixnum_argumentp(t5);
t12=(C_word)C_i_foreign_fixnum_argumentp(t6);
t13=t1;
((C_proc2)(void*)(*((C_word*)t13+1)))(2,t13,(C_word)stub4035(t7,t8,t9,t10,t11,t12));}

/* mm:on? in k21827 in k18307 in k18304 in k18301 in k18298 in k17861 in k17858 in k17855 in k17852 in k17849 in k17327 in k17324 in k16801 in k16798 in k16795 in k16792 in k16789 in k16786 in k16783 in k16780 in k16777 in k16774 in k16771 in k16768 in k16765 in k16762 in k16759 in k16756 in k16753 in k16750 in k16747 in k16744 in k16741 in k16602 in k16599 in k16596 in k16593 in k16537 in k16534 in k16531 in k16528 in k16525 in k16522 in k16519 in k16516 in k15271 in k15202 in k15009 in k15006 in k14901 in k14850 in k7607 in k7604 in k5838 in k5545 in k5542 in k5538 in k5247 in k5244 in k5241 in k5238 */
static void C_ccall f_22702(C_word c,C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word ab[3],*a=ab;
if(c!=3) C_bad_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr3,(void*)f_22702,3,t0,t1,t2);}
t3=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_22707,a[2]=((C_word)li323),tmp=(C_word)a,a+=3,tmp);
((C_proc4)(void*)(*((C_word*)t3+1)))(4,t3,t1,t2,C_fix(9));}

/* f_22707 in mm:on? in k21827 in k18307 in k18304 in k18301 in k18298 in k17861 in k17858 in k17855 in k17852 in k17849 in k17327 in k17324 in k16801 in k16798 in k16795 in k16792 in k16789 in k16786 in k16783 in k16780 in k16777 in k16774 in k16771 in k16768 in k16765 in k16762 in k16759 in k16756 in k16753 in k16750 in k16747 in k16744 in k16741 in k16602 in k16599 in k16596 in k16593 in k16537 in k16534 in k16531 in k16528 in k16525 in k16522 in k16519 in k16516 in k15271 in k15202 in k15009 in k15006 in k14901 in k14850 in k7607 in k7604 in k5838 in k5545 in k5542 in k5538 in k5247 in k5244 in k5241 in k5238 */
static void C_ccall f_22707(C_word c,C_word t0,C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word t6;
C_word *a;
if(c!=4) C_bad_argc_2(c,4,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr4,(void*)f_22707,4,t0,t1,t2,t3);}
t4=(C_truep(t2)?(C_word)C_i_foreign_pointer_argumentp(t2):C_SCHEME_FALSE);
t5=(C_word)C_i_foreign_fixnum_argumentp(t3);
t6=t1;
((C_proc2)(void*)(*((C_word*)t6+1)))(2,t6,(C_word)stub3956(C_SCHEME_UNDEFINED,t4,t5));}

/* mm:make-on in k21827 in k18307 in k18304 in k18301 in k18298 in k17861 in k17858 in k17855 in k17852 in k17849 in k17327 in k17324 in k16801 in k16798 in k16795 in k16792 in k16789 in k16786 in k16783 in k16780 in k16777 in k16774 in k16771 in k16768 in k16765 in k16762 in k16759 in k16756 in k16753 in k16750 in k16747 in k16744 in k16741 in k16602 in k16599 in k16596 in k16593 in k16537 in k16534 in k16531 in k16528 in k16525 in k16522 in k16519 in k16516 in k15271 in k15202 in k15009 in k15006 in k14901 in k14850 in k7607 in k7604 in k5838 in k5545 in k5542 in k5538 in k5247 in k5244 in k5241 in k5238 */
static void C_ccall f_21973(C_word c,C_word t0,C_word t1,...){
C_word tmp;
C_word t2;
va_list v;
C_word *a,c2=c;
C_save_rest(t1,c2,2);
C_check_for_interrupt;
if(!C_demand(c*C_SIZEOF_PAIR+72)){
C_save_and_reclaim((void*)tr2r,(void*)f_21973r,2,t0,t1);}
else{
a=C_alloc((c-2)*3);
t2=C_restore_rest(a,C_rest_count(0));
f_21973r(t0,t1,t2);}}

static void C_ccall f_21973r(C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word t14;
C_word t15;
C_word t16;
C_word t17;
C_word t18;
C_word t19;
C_word t20;
C_word t21;
C_word t22;
C_word t23;
C_word t24;
C_word t25;
C_word t26;
C_word t27;
C_word t28;
C_word t29;
C_word t30;
C_word t31;
C_word t32;
C_word t33;
C_word t34;
C_word *a=C_alloc(72);
t3=C_fix(0);
t4=(*a=C_VECTOR_TYPE|1,a[1]=t3,tmp=(C_word)a,a+=2,tmp);
t5=C_fix(60);
t6=(*a=C_VECTOR_TYPE|1,a[1]=t5,tmp=(C_word)a,a+=2,tmp);
t7=C_fix(64);
t8=(*a=C_VECTOR_TYPE|1,a[1]=t7,tmp=(C_word)a,a+=2,tmp);
t9=C_fix(0);
t10=(*a=C_VECTOR_TYPE|1,a[1]=t9,tmp=(C_word)a,a+=2,tmp);
t11=C_SCHEME_FALSE;
t12=(*a=C_VECTOR_TYPE|1,a[1]=t11,tmp=(C_word)a,a+=2,tmp);
t13=C_SCHEME_FALSE;
t14=(*a=C_VECTOR_TYPE|1,a[1]=t13,tmp=(C_word)a,a+=2,tmp);
t15=C_SCHEME_FALSE;
t16=(*a=C_VECTOR_TYPE|1,a[1]=t15,tmp=(C_word)a,a+=2,tmp);
t17=C_SCHEME_FALSE;
t18=(*a=C_VECTOR_TYPE|1,a[1]=t17,tmp=(C_word)a,a+=2,tmp);
t19=t2;
t20=(*a=C_VECTOR_TYPE|1,a[1]=t19,tmp=(C_word)a,a+=2,tmp);
t21=C_SCHEME_FALSE;
t22=(*a=C_VECTOR_TYPE|1,a[1]=t21,tmp=(C_word)a,a+=2,tmp);
t23=(*a=C_CLOSURE_TYPE|13,a[1]=(C_word)f_21977,a[2]=t18,a[3]=t16,a[4]=t14,a[5]=t22,a[6]=t12,a[7]=t2,a[8]=t20,a[9]=t8,a[10]=t6,a[11]=t10,a[12]=t4,a[13]=t1,tmp=(C_word)a,a+=14,tmp);
if(C_truep((C_word)C_i_nullp(((C_word*)t20)[1]))){
t24=t23;
f_21977(t24,C_SCHEME_UNDEFINED);}
else{
t24=(C_word)C_i_car(((C_word*)t20)[1]);
t25=(C_word)C_eqp(t24,lf[558]);
if(C_truep(t25)){
t26=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_22545,a[2]=t2,a[3]=t23,a[4]=t20,a[5]=t22,a[6]=t12,a[7]=t4,tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)t12)[1])){
C_trace("error");
t27=*((C_word*)lf[6]+1);
((C_proc4)C_retrieve_proc(t27))(4,t27,t26,lf[21],lf[558]);}
else{
t27=t26;
f_22545(2,t27,C_SCHEME_UNDEFINED);}}
else{
t26=(C_word)C_eqp(t24,lf[559]);
if(C_truep(t26)){
t27=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_22580,a[2]=t2,a[3]=t23,a[4]=t20,a[5]=t22,a[6]=t14,a[7]=t6,tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)t14)[1])){
C_trace("error");
t28=*((C_word*)lf[6]+1);
((C_proc4)C_retrieve_proc(t28))(4,t28,t27,lf[21],lf[559]);}
else{
t28=t27;
f_22580(2,t28,C_SCHEME_UNDEFINED);}}
else{
t27=(C_word)C_eqp(t24,lf[560]);
if(C_truep(t27)){
t28=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_22615,a[2]=t2,a[3]=t23,a[4]=t20,a[5]=t22,a[6]=t16,a[7]=t8,tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)t16)[1])){
C_trace("error");
t29=*((C_word*)lf[6]+1);
((C_proc4)C_retrieve_proc(t29))(4,t29,t28,lf[21],lf[560]);}
else{
t29=t28;
f_22615(2,t29,C_SCHEME_UNDEFINED);}}
else{
t28=(C_word)C_eqp(t24,lf[561]);
if(C_truep(t28)){
t29=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_22650,a[2]=t2,a[3]=t23,a[4]=t20,a[5]=t22,a[6]=t18,a[7]=t10,tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)t18)[1])){
C_trace("error");
t30=*((C_word*)lf[6]+1);
((C_proc4)C_retrieve_proc(t30))(4,t30,t29,lf[21],lf[561]);}
else{
t30=t29;
f_22650(2,t30,C_SCHEME_UNDEFINED);}}
else{
t29=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_22679,a[2]=t23,a[3]=t12,a[4]=t4,a[5]=t20,tmp=(C_word)a,a+=6,tmp);
if(C_truep(((C_word*)t22)[1])){
C_trace("error");
t30=*((C_word*)lf[6]+1);
((C_proc4)C_retrieve_proc(t30))(4,t30,t29,lf[12],t2);}
else{
t30=t29;
f_22679(2,t30,C_SCHEME_UNDEFINED);}}}}}}}

/* k22677 in mm:make-on in k21827 in k18307 in k18304 in k18301 in k18298 in k17861 in k17858 in k17855 in k17852 in k17849 in k17327 in k17324 in k16801 in k16798 in k16795 in k16792 in k16789 in k16786 in k16783 in k16780 in k16777 in k16774 in k16771 in k16768 in k16765 in k16762 in k16759 in k16756 in k16753 in k16750 in k16747 in k16744 in k16741 in k16602 in k16599 in k16596 in k16593 in k16537 in k16534 in k16531 in k16528 in k16525 in k16522 in k16519 in k16516 in k15271 in k15202 in k15009 in k15006 in k14901 in k14850 in k7607 in k7604 in k5838 in k5545 in k5542 in k5538 in k5247 in k5244 in k5241 in k5238 */
static void C_ccall f_22679(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_22679,2,t0,t1);}
t2=(C_word)C_i_car(((C_word*)((C_word*)t0)[5])[1]);
t3=C_mutate(((C_word *)((C_word*)t0)[4])+1,t2);
t4=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_22686,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[5],a[4]=((C_word*)t0)[3],tmp=(C_word)a,a+=5,tmp);
t5=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_22694,a[2]=((C_word*)t0)[4],a[3]=t4,tmp=(C_word)a,a+=4,tmp);
C_trace("keyword?");
t6=C_retrieve(lf[15]);
((C_proc3)C_retrieve_proc(t6))(3,t6,t5,((C_word*)((C_word*)t0)[4])[1]);}

/* k22692 in k22677 in mm:make-on in k21827 in k18307 in k18304 in k18301 in k18298 in k17861 in k17858 in k17855 in k17852 in k17849 in k17327 in k17324 in k16801 in k16798 in k16795 in k16792 in k16789 in k16786 in k16783 in k16780 in k16777 in k16774 in k16771 in k16768 in k16765 in k16762 in k16759 in k16756 in k16753 in k16750 in k16747 in k16744 in k16741 in k16602 in k16599 in k16596 in k16593 in k16537 in k16534 in k16531 in k16528 in k16525 in k16522 in k16519 in k16516 in k15271 in k15202 in k15009 in k15006 in k14901 in k14850 in k7607 in k7604 in k5838 in k5545 in k5542 in k5538 in k5247 in k5244 in k5241 in k5238 */
static void C_ccall f_22694(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
if(C_truep(t1)){
C_trace("error");
t2=*((C_word*)lf[6]+1);
((C_proc4)C_retrieve_proc(t2))(4,t2,((C_word*)t0)[3],lf[16],((C_word*)((C_word*)t0)[2])[1]);}
else{
t2=((C_word*)t0)[3];
f_22686(2,t2,C_SCHEME_UNDEFINED);}}

/* k22684 in k22677 in mm:make-on in k21827 in k18307 in k18304 in k18301 in k18298 in k17861 in k17858 in k17855 in k17852 in k17849 in k17327 in k17324 in k16801 in k16798 in k16795 in k16792 in k16789 in k16786 in k16783 in k16780 in k16777 in k16774 in k16771 in k16768 in k16765 in k16762 in k16759 in k16756 in k16753 in k16750 in k16747 in k16744 in k16741 in k16602 in k16599 in k16596 in k16593 in k16537 in k16534 in k16531 in k16528 in k16525 in k16522 in k16519 in k16516 in k15271 in k15202 in k15009 in k15006 in k14901 in k14850 in k7607 in k7604 in k5838 in k5545 in k5542 in k5538 in k5247 in k5244 in k5241 in k5238 */
static void C_ccall f_22686(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word *a;
t2=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[3])[1]);
t4=C_mutate(((C_word *)((C_word*)t0)[3])+1,t3);
t5=((C_word*)t0)[2];
f_21977(t5,t4);}

/* k22648 in mm:make-on in k21827 in k18307 in k18304 in k18301 in k18298 in k17861 in k17858 in k17855 in k17852 in k17849 in k17327 in k17324 in k16801 in k16798 in k16795 in k16792 in k16789 in k16786 in k16783 in k16780 in k16777 in k16774 in k16771 in k16768 in k16765 in k16762 in k16759 in k16756 in k16753 in k16750 in k16747 in k16744 in k16741 in k16602 in k16599 in k16596 in k16593 in k16537 in k16534 in k16531 in k16528 in k16525 in k16522 in k16519 in k16516 in k15271 in k15202 in k15009 in k15006 in k14901 in k14850 in k7607 in k7604 in k5838 in k5545 in k5542 in k5538 in k5247 in k5244 in k5241 in k5238 */
static void C_ccall f_22650(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_22650,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_22654,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("error");
t4=*((C_word*)lf[6]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[23],((C_word*)t0)[2]);}
else{
t4=t2;
f_22654(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k22652 in k22648 in mm:make-on in k21827 in k18307 in k18304 in k18301 in k18298 in k17861 in k17858 in k17855 in k17852 in k17849 in k17327 in k17324 in k16801 in k16798 in k16795 in k16792 in k16789 in k16786 in k16783 in k16780 in k16777 in k16774 in k16771 in k16768 in k16765 in k16762 in k16759 in k16756 in k16753 in k16750 in k16747 in k16744 in k16741 in k16602 in k16599 in k16596 in k16593 in k16537 in k16534 in k16531 in k16528 in k16525 in k16522 in k16519 in k16516 in k15271 in k15202 in k15009 in k15006 in k14901 in k14850 in k7607 in k7604 in k5838 in k5545 in k5542 in k5538 in k5247 in k5244 in k5241 in k5238 */
static void C_ccall f_22654(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_21977(t7,t6);}

/* k22613 in mm:make-on in k21827 in k18307 in k18304 in k18301 in k18298 in k17861 in k17858 in k17855 in k17852 in k17849 in k17327 in k17324 in k16801 in k16798 in k16795 in k16792 in k16789 in k16786 in k16783 in k16780 in k16777 in k16774 in k16771 in k16768 in k16765 in k16762 in k16759 in k16756 in k16753 in k16750 in k16747 in k16744 in k16741 in k16602 in k16599 in k16596 in k16593 in k16537 in k16534 in k16531 in k16528 in k16525 in k16522 in k16519 in k16516 in k15271 in k15202 in k15009 in k15006 in k14901 in k14850 in k7607 in k7604 in k5838 in k5545 in k5542 in k5538 in k5247 in k5244 in k5241 in k5238 */
static void C_ccall f_22615(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_22615,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_22619,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("error");
t4=*((C_word*)lf[6]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[23],((C_word*)t0)[2]);}
else{
t4=t2;
f_22619(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k22617 in k22613 in mm:make-on in k21827 in k18307 in k18304 in k18301 in k18298 in k17861 in k17858 in k17855 in k17852 in k17849 in k17327 in k17324 in k16801 in k16798 in k16795 in k16792 in k16789 in k16786 in k16783 in k16780 in k16777 in k16774 in k16771 in k16768 in k16765 in k16762 in k16759 in k16756 in k16753 in k16750 in k16747 in k16744 in k16741 in k16602 in k16599 in k16596 in k16593 in k16537 in k16534 in k16531 in k16528 in k16525 in k16522 in k16519 in k16516 in k15271 in k15202 in k15009 in k15006 in k14901 in k14850 in k7607 in k7604 in k5838 in k5545 in k5542 in k5538 in k5247 in k5244 in k5241 in k5238 */
static void C_ccall f_22619(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_21977(t7,t6);}

/* k22578 in mm:make-on in k21827 in k18307 in k18304 in k18301 in k18298 in k17861 in k17858 in k17855 in k17852 in k17849 in k17327 in k17324 in k16801 in k16798 in k16795 in k16792 in k16789 in k16786 in k16783 in k16780 in k16777 in k16774 in k16771 in k16768 in k16765 in k16762 in k16759 in k16756 in k16753 in k16750 in k16747 in k16744 in k16741 in k16602 in k16599 in k16596 in k16593 in k16537 in k16534 in k16531 in k16528 in k16525 in k16522 in k16519 in k16516 in k15271 in k15202 in k15009 in k15006 in k14901 in k14850 in k7607 in k7604 in k5838 in k5545 in k5542 in k5538 in k5247 in k5244 in k5241 in k5238 */
static void C_ccall f_22580(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_22580,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_22584,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("error");
t4=*((C_word*)lf[6]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[23],((C_word*)t0)[2]);}
else{
t4=t2;
f_22584(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k22582 in k22578 in mm:make-on in k21827 in k18307 in k18304 in k18301 in k18298 in k17861 in k17858 in k17855 in k17852 in k17849 in k17327 in k17324 in k16801 in k16798 in k16795 in k16792 in k16789 in k16786 in k16783 in k16780 in k16777 in k16774 in k16771 in k16768 in k16765 in k16762 in k16759 in k16756 in k16753 in k16750 in k16747 in k16744 in k16741 in k16602 in k16599 in k16596 in k16593 in k16537 in k16534 in k16531 in k16528 in k16525 in k16522 in k16519 in k16516 in k15271 in k15202 in k15009 in k15006 in k14901 in k14850 in k7607 in k7604 in k5838 in k5545 in k5542 in k5538 in k5247 in k5244 in k5241 in k5238 */
static void C_ccall f_22584(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_21977(t7,t6);}

/* k22543 in mm:make-on in k21827 in k18307 in k18304 in k18301 in k18298 in k17861 in k17858 in k17855 in k17852 in k17849 in k17327 in k17324 in k16801 in k16798 in k16795 in k16792 in k16789 in k16786 in k16783 in k16780 in k16777 in k16774 in k16771 in k16768 in k16765 in k16762 in k16759 in k16756 in k16753 in k16750 in k16747 in k16744 in k16741 in k16602 in k16599 in k16596 in k16593 in k16537 in k16534 in k16531 in k16528 in k16525 in k16522 in k16519 in k16516 in k15271 in k15202 in k15009 in k15006 in k14901 in k14850 in k7607 in k7604 in k5838 in k5545 in k5542 in k5538 in k5247 in k5244 in k5241 in k5238 */
static void C_ccall f_22545(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_22545,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_22549,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("error");
t4=*((C_word*)lf[6]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[23],((C_word*)t0)[2]);}
else{
t4=t2;
f_22549(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k22547 in k22543 in mm:make-on in k21827 in k18307 in k18304 in k18301 in k18298 in k17861 in k17858 in k17855 in k17852 in k17849 in k17327 in k17324 in k16801 in k16798 in k16795 in k16792 in k16789 in k16786 in k16783 in k16780 in k16777 in k16774 in k16771 in k16768 in k16765 in k16762 in k16759 in k16756 in k16753 in k16750 in k16747 in k16744 in k16741 in k16602 in k16599 in k16596 in k16593 in k16537 in k16534 in k16531 in k16528 in k16525 in k16522 in k16519 in k16516 in k15271 in k15202 in k15009 in k15006 in k14901 in k14850 in k7607 in k7604 in k5838 in k5545 in k5542 in k5538 in k5247 in k5244 in k5241 in k5238 */
static void C_ccall f_22549(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_21977(t7,t6);}

/* k21975 in mm:make-on in k21827 in k18307 in k18304 in k18301 in k18298 in k17861 in k17858 in k17855 in k17852 in k17849 in k17327 in k17324 in k16801 in k16798 in k16795 in k16792 in k16789 in k16786 in k16783 in k16780 in k16777 in k16774 in k16771 in k16768 in k16765 in k16762 in k16759 in k16756 in k16753 in k16750 in k16747 in k16744 in k16741 in k16602 in k16599 in k16596 in k16593 in k16537 in k16534 in k16531 in k16528 in k16525 in k16522 in k16519 in k16516 in k15271 in k15202 in k15009 in k15006 in k14901 in k14850 in k7607 in k7604 in k5838 in k5545 in k5542 in k5538 in k5247 in k5244 in k5241 in k5238 */
static void C_fcall f_21977(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word ab[52],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_21977,NULL,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|13,a[1]=(C_word)f_21980,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],a[7]=((C_word*)t0)[7],a[8]=((C_word*)t0)[8],a[9]=((C_word*)t0)[9],a[10]=((C_word*)t0)[10],a[11]=((C_word*)t0)[11],a[12]=((C_word*)t0)[12],a[13]=((C_word*)t0)[13],tmp=(C_word)a,a+=14,tmp);
if(C_truep((C_word)C_i_nullp(((C_word*)((C_word*)t0)[8])[1]))){
t3=t2;
f_21980(t3,C_SCHEME_UNDEFINED);}
else{
t3=(C_word)C_i_car(((C_word*)((C_word*)t0)[8])[1]);
t4=(C_word)C_eqp(t3,lf[558]);
if(C_truep(t4)){
t5=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_22375,a[2]=((C_word*)t0)[7],a[3]=t2,a[4]=((C_word*)t0)[8],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],a[7]=((C_word*)t0)[12],tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)((C_word*)t0)[6])[1])){
C_trace("error");
t6=*((C_word*)lf[6]+1);
((C_proc4)C_retrieve_proc(t6))(4,t6,t5,lf[21],lf[558]);}
else{
t6=t5;
f_22375(2,t6,C_SCHEME_UNDEFINED);}}
else{
t5=(C_word)C_eqp(t3,lf[559]);
if(C_truep(t5)){
t6=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_22410,a[2]=((C_word*)t0)[7],a[3]=t2,a[4]=((C_word*)t0)[8],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[4],a[7]=((C_word*)t0)[10],tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)((C_word*)t0)[4])[1])){
C_trace("error");
t7=*((C_word*)lf[6]+1);
((C_proc4)C_retrieve_proc(t7))(4,t7,t6,lf[21],lf[559]);}
else{
t7=t6;
f_22410(2,t7,C_SCHEME_UNDEFINED);}}
else{
t6=(C_word)C_eqp(t3,lf[560]);
if(C_truep(t6)){
t7=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_22445,a[2]=((C_word*)t0)[7],a[3]=t2,a[4]=((C_word*)t0)[8],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[3],a[7]=((C_word*)t0)[9],tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)((C_word*)t0)[3])[1])){
C_trace("error");
t8=*((C_word*)lf[6]+1);
((C_proc4)C_retrieve_proc(t8))(4,t8,t7,lf[21],lf[560]);}
else{
t8=t7;
f_22445(2,t8,C_SCHEME_UNDEFINED);}}
else{
t7=(C_word)C_eqp(t3,lf[561]);
if(C_truep(t7)){
t8=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_22480,a[2]=((C_word*)t0)[7],a[3]=t2,a[4]=((C_word*)t0)[8],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[2],a[7]=((C_word*)t0)[11],tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)((C_word*)t0)[2])[1])){
C_trace("error");
t9=*((C_word*)lf[6]+1);
((C_proc4)C_retrieve_proc(t9))(4,t9,t8,lf[21],lf[561]);}
else{
t9=t8;
f_22480(2,t9,C_SCHEME_UNDEFINED);}}
else{
t8=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_22509,a[2]=t2,a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[10],a[5]=((C_word*)t0)[8],tmp=(C_word)a,a+=6,tmp);
if(C_truep(((C_word*)((C_word*)t0)[5])[1])){
C_trace("error");
t9=*((C_word*)lf[6]+1);
((C_proc4)C_retrieve_proc(t9))(4,t9,t8,lf[12],((C_word*)t0)[7]);}
else{
t9=t8;
f_22509(2,t9,C_SCHEME_UNDEFINED);}}}}}}}

/* k22507 in k21975 in mm:make-on in k21827 in k18307 in k18304 in k18301 in k18298 in k17861 in k17858 in k17855 in k17852 in k17849 in k17327 in k17324 in k16801 in k16798 in k16795 in k16792 in k16789 in k16786 in k16783 in k16780 in k16777 in k16774 in k16771 in k16768 in k16765 in k16762 in k16759 in k16756 in k16753 in k16750 in k16747 in k16744 in k16741 in k16602 in k16599 in k16596 in k16593 in k16537 in k16534 in k16531 in k16528 in k16525 in k16522 in k16519 in k16516 in k15271 in k15202 in k15009 in k15006 in k14901 in k14850 in k7607 in k7604 in k5838 in k5545 in k5542 in k5538 in k5247 in k5244 in k5241 in k5238 */
static void C_ccall f_22509(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_22509,2,t0,t1);}
t2=(C_word)C_i_car(((C_word*)((C_word*)t0)[5])[1]);
t3=C_mutate(((C_word *)((C_word*)t0)[4])+1,t2);
t4=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_22516,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[5],a[4]=((C_word*)t0)[3],tmp=(C_word)a,a+=5,tmp);
t5=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_22524,a[2]=((C_word*)t0)[4],a[3]=t4,tmp=(C_word)a,a+=4,tmp);
C_trace("keyword?");
t6=C_retrieve(lf[15]);
((C_proc3)C_retrieve_proc(t6))(3,t6,t5,((C_word*)((C_word*)t0)[4])[1]);}

/* k22522 in k22507 in k21975 in mm:make-on in k21827 in k18307 in k18304 in k18301 in k18298 in k17861 in k17858 in k17855 in k17852 in k17849 in k17327 in k17324 in k16801 in k16798 in k16795 in k16792 in k16789 in k16786 in k16783 in k16780 in k16777 in k16774 in k16771 in k16768 in k16765 in k16762 in k16759 in k16756 in k16753 in k16750 in k16747 in k16744 in k16741 in k16602 in k16599 in k16596 in k16593 in k16537 in k16534 in k16531 in k16528 in k16525 in k16522 in k16519 in k16516 in k15271 in k15202 in k15009 in k15006 in k14901 in k14850 in k7607 in k7604 in k5838 in k5545 in k5542 in k5538 in k5247 in k5244 in k5241 in k5238 */
static void C_ccall f_22524(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
if(C_truep(t1)){
C_trace("error");
t2=*((C_word*)lf[6]+1);
((C_proc4)C_retrieve_proc(t2))(4,t2,((C_word*)t0)[3],lf[16],((C_word*)((C_word*)t0)[2])[1]);}
else{
t2=((C_word*)t0)[3];
f_22516(2,t2,C_SCHEME_UNDEFINED);}}

/* k22514 in k22507 in k21975 in mm:make-on in k21827 in k18307 in k18304 in k18301 in k18298 in k17861 in k17858 in k17855 in k17852 in k17849 in k17327 in k17324 in k16801 in k16798 in k16795 in k16792 in k16789 in k16786 in k16783 in k16780 in k16777 in k16774 in k16771 in k16768 in k16765 in k16762 in k16759 in k16756 in k16753 in k16750 in k16747 in k16744 in k16741 in k16602 in k16599 in k16596 in k16593 in k16537 in k16534 in k16531 in k16528 in k16525 in k16522 in k16519 in k16516 in k15271 in k15202 in k15009 in k15006 in k14901 in k14850 in k7607 in k7604 in k5838 in k5545 in k5542 in k5538 in k5247 in k5244 in k5241 in k5238 */
static void C_ccall f_22516(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word *a;
t2=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[3])[1]);
t4=C_mutate(((C_word *)((C_word*)t0)[3])+1,t3);
t5=((C_word*)t0)[2];
f_21980(t5,t4);}

/* k22478 in k21975 in mm:make-on in k21827 in k18307 in k18304 in k18301 in k18298 in k17861 in k17858 in k17855 in k17852 in k17849 in k17327 in k17324 in k16801 in k16798 in k16795 in k16792 in k16789 in k16786 in k16783 in k16780 in k16777 in k16774 in k16771 in k16768 in k16765 in k16762 in k16759 in k16756 in k16753 in k16750 in k16747 in k16744 in k16741 in k16602 in k16599 in k16596 in k16593 in k16537 in k16534 in k16531 in k16528 in k16525 in k16522 in k16519 in k16516 in k15271 in k15202 in k15009 in k15006 in k14901 in k14850 in k7607 in k7604 in k5838 in k5545 in k5542 in k5538 in k5247 in k5244 in k5241 in k5238 */
static void C_ccall f_22480(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_22480,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_22484,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("error");
t4=*((C_word*)lf[6]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[23],((C_word*)t0)[2]);}
else{
t4=t2;
f_22484(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k22482 in k22478 in k21975 in mm:make-on in k21827 in k18307 in k18304 in k18301 in k18298 in k17861 in k17858 in k17855 in k17852 in k17849 in k17327 in k17324 in k16801 in k16798 in k16795 in k16792 in k16789 in k16786 in k16783 in k16780 in k16777 in k16774 in k16771 in k16768 in k16765 in k16762 in k16759 in k16756 in k16753 in k16750 in k16747 in k16744 in k16741 in k16602 in k16599 in k16596 in k16593 in k16537 in k16534 in k16531 in k16528 in k16525 in k16522 in k16519 in k16516 in k15271 in k15202 in k15009 in k15006 in k14901 in k14850 in k7607 in k7604 in k5838 in k5545 in k5542 in k5538 in k5247 in k5244 in k5241 in k5238 */
static void C_ccall f_22484(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_21980(t7,t6);}

/* k22443 in k21975 in mm:make-on in k21827 in k18307 in k18304 in k18301 in k18298 in k17861 in k17858 in k17855 in k17852 in k17849 in k17327 in k17324 in k16801 in k16798 in k16795 in k16792 in k16789 in k16786 in k16783 in k16780 in k16777 in k16774 in k16771 in k16768 in k16765 in k16762 in k16759 in k16756 in k16753 in k16750 in k16747 in k16744 in k16741 in k16602 in k16599 in k16596 in k16593 in k16537 in k16534 in k16531 in k16528 in k16525 in k16522 in k16519 in k16516 in k15271 in k15202 in k15009 in k15006 in k14901 in k14850 in k7607 in k7604 in k5838 in k5545 in k5542 in k5538 in k5247 in k5244 in k5241 in k5238 */
static void C_ccall f_22445(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_22445,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_22449,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("error");
t4=*((C_word*)lf[6]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[23],((C_word*)t0)[2]);}
else{
t4=t2;
f_22449(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k22447 in k22443 in k21975 in mm:make-on in k21827 in k18307 in k18304 in k18301 in k18298 in k17861 in k17858 in k17855 in k17852 in k17849 in k17327 in k17324 in k16801 in k16798 in k16795 in k16792 in k16789 in k16786 in k16783 in k16780 in k16777 in k16774 in k16771 in k16768 in k16765 in k16762 in k16759 in k16756 in k16753 in k16750 in k16747 in k16744 in k16741 in k16602 in k16599 in k16596 in k16593 in k16537 in k16534 in k16531 in k16528 in k16525 in k16522 in k16519 in k16516 in k15271 in k15202 in k15009 in k15006 in k14901 in k14850 in k7607 in k7604 in k5838 in k5545 in k5542 in k5538 in k5247 in k5244 in k5241 in k5238 */
static void C_ccall f_22449(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_21980(t7,t6);}

/* k22408 in k21975 in mm:make-on in k21827 in k18307 in k18304 in k18301 in k18298 in k17861 in k17858 in k17855 in k17852 in k17849 in k17327 in k17324 in k16801 in k16798 in k16795 in k16792 in k16789 in k16786 in k16783 in k16780 in k16777 in k16774 in k16771 in k16768 in k16765 in k16762 in k16759 in k16756 in k16753 in k16750 in k16747 in k16744 in k16741 in k16602 in k16599 in k16596 in k16593 in k16537 in k16534 in k16531 in k16528 in k16525 in k16522 in k16519 in k16516 in k15271 in k15202 in k15009 in k15006 in k14901 in k14850 in k7607 in k7604 in k5838 in k5545 in k5542 in k5538 in k5247 in k5244 in k5241 in k5238 */
static void C_ccall f_22410(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_22410,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_22414,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("error");
t4=*((C_word*)lf[6]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[23],((C_word*)t0)[2]);}
else{
t4=t2;
f_22414(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k22412 in k22408 in k21975 in mm:make-on in k21827 in k18307 in k18304 in k18301 in k18298 in k17861 in k17858 in k17855 in k17852 in k17849 in k17327 in k17324 in k16801 in k16798 in k16795 in k16792 in k16789 in k16786 in k16783 in k16780 in k16777 in k16774 in k16771 in k16768 in k16765 in k16762 in k16759 in k16756 in k16753 in k16750 in k16747 in k16744 in k16741 in k16602 in k16599 in k16596 in k16593 in k16537 in k16534 in k16531 in k16528 in k16525 in k16522 in k16519 in k16516 in k15271 in k15202 in k15009 in k15006 in k14901 in k14850 in k7607 in k7604 in k5838 in k5545 in k5542 in k5538 in k5247 in k5244 in k5241 in k5238 */
static void C_ccall f_22414(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_21980(t7,t6);}

/* k22373 in k21975 in mm:make-on in k21827 in k18307 in k18304 in k18301 in k18298 in k17861 in k17858 in k17855 in k17852 in k17849 in k17327 in k17324 in k16801 in k16798 in k16795 in k16792 in k16789 in k16786 in k16783 in k16780 in k16777 in k16774 in k16771 in k16768 in k16765 in k16762 in k16759 in k16756 in k16753 in k16750 in k16747 in k16744 in k16741 in k16602 in k16599 in k16596 in k16593 in k16537 in k16534 in k16531 in k16528 in k16525 in k16522 in k16519 in k16516 in k15271 in k15202 in k15009 in k15006 in k14901 in k14850 in k7607 in k7604 in k5838 in k5545 in k5542 in k5538 in k5247 in k5244 in k5241 in k5238 */
static void C_ccall f_22375(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_22375,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_22379,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("error");
t4=*((C_word*)lf[6]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[23],((C_word*)t0)[2]);}
else{
t4=t2;
f_22379(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k22377 in k22373 in k21975 in mm:make-on in k21827 in k18307 in k18304 in k18301 in k18298 in k17861 in k17858 in k17855 in k17852 in k17849 in k17327 in k17324 in k16801 in k16798 in k16795 in k16792 in k16789 in k16786 in k16783 in k16780 in k16777 in k16774 in k16771 in k16768 in k16765 in k16762 in k16759 in k16756 in k16753 in k16750 in k16747 in k16744 in k16741 in k16602 in k16599 in k16596 in k16593 in k16537 in k16534 in k16531 in k16528 in k16525 in k16522 in k16519 in k16516 in k15271 in k15202 in k15009 in k15006 in k14901 in k14850 in k7607 in k7604 in k5838 in k5545 in k5542 in k5538 in k5247 in k5244 in k5241 in k5238 */
static void C_ccall f_22379(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_21980(t7,t6);}

/* k21978 in k21975 in mm:make-on in k21827 in k18307 in k18304 in k18301 in k18298 in k17861 in k17858 in k17855 in k17852 in k17849 in k17327 in k17324 in k16801 in k16798 in k16795 in k16792 in k16789 in k16786 in k16783 in k16780 in k16777 in k16774 in k16771 in k16768 in k16765 in k16762 in k16759 in k16756 in k16753 in k16750 in k16747 in k16744 in k16741 in k16602 in k16599 in k16596 in k16593 in k16537 in k16534 in k16531 in k16528 in k16525 in k16522 in k16519 in k16516 in k15271 in k15202 in k15009 in k15006 in k14901 in k14850 in k7607 in k7604 in k5838 in k5545 in k5542 in k5538 in k5247 in k5244 in k5241 in k5238 */
static void C_fcall f_21980(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word ab[52],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_21980,NULL,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|13,a[1]=(C_word)f_21983,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],a[7]=((C_word*)t0)[7],a[8]=((C_word*)t0)[8],a[9]=((C_word*)t0)[9],a[10]=((C_word*)t0)[10],a[11]=((C_word*)t0)[11],a[12]=((C_word*)t0)[12],a[13]=((C_word*)t0)[13],tmp=(C_word)a,a+=14,tmp);
if(C_truep((C_word)C_i_nullp(((C_word*)((C_word*)t0)[8])[1]))){
t3=t2;
f_21983(t3,C_SCHEME_UNDEFINED);}
else{
t3=(C_word)C_i_car(((C_word*)((C_word*)t0)[8])[1]);
t4=(C_word)C_eqp(t3,lf[558]);
if(C_truep(t4)){
t5=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_22205,a[2]=((C_word*)t0)[7],a[3]=t2,a[4]=((C_word*)t0)[8],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],a[7]=((C_word*)t0)[12],tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)((C_word*)t0)[6])[1])){
C_trace("error");
t6=*((C_word*)lf[6]+1);
((C_proc4)C_retrieve_proc(t6))(4,t6,t5,lf[21],lf[558]);}
else{
t6=t5;
f_22205(2,t6,C_SCHEME_UNDEFINED);}}
else{
t5=(C_word)C_eqp(t3,lf[559]);
if(C_truep(t5)){
t6=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_22240,a[2]=((C_word*)t0)[7],a[3]=t2,a[4]=((C_word*)t0)[8],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[4],a[7]=((C_word*)t0)[10],tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)((C_word*)t0)[4])[1])){
C_trace("error");
t7=*((C_word*)lf[6]+1);
((C_proc4)C_retrieve_proc(t7))(4,t7,t6,lf[21],lf[559]);}
else{
t7=t6;
f_22240(2,t7,C_SCHEME_UNDEFINED);}}
else{
t6=(C_word)C_eqp(t3,lf[560]);
if(C_truep(t6)){
t7=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_22275,a[2]=((C_word*)t0)[7],a[3]=t2,a[4]=((C_word*)t0)[8],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[3],a[7]=((C_word*)t0)[9],tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)((C_word*)t0)[3])[1])){
C_trace("error");
t8=*((C_word*)lf[6]+1);
((C_proc4)C_retrieve_proc(t8))(4,t8,t7,lf[21],lf[560]);}
else{
t8=t7;
f_22275(2,t8,C_SCHEME_UNDEFINED);}}
else{
t7=(C_word)C_eqp(t3,lf[561]);
if(C_truep(t7)){
t8=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_22310,a[2]=((C_word*)t0)[7],a[3]=t2,a[4]=((C_word*)t0)[8],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[2],a[7]=((C_word*)t0)[11],tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)((C_word*)t0)[2])[1])){
C_trace("error");
t9=*((C_word*)lf[6]+1);
((C_proc4)C_retrieve_proc(t9))(4,t9,t8,lf[21],lf[561]);}
else{
t9=t8;
f_22310(2,t9,C_SCHEME_UNDEFINED);}}
else{
t8=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_22339,a[2]=t2,a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[9],a[5]=((C_word*)t0)[8],tmp=(C_word)a,a+=6,tmp);
if(C_truep(((C_word*)((C_word*)t0)[5])[1])){
C_trace("error");
t9=*((C_word*)lf[6]+1);
((C_proc4)C_retrieve_proc(t9))(4,t9,t8,lf[12],((C_word*)t0)[7]);}
else{
t9=t8;
f_22339(2,t9,C_SCHEME_UNDEFINED);}}}}}}}

/* k22337 in k21978 in k21975 in mm:make-on in k21827 in k18307 in k18304 in k18301 in k18298 in k17861 in k17858 in k17855 in k17852 in k17849 in k17327 in k17324 in k16801 in k16798 in k16795 in k16792 in k16789 in k16786 in k16783 in k16780 in k16777 in k16774 in k16771 in k16768 in k16765 in k16762 in k16759 in k16756 in k16753 in k16750 in k16747 in k16744 in k16741 in k16602 in k16599 in k16596 in k16593 in k16537 in k16534 in k16531 in k16528 in k16525 in k16522 in k16519 in k16516 in k15271 in k15202 in k15009 in k15006 in k14901 in k14850 in k7607 in k7604 in k5838 in k5545 in k5542 in k5538 in k5247 in k5244 in k5241 in k5238 */
static void C_ccall f_22339(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_22339,2,t0,t1);}
t2=(C_word)C_i_car(((C_word*)((C_word*)t0)[5])[1]);
t3=C_mutate(((C_word *)((C_word*)t0)[4])+1,t2);
t4=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_22346,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[5],a[4]=((C_word*)t0)[3],tmp=(C_word)a,a+=5,tmp);
t5=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_22354,a[2]=((C_word*)t0)[4],a[3]=t4,tmp=(C_word)a,a+=4,tmp);
C_trace("keyword?");
t6=C_retrieve(lf[15]);
((C_proc3)C_retrieve_proc(t6))(3,t6,t5,((C_word*)((C_word*)t0)[4])[1]);}

/* k22352 in k22337 in k21978 in k21975 in mm:make-on in k21827 in k18307 in k18304 in k18301 in k18298 in k17861 in k17858 in k17855 in k17852 in k17849 in k17327 in k17324 in k16801 in k16798 in k16795 in k16792 in k16789 in k16786 in k16783 in k16780 in k16777 in k16774 in k16771 in k16768 in k16765 in k16762 in k16759 in k16756 in k16753 in k16750 in k16747 in k16744 in k16741 in k16602 in k16599 in k16596 in k16593 in k16537 in k16534 in k16531 in k16528 in k16525 in k16522 in k16519 in k16516 in k15271 in k15202 in k15009 in k15006 in k14901 in k14850 in k7607 in k7604 in k5838 in k5545 in k5542 in k5538 in k5247 in k5244 in k5241 in k5238 */
static void C_ccall f_22354(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
if(C_truep(t1)){
C_trace("error");
t2=*((C_word*)lf[6]+1);
((C_proc4)C_retrieve_proc(t2))(4,t2,((C_word*)t0)[3],lf[16],((C_word*)((C_word*)t0)[2])[1]);}
else{
t2=((C_word*)t0)[3];
f_22346(2,t2,C_SCHEME_UNDEFINED);}}

/* k22344 in k22337 in k21978 in k21975 in mm:make-on in k21827 in k18307 in k18304 in k18301 in k18298 in k17861 in k17858 in k17855 in k17852 in k17849 in k17327 in k17324 in k16801 in k16798 in k16795 in k16792 in k16789 in k16786 in k16783 in k16780 in k16777 in k16774 in k16771 in k16768 in k16765 in k16762 in k16759 in k16756 in k16753 in k16750 in k16747 in k16744 in k16741 in k16602 in k16599 in k16596 in k16593 in k16537 in k16534 in k16531 in k16528 in k16525 in k16522 in k16519 in k16516 in k15271 in k15202 in k15009 in k15006 in k14901 in k14850 in k7607 in k7604 in k5838 in k5545 in k5542 in k5538 in k5247 in k5244 in k5241 in k5238 */
static void C_ccall f_22346(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word *a;
t2=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[3])[1]);
t4=C_mutate(((C_word *)((C_word*)t0)[3])+1,t3);
t5=((C_word*)t0)[2];
f_21983(t5,t4);}

/* k22308 in k21978 in k21975 in mm:make-on in k21827 in k18307 in k18304 in k18301 in k18298 in k17861 in k17858 in k17855 in k17852 in k17849 in k17327 in k17324 in k16801 in k16798 in k16795 in k16792 in k16789 in k16786 in k16783 in k16780 in k16777 in k16774 in k16771 in k16768 in k16765 in k16762 in k16759 in k16756 in k16753 in k16750 in k16747 in k16744 in k16741 in k16602 in k16599 in k16596 in k16593 in k16537 in k16534 in k16531 in k16528 in k16525 in k16522 in k16519 in k16516 in k15271 in k15202 in k15009 in k15006 in k14901 in k14850 in k7607 in k7604 in k5838 in k5545 in k5542 in k5538 in k5247 in k5244 in k5241 in k5238 */
static void C_ccall f_22310(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_22310,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_22314,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("error");
t4=*((C_word*)lf[6]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[23],((C_word*)t0)[2]);}
else{
t4=t2;
f_22314(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k22312 in k22308 in k21978 in k21975 in mm:make-on in k21827 in k18307 in k18304 in k18301 in k18298 in k17861 in k17858 in k17855 in k17852 in k17849 in k17327 in k17324 in k16801 in k16798 in k16795 in k16792 in k16789 in k16786 in k16783 in k16780 in k16777 in k16774 in k16771 in k16768 in k16765 in k16762 in k16759 in k16756 in k16753 in k16750 in k16747 in k16744 in k16741 in k16602 in k16599 in k16596 in k16593 in k16537 in k16534 in k16531 in k16528 in k16525 in k16522 in k16519 in k16516 in k15271 in k15202 in k15009 in k15006 in k14901 in k14850 in k7607 in k7604 in k5838 in k5545 in k5542 in k5538 in k5247 in k5244 in k5241 in k5238 */
static void C_ccall f_22314(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_21983(t7,t6);}

/* k22273 in k21978 in k21975 in mm:make-on in k21827 in k18307 in k18304 in k18301 in k18298 in k17861 in k17858 in k17855 in k17852 in k17849 in k17327 in k17324 in k16801 in k16798 in k16795 in k16792 in k16789 in k16786 in k16783 in k16780 in k16777 in k16774 in k16771 in k16768 in k16765 in k16762 in k16759 in k16756 in k16753 in k16750 in k16747 in k16744 in k16741 in k16602 in k16599 in k16596 in k16593 in k16537 in k16534 in k16531 in k16528 in k16525 in k16522 in k16519 in k16516 in k15271 in k15202 in k15009 in k15006 in k14901 in k14850 in k7607 in k7604 in k5838 in k5545 in k5542 in k5538 in k5247 in k5244 in k5241 in k5238 */
static void C_ccall f_22275(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_22275,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_22279,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("error");
t4=*((C_word*)lf[6]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[23],((C_word*)t0)[2]);}
else{
t4=t2;
f_22279(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k22277 in k22273 in k21978 in k21975 in mm:make-on in k21827 in k18307 in k18304 in k18301 in k18298 in k17861 in k17858 in k17855 in k17852 in k17849 in k17327 in k17324 in k16801 in k16798 in k16795 in k16792 in k16789 in k16786 in k16783 in k16780 in k16777 in k16774 in k16771 in k16768 in k16765 in k16762 in k16759 in k16756 in k16753 in k16750 in k16747 in k16744 in k16741 in k16602 in k16599 in k16596 in k16593 in k16537 in k16534 in k16531 in k16528 in k16525 in k16522 in k16519 in k16516 in k15271 in k15202 in k15009 in k15006 in k14901 in k14850 in k7607 in k7604 in k5838 in k5545 in k5542 in k5538 in k5247 in k5244 in k5241 in k5238 */
static void C_ccall f_22279(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_21983(t7,t6);}

/* k22238 in k21978 in k21975 in mm:make-on in k21827 in k18307 in k18304 in k18301 in k18298 in k17861 in k17858 in k17855 in k17852 in k17849 in k17327 in k17324 in k16801 in k16798 in k16795 in k16792 in k16789 in k16786 in k16783 in k16780 in k16777 in k16774 in k16771 in k16768 in k16765 in k16762 in k16759 in k16756 in k16753 in k16750 in k16747 in k16744 in k16741 in k16602 in k16599 in k16596 in k16593 in k16537 in k16534 in k16531 in k16528 in k16525 in k16522 in k16519 in k16516 in k15271 in k15202 in k15009 in k15006 in k14901 in k14850 in k7607 in k7604 in k5838 in k5545 in k5542 in k5538 in k5247 in k5244 in k5241 in k5238 */
static void C_ccall f_22240(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_22240,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_22244,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("error");
t4=*((C_word*)lf[6]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[23],((C_word*)t0)[2]);}
else{
t4=t2;
f_22244(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k22242 in k22238 in k21978 in k21975 in mm:make-on in k21827 in k18307 in k18304 in k18301 in k18298 in k17861 in k17858 in k17855 in k17852 in k17849 in k17327 in k17324 in k16801 in k16798 in k16795 in k16792 in k16789 in k16786 in k16783 in k16780 in k16777 in k16774 in k16771 in k16768 in k16765 in k16762 in k16759 in k16756 in k16753 in k16750 in k16747 in k16744 in k16741 in k16602 in k16599 in k16596 in k16593 in k16537 in k16534 in k16531 in k16528 in k16525 in k16522 in k16519 in k16516 in k15271 in k15202 in k15009 in k15006 in k14901 in k14850 in k7607 in k7604 in k5838 in k5545 in k5542 in k5538 in k5247 in k5244 in k5241 in k5238 */
static void C_ccall f_22244(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_21983(t7,t6);}

/* k22203 in k21978 in k21975 in mm:make-on in k21827 in k18307 in k18304 in k18301 in k18298 in k17861 in k17858 in k17855 in k17852 in k17849 in k17327 in k17324 in k16801 in k16798 in k16795 in k16792 in k16789 in k16786 in k16783 in k16780 in k16777 in k16774 in k16771 in k16768 in k16765 in k16762 in k16759 in k16756 in k16753 in k16750 in k16747 in k16744 in k16741 in k16602 in k16599 in k16596 in k16593 in k16537 in k16534 in k16531 in k16528 in k16525 in k16522 in k16519 in k16516 in k15271 in k15202 in k15009 in k15006 in k14901 in k14850 in k7607 in k7604 in k5838 in k5545 in k5542 in k5538 in k5247 in k5244 in k5241 in k5238 */
static void C_ccall f_22205(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_22205,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_22209,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("error");
t4=*((C_word*)lf[6]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[23],((C_word*)t0)[2]);}
else{
t4=t2;
f_22209(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k22207 in k22203 in k21978 in k21975 in mm:make-on in k21827 in k18307 in k18304 in k18301 in k18298 in k17861 in k17858 in k17855 in k17852 in k17849 in k17327 in k17324 in k16801 in k16798 in k16795 in k16792 in k16789 in k16786 in k16783 in k16780 in k16777 in k16774 in k16771 in k16768 in k16765 in k16762 in k16759 in k16756 in k16753 in k16750 in k16747 in k16744 in k16741 in k16602 in k16599 in k16596 in k16593 in k16537 in k16534 in k16531 in k16528 in k16525 in k16522 in k16519 in k16516 in k15271 in k15202 in k15009 in k15006 in k14901 in k14850 in k7607 in k7604 in k5838 in k5545 in k5542 in k5538 in k5247 in k5244 in k5241 in k5238 */
static void C_ccall f_22209(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_21983(t7,t6);}

/* k21981 in k21978 in k21975 in mm:make-on in k21827 in k18307 in k18304 in k18301 in k18298 in k17861 in k17858 in k17855 in k17852 in k17849 in k17327 in k17324 in k16801 in k16798 in k16795 in k16792 in k16789 in k16786 in k16783 in k16780 in k16777 in k16774 in k16771 in k16768 in k16765 in k16762 in k16759 in k16756 in k16753 in k16750 in k16747 in k16744 in k16741 in k16602 in k16599 in k16596 in k16593 in k16537 in k16534 in k16531 in k16528 in k16525 in k16522 in k16519 in k16516 in k15271 in k15202 in k15009 in k15006 in k14901 in k14850 in k7607 in k7604 in k5838 in k5545 in k5542 in k5538 in k5247 in k5244 in k5241 in k5238 */
static void C_fcall f_21983(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word ab[47],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_21983,NULL,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|8,a[1]=(C_word)f_21986,a[2]=((C_word*)t0)[7],a[3]=((C_word*)t0)[8],a[4]=((C_word*)t0)[9],a[5]=((C_word*)t0)[10],a[6]=((C_word*)t0)[11],a[7]=((C_word*)t0)[12],a[8]=((C_word*)t0)[13],tmp=(C_word)a,a+=9,tmp);
if(C_truep((C_word)C_i_nullp(((C_word*)((C_word*)t0)[8])[1]))){
t3=t2;
f_21986(t3,C_SCHEME_UNDEFINED);}
else{
t3=(C_word)C_i_car(((C_word*)((C_word*)t0)[8])[1]);
t4=(C_word)C_eqp(t3,lf[558]);
if(C_truep(t4)){
t5=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_22035,a[2]=((C_word*)t0)[7],a[3]=t2,a[4]=((C_word*)t0)[8],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],a[7]=((C_word*)t0)[12],tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)((C_word*)t0)[6])[1])){
C_trace("error");
t6=*((C_word*)lf[6]+1);
((C_proc4)C_retrieve_proc(t6))(4,t6,t5,lf[21],lf[558]);}
else{
t6=t5;
f_22035(2,t6,C_SCHEME_UNDEFINED);}}
else{
t5=(C_word)C_eqp(t3,lf[559]);
if(C_truep(t5)){
t6=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_22070,a[2]=((C_word*)t0)[7],a[3]=t2,a[4]=((C_word*)t0)[8],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[4],a[7]=((C_word*)t0)[10],tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)((C_word*)t0)[4])[1])){
C_trace("error");
t7=*((C_word*)lf[6]+1);
((C_proc4)C_retrieve_proc(t7))(4,t7,t6,lf[21],lf[559]);}
else{
t7=t6;
f_22070(2,t7,C_SCHEME_UNDEFINED);}}
else{
t6=(C_word)C_eqp(t3,lf[560]);
if(C_truep(t6)){
t7=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_22105,a[2]=((C_word*)t0)[7],a[3]=t2,a[4]=((C_word*)t0)[8],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[3],a[7]=((C_word*)t0)[9],tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)((C_word*)t0)[3])[1])){
C_trace("error");
t8=*((C_word*)lf[6]+1);
((C_proc4)C_retrieve_proc(t8))(4,t8,t7,lf[21],lf[560]);}
else{
t8=t7;
f_22105(2,t8,C_SCHEME_UNDEFINED);}}
else{
t7=(C_word)C_eqp(t3,lf[561]);
if(C_truep(t7)){
t8=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_22140,a[2]=((C_word*)t0)[7],a[3]=t2,a[4]=((C_word*)t0)[8],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[2],a[7]=((C_word*)t0)[11],tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)((C_word*)t0)[2])[1])){
C_trace("error");
t9=*((C_word*)lf[6]+1);
((C_proc4)C_retrieve_proc(t9))(4,t9,t8,lf[21],lf[561]);}
else{
t9=t8;
f_22140(2,t9,C_SCHEME_UNDEFINED);}}
else{
t8=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_22169,a[2]=t2,a[3]=((C_word*)t0)[2],a[4]=((C_word*)t0)[11],a[5]=((C_word*)t0)[8],tmp=(C_word)a,a+=6,tmp);
if(C_truep(((C_word*)((C_word*)t0)[5])[1])){
C_trace("error");
t9=*((C_word*)lf[6]+1);
((C_proc4)C_retrieve_proc(t9))(4,t9,t8,lf[12],((C_word*)t0)[7]);}
else{
t9=t8;
f_22169(2,t9,C_SCHEME_UNDEFINED);}}}}}}}

/* k22167 in k21981 in k21978 in k21975 in mm:make-on in k21827 in k18307 in k18304 in k18301 in k18298 in k17861 in k17858 in k17855 in k17852 in k17849 in k17327 in k17324 in k16801 in k16798 in k16795 in k16792 in k16789 in k16786 in k16783 in k16780 in k16777 in k16774 in k16771 in k16768 in k16765 in k16762 in k16759 in k16756 in k16753 in k16750 in k16747 in k16744 in k16741 in k16602 in k16599 in k16596 in k16593 in k16537 in k16534 in k16531 in k16528 in k16525 in k16522 in k16519 in k16516 in k15271 in k15202 in k15009 in k15006 in k14901 in k14850 in k7607 in k7604 in k5838 in k5545 in k5542 in k5538 in k5247 in k5244 in k5241 in k5238 */
static void C_ccall f_22169(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_22169,2,t0,t1);}
t2=(C_word)C_i_car(((C_word*)((C_word*)t0)[5])[1]);
t3=C_mutate(((C_word *)((C_word*)t0)[4])+1,t2);
t4=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_22176,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[5],a[4]=((C_word*)t0)[3],tmp=(C_word)a,a+=5,tmp);
t5=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_22184,a[2]=((C_word*)t0)[4],a[3]=t4,tmp=(C_word)a,a+=4,tmp);
C_trace("keyword?");
t6=C_retrieve(lf[15]);
((C_proc3)C_retrieve_proc(t6))(3,t6,t5,((C_word*)((C_word*)t0)[4])[1]);}

/* k22182 in k22167 in k21981 in k21978 in k21975 in mm:make-on in k21827 in k18307 in k18304 in k18301 in k18298 in k17861 in k17858 in k17855 in k17852 in k17849 in k17327 in k17324 in k16801 in k16798 in k16795 in k16792 in k16789 in k16786 in k16783 in k16780 in k16777 in k16774 in k16771 in k16768 in k16765 in k16762 in k16759 in k16756 in k16753 in k16750 in k16747 in k16744 in k16741 in k16602 in k16599 in k16596 in k16593 in k16537 in k16534 in k16531 in k16528 in k16525 in k16522 in k16519 in k16516 in k15271 in k15202 in k15009 in k15006 in k14901 in k14850 in k7607 in k7604 in k5838 in k5545 in k5542 in k5538 in k5247 in k5244 in k5241 in k5238 */
static void C_ccall f_22184(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
if(C_truep(t1)){
C_trace("error");
t2=*((C_word*)lf[6]+1);
((C_proc4)C_retrieve_proc(t2))(4,t2,((C_word*)t0)[3],lf[16],((C_word*)((C_word*)t0)[2])[1]);}
else{
t2=((C_word*)t0)[3];
f_22176(2,t2,C_SCHEME_UNDEFINED);}}

/* k22174 in k22167 in k21981 in k21978 in k21975 in mm:make-on in k21827 in k18307 in k18304 in k18301 in k18298 in k17861 in k17858 in k17855 in k17852 in k17849 in k17327 in k17324 in k16801 in k16798 in k16795 in k16792 in k16789 in k16786 in k16783 in k16780 in k16777 in k16774 in k16771 in k16768 in k16765 in k16762 in k16759 in k16756 in k16753 in k16750 in k16747 in k16744 in k16741 in k16602 in k16599 in k16596 in k16593 in k16537 in k16534 in k16531 in k16528 in k16525 in k16522 in k16519 in k16516 in k15271 in k15202 in k15009 in k15006 in k14901 in k14850 in k7607 in k7604 in k5838 in k5545 in k5542 in k5538 in k5247 in k5244 in k5241 in k5238 */
static void C_ccall f_22176(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word *a;
t2=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[3])[1]);
t4=C_mutate(((C_word *)((C_word*)t0)[3])+1,t3);
t5=((C_word*)t0)[2];
f_21986(t5,t4);}

/* k22138 in k21981 in k21978 in k21975 in mm:make-on in k21827 in k18307 in k18304 in k18301 in k18298 in k17861 in k17858 in k17855 in k17852 in k17849 in k17327 in k17324 in k16801 in k16798 in k16795 in k16792 in k16789 in k16786 in k16783 in k16780 in k16777 in k16774 in k16771 in k16768 in k16765 in k16762 in k16759 in k16756 in k16753 in k16750 in k16747 in k16744 in k16741 in k16602 in k16599 in k16596 in k16593 in k16537 in k16534 in k16531 in k16528 in k16525 in k16522 in k16519 in k16516 in k15271 in k15202 in k15009 in k15006 in k14901 in k14850 in k7607 in k7604 in k5838 in k5545 in k5542 in k5538 in k5247 in k5244 in k5241 in k5238 */
static void C_ccall f_22140(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_22140,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_22144,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("error");
t4=*((C_word*)lf[6]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[23],((C_word*)t0)[2]);}
else{
t4=t2;
f_22144(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k22142 in k22138 in k21981 in k21978 in k21975 in mm:make-on in k21827 in k18307 in k18304 in k18301 in k18298 in k17861 in k17858 in k17855 in k17852 in k17849 in k17327 in k17324 in k16801 in k16798 in k16795 in k16792 in k16789 in k16786 in k16783 in k16780 in k16777 in k16774 in k16771 in k16768 in k16765 in k16762 in k16759 in k16756 in k16753 in k16750 in k16747 in k16744 in k16741 in k16602 in k16599 in k16596 in k16593 in k16537 in k16534 in k16531 in k16528 in k16525 in k16522 in k16519 in k16516 in k15271 in k15202 in k15009 in k15006 in k14901 in k14850 in k7607 in k7604 in k5838 in k5545 in k5542 in k5538 in k5247 in k5244 in k5241 in k5238 */
static void C_ccall f_22144(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_21986(t7,t6);}

/* k22103 in k21981 in k21978 in k21975 in mm:make-on in k21827 in k18307 in k18304 in k18301 in k18298 in k17861 in k17858 in k17855 in k17852 in k17849 in k17327 in k17324 in k16801 in k16798 in k16795 in k16792 in k16789 in k16786 in k16783 in k16780 in k16777 in k16774 in k16771 in k16768 in k16765 in k16762 in k16759 in k16756 in k16753 in k16750 in k16747 in k16744 in k16741 in k16602 in k16599 in k16596 in k16593 in k16537 in k16534 in k16531 in k16528 in k16525 in k16522 in k16519 in k16516 in k15271 in k15202 in k15009 in k15006 in k14901 in k14850 in k7607 in k7604 in k5838 in k5545 in k5542 in k5538 in k5247 in k5244 in k5241 in k5238 */
static void C_ccall f_22105(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_22105,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_22109,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("error");
t4=*((C_word*)lf[6]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[23],((C_word*)t0)[2]);}
else{
t4=t2;
f_22109(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k22107 in k22103 in k21981 in k21978 in k21975 in mm:make-on in k21827 in k18307 in k18304 in k18301 in k18298 in k17861 in k17858 in k17855 in k17852 in k17849 in k17327 in k17324 in k16801 in k16798 in k16795 in k16792 in k16789 in k16786 in k16783 in k16780 in k16777 in k16774 in k16771 in k16768 in k16765 in k16762 in k16759 in k16756 in k16753 in k16750 in k16747 in k16744 in k16741 in k16602 in k16599 in k16596 in k16593 in k16537 in k16534 in k16531 in k16528 in k16525 in k16522 in k16519 in k16516 in k15271 in k15202 in k15009 in k15006 in k14901 in k14850 in k7607 in k7604 in k5838 in k5545 in k5542 in k5538 in k5247 in k5244 in k5241 in k5238 */
static void C_ccall f_22109(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_21986(t7,t6);}

/* k22068 in k21981 in k21978 in k21975 in mm:make-on in k21827 in k18307 in k18304 in k18301 in k18298 in k17861 in k17858 in k17855 in k17852 in k17849 in k17327 in k17324 in k16801 in k16798 in k16795 in k16792 in k16789 in k16786 in k16783 in k16780 in k16777 in k16774 in k16771 in k16768 in k16765 in k16762 in k16759 in k16756 in k16753 in k16750 in k16747 in k16744 in k16741 in k16602 in k16599 in k16596 in k16593 in k16537 in k16534 in k16531 in k16528 in k16525 in k16522 in k16519 in k16516 in k15271 in k15202 in k15009 in k15006 in k14901 in k14850 in k7607 in k7604 in k5838 in k5545 in k5542 in k5538 in k5247 in k5244 in k5241 in k5238 */
static void C_ccall f_22070(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_22070,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_22074,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("error");
t4=*((C_word*)lf[6]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[23],((C_word*)t0)[2]);}
else{
t4=t2;
f_22074(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k22072 in k22068 in k21981 in k21978 in k21975 in mm:make-on in k21827 in k18307 in k18304 in k18301 in k18298 in k17861 in k17858 in k17855 in k17852 in k17849 in k17327 in k17324 in k16801 in k16798 in k16795 in k16792 in k16789 in k16786 in k16783 in k16780 in k16777 in k16774 in k16771 in k16768 in k16765 in k16762 in k16759 in k16756 in k16753 in k16750 in k16747 in k16744 in k16741 in k16602 in k16599 in k16596 in k16593 in k16537 in k16534 in k16531 in k16528 in k16525 in k16522 in k16519 in k16516 in k15271 in k15202 in k15009 in k15006 in k14901 in k14850 in k7607 in k7604 in k5838 in k5545 in k5542 in k5538 in k5247 in k5244 in k5241 in k5238 */
static void C_ccall f_22074(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_21986(t7,t6);}

/* k22033 in k21981 in k21978 in k21975 in mm:make-on in k21827 in k18307 in k18304 in k18301 in k18298 in k17861 in k17858 in k17855 in k17852 in k17849 in k17327 in k17324 in k16801 in k16798 in k16795 in k16792 in k16789 in k16786 in k16783 in k16780 in k16777 in k16774 in k16771 in k16768 in k16765 in k16762 in k16759 in k16756 in k16753 in k16750 in k16747 in k16744 in k16741 in k16602 in k16599 in k16596 in k16593 in k16537 in k16534 in k16531 in k16528 in k16525 in k16522 in k16519 in k16516 in k15271 in k15202 in k15009 in k15006 in k14901 in k14850 in k7607 in k7604 in k5838 in k5545 in k5542 in k5538 in k5247 in k5244 in k5241 in k5238 */
static void C_ccall f_22035(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_22035,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_22039,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("error");
t4=*((C_word*)lf[6]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[23],((C_word*)t0)[2]);}
else{
t4=t2;
f_22039(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k22037 in k22033 in k21981 in k21978 in k21975 in mm:make-on in k21827 in k18307 in k18304 in k18301 in k18298 in k17861 in k17858 in k17855 in k17852 in k17849 in k17327 in k17324 in k16801 in k16798 in k16795 in k16792 in k16789 in k16786 in k16783 in k16780 in k16777 in k16774 in k16771 in k16768 in k16765 in k16762 in k16759 in k16756 in k16753 in k16750 in k16747 in k16744 in k16741 in k16602 in k16599 in k16596 in k16593 in k16537 in k16534 in k16531 in k16528 in k16525 in k16522 in k16519 in k16516 in k15271 in k15202 in k15009 in k15006 in k14901 in k14850 in k7607 in k7604 in k5838 in k5545 in k5542 in k5538 in k5247 in k5244 in k5241 in k5238 */
static void C_ccall f_22039(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_21986(t7,t6);}

/* k21984 in k21981 in k21978 in k21975 in mm:make-on in k21827 in k18307 in k18304 in k18301 in k18298 in k17861 in k17858 in k17855 in k17852 in k17849 in k17327 in k17324 in k16801 in k16798 in k16795 in k16792 in k16789 in k16786 in k16783 in k16780 in k16777 in k16774 in k16771 in k16768 in k16765 in k16762 in k16759 in k16756 in k16753 in k16750 in k16747 in k16744 in k16741 in k16602 in k16599 in k16596 in k16593 in k16537 in k16534 in k16531 in k16528 in k16525 in k16522 in k16519 in k16516 in k15271 in k15202 in k15009 in k15006 in k14901 in k14850 in k7607 in k7604 in k5838 in k5545 in k5542 in k5538 in k5247 in k5244 in k5241 in k5238 */
static void C_fcall f_21986(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_21986,NULL,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_21989,a[2]=((C_word*)t0)[4],a[3]=((C_word*)t0)[5],a[4]=((C_word*)t0)[6],a[5]=((C_word*)t0)[7],a[6]=((C_word*)t0)[8],tmp=(C_word)a,a+=7,tmp);
if(C_truep((C_word)C_i_nullp(((C_word*)((C_word*)t0)[3])[1]))){
t3=t2;
f_21989(2,t3,C_SCHEME_UNDEFINED);}
else{
C_trace("error");
t3=*((C_word*)lf[6]+1);
((C_proc4)C_retrieve_proc(t3))(4,t3,t2,lf[7],((C_word*)t0)[2]);}}

/* k21987 in k21984 in k21981 in k21978 in k21975 in mm:make-on in k21827 in k18307 in k18304 in k18301 in k18298 in k17861 in k17858 in k17855 in k17852 in k17849 in k17327 in k17324 in k16801 in k16798 in k16795 in k16792 in k16789 in k16786 in k16783 in k16780 in k16777 in k16774 in k16771 in k16768 in k16765 in k16762 in k16759 in k16756 in k16753 in k16750 in k16747 in k16744 in k16741 in k16602 in k16599 in k16596 in k16593 in k16537 in k16534 in k16531 in k16528 in k16525 in k16522 in k16519 in k16516 in k15271 in k15202 in k15009 in k15006 in k14901 in k14850 in k7607 in k7604 in k5838 in k5545 in k5542 in k5538 in k5247 in k5244 in k5241 in k5238 */
static void C_ccall f_21989(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word ab[3],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_21989,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_21993,a[2]=((C_word)li321),tmp=(C_word)a,a+=3,tmp);
((C_proc7)(void*)(*((C_word*)t2+1)))(7,t2,((C_word*)t0)[6],C_fix(9),((C_word*)((C_word*)t0)[5])[1],((C_word*)((C_word*)t0)[4])[1],((C_word*)((C_word*)t0)[3])[1],((C_word*)((C_word*)t0)[2])[1]);}

/* f_21993 in k21987 in k21984 in k21981 in k21978 in k21975 in mm:make-on in k21827 in k18307 in k18304 in k18301 in k18298 in k17861 in k17858 in k17855 in k17852 in k17849 in k17327 in k17324 in k16801 in k16798 in k16795 in k16792 in k16789 in k16786 in k16783 in k16780 in k16777 in k16774 in k16771 in k16768 in k16765 in k16762 in k16759 in k16756 in k16753 in k16750 in k16747 in k16744 in k16741 in k16602 in k16599 in k16596 in k16593 in k16537 in k16534 in k16531 in k16528 in k16525 in k16522 in k16519 in k16516 in k15271 in k15202 in k15009 in k15006 in k14901 in k14850 in k7607 in k7604 in k5838 in k5545 in k5542 in k5538 in k5247 in k5244 in k5241 in k5238 */
static void C_ccall f_21993(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4,C_word t5,C_word t6){
C_word tmp;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word ab[5],*a=ab;
if(c!=7) C_bad_argc_2(c,7,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr7,(void*)f_21993,7,t0,t1,t2,t3,t4,t5,t6);}
t7=(C_word)C_a_i_bytevector(&a,1,C_fix(3));
t8=(C_word)C_i_foreign_fixnum_argumentp(t2);
t9=(C_word)C_i_foreign_flonum_argumentp(t3);
t10=(C_word)C_i_foreign_fixnum_argumentp(t4);
t11=(C_word)C_i_foreign_fixnum_argumentp(t5);
t12=(C_word)C_i_foreign_fixnum_argumentp(t6);
t13=t1;
((C_proc2)(void*)(*((C_word*)t13+1)))(2,t13,(C_word)stub3940(t7,t8,t9,t10,t11,t12));}

/* parse-iteration in k18307 in k18304 in k18301 in k18298 in k17861 in k17858 in k17855 in k17852 in k17849 in k17327 in k17324 in k16801 in k16798 in k16795 in k16792 in k16789 in k16786 in k16783 in k16780 in k16777 in k16774 in k16771 in k16768 in k16765 in k16762 in k16759 in k16756 in k16753 in k16750 in k16747 in k16744 in k16741 in k16602 in k16599 in k16596 in k16593 in k16537 in k16534 in k16531 in k16528 in k16525 in k16522 in k16519 in k16516 in k15271 in k15202 in k15009 in k15006 in k14901 in k14850 in k7607 in k7604 in k5838 in k5545 in k5542 in k5538 in k5247 in k5244 in k5241 in k5238 */
static void C_fcall f_21635(C_word t1,C_word t2,C_word t3,C_word t4){
C_word tmp;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word ab[11],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_21635,NULL,4,t1,t2,t3,t4);}
t5=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_21643,a[2]=t2,a[3]=t1,tmp=(C_word)a,a+=4,tmp);
t6=t3;
t7=(*a=C_VECTOR_TYPE|1,a[1]=t6,tmp=(C_word)a,a+=2,tmp);
t8=(C_word)C_i_nullp(((C_word*)t7)[1]);
t9=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_21475,a[2]=t4,a[3]=t7,a[4]=t5,tmp=(C_word)a,a+=5,tmp);
if(C_truep(t8)){
t10=t9;
f_21475(t10,t8);}
else{
t10=(C_word)C_i_car(((C_word*)t7)[1]);
t11=(C_word)C_i_symbolp(t10);
t12=t9;
f_21475(t12,(C_word)C_i_not(t11));}}

/* k21473 in parse-iteration in k18307 in k18304 in k18301 in k18298 in k17861 in k17858 in k17855 in k17852 in k17849 in k17327 in k17324 in k16801 in k16798 in k16795 in k16792 in k16789 in k16786 in k16783 in k16780 in k16777 in k16774 in k16771 in k16768 in k16765 in k16762 in k16759 in k16756 in k16753 in k16750 in k16747 in k16744 in k16741 in k16602 in k16599 in k16596 in k16593 in k16537 in k16534 in k16531 in k16528 in k16525 in k16522 in k16519 in k16516 in k15271 in k15202 in k15009 in k15006 in k14901 in k14850 in k7607 in k7604 in k5838 in k5545 in k5542 in k5538 in k5247 in k5244 in k5241 in k5238 */
static void C_fcall f_21475(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word ab[37],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_21475,NULL,2,t0,t1);}
if(C_truep(t1)){
t2=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_21482,a[2]=((C_word*)t0)[4],tmp=(C_word)a,a+=3,tmp);
C_trace("ChickenBridge.scm: 365  make-loop-clause");
f_18419(t2,(C_word)C_a_i_list(&a,4,lf[374],lf[547],lf[379],((C_word*)((C_word*)t0)[3])[1]));}
else{
t2=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_21483,a[2]=((C_word)li316),tmp=(C_word)a,a+=3,tmp);
t3=((C_word*)((C_word*)t0)[3])[1];
t4=(*a=C_VECTOR_TYPE|1,a[1]=t3,tmp=(C_word)a,a+=2,tmp);
t5=C_SCHEME_END_OF_LIST;
t6=(*a=C_VECTOR_TYPE|1,a[1]=t5,tmp=(C_word)a,a+=2,tmp);
t7=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_21508,a[2]=t6,a[3]=((C_word*)t0)[4],tmp=(C_word)a,a+=4,tmp);
t8=C_SCHEME_UNDEFINED;
t9=(*a=C_VECTOR_TYPE|1,a[1]=t8,tmp=(C_word)a,a+=2,tmp);
t10=C_set_block_item(t9,0,(*a=C_CLOSURE_TYPE|8,a[1]=(C_word)f_21510,a[2]=t2,a[3]=((C_word*)t0)[2],a[4]=t9,a[5]=t6,a[6]=t4,a[7]=((C_word*)t0)[3],a[8]=((C_word)li319),tmp=(C_word)a,a+=9,tmp));
t11=((C_word*)t9)[1];
f_21510(t11,t7,C_SCHEME_FALSE,C_SCHEME_FALSE,C_SCHEME_END_OF_LIST,C_SCHEME_END_OF_LIST);}}

/* do3738 in k21473 in parse-iteration in k18307 in k18304 in k18301 in k18298 in k17861 in k17858 in k17855 in k17852 in k17849 in k17327 in k17324 in k16801 in k16798 in k16795 in k16792 in k16789 in k16786 in k16783 in k16780 in k16777 in k16774 in k16771 in k16768 in k16765 in k16762 in k16759 in k16756 in k16753 in k16750 in k16747 in k16744 in k16741 in k16602 in k16599 in k16596 in k16593 in k16537 in k16534 in k16531 in k16528 in k16525 in k16522 in k16519 in k16516 in k15271 in k15202 in k15009 in k15006 in k14901 in k14850 in k7607 in k7604 in k5838 in k5545 in k5542 in k5538 in k5247 in k5244 in k5241 in k5238 */
static void C_fcall f_21510(C_word t0,C_word t1,C_word t2,C_word t3,C_word t4,C_word t5){
C_word tmp;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word t14;
C_word t15;
C_word t16;
C_word ab[21],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_21510,NULL,6,t0,t1,t2,t3,t4,t5);}
t6=(*a=C_VECTOR_TYPE|1,a[1]=t2,tmp=(C_word)a,a+=2,tmp);
t7=(*a=C_VECTOR_TYPE|1,a[1]=t3,tmp=(C_word)a,a+=2,tmp);
t8=(*a=C_VECTOR_TYPE|1,a[1]=t4,tmp=(C_word)a,a+=2,tmp);
t9=(*a=C_VECTOR_TYPE|1,a[1]=t5,tmp=(C_word)a,a+=2,tmp);
if(C_truep((C_word)C_i_nullp(((C_word*)((C_word*)t0)[7])[1]))){
t10=t1;
((C_proc2)(void*)(*((C_word*)t10+1)))(2,t10,C_SCHEME_UNDEFINED);}
else{
t10=(*a=C_CLOSURE_TYPE|12,a[1]=(C_word)f_21520,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=t9,a[5]=t7,a[6]=t1,a[7]=((C_word*)t0)[4],a[8]=((C_word*)t0)[5],a[9]=t8,a[10]=((C_word*)t0)[7],a[11]=((C_word*)t0)[6],a[12]=t6,tmp=(C_word)a,a+=13,tmp);
t11=(C_word)C_i_car(((C_word*)((C_word*)t0)[7])[1]);
t12=(C_word)C_eqp(t11,lf[289]);
if(C_truep(t12)){
t13=(C_word)C_i_car(((C_word*)((C_word*)t0)[7])[1]);
t14=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[7])[1]);
t15=C_mutate(((C_word *)((C_word*)t0)[7])+1,t14);
t16=t10;
f_21520(t16,t13);}
else{
t13=t10;
f_21520(t13,C_SCHEME_UNDEFINED);}}}

/* k21518 in do3738 in k21473 in parse-iteration in k18307 in k18304 in k18301 in k18298 in k17861 in k17858 in k17855 in k17852 in k17849 in k17327 in k17324 in k16801 in k16798 in k16795 in k16792 in k16789 in k16786 in k16783 in k16780 in k16777 in k16774 in k16771 in k16768 in k16765 in k16762 in k16759 in k16756 in k16753 in k16750 in k16747 in k16744 in k16741 in k16602 in k16599 in k16596 in k16593 in k16537 in k16534 in k16531 in k16528 in k16525 in k16522 in k16519 in k16516 in k15271 in k15202 in k15009 in k15006 in k14901 in k14850 in k7607 in k7604 in k5838 in k5545 in k5542 in k5538 in k5247 in k5244 in k5241 in k5238 */
static void C_fcall f_21520(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[13],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_21520,NULL,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|12,a[1]=(C_word)f_21524,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],a[7]=((C_word*)t0)[7],a[8]=((C_word*)t0)[8],a[9]=((C_word*)t0)[9],a[10]=((C_word*)t0)[10],a[11]=((C_word*)t0)[11],a[12]=((C_word*)t0)[12],tmp=(C_word)a,a+=13,tmp);
t3=(C_word)C_i_car(((C_word*)((C_word*)t0)[10])[1]);
C_trace("ChickenBridge.scm: 365  loop-op?");
f_18641(t2,t3,((C_word*)t0)[3]);}

/* k21522 in k21518 in do3738 in k21473 in parse-iteration in k18307 in k18304 in k18301 in k18298 in k17861 in k17858 in k17855 in k17852 in k17849 in k17327 in k17324 in k16801 in k16798 in k16795 in k16792 in k16789 in k16786 in k16783 in k16780 in k16777 in k16774 in k16771 in k16768 in k16765 in k16762 in k16759 in k16756 in k16753 in k16750 in k16747 in k16744 in k16741 in k16602 in k16599 in k16596 in k16593 in k16537 in k16534 in k16531 in k16528 in k16525 in k16522 in k16519 in k16516 in k15271 in k15202 in k15009 in k15006 in k14901 in k14850 in k7607 in k7604 in k5838 in k5545 in k5542 in k5538 in k5247 in k5244 in k5241 in k5238 */
static void C_ccall f_21524(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[22],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_21524,2,t0,t1);}
t2=C_mutate(((C_word *)((C_word*)t0)[12])+1,t1);
t3=(*a=C_CLOSURE_TYPE|12,a[1]=(C_word)f_21527,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[12],a[7]=((C_word*)t0)[6],a[8]=((C_word*)t0)[7],a[9]=((C_word*)t0)[8],a[10]=((C_word*)t0)[9],a[11]=((C_word*)t0)[10],a[12]=((C_word*)t0)[11],tmp=(C_word)a,a+=13,tmp);
t4=((C_word*)((C_word*)t0)[12])[1];
if(C_truep(t4)){
t5=t3;
f_21527(2,t5,C_SCHEME_UNDEFINED);}
else{
t5=(C_word)C_i_car(((C_word*)((C_word*)t0)[10])[1]);
C_trace("ChickenBridge.scm: 365  loop-error");
f_18659(t3,((C_word*)t0)[3],((C_word*)((C_word*)t0)[11])[1],(C_word)C_a_i_list(&a,3,lf[552],t5,lf[553]));}}

/* k21525 in k21522 in k21518 in do3738 in k21473 in parse-iteration in k18307 in k18304 in k18301 in k18298 in k17861 in k17858 in k17855 in k17852 in k17849 in k17327 in k17324 in k16801 in k16798 in k16795 in k16792 in k16789 in k16786 in k16783 in k16780 in k16777 in k16774 in k16771 in k16768 in k16765 in k16762 in k16759 in k16756 in k16753 in k16750 in k16747 in k16744 in k16741 in k16602 in k16599 in k16596 in k16593 in k16537 in k16534 in k16531 in k16528 in k16525 in k16522 in k16519 in k16516 in k15271 in k15202 in k15009 in k15006 in k14901 in k14850 in k7607 in k7604 in k5838 in k5545 in k5542 in k5538 in k5247 in k5244 in k5241 in k5238 */
static void C_ccall f_21527(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[25],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_21527,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|12,a[1]=(C_word)f_21530,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],a[7]=((C_word*)t0)[7],a[8]=((C_word*)t0)[8],a[9]=((C_word*)t0)[9],a[10]=((C_word*)t0)[10],a[11]=((C_word*)t0)[11],a[12]=((C_word*)t0)[12],tmp=(C_word)a,a+=13,tmp);
t3=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_21579,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[9],a[4]=((C_word*)t0)[11],a[5]=((C_word*)t0)[6],a[6]=((C_word)li317),tmp=(C_word)a,a+=7,tmp);
t4=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_21588,a[2]=((C_word*)t0)[10],a[3]=((C_word*)t0)[5],a[4]=((C_word)li318),tmp=(C_word)a,a+=5,tmp);
C_trace("ChickenBridge.scm: 365  call-with-values");
C_call_with_values(4,0,t2,t3,t4);}

/* a21587 in k21525 in k21522 in k21518 in do3738 in k21473 in parse-iteration in k18307 in k18304 in k18301 in k18298 in k17861 in k17858 in k17855 in k17852 in k17849 in k17327 in k17324 in k16801 in k16798 in k16795 in k16792 in k16789 in k16786 in k16783 in k16780 in k16777 in k16774 in k16771 in k16768 in k16765 in k16762 in k16759 in k16756 in k16753 in k16750 in k16747 in k16744 in k16741 in k16602 in k16599 in k16596 in k16593 in k16537 in k16534 in k16531 in k16528 in k16525 in k16522 in k16519 in k16516 in k15271 in k15202 in k15009 in k15006 in k14901 in k14850 in k7607 in k7604 in k5838 in k5545 in k5542 in k5538 in k5247 in k5244 in k5241 in k5238 */
static void C_ccall f_21588(C_word c,C_word t0,C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word t6;
C_word *a;
if(c!=4) C_bad_argc_2(c,4,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr4,(void*)f_21588,4,t0,t1,t2,t3);}
t4=C_mutate(((C_word *)((C_word*)t0)[3])+1,t2);
t5=C_mutate(((C_word *)((C_word*)t0)[2])+1,t3);
t6=t1;
((C_proc2)(void*)(*((C_word*)t6+1)))(2,t6,t5);}

/* a21578 in k21525 in k21522 in k21518 in do3738 in k21473 in parse-iteration in k18307 in k18304 in k18301 in k18298 in k17861 in k17858 in k17855 in k17852 in k17849 in k17327 in k17324 in k16801 in k16798 in k16795 in k16792 in k16789 in k16786 in k16783 in k16780 in k16777 in k16774 in k16771 in k16768 in k16765 in k16762 in k16759 in k16756 in k16753 in k16750 in k16747 in k16744 in k16741 in k16602 in k16599 in k16596 in k16593 in k16537 in k16534 in k16531 in k16528 in k16525 in k16522 in k16519 in k16516 in k15271 in k15202 in k15009 in k15006 in k14901 in k14850 in k7607 in k7604 in k5838 in k5545 in k5542 in k5538 in k5247 in k5244 in k5241 in k5238 */
static void C_ccall f_21579(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word *a;
if(c!=2) C_bad_argc_2(c,2,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_21579,2,t0,t1);}
t2=(C_word)C_i_cadr(((C_word*)((C_word*)t0)[5])[1]);
t3=t2;
((C_proc5)C_retrieve_proc(t3))(5,t3,t1,((C_word*)((C_word*)t0)[4])[1],((C_word*)((C_word*)t0)[3])[1],((C_word*)t0)[2]);}

/* k21528 in k21525 in k21522 in k21518 in do3738 in k21473 in parse-iteration in k18307 in k18304 in k18301 in k18298 in k17861 in k17858 in k17855 in k17852 in k17849 in k17327 in k17324 in k16801 in k16798 in k16795 in k16792 in k16789 in k16786 in k16783 in k16780 in k16777 in k16774 in k16771 in k16768 in k16765 in k16762 in k16759 in k16756 in k16753 in k16750 in k16747 in k16744 in k16741 in k16602 in k16599 in k16596 in k16593 in k16537 in k16534 in k16531 in k16528 in k16525 in k16522 in k16519 in k16516 in k15271 in k15202 in k15009 in k15006 in k14901 in k14850 in k7607 in k7604 in k5838 in k5545 in k5542 in k5538 in k5247 in k5244 in k5241 in k5238 */
static void C_ccall f_21530(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[19],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_21530,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|10,a[1]=(C_word)f_21533,a[2]=((C_word*)t0)[4],a[3]=((C_word*)t0)[5],a[4]=((C_word*)t0)[6],a[5]=((C_word*)t0)[7],a[6]=((C_word*)t0)[8],a[7]=((C_word*)t0)[9],a[8]=((C_word*)t0)[10],a[9]=((C_word*)t0)[11],a[10]=((C_word*)t0)[12],tmp=(C_word)a,a+=11,tmp);
t3=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_21549,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[12],a[4]=((C_word*)t0)[3],a[5]=t2,a[6]=((C_word*)t0)[6],a[7]=((C_word*)t0)[4],tmp=(C_word)a,a+=8,tmp);
C_trace("ChickenBridge.scm: 365  op-type?");
f_21483(t3,((C_word*)((C_word*)t0)[6])[1],lf[538]);}

/* k21547 in k21528 in k21525 in k21522 in k21518 in do3738 in k21473 in parse-iteration in k18307 in k18304 in k18301 in k18298 in k17861 in k17858 in k17855 in k17852 in k17849 in k17327 in k17324 in k16801 in k16798 in k16795 in k16792 in k16789 in k16786 in k16783 in k16780 in k16777 in k16774 in k16771 in k16768 in k16765 in k16762 in k16759 in k16756 in k16753 in k16750 in k16747 in k16744 in k16741 in k16602 in k16599 in k16596 in k16593 in k16537 in k16534 in k16531 in k16528 in k16525 in k16522 in k16519 in k16516 in k15271 in k15202 in k15009 in k15006 in k14901 in k14850 in k7607 in k7604 in k5838 in k5545 in k5542 in k5538 in k5247 in k5244 in k5241 in k5238 */
static void C_ccall f_21549(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_21549,2,t0,t1);}
if(C_truep(t1)){
t2=C_mutate(((C_word *)((C_word*)t0)[7])+1,((C_word*)((C_word*)t0)[6])[1]);
t3=((C_word*)t0)[5];
f_21533(2,t3,t2);}
else{
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_21556,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[6],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
C_trace("ChickenBridge.scm: 365  op-type?");
f_21483(t2,((C_word*)((C_word*)t0)[6])[1],lf[551]);}}

/* k21554 in k21547 in k21528 in k21525 in k21522 in k21518 in do3738 in k21473 in parse-iteration in k18307 in k18304 in k18301 in k18298 in k17861 in k17858 in k17855 in k17852 in k17849 in k17327 in k17324 in k16801 in k16798 in k16795 in k16792 in k16789 in k16786 in k16783 in k16780 in k16777 in k16774 in k16771 in k16768 in k16765 in k16762 in k16759 in k16756 in k16753 in k16750 in k16747 in k16744 in k16741 in k16602 in k16599 in k16596 in k16593 in k16537 in k16534 in k16531 in k16528 in k16525 in k16522 in k16519 in k16516 in k15271 in k15202 in k15009 in k15006 in k14901 in k14850 in k7607 in k7604 in k5838 in k5545 in k5542 in k5538 in k5247 in k5244 in k5241 in k5238 */
static void C_ccall f_21556(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[15],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_21556,2,t0,t1);}
if(C_truep(t1)){
if(C_truep((C_word)C_i_nullp(((C_word*)((C_word*)t0)[6])[1]))){
t2=((C_word*)t0)[5];
f_21533(2,t2,C_SCHEME_UNDEFINED);}
else{
t2=(C_word)C_i_car(((C_word*)((C_word*)t0)[4])[1]);
t3=(C_word)C_i_car(((C_word*)((C_word*)t0)[6])[1]);
C_trace("ChickenBridge.scm: 365  loop-error");
f_18659(((C_word*)t0)[5],((C_word*)t0)[3],((C_word*)((C_word*)t0)[2])[1],(C_word)C_a_i_list(&a,5,lf[548],t2,lf[549],t3,lf[550]));}}
else{
t2=((C_word*)t0)[5];
f_21533(2,t2,C_SCHEME_UNDEFINED);}}

/* k21531 in k21528 in k21525 in k21522 in k21518 in do3738 in k21473 in parse-iteration in k18307 in k18304 in k18301 in k18298 in k17861 in k17858 in k17855 in k17852 in k17849 in k17327 in k17324 in k16801 in k16798 in k16795 in k16792 in k16789 in k16786 in k16783 in k16780 in k16777 in k16774 in k16771 in k16768 in k16765 in k16762 in k16759 in k16756 in k16753 in k16750 in k16747 in k16744 in k16741 in k16602 in k16599 in k16596 in k16593 in k16537 in k16534 in k16531 in k16528 in k16525 in k16522 in k16519 in k16516 in k15271 in k15202 in k15009 in k15006 in k14901 in k14850 in k7607 in k7604 in k5838 in k5545 in k5542 in k5538 in k5247 in k5244 in k5241 in k5238 */
static void C_ccall f_21533(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[12],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_21533,2,t0,t1);}
t2=C_mutate(((C_word *)((C_word*)t0)[10])+1,((C_word*)((C_word*)t0)[9])[1]);
t3=C_mutate(((C_word *)((C_word*)t0)[9])+1,((C_word*)((C_word*)t0)[8])[1]);
t4=(*a=C_CLOSURE_TYPE|8,a[1]=(C_word)f_21539,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[8],a[4]=((C_word*)t0)[3],a[5]=((C_word*)t0)[4],a[6]=((C_word*)t0)[5],a[7]=((C_word*)t0)[6],a[8]=((C_word*)t0)[7],tmp=(C_word)a,a+=9,tmp);
t5=(C_word)C_a_i_list(&a,1,((C_word*)((C_word*)t0)[3])[1]);
C_trace("ChickenBridge.scm: 365  append");
t6=*((C_word*)lf[20]+1);
((C_proc4)C_retrieve_proc(t6))(4,t6,t4,((C_word*)((C_word*)t0)[7])[1],t5);}

/* k21537 in k21531 in k21528 in k21525 in k21522 in k21518 in do3738 in k21473 in parse-iteration in k18307 in k18304 in k18301 in k18298 in k17861 in k17858 in k17855 in k17852 in k17849 in k17327 in k17324 in k16801 in k16798 in k16795 in k16792 in k16789 in k16786 in k16783 in k16780 in k16777 in k16774 in k16771 in k16768 in k16765 in k16762 in k16759 in k16756 in k16753 in k16750 in k16747 in k16744 in k16741 in k16602 in k16599 in k16596 in k16593 in k16537 in k16534 in k16531 in k16528 in k16525 in k16522 in k16519 in k16516 in k15271 in k15202 in k15009 in k15006 in k14901 in k14850 in k7607 in k7604 in k5838 in k5545 in k5542 in k5538 in k5247 in k5244 in k5241 in k5238 */
static void C_ccall f_21539(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[8])+1,t1);
t3=((C_word*)((C_word*)t0)[7])[1];
f_21510(t3,((C_word*)t0)[6],((C_word*)((C_word*)t0)[5])[1],((C_word*)((C_word*)t0)[4])[1],((C_word*)((C_word*)t0)[3])[1],((C_word*)((C_word*)t0)[2])[1]);}

/* k21506 in k21473 in parse-iteration in k18307 in k18304 in k18301 in k18298 in k17861 in k17858 in k17855 in k17852 in k17849 in k17327 in k17324 in k16801 in k16798 in k16795 in k16792 in k16789 in k16786 in k16783 in k16780 in k16777 in k16774 in k16771 in k16768 in k16765 in k16762 in k16759 in k16756 in k16753 in k16750 in k16747 in k16744 in k16741 in k16602 in k16599 in k16596 in k16593 in k16537 in k16534 in k16531 in k16528 in k16525 in k16522 in k16519 in k16516 in k15271 in k15202 in k15009 in k15006 in k14901 in k14850 in k7607 in k7604 in k5838 in k5545 in k5542 in k5538 in k5247 in k5244 in k5241 in k5238 */
static void C_ccall f_21508(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
t2=((C_word*)t0)[3];
f_21643(t2,((C_word*)((C_word*)t0)[2])[1]);}

/* op-type? in k21473 in parse-iteration in k18307 in k18304 in k18301 in k18298 in k17861 in k17858 in k17855 in k17852 in k17849 in k17327 in k17324 in k16801 in k16798 in k16795 in k16792 in k16789 in k16786 in k16783 in k16780 in k16777 in k16774 in k16771 in k16768 in k16765 in k16762 in k16759 in k16756 in k16753 in k16750 in k16747 in k16744 in k16741 in k16602 in k16599 in k16596 in k16593 in k16537 in k16534 in k16531 in k16528 in k16525 in k16522 in k16519 in k16516 in k15271 in k15202 in k15009 in k15006 in k14901 in k14850 in k7607 in k7604 in k5838 in k5545 in k5542 in k5538 in k5247 in k5244 in k5241 in k5238 */
static void C_fcall f_21483(C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word t6;
C_word *a;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_21483,NULL,3,t1,t2,t3);}
t4=(C_word)C_i_cddr(t2);
if(C_truep((C_word)C_i_nullp(t4))){
t5=t1;
((C_proc2)(void*)(*((C_word*)t5+1)))(2,t5,C_SCHEME_FALSE);}
else{
t5=(C_word)C_i_caddr(t2);
t6=t1;
((C_proc2)(void*)(*((C_word*)t6+1)))(2,t6,(C_word)C_eqp(t5,t3));}}

/* k21480 in k21473 in parse-iteration in k18307 in k18304 in k18301 in k18298 in k17861 in k17858 in k17855 in k17852 in k17849 in k17327 in k17324 in k16801 in k16798 in k16795 in k16792 in k16789 in k16786 in k16783 in k16780 in k16777 in k16774 in k16771 in k16768 in k16765 in k16762 in k16759 in k16756 in k16753 in k16750 in k16747 in k16744 in k16741 in k16602 in k16599 in k16596 in k16593 in k16537 in k16534 in k16531 in k16528 in k16525 in k16522 in k16519 in k16516 in k15271 in k15202 in k15009 in k15006 in k14901 in k14850 in k7607 in k7604 in k5838 in k5545 in k5542 in k5538 in k5247 in k5244 in k5241 in k5238 */
static void C_ccall f_21482(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word ab[3],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_21482,2,t0,t1);}
t2=((C_word*)t0)[2];
f_21643(t2,(C_word)C_a_i_list(&a,1,t1));}

/* k21641 in parse-iteration in k18307 in k18304 in k18301 in k18298 in k17861 in k17858 in k17855 in k17852 in k17849 in k17327 in k17324 in k16801 in k16798 in k16795 in k16792 in k16789 in k16786 in k16783 in k16780 in k16777 in k16774 in k16771 in k16768 in k16765 in k16762 in k16759 in k16756 in k16753 in k16750 in k16747 in k16744 in k16741 in k16602 in k16599 in k16596 in k16593 in k16537 in k16534 in k16531 in k16528 in k16525 in k16522 in k16519 in k16516 in k15271 in k15202 in k15009 in k15006 in k14901 in k14850 in k7607 in k7604 in k5838 in k5545 in k5542 in k5538 in k5247 in k5244 in k5241 in k5238 */
static void C_fcall f_21643(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 365  gather-clauses");
f_18570(((C_word*)t0)[3],((C_word*)t0)[2],t1);}

/* parse-conditional in k18307 in k18304 in k18301 in k18298 in k17861 in k17858 in k17855 in k17852 in k17849 in k17327 in k17324 in k16801 in k16798 in k16795 in k16792 in k16789 in k16786 in k16783 in k16780 in k16777 in k16774 in k16771 in k16768 in k16765 in k16762 in k16759 in k16756 in k16753 in k16750 in k16747 in k16744 in k16741 in k16602 in k16599 in k16596 in k16593 in k16537 in k16534 in k16531 in k16528 in k16525 in k16522 in k16519 in k16516 in k15271 in k15202 in k15009 in k15006 in k14901 in k14850 in k7607 in k7604 in k5838 in k5545 in k5542 in k5538 in k5247 in k5244 in k5241 in k5238 */
static void C_ccall f_21221(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4){
C_word tmp;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word t14;
C_word t15;
C_word t16;
C_word t17;
C_word t18;
C_word t19;
C_word ab[34],*a=ab;
if(c!=5) C_bad_argc_2(c,5,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr5,(void*)f_21221,5,t0,t1,t2,t3,t4);}
t5=(*a=C_VECTOR_TYPE|1,a[1]=t2,tmp=(C_word)a,a+=2,tmp);
t6=(C_word)C_a_i_cons(&a,2,lf[541],t4);
t7=((C_word*)t5)[1];
t8=(C_word)C_i_car(((C_word*)t5)[1]);
t9=C_SCHEME_END_OF_LIST;
t10=(*a=C_VECTOR_TYPE|1,a[1]=t9,tmp=(C_word)a,a+=2,tmp);
t11=C_SCHEME_END_OF_LIST;
t12=(*a=C_VECTOR_TYPE|1,a[1]=t11,tmp=(C_word)a,a+=2,tmp);
t13=C_SCHEME_END_OF_LIST;
t14=(*a=C_VECTOR_TYPE|1,a[1]=t13,tmp=(C_word)a,a+=2,tmp);
t15=C_SCHEME_END_OF_LIST;
t16=(*a=C_VECTOR_TYPE|1,a[1]=t15,tmp=(C_word)a,a+=2,tmp);
t17=(*a=C_CLOSURE_TYPE|11,a[1]=(C_word)f_21243,a[2]=t8,a[3]=t7,a[4]=t3,a[5]=t6,a[6]=t16,a[7]=t14,a[8]=t1,a[9]=t10,a[10]=t12,a[11]=t5,tmp=(C_word)a,a+=12,tmp);
t18=(C_word)C_i_cdr(((C_word*)t5)[1]);
if(C_truep((C_word)C_i_nullp(t18))){
C_trace("ChickenBridge.scm: 365  loop-error");
f_18659(t17,t6,t7,(C_word)C_a_i_list(&a,3,lf[544],t8,lf[545]));}
else{
t19=t17;
f_21243(2,t19,C_SCHEME_UNDEFINED);}}

/* k21241 in parse-conditional in k18307 in k18304 in k18301 in k18298 in k17861 in k17858 in k17855 in k17852 in k17849 in k17327 in k17324 in k16801 in k16798 in k16795 in k16792 in k16789 in k16786 in k16783 in k16780 in k16777 in k16774 in k16771 in k16768 in k16765 in k16762 in k16759 in k16756 in k16753 in k16750 in k16747 in k16744 in k16741 in k16602 in k16599 in k16596 in k16593 in k16537 in k16534 in k16531 in k16528 in k16525 in k16522 in k16519 in k16516 in k15271 in k15202 in k15009 in k15006 in k14901 in k14850 in k7607 in k7604 in k5838 in k5545 in k5542 in k5538 in k5247 in k5244 in k5241 in k5238 */
static void C_ccall f_21243(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word ab[15],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_21243,2,t0,t1);}
t2=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[11])[1]);
t3=C_mutate(((C_word *)((C_word*)t0)[11])+1,t2);
t4=(C_word)C_i_car(((C_word*)((C_word*)t0)[11])[1]);
t5=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[11])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[11])+1,t5);
t7=C_mutate(((C_word *)((C_word*)t0)[10])+1,t4);
t8=(*a=C_CLOSURE_TYPE|11,a[1]=(C_word)f_21258,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],a[7]=((C_word*)t0)[11],a[8]=((C_word*)t0)[7],a[9]=((C_word*)t0)[8],a[10]=((C_word*)t0)[9],a[11]=((C_word*)t0)[10],tmp=(C_word)a,a+=12,tmp);
if(C_truep((C_word)C_i_nullp(((C_word*)((C_word*)t0)[11])[1]))){
C_trace("ChickenBridge.scm: 365  loop-error");
f_18659(t8,((C_word*)t0)[5],((C_word*)((C_word*)t0)[11])[1],(C_word)C_a_i_list(&a,1,lf[543]));}
else{
t9=t8;
f_21258(2,t9,C_SCHEME_UNDEFINED);}}

/* k21256 in k21241 in parse-conditional in k18307 in k18304 in k18301 in k18298 in k17861 in k17858 in k17855 in k17852 in k17849 in k17327 in k17324 in k16801 in k16798 in k16795 in k16792 in k16789 in k16786 in k16783 in k16780 in k16777 in k16774 in k16771 in k16768 in k16765 in k16762 in k16759 in k16756 in k16753 in k16750 in k16747 in k16744 in k16741 in k16602 in k16599 in k16596 in k16593 in k16537 in k16534 in k16531 in k16528 in k16525 in k16522 in k16519 in k16516 in k15271 in k15202 in k15009 in k15006 in k14901 in k14850 in k7607 in k7604 in k5838 in k5545 in k5542 in k5538 in k5247 in k5244 in k5241 in k5238 */
static void C_ccall f_21258(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[17],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_21258,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|10,a[1]=(C_word)f_21261,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],a[7]=((C_word*)t0)[8],a[8]=((C_word*)t0)[9],a[9]=((C_word*)t0)[10],a[10]=((C_word*)t0)[11],tmp=(C_word)a,a+=11,tmp);
t3=(C_word)C_eqp(((C_word*)t0)[2],lf[8]);
if(C_truep(t3)){
t4=(C_word)C_a_i_list(&a,2,lf[291],((C_word*)((C_word*)t0)[11])[1]);
t5=C_mutate(((C_word *)((C_word*)t0)[11])+1,t4);
t6=t2;
f_21261(t6,t5);}
else{
t4=t2;
f_21261(t4,C_SCHEME_UNDEFINED);}}

/* k21259 in k21256 in k21241 in parse-conditional in k18307 in k18304 in k18301 in k18298 in k17861 in k17858 in k17855 in k17852 in k17849 in k17327 in k17324 in k16801 in k16798 in k16795 in k16792 in k16789 in k16786 in k16783 in k16780 in k16777 in k16774 in k16771 in k16768 in k16765 in k16762 in k16759 in k16756 in k16753 in k16750 in k16747 in k16744 in k16741 in k16602 in k16599 in k16596 in k16593 in k16537 in k16534 in k16531 in k16528 in k16525 in k16522 in k16519 in k16516 in k15271 in k15202 in k15009 in k15006 in k14901 in k14850 in k7607 in k7604 in k5838 in k5545 in k5542 in k5538 in k5247 in k5244 in k5241 in k5238 */
static void C_fcall f_21261(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[22],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_21261,NULL,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|10,a[1]=(C_word)f_21264,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],a[7]=((C_word*)t0)[7],a[8]=((C_word*)t0)[8],a[9]=((C_word*)t0)[9],a[10]=((C_word*)t0)[10],tmp=(C_word)a,a+=11,tmp);
t3=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_21431,a[2]=((C_word*)t0)[4],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[6],a[5]=((C_word)li313),tmp=(C_word)a,a+=6,tmp);
t4=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_21437,a[2]=((C_word*)t0)[6],a[3]=((C_word*)t0)[7],a[4]=((C_word)li314),tmp=(C_word)a,a+=5,tmp);
C_trace("ChickenBridge.scm: 365  call-with-values");
C_call_with_values(4,0,t2,t3,t4);}

/* a21436 in k21259 in k21256 in k21241 in parse-conditional in k18307 in k18304 in k18301 in k18298 in k17861 in k17858 in k17855 in k17852 in k17849 in k17327 in k17324 in k16801 in k16798 in k16795 in k16792 in k16789 in k16786 in k16783 in k16780 in k16777 in k16774 in k16771 in k16768 in k16765 in k16762 in k16759 in k16756 in k16753 in k16750 in k16747 in k16744 in k16741 in k16602 in k16599 in k16596 in k16593 in k16537 in k16534 in k16531 in k16528 in k16525 in k16522 in k16519 in k16516 in k15271 in k15202 in k15009 in k15006 in k14901 in k14850 in k7607 in k7604 in k5838 in k5545 in k5542 in k5538 in k5247 in k5244 in k5241 in k5238 */
static void C_ccall f_21437(C_word c,C_word t0,C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word t6;
C_word *a;
if(c!=4) C_bad_argc_2(c,4,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr4,(void*)f_21437,4,t0,t1,t2,t3);}
t4=C_mutate(((C_word *)((C_word*)t0)[3])+1,t2);
t5=C_mutate(((C_word *)((C_word*)t0)[2])+1,t3);
t6=t1;
((C_proc2)(void*)(*((C_word*)t6+1)))(2,t6,t5);}

/* a21430 in k21259 in k21256 in k21241 in parse-conditional in k18307 in k18304 in k18301 in k18298 in k17861 in k17858 in k17855 in k17852 in k17849 in k17327 in k17324 in k16801 in k16798 in k16795 in k16792 in k16789 in k16786 in k16783 in k16780 in k16777 in k16774 in k16771 in k16768 in k16765 in k16762 in k16759 in k16756 in k16753 in k16750 in k16747 in k16744 in k16741 in k16602 in k16599 in k16596 in k16593 in k16537 in k16534 in k16531 in k16528 in k16525 in k16522 in k16519 in k16516 in k15271 in k15202 in k15009 in k15006 in k14901 in k14850 in k7607 in k7604 in k5838 in k5545 in k5542 in k5538 in k5247 in k5244 in k5241 in k5238 */
static void C_ccall f_21431(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
if(c!=2) C_bad_argc_2(c,2,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_21431,2,t0,t1);}
C_trace("ChickenBridge.scm: 365  parse-then-else-dependents");
f_21090(t1,((C_word*)((C_word*)t0)[4])[1],((C_word*)t0)[3],((C_word*)t0)[2]);}

/* k21262 in k21259 in k21256 in k21241 in parse-conditional in k18307 in k18304 in k18301 in k18298 in k17861 in k17858 in k17855 in k17852 in k17849 in k17327 in k17324 in k16801 in k16798 in k16795 in k16792 in k16789 in k16786 in k16783 in k16780 in k16777 in k16774 in k16771 in k16768 in k16765 in k16762 in k16759 in k16756 in k16753 in k16750 in k16747 in k16744 in k16741 in k16602 in k16599 in k16596 in k16593 in k16537 in k16534 in k16531 in k16528 in k16525 in k16522 in k16519 in k16516 in k15271 in k15202 in k15009 in k15006 in k14901 in k14850 in k7607 in k7604 in k5838 in k5545 in k5542 in k5538 in k5247 in k5244 in k5241 in k5238 */
static void C_ccall f_21264(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word ab[15],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_21264,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|10,a[1]=(C_word)f_21267,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],a[7]=((C_word*)t0)[7],a[8]=((C_word*)t0)[8],a[9]=((C_word*)t0)[9],a[10]=((C_word*)t0)[10],tmp=(C_word)a,a+=11,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[7])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
t4=(C_word)C_i_car(((C_word*)((C_word*)t0)[7])[1]);
t5=C_mutate(((C_word *)((C_word*)t0)[7])+1,t4);
t6=t2;
f_21267(t6,t5);}
else{
t4=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_21413,a[2]=t2,a[3]=((C_word*)t0)[7],tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 365  gather-clauses");
f_18570(t4,C_SCHEME_END_OF_LIST,((C_word*)((C_word*)t0)[7])[1]);}}

/* k21411 in k21262 in k21259 in k21256 in k21241 in parse-conditional in k18307 in k18304 in k18301 in k18298 in k17861 in k17858 in k17855 in k17852 in k17849 in k17327 in k17324 in k16801 in k16798 in k16795 in k16792 in k16789 in k16786 in k16783 in k16780 in k16777 in k16774 in k16771 in k16768 in k16765 in k16762 in k16759 in k16756 in k16753 in k16750 in k16747 in k16744 in k16741 in k16602 in k16599 in k16596 in k16593 in k16537 in k16534 in k16531 in k16528 in k16525 in k16522 in k16519 in k16516 in k15271 in k15202 in k15009 in k15006 in k14901 in k14850 in k7607 in k7604 in k5838 in k5545 in k5542 in k5538 in k5247 in k5244 in k5241 in k5238 */
static void C_ccall f_21413(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[3])+1,t1);
t3=((C_word*)t0)[2];
f_21267(t3,t2);}

/* k21265 in k21262 in k21259 in k21256 in k21241 in parse-conditional in k18307 in k18304 in k18301 in k18298 in k17861 in k17858 in k17855 in k17852 in k17849 in k17327 in k17324 in k16801 in k16798 in k16795 in k16792 in k16789 in k16786 in k16783 in k16780 in k16777 in k16774 in k16771 in k16768 in k16765 in k16762 in k16759 in k16756 in k16753 in k16750 in k16747 in k16744 in k16741 in k16602 in k16599 in k16596 in k16593 in k16537 in k16534 in k16531 in k16528 in k16525 in k16522 in k16519 in k16516 in k15271 in k15202 in k15009 in k15006 in k14901 in k14850 in k7607 in k7604 in k5838 in k5545 in k5542 in k5538 in k5247 in k5244 in k5241 in k5238 */
static void C_fcall f_21267(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[11],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_21267,NULL,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|10,a[1]=(C_word)f_21270,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],a[7]=((C_word*)t0)[7],a[8]=((C_word*)t0)[8],a[9]=((C_word*)t0)[9],a[10]=((C_word*)t0)[10],tmp=(C_word)a,a+=11,tmp);
C_trace("ChickenBridge.scm: 365  loop-operator-set!");
f_18317(t2,((C_word*)((C_word*)t0)[7])[1],lf[22]);}

/* k21268 in k21265 in k21262 in k21259 in k21256 in k21241 in parse-conditional in k18307 in k18304 in k18301 in k18298 in k17861 in k17858 in k17855 in k17852 in k17849 in k17327 in k17324 in k16801 in k16798 in k16795 in k16792 in k16789 in k16786 in k16783 in k16780 in k16777 in k16774 in k16771 in k16768 in k16765 in k16762 in k16759 in k16756 in k16753 in k16750 in k16747 in k16744 in k16741 in k16602 in k16599 in k16596 in k16593 in k16537 in k16534 in k16531 in k16528 in k16525 in k16522 in k16519 in k16516 in k15271 in k15202 in k15009 in k15006 in k14901 in k14850 in k7607 in k7604 in k5838 in k5545 in k5542 in k5538 in k5247 in k5244 in k5241 in k5238 */
static void C_ccall f_21270(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[14],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_21270,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|10,a[1]=(C_word)f_21394,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],a[7]=((C_word*)t0)[7],a[8]=((C_word*)t0)[8],a[9]=((C_word*)t0)[9],a[10]=((C_word*)t0)[10],tmp=(C_word)a,a+=11,tmp);
t3=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_21406,a[2]=t2,tmp=(C_word)a,a+=3,tmp);
C_trace("ChickenBridge.scm: 365  loop-looping");
t4=C_retrieve2(lf[368],"loop-looping");
f_18371(3,t4,t3,((C_word*)((C_word*)t0)[7])[1]);}

/* k21404 in k21268 in k21265 in k21262 in k21259 in k21256 in k21241 in parse-conditional in k18307 in k18304 in k18301 in k18298 in k17861 in k17858 in k17855 in k17852 in k17849 in k17327 in k17324 in k16801 in k16798 in k16795 in k16792 in k16789 in k16786 in k16783 in k16780 in k16777 in k16774 in k16771 in k16768 in k16765 in k16762 in k16759 in k16756 in k16753 in k16750 in k16747 in k16744 in k16741 in k16602 in k16599 in k16596 in k16593 in k16537 in k16534 in k16531 in k16528 in k16525 in k16522 in k16519 in k16516 in k15271 in k15202 in k15009 in k15006 in k14901 in k14850 in k7607 in k7604 in k5838 in k5545 in k5542 in k5538 in k5247 in k5244 in k5241 in k5238 */
static void C_ccall f_21406(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[3],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_21406,2,t0,t1);}
t2=(C_word)C_a_i_cons(&a,2,lf[316],t1);
C_trace("ChickenBridge.scm: 365  append");
t3=*((C_word*)lf[20]+1);
((C_proc4)C_retrieve_proc(t3))(4,t3,((C_word*)t0)[2],t2,C_SCHEME_END_OF_LIST);}

/* k21392 in k21268 in k21265 in k21262 in k21259 in k21256 in k21241 in parse-conditional in k18307 in k18304 in k18301 in k18298 in k17861 in k17858 in k17855 in k17852 in k17849 in k17327 in k17324 in k16801 in k16798 in k16795 in k16792 in k16789 in k16786 in k16783 in k16780 in k16777 in k16774 in k16771 in k16768 in k16765 in k16762 in k16759 in k16756 in k16753 in k16750 in k16747 in k16744 in k16741 in k16602 in k16599 in k16596 in k16593 in k16537 in k16534 in k16531 in k16528 in k16525 in k16522 in k16519 in k16516 in k15271 in k15202 in k15009 in k15006 in k14901 in k14850 in k7607 in k7604 in k5838 in k5545 in k5542 in k5538 in k5247 in k5244 in k5241 in k5238 */
static void C_ccall f_21394(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word ab[28],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_21394,2,t0,t1);}
t2=(C_word)C_a_i_list(&a,4,lf[22],((C_word*)((C_word*)t0)[10])[1],t1,C_SCHEME_FALSE);
t3=C_mutate(((C_word *)((C_word*)t0)[9])+1,t2);
t4=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_21277,a[2]=((C_word*)t0)[9],a[3]=((C_word*)t0)[6],a[4]=((C_word*)t0)[7],a[5]=((C_word*)t0)[8],tmp=(C_word)a,a+=6,tmp);
t5=(*a=C_CLOSURE_TYPE|9,a[1]=(C_word)f_21290,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=t4,a[7]=((C_word*)t0)[7],a[8]=((C_word*)t0)[9],a[9]=((C_word*)t0)[6],tmp=(C_word)a,a+=10,tmp);
if(C_truep((C_word)C_i_nullp(((C_word*)((C_word*)t0)[6])[1]))){
t6=t5;
f_21290(t6,C_SCHEME_FALSE);}
else{
t6=(C_word)C_i_car(((C_word*)((C_word*)t0)[6])[1]);
t7=t5;
f_21290(t7,(C_word)C_eqp(t6,lf[18]));}}

/* k21288 in k21392 in k21268 in k21265 in k21262 in k21259 in k21256 in k21241 in parse-conditional in k18307 in k18304 in k18301 in k18298 in k17861 in k17858 in k17855 in k17852 in k17849 in k17327 in k17324 in k16801 in k16798 in k16795 in k16792 in k16789 in k16786 in k16783 in k16780 in k16777 in k16774 in k16771 in k16768 in k16765 in k16762 in k16759 in k16756 in k16753 in k16750 in k16747 in k16744 in k16741 in k16602 in k16599 in k16596 in k16593 in k16537 in k16534 in k16531 in k16528 in k16525 in k16522 in k16519 in k16516 in k15271 in k15202 in k15009 in k15006 in k14901 in k14850 in k7607 in k7604 in k5838 in k5545 in k5542 in k5538 in k5247 in k5244 in k5241 in k5238 */
static void C_fcall f_21290(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[12],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_21290,NULL,2,t0,t1);}
if(C_truep(t1)){
t2=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[9])[1]);
t3=C_mutate(((C_word *)((C_word*)t0)[9])+1,t2);
t4=(*a=C_CLOSURE_TYPE|8,a[1]=(C_word)f_21297,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[9],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],a[7]=((C_word*)t0)[7],a[8]=((C_word*)t0)[8],tmp=(C_word)a,a+=9,tmp);
if(C_truep((C_word)C_i_nullp(((C_word*)((C_word*)t0)[9])[1]))){
C_trace("ChickenBridge.scm: 365  loop-error");
f_18659(t4,((C_word*)t0)[4],((C_word*)t0)[2],(C_word)C_a_i_list(&a,1,lf[542]));}
else{
t5=t4;
f_21297(2,t5,C_SCHEME_UNDEFINED);}}
else{
t2=((C_word*)t0)[6];
f_21277(t2,C_SCHEME_UNDEFINED);}}

/* k21295 in k21288 in k21392 in k21268 in k21265 in k21262 in k21259 in k21256 in k21241 in parse-conditional in k18307 in k18304 in k18301 in k18298 in k17861 in k17858 in k17855 in k17852 in k17849 in k17327 in k17324 in k16801 in k16798 in k16795 in k16792 in k16789 in k16786 in k16783 in k16780 in k16777 in k16774 in k16771 in k16768 in k16765 in k16762 in k16759 in k16756 in k16753 in k16750 in k16747 in k16744 in k16741 in k16602 in k16599 in k16596 in k16593 in k16537 in k16534 in k16531 in k16528 in k16525 in k16522 in k16519 in k16516 in k15271 in k15202 in k15009 in k15006 in k14901 in k14850 in k7607 in k7604 in k5838 in k5545 in k5542 in k5538 in k5247 in k5244 in k5241 in k5238 */
static void C_ccall f_21297(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[18],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_21297,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_21300,a[2]=((C_word*)t0)[5],a[3]=((C_word*)t0)[6],a[4]=((C_word*)t0)[7],a[5]=((C_word*)t0)[8],tmp=(C_word)a,a+=6,tmp);
t3=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_21353,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[7],a[4]=((C_word*)t0)[3],a[5]=((C_word*)t0)[4],a[6]=((C_word)li311),tmp=(C_word)a,a+=7,tmp);
t4=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_21367,a[2]=((C_word*)t0)[4],a[3]=((C_word*)t0)[5],a[4]=((C_word)li312),tmp=(C_word)a,a+=5,tmp);
C_trace("ChickenBridge.scm: 365  call-with-values");
C_call_with_values(4,0,t2,t3,t4);}

/* a21366 in k21295 in k21288 in k21392 in k21268 in k21265 in k21262 in k21259 in k21256 in k21241 in parse-conditional in k18307 in k18304 in k18301 in k18298 in k17861 in k17858 in k17855 in k17852 in k17849 in k17327 in k17324 in k16801 in k16798 in k16795 in k16792 in k16789 in k16786 in k16783 in k16780 in k16777 in k16774 in k16771 in k16768 in k16765 in k16762 in k16759 in k16756 in k16753 in k16750 in k16747 in k16744 in k16741 in k16602 in k16599 in k16596 in k16593 in k16537 in k16534 in k16531 in k16528 in k16525 in k16522 in k16519 in k16516 in k15271 in k15202 in k15009 in k15006 in k14901 in k14850 in k7607 in k7604 in k5838 in k5545 in k5542 in k5538 in k5247 in k5244 in k5241 in k5238 */
static void C_ccall f_21367(C_word c,C_word t0,C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word t6;
C_word *a;
if(c!=4) C_bad_argc_2(c,4,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr4,(void*)f_21367,4,t0,t1,t2,t3);}
t4=C_mutate(((C_word *)((C_word*)t0)[3])+1,t2);
t5=C_mutate(((C_word *)((C_word*)t0)[2])+1,t3);
t6=t1;
((C_proc2)(void*)(*((C_word*)t6+1)))(2,t6,t5);}

/* a21352 in k21295 in k21288 in k21392 in k21268 in k21265 in k21262 in k21259 in k21256 in k21241 in parse-conditional in k18307 in k18304 in k18301 in k18298 in k17861 in k17858 in k17855 in k17852 in k17849 in k17327 in k17324 in k16801 in k16798 in k16795 in k16792 in k16789 in k16786 in k16783 in k16780 in k16777 in k16774 in k16771 in k16768 in k16765 in k16762 in k16759 in k16756 in k16753 in k16750 in k16747 in k16744 in k16741 in k16602 in k16599 in k16596 in k16593 in k16537 in k16534 in k16531 in k16528 in k16525 in k16522 in k16519 in k16516 in k15271 in k15202 in k15009 in k15006 in k14901 in k14850 in k7607 in k7604 in k5838 in k5545 in k5542 in k5538 in k5247 in k5244 in k5241 in k5238 */
static void C_ccall f_21353(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[8],*a=ab;
if(c!=2) C_bad_argc_2(c,2,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_21353,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_21361,a[2]=((C_word*)t0)[4],a[3]=((C_word*)t0)[5],a[4]=t1,tmp=(C_word)a,a+=5,tmp);
t3=(C_word)C_a_i_list(&a,1,((C_word*)((C_word*)t0)[3])[1]);
C_trace("ChickenBridge.scm: 365  append");
t4=*((C_word*)lf[20]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,((C_word*)t0)[2],t3);}

/* k21359 in a21352 in k21295 in k21288 in k21392 in k21268 in k21265 in k21262 in k21259 in k21256 in k21241 in parse-conditional in k18307 in k18304 in k18301 in k18298 in k17861 in k17858 in k17855 in k17852 in k17849 in k17327 in k17324 in k16801 in k16798 in k16795 in k16792 in k16789 in k16786 in k16783 in k16780 in k16777 in k16774 in k16771 in k16768 in k16765 in k16762 in k16759 in k16756 in k16753 in k16750 in k16747 in k16744 in k16741 in k16602 in k16599 in k16596 in k16593 in k16537 in k16534 in k16531 in k16528 in k16525 in k16522 in k16519 in k16516 in k15271 in k15202 in k15009 in k15006 in k14901 in k14850 in k7607 in k7604 in k5838 in k5545 in k5542 in k5538 in k5247 in k5244 in k5241 in k5238 */
static void C_ccall f_21361(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 365  parse-then-else-dependents");
f_21090(((C_word*)t0)[4],((C_word*)((C_word*)t0)[3])[1],t1,((C_word*)t0)[2]);}

/* k21298 in k21295 in k21288 in k21392 in k21268 in k21265 in k21262 in k21259 in k21256 in k21241 in parse-conditional in k18307 in k18304 in k18301 in k18298 in k17861 in k17858 in k17855 in k17852 in k17849 in k17327 in k17324 in k16801 in k16798 in k16795 in k16792 in k16789 in k16786 in k16783 in k16780 in k16777 in k16774 in k16771 in k16768 in k16765 in k16762 in k16759 in k16756 in k16753 in k16750 in k16747 in k16744 in k16741 in k16602 in k16599 in k16596 in k16593 in k16537 in k16534 in k16531 in k16528 in k16525 in k16522 in k16519 in k16516 in k15271 in k15202 in k15009 in k15006 in k14901 in k14850 in k7607 in k7604 in k5838 in k5545 in k5542 in k5538 in k5247 in k5244 in k5241 in k5238 */
static void C_ccall f_21300(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word ab[10],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_21300,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_21303,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],tmp=(C_word)a,a+=6,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[2])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
t4=(C_word)C_i_car(((C_word*)((C_word*)t0)[2])[1]);
t5=C_mutate(((C_word *)((C_word*)t0)[2])+1,t4);
t6=t2;
f_21303(t6,t5);}
else{
t4=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_21339,a[2]=t2,a[3]=((C_word*)t0)[2],tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 365  gather-clauses");
f_18570(t4,C_SCHEME_END_OF_LIST,((C_word*)((C_word*)t0)[2])[1]);}}

/* k21337 in k21298 in k21295 in k21288 in k21392 in k21268 in k21265 in k21262 in k21259 in k21256 in k21241 in parse-conditional in k18307 in k18304 in k18301 in k18298 in k17861 in k17858 in k17855 in k17852 in k17849 in k17327 in k17324 in k16801 in k16798 in k16795 in k16792 in k16789 in k16786 in k16783 in k16780 in k16777 in k16774 in k16771 in k16768 in k16765 in k16762 in k16759 in k16756 in k16753 in k16750 in k16747 in k16744 in k16741 in k16602 in k16599 in k16596 in k16593 in k16537 in k16534 in k16531 in k16528 in k16525 in k16522 in k16519 in k16516 in k15271 in k15202 in k15009 in k15006 in k14901 in k14850 in k7607 in k7604 in k5838 in k5545 in k5542 in k5538 in k5247 in k5244 in k5241 in k5238 */
static void C_ccall f_21339(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[3])+1,t1);
t3=((C_word*)t0)[2];
f_21303(t3,t2);}

/* k21301 in k21298 in k21295 in k21288 in k21392 in k21268 in k21265 in k21262 in k21259 in k21256 in k21241 in parse-conditional in k18307 in k18304 in k18301 in k18298 in k17861 in k17858 in k17855 in k17852 in k17849 in k17327 in k17324 in k16801 in k16798 in k16795 in k16792 in k16789 in k16786 in k16783 in k16780 in k16777 in k16774 in k16771 in k16768 in k16765 in k16762 in k16759 in k16756 in k16753 in k16750 in k16747 in k16744 in k16741 in k16602 in k16599 in k16596 in k16593 in k16537 in k16534 in k16531 in k16528 in k16525 in k16522 in k16519 in k16516 in k15271 in k15202 in k15009 in k15006 in k14901 in k14850 in k7607 in k7604 in k5838 in k5545 in k5542 in k5538 in k5247 in k5244 in k5241 in k5238 */
static void C_fcall f_21303(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[6],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_21303,NULL,2,t0,t1);}
t2=(C_word)C_i_cdddr(((C_word*)((C_word*)t0)[5])[1]);
t3=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_21332,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=t2,tmp=(C_word)a,a+=6,tmp);
C_trace("ChickenBridge.scm: 365  loop-looping");
t4=C_retrieve2(lf[368],"loop-looping");
f_18371(3,t4,t3,((C_word*)((C_word*)t0)[2])[1]);}

/* k21330 in k21301 in k21298 in k21295 in k21288 in k21392 in k21268 in k21265 in k21262 in k21259 in k21256 in k21241 in parse-conditional in k18307 in k18304 in k18301 in k18298 in k17861 in k17858 in k17855 in k17852 in k17849 in k17327 in k17324 in k16801 in k16798 in k16795 in k16792 in k16789 in k16786 in k16783 in k16780 in k16777 in k16774 in k16771 in k16768 in k16765 in k16762 in k16759 in k16756 in k16753 in k16750 in k16747 in k16744 in k16741 in k16602 in k16599 in k16596 in k16593 in k16537 in k16534 in k16531 in k16528 in k16525 in k16522 in k16519 in k16516 in k15271 in k15202 in k15009 in k15006 in k14901 in k14850 in k7607 in k7604 in k5838 in k5545 in k5542 in k5538 in k5247 in k5244 in k5241 in k5238 */
static void C_ccall f_21332(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[8],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_21332,2,t0,t1);}
t2=(C_word)C_a_i_cons(&a,2,lf[316],t1);
t3=(C_word)C_i_set_car(((C_word*)t0)[5],t2);
t4=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_21309,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],tmp=(C_word)a,a+=5,tmp);
C_trace("ChickenBridge.scm: 365  loop-looping-set!");
f_18377(t4,((C_word*)((C_word*)t0)[4])[1],C_SCHEME_END_OF_LIST);}

/* k21307 in k21330 in k21301 in k21298 in k21295 in k21288 in k21392 in k21268 in k21265 in k21262 in k21259 in k21256 in k21241 in parse-conditional in k18307 in k18304 in k18301 in k18298 in k17861 in k17858 in k17855 in k17852 in k17849 in k17327 in k17324 in k16801 in k16798 in k16795 in k16792 in k16789 in k16786 in k16783 in k16780 in k16777 in k16774 in k16771 in k16768 in k16765 in k16762 in k16759 in k16756 in k16753 in k16750 in k16747 in k16744 in k16741 in k16602 in k16599 in k16596 in k16593 in k16537 in k16534 in k16531 in k16528 in k16525 in k16522 in k16519 in k16516 in k15271 in k15202 in k15009 in k15006 in k14901 in k14850 in k7607 in k7604 in k5838 in k5545 in k5542 in k5538 in k5247 in k5244 in k5241 in k5238 */
static void C_ccall f_21309(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[5],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_21309,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_21312,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],tmp=(C_word)a,a+=5,tmp);
C_trace("ChickenBridge.scm: 365  loop-looping-set!");
f_18377(t2,((C_word*)((C_word*)t0)[2])[1],C_SCHEME_END_OF_LIST);}

/* k21310 in k21307 in k21330 in k21301 in k21298 in k21295 in k21288 in k21392 in k21268 in k21265 in k21262 in k21259 in k21256 in k21241 in parse-conditional in k18307 in k18304 in k18301 in k18298 in k17861 in k17858 in k17855 in k17852 in k17849 in k17327 in k17324 in k16801 in k16798 in k16795 in k16792 in k16789 in k16786 in k16783 in k16780 in k16777 in k16774 in k16771 in k16768 in k16765 in k16762 in k16759 in k16756 in k16753 in k16750 in k16747 in k16744 in k16741 in k16602 in k16599 in k16596 in k16593 in k16537 in k16534 in k16531 in k16528 in k16525 in k16522 in k16519 in k16516 in k15271 in k15202 in k15009 in k15006 in k14901 in k14850 in k7607 in k7604 in k5838 in k5545 in k5542 in k5538 in k5247 in k5244 in k5241 in k5238 */
static void C_ccall f_21312(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[10],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_21312,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_21316,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],tmp=(C_word)a,a+=4,tmp);
t3=(C_word)C_a_i_list(&a,2,((C_word*)((C_word*)t0)[4])[1],((C_word*)((C_word*)t0)[2])[1]);
C_trace("ChickenBridge.scm: 365  gather-clauses");
f_18570(t2,lf[22],t3);}

/* k21314 in k21310 in k21307 in k21330 in k21301 in k21298 in k21295 in k21288 in k21392 in k21268 in k21265 in k21262 in k21259 in k21256 in k21241 in parse-conditional in k18307 in k18304 in k18301 in k18298 in k17861 in k17858 in k17855 in k17852 in k17849 in k17327 in k17324 in k16801 in k16798 in k16795 in k16792 in k16789 in k16786 in k16783 in k16780 in k16777 in k16774 in k16771 in k16768 in k16765 in k16762 in k16759 in k16756 in k16753 in k16750 in k16747 in k16744 in k16741 in k16602 in k16599 in k16596 in k16593 in k16537 in k16534 in k16531 in k16528 in k16525 in k16522 in k16519 in k16516 in k15271 in k15202 in k15009 in k15006 in k14901 in k14850 in k7607 in k7604 in k5838 in k5545 in k5542 in k5538 in k5247 in k5244 in k5241 in k5238 */
static void C_ccall f_21316(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[3])+1,t1);
t3=((C_word*)t0)[2];
f_21277(t3,t2);}

/* k21275 in k21392 in k21268 in k21265 in k21262 in k21259 in k21256 in k21241 in parse-conditional in k18307 in k18304 in k18301 in k18298 in k17861 in k17858 in k17855 in k17852 in k17849 in k17327 in k17324 in k16801 in k16798 in k16795 in k16792 in k16789 in k16786 in k16783 in k16780 in k16777 in k16774 in k16771 in k16768 in k16765 in k16762 in k16759 in k16756 in k16753 in k16750 in k16747 in k16744 in k16741 in k16602 in k16599 in k16596 in k16593 in k16537 in k16534 in k16531 in k16528 in k16525 in k16522 in k16519 in k16516 in k15271 in k15202 in k15009 in k15006 in k14901 in k14850 in k7607 in k7604 in k5838 in k5545 in k5542 in k5538 in k5247 in k5244 in k5241 in k5238 */
static void C_fcall f_21277(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[8],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_21277,NULL,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_21280,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],tmp=(C_word)a,a+=5,tmp);
t3=(C_word)C_a_i_list(&a,1,((C_word*)((C_word*)t0)[2])[1]);
C_trace("ChickenBridge.scm: 365  loop-looping-set!");
f_18377(t2,((C_word*)((C_word*)t0)[4])[1],t3);}

/* k21278 in k21275 in k21392 in k21268 in k21265 in k21262 in k21259 in k21256 in k21241 in parse-conditional in k18307 in k18304 in k18301 in k18298 in k17861 in k17858 in k17855 in k17852 in k17849 in k17327 in k17324 in k16801 in k16798 in k16795 in k16792 in k16789 in k16786 in k16783 in k16780 in k16777 in k16774 in k16771 in k16768 in k16765 in k16762 in k16759 in k16756 in k16753 in k16750 in k16747 in k16744 in k16741 in k16602 in k16599 in k16596 in k16593 in k16537 in k16534 in k16531 in k16528 in k16525 in k16522 in k16519 in k16516 in k15271 in k15202 in k15009 in k15006 in k14901 in k14850 in k7607 in k7604 in k5838 in k5545 in k5542 in k5538 in k5247 in k5244 in k5241 in k5238 */
static void C_ccall f_21280(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 365  values");
C_values(4,0,((C_word*)t0)[4],((C_word*)((C_word*)t0)[3])[1],((C_word*)((C_word*)t0)[2])[1]);}

/* parse-then-else-dependents in k18307 in k18304 in k18301 in k18298 in k17861 in k17858 in k17855 in k17852 in k17849 in k17327 in k17324 in k16801 in k16798 in k16795 in k16792 in k16789 in k16786 in k16783 in k16780 in k16777 in k16774 in k16771 in k16768 in k16765 in k16762 in k16759 in k16756 in k16753 in k16750 in k16747 in k16744 in k16741 in k16602 in k16599 in k16596 in k16593 in k16537 in k16534 in k16531 in k16528 in k16525 in k16522 in k16519 in k16516 in k15271 in k15202 in k15009 in k15006 in k14901 in k14850 in k7607 in k7604 in k5838 in k5545 in k5542 in k5538 in k5247 in k5244 in k5241 in k5238 */
static void C_fcall f_21090(C_word t1,C_word t2,C_word t3,C_word t4){
C_word tmp;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word t14;
C_word t15;
C_word t16;
C_word ab[25],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_21090,NULL,4,t1,t2,t3,t4);}
t5=(*a=C_VECTOR_TYPE|1,a[1]=t2,tmp=(C_word)a,a+=2,tmp);
t6=((C_word*)t5)[1];
t7=(*a=C_VECTOR_TYPE|1,a[1]=t6,tmp=(C_word)a,a+=2,tmp);
t8=C_SCHEME_FALSE;
t9=(*a=C_VECTOR_TYPE|1,a[1]=t8,tmp=(C_word)a,a+=2,tmp);
t10=C_SCHEME_END_OF_LIST;
t11=(*a=C_VECTOR_TYPE|1,a[1]=t10,tmp=(C_word)a,a+=2,tmp);
t12=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_21094,a[2]=t5,a[3]=t11,a[4]=t1,tmp=(C_word)a,a+=5,tmp);
t13=C_SCHEME_UNDEFINED;
t14=(*a=C_VECTOR_TYPE|1,a[1]=t13,tmp=(C_word)a,a+=2,tmp);
t15=C_set_block_item(t14,0,(*a=C_CLOSURE_TYPE|9,a[1]=(C_word)f_21099,a[2]=t3,a[3]=t14,a[4]=t7,a[5]=t11,a[6]=t4,a[7]=t9,a[8]=t5,a[9]=((C_word)li309),tmp=(C_word)a,a+=10,tmp));
t16=((C_word*)t14)[1];
f_21099(t16,t12,C_SCHEME_FALSE,C_SCHEME_FALSE,C_SCHEME_FALSE);}

/* do3671 in parse-then-else-dependents in k18307 in k18304 in k18301 in k18298 in k17861 in k17858 in k17855 in k17852 in k17849 in k17327 in k17324 in k16801 in k16798 in k16795 in k16792 in k16789 in k16786 in k16783 in k16780 in k16777 in k16774 in k16771 in k16768 in k16765 in k16762 in k16759 in k16756 in k16753 in k16750 in k16747 in k16744 in k16741 in k16602 in k16599 in k16596 in k16593 in k16537 in k16534 in k16531 in k16528 in k16525 in k16522 in k16519 in k16516 in k15271 in k15202 in k15009 in k15006 in k14901 in k14850 in k7607 in k7604 in k5838 in k5545 in k5542 in k5538 in k5247 in k5244 in k5241 in k5238 */
static void C_fcall f_21099(C_word t0,C_word t1,C_word t2,C_word t3,C_word t4){
C_word tmp;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word ab[19],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_21099,NULL,5,t0,t1,t2,t3,t4);}
t5=(*a=C_VECTOR_TYPE|1,a[1]=t2,tmp=(C_word)a,a+=2,tmp);
t6=(*a=C_VECTOR_TYPE|1,a[1]=t3,tmp=(C_word)a,a+=2,tmp);
t7=(*a=C_VECTOR_TYPE|1,a[1]=t4,tmp=(C_word)a,a+=2,tmp);
t8=(C_word)C_i_nullp(((C_word*)((C_word*)t0)[8])[1]);
t9=(C_truep(t8)?t8:((C_word*)((C_word*)t0)[7])[1]);
if(C_truep(t9)){
t10=t1;
((C_proc2)(void*)(*((C_word*)t10+1)))(2,t10,C_SCHEME_UNDEFINED);}
else{
t10=(C_word)C_i_car(((C_word*)((C_word*)t0)[8])[1]);
t11=((C_word*)t0)[6];
t12=(*a=C_CLOSURE_TYPE|12,a[1]=(C_word)f_21047,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[7],a[4]=((C_word*)t0)[6],a[5]=t6,a[6]=t1,a[7]=((C_word*)t0)[3],a[8]=t7,a[9]=((C_word*)t0)[8],a[10]=((C_word*)t0)[4],a[11]=((C_word*)t0)[5],a[12]=t5,tmp=(C_word)a,a+=13,tmp);
C_trace("ChickenBridge.scm: 365  loop-op?");
f_18641(t12,t10,t11);}}

/* k21045 in do3671 in parse-then-else-dependents in k18307 in k18304 in k18301 in k18298 in k17861 in k17858 in k17855 in k17852 in k17849 in k17327 in k17324 in k16801 in k16798 in k16795 in k16792 in k16789 in k16786 in k16783 in k16780 in k16777 in k16774 in k16771 in k16768 in k16765 in k16762 in k16759 in k16756 in k16753 in k16750 in k16747 in k16744 in k16741 in k16602 in k16599 in k16596 in k16593 in k16537 in k16534 in k16531 in k16528 in k16525 in k16522 in k16519 in k16516 in k15271 in k15202 in k15009 in k15006 in k14901 in k14850 in k7607 in k7604 in k5838 in k5545 in k5542 in k5538 in k5247 in k5244 in k5241 in k5238 */
static void C_ccall f_21047(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word ab[14],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_21047,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|13,a[1]=(C_word)f_21053,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],a[7]=((C_word*)t0)[7],a[8]=((C_word*)t0)[8],a[9]=((C_word*)t0)[9],a[10]=((C_word*)t0)[10],a[11]=((C_word*)t0)[11],a[12]=((C_word*)t0)[12],a[13]=t1,tmp=(C_word)a,a+=14,tmp);
if(C_truep(t1)){
t3=(C_word)C_i_cddr(t1);
if(C_truep((C_word)C_i_nullp(t3))){
t4=t2;
f_21053(t4,C_SCHEME_FALSE);}
else{
t4=(C_word)C_i_caddr(t1);
t5=(C_word)C_eqp(t4,lf[538]);
if(C_truep(t5)){
t6=(C_word)C_i_car(t1);
t7=(C_word)C_i_member(t6,lf[539]);
t8=t2;
f_21053(t8,(C_word)C_i_not(t7));}
else{
t6=t2;
f_21053(t6,C_SCHEME_FALSE);}}}
else{
t3=t2;
f_21053(t3,C_SCHEME_FALSE);}}

/* k21051 in k21045 in do3671 in parse-then-else-dependents in k18307 in k18304 in k18301 in k18298 in k17861 in k17858 in k17855 in k17852 in k17849 in k17327 in k17324 in k16801 in k16798 in k16795 in k16792 in k16789 in k16786 in k16783 in k16780 in k16777 in k16774 in k16771 in k16768 in k16765 in k16762 in k16759 in k16756 in k16753 in k16750 in k16747 in k16744 in k16741 in k16602 in k16599 in k16596 in k16593 in k16537 in k16534 in k16531 in k16528 in k16525 in k16522 in k16519 in k16516 in k15271 in k15202 in k15009 in k15006 in k14901 in k14850 in k7607 in k7604 in k5838 in k5545 in k5542 in k5538 in k5247 in k5244 in k5241 in k5238 */
static void C_fcall f_21053(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word ab[22],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_21053,NULL,2,t0,t1);}
t2=(C_truep(t1)?((C_word*)t0)[13]:C_SCHEME_FALSE);
t3=C_mutate(((C_word *)((C_word*)t0)[12])+1,t2);
t4=(*a=C_CLOSURE_TYPE|12,a[1]=(C_word)f_21116,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[12],a[7]=((C_word*)t0)[6],a[8]=((C_word*)t0)[7],a[9]=((C_word*)t0)[8],a[10]=((C_word*)t0)[9],a[11]=((C_word*)t0)[10],a[12]=((C_word*)t0)[11],tmp=(C_word)a,a+=13,tmp);
t5=((C_word*)((C_word*)t0)[12])[1];
if(C_truep(t5)){
t6=t4;
f_21116(2,t6,C_SCHEME_UNDEFINED);}
else{
t6=(C_word)C_i_car(((C_word*)((C_word*)t0)[9])[1]);
C_trace("ChickenBridge.scm: 365  loop-error");
f_18659(t4,((C_word*)t0)[4],((C_word*)((C_word*)t0)[10])[1],(C_word)C_a_i_list(&a,3,lf[536],t6,lf[537]));}}

/* k21114 in k21051 in k21045 in do3671 in parse-then-else-dependents in k18307 in k18304 in k18301 in k18298 in k17861 in k17858 in k17855 in k17852 in k17849 in k17327 in k17324 in k16801 in k16798 in k16795 in k16792 in k16789 in k16786 in k16783 in k16780 in k16777 in k16774 in k16771 in k16768 in k16765 in k16762 in k16759 in k16756 in k16753 in k16750 in k16747 in k16744 in k16741 in k16602 in k16599 in k16596 in k16593 in k16537 in k16534 in k16531 in k16528 in k16525 in k16522 in k16519 in k16516 in k15271 in k15202 in k15009 in k15006 in k14901 in k14850 in k7607 in k7604 in k5838 in k5545 in k5542 in k5538 in k5247 in k5244 in k5241 in k5238 */
static void C_ccall f_21116(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[25],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_21116,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|11,a[1]=(C_word)f_21119,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],a[7]=((C_word*)t0)[8],a[8]=((C_word*)t0)[9],a[9]=((C_word*)t0)[10],a[10]=((C_word*)t0)[11],a[11]=((C_word*)t0)[12],tmp=(C_word)a,a+=12,tmp);
t3=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_21189,a[2]=((C_word*)t0)[12],a[3]=((C_word*)t0)[2],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[10],a[6]=((C_word*)t0)[6],a[7]=((C_word)li307),tmp=(C_word)a,a+=8,tmp);
t4=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_21202,a[2]=((C_word*)t0)[9],a[3]=((C_word*)t0)[5],a[4]=((C_word)li308),tmp=(C_word)a,a+=5,tmp);
C_trace("ChickenBridge.scm: 365  call-with-values");
C_call_with_values(4,0,t2,t3,t4);}

/* a21201 in k21114 in k21051 in k21045 in do3671 in parse-then-else-dependents in k18307 in k18304 in k18301 in k18298 in k17861 in k17858 in k17855 in k17852 in k17849 in k17327 in k17324 in k16801 in k16798 in k16795 in k16792 in k16789 in k16786 in k16783 in k16780 in k16777 in k16774 in k16771 in k16768 in k16765 in k16762 in k16759 in k16756 in k16753 in k16750 in k16747 in k16744 in k16741 in k16602 in k16599 in k16596 in k16593 in k16537 in k16534 in k16531 in k16528 in k16525 in k16522 in k16519 in k16516 in k15271 in k15202 in k15009 in k15006 in k14901 in k14850 in k7607 in k7604 in k5838 in k5545 in k5542 in k5538 in k5247 in k5244 in k5241 in k5238 */
static void C_ccall f_21202(C_word c,C_word t0,C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word t6;
C_word *a;
if(c!=4) C_bad_argc_2(c,4,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr4,(void*)f_21202,4,t0,t1,t2,t3);}
t4=C_mutate(((C_word *)((C_word*)t0)[3])+1,t2);
t5=C_mutate(((C_word *)((C_word*)t0)[2])+1,t3);
t6=t1;
((C_proc2)(void*)(*((C_word*)t6+1)))(2,t6,t5);}

/* a21188 in k21114 in k21051 in k21045 in do3671 in parse-then-else-dependents in k18307 in k18304 in k18301 in k18298 in k17861 in k17858 in k17855 in k17852 in k17849 in k17327 in k17324 in k16801 in k16798 in k16795 in k16792 in k16789 in k16786 in k16783 in k16780 in k16777 in k16774 in k16771 in k16768 in k16765 in k16762 in k16759 in k16756 in k16753 in k16750 in k16747 in k16744 in k16741 in k16602 in k16599 in k16596 in k16593 in k16537 in k16534 in k16531 in k16528 in k16525 in k16522 in k16519 in k16516 in k15271 in k15202 in k15009 in k15006 in k14901 in k14850 in k7607 in k7604 in k5838 in k5545 in k5542 in k5538 in k5247 in k5244 in k5241 in k5238 */
static void C_ccall f_21189(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[6],*a=ab;
if(c!=2) C_bad_argc_2(c,2,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_21189,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_21197,a[2]=((C_word*)t0)[4],a[3]=((C_word*)t0)[5],a[4]=t1,a[5]=((C_word*)t0)[6],tmp=(C_word)a,a+=6,tmp);
C_trace("ChickenBridge.scm: 365  append");
t3=*((C_word*)lf[20]+1);
((C_proc4)C_retrieve_proc(t3))(4,t3,t2,((C_word*)t0)[3],((C_word*)((C_word*)t0)[2])[1]);}

/* k21195 in a21188 in k21114 in k21051 in k21045 in do3671 in parse-then-else-dependents in k18307 in k18304 in k18301 in k18298 in k17861 in k17858 in k17855 in k17852 in k17849 in k17327 in k17324 in k16801 in k16798 in k16795 in k16792 in k16789 in k16786 in k16783 in k16780 in k16777 in k16774 in k16771 in k16768 in k16765 in k16762 in k16759 in k16756 in k16753 in k16750 in k16747 in k16744 in k16741 in k16602 in k16599 in k16596 in k16593 in k16537 in k16534 in k16531 in k16528 in k16525 in k16522 in k16519 in k16516 in k15271 in k15202 in k15009 in k15006 in k14901 in k14850 in k7607 in k7604 in k5838 in k5545 in k5542 in k5538 in k5247 in k5244 in k5241 in k5238 */
static void C_ccall f_21197(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word *a;
t2=(C_word)C_i_cadr(((C_word*)((C_word*)t0)[5])[1]);
t3=t2;
((C_proc5)C_retrieve_proc(t3))(5,t3,((C_word*)t0)[4],((C_word*)((C_word*)t0)[3])[1],t1,((C_word*)t0)[2]);}

/* k21117 in k21114 in k21051 in k21045 in do3671 in parse-then-else-dependents in k18307 in k18304 in k18301 in k18298 in k17861 in k17858 in k17855 in k17852 in k17849 in k17327 in k17324 in k16801 in k16798 in k16795 in k16792 in k16789 in k16786 in k16783 in k16780 in k16777 in k16774 in k16771 in k16768 in k16765 in k16762 in k16759 in k16756 in k16753 in k16750 in k16747 in k16744 in k16741 in k16602 in k16599 in k16596 in k16593 in k16537 in k16534 in k16531 in k16528 in k16525 in k16522 in k16519 in k16516 in k15271 in k15202 in k15009 in k15006 in k14901 in k14850 in k7607 in k7604 in k5838 in k5545 in k5542 in k5538 in k5247 in k5244 in k5241 in k5238 */
static void C_ccall f_21119(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[15],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_21119,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|11,a[1]=(C_word)f_21123,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],a[7]=((C_word*)t0)[7],a[8]=((C_word*)t0)[8],a[9]=((C_word*)t0)[9],a[10]=((C_word*)t0)[10],a[11]=((C_word*)t0)[11],tmp=(C_word)a,a+=12,tmp);
t3=(C_word)C_a_i_list(&a,1,((C_word*)((C_word*)t0)[4])[1]);
C_trace("ChickenBridge.scm: 365  append");
t4=*((C_word*)lf[20]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,((C_word*)((C_word*)t0)[11])[1],t3);}

/* k21121 in k21117 in k21114 in k21051 in k21045 in do3671 in parse-then-else-dependents in k18307 in k18304 in k18301 in k18298 in k17861 in k17858 in k17855 in k17852 in k17849 in k17327 in k17324 in k16801 in k16798 in k16795 in k16792 in k16789 in k16786 in k16783 in k16780 in k16777 in k16774 in k16771 in k16768 in k16765 in k16762 in k16759 in k16756 in k16753 in k16750 in k16747 in k16744 in k16741 in k16602 in k16599 in k16596 in k16593 in k16537 in k16534 in k16531 in k16528 in k16525 in k16522 in k16519 in k16516 in k15271 in k15202 in k15009 in k15006 in k14901 in k14850 in k7607 in k7604 in k5838 in k5545 in k5542 in k5538 in k5247 in k5244 in k5241 in k5238 */
static void C_ccall f_21123(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word t14;
C_word t15;
C_word ab[14],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_21123,2,t0,t1);}
t2=C_mutate(((C_word *)((C_word*)t0)[11])+1,t1);
t3=C_mutate(((C_word *)((C_word*)t0)[10])+1,((C_word*)((C_word*)t0)[9])[1]);
t4=C_mutate(((C_word *)((C_word*)t0)[9])+1,((C_word*)((C_word*)t0)[8])[1]);
t5=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_21128,a[2]=((C_word*)t0)[8],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
if(C_truep((C_word)C_i_nullp(((C_word*)((C_word*)t0)[9])[1]))){
t6=t5;
f_21128(2,t6,C_SCHEME_UNDEFINED);}
else{
t6=(C_word)C_i_car(((C_word*)((C_word*)t0)[9])[1]);
t7=(C_word)C_eqp(t6,lf[289]);
if(C_truep(t7)){
t8=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[9])[1]);
t9=C_mutate(((C_word *)((C_word*)t0)[9])+1,t8);
if(C_truep((C_word)C_i_nullp(((C_word*)((C_word*)t0)[9])[1]))){
C_trace("ChickenBridge.scm: 365  loop-error");
f_18659(t5,((C_word*)t0)[3],((C_word*)((C_word*)t0)[10])[1],(C_word)C_a_i_list(&a,1,lf[535]));}
else{
t10=t5;
f_21128(2,t10,C_SCHEME_UNDEFINED);}}
else{
t8=(C_word)C_i_car(((C_word*)((C_word*)t0)[9])[1]);
t9=(C_word)C_eqp(t8,lf[18]);
if(C_truep(t9)){
t10=C_set_block_item(((C_word*)t0)[2],0,C_SCHEME_TRUE);
t11=t5;
f_21128(2,t11,t10);}
else{
t10=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_21166,a[2]=t5,a[3]=((C_word*)t0)[2],tmp=(C_word)a,a+=4,tmp);
t11=(C_word)C_i_car(((C_word*)((C_word*)t0)[9])[1]);
C_trace("ChickenBridge.scm: 365  loop-op?");
f_18641(t10,t11,((C_word*)t0)[3]);}}}}

/* k21164 in k21121 in k21117 in k21114 in k21051 in k21045 in do3671 in parse-then-else-dependents in k18307 in k18304 in k18301 in k18298 in k17861 in k17858 in k17855 in k17852 in k17849 in k17327 in k17324 in k16801 in k16798 in k16795 in k16792 in k16789 in k16786 in k16783 in k16780 in k16777 in k16774 in k16771 in k16768 in k16765 in k16762 in k16759 in k16756 in k16753 in k16750 in k16747 in k16744 in k16741 in k16602 in k16599 in k16596 in k16593 in k16537 in k16534 in k16531 in k16528 in k16525 in k16522 in k16519 in k16516 in k15271 in k15202 in k15009 in k15006 in k14901 in k14850 in k7607 in k7604 in k5838 in k5545 in k5542 in k5538 in k5247 in k5244 in k5241 in k5238 */
static void C_ccall f_21166(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word *a;
if(C_truep(t1)){
t2=C_set_block_item(((C_word*)t0)[3],0,C_SCHEME_TRUE);
t3=((C_word*)t0)[2];
f_21128(2,t3,t2);}
else{
t2=((C_word*)t0)[2];
f_21128(2,t2,C_SCHEME_UNDEFINED);}}

/* k21126 in k21121 in k21117 in k21114 in k21051 in k21045 in do3671 in parse-then-else-dependents in k18307 in k18304 in k18301 in k18298 in k17861 in k17858 in k17855 in k17852 in k17849 in k17327 in k17324 in k16801 in k16798 in k16795 in k16792 in k16789 in k16786 in k16783 in k16780 in k16777 in k16774 in k16771 in k16768 in k16765 in k16762 in k16759 in k16756 in k16753 in k16750 in k16747 in k16744 in k16741 in k16602 in k16599 in k16596 in k16593 in k16537 in k16534 in k16531 in k16528 in k16525 in k16522 in k16519 in k16516 in k15271 in k15202 in k15009 in k15006 in k14901 in k14850 in k7607 in k7604 in k5838 in k5545 in k5542 in k5538 in k5247 in k5244 in k5241 in k5238 */
static void C_ccall f_21128(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
t2=((C_word*)((C_word*)t0)[6])[1];
f_21099(t2,((C_word*)t0)[5],((C_word*)((C_word*)t0)[4])[1],((C_word*)((C_word*)t0)[3])[1],((C_word*)((C_word*)t0)[2])[1]);}

/* k21092 in parse-then-else-dependents in k18307 in k18304 in k18301 in k18298 in k17861 in k17858 in k17855 in k17852 in k17849 in k17327 in k17324 in k16801 in k16798 in k16795 in k16792 in k16789 in k16786 in k16783 in k16780 in k16777 in k16774 in k16771 in k16768 in k16765 in k16762 in k16759 in k16756 in k16753 in k16750 in k16747 in k16744 in k16741 in k16602 in k16599 in k16596 in k16593 in k16537 in k16534 in k16531 in k16528 in k16525 in k16522 in k16519 in k16516 in k15271 in k15202 in k15009 in k15006 in k14901 in k14850 in k7607 in k7604 in k5838 in k5545 in k5542 in k5538 in k5247 in k5244 in k5241 in k5238 */
static void C_ccall f_21094(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 365  values");
C_values(4,0,((C_word*)t0)[4],((C_word*)((C_word*)t0)[3])[1],((C_word*)((C_word*)t0)[2])[1]);}

/* parse-return in k18307 in k18304 in k18301 in k18298 in k17861 in k17858 in k17855 in k17852 in k17849 in k17327 in k17324 in k16801 in k16798 in k16795 in k16792 in k16789 in k16786 in k16783 in k16780 in k16777 in k16774 in k16771 in k16768 in k16765 in k16762 in k16759 in k16756 in k16753 in k16750 in k16747 in k16744 in k16741 in k16602 in k16599 in k16596 in k16593 in k16537 in k16534 in k16531 in k16528 in k16525 in k16522 in k16519 in k16516 in k15271 in k15202 in k15009 in k15006 in k14901 in k14850 in k7607 in k7604 in k5838 in k5545 in k5542 in k5538 in k5247 in k5244 in k5241 in k5238 */
static void C_ccall f_20989(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4){
C_word tmp;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word t14;
C_word ab[23],*a=ab;
if(c!=5) C_bad_argc_2(c,5,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr5,(void*)f_20989,5,t0,t1,t2,t3,t4);}
t5=(*a=C_VECTOR_TYPE|1,a[1]=t2,tmp=(C_word)a,a+=2,tmp);
t6=(C_word)C_i_car(((C_word*)t5)[1]);
t7=C_SCHEME_FALSE;
t8=(*a=C_VECTOR_TYPE|1,a[1]=t7,tmp=(C_word)a,a+=2,tmp);
t9=C_SCHEME_FALSE;
t10=(*a=C_VECTOR_TYPE|1,a[1]=t9,tmp=(C_word)a,a+=2,tmp);
t11=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_20996,a[2]=t4,a[3]=t6,a[4]=t1,a[5]=t10,a[6]=t8,a[7]=t5,tmp=(C_word)a,a+=8,tmp);
t12=(C_word)C_i_cdr(((C_word*)t5)[1]);
if(C_truep((C_word)C_i_nullp(t12))){
t13=(C_word)C_i_car(((C_word*)t5)[1]);
C_trace("ChickenBridge.scm: 365  loop-error");
f_18659(t11,t4,((C_word*)t5)[1],(C_word)C_a_i_list(&a,3,lf[532],t13,lf[533]));}
else{
t13=t11;
f_20996(2,t13,C_SCHEME_UNDEFINED);}}

/* k20994 in parse-return in k18307 in k18304 in k18301 in k18298 in k17861 in k17858 in k17855 in k17852 in k17849 in k17327 in k17324 in k16801 in k16798 in k16795 in k16792 in k16789 in k16786 in k16783 in k16780 in k16777 in k16774 in k16771 in k16768 in k16765 in k16762 in k16759 in k16756 in k16753 in k16750 in k16747 in k16744 in k16741 in k16602 in k16599 in k16596 in k16593 in k16537 in k16534 in k16531 in k16528 in k16525 in k16522 in k16519 in k16516 in k15271 in k15202 in k15009 in k15006 in k14901 in k14850 in k7607 in k7604 in k5838 in k5545 in k5542 in k5538 in k5247 in k5244 in k5241 in k5238 */
static void C_ccall f_20996(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word ab[6],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_20996,2,t0,t1);}
t2=(C_word)C_i_cadr(((C_word*)((C_word*)t0)[7])[1]);
t3=C_mutate(((C_word *)((C_word*)t0)[6])+1,t2);
t4=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[7])[1]);
t5=C_mutate(((C_word *)((C_word*)t0)[7])+1,t4);
t6=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_21027,a[2]=((C_word*)t0)[6],a[3]=((C_word*)t0)[7],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],tmp=(C_word)a,a+=6,tmp);
C_trace("ChickenBridge.scm: 365  loop-op?");
f_18641(t6,((C_word*)t0)[3],((C_word*)t0)[2]);}

/* k21025 in k20994 in parse-return in k18307 in k18304 in k18301 in k18298 in k17861 in k17858 in k17855 in k17852 in k17849 in k17327 in k17324 in k16801 in k16798 in k16795 in k16792 in k16789 in k16786 in k16783 in k16780 in k16777 in k16774 in k16771 in k16768 in k16765 in k16762 in k16759 in k16756 in k16753 in k16750 in k16747 in k16744 in k16741 in k16602 in k16599 in k16596 in k16593 in k16537 in k16534 in k16531 in k16528 in k16525 in k16522 in k16519 in k16516 in k15271 in k15202 in k15009 in k15006 in k14901 in k14850 in k7607 in k7604 in k5838 in k5545 in k5542 in k5538 in k5247 in k5244 in k5241 in k5238 */
static void C_ccall f_21027(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_21027,2,t0,t1);}
t2=(C_word)C_i_cadddr(t1);
t3=C_mutate(((C_word *)((C_word*)t0)[5])+1,t2);
t4=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_21015,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],tmp=(C_word)a,a+=4,tmp);
t5=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_21023,a[2]=t4,tmp=(C_word)a,a+=3,tmp);
C_trace("ChickenBridge.scm: 365  func");
t6=((C_word*)((C_word*)t0)[5])[1];
((C_proc3)C_retrieve_proc(t6))(3,t6,t5,((C_word*)((C_word*)t0)[2])[1]);}

/* k21021 in k21025 in k20994 in parse-return in k18307 in k18304 in k18301 in k18298 in k17861 in k17858 in k17855 in k17852 in k17849 in k17327 in k17324 in k16801 in k16798 in k16795 in k16792 in k16789 in k16786 in k16783 in k16780 in k16777 in k16774 in k16771 in k16768 in k16765 in k16762 in k16759 in k16756 in k16753 in k16750 in k16747 in k16744 in k16741 in k16602 in k16599 in k16596 in k16593 in k16537 in k16534 in k16531 in k16528 in k16525 in k16522 in k16519 in k16516 in k15271 in k15202 in k15009 in k15006 in k14901 in k14850 in k7607 in k7604 in k5838 in k5545 in k5542 in k5538 in k5247 in k5244 in k5241 in k5238 */
static void C_ccall f_21023(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[15],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_21023,2,t0,t1);}
t2=(C_word)C_a_i_list(&a,1,t1);
C_trace("ChickenBridge.scm: 365  make-loop-clause");
f_18419(((C_word*)t0)[2],(C_word)C_a_i_list(&a,4,lf[374],lf[518],lf[379],t2));}

/* k21013 in k21025 in k20994 in parse-return in k18307 in k18304 in k18301 in k18298 in k17861 in k17858 in k17855 in k17852 in k17849 in k17327 in k17324 in k16801 in k16798 in k16795 in k16792 in k16789 in k16786 in k16783 in k16780 in k16777 in k16774 in k16771 in k16768 in k16765 in k16762 in k16759 in k16756 in k16753 in k16750 in k16747 in k16744 in k16741 in k16602 in k16599 in k16596 in k16593 in k16537 in k16534 in k16531 in k16528 in k16525 in k16522 in k16519 in k16516 in k15271 in k15202 in k15009 in k15006 in k14901 in k14850 in k7607 in k7604 in k5838 in k5545 in k5542 in k5538 in k5247 in k5244 in k5241 in k5238 */
static void C_ccall f_21015(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 365  values");
C_values(4,0,((C_word*)t0)[3],t1,((C_word*)((C_word*)t0)[2])[1]);}

/* parse-thereis in k18307 in k18304 in k18301 in k18298 in k17861 in k17858 in k17855 in k17852 in k17849 in k17327 in k17324 in k16801 in k16798 in k16795 in k16792 in k16789 in k16786 in k16783 in k16780 in k16777 in k16774 in k16771 in k16768 in k16765 in k16762 in k16759 in k16756 in k16753 in k16750 in k16747 in k16744 in k16741 in k16602 in k16599 in k16596 in k16593 in k16537 in k16534 in k16531 in k16528 in k16525 in k16522 in k16519 in k16516 in k15271 in k15202 in k15009 in k15006 in k14901 in k14850 in k7607 in k7604 in k5838 in k5545 in k5542 in k5538 in k5247 in k5244 in k5241 in k5238 */
static void C_ccall f_20898(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4){
C_word tmp;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word t14;
C_word t15;
C_word t16;
C_word ab[26],*a=ab;
if(c!=5) C_bad_argc_2(c,5,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr5,(void*)f_20898,5,t0,t1,t2,t3,t4);}
t5=(*a=C_VECTOR_TYPE|1,a[1]=t2,tmp=(C_word)a,a+=2,tmp);
t6=(C_word)C_i_car(((C_word*)t5)[1]);
t7=C_SCHEME_FALSE;
t8=(*a=C_VECTOR_TYPE|1,a[1]=t7,tmp=(C_word)a,a+=2,tmp);
t9=C_SCHEME_FALSE;
t10=(*a=C_VECTOR_TYPE|1,a[1]=t9,tmp=(C_word)a,a+=2,tmp);
t11=C_SCHEME_FALSE;
t12=(*a=C_VECTOR_TYPE|1,a[1]=t11,tmp=(C_word)a,a+=2,tmp);
t13=(*a=C_CLOSURE_TYPE|8,a[1]=(C_word)f_20905,a[2]=t4,a[3]=t6,a[4]=t10,a[5]=t1,a[6]=t12,a[7]=t8,a[8]=t5,tmp=(C_word)a,a+=9,tmp);
t14=(C_word)C_i_cdr(((C_word*)t5)[1]);
if(C_truep((C_word)C_i_nullp(t14))){
t15=(C_word)C_i_car(((C_word*)t5)[1]);
C_trace("ChickenBridge.scm: 365  loop-error");
f_18659(t13,t4,((C_word*)t5)[1],(C_word)C_a_i_list(&a,3,lf[529],t15,lf[530]));}
else{
t15=t13;
f_20905(2,t15,C_SCHEME_UNDEFINED);}}

/* k20903 in parse-thereis in k18307 in k18304 in k18301 in k18298 in k17861 in k17858 in k17855 in k17852 in k17849 in k17327 in k17324 in k16801 in k16798 in k16795 in k16792 in k16789 in k16786 in k16783 in k16780 in k16777 in k16774 in k16771 in k16768 in k16765 in k16762 in k16759 in k16756 in k16753 in k16750 in k16747 in k16744 in k16741 in k16602 in k16599 in k16596 in k16593 in k16537 in k16534 in k16531 in k16528 in k16525 in k16522 in k16519 in k16516 in k15271 in k15202 in k15009 in k15006 in k14901 in k14850 in k7607 in k7604 in k5838 in k5545 in k5542 in k5538 in k5247 in k5244 in k5241 in k5238 */
static void C_ccall f_20905(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[8],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_20905,2,t0,t1);}
t2=(C_word)C_i_cadr(((C_word*)((C_word*)t0)[8])[1]);
t3=C_mutate(((C_word *)((C_word*)t0)[7])+1,t2);
t4=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_20973,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[7],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[8],a[7]=((C_word*)t0)[6],tmp=(C_word)a,a+=8,tmp);
C_trace("ChickenBridge.scm: 365  loop-op?");
f_18641(t4,((C_word*)t0)[3],((C_word*)t0)[2]);}

/* k20971 in k20903 in parse-thereis in k18307 in k18304 in k18301 in k18298 in k17861 in k17858 in k17855 in k17852 in k17849 in k17327 in k17324 in k16801 in k16798 in k16795 in k16792 in k16789 in k16786 in k16783 in k16780 in k16777 in k16774 in k16771 in k16768 in k16765 in k16762 in k16759 in k16756 in k16753 in k16750 in k16747 in k16744 in k16741 in k16602 in k16599 in k16596 in k16593 in k16537 in k16534 in k16531 in k16528 in k16525 in k16522 in k16519 in k16516 in k15271 in k15202 in k15009 in k15006 in k14901 in k14850 in k7607 in k7604 in k5838 in k5545 in k5542 in k5538 in k5247 in k5244 in k5241 in k5238 */
static void C_ccall f_20973(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word ab[13],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_20973,2,t0,t1);}
t2=(C_word)C_i_cadddr(t1);
t3=C_mutate(((C_word *)((C_word*)t0)[7])+1,t2);
t4=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_20916,a[2]=((C_word*)t0)[7],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],tmp=(C_word)a,a+=7,tmp);
t5=(C_word)C_eqp(((C_word*)t0)[2],lf[526]);
if(C_truep(t5)){
t6=C_set_block_item(((C_word*)t0)[3],0,C_SCHEME_FALSE);
t7=t4;
f_20916(t7,t6);}
else{
t6=(C_word)C_eqp(((C_word*)t0)[2],lf[527]);
if(C_truep(t6)){
t7=(C_word)C_a_i_list(&a,2,lf[291],((C_word*)((C_word*)t0)[4])[1]);
t8=C_mutate(((C_word *)((C_word*)t0)[4])+1,t7);
t9=C_set_block_item(((C_word*)t0)[3],0,C_SCHEME_TRUE);
t10=t4;
f_20916(t10,t9);}
else{
t7=(C_word)C_eqp(((C_word*)t0)[2],lf[528]);
if(C_truep(t7)){
t8=C_set_block_item(((C_word*)t0)[3],0,C_SCHEME_TRUE);
t9=t4;
f_20916(t9,t8);}
else{
t8=t4;
f_20916(t8,C_SCHEME_UNDEFINED);}}}}

/* k20914 in k20971 in k20903 in parse-thereis in k18307 in k18304 in k18301 in k18298 in k17861 in k17858 in k17855 in k17852 in k17849 in k17327 in k17324 in k16801 in k16798 in k16795 in k16792 in k16789 in k16786 in k16783 in k16780 in k16777 in k16774 in k16771 in k16768 in k16765 in k16762 in k16759 in k16756 in k16753 in k16750 in k16747 in k16744 in k16741 in k16602 in k16599 in k16596 in k16593 in k16537 in k16534 in k16531 in k16528 in k16525 in k16522 in k16519 in k16516 in k15271 in k15202 in k15009 in k15006 in k14901 in k14850 in k7607 in k7604 in k5838 in k5545 in k5542 in k5538 in k5247 in k5244 in k5241 in k5238 */
static void C_fcall f_20916(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_20916,NULL,2,t0,t1);}
t2=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[6])[1]);
t3=C_mutate(((C_word *)((C_word*)t0)[6])+1,t2);
t4=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_20927,a[2]=((C_word*)t0)[6],a[3]=((C_word*)t0)[5],tmp=(C_word)a,a+=4,tmp);
t5=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_20943,a[2]=t4,a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],tmp=(C_word)a,a+=5,tmp);
t6=(C_word)C_i_not(((C_word*)((C_word*)t0)[3])[1]);
C_trace("ChickenBridge.scm: 365  func");
t7=((C_word*)((C_word*)t0)[2])[1];
((C_proc3)C_retrieve_proc(t7))(3,t7,t5,t6);}

/* k20941 in k20914 in k20971 in k20903 in parse-thereis in k18307 in k18304 in k18301 in k18298 in k17861 in k17858 in k17855 in k17852 in k17849 in k17327 in k17324 in k16801 in k16798 in k16795 in k16792 in k16789 in k16786 in k16783 in k16780 in k16777 in k16774 in k16771 in k16768 in k16765 in k16762 in k16759 in k16756 in k16753 in k16750 in k16747 in k16744 in k16741 in k16602 in k16599 in k16596 in k16593 in k16537 in k16534 in k16531 in k16528 in k16525 in k16522 in k16519 in k16516 in k15271 in k15202 in k15009 in k15006 in k14901 in k14850 in k7607 in k7604 in k5838 in k5545 in k5542 in k5538 in k5247 in k5244 in k5241 in k5238 */
static void C_ccall f_20943(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[33],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_20943,2,t0,t1);}
t2=(C_word)C_a_i_list(&a,3,lf[22],((C_word*)((C_word*)t0)[4])[1],t1);
t3=(C_word)C_a_i_list(&a,1,t2);
t4=(C_word)C_a_i_list(&a,1,((C_word*)((C_word*)t0)[3])[1]);
C_trace("ChickenBridge.scm: 365  make-loop-clause");
f_18419(((C_word*)t0)[2],(C_word)C_a_i_list(&a,6,lf[374],lf[526],lf[379],t3,lf[382],t4));}

/* k20925 in k20914 in k20971 in k20903 in parse-thereis in k18307 in k18304 in k18301 in k18298 in k17861 in k17858 in k17855 in k17852 in k17849 in k17327 in k17324 in k16801 in k16798 in k16795 in k16792 in k16789 in k16786 in k16783 in k16780 in k16777 in k16774 in k16771 in k16768 in k16765 in k16762 in k16759 in k16756 in k16753 in k16750 in k16747 in k16744 in k16741 in k16602 in k16599 in k16596 in k16593 in k16537 in k16534 in k16531 in k16528 in k16525 in k16522 in k16519 in k16516 in k15271 in k15202 in k15009 in k15006 in k14901 in k14850 in k7607 in k7604 in k5838 in k5545 in k5542 in k5538 in k5247 in k5244 in k5241 in k5238 */
static void C_ccall f_20927(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 365  values");
C_values(4,0,((C_word*)t0)[3],t1,((C_word*)((C_word*)t0)[2])[1]);}

/* parse-while-until in k18307 in k18304 in k18301 in k18298 in k17861 in k17858 in k17855 in k17852 in k17849 in k17327 in k17324 in k16801 in k16798 in k16795 in k16792 in k16789 in k16786 in k16783 in k16780 in k16777 in k16774 in k16771 in k16768 in k16765 in k16762 in k16759 in k16756 in k16753 in k16750 in k16747 in k16744 in k16741 in k16602 in k16599 in k16596 in k16593 in k16537 in k16534 in k16531 in k16528 in k16525 in k16522 in k16519 in k16516 in k15271 in k15202 in k15009 in k15006 in k14901 in k14850 in k7607 in k7604 in k5838 in k5545 in k5542 in k5538 in k5247 in k5244 in k5241 in k5238 */
static void C_ccall f_20832(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4){
C_word tmp;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word ab[19],*a=ab;
if(c!=5) C_bad_argc_2(c,5,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr5,(void*)f_20832,5,t0,t1,t2,t3,t4);}
t5=(*a=C_VECTOR_TYPE|1,a[1]=t2,tmp=(C_word)a,a+=2,tmp);
t6=((C_word*)t5)[1];
t7=(C_word)C_i_car(((C_word*)t5)[1]);
t8=(C_word)C_i_cdr(((C_word*)t5)[1]);
t9=C_set_block_item(t5,0,t8);
t10=C_SCHEME_FALSE;
t11=(*a=C_VECTOR_TYPE|1,a[1]=t10,tmp=(C_word)a,a+=2,tmp);
t12=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_20843,a[2]=t7,a[3]=t11,a[4]=t5,a[5]=t1,tmp=(C_word)a,a+=6,tmp);
if(C_truep((C_word)C_i_nullp(((C_word*)t5)[1]))){
C_trace("ChickenBridge.scm: 365  loop-error");
f_18659(t12,t4,t6,(C_word)C_a_i_list(&a,3,lf[523],t7,lf[524]));}
else{
t13=t12;
f_20843(2,t13,C_SCHEME_UNDEFINED);}}

/* k20841 in parse-while-until in k18307 in k18304 in k18301 in k18298 in k17861 in k17858 in k17855 in k17852 in k17849 in k17327 in k17324 in k16801 in k16798 in k16795 in k16792 in k16789 in k16786 in k16783 in k16780 in k16777 in k16774 in k16771 in k16768 in k16765 in k16762 in k16759 in k16756 in k16753 in k16750 in k16747 in k16744 in k16741 in k16602 in k16599 in k16596 in k16593 in k16537 in k16534 in k16531 in k16528 in k16525 in k16522 in k16519 in k16516 in k15271 in k15202 in k15009 in k15006 in k14901 in k14850 in k7607 in k7604 in k5838 in k5545 in k5542 in k5538 in k5247 in k5244 in k5241 in k5238 */
static void C_ccall f_20843(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word t14;
C_word ab[12],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_20843,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_20846,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],tmp=(C_word)a,a+=6,tmp);
t3=(C_word)C_eqp(((C_word*)t0)[2],lf[521]);
if(C_truep(t3)){
t4=(C_word)C_i_car(((C_word*)((C_word*)t0)[4])[1]);
t5=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[4])+1,t5);
t7=C_mutate(((C_word *)((C_word*)t0)[3])+1,t4);
t8=t2;
f_20846(t8,t7);}
else{
t4=(C_word)C_eqp(((C_word*)t0)[2],lf[522]);
if(C_truep(t4)){
t5=(C_word)C_i_car(((C_word*)((C_word*)t0)[4])[1]);
t6=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
t7=C_mutate(((C_word *)((C_word*)t0)[4])+1,t6);
t8=(C_word)C_a_i_list(&a,2,lf[291],t5);
t9=C_mutate(((C_word *)((C_word*)t0)[3])+1,t8);
t10=t2;
f_20846(t10,t9);}
else{
t5=t2;
f_20846(t5,C_SCHEME_UNDEFINED);}}}

/* k20844 in k20841 in parse-while-until in k18307 in k18304 in k18301 in k18298 in k17861 in k17858 in k17855 in k17852 in k17849 in k17327 in k17324 in k16801 in k16798 in k16795 in k16792 in k16789 in k16786 in k16783 in k16780 in k16777 in k16774 in k16771 in k16768 in k16765 in k16762 in k16759 in k16756 in k16753 in k16750 in k16747 in k16744 in k16741 in k16602 in k16599 in k16596 in k16593 in k16537 in k16534 in k16531 in k16528 in k16525 in k16522 in k16519 in k16516 in k15271 in k15202 in k15009 in k15006 in k14901 in k14850 in k7607 in k7604 in k5838 in k5545 in k5542 in k5538 in k5247 in k5244 in k5241 in k5238 */
static void C_fcall f_20846(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[28],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_20846,NULL,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_20853,a[2]=((C_word*)t0)[4],a[3]=((C_word*)t0)[5],tmp=(C_word)a,a+=4,tmp);
t3=(C_word)C_a_i_list(&a,3,lf[22],((C_word*)((C_word*)t0)[3])[1],lf[520]);
t4=(C_word)C_a_i_list(&a,1,t3);
C_trace("ChickenBridge.scm: 365  make-loop-clause");
f_18419(t2,(C_word)C_a_i_list(&a,4,lf[374],((C_word*)t0)[2],lf[379],t4));}

/* k20851 in k20844 in k20841 in parse-while-until in k18307 in k18304 in k18301 in k18298 in k17861 in k17858 in k17855 in k17852 in k17849 in k17327 in k17324 in k16801 in k16798 in k16795 in k16792 in k16789 in k16786 in k16783 in k16780 in k16777 in k16774 in k16771 in k16768 in k16765 in k16762 in k16759 in k16756 in k16753 in k16750 in k16747 in k16744 in k16741 in k16602 in k16599 in k16596 in k16593 in k16537 in k16534 in k16531 in k16528 in k16525 in k16522 in k16519 in k16516 in k15271 in k15202 in k15009 in k15006 in k14901 in k14850 in k7607 in k7604 in k5838 in k5545 in k5542 in k5538 in k5247 in k5244 in k5241 in k5238 */
static void C_ccall f_20853(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 365  values");
C_values(4,0,((C_word*)t0)[3],t1,((C_word*)((C_word*)t0)[2])[1]);}

/* loop-return in k18307 in k18304 in k18301 in k18298 in k17861 in k17858 in k17855 in k17852 in k17849 in k17327 in k17324 in k16801 in k16798 in k16795 in k16792 in k16789 in k16786 in k16783 in k16780 in k16777 in k16774 in k16771 in k16768 in k16765 in k16762 in k16759 in k16756 in k16753 in k16750 in k16747 in k16744 in k16741 in k16602 in k16599 in k16596 in k16593 in k16537 in k16534 in k16531 in k16528 in k16525 in k16522 in k16519 in k16516 in k15271 in k15202 in k15009 in k15006 in k14901 in k14850 in k7607 in k7604 in k5838 in k5545 in k5542 in k5538 in k5247 in k5244 in k5241 in k5238 */
static void C_ccall f_20826(C_word c,C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word ab[6],*a=ab;
if(c!=3) C_bad_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr3,(void*)f_20826,3,t0,t1,t2);}
t3=t1;
((C_proc2)(void*)(*((C_word*)t3+1)))(2,t3,(C_word)C_a_i_list(&a,2,lf[518],t2));}

/* parse-accumulation in k18307 in k18304 in k18301 in k18298 in k17861 in k17858 in k17855 in k17852 in k17849 in k17327 in k17324 in k16801 in k16798 in k16795 in k16792 in k16789 in k16786 in k16783 in k16780 in k16777 in k16774 in k16771 in k16768 in k16765 in k16762 in k16759 in k16756 in k16753 in k16750 in k16747 in k16744 in k16741 in k16602 in k16599 in k16596 in k16593 in k16537 in k16534 in k16531 in k16528 in k16525 in k16522 in k16519 in k16516 in k15271 in k15202 in k15009 in k15006 in k14901 in k14850 in k7607 in k7604 in k5838 in k5545 in k5542 in k5538 in k5247 in k5244 in k5241 in k5238 */
static void C_ccall f_20280(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4){
C_word tmp;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word t14;
C_word t15;
C_word t16;
C_word t17;
C_word t18;
C_word t19;
C_word t20;
C_word t21;
C_word t22;
C_word t23;
C_word t24;
C_word t25;
C_word t26;
C_word t27;
C_word t28;
C_word t29;
C_word t30;
C_word ab[55],*a=ab;
if(c!=5) C_bad_argc_2(c,5,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr5,(void*)f_20280,5,t0,t1,t2,t3,t4);}
t5=(*a=C_VECTOR_TYPE|1,a[1]=t2,tmp=(C_word)a,a+=2,tmp);
t6=((C_word*)t5)[1];
t7=(C_word)C_i_car(((C_word*)t5)[1]);
t8=(C_word)C_i_cdr(((C_word*)t5)[1]);
t9=C_set_block_item(t5,0,t8);
t10=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_20289,a[2]=((C_word)li297),tmp=(C_word)a,a+=3,tmp);
t11=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_20294,a[2]=((C_word)li298),tmp=(C_word)a,a+=3,tmp);
t12=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_20299,a[2]=((C_word)li299),tmp=(C_word)a,a+=3,tmp);
t13=C_SCHEME_FALSE;
t14=(*a=C_VECTOR_TYPE|1,a[1]=t13,tmp=(C_word)a,a+=2,tmp);
t15=C_SCHEME_FALSE;
t16=(*a=C_VECTOR_TYPE|1,a[1]=t15,tmp=(C_word)a,a+=2,tmp);
t17=C_SCHEME_FALSE;
t18=(*a=C_VECTOR_TYPE|1,a[1]=t17,tmp=(C_word)a,a+=2,tmp);
t19=C_SCHEME_FALSE;
t20=(*a=C_VECTOR_TYPE|1,a[1]=t19,tmp=(C_word)a,a+=2,tmp);
t21=C_SCHEME_END_OF_LIST;
t22=(*a=C_VECTOR_TYPE|1,a[1]=t21,tmp=(C_word)a,a+=2,tmp);
t23=C_SCHEME_END_OF_LIST;
t24=(*a=C_VECTOR_TYPE|1,a[1]=t23,tmp=(C_word)a,a+=2,tmp);
t25=C_SCHEME_END_OF_LIST;
t26=(*a=C_VECTOR_TYPE|1,a[1]=t25,tmp=(C_word)a,a+=2,tmp);
t27=C_SCHEME_END_OF_LIST;
t28=(*a=C_VECTOR_TYPE|1,a[1]=t27,tmp=(C_word)a,a+=2,tmp);
t29=(*a=C_CLOSURE_TYPE|18,a[1]=(C_word)f_20311,a[2]=t3,a[3]=t11,a[4]=t6,a[5]=t4,a[6]=t12,a[7]=t10,a[8]=t20,a[9]=t24,a[10]=t26,a[11]=t22,a[12]=t28,a[13]=t7,a[14]=t18,a[15]=t1,a[16]=t16,a[17]=t14,a[18]=t5,tmp=(C_word)a,a+=19,tmp);
if(C_truep((C_word)C_i_nullp(((C_word*)t5)[1]))){
C_trace("ChickenBridge.scm: 365  loop-error");
f_18659(t29,t4,((C_word*)t5)[1],(C_word)C_a_i_list(&a,3,lf[515],t7,lf[516]));}
else{
t30=t29;
f_20311(2,t30,C_SCHEME_UNDEFINED);}}

/* k20309 in parse-accumulation in k18307 in k18304 in k18301 in k18298 in k17861 in k17858 in k17855 in k17852 in k17849 in k17327 in k17324 in k16801 in k16798 in k16795 in k16792 in k16789 in k16786 in k16783 in k16780 in k16777 in k16774 in k16771 in k16768 in k16765 in k16762 in k16759 in k16756 in k16753 in k16750 in k16747 in k16744 in k16741 in k16602 in k16599 in k16596 in k16593 in k16537 in k16534 in k16531 in k16528 in k16525 in k16522 in k16519 in k16516 in k15271 in k15202 in k15009 in k15006 in k14901 in k14850 in k7607 in k7604 in k5838 in k5545 in k5542 in k5538 in k5247 in k5244 in k5241 in k5238 */
static void C_ccall f_20311(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word ab[29],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_20311,2,t0,t1);}
t2=(C_word)C_i_car(((C_word*)((C_word*)t0)[18])[1]);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[18])[1]);
t4=C_mutate(((C_word *)((C_word*)t0)[18])+1,t3);
t5=C_mutate(((C_word *)((C_word*)t0)[17])+1,t2);
t6=(*a=C_CLOSURE_TYPE|18,a[1]=(C_word)f_20322,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],a[7]=((C_word*)t0)[7],a[8]=((C_word*)t0)[8],a[9]=((C_word*)t0)[17],a[10]=((C_word*)t0)[9],a[11]=((C_word*)t0)[10],a[12]=((C_word*)t0)[11],a[13]=((C_word*)t0)[12],a[14]=((C_word*)t0)[13],a[15]=((C_word*)t0)[14],a[16]=((C_word*)t0)[18],a[17]=((C_word*)t0)[15],a[18]=((C_word*)t0)[16],tmp=(C_word)a,a+=19,tmp);
if(C_truep((C_word)C_i_nullp(((C_word*)((C_word*)t0)[18])[1]))){
t7=t6;
f_20322(2,t7,C_SCHEME_UNDEFINED);}
else{
t7=(C_word)C_i_car(((C_word*)((C_word*)t0)[18])[1]);
t8=(C_word)C_eqp(t7,lf[511]);
if(C_truep(t8)){
t9=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_20775,a[2]=((C_word*)t0)[4],a[3]=((C_word*)t0)[5],a[4]=t6,a[5]=((C_word*)t0)[8],a[6]=((C_word*)t0)[18],tmp=(C_word)a,a+=7,tmp);
t10=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[18])[1]);
if(C_truep((C_word)C_i_nullp(t10))){
C_trace("ChickenBridge.scm: 365  loop-error");
f_18659(t9,((C_word*)t0)[5],((C_word*)t0)[4],(C_word)C_a_i_list(&a,1,lf[514]));}
else{
t11=t9;
f_20775(2,t11,C_SCHEME_UNDEFINED);}}
else{
t9=t6;
f_20322(2,t9,C_SCHEME_UNDEFINED);}}}

/* k20773 in k20309 in parse-accumulation in k18307 in k18304 in k18301 in k18298 in k17861 in k17858 in k17855 in k17852 in k17849 in k17327 in k17324 in k16801 in k16798 in k16795 in k16792 in k16789 in k16786 in k16783 in k16780 in k16777 in k16774 in k16771 in k16768 in k16765 in k16762 in k16759 in k16756 in k16753 in k16750 in k16747 in k16744 in k16741 in k16602 in k16599 in k16596 in k16593 in k16537 in k16534 in k16531 in k16528 in k16525 in k16522 in k16519 in k16516 in k15271 in k15202 in k15009 in k15006 in k14901 in k14850 in k7607 in k7604 in k5838 in k5545 in k5542 in k5538 in k5247 in k5244 in k5241 in k5238 */
static void C_ccall f_20775(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_20775,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_20781,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cadr(((C_word*)((C_word*)t0)[6])[1]);
C_trace("ChickenBridge.scm: 365  loop-variable?");
f_18647(t2,t3);}

/* k20779 in k20773 in k20309 in parse-accumulation in k18307 in k18304 in k18301 in k18298 in k17861 in k17858 in k17855 in k17852 in k17849 in k17327 in k17324 in k16801 in k16798 in k16795 in k16792 in k16789 in k16786 in k16783 in k16780 in k16777 in k16774 in k16771 in k16768 in k16765 in k16762 in k16759 in k16756 in k16753 in k16750 in k16747 in k16744 in k16741 in k16602 in k16599 in k16596 in k16593 in k16537 in k16534 in k16531 in k16528 in k16525 in k16522 in k16519 in k16516 in k15271 in k15202 in k15009 in k15006 in k14901 in k14850 in k7607 in k7604 in k5838 in k5545 in k5542 in k5538 in k5247 in k5244 in k5241 in k5238 */
static void C_ccall f_20781(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_20781,2,t0,t1);}
if(C_truep(t1)){
t2=(C_word)C_i_cadr(((C_word*)((C_word*)t0)[6])[1]);
t3=C_mutate(((C_word *)((C_word*)t0)[5])+1,t2);
t4=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[6])[1]);
t5=C_mutate(((C_word *)((C_word*)t0)[6])+1,t4);
t6=((C_word*)t0)[4];
f_20322(2,t6,t5);}
else{
t2=(C_word)C_i_car(((C_word*)((C_word*)t0)[6])[1]);
C_trace("ChickenBridge.scm: 365  loop-error");
f_18659(((C_word*)t0)[4],((C_word*)t0)[3],((C_word*)t0)[2],(C_word)C_a_i_list(&a,3,lf[512],t2,lf[513]));}}

/* k20320 in k20309 in parse-accumulation in k18307 in k18304 in k18301 in k18298 in k17861 in k17858 in k17855 in k17852 in k17849 in k17327 in k17324 in k16801 in k16798 in k16795 in k16792 in k16789 in k16786 in k16783 in k16780 in k16777 in k16774 in k16771 in k16768 in k16765 in k16762 in k16759 in k16756 in k16753 in k16750 in k16747 in k16744 in k16741 in k16602 in k16599 in k16596 in k16593 in k16537 in k16534 in k16531 in k16528 in k16525 in k16522 in k16519 in k16516 in k15271 in k15202 in k15009 in k15006 in k14901 in k14850 in k7607 in k7604 in k5838 in k5545 in k5542 in k5538 in k5247 in k5244 in k5241 in k5238 */
static void C_ccall f_20322(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word ab[28],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_20322,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|17,a[1]=(C_word)f_20326,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],a[7]=((C_word*)t0)[8],a[8]=((C_word*)t0)[9],a[9]=((C_word*)t0)[10],a[10]=((C_word*)t0)[11],a[11]=((C_word*)t0)[12],a[12]=((C_word*)t0)[13],a[13]=((C_word*)t0)[14],a[14]=((C_word*)t0)[15],a[15]=((C_word*)t0)[16],a[16]=((C_word*)t0)[17],a[17]=((C_word*)t0)[18],tmp=(C_word)a,a+=18,tmp);
t3=((C_word*)((C_word*)t0)[8])[1];
t4=((C_word*)t0)[2];
t5=(*a=C_VECTOR_TYPE|1,a[1]=t4,tmp=(C_word)a,a+=2,tmp);
t6=C_SCHEME_UNDEFINED;
t7=(*a=C_VECTOR_TYPE|1,a[1]=t6,tmp=(C_word)a,a+=2,tmp);
t8=C_set_block_item(t7,0,(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_20207,a[2]=t3,a[3]=t7,a[4]=t5,a[5]=((C_word)li301),tmp=(C_word)a,a+=6,tmp));
t9=((C_word*)t7)[1];
f_20207(t9,t2,C_SCHEME_FALSE);}

/* do3493 in k20320 in k20309 in parse-accumulation in k18307 in k18304 in k18301 in k18298 in k17861 in k17858 in k17855 in k17852 in k17849 in k17327 in k17324 in k16801 in k16798 in k16795 in k16792 in k16789 in k16786 in k16783 in k16780 in k16777 in k16774 in k16771 in k16768 in k16765 in k16762 in k16759 in k16756 in k16753 in k16750 in k16747 in k16744 in k16741 in k16602 in k16599 in k16596 in k16593 in k16537 in k16534 in k16531 in k16528 in k16525 in k16522 in k16519 in k16516 in k15271 in k15202 in k15009 in k15006 in k14901 in k14850 in k7607 in k7604 in k5838 in k5545 in k5542 in k5538 in k5247 in k5244 in k5241 in k5238 */
static void C_fcall f_20207(C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word ab[12],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_20207,NULL,3,t0,t1,t2);}
t3=(*a=C_VECTOR_TYPE|1,a[1]=t2,tmp=(C_word)a,a+=2,tmp);
t4=(C_word)C_i_nullp(((C_word*)((C_word*)t0)[4])[1]);
t5=(C_truep(t4)?t4:((C_word*)t3)[1]);
if(C_truep(t5)){
t6=t1;
((C_proc2)(void*)(*((C_word*)t6+1)))(2,t6,((C_word*)t3)[1]);}
else{
t6=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_20221,a[2]=t1,a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=t3,tmp=(C_word)a,a+=6,tmp);
t7=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_20232,a[2]=t6,a[3]=((C_word*)t0)[2],tmp=(C_word)a,a+=4,tmp);
t8=(C_word)C_i_car(((C_word*)((C_word*)t0)[4])[1]);
C_trace("ChickenBridge.scm: 365  loop-collectors");
t9=C_retrieve2(lf[365],"loop-collectors");
f_18335(3,t9,t7,t8);}}

/* k20230 in do3493 in k20320 in k20309 in parse-accumulation in k18307 in k18304 in k18301 in k18298 in k17861 in k17858 in k17855 in k17852 in k17849 in k17327 in k17324 in k16801 in k16798 in k16795 in k16792 in k16789 in k16786 in k16783 in k16780 in k16777 in k16774 in k16771 in k16768 in k16765 in k16762 in k16759 in k16756 in k16753 in k16750 in k16747 in k16744 in k16741 in k16602 in k16599 in k16596 in k16593 in k16537 in k16534 in k16531 in k16528 in k16525 in k16522 in k16519 in k16516 in k15271 in k15202 in k15009 in k15006 in k14901 in k14850 in k7607 in k7604 in k5838 in k5545 in k5542 in k5538 in k5247 in k5244 in k5241 in k5238 */
static void C_ccall f_20232(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word ab[10],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_20232,2,t0,t1);}
t2=t1;
t3=(*a=C_VECTOR_TYPE|1,a[1]=t2,tmp=(C_word)a,a+=2,tmp);
t4=C_SCHEME_UNDEFINED;
t5=(*a=C_VECTOR_TYPE|1,a[1]=t4,tmp=(C_word)a,a+=2,tmp);
t6=C_set_block_item(t5,0,(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_20167,a[2]=((C_word*)t0)[3],a[3]=t5,a[4]=t3,a[5]=((C_word)li300),tmp=(C_word)a,a+=6,tmp));
t7=((C_word*)t5)[1];
f_20167(t7,((C_word*)t0)[2],C_SCHEME_FALSE);}

/* do3485 in k20230 in do3493 in k20320 in k20309 in parse-accumulation in k18307 in k18304 in k18301 in k18298 in k17861 in k17858 in k17855 in k17852 in k17849 in k17327 in k17324 in k16801 in k16798 in k16795 in k16792 in k16789 in k16786 in k16783 in k16780 in k16777 in k16774 in k16771 in k16768 in k16765 in k16762 in k16759 in k16756 in k16753 in k16750 in k16747 in k16744 in k16741 in k16602 in k16599 in k16596 in k16593 in k16537 in k16534 in k16531 in k16528 in k16525 in k16522 in k16519 in k16516 in k15271 in k15202 in k15009 in k15006 in k14901 in k14850 in k7607 in k7604 in k5838 in k5545 in k5542 in k5538 in k5247 in k5244 in k5241 in k5238 */
static void C_fcall f_20167(C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word ab[8],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_20167,NULL,3,t0,t1,t2);}
t3=(*a=C_VECTOR_TYPE|1,a[1]=t2,tmp=(C_word)a,a+=2,tmp);
t4=(C_word)C_i_nullp(((C_word*)((C_word*)t0)[4])[1]);
t5=(C_truep(t4)?t4:((C_word*)t3)[1]);
if(C_truep(t5)){
t6=t1;
((C_proc2)(void*)(*((C_word*)t6+1)))(2,t6,((C_word*)t3)[1]);}
else{
t6=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_20180,a[2]=t3,a[3]=t1,a[4]=((C_word*)t0)[3],a[5]=((C_word*)t0)[4],tmp=(C_word)a,a+=6,tmp);
t7=(C_word)C_i_car(((C_word*)((C_word*)t0)[4])[1]);
t8=(C_word)C_i_car(t7);
t9=(C_word)C_eqp(((C_word*)t0)[2],t8);
if(C_truep(t9)){
t10=(C_word)C_i_car(((C_word*)((C_word*)t0)[4])[1]);
t11=C_set_block_item(t3,0,t10);
t12=t6;
f_20180(t12,t11);}
else{
t10=t6;
f_20180(t10,C_SCHEME_UNDEFINED);}}}

/* k20178 in do3485 in k20230 in do3493 in k20320 in k20309 in parse-accumulation in k18307 in k18304 in k18301 in k18298 in k17861 in k17858 in k17855 in k17852 in k17849 in k17327 in k17324 in k16801 in k16798 in k16795 in k16792 in k16789 in k16786 in k16783 in k16780 in k16777 in k16774 in k16771 in k16768 in k16765 in k16762 in k16759 in k16756 in k16753 in k16750 in k16747 in k16744 in k16741 in k16602 in k16599 in k16596 in k16593 in k16537 in k16534 in k16531 in k16528 in k16525 in k16522 in k16519 in k16516 in k15271 in k15202 in k15009 in k15006 in k14901 in k14850 in k7607 in k7604 in k5838 in k5545 in k5542 in k5538 in k5247 in k5244 in k5241 in k5238 */
static void C_fcall f_20180(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word *a;
t2=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[5])[1]);
t3=C_mutate(((C_word *)((C_word*)t0)[5])+1,t2);
t4=((C_word*)((C_word*)t0)[4])[1];
f_20167(t4,((C_word*)t0)[3],((C_word*)((C_word*)t0)[2])[1]);}

/* k20219 in do3493 in k20320 in k20309 in parse-accumulation in k18307 in k18304 in k18301 in k18298 in k17861 in k17858 in k17855 in k17852 in k17849 in k17327 in k17324 in k16801 in k16798 in k16795 in k16792 in k16789 in k16786 in k16783 in k16780 in k16777 in k16774 in k16771 in k16768 in k16765 in k16762 in k16759 in k16756 in k16753 in k16750 in k16747 in k16744 in k16741 in k16602 in k16599 in k16596 in k16593 in k16537 in k16534 in k16531 in k16528 in k16525 in k16522 in k16519 in k16516 in k15271 in k15202 in k15009 in k15006 in k14901 in k14850 in k7607 in k7604 in k5838 in k5545 in k5542 in k5538 in k5247 in k5244 in k5241 in k5238 */
static void C_ccall f_20221(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[5])+1,t1);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
t4=C_mutate(((C_word *)((C_word*)t0)[4])+1,t3);
t5=((C_word*)((C_word*)t0)[3])[1];
f_20207(t5,((C_word*)t0)[2],((C_word*)((C_word*)t0)[5])[1]);}

/* k20324 in k20320 in k20309 in parse-accumulation in k18307 in k18304 in k18301 in k18298 in k17861 in k17858 in k17855 in k17852 in k17849 in k17327 in k17324 in k16801 in k16798 in k16795 in k16792 in k16789 in k16786 in k16783 in k16780 in k16777 in k16774 in k16771 in k16768 in k16765 in k16762 in k16759 in k16756 in k16753 in k16750 in k16747 in k16744 in k16741 in k16602 in k16599 in k16596 in k16593 in k16537 in k16534 in k16531 in k16528 in k16525 in k16522 in k16519 in k16516 in k15271 in k15202 in k15009 in k15006 in k14901 in k14850 in k7607 in k7604 in k5838 in k5545 in k5542 in k5538 in k5247 in k5244 in k5241 in k5238 */
static void C_ccall f_20326(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word ab[27],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_20326,2,t0,t1);}
t2=C_mutate(((C_word *)((C_word*)t0)[17])+1,t1);
t3=(*a=C_CLOSURE_TYPE|14,a[1]=(C_word)f_20329,a[2]=((C_word*)t0)[5],a[3]=((C_word*)t0)[6],a[4]=((C_word*)t0)[7],a[5]=((C_word*)t0)[8],a[6]=((C_word*)t0)[9],a[7]=((C_word*)t0)[10],a[8]=((C_word*)t0)[11],a[9]=((C_word*)t0)[12],a[10]=((C_word*)t0)[13],a[11]=((C_word*)t0)[17],a[12]=((C_word*)t0)[14],a[13]=((C_word*)t0)[15],a[14]=((C_word*)t0)[16],tmp=(C_word)a,a+=15,tmp);
t4=((C_word*)((C_word*)t0)[17])[1];
if(C_truep(t4)){
t5=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_20759,a[2]=((C_word*)t0)[17],a[3]=((C_word*)t0)[2],a[4]=((C_word*)t0)[13],a[5]=((C_word*)t0)[3],a[6]=((C_word*)t0)[4],a[7]=t3,tmp=(C_word)a,a+=8,tmp);
t6=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_20763,a[2]=t5,a[3]=((C_word*)t0)[13],tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 365  collector-type");
f_20294(t6,((C_word*)((C_word*)t0)[17])[1]);}
else{
t5=C_set_block_item(((C_word*)t0)[14],0,C_SCHEME_TRUE);
t6=t3;
f_20329(2,t6,t5);}}

/* k20761 in k20324 in k20320 in k20309 in parse-accumulation in k18307 in k18304 in k18301 in k18298 in k17861 in k17858 in k17855 in k17852 in k17849 in k17327 in k17324 in k16801 in k16798 in k16795 in k16792 in k16789 in k16786 in k16783 in k16780 in k16777 in k16774 in k16771 in k16768 in k16765 in k16762 in k16759 in k16756 in k16753 in k16750 in k16747 in k16744 in k16741 in k16602 in k16599 in k16596 in k16593 in k16537 in k16534 in k16531 in k16528 in k16525 in k16522 in k16519 in k16516 in k15271 in k15202 in k15009 in k15006 in k14901 in k14850 in k7607 in k7604 in k5838 in k5545 in k5542 in k5538 in k5247 in k5244 in k5241 in k5238 */
static void C_ccall f_20763(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word *a;
t2=lf[508];
t3=lf[509];
t4=lf[510];
t5=(C_word)C_eqp(((C_word*)t0)[3],t1);
if(C_truep(t5)){
t6=((C_word*)t0)[2];
f_20759(t6,t5);}
else{
t6=(C_word)C_i_member(((C_word*)t0)[3],t2);
t7=(C_truep(t6)?(C_word)C_i_member(t1,t2):C_SCHEME_FALSE);
if(C_truep(t7)){
t8=((C_word*)t0)[2];
f_20759(t8,t7);}
else{
t8=(C_word)C_i_member(((C_word*)t0)[3],t3);
t9=(C_truep(t8)?(C_word)C_i_member(t1,t3):C_SCHEME_FALSE);
if(C_truep(t9)){
t10=((C_word*)t0)[2];
f_20759(t10,t9);}
else{
t10=(C_word)C_i_member(((C_word*)t0)[3],t4);
t11=((C_word*)t0)[2];
f_20759(t11,(C_truep(t10)?(C_word)C_i_member(t1,t4):C_SCHEME_FALSE));}}}}

/* k20757 in k20324 in k20320 in k20309 in parse-accumulation in k18307 in k18304 in k18301 in k18298 in k17861 in k17858 in k17855 in k17852 in k17849 in k17327 in k17324 in k16801 in k16798 in k16795 in k16792 in k16789 in k16786 in k16783 in k16780 in k16777 in k16774 in k16771 in k16768 in k16765 in k16762 in k16759 in k16756 in k16753 in k16750 in k16747 in k16744 in k16741 in k16602 in k16599 in k16596 in k16593 in k16537 in k16534 in k16531 in k16528 in k16525 in k16522 in k16519 in k16516 in k15271 in k15202 in k15009 in k15006 in k14901 in k14850 in k7607 in k7604 in k5838 in k5545 in k5542 in k5538 in k5247 in k5244 in k5241 in k5238 */
static void C_fcall f_20759(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[6],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_20759,NULL,2,t0,t1);}
if(C_truep(t1)){
t2=((C_word*)t0)[7];
f_20329(2,t2,C_SCHEME_UNDEFINED);}
else{
t2=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_20755,a[2]=((C_word*)t0)[4],a[3]=((C_word*)t0)[5],a[4]=((C_word*)t0)[6],a[5]=((C_word*)t0)[7],tmp=(C_word)a,a+=6,tmp);
C_trace("ChickenBridge.scm: 365  collector-type");
f_20294(t2,((C_word*)((C_word*)t0)[2])[1]);}}

/* k20753 in k20757 in k20324 in k20320 in k20309 in parse-accumulation in k18307 in k18304 in k18301 in k18298 in k17861 in k17858 in k17855 in k17852 in k17849 in k17327 in k17324 in k16801 in k16798 in k16795 in k16792 in k16789 in k16786 in k16783 in k16780 in k16777 in k16774 in k16771 in k16768 in k16765 in k16762 in k16759 in k16756 in k16753 in k16750 in k16747 in k16744 in k16741 in k16602 in k16599 in k16596 in k16593 in k16537 in k16534 in k16531 in k16528 in k16525 in k16522 in k16519 in k16516 in k15271 in k15202 in k15009 in k15006 in k14901 in k14850 in k7607 in k7604 in k5838 in k5545 in k5542 in k5538 in k5247 in k5244 in k5241 in k5238 */
static void C_ccall f_20755(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word ab[15],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_20755,2,t0,t1);}
C_trace("ChickenBridge.scm: 365  loop-error");
f_18659(((C_word*)t0)[5],((C_word*)t0)[4],((C_word*)t0)[3],(C_word)C_a_i_list(&a,5,lf[505],t1,lf[506],((C_word*)t0)[2],lf[507]));}

/* k20327 in k20324 in k20320 in k20309 in parse-accumulation in k18307 in k18304 in k18301 in k18298 in k17861 in k17858 in k17855 in k17852 in k17849 in k17327 in k17324 in k16801 in k16798 in k16795 in k16792 in k16789 in k16786 in k16783 in k16780 in k16777 in k16774 in k16771 in k16768 in k16765 in k16762 in k16759 in k16756 in k16753 in k16750 in k16747 in k16744 in k16741 in k16602 in k16599 in k16596 in k16593 in k16537 in k16534 in k16531 in k16528 in k16525 in k16522 in k16519 in k16516 in k15271 in k15202 in k15009 in k15006 in k14901 in k14850 in k7607 in k7604 in k5838 in k5545 in k5542 in k5538 in k5247 in k5244 in k5241 in k5238 */
static void C_ccall f_20329(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word t14;
C_word t15;
C_word t16;
C_word t17;
C_word ab[61],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_20329,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|10,a[1]=(C_word)f_20332,a[2]=((C_word*)t0)[6],a[3]=((C_word*)t0)[7],a[4]=((C_word*)t0)[8],a[5]=((C_word*)t0)[9],a[6]=((C_word*)t0)[10],a[7]=((C_word*)t0)[11],a[8]=((C_word*)t0)[12],a[9]=((C_word*)t0)[13],a[10]=((C_word*)t0)[14],tmp=(C_word)a,a+=11,tmp);
t3=(C_word)C_eqp(((C_word*)t0)[10],lf[489]);
t4=(C_truep(t3)?t3:(C_word)C_eqp(((C_word*)t0)[10],lf[490]));
if(C_truep(t4)){
t5=C_SCHEME_FALSE;
t6=(*a=C_VECTOR_TYPE|1,a[1]=t5,tmp=(C_word)a,a+=2,tmp);
t7=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_20375,a[2]=t2,a[3]=((C_word*)t0)[8],a[4]=((C_word*)t0)[5],a[5]=t6,a[6]=((C_word*)t0)[10],tmp=(C_word)a,a+=7,tmp);
if(C_truep(((C_word*)((C_word*)t0)[12])[1])){
t8=((C_word*)((C_word*)t0)[4])[1];
t9=(*a=C_CLOSURE_TYPE|9,a[1]=(C_word)f_20413,a[2]=((C_word*)t0)[10],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[9],a[5]=t7,a[6]=((C_word*)t0)[4],a[7]=((C_word*)t0)[11],a[8]=((C_word*)t0)[6],a[9]=t6,tmp=(C_word)a,a+=10,tmp);
if(C_truep(t8)){
t10=t9;
f_20413(2,t10,t8);}
else{
C_trace("ChickenBridge.scm: 365  gensym");
t10=C_retrieve(lf[28]);
((C_proc3)C_retrieve_proc(t10))(3,t10,t9,lf[491]);}}
else{
t8=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_20442,a[2]=t7,a[3]=t6,tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 365  collector-acc");
f_20299(t8,((C_word*)((C_word*)t0)[11])[1]);}}
else{
t5=(C_word)C_eqp(((C_word*)t0)[10],lf[492]);
t6=(C_truep(t5)?t5:(C_word)C_eqp(((C_word*)t0)[10],lf[493]));
if(C_truep(t6)){
t7=(*a=C_CLOSURE_TYPE|12,a[1]=(C_word)f_20454,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[9],a[5]=((C_word*)t0)[11],a[6]=((C_word*)t0)[4],a[7]=((C_word*)t0)[12],a[8]=t2,a[9]=((C_word*)t0)[8],a[10]=((C_word*)t0)[5],a[11]=((C_word*)t0)[6],a[12]=((C_word*)t0)[10],tmp=(C_word)a,a+=13,tmp);
C_trace("ChickenBridge.scm: 365  gensym");
t8=C_retrieve(lf[28]);
((C_proc3)C_retrieve_proc(t8))(3,t8,t7,lf[495]);}
else{
t7=(C_word)C_eqp(((C_word*)t0)[10],lf[20]);
t8=(*a=C_CLOSURE_TYPE|13,a[1]=(C_word)f_20549,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[9],a[5]=((C_word*)t0)[11],a[6]=((C_word*)t0)[7],a[7]=((C_word*)t0)[6],a[8]=((C_word*)t0)[12],a[9]=((C_word*)t0)[5],a[10]=((C_word*)t0)[10],a[11]=t2,a[12]=((C_word*)t0)[8],a[13]=((C_word*)t0)[4],tmp=(C_word)a,a+=14,tmp);
if(C_truep(t7)){
t9=t8;
f_20549(t9,t7);}
else{
t9=(C_word)C_eqp(((C_word*)t0)[10],lf[499]);
t10=t8;
f_20549(t10,(C_truep(t9)?t9:(C_word)C_eqp(((C_word*)t0)[10],lf[504])));}}}}

/* k20547 in k20327 in k20324 in k20320 in k20309 in parse-accumulation in k18307 in k18304 in k18301 in k18298 in k17861 in k17858 in k17855 in k17852 in k17849 in k17327 in k17324 in k16801 in k16798 in k16795 in k16792 in k16789 in k16786 in k16783 in k16780 in k16777 in k16774 in k16771 in k16768 in k16765 in k16762 in k16759 in k16756 in k16753 in k16750 in k16747 in k16744 in k16741 in k16602 in k16599 in k16596 in k16593 in k16537 in k16534 in k16531 in k16528 in k16525 in k16522 in k16519 in k16516 in k15271 in k15202 in k15009 in k15006 in k14901 in k14850 in k7607 in k7604 in k5838 in k5545 in k5542 in k5538 in k5247 in k5244 in k5241 in k5238 */
static void C_fcall f_20549(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word ab[35],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_20549,NULL,2,t0,t1);}
if(C_truep(t1)){
t2=C_SCHEME_FALSE;
t3=(*a=C_VECTOR_TYPE|1,a[1]=t2,tmp=(C_word)a,a+=2,tmp);
t4=C_SCHEME_FALSE;
t5=(*a=C_VECTOR_TYPE|1,a[1]=t4,tmp=(C_word)a,a+=2,tmp);
t6=(*a=C_CLOSURE_TYPE|8,a[1]=(C_word)f_20552,a[2]=t5,a[3]=((C_word*)t0)[9],a[4]=((C_word*)t0)[10],a[5]=((C_word*)t0)[11],a[6]=((C_word*)t0)[12],a[7]=t3,a[8]=((C_word*)t0)[13],tmp=(C_word)a,a+=9,tmp);
t7=((C_word*)((C_word*)t0)[8])[1];
if(C_truep(t7)){
t8=(*a=C_CLOSURE_TYPE|11,a[1]=(C_word)f_20665,a[2]=((C_word*)t0)[10],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=t6,a[6]=((C_word*)t0)[13],a[7]=((C_word*)t0)[5],a[8]=((C_word*)t0)[6],a[9]=((C_word*)t0)[7],a[10]=t3,a[11]=t5,tmp=(C_word)a,a+=12,tmp);
if(C_truep(((C_word*)((C_word*)t0)[13])[1])){
t9=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_20723,a[2]=t8,a[3]=((C_word*)t0)[7],tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 365  make-binding");
f_18653(t9,((C_word*)((C_word*)t0)[13])[1],lf[503]);}
else{
t9=t8;
f_20665(t9,C_SCHEME_UNDEFINED);}}
else{
t8=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_20658,a[2]=t6,a[3]=t3,a[4]=((C_word*)t0)[5],a[5]=t5,tmp=(C_word)a,a+=6,tmp);
C_trace("ChickenBridge.scm: 365  collector-acc");
f_20299(t8,((C_word*)((C_word*)t0)[5])[1]);}}
else{
t2=((C_word*)t0)[11];
f_20332(t2,C_SCHEME_UNDEFINED);}}

/* k20656 in k20547 in k20327 in k20324 in k20320 in k20309 in parse-accumulation in k18307 in k18304 in k18301 in k18298 in k17861 in k17858 in k17855 in k17852 in k17849 in k17327 in k17324 in k16801 in k16798 in k16795 in k16792 in k16789 in k16786 in k16783 in k16780 in k16777 in k16774 in k16771 in k16768 in k16765 in k16762 in k16759 in k16756 in k16753 in k16750 in k16747 in k16744 in k16741 in k16602 in k16599 in k16596 in k16593 in k16537 in k16534 in k16531 in k16528 in k16525 in k16522 in k16519 in k16516 in k15271 in k15202 in k15009 in k15006 in k14901 in k14850 in k7607 in k7604 in k5838 in k5545 in k5542 in k5538 in k5247 in k5244 in k5241 in k5238 */
static void C_ccall f_20658(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[5])+1,t1);
t3=((C_word*)((C_word*)t0)[4])[1];
t4=(C_word)C_i_cadddr(t3);
t5=C_mutate(((C_word *)((C_word*)t0)[3])+1,t4);
t6=((C_word*)t0)[2];
f_20552(t6,t5);}

/* k20721 in k20547 in k20327 in k20324 in k20320 in k20309 in parse-accumulation in k18307 in k18304 in k18301 in k18298 in k17861 in k17858 in k17855 in k17852 in k17849 in k17327 in k17324 in k16801 in k16798 in k16795 in k16792 in k16789 in k16786 in k16783 in k16780 in k16777 in k16774 in k16771 in k16768 in k16765 in k16762 in k16759 in k16756 in k16753 in k16750 in k16747 in k16744 in k16741 in k16602 in k16599 in k16596 in k16593 in k16537 in k16534 in k16531 in k16528 in k16525 in k16522 in k16519 in k16516 in k15271 in k15202 in k15009 in k15006 in k14901 in k14850 in k7607 in k7604 in k5838 in k5545 in k5542 in k5538 in k5247 in k5244 in k5241 in k5238 */
static void C_ccall f_20723(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[3],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_20723,2,t0,t1);}
t2=(C_word)C_a_i_cons(&a,2,t1,((C_word*)((C_word*)t0)[3])[1]);
t3=C_mutate(((C_word *)((C_word*)t0)[3])+1,t2);
t4=((C_word*)t0)[2];
f_20665(t4,((C_word*)((C_word*)t0)[3])[1]);}

/* k20663 in k20547 in k20327 in k20324 in k20320 in k20309 in parse-accumulation in k18307 in k18304 in k18301 in k18298 in k17861 in k17858 in k17855 in k17852 in k17849 in k17327 in k17324 in k16801 in k16798 in k16795 in k16792 in k16789 in k16786 in k16783 in k16780 in k16777 in k16774 in k16771 in k16768 in k16765 in k16762 in k16759 in k16756 in k16753 in k16750 in k16747 in k16744 in k16741 in k16602 in k16599 in k16596 in k16593 in k16537 in k16534 in k16531 in k16528 in k16525 in k16522 in k16519 in k16516 in k15271 in k15202 in k15009 in k15006 in k14901 in k14850 in k7607 in k7604 in k5838 in k5545 in k5542 in k5538 in k5247 in k5244 in k5241 in k5238 */
static void C_fcall f_20665(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[12],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_20665,NULL,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|11,a[1]=(C_word)f_20669,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],a[7]=((C_word*)t0)[7],a[8]=((C_word*)t0)[8],a[9]=((C_word*)t0)[9],a[10]=((C_word*)t0)[10],a[11]=((C_word*)t0)[11],tmp=(C_word)a,a+=12,tmp);
C_trace("ChickenBridge.scm: 365  gensym");
t3=C_retrieve(lf[28]);
((C_proc3)C_retrieve_proc(t3))(3,t3,t2,lf[502]);}

/* k20667 in k20663 in k20547 in k20327 in k20324 in k20320 in k20309 in parse-accumulation in k18307 in k18304 in k18301 in k18298 in k17861 in k17858 in k17855 in k17852 in k17849 in k17327 in k17324 in k16801 in k16798 in k16795 in k16792 in k16789 in k16786 in k16783 in k16780 in k16777 in k16774 in k16771 in k16768 in k16765 in k16762 in k16759 in k16756 in k16753 in k16750 in k16747 in k16744 in k16741 in k16602 in k16599 in k16596 in k16593 in k16537 in k16534 in k16531 in k16528 in k16525 in k16522 in k16519 in k16516 in k15271 in k15202 in k15009 in k15006 in k14901 in k14850 in k7607 in k7604 in k5838 in k5545 in k5542 in k5538 in k5247 in k5244 in k5241 in k5238 */
static void C_ccall f_20669(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[12],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_20669,2,t0,t1);}
t2=C_mutate(((C_word *)((C_word*)t0)[11])+1,t1);
t3=(*a=C_CLOSURE_TYPE|11,a[1]=(C_word)f_20673,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],a[7]=((C_word*)t0)[7],a[8]=((C_word*)t0)[8],a[9]=((C_word*)t0)[11],a[10]=((C_word*)t0)[9],a[11]=((C_word*)t0)[10],tmp=(C_word)a,a+=12,tmp);
C_trace("ChickenBridge.scm: 365  gensym");
t4=C_retrieve(lf[28]);
((C_proc3)C_retrieve_proc(t4))(3,t4,t3,lf[501]);}

/* k20671 in k20667 in k20663 in k20547 in k20327 in k20324 in k20320 in k20309 in parse-accumulation in k18307 in k18304 in k18301 in k18298 in k17861 in k17858 in k17855 in k17852 in k17849 in k17327 in k17324 in k16801 in k16798 in k16795 in k16792 in k16789 in k16786 in k16783 in k16780 in k16777 in k16774 in k16771 in k16768 in k16765 in k16762 in k16759 in k16756 in k16753 in k16750 in k16747 in k16744 in k16741 in k16602 in k16599 in k16596 in k16593 in k16537 in k16534 in k16531 in k16528 in k16525 in k16522 in k16519 in k16516 in k15271 in k15202 in k15009 in k15006 in k14901 in k14850 in k7607 in k7604 in k5838 in k5545 in k5542 in k5538 in k5247 in k5244 in k5241 in k5238 */
static void C_ccall f_20673(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[12],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_20673,2,t0,t1);}
t2=C_mutate(((C_word *)((C_word*)t0)[11])+1,t1);
t3=(*a=C_CLOSURE_TYPE|11,a[1]=(C_word)f_20715,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],a[7]=((C_word*)t0)[7],a[8]=((C_word*)t0)[8],a[9]=((C_word*)t0)[11],a[10]=((C_word*)t0)[9],a[11]=((C_word*)t0)[10],tmp=(C_word)a,a+=12,tmp);
C_trace("ChickenBridge.scm: 365  make-binding");
f_18653(t3,((C_word*)((C_word*)t0)[11])[1],lf[500]);}

/* k20713 in k20671 in k20667 in k20663 in k20547 in k20327 in k20324 in k20320 in k20309 in parse-accumulation in k18307 in k18304 in k18301 in k18298 in k17861 in k17858 in k17855 in k17852 in k17849 in k17327 in k17324 in k16801 in k16798 in k16795 in k16792 in k16789 in k16786 in k16783 in k16780 in k16777 in k16774 in k16771 in k16768 in k16765 in k16762 in k16759 in k16756 in k16753 in k16750 in k16747 in k16744 in k16741 in k16602 in k16599 in k16596 in k16593 in k16537 in k16534 in k16531 in k16528 in k16525 in k16522 in k16519 in k16516 in k15271 in k15202 in k15009 in k15006 in k14901 in k14850 in k7607 in k7604 in k5838 in k5545 in k5542 in k5538 in k5247 in k5244 in k5241 in k5238 */
static void C_ccall f_20715(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[15],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_20715,2,t0,t1);}
t2=(C_word)C_a_i_cons(&a,2,t1,((C_word*)((C_word*)t0)[11])[1]);
t3=C_mutate(((C_word *)((C_word*)t0)[11])+1,t2);
t4=(*a=C_CLOSURE_TYPE|11,a[1]=(C_word)f_20711,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],a[7]=((C_word*)t0)[7],a[8]=((C_word*)t0)[8],a[9]=((C_word*)t0)[9],a[10]=((C_word*)t0)[10],a[11]=((C_word*)t0)[11],tmp=(C_word)a,a+=12,tmp);
C_trace("ChickenBridge.scm: 365  make-binding");
f_18653(t4,((C_word*)((C_word*)t0)[10])[1],C_SCHEME_FALSE);}

/* k20709 in k20713 in k20671 in k20667 in k20663 in k20547 in k20327 in k20324 in k20320 in k20309 in parse-accumulation in k18307 in k18304 in k18301 in k18298 in k17861 in k17858 in k17855 in k17852 in k17849 in k17327 in k17324 in k16801 in k16798 in k16795 in k16792 in k16789 in k16786 in k16783 in k16780 in k16777 in k16774 in k16771 in k16768 in k16765 in k16762 in k16759 in k16756 in k16753 in k16750 in k16747 in k16744 in k16741 in k16602 in k16599 in k16596 in k16593 in k16537 in k16534 in k16531 in k16528 in k16525 in k16522 in k16519 in k16516 in k15271 in k15202 in k15009 in k15006 in k14901 in k14850 in k7607 in k7604 in k5838 in k5545 in k5542 in k5538 in k5247 in k5244 in k5241 in k5238 */
static void C_ccall f_20711(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word ab[22],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_20711,2,t0,t1);}
t2=(C_word)C_a_i_cons(&a,2,t1,((C_word*)((C_word*)t0)[11])[1]);
t3=C_mutate(((C_word *)((C_word*)t0)[11])+1,t2);
t4=(C_word)C_a_i_list(&a,3,lf[14],((C_word*)((C_word*)t0)[10])[1],((C_word*)((C_word*)t0)[9])[1]);
t5=(C_word)C_a_i_cons(&a,2,t4,((C_word*)((C_word*)t0)[8])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[8])+1,t5);
t7=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_20689,a[2]=((C_word*)t0)[4],a[3]=((C_word*)t0)[9],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
C_trace("ChickenBridge.scm: 365  make-collector");
f_20289(t7,((C_word*)((C_word*)t0)[6])[1],((C_word*)t0)[2],((C_word*)((C_word*)t0)[10])[1],((C_word*)((C_word*)t0)[9])[1]);}

/* k20687 in k20709 in k20713 in k20671 in k20667 in k20663 in k20547 in k20327 in k20324 in k20320 in k20309 in parse-accumulation in k18307 in k18304 in k18301 in k18298 in k17861 in k17858 in k17855 in k17852 in k17849 in k17327 in k17324 in k16801 in k16798 in k16795 in k16792 in k16789 in k16786 in k16783 in k16780 in k16777 in k16774 in k16771 in k16768 in k16765 in k16762 in k16759 in k16756 in k16753 in k16750 in k16747 in k16744 in k16741 in k16602 in k16599 in k16596 in k16593 in k16537 in k16534 in k16531 in k16528 in k16525 in k16522 in k16519 in k16516 in k15271 in k15202 in k15009 in k15006 in k14901 in k14850 in k7607 in k7604 in k5838 in k5545 in k5542 in k5538 in k5247 in k5244 in k5241 in k5238 */
static void C_ccall f_20689(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_20689,2,t0,t1);}
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=((C_word*)((C_word*)t0)[5])[1];
if(C_truep(t3)){
t4=((C_word*)t0)[4];
f_20552(t4,C_SCHEME_UNDEFINED);}
else{
t4=(C_word)C_a_i_list(&a,2,lf[17],((C_word*)((C_word*)t0)[3])[1]);
t5=(C_word)C_a_i_cons(&a,2,t4,((C_word*)((C_word*)t0)[2])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[2])+1,t5);
t7=((C_word*)t0)[4];
f_20552(t7,((C_word*)((C_word*)t0)[2])[1]);}}

/* k20550 in k20547 in k20327 in k20324 in k20320 in k20309 in parse-accumulation in k18307 in k18304 in k18301 in k18298 in k17861 in k17858 in k17855 in k17852 in k17849 in k17327 in k17324 in k16801 in k16798 in k16795 in k16792 in k16789 in k16786 in k16783 in k16780 in k16777 in k16774 in k16771 in k16768 in k16765 in k16762 in k16759 in k16756 in k16753 in k16750 in k16747 in k16744 in k16741 in k16602 in k16599 in k16596 in k16593 in k16537 in k16534 in k16531 in k16528 in k16525 in k16522 in k16519 in k16516 in k15271 in k15202 in k15009 in k15006 in k14901 in k14850 in k7607 in k7604 in k5838 in k5545 in k5542 in k5538 in k5247 in k5244 in k5241 in k5238 */
static void C_fcall f_20552(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word t14;
C_word t15;
C_word t16;
C_word t17;
C_word t18;
C_word t19;
C_word t20;
C_word t21;
C_word t22;
C_word t23;
C_word t24;
C_word t25;
C_word t26;
C_word t27;
C_word t28;
C_word t29;
C_word ab[114],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_20552,NULL,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_20555,a[2]=((C_word*)t0)[5],a[3]=((C_word*)t0)[6],a[4]=((C_word*)t0)[7],a[5]=((C_word*)t0)[8],tmp=(C_word)a,a+=6,tmp);
t3=(C_word)C_eqp(((C_word*)t0)[4],lf[20]);
if(C_truep(t3)){
t4=(C_word)C_a_i_list(&a,1,lf[496]);
t5=(C_word)C_a_i_list(&a,3,lf[20],((C_word*)((C_word*)t0)[3])[1],t4);
t6=(C_word)C_a_i_list(&a,3,lf[497],((C_word*)((C_word*)t0)[2])[1],t5);
t7=(C_word)C_a_i_cons(&a,2,t6,((C_word*)((C_word*)t0)[6])[1]);
t8=C_mutate(((C_word *)((C_word*)t0)[6])+1,t7);
t9=(C_word)C_a_i_list(&a,2,lf[498],((C_word*)((C_word*)t0)[2])[1]);
t10=(C_word)C_a_i_list(&a,3,lf[14],((C_word*)((C_word*)t0)[2])[1],t9);
t11=(C_word)C_a_i_cons(&a,2,t10,((C_word*)((C_word*)t0)[6])[1]);
t12=C_mutate(((C_word *)((C_word*)t0)[6])+1,t11);
t13=t2;
f_20555(t13,((C_word*)((C_word*)t0)[6])[1]);}
else{
t4=(C_word)C_eqp(((C_word*)t0)[4],lf[499]);
if(C_truep(t4)){
t5=(C_word)C_a_i_list(&a,2,lf[496],((C_word*)((C_word*)t0)[3])[1]);
t6=(C_word)C_a_i_list(&a,3,lf[497],((C_word*)((C_word*)t0)[2])[1],t5);
t7=(C_word)C_a_i_cons(&a,2,t6,((C_word*)((C_word*)t0)[6])[1]);
t8=C_mutate(((C_word *)((C_word*)t0)[6])+1,t7);
t9=(C_word)C_a_i_list(&a,2,lf[17],((C_word*)((C_word*)t0)[2])[1]);
t10=(C_word)C_a_i_list(&a,3,lf[14],((C_word*)((C_word*)t0)[2])[1],t9);
t11=(C_word)C_a_i_cons(&a,2,t10,((C_word*)((C_word*)t0)[6])[1]);
t12=C_mutate(((C_word *)((C_word*)t0)[6])+1,t11);
t13=t2;
f_20555(t13,((C_word*)((C_word*)t0)[6])[1]);}
else{
t5=(C_word)C_a_i_list(&a,3,lf[497],((C_word*)((C_word*)t0)[2])[1],((C_word*)((C_word*)t0)[3])[1]);
t6=(C_word)C_a_i_cons(&a,2,t5,((C_word*)((C_word*)t0)[6])[1]);
t7=C_mutate(((C_word *)((C_word*)t0)[6])+1,t6);
t8=(C_word)C_a_i_list(&a,2,lf[498],((C_word*)((C_word*)t0)[2])[1]);
t9=(C_word)C_a_i_list(&a,3,lf[14],((C_word*)((C_word*)t0)[2])[1],t8);
t10=(C_word)C_a_i_cons(&a,2,t9,((C_word*)((C_word*)t0)[6])[1]);
t11=C_mutate(((C_word *)((C_word*)t0)[6])+1,t10);
t12=t2;
f_20555(t12,((C_word*)((C_word*)t0)[6])[1]);}}}

/* k20553 in k20550 in k20547 in k20327 in k20324 in k20320 in k20309 in parse-accumulation in k18307 in k18304 in k18301 in k18298 in k17861 in k17858 in k17855 in k17852 in k17849 in k17327 in k17324 in k16801 in k16798 in k16795 in k16792 in k16789 in k16786 in k16783 in k16780 in k16777 in k16774 in k16771 in k16768 in k16765 in k16762 in k16759 in k16756 in k16753 in k16750 in k16747 in k16744 in k16741 in k16602 in k16599 in k16596 in k16593 in k16537 in k16534 in k16531 in k16528 in k16525 in k16522 in k16519 in k16516 in k15271 in k15202 in k15009 in k15006 in k14901 in k14850 in k7607 in k7604 in k5838 in k5545 in k5542 in k5538 in k5247 in k5244 in k5241 in k5238 */
static void C_fcall f_20555(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[18],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_20555,NULL,2,t0,t1);}
if(C_truep(((C_word*)((C_word*)t0)[5])[1])){
t2=(C_word)C_a_i_list(&a,2,lf[17],((C_word*)((C_word*)t0)[4])[1]);
t3=(C_word)C_a_i_list(&a,3,lf[14],((C_word*)((C_word*)t0)[5])[1],t2);
t4=(C_word)C_a_i_cons(&a,2,t3,((C_word*)((C_word*)t0)[3])[1]);
t5=C_mutate(((C_word *)((C_word*)t0)[3])+1,t4);
t6=((C_word*)t0)[2];
f_20332(t6,((C_word*)((C_word*)t0)[3])[1]);}
else{
t2=((C_word*)t0)[2];
f_20332(t2,C_SCHEME_UNDEFINED);}}

/* k20452 in k20327 in k20324 in k20320 in k20309 in parse-accumulation in k18307 in k18304 in k18301 in k18298 in k17861 in k17858 in k17855 in k17852 in k17849 in k17327 in k17324 in k16801 in k16798 in k16795 in k16792 in k16789 in k16786 in k16783 in k16780 in k16777 in k16774 in k16771 in k16768 in k16765 in k16762 in k16759 in k16756 in k16753 in k16750 in k16747 in k16744 in k16741 in k16602 in k16599 in k16596 in k16593 in k16537 in k16534 in k16531 in k16528 in k16525 in k16522 in k16519 in k16516 in k15271 in k15202 in k15009 in k15006 in k14901 in k14850 in k7607 in k7604 in k5838 in k5545 in k5542 in k5538 in k5247 in k5244 in k5241 in k5238 */
static void C_ccall f_20454(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word ab[25],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_20454,2,t0,t1);}
t2=(C_word)C_eqp(((C_word*)t0)[12],lf[492]);
t3=(C_truep(t2)?lf[322]:lf[319]);
t4=C_SCHEME_FALSE;
t5=(*a=C_VECTOR_TYPE|1,a[1]=t4,tmp=(C_word)a,a+=2,tmp);
t6=(*a=C_CLOSURE_TYPE|8,a[1]=(C_word)f_20460,a[2]=((C_word*)t0)[8],a[3]=((C_word*)t0)[9],a[4]=t3,a[5]=t5,a[6]=((C_word*)t0)[10],a[7]=t1,a[8]=((C_word*)t0)[11],tmp=(C_word)a,a+=9,tmp);
if(C_truep(((C_word*)((C_word*)t0)[7])[1])){
t7=((C_word*)((C_word*)t0)[6])[1];
t8=(*a=C_CLOSURE_TYPE|9,a[1]=(C_word)f_20504,a[2]=((C_word*)t0)[12],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=t6,a[6]=((C_word*)t0)[6],a[7]=((C_word*)t0)[5],a[8]=((C_word*)t0)[11],a[9]=t5,tmp=(C_word)a,a+=10,tmp);
if(C_truep(t7)){
t9=t8;
f_20504(2,t9,t7);}
else{
C_trace("ChickenBridge.scm: 365  gensym");
t9=C_retrieve(lf[28]);
((C_proc3)C_retrieve_proc(t9))(3,t9,t8,lf[494]);}}
else{
t7=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_20537,a[2]=t6,a[3]=t5,tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 365  collector-acc");
f_20299(t7,((C_word*)((C_word*)t0)[5])[1]);}}

/* k20535 in k20452 in k20327 in k20324 in k20320 in k20309 in parse-accumulation in k18307 in k18304 in k18301 in k18298 in k17861 in k17858 in k17855 in k17852 in k17849 in k17327 in k17324 in k16801 in k16798 in k16795 in k16792 in k16789 in k16786 in k16783 in k16780 in k16777 in k16774 in k16771 in k16768 in k16765 in k16762 in k16759 in k16756 in k16753 in k16750 in k16747 in k16744 in k16741 in k16602 in k16599 in k16596 in k16593 in k16537 in k16534 in k16531 in k16528 in k16525 in k16522 in k16519 in k16516 in k15271 in k15202 in k15009 in k15006 in k14901 in k14850 in k7607 in k7604 in k5838 in k5545 in k5542 in k5538 in k5247 in k5244 in k5241 in k5238 */
static void C_ccall f_20537(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[3])+1,t1);
t3=((C_word*)t0)[2];
f_20460(t3,t2);}

/* k20502 in k20452 in k20327 in k20324 in k20320 in k20309 in parse-accumulation in k18307 in k18304 in k18301 in k18298 in k17861 in k17858 in k17855 in k17852 in k17849 in k17327 in k17324 in k16801 in k16798 in k16795 in k16792 in k16789 in k16786 in k16783 in k16780 in k16777 in k16774 in k16771 in k16768 in k16765 in k16762 in k16759 in k16756 in k16753 in k16750 in k16747 in k16744 in k16741 in k16602 in k16599 in k16596 in k16593 in k16537 in k16534 in k16531 in k16528 in k16525 in k16522 in k16519 in k16516 in k15271 in k15202 in k15009 in k15006 in k14901 in k14850 in k7607 in k7604 in k5838 in k5545 in k5542 in k5538 in k5247 in k5244 in k5241 in k5238 */
static void C_ccall f_20504(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[10],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_20504,2,t0,t1);}
t2=C_mutate(((C_word *)((C_word*)t0)[9])+1,t1);
t3=(*a=C_CLOSURE_TYPE|9,a[1]=(C_word)f_20530,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[9],a[6]=((C_word*)t0)[5],a[7]=((C_word*)t0)[6],a[8]=((C_word*)t0)[7],a[9]=((C_word*)t0)[8],tmp=(C_word)a,a+=10,tmp);
C_trace("ChickenBridge.scm: 365  make-binding");
f_18653(t3,((C_word*)((C_word*)t0)[9])[1],C_SCHEME_FALSE);}

/* k20528 in k20502 in k20452 in k20327 in k20324 in k20320 in k20309 in parse-accumulation in k18307 in k18304 in k18301 in k18298 in k17861 in k17858 in k17855 in k17852 in k17849 in k17327 in k17324 in k16801 in k16798 in k16795 in k16792 in k16789 in k16786 in k16783 in k16780 in k16777 in k16774 in k16771 in k16768 in k16765 in k16762 in k16759 in k16756 in k16753 in k16750 in k16747 in k16744 in k16741 in k16602 in k16599 in k16596 in k16593 in k16537 in k16534 in k16531 in k16528 in k16525 in k16522 in k16519 in k16516 in k15271 in k15202 in k15009 in k15006 in k14901 in k14850 in k7607 in k7604 in k5838 in k5545 in k5542 in k5538 in k5247 in k5244 in k5241 in k5238 */
static void C_ccall f_20530(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[10],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_20530,2,t0,t1);}
t2=(C_word)C_a_i_cons(&a,2,t1,((C_word*)((C_word*)t0)[9])[1]);
t3=C_mutate(((C_word *)((C_word*)t0)[9])+1,t2);
t4=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_20512,a[2]=((C_word*)t0)[4],a[3]=((C_word*)t0)[5],a[4]=((C_word*)t0)[6],a[5]=((C_word*)t0)[7],a[6]=((C_word*)t0)[8],tmp=(C_word)a,a+=7,tmp);
C_trace("ChickenBridge.scm: 365  make-collector");
f_20289(t4,((C_word*)((C_word*)t0)[7])[1],((C_word*)t0)[2],((C_word*)((C_word*)t0)[5])[1],C_SCHEME_FALSE);}

/* k20510 in k20528 in k20502 in k20452 in k20327 in k20324 in k20320 in k20309 in parse-accumulation in k18307 in k18304 in k18301 in k18298 in k17861 in k17858 in k17855 in k17852 in k17849 in k17327 in k17324 in k16801 in k16798 in k16795 in k16792 in k16789 in k16786 in k16783 in k16780 in k16777 in k16774 in k16771 in k16768 in k16765 in k16762 in k16759 in k16756 in k16753 in k16750 in k16747 in k16744 in k16741 in k16602 in k16599 in k16596 in k16593 in k16537 in k16534 in k16531 in k16528 in k16525 in k16522 in k16519 in k16516 in k15271 in k15202 in k15009 in k15006 in k14901 in k14850 in k7607 in k7604 in k5838 in k5545 in k5542 in k5538 in k5247 in k5244 in k5241 in k5238 */
static void C_ccall f_20512(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word ab[12],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_20512,2,t0,t1);}
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=((C_word*)((C_word*)t0)[5])[1];
if(C_truep(t3)){
t4=((C_word*)t0)[4];
f_20460(t4,C_SCHEME_UNDEFINED);}
else{
t4=(C_word)C_a_i_list(&a,3,lf[290],((C_word*)((C_word*)t0)[3])[1],C_fix(0));
t5=(C_word)C_a_i_cons(&a,2,t4,((C_word*)((C_word*)t0)[2])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[2])+1,t5);
t7=((C_word*)t0)[4];
f_20460(t7,((C_word*)((C_word*)t0)[2])[1]);}}

/* k20458 in k20452 in k20327 in k20324 in k20320 in k20309 in parse-accumulation in k18307 in k18304 in k18301 in k18298 in k17861 in k17858 in k17855 in k17852 in k17849 in k17327 in k17324 in k16801 in k16798 in k16795 in k16792 in k16789 in k16786 in k16783 in k16780 in k16777 in k16774 in k16771 in k16768 in k16765 in k16762 in k16759 in k16756 in k16753 in k16750 in k16747 in k16744 in k16741 in k16602 in k16599 in k16596 in k16593 in k16537 in k16534 in k16531 in k16528 in k16525 in k16522 in k16519 in k16516 in k15271 in k15202 in k15009 in k15006 in k14901 in k14850 in k7607 in k7604 in k5838 in k5545 in k5542 in k5538 in k5247 in k5244 in k5241 in k5238 */
static void C_fcall f_20460(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_20460,NULL,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|8,a[1]=(C_word)f_20500,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],a[7]=((C_word*)t0)[7],a[8]=((C_word*)t0)[8],tmp=(C_word)a,a+=9,tmp);
C_trace("ChickenBridge.scm: 365  make-binding");
f_18653(t2,((C_word*)t0)[7],C_SCHEME_FALSE);}

/* k20498 in k20458 in k20452 in k20327 in k20324 in k20320 in k20309 in parse-accumulation in k18307 in k18304 in k18301 in k18298 in k17861 in k17858 in k17855 in k17852 in k17849 in k17327 in k17324 in k16801 in k16798 in k16795 in k16792 in k16789 in k16786 in k16783 in k16780 in k16777 in k16774 in k16771 in k16768 in k16765 in k16762 in k16759 in k16756 in k16753 in k16750 in k16747 in k16744 in k16741 in k16602 in k16599 in k16596 in k16593 in k16537 in k16534 in k16531 in k16528 in k16525 in k16522 in k16519 in k16516 in k15271 in k15202 in k15009 in k15006 in k14901 in k14850 in k7607 in k7604 in k5838 in k5545 in k5542 in k5538 in k5247 in k5244 in k5241 in k5238 */
static void C_ccall f_20500(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word ab[66],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_20500,2,t0,t1);}
t2=(C_word)C_a_i_cons(&a,2,t1,((C_word*)((C_word*)t0)[8])[1]);
t3=C_mutate(((C_word *)((C_word*)t0)[8])+1,t2);
t4=(C_word)C_a_i_list(&a,3,lf[14],((C_word*)t0)[7],((C_word*)((C_word*)t0)[6])[1]);
t5=(C_word)C_a_i_list(&a,2,lf[291],((C_word*)((C_word*)t0)[5])[1]);
t6=(C_word)C_a_i_list(&a,3,((C_word*)t0)[4],((C_word*)t0)[7],((C_word*)((C_word*)t0)[5])[1]);
t7=(C_word)C_a_i_list(&a,3,lf[290],t5,t6);
t8=(C_word)C_a_i_list(&a,3,lf[14],((C_word*)((C_word*)t0)[5])[1],((C_word*)t0)[7]);
t9=(C_word)C_a_i_list(&a,3,lf[22],t7,t8);
t10=(C_word)C_a_i_list(&a,3,lf[316],t4,t9);
t11=(C_word)C_a_i_cons(&a,2,t10,((C_word*)((C_word*)t0)[3])[1]);
t12=C_mutate(((C_word *)((C_word*)t0)[3])+1,t11);
t13=((C_word*)t0)[2];
f_20332(t13,((C_word*)((C_word*)t0)[3])[1]);}

/* k20440 in k20327 in k20324 in k20320 in k20309 in parse-accumulation in k18307 in k18304 in k18301 in k18298 in k17861 in k17858 in k17855 in k17852 in k17849 in k17327 in k17324 in k16801 in k16798 in k16795 in k16792 in k16789 in k16786 in k16783 in k16780 in k16777 in k16774 in k16771 in k16768 in k16765 in k16762 in k16759 in k16756 in k16753 in k16750 in k16747 in k16744 in k16741 in k16602 in k16599 in k16596 in k16593 in k16537 in k16534 in k16531 in k16528 in k16525 in k16522 in k16519 in k16516 in k15271 in k15202 in k15009 in k15006 in k14901 in k14850 in k7607 in k7604 in k5838 in k5545 in k5542 in k5538 in k5247 in k5244 in k5241 in k5238 */
static void C_ccall f_20442(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[3])+1,t1);
t3=((C_word*)t0)[2];
f_20375(t3,t2);}

/* k20411 in k20327 in k20324 in k20320 in k20309 in parse-accumulation in k18307 in k18304 in k18301 in k18298 in k17861 in k17858 in k17855 in k17852 in k17849 in k17327 in k17324 in k16801 in k16798 in k16795 in k16792 in k16789 in k16786 in k16783 in k16780 in k16777 in k16774 in k16771 in k16768 in k16765 in k16762 in k16759 in k16756 in k16753 in k16750 in k16747 in k16744 in k16741 in k16602 in k16599 in k16596 in k16593 in k16537 in k16534 in k16531 in k16528 in k16525 in k16522 in k16519 in k16516 in k15271 in k15202 in k15009 in k15006 in k14901 in k14850 in k7607 in k7604 in k5838 in k5545 in k5542 in k5538 in k5247 in k5244 in k5241 in k5238 */
static void C_ccall f_20413(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[10],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_20413,2,t0,t1);}
t2=C_mutate(((C_word *)((C_word*)t0)[9])+1,t1);
t3=(*a=C_CLOSURE_TYPE|9,a[1]=(C_word)f_20435,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[9],a[6]=((C_word*)t0)[5],a[7]=((C_word*)t0)[6],a[8]=((C_word*)t0)[7],a[9]=((C_word*)t0)[8],tmp=(C_word)a,a+=10,tmp);
C_trace("ChickenBridge.scm: 365  make-binding");
f_18653(t3,((C_word*)((C_word*)t0)[9])[1],C_fix(0));}

/* k20433 in k20411 in k20327 in k20324 in k20320 in k20309 in parse-accumulation in k18307 in k18304 in k18301 in k18298 in k17861 in k17858 in k17855 in k17852 in k17849 in k17327 in k17324 in k16801 in k16798 in k16795 in k16792 in k16789 in k16786 in k16783 in k16780 in k16777 in k16774 in k16771 in k16768 in k16765 in k16762 in k16759 in k16756 in k16753 in k16750 in k16747 in k16744 in k16741 in k16602 in k16599 in k16596 in k16593 in k16537 in k16534 in k16531 in k16528 in k16525 in k16522 in k16519 in k16516 in k15271 in k15202 in k15009 in k15006 in k14901 in k14850 in k7607 in k7604 in k5838 in k5545 in k5542 in k5538 in k5247 in k5244 in k5241 in k5238 */
static void C_ccall f_20435(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[10],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_20435,2,t0,t1);}
t2=(C_word)C_a_i_cons(&a,2,t1,((C_word*)((C_word*)t0)[9])[1]);
t3=C_mutate(((C_word *)((C_word*)t0)[9])+1,t2);
t4=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_20421,a[2]=((C_word*)t0)[4],a[3]=((C_word*)t0)[5],a[4]=((C_word*)t0)[6],a[5]=((C_word*)t0)[7],a[6]=((C_word*)t0)[8],tmp=(C_word)a,a+=7,tmp);
C_trace("ChickenBridge.scm: 365  make-collector");
f_20289(t4,((C_word*)((C_word*)t0)[7])[1],((C_word*)t0)[2],((C_word*)((C_word*)t0)[5])[1],C_SCHEME_FALSE);}

/* k20419 in k20433 in k20411 in k20327 in k20324 in k20320 in k20309 in parse-accumulation in k18307 in k18304 in k18301 in k18298 in k17861 in k17858 in k17855 in k17852 in k17849 in k17327 in k17324 in k16801 in k16798 in k16795 in k16792 in k16789 in k16786 in k16783 in k16780 in k16777 in k16774 in k16771 in k16768 in k16765 in k16762 in k16759 in k16756 in k16753 in k16750 in k16747 in k16744 in k16741 in k16602 in k16599 in k16596 in k16593 in k16537 in k16534 in k16531 in k16528 in k16525 in k16522 in k16519 in k16516 in k15271 in k15202 in k15009 in k15006 in k14901 in k14850 in k7607 in k7604 in k5838 in k5545 in k5542 in k5538 in k5247 in k5244 in k5241 in k5238 */
static void C_ccall f_20421(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[3],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_20421,2,t0,t1);}
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=((C_word*)((C_word*)t0)[5])[1];
if(C_truep(t3)){
t4=((C_word*)t0)[4];
f_20375(t4,C_SCHEME_UNDEFINED);}
else{
t4=(C_word)C_a_i_cons(&a,2,((C_word*)((C_word*)t0)[3])[1],((C_word*)((C_word*)t0)[2])[1]);
t5=C_mutate(((C_word *)((C_word*)t0)[2])+1,t4);
t6=((C_word*)t0)[4];
f_20375(t6,((C_word*)((C_word*)t0)[2])[1]);}}

/* k20373 in k20327 in k20324 in k20320 in k20309 in parse-accumulation in k18307 in k18304 in k18301 in k18298 in k17861 in k17858 in k17855 in k17852 in k17849 in k17327 in k17324 in k16801 in k16798 in k16795 in k16792 in k16789 in k16786 in k16783 in k16780 in k16777 in k16774 in k16771 in k16768 in k16765 in k16762 in k16759 in k16756 in k16753 in k16750 in k16747 in k16744 in k16741 in k16602 in k16599 in k16596 in k16593 in k16537 in k16534 in k16531 in k16528 in k16525 in k16522 in k16519 in k16516 in k15271 in k15202 in k15009 in k15006 in k14901 in k14850 in k7607 in k7604 in k5838 in k5545 in k5542 in k5538 in k5247 in k5244 in k5241 in k5238 */
static void C_fcall f_20375(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word ab[51],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_20375,NULL,2,t0,t1);}
t2=(C_word)C_eqp(((C_word*)t0)[6],lf[489]);
if(C_truep(t2)){
t3=(C_word)C_a_i_list(&a,3,lf[305],((C_word*)((C_word*)t0)[5])[1],((C_word*)((C_word*)t0)[4])[1]);
t4=(C_word)C_a_i_list(&a,3,lf[14],((C_word*)((C_word*)t0)[5])[1],t3);
t5=(C_word)C_a_i_cons(&a,2,t4,((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_20332(t7,((C_word*)((C_word*)t0)[3])[1]);}
else{
t3=(C_word)C_a_i_list(&a,3,lf[305],((C_word*)((C_word*)t0)[5])[1],C_fix(1));
t4=(C_word)C_a_i_list(&a,3,lf[14],((C_word*)((C_word*)t0)[5])[1],t3);
t5=(C_word)C_a_i_list(&a,3,lf[22],((C_word*)((C_word*)t0)[4])[1],t4);
t6=(C_word)C_a_i_cons(&a,2,t5,((C_word*)((C_word*)t0)[3])[1]);
t7=C_mutate(((C_word *)((C_word*)t0)[3])+1,t6);
t8=((C_word*)t0)[2];
f_20332(t8,((C_word*)((C_word*)t0)[3])[1]);}}

/* k20330 in k20327 in k20324 in k20320 in k20309 in parse-accumulation in k18307 in k18304 in k18301 in k18298 in k17861 in k17858 in k17855 in k17852 in k17849 in k17327 in k17324 in k16801 in k16798 in k16795 in k16792 in k16789 in k16786 in k16783 in k16780 in k16777 in k16774 in k16771 in k16768 in k16765 in k16762 in k16759 in k16756 in k16753 in k16750 in k16747 in k16744 in k16741 in k16602 in k16599 in k16596 in k16593 in k16537 in k16534 in k16531 in k16528 in k16525 in k16522 in k16519 in k16516 in k15271 in k15202 in k15009 in k15006 in k14901 in k14850 in k7607 in k7604 in k5838 in k5545 in k5542 in k5538 in k5247 in k5244 in k5241 in k5238 */
static void C_fcall f_20332(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[13],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_20332,NULL,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_20339,a[2]=((C_word*)t0)[9],a[3]=((C_word*)t0)[10],tmp=(C_word)a,a+=4,tmp);
t3=(*a=C_CLOSURE_TYPE|8,a[1]=(C_word)f_20343,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=t2,a[7]=((C_word*)t0)[7],a[8]=((C_word*)t0)[8],tmp=(C_word)a,a+=9,tmp);
C_trace("ChickenBridge.scm: 365  reverse");
t4=*((C_word*)lf[232]+1);
((C_proc3)C_retrieve_proc(t4))(3,t4,t3,((C_word*)((C_word*)t0)[2])[1]);}

/* k20341 in k20330 in k20327 in k20324 in k20320 in k20309 in parse-accumulation in k18307 in k18304 in k18301 in k18298 in k17861 in k17858 in k17855 in k17852 in k17849 in k17327 in k17324 in k16801 in k16798 in k16795 in k16792 in k16789 in k16786 in k16783 in k16780 in k16777 in k16774 in k16771 in k16768 in k16765 in k16762 in k16759 in k16756 in k16753 in k16750 in k16747 in k16744 in k16741 in k16602 in k16599 in k16596 in k16593 in k16537 in k16534 in k16531 in k16528 in k16525 in k16522 in k16519 in k16516 in k15271 in k15202 in k15009 in k15006 in k14901 in k14850 in k7607 in k7604 in k5838 in k5545 in k5542 in k5538 in k5247 in k5244 in k5241 in k5238 */
static void C_ccall f_20343(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_20343,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|8,a[1]=(C_word)f_20347,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=t1,a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],a[7]=((C_word*)t0)[7],a[8]=((C_word*)t0)[8],tmp=(C_word)a,a+=9,tmp);
C_trace("ChickenBridge.scm: 365  reverse");
t3=*((C_word*)lf[232]+1);
((C_proc3)C_retrieve_proc(t3))(3,t3,t2,((C_word*)((C_word*)t0)[2])[1]);}

/* k20345 in k20341 in k20330 in k20327 in k20324 in k20320 in k20309 in parse-accumulation in k18307 in k18304 in k18301 in k18298 in k17861 in k17858 in k17855 in k17852 in k17849 in k17327 in k17324 in k16801 in k16798 in k16795 in k16792 in k16789 in k16786 in k16783 in k16780 in k16777 in k16774 in k16771 in k16768 in k16765 in k16762 in k16759 in k16756 in k16753 in k16750 in k16747 in k16744 in k16741 in k16602 in k16599 in k16596 in k16593 in k16537 in k16534 in k16531 in k16528 in k16525 in k16522 in k16519 in k16516 in k15271 in k15202 in k15009 in k15006 in k14901 in k14850 in k7607 in k7604 in k5838 in k5545 in k5542 in k5538 in k5247 in k5244 in k5241 in k5238 */
static void C_ccall f_20347(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_20347,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|8,a[1]=(C_word)f_20351,a[2]=((C_word*)t0)[3],a[3]=t1,a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],a[7]=((C_word*)t0)[7],a[8]=((C_word*)t0)[8],tmp=(C_word)a,a+=9,tmp);
C_trace("ChickenBridge.scm: 365  reverse");
t3=*((C_word*)lf[232]+1);
((C_proc3)C_retrieve_proc(t3))(3,t3,t2,((C_word*)((C_word*)t0)[2])[1]);}

/* k20349 in k20345 in k20341 in k20330 in k20327 in k20324 in k20320 in k20309 in parse-accumulation in k18307 in k18304 in k18301 in k18298 in k17861 in k17858 in k17855 in k17852 in k17849 in k17327 in k17324 in k16801 in k16798 in k16795 in k16792 in k16789 in k16786 in k16783 in k16780 in k16777 in k16774 in k16771 in k16768 in k16765 in k16762 in k16759 in k16756 in k16753 in k16750 in k16747 in k16744 in k16741 in k16602 in k16599 in k16596 in k16593 in k16537 in k16534 in k16531 in k16528 in k16525 in k16522 in k16519 in k16516 in k15271 in k15202 in k15009 in k15006 in k14901 in k14850 in k7607 in k7604 in k5838 in k5545 in k5542 in k5538 in k5247 in k5244 in k5241 in k5238 */
static void C_ccall f_20351(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_20351,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|8,a[1]=(C_word)f_20355,a[2]=t1,a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],a[7]=((C_word*)t0)[7],a[8]=((C_word*)t0)[8],tmp=(C_word)a,a+=9,tmp);
C_trace("ChickenBridge.scm: 365  reverse");
t3=*((C_word*)lf[232]+1);
((C_proc3)C_retrieve_proc(t3))(3,t3,t2,((C_word*)((C_word*)t0)[2])[1]);}

/* k20353 in k20349 in k20345 in k20341 in k20330 in k20327 in k20324 in k20320 in k20309 in parse-accumulation in k18307 in k18304 in k18301 in k18298 in k17861 in k17858 in k17855 in k17852 in k17849 in k17327 in k17324 in k16801 in k16798 in k16795 in k16792 in k16789 in k16786 in k16783 in k16780 in k16777 in k16774 in k16771 in k16768 in k16765 in k16762 in k16759 in k16756 in k16753 in k16750 in k16747 in k16744 in k16741 in k16602 in k16599 in k16596 in k16593 in k16537 in k16534 in k16531 in k16528 in k16525 in k16522 in k16519 in k16516 in k15271 in k15202 in k15009 in k15006 in k14901 in k14850 in k7607 in k7604 in k5838 in k5545 in k5542 in k5538 in k5247 in k5244 in k5241 in k5238 */
static void C_ccall f_20355(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[45],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_20355,2,t0,t1);}
t2=(C_truep(((C_word*)((C_word*)t0)[8])[1])?(C_word)C_a_i_list(&a,1,((C_word*)((C_word*)t0)[7])[1]):C_SCHEME_END_OF_LIST);
C_trace("ChickenBridge.scm: 365  make-loop-clause");
f_18419(((C_word*)t0)[6],(C_word)C_a_i_list(&a,14,lf[374],((C_word*)t0)[5],lf[375],((C_word*)t0)[4],lf[377],((C_word*)t0)[3],lf[379],((C_word*)t0)[2],lf[382],t1,lf[376],t2,lf[378],C_SCHEME_END_OF_LIST));}

/* k20337 in k20330 in k20327 in k20324 in k20320 in k20309 in parse-accumulation in k18307 in k18304 in k18301 in k18298 in k17861 in k17858 in k17855 in k17852 in k17849 in k17327 in k17324 in k16801 in k16798 in k16795 in k16792 in k16789 in k16786 in k16783 in k16780 in k16777 in k16774 in k16771 in k16768 in k16765 in k16762 in k16759 in k16756 in k16753 in k16750 in k16747 in k16744 in k16741 in k16602 in k16599 in k16596 in k16593 in k16537 in k16534 in k16531 in k16528 in k16525 in k16522 in k16519 in k16516 in k15271 in k15202 in k15009 in k15006 in k14901 in k14850 in k7607 in k7604 in k5838 in k5545 in k5542 in k5538 in k5247 in k5244 in k5241 in k5238 */
static void C_ccall f_20339(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 365  values");
C_values(4,0,((C_word*)t0)[3],t1,((C_word*)((C_word*)t0)[2])[1]);}

/* collector-acc in parse-accumulation in k18307 in k18304 in k18301 in k18298 in k17861 in k17858 in k17855 in k17852 in k17849 in k17327 in k17324 in k16801 in k16798 in k16795 in k16792 in k16789 in k16786 in k16783 in k16780 in k16777 in k16774 in k16771 in k16768 in k16765 in k16762 in k16759 in k16756 in k16753 in k16750 in k16747 in k16744 in k16741 in k16602 in k16599 in k16596 in k16593 in k16537 in k16534 in k16531 in k16528 in k16525 in k16522 in k16519 in k16516 in k15271 in k15202 in k15009 in k15006 in k14901 in k14850 in k7607 in k7604 in k5838 in k5545 in k5542 in k5538 in k5247 in k5244 in k5241 in k5238 */
static void C_fcall f_20299(C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word *a;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_20299,NULL,2,t1,t2);}
t3=t1;
((C_proc2)(void*)(*((C_word*)t3+1)))(2,t3,(C_word)C_i_caddr(t2));}

/* collector-type in parse-accumulation in k18307 in k18304 in k18301 in k18298 in k17861 in k17858 in k17855 in k17852 in k17849 in k17327 in k17324 in k16801 in k16798 in k16795 in k16792 in k16789 in k16786 in k16783 in k16780 in k16777 in k16774 in k16771 in k16768 in k16765 in k16762 in k16759 in k16756 in k16753 in k16750 in k16747 in k16744 in k16741 in k16602 in k16599 in k16596 in k16593 in k16537 in k16534 in k16531 in k16528 in k16525 in k16522 in k16519 in k16516 in k15271 in k15202 in k15009 in k15006 in k14901 in k14850 in k7607 in k7604 in k5838 in k5545 in k5542 in k5538 in k5247 in k5244 in k5241 in k5238 */
static void C_fcall f_20294(C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word *a;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_20294,NULL,2,t1,t2);}
t3=t1;
((C_proc2)(void*)(*((C_word*)t3+1)))(2,t3,(C_word)C_i_cadr(t2));}

/* make-collector in parse-accumulation in k18307 in k18304 in k18301 in k18298 in k17861 in k17858 in k17855 in k17852 in k17849 in k17327 in k17324 in k16801 in k16798 in k16795 in k16792 in k16789 in k16786 in k16783 in k16780 in k16777 in k16774 in k16771 in k16768 in k16765 in k16762 in k16759 in k16756 in k16753 in k16750 in k16747 in k16744 in k16741 in k16602 in k16599 in k16596 in k16593 in k16537 in k16534 in k16531 in k16528 in k16525 in k16522 in k16519 in k16516 in k15271 in k15202 in k15009 in k15006 in k14901 in k14850 in k7607 in k7604 in k5838 in k5545 in k5542 in k5538 in k5247 in k5244 in k5241 in k5238 */
static void C_fcall f_20289(C_word t1,C_word t2,C_word t3,C_word t4,C_word t5){
C_word tmp;
C_word t6;
C_word ab[12],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_20289,NULL,5,t1,t2,t3,t4,t5);}
t6=t1;
((C_proc2)(void*)(*((C_word*)t6+1)))(2,t6,(C_word)C_a_i_list(&a,4,t2,t3,t4,t5));}

/* parse-initially in k18307 in k18304 in k18301 in k18298 in k17861 in k17858 in k17855 in k17852 in k17849 in k17327 in k17324 in k16801 in k16798 in k16795 in k16792 in k16789 in k16786 in k16783 in k16780 in k16777 in k16774 in k16771 in k16768 in k16765 in k16762 in k16759 in k16756 in k16753 in k16750 in k16747 in k16744 in k16741 in k16602 in k16599 in k16596 in k16593 in k16537 in k16534 in k16531 in k16528 in k16525 in k16522 in k16519 in k16516 in k15271 in k15202 in k15009 in k15006 in k14901 in k14850 in k7607 in k7604 in k5838 in k5545 in k5542 in k5538 in k5247 in k5244 in k5241 in k5238 */
static void C_ccall f_20121(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4){
C_word tmp;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word ab[19],*a=ab;
if(c!=5) C_bad_argc_2(c,5,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr5,(void*)f_20121,5,t0,t1,t2,t3,t4);}
t5=(*a=C_VECTOR_TYPE|1,a[1]=t2,tmp=(C_word)a,a+=2,tmp);
t6=(C_word)C_i_car(((C_word*)t5)[1]);
t7=(C_word)C_i_cdr(((C_word*)t5)[1]);
t8=C_set_block_item(t5,0,t7);
t9=C_SCHEME_FALSE;
t10=(*a=C_VECTOR_TYPE|1,a[1]=t9,tmp=(C_word)a,a+=2,tmp);
t11=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_20132,a[2]=t6,a[3]=t1,a[4]=t10,a[5]=t5,tmp=(C_word)a,a+=6,tmp);
if(C_truep((C_word)C_i_nullp(((C_word*)t5)[1]))){
C_trace("ChickenBridge.scm: 365  loop-error");
f_18659(t11,t4,((C_word*)t5)[1],(C_word)C_a_i_list(&a,3,lf[486],t6,lf[487]));}
else{
t12=t11;
f_20132(2,t12,C_SCHEME_UNDEFINED);}}

/* k20130 in parse-initially in k18307 in k18304 in k18301 in k18298 in k17861 in k17858 in k17855 in k17852 in k17849 in k17327 in k17324 in k16801 in k16798 in k16795 in k16792 in k16789 in k16786 in k16783 in k16780 in k16777 in k16774 in k16771 in k16768 in k16765 in k16762 in k16759 in k16756 in k16753 in k16750 in k16747 in k16744 in k16741 in k16602 in k16599 in k16596 in k16593 in k16537 in k16534 in k16531 in k16528 in k16525 in k16522 in k16519 in k16516 in k15271 in k15202 in k15009 in k15006 in k14901 in k14850 in k7607 in k7604 in k5838 in k5545 in k5542 in k5538 in k5247 in k5244 in k5241 in k5238 */
static void C_ccall f_20132(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word ab[19],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_20132,2,t0,t1);}
t2=(C_word)C_i_car(((C_word*)((C_word*)t0)[5])[1]);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[5])[1]);
t4=C_mutate(((C_word *)((C_word*)t0)[5])+1,t3);
t5=C_mutate(((C_word *)((C_word*)t0)[4])+1,t2);
t6=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_20147,a[2]=((C_word*)t0)[5],a[3]=((C_word*)t0)[3],tmp=(C_word)a,a+=4,tmp);
t7=(C_word)C_a_i_list(&a,1,((C_word*)((C_word*)t0)[4])[1]);
C_trace("ChickenBridge.scm: 365  make-loop-clause");
f_18419(t6,(C_word)C_a_i_list(&a,4,lf[374],((C_word*)t0)[2],lf[377],t7));}

/* k20145 in k20130 in parse-initially in k18307 in k18304 in k18301 in k18298 in k17861 in k17858 in k17855 in k17852 in k17849 in k17327 in k17324 in k16801 in k16798 in k16795 in k16792 in k16789 in k16786 in k16783 in k16780 in k16777 in k16774 in k16771 in k16768 in k16765 in k16762 in k16759 in k16756 in k16753 in k16750 in k16747 in k16744 in k16741 in k16602 in k16599 in k16596 in k16593 in k16537 in k16534 in k16531 in k16528 in k16525 in k16522 in k16519 in k16516 in k15271 in k15202 in k15009 in k15006 in k14901 in k14850 in k7607 in k7604 in k5838 in k5545 in k5542 in k5538 in k5247 in k5244 in k5241 in k5238 */
static void C_ccall f_20147(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 365  values");
C_values(4,0,((C_word*)t0)[3],t1,((C_word*)((C_word*)t0)[2])[1]);}

/* parse-finally in k18307 in k18304 in k18301 in k18298 in k17861 in k17858 in k17855 in k17852 in k17849 in k17327 in k17324 in k16801 in k16798 in k16795 in k16792 in k16789 in k16786 in k16783 in k16780 in k16777 in k16774 in k16771 in k16768 in k16765 in k16762 in k16759 in k16756 in k16753 in k16750 in k16747 in k16744 in k16741 in k16602 in k16599 in k16596 in k16593 in k16537 in k16534 in k16531 in k16528 in k16525 in k16522 in k16519 in k16516 in k15271 in k15202 in k15009 in k15006 in k14901 in k14850 in k7607 in k7604 in k5838 in k5545 in k5542 in k5538 in k5247 in k5244 in k5241 in k5238 */
static void C_ccall f_20083(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4){
C_word tmp;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word ab[19],*a=ab;
if(c!=5) C_bad_argc_2(c,5,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr5,(void*)f_20083,5,t0,t1,t2,t3,t4);}
t5=(*a=C_VECTOR_TYPE|1,a[1]=t2,tmp=(C_word)a,a+=2,tmp);
t6=(C_word)C_i_car(((C_word*)t5)[1]);
t7=(C_word)C_i_cdr(((C_word*)t5)[1]);
t8=C_set_block_item(t5,0,t7);
t9=C_SCHEME_FALSE;
t10=(*a=C_VECTOR_TYPE|1,a[1]=t9,tmp=(C_word)a,a+=2,tmp);
t11=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_20094,a[2]=t6,a[3]=t1,a[4]=t10,a[5]=t5,tmp=(C_word)a,a+=6,tmp);
if(C_truep((C_word)C_i_nullp(((C_word*)t5)[1]))){
C_trace("ChickenBridge.scm: 365  loop-error");
f_18659(t11,t4,((C_word*)t5)[1],(C_word)C_a_i_list(&a,3,lf[483],t6,lf[484]));}
else{
t12=t11;
f_20094(2,t12,C_SCHEME_UNDEFINED);}}

/* k20092 in parse-finally in k18307 in k18304 in k18301 in k18298 in k17861 in k17858 in k17855 in k17852 in k17849 in k17327 in k17324 in k16801 in k16798 in k16795 in k16792 in k16789 in k16786 in k16783 in k16780 in k16777 in k16774 in k16771 in k16768 in k16765 in k16762 in k16759 in k16756 in k16753 in k16750 in k16747 in k16744 in k16741 in k16602 in k16599 in k16596 in k16593 in k16537 in k16534 in k16531 in k16528 in k16525 in k16522 in k16519 in k16516 in k15271 in k15202 in k15009 in k15006 in k14901 in k14850 in k7607 in k7604 in k5838 in k5545 in k5542 in k5538 in k5247 in k5244 in k5241 in k5238 */
static void C_ccall f_20094(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word ab[19],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_20094,2,t0,t1);}
t2=(C_word)C_i_car(((C_word*)((C_word*)t0)[5])[1]);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[5])[1]);
t4=C_mutate(((C_word *)((C_word*)t0)[5])+1,t3);
t5=C_mutate(((C_word *)((C_word*)t0)[4])+1,t2);
t6=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_20109,a[2]=((C_word*)t0)[5],a[3]=((C_word*)t0)[3],tmp=(C_word)a,a+=4,tmp);
t7=(C_word)C_a_i_list(&a,1,((C_word*)((C_word*)t0)[4])[1]);
C_trace("ChickenBridge.scm: 365  make-loop-clause");
f_18419(t6,(C_word)C_a_i_list(&a,4,lf[374],((C_word*)t0)[2],lf[381],t7));}

/* k20107 in k20092 in parse-finally in k18307 in k18304 in k18301 in k18298 in k17861 in k17858 in k17855 in k17852 in k17849 in k17327 in k17324 in k16801 in k16798 in k16795 in k16792 in k16789 in k16786 in k16783 in k16780 in k16777 in k16774 in k16771 in k16768 in k16765 in k16762 in k16759 in k16756 in k16753 in k16750 in k16747 in k16744 in k16741 in k16602 in k16599 in k16596 in k16593 in k16537 in k16534 in k16531 in k16528 in k16525 in k16522 in k16519 in k16516 in k15271 in k15202 in k15009 in k15006 in k14901 in k14850 in k7607 in k7604 in k5838 in k5545 in k5542 in k5538 in k5247 in k5244 in k5241 in k5238 */
static void C_ccall f_20109(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 365  values");
C_values(4,0,((C_word*)t0)[3],t1,((C_word*)((C_word*)t0)[2])[1]);}

/* parse-do in k18307 in k18304 in k18301 in k18298 in k17861 in k17858 in k17855 in k17852 in k17849 in k17327 in k17324 in k16801 in k16798 in k16795 in k16792 in k16789 in k16786 in k16783 in k16780 in k16777 in k16774 in k16771 in k16768 in k16765 in k16762 in k16759 in k16756 in k16753 in k16750 in k16747 in k16744 in k16741 in k16602 in k16599 in k16596 in k16593 in k16537 in k16534 in k16531 in k16528 in k16525 in k16522 in k16519 in k16516 in k15271 in k15202 in k15009 in k15006 in k14901 in k14850 in k7607 in k7604 in k5838 in k5545 in k5542 in k5538 in k5247 in k5244 in k5241 in k5238 */
static void C_ccall f_20016(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4){
C_word tmp;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word t14;
C_word t15;
C_word t16;
C_word ab[21],*a=ab;
if(c!=5) C_bad_argc_2(c,5,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr5,(void*)f_20016,5,t0,t1,t2,t3,t4);}
t5=(*a=C_VECTOR_TYPE|1,a[1]=t2,tmp=(C_word)a,a+=2,tmp);
t6=((C_word*)t5)[1];
t7=(C_word)C_i_car(((C_word*)t5)[1]);
t8=(C_word)C_i_cdr(((C_word*)t5)[1]);
t9=C_set_block_item(t5,0,t8);
t10=C_SCHEME_END_OF_LIST;
t11=(*a=C_VECTOR_TYPE|1,a[1]=t10,tmp=(C_word)a,a+=2,tmp);
t12=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_20027,a[2]=t11,a[3]=t7,a[4]=t5,a[5]=t1,tmp=(C_word)a,a+=6,tmp);
t13=C_SCHEME_UNDEFINED;
t14=(*a=C_VECTOR_TYPE|1,a[1]=t13,tmp=(C_word)a,a+=2,tmp);
t15=C_set_block_item(t14,0,(*a=C_CLOSURE_TYPE|8,a[1]=(C_word)f_20036,a[2]=t14,a[3]=t7,a[4]=t6,a[5]=t4,a[6]=t11,a[7]=t5,a[8]=((C_word)li293),tmp=(C_word)a,a+=9,tmp));
t16=((C_word*)t14)[1];
f_20036(t16,t12);}

/* do3442 in parse-do in k18307 in k18304 in k18301 in k18298 in k17861 in k17858 in k17855 in k17852 in k17849 in k17327 in k17324 in k16801 in k16798 in k16795 in k16792 in k16789 in k16786 in k16783 in k16780 in k16777 in k16774 in k16771 in k16768 in k16765 in k16762 in k16759 in k16756 in k16753 in k16750 in k16747 in k16744 in k16741 in k16602 in k16599 in k16596 in k16593 in k16537 in k16534 in k16531 in k16528 in k16525 in k16522 in k16519 in k16516 in k15271 in k15202 in k15009 in k15006 in k14901 in k14850 in k7607 in k7604 in k5838 in k5545 in k5542 in k5538 in k5247 in k5244 in k5241 in k5238 */
static void C_fcall f_20036(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_20036,NULL,2,t0,t1);}
t2=(C_word)C_i_nullp(((C_word*)((C_word*)t0)[7])[1]);
t3=(*a=C_CLOSURE_TYPE|8,a[1]=(C_word)f_20046,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[7],a[4]=((C_word*)t0)[3],a[5]=((C_word*)t0)[4],a[6]=((C_word*)t0)[5],a[7]=t1,a[8]=((C_word*)t0)[6],tmp=(C_word)a,a+=9,tmp);
if(C_truep(t2)){
t4=t3;
f_20046(2,t4,t2);}
else{
t4=(C_word)C_i_car(((C_word*)((C_word*)t0)[7])[1]);
C_trace("ChickenBridge.scm: 365  loop-op?");
f_18641(t3,t4,((C_word*)t0)[5]);}}

/* k20044 in do3442 in parse-do in k18307 in k18304 in k18301 in k18298 in k17861 in k17858 in k17855 in k17852 in k17849 in k17327 in k17324 in k16801 in k16798 in k16795 in k16792 in k16789 in k16786 in k16783 in k16780 in k16777 in k16774 in k16771 in k16768 in k16765 in k16762 in k16759 in k16756 in k16753 in k16750 in k16747 in k16744 in k16741 in k16602 in k16599 in k16596 in k16593 in k16537 in k16534 in k16531 in k16528 in k16525 in k16522 in k16519 in k16516 in k15271 in k15202 in k15009 in k15006 in k14901 in k14850 in k7607 in k7604 in k5838 in k5545 in k5542 in k5538 in k5247 in k5244 in k5241 in k5238 */
static void C_ccall f_20046(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word ab[16],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_20046,2,t0,t1);}
if(C_truep(t1)){
if(C_truep((C_word)C_i_nullp(((C_word*)((C_word*)t0)[8])[1]))){
C_trace("ChickenBridge.scm: 365  loop-error");
f_18659(((C_word*)t0)[7],((C_word*)t0)[6],((C_word*)t0)[5],(C_word)C_a_i_list(&a,3,lf[480],((C_word*)t0)[4],lf[481]));}
else{
t2=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_20059,a[2]=((C_word*)t0)[7],a[3]=((C_word*)t0)[8],tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 365  reverse");
t3=*((C_word*)lf[232]+1);
((C_proc3)C_retrieve_proc(t3))(3,t3,t2,((C_word*)((C_word*)t0)[8])[1]);}}
else{
t2=(C_word)C_i_car(((C_word*)((C_word*)t0)[3])[1]);
t3=(C_word)C_a_i_cons(&a,2,t2,((C_word*)((C_word*)t0)[8])[1]);
t4=C_mutate(((C_word *)((C_word*)t0)[8])+1,t3);
t5=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)((C_word*)t0)[2])[1];
f_20036(t7,((C_word*)t0)[7]);}}

/* k20057 in k20044 in do3442 in parse-do in k18307 in k18304 in k18301 in k18298 in k17861 in k17858 in k17855 in k17852 in k17849 in k17327 in k17324 in k16801 in k16798 in k16795 in k16792 in k16789 in k16786 in k16783 in k16780 in k16777 in k16774 in k16771 in k16768 in k16765 in k16762 in k16759 in k16756 in k16753 in k16750 in k16747 in k16744 in k16741 in k16602 in k16599 in k16596 in k16593 in k16537 in k16534 in k16531 in k16528 in k16525 in k16522 in k16519 in k16516 in k15271 in k15202 in k15009 in k15006 in k14901 in k14850 in k7607 in k7604 in k5838 in k5545 in k5542 in k5538 in k5247 in k5244 in k5241 in k5238 */
static void C_ccall f_20059(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[3])+1,t1);
t3=((C_word*)t0)[2];
((C_proc2)(void*)(*((C_word*)t3+1)))(2,t3,t2);}

/* k20025 in parse-do in k18307 in k18304 in k18301 in k18298 in k17861 in k17858 in k17855 in k17852 in k17849 in k17327 in k17324 in k16801 in k16798 in k16795 in k16792 in k16789 in k16786 in k16783 in k16780 in k16777 in k16774 in k16771 in k16768 in k16765 in k16762 in k16759 in k16756 in k16753 in k16750 in k16747 in k16744 in k16741 in k16602 in k16599 in k16596 in k16593 in k16537 in k16534 in k16531 in k16528 in k16525 in k16522 in k16519 in k16516 in k15271 in k15202 in k15009 in k15006 in k14901 in k14850 in k7607 in k7604 in k5838 in k5545 in k5542 in k5538 in k5247 in k5244 in k5241 in k5238 */
static void C_ccall f_20027(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[16],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_20027,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_20034,a[2]=((C_word*)t0)[4],a[3]=((C_word*)t0)[5],tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 365  make-loop-clause");
f_18419(t2,(C_word)C_a_i_list(&a,4,lf[374],((C_word*)t0)[3],lf[379],((C_word*)((C_word*)t0)[2])[1]));}

/* k20032 in k20025 in parse-do in k18307 in k18304 in k18301 in k18298 in k17861 in k17858 in k17855 in k17852 in k17849 in k17327 in k17324 in k16801 in k16798 in k16795 in k16792 in k16789 in k16786 in k16783 in k16780 in k16777 in k16774 in k16771 in k16768 in k16765 in k16762 in k16759 in k16756 in k16753 in k16750 in k16747 in k16744 in k16741 in k16602 in k16599 in k16596 in k16593 in k16537 in k16534 in k16531 in k16528 in k16525 in k16522 in k16519 in k16516 in k15271 in k15202 in k15009 in k15006 in k14901 in k14850 in k7607 in k7604 in k5838 in k5545 in k5542 in k5538 in k5247 in k5244 in k5241 in k5238 */
static void C_ccall f_20034(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 365  values");
C_values(4,0,((C_word*)t0)[3],t1,((C_word*)((C_word*)t0)[2])[1]);}

/* parse-with in k18307 in k18304 in k18301 in k18298 in k17861 in k17858 in k17855 in k17852 in k17849 in k17327 in k17324 in k16801 in k16798 in k16795 in k16792 in k16789 in k16786 in k16783 in k16780 in k16777 in k16774 in k16771 in k16768 in k16765 in k16762 in k16759 in k16756 in k16753 in k16750 in k16747 in k16744 in k16741 in k16602 in k16599 in k16596 in k16593 in k16537 in k16534 in k16531 in k16528 in k16525 in k16522 in k16519 in k16516 in k15271 in k15202 in k15009 in k15006 in k14901 in k14850 in k7607 in k7604 in k5838 in k5545 in k5542 in k5538 in k5247 in k5244 in k5241 in k5238 */
static void C_ccall f_19823(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4){
C_word tmp;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word t14;
C_word t15;
C_word t16;
C_word t17;
C_word t18;
C_word t19;
C_word t20;
C_word t21;
C_word t22;
C_word t23;
C_word ab[37],*a=ab;
if(c!=5) C_bad_argc_2(c,5,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr5,(void*)f_19823,5,t0,t1,t2,t3,t4);}
t5=t2;
t6=(C_word)C_i_cdr(t2);
t7=t6;
t8=(*a=C_VECTOR_TYPE|1,a[1]=t7,tmp=(C_word)a,a+=2,tmp);
t9=C_SCHEME_FALSE;
t10=(*a=C_VECTOR_TYPE|1,a[1]=t9,tmp=(C_word)a,a+=2,tmp);
t11=C_SCHEME_FALSE;
t12=(*a=C_VECTOR_TYPE|1,a[1]=t11,tmp=(C_word)a,a+=2,tmp);
t13=C_SCHEME_FALSE;
t14=(*a=C_VECTOR_TYPE|1,a[1]=t13,tmp=(C_word)a,a+=2,tmp);
t15=C_SCHEME_END_OF_LIST;
t16=(*a=C_VECTOR_TYPE|1,a[1]=t15,tmp=(C_word)a,a+=2,tmp);
t17=C_SCHEME_END_OF_LIST;
t18=(*a=C_VECTOR_TYPE|1,a[1]=t17,tmp=(C_word)a,a+=2,tmp);
t19=(*a=C_CLOSURE_TYPE|10,a[1]=(C_word)f_19830,a[2]=t12,a[3]=t10,a[4]=t5,a[5]=t4,a[6]=t14,a[7]=t16,a[8]=t18,a[9]=t8,a[10]=t1,tmp=(C_word)a,a+=11,tmp);
t20=C_SCHEME_UNDEFINED;
t21=(*a=C_VECTOR_TYPE|1,a[1]=t20,tmp=(C_word)a,a+=2,tmp);
t22=C_set_block_item(t21,0,(*a=C_CLOSURE_TYPE|11,a[1]=(C_word)f_19883,a[2]=t18,a[3]=t16,a[4]=t5,a[5]=t4,a[6]=t14,a[7]=t12,a[8]=t10,a[9]=t21,a[10]=t8,a[11]=((C_word)li291),tmp=(C_word)a,a+=12,tmp));
t23=((C_word*)t21)[1];
f_19883(t23,t19,C_SCHEME_TRUE,C_SCHEME_FALSE);}

/* do3398 in parse-with in k18307 in k18304 in k18301 in k18298 in k17861 in k17858 in k17855 in k17852 in k17849 in k17327 in k17324 in k16801 in k16798 in k16795 in k16792 in k16789 in k16786 in k16783 in k16780 in k16777 in k16774 in k16771 in k16768 in k16765 in k16762 in k16759 in k16756 in k16753 in k16750 in k16747 in k16744 in k16741 in k16602 in k16599 in k16596 in k16593 in k16537 in k16534 in k16531 in k16528 in k16525 in k16522 in k16519 in k16516 in k15271 in k15202 in k15009 in k15006 in k14901 in k14850 in k7607 in k7604 in k5838 in k5545 in k5542 in k5538 in k5247 in k5244 in k5241 in k5238 */
static void C_fcall f_19883(C_word t0,C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word ab[18],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_19883,NULL,4,t0,t1,t2,t3);}
t4=(*a=C_VECTOR_TYPE|1,a[1]=t2,tmp=(C_word)a,a+=2,tmp);
t5=(*a=C_VECTOR_TYPE|1,a[1]=t3,tmp=(C_word)a,a+=2,tmp);
t6=(C_word)C_i_nullp(((C_word*)((C_word*)t0)[10])[1]);
t7=(*a=C_CLOSURE_TYPE|13,a[1]=(C_word)f_19893,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],a[7]=((C_word*)t0)[7],a[8]=((C_word*)t0)[8],a[9]=t4,a[10]=((C_word*)t0)[9],a[11]=t5,a[12]=((C_word*)t0)[10],a[13]=t1,tmp=(C_word)a,a+=14,tmp);
if(C_truep(t6)){
t8=t7;
f_19893(2,t8,t6);}
else{
t8=(C_word)C_i_car(((C_word*)((C_word*)t0)[10])[1]);
C_trace("ChickenBridge.scm: 365  loop-op?");
f_18641(t7,t8,((C_word*)t0)[5]);}}

/* k19891 in do3398 in parse-with in k18307 in k18304 in k18301 in k18298 in k17861 in k17858 in k17855 in k17852 in k17849 in k17327 in k17324 in k16801 in k16798 in k16795 in k16792 in k16789 in k16786 in k16783 in k16780 in k16777 in k16774 in k16771 in k16768 in k16765 in k16762 in k16759 in k16756 in k16753 in k16750 in k16747 in k16744 in k16741 in k16602 in k16599 in k16596 in k16593 in k16537 in k16534 in k16531 in k16528 in k16525 in k16522 in k16519 in k16516 in k15271 in k15202 in k15009 in k15006 in k14901 in k14850 in k7607 in k7604 in k5838 in k5545 in k5542 in k5538 in k5247 in k5244 in k5241 in k5238 */
static void C_ccall f_19893(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word ab[19],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_19893,2,t0,t1);}
if(C_truep(t1)){
t2=((C_word*)t0)[13];
((C_proc2)(void*)(*((C_word*)t2+1)))(2,t2,C_SCHEME_UNDEFINED);}
else{
t2=(C_word)C_i_car(((C_word*)((C_word*)t0)[12])[1]);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[12])[1]);
t4=C_mutate(((C_word *)((C_word*)t0)[12])+1,t3);
t5=C_mutate(((C_word *)((C_word*)t0)[11])+1,t2);
t6=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_19904,a[2]=((C_word*)t0)[11],a[3]=((C_word*)t0)[9],a[4]=((C_word*)t0)[13],a[5]=((C_word*)t0)[10],tmp=(C_word)a,a+=6,tmp);
t7=(*a=C_CLOSURE_TYPE|12,a[1]=(C_word)f_20007,a[2]=((C_word*)t0)[12],a[3]=((C_word*)t0)[2],a[4]=((C_word*)t0)[3],a[5]=((C_word*)t0)[4],a[6]=((C_word*)t0)[5],a[7]=t6,a[8]=((C_word*)t0)[6],a[9]=((C_word*)t0)[7],a[10]=((C_word*)t0)[11],a[11]=((C_word*)t0)[8],a[12]=((C_word*)t0)[9],tmp=(C_word)a,a+=13,tmp);
C_trace("ChickenBridge.scm: 365  loop-variable?");
f_18647(t7,((C_word*)((C_word*)t0)[11])[1]);}}

/* k20005 in k19891 in do3398 in parse-with in k18307 in k18304 in k18301 in k18298 in k17861 in k17858 in k17855 in k17852 in k17849 in k17327 in k17324 in k16801 in k16798 in k16795 in k16792 in k16789 in k16786 in k16783 in k16780 in k16777 in k16774 in k16771 in k16768 in k16765 in k16762 in k16759 in k16756 in k16753 in k16750 in k16747 in k16744 in k16741 in k16602 in k16599 in k16596 in k16593 in k16537 in k16534 in k16531 in k16528 in k16525 in k16522 in k16519 in k16516 in k15271 in k15202 in k15009 in k15006 in k14901 in k14850 in k7607 in k7604 in k5838 in k5545 in k5542 in k5538 in k5247 in k5244 in k5241 in k5238 */
static void C_ccall f_20007(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word ab[64],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_20007,2,t0,t1);}
t2=(C_truep(t1)?((C_word*)((C_word*)t0)[12])[1]:C_SCHEME_FALSE);
if(C_truep(t2)){
t3=(*a=C_CLOSURE_TYPE|9,a[1]=(C_word)f_19913,a[2]=((C_word*)t0)[5],a[3]=((C_word*)t0)[6],a[4]=((C_word*)t0)[7],a[5]=((C_word*)t0)[12],a[6]=((C_word*)t0)[8],a[7]=((C_word*)t0)[9],a[8]=((C_word*)t0)[10],a[9]=((C_word*)t0)[11],tmp=(C_word)a,a+=10,tmp);
if(C_truep(((C_word*)((C_word*)t0)[11])[1])){
C_trace("ChickenBridge.scm: 365  loop-error");
f_18659(t3,((C_word*)t0)[6],((C_word*)t0)[5],(C_word)C_a_i_list(&a,3,lf[470],((C_word*)((C_word*)t0)[10])[1],lf[471]));}
else{
t4=t3;
f_19913(2,t4,C_SCHEME_UNDEFINED);}}
else{
t3=(C_word)C_eqp(((C_word*)((C_word*)t0)[10])[1],lf[289]);
if(C_truep(t3)){
t4=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_19935,a[2]=((C_word*)t0)[7],a[3]=((C_word*)t0)[12],a[4]=((C_word*)t0)[8],a[5]=((C_word*)t0)[9],a[6]=((C_word*)t0)[11],tmp=(C_word)a,a+=7,tmp);
if(C_truep(((C_word*)((C_word*)t0)[8])[1])){
C_trace("ChickenBridge.scm: 365  loop-error");
f_18659(t4,((C_word*)t0)[6],((C_word*)t0)[5],(C_word)C_a_i_list(&a,1,lf[472]));}
else{
if(C_truep(((C_word*)((C_word*)t0)[11])[1])){
if(C_truep(((C_word*)((C_word*)t0)[9])[1])){
t5=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_19964,a[2]=t4,a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[9],a[5]=((C_word*)t0)[11],a[6]=((C_word*)t0)[4],tmp=(C_word)a,a+=7,tmp);
C_trace("ChickenBridge.scm: 365  make-binding");
f_18653(t5,((C_word*)((C_word*)t0)[11])[1],C_SCHEME_FALSE);}
else{
t5=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_19972,a[2]=t4,a[3]=((C_word*)t0)[4],tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 365  make-binding");
f_18653(t5,((C_word*)((C_word*)t0)[11])[1],C_SCHEME_FALSE);}}
else{
C_trace("ChickenBridge.scm: 365  loop-error");
f_18659(t4,((C_word*)t0)[6],((C_word*)t0)[5],(C_word)C_a_i_list(&a,1,lf[473]));}}}
else{
t4=(C_word)C_eqp(((C_word*)((C_word*)t0)[10])[1],lf[458]);
if(C_truep(t4)){
if(C_truep(((C_word*)((C_word*)t0)[9])[1])){
C_trace("ChickenBridge.scm: 365  loop-error");
f_18659(((C_word*)t0)[7],((C_word*)t0)[6],((C_word*)t0)[5],(C_word)C_a_i_list(&a,1,lf[474]));}
else{
t5=(C_word)C_i_car(((C_word*)((C_word*)t0)[2])[1]);
t6=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[2])[1]);
t7=C_mutate(((C_word *)((C_word*)t0)[2])+1,t6);
t8=C_mutate(((C_word *)((C_word*)t0)[9])+1,t5);
t9=((C_word*)t0)[7];
f_19904(2,t9,t8);}}
else{
if(C_truep(((C_word*)((C_word*)t0)[12])[1])){
C_trace("ChickenBridge.scm: 365  loop-error");
f_18659(((C_word*)t0)[7],((C_word*)t0)[6],((C_word*)t0)[5],(C_word)C_a_i_list(&a,3,lf[475],((C_word*)((C_word*)t0)[10])[1],lf[476]));}
else{
C_trace("ChickenBridge.scm: 365  loop-error");
f_18659(((C_word*)t0)[7],((C_word*)t0)[6],((C_word*)t0)[5],(C_word)C_a_i_list(&a,3,lf[477],((C_word*)((C_word*)t0)[10])[1],lf[478]));}}}}}

/* k19970 in k20005 in k19891 in do3398 in parse-with in k18307 in k18304 in k18301 in k18298 in k17861 in k17858 in k17855 in k17852 in k17849 in k17327 in k17324 in k16801 in k16798 in k16795 in k16792 in k16789 in k16786 in k16783 in k16780 in k16777 in k16774 in k16771 in k16768 in k16765 in k16762 in k16759 in k16756 in k16753 in k16750 in k16747 in k16744 in k16741 in k16602 in k16599 in k16596 in k16593 in k16537 in k16534 in k16531 in k16528 in k16525 in k16522 in k16519 in k16516 in k15271 in k15202 in k15009 in k15006 in k14901 in k14850 in k7607 in k7604 in k5838 in k5545 in k5542 in k5538 in k5247 in k5244 in k5241 in k5238 */
static void C_ccall f_19972(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[3],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_19972,2,t0,t1);}
t2=(C_word)C_a_i_cons(&a,2,t1,((C_word*)((C_word*)t0)[3])[1]);
t3=C_mutate(((C_word *)((C_word*)t0)[3])+1,t2);
t4=((C_word*)t0)[2];
f_19935(2,t4,((C_word*)((C_word*)t0)[3])[1]);}

/* k19962 in k20005 in k19891 in do3398 in parse-with in k18307 in k18304 in k18301 in k18298 in k17861 in k17858 in k17855 in k17852 in k17849 in k17327 in k17324 in k16801 in k16798 in k16795 in k16792 in k16789 in k16786 in k16783 in k16780 in k16777 in k16774 in k16771 in k16768 in k16765 in k16762 in k16759 in k16756 in k16753 in k16750 in k16747 in k16744 in k16741 in k16602 in k16599 in k16596 in k16593 in k16537 in k16534 in k16531 in k16528 in k16525 in k16522 in k16519 in k16516 in k15271 in k15202 in k15009 in k15006 in k14901 in k14850 in k7607 in k7604 in k5838 in k5545 in k5542 in k5538 in k5247 in k5244 in k5241 in k5238 */
static void C_ccall f_19964(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word ab[15],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_19964,2,t0,t1);}
t2=(C_word)C_a_i_cons(&a,2,t1,((C_word*)((C_word*)t0)[6])[1]);
t3=C_mutate(((C_word *)((C_word*)t0)[6])+1,t2);
t4=(C_word)C_a_i_list(&a,3,lf[14],((C_word*)((C_word*)t0)[5])[1],((C_word*)((C_word*)t0)[4])[1]);
t5=(C_word)C_a_i_cons(&a,2,t4,((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_19935(2,t7,((C_word*)((C_word*)t0)[3])[1]);}

/* k19933 in k20005 in k19891 in do3398 in parse-with in k18307 in k18304 in k18301 in k18298 in k17861 in k17858 in k17855 in k17852 in k17849 in k17327 in k17324 in k16801 in k16798 in k16795 in k16792 in k16789 in k16786 in k16783 in k16780 in k16777 in k16774 in k16771 in k16768 in k16765 in k16762 in k16759 in k16756 in k16753 in k16750 in k16747 in k16744 in k16741 in k16602 in k16599 in k16596 in k16593 in k16537 in k16534 in k16531 in k16528 in k16525 in k16522 in k16519 in k16516 in k15271 in k15202 in k15009 in k15006 in k14901 in k14850 in k7607 in k7604 in k5838 in k5545 in k5542 in k5538 in k5247 in k5244 in k5241 in k5238 */
static void C_ccall f_19935(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word *a;
t2=C_set_block_item(((C_word*)t0)[6],0,C_SCHEME_FALSE);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_FALSE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=C_set_block_item(((C_word*)t0)[3],0,C_SCHEME_TRUE);
t6=((C_word*)t0)[2];
f_19904(2,t6,t5);}

/* k19911 in k20005 in k19891 in do3398 in parse-with in k18307 in k18304 in k18301 in k18298 in k17861 in k17858 in k17855 in k17852 in k17849 in k17327 in k17324 in k16801 in k16798 in k16795 in k16792 in k16789 in k16786 in k16783 in k16780 in k16777 in k16774 in k16771 in k16768 in k16765 in k16762 in k16759 in k16756 in k16753 in k16750 in k16747 in k16744 in k16741 in k16602 in k16599 in k16596 in k16593 in k16537 in k16534 in k16531 in k16528 in k16525 in k16522 in k16519 in k16516 in k15271 in k15202 in k15009 in k15006 in k14901 in k14850 in k7607 in k7604 in k5838 in k5545 in k5542 in k5538 in k5247 in k5244 in k5241 in k5238 */
static void C_ccall f_19913(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[17],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_19913,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_19916,a[2]=((C_word*)t0)[4],a[3]=((C_word*)t0)[5],a[4]=((C_word*)t0)[6],a[5]=((C_word*)t0)[7],a[6]=((C_word*)t0)[8],a[7]=((C_word*)t0)[9],tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)((C_word*)t0)[7])[1])){
C_trace("ChickenBridge.scm: 365  loop-error");
f_18659(t2,((C_word*)t0)[3],((C_word*)t0)[2],(C_word)C_a_i_list(&a,3,lf[468],((C_word*)((C_word*)t0)[8])[1],lf[469]));}
else{
t3=t2;
f_19916(2,t3,C_SCHEME_UNDEFINED);}}

/* k19914 in k19911 in k20005 in k19891 in do3398 in parse-with in k18307 in k18304 in k18301 in k18298 in k17861 in k17858 in k17855 in k17852 in k17849 in k17327 in k17324 in k16801 in k16798 in k16795 in k16792 in k16789 in k16786 in k16783 in k16780 in k16777 in k16774 in k16771 in k16768 in k16765 in k16762 in k16759 in k16756 in k16753 in k16750 in k16747 in k16744 in k16741 in k16602 in k16599 in k16596 in k16593 in k16537 in k16534 in k16531 in k16528 in k16525 in k16522 in k16519 in k16516 in k15271 in k15202 in k15009 in k15006 in k14901 in k14850 in k7607 in k7604 in k5838 in k5545 in k5542 in k5538 in k5247 in k5244 in k5241 in k5238 */
static void C_ccall f_19916(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[7])+1,((C_word*)((C_word*)t0)[6])[1]);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_FALSE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_FALSE);
t5=C_set_block_item(((C_word*)t0)[3],0,C_SCHEME_FALSE);
t6=((C_word*)t0)[2];
f_19904(2,t6,t5);}

/* k19902 in k19891 in do3398 in parse-with in k18307 in k18304 in k18301 in k18298 in k17861 in k17858 in k17855 in k17852 in k17849 in k17327 in k17324 in k16801 in k16798 in k16795 in k16792 in k16789 in k16786 in k16783 in k16780 in k16777 in k16774 in k16771 in k16768 in k16765 in k16762 in k16759 in k16756 in k16753 in k16750 in k16747 in k16744 in k16741 in k16602 in k16599 in k16596 in k16593 in k16537 in k16534 in k16531 in k16528 in k16525 in k16522 in k16519 in k16516 in k15271 in k15202 in k15009 in k15006 in k14901 in k14850 in k7607 in k7604 in k5838 in k5545 in k5542 in k5538 in k5247 in k5244 in k5241 in k5238 */
static void C_ccall f_19904(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
t2=((C_word*)((C_word*)t0)[5])[1];
f_19883(t2,((C_word*)t0)[4],((C_word*)((C_word*)t0)[3])[1],((C_word*)((C_word*)t0)[2])[1]);}

/* k19828 in parse-with in k18307 in k18304 in k18301 in k18298 in k17861 in k17858 in k17855 in k17852 in k17849 in k17327 in k17324 in k16801 in k16798 in k16795 in k16792 in k16789 in k16786 in k16783 in k16780 in k16777 in k16774 in k16771 in k16768 in k16765 in k16762 in k16759 in k16756 in k16753 in k16750 in k16747 in k16744 in k16741 in k16602 in k16599 in k16596 in k16593 in k16537 in k16534 in k16531 in k16528 in k16525 in k16522 in k16519 in k16516 in k15271 in k15202 in k15009 in k15006 in k14901 in k14850 in k7607 in k7604 in k5838 in k5545 in k5542 in k5538 in k5247 in k5244 in k5241 in k5238 */
static void C_ccall f_19830(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[20],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_19830,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_19833,a[2]=((C_word*)t0)[7],a[3]=((C_word*)t0)[8],a[4]=((C_word*)t0)[9],a[5]=((C_word*)t0)[10],tmp=(C_word)a,a+=6,tmp);
if(C_truep(((C_word*)((C_word*)t0)[6])[1])){
C_trace("ChickenBridge.scm: 365  loop-error");
f_18659(t2,((C_word*)t0)[5],((C_word*)t0)[4],(C_word)C_a_i_list(&a,1,lf[467]));}
else{
if(C_truep(((C_word*)((C_word*)t0)[3])[1])){
if(C_truep(((C_word*)((C_word*)t0)[2])[1])){
t3=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_19873,a[2]=t2,a[3]=((C_word*)t0)[8],a[4]=((C_word*)t0)[2],a[5]=((C_word*)t0)[3],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
C_trace("ChickenBridge.scm: 365  make-binding");
f_18653(t3,((C_word*)((C_word*)t0)[3])[1],C_SCHEME_FALSE);}
else{
t3=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_19881,a[2]=t2,a[3]=((C_word*)t0)[7],tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 365  make-binding");
f_18653(t3,((C_word*)((C_word*)t0)[3])[1],C_SCHEME_FALSE);}}
else{
t3=t2;
f_19833(2,t3,C_SCHEME_UNDEFINED);}}}

/* k19879 in k19828 in parse-with in k18307 in k18304 in k18301 in k18298 in k17861 in k17858 in k17855 in k17852 in k17849 in k17327 in k17324 in k16801 in k16798 in k16795 in k16792 in k16789 in k16786 in k16783 in k16780 in k16777 in k16774 in k16771 in k16768 in k16765 in k16762 in k16759 in k16756 in k16753 in k16750 in k16747 in k16744 in k16741 in k16602 in k16599 in k16596 in k16593 in k16537 in k16534 in k16531 in k16528 in k16525 in k16522 in k16519 in k16516 in k15271 in k15202 in k15009 in k15006 in k14901 in k14850 in k7607 in k7604 in k5838 in k5545 in k5542 in k5538 in k5247 in k5244 in k5241 in k5238 */
static void C_ccall f_19881(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[3],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_19881,2,t0,t1);}
t2=(C_word)C_a_i_cons(&a,2,t1,((C_word*)((C_word*)t0)[3])[1]);
t3=C_mutate(((C_word *)((C_word*)t0)[3])+1,t2);
t4=((C_word*)t0)[2];
f_19833(2,t4,((C_word*)((C_word*)t0)[3])[1]);}

/* k19871 in k19828 in parse-with in k18307 in k18304 in k18301 in k18298 in k17861 in k17858 in k17855 in k17852 in k17849 in k17327 in k17324 in k16801 in k16798 in k16795 in k16792 in k16789 in k16786 in k16783 in k16780 in k16777 in k16774 in k16771 in k16768 in k16765 in k16762 in k16759 in k16756 in k16753 in k16750 in k16747 in k16744 in k16741 in k16602 in k16599 in k16596 in k16593 in k16537 in k16534 in k16531 in k16528 in k16525 in k16522 in k16519 in k16516 in k15271 in k15202 in k15009 in k15006 in k14901 in k14850 in k7607 in k7604 in k5838 in k5545 in k5542 in k5538 in k5247 in k5244 in k5241 in k5238 */
static void C_ccall f_19873(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word ab[15],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_19873,2,t0,t1);}
t2=(C_word)C_a_i_cons(&a,2,t1,((C_word*)((C_word*)t0)[6])[1]);
t3=C_mutate(((C_word *)((C_word*)t0)[6])+1,t2);
t4=(C_word)C_a_i_list(&a,3,lf[14],((C_word*)((C_word*)t0)[5])[1],((C_word*)((C_word*)t0)[4])[1]);
t5=(C_word)C_a_i_cons(&a,2,t4,((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_19833(2,t7,((C_word*)((C_word*)t0)[3])[1]);}

/* k19831 in k19828 in parse-with in k18307 in k18304 in k18301 in k18298 in k17861 in k17858 in k17855 in k17852 in k17849 in k17327 in k17324 in k16801 in k16798 in k16795 in k16792 in k16789 in k16786 in k16783 in k16780 in k16777 in k16774 in k16771 in k16768 in k16765 in k16762 in k16759 in k16756 in k16753 in k16750 in k16747 in k16744 in k16741 in k16602 in k16599 in k16596 in k16593 in k16537 in k16534 in k16531 in k16528 in k16525 in k16522 in k16519 in k16516 in k15271 in k15202 in k15009 in k15006 in k14901 in k14850 in k7607 in k7604 in k5838 in k5545 in k5542 in k5538 in k5247 in k5244 in k5241 in k5238 */
static void C_ccall f_19833(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[8],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_19833,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_19840,a[2]=((C_word*)t0)[4],a[3]=((C_word*)t0)[5],tmp=(C_word)a,a+=4,tmp);
t3=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_19844,a[2]=((C_word*)t0)[3],a[3]=t2,tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 365  reverse");
t4=*((C_word*)lf[232]+1);
((C_proc3)C_retrieve_proc(t4))(3,t4,t3,((C_word*)((C_word*)t0)[2])[1]);}

/* k19842 in k19831 in k19828 in parse-with in k18307 in k18304 in k18301 in k18298 in k17861 in k17858 in k17855 in k17852 in k17849 in k17327 in k17324 in k16801 in k16798 in k16795 in k16792 in k16789 in k16786 in k16783 in k16780 in k16777 in k16774 in k16771 in k16768 in k16765 in k16762 in k16759 in k16756 in k16753 in k16750 in k16747 in k16744 in k16741 in k16602 in k16599 in k16596 in k16593 in k16537 in k16534 in k16531 in k16528 in k16525 in k16522 in k16519 in k16516 in k15271 in k15202 in k15009 in k15006 in k14901 in k14850 in k7607 in k7604 in k5838 in k5545 in k5542 in k5538 in k5247 in k5244 in k5241 in k5238 */
static void C_ccall f_19844(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[4],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_19844,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_19848,a[2]=t1,a[3]=((C_word*)t0)[3],tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 365  reverse");
t3=*((C_word*)lf[232]+1);
((C_proc3)C_retrieve_proc(t3))(3,t3,t2,((C_word*)((C_word*)t0)[2])[1]);}

/* k19846 in k19842 in k19831 in k19828 in parse-with in k18307 in k18304 in k18301 in k18298 in k17861 in k17858 in k17855 in k17852 in k17849 in k17327 in k17324 in k16801 in k16798 in k16795 in k16792 in k16789 in k16786 in k16783 in k16780 in k16777 in k16774 in k16771 in k16768 in k16765 in k16762 in k16759 in k16756 in k16753 in k16750 in k16747 in k16744 in k16741 in k16602 in k16599 in k16596 in k16593 in k16537 in k16534 in k16531 in k16528 in k16525 in k16522 in k16519 in k16516 in k15271 in k15202 in k15009 in k15006 in k14901 in k14850 in k7607 in k7604 in k5838 in k5545 in k5542 in k5538 in k5247 in k5244 in k5241 in k5238 */
static void C_ccall f_19848(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word ab[18],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_19848,2,t0,t1);}
C_trace("ChickenBridge.scm: 365  make-loop-clause");
f_18419(((C_word*)t0)[3],(C_word)C_a_i_list(&a,6,lf[374],lf[466],lf[375],((C_word*)t0)[2],lf[377],t1));}

/* k19838 in k19831 in k19828 in parse-with in k18307 in k18304 in k18301 in k18298 in k17861 in k17858 in k17855 in k17852 in k17849 in k17327 in k17324 in k16801 in k16798 in k16795 in k16792 in k16789 in k16786 in k16783 in k16780 in k16777 in k16774 in k16771 in k16768 in k16765 in k16762 in k16759 in k16756 in k16753 in k16750 in k16747 in k16744 in k16741 in k16602 in k16599 in k16596 in k16593 in k16537 in k16534 in k16531 in k16528 in k16525 in k16522 in k16519 in k16516 in k15271 in k15202 in k15009 in k15006 in k14901 in k14850 in k7607 in k7604 in k5838 in k5545 in k5542 in k5538 in k5247 in k5244 in k5241 in k5238 */
static void C_ccall f_19840(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 365  values");
C_values(4,0,((C_word*)t0)[3],t1,((C_word*)((C_word*)t0)[2])[1]);}

/* parse-general-iteration in k18307 in k18304 in k18301 in k18298 in k17861 in k17858 in k17855 in k17852 in k17849 in k17327 in k17324 in k16801 in k16798 in k16795 in k16792 in k16789 in k16786 in k16783 in k16780 in k16777 in k16774 in k16771 in k16768 in k16765 in k16762 in k16759 in k16756 in k16753 in k16750 in k16747 in k16744 in k16741 in k16602 in k16599 in k16596 in k16593 in k16537 in k16534 in k16531 in k16528 in k16525 in k16522 in k16519 in k16516 in k15271 in k15202 in k15009 in k15006 in k14901 in k14850 in k7607 in k7604 in k5838 in k5545 in k5542 in k5538 in k5247 in k5244 in k5241 in k5238 */
static void C_ccall f_19681(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4){
C_word tmp;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word t14;
C_word t15;
C_word t16;
C_word t17;
C_word t18;
C_word t19;
C_word t20;
C_word t21;
C_word t22;
C_word ab[32],*a=ab;
if(c!=5) C_bad_argc_2(c,5,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr5,(void*)f_19681,5,t0,t1,t2,t3,t4);}
t5=t2;
t6=(C_word)C_i_cadr(t2);
t7=(C_word)C_i_cddr(t2);
t8=t7;
t9=(*a=C_VECTOR_TYPE|1,a[1]=t8,tmp=(C_word)a,a+=2,tmp);
t10=C_SCHEME_FALSE;
t11=(*a=C_VECTOR_TYPE|1,a[1]=t10,tmp=(C_word)a,a+=2,tmp);
t12=C_SCHEME_FALSE;
t13=(*a=C_VECTOR_TYPE|1,a[1]=t12,tmp=(C_word)a,a+=2,tmp);
t14=C_SCHEME_FALSE;
t15=(*a=C_VECTOR_TYPE|1,a[1]=t14,tmp=(C_word)a,a+=2,tmp);
t16=C_SCHEME_FALSE;
t17=(*a=C_VECTOR_TYPE|1,a[1]=t16,tmp=(C_word)a,a+=2,tmp);
t18=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_19691,a[2]=t6,a[3]=t17,a[4]=t15,a[5]=t11,a[6]=t9,a[7]=t1,tmp=(C_word)a,a+=8,tmp);
t19=C_SCHEME_UNDEFINED;
t20=(*a=C_VECTOR_TYPE|1,a[1]=t19,tmp=(C_word)a,a+=2,tmp);
t21=C_set_block_item(t20,0,(*a=C_CLOSURE_TYPE|11,a[1]=(C_word)f_19729,a[2]=t17,a[3]=t11,a[4]=t5,a[5]=t4,a[6]=t13,a[7]=t15,a[8]=t6,a[9]=t20,a[10]=t9,a[11]=((C_word)li289),tmp=(C_word)a,a+=12,tmp));
t22=((C_word*)t20)[1];
f_19729(t22,t18,C_SCHEME_FALSE);}

/* do3360 in parse-general-iteration in k18307 in k18304 in k18301 in k18298 in k17861 in k17858 in k17855 in k17852 in k17849 in k17327 in k17324 in k16801 in k16798 in k16795 in k16792 in k16789 in k16786 in k16783 in k16780 in k16777 in k16774 in k16771 in k16768 in k16765 in k16762 in k16759 in k16756 in k16753 in k16750 in k16747 in k16744 in k16741 in k16602 in k16599 in k16596 in k16593 in k16537 in k16534 in k16531 in k16528 in k16525 in k16522 in k16519 in k16516 in k15271 in k15202 in k15009 in k15006 in k14901 in k14850 in k7607 in k7604 in k5838 in k5545 in k5542 in k5538 in k5247 in k5244 in k5241 in k5238 */
static void C_fcall f_19729(C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word ab[15],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_19729,NULL,3,t0,t1,t2);}
t3=(*a=C_VECTOR_TYPE|1,a[1]=t2,tmp=(C_word)a,a+=2,tmp);
t4=(C_word)C_i_nullp(((C_word*)((C_word*)t0)[10])[1]);
t5=(*a=C_CLOSURE_TYPE|12,a[1]=(C_word)f_19739,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],a[7]=((C_word*)t0)[7],a[8]=((C_word*)t0)[8],a[9]=((C_word*)t0)[9],a[10]=t3,a[11]=((C_word*)t0)[10],a[12]=t1,tmp=(C_word)a,a+=13,tmp);
if(C_truep(t4)){
t6=t5;
f_19739(2,t6,t4);}
else{
t6=(C_word)C_i_car(((C_word*)((C_word*)t0)[10])[1]);
C_trace("ChickenBridge.scm: 365  loop-op?");
f_18641(t5,t6,((C_word*)t0)[5]);}}

/* k19737 in do3360 in parse-general-iteration in k18307 in k18304 in k18301 in k18298 in k17861 in k17858 in k17855 in k17852 in k17849 in k17327 in k17324 in k16801 in k16798 in k16795 in k16792 in k16789 in k16786 in k16783 in k16780 in k16777 in k16774 in k16771 in k16768 in k16765 in k16762 in k16759 in k16756 in k16753 in k16750 in k16747 in k16744 in k16741 in k16602 in k16599 in k16596 in k16593 in k16537 in k16534 in k16531 in k16528 in k16525 in k16522 in k16519 in k16516 in k15271 in k15202 in k15009 in k15006 in k14901 in k14850 in k7607 in k7604 in k5838 in k5545 in k5542 in k5538 in k5247 in k5244 in k5241 in k5238 */
static void C_ccall f_19739(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word ab[16],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_19739,2,t0,t1);}
if(C_truep(t1)){
t2=((C_word*)t0)[12];
((C_proc2)(void*)(*((C_word*)t2+1)))(2,t2,C_SCHEME_UNDEFINED);}
else{
t2=(C_word)C_i_car(((C_word*)((C_word*)t0)[11])[1]);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[11])[1]);
t4=C_mutate(((C_word *)((C_word*)t0)[11])+1,t3);
t5=C_mutate(((C_word *)((C_word*)t0)[10])+1,t2);
t6=(*a=C_CLOSURE_TYPE|12,a[1]=(C_word)f_19750,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],a[7]=((C_word*)t0)[7],a[8]=((C_word*)t0)[8],a[9]=((C_word*)t0)[11],a[10]=((C_word*)t0)[12],a[11]=((C_word*)t0)[9],a[12]=((C_word*)t0)[10],tmp=(C_word)a,a+=13,tmp);
if(C_truep((C_word)C_i_nullp(((C_word*)((C_word*)t0)[11])[1]))){
C_trace("ChickenBridge.scm: 365  loop-error");
f_18659(t6,((C_word*)t0)[5],((C_word*)t0)[4],(C_word)C_a_i_list(&a,1,lf[464]));}
else{
t7=t6;
f_19750(2,t7,C_SCHEME_UNDEFINED);}}}

/* k19748 in k19737 in do3360 in parse-general-iteration in k18307 in k18304 in k18301 in k18298 in k17861 in k17858 in k17855 in k17852 in k17849 in k17327 in k17324 in k16801 in k16798 in k16795 in k16792 in k16789 in k16786 in k16783 in k16780 in k16777 in k16774 in k16771 in k16768 in k16765 in k16762 in k16759 in k16756 in k16753 in k16750 in k16747 in k16744 in k16741 in k16602 in k16599 in k16596 in k16593 in k16537 in k16534 in k16531 in k16528 in k16525 in k16522 in k16519 in k16516 in k15271 in k15202 in k15009 in k15006 in k14901 in k14850 in k7607 in k7604 in k5838 in k5545 in k5542 in k5538 in k5247 in k5244 in k5241 in k5238 */
static void C_ccall f_19750(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word ab[38],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_19750,2,t0,t1);}
t2=((C_word*)((C_word*)t0)[12])[1];
t3=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_19753,a[2]=((C_word*)t0)[12],a[3]=((C_word*)t0)[10],a[4]=((C_word*)t0)[11],tmp=(C_word)a,a+=5,tmp);
t4=(C_word)C_eqp(t2,lf[458]);
if(C_truep(t4)){
t5=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_19762,a[2]=t3,a[3]=((C_word*)t0)[12],a[4]=((C_word*)t0)[6],a[5]=((C_word*)t0)[7],a[6]=((C_word*)t0)[8],a[7]=((C_word*)t0)[9],tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)((C_word*)t0)[6])[1])){
C_trace("ChickenBridge.scm: 365  loop-error");
f_18659(t5,((C_word*)t0)[5],((C_word*)t0)[4],(C_word)C_a_i_list(&a,1,lf[459]));}
else{
t6=t5;
f_19762(2,t6,C_SCHEME_UNDEFINED);}}
else{
t5=(C_word)C_eqp(t2,lf[460]);
if(C_truep(t5)){
t6=(*a=C_CLOSURE_TYPE|9,a[1]=(C_word)f_19787,a[2]=t3,a[3]=((C_word*)t0)[12],a[4]=((C_word*)t0)[6],a[5]=((C_word*)t0)[2],a[6]=((C_word*)t0)[8],a[7]=((C_word*)t0)[9],a[8]=((C_word*)t0)[7],a[9]=((C_word*)t0)[3],tmp=(C_word)a,a+=10,tmp);
if(C_truep(((C_word*)((C_word*)t0)[3])[1])){
C_trace("ChickenBridge.scm: 365  loop-error");
f_18659(t6,((C_word*)t0)[5],((C_word*)t0)[4],(C_word)C_a_i_list(&a,1,lf[461]));}
else{
t7=t6;
f_19787(2,t7,C_SCHEME_UNDEFINED);}}
else{
C_trace("ChickenBridge.scm: 365  loop-error");
f_18659(t3,((C_word*)t0)[5],((C_word*)t0)[4],(C_word)C_a_i_list(&a,3,lf[462],((C_word*)((C_word*)t0)[12])[1],lf[463]));}}}

/* k19785 in k19748 in k19737 in do3360 in parse-general-iteration in k18307 in k18304 in k18301 in k18298 in k17861 in k17858 in k17855 in k17852 in k17849 in k17327 in k17324 in k16801 in k16798 in k16795 in k16792 in k16789 in k16786 in k16783 in k16780 in k16777 in k16774 in k16771 in k16768 in k16765 in k16762 in k16759 in k16756 in k16753 in k16750 in k16747 in k16744 in k16741 in k16602 in k16599 in k16596 in k16593 in k16537 in k16534 in k16531 in k16528 in k16525 in k16522 in k16519 in k16516 in k15271 in k15202 in k15009 in k15006 in k14901 in k14850 in k7607 in k7604 in k5838 in k5545 in k5542 in k5538 in k5247 in k5244 in k5241 in k5238 */
static void C_ccall f_19787(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_19787,2,t0,t1);}
t2=C_mutate(((C_word *)((C_word*)t0)[9])+1,((C_word*)((C_word*)t0)[8])[1]);
t3=C_set_block_item(((C_word*)t0)[8],0,C_SCHEME_FALSE);
t4=(C_word)C_i_car(((C_word*)((C_word*)t0)[7])[1]);
t5=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[7])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[7])+1,t5);
t7=(C_word)C_a_i_list(&a,3,lf[14],((C_word*)t0)[6],t4);
t8=C_mutate(((C_word *)((C_word*)t0)[5])+1,t7);
t9=C_mutate(((C_word *)((C_word*)t0)[4])+1,((C_word*)((C_word*)t0)[3])[1]);
t10=((C_word*)t0)[2];
f_19753(2,t10,t9);}

/* k19760 in k19748 in k19737 in do3360 in parse-general-iteration in k18307 in k18304 in k18301 in k18298 in k17861 in k17858 in k17855 in k17852 in k17849 in k17327 in k17324 in k16801 in k16798 in k16795 in k16792 in k16789 in k16786 in k16783 in k16780 in k16777 in k16774 in k16771 in k16768 in k16765 in k16762 in k16759 in k16756 in k16753 in k16750 in k16747 in k16744 in k16741 in k16602 in k16599 in k16596 in k16593 in k16537 in k16534 in k16531 in k16528 in k16525 in k16522 in k16519 in k16516 in k15271 in k15202 in k15009 in k15006 in k14901 in k14850 in k7607 in k7604 in k5838 in k5545 in k5542 in k5538 in k5247 in k5244 in k5241 in k5238 */
static void C_ccall f_19762(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_19762,2,t0,t1);}
t2=(C_word)C_i_car(((C_word*)((C_word*)t0)[7])[1]);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[7])[1]);
t4=C_mutate(((C_word *)((C_word*)t0)[7])+1,t3);
t5=(C_word)C_a_i_list(&a,3,lf[14],((C_word*)t0)[6],t2);
t6=C_mutate(((C_word *)((C_word*)t0)[5])+1,t5);
t7=C_mutate(((C_word *)((C_word*)t0)[4])+1,((C_word*)((C_word*)t0)[3])[1]);
t8=((C_word*)t0)[2];
f_19753(2,t8,t7);}

/* k19751 in k19748 in k19737 in do3360 in parse-general-iteration in k18307 in k18304 in k18301 in k18298 in k17861 in k17858 in k17855 in k17852 in k17849 in k17327 in k17324 in k16801 in k16798 in k16795 in k16792 in k16789 in k16786 in k16783 in k16780 in k16777 in k16774 in k16771 in k16768 in k16765 in k16762 in k16759 in k16756 in k16753 in k16750 in k16747 in k16744 in k16741 in k16602 in k16599 in k16596 in k16593 in k16537 in k16534 in k16531 in k16528 in k16525 in k16522 in k16519 in k16516 in k15271 in k15202 in k15009 in k15006 in k14901 in k14850 in k7607 in k7604 in k5838 in k5545 in k5542 in k5538 in k5247 in k5244 in k5241 in k5238 */
static void C_ccall f_19753(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
t2=((C_word*)((C_word*)t0)[4])[1];
f_19729(t2,((C_word*)t0)[3],((C_word*)((C_word*)t0)[2])[1]);}

/* k19689 in parse-general-iteration in k18307 in k18304 in k18301 in k18298 in k17861 in k17858 in k17855 in k17852 in k17849 in k17327 in k17324 in k16801 in k16798 in k16795 in k16792 in k16789 in k16786 in k16783 in k16780 in k16777 in k16774 in k16771 in k16768 in k16765 in k16762 in k16759 in k16756 in k16753 in k16750 in k16747 in k16744 in k16741 in k16602 in k16599 in k16596 in k16593 in k16537 in k16534 in k16531 in k16528 in k16525 in k16522 in k16519 in k16516 in k15271 in k15202 in k15009 in k15006 in k14901 in k14850 in k7607 in k7604 in k5838 in k5545 in k5542 in k5538 in k5247 in k5244 in k5241 in k5238 */
static void C_ccall f_19691(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[10],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_19691,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_19698,a[2]=((C_word*)t0)[6],a[3]=((C_word*)t0)[7],tmp=(C_word)a,a+=4,tmp);
t3=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_19727,a[2]=t2,a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],tmp=(C_word)a,a+=6,tmp);
C_trace("ChickenBridge.scm: 365  make-binding");
f_18653(t3,((C_word*)t0)[2],C_SCHEME_FALSE);}

/* k19725 in k19689 in parse-general-iteration in k18307 in k18304 in k18301 in k18298 in k17861 in k17858 in k17855 in k17852 in k17849 in k17327 in k17324 in k16801 in k16798 in k16795 in k16792 in k16789 in k16786 in k16783 in k16780 in k16777 in k16774 in k16771 in k16768 in k16765 in k16762 in k16759 in k16756 in k16753 in k16750 in k16747 in k16744 in k16741 in k16602 in k16599 in k16596 in k16593 in k16537 in k16534 in k16531 in k16528 in k16525 in k16522 in k16519 in k16516 in k15271 in k15202 in k15009 in k15006 in k14901 in k14850 in k7607 in k7604 in k5838 in k5545 in k5542 in k5538 in k5247 in k5244 in k5241 in k5238 */
static void C_ccall f_19727(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[42],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_19727,2,t0,t1);}
t2=(C_word)C_a_i_list(&a,1,t1);
t3=(C_truep(((C_word*)((C_word*)t0)[5])[1])?(C_word)C_a_i_list(&a,1,((C_word*)((C_word*)t0)[5])[1]):C_SCHEME_END_OF_LIST);
t4=(C_truep(((C_word*)((C_word*)t0)[4])[1])?(C_word)C_a_i_list(&a,1,((C_word*)((C_word*)t0)[4])[1]):C_SCHEME_END_OF_LIST);
t5=(C_truep(((C_word*)((C_word*)t0)[3])[1])?(C_word)C_a_i_list(&a,1,((C_word*)((C_word*)t0)[3])[1]):C_SCHEME_END_OF_LIST);
C_trace("ChickenBridge.scm: 365  make-loop-clause");
f_18419(((C_word*)t0)[2],(C_word)C_a_i_list(&a,10,lf[374],lf[406],lf[375],t2,lf[377],t3,lf[379],t4,lf[380],t5));}

/* k19696 in k19689 in parse-general-iteration in k18307 in k18304 in k18301 in k18298 in k17861 in k17858 in k17855 in k17852 in k17849 in k17327 in k17324 in k16801 in k16798 in k16795 in k16792 in k16789 in k16786 in k16783 in k16780 in k16777 in k16774 in k16771 in k16768 in k16765 in k16762 in k16759 in k16756 in k16753 in k16750 in k16747 in k16744 in k16741 in k16602 in k16599 in k16596 in k16593 in k16537 in k16534 in k16531 in k16528 in k16525 in k16522 in k16519 in k16516 in k15271 in k15202 in k15009 in k15006 in k14901 in k14850 in k7607 in k7604 in k5838 in k5545 in k5542 in k5538 in k5247 in k5244 in k5241 in k5238 */
static void C_ccall f_19698(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 365  values");
C_values(4,0,((C_word*)t0)[3],t1,((C_word*)((C_word*)t0)[2])[1]);}

/* parse-sequence-iteration in k18307 in k18304 in k18301 in k18298 in k17861 in k17858 in k17855 in k17852 in k17849 in k17327 in k17324 in k16801 in k16798 in k16795 in k16792 in k16789 in k16786 in k16783 in k16780 in k16777 in k16774 in k16771 in k16768 in k16765 in k16762 in k16759 in k16756 in k16753 in k16750 in k16747 in k16744 in k16741 in k16602 in k16599 in k16596 in k16593 in k16537 in k16534 in k16531 in k16528 in k16525 in k16522 in k16519 in k16516 in k15271 in k15202 in k15009 in k15006 in k14901 in k14850 in k7607 in k7604 in k5838 in k5545 in k5542 in k5538 in k5247 in k5244 in k5241 in k5238 */
static void C_ccall f_19330(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4){
C_word tmp;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word ab[7],*a=ab;
if(c!=5) C_bad_argc_2(c,5,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr5,(void*)f_19330,5,t0,t1,t2,t3,t4);}
t5=t2;
t6=(C_word)C_i_cadr(t2);
t7=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_19337,a[2]=t5,a[3]=t4,a[4]=t6,a[5]=t1,a[6]=t2,tmp=(C_word)a,a+=7,tmp);
C_trace("ChickenBridge.scm: 365  gensym");
t8=C_retrieve(lf[28]);
((C_proc3)C_retrieve_proc(t8))(3,t8,t7,lf[456]);}

/* k19335 in parse-sequence-iteration in k18307 in k18304 in k18301 in k18298 in k17861 in k17858 in k17855 in k17852 in k17849 in k17327 in k17324 in k16801 in k16798 in k16795 in k16792 in k16789 in k16786 in k16783 in k16780 in k16777 in k16774 in k16771 in k16768 in k16765 in k16762 in k16759 in k16756 in k16753 in k16750 in k16747 in k16744 in k16741 in k16602 in k16599 in k16596 in k16593 in k16537 in k16534 in k16531 in k16528 in k16525 in k16522 in k16519 in k16516 in k15271 in k15202 in k15009 in k15006 in k14901 in k14850 in k7607 in k7604 in k5838 in k5545 in k5542 in k5538 in k5247 in k5244 in k5241 in k5238 */
static void C_ccall f_19337(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word t14;
C_word t15;
C_word t16;
C_word t17;
C_word t18;
C_word t19;
C_word t20;
C_word t21;
C_word t22;
C_word t23;
C_word t24;
C_word t25;
C_word ab[44],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_19337,2,t0,t1);}
t2=(C_word)C_i_cddr(((C_word*)t0)[6]);
t3=t2;
t4=(*a=C_VECTOR_TYPE|1,a[1]=t3,tmp=(C_word)a,a+=2,tmp);
t5=C_SCHEME_END_OF_LIST;
t6=(*a=C_VECTOR_TYPE|1,a[1]=t5,tmp=(C_word)a,a+=2,tmp);
t7=C_SCHEME_FALSE;
t8=(*a=C_VECTOR_TYPE|1,a[1]=t7,tmp=(C_word)a,a+=2,tmp);
t9=C_SCHEME_END_OF_LIST;
t10=(*a=C_VECTOR_TYPE|1,a[1]=t9,tmp=(C_word)a,a+=2,tmp);
t11=C_SCHEME_END_OF_LIST;
t12=(*a=C_VECTOR_TYPE|1,a[1]=t11,tmp=(C_word)a,a+=2,tmp);
t13=C_SCHEME_FALSE;
t14=(*a=C_VECTOR_TYPE|1,a[1]=t13,tmp=(C_word)a,a+=2,tmp);
t15=C_SCHEME_END_OF_LIST;
t16=(*a=C_VECTOR_TYPE|1,a[1]=t15,tmp=(C_word)a,a+=2,tmp);
t17=C_SCHEME_END_OF_LIST;
t18=(*a=C_VECTOR_TYPE|1,a[1]=t17,tmp=(C_word)a,a+=2,tmp);
t19=C_SCHEME_FALSE;
t20=(*a=C_VECTOR_TYPE|1,a[1]=t19,tmp=(C_word)a,a+=2,tmp);
t21=(*a=C_CLOSURE_TYPE|13,a[1]=(C_word)f_19343,a[2]=t8,a[3]=t14,a[4]=((C_word*)t0)[4],a[5]=t1,a[6]=t20,a[7]=t18,a[8]=t12,a[9]=t10,a[10]=t16,a[11]=t4,a[12]=((C_word*)t0)[5],a[13]=t6,tmp=(C_word)a,a+=14,tmp);
t22=C_SCHEME_UNDEFINED;
t23=(*a=C_VECTOR_TYPE|1,a[1]=t22,tmp=(C_word)a,a+=2,tmp);
t24=C_set_block_item(t23,0,(*a=C_CLOSURE_TYPE|9,a[1]=(C_word)f_19571,a[2]=t14,a[3]=((C_word*)t0)[2],a[4]=((C_word*)t0)[3],a[5]=t8,a[6]=t20,a[7]=t23,a[8]=t4,a[9]=((C_word)li287),tmp=(C_word)a,a+=10,tmp));
t25=((C_word*)t23)[1];
f_19571(t25,t21,C_SCHEME_FALSE);}

/* do3293 in k19335 in parse-sequence-iteration in k18307 in k18304 in k18301 in k18298 in k17861 in k17858 in k17855 in k17852 in k17849 in k17327 in k17324 in k16801 in k16798 in k16795 in k16792 in k16789 in k16786 in k16783 in k16780 in k16777 in k16774 in k16771 in k16768 in k16765 in k16762 in k16759 in k16756 in k16753 in k16750 in k16747 in k16744 in k16741 in k16602 in k16599 in k16596 in k16593 in k16537 in k16534 in k16531 in k16528 in k16525 in k16522 in k16519 in k16516 in k15271 in k15202 in k15009 in k15006 in k14901 in k14850 in k7607 in k7604 in k5838 in k5545 in k5542 in k5538 in k5247 in k5244 in k5241 in k5238 */
static void C_fcall f_19571(C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word ab[13],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_19571,NULL,3,t0,t1,t2);}
t3=(*a=C_VECTOR_TYPE|1,a[1]=t2,tmp=(C_word)a,a+=2,tmp);
t4=(C_word)C_i_nullp(((C_word*)((C_word*)t0)[8])[1]);
t5=(*a=C_CLOSURE_TYPE|10,a[1]=(C_word)f_19581,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],a[7]=((C_word*)t0)[7],a[8]=t3,a[9]=((C_word*)t0)[8],a[10]=t1,tmp=(C_word)a,a+=11,tmp);
if(C_truep(t4)){
t6=t5;
f_19581(2,t6,t4);}
else{
t6=(C_word)C_i_car(((C_word*)((C_word*)t0)[8])[1]);
C_trace("ChickenBridge.scm: 365  loop-op?");
f_18641(t5,t6,((C_word*)t0)[4]);}}

/* k19579 in do3293 in k19335 in parse-sequence-iteration in k18307 in k18304 in k18301 in k18298 in k17861 in k17858 in k17855 in k17852 in k17849 in k17327 in k17324 in k16801 in k16798 in k16795 in k16792 in k16789 in k16786 in k16783 in k16780 in k16777 in k16774 in k16771 in k16768 in k16765 in k16762 in k16759 in k16756 in k16753 in k16750 in k16747 in k16744 in k16741 in k16602 in k16599 in k16596 in k16593 in k16537 in k16534 in k16531 in k16528 in k16525 in k16522 in k16519 in k16516 in k15271 in k15202 in k15009 in k15006 in k14901 in k14850 in k7607 in k7604 in k5838 in k5545 in k5542 in k5538 in k5247 in k5244 in k5241 in k5238 */
static void C_ccall f_19581(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word ab[14],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_19581,2,t0,t1);}
if(C_truep(t1)){
t2=((C_word*)t0)[10];
((C_proc2)(void*)(*((C_word*)t2+1)))(2,t2,C_SCHEME_UNDEFINED);}
else{
t2=(C_word)C_i_car(((C_word*)((C_word*)t0)[9])[1]);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[9])[1]);
t4=C_mutate(((C_word *)((C_word*)t0)[9])+1,t3);
t5=C_mutate(((C_word *)((C_word*)t0)[8])+1,t2);
t6=(*a=C_CLOSURE_TYPE|10,a[1]=(C_word)f_19592,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[9],a[7]=((C_word*)t0)[6],a[8]=((C_word*)t0)[10],a[9]=((C_word*)t0)[7],a[10]=((C_word*)t0)[8],tmp=(C_word)a,a+=11,tmp);
if(C_truep((C_word)C_i_nullp(((C_word*)((C_word*)t0)[9])[1]))){
C_trace("ChickenBridge.scm: 365  loop-error");
f_18659(t6,((C_word*)t0)[4],((C_word*)t0)[3],(C_word)C_a_i_list(&a,1,lf[455]));}
else{
t7=t6;
f_19592(2,t7,C_SCHEME_UNDEFINED);}}}

/* k19590 in k19579 in do3293 in k19335 in parse-sequence-iteration in k18307 in k18304 in k18301 in k18298 in k17861 in k17858 in k17855 in k17852 in k17849 in k17327 in k17324 in k16801 in k16798 in k16795 in k16792 in k16789 in k16786 in k16783 in k16780 in k16777 in k16774 in k16771 in k16768 in k16765 in k16762 in k16759 in k16756 in k16753 in k16750 in k16747 in k16744 in k16741 in k16602 in k16599 in k16596 in k16593 in k16537 in k16534 in k16531 in k16528 in k16525 in k16522 in k16519 in k16516 in k15271 in k15202 in k15009 in k15006 in k14901 in k14850 in k7607 in k7604 in k5838 in k5545 in k5542 in k5538 in k5247 in k5244 in k5241 in k5238 */
static void C_ccall f_19592(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word ab[16],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_19592,2,t0,t1);}
t2=((C_word*)((C_word*)t0)[10])[1];
t3=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_19595,a[2]=((C_word*)t0)[10],a[3]=((C_word*)t0)[8],a[4]=((C_word*)t0)[9],tmp=(C_word)a,a+=5,tmp);
t4=(C_word)C_eqp(t2,lf[445]);
t5=(*a=C_CLOSURE_TYPE|10,a[1]=(C_word)f_19604,a[2]=((C_word*)t0)[2],a[3]=t2,a[4]=((C_word*)t0)[3],a[5]=((C_word*)t0)[4],a[6]=t3,a[7]=((C_word*)t0)[5],a[8]=((C_word*)t0)[6],a[9]=((C_word*)t0)[10],a[10]=((C_word*)t0)[7],tmp=(C_word)a,a+=11,tmp);
if(C_truep(t4)){
t6=t5;
f_19604(t6,t4);}
else{
t6=(C_word)C_eqp(t2,lf[454]);
if(C_truep(t6)){
t7=t5;
f_19604(t7,t6);}
else{
t7=(C_word)C_eqp(t2,lf[439]);
t8=t5;
f_19604(t8,(C_truep(t7)?t7:(C_word)C_eqp(t2,lf[444])));}}}

/* k19602 in k19590 in k19579 in do3293 in k19335 in parse-sequence-iteration in k18307 in k18304 in k18301 in k18298 in k17861 in k17858 in k17855 in k17852 in k17849 in k17327 in k17324 in k16801 in k16798 in k16795 in k16792 in k16789 in k16786 in k16783 in k16780 in k16777 in k16774 in k16771 in k16768 in k16765 in k16762 in k16759 in k16756 in k16753 in k16750 in k16747 in k16744 in k16741 in k16602 in k16599 in k16596 in k16593 in k16537 in k16534 in k16531 in k16528 in k16525 in k16522 in k16519 in k16516 in k15271 in k15202 in k15009 in k15006 in k14901 in k14850 in k7607 in k7604 in k5838 in k5545 in k5542 in k5538 in k5247 in k5244 in k5241 in k5238 */
static void C_fcall f_19604(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word ab[37],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_19604,NULL,2,t0,t1);}
if(C_truep(t1)){
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_19607,a[2]=((C_word*)t0)[6],a[3]=((C_word*)t0)[7],a[4]=((C_word*)t0)[8],a[5]=((C_word*)t0)[9],a[6]=((C_word*)t0)[10],tmp=(C_word)a,a+=7,tmp);
if(C_truep(((C_word*)((C_word*)t0)[10])[1])){
C_trace("ChickenBridge.scm: 365  loop-error");
f_18659(t2,((C_word*)t0)[5],((C_word*)t0)[4],(C_word)C_a_i_list(&a,5,lf[447],((C_word*)((C_word*)t0)[9])[1],lf[448],((C_word*)((C_word*)t0)[10])[1],lf[449]));}
else{
t3=t2;
f_19607(2,t3,C_SCHEME_UNDEFINED);}}
else{
t2=(C_word)C_eqp(((C_word*)t0)[3],lf[430]);
if(C_truep(t2)){
if(C_truep(((C_word*)((C_word*)t0)[2])[1])){
C_trace("ChickenBridge.scm: 365  loop-error");
f_18659(((C_word*)t0)[6],((C_word*)t0)[5],((C_word*)t0)[4],(C_word)C_a_i_list(&a,1,lf[450]));}
else{
t3=(C_word)C_eqp(((C_word*)((C_word*)t0)[10])[1],lf[439]);
if(C_truep(t3)){
C_trace("ChickenBridge.scm: 365  loop-error");
f_18659(((C_word*)t0)[6],((C_word*)t0)[5],((C_word*)t0)[4],(C_word)C_a_i_list(&a,1,lf[451]));}
else{
t4=(C_word)C_i_car(((C_word*)((C_word*)t0)[8])[1]);
t5=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[8])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[8])+1,t5);
t7=C_mutate(((C_word *)((C_word*)t0)[2])+1,t4);
t8=((C_word*)t0)[6];
f_19595(2,t8,t7);}}}
else{
C_trace("ChickenBridge.scm: 365  loop-error");
f_18659(((C_word*)t0)[6],((C_word*)t0)[5],((C_word*)t0)[4],(C_word)C_a_i_list(&a,3,lf[452],((C_word*)((C_word*)t0)[9])[1],lf[453]));}}}

/* k19605 in k19602 in k19590 in k19579 in do3293 in k19335 in parse-sequence-iteration in k18307 in k18304 in k18301 in k18298 in k17861 in k17858 in k17855 in k17852 in k17849 in k17327 in k17324 in k16801 in k16798 in k16795 in k16792 in k16789 in k16786 in k16783 in k16780 in k16777 in k16774 in k16771 in k16768 in k16765 in k16762 in k16759 in k16756 in k16753 in k16750 in k16747 in k16744 in k16741 in k16602 in k16599 in k16596 in k16593 in k16537 in k16534 in k16531 in k16528 in k16525 in k16522 in k16519 in k16516 in k15271 in k15202 in k15009 in k15006 in k14901 in k14850 in k7607 in k7604 in k5838 in k5545 in k5542 in k5538 in k5247 in k5244 in k5241 in k5238 */
static void C_ccall f_19607(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,((C_word*)((C_word*)t0)[5])[1]);
t3=(C_word)C_i_car(((C_word*)((C_word*)t0)[4])[1]);
t4=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
t5=C_mutate(((C_word *)((C_word*)t0)[4])+1,t4);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t3);
t7=((C_word*)t0)[2];
f_19595(2,t7,t6);}

/* k19593 in k19590 in k19579 in do3293 in k19335 in parse-sequence-iteration in k18307 in k18304 in k18301 in k18298 in k17861 in k17858 in k17855 in k17852 in k17849 in k17327 in k17324 in k16801 in k16798 in k16795 in k16792 in k16789 in k16786 in k16783 in k16780 in k16777 in k16774 in k16771 in k16768 in k16765 in k16762 in k16759 in k16756 in k16753 in k16750 in k16747 in k16744 in k16741 in k16602 in k16599 in k16596 in k16593 in k16537 in k16534 in k16531 in k16528 in k16525 in k16522 in k16519 in k16516 in k15271 in k15202 in k15009 in k15006 in k14901 in k14850 in k7607 in k7604 in k5838 in k5545 in k5542 in k5538 in k5247 in k5244 in k5241 in k5238 */
static void C_ccall f_19595(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
t2=((C_word*)((C_word*)t0)[4])[1];
f_19571(t2,((C_word*)t0)[3],((C_word*)((C_word*)t0)[2])[1]);}

/* k19341 in k19335 in parse-sequence-iteration in k18307 in k18304 in k18301 in k18298 in k17861 in k17858 in k17855 in k17852 in k17849 in k17327 in k17324 in k16801 in k16798 in k16795 in k16792 in k16789 in k16786 in k16783 in k16780 in k16777 in k16774 in k16771 in k16768 in k16765 in k16762 in k16759 in k16756 in k16753 in k16750 in k16747 in k16744 in k16741 in k16602 in k16599 in k16596 in k16593 in k16537 in k16534 in k16531 in k16528 in k16525 in k16522 in k16519 in k16516 in k15271 in k15202 in k15009 in k15006 in k14901 in k14850 in k7607 in k7604 in k5838 in k5545 in k5542 in k5538 in k5247 in k5244 in k5241 in k5238 */
static void C_ccall f_19343(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[14],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_19343,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|13,a[1]=(C_word)f_19569,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],a[7]=((C_word*)t0)[7],a[8]=((C_word*)t0)[8],a[9]=((C_word*)t0)[9],a[10]=((C_word*)t0)[10],a[11]=((C_word*)t0)[11],a[12]=((C_word*)t0)[12],a[13]=((C_word*)t0)[13],tmp=(C_word)a,a+=14,tmp);
C_trace("ChickenBridge.scm: 365  make-binding");
f_18653(t2,((C_word*)t0)[4],C_SCHEME_FALSE);}

/* k19567 in k19341 in k19335 in parse-sequence-iteration in k18307 in k18304 in k18301 in k18298 in k17861 in k17858 in k17855 in k17852 in k17849 in k17327 in k17324 in k16801 in k16798 in k16795 in k16792 in k16789 in k16786 in k16783 in k16780 in k16777 in k16774 in k16771 in k16768 in k16765 in k16762 in k16759 in k16756 in k16753 in k16750 in k16747 in k16744 in k16741 in k16602 in k16599 in k16596 in k16593 in k16537 in k16534 in k16531 in k16528 in k16525 in k16522 in k16519 in k16516 in k15271 in k15202 in k15009 in k15006 in k14901 in k14850 in k7607 in k7604 in k5838 in k5545 in k5542 in k5538 in k5247 in k5244 in k5241 in k5238 */
static void C_ccall f_19569(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[16],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_19569,2,t0,t1);}
t2=(C_word)C_a_i_cons(&a,2,t1,((C_word*)((C_word*)t0)[13])[1]);
t3=C_mutate(((C_word *)((C_word*)t0)[13])+1,t2);
t4=(*a=C_CLOSURE_TYPE|12,a[1]=(C_word)f_19565,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],a[7]=((C_word*)t0)[8],a[8]=((C_word*)t0)[9],a[9]=((C_word*)t0)[10],a[10]=((C_word*)t0)[11],a[11]=((C_word*)t0)[12],a[12]=((C_word*)t0)[13],tmp=(C_word)a,a+=13,tmp);
C_trace("ChickenBridge.scm: 365  make-binding");
f_18653(t4,((C_word*)t0)[5],((C_word*)((C_word*)t0)[2])[1]);}

/* k19563 in k19567 in k19341 in k19335 in parse-sequence-iteration in k18307 in k18304 in k18301 in k18298 in k17861 in k17858 in k17855 in k17852 in k17849 in k17327 in k17324 in k16801 in k16798 in k16795 in k16792 in k16789 in k16786 in k16783 in k16780 in k16777 in k16774 in k16771 in k16768 in k16765 in k16762 in k16759 in k16756 in k16753 in k16750 in k16747 in k16744 in k16741 in k16602 in k16599 in k16596 in k16593 in k16537 in k16534 in k16531 in k16528 in k16525 in k16522 in k16519 in k16516 in k15271 in k15202 in k15009 in k15006 in k14901 in k14850 in k7607 in k7604 in k5838 in k5545 in k5542 in k5538 in k5247 in k5244 in k5241 in k5238 */
static void C_ccall f_19565(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word t14;
C_word t15;
C_word t16;
C_word t17;
C_word t18;
C_word ab[92],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_19565,2,t0,t1);}
t2=(C_word)C_a_i_cons(&a,2,t1,((C_word*)((C_word*)t0)[12])[1]);
t3=C_mutate(((C_word *)((C_word*)t0)[12])+1,t2);
t4=(*a=C_CLOSURE_TYPE|8,a[1]=(C_word)f_19354,a[2]=((C_word*)t0)[12],a[3]=((C_word*)t0)[6],a[4]=((C_word*)t0)[7],a[5]=((C_word*)t0)[8],a[6]=((C_word*)t0)[9],a[7]=((C_word*)t0)[10],a[8]=((C_word*)t0)[11],tmp=(C_word)a,a+=9,tmp);
t5=(C_word)C_eqp(((C_word*)((C_word*)t0)[5])[1],lf[439]);
if(C_truep(t5)){
t6=(*a=C_CLOSURE_TYPE|9,a[1]=(C_word)f_19371,a[2]=t4,a[3]=((C_word*)t0)[9],a[4]=((C_word*)t0)[7],a[5]=((C_word*)t0)[3],a[6]=((C_word*)t0)[6],a[7]=((C_word*)t0)[8],a[8]=((C_word*)t0)[4],a[9]=((C_word*)t0)[12],tmp=(C_word)a,a+=10,tmp);
C_trace("ChickenBridge.scm: 365  gensym");
t7=C_retrieve(lf[28]);
((C_proc3)C_retrieve_proc(t7))(3,t7,t6,lf[443]);}
else{
t6=(C_word)C_eqp(((C_word*)((C_word*)t0)[5])[1],lf[444]);
if(C_truep(t6)){
t7=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_19447,a[2]=t4,a[3]=((C_word*)t0)[9],a[4]=((C_word*)t0)[4],tmp=(C_word)a,a+=5,tmp);
if(C_truep(((C_word*)((C_word*)t0)[2])[1])){
t8=(C_word)C_a_i_list(&a,3,lf[181],((C_word*)t0)[4],((C_word*)((C_word*)t0)[2])[1]);
t9=t7;
f_19447(t9,(C_word)C_a_i_list(&a,3,lf[14],((C_word*)t0)[3],t8));}
else{
t8=(C_word)C_a_i_list(&a,2,lf[181],((C_word*)t0)[4]);
t9=t7;
f_19447(t9,(C_word)C_a_i_list(&a,3,lf[14],((C_word*)t0)[3],t8));}}
else{
t7=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_19476,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[5],a[4]=t4,a[5]=((C_word*)t0)[9],a[6]=((C_word*)t0)[4],a[7]=((C_word*)t0)[7],tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)((C_word*)t0)[2])[1])){
t8=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_19511,a[2]=t7,a[3]=((C_word*)t0)[6],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[2],tmp=(C_word)a,a+=6,tmp);
if(C_truep((C_word)C_i_listp(((C_word*)((C_word*)t0)[2])[1]))){
t9=(C_word)C_i_car(((C_word*)((C_word*)t0)[2])[1]);
t10=t8;
f_19511(t10,(C_word)C_eqp(t9,lf[446]));}
else{
t9=t8;
f_19511(t9,C_SCHEME_FALSE);}}
else{
t8=(C_word)C_a_i_list(&a,2,lf[17],((C_word*)t0)[4]);
t9=(C_word)C_a_i_list(&a,3,lf[14],((C_word*)t0)[4],t8);
t10=(C_word)C_a_i_cons(&a,2,t9,((C_word*)((C_word*)t0)[6])[1]);
t11=C_mutate(((C_word *)((C_word*)t0)[6])+1,t10);
t12=t7;
f_19476(t12,((C_word*)((C_word*)t0)[6])[1]);}}}}

/* k19509 in k19563 in k19567 in k19341 in k19335 in parse-sequence-iteration in k18307 in k18304 in k18301 in k18298 in k17861 in k17858 in k17855 in k17852 in k17849 in k17327 in k17324 in k16801 in k16798 in k16795 in k16792 in k16789 in k16786 in k16783 in k16780 in k16777 in k16774 in k16771 in k16768 in k16765 in k16762 in k16759 in k16756 in k16753 in k16750 in k16747 in k16744 in k16741 in k16602 in k16599 in k16596 in k16593 in k16537 in k16534 in k16531 in k16528 in k16525 in k16522 in k16519 in k16516 in k15271 in k15202 in k15009 in k15006 in k14901 in k14850 in k7607 in k7604 in k5838 in k5545 in k5542 in k5538 in k5247 in k5244 in k5241 in k5238 */
static void C_fcall f_19511(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word ab[36],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_19511,NULL,2,t0,t1);}
if(C_truep(t1)){
t2=(C_word)C_i_cadr(((C_word*)((C_word*)t0)[5])[1]);
t3=(C_word)C_a_i_list(&a,2,t2,((C_word*)t0)[4]);
t4=(C_word)C_a_i_list(&a,3,lf[14],((C_word*)t0)[4],t3);
t5=(C_word)C_a_i_cons(&a,2,t4,((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_19476(t7,((C_word*)((C_word*)t0)[3])[1]);}
else{
t2=(C_word)C_a_i_list(&a,2,((C_word*)((C_word*)t0)[5])[1],((C_word*)t0)[4]);
t3=(C_word)C_a_i_list(&a,3,lf[14],((C_word*)t0)[4],t2);
t4=(C_word)C_a_i_cons(&a,2,t3,((C_word*)((C_word*)t0)[3])[1]);
t5=C_mutate(((C_word *)((C_word*)t0)[3])+1,t4);
t6=((C_word*)t0)[2];
f_19476(t6,((C_word*)((C_word*)t0)[3])[1]);}}

/* k19474 in k19563 in k19567 in k19341 in k19335 in parse-sequence-iteration in k18307 in k18304 in k18301 in k18298 in k17861 in k17858 in k17855 in k17852 in k17849 in k17327 in k17324 in k16801 in k16798 in k16795 in k16792 in k16789 in k16786 in k16783 in k16780 in k16777 in k16774 in k16771 in k16768 in k16765 in k16762 in k16759 in k16756 in k16753 in k16750 in k16747 in k16744 in k16741 in k16602 in k16599 in k16596 in k16593 in k16537 in k16534 in k16531 in k16528 in k16525 in k16522 in k16519 in k16516 in k15271 in k15202 in k15009 in k15006 in k14901 in k14850 in k7607 in k7604 in k5838 in k5545 in k5542 in k5538 in k5247 in k5244 in k5241 in k5238 */
static void C_fcall f_19476(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[30],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_19476,NULL,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_19492,a[2]=((C_word*)t0)[4],a[3]=((C_word*)t0)[5],a[4]=((C_word*)t0)[6],a[5]=((C_word*)t0)[7],tmp=(C_word)a,a+=6,tmp);
t3=(C_word)C_eqp(((C_word*)((C_word*)t0)[3])[1],lf[445]);
if(C_truep(t3)){
t4=(C_word)C_a_i_list(&a,2,lf[10],((C_word*)t0)[6]);
t5=t2;
f_19492(t5,(C_word)C_a_i_list(&a,3,lf[14],((C_word*)t0)[2],t4));}
else{
t4=t2;
f_19492(t4,(C_word)C_a_i_list(&a,3,lf[14],((C_word*)t0)[2],((C_word*)t0)[6]));}}

/* k19490 in k19474 in k19563 in k19567 in k19341 in k19335 in parse-sequence-iteration in k18307 in k18304 in k18301 in k18298 in k17861 in k17858 in k17855 in k17852 in k17849 in k17327 in k17324 in k16801 in k16798 in k16795 in k16792 in k16789 in k16786 in k16783 in k16780 in k16777 in k16774 in k16771 in k16768 in k16765 in k16762 in k16759 in k16756 in k16753 in k16750 in k16747 in k16744 in k16741 in k16602 in k16599 in k16596 in k16593 in k16537 in k16534 in k16531 in k16528 in k16525 in k16522 in k16519 in k16516 in k15271 in k15202 in k15009 in k15006 in k14901 in k14850 in k7607 in k7604 in k5838 in k5545 in k5542 in k5538 in k5247 in k5244 in k5241 in k5238 */
static void C_fcall f_19492(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word ab[12],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_19492,NULL,2,t0,t1);}
t2=(C_word)C_a_i_cons(&a,2,t1,((C_word*)((C_word*)t0)[5])[1]);
t3=C_mutate(((C_word *)((C_word*)t0)[5])+1,t2);
t4=(C_word)C_a_i_list(&a,2,lf[5],((C_word*)t0)[4]);
t5=(C_word)C_a_i_cons(&a,2,t4,((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_19354(t7,((C_word*)((C_word*)t0)[3])[1]);}

/* k19445 in k19563 in k19567 in k19341 in k19335 in parse-sequence-iteration in k18307 in k18304 in k18301 in k18298 in k17861 in k17858 in k17855 in k17852 in k17849 in k17327 in k17324 in k16801 in k16798 in k16795 in k16792 in k16789 in k16786 in k16783 in k16780 in k16777 in k16774 in k16771 in k16768 in k16765 in k16762 in k16759 in k16756 in k16753 in k16750 in k16747 in k16744 in k16741 in k16602 in k16599 in k16596 in k16593 in k16537 in k16534 in k16531 in k16528 in k16525 in k16522 in k16519 in k16516 in k15271 in k15202 in k15009 in k15006 in k14901 in k14850 in k7607 in k7604 in k5838 in k5545 in k5542 in k5538 in k5247 in k5244 in k5241 in k5238 */
static void C_fcall f_19447(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[18],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_19447,NULL,2,t0,t1);}
t2=(C_word)C_a_i_list(&a,2,lf[179],((C_word*)t0)[4]);
t3=(C_word)C_a_i_list(&a,3,lf[316],t1,t2);
t4=(C_word)C_a_i_cons(&a,2,t3,((C_word*)((C_word*)t0)[3])[1]);
t5=C_mutate(((C_word *)((C_word*)t0)[3])+1,t4);
t6=((C_word*)t0)[2];
f_19354(t6,((C_word*)((C_word*)t0)[3])[1]);}

/* k19369 in k19563 in k19567 in k19341 in k19335 in parse-sequence-iteration in k18307 in k18304 in k18301 in k18298 in k17861 in k17858 in k17855 in k17852 in k17849 in k17327 in k17324 in k16801 in k16798 in k16795 in k16792 in k16789 in k16786 in k16783 in k16780 in k16777 in k16774 in k16771 in k16768 in k16765 in k16762 in k16759 in k16756 in k16753 in k16750 in k16747 in k16744 in k16741 in k16602 in k16599 in k16596 in k16593 in k16537 in k16534 in k16531 in k16528 in k16525 in k16522 in k16519 in k16516 in k15271 in k15202 in k15009 in k15006 in k14901 in k14850 in k7607 in k7604 in k5838 in k5545 in k5542 in k5538 in k5247 in k5244 in k5241 in k5238 */
static void C_ccall f_19371(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[11],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_19371,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|10,a[1]=(C_word)f_19374,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],a[7]=t1,a[8]=((C_word*)t0)[7],a[9]=((C_word*)t0)[8],a[10]=((C_word*)t0)[9],tmp=(C_word)a,a+=11,tmp);
C_trace("ChickenBridge.scm: 365  gensym");
t3=C_retrieve(lf[28]);
((C_proc3)C_retrieve_proc(t3))(3,t3,t2,lf[442]);}

/* k19372 in k19369 in k19563 in k19567 in k19341 in k19335 in parse-sequence-iteration in k18307 in k18304 in k18301 in k18298 in k17861 in k17858 in k17855 in k17852 in k17849 in k17327 in k17324 in k16801 in k16798 in k16795 in k16792 in k16789 in k16786 in k16783 in k16780 in k16777 in k16774 in k16771 in k16768 in k16765 in k16762 in k16759 in k16756 in k16753 in k16750 in k16747 in k16744 in k16741 in k16602 in k16599 in k16596 in k16593 in k16537 in k16534 in k16531 in k16528 in k16525 in k16522 in k16519 in k16516 in k15271 in k15202 in k15009 in k15006 in k14901 in k14850 in k7607 in k7604 in k5838 in k5545 in k5542 in k5538 in k5247 in k5244 in k5241 in k5238 */
static void C_ccall f_19374(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[12],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_19374,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|11,a[1]=(C_word)f_19438,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],a[7]=((C_word*)t0)[7],a[8]=((C_word*)t0)[8],a[9]=t1,a[10]=((C_word*)t0)[9],a[11]=((C_word*)t0)[10],tmp=(C_word)a,a+=12,tmp);
C_trace("ChickenBridge.scm: 365  make-binding");
f_18653(t2,((C_word*)t0)[7],C_fix(0));}

/* k19436 in k19372 in k19369 in k19563 in k19567 in k19341 in k19335 in parse-sequence-iteration in k18307 in k18304 in k18301 in k18298 in k17861 in k17858 in k17855 in k17852 in k17849 in k17327 in k17324 in k16801 in k16798 in k16795 in k16792 in k16789 in k16786 in k16783 in k16780 in k16777 in k16774 in k16771 in k16768 in k16765 in k16762 in k16759 in k16756 in k16753 in k16750 in k16747 in k16744 in k16741 in k16602 in k16599 in k16596 in k16593 in k16537 in k16534 in k16531 in k16528 in k16525 in k16522 in k16519 in k16516 in k15271 in k15202 in k15009 in k15006 in k14901 in k14850 in k7607 in k7604 in k5838 in k5545 in k5542 in k5538 in k5247 in k5244 in k5241 in k5238 */
static void C_ccall f_19438(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[15],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_19438,2,t0,t1);}
t2=(C_word)C_a_i_cons(&a,2,t1,((C_word*)((C_word*)t0)[11])[1]);
t3=C_mutate(((C_word *)((C_word*)t0)[11])+1,t2);
t4=(*a=C_CLOSURE_TYPE|11,a[1]=(C_word)f_19434,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],a[7]=((C_word*)t0)[7],a[8]=((C_word*)t0)[8],a[9]=((C_word*)t0)[9],a[10]=((C_word*)t0)[10],a[11]=((C_word*)t0)[11],tmp=(C_word)a,a+=12,tmp);
C_trace("ChickenBridge.scm: 365  make-binding");
f_18653(t4,((C_word*)t0)[9],C_SCHEME_FALSE);}

/* k19432 in k19436 in k19372 in k19369 in k19563 in k19567 in k19341 in k19335 in parse-sequence-iteration in k18307 in k18304 in k18301 in k18298 in k17861 in k17858 in k17855 in k17852 in k17849 in k17327 in k17324 in k16801 in k16798 in k16795 in k16792 in k16789 in k16786 in k16783 in k16780 in k16777 in k16774 in k16771 in k16768 in k16765 in k16762 in k16759 in k16756 in k16753 in k16750 in k16747 in k16744 in k16741 in k16602 in k16599 in k16596 in k16593 in k16537 in k16534 in k16531 in k16528 in k16525 in k16522 in k16519 in k16516 in k15271 in k15202 in k15009 in k15006 in k14901 in k14850 in k7607 in k7604 in k5838 in k5545 in k5542 in k5538 in k5247 in k5244 in k5241 in k5238 */
static void C_ccall f_19434(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word t14;
C_word t15;
C_word t16;
C_word t17;
C_word t18;
C_word t19;
C_word t20;
C_word ab[81],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_19434,2,t0,t1);}
t2=(C_word)C_a_i_cons(&a,2,t1,((C_word*)((C_word*)t0)[11])[1]);
t3=C_mutate(((C_word *)((C_word*)t0)[11])+1,t2);
t4=(C_word)C_a_i_list(&a,2,lf[440],((C_word*)t0)[10]);
t5=(C_word)C_a_i_list(&a,3,lf[14],((C_word*)t0)[9],t4);
t6=(C_word)C_a_i_cons(&a,2,t5,((C_word*)((C_word*)t0)[8])[1]);
t7=C_mutate(((C_word *)((C_word*)t0)[8])+1,t6);
t8=(C_word)C_a_i_list(&a,3,lf[305],C_fix(1),((C_word*)t0)[7]);
t9=(C_word)C_a_i_list(&a,3,lf[14],((C_word*)t0)[7],t8);
t10=(C_word)C_a_i_cons(&a,2,t9,((C_word*)((C_word*)t0)[6])[1]);
t11=C_mutate(((C_word *)((C_word*)t0)[6])+1,t10);
t12=(C_word)C_a_i_list(&a,3,lf[441],((C_word*)t0)[10],((C_word*)t0)[7]);
t13=(C_word)C_a_i_list(&a,3,lf[14],((C_word*)t0)[5],t12);
t14=(C_word)C_a_i_cons(&a,2,t13,((C_word*)((C_word*)t0)[4])[1]);
t15=C_mutate(((C_word *)((C_word*)t0)[4])+1,t14);
t16=(C_word)C_a_i_list(&a,3,lf[322],((C_word*)t0)[7],((C_word*)t0)[9]);
t17=(C_word)C_a_i_list(&a,2,lf[291],t16);
t18=(C_word)C_a_i_cons(&a,2,t17,((C_word*)((C_word*)t0)[3])[1]);
t19=C_mutate(((C_word *)((C_word*)t0)[3])+1,t18);
t20=((C_word*)t0)[2];
f_19354(t20,((C_word*)((C_word*)t0)[3])[1]);}

/* k19352 in k19563 in k19567 in k19341 in k19335 in parse-sequence-iteration in k18307 in k18304 in k18301 in k18298 in k17861 in k17858 in k17855 in k17852 in k17849 in k17327 in k17324 in k16801 in k16798 in k16795 in k16792 in k16789 in k16786 in k16783 in k16780 in k16777 in k16774 in k16771 in k16768 in k16765 in k16762 in k16759 in k16756 in k16753 in k16750 in k16747 in k16744 in k16741 in k16602 in k16599 in k16596 in k16593 in k16537 in k16534 in k16531 in k16528 in k16525 in k16522 in k16519 in k16516 in k15271 in k15202 in k15009 in k15006 in k14901 in k14850 in k7607 in k7604 in k5838 in k5545 in k5542 in k5538 in k5247 in k5244 in k5241 in k5238 */
static void C_fcall f_19354(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[11],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_19354,NULL,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_19361,a[2]=((C_word*)t0)[7],a[3]=((C_word*)t0)[8],tmp=(C_word)a,a+=4,tmp);
t3=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_19365,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=t2,tmp=(C_word)a,a+=7,tmp);
C_trace("ChickenBridge.scm: 365  reverse");
t4=*((C_word*)lf[232]+1);
((C_proc3)C_retrieve_proc(t4))(3,t4,t3,((C_word*)((C_word*)t0)[2])[1]);}

/* k19363 in k19352 in k19563 in k19567 in k19341 in k19335 in parse-sequence-iteration in k18307 in k18304 in k18301 in k18298 in k17861 in k17858 in k17855 in k17852 in k17849 in k17327 in k17324 in k16801 in k16798 in k16795 in k16792 in k16789 in k16786 in k16783 in k16780 in k16777 in k16774 in k16771 in k16768 in k16765 in k16762 in k16759 in k16756 in k16753 in k16750 in k16747 in k16744 in k16741 in k16602 in k16599 in k16596 in k16593 in k16537 in k16534 in k16531 in k16528 in k16525 in k16522 in k16519 in k16516 in k15271 in k15202 in k15009 in k15006 in k14901 in k14850 in k7607 in k7604 in k5838 in k5545 in k5542 in k5538 in k5247 in k5244 in k5241 in k5238 */
static void C_ccall f_19365(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word ab[36],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_19365,2,t0,t1);}
C_trace("ChickenBridge.scm: 365  make-loop-clause");
f_18419(((C_word*)t0)[6],(C_word)C_a_i_list(&a,12,lf[374],lf[406],lf[375],t1,lf[378],((C_word*)((C_word*)t0)[5])[1],lf[377],((C_word*)((C_word*)t0)[4])[1],lf[379],((C_word*)((C_word*)t0)[3])[1],lf[380],((C_word*)((C_word*)t0)[2])[1]));}

/* k19359 in k19352 in k19563 in k19567 in k19341 in k19335 in parse-sequence-iteration in k18307 in k18304 in k18301 in k18298 in k17861 in k17858 in k17855 in k17852 in k17849 in k17327 in k17324 in k16801 in k16798 in k16795 in k16792 in k16789 in k16786 in k16783 in k16780 in k16777 in k16774 in k16771 in k16768 in k16765 in k16762 in k16759 in k16756 in k16753 in k16750 in k16747 in k16744 in k16741 in k16602 in k16599 in k16596 in k16593 in k16537 in k16534 in k16531 in k16528 in k16525 in k16522 in k16519 in k16516 in k15271 in k15202 in k15009 in k15006 in k14901 in k14850 in k7607 in k7604 in k5838 in k5545 in k5542 in k5538 in k5247 in k5244 in k5241 in k5238 */
static void C_ccall f_19361(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 365  values");
C_values(4,0,((C_word*)t0)[3],t1,((C_word*)((C_word*)t0)[2])[1]);}

/* parse-repeat in k18307 in k18304 in k18301 in k18298 in k17861 in k17858 in k17855 in k17852 in k17849 in k17327 in k17324 in k16801 in k16798 in k16795 in k16792 in k16789 in k16786 in k16783 in k16780 in k16777 in k16774 in k16771 in k16768 in k16765 in k16762 in k16759 in k16756 in k16753 in k16750 in k16747 in k16744 in k16741 in k16602 in k16599 in k16596 in k16593 in k16537 in k16534 in k16531 in k16528 in k16525 in k16522 in k16519 in k16516 in k15271 in k15202 in k15009 in k15006 in k14901 in k14850 in k7607 in k7604 in k5838 in k5545 in k5542 in k5538 in k5247 in k5244 in k5241 in k5238 */
static void C_ccall f_19283(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4){
C_word tmp;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word ab[13],*a=ab;
if(c!=5) C_bad_argc_2(c,5,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr5,(void*)f_19283,5,t0,t1,t2,t3,t4);}
t5=(C_word)C_i_cdr(t2);
if(C_truep((C_word)C_i_nullp(t5))){
C_trace("ChickenBridge.scm: 365  loop-error");
f_18659(t1,t4,t2,(C_word)C_a_i_list(&a,1,lf[436]));}
else{
t6=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_19298,a[2]=t4,a[3]=t3,a[4]=t2,a[5]=((C_word)li284),tmp=(C_word)a,a+=6,tmp);
t7=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_19316,a[2]=t2,a[3]=((C_word)li285),tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 365  call-with-values");
C_call_with_values(4,0,t1,t6,t7);}}

/* a19315 in parse-repeat in k18307 in k18304 in k18301 in k18298 in k17861 in k17858 in k17855 in k17852 in k17849 in k17327 in k17324 in k16801 in k16798 in k16795 in k16792 in k16789 in k16786 in k16783 in k16780 in k16777 in k16774 in k16771 in k16768 in k16765 in k16762 in k16759 in k16756 in k16753 in k16750 in k16747 in k16744 in k16741 in k16602 in k16599 in k16596 in k16593 in k16537 in k16534 in k16531 in k16528 in k16525 in k16522 in k16519 in k16516 in k15271 in k15202 in k15009 in k15006 in k14901 in k14850 in k7607 in k7604 in k5838 in k5545 in k5542 in k5538 in k5247 in k5244 in k5241 in k5238 */
static void C_ccall f_19316(C_word c,C_word t0,C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word *a;
if(c!=4) C_bad_argc_2(c,4,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr4,(void*)f_19316,4,t0,t1,t2,t3);}
t4=(C_word)C_i_cddr(((C_word*)t0)[2]);
C_trace("ChickenBridge.scm: 365  values");
C_values(4,0,t1,t2,t4);}

/* a19297 in parse-repeat in k18307 in k18304 in k18301 in k18298 in k17861 in k17858 in k17855 in k17852 in k17849 in k17327 in k17324 in k16801 in k16798 in k16795 in k16792 in k16789 in k16786 in k16783 in k16780 in k16777 in k16774 in k16771 in k16768 in k16765 in k16762 in k16759 in k16756 in k16753 in k16750 in k16747 in k16744 in k16741 in k16602 in k16599 in k16596 in k16593 in k16537 in k16534 in k16531 in k16528 in k16525 in k16522 in k16519 in k16516 in k15271 in k15202 in k15009 in k15006 in k14901 in k14850 in k7607 in k7604 in k5838 in k5545 in k5542 in k5538 in k5247 in k5244 in k5241 in k5238 */
static void C_ccall f_19298(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[6],*a=ab;
if(c!=2) C_bad_argc_2(c,2,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_19298,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_19310,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=t1,a[5]=((C_word*)t0)[4],tmp=(C_word)a,a+=6,tmp);
C_trace("ChickenBridge.scm: 365  gensym");
t3=C_retrieve(lf[28]);
((C_proc3)C_retrieve_proc(t3))(3,t3,t2,lf[437]);}

/* k19308 in a19297 in parse-repeat in k18307 in k18304 in k18301 in k18298 in k17861 in k17858 in k17855 in k17852 in k17849 in k17327 in k17324 in k16801 in k16798 in k16795 in k16792 in k16789 in k16786 in k16783 in k16780 in k16777 in k16774 in k16771 in k16768 in k16765 in k16762 in k16759 in k16756 in k16753 in k16750 in k16747 in k16744 in k16741 in k16602 in k16599 in k16596 in k16593 in k16537 in k16534 in k16531 in k16528 in k16525 in k16522 in k16519 in k16516 in k15271 in k15202 in k15009 in k15006 in k14901 in k14850 in k7607 in k7604 in k5838 in k5545 in k5542 in k5538 in k5247 in k5244 in k5241 in k5238 */
static void C_ccall f_19310(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[12],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_19310,2,t0,t1);}
t2=(C_word)C_i_cadr(((C_word*)t0)[5]);
t3=(C_word)C_a_i_list(&a,4,lf[406],t1,lf[411],t2);
C_trace("ChickenBridge.scm: 365  parse-numerical-for");
t4=C_retrieve2(lf[405],"parse-numerical-for");
f_18901(5,t4,((C_word*)t0)[4],t3,((C_word*)t0)[3],((C_word*)t0)[2]);}

/* parse-numerical-for in k18307 in k18304 in k18301 in k18298 in k17861 in k17858 in k17855 in k17852 in k17849 in k17327 in k17324 in k16801 in k16798 in k16795 in k16792 in k16789 in k16786 in k16783 in k16780 in k16777 in k16774 in k16771 in k16768 in k16765 in k16762 in k16759 in k16756 in k16753 in k16750 in k16747 in k16744 in k16741 in k16602 in k16599 in k16596 in k16593 in k16537 in k16534 in k16531 in k16528 in k16525 in k16522 in k16519 in k16516 in k15271 in k15202 in k15009 in k15006 in k14901 in k14850 in k7607 in k7604 in k5838 in k5545 in k5542 in k5538 in k5247 in k5244 in k5241 in k5238 */
static void C_ccall f_18901(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4){
C_word tmp;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word t14;
C_word t15;
C_word t16;
C_word t17;
C_word t18;
C_word t19;
C_word t20;
C_word t21;
C_word t22;
C_word t23;
C_word t24;
C_word t25;
C_word t26;
C_word t27;
C_word t28;
C_word t29;
C_word t30;
C_word t31;
C_word ab[48],*a=ab;
if(c!=5) C_bad_argc_2(c,5,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr5,(void*)f_18901,5,t0,t1,t2,t3,t4);}
t5=(C_word)C_i_cadr(t2);
t6=(C_word)C_i_cddr(t2);
t7=t6;
t8=(*a=C_VECTOR_TYPE|1,a[1]=t7,tmp=(C_word)a,a+=2,tmp);
t9=C_SCHEME_END_OF_LIST;
t10=(*a=C_VECTOR_TYPE|1,a[1]=t9,tmp=(C_word)a,a+=2,tmp);
t11=C_SCHEME_END_OF_LIST;
t12=(*a=C_VECTOR_TYPE|1,a[1]=t11,tmp=(C_word)a,a+=2,tmp);
t13=C_SCHEME_FALSE;
t14=(*a=C_VECTOR_TYPE|1,a[1]=t13,tmp=(C_word)a,a+=2,tmp);
t15=C_SCHEME_FALSE;
t16=(*a=C_VECTOR_TYPE|1,a[1]=t15,tmp=(C_word)a,a+=2,tmp);
t17=C_SCHEME_FALSE;
t18=(*a=C_VECTOR_TYPE|1,a[1]=t17,tmp=(C_word)a,a+=2,tmp);
t19=C_SCHEME_FALSE;
t20=(*a=C_VECTOR_TYPE|1,a[1]=t19,tmp=(C_word)a,a+=2,tmp);
t21=C_SCHEME_FALSE;
t22=(*a=C_VECTOR_TYPE|1,a[1]=t21,tmp=(C_word)a,a+=2,tmp);
t23=C_SCHEME_FALSE;
t24=(*a=C_VECTOR_TYPE|1,a[1]=t23,tmp=(C_word)a,a+=2,tmp);
t25=C_SCHEME_FALSE;
t26=(*a=C_VECTOR_TYPE|1,a[1]=t25,tmp=(C_word)a,a+=2,tmp);
t27=(*a=C_CLOSURE_TYPE|13,a[1]=(C_word)f_18911,a[2]=t18,a[3]=t16,a[4]=t14,a[5]=t24,a[6]=t10,a[7]=t12,a[8]=t20,a[9]=t8,a[10]=t1,a[11]=t22,a[12]=t5,a[13]=t26,tmp=(C_word)a,a+=14,tmp);
t28=C_SCHEME_UNDEFINED;
t29=(*a=C_VECTOR_TYPE|1,a[1]=t28,tmp=(C_word)a,a+=2,tmp);
t30=C_set_block_item(t29,0,(*a=C_CLOSURE_TYPE|11,a[1]=(C_word)f_19110,a[2]=t22,a[3]=t18,a[4]=t20,a[5]=t2,a[6]=t4,a[7]=t14,a[8]=t16,a[9]=t29,a[10]=t8,a[11]=((C_word)li282),tmp=(C_word)a,a+=12,tmp));
t31=((C_word*)t29)[1];
f_19110(t31,t27,C_SCHEME_FALSE);}

/* do3194 in parse-numerical-for in k18307 in k18304 in k18301 in k18298 in k17861 in k17858 in k17855 in k17852 in k17849 in k17327 in k17324 in k16801 in k16798 in k16795 in k16792 in k16789 in k16786 in k16783 in k16780 in k16777 in k16774 in k16771 in k16768 in k16765 in k16762 in k16759 in k16756 in k16753 in k16750 in k16747 in k16744 in k16741 in k16602 in k16599 in k16596 in k16593 in k16537 in k16534 in k16531 in k16528 in k16525 in k16522 in k16519 in k16516 in k15271 in k15202 in k15009 in k15006 in k14901 in k14850 in k7607 in k7604 in k5838 in k5545 in k5542 in k5538 in k5247 in k5244 in k5241 in k5238 */
static void C_fcall f_19110(C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word ab[15],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_19110,NULL,3,t0,t1,t2);}
t3=(*a=C_VECTOR_TYPE|1,a[1]=t2,tmp=(C_word)a,a+=2,tmp);
t4=(C_word)C_i_nullp(((C_word*)((C_word*)t0)[10])[1]);
t5=(*a=C_CLOSURE_TYPE|12,a[1]=(C_word)f_19120,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],a[7]=((C_word*)t0)[7],a[8]=((C_word*)t0)[8],a[9]=((C_word*)t0)[9],a[10]=t3,a[11]=((C_word*)t0)[10],a[12]=t1,tmp=(C_word)a,a+=13,tmp);
if(C_truep(t4)){
t6=t5;
f_19120(2,t6,t4);}
else{
t6=(C_word)C_i_car(((C_word*)((C_word*)t0)[10])[1]);
C_trace("ChickenBridge.scm: 365  loop-op?");
f_18641(t5,t6,((C_word*)t0)[6]);}}

/* k19118 in do3194 in parse-numerical-for in k18307 in k18304 in k18301 in k18298 in k17861 in k17858 in k17855 in k17852 in k17849 in k17327 in k17324 in k16801 in k16798 in k16795 in k16792 in k16789 in k16786 in k16783 in k16780 in k16777 in k16774 in k16771 in k16768 in k16765 in k16762 in k16759 in k16756 in k16753 in k16750 in k16747 in k16744 in k16741 in k16602 in k16599 in k16596 in k16593 in k16537 in k16534 in k16531 in k16528 in k16525 in k16522 in k16519 in k16516 in k15271 in k15202 in k15009 in k15006 in k14901 in k14850 in k7607 in k7604 in k5838 in k5545 in k5542 in k5538 in k5247 in k5244 in k5241 in k5238 */
static void C_ccall f_19120(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word ab[16],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_19120,2,t0,t1);}
if(C_truep(t1)){
t2=((C_word*)t0)[12];
((C_proc2)(void*)(*((C_word*)t2+1)))(2,t2,C_SCHEME_UNDEFINED);}
else{
t2=(C_word)C_i_car(((C_word*)((C_word*)t0)[11])[1]);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[11])[1]);
t4=C_mutate(((C_word *)((C_word*)t0)[11])+1,t3);
t5=C_mutate(((C_word *)((C_word*)t0)[10])+1,t2);
t6=(*a=C_CLOSURE_TYPE|12,a[1]=(C_word)f_19131,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],a[7]=((C_word*)t0)[7],a[8]=((C_word*)t0)[11],a[9]=((C_word*)t0)[8],a[10]=((C_word*)t0)[12],a[11]=((C_word*)t0)[9],a[12]=((C_word*)t0)[10],tmp=(C_word)a,a+=13,tmp);
if(C_truep((C_word)C_i_nullp(((C_word*)((C_word*)t0)[11])[1]))){
C_trace("ChickenBridge.scm: 365  loop-error");
f_18659(t6,((C_word*)t0)[6],((C_word*)t0)[5],(C_word)C_a_i_list(&a,1,lf[434]));}
else{
t7=t6;
f_19131(2,t7,C_SCHEME_UNDEFINED);}}}

/* k19129 in k19118 in do3194 in parse-numerical-for in k18307 in k18304 in k18301 in k18298 in k17861 in k17858 in k17855 in k17852 in k17849 in k17327 in k17324 in k16801 in k16798 in k16795 in k16792 in k16789 in k16786 in k16783 in k16780 in k16777 in k16774 in k16771 in k16768 in k16765 in k16762 in k16759 in k16756 in k16753 in k16750 in k16747 in k16744 in k16741 in k16602 in k16599 in k16596 in k16593 in k16537 in k16534 in k16531 in k16528 in k16525 in k16522 in k16519 in k16516 in k15271 in k15202 in k15009 in k15006 in k14901 in k14850 in k7607 in k7604 in k5838 in k5545 in k5542 in k5538 in k5247 in k5244 in k5241 in k5238 */
static void C_ccall f_19131(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word t14;
C_word t15;
C_word t16;
C_word t17;
C_word ab[132],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_19131,2,t0,t1);}
t2=((C_word*)((C_word*)t0)[12])[1];
t3=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_19134,a[2]=((C_word*)t0)[12],a[3]=((C_word*)t0)[10],a[4]=((C_word*)t0)[11],tmp=(C_word)a,a+=5,tmp);
t4=(C_word)C_eqp(t2,lf[413]);
t5=(C_truep(t4)?t4:(C_word)C_eqp(t2,lf[409]));
if(C_truep(t5)){
t6=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_19146,a[2]=t3,a[3]=((C_word*)t0)[7],a[4]=((C_word*)t0)[8],a[5]=((C_word*)t0)[12],a[6]=((C_word*)t0)[9],tmp=(C_word)a,a+=7,tmp);
if(C_truep(((C_word*)((C_word*)t0)[9])[1])){
C_trace("ChickenBridge.scm: 365  loop-error");
f_18659(t6,((C_word*)t0)[6],((C_word*)t0)[5],(C_word)C_a_i_list(&a,5,lf[414],((C_word*)((C_word*)t0)[12])[1],lf[415],((C_word*)((C_word*)t0)[9])[1],lf[416]));}
else{
t7=t6;
f_19146(2,t7,C_SCHEME_UNDEFINED);}}
else{
t6=(C_word)C_eqp(t2,lf[411]);
if(C_truep(t6)){
t7=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_19167,a[2]=t3,a[3]=((C_word*)t0)[12],a[4]=((C_word*)t0)[3],a[5]=((C_word*)t0)[4],a[6]=((C_word*)t0)[8],tmp=(C_word)a,a+=7,tmp);
if(C_truep(((C_word*)((C_word*)t0)[3])[1])){
C_trace("ChickenBridge.scm: 365  loop-error");
f_18659(t7,((C_word*)t0)[6],((C_word*)t0)[5],(C_word)C_a_i_list(&a,5,lf[417],((C_word*)((C_word*)t0)[12])[1],lf[418],((C_word*)((C_word*)t0)[3])[1],lf[419]));}
else{
t8=t7;
f_19167(2,t8,C_SCHEME_UNDEFINED);}}
else{
t7=(C_word)C_eqp(t2,lf[420]);
if(C_truep(t7)){
t8=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_19188,a[2]=t3,a[3]=((C_word*)t0)[12],a[4]=((C_word*)t0)[3],a[5]=((C_word*)t0)[4],a[6]=((C_word*)t0)[8],tmp=(C_word)a,a+=7,tmp);
if(C_truep(((C_word*)((C_word*)t0)[3])[1])){
C_trace("ChickenBridge.scm: 365  loop-error");
f_18659(t8,((C_word*)t0)[6],((C_word*)t0)[5],(C_word)C_a_i_list(&a,5,lf[421],((C_word*)((C_word*)t0)[12])[1],lf[422],((C_word*)((C_word*)t0)[3])[1],lf[423]));}
else{
t9=t8;
f_19188(2,t9,C_SCHEME_UNDEFINED);}}
else{
t8=(C_word)C_eqp(t2,lf[410]);
if(C_truep(t8)){
t9=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_19209,a[2]=t3,a[3]=((C_word*)t0)[12],a[4]=((C_word*)t0)[3],a[5]=((C_word*)t0)[4],a[6]=((C_word*)t0)[8],tmp=(C_word)a,a+=7,tmp);
if(C_truep(((C_word*)((C_word*)t0)[3])[1])){
C_trace("ChickenBridge.scm: 365  loop-error");
f_18659(t9,((C_word*)t0)[6],((C_word*)t0)[5],(C_word)C_a_i_list(&a,5,lf[424],((C_word*)((C_word*)t0)[12])[1],lf[425],((C_word*)((C_word*)t0)[3])[1],lf[426]));}
else{
t10=t9;
f_19209(2,t10,C_SCHEME_UNDEFINED);}}
else{
t9=(C_word)C_eqp(t2,lf[412]);
if(C_truep(t9)){
t10=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_19230,a[2]=t3,a[3]=((C_word*)t0)[12],a[4]=((C_word*)t0)[3],a[5]=((C_word*)t0)[4],a[6]=((C_word*)t0)[8],tmp=(C_word)a,a+=7,tmp);
if(C_truep(((C_word*)((C_word*)t0)[3])[1])){
C_trace("ChickenBridge.scm: 365  loop-error");
f_18659(t10,((C_word*)t0)[6],((C_word*)t0)[5],(C_word)C_a_i_list(&a,5,lf[427],((C_word*)((C_word*)t0)[12])[1],lf[428],((C_word*)((C_word*)t0)[3])[1],lf[429]));}
else{
t11=t10;
f_19230(2,t11,C_SCHEME_UNDEFINED);}}
else{
t10=(C_word)C_eqp(t2,lf[430]);
if(C_truep(t10)){
t11=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_19251,a[2]=t3,a[3]=((C_word*)t0)[2],a[4]=((C_word*)t0)[8],tmp=(C_word)a,a+=5,tmp);
if(C_truep(((C_word*)((C_word*)t0)[2])[1])){
C_trace("ChickenBridge.scm: 365  loop-error");
f_18659(t11,((C_word*)t0)[6],((C_word*)t0)[5],(C_word)C_a_i_list(&a,1,lf[431]));}
else{
t12=t11;
f_19251(2,t12,C_SCHEME_UNDEFINED);}}
else{
C_trace("ChickenBridge.scm: 365  loop-error");
f_18659(t3,((C_word*)t0)[6],((C_word*)t0)[5],(C_word)C_a_i_list(&a,3,lf[432],((C_word*)((C_word*)t0)[12])[1],lf[433]));}}}}}}}

/* k19249 in k19129 in k19118 in do3194 in parse-numerical-for in k18307 in k18304 in k18301 in k18298 in k17861 in k17858 in k17855 in k17852 in k17849 in k17327 in k17324 in k16801 in k16798 in k16795 in k16792 in k16789 in k16786 in k16783 in k16780 in k16777 in k16774 in k16771 in k16768 in k16765 in k16762 in k16759 in k16756 in k16753 in k16750 in k16747 in k16744 in k16741 in k16602 in k16599 in k16596 in k16593 in k16537 in k16534 in k16531 in k16528 in k16525 in k16522 in k16519 in k16516 in k15271 in k15202 in k15009 in k15006 in k14901 in k14850 in k7607 in k7604 in k5838 in k5545 in k5542 in k5538 in k5247 in k5244 in k5241 in k5238 */
static void C_ccall f_19251(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word *a;
t2=(C_word)C_i_car(((C_word*)((C_word*)t0)[4])[1]);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
t4=C_mutate(((C_word *)((C_word*)t0)[4])+1,t3);
t5=C_mutate(((C_word *)((C_word*)t0)[3])+1,t2);
t6=((C_word*)t0)[2];
f_19134(2,t6,t5);}

/* k19228 in k19129 in k19118 in do3194 in parse-numerical-for in k18307 in k18304 in k18301 in k18298 in k17861 in k17858 in k17855 in k17852 in k17849 in k17327 in k17324 in k16801 in k16798 in k16795 in k16792 in k16789 in k16786 in k16783 in k16780 in k16777 in k16774 in k16771 in k16768 in k16765 in k16762 in k16759 in k16756 in k16753 in k16750 in k16747 in k16744 in k16741 in k16602 in k16599 in k16596 in k16593 in k16537 in k16534 in k16531 in k16528 in k16525 in k16522 in k16519 in k16516 in k15271 in k15202 in k15009 in k15006 in k14901 in k14850 in k7607 in k7604 in k5838 in k5545 in k5542 in k5538 in k5247 in k5244 in k5241 in k5238 */
static void C_ccall f_19230(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=(C_word)C_i_car(((C_word*)((C_word*)t0)[6])[1]);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[6])[1]);
t4=C_mutate(((C_word *)((C_word*)t0)[6])+1,t3);
t5=C_mutate(((C_word *)((C_word*)t0)[5])+1,t2);
t6=C_mutate(((C_word *)((C_word*)t0)[4])+1,((C_word*)((C_word*)t0)[3])[1]);
t7=((C_word*)t0)[2];
f_19134(2,t7,t6);}

/* k19207 in k19129 in k19118 in do3194 in parse-numerical-for in k18307 in k18304 in k18301 in k18298 in k17861 in k17858 in k17855 in k17852 in k17849 in k17327 in k17324 in k16801 in k16798 in k16795 in k16792 in k16789 in k16786 in k16783 in k16780 in k16777 in k16774 in k16771 in k16768 in k16765 in k16762 in k16759 in k16756 in k16753 in k16750 in k16747 in k16744 in k16741 in k16602 in k16599 in k16596 in k16593 in k16537 in k16534 in k16531 in k16528 in k16525 in k16522 in k16519 in k16516 in k15271 in k15202 in k15009 in k15006 in k14901 in k14850 in k7607 in k7604 in k5838 in k5545 in k5542 in k5538 in k5247 in k5244 in k5241 in k5238 */
static void C_ccall f_19209(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=(C_word)C_i_car(((C_word*)((C_word*)t0)[6])[1]);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[6])[1]);
t4=C_mutate(((C_word *)((C_word*)t0)[6])+1,t3);
t5=C_mutate(((C_word *)((C_word*)t0)[5])+1,t2);
t6=C_mutate(((C_word *)((C_word*)t0)[4])+1,((C_word*)((C_word*)t0)[3])[1]);
t7=((C_word*)t0)[2];
f_19134(2,t7,t6);}

/* k19186 in k19129 in k19118 in do3194 in parse-numerical-for in k18307 in k18304 in k18301 in k18298 in k17861 in k17858 in k17855 in k17852 in k17849 in k17327 in k17324 in k16801 in k16798 in k16795 in k16792 in k16789 in k16786 in k16783 in k16780 in k16777 in k16774 in k16771 in k16768 in k16765 in k16762 in k16759 in k16756 in k16753 in k16750 in k16747 in k16744 in k16741 in k16602 in k16599 in k16596 in k16593 in k16537 in k16534 in k16531 in k16528 in k16525 in k16522 in k16519 in k16516 in k15271 in k15202 in k15009 in k15006 in k14901 in k14850 in k7607 in k7604 in k5838 in k5545 in k5542 in k5538 in k5247 in k5244 in k5241 in k5238 */
static void C_ccall f_19188(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=(C_word)C_i_car(((C_word*)((C_word*)t0)[6])[1]);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[6])[1]);
t4=C_mutate(((C_word *)((C_word*)t0)[6])+1,t3);
t5=C_mutate(((C_word *)((C_word*)t0)[5])+1,t2);
t6=C_mutate(((C_word *)((C_word*)t0)[4])+1,((C_word*)((C_word*)t0)[3])[1]);
t7=((C_word*)t0)[2];
f_19134(2,t7,t6);}

/* k19165 in k19129 in k19118 in do3194 in parse-numerical-for in k18307 in k18304 in k18301 in k18298 in k17861 in k17858 in k17855 in k17852 in k17849 in k17327 in k17324 in k16801 in k16798 in k16795 in k16792 in k16789 in k16786 in k16783 in k16780 in k16777 in k16774 in k16771 in k16768 in k16765 in k16762 in k16759 in k16756 in k16753 in k16750 in k16747 in k16744 in k16741 in k16602 in k16599 in k16596 in k16593 in k16537 in k16534 in k16531 in k16528 in k16525 in k16522 in k16519 in k16516 in k15271 in k15202 in k15009 in k15006 in k14901 in k14850 in k7607 in k7604 in k5838 in k5545 in k5542 in k5538 in k5247 in k5244 in k5241 in k5238 */
static void C_ccall f_19167(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=(C_word)C_i_car(((C_word*)((C_word*)t0)[6])[1]);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[6])[1]);
t4=C_mutate(((C_word *)((C_word*)t0)[6])+1,t3);
t5=C_mutate(((C_word *)((C_word*)t0)[5])+1,t2);
t6=C_mutate(((C_word *)((C_word*)t0)[4])+1,((C_word*)((C_word*)t0)[3])[1]);
t7=((C_word*)t0)[2];
f_19134(2,t7,t6);}

/* k19144 in k19129 in k19118 in do3194 in parse-numerical-for in k18307 in k18304 in k18301 in k18298 in k17861 in k17858 in k17855 in k17852 in k17849 in k17327 in k17324 in k16801 in k16798 in k16795 in k16792 in k16789 in k16786 in k16783 in k16780 in k16777 in k16774 in k16771 in k16768 in k16765 in k16762 in k16759 in k16756 in k16753 in k16750 in k16747 in k16744 in k16741 in k16602 in k16599 in k16596 in k16593 in k16537 in k16534 in k16531 in k16528 in k16525 in k16522 in k16519 in k16516 in k15271 in k15202 in k15009 in k15006 in k14901 in k14850 in k7607 in k7604 in k5838 in k5545 in k5542 in k5538 in k5247 in k5244 in k5241 in k5238 */
static void C_ccall f_19146(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,((C_word*)((C_word*)t0)[5])[1]);
t3=(C_word)C_i_car(((C_word*)((C_word*)t0)[4])[1]);
t4=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
t5=C_mutate(((C_word *)((C_word*)t0)[4])+1,t4);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t3);
t7=((C_word*)t0)[2];
f_19134(2,t7,t6);}

/* k19132 in k19129 in k19118 in do3194 in parse-numerical-for in k18307 in k18304 in k18301 in k18298 in k17861 in k17858 in k17855 in k17852 in k17849 in k17327 in k17324 in k16801 in k16798 in k16795 in k16792 in k16789 in k16786 in k16783 in k16780 in k16777 in k16774 in k16771 in k16768 in k16765 in k16762 in k16759 in k16756 in k16753 in k16750 in k16747 in k16744 in k16741 in k16602 in k16599 in k16596 in k16593 in k16537 in k16534 in k16531 in k16528 in k16525 in k16522 in k16519 in k16516 in k15271 in k15202 in k15009 in k15006 in k14901 in k14850 in k7607 in k7604 in k5838 in k5545 in k5542 in k5538 in k5247 in k5244 in k5241 in k5238 */
static void C_ccall f_19134(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
t2=((C_word*)((C_word*)t0)[4])[1];
f_19110(t2,((C_word*)t0)[3],((C_word*)((C_word*)t0)[2])[1]);}

/* k18909 in parse-numerical-for in k18307 in k18304 in k18301 in k18298 in k17861 in k17858 in k17855 in k17852 in k17849 in k17327 in k17324 in k16801 in k16798 in k16795 in k16792 in k16789 in k16786 in k16783 in k16780 in k16777 in k16774 in k16771 in k16768 in k16765 in k16762 in k16759 in k16756 in k16753 in k16750 in k16747 in k16744 in k16741 in k16602 in k16599 in k16596 in k16593 in k16537 in k16534 in k16531 in k16528 in k16525 in k16522 in k16519 in k16516 in k15271 in k15202 in k15009 in k15006 in k14901 in k14850 in k7607 in k7604 in k5838 in k5545 in k5542 in k5538 in k5247 in k5244 in k5241 in k5238 */
static void C_ccall f_18911(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[14],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_18911,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|13,a[1]=(C_word)f_18914,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],a[7]=((C_word*)t0)[7],a[8]=((C_word*)t0)[8],a[9]=((C_word*)t0)[9],a[10]=((C_word*)t0)[10],a[11]=((C_word*)t0)[11],a[12]=((C_word*)t0)[12],a[13]=((C_word*)t0)[13],tmp=(C_word)a,a+=14,tmp);
t3=((C_word*)((C_word*)t0)[3])[1];
if(C_truep(t3)){
t4=t2;
f_18914(t4,C_SCHEME_UNDEFINED);}
else{
t4=C_mutate(((C_word *)((C_word*)t0)[3])+1,lf[413]);
t5=t2;
f_18914(t5,t4);}}

/* k18912 in k18909 in parse-numerical-for in k18307 in k18304 in k18301 in k18298 in k17861 in k17858 in k17855 in k17852 in k17849 in k17327 in k17324 in k16801 in k16798 in k16795 in k16792 in k16789 in k16786 in k16783 in k16780 in k16777 in k16774 in k16771 in k16768 in k16765 in k16762 in k16759 in k16756 in k16753 in k16750 in k16747 in k16744 in k16741 in k16602 in k16599 in k16596 in k16593 in k16537 in k16534 in k16531 in k16528 in k16525 in k16522 in k16519 in k16516 in k15271 in k15202 in k15009 in k15006 in k14901 in k14850 in k7607 in k7604 in k5838 in k5545 in k5542 in k5538 in k5247 in k5244 in k5241 in k5238 */
static void C_fcall f_18914(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[18],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_18914,NULL,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|11,a[1]=(C_word)f_18917,a[2]=((C_word*)t0)[4],a[3]=((C_word*)t0)[5],a[4]=((C_word*)t0)[6],a[5]=((C_word*)t0)[7],a[6]=((C_word*)t0)[8],a[7]=((C_word*)t0)[9],a[8]=((C_word*)t0)[10],a[9]=((C_word*)t0)[11],a[10]=((C_word*)t0)[12],a[11]=((C_word*)t0)[13],tmp=(C_word)a,a+=12,tmp);
t3=(C_word)C_eqp(((C_word*)((C_word*)t0)[3])[1],lf[409]);
t4=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_19077,a[2]=t2,a[3]=((C_word*)t0)[5],a[4]=((C_word*)t0)[2],a[5]=((C_word*)t0)[13],tmp=(C_word)a,a+=6,tmp);
if(C_truep(t3)){
t5=t4;
f_19077(t5,t3);}
else{
t5=(C_word)C_eqp(((C_word*)((C_word*)t0)[2])[1],lf[412]);
t6=t4;
f_19077(t6,(C_truep(t5)?t5:(C_word)C_eqp(((C_word*)((C_word*)t0)[2])[1],lf[410])));}}

/* k19075 in k18912 in k18909 in parse-numerical-for in k18307 in k18304 in k18301 in k18298 in k17861 in k17858 in k17855 in k17852 in k17849 in k17327 in k17324 in k16801 in k16798 in k16795 in k16792 in k16789 in k16786 in k16783 in k16780 in k16777 in k16774 in k16771 in k16768 in k16765 in k16762 in k16759 in k16756 in k16753 in k16750 in k16747 in k16744 in k16741 in k16602 in k16599 in k16596 in k16593 in k16537 in k16534 in k16531 in k16528 in k16525 in k16522 in k16519 in k16516 in k15271 in k15202 in k15009 in k15006 in k14901 in k14850 in k7607 in k7604 in k5838 in k5545 in k5542 in k5538 in k5247 in k5244 in k5241 in k5238 */
static void C_fcall f_19077(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word *a;
if(C_truep(t1)){
t2=C_mutate(((C_word *)((C_word*)t0)[5])+1,lf[321]);
t3=(C_word)C_eqp(((C_word*)((C_word*)t0)[4])[1],lf[410]);
if(C_truep(t3)){
t4=C_mutate(((C_word *)((C_word*)t0)[3])+1,lf[320]);
t5=((C_word*)t0)[2];
f_18917(t5,t4);}
else{
t4=C_mutate(((C_word *)((C_word*)t0)[3])+1,lf[322]);
t5=((C_word*)t0)[2];
f_18917(t5,t4);}}
else{
t2=C_mutate(((C_word *)((C_word*)t0)[5])+1,lf[305]);
t3=(C_word)C_eqp(((C_word*)((C_word*)t0)[4])[1],lf[411]);
if(C_truep(t3)){
t4=C_mutate(((C_word *)((C_word*)t0)[3])+1,lf[313]);
t5=((C_word*)t0)[2];
f_18917(t5,t4);}
else{
t4=C_mutate(((C_word *)((C_word*)t0)[3])+1,lf[319]);
t5=((C_word*)t0)[2];
f_18917(t5,t4);}}}

/* k18915 in k18912 in k18909 in parse-numerical-for in k18307 in k18304 in k18301 in k18298 in k17861 in k17858 in k17855 in k17852 in k17849 in k17327 in k17324 in k16801 in k16798 in k16795 in k16792 in k16789 in k16786 in k16783 in k16780 in k16777 in k16774 in k16771 in k16768 in k16765 in k16762 in k16759 in k16756 in k16753 in k16750 in k16747 in k16744 in k16741 in k16602 in k16599 in k16596 in k16593 in k16537 in k16534 in k16531 in k16528 in k16525 in k16522 in k16519 in k16516 in k15271 in k15202 in k15009 in k15006 in k14901 in k14850 in k7607 in k7604 in k5838 in k5545 in k5542 in k5538 in k5247 in k5244 in k5241 in k5238 */
static void C_fcall f_18917(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word ab[22],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_18917,NULL,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|10,a[1]=(C_word)f_18920,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],a[7]=((C_word*)t0)[8],a[8]=((C_word*)t0)[9],a[9]=((C_word*)t0)[10],a[10]=((C_word*)t0)[11],tmp=(C_word)a,a+=11,tmp);
t3=(C_word)C_i_not(((C_word*)((C_word*)t0)[2])[1]);
t4=(C_truep(t3)?t3:(C_word)C_i_numberp(((C_word*)((C_word*)t0)[2])[1]));
if(C_truep(t4)){
t5=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_19048,a[2]=t2,a[3]=((C_word*)t0)[4],tmp=(C_word)a,a+=4,tmp);
t6=((C_word*)((C_word*)t0)[2])[1];
t7=(C_truep(t6)?t6:C_fix(0));
C_trace("ChickenBridge.scm: 365  make-binding");
f_18653(t5,((C_word*)t0)[10],t7);}
else{
t5=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_19068,a[2]=t2,a[3]=((C_word*)t0)[5],a[4]=((C_word*)t0)[2],a[5]=((C_word*)t0)[10],a[6]=((C_word*)t0)[4],tmp=(C_word)a,a+=7,tmp);
C_trace("ChickenBridge.scm: 365  make-binding");
f_18653(t5,((C_word*)t0)[10],C_SCHEME_FALSE);}}

/* k19066 in k18915 in k18912 in k18909 in parse-numerical-for in k18307 in k18304 in k18301 in k18298 in k17861 in k17858 in k17855 in k17852 in k17849 in k17327 in k17324 in k16801 in k16798 in k16795 in k16792 in k16789 in k16786 in k16783 in k16780 in k16777 in k16774 in k16771 in k16768 in k16765 in k16762 in k16759 in k16756 in k16753 in k16750 in k16747 in k16744 in k16741 in k16602 in k16599 in k16596 in k16593 in k16537 in k16534 in k16531 in k16528 in k16525 in k16522 in k16519 in k16516 in k15271 in k15202 in k15009 in k15006 in k14901 in k14850 in k7607 in k7604 in k5838 in k5545 in k5542 in k5538 in k5247 in k5244 in k5241 in k5238 */
static void C_ccall f_19068(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word ab[15],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_19068,2,t0,t1);}
t2=(C_word)C_a_i_cons(&a,2,t1,((C_word*)((C_word*)t0)[6])[1]);
t3=C_mutate(((C_word *)((C_word*)t0)[6])+1,t2);
t4=(C_word)C_a_i_list(&a,3,lf[14],((C_word*)t0)[5],((C_word*)((C_word*)t0)[4])[1]);
t5=(C_word)C_a_i_cons(&a,2,t4,((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_18920(t7,((C_word*)((C_word*)t0)[3])[1]);}

/* k19046 in k18915 in k18912 in k18909 in parse-numerical-for in k18307 in k18304 in k18301 in k18298 in k17861 in k17858 in k17855 in k17852 in k17849 in k17327 in k17324 in k16801 in k16798 in k16795 in k16792 in k16789 in k16786 in k16783 in k16780 in k16777 in k16774 in k16771 in k16768 in k16765 in k16762 in k16759 in k16756 in k16753 in k16750 in k16747 in k16744 in k16741 in k16602 in k16599 in k16596 in k16593 in k16537 in k16534 in k16531 in k16528 in k16525 in k16522 in k16519 in k16516 in k15271 in k15202 in k15009 in k15006 in k14901 in k14850 in k7607 in k7604 in k5838 in k5545 in k5542 in k5538 in k5247 in k5244 in k5241 in k5238 */
static void C_ccall f_19048(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[3],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_19048,2,t0,t1);}
t2=(C_word)C_a_i_cons(&a,2,t1,((C_word*)((C_word*)t0)[3])[1]);
t3=C_mutate(((C_word *)((C_word*)t0)[3])+1,t2);
t4=((C_word*)t0)[2];
f_18920(t4,((C_word*)((C_word*)t0)[3])[1]);}

/* k18918 in k18915 in k18912 in k18909 in parse-numerical-for in k18307 in k18304 in k18301 in k18298 in k17861 in k17858 in k17855 in k17852 in k17849 in k17327 in k17324 in k16801 in k16798 in k16795 in k16792 in k16789 in k16786 in k16783 in k16780 in k16777 in k16774 in k16771 in k16768 in k16765 in k16762 in k16759 in k16756 in k16753 in k16750 in k16747 in k16744 in k16741 in k16602 in k16599 in k16596 in k16593 in k16537 in k16534 in k16531 in k16528 in k16525 in k16522 in k16519 in k16516 in k15271 in k15202 in k15009 in k15006 in k14901 in k14850 in k7607 in k7604 in k5838 in k5545 in k5542 in k5538 in k5247 in k5244 in k5241 in k5238 */
static void C_fcall f_18920(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[17],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_18920,NULL,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|10,a[1]=(C_word)f_18923,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],a[7]=((C_word*)t0)[7],a[8]=((C_word*)t0)[8],a[9]=((C_word*)t0)[9],a[10]=((C_word*)t0)[10],tmp=(C_word)a,a+=11,tmp);
t3=((C_word*)((C_word*)t0)[8])[1];
if(C_truep(t3)){
if(C_truep((C_word)C_i_numberp(((C_word*)((C_word*)t0)[8])[1]))){
t4=t2;
f_18923(t4,C_SCHEME_UNDEFINED);}
else{
t4=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_19013,a[2]=t2,a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[8],a[5]=((C_word*)t0)[3],tmp=(C_word)a,a+=6,tmp);
C_trace("ChickenBridge.scm: 365  gensym");
t5=C_retrieve(lf[28]);
((C_proc3)C_retrieve_proc(t5))(3,t5,t4,lf[408]);}}
else{
t4=C_set_block_item(((C_word*)t0)[8],0,C_fix(1));
t5=t2;
f_18923(t5,t4);}}

/* k19011 in k18918 in k18915 in k18912 in k18909 in parse-numerical-for in k18307 in k18304 in k18301 in k18298 in k17861 in k17858 in k17855 in k17852 in k17849 in k17327 in k17324 in k16801 in k16798 in k16795 in k16792 in k16789 in k16786 in k16783 in k16780 in k16777 in k16774 in k16771 in k16768 in k16765 in k16762 in k16759 in k16756 in k16753 in k16750 in k16747 in k16744 in k16741 in k16602 in k16599 in k16596 in k16593 in k16537 in k16534 in k16531 in k16528 in k16525 in k16522 in k16519 in k16516 in k15271 in k15202 in k15009 in k15006 in k14901 in k14850 in k7607 in k7604 in k5838 in k5545 in k5542 in k5538 in k5247 in k5244 in k5241 in k5238 */
static void C_ccall f_19013(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_19013,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_19030,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=t1,a[6]=((C_word*)t0)[5],tmp=(C_word)a,a+=7,tmp);
C_trace("ChickenBridge.scm: 365  make-binding");
f_18653(t2,t1,C_SCHEME_FALSE);}

/* k19028 in k19011 in k18918 in k18915 in k18912 in k18909 in parse-numerical-for in k18307 in k18304 in k18301 in k18298 in k17861 in k17858 in k17855 in k17852 in k17849 in k17327 in k17324 in k16801 in k16798 in k16795 in k16792 in k16789 in k16786 in k16783 in k16780 in k16777 in k16774 in k16771 in k16768 in k16765 in k16762 in k16759 in k16756 in k16753 in k16750 in k16747 in k16744 in k16741 in k16602 in k16599 in k16596 in k16593 in k16537 in k16534 in k16531 in k16528 in k16525 in k16522 in k16519 in k16516 in k15271 in k15202 in k15009 in k15006 in k14901 in k14850 in k7607 in k7604 in k5838 in k5545 in k5542 in k5538 in k5247 in k5244 in k5241 in k5238 */
static void C_ccall f_19030(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word ab[15],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_19030,2,t0,t1);}
t2=(C_word)C_a_i_cons(&a,2,t1,((C_word*)((C_word*)t0)[6])[1]);
t3=C_mutate(((C_word *)((C_word*)t0)[6])+1,t2);
t4=(C_word)C_a_i_list(&a,3,lf[14],((C_word*)t0)[5],((C_word*)((C_word*)t0)[4])[1]);
t5=(C_word)C_a_i_cons(&a,2,t4,((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=C_mutate(((C_word *)((C_word*)t0)[4])+1,((C_word*)t0)[5]);
t8=((C_word*)t0)[2];
f_18923(t8,t7);}

/* k18921 in k18918 in k18915 in k18912 in k18909 in parse-numerical-for in k18307 in k18304 in k18301 in k18298 in k17861 in k17858 in k17855 in k17852 in k17849 in k17327 in k17324 in k16801 in k16798 in k16795 in k16792 in k16789 in k16786 in k16783 in k16780 in k16777 in k16774 in k16771 in k16768 in k16765 in k16762 in k16759 in k16756 in k16753 in k16750 in k16747 in k16744 in k16741 in k16602 in k16599 in k16596 in k16593 in k16537 in k16534 in k16531 in k16528 in k16525 in k16522 in k16519 in k16516 in k15271 in k15202 in k15009 in k15006 in k14901 in k14850 in k7607 in k7604 in k5838 in k5545 in k5542 in k5538 in k5247 in k5244 in k5241 in k5238 */
static void C_fcall f_18923(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word ab[34],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_18923,NULL,2,t0,t1);}
t2=(C_word)C_a_i_list(&a,3,((C_word*)((C_word*)t0)[10])[1],((C_word*)t0)[9],((C_word*)((C_word*)t0)[8])[1]);
t3=(C_word)C_a_i_list(&a,3,lf[14],((C_word*)t0)[9],t2);
t4=C_mutate(((C_word *)((C_word*)t0)[8])+1,t3);
t5=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_18930,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[8],a[6]=((C_word*)t0)[6],a[7]=((C_word*)t0)[7],tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)((C_word*)t0)[5])[1])){
t6=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_18962,a[2]=((C_word*)t0)[4],a[3]=((C_word*)t0)[3],a[4]=t5,a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[9],a[7]=((C_word*)t0)[2],tmp=(C_word)a,a+=8,tmp);
C_trace("ChickenBridge.scm: 365  gensym");
t7=C_retrieve(lf[28]);
((C_proc3)C_retrieve_proc(t7))(3,t7,t6,lf[407]);}
else{
t6=t5;
f_18930(t6,C_SCHEME_UNDEFINED);}}

/* k18960 in k18921 in k18918 in k18915 in k18912 in k18909 in parse-numerical-for in k18307 in k18304 in k18301 in k18298 in k17861 in k17858 in k17855 in k17852 in k17849 in k17327 in k17324 in k16801 in k16798 in k16795 in k16792 in k16789 in k16786 in k16783 in k16780 in k16777 in k16774 in k16771 in k16768 in k16765 in k16762 in k16759 in k16756 in k16753 in k16750 in k16747 in k16744 in k16741 in k16602 in k16599 in k16596 in k16593 in k16537 in k16534 in k16531 in k16528 in k16525 in k16522 in k16519 in k16516 in k15271 in k15202 in k15009 in k15006 in k14901 in k14850 in k7607 in k7604 in k5838 in k5545 in k5542 in k5538 in k5247 in k5244 in k5241 in k5238 */
static void C_ccall f_18962(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[18],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_18962,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_18965,a[2]=((C_word*)t0)[4],a[3]=((C_word*)t0)[5],a[4]=t1,a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
if(C_truep((C_word)C_i_numberp(((C_word*)((C_word*)t0)[5])[1]))){
t3=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_18980,a[2]=t2,a[3]=((C_word*)t0)[3],tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 365  make-binding");
f_18653(t3,t1,((C_word*)((C_word*)t0)[5])[1]);}
else{
t3=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_18996,a[2]=t2,a[3]=((C_word*)t0)[2],a[4]=((C_word*)t0)[5],a[5]=t1,a[6]=((C_word*)t0)[3],tmp=(C_word)a,a+=7,tmp);
C_trace("ChickenBridge.scm: 365  make-binding");
f_18653(t3,t1,C_SCHEME_FALSE);}}

/* k18994 in k18960 in k18921 in k18918 in k18915 in k18912 in k18909 in parse-numerical-for in k18307 in k18304 in k18301 in k18298 in k17861 in k17858 in k17855 in k17852 in k17849 in k17327 in k17324 in k16801 in k16798 in k16795 in k16792 in k16789 in k16786 in k16783 in k16780 in k16777 in k16774 in k16771 in k16768 in k16765 in k16762 in k16759 in k16756 in k16753 in k16750 in k16747 in k16744 in k16741 in k16602 in k16599 in k16596 in k16593 in k16537 in k16534 in k16531 in k16528 in k16525 in k16522 in k16519 in k16516 in k15271 in k15202 in k15009 in k15006 in k14901 in k14850 in k7607 in k7604 in k5838 in k5545 in k5542 in k5538 in k5247 in k5244 in k5241 in k5238 */
static void C_ccall f_18996(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word ab[15],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_18996,2,t0,t1);}
t2=(C_word)C_a_i_cons(&a,2,t1,((C_word*)((C_word*)t0)[6])[1]);
t3=C_mutate(((C_word *)((C_word*)t0)[6])+1,t2);
t4=(C_word)C_a_i_list(&a,3,lf[14],((C_word*)t0)[5],((C_word*)((C_word*)t0)[4])[1]);
t5=(C_word)C_a_i_cons(&a,2,t4,((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_18965(t7,((C_word*)((C_word*)t0)[3])[1]);}

/* k18978 in k18960 in k18921 in k18918 in k18915 in k18912 in k18909 in parse-numerical-for in k18307 in k18304 in k18301 in k18298 in k17861 in k17858 in k17855 in k17852 in k17849 in k17327 in k17324 in k16801 in k16798 in k16795 in k16792 in k16789 in k16786 in k16783 in k16780 in k16777 in k16774 in k16771 in k16768 in k16765 in k16762 in k16759 in k16756 in k16753 in k16750 in k16747 in k16744 in k16741 in k16602 in k16599 in k16596 in k16593 in k16537 in k16534 in k16531 in k16528 in k16525 in k16522 in k16519 in k16516 in k15271 in k15202 in k15009 in k15006 in k14901 in k14850 in k7607 in k7604 in k5838 in k5545 in k5542 in k5538 in k5247 in k5244 in k5241 in k5238 */
static void C_ccall f_18980(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[3],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_18980,2,t0,t1);}
t2=(C_word)C_a_i_cons(&a,2,t1,((C_word*)((C_word*)t0)[3])[1]);
t3=C_mutate(((C_word *)((C_word*)t0)[3])+1,t2);
t4=((C_word*)t0)[2];
f_18965(t4,((C_word*)((C_word*)t0)[3])[1]);}

/* k18963 in k18960 in k18921 in k18918 in k18915 in k18912 in k18909 in parse-numerical-for in k18307 in k18304 in k18301 in k18298 in k17861 in k17858 in k17855 in k17852 in k17849 in k17327 in k17324 in k16801 in k16798 in k16795 in k16792 in k16789 in k16786 in k16783 in k16780 in k16777 in k16774 in k16771 in k16768 in k16765 in k16762 in k16759 in k16756 in k16753 in k16750 in k16747 in k16744 in k16741 in k16602 in k16599 in k16596 in k16593 in k16537 in k16534 in k16531 in k16528 in k16525 in k16522 in k16519 in k16516 in k15271 in k15202 in k15009 in k15006 in k14901 in k14850 in k7607 in k7604 in k5838 in k5545 in k5542 in k5538 in k5247 in k5244 in k5241 in k5238 */
static void C_fcall f_18965(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_18965,NULL,2,t0,t1);}
t2=(C_word)C_a_i_list(&a,3,((C_word*)((C_word*)t0)[6])[1],((C_word*)t0)[5],((C_word*)t0)[4]);
t3=C_mutate(((C_word *)((C_word*)t0)[3])+1,t2);
t4=((C_word*)t0)[2];
f_18930(t4,t3);}

/* k18928 in k18921 in k18918 in k18915 in k18912 in k18909 in parse-numerical-for in k18307 in k18304 in k18301 in k18298 in k17861 in k17858 in k17855 in k17852 in k17849 in k17327 in k17324 in k16801 in k16798 in k16795 in k16792 in k16789 in k16786 in k16783 in k16780 in k16777 in k16774 in k16771 in k16768 in k16765 in k16762 in k16759 in k16756 in k16753 in k16750 in k16747 in k16744 in k16741 in k16602 in k16599 in k16596 in k16593 in k16537 in k16534 in k16531 in k16528 in k16525 in k16522 in k16519 in k16516 in k15271 in k15202 in k15009 in k15006 in k14901 in k14850 in k7607 in k7604 in k5838 in k5545 in k5542 in k5538 in k5247 in k5244 in k5241 in k5238 */
static void C_fcall f_18930(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[10],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_18930,NULL,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_18937,a[2]=((C_word*)t0)[6],a[3]=((C_word*)t0)[7],tmp=(C_word)a,a+=4,tmp);
t3=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_18941,a[2]=((C_word*)t0)[3],a[3]=t2,a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],tmp=(C_word)a,a+=6,tmp);
C_trace("ChickenBridge.scm: 365  reverse");
t4=*((C_word*)lf[232]+1);
((C_proc3)C_retrieve_proc(t4))(3,t4,t3,((C_word*)((C_word*)t0)[2])[1]);}

/* k18939 in k18928 in k18921 in k18918 in k18915 in k18912 in k18909 in parse-numerical-for in k18307 in k18304 in k18301 in k18298 in k17861 in k17858 in k17855 in k17852 in k17849 in k17327 in k17324 in k16801 in k16798 in k16795 in k16792 in k16789 in k16786 in k16783 in k16780 in k16777 in k16774 in k16771 in k16768 in k16765 in k16762 in k16759 in k16756 in k16753 in k16750 in k16747 in k16744 in k16741 in k16602 in k16599 in k16596 in k16593 in k16537 in k16534 in k16531 in k16528 in k16525 in k16522 in k16519 in k16516 in k15271 in k15202 in k15009 in k15006 in k14901 in k14850 in k7607 in k7604 in k5838 in k5545 in k5542 in k5538 in k5247 in k5244 in k5241 in k5238 */
static void C_ccall f_18941(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[6],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_18941,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_18945,a[2]=t1,a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],tmp=(C_word)a,a+=6,tmp);
C_trace("ChickenBridge.scm: 365  reverse");
t3=*((C_word*)lf[232]+1);
((C_proc3)C_retrieve_proc(t3))(3,t3,t2,((C_word*)((C_word*)t0)[2])[1]);}

/* k18943 in k18939 in k18928 in k18921 in k18918 in k18915 in k18912 in k18909 in parse-numerical-for in k18307 in k18304 in k18301 in k18298 in k17861 in k17858 in k17855 in k17852 in k17849 in k17327 in k17324 in k16801 in k16798 in k16795 in k16792 in k16789 in k16786 in k16783 in k16780 in k16777 in k16774 in k16771 in k16768 in k16765 in k16762 in k16759 in k16756 in k16753 in k16750 in k16747 in k16744 in k16741 in k16602 in k16599 in k16596 in k16593 in k16537 in k16534 in k16531 in k16528 in k16525 in k16522 in k16519 in k16516 in k15271 in k15202 in k15009 in k15006 in k14901 in k14850 in k7607 in k7604 in k5838 in k5545 in k5542 in k5538 in k5247 in k5244 in k5241 in k5238 */
static void C_ccall f_18945(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[36],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_18945,2,t0,t1);}
t2=(C_word)C_a_i_list(&a,1,((C_word*)((C_word*)t0)[5])[1]);
t3=((C_word*)((C_word*)t0)[4])[1];
t4=(C_truep(t3)?(C_word)C_a_i_list(&a,1,((C_word*)((C_word*)t0)[4])[1]):C_SCHEME_END_OF_LIST);
C_trace("ChickenBridge.scm: 365  make-loop-clause");
f_18419(((C_word*)t0)[3],(C_word)C_a_i_list(&a,10,lf[374],lf[406],lf[375],((C_word*)t0)[2],lf[377],t1,lf[380],t2,lf[378],t4));}

/* k18935 in k18928 in k18921 in k18918 in k18915 in k18912 in k18909 in parse-numerical-for in k18307 in k18304 in k18301 in k18298 in k17861 in k17858 in k17855 in k17852 in k17849 in k17327 in k17324 in k16801 in k16798 in k16795 in k16792 in k16789 in k16786 in k16783 in k16780 in k16777 in k16774 in k16771 in k16768 in k16765 in k16762 in k16759 in k16756 in k16753 in k16750 in k16747 in k16744 in k16741 in k16602 in k16599 in k16596 in k16593 in k16537 in k16534 in k16531 in k16528 in k16525 in k16522 in k16519 in k16516 in k15271 in k15202 in k15009 in k15006 in k14901 in k14850 in k7607 in k7604 in k5838 in k5545 in k5542 in k5538 in k5247 in k5244 in k5241 in k5238 */
static void C_ccall f_18937(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 365  values");
C_values(4,0,((C_word*)t0)[3],t1,((C_word*)((C_word*)t0)[2])[1]);}

/* parse-for in k18307 in k18304 in k18301 in k18298 in k17861 in k17858 in k17855 in k17852 in k17849 in k17327 in k17324 in k16801 in k16798 in k16795 in k16792 in k16789 in k16786 in k16783 in k16780 in k16777 in k16774 in k16771 in k16768 in k16765 in k16762 in k16759 in k16756 in k16753 in k16750 in k16747 in k16744 in k16741 in k16602 in k16599 in k16596 in k16593 in k16537 in k16534 in k16531 in k16528 in k16525 in k16522 in k16519 in k16516 in k15271 in k15202 in k15009 in k15006 in k14901 in k14850 in k7607 in k7604 in k5838 in k5545 in k5542 in k5538 in k5247 in k5244 in k5241 in k5238 */
static void C_ccall f_18819(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4){
C_word tmp;
C_word t5;
C_word t6;
C_word t7;
C_word ab[6],*a=ab;
if(c!=5) C_bad_argc_2(c,5,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr5,(void*)f_18819,5,t0,t1,t2,t3,t4);}
t5=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_18823,a[2]=t3,a[3]=t4,a[4]=t1,a[5]=t2,tmp=(C_word)a,a+=6,tmp);
t6=(C_word)C_i_car(t2);
C_trace("ChickenBridge.scm: 365  loop-op?");
f_18641(t5,t6,t4);}

/* k18821 in parse-for in k18307 in k18304 in k18301 in k18298 in k17861 in k17858 in k17855 in k17852 in k17849 in k17327 in k17324 in k16801 in k16798 in k16795 in k16792 in k16789 in k16786 in k16783 in k16780 in k16777 in k16774 in k16771 in k16768 in k16765 in k16762 in k16759 in k16756 in k16753 in k16750 in k16747 in k16744 in k16741 in k16602 in k16599 in k16596 in k16593 in k16537 in k16534 in k16531 in k16528 in k16525 in k16522 in k16519 in k16516 in k15271 in k15202 in k15009 in k15006 in k14901 in k14850 in k7607 in k7604 in k5838 in k5545 in k5542 in k5538 in k5247 in k5244 in k5241 in k5238 */
static void C_ccall f_18823(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[10],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_18823,2,t0,t1);}
t2=(C_word)C_i_cdr(((C_word*)t0)[5]);
if(C_truep((C_word)C_i_nullp(t2))){
C_trace("ChickenBridge.scm: 365  loop-error");
f_18659(((C_word*)t0)[4],((C_word*)t0)[3],((C_word*)t0)[5],(C_word)C_a_i_list(&a,1,lf[398]));}
else{
t3=(C_word)C_i_cadr(((C_word*)t0)[5]);
t4=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_18841,a[2]=((C_word*)t0)[2],a[3]=t1,a[4]=((C_word*)t0)[3],a[5]=((C_word*)t0)[4],a[6]=((C_word*)t0)[5],tmp=(C_word)a,a+=7,tmp);
C_trace("ChickenBridge.scm: 365  loop-variable?");
f_18647(t4,t3);}}

/* k18839 in k18821 in parse-for in k18307 in k18304 in k18301 in k18298 in k17861 in k17858 in k17855 in k17852 in k17849 in k17327 in k17324 in k16801 in k16798 in k16795 in k16792 in k16789 in k16786 in k16783 in k16780 in k16777 in k16774 in k16771 in k16768 in k16765 in k16762 in k16759 in k16756 in k16753 in k16750 in k16747 in k16744 in k16741 in k16602 in k16599 in k16596 in k16593 in k16537 in k16534 in k16531 in k16528 in k16525 in k16522 in k16519 in k16516 in k15271 in k15202 in k15009 in k15006 in k14901 in k14850 in k7607 in k7604 in k5838 in k5545 in k5542 in k5538 in k5247 in k5244 in k5241 in k5238 */
static void C_ccall f_18841(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word ab[24],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_18841,2,t0,t1);}
if(C_truep(t1)){
t2=(C_word)C_i_cddr(((C_word*)t0)[6]);
if(C_truep((C_word)C_i_nullp(t2))){
C_trace("ChickenBridge.scm: 365  loop-error");
f_18659(((C_word*)t0)[5],((C_word*)t0)[4],((C_word*)t0)[6],(C_word)C_a_i_list(&a,1,lf[399]));}
else{
t3=(C_word)C_i_caddr(((C_word*)t0)[6]);
t4=(C_word)C_i_cdddr(((C_word*)t0)[3]);
t5=(C_word)C_i_assoc(t3,t4);
if(C_truep(t5)){
t6=(C_word)C_i_cadr(t5);
t7=t6;
((C_proc5)C_retrieve_proc(t7))(5,t7,((C_word*)t0)[5],((C_word*)t0)[6],((C_word*)t0)[2],((C_word*)t0)[4]);}
else{
t6=(C_word)C_i_caddr(((C_word*)t0)[6]);
C_trace("ChickenBridge.scm: 365  loop-error");
f_18659(((C_word*)t0)[5],((C_word*)t0)[4],((C_word*)t0)[6],(C_word)C_a_i_list(&a,4,lf[400],t6,lf[401],lf[402]));}}}
else{
t2=(C_word)C_i_cadr(((C_word*)t0)[6]);
C_trace("ChickenBridge.scm: 365  loop-error");
f_18659(((C_word*)t0)[5],((C_word*)t0)[4],((C_word*)t0)[6],(C_word)C_a_i_list(&a,3,lf[403],t2,lf[404]));}}

/* loop-error in k18307 in k18304 in k18301 in k18298 in k17861 in k17858 in k17855 in k17852 in k17849 in k17327 in k17324 in k16801 in k16798 in k16795 in k16792 in k16789 in k16786 in k16783 in k16780 in k16777 in k16774 in k16771 in k16768 in k16765 in k16762 in k16759 in k16756 in k16753 in k16750 in k16747 in k16744 in k16741 in k16602 in k16599 in k16596 in k16593 in k16537 in k16534 in k16531 in k16528 in k16525 in k16522 in k16519 in k16516 in k15271 in k15202 in k15009 in k15006 in k14901 in k14850 in k7607 in k7604 in k5838 in k5545 in k5542 in k5538 in k5247 in k5244 in k5241 in k5238 */
static void C_fcall f_18659(C_word t1,C_word t2,C_word t3,C_word t4){
C_word tmp;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word ab[14],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_18659,NULL,4,t1,t2,t3,t4);}
t5=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_18715,a[2]=t4,a[3]=t1,tmp=(C_word)a,a+=4,tmp);
t6=t3;
t7=(*a=C_VECTOR_TYPE|1,a[1]=t6,tmp=(C_word)a,a+=2,tmp);
t8=C_SCHEME_UNDEFINED;
t9=(*a=C_VECTOR_TYPE|1,a[1]=t8,tmp=(C_word)a,a+=2,tmp);
t10=C_set_block_item(t9,0,(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_18667,a[2]=t2,a[3]=t9,a[4]=t7,a[5]=((C_word)li279),tmp=(C_word)a,a+=6,tmp));
t11=((C_word*)t9)[1];
f_18667(t11,t5,((C_word*)t7)[1],C_SCHEME_END_OF_LIST);}

/* do3145 in loop-error in k18307 in k18304 in k18301 in k18298 in k17861 in k17858 in k17855 in k17852 in k17849 in k17327 in k17324 in k16801 in k16798 in k16795 in k16792 in k16789 in k16786 in k16783 in k16780 in k16777 in k16774 in k16771 in k16768 in k16765 in k16762 in k16759 in k16756 in k16753 in k16750 in k16747 in k16744 in k16741 in k16602 in k16599 in k16596 in k16593 in k16537 in k16534 in k16531 in k16528 in k16525 in k16522 in k16519 in k16516 in k15271 in k15202 in k15009 in k15006 in k14901 in k14850 in k7607 in k7604 in k5838 in k5545 in k5542 in k5538 in k5247 in k5244 in k5241 in k5238 */
static void C_fcall f_18667(C_word t0,C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_18667,NULL,4,t0,t1,t2,t3);}
t4=(*a=C_VECTOR_TYPE|1,a[1]=t3,tmp=(C_word)a,a+=2,tmp);
t5=(C_word)C_i_nullp(((C_word*)((C_word*)t0)[4])[1]);
t6=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_18677,a[2]=t2,a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=t4,a[6]=t1,tmp=(C_word)a,a+=7,tmp);
if(C_truep(t5)){
t7=t6;
f_18677(2,t7,t5);}
else{
t7=(C_word)C_eqp(t2,((C_word*)((C_word*)t0)[4])[1]);
if(C_truep(t7)){
t8=t6;
f_18677(2,t8,C_SCHEME_FALSE);}
else{
t8=(C_word)C_i_car(((C_word*)((C_word*)t0)[4])[1]);
C_trace("ChickenBridge.scm: 365  loop-op?");
f_18641(t6,t8,((C_word*)t0)[2]);}}}

/* k18675 in do3145 in loop-error in k18307 in k18304 in k18301 in k18298 in k17861 in k17858 in k17855 in k17852 in k17849 in k17327 in k17324 in k16801 in k16798 in k16795 in k16792 in k16789 in k16786 in k16783 in k16780 in k16777 in k16774 in k16771 in k16768 in k16765 in k16762 in k16759 in k16756 in k16753 in k16750 in k16747 in k16744 in k16741 in k16602 in k16599 in k16596 in k16593 in k16537 in k16534 in k16531 in k16528 in k16525 in k16522 in k16519 in k16516 in k15271 in k15202 in k15009 in k15006 in k14901 in k14850 in k7607 in k7604 in k5838 in k5545 in k5542 in k5538 in k5247 in k5244 in k5241 in k5238 */
static void C_ccall f_18677(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word ab[3],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_18677,2,t0,t1);}
if(C_truep(t1)){
C_trace("ChickenBridge.scm: 365  reverse");
t2=*((C_word*)lf[232]+1);
((C_proc3)C_retrieve_proc(t2))(3,t2,((C_word*)t0)[6],((C_word*)((C_word*)t0)[5])[1]);}
else{
t2=(C_word)C_i_car(((C_word*)((C_word*)t0)[4])[1]);
t3=(C_word)C_a_i_cons(&a,2,t2,((C_word*)((C_word*)t0)[5])[1]);
t4=C_mutate(((C_word *)((C_word*)t0)[5])+1,t3);
t5=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[4])+1,t5);
t7=((C_word*)((C_word*)t0)[3])[1];
f_18667(t7,((C_word*)t0)[6],((C_word*)t0)[2],((C_word*)((C_word*)t0)[5])[1]);}}

/* k18713 in loop-error in k18307 in k18304 in k18301 in k18298 in k17861 in k17858 in k17855 in k17852 in k17849 in k17327 in k17324 in k16801 in k16798 in k16795 in k16792 in k16789 in k16786 in k16783 in k16780 in k16777 in k16774 in k16771 in k16768 in k16765 in k16762 in k16759 in k16756 in k16753 in k16750 in k16747 in k16744 in k16741 in k16602 in k16599 in k16596 in k16593 in k16537 in k16534 in k16531 in k16528 in k16525 in k16522 in k16519 in k16516 in k15271 in k15202 in k15009 in k15006 in k14901 in k14850 in k7607 in k7604 in k5838 in k5545 in k5542 in k5538 in k5247 in k5244 in k5241 in k5238 */
static void C_ccall f_18715(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[5],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_18715,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_18718,a[2]=((C_word*)t0)[2],a[3]=t1,a[4]=((C_word*)t0)[3],tmp=(C_word)a,a+=5,tmp);
C_trace("ChickenBridge.scm: 365  newline");
t3=*((C_word*)lf[389]+1);
((C_proc2)C_retrieve_proc(t3))(2,t3,t2);}

/* k18716 in k18713 in loop-error in k18307 in k18304 in k18301 in k18298 in k17861 in k17858 in k17855 in k17852 in k17849 in k17327 in k17324 in k16801 in k16798 in k16795 in k16792 in k16789 in k16786 in k16783 in k16780 in k16777 in k16774 in k16771 in k16768 in k16765 in k16762 in k16759 in k16756 in k16753 in k16750 in k16747 in k16744 in k16741 in k16602 in k16599 in k16596 in k16593 in k16537 in k16534 in k16531 in k16528 in k16525 in k16522 in k16519 in k16516 in k15271 in k15202 in k15009 in k15006 in k14901 in k14850 in k7607 in k7604 in k5838 in k5545 in k5542 in k5538 in k5247 in k5244 in k5241 in k5238 */
static void C_ccall f_18718(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[5],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_18718,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_18721,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],tmp=(C_word)a,a+=5,tmp);
C_trace("ChickenBridge.scm: 365  display");
t3=*((C_word*)lf[390]+1);
((C_proc3)C_retrieve_proc(t3))(3,t3,t2,lf[396]);}

/* k18719 in k18716 in k18713 in loop-error in k18307 in k18304 in k18301 in k18298 in k17861 in k17858 in k17855 in k17852 in k17849 in k17327 in k17324 in k16801 in k16798 in k16795 in k16792 in k16789 in k16786 in k16783 in k16780 in k16777 in k16774 in k16771 in k16768 in k16765 in k16762 in k16759 in k16756 in k16753 in k16750 in k16747 in k16744 in k16741 in k16602 in k16599 in k16596 in k16593 in k16537 in k16534 in k16531 in k16528 in k16525 in k16522 in k16519 in k16516 in k15271 in k15202 in k15009 in k15006 in k14901 in k14850 in k7607 in k7604 in k5838 in k5545 in k5542 in k5538 in k5247 in k5244 in k5241 in k5238 */
static void C_ccall f_18721(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[10],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_18721,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_18724,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],tmp=(C_word)a,a+=4,tmp);
t3=C_SCHEME_UNDEFINED;
t4=(*a=C_VECTOR_TYPE|1,a[1]=t3,tmp=(C_word)a,a+=2,tmp);
t5=C_set_block_item(t4,0,(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_18796,a[2]=t4,a[3]=((C_word)li278),tmp=(C_word)a,a+=4,tmp));
t6=((C_word*)t4)[1];
f_18796(t6,t2,((C_word*)t0)[2]);}

/* do3155 in k18719 in k18716 in k18713 in loop-error in k18307 in k18304 in k18301 in k18298 in k17861 in k17858 in k17855 in k17852 in k17849 in k17327 in k17324 in k16801 in k16798 in k16795 in k16792 in k16789 in k16786 in k16783 in k16780 in k16777 in k16774 in k16771 in k16768 in k16765 in k16762 in k16759 in k16756 in k16753 in k16750 in k16747 in k16744 in k16741 in k16602 in k16599 in k16596 in k16593 in k16537 in k16534 in k16531 in k16528 in k16525 in k16522 in k16519 in k16516 in k15271 in k15202 in k15009 in k15006 in k14901 in k14850 in k7607 in k7604 in k5838 in k5545 in k5542 in k5538 in k5247 in k5244 in k5241 in k5238 */
static void C_fcall f_18796(C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word t5;
C_word ab[5],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_18796,NULL,3,t0,t1,t2);}
if(C_truep((C_word)C_i_nullp(t2))){
t3=t1;
((C_proc2)(void*)(*((C_word*)t3+1)))(2,t3,C_SCHEME_FALSE);}
else{
t3=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_18806,a[2]=t1,a[3]=((C_word*)t0)[2],a[4]=t2,tmp=(C_word)a,a+=5,tmp);
t4=(C_word)C_i_car(t2);
C_trace("ChickenBridge.scm: 365  display");
t5=*((C_word*)lf[390]+1);
((C_proc3)C_retrieve_proc(t5))(3,t5,t3,t4);}}

/* k18804 in do3155 in k18719 in k18716 in k18713 in loop-error in k18307 in k18304 in k18301 in k18298 in k17861 in k17858 in k17855 in k17852 in k17849 in k17327 in k17324 in k16801 in k16798 in k16795 in k16792 in k16789 in k16786 in k16783 in k16780 in k16777 in k16774 in k16771 in k16768 in k16765 in k16762 in k16759 in k16756 in k16753 in k16750 in k16747 in k16744 in k16741 in k16602 in k16599 in k16596 in k16593 in k16537 in k16534 in k16531 in k16528 in k16525 in k16522 in k16519 in k16516 in k15271 in k15202 in k15009 in k15006 in k14901 in k14850 in k7607 in k7604 in k5838 in k5545 in k5542 in k5538 in k5247 in k5244 in k5241 in k5238 */
static void C_ccall f_18806(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word *a;
t2=(C_word)C_i_cdr(((C_word*)t0)[4]);
t3=((C_word*)((C_word*)t0)[3])[1];
f_18796(t3,((C_word*)t0)[2],t2);}

/* k18722 in k18719 in k18716 in k18713 in loop-error in k18307 in k18304 in k18301 in k18298 in k17861 in k17858 in k17855 in k17852 in k17849 in k17327 in k17324 in k16801 in k16798 in k16795 in k16792 in k16789 in k16786 in k16783 in k16780 in k16777 in k16774 in k16771 in k16768 in k16765 in k16762 in k16759 in k16756 in k16753 in k16750 in k16747 in k16744 in k16741 in k16602 in k16599 in k16596 in k16593 in k16537 in k16534 in k16531 in k16528 in k16525 in k16522 in k16519 in k16516 in k15271 in k15202 in k15009 in k15006 in k14901 in k14850 in k7607 in k7604 in k5838 in k5545 in k5542 in k5538 in k5247 in k5244 in k5241 in k5238 */
static void C_ccall f_18724(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[4],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_18724,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_18727,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 365  newline");
t3=*((C_word*)lf[389]+1);
((C_proc2)C_retrieve_proc(t3))(2,t3,t2);}

/* k18725 in k18722 in k18719 in k18716 in k18713 in loop-error in k18307 in k18304 in k18301 in k18298 in k17861 in k17858 in k17855 in k17852 in k17849 in k17327 in k17324 in k16801 in k16798 in k16795 in k16792 in k16789 in k16786 in k16783 in k16780 in k16777 in k16774 in k16771 in k16768 in k16765 in k16762 in k16759 in k16756 in k16753 in k16750 in k16747 in k16744 in k16741 in k16602 in k16599 in k16596 in k16593 in k16537 in k16534 in k16531 in k16528 in k16525 in k16522 in k16519 in k16516 in k15271 in k15202 in k15009 in k15006 in k14901 in k14850 in k7607 in k7604 in k5838 in k5545 in k5542 in k5538 in k5247 in k5244 in k5241 in k5238 */
static void C_ccall f_18727(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[4],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_18727,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_18730,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 365  display");
t3=*((C_word*)lf[390]+1);
((C_proc3)C_retrieve_proc(t3))(3,t3,t2,lf[395]);}

/* k18728 in k18725 in k18722 in k18719 in k18716 in k18713 in loop-error in k18307 in k18304 in k18301 in k18298 in k17861 in k17858 in k17855 in k17852 in k17849 in k17327 in k17324 in k16801 in k16798 in k16795 in k16792 in k16789 in k16786 in k16783 in k16780 in k16777 in k16774 in k16771 in k16768 in k16765 in k16762 in k16759 in k16756 in k16753 in k16750 in k16747 in k16744 in k16741 in k16602 in k16599 in k16596 in k16593 in k16537 in k16534 in k16531 in k16528 in k16525 in k16522 in k16519 in k16516 in k15271 in k15202 in k15009 in k15006 in k14901 in k14850 in k7607 in k7604 in k5838 in k5545 in k5542 in k5538 in k5247 in k5244 in k5241 in k5238 */
static void C_ccall f_18730(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[10],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_18730,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_18733,a[2]=((C_word*)t0)[3],tmp=(C_word)a,a+=3,tmp);
if(C_truep((C_word)C_i_nullp(((C_word*)t0)[2]))){
C_trace("ChickenBridge.scm: 365  display");
t3=*((C_word*)lf[390]+1);
((C_proc3)C_retrieve_proc(t3))(3,t3,t2,lf[391]);}
else{
t3=C_SCHEME_UNDEFINED;
t4=(*a=C_VECTOR_TYPE|1,a[1]=t3,tmp=(C_word)a,a+=2,tmp);
t5=C_set_block_item(t4,0,(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_18750,a[2]=((C_word*)t0)[2],a[3]=t4,a[4]=((C_word)li277),tmp=(C_word)a,a+=5,tmp));
t6=((C_word*)t4)[1];
f_18750(t6,t2,((C_word*)t0)[2]);}}

/* do3160 in k18728 in k18725 in k18722 in k18719 in k18716 in k18713 in loop-error in k18307 in k18304 in k18301 in k18298 in k17861 in k17858 in k17855 in k17852 in k17849 in k17327 in k17324 in k16801 in k16798 in k16795 in k16792 in k16789 in k16786 in k16783 in k16780 in k16777 in k16774 in k16771 in k16768 in k16765 in k16762 in k16759 in k16756 in k16753 in k16750 in k16747 in k16744 in k16741 in k16602 in k16599 in k16596 in k16593 in k16537 in k16534 in k16531 in k16528 in k16525 in k16522 in k16519 in k16516 in k15271 in k15202 in k15009 in k15006 in k14901 in k14850 in k7607 in k7604 in k5838 in k5545 in k5542 in k5538 in k5247 in k5244 in k5241 in k5238 */
static void C_fcall f_18750(C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word t5;
C_word ab[5],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_18750,NULL,3,t0,t1,t2);}
if(C_truep((C_word)C_i_nullp(t2))){
t3=t1;
((C_proc2)(void*)(*((C_word*)t3+1)))(2,t3,C_SCHEME_FALSE);}
else{
t3=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_18760,a[2]=t1,a[3]=((C_word*)t0)[3],a[4]=t2,tmp=(C_word)a,a+=5,tmp);
t4=(C_word)C_eqp(t2,((C_word*)t0)[2]);
if(C_truep(t4)){
C_trace("ChickenBridge.scm: 365  display");
t5=*((C_word*)lf[390]+1);
((C_proc3)C_retrieve_proc(t5))(3,t5,t3,lf[394]);}
else{
t5=t3;
f_18760(2,t5,C_SCHEME_UNDEFINED);}}}

/* k18758 in do3160 in k18728 in k18725 in k18722 in k18719 in k18716 in k18713 in loop-error in k18307 in k18304 in k18301 in k18298 in k17861 in k17858 in k17855 in k17852 in k17849 in k17327 in k17324 in k16801 in k16798 in k16795 in k16792 in k16789 in k16786 in k16783 in k16780 in k16777 in k16774 in k16771 in k16768 in k16765 in k16762 in k16759 in k16756 in k16753 in k16750 in k16747 in k16744 in k16741 in k16602 in k16599 in k16596 in k16593 in k16537 in k16534 in k16531 in k16528 in k16525 in k16522 in k16519 in k16516 in k15271 in k15202 in k15009 in k15006 in k14901 in k14850 in k7607 in k7604 in k5838 in k5545 in k5542 in k5538 in k5247 in k5244 in k5241 in k5238 */
static void C_ccall f_18760(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[5],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_18760,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_18763,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],tmp=(C_word)a,a+=5,tmp);
t3=(C_word)C_i_car(((C_word*)t0)[4]);
C_trace("ChickenBridge.scm: 365  display");
t4=*((C_word*)lf[390]+1);
((C_proc3)C_retrieve_proc(t4))(3,t4,t2,t3);}

/* k18761 in k18758 in do3160 in k18728 in k18725 in k18722 in k18719 in k18716 in k18713 in loop-error in k18307 in k18304 in k18301 in k18298 in k17861 in k17858 in k17855 in k17852 in k17849 in k17327 in k17324 in k16801 in k16798 in k16795 in k16792 in k16789 in k16786 in k16783 in k16780 in k16777 in k16774 in k16771 in k16768 in k16765 in k16762 in k16759 in k16756 in k16753 in k16750 in k16747 in k16744 in k16741 in k16602 in k16599 in k16596 in k16593 in k16537 in k16534 in k16531 in k16528 in k16525 in k16522 in k16519 in k16516 in k15271 in k15202 in k15009 in k15006 in k14901 in k14850 in k7607 in k7604 in k5838 in k5545 in k5542 in k5538 in k5247 in k5244 in k5241 in k5238 */
static void C_ccall f_18763(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[5],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_18763,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_18766,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],tmp=(C_word)a,a+=5,tmp);
t3=(C_word)C_i_cdr(((C_word*)t0)[4]);
t4=(C_word)C_i_nullp(t3);
t5=(C_truep(t4)?lf[392]:lf[393]);
C_trace("ChickenBridge.scm: 365  display");
t6=*((C_word*)lf[390]+1);
((C_proc3)C_retrieve_proc(t6))(3,t6,t2,t5);}

/* k18764 in k18761 in k18758 in do3160 in k18728 in k18725 in k18722 in k18719 in k18716 in k18713 in loop-error in k18307 in k18304 in k18301 in k18298 in k17861 in k17858 in k17855 in k17852 in k17849 in k17327 in k17324 in k16801 in k16798 in k16795 in k16792 in k16789 in k16786 in k16783 in k16780 in k16777 in k16774 in k16771 in k16768 in k16765 in k16762 in k16759 in k16756 in k16753 in k16750 in k16747 in k16744 in k16741 in k16602 in k16599 in k16596 in k16593 in k16537 in k16534 in k16531 in k16528 in k16525 in k16522 in k16519 in k16516 in k15271 in k15202 in k15009 in k15006 in k14901 in k14850 in k7607 in k7604 in k5838 in k5545 in k5542 in k5538 in k5247 in k5244 in k5241 in k5238 */
static void C_ccall f_18766(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word *a;
t2=(C_word)C_i_cdr(((C_word*)t0)[4]);
t3=((C_word*)((C_word*)t0)[3])[1];
f_18750(t3,((C_word*)t0)[2],t2);}

/* k18731 in k18728 in k18725 in k18722 in k18719 in k18716 in k18713 in loop-error in k18307 in k18304 in k18301 in k18298 in k17861 in k17858 in k17855 in k17852 in k17849 in k17327 in k17324 in k16801 in k16798 in k16795 in k16792 in k16789 in k16786 in k16783 in k16780 in k16777 in k16774 in k16771 in k16768 in k16765 in k16762 in k16759 in k16756 in k16753 in k16750 in k16747 in k16744 in k16741 in k16602 in k16599 in k16596 in k16593 in k16537 in k16534 in k16531 in k16528 in k16525 in k16522 in k16519 in k16516 in k15271 in k15202 in k15009 in k15006 in k14901 in k14850 in k7607 in k7604 in k5838 in k5545 in k5542 in k5538 in k5247 in k5244 in k5241 in k5238 */
static void C_ccall f_18733(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[3],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_18733,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_18736,a[2]=((C_word*)t0)[2],tmp=(C_word)a,a+=3,tmp);
C_trace("ChickenBridge.scm: 365  newline");
t3=*((C_word*)lf[389]+1);
((C_proc2)C_retrieve_proc(t3))(2,t3,t2);}

/* k18734 in k18731 in k18728 in k18725 in k18722 in k18719 in k18716 in k18713 in loop-error in k18307 in k18304 in k18301 in k18298 in k17861 in k17858 in k17855 in k17852 in k17849 in k17327 in k17324 in k16801 in k16798 in k16795 in k16792 in k16789 in k16786 in k16783 in k16780 in k16777 in k16774 in k16771 in k16768 in k16765 in k16762 in k16759 in k16756 in k16753 in k16750 in k16747 in k16744 in k16741 in k16602 in k16599 in k16596 in k16593 in k16537 in k16534 in k16531 in k16528 in k16525 in k16522 in k16519 in k16516 in k15271 in k15202 in k15009 in k15006 in k14901 in k14850 in k7607 in k7604 in k5838 in k5545 in k5542 in k5538 in k5247 in k5244 in k5241 in k5238 */
static void C_ccall f_18736(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 365  error");
t2=*((C_word*)lf[6]+1);
((C_proc3)C_retrieve_proc(t2))(3,t2,((C_word*)t0)[2],lf[388]);}

/* make-binding in k18307 in k18304 in k18301 in k18298 in k17861 in k17858 in k17855 in k17852 in k17849 in k17327 in k17324 in k16801 in k16798 in k16795 in k16792 in k16789 in k16786 in k16783 in k16780 in k16777 in k16774 in k16771 in k16768 in k16765 in k16762 in k16759 in k16756 in k16753 in k16750 in k16747 in k16744 in k16741 in k16602 in k16599 in k16596 in k16593 in k16537 in k16534 in k16531 in k16528 in k16525 in k16522 in k16519 in k16516 in k15271 in k15202 in k15009 in k15006 in k14901 in k14850 in k7607 in k7604 in k5838 in k5545 in k5542 in k5538 in k5247 in k5244 in k5241 in k5238 */
static void C_fcall f_18653(C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word ab[6],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_18653,NULL,3,t1,t2,t3);}
t4=t1;
((C_proc2)(void*)(*((C_word*)t4+1)))(2,t4,(C_word)C_a_i_list(&a,2,t2,t3));}

/* loop-variable? in k18307 in k18304 in k18301 in k18298 in k17861 in k17858 in k17855 in k17852 in k17849 in k17327 in k17324 in k16801 in k16798 in k16795 in k16792 in k16789 in k16786 in k16783 in k16780 in k16777 in k16774 in k16771 in k16768 in k16765 in k16762 in k16759 in k16756 in k16753 in k16750 in k16747 in k16744 in k16741 in k16602 in k16599 in k16596 in k16593 in k16537 in k16534 in k16531 in k16528 in k16525 in k16522 in k16519 in k16516 in k15271 in k15202 in k15009 in k15006 in k14901 in k14850 in k7607 in k7604 in k5838 in k5545 in k5542 in k5538 in k5247 in k5244 in k5241 in k5238 */
static void C_fcall f_18647(C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word *a;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_18647,NULL,2,t1,t2);}
t3=t1;
((C_proc2)(void*)(*((C_word*)t3+1)))(2,t3,(C_word)C_i_symbolp(t2));}

/* loop-op? in k18307 in k18304 in k18301 in k18298 in k17861 in k17858 in k17855 in k17852 in k17849 in k17327 in k17324 in k16801 in k16798 in k16795 in k16792 in k16789 in k16786 in k16783 in k16780 in k16777 in k16774 in k16771 in k16768 in k16765 in k16762 in k16759 in k16756 in k16753 in k16750 in k16747 in k16744 in k16741 in k16602 in k16599 in k16596 in k16593 in k16537 in k16534 in k16531 in k16528 in k16525 in k16522 in k16519 in k16516 in k15271 in k15202 in k15009 in k15006 in k14901 in k14850 in k7607 in k7604 in k5838 in k5545 in k5542 in k5538 in k5247 in k5244 in k5241 in k5238 */
static void C_fcall f_18641(C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word *a;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_18641,NULL,3,t1,t2,t3);}
t4=t1;
((C_proc2)(void*)(*((C_word*)t4+1)))(2,t4,(C_word)C_i_assoc(t2,t3));}

/* gather-clauses in k18307 in k18304 in k18301 in k18298 in k17861 in k17858 in k17855 in k17852 in k17849 in k17327 in k17324 in k16801 in k16798 in k16795 in k16792 in k16789 in k16786 in k16783 in k16780 in k16777 in k16774 in k16771 in k16768 in k16765 in k16762 in k16759 in k16756 in k16753 in k16750 in k16747 in k16744 in k16741 in k16602 in k16599 in k16596 in k16593 in k16537 in k16534 in k16531 in k16528 in k16525 in k16522 in k16519 in k16516 in k15271 in k15202 in k15009 in k15006 in k14901 in k14850 in k7607 in k7604 in k5838 in k5545 in k5542 in k5538 in k5247 in k5244 in k5241 in k5238 */
static void C_fcall f_18570(C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word t6;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_18570,NULL,3,t1,t2,t3);}
t4=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_18572,a[2]=((C_word)li272),tmp=(C_word)a,a+=3,tmp);
t5=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_18611,a[2]=t3,a[3]=t4,a[4]=t2,a[5]=t1,tmp=(C_word)a,a+=6,tmp);
C_trace("ChickenBridge.scm: 365  gather-clause");
f_18572(t5,t3,C_retrieve2(lf[364],"loop-bindings"));}

/* k18609 in gather-clauses in k18307 in k18304 in k18301 in k18298 in k17861 in k17858 in k17855 in k17852 in k17849 in k17327 in k17324 in k16801 in k16798 in k16795 in k16792 in k16789 in k16786 in k16783 in k16780 in k16777 in k16774 in k16771 in k16768 in k16765 in k16762 in k16759 in k16756 in k16753 in k16750 in k16747 in k16744 in k16741 in k16602 in k16599 in k16596 in k16593 in k16537 in k16534 in k16531 in k16528 in k16525 in k16522 in k16519 in k16516 in k15271 in k15202 in k15009 in k15006 in k14901 in k14850 in k7607 in k7604 in k5838 in k5545 in k5542 in k5538 in k5247 in k5244 in k5241 in k5238 */
static void C_ccall f_18611(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_18611,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_18615,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=t1,a[5]=((C_word*)t0)[4],a[6]=((C_word*)t0)[5],tmp=(C_word)a,a+=7,tmp);
C_trace("ChickenBridge.scm: 365  gather-clause");
f_18572(t2,((C_word*)t0)[2],C_retrieve2(lf[365],"loop-collectors"));}

/* k18613 in k18609 in gather-clauses in k18307 in k18304 in k18301 in k18298 in k17861 in k17858 in k17855 in k17852 in k17849 in k17327 in k17324 in k16801 in k16798 in k16795 in k16792 in k16789 in k16786 in k16783 in k16780 in k16777 in k16774 in k16771 in k16768 in k16765 in k16762 in k16759 in k16756 in k16753 in k16750 in k16747 in k16744 in k16741 in k16602 in k16599 in k16596 in k16593 in k16537 in k16534 in k16531 in k16528 in k16525 in k16522 in k16519 in k16516 in k15271 in k15202 in k15009 in k15006 in k14901 in k14850 in k7607 in k7604 in k5838 in k5545 in k5542 in k5538 in k5247 in k5244 in k5241 in k5238 */
static void C_ccall f_18615(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[8],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_18615,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_18619,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=t1,a[5]=((C_word*)t0)[4],a[6]=((C_word*)t0)[5],a[7]=((C_word*)t0)[6],tmp=(C_word)a,a+=8,tmp);
C_trace("ChickenBridge.scm: 365  gather-clause");
f_18572(t2,((C_word*)t0)[2],C_retrieve2(lf[366],"loop-initially"));}

/* k18617 in k18613 in k18609 in gather-clauses in k18307 in k18304 in k18301 in k18298 in k17861 in k17858 in k17855 in k17852 in k17849 in k17327 in k17324 in k16801 in k16798 in k16795 in k16792 in k16789 in k16786 in k16783 in k16780 in k16777 in k16774 in k16771 in k16768 in k16765 in k16762 in k16759 in k16756 in k16753 in k16750 in k16747 in k16744 in k16741 in k16602 in k16599 in k16596 in k16593 in k16537 in k16534 in k16531 in k16528 in k16525 in k16522 in k16519 in k16516 in k15271 in k15202 in k15009 in k15006 in k14901 in k14850 in k7607 in k7604 in k5838 in k5545 in k5542 in k5538 in k5247 in k5244 in k5241 in k5238 */
static void C_ccall f_18619(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_18619,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|8,a[1]=(C_word)f_18623,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=t1,a[5]=((C_word*)t0)[4],a[6]=((C_word*)t0)[5],a[7]=((C_word*)t0)[6],a[8]=((C_word*)t0)[7],tmp=(C_word)a,a+=9,tmp);
C_trace("ChickenBridge.scm: 365  gather-clause");
f_18572(t2,((C_word*)t0)[2],C_retrieve2(lf[367],"loop-end-tests"));}

/* k18621 in k18617 in k18613 in k18609 in gather-clauses in k18307 in k18304 in k18301 in k18298 in k17861 in k17858 in k17855 in k17852 in k17849 in k17327 in k17324 in k16801 in k16798 in k16795 in k16792 in k16789 in k16786 in k16783 in k16780 in k16777 in k16774 in k16771 in k16768 in k16765 in k16762 in k16759 in k16756 in k16753 in k16750 in k16747 in k16744 in k16741 in k16602 in k16599 in k16596 in k16593 in k16537 in k16534 in k16531 in k16528 in k16525 in k16522 in k16519 in k16516 in k15271 in k15202 in k15009 in k15006 in k14901 in k14850 in k7607 in k7604 in k5838 in k5545 in k5542 in k5538 in k5247 in k5244 in k5241 in k5238 */
static void C_ccall f_18623(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[10],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_18623,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|9,a[1]=(C_word)f_18627,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=t1,a[5]=((C_word*)t0)[4],a[6]=((C_word*)t0)[5],a[7]=((C_word*)t0)[6],a[8]=((C_word*)t0)[7],a[9]=((C_word*)t0)[8],tmp=(C_word)a,a+=10,tmp);
C_trace("ChickenBridge.scm: 365  gather-clause");
f_18572(t2,((C_word*)t0)[2],C_retrieve2(lf[368],"loop-looping"));}

/* k18625 in k18621 in k18617 in k18613 in k18609 in gather-clauses in k18307 in k18304 in k18301 in k18298 in k17861 in k17858 in k17855 in k17852 in k17849 in k17327 in k17324 in k16801 in k16798 in k16795 in k16792 in k16789 in k16786 in k16783 in k16780 in k16777 in k16774 in k16771 in k16768 in k16765 in k16762 in k16759 in k16756 in k16753 in k16750 in k16747 in k16744 in k16741 in k16602 in k16599 in k16596 in k16593 in k16537 in k16534 in k16531 in k16528 in k16525 in k16522 in k16519 in k16516 in k15271 in k15202 in k15009 in k15006 in k14901 in k14850 in k7607 in k7604 in k5838 in k5545 in k5542 in k5538 in k5247 in k5244 in k5241 in k5238 */
static void C_ccall f_18627(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[11],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_18627,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|10,a[1]=(C_word)f_18631,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=t1,a[5]=((C_word*)t0)[4],a[6]=((C_word*)t0)[5],a[7]=((C_word*)t0)[6],a[8]=((C_word*)t0)[7],a[9]=((C_word*)t0)[8],a[10]=((C_word*)t0)[9],tmp=(C_word)a,a+=11,tmp);
C_trace("ChickenBridge.scm: 365  gather-clause");
f_18572(t2,((C_word*)t0)[2],C_retrieve2(lf[370],"loop-stepping"));}

/* k18629 in k18625 in k18621 in k18617 in k18613 in k18609 in gather-clauses in k18307 in k18304 in k18301 in k18298 in k17861 in k17858 in k17855 in k17852 in k17849 in k17327 in k17324 in k16801 in k16798 in k16795 in k16792 in k16789 in k16786 in k16783 in k16780 in k16777 in k16774 in k16771 in k16768 in k16765 in k16762 in k16759 in k16756 in k16753 in k16750 in k16747 in k16744 in k16741 in k16602 in k16599 in k16596 in k16593 in k16537 in k16534 in k16531 in k16528 in k16525 in k16522 in k16519 in k16516 in k15271 in k15202 in k15009 in k15006 in k14901 in k14850 in k7607 in k7604 in k5838 in k5545 in k5542 in k5538 in k5247 in k5244 in k5241 in k5238 */
static void C_ccall f_18631(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[12],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_18631,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|11,a[1]=(C_word)f_18635,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=t1,a[5]=((C_word*)t0)[4],a[6]=((C_word*)t0)[5],a[7]=((C_word*)t0)[6],a[8]=((C_word*)t0)[7],a[9]=((C_word*)t0)[8],a[10]=((C_word*)t0)[9],a[11]=((C_word*)t0)[10],tmp=(C_word)a,a+=12,tmp);
C_trace("ChickenBridge.scm: 365  gather-clause");
f_18572(t2,((C_word*)t0)[2],C_retrieve2(lf[371],"loop-finally"));}

/* k18633 in k18629 in k18625 in k18621 in k18617 in k18613 in k18609 in gather-clauses in k18307 in k18304 in k18301 in k18298 in k17861 in k17858 in k17855 in k17852 in k17849 in k17327 in k17324 in k16801 in k16798 in k16795 in k16792 in k16789 in k16786 in k16783 in k16780 in k16777 in k16774 in k16771 in k16768 in k16765 in k16762 in k16759 in k16756 in k16753 in k16750 in k16747 in k16744 in k16741 in k16602 in k16599 in k16596 in k16593 in k16537 in k16534 in k16531 in k16528 in k16525 in k16522 in k16519 in k16516 in k15271 in k15202 in k15009 in k15006 in k14901 in k14850 in k7607 in k7604 in k5838 in k5545 in k5542 in k5538 in k5247 in k5244 in k5241 in k5238 */
static void C_ccall f_18635(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[11],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_18635,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|10,a[1]=(C_word)f_18639,a[2]=t1,a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],a[7]=((C_word*)t0)[8],a[8]=((C_word*)t0)[9],a[9]=((C_word*)t0)[10],a[10]=((C_word*)t0)[11],tmp=(C_word)a,a+=11,tmp);
C_trace("ChickenBridge.scm: 365  gather-clause");
f_18572(t2,((C_word*)t0)[2],C_retrieve2(lf[372],"loop-returning"));}

/* k18637 in k18633 in k18629 in k18625 in k18621 in k18617 in k18613 in k18609 in gather-clauses in k18307 in k18304 in k18301 in k18298 in k17861 in k17858 in k17855 in k17852 in k17849 in k17327 in k17324 in k16801 in k16798 in k16795 in k16792 in k16789 in k16786 in k16783 in k16780 in k16777 in k16774 in k16771 in k16768 in k16765 in k16762 in k16759 in k16756 in k16753 in k16750 in k16747 in k16744 in k16741 in k16602 in k16599 in k16596 in k16593 in k16537 in k16534 in k16531 in k16528 in k16525 in k16522 in k16519 in k16516 in k15271 in k15202 in k15009 in k15006 in k14901 in k14850 in k7607 in k7604 in k5838 in k5545 in k5542 in k5538 in k5247 in k5244 in k5241 in k5238 */
static void C_ccall f_18639(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word ab[54],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_18639,2,t0,t1);}
C_trace("ChickenBridge.scm: 365  make-loop-clause");
f_18419(((C_word*)t0)[10],(C_word)C_a_i_list(&a,18,lf[374],((C_word*)t0)[9],lf[375],((C_word*)t0)[8],lf[376],((C_word*)t0)[7],lf[377],((C_word*)t0)[6],lf[378],((C_word*)t0)[5],lf[379],((C_word*)t0)[4],lf[380],((C_word*)t0)[3],lf[381],((C_word*)t0)[2],lf[382],t1));}

/* gather-clause in gather-clauses in k18307 in k18304 in k18301 in k18298 in k17861 in k17858 in k17855 in k17852 in k17849 in k17327 in k17324 in k16801 in k16798 in k16795 in k16792 in k16789 in k16786 in k16783 in k16780 in k16777 in k16774 in k16771 in k16768 in k16765 in k16762 in k16759 in k16756 in k16753 in k16750 in k16747 in k16744 in k16741 in k16602 in k16599 in k16596 in k16593 in k16537 in k16534 in k16531 in k16528 in k16525 in k16522 in k16519 in k16516 in k15271 in k15202 in k15009 in k15006 in k14901 in k14850 in k7607 in k7604 in k5838 in k5545 in k5542 in k5538 in k5247 in k5244 in k5241 in k5238 */
static void C_fcall f_18572(C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word ab[10],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_18572,NULL,3,t1,t2,t3);}
t4=(*a=C_VECTOR_TYPE|1,a[1]=t2,tmp=(C_word)a,a+=2,tmp);
t5=C_SCHEME_UNDEFINED;
t6=(*a=C_VECTOR_TYPE|1,a[1]=t5,tmp=(C_word)a,a+=2,tmp);
t7=C_set_block_item(t6,0,(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_18578,a[2]=t3,a[3]=t6,a[4]=t4,a[5]=((C_word)li271),tmp=(C_word)a,a+=6,tmp));
t8=((C_word*)t6)[1];
f_18578(t8,t1,C_SCHEME_END_OF_LIST);}

/* do3128 in gather-clause in gather-clauses in k18307 in k18304 in k18301 in k18298 in k17861 in k17858 in k17855 in k17852 in k17849 in k17327 in k17324 in k16801 in k16798 in k16795 in k16792 in k16789 in k16786 in k16783 in k16780 in k16777 in k16774 in k16771 in k16768 in k16765 in k16762 in k16759 in k16756 in k16753 in k16750 in k16747 in k16744 in k16741 in k16602 in k16599 in k16596 in k16593 in k16537 in k16534 in k16531 in k16528 in k16525 in k16522 in k16519 in k16516 in k15271 in k15202 in k15009 in k15006 in k14901 in k14850 in k7607 in k7604 in k5838 in k5545 in k5542 in k5538 in k5247 in k5244 in k5241 in k5238 */
static void C_fcall f_18578(C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word ab[12],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_18578,NULL,3,t0,t1,t2);}
t3=(*a=C_VECTOR_TYPE|1,a[1]=t2,tmp=(C_word)a,a+=2,tmp);
if(C_truep((C_word)C_i_nullp(((C_word*)((C_word*)t0)[4])[1]))){
t4=t1;
((C_proc2)(void*)(*((C_word*)t4+1)))(2,t4,((C_word*)t3)[1]);}
else{
t4=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_18589,a[2]=t1,a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=t3,tmp=(C_word)a,a+=6,tmp);
t5=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_18600,a[2]=t3,a[3]=t4,tmp=(C_word)a,a+=4,tmp);
t6=(C_word)C_i_car(((C_word*)((C_word*)t0)[4])[1]);
C_trace("ChickenBridge.scm: 365  accessor");
t7=((C_word*)t0)[2];
((C_proc3)C_retrieve_proc(t7))(3,t7,t5,t6);}}

/* k18598 in do3128 in gather-clause in gather-clauses in k18307 in k18304 in k18301 in k18298 in k17861 in k17858 in k17855 in k17852 in k17849 in k17327 in k17324 in k16801 in k16798 in k16795 in k16792 in k16789 in k16786 in k16783 in k16780 in k16777 in k16774 in k16771 in k16768 in k16765 in k16762 in k16759 in k16756 in k16753 in k16750 in k16747 in k16744 in k16741 in k16602 in k16599 in k16596 in k16593 in k16537 in k16534 in k16531 in k16528 in k16525 in k16522 in k16519 in k16516 in k15271 in k15202 in k15009 in k15006 in k14901 in k14850 in k7607 in k7604 in k5838 in k5545 in k5542 in k5538 in k5247 in k5244 in k5241 in k5238 */
static void C_ccall f_18600(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 365  append");
t2=*((C_word*)lf[20]+1);
((C_proc4)C_retrieve_proc(t2))(4,t2,((C_word*)t0)[3],((C_word*)((C_word*)t0)[2])[1],t1);}

/* k18587 in do3128 in gather-clause in gather-clauses in k18307 in k18304 in k18301 in k18298 in k17861 in k17858 in k17855 in k17852 in k17849 in k17327 in k17324 in k16801 in k16798 in k16795 in k16792 in k16789 in k16786 in k16783 in k16780 in k16777 in k16774 in k16771 in k16768 in k16765 in k16762 in k16759 in k16756 in k16753 in k16750 in k16747 in k16744 in k16741 in k16602 in k16599 in k16596 in k16593 in k16537 in k16534 in k16531 in k16528 in k16525 in k16522 in k16519 in k16516 in k15271 in k15202 in k15009 in k15006 in k14901 in k14850 in k7607 in k7604 in k5838 in k5545 in k5542 in k5538 in k5247 in k5244 in k5241 in k5238 */
static void C_ccall f_18589(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[5])+1,t1);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
t4=C_mutate(((C_word *)((C_word*)t0)[4])+1,t3);
t5=((C_word*)((C_word*)t0)[3])[1];
f_18578(t5,((C_word*)t0)[2],((C_word*)((C_word*)t0)[5])[1]);}

/* make-loop-clause in k18307 in k18304 in k18301 in k18298 in k17861 in k17858 in k17855 in k17852 in k17849 in k17327 in k17324 in k16801 in k16798 in k16795 in k16792 in k16789 in k16786 in k16783 in k16780 in k16777 in k16774 in k16771 in k16768 in k16765 in k16762 in k16759 in k16756 in k16753 in k16750 in k16747 in k16744 in k16741 in k16602 in k16599 in k16596 in k16593 in k16537 in k16534 in k16531 in k16528 in k16525 in k16522 in k16519 in k16516 in k15271 in k15202 in k15009 in k15006 in k14901 in k14850 in k7607 in k7604 in k5838 in k5545 in k5542 in k5538 in k5247 in k5244 in k5241 in k5238 */
static void C_fcall f_18419(C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word ab[17],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_18419,NULL,2,t1,t2);}
t3=(C_word)C_a_i_vector(&a,9,C_SCHEME_FALSE,C_SCHEME_END_OF_LIST,C_SCHEME_END_OF_LIST,C_SCHEME_END_OF_LIST,C_SCHEME_END_OF_LIST,C_SCHEME_END_OF_LIST,C_SCHEME_END_OF_LIST,C_SCHEME_END_OF_LIST,C_SCHEME_END_OF_LIST);
if(C_truep((C_word)C_i_nullp(t2))){
t4=t1;
((C_proc2)(void*)(*((C_word*)t4+1)))(2,t4,t3);}
else{
t4=C_SCHEME_UNDEFINED;
t5=(*a=C_VECTOR_TYPE|1,a[1]=t4,tmp=(C_word)a,a+=2,tmp);
t6=C_set_block_item(t5,0,(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_18434,a[2]=t5,a[3]=t3,a[4]=((C_word)li269),tmp=(C_word)a,a+=5,tmp));
t7=((C_word*)t5)[1];
f_18434(t7,t1,t2);}}

/* do3116 in make-loop-clause in k18307 in k18304 in k18301 in k18298 in k17861 in k17858 in k17855 in k17852 in k17849 in k17327 in k17324 in k16801 in k16798 in k16795 in k16792 in k16789 in k16786 in k16783 in k16780 in k16777 in k16774 in k16771 in k16768 in k16765 in k16762 in k16759 in k16756 in k16753 in k16750 in k16747 in k16744 in k16741 in k16602 in k16599 in k16596 in k16593 in k16537 in k16534 in k16531 in k16528 in k16525 in k16522 in k16519 in k16516 in k15271 in k15202 in k15009 in k15006 in k14901 in k14850 in k7607 in k7604 in k5838 in k5545 in k5542 in k5538 in k5247 in k5244 in k5241 in k5238 */
static void C_fcall f_18434(C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word t14;
C_word t15;
C_word t16;
C_word t17;
C_word t18;
C_word t19;
C_word t20;
C_word t21;
C_word t22;
C_word t23;
C_word ab[5],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_18434,NULL,3,t0,t1,t2);}
if(C_truep((C_word)C_i_nullp(t2))){
t3=t1;
((C_proc2)(void*)(*((C_word*)t3+1)))(2,t3,((C_word*)t0)[3]);}
else{
t3=(C_word)C_i_car(t2);
t4=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_18447,a[2]=t1,a[3]=((C_word*)t0)[2],a[4]=t2,tmp=(C_word)a,a+=5,tmp);
t5=(C_word)C_eqp(t3,lf[374]);
if(C_truep(t5)){
t6=(C_word)C_i_cadr(t2);
C_trace("ChickenBridge.scm: 365  loop-operator-set!");
f_18317(t4,((C_word*)t0)[3],t6);}
else{
t6=(C_word)C_eqp(t3,lf[375]);
if(C_truep(t6)){
t7=(C_word)C_i_cadr(t2);
t8=t4;
f_18447(2,t8,(C_word)C_i_vector_set(((C_word*)t0)[3],C_fix(1),t7));}
else{
t7=(C_word)C_eqp(t3,lf[376]);
if(C_truep(t7)){
t8=(C_word)C_i_cadr(t2);
t9=t4;
f_18447(2,t9,(C_word)C_i_vector_set(((C_word*)t0)[3],C_fix(2),t8));}
else{
t8=(C_word)C_eqp(t3,lf[377]);
if(C_truep(t8)){
t9=(C_word)C_i_cadr(t2);
t10=t4;
f_18447(2,t10,(C_word)C_i_vector_set(((C_word*)t0)[3],C_fix(3),t9));}
else{
t9=(C_word)C_eqp(t3,lf[378]);
if(C_truep(t9)){
t10=(C_word)C_i_cadr(t2);
t11=t4;
f_18447(2,t11,(C_word)C_i_vector_set(((C_word*)t0)[3],C_fix(4),t10));}
else{
t10=(C_word)C_eqp(t3,lf[379]);
if(C_truep(t10)){
t11=(C_word)C_i_cadr(t2);
C_trace("ChickenBridge.scm: 365  loop-looping-set!");
f_18377(t4,((C_word*)t0)[3],t11);}
else{
t11=(C_word)C_eqp(t3,lf[380]);
if(C_truep(t11)){
t12=(C_word)C_i_cadr(t2);
t13=t4;
f_18447(2,t13,(C_word)C_i_vector_set(((C_word*)t0)[3],C_fix(6),t12));}
else{
t12=(C_word)C_eqp(t3,lf[381]);
if(C_truep(t12)){
t13=(C_word)C_i_cadr(t2);
t14=t4;
f_18447(2,t14,(C_word)C_i_vector_set(((C_word*)t0)[3],C_fix(7),t13));}
else{
t13=(C_word)C_eqp(t3,lf[382]);
if(C_truep(t13)){
t14=(C_word)C_i_cadr(t2);
t15=t4;
f_18447(2,t15,(C_word)C_i_vector_set(((C_word*)t0)[3],C_fix(8),t14));}
else{
t14=t4;
f_18447(2,t14,C_SCHEME_UNDEFINED);}}}}}}}}}}}

/* k18445 in do3116 in make-loop-clause in k18307 in k18304 in k18301 in k18298 in k17861 in k17858 in k17855 in k17852 in k17849 in k17327 in k17324 in k16801 in k16798 in k16795 in k16792 in k16789 in k16786 in k16783 in k16780 in k16777 in k16774 in k16771 in k16768 in k16765 in k16762 in k16759 in k16756 in k16753 in k16750 in k16747 in k16744 in k16741 in k16602 in k16599 in k16596 in k16593 in k16537 in k16534 in k16531 in k16528 in k16525 in k16522 in k16519 in k16516 in k15271 in k15202 in k15009 in k15006 in k14901 in k14850 in k7607 in k7604 in k5838 in k5545 in k5542 in k5538 in k5247 in k5244 in k5241 in k5238 */
static void C_ccall f_18447(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word *a;
t2=(C_word)C_i_cddr(((C_word*)t0)[4]);
t3=((C_word*)((C_word*)t0)[3])[1];
f_18434(t3,((C_word*)t0)[2],t2);}

/* loop-returning in k18307 in k18304 in k18301 in k18298 in k17861 in k17858 in k17855 in k17852 in k17849 in k17327 in k17324 in k16801 in k16798 in k16795 in k16792 in k16789 in k16786 in k16783 in k16780 in k16777 in k16774 in k16771 in k16768 in k16765 in k16762 in k16759 in k16756 in k16753 in k16750 in k16747 in k16744 in k16741 in k16602 in k16599 in k16596 in k16593 in k16537 in k16534 in k16531 in k16528 in k16525 in k16522 in k16519 in k16516 in k15271 in k15202 in k15009 in k15006 in k14901 in k14850 in k7607 in k7604 in k5838 in k5545 in k5542 in k5538 in k5247 in k5244 in k5241 in k5238 */
static void C_ccall f_18407(C_word c,C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word *a;
if(c!=3) C_bad_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr3,(void*)f_18407,3,t0,t1,t2);}
t3=t1;
((C_proc2)(void*)(*((C_word*)t3+1)))(2,t3,(C_word)C_i_vector_ref(t2,C_fix(8)));}

/* loop-finally in k18307 in k18304 in k18301 in k18298 in k17861 in k17858 in k17855 in k17852 in k17849 in k17327 in k17324 in k16801 in k16798 in k16795 in k16792 in k16789 in k16786 in k16783 in k16780 in k16777 in k16774 in k16771 in k16768 in k16765 in k16762 in k16759 in k16756 in k16753 in k16750 in k16747 in k16744 in k16741 in k16602 in k16599 in k16596 in k16593 in k16537 in k16534 in k16531 in k16528 in k16525 in k16522 in k16519 in k16516 in k15271 in k15202 in k15009 in k15006 in k14901 in k14850 in k7607 in k7604 in k5838 in k5545 in k5542 in k5538 in k5247 in k5244 in k5241 in k5238 */
static void C_ccall f_18395(C_word c,C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word *a;
if(c!=3) C_bad_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr3,(void*)f_18395,3,t0,t1,t2);}
t3=t1;
((C_proc2)(void*)(*((C_word*)t3+1)))(2,t3,(C_word)C_i_vector_ref(t2,C_fix(7)));}

/* loop-stepping in k18307 in k18304 in k18301 in k18298 in k17861 in k17858 in k17855 in k17852 in k17849 in k17327 in k17324 in k16801 in k16798 in k16795 in k16792 in k16789 in k16786 in k16783 in k16780 in k16777 in k16774 in k16771 in k16768 in k16765 in k16762 in k16759 in k16756 in k16753 in k16750 in k16747 in k16744 in k16741 in k16602 in k16599 in k16596 in k16593 in k16537 in k16534 in k16531 in k16528 in k16525 in k16522 in k16519 in k16516 in k15271 in k15202 in k15009 in k15006 in k14901 in k14850 in k7607 in k7604 in k5838 in k5545 in k5542 in k5538 in k5247 in k5244 in k5241 in k5238 */
static void C_ccall f_18383(C_word c,C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word *a;
if(c!=3) C_bad_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr3,(void*)f_18383,3,t0,t1,t2);}
t3=t1;
((C_proc2)(void*)(*((C_word*)t3+1)))(2,t3,(C_word)C_i_vector_ref(t2,C_fix(6)));}

/* loop-looping-set! in k18307 in k18304 in k18301 in k18298 in k17861 in k17858 in k17855 in k17852 in k17849 in k17327 in k17324 in k16801 in k16798 in k16795 in k16792 in k16789 in k16786 in k16783 in k16780 in k16777 in k16774 in k16771 in k16768 in k16765 in k16762 in k16759 in k16756 in k16753 in k16750 in k16747 in k16744 in k16741 in k16602 in k16599 in k16596 in k16593 in k16537 in k16534 in k16531 in k16528 in k16525 in k16522 in k16519 in k16516 in k15271 in k15202 in k15009 in k15006 in k14901 in k14850 in k7607 in k7604 in k5838 in k5545 in k5542 in k5538 in k5247 in k5244 in k5241 in k5238 */
static void C_fcall f_18377(C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word *a;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_18377,NULL,3,t1,t2,t3);}
t4=t1;
((C_proc2)(void*)(*((C_word*)t4+1)))(2,t4,(C_word)C_i_vector_set(t2,C_fix(5),t3));}

/* loop-looping in k18307 in k18304 in k18301 in k18298 in k17861 in k17858 in k17855 in k17852 in k17849 in k17327 in k17324 in k16801 in k16798 in k16795 in k16792 in k16789 in k16786 in k16783 in k16780 in k16777 in k16774 in k16771 in k16768 in k16765 in k16762 in k16759 in k16756 in k16753 in k16750 in k16747 in k16744 in k16741 in k16602 in k16599 in k16596 in k16593 in k16537 in k16534 in k16531 in k16528 in k16525 in k16522 in k16519 in k16516 in k15271 in k15202 in k15009 in k15006 in k14901 in k14850 in k7607 in k7604 in k5838 in k5545 in k5542 in k5538 in k5247 in k5244 in k5241 in k5238 */
static void C_ccall f_18371(C_word c,C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word *a;
if(c!=3) C_bad_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr3,(void*)f_18371,3,t0,t1,t2);}
t3=t1;
((C_proc2)(void*)(*((C_word*)t3+1)))(2,t3,(C_word)C_i_vector_ref(t2,C_fix(5)));}

/* loop-end-tests in k18307 in k18304 in k18301 in k18298 in k17861 in k17858 in k17855 in k17852 in k17849 in k17327 in k17324 in k16801 in k16798 in k16795 in k16792 in k16789 in k16786 in k16783 in k16780 in k16777 in k16774 in k16771 in k16768 in k16765 in k16762 in k16759 in k16756 in k16753 in k16750 in k16747 in k16744 in k16741 in k16602 in k16599 in k16596 in k16593 in k16537 in k16534 in k16531 in k16528 in k16525 in k16522 in k16519 in k16516 in k15271 in k15202 in k15009 in k15006 in k14901 in k14850 in k7607 in k7604 in k5838 in k5545 in k5542 in k5538 in k5247 in k5244 in k5241 in k5238 */
static void C_ccall f_18359(C_word c,C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word *a;
if(c!=3) C_bad_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr3,(void*)f_18359,3,t0,t1,t2);}
t3=t1;
((C_proc2)(void*)(*((C_word*)t3+1)))(2,t3,(C_word)C_i_vector_ref(t2,C_fix(4)));}

/* loop-initially in k18307 in k18304 in k18301 in k18298 in k17861 in k17858 in k17855 in k17852 in k17849 in k17327 in k17324 in k16801 in k16798 in k16795 in k16792 in k16789 in k16786 in k16783 in k16780 in k16777 in k16774 in k16771 in k16768 in k16765 in k16762 in k16759 in k16756 in k16753 in k16750 in k16747 in k16744 in k16741 in k16602 in k16599 in k16596 in k16593 in k16537 in k16534 in k16531 in k16528 in k16525 in k16522 in k16519 in k16516 in k15271 in k15202 in k15009 in k15006 in k14901 in k14850 in k7607 in k7604 in k5838 in k5545 in k5542 in k5538 in k5247 in k5244 in k5241 in k5238 */
static void C_ccall f_18347(C_word c,C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word *a;
if(c!=3) C_bad_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr3,(void*)f_18347,3,t0,t1,t2);}
t3=t1;
((C_proc2)(void*)(*((C_word*)t3+1)))(2,t3,(C_word)C_i_vector_ref(t2,C_fix(3)));}

/* loop-collectors in k18307 in k18304 in k18301 in k18298 in k17861 in k17858 in k17855 in k17852 in k17849 in k17327 in k17324 in k16801 in k16798 in k16795 in k16792 in k16789 in k16786 in k16783 in k16780 in k16777 in k16774 in k16771 in k16768 in k16765 in k16762 in k16759 in k16756 in k16753 in k16750 in k16747 in k16744 in k16741 in k16602 in k16599 in k16596 in k16593 in k16537 in k16534 in k16531 in k16528 in k16525 in k16522 in k16519 in k16516 in k15271 in k15202 in k15009 in k15006 in k14901 in k14850 in k7607 in k7604 in k5838 in k5545 in k5542 in k5538 in k5247 in k5244 in k5241 in k5238 */
static void C_ccall f_18335(C_word c,C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word *a;
if(c!=3) C_bad_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr3,(void*)f_18335,3,t0,t1,t2);}
t3=t1;
((C_proc2)(void*)(*((C_word*)t3+1)))(2,t3,(C_word)C_i_vector_ref(t2,C_fix(2)));}

/* loop-bindings in k18307 in k18304 in k18301 in k18298 in k17861 in k17858 in k17855 in k17852 in k17849 in k17327 in k17324 in k16801 in k16798 in k16795 in k16792 in k16789 in k16786 in k16783 in k16780 in k16777 in k16774 in k16771 in k16768 in k16765 in k16762 in k16759 in k16756 in k16753 in k16750 in k16747 in k16744 in k16741 in k16602 in k16599 in k16596 in k16593 in k16537 in k16534 in k16531 in k16528 in k16525 in k16522 in k16519 in k16516 in k15271 in k15202 in k15009 in k15006 in k14901 in k14850 in k7607 in k7604 in k5838 in k5545 in k5542 in k5538 in k5247 in k5244 in k5241 in k5238 */
static void C_ccall f_18323(C_word c,C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word *a;
if(c!=3) C_bad_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr3,(void*)f_18323,3,t0,t1,t2);}
t3=t1;
((C_proc2)(void*)(*((C_word*)t3+1)))(2,t3,(C_word)C_i_vector_ref(t2,C_fix(1)));}

/* loop-operator-set! in k18307 in k18304 in k18301 in k18298 in k17861 in k17858 in k17855 in k17852 in k17849 in k17327 in k17324 in k16801 in k16798 in k16795 in k16792 in k16789 in k16786 in k16783 in k16780 in k16777 in k16774 in k16771 in k16768 in k16765 in k16762 in k16759 in k16756 in k16753 in k16750 in k16747 in k16744 in k16741 in k16602 in k16599 in k16596 in k16593 in k16537 in k16534 in k16531 in k16528 in k16525 in k16522 in k16519 in k16516 in k15271 in k15202 in k15009 in k15006 in k14901 in k14850 in k7607 in k7604 in k5838 in k5545 in k5542 in k5538 in k5247 in k5244 in k5241 in k5238 */
static void C_fcall f_18317(C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word *a;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_18317,NULL,3,t1,t2,t3);}
t4=t1;
((C_proc2)(void*)(*((C_word*)t4+1)))(2,t4,(C_word)C_i_vector_set(t2,C_fix(0),t3));}

/* sal:output in k17861 in k17858 in k17855 in k17852 in k17849 in k17327 in k17324 in k16801 in k16798 in k16795 in k16792 in k16789 in k16786 in k16783 in k16780 in k16777 in k16774 in k16771 in k16768 in k16765 in k16762 in k16759 in k16756 in k16753 in k16750 in k16747 in k16744 in k16741 in k16602 in k16599 in k16596 in k16593 in k16537 in k16534 in k16531 in k16528 in k16525 in k16522 in k16519 in k16516 in k15271 in k15202 in k15009 in k15006 in k14901 in k14850 in k7607 in k7604 in k5838 in k5545 in k5542 in k5538 in k5247 in k5244 in k5241 in k5238 */
static void C_ccall f_18281(C_word c,C_word t0,C_word t1,...){
C_word tmp;
C_word t2;
C_word *a;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_18281,2,t0,t1);}
C_trace("ChickenBridge.scm: 364  print-error");
t2=C_retrieve(lf[330]);
((C_proc3)C_retrieve_proc(t2))(3,t2,t1,lf[362]);}

/* sal:open in k17861 in k17858 in k17855 in k17852 in k17849 in k17327 in k17324 in k16801 in k16798 in k16795 in k16792 in k16789 in k16786 in k16783 in k16780 in k16777 in k16774 in k16771 in k16768 in k16765 in k16762 in k16759 in k16756 in k16753 in k16750 in k16747 in k16744 in k16741 in k16602 in k16599 in k16596 in k16593 in k16537 in k16534 in k16531 in k16528 in k16525 in k16522 in k16519 in k16516 in k15271 in k15202 in k15009 in k15006 in k14901 in k14850 in k7607 in k7604 in k5838 in k5545 in k5542 in k5538 in k5247 in k5244 in k5241 in k5238 */
static void C_ccall f_18275(C_word c,C_word t0,C_word t1,...){
C_word tmp;
C_word t2;
C_word *a;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_18275,2,t0,t1);}
C_trace("ChickenBridge.scm: 364  print-error");
t2=C_retrieve(lf[330]);
((C_proc3)C_retrieve_proc(t2))(3,t2,t1,lf[360]);}

/* sal:load in k17861 in k17858 in k17855 in k17852 in k17849 in k17327 in k17324 in k16801 in k16798 in k16795 in k16792 in k16789 in k16786 in k16783 in k16780 in k16777 in k16774 in k16771 in k16768 in k16765 in k16762 in k16759 in k16756 in k16753 in k16750 in k16747 in k16744 in k16741 in k16602 in k16599 in k16596 in k16593 in k16537 in k16534 in k16531 in k16528 in k16525 in k16522 in k16519 in k16516 in k15271 in k15202 in k15009 in k15006 in k14901 in k14850 in k7607 in k7604 in k5838 in k5545 in k5542 in k5538 in k5247 in k5244 in k5241 in k5238 */
static void C_ccall f_18228(C_word c,C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word ab[4],*a=ab;
if(c!=3) C_bad_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr3,(void*)f_18228,3,t0,t1,t2);}
t3=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_18232,a[2]=t2,a[3]=t1,tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 364  file-exists?");
t4=C_retrieve(lf[358]);
((C_proc3)C_retrieve_proc(t4))(3,t4,t3,t2);}

/* k18230 in sal:load in k17861 in k17858 in k17855 in k17852 in k17849 in k17327 in k17324 in k16801 in k16798 in k16795 in k16792 in k16789 in k16786 in k16783 in k16780 in k16777 in k16774 in k16771 in k16768 in k16765 in k16762 in k16759 in k16756 in k16753 in k16750 in k16747 in k16744 in k16741 in k16602 in k16599 in k16596 in k16593 in k16537 in k16534 in k16531 in k16528 in k16525 in k16522 in k16519 in k16516 in k15271 in k15202 in k15009 in k15006 in k14901 in k14850 in k7607 in k7604 in k5838 in k5545 in k5542 in k5538 in k5247 in k5244 in k5241 in k5238 */
static void C_ccall f_18232(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word ab[14],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_18232,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_18235,a[2]=((C_word*)t0)[3],tmp=(C_word)a,a+=3,tmp);
if(C_truep(t1)){
t3=(C_word)C_i_string_length(((C_word*)t0)[2]);
t4=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_18257,a[2]=((C_word*)t0)[2],a[3]=t2,tmp=(C_word)a,a+=4,tmp);
if(C_truep((C_word)C_i_greaterp(t3,C_fix(4)))){
t5=(C_word)C_a_i_minus(&a,2,t3,C_fix(4));
C_trace("substring=?");
t6=C_retrieve(lf[354]);
((C_proc7)(void*)(*((C_word*)t6+1)))(7,t6,t4,((C_word*)t0)[2],lf[355],t5,C_fix(0),C_SCHEME_FALSE);}
else{
t5=t4;
f_18257(2,t5,C_SCHEME_FALSE);}}
else{
t3=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_18248,a[2]=t2,tmp=(C_word)a,a+=3,tmp);
C_trace("ChickenBridge.scm: 364  string-append");
t4=*((C_word*)lf[124]+1);
((C_proc5)C_retrieve_proc(t4))(5,t4,t3,lf[356],((C_word*)t0)[2],lf[357]);}}

/* k18246 in k18230 in sal:load in k17861 in k17858 in k17855 in k17852 in k17849 in k17327 in k17324 in k16801 in k16798 in k16795 in k16792 in k16789 in k16786 in k16783 in k16780 in k16777 in k16774 in k16771 in k16768 in k16765 in k16762 in k16759 in k16756 in k16753 in k16750 in k16747 in k16744 in k16741 in k16602 in k16599 in k16596 in k16593 in k16537 in k16534 in k16531 in k16528 in k16525 in k16522 in k16519 in k16516 in k15271 in k15202 in k15009 in k15006 in k14901 in k14850 in k7607 in k7604 in k5838 in k5545 in k5542 in k5538 in k5247 in k5244 in k5241 in k5238 */
static void C_ccall f_18248(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 364  print-error");
t2=C_retrieve(lf[330]);
((C_proc3)C_retrieve_proc(t2))(3,t2,((C_word*)t0)[2],t1);}

/* k18255 in k18230 in sal:load in k17861 in k17858 in k17855 in k17852 in k17849 in k17327 in k17324 in k16801 in k16798 in k16795 in k16792 in k16789 in k16786 in k16783 in k16780 in k16777 in k16774 in k16771 in k16768 in k16765 in k16762 in k16759 in k16756 in k16753 in k16750 in k16747 in k16744 in k16741 in k16602 in k16599 in k16596 in k16593 in k16537 in k16534 in k16531 in k16528 in k16525 in k16522 in k16519 in k16516 in k15271 in k15202 in k15009 in k15006 in k14901 in k14850 in k7607 in k7604 in k5838 in k5545 in k5542 in k5538 in k5247 in k5244 in k5241 in k5238 */
static void C_ccall f_18257(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
if(C_truep(t1)){
C_trace("ChickenBridge.scm: 364  load-sal-file");
t2=C_retrieve(lf[352]);
((C_proc3)C_retrieve_proc(t2))(3,t2,((C_word*)t0)[3],((C_word*)t0)[2]);}
else{
C_trace("ChickenBridge.scm: 364  load");
t2=C_retrieve(lf[353]);
((C_proc3)C_retrieve_proc(t2))(3,t2,((C_word*)t0)[3],((C_word*)t0)[2]);}}

/* k18233 in k18230 in sal:load in k17861 in k17858 in k17855 in k17852 in k17849 in k17327 in k17324 in k16801 in k16798 in k16795 in k16792 in k16789 in k16786 in k16783 in k16780 in k16777 in k16774 in k16771 in k16768 in k16765 in k16762 in k16759 in k16756 in k16753 in k16750 in k16747 in k16744 in k16741 in k16602 in k16599 in k16596 in k16593 in k16537 in k16534 in k16531 in k16528 in k16525 in k16522 in k16519 in k16516 in k15271 in k15202 in k15009 in k15006 in k14901 in k14850 in k7607 in k7604 in k5838 in k5545 in k5542 in k5538 in k5247 in k5244 in k5241 in k5238 */
static void C_ccall f_18235(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 364  values");
C_values(2,0,((C_word*)t0)[2]);}

/* sal:chdir in k17861 in k17858 in k17855 in k17852 in k17849 in k17327 in k17324 in k16801 in k16798 in k16795 in k16792 in k16789 in k16786 in k16783 in k16780 in k16777 in k16774 in k16771 in k16768 in k16765 in k16762 in k16759 in k16756 in k16753 in k16750 in k16747 in k16744 in k16741 in k16602 in k16599 in k16596 in k16593 in k16537 in k16534 in k16531 in k16528 in k16525 in k16522 in k16519 in k16516 in k15271 in k15202 in k15009 in k15006 in k14901 in k14850 in k7607 in k7604 in k5838 in k5545 in k5542 in k5538 in k5247 in k5244 in k5241 in k5238 */
static void C_ccall f_18219(C_word c,C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word ab[3],*a=ab;
if(c!=3) C_bad_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr3,(void*)f_18219,3,t0,t1,t2);}
t3=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_18223,a[2]=t1,tmp=(C_word)a,a+=3,tmp);
C_trace("ChickenBridge.scm: 364  chdir");
t4=C_retrieve(lf[46]);
((C_proc3)C_retrieve_proc(t4))(3,t4,t3,t2);}

/* k18221 in sal:chdir in k17861 in k17858 in k17855 in k17852 in k17849 in k17327 in k17324 in k16801 in k16798 in k16795 in k16792 in k16789 in k16786 in k16783 in k16780 in k16777 in k16774 in k16771 in k16768 in k16765 in k16762 in k16759 in k16756 in k16753 in k16750 in k16747 in k16744 in k16741 in k16602 in k16599 in k16596 in k16593 in k16537 in k16534 in k16531 in k16528 in k16525 in k16522 in k16519 in k16516 in k15271 in k15202 in k15009 in k15006 in k14901 in k14850 in k7607 in k7604 in k5838 in k5545 in k5542 in k5538 in k5247 in k5244 in k5241 in k5238 */
static void C_ccall f_18223(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 364  values");
C_values(2,0,((C_word*)t0)[2]);}

/* sal:print in k17861 in k17858 in k17855 in k17852 in k17849 in k17327 in k17324 in k16801 in k16798 in k16795 in k16792 in k16789 in k16786 in k16783 in k16780 in k16777 in k16774 in k16771 in k16768 in k16765 in k16762 in k16759 in k16756 in k16753 in k16750 in k16747 in k16744 in k16741 in k16602 in k16599 in k16596 in k16593 in k16537 in k16534 in k16531 in k16528 in k16525 in k16522 in k16519 in k16516 in k15271 in k15202 in k15009 in k15006 in k14901 in k14850 in k7607 in k7604 in k5838 in k5545 in k5542 in k5538 in k5247 in k5244 in k5241 in k5238 */
static void C_ccall f_18040(C_word c,C_word t0,C_word t1,...){
C_word tmp;
C_word t2;
va_list v;
C_word *a,c2=c;
C_save_rest(t1,c2,2);
C_check_for_interrupt;
if(!C_demand(c*C_SIZEOF_PAIR+16)){
C_save_and_reclaim((void*)tr2r,(void*)f_18040r,2,t0,t1);}
else{
a=C_alloc((c-2)*3);
t2=C_restore_rest(a,C_rest_count(0));
f_18040r(t0,t1,t2);}}

static void C_ccall f_18040r(C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word *a=C_alloc(16);
t3=C_SCHEME_UNDEFINED;
t4=(*a=C_VECTOR_TYPE|1,a[1]=t3,tmp=(C_word)a,a+=2,tmp);
t5=C_set_block_item(t4,0,(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_18043,a[2]=t4,a[3]=((C_word)li252),tmp=(C_word)a,a+=4,tmp));
t6=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_18188,a[2]=t1,tmp=(C_word)a,a+=3,tmp);
t7=C_SCHEME_UNDEFINED;
t8=(*a=C_VECTOR_TYPE|1,a[1]=t7,tmp=(C_word)a,a+=2,tmp);
t9=C_set_block_item(t8,0,(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_18193,a[2]=t4,a[3]=t8,a[4]=((C_word)li253),tmp=(C_word)a,a+=5,tmp));
t10=((C_word*)t8)[1];
f_18193(t10,t6,t2);}

/* do2944 in sal:print in k17861 in k17858 in k17855 in k17852 in k17849 in k17327 in k17324 in k16801 in k16798 in k16795 in k16792 in k16789 in k16786 in k16783 in k16780 in k16777 in k16774 in k16771 in k16768 in k16765 in k16762 in k16759 in k16756 in k16753 in k16750 in k16747 in k16744 in k16741 in k16602 in k16599 in k16596 in k16593 in k16537 in k16534 in k16531 in k16528 in k16525 in k16522 in k16519 in k16516 in k15271 in k15202 in k15009 in k15006 in k14901 in k14850 in k7607 in k7604 in k5838 in k5545 in k5542 in k5538 in k5247 in k5244 in k5241 in k5238 */
static void C_fcall f_18193(C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word t5;
C_word ab[5],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_18193,NULL,3,t0,t1,t2);}
if(C_truep((C_word)C_i_nullp(t2))){
C_trace("ChickenBridge.scm: 364  print-message");
t3=C_retrieve(lf[341]);
((C_proc3)C_retrieve_proc(t3))(3,t3,t1,lf[349]);}
else{
t3=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_18206,a[2]=t1,a[3]=((C_word*)t0)[3],a[4]=t2,tmp=(C_word)a,a+=5,tmp);
t4=(C_word)C_i_car(t2);
C_trace("ChickenBridge.scm: 364  printer");
t5=((C_word*)((C_word*)t0)[2])[1];
f_18043(t5,t3,t4);}}

/* k18204 in do2944 in sal:print in k17861 in k17858 in k17855 in k17852 in k17849 in k17327 in k17324 in k16801 in k16798 in k16795 in k16792 in k16789 in k16786 in k16783 in k16780 in k16777 in k16774 in k16771 in k16768 in k16765 in k16762 in k16759 in k16756 in k16753 in k16750 in k16747 in k16744 in k16741 in k16602 in k16599 in k16596 in k16593 in k16537 in k16534 in k16531 in k16528 in k16525 in k16522 in k16519 in k16516 in k15271 in k15202 in k15009 in k15006 in k14901 in k14850 in k7607 in k7604 in k5838 in k5545 in k5542 in k5538 in k5247 in k5244 in k5241 in k5238 */
static void C_ccall f_18206(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word *a;
t2=(C_word)C_i_cdr(((C_word*)t0)[4]);
t3=((C_word*)((C_word*)t0)[3])[1];
f_18193(t3,((C_word*)t0)[2],t2);}

/* k18186 in sal:print in k17861 in k17858 in k17855 in k17852 in k17849 in k17327 in k17324 in k16801 in k16798 in k16795 in k16792 in k16789 in k16786 in k16783 in k16780 in k16777 in k16774 in k16771 in k16768 in k16765 in k16762 in k16759 in k16756 in k16753 in k16750 in k16747 in k16744 in k16741 in k16602 in k16599 in k16596 in k16593 in k16537 in k16534 in k16531 in k16528 in k16525 in k16522 in k16519 in k16516 in k15271 in k15202 in k15009 in k15006 in k14901 in k14850 in k7607 in k7604 in k5838 in k5545 in k5542 in k5538 in k5247 in k5244 in k5241 in k5238 */
static void C_ccall f_18188(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 364  values");
C_values(2,0,((C_word*)t0)[2]);}

/* printer in sal:print in k17861 in k17858 in k17855 in k17852 in k17849 in k17327 in k17324 in k16801 in k16798 in k16795 in k16792 in k16789 in k16786 in k16783 in k16780 in k16777 in k16774 in k16771 in k16768 in k16765 in k16762 in k16759 in k16756 in k16753 in k16750 in k16747 in k16744 in k16741 in k16602 in k16599 in k16596 in k16593 in k16537 in k16534 in k16531 in k16528 in k16525 in k16522 in k16519 in k16516 in k15271 in k15202 in k15009 in k15006 in k14901 in k14850 in k7607 in k7604 in k5838 in k5545 in k5542 in k5538 in k5247 in k5244 in k5241 in k5238 */
static void C_fcall f_18043(C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word ab[17],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_18043,NULL,3,t0,t1,t2);}
t3=t2;
if(C_truep(t3)){
if(C_truep((C_word)C_i_nullp(t2))){
C_trace("ChickenBridge.scm: 364  print-message");
t4=C_retrieve(lf[341]);
((C_proc3)C_retrieve_proc(t4))(3,t4,t1,lf[342]);}
else{
if(C_truep((C_word)C_i_pairp(t2))){
t4=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_18071,a[2]=t2,a[3]=((C_word*)t0)[2],a[4]=t1,tmp=(C_word)a,a+=5,tmp);
C_trace("ChickenBridge.scm: 364  print-message");
t5=C_retrieve(lf[341]);
((C_proc3)C_retrieve_proc(t5))(3,t5,t4,lf[345]);}
else{
t4=(C_word)C_eqp(t2,C_SCHEME_TRUE);
if(C_truep(t4)){
C_trace("ChickenBridge.scm: 364  print-message");
t5=C_retrieve(lf[341]);
((C_proc3)C_retrieve_proc(t5))(3,t5,t1,lf[346]);}
else{
if(C_truep((C_word)C_i_numberp(t2))){
if(C_truep((C_word)C_i_inexactp(t2))){
t5=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_18158,a[2]=t1,tmp=(C_word)a,a+=3,tmp);
t6=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_18162,a[2]=t5,tmp=(C_word)a,a+=3,tmp);
C_trace("ChickenBridge.scm: 364  decimals");
t7=C_retrieve(lf[82]);
((C_proc4)C_retrieve_proc(t7))(4,t7,t6,t2,C_fix(3));}
else{
t5=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_18169,a[2]=t1,tmp=(C_word)a,a+=3,tmp);
C_trace("ChickenBridge.scm: 364  number->string");
C_number_to_string(3,0,t5,t2);}}
else{
if(C_truep((C_word)C_i_stringp(t2))){
C_trace("ChickenBridge.scm: 364  print-message");
t5=C_retrieve(lf[341]);
((C_proc3)C_retrieve_proc(t5))(3,t5,t1,t2);}
else{
t5=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_18185,a[2]=t1,tmp=(C_word)a,a+=3,tmp);
C_trace("ChickenBridge.scm: 364  sprintf");
t6=C_retrieve(lf[33]);
((C_proc4)C_retrieve_proc(t6))(4,t6,t5,lf[347],t2);}}}}}}
else{
C_trace("ChickenBridge.scm: 364  print-message");
t4=C_retrieve(lf[341]);
((C_proc3)C_retrieve_proc(t4))(3,t4,t1,lf[348]);}}

/* k18183 in printer in sal:print in k17861 in k17858 in k17855 in k17852 in k17849 in k17327 in k17324 in k16801 in k16798 in k16795 in k16792 in k16789 in k16786 in k16783 in k16780 in k16777 in k16774 in k16771 in k16768 in k16765 in k16762 in k16759 in k16756 in k16753 in k16750 in k16747 in k16744 in k16741 in k16602 in k16599 in k16596 in k16593 in k16537 in k16534 in k16531 in k16528 in k16525 in k16522 in k16519 in k16516 in k15271 in k15202 in k15009 in k15006 in k14901 in k14850 in k7607 in k7604 in k5838 in k5545 in k5542 in k5538 in k5247 in k5244 in k5241 in k5238 */
static void C_ccall f_18185(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 364  print-message");
t2=C_retrieve(lf[341]);
((C_proc3)C_retrieve_proc(t2))(3,t2,((C_word*)t0)[2],t1);}

/* k18167 in printer in sal:print in k17861 in k17858 in k17855 in k17852 in k17849 in k17327 in k17324 in k16801 in k16798 in k16795 in k16792 in k16789 in k16786 in k16783 in k16780 in k16777 in k16774 in k16771 in k16768 in k16765 in k16762 in k16759 in k16756 in k16753 in k16750 in k16747 in k16744 in k16741 in k16602 in k16599 in k16596 in k16593 in k16537 in k16534 in k16531 in k16528 in k16525 in k16522 in k16519 in k16516 in k15271 in k15202 in k15009 in k15006 in k14901 in k14850 in k7607 in k7604 in k5838 in k5545 in k5542 in k5538 in k5247 in k5244 in k5241 in k5238 */
static void C_ccall f_18169(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 364  print-message");
t2=C_retrieve(lf[341]);
((C_proc3)C_retrieve_proc(t2))(3,t2,((C_word*)t0)[2],t1);}

/* k18160 in printer in sal:print in k17861 in k17858 in k17855 in k17852 in k17849 in k17327 in k17324 in k16801 in k16798 in k16795 in k16792 in k16789 in k16786 in k16783 in k16780 in k16777 in k16774 in k16771 in k16768 in k16765 in k16762 in k16759 in k16756 in k16753 in k16750 in k16747 in k16744 in k16741 in k16602 in k16599 in k16596 in k16593 in k16537 in k16534 in k16531 in k16528 in k16525 in k16522 in k16519 in k16516 in k15271 in k15202 in k15009 in k15006 in k14901 in k14850 in k7607 in k7604 in k5838 in k5545 in k5542 in k5538 in k5247 in k5244 in k5241 in k5238 */
static void C_ccall f_18162(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 364  number->string");
C_number_to_string(3,0,((C_word*)t0)[2],t1);}

/* k18156 in printer in sal:print in k17861 in k17858 in k17855 in k17852 in k17849 in k17327 in k17324 in k16801 in k16798 in k16795 in k16792 in k16789 in k16786 in k16783 in k16780 in k16777 in k16774 in k16771 in k16768 in k16765 in k16762 in k16759 in k16756 in k16753 in k16750 in k16747 in k16744 in k16741 in k16602 in k16599 in k16596 in k16593 in k16537 in k16534 in k16531 in k16528 in k16525 in k16522 in k16519 in k16516 in k15271 in k15202 in k15009 in k15006 in k14901 in k14850 in k7607 in k7604 in k5838 in k5545 in k5542 in k5538 in k5247 in k5244 in k5241 in k5238 */
static void C_ccall f_18158(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 364  print-message");
t2=C_retrieve(lf[341]);
((C_proc3)C_retrieve_proc(t2))(3,t2,((C_word*)t0)[2],t1);}

/* k18069 in printer in sal:print in k17861 in k17858 in k17855 in k17852 in k17849 in k17327 in k17324 in k16801 in k16798 in k16795 in k16792 in k16789 in k16786 in k16783 in k16780 in k16777 in k16774 in k16771 in k16768 in k16765 in k16762 in k16759 in k16756 in k16753 in k16750 in k16747 in k16744 in k16741 in k16602 in k16599 in k16596 in k16593 in k16537 in k16534 in k16531 in k16528 in k16525 in k16522 in k16519 in k16516 in k15271 in k15202 in k15009 in k15006 in k14901 in k14850 in k7607 in k7604 in k5838 in k5545 in k5542 in k5538 in k5247 in k5244 in k5241 in k5238 */
static void C_ccall f_18071(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[10],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_18071,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_18074,a[2]=((C_word*)t0)[4],tmp=(C_word)a,a+=3,tmp);
t3=C_SCHEME_UNDEFINED;
t4=(*a=C_VECTOR_TYPE|1,a[1]=t3,tmp=(C_word)a,a+=2,tmp);
t5=C_set_block_item(t4,0,(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_18079,a[2]=((C_word*)t0)[3],a[3]=t4,a[4]=((C_word)li251),tmp=(C_word)a,a+=5,tmp));
t6=((C_word*)t4)[1];
f_18079(t6,t2,((C_word*)t0)[2]);}

/* do2936 in k18069 in printer in sal:print in k17861 in k17858 in k17855 in k17852 in k17849 in k17327 in k17324 in k16801 in k16798 in k16795 in k16792 in k16789 in k16786 in k16783 in k16780 in k16777 in k16774 in k16771 in k16768 in k16765 in k16762 in k16759 in k16756 in k16753 in k16750 in k16747 in k16744 in k16741 in k16602 in k16599 in k16596 in k16593 in k16537 in k16534 in k16531 in k16528 in k16525 in k16522 in k16519 in k16516 in k15271 in k15202 in k15009 in k15006 in k14901 in k14850 in k7607 in k7604 in k5838 in k5545 in k5542 in k5538 in k5247 in k5244 in k5241 in k5238 */
static void C_fcall f_18079(C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word t5;
C_word ab[5],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_18079,NULL,3,t0,t1,t2);}
if(C_truep((C_word)C_i_nullp(t2))){
t3=t1;
((C_proc2)(void*)(*((C_word*)t3+1)))(2,t3,C_SCHEME_FALSE);}
else{
t3=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_18089,a[2]=t1,a[3]=((C_word*)t0)[3],a[4]=t2,tmp=(C_word)a,a+=5,tmp);
t4=(C_word)C_i_car(t2);
C_trace("ChickenBridge.scm: 364  printer");
t5=((C_word*)((C_word*)t0)[2])[1];
f_18043(t5,t3,t4);}}

/* k18087 in do2936 in k18069 in printer in sal:print in k17861 in k17858 in k17855 in k17852 in k17849 in k17327 in k17324 in k16801 in k16798 in k16795 in k16792 in k16789 in k16786 in k16783 in k16780 in k16777 in k16774 in k16771 in k16768 in k16765 in k16762 in k16759 in k16756 in k16753 in k16750 in k16747 in k16744 in k16741 in k16602 in k16599 in k16596 in k16593 in k16537 in k16534 in k16531 in k16528 in k16525 in k16522 in k16519 in k16516 in k15271 in k15202 in k15009 in k15006 in k14901 in k14850 in k7607 in k7604 in k5838 in k5545 in k5542 in k5538 in k5247 in k5244 in k5241 in k5238 */
static void C_ccall f_18089(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[5],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_18089,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_18092,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],tmp=(C_word)a,a+=5,tmp);
t3=(C_word)C_i_cdr(((C_word*)t0)[4]);
if(C_truep((C_word)C_i_nullp(t3))){
t4=t2;
f_18092(2,t4,C_SCHEME_UNDEFINED);}
else{
C_trace("ChickenBridge.scm: 364  print-message");
t4=C_retrieve(lf[341]);
((C_proc3)C_retrieve_proc(t4))(3,t4,t2,lf[344]);}}

/* k18090 in k18087 in do2936 in k18069 in printer in sal:print in k17861 in k17858 in k17855 in k17852 in k17849 in k17327 in k17324 in k16801 in k16798 in k16795 in k16792 in k16789 in k16786 in k16783 in k16780 in k16777 in k16774 in k16771 in k16768 in k16765 in k16762 in k16759 in k16756 in k16753 in k16750 in k16747 in k16744 in k16741 in k16602 in k16599 in k16596 in k16593 in k16537 in k16534 in k16531 in k16528 in k16525 in k16522 in k16519 in k16516 in k15271 in k15202 in k15009 in k15006 in k14901 in k14850 in k7607 in k7604 in k5838 in k5545 in k5542 in k5538 in k5247 in k5244 in k5241 in k5238 */
static void C_ccall f_18092(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word *a;
t2=(C_word)C_i_cdr(((C_word*)t0)[4]);
t3=((C_word*)((C_word*)t0)[3])[1];
f_18079(t3,((C_word*)t0)[2],t2);}

/* k18072 in k18069 in printer in sal:print in k17861 in k17858 in k17855 in k17852 in k17849 in k17327 in k17324 in k16801 in k16798 in k16795 in k16792 in k16789 in k16786 in k16783 in k16780 in k16777 in k16774 in k16771 in k16768 in k16765 in k16762 in k16759 in k16756 in k16753 in k16750 in k16747 in k16744 in k16741 in k16602 in k16599 in k16596 in k16593 in k16537 in k16534 in k16531 in k16528 in k16525 in k16522 in k16519 in k16516 in k15271 in k15202 in k15009 in k15006 in k14901 in k14850 in k7607 in k7604 in k5838 in k5545 in k5542 in k5538 in k5247 in k5244 in k5241 in k5238 */
static void C_ccall f_18074(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 364  print-message");
t2=C_retrieve(lf[341]);
((C_proc3)C_retrieve_proc(t2))(3,t2,((C_word*)t0)[2],lf[343]);}

/* sal in k17861 in k17858 in k17855 in k17852 in k17849 in k17327 in k17324 in k16801 in k16798 in k16795 in k16792 in k16789 in k16786 in k16783 in k16780 in k16777 in k16774 in k16771 in k16768 in k16765 in k16762 in k16759 in k16756 in k16753 in k16750 in k16747 in k16744 in k16741 in k16602 in k16599 in k16596 in k16593 in k16537 in k16534 in k16531 in k16528 in k16525 in k16522 in k16519 in k16516 in k15271 in k15202 in k15009 in k15006 in k14901 in k14850 in k7607 in k7604 in k5838 in k5545 in k5542 in k5538 in k5247 in k5244 in k5241 in k5238 */
static void C_ccall f_17869(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4,C_word t5){
C_word tmp;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word ab[7],*a=ab;
if(c!=6) C_bad_argc_2(c,6,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr6,(void*)f_17869,6,t0,t1,t2,t3,t4,t5);}
t6=(*a=C_VECTOR_TYPE|1,a[1]=t3,tmp=(C_word)a,a+=2,tmp);
t7=C_mutate(&lf[326],t2);
t8=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_17875,a[2]=t6,a[3]=t5,a[4]=t1,tmp=(C_word)a,a+=5,tmp);
C_trace("map");
t9=*((C_word*)lf[19]+1);
((C_proc4)(void*)(*((C_word*)t9+1)))(4,t9,t8,C_retrieve2(lf[252],"list->token"),t4);}

/* k17873 in sal in k17861 in k17858 in k17855 in k17852 in k17849 in k17327 in k17324 in k16801 in k16798 in k16795 in k16792 in k16789 in k16786 in k16783 in k16780 in k16777 in k16774 in k16771 in k16768 in k16765 in k16762 in k16759 in k16756 in k16753 in k16750 in k16747 in k16744 in k16741 in k16602 in k16599 in k16596 in k16593 in k16537 in k16534 in k16531 in k16528 in k16525 in k16522 in k16519 in k16516 in k15271 in k15202 in k15009 in k15006 in k14901 in k14850 in k7607 in k7604 in k5838 in k5545 in k5542 in k5538 in k5247 in k5244 in k5241 in k5238 */
static void C_ccall f_17875(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[5],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_17875,2,t0,t1);}
t2=C_mutate(&lf[327],t1);
t3=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_17878,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],tmp=(C_word)a,a+=5,tmp);
if(C_truep((C_word)C_i_nequalp(((C_word*)((C_word*)t0)[2])[1],C_fix(0)))){
t4=C_set_block_item(((C_word*)t0)[2],0,C_fix(36608));
t5=t3;
f_17878(t5,t4);}
else{
t4=t3;
f_17878(t4,C_SCHEME_FALSE);}}

/* k17876 in k17873 in sal in k17861 in k17858 in k17855 in k17852 in k17849 in k17327 in k17324 in k16801 in k16798 in k16795 in k16792 in k16789 in k16786 in k16783 in k16780 in k16777 in k16774 in k16771 in k16768 in k16765 in k16762 in k16759 in k16756 in k16753 in k16750 in k16747 in k16744 in k16741 in k16602 in k16599 in k16596 in k16593 in k16537 in k16534 in k16531 in k16528 in k16525 in k16522 in k16519 in k16516 in k15271 in k15202 in k15009 in k15006 in k14901 in k14850 in k7607 in k7604 in k5838 in k5545 in k5542 in k5538 in k5247 in k5244 in k5241 in k5238 */
static void C_fcall f_17878(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word ab[21],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_17878,NULL,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_17882,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],tmp=(C_word)a,a+=4,tmp);
t3=((C_word*)((C_word*)t0)[2])[1];
t4=C_retrieve2(lf[327],"*sal-tokens*");
t5=(C_word)C_a_i_list(&a,4,C_SCHEME_FALSE,C_fix(0),C_SCHEME_FALSE,C_SCHEME_FALSE);
t6=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_15678,a[2]=t4,a[3]=t3,a[4]=((C_word)li249),tmp=(C_word)a,a+=5,tmp);
C_trace("ChickenBridge.scm: 364  call/cc");
t7=*((C_word*)lf[339]+1);
((C_proc3)C_retrieve_proc(t7))(3,t7,t2,t6);}

/* a15677 in k17876 in k17873 in sal in k17861 in k17858 in k17855 in k17852 in k17849 in k17327 in k17324 in k16801 in k16798 in k16795 in k16792 in k16789 in k16786 in k16783 in k16780 in k16777 in k16774 in k16771 in k16768 in k16765 in k16762 in k16759 in k16756 in k16753 in k16750 in k16747 in k16744 in k16741 in k16602 in k16599 in k16596 in k16593 in k16537 in k16534 in k16531 in k16528 in k16525 in k16522 in k16519 in k16516 in k15271 in k15202 in k15009 in k15006 in k14901 in k14850 in k7607 in k7604 in k5838 in k5545 in k5542 in k5538 in k5247 in k5244 in k5241 in k5238 */
static void C_ccall f_15678(C_word c,C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word t5;
C_word ab[10],*a=ab;
if(c!=3) C_bad_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr3,(void*)f_15678,3,t0,t1,t2);}
t3=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_15684,a[2]=t2,a[3]=((C_word*)t0)[2],a[4]=((C_word*)t0)[3],a[5]=((C_word)li247),tmp=(C_word)a,a+=6,tmp);
t4=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_15691,a[2]=t2,a[3]=((C_word)li248),tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 364  call-with-values");
C_call_with_values(4,0,t1,t3,t4);}

/* a15690 in a15677 in k17876 in k17873 in sal in k17861 in k17858 in k17855 in k17852 in k17849 in k17327 in k17324 in k16801 in k16798 in k16795 in k16792 in k16789 in k16786 in k16783 in k16780 in k16777 in k16774 in k16771 in k16768 in k16765 in k16762 in k16759 in k16756 in k16753 in k16750 in k16747 in k16744 in k16741 in k16602 in k16599 in k16596 in k16593 in k16537 in k16534 in k16531 in k16528 in k16525 in k16522 in k16519 in k16516 in k15271 in k15202 in k15009 in k15006 in k14901 in k14850 in k7607 in k7604 in k5838 in k5545 in k5542 in k5538 in k5247 in k5244 in k5241 in k5238 */
static void C_ccall f_15691(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4){
C_word tmp;
C_word t5;
C_word t6;
C_word t7;
C_word ab[5],*a=ab;
if(c!=5) C_bad_argc_2(c,5,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr5,(void*)f_15691,5,t0,t1,t2,t3,t4);}
t5=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_15698,a[2]=((C_word*)t0)[2],a[3]=t3,a[4]=t1,tmp=(C_word)a,a+=5,tmp);
if(C_truep(t2)){
t6=(C_word)C_i_nullp(t4);
t7=t5;
f_15698(t7,(C_truep(t6)?t6:C_SCHEME_FALSE));}
else{
t6=t5;
f_15698(t6,C_SCHEME_FALSE);}}

/* k15696 in a15690 in a15677 in k17876 in k17873 in sal in k17861 in k17858 in k17855 in k17852 in k17849 in k17327 in k17324 in k16801 in k16798 in k16795 in k16792 in k16789 in k16786 in k16783 in k16780 in k16777 in k16774 in k16771 in k16768 in k16765 in k16762 in k16759 in k16756 in k16753 in k16750 in k16747 in k16744 in k16741 in k16602 in k16599 in k16596 in k16593 in k16537 in k16534 in k16531 in k16528 in k16525 in k16522 in k16519 in k16516 in k15271 in k15202 in k15009 in k15006 in k14901 in k14850 in k7607 in k7604 in k5838 in k5545 in k5542 in k5538 in k5247 in k5244 in k5241 in k5238 */
static void C_fcall f_15698(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[5],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_15698,NULL,2,t0,t1);}
if(C_truep(t1)){
t2=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_15705,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],tmp=(C_word)a,a+=5,tmp);
C_trace("ChickenBridge.scm: 364  add-emit-info");
f_15335(t2,lf[336],lf[337],C_SCHEME_END_OF_LIST);}
else{
C_trace("ChickenBridge.scm: 364  make-parse-error");
f_15155(((C_word*)t0)[4],lf[338],C_retrieve2(lf[300],"*maxtokpos*"));}}

/* k15703 in k15696 in a15690 in a15677 in k17876 in k17873 in sal in k17861 in k17858 in k17855 in k17852 in k17849 in k17327 in k17324 in k16801 in k16798 in k16795 in k16792 in k16789 in k16786 in k16783 in k16780 in k16777 in k16774 in k16771 in k16768 in k16765 in k16762 in k16759 in k16756 in k16753 in k16750 in k16747 in k16744 in k16741 in k16602 in k16599 in k16596 in k16593 in k16537 in k16534 in k16531 in k16528 in k16525 in k16522 in k16519 in k16516 in k15271 in k15202 in k15009 in k15006 in k14901 in k14850 in k7607 in k7604 in k5838 in k5545 in k5542 in k5538 in k5247 in k5244 in k5241 in k5238 */
static void C_ccall f_15705(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 364  emit");
f_15363(((C_word*)t0)[4],((C_word*)t0)[3],t1,((C_word*)t0)[2]);}

/* a15683 in a15677 in k17876 in k17873 in sal in k17861 in k17858 in k17855 in k17852 in k17849 in k17327 in k17324 in k16801 in k16798 in k16795 in k16792 in k16789 in k16786 in k16783 in k16780 in k16777 in k16774 in k16771 in k16768 in k16765 in k16762 in k16759 in k16756 in k16753 in k16750 in k16747 in k16744 in k16741 in k16602 in k16599 in k16596 in k16593 in k16537 in k16534 in k16531 in k16528 in k16525 in k16522 in k16519 in k16516 in k15271 in k15202 in k15009 in k15006 in k14901 in k14850 in k7607 in k7604 in k5838 in k5545 in k5542 in k5538 in k5247 in k5244 in k5241 in k5238 */
static void C_ccall f_15684(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word *a;
if(c!=2) C_bad_argc_2(c,2,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_15684,2,t0,t1);}
t2=lf[300]=C_fix(0);;
C_trace("ChickenBridge.scm: 364  parser");
f_15716(t1,((C_word*)t0)[4],((C_word*)t0)[3],C_SCHEME_FALSE,C_fix(0),C_SCHEME_FALSE,((C_word*)t0)[2]);}

/* k17880 in k17876 in k17873 in sal in k17861 in k17858 in k17855 in k17852 in k17849 in k17327 in k17324 in k16801 in k16798 in k16795 in k16792 in k16789 in k16786 in k16783 in k16780 in k16777 in k16774 in k16771 in k16768 in k16765 in k16762 in k16759 in k16756 in k16753 in k16750 in k16747 in k16744 in k16741 in k16602 in k16599 in k16596 in k16593 in k16537 in k16534 in k16531 in k16528 in k16525 in k16522 in k16519 in k16516 in k15271 in k15202 in k15009 in k15006 in k14901 in k14850 in k7607 in k7604 in k5838 in k5545 in k5542 in k5538 in k5247 in k5244 in k5241 in k5238 */
static void C_ccall f_17882(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_17882,2,t0,t1);}
t2=C_mutate(&lf[328],t1);
t3=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_17885,a[2]=((C_word*)t0)[3],tmp=(C_word)a,a+=3,tmp);
t4=C_retrieve2(lf[328],"*sal-output*");
if(C_truep((C_word)C_i_structurep(t4,lf[268]))){
t5=C_retrieve2(lf[326],"*sal-string*");
t6=C_retrieve2(lf[328],"*sal-output*");
t7=(C_word)C_i_string_length(t5);
t8=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_17916,a[2]=t7,a[3]=t6,a[4]=t5,a[5]=t3,tmp=(C_word)a,a+=6,tmp);
C_trace("ChickenBridge.scm: 364  parse-error-position");
f_15194(t8,t6);}
else{
if(C_truep(((C_word*)t0)[2])){
C_trace("ChickenBridge.scm: 364  pp");
t5=C_retrieve(lf[334]);
((C_proc3)C_retrieve_proc(t5))(3,t5,t3,C_retrieve2(lf[328],"*sal-output*"));}
else{
C_trace("ChickenBridge.scm: 364  eval");
t5=C_retrieve(lf[335]);
((C_proc3)C_retrieve_proc(t5))(3,t5,t3,C_retrieve2(lf[328],"*sal-output*"));}}}

/* k17914 in k17880 in k17876 in k17873 in sal in k17861 in k17858 in k17855 in k17852 in k17849 in k17327 in k17324 in k16801 in k16798 in k16795 in k16792 in k16789 in k16786 in k16783 in k16780 in k16777 in k16774 in k16771 in k16768 in k16765 in k16762 in k16759 in k16756 in k16753 in k16750 in k16747 in k16744 in k16741 in k16602 in k16599 in k16596 in k16593 in k16537 in k16534 in k16531 in k16528 in k16525 in k16522 in k16519 in k16516 in k15271 in k15202 in k15009 in k15006 in k14901 in k14850 in k7607 in k7604 in k5838 in k5545 in k5542 in k5538 in k5247 in k5244 in k5241 in k5238 */
static void C_ccall f_17916(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word ab[25],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_17916,2,t0,t1);}
t2=(C_word)C_a_i_minus(&a,2,t1,C_fix(1));
t3=t2;
t4=(*a=C_VECTOR_TYPE|1,a[1]=t3,tmp=(C_word)a,a+=2,tmp);
t5=C_fix(0);
t6=(*a=C_VECTOR_TYPE|1,a[1]=t5,tmp=(C_word)a,a+=2,tmp);
t7=(*a=C_CLOSURE_TYPE|8,a[1]=(C_word)f_17922,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=t1,a[7]=t6,a[8]=t4,tmp=(C_word)a,a+=9,tmp);
t8=C_SCHEME_UNDEFINED;
t9=(*a=C_VECTOR_TYPE|1,a[1]=t8,tmp=(C_word)a,a+=2,tmp);
t10=C_set_block_item(t9,0,(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_18009,a[2]=((C_word*)t0)[4],a[3]=t9,a[4]=t4,a[5]=((C_word)li246),tmp=(C_word)a,a+=6,tmp));
t11=((C_word*)t9)[1];
f_18009(t11,t7,C_SCHEME_FALSE);}

/* do2910 in k17914 in k17880 in k17876 in k17873 in sal in k17861 in k17858 in k17855 in k17852 in k17849 in k17327 in k17324 in k16801 in k16798 in k16795 in k16792 in k16789 in k16786 in k16783 in k16780 in k16777 in k16774 in k16771 in k16768 in k16765 in k16762 in k16759 in k16756 in k16753 in k16750 in k16747 in k16744 in k16741 in k16602 in k16599 in k16596 in k16593 in k16537 in k16534 in k16531 in k16528 in k16525 in k16522 in k16519 in k16516 in k15271 in k15202 in k15009 in k15006 in k14901 in k14850 in k7607 in k7604 in k5838 in k5545 in k5542 in k5538 in k5247 in k5244 in k5241 in k5238 */
static void C_fcall f_18009(C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word ab[11],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_18009,NULL,3,t0,t1,t2);}
t3=(*a=C_VECTOR_TYPE|1,a[1]=t2,tmp=(C_word)a,a+=2,tmp);
t4=((C_word*)t3)[1];
t5=(C_truep(t4)?t4:(C_word)C_i_nequalp(((C_word*)((C_word*)t0)[4])[1],C_fix(-1)));
if(C_truep(t5)){
t6=t1;
((C_proc2)(void*)(*((C_word*)t6+1)))(2,t6,C_SCHEME_FALSE);}
else{
t6=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_18019,a[2]=t3,a[3]=t1,a[4]=((C_word*)t0)[3],tmp=(C_word)a,a+=5,tmp);
t7=(C_word)C_i_string_ref(((C_word*)t0)[2],((C_word*)((C_word*)t0)[4])[1]);
t8=(C_word)C_eqp(t7,C_make_character(10));
if(C_truep(t8)){
t9=C_set_block_item(t3,0,C_SCHEME_TRUE);
t10=t6;
f_18019(t10,t9);}
else{
t9=(C_word)C_a_i_minus(&a,2,((C_word*)((C_word*)t0)[4])[1],C_fix(1));
t10=C_mutate(((C_word *)((C_word*)t0)[4])+1,t9);
t11=t6;
f_18019(t11,t10);}}}

/* k18017 in do2910 in k17914 in k17880 in k17876 in k17873 in sal in k17861 in k17858 in k17855 in k17852 in k17849 in k17327 in k17324 in k16801 in k16798 in k16795 in k16792 in k16789 in k16786 in k16783 in k16780 in k16777 in k16774 in k16771 in k16768 in k16765 in k16762 in k16759 in k16756 in k16753 in k16750 in k16747 in k16744 in k16741 in k16602 in k16599 in k16596 in k16593 in k16537 in k16534 in k16531 in k16528 in k16525 in k16522 in k16519 in k16516 in k15271 in k15202 in k15009 in k15006 in k14901 in k14850 in k7607 in k7604 in k5838 in k5545 in k5542 in k5538 in k5247 in k5244 in k5241 in k5238 */
static void C_fcall f_18019(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
t2=((C_word*)((C_word*)t0)[4])[1];
f_18009(t2,((C_word*)t0)[3],((C_word*)((C_word*)t0)[2])[1]);}

/* k17920 in k17914 in k17880 in k17876 in k17873 in sal in k17861 in k17858 in k17855 in k17852 in k17849 in k17327 in k17324 in k16801 in k16798 in k16795 in k16792 in k16789 in k16786 in k16783 in k16780 in k16777 in k16774 in k16771 in k16768 in k16765 in k16762 in k16759 in k16756 in k16753 in k16750 in k16747 in k16744 in k16741 in k16602 in k16599 in k16596 in k16593 in k16537 in k16534 in k16531 in k16528 in k16525 in k16522 in k16519 in k16516 in k15271 in k15202 in k15009 in k15006 in k14901 in k14850 in k7607 in k7604 in k5838 in k5545 in k5542 in k5538 in k5247 in k5244 in k5241 in k5238 */
static void C_ccall f_17922(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word ab[21],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_17922,2,t0,t1);}
t2=(C_word)C_a_i_plus(&a,2,((C_word*)((C_word*)t0)[8])[1],C_fix(1));
t3=C_mutate(((C_word *)((C_word*)t0)[8])+1,t2);
t4=C_mutate(((C_word *)((C_word*)t0)[7])+1,((C_word*)t0)[6]);
t5=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_17930,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[7],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[8],a[6]=((C_word*)t0)[6],a[7]=((C_word*)t0)[5],tmp=(C_word)a,a+=8,tmp);
t6=C_SCHEME_UNDEFINED;
t7=(*a=C_VECTOR_TYPE|1,a[1]=t6,tmp=(C_word)a,a+=2,tmp);
t8=C_set_block_item(t7,0,(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_17979,a[2]=((C_word*)t0)[4],a[3]=t7,a[4]=((C_word*)t0)[2],a[5]=((C_word*)t0)[7],a[6]=((C_word)li245),tmp=(C_word)a,a+=7,tmp));
t9=((C_word*)t7)[1];
f_17979(t9,t5,C_SCHEME_FALSE);}

/* do2917 in k17920 in k17914 in k17880 in k17876 in k17873 in sal in k17861 in k17858 in k17855 in k17852 in k17849 in k17327 in k17324 in k16801 in k16798 in k16795 in k16792 in k16789 in k16786 in k16783 in k16780 in k16777 in k16774 in k16771 in k16768 in k16765 in k16762 in k16759 in k16756 in k16753 in k16750 in k16747 in k16744 in k16741 in k16602 in k16599 in k16596 in k16593 in k16537 in k16534 in k16531 in k16528 in k16525 in k16522 in k16519 in k16516 in k15271 in k15202 in k15009 in k15006 in k14901 in k14850 in k7607 in k7604 in k5838 in k5545 in k5542 in k5538 in k5247 in k5244 in k5241 in k5238 */
static void C_fcall f_17979(C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word ab[11],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_17979,NULL,3,t0,t1,t2);}
t3=(*a=C_VECTOR_TYPE|1,a[1]=t2,tmp=(C_word)a,a+=2,tmp);
t4=((C_word*)t3)[1];
t5=(C_truep(t4)?t4:(C_word)C_i_nequalp(((C_word*)((C_word*)t0)[5])[1],((C_word*)t0)[4]));
if(C_truep(t5)){
t6=t1;
((C_proc2)(void*)(*((C_word*)t6+1)))(2,t6,C_SCHEME_FALSE);}
else{
t6=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_17989,a[2]=t3,a[3]=t1,a[4]=((C_word*)t0)[3],tmp=(C_word)a,a+=5,tmp);
t7=(C_word)C_i_string_ref(((C_word*)t0)[2],((C_word*)((C_word*)t0)[5])[1]);
t8=(C_word)C_eqp(t7,C_make_character(10));
if(C_truep(t8)){
t9=C_set_block_item(t3,0,C_SCHEME_TRUE);
t10=t6;
f_17989(t10,t9);}
else{
t9=(C_word)C_a_i_plus(&a,2,((C_word*)((C_word*)t0)[5])[1],C_fix(1));
t10=C_mutate(((C_word *)((C_word*)t0)[5])+1,t9);
t11=t6;
f_17989(t11,t10);}}}

/* k17987 in do2917 in k17920 in k17914 in k17880 in k17876 in k17873 in sal in k17861 in k17858 in k17855 in k17852 in k17849 in k17327 in k17324 in k16801 in k16798 in k16795 in k16792 in k16789 in k16786 in k16783 in k16780 in k16777 in k16774 in k16771 in k16768 in k16765 in k16762 in k16759 in k16756 in k16753 in k16750 in k16747 in k16744 in k16741 in k16602 in k16599 in k16596 in k16593 in k16537 in k16534 in k16531 in k16528 in k16525 in k16522 in k16519 in k16516 in k15271 in k15202 in k15009 in k15006 in k14901 in k14850 in k7607 in k7604 in k5838 in k5545 in k5542 in k5538 in k5247 in k5244 in k5241 in k5238 */
static void C_fcall f_17989(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
t2=((C_word*)((C_word*)t0)[4])[1];
f_17979(t2,((C_word*)t0)[3],((C_word*)((C_word*)t0)[2])[1]);}

/* k17928 in k17920 in k17914 in k17880 in k17876 in k17873 in sal in k17861 in k17858 in k17855 in k17852 in k17849 in k17327 in k17324 in k16801 in k16798 in k16795 in k16792 in k16789 in k16786 in k16783 in k16780 in k16777 in k16774 in k16771 in k16768 in k16765 in k16762 in k16759 in k16756 in k16753 in k16750 in k16747 in k16744 in k16741 in k16602 in k16599 in k16596 in k16593 in k16537 in k16534 in k16531 in k16528 in k16525 in k16522 in k16519 in k16516 in k15271 in k15202 in k15009 in k15006 in k14901 in k14850 in k7607 in k7604 in k5838 in k5545 in k5542 in k5538 in k5247 in k5244 in k5241 in k5238 */
static void C_ccall f_17930(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[13],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_17930,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_17933,a[2]=((C_word*)t0)[7],tmp=(C_word)a,a+=3,tmp);
t3=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_17940,a[2]=t2,tmp=(C_word)a,a+=3,tmp);
t4=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_17944,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=t3,a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],tmp=(C_word)a,a+=7,tmp);
C_trace("ChickenBridge.scm: 364  parse-error-string");
f_15176(t4,((C_word*)t0)[2]);}

/* k17942 in k17928 in k17920 in k17914 in k17880 in k17876 in k17873 in sal in k17861 in k17858 in k17855 in k17852 in k17849 in k17327 in k17324 in k16801 in k16798 in k16795 in k16792 in k16789 in k16786 in k16783 in k16780 in k16777 in k16774 in k16771 in k16768 in k16765 in k16762 in k16759 in k16756 in k16753 in k16750 in k16747 in k16744 in k16741 in k16602 in k16599 in k16596 in k16593 in k16537 in k16534 in k16531 in k16528 in k16525 in k16522 in k16519 in k16516 in k15271 in k15202 in k15009 in k15006 in k14901 in k14850 in k7607 in k7604 in k5838 in k5545 in k5542 in k5538 in k5247 in k5244 in k5241 in k5238 */
static void C_ccall f_17944(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[8],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_17944,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_17948,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=t1,a[5]=((C_word*)t0)[4],a[6]=((C_word*)t0)[5],a[7]=((C_word*)t0)[6],tmp=(C_word)a,a+=8,tmp);
C_trace("ChickenBridge.scm: 364  make-string");
t3=*((C_word*)lf[332]+1);
((C_proc4)C_retrieve_proc(t3))(4,t3,t2,C_fix(1),C_make_character(10));}

/* k17946 in k17942 in k17928 in k17920 in k17914 in k17880 in k17876 in k17873 in sal in k17861 in k17858 in k17855 in k17852 in k17849 in k17327 in k17324 in k16801 in k16798 in k16795 in k16792 in k16789 in k16786 in k16783 in k16780 in k16777 in k16774 in k16771 in k16768 in k16765 in k16762 in k16759 in k16756 in k16753 in k16750 in k16747 in k16744 in k16741 in k16602 in k16599 in k16596 in k16593 in k16537 in k16534 in k16531 in k16528 in k16525 in k16522 in k16519 in k16516 in k15271 in k15202 in k15009 in k15006 in k14901 in k14850 in k7607 in k7604 in k5838 in k5545 in k5542 in k5538 in k5247 in k5244 in k5241 in k5238 */
static void C_ccall f_17948(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_17948,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_17952,a[2]=t1,a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
C_trace("ChickenBridge.scm: 364  substring");
t3=*((C_word*)lf[333]+1);
((C_proc5)C_retrieve_proc(t3))(5,t3,t2,((C_word*)t0)[3],((C_word*)((C_word*)t0)[6])[1],((C_word*)((C_word*)t0)[2])[1]);}

/* k17950 in k17946 in k17942 in k17928 in k17920 in k17914 in k17880 in k17876 in k17873 in sal in k17861 in k17858 in k17855 in k17852 in k17849 in k17327 in k17324 in k16801 in k16798 in k16795 in k16792 in k16789 in k16786 in k16783 in k16780 in k16777 in k16774 in k16771 in k16768 in k16765 in k16762 in k16759 in k16756 in k16753 in k16750 in k16747 in k16744 in k16741 in k16602 in k16599 in k16596 in k16593 in k16537 in k16534 in k16531 in k16528 in k16525 in k16522 in k16519 in k16516 in k15271 in k15202 in k15009 in k15006 in k14901 in k14850 in k7607 in k7604 in k5838 in k5545 in k5542 in k5538 in k5247 in k5244 in k5241 in k5238 */
static void C_ccall f_17952(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[8],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_17952,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_17956,a[2]=t1,a[3]=((C_word*)t0)[2],a[4]=((C_word*)t0)[3],a[5]=((C_word*)t0)[4],a[6]=((C_word*)t0)[5],a[7]=((C_word*)t0)[6],tmp=(C_word)a,a+=8,tmp);
C_trace("ChickenBridge.scm: 364  make-string");
t3=*((C_word*)lf[332]+1);
((C_proc4)C_retrieve_proc(t3))(4,t3,t2,C_fix(1),C_make_character(10));}

/* k17954 in k17950 in k17946 in k17942 in k17928 in k17920 in k17914 in k17880 in k17876 in k17873 in sal in k17861 in k17858 in k17855 in k17852 in k17849 in k17327 in k17324 in k16801 in k16798 in k16795 in k16792 in k16789 in k16786 in k16783 in k16780 in k16777 in k16774 in k16771 in k16768 in k16765 in k16762 in k16759 in k16756 in k16753 in k16750 in k16747 in k16744 in k16741 in k16602 in k16599 in k16596 in k16593 in k16537 in k16534 in k16531 in k16528 in k16525 in k16522 in k16519 in k16516 in k15271 in k15202 in k15009 in k15006 in k14901 in k14850 in k7607 in k7604 in k5838 in k5545 in k5542 in k5538 in k5247 in k5244 in k5241 in k5238 */
static void C_ccall f_17956(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[16],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_17956,2,t0,t1);}
t2=(C_word)C_a_i_minus(&a,2,((C_word*)t0)[7],((C_word*)((C_word*)t0)[6])[1]);
t3=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_17963,a[2]=t1,a[3]=((C_word*)t0)[2],a[4]=((C_word*)t0)[3],a[5]=((C_word*)t0)[4],a[6]=((C_word*)t0)[5],a[7]=t2,tmp=(C_word)a,a+=8,tmp);
t4=(C_word)C_a_i_plus(&a,2,t2,C_fix(2));
C_trace("ChickenBridge.scm: 364  make-string");
t5=*((C_word*)lf[332]+1);
((C_proc4)C_retrieve_proc(t5))(4,t5,t3,t4,C_make_character(32));}

/* k17961 in k17954 in k17950 in k17946 in k17942 in k17928 in k17920 in k17914 in k17880 in k17876 in k17873 in sal in k17861 in k17858 in k17855 in k17852 in k17849 in k17327 in k17324 in k16801 in k16798 in k16795 in k16792 in k16789 in k16786 in k16783 in k16780 in k16777 in k16774 in k16771 in k16768 in k16765 in k16762 in k16759 in k16756 in k16753 in k16750 in k16747 in k16744 in k16741 in k16602 in k16599 in k16596 in k16593 in k16537 in k16534 in k16531 in k16528 in k16525 in k16522 in k16519 in k16516 in k15271 in k15202 in k15009 in k15006 in k14901 in k14850 in k7607 in k7604 in k5838 in k5545 in k5542 in k5538 in k5247 in k5244 in k5241 in k5238 */
static void C_ccall f_17963(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[4],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_17963,2,t0,t1);}
t2=(C_word)C_i_string_set(t1,((C_word*)t0)[7],C_make_character(94));
t3=(C_word)C_a_i_plus(&a,2,((C_word*)t0)[7],C_fix(1));
t4=(C_word)C_i_string_set(t1,t3,C_make_character(10));
C_trace("ChickenBridge.scm: 364  string-append");
t5=*((C_word*)lf[124]+1);
((C_proc8)C_retrieve_proc(t5))(8,t5,((C_word*)t0)[6],lf[331],((C_word*)t0)[5],((C_word*)t0)[4],((C_word*)t0)[3],((C_word*)t0)[2],t1);}

/* k17938 in k17928 in k17920 in k17914 in k17880 in k17876 in k17873 in sal in k17861 in k17858 in k17855 in k17852 in k17849 in k17327 in k17324 in k16801 in k16798 in k16795 in k16792 in k16789 in k16786 in k16783 in k16780 in k16777 in k16774 in k16771 in k16768 in k16765 in k16762 in k16759 in k16756 in k16753 in k16750 in k16747 in k16744 in k16741 in k16602 in k16599 in k16596 in k16593 in k16537 in k16534 in k16531 in k16528 in k16525 in k16522 in k16519 in k16516 in k15271 in k15202 in k15009 in k15006 in k14901 in k14850 in k7607 in k7604 in k5838 in k5545 in k5542 in k5538 in k5247 in k5244 in k5241 in k5238 */
static void C_ccall f_17940(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 364  print-error");
t2=C_retrieve(lf[330]);
((C_proc3)C_retrieve_proc(t2))(3,t2,((C_word*)t0)[2],t1);}

/* k17931 in k17928 in k17920 in k17914 in k17880 in k17876 in k17873 in sal in k17861 in k17858 in k17855 in k17852 in k17849 in k17327 in k17324 in k16801 in k16798 in k16795 in k16792 in k16789 in k16786 in k16783 in k16780 in k16777 in k16774 in k16771 in k16768 in k16765 in k16762 in k16759 in k16756 in k16753 in k16750 in k16747 in k16744 in k16741 in k16602 in k16599 in k16596 in k16593 in k16537 in k16534 in k16531 in k16528 in k16525 in k16522 in k16519 in k16516 in k15271 in k15202 in k15009 in k15006 in k14901 in k14850 in k7607 in k7604 in k5838 in k5545 in k5542 in k5538 in k5247 in k5244 in k5241 in k5238 */
static void C_ccall f_17933(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 364  values");
C_values(2,0,((C_word*)t0)[2]);}

/* k17883 in k17880 in k17876 in k17873 in sal in k17861 in k17858 in k17855 in k17852 in k17849 in k17327 in k17324 in k16801 in k16798 in k16795 in k16792 in k16789 in k16786 in k16783 in k16780 in k16777 in k16774 in k16771 in k16768 in k16765 in k16762 in k16759 in k16756 in k16753 in k16750 in k16747 in k16744 in k16741 in k16602 in k16599 in k16596 in k16593 in k16537 in k16534 in k16531 in k16528 in k16525 in k16522 in k16519 in k16516 in k15271 in k15202 in k15009 in k15006 in k14901 in k14850 in k7607 in k7604 in k5838 in k5545 in k5542 in k5538 in k5247 in k5244 in k5241 in k5238 */
static void C_ccall f_17885(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 364  values");
C_values(2,0,((C_word*)t0)[2]);}

/* sal-parse-stepping in k16801 in k16798 in k16795 in k16792 in k16789 in k16786 in k16783 in k16780 in k16777 in k16774 in k16771 in k16768 in k16765 in k16762 in k16759 in k16756 in k16753 in k16750 in k16747 in k16744 in k16741 in k16602 in k16599 in k16596 in k16593 in k16537 in k16534 in k16531 in k16528 in k16525 in k16522 in k16519 in k16516 in k15271 in k15202 in k15009 in k15006 in k14901 in k14850 in k7607 in k7604 in k5838 in k5545 in k5542 in k5538 in k5247 in k5244 in k5241 in k5238 */
static void C_ccall f_16805(C_word c,C_word t0,C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word t14;
C_word t15;
C_word t16;
C_word t17;
C_word t18;
C_word t19;
C_word t20;
C_word t21;
C_word t22;
C_word t23;
C_word t24;
C_word t25;
C_word t26;
C_word t27;
C_word t28;
C_word t29;
C_word t30;
C_word t31;
C_word t32;
C_word t33;
C_word t34;
C_word t35;
C_word ab[51],*a=ab;
if(c!=4) C_bad_argc_2(c,4,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr4,(void*)f_16805,4,t0,t1,t2,t3);}
t4=C_SCHEME_END_OF_LIST;
t5=(*a=C_VECTOR_TYPE|1,a[1]=t4,tmp=(C_word)a,a+=2,tmp);
t6=C_SCHEME_FALSE;
t7=(*a=C_VECTOR_TYPE|1,a[1]=t6,tmp=(C_word)a,a+=2,tmp);
t8=C_SCHEME_FALSE;
t9=(*a=C_VECTOR_TYPE|1,a[1]=t8,tmp=(C_word)a,a+=2,tmp);
t10=C_SCHEME_FALSE;
t11=(*a=C_VECTOR_TYPE|1,a[1]=t10,tmp=(C_word)a,a+=2,tmp);
t12=C_SCHEME_FALSE;
t13=(*a=C_VECTOR_TYPE|1,a[1]=t12,tmp=(C_word)a,a+=2,tmp);
t14=C_SCHEME_FALSE;
t15=(*a=C_VECTOR_TYPE|1,a[1]=t14,tmp=(C_word)a,a+=2,tmp);
t16=C_SCHEME_FALSE;
t17=(*a=C_VECTOR_TYPE|1,a[1]=t16,tmp=(C_word)a,a+=2,tmp);
t18=C_SCHEME_FALSE;
t19=(*a=C_VECTOR_TYPE|1,a[1]=t18,tmp=(C_word)a,a+=2,tmp);
t20=C_SCHEME_FALSE;
t21=(*a=C_VECTOR_TYPE|1,a[1]=t20,tmp=(C_word)a,a+=2,tmp);
t22=C_SCHEME_FALSE;
t23=(*a=C_VECTOR_TYPE|1,a[1]=t22,tmp=(C_word)a,a+=2,tmp);
t24=C_SCHEME_FALSE;
t25=(*a=C_VECTOR_TYPE|1,a[1]=t24,tmp=(C_word)a,a+=2,tmp);
t26=C_SCHEME_FALSE;
t27=(*a=C_VECTOR_TYPE|1,a[1]=t26,tmp=(C_word)a,a+=2,tmp);
t28=C_SCHEME_FALSE;
t29=(*a=C_VECTOR_TYPE|1,a[1]=t28,tmp=(C_word)a,a+=2,tmp);
t30=C_SCHEME_FALSE;
t31=(*a=C_VECTOR_TYPE|1,a[1]=t30,tmp=(C_word)a,a+=2,tmp);
t32=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_16812,a[2]=t5,a[3]=t1,tmp=(C_word)a,a+=4,tmp);
t33=(*a=C_CLOSURE_TYPE|18,a[1]=(C_word)f_16818,a[2]=t27,a[3]=t25,a[4]=t29,a[5]=t31,a[6]=t23,a[7]=t19,a[8]=t17,a[9]=t21,a[10]=t15,a[11]=t7,a[12]=t3,a[13]=t2,a[14]=t32,a[15]=t5,a[16]=t13,a[17]=t11,a[18]=t9,tmp=(C_word)a,a+=19,tmp);
t34=(C_word)C_i_car(t2);
C_trace("ChickenBridge.scm: 364  token-unit-type=?");
f_15291(t33,t34,C_fix(23296));}

/* k16816 in sal-parse-stepping in k16801 in k16798 in k16795 in k16792 in k16789 in k16786 in k16783 in k16780 in k16777 in k16774 in k16771 in k16768 in k16765 in k16762 in k16759 in k16756 in k16753 in k16750 in k16747 in k16744 in k16741 in k16602 in k16599 in k16596 in k16593 in k16537 in k16534 in k16531 in k16528 in k16525 in k16522 in k16519 in k16516 in k15271 in k15202 in k15009 in k15006 in k14901 in k14850 in k7607 in k7604 in k5838 in k5545 in k5542 in k5538 in k5247 in k5244 in k5241 in k5238 */
static void C_ccall f_16818(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[25],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_16818,2,t0,t1);}
if(C_truep(t1)){
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_16822,a[2]=((C_word*)t0)[14],a[3]=((C_word*)t0)[15],a[4]=((C_word*)t0)[16],a[5]=((C_word*)t0)[17],a[6]=((C_word*)t0)[18],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cadr(((C_word*)t0)[13]);
C_trace("ChickenBridge.scm: 364  emit");
f_15363(t2,t3,C_SCHEME_END_OF_LIST,((C_word*)t0)[12]);}
else{
t2=(*a=C_CLOSURE_TYPE|17,a[1]=(C_word)f_16868,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[16],a[5]=((C_word*)t0)[4],a[6]=((C_word*)t0)[5],a[7]=((C_word*)t0)[6],a[8]=((C_word*)t0)[7],a[9]=((C_word*)t0)[13],a[10]=((C_word*)t0)[12],a[11]=((C_word*)t0)[8],a[12]=((C_word*)t0)[9],a[13]=((C_word*)t0)[14],a[14]=((C_word*)t0)[15],a[15]=((C_word*)t0)[10],a[16]=((C_word*)t0)[18],a[17]=((C_word*)t0)[11],tmp=(C_word)a,a+=18,tmp);
t3=(C_word)C_i_caddr(((C_word*)t0)[13]);
C_trace("ChickenBridge.scm: 364  token-unit-type=?");
f_15291(t2,t3,C_fix(10756));}}

/* k16866 in k16816 in sal-parse-stepping in k16801 in k16798 in k16795 in k16792 in k16789 in k16786 in k16783 in k16780 in k16777 in k16774 in k16771 in k16768 in k16765 in k16762 in k16759 in k16756 in k16753 in k16750 in k16747 in k16744 in k16741 in k16602 in k16599 in k16596 in k16593 in k16537 in k16534 in k16531 in k16528 in k16525 in k16522 in k16519 in k16516 in k15271 in k15202 in k15009 in k15006 in k14901 in k14850 in k7607 in k7604 in k5838 in k5545 in k5542 in k5538 in k5247 in k5244 in k5241 in k5238 */
static void C_ccall f_16868(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[26],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_16868,2,t0,t1);}
if(C_truep(t1)){
t2=(*a=C_CLOSURE_TYPE|10,a[1]=(C_word)f_16872,a[2]=((C_word*)t0)[9],a[3]=((C_word*)t0)[10],a[4]=((C_word*)t0)[11],a[5]=((C_word*)t0)[12],a[6]=((C_word*)t0)[13],a[7]=((C_word*)t0)[14],a[8]=((C_word*)t0)[15],a[9]=((C_word*)t0)[16],a[10]=((C_word*)t0)[17],tmp=(C_word)a,a+=11,tmp);
t3=(C_word)C_i_cadr(((C_word*)t0)[9]);
C_trace("ChickenBridge.scm: 364  emit");
f_15363(t2,t3,C_SCHEME_END_OF_LIST,((C_word*)t0)[10]);}
else{
t2=(*a=C_CLOSURE_TYPE|14,a[1]=(C_word)f_16965,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],a[7]=((C_word*)t0)[7],a[8]=((C_word*)t0)[10],a[9]=((C_word*)t0)[9],a[10]=((C_word*)t0)[13],a[11]=((C_word*)t0)[14],a[12]=((C_word*)t0)[8],a[13]=((C_word*)t0)[16],a[14]=((C_word*)t0)[17],tmp=(C_word)a,a+=15,tmp);
t3=(C_word)C_i_caddr(((C_word*)t0)[9]);
C_trace("ChickenBridge.scm: 364  token-unit-type=?");
f_15291(t2,t3,C_fix(22784));}}

/* k16963 in k16866 in k16816 in sal-parse-stepping in k16801 in k16798 in k16795 in k16792 in k16789 in k16786 in k16783 in k16780 in k16777 in k16774 in k16771 in k16768 in k16765 in k16762 in k16759 in k16756 in k16753 in k16750 in k16747 in k16744 in k16741 in k16602 in k16599 in k16596 in k16593 in k16537 in k16534 in k16531 in k16528 in k16525 in k16522 in k16519 in k16516 in k15271 in k15202 in k15009 in k15006 in k14901 in k14850 in k7607 in k7604 in k5838 in k5545 in k5542 in k5538 in k5247 in k5244 in k5241 in k5238 */
static void C_ccall f_16965(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word ab[22],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_16965,2,t0,t1);}
if(C_truep(t1)){
t2=(*a=C_CLOSURE_TYPE|8,a[1]=(C_word)f_16969,a[2]=((C_word*)t0)[8],a[3]=((C_word*)t0)[9],a[4]=((C_word*)t0)[10],a[5]=((C_word*)t0)[11],a[6]=((C_word*)t0)[12],a[7]=((C_word*)t0)[13],a[8]=((C_word*)t0)[14],tmp=(C_word)a,a+=9,tmp);
t3=(C_word)C_i_cadr(((C_word*)t0)[9]);
C_trace("ChickenBridge.scm: 364  emit");
f_15363(t2,t3,C_SCHEME_END_OF_LIST,((C_word*)t0)[8]);}
else{
t2=(C_word)C_i_length(((C_word*)t0)[9]);
t3=C_mutate(((C_word *)((C_word*)t0)[7])+1,t2);
t4=(*a=C_CLOSURE_TYPE|12,a[1]=(C_word)f_17033,a[2]=((C_word*)t0)[8],a[3]=((C_word*)t0)[2],a[4]=((C_word*)t0)[3],a[5]=((C_word*)t0)[4],a[6]=((C_word*)t0)[5],a[7]=((C_word*)t0)[10],a[8]=((C_word*)t0)[11],a[9]=((C_word*)t0)[6],a[10]=((C_word*)t0)[9],a[11]=((C_word*)t0)[7],a[12]=((C_word*)t0)[14],tmp=(C_word)a,a+=13,tmp);
t5=(C_word)C_i_cadr(((C_word*)t0)[9]);
C_trace("ChickenBridge.scm: 364  emit");
f_15363(t4,t5,C_SCHEME_END_OF_LIST,((C_word*)t0)[8]);}}

/* k17031 in k16963 in k16866 in k16816 in sal-parse-stepping in k16801 in k16798 in k16795 in k16792 in k16789 in k16786 in k16783 in k16780 in k16777 in k16774 in k16771 in k16768 in k16765 in k16762 in k16759 in k16756 in k16753 in k16750 in k16747 in k16744 in k16741 in k16602 in k16599 in k16596 in k16593 in k16537 in k16534 in k16531 in k16528 in k16525 in k16522 in k16519 in k16516 in k15271 in k15202 in k15009 in k15006 in k14901 in k14850 in k7607 in k7604 in k5838 in k5545 in k5542 in k5538 in k5247 in k5244 in k5241 in k5238 */
static void C_ccall f_17033(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word ab[21],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_17033,2,t0,t1);}
t2=C_mutate(((C_word *)((C_word*)t0)[12])+1,t1);
t3=(C_word)C_a_i_minus(&a,2,((C_word*)((C_word*)t0)[11])[1],C_fix(1));
t4=(C_word)C_i_list_ref(((C_word*)t0)[10],t3);
t5=C_mutate(((C_word *)((C_word*)t0)[9])+1,t4);
t6=(*a=C_CLOSURE_TYPE|12,a[1]=(C_word)f_17040,a[2]=((C_word*)t0)[10],a[3]=((C_word*)t0)[2],a[4]=((C_word*)t0)[11],a[5]=((C_word*)t0)[3],a[6]=((C_word*)t0)[4],a[7]=((C_word*)t0)[5],a[8]=((C_word*)t0)[9],a[9]=((C_word*)t0)[6],a[10]=((C_word*)t0)[12],a[11]=((C_word*)t0)[7],a[12]=((C_word*)t0)[8],tmp=(C_word)a,a+=13,tmp);
if(C_truep(((C_word*)((C_word*)t0)[9])[1])){
t7=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_17290,a[2]=t6,a[3]=((C_word*)t0)[9],tmp=(C_word)a,a+=4,tmp);
t8=(C_word)C_i_cadr(((C_word*)((C_word*)t0)[9])[1]);
C_trace("ChickenBridge.scm: 364  emit");
f_15363(t7,t8,C_SCHEME_END_OF_LIST,((C_word*)t0)[2]);}
else{
t7=C_set_block_item(((C_word*)t0)[9],0,C_fix(1));
t8=t6;
f_17040(t8,t7);}}

/* k17288 in k17031 in k16963 in k16866 in k16816 in sal-parse-stepping in k16801 in k16798 in k16795 in k16792 in k16789 in k16786 in k16783 in k16780 in k16777 in k16774 in k16771 in k16768 in k16765 in k16762 in k16759 in k16756 in k16753 in k16750 in k16747 in k16744 in k16741 in k16602 in k16599 in k16596 in k16593 in k16537 in k16534 in k16531 in k16528 in k16525 in k16522 in k16519 in k16516 in k15271 in k15202 in k15009 in k15006 in k14901 in k14850 in k7607 in k7604 in k5838 in k5545 in k5542 in k5538 in k5247 in k5244 in k5241 in k5238 */
static void C_ccall f_17290(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[3])+1,t1);
t3=((C_word*)t0)[2];
f_17040(t3,t2);}

/* k17038 in k17031 in k16963 in k16866 in k16816 in sal-parse-stepping in k16801 in k16798 in k16795 in k16792 in k16789 in k16786 in k16783 in k16780 in k16777 in k16774 in k16771 in k16768 in k16765 in k16762 in k16759 in k16756 in k16753 in k16750 in k16747 in k16744 in k16741 in k16602 in k16599 in k16596 in k16593 in k16537 in k16534 in k16531 in k16528 in k16525 in k16522 in k16519 in k16516 in k15271 in k15202 in k15009 in k15006 in k14901 in k14850 in k7607 in k7604 in k5838 in k5545 in k5542 in k5538 in k5247 in k5244 in k5241 in k5238 */
static void C_fcall f_17040(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word ab[22],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_17040,NULL,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|9,a[1]=(C_word)f_17043,a[2]=((C_word*)t0)[5],a[3]=((C_word*)t0)[6],a[4]=((C_word*)t0)[7],a[5]=((C_word*)t0)[8],a[6]=((C_word*)t0)[9],a[7]=((C_word*)t0)[10],a[8]=((C_word*)t0)[11],a[9]=((C_word*)t0)[12],tmp=(C_word)a,a+=10,tmp);
if(C_truep((C_word)C_i_nequalp(((C_word*)((C_word*)t0)[4])[1],C_fix(6)))){
t3=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_17229,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=t2,a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],a[7]=((C_word*)t0)[9],tmp=(C_word)a,a+=8,tmp);
t4=(C_word)C_i_cadddr(((C_word*)t0)[2]);
C_trace("ChickenBridge.scm: 364  emit");
f_15363(t3,t4,C_SCHEME_END_OF_LIST,((C_word*)t0)[3]);}
else{
t3=C_set_block_item(((C_word*)t0)[9],0,C_fix(0));
t4=(C_word)C_i_caddr(((C_word*)t0)[2]);
t5=C_mutate(((C_word *)((C_word*)t0)[6])+1,t4);
t6=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_17278,a[2]=t2,a[3]=((C_word*)t0)[5],tmp=(C_word)a,a+=4,tmp);
t7=(C_word)C_i_cadddr(((C_word*)t0)[2]);
C_trace("ChickenBridge.scm: 364  emit");
f_15363(t6,t7,C_SCHEME_END_OF_LIST,((C_word*)t0)[3]);}}

/* k17276 in k17038 in k17031 in k16963 in k16866 in k16816 in sal-parse-stepping in k16801 in k16798 in k16795 in k16792 in k16789 in k16786 in k16783 in k16780 in k16777 in k16774 in k16771 in k16768 in k16765 in k16762 in k16759 in k16756 in k16753 in k16750 in k16747 in k16744 in k16741 in k16602 in k16599 in k16596 in k16593 in k16537 in k16534 in k16531 in k16528 in k16525 in k16522 in k16519 in k16516 in k15271 in k15202 in k15009 in k15006 in k14901 in k14850 in k7607 in k7604 in k5838 in k5545 in k5542 in k5538 in k5247 in k5244 in k5241 in k5238 */
static void C_ccall f_17278(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[3])+1,t1);
t3=((C_word*)t0)[2];
f_17043(t3,t2);}

/* k17227 in k17038 in k17031 in k16963 in k16866 in k16816 in sal-parse-stepping in k16801 in k16798 in k16795 in k16792 in k16789 in k16786 in k16783 in k16780 in k16777 in k16774 in k16771 in k16768 in k16765 in k16762 in k16759 in k16756 in k16753 in k16750 in k16747 in k16744 in k16741 in k16602 in k16599 in k16596 in k16593 in k16537 in k16534 in k16531 in k16528 in k16525 in k16522 in k16519 in k16516 in k15271 in k15202 in k15009 in k15006 in k14901 in k14850 in k7607 in k7604 in k5838 in k5545 in k5542 in k5538 in k5247 in k5244 in k5241 in k5238 */
static void C_ccall f_17229(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_17229,2,t0,t1);}
t2=C_mutate(((C_word *)((C_word*)t0)[7])+1,t1);
t3=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_17235,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],tmp=(C_word)a,a+=7,tmp);
C_trace("ChickenBridge.scm: 364  fifth");
t4=C_retrieve(lf[55]);
((C_proc3)C_retrieve_proc(t4))(3,t4,t3,((C_word*)t0)[2]);}

/* k17233 in k17227 in k17038 in k17031 in k16963 in k16866 in k16816 in sal-parse-stepping in k16801 in k16798 in k16795 in k16792 in k16789 in k16786 in k16783 in k16780 in k16777 in k16774 in k16771 in k16768 in k16765 in k16762 in k16759 in k16756 in k16753 in k16750 in k16747 in k16744 in k16741 in k16602 in k16599 in k16596 in k16593 in k16537 in k16534 in k16531 in k16528 in k16525 in k16522 in k16519 in k16516 in k15271 in k15202 in k15009 in k15006 in k14901 in k14850 in k7607 in k7604 in k5838 in k5545 in k5542 in k5538 in k5247 in k5244 in k5241 in k5238 */
static void C_ccall f_17235(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_17235,2,t0,t1);}
if(C_truep(t1)){
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_17259,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],tmp=(C_word)a,a+=7,tmp);
C_trace("ChickenBridge.scm: 364  fifth");
t3=C_retrieve(lf[55]);
((C_proc3)C_retrieve_proc(t3))(3,t3,t2,((C_word*)t0)[2]);}
else{
t2=C_set_block_item(((C_word*)t0)[6],0,C_SCHEME_FALSE);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_FALSE);
t4=((C_word*)t0)[4];
f_17043(t4,t3);}}

/* k17257 in k17233 in k17227 in k17038 in k17031 in k16963 in k16866 in k16816 in sal-parse-stepping in k16801 in k16798 in k16795 in k16792 in k16789 in k16786 in k16783 in k16780 in k16777 in k16774 in k16771 in k16768 in k16765 in k16762 in k16759 in k16756 in k16753 in k16750 in k16747 in k16744 in k16741 in k16602 in k16599 in k16596 in k16593 in k16537 in k16534 in k16531 in k16528 in k16525 in k16522 in k16519 in k16516 in k15271 in k15202 in k15009 in k15006 in k14901 in k14850 in k7607 in k7604 in k5838 in k5545 in k5542 in k5538 in k5247 in k5244 in k5241 in k5238 */
static void C_ccall f_17259(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[8],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_17259,2,t0,t1);}
t2=(C_word)C_i_car(t1);
t3=C_mutate(((C_word *)((C_word*)t0)[6])+1,t2);
t4=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_17243,a[2]=((C_word*)t0)[4],a[3]=((C_word*)t0)[5],tmp=(C_word)a,a+=4,tmp);
t5=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_17255,a[2]=((C_word*)t0)[3],a[3]=t4,tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 364  fifth");
t6=C_retrieve(lf[55]);
((C_proc3)C_retrieve_proc(t6))(3,t6,t5,((C_word*)t0)[2]);}

/* k17253 in k17257 in k17233 in k17227 in k17038 in k17031 in k16963 in k16866 in k16816 in sal-parse-stepping in k16801 in k16798 in k16795 in k16792 in k16789 in k16786 in k16783 in k16780 in k16777 in k16774 in k16771 in k16768 in k16765 in k16762 in k16759 in k16756 in k16753 in k16750 in k16747 in k16744 in k16741 in k16602 in k16599 in k16596 in k16593 in k16537 in k16534 in k16531 in k16528 in k16525 in k16522 in k16519 in k16516 in k15271 in k15202 in k15009 in k15006 in k14901 in k14850 in k7607 in k7604 in k5838 in k5545 in k5542 in k5538 in k5247 in k5244 in k5241 in k5238 */
static void C_ccall f_17255(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word *a;
t2=(C_word)C_i_cadr(t1);
C_trace("ChickenBridge.scm: 364  emit");
f_15363(((C_word*)t0)[3],t2,C_SCHEME_END_OF_LIST,((C_word*)t0)[2]);}

/* k17241 in k17257 in k17233 in k17227 in k17038 in k17031 in k16963 in k16866 in k16816 in sal-parse-stepping in k16801 in k16798 in k16795 in k16792 in k16789 in k16786 in k16783 in k16780 in k16777 in k16774 in k16771 in k16768 in k16765 in k16762 in k16759 in k16756 in k16753 in k16750 in k16747 in k16744 in k16741 in k16602 in k16599 in k16596 in k16593 in k16537 in k16534 in k16531 in k16528 in k16525 in k16522 in k16519 in k16516 in k15271 in k15202 in k15009 in k15006 in k14901 in k14850 in k7607 in k7604 in k5838 in k5545 in k5542 in k5538 in k5247 in k5244 in k5241 in k5238 */
static void C_ccall f_17243(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[3])+1,t1);
t3=((C_word*)t0)[2];
f_17043(t3,t2);}

/* k17041 in k17038 in k17031 in k16963 in k16866 in k16816 in sal-parse-stepping in k16801 in k16798 in k16795 in k16792 in k16789 in k16786 in k16783 in k16780 in k16777 in k16774 in k16771 in k16768 in k16765 in k16762 in k16759 in k16756 in k16753 in k16750 in k16747 in k16744 in k16741 in k16602 in k16599 in k16596 in k16593 in k16537 in k16534 in k16531 in k16528 in k16525 in k16522 in k16519 in k16516 in k15271 in k15202 in k15009 in k15006 in k14901 in k14850 in k7607 in k7604 in k5838 in k5545 in k5542 in k5538 in k5247 in k5244 in k5241 in k5238 */
static void C_fcall f_17043(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[15],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_17043,NULL,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|9,a[1]=(C_word)f_17046,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],a[7]=((C_word*)t0)[7],a[8]=((C_word*)t0)[8],a[9]=((C_word*)t0)[9],tmp=(C_word)a,a+=10,tmp);
if(C_truep((C_word)C_i_numberp(((C_word*)((C_word*)t0)[5])[1]))){
t3=t2;
f_17046(t3,C_SCHEME_UNDEFINED);}
else{
t3=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_17205,a[2]=t2,a[3]=((C_word*)t0)[5],a[4]=((C_word*)t0)[9],tmp=(C_word)a,a+=5,tmp);
C_trace("ChickenBridge.scm: 364  gensym");
t4=C_retrieve(lf[28]);
((C_proc3)C_retrieve_proc(t4))(3,t4,t3,lf[325]);}}

/* k17203 in k17041 in k17038 in k17031 in k16963 in k16866 in k16816 in sal-parse-stepping in k16801 in k16798 in k16795 in k16792 in k16789 in k16786 in k16783 in k16780 in k16777 in k16774 in k16771 in k16768 in k16765 in k16762 in k16759 in k16756 in k16753 in k16750 in k16747 in k16744 in k16741 in k16602 in k16599 in k16596 in k16593 in k16537 in k16534 in k16531 in k16528 in k16525 in k16522 in k16519 in k16516 in k15271 in k15202 in k15009 in k15006 in k14901 in k14850 in k7607 in k7604 in k5838 in k5545 in k5542 in k5538 in k5247 in k5244 in k5241 in k5238 */
static void C_ccall f_17205(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[24],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_17205,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_17209,a[2]=((C_word*)t0)[2],a[3]=t1,a[4]=((C_word*)t0)[3],a[5]=((C_word*)t0)[4],tmp=(C_word)a,a+=6,tmp);
t3=(C_word)C_a_i_list(&a,5,t1,((C_word*)((C_word*)t0)[3])[1],C_SCHEME_FALSE,C_SCHEME_FALSE,C_SCHEME_FALSE);
t4=(C_word)C_a_i_list(&a,1,t3);
C_trace("ChickenBridge.scm: 364  append");
t5=*((C_word*)lf[20]+1);
((C_proc4)C_retrieve_proc(t5))(4,t5,t2,((C_word*)((C_word*)t0)[4])[1],t4);}

/* k17207 in k17203 in k17041 in k17038 in k17031 in k16963 in k16866 in k16816 in sal-parse-stepping in k16801 in k16798 in k16795 in k16792 in k16789 in k16786 in k16783 in k16780 in k16777 in k16774 in k16771 in k16768 in k16765 in k16762 in k16759 in k16756 in k16753 in k16750 in k16747 in k16744 in k16741 in k16602 in k16599 in k16596 in k16593 in k16537 in k16534 in k16531 in k16528 in k16525 in k16522 in k16519 in k16516 in k15271 in k15202 in k15009 in k15006 in k14901 in k14850 in k7607 in k7604 in k5838 in k5545 in k5542 in k5538 in k5247 in k5244 in k5241 in k5238 */
static void C_ccall f_17209(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[5])+1,t1);
t3=C_mutate(((C_word *)((C_word*)t0)[4])+1,((C_word*)t0)[3]);
t4=((C_word*)t0)[2];
f_17046(t4,t3);}

/* k17044 in k17041 in k17038 in k17031 in k16963 in k16866 in k16816 in sal-parse-stepping in k16801 in k16798 in k16795 in k16792 in k16789 in k16786 in k16783 in k16780 in k16777 in k16774 in k16771 in k16768 in k16765 in k16762 in k16759 in k16756 in k16753 in k16750 in k16747 in k16744 in k16741 in k16602 in k16599 in k16596 in k16593 in k16537 in k16534 in k16531 in k16528 in k16525 in k16522 in k16519 in k16516 in k15271 in k15202 in k15009 in k15006 in k14901 in k14850 in k7607 in k7604 in k5838 in k5545 in k5542 in k5538 in k5247 in k5244 in k5241 in k5238 */
static void C_fcall f_17046(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[15],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_17046,NULL,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|9,a[1]=(C_word)f_17049,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],a[7]=((C_word*)t0)[7],a[8]=((C_word*)t0)[8],a[9]=((C_word*)t0)[9],tmp=(C_word)a,a+=10,tmp);
if(C_truep((C_word)C_i_numberp(((C_word*)((C_word*)t0)[6])[1]))){
t3=t2;
f_17049(t3,C_SCHEME_UNDEFINED);}
else{
t3=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_17182,a[2]=t2,a[3]=((C_word*)t0)[6],a[4]=((C_word*)t0)[9],tmp=(C_word)a,a+=5,tmp);
C_trace("ChickenBridge.scm: 364  gensym");
t4=C_retrieve(lf[28]);
((C_proc3)C_retrieve_proc(t4))(3,t4,t3,lf[324]);}}

/* k17180 in k17044 in k17041 in k17038 in k17031 in k16963 in k16866 in k16816 in sal-parse-stepping in k16801 in k16798 in k16795 in k16792 in k16789 in k16786 in k16783 in k16780 in k16777 in k16774 in k16771 in k16768 in k16765 in k16762 in k16759 in k16756 in k16753 in k16750 in k16747 in k16744 in k16741 in k16602 in k16599 in k16596 in k16593 in k16537 in k16534 in k16531 in k16528 in k16525 in k16522 in k16519 in k16516 in k15271 in k15202 in k15009 in k15006 in k14901 in k14850 in k7607 in k7604 in k5838 in k5545 in k5542 in k5538 in k5247 in k5244 in k5241 in k5238 */
static void C_ccall f_17182(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[24],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_17182,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_17186,a[2]=((C_word*)t0)[2],a[3]=t1,a[4]=((C_word*)t0)[3],a[5]=((C_word*)t0)[4],tmp=(C_word)a,a+=6,tmp);
t3=(C_word)C_a_i_list(&a,5,t1,((C_word*)((C_word*)t0)[3])[1],C_SCHEME_FALSE,C_SCHEME_FALSE,C_SCHEME_FALSE);
t4=(C_word)C_a_i_list(&a,1,t3);
C_trace("ChickenBridge.scm: 364  append");
t5=*((C_word*)lf[20]+1);
((C_proc4)C_retrieve_proc(t5))(4,t5,t2,((C_word*)((C_word*)t0)[4])[1],t4);}

/* k17184 in k17180 in k17044 in k17041 in k17038 in k17031 in k16963 in k16866 in k16816 in sal-parse-stepping in k16801 in k16798 in k16795 in k16792 in k16789 in k16786 in k16783 in k16780 in k16777 in k16774 in k16771 in k16768 in k16765 in k16762 in k16759 in k16756 in k16753 in k16750 in k16747 in k16744 in k16741 in k16602 in k16599 in k16596 in k16593 in k16537 in k16534 in k16531 in k16528 in k16525 in k16522 in k16519 in k16516 in k15271 in k15202 in k15009 in k15006 in k14901 in k14850 in k7607 in k7604 in k5838 in k5545 in k5542 in k5538 in k5247 in k5244 in k5241 in k5238 */
static void C_ccall f_17186(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[5])+1,t1);
t3=C_mutate(((C_word *)((C_word*)t0)[4])+1,((C_word*)t0)[3]);
t4=((C_word*)t0)[2];
f_17049(t4,t3);}

/* k17047 in k17044 in k17041 in k17038 in k17031 in k16963 in k16866 in k16816 in sal-parse-stepping in k16801 in k16798 in k16795 in k16792 in k16789 in k16786 in k16783 in k16780 in k16777 in k16774 in k16771 in k16768 in k16765 in k16762 in k16759 in k16756 in k16753 in k16750 in k16747 in k16744 in k16741 in k16602 in k16599 in k16596 in k16593 in k16537 in k16534 in k16531 in k16528 in k16525 in k16522 in k16519 in k16516 in k15271 in k15202 in k15009 in k15006 in k14901 in k14850 in k7607 in k7604 in k5838 in k5545 in k5542 in k5538 in k5247 in k5244 in k5241 in k5238 */
static void C_fcall f_17049(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[15],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_17049,NULL,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|9,a[1]=(C_word)f_17052,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],a[7]=((C_word*)t0)[7],a[8]=((C_word*)t0)[8],a[9]=((C_word*)t0)[9],tmp=(C_word)a,a+=10,tmp);
if(C_truep(((C_word*)((C_word*)t0)[2])[1])){
if(C_truep((C_word)C_i_numberp(((C_word*)((C_word*)t0)[2])[1]))){
t3=t2;
f_17052(t3,C_SCHEME_UNDEFINED);}
else{
t3=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_17159,a[2]=t2,a[3]=((C_word*)t0)[2],a[4]=((C_word*)t0)[9],tmp=(C_word)a,a+=5,tmp);
C_trace("ChickenBridge.scm: 364  gensym");
t4=C_retrieve(lf[28]);
((C_proc3)C_retrieve_proc(t4))(3,t4,t3,lf[323]);}}
else{
t3=t2;
f_17052(t3,C_SCHEME_UNDEFINED);}}

/* k17157 in k17047 in k17044 in k17041 in k17038 in k17031 in k16963 in k16866 in k16816 in sal-parse-stepping in k16801 in k16798 in k16795 in k16792 in k16789 in k16786 in k16783 in k16780 in k16777 in k16774 in k16771 in k16768 in k16765 in k16762 in k16759 in k16756 in k16753 in k16750 in k16747 in k16744 in k16741 in k16602 in k16599 in k16596 in k16593 in k16537 in k16534 in k16531 in k16528 in k16525 in k16522 in k16519 in k16516 in k15271 in k15202 in k15009 in k15006 in k14901 in k14850 in k7607 in k7604 in k5838 in k5545 in k5542 in k5538 in k5247 in k5244 in k5241 in k5238 */
static void C_ccall f_17159(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[24],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_17159,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_17163,a[2]=((C_word*)t0)[2],a[3]=t1,a[4]=((C_word*)t0)[3],a[5]=((C_word*)t0)[4],tmp=(C_word)a,a+=6,tmp);
t3=(C_word)C_a_i_list(&a,5,t1,((C_word*)((C_word*)t0)[3])[1],C_SCHEME_FALSE,C_SCHEME_FALSE,C_SCHEME_FALSE);
t4=(C_word)C_a_i_list(&a,1,t3);
C_trace("ChickenBridge.scm: 364  append");
t5=*((C_word*)lf[20]+1);
((C_proc4)C_retrieve_proc(t5))(4,t5,t2,((C_word*)((C_word*)t0)[4])[1],t4);}

/* k17161 in k17157 in k17047 in k17044 in k17041 in k17038 in k17031 in k16963 in k16866 in k16816 in sal-parse-stepping in k16801 in k16798 in k16795 in k16792 in k16789 in k16786 in k16783 in k16780 in k16777 in k16774 in k16771 in k16768 in k16765 in k16762 in k16759 in k16756 in k16753 in k16750 in k16747 in k16744 in k16741 in k16602 in k16599 in k16596 in k16593 in k16537 in k16534 in k16531 in k16528 in k16525 in k16522 in k16519 in k16516 in k15271 in k15202 in k15009 in k15006 in k14901 in k14850 in k7607 in k7604 in k5838 in k5545 in k5542 in k5538 in k5247 in k5244 in k5241 in k5238 */
static void C_ccall f_17163(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[5])+1,t1);
t3=C_mutate(((C_word *)((C_word*)t0)[4])+1,((C_word*)t0)[3]);
t4=((C_word*)t0)[2];
f_17052(t4,t3);}

/* k17050 in k17047 in k17044 in k17041 in k17038 in k17031 in k16963 in k16866 in k16816 in sal-parse-stepping in k16801 in k16798 in k16795 in k16792 in k16789 in k16786 in k16783 in k16780 in k16777 in k16774 in k16771 in k16768 in k16765 in k16762 in k16759 in k16756 in k16753 in k16750 in k16747 in k16744 in k16741 in k16602 in k16599 in k16596 in k16593 in k16537 in k16534 in k16531 in k16528 in k16525 in k16522 in k16519 in k16516 in k15271 in k15202 in k15009 in k15006 in k14901 in k14850 in k7607 in k7604 in k5838 in k5545 in k5542 in k5538 in k5247 in k5244 in k5241 in k5238 */
static void C_fcall f_17052(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word ab[34],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_17052,NULL,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_17055,a[2]=((C_word*)t0)[4],a[3]=((C_word*)t0)[5],a[4]=((C_word*)t0)[6],a[5]=((C_word*)t0)[7],a[6]=((C_word*)t0)[8],a[7]=((C_word*)t0)[9],tmp=(C_word)a,a+=8,tmp);
t3=((C_word*)((C_word*)t0)[3])[1];
if(C_truep(t3)){
t4=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_17084,a[2]=((C_word*)t0)[3],a[3]=t2,a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[4],a[6]=((C_word*)t0)[2],a[7]=((C_word*)t0)[7],tmp=(C_word)a,a+=8,tmp);
C_trace("ChickenBridge.scm: 364  token-unit-type=?");
f_15291(t4,((C_word*)((C_word*)t0)[3])[1],C_fix(21248));}
else{
t4=(C_word)C_a_i_list(&a,3,lf[305],((C_word*)((C_word*)t0)[7])[1],((C_word*)((C_word*)t0)[5])[1]);
t5=(C_word)C_a_i_list(&a,3,lf[14],((C_word*)((C_word*)t0)[7])[1],t4);
t6=C_mutate(((C_word *)((C_word*)t0)[5])+1,t5);
t7=t2;
f_17055(t7,t6);}}

/* k17082 in k17050 in k17047 in k17044 in k17041 in k17038 in k17031 in k16963 in k16866 in k16816 in sal-parse-stepping in k16801 in k16798 in k16795 in k16792 in k16789 in k16786 in k16783 in k16780 in k16777 in k16774 in k16771 in k16768 in k16765 in k16762 in k16759 in k16756 in k16753 in k16750 in k16747 in k16744 in k16741 in k16602 in k16599 in k16596 in k16593 in k16537 in k16534 in k16531 in k16528 in k16525 in k16522 in k16519 in k16516 in k15271 in k15202 in k15009 in k15006 in k14901 in k14850 in k7607 in k7604 in k5838 in k5545 in k5542 in k5538 in k5247 in k5244 in k5241 in k5238 */
static void C_ccall f_17084(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word ab[35],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_17084,2,t0,t1);}
if(C_truep(t1)){
t2=(C_word)C_a_i_list(&a,3,lf[313],((C_word*)((C_word*)t0)[7])[1],((C_word*)((C_word*)t0)[6])[1]);
t3=C_mutate(((C_word *)((C_word*)t0)[5])+1,t2);
t4=(C_word)C_a_i_list(&a,3,lf[305],((C_word*)((C_word*)t0)[7])[1],((C_word*)((C_word*)t0)[4])[1]);
t5=(C_word)C_a_i_list(&a,3,lf[14],((C_word*)((C_word*)t0)[7])[1],t4);
t6=C_mutate(((C_word *)((C_word*)t0)[4])+1,t5);
t7=((C_word*)t0)[3];
f_17055(t7,t6);}
else{
t2=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_17102,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],a[7]=((C_word*)t0)[7],tmp=(C_word)a,a+=8,tmp);
C_trace("ChickenBridge.scm: 364  token-unit-type=?");
f_15291(t2,((C_word*)((C_word*)t0)[2])[1],C_fix(23552));}}

/* k17100 in k17082 in k17050 in k17047 in k17044 in k17041 in k17038 in k17031 in k16963 in k16866 in k16816 in sal-parse-stepping in k16801 in k16798 in k16795 in k16792 in k16789 in k16786 in k16783 in k16780 in k16777 in k16774 in k16771 in k16768 in k16765 in k16762 in k16759 in k16756 in k16753 in k16750 in k16747 in k16744 in k16741 in k16602 in k16599 in k16596 in k16593 in k16537 in k16534 in k16531 in k16528 in k16525 in k16522 in k16519 in k16516 in k15271 in k15202 in k15009 in k15006 in k14901 in k14850 in k7607 in k7604 in k5838 in k5545 in k5542 in k5538 in k5247 in k5244 in k5241 in k5238 */
static void C_ccall f_17102(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word ab[35],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_17102,2,t0,t1);}
if(C_truep(t1)){
t2=(C_word)C_a_i_list(&a,3,lf[319],((C_word*)((C_word*)t0)[7])[1],((C_word*)((C_word*)t0)[6])[1]);
t3=C_mutate(((C_word *)((C_word*)t0)[5])+1,t2);
t4=(C_word)C_a_i_list(&a,3,lf[305],((C_word*)((C_word*)t0)[7])[1],((C_word*)((C_word*)t0)[4])[1]);
t5=(C_word)C_a_i_list(&a,3,lf[14],((C_word*)((C_word*)t0)[7])[1],t4);
t6=C_mutate(((C_word *)((C_word*)t0)[4])+1,t5);
t7=((C_word*)t0)[3];
f_17055(t7,t6);}
else{
t2=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_17120,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],a[7]=((C_word*)t0)[7],tmp=(C_word)a,a+=8,tmp);
C_trace("ChickenBridge.scm: 364  token-unit-type=?");
f_15291(t2,((C_word*)((C_word*)t0)[2])[1],C_fix(20992));}}

/* k17118 in k17100 in k17082 in k17050 in k17047 in k17044 in k17041 in k17038 in k17031 in k16963 in k16866 in k16816 in sal-parse-stepping in k16801 in k16798 in k16795 in k16792 in k16789 in k16786 in k16783 in k16780 in k16777 in k16774 in k16771 in k16768 in k16765 in k16762 in k16759 in k16756 in k16753 in k16750 in k16747 in k16744 in k16741 in k16602 in k16599 in k16596 in k16593 in k16537 in k16534 in k16531 in k16528 in k16525 in k16522 in k16519 in k16516 in k15271 in k15202 in k15009 in k15006 in k14901 in k14850 in k7607 in k7604 in k5838 in k5545 in k5542 in k5538 in k5247 in k5244 in k5241 in k5238 */
static void C_ccall f_17120(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word ab[34],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_17120,2,t0,t1);}
if(C_truep(t1)){
t2=(C_word)C_a_i_list(&a,3,lf[320],((C_word*)((C_word*)t0)[7])[1],((C_word*)((C_word*)t0)[6])[1]);
t3=C_mutate(((C_word *)((C_word*)t0)[5])+1,t2);
t4=(C_word)C_a_i_list(&a,3,lf[321],((C_word*)((C_word*)t0)[7])[1],((C_word*)((C_word*)t0)[4])[1]);
t5=(C_word)C_a_i_list(&a,3,lf[14],((C_word*)((C_word*)t0)[7])[1],t4);
t6=C_mutate(((C_word *)((C_word*)t0)[4])+1,t5);
t7=((C_word*)t0)[3];
f_17055(t7,t6);}
else{
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_17138,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
C_trace("ChickenBridge.scm: 364  token-unit-type=?");
f_15291(t2,((C_word*)((C_word*)t0)[2])[1],C_fix(21760));}}

/* k17136 in k17118 in k17100 in k17082 in k17050 in k17047 in k17044 in k17041 in k17038 in k17031 in k16963 in k16866 in k16816 in sal-parse-stepping in k16801 in k16798 in k16795 in k16792 in k16789 in k16786 in k16783 in k16780 in k16777 in k16774 in k16771 in k16768 in k16765 in k16762 in k16759 in k16756 in k16753 in k16750 in k16747 in k16744 in k16741 in k16602 in k16599 in k16596 in k16593 in k16537 in k16534 in k16531 in k16528 in k16525 in k16522 in k16519 in k16516 in k15271 in k15202 in k15009 in k15006 in k14901 in k14850 in k7607 in k7604 in k5838 in k5545 in k5542 in k5538 in k5247 in k5244 in k5241 in k5238 */
static void C_ccall f_17138(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word ab[27],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_17138,2,t0,t1);}
if(C_truep(t1)){
t2=(C_word)C_a_i_list(&a,3,lf[322],((C_word*)((C_word*)t0)[6])[1],((C_word*)((C_word*)t0)[5])[1]);
t3=C_mutate(((C_word *)((C_word*)t0)[4])+1,t2);
t4=(C_word)C_a_i_list(&a,3,lf[321],((C_word*)((C_word*)t0)[6])[1],((C_word*)((C_word*)t0)[3])[1]);
t5=(C_word)C_a_i_list(&a,3,lf[14],((C_word*)((C_word*)t0)[6])[1],t4);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_17055(t7,t6);}
else{
t2=((C_word*)t0)[2];
f_17055(t2,C_SCHEME_UNDEFINED);}}

/* k17053 in k17050 in k17047 in k17044 in k17041 in k17038 in k17031 in k16963 in k16866 in k16816 in sal-parse-stepping in k16801 in k16798 in k16795 in k16792 in k16789 in k16786 in k16783 in k16780 in k16777 in k16774 in k16771 in k16768 in k16765 in k16762 in k16759 in k16756 in k16753 in k16750 in k16747 in k16744 in k16741 in k16602 in k16599 in k16596 in k16593 in k16537 in k16534 in k16531 in k16528 in k16525 in k16522 in k16519 in k16516 in k15271 in k15202 in k15009 in k15006 in k14901 in k14850 in k7607 in k7604 in k5838 in k5545 in k5542 in k5538 in k5247 in k5244 in k5241 in k5238 */
static void C_fcall f_17055(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[22],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_17055,NULL,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_17059,a[2]=((C_word*)t0)[6],a[3]=((C_word*)t0)[7],tmp=(C_word)a,a+=4,tmp);
t3=(C_word)C_a_i_list(&a,5,((C_word*)((C_word*)t0)[5])[1],((C_word*)((C_word*)t0)[4])[1],C_SCHEME_FALSE,((C_word*)((C_word*)t0)[3])[1],((C_word*)((C_word*)t0)[2])[1]);
t4=(C_word)C_a_i_list(&a,1,t3);
C_trace("ChickenBridge.scm: 364  append");
t5=*((C_word*)lf[20]+1);
((C_proc4)C_retrieve_proc(t5))(4,t5,t2,((C_word*)((C_word*)t0)[7])[1],t4);}

/* k17057 in k17053 in k17050 in k17047 in k17044 in k17041 in k17038 in k17031 in k16963 in k16866 in k16816 in sal-parse-stepping in k16801 in k16798 in k16795 in k16792 in k16789 in k16786 in k16783 in k16780 in k16777 in k16774 in k16771 in k16768 in k16765 in k16762 in k16759 in k16756 in k16753 in k16750 in k16747 in k16744 in k16741 in k16602 in k16599 in k16596 in k16593 in k16537 in k16534 in k16531 in k16528 in k16525 in k16522 in k16519 in k16516 in k15271 in k15202 in k15009 in k15006 in k14901 in k14850 in k7607 in k7604 in k5838 in k5545 in k5542 in k5538 in k5247 in k5244 in k5241 in k5238 */
static void C_ccall f_17059(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[3])+1,t1);
t3=((C_word*)t0)[2];
f_16812(t3,t2);}

/* k16967 in k16963 in k16866 in k16816 in sal-parse-stepping in k16801 in k16798 in k16795 in k16792 in k16789 in k16786 in k16783 in k16780 in k16777 in k16774 in k16771 in k16768 in k16765 in k16762 in k16759 in k16756 in k16753 in k16750 in k16747 in k16744 in k16741 in k16602 in k16599 in k16596 in k16593 in k16537 in k16534 in k16531 in k16528 in k16525 in k16522 in k16519 in k16516 in k15271 in k15202 in k15009 in k15006 in k14901 in k14850 in k7607 in k7604 in k5838 in k5545 in k5542 in k5538 in k5247 in k5244 in k5241 in k5238 */
static void C_ccall f_16969(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_16969,2,t0,t1);}
t2=C_mutate(((C_word *)((C_word*)t0)[8])+1,t1);
t3=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_16973,a[2]=((C_word*)t0)[4],a[3]=((C_word*)t0)[5],a[4]=((C_word*)t0)[8],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t4=(C_word)C_i_cadddr(((C_word*)t0)[3]);
C_trace("ChickenBridge.scm: 364  emit");
f_15363(t3,t4,C_SCHEME_END_OF_LIST,((C_word*)t0)[2]);}

/* k16971 in k16967 in k16963 in k16866 in k16816 in sal-parse-stepping in k16801 in k16798 in k16795 in k16792 in k16789 in k16786 in k16783 in k16780 in k16777 in k16774 in k16771 in k16768 in k16765 in k16762 in k16759 in k16756 in k16753 in k16750 in k16747 in k16744 in k16741 in k16602 in k16599 in k16596 in k16593 in k16537 in k16534 in k16531 in k16528 in k16525 in k16522 in k16519 in k16516 in k15271 in k15202 in k15009 in k15006 in k14901 in k14850 in k7607 in k7604 in k5838 in k5545 in k5542 in k5538 in k5247 in k5244 in k5241 in k5238 */
static void C_ccall f_16973(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_16973,2,t0,t1);}
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_16977,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[5],tmp=(C_word)a,a+=7,tmp);
C_trace("ChickenBridge.scm: 364  gensym");
t4=C_retrieve(lf[28]);
((C_proc3)C_retrieve_proc(t4))(3,t4,t3,lf[318]);}

/* k16975 in k16971 in k16967 in k16963 in k16866 in k16816 in sal-parse-stepping in k16801 in k16798 in k16795 in k16792 in k16789 in k16786 in k16783 in k16780 in k16777 in k16774 in k16771 in k16768 in k16765 in k16762 in k16759 in k16756 in k16753 in k16750 in k16747 in k16744 in k16741 in k16602 in k16599 in k16596 in k16593 in k16537 in k16534 in k16531 in k16528 in k16525 in k16522 in k16519 in k16516 in k15271 in k15202 in k15009 in k15006 in k14901 in k14850 in k7607 in k7604 in k5838 in k5545 in k5542 in k5538 in k5247 in k5244 in k5241 in k5238 */
static void C_ccall f_16977(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word ab[72],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_16977,2,t0,t1);}
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=(C_word)C_a_i_list(&a,2,lf[17],((C_word*)((C_word*)t0)[6])[1]);
t4=(C_word)C_a_i_list(&a,3,lf[14],((C_word*)((C_word*)t0)[6])[1],t3);
t5=(C_word)C_a_i_list(&a,2,lf[5],((C_word*)((C_word*)t0)[6])[1]);
t6=(C_word)C_a_i_list(&a,5,((C_word*)((C_word*)t0)[6])[1],((C_word*)((C_word*)t0)[5])[1],C_SCHEME_FALSE,t4,t5);
t7=(C_word)C_a_i_list(&a,2,lf[10],((C_word*)((C_word*)t0)[6])[1]);
t8=(C_word)C_a_i_list(&a,3,lf[14],((C_word*)((C_word*)t0)[4])[1],t7);
t9=(C_word)C_a_i_list(&a,5,((C_word*)((C_word*)t0)[4])[1],C_SCHEME_FALSE,t8,C_SCHEME_FALSE,C_SCHEME_FALSE);
t10=(C_word)C_a_i_list(&a,2,t6,t9);
t11=C_mutate(((C_word *)((C_word*)t0)[3])+1,t10);
t12=((C_word*)t0)[2];
f_16812(t12,t11);}

/* k16870 in k16866 in k16816 in sal-parse-stepping in k16801 in k16798 in k16795 in k16792 in k16789 in k16786 in k16783 in k16780 in k16777 in k16774 in k16771 in k16768 in k16765 in k16762 in k16759 in k16756 in k16753 in k16750 in k16747 in k16744 in k16741 in k16602 in k16599 in k16596 in k16593 in k16537 in k16534 in k16531 in k16528 in k16525 in k16522 in k16519 in k16516 in k15271 in k15202 in k15009 in k15006 in k14901 in k14850 in k7607 in k7604 in k5838 in k5545 in k5542 in k5538 in k5247 in k5244 in k5241 in k5238 */
static void C_ccall f_16872(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[11],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_16872,2,t0,t1);}
t2=C_mutate(((C_word *)((C_word*)t0)[10])+1,t1);
t3=(*a=C_CLOSURE_TYPE|10,a[1]=(C_word)f_16876,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[10],a[7]=((C_word*)t0)[6],a[8]=((C_word*)t0)[7],a[9]=((C_word*)t0)[8],a[10]=((C_word*)t0)[9],tmp=(C_word)a,a+=11,tmp);
t4=(C_word)C_i_cadddr(((C_word*)t0)[2]);
C_trace("ChickenBridge.scm: 364  emit");
f_15363(t3,t4,C_SCHEME_END_OF_LIST,((C_word*)t0)[3]);}

/* k16874 in k16870 in k16866 in k16816 in sal-parse-stepping in k16801 in k16798 in k16795 in k16792 in k16789 in k16786 in k16783 in k16780 in k16777 in k16774 in k16771 in k16768 in k16765 in k16762 in k16759 in k16756 in k16753 in k16750 in k16747 in k16744 in k16741 in k16602 in k16599 in k16596 in k16593 in k16537 in k16534 in k16531 in k16528 in k16525 in k16522 in k16519 in k16516 in k15271 in k15202 in k15009 in k15006 in k14901 in k14850 in k7607 in k7604 in k5838 in k5545 in k5542 in k5538 in k5247 in k5244 in k5241 in k5238 */
static void C_ccall f_16876(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[10],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_16876,2,t0,t1);}
t2=C_mutate(((C_word *)((C_word*)t0)[10])+1,t1);
t3=(*a=C_CLOSURE_TYPE|9,a[1]=(C_word)f_16880,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[10],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],a[7]=((C_word*)t0)[7],a[8]=((C_word*)t0)[8],a[9]=((C_word*)t0)[9],tmp=(C_word)a,a+=10,tmp);
C_trace("ChickenBridge.scm: 364  fifth");
t4=C_retrieve(lf[55]);
((C_proc3)C_retrieve_proc(t4))(3,t4,t3,((C_word*)t0)[2]);}

/* k16878 in k16874 in k16870 in k16866 in k16816 in sal-parse-stepping in k16801 in k16798 in k16795 in k16792 in k16789 in k16786 in k16783 in k16780 in k16777 in k16774 in k16771 in k16768 in k16765 in k16762 in k16759 in k16756 in k16753 in k16750 in k16747 in k16744 in k16741 in k16602 in k16599 in k16596 in k16593 in k16537 in k16534 in k16531 in k16528 in k16525 in k16522 in k16519 in k16516 in k15271 in k15202 in k15009 in k15006 in k14901 in k14850 in k7607 in k7604 in k5838 in k5545 in k5542 in k5538 in k5247 in k5244 in k5241 in k5238 */
static void C_ccall f_16880(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word ab[24],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_16880,2,t0,t1);}
t2=C_mutate(((C_word *)((C_word*)t0)[9])+1,t1);
t3=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_16883,a[2]=((C_word*)t0)[5],a[3]=((C_word*)t0)[6],a[4]=((C_word*)t0)[7],a[5]=((C_word*)t0)[8],tmp=(C_word)a,a+=6,tmp);
if(C_truep(((C_word*)((C_word*)t0)[9])[1])){
t4=(*a=C_CLOSURE_TYPE|8,a[1]=(C_word)f_16899,a[2]=t3,a[3]=((C_word*)t0)[8],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[3],a[6]=((C_word*)t0)[6],a[7]=((C_word*)t0)[4],a[8]=((C_word*)t0)[9],tmp=(C_word)a,a+=9,tmp);
t5=(C_word)C_i_cadr(((C_word*)((C_word*)t0)[9])[1]);
C_trace("ChickenBridge.scm: 364  emit");
f_15363(t4,t5,C_SCHEME_END_OF_LIST,((C_word*)t0)[2]);}
else{
t4=(C_word)C_a_i_list(&a,3,lf[14],((C_word*)((C_word*)t0)[6])[1],((C_word*)((C_word*)t0)[3])[1]);
t5=C_mutate(((C_word *)((C_word*)t0)[5])+1,t4);
t6=t3;
f_16883(t6,t5);}}

/* k16897 in k16878 in k16874 in k16870 in k16866 in k16816 in sal-parse-stepping in k16801 in k16798 in k16795 in k16792 in k16789 in k16786 in k16783 in k16780 in k16777 in k16774 in k16771 in k16768 in k16765 in k16762 in k16759 in k16756 in k16753 in k16750 in k16747 in k16744 in k16741 in k16602 in k16599 in k16596 in k16593 in k16537 in k16534 in k16531 in k16528 in k16525 in k16522 in k16519 in k16516 in k15271 in k15202 in k15009 in k15006 in k14901 in k14850 in k7607 in k7604 in k5838 in k5545 in k5542 in k5538 in k5247 in k5244 in k5241 in k5238 */
static void C_ccall f_16899(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_16899,2,t0,t1);}
t2=C_mutate(((C_word *)((C_word*)t0)[8])+1,t1);
t3=(*a=C_CLOSURE_TYPE|8,a[1]=(C_word)f_16903,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[8],a[6]=((C_word*)t0)[5],a[7]=((C_word*)t0)[6],a[8]=((C_word*)t0)[7],tmp=(C_word)a,a+=9,tmp);
C_trace("ChickenBridge.scm: 364  gensym");
t4=C_retrieve(lf[28]);
((C_proc3)C_retrieve_proc(t4))(3,t4,t3,lf[317]);}

/* k16901 in k16897 in k16878 in k16874 in k16870 in k16866 in k16816 in sal-parse-stepping in k16801 in k16798 in k16795 in k16792 in k16789 in k16786 in k16783 in k16780 in k16777 in k16774 in k16771 in k16768 in k16765 in k16762 in k16759 in k16756 in k16753 in k16750 in k16747 in k16744 in k16741 in k16602 in k16599 in k16596 in k16593 in k16537 in k16534 in k16531 in k16528 in k16525 in k16522 in k16519 in k16516 in k15271 in k15202 in k15009 in k15006 in k14901 in k14850 in k7607 in k7604 in k5838 in k5545 in k5542 in k5538 in k5247 in k5244 in k5241 in k5238 */
static void C_ccall f_16903(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word ab[66],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_16903,2,t0,t1);}
t2=C_mutate(((C_word *)((C_word*)t0)[8])+1,t1);
t3=(C_word)C_a_i_list(&a,3,lf[14],((C_word*)((C_word*)t0)[8])[1],C_SCHEME_FALSE);
t4=(C_word)C_a_i_list(&a,3,lf[14],((C_word*)((C_word*)t0)[7])[1],((C_word*)((C_word*)t0)[6])[1]);
t5=(C_word)C_a_i_list(&a,3,lf[316],t3,t4);
t6=(C_word)C_a_i_list(&a,3,lf[14],((C_word*)((C_word*)t0)[7])[1],((C_word*)((C_word*)t0)[5])[1]);
t7=(C_word)C_a_i_list(&a,4,lf[22],((C_word*)((C_word*)t0)[8])[1],t5,t6);
t8=C_mutate(((C_word *)((C_word*)t0)[4])+1,t7);
t9=(C_word)C_a_i_list(&a,5,((C_word*)((C_word*)t0)[8])[1],C_SCHEME_TRUE,C_SCHEME_FALSE,C_SCHEME_FALSE,C_SCHEME_FALSE);
t10=(C_word)C_a_i_list(&a,1,t9);
t11=C_mutate(((C_word *)((C_word*)t0)[3])+1,t10);
t12=((C_word*)t0)[2];
f_16883(t12,t11);}

/* k16881 in k16878 in k16874 in k16870 in k16866 in k16816 in sal-parse-stepping in k16801 in k16798 in k16795 in k16792 in k16789 in k16786 in k16783 in k16780 in k16777 in k16774 in k16771 in k16768 in k16765 in k16762 in k16759 in k16756 in k16753 in k16750 in k16747 in k16744 in k16741 in k16602 in k16599 in k16596 in k16593 in k16537 in k16534 in k16531 in k16528 in k16525 in k16522 in k16519 in k16516 in k15271 in k15202 in k15009 in k15006 in k14901 in k14850 in k7607 in k7604 in k5838 in k5545 in k5542 in k5538 in k5247 in k5244 in k5241 in k5238 */
static void C_fcall f_16883(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[22],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_16883,NULL,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_16887,a[2]=((C_word*)t0)[4],a[3]=((C_word*)t0)[5],tmp=(C_word)a,a+=4,tmp);
t3=(C_word)C_a_i_list(&a,5,((C_word*)((C_word*)t0)[3])[1],C_SCHEME_FALSE,((C_word*)((C_word*)t0)[2])[1],C_SCHEME_FALSE,C_SCHEME_FALSE);
t4=(C_word)C_a_i_list(&a,1,t3);
C_trace("ChickenBridge.scm: 364  append");
t5=*((C_word*)lf[20]+1);
((C_proc4)C_retrieve_proc(t5))(4,t5,t2,((C_word*)((C_word*)t0)[5])[1],t4);}

/* k16885 in k16881 in k16878 in k16874 in k16870 in k16866 in k16816 in sal-parse-stepping in k16801 in k16798 in k16795 in k16792 in k16789 in k16786 in k16783 in k16780 in k16777 in k16774 in k16771 in k16768 in k16765 in k16762 in k16759 in k16756 in k16753 in k16750 in k16747 in k16744 in k16741 in k16602 in k16599 in k16596 in k16593 in k16537 in k16534 in k16531 in k16528 in k16525 in k16522 in k16519 in k16516 in k15271 in k15202 in k15009 in k15006 in k14901 in k14850 in k7607 in k7604 in k5838 in k5545 in k5542 in k5538 in k5247 in k5244 in k5241 in k5238 */
static void C_ccall f_16887(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[3])+1,t1);
t3=((C_word*)t0)[2];
f_16812(t3,t2);}

/* k16820 in k16816 in sal-parse-stepping in k16801 in k16798 in k16795 in k16792 in k16789 in k16786 in k16783 in k16780 in k16777 in k16774 in k16771 in k16768 in k16765 in k16762 in k16759 in k16756 in k16753 in k16750 in k16747 in k16744 in k16741 in k16602 in k16599 in k16596 in k16593 in k16537 in k16534 in k16531 in k16528 in k16525 in k16522 in k16519 in k16516 in k15271 in k15202 in k15009 in k15006 in k14901 in k14850 in k7607 in k7604 in k5838 in k5545 in k5542 in k5538 in k5247 in k5244 in k5241 in k5238 */
static void C_ccall f_16822(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_16822,2,t0,t1);}
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_16826,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[6],a[5]=((C_word*)t0)[4],a[6]=((C_word*)t0)[5],tmp=(C_word)a,a+=7,tmp);
C_trace("ChickenBridge.scm: 364  gensym");
t4=C_retrieve(lf[28]);
((C_proc3)C_retrieve_proc(t4))(3,t4,t3,lf[315]);}

/* k16824 in k16820 in k16816 in sal-parse-stepping in k16801 in k16798 in k16795 in k16792 in k16789 in k16786 in k16783 in k16780 in k16777 in k16774 in k16771 in k16768 in k16765 in k16762 in k16759 in k16756 in k16753 in k16750 in k16747 in k16744 in k16741 in k16602 in k16599 in k16596 in k16593 in k16537 in k16534 in k16531 in k16528 in k16525 in k16522 in k16519 in k16516 in k15271 in k15202 in k15009 in k15006 in k14901 in k14850 in k7607 in k7604 in k5838 in k5545 in k5542 in k5538 in k5247 in k5244 in k5241 in k5238 */
static void C_ccall f_16826(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_16826,2,t0,t1);}
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_16830,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[6],a[5]=((C_word*)t0)[4],a[6]=((C_word*)t0)[5],tmp=(C_word)a,a+=7,tmp);
C_trace("ChickenBridge.scm: 364  gensym");
t4=C_retrieve(lf[28]);
((C_proc3)C_retrieve_proc(t4))(3,t4,t3,lf[314]);}

/* k16828 in k16824 in k16820 in k16816 in sal-parse-stepping in k16801 in k16798 in k16795 in k16792 in k16789 in k16786 in k16783 in k16780 in k16777 in k16774 in k16771 in k16768 in k16765 in k16762 in k16759 in k16756 in k16753 in k16750 in k16747 in k16744 in k16741 in k16602 in k16599 in k16596 in k16593 in k16537 in k16534 in k16531 in k16528 in k16525 in k16522 in k16519 in k16516 in k15271 in k15202 in k15009 in k15006 in k14901 in k14850 in k7607 in k7604 in k5838 in k5545 in k5542 in k5538 in k5247 in k5244 in k5241 in k5238 */
static void C_ccall f_16830(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word ab[63],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_16830,2,t0,t1);}
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=(C_word)C_a_i_list(&a,5,((C_word*)((C_word*)t0)[6])[1],((C_word*)((C_word*)t0)[5])[1],C_SCHEME_FALSE,C_SCHEME_FALSE,C_SCHEME_FALSE);
t4=(C_word)C_a_i_list(&a,3,lf[305],((C_word*)((C_word*)t0)[4])[1],C_fix(1));
t5=(C_word)C_a_i_list(&a,3,lf[14],((C_word*)((C_word*)t0)[4])[1],t4);
t6=(C_word)C_a_i_list(&a,3,lf[313],((C_word*)((C_word*)t0)[4])[1],((C_word*)((C_word*)t0)[6])[1]);
t7=(C_word)C_a_i_list(&a,5,((C_word*)((C_word*)t0)[4])[1],C_fix(0),C_SCHEME_FALSE,t5,t6);
t8=(C_word)C_a_i_list(&a,2,t3,t7);
t9=C_mutate(((C_word *)((C_word*)t0)[3])+1,t8);
t10=((C_word*)t0)[2];
f_16812(t10,t9);}

/* k16810 in sal-parse-stepping in k16801 in k16798 in k16795 in k16792 in k16789 in k16786 in k16783 in k16780 in k16777 in k16774 in k16771 in k16768 in k16765 in k16762 in k16759 in k16756 in k16753 in k16750 in k16747 in k16744 in k16741 in k16602 in k16599 in k16596 in k16593 in k16537 in k16534 in k16531 in k16528 in k16525 in k16522 in k16519 in k16516 in k15271 in k15202 in k15009 in k15006 in k14901 in k14850 in k7607 in k7604 in k5838 in k5545 in k5542 in k5538 in k5247 in k5244 in k5241 in k5238 */
static void C_fcall f_16812(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 364  make-parse-unit");
f_15206(((C_word*)t0)[3],C_fix(33024),((C_word*)((C_word*)t0)[2])[1],C_SCHEME_FALSE);}

/* inf->pre in k16602 in k16599 in k16596 in k16593 in k16537 in k16534 in k16531 in k16528 in k16525 in k16522 in k16519 in k16516 in k15271 in k15202 in k15009 in k15006 in k14901 in k14850 in k7607 in k7604 in k5838 in k5545 in k5542 in k5538 in k5247 in k5244 in k5241 in k5238 */
static void C_fcall f_16627(C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word t14;
C_word t15;
C_word ab[21],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_16627,NULL,2,t1,t2);}
t3=(*a=C_VECTOR_TYPE|1,a[1]=t2,tmp=(C_word)a,a+=2,tmp);
t4=C_SCHEME_FALSE;
t5=(*a=C_VECTOR_TYPE|1,a[1]=t4,tmp=(C_word)a,a+=2,tmp);
t6=C_SCHEME_FALSE;
t7=(*a=C_VECTOR_TYPE|1,a[1]=t6,tmp=(C_word)a,a+=2,tmp);
t8=C_SCHEME_FALSE;
t9=(*a=C_VECTOR_TYPE|1,a[1]=t8,tmp=(C_word)a,a+=2,tmp);
t10=C_SCHEME_FALSE;
t11=(*a=C_VECTOR_TYPE|1,a[1]=t10,tmp=(C_word)a,a+=2,tmp);
if(C_truep((C_word)C_i_pairp(((C_word*)t3)[1]))){
t12=C_SCHEME_UNDEFINED;
t13=(*a=C_VECTOR_TYPE|1,a[1]=t12,tmp=(C_word)a,a+=2,tmp);
t14=C_set_block_item(t13,0,(*a=C_CLOSURE_TYPE|8,a[1]=(C_word)f_16639,a[2]=t9,a[3]=t13,a[4]=t11,a[5]=t5,a[6]=t7,a[7]=t3,a[8]=((C_word)li242),tmp=(C_word)a,a+=9,tmp));
t15=((C_word*)t13)[1];
f_16639(t15,t1);}
else{
t12=t1;
((C_proc2)(void*)(*((C_word*)t12+1)))(2,t12,((C_word*)t3)[1]);}}

/* do2547 in inf->pre in k16602 in k16599 in k16596 in k16593 in k16537 in k16534 in k16531 in k16528 in k16525 in k16522 in k16519 in k16516 in k15271 in k15202 in k15009 in k15006 in k14901 in k14850 in k7607 in k7604 in k5838 in k5545 in k5542 in k5538 in k5247 in k5244 in k5241 in k5238 */
static void C_fcall f_16639(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_16639,NULL,2,t0,t1);}
if(C_truep((C_word)C_i_nullp(((C_word*)((C_word*)t0)[7])[1]))){
t2=t1;
((C_proc2)(void*)(*((C_word*)t2+1)))(2,t2,((C_word*)((C_word*)t0)[6])[1]);}
else{
t2=(C_word)C_i_car(((C_word*)((C_word*)t0)[7])[1]);
t3=C_mutate(((C_word *)((C_word*)t0)[5])+1,t2);
t4=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[7])[1]);
t5=C_mutate(((C_word *)((C_word*)t0)[7])+1,t4);
t6=(*a=C_CLOSURE_TYPE|8,a[1]=(C_word)f_16658,a[2]=((C_word*)t0)[5],a[3]=((C_word*)t0)[6],a[4]=((C_word*)t0)[2],a[5]=((C_word*)t0)[7],a[6]=t1,a[7]=((C_word*)t0)[3],a[8]=((C_word*)t0)[4],tmp=(C_word)a,a+=9,tmp);
C_trace("ChickenBridge.scm: 364  is-op?");
f_16606(t6,((C_word*)((C_word*)t0)[5])[1]);}}

/* k16656 in do2547 in inf->pre in k16602 in k16599 in k16596 in k16593 in k16537 in k16534 in k16531 in k16528 in k16525 in k16522 in k16519 in k16516 in k15271 in k15202 in k15009 in k15006 in k14901 in k14850 in k7607 in k7604 in k5838 in k5545 in k5542 in k5538 in k5247 in k5244 in k5241 in k5238 */
static void C_ccall f_16658(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word ab[15],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_16658,2,t0,t1);}
t2=C_mutate(((C_word *)((C_word*)t0)[8])+1,t1);
t3=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_16661,a[2]=((C_word*)t0)[6],a[3]=((C_word*)t0)[7],tmp=(C_word)a,a+=4,tmp);
if(C_truep((C_word)C_i_numberp(((C_word*)((C_word*)t0)[8])[1]))){
t4=C_SCHEME_UNDEFINED;
t5=(*a=C_VECTOR_TYPE|1,a[1]=t4,tmp=(C_word)a,a+=2,tmp);
t6=C_set_block_item(t5,0,(*a=C_CLOSURE_TYPE|8,a[1]=(C_word)f_16676,a[2]=((C_word*)t0)[8],a[3]=t5,a[4]=((C_word*)t0)[2],a[5]=((C_word*)t0)[3],a[6]=((C_word*)t0)[4],a[7]=((C_word*)t0)[5],a[8]=((C_word)li241),tmp=(C_word)a,a+=9,tmp));
t7=((C_word*)t5)[1];
f_16676(t7,t3,C_SCHEME_FALSE,C_SCHEME_TRUE,C_SCHEME_END_OF_LIST);}
else{
t4=C_mutate(((C_word *)((C_word*)t0)[3])+1,((C_word*)((C_word*)t0)[2])[1]);
t5=t3;
f_16661(2,t5,t4);}}

/* do2549 in k16656 in do2547 in inf->pre in k16602 in k16599 in k16596 in k16593 in k16537 in k16534 in k16531 in k16528 in k16525 in k16522 in k16519 in k16516 in k15271 in k15202 in k15009 in k15006 in k14901 in k14850 in k7607 in k7604 in k5838 in k5545 in k5542 in k5538 in k5247 in k5244 in k5241 in k5238 */
static void C_fcall f_16676(C_word t0,C_word t1,C_word t2,C_word t3,C_word t4){
C_word tmp;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word t14;
C_word ab[24],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_16676,NULL,5,t0,t1,t2,t3,t4);}
t5=(*a=C_VECTOR_TYPE|1,a[1]=t2,tmp=(C_word)a,a+=2,tmp);
t6=(*a=C_VECTOR_TYPE|1,a[1]=t3,tmp=(C_word)a,a+=2,tmp);
t7=(*a=C_VECTOR_TYPE|1,a[1]=t4,tmp=(C_word)a,a+=2,tmp);
t8=(C_word)C_i_nullp(((C_word*)((C_word*)t0)[7])[1]);
t9=(C_truep(t8)?t8:(C_word)C_i_not(((C_word*)t6)[1]));
if(C_truep(t9)){
t10=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_16690,a[2]=t1,a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],tmp=(C_word)a,a+=6,tmp);
t11=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_16704,a[2]=t10,tmp=(C_word)a,a+=3,tmp);
C_trace("ChickenBridge.scm: 364  reverse");
t12=*((C_word*)lf[232]+1);
((C_proc3)C_retrieve_proc(t12))(3,t12,t11,((C_word*)t7)[1]);}
else{
t10=(*a=C_CLOSURE_TYPE|8,a[1]=(C_word)f_16708,a[2]=((C_word*)t0)[7],a[3]=((C_word*)t0)[2],a[4]=t7,a[5]=t6,a[6]=t1,a[7]=((C_word*)t0)[3],a[8]=t5,tmp=(C_word)a,a+=9,tmp);
t11=(C_word)C_i_car(((C_word*)((C_word*)t0)[7])[1]);
C_trace("ChickenBridge.scm: 364  is-op?");
f_16606(t10,t11);}}

/* k16706 in do2549 in k16656 in do2547 in inf->pre in k16602 in k16599 in k16596 in k16593 in k16537 in k16534 in k16531 in k16528 in k16525 in k16522 in k16519 in k16516 in k15271 in k15202 in k15009 in k15006 in k14901 in k14850 in k7607 in k7604 in k5838 in k5545 in k5542 in k5538 in k5247 in k5244 in k5241 in k5238 */
static void C_ccall f_16708(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word ab[10],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_16708,2,t0,t1);}
t2=C_mutate(((C_word *)((C_word*)t0)[8])+1,t1);
t3=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_16711,a[2]=((C_word*)t0)[4],a[3]=((C_word*)t0)[5],a[4]=((C_word*)t0)[8],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t4=(C_truep(((C_word*)((C_word*)t0)[8])[1])?(C_word)C_i_less_or_equalp(((C_word*)((C_word*)t0)[8])[1],((C_word*)((C_word*)t0)[3])[1]):C_SCHEME_FALSE);
if(C_truep(t4)){
t5=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_FALSE);
t6=t3;
f_16711(t6,t5);}
else{
t5=(C_word)C_i_car(((C_word*)((C_word*)t0)[2])[1]);
t6=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[2])[1]);
t7=C_mutate(((C_word *)((C_word*)t0)[2])+1,t6);
t8=(C_word)C_a_i_cons(&a,2,t5,((C_word*)((C_word*)t0)[4])[1]);
t9=C_mutate(((C_word *)((C_word*)t0)[4])+1,t8);
t10=t3;
f_16711(t10,t9);}}

/* k16709 in k16706 in do2549 in k16656 in do2547 in inf->pre in k16602 in k16599 in k16596 in k16593 in k16537 in k16534 in k16531 in k16528 in k16525 in k16522 in k16519 in k16516 in k15271 in k15202 in k15009 in k15006 in k14901 in k14850 in k7607 in k7604 in k5838 in k5545 in k5542 in k5538 in k5247 in k5244 in k5241 in k5238 */
static void C_fcall f_16711(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
t2=((C_word*)((C_word*)t0)[6])[1];
f_16676(t2,((C_word*)t0)[5],((C_word*)((C_word*)t0)[4])[1],((C_word*)((C_word*)t0)[3])[1],((C_word*)((C_word*)t0)[2])[1]);}

/* k16702 in do2549 in k16656 in do2547 in inf->pre in k16602 in k16599 in k16596 in k16593 in k16537 in k16534 in k16531 in k16528 in k16525 in k16522 in k16519 in k16516 in k15271 in k15202 in k15009 in k15006 in k14901 in k14850 in k7607 in k7604 in k5838 in k5545 in k5542 in k5538 in k5247 in k5244 in k5241 in k5238 */
static void C_ccall f_16704(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 364  inf->pre");
f_16627(((C_word*)t0)[2],t1);}

/* k16688 in do2549 in k16656 in do2547 in inf->pre in k16602 in k16599 in k16596 in k16593 in k16537 in k16534 in k16531 in k16528 in k16525 in k16522 in k16519 in k16516 in k15271 in k15202 in k15009 in k15006 in k14901 in k14850 in k7607 in k7604 in k5838 in k5545 in k5542 in k5538 in k5247 in k5244 in k5241 in k5238 */
static void C_ccall f_16690(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[18],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_16690,2,t0,t1);}
t2=C_mutate(((C_word *)((C_word*)t0)[5])+1,t1);
t3=(C_truep(((C_word*)((C_word*)t0)[4])[1])?(C_word)C_a_i_list(&a,3,((C_word*)((C_word*)t0)[3])[1],((C_word*)((C_word*)t0)[4])[1],((C_word*)((C_word*)t0)[5])[1]):(C_word)C_a_i_list(&a,3,((C_word*)((C_word*)t0)[3])[1],((C_word*)((C_word*)t0)[5])[1],C_SCHEME_FALSE));
t4=C_mutate(((C_word *)((C_word*)t0)[4])+1,t3);
t5=((C_word*)t0)[2];
((C_proc2)(void*)(*((C_word*)t5+1)))(2,t5,t4);}

/* k16659 in k16656 in do2547 in inf->pre in k16602 in k16599 in k16596 in k16593 in k16537 in k16534 in k16531 in k16528 in k16525 in k16522 in k16519 in k16516 in k15271 in k15202 in k15009 in k15006 in k14901 in k14850 in k7607 in k7604 in k5838 in k5545 in k5542 in k5538 in k5247 in k5244 in k5241 in k5238 */
static void C_ccall f_16661(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
t2=((C_word*)((C_word*)t0)[3])[1];
f_16639(t2,((C_word*)t0)[2]);}

/* is-op? in k16602 in k16599 in k16596 in k16593 in k16537 in k16534 in k16531 in k16528 in k16525 in k16522 in k16519 in k16516 in k15271 in k15202 in k15009 in k15006 in k14901 in k14850 in k7607 in k7604 in k5838 in k5545 in k5542 in k5538 in k5247 in k5244 in k5241 in k5238 */
static void C_fcall f_16606(C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word ab[4],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_16606,NULL,2,t1,t2);}
t3=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_16613,a[2]=t2,a[3]=t1,tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 364  token-unit?");
f_15275(t3,t2);}

/* k16611 in is-op? in k16602 in k16599 in k16596 in k16593 in k16537 in k16534 in k16531 in k16528 in k16525 in k16522 in k16519 in k16516 in k15271 in k15202 in k15009 in k15006 in k14901 in k14850 in k7607 in k7604 in k5838 in k5545 in k5542 in k5538 in k5247 in k5244 in k5241 in k5238 */
static void C_ccall f_16613(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[3],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_16613,2,t0,t1);}
if(C_truep(t1)){
t2=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_16616,a[2]=((C_word*)t0)[3],tmp=(C_word)a,a+=3,tmp);
C_trace("ChickenBridge.scm: 364  parse-unit-type");
f_15227(t2,((C_word*)t0)[2]);}
else{
t2=((C_word*)t0)[3];
((C_proc2)(void*)(*((C_word*)t2+1)))(2,t2,C_SCHEME_FALSE);}}

/* k16614 in k16611 in is-op? in k16602 in k16599 in k16596 in k16593 in k16537 in k16534 in k16531 in k16528 in k16525 in k16522 in k16519 in k16516 in k15271 in k15202 in k15009 in k15006 in k14901 in k14850 in k7607 in k7604 in k5838 in k5545 in k5542 in k5538 in k5247 in k5244 in k5241 in k5238 */
static void C_ccall f_16616(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[4],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_16616,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_16622,a[2]=t1,a[3]=((C_word*)t0)[2],tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 364  SalOpType?");
f_16383(t2,t1);}

/* k16620 in k16614 in k16611 in is-op? in k16602 in k16599 in k16596 in k16593 in k16537 in k16534 in k16531 in k16528 in k16525 in k16522 in k16519 in k16516 in k15271 in k15202 in k15009 in k15006 in k14901 in k14850 in k7607 in k7604 in k5838 in k5545 in k5542 in k5538 in k5247 in k5244 in k5241 in k5238 */
static void C_ccall f_16622(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[4],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_16622,2,t0,t1);}
if(C_truep(t1)){
t2=((C_word*)t0)[3];
t3=((C_word*)t0)[2];
t4=t2;
((C_proc2)(void*)(*((C_word*)t4+1)))(2,t4,(C_word)C_a_i_bitwise_and(&a,2,t3,C_fix(255)));}
else{
t2=((C_word*)t0)[3];
((C_proc2)(void*)(*((C_word*)t2+1)))(2,t2,C_SCHEME_FALSE);}}

/* remove-token-type in k16537 in k16534 in k16531 in k16528 in k16525 in k16522 in k16519 in k16516 in k15271 in k15202 in k15009 in k15006 in k14901 in k14850 in k7607 in k7604 in k5838 in k5545 in k5542 in k5538 in k5247 in k5244 in k5241 in k5238 */
static void C_fcall f_16541(C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word ab[14],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_16541,NULL,3,t1,t2,t3);}
t4=(C_word)C_a_i_list(&a,1,C_SCHEME_TRUE);
t5=t4;
t6=(*a=C_VECTOR_TYPE|1,a[1]=t5,tmp=(C_word)a,a+=2,tmp);
t7=C_SCHEME_UNDEFINED;
t8=(*a=C_VECTOR_TYPE|1,a[1]=t7,tmp=(C_word)a,a+=2,tmp);
t9=C_set_block_item(t8,0,(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_16550,a[2]=t3,a[3]=t6,a[4]=t8,a[5]=t4,a[6]=((C_word)li238),tmp=(C_word)a,a+=7,tmp));
t10=((C_word*)t8)[1];
f_16550(t10,t1,t2);}

/* do2513 in remove-token-type in k16537 in k16534 in k16531 in k16528 in k16525 in k16522 in k16519 in k16516 in k15271 in k15202 in k15009 in k15006 in k14901 in k14850 in k7607 in k7604 in k5838 in k5545 in k5542 in k5538 in k5247 in k5244 in k5241 in k5238 */
static void C_fcall f_16550(C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[10],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_16550,NULL,3,t0,t1,t2);}
if(C_truep((C_word)C_i_nullp(t2))){
t3=t1;
((C_proc2)(void*)(*((C_word*)t3+1)))(2,t3,(C_word)C_i_cdr(((C_word*)t0)[5]));}
else{
t3=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_16563,a[2]=t1,a[3]=((C_word*)t0)[4],a[4]=t2,tmp=(C_word)a,a+=5,tmp);
t4=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_16573,a[2]=((C_word*)t0)[3],a[3]=t2,a[4]=t3,tmp=(C_word)a,a+=5,tmp);
t5=(C_word)C_i_car(t2);
C_trace("ChickenBridge.scm: 364  token-unit-type=?");
f_15291(t4,t5,((C_word*)t0)[2]);}}

/* k16571 in do2513 in remove-token-type in k16537 in k16534 in k16531 in k16528 in k16525 in k16522 in k16519 in k16516 in k15271 in k15202 in k15009 in k15006 in k14901 in k14850 in k7607 in k7604 in k5838 in k5545 in k5542 in k5538 in k5247 in k5244 in k5241 in k5238 */
static void C_ccall f_16573(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word ab[3],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_16573,2,t0,t1);}
if(C_truep(t1)){
t2=((C_word*)t0)[4];
f_16563(t2,C_SCHEME_FALSE);}
else{
t2=(C_word)C_i_car(((C_word*)t0)[3]);
t3=(C_word)C_a_i_list(&a,1,t2);
t4=(C_word)C_i_set_cdr(((C_word*)((C_word*)t0)[2])[1],t3);
t5=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[2])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[2])+1,t5);
t7=((C_word*)t0)[4];
f_16563(t7,t6);}}

/* k16561 in do2513 in remove-token-type in k16537 in k16534 in k16531 in k16528 in k16525 in k16522 in k16519 in k16516 in k15271 in k15202 in k15009 in k15006 in k14901 in k14850 in k7607 in k7604 in k5838 in k5545 in k5542 in k5538 in k5247 in k5244 in k5241 in k5238 */
static void C_fcall f_16563(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word *a;
t2=(C_word)C_i_cdr(((C_word*)t0)[4]);
t3=((C_word*)((C_word*)t0)[3])[1];
f_16550(t3,((C_word*)t0)[2],t2);}

/* SalType=? in k15271 in k15202 in k15009 in k15006 in k14901 in k14850 in k7607 in k7604 in k5838 in k5545 in k5542 in k5538 in k5247 in k5244 in k5241 in k5238 */
static void C_fcall f_16497(C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word t6;
C_word ab[8],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_16497,NULL,3,t1,t2,t3);}
t4=(C_word)C_a_i_arithmetic_shift(&a,2,t2,C_fix(-8));
t5=(C_word)C_a_i_arithmetic_shift(&a,2,t3,C_fix(-8));
t6=t1;
((C_proc2)(void*)(*((C_word*)t6+1)))(2,t6,(C_word)C_i_nequalp(t4,t5));}

/* SalRuleType? in k15271 in k15202 in k15009 in k15006 in k14901 in k14850 in k7607 in k7604 in k5838 in k5545 in k5542 in k5538 in k5247 in k5244 in k5241 in k5238 */
static void C_fcall f_16485(C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word *a;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_16485,NULL,2,t1,t2);}
t3=(C_word)C_i_lessp(C_fix(25600),t2);
t4=t1;
((C_proc2)(void*)(*((C_word*)t4+1)))(2,t4,(C_truep(t3)?(C_word)C_i_lessp(t2,C_fix(38400)):C_SCHEME_FALSE));}

/* SalOpType? in k15271 in k15202 in k15009 in k15006 in k14901 in k14850 in k7607 in k7604 in k5838 in k5545 in k5542 in k5538 in k5247 in k5244 in k5241 in k5238 */
static void C_fcall f_16383(C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word *a;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_16383,NULL,2,t1,t2);}
t3=(C_word)C_i_lessp(C_fix(6656),t2);
t4=t1;
((C_proc2)(void*)(*((C_word*)t4+1)))(2,t4,(C_truep(t3)?(C_word)C_i_lessp(t2,C_fix(11520)):C_SCHEME_FALSE));}

/* SalTokenType? in k15271 in k15202 in k15009 in k15006 in k14901 in k14850 in k7607 in k7604 in k5838 in k5545 in k5542 in k5538 in k5247 in k5244 in k5241 in k5238 */
static void C_fcall f_16335(C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word *a;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_16335,NULL,2,t1,t2);}
t3=(C_word)C_i_lessp(C_fix(0),t2);
t4=t1;
((C_proc2)(void*)(*((C_word*)t4+1)))(2,t4,(C_truep(t3)?(C_word)C_i_lessp(t2,C_fix(25600)):C_SCHEME_FALSE));}

/* parser in k15271 in k15202 in k15009 in k15006 in k14901 in k14850 in k7607 in k7604 in k5838 in k5545 in k5542 in k5538 in k5247 in k5244 in k5241 in k5238 */
static void C_fcall f_15716(C_word t1,C_word t2,C_word t3,C_word t4,C_word t5,C_word t6,C_word t7){
C_word tmp;
C_word t8;
C_word t9;
C_word t10;
C_word ab[11],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_15716,NULL,7,t1,t2,t3,t4,t5,t6,t7);}
t8=(*a=C_VECTOR_TYPE|1,a[1]=t3,tmp=(C_word)a,a+=2,tmp);
t9=(*a=C_CLOSURE_TYPE|8,a[1]=(C_word)f_15720,a[2]=t4,a[3]=t7,a[4]=t6,a[5]=t5,a[6]=t8,a[7]=t1,a[8]=t2,tmp=(C_word)a,a+=9,tmp);
if(C_truep(t6)){
C_trace("ChickenBridge.scm: 364  printf");
t10=C_retrieve(lf[307]);
((C_proc6)C_retrieve_proc(t10))(6,t10,t9,lf[308],t5,t2,((C_word*)t8)[1]);}
else{
t10=t9;
f_15720(2,t10,C_SCHEME_UNDEFINED);}}

/* k15718 in parser in k15271 in k15202 in k15009 in k15006 in k14901 in k14850 in k7607 in k7604 in k5838 in k5545 in k5542 in k5538 in k5247 in k5244 in k5241 in k5238 */
static void C_ccall f_15720(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_15720,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|8,a[1]=(C_word)f_15723,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],a[7]=((C_word*)t0)[7],a[8]=((C_word*)t0)[8],tmp=(C_word)a,a+=9,tmp);
C_trace("ChickenBridge.scm: 364  null-tokens?");
f_14895(t2,((C_word*)((C_word*)t0)[6])[1]);}

/* k15721 in k15718 in parser in k15271 in k15202 in k15009 in k15006 in k14901 in k14850 in k7607 in k7604 in k5838 in k5545 in k5542 in k5538 in k5247 in k5244 in k5241 in k5238 */
static void C_ccall f_15723(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[18],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_15723,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|8,a[1]=(C_word)f_15726,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],a[7]=((C_word*)t0)[7],a[8]=((C_word*)t0)[8],tmp=(C_word)a,a+=9,tmp);
if(C_truep(t1)){
t3=t2;
f_15726(t3,t1);}
else{
t3=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_16141,a[2]=t2,tmp=(C_word)a,a+=3,tmp);
t4=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_16145,a[2]=t3,tmp=(C_word)a,a+=3,tmp);
t5=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_16149,a[2]=t4,tmp=(C_word)a,a+=3,tmp);
C_trace("ChickenBridge.scm: 364  first-token");
f_14883(t5,((C_word*)((C_word*)t0)[6])[1]);}}

/* k16147 in k15721 in k15718 in parser in k15271 in k15202 in k15009 in k15006 in k14901 in k14850 in k7607 in k7604 in k5838 in k5545 in k5542 in k5538 in k5247 in k5244 in k5241 in k5238 */
static void C_ccall f_16149(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 364  token-position");
f_14842(((C_word*)t0)[2],t1);}

/* k16143 in k15721 in k15718 in parser in k15271 in k15202 in k15009 in k15006 in k14901 in k14850 in k7607 in k7604 in k5838 in k5545 in k5542 in k5538 in k5247 in k5244 in k5241 in k5238 */
static void C_ccall f_16145(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 364  max");
t2=*((C_word*)lf[187]+1);
((C_proc4)C_retrieve_proc(t2))(4,t2,((C_word*)t0)[2],C_retrieve2(lf[300],"*maxtokpos*"),t1);}

/* k16139 in k15721 in k15718 in parser in k15271 in k15202 in k15009 in k15006 in k14901 in k14850 in k7607 in k7604 in k5838 in k5545 in k5542 in k5538 in k5247 in k5244 in k5241 in k5238 */
static void C_ccall f_16141(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word *a;
t2=C_mutate(&lf[300],t1);
t3=((C_word*)t0)[2];
f_15726(t3,t2);}

/* k15724 in k15721 in k15718 in parser in k15271 in k15202 in k15009 in k15006 in k14901 in k14850 in k7607 in k7604 in k5838 in k5545 in k5542 in k5538 in k5247 in k5244 in k5241 in k5238 */
static void C_fcall f_15726(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[16],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_15726,NULL,2,t0,t1);}
t2=((C_word*)t0)[8];
if(C_truep((C_word)C_i_numberp(t2))){
t3=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_15735,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
C_trace("ChickenBridge.scm: 364  pattern-value");
t4=C_retrieve2(lf[160],"pattern-value");
((C_proc3)C_retrieve_proc(t4))(3,t4,t3,((C_word*)t0)[8]);}
else{
t3=(*a=C_CLOSURE_TYPE|8,a[1]=(C_word)f_15849,a[2]=((C_word*)t0)[8],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[7],a[7]=((C_word*)t0)[6],a[8]=((C_word*)t0)[2],tmp=(C_word)a,a+=9,tmp);
C_trace("ChickenBridge.scm: 364  pattern-clause?");
f_15037(t3,((C_word*)t0)[8]);}}

/* k15847 in k15724 in k15721 in k15718 in parser in k15271 in k15202 in k15009 in k15006 in k14901 in k14850 in k7607 in k7604 in k5838 in k5545 in k5542 in k5538 in k5247 in k5244 in k5241 in k5238 */
static void C_ccall f_15849(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[13],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_15849,2,t0,t1);}
if(C_truep(t1)){
t2=(*a=C_CLOSURE_TYPE|8,a[1]=(C_word)f_15855,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],a[7]=((C_word*)t0)[7],a[8]=((C_word*)t0)[8],tmp=(C_word)a,a+=9,tmp);
t3=((C_word*)t0)[2];
t4=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_15082,a[2]=t2,a[3]=t3,tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 364  pattern-clause?");
f_15037(t4,t3);}
else{
C_trace("ChickenBridge.scm: 364  error");
t2=*((C_word*)lf[6]+1);
((C_proc4)C_retrieve_proc(t2))(4,t2,((C_word*)t0)[6],lf[306],((C_word*)t0)[2]);}}

/* k15080 in k15847 in k15724 in k15721 in k15718 in parser in k15271 in k15202 in k15009 in k15006 in k14901 in k14850 in k7607 in k7604 in k5838 in k5545 in k5542 in k5538 in k5247 in k5244 in k5241 in k5238 */
static void C_ccall f_15082(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word *a;
if(C_truep(t1)){
t2=(C_word)C_i_car(((C_word*)t0)[3]);
t3=((C_word*)t0)[2];
f_15855(t3,(C_word)C_eqp(t2,lf[289]));}
else{
t2=((C_word*)t0)[2];
f_15855(t2,C_SCHEME_FALSE);}}

/* k15853 in k15847 in k15724 in k15721 in k15718 in parser in k15271 in k15202 in k15009 in k15006 in k14901 in k14850 in k7607 in k7604 in k5838 in k5545 in k5542 in k5538 in k5247 in k5244 in k5241 in k5238 */
static void C_fcall f_15855(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word t14;
C_word t15;
C_word ab[32],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_15855,NULL,2,t0,t1);}
t2=(C_truep(t1)?t1:((C_word*)t0)[8]);
if(C_truep(t2)){
t3=C_SCHEME_FALSE;
t4=(*a=C_VECTOR_TYPE|1,a[1]=t3,tmp=(C_word)a,a+=2,tmp);
t5=((C_word*)((C_word*)t0)[7])[1];
t6=(*a=C_VECTOR_TYPE|1,a[1]=t5,tmp=(C_word)a,a+=2,tmp);
t7=C_SCHEME_END_OF_LIST;
t8=(*a=C_VECTOR_TYPE|1,a[1]=t7,tmp=(C_word)a,a+=2,tmp);
t9=C_SCHEME_FALSE;
t10=(*a=C_VECTOR_TYPE|1,a[1]=t9,tmp=(C_word)a,a+=2,tmp);
t11=(*a=C_CLOSURE_TYPE|11,a[1]=(C_word)f_15864,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=t10,a[7]=((C_word*)t0)[7],a[8]=t6,a[9]=t8,a[10]=t4,a[11]=((C_word*)t0)[6],tmp=(C_word)a,a+=12,tmp);
C_trace("ChickenBridge.scm: 364  pattern-nsubs");
f_15055(t11,((C_word*)t0)[2]);}
else{
t3=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_15943,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[7],a[7]=((C_word*)t0)[6],tmp=(C_word)a,a+=8,tmp);
t4=((C_word*)t0)[2];
t5=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_15098,a[2]=t3,a[3]=t4,tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 364  pattern-clause?");
f_15037(t5,t4);}}

/* k15096 in k15853 in k15847 in k15724 in k15721 in k15718 in parser in k15271 in k15202 in k15009 in k15006 in k14901 in k14850 in k7607 in k7604 in k5838 in k5545 in k5542 in k5538 in k5247 in k5244 in k5241 in k5238 */
static void C_ccall f_15098(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word *a;
if(C_truep(t1)){
t2=(C_word)C_i_car(((C_word*)t0)[3]);
t3=((C_word*)t0)[2];
f_15943(t3,(C_word)C_eqp(t2,lf[290]));}
else{
t2=((C_word*)t0)[2];
f_15943(t2,C_SCHEME_FALSE);}}

/* k15941 in k15853 in k15847 in k15724 in k15721 in k15718 in parser in k15271 in k15202 in k15009 in k15006 in k14901 in k14850 in k7607 in k7604 in k5838 in k5545 in k5542 in k5538 in k5247 in k5244 in k5241 in k5238 */
static void C_fcall f_15943(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word ab[25],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_15943,NULL,2,t0,t1);}
if(C_truep(t1)){
t2=C_SCHEME_FALSE;
t3=(*a=C_VECTOR_TYPE|1,a[1]=t2,tmp=(C_word)a,a+=2,tmp);
t4=C_SCHEME_FALSE;
t5=(*a=C_VECTOR_TYPE|1,a[1]=t4,tmp=(C_word)a,a+=2,tmp);
t6=C_SCHEME_END_OF_LIST;
t7=(*a=C_VECTOR_TYPE|1,a[1]=t6,tmp=(C_word)a,a+=2,tmp);
t8=(*a=C_CLOSURE_TYPE|10,a[1]=(C_word)f_15949,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],a[7]=t7,a[8]=t5,a[9]=((C_word*)t0)[7],a[10]=t3,tmp=(C_word)a,a+=11,tmp);
C_trace("ChickenBridge.scm: 364  pattern-nsubs");
f_15055(t8,((C_word*)t0)[2]);}
else{
t2=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_16013,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[2],a[6]=((C_word*)t0)[7],a[7]=((C_word*)t0)[6],tmp=(C_word)a,a+=8,tmp);
C_trace("ChickenBridge.scm: 364  pattern-zero-or-more?");
f_15123(t2,((C_word*)t0)[2]);}}

/* k16011 in k15941 in k15853 in k15847 in k15724 in k15721 in k15718 in parser in k15271 in k15202 in k15009 in k15006 in k14901 in k14850 in k7607 in k7604 in k5838 in k5545 in k5542 in k5538 in k5247 in k5244 in k5241 in k5238 */
static void C_ccall f_16013(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[12],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_16013,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_16016,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],a[7]=((C_word*)t0)[7],tmp=(C_word)a,a+=8,tmp);
if(C_truep(t1)){
t3=t2;
f_16016(t3,t1);}
else{
t3=((C_word*)t0)[5];
t4=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_15114,a[2]=t2,a[3]=t3,tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 364  pattern-clause?");
f_15037(t4,t3);}}

/* k15112 in k16011 in k15941 in k15853 in k15847 in k15724 in k15721 in k15718 in parser in k15271 in k15202 in k15009 in k15006 in k14901 in k14850 in k7607 in k7604 in k5838 in k5545 in k5542 in k5538 in k5247 in k5244 in k5241 in k5238 */
static void C_ccall f_15114(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word *a;
if(C_truep(t1)){
t2=(C_word)C_i_car(((C_word*)t0)[3]);
t3=((C_word*)t0)[2];
f_16016(t3,(C_word)C_eqp(t2,lf[305]));}
else{
t2=((C_word*)t0)[2];
f_16016(t2,C_SCHEME_FALSE);}}

/* k16014 in k16011 in k15941 in k15853 in k15847 in k15724 in k15721 in k15718 in parser in k15271 in k15202 in k15009 in k15006 in k14901 in k14850 in k7607 in k7604 in k5838 in k5545 in k5542 in k5538 in k5247 in k5244 in k5241 in k5238 */
static void C_fcall f_16016(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word t14;
C_word t15;
C_word t16;
C_word t17;
C_word t18;
C_word t19;
C_word ab[46],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_16016,NULL,2,t0,t1);}
if(C_truep(t1)){
t2=C_SCHEME_TRUE;
t3=(*a=C_VECTOR_TYPE|1,a[1]=t2,tmp=(C_word)a,a+=2,tmp);
t4=C_SCHEME_FALSE;
t5=(*a=C_VECTOR_TYPE|1,a[1]=t4,tmp=(C_word)a,a+=2,tmp);
t6=((C_word*)((C_word*)t0)[7])[1];
t7=(*a=C_VECTOR_TYPE|1,a[1]=t6,tmp=(C_word)a,a+=2,tmp);
t8=C_SCHEME_END_OF_LIST;
t9=(*a=C_VECTOR_TYPE|1,a[1]=t8,tmp=(C_word)a,a+=2,tmp);
t10=C_fix(0);
t11=(*a=C_VECTOR_TYPE|1,a[1]=t10,tmp=(C_word)a,a+=2,tmp);
t12=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_16022,a[2]=((C_word*)t0)[5],a[3]=t11,a[4]=((C_word*)t0)[7],a[5]=t9,a[6]=t3,a[7]=((C_word*)t0)[6],tmp=(C_word)a,a+=8,tmp);
t13=C_SCHEME_UNDEFINED;
t14=(*a=C_VECTOR_TYPE|1,a[1]=t13,tmp=(C_word)a,a+=2,tmp);
t15=C_set_block_item(t14,0,(*a=C_CLOSURE_TYPE|13,a[1]=(C_word)f_16045,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=t5,a[7]=t11,a[8]=t7,a[9]=((C_word*)t0)[7],a[10]=t9,a[11]=t14,a[12]=t3,a[13]=((C_word)li230),tmp=(C_word)a,a+=14,tmp));
t16=((C_word*)t14)[1];
f_16045(t16,t12);}
else{
t2=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_16094,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[7],a[7]=((C_word*)t0)[6],tmp=(C_word)a,a+=8,tmp);
t3=((C_word*)t0)[5];
t4=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_15146,a[2]=t2,a[3]=t3,tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 364  pattern-clause?");
f_15037(t4,t3);}}

/* k15144 in k16014 in k16011 in k15941 in k15853 in k15847 in k15724 in k15721 in k15718 in parser in k15271 in k15202 in k15009 in k15006 in k14901 in k14850 in k7607 in k7604 in k5838 in k5545 in k5542 in k5538 in k5247 in k5244 in k5241 in k5238 */
static void C_ccall f_15146(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word *a;
if(C_truep(t1)){
t2=(C_word)C_i_car(((C_word*)t0)[3]);
t3=((C_word*)t0)[2];
f_16094(t3,(C_word)C_eqp(t2,lf[304]));}
else{
t2=((C_word*)t0)[2];
f_16094(t2,C_SCHEME_FALSE);}}

/* k16092 in k16014 in k16011 in k15941 in k15853 in k15847 in k15724 in k15721 in k15718 in parser in k15271 in k15202 in k15009 in k15006 in k14901 in k14850 in k7607 in k7604 in k5838 in k5545 in k5542 in k5538 in k5247 in k5244 in k5241 in k5238 */
static void C_fcall f_16094(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word ab[27],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_16094,NULL,2,t0,t1);}
if(C_truep(t1)){
t2=C_SCHEME_FALSE;
t3=(*a=C_VECTOR_TYPE|1,a[1]=t2,tmp=(C_word)a,a+=2,tmp);
t4=C_SCHEME_END_OF_LIST;
t5=(*a=C_VECTOR_TYPE|1,a[1]=t4,tmp=(C_word)a,a+=2,tmp);
t6=C_SCHEME_END_OF_LIST;
t7=(*a=C_VECTOR_TYPE|1,a[1]=t6,tmp=(C_word)a,a+=2,tmp);
t8=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_16103,a[2]=((C_word*)t0)[6],a[3]=t7,a[4]=t5,a[5]=((C_word*)t0)[7],a[6]=t3,tmp=(C_word)a,a+=7,tmp);
t9=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_16114,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[5],a[7]=((C_word)li231),tmp=(C_word)a,a+=8,tmp);
t10=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_16120,a[2]=t7,a[3]=t5,a[4]=t3,a[5]=((C_word)li232),tmp=(C_word)a,a+=6,tmp);
C_trace("ChickenBridge.scm: 364  call-with-values");
C_call_with_values(4,0,t8,t9,t10);}
else{
t2=((C_word*)t0)[5];
t3=(C_word)C_i_car(t2);
C_trace("ChickenBridge.scm: 364  error");
t4=*((C_word*)lf[6]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,((C_word*)t0)[7],lf[303],t3);}}

/* a16119 in k16092 in k16014 in k16011 in k15941 in k15853 in k15847 in k15724 in k15721 in k15718 in parser in k15271 in k15202 in k15009 in k15006 in k14901 in k14850 in k7607 in k7604 in k5838 in k5545 in k5542 in k5538 in k5247 in k5244 in k5241 in k5238 */
static void C_ccall f_16120(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4){
C_word tmp;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word *a;
if(c!=5) C_bad_argc_2(c,5,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr5,(void*)f_16120,5,t0,t1,t2,t3,t4);}
t5=C_mutate(((C_word *)((C_word*)t0)[4])+1,t2);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t3);
t7=C_mutate(((C_word *)((C_word*)t0)[2])+1,t4);
t8=t1;
((C_proc2)(void*)(*((C_word*)t8+1)))(2,t8,t7);}

/* a16113 in k16092 in k16014 in k16011 in k15941 in k15853 in k15847 in k15724 in k15721 in k15718 in parser in k15271 in k15202 in k15009 in k15006 in k14901 in k14850 in k7607 in k7604 in k5838 in k5545 in k5542 in k5538 in k5247 in k5244 in k5241 in k5238 */
static void C_ccall f_16114(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
if(c!=2) C_bad_argc_2(c,2,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_16114,2,t0,t1);}
C_trace("ChickenBridge.scm: 364  parser");
f_15716(t1,((C_word*)t0)[6],((C_word*)((C_word*)t0)[5])[1],C_SCHEME_TRUE,((C_word*)t0)[4],((C_word*)t0)[3],((C_word*)t0)[2]);}

/* k16101 in k16092 in k16014 in k16011 in k15941 in k15853 in k15847 in k15724 in k15721 in k15718 in parser in k15271 in k15202 in k15009 in k15006 in k14901 in k14850 in k7607 in k7604 in k5838 in k5545 in k5542 in k5538 in k5247 in k5244 in k5241 in k5238 */
static void C_ccall f_16103(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
if(C_truep(((C_word*)((C_word*)t0)[6])[1])){
C_trace("ChickenBridge.scm: 364  values");
C_values(5,0,((C_word*)t0)[5],((C_word*)((C_word*)t0)[6])[1],((C_word*)((C_word*)t0)[4])[1],((C_word*)((C_word*)t0)[3])[1]);}
else{
C_trace("ChickenBridge.scm: 364  values");
C_values(5,0,((C_word*)t0)[5],C_SCHEME_TRUE,C_SCHEME_FALSE,((C_word*)((C_word*)t0)[2])[1]);}}

/* do2250 in k16014 in k16011 in k15941 in k15853 in k15847 in k15724 in k15721 in k15718 in parser in k15271 in k15202 in k15009 in k15006 in k14901 in k14850 in k7607 in k7604 in k5838 in k5545 in k5542 in k5538 in k5247 in k5244 in k5241 in k5238 */
static void C_fcall f_16045(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[14],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_16045,NULL,2,t0,t1);}
t2=(C_word)C_i_not(((C_word*)((C_word*)t0)[12])[1]);
t3=(*a=C_CLOSURE_TYPE|13,a[1]=(C_word)f_16055,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],a[7]=((C_word*)t0)[7],a[8]=((C_word*)t0)[8],a[9]=((C_word*)t0)[9],a[10]=((C_word*)t0)[10],a[11]=((C_word*)t0)[12],a[12]=((C_word*)t0)[11],a[13]=t1,tmp=(C_word)a,a+=14,tmp);
if(C_truep(t2)){
t4=t3;
f_16055(2,t4,t2);}
else{
C_trace("ChickenBridge.scm: 364  null-tokens?");
f_14895(t3,((C_word*)((C_word*)t0)[8])[1]);}}

/* k16053 in do2250 in k16014 in k16011 in k15941 in k15853 in k15847 in k15724 in k15721 in k15718 in parser in k15271 in k15202 in k15009 in k15006 in k14901 in k14850 in k7607 in k7604 in k5838 in k5545 in k5542 in k5538 in k5247 in k5244 in k5241 in k5238 */
static void C_ccall f_16055(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[24],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_16055,2,t0,t1);}
if(C_truep(t1)){
t2=((C_word*)t0)[13];
((C_proc2)(void*)(*((C_word*)t2+1)))(2,t2,C_SCHEME_FALSE);}
else{
t2=(*a=C_CLOSURE_TYPE|9,a[1]=(C_word)f_16058,a[2]=((C_word*)t0)[6],a[3]=((C_word*)t0)[7],a[4]=((C_word*)t0)[8],a[5]=((C_word*)t0)[9],a[6]=((C_word*)t0)[10],a[7]=((C_word*)t0)[11],a[8]=((C_word*)t0)[13],a[9]=((C_word*)t0)[12],tmp=(C_word)a,a+=10,tmp);
t3=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_16075,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[8],a[6]=((C_word*)t0)[5],a[7]=((C_word)li228),tmp=(C_word)a,a+=8,tmp);
t4=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_16081,a[2]=((C_word*)t0)[8],a[3]=((C_word*)t0)[6],a[4]=((C_word*)t0)[11],a[5]=((C_word)li229),tmp=(C_word)a,a+=6,tmp);
C_trace("ChickenBridge.scm: 364  call-with-values");
C_call_with_values(4,0,t2,t3,t4);}}

/* a16080 in k16053 in do2250 in k16014 in k16011 in k15941 in k15853 in k15847 in k15724 in k15721 in k15718 in parser in k15271 in k15202 in k15009 in k15006 in k14901 in k14850 in k7607 in k7604 in k5838 in k5545 in k5542 in k5538 in k5247 in k5244 in k5241 in k5238 */
static void C_ccall f_16081(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4){
C_word tmp;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word *a;
if(c!=5) C_bad_argc_2(c,5,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr5,(void*)f_16081,5,t0,t1,t2,t3,t4);}
t5=C_mutate(((C_word *)((C_word*)t0)[4])+1,t2);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t3);
t7=C_mutate(((C_word *)((C_word*)t0)[2])+1,t4);
t8=t1;
((C_proc2)(void*)(*((C_word*)t8+1)))(2,t8,t7);}

/* a16074 in k16053 in do2250 in k16014 in k16011 in k15941 in k15853 in k15847 in k15724 in k15721 in k15718 in parser in k15271 in k15202 in k15009 in k15006 in k14901 in k14850 in k7607 in k7604 in k5838 in k5545 in k5542 in k5538 in k5247 in k5244 in k5241 in k5238 */
static void C_ccall f_16075(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
if(c!=2) C_bad_argc_2(c,2,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_16075,2,t0,t1);}
C_trace("ChickenBridge.scm: 364  parser");
f_15716(t1,((C_word*)t0)[6],((C_word*)((C_word*)t0)[5])[1],C_SCHEME_TRUE,((C_word*)t0)[4],((C_word*)t0)[3],((C_word*)t0)[2]);}

/* k16056 in k16053 in do2250 in k16014 in k16011 in k15941 in k15853 in k15847 in k15724 in k15721 in k15718 in parser in k15271 in k15202 in k15009 in k15006 in k14901 in k14850 in k7607 in k7604 in k5838 in k5545 in k5542 in k5538 in k5247 in k5244 in k5241 in k5238 */
static void C_ccall f_16058(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[11],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_16058,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_16061,a[2]=((C_word*)t0)[8],a[3]=((C_word*)t0)[9],tmp=(C_word)a,a+=4,tmp);
if(C_truep(((C_word*)((C_word*)t0)[7])[1])){
t3=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_16068,a[2]=t2,a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],tmp=(C_word)a,a+=7,tmp);
C_trace("ChickenBridge.scm: 364  append");
t4=*((C_word*)lf[20]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t3,((C_word*)((C_word*)t0)[6])[1],((C_word*)((C_word*)t0)[2])[1]);}
else{
t3=t2;
f_16061(t3,C_SCHEME_UNDEFINED);}}

/* k16066 in k16056 in k16053 in do2250 in k16014 in k16011 in k15941 in k15853 in k15847 in k15724 in k15721 in k15718 in parser in k15271 in k15202 in k15009 in k15006 in k14901 in k14850 in k7607 in k7604 in k5838 in k5545 in k5542 in k5538 in k5247 in k5244 in k5241 in k5238 */
static void C_ccall f_16068(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[4],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_16068,2,t0,t1);}
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_mutate(((C_word *)((C_word*)t0)[5])+1,((C_word*)((C_word*)t0)[4])[1]);
t4=(C_word)C_a_i_plus(&a,2,((C_word*)((C_word*)t0)[3])[1],C_fix(1));
t5=C_mutate(((C_word *)((C_word*)t0)[3])+1,t4);
t6=((C_word*)t0)[2];
f_16061(t6,t5);}

/* k16059 in k16056 in k16053 in do2250 in k16014 in k16011 in k15941 in k15853 in k15847 in k15724 in k15721 in k15718 in parser in k15271 in k15202 in k15009 in k15006 in k14901 in k14850 in k7607 in k7604 in k5838 in k5545 in k5542 in k5538 in k5247 in k5244 in k5241 in k5238 */
static void C_fcall f_16061(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
t2=((C_word*)((C_word*)t0)[3])[1];
f_16045(t2,((C_word*)t0)[2]);}

/* k16020 in k16014 in k16011 in k15941 in k15853 in k15847 in k15724 in k15721 in k15718 in parser in k15271 in k15202 in k15009 in k15006 in k14901 in k14850 in k7607 in k7604 in k5838 in k5545 in k5542 in k5538 in k5247 in k5244 in k5241 in k5238 */
static void C_ccall f_16022(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[12],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_16022,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_16025,a[2]=((C_word*)t0)[4],a[3]=((C_word*)t0)[5],a[4]=((C_word*)t0)[6],a[5]=((C_word*)t0)[7],tmp=(C_word)a,a+=6,tmp);
t3=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_16031,a[2]=((C_word*)t0)[5],a[3]=t2,a[4]=((C_word*)t0)[6],a[5]=((C_word*)t0)[3],tmp=(C_word)a,a+=6,tmp);
C_trace("ChickenBridge.scm: 364  pattern-zero-or-more?");
f_15123(t3,((C_word*)t0)[2]);}

/* k16029 in k16020 in k16014 in k16011 in k15941 in k15853 in k15847 in k15724 in k15721 in k15718 in parser in k15271 in k15202 in k15009 in k15006 in k14901 in k14850 in k7607 in k7604 in k5838 in k5545 in k5542 in k5538 in k5247 in k5244 in k5241 in k5238 */
static void C_ccall f_16031(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word *a;
t2=(C_truep(t1)?t1:(C_word)C_i_greaterp(((C_word*)((C_word*)t0)[5])[1],C_fix(0)));
if(C_truep(t2)){
t3=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t4=((C_word*)t0)[3];
f_16025(t4,t3);}
else{
t3=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_FALSE);
t4=C_set_block_item(((C_word*)t0)[2],0,C_SCHEME_END_OF_LIST);
t5=((C_word*)t0)[3];
f_16025(t5,t4);}}

/* k16023 in k16020 in k16014 in k16011 in k15941 in k15853 in k15847 in k15724 in k15721 in k15718 in parser in k15271 in k15202 in k15009 in k15006 in k14901 in k14850 in k7607 in k7604 in k5838 in k5545 in k5542 in k5538 in k5247 in k5244 in k5241 in k5238 */
static void C_fcall f_16025(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 364  values");
C_values(5,0,((C_word*)t0)[5],((C_word*)((C_word*)t0)[4])[1],((C_word*)((C_word*)t0)[3])[1],((C_word*)((C_word*)t0)[2])[1]);}

/* k15947 in k15941 in k15853 in k15847 in k15724 in k15721 in k15718 in parser in k15271 in k15202 in k15009 in k15006 in k14901 in k14850 in k7607 in k7604 in k5838 in k5545 in k5542 in k5538 in k5247 in k5244 in k5241 in k5238 */
static void C_ccall f_15949(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[22],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_15949,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_15952,a[2]=((C_word*)t0)[6],a[3]=((C_word*)t0)[7],a[4]=((C_word*)t0)[8],a[5]=((C_word*)t0)[9],a[6]=((C_word*)t0)[10],tmp=(C_word)a,a+=7,tmp);
t3=C_SCHEME_UNDEFINED;
t4=(*a=C_VECTOR_TYPE|1,a[1]=t3,tmp=(C_word)a,a+=2,tmp);
t5=C_set_block_item(t4,0,(*a=C_CLOSURE_TYPE|12,a[1]=(C_word)f_15967,a[2]=((C_word*)t0)[7],a[3]=((C_word*)t0)[8],a[4]=((C_word*)t0)[2],a[5]=((C_word*)t0)[3],a[6]=((C_word*)t0)[4],a[7]=((C_word*)t0)[6],a[8]=((C_word*)t0)[5],a[9]=t4,a[10]=t1,a[11]=((C_word*)t0)[10],a[12]=((C_word)li227),tmp=(C_word)a,a+=13,tmp));
t6=((C_word*)t4)[1];
f_15967(t6,t2,C_fix(0));}

/* do2230 in k15947 in k15941 in k15853 in k15847 in k15724 in k15721 in k15718 in parser in k15271 in k15202 in k15009 in k15006 in k14901 in k14850 in k7607 in k7604 in k5838 in k5545 in k5542 in k5538 in k5247 in k5244 in k5241 in k5238 */
static void C_fcall f_15967(C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word ab[20],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_15967,NULL,3,t0,t1,t2);}
t3=((C_word*)((C_word*)t0)[11])[1];
t4=(C_truep(t3)?t3:(C_word)C_i_nequalp(t2,((C_word*)t0)[10]));
if(C_truep(t4)){
t5=t1;
((C_proc2)(void*)(*((C_word*)t5+1)))(2,t5,C_SCHEME_FALSE);}
else{
t5=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_15977,a[2]=t1,a[3]=((C_word*)t0)[9],a[4]=t2,tmp=(C_word)a,a+=5,tmp);
t6=(*a=C_CLOSURE_TYPE|8,a[1]=(C_word)f_15986,a[2]=t2,a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],a[7]=((C_word*)t0)[8],a[8]=((C_word)li225),tmp=(C_word)a,a+=9,tmp);
t7=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_16000,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[11],a[5]=((C_word)li226),tmp=(C_word)a,a+=6,tmp);
C_trace("ChickenBridge.scm: 364  call-with-values");
C_call_with_values(4,0,t5,t6,t7);}}

/* a15999 in do2230 in k15947 in k15941 in k15853 in k15847 in k15724 in k15721 in k15718 in parser in k15271 in k15202 in k15009 in k15006 in k14901 in k14850 in k7607 in k7604 in k5838 in k5545 in k5542 in k5538 in k5247 in k5244 in k5241 in k5238 */
static void C_ccall f_16000(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4){
C_word tmp;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word *a;
if(c!=5) C_bad_argc_2(c,5,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr5,(void*)f_16000,5,t0,t1,t2,t3,t4);}
t5=C_mutate(((C_word *)((C_word*)t0)[4])+1,t2);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t3);
t7=C_mutate(((C_word *)((C_word*)t0)[2])+1,t4);
t8=t1;
((C_proc2)(void*)(*((C_word*)t8+1)))(2,t8,t7);}

/* a15985 in do2230 in k15947 in k15941 in k15853 in k15847 in k15724 in k15721 in k15718 in parser in k15271 in k15202 in k15009 in k15006 in k14901 in k14850 in k7607 in k7604 in k5838 in k5545 in k5542 in k5538 in k5247 in k5244 in k5241 in k5238 */
static void C_ccall f_15986(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[7],*a=ab;
if(c!=2) C_bad_argc_2(c,2,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_15986,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_15994,a[2]=((C_word*)t0)[4],a[3]=((C_word*)t0)[5],a[4]=((C_word*)t0)[6],a[5]=t1,a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
C_trace("ChickenBridge.scm: 364  pattern-sub");
f_15065(t2,((C_word*)t0)[3],((C_word*)t0)[2]);}

/* k15992 in a15985 in do2230 in k15947 in k15941 in k15853 in k15847 in k15724 in k15721 in k15718 in parser in k15271 in k15202 in k15009 in k15006 in k14901 in k14850 in k7607 in k7604 in k5838 in k5545 in k5542 in k5538 in k5247 in k5244 in k5241 in k5238 */
static void C_ccall f_15994(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[4],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_15994,2,t0,t1);}
t2=(C_word)C_a_i_plus(&a,2,((C_word*)t0)[6],C_fix(1));
C_trace("ChickenBridge.scm: 364  parser");
f_15716(((C_word*)t0)[5],t1,((C_word*)((C_word*)t0)[4])[1],C_SCHEME_FALSE,t2,((C_word*)t0)[3],((C_word*)t0)[2]);}

/* k15975 in do2230 in k15947 in k15941 in k15853 in k15847 in k15724 in k15721 in k15718 in parser in k15271 in k15202 in k15009 in k15006 in k14901 in k14850 in k7607 in k7604 in k5838 in k5545 in k5542 in k5538 in k5247 in k5244 in k5241 in k5238 */
static void C_ccall f_15977(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[4],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_15977,2,t0,t1);}
t2=(C_word)C_a_i_plus(&a,2,((C_word*)t0)[4],C_fix(1));
t3=((C_word*)((C_word*)t0)[3])[1];
f_15967(t3,((C_word*)t0)[2],t2);}

/* k15950 in k15947 in k15941 in k15853 in k15847 in k15724 in k15721 in k15718 in parser in k15271 in k15202 in k15009 in k15006 in k14901 in k14850 in k7607 in k7604 in k5838 in k5545 in k5542 in k5538 in k5247 in k5244 in k5241 in k5238 */
static void C_ccall f_15952(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
if(C_truep(((C_word*)((C_word*)t0)[6])[1])){
C_trace("ChickenBridge.scm: 364  values");
C_values(5,0,((C_word*)t0)[5],((C_word*)((C_word*)t0)[6])[1],((C_word*)((C_word*)t0)[4])[1],((C_word*)((C_word*)t0)[3])[1]);}
else{
C_trace("ChickenBridge.scm: 364  values");
C_values(5,0,((C_word*)t0)[5],C_SCHEME_FALSE,C_SCHEME_END_OF_LIST,((C_word*)((C_word*)t0)[2])[1]);}}

/* k15862 in k15853 in k15847 in k15724 in k15721 in k15718 in parser in k15271 in k15202 in k15009 in k15006 in k14901 in k14850 in k7607 in k7604 in k5838 in k5545 in k5542 in k5538 in k5247 in k5244 in k5241 in k5238 */
static void C_ccall f_15864(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word ab[26],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_15864,2,t0,t1);}
t2=C_SCHEME_FALSE;
t3=(*a=C_VECTOR_TYPE|1,a[1]=t2,tmp=(C_word)a,a+=2,tmp);
t4=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_15867,a[2]=((C_word*)t0)[7],a[3]=t3,a[4]=((C_word*)t0)[8],a[5]=((C_word*)t0)[9],a[6]=((C_word*)t0)[10],a[7]=((C_word*)t0)[11],tmp=(C_word)a,a+=8,tmp);
t5=C_SCHEME_UNDEFINED;
t6=(*a=C_VECTOR_TYPE|1,a[1]=t5,tmp=(C_word)a,a+=2,tmp);
t7=C_set_block_item(t6,0,(*a=C_CLOSURE_TYPE|13,a[1]=(C_word)f_15886,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[8],a[6]=((C_word*)t0)[5],a[7]=((C_word*)t0)[9],a[8]=((C_word*)t0)[6],a[9]=((C_word*)t0)[10],a[10]=t6,a[11]=t3,a[12]=t1,a[13]=((C_word)li224),tmp=(C_word)a,a+=14,tmp));
t8=((C_word*)t6)[1];
f_15886(t8,t4,C_fix(0));}

/* do2208 in k15862 in k15853 in k15847 in k15724 in k15721 in k15718 in parser in k15271 in k15202 in k15009 in k15006 in k14901 in k14850 in k7607 in k7604 in k5838 in k5545 in k5542 in k5538 in k5247 in k5244 in k5241 in k5238 */
static void C_fcall f_15886(C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word ab[24],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_15886,NULL,3,t0,t1,t2);}
t3=(C_word)C_i_nequalp(t2,((C_word*)t0)[12]);
t4=(C_truep(t3)?t3:((C_word*)((C_word*)t0)[11])[1]);
if(C_truep(t4)){
t5=t1;
((C_proc2)(void*)(*((C_word*)t5+1)))(2,t5,C_SCHEME_FALSE);}
else{
t5=(*a=C_CLOSURE_TYPE|8,a[1]=(C_word)f_15899,a[2]=((C_word*)t0)[11],a[3]=((C_word*)t0)[7],a[4]=((C_word*)t0)[8],a[5]=((C_word*)t0)[9],a[6]=t1,a[7]=((C_word*)t0)[10],a[8]=t2,tmp=(C_word)a,a+=9,tmp);
t6=(*a=C_CLOSURE_TYPE|8,a[1]=(C_word)f_15919,a[2]=t2,a[3]=((C_word*)t0)[2],a[4]=((C_word*)t0)[3],a[5]=((C_word*)t0)[4],a[6]=((C_word*)t0)[5],a[7]=((C_word*)t0)[6],a[8]=((C_word)li222),tmp=(C_word)a,a+=9,tmp);
t7=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_15933,a[2]=((C_word*)t0)[5],a[3]=((C_word*)t0)[8],a[4]=((C_word*)t0)[9],a[5]=((C_word)li223),tmp=(C_word)a,a+=6,tmp);
C_trace("ChickenBridge.scm: 364  call-with-values");
C_call_with_values(4,0,t5,t6,t7);}}

/* a15932 in do2208 in k15862 in k15853 in k15847 in k15724 in k15721 in k15718 in parser in k15271 in k15202 in k15009 in k15006 in k14901 in k14850 in k7607 in k7604 in k5838 in k5545 in k5542 in k5538 in k5247 in k5244 in k5241 in k5238 */
static void C_ccall f_15933(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4){
C_word tmp;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word *a;
if(c!=5) C_bad_argc_2(c,5,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr5,(void*)f_15933,5,t0,t1,t2,t3,t4);}
t5=C_mutate(((C_word *)((C_word*)t0)[4])+1,t2);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t3);
t7=C_mutate(((C_word *)((C_word*)t0)[2])+1,t4);
t8=t1;
((C_proc2)(void*)(*((C_word*)t8+1)))(2,t8,t7);}

/* a15918 in do2208 in k15862 in k15853 in k15847 in k15724 in k15721 in k15718 in parser in k15271 in k15202 in k15009 in k15006 in k14901 in k14850 in k7607 in k7604 in k5838 in k5545 in k5542 in k5538 in k5247 in k5244 in k5241 in k5238 */
static void C_ccall f_15919(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[7],*a=ab;
if(c!=2) C_bad_argc_2(c,2,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_15919,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_15927,a[2]=((C_word*)t0)[4],a[3]=((C_word*)t0)[5],a[4]=((C_word*)t0)[6],a[5]=t1,a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
C_trace("ChickenBridge.scm: 364  pattern-sub");
f_15065(t2,((C_word*)t0)[3],((C_word*)t0)[2]);}

/* k15925 in a15918 in do2208 in k15862 in k15853 in k15847 in k15724 in k15721 in k15718 in parser in k15271 in k15202 in k15009 in k15006 in k14901 in k14850 in k7607 in k7604 in k5838 in k5545 in k5542 in k5538 in k5247 in k5244 in k5241 in k5238 */
static void C_ccall f_15927(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[4],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_15927,2,t0,t1);}
t2=(C_word)C_a_i_plus(&a,2,((C_word*)t0)[6],C_fix(1));
C_trace("ChickenBridge.scm: 364  parser");
f_15716(((C_word*)t0)[5],t1,((C_word*)((C_word*)t0)[4])[1],C_SCHEME_FALSE,t2,((C_word*)t0)[3],((C_word*)t0)[2]);}

/* k15897 in do2208 in k15862 in k15853 in k15847 in k15724 in k15721 in k15718 in parser in k15271 in k15202 in k15009 in k15006 in k14901 in k14850 in k7607 in k7604 in k5838 in k5545 in k5542 in k5538 in k5247 in k5244 in k5241 in k5238 */
static void C_ccall f_15899(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word ab[8],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_15899,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_15902,a[2]=((C_word*)t0)[6],a[3]=((C_word*)t0)[7],a[4]=((C_word*)t0)[8],tmp=(C_word)a,a+=5,tmp);
t3=((C_word*)((C_word*)t0)[5])[1];
if(C_truep(t3)){
t4=(C_word)C_a_i_cons(&a,2,((C_word*)((C_word*)t0)[4])[1],((C_word*)((C_word*)t0)[3])[1]);
t5=C_mutate(((C_word *)((C_word*)t0)[3])+1,t4);
t6=t2;
f_15902(t6,t5);}
else{
t4=C_set_block_item(((C_word*)t0)[2],0,C_SCHEME_TRUE);
t5=t2;
f_15902(t5,t4);}}

/* k15900 in k15897 in do2208 in k15862 in k15853 in k15847 in k15724 in k15721 in k15718 in parser in k15271 in k15202 in k15009 in k15006 in k14901 in k14850 in k7607 in k7604 in k5838 in k5545 in k5542 in k5538 in k5247 in k5244 in k5241 in k5238 */
static void C_fcall f_15902(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[4],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_15902,NULL,2,t0,t1);}
t2=(C_word)C_a_i_plus(&a,2,((C_word*)t0)[4],C_fix(1));
t3=((C_word*)((C_word*)t0)[3])[1];
f_15886(t3,((C_word*)t0)[2],t2);}

/* k15865 in k15862 in k15853 in k15847 in k15724 in k15721 in k15718 in parser in k15271 in k15202 in k15009 in k15006 in k14901 in k14850 in k7607 in k7604 in k5838 in k5545 in k5542 in k5538 in k5247 in k5244 in k5241 in k5238 */
static void C_ccall f_15867(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word ab[10],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_15867,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_15870,a[2]=((C_word*)t0)[4],a[3]=((C_word*)t0)[5],a[4]=((C_word*)t0)[6],a[5]=((C_word*)t0)[7],tmp=(C_word)a,a+=6,tmp);
if(C_truep(((C_word*)((C_word*)t0)[3])[1])){
t3=C_set_block_item(((C_word*)t0)[6],0,C_SCHEME_FALSE);
t4=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_END_OF_LIST);
t5=C_mutate(((C_word *)((C_word*)t0)[4])+1,((C_word*)((C_word*)t0)[2])[1]);
t6=t2;
f_15870(t6,t5);}
else{
t3=C_set_block_item(((C_word*)t0)[6],0,C_SCHEME_TRUE);
t4=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_15884,a[2]=t2,a[3]=((C_word*)t0)[5],tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 364  reverse");
t5=*((C_word*)lf[232]+1);
((C_proc3)C_retrieve_proc(t5))(3,t5,t4,((C_word*)((C_word*)t0)[5])[1]);}}

/* k15882 in k15865 in k15862 in k15853 in k15847 in k15724 in k15721 in k15718 in parser in k15271 in k15202 in k15009 in k15006 in k14901 in k14850 in k7607 in k7604 in k5838 in k5545 in k5542 in k5538 in k5247 in k5244 in k5241 in k5238 */
static void C_ccall f_15884(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[3])+1,t1);
t3=((C_word*)t0)[2];
f_15870(t3,t2);}

/* k15868 in k15865 in k15862 in k15853 in k15847 in k15724 in k15721 in k15718 in parser in k15271 in k15202 in k15009 in k15006 in k14901 in k14850 in k7607 in k7604 in k5838 in k5545 in k5542 in k5538 in k5247 in k5244 in k5241 in k5238 */
static void C_fcall f_15870(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 364  values");
C_values(5,0,((C_word*)t0)[5],((C_word*)((C_word*)t0)[4])[1],((C_word*)((C_word*)t0)[3])[1],((C_word*)((C_word*)t0)[2])[1]);}

/* k15733 in k15724 in k15721 in k15718 in parser in k15271 in k15202 in k15009 in k15006 in k14901 in k14850 in k7607 in k7604 in k5838 in k5545 in k5542 in k5538 in k5247 in k5244 in k5241 in k5238 */
static void C_ccall f_15735(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[8],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_15735,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_15741,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=t1,a[6]=((C_word*)t0)[5],a[7]=((C_word*)t0)[6],tmp=(C_word)a,a+=8,tmp);
C_trace("ChickenBridge.scm: 364  SalTokenType?");
f_16335(t2,t1);}

/* k15739 in k15733 in k15724 in k15721 in k15718 in parser in k15271 in k15202 in k15009 in k15006 in k14901 in k14850 in k7607 in k7604 in k5838 in k5545 in k5542 in k5538 in k5247 in k5244 in k5241 in k5238 */
static void C_ccall f_15741(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[13],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_15741,2,t0,t1);}
if(C_truep(t1)){
t2=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_15747,a[2]=((C_word*)t0)[5],a[3]=((C_word*)t0)[6],a[4]=((C_word*)t0)[7],tmp=(C_word)a,a+=5,tmp);
C_trace("ChickenBridge.scm: 364  null-tokens?");
f_14895(t2,((C_word*)((C_word*)t0)[6])[1]);}
else{
t2=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_15799,a[2]=((C_word*)t0)[5],a[3]=((C_word*)t0)[7],a[4]=((C_word*)t0)[2],a[5]=((C_word*)t0)[3],a[6]=((C_word*)t0)[6],a[7]=((C_word*)t0)[4],tmp=(C_word)a,a+=8,tmp);
C_trace("ChickenBridge.scm: 364  SalRuleType?");
f_16485(t2,((C_word*)t0)[5]);}}

/* k15797 in k15739 in k15733 in k15724 in k15721 in k15718 in parser in k15271 in k15202 in k15009 in k15006 in k14901 in k14850 in k7607 in k7604 in k5838 in k5545 in k5542 in k5538 in k5247 in k5244 in k5241 in k5238 */
static void C_ccall f_15799(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_15799,2,t0,t1);}
if(C_truep(t1)){
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_15802,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
C_trace("ChickenBridge.scm: 364  get-rule");
f_15013(t2,((C_word*)t0)[2],C_SCHEME_END_OF_LIST);}
else{
C_trace("ChickenBridge.scm: 364  error");
t2=*((C_word*)lf[6]+1);
((C_proc4)C_retrieve_proc(t2))(4,t2,((C_word*)t0)[3],lf[302],((C_word*)t0)[2]);}}

/* k15800 in k15797 in k15739 in k15733 in k15724 in k15721 in k15718 in parser in k15271 in k15202 in k15009 in k15006 in k14901 in k14850 in k7607 in k7604 in k5838 in k5545 in k5542 in k5538 in k5247 in k5244 in k5241 in k5238 */
static void C_ccall f_15802(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word ab[13],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_15802,2,t0,t1);}
t2=t1;
t3=(C_word)C_i_check_structure(t2,lf[258]);
t4=(C_word)C_i_block_ref(t2,C_fix(3));
t5=t1;
t6=(C_word)C_i_check_structure(t5,lf[258]);
t7=(C_word)C_i_block_ref(t5,C_fix(4));
t8=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_15813,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=t4,a[6]=((C_word*)t0)[6],a[7]=((C_word)li220),tmp=(C_word)a,a+=8,tmp);
t9=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_15823,a[2]=((C_word*)t0)[3],a[3]=t7,a[4]=((C_word)li221),tmp=(C_word)a,a+=5,tmp);
C_trace("ChickenBridge.scm: 364  call-with-values");
C_call_with_values(4,0,((C_word*)t0)[2],t8,t9);}

/* a15822 in k15800 in k15797 in k15739 in k15733 in k15724 in k15721 in k15718 in parser in k15271 in k15202 in k15009 in k15006 in k14901 in k14850 in k7607 in k7604 in k5838 in k5545 in k5542 in k5538 in k5247 in k5244 in k5241 in k5238 */
static void C_ccall f_15823(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4){
C_word tmp;
C_word t5;
C_word t6;
C_word ab[5],*a=ab;
if(c!=5) C_bad_argc_2(c,5,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr5,(void*)f_15823,5,t0,t1,t2,t3,t4);}
if(C_truep(t2)){
t5=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_15834,a[2]=t4,a[3]=t2,a[4]=t1,tmp=(C_word)a,a+=5,tmp);
if(C_truep(((C_word*)t0)[3])){
C_trace("ChickenBridge.scm: 364  func");
t6=((C_word*)t0)[3];
((C_proc4)C_retrieve_proc(t6))(4,t6,t5,t3,((C_word*)t0)[2]);}
else{
t6=t5;
f_15834(2,t6,t3);}}
else{
C_trace("ChickenBridge.scm: 364  values");
C_values(5,0,t1,C_SCHEME_FALSE,C_SCHEME_FALSE,t4);}}

/* k15832 in a15822 in k15800 in k15797 in k15739 in k15733 in k15724 in k15721 in k15718 in parser in k15271 in k15202 in k15009 in k15006 in k14901 in k14850 in k7607 in k7604 in k5838 in k5545 in k5542 in k5538 in k5247 in k5244 in k5241 in k5238 */
static void C_ccall f_15834(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 364  values");
C_values(5,0,((C_word*)t0)[4],((C_word*)t0)[3],t1,((C_word*)t0)[2]);}

/* a15812 in k15800 in k15797 in k15739 in k15733 in k15724 in k15721 in k15718 in parser in k15271 in k15202 in k15009 in k15006 in k14901 in k14850 in k7607 in k7604 in k5838 in k5545 in k5542 in k5538 in k5247 in k5244 in k5241 in k5238 */
static void C_ccall f_15813(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[4],*a=ab;
if(c!=2) C_bad_argc_2(c,2,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_15813,2,t0,t1);}
t2=(C_word)C_a_i_plus(&a,2,((C_word*)t0)[6],C_fix(1));
C_trace("ChickenBridge.scm: 364  parser");
f_15716(t1,((C_word*)t0)[5],((C_word*)((C_word*)t0)[4])[1],C_SCHEME_FALSE,t2,((C_word*)t0)[3],((C_word*)t0)[2]);}

/* k15745 in k15739 in k15733 in k15724 in k15721 in k15718 in parser in k15271 in k15202 in k15009 in k15006 in k14901 in k14850 in k7607 in k7604 in k5838 in k5545 in k5542 in k5538 in k5247 in k5244 in k5241 in k5238 */
static void C_ccall f_15747(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[5],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_15747,2,t0,t1);}
if(C_truep(t1)){
C_trace("ChickenBridge.scm: 364  values");
C_values(5,0,((C_word*)t0)[4],C_SCHEME_FALSE,C_SCHEME_FALSE,C_SCHEME_END_OF_LIST);}
else{
t2=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_15757,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[3],tmp=(C_word)a,a+=5,tmp);
C_trace("ChickenBridge.scm: 364  first-token");
f_14883(t2,((C_word*)((C_word*)t0)[3])[1]);}}

/* k15755 in k15745 in k15739 in k15733 in k15724 in k15721 in k15718 in parser in k15271 in k15202 in k15009 in k15006 in k14901 in k14850 in k7607 in k7604 in k5838 in k5545 in k5542 in k5538 in k5247 in k5244 in k5241 in k5238 */
static void C_ccall f_15757(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_15757,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_15763,a[2]=t1,a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],tmp=(C_word)a,a+=5,tmp);
t3=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_15793,a[2]=((C_word*)t0)[2],a[3]=t2,tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 364  token-type");
f_14806(t3,t1);}

/* k15791 in k15755 in k15745 in k15739 in k15733 in k15724 in k15721 in k15718 in parser in k15271 in k15202 in k15009 in k15006 in k14901 in k14850 in k7607 in k7604 in k5838 in k5545 in k5542 in k5538 in k5247 in k5244 in k5241 in k5238 */
static void C_ccall f_15793(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 364  SalType=?");
f_16497(((C_word*)t0)[3],t1,((C_word*)t0)[2]);}

/* k15761 in k15755 in k15745 in k15739 in k15733 in k15724 in k15721 in k15718 in parser in k15271 in k15202 in k15009 in k15006 in k14901 in k14850 in k7607 in k7604 in k5838 in k5545 in k5542 in k5538 in k5247 in k5244 in k5241 in k5238 */
static void C_ccall f_15763(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[8],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_15763,2,t0,t1);}
if(C_truep(t1)){
t2=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_15770,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],tmp=(C_word)a,a+=4,tmp);
t3=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_15778,a[2]=((C_word*)t0)[2],a[3]=t2,tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 364  token-type");
f_14806(t3,((C_word*)t0)[2]);}
else{
C_trace("ChickenBridge.scm: 364  values");
C_values(5,0,((C_word*)t0)[3],C_SCHEME_FALSE,C_SCHEME_FALSE,((C_word*)((C_word*)t0)[4])[1]);}}

/* k15776 in k15761 in k15755 in k15745 in k15739 in k15733 in k15724 in k15721 in k15718 in parser in k15271 in k15202 in k15009 in k15006 in k14901 in k14850 in k7607 in k7604 in k5838 in k5545 in k5542 in k5538 in k5247 in k5244 in k5241 in k5238 */
static void C_ccall f_15778(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[5],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_15778,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_15782,a[2]=((C_word*)t0)[2],a[3]=t1,a[4]=((C_word*)t0)[3],tmp=(C_word)a,a+=5,tmp);
C_trace("ChickenBridge.scm: 364  token-string");
f_14824(t2,((C_word*)t0)[2]);}

/* k15780 in k15776 in k15761 in k15755 in k15745 in k15739 in k15733 in k15724 in k15721 in k15718 in parser in k15271 in k15202 in k15009 in k15006 in k14901 in k14850 in k7607 in k7604 in k5838 in k5545 in k5542 in k5538 in k5247 in k5244 in k5241 in k5238 */
static void C_ccall f_15782(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[5],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_15782,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_15786,a[2]=t1,a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],tmp=(C_word)a,a+=5,tmp);
C_trace("ChickenBridge.scm: 364  token-position");
f_14842(t2,((C_word*)t0)[2]);}

/* k15784 in k15780 in k15776 in k15761 in k15755 in k15745 in k15739 in k15733 in k15724 in k15721 in k15718 in parser in k15271 in k15202 in k15009 in k15006 in k14901 in k14850 in k7607 in k7604 in k5838 in k5545 in k5542 in k5538 in k5247 in k5244 in k5241 in k5238 */
static void C_ccall f_15786(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 364  make-parse-unit");
f_15206(((C_word*)t0)[4],((C_word*)t0)[3],((C_word*)t0)[2],t1);}

/* k15768 in k15761 in k15755 in k15745 in k15739 in k15733 in k15724 in k15721 in k15718 in parser in k15271 in k15202 in k15009 in k15006 in k14901 in k14850 in k7607 in k7604 in k5838 in k5545 in k5542 in k5538 in k5247 in k5244 in k5241 in k5238 */
static void C_ccall f_15770(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word *a;
t2=((C_word*)((C_word*)t0)[3])[1];
t3=(C_word)C_i_cdr(t2);
C_trace("ChickenBridge.scm: 364  values");
C_values(5,0,((C_word*)t0)[2],C_SCHEME_TRUE,t1,t3);}

/* simple-unit-emitter in k15271 in k15202 in k15009 in k15006 in k14901 in k14850 in k7607 in k7604 in k5838 in k5545 in k5542 in k5538 in k5247 in k5244 in k5241 in k5238 */
static void C_fcall f_15612(C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word ab[4],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_15612,NULL,2,t1,t2);}
t3=t1;
((C_proc2)(void*)(*((C_word*)t3+1)))(2,t3,(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_15614,a[2]=t2,a[3]=((C_word)li218),tmp=(C_word)a,a+=4,tmp));}

/* f_15614 in simple-unit-emitter in k15271 in k15202 in k15009 in k15006 in k14901 in k14850 in k7607 in k7604 in k5838 in k5545 in k5542 in k5538 in k5247 in k5244 in k5241 in k5238 */
static void C_ccall f_15614(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4){
C_word tmp;
C_word t5;
C_word t6;
C_word t7;
C_word ab[9],*a=ab;
if(c!=5) C_bad_argc_2(c,5,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr5,(void*)f_15614,5,t0,t1,t2,t3,t4);}
t5=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_15618,a[2]=((C_word*)t0)[2],a[3]=t1,a[4]=t4,a[5]=t3,tmp=(C_word)a,a+=6,tmp);
t6=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_15662,a[2]=t5,tmp=(C_word)a,a+=3,tmp);
C_trace("ChickenBridge.scm: 364  parse-unit-parsed");
f_15245(t6,t2);}

/* k15660 */
static void C_ccall f_15662(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 364  append");
t2=*((C_word*)lf[20]+1);
((C_proc4)C_retrieve_proc(t2))(4,t2,((C_word*)t0)[2],t1,C_SCHEME_END_OF_LIST);}

/* k15616 */
static void C_ccall f_15618(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_15618,2,t0,t1);}
t2=t1;
t3=(*a=C_VECTOR_TYPE|1,a[1]=t2,tmp=(C_word)a,a+=2,tmp);
t4=((C_word*)t3)[1];
t5=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_15621,a[2]=t3,a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=t4,tmp=(C_word)a,a+=7,tmp);
if(C_truep(((C_word*)t0)[2])){
t6=(C_word)C_i_set_car(((C_word*)t3)[1],((C_word*)t0)[2]);
t7=(C_word)C_i_cdr(((C_word*)t3)[1]);
t8=C_set_block_item(t3,0,t7);
t9=t5;
f_15621(t9,t8);}
else{
t6=t5;
f_15621(t6,C_SCHEME_UNDEFINED);}}

/* k15619 in k15616 */
static void C_fcall f_15621(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_15621,NULL,2,t0,t1);}
t2=C_SCHEME_UNDEFINED;
t3=(*a=C_VECTOR_TYPE|1,a[1]=t2,tmp=(C_word)a,a+=2,tmp);
t4=C_set_block_item(t3,0,(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_15626,a[2]=((C_word*)t0)[4],a[3]=((C_word*)t0)[5],a[4]=t3,a[5]=((C_word*)t0)[6],a[6]=((C_word)li217),tmp=(C_word)a,a+=7,tmp));
t5=((C_word*)t3)[1];
f_15626(t5,((C_word*)t0)[3],((C_word*)((C_word*)t0)[2])[1]);}

/* do2165 in k15619 in k15616 */
static void C_fcall f_15626(C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word t5;
C_word ab[5],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_15626,NULL,3,t0,t1,t2);}
if(C_truep((C_word)C_i_nullp(t2))){
t3=t1;
((C_proc2)(void*)(*((C_word*)t3+1)))(2,t3,((C_word*)t0)[5]);}
else{
t3=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_15647,a[2]=t1,a[3]=((C_word*)t0)[4],a[4]=t2,tmp=(C_word)a,a+=5,tmp);
t4=(C_word)C_i_car(t2);
C_trace("ChickenBridge.scm: 364  emit");
f_15363(t3,t4,((C_word*)t0)[3],((C_word*)t0)[2]);}}

/* k15645 in do2165 in k15619 in k15616 */
static void C_ccall f_15647(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word *a;
t2=(C_word)C_i_set_car(((C_word*)t0)[4],t1);
t3=(C_word)C_i_cdr(((C_word*)t0)[4]);
t4=((C_word*)((C_word*)t0)[3])[1];
f_15626(t4,((C_word*)t0)[2],t3);}

/* simple-unit-parser in k15271 in k15202 in k15009 in k15006 in k14901 in k14850 in k7607 in k7604 in k5838 in k5545 in k5542 in k5538 in k5247 in k5244 in k5241 in k5238 */
static void C_fcall f_15604(C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word ab[4],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_15604,NULL,2,t1,t2);}
t3=t1;
((C_proc2)(void*)(*((C_word*)t3+1)))(2,t3,(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_15606,a[2]=t2,a[3]=((C_word)li215),tmp=(C_word)a,a+=4,tmp));}

/* f_15606 in simple-unit-parser in k15271 in k15202 in k15009 in k15006 in k14901 in k14850 in k7607 in k7604 in k5838 in k5545 in k5542 in k5538 in k5247 in k5244 in k5241 in k5238 */
static void C_ccall f_15606(C_word c,C_word t0,C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word *a;
if(c!=4) C_bad_argc_2(c,4,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr4,(void*)f_15606,4,t0,t1,t2,t3);}
C_trace("ChickenBridge.scm: 364  make-parse-unit");
f_15206(t1,((C_word*)t0)[2],t2,C_SCHEME_FALSE);}

/* emit-list in k15271 in k15202 in k15009 in k15006 in k14901 in k14850 in k7607 in k7604 in k5838 in k5545 in k5542 in k5538 in k5247 in k5244 in k5241 in k5238 */
static void C_fcall f_15396(C_word t1,C_word t2,C_word t3,C_word t4){
C_word tmp;
C_word t5;
C_word t6;
C_word t7;
C_word ab[6],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_15396,NULL,4,t1,t2,t3,t4);}
if(C_truep((C_word)C_i_nullp(t2))){
t5=t1;
((C_proc2)(void*)(*((C_word*)t5+1)))(2,t5,C_SCHEME_END_OF_LIST);}
else{
t5=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_15413,a[2]=t4,a[3]=t3,a[4]=t2,a[5]=t1,tmp=(C_word)a,a+=6,tmp);
t6=(C_word)C_i_car(t2);
C_trace("ChickenBridge.scm: 364  emit");
f_15363(t5,t6,t3,t4);}}

/* k15411 in emit-list in k15271 in k15202 in k15009 in k15006 in k14901 in k14850 in k7607 in k7604 in k5838 in k5545 in k5542 in k5538 in k5247 in k5244 in k5241 in k5238 */
static void C_ccall f_15413(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[4],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_15413,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_15417,a[2]=t1,a[3]=((C_word*)t0)[5],tmp=(C_word)a,a+=4,tmp);
t3=(C_word)C_i_cdr(((C_word*)t0)[4]);
C_trace("ChickenBridge.scm: 364  emit-list");
f_15396(t2,t3,((C_word*)t0)[3],((C_word*)t0)[2]);}

/* k15415 in k15411 in emit-list in k15271 in k15202 in k15009 in k15006 in k14901 in k14850 in k7607 in k7604 in k5838 in k5545 in k5542 in k5538 in k5247 in k5244 in k5241 in k5238 */
static void C_ccall f_15417(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word ab[3],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_15417,2,t0,t1);}
t2=((C_word*)t0)[3];
((C_proc2)(void*)(*((C_word*)t2+1)))(2,t2,(C_word)C_a_i_cons(&a,2,((C_word*)t0)[2],t1));}

/* emit in k15271 in k15202 in k15009 in k15006 in k14901 in k14850 in k7607 in k7604 in k5838 in k5545 in k5542 in k5538 in k5247 in k5244 in k5241 in k5238 */
static void C_fcall f_15363(C_word t1,C_word t2,C_word t3,C_word t4){
C_word tmp;
C_word t5;
C_word t6;
C_word ab[6],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_15363,NULL,4,t1,t2,t3,t4);}
t5=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_15370,a[2]=t4,a[3]=t3,a[4]=t2,a[5]=t1,tmp=(C_word)a,a+=6,tmp);
C_trace("ChickenBridge.scm: 364  token-unit?");
f_15275(t5,t2);}

/* k15368 in emit in k15271 in k15202 in k15009 in k15006 in k14901 in k14850 in k7607 in k7604 in k5838 in k5545 in k5542 in k5538 in k5247 in k5244 in k5241 in k5238 */
static void C_ccall f_15370(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word ab[14],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_15370,2,t0,t1);}
if(C_truep(t1)){
t2=((C_word*)t0)[5];
t3=((C_word*)t0)[4];
t4=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_15441,a[2]=t3,a[3]=t2,tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 364  parse-unit-type");
f_15227(t4,t3);}
else{
t2=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_15379,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],tmp=(C_word)a,a+=6,tmp);
t3=((C_word*)t0)[4];
t4=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_15314,a[2]=t3,a[3]=t2,tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 364  parse-unit?");
f_15212(t4,t3);}}

/* k15312 in k15368 in emit in k15271 in k15202 in k15009 in k15006 in k14901 in k14850 in k7607 in k7604 in k5838 in k5545 in k5542 in k5538 in k5247 in k5244 in k5241 in k5238 */
static void C_ccall f_15314(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[3],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_15314,2,t0,t1);}
if(C_truep(t1)){
t2=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_15321,a[2]=((C_word*)t0)[3],tmp=(C_word)a,a+=3,tmp);
C_trace("ChickenBridge.scm: 364  parse-unit-type");
f_15227(t2,((C_word*)t0)[2]);}
else{
t2=((C_word*)t0)[3];
f_15379(2,t2,C_SCHEME_FALSE);}}

/* k15319 in k15312 in k15368 in emit in k15271 in k15202 in k15009 in k15006 in k14901 in k14850 in k7607 in k7604 in k5838 in k5545 in k5542 in k5538 in k5247 in k5244 in k5241 in k5238 */
static void C_ccall f_15321(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 364  SalRuleType?");
f_16485(((C_word*)t0)[2],t1);}

/* k15377 in k15368 in emit in k15271 in k15202 in k15009 in k15006 in k14901 in k14850 in k7607 in k7604 in k5838 in k5545 in k5542 in k5538 in k5247 in k5244 in k5241 in k5238 */
static void C_ccall f_15379(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_15379,2,t0,t1);}
if(C_truep(t1)){
t2=((C_word*)t0)[5];
t3=((C_word*)t0)[4];
t4=((C_word*)t0)[3];
t5=((C_word*)t0)[2];
t6=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_15579,a[2]=t5,a[3]=t4,a[4]=t3,a[5]=t2,tmp=(C_word)a,a+=6,tmp);
t7=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_15602,a[2]=t6,tmp=(C_word)a,a+=3,tmp);
C_trace("ChickenBridge.scm: 364  parse-unit-type");
f_15227(t7,t3);}
else{
if(C_truep((C_word)C_i_listp(((C_word*)t0)[4]))){
C_trace("ChickenBridge.scm: 364  emit-list");
f_15396(((C_word*)t0)[5],((C_word*)t0)[4],((C_word*)t0)[3],((C_word*)t0)[2]);}
else{
C_trace("ChickenBridge.scm: 364  error");
t2=*((C_word*)lf[6]+1);
((C_proc4)C_retrieve_proc(t2))(4,t2,((C_word*)t0)[5],lf[296],((C_word*)t0)[4]);}}}

/* k15600 in k15377 in k15368 in emit in k15271 in k15202 in k15009 in k15006 in k14901 in k14850 in k7607 in k7604 in k5838 in k5545 in k5542 in k5538 in k5247 in k5244 in k5241 in k5238 */
static void C_ccall f_15602(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 364  get-rule");
f_15013(((C_word*)t0)[2],t1,C_SCHEME_END_OF_LIST);}

/* k15577 in k15377 in k15368 in emit in k15271 in k15202 in k15009 in k15006 in k14901 in k14850 in k7607 in k7604 in k5838 in k5545 in k5542 in k5538 in k5247 in k5244 in k5241 in k5238 */
static void C_ccall f_15579(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[5],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_15579,2,t0,t1);}
t2=(C_word)C_i_check_structure(t1,lf[258]);
t3=(C_word)C_i_block_ref(t1,C_fix(5));
if(C_truep(t3)){
C_trace("ChickenBridge.scm: 364  meth");
t4=t3;
((C_proc5)C_retrieve_proc(t4))(5,t4,((C_word*)t0)[5],((C_word*)t0)[4],((C_word*)t0)[3],((C_word*)t0)[2]);}
else{
t4=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_15595,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[5],tmp=(C_word)a,a+=5,tmp);
C_trace("ChickenBridge.scm: 364  parse-unit-parsed");
f_15245(t4,((C_word*)t0)[4]);}}

/* k15593 in k15577 in k15377 in k15368 in emit in k15271 in k15202 in k15009 in k15006 in k14901 in k14850 in k7607 in k7604 in k5838 in k5545 in k5542 in k5538 in k5247 in k5244 in k5241 in k5238 */
static void C_ccall f_15595(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 364  emit");
f_15363(((C_word*)t0)[4],t1,((C_word*)t0)[3],((C_word*)t0)[2]);}

/* k15439 in k15368 in emit in k15271 in k15202 in k15009 in k15006 in k14901 in k14850 in k7607 in k7604 in k5838 in k5545 in k5542 in k5538 in k5247 in k5244 in k5241 in k5238 */
static void C_ccall f_15441(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[5],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_15441,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_15444,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=t1,tmp=(C_word)a,a+=5,tmp);
C_trace("ChickenBridge.scm: 364  parse-unit-parsed");
f_15245(t2,((C_word*)t0)[2]);}

/* k15442 in k15439 in k15368 in emit in k15271 in k15202 in k15009 in k15006 in k14901 in k14850 in k7607 in k7604 in k5838 in k5545 in k5542 in k5538 in k5247 in k5244 in k5241 in k5238 */
static void C_ccall f_15444(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word ab[6],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_15444,2,t0,t1);}
t2=((C_word*)t0)[4];
t3=(C_word)C_i_lessp(C_fix(2560),t2);
t4=(C_truep(t3)?(C_word)C_i_lessp(t2,C_fix(3584)):C_SCHEME_FALSE);
if(C_truep(t4)){
C_trace("ChickenBridge.scm: 364  string->number");
C_string_to_number(3,0,((C_word*)t0)[3],t1);}
else{
t5=((C_word*)t0)[4];
t6=(C_word)C_i_lessp(C_fix(13056),t5);
t7=(C_truep(t6)?(C_word)C_i_lessp(t5,C_fix(23808)):C_SCHEME_FALSE);
if(C_truep(t7)){
C_trace("ChickenBridge.scm: 364  string->symbol");
t8=*((C_word*)lf[286]+1);
((C_proc3)C_retrieve_proc(t8))(3,t8,((C_word*)t0)[3],t1);}
else{
t8=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_15468,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[4],a[4]=t1,a[5]=((C_word*)t0)[3],tmp=(C_word)a,a+=6,tmp);
C_trace("ChickenBridge.scm: 364  SalOpType?");
f_16383(t8,((C_word*)t0)[4]);}}}

/* k15466 in k15442 in k15439 in k15368 in emit in k15271 in k15202 in k15009 in k15006 in k14901 in k14850 in k7607 in k7604 in k5838 in k5545 in k5542 in k5538 in k5247 in k5244 in k5241 in k5238 */
static void C_ccall f_15468(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word ab[14],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_15468,2,t0,t1);}
if(C_truep(t1)){
t2=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_15474,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],tmp=(C_word)a,a+=5,tmp);
C_trace("ChickenBridge.scm: 364  SalType=?");
f_16497(t2,((C_word*)t0)[3],C_fix(7941));}
else{
t2=((C_word*)t0)[3];
t3=(C_word)C_i_lessp(C_fix(4096),t2);
t4=(C_truep(t3)?(C_word)C_i_lessp(t2,C_fix(4864)):C_SCHEME_FALSE);
if(C_truep(t4)){
t5=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_15519,a[2]=((C_word*)t0)[5],tmp=(C_word)a,a+=3,tmp);
C_trace("ChickenBridge.scm: 364  SalType=?");
f_16497(t5,((C_word*)t0)[3],C_fix(4352));}
else{
t5=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_15525,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[2],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],tmp=(C_word)a,a+=6,tmp);
C_trace("ChickenBridge.scm: 364  SalType=?");
f_16497(t5,((C_word*)t0)[3],C_fix(2304));}}}

/* k15523 in k15466 in k15442 in k15439 in k15368 in emit in k15271 in k15202 in k15009 in k15006 in k14901 in k14850 in k7607 in k7604 in k5838 in k5545 in k5542 in k5538 in k5247 in k5244 in k5241 in k5238 */
static void C_ccall f_15525(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[6],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_15525,2,t0,t1);}
if(C_truep(t1)){
t2=((C_word*)t0)[5];
((C_proc2)(void*)(*((C_word*)t2+1)))(2,t2,((C_word*)t0)[4]);}
else{
t2=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_15531,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],tmp=(C_word)a,a+=6,tmp);
C_trace("ChickenBridge.scm: 364  SalType=?");
f_16497(t2,((C_word*)t0)[2],C_fix(6144));}}

/* k15529 in k15523 in k15466 in k15442 in k15439 in k15368 in emit in k15271 in k15202 in k15009 in k15006 in k14901 in k14850 in k7607 in k7604 in k5838 in k5545 in k5542 in k5538 in k5247 in k5244 in k5241 in k5238 */
static void C_ccall f_15531(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[6],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_15531,2,t0,t1);}
if(C_truep(t1)){
C_trace("ChickenBridge.scm: 364  string->keyword");
t2=C_retrieve(lf[26]);
((C_proc3)C_retrieve_proc(t2))(3,t2,((C_word*)t0)[5],((C_word*)t0)[4]);}
else{
t2=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_15540,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],tmp=(C_word)a,a+=6,tmp);
C_trace("ChickenBridge.scm: 364  SalType=?");
f_16497(t2,((C_word*)t0)[2],C_fix(3840));}}

/* k15538 in k15529 in k15523 in k15466 in k15442 in k15439 in k15368 in emit in k15271 in k15202 in k15009 in k15006 in k14901 in k14850 in k7607 in k7604 in k5838 in k5545 in k5542 in k5538 in k5247 in k5244 in k5241 in k5238 */
static void C_ccall f_15540(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[6],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_15540,2,t0,t1);}
if(C_truep(t1)){
C_trace("ChickenBridge.scm: 364  string->keyword");
t2=C_retrieve(lf[26]);
((C_proc3)C_retrieve_proc(t2))(3,t2,((C_word*)t0)[5],((C_word*)t0)[4]);}
else{
t2=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_15549,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],tmp=(C_word)a,a+=6,tmp);
C_trace("ChickenBridge.scm: 364  SalType=?");
f_16497(t2,((C_word*)t0)[2],C_fix(6400));}}

/* k15547 in k15538 in k15529 in k15523 in k15466 in k15442 in k15439 in k15368 in emit in k15271 in k15202 in k15009 in k15006 in k14901 in k14850 in k7607 in k7604 in k5838 in k5545 in k5542 in k5538 in k5247 in k5244 in k5241 in k5238 */
static void C_ccall f_15549(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[6],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_15549,2,t0,t1);}
if(C_truep(t1)){
C_trace("ChickenBridge.scm: 364  string->symbol");
t2=*((C_word*)lf[286]+1);
((C_proc3)C_retrieve_proc(t2))(3,t2,((C_word*)t0)[5],((C_word*)t0)[4]);}
else{
t2=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_15558,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[3],a[5]=((C_word*)t0)[5],tmp=(C_word)a,a+=6,tmp);
C_trace("ChickenBridge.scm: 364  SalType=?");
f_16497(t2,((C_word*)t0)[2],C_fix(25344));}}

/* k15556 in k15547 in k15538 in k15529 in k15523 in k15466 in k15442 in k15439 in k15368 in emit in k15271 in k15202 in k15009 in k15006 in k14901 in k14850 in k7607 in k7604 in k5838 in k5545 in k5542 in k5538 in k5247 in k5244 in k5241 in k5238 */
static void C_ccall f_15558(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[5],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_15558,2,t0,t1);}
if(C_truep(t1)){
C_trace("ChickenBridge.scm: 364  error");
t2=*((C_word*)lf[6]+1);
((C_proc4)C_retrieve_proc(t2))(4,t2,((C_word*)t0)[5],lf[292],((C_word*)t0)[4]);}
else{
t2=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_15567,a[2]=((C_word*)t0)[4],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[5],tmp=(C_word)a,a+=5,tmp);
C_trace("ChickenBridge.scm: 364  SalType=?");
f_16497(t2,((C_word*)t0)[2],C_fix(25088));}}

/* k15565 in k15556 in k15547 in k15538 in k15529 in k15523 in k15466 in k15442 in k15439 in k15368 in emit in k15271 in k15202 in k15009 in k15006 in k14901 in k14850 in k7607 in k7604 in k5838 in k5545 in k5542 in k5538 in k5247 in k5244 in k5241 in k5238 */
static void C_ccall f_15567(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
if(C_truep(t1)){
C_trace("ChickenBridge.scm: 364  string->symbol");
t2=*((C_word*)lf[286]+1);
((C_proc3)C_retrieve_proc(t2))(3,t2,((C_word*)t0)[4],((C_word*)t0)[3]);}
else{
C_trace("ChickenBridge.scm: 364  error");
t2=*((C_word*)lf[6]+1);
((C_proc4)C_retrieve_proc(t2))(4,t2,((C_word*)t0)[4],lf[293],((C_word*)t0)[2]);}}

/* k15517 in k15466 in k15442 in k15439 in k15368 in emit in k15271 in k15202 in k15009 in k15006 in k14901 in k14850 in k7607 in k7604 in k5838 in k5545 in k5542 in k5538 in k5247 in k5244 in k5241 in k5238 */
static void C_ccall f_15519(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
t2=((C_word*)t0)[2];
((C_proc2)(void*)(*((C_word*)t2+1)))(2,t2,(C_truep(t1)?C_SCHEME_TRUE:C_SCHEME_FALSE));}

/* k15472 in k15466 in k15442 in k15439 in k15368 in emit in k15271 in k15202 in k15009 in k15006 in k14901 in k14850 in k7607 in k7604 in k5838 in k5545 in k5542 in k5538 in k5247 in k5244 in k5241 in k5238 */
static void C_ccall f_15474(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[5],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_15474,2,t0,t1);}
if(C_truep(t1)){
t2=((C_word*)t0)[4];
((C_proc2)(void*)(*((C_word*)t2+1)))(2,t2,lf[96]);}
else{
t2=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_15480,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],tmp=(C_word)a,a+=5,tmp);
C_trace("ChickenBridge.scm: 364  SalType=?");
f_16497(t2,((C_word*)t0)[2],C_fix(8199));}}

/* k15478 in k15472 in k15466 in k15442 in k15439 in k15368 in emit in k15271 in k15202 in k15009 in k15006 in k14901 in k14850 in k7607 in k7604 in k5838 in k5545 in k5542 in k5538 in k5247 in k5244 in k5241 in k5238 */
static void C_ccall f_15480(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[5],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_15480,2,t0,t1);}
if(C_truep(t1)){
t2=((C_word*)t0)[4];
((C_proc2)(void*)(*((C_word*)t2+1)))(2,t2,lf[287]);}
else{
t2=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_15486,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],tmp=(C_word)a,a+=5,tmp);
C_trace("ChickenBridge.scm: 364  SalType=?");
f_16497(t2,((C_word*)t0)[2],C_fix(10244));}}

/* k15484 in k15478 in k15472 in k15466 in k15442 in k15439 in k15368 in emit in k15271 in k15202 in k15009 in k15006 in k14901 in k14850 in k7607 in k7604 in k5838 in k5545 in k5542 in k5538 in k5247 in k5244 in k5241 in k5238 */
static void C_ccall f_15486(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[5],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_15486,2,t0,t1);}
if(C_truep(t1)){
t2=((C_word*)t0)[4];
((C_proc2)(void*)(*((C_word*)t2+1)))(2,t2,lf[288]);}
else{
t2=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_15492,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],tmp=(C_word)a,a+=5,tmp);
C_trace("ChickenBridge.scm: 364  SalType=?");
f_16497(t2,((C_word*)t0)[2],C_fix(8450));}}

/* k15490 in k15484 in k15478 in k15472 in k15466 in k15442 in k15439 in k15368 in emit in k15271 in k15202 in k15009 in k15006 in k14901 in k14850 in k7607 in k7604 in k5838 in k5545 in k5542 in k5538 in k5247 in k5244 in k5241 in k5238 */
static void C_ccall f_15492(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[5],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_15492,2,t0,t1);}
if(C_truep(t1)){
t2=((C_word*)t0)[4];
((C_proc2)(void*)(*((C_word*)t2+1)))(2,t2,lf[289]);}
else{
t2=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_15498,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],tmp=(C_word)a,a+=5,tmp);
C_trace("ChickenBridge.scm: 364  SalType=?");
f_16497(t2,((C_word*)t0)[2],C_fix(8705));}}

/* k15496 in k15490 in k15484 in k15478 in k15472 in k15466 in k15442 in k15439 in k15368 in emit in k15271 in k15202 in k15009 in k15006 in k14901 in k14850 in k7607 in k7604 in k5838 in k5545 in k5542 in k5538 in k5247 in k5244 in k5241 in k5238 */
static void C_ccall f_15498(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[4],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_15498,2,t0,t1);}
if(C_truep(t1)){
t2=((C_word*)t0)[4];
((C_proc2)(void*)(*((C_word*)t2+1)))(2,t2,lf[290]);}
else{
t2=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_15504,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 364  SalType=?");
f_16497(t2,((C_word*)t0)[2],C_fix(8963));}}

/* k15502 in k15496 in k15490 in k15484 in k15478 in k15472 in k15466 in k15442 in k15439 in k15368 in emit in k15271 in k15202 in k15009 in k15006 in k14901 in k14850 in k7607 in k7604 in k5838 in k5545 in k5542 in k5538 in k5247 in k5244 in k5241 in k5238 */
static void C_ccall f_15504(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
if(C_truep(t1)){
t2=((C_word*)t0)[3];
((C_proc2)(void*)(*((C_word*)t2+1)))(2,t2,lf[291]);}
else{
C_trace("ChickenBridge.scm: 364  string->symbol");
t2=*((C_word*)lf[286]+1);
((C_proc3)C_retrieve_proc(t2))(3,t2,((C_word*)t0)[3],((C_word*)t0)[2]);}}

/* set-emit-info! in k15271 in k15202 in k15009 in k15006 in k14901 in k14850 in k7607 in k7604 in k5838 in k5545 in k5542 in k5538 in k5247 in k5244 in k5241 in k5238 */
static void C_fcall f_15345(C_word t1,C_word t2,C_word t3,C_word t4){
C_word tmp;
C_word t5;
C_word t6;
C_word t7;
C_word ab[5],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_15345,NULL,4,t1,t2,t3,t4);}
t5=(C_word)C_i_assoc(t2,t4);
t6=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_15352,a[2]=t3,a[3]=t5,a[4]=t1,tmp=(C_word)a,a+=5,tmp);
if(C_truep(t5)){
t7=t6;
f_15352(2,t7,C_SCHEME_UNDEFINED);}
else{
C_trace("ChickenBridge.scm: 364  error");
t7=*((C_word*)lf[6]+1);
((C_proc4)C_retrieve_proc(t7))(4,t7,t6,lf[284],t2);}}

/* k15350 in set-emit-info! in k15271 in k15202 in k15009 in k15006 in k14901 in k14850 in k7607 in k7604 in k5838 in k5545 in k5542 in k5538 in k5247 in k5244 in k5241 in k5238 */
static void C_ccall f_15352(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
t2=((C_word*)t0)[4];
((C_proc2)(void*)(*((C_word*)t2+1)))(2,t2,(C_word)C_i_set_cdr(((C_word*)t0)[3],((C_word*)t0)[2]));}

/* add-emit-info in k15271 in k15202 in k15009 in k15006 in k14901 in k14850 in k7607 in k7604 in k5838 in k5545 in k5542 in k5538 in k5247 in k5244 in k5241 in k5238 */
static void C_fcall f_15335(C_word t1,C_word t2,C_word t3,C_word t4){
C_word tmp;
C_word t5;
C_word t6;
C_word ab[6],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_15335,NULL,4,t1,t2,t3,t4);}
t5=(C_word)C_a_i_cons(&a,2,t2,t3);
t6=t1;
((C_proc2)(void*)(*((C_word*)t6+1)))(2,t6,(C_word)C_a_i_cons(&a,2,t5,t4));}

/* get-emit-info in k15271 in k15202 in k15009 in k15006 in k14901 in k14850 in k7607 in k7604 in k5838 in k5545 in k5542 in k5538 in k5247 in k5244 in k5241 in k5238 */
static void C_fcall f_15323(C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word *a;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_15323,NULL,3,t1,t2,t3);}
t4=(C_word)C_i_assoc(t2,t3);
t5=t1;
((C_proc2)(void*)(*((C_word*)t5+1)))(2,t5,(C_truep(t4)?(C_word)C_i_cdr(t4):C_SCHEME_FALSE));}

/* token-unit-type=? in k15271 in k15202 in k15009 in k15006 in k14901 in k14850 in k7607 in k7604 in k5838 in k5545 in k5542 in k5538 in k5247 in k5244 in k5241 in k5238 */
static void C_fcall f_15291(C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word ab[5],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_15291,NULL,3,t1,t2,t3);}
t4=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_15298,a[2]=t2,a[3]=t3,a[4]=t1,tmp=(C_word)a,a+=5,tmp);
C_trace("ChickenBridge.scm: 364  token-unit?");
f_15275(t4,t2);}

/* k15296 in token-unit-type=? in k15271 in k15202 in k15009 in k15006 in k14901 in k14850 in k7607 in k7604 in k5838 in k5545 in k5542 in k5538 in k5247 in k5244 in k5241 in k5238 */
static void C_ccall f_15298(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[4],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_15298,2,t0,t1);}
if(C_truep(t1)){
t2=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_15305,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 364  parse-unit-type");
f_15227(t2,((C_word*)t0)[2]);}
else{
t2=((C_word*)t0)[4];
((C_proc2)(void*)(*((C_word*)t2+1)))(2,t2,C_SCHEME_FALSE);}}

/* k15303 in k15296 in token-unit-type=? in k15271 in k15202 in k15009 in k15006 in k14901 in k14850 in k7607 in k7604 in k5838 in k5545 in k5542 in k5538 in k5247 in k5244 in k5241 in k5238 */
static void C_ccall f_15305(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 364  SalType=?");
f_16497(((C_word*)t0)[3],t1,((C_word*)t0)[2]);}

/* token-unit? in k15271 in k15202 in k15009 in k15006 in k14901 in k14850 in k7607 in k7604 in k5838 in k5545 in k5542 in k5538 in k5247 in k5244 in k5241 in k5238 */
static void C_fcall f_15275(C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word ab[4],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_15275,NULL,2,t1,t2);}
t3=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_15282,a[2]=t2,a[3]=t1,tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 364  parse-unit?");
f_15212(t3,t2);}

/* k15280 in token-unit? in k15271 in k15202 in k15009 in k15006 in k14901 in k14850 in k7607 in k7604 in k5838 in k5545 in k5542 in k5538 in k5247 in k5244 in k5241 in k5238 */
static void C_ccall f_15282(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[3],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_15282,2,t0,t1);}
if(C_truep(t1)){
t2=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_15289,a[2]=((C_word*)t0)[3],tmp=(C_word)a,a+=3,tmp);
C_trace("ChickenBridge.scm: 364  parse-unit-type");
f_15227(t2,((C_word*)t0)[2]);}
else{
t2=((C_word*)t0)[3];
((C_proc2)(void*)(*((C_word*)t2+1)))(2,t2,C_SCHEME_FALSE);}}

/* k15287 in k15280 in token-unit? in k15271 in k15202 in k15009 in k15006 in k14901 in k14850 in k7607 in k7604 in k5838 in k5545 in k5542 in k5538 in k5247 in k5244 in k5241 in k5238 */
static void C_ccall f_15289(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 364  SalTokenType?");
f_16335(((C_word*)t0)[2],t1);}

/* parse-unit-position in k15202 in k15009 in k15006 in k14901 in k14850 in k7607 in k7604 in k5838 in k5545 in k5542 in k5538 in k5247 in k5244 in k5241 in k5238 */
static void C_fcall f_15263(C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word *a;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_15263,NULL,2,t1,t2);}
t3=(C_word)C_i_check_structure(t2,lf[272]);
t4=t1;
((C_proc2)(void*)(*((C_word*)t4+1)))(2,t4,(C_word)C_i_block_ref(t2,C_fix(3)));}

/* parse-unit-parsed in k15202 in k15009 in k15006 in k14901 in k14850 in k7607 in k7604 in k5838 in k5545 in k5542 in k5538 in k5247 in k5244 in k5241 in k5238 */
static void C_fcall f_15245(C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word *a;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_15245,NULL,2,t1,t2);}
t3=(C_word)C_i_check_structure(t2,lf[272]);
t4=t1;
((C_proc2)(void*)(*((C_word*)t4+1)))(2,t4,(C_word)C_i_block_ref(t2,C_fix(2)));}

/* parse-unit-type in k15202 in k15009 in k15006 in k14901 in k14850 in k7607 in k7604 in k5838 in k5545 in k5542 in k5538 in k5247 in k5244 in k5241 in k5238 */
static void C_fcall f_15227(C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word *a;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_15227,NULL,2,t1,t2);}
t3=(C_word)C_i_check_structure(t2,lf[272]);
t4=t1;
((C_proc2)(void*)(*((C_word*)t4+1)))(2,t4,(C_word)C_i_block_ref(t2,C_fix(1)));}

/* parse-unit? in k15202 in k15009 in k15006 in k14901 in k14850 in k7607 in k7604 in k5838 in k5545 in k5542 in k5538 in k5247 in k5244 in k5241 in k5238 */
static void C_fcall f_15212(C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word *a;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_15212,NULL,2,t1,t2);}
t3=t1;
((C_proc2)(void*)(*((C_word*)t3+1)))(2,t3,(C_word)C_i_structurep(t2,lf[272]));}

/* make-parse-unit in k15202 in k15009 in k15006 in k14901 in k14850 in k7607 in k7604 in k5838 in k5545 in k5542 in k5538 in k5247 in k5244 in k5241 in k5238 */
static void C_fcall f_15206(C_word t1,C_word t2,C_word t3,C_word t4){
C_word tmp;
C_word t5;
C_word ab[5],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_15206,NULL,4,t1,t2,t3,t4);}
t5=t1;
((C_proc2)(void*)(*((C_word*)t5+1)))(2,t5,(C_word)C_a_i_record(&a,4,lf[272],t2,t3,t4));}

/* parse-error-position in k15009 in k15006 in k14901 in k14850 in k7607 in k7604 in k5838 in k5545 in k5542 in k5538 in k5247 in k5244 in k5241 in k5238 */
static void C_fcall f_15194(C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word *a;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_15194,NULL,2,t1,t2);}
t3=(C_word)C_i_check_structure(t2,lf[268]);
t4=t1;
((C_proc2)(void*)(*((C_word*)t4+1)))(2,t4,(C_word)C_i_block_ref(t2,C_fix(2)));}

/* parse-error-string in k15009 in k15006 in k14901 in k14850 in k7607 in k7604 in k5838 in k5545 in k5542 in k5538 in k5247 in k5244 in k5241 in k5238 */
static void C_fcall f_15176(C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word *a;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_15176,NULL,2,t1,t2);}
t3=(C_word)C_i_check_structure(t2,lf[268]);
t4=t1;
((C_proc2)(void*)(*((C_word*)t4+1)))(2,t4,(C_word)C_i_block_ref(t2,C_fix(1)));}

/* make-parse-error in k15009 in k15006 in k14901 in k14850 in k7607 in k7604 in k5838 in k5545 in k5542 in k5538 in k5247 in k5244 in k5241 in k5238 */
static void C_fcall f_15155(C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word ab[4],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_15155,NULL,3,t1,t2,t3);}
t4=t1;
((C_proc2)(void*)(*((C_word*)t4+1)))(2,t4,(C_word)C_a_i_record(&a,3,lf[268],t2,t3));}

/* pattern-zero-or-more? in k15009 in k15006 in k14901 in k14850 in k7607 in k7604 in k5838 in k5545 in k5542 in k5538 in k5247 in k5244 in k5241 in k5238 */
static void C_fcall f_15123(C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word ab[4],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_15123,NULL,2,t1,t2);}
t3=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_15130,a[2]=t1,a[3]=t2,tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 364  pattern-clause?");
f_15037(t3,t2);}

/* k15128 in pattern-zero-or-more? in k15009 in k15006 in k14901 in k14850 in k7607 in k7604 in k5838 in k5545 in k5542 in k5538 in k5247 in k5244 in k5241 in k5238 */
static void C_ccall f_15130(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word *a;
if(C_truep(t1)){
t2=(C_word)C_i_car(((C_word*)t0)[3]);
t3=((C_word*)t0)[2];
((C_proc2)(void*)(*((C_word*)t3+1)))(2,t3,(C_word)C_eqp(t2,lf[226]));}
else{
t2=((C_word*)t0)[2];
((C_proc2)(void*)(*((C_word*)t2+1)))(2,t2,C_SCHEME_FALSE);}}

/* pattern-sub in k15009 in k15006 in k14901 in k14850 in k7607 in k7604 in k5838 in k5545 in k5542 in k5538 in k5247 in k5244 in k5241 in k5238 */
static void C_fcall f_15065(C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word ab[4],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_15065,NULL,3,t1,t2,t3);}
t4=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_15073,a[2]=t3,a[3]=t1,tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 364  pattern-subs");
f_15049(t4,t2);}

/* k15071 in pattern-sub in k15009 in k15006 in k14901 in k14850 in k7607 in k7604 in k5838 in k5545 in k5542 in k5538 in k5247 in k5244 in k5241 in k5238 */
static void C_ccall f_15073(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
t2=((C_word*)t0)[3];
((C_proc2)(void*)(*((C_word*)t2+1)))(2,t2,(C_word)C_i_list_ref(t1,((C_word*)t0)[2]));}

/* pattern-nsubs in k15009 in k15006 in k14901 in k14850 in k7607 in k7604 in k5838 in k5545 in k5542 in k5538 in k5247 in k5244 in k5241 in k5238 */
static void C_fcall f_15055(C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word ab[3],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_15055,NULL,2,t1,t2);}
t3=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_15063,a[2]=t1,tmp=(C_word)a,a+=3,tmp);
C_trace("ChickenBridge.scm: 364  pattern-subs");
f_15049(t3,t2);}

/* k15061 in pattern-nsubs in k15009 in k15006 in k14901 in k14850 in k7607 in k7604 in k5838 in k5545 in k5542 in k5538 in k5247 in k5244 in k5241 in k5238 */
static void C_ccall f_15063(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
t2=((C_word*)t0)[2];
((C_proc2)(void*)(*((C_word*)t2+1)))(2,t2,(C_word)C_i_length(t1));}

/* pattern-subs in k15009 in k15006 in k14901 in k14850 in k7607 in k7604 in k5838 in k5545 in k5542 in k5538 in k5247 in k5244 in k5241 in k5238 */
static void C_fcall f_15049(C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word *a;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_15049,NULL,2,t1,t2);}
t3=t1;
((C_proc2)(void*)(*((C_word*)t3+1)))(2,t3,(C_word)C_i_cdr(t2));}

/* pattern-clause? in k15009 in k15006 in k14901 in k14850 in k7607 in k7604 in k5838 in k5545 in k5542 in k5538 in k5247 in k5244 in k5241 in k5238 */
static void C_fcall f_15037(C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word *a;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_15037,NULL,2,t1,t2);}
t3=t1;
((C_proc2)(void*)(*((C_word*)t3+1)))(2,t3,(C_word)C_i_pairp(t2));}

/* pattern-value in k15009 in k15006 in k14901 in k14850 in k7607 in k7604 in k5838 in k5545 in k5542 in k5538 in k5247 in k5244 in k5241 in k5238 */
static void C_ccall f_15034(C_word c,C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word *a;
if(c!=3) C_bad_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr3,(void*)f_15034,3,t0,t1,t2);}
t3=t1;
((C_proc2)(void*)(*((C_word*)t3+1)))(2,t3,t2);}

/* get-rule in k15009 in k15006 in k14901 in k14850 in k7607 in k7604 in k5838 in k5545 in k5542 in k5538 in k5247 in k5244 in k5241 in k5238 */
static void C_fcall f_15013(C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word *a;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_15013,NULL,3,t1,t2,t3);}
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("ChickenBridge.scm: 364  hash-table-ref");
t4=*((C_word*)lf[43]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t1,C_retrieve2(lf[256],"*rules*"),t2);}
else{
C_trace("ChickenBridge.scm: 364  hash-table-ref/default");
t4=C_retrieve(lf[261]);
((C_proc4)C_retrieve_proc(t4))(4,t4,t1,C_retrieve2(lf[256],"*rules*"),t3);}}

/* rule-name in k14901 in k14850 in k7607 in k7604 in k5838 in k5545 in k5542 in k5538 in k5247 in k5244 in k5241 in k5238 */
static void C_fcall f_14926(C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word *a;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_14926,NULL,2,t1,t2);}
t3=(C_word)C_i_check_structure(t2,lf[258]);
t4=t1;
((C_proc2)(void*)(*((C_word*)t4+1)))(2,t4,(C_word)C_i_block_ref(t2,C_fix(1)));}

/* make-rule in k14901 in k14850 in k7607 in k7604 in k5838 in k5545 in k5542 in k5538 in k5247 in k5244 in k5241 in k5238 */
static void C_fcall f_14905(C_word t1,C_word t2,C_word t3,C_word t4,C_word t5,C_word t6){
C_word tmp;
C_word t7;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_14905,NULL,6,t1,t2,t3,t4,t5,t6);}
t7=t1;
((C_proc2)(void*)(*((C_word*)t7+1)))(2,t7,(C_word)C_a_i_record(&a,6,lf[258],t2,t3,t4,t5,t6));}

/* null-tokens? in k14850 in k7607 in k7604 in k5838 in k5545 in k5542 in k5538 in k5247 in k5244 in k5241 in k5238 */
static void C_fcall f_14895(C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word *a;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_14895,NULL,2,t1,t2);}
t3=t1;
((C_proc2)(void*)(*((C_word*)t3+1)))(2,t3,(C_word)C_i_nullp(t2));}

/* first-token in k14850 in k7607 in k7604 in k5838 in k5545 in k5542 in k5538 in k5247 in k5244 in k5241 in k5238 */
static void C_fcall f_14883(C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word *a;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_14883,NULL,2,t1,t2);}
t3=t1;
((C_proc2)(void*)(*((C_word*)t3+1)))(2,t3,(C_word)C_i_car(t2));}

/* list->token in k14850 in k7607 in k7604 in k5838 in k5545 in k5542 in k5538 in k5247 in k5244 in k5241 in k5238 */
static void C_ccall f_14854(C_word c,C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word *a;
if(c!=3) C_bad_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr3,(void*)f_14854,3,t0,t1,t2);}
t3=(C_word)C_i_car(t2);
t4=(C_word)C_eqp(t3,lf[253]);
if(C_truep(t4)){
t5=(C_word)C_i_cdr(t2);
C_apply(4,0,t1,C_retrieve2(lf[247],"make-token"),t5);}
else{
C_apply(4,0,t1,C_retrieve2(lf[247],"make-token"),t2);}}

/* token-position in k7607 in k7604 in k5838 in k5545 in k5542 in k5538 in k5247 in k5244 in k5241 in k5238 */
static void C_fcall f_14842(C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word *a;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_14842,NULL,2,t1,t2);}
t3=(C_word)C_i_check_structure(t2,lf[248]);
t4=t1;
((C_proc2)(void*)(*((C_word*)t4+1)))(2,t4,(C_word)C_i_block_ref(t2,C_fix(3)));}

/* token-string in k7607 in k7604 in k5838 in k5545 in k5542 in k5538 in k5247 in k5244 in k5241 in k5238 */
static void C_fcall f_14824(C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word *a;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_14824,NULL,2,t1,t2);}
t3=(C_word)C_i_check_structure(t2,lf[248]);
t4=t1;
((C_proc2)(void*)(*((C_word*)t4+1)))(2,t4,(C_word)C_i_block_ref(t2,C_fix(2)));}

/* token-type in k7607 in k7604 in k5838 in k5545 in k5542 in k5538 in k5247 in k5244 in k5241 in k5238 */
static void C_fcall f_14806(C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word *a;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_14806,NULL,2,t1,t2);}
t3=(C_word)C_i_check_structure(t2,lf[248]);
t4=t1;
((C_proc2)(void*)(*((C_word*)t4+1)))(2,t4,(C_word)C_i_block_ref(t2,C_fix(1)));}

/* make-token in k7607 in k7604 in k5838 in k5545 in k5542 in k5538 in k5247 in k5244 in k5241 in k5238 */
static void C_ccall f_14785(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4){
C_word tmp;
C_word t5;
C_word ab[5],*a=ab;
if(c!=5) C_bad_argc_2(c,5,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr5,(void*)f_14785,5,t0,t1,t2,t3,t4);}
t5=t1;
((C_proc2)(void*)(*((C_word*)t5+1)))(2,t5,(C_word)C_a_i_record(&a,4,lf[248],t2,t3,t4));}

/* next-in-graph in k7607 in k7604 in k5838 in k5545 in k5542 in k5538 in k5247 in k5244 in k5241 in k5238 */
static void C_ccall f_14691(C_word c,C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word ab[3],*a=ab;
if(c!=3) C_bad_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr3,(void*)f_14691,3,t0,t1,t2);}
t3=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_14695,a[2]=t1,tmp=(C_word)a,a+=3,tmp);
C_trace("ChickenBridge.scm: 363  pattern-data");
f_8286(t3,t2);}

/* k14693 in next-in-graph in k7607 in k7604 in k5838 in k5545 in k5542 in k5538 in k5247 in k5244 in k5241 in k5238 */
static void C_ccall f_14695(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word ab[5],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_14695,2,t0,t1);}
t2=(C_word)C_i_cdr(t1);
t3=(C_word)C_i_car(t1);
if(C_truep(t3)){
t4=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_14724,a[2]=t2,a[3]=((C_word*)t0)[2],a[4]=t1,tmp=(C_word)a,a+=5,tmp);
t5=(C_word)C_i_check_structure(t3,lf[239]);
t6=(C_word)C_i_block_ref(t3,C_fix(2));
C_trace("ChickenBridge.scm: 363  next-1");
f_8908(t4,t6);}
else{
t4=(C_word)C_i_car(t2);
t5=(C_word)C_i_set_car(t1,t4);
t6=(C_word)C_i_car(t2);
C_trace("ChickenBridge.scm: 363  graph-node-datum");
f_14110(((C_word*)t0)[2],t6);}}

/* k14722 in k14693 in next-in-graph in k7607 in k7604 in k5838 in k5545 in k5542 in k5538 in k5247 in k5244 in k5241 in k5238 */
static void C_ccall f_14724(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word ab[11],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_14724,2,t0,t1);}
t2=C_SCHEME_FALSE;
t3=(*a=C_VECTOR_TYPE|1,a[1]=t2,tmp=(C_word)a,a+=2,tmp);
t4=C_SCHEME_UNDEFINED;
t5=(*a=C_VECTOR_TYPE|1,a[1]=t4,tmp=(C_word)a,a+=2,tmp);
t6=C_set_block_item(t5,0,(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_14729,a[2]=t5,a[3]=t1,a[4]=((C_word*)t0)[4],a[5]=t3,a[6]=((C_word)li182),tmp=(C_word)a,a+=7,tmp));
t7=((C_word*)t5)[1];
f_14729(t7,((C_word*)t0)[3],((C_word*)t0)[2]);}

/* do1926 in k14722 in k14693 in next-in-graph in k7607 in k7604 in k5838 in k5545 in k5542 in k5538 in k5247 in k5244 in k5241 in k5238 */
static void C_fcall f_14729(C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word t14;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_14729,NULL,3,t0,t1,t2);}
t3=((C_word*)((C_word*)t0)[5])[1];
t4=(C_truep(t3)?t3:(C_word)C_i_nullp(t2));
if(C_truep(t4)){
t5=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_14739,a[2]=((C_word*)t0)[5],a[3]=t1,tmp=(C_word)a,a+=4,tmp);
t6=((C_word*)((C_word*)t0)[5])[1];
if(C_truep(t6)){
t7=t5;
f_14739(2,t7,(C_word)C_i_set_car(((C_word*)t0)[4],((C_word*)((C_word*)t0)[5])[1]));}
else{
C_trace("ChickenBridge.scm: 363  error");
t7=*((C_word*)lf[6]+1);
((C_proc4)C_retrieve_proc(t7))(4,t7,t5,lf[246],((C_word*)t0)[3]);}}
else{
t5=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_14754,a[2]=t1,a[3]=((C_word*)t0)[2],a[4]=t2,tmp=(C_word)a,a+=5,tmp);
t6=(C_word)C_i_car(t2);
t7=(C_word)C_i_check_structure(t6,lf[239]);
t8=(C_word)C_i_block_ref(t6,C_fix(3));
t9=(C_word)C_eqp(((C_word*)t0)[3],t8);
if(C_truep(t9)){
t10=(C_word)C_i_car(t2);
t11=C_mutate(((C_word *)((C_word*)t0)[5])+1,t10);
t12=t5;
f_14754(t12,t11);}
else{
t10=t5;
f_14754(t10,C_SCHEME_UNDEFINED);}}}

/* k14752 in do1926 in k14722 in k14693 in next-in-graph in k7607 in k7604 in k5838 in k5545 in k5542 in k5538 in k5247 in k5244 in k5241 in k5238 */
static void C_fcall f_14754(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word *a;
t2=(C_word)C_i_cdr(((C_word*)t0)[4]);
t3=((C_word*)((C_word*)t0)[3])[1];
f_14729(t3,((C_word*)t0)[2],t2);}

/* k14737 in do1926 in k14722 in k14693 in next-in-graph in k7607 in k7604 in k5838 in k5545 in k5542 in k5538 in k5247 in k5244 in k5241 in k5238 */
static void C_ccall f_14739(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 363  graph-node-datum");
f_14110(((C_word*)t0)[3],((C_word*)((C_word*)t0)[2])[1]);}

/* make-graph in k7607 in k7604 in k5838 in k5545 in k5542 in k5538 in k5247 in k5244 in k5241 in k5238 */
static void C_ccall f_14173(C_word c,C_word t0,C_word t1,C_word t2,...){
C_word tmp;
C_word t3;
va_list v;
C_word *a,c2=c;
C_save_rest(t2,c2,3);
if(c<3) C_bad_min_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_demand(c*C_SIZEOF_PAIR+17)){
C_save_and_reclaim((void*)tr3r,(void*)f_14173r,3,t0,t1,t2);}
else{
a=C_alloc((c-3)*3);
t3=C_restore_rest(a,C_rest_count(0));
f_14173r(t0,t1,t2,t3);}}

static void C_ccall f_14173r(C_word t0,C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word *a=C_alloc(17);
t4=(*a=C_VECTOR_TYPE|1,a[1]=t2,tmp=(C_word)a,a+=2,tmp);
t5=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_14177,a[2]=t1,a[3]=t4,a[4]=t3,tmp=(C_word)a,a+=5,tmp);
if(C_truep((C_word)C_i_pairp(((C_word*)t4)[1]))){
t6=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_14435,a[2]=t5,a[3]=t4,tmp=(C_word)a,a+=4,tmp);
t7=((C_word*)t4)[1];
t8=C_fix(1);
t9=(*a=C_VECTOR_TYPE|1,a[1]=t8,tmp=(C_word)a,a+=2,tmp);
t10=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_14444,a[2]=t9,a[3]=((C_word)li180),tmp=(C_word)a,a+=4,tmp);
C_trace("map");
t11=*((C_word*)lf[19]+1);
((C_proc4)(void*)(*((C_word*)t11+1)))(4,t11,t6,t10,t7);}
else{
C_trace("ChickenBridge.scm: 363  error");
t6=*((C_word*)lf[6]+1);
((C_proc4)C_retrieve_proc(t6))(4,t6,t5,lf[245],((C_word*)t4)[1]);}}

/* parse-graph-item in make-graph in k7607 in k7604 in k5838 in k5545 in k5542 in k5538 in k5247 in k5244 in k5241 in k5238 */
static void C_ccall f_14444(C_word c,C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word ab[5],*a=ab;
if(c!=3) C_bad_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr3,(void*)f_14444,3,t0,t1,t2);}
t3=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_14448,a[2]=t2,a[3]=t1,a[4]=((C_word*)t0)[2],tmp=(C_word)a,a+=5,tmp);
if(C_truep((C_word)C_i_pairp(t2))){
t4=t3;
f_14448(2,t4,C_SCHEME_UNDEFINED);}
else{
C_trace("ChickenBridge.scm: 363  error");
t4=*((C_word*)lf[6]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t3,lf[244],t2);}}

/* k14446 in parse-graph-item in make-graph in k7607 in k7604 in k5838 in k5545 in k5542 in k5538 in k5247 in k5244 in k5241 in k5238 */
static void C_ccall f_14448(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[4],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_14448,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_14453,a[2]=((C_word*)t0)[4],a[3]=((C_word)li179),tmp=(C_word)a,a+=4,tmp);
C_apply(4,0,((C_word*)t0)[3],t2,((C_word*)t0)[2]);}

/* a14452 in k14446 in parse-graph-item in make-graph in k7607 in k7604 in k5838 in k5545 in k5542 in k5538 in k5247 in k5244 in k5241 in k5238 */
static void C_ccall f_14453(C_word c,C_word t0,C_word t1,C_word t2,...){
C_word tmp;
C_word t3;
va_list v;
C_word *a,c2=c;
C_save_rest(t2,c2,3);
if(c<3) C_bad_min_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_demand(c*C_SIZEOF_PAIR+46)){
C_save_and_reclaim((void*)tr3r,(void*)f_14453r,3,t0,t1,t2);}
else{
a=C_alloc((c-3)*3);
t3=C_restore_rest(a,C_rest_count(0));
f_14453r(t0,t1,t2,t3);}}

static void C_ccall f_14453r(C_word t0,C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word t14;
C_word t15;
C_word t16;
C_word t17;
C_word t18;
C_word t19;
C_word t20;
C_word t21;
C_word t22;
C_word t23;
C_word *a=C_alloc(46);
t4=C_SCHEME_FALSE;
t5=(*a=C_VECTOR_TYPE|1,a[1]=t4,tmp=(C_word)a,a+=2,tmp);
t6=C_SCHEME_FALSE;
t7=(*a=C_VECTOR_TYPE|1,a[1]=t6,tmp=(C_word)a,a+=2,tmp);
t8=C_SCHEME_FALSE;
t9=(*a=C_VECTOR_TYPE|1,a[1]=t8,tmp=(C_word)a,a+=2,tmp);
t10=C_SCHEME_FALSE;
t11=(*a=C_VECTOR_TYPE|1,a[1]=t10,tmp=(C_word)a,a+=2,tmp);
t12=t3;
t13=(*a=C_VECTOR_TYPE|1,a[1]=t12,tmp=(C_word)a,a+=2,tmp);
t14=C_SCHEME_FALSE;
t15=(*a=C_VECTOR_TYPE|1,a[1]=t14,tmp=(C_word)a,a+=2,tmp);
t16=(*a=C_CLOSURE_TYPE|11,a[1]=(C_word)f_14457,a[2]=t11,a[3]=t15,a[4]=t9,a[5]=t3,a[6]=t13,a[7]=t7,a[8]=t5,a[9]=t2,a[10]=t1,a[11]=((C_word*)t0)[2],tmp=(C_word)a,a+=12,tmp);
if(C_truep((C_word)C_i_nullp(((C_word*)t13)[1]))){
t17=t16;
f_14457(t17,C_SCHEME_UNDEFINED);}
else{
t17=(C_word)C_i_car(((C_word*)t13)[1]);
t18=(C_word)C_eqp(t17,lf[242]);
if(C_truep(t18)){
t19=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_14595,a[2]=t3,a[3]=t16,a[4]=t13,a[5]=t15,a[6]=t9,a[7]=t5,tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)t9)[1])){
C_trace("error");
t20=*((C_word*)lf[6]+1);
((C_proc4)C_retrieve_proc(t20))(4,t20,t19,lf[21],lf[242]);}
else{
t20=t19;
f_14595(2,t20,C_SCHEME_UNDEFINED);}}
else{
t19=(C_word)C_eqp(t17,lf[243]);
if(C_truep(t19)){
t20=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_14630,a[2]=t3,a[3]=t16,a[4]=t13,a[5]=t15,a[6]=t11,a[7]=t7,tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)t11)[1])){
C_trace("error");
t21=*((C_word*)lf[6]+1);
((C_proc4)C_retrieve_proc(t21))(4,t21,t20,lf[21],lf[243]);}
else{
t21=t20;
f_14630(2,t21,C_SCHEME_UNDEFINED);}}
else{
t20=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_14659,a[2]=t16,a[3]=t9,a[4]=t5,a[5]=t13,tmp=(C_word)a,a+=6,tmp);
if(C_truep(((C_word*)t15)[1])){
C_trace("error");
t21=*((C_word*)lf[6]+1);
((C_proc4)C_retrieve_proc(t21))(4,t21,t20,lf[12],t3);}
else{
t21=t20;
f_14659(2,t21,C_SCHEME_UNDEFINED);}}}}}

/* k14657 in a14452 in k14446 in parse-graph-item in make-graph in k7607 in k7604 in k5838 in k5545 in k5542 in k5538 in k5247 in k5244 in k5241 in k5238 */
static void C_ccall f_14659(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_14659,2,t0,t1);}
t2=(C_word)C_i_car(((C_word*)((C_word*)t0)[5])[1]);
t3=C_mutate(((C_word *)((C_word*)t0)[4])+1,t2);
t4=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_14666,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[5],a[4]=((C_word*)t0)[3],tmp=(C_word)a,a+=5,tmp);
t5=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_14674,a[2]=((C_word*)t0)[4],a[3]=t4,tmp=(C_word)a,a+=4,tmp);
C_trace("keyword?");
t6=C_retrieve(lf[15]);
((C_proc3)C_retrieve_proc(t6))(3,t6,t5,((C_word*)((C_word*)t0)[4])[1]);}

/* k14672 in k14657 in a14452 in k14446 in parse-graph-item in make-graph in k7607 in k7604 in k5838 in k5545 in k5542 in k5538 in k5247 in k5244 in k5241 in k5238 */
static void C_ccall f_14674(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
if(C_truep(t1)){
C_trace("error");
t2=*((C_word*)lf[6]+1);
((C_proc4)C_retrieve_proc(t2))(4,t2,((C_word*)t0)[3],lf[16],((C_word*)((C_word*)t0)[2])[1]);}
else{
t2=((C_word*)t0)[3];
f_14666(2,t2,C_SCHEME_UNDEFINED);}}

/* k14664 in k14657 in a14452 in k14446 in parse-graph-item in make-graph in k7607 in k7604 in k5838 in k5545 in k5542 in k5538 in k5247 in k5244 in k5241 in k5238 */
static void C_ccall f_14666(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word *a;
t2=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[3])[1]);
t4=C_mutate(((C_word *)((C_word*)t0)[3])+1,t3);
t5=((C_word*)t0)[2];
f_14457(t5,t4);}

/* k14628 in a14452 in k14446 in parse-graph-item in make-graph in k7607 in k7604 in k5838 in k5545 in k5542 in k5538 in k5247 in k5244 in k5241 in k5238 */
static void C_ccall f_14630(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_14630,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_14634,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("error");
t4=*((C_word*)lf[6]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[23],((C_word*)t0)[2]);}
else{
t4=t2;
f_14634(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k14632 in k14628 in a14452 in k14446 in parse-graph-item in make-graph in k7607 in k7604 in k5838 in k5545 in k5542 in k5538 in k5247 in k5244 in k5241 in k5238 */
static void C_ccall f_14634(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_14457(t7,t6);}

/* k14593 in a14452 in k14446 in parse-graph-item in make-graph in k7607 in k7604 in k5838 in k5545 in k5542 in k5538 in k5247 in k5244 in k5241 in k5238 */
static void C_ccall f_14595(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_14595,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_14599,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("error");
t4=*((C_word*)lf[6]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[23],((C_word*)t0)[2]);}
else{
t4=t2;
f_14599(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k14597 in k14593 in a14452 in k14446 in parse-graph-item in make-graph in k7607 in k7604 in k5838 in k5545 in k5542 in k5538 in k5247 in k5244 in k5241 in k5238 */
static void C_ccall f_14599(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_14457(t7,t6);}

/* k14455 in a14452 in k14446 in parse-graph-item in make-graph in k7607 in k7604 in k5838 in k5545 in k5542 in k5538 in k5247 in k5244 in k5241 in k5238 */
static void C_fcall f_14457(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word ab[31],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_14457,NULL,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|8,a[1]=(C_word)f_14460,a[2]=((C_word*)t0)[5],a[3]=((C_word*)t0)[6],a[4]=((C_word*)t0)[7],a[5]=((C_word*)t0)[8],a[6]=((C_word*)t0)[9],a[7]=((C_word*)t0)[10],a[8]=((C_word*)t0)[11],tmp=(C_word)a,a+=9,tmp);
if(C_truep((C_word)C_i_nullp(((C_word*)((C_word*)t0)[6])[1]))){
t3=t2;
f_14460(t3,C_SCHEME_UNDEFINED);}
else{
t3=(C_word)C_i_car(((C_word*)((C_word*)t0)[6])[1]);
t4=(C_word)C_eqp(t3,lf[242]);
if(C_truep(t4)){
t5=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_14495,a[2]=((C_word*)t0)[5],a[3]=t2,a[4]=((C_word*)t0)[6],a[5]=((C_word*)t0)[3],a[6]=((C_word*)t0)[4],a[7]=((C_word*)t0)[8],tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)((C_word*)t0)[4])[1])){
C_trace("error");
t6=*((C_word*)lf[6]+1);
((C_proc4)C_retrieve_proc(t6))(4,t6,t5,lf[21],lf[242]);}
else{
t6=t5;
f_14495(2,t6,C_SCHEME_UNDEFINED);}}
else{
t5=(C_word)C_eqp(t3,lf[243]);
if(C_truep(t5)){
t6=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_14530,a[2]=((C_word*)t0)[5],a[3]=t2,a[4]=((C_word*)t0)[6],a[5]=((C_word*)t0)[3],a[6]=((C_word*)t0)[2],a[7]=((C_word*)t0)[7],tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)((C_word*)t0)[2])[1])){
C_trace("error");
t7=*((C_word*)lf[6]+1);
((C_proc4)C_retrieve_proc(t7))(4,t7,t6,lf[21],lf[243]);}
else{
t7=t6;
f_14530(2,t7,C_SCHEME_UNDEFINED);}}
else{
t6=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_14559,a[2]=t2,a[3]=((C_word*)t0)[2],a[4]=((C_word*)t0)[7],a[5]=((C_word*)t0)[6],tmp=(C_word)a,a+=6,tmp);
if(C_truep(((C_word*)((C_word*)t0)[3])[1])){
C_trace("error");
t7=*((C_word*)lf[6]+1);
((C_proc4)C_retrieve_proc(t7))(4,t7,t6,lf[12],((C_word*)t0)[5]);}
else{
t7=t6;
f_14559(2,t7,C_SCHEME_UNDEFINED);}}}}}

/* k14557 in k14455 in a14452 in k14446 in parse-graph-item in make-graph in k7607 in k7604 in k5838 in k5545 in k5542 in k5538 in k5247 in k5244 in k5241 in k5238 */
static void C_ccall f_14559(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_14559,2,t0,t1);}
t2=(C_word)C_i_car(((C_word*)((C_word*)t0)[5])[1]);
t3=C_mutate(((C_word *)((C_word*)t0)[4])+1,t2);
t4=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_14566,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[5],a[4]=((C_word*)t0)[3],tmp=(C_word)a,a+=5,tmp);
t5=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_14574,a[2]=((C_word*)t0)[4],a[3]=t4,tmp=(C_word)a,a+=4,tmp);
C_trace("keyword?");
t6=C_retrieve(lf[15]);
((C_proc3)C_retrieve_proc(t6))(3,t6,t5,((C_word*)((C_word*)t0)[4])[1]);}

/* k14572 in k14557 in k14455 in a14452 in k14446 in parse-graph-item in make-graph in k7607 in k7604 in k5838 in k5545 in k5542 in k5538 in k5247 in k5244 in k5241 in k5238 */
static void C_ccall f_14574(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
if(C_truep(t1)){
C_trace("error");
t2=*((C_word*)lf[6]+1);
((C_proc4)C_retrieve_proc(t2))(4,t2,((C_word*)t0)[3],lf[16],((C_word*)((C_word*)t0)[2])[1]);}
else{
t2=((C_word*)t0)[3];
f_14566(2,t2,C_SCHEME_UNDEFINED);}}

/* k14564 in k14557 in k14455 in a14452 in k14446 in parse-graph-item in make-graph in k7607 in k7604 in k5838 in k5545 in k5542 in k5538 in k5247 in k5244 in k5241 in k5238 */
static void C_ccall f_14566(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word *a;
t2=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[3])[1]);
t4=C_mutate(((C_word *)((C_word*)t0)[3])+1,t3);
t5=((C_word*)t0)[2];
f_14460(t5,t4);}

/* k14528 in k14455 in a14452 in k14446 in parse-graph-item in make-graph in k7607 in k7604 in k5838 in k5545 in k5542 in k5538 in k5247 in k5244 in k5241 in k5238 */
static void C_ccall f_14530(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_14530,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_14534,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("error");
t4=*((C_word*)lf[6]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[23],((C_word*)t0)[2]);}
else{
t4=t2;
f_14534(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k14532 in k14528 in k14455 in a14452 in k14446 in parse-graph-item in make-graph in k7607 in k7604 in k5838 in k5545 in k5542 in k5538 in k5247 in k5244 in k5241 in k5238 */
static void C_ccall f_14534(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_14460(t7,t6);}

/* k14493 in k14455 in a14452 in k14446 in parse-graph-item in make-graph in k7607 in k7604 in k5838 in k5545 in k5542 in k5538 in k5247 in k5244 in k5241 in k5238 */
static void C_ccall f_14495(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_14495,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_14499,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("error");
t4=*((C_word*)lf[6]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[23],((C_word*)t0)[2]);}
else{
t4=t2;
f_14499(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k14497 in k14493 in k14455 in a14452 in k14446 in parse-graph-item in make-graph in k7607 in k7604 in k5838 in k5545 in k5542 in k5538 in k5247 in k5244 in k5241 in k5238 */
static void C_ccall f_14499(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_14460(t7,t6);}

/* k14458 in k14455 in a14452 in k14446 in parse-graph-item in make-graph in k7607 in k7604 in k5838 in k5545 in k5542 in k5538 in k5247 in k5244 in k5241 in k5238 */
static void C_fcall f_14460(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_14460,NULL,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_14463,a[2]=((C_word*)t0)[4],a[3]=((C_word*)t0)[5],a[4]=((C_word*)t0)[6],a[5]=((C_word*)t0)[7],a[6]=((C_word*)t0)[8],tmp=(C_word)a,a+=7,tmp);
if(C_truep((C_word)C_i_nullp(((C_word*)((C_word*)t0)[3])[1]))){
t3=t2;
f_14463(2,t3,C_SCHEME_UNDEFINED);}
else{
C_trace("error");
t3=*((C_word*)lf[6]+1);
((C_proc4)C_retrieve_proc(t3))(4,t3,t2,lf[7],((C_word*)t0)[2]);}}

/* k14461 in k14458 in k14455 in a14452 in k14446 in parse-graph-item in make-graph in k7607 in k7604 in k5838 in k5545 in k5542 in k5538 in k5247 in k5244 in k5241 in k5238 */
static void C_ccall f_14463(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_14463,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_14466,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],tmp=(C_word)a,a+=7,tmp);
if(C_truep(((C_word*)((C_word*)t0)[2])[1])){
t3=t2;
f_14466(t3,C_SCHEME_UNDEFINED);}
else{
t3=C_mutate(((C_word *)((C_word*)t0)[2])+1,((C_word*)((C_word*)t0)[6])[1]);
t4=t2;
f_14466(t4,t3);}}

/* k14464 in k14461 in k14458 in k14455 in a14452 in k14446 in parse-graph-item in make-graph in k7607 in k7604 in k5838 in k5545 in k5542 in k5538 in k5247 in k5244 in k5241 in k5238 */
static void C_fcall f_14466(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_14466,NULL,2,t0,t1);}
t2=(C_word)C_a_i_plus(&a,2,((C_word*)((C_word*)t0)[6])[1],C_fix(1));
t3=C_mutate(((C_word *)((C_word*)t0)[6])+1,t2);
t4=((C_word*)t0)[5];
t5=((C_word*)t0)[4];
t6=((C_word*)((C_word*)t0)[3])[1];
t7=((C_word*)((C_word*)t0)[2])[1];
t8=t4;
((C_proc2)(void*)(*((C_word*)t8+1)))(2,t8,(C_word)C_a_i_record(&a,4,lf[239],t5,t6,t7));}

/* k14433 in make-graph in k7607 in k7604 in k5838 in k5545 in k5542 in k5538 in k5247 in k5244 in k5241 in k5238 */
static void C_ccall f_14435(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[3])+1,t1);
t3=((C_word*)t0)[2];
f_14177(2,t3,t2);}

/* k14175 in make-graph in k7607 in k7604 in k5838 in k5545 in k5542 in k5538 in k5247 in k5244 in k5241 in k5238 */
static void C_ccall f_14177(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word t14;
C_word t15;
C_word t16;
C_word t17;
C_word t18;
C_word t19;
C_word t20;
C_word t21;
C_word ab[45],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_14177,2,t0,t1);}
t2=C_SCHEME_FALSE;
t3=(*a=C_VECTOR_TYPE|1,a[1]=t2,tmp=(C_word)a,a+=2,tmp);
t4=C_SCHEME_FALSE;
t5=(*a=C_VECTOR_TYPE|1,a[1]=t4,tmp=(C_word)a,a+=2,tmp);
t6=C_SCHEME_FALSE;
t7=(*a=C_VECTOR_TYPE|1,a[1]=t6,tmp=(C_word)a,a+=2,tmp);
t8=C_SCHEME_FALSE;
t9=(*a=C_VECTOR_TYPE|1,a[1]=t8,tmp=(C_word)a,a+=2,tmp);
t10=((C_word*)t0)[4];
t11=(*a=C_VECTOR_TYPE|1,a[1]=t10,tmp=(C_word)a,a+=2,tmp);
t12=C_SCHEME_FALSE;
t13=(*a=C_VECTOR_TYPE|1,a[1]=t12,tmp=(C_word)a,a+=2,tmp);
t14=(*a=C_CLOSURE_TYPE|10,a[1]=(C_word)f_14180,a[2]=t9,a[3]=t13,a[4]=t7,a[5]=((C_word*)t0)[4],a[6]=t11,a[7]=t5,a[8]=t3,a[9]=((C_word*)t0)[2],a[10]=((C_word*)t0)[3],tmp=(C_word)a,a+=11,tmp);
if(C_truep((C_word)C_i_nullp(((C_word*)t11)[1]))){
t15=t14;
f_14180(t15,C_SCHEME_UNDEFINED);}
else{
t15=(C_word)C_i_car(((C_word*)t11)[1]);
t16=(C_word)C_eqp(t15,lf[191]);
if(C_truep(t16)){
t17=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_14340,a[2]=((C_word*)t0)[4],a[3]=t14,a[4]=t11,a[5]=t13,a[6]=t7,a[7]=t3,tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)t7)[1])){
C_trace("ChickenBridge.scm: 363  error");
t18=*((C_word*)lf[6]+1);
((C_proc4)C_retrieve_proc(t18))(4,t18,t17,lf[21],lf[191]);}
else{
t18=t17;
f_14340(2,t18,C_SCHEME_UNDEFINED);}}
else{
t17=(C_word)C_eqp(t15,lf[192]);
if(C_truep(t17)){
t18=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_14375,a[2]=((C_word*)t0)[4],a[3]=t14,a[4]=t11,a[5]=t13,a[6]=t9,a[7]=t5,tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)t9)[1])){
C_trace("ChickenBridge.scm: 363  error");
t19=*((C_word*)lf[6]+1);
((C_proc4)C_retrieve_proc(t19))(4,t19,t18,lf[21],lf[192]);}
else{
t19=t18;
f_14375(2,t19,C_SCHEME_UNDEFINED);}}
else{
t18=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_14404,a[2]=t14,a[3]=t7,a[4]=t3,a[5]=t11,tmp=(C_word)a,a+=6,tmp);
if(C_truep(((C_word*)t13)[1])){
C_trace("ChickenBridge.scm: 363  error");
t19=*((C_word*)lf[6]+1);
((C_proc4)C_retrieve_proc(t19))(4,t19,t18,lf[12],((C_word*)t0)[4]);}
else{
t19=t18;
f_14404(2,t19,C_SCHEME_UNDEFINED);}}}}}

/* k14402 in k14175 in make-graph in k7607 in k7604 in k5838 in k5545 in k5542 in k5538 in k5247 in k5244 in k5241 in k5238 */
static void C_ccall f_14404(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_14404,2,t0,t1);}
t2=(C_word)C_i_car(((C_word*)((C_word*)t0)[5])[1]);
t3=C_mutate(((C_word *)((C_word*)t0)[4])+1,t2);
t4=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_14411,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[5],a[4]=((C_word*)t0)[3],tmp=(C_word)a,a+=5,tmp);
t5=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_14419,a[2]=((C_word*)t0)[4],a[3]=t4,tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 363  keyword?");
t6=C_retrieve(lf[15]);
((C_proc3)C_retrieve_proc(t6))(3,t6,t5,((C_word*)((C_word*)t0)[4])[1]);}

/* k14417 in k14402 in k14175 in make-graph in k7607 in k7604 in k5838 in k5545 in k5542 in k5538 in k5247 in k5244 in k5241 in k5238 */
static void C_ccall f_14419(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
if(C_truep(t1)){
C_trace("ChickenBridge.scm: 363  error");
t2=*((C_word*)lf[6]+1);
((C_proc4)C_retrieve_proc(t2))(4,t2,((C_word*)t0)[3],lf[16],((C_word*)((C_word*)t0)[2])[1]);}
else{
t2=((C_word*)t0)[3];
f_14411(2,t2,C_SCHEME_UNDEFINED);}}

/* k14409 in k14402 in k14175 in make-graph in k7607 in k7604 in k5838 in k5545 in k5542 in k5538 in k5247 in k5244 in k5241 in k5238 */
static void C_ccall f_14411(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word *a;
t2=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[3])[1]);
t4=C_mutate(((C_word *)((C_word*)t0)[3])+1,t3);
t5=((C_word*)t0)[2];
f_14180(t5,t4);}

/* k14373 in k14175 in make-graph in k7607 in k7604 in k5838 in k5545 in k5542 in k5538 in k5247 in k5244 in k5241 in k5238 */
static void C_ccall f_14375(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_14375,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_14379,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("ChickenBridge.scm: 363  error");
t4=*((C_word*)lf[6]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[23],((C_word*)t0)[2]);}
else{
t4=t2;
f_14379(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k14377 in k14373 in k14175 in make-graph in k7607 in k7604 in k5838 in k5545 in k5542 in k5538 in k5247 in k5244 in k5241 in k5238 */
static void C_ccall f_14379(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_14180(t7,t6);}

/* k14338 in k14175 in make-graph in k7607 in k7604 in k5838 in k5545 in k5542 in k5538 in k5247 in k5244 in k5241 in k5238 */
static void C_ccall f_14340(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_14340,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_14344,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("ChickenBridge.scm: 363  error");
t4=*((C_word*)lf[6]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[23],((C_word*)t0)[2]);}
else{
t4=t2;
f_14344(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k14342 in k14338 in k14175 in make-graph in k7607 in k7604 in k5838 in k5545 in k5542 in k5538 in k5247 in k5244 in k5241 in k5238 */
static void C_ccall f_14344(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_14180(t7,t6);}

/* k14178 in k14175 in make-graph in k7607 in k7604 in k5838 in k5545 in k5542 in k5538 in k5247 in k5244 in k5241 in k5238 */
static void C_fcall f_14180(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word ab[30],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_14180,NULL,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_14183,a[2]=((C_word*)t0)[5],a[3]=((C_word*)t0)[6],a[4]=((C_word*)t0)[7],a[5]=((C_word*)t0)[8],a[6]=((C_word*)t0)[9],a[7]=((C_word*)t0)[10],tmp=(C_word)a,a+=8,tmp);
if(C_truep((C_word)C_i_nullp(((C_word*)((C_word*)t0)[6])[1]))){
t3=t2;
f_14183(t3,C_SCHEME_UNDEFINED);}
else{
t3=(C_word)C_i_car(((C_word*)((C_word*)t0)[6])[1]);
t4=(C_word)C_eqp(t3,lf[191]);
if(C_truep(t4)){
t5=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_14240,a[2]=((C_word*)t0)[5],a[3]=t2,a[4]=((C_word*)t0)[6],a[5]=((C_word*)t0)[3],a[6]=((C_word*)t0)[4],a[7]=((C_word*)t0)[8],tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)((C_word*)t0)[4])[1])){
C_trace("ChickenBridge.scm: 363  error");
t6=*((C_word*)lf[6]+1);
((C_proc4)C_retrieve_proc(t6))(4,t6,t5,lf[21],lf[191]);}
else{
t6=t5;
f_14240(2,t6,C_SCHEME_UNDEFINED);}}
else{
t5=(C_word)C_eqp(t3,lf[192]);
if(C_truep(t5)){
t6=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_14275,a[2]=((C_word*)t0)[5],a[3]=t2,a[4]=((C_word*)t0)[6],a[5]=((C_word*)t0)[3],a[6]=((C_word*)t0)[2],a[7]=((C_word*)t0)[7],tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)((C_word*)t0)[2])[1])){
C_trace("ChickenBridge.scm: 363  error");
t7=*((C_word*)lf[6]+1);
((C_proc4)C_retrieve_proc(t7))(4,t7,t6,lf[21],lf[192]);}
else{
t7=t6;
f_14275(2,t7,C_SCHEME_UNDEFINED);}}
else{
t6=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_14304,a[2]=t2,a[3]=((C_word*)t0)[2],a[4]=((C_word*)t0)[7],a[5]=((C_word*)t0)[6],tmp=(C_word)a,a+=6,tmp);
if(C_truep(((C_word*)((C_word*)t0)[3])[1])){
C_trace("ChickenBridge.scm: 363  error");
t7=*((C_word*)lf[6]+1);
((C_proc4)C_retrieve_proc(t7))(4,t7,t6,lf[12],((C_word*)t0)[5]);}
else{
t7=t6;
f_14304(2,t7,C_SCHEME_UNDEFINED);}}}}}

/* k14302 in k14178 in k14175 in make-graph in k7607 in k7604 in k5838 in k5545 in k5542 in k5538 in k5247 in k5244 in k5241 in k5238 */
static void C_ccall f_14304(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_14304,2,t0,t1);}
t2=(C_word)C_i_car(((C_word*)((C_word*)t0)[5])[1]);
t3=C_mutate(((C_word *)((C_word*)t0)[4])+1,t2);
t4=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_14311,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[5],a[4]=((C_word*)t0)[3],tmp=(C_word)a,a+=5,tmp);
t5=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_14319,a[2]=((C_word*)t0)[4],a[3]=t4,tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 363  keyword?");
t6=C_retrieve(lf[15]);
((C_proc3)C_retrieve_proc(t6))(3,t6,t5,((C_word*)((C_word*)t0)[4])[1]);}

/* k14317 in k14302 in k14178 in k14175 in make-graph in k7607 in k7604 in k5838 in k5545 in k5542 in k5538 in k5247 in k5244 in k5241 in k5238 */
static void C_ccall f_14319(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
if(C_truep(t1)){
C_trace("ChickenBridge.scm: 363  error");
t2=*((C_word*)lf[6]+1);
((C_proc4)C_retrieve_proc(t2))(4,t2,((C_word*)t0)[3],lf[16],((C_word*)((C_word*)t0)[2])[1]);}
else{
t2=((C_word*)t0)[3];
f_14311(2,t2,C_SCHEME_UNDEFINED);}}

/* k14309 in k14302 in k14178 in k14175 in make-graph in k7607 in k7604 in k5838 in k5545 in k5542 in k5538 in k5247 in k5244 in k5241 in k5238 */
static void C_ccall f_14311(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word *a;
t2=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[3])[1]);
t4=C_mutate(((C_word *)((C_word*)t0)[3])+1,t3);
t5=((C_word*)t0)[2];
f_14183(t5,t4);}

/* k14273 in k14178 in k14175 in make-graph in k7607 in k7604 in k5838 in k5545 in k5542 in k5538 in k5247 in k5244 in k5241 in k5238 */
static void C_ccall f_14275(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_14275,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_14279,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("ChickenBridge.scm: 363  error");
t4=*((C_word*)lf[6]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[23],((C_word*)t0)[2]);}
else{
t4=t2;
f_14279(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k14277 in k14273 in k14178 in k14175 in make-graph in k7607 in k7604 in k5838 in k5545 in k5542 in k5538 in k5247 in k5244 in k5241 in k5238 */
static void C_ccall f_14279(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_14183(t7,t6);}

/* k14238 in k14178 in k14175 in make-graph in k7607 in k7604 in k5838 in k5545 in k5542 in k5538 in k5247 in k5244 in k5241 in k5238 */
static void C_ccall f_14240(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_14240,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_14244,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("ChickenBridge.scm: 363  error");
t4=*((C_word*)lf[6]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[23],((C_word*)t0)[2]);}
else{
t4=t2;
f_14244(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k14242 in k14238 in k14178 in k14175 in make-graph in k7607 in k7604 in k5838 in k5545 in k5542 in k5538 in k5247 in k5244 in k5241 in k5238 */
static void C_ccall f_14244(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_14183(t7,t6);}

/* k14181 in k14178 in k14175 in make-graph in k7607 in k7604 in k5838 in k5545 in k5542 in k5538 in k5247 in k5244 in k5241 in k5238 */
static void C_fcall f_14183(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[6],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_14183,NULL,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_14186,a[2]=((C_word*)t0)[4],a[3]=((C_word*)t0)[5],a[4]=((C_word*)t0)[6],a[5]=((C_word*)t0)[7],tmp=(C_word)a,a+=6,tmp);
if(C_truep((C_word)C_i_nullp(((C_word*)((C_word*)t0)[3])[1]))){
t3=t2;
f_14186(2,t3,C_SCHEME_UNDEFINED);}
else{
C_trace("ChickenBridge.scm: 363  error");
t3=*((C_word*)lf[6]+1);
((C_proc4)C_retrieve_proc(t3))(4,t3,t2,lf[7],((C_word*)t0)[2]);}}

/* k14184 in k14181 in k14178 in k14175 in make-graph in k7607 in k7604 in k5838 in k5545 in k5542 in k5538 in k5247 in k5244 in k5241 in k5238 */
static void C_ccall f_14186(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[6],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_14186,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_14189,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],tmp=(C_word)a,a+=6,tmp);
C_trace("ChickenBridge.scm: 363  %alloc-pattern");
f_8557(t2);}

/* k14187 in k14184 in k14181 in k14178 in k14175 in make-graph in k7607 in k7604 in k5838 in k5545 in k5542 in k5538 in k5247 in k5244 in k5241 in k5238 */
static void C_ccall f_14189(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[10],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_14189,2,t0,t1);}
t2=(C_word)C_i_length(((C_word*)((C_word*)t0)[5])[1]);
t3=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_14195,a[2]=t1,a[3]=((C_word*)t0)[4],tmp=(C_word)a,a+=4,tmp);
t4=(C_word)C_a_i_cons(&a,2,C_SCHEME_FALSE,((C_word*)((C_word*)t0)[5])[1]);
t5=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_14201,a[2]=((C_word)li178),tmp=(C_word)a,a+=3,tmp);
C_trace("ChickenBridge.scm: 363  initialize-pattern");
f_8567(t3,t1,t4,((C_word*)((C_word*)t0)[3])[1],((C_word*)((C_word*)t0)[2])[1],C_fix(0),t2,t2,C_retrieve2(lf[241],"next-in-graph"),t5);}

/* a14200 in k14187 in k14184 in k14181 in k14178 in k14175 in make-graph in k7607 in k7604 in k5838 in k5545 in k5542 in k5538 in k5247 in k5244 in k5241 in k5238 */
static void C_ccall f_14201(C_word c,C_word t0,C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word t6;
C_word ab[7],*a=ab;
if(c!=4) C_bad_argc_2(c,4,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr4,(void*)f_14201,4,t0,t1,t2,t3);}
t4=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_14207,a[2]=((C_word)li177),tmp=(C_word)a,a+=3,tmp);
t5=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_14219,a[2]=t4,a[3]=t1,tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 363  pattern-data");
f_8286(t5,t3);}

/* k14217 in a14200 in k14187 in k14184 in k14181 in k14178 in k14175 in make-graph in k7607 in k7604 in k5838 in k5545 in k5542 in k5538 in k5247 in k5244 in k5241 in k5238 */
static void C_ccall f_14219(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word *a;
t2=(C_word)C_i_cdr(t1);
C_trace("for-each");
t3=*((C_word*)lf[189]+1);
((C_proc4)(void*)(*((C_word*)t3+1)))(4,t3,((C_word*)t0)[3],((C_word*)t0)[2],t2);}

/* a14206 in a14200 in k14187 in k14184 in k14181 in k14178 in k14175 in make-graph in k7607 in k7604 in k5838 in k5545 in k5542 in k5538 in k5247 in k5244 in k5241 in k5238 */
static void C_ccall f_14207(C_word c,C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word *a;
if(c!=3) C_bad_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr3,(void*)f_14207,3,t0,t1,t2);}
C_trace("ChickenBridge.scm: 363  graph-node-datum");
f_14110(t1,t2);}

/* k14193 in k14187 in k14184 in k14181 in k14178 in k14175 in make-graph in k7607 in k7604 in k5838 in k5545 in k5542 in k5538 in k5247 in k5244 in k5241 in k5238 */
static void C_ccall f_14195(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
t2=((C_word*)t0)[3];
((C_proc2)(void*)(*((C_word*)t2+1)))(2,t2,((C_word*)t0)[2]);}

/* graph-node-datum in k7607 in k7604 in k5838 in k5545 in k5542 in k5538 in k5247 in k5244 in k5241 in k5238 */
static void C_fcall f_14110(C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word *a;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_14110,NULL,2,t1,t2);}
t3=(C_word)C_i_check_structure(t2,lf[239]);
t4=t1;
((C_proc2)(void*)(*((C_word*)t4+1)))(2,t4,(C_word)C_i_block_ref(t2,C_fix(1)));}

/* next-in-markov in k7607 in k7604 in k5838 in k5545 in k5542 in k5538 in k5247 in k5244 in k5241 in k5238 */
static void C_ccall f_13770(C_word c,C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word ab[11],*a=ab;
if(c!=3) C_bad_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr3,(void*)f_13770,3,t0,t1,t2);}
t3=C_SCHEME_UNDEFINED;
t4=(*a=C_VECTOR_TYPE|1,a[1]=t3,tmp=(C_word)a,a+=2,tmp);
t5=C_set_block_item(t4,0,(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_13773,a[2]=t4,a[3]=((C_word)li171),tmp=(C_word)a,a+=4,tmp));
t6=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_13952,a[2]=t1,a[3]=t4,a[4]=t2,tmp=(C_word)a,a+=5,tmp);
C_trace("ChickenBridge.scm: 363  pattern-data");
f_8286(t6,t2);}

/* k13950 in next-in-markov in k7607 in k7604 in k5838 in k5545 in k5542 in k5538 in k5247 in k5244 in k5241 in k5238 */
static void C_ccall f_13952(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[6],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_13952,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_13956,a[2]=t1,a[3]=((C_word*)t0)[2],a[4]=((C_word*)t0)[3],a[5]=((C_word*)t0)[4],tmp=(C_word)a,a+=6,tmp);
C_trace("ChickenBridge.scm: 363  pattern-cache");
f_8502(t2,((C_word*)t0)[4]);}

/* k13954 in k13950 in next-in-markov in k7607 in k7604 in k5838 in k5545 in k5542 in k5538 in k5247 in k5244 in k5241 in k5238 */
static void C_ccall f_13956(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[8],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_13956,2,t0,t1);}
t2=C_SCHEME_UNDEFINED;
t3=(*a=C_VECTOR_TYPE|1,a[1]=t2,tmp=(C_word)a,a+=2,tmp);
t4=C_set_block_item(t3,0,(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_13958,a[2]=t3,a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word)li174),tmp=(C_word)a,a+=6,tmp));
t5=((C_word*)t3)[1];
f_13958(t5,((C_word*)t0)[3],((C_word*)t0)[2],t1,C_SCHEME_FALSE);}

/* do1767 in k13954 in k13950 in next-in-markov in k7607 in k7604 in k5838 in k5545 in k5542 in k5538 in k5247 in k5244 in k5241 in k5238 */
static void C_fcall f_13958(C_word t0,C_word t1,C_word t2,C_word t3,C_word t4){
C_word tmp;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word t14;
C_word t15;
C_word ab[17],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_13958,NULL,5,t0,t1,t2,t3,t4);}
t5=(*a=C_VECTOR_TYPE|1,a[1]=t4,tmp=(C_word)a,a+=2,tmp);
t6=(C_word)C_i_nullp(t2);
t7=(*a=C_CLOSURE_TYPE|8,a[1]=(C_word)f_13968,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=t2,a[5]=((C_word*)t0)[4],a[6]=t3,a[7]=t1,a[8]=t5,tmp=(C_word)a,a+=9,tmp);
if(C_truep(t6)){
t8=t7;
f_13968(2,t8,t6);}
else{
t8=(C_word)C_i_nullp(t3);
if(C_truep(t8)){
t9=t7;
f_13968(2,t9,t8);}
else{
t9=(C_word)C_i_car(t2);
t10=(C_word)C_i_car(t9);
t11=t3;
t12=C_SCHEME_UNDEFINED;
t13=(*a=C_VECTOR_TYPE|1,a[1]=t12,tmp=(C_word)a,a+=2,tmp);
t14=C_set_block_item(t13,0,(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_13883,a[2]=t13,a[3]=((C_word)li173),tmp=(C_word)a,a+=4,tmp));
t15=((C_word*)t13)[1];
f_13883(t15,t7,t10,t11,C_SCHEME_TRUE);}}}

/* do1752 in do1767 in k13954 in k13950 in next-in-markov in k7607 in k7604 in k5838 in k5545 in k5542 in k5538 in k5247 in k5244 in k5241 in k5238 */
static void C_fcall f_13883(C_word t0,C_word t1,C_word t2,C_word t3,C_word t4){
C_word tmp;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_13883,NULL,5,t0,t1,t2,t3,t4);}
t5=(*a=C_VECTOR_TYPE|1,a[1]=t4,tmp=(C_word)a,a+=2,tmp);
t6=(C_word)C_i_nullp(t2);
t7=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_13893,a[2]=((C_word*)t0)[2],a[3]=t3,a[4]=t2,a[5]=t5,a[6]=t1,tmp=(C_word)a,a+=7,tmp);
if(C_truep(t6)){
t8=t7;
f_13893(t8,t6);}
else{
t8=(C_word)C_i_nullp(t3);
t9=t7;
f_13893(t9,(C_truep(t8)?t8:(C_word)C_i_not(((C_word*)t5)[1])));}}

/* k13891 in do1752 in do1767 in k13954 in k13950 in next-in-markov in k7607 in k7604 in k5838 in k5545 in k5542 in k5538 in k5247 in k5244 in k5241 in k5238 */
static void C_fcall f_13893(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_13893,NULL,2,t0,t1);}
if(C_truep(t1)){
t2=((C_word*)t0)[6];
((C_proc2)(void*)(*((C_word*)t2+1)))(2,t2,((C_word*)((C_word*)t0)[5])[1]);}
else{
t2=(C_word)C_i_car(((C_word*)t0)[4]);
t3=(C_word)C_eqp(t2,lf[226]);
t4=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_13900,a[2]=((C_word*)t0)[6],a[3]=((C_word*)t0)[2],a[4]=((C_word*)t0)[3],a[5]=((C_word*)t0)[4],a[6]=((C_word*)t0)[5],tmp=(C_word)a,a+=7,tmp);
if(C_truep(t3)){
t5=t4;
f_13900(t5,t3);}
else{
t5=(C_word)C_i_car(((C_word*)t0)[4]);
t6=(C_word)C_i_car(((C_word*)t0)[3]);
t7=(C_word)C_i_equalp(t5,t6);
if(C_truep(t7)){
t8=t4;
f_13900(t8,t7);}
else{
t8=(C_word)C_i_car(((C_word*)t0)[3]);
t9=t4;
f_13900(t9,(C_word)C_eqp(t8,lf[226]));}}}}

/* k13898 in k13891 in do1752 in do1767 in k13954 in k13950 in next-in-markov in k7607 in k7604 in k5838 in k5545 in k5542 in k5538 in k5247 in k5244 in k5241 in k5238 */
static void C_fcall f_13900(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=(C_word)C_i_cdr(((C_word*)t0)[5]);
t4=(C_word)C_i_cdr(((C_word*)t0)[4]);
t5=((C_word*)((C_word*)t0)[3])[1];
f_13883(t5,((C_word*)t0)[2],t3,t4,((C_word*)((C_word*)t0)[6])[1]);}

/* k13966 in do1767 in k13954 in k13950 in next-in-markov in k7607 in k7604 in k5838 in k5545 in k5542 in k5538 in k5247 in k5244 in k5241 in k5238 */
static void C_ccall f_13968(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[8],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_13968,2,t0,t1);}
if(C_truep(t1)){
t2=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_13971,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],a[7]=((C_word*)t0)[8],tmp=(C_word)a,a+=8,tmp);
if(C_truep((C_word)C_i_nullp(((C_word*)t0)[4]))){
C_trace("ChickenBridge.scm: 363  error");
t3=*((C_word*)lf[6]+1);
((C_proc4)C_retrieve_proc(t3))(4,t3,t2,lf[237],((C_word*)t0)[6]);}
else{
t3=t2;
f_13971(2,t3,C_SCHEME_UNDEFINED);}}
else{
t2=(C_word)C_i_cdr(((C_word*)t0)[4]);
t3=((C_word*)((C_word*)t0)[2])[1];
f_13958(t3,((C_word*)t0)[7],t2,((C_word*)t0)[6],((C_word*)((C_word*)t0)[8])[1]);}}

/* k13969 in k13966 in do1767 in k13954 in k13950 in next-in-markov in k7607 in k7604 in k5838 in k5545 in k5542 in k5538 in k5247 in k5244 in k5241 in k5238 */
static void C_ccall f_13971(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word ab[6],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_13971,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_13975,a[2]=((C_word*)t0)[4],a[3]=((C_word*)t0)[5],a[4]=((C_word*)t0)[6],a[5]=((C_word*)t0)[7],tmp=(C_word)a,a+=6,tmp);
t3=(C_word)C_i_car(((C_word*)t0)[3]);
t4=(C_word)C_i_cadr(t3);
t5=(C_word)C_i_car(((C_word*)t0)[3]);
t6=(C_word)C_i_cddr(t5);
C_trace("ChickenBridge.scm: 363  select-output");
t7=((C_word*)((C_word*)t0)[2])[1];
f_13773(t7,t2,t4,t6);}

/* k13973 in k13969 in k13966 in do1767 in k13954 in k13950 in next-in-markov in k7607 in k7604 in k5838 in k5545 in k5542 in k5538 in k5247 in k5244 in k5241 in k5238 */
static void C_ccall f_13975(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word ab[13],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_13975,2,t0,t1);}
t2=C_mutate(((C_word *)((C_word*)t0)[5])+1,t1);
t3=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_13978,a[2]=((C_word*)t0)[5],a[3]=((C_word*)t0)[4],tmp=(C_word)a,a+=4,tmp);
if(C_truep((C_word)C_i_nullp(((C_word*)t0)[3]))){
t4=t3;
f_13978(2,t4,C_SCHEME_UNDEFINED);}
else{
t4=(C_word)C_i_cdr(((C_word*)t0)[3]);
if(C_truep((C_word)C_i_nullp(t4))){
t5=t3;
f_13978(2,t5,(C_word)C_i_set_car(((C_word*)t0)[3],((C_word*)((C_word*)t0)[5])[1]));}
else{
t5=C_SCHEME_UNDEFINED;
t6=(*a=C_VECTOR_TYPE|1,a[1]=t5,tmp=(C_word)a,a+=2,tmp);
t7=C_set_block_item(t6,0,(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_13995,a[2]=t6,a[3]=((C_word*)t0)[2],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[3],a[6]=((C_word)li172),tmp=(C_word)a,a+=7,tmp));
t8=((C_word*)t6)[1];
f_13995(t8,t3,((C_word*)t0)[3]);}}}

/* do1776 in k13973 in k13969 in k13966 in do1767 in k13954 in k13950 in next-in-markov in k7607 in k7604 in k5838 in k5545 in k5542 in k5538 in k5247 in k5244 in k5241 in k5238 */
static void C_fcall f_13995(C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word *a;
loop:
a=C_alloc(4);
C_check_for_interrupt;
if(!C_stack_probe(a)){
C_save_and_reclaim((void*)trf_13995,NULL,3,t0,t1,t2);}
t3=(C_word)C_i_cdr(t2);
if(C_truep((C_word)C_i_nullp(t3))){
t4=(C_word)C_i_set_car(((C_word*)t0)[5],((C_word*)((C_word*)t0)[4])[1]);
t5=(C_word)C_i_set_cdr(t2,((C_word*)t0)[5]);
t6=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_14011,a[2]=t1,a[3]=t2,tmp=(C_word)a,a+=4,tmp);
t7=(C_word)C_i_cdr(((C_word*)t0)[5]);
C_trace("ChickenBridge.scm: 363  pattern-cache-set!");
f_8493(t6,((C_word*)t0)[3],t7);}
else{
t4=(C_word)C_i_cdr(t2);
t10=t1;
t11=t4;
t1=t10;
t2=t11;
goto loop;}}

/* k14009 in do1776 in k13973 in k13969 in k13966 in do1767 in k13954 in k13950 in next-in-markov in k7607 in k7604 in k5838 in k5545 in k5542 in k5538 in k5247 in k5244 in k5241 in k5238 */
static void C_ccall f_14011(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word *a;
t2=(C_word)C_i_cdr(((C_word*)t0)[3]);
t3=((C_word*)t0)[2];
((C_proc2)(void*)(*((C_word*)t3+1)))(2,t3,(C_word)C_i_set_cdr(t2,C_SCHEME_END_OF_LIST));}

/* k13976 in k13973 in k13969 in k13966 in do1767 in k13954 in k13950 in next-in-markov in k7607 in k7604 in k5838 in k5545 in k5542 in k5538 in k5247 in k5244 in k5241 in k5238 */
static void C_ccall f_13978(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
t2=((C_word*)t0)[3];
((C_proc2)(void*)(*((C_word*)t2+1)))(2,t2,((C_word*)((C_word*)t0)[2])[1]);}

/* select-output in next-in-markov in k7607 in k7604 in k5838 in k5545 in k5542 in k5538 in k5247 in k5244 in k5241 in k5238 */
static void C_fcall f_13773(C_word t0,C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word ab[12],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_13773,NULL,4,t0,t1,t2,t3);}
t4=t2;
if(C_truep(t4)){
t5=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_13841,a[2]=t3,a[3]=t1,tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 363  random");
t6=C_retrieve(lf[205]);
((C_proc3)C_retrieve_proc(t6))(3,t6,t5,t2);}
else{
t5=C_SCHEME_UNDEFINED;
t6=(*a=C_VECTOR_TYPE|1,a[1]=t5,tmp=(C_word)a,a+=2,tmp);
t7=C_set_block_item(t6,0,(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_13785,a[2]=t6,a[3]=t3,a[4]=((C_word*)t0)[2],a[5]=((C_word)li170),tmp=(C_word)a,a+=6,tmp));
t8=((C_word*)t6)[1];
f_13785(t8,t1,t3,C_SCHEME_FALSE,C_fix(0));}}

/* do1736 in select-output in next-in-markov in k7607 in k7604 in k5838 in k5545 in k5542 in k5538 in k5247 in k5244 in k5241 in k5238 */
static void C_fcall f_13785(C_word t0,C_word t1,C_word t2,C_word t3,C_word t4){
C_word tmp;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word ab[11],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_13785,NULL,5,t0,t1,t2,t3,t4);}
t5=(*a=C_VECTOR_TYPE|1,a[1]=t3,tmp=(C_word)a,a+=2,tmp);
t6=(*a=C_VECTOR_TYPE|1,a[1]=t4,tmp=(C_word)a,a+=2,tmp);
if(C_truep((C_word)C_i_nullp(t2))){
C_trace("ChickenBridge.scm: 363  select-output");
t7=((C_word*)((C_word*)t0)[4])[1];
f_13773(t7,t1,((C_word*)t6)[1],((C_word*)t0)[3]);}
else{
t7=(C_word)C_i_car(t2);
t8=C_set_block_item(t5,0,t7);
t9=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_13821,a[2]=t1,a[3]=((C_word*)t0)[2],a[4]=t2,a[5]=t5,a[6]=t6,tmp=(C_word)a,a+=7,tmp);
t10=(C_word)C_i_caddr(((C_word*)t5)[1]);
if(C_truep((C_word)C_i_numberp(t10))){
t11=t9;
f_13821(2,t11,(C_word)C_i_caddr(((C_word*)t5)[1]));}
else{
t11=(C_word)C_i_caddr(((C_word*)t5)[1]);
C_trace("ChickenBridge.scm: 363  next-1");
f_8908(t9,t11);}}}

/* k13819 in do1736 in select-output in next-in-markov in k7607 in k7604 in k5838 in k5545 in k5542 in k5538 in k5247 in k5244 in k5241 in k5238 */
static void C_ccall f_13821(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word ab[4],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_13821,2,t0,t1);}
t2=(C_word)C_a_i_plus(&a,2,((C_word*)((C_word*)t0)[6])[1],t1);
t3=C_mutate(((C_word *)((C_word*)t0)[6])+1,t2);
t4=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[5])[1]);
t5=(C_word)C_i_set_car(t4,((C_word*)((C_word*)t0)[6])[1]);
t6=(C_word)C_i_cdr(((C_word*)t0)[4]);
t7=((C_word*)((C_word*)t0)[3])[1];
f_13785(t7,((C_word*)t0)[2],t6,((C_word*)((C_word*)t0)[5])[1],((C_word*)((C_word*)t0)[6])[1]);}

/* k13839 in select-output in next-in-markov in k7607 in k7604 in k5838 in k5545 in k5542 in k5538 in k5247 in k5244 in k5241 in k5238 */
static void C_ccall f_13841(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_13841,2,t0,t1);}
t2=C_SCHEME_UNDEFINED;
t3=(*a=C_VECTOR_TYPE|1,a[1]=t2,tmp=(C_word)a,a+=2,tmp);
t4=C_set_block_item(t3,0,(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_13846,a[2]=t3,a[3]=t1,a[4]=((C_word)li169),tmp=(C_word)a,a+=5,tmp));
t5=((C_word*)t3)[1];
f_13846(t5,((C_word*)t0)[3],((C_word*)t0)[2]);}

/* do1746 in k13839 in select-output in next-in-markov in k7607 in k7604 in k5838 in k5545 in k5542 in k5538 in k5247 in k5244 in k5241 in k5238 */
static void C_fcall f_13846(C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word *a;
loop:
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_13846,NULL,3,t0,t1,t2);}
t3=(C_word)C_i_car(t2);
t4=(C_word)C_i_cadr(t3);
if(C_truep((C_word)C_i_lessp(((C_word*)t0)[3],t4))){
t5=(C_word)C_i_car(t2);
t6=t1;
((C_proc2)(void*)(*((C_word*)t6+1)))(2,t6,(C_word)C_i_car(t5));}
else{
t5=(C_word)C_i_cdr(t2);
t8=t1;
t9=t5;
t1=t8;
t2=t9;
goto loop;}}

/* make-markov in k7607 in k7604 in k5838 in k5545 in k5542 in k5538 in k5247 in k5244 in k5241 in k5238 */
static void C_ccall f_13283(C_word c,C_word t0,C_word t1,C_word t2,...){
C_word tmp;
C_word t3;
va_list v;
C_word *a,c2=c;
C_save_rest(t2,c2,3);
if(c<3) C_bad_min_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_demand(c*C_SIZEOF_PAIR+22)){
C_save_and_reclaim((void*)tr3r,(void*)f_13283r,3,t0,t1,t2);}
else{
a=C_alloc((c-3)*3);
t3=C_restore_rest(a,C_rest_count(0));
f_13283r(t0,t1,t2,t3);}}

static void C_ccall f_13283r(C_word t0,C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word *a=C_alloc(22);
t4=(*a=C_VECTOR_TYPE|1,a[1]=t2,tmp=(C_word)a,a+=2,tmp);
t5=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_13287,a[2]=t1,a[3]=t4,a[4]=t3,tmp=(C_word)a,a+=5,tmp);
if(C_truep((C_word)C_i_pairp(((C_word*)t4)[1]))){
t6=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_13764,a[2]=t5,a[3]=t4,tmp=(C_word)a,a+=4,tmp);
t7=((C_word*)t4)[1];
t8=(C_word)C_a_i_list(&a,1,C_SCHEME_FALSE);
t9=C_SCHEME_UNDEFINED;
t10=(*a=C_VECTOR_TYPE|1,a[1]=t9,tmp=(C_word)a,a+=2,tmp);
t11=C_set_block_item(t10,0,(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_13210,a[2]=t7,a[3]=t10,a[4]=t8,a[5]=((C_word)li167),tmp=(C_word)a,a+=6,tmp));
t12=((C_word*)t10)[1];
f_13210(t12,t6,t7,C_SCHEME_FALSE,t8,C_SCHEME_FALSE);}
else{
C_trace("ChickenBridge.scm: 363  error");
t6=*((C_word*)lf[6]+1);
((C_proc4)C_retrieve_proc(t6))(4,t6,t5,lf[236],((C_word*)t4)[1]);}}

/* do1637 in make-markov in k7607 in k7604 in k5838 in k5545 in k5542 in k5538 in k5247 in k5244 in k5241 in k5238 */
static void C_fcall f_13210(C_word t0,C_word t1,C_word t2,C_word t3,C_word t4,C_word t5){
C_word tmp;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word ab[18],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_13210,NULL,6,t0,t1,t2,t3,t4,t5);}
t6=(*a=C_VECTOR_TYPE|1,a[1]=t3,tmp=(C_word)a,a+=2,tmp);
t7=(*a=C_VECTOR_TYPE|1,a[1]=t4,tmp=(C_word)a,a+=2,tmp);
t8=(*a=C_VECTOR_TYPE|1,a[1]=t5,tmp=(C_word)a,a+=2,tmp);
if(C_truep((C_word)C_i_nullp(t2))){
t9=t1;
((C_proc2)(void*)(*((C_word*)t9+1)))(2,t9,(C_word)C_i_cdr(((C_word*)t0)[4]));}
else{
t9=(C_word)C_i_car(t2);
t10=t9;
t11=(*a=C_VECTOR_TYPE|1,a[1]=t10,tmp=(C_word)a,a+=2,tmp);
t12=(*a=C_CLOSURE_TYPE|9,a[1]=(C_word)f_13055,a[2]=((C_word*)t0)[2],a[3]=t6,a[4]=t1,a[5]=((C_word*)t0)[3],a[6]=t2,a[7]=t7,a[8]=t8,a[9]=t11,tmp=(C_word)a,a+=10,tmp);
if(C_truep((C_word)C_i_pairp(((C_word*)t11)[1]))){
t13=t12;
f_13055(2,t13,C_SCHEME_UNDEFINED);}
else{
C_trace("ChickenBridge.scm: 363  error");
t13=*((C_word*)lf[6]+1);
((C_proc4)C_retrieve_proc(t13))(4,t13,t12,lf[235],((C_word*)t11)[1]);}}}

/* k13053 in do1637 in make-markov in k7607 in k7604 in k5838 in k5545 in k5542 in k5538 in k5247 in k5244 in k5241 in k5238 */
static void C_ccall f_13055(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[10],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_13055,2,t0,t1);}
t2=(C_word)C_i_member(lf[230],((C_word*)((C_word*)t0)[9])[1]);
t3=(*a=C_CLOSURE_TYPE|9,a[1]=(C_word)f_13061,a[2]=((C_word*)t0)[9],a[3]=((C_word*)t0)[2],a[4]=((C_word*)t0)[3],a[5]=((C_word*)t0)[4],a[6]=((C_word*)t0)[5],a[7]=((C_word*)t0)[6],a[8]=((C_word*)t0)[7],a[9]=((C_word*)t0)[8],tmp=(C_word)a,a+=10,tmp);
if(C_truep(t2)){
t4=t3;
f_13061(2,t4,t2);}
else{
t4=(C_word)C_i_member(lf[233],((C_word*)((C_word*)t0)[9])[1]);
if(C_truep(t4)){
t5=t3;
f_13061(2,t5,t4);}
else{
C_trace("ChickenBridge.scm: 363  error");
t5=*((C_word*)lf[6]+1);
((C_proc4)C_retrieve_proc(t5))(4,t5,t3,lf[234],((C_word*)((C_word*)t0)[9])[1]);}}}

/* k13059 in k13053 in do1637 in make-markov in k7607 in k7604 in k5838 in k5545 in k5542 in k5538 in k5247 in k5244 in k5241 in k5238 */
static void C_ccall f_13061(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word t14;
C_word t15;
C_word t16;
C_word t17;
C_word ab[37],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_13061,2,t0,t1);}
t2=t1;
t3=(*a=C_VECTOR_TYPE|1,a[1]=t2,tmp=(C_word)a,a+=2,tmp);
t4=C_SCHEME_END_OF_LIST;
t5=(*a=C_VECTOR_TYPE|1,a[1]=t4,tmp=(C_word)a,a+=2,tmp);
t6=C_fix(0);
t7=(*a=C_VECTOR_TYPE|1,a[1]=t6,tmp=(C_word)a,a+=2,tmp);
t8=C_SCHEME_END_OF_LIST;
t9=(*a=C_VECTOR_TYPE|1,a[1]=t8,tmp=(C_word)a,a+=2,tmp);
t10=(C_word)C_a_i_list(&a,1,C_SCHEME_FALSE);
t11=t10;
t12=(*a=C_VECTOR_TYPE|1,a[1]=t11,tmp=(C_word)a,a+=2,tmp);
t13=(*a=C_CLOSURE_TYPE|12,a[1]=(C_word)f_13073,a[2]=t3,a[3]=t9,a[4]=((C_word*)t0)[3],a[5]=((C_word*)t0)[4],a[6]=((C_word*)t0)[5],a[7]=((C_word*)t0)[6],a[8]=((C_word*)t0)[7],a[9]=((C_word*)t0)[8],a[10]=((C_word*)t0)[9],a[11]=t5,a[12]=t7,tmp=(C_word)a,a+=13,tmp);
t14=C_SCHEME_UNDEFINED;
t15=(*a=C_VECTOR_TYPE|1,a[1]=t14,tmp=(C_word)a,a+=2,tmp);
t16=C_set_block_item(t15,0,(*a=C_CLOSURE_TYPE|8,a[1]=(C_word)f_13146,a[2]=t15,a[3]=t12,a[4]=t5,a[5]=t10,a[6]=t3,a[7]=((C_word*)t0)[2],a[8]=((C_word)li166),tmp=(C_word)a,a+=9,tmp));
t17=((C_word*)t15)[1];
f_13146(t17,t13);}

/* do1615 in k13059 in k13053 in do1637 in make-markov in k7607 in k7604 in k5838 in k5545 in k5542 in k5538 in k5247 in k5244 in k5241 in k5238 */
static void C_fcall f_13146(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word t14;
C_word t15;
C_word *a;
loop:
a=C_alloc(3);
C_check_for_interrupt;
if(!C_stack_probe(a)){
C_save_and_reclaim((void*)trf_13146,NULL,2,t0,t1);}
t2=(C_word)C_eqp(((C_word*)((C_word*)t0)[7])[1],((C_word*)((C_word*)t0)[6])[1]);
if(C_truep(t2)){
t3=(C_word)C_i_cdr(((C_word*)t0)[5]);
t4=C_mutate(((C_word *)((C_word*)t0)[4])+1,t3);
t5=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[6])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[6])+1,t5);
t7=t1;
((C_proc2)(void*)(*((C_word*)t7+1)))(2,t7,t6);}
else{
t3=(C_word)C_i_car(((C_word*)((C_word*)t0)[7])[1]);
t4=(C_word)C_a_i_list(&a,1,t3);
t5=(C_word)C_i_set_cdr(((C_word*)((C_word*)t0)[3])[1],t4);
t6=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[3])[1]);
t7=C_mutate(((C_word *)((C_word*)t0)[3])+1,t6);
t8=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[7])[1]);
t9=C_mutate(((C_word *)((C_word*)t0)[7])+1,t8);
t15=t1;
t1=t15;
goto loop;}}

/* k13071 in k13059 in k13053 in do1637 in make-markov in k7607 in k7604 in k5838 in k5545 in k5542 in k5538 in k5247 in k5244 in k5241 in k5238 */
static void C_ccall f_13073(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[17],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_13073,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|11,a[1]=(C_word)f_13076,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],a[7]=((C_word*)t0)[8],a[8]=((C_word*)t0)[9],a[9]=((C_word*)t0)[10],a[10]=((C_word*)t0)[11],a[11]=((C_word*)t0)[12],tmp=(C_word)a,a+=12,tmp);
t3=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_13089,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[12],a[4]=((C_word)li165),tmp=(C_word)a,a+=5,tmp);
C_trace("for-each");
t4=*((C_word*)lf[189]+1);
((C_proc4)(void*)(*((C_word*)t4+1)))(4,t4,t2,t3,((C_word*)((C_word*)t0)[2])[1]);}

/* a13088 in k13071 in k13059 in k13053 in do1637 in make-markov in k7607 in k7604 in k5838 in k5545 in k5542 in k5538 in k5247 in k5244 in k5241 in k5238 */
static void C_ccall f_13089(C_word c,C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word t14;
C_word t15;
C_word t16;
C_word t17;
C_word t18;
C_word t19;
C_word t20;
C_word t21;
C_word ab[14],*a=ab;
if(c!=3) C_bad_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr3,(void*)f_13089,3,t0,t1,t2);}
t3=C_SCHEME_FALSE;
t4=(*a=C_VECTOR_TYPE|1,a[1]=t3,tmp=(C_word)a,a+=2,tmp);
t5=C_SCHEME_FALSE;
t6=(*a=C_VECTOR_TYPE|1,a[1]=t5,tmp=(C_word)a,a+=2,tmp);
t7=C_SCHEME_FALSE;
t8=(*a=C_VECTOR_TYPE|1,a[1]=t7,tmp=(C_word)a,a+=2,tmp);
t9=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_13093,a[2]=t8,a[3]=t1,a[4]=((C_word*)t0)[2],a[5]=t6,a[6]=((C_word*)t0)[3],a[7]=t4,tmp=(C_word)a,a+=8,tmp);
if(C_truep((C_word)C_i_pairp(t2))){
t10=(C_word)C_i_car(t2);
t11=C_set_block_item(t4,0,t10);
t12=(C_word)C_i_cdr(t2);
t13=(C_word)C_i_nullp(t12);
t14=(C_truep(t13)?C_fix(1):(C_word)C_i_cadr(t2));
t15=C_set_block_item(t8,0,t14);
t16=C_set_block_item(t6,0,((C_word*)t8)[1]);
if(C_truep((C_word)C_i_numberp(((C_word*)t8)[1]))){
t17=t9;
f_13093(t17,C_SCHEME_UNDEFINED);}
else{
t17=C_set_block_item(t8,0,C_SCHEME_FALSE);
t18=t9;
f_13093(t18,t17);}}
else{
t10=C_set_block_item(t4,0,t2);
t11=C_set_block_item(t8,0,C_fix(1));
t12=C_set_block_item(t6,0,C_fix(1));
t13=t9;
f_13093(t13,t12);}}

/* k13091 in a13088 in k13071 in k13059 in k13053 in do1637 in make-markov in k7607 in k7604 in k5838 in k5545 in k5542 in k5538 in k5247 in k5244 in k5241 in k5238 */
static void C_fcall f_13093(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word ab[11],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_13093,NULL,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_13096,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_truep(((C_word*)((C_word*)t0)[2])[1])?((C_word*)((C_word*)t0)[6])[1]:C_SCHEME_FALSE);
if(C_truep(t3)){
t4=(C_word)C_a_i_plus(&a,2,((C_word*)((C_word*)t0)[6])[1],((C_word*)((C_word*)t0)[2])[1]);
t5=C_mutate(((C_word *)((C_word*)t0)[6])+1,t4);
t6=t2;
f_13096(t6,t5);}
else{
t4=C_set_block_item(((C_word*)t0)[6],0,C_SCHEME_FALSE);
t5=t2;
f_13096(t5,t4);}}

/* k13094 in k13091 in a13088 in k13071 in k13059 in k13053 in do1637 in make-markov in k7607 in k7604 in k5838 in k5545 in k5542 in k5538 in k5247 in k5244 in k5241 in k5238 */
static void C_fcall f_13096(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[12],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_13096,NULL,2,t0,t1);}
t2=(C_word)C_a_i_list(&a,3,((C_word*)((C_word*)t0)[6])[1],((C_word*)((C_word*)t0)[5])[1],((C_word*)((C_word*)t0)[4])[1]);
t3=(C_word)C_a_i_cons(&a,2,t2,((C_word*)((C_word*)t0)[3])[1]);
t4=C_mutate(((C_word *)((C_word*)t0)[3])+1,t3);
t5=((C_word*)t0)[2];
((C_proc2)(void*)(*((C_word*)t5+1)))(2,t5,t4);}

/* k13074 in k13071 in k13059 in k13053 in do1637 in make-markov in k7607 in k7604 in k5838 in k5545 in k5542 in k5538 in k5247 in k5244 in k5241 in k5238 */
static void C_ccall f_13076(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[11],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_13076,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|10,a[1]=(C_word)f_13087,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],a[7]=((C_word*)t0)[8],a[8]=((C_word*)t0)[9],a[9]=((C_word*)t0)[10],a[10]=((C_word*)t0)[11],tmp=(C_word)a,a+=11,tmp);
C_trace("ChickenBridge.scm: 363  reverse");
t3=*((C_word*)lf[232]+1);
((C_proc3)C_retrieve_proc(t3))(3,t3,t2,((C_word*)((C_word*)t0)[2])[1]);}

/* k13085 in k13074 in k13071 in k13059 in k13053 in do1637 in make-markov in k7607 in k7604 in k5838 in k5545 in k5542 in k5538 in k5247 in k5244 in k5241 in k5238 */
static void C_ccall f_13087(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word ab[14],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_13087,2,t0,t1);}
t2=(C_word)C_a_i_cons(&a,2,((C_word*)((C_word*)t0)[10])[1],t1);
t3=(C_word)C_a_i_cons(&a,2,((C_word*)((C_word*)t0)[9])[1],t2);
t4=C_mutate(((C_word *)((C_word*)t0)[8])+1,t3);
t5=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_13227,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],a[7]=((C_word*)t0)[8],tmp=(C_word)a,a+=8,tmp);
t6=((C_word*)((C_word*)t0)[3])[1];
if(C_truep(t6)){
t7=(C_word)C_i_car(((C_word*)((C_word*)t0)[8])[1]);
t8=(C_word)C_i_length(t7);
if(C_truep((C_word)C_i_nequalp(((C_word*)((C_word*)t0)[3])[1],t8))){
t9=t5;
f_13227(2,t9,C_SCHEME_UNDEFINED);}
else{
C_trace("ChickenBridge.scm: 363  error");
t9=*((C_word*)lf[6]+1);
((C_proc4)C_retrieve_proc(t9))(4,t9,t5,lf[231],((C_word*)t0)[2]);}}
else{
t7=(C_word)C_i_car(((C_word*)((C_word*)t0)[8])[1]);
t8=(C_word)C_i_length(t7);
t9=C_mutate(((C_word *)((C_word*)t0)[3])+1,t8);
t10=t5;
f_13227(2,t10,t9);}}

/* k13225 in k13085 in k13074 in k13071 in k13059 in k13053 in do1637 in make-markov in k7607 in k7604 in k5838 in k5545 in k5542 in k5538 in k5247 in k5244 in k5241 in k5238 */
static void C_ccall f_13227(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word ab[3],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_13227,2,t0,t1);}
t2=(C_word)C_a_i_list(&a,1,((C_word*)((C_word*)t0)[7])[1]);
t3=(C_word)C_i_set_cdr(((C_word*)((C_word*)t0)[6])[1],t2);
t4=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[6])[1]);
t5=C_mutate(((C_word *)((C_word*)t0)[6])+1,t4);
t6=(C_word)C_i_cdr(((C_word*)t0)[5]);
t7=((C_word*)((C_word*)t0)[4])[1];
f_13210(t7,((C_word*)t0)[3],t6,((C_word*)((C_word*)t0)[2])[1],((C_word*)((C_word*)t0)[6])[1],((C_word*)((C_word*)t0)[7])[1]);}

/* k13762 in make-markov in k7607 in k7604 in k5838 in k5545 in k5542 in k5538 in k5247 in k5244 in k5241 in k5238 */
static void C_ccall f_13764(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[3])+1,t1);
t3=((C_word*)t0)[2];
f_13287(2,t3,t2);}

/* k13285 in make-markov in k7607 in k7604 in k5838 in k5545 in k5542 in k5538 in k5247 in k5244 in k5241 in k5238 */
static void C_ccall f_13287(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word t14;
C_word t15;
C_word t16;
C_word t17;
C_word t18;
C_word t19;
C_word t20;
C_word t21;
C_word t22;
C_word t23;
C_word t24;
C_word t25;
C_word t26;
C_word t27;
C_word ab[59],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_13287,2,t0,t1);}
t2=C_SCHEME_FALSE;
t3=(*a=C_VECTOR_TYPE|1,a[1]=t2,tmp=(C_word)a,a+=2,tmp);
t4=C_SCHEME_FALSE;
t5=(*a=C_VECTOR_TYPE|1,a[1]=t4,tmp=(C_word)a,a+=2,tmp);
t6=C_SCHEME_FALSE;
t7=(*a=C_VECTOR_TYPE|1,a[1]=t6,tmp=(C_word)a,a+=2,tmp);
t8=C_SCHEME_FALSE;
t9=(*a=C_VECTOR_TYPE|1,a[1]=t8,tmp=(C_word)a,a+=2,tmp);
t10=C_SCHEME_FALSE;
t11=(*a=C_VECTOR_TYPE|1,a[1]=t10,tmp=(C_word)a,a+=2,tmp);
t12=C_SCHEME_FALSE;
t13=(*a=C_VECTOR_TYPE|1,a[1]=t12,tmp=(C_word)a,a+=2,tmp);
t14=((C_word*)t0)[4];
t15=(*a=C_VECTOR_TYPE|1,a[1]=t14,tmp=(C_word)a,a+=2,tmp);
t16=C_SCHEME_FALSE;
t17=(*a=C_VECTOR_TYPE|1,a[1]=t16,tmp=(C_word)a,a+=2,tmp);
t18=(*a=C_CLOSURE_TYPE|12,a[1]=(C_word)f_13290,a[2]=t13,a[3]=t11,a[4]=t17,a[5]=t9,a[6]=((C_word*)t0)[4],a[7]=t15,a[8]=t5,a[9]=t3,a[10]=t7,a[11]=((C_word*)t0)[2],a[12]=((C_word*)t0)[3],tmp=(C_word)a,a+=13,tmp);
if(C_truep((C_word)C_i_nullp(((C_word*)t15)[1]))){
t19=t18;
f_13290(t19,C_SCHEME_UNDEFINED);}
else{
t19=(C_word)C_i_car(((C_word*)t15)[1]);
t20=(C_word)C_eqp(t19,lf[191]);
if(C_truep(t20)){
t21=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_13634,a[2]=((C_word*)t0)[4],a[3]=t18,a[4]=t15,a[5]=t17,a[6]=t9,a[7]=t3,tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)t9)[1])){
C_trace("ChickenBridge.scm: 363  error");
t22=*((C_word*)lf[6]+1);
((C_proc4)C_retrieve_proc(t22))(4,t22,t21,lf[21],lf[191]);}
else{
t22=t21;
f_13634(2,t22,C_SCHEME_UNDEFINED);}}
else{
t21=(C_word)C_eqp(t19,lf[192]);
if(C_truep(t21)){
t22=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_13669,a[2]=((C_word*)t0)[4],a[3]=t18,a[4]=t15,a[5]=t17,a[6]=t11,a[7]=t5,tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)t11)[1])){
C_trace("ChickenBridge.scm: 363  error");
t23=*((C_word*)lf[6]+1);
((C_proc4)C_retrieve_proc(t23))(4,t23,t22,lf[21],lf[192]);}
else{
t23=t22;
f_13669(2,t23,C_SCHEME_UNDEFINED);}}
else{
t22=(C_word)C_eqp(t19,lf[229]);
if(C_truep(t22)){
t23=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_13704,a[2]=((C_word*)t0)[4],a[3]=t18,a[4]=t15,a[5]=t17,a[6]=t13,a[7]=t7,tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)t13)[1])){
C_trace("ChickenBridge.scm: 363  error");
t24=*((C_word*)lf[6]+1);
((C_proc4)C_retrieve_proc(t24))(4,t24,t23,lf[21],lf[229]);}
else{
t24=t23;
f_13704(2,t24,C_SCHEME_UNDEFINED);}}
else{
t23=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_13733,a[2]=t18,a[3]=t9,a[4]=t3,a[5]=t15,tmp=(C_word)a,a+=6,tmp);
if(C_truep(((C_word*)t17)[1])){
C_trace("ChickenBridge.scm: 363  error");
t24=*((C_word*)lf[6]+1);
((C_proc4)C_retrieve_proc(t24))(4,t24,t23,lf[12],((C_word*)t0)[4]);}
else{
t24=t23;
f_13733(2,t24,C_SCHEME_UNDEFINED);}}}}}}

/* k13731 in k13285 in make-markov in k7607 in k7604 in k5838 in k5545 in k5542 in k5538 in k5247 in k5244 in k5241 in k5238 */
static void C_ccall f_13733(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_13733,2,t0,t1);}
t2=(C_word)C_i_car(((C_word*)((C_word*)t0)[5])[1]);
t3=C_mutate(((C_word *)((C_word*)t0)[4])+1,t2);
t4=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_13740,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[5],a[4]=((C_word*)t0)[3],tmp=(C_word)a,a+=5,tmp);
t5=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_13748,a[2]=((C_word*)t0)[4],a[3]=t4,tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 363  keyword?");
t6=C_retrieve(lf[15]);
((C_proc3)C_retrieve_proc(t6))(3,t6,t5,((C_word*)((C_word*)t0)[4])[1]);}

/* k13746 in k13731 in k13285 in make-markov in k7607 in k7604 in k5838 in k5545 in k5542 in k5538 in k5247 in k5244 in k5241 in k5238 */
static void C_ccall f_13748(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
if(C_truep(t1)){
C_trace("ChickenBridge.scm: 363  error");
t2=*((C_word*)lf[6]+1);
((C_proc4)C_retrieve_proc(t2))(4,t2,((C_word*)t0)[3],lf[16],((C_word*)((C_word*)t0)[2])[1]);}
else{
t2=((C_word*)t0)[3];
f_13740(2,t2,C_SCHEME_UNDEFINED);}}

/* k13738 in k13731 in k13285 in make-markov in k7607 in k7604 in k5838 in k5545 in k5542 in k5538 in k5247 in k5244 in k5241 in k5238 */
static void C_ccall f_13740(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word *a;
t2=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[3])[1]);
t4=C_mutate(((C_word *)((C_word*)t0)[3])+1,t3);
t5=((C_word*)t0)[2];
f_13290(t5,t4);}

/* k13702 in k13285 in make-markov in k7607 in k7604 in k5838 in k5545 in k5542 in k5538 in k5247 in k5244 in k5241 in k5238 */
static void C_ccall f_13704(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_13704,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_13708,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("ChickenBridge.scm: 363  error");
t4=*((C_word*)lf[6]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[23],((C_word*)t0)[2]);}
else{
t4=t2;
f_13708(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k13706 in k13702 in k13285 in make-markov in k7607 in k7604 in k5838 in k5545 in k5542 in k5538 in k5247 in k5244 in k5241 in k5238 */
static void C_ccall f_13708(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_13290(t7,t6);}

/* k13667 in k13285 in make-markov in k7607 in k7604 in k5838 in k5545 in k5542 in k5538 in k5247 in k5244 in k5241 in k5238 */
static void C_ccall f_13669(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_13669,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_13673,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("ChickenBridge.scm: 363  error");
t4=*((C_word*)lf[6]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[23],((C_word*)t0)[2]);}
else{
t4=t2;
f_13673(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k13671 in k13667 in k13285 in make-markov in k7607 in k7604 in k5838 in k5545 in k5542 in k5538 in k5247 in k5244 in k5241 in k5238 */
static void C_ccall f_13673(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_13290(t7,t6);}

/* k13632 in k13285 in make-markov in k7607 in k7604 in k5838 in k5545 in k5542 in k5538 in k5247 in k5244 in k5241 in k5238 */
static void C_ccall f_13634(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_13634,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_13638,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("ChickenBridge.scm: 363  error");
t4=*((C_word*)lf[6]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[23],((C_word*)t0)[2]);}
else{
t4=t2;
f_13638(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k13636 in k13632 in k13285 in make-markov in k7607 in k7604 in k5838 in k5545 in k5542 in k5538 in k5247 in k5244 in k5241 in k5238 */
static void C_ccall f_13638(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_13290(t7,t6);}

/* k13288 in k13285 in make-markov in k7607 in k7604 in k5838 in k5545 in k5542 in k5538 in k5247 in k5244 in k5241 in k5238 */
static void C_fcall f_13290(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word ab[43],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_13290,NULL,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|12,a[1]=(C_word)f_13293,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],a[7]=((C_word*)t0)[7],a[8]=((C_word*)t0)[8],a[9]=((C_word*)t0)[9],a[10]=((C_word*)t0)[10],a[11]=((C_word*)t0)[11],a[12]=((C_word*)t0)[12],tmp=(C_word)a,a+=13,tmp);
if(C_truep((C_word)C_i_nullp(((C_word*)((C_word*)t0)[7])[1]))){
t3=t2;
f_13293(t3,C_SCHEME_UNDEFINED);}
else{
t3=(C_word)C_i_car(((C_word*)((C_word*)t0)[7])[1]);
t4=(C_word)C_eqp(t3,lf[191]);
if(C_truep(t4)){
t5=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_13499,a[2]=((C_word*)t0)[6],a[3]=t2,a[4]=((C_word*)t0)[7],a[5]=((C_word*)t0)[4],a[6]=((C_word*)t0)[5],a[7]=((C_word*)t0)[9],tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)((C_word*)t0)[5])[1])){
C_trace("ChickenBridge.scm: 363  error");
t6=*((C_word*)lf[6]+1);
((C_proc4)C_retrieve_proc(t6))(4,t6,t5,lf[21],lf[191]);}
else{
t6=t5;
f_13499(2,t6,C_SCHEME_UNDEFINED);}}
else{
t5=(C_word)C_eqp(t3,lf[192]);
if(C_truep(t5)){
t6=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_13534,a[2]=((C_word*)t0)[6],a[3]=t2,a[4]=((C_word*)t0)[7],a[5]=((C_word*)t0)[4],a[6]=((C_word*)t0)[3],a[7]=((C_word*)t0)[8],tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)((C_word*)t0)[3])[1])){
C_trace("ChickenBridge.scm: 363  error");
t7=*((C_word*)lf[6]+1);
((C_proc4)C_retrieve_proc(t7))(4,t7,t6,lf[21],lf[192]);}
else{
t7=t6;
f_13534(2,t7,C_SCHEME_UNDEFINED);}}
else{
t6=(C_word)C_eqp(t3,lf[229]);
if(C_truep(t6)){
t7=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_13569,a[2]=((C_word*)t0)[6],a[3]=t2,a[4]=((C_word*)t0)[7],a[5]=((C_word*)t0)[4],a[6]=((C_word*)t0)[2],a[7]=((C_word*)t0)[10],tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)((C_word*)t0)[2])[1])){
C_trace("ChickenBridge.scm: 363  error");
t8=*((C_word*)lf[6]+1);
((C_proc4)C_retrieve_proc(t8))(4,t8,t7,lf[21],lf[229]);}
else{
t8=t7;
f_13569(2,t8,C_SCHEME_UNDEFINED);}}
else{
t7=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_13598,a[2]=t2,a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[8],a[5]=((C_word*)t0)[7],tmp=(C_word)a,a+=6,tmp);
if(C_truep(((C_word*)((C_word*)t0)[4])[1])){
C_trace("ChickenBridge.scm: 363  error");
t8=*((C_word*)lf[6]+1);
((C_proc4)C_retrieve_proc(t8))(4,t8,t7,lf[12],((C_word*)t0)[6]);}
else{
t8=t7;
f_13598(2,t8,C_SCHEME_UNDEFINED);}}}}}}

/* k13596 in k13288 in k13285 in make-markov in k7607 in k7604 in k5838 in k5545 in k5542 in k5538 in k5247 in k5244 in k5241 in k5238 */
static void C_ccall f_13598(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_13598,2,t0,t1);}
t2=(C_word)C_i_car(((C_word*)((C_word*)t0)[5])[1]);
t3=C_mutate(((C_word *)((C_word*)t0)[4])+1,t2);
t4=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_13605,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[5],a[4]=((C_word*)t0)[3],tmp=(C_word)a,a+=5,tmp);
t5=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_13613,a[2]=((C_word*)t0)[4],a[3]=t4,tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 363  keyword?");
t6=C_retrieve(lf[15]);
((C_proc3)C_retrieve_proc(t6))(3,t6,t5,((C_word*)((C_word*)t0)[4])[1]);}

/* k13611 in k13596 in k13288 in k13285 in make-markov in k7607 in k7604 in k5838 in k5545 in k5542 in k5538 in k5247 in k5244 in k5241 in k5238 */
static void C_ccall f_13613(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
if(C_truep(t1)){
C_trace("ChickenBridge.scm: 363  error");
t2=*((C_word*)lf[6]+1);
((C_proc4)C_retrieve_proc(t2))(4,t2,((C_word*)t0)[3],lf[16],((C_word*)((C_word*)t0)[2])[1]);}
else{
t2=((C_word*)t0)[3];
f_13605(2,t2,C_SCHEME_UNDEFINED);}}

/* k13603 in k13596 in k13288 in k13285 in make-markov in k7607 in k7604 in k5838 in k5545 in k5542 in k5538 in k5247 in k5244 in k5241 in k5238 */
static void C_ccall f_13605(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word *a;
t2=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[3])[1]);
t4=C_mutate(((C_word *)((C_word*)t0)[3])+1,t3);
t5=((C_word*)t0)[2];
f_13293(t5,t4);}

/* k13567 in k13288 in k13285 in make-markov in k7607 in k7604 in k5838 in k5545 in k5542 in k5538 in k5247 in k5244 in k5241 in k5238 */
static void C_ccall f_13569(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_13569,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_13573,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("ChickenBridge.scm: 363  error");
t4=*((C_word*)lf[6]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[23],((C_word*)t0)[2]);}
else{
t4=t2;
f_13573(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k13571 in k13567 in k13288 in k13285 in make-markov in k7607 in k7604 in k5838 in k5545 in k5542 in k5538 in k5247 in k5244 in k5241 in k5238 */
static void C_ccall f_13573(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_13293(t7,t6);}

/* k13532 in k13288 in k13285 in make-markov in k7607 in k7604 in k5838 in k5545 in k5542 in k5538 in k5247 in k5244 in k5241 in k5238 */
static void C_ccall f_13534(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_13534,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_13538,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("ChickenBridge.scm: 363  error");
t4=*((C_word*)lf[6]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[23],((C_word*)t0)[2]);}
else{
t4=t2;
f_13538(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k13536 in k13532 in k13288 in k13285 in make-markov in k7607 in k7604 in k5838 in k5545 in k5542 in k5538 in k5247 in k5244 in k5241 in k5238 */
static void C_ccall f_13538(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_13293(t7,t6);}

/* k13497 in k13288 in k13285 in make-markov in k7607 in k7604 in k5838 in k5545 in k5542 in k5538 in k5247 in k5244 in k5241 in k5238 */
static void C_ccall f_13499(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_13499,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_13503,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("ChickenBridge.scm: 363  error");
t4=*((C_word*)lf[6]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[23],((C_word*)t0)[2]);}
else{
t4=t2;
f_13503(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k13501 in k13497 in k13288 in k13285 in make-markov in k7607 in k7604 in k5838 in k5545 in k5542 in k5538 in k5247 in k5244 in k5241 in k5238 */
static void C_ccall f_13503(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_13293(t7,t6);}

/* k13291 in k13288 in k13285 in make-markov in k7607 in k7604 in k5838 in k5545 in k5542 in k5538 in k5247 in k5244 in k5241 in k5238 */
static void C_fcall f_13293(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word ab[39],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_13293,NULL,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|8,a[1]=(C_word)f_13296,a[2]=((C_word*)t0)[6],a[3]=((C_word*)t0)[7],a[4]=((C_word*)t0)[8],a[5]=((C_word*)t0)[9],a[6]=((C_word*)t0)[10],a[7]=((C_word*)t0)[11],a[8]=((C_word*)t0)[12],tmp=(C_word)a,a+=9,tmp);
if(C_truep((C_word)C_i_nullp(((C_word*)((C_word*)t0)[7])[1]))){
t3=t2;
f_13296(t3,C_SCHEME_UNDEFINED);}
else{
t3=(C_word)C_i_car(((C_word*)((C_word*)t0)[7])[1]);
t4=(C_word)C_eqp(t3,lf[191]);
if(C_truep(t4)){
t5=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_13364,a[2]=((C_word*)t0)[6],a[3]=t2,a[4]=((C_word*)t0)[7],a[5]=((C_word*)t0)[4],a[6]=((C_word*)t0)[5],a[7]=((C_word*)t0)[9],tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)((C_word*)t0)[5])[1])){
C_trace("ChickenBridge.scm: 363  error");
t6=*((C_word*)lf[6]+1);
((C_proc4)C_retrieve_proc(t6))(4,t6,t5,lf[21],lf[191]);}
else{
t6=t5;
f_13364(2,t6,C_SCHEME_UNDEFINED);}}
else{
t5=(C_word)C_eqp(t3,lf[192]);
if(C_truep(t5)){
t6=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_13399,a[2]=((C_word*)t0)[6],a[3]=t2,a[4]=((C_word*)t0)[7],a[5]=((C_word*)t0)[4],a[6]=((C_word*)t0)[3],a[7]=((C_word*)t0)[8],tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)((C_word*)t0)[3])[1])){
C_trace("ChickenBridge.scm: 363  error");
t7=*((C_word*)lf[6]+1);
((C_proc4)C_retrieve_proc(t7))(4,t7,t6,lf[21],lf[192]);}
else{
t7=t6;
f_13399(2,t7,C_SCHEME_UNDEFINED);}}
else{
t6=(C_word)C_eqp(t3,lf[229]);
if(C_truep(t6)){
t7=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_13434,a[2]=((C_word*)t0)[6],a[3]=t2,a[4]=((C_word*)t0)[7],a[5]=((C_word*)t0)[4],a[6]=((C_word*)t0)[2],a[7]=((C_word*)t0)[10],tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)((C_word*)t0)[2])[1])){
C_trace("ChickenBridge.scm: 363  error");
t8=*((C_word*)lf[6]+1);
((C_proc4)C_retrieve_proc(t8))(4,t8,t7,lf[21],lf[229]);}
else{
t8=t7;
f_13434(2,t8,C_SCHEME_UNDEFINED);}}
else{
t7=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_13463,a[2]=t2,a[3]=((C_word*)t0)[2],a[4]=((C_word*)t0)[10],a[5]=((C_word*)t0)[7],tmp=(C_word)a,a+=6,tmp);
if(C_truep(((C_word*)((C_word*)t0)[4])[1])){
C_trace("ChickenBridge.scm: 363  error");
t8=*((C_word*)lf[6]+1);
((C_proc4)C_retrieve_proc(t8))(4,t8,t7,lf[12],((C_word*)t0)[6]);}
else{
t8=t7;
f_13463(2,t8,C_SCHEME_UNDEFINED);}}}}}}

/* k13461 in k13291 in k13288 in k13285 in make-markov in k7607 in k7604 in k5838 in k5545 in k5542 in k5538 in k5247 in k5244 in k5241 in k5238 */
static void C_ccall f_13463(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_13463,2,t0,t1);}
t2=(C_word)C_i_car(((C_word*)((C_word*)t0)[5])[1]);
t3=C_mutate(((C_word *)((C_word*)t0)[4])+1,t2);
t4=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_13470,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[5],a[4]=((C_word*)t0)[3],tmp=(C_word)a,a+=5,tmp);
t5=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_13478,a[2]=((C_word*)t0)[4],a[3]=t4,tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 363  keyword?");
t6=C_retrieve(lf[15]);
((C_proc3)C_retrieve_proc(t6))(3,t6,t5,((C_word*)((C_word*)t0)[4])[1]);}

/* k13476 in k13461 in k13291 in k13288 in k13285 in make-markov in k7607 in k7604 in k5838 in k5545 in k5542 in k5538 in k5247 in k5244 in k5241 in k5238 */
static void C_ccall f_13478(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
if(C_truep(t1)){
C_trace("ChickenBridge.scm: 363  error");
t2=*((C_word*)lf[6]+1);
((C_proc4)C_retrieve_proc(t2))(4,t2,((C_word*)t0)[3],lf[16],((C_word*)((C_word*)t0)[2])[1]);}
else{
t2=((C_word*)t0)[3];
f_13470(2,t2,C_SCHEME_UNDEFINED);}}

/* k13468 in k13461 in k13291 in k13288 in k13285 in make-markov in k7607 in k7604 in k5838 in k5545 in k5542 in k5538 in k5247 in k5244 in k5241 in k5238 */
static void C_ccall f_13470(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word *a;
t2=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[3])[1]);
t4=C_mutate(((C_word *)((C_word*)t0)[3])+1,t3);
t5=((C_word*)t0)[2];
f_13296(t5,t4);}

/* k13432 in k13291 in k13288 in k13285 in make-markov in k7607 in k7604 in k5838 in k5545 in k5542 in k5538 in k5247 in k5244 in k5241 in k5238 */
static void C_ccall f_13434(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_13434,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_13438,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("ChickenBridge.scm: 363  error");
t4=*((C_word*)lf[6]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[23],((C_word*)t0)[2]);}
else{
t4=t2;
f_13438(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k13436 in k13432 in k13291 in k13288 in k13285 in make-markov in k7607 in k7604 in k5838 in k5545 in k5542 in k5538 in k5247 in k5244 in k5241 in k5238 */
static void C_ccall f_13438(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_13296(t7,t6);}

/* k13397 in k13291 in k13288 in k13285 in make-markov in k7607 in k7604 in k5838 in k5545 in k5542 in k5538 in k5247 in k5244 in k5241 in k5238 */
static void C_ccall f_13399(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_13399,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_13403,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("ChickenBridge.scm: 363  error");
t4=*((C_word*)lf[6]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[23],((C_word*)t0)[2]);}
else{
t4=t2;
f_13403(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k13401 in k13397 in k13291 in k13288 in k13285 in make-markov in k7607 in k7604 in k5838 in k5545 in k5542 in k5538 in k5247 in k5244 in k5241 in k5238 */
static void C_ccall f_13403(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_13296(t7,t6);}

/* k13362 in k13291 in k13288 in k13285 in make-markov in k7607 in k7604 in k5838 in k5545 in k5542 in k5538 in k5247 in k5244 in k5241 in k5238 */
static void C_ccall f_13364(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_13364,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_13368,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("ChickenBridge.scm: 363  error");
t4=*((C_word*)lf[6]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[23],((C_word*)t0)[2]);}
else{
t4=t2;
f_13368(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k13366 in k13362 in k13291 in k13288 in k13285 in make-markov in k7607 in k7604 in k5838 in k5545 in k5542 in k5538 in k5247 in k5244 in k5241 in k5238 */
static void C_ccall f_13368(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_13296(t7,t6);}

/* k13294 in k13291 in k13288 in k13285 in make-markov in k7607 in k7604 in k5838 in k5545 in k5542 in k5538 in k5247 in k5244 in k5241 in k5238 */
static void C_fcall f_13296(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_13296,NULL,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_13299,a[2]=((C_word*)t0)[4],a[3]=((C_word*)t0)[5],a[4]=((C_word*)t0)[6],a[5]=((C_word*)t0)[7],a[6]=((C_word*)t0)[8],tmp=(C_word)a,a+=7,tmp);
if(C_truep((C_word)C_i_nullp(((C_word*)((C_word*)t0)[3])[1]))){
t3=t2;
f_13299(2,t3,C_SCHEME_UNDEFINED);}
else{
C_trace("ChickenBridge.scm: 363  error");
t3=*((C_word*)lf[6]+1);
((C_proc4)C_retrieve_proc(t3))(4,t3,t2,lf[7],((C_word*)t0)[2]);}}

/* k13297 in k13294 in k13291 in k13288 in k13285 in make-markov in k7607 in k7604 in k5838 in k5545 in k5542 in k5538 in k5247 in k5244 in k5241 in k5238 */
static void C_ccall f_13299(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_13299,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_13302,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],tmp=(C_word)a,a+=7,tmp);
C_trace("ChickenBridge.scm: 363  %alloc-pattern");
f_8557(t2);}

/* k13300 in k13297 in k13294 in k13291 in k13288 in k13285 in make-markov in k7607 in k7604 in k5838 in k5545 in k5542 in k5538 in k5247 in k5244 in k5241 in k5238 */
static void C_ccall f_13302(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_13302,2,t0,t1);}
t2=(C_word)C_i_length(((C_word*)((C_word*)t0)[6])[1]);
t3=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_13308,a[2]=((C_word*)t0)[6],a[3]=((C_word*)t0)[4],a[4]=t1,a[5]=((C_word*)t0)[5],tmp=(C_word)a,a+=6,tmp);
t4=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_13335,a[2]=((C_word)li164),tmp=(C_word)a,a+=3,tmp);
C_trace("ChickenBridge.scm: 363  initialize-pattern");
f_8567(t3,t1,((C_word*)((C_word*)t0)[6])[1],((C_word*)((C_word*)t0)[3])[1],((C_word*)((C_word*)t0)[2])[1],C_fix(0),t2,t2,C_retrieve2(lf[228],"next-in-markov"),t4);}

/* a13334 in k13300 in k13297 in k13294 in k13291 in k13288 in k13285 in make-markov in k7607 in k7604 in k5838 in k5545 in k5542 in k5538 in k5247 in k5244 in k5241 in k5238 */
static void C_ccall f_13335(C_word c,C_word t0,C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word ab[4],*a=ab;
if(c!=4) C_bad_argc_2(c,4,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr4,(void*)f_13335,4,t0,t1,t2,t3);}
t4=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_13343,a[2]=t2,a[3]=t1,tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 363  pattern-data");
f_8286(t4,t3);}

/* k13341 in a13334 in k13300 in k13297 in k13294 in k13291 in k13288 in k13285 in make-markov in k7607 in k7604 in k5838 in k5545 in k5542 in k5538 in k5247 in k5244 in k5241 in k5238 */
static void C_ccall f_13343(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("for-each");
t2=*((C_word*)lf[189]+1);
((C_proc4)(void*)(*((C_word*)t2+1)))(4,t2,((C_word*)t0)[3],((C_word*)t0)[2],t1);}

/* k13306 in k13300 in k13297 in k13294 in k13291 in k13288 in k13285 in make-markov in k7607 in k7604 in k5838 in k5545 in k5542 in k5538 in k5247 in k5244 in k5241 in k5238 */
static void C_ccall f_13308(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word ab[18],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_13308,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_13311,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],tmp=(C_word)a,a+=5,tmp);
if(C_truep((C_word)C_i_pairp(((C_word*)((C_word*)t0)[3])[1]))){
t3=t2;
f_13311(t3,C_SCHEME_UNDEFINED);}
else{
t3=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_13321,a[2]=t2,a[3]=((C_word*)t0)[3],tmp=(C_word)a,a+=4,tmp);
t4=(C_word)C_i_car(((C_word*)((C_word*)t0)[2])[1]);
t5=(C_word)C_i_car(t4);
t6=(C_word)C_i_length(t5);
t7=(C_word)C_a_i_list(&a,1,lf[226]);
if(C_truep((C_word)C_i_lessp(t6,C_fix(0)))){
C_trace("ChickenBridge.scm: 361  error");
t8=*((C_word*)lf[6]+1);
((C_proc4)C_retrieve_proc(t8))(4,t8,t3,lf[227],t6);}
else{
t8=C_SCHEME_UNDEFINED;
t9=(*a=C_VECTOR_TYPE|1,a[1]=t8,tmp=(C_word)a,a+=2,tmp);
t10=C_set_block_item(t9,0,(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_6093,a[2]=t9,a[3]=((C_word)li163),tmp=(C_word)a,a+=4,tmp));
t11=(C_word)C_i_nullp(t7);
t12=(C_truep(t11)?C_SCHEME_FALSE:(C_word)C_i_car(t7));
C_trace("ChickenBridge.scm: 361  mk");
t13=((C_word*)t9)[1];
f_6093(t13,t3,t6,t12);}}}

/* mk in k13306 in k13300 in k13297 in k13294 in k13291 in k13288 in k13285 in make-markov in k7607 in k7604 in k5838 in k5545 in k5542 in k5538 in k5247 in k5244 in k5241 in k5238 */
static void C_fcall f_6093(C_word t0,C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word *a;
loop:
a=C_alloc(8);
C_check_for_interrupt;
if(!C_stack_probe(a)){
C_save_and_reclaim((void*)trf_6093,NULL,4,t0,t1,t2,t3);}
if(C_truep((C_word)C_i_nequalp(t2,C_fix(0)))){
t4=t1;
((C_proc2)(void*)(*((C_word*)t4+1)))(2,t4,C_SCHEME_END_OF_LIST);}
else{
t4=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_6110,a[2]=t3,a[3]=t1,tmp=(C_word)a,a+=4,tmp);
t5=(C_word)C_a_i_minus(&a,2,t2,C_fix(1));
C_trace("ChickenBridge.scm: 361  mk");
t7=t4;
t8=t5;
t9=t3;
t1=t7;
t2=t8;
t3=t9;
goto loop;}}

/* k6108 in mk in k13306 in k13300 in k13297 in k13294 in k13291 in k13288 in k13285 in make-markov in k7607 in k7604 in k5838 in k5545 in k5542 in k5538 in k5247 in k5244 in k5241 in k5238 */
static void C_ccall f_6110(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word ab[3],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_6110,2,t0,t1);}
t2=((C_word*)t0)[3];
((C_proc2)(void*)(*((C_word*)t2+1)))(2,t2,(C_word)C_a_i_cons(&a,2,((C_word*)t0)[2],t1));}

/* k13319 in k13306 in k13300 in k13297 in k13294 in k13291 in k13288 in k13285 in make-markov in k7607 in k7604 in k5838 in k5545 in k5542 in k5538 in k5247 in k5244 in k5241 in k5238 */
static void C_ccall f_13321(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[3])+1,t1);
t3=((C_word*)t0)[2];
f_13311(t3,t2);}

/* k13309 in k13306 in k13300 in k13297 in k13294 in k13291 in k13288 in k13285 in make-markov in k7607 in k7604 in k5838 in k5545 in k5542 in k5538 in k5247 in k5244 in k5241 in k5238 */
static void C_fcall f_13311(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[4],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_13311,NULL,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_13314,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 363  pattern-cache-set!");
f_8493(t2,((C_word*)t0)[3],((C_word*)((C_word*)t0)[2])[1]);}

/* k13312 in k13309 in k13306 in k13300 in k13297 in k13294 in k13291 in k13288 in k13285 in make-markov in k7607 in k7604 in k5838 in k5545 in k5542 in k5538 in k5247 in k5244 in k5241 in k5238 */
static void C_ccall f_13314(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
t2=((C_word*)t0)[3];
((C_proc2)(void*)(*((C_word*)t2+1)))(2,t2,((C_word*)t0)[2]);}

/* next-in-weighting in k7607 in k7604 in k5838 in k5545 in k5542 in k5538 in k5247 in k5244 in k5241 in k5238 */
static void C_ccall f_12850(C_word c,C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word ab[4],*a=ab;
if(c!=3) C_bad_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr3,(void*)f_12850,3,t0,t1,t2);}
t3=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_12854,a[2]=t2,a[3]=t1,tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 363  pattern-data");
f_8286(t3,t2);}

/* k12852 in next-in-weighting in k7607 in k7604 in k5838 in k5545 in k5542 in k5538 in k5247 in k5244 in k5241 in k5238 */
static void C_ccall f_12854(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[5],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_12854,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_12857,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=t1,tmp=(C_word)a,a+=5,tmp);
C_trace("ChickenBridge.scm: 363  pattern-period");
f_8340(t2,((C_word*)t0)[2]);}

/* k12855 in k12852 in next-in-weighting in k7607 in k7604 in k5838 in k5545 in k5542 in k5538 in k5247 in k5244 in k5241 in k5238 */
static void C_ccall f_12857(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[6],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_12857,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_12860,a[2]=t1,a[3]=((C_word*)t0)[2],a[4]=((C_word*)t0)[3],a[5]=((C_word*)t0)[4],tmp=(C_word)a,a+=6,tmp);
C_trace("ChickenBridge.scm: 363  pattern-flags");
f_8268(t2,((C_word*)t0)[2]);}

/* k12858 in k12855 in k12852 in next-in-weighting in k7607 in k7604 in k5838 in k5545 in k5542 in k5538 in k5247 in k5244 in k5241 in k5238 */
static void C_ccall f_12860(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[11],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_12860,2,t0,t1);}
t2=(C_word)C_i_cdr(((C_word*)t0)[5]);
t3=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_12866,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[5],a[4]=t2,a[5]=((C_word*)t0)[4],tmp=(C_word)a,a+=6,tmp);
t4=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_13029,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=t3,tmp=(C_word)a,a+=5,tmp);
C_trace("ChickenBridge.scm: 363  bitwise-test");
f_6215(t4,t1,C_fix(4));}

/* k13027 in k12858 in k12855 in k12852 in next-in-weighting in k7607 in k7604 in k5838 in k5545 in k5542 in k5538 in k5247 in k5244 in k5241 in k5238 */
static void C_ccall f_13029(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[5],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_13029,2,t0,t1);}
if(C_truep(t1)){
t2=((C_word*)t0)[4];
f_12866(2,t2,C_SCHEME_UNDEFINED);}
else{
t2=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_13042,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],tmp=(C_word)a,a+=5,tmp);
C_trace("ChickenBridge.scm: 363  period-count");
f_8118(t2,((C_word*)t0)[2]);}}

/* k13040 in k13027 in k12858 in k12855 in k12852 in next-in-weighting in k7607 in k7604 in k5838 in k5545 in k5542 in k5538 in k5247 in k5244 in k5241 in k5238 */
static void C_ccall f_13042(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[5],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_13042,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_13046,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=t1,tmp=(C_word)a,a+=5,tmp);
C_trace("ChickenBridge.scm: 363  period-length");
f_8136(t2,((C_word*)t0)[2]);}

/* k13044 in k13040 in k13027 in k12858 in k12855 in k12852 in next-in-weighting in k7607 in k7604 in k5838 in k5545 in k5542 in k5538 in k5247 in k5244 in k5241 in k5238 */
static void C_ccall f_13046(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
if(C_truep((C_word)C_i_nequalp(((C_word*)t0)[4],t1))){
C_trace("ChickenBridge.scm: 363  recalc-weightings");
f_12738(((C_word*)t0)[3],((C_word*)t0)[2],C_SCHEME_FALSE);}
else{
t2=((C_word*)t0)[3];
f_12866(2,t2,C_SCHEME_UNDEFINED);}}

/* k12864 in k12858 in k12855 in k12852 in next-in-weighting in k7607 in k7604 in k5838 in k5545 in k5542 in k5538 in k5247 in k5244 in k5241 in k5238 */
static void C_ccall f_12866(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[14],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_12866,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_12872,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],tmp=(C_word)a,a+=6,tmp);
if(C_truep((C_word)C_i_nullp(((C_word*)t0)[4]))){
t3=t2;
f_12872(t3,C_SCHEME_FALSE);}
else{
t3=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_13003,a[2]=((C_word*)t0)[4],a[3]=t2,tmp=(C_word)a,a+=4,tmp);
t4=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_13022,a[2]=((C_word*)t0)[4],a[3]=t3,tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 363  random-item-count");
f_11888(t4,((C_word*)t0)[4]);}}

/* k13020 in k12864 in k12858 in k12855 in k12852 in next-in-weighting in k7607 in k7604 in k5838 in k5545 in k5542 in k5538 in k5247 in k5244 in k5241 in k5238 */
static void C_ccall f_13022(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[4],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_13022,2,t0,t1);}
t2=(C_word)C_a_i_plus(&a,2,C_fix(1),t1);
C_trace("ChickenBridge.scm: 363  random-item-count-set!");
f_11879(((C_word*)t0)[3],((C_word*)t0)[2],t2);}

/* k13001 in k12864 in k12858 in k12855 in k12852 in next-in-weighting in k7607 in k7604 in k5838 in k5545 in k5542 in k5538 in k5247 in k5244 in k5241 in k5238 */
static void C_ccall f_13003(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[4],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_13003,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_13010,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 363  random-item-count");
f_11888(t2,((C_word*)t0)[2]);}

/* k13008 in k13001 in k12864 in k12858 in k12855 in k12852 in next-in-weighting in k7607 in k7604 in k5838 in k5545 in k5542 in k5538 in k5247 in k5244 in k5241 in k5238 */
static void C_ccall f_13010(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[4],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_13010,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_13014,a[2]=t1,a[3]=((C_word*)t0)[3],tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 363  random-item-min");
f_11852(t2,((C_word*)t0)[2]);}

/* k13012 in k13008 in k13001 in k12864 in k12858 in k12855 in k12852 in next-in-weighting in k7607 in k7604 in k5838 in k5545 in k5542 in k5538 in k5247 in k5244 in k5241 in k5238 */
static void C_ccall f_13014(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
t2=((C_word*)t0)[3];
f_12872(t2,(C_word)C_i_lessp(((C_word*)t0)[2],t1));}

/* k12870 in k12864 in k12858 in k12855 in k12852 in next-in-weighting in k7607 in k7604 in k5838 in k5545 in k5542 in k5538 in k5247 in k5244 in k5241 in k5238 */
static void C_fcall f_12872(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[5],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_12872,NULL,2,t0,t1);}
if(C_truep(t1)){
C_trace("ChickenBridge.scm: 363  random-item-datum");
f_11798(((C_word*)t0)[5],((C_word*)t0)[4]);}
else{
t2=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_12878,a[2]=((C_word*)t0)[4],a[3]=((C_word*)t0)[5],a[4]=((C_word*)t0)[3],tmp=(C_word)a,a+=5,tmp);
C_trace("ChickenBridge.scm: 363  pattern-cache");
f_8502(t2,((C_word*)t0)[2]);}}

/* k12876 in k12870 in k12864 in k12858 in k12855 in k12852 in next-in-weighting in k7607 in k7604 in k5838 in k5545 in k5542 in k5538 in k5247 in k5244 in k5241 in k5238 */
static void C_ccall f_12878(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word ab[19],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_12878,2,t0,t1);}
t2=(C_word)C_i_car(((C_word*)t0)[4]);
t3=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_12882,a[2]=((C_word)li159),tmp=(C_word)a,a+=3,tmp);
t4=C_SCHEME_FALSE;
t5=(*a=C_VECTOR_TYPE|1,a[1]=t4,tmp=(C_word)a,a+=2,tmp);
t6=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_12920,a[2]=t2,a[3]=((C_word*)t0)[2],a[4]=((C_word*)t0)[3],a[5]=t5,a[6]=((C_word*)t0)[4],tmp=(C_word)a,a+=7,tmp);
t7=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_12962,a[2]=t6,a[3]=t5,a[4]=t1,a[5]=t2,a[6]=t3,tmp=(C_word)a,a+=7,tmp);
C_trace("ChickenBridge.scm: 363  pick");
f_12882(t7,t2,t1);}

/* k12960 in k12876 in k12870 in k12864 in k12858 in k12855 in k12852 in next-in-weighting in k7607 in k7604 in k5838 in k5545 in k5542 in k5538 in k5247 in k5244 in k5241 in k5238 */
static void C_ccall f_12962(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[10],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_12962,2,t0,t1);}
t2=C_SCHEME_UNDEFINED;
t3=(*a=C_VECTOR_TYPE|1,a[1]=t2,tmp=(C_word)a,a+=2,tmp);
t4=C_set_block_item(t3,0,(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_12964,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=t3,a[7]=((C_word)li161),tmp=(C_word)a,a+=8,tmp));
t5=((C_word*)t3)[1];
f_12964(t5,((C_word*)t0)[2],t1);}

/* do1589 in k12960 in k12876 in k12870 in k12864 in k12858 in k12855 in k12852 in next-in-weighting in k7607 in k7604 in k5838 in k5545 in k5542 in k5538 in k5247 in k5244 in k5241 in k5238 */
static void C_fcall f_12964(C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word t5;
C_word ab[13],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_12964,NULL,3,t0,t1,t2);}
t3=(*a=C_CLOSURE_TYPE|8,a[1]=(C_word)f_12983,a[2]=t2,a[3]=((C_word*)t0)[2],a[4]=((C_word*)t0)[3],a[5]=((C_word*)t0)[4],a[6]=((C_word*)t0)[5],a[7]=t1,a[8]=((C_word*)t0)[6],tmp=(C_word)a,a+=9,tmp);
t4=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_12986,a[2]=t2,a[3]=t3,tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 363  random-item-max");
f_11870(t4,t2);}

/* k12984 in do1589 in k12960 in k12876 in k12870 in k12864 in k12858 in k12855 in k12852 in next-in-weighting in k7607 in k7604 in k5838 in k5545 in k5542 in k5538 in k5247 in k5244 in k5241 in k5238 */
static void C_ccall f_12986(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[4],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_12986,2,t0,t1);}
if(C_truep(t1)){
t2=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_12993,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 363  random-item-count");
f_11888(t2,((C_word*)t0)[2]);}
else{
t2=((C_word*)t0)[3];
f_12983(t2,C_SCHEME_FALSE);}}

/* k12991 in k12984 in do1589 in k12960 in k12876 in k12870 in k12864 in k12858 in k12855 in k12852 in next-in-weighting in k7607 in k7604 in k5838 in k5545 in k5542 in k5538 in k5247 in k5244 in k5241 in k5238 */
static void C_ccall f_12993(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[4],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_12993,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_12997,a[2]=t1,a[3]=((C_word*)t0)[3],tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 363  random-item-max");
f_11870(t2,((C_word*)t0)[2]);}

/* k12995 in k12991 in k12984 in do1589 in k12960 in k12876 in k12870 in k12864 in k12858 in k12855 in k12852 in next-in-weighting in k7607 in k7604 in k5838 in k5545 in k5542 in k5538 in k5247 in k5244 in k5241 in k5238 */
static void C_ccall f_12997(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
t2=((C_word*)t0)[3];
f_12983(t2,(C_word)C_i_nequalp(((C_word*)t0)[2],t1));}

/* k12981 in do1589 in k12960 in k12876 in k12870 in k12864 in k12858 in k12855 in k12852 in next-in-weighting in k7607 in k7604 in k5838 in k5545 in k5542 in k5538 in k5247 in k5244 in k5241 in k5238 */
static void C_fcall f_12983(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[4],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_12983,NULL,2,t0,t1);}
if(C_truep(t1)){
t2=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_12979,a[2]=((C_word*)t0)[7],a[3]=((C_word*)t0)[8],tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 363  pick");
f_12882(t2,((C_word*)t0)[5],((C_word*)t0)[4]);}
else{
t2=C_mutate(((C_word *)((C_word*)t0)[3])+1,((C_word*)t0)[2]);
t3=((C_word*)t0)[7];
((C_proc2)(void*)(*((C_word*)t3+1)))(2,t3,t2);}}

/* k12977 in k12981 in do1589 in k12960 in k12876 in k12870 in k12864 in k12858 in k12855 in k12852 in next-in-weighting in k7607 in k7604 in k5838 in k5545 in k5542 in k5538 in k5247 in k5244 in k5241 in k5238 */
static void C_ccall f_12979(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
t2=((C_word*)((C_word*)t0)[3])[1];
f_12964(t2,((C_word*)t0)[2],t1);}

/* k12918 in k12876 in k12870 in k12864 in k12858 in k12855 in k12852 in next-in-weighting in k7607 in k7604 in k5838 in k5545 in k5542 in k5538 in k5247 in k5244 in k5241 in k5238 */
static void C_ccall f_12920(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word ab[11],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_12920,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_12923,a[2]=((C_word*)t0)[4],a[3]=((C_word*)t0)[5],a[4]=((C_word*)t0)[6],tmp=(C_word)a,a+=5,tmp);
t3=(C_word)C_eqp(((C_word*)((C_word*)t0)[5])[1],((C_word*)t0)[3]);
if(C_truep(t3)){
t4=t2;
f_12923(2,t4,C_SCHEME_UNDEFINED);}
else{
t4=C_SCHEME_UNDEFINED;
t5=(*a=C_VECTOR_TYPE|1,a[1]=t4,tmp=(C_word)a,a+=2,tmp);
t6=C_set_block_item(t5,0,(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_12937,a[2]=t5,a[3]=((C_word)li160),tmp=(C_word)a,a+=4,tmp));
t7=((C_word*)t5)[1];
f_12937(t7,t2,((C_word*)t0)[2]);}}

/* do1593 in k12918 in k12876 in k12870 in k12864 in k12858 in k12855 in k12852 in next-in-weighting in k7607 in k7604 in k5838 in k5545 in k5542 in k5538 in k5247 in k5244 in k5241 in k5238 */
static void C_fcall f_12937(C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word t5;
C_word ab[5],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_12937,NULL,3,t0,t1,t2);}
if(C_truep((C_word)C_i_nullp(t2))){
t3=t1;
((C_proc2)(void*)(*((C_word*)t3+1)))(2,t3,C_SCHEME_FALSE);}
else{
t3=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_12947,a[2]=t1,a[3]=((C_word*)t0)[2],a[4]=t2,tmp=(C_word)a,a+=5,tmp);
t4=(C_word)C_i_car(t2);
C_trace("ChickenBridge.scm: 363  random-item-count-set!");
f_11879(t3,t4,C_fix(0));}}

/* k12945 in do1593 in k12918 in k12876 in k12870 in k12864 in k12858 in k12855 in k12852 in next-in-weighting in k7607 in k7604 in k5838 in k5545 in k5542 in k5538 in k5247 in k5244 in k5241 in k5238 */
static void C_ccall f_12947(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word *a;
t2=(C_word)C_i_cdr(((C_word*)t0)[4]);
t3=((C_word*)((C_word*)t0)[3])[1];
f_12937(t3,((C_word*)t0)[2],t2);}

/* k12921 in k12918 in k12876 in k12870 in k12864 in k12858 in k12855 in k12852 in next-in-weighting in k7607 in k7604 in k5838 in k5545 in k5542 in k5538 in k5247 in k5244 in k5241 in k5238 */
static void C_ccall f_12923(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word *a;
t2=(C_word)C_i_set_cdr(((C_word*)t0)[4],((C_word*)((C_word*)t0)[3])[1]);
C_trace("ChickenBridge.scm: 363  random-item-datum");
f_11798(((C_word*)t0)[2],((C_word*)((C_word*)t0)[3])[1]);}

/* pick in k12876 in k12870 in k12864 in k12858 in k12855 in k12852 in next-in-weighting in k7607 in k7604 in k5838 in k5545 in k5542 in k5538 in k5247 in k5244 in k5241 in k5238 */
static void C_fcall f_12882(C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word ab[4],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_12882,NULL,3,t1,t2,t3);}
t4=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_12890,a[2]=t2,a[3]=t1,tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 363  random");
t5=C_retrieve(lf[205]);
((C_proc3)C_retrieve_proc(t5))(3,t5,t4,t3);}

/* k12888 in pick in k12876 in k12870 in k12864 in k12858 in k12855 in k12852 in next-in-weighting in k7607 in k7604 in k5838 in k5545 in k5542 in k5538 in k5247 in k5244 in k5241 in k5238 */
static void C_ccall f_12890(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[6],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_12890,2,t0,t1);}
t2=C_SCHEME_UNDEFINED;
t3=(*a=C_VECTOR_TYPE|1,a[1]=t2,tmp=(C_word)a,a+=2,tmp);
t4=C_set_block_item(t3,0,(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_12892,a[2]=t3,a[3]=((C_word)li158),tmp=(C_word)a,a+=4,tmp));
t5=((C_word*)t3)[1];
f_12892(t5,((C_word*)t0)[3],((C_word*)t0)[2],t1);}

/* do1584 in k12888 in pick in k12876 in k12870 in k12864 in k12858 in k12855 in k12852 in next-in-weighting in k7607 in k7604 in k5838 in k5545 in k5542 in k5538 in k5247 in k5244 in k5241 in k5238 */
static void C_fcall f_12892(C_word t0,C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word t6;
C_word ab[6],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_12892,NULL,4,t0,t1,t2,t3);}
t4=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_12913,a[2]=((C_word*)t0)[2],a[3]=t2,a[4]=t1,a[5]=t3,tmp=(C_word)a,a+=6,tmp);
t5=(C_word)C_i_car(t2);
C_trace("ChickenBridge.scm: 363  random-item-index");
f_11816(t4,t5);}

/* k12911 in do1584 in k12888 in pick in k12876 in k12870 in k12864 in k12858 in k12855 in k12852 in next-in-weighting in k7607 in k7604 in k5838 in k5545 in k5542 in k5538 in k5247 in k5244 in k5241 in k5238 */
static void C_ccall f_12913(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word *a;
if(C_truep((C_word)C_i_lessp(((C_word*)t0)[5],t1))){
t2=((C_word*)t0)[4];
((C_proc2)(void*)(*((C_word*)t2+1)))(2,t2,(C_word)C_i_car(((C_word*)t0)[3]));}
else{
t2=(C_word)C_i_cdr(((C_word*)t0)[3]);
t3=((C_word*)((C_word*)t0)[2])[1];
f_12892(t3,((C_word*)t0)[4],t2,((C_word*)t0)[5]);}}

/* recalc-weightings in k7607 in k7604 in k5838 in k5545 in k5542 in k5538 in k5247 in k5244 in k5241 in k5238 */
static void C_fcall f_12738(C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word ab[5],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_12738,NULL,3,t1,t2,t3);}
t4=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_12848,a[2]=t1,a[3]=t2,a[4]=t3,tmp=(C_word)a,a+=5,tmp);
C_trace("ChickenBridge.scm: 363  pattern-data");
f_8286(t4,t2);}

/* k12846 in recalc-weightings in k7607 in k7604 in k5838 in k5545 in k5542 in k5538 in k5247 in k5244 in k5241 in k5238 */
static void C_ccall f_12848(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word ab[16],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_12848,2,t0,t1);}
t2=(C_word)C_i_car(t1);
t3=lf[224];
t4=(*a=C_VECTOR_TYPE|1,a[1]=t3,tmp=(C_word)a,a+=2,tmp);
t5=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_12745,a[2]=t2,a[3]=((C_word*)t0)[2],a[4]=t4,a[5]=((C_word*)t0)[3],a[6]=((C_word*)t0)[4],tmp=(C_word)a,a+=7,tmp);
t6=C_SCHEME_UNDEFINED;
t7=(*a=C_VECTOR_TYPE|1,a[1]=t6,tmp=(C_word)a,a+=2,tmp);
t8=C_set_block_item(t7,0,(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_12807,a[2]=t7,a[3]=t4,a[4]=((C_word)li156),tmp=(C_word)a,a+=5,tmp));
t9=((C_word*)t7)[1];
f_12807(t9,t5,t2);}

/* do1556 in k12846 in recalc-weightings in k7607 in k7604 in k5838 in k5545 in k5542 in k5538 in k5247 in k5244 in k5241 in k5238 */
static void C_fcall f_12807(C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_12807,NULL,3,t0,t1,t2);}
if(C_truep((C_word)C_i_nullp(t2))){
t3=t1;
((C_proc2)(void*)(*((C_word*)t3+1)))(2,t3,C_SCHEME_FALSE);}
else{
t3=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_12836,a[2]=t1,a[3]=((C_word*)t0)[2],a[4]=t2,a[5]=((C_word*)t0)[3],tmp=(C_word)a,a+=6,tmp);
t4=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_12840,a[2]=t3,tmp=(C_word)a,a+=3,tmp);
t5=(C_word)C_i_car(t2);
C_trace("ChickenBridge.scm: 363  random-item-weight");
f_11834(t4,t5);}}

/* k12838 in do1556 in k12846 in recalc-weightings in k7607 in k7604 in k5838 in k5545 in k5542 in k5538 in k5247 in k5244 in k5241 in k5238 */
static void C_ccall f_12840(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 363  next-1");
f_8908(((C_word*)t0)[2],t1);}

/* k12834 in do1556 in k12846 in recalc-weightings in k7607 in k7604 in k5838 in k5545 in k5542 in k5538 in k5247 in k5244 in k5241 in k5238 */
static void C_ccall f_12836(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_12836,2,t0,t1);}
t2=(C_word)C_a_i_plus(&a,2,((C_word*)((C_word*)t0)[5])[1],t1);
t3=C_mutate(((C_word *)((C_word*)t0)[5])+1,t2);
t4=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_12821,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],tmp=(C_word)a,a+=5,tmp);
t5=(C_word)C_i_car(((C_word*)t0)[4]);
C_trace("ChickenBridge.scm: 363  random-item-index-set!");
f_11807(t4,t5,((C_word*)((C_word*)t0)[5])[1]);}

/* k12819 in k12834 in do1556 in k12846 in recalc-weightings in k7607 in k7604 in k5838 in k5545 in k5542 in k5538 in k5247 in k5244 in k5241 in k5238 */
static void C_ccall f_12821(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word *a;
t2=(C_word)C_i_cdr(((C_word*)t0)[4]);
t3=((C_word*)((C_word*)t0)[3])[1];
f_12807(t3,((C_word*)t0)[2],t2);}

/* k12743 in k12846 in recalc-weightings in k7607 in k7604 in k5838 in k5545 in k5542 in k5538 in k5247 in k5244 in k5241 in k5238 */
static void C_ccall f_12745(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[8],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_12745,2,t0,t1);}
if(C_truep(((C_word*)t0)[6])){
t2=C_SCHEME_UNDEFINED;
t3=(*a=C_VECTOR_TYPE|1,a[1]=t2,tmp=(C_word)a,a+=2,tmp);
t4=C_set_block_item(t3,0,(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_12753,a[2]=((C_word*)t0)[4],a[3]=t3,a[4]=((C_word*)t0)[5],a[5]=((C_word)li155),tmp=(C_word)a,a+=6,tmp));
t5=((C_word*)t3)[1];
f_12753(t5,((C_word*)t0)[3],((C_word*)t0)[2],C_fix(0),C_fix(0));}
else{
C_trace("ChickenBridge.scm: 363  pattern-cache-set!");
f_8493(((C_word*)t0)[3],((C_word*)t0)[5],((C_word*)((C_word*)t0)[4])[1]);}}

/* do1562 in k12743 in k12846 in recalc-weightings in k7607 in k7604 in k5838 in k5545 in k5542 in k5538 in k5247 in k5244 in k5241 in k5238 */
static void C_fcall f_12753(C_word t0,C_word t1,C_word t2,C_word t3,C_word t4){
C_word tmp;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word ab[15],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_12753,NULL,5,t0,t1,t2,t3,t4);}
t5=(*a=C_VECTOR_TYPE|1,a[1]=t3,tmp=(C_word)a,a+=2,tmp);
t6=(*a=C_VECTOR_TYPE|1,a[1]=t4,tmp=(C_word)a,a+=2,tmp);
if(C_truep((C_word)C_i_nullp(t2))){
C_trace("ChickenBridge.scm: 363  pattern-cache-set!");
f_8493(t1,((C_word*)t0)[4],((C_word*)t6)[1]);}
else{
t7=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_12786,a[2]=t1,a[3]=((C_word*)t0)[3],a[4]=t2,a[5]=t6,a[6]=t5,tmp=(C_word)a,a+=7,tmp);
t8=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_12798,a[2]=t7,a[3]=((C_word*)t0)[2],tmp=(C_word)a,a+=4,tmp);
t9=(C_word)C_i_car(t2);
C_trace("ChickenBridge.scm: 363  random-item-index");
f_11816(t8,t9);}}

/* k12796 in do1562 in k12743 in k12846 in recalc-weightings in k7607 in k7604 in k5838 in k5545 in k5542 in k5538 in k5247 in k5244 in k5241 in k5238 */
static void C_ccall f_12798(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[8],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_12798,2,t0,t1);}
t2=(C_word)C_a_i_divide(&a,2,t1,((C_word*)((C_word*)t0)[3])[1]);
t3=(C_word)C_a_i_times(&a,2,t2,C_fix(1073741823));
C_trace("ChickenBridge.scm: 363  floor");
t4=*((C_word*)lf[132]+1);
((C_proc3)C_retrieve_proc(t4))(3,t4,((C_word*)t0)[2],t3);}

/* k12784 in do1562 in k12743 in k12846 in recalc-weightings in k7607 in k7604 in k5838 in k5545 in k5542 in k5538 in k5247 in k5244 in k5241 in k5238 */
static void C_ccall f_12786(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_12786,2,t0,t1);}
t2=(C_word)C_i_inexact_to_exact(t1);
t3=C_mutate(((C_word *)((C_word*)t0)[6])+1,t2);
t4=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_12770,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[5],tmp=(C_word)a,a+=7,tmp);
t5=(C_word)C_i_car(((C_word*)t0)[4]);
C_trace("ChickenBridge.scm: 363  random-item-index-set!");
f_11807(t4,t5,((C_word*)((C_word*)t0)[6])[1]);}

/* k12768 in k12784 in do1562 in k12743 in k12846 in recalc-weightings in k7607 in k7604 in k5838 in k5545 in k5542 in k5538 in k5247 in k5244 in k5241 in k5238 */
static void C_ccall f_12770(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,((C_word*)((C_word*)t0)[5])[1]);
t3=(C_word)C_i_cdr(((C_word*)t0)[4]);
t4=((C_word*)((C_word*)t0)[3])[1];
f_12753(t4,((C_word*)t0)[2],t3,((C_word*)((C_word*)t0)[5])[1],((C_word*)((C_word*)t0)[6])[1]);}

/* make-weighting in k7607 in k7604 in k5838 in k5545 in k5542 in k5538 in k5247 in k5244 in k5241 in k5238 */
static void C_ccall f_11971(C_word c,C_word t0,C_word t1,C_word t2,...){
C_word tmp;
C_word t3;
va_list v;
C_word *a,c2=c;
C_save_rest(t2,c2,3);
if(c<3) C_bad_min_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_demand(c*C_SIZEOF_PAIR+7)){
C_save_and_reclaim((void*)tr3r,(void*)f_11971r,3,t0,t1,t2);}
else{
a=C_alloc((c-3)*3);
t3=C_restore_rest(a,C_rest_count(0));
f_11971r(t0,t1,t2,t3);}}

static void C_ccall f_11971r(C_word t0,C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word t6;
C_word *a=C_alloc(7);
t4=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_11975,a[2]=t1,a[3]=t3,tmp=(C_word)a,a+=4,tmp);
t5=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_12288,a[2]=((C_word)li153),tmp=(C_word)a,a+=3,tmp);
C_trace("map");
t6=*((C_word*)lf[19]+1);
((C_proc4)(void*)(*((C_word*)t6+1)))(4,t6,t4,t5,t2);}

/* %make-random-item in make-weighting in k7607 in k7604 in k5838 in k5545 in k5542 in k5538 in k5247 in k5244 in k5241 in k5238 */
static void C_ccall f_12288(C_word c,C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word ab[9],*a=ab;
if(c!=3) C_bad_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr3,(void*)f_12288,3,t0,t1,t2);}
t3=C_SCHEME_FALSE;
t4=(*a=C_VECTOR_TYPE|1,a[1]=t3,tmp=(C_word)a,a+=2,tmp);
t5=C_SCHEME_END_OF_LIST;
t6=(*a=C_VECTOR_TYPE|1,a[1]=t5,tmp=(C_word)a,a+=2,tmp);
t7=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_12295,a[2]=t4,a[3]=t1,a[4]=t6,tmp=(C_word)a,a+=5,tmp);
if(C_truep((C_word)C_i_pairp(t2))){
t8=(C_word)C_i_car(t2);
t9=C_set_block_item(t4,0,t8);
t10=(C_word)C_i_cdr(t2);
t11=C_set_block_item(t6,0,t10);
t12=t7;
f_12295(t12,t11);}
else{
t8=C_set_block_item(t4,0,t2);
t9=t7;
f_12295(t9,t8);}}

/* k12293 in %make-random-item in make-weighting in k7607 in k7604 in k5838 in k5545 in k5542 in k5538 in k5247 in k5244 in k5241 in k5238 */
static void C_fcall f_12295(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word t14;
C_word t15;
C_word t16;
C_word t17;
C_word t18;
C_word t19;
C_word t20;
C_word t21;
C_word t22;
C_word t23;
C_word t24;
C_word t25;
C_word t26;
C_word t27;
C_word ab[59],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_12295,NULL,2,t0,t1);}
t2=C_fix(1);
t3=(*a=C_VECTOR_TYPE|1,a[1]=t2,tmp=(C_word)a,a+=2,tmp);
t4=C_fix(1);
t5=(*a=C_VECTOR_TYPE|1,a[1]=t4,tmp=(C_word)a,a+=2,tmp);
t6=C_SCHEME_FALSE;
t7=(*a=C_VECTOR_TYPE|1,a[1]=t6,tmp=(C_word)a,a+=2,tmp);
t8=C_SCHEME_FALSE;
t9=(*a=C_VECTOR_TYPE|1,a[1]=t8,tmp=(C_word)a,a+=2,tmp);
t10=C_SCHEME_FALSE;
t11=(*a=C_VECTOR_TYPE|1,a[1]=t10,tmp=(C_word)a,a+=2,tmp);
t12=C_SCHEME_FALSE;
t13=(*a=C_VECTOR_TYPE|1,a[1]=t12,tmp=(C_word)a,a+=2,tmp);
t14=((C_word*)((C_word*)t0)[4])[1];
t15=(*a=C_VECTOR_TYPE|1,a[1]=t14,tmp=(C_word)a,a+=2,tmp);
t16=C_SCHEME_FALSE;
t17=(*a=C_VECTOR_TYPE|1,a[1]=t16,tmp=(C_word)a,a+=2,tmp);
t18=(*a=C_CLOSURE_TYPE|12,a[1]=(C_word)f_12298,a[2]=t13,a[3]=t11,a[4]=t17,a[5]=t9,a[6]=((C_word*)t0)[4],a[7]=t15,a[8]=t7,a[9]=t5,a[10]=t3,a[11]=((C_word*)t0)[2],a[12]=((C_word*)t0)[3],tmp=(C_word)a,a+=13,tmp);
if(C_truep((C_word)C_i_nullp(((C_word*)t15)[1]))){
t19=t18;
f_12298(t19,C_SCHEME_UNDEFINED);}
else{
t19=(C_word)C_i_car(((C_word*)t15)[1]);
t20=(C_word)C_eqp(t19,lf[221]);
if(C_truep(t20)){
t21=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_12601,a[2]=((C_word*)t0)[4],a[3]=t18,a[4]=t15,a[5]=t17,a[6]=t9,a[7]=t3,tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)t9)[1])){
C_trace("ChickenBridge.scm: 363  error");
t22=*((C_word*)lf[6]+1);
((C_proc4)C_retrieve_proc(t22))(4,t22,t21,lf[21],lf[221]);}
else{
t22=t21;
f_12601(2,t22,C_SCHEME_UNDEFINED);}}
else{
t21=(C_word)C_eqp(t19,lf[222]);
if(C_truep(t21)){
t22=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_12636,a[2]=((C_word*)t0)[4],a[3]=t18,a[4]=t15,a[5]=t17,a[6]=t11,a[7]=t5,tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)t11)[1])){
C_trace("ChickenBridge.scm: 363  error");
t23=*((C_word*)lf[6]+1);
((C_proc4)C_retrieve_proc(t23))(4,t23,t22,lf[21],lf[222]);}
else{
t23=t22;
f_12636(2,t23,C_SCHEME_UNDEFINED);}}
else{
t22=(C_word)C_eqp(t19,lf[223]);
if(C_truep(t22)){
t23=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_12671,a[2]=((C_word*)t0)[4],a[3]=t18,a[4]=t15,a[5]=t17,a[6]=t13,a[7]=t7,tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)t13)[1])){
C_trace("ChickenBridge.scm: 363  error");
t24=*((C_word*)lf[6]+1);
((C_proc4)C_retrieve_proc(t24))(4,t24,t23,lf[21],lf[223]);}
else{
t24=t23;
f_12671(2,t24,C_SCHEME_UNDEFINED);}}
else{
t23=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_12700,a[2]=t18,a[3]=t9,a[4]=t3,a[5]=t15,tmp=(C_word)a,a+=6,tmp);
if(C_truep(((C_word*)t17)[1])){
C_trace("ChickenBridge.scm: 363  error");
t24=*((C_word*)lf[6]+1);
((C_proc4)C_retrieve_proc(t24))(4,t24,t23,lf[12],((C_word*)((C_word*)t0)[4])[1]);}
else{
t24=t23;
f_12700(2,t24,C_SCHEME_UNDEFINED);}}}}}}

/* k12698 in k12293 in %make-random-item in make-weighting in k7607 in k7604 in k5838 in k5545 in k5542 in k5538 in k5247 in k5244 in k5241 in k5238 */
static void C_ccall f_12700(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_12700,2,t0,t1);}
t2=(C_word)C_i_car(((C_word*)((C_word*)t0)[5])[1]);
t3=C_mutate(((C_word *)((C_word*)t0)[4])+1,t2);
t4=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_12707,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[5],a[4]=((C_word*)t0)[3],tmp=(C_word)a,a+=5,tmp);
t5=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_12715,a[2]=((C_word*)t0)[4],a[3]=t4,tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 363  keyword?");
t6=C_retrieve(lf[15]);
((C_proc3)C_retrieve_proc(t6))(3,t6,t5,((C_word*)((C_word*)t0)[4])[1]);}

/* k12713 in k12698 in k12293 in %make-random-item in make-weighting in k7607 in k7604 in k5838 in k5545 in k5542 in k5538 in k5247 in k5244 in k5241 in k5238 */
static void C_ccall f_12715(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
if(C_truep(t1)){
C_trace("ChickenBridge.scm: 363  error");
t2=*((C_word*)lf[6]+1);
((C_proc4)C_retrieve_proc(t2))(4,t2,((C_word*)t0)[3],lf[16],((C_word*)((C_word*)t0)[2])[1]);}
else{
t2=((C_word*)t0)[3];
f_12707(2,t2,C_SCHEME_UNDEFINED);}}

/* k12705 in k12698 in k12293 in %make-random-item in make-weighting in k7607 in k7604 in k5838 in k5545 in k5542 in k5538 in k5247 in k5244 in k5241 in k5238 */
static void C_ccall f_12707(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word *a;
t2=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[3])[1]);
t4=C_mutate(((C_word *)((C_word*)t0)[3])+1,t3);
t5=((C_word*)t0)[2];
f_12298(t5,t4);}

/* k12669 in k12293 in %make-random-item in make-weighting in k7607 in k7604 in k5838 in k5545 in k5542 in k5538 in k5247 in k5244 in k5241 in k5238 */
static void C_ccall f_12671(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_12671,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_12675,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("ChickenBridge.scm: 363  error");
t4=*((C_word*)lf[6]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[23],((C_word*)((C_word*)t0)[2])[1]);}
else{
t4=t2;
f_12675(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k12673 in k12669 in k12293 in %make-random-item in make-weighting in k7607 in k7604 in k5838 in k5545 in k5542 in k5538 in k5247 in k5244 in k5241 in k5238 */
static void C_ccall f_12675(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_12298(t7,t6);}

/* k12634 in k12293 in %make-random-item in make-weighting in k7607 in k7604 in k5838 in k5545 in k5542 in k5538 in k5247 in k5244 in k5241 in k5238 */
static void C_ccall f_12636(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_12636,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_12640,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("ChickenBridge.scm: 363  error");
t4=*((C_word*)lf[6]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[23],((C_word*)((C_word*)t0)[2])[1]);}
else{
t4=t2;
f_12640(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k12638 in k12634 in k12293 in %make-random-item in make-weighting in k7607 in k7604 in k5838 in k5545 in k5542 in k5538 in k5247 in k5244 in k5241 in k5238 */
static void C_ccall f_12640(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_12298(t7,t6);}

/* k12599 in k12293 in %make-random-item in make-weighting in k7607 in k7604 in k5838 in k5545 in k5542 in k5538 in k5247 in k5244 in k5241 in k5238 */
static void C_ccall f_12601(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_12601,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_12605,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("ChickenBridge.scm: 363  error");
t4=*((C_word*)lf[6]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[23],((C_word*)((C_word*)t0)[2])[1]);}
else{
t4=t2;
f_12605(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k12603 in k12599 in k12293 in %make-random-item in make-weighting in k7607 in k7604 in k5838 in k5545 in k5542 in k5538 in k5247 in k5244 in k5241 in k5238 */
static void C_ccall f_12605(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_12298(t7,t6);}

/* k12296 in k12293 in %make-random-item in make-weighting in k7607 in k7604 in k5838 in k5545 in k5542 in k5538 in k5247 in k5244 in k5241 in k5238 */
static void C_fcall f_12298(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word ab[43],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_12298,NULL,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|12,a[1]=(C_word)f_12301,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],a[7]=((C_word*)t0)[7],a[8]=((C_word*)t0)[8],a[9]=((C_word*)t0)[9],a[10]=((C_word*)t0)[10],a[11]=((C_word*)t0)[11],a[12]=((C_word*)t0)[12],tmp=(C_word)a,a+=13,tmp);
if(C_truep((C_word)C_i_nullp(((C_word*)((C_word*)t0)[7])[1]))){
t3=t2;
f_12301(t3,C_SCHEME_UNDEFINED);}
else{
t3=(C_word)C_i_car(((C_word*)((C_word*)t0)[7])[1]);
t4=(C_word)C_eqp(t3,lf[221]);
if(C_truep(t4)){
t5=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_12466,a[2]=((C_word*)t0)[6],a[3]=t2,a[4]=((C_word*)t0)[7],a[5]=((C_word*)t0)[4],a[6]=((C_word*)t0)[5],a[7]=((C_word*)t0)[10],tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)((C_word*)t0)[5])[1])){
C_trace("ChickenBridge.scm: 363  error");
t6=*((C_word*)lf[6]+1);
((C_proc4)C_retrieve_proc(t6))(4,t6,t5,lf[21],lf[221]);}
else{
t6=t5;
f_12466(2,t6,C_SCHEME_UNDEFINED);}}
else{
t5=(C_word)C_eqp(t3,lf[222]);
if(C_truep(t5)){
t6=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_12501,a[2]=((C_word*)t0)[6],a[3]=t2,a[4]=((C_word*)t0)[7],a[5]=((C_word*)t0)[4],a[6]=((C_word*)t0)[3],a[7]=((C_word*)t0)[9],tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)((C_word*)t0)[3])[1])){
C_trace("ChickenBridge.scm: 363  error");
t7=*((C_word*)lf[6]+1);
((C_proc4)C_retrieve_proc(t7))(4,t7,t6,lf[21],lf[222]);}
else{
t7=t6;
f_12501(2,t7,C_SCHEME_UNDEFINED);}}
else{
t6=(C_word)C_eqp(t3,lf[223]);
if(C_truep(t6)){
t7=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_12536,a[2]=((C_word*)t0)[6],a[3]=t2,a[4]=((C_word*)t0)[7],a[5]=((C_word*)t0)[4],a[6]=((C_word*)t0)[2],a[7]=((C_word*)t0)[8],tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)((C_word*)t0)[2])[1])){
C_trace("ChickenBridge.scm: 363  error");
t8=*((C_word*)lf[6]+1);
((C_proc4)C_retrieve_proc(t8))(4,t8,t7,lf[21],lf[223]);}
else{
t8=t7;
f_12536(2,t8,C_SCHEME_UNDEFINED);}}
else{
t7=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_12565,a[2]=t2,a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[9],a[5]=((C_word*)t0)[7],tmp=(C_word)a,a+=6,tmp);
if(C_truep(((C_word*)((C_word*)t0)[4])[1])){
C_trace("ChickenBridge.scm: 363  error");
t8=*((C_word*)lf[6]+1);
((C_proc4)C_retrieve_proc(t8))(4,t8,t7,lf[12],((C_word*)((C_word*)t0)[6])[1]);}
else{
t8=t7;
f_12565(2,t8,C_SCHEME_UNDEFINED);}}}}}}

/* k12563 in k12296 in k12293 in %make-random-item in make-weighting in k7607 in k7604 in k5838 in k5545 in k5542 in k5538 in k5247 in k5244 in k5241 in k5238 */
static void C_ccall f_12565(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_12565,2,t0,t1);}
t2=(C_word)C_i_car(((C_word*)((C_word*)t0)[5])[1]);
t3=C_mutate(((C_word *)((C_word*)t0)[4])+1,t2);
t4=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_12572,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[5],a[4]=((C_word*)t0)[3],tmp=(C_word)a,a+=5,tmp);
t5=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_12580,a[2]=((C_word*)t0)[4],a[3]=t4,tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 363  keyword?");
t6=C_retrieve(lf[15]);
((C_proc3)C_retrieve_proc(t6))(3,t6,t5,((C_word*)((C_word*)t0)[4])[1]);}

/* k12578 in k12563 in k12296 in k12293 in %make-random-item in make-weighting in k7607 in k7604 in k5838 in k5545 in k5542 in k5538 in k5247 in k5244 in k5241 in k5238 */
static void C_ccall f_12580(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
if(C_truep(t1)){
C_trace("ChickenBridge.scm: 363  error");
t2=*((C_word*)lf[6]+1);
((C_proc4)C_retrieve_proc(t2))(4,t2,((C_word*)t0)[3],lf[16],((C_word*)((C_word*)t0)[2])[1]);}
else{
t2=((C_word*)t0)[3];
f_12572(2,t2,C_SCHEME_UNDEFINED);}}

/* k12570 in k12563 in k12296 in k12293 in %make-random-item in make-weighting in k7607 in k7604 in k5838 in k5545 in k5542 in k5538 in k5247 in k5244 in k5241 in k5238 */
static void C_ccall f_12572(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word *a;
t2=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[3])[1]);
t4=C_mutate(((C_word *)((C_word*)t0)[3])+1,t3);
t5=((C_word*)t0)[2];
f_12301(t5,t4);}

/* k12534 in k12296 in k12293 in %make-random-item in make-weighting in k7607 in k7604 in k5838 in k5545 in k5542 in k5538 in k5247 in k5244 in k5241 in k5238 */
static void C_ccall f_12536(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_12536,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_12540,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("ChickenBridge.scm: 363  error");
t4=*((C_word*)lf[6]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[23],((C_word*)((C_word*)t0)[2])[1]);}
else{
t4=t2;
f_12540(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k12538 in k12534 in k12296 in k12293 in %make-random-item in make-weighting in k7607 in k7604 in k5838 in k5545 in k5542 in k5538 in k5247 in k5244 in k5241 in k5238 */
static void C_ccall f_12540(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_12301(t7,t6);}

/* k12499 in k12296 in k12293 in %make-random-item in make-weighting in k7607 in k7604 in k5838 in k5545 in k5542 in k5538 in k5247 in k5244 in k5241 in k5238 */
static void C_ccall f_12501(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_12501,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_12505,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("ChickenBridge.scm: 363  error");
t4=*((C_word*)lf[6]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[23],((C_word*)((C_word*)t0)[2])[1]);}
else{
t4=t2;
f_12505(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k12503 in k12499 in k12296 in k12293 in %make-random-item in make-weighting in k7607 in k7604 in k5838 in k5545 in k5542 in k5538 in k5247 in k5244 in k5241 in k5238 */
static void C_ccall f_12505(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_12301(t7,t6);}

/* k12464 in k12296 in k12293 in %make-random-item in make-weighting in k7607 in k7604 in k5838 in k5545 in k5542 in k5538 in k5247 in k5244 in k5241 in k5238 */
static void C_ccall f_12466(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_12466,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_12470,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("ChickenBridge.scm: 363  error");
t4=*((C_word*)lf[6]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[23],((C_word*)((C_word*)t0)[2])[1]);}
else{
t4=t2;
f_12470(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k12468 in k12464 in k12296 in k12293 in %make-random-item in make-weighting in k7607 in k7604 in k5838 in k5545 in k5542 in k5538 in k5247 in k5244 in k5241 in k5238 */
static void C_ccall f_12470(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_12301(t7,t6);}

/* k12299 in k12296 in k12293 in %make-random-item in make-weighting in k7607 in k7604 in k5838 in k5545 in k5542 in k5538 in k5247 in k5244 in k5241 in k5238 */
static void C_fcall f_12301(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word ab[39],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_12301,NULL,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|8,a[1]=(C_word)f_12304,a[2]=((C_word*)t0)[6],a[3]=((C_word*)t0)[7],a[4]=((C_word*)t0)[8],a[5]=((C_word*)t0)[9],a[6]=((C_word*)t0)[10],a[7]=((C_word*)t0)[11],a[8]=((C_word*)t0)[12],tmp=(C_word)a,a+=9,tmp);
if(C_truep((C_word)C_i_nullp(((C_word*)((C_word*)t0)[7])[1]))){
t3=t2;
f_12304(t3,C_SCHEME_UNDEFINED);}
else{
t3=(C_word)C_i_car(((C_word*)((C_word*)t0)[7])[1]);
t4=(C_word)C_eqp(t3,lf[221]);
if(C_truep(t4)){
t5=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_12331,a[2]=((C_word*)t0)[6],a[3]=t2,a[4]=((C_word*)t0)[7],a[5]=((C_word*)t0)[4],a[6]=((C_word*)t0)[5],a[7]=((C_word*)t0)[10],tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)((C_word*)t0)[5])[1])){
C_trace("ChickenBridge.scm: 363  error");
t6=*((C_word*)lf[6]+1);
((C_proc4)C_retrieve_proc(t6))(4,t6,t5,lf[21],lf[221]);}
else{
t6=t5;
f_12331(2,t6,C_SCHEME_UNDEFINED);}}
else{
t5=(C_word)C_eqp(t3,lf[222]);
if(C_truep(t5)){
t6=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_12366,a[2]=((C_word*)t0)[6],a[3]=t2,a[4]=((C_word*)t0)[7],a[5]=((C_word*)t0)[4],a[6]=((C_word*)t0)[3],a[7]=((C_word*)t0)[9],tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)((C_word*)t0)[3])[1])){
C_trace("ChickenBridge.scm: 363  error");
t7=*((C_word*)lf[6]+1);
((C_proc4)C_retrieve_proc(t7))(4,t7,t6,lf[21],lf[222]);}
else{
t7=t6;
f_12366(2,t7,C_SCHEME_UNDEFINED);}}
else{
t6=(C_word)C_eqp(t3,lf[223]);
if(C_truep(t6)){
t7=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_12401,a[2]=((C_word*)t0)[6],a[3]=t2,a[4]=((C_word*)t0)[7],a[5]=((C_word*)t0)[4],a[6]=((C_word*)t0)[2],a[7]=((C_word*)t0)[8],tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)((C_word*)t0)[2])[1])){
C_trace("ChickenBridge.scm: 363  error");
t8=*((C_word*)lf[6]+1);
((C_proc4)C_retrieve_proc(t8))(4,t8,t7,lf[21],lf[223]);}
else{
t8=t7;
f_12401(2,t8,C_SCHEME_UNDEFINED);}}
else{
t7=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_12430,a[2]=t2,a[3]=((C_word*)t0)[2],a[4]=((C_word*)t0)[8],a[5]=((C_word*)t0)[7],tmp=(C_word)a,a+=6,tmp);
if(C_truep(((C_word*)((C_word*)t0)[4])[1])){
C_trace("ChickenBridge.scm: 363  error");
t8=*((C_word*)lf[6]+1);
((C_proc4)C_retrieve_proc(t8))(4,t8,t7,lf[12],((C_word*)((C_word*)t0)[6])[1]);}
else{
t8=t7;
f_12430(2,t8,C_SCHEME_UNDEFINED);}}}}}}

/* k12428 in k12299 in k12296 in k12293 in %make-random-item in make-weighting in k7607 in k7604 in k5838 in k5545 in k5542 in k5538 in k5247 in k5244 in k5241 in k5238 */
static void C_ccall f_12430(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_12430,2,t0,t1);}
t2=(C_word)C_i_car(((C_word*)((C_word*)t0)[5])[1]);
t3=C_mutate(((C_word *)((C_word*)t0)[4])+1,t2);
t4=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_12437,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[5],a[4]=((C_word*)t0)[3],tmp=(C_word)a,a+=5,tmp);
t5=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_12445,a[2]=((C_word*)t0)[4],a[3]=t4,tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 363  keyword?");
t6=C_retrieve(lf[15]);
((C_proc3)C_retrieve_proc(t6))(3,t6,t5,((C_word*)((C_word*)t0)[4])[1]);}

/* k12443 in k12428 in k12299 in k12296 in k12293 in %make-random-item in make-weighting in k7607 in k7604 in k5838 in k5545 in k5542 in k5538 in k5247 in k5244 in k5241 in k5238 */
static void C_ccall f_12445(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
if(C_truep(t1)){
C_trace("ChickenBridge.scm: 363  error");
t2=*((C_word*)lf[6]+1);
((C_proc4)C_retrieve_proc(t2))(4,t2,((C_word*)t0)[3],lf[16],((C_word*)((C_word*)t0)[2])[1]);}
else{
t2=((C_word*)t0)[3];
f_12437(2,t2,C_SCHEME_UNDEFINED);}}

/* k12435 in k12428 in k12299 in k12296 in k12293 in %make-random-item in make-weighting in k7607 in k7604 in k5838 in k5545 in k5542 in k5538 in k5247 in k5244 in k5241 in k5238 */
static void C_ccall f_12437(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word *a;
t2=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[3])[1]);
t4=C_mutate(((C_word *)((C_word*)t0)[3])+1,t3);
t5=((C_word*)t0)[2];
f_12304(t5,t4);}

/* k12399 in k12299 in k12296 in k12293 in %make-random-item in make-weighting in k7607 in k7604 in k5838 in k5545 in k5542 in k5538 in k5247 in k5244 in k5241 in k5238 */
static void C_ccall f_12401(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_12401,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_12405,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("ChickenBridge.scm: 363  error");
t4=*((C_word*)lf[6]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[23],((C_word*)((C_word*)t0)[2])[1]);}
else{
t4=t2;
f_12405(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k12403 in k12399 in k12299 in k12296 in k12293 in %make-random-item in make-weighting in k7607 in k7604 in k5838 in k5545 in k5542 in k5538 in k5247 in k5244 in k5241 in k5238 */
static void C_ccall f_12405(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_12304(t7,t6);}

/* k12364 in k12299 in k12296 in k12293 in %make-random-item in make-weighting in k7607 in k7604 in k5838 in k5545 in k5542 in k5538 in k5247 in k5244 in k5241 in k5238 */
static void C_ccall f_12366(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_12366,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_12370,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("ChickenBridge.scm: 363  error");
t4=*((C_word*)lf[6]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[23],((C_word*)((C_word*)t0)[2])[1]);}
else{
t4=t2;
f_12370(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k12368 in k12364 in k12299 in k12296 in k12293 in %make-random-item in make-weighting in k7607 in k7604 in k5838 in k5545 in k5542 in k5538 in k5247 in k5244 in k5241 in k5238 */
static void C_ccall f_12370(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_12304(t7,t6);}

/* k12329 in k12299 in k12296 in k12293 in %make-random-item in make-weighting in k7607 in k7604 in k5838 in k5545 in k5542 in k5538 in k5247 in k5244 in k5241 in k5238 */
static void C_ccall f_12331(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_12331,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_12335,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("ChickenBridge.scm: 363  error");
t4=*((C_word*)lf[6]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[23],((C_word*)((C_word*)t0)[2])[1]);}
else{
t4=t2;
f_12335(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k12333 in k12329 in k12299 in k12296 in k12293 in %make-random-item in make-weighting in k7607 in k7604 in k5838 in k5545 in k5542 in k5538 in k5247 in k5244 in k5241 in k5238 */
static void C_ccall f_12335(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_12304(t7,t6);}

/* k12302 in k12299 in k12296 in k12293 in %make-random-item in make-weighting in k7607 in k7604 in k5838 in k5545 in k5542 in k5538 in k5247 in k5244 in k5241 in k5238 */
static void C_fcall f_12304(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_12304,NULL,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_12307,a[2]=((C_word*)t0)[4],a[3]=((C_word*)t0)[5],a[4]=((C_word*)t0)[6],a[5]=((C_word*)t0)[7],a[6]=((C_word*)t0)[8],tmp=(C_word)a,a+=7,tmp);
if(C_truep((C_word)C_i_nullp(((C_word*)((C_word*)t0)[3])[1]))){
t3=t2;
f_12307(2,t3,C_SCHEME_UNDEFINED);}
else{
C_trace("ChickenBridge.scm: 363  error");
t3=*((C_word*)lf[6]+1);
((C_proc4)C_retrieve_proc(t3))(4,t3,t2,lf[7],((C_word*)((C_word*)t0)[2])[1]);}}

/* k12305 in k12302 in k12299 in k12296 in k12293 in %make-random-item in make-weighting in k7607 in k7604 in k5838 in k5545 in k5542 in k5538 in k5247 in k5244 in k5241 in k5238 */
static void C_ccall f_12307(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word ab[10],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_12307,2,t0,t1);}
t2=((C_word*)t0)[6];
t3=((C_word*)((C_word*)t0)[5])[1];
t4=((C_word*)((C_word*)t0)[4])[1];
t5=((C_word*)((C_word*)t0)[3])[1];
t6=((C_word*)((C_word*)t0)[2])[1];
t7=t2;
((C_proc2)(void*)(*((C_word*)t7+1)))(2,t7,(C_word)C_a_i_record(&a,9,lf[210],t3,C_SCHEME_FALSE,t4,t5,t6,C_fix(0),C_SCHEME_FALSE,C_SCHEME_FALSE));}

/* k11973 in make-weighting in k7607 in k7604 in k5838 in k5545 in k5542 in k5538 in k5247 in k5244 in k5241 in k5238 */
static void C_ccall f_11975(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[5],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_11975,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_11978,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=t1,tmp=(C_word)a,a+=5,tmp);
C_trace("ChickenBridge.scm: 363  %alloc-pattern");
f_8557(t2);}

/* k11976 in k11973 in make-weighting in k7607 in k7604 in k5838 in k5545 in k5542 in k5538 in k5247 in k5244 in k5241 in k5238 */
static void C_ccall f_11978(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word ab[24],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_11978,2,t0,t1);}
t2=(C_word)C_i_length(((C_word*)t0)[4]);
t3=C_SCHEME_FALSE;
t4=(*a=C_VECTOR_TYPE|1,a[1]=t3,tmp=(C_word)a,a+=2,tmp);
t5=C_SCHEME_TRUE;
t6=(*a=C_VECTOR_TYPE|1,a[1]=t5,tmp=(C_word)a,a+=2,tmp);
t7=C_fix(0);
t8=(*a=C_VECTOR_TYPE|1,a[1]=t7,tmp=(C_word)a,a+=2,tmp);
t9=C_fix(0);
t10=(*a=C_VECTOR_TYPE|1,a[1]=t9,tmp=(C_word)a,a+=2,tmp);
t11=(*a=C_CLOSURE_TYPE|10,a[1]=(C_word)f_11984,a[2]=t10,a[3]=((C_word*)t0)[4],a[4]=t6,a[5]=t1,a[6]=((C_word*)t0)[2],a[7]=((C_word*)t0)[3],a[8]=t4,a[9]=t2,a[10]=t8,tmp=(C_word)a,a+=11,tmp);
t12=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_12252,a[2]=t8,a[3]=t6,a[4]=((C_word)li152),tmp=(C_word)a,a+=5,tmp);
C_trace("for-each");
t13=*((C_word*)lf[189]+1);
((C_proc4)(void*)(*((C_word*)t13+1)))(4,t13,t11,t12,((C_word*)t0)[4]);}

/* a12251 in k11976 in k11973 in make-weighting in k7607 in k7604 in k5838 in k5545 in k5542 in k5538 in k5247 in k5244 in k5241 in k5238 */
static void C_ccall f_12252(C_word c,C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word ab[6],*a=ab;
if(c!=3) C_bad_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr3,(void*)f_12252,3,t0,t1,t2);}
t3=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_12256,a[2]=t2,a[3]=((C_word*)t0)[2],a[4]=((C_word*)t0)[3],a[5]=t1,tmp=(C_word)a,a+=6,tmp);
C_trace("ChickenBridge.scm: 363  random-item-min");
f_11852(t3,t2);}

/* k12254 in a12251 in k11976 in k11973 in make-weighting in k7607 in k7604 in k5838 in k5545 in k5542 in k5538 in k5247 in k5244 in k5241 in k5238 */
static void C_ccall f_12256(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[6],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_12256,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_12259,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],tmp=(C_word)a,a+=6,tmp);
C_trace("ChickenBridge.scm: 363  random-item-max");
f_11870(t2,((C_word*)t0)[2]);}

/* k12257 in k12254 in a12251 in k11976 in k11973 in make-weighting in k7607 in k7604 in k5838 in k5545 in k5542 in k5538 in k5247 in k5244 in k5241 in k5238 */
static void C_ccall f_12259(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[6],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_12259,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_12262,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],tmp=(C_word)a,a+=6,tmp);
C_trace("ChickenBridge.scm: 363  random-item-weight");
f_11834(t2,((C_word*)t0)[2]);}

/* k12260 in k12257 in k12254 in a12251 in k11976 in k11973 in make-weighting in k7607 in k7604 in k5838 in k5545 in k5542 in k5538 in k5247 in k5244 in k5241 in k5238 */
static void C_ccall f_12262(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[6],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_12262,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_12265,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=t1,tmp=(C_word)a,a+=6,tmp);
C_trace("ChickenBridge.scm: 363  random-item-datum");
f_11798(t2,((C_word*)t0)[2]);}

/* k12263 in k12260 in k12257 in k12254 in a12251 in k11976 in k11973 in make-weighting in k7607 in k7604 in k5838 in k5545 in k5542 in k5538 in k5247 in k5244 in k5241 in k5238 */
static void C_ccall f_12265(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_12265,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_12268,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],tmp=(C_word)a,a+=5,tmp);
t3=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_12278,a[2]=t2,a[3]=((C_word*)t0)[2],tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 363  pattern?");
f_8253(t3,t1);}

/* k12276 in k12263 in k12260 in k12257 in k12254 in a12251 in k11976 in k11973 in make-weighting in k7607 in k7604 in k5838 in k5545 in k5542 in k5538 in k5247 in k5244 in k5241 in k5238 */
static void C_ccall f_12278(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[4],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_12278,2,t0,t1);}
if(C_truep(t1)){
t2=(C_word)C_a_i_plus(&a,2,((C_word*)((C_word*)t0)[3])[1],C_fix(1));
t3=C_mutate(((C_word *)((C_word*)t0)[3])+1,t2);
t4=((C_word*)t0)[2];
f_12268(t4,t3);}
else{
t2=((C_word*)t0)[2];
f_12268(t2,C_SCHEME_UNDEFINED);}}

/* k12266 in k12263 in k12260 in k12257 in k12254 in a12251 in k11976 in k11973 in make-weighting in k7607 in k7604 in k5838 in k5545 in k5542 in k5538 in k5247 in k5244 in k5241 in k5238 */
static void C_fcall f_12268(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word *a;
if(C_truep((C_word)C_i_numberp(((C_word*)t0)[4]))){
t2=((C_word*)t0)[3];
((C_proc2)(void*)(*((C_word*)t2+1)))(2,t2,C_SCHEME_UNDEFINED);}
else{
t2=C_set_block_item(((C_word*)t0)[2],0,C_SCHEME_FALSE);
t3=((C_word*)t0)[3];
((C_proc2)(void*)(*((C_word*)t3+1)))(2,t3,t2);}}

/* k11982 in k11976 in k11973 in make-weighting in k7607 in k7604 in k5838 in k5545 in k5542 in k5538 in k5247 in k5244 in k5241 in k5238 */
static void C_ccall f_11984(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word ab[14],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_11984,2,t0,t1);}
t2=(C_word)C_i_nequalp(((C_word*)((C_word*)t0)[10])[1],((C_word*)t0)[9]);
t3=(C_truep(t2)?C_fix(1):((C_word*)t0)[9]);
t4=C_mutate(((C_word *)((C_word*)t0)[8])+1,t3);
t5=(*a=C_CLOSURE_TYPE|9,a[1]=(C_word)f_11991,a[2]=((C_word*)t0)[8],a[3]=((C_word*)t0)[9],a[4]=((C_word*)t0)[2],a[5]=((C_word*)t0)[3],a[6]=((C_word*)t0)[4],a[7]=((C_word*)t0)[5],a[8]=((C_word*)t0)[6],a[9]=((C_word*)t0)[7],tmp=(C_word)a,a+=10,tmp);
if(C_truep(((C_word*)((C_word*)t0)[4])[1])){
t6=(C_word)C_a_i_bitwise_ior(&a,2,((C_word*)((C_word*)t0)[2])[1],C_fix(4));
t7=C_mutate(((C_word *)((C_word*)t0)[2])+1,t6);
t8=t5;
f_11991(t8,t7);}
else{
t6=t5;
f_11991(t6,C_SCHEME_UNDEFINED);}}

/* k11989 in k11982 in k11976 in k11973 in make-weighting in k7607 in k7604 in k5838 in k5545 in k5542 in k5538 in k5247 in k5244 in k5241 in k5238 */
static void C_fcall f_11991(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word t14;
C_word t15;
C_word t16;
C_word t17;
C_word t18;
C_word t19;
C_word t20;
C_word t21;
C_word ab[50],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_11991,NULL,2,t0,t1);}
t2=C_SCHEME_FALSE;
t3=(*a=C_VECTOR_TYPE|1,a[1]=t2,tmp=(C_word)a,a+=2,tmp);
t4=C_SCHEME_FALSE;
t5=(*a=C_VECTOR_TYPE|1,a[1]=t4,tmp=(C_word)a,a+=2,tmp);
t6=C_SCHEME_FALSE;
t7=(*a=C_VECTOR_TYPE|1,a[1]=t6,tmp=(C_word)a,a+=2,tmp);
t8=C_SCHEME_FALSE;
t9=(*a=C_VECTOR_TYPE|1,a[1]=t8,tmp=(C_word)a,a+=2,tmp);
t10=((C_word*)t0)[9];
t11=(*a=C_VECTOR_TYPE|1,a[1]=t10,tmp=(C_word)a,a+=2,tmp);
t12=C_SCHEME_FALSE;
t13=(*a=C_VECTOR_TYPE|1,a[1]=t12,tmp=(C_word)a,a+=2,tmp);
t14=(*a=C_CLOSURE_TYPE|15,a[1]=(C_word)f_11994,a[2]=t9,a[3]=t13,a[4]=t7,a[5]=((C_word*)t0)[9],a[6]=t11,a[7]=((C_word*)t0)[2],a[8]=((C_word*)t0)[3],a[9]=((C_word*)t0)[4],a[10]=t5,a[11]=t3,a[12]=((C_word*)t0)[5],a[13]=((C_word*)t0)[6],a[14]=((C_word*)t0)[7],a[15]=((C_word*)t0)[8],tmp=(C_word)a,a+=16,tmp);
if(C_truep((C_word)C_i_nullp(((C_word*)t11)[1]))){
t15=t14;
f_11994(t15,C_SCHEME_UNDEFINED);}
else{
t15=(C_word)C_i_car(((C_word*)t11)[1]);
t16=(C_word)C_eqp(t15,lf[191]);
if(C_truep(t16)){
t17=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_12158,a[2]=((C_word*)t0)[9],a[3]=t14,a[4]=t11,a[5]=t13,a[6]=t7,a[7]=t3,tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)t7)[1])){
C_trace("ChickenBridge.scm: 363  error");
t18=*((C_word*)lf[6]+1);
((C_proc4)C_retrieve_proc(t18))(4,t18,t17,lf[21],lf[191]);}
else{
t18=t17;
f_12158(2,t18,C_SCHEME_UNDEFINED);}}
else{
t17=(C_word)C_eqp(t15,lf[192]);
if(C_truep(t17)){
t18=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_12193,a[2]=((C_word*)t0)[9],a[3]=t14,a[4]=t11,a[5]=t13,a[6]=t9,a[7]=t5,tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)t9)[1])){
C_trace("ChickenBridge.scm: 363  error");
t19=*((C_word*)lf[6]+1);
((C_proc4)C_retrieve_proc(t19))(4,t19,t18,lf[21],lf[192]);}
else{
t19=t18;
f_12193(2,t19,C_SCHEME_UNDEFINED);}}
else{
t18=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_12222,a[2]=t14,a[3]=t7,a[4]=t3,a[5]=t11,tmp=(C_word)a,a+=6,tmp);
if(C_truep(((C_word*)t13)[1])){
C_trace("ChickenBridge.scm: 363  error");
t19=*((C_word*)lf[6]+1);
((C_proc4)C_retrieve_proc(t19))(4,t19,t18,lf[12],((C_word*)t0)[9]);}
else{
t19=t18;
f_12222(2,t19,C_SCHEME_UNDEFINED);}}}}}

/* k12220 in k11989 in k11982 in k11976 in k11973 in make-weighting in k7607 in k7604 in k5838 in k5545 in k5542 in k5538 in k5247 in k5244 in k5241 in k5238 */
static void C_ccall f_12222(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_12222,2,t0,t1);}
t2=(C_word)C_i_car(((C_word*)((C_word*)t0)[5])[1]);
t3=C_mutate(((C_word *)((C_word*)t0)[4])+1,t2);
t4=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_12229,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[5],a[4]=((C_word*)t0)[3],tmp=(C_word)a,a+=5,tmp);
t5=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_12237,a[2]=((C_word*)t0)[4],a[3]=t4,tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 363  keyword?");
t6=C_retrieve(lf[15]);
((C_proc3)C_retrieve_proc(t6))(3,t6,t5,((C_word*)((C_word*)t0)[4])[1]);}

/* k12235 in k12220 in k11989 in k11982 in k11976 in k11973 in make-weighting in k7607 in k7604 in k5838 in k5545 in k5542 in k5538 in k5247 in k5244 in k5241 in k5238 */
static void C_ccall f_12237(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
if(C_truep(t1)){
C_trace("ChickenBridge.scm: 363  error");
t2=*((C_word*)lf[6]+1);
((C_proc4)C_retrieve_proc(t2))(4,t2,((C_word*)t0)[3],lf[16],((C_word*)((C_word*)t0)[2])[1]);}
else{
t2=((C_word*)t0)[3];
f_12229(2,t2,C_SCHEME_UNDEFINED);}}

/* k12227 in k12220 in k11989 in k11982 in k11976 in k11973 in make-weighting in k7607 in k7604 in k5838 in k5545 in k5542 in k5538 in k5247 in k5244 in k5241 in k5238 */
static void C_ccall f_12229(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word *a;
t2=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[3])[1]);
t4=C_mutate(((C_word *)((C_word*)t0)[3])+1,t3);
t5=((C_word*)t0)[2];
f_11994(t5,t4);}

/* k12191 in k11989 in k11982 in k11976 in k11973 in make-weighting in k7607 in k7604 in k5838 in k5545 in k5542 in k5538 in k5247 in k5244 in k5241 in k5238 */
static void C_ccall f_12193(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_12193,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_12197,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("ChickenBridge.scm: 363  error");
t4=*((C_word*)lf[6]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[23],((C_word*)t0)[2]);}
else{
t4=t2;
f_12197(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k12195 in k12191 in k11989 in k11982 in k11976 in k11973 in make-weighting in k7607 in k7604 in k5838 in k5545 in k5542 in k5538 in k5247 in k5244 in k5241 in k5238 */
static void C_ccall f_12197(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_11994(t7,t6);}

/* k12156 in k11989 in k11982 in k11976 in k11973 in make-weighting in k7607 in k7604 in k5838 in k5545 in k5542 in k5538 in k5247 in k5244 in k5241 in k5238 */
static void C_ccall f_12158(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_12158,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_12162,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("ChickenBridge.scm: 363  error");
t4=*((C_word*)lf[6]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[23],((C_word*)t0)[2]);}
else{
t4=t2;
f_12162(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k12160 in k12156 in k11989 in k11982 in k11976 in k11973 in make-weighting in k7607 in k7604 in k5838 in k5545 in k5542 in k5538 in k5247 in k5244 in k5241 in k5238 */
static void C_ccall f_12162(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_11994(t7,t6);}

/* k11992 in k11989 in k11982 in k11976 in k11973 in make-weighting in k7607 in k7604 in k5838 in k5545 in k5542 in k5538 in k5247 in k5244 in k5241 in k5238 */
static void C_fcall f_11994(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word ab[35],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_11994,NULL,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|12,a[1]=(C_word)f_11997,a[2]=((C_word*)t0)[5],a[3]=((C_word*)t0)[6],a[4]=((C_word*)t0)[7],a[5]=((C_word*)t0)[8],a[6]=((C_word*)t0)[9],a[7]=((C_word*)t0)[10],a[8]=((C_word*)t0)[11],a[9]=((C_word*)t0)[12],a[10]=((C_word*)t0)[13],a[11]=((C_word*)t0)[14],a[12]=((C_word*)t0)[15],tmp=(C_word)a,a+=13,tmp);
if(C_truep((C_word)C_i_nullp(((C_word*)((C_word*)t0)[6])[1]))){
t3=t2;
f_11997(t3,C_SCHEME_UNDEFINED);}
else{
t3=(C_word)C_i_car(((C_word*)((C_word*)t0)[6])[1]);
t4=(C_word)C_eqp(t3,lf[191]);
if(C_truep(t4)){
t5=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_12058,a[2]=((C_word*)t0)[5],a[3]=t2,a[4]=((C_word*)t0)[6],a[5]=((C_word*)t0)[3],a[6]=((C_word*)t0)[4],a[7]=((C_word*)t0)[11],tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)((C_word*)t0)[4])[1])){
C_trace("ChickenBridge.scm: 363  error");
t6=*((C_word*)lf[6]+1);
((C_proc4)C_retrieve_proc(t6))(4,t6,t5,lf[21],lf[191]);}
else{
t6=t5;
f_12058(2,t6,C_SCHEME_UNDEFINED);}}
else{
t5=(C_word)C_eqp(t3,lf[192]);
if(C_truep(t5)){
t6=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_12093,a[2]=((C_word*)t0)[5],a[3]=t2,a[4]=((C_word*)t0)[6],a[5]=((C_word*)t0)[3],a[6]=((C_word*)t0)[2],a[7]=((C_word*)t0)[10],tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)((C_word*)t0)[2])[1])){
C_trace("ChickenBridge.scm: 363  error");
t7=*((C_word*)lf[6]+1);
((C_proc4)C_retrieve_proc(t7))(4,t7,t6,lf[21],lf[192]);}
else{
t7=t6;
f_12093(2,t7,C_SCHEME_UNDEFINED);}}
else{
t6=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_12122,a[2]=t2,a[3]=((C_word*)t0)[2],a[4]=((C_word*)t0)[10],a[5]=((C_word*)t0)[6],tmp=(C_word)a,a+=6,tmp);
if(C_truep(((C_word*)((C_word*)t0)[3])[1])){
C_trace("ChickenBridge.scm: 363  error");
t7=*((C_word*)lf[6]+1);
((C_proc4)C_retrieve_proc(t7))(4,t7,t6,lf[12],((C_word*)t0)[5]);}
else{
t7=t6;
f_12122(2,t7,C_SCHEME_UNDEFINED);}}}}}

/* k12120 in k11992 in k11989 in k11982 in k11976 in k11973 in make-weighting in k7607 in k7604 in k5838 in k5545 in k5542 in k5538 in k5247 in k5244 in k5241 in k5238 */
static void C_ccall f_12122(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_12122,2,t0,t1);}
t2=(C_word)C_i_car(((C_word*)((C_word*)t0)[5])[1]);
t3=C_mutate(((C_word *)((C_word*)t0)[4])+1,t2);
t4=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_12129,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[5],a[4]=((C_word*)t0)[3],tmp=(C_word)a,a+=5,tmp);
t5=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_12137,a[2]=((C_word*)t0)[4],a[3]=t4,tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 363  keyword?");
t6=C_retrieve(lf[15]);
((C_proc3)C_retrieve_proc(t6))(3,t6,t5,((C_word*)((C_word*)t0)[4])[1]);}

/* k12135 in k12120 in k11992 in k11989 in k11982 in k11976 in k11973 in make-weighting in k7607 in k7604 in k5838 in k5545 in k5542 in k5538 in k5247 in k5244 in k5241 in k5238 */
static void C_ccall f_12137(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
if(C_truep(t1)){
C_trace("ChickenBridge.scm: 363  error");
t2=*((C_word*)lf[6]+1);
((C_proc4)C_retrieve_proc(t2))(4,t2,((C_word*)t0)[3],lf[16],((C_word*)((C_word*)t0)[2])[1]);}
else{
t2=((C_word*)t0)[3];
f_12129(2,t2,C_SCHEME_UNDEFINED);}}

/* k12127 in k12120 in k11992 in k11989 in k11982 in k11976 in k11973 in make-weighting in k7607 in k7604 in k5838 in k5545 in k5542 in k5538 in k5247 in k5244 in k5241 in k5238 */
static void C_ccall f_12129(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word *a;
t2=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[3])[1]);
t4=C_mutate(((C_word *)((C_word*)t0)[3])+1,t3);
t5=((C_word*)t0)[2];
f_11997(t5,t4);}

/* k12091 in k11992 in k11989 in k11982 in k11976 in k11973 in make-weighting in k7607 in k7604 in k5838 in k5545 in k5542 in k5538 in k5247 in k5244 in k5241 in k5238 */
static void C_ccall f_12093(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_12093,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_12097,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("ChickenBridge.scm: 363  error");
t4=*((C_word*)lf[6]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[23],((C_word*)t0)[2]);}
else{
t4=t2;
f_12097(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k12095 in k12091 in k11992 in k11989 in k11982 in k11976 in k11973 in make-weighting in k7607 in k7604 in k5838 in k5545 in k5542 in k5538 in k5247 in k5244 in k5241 in k5238 */
static void C_ccall f_12097(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_11997(t7,t6);}

/* k12056 in k11992 in k11989 in k11982 in k11976 in k11973 in make-weighting in k7607 in k7604 in k5838 in k5545 in k5542 in k5538 in k5247 in k5244 in k5241 in k5238 */
static void C_ccall f_12058(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_12058,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_12062,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("ChickenBridge.scm: 363  error");
t4=*((C_word*)lf[6]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[23],((C_word*)t0)[2]);}
else{
t4=t2;
f_12062(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k12060 in k12056 in k11992 in k11989 in k11982 in k11976 in k11973 in make-weighting in k7607 in k7604 in k5838 in k5545 in k5542 in k5538 in k5247 in k5244 in k5241 in k5238 */
static void C_ccall f_12062(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_11997(t7,t6);}

/* k11995 in k11992 in k11989 in k11982 in k11976 in k11973 in make-weighting in k7607 in k7604 in k5838 in k5545 in k5542 in k5538 in k5247 in k5244 in k5241 in k5238 */
static void C_fcall f_11997(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[11],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_11997,NULL,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|10,a[1]=(C_word)f_12000,a[2]=((C_word*)t0)[4],a[3]=((C_word*)t0)[5],a[4]=((C_word*)t0)[6],a[5]=((C_word*)t0)[7],a[6]=((C_word*)t0)[8],a[7]=((C_word*)t0)[9],a[8]=((C_word*)t0)[10],a[9]=((C_word*)t0)[11],a[10]=((C_word*)t0)[12],tmp=(C_word)a,a+=11,tmp);
if(C_truep((C_word)C_i_nullp(((C_word*)((C_word*)t0)[3])[1]))){
t3=t2;
f_12000(2,t3,C_SCHEME_UNDEFINED);}
else{
C_trace("ChickenBridge.scm: 363  error");
t3=*((C_word*)lf[6]+1);
((C_proc4)C_retrieve_proc(t3))(4,t3,t2,lf[7],((C_word*)t0)[2]);}}

/* k11998 in k11995 in k11992 in k11989 in k11982 in k11976 in k11973 in make-weighting in k7607 in k7604 in k5838 in k5545 in k5542 in k5538 in k5247 in k5244 in k5241 in k5238 */
static void C_ccall f_12000(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[11],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_12000,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_12003,a[2]=((C_word*)t0)[8],a[3]=((C_word*)t0)[9],a[4]=((C_word*)t0)[10],tmp=(C_word)a,a+=5,tmp);
t3=(C_word)C_a_i_list(&a,1,((C_word*)t0)[7]);
t4=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_12015,a[2]=((C_word)li151),tmp=(C_word)a,a+=3,tmp);
C_trace("ChickenBridge.scm: 363  initialize-pattern");
f_8567(t2,((C_word*)t0)[9],t3,((C_word*)((C_word*)t0)[6])[1],((C_word*)((C_word*)t0)[5])[1],((C_word*)((C_word*)t0)[4])[1],((C_word*)t0)[3],((C_word*)((C_word*)t0)[2])[1],C_retrieve2(lf[220],"next-in-weighting"),t4);}

/* a12014 in k11998 in k11995 in k11992 in k11989 in k11982 in k11976 in k11973 in make-weighting in k7607 in k7604 in k5838 in k5545 in k5542 in k5538 in k5247 in k5244 in k5241 in k5238 */
static void C_ccall f_12015(C_word c,C_word t0,C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word t6;
C_word ab[8],*a=ab;
if(c!=4) C_bad_argc_2(c,4,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr4,(void*)f_12015,4,t0,t1,t2,t3);}
t4=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_12021,a[2]=t2,a[3]=((C_word)li150),tmp=(C_word)a,a+=4,tmp);
t5=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_12037,a[2]=t4,a[3]=t1,tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 363  pattern-data");
f_8286(t5,t3);}

/* k12035 in a12014 in k11998 in k11995 in k11992 in k11989 in k11982 in k11976 in k11973 in make-weighting in k7607 in k7604 in k5838 in k5545 in k5542 in k5538 in k5247 in k5244 in k5241 in k5238 */
static void C_ccall f_12037(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word *a;
t2=(C_word)C_i_car(t1);
C_trace("for-each");
t3=*((C_word*)lf[189]+1);
((C_proc4)(void*)(*((C_word*)t3+1)))(4,t3,((C_word*)t0)[3],((C_word*)t0)[2],t2);}

/* a12020 in a12014 in k11998 in k11995 in k11992 in k11989 in k11982 in k11976 in k11973 in make-weighting in k7607 in k7604 in k5838 in k5545 in k5542 in k5538 in k5247 in k5244 in k5241 in k5238 */
static void C_ccall f_12021(C_word c,C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word ab[4],*a=ab;
if(c!=3) C_bad_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr3,(void*)f_12021,3,t0,t1,t2);}
t3=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_12029,a[2]=t1,a[3]=((C_word*)t0)[2],tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 363  random-item-datum");
f_11798(t3,t2);}

/* k12027 in a12020 in a12014 in k11998 in k11995 in k11992 in k11989 in k11982 in k11976 in k11973 in make-weighting in k7607 in k7604 in k5838 in k5545 in k5542 in k5538 in k5247 in k5244 in k5241 in k5238 */
static void C_ccall f_12029(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 363  fn");
t2=((C_word*)t0)[3];
((C_proc3)C_retrieve_proc(t2))(3,t2,((C_word*)t0)[2],t1);}

/* k12001 in k11998 in k11995 in k11992 in k11989 in k11982 in k11976 in k11973 in make-weighting in k7607 in k7604 in k5838 in k5545 in k5542 in k5538 in k5247 in k5244 in k5241 in k5238 */
static void C_ccall f_12003(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[4],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_12003,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_12006,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],tmp=(C_word)a,a+=4,tmp);
if(C_truep(((C_word*)((C_word*)t0)[2])[1])){
C_trace("ChickenBridge.scm: 363  recalc-weightings");
f_12738(t2,((C_word*)t0)[3],C_SCHEME_TRUE);}
else{
t3=t2;
f_12006(2,t3,C_SCHEME_UNDEFINED);}}

/* k12004 in k12001 in k11998 in k11995 in k11992 in k11989 in k11982 in k11976 in k11973 in make-weighting in k7607 in k7604 in k5838 in k5545 in k5542 in k5538 in k5247 in k5244 in k5241 in k5238 */
static void C_ccall f_12006(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
t2=((C_word*)t0)[3];
((C_proc2)(void*)(*((C_word*)t2+1)))(2,t2,((C_word*)t0)[2]);}

/* random-item-count in k7607 in k7604 in k5838 in k5545 in k5542 in k5538 in k5247 in k5244 in k5241 in k5238 */
static void C_fcall f_11888(C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word *a;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_11888,NULL,2,t1,t2);}
t3=(C_word)C_i_check_structure(t2,lf[210]);
t4=t1;
((C_proc2)(void*)(*((C_word*)t4+1)))(2,t4,(C_word)C_i_block_ref(t2,C_fix(6)));}

/* random-item-count-set! in k7607 in k7604 in k5838 in k5545 in k5542 in k5538 in k5247 in k5244 in k5241 in k5238 */
static void C_fcall f_11879(C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word *a;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_11879,NULL,3,t1,t2,t3);}
t4=(C_word)C_i_check_structure(t2,lf[210]);
C_trace("ChickenBridge.scm: 363  ##sys#block-set!");
t5=*((C_word*)lf[143]+1);
((C_proc5)(void*)(*((C_word*)t5+1)))(5,t5,t1,t2,C_fix(6),t3);}

/* random-item-max in k7607 in k7604 in k5838 in k5545 in k5542 in k5538 in k5247 in k5244 in k5241 in k5238 */
static void C_fcall f_11870(C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word *a;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_11870,NULL,2,t1,t2);}
t3=(C_word)C_i_check_structure(t2,lf[210]);
t4=t1;
((C_proc2)(void*)(*((C_word*)t4+1)))(2,t4,(C_word)C_i_block_ref(t2,C_fix(5)));}

/* random-item-min in k7607 in k7604 in k5838 in k5545 in k5542 in k5538 in k5247 in k5244 in k5241 in k5238 */
static void C_fcall f_11852(C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word *a;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_11852,NULL,2,t1,t2);}
t3=(C_word)C_i_check_structure(t2,lf[210]);
t4=t1;
((C_proc2)(void*)(*((C_word*)t4+1)))(2,t4,(C_word)C_i_block_ref(t2,C_fix(4)));}

/* random-item-weight in k7607 in k7604 in k5838 in k5545 in k5542 in k5538 in k5247 in k5244 in k5241 in k5238 */
static void C_fcall f_11834(C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word *a;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_11834,NULL,2,t1,t2);}
t3=(C_word)C_i_check_structure(t2,lf[210]);
t4=t1;
((C_proc2)(void*)(*((C_word*)t4+1)))(2,t4,(C_word)C_i_block_ref(t2,C_fix(3)));}

/* random-item-index in k7607 in k7604 in k5838 in k5545 in k5542 in k5538 in k5247 in k5244 in k5241 in k5238 */
static void C_fcall f_11816(C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word *a;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_11816,NULL,2,t1,t2);}
t3=(C_word)C_i_check_structure(t2,lf[210]);
t4=t1;
((C_proc2)(void*)(*((C_word*)t4+1)))(2,t4,(C_word)C_i_block_ref(t2,C_fix(2)));}

/* random-item-index-set! in k7607 in k7604 in k5838 in k5545 in k5542 in k5538 in k5247 in k5244 in k5241 in k5238 */
static void C_fcall f_11807(C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word *a;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_11807,NULL,3,t1,t2,t3);}
t4=(C_word)C_i_check_structure(t2,lf[210]);
C_trace("ChickenBridge.scm: 363  ##sys#block-set!");
t5=*((C_word*)lf[143]+1);
((C_proc5)(void*)(*((C_word*)t5+1)))(5,t5,t1,t2,C_fix(2),t3);}

/* random-item-datum in k7607 in k7604 in k5838 in k5545 in k5542 in k5538 in k5247 in k5244 in k5241 in k5238 */
static void C_fcall f_11798(C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word *a;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_11798,NULL,2,t1,t2);}
t3=(C_word)C_i_check_structure(t2,lf[210]);
t4=t1;
((C_proc2)(void*)(*((C_word*)t4+1)))(2,t4,(C_word)C_i_block_ref(t2,C_fix(1)));}

/* next-in-rotation in k7607 in k7604 in k5838 in k5545 in k5542 in k5538 in k5247 in k5244 in k5241 in k5238 */
static void C_ccall f_11576(C_word c,C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word t5;
C_word ab[8],*a=ab;
if(c!=3) C_bad_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr3,(void*)f_11576,3,t0,t1,t2);}
t3=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_11579,a[2]=((C_word)li140),tmp=(C_word)a,a+=3,tmp);
t4=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_11626,a[2]=t2,a[3]=t3,a[4]=t1,tmp=(C_word)a,a+=5,tmp);
C_trace("ChickenBridge.scm: 363  pattern-data");
f_8286(t4,t2);}

/* k11624 in next-in-rotation in k7607 in k7604 in k5838 in k5545 in k5542 in k5538 in k5247 in k5244 in k5241 in k5238 */
static void C_ccall f_11626(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word ab[14],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_11626,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_11629,a[2]=((C_word*)t0)[4],a[3]=t1,tmp=(C_word)a,a+=4,tmp);
t3=(C_word)C_i_cdr(t1);
if(C_truep((C_word)C_i_nullp(t3))){
t4=(C_word)C_i_car(t1);
t5=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_11652,a[2]=((C_word*)t0)[2],a[3]=t4,a[4]=((C_word*)t0)[3],a[5]=t1,a[6]=t2,tmp=(C_word)a,a+=7,tmp);
t6=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_11771,a[2]=t5,tmp=(C_word)a,a+=3,tmp);
C_trace("ChickenBridge.scm: 363  pattern-cache");
f_8502(t6,((C_word*)t0)[2]);}
else{
t4=t2;
f_11629(t4,C_SCHEME_UNDEFINED);}}

/* k11769 in k11624 in next-in-rotation in k7607 in k7604 in k5838 in k5545 in k5542 in k5538 in k5247 in k5244 in k5241 in k5238 */
static void C_ccall f_11771(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 363  next-1");
f_8908(((C_word*)t0)[2],t1);}

/* k11650 in k11624 in next-in-rotation in k7607 in k7604 in k5838 in k5545 in k5542 in k5538 in k5247 in k5244 in k5241 in k5238 */
static void C_ccall f_11652(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word t14;
C_word t15;
C_word t16;
C_word ab[32],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_11652,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_11659,a[2]=((C_word*)t0)[5],a[3]=((C_word*)t0)[6],tmp=(C_word)a,a+=4,tmp);
if(C_truep((C_word)C_i_pairp(t1))){
t3=(C_word)C_i_cdr(t1);
if(C_truep((C_word)C_i_pairp(t3))){
t4=(C_word)C_i_cddr(t1);
if(C_truep((C_word)C_i_pairp(t4))){
t5=(C_word)C_i_cdddr(t1);
if(C_truep((C_word)C_i_pairp(t5))){
C_apply(5,0,t2,((C_word*)t0)[4],((C_word*)t0)[3],t1);}
else{
t6=(C_word)C_i_car(t1);
t7=(C_word)C_i_cadr(t1);
t8=(C_word)C_i_caddr(t1);
t9=(*a=C_CLOSURE_TYPE|8,a[1]=(C_word)f_11706,a[2]=t8,a[3]=t7,a[4]=t6,a[5]=((C_word*)t0)[3],a[6]=t2,a[7]=((C_word*)t0)[4],a[8]=t1,tmp=(C_word)a,a+=9,tmp);
C_trace("ChickenBridge.scm: 363  pattern-length");
f_8304(t9,((C_word*)t0)[2]);}}
else{
t5=(C_word)C_i_car(t1);
t6=(C_word)C_i_cadr(t1);
t7=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_11733,a[2]=t6,a[3]=t5,a[4]=((C_word*)t0)[3],a[5]=t2,a[6]=((C_word*)t0)[4],tmp=(C_word)a,a+=7,tmp);
C_trace("ChickenBridge.scm: 363  pattern-length");
f_8304(t7,((C_word*)t0)[2]);}}
else{
t4=(C_word)C_i_car(t1);
t5=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_11752,a[2]=t4,a[3]=((C_word*)t0)[3],a[4]=t2,a[5]=((C_word*)t0)[4],tmp=(C_word)a,a+=6,tmp);
C_trace("ChickenBridge.scm: 363  pattern-length");
f_8304(t5,((C_word*)t0)[2]);}}
else{
t3=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_11767,a[2]=t1,a[3]=((C_word*)t0)[3],a[4]=t2,a[5]=((C_word*)t0)[4],tmp=(C_word)a,a+=6,tmp);
C_trace("ChickenBridge.scm: 363  pattern-length");
f_8304(t3,((C_word*)t0)[2]);}}

/* k11765 in k11650 in k11624 in next-in-rotation in k7607 in k7604 in k5838 in k5545 in k5542 in k5538 in k5247 in k5244 in k5241 in k5238 */
static void C_ccall f_11767(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[4],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_11767,2,t0,t1);}
t2=(C_word)C_a_i_minus(&a,2,t1,C_fix(1));
C_trace("ChickenBridge.scm: 363  rotate-items");
t3=((C_word*)t0)[5];
f_11579(7,t3,((C_word*)t0)[4],((C_word*)t0)[3],((C_word*)t0)[2],C_fix(1),C_fix(1),t2);}

/* k11750 in k11650 in k11624 in next-in-rotation in k7607 in k7604 in k5838 in k5545 in k5542 in k5538 in k5247 in k5244 in k5241 in k5238 */
static void C_ccall f_11752(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[4],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_11752,2,t0,t1);}
t2=(C_word)C_a_i_minus(&a,2,t1,C_fix(1));
C_trace("ChickenBridge.scm: 363  rotate-items");
t3=((C_word*)t0)[5];
f_11579(7,t3,((C_word*)t0)[4],((C_word*)t0)[3],((C_word*)t0)[2],C_fix(1),C_fix(1),t2);}

/* k11731 in k11650 in k11624 in next-in-rotation in k7607 in k7604 in k5838 in k5545 in k5542 in k5538 in k5247 in k5244 in k5241 in k5238 */
static void C_ccall f_11733(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[4],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_11733,2,t0,t1);}
t2=(C_word)C_a_i_minus(&a,2,t1,C_fix(1));
C_trace("ChickenBridge.scm: 363  rotate-items");
t3=((C_word*)t0)[6];
f_11579(7,t3,((C_word*)t0)[5],((C_word*)t0)[4],((C_word*)t0)[3],((C_word*)t0)[2],C_fix(1),t2);}

/* k11704 in k11650 in k11624 in next-in-rotation in k7607 in k7604 in k5838 in k5545 in k5542 in k5538 in k5247 in k5244 in k5241 in k5238 */
static void C_ccall f_11706(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[4],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_11706,2,t0,t1);}
t2=(C_word)C_i_caddr(((C_word*)t0)[8]);
t3=(C_word)C_a_i_minus(&a,2,t1,t2);
C_trace("ChickenBridge.scm: 363  rotate-items");
t4=((C_word*)t0)[7];
f_11579(7,t4,((C_word*)t0)[6],((C_word*)t0)[5],((C_word*)t0)[4],((C_word*)t0)[3],((C_word*)t0)[2],t3);}

/* k11657 in k11650 in k11624 in next-in-rotation in k7607 in k7604 in k5838 in k5545 in k5542 in k5538 in k5247 in k5244 in k5241 in k5238 */
static void C_ccall f_11659(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
t2=((C_word*)t0)[3];
f_11629(t2,(C_word)C_i_set_cdr(((C_word*)t0)[2],t1));}

/* k11627 in k11624 in next-in-rotation in k7607 in k7604 in k5838 in k5545 in k5542 in k5538 in k5247 in k5244 in k5241 in k5238 */
static void C_fcall f_11629(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word *a;
t2=(C_word)C_i_cdr(((C_word*)t0)[3]);
t3=(C_word)C_i_car(t2);
t4=(C_word)C_i_cddr(((C_word*)t0)[3]);
t5=(C_word)C_i_set_cdr(((C_word*)t0)[3],t4);
t6=((C_word*)t0)[2];
((C_proc2)(void*)(*((C_word*)t6+1)))(2,t6,t3);}

/* rotate-items in next-in-rotation in k7607 in k7604 in k5838 in k5545 in k5542 in k5538 in k5247 in k5244 in k5241 in k5238 */
static void C_ccall f_11579(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4,C_word t5,C_word t6){
C_word tmp;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word ab[10],*a=ab;
if(c!=7) C_bad_argc_2(c,7,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr7,(void*)f_11579,7,t0,t1,t2,t3,t4,t5,t6);}
t7=C_SCHEME_UNDEFINED;
t8=(*a=C_VECTOR_TYPE|1,a[1]=t7,tmp=(C_word)a,a+=2,tmp);
t9=C_set_block_item(t8,0,(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_11585,a[2]=t8,a[3]=t4,a[4]=t5,a[5]=t2,a[6]=t6,a[7]=((C_word)li139),tmp=(C_word)a,a+=8,tmp));
t10=((C_word*)t8)[1];
f_11585(t10,t1,t3);}

/* do1324 in rotate-items in next-in-rotation in k7607 in k7604 in k5838 in k5545 in k5542 in k5538 in k5247 in k5244 in k5241 in k5238 */
static void C_fcall f_11585(C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word ab[13],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_11585,NULL,3,t0,t1,t2);}
if(C_truep((C_word)C_i_lessp(t2,((C_word*)t0)[6]))){
t3=(C_word)C_i_list_ref(((C_word*)t0)[5],t2);
t4=(C_word)C_a_i_plus(&a,2,t2,((C_word*)t0)[4]);
t5=(C_word)C_i_list_ref(((C_word*)t0)[5],t4);
t6=(*a=C_CLOSURE_TYPE|8,a[1]=(C_word)f_11601,a[2]=t3,a[3]=((C_word*)t0)[5],a[4]=((C_word*)t0)[4],a[5]=t1,a[6]=((C_word*)t0)[2],a[7]=((C_word*)t0)[3],a[8]=t2,tmp=(C_word)a,a+=9,tmp);
C_trace("ChickenBridge.scm: 363  list-set!");
f_6071(t6,((C_word*)t0)[5],t2,t5);}
else{
t3=t1;
((C_proc2)(void*)(*((C_word*)t3+1)))(2,t3,((C_word*)t0)[5]);}}

/* k11599 in do1324 in rotate-items in next-in-rotation in k7607 in k7604 in k5838 in k5545 in k5542 in k5538 in k5247 in k5244 in k5241 in k5238 */
static void C_ccall f_11601(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[10],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_11601,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_11604,a[2]=((C_word*)t0)[5],a[3]=((C_word*)t0)[6],a[4]=((C_word*)t0)[7],a[5]=((C_word*)t0)[8],tmp=(C_word)a,a+=6,tmp);
t3=(C_word)C_a_i_plus(&a,2,((C_word*)t0)[8],((C_word*)t0)[4]);
C_trace("ChickenBridge.scm: 363  list-set!");
f_6071(t2,((C_word*)t0)[3],t3,((C_word*)t0)[2]);}

/* k11602 in k11599 in do1324 in rotate-items in next-in-rotation in k7607 in k7604 in k5838 in k5545 in k5542 in k5538 in k5247 in k5244 in k5241 in k5238 */
static void C_ccall f_11604(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[4],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_11604,2,t0,t1);}
t2=(C_word)C_a_i_plus(&a,2,((C_word*)t0)[5],((C_word*)t0)[4]);
t3=((C_word*)((C_word*)t0)[3])[1];
f_11585(t3,((C_word*)t0)[2],t2);}

/* make-rotation in k7607 in k7604 in k5838 in k5545 in k5542 in k5538 in k5247 in k5244 in k5241 in k5238 */
static void C_ccall f_11102(C_word c,C_word t0,C_word t1,C_word t2,...){
C_word tmp;
C_word t3;
va_list v;
C_word *a,c2=c;
C_save_rest(t2,c2,3);
if(c<3) C_bad_min_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_demand(c*C_SIZEOF_PAIR+14)){
C_save_and_reclaim((void*)tr3r,(void*)f_11102r,3,t0,t1,t2);}
else{
a=C_alloc((c-3)*3);
t3=C_restore_rest(a,C_rest_count(0));
f_11102r(t0,t1,t2,t3);}}

static void C_ccall f_11102r(C_word t0,C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word *a=C_alloc(14);
t4=(*a=C_VECTOR_TYPE|1,a[1]=t2,tmp=(C_word)a,a+=2,tmp);
t5=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_11106,a[2]=t1,a[3]=t4,a[4]=t3,tmp=(C_word)a,a+=5,tmp);
if(C_truep((C_word)C_i_pairp(((C_word*)t4)[1]))){
t6=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_11566,a[2]=t5,a[3]=t4,tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 363  append");
t7=*((C_word*)lf[20]+1);
((C_proc4)C_retrieve_proc(t7))(4,t7,t6,((C_word*)t4)[1],C_SCHEME_END_OF_LIST);}
else{
t6=(C_word)C_a_i_list(&a,1,((C_word*)t4)[1]);
t7=C_set_block_item(t4,0,t6);
t8=t5;
f_11106(t8,t7);}}

/* k11564 in make-rotation in k7607 in k7604 in k5838 in k5545 in k5542 in k5538 in k5247 in k5244 in k5241 in k5238 */
static void C_ccall f_11566(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[3])+1,t1);
t3=((C_word*)t0)[2];
f_11106(t3,t2);}

/* k11104 in make-rotation in k7607 in k7604 in k5838 in k5545 in k5542 in k5538 in k5247 in k5244 in k5241 in k5238 */
static void C_fcall f_11106(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word t14;
C_word t15;
C_word t16;
C_word t17;
C_word t18;
C_word t19;
C_word t20;
C_word t21;
C_word t22;
C_word t23;
C_word t24;
C_word t25;
C_word t26;
C_word t27;
C_word ab[59],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_11106,NULL,2,t0,t1);}
t2=C_SCHEME_FALSE;
t3=(*a=C_VECTOR_TYPE|1,a[1]=t2,tmp=(C_word)a,a+=2,tmp);
t4=C_SCHEME_FALSE;
t5=(*a=C_VECTOR_TYPE|1,a[1]=t4,tmp=(C_word)a,a+=2,tmp);
t6=C_fix(0);
t7=(*a=C_VECTOR_TYPE|1,a[1]=t6,tmp=(C_word)a,a+=2,tmp);
t8=C_SCHEME_FALSE;
t9=(*a=C_VECTOR_TYPE|1,a[1]=t8,tmp=(C_word)a,a+=2,tmp);
t10=C_SCHEME_FALSE;
t11=(*a=C_VECTOR_TYPE|1,a[1]=t10,tmp=(C_word)a,a+=2,tmp);
t12=C_SCHEME_FALSE;
t13=(*a=C_VECTOR_TYPE|1,a[1]=t12,tmp=(C_word)a,a+=2,tmp);
t14=((C_word*)t0)[4];
t15=(*a=C_VECTOR_TYPE|1,a[1]=t14,tmp=(C_word)a,a+=2,tmp);
t16=C_SCHEME_FALSE;
t17=(*a=C_VECTOR_TYPE|1,a[1]=t16,tmp=(C_word)a,a+=2,tmp);
t18=(*a=C_CLOSURE_TYPE|12,a[1]=(C_word)f_11109,a[2]=t13,a[3]=t11,a[4]=t17,a[5]=t9,a[6]=((C_word*)t0)[4],a[7]=t15,a[8]=t5,a[9]=t3,a[10]=t7,a[11]=((C_word*)t0)[2],a[12]=((C_word*)t0)[3],tmp=(C_word)a,a+=13,tmp);
if(C_truep((C_word)C_i_nullp(((C_word*)t15)[1]))){
t19=t18;
f_11109(t19,C_SCHEME_UNDEFINED);}
else{
t19=(C_word)C_i_car(((C_word*)t15)[1]);
t20=(C_word)C_eqp(t19,lf[191]);
if(C_truep(t20)){
t21=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_11439,a[2]=((C_word*)t0)[4],a[3]=t18,a[4]=t15,a[5]=t17,a[6]=t9,a[7]=t3,tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)t9)[1])){
C_trace("ChickenBridge.scm: 363  error");
t22=*((C_word*)lf[6]+1);
((C_proc4)C_retrieve_proc(t22))(4,t22,t21,lf[21],lf[191]);}
else{
t22=t21;
f_11439(2,t22,C_SCHEME_UNDEFINED);}}
else{
t21=(C_word)C_eqp(t19,lf[192]);
if(C_truep(t21)){
t22=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_11474,a[2]=((C_word*)t0)[4],a[3]=t18,a[4]=t15,a[5]=t17,a[6]=t11,a[7]=t5,tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)t11)[1])){
C_trace("ChickenBridge.scm: 363  error");
t23=*((C_word*)lf[6]+1);
((C_proc4)C_retrieve_proc(t23))(4,t23,t22,lf[21],lf[192]);}
else{
t23=t22;
f_11474(2,t23,C_SCHEME_UNDEFINED);}}
else{
t22=(C_word)C_eqp(t19,lf[208]);
if(C_truep(t22)){
t23=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_11509,a[2]=((C_word*)t0)[4],a[3]=t18,a[4]=t15,a[5]=t17,a[6]=t13,a[7]=t7,tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)t13)[1])){
C_trace("ChickenBridge.scm: 363  error");
t24=*((C_word*)lf[6]+1);
((C_proc4)C_retrieve_proc(t24))(4,t24,t23,lf[21],lf[208]);}
else{
t24=t23;
f_11509(2,t24,C_SCHEME_UNDEFINED);}}
else{
t23=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_11538,a[2]=t18,a[3]=t9,a[4]=t3,a[5]=t15,tmp=(C_word)a,a+=6,tmp);
if(C_truep(((C_word*)t17)[1])){
C_trace("ChickenBridge.scm: 363  error");
t24=*((C_word*)lf[6]+1);
((C_proc4)C_retrieve_proc(t24))(4,t24,t23,lf[12],((C_word*)t0)[4]);}
else{
t24=t23;
f_11538(2,t24,C_SCHEME_UNDEFINED);}}}}}}

/* k11536 in k11104 in make-rotation in k7607 in k7604 in k5838 in k5545 in k5542 in k5538 in k5247 in k5244 in k5241 in k5238 */
static void C_ccall f_11538(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_11538,2,t0,t1);}
t2=(C_word)C_i_car(((C_word*)((C_word*)t0)[5])[1]);
t3=C_mutate(((C_word *)((C_word*)t0)[4])+1,t2);
t4=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_11545,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[5],a[4]=((C_word*)t0)[3],tmp=(C_word)a,a+=5,tmp);
t5=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_11553,a[2]=((C_word*)t0)[4],a[3]=t4,tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 363  keyword?");
t6=C_retrieve(lf[15]);
((C_proc3)C_retrieve_proc(t6))(3,t6,t5,((C_word*)((C_word*)t0)[4])[1]);}

/* k11551 in k11536 in k11104 in make-rotation in k7607 in k7604 in k5838 in k5545 in k5542 in k5538 in k5247 in k5244 in k5241 in k5238 */
static void C_ccall f_11553(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
if(C_truep(t1)){
C_trace("ChickenBridge.scm: 363  error");
t2=*((C_word*)lf[6]+1);
((C_proc4)C_retrieve_proc(t2))(4,t2,((C_word*)t0)[3],lf[16],((C_word*)((C_word*)t0)[2])[1]);}
else{
t2=((C_word*)t0)[3];
f_11545(2,t2,C_SCHEME_UNDEFINED);}}

/* k11543 in k11536 in k11104 in make-rotation in k7607 in k7604 in k5838 in k5545 in k5542 in k5538 in k5247 in k5244 in k5241 in k5238 */
static void C_ccall f_11545(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word *a;
t2=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[3])[1]);
t4=C_mutate(((C_word *)((C_word*)t0)[3])+1,t3);
t5=((C_word*)t0)[2];
f_11109(t5,t4);}

/* k11507 in k11104 in make-rotation in k7607 in k7604 in k5838 in k5545 in k5542 in k5538 in k5247 in k5244 in k5241 in k5238 */
static void C_ccall f_11509(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_11509,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_11513,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("ChickenBridge.scm: 363  error");
t4=*((C_word*)lf[6]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[23],((C_word*)t0)[2]);}
else{
t4=t2;
f_11513(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k11511 in k11507 in k11104 in make-rotation in k7607 in k7604 in k5838 in k5545 in k5542 in k5538 in k5247 in k5244 in k5241 in k5238 */
static void C_ccall f_11513(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_11109(t7,t6);}

/* k11472 in k11104 in make-rotation in k7607 in k7604 in k5838 in k5545 in k5542 in k5538 in k5247 in k5244 in k5241 in k5238 */
static void C_ccall f_11474(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_11474,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_11478,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("ChickenBridge.scm: 363  error");
t4=*((C_word*)lf[6]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[23],((C_word*)t0)[2]);}
else{
t4=t2;
f_11478(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k11476 in k11472 in k11104 in make-rotation in k7607 in k7604 in k5838 in k5545 in k5542 in k5538 in k5247 in k5244 in k5241 in k5238 */
static void C_ccall f_11478(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_11109(t7,t6);}

/* k11437 in k11104 in make-rotation in k7607 in k7604 in k5838 in k5545 in k5542 in k5538 in k5247 in k5244 in k5241 in k5238 */
static void C_ccall f_11439(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_11439,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_11443,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("ChickenBridge.scm: 363  error");
t4=*((C_word*)lf[6]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[23],((C_word*)t0)[2]);}
else{
t4=t2;
f_11443(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k11441 in k11437 in k11104 in make-rotation in k7607 in k7604 in k5838 in k5545 in k5542 in k5538 in k5247 in k5244 in k5241 in k5238 */
static void C_ccall f_11443(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_11109(t7,t6);}

/* k11107 in k11104 in make-rotation in k7607 in k7604 in k5838 in k5545 in k5542 in k5538 in k5247 in k5244 in k5241 in k5238 */
static void C_fcall f_11109(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word ab[43],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_11109,NULL,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|12,a[1]=(C_word)f_11112,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],a[7]=((C_word*)t0)[7],a[8]=((C_word*)t0)[8],a[9]=((C_word*)t0)[9],a[10]=((C_word*)t0)[10],a[11]=((C_word*)t0)[11],a[12]=((C_word*)t0)[12],tmp=(C_word)a,a+=13,tmp);
if(C_truep((C_word)C_i_nullp(((C_word*)((C_word*)t0)[7])[1]))){
t3=t2;
f_11112(t3,C_SCHEME_UNDEFINED);}
else{
t3=(C_word)C_i_car(((C_word*)((C_word*)t0)[7])[1]);
t4=(C_word)C_eqp(t3,lf[191]);
if(C_truep(t4)){
t5=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_11304,a[2]=((C_word*)t0)[6],a[3]=t2,a[4]=((C_word*)t0)[7],a[5]=((C_word*)t0)[4],a[6]=((C_word*)t0)[5],a[7]=((C_word*)t0)[9],tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)((C_word*)t0)[5])[1])){
C_trace("ChickenBridge.scm: 363  error");
t6=*((C_word*)lf[6]+1);
((C_proc4)C_retrieve_proc(t6))(4,t6,t5,lf[21],lf[191]);}
else{
t6=t5;
f_11304(2,t6,C_SCHEME_UNDEFINED);}}
else{
t5=(C_word)C_eqp(t3,lf[192]);
if(C_truep(t5)){
t6=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_11339,a[2]=((C_word*)t0)[6],a[3]=t2,a[4]=((C_word*)t0)[7],a[5]=((C_word*)t0)[4],a[6]=((C_word*)t0)[3],a[7]=((C_word*)t0)[8],tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)((C_word*)t0)[3])[1])){
C_trace("ChickenBridge.scm: 363  error");
t7=*((C_word*)lf[6]+1);
((C_proc4)C_retrieve_proc(t7))(4,t7,t6,lf[21],lf[192]);}
else{
t7=t6;
f_11339(2,t7,C_SCHEME_UNDEFINED);}}
else{
t6=(C_word)C_eqp(t3,lf[208]);
if(C_truep(t6)){
t7=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_11374,a[2]=((C_word*)t0)[6],a[3]=t2,a[4]=((C_word*)t0)[7],a[5]=((C_word*)t0)[4],a[6]=((C_word*)t0)[2],a[7]=((C_word*)t0)[10],tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)((C_word*)t0)[2])[1])){
C_trace("ChickenBridge.scm: 363  error");
t8=*((C_word*)lf[6]+1);
((C_proc4)C_retrieve_proc(t8))(4,t8,t7,lf[21],lf[208]);}
else{
t8=t7;
f_11374(2,t8,C_SCHEME_UNDEFINED);}}
else{
t7=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_11403,a[2]=t2,a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[8],a[5]=((C_word*)t0)[7],tmp=(C_word)a,a+=6,tmp);
if(C_truep(((C_word*)((C_word*)t0)[4])[1])){
C_trace("ChickenBridge.scm: 363  error");
t8=*((C_word*)lf[6]+1);
((C_proc4)C_retrieve_proc(t8))(4,t8,t7,lf[12],((C_word*)t0)[6]);}
else{
t8=t7;
f_11403(2,t8,C_SCHEME_UNDEFINED);}}}}}}

/* k11401 in k11107 in k11104 in make-rotation in k7607 in k7604 in k5838 in k5545 in k5542 in k5538 in k5247 in k5244 in k5241 in k5238 */
static void C_ccall f_11403(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_11403,2,t0,t1);}
t2=(C_word)C_i_car(((C_word*)((C_word*)t0)[5])[1]);
t3=C_mutate(((C_word *)((C_word*)t0)[4])+1,t2);
t4=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_11410,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[5],a[4]=((C_word*)t0)[3],tmp=(C_word)a,a+=5,tmp);
t5=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_11418,a[2]=((C_word*)t0)[4],a[3]=t4,tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 363  keyword?");
t6=C_retrieve(lf[15]);
((C_proc3)C_retrieve_proc(t6))(3,t6,t5,((C_word*)((C_word*)t0)[4])[1]);}

/* k11416 in k11401 in k11107 in k11104 in make-rotation in k7607 in k7604 in k5838 in k5545 in k5542 in k5538 in k5247 in k5244 in k5241 in k5238 */
static void C_ccall f_11418(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
if(C_truep(t1)){
C_trace("ChickenBridge.scm: 363  error");
t2=*((C_word*)lf[6]+1);
((C_proc4)C_retrieve_proc(t2))(4,t2,((C_word*)t0)[3],lf[16],((C_word*)((C_word*)t0)[2])[1]);}
else{
t2=((C_word*)t0)[3];
f_11410(2,t2,C_SCHEME_UNDEFINED);}}

/* k11408 in k11401 in k11107 in k11104 in make-rotation in k7607 in k7604 in k5838 in k5545 in k5542 in k5538 in k5247 in k5244 in k5241 in k5238 */
static void C_ccall f_11410(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word *a;
t2=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[3])[1]);
t4=C_mutate(((C_word *)((C_word*)t0)[3])+1,t3);
t5=((C_word*)t0)[2];
f_11112(t5,t4);}

/* k11372 in k11107 in k11104 in make-rotation in k7607 in k7604 in k5838 in k5545 in k5542 in k5538 in k5247 in k5244 in k5241 in k5238 */
static void C_ccall f_11374(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_11374,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_11378,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("ChickenBridge.scm: 363  error");
t4=*((C_word*)lf[6]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[23],((C_word*)t0)[2]);}
else{
t4=t2;
f_11378(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k11376 in k11372 in k11107 in k11104 in make-rotation in k7607 in k7604 in k5838 in k5545 in k5542 in k5538 in k5247 in k5244 in k5241 in k5238 */
static void C_ccall f_11378(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_11112(t7,t6);}

/* k11337 in k11107 in k11104 in make-rotation in k7607 in k7604 in k5838 in k5545 in k5542 in k5538 in k5247 in k5244 in k5241 in k5238 */
static void C_ccall f_11339(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_11339,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_11343,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("ChickenBridge.scm: 363  error");
t4=*((C_word*)lf[6]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[23],((C_word*)t0)[2]);}
else{
t4=t2;
f_11343(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k11341 in k11337 in k11107 in k11104 in make-rotation in k7607 in k7604 in k5838 in k5545 in k5542 in k5538 in k5247 in k5244 in k5241 in k5238 */
static void C_ccall f_11343(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_11112(t7,t6);}

/* k11302 in k11107 in k11104 in make-rotation in k7607 in k7604 in k5838 in k5545 in k5542 in k5538 in k5247 in k5244 in k5241 in k5238 */
static void C_ccall f_11304(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_11304,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_11308,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("ChickenBridge.scm: 363  error");
t4=*((C_word*)lf[6]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[23],((C_word*)t0)[2]);}
else{
t4=t2;
f_11308(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k11306 in k11302 in k11107 in k11104 in make-rotation in k7607 in k7604 in k5838 in k5545 in k5542 in k5538 in k5247 in k5244 in k5241 in k5238 */
static void C_ccall f_11308(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_11112(t7,t6);}

/* k11110 in k11107 in k11104 in make-rotation in k7607 in k7604 in k5838 in k5545 in k5542 in k5538 in k5247 in k5244 in k5241 in k5238 */
static void C_fcall f_11112(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word ab[39],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_11112,NULL,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|8,a[1]=(C_word)f_11115,a[2]=((C_word*)t0)[6],a[3]=((C_word*)t0)[7],a[4]=((C_word*)t0)[8],a[5]=((C_word*)t0)[9],a[6]=((C_word*)t0)[10],a[7]=((C_word*)t0)[11],a[8]=((C_word*)t0)[12],tmp=(C_word)a,a+=9,tmp);
if(C_truep((C_word)C_i_nullp(((C_word*)((C_word*)t0)[7])[1]))){
t3=t2;
f_11115(t3,C_SCHEME_UNDEFINED);}
else{
t3=(C_word)C_i_car(((C_word*)((C_word*)t0)[7])[1]);
t4=(C_word)C_eqp(t3,lf[191]);
if(C_truep(t4)){
t5=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_11169,a[2]=((C_word*)t0)[6],a[3]=t2,a[4]=((C_word*)t0)[7],a[5]=((C_word*)t0)[4],a[6]=((C_word*)t0)[5],a[7]=((C_word*)t0)[9],tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)((C_word*)t0)[5])[1])){
C_trace("ChickenBridge.scm: 363  error");
t6=*((C_word*)lf[6]+1);
((C_proc4)C_retrieve_proc(t6))(4,t6,t5,lf[21],lf[191]);}
else{
t6=t5;
f_11169(2,t6,C_SCHEME_UNDEFINED);}}
else{
t5=(C_word)C_eqp(t3,lf[192]);
if(C_truep(t5)){
t6=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_11204,a[2]=((C_word*)t0)[6],a[3]=t2,a[4]=((C_word*)t0)[7],a[5]=((C_word*)t0)[4],a[6]=((C_word*)t0)[3],a[7]=((C_word*)t0)[8],tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)((C_word*)t0)[3])[1])){
C_trace("ChickenBridge.scm: 363  error");
t7=*((C_word*)lf[6]+1);
((C_proc4)C_retrieve_proc(t7))(4,t7,t6,lf[21],lf[192]);}
else{
t7=t6;
f_11204(2,t7,C_SCHEME_UNDEFINED);}}
else{
t6=(C_word)C_eqp(t3,lf[208]);
if(C_truep(t6)){
t7=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_11239,a[2]=((C_word*)t0)[6],a[3]=t2,a[4]=((C_word*)t0)[7],a[5]=((C_word*)t0)[4],a[6]=((C_word*)t0)[2],a[7]=((C_word*)t0)[10],tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)((C_word*)t0)[2])[1])){
C_trace("ChickenBridge.scm: 363  error");
t8=*((C_word*)lf[6]+1);
((C_proc4)C_retrieve_proc(t8))(4,t8,t7,lf[21],lf[208]);}
else{
t8=t7;
f_11239(2,t8,C_SCHEME_UNDEFINED);}}
else{
t7=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_11268,a[2]=t2,a[3]=((C_word*)t0)[2],a[4]=((C_word*)t0)[10],a[5]=((C_word*)t0)[7],tmp=(C_word)a,a+=6,tmp);
if(C_truep(((C_word*)((C_word*)t0)[4])[1])){
C_trace("ChickenBridge.scm: 363  error");
t8=*((C_word*)lf[6]+1);
((C_proc4)C_retrieve_proc(t8))(4,t8,t7,lf[12],((C_word*)t0)[6]);}
else{
t8=t7;
f_11268(2,t8,C_SCHEME_UNDEFINED);}}}}}}

/* k11266 in k11110 in k11107 in k11104 in make-rotation in k7607 in k7604 in k5838 in k5545 in k5542 in k5538 in k5247 in k5244 in k5241 in k5238 */
static void C_ccall f_11268(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_11268,2,t0,t1);}
t2=(C_word)C_i_car(((C_word*)((C_word*)t0)[5])[1]);
t3=C_mutate(((C_word *)((C_word*)t0)[4])+1,t2);
t4=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_11275,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[5],a[4]=((C_word*)t0)[3],tmp=(C_word)a,a+=5,tmp);
t5=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_11283,a[2]=((C_word*)t0)[4],a[3]=t4,tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 363  keyword?");
t6=C_retrieve(lf[15]);
((C_proc3)C_retrieve_proc(t6))(3,t6,t5,((C_word*)((C_word*)t0)[4])[1]);}

/* k11281 in k11266 in k11110 in k11107 in k11104 in make-rotation in k7607 in k7604 in k5838 in k5545 in k5542 in k5538 in k5247 in k5244 in k5241 in k5238 */
static void C_ccall f_11283(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
if(C_truep(t1)){
C_trace("ChickenBridge.scm: 363  error");
t2=*((C_word*)lf[6]+1);
((C_proc4)C_retrieve_proc(t2))(4,t2,((C_word*)t0)[3],lf[16],((C_word*)((C_word*)t0)[2])[1]);}
else{
t2=((C_word*)t0)[3];
f_11275(2,t2,C_SCHEME_UNDEFINED);}}

/* k11273 in k11266 in k11110 in k11107 in k11104 in make-rotation in k7607 in k7604 in k5838 in k5545 in k5542 in k5538 in k5247 in k5244 in k5241 in k5238 */
static void C_ccall f_11275(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word *a;
t2=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[3])[1]);
t4=C_mutate(((C_word *)((C_word*)t0)[3])+1,t3);
t5=((C_word*)t0)[2];
f_11115(t5,t4);}

/* k11237 in k11110 in k11107 in k11104 in make-rotation in k7607 in k7604 in k5838 in k5545 in k5542 in k5538 in k5247 in k5244 in k5241 in k5238 */
static void C_ccall f_11239(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_11239,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_11243,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("ChickenBridge.scm: 363  error");
t4=*((C_word*)lf[6]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[23],((C_word*)t0)[2]);}
else{
t4=t2;
f_11243(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k11241 in k11237 in k11110 in k11107 in k11104 in make-rotation in k7607 in k7604 in k5838 in k5545 in k5542 in k5538 in k5247 in k5244 in k5241 in k5238 */
static void C_ccall f_11243(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_11115(t7,t6);}

/* k11202 in k11110 in k11107 in k11104 in make-rotation in k7607 in k7604 in k5838 in k5545 in k5542 in k5538 in k5247 in k5244 in k5241 in k5238 */
static void C_ccall f_11204(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_11204,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_11208,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("ChickenBridge.scm: 363  error");
t4=*((C_word*)lf[6]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[23],((C_word*)t0)[2]);}
else{
t4=t2;
f_11208(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k11206 in k11202 in k11110 in k11107 in k11104 in make-rotation in k7607 in k7604 in k5838 in k5545 in k5542 in k5538 in k5247 in k5244 in k5241 in k5238 */
static void C_ccall f_11208(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_11115(t7,t6);}

/* k11167 in k11110 in k11107 in k11104 in make-rotation in k7607 in k7604 in k5838 in k5545 in k5542 in k5538 in k5247 in k5244 in k5241 in k5238 */
static void C_ccall f_11169(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_11169,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_11173,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("ChickenBridge.scm: 363  error");
t4=*((C_word*)lf[6]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[23],((C_word*)t0)[2]);}
else{
t4=t2;
f_11173(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k11171 in k11167 in k11110 in k11107 in k11104 in make-rotation in k7607 in k7604 in k5838 in k5545 in k5542 in k5538 in k5247 in k5244 in k5241 in k5238 */
static void C_ccall f_11173(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_11115(t7,t6);}

/* k11113 in k11110 in k11107 in k11104 in make-rotation in k7607 in k7604 in k5838 in k5545 in k5542 in k5538 in k5247 in k5244 in k5241 in k5238 */
static void C_fcall f_11115(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_11115,NULL,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_11118,a[2]=((C_word*)t0)[4],a[3]=((C_word*)t0)[5],a[4]=((C_word*)t0)[6],a[5]=((C_word*)t0)[7],a[6]=((C_word*)t0)[8],tmp=(C_word)a,a+=7,tmp);
if(C_truep((C_word)C_i_nullp(((C_word*)((C_word*)t0)[3])[1]))){
t3=t2;
f_11118(2,t3,C_SCHEME_UNDEFINED);}
else{
C_trace("ChickenBridge.scm: 363  error");
t3=*((C_word*)lf[6]+1);
((C_proc4)C_retrieve_proc(t3))(4,t3,t2,lf[7],((C_word*)t0)[2]);}}

/* k11116 in k11113 in k11110 in k11107 in k11104 in make-rotation in k7607 in k7604 in k5838 in k5545 in k5542 in k5538 in k5247 in k5244 in k5241 in k5238 */
static void C_ccall f_11118(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_11118,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_11121,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],tmp=(C_word)a,a+=7,tmp);
C_trace("ChickenBridge.scm: 363  %alloc-pattern");
f_8557(t2);}

/* k11119 in k11116 in k11113 in k11110 in k11107 in k11104 in make-rotation in k7607 in k7604 in k5838 in k5545 in k5542 in k5538 in k5247 in k5244 in k5241 in k5238 */
static void C_ccall f_11121(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[11],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_11121,2,t0,t1);}
t2=(C_word)C_i_length(((C_word*)((C_word*)t0)[6])[1]);
t3=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_11127,a[2]=((C_word*)t0)[4],a[3]=t1,a[4]=((C_word*)t0)[5],tmp=(C_word)a,a+=5,tmp);
t4=(C_word)C_a_i_cons(&a,2,((C_word*)((C_word*)t0)[6])[1],((C_word*)((C_word*)t0)[6])[1]);
t5=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_11136,a[2]=((C_word)li137),tmp=(C_word)a,a+=3,tmp);
C_trace("ChickenBridge.scm: 363  initialize-pattern");
f_8567(t3,t1,t4,((C_word*)((C_word*)t0)[3])[1],((C_word*)((C_word*)t0)[2])[1],C_fix(0),t2,t2,C_retrieve2(lf[207],"next-in-rotation"),t5);}

/* a11135 in k11119 in k11116 in k11113 in k11110 in k11107 in k11104 in make-rotation in k7607 in k7604 in k5838 in k5545 in k5542 in k5538 in k5247 in k5244 in k5241 in k5238 */
static void C_ccall f_11136(C_word c,C_word t0,C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word ab[4],*a=ab;
if(c!=4) C_bad_argc_2(c,4,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr4,(void*)f_11136,4,t0,t1,t2,t3);}
t4=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_11148,a[2]=t2,a[3]=t1,tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 363  pattern-data");
f_8286(t4,t3);}

/* k11146 in a11135 in k11119 in k11116 in k11113 in k11110 in k11107 in k11104 in make-rotation in k7607 in k7604 in k5838 in k5545 in k5542 in k5538 in k5247 in k5244 in k5241 in k5238 */
static void C_ccall f_11148(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word *a;
t2=(C_word)C_i_car(t1);
C_trace("for-each");
t3=*((C_word*)lf[189]+1);
((C_proc4)(void*)(*((C_word*)t3+1)))(4,t3,((C_word*)t0)[3],((C_word*)t0)[2],t2);}

/* k11125 in k11119 in k11116 in k11113 in k11110 in k11107 in k11104 in make-rotation in k7607 in k7604 in k5838 in k5545 in k5542 in k5538 in k5247 in k5244 in k5241 in k5238 */
static void C_ccall f_11127(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[4],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_11127,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_11130,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 363  pattern-cache-set!");
f_8493(t2,((C_word*)t0)[3],((C_word*)((C_word*)t0)[2])[1]);}

/* k11128 in k11125 in k11119 in k11116 in k11113 in k11110 in k11107 in k11104 in make-rotation in k7607 in k7604 in k5838 in k5545 in k5542 in k5538 in k5247 in k5244 in k5241 in k5238 */
static void C_ccall f_11130(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
t2=((C_word*)t0)[3];
((C_proc2)(void*)(*((C_word*)t2+1)))(2,t2,((C_word*)t0)[2]);}

/* next-in-heap in k7607 in k7604 in k5838 in k5545 in k5542 in k5538 in k5247 in k5244 in k5241 in k5238 */
static void C_ccall f_11026(C_word c,C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word ab[4],*a=ab;
if(c!=3) C_bad_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr3,(void*)f_11026,3,t0,t1,t2);}
t3=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_11030,a[2]=t2,a[3]=t1,tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 363  pattern-data");
f_8286(t3,t2);}

/* k11028 in next-in-heap in k7607 in k7604 in k5838 in k5545 in k5542 in k5538 in k5247 in k5244 in k5241 in k5238 */
static void C_ccall f_11030(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[8],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_11030,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_11033,a[2]=((C_word*)t0)[3],a[3]=t1,tmp=(C_word)a,a+=4,tmp);
t3=(C_word)C_i_cdr(t1);
if(C_truep((C_word)C_i_nullp(t3))){
t4=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_11049,a[2]=t2,a[3]=t1,tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 363  pattern-length");
f_8304(t4,((C_word*)t0)[2]);}
else{
t4=t2;
f_11033(2,t4,C_SCHEME_UNDEFINED);}}

/* k11047 in k11028 in next-in-heap in k7607 in k7604 in k5838 in k5545 in k5542 in k5538 in k5247 in k5244 in k5241 in k5238 */
static void C_ccall f_11049(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[6],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_11049,2,t0,t1);}
t2=(C_word)C_i_car(((C_word*)t0)[3]);
t3=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_11059,a[2]=((C_word*)t0)[2],a[3]=t2,a[4]=((C_word*)t0)[3],a[5]=t1,tmp=(C_word)a,a+=6,tmp);
C_trace("ChickenBridge.scm: 363  random");
t4=C_retrieve(lf[205]);
((C_proc3)C_retrieve_proc(t4))(3,t4,t3,t1);}

/* k11057 in k11047 in k11028 in next-in-heap in k7607 in k7604 in k5838 in k5545 in k5542 in k5538 in k5247 in k5244 in k5241 in k5238 */
static void C_ccall f_11059(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_11059,2,t0,t1);}
t2=C_SCHEME_UNDEFINED;
t3=(*a=C_VECTOR_TYPE|1,a[1]=t2,tmp=(C_word)a,a+=2,tmp);
t4=C_set_block_item(t3,0,(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_11061,a[2]=t3,a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=((C_word)li135),tmp=(C_word)a,a+=7,tmp));
t5=((C_word*)t3)[1];
f_11061(t5,((C_word*)t0)[2],C_fix(0),t1,C_SCHEME_FALSE);}

/* do1224 in k11057 in k11047 in k11028 in next-in-heap in k7607 in k7604 in k5838 in k5545 in k5542 in k5538 in k5247 in k5244 in k5241 in k5238 */
static void C_fcall f_11061(C_word t0,C_word t1,C_word t2,C_word t3,C_word t4){
C_word tmp;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word ab[11],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_11061,NULL,5,t0,t1,t2,t3,t4);}
t5=(*a=C_VECTOR_TYPE|1,a[1]=t4,tmp=(C_word)a,a+=2,tmp);
if(C_truep((C_word)C_i_nequalp(t2,((C_word*)t0)[5]))){
t6=t1;
((C_proc2)(void*)(*((C_word*)t6+1)))(2,t6,(C_word)C_i_set_cdr(((C_word*)t0)[4],((C_word*)t0)[3]));}
else{
t6=(C_word)C_i_list_ref(((C_word*)t0)[3],t2);
t7=C_set_block_item(t5,0,t6);
t8=(*a=C_CLOSURE_TYPE|8,a[1]=(C_word)f_11078,a[2]=t3,a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[5],a[5]=t5,a[6]=t1,a[7]=((C_word*)t0)[2],a[8]=t2,tmp=(C_word)a,a+=9,tmp);
t9=(C_word)C_i_list_ref(((C_word*)t0)[3],t3);
C_trace("ChickenBridge.scm: 363  list-set!");
f_6071(t8,((C_word*)t0)[3],t2,t9);}}

/* k11076 in do1224 in k11057 in k11047 in k11028 in next-in-heap in k7607 in k7604 in k5838 in k5545 in k5542 in k5538 in k5247 in k5244 in k5241 in k5238 */
static void C_ccall f_11078(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_11078,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_11081,a[2]=((C_word*)t0)[4],a[3]=((C_word*)t0)[5],a[4]=((C_word*)t0)[6],a[5]=((C_word*)t0)[7],a[6]=((C_word*)t0)[8],tmp=(C_word)a,a+=7,tmp);
C_trace("ChickenBridge.scm: 363  list-set!");
f_6071(t2,((C_word*)t0)[3],((C_word*)t0)[2],((C_word*)((C_word*)t0)[5])[1]);}

/* k11079 in k11076 in do1224 in k11057 in k11047 in k11028 in next-in-heap in k7607 in k7604 in k5838 in k5545 in k5542 in k5538 in k5247 in k5244 in k5241 in k5238 */
static void C_ccall f_11081(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[10],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_11081,2,t0,t1);}
t2=(C_word)C_a_i_plus(&a,2,((C_word*)t0)[6],C_fix(1));
t3=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_11092,a[2]=((C_word*)t0)[3],a[3]=t2,a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],tmp=(C_word)a,a+=6,tmp);
C_trace("ChickenBridge.scm: 363  random");
t4=C_retrieve(lf[205]);
((C_proc3)C_retrieve_proc(t4))(3,t4,t3,((C_word*)t0)[2]);}

/* k11090 in k11079 in k11076 in do1224 in k11057 in k11047 in k11028 in next-in-heap in k7607 in k7604 in k5838 in k5545 in k5542 in k5538 in k5247 in k5244 in k5241 in k5238 */
static void C_ccall f_11092(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
t2=((C_word*)((C_word*)t0)[5])[1];
f_11061(t2,((C_word*)t0)[4],((C_word*)t0)[3],t1,((C_word*)((C_word*)t0)[2])[1]);}

/* k11031 in k11028 in next-in-heap in k7607 in k7604 in k5838 in k5545 in k5542 in k5538 in k5247 in k5244 in k5241 in k5238 */
static void C_ccall f_11033(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word *a;
t2=(C_word)C_i_cadr(((C_word*)t0)[3]);
t3=(C_word)C_i_cddr(((C_word*)t0)[3]);
t4=(C_word)C_i_set_cdr(((C_word*)t0)[3],t3);
t5=((C_word*)t0)[2];
((C_proc2)(void*)(*((C_word*)t5+1)))(2,t5,t2);}

/* make-heap in k7607 in k7604 in k5838 in k5545 in k5542 in k5538 in k5247 in k5244 in k5241 in k5238 */
static void C_ccall f_10763(C_word c,C_word t0,C_word t1,C_word t2,...){
C_word tmp;
C_word t3;
va_list v;
C_word *a,c2=c;
C_save_rest(t2,c2,3);
if(c<3) C_bad_min_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_demand(c*C_SIZEOF_PAIR+14)){
C_save_and_reclaim((void*)tr3r,(void*)f_10763r,3,t0,t1,t2);}
else{
a=C_alloc((c-3)*3);
t3=C_restore_rest(a,C_rest_count(0));
f_10763r(t0,t1,t2,t3);}}

static void C_ccall f_10763r(C_word t0,C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word *a=C_alloc(14);
t4=(*a=C_VECTOR_TYPE|1,a[1]=t2,tmp=(C_word)a,a+=2,tmp);
t5=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_10767,a[2]=t1,a[3]=t4,a[4]=t3,tmp=(C_word)a,a+=5,tmp);
if(C_truep((C_word)C_i_pairp(((C_word*)t4)[1]))){
t6=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_11016,a[2]=t5,a[3]=t4,tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 363  append");
t7=*((C_word*)lf[20]+1);
((C_proc4)C_retrieve_proc(t7))(4,t7,t6,((C_word*)t4)[1],C_SCHEME_END_OF_LIST);}
else{
t6=(C_word)C_a_i_list(&a,1,((C_word*)t4)[1]);
t7=C_set_block_item(t4,0,t6);
t8=t5;
f_10767(t8,t7);}}

/* k11014 in make-heap in k7607 in k7604 in k5838 in k5545 in k5542 in k5538 in k5247 in k5244 in k5241 in k5238 */
static void C_ccall f_11016(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[3])+1,t1);
t3=((C_word*)t0)[2];
f_10767(t3,t2);}

/* k10765 in make-heap in k7607 in k7604 in k5838 in k5545 in k5542 in k5538 in k5247 in k5244 in k5241 in k5238 */
static void C_fcall f_10767(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word t14;
C_word t15;
C_word t16;
C_word t17;
C_word t18;
C_word t19;
C_word t20;
C_word t21;
C_word ab[45],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_10767,NULL,2,t0,t1);}
t2=C_SCHEME_FALSE;
t3=(*a=C_VECTOR_TYPE|1,a[1]=t2,tmp=(C_word)a,a+=2,tmp);
t4=C_SCHEME_FALSE;
t5=(*a=C_VECTOR_TYPE|1,a[1]=t4,tmp=(C_word)a,a+=2,tmp);
t6=C_SCHEME_FALSE;
t7=(*a=C_VECTOR_TYPE|1,a[1]=t6,tmp=(C_word)a,a+=2,tmp);
t8=C_SCHEME_FALSE;
t9=(*a=C_VECTOR_TYPE|1,a[1]=t8,tmp=(C_word)a,a+=2,tmp);
t10=((C_word*)t0)[4];
t11=(*a=C_VECTOR_TYPE|1,a[1]=t10,tmp=(C_word)a,a+=2,tmp);
t12=C_SCHEME_FALSE;
t13=(*a=C_VECTOR_TYPE|1,a[1]=t12,tmp=(C_word)a,a+=2,tmp);
t14=(*a=C_CLOSURE_TYPE|10,a[1]=(C_word)f_10770,a[2]=t9,a[3]=t13,a[4]=t7,a[5]=((C_word*)t0)[4],a[6]=t11,a[7]=t5,a[8]=t3,a[9]=((C_word*)t0)[2],a[10]=((C_word*)t0)[3],tmp=(C_word)a,a+=11,tmp);
if(C_truep((C_word)C_i_nullp(((C_word*)t11)[1]))){
t15=t14;
f_10770(t15,C_SCHEME_UNDEFINED);}
else{
t15=(C_word)C_i_car(((C_word*)t11)[1]);
t16=(C_word)C_eqp(t15,lf[191]);
if(C_truep(t16)){
t17=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_10924,a[2]=((C_word*)t0)[4],a[3]=t14,a[4]=t11,a[5]=t13,a[6]=t7,a[7]=t3,tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)t7)[1])){
C_trace("ChickenBridge.scm: 363  error");
t18=*((C_word*)lf[6]+1);
((C_proc4)C_retrieve_proc(t18))(4,t18,t17,lf[21],lf[191]);}
else{
t18=t17;
f_10924(2,t18,C_SCHEME_UNDEFINED);}}
else{
t17=(C_word)C_eqp(t15,lf[192]);
if(C_truep(t17)){
t18=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_10959,a[2]=((C_word*)t0)[4],a[3]=t14,a[4]=t11,a[5]=t13,a[6]=t9,a[7]=t5,tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)t9)[1])){
C_trace("ChickenBridge.scm: 363  error");
t19=*((C_word*)lf[6]+1);
((C_proc4)C_retrieve_proc(t19))(4,t19,t18,lf[21],lf[192]);}
else{
t19=t18;
f_10959(2,t19,C_SCHEME_UNDEFINED);}}
else{
t18=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_10988,a[2]=t14,a[3]=t7,a[4]=t3,a[5]=t11,tmp=(C_word)a,a+=6,tmp);
if(C_truep(((C_word*)t13)[1])){
C_trace("ChickenBridge.scm: 363  error");
t19=*((C_word*)lf[6]+1);
((C_proc4)C_retrieve_proc(t19))(4,t19,t18,lf[12],((C_word*)t0)[4]);}
else{
t19=t18;
f_10988(2,t19,C_SCHEME_UNDEFINED);}}}}}

/* k10986 in k10765 in make-heap in k7607 in k7604 in k5838 in k5545 in k5542 in k5538 in k5247 in k5244 in k5241 in k5238 */
static void C_ccall f_10988(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_10988,2,t0,t1);}
t2=(C_word)C_i_car(((C_word*)((C_word*)t0)[5])[1]);
t3=C_mutate(((C_word *)((C_word*)t0)[4])+1,t2);
t4=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_10995,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[5],a[4]=((C_word*)t0)[3],tmp=(C_word)a,a+=5,tmp);
t5=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_11003,a[2]=((C_word*)t0)[4],a[3]=t4,tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 363  keyword?");
t6=C_retrieve(lf[15]);
((C_proc3)C_retrieve_proc(t6))(3,t6,t5,((C_word*)((C_word*)t0)[4])[1]);}

/* k11001 in k10986 in k10765 in make-heap in k7607 in k7604 in k5838 in k5545 in k5542 in k5538 in k5247 in k5244 in k5241 in k5238 */
static void C_ccall f_11003(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
if(C_truep(t1)){
C_trace("ChickenBridge.scm: 363  error");
t2=*((C_word*)lf[6]+1);
((C_proc4)C_retrieve_proc(t2))(4,t2,((C_word*)t0)[3],lf[16],((C_word*)((C_word*)t0)[2])[1]);}
else{
t2=((C_word*)t0)[3];
f_10995(2,t2,C_SCHEME_UNDEFINED);}}

/* k10993 in k10986 in k10765 in make-heap in k7607 in k7604 in k5838 in k5545 in k5542 in k5538 in k5247 in k5244 in k5241 in k5238 */
static void C_ccall f_10995(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word *a;
t2=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[3])[1]);
t4=C_mutate(((C_word *)((C_word*)t0)[3])+1,t3);
t5=((C_word*)t0)[2];
f_10770(t5,t4);}

/* k10957 in k10765 in make-heap in k7607 in k7604 in k5838 in k5545 in k5542 in k5538 in k5247 in k5244 in k5241 in k5238 */
static void C_ccall f_10959(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_10959,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_10963,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("ChickenBridge.scm: 363  error");
t4=*((C_word*)lf[6]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[23],((C_word*)t0)[2]);}
else{
t4=t2;
f_10963(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k10961 in k10957 in k10765 in make-heap in k7607 in k7604 in k5838 in k5545 in k5542 in k5538 in k5247 in k5244 in k5241 in k5238 */
static void C_ccall f_10963(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_10770(t7,t6);}

/* k10922 in k10765 in make-heap in k7607 in k7604 in k5838 in k5545 in k5542 in k5538 in k5247 in k5244 in k5241 in k5238 */
static void C_ccall f_10924(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_10924,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_10928,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("ChickenBridge.scm: 363  error");
t4=*((C_word*)lf[6]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[23],((C_word*)t0)[2]);}
else{
t4=t2;
f_10928(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k10926 in k10922 in k10765 in make-heap in k7607 in k7604 in k5838 in k5545 in k5542 in k5538 in k5247 in k5244 in k5241 in k5238 */
static void C_ccall f_10928(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_10770(t7,t6);}

/* k10768 in k10765 in make-heap in k7607 in k7604 in k5838 in k5545 in k5542 in k5538 in k5247 in k5244 in k5241 in k5238 */
static void C_fcall f_10770(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word ab[30],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_10770,NULL,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_10773,a[2]=((C_word*)t0)[5],a[3]=((C_word*)t0)[6],a[4]=((C_word*)t0)[7],a[5]=((C_word*)t0)[8],a[6]=((C_word*)t0)[9],a[7]=((C_word*)t0)[10],tmp=(C_word)a,a+=8,tmp);
if(C_truep((C_word)C_i_nullp(((C_word*)((C_word*)t0)[6])[1]))){
t3=t2;
f_10773(t3,C_SCHEME_UNDEFINED);}
else{
t3=(C_word)C_i_car(((C_word*)((C_word*)t0)[6])[1]);
t4=(C_word)C_eqp(t3,lf[191]);
if(C_truep(t4)){
t5=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_10824,a[2]=((C_word*)t0)[5],a[3]=t2,a[4]=((C_word*)t0)[6],a[5]=((C_word*)t0)[3],a[6]=((C_word*)t0)[4],a[7]=((C_word*)t0)[8],tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)((C_word*)t0)[4])[1])){
C_trace("ChickenBridge.scm: 363  error");
t6=*((C_word*)lf[6]+1);
((C_proc4)C_retrieve_proc(t6))(4,t6,t5,lf[21],lf[191]);}
else{
t6=t5;
f_10824(2,t6,C_SCHEME_UNDEFINED);}}
else{
t5=(C_word)C_eqp(t3,lf[192]);
if(C_truep(t5)){
t6=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_10859,a[2]=((C_word*)t0)[5],a[3]=t2,a[4]=((C_word*)t0)[6],a[5]=((C_word*)t0)[3],a[6]=((C_word*)t0)[2],a[7]=((C_word*)t0)[7],tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)((C_word*)t0)[2])[1])){
C_trace("ChickenBridge.scm: 363  error");
t7=*((C_word*)lf[6]+1);
((C_proc4)C_retrieve_proc(t7))(4,t7,t6,lf[21],lf[192]);}
else{
t7=t6;
f_10859(2,t7,C_SCHEME_UNDEFINED);}}
else{
t6=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_10888,a[2]=t2,a[3]=((C_word*)t0)[2],a[4]=((C_word*)t0)[7],a[5]=((C_word*)t0)[6],tmp=(C_word)a,a+=6,tmp);
if(C_truep(((C_word*)((C_word*)t0)[3])[1])){
C_trace("ChickenBridge.scm: 363  error");
t7=*((C_word*)lf[6]+1);
((C_proc4)C_retrieve_proc(t7))(4,t7,t6,lf[12],((C_word*)t0)[5]);}
else{
t7=t6;
f_10888(2,t7,C_SCHEME_UNDEFINED);}}}}}

/* k10886 in k10768 in k10765 in make-heap in k7607 in k7604 in k5838 in k5545 in k5542 in k5538 in k5247 in k5244 in k5241 in k5238 */
static void C_ccall f_10888(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_10888,2,t0,t1);}
t2=(C_word)C_i_car(((C_word*)((C_word*)t0)[5])[1]);
t3=C_mutate(((C_word *)((C_word*)t0)[4])+1,t2);
t4=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_10895,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[5],a[4]=((C_word*)t0)[3],tmp=(C_word)a,a+=5,tmp);
t5=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_10903,a[2]=((C_word*)t0)[4],a[3]=t4,tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 363  keyword?");
t6=C_retrieve(lf[15]);
((C_proc3)C_retrieve_proc(t6))(3,t6,t5,((C_word*)((C_word*)t0)[4])[1]);}

/* k10901 in k10886 in k10768 in k10765 in make-heap in k7607 in k7604 in k5838 in k5545 in k5542 in k5538 in k5247 in k5244 in k5241 in k5238 */
static void C_ccall f_10903(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
if(C_truep(t1)){
C_trace("ChickenBridge.scm: 363  error");
t2=*((C_word*)lf[6]+1);
((C_proc4)C_retrieve_proc(t2))(4,t2,((C_word*)t0)[3],lf[16],((C_word*)((C_word*)t0)[2])[1]);}
else{
t2=((C_word*)t0)[3];
f_10895(2,t2,C_SCHEME_UNDEFINED);}}

/* k10893 in k10886 in k10768 in k10765 in make-heap in k7607 in k7604 in k5838 in k5545 in k5542 in k5538 in k5247 in k5244 in k5241 in k5238 */
static void C_ccall f_10895(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word *a;
t2=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[3])[1]);
t4=C_mutate(((C_word *)((C_word*)t0)[3])+1,t3);
t5=((C_word*)t0)[2];
f_10773(t5,t4);}

/* k10857 in k10768 in k10765 in make-heap in k7607 in k7604 in k5838 in k5545 in k5542 in k5538 in k5247 in k5244 in k5241 in k5238 */
static void C_ccall f_10859(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_10859,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_10863,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("ChickenBridge.scm: 363  error");
t4=*((C_word*)lf[6]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[23],((C_word*)t0)[2]);}
else{
t4=t2;
f_10863(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k10861 in k10857 in k10768 in k10765 in make-heap in k7607 in k7604 in k5838 in k5545 in k5542 in k5538 in k5247 in k5244 in k5241 in k5238 */
static void C_ccall f_10863(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_10773(t7,t6);}

/* k10822 in k10768 in k10765 in make-heap in k7607 in k7604 in k5838 in k5545 in k5542 in k5538 in k5247 in k5244 in k5241 in k5238 */
static void C_ccall f_10824(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_10824,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_10828,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("ChickenBridge.scm: 363  error");
t4=*((C_word*)lf[6]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[23],((C_word*)t0)[2]);}
else{
t4=t2;
f_10828(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k10826 in k10822 in k10768 in k10765 in make-heap in k7607 in k7604 in k5838 in k5545 in k5542 in k5538 in k5247 in k5244 in k5241 in k5238 */
static void C_ccall f_10828(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_10773(t7,t6);}

/* k10771 in k10768 in k10765 in make-heap in k7607 in k7604 in k5838 in k5545 in k5542 in k5538 in k5247 in k5244 in k5241 in k5238 */
static void C_fcall f_10773(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[6],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_10773,NULL,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_10776,a[2]=((C_word*)t0)[4],a[3]=((C_word*)t0)[5],a[4]=((C_word*)t0)[6],a[5]=((C_word*)t0)[7],tmp=(C_word)a,a+=6,tmp);
if(C_truep((C_word)C_i_nullp(((C_word*)((C_word*)t0)[3])[1]))){
t3=t2;
f_10776(2,t3,C_SCHEME_UNDEFINED);}
else{
C_trace("ChickenBridge.scm: 363  error");
t3=*((C_word*)lf[6]+1);
((C_proc4)C_retrieve_proc(t3))(4,t3,t2,lf[7],((C_word*)t0)[2]);}}

/* k10774 in k10771 in k10768 in k10765 in make-heap in k7607 in k7604 in k5838 in k5545 in k5542 in k5538 in k5247 in k5244 in k5241 in k5238 */
static void C_ccall f_10776(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[6],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_10776,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_10779,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],tmp=(C_word)a,a+=6,tmp);
C_trace("ChickenBridge.scm: 363  %alloc-pattern");
f_8557(t2);}

/* k10777 in k10774 in k10771 in k10768 in k10765 in make-heap in k7607 in k7604 in k5838 in k5545 in k5542 in k5538 in k5247 in k5244 in k5241 in k5238 */
static void C_ccall f_10779(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[10],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_10779,2,t0,t1);}
t2=(C_word)C_i_length(((C_word*)((C_word*)t0)[5])[1]);
t3=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_10785,a[2]=t1,a[3]=((C_word*)t0)[4],tmp=(C_word)a,a+=4,tmp);
t4=(C_word)C_a_i_list(&a,1,((C_word*)((C_word*)t0)[5])[1]);
t5=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_10791,a[2]=((C_word)li133),tmp=(C_word)a,a+=3,tmp);
C_trace("ChickenBridge.scm: 363  initialize-pattern");
f_8567(t3,t1,t4,((C_word*)((C_word*)t0)[3])[1],((C_word*)((C_word*)t0)[2])[1],C_fix(0),t2,t2,C_retrieve2(lf[204],"next-in-heap"),t5);}

/* a10790 in k10777 in k10774 in k10771 in k10768 in k10765 in make-heap in k7607 in k7604 in k5838 in k5545 in k5542 in k5538 in k5247 in k5244 in k5241 in k5238 */
static void C_ccall f_10791(C_word c,C_word t0,C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word ab[4],*a=ab;
if(c!=4) C_bad_argc_2(c,4,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr4,(void*)f_10791,4,t0,t1,t2,t3);}
t4=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_10803,a[2]=t2,a[3]=t1,tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 363  pattern-data");
f_8286(t4,t3);}

/* k10801 in a10790 in k10777 in k10774 in k10771 in k10768 in k10765 in make-heap in k7607 in k7604 in k5838 in k5545 in k5542 in k5538 in k5247 in k5244 in k5241 in k5238 */
static void C_ccall f_10803(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word *a;
t2=(C_word)C_i_car(t1);
C_trace("for-each");
t3=*((C_word*)lf[189]+1);
((C_proc4)(void*)(*((C_word*)t3+1)))(4,t3,((C_word*)t0)[3],((C_word*)t0)[2],t2);}

/* k10783 in k10777 in k10774 in k10771 in k10768 in k10765 in make-heap in k7607 in k7604 in k5838 in k5545 in k5542 in k5538 in k5247 in k5244 in k5241 in k5238 */
static void C_ccall f_10785(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
t2=((C_word*)t0)[3];
((C_proc2)(void*)(*((C_word*)t2+1)))(2,t2,((C_word*)t0)[2]);}

/* next-in-line in k7607 in k7604 in k5838 in k5545 in k5542 in k5538 in k5247 in k5244 in k5241 in k5238 */
static void C_ccall f_10727(C_word c,C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word ab[4],*a=ab;
if(c!=3) C_bad_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr3,(void*)f_10727,3,t0,t1,t2);}
t3=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_10731,a[2]=t2,a[3]=t1,tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 363  pattern-data");
f_8286(t3,t2);}

/* k10729 in next-in-line in k7607 in k7604 in k5838 in k5545 in k5542 in k5538 in k5247 in k5244 in k5241 in k5238 */
static void C_ccall f_10731(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word ab[11],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_10731,2,t0,t1);}
t2=(C_word)C_i_cdr(t1);
if(C_truep((C_word)C_i_nullp(t2))){
t3=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_10740,a[2]=t1,a[3]=((C_word*)t0)[3],tmp=(C_word)a,a+=4,tmp);
t4=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_10747,a[2]=t3,tmp=(C_word)a,a+=3,tmp);
C_trace("ChickenBridge.scm: 363  pattern-period");
f_8340(t4,((C_word*)t0)[2]);}
else{
t3=(C_word)C_i_car(t1);
t4=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_10753,a[2]=t3,a[3]=((C_word*)t0)[3],tmp=(C_word)a,a+=4,tmp);
t5=(C_word)C_i_cdr(t1);
C_trace("ChickenBridge.scm: 363  pattern-data-set!");
f_8277(t4,((C_word*)t0)[2],t5);}}

/* k10751 in k10729 in next-in-line in k7607 in k7604 in k5838 in k5545 in k5542 in k5538 in k5247 in k5244 in k5241 in k5238 */
static void C_ccall f_10753(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
t2=((C_word*)t0)[3];
((C_proc2)(void*)(*((C_word*)t2+1)))(2,t2,((C_word*)t0)[2]);}

/* k10745 in k10729 in next-in-line in k7607 in k7604 in k5838 in k5545 in k5542 in k5538 in k5247 in k5244 in k5241 in k5238 */
static void C_ccall f_10747(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 363  period-count-set!");
f_8109(((C_word*)t0)[2],t1,C_fix(1));}

/* k10738 in k10729 in next-in-line in k7607 in k7604 in k5838 in k5545 in k5542 in k5538 in k5247 in k5244 in k5241 in k5238 */
static void C_ccall f_10740(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
t2=((C_word*)t0)[3];
((C_proc2)(void*)(*((C_word*)t2+1)))(2,t2,(C_word)C_i_car(((C_word*)t0)[2]));}

/* make-line in k7607 in k7604 in k5838 in k5545 in k5542 in k5538 in k5247 in k5244 in k5241 in k5238 */
static void C_ccall f_10480(C_word c,C_word t0,C_word t1,C_word t2,...){
C_word tmp;
C_word t3;
va_list v;
C_word *a,c2=c;
C_save_rest(t2,c2,3);
if(c<3) C_bad_min_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_demand(c*C_SIZEOF_PAIR+10)){
C_save_and_reclaim((void*)tr3r,(void*)f_10480r,3,t0,t1,t2);}
else{
a=C_alloc((c-3)*3);
t3=C_restore_rest(a,C_rest_count(0));
f_10480r(t0,t1,t2,t3);}}

static void C_ccall f_10480r(C_word t0,C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word *a=C_alloc(10);
t4=(*a=C_VECTOR_TYPE|1,a[1]=t2,tmp=(C_word)a,a+=2,tmp);
t5=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_10484,a[2]=t1,a[3]=t4,a[4]=t3,tmp=(C_word)a,a+=5,tmp);
if(C_truep((C_word)C_i_pairp(((C_word*)t4)[1]))){
t6=t5;
f_10484(t6,C_SCHEME_UNDEFINED);}
else{
t6=(C_word)C_a_i_list(&a,1,((C_word*)t4)[1]);
t7=C_set_block_item(t4,0,t6);
t8=t5;
f_10484(t8,t7);}}

/* k10482 in make-line in k7607 in k7604 in k5838 in k5545 in k5542 in k5538 in k5247 in k5244 in k5241 in k5238 */
static void C_fcall f_10484(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word t14;
C_word t15;
C_word t16;
C_word t17;
C_word t18;
C_word t19;
C_word t20;
C_word t21;
C_word ab[45],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_10484,NULL,2,t0,t1);}
t2=C_SCHEME_FALSE;
t3=(*a=C_VECTOR_TYPE|1,a[1]=t2,tmp=(C_word)a,a+=2,tmp);
t4=C_SCHEME_FALSE;
t5=(*a=C_VECTOR_TYPE|1,a[1]=t4,tmp=(C_word)a,a+=2,tmp);
t6=C_SCHEME_FALSE;
t7=(*a=C_VECTOR_TYPE|1,a[1]=t6,tmp=(C_word)a,a+=2,tmp);
t8=C_SCHEME_FALSE;
t9=(*a=C_VECTOR_TYPE|1,a[1]=t8,tmp=(C_word)a,a+=2,tmp);
t10=((C_word*)t0)[4];
t11=(*a=C_VECTOR_TYPE|1,a[1]=t10,tmp=(C_word)a,a+=2,tmp);
t12=C_SCHEME_FALSE;
t13=(*a=C_VECTOR_TYPE|1,a[1]=t12,tmp=(C_word)a,a+=2,tmp);
t14=(*a=C_CLOSURE_TYPE|10,a[1]=(C_word)f_10487,a[2]=t9,a[3]=t13,a[4]=t7,a[5]=((C_word*)t0)[4],a[6]=t11,a[7]=t5,a[8]=t3,a[9]=((C_word*)t0)[2],a[10]=((C_word*)t0)[3],tmp=(C_word)a,a+=11,tmp);
if(C_truep((C_word)C_i_nullp(((C_word*)t11)[1]))){
t15=t14;
f_10487(t15,C_SCHEME_UNDEFINED);}
else{
t15=(C_word)C_i_car(((C_word*)t11)[1]);
t16=(C_word)C_eqp(t15,lf[191]);
if(C_truep(t16)){
t17=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_10633,a[2]=((C_word*)t0)[4],a[3]=t14,a[4]=t11,a[5]=t13,a[6]=t7,a[7]=t3,tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)t7)[1])){
C_trace("ChickenBridge.scm: 363  error");
t18=*((C_word*)lf[6]+1);
((C_proc4)C_retrieve_proc(t18))(4,t18,t17,lf[21],lf[191]);}
else{
t18=t17;
f_10633(2,t18,C_SCHEME_UNDEFINED);}}
else{
t17=(C_word)C_eqp(t15,lf[192]);
if(C_truep(t17)){
t18=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_10668,a[2]=((C_word*)t0)[4],a[3]=t14,a[4]=t11,a[5]=t13,a[6]=t9,a[7]=t5,tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)t9)[1])){
C_trace("ChickenBridge.scm: 363  error");
t19=*((C_word*)lf[6]+1);
((C_proc4)C_retrieve_proc(t19))(4,t19,t18,lf[21],lf[192]);}
else{
t19=t18;
f_10668(2,t19,C_SCHEME_UNDEFINED);}}
else{
t18=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_10697,a[2]=t14,a[3]=t7,a[4]=t3,a[5]=t11,tmp=(C_word)a,a+=6,tmp);
if(C_truep(((C_word*)t13)[1])){
C_trace("ChickenBridge.scm: 363  error");
t19=*((C_word*)lf[6]+1);
((C_proc4)C_retrieve_proc(t19))(4,t19,t18,lf[12],((C_word*)t0)[4]);}
else{
t19=t18;
f_10697(2,t19,C_SCHEME_UNDEFINED);}}}}}

/* k10695 in k10482 in make-line in k7607 in k7604 in k5838 in k5545 in k5542 in k5538 in k5247 in k5244 in k5241 in k5238 */
static void C_ccall f_10697(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_10697,2,t0,t1);}
t2=(C_word)C_i_car(((C_word*)((C_word*)t0)[5])[1]);
t3=C_mutate(((C_word *)((C_word*)t0)[4])+1,t2);
t4=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_10704,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[5],a[4]=((C_word*)t0)[3],tmp=(C_word)a,a+=5,tmp);
t5=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_10712,a[2]=((C_word*)t0)[4],a[3]=t4,tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 363  keyword?");
t6=C_retrieve(lf[15]);
((C_proc3)C_retrieve_proc(t6))(3,t6,t5,((C_word*)((C_word*)t0)[4])[1]);}

/* k10710 in k10695 in k10482 in make-line in k7607 in k7604 in k5838 in k5545 in k5542 in k5538 in k5247 in k5244 in k5241 in k5238 */
static void C_ccall f_10712(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
if(C_truep(t1)){
C_trace("ChickenBridge.scm: 363  error");
t2=*((C_word*)lf[6]+1);
((C_proc4)C_retrieve_proc(t2))(4,t2,((C_word*)t0)[3],lf[16],((C_word*)((C_word*)t0)[2])[1]);}
else{
t2=((C_word*)t0)[3];
f_10704(2,t2,C_SCHEME_UNDEFINED);}}

/* k10702 in k10695 in k10482 in make-line in k7607 in k7604 in k5838 in k5545 in k5542 in k5538 in k5247 in k5244 in k5241 in k5238 */
static void C_ccall f_10704(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word *a;
t2=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[3])[1]);
t4=C_mutate(((C_word *)((C_word*)t0)[3])+1,t3);
t5=((C_word*)t0)[2];
f_10487(t5,t4);}

/* k10666 in k10482 in make-line in k7607 in k7604 in k5838 in k5545 in k5542 in k5538 in k5247 in k5244 in k5241 in k5238 */
static void C_ccall f_10668(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_10668,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_10672,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("ChickenBridge.scm: 363  error");
t4=*((C_word*)lf[6]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[23],((C_word*)t0)[2]);}
else{
t4=t2;
f_10672(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k10670 in k10666 in k10482 in make-line in k7607 in k7604 in k5838 in k5545 in k5542 in k5538 in k5247 in k5244 in k5241 in k5238 */
static void C_ccall f_10672(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_10487(t7,t6);}

/* k10631 in k10482 in make-line in k7607 in k7604 in k5838 in k5545 in k5542 in k5538 in k5247 in k5244 in k5241 in k5238 */
static void C_ccall f_10633(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_10633,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_10637,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("ChickenBridge.scm: 363  error");
t4=*((C_word*)lf[6]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[23],((C_word*)t0)[2]);}
else{
t4=t2;
f_10637(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k10635 in k10631 in k10482 in make-line in k7607 in k7604 in k5838 in k5545 in k5542 in k5538 in k5247 in k5244 in k5241 in k5238 */
static void C_ccall f_10637(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_10487(t7,t6);}

/* k10485 in k10482 in make-line in k7607 in k7604 in k5838 in k5545 in k5542 in k5538 in k5247 in k5244 in k5241 in k5238 */
static void C_fcall f_10487(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word ab[30],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_10487,NULL,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_10490,a[2]=((C_word*)t0)[5],a[3]=((C_word*)t0)[6],a[4]=((C_word*)t0)[7],a[5]=((C_word*)t0)[8],a[6]=((C_word*)t0)[9],a[7]=((C_word*)t0)[10],tmp=(C_word)a,a+=8,tmp);
if(C_truep((C_word)C_i_nullp(((C_word*)((C_word*)t0)[6])[1]))){
t3=t2;
f_10490(t3,C_SCHEME_UNDEFINED);}
else{
t3=(C_word)C_i_car(((C_word*)((C_word*)t0)[6])[1]);
t4=(C_word)C_eqp(t3,lf[191]);
if(C_truep(t4)){
t5=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_10533,a[2]=((C_word*)t0)[5],a[3]=t2,a[4]=((C_word*)t0)[6],a[5]=((C_word*)t0)[3],a[6]=((C_word*)t0)[4],a[7]=((C_word*)t0)[8],tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)((C_word*)t0)[4])[1])){
C_trace("ChickenBridge.scm: 363  error");
t6=*((C_word*)lf[6]+1);
((C_proc4)C_retrieve_proc(t6))(4,t6,t5,lf[21],lf[191]);}
else{
t6=t5;
f_10533(2,t6,C_SCHEME_UNDEFINED);}}
else{
t5=(C_word)C_eqp(t3,lf[192]);
if(C_truep(t5)){
t6=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_10568,a[2]=((C_word*)t0)[5],a[3]=t2,a[4]=((C_word*)t0)[6],a[5]=((C_word*)t0)[3],a[6]=((C_word*)t0)[2],a[7]=((C_word*)t0)[7],tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)((C_word*)t0)[2])[1])){
C_trace("ChickenBridge.scm: 363  error");
t7=*((C_word*)lf[6]+1);
((C_proc4)C_retrieve_proc(t7))(4,t7,t6,lf[21],lf[192]);}
else{
t7=t6;
f_10568(2,t7,C_SCHEME_UNDEFINED);}}
else{
t6=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_10597,a[2]=t2,a[3]=((C_word*)t0)[2],a[4]=((C_word*)t0)[7],a[5]=((C_word*)t0)[6],tmp=(C_word)a,a+=6,tmp);
if(C_truep(((C_word*)((C_word*)t0)[3])[1])){
C_trace("ChickenBridge.scm: 363  error");
t7=*((C_word*)lf[6]+1);
((C_proc4)C_retrieve_proc(t7))(4,t7,t6,lf[12],((C_word*)t0)[5]);}
else{
t7=t6;
f_10597(2,t7,C_SCHEME_UNDEFINED);}}}}}

/* k10595 in k10485 in k10482 in make-line in k7607 in k7604 in k5838 in k5545 in k5542 in k5538 in k5247 in k5244 in k5241 in k5238 */
static void C_ccall f_10597(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_10597,2,t0,t1);}
t2=(C_word)C_i_car(((C_word*)((C_word*)t0)[5])[1]);
t3=C_mutate(((C_word *)((C_word*)t0)[4])+1,t2);
t4=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_10604,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[5],a[4]=((C_word*)t0)[3],tmp=(C_word)a,a+=5,tmp);
t5=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_10612,a[2]=((C_word*)t0)[4],a[3]=t4,tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 363  keyword?");
t6=C_retrieve(lf[15]);
((C_proc3)C_retrieve_proc(t6))(3,t6,t5,((C_word*)((C_word*)t0)[4])[1]);}

/* k10610 in k10595 in k10485 in k10482 in make-line in k7607 in k7604 in k5838 in k5545 in k5542 in k5538 in k5247 in k5244 in k5241 in k5238 */
static void C_ccall f_10612(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
if(C_truep(t1)){
C_trace("ChickenBridge.scm: 363  error");
t2=*((C_word*)lf[6]+1);
((C_proc4)C_retrieve_proc(t2))(4,t2,((C_word*)t0)[3],lf[16],((C_word*)((C_word*)t0)[2])[1]);}
else{
t2=((C_word*)t0)[3];
f_10604(2,t2,C_SCHEME_UNDEFINED);}}

/* k10602 in k10595 in k10485 in k10482 in make-line in k7607 in k7604 in k5838 in k5545 in k5542 in k5538 in k5247 in k5244 in k5241 in k5238 */
static void C_ccall f_10604(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word *a;
t2=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[3])[1]);
t4=C_mutate(((C_word *)((C_word*)t0)[3])+1,t3);
t5=((C_word*)t0)[2];
f_10490(t5,t4);}

/* k10566 in k10485 in k10482 in make-line in k7607 in k7604 in k5838 in k5545 in k5542 in k5538 in k5247 in k5244 in k5241 in k5238 */
static void C_ccall f_10568(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_10568,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_10572,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("ChickenBridge.scm: 363  error");
t4=*((C_word*)lf[6]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[23],((C_word*)t0)[2]);}
else{
t4=t2;
f_10572(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k10570 in k10566 in k10485 in k10482 in make-line in k7607 in k7604 in k5838 in k5545 in k5542 in k5538 in k5247 in k5244 in k5241 in k5238 */
static void C_ccall f_10572(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_10490(t7,t6);}

/* k10531 in k10485 in k10482 in make-line in k7607 in k7604 in k5838 in k5545 in k5542 in k5538 in k5247 in k5244 in k5241 in k5238 */
static void C_ccall f_10533(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_10533,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_10537,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("ChickenBridge.scm: 363  error");
t4=*((C_word*)lf[6]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[23],((C_word*)t0)[2]);}
else{
t4=t2;
f_10537(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k10535 in k10531 in k10485 in k10482 in make-line in k7607 in k7604 in k5838 in k5545 in k5542 in k5538 in k5247 in k5244 in k5241 in k5238 */
static void C_ccall f_10537(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_10490(t7,t6);}

/* k10488 in k10485 in k10482 in make-line in k7607 in k7604 in k5838 in k5545 in k5542 in k5538 in k5247 in k5244 in k5241 in k5238 */
static void C_fcall f_10490(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[6],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_10490,NULL,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_10493,a[2]=((C_word*)t0)[4],a[3]=((C_word*)t0)[5],a[4]=((C_word*)t0)[6],a[5]=((C_word*)t0)[7],tmp=(C_word)a,a+=6,tmp);
if(C_truep((C_word)C_i_nullp(((C_word*)((C_word*)t0)[3])[1]))){
t3=t2;
f_10493(2,t3,C_SCHEME_UNDEFINED);}
else{
C_trace("ChickenBridge.scm: 363  error");
t3=*((C_word*)lf[6]+1);
((C_proc4)C_retrieve_proc(t3))(4,t3,t2,lf[7],((C_word*)t0)[2]);}}

/* k10491 in k10488 in k10485 in k10482 in make-line in k7607 in k7604 in k5838 in k5545 in k5542 in k5538 in k5247 in k5244 in k5241 in k5238 */
static void C_ccall f_10493(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[6],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_10493,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_10496,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],tmp=(C_word)a,a+=6,tmp);
C_trace("ChickenBridge.scm: 363  %alloc-pattern");
f_8557(t2);}

/* k10494 in k10491 in k10488 in k10485 in k10482 in make-line in k7607 in k7604 in k5838 in k5545 in k5542 in k5538 in k5247 in k5244 in k5241 in k5238 */
static void C_ccall f_10496(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_10496,2,t0,t1);}
t2=(C_word)C_i_length(((C_word*)((C_word*)t0)[5])[1]);
t3=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_10502,a[2]=t1,a[3]=((C_word*)t0)[4],tmp=(C_word)a,a+=4,tmp);
t4=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_10504,a[2]=((C_word)li130),tmp=(C_word)a,a+=3,tmp);
C_trace("ChickenBridge.scm: 363  initialize-pattern");
f_8567(t3,t1,((C_word*)((C_word*)t0)[5])[1],((C_word*)((C_word*)t0)[3])[1],((C_word*)((C_word*)t0)[2])[1],C_fix(0),t2,t2,C_retrieve2(lf[202],"next-in-line"),t4);}

/* a10503 in k10494 in k10491 in k10488 in k10485 in k10482 in make-line in k7607 in k7604 in k5838 in k5545 in k5542 in k5538 in k5247 in k5244 in k5241 in k5238 */
static void C_ccall f_10504(C_word c,C_word t0,C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word ab[4],*a=ab;
if(c!=4) C_bad_argc_2(c,4,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr4,(void*)f_10504,4,t0,t1,t2,t3);}
t4=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_10512,a[2]=t2,a[3]=t1,tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 363  pattern-data");
f_8286(t4,t3);}

/* k10510 in a10503 in k10494 in k10491 in k10488 in k10485 in k10482 in make-line in k7607 in k7604 in k5838 in k5545 in k5542 in k5538 in k5247 in k5244 in k5241 in k5238 */
static void C_ccall f_10512(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("for-each");
t2=*((C_word*)lf[189]+1);
((C_proc4)(void*)(*((C_word*)t2+1)))(4,t2,((C_word*)t0)[3],((C_word*)t0)[2],t1);}

/* k10500 in k10494 in k10491 in k10488 in k10485 in k10482 in make-line in k7607 in k7604 in k5838 in k5545 in k5542 in k5538 in k5247 in k5244 in k5241 in k5238 */
static void C_ccall f_10502(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
t2=((C_word*)t0)[3];
((C_proc2)(void*)(*((C_word*)t2+1)))(2,t2,((C_word*)t0)[2]);}

/* next-in-palindrome in k7607 in k7604 in k5838 in k5545 in k5542 in k5538 in k5247 in k5244 in k5241 in k5238 */
static void C_ccall f_10265(C_word c,C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word ab[4],*a=ab;
if(c!=3) C_bad_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr3,(void*)f_10265,3,t0,t1,t2);}
t3=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_10269,a[2]=t2,a[3]=t1,tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 363  pattern-cache");
f_8502(t3,t2);}

/* k10267 in next-in-palindrome in k7607 in k7604 in k5838 in k5545 in k5542 in k5538 in k5247 in k5244 in k5241 in k5238 */
static void C_ccall f_10269(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word ab[19],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_10269,2,t0,t1);}
t2=t1;
t3=(C_word)C_i_check_structure(t2,lf[194]);
t4=(C_word)C_i_block_ref(t2,C_fix(1));
t5=t4;
t6=(*a=C_VECTOR_TYPE|1,a[1]=t5,tmp=(C_word)a,a+=2,tmp);
t7=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_10275,a[2]=t1,a[3]=((C_word*)t0)[2],a[4]=t6,a[5]=((C_word*)t0)[3],tmp=(C_word)a,a+=6,tmp);
if(C_truep((C_word)C_i_lessp(((C_word*)t6)[1],C_fix(0)))){
t8=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_10299,a[2]=t1,a[3]=((C_word*)t0)[2],a[4]=t7,a[5]=t6,tmp=(C_word)a,a+=6,tmp);
t9=t1;
t10=(C_word)C_i_check_structure(t9,lf[194]);
t11=(C_word)C_i_block_ref(t9,C_fix(5));
C_trace("ChickenBridge.scm: 363  next-1");
f_8908(t8,t11);}
else{
t8=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_10478,a[2]=t7,a[3]=t1,a[4]=t6,tmp=(C_word)a,a+=5,tmp);
C_trace("ChickenBridge.scm: 363  palin-len");
f_9706(t8,t1);}}

/* k10476 in k10267 in next-in-palindrome in k7607 in k7604 in k5838 in k5545 in k5542 in k5538 in k5247 in k5244 in k5241 in k5238 */
static void C_ccall f_10478(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[5],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_10478,2,t0,t1);}
if(C_truep((C_word)C_i_nequalp(((C_word*)((C_word*)t0)[4])[1],t1))){
t2=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_10431,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[3],tmp=(C_word)a,a+=5,tmp);
C_trace("ChickenBridge.scm: 363  palin-inc-set!");
f_9715(t2,((C_word*)t0)[3],C_fix(-1));}
else{
t2=((C_word*)t0)[2];
f_10275(2,t2,C_SCHEME_UNDEFINED);}}

/* k10429 in k10476 in k10267 in next-in-palindrome in k7607 in k7604 in k5838 in k5545 in k5542 in k5538 in k5247 in k5244 in k5241 in k5238 */
static void C_ccall f_10431(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word ab[4],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_10431,2,t0,t1);}
t2=((C_word*)t0)[4];
t3=(C_word)C_i_check_structure(t2,lf[194]);
t4=(C_word)C_i_block_ref(t2,C_fix(4));
t5=(C_word)C_eqp(t4,C_SCHEME_TRUE);
t6=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_10443,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],tmp=(C_word)a,a+=4,tmp);
if(C_truep(t5)){
t7=t6;
f_10443(t7,t5);}
else{
if(C_truep((C_word)C_i_pairp(t4))){
t7=(C_word)C_i_cdr(t4);
if(C_truep((C_word)C_i_pairp(t7))){
t8=(C_word)C_i_cadr(t4);
t9=t6;
f_10443(t9,(C_word)C_eqp(t8,C_SCHEME_TRUE));}
else{
t8=t6;
f_10443(t8,C_SCHEME_FALSE);}}
else{
t7=t6;
f_10443(t7,C_SCHEME_FALSE);}}}

/* k10441 in k10429 in k10476 in k10267 in next-in-palindrome in k7607 in k7604 in k5838 in k5545 in k5542 in k5538 in k5247 in k5244 in k5241 in k5238 */
static void C_fcall f_10443(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[8],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_10443,NULL,2,t0,t1);}
if(C_truep(t1)){
t2=(C_word)C_a_i_minus(&a,2,((C_word*)((C_word*)t0)[3])[1],C_fix(2));
t3=C_mutate(((C_word *)((C_word*)t0)[3])+1,t2);
t4=((C_word*)t0)[2];
f_10275(2,t4,t3);}
else{
t2=(C_word)C_a_i_minus(&a,2,((C_word*)((C_word*)t0)[3])[1],C_fix(1));
t3=C_mutate(((C_word *)((C_word*)t0)[3])+1,t2);
t4=((C_word*)t0)[2];
f_10275(2,t4,t3);}}

/* k10297 in k10267 in next-in-palindrome in k7607 in k7604 in k5838 in k5545 in k5542 in k5538 in k5247 in k5244 in k5241 in k5238 */
static void C_ccall f_10299(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_10299,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_10302,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=t1,a[6]=((C_word*)t0)[5],tmp=(C_word)a,a+=7,tmp);
C_trace("ChickenBridge.scm: 363  palin-len");
f_9706(t2,((C_word*)t0)[2]);}

/* k10300 in k10297 in k10267 in next-in-palindrome in k7607 in k7604 in k5838 in k5545 in k5542 in k5538 in k5247 in k5244 in k5241 in k5238 */
static void C_ccall f_10302(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_10302,2,t0,t1);}
t2=(C_word)C_i_nequalp(((C_word*)((C_word*)t0)[6])[1],C_fix(-2));
t3=(*a=C_CLOSURE_TYPE|8,a[1]=(C_word)f_10308,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[6],a[4]=((C_word*)t0)[3],a[5]=t2,a[6]=((C_word*)t0)[4],a[7]=((C_word*)t0)[5],a[8]=t1,tmp=(C_word)a,a+=9,tmp);
t4=((C_word*)t0)[2];
t5=((C_word*)t0)[5];
t6=(C_word)C_i_check_structure(t4,lf[194]);
C_trace("ChickenBridge.scm: 363  ##sys#block-set!");
t7=*((C_word*)lf[143]+1);
((C_proc5)(void*)(*((C_word*)t7+1)))(5,t7,t3,t4,C_fix(4),t5);}

/* k10306 in k10300 in k10297 in k10267 in next-in-palindrome in k7607 in k7604 in k5838 in k5545 in k5542 in k5538 in k5247 in k5244 in k5241 in k5238 */
static void C_ccall f_10308(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[8],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_10308,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_10311,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],a[7]=((C_word*)t0)[8],tmp=(C_word)a,a+=8,tmp);
C_trace("ChickenBridge.scm: 363  palin-inc-set!");
f_9715(t2,((C_word*)t0)[2],C_fix(1));}

/* k10309 in k10306 in k10300 in k10297 in k10267 in next-in-palindrome in k7607 in k7604 in k5838 in k5545 in k5542 in k5538 in k5247 in k5244 in k5241 in k5238 */
static void C_ccall f_10311(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[12],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_10311,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_10314,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_eqp(((C_word*)t0)[6],C_SCHEME_TRUE);
t4=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_10399,a[2]=t2,a[3]=((C_word*)t0)[2],a[4]=((C_word*)t0)[4],tmp=(C_word)a,a+=5,tmp);
if(C_truep(t3)){
t5=t4;
f_10399(t5,t3);}
else{
if(C_truep((C_word)C_i_pairp(((C_word*)t0)[6]))){
t5=(C_word)C_i_car(((C_word*)t0)[6]);
t6=t4;
f_10399(t6,(C_word)C_eqp(t5,C_SCHEME_TRUE));}
else{
t5=t4;
f_10399(t5,C_SCHEME_FALSE);}}}

/* k10397 in k10309 in k10306 in k10300 in k10297 in k10267 in next-in-palindrome in k7607 in k7604 in k5838 in k5545 in k5542 in k5538 in k5247 in k5244 in k5241 in k5238 */
static void C_fcall f_10399(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word *a;
if(C_truep(t1)){
if(C_truep(((C_word*)t0)[4])){
t2=C_set_block_item(((C_word*)t0)[3],0,C_fix(0));
t3=((C_word*)t0)[2];
f_10314(t3,t2);}
else{
t2=C_set_block_item(((C_word*)t0)[3],0,C_fix(1));
t3=((C_word*)t0)[2];
f_10314(t3,t2);}}
else{
t2=C_set_block_item(((C_word*)t0)[3],0,C_fix(0));
t3=((C_word*)t0)[2];
f_10314(t3,t2);}}

/* k10312 in k10309 in k10306 in k10300 in k10297 in k10267 in next-in-palindrome in k7607 in k7604 in k5838 in k5545 in k5542 in k5538 in k5247 in k5244 in k5241 in k5238 */
static void C_fcall f_10314(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[10],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_10314,NULL,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_10320,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],tmp=(C_word)a,a+=7,tmp);
t3=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_10393,a[2]=t2,tmp=(C_word)a,a+=3,tmp);
C_trace("ChickenBridge.scm: 363  pattern-flags");
f_8268(t3,((C_word*)t0)[2]);}

/* k10391 in k10312 in k10309 in k10306 in k10300 in k10297 in k10267 in next-in-palindrome in k7607 in k7604 in k5838 in k5545 in k5542 in k5538 in k5247 in k5244 in k5241 in k5238 */
static void C_ccall f_10393(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 363  bitwise-test");
f_6215(((C_word*)t0)[2],t1,C_fix(2));}

/* k10318 in k10312 in k10309 in k10306 in k10300 in k10297 in k10267 in next-in-palindrome in k7607 in k7604 in k5838 in k5545 in k5542 in k5538 in k5247 in k5244 in k5241 in k5238 */
static void C_ccall f_10320(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[6],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_10320,2,t0,t1);}
if(C_truep(t1)){
t2=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_10323,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],tmp=(C_word)a,a+=6,tmp);
C_trace("ChickenBridge.scm: 363  pattern-period");
f_8340(t2,((C_word*)t0)[2]);}
else{
t2=((C_word*)t0)[4];
f_10275(2,t2,C_SCHEME_UNDEFINED);}}

/* k10321 in k10318 in k10312 in k10309 in k10306 in k10300 in k10297 in k10267 in next-in-palindrome in k7607 in k7604 in k5838 in k5545 in k5542 in k5538 in k5247 in k5244 in k5241 in k5238 */
static void C_ccall f_10323(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[24],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_10323,2,t0,t1);}
t2=(C_word)C_a_i_times(&a,2,((C_word*)t0)[5],C_fix(2));
switch(((C_word*)t0)[4]){
case C_SCHEME_FALSE:
C_trace("ChickenBridge.scm: 363  period-count-set!");
f_8109(((C_word*)t0)[3],t1,t2);
case C_SCHEME_TRUE:
t3=(C_truep(((C_word*)t0)[2])?(C_word)C_a_i_minus(&a,2,t2,C_fix(2)):(C_word)C_a_i_minus(&a,2,t2,C_fix(3)));
C_trace("ChickenBridge.scm: 363  period-count-set!");
f_8109(((C_word*)t0)[3],t1,t3);
default:
if(C_truep((C_word)C_i_equalp(((C_word*)t0)[4],lf[199]))){
t3=(C_word)C_a_i_minus(&a,2,t2,C_fix(1));
C_trace("ChickenBridge.scm: 363  period-count-set!");
f_8109(((C_word*)t0)[3],t1,t3);}
else{
if(C_truep((C_word)C_i_equalp(((C_word*)t0)[4],lf[200]))){
t3=(C_truep(((C_word*)t0)[2])?(C_word)C_a_i_minus(&a,2,t2,C_fix(1)):(C_word)C_a_i_minus(&a,2,t2,C_fix(2)));
C_trace("ChickenBridge.scm: 363  period-count-set!");
f_8109(((C_word*)t0)[3],t1,t3);}
else{
C_trace("ChickenBridge.scm: 363  period-count-set!");
f_8109(((C_word*)t0)[3],t1,t2);}}}}

/* k10273 in k10267 in next-in-palindrome in k7607 in k7604 in k5838 in k5545 in k5542 in k5538 in k5247 in k5244 in k5241 in k5238 */
static void C_ccall f_10275(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_10275,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_10278,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],tmp=(C_word)a,a+=5,tmp);
t3=((C_word*)t0)[2];
t4=(C_word)C_i_check_structure(t3,lf[194]);
t5=(C_word)C_i_block_ref(t3,C_fix(3));
t6=(C_word)C_a_i_plus(&a,2,((C_word*)((C_word*)t0)[4])[1],t5);
t7=((C_word*)t0)[2];
t8=(C_word)C_i_check_structure(t7,lf[194]);
C_trace("ChickenBridge.scm: 363  ##sys#block-set!");
t9=*((C_word*)lf[143]+1);
((C_proc5)(void*)(*((C_word*)t9+1)))(5,t9,t2,t7,C_fix(1),t6);}

/* k10276 in k10273 in k10267 in next-in-palindrome in k7607 in k7604 in k5838 in k5545 in k5542 in k5538 in k5247 in k5244 in k5241 in k5238 */
static void C_ccall f_10278(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[4],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_10278,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_10285,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 363  pattern-data");
f_8286(t2,((C_word*)t0)[2]);}

/* k10283 in k10276 in k10273 in k10267 in next-in-palindrome in k7607 in k7604 in k5838 in k5545 in k5542 in k5538 in k5247 in k5244 in k5241 in k5238 */
static void C_ccall f_10285(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
t2=((C_word*)t0)[3];
((C_proc2)(void*)(*((C_word*)t2+1)))(2,t2,(C_word)C_i_list_ref(t1,((C_word*)((C_word*)t0)[2])[1]));}

/* make-palindrome in k7607 in k7604 in k5838 in k5545 in k5542 in k5538 in k5247 in k5244 in k5241 in k5238 */
static void C_ccall f_9795(C_word c,C_word t0,C_word t1,C_word t2,...){
C_word tmp;
C_word t3;
va_list v;
C_word *a,c2=c;
C_save_rest(t2,c2,3);
if(c<3) C_bad_min_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_demand(c*C_SIZEOF_PAIR+10)){
C_save_and_reclaim((void*)tr3r,(void*)f_9795r,3,t0,t1,t2);}
else{
a=C_alloc((c-3)*3);
t3=C_restore_rest(a,C_rest_count(0));
f_9795r(t0,t1,t2,t3);}}

static void C_ccall f_9795r(C_word t0,C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word *a=C_alloc(10);
t4=(*a=C_VECTOR_TYPE|1,a[1]=t2,tmp=(C_word)a,a+=2,tmp);
t5=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_9799,a[2]=t1,a[3]=t4,a[4]=t3,tmp=(C_word)a,a+=5,tmp);
if(C_truep((C_word)C_i_pairp(((C_word*)t4)[1]))){
t6=t5;
f_9799(t6,C_SCHEME_UNDEFINED);}
else{
t6=(C_word)C_a_i_list(&a,1,((C_word*)t4)[1]);
t7=C_set_block_item(t4,0,t6);
t8=t5;
f_9799(t8,t7);}}

/* k9797 in make-palindrome in k7607 in k7604 in k5838 in k5545 in k5542 in k5538 in k5247 in k5244 in k5241 in k5238 */
static void C_fcall f_9799(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word t14;
C_word t15;
C_word t16;
C_word t17;
C_word t18;
C_word t19;
C_word t20;
C_word t21;
C_word t22;
C_word t23;
C_word t24;
C_word t25;
C_word t26;
C_word t27;
C_word ab[59],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_9799,NULL,2,t0,t1);}
t2=C_SCHEME_FALSE;
t3=(*a=C_VECTOR_TYPE|1,a[1]=t2,tmp=(C_word)a,a+=2,tmp);
t4=C_SCHEME_FALSE;
t5=(*a=C_VECTOR_TYPE|1,a[1]=t4,tmp=(C_word)a,a+=2,tmp);
t6=C_SCHEME_FALSE;
t7=(*a=C_VECTOR_TYPE|1,a[1]=t6,tmp=(C_word)a,a+=2,tmp);
t8=C_SCHEME_FALSE;
t9=(*a=C_VECTOR_TYPE|1,a[1]=t8,tmp=(C_word)a,a+=2,tmp);
t10=C_SCHEME_FALSE;
t11=(*a=C_VECTOR_TYPE|1,a[1]=t10,tmp=(C_word)a,a+=2,tmp);
t12=C_SCHEME_FALSE;
t13=(*a=C_VECTOR_TYPE|1,a[1]=t12,tmp=(C_word)a,a+=2,tmp);
t14=((C_word*)t0)[4];
t15=(*a=C_VECTOR_TYPE|1,a[1]=t14,tmp=(C_word)a,a+=2,tmp);
t16=C_SCHEME_FALSE;
t17=(*a=C_VECTOR_TYPE|1,a[1]=t16,tmp=(C_word)a,a+=2,tmp);
t18=(*a=C_CLOSURE_TYPE|12,a[1]=(C_word)f_9802,a[2]=t13,a[3]=t11,a[4]=t17,a[5]=t9,a[6]=((C_word*)t0)[4],a[7]=t15,a[8]=t5,a[9]=t3,a[10]=t7,a[11]=((C_word*)t0)[2],a[12]=((C_word*)t0)[3],tmp=(C_word)a,a+=13,tmp);
if(C_truep((C_word)C_i_nullp(((C_word*)t15)[1]))){
t19=t18;
f_9802(t19,C_SCHEME_UNDEFINED);}
else{
t19=(C_word)C_i_car(((C_word*)t15)[1]);
t20=(C_word)C_eqp(t19,lf[191]);
if(C_truep(t20)){
t21=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_10136,a[2]=((C_word*)t0)[4],a[3]=t18,a[4]=t15,a[5]=t17,a[6]=t9,a[7]=t3,tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)t9)[1])){
C_trace("ChickenBridge.scm: 363  error");
t22=*((C_word*)lf[6]+1);
((C_proc4)C_retrieve_proc(t22))(4,t22,t21,lf[21],lf[191]);}
else{
t22=t21;
f_10136(2,t22,C_SCHEME_UNDEFINED);}}
else{
t21=(C_word)C_eqp(t19,lf[192]);
if(C_truep(t21)){
t22=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_10171,a[2]=((C_word*)t0)[4],a[3]=t18,a[4]=t15,a[5]=t17,a[6]=t11,a[7]=t5,tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)t11)[1])){
C_trace("ChickenBridge.scm: 363  error");
t23=*((C_word*)lf[6]+1);
((C_proc4)C_retrieve_proc(t23))(4,t23,t22,lf[21],lf[192]);}
else{
t23=t22;
f_10171(2,t23,C_SCHEME_UNDEFINED);}}
else{
t22=(C_word)C_eqp(t19,lf[198]);
if(C_truep(t22)){
t23=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_10206,a[2]=((C_word*)t0)[4],a[3]=t18,a[4]=t15,a[5]=t17,a[6]=t13,a[7]=t7,tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)t13)[1])){
C_trace("ChickenBridge.scm: 363  error");
t24=*((C_word*)lf[6]+1);
((C_proc4)C_retrieve_proc(t24))(4,t24,t23,lf[21],lf[198]);}
else{
t24=t23;
f_10206(2,t24,C_SCHEME_UNDEFINED);}}
else{
t23=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_10235,a[2]=t18,a[3]=t9,a[4]=t3,a[5]=t15,tmp=(C_word)a,a+=6,tmp);
if(C_truep(((C_word*)t17)[1])){
C_trace("ChickenBridge.scm: 363  error");
t24=*((C_word*)lf[6]+1);
((C_proc4)C_retrieve_proc(t24))(4,t24,t23,lf[12],((C_word*)t0)[4]);}
else{
t24=t23;
f_10235(2,t24,C_SCHEME_UNDEFINED);}}}}}}

/* k10233 in k9797 in make-palindrome in k7607 in k7604 in k5838 in k5545 in k5542 in k5538 in k5247 in k5244 in k5241 in k5238 */
static void C_ccall f_10235(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_10235,2,t0,t1);}
t2=(C_word)C_i_car(((C_word*)((C_word*)t0)[5])[1]);
t3=C_mutate(((C_word *)((C_word*)t0)[4])+1,t2);
t4=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_10242,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[5],a[4]=((C_word*)t0)[3],tmp=(C_word)a,a+=5,tmp);
t5=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_10250,a[2]=((C_word*)t0)[4],a[3]=t4,tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 363  keyword?");
t6=C_retrieve(lf[15]);
((C_proc3)C_retrieve_proc(t6))(3,t6,t5,((C_word*)((C_word*)t0)[4])[1]);}

/* k10248 in k10233 in k9797 in make-palindrome in k7607 in k7604 in k5838 in k5545 in k5542 in k5538 in k5247 in k5244 in k5241 in k5238 */
static void C_ccall f_10250(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
if(C_truep(t1)){
C_trace("ChickenBridge.scm: 363  error");
t2=*((C_word*)lf[6]+1);
((C_proc4)C_retrieve_proc(t2))(4,t2,((C_word*)t0)[3],lf[16],((C_word*)((C_word*)t0)[2])[1]);}
else{
t2=((C_word*)t0)[3];
f_10242(2,t2,C_SCHEME_UNDEFINED);}}

/* k10240 in k10233 in k9797 in make-palindrome in k7607 in k7604 in k5838 in k5545 in k5542 in k5538 in k5247 in k5244 in k5241 in k5238 */
static void C_ccall f_10242(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word *a;
t2=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[3])[1]);
t4=C_mutate(((C_word *)((C_word*)t0)[3])+1,t3);
t5=((C_word*)t0)[2];
f_9802(t5,t4);}

/* k10204 in k9797 in make-palindrome in k7607 in k7604 in k5838 in k5545 in k5542 in k5538 in k5247 in k5244 in k5241 in k5238 */
static void C_ccall f_10206(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_10206,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_10210,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("ChickenBridge.scm: 363  error");
t4=*((C_word*)lf[6]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[23],((C_word*)t0)[2]);}
else{
t4=t2;
f_10210(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k10208 in k10204 in k9797 in make-palindrome in k7607 in k7604 in k5838 in k5545 in k5542 in k5538 in k5247 in k5244 in k5241 in k5238 */
static void C_ccall f_10210(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_9802(t7,t6);}

/* k10169 in k9797 in make-palindrome in k7607 in k7604 in k5838 in k5545 in k5542 in k5538 in k5247 in k5244 in k5241 in k5238 */
static void C_ccall f_10171(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_10171,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_10175,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("ChickenBridge.scm: 363  error");
t4=*((C_word*)lf[6]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[23],((C_word*)t0)[2]);}
else{
t4=t2;
f_10175(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k10173 in k10169 in k9797 in make-palindrome in k7607 in k7604 in k5838 in k5545 in k5542 in k5538 in k5247 in k5244 in k5241 in k5238 */
static void C_ccall f_10175(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_9802(t7,t6);}

/* k10134 in k9797 in make-palindrome in k7607 in k7604 in k5838 in k5545 in k5542 in k5538 in k5247 in k5244 in k5241 in k5238 */
static void C_ccall f_10136(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_10136,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_10140,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("ChickenBridge.scm: 363  error");
t4=*((C_word*)lf[6]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[23],((C_word*)t0)[2]);}
else{
t4=t2;
f_10140(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k10138 in k10134 in k9797 in make-palindrome in k7607 in k7604 in k5838 in k5545 in k5542 in k5538 in k5247 in k5244 in k5241 in k5238 */
static void C_ccall f_10140(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_9802(t7,t6);}

/* k9800 in k9797 in make-palindrome in k7607 in k7604 in k5838 in k5545 in k5542 in k5538 in k5247 in k5244 in k5241 in k5238 */
static void C_fcall f_9802(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word ab[43],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_9802,NULL,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|12,a[1]=(C_word)f_9805,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],a[7]=((C_word*)t0)[7],a[8]=((C_word*)t0)[8],a[9]=((C_word*)t0)[9],a[10]=((C_word*)t0)[10],a[11]=((C_word*)t0)[11],a[12]=((C_word*)t0)[12],tmp=(C_word)a,a+=13,tmp);
if(C_truep((C_word)C_i_nullp(((C_word*)((C_word*)t0)[7])[1]))){
t3=t2;
f_9805(t3,C_SCHEME_UNDEFINED);}
else{
t3=(C_word)C_i_car(((C_word*)((C_word*)t0)[7])[1]);
t4=(C_word)C_eqp(t3,lf[191]);
if(C_truep(t4)){
t5=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_10001,a[2]=((C_word*)t0)[6],a[3]=t2,a[4]=((C_word*)t0)[7],a[5]=((C_word*)t0)[4],a[6]=((C_word*)t0)[5],a[7]=((C_word*)t0)[9],tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)((C_word*)t0)[5])[1])){
C_trace("ChickenBridge.scm: 363  error");
t6=*((C_word*)lf[6]+1);
((C_proc4)C_retrieve_proc(t6))(4,t6,t5,lf[21],lf[191]);}
else{
t6=t5;
f_10001(2,t6,C_SCHEME_UNDEFINED);}}
else{
t5=(C_word)C_eqp(t3,lf[192]);
if(C_truep(t5)){
t6=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_10036,a[2]=((C_word*)t0)[6],a[3]=t2,a[4]=((C_word*)t0)[7],a[5]=((C_word*)t0)[4],a[6]=((C_word*)t0)[3],a[7]=((C_word*)t0)[8],tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)((C_word*)t0)[3])[1])){
C_trace("ChickenBridge.scm: 363  error");
t7=*((C_word*)lf[6]+1);
((C_proc4)C_retrieve_proc(t7))(4,t7,t6,lf[21],lf[192]);}
else{
t7=t6;
f_10036(2,t7,C_SCHEME_UNDEFINED);}}
else{
t6=(C_word)C_eqp(t3,lf[198]);
if(C_truep(t6)){
t7=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_10071,a[2]=((C_word*)t0)[6],a[3]=t2,a[4]=((C_word*)t0)[7],a[5]=((C_word*)t0)[4],a[6]=((C_word*)t0)[2],a[7]=((C_word*)t0)[10],tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)((C_word*)t0)[2])[1])){
C_trace("ChickenBridge.scm: 363  error");
t8=*((C_word*)lf[6]+1);
((C_proc4)C_retrieve_proc(t8))(4,t8,t7,lf[21],lf[198]);}
else{
t8=t7;
f_10071(2,t8,C_SCHEME_UNDEFINED);}}
else{
t7=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_10100,a[2]=t2,a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[8],a[5]=((C_word*)t0)[7],tmp=(C_word)a,a+=6,tmp);
if(C_truep(((C_word*)((C_word*)t0)[4])[1])){
C_trace("ChickenBridge.scm: 363  error");
t8=*((C_word*)lf[6]+1);
((C_proc4)C_retrieve_proc(t8))(4,t8,t7,lf[12],((C_word*)t0)[6]);}
else{
t8=t7;
f_10100(2,t8,C_SCHEME_UNDEFINED);}}}}}}

/* k10098 in k9800 in k9797 in make-palindrome in k7607 in k7604 in k5838 in k5545 in k5542 in k5538 in k5247 in k5244 in k5241 in k5238 */
static void C_ccall f_10100(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_10100,2,t0,t1);}
t2=(C_word)C_i_car(((C_word*)((C_word*)t0)[5])[1]);
t3=C_mutate(((C_word *)((C_word*)t0)[4])+1,t2);
t4=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_10107,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[5],a[4]=((C_word*)t0)[3],tmp=(C_word)a,a+=5,tmp);
t5=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_10115,a[2]=((C_word*)t0)[4],a[3]=t4,tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 363  keyword?");
t6=C_retrieve(lf[15]);
((C_proc3)C_retrieve_proc(t6))(3,t6,t5,((C_word*)((C_word*)t0)[4])[1]);}

/* k10113 in k10098 in k9800 in k9797 in make-palindrome in k7607 in k7604 in k5838 in k5545 in k5542 in k5538 in k5247 in k5244 in k5241 in k5238 */
static void C_ccall f_10115(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
if(C_truep(t1)){
C_trace("ChickenBridge.scm: 363  error");
t2=*((C_word*)lf[6]+1);
((C_proc4)C_retrieve_proc(t2))(4,t2,((C_word*)t0)[3],lf[16],((C_word*)((C_word*)t0)[2])[1]);}
else{
t2=((C_word*)t0)[3];
f_10107(2,t2,C_SCHEME_UNDEFINED);}}

/* k10105 in k10098 in k9800 in k9797 in make-palindrome in k7607 in k7604 in k5838 in k5545 in k5542 in k5538 in k5247 in k5244 in k5241 in k5238 */
static void C_ccall f_10107(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word *a;
t2=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[3])[1]);
t4=C_mutate(((C_word *)((C_word*)t0)[3])+1,t3);
t5=((C_word*)t0)[2];
f_9805(t5,t4);}

/* k10069 in k9800 in k9797 in make-palindrome in k7607 in k7604 in k5838 in k5545 in k5542 in k5538 in k5247 in k5244 in k5241 in k5238 */
static void C_ccall f_10071(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_10071,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_10075,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("ChickenBridge.scm: 363  error");
t4=*((C_word*)lf[6]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[23],((C_word*)t0)[2]);}
else{
t4=t2;
f_10075(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k10073 in k10069 in k9800 in k9797 in make-palindrome in k7607 in k7604 in k5838 in k5545 in k5542 in k5538 in k5247 in k5244 in k5241 in k5238 */
static void C_ccall f_10075(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_9805(t7,t6);}

/* k10034 in k9800 in k9797 in make-palindrome in k7607 in k7604 in k5838 in k5545 in k5542 in k5538 in k5247 in k5244 in k5241 in k5238 */
static void C_ccall f_10036(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_10036,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_10040,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("ChickenBridge.scm: 363  error");
t4=*((C_word*)lf[6]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[23],((C_word*)t0)[2]);}
else{
t4=t2;
f_10040(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k10038 in k10034 in k9800 in k9797 in make-palindrome in k7607 in k7604 in k5838 in k5545 in k5542 in k5538 in k5247 in k5244 in k5241 in k5238 */
static void C_ccall f_10040(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_9805(t7,t6);}

/* k9999 in k9800 in k9797 in make-palindrome in k7607 in k7604 in k5838 in k5545 in k5542 in k5538 in k5247 in k5244 in k5241 in k5238 */
static void C_ccall f_10001(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_10001,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_10005,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("ChickenBridge.scm: 363  error");
t4=*((C_word*)lf[6]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[23],((C_word*)t0)[2]);}
else{
t4=t2;
f_10005(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k10003 in k9999 in k9800 in k9797 in make-palindrome in k7607 in k7604 in k5838 in k5545 in k5542 in k5538 in k5247 in k5244 in k5241 in k5238 */
static void C_ccall f_10005(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_9805(t7,t6);}

/* k9803 in k9800 in k9797 in make-palindrome in k7607 in k7604 in k5838 in k5545 in k5542 in k5538 in k5247 in k5244 in k5241 in k5238 */
static void C_fcall f_9805(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word ab[39],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_9805,NULL,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|8,a[1]=(C_word)f_9808,a[2]=((C_word*)t0)[6],a[3]=((C_word*)t0)[7],a[4]=((C_word*)t0)[8],a[5]=((C_word*)t0)[9],a[6]=((C_word*)t0)[10],a[7]=((C_word*)t0)[11],a[8]=((C_word*)t0)[12],tmp=(C_word)a,a+=9,tmp);
if(C_truep((C_word)C_i_nullp(((C_word*)((C_word*)t0)[7])[1]))){
t3=t2;
f_9808(t3,C_SCHEME_UNDEFINED);}
else{
t3=(C_word)C_i_car(((C_word*)((C_word*)t0)[7])[1]);
t4=(C_word)C_eqp(t3,lf[191]);
if(C_truep(t4)){
t5=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_9866,a[2]=((C_word*)t0)[6],a[3]=t2,a[4]=((C_word*)t0)[7],a[5]=((C_word*)t0)[4],a[6]=((C_word*)t0)[5],a[7]=((C_word*)t0)[9],tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)((C_word*)t0)[5])[1])){
C_trace("ChickenBridge.scm: 363  error");
t6=*((C_word*)lf[6]+1);
((C_proc4)C_retrieve_proc(t6))(4,t6,t5,lf[21],lf[191]);}
else{
t6=t5;
f_9866(2,t6,C_SCHEME_UNDEFINED);}}
else{
t5=(C_word)C_eqp(t3,lf[192]);
if(C_truep(t5)){
t6=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_9901,a[2]=((C_word*)t0)[6],a[3]=t2,a[4]=((C_word*)t0)[7],a[5]=((C_word*)t0)[4],a[6]=((C_word*)t0)[3],a[7]=((C_word*)t0)[8],tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)((C_word*)t0)[3])[1])){
C_trace("ChickenBridge.scm: 363  error");
t7=*((C_word*)lf[6]+1);
((C_proc4)C_retrieve_proc(t7))(4,t7,t6,lf[21],lf[192]);}
else{
t7=t6;
f_9901(2,t7,C_SCHEME_UNDEFINED);}}
else{
t6=(C_word)C_eqp(t3,lf[198]);
if(C_truep(t6)){
t7=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_9936,a[2]=((C_word*)t0)[6],a[3]=t2,a[4]=((C_word*)t0)[7],a[5]=((C_word*)t0)[4],a[6]=((C_word*)t0)[2],a[7]=((C_word*)t0)[10],tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)((C_word*)t0)[2])[1])){
C_trace("ChickenBridge.scm: 363  error");
t8=*((C_word*)lf[6]+1);
((C_proc4)C_retrieve_proc(t8))(4,t8,t7,lf[21],lf[198]);}
else{
t8=t7;
f_9936(2,t8,C_SCHEME_UNDEFINED);}}
else{
t7=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_9965,a[2]=t2,a[3]=((C_word*)t0)[2],a[4]=((C_word*)t0)[10],a[5]=((C_word*)t0)[7],tmp=(C_word)a,a+=6,tmp);
if(C_truep(((C_word*)((C_word*)t0)[4])[1])){
C_trace("ChickenBridge.scm: 363  error");
t8=*((C_word*)lf[6]+1);
((C_proc4)C_retrieve_proc(t8))(4,t8,t7,lf[12],((C_word*)t0)[6]);}
else{
t8=t7;
f_9965(2,t8,C_SCHEME_UNDEFINED);}}}}}}

/* k9963 in k9803 in k9800 in k9797 in make-palindrome in k7607 in k7604 in k5838 in k5545 in k5542 in k5538 in k5247 in k5244 in k5241 in k5238 */
static void C_ccall f_9965(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_9965,2,t0,t1);}
t2=(C_word)C_i_car(((C_word*)((C_word*)t0)[5])[1]);
t3=C_mutate(((C_word *)((C_word*)t0)[4])+1,t2);
t4=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_9972,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[5],a[4]=((C_word*)t0)[3],tmp=(C_word)a,a+=5,tmp);
t5=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_9980,a[2]=((C_word*)t0)[4],a[3]=t4,tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 363  keyword?");
t6=C_retrieve(lf[15]);
((C_proc3)C_retrieve_proc(t6))(3,t6,t5,((C_word*)((C_word*)t0)[4])[1]);}

/* k9978 in k9963 in k9803 in k9800 in k9797 in make-palindrome in k7607 in k7604 in k5838 in k5545 in k5542 in k5538 in k5247 in k5244 in k5241 in k5238 */
static void C_ccall f_9980(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
if(C_truep(t1)){
C_trace("ChickenBridge.scm: 363  error");
t2=*((C_word*)lf[6]+1);
((C_proc4)C_retrieve_proc(t2))(4,t2,((C_word*)t0)[3],lf[16],((C_word*)((C_word*)t0)[2])[1]);}
else{
t2=((C_word*)t0)[3];
f_9972(2,t2,C_SCHEME_UNDEFINED);}}

/* k9970 in k9963 in k9803 in k9800 in k9797 in make-palindrome in k7607 in k7604 in k5838 in k5545 in k5542 in k5538 in k5247 in k5244 in k5241 in k5238 */
static void C_ccall f_9972(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word *a;
t2=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[3])[1]);
t4=C_mutate(((C_word *)((C_word*)t0)[3])+1,t3);
t5=((C_word*)t0)[2];
f_9808(t5,t4);}

/* k9934 in k9803 in k9800 in k9797 in make-palindrome in k7607 in k7604 in k5838 in k5545 in k5542 in k5538 in k5247 in k5244 in k5241 in k5238 */
static void C_ccall f_9936(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_9936,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_9940,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("ChickenBridge.scm: 363  error");
t4=*((C_word*)lf[6]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[23],((C_word*)t0)[2]);}
else{
t4=t2;
f_9940(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k9938 in k9934 in k9803 in k9800 in k9797 in make-palindrome in k7607 in k7604 in k5838 in k5545 in k5542 in k5538 in k5247 in k5244 in k5241 in k5238 */
static void C_ccall f_9940(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_9808(t7,t6);}

/* k9899 in k9803 in k9800 in k9797 in make-palindrome in k7607 in k7604 in k5838 in k5545 in k5542 in k5538 in k5247 in k5244 in k5241 in k5238 */
static void C_ccall f_9901(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_9901,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_9905,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("ChickenBridge.scm: 363  error");
t4=*((C_word*)lf[6]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[23],((C_word*)t0)[2]);}
else{
t4=t2;
f_9905(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k9903 in k9899 in k9803 in k9800 in k9797 in make-palindrome in k7607 in k7604 in k5838 in k5545 in k5542 in k5538 in k5247 in k5244 in k5241 in k5238 */
static void C_ccall f_9905(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_9808(t7,t6);}

/* k9864 in k9803 in k9800 in k9797 in make-palindrome in k7607 in k7604 in k5838 in k5545 in k5542 in k5538 in k5247 in k5244 in k5241 in k5238 */
static void C_ccall f_9866(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_9866,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_9870,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("ChickenBridge.scm: 363  error");
t4=*((C_word*)lf[6]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[23],((C_word*)t0)[2]);}
else{
t4=t2;
f_9870(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k9868 in k9864 in k9803 in k9800 in k9797 in make-palindrome in k7607 in k7604 in k5838 in k5545 in k5542 in k5538 in k5247 in k5244 in k5241 in k5238 */
static void C_ccall f_9870(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_9808(t7,t6);}

/* k9806 in k9803 in k9800 in k9797 in make-palindrome in k7607 in k7604 in k5838 in k5545 in k5542 in k5538 in k5247 in k5244 in k5241 in k5238 */
static void C_fcall f_9808(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_9808,NULL,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_9811,a[2]=((C_word*)t0)[4],a[3]=((C_word*)t0)[5],a[4]=((C_word*)t0)[6],a[5]=((C_word*)t0)[7],a[6]=((C_word*)t0)[8],tmp=(C_word)a,a+=7,tmp);
if(C_truep((C_word)C_i_nullp(((C_word*)((C_word*)t0)[3])[1]))){
t3=t2;
f_9811(2,t3,C_SCHEME_UNDEFINED);}
else{
C_trace("ChickenBridge.scm: 363  error");
t3=*((C_word*)lf[6]+1);
((C_proc4)C_retrieve_proc(t3))(4,t3,t2,lf[7],((C_word*)t0)[2]);}}

/* k9809 in k9806 in k9803 in k9800 in k9797 in make-palindrome in k7607 in k7604 in k5838 in k5545 in k5542 in k5538 in k5247 in k5244 in k5241 in k5238 */
static void C_ccall f_9811(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_9811,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_9814,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],tmp=(C_word)a,a+=7,tmp);
C_trace("ChickenBridge.scm: 363  %alloc-pattern");
f_8557(t2);}

/* k9812 in k9809 in k9806 in k9803 in k9800 in k9797 in make-palindrome in k7607 in k7604 in k5838 in k5545 in k5542 in k5538 in k5247 in k5244 in k5241 in k5238 */
static void C_ccall f_9814(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[13],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_9814,2,t0,t1);}
t2=(C_word)C_i_length(((C_word*)((C_word*)t0)[6])[1]);
t3=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_9820,a[2]=((C_word*)t0)[4],a[3]=((C_word*)t0)[6],a[4]=t1,a[5]=((C_word*)t0)[5],tmp=(C_word)a,a+=6,tmp);
t4=(C_word)C_a_i_times(&a,2,t2,C_fix(2));
t5=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_9837,a[2]=((C_word)li127),tmp=(C_word)a,a+=3,tmp);
C_trace("ChickenBridge.scm: 363  initialize-pattern");
f_8567(t3,t1,((C_word*)((C_word*)t0)[6])[1],((C_word*)((C_word*)t0)[3])[1],((C_word*)((C_word*)t0)[2])[1],C_fix(0),t2,t4,C_retrieve2(lf[197],"next-in-palindrome"),t5);}

/* a9836 in k9812 in k9809 in k9806 in k9803 in k9800 in k9797 in make-palindrome in k7607 in k7604 in k5838 in k5545 in k5542 in k5538 in k5247 in k5244 in k5241 in k5238 */
static void C_ccall f_9837(C_word c,C_word t0,C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word ab[4],*a=ab;
if(c!=4) C_bad_argc_2(c,4,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr4,(void*)f_9837,4,t0,t1,t2,t3);}
t4=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_9845,a[2]=t2,a[3]=t1,tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 363  pattern-data");
f_8286(t4,t3);}

/* k9843 in a9836 in k9812 in k9809 in k9806 in k9803 in k9800 in k9797 in make-palindrome in k7607 in k7604 in k5838 in k5545 in k5542 in k5538 in k5247 in k5244 in k5241 in k5238 */
static void C_ccall f_9845(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("for-each");
t2=*((C_word*)lf[189]+1);
((C_proc4)(void*)(*((C_word*)t2+1)))(4,t2,((C_word*)t0)[3],((C_word*)t0)[2],t1);}

/* k9818 in k9812 in k9809 in k9806 in k9803 in k9800 in k9797 in make-palindrome in k7607 in k7604 in k5838 in k5545 in k5542 in k5538 in k5247 in k5244 in k5241 in k5238 */
static void C_ccall f_9820(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[11],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_9820,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_9823,a[2]=((C_word*)t0)[4],a[3]=((C_word*)t0)[5],tmp=(C_word)a,a+=4,tmp);
t3=(C_word)C_i_length(((C_word*)((C_word*)t0)[3])[1]);
t4=((C_word*)((C_word*)t0)[2])[1];
t5=(C_word)C_a_i_record(&a,6,lf[194],C_fix(-2),t3,C_SCHEME_FALSE,C_SCHEME_FALSE,t4);
C_trace("ChickenBridge.scm: 363  pattern-cache-set!");
f_8493(t2,((C_word*)t0)[4],t5);}

/* k9821 in k9818 in k9812 in k9809 in k9806 in k9803 in k9800 in k9797 in make-palindrome in k7607 in k7604 in k5838 in k5545 in k5542 in k5538 in k5247 in k5244 in k5241 in k5238 */
static void C_ccall f_9823(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
t2=((C_word*)t0)[3];
((C_proc2)(void*)(*((C_word*)t2+1)))(2,t2,((C_word*)t0)[2]);}

/* palin-inc-set! in k7607 in k7604 in k5838 in k5545 in k5542 in k5538 in k5247 in k5244 in k5241 in k5238 */
static void C_fcall f_9715(C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word *a;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_9715,NULL,3,t1,t2,t3);}
t4=(C_word)C_i_check_structure(t2,lf[194]);
C_trace("ChickenBridge.scm: 363  ##sys#block-set!");
t5=*((C_word*)lf[143]+1);
((C_proc5)(void*)(*((C_word*)t5+1)))(5,t5,t1,t2,C_fix(3),t3);}

/* palin-len in k7607 in k7604 in k5838 in k5545 in k5542 in k5538 in k5247 in k5244 in k5241 in k5238 */
static void C_fcall f_9706(C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word *a;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_9706,NULL,2,t1,t2);}
t3=(C_word)C_i_check_structure(t2,lf[194]);
t4=t1;
((C_proc2)(void*)(*((C_word*)t4+1)))(2,t4,(C_word)C_i_block_ref(t2,C_fix(2)));}

/* next-in-cycle in k7607 in k7604 in k5838 in k5545 in k5542 in k5538 in k5247 in k5244 in k5241 in k5238 */
static void C_ccall f_9634(C_word c,C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word ab[3],*a=ab;
if(c!=3) C_bad_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr3,(void*)f_9634,3,t0,t1,t2);}
t3=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_9638,a[2]=t1,tmp=(C_word)a,a+=3,tmp);
C_trace("ChickenBridge.scm: 363  pattern-data");
f_8286(t3,t2);}

/* k9636 in next-in-cycle in k7607 in k7604 in k5838 in k5545 in k5542 in k5538 in k5247 in k5244 in k5241 in k5238 */
static void C_ccall f_9638(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[4],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_9638,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_9641,a[2]=((C_word*)t0)[2],a[3]=t1,tmp=(C_word)a,a+=4,tmp);
t3=(C_word)C_i_cdr(t1);
if(C_truep((C_word)C_i_nullp(t3))){
t4=(C_word)C_i_car(t1);
t5=t2;
f_9641(t5,(C_word)C_i_set_cdr(t1,t4));}
else{
t4=t2;
f_9641(t4,C_SCHEME_UNDEFINED);}}

/* k9639 in k9636 in next-in-cycle in k7607 in k7604 in k5838 in k5545 in k5542 in k5538 in k5247 in k5244 in k5241 in k5238 */
static void C_fcall f_9641(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word *a;
t2=(C_word)C_i_cadr(((C_word*)t0)[3]);
t3=(C_word)C_i_cddr(((C_word*)t0)[3]);
t4=(C_word)C_i_set_cdr(((C_word*)t0)[3],t3);
t5=((C_word*)t0)[2];
((C_proc2)(void*)(*((C_word*)t5+1)))(2,t5,t2);}

/* make-cycle in k7607 in k7604 in k5838 in k5545 in k5542 in k5538 in k5247 in k5244 in k5241 in k5238 */
static void C_ccall f_9379(C_word c,C_word t0,C_word t1,C_word t2,...){
C_word tmp;
C_word t3;
va_list v;
C_word *a,c2=c;
C_save_rest(t2,c2,3);
if(c<3) C_bad_min_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_demand(c*C_SIZEOF_PAIR+10)){
C_save_and_reclaim((void*)tr3r,(void*)f_9379r,3,t0,t1,t2);}
else{
a=C_alloc((c-3)*3);
t3=C_restore_rest(a,C_rest_count(0));
f_9379r(t0,t1,t2,t3);}}

static void C_ccall f_9379r(C_word t0,C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word *a=C_alloc(10);
t4=(*a=C_VECTOR_TYPE|1,a[1]=t2,tmp=(C_word)a,a+=2,tmp);
t5=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_9383,a[2]=t1,a[3]=t4,a[4]=t3,tmp=(C_word)a,a+=5,tmp);
if(C_truep((C_word)C_i_pairp(((C_word*)t4)[1]))){
t6=t5;
f_9383(t6,C_SCHEME_UNDEFINED);}
else{
t6=(C_word)C_a_i_list(&a,1,((C_word*)t4)[1]);
t7=C_set_block_item(t4,0,t6);
t8=t5;
f_9383(t8,t7);}}

/* k9381 in make-cycle in k7607 in k7604 in k5838 in k5545 in k5542 in k5538 in k5247 in k5244 in k5241 in k5238 */
static void C_fcall f_9383(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word t14;
C_word t15;
C_word t16;
C_word t17;
C_word t18;
C_word t19;
C_word t20;
C_word t21;
C_word ab[45],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_9383,NULL,2,t0,t1);}
t2=C_SCHEME_FALSE;
t3=(*a=C_VECTOR_TYPE|1,a[1]=t2,tmp=(C_word)a,a+=2,tmp);
t4=C_SCHEME_FALSE;
t5=(*a=C_VECTOR_TYPE|1,a[1]=t4,tmp=(C_word)a,a+=2,tmp);
t6=C_SCHEME_FALSE;
t7=(*a=C_VECTOR_TYPE|1,a[1]=t6,tmp=(C_word)a,a+=2,tmp);
t8=C_SCHEME_FALSE;
t9=(*a=C_VECTOR_TYPE|1,a[1]=t8,tmp=(C_word)a,a+=2,tmp);
t10=((C_word*)t0)[4];
t11=(*a=C_VECTOR_TYPE|1,a[1]=t10,tmp=(C_word)a,a+=2,tmp);
t12=C_SCHEME_FALSE;
t13=(*a=C_VECTOR_TYPE|1,a[1]=t12,tmp=(C_word)a,a+=2,tmp);
t14=(*a=C_CLOSURE_TYPE|10,a[1]=(C_word)f_9386,a[2]=t9,a[3]=t13,a[4]=t7,a[5]=((C_word*)t0)[4],a[6]=t11,a[7]=t5,a[8]=t3,a[9]=((C_word*)t0)[2],a[10]=((C_word*)t0)[3],tmp=(C_word)a,a+=11,tmp);
if(C_truep((C_word)C_i_nullp(((C_word*)t11)[1]))){
t15=t14;
f_9386(t15,C_SCHEME_UNDEFINED);}
else{
t15=(C_word)C_i_car(((C_word*)t11)[1]);
t16=(C_word)C_eqp(t15,lf[191]);
if(C_truep(t16)){
t17=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_9540,a[2]=((C_word*)t0)[4],a[3]=t14,a[4]=t11,a[5]=t13,a[6]=t7,a[7]=t3,tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)t7)[1])){
C_trace("ChickenBridge.scm: 363  error");
t18=*((C_word*)lf[6]+1);
((C_proc4)C_retrieve_proc(t18))(4,t18,t17,lf[21],lf[191]);}
else{
t18=t17;
f_9540(2,t18,C_SCHEME_UNDEFINED);}}
else{
t17=(C_word)C_eqp(t15,lf[192]);
if(C_truep(t17)){
t18=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_9575,a[2]=((C_word*)t0)[4],a[3]=t14,a[4]=t11,a[5]=t13,a[6]=t9,a[7]=t5,tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)t9)[1])){
C_trace("ChickenBridge.scm: 363  error");
t19=*((C_word*)lf[6]+1);
((C_proc4)C_retrieve_proc(t19))(4,t19,t18,lf[21],lf[192]);}
else{
t19=t18;
f_9575(2,t19,C_SCHEME_UNDEFINED);}}
else{
t18=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_9604,a[2]=t14,a[3]=t7,a[4]=t3,a[5]=t11,tmp=(C_word)a,a+=6,tmp);
if(C_truep(((C_word*)t13)[1])){
C_trace("ChickenBridge.scm: 363  error");
t19=*((C_word*)lf[6]+1);
((C_proc4)C_retrieve_proc(t19))(4,t19,t18,lf[12],((C_word*)t0)[4]);}
else{
t19=t18;
f_9604(2,t19,C_SCHEME_UNDEFINED);}}}}}

/* k9602 in k9381 in make-cycle in k7607 in k7604 in k5838 in k5545 in k5542 in k5538 in k5247 in k5244 in k5241 in k5238 */
static void C_ccall f_9604(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_9604,2,t0,t1);}
t2=(C_word)C_i_car(((C_word*)((C_word*)t0)[5])[1]);
t3=C_mutate(((C_word *)((C_word*)t0)[4])+1,t2);
t4=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_9611,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[5],a[4]=((C_word*)t0)[3],tmp=(C_word)a,a+=5,tmp);
t5=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_9619,a[2]=((C_word*)t0)[4],a[3]=t4,tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 363  keyword?");
t6=C_retrieve(lf[15]);
((C_proc3)C_retrieve_proc(t6))(3,t6,t5,((C_word*)((C_word*)t0)[4])[1]);}

/* k9617 in k9602 in k9381 in make-cycle in k7607 in k7604 in k5838 in k5545 in k5542 in k5538 in k5247 in k5244 in k5241 in k5238 */
static void C_ccall f_9619(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
if(C_truep(t1)){
C_trace("ChickenBridge.scm: 363  error");
t2=*((C_word*)lf[6]+1);
((C_proc4)C_retrieve_proc(t2))(4,t2,((C_word*)t0)[3],lf[16],((C_word*)((C_word*)t0)[2])[1]);}
else{
t2=((C_word*)t0)[3];
f_9611(2,t2,C_SCHEME_UNDEFINED);}}

/* k9609 in k9602 in k9381 in make-cycle in k7607 in k7604 in k5838 in k5545 in k5542 in k5538 in k5247 in k5244 in k5241 in k5238 */
static void C_ccall f_9611(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word *a;
t2=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[3])[1]);
t4=C_mutate(((C_word *)((C_word*)t0)[3])+1,t3);
t5=((C_word*)t0)[2];
f_9386(t5,t4);}

/* k9573 in k9381 in make-cycle in k7607 in k7604 in k5838 in k5545 in k5542 in k5538 in k5247 in k5244 in k5241 in k5238 */
static void C_ccall f_9575(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_9575,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_9579,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("ChickenBridge.scm: 363  error");
t4=*((C_word*)lf[6]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[23],((C_word*)t0)[2]);}
else{
t4=t2;
f_9579(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k9577 in k9573 in k9381 in make-cycle in k7607 in k7604 in k5838 in k5545 in k5542 in k5538 in k5247 in k5244 in k5241 in k5238 */
static void C_ccall f_9579(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_9386(t7,t6);}

/* k9538 in k9381 in make-cycle in k7607 in k7604 in k5838 in k5545 in k5542 in k5538 in k5247 in k5244 in k5241 in k5238 */
static void C_ccall f_9540(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_9540,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_9544,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("ChickenBridge.scm: 363  error");
t4=*((C_word*)lf[6]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[23],((C_word*)t0)[2]);}
else{
t4=t2;
f_9544(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k9542 in k9538 in k9381 in make-cycle in k7607 in k7604 in k5838 in k5545 in k5542 in k5538 in k5247 in k5244 in k5241 in k5238 */
static void C_ccall f_9544(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_9386(t7,t6);}

/* k9384 in k9381 in make-cycle in k7607 in k7604 in k5838 in k5545 in k5542 in k5538 in k5247 in k5244 in k5241 in k5238 */
static void C_fcall f_9386(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word ab[30],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_9386,NULL,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_9389,a[2]=((C_word*)t0)[5],a[3]=((C_word*)t0)[6],a[4]=((C_word*)t0)[7],a[5]=((C_word*)t0)[8],a[6]=((C_word*)t0)[9],a[7]=((C_word*)t0)[10],tmp=(C_word)a,a+=8,tmp);
if(C_truep((C_word)C_i_nullp(((C_word*)((C_word*)t0)[6])[1]))){
t3=t2;
f_9389(t3,C_SCHEME_UNDEFINED);}
else{
t3=(C_word)C_i_car(((C_word*)((C_word*)t0)[6])[1]);
t4=(C_word)C_eqp(t3,lf[191]);
if(C_truep(t4)){
t5=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_9440,a[2]=((C_word*)t0)[5],a[3]=t2,a[4]=((C_word*)t0)[6],a[5]=((C_word*)t0)[3],a[6]=((C_word*)t0)[4],a[7]=((C_word*)t0)[8],tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)((C_word*)t0)[4])[1])){
C_trace("ChickenBridge.scm: 363  error");
t6=*((C_word*)lf[6]+1);
((C_proc4)C_retrieve_proc(t6))(4,t6,t5,lf[21],lf[191]);}
else{
t6=t5;
f_9440(2,t6,C_SCHEME_UNDEFINED);}}
else{
t5=(C_word)C_eqp(t3,lf[192]);
if(C_truep(t5)){
t6=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_9475,a[2]=((C_word*)t0)[5],a[3]=t2,a[4]=((C_word*)t0)[6],a[5]=((C_word*)t0)[3],a[6]=((C_word*)t0)[2],a[7]=((C_word*)t0)[7],tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)((C_word*)t0)[2])[1])){
C_trace("ChickenBridge.scm: 363  error");
t7=*((C_word*)lf[6]+1);
((C_proc4)C_retrieve_proc(t7))(4,t7,t6,lf[21],lf[192]);}
else{
t7=t6;
f_9475(2,t7,C_SCHEME_UNDEFINED);}}
else{
t6=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_9504,a[2]=t2,a[3]=((C_word*)t0)[2],a[4]=((C_word*)t0)[7],a[5]=((C_word*)t0)[6],tmp=(C_word)a,a+=6,tmp);
if(C_truep(((C_word*)((C_word*)t0)[3])[1])){
C_trace("ChickenBridge.scm: 363  error");
t7=*((C_word*)lf[6]+1);
((C_proc4)C_retrieve_proc(t7))(4,t7,t6,lf[12],((C_word*)t0)[5]);}
else{
t7=t6;
f_9504(2,t7,C_SCHEME_UNDEFINED);}}}}}

/* k9502 in k9384 in k9381 in make-cycle in k7607 in k7604 in k5838 in k5545 in k5542 in k5538 in k5247 in k5244 in k5241 in k5238 */
static void C_ccall f_9504(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_9504,2,t0,t1);}
t2=(C_word)C_i_car(((C_word*)((C_word*)t0)[5])[1]);
t3=C_mutate(((C_word *)((C_word*)t0)[4])+1,t2);
t4=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_9511,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[5],a[4]=((C_word*)t0)[3],tmp=(C_word)a,a+=5,tmp);
t5=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_9519,a[2]=((C_word*)t0)[4],a[3]=t4,tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 363  keyword?");
t6=C_retrieve(lf[15]);
((C_proc3)C_retrieve_proc(t6))(3,t6,t5,((C_word*)((C_word*)t0)[4])[1]);}

/* k9517 in k9502 in k9384 in k9381 in make-cycle in k7607 in k7604 in k5838 in k5545 in k5542 in k5538 in k5247 in k5244 in k5241 in k5238 */
static void C_ccall f_9519(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
if(C_truep(t1)){
C_trace("ChickenBridge.scm: 363  error");
t2=*((C_word*)lf[6]+1);
((C_proc4)C_retrieve_proc(t2))(4,t2,((C_word*)t0)[3],lf[16],((C_word*)((C_word*)t0)[2])[1]);}
else{
t2=((C_word*)t0)[3];
f_9511(2,t2,C_SCHEME_UNDEFINED);}}

/* k9509 in k9502 in k9384 in k9381 in make-cycle in k7607 in k7604 in k5838 in k5545 in k5542 in k5538 in k5247 in k5244 in k5241 in k5238 */
static void C_ccall f_9511(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word *a;
t2=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[3])[1]);
t4=C_mutate(((C_word *)((C_word*)t0)[3])+1,t3);
t5=((C_word*)t0)[2];
f_9389(t5,t4);}

/* k9473 in k9384 in k9381 in make-cycle in k7607 in k7604 in k5838 in k5545 in k5542 in k5538 in k5247 in k5244 in k5241 in k5238 */
static void C_ccall f_9475(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_9475,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_9479,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("ChickenBridge.scm: 363  error");
t4=*((C_word*)lf[6]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[23],((C_word*)t0)[2]);}
else{
t4=t2;
f_9479(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k9477 in k9473 in k9384 in k9381 in make-cycle in k7607 in k7604 in k5838 in k5545 in k5542 in k5538 in k5247 in k5244 in k5241 in k5238 */
static void C_ccall f_9479(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_9389(t7,t6);}

/* k9438 in k9384 in k9381 in make-cycle in k7607 in k7604 in k5838 in k5545 in k5542 in k5538 in k5247 in k5244 in k5241 in k5238 */
static void C_ccall f_9440(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_9440,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_9444,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("ChickenBridge.scm: 363  error");
t4=*((C_word*)lf[6]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[23],((C_word*)t0)[2]);}
else{
t4=t2;
f_9444(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k9442 in k9438 in k9384 in k9381 in make-cycle in k7607 in k7604 in k5838 in k5545 in k5542 in k5538 in k5247 in k5244 in k5241 in k5238 */
static void C_ccall f_9444(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_9389(t7,t6);}

/* k9387 in k9384 in k9381 in make-cycle in k7607 in k7604 in k5838 in k5545 in k5542 in k5538 in k5247 in k5244 in k5241 in k5238 */
static void C_fcall f_9389(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[6],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_9389,NULL,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_9392,a[2]=((C_word*)t0)[4],a[3]=((C_word*)t0)[5],a[4]=((C_word*)t0)[6],a[5]=((C_word*)t0)[7],tmp=(C_word)a,a+=6,tmp);
if(C_truep((C_word)C_i_nullp(((C_word*)((C_word*)t0)[3])[1]))){
t3=t2;
f_9392(2,t3,C_SCHEME_UNDEFINED);}
else{
C_trace("ChickenBridge.scm: 363  error");
t3=*((C_word*)lf[6]+1);
((C_proc4)C_retrieve_proc(t3))(4,t3,t2,lf[7],((C_word*)t0)[2]);}}

/* k9390 in k9387 in k9384 in k9381 in make-cycle in k7607 in k7604 in k5838 in k5545 in k5542 in k5538 in k5247 in k5244 in k5241 in k5238 */
static void C_ccall f_9392(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[6],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_9392,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_9395,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],tmp=(C_word)a,a+=6,tmp);
C_trace("ChickenBridge.scm: 363  %alloc-pattern");
f_8557(t2);}

/* k9393 in k9390 in k9387 in k9384 in k9381 in make-cycle in k7607 in k7604 in k5838 in k5545 in k5542 in k5538 in k5247 in k5244 in k5241 in k5238 */
static void C_ccall f_9395(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[10],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_9395,2,t0,t1);}
t2=(C_word)C_i_length(((C_word*)((C_word*)t0)[5])[1]);
t3=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_9401,a[2]=t1,a[3]=((C_word*)t0)[4],tmp=(C_word)a,a+=4,tmp);
t4=(C_word)C_a_i_cons(&a,2,((C_word*)((C_word*)t0)[5])[1],((C_word*)((C_word*)t0)[5])[1]);
t5=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_9407,a[2]=((C_word)li122),tmp=(C_word)a,a+=3,tmp);
C_trace("ChickenBridge.scm: 363  initialize-pattern");
f_8567(t3,t1,t4,((C_word*)((C_word*)t0)[3])[1],((C_word*)((C_word*)t0)[2])[1],C_fix(0),t2,t2,C_retrieve2(lf[190],"next-in-cycle"),t5);}

/* a9406 in k9393 in k9390 in k9387 in k9384 in k9381 in make-cycle in k7607 in k7604 in k5838 in k5545 in k5542 in k5538 in k5247 in k5244 in k5241 in k5238 */
static void C_ccall f_9407(C_word c,C_word t0,C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word ab[4],*a=ab;
if(c!=4) C_bad_argc_2(c,4,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr4,(void*)f_9407,4,t0,t1,t2,t3);}
t4=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_9419,a[2]=t2,a[3]=t1,tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 363  pattern-data");
f_8286(t4,t3);}

/* k9417 in a9406 in k9393 in k9390 in k9387 in k9384 in k9381 in make-cycle in k7607 in k7604 in k5838 in k5545 in k5542 in k5538 in k5247 in k5244 in k5241 in k5238 */
static void C_ccall f_9419(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word *a;
t2=(C_word)C_i_car(t1);
C_trace("for-each");
t3=*((C_word*)lf[189]+1);
((C_proc4)(void*)(*((C_word*)t3+1)))(4,t3,((C_word*)t0)[3],((C_word*)t0)[2],t2);}

/* k9399 in k9393 in k9390 in k9387 in k9384 in k9381 in make-cycle in k7607 in k7604 in k5838 in k5545 in k5542 in k5538 in k5247 in k5244 in k5241 in k5238 */
static void C_ccall f_9401(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
t2=((C_word*)t0)[3];
((C_proc2)(void*)(*((C_word*)t2+1)))(2,t2,((C_word*)t0)[2]);}

/* reset-period in k7607 in k7604 in k5838 in k5545 in k5542 in k5538 in k5247 in k5244 in k5241 in k5238 */
static void C_fcall f_9264(C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word ab[4],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_9264,NULL,2,t1,t2);}
t3=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_9377,a[2]=t2,a[3]=t1,tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 363  pattern?");
f_8253(t3,t2);}

/* k9375 in reset-period in k7607 in k7604 in k5838 in k5545 in k5542 in k5538 in k5247 in k5244 in k5241 in k5238 */
static void C_ccall f_9377(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[4],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_9377,2,t0,t1);}
if(C_truep(t1)){
t2=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_9274,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 363  pattern-period");
f_8340(t2,((C_word*)t0)[2]);}
else{
t2=((C_word*)t0)[3];
((C_proc2)(void*)(*((C_word*)t2+1)))(2,t2,C_fix(1));}}

/* k9272 in k9375 in reset-period in k7607 in k7604 in k5838 in k5545 in k5542 in k5538 in k5247 in k5244 in k5241 in k5238 */
static void C_ccall f_9274(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word ab[15],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_9274,2,t0,t1);}
t2=C_SCHEME_FALSE;
t3=(*a=C_VECTOR_TYPE|1,a[1]=t2,tmp=(C_word)a,a+=2,tmp);
t4=C_SCHEME_FALSE;
t5=(*a=C_VECTOR_TYPE|1,a[1]=t4,tmp=(C_word)a,a+=2,tmp);
t6=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_9277,a[2]=((C_word*)t0)[2],a[3]=t1,a[4]=((C_word*)t0)[3],a[5]=t5,a[6]=t3,tmp=(C_word)a,a+=7,tmp);
t7=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_9362,a[2]=t6,a[3]=t1,tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 363  period-stream");
f_8154(t7,t1);}

/* k9360 in k9272 in k9375 in reset-period in k7607 in k7604 in k5838 in k5545 in k5542 in k5538 in k5247 in k5244 in k5241 in k5238 */
static void C_ccall f_9362(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_9362,2,t0,t1);}
if(C_truep(t1)){
t2=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_9369,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],tmp=(C_word)a,a+=4,tmp);
t3=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_9373,a[2]=t2,tmp=(C_word)a,a+=3,tmp);
C_trace("ChickenBridge.scm: 363  period-stream");
f_8154(t3,((C_word*)t0)[3]);}
else{
t2=((C_word*)t0)[2];
f_9277(2,t2,C_SCHEME_UNDEFINED);}}

/* k9371 in k9360 in k9272 in k9375 in reset-period in k7607 in k7604 in k5838 in k5545 in k5542 in k5538 in k5247 in k5244 in k5241 in k5238 */
static void C_ccall f_9373(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 363  next-1");
f_8908(((C_word*)t0)[2],t1);}

/* k9367 in k9360 in k9272 in k9375 in reset-period in k7607 in k7604 in k5838 in k5545 in k5542 in k5538 in k5247 in k5244 in k5241 in k5238 */
static void C_ccall f_9369(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word *a;
t2=((C_word*)t0)[3];
t3=(C_word)C_i_check_structure(t2,lf[141]);
C_trace("ChickenBridge.scm: 363  ##sys#block-set!");
t4=*((C_word*)lf[143]+1);
((C_proc5)(void*)(*((C_word*)t4+1)))(5,t4,((C_word*)t0)[2],t2,C_fix(2),t1);}

/* k9275 in k9272 in k9375 in reset-period in k7607 in k7604 in k5838 in k5545 in k5542 in k5538 in k5247 in k5244 in k5241 in k5238 */
static void C_ccall f_9277(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_9277,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_9359,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],tmp=(C_word)a,a+=7,tmp);
C_trace("ChickenBridge.scm: 363  period-length");
f_8136(t2,((C_word*)t0)[3]);}

/* k9357 in k9275 in k9272 in k9375 in reset-period in k7607 in k7604 in k5838 in k5545 in k5542 in k5538 in k5247 in k5244 in k5241 in k5238 */
static void C_ccall f_9359(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_9359,2,t0,t1);}
t2=(C_word)C_eqp(t1,C_SCHEME_TRUE);
t3=C_mutate(((C_word *)((C_word*)t0)[6])+1,t2);
t4=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_9285,a[2]=((C_word*)t0)[6],a[3]=((C_word*)t0)[2],a[4]=((C_word*)t0)[3],a[5]=((C_word*)t0)[4],a[6]=((C_word*)t0)[5],tmp=(C_word)a,a+=7,tmp);
if(C_truep(((C_word*)((C_word*)t0)[6])[1])){
t5=((C_word*)t0)[3];
t6=(C_word)C_i_check_structure(t5,lf[141]);
t7=t4;
f_9285(2,t7,(C_word)C_i_block_ref(t5,C_fix(4)));}
else{
C_trace("ChickenBridge.scm: 363  period-length");
f_8136(t4,((C_word*)t0)[3]);}}

/* k9283 in k9357 in k9275 in k9272 in k9375 in reset-period in k7607 in k7604 in k5838 in k5545 in k5542 in k5538 in k5247 in k5244 in k5241 in k5238 */
static void C_ccall f_9285(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[13],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_9285,2,t0,t1);}
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_9288,a[2]=((C_word*)t0)[4],a[3]=((C_word*)t0)[6],a[4]=((C_word*)t0)[5],tmp=(C_word)a,a+=5,tmp);
t4=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_9294,a[2]=((C_word*)t0)[3],a[3]=t3,a[4]=((C_word*)t0)[6],tmp=(C_word)a,a+=5,tmp);
if(C_truep(((C_word*)((C_word*)t0)[2])[1])){
t5=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_9349,a[2]=t4,tmp=(C_word)a,a+=3,tmp);
C_trace("ChickenBridge.scm: 363  pattern-flags");
f_8268(t5,((C_word*)t0)[3]);}
else{
t5=t4;
f_9294(2,t5,C_SCHEME_FALSE);}}

/* k9347 in k9283 in k9357 in k9275 in k9272 in k9375 in reset-period in k7607 in k7604 in k5838 in k5545 in k5542 in k5538 in k5247 in k5244 in k5241 in k5238 */
static void C_ccall f_9349(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 363  bitwise-test");
f_6215(((C_word*)t0)[2],t1,C_fix(8));}

/* k9292 in k9283 in k9357 in k9275 in k9272 in k9375 in reset-period in k7607 in k7604 in k5838 in k5545 in k5542 in k5538 in k5247 in k5244 in k5241 in k5238 */
static void C_ccall f_9294(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[11],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_9294,2,t0,t1);}
if(C_truep(t1)){
t2=C_fix(0);
t3=(*a=C_VECTOR_TYPE|1,a[1]=t2,tmp=(C_word)a,a+=2,tmp);
t4=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_9297,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=t3,tmp=(C_word)a,a+=5,tmp);
t5=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_9313,a[2]=t3,a[3]=((C_word)li120),tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 363  map-pattern-data");
f_9218(t4,t5,((C_word*)t0)[2]);}
else{
t2=((C_word*)t0)[3];
f_9288(t2,C_SCHEME_UNDEFINED);}}

/* a9312 in k9292 in k9283 in k9357 in k9275 in k9272 in k9375 in reset-period in k7607 in k7604 in k5838 in k5545 in k5542 in k5538 in k5247 in k5244 in k5241 in k5238 */
static void C_ccall f_9313(C_word c,C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word ab[5],*a=ab;
if(c!=3) C_bad_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr3,(void*)f_9313,3,t0,t1,t2);}
t3=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_9342,a[2]=t2,a[3]=t1,a[4]=((C_word*)t0)[2],tmp=(C_word)a,a+=5,tmp);
C_trace("ChickenBridge.scm: 363  reset-period");
f_9264(t3,t2);}

/* k9340 in a9312 in k9292 in k9283 in k9357 in k9275 in k9272 in k9375 in reset-period in k7607 in k7604 in k5838 in k5545 in k5542 in k5538 in k5247 in k5244 in k5241 in k5238 */
static void C_ccall f_9342(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[4],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_9342,2,t0,t1);}
if(C_truep((C_word)C_i_nequalp(t1,C_fix(0)))){
t2=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_9323,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 363  pattern-period");
f_8340(t2,((C_word*)t0)[2]);}
else{
t2=((C_word*)t0)[3];
((C_proc2)(void*)(*((C_word*)t2+1)))(2,t2,C_SCHEME_UNDEFINED);}}

/* k9321 in k9340 in a9312 in k9292 in k9283 in k9357 in k9275 in k9272 in k9375 in reset-period in k7607 in k7604 in k5838 in k5545 in k5542 in k5538 in k5247 in k5244 in k5241 in k5238 */
static void C_ccall f_9323(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[8],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_9323,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_9326,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],tmp=(C_word)a,a+=4,tmp);
t3=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_9338,a[2]=t1,a[3]=t2,tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 363  period-omit");
f_8190(t3,t1);}

/* k9336 in k9321 in k9340 in a9312 in k9292 in k9283 in k9357 in k9275 in k9272 in k9375 in reset-period in k7607 in k7604 in k5838 in k5545 in k5542 in k5538 in k5247 in k5244 in k5241 in k5238 */
static void C_ccall f_9338(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[4],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_9338,2,t0,t1);}
t2=(C_word)C_a_i_plus(&a,2,t1,C_fix(1));
C_trace("ChickenBridge.scm: 363  period-omit-set!");
f_8181(((C_word*)t0)[3],((C_word*)t0)[2],t2);}

/* k9324 in k9321 in k9340 in a9312 in k9292 in k9283 in k9357 in k9275 in k9272 in k9375 in reset-period in k7607 in k7604 in k5838 in k5545 in k5542 in k5538 in k5247 in k5244 in k5241 in k5238 */
static void C_ccall f_9326(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[4],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_9326,2,t0,t1);}
t2=(C_word)C_a_i_plus(&a,2,((C_word*)((C_word*)t0)[3])[1],C_fix(1));
t3=C_mutate(((C_word *)((C_word*)t0)[3])+1,t2);
t4=((C_word*)t0)[2];
((C_proc2)(void*)(*((C_word*)t4+1)))(2,t4,t3);}

/* k9295 in k9292 in k9283 in k9357 in k9275 in k9272 in k9375 in reset-period in k7607 in k7604 in k5838 in k5545 in k5542 in k5538 in k5247 in k5244 in k5241 in k5238 */
static void C_ccall f_9297(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[8],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_9297,2,t0,t1);}
if(C_truep((C_word)C_i_greaterp(((C_word*)((C_word*)t0)[4])[1],C_fix(0)))){
t2=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_9307,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],tmp=(C_word)a,a+=4,tmp);
t3=(C_word)C_a_i_minus(&a,2,((C_word*)((C_word*)t0)[3])[1],((C_word*)((C_word*)t0)[4])[1]);
C_trace("ChickenBridge.scm: 363  max");
t4=*((C_word*)lf[187]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,t3,C_fix(0));}
else{
t2=((C_word*)t0)[2];
f_9288(t2,C_SCHEME_UNDEFINED);}}

/* k9305 in k9295 in k9292 in k9283 in k9357 in k9275 in k9272 in k9375 in reset-period in k7607 in k7604 in k5838 in k5545 in k5542 in k5538 in k5247 in k5244 in k5241 in k5238 */
static void C_ccall f_9307(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[3])+1,t1);
t3=((C_word*)t0)[2];
f_9288(t3,t2);}

/* k9286 in k9283 in k9357 in k9275 in k9272 in k9375 in reset-period in k7607 in k7604 in k5838 in k5545 in k5542 in k5538 in k5247 in k5244 in k5241 in k5238 */
static void C_fcall f_9288(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[4],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_9288,NULL,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_9291,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 363  period-count-set!");
f_8109(t2,((C_word*)t0)[2],((C_word*)((C_word*)t0)[3])[1]);}

/* k9289 in k9286 in k9283 in k9357 in k9275 in k9272 in k9375 in reset-period in k7607 in k7604 in k5838 in k5545 in k5542 in k5538 in k5247 in k5244 in k5241 in k5238 */
static void C_ccall f_9291(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
t2=((C_word*)t0)[3];
((C_proc2)(void*)(*((C_word*)t2+1)))(2,t2,((C_word*)((C_word*)t0)[2])[1]);}

/* map-pattern-data in k7607 in k7604 in k5838 in k5545 in k5542 in k5538 in k5247 in k5244 in k5241 in k5238 */
static void C_fcall f_9218(C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_9218,NULL,3,t1,t2,t3);}
t4=t3;
t5=(C_word)C_i_check_structure(t4,lf[151]);
t6=(C_word)C_i_block_ref(t4,C_fix(13));
t7=t6;
((C_proc4)C_retrieve_proc(t7))(4,t7,t1,t2,t3);}

/* next-in-pattern in k7607 in k7604 in k5838 in k5545 in k5542 in k5538 in k5247 in k5244 in k5241 in k5238 */
static void C_fcall f_9209(C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word *a;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_9209,NULL,2,t1,t2);}
t3=t2;
t4=(C_word)C_i_check_structure(t3,lf[151]);
t5=(C_word)C_i_block_ref(t3,C_fix(12));
t6=t5;
((C_proc3)C_retrieve_proc(t6))(3,t6,t1,t2);}

/* next-1 in k7607 in k7604 in k5838 in k5545 in k5542 in k5538 in k5247 in k5244 in k5241 in k5238 */
static void C_fcall f_8908(C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word ab[4],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_8908,NULL,2,t1,t2);}
t3=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_8915,a[2]=t2,a[3]=t1,tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 363  pattern?");
f_8253(t3,t2);}

/* k8913 in next-1 in k7607 in k7604 in k5838 in k5545 in k5542 in k5538 in k5247 in k5244 in k5241 in k5238 */
static void C_ccall f_8915(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[8],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_8915,2,t0,t1);}
if(C_truep(t1)){
t2=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_8918,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 363  pattern-period");
f_8340(t2,((C_word*)t0)[2]);}
else{
if(C_truep((C_word)C_i_closurep(((C_word*)t0)[2]))){
C_trace("ChickenBridge.scm: 363  obj");
t2=((C_word*)t0)[2];
((C_proc2)C_retrieve_proc(t2))(2,t2,((C_word*)t0)[3]);}
else{
t2=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_9204,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 363  promise?");
t3=C_retrieve(lf[186]);
((C_proc3)C_retrieve_proc(t3))(3,t3,t2,((C_word*)t0)[2]);}}}

/* k9202 in k8913 in next-1 in k7607 in k7604 in k5838 in k5545 in k5542 in k5538 in k5247 in k5244 in k5241 in k5238 */
static void C_ccall f_9204(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
if(C_truep(t1)){
C_trace("ChickenBridge.scm: 363  force");
t2=C_retrieve(lf[185]);
((C_proc3)C_retrieve_proc(t2))(3,t2,((C_word*)t0)[3],((C_word*)t0)[2]);}
else{
t2=((C_word*)t0)[3];
((C_proc2)(void*)(*((C_word*)t2+1)))(2,t2,((C_word*)t0)[2]);}}

/* k8916 in k8913 in next-1 in k7607 in k7604 in k5838 in k5545 in k5542 in k5538 in k5247 in k5244 in k5241 in k5238 */
static void C_ccall f_8918(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[14],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_8918,2,t0,t1);}
t2=C_SCHEME_FALSE;
t3=(*a=C_VECTOR_TYPE|1,a[1]=t2,tmp=(C_word)a,a+=2,tmp);
t4=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_8921,a[2]=t1,a[3]=((C_word*)t0)[2],a[4]=((C_word*)t0)[3],a[5]=t3,tmp=(C_word)a,a+=6,tmp);
t5=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_9189,a[2]=t1,a[3]=((C_word*)t0)[2],a[4]=t4,a[5]=t3,tmp=(C_word)a,a+=6,tmp);
C_trace("ChickenBridge.scm: 363  period-count");
f_8118(t5,t1);}

/* k9187 in k8916 in k8913 in next-1 in k7607 in k7604 in k5838 in k5545 in k5542 in k5538 in k5247 in k5244 in k5241 in k5238 */
static void C_ccall f_9189(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[10],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_9189,2,t0,t1);}
if(C_truep((C_word)C_i_nequalp(t1,C_fix(0)))){
t2=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_9144,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],tmp=(C_word)a,a+=5,tmp);
t3=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_9181,a[2]=t2,a[3]=((C_word*)t0)[5],a[4]=((C_word*)t0)[3],tmp=(C_word)a,a+=5,tmp);
C_trace("ChickenBridge.scm: 363  period-reps");
f_8208(t3,((C_word*)t0)[2]);}
else{
t2=((C_word*)t0)[4];
f_8921(2,t2,C_SCHEME_UNDEFINED);}}

/* k9179 in k9187 in k8916 in k8913 in next-1 in k7607 in k7604 in k5838 in k5545 in k5542 in k5538 in k5247 in k5244 in k5241 in k5238 */
static void C_ccall f_9181(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[5],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_9181,2,t0,t1);}
t2=((C_word*)t0)[4];
t3=(C_word)C_i_check_structure(t2,lf[151]);
t4=(C_word)C_i_block_ref(t2,C_fix(8));
if(C_truep((C_word)C_i_greater_or_equalp(t1,t4))){
t5=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_9173,a[2]=((C_word*)t0)[4],a[3]=((C_word*)t0)[2],a[4]=((C_word*)t0)[3],tmp=(C_word)a,a+=5,tmp);
C_trace("ChickenBridge.scm: 363  pattern-value-set!");
f_8349(t5,((C_word*)t0)[4],lf[180]);}
else{
t5=((C_word*)t0)[2];
f_9144(t5,C_SCHEME_UNDEFINED);}}

/* k9171 in k9179 in k9187 in k8916 in k8913 in next-1 in k7607 in k7604 in k5838 in k5545 in k5542 in k5538 in k5247 in k5244 in k5241 in k5238 */
static void C_ccall f_9173(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[4],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_9173,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_9176,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 363  pattern-state-set!");
f_8367(t2,((C_word*)t0)[2],lf[178]);}

/* k9174 in k9171 in k9179 in k9187 in k8916 in k8913 in next-1 in k7607 in k7604 in k5838 in k5545 in k5542 in k5538 in k5247 in k5244 in k5241 in k5238 */
static void C_ccall f_9176(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[3])+1,lf[180]);
t3=((C_word*)t0)[2];
f_9144(t3,t2);}

/* k9142 in k9187 in k8916 in k8913 in next-1 in k7607 in k7604 in k5838 in k5545 in k5542 in k5538 in k5247 in k5244 in k5241 in k5238 */
static void C_fcall f_9144(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[8],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_9144,NULL,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_9150,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],tmp=(C_word)a,a+=5,tmp);
t3=((C_word*)((C_word*)t0)[4])[1];
if(C_truep(t3)){
t4=t2;
f_9150(t4,C_SCHEME_FALSE);}
else{
t4=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_9167,a[2]=t2,tmp=(C_word)a,a+=3,tmp);
C_trace("ChickenBridge.scm: 363  reset-period");
f_9264(t4,((C_word*)t0)[2]);}}

/* k9165 in k9142 in k9187 in k8916 in k8913 in next-1 in k7607 in k7604 in k5838 in k5545 in k5542 in k5538 in k5247 in k5244 in k5241 in k5238 */
static void C_ccall f_9167(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
t2=((C_word*)t0)[2];
f_9150(t2,(C_word)C_i_nequalp(t1,C_fix(0)));}

/* k9148 in k9142 in k9187 in k8916 in k8913 in next-1 in k7607 in k7604 in k5838 in k5545 in k5542 in k5538 in k5247 in k5244 in k5241 in k5238 */
static void C_fcall f_9150(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[4],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_9150,NULL,2,t0,t1);}
if(C_truep(t1)){
t2=C_mutate(((C_word *)((C_word*)t0)[4])+1,lf[166]);
t3=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_9154,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 363  pattern-value-set!");
f_8349(t3,((C_word*)t0)[2],lf[166]);}
else{
t2=((C_word*)t0)[3];
f_8921(2,t2,C_SCHEME_UNDEFINED);}}

/* k9152 in k9148 in k9142 in k9187 in k8916 in k8913 in next-1 in k7607 in k7604 in k5838 in k5545 in k5542 in k5538 in k5247 in k5244 in k5241 in k5238 */
static void C_ccall f_9154(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 363  pattern-state-set!");
f_8367(((C_word*)t0)[3],((C_word*)t0)[2],lf[178]);}

/* k8919 in k8916 in k8913 in next-1 in k7607 in k7604 in k5838 in k5545 in k5542 in k5538 in k5247 in k5244 in k5241 in k5238 */
static void C_ccall f_8921(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[5],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_8921,2,t0,t1);}
if(C_truep(((C_word*)((C_word*)t0)[5])[1])){
t2=((C_word*)t0)[4];
((C_proc2)(void*)(*((C_word*)t2+1)))(2,t2,((C_word*)((C_word*)t0)[5])[1]);}
else{
t2=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_8927,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[3],tmp=(C_word)a,a+=5,tmp);
C_trace("ChickenBridge.scm: 363  pattern-flags");
f_8268(t2,((C_word*)t0)[3]);}}

/* k8925 in k8919 in k8916 in k8913 in next-1 in k7607 in k7604 in k5838 in k5545 in k5542 in k5538 in k5247 in k5244 in k5241 in k5238 */
static void C_ccall f_8927(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word ab[21],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_8927,2,t0,t1);}
t2=((C_word*)t0)[4];
t3=(C_word)C_i_check_structure(t2,lf[151]);
t4=(C_word)C_i_block_ref(t2,C_fix(9));
t5=C_SCHEME_FALSE;
t6=(*a=C_VECTOR_TYPE|1,a[1]=t5,tmp=(C_word)a,a+=2,tmp);
t7=C_SCHEME_FALSE;
t8=(*a=C_VECTOR_TYPE|1,a[1]=t7,tmp=(C_word)a,a+=2,tmp);
t9=(*a=C_CLOSURE_TYPE|8,a[1]=(C_word)f_8933,a[2]=t1,a[3]=((C_word*)t0)[2],a[4]=t4,a[5]=t8,a[6]=((C_word*)t0)[4],a[7]=t6,a[8]=((C_word*)t0)[3],tmp=(C_word)a,a+=9,tmp);
t10=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_9019,a[2]=t1,a[3]=((C_word*)t0)[2],a[4]=((C_word*)t0)[4],a[5]=t9,a[6]=t8,a[7]=t6,tmp=(C_word)a,a+=8,tmp);
C_trace("ChickenBridge.scm: 363  bitwise-test");
f_6215(t10,t1,C_fix(1));}

/* k9017 in k8925 in k8919 in k8916 in k8913 in next-1 in k7607 in k7604 in k5838 in k5545 in k5542 in k5538 in k5247 in k5244 in k5241 in k5238 */
static void C_ccall f_9019(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[20],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_9019,2,t0,t1);}
if(C_truep(t1)){
t2=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_9022,a[2]=((C_word*)t0)[4],a[3]=((C_word*)t0)[5],a[4]=((C_word*)t0)[6],a[5]=((C_word*)t0)[7],tmp=(C_word)a,a+=6,tmp);
t3=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_9035,a[2]=((C_word*)t0)[4],a[3]=t2,tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 363  next-in-pattern");
f_9209(t3,((C_word*)t0)[4]);}
else{
t2=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_9042,a[2]=((C_word*)t0)[5],a[3]=((C_word*)t0)[6],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[7],tmp=(C_word)a,a+=6,tmp);
t3=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_9131,a[2]=((C_word*)t0)[3],a[3]=t2,tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 363  bitwise-test");
f_6215(t3,((C_word*)t0)[2],C_fix(8));}}

/* k9129 in k9017 in k8925 in k8919 in k8916 in k8913 in next-1 in k7607 in k7604 in k5838 in k5545 in k5542 in k5538 in k5247 in k5244 in k5241 in k5238 */
static void C_ccall f_9131(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[3],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_9131,2,t0,t1);}
if(C_truep(t1)){
t2=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_9138,a[2]=((C_word*)t0)[3],tmp=(C_word)a,a+=3,tmp);
C_trace("ChickenBridge.scm: 363  period-length");
f_8136(t2,((C_word*)t0)[2]);}
else{
t2=((C_word*)t0)[3];
f_9042(t2,C_SCHEME_FALSE);}}

/* k9136 in k9129 in k9017 in k8925 in k8919 in k8916 in k8913 in next-1 in k7607 in k7604 in k5838 in k5545 in k5542 in k5538 in k5247 in k5244 in k5241 in k5238 */
static void C_ccall f_9138(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
t2=((C_word*)t0)[2];
f_9042(t2,(C_word)C_eqp(t1,C_SCHEME_TRUE));}

/* k9040 in k9017 in k8925 in k8919 in k8916 in k8913 in next-1 in k7607 in k7604 in k5838 in k5545 in k5542 in k5538 in k5247 in k5244 in k5241 in k5238 */
static void C_fcall f_9042(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_9042,NULL,2,t0,t1);}
t2=C_SCHEME_UNDEFINED;
t3=(*a=C_VECTOR_TYPE|1,a[1]=t2,tmp=(C_word)a,a+=2,tmp);
t4=C_set_block_item(t3,0,(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_9044,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=t3,a[5]=((C_word*)t0)[5],a[6]=((C_word)li116),tmp=(C_word)a,a+=7,tmp));
t5=((C_word*)t3)[1];
f_9044(t5,((C_word*)t0)[2],t1,C_SCHEME_FALSE);}

/* do872 in k9040 in k9017 in k8925 in k8919 in k8916 in k8913 in next-1 in k7607 in k7604 in k5838 in k5545 in k5542 in k5538 in k5247 in k5244 in k5241 in k5238 */
static void C_fcall f_9044(C_word t0,C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word ab[19],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_9044,NULL,4,t0,t1,t2,t3);}
t4=(*a=C_VECTOR_TYPE|1,a[1]=t3,tmp=(C_word)a,a+=2,tmp);
if(C_truep(((C_word*)t4)[1])){
t5=t1;
((C_proc2)(void*)(*((C_word*)t5+1)))(2,t5,C_SCHEME_FALSE);}
else{
t5=(*a=C_CLOSURE_TYPE|8,a[1]=(C_word)f_9051,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=t4,a[5]=t2,a[6]=t1,a[7]=((C_word*)t0)[4],a[8]=((C_word*)t0)[5],tmp=(C_word)a,a+=9,tmp);
t6=C_SCHEME_UNDEFINED;
t7=(*a=C_VECTOR_TYPE|1,a[1]=t6,tmp=(C_word)a,a+=2,tmp);
t8=C_set_block_item(t7,0,(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_9093,a[2]=t2,a[3]=((C_word*)t0)[3],a[4]=t7,a[5]=((C_word)li115),tmp=(C_word)a,a+=6,tmp));
t9=((C_word*)t7)[1];
f_9093(t9,t5);}}

/* do876 in do872 in k9040 in k9017 in k8925 in k8919 in k8916 in k8913 in next-1 in k7607 in k7604 in k5838 in k5545 in k5542 in k5538 in k5247 in k5244 in k5241 in k5238 */
static void C_fcall f_9093(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[6],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_9093,NULL,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_9128,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=t1,a[5]=((C_word*)t0)[4],tmp=(C_word)a,a+=6,tmp);
C_trace("ChickenBridge.scm: 363  pattern-datum");
f_8322(t2,((C_word*)t0)[3]);}

/* k9126 in do876 in do872 in k9040 in k9017 in k8925 in k8919 in k8916 in k8913 in next-1 in k7607 in k7604 in k5838 in k5545 in k5542 in k5538 in k5247 in k5244 in k5241 in k5238 */
static void C_ccall f_9128(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[11],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_9128,2,t0,t1);}
t2=(C_word)C_eqp(t1,lf[166]);
if(C_truep(t2)){
t3=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_9103,a[2]=((C_word*)t0)[4],a[3]=((C_word*)t0)[5],tmp=(C_word)a,a+=4,tmp);
t4=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_9110,a[2]=((C_word*)t0)[3],a[3]=t3,tmp=(C_word)a,a+=4,tmp);
if(C_truep(((C_word*)t0)[2])){
t5=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_9117,a[2]=t4,tmp=(C_word)a,a+=3,tmp);
C_trace("ChickenBridge.scm: 363  next-in-pattern");
f_9209(t5,((C_word*)t0)[3]);}
else{
C_trace("ChickenBridge.scm: 363  next-in-pattern");
f_9209(t4,((C_word*)t0)[3]);}}
else{
t3=((C_word*)t0)[4];
((C_proc2)(void*)(*((C_word*)t3+1)))(2,t3,C_SCHEME_FALSE);}}

/* k9115 in k9126 in do876 in do872 in k9040 in k9017 in k8925 in k8919 in k8916 in k8913 in next-1 in k7607 in k7604 in k5838 in k5545 in k5542 in k5538 in k5247 in k5244 in k5241 in k5238 */
static void C_ccall f_9117(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[4],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_9117,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_9262,a[2]=t1,a[3]=((C_word*)t0)[2],tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 363  pattern?");
f_8253(t2,t1);}

/* k9260 in k9115 in k9126 in do876 in do872 in k9040 in k9017 in k8925 in k8919 in k8916 in k8913 in next-1 in k7607 in k7604 in k5838 in k5545 in k5542 in k5538 in k5247 in k5244 in k5241 in k5238 */
static void C_ccall f_9262(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[4],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_9262,2,t0,t1);}
if(C_truep(t1)){
t2=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_9237,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 363  pattern-period");
f_8340(t2,((C_word*)t0)[2]);}
else{
t2=((C_word*)t0)[3];
f_9110(2,t2,((C_word*)t0)[2]);}}

/* k9235 in k9260 in k9115 in k9126 in do876 in do872 in k9040 in k9017 in k8925 in k8919 in k8916 in k8913 in next-1 in k7607 in k7604 in k5838 in k5545 in k5542 in k5538 in k5247 in k5244 in k5241 in k5238 */
static void C_ccall f_9237(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[5],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_9237,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_9258,a[2]=((C_word*)t0)[2],a[3]=t1,a[4]=((C_word*)t0)[3],tmp=(C_word)a,a+=5,tmp);
C_trace("ChickenBridge.scm: 363  period-omit");
f_8190(t2,t1);}

/* k9256 in k9235 in k9260 in k9115 in k9126 in do876 in do872 in k9040 in k9017 in k8925 in k8919 in k8916 in k8913 in next-1 in k7607 in k7604 in k5838 in k5545 in k5542 in k5538 in k5247 in k5244 in k5241 in k5238 */
static void C_ccall f_9258(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_9258,2,t0,t1);}
if(C_truep((C_word)C_i_greaterp(t1,C_fix(0)))){
t2=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_9246,a[2]=((C_word*)t0)[4],tmp=(C_word)a,a+=3,tmp);
t3=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_9254,a[2]=((C_word*)t0)[3],a[3]=t2,tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 363  period-omit");
f_8190(t3,((C_word*)t0)[3]);}
else{
t2=((C_word*)t0)[4];
f_9110(2,t2,((C_word*)t0)[2]);}}

/* k9252 in k9256 in k9235 in k9260 in k9115 in k9126 in do876 in do872 in k9040 in k9017 in k8925 in k8919 in k8916 in k8913 in next-1 in k7607 in k7604 in k5838 in k5545 in k5542 in k5538 in k5247 in k5244 in k5241 in k5238 */
static void C_ccall f_9254(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[4],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_9254,2,t0,t1);}
t2=(C_word)C_a_i_minus(&a,2,t1,C_fix(1));
C_trace("ChickenBridge.scm: 363  period-omit-set!");
f_8181(((C_word*)t0)[3],((C_word*)t0)[2],t2);}

/* k9244 in k9256 in k9235 in k9260 in k9115 in k9126 in do876 in do872 in k9040 in k9017 in k8925 in k8919 in k8916 in k8913 in next-1 in k7607 in k7604 in k5838 in k5545 in k5542 in k5538 in k5247 in k5244 in k5241 in k5238 */
static void C_ccall f_9246(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
t2=((C_word*)t0)[2];
f_9110(2,t2,lf[166]);}

/* k9108 in k9126 in do876 in do872 in k9040 in k9017 in k8925 in k8919 in k8916 in k8913 in next-1 in k7607 in k7604 in k5838 in k5545 in k5542 in k5538 in k5247 in k5244 in k5241 in k5238 */
static void C_ccall f_9110(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 363  pattern-datum-set!");
f_8313(((C_word*)t0)[3],((C_word*)t0)[2],t1);}

/* k9101 in k9126 in do876 in do872 in k9040 in k9017 in k8925 in k8919 in k8916 in k8913 in next-1 in k7607 in k7604 in k5838 in k5545 in k5542 in k5538 in k5247 in k5244 in k5241 in k5238 */
static void C_ccall f_9103(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
t2=((C_word*)((C_word*)t0)[3])[1];
f_9093(t2,((C_word*)t0)[2]);}

/* k9049 in do872 in k9040 in k9017 in k8925 in k8919 in k8916 in k8913 in next-1 in k7607 in k7604 in k5838 in k5545 in k5542 in k5538 in k5247 in k5244 in k5241 in k5238 */
static void C_ccall f_9051(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[12],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_9051,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|8,a[1]=(C_word)f_9055,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],a[7]=((C_word*)t0)[7],a[8]=((C_word*)t0)[8],tmp=(C_word)a,a+=9,tmp);
t3=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_9091,a[2]=t2,tmp=(C_word)a,a+=3,tmp);
C_trace("ChickenBridge.scm: 363  pattern-datum");
f_8322(t3,((C_word*)t0)[3]);}

/* k9089 in k9049 in do872 in k9040 in k9017 in k8925 in k8919 in k8916 in k8913 in next-1 in k7607 in k7604 in k5838 in k5545 in k5542 in k5538 in k5247 in k5244 in k5241 in k5238 */
static void C_ccall f_9091(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 363  next-1");
f_8908(((C_word*)t0)[2],t1);}

/* k9053 in k9049 in do872 in k9040 in k9017 in k8925 in k8919 in k8916 in k8913 in next-1 in k7607 in k7604 in k5838 in k5545 in k5542 in k5538 in k5247 in k5244 in k5241 in k5238 */
static void C_ccall f_9055(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[16],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_9055,2,t0,t1);}
t2=C_mutate(((C_word *)((C_word*)t0)[8])+1,t1);
t3=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_9058,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[8],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],a[7]=((C_word*)t0)[7],tmp=(C_word)a,a+=8,tmp);
t4=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_9074,a[2]=((C_word*)t0)[3],a[3]=t3,a[4]=((C_word*)t0)[2],tmp=(C_word)a,a+=5,tmp);
t5=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_9087,a[2]=t4,tmp=(C_word)a,a+=3,tmp);
C_trace("ChickenBridge.scm: 363  pattern-datum");
f_8322(t5,((C_word*)t0)[3]);}

/* k9085 in k9053 in k9049 in do872 in k9040 in k9017 in k8925 in k8919 in k8916 in k8913 in next-1 in k7607 in k7604 in k5838 in k5545 in k5542 in k5538 in k5247 in k5244 in k5241 in k5238 */
static void C_ccall f_9087(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 363  pattern?");
f_8253(((C_word*)t0)[2],t1);}

/* k9072 in k9053 in k9049 in do872 in k9040 in k9017 in k8925 in k8919 in k8916 in k8913 in next-1 in k7607 in k7604 in k5838 in k5545 in k5542 in k5538 in k5247 in k5244 in k5241 in k5238 */
static void C_ccall f_9074(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_9074,2,t0,t1);}
if(C_truep(t1)){
t2=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_9078,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],tmp=(C_word)a,a+=4,tmp);
t3=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_9082,a[2]=t2,tmp=(C_word)a,a+=3,tmp);
C_trace("ChickenBridge.scm: 363  pattern-datum");
f_8322(t3,((C_word*)t0)[2]);}
else{
t2=C_mutate(((C_word *)((C_word*)t0)[4])+1,lf[178]);
t3=((C_word*)t0)[3];
f_9058(t3,t2);}}

/* k9080 in k9072 in k9053 in k9049 in do872 in k9040 in k9017 in k8925 in k8919 in k8916 in k8913 in next-1 in k7607 in k7604 in k5838 in k5545 in k5542 in k5538 in k5247 in k5244 in k5241 in k5238 */
static void C_ccall f_9082(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 363  pattern-state");
f_8376(((C_word*)t0)[2],t1);}

/* k9076 in k9072 in k9053 in k9049 in do872 in k9040 in k9017 in k8925 in k8919 in k8916 in k8913 in next-1 in k7607 in k7604 in k5838 in k5545 in k5542 in k5538 in k5247 in k5244 in k5241 in k5238 */
static void C_ccall f_9078(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[3])+1,t1);
t3=((C_word*)t0)[2];
f_9058(t3,t2);}

/* k9056 in k9053 in k9049 in do872 in k9040 in k9017 in k8925 in k8919 in k8916 in k8913 in next-1 in k7607 in k7604 in k5838 in k5545 in k5542 in k5538 in k5247 in k5244 in k5241 in k5238 */
static void C_fcall f_9058(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[6],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_9058,NULL,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_9061,a[2]=((C_word*)t0)[4],a[3]=((C_word*)t0)[5],a[4]=((C_word*)t0)[6],a[5]=((C_word*)t0)[7],tmp=(C_word)a,a+=6,tmp);
t3=(C_word)C_eqp(((C_word*)((C_word*)t0)[3])[1],lf[166]);
if(C_truep(t3)){
C_trace("ChickenBridge.scm: 363  pattern-datum-set!");
f_8313(t2,((C_word*)t0)[2],((C_word*)((C_word*)t0)[3])[1]);}
else{
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=t2;
f_9061(2,t5,t4);}}

/* k9059 in k9056 in k9053 in k9049 in do872 in k9040 in k9017 in k8925 in k8919 in k8916 in k8913 in next-1 in k7607 in k7604 in k5838 in k5545 in k5542 in k5538 in k5247 in k5244 in k5241 in k5238 */
static void C_ccall f_9061(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
t2=((C_word*)((C_word*)t0)[5])[1];
f_9044(t2,((C_word*)t0)[4],((C_word*)t0)[3],((C_word*)((C_word*)t0)[2])[1]);}

/* k9033 in k9017 in k8925 in k8919 in k8916 in k8913 in next-1 in k7607 in k7604 in k5838 in k5545 in k5542 in k5538 in k5247 in k5244 in k5241 in k5238 */
static void C_ccall f_9035(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 363  pattern-datum-set!");
f_8313(((C_word*)t0)[3],((C_word*)t0)[2],t1);}

/* k9020 in k9017 in k8925 in k8919 in k8916 in k8913 in next-1 in k7607 in k7604 in k5838 in k5545 in k5542 in k5538 in k5247 in k5244 in k5241 in k5238 */
static void C_ccall f_9022(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[8],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_9022,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_9026,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],tmp=(C_word)a,a+=5,tmp);
t3=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_9031,a[2]=t2,tmp=(C_word)a,a+=3,tmp);
C_trace("ChickenBridge.scm: 363  pattern-datum");
f_8322(t3,((C_word*)t0)[2]);}

/* k9029 in k9020 in k9017 in k8925 in k8919 in k8916 in k8913 in next-1 in k7607 in k7604 in k5838 in k5545 in k5542 in k5538 in k5247 in k5244 in k5241 in k5238 */
static void C_ccall f_9031(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 363  next-1");
f_8908(((C_word*)t0)[2],t1);}

/* k9024 in k9020 in k9017 in k8925 in k8919 in k8916 in k8913 in next-1 in k7607 in k7604 in k5838 in k5545 in k5542 in k5538 in k5247 in k5244 in k5241 in k5238 */
static void C_ccall f_9026(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[4])+1,t1);
t3=C_mutate(((C_word *)((C_word*)t0)[3])+1,lf[178]);
t4=((C_word*)t0)[2];
f_8933(2,t4,t3);}

/* k8931 in k8925 in k8919 in k8916 in k8913 in next-1 in k7607 in k7604 in k5838 in k5545 in k5542 in k5538 in k5247 in k5244 in k5241 in k5238 */
static void C_ccall f_8933(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word ab[26],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_8933,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_8936,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],a[7]=((C_word*)t0)[8],tmp=(C_word)a,a+=8,tmp);
t3=(C_word)C_eqp(((C_word*)((C_word*)t0)[5])[1],lf[178]);
if(C_truep(t3)){
t4=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_8978,a[2]=((C_word*)t0)[6],a[3]=t2,a[4]=((C_word*)t0)[5],tmp=(C_word)a,a+=5,tmp);
t5=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_8990,a[2]=((C_word*)t0)[3],a[3]=t4,tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 363  period-count");
f_8118(t5,((C_word*)t0)[3]);}
else{
t4=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_8993,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=t2,tmp=(C_word)a,a+=5,tmp);
t5=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_9013,a[2]=((C_word*)t0)[6],a[3]=t4,tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 363  bitwise-test");
f_6215(t5,((C_word*)t0)[2],C_fix(64));}}

/* k9011 in k8931 in k8925 in k8919 in k8916 in k8913 in next-1 in k7607 in k7604 in k5838 in k5545 in k5542 in k5538 in k5247 in k5244 in k5241 in k5238 */
static void C_ccall f_9013(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
if(C_truep(t1)){
C_trace("ChickenBridge.scm: 363  pattern-datum-set!");
f_8313(((C_word*)t0)[3],((C_word*)t0)[2],lf[166]);}
else{
t2=((C_word*)t0)[3];
f_8993(2,t2,C_SCHEME_UNDEFINED);}}

/* k8991 in k8931 in k8925 in k8919 in k8916 in k8913 in next-1 in k7607 in k7604 in k5838 in k5545 in k5542 in k5538 in k5247 in k5244 in k5241 in k5238 */
static void C_ccall f_8993(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[4],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_8993,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_8999,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 363  bitwise-test");
f_6215(t2,((C_word*)t0)[2],C_fix(16));}

/* k8997 in k8991 in k8931 in k8925 in k8919 in k8916 in k8913 in next-1 in k7607 in k7604 in k5838 in k5545 in k5542 in k5538 in k5247 in k5244 in k5241 in k5238 */
static void C_ccall f_8999(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[4],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_8999,2,t0,t1);}
if(C_truep(t1)){
t2=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_9010,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 363  period-count");
f_8118(t2,((C_word*)t0)[2]);}
else{
t2=((C_word*)t0)[3];
f_8936(2,t2,C_SCHEME_UNDEFINED);}}

/* k9008 in k8997 in k8991 in k8931 in k8925 in k8919 in k8916 in k8913 in next-1 in k7607 in k7604 in k5838 in k5545 in k5542 in k5538 in k5247 in k5244 in k5241 in k5238 */
static void C_ccall f_9010(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[4],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_9010,2,t0,t1);}
t2=(C_word)C_a_i_minus(&a,2,t1,C_fix(1));
C_trace("ChickenBridge.scm: 363  period-count-set!");
f_8109(((C_word*)t0)[3],((C_word*)t0)[2],t2);}

/* k8988 in k8931 in k8925 in k8919 in k8916 in k8913 in next-1 in k7607 in k7604 in k5838 in k5545 in k5542 in k5538 in k5247 in k5244 in k5241 in k5238 */
static void C_ccall f_8990(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[4],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_8990,2,t0,t1);}
t2=(C_word)C_a_i_minus(&a,2,t1,C_fix(1));
C_trace("ChickenBridge.scm: 363  period-count-set!");
f_8109(((C_word*)t0)[3],((C_word*)t0)[2],t2);}

/* k8976 in k8931 in k8925 in k8919 in k8916 in k8913 in next-1 in k7607 in k7604 in k5838 in k5545 in k5542 in k5538 in k5247 in k5244 in k5241 in k5238 */
static void C_ccall f_8978(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[4],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_8978,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_8981,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 363  pattern-datum-set!");
f_8313(t2,((C_word*)t0)[2],lf[166]);}

/* k8979 in k8976 in k8931 in k8925 in k8919 in k8916 in k8913 in next-1 in k7607 in k7604 in k5838 in k5545 in k5542 in k5538 in k5247 in k5244 in k5241 in k5238 */
static void C_ccall f_8981(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word *a;
t2=C_set_block_item(((C_word*)t0)[3],0,C_SCHEME_FALSE);
t3=((C_word*)t0)[2];
f_8936(2,t3,t2);}

/* k8934 in k8931 in k8925 in k8919 in k8916 in k8913 in next-1 in k7607 in k7604 in k5838 in k5545 in k5542 in k5538 in k5247 in k5244 in k5241 in k5238 */
static void C_ccall f_8936(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[12],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_8936,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_8939,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_8972,a[2]=t2,a[3]=((C_word*)t0)[2],a[4]=((C_word*)t0)[4],tmp=(C_word)a,a+=5,tmp);
C_trace("ChickenBridge.scm: 363  period-count");
f_8118(t3,((C_word*)t0)[2]);}

/* k8970 in k8934 in k8931 in k8925 in k8919 in k8916 in k8913 in next-1 in k7607 in k7604 in k5838 in k5545 in k5542 in k5538 in k5247 in k5244 in k5241 in k5238 */
static void C_ccall f_8972(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[4],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_8972,2,t0,t1);}
if(C_truep((C_word)C_i_nequalp(t1,C_fix(0)))){
t2=C_mutate(((C_word *)((C_word*)t0)[4])+1,lf[178]);
t3=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_8967,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 363  period-reps");
f_8208(t3,((C_word*)t0)[3]);}
else{
t2=C_mutate(((C_word *)((C_word*)t0)[4])+1,((C_word*)((C_word*)t0)[4])[1]);
t3=((C_word*)t0)[2];
f_8939(2,t3,t2);}}

/* k8965 in k8970 in k8934 in k8931 in k8925 in k8919 in k8916 in k8913 in next-1 in k7607 in k7604 in k5838 in k5545 in k5542 in k5538 in k5247 in k5244 in k5241 in k5238 */
static void C_ccall f_8967(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[4],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_8967,2,t0,t1);}
t2=(C_word)C_a_i_plus(&a,2,C_fix(1),t1);
t3=((C_word*)t0)[3];
t4=(C_word)C_i_check_structure(t3,lf[141]);
C_trace("ChickenBridge.scm: 363  ##sys#block-set!");
t5=*((C_word*)lf[143]+1);
((C_proc5)(void*)(*((C_word*)t5+1)))(5,t5,((C_word*)t0)[2],t3,C_fix(6),t2);}

/* k8937 in k8934 in k8931 in k8925 in k8919 in k8916 in k8913 in next-1 in k7607 in k7604 in k5838 in k5545 in k5542 in k5538 in k5247 in k5244 in k5241 in k5238 */
static void C_ccall f_8939(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[10],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_8939,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_8942,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],tmp=(C_word)a,a+=6,tmp);
if(C_truep(((C_word*)t0)[2])){
t3=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_8952,a[2]=t2,a[3]=((C_word*)t0)[5],tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 363  retfn");
t4=((C_word*)t0)[2];
((C_proc3)C_retrieve_proc(t4))(3,t4,t3,((C_word*)((C_word*)t0)[5])[1]);}
else{
t3=t2;
f_8942(t3,C_SCHEME_UNDEFINED);}}

/* k8950 in k8937 in k8934 in k8931 in k8925 in k8919 in k8916 in k8913 in next-1 in k7607 in k7604 in k5838 in k5545 in k5542 in k5538 in k5247 in k5244 in k5241 in k5238 */
static void C_ccall f_8952(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[3])+1,t1);
t3=((C_word*)t0)[2];
f_8942(t3,t2);}

/* k8940 in k8937 in k8934 in k8931 in k8925 in k8919 in k8916 in k8913 in next-1 in k7607 in k7604 in k5838 in k5545 in k5542 in k5538 in k5247 in k5244 in k5241 in k5238 */
static void C_fcall f_8942(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[5],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_8942,NULL,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_8945,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],tmp=(C_word)a,a+=5,tmp);
C_trace("ChickenBridge.scm: 363  pattern-state-set!");
f_8367(t2,((C_word*)t0)[3],((C_word*)((C_word*)t0)[2])[1]);}

/* k8943 in k8940 in k8937 in k8934 in k8931 in k8925 in k8919 in k8916 in k8913 in next-1 in k7607 in k7604 in k5838 in k5545 in k5542 in k5538 in k5247 in k5244 in k5241 in k5238 */
static void C_ccall f_8945(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[4],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_8945,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_8948,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 363  pattern-value-set!");
f_8349(t2,((C_word*)t0)[2],((C_word*)((C_word*)t0)[3])[1]);}

/* k8946 in k8943 in k8940 in k8937 in k8934 in k8931 in k8925 in k8919 in k8916 in k8913 in next-1 in k7607 in k7604 in k5838 in k5545 in k5542 in k5538 in k5247 in k5244 in k5241 in k5238 */
static void C_ccall f_8948(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
t2=((C_word*)t0)[3];
((C_proc2)(void*)(*((C_word*)t2+1)))(2,t2,((C_word*)((C_word*)t0)[2])[1]);}

/* next in k7607 in k7604 in k5838 in k5545 in k5542 in k5538 in k5247 in k5244 in k5241 in k5238 */
static void C_ccall f_8785(C_word c,C_word t0,C_word t1,C_word t2,...){
C_word tmp;
C_word t3;
va_list v;
C_word *a,c2=c;
C_save_rest(t2,c2,3);
if(c<3) C_bad_min_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_demand(c*C_SIZEOF_PAIR+16)){
C_save_and_reclaim((void*)tr3rv,(void*)f_8785r,3,t0,t1,t2);}
else{
a=C_alloc((c-3)*3);
t3=C_restore_rest_vector(a,C_rest_count(0));
f_8785r(t0,t1,t2,t3);}}

static void C_ccall f_8785r(C_word t0,C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word *a=C_alloc(16);
t4=(C_word)C_vemptyp(t3);
t5=(C_truep(t4)?C_SCHEME_FALSE:(C_word)C_i_vector_ref(t3,C_fix(0)));
if(C_truep(t5)){
if(C_truep((C_word)C_i_numberp(t5))){
t6=(C_word)C_a_i_list(&a,1,C_SCHEME_FALSE);
t7=C_SCHEME_UNDEFINED;
t8=(*a=C_VECTOR_TYPE|1,a[1]=t7,tmp=(C_word)a,a+=2,tmp);
t9=C_set_block_item(t8,0,(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_8806,a[2]=t2,a[3]=t8,a[4]=t6,a[5]=t5,a[6]=((C_word)li112),tmp=(C_word)a,a+=7,tmp));
t10=((C_word*)t8)[1];
f_8806(t10,t1,C_fix(0),t6);}
else{
t6=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_8844,a[2]=t1,a[3]=t2,tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 363  pattern?");
f_8253(t6,t2);}}
else{
C_trace("ChickenBridge.scm: 363  next-1");
f_8908(t1,t2);}}

/* k8842 in next in k7607 in k7604 in k5838 in k5545 in k5542 in k5538 in k5247 in k5244 in k5241 in k5238 */
static void C_ccall f_8844(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[11],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_8844,2,t0,t1);}
if(C_truep(t1)){
t2=(C_word)C_a_i_list(&a,1,C_SCHEME_FALSE);
t3=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_8854,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=t2,tmp=(C_word)a,a+=5,tmp);
C_trace("ChickenBridge.scm: 363  next-1");
f_8908(t3,((C_word*)t0)[3]);}
else{
t2=((C_word*)t0)[2];
((C_proc2)(void*)(*((C_word*)t2+1)))(2,t2,(C_word)C_a_i_list(&a,1,((C_word*)t0)[3]));}}

/* k8852 in k8842 in next in k7607 in k7604 in k5838 in k5545 in k5542 in k5538 in k5247 in k5244 in k5241 in k5238 */
static void C_ccall f_8854(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[8],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_8854,2,t0,t1);}
t2=C_SCHEME_UNDEFINED;
t3=(*a=C_VECTOR_TYPE|1,a[1]=t2,tmp=(C_word)a,a+=2,tmp);
t4=C_set_block_item(t3,0,(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_8856,a[2]=((C_word*)t0)[3],a[3]=t3,a[4]=((C_word*)t0)[4],a[5]=((C_word)li113),tmp=(C_word)a,a+=6,tmp));
t5=((C_word*)t3)[1];
f_8856(t5,((C_word*)t0)[2],t1,((C_word*)t0)[4],C_SCHEME_FALSE);}

/* do848 in k8852 in k8842 in next in k7607 in k7604 in k5838 in k5545 in k5542 in k5538 in k5247 in k5244 in k5241 in k5238 */
static void C_fcall f_8856(C_word t0,C_word t1,C_word t2,C_word t3,C_word t4){
C_word tmp;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word ab[20],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_8856,NULL,5,t0,t1,t2,t3,t4);}
t5=(*a=C_VECTOR_TYPE|1,a[1]=t2,tmp=(C_word)a,a+=2,tmp);
t6=(*a=C_VECTOR_TYPE|1,a[1]=t4,tmp=(C_word)a,a+=2,tmp);
t7=(C_word)C_eqp(((C_word*)t5)[1],lf[180]);
t8=(C_truep(t7)?t7:((C_word*)t6)[1]);
if(C_truep(t8)){
t9=t1;
((C_proc2)(void*)(*((C_word*)t9+1)))(2,t9,(C_word)C_i_cdr(((C_word*)t0)[4]));}
else{
t9=(C_word)C_a_i_list(&a,1,((C_word*)t5)[1]);
t10=(C_word)C_i_set_cdr(t3,t9);
t11=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_8875,a[2]=t6,a[3]=t5,a[4]=t1,a[5]=((C_word*)t0)[3],a[6]=t3,tmp=(C_word)a,a+=7,tmp);
t12=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_8885,a[2]=((C_word*)t0)[2],a[3]=t5,a[4]=t11,a[5]=t6,tmp=(C_word)a,a+=6,tmp);
C_trace("ChickenBridge.scm: 363  eop?");
t13=C_retrieve(lf[177]);
((C_proc3)C_retrieve_proc(t13))(3,t13,t12,((C_word*)t0)[2]);}}

/* k8883 in do848 in k8852 in k8842 in next in k7607 in k7604 in k5838 in k5545 in k5542 in k5538 in k5247 in k5244 in k5241 in k5238 */
static void C_ccall f_8885(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[4],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_8885,2,t0,t1);}
if(C_truep(t1)){
t2=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t3=((C_word*)t0)[4];
f_8875(t3,t2);}
else{
t2=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_8890,a[2]=((C_word*)t0)[4],a[3]=((C_word*)t0)[3],tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 363  next-1");
f_8908(t2,((C_word*)t0)[2]);}}

/* k8888 in k8883 in do848 in k8852 in k8842 in next in k7607 in k7604 in k5838 in k5545 in k5542 in k5538 in k5247 in k5244 in k5241 in k5238 */
static void C_ccall f_8890(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[3])+1,t1);
t3=((C_word*)t0)[2];
f_8875(t3,t2);}

/* k8873 in do848 in k8852 in k8842 in next in k7607 in k7604 in k5838 in k5545 in k5542 in k5538 in k5247 in k5244 in k5241 in k5238 */
static void C_fcall f_8875(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word *a;
t2=(C_word)C_i_cdr(((C_word*)t0)[6]);
t3=((C_word*)((C_word*)t0)[5])[1];
f_8856(t3,((C_word*)t0)[4],((C_word*)((C_word*)t0)[3])[1],t2,((C_word*)((C_word*)t0)[2])[1]);}

/* do841 in next in k7607 in k7604 in k5838 in k5545 in k5542 in k5538 in k5247 in k5244 in k5241 in k5238 */
static void C_fcall f_8806(C_word t0,C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word ab[6],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_8806,NULL,4,t0,t1,t2,t3);}
if(C_truep((C_word)C_i_greater_or_equalp(t2,((C_word*)t0)[5]))){
t4=t1;
((C_proc2)(void*)(*((C_word*)t4+1)))(2,t4,(C_word)C_i_cdr(((C_word*)t0)[4]));}
else{
t4=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_8838,a[2]=t1,a[3]=((C_word*)t0)[3],a[4]=t2,a[5]=t3,tmp=(C_word)a,a+=6,tmp);
C_trace("ChickenBridge.scm: 363  next-1");
f_8908(t4,((C_word*)t0)[2]);}}

/* k8836 in do841 in next in k7607 in k7604 in k5838 in k5545 in k5542 in k5538 in k5247 in k5244 in k5241 in k5238 */
static void C_ccall f_8838(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_8838,2,t0,t1);}
t2=(C_word)C_a_i_list(&a,1,t1);
t3=(C_word)C_i_set_cdr(((C_word*)t0)[5],t2);
t4=(C_word)C_a_i_plus(&a,2,C_fix(1),((C_word*)t0)[4]);
t5=(C_word)C_i_cdr(((C_word*)t0)[5]);
t6=((C_word*)((C_word*)t0)[3])[1];
f_8806(t6,((C_word*)t0)[2],t4,t5);}

/* eod? in k7607 in k7604 in k5838 in k5545 in k5542 in k5538 in k5247 in k5244 in k5241 in k5238 */
static void C_ccall f_8766(C_word c,C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word ab[4],*a=ab;
if(c!=3) C_bad_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr3,(void*)f_8766,3,t0,t1,t2);}
t3=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_8773,a[2]=t2,a[3]=t1,tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 363  pattern?");
f_8253(t3,t2);}

/* k8771 in eod? in k7607 in k7604 in k5838 in k5545 in k5542 in k5538 in k5247 in k5244 in k5241 in k5238 */
static void C_ccall f_8773(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[3],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_8773,2,t0,t1);}
if(C_truep(t1)){
t2=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_8780,a[2]=((C_word*)t0)[3],tmp=(C_word)a,a+=3,tmp);
C_trace("ChickenBridge.scm: 363  pattern-value");
t3=C_retrieve2(lf[160],"pattern-value");
((C_proc3)C_retrieve_proc(t3))(3,t3,t2,((C_word*)t0)[2]);}
else{
t2=((C_word*)t0)[3];
((C_proc2)(void*)(*((C_word*)t2+1)))(2,t2,(C_word)C_eqp(((C_word*)t0)[2],lf[180]));}}

/* k8778 in k8771 in eod? in k7607 in k7604 in k5838 in k5545 in k5542 in k5538 in k5247 in k5244 in k5241 in k5238 */
static void C_ccall f_8780(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 363  eod?");
t2=C_retrieve(lf[179]);
((C_proc3)C_retrieve_proc(t2))(3,t2,((C_word*)t0)[2],t1);}

/* eop? in k7607 in k7604 in k5838 in k5545 in k5542 in k5538 in k5247 in k5244 in k5241 in k5238 */
static void C_ccall f_8747(C_word c,C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word ab[4],*a=ab;
if(c!=3) C_bad_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr3,(void*)f_8747,3,t0,t1,t2);}
t3=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_8754,a[2]=t2,a[3]=t1,tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 363  pattern?");
f_8253(t3,t2);}

/* k8752 in eop? in k7607 in k7604 in k5838 in k5545 in k5542 in k5538 in k5247 in k5244 in k5241 in k5238 */
static void C_ccall f_8754(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[3],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_8754,2,t0,t1);}
if(C_truep(t1)){
t2=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_8761,a[2]=((C_word*)t0)[3],tmp=(C_word)a,a+=3,tmp);
C_trace("ChickenBridge.scm: 363  pattern-state");
f_8376(t2,((C_word*)t0)[2]);}
else{
t2=((C_word*)t0)[3];
((C_proc2)(void*)(*((C_word*)t2+1)))(2,t2,(C_word)C_eqp(((C_word*)t0)[2],lf[178]));}}

/* k8759 in k8752 in eop? in k7607 in k7604 in k5838 in k5545 in k5542 in k5538 in k5247 in k5244 in k5241 in k5238 */
static void C_ccall f_8761(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 363  eop?");
t2=C_retrieve(lf[177]);
((C_proc3)C_retrieve_proc(t2))(3,t2,((C_word*)t0)[2],t1);}

/* initialize-pattern in k7607 in k7604 in k5838 in k5545 in k5542 in k5538 in k5247 in k5244 in k5241 in k5238 */
static void C_fcall f_8567(C_word t1,C_word t2,C_word t3,C_word t4,C_word t5,C_word t6,C_word t7,C_word t8,C_word t9,C_word t10){
C_word tmp;
C_word t11;
C_word t12;
C_word t13;
C_word ab[13],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_8567,NULL,10,t1,t2,t3,t4,t5,t6,t7,t8,t9,t10);}
t11=(*a=C_VECTOR_TYPE|1,a[1]=t6,tmp=(C_word)a,a+=2,tmp);
t12=(*a=C_CLOSURE_TYPE|10,a[1]=(C_word)f_8571,a[2]=t7,a[3]=t10,a[4]=t9,a[5]=t5,a[6]=t11,a[7]=t1,a[8]=t8,a[9]=t4,a[10]=t2,tmp=(C_word)a,a+=11,tmp);
C_trace("ChickenBridge.scm: 363  pattern-data-set!");
f_8277(t12,t2,t3);}

/* k8569 in initialize-pattern in k7607 in k7604 in k5838 in k5545 in k5542 in k5538 in k5247 in k5244 in k5241 in k5238 */
static void C_ccall f_8571(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[10],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_8571,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|9,a[1]=(C_word)f_8574,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],a[7]=((C_word*)t0)[8],a[8]=((C_word*)t0)[9],a[9]=((C_word*)t0)[10],tmp=(C_word)a,a+=10,tmp);
t3=((C_word*)t0)[10];
t4=((C_word*)t0)[2];
t5=(C_word)C_i_check_structure(t3,lf[151]);
C_trace("ChickenBridge.scm: 363  ##sys#block-set!");
t6=*((C_word*)lf[143]+1);
((C_proc5)(void*)(*((C_word*)t6+1)))(5,t6,t2,t3,C_fix(3),t4);}

/* k8572 in k8569 in initialize-pattern in k7607 in k7604 in k5838 in k5545 in k5542 in k5538 in k5247 in k5244 in k5241 in k5238 */
static void C_ccall f_8574(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_8574,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|8,a[1]=(C_word)f_8577,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],a[7]=((C_word*)t0)[8],a[8]=((C_word*)t0)[9],tmp=(C_word)a,a+=9,tmp);
t3=((C_word*)t0)[9];
t4=((C_word*)t0)[2];
t5=(C_word)C_i_check_structure(t3,lf[151]);
C_trace("ChickenBridge.scm: 363  ##sys#block-set!");
t6=*((C_word*)lf[143]+1);
((C_proc5)(void*)(*((C_word*)t6+1)))(5,t6,t2,t3,C_fix(13),t4);}

/* k8575 in k8572 in k8569 in initialize-pattern in k7607 in k7604 in k5838 in k5545 in k5542 in k5538 in k5247 in k5244 in k5241 in k5238 */
static void C_ccall f_8577(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[8],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_8577,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_8580,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],a[7]=((C_word*)t0)[8],tmp=(C_word)a,a+=8,tmp);
t3=((C_word*)t0)[8];
t4=((C_word*)t0)[2];
t5=(C_word)C_i_check_structure(t3,lf[151]);
C_trace("ChickenBridge.scm: 363  ##sys#block-set!");
t6=*((C_word*)lf[143]+1);
((C_proc5)(void*)(*((C_word*)t6+1)))(5,t6,t2,t3,C_fix(12),t4);}

/* k8578 in k8575 in k8572 in k8569 in initialize-pattern in k7607 in k7604 in k5838 in k5545 in k5542 in k5538 in k5247 in k5244 in k5241 in k5238 */
static void C_ccall f_8580(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[15],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_8580,2,t0,t1);}
t2=C_SCHEME_TRUE;
t3=(*a=C_VECTOR_TYPE|1,a[1]=t2,tmp=(C_word)a,a+=2,tmp);
t4=(*a=C_CLOSURE_TYPE|8,a[1]=(C_word)f_8583,a[2]=t3,a[3]=((C_word*)t0)[2],a[4]=((C_word*)t0)[3],a[5]=((C_word*)t0)[4],a[6]=((C_word*)t0)[5],a[7]=((C_word*)t0)[6],a[8]=((C_word*)t0)[7],tmp=(C_word)a,a+=9,tmp);
t5=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_8737,a[2]=t3,a[3]=((C_word)li108),tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 363  map-pattern-data");
f_9218(t4,t5,((C_word*)t0)[7]);}

/* a8736 in k8578 in k8575 in k8572 in k8569 in initialize-pattern in k7607 in k7604 in k5838 in k5545 in k5542 in k5538 in k5247 in k5244 in k5241 in k5238 */
static void C_ccall f_8737(C_word c,C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word ab[4],*a=ab;
if(c!=3) C_bad_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr3,(void*)f_8737,3,t0,t1,t2);}
t3=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_8744,a[2]=t1,a[3]=((C_word*)t0)[2],tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 363  pattern?");
f_8253(t3,t2);}

/* k8742 in a8736 in k8578 in k8575 in k8572 in k8569 in initialize-pattern in k7607 in k7604 in k5838 in k5545 in k5542 in k5538 in k5247 in k5244 in k5241 in k5238 */
static void C_ccall f_8744(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word *a;
if(C_truep(t1)){
t2=C_set_block_item(((C_word*)t0)[3],0,C_SCHEME_FALSE);
t3=((C_word*)t0)[2];
((C_proc2)(void*)(*((C_word*)t3+1)))(2,t3,t2);}
else{
t2=((C_word*)t0)[2];
((C_proc2)(void*)(*((C_word*)t2+1)))(2,t2,C_SCHEME_UNDEFINED);}}

/* k8581 in k8578 in k8575 in k8572 in k8569 in initialize-pattern in k7607 in k7604 in k5838 in k5545 in k5542 in k5538 in k5247 in k5244 in k5241 in k5238 */
static void C_ccall f_8583(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[12],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_8583,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_8586,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],a[7]=((C_word*)t0)[8],tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)((C_word*)t0)[2])[1])){
t3=(C_word)C_a_i_bitwise_ior(&a,2,((C_word*)((C_word*)t0)[4])[1],C_fix(1));
t4=C_mutate(((C_word *)((C_word*)t0)[4])+1,t3);
t5=t2;
f_8586(t5,t4);}
else{
t3=t2;
f_8586(t3,C_SCHEME_UNDEFINED);}}

/* k8584 in k8581 in k8578 in k8575 in k8572 in k8569 in initialize-pattern in k7607 in k7604 in k5838 in k5545 in k5542 in k5538 in k5247 in k5244 in k5241 in k5238 */
static void C_fcall f_8586(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word ab[16],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_8586,NULL,2,t0,t1);}
t2=((C_word*)t0)[7];
t3=(C_word)C_i_check_structure(t2,lf[151]);
t4=(C_word)C_i_block_ref(t2,C_fix(10));
t5=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_8592,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],a[7]=((C_word*)t0)[7],tmp=(C_word)a,a+=8,tmp);
t6=(C_word)C_eqp(t4,lf[167]);
if(C_truep(t6)){
t7=(C_word)C_a_i_bitwise_ior(&a,2,((C_word*)((C_word*)t0)[3])[1],C_fix(8));
t8=C_mutate(((C_word *)((C_word*)t0)[3])+1,t7);
t9=t5;
f_8592(2,t9,t8);}
else{
t7=(C_word)C_eqp(t4,lf[174]);
if(C_truep(t7)){
t8=(C_word)C_a_i_bitwise_ior(&a,2,((C_word*)((C_word*)t0)[3])[1],C_fix(16));
t9=C_mutate(((C_word *)((C_word*)t0)[3])+1,t8);
t10=t5;
f_8592(2,t10,t9);}
else{
C_trace("ChickenBridge.scm: 363  error");
t8=*((C_word*)lf[6]+1);
((C_proc4)C_retrieve_proc(t8))(4,t8,t5,lf[175],t4);}}}

/* k8590 in k8584 in k8581 in k8578 in k8575 in k8572 in k8569 in initialize-pattern in k7607 in k7604 in k5838 in k5545 in k5542 in k5538 in k5247 in k5244 in k5241 in k5238 */
static void C_ccall f_8592(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word ab[16],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_8592,2,t0,t1);}
t2=((C_word*)t0)[7];
t3=(C_word)C_i_check_structure(t2,lf[151]);
t4=(C_word)C_i_block_ref(t2,C_fix(11));
t5=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_8598,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[7],a[5]=((C_word*)t0)[4],a[6]=((C_word*)t0)[5],a[7]=((C_word*)t0)[6],tmp=(C_word)a,a+=8,tmp);
t6=(C_word)C_eqp(t4,lf[168]);
if(C_truep(t6)){
t7=(C_word)C_a_i_bitwise_ior(&a,2,((C_word*)((C_word*)t0)[3])[1],C_fix(32));
t8=C_mutate(((C_word *)((C_word*)t0)[3])+1,t7);
t9=t5;
f_8598(2,t9,t8);}
else{
t7=(C_word)C_eqp(t4,lf[172]);
if(C_truep(t7)){
t8=(C_word)C_a_i_bitwise_ior(&a,2,((C_word*)((C_word*)t0)[3])[1],C_fix(64));
t9=C_mutate(((C_word *)((C_word*)t0)[3])+1,t8);
t10=t5;
f_8598(2,t10,t9);}
else{
C_trace("ChickenBridge.scm: 363  error");
t8=*((C_word*)lf[6]+1);
((C_proc4)C_retrieve_proc(t8))(4,t8,t5,lf[173],t4);}}}

/* k8596 in k8590 in k8584 in k8581 in k8578 in k8575 in k8572 in k8569 in initialize-pattern in k7607 in k7604 in k5838 in k5545 in k5542 in k5538 in k5247 in k5244 in k5241 in k5238 */
static void C_ccall f_8598(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[12],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_8598,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_8601,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],a[7]=((C_word*)t0)[7],tmp=(C_word)a,a+=8,tmp);
t3=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_8661,a[2]=t2,a[3]=((C_word*)t0)[3],tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 363  bitwise-test");
f_6215(t3,((C_word*)((C_word*)t0)[3])[1],C_fix(16));}

/* k8659 in k8596 in k8590 in k8584 in k8581 in k8578 in k8575 in k8572 in k8569 in initialize-pattern in k7607 in k7604 in k5838 in k5545 in k5542 in k5538 in k5247 in k5244 in k5241 in k5238 */
static void C_ccall f_8661(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[8],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_8661,2,t0,t1);}
if(C_truep(t1)){
t2=(C_word)C_a_i_bitwise_and(&a,2,((C_word*)((C_word*)t0)[3])[1],lf[170]);
t3=C_mutate(((C_word *)((C_word*)t0)[3])+1,t2);
t4=((C_word*)t0)[2];
f_8601(t4,t3);}
else{
t2=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_8675,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 363  bitwise-test");
f_6215(t2,((C_word*)((C_word*)t0)[3])[1],C_fix(1));}}

/* k8673 in k8659 in k8596 in k8590 in k8584 in k8581 in k8578 in k8575 in k8572 in k8569 in initialize-pattern in k7607 in k7604 in k5838 in k5545 in k5542 in k5538 in k5247 in k5244 in k5241 in k5238 */
static void C_ccall f_8675(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word ab[12],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_8675,2,t0,t1);}
if(C_truep(t1)){
t2=(C_word)C_a_i_bitwise_and(&a,2,((C_word*)((C_word*)t0)[3])[1],lf[171]);
t3=(C_word)C_a_i_bitwise_ior(&a,2,t2,C_fix(16));
t4=C_mutate(((C_word *)((C_word*)t0)[3])+1,t3);
t5=((C_word*)t0)[2];
f_8601(t5,t4);}
else{
t2=(C_word)C_a_i_bitwise_ior(&a,2,((C_word*)((C_word*)t0)[3])[1],C_fix(8));
t3=C_mutate(((C_word *)((C_word*)t0)[3])+1,t2);
t4=((C_word*)t0)[2];
f_8601(t4,t3);}}

/* k8599 in k8596 in k8590 in k8584 in k8581 in k8578 in k8575 in k8572 in k8569 in initialize-pattern in k7607 in k7604 in k5838 in k5545 in k5542 in k5538 in k5247 in k5244 in k5241 in k5238 */
static void C_fcall f_8601(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_8601,NULL,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_8604,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_numberp(((C_word*)t0)[2]);
t4=(C_truep(t3)?(C_word)C_i_greaterp(((C_word*)t0)[2],C_fix(0)):C_SCHEME_FALSE);
t5=(C_truep(t4)?((C_word*)t0)[2]:C_fix(1073741823));
t6=((C_word*)t0)[4];
t7=(C_word)C_i_check_structure(t6,lf[151]);
C_trace("ChickenBridge.scm: 363  ##sys#block-set!");
t8=*((C_word*)lf[143]+1);
((C_proc5)(void*)(*((C_word*)t8+1)))(5,t8,t2,t6,C_fix(8),t5);}

/* k8602 in k8599 in k8596 in k8590 in k8584 in k8581 in k8578 in k8575 in k8572 in k8569 in initialize-pattern in k7607 in k7604 in k5838 in k5545 in k5542 in k5538 in k5247 in k5244 in k5241 in k5238 */
static void C_ccall f_8604(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word ab[11],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_8604,2,t0,t1);}
t2=((C_word*)t0)[6];
t3=(C_truep(t2)?t2:((C_word*)t0)[5]);
t4=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_8610,a[2]=((C_word*)t0)[5],a[3]=t3,a[4]=((C_word*)t0)[2],a[5]=((C_word*)t0)[3],a[6]=((C_word*)t0)[4],tmp=(C_word)a,a+=7,tmp);
t5=((C_word*)t0)[6];
if(C_truep(t5)){
t6=t4;
f_8610(t6,C_SCHEME_UNDEFINED);}
else{
t6=(C_word)C_a_i_bitwise_ior(&a,2,((C_word*)((C_word*)t0)[2])[1],C_fix(2));
t7=C_mutate(((C_word *)((C_word*)t0)[2])+1,t6);
t8=t4;
f_8610(t8,t7);}}

/* k8608 in k8602 in k8599 in k8596 in k8590 in k8584 in k8581 in k8578 in k8575 in k8572 in k8569 in initialize-pattern in k7607 in k7604 in k5838 in k5545 in k5542 in k5538 in k5247 in k5244 in k5241 in k5238 */
static void C_fcall f_8610(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_8610,NULL,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_8613,a[2]=((C_word*)t0)[4],a[3]=((C_word*)t0)[5],a[4]=((C_word*)t0)[6],tmp=(C_word)a,a+=5,tmp);
t3=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_8623,a[2]=t2,a[3]=((C_word*)t0)[5],tmp=(C_word)a,a+=4,tmp);
t4=(C_word)C_i_numberp(((C_word*)t0)[3]);
t5=(C_truep(t4)?t4:(C_word)C_eqp(((C_word*)t0)[3],C_SCHEME_TRUE));
if(C_truep(t5)){
C_trace("ChickenBridge.scm: 363  make-period");
f_8097(t3,C_fix(0),((C_word*)t0)[3],C_SCHEME_FALSE,((C_word*)t0)[2],C_fix(0),C_fix(0));}
else{
C_trace("ChickenBridge.scm: 363  make-period");
f_8097(t3,C_fix(0),C_SCHEME_FALSE,((C_word*)t0)[3],((C_word*)t0)[2],C_fix(0),C_fix(0));}}

/* k8621 in k8608 in k8602 in k8599 in k8596 in k8590 in k8584 in k8581 in k8578 in k8575 in k8572 in k8569 in initialize-pattern in k7607 in k7604 in k5838 in k5545 in k5542 in k5538 in k5247 in k5244 in k5241 in k5238 */
static void C_ccall f_8623(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word *a;
t2=((C_word*)t0)[3];
t3=(C_word)C_i_check_structure(t2,lf[151]);
C_trace("ChickenBridge.scm: 363  ##sys#block-set!");
t4=*((C_word*)lf[143]+1);
((C_proc5)(void*)(*((C_word*)t4+1)))(5,t4,((C_word*)t0)[2],t2,C_fix(5),t1);}

/* k8611 in k8608 in k8602 in k8599 in k8596 in k8590 in k8584 in k8581 in k8578 in k8575 in k8572 in k8569 in initialize-pattern in k7607 in k7604 in k5838 in k5545 in k5542 in k5538 in k5247 in k5244 in k5241 in k5238 */
static void C_ccall f_8613(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[3],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_8613,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_8616,a[2]=((C_word*)t0)[4],tmp=(C_word)a,a+=3,tmp);
t3=((C_word*)t0)[3];
t4=((C_word*)((C_word*)t0)[2])[1];
t5=(C_word)C_i_check_structure(t3,lf[151]);
C_trace("ChickenBridge.scm: 363  ##sys#block-set!");
t6=*((C_word*)lf[143]+1);
((C_proc5)(void*)(*((C_word*)t6+1)))(5,t6,t2,t3,C_fix(1),t4);}

/* k8614 in k8611 in k8608 in k8602 in k8599 in k8596 in k8590 in k8584 in k8581 in k8578 in k8575 in k8572 in k8569 in initialize-pattern in k7607 in k7604 in k5838 in k5545 in k5542 in k5538 in k5247 in k5244 in k5241 in k5238 */
static void C_ccall f_8616(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 363  values");
C_values(2,0,((C_word*)t0)[2]);}

/* %alloc-pattern in k7607 in k7604 in k5838 in k5545 in k5542 in k5538 in k5247 in k5244 in k5241 in k5238 */
static void C_fcall f_8557(C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word ab[16],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_8557,NULL,1,t1);}
t2=lf[166];
t3=lf[166];
t4=lf[166];
t5=lf[167];
t6=lf[168];
t7=t1;
((C_proc2)(void*)(*((C_word*)t7+1)))(2,t7,(C_word)C_a_i_record(&a,15,lf[151],C_fix(0),C_SCHEME_END_OF_LIST,C_SCHEME_FALSE,t2,C_SCHEME_FALSE,t3,t4,C_fix(1073741823),C_SCHEME_FALSE,t5,t6,C_SCHEME_FALSE,C_SCHEME_FALSE,C_SCHEME_FALSE));}

/* pattern-cache in k7607 in k7604 in k5838 in k5545 in k5542 in k5538 in k5247 in k5244 in k5241 in k5238 */
static void C_fcall f_8502(C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word *a;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_8502,NULL,2,t1,t2);}
t3=(C_word)C_i_check_structure(t2,lf[151]);
t4=t1;
((C_proc2)(void*)(*((C_word*)t4+1)))(2,t4,(C_word)C_i_block_ref(t2,C_fix(14)));}

/* pattern-cache-set! in k7607 in k7604 in k5838 in k5545 in k5542 in k5538 in k5247 in k5244 in k5241 in k5238 */
static void C_fcall f_8493(C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word *a;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_8493,NULL,3,t1,t2,t3);}
t4=(C_word)C_i_check_structure(t2,lf[151]);
C_trace("ChickenBridge.scm: 363  ##sys#block-set!");
t5=*((C_word*)lf[143]+1);
((C_proc5)(void*)(*((C_word*)t5+1)))(5,t5,t1,t2,C_fix(14),t3);}

/* pattern-state in k7607 in k7604 in k5838 in k5545 in k5542 in k5538 in k5247 in k5244 in k5241 in k5238 */
static void C_fcall f_8376(C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word *a;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_8376,NULL,2,t1,t2);}
t3=(C_word)C_i_check_structure(t2,lf[151]);
t4=t1;
((C_proc2)(void*)(*((C_word*)t4+1)))(2,t4,(C_word)C_i_block_ref(t2,C_fix(7)));}

/* pattern-state-set! in k7607 in k7604 in k5838 in k5545 in k5542 in k5538 in k5247 in k5244 in k5241 in k5238 */
static void C_fcall f_8367(C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word *a;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_8367,NULL,3,t1,t2,t3);}
t4=(C_word)C_i_check_structure(t2,lf[151]);
C_trace("ChickenBridge.scm: 363  ##sys#block-set!");
t5=*((C_word*)lf[143]+1);
((C_proc5)(void*)(*((C_word*)t5+1)))(5,t5,t1,t2,C_fix(7),t3);}

/* f_8358 in k7607 in k7604 in k5838 in k5545 in k5542 in k5538 in k5247 in k5244 in k5241 in k5238 */
static void C_ccall f_8358(C_word c,C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word *a;
if(c!=3) C_bad_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr3,(void*)f_8358,3,t0,t1,t2);}
t3=(C_word)C_i_check_structure(t2,lf[151]);
t4=t1;
((C_proc2)(void*)(*((C_word*)t4+1)))(2,t4,(C_word)C_i_block_ref(t2,C_fix(6)));}

/* pattern-value-set! in k7607 in k7604 in k5838 in k5545 in k5542 in k5538 in k5247 in k5244 in k5241 in k5238 */
static void C_fcall f_8349(C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word *a;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_8349,NULL,3,t1,t2,t3);}
t4=(C_word)C_i_check_structure(t2,lf[151]);
C_trace("ChickenBridge.scm: 363  ##sys#block-set!");
t5=*((C_word*)lf[143]+1);
((C_proc5)(void*)(*((C_word*)t5+1)))(5,t5,t1,t2,C_fix(6),t3);}

/* pattern-period in k7607 in k7604 in k5838 in k5545 in k5542 in k5538 in k5247 in k5244 in k5241 in k5238 */
static void C_fcall f_8340(C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word *a;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_8340,NULL,2,t1,t2);}
t3=(C_word)C_i_check_structure(t2,lf[151]);
t4=t1;
((C_proc2)(void*)(*((C_word*)t4+1)))(2,t4,(C_word)C_i_block_ref(t2,C_fix(5)));}

/* pattern-datum in k7607 in k7604 in k5838 in k5545 in k5542 in k5538 in k5247 in k5244 in k5241 in k5238 */
static void C_fcall f_8322(C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word *a;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_8322,NULL,2,t1,t2);}
t3=(C_word)C_i_check_structure(t2,lf[151]);
t4=t1;
((C_proc2)(void*)(*((C_word*)t4+1)))(2,t4,(C_word)C_i_block_ref(t2,C_fix(4)));}

/* pattern-datum-set! in k7607 in k7604 in k5838 in k5545 in k5542 in k5538 in k5247 in k5244 in k5241 in k5238 */
static void C_fcall f_8313(C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word *a;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_8313,NULL,3,t1,t2,t3);}
t4=(C_word)C_i_check_structure(t2,lf[151]);
C_trace("ChickenBridge.scm: 363  ##sys#block-set!");
t5=*((C_word*)lf[143]+1);
((C_proc5)(void*)(*((C_word*)t5+1)))(5,t5,t1,t2,C_fix(4),t3);}

/* pattern-length in k7607 in k7604 in k5838 in k5545 in k5542 in k5538 in k5247 in k5244 in k5241 in k5238 */
static void C_fcall f_8304(C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word *a;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_8304,NULL,2,t1,t2);}
t3=(C_word)C_i_check_structure(t2,lf[151]);
t4=t1;
((C_proc2)(void*)(*((C_word*)t4+1)))(2,t4,(C_word)C_i_block_ref(t2,C_fix(3)));}

/* pattern-data in k7607 in k7604 in k5838 in k5545 in k5542 in k5538 in k5247 in k5244 in k5241 in k5238 */
static void C_fcall f_8286(C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word *a;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_8286,NULL,2,t1,t2);}
t3=(C_word)C_i_check_structure(t2,lf[151]);
t4=t1;
((C_proc2)(void*)(*((C_word*)t4+1)))(2,t4,(C_word)C_i_block_ref(t2,C_fix(2)));}

/* pattern-data-set! in k7607 in k7604 in k5838 in k5545 in k5542 in k5538 in k5247 in k5244 in k5241 in k5238 */
static void C_fcall f_8277(C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word *a;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_8277,NULL,3,t1,t2,t3);}
t4=(C_word)C_i_check_structure(t2,lf[151]);
C_trace("ChickenBridge.scm: 363  ##sys#block-set!");
t5=*((C_word*)lf[143]+1);
((C_proc5)(void*)(*((C_word*)t5+1)))(5,t5,t1,t2,C_fix(2),t3);}

/* pattern-flags in k7607 in k7604 in k5838 in k5545 in k5542 in k5538 in k5247 in k5244 in k5241 in k5238 */
static void C_fcall f_8268(C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word *a;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_8268,NULL,2,t1,t2);}
t3=(C_word)C_i_check_structure(t2,lf[151]);
t4=t1;
((C_proc2)(void*)(*((C_word*)t4+1)))(2,t4,(C_word)C_i_block_ref(t2,C_fix(1)));}

/* pattern? in k7607 in k7604 in k5838 in k5545 in k5542 in k5538 in k5247 in k5244 in k5241 in k5238 */
static void C_fcall f_8253(C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word *a;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_8253,NULL,2,t1,t2);}
t3=t1;
((C_proc2)(void*)(*((C_word*)t3+1)))(2,t3,(C_word)C_i_structurep(t2,lf[151]));}

/* period-reps in k7607 in k7604 in k5838 in k5545 in k5542 in k5538 in k5247 in k5244 in k5241 in k5238 */
static void C_fcall f_8208(C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word *a;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_8208,NULL,2,t1,t2);}
t3=(C_word)C_i_check_structure(t2,lf[141]);
t4=t1;
((C_proc2)(void*)(*((C_word*)t4+1)))(2,t4,(C_word)C_i_block_ref(t2,C_fix(6)));}

/* period-omit in k7607 in k7604 in k5838 in k5545 in k5542 in k5538 in k5247 in k5244 in k5241 in k5238 */
static void C_fcall f_8190(C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word *a;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_8190,NULL,2,t1,t2);}
t3=(C_word)C_i_check_structure(t2,lf[141]);
t4=t1;
((C_proc2)(void*)(*((C_word*)t4+1)))(2,t4,(C_word)C_i_block_ref(t2,C_fix(5)));}

/* period-omit-set! in k7607 in k7604 in k5838 in k5545 in k5542 in k5538 in k5247 in k5244 in k5241 in k5238 */
static void C_fcall f_8181(C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word *a;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_8181,NULL,3,t1,t2,t3);}
t4=(C_word)C_i_check_structure(t2,lf[141]);
C_trace("ChickenBridge.scm: 363  ##sys#block-set!");
t5=*((C_word*)lf[143]+1);
((C_proc5)(void*)(*((C_word*)t5+1)))(5,t5,t1,t2,C_fix(5),t3);}

/* period-stream in k7607 in k7604 in k5838 in k5545 in k5542 in k5538 in k5247 in k5244 in k5241 in k5238 */
static void C_fcall f_8154(C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word *a;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_8154,NULL,2,t1,t2);}
t3=(C_word)C_i_check_structure(t2,lf[141]);
t4=t1;
((C_proc2)(void*)(*((C_word*)t4+1)))(2,t4,(C_word)C_i_block_ref(t2,C_fix(3)));}

/* period-length in k7607 in k7604 in k5838 in k5545 in k5542 in k5538 in k5247 in k5244 in k5241 in k5238 */
static void C_fcall f_8136(C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word *a;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_8136,NULL,2,t1,t2);}
t3=(C_word)C_i_check_structure(t2,lf[141]);
t4=t1;
((C_proc2)(void*)(*((C_word*)t4+1)))(2,t4,(C_word)C_i_block_ref(t2,C_fix(2)));}

/* period-count in k7607 in k7604 in k5838 in k5545 in k5542 in k5538 in k5247 in k5244 in k5241 in k5238 */
static void C_fcall f_8118(C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word *a;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_8118,NULL,2,t1,t2);}
t3=(C_word)C_i_check_structure(t2,lf[141]);
t4=t1;
((C_proc2)(void*)(*((C_word*)t4+1)))(2,t4,(C_word)C_i_block_ref(t2,C_fix(1)));}

/* period-count-set! in k7607 in k7604 in k5838 in k5545 in k5542 in k5538 in k5247 in k5244 in k5241 in k5238 */
static void C_fcall f_8109(C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word *a;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_8109,NULL,3,t1,t2,t3);}
t4=(C_word)C_i_check_structure(t2,lf[141]);
C_trace("ChickenBridge.scm: 363  ##sys#block-set!");
t5=*((C_word*)lf[143]+1);
((C_proc5)(void*)(*((C_word*)t5+1)))(5,t5,t1,t2,C_fix(1),t3);}

/* make-period in k7607 in k7604 in k5838 in k5545 in k5542 in k5538 in k5247 in k5244 in k5241 in k5238 */
static void C_fcall f_8097(C_word t1,C_word t2,C_word t3,C_word t4,C_word t5,C_word t6,C_word t7){
C_word tmp;
C_word t8;
C_word ab[8],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_8097,NULL,7,t1,t2,t3,t4,t5,t6,t7);}
t8=t1;
((C_proc2)(void*)(*((C_word*)t8+1)))(2,t8,(C_word)C_a_i_record(&a,7,lf[141],t2,t3,t4,t5,t6,t7));}

/* hz in k7607 in k7604 in k5838 in k5545 in k5542 in k5538 in k5247 in k5244 in k5241 in k5238 */
static void C_ccall f_7981(C_word c,C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word ab[13],*a=ab;
if(c!=3) C_bad_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr3,(void*)f_7981,3,t0,t1,t2);}
if(C_truep((C_word)C_i_listp(t2))){
t3=(C_word)C_a_i_list(&a,1,C_SCHEME_FALSE);
t4=C_SCHEME_UNDEFINED;
t5=(*a=C_VECTOR_TYPE|1,a[1]=t4,tmp=(C_word)a,a+=2,tmp);
t6=C_set_block_item(t5,0,(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_7996,a[2]=t5,a[3]=t3,a[4]=((C_word)li83),tmp=(C_word)a,a+=5,tmp));
t7=((C_word*)t5)[1];
f_7996(t7,t1,t2,lf[139],C_SCHEME_FALSE,t3);}
else{
if(C_truep((C_word)C_i_numberp(t2))){
C_trace("ChickenBridge.scm: 362  tb:keynum->hertz");
f_6368(t1,t2);}
else{
t3=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_8095,a[2]=t1,tmp=(C_word)a,a+=3,tmp);
C_trace("ChickenBridge.scm: 362  note-aux");
f_7709(t3,t2,C_SCHEME_FALSE,C_SCHEME_TRUE);}}}

/* k8093 in hz in k7607 in k7604 in k5838 in k5545 in k5542 in k5538 in k5247 in k5244 in k5241 in k5238 */
static void C_ccall f_8095(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
t2=((C_word*)t0)[2];
((C_proc2)(void*)(*((C_word*)t2+1)))(2,t2,(C_word)C_i_caddr(t1));}

/* do557 in hz in k7607 in k7604 in k5838 in k5545 in k5542 in k5538 in k5247 in k5244 in k5241 in k5238 */
static void C_fcall f_7996(C_word t0,C_word t1,C_word t2,C_word t3,C_word t4,C_word t5){
C_word tmp;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word t14;
C_word ab[21],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_7996,NULL,6,t0,t1,t2,t3,t4,t5);}
t6=(*a=C_VECTOR_TYPE|1,a[1]=t3,tmp=(C_word)a,a+=2,tmp);
t7=(*a=C_VECTOR_TYPE|1,a[1]=t4,tmp=(C_word)a,a+=2,tmp);
t8=(*a=C_VECTOR_TYPE|1,a[1]=t5,tmp=(C_word)a,a+=2,tmp);
if(C_truep((C_word)C_i_nullp(t2))){
t9=t1;
((C_proc2)(void*)(*((C_word*)t9+1)))(2,t9,(C_word)C_i_cdr(((C_word*)t0)[3]));}
else{
t9=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_8009,a[2]=t7,a[3]=t6,a[4]=t1,a[5]=((C_word*)t0)[2],a[6]=t2,a[7]=t8,tmp=(C_word)a,a+=8,tmp);
t10=(C_word)C_i_car(t2);
t11=(C_word)C_i_numberp(t10);
t12=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_8026,a[2]=t6,a[3]=t2,a[4]=t8,a[5]=t9,a[6]=t7,tmp=(C_word)a,a+=7,tmp);
if(C_truep(t11)){
t13=t12;
f_8026(t13,t11);}
else{
t13=(C_word)C_i_car(t2);
t14=t12;
f_8026(t14,(C_word)C_i_listp(t13));}}}

/* k8024 in do557 in hz in k7607 in k7604 in k5838 in k5545 in k5542 in k5538 in k5247 in k5244 in k5241 in k5238 */
static void C_fcall f_8026(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[11],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_8026,NULL,2,t0,t1);}
if(C_truep(t1)){
t2=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_8030,a[2]=((C_word*)t0)[4],a[3]=((C_word*)t0)[5],a[4]=((C_word*)t0)[6],tmp=(C_word)a,a+=5,tmp);
t3=(C_word)C_i_car(((C_word*)t0)[3]);
C_trace("ChickenBridge.scm: 362  hz");
t4=C_retrieve(lf[138]);
((C_proc3)C_retrieve_proc(t4))(3,t4,t2,t3);}
else{
t2=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_8045,a[2]=((C_word*)t0)[5],a[3]=((C_word*)t0)[2],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[6],tmp=(C_word)a,a+=6,tmp);
t3=(C_word)C_i_car(((C_word*)t0)[3]);
C_trace("ChickenBridge.scm: 362  note-aux");
f_7709(t2,t3,((C_word*)((C_word*)t0)[2])[1],C_SCHEME_TRUE);}}

/* k8043 in k8024 in do557 in hz in k7607 in k7604 in k5838 in k5545 in k5542 in k5538 in k5247 in k5244 in k5241 in k5238 */
static void C_ccall f_8045(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word ab[3],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_8045,2,t0,t1);}
t2=C_mutate(((C_word *)((C_word*)t0)[5])+1,t1);
t3=(C_word)C_i_caddr(((C_word*)((C_word*)t0)[5])[1]);
t4=(C_word)C_a_i_list(&a,1,t3);
t5=(C_word)C_i_set_cdr(((C_word*)((C_word*)t0)[4])[1],t4);
t6=(C_word)C_i_cddddr(((C_word*)((C_word*)t0)[5])[1]);
t7=(C_word)C_i_car(t6);
t8=C_mutate(((C_word *)((C_word*)t0)[3])+1,t7);
t9=((C_word*)t0)[2];
f_8009(t9,t8);}

/* k8028 in k8024 in do557 in hz in k7607 in k7604 in k5838 in k5545 in k5542 in k5538 in k5247 in k5244 in k5241 in k5238 */
static void C_ccall f_8030(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[3],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_8030,2,t0,t1);}
t2=C_mutate(((C_word *)((C_word*)t0)[4])+1,t1);
t3=(C_word)C_a_i_list(&a,1,((C_word*)((C_word*)t0)[4])[1]);
t4=((C_word*)t0)[3];
f_8009(t4,(C_word)C_i_set_cdr(((C_word*)((C_word*)t0)[2])[1],t3));}

/* k8007 in do557 in hz in k7607 in k7604 in k5838 in k5545 in k5542 in k5538 in k5247 in k5244 in k5241 in k5238 */
static void C_fcall f_8009(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word *a;
t2=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[7])[1]);
t3=C_mutate(((C_word *)((C_word*)t0)[7])+1,t2);
t4=(C_word)C_i_cdr(((C_word*)t0)[6]);
t5=((C_word*)((C_word*)t0)[5])[1];
f_7996(t5,((C_word*)t0)[4],t4,((C_word*)((C_word*)t0)[3])[1],((C_word*)((C_word*)t0)[2])[1],((C_word*)((C_word*)t0)[7])[1]);}

/* key in k7607 in k7604 in k5838 in k5545 in k5542 in k5538 in k5247 in k5244 in k5241 in k5238 */
static void C_ccall f_7859(C_word c,C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word ab[19],*a=ab;
if(c!=3) C_bad_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr3,(void*)f_7859,3,t0,t1,t2);}
if(C_truep((C_word)C_i_listp(t2))){
t3=(C_word)C_a_i_list(&a,1,C_SCHEME_FALSE);
t4=C_SCHEME_UNDEFINED;
t5=(*a=C_VECTOR_TYPE|1,a[1]=t4,tmp=(C_word)a,a+=2,tmp);
t6=C_set_block_item(t5,0,(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_7874,a[2]=t5,a[3]=t3,a[4]=((C_word)li81),tmp=(C_word)a,a+=5,tmp));
t7=((C_word*)t5)[1];
f_7874(t7,t1,t2,lf[137],C_SCHEME_FALSE,t3);}
else{
if(C_truep((C_word)C_i_numberp(t2))){
if(C_truep((C_word)C_i_greaterp(t2,C_fix(0)))){
t3=t1;
t4=t2;
t5=(C_word)C_a_i_bytevector(&a,1,C_fix(4));
t6=(C_word)C_i_foreign_flonum_argumentp(t4);
t7=t3;
((C_proc2)(void*)(*((C_word*)t7+1)))(2,t7,(C_word)stub229(t5,t6));}
else{
t3=t1;
((C_proc2)(void*)(*((C_word*)t3+1)))(2,t3,C_fix(-1));}}
else{
t3=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_7979,a[2]=t1,tmp=(C_word)a,a+=3,tmp);
C_trace("ChickenBridge.scm: 362  note-aux");
f_7709(t3,t2,C_SCHEME_FALSE,C_SCHEME_TRUE);}}}

/* k7977 in key in k7607 in k7604 in k5838 in k5545 in k5542 in k5538 in k5247 in k5244 in k5241 in k5238 */
static void C_ccall f_7979(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
t2=((C_word*)t0)[2];
((C_proc2)(void*)(*((C_word*)t2+1)))(2,t2,(C_word)C_i_cadr(t1));}

/* do541 in key in k7607 in k7604 in k5838 in k5545 in k5542 in k5538 in k5247 in k5244 in k5241 in k5238 */
static void C_fcall f_7874(C_word t0,C_word t1,C_word t2,C_word t3,C_word t4,C_word t5){
C_word tmp;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word t14;
C_word ab[21],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_7874,NULL,6,t0,t1,t2,t3,t4,t5);}
t6=(*a=C_VECTOR_TYPE|1,a[1]=t3,tmp=(C_word)a,a+=2,tmp);
t7=(*a=C_VECTOR_TYPE|1,a[1]=t4,tmp=(C_word)a,a+=2,tmp);
t8=(*a=C_VECTOR_TYPE|1,a[1]=t5,tmp=(C_word)a,a+=2,tmp);
if(C_truep((C_word)C_i_nullp(t2))){
t9=t1;
((C_proc2)(void*)(*((C_word*)t9+1)))(2,t9,(C_word)C_i_cdr(((C_word*)t0)[3]));}
else{
t9=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_7887,a[2]=t7,a[3]=t6,a[4]=t1,a[5]=((C_word*)t0)[2],a[6]=t2,a[7]=t8,tmp=(C_word)a,a+=8,tmp);
t10=(C_word)C_i_car(t2);
t11=(C_word)C_i_listp(t10);
t12=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_7904,a[2]=t6,a[3]=t2,a[4]=t8,a[5]=t9,a[6]=t7,tmp=(C_word)a,a+=7,tmp);
if(C_truep(t11)){
t13=t12;
f_7904(t13,t11);}
else{
t13=(C_word)C_i_car(t2);
t14=t12;
f_7904(t14,(C_word)C_i_numberp(t13));}}}

/* k7902 in do541 in key in k7607 in k7604 in k5838 in k5545 in k5542 in k5538 in k5247 in k5244 in k5241 in k5238 */
static void C_fcall f_7904(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[11],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_7904,NULL,2,t0,t1);}
if(C_truep(t1)){
t2=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_7908,a[2]=((C_word*)t0)[4],a[3]=((C_word*)t0)[5],a[4]=((C_word*)t0)[6],tmp=(C_word)a,a+=5,tmp);
t3=(C_word)C_i_car(((C_word*)t0)[3]);
C_trace("ChickenBridge.scm: 362  key");
t4=C_retrieve(lf[136]);
((C_proc3)C_retrieve_proc(t4))(3,t4,t2,t3);}
else{
t2=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_7923,a[2]=((C_word*)t0)[5],a[3]=((C_word*)t0)[2],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[6],tmp=(C_word)a,a+=6,tmp);
t3=(C_word)C_i_car(((C_word*)t0)[3]);
C_trace("ChickenBridge.scm: 362  note-aux");
f_7709(t2,t3,((C_word*)((C_word*)t0)[2])[1],C_SCHEME_TRUE);}}

/* k7921 in k7902 in do541 in key in k7607 in k7604 in k5838 in k5545 in k5542 in k5538 in k5247 in k5244 in k5241 in k5238 */
static void C_ccall f_7923(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word ab[3],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_7923,2,t0,t1);}
t2=C_mutate(((C_word *)((C_word*)t0)[5])+1,t1);
t3=(C_word)C_i_cadr(((C_word*)((C_word*)t0)[5])[1]);
t4=(C_word)C_a_i_list(&a,1,t3);
t5=(C_word)C_i_set_cdr(((C_word*)((C_word*)t0)[4])[1],t4);
t6=(C_word)C_i_cddddr(((C_word*)((C_word*)t0)[5])[1]);
t7=(C_word)C_i_car(t6);
t8=C_mutate(((C_word *)((C_word*)t0)[3])+1,t7);
t9=((C_word*)t0)[2];
f_7887(t9,t8);}

/* k7906 in k7902 in do541 in key in k7607 in k7604 in k5838 in k5545 in k5542 in k5538 in k5247 in k5244 in k5241 in k5238 */
static void C_ccall f_7908(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[3],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_7908,2,t0,t1);}
t2=C_mutate(((C_word *)((C_word*)t0)[4])+1,t1);
t3=(C_word)C_a_i_list(&a,1,((C_word*)((C_word*)t0)[4])[1]);
t4=((C_word*)t0)[3];
f_7887(t4,(C_word)C_i_set_cdr(((C_word*)((C_word*)t0)[2])[1],t3));}

/* k7885 in do541 in key in k7607 in k7604 in k5838 in k5545 in k5542 in k5538 in k5247 in k5244 in k5241 in k5238 */
static void C_fcall f_7887(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word *a;
t2=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[7])[1]);
t3=C_mutate(((C_word *)((C_word*)t0)[7])+1,t2);
t4=(C_word)C_i_cdr(((C_word*)t0)[6]);
t5=((C_word*)((C_word*)t0)[5])[1];
f_7874(t5,((C_word*)t0)[4],t4,((C_word*)((C_word*)t0)[3])[1],((C_word*)((C_word*)t0)[2])[1],((C_word*)((C_word*)t0)[7])[1]);}

/* note in k7607 in k7604 in k5838 in k5545 in k5542 in k5538 in k5247 in k5244 in k5241 in k5238 */
static void C_ccall f_7762(C_word c,C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word ab[13],*a=ab;
if(c!=3) C_bad_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr3,(void*)f_7762,3,t0,t1,t2);}
if(C_truep((C_word)C_i_listp(t2))){
t3=(C_word)C_a_i_list(&a,1,C_SCHEME_FALSE);
t4=C_SCHEME_UNDEFINED;
t5=(*a=C_VECTOR_TYPE|1,a[1]=t4,tmp=(C_word)a,a+=2,tmp);
t6=C_set_block_item(t5,0,(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_7777,a[2]=t5,a[3]=t3,a[4]=((C_word)li79),tmp=(C_word)a,a+=5,tmp));
t7=((C_word*)t5)[1];
f_7777(t7,t1,t2,lf[135],C_SCHEME_FALSE,t3);}
else{
t3=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_7857,a[2]=t1,tmp=(C_word)a,a+=3,tmp);
C_trace("ChickenBridge.scm: 362  note-aux");
f_7709(t3,t2,C_SCHEME_FALSE,C_SCHEME_TRUE);}}

/* k7855 in note in k7607 in k7604 in k5838 in k5545 in k5542 in k5538 in k5247 in k5244 in k5241 in k5238 */
static void C_ccall f_7857(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
t2=((C_word*)t0)[2];
((C_proc2)(void*)(*((C_word*)t2+1)))(2,t2,(C_word)C_i_car(t1));}

/* do527 in note in k7607 in k7604 in k5838 in k5545 in k5542 in k5538 in k5247 in k5244 in k5241 in k5238 */
static void C_fcall f_7777(C_word t0,C_word t1,C_word t2,C_word t3,C_word t4,C_word t5){
C_word tmp;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word t14;
C_word t15;
C_word ab[25],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_7777,NULL,6,t0,t1,t2,t3,t4,t5);}
t6=(*a=C_VECTOR_TYPE|1,a[1]=t3,tmp=(C_word)a,a+=2,tmp);
t7=(*a=C_VECTOR_TYPE|1,a[1]=t4,tmp=(C_word)a,a+=2,tmp);
t8=(*a=C_VECTOR_TYPE|1,a[1]=t5,tmp=(C_word)a,a+=2,tmp);
if(C_truep((C_word)C_i_nullp(t2))){
t9=t1;
((C_proc2)(void*)(*((C_word*)t9+1)))(2,t9,(C_word)C_i_cdr(((C_word*)t0)[3]));}
else{
t9=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_7790,a[2]=t7,a[3]=t6,a[4]=t1,a[5]=((C_word*)t0)[2],a[6]=t2,a[7]=t8,tmp=(C_word)a,a+=8,tmp);
t10=(C_word)C_i_car(t2);
if(C_truep((C_word)C_i_listp(t10))){
t11=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_7808,a[2]=t8,a[3]=t9,a[4]=t7,tmp=(C_word)a,a+=5,tmp);
t12=(C_word)C_i_car(t2);
C_trace("ChickenBridge.scm: 362  note");
t13=C_retrieve(lf[134]);
((C_proc3)C_retrieve_proc(t13))(3,t13,t11,t12);}
else{
t11=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_7823,a[2]=t8,a[3]=t9,a[4]=t6,a[5]=t7,tmp=(C_word)a,a+=6,tmp);
t12=(C_word)C_i_car(t2);
C_trace("ChickenBridge.scm: 362  note-aux");
f_7709(t11,t12,((C_word*)t6)[1],C_SCHEME_TRUE);}}}

/* k7821 in do527 in note in k7607 in k7604 in k5838 in k5545 in k5542 in k5538 in k5247 in k5244 in k5241 in k5238 */
static void C_ccall f_7823(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word ab[3],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_7823,2,t0,t1);}
t2=C_mutate(((C_word *)((C_word*)t0)[5])+1,t1);
t3=(C_word)C_i_cddddr(((C_word*)((C_word*)t0)[5])[1]);
t4=(C_word)C_i_car(t3);
t5=C_mutate(((C_word *)((C_word*)t0)[4])+1,t4);
t6=(C_word)C_i_car(((C_word*)((C_word*)t0)[5])[1]);
t7=(C_word)C_a_i_list(&a,1,t6);
t8=((C_word*)t0)[3];
f_7790(t8,(C_word)C_i_set_cdr(((C_word*)((C_word*)t0)[2])[1],t7));}

/* k7806 in do527 in note in k7607 in k7604 in k5838 in k5545 in k5542 in k5538 in k5247 in k5244 in k5241 in k5238 */
static void C_ccall f_7808(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[3],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_7808,2,t0,t1);}
t2=C_mutate(((C_word *)((C_word*)t0)[4])+1,t1);
t3=(C_word)C_a_i_list(&a,1,((C_word*)((C_word*)t0)[4])[1]);
t4=((C_word*)t0)[3];
f_7790(t4,(C_word)C_i_set_cdr(((C_word*)((C_word*)t0)[2])[1],t3));}

/* k7788 in do527 in note in k7607 in k7604 in k5838 in k5545 in k5542 in k5538 in k5247 in k5244 in k5241 in k5238 */
static void C_fcall f_7790(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word *a;
t2=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[7])[1]);
t3=C_mutate(((C_word *)((C_word*)t0)[7])+1,t2);
t4=(C_word)C_i_cdr(((C_word*)t0)[6]);
t5=((C_word*)((C_word*)t0)[5])[1];
f_7777(t5,((C_word*)t0)[4],t4,((C_word*)((C_word*)t0)[3])[1],((C_word*)((C_word*)t0)[2])[1],((C_word*)((C_word*)t0)[7])[1]);}

/* note-aux in k7607 in k7604 in k5838 in k5545 in k5542 in k5538 in k5247 in k5244 in k5241 in k5238 */
static void C_fcall f_7709(C_word t1,C_word t2,C_word t3,C_word t4){
C_word tmp;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word ab[21],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_7709,NULL,4,t1,t2,t3,t4);}
if(C_truep((C_word)C_i_numberp(t2))){
t5=t1;
t6=t2;
t7=t4;
if(C_truep((C_word)C_i_exactp(t6))){
t8=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_7663,a[2]=t6,a[3]=t7,a[4]=((C_word)li76),tmp=(C_word)a,a+=5,tmp);
C_trace("ChickenBridge.scm: 362  hash-table-ref");
t9=*((C_word*)lf[43]+1);
((C_proc5)C_retrieve_proc(t9))(5,t9,t5,C_retrieve2(lf[121],"*notes*"),t6,t8);}
else{
t8=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_7673,a[2]=t5,a[3]=t7,a[4]=t6,tmp=(C_word)a,a+=5,tmp);
C_trace("ChickenBridge.scm: 362  floor");
t9=*((C_word*)lf[132]+1);
((C_proc3)C_retrieve_proc(t9))(3,t9,t8,t6);}}
else{
if(C_truep((C_word)C_i_symbolp(t2))){
t5=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_7732,a[2]=t4,a[3]=t3,a[4]=t1,tmp=(C_word)a,a+=5,tmp);
C_trace("ChickenBridge.scm: 362  symbol->string");
t6=*((C_word*)lf[27]+1);
((C_proc3)C_retrieve_proc(t6))(3,t6,t5,t2);}
else{
if(C_truep((C_word)C_i_stringp(t2))){
C_trace("ChickenBridge.scm: 362  string->note-entry");
f_7611(t1,t2,t3,t4);}
else{
t5=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_7747,a[2]=t2,a[3]=t4,a[4]=t3,a[5]=t1,tmp=(C_word)a,a+=6,tmp);
C_trace("ChickenBridge.scm: 362  keyword?");
t6=C_retrieve(lf[15]);
((C_proc3)C_retrieve_proc(t6))(3,t6,t5,t2);}}}}

/* k7745 in note-aux in k7607 in k7604 in k5838 in k5545 in k5542 in k5538 in k5247 in k5244 in k5241 in k5238 */
static void C_ccall f_7747(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[5],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_7747,2,t0,t1);}
if(C_truep(t1)){
t2=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_7754,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],tmp=(C_word)a,a+=5,tmp);
C_trace("ChickenBridge.scm: 362  keyword->string");
t3=C_retrieve(lf[35]);
((C_proc3)C_retrieve_proc(t3))(3,t3,t2,((C_word*)t0)[2]);}
else{
if(C_truep(((C_word*)t0)[3])){
C_trace("ChickenBridge.scm: 362  error");
t2=*((C_word*)lf[6]+1);
((C_proc4)C_retrieve_proc(t2))(4,t2,((C_word*)t0)[5],lf[133],((C_word*)t0)[2]);}
else{
t2=((C_word*)t0)[5];
((C_proc2)(void*)(*((C_word*)t2+1)))(2,t2,C_SCHEME_FALSE);}}}

/* k7752 in k7745 in note-aux in k7607 in k7604 in k5838 in k5545 in k5542 in k5538 in k5247 in k5244 in k5241 in k5238 */
static void C_ccall f_7754(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 362  string->note-entry");
f_7611(((C_word*)t0)[4],t1,((C_word*)t0)[3],((C_word*)t0)[2]);}

/* k7730 in note-aux in k7607 in k7604 in k5838 in k5545 in k5542 in k5538 in k5247 in k5244 in k5241 in k5238 */
static void C_ccall f_7732(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 362  string->note-entry");
f_7611(((C_word*)t0)[4],t1,((C_word*)t0)[3],((C_word*)t0)[2]);}

/* k7671 in note-aux in k7607 in k7604 in k5838 in k5545 in k5542 in k5538 in k5247 in k5244 in k5241 in k5238 */
static void C_ccall f_7673(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[17],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_7673,2,t0,t1);}
t2=(C_word)C_a_i_minus(&a,2,((C_word*)t0)[4],t1);
t3=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_7683,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[3],tmp=(C_word)a,a+=5,tmp);
if(C_truep((C_word)C_i_lessp(t2,lf[129]))){
t4=t3;
f_7683(t4,t1);}
else{
t4=(C_word)C_i_lessp(t2,lf[130]);
t5=t3;
f_7683(t5,(C_truep(t4)?(C_word)C_a_i_plus(&a,2,t1,lf[131]):(C_word)C_a_i_plus(&a,2,t1,C_fix(1))));}}

/* k7681 in k7671 in note-aux in k7607 in k7604 in k5838 in k5545 in k5542 in k5538 in k5247 in k5244 in k5241 in k5238 */
static void C_fcall f_7683(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[5],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_7683,NULL,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_7685,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word)li77),tmp=(C_word)a,a+=5,tmp);
C_trace("ChickenBridge.scm: 362  hash-table-ref");
t3=*((C_word*)lf[43]+1);
((C_proc5)C_retrieve_proc(t3))(5,t3,((C_word*)t0)[2],C_retrieve2(lf[121],"*notes*"),t1,t2);}

/* a7684 in k7681 in k7671 in note-aux in k7607 in k7604 in k5838 in k5545 in k5542 in k5538 in k5247 in k5244 in k5241 in k5238 */
static void C_ccall f_7685(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
if(c!=2) C_bad_argc_2(c,2,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_7685,2,t0,t1);}
if(C_truep(((C_word*)t0)[3])){
C_trace("ChickenBridge.scm: 362  error");
t2=*((C_word*)lf[6]+1);
((C_proc4)C_retrieve_proc(t2))(4,t2,t1,lf[128],((C_word*)t0)[2]);}
else{
t2=t1;
((C_proc2)(void*)(*((C_word*)t2+1)))(2,t2,C_SCHEME_FALSE);}}

/* a7662 in note-aux in k7607 in k7604 in k5838 in k5545 in k5542 in k5538 in k5247 in k5244 in k5241 in k5238 */
static void C_ccall f_7663(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
if(c!=2) C_bad_argc_2(c,2,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_7663,2,t0,t1);}
if(C_truep(((C_word*)t0)[3])){
C_trace("ChickenBridge.scm: 362  error");
t2=*((C_word*)lf[6]+1);
((C_proc4)C_retrieve_proc(t2))(4,t2,t1,lf[127],((C_word*)t0)[2]);}
else{
t2=t1;
((C_proc2)(void*)(*((C_word*)t2+1)))(2,t2,C_SCHEME_FALSE);}}

/* string->note-entry in k7607 in k7604 in k5838 in k5545 in k5542 in k5538 in k5247 in k5244 in k5241 in k5238 */
static void C_fcall f_7611(C_word t1,C_word t2,C_word t3,C_word t4){
C_word tmp;
C_word t5;
C_word t6;
C_word t7;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_7611,NULL,4,t1,t2,t3,t4);}
t5=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_7615,a[2]=t2,a[3]=t4,a[4]=t3,a[5]=t1,tmp=(C_word)a,a+=6,tmp);
t6=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_7648,a[2]=((C_word)li74),tmp=(C_word)a,a+=3,tmp);
C_trace("ChickenBridge.scm: 362  hash-table-ref");
t7=*((C_word*)lf[43]+1);
((C_proc5)C_retrieve_proc(t7))(5,t7,t5,C_retrieve2(lf[121],"*notes*"),t2,t6);}

/* a7647 in string->note-entry in k7607 in k7604 in k5838 in k5545 in k5542 in k5538 in k5247 in k5244 in k5241 in k5238 */
static void C_ccall f_7648(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
if(c!=2) C_bad_argc_2(c,2,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_7648,2,t0,t1);}
t2=t1;
((C_proc2)(void*)(*((C_word*)t2+1)))(2,t2,C_SCHEME_FALSE);}

/* k7613 in string->note-entry in k7607 in k7604 in k5838 in k5545 in k5542 in k5538 in k5247 in k5244 in k5241 in k5238 */
static void C_ccall f_7615(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[5],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_7615,2,t0,t1);}
t2=t1;
if(C_truep(t2)){
t3=((C_word*)t0)[5];
((C_proc2)(void*)(*((C_word*)t3+1)))(2,t3,t1);}
else{
if(C_truep(((C_word*)t0)[4])){
t3=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_7631,a[2]=((C_word*)t0)[5],a[3]=((C_word*)t0)[2],a[4]=((C_word*)t0)[3],tmp=(C_word)a,a+=5,tmp);
C_trace("ChickenBridge.scm: 362  string-append");
t4=*((C_word*)lf[124]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t3,((C_word*)t0)[2],((C_word*)t0)[4]);}
else{
if(C_truep(((C_word*)t0)[3])){
C_trace("ChickenBridge.scm: 362  error");
t3=*((C_word*)lf[6]+1);
((C_proc4)C_retrieve_proc(t3))(4,t3,((C_word*)t0)[5],lf[125],((C_word*)t0)[2]);}
else{
t3=((C_word*)t0)[5];
((C_proc2)(void*)(*((C_word*)t3+1)))(2,t3,C_SCHEME_FALSE);}}}}

/* k7629 in k7613 in string->note-entry in k7607 in k7604 in k5838 in k5545 in k5542 in k5538 in k5247 in k5244 in k5241 in k5238 */
static void C_ccall f_7631(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[5],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_7631,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_7633,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word)li73),tmp=(C_word)a,a+=5,tmp);
C_trace("ChickenBridge.scm: 362  hash-table-ref");
t3=*((C_word*)lf[43]+1);
((C_proc5)C_retrieve_proc(t3))(5,t3,((C_word*)t0)[2],C_retrieve2(lf[121],"*notes*"),t1,t2);}

/* a7632 in k7629 in k7613 in string->note-entry in k7607 in k7604 in k5838 in k5545 in k5542 in k5538 in k5247 in k5244 in k5241 in k5238 */
static void C_ccall f_7633(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
if(c!=2) C_bad_argc_2(c,2,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_7633,2,t0,t1);}
if(C_truep(((C_word*)t0)[3])){
C_trace("ChickenBridge.scm: 362  error");
t2=*((C_word*)lf[6]+1);
((C_proc4)C_retrieve_proc(t2))(4,t2,t1,lf[123],((C_word*)t0)[2]);}
else{
t2=t1;
((C_proc2)(void*)(*((C_word*)t2+1)))(2,t2,C_SCHEME_FALSE);}}

/* ranpink in k5838 in k5545 in k5542 in k5538 in k5247 in k5244 in k5241 in k5238 */
static void C_ccall f_7598(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[6],*a=ab;
if(c!=2) C_bad_argc_2(c,2,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_7598,2,t0,t1);}
t2=(C_word)C_a_i_bytevector(&a,1,C_fix(4));
t3=t1;
((C_proc2)(void*)(*((C_word*)t3+1)))(2,t3,(C_word)stub299(t2));}

/* ranbrown in k5838 in k5545 in k5542 in k5538 in k5247 in k5244 in k5241 in k5238 */
static void C_ccall f_7592(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[6],*a=ab;
if(c!=2) C_bad_argc_2(c,2,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_7592,2,t0,t1);}
t2=(C_word)C_a_i_bytevector(&a,1,C_fix(4));
t3=t1;
((C_proc2)(void*)(*((C_word*)t3+1)))(2,t3,(C_word)stub302(t2));}

/* rangamma in k5838 in k5545 in k5542 in k5538 in k5247 in k5244 in k5241 in k5238 */
static void C_ccall f_7573(C_word c,C_word t0,C_word t1,...){
C_word tmp;
C_word t2;
va_list v;
C_word *a,c2=c;
C_save_rest(t1,c2,2);
C_check_for_interrupt;
if(!C_demand(c*C_SIZEOF_PAIR+0)){
C_save_and_reclaim((void*)tr2rv,(void*)f_7573r,2,t0,t1);}
else{
a=C_alloc((c-2)*3);
t2=C_restore_rest_vector(a,C_rest_count(0));
f_7573r(t0,t1,t2);}}

static void C_ccall f_7573r(C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
if(C_truep((C_word)C_vemptyp(t2))){
C_trace("ChickenBridge.scm: 362  tb:rangamma");
f_6466(t1,C_fix(1));}
else{
t3=(C_word)C_i_vector_ref(t2,C_fix(0));
C_trace("ChickenBridge.scm: 362  tb:rangamma");
f_6466(t1,t3);}}

/* ranpoisson in k5838 in k5545 in k5542 in k5538 in k5247 in k5244 in k5241 in k5238 */
static void C_ccall f_7554(C_word c,C_word t0,C_word t1,...){
C_word tmp;
C_word t2;
va_list v;
C_word *a,c2=c;
C_save_rest(t1,c2,2);
C_check_for_interrupt;
if(!C_demand(c*C_SIZEOF_PAIR+0)){
C_save_and_reclaim((void*)tr2rv,(void*)f_7554r,2,t0,t1);}
else{
a=C_alloc((c-2)*3);
t2=C_restore_rest_vector(a,C_rest_count(0));
f_7554r(t0,t1,t2);}}

static void C_ccall f_7554r(C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
if(C_truep((C_word)C_i_nullp(C_retrieve(lf[117])))){
C_trace("ChickenBridge.scm: 362  tb:ranpoisson");
f_6476(t1,C_fix(1));}
else{
t3=(C_word)C_i_vector_ref(t2,C_fix(0));
C_trace("ChickenBridge.scm: 362  tb:ranpoisson");
f_6476(t1,t3);}}

/* rancauchy in k5838 in k5545 in k5542 in k5538 in k5247 in k5244 in k5241 in k5238 */
static void C_ccall f_7548(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[6],*a=ab;
if(c!=2) C_bad_argc_2(c,2,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_7548,2,t0,t1);}
t2=(C_word)C_a_i_bytevector(&a,1,C_fix(4));
t3=t1;
((C_proc2)(void*)(*((C_word*)t3+1)))(2,t3,(C_word)stub292(t2));}

/* rangauss in k5838 in k5545 in k5542 in k5538 in k5247 in k5244 in k5241 in k5238 */
static void C_ccall f_7508(C_word c,C_word t0,C_word t1,...){
C_word tmp;
C_word t2;
va_list v;
C_word *a,c2=c;
C_save_rest(t1,c2,2);
C_check_for_interrupt;
if(!C_demand(c*C_SIZEOF_PAIR+0)){
C_save_and_reclaim((void*)tr2r,(void*)f_7508r,2,t0,t1);}
else{
a=C_alloc((c-2)*3);
t2=C_restore_rest(a,C_rest_count(0));
f_7508r(t0,t1,t2);}}

static void C_ccall f_7508r(C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
if(C_truep((C_word)C_i_nullp(t2))){
C_trace("ChickenBridge.scm: 362  tb:rangauss");
f_6437(t1,C_fix(1),C_fix(0));}
else{
t3=(C_word)C_i_cdr(t2);
if(C_truep((C_word)C_i_nullp(t3))){
t4=(C_word)C_i_car(t2);
C_trace("ChickenBridge.scm: 362  tb:rangauss");
f_6437(t1,t4,C_fix(0));}
else{
t4=(C_word)C_i_car(t2);
t5=(C_word)C_i_cdr(t2);
C_trace("ChickenBridge.scm: 362  tb:rangauss");
f_6437(t1,t4,t5);}}}

/* ranexp in k5838 in k5545 in k5542 in k5538 in k5247 in k5244 in k5241 in k5238 */
static void C_ccall f_7489(C_word c,C_word t0,C_word t1,...){
C_word tmp;
C_word t2;
va_list v;
C_word *a,c2=c;
C_save_rest(t1,c2,2);
C_check_for_interrupt;
if(!C_demand(c*C_SIZEOF_PAIR+0)){
C_save_and_reclaim((void*)tr2rv,(void*)f_7489r,2,t0,t1);}
else{
a=C_alloc((c-2)*3);
t2=C_restore_rest_vector(a,C_rest_count(0));
f_7489r(t0,t1,t2);}}

static void C_ccall f_7489r(C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
if(C_truep((C_word)C_vemptyp(t2))){
C_trace("ChickenBridge.scm: 362  tb:ranexp");
f_6448(t1,C_fix(1));}
else{
t3=(C_word)C_i_vector_ref(t2,C_fix(0));
C_trace("ChickenBridge.scm: 362  tb:ranexp");
f_6448(t1,t3);}}

/* ranbeta in k5838 in k5545 in k5542 in k5538 in k5247 in k5244 in k5241 in k5238 */
static void C_ccall f_7261(C_word c,C_word t0,C_word t1,...){
C_word tmp;
C_word t2;
va_list v;
C_word *a,c2=c;
C_save_rest(t1,c2,2);
C_check_for_interrupt;
if(!C_demand(c*C_SIZEOF_PAIR+44)){
C_save_and_reclaim((void*)tr2r,(void*)f_7261r,2,t0,t1);}
else{
a=C_alloc((c-2)*3);
t2=C_restore_rest(a,C_rest_count(0));
f_7261r(t0,t1,t2);}}

static void C_ccall f_7261r(C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word t14;
C_word t15;
C_word t16;
C_word t17;
C_word t18;
C_word t19;
C_word t20;
C_word t21;
C_word t22;
C_word *a=C_alloc(44);
t3=lf[110];
t4=(*a=C_VECTOR_TYPE|1,a[1]=t3,tmp=(C_word)a,a+=2,tmp);
t5=C_SCHEME_FALSE;
t6=(*a=C_VECTOR_TYPE|1,a[1]=t5,tmp=(C_word)a,a+=2,tmp);
t7=C_SCHEME_FALSE;
t8=(*a=C_VECTOR_TYPE|1,a[1]=t7,tmp=(C_word)a,a+=2,tmp);
t9=C_SCHEME_FALSE;
t10=(*a=C_VECTOR_TYPE|1,a[1]=t9,tmp=(C_word)a,a+=2,tmp);
t11=t2;
t12=(*a=C_VECTOR_TYPE|1,a[1]=t11,tmp=(C_word)a,a+=2,tmp);
t13=C_SCHEME_FALSE;
t14=(*a=C_VECTOR_TYPE|1,a[1]=t13,tmp=(C_word)a,a+=2,tmp);
t15=(*a=C_CLOSURE_TYPE|9,a[1]=(C_word)f_7265,a[2]=t10,a[3]=t14,a[4]=t8,a[5]=t2,a[6]=t12,a[7]=t6,a[8]=t4,a[9]=t1,tmp=(C_word)a,a+=10,tmp);
if(C_truep((C_word)C_i_nullp(((C_word*)t12)[1]))){
t16=t15;
f_7265(t16,C_SCHEME_UNDEFINED);}
else{
t16=(C_word)C_i_car(((C_word*)t12)[1]);
t17=(C_word)C_eqp(t16,lf[111]);
if(C_truep(t17)){
t18=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_7402,a[2]=t2,a[3]=t15,a[4]=t12,a[5]=t14,a[6]=t8,a[7]=t4,tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)t8)[1])){
C_trace("error");
t19=*((C_word*)lf[6]+1);
((C_proc4)C_retrieve_proc(t19))(4,t19,t18,lf[21],lf[111]);}
else{
t19=t18;
f_7402(2,t19,C_SCHEME_UNDEFINED);}}
else{
t18=(C_word)C_eqp(t16,lf[112]);
if(C_truep(t18)){
t19=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_7437,a[2]=t2,a[3]=t15,a[4]=t12,a[5]=t14,a[6]=t10,a[7]=t6,tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)t10)[1])){
C_trace("error");
t20=*((C_word*)lf[6]+1);
((C_proc4)C_retrieve_proc(t20))(4,t20,t19,lf[21],lf[112]);}
else{
t20=t19;
f_7437(2,t20,C_SCHEME_UNDEFINED);}}
else{
t19=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_7466,a[2]=t15,a[3]=t8,a[4]=t4,a[5]=t12,tmp=(C_word)a,a+=6,tmp);
if(C_truep(((C_word*)t14)[1])){
C_trace("error");
t20=*((C_word*)lf[6]+1);
((C_proc4)C_retrieve_proc(t20))(4,t20,t19,lf[12],t2);}
else{
t20=t19;
f_7466(2,t20,C_SCHEME_UNDEFINED);}}}}}

/* k7464 in ranbeta in k5838 in k5545 in k5542 in k5538 in k5247 in k5244 in k5241 in k5238 */
static void C_ccall f_7466(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_7466,2,t0,t1);}
t2=(C_word)C_i_car(((C_word*)((C_word*)t0)[5])[1]);
t3=C_mutate(((C_word *)((C_word*)t0)[4])+1,t2);
t4=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_7473,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[5],a[4]=((C_word*)t0)[3],tmp=(C_word)a,a+=5,tmp);
t5=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_7481,a[2]=((C_word*)t0)[4],a[3]=t4,tmp=(C_word)a,a+=4,tmp);
C_trace("keyword?");
t6=C_retrieve(lf[15]);
((C_proc3)C_retrieve_proc(t6))(3,t6,t5,((C_word*)((C_word*)t0)[4])[1]);}

/* k7479 in k7464 in ranbeta in k5838 in k5545 in k5542 in k5538 in k5247 in k5244 in k5241 in k5238 */
static void C_ccall f_7481(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
if(C_truep(t1)){
C_trace("error");
t2=*((C_word*)lf[6]+1);
((C_proc4)C_retrieve_proc(t2))(4,t2,((C_word*)t0)[3],lf[16],((C_word*)((C_word*)t0)[2])[1]);}
else{
t2=((C_word*)t0)[3];
f_7473(2,t2,C_SCHEME_UNDEFINED);}}

/* k7471 in k7464 in ranbeta in k5838 in k5545 in k5542 in k5538 in k5247 in k5244 in k5241 in k5238 */
static void C_ccall f_7473(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word *a;
t2=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[3])[1]);
t4=C_mutate(((C_word *)((C_word*)t0)[3])+1,t3);
t5=((C_word*)t0)[2];
f_7265(t5,t4);}

/* k7435 in ranbeta in k5838 in k5545 in k5542 in k5538 in k5247 in k5244 in k5241 in k5238 */
static void C_ccall f_7437(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_7437,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_7441,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("error");
t4=*((C_word*)lf[6]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[23],((C_word*)t0)[2]);}
else{
t4=t2;
f_7441(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k7439 in k7435 in ranbeta in k5838 in k5545 in k5542 in k5538 in k5247 in k5244 in k5241 in k5238 */
static void C_ccall f_7441(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_7265(t7,t6);}

/* k7400 in ranbeta in k5838 in k5545 in k5542 in k5538 in k5247 in k5244 in k5241 in k5238 */
static void C_ccall f_7402(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_7402,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_7406,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("error");
t4=*((C_word*)lf[6]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[23],((C_word*)t0)[2]);}
else{
t4=t2;
f_7406(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k7404 in k7400 in ranbeta in k5838 in k5545 in k5542 in k5538 in k5247 in k5244 in k5241 in k5238 */
static void C_ccall f_7406(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_7265(t7,t6);}

/* k7263 in ranbeta in k5838 in k5545 in k5542 in k5538 in k5247 in k5244 in k5241 in k5238 */
static void C_fcall f_7265(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word ab[29],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_7265,NULL,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_7268,a[2]=((C_word*)t0)[5],a[3]=((C_word*)t0)[6],a[4]=((C_word*)t0)[7],a[5]=((C_word*)t0)[8],a[6]=((C_word*)t0)[9],tmp=(C_word)a,a+=7,tmp);
if(C_truep((C_word)C_i_nullp(((C_word*)((C_word*)t0)[6])[1]))){
t3=t2;
f_7268(t3,C_SCHEME_UNDEFINED);}
else{
t3=(C_word)C_i_car(((C_word*)((C_word*)t0)[6])[1]);
t4=(C_word)C_eqp(t3,lf[111]);
if(C_truep(t4)){
t5=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_7302,a[2]=((C_word*)t0)[5],a[3]=t2,a[4]=((C_word*)t0)[6],a[5]=((C_word*)t0)[3],a[6]=((C_word*)t0)[4],a[7]=((C_word*)t0)[8],tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)((C_word*)t0)[4])[1])){
C_trace("error");
t6=*((C_word*)lf[6]+1);
((C_proc4)C_retrieve_proc(t6))(4,t6,t5,lf[21],lf[111]);}
else{
t6=t5;
f_7302(2,t6,C_SCHEME_UNDEFINED);}}
else{
t5=(C_word)C_eqp(t3,lf[112]);
if(C_truep(t5)){
t6=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_7337,a[2]=((C_word*)t0)[5],a[3]=t2,a[4]=((C_word*)t0)[6],a[5]=((C_word*)t0)[3],a[6]=((C_word*)t0)[2],a[7]=((C_word*)t0)[7],tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)((C_word*)t0)[2])[1])){
C_trace("error");
t7=*((C_word*)lf[6]+1);
((C_proc4)C_retrieve_proc(t7))(4,t7,t6,lf[21],lf[112]);}
else{
t7=t6;
f_7337(2,t7,C_SCHEME_UNDEFINED);}}
else{
t6=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_7366,a[2]=t2,a[3]=((C_word*)t0)[2],a[4]=((C_word*)t0)[7],a[5]=((C_word*)t0)[6],tmp=(C_word)a,a+=6,tmp);
if(C_truep(((C_word*)((C_word*)t0)[3])[1])){
C_trace("error");
t7=*((C_word*)lf[6]+1);
((C_proc4)C_retrieve_proc(t7))(4,t7,t6,lf[12],((C_word*)t0)[5]);}
else{
t7=t6;
f_7366(2,t7,C_SCHEME_UNDEFINED);}}}}}

/* k7364 in k7263 in ranbeta in k5838 in k5545 in k5542 in k5538 in k5247 in k5244 in k5241 in k5238 */
static void C_ccall f_7366(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_7366,2,t0,t1);}
t2=(C_word)C_i_car(((C_word*)((C_word*)t0)[5])[1]);
t3=C_mutate(((C_word *)((C_word*)t0)[4])+1,t2);
t4=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_7373,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[5],a[4]=((C_word*)t0)[3],tmp=(C_word)a,a+=5,tmp);
t5=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_7381,a[2]=((C_word*)t0)[4],a[3]=t4,tmp=(C_word)a,a+=4,tmp);
C_trace("keyword?");
t6=C_retrieve(lf[15]);
((C_proc3)C_retrieve_proc(t6))(3,t6,t5,((C_word*)((C_word*)t0)[4])[1]);}

/* k7379 in k7364 in k7263 in ranbeta in k5838 in k5545 in k5542 in k5538 in k5247 in k5244 in k5241 in k5238 */
static void C_ccall f_7381(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
if(C_truep(t1)){
C_trace("error");
t2=*((C_word*)lf[6]+1);
((C_proc4)C_retrieve_proc(t2))(4,t2,((C_word*)t0)[3],lf[16],((C_word*)((C_word*)t0)[2])[1]);}
else{
t2=((C_word*)t0)[3];
f_7373(2,t2,C_SCHEME_UNDEFINED);}}

/* k7371 in k7364 in k7263 in ranbeta in k5838 in k5545 in k5542 in k5538 in k5247 in k5244 in k5241 in k5238 */
static void C_ccall f_7373(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word *a;
t2=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[3])[1]);
t4=C_mutate(((C_word *)((C_word*)t0)[3])+1,t3);
t5=((C_word*)t0)[2];
f_7268(t5,t4);}

/* k7335 in k7263 in ranbeta in k5838 in k5545 in k5542 in k5538 in k5247 in k5244 in k5241 in k5238 */
static void C_ccall f_7337(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_7337,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_7341,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("error");
t4=*((C_word*)lf[6]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[23],((C_word*)t0)[2]);}
else{
t4=t2;
f_7341(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k7339 in k7335 in k7263 in ranbeta in k5838 in k5545 in k5542 in k5538 in k5247 in k5244 in k5241 in k5238 */
static void C_ccall f_7341(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_7268(t7,t6);}

/* k7300 in k7263 in ranbeta in k5838 in k5545 in k5542 in k5538 in k5247 in k5244 in k5241 in k5238 */
static void C_ccall f_7302(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_7302,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_7306,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("error");
t4=*((C_word*)lf[6]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[23],((C_word*)t0)[2]);}
else{
t4=t2;
f_7306(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k7304 in k7300 in k7263 in ranbeta in k5838 in k5545 in k5542 in k5538 in k5247 in k5244 in k5241 in k5238 */
static void C_ccall f_7306(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_7268(t7,t6);}

/* k7266 in k7263 in ranbeta in k5838 in k5545 in k5542 in k5538 in k5247 in k5244 in k5241 in k5238 */
static void C_fcall f_7268(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[5],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_7268,NULL,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_7271,a[2]=((C_word*)t0)[4],a[3]=((C_word*)t0)[5],a[4]=((C_word*)t0)[6],tmp=(C_word)a,a+=5,tmp);
if(C_truep((C_word)C_i_nullp(((C_word*)((C_word*)t0)[3])[1]))){
t3=t2;
f_7271(2,t3,C_SCHEME_UNDEFINED);}
else{
C_trace("error");
t3=*((C_word*)lf[6]+1);
((C_proc4)C_retrieve_proc(t3))(4,t3,t2,lf[7],((C_word*)t0)[2]);}}

/* k7269 in k7266 in k7263 in ranbeta in k5838 in k5545 in k5542 in k5538 in k5247 in k5244 in k5241 in k5238 */
static void C_ccall f_7271(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[5],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_7271,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_7274,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],tmp=(C_word)a,a+=5,tmp);
t3=((C_word*)((C_word*)t0)[2])[1];
if(C_truep(t3)){
t4=t2;
f_7274(t4,C_SCHEME_UNDEFINED);}
else{
t4=C_mutate(((C_word *)((C_word*)t0)[2])+1,((C_word*)((C_word*)t0)[3])[1]);
t5=t2;
f_7274(t5,t4);}}

/* k7272 in k7269 in k7266 in k7263 in ranbeta in k5838 in k5545 in k5542 in k5538 in k5247 in k5244 in k5241 in k5238 */
static void C_fcall f_7274(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word ab[6],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_7274,NULL,2,t0,t1);}
t2=((C_word*)t0)[4];
t3=((C_word*)((C_word*)t0)[3])[1];
t4=((C_word*)((C_word*)t0)[2])[1];
t5=(C_word)C_a_i_bytevector(&a,1,C_fix(4));
t6=(C_word)C_i_foreign_flonum_argumentp(t3);
t7=(C_word)C_i_foreign_flonum_argumentp(t4);
t8=t2;
((C_proc2)(void*)(*((C_word*)t8+1)))(2,t8,(C_word)stub282(t5,t6,t7));}

/* ranmiddle in k5838 in k5545 in k5542 in k5538 in k5247 in k5244 in k5241 in k5238 */
static void C_ccall f_7255(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[6],*a=ab;
if(c!=2) C_bad_argc_2(c,2,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_7255,2,t0,t1);}
t2=(C_word)C_a_i_bytevector(&a,1,C_fix(4));
t3=t1;
((C_proc2)(void*)(*((C_word*)t3+1)))(2,t3,(C_word)stub265(t2));}

/* ranhigh in k5838 in k5545 in k5542 in k5538 in k5247 in k5244 in k5241 in k5238 */
static void C_ccall f_7249(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[6],*a=ab;
if(c!=2) C_bad_argc_2(c,2,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_7249,2,t0,t1);}
t2=(C_word)C_a_i_bytevector(&a,1,C_fix(4));
t3=t1;
((C_proc2)(void*)(*((C_word*)t3+1)))(2,t3,(C_word)stub262(t2));}

/* ranlow in k5838 in k5545 in k5542 in k5538 in k5247 in k5244 in k5241 in k5238 */
static void C_ccall f_7243(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[6],*a=ab;
if(c!=2) C_bad_argc_2(c,2,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_7243,2,t0,t1);}
t2=(C_word)C_a_i_bytevector(&a,1,C_fix(4));
t3=t1;
((C_proc2)(void*)(*((C_word*)t3+1)))(2,t3,(C_word)stub259(t2));}

/* odds in k5838 in k5545 in k5542 in k5538 in k5247 in k5244 in k5241 in k5238 */
static void C_ccall f_7015(C_word c,C_word t0,C_word t1,C_word t2,...){
C_word tmp;
C_word t3;
va_list v;
C_word *a,c2=c;
C_save_rest(t2,c2,3);
if(c<3) C_bad_min_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_demand(c*C_SIZEOF_PAIR+45)){
C_save_and_reclaim((void*)tr3r,(void*)f_7015r,3,t0,t1,t2);}
else{
a=C_alloc((c-3)*3);
t3=C_restore_rest(a,C_rest_count(0));
f_7015r(t0,t1,t2,t3);}}

static void C_ccall f_7015r(C_word t0,C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word t14;
C_word t15;
C_word t16;
C_word t17;
C_word t18;
C_word t19;
C_word t20;
C_word t21;
C_word t22;
C_word t23;
C_word *a=C_alloc(45);
t4=C_SCHEME_TRUE;
t5=(*a=C_VECTOR_TYPE|1,a[1]=t4,tmp=(C_word)a,a+=2,tmp);
t6=C_SCHEME_FALSE;
t7=(*a=C_VECTOR_TYPE|1,a[1]=t6,tmp=(C_word)a,a+=2,tmp);
t8=C_SCHEME_FALSE;
t9=(*a=C_VECTOR_TYPE|1,a[1]=t8,tmp=(C_word)a,a+=2,tmp);
t10=C_SCHEME_FALSE;
t11=(*a=C_VECTOR_TYPE|1,a[1]=t10,tmp=(C_word)a,a+=2,tmp);
t12=t3;
t13=(*a=C_VECTOR_TYPE|1,a[1]=t12,tmp=(C_word)a,a+=2,tmp);
t14=C_SCHEME_FALSE;
t15=(*a=C_VECTOR_TYPE|1,a[1]=t14,tmp=(C_word)a,a+=2,tmp);
t16=(*a=C_CLOSURE_TYPE|10,a[1]=(C_word)f_7019,a[2]=t11,a[3]=t15,a[4]=t9,a[5]=t3,a[6]=t13,a[7]=t7,a[8]=t5,a[9]=t1,a[10]=t2,tmp=(C_word)a,a+=11,tmp);
if(C_truep((C_word)C_i_nullp(((C_word*)t13)[1]))){
t17=t16;
f_7019(t17,C_SCHEME_UNDEFINED);}
else{
t17=(C_word)C_i_car(((C_word*)t13)[1]);
t18=(C_word)C_eqp(t17,lf[104]);
if(C_truep(t18)){
t19=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_7156,a[2]=t3,a[3]=t16,a[4]=t13,a[5]=t15,a[6]=t9,a[7]=t5,tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)t9)[1])){
C_trace("error");
t20=*((C_word*)lf[6]+1);
((C_proc4)C_retrieve_proc(t20))(4,t20,t19,lf[21],lf[104]);}
else{
t20=t19;
f_7156(2,t20,C_SCHEME_UNDEFINED);}}
else{
t19=(C_word)C_eqp(t17,lf[105]);
if(C_truep(t19)){
t20=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_7191,a[2]=t3,a[3]=t16,a[4]=t13,a[5]=t15,a[6]=t11,a[7]=t7,tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)t11)[1])){
C_trace("error");
t21=*((C_word*)lf[6]+1);
((C_proc4)C_retrieve_proc(t21))(4,t21,t20,lf[21],lf[105]);}
else{
t21=t20;
f_7191(2,t21,C_SCHEME_UNDEFINED);}}
else{
t20=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_7220,a[2]=t16,a[3]=t9,a[4]=t5,a[5]=t13,tmp=(C_word)a,a+=6,tmp);
if(C_truep(((C_word*)t15)[1])){
C_trace("error");
t21=*((C_word*)lf[6]+1);
((C_proc4)C_retrieve_proc(t21))(4,t21,t20,lf[12],t3);}
else{
t21=t20;
f_7220(2,t21,C_SCHEME_UNDEFINED);}}}}}

/* k7218 in odds in k5838 in k5545 in k5542 in k5538 in k5247 in k5244 in k5241 in k5238 */
static void C_ccall f_7220(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_7220,2,t0,t1);}
t2=(C_word)C_i_car(((C_word*)((C_word*)t0)[5])[1]);
t3=C_mutate(((C_word *)((C_word*)t0)[4])+1,t2);
t4=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_7227,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[5],a[4]=((C_word*)t0)[3],tmp=(C_word)a,a+=5,tmp);
t5=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_7235,a[2]=((C_word*)t0)[4],a[3]=t4,tmp=(C_word)a,a+=4,tmp);
C_trace("keyword?");
t6=C_retrieve(lf[15]);
((C_proc3)C_retrieve_proc(t6))(3,t6,t5,((C_word*)((C_word*)t0)[4])[1]);}

/* k7233 in k7218 in odds in k5838 in k5545 in k5542 in k5538 in k5247 in k5244 in k5241 in k5238 */
static void C_ccall f_7235(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
if(C_truep(t1)){
C_trace("error");
t2=*((C_word*)lf[6]+1);
((C_proc4)C_retrieve_proc(t2))(4,t2,((C_word*)t0)[3],lf[16],((C_word*)((C_word*)t0)[2])[1]);}
else{
t2=((C_word*)t0)[3];
f_7227(2,t2,C_SCHEME_UNDEFINED);}}

/* k7225 in k7218 in odds in k5838 in k5545 in k5542 in k5538 in k5247 in k5244 in k5241 in k5238 */
static void C_ccall f_7227(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word *a;
t2=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[3])[1]);
t4=C_mutate(((C_word *)((C_word*)t0)[3])+1,t3);
t5=((C_word*)t0)[2];
f_7019(t5,t4);}

/* k7189 in odds in k5838 in k5545 in k5542 in k5538 in k5247 in k5244 in k5241 in k5238 */
static void C_ccall f_7191(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_7191,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_7195,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("error");
t4=*((C_word*)lf[6]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[23],((C_word*)t0)[2]);}
else{
t4=t2;
f_7195(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k7193 in k7189 in odds in k5838 in k5545 in k5542 in k5538 in k5247 in k5244 in k5241 in k5238 */
static void C_ccall f_7195(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_7019(t7,t6);}

/* k7154 in odds in k5838 in k5545 in k5542 in k5538 in k5247 in k5244 in k5241 in k5238 */
static void C_ccall f_7156(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_7156,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_7160,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("error");
t4=*((C_word*)lf[6]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[23],((C_word*)t0)[2]);}
else{
t4=t2;
f_7160(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k7158 in k7154 in odds in k5838 in k5545 in k5542 in k5538 in k5247 in k5244 in k5241 in k5238 */
static void C_ccall f_7160(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_7019(t7,t6);}

/* k7017 in odds in k5838 in k5545 in k5542 in k5538 in k5247 in k5244 in k5241 in k5238 */
static void C_fcall f_7019(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word ab[30],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_7019,NULL,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_7022,a[2]=((C_word*)t0)[5],a[3]=((C_word*)t0)[6],a[4]=((C_word*)t0)[7],a[5]=((C_word*)t0)[8],a[6]=((C_word*)t0)[9],a[7]=((C_word*)t0)[10],tmp=(C_word)a,a+=8,tmp);
if(C_truep((C_word)C_i_nullp(((C_word*)((C_word*)t0)[6])[1]))){
t3=t2;
f_7022(t3,C_SCHEME_UNDEFINED);}
else{
t3=(C_word)C_i_car(((C_word*)((C_word*)t0)[6])[1]);
t4=(C_word)C_eqp(t3,lf[104]);
if(C_truep(t4)){
t5=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_7056,a[2]=((C_word*)t0)[5],a[3]=t2,a[4]=((C_word*)t0)[6],a[5]=((C_word*)t0)[3],a[6]=((C_word*)t0)[4],a[7]=((C_word*)t0)[8],tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)((C_word*)t0)[4])[1])){
C_trace("error");
t6=*((C_word*)lf[6]+1);
((C_proc4)C_retrieve_proc(t6))(4,t6,t5,lf[21],lf[104]);}
else{
t6=t5;
f_7056(2,t6,C_SCHEME_UNDEFINED);}}
else{
t5=(C_word)C_eqp(t3,lf[105]);
if(C_truep(t5)){
t6=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_7091,a[2]=((C_word*)t0)[5],a[3]=t2,a[4]=((C_word*)t0)[6],a[5]=((C_word*)t0)[3],a[6]=((C_word*)t0)[2],a[7]=((C_word*)t0)[7],tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)((C_word*)t0)[2])[1])){
C_trace("error");
t7=*((C_word*)lf[6]+1);
((C_proc4)C_retrieve_proc(t7))(4,t7,t6,lf[21],lf[105]);}
else{
t7=t6;
f_7091(2,t7,C_SCHEME_UNDEFINED);}}
else{
t6=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_7120,a[2]=t2,a[3]=((C_word*)t0)[2],a[4]=((C_word*)t0)[7],a[5]=((C_word*)t0)[6],tmp=(C_word)a,a+=6,tmp);
if(C_truep(((C_word*)((C_word*)t0)[3])[1])){
C_trace("error");
t7=*((C_word*)lf[6]+1);
((C_proc4)C_retrieve_proc(t7))(4,t7,t6,lf[12],((C_word*)t0)[5]);}
else{
t7=t6;
f_7120(2,t7,C_SCHEME_UNDEFINED);}}}}}

/* k7118 in k7017 in odds in k5838 in k5545 in k5542 in k5538 in k5247 in k5244 in k5241 in k5238 */
static void C_ccall f_7120(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_7120,2,t0,t1);}
t2=(C_word)C_i_car(((C_word*)((C_word*)t0)[5])[1]);
t3=C_mutate(((C_word *)((C_word*)t0)[4])+1,t2);
t4=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_7127,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[5],a[4]=((C_word*)t0)[3],tmp=(C_word)a,a+=5,tmp);
t5=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_7135,a[2]=((C_word*)t0)[4],a[3]=t4,tmp=(C_word)a,a+=4,tmp);
C_trace("keyword?");
t6=C_retrieve(lf[15]);
((C_proc3)C_retrieve_proc(t6))(3,t6,t5,((C_word*)((C_word*)t0)[4])[1]);}

/* k7133 in k7118 in k7017 in odds in k5838 in k5545 in k5542 in k5538 in k5247 in k5244 in k5241 in k5238 */
static void C_ccall f_7135(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
if(C_truep(t1)){
C_trace("error");
t2=*((C_word*)lf[6]+1);
((C_proc4)C_retrieve_proc(t2))(4,t2,((C_word*)t0)[3],lf[16],((C_word*)((C_word*)t0)[2])[1]);}
else{
t2=((C_word*)t0)[3];
f_7127(2,t2,C_SCHEME_UNDEFINED);}}

/* k7125 in k7118 in k7017 in odds in k5838 in k5545 in k5542 in k5538 in k5247 in k5244 in k5241 in k5238 */
static void C_ccall f_7127(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word *a;
t2=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[3])[1]);
t4=C_mutate(((C_word *)((C_word*)t0)[3])+1,t3);
t5=((C_word*)t0)[2];
f_7022(t5,t4);}

/* k7089 in k7017 in odds in k5838 in k5545 in k5542 in k5538 in k5247 in k5244 in k5241 in k5238 */
static void C_ccall f_7091(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_7091,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_7095,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("error");
t4=*((C_word*)lf[6]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[23],((C_word*)t0)[2]);}
else{
t4=t2;
f_7095(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k7093 in k7089 in k7017 in odds in k5838 in k5545 in k5542 in k5538 in k5247 in k5244 in k5241 in k5238 */
static void C_ccall f_7095(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_7022(t7,t6);}

/* k7054 in k7017 in odds in k5838 in k5545 in k5542 in k5538 in k5247 in k5244 in k5241 in k5238 */
static void C_ccall f_7056(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_7056,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_7060,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("error");
t4=*((C_word*)lf[6]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[23],((C_word*)t0)[2]);}
else{
t4=t2;
f_7060(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k7058 in k7054 in k7017 in odds in k5838 in k5545 in k5542 in k5538 in k5247 in k5244 in k5241 in k5238 */
static void C_ccall f_7060(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_7022(t7,t6);}

/* k7020 in k7017 in odds in k5838 in k5545 in k5542 in k5538 in k5247 in k5244 in k5241 in k5238 */
static void C_fcall f_7022(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[6],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_7022,NULL,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_7025,a[2]=((C_word*)t0)[4],a[3]=((C_word*)t0)[5],a[4]=((C_word*)t0)[6],a[5]=((C_word*)t0)[7],tmp=(C_word)a,a+=6,tmp);
if(C_truep((C_word)C_i_nullp(((C_word*)((C_word*)t0)[3])[1]))){
t3=t2;
f_7025(2,t3,C_SCHEME_UNDEFINED);}
else{
C_trace("error");
t3=*((C_word*)lf[6]+1);
((C_proc4)C_retrieve_proc(t3))(4,t3,t2,lf[7],((C_word*)t0)[2]);}}

/* k7023 in k7020 in k7017 in odds in k5838 in k5545 in k5542 in k5538 in k5247 in k5244 in k5241 in k5238 */
static void C_ccall f_7025(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[6],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_7025,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_7035,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],tmp=(C_word)a,a+=6,tmp);
C_trace("ChickenBridge.scm: 362  tb:ranf");
f_6399(t2,lf[103]);}

/* k7033 in k7023 in k7020 in k7017 in odds in k5838 in k5545 in k5542 in k5538 in k5247 in k5244 in k5241 in k5238 */
static void C_ccall f_7035(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word *a;
t2=(C_word)C_i_lessp(t1,((C_word*)t0)[5]);
t3=((C_word*)t0)[4];
((C_proc2)(void*)(*((C_word*)t3+1)))(2,t3,(C_truep(t2)?((C_word*)((C_word*)t0)[3])[1]:((C_word*)((C_word*)t0)[2])[1]));}

/* pick in k5838 in k5545 in k5542 in k5538 in k5247 in k5244 in k5241 in k5238 */
static void C_ccall f_6967(C_word c,C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word ab[8],*a=ab;
if(c!=3) C_bad_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr3,(void*)f_6967,3,t0,t1,t2);}
if(C_truep((C_word)C_i_nullp(t2))){
C_trace("ChickenBridge.scm: 362  error");
t3=*((C_word*)lf[6]+1);
((C_proc3)C_retrieve_proc(t3))(3,t3,t1,lf[101]);}
else{
t3=(C_word)C_i_cdr(t2);
if(C_truep((C_word)C_i_nullp(t3))){
t4=(C_word)C_i_car(t2);
t5=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_6994,a[2]=t4,a[3]=t1,tmp=(C_word)a,a+=4,tmp);
t6=(C_word)C_i_length(t2);
C_trace("ChickenBridge.scm: 362  tb:rani");
f_6392(t5,t6);}
else{
t4=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_7005,a[2]=t2,a[3]=t1,tmp=(C_word)a,a+=4,tmp);
t5=(C_word)C_i_length(t2);
C_trace("ChickenBridge.scm: 362  tb:rani");
f_6392(t4,t5);}}}

/* k7003 in pick in k5838 in k5545 in k5542 in k5538 in k5247 in k5244 in k5241 in k5238 */
static void C_ccall f_7005(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
t2=((C_word*)t0)[3];
((C_proc2)(void*)(*((C_word*)t2+1)))(2,t2,(C_word)C_i_list_ref(((C_word*)t0)[2],t1));}

/* k6992 in pick in k5838 in k5545 in k5542 in k5538 in k5247 in k5244 in k5241 in k5238 */
static void C_ccall f_6994(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
t2=((C_word*)t0)[3];
((C_proc2)(void*)(*((C_word*)t2+1)))(2,t2,(C_word)C_i_list_ref(((C_word*)t0)[2],t1));}

/* between in k5838 in k5545 in k5542 in k5538 in k5247 in k5244 in k5241 in k5238 */
static void C_ccall f_6946(C_word c,C_word t0,C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word t14;
C_word t15;
C_word t16;
C_word t17;
C_word ab[6],*a=ab;
if(c!=4) C_bad_argc_2(c,4,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr4,(void*)f_6946,4,t0,t1,t2,t3);}
t4=(C_word)C_fixnump(t2);
t5=(C_truep(t4)?(C_word)C_fixnump(t3):C_SCHEME_FALSE);
if(C_truep(t5)){
t6=t1;
t7=t2;
t8=t3;
t9=(C_word)C_i_foreign_fixnum_argumentp(t7);
t10=(C_word)C_i_foreign_fixnum_argumentp(t8);
t11=t6;
((C_proc2)(void*)(*((C_word*)t11+1)))(2,t11,(C_word)stub248(C_SCHEME_UNDEFINED,t9,t10));}
else{
t6=t1;
t7=t2;
t8=t3;
t9=(C_word)C_a_i_bytevector(&a,1,C_fix(4));
t10=(C_word)C_i_foreign_flonum_argumentp(t7);
t11=(C_word)C_i_foreign_flonum_argumentp(t8);
t12=t6;
((C_proc2)(void*)(*((C_word*)t12+1)))(2,t12,(C_word)stub254(t9,t10,t11));}}

/* ran in k5838 in k5545 in k5542 in k5538 in k5247 in k5244 in k5241 in k5238 */
static void C_ccall f_6922(C_word c,C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word *a;
if(c!=3) C_bad_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr3,(void*)f_6922,3,t0,t1,t2);}
if(C_truep((C_word)C_i_greaterp(t2,C_fix(1)))){
if(C_truep((C_word)C_fixnump(t2))){
C_trace("ChickenBridge.scm: 362  tb:rani");
f_6392(t1,t2);}
else{
C_trace("ChickenBridge.scm: 362  tb:ranf");
f_6399(t1,t2);}}
else{
C_trace("ChickenBridge.scm: 362  tb:ranf");
f_6399(t1,t2);}}

/* ran-set! in k5838 in k5545 in k5542 in k5538 in k5247 in k5244 in k5241 in k5238 */
static void C_ccall f_6916(C_word c,C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word *a;
if(c!=3) C_bad_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr3,(void*)f_6916,3,t0,t1,t2);}
t3=t1;
((C_proc2)(void*)(*((C_word*)t3+1)))(2,t3,(C_word)stub234(C_SCHEME_UNDEFINED,t2));}

/* steps in k5838 in k5545 in k5542 in k5538 in k5247 in k5244 in k5241 in k5238 */
static void C_ccall f_6857(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,...){
C_word tmp;
C_word t4;
va_list v;
C_word *a,c2=c;
C_save_rest(t3,c2,4);
if(c<4) C_bad_min_argc_2(c,4,t0);
C_check_for_interrupt;
if(!C_demand(c*C_SIZEOF_PAIR+12)){
C_save_and_reclaim((void*)tr4rv,(void*)f_6857r,4,t0,t1,t2,t3);}
else{
a=C_alloc((c-4)*3);
t4=C_restore_rest_vector(a,C_rest_count(0));
f_6857r(t0,t1,t2,t3,t4);}}

static void C_ccall f_6857r(C_word t0,C_word t1,C_word t2,C_word t3,C_word t4){
C_word tmp;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word *a=C_alloc(12);
t5=(C_word)C_a_i_list(&a,1,C_SCHEME_TRUE);
t6=(C_word)C_block_size(t4);
t7=C_SCHEME_UNDEFINED;
t8=(*a=C_VECTOR_TYPE|1,a[1]=t7,tmp=(C_word)a,a+=2,tmp);
t9=C_set_block_item(t8,0,(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_6870,a[2]=t5,a[3]=t8,a[4]=t4,a[5]=t2,a[6]=((C_word)li55),tmp=(C_word)a,a+=7,tmp));
t10=((C_word*)t8)[1];
f_6870(t10,t1,C_fix(0),t3,t6,t5);}

/* do368 in steps in k5838 in k5545 in k5542 in k5538 in k5247 in k5244 in k5241 in k5238 */
static void C_fcall f_6870(C_word t0,C_word t1,C_word t2,C_word t3,C_word t4,C_word t5){
C_word tmp;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word ab[16],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_6870,NULL,6,t0,t1,t2,t3,t4,t5);}
t6=(*a=C_VECTOR_TYPE|1,a[1]=t3,tmp=(C_word)a,a+=2,tmp);
t7=(*a=C_VECTOR_TYPE|1,a[1]=t5,tmp=(C_word)a,a+=2,tmp);
if(C_truep((C_word)C_i_lessp(t2,((C_word*)t0)[5]))){
t8=(C_word)C_a_i_list(&a,1,((C_word*)t6)[1]);
t9=(C_word)C_i_set_cdr(((C_word*)t7)[1],t8);
t10=(C_word)C_i_cdr(((C_word*)t7)[1]);
t11=C_set_block_item(t7,0,t10);
t12=(*a=C_CLOSURE_TYPE|8,a[1]=(C_word)f_6906,a[2]=t7,a[3]=t4,a[4]=t1,a[5]=((C_word*)t0)[3],a[6]=t2,a[7]=t6,a[8]=((C_word*)t0)[4],tmp=(C_word)a,a+=9,tmp);
C_trace("ChickenBridge.scm: 362  modulo");
t13=*((C_word*)lf[96]+1);
((C_proc4)C_retrieve_proc(t13))(4,t13,t12,t2,t4);}
else{
t8=t1;
((C_proc2)(void*)(*((C_word*)t8+1)))(2,t8,(C_word)C_i_cdr(((C_word*)t0)[2]));}}

/* k6904 in do368 in steps in k5838 in k5545 in k5542 in k5538 in k5247 in k5244 in k5241 in k5238 */
static void C_ccall f_6906(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[8],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_6906,2,t0,t1);}
t2=(C_word)C_i_vector_ref(((C_word*)t0)[8],t1);
t3=(C_word)C_a_i_plus(&a,2,((C_word*)((C_word*)t0)[7])[1],t2);
t4=C_mutate(((C_word *)((C_word*)t0)[7])+1,t3);
t5=(C_word)C_a_i_plus(&a,2,((C_word*)t0)[6],C_fix(1));
t6=((C_word*)((C_word*)t0)[5])[1];
f_6870(t6,((C_word*)t0)[4],t5,((C_word*)((C_word*)t0)[7])[1],((C_word*)t0)[3],((C_word*)((C_word*)t0)[2])[1]);}

/* interp in k5838 in k5545 in k5542 in k5538 in k5247 in k5244 in k5241 in k5238 */
static void C_ccall f_6830(C_word c,C_word t0,C_word t1,C_word t2,...){
C_word tmp;
C_word t3;
va_list v;
C_word *a,c2=c;
C_save_rest(t2,c2,3);
if(c<3) C_bad_min_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_demand(c*C_SIZEOF_PAIR+0)){
C_save_and_reclaim((void*)tr3r,(void*)f_6830r,3,t0,t1,t2);}
else{
a=C_alloc((c-3)*3);
t3=C_restore_rest(a,C_rest_count(0));
f_6830r(t0,t1,t2,t3);}}

static void C_ccall f_6830r(C_word t0,C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
t4=(C_word)C_i_car(t3);
if(C_truep((C_word)C_i_pairp(t4))){
t5=(C_word)C_i_car(t3);
t6=(C_word)C_i_cdr(t3);
C_apply(6,0,t1,C_retrieve(lf[89]),t2,t5,t6);}
else{
C_trace("ChickenBridge.scm: 362  interpl");
t5=C_retrieve(lf[89]);
((C_proc4)C_retrieve_proc(t5))(4,t5,t1,t2,t3);}}

/* interpl in k5838 in k5545 in k5542 in k5538 in k5247 in k5244 in k5241 in k5238 */
static void C_ccall f_6735(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,...){
C_word tmp;
C_word t4;
va_list v;
C_word *a,c2=c;
C_save_rest(t3,c2,4);
if(c<4) C_bad_min_argc_2(c,4,t0);
C_check_for_interrupt;
if(!C_demand(c*C_SIZEOF_PAIR+6)){
C_save_and_reclaim((void*)tr4rv,(void*)f_6735r,4,t0,t1,t2,t3);}
else{
a=C_alloc((c-4)*3);
t4=C_restore_rest_vector(a,C_rest_count(0));
f_6735r(t0,t1,t2,t3,t4);}}

static void C_ccall f_6735r(C_word t0,C_word t1,C_word t2,C_word t3,C_word t4){
C_word tmp;
C_word t5;
C_word t6;
C_word *a=C_alloc(6);
t5=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_6739,a[2]=t1,a[3]=t2,a[4]=t3,a[5]=t4,tmp=(C_word)a,a+=6,tmp);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("ChickenBridge.scm: 362  error");
t6=*((C_word*)lf[6]+1);
((C_proc4)C_retrieve_proc(t6))(4,t6,t5,lf[93],t3);}
else{
t6=t5;
f_6739(2,t6,(C_word)C_i_car(t3));}}

/* k6737 in interpl in k5838 in k5545 in k5542 in k5538 in k5247 in k5244 in k5241 in k5238 */
static void C_ccall f_6739(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_6739,2,t0,t1);}
t2=t1;
t3=(*a=C_VECTOR_TYPE|1,a[1]=t2,tmp=(C_word)a,a+=2,tmp);
t4=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_6742,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=t3,tmp=(C_word)a,a+=7,tmp);
t5=(C_word)C_i_cdr(((C_word*)t0)[4]);
if(C_truep((C_word)C_i_nullp(t5))){
C_trace("ChickenBridge.scm: 362  err");
t6=C_retrieve(lf[91]);
((C_proc4)C_retrieve_proc(t6))(4,t6,t4,lf[92],((C_word*)t0)[4]);}
else{
t6=t4;
f_6742(2,t6,(C_word)C_i_cadr(((C_word*)t0)[4]));}}

/* k6740 in k6737 in interpl in k5838 in k5545 in k5542 in k5538 in k5247 in k5244 in k5241 in k5238 */
static void C_ccall f_6742(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word t14;
C_word ab[19],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_6742,2,t0,t1);}
t2=t1;
t3=(*a=C_VECTOR_TYPE|1,a[1]=t2,tmp=(C_word)a,a+=2,tmp);
t4=((C_word*)((C_word*)t0)[6])[1];
t5=(*a=C_VECTOR_TYPE|1,a[1]=t4,tmp=(C_word)a,a+=2,tmp);
t6=((C_word*)t3)[1];
t7=(*a=C_VECTOR_TYPE|1,a[1]=t6,tmp=(C_word)a,a+=2,tmp);
t8=(C_word)C_vemptyp(((C_word*)t0)[5]);
t9=(C_truep(t8)?C_fix(1):(C_word)C_i_vector_ref(((C_word*)t0)[5],C_fix(0)));
t10=(C_word)C_i_cddr(((C_word*)t0)[4]);
t11=C_SCHEME_UNDEFINED;
t12=(*a=C_VECTOR_TYPE|1,a[1]=t11,tmp=(C_word)a,a+=2,tmp);
t13=C_set_block_item(t12,0,(*a=C_CLOSURE_TYPE|10,a[1]=(C_word)f_6754,a[2]=((C_word*)t0)[4],a[3]=t12,a[4]=t9,a[5]=t7,a[6]=t3,a[7]=((C_word*)t0)[6],a[8]=((C_word*)t0)[3],a[9]=t5,a[10]=((C_word)li52),tmp=(C_word)a,a+=11,tmp));
t14=((C_word*)t12)[1];
f_6754(t14,((C_word*)t0)[2],t10);}

/* do352 in k6740 in k6737 in interpl in k5838 in k5545 in k5542 in k5538 in k5247 in k5244 in k5241 in k5238 */
static void C_fcall f_6754(C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word ab[5],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_6754,NULL,3,t0,t1,t2);}
t3=(C_word)C_i_nullp(t2);
t4=(C_truep(t3)?t3:(C_word)C_i_greaterp(((C_word*)((C_word*)t0)[9])[1],((C_word*)t0)[8]));
if(C_truep(t4)){
C_trace("ChickenBridge.scm: 362  tb:rescale");
f_6256(t1,((C_word*)t0)[8],((C_word*)((C_word*)t0)[7])[1],((C_word*)((C_word*)t0)[9])[1],((C_word*)((C_word*)t0)[6])[1],((C_word*)((C_word*)t0)[5])[1],((C_word*)t0)[4]);}
else{
t5=C_mutate(((C_word *)((C_word*)t0)[7])+1,((C_word*)((C_word*)t0)[9])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[6])+1,((C_word*)((C_word*)t0)[5])[1]);
t7=(C_word)C_i_car(t2);
t8=C_mutate(((C_word *)((C_word*)t0)[9])+1,t7);
t9=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_6776,a[2]=t1,a[3]=((C_word*)t0)[3],a[4]=t2,tmp=(C_word)a,a+=5,tmp);
t10=(C_word)C_i_cdr(t2);
if(C_truep((C_word)C_i_nullp(t10))){
C_trace("ChickenBridge.scm: 362  error");
t11=*((C_word*)lf[6]+1);
((C_proc4)C_retrieve_proc(t11))(4,t11,t9,lf[90],((C_word*)t0)[2]);}
else{
t11=(C_word)C_i_cadr(t2);
t12=C_mutate(((C_word *)((C_word*)t0)[5])+1,t11);
t13=t9;
f_6776(2,t13,t12);}}}

/* k6774 in do352 in k6740 in k6737 in interpl in k5838 in k5545 in k5542 in k5538 in k5247 in k5244 in k5241 in k5238 */
static void C_ccall f_6776(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word *a;
t2=(C_word)C_i_cddr(((C_word*)t0)[4]);
t3=((C_word*)((C_word*)t0)[3])[1];
f_6754(t3,((C_word*)t0)[2],t2);}

/* scaler->cents in k5838 in k5545 in k5542 in k5538 in k5247 in k5244 in k5241 in k5238 */
static void C_ccall f_6720(C_word c,C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word *a;
if(c!=3) C_bad_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr3,(void*)f_6720,3,t0,t1,t2);}
if(C_truep((C_word)C_i_listp(t2))){
C_trace("map");
t3=*((C_word*)lf[19]+1);
((C_proc4)(void*)(*((C_word*)t3+1)))(4,t3,t1,C_retrieve(lf[88]),t2);}
else{
t3=t1;
t4=t2;
t5=(C_word)C_i_foreign_flonum_argumentp(t4);
t6=t3;
((C_proc2)(void*)(*((C_word*)t6+1)))(2,t6,(C_word)stub216(C_SCHEME_UNDEFINED,t5));}}

/* cents->scaler in k5838 in k5545 in k5542 in k5538 in k5247 in k5244 in k5241 in k5238 */
static void C_ccall f_6705(C_word c,C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word ab[6],*a=ab;
if(c!=3) C_bad_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr3,(void*)f_6705,3,t0,t1,t2);}
if(C_truep((C_word)C_i_listp(t2))){
C_trace("map");
t3=*((C_word*)lf[19]+1);
((C_proc4)(void*)(*((C_word*)t3+1)))(4,t3,t1,C_retrieve(lf[87]),t2);}
else{
t3=t1;
t4=t2;
t5=(C_word)C_a_i_bytevector(&a,1,C_fix(4));
t6=(C_word)C_i_foreign_fixnum_argumentp(t4);
t7=t3;
((C_proc2)(void*)(*((C_word*)t7+1)))(2,t7,(C_word)stub211(t5,t6));}}

/* rhythm->seconds in k5838 in k5545 in k5542 in k5538 in k5247 in k5244 in k5241 in k5238 */
static void C_ccall f_6645(C_word c,C_word t0,C_word t1,C_word t2,...){
C_word tmp;
C_word t3;
va_list v;
C_word *a,c2=c;
C_save_rest(t2,c2,3);
if(c<3) C_bad_min_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_demand(c*C_SIZEOF_PAIR+12)){
C_save_and_reclaim((void*)tr3r,(void*)f_6645r,3,t0,t1,t2);}
else{
a=C_alloc((c-3)*3);
t3=C_restore_rest(a,C_rest_count(0));
f_6645r(t0,t1,t2,t3);}}

static void C_ccall f_6645r(C_word t0,C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word *a=C_alloc(12);
t4=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_6647,a[2]=t2,a[3]=((C_word)li46),tmp=(C_word)a,a+=4,tmp);
t5=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_6652,a[2]=t4,a[3]=((C_word)li47),tmp=(C_word)a,a+=4,tmp);
t6=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_6657,a[2]=t5,a[3]=((C_word)li48),tmp=(C_word)a,a+=4,tmp);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("def-tempo328336");
t7=t6;
f_6657(t7,t1);}
else{
t7=(C_word)C_i_car(t3);
t8=(C_word)C_i_cdr(t3);
if(C_truep((C_word)C_i_nullp(t8))){
C_trace("def-beat329334");
t9=t5;
f_6652(t9,t1,t7);}
else{
t9=(C_word)C_i_car(t8);
t10=(C_word)C_i_cdr(t8);
if(C_truep((C_word)C_i_nullp(t10))){
C_trace("body326331");
t11=t4;
f_6647(t11,t1,t7,t9);}
else{
C_trace("##sys#error");
t11=*((C_word*)lf[86]+1);
((C_proc4)(void*)(*((C_word*)t11+1)))(4,t11,t1,lf[0],t10);}}}}

/* def-tempo328 in rhythm->seconds in k5838 in k5545 in k5542 in k5538 in k5247 in k5244 in k5241 in k5238 */
static void C_fcall f_6657(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_6657,NULL,2,t0,t1);}
C_trace("def-beat329334");
t2=((C_word*)t0)[2];
f_6652(t2,t1,lf[85]);}

/* def-beat329 in rhythm->seconds in k5838 in k5545 in k5542 in k5538 in k5247 in k5244 in k5241 in k5238 */
static void C_fcall f_6652(C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word *a;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_6652,NULL,3,t0,t1,t2);}
C_trace("body326331");
t3=((C_word*)t0)[2];
f_6647(t3,t1,t2,lf[84]);}

/* body326 in rhythm->seconds in k5838 in k5545 in k5542 in k5538 in k5247 in k5244 in k5241 in k5238 */
static void C_fcall f_6647(C_word t0,C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word ab[6],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_6647,NULL,4,t0,t1,t2,t3);}
t4=((C_word*)t0)[2];
t5=(C_word)C_a_i_bytevector(&a,1,C_fix(4));
t6=(C_word)C_i_foreign_flonum_argumentp(t4);
t7=(C_word)C_i_foreign_flonum_argumentp(t2);
t8=(C_word)C_i_foreign_flonum_argumentp(t3);
t9=t1;
((C_proc2)(void*)(*((C_word*)t9+1)))(2,t9,(C_word)stub204(t5,t6,t7,t8));}

/* decimals in k5838 in k5545 in k5542 in k5538 in k5247 in k5244 in k5241 in k5238 */
static void C_ccall f_6626(C_word c,C_word t0,C_word t1,C_word t2,...){
C_word tmp;
C_word t3;
va_list v;
C_word *a,c2=c;
C_save_rest(t2,c2,3);
if(c<3) C_bad_min_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_demand(c*C_SIZEOF_PAIR+0)){
C_save_and_reclaim((void*)tr3rv,(void*)f_6626r,3,t0,t1,t2);}
else{
a=C_alloc((c-3)*3);
t3=C_restore_rest_vector(a,C_rest_count(0));
f_6626r(t0,t1,t2,t3);}}

static void C_ccall f_6626r(C_word t0,C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
if(C_truep((C_word)C_vemptyp(t3))){
C_trace("ChickenBridge.scm: 362  tb:decimals");
f_6317(t1,t2,C_fix(3));}
else{
t4=(C_word)C_i_vector_ref(t3,C_fix(0));
C_trace("ChickenBridge.scm: 362  tb:decimals");
f_6317(t1,t2,t4);}}

/* quantize in k5838 in k5545 in k5542 in k5538 in k5247 in k5244 in k5241 in k5238 */
static void C_ccall f_6620(C_word c,C_word t0,C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word ab[6],*a=ab;
if(c!=4) C_bad_argc_2(c,4,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr4,(void*)f_6620,4,t0,t1,t2,t3);}
t4=(C_word)C_a_i_bytevector(&a,1,C_fix(4));
t5=(C_word)C_i_foreign_flonum_argumentp(t2);
t6=(C_word)C_i_foreign_flonum_argumentp(t3);
t7=t1;
((C_proc2)(void*)(*((C_word*)t7+1)))(2,t7,(C_word)stub196(t4,t5,t6));}

/* int in k5838 in k5545 in k5542 in k5538 in k5247 in k5244 in k5241 in k5238 */
static void C_ccall f_6605(C_word c,C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word *a;
if(c!=3) C_bad_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr3,(void*)f_6605,3,t0,t1,t2);}
if(C_truep((C_word)C_i_listp(t2))){
C_trace("map");
t3=*((C_word*)lf[19]+1);
((C_proc4)(void*)(*((C_word*)t3+1)))(4,t3,t1,C_retrieve(lf[80]),t2);}
else{
t3=t1;
t4=t2;
t5=(C_word)C_i_foreign_flonum_argumentp(t4);
t6=t3;
((C_proc2)(void*)(*((C_word*)t6+1)))(2,t6,(C_word)stub184(C_SCHEME_UNDEFINED,t5));}}

/* discrete in k5838 in k5545 in k5542 in k5538 in k5247 in k5244 in k5241 in k5238 */
static void C_ccall f_6523(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4,C_word t5,...){
C_word tmp;
C_word t6;
va_list v;
C_word *a,c2=c;
C_save_rest(t5,c2,6);
if(c<6) C_bad_min_argc_2(c,6,t0);
C_check_for_interrupt;
if(!C_demand(c*C_SIZEOF_PAIR+4)){
C_save_and_reclaim((void*)tr6r,(void*)f_6523r,6,t0,t1,t2,t3,t4,t5);}
else{
a=C_alloc((c-6)*3);
t6=C_restore_rest(a,C_rest_count(0));
f_6523r(t0,t1,t2,t3,t4,t5,t6);}}

static void C_ccall f_6523r(C_word t0,C_word t1,C_word t2,C_word t3,C_word t4,C_word t5,C_word t6){
C_word tmp;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word t14;
C_word t15;
C_word t16;
C_word t17;
C_word *a=C_alloc(4);
if(C_truep((C_word)C_i_pairp(t5))){
t7=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_6537,a[2]=t5,a[3]=t1,tmp=(C_word)a,a+=4,tmp);
if(C_truep((C_word)C_i_nullp(t6))){
t8=(C_word)C_i_length(t5);
C_trace("ChickenBridge.scm: 362  tb:discrete");
f_6283(t7,t2,t3,t4,C_fix(0),t8,C_fix(1));}
else{
t8=(C_word)C_i_cdr(t6);
if(C_truep((C_word)C_i_nullp(t8))){
t9=(C_word)C_i_car(t6);
C_trace("ChickenBridge.scm: 362  tb:discrete");
f_6283(t7,t2,t3,t4,C_fix(0),t9,C_fix(1));}
else{
t9=(C_word)C_i_car(t6);
t10=(C_word)C_i_cadr(t6);
C_trace("ChickenBridge.scm: 362  tb:discrete");
f_6283(t7,t2,t3,t4,C_fix(0),t9,t10);}}}
else{
t7=(C_word)C_i_cdr(t6);
if(C_truep((C_word)C_i_nullp(t7))){
t8=(C_word)C_i_car(t6);
C_trace("ChickenBridge.scm: 362  tb:discrete");
f_6283(t1,t2,t3,t4,t5,t8,C_fix(1));}
else{
t8=(C_word)C_i_car(t6);
t9=(C_word)C_i_cadr(t6);
C_trace("ChickenBridge.scm: 362  tb:discrete");
f_6283(t1,t2,t3,t4,t5,t8,t9);}}}

/* k6535 in discrete in k5838 in k5545 in k5542 in k5538 in k5247 in k5244 in k5241 in k5238 */
static void C_ccall f_6537(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
t2=((C_word*)t0)[3];
((C_proc2)(void*)(*((C_word*)t2+1)))(2,t2,(C_word)C_i_list_ref(((C_word*)t0)[2],t1));}

/* rescale in k5838 in k5545 in k5542 in k5538 in k5247 in k5244 in k5241 in k5238 */
static void C_ccall f_6489(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4,C_word t5,C_word t6,...){
C_word tmp;
C_word t7;
va_list v;
C_word *a,c2=c;
C_save_rest(t6,c2,7);
if(c<7) C_bad_min_argc_2(c,7,t0);
C_check_for_interrupt;
if(!C_demand(c*C_SIZEOF_PAIR+8)){
C_save_and_reclaim((void*)tr7r,(void*)f_6489r,7,t0,t1,t2,t3,t4,t5,t6);}
else{
a=C_alloc((c-7)*3);
t7=C_restore_rest(a,C_rest_count(0));
f_6489r(t0,t1,t2,t3,t4,t5,t6,t7);}}

static void C_ccall f_6489r(C_word t0,C_word t1,C_word t2,C_word t3,C_word t4,C_word t5,C_word t6,C_word t7){
C_word tmp;
C_word t8;
C_word t9;
C_word t10;
C_word *a=C_alloc(8);
if(C_truep((C_word)C_i_listp(t2))){
t8=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_6501,a[2]=t7,a[3]=t6,a[4]=t5,a[5]=t4,a[6]=t3,a[7]=((C_word)li40),tmp=(C_word)a,a+=8,tmp);
C_trace("map");
t9=*((C_word*)lf[19]+1);
((C_proc4)(void*)(*((C_word*)t9+1)))(4,t9,t1,t8,t2);}
else{
if(C_truep((C_word)C_i_nullp(t7))){
C_trace("ChickenBridge.scm: 362  tb:rescale");
f_6256(t1,t2,t3,t4,t5,t6,C_fix(1));}
else{
t8=(C_word)C_i_car(t7);
C_trace("ChickenBridge.scm: 362  tb:rescale");
f_6256(t1,t2,t3,t4,t5,t6,t8);}}}

/* a6500 in rescale in k5838 in k5545 in k5542 in k5538 in k5247 in k5244 in k5241 in k5238 */
static void C_ccall f_6501(C_word c,C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word *a;
if(c!=3) C_bad_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr3,(void*)f_6501,3,t0,t1,t2);}
C_apply(9,0,t1,C_retrieve(lf[78]),t2,((C_word*)t0)[6],((C_word*)t0)[5],((C_word*)t0)[4],((C_word*)t0)[3],((C_word*)t0)[2]);}

/* tb:ranpoisson in k5838 in k5545 in k5542 in k5538 in k5247 in k5244 in k5241 in k5238 */
static void C_fcall f_6476(C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word *a;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_6476,NULL,2,t1,t2);}
t3=(C_word)C_i_foreign_flonum_argumentp(t2);
t4=t1;
((C_proc2)(void*)(*((C_word*)t4+1)))(2,t4,(C_word)stub296(C_SCHEME_UNDEFINED,t3));}

/* tb:rangamma in k5838 in k5545 in k5542 in k5538 in k5247 in k5244 in k5241 in k5238 */
static void C_fcall f_6466(C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word t5;
C_word ab[6],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_6466,NULL,2,t1,t2);}
t3=(C_word)C_a_i_bytevector(&a,1,C_fix(4));
t4=(C_word)C_i_foreign_flonum_argumentp(t2);
t5=t1;
((C_proc2)(void*)(*((C_word*)t5+1)))(2,t5,(C_word)stub288(t3,t4));}

/* tb:ranexp in k5838 in k5545 in k5542 in k5538 in k5247 in k5244 in k5241 in k5238 */
static void C_fcall f_6448(C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word t5;
C_word ab[6],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_6448,NULL,2,t1,t2);}
t3=(C_word)C_a_i_bytevector(&a,1,C_fix(4));
t4=(C_word)C_i_foreign_flonum_argumentp(t2);
t5=t1;
((C_proc2)(void*)(*((C_word*)t5+1)))(2,t5,(C_word)stub276(t3,t4));}

/* tb:rangauss in k5838 in k5545 in k5542 in k5538 in k5247 in k5244 in k5241 in k5238 */
static void C_fcall f_6437(C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word ab[6],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_6437,NULL,3,t1,t2,t3);}
t4=(C_word)C_a_i_bytevector(&a,1,C_fix(4));
t5=(C_word)C_i_foreign_flonum_argumentp(t2);
t6=(C_word)C_i_foreign_flonum_argumentp(t3);
t7=t1;
((C_proc2)(void*)(*((C_word*)t7+1)))(2,t7,(C_word)stub270(t4,t5,t6));}

/* tb:ranf in k5838 in k5545 in k5542 in k5538 in k5247 in k5244 in k5241 in k5238 */
static void C_fcall f_6399(C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word t5;
C_word ab[6],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_6399,NULL,2,t1,t2);}
t3=(C_word)C_a_i_bytevector(&a,1,C_fix(4));
t4=(C_word)C_i_foreign_flonum_argumentp(t2);
t5=t1;
((C_proc2)(void*)(*((C_word*)t5+1)))(2,t5,(C_word)stub242(t3,t4));}

/* tb:rani in k5838 in k5545 in k5542 in k5538 in k5247 in k5244 in k5241 in k5238 */
static void C_fcall f_6392(C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word *a;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_6392,NULL,2,t1,t2);}
t3=(C_word)C_i_foreign_fixnum_argumentp(t2);
t4=t1;
((C_proc2)(void*)(*((C_word*)t4+1)))(2,t4,(C_word)stub238(C_SCHEME_UNDEFINED,t3));}

/* tb:keynum->hertz in k5838 in k5545 in k5542 in k5538 in k5247 in k5244 in k5241 in k5238 */
static void C_fcall f_6368(C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word t5;
C_word ab[6],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_6368,NULL,2,t1,t2);}
t3=(C_word)C_a_i_bytevector(&a,1,C_fix(4));
t4=(C_word)C_i_foreign_flonum_argumentp(t2);
t5=t1;
((C_proc2)(void*)(*((C_word*)t5+1)))(2,t5,(C_word)stub220(t3,t4));}

/* tb:decimals in k5838 in k5545 in k5542 in k5538 in k5247 in k5244 in k5241 in k5238 */
static void C_fcall f_6317(C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word ab[6],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_6317,NULL,3,t1,t2,t3);}
t4=(C_word)C_a_i_bytevector(&a,1,C_fix(4));
t5=(C_word)C_i_foreign_flonum_argumentp(t2);
t6=(C_word)C_i_foreign_fixnum_argumentp(t3);
t7=t1;
((C_proc2)(void*)(*((C_word*)t7+1)))(2,t7,(C_word)stub189(t4,t5,t6));}

/* tb:discrete in k5838 in k5545 in k5542 in k5538 in k5247 in k5244 in k5241 in k5238 */
static void C_fcall f_6283(C_word t1,C_word t2,C_word t3,C_word t4,C_word t5,C_word t6,C_word t7){
C_word tmp;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word t14;
C_word *a;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_6283,NULL,7,t1,t2,t3,t4,t5,t6,t7);}
t8=(C_word)C_i_foreign_flonum_argumentp(t2);
t9=(C_word)C_i_foreign_flonum_argumentp(t3);
t10=(C_word)C_i_foreign_flonum_argumentp(t4);
t11=(C_word)C_i_foreign_fixnum_argumentp(t5);
t12=(C_word)C_i_foreign_fixnum_argumentp(t6);
t13=(C_word)C_i_foreign_flonum_argumentp(t7);
t14=t1;
((C_proc2)(void*)(*((C_word*)t14+1)))(2,t14,(C_word)stub175(C_SCHEME_UNDEFINED,t8,t9,t10,t11,t12,t13));}

/* tb:rescale in k5838 in k5545 in k5542 in k5538 in k5247 in k5244 in k5241 in k5238 */
static void C_fcall f_6256(C_word t1,C_word t2,C_word t3,C_word t4,C_word t5,C_word t6,C_word t7){
C_word tmp;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word t14;
C_word t15;
C_word ab[6],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_6256,NULL,7,t1,t2,t3,t4,t5,t6,t7);}
t8=(C_word)C_a_i_bytevector(&a,1,C_fix(4));
t9=(C_word)C_i_foreign_flonum_argumentp(t2);
t10=(C_word)C_i_foreign_flonum_argumentp(t3);
t11=(C_word)C_i_foreign_flonum_argumentp(t4);
t12=(C_word)C_i_foreign_flonum_argumentp(t5);
t13=(C_word)C_i_foreign_flonum_argumentp(t6);
t14=(C_word)C_i_foreign_flonum_argumentp(t7);
t15=t1;
((C_proc2)(void*)(*((C_word*)t15+1)))(2,t15,(C_word)stub160(t8,t9,t10,t11,t12,t13,t14));}

/* bitwise-test in k5838 in k5545 in k5542 in k5538 in k5247 in k5244 in k5241 in k5238 */
static void C_fcall f_6215(C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word ab[12],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_6215,NULL,3,t1,t2,t3);}
t4=(*a=C_VECTOR_TYPE|1,a[1]=t2,tmp=(C_word)a,a+=2,tmp);
t5=(*a=C_VECTOR_TYPE|1,a[1]=t3,tmp=(C_word)a,a+=2,tmp);
t6=C_SCHEME_UNDEFINED;
t7=(*a=C_VECTOR_TYPE|1,a[1]=t6,tmp=(C_word)a,a+=2,tmp);
t8=C_set_block_item(t7,0,(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_6221,a[2]=t7,a[3]=t4,a[4]=t5,a[5]=((C_word)li28),tmp=(C_word)a,a+=6,tmp));
t9=((C_word*)t7)[1];
f_6221(t9,t1,C_SCHEME_FALSE);}

/* do128 in bitwise-test in k5838 in k5545 in k5542 in k5538 in k5247 in k5244 in k5241 in k5238 */
static void C_fcall f_6221(C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_6221,NULL,3,t0,t1,t2);}
t3=(*a=C_VECTOR_TYPE|1,a[1]=t2,tmp=(C_word)a,a+=2,tmp);
if(C_truep((C_word)C_i_nequalp(((C_word*)((C_word*)t0)[4])[1],C_fix(0)))){
t4=t1;
((C_proc2)(void*)(*((C_word*)t4+1)))(2,t4,((C_word*)t3)[1]);}
else{
t4=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_6231,a[2]=t3,a[3]=t1,a[4]=((C_word*)t0)[2],a[5]=((C_word*)t0)[4],a[6]=((C_word*)t0)[3],tmp=(C_word)a,a+=7,tmp);
if(C_truep((C_word)C_i_bit_setp(((C_word*)((C_word*)t0)[4])[1],C_fix(0)))){
if(C_truep((C_word)C_i_bit_setp(((C_word*)((C_word*)t0)[3])[1],C_fix(0)))){
t5=C_set_block_item(t3,0,C_SCHEME_TRUE);
t6=t4;
f_6231(t6,t5);}
else{
t5=C_set_block_item(t3,0,C_SCHEME_FALSE);
t6=C_set_block_item(((C_word*)t0)[4],0,C_fix(0));
t7=t4;
f_6231(t7,t6);}}
else{
t5=t4;
f_6231(t5,C_SCHEME_UNDEFINED);}}}

/* k6229 in do128 in bitwise-test in k5838 in k5545 in k5542 in k5538 in k5247 in k5244 in k5241 in k5238 */
static void C_fcall f_6231(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[8],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_6231,NULL,2,t0,t1);}
t2=(C_word)C_a_i_arithmetic_shift(&a,2,((C_word*)((C_word*)t0)[6])[1],C_fix(-1));
t3=C_mutate(((C_word *)((C_word*)t0)[6])+1,t2);
t4=(C_word)C_a_i_arithmetic_shift(&a,2,((C_word*)((C_word*)t0)[5])[1],C_fix(-1));
t5=C_mutate(((C_word *)((C_word*)t0)[5])+1,t4);
t6=((C_word*)((C_word*)t0)[4])[1];
f_6221(t6,((C_word*)t0)[3],((C_word*)((C_word*)t0)[2])[1]);}

/* list-prop in k5838 in k5545 in k5542 in k5538 in k5247 in k5244 in k5241 in k5238 */
static void C_ccall f_6129(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,...){
C_word tmp;
C_word t4;
va_list v;
C_word *a,c2=c;
C_save_rest(t3,c2,4);
if(c<4) C_bad_min_argc_2(c,4,t0);
C_check_for_interrupt;
if(!C_demand(c*C_SIZEOF_PAIR+0)){
C_save_and_reclaim((void*)tr4r,(void*)f_6129r,4,t0,t1,t2,t3);}
else{
a=C_alloc((c-4)*3);
t4=C_restore_rest(a,C_rest_count(0));
f_6129r(t0,t1,t2,t3,t4);}}

static void C_ccall f_6129r(C_word t0,C_word t1,C_word t2,C_word t3,C_word t4){
C_word tmp;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
if(C_truep((C_word)C_i_nullp(t2))){
t5=(C_word)C_i_nullp(t4);
t6=t1;
((C_proc2)(void*)(*((C_word*)t6+1)))(2,t6,(C_truep(t5)?C_SCHEME_FALSE:(C_word)C_i_car(t4)));}
else{
t5=(C_word)C_i_car(t2);
t6=(C_word)C_eqp(t5,t3);
if(C_truep(t6)){
t7=t1;
((C_proc2)(void*)(*((C_word*)t7+1)))(2,t7,(C_word)C_i_cadr(t2));}
else{
t7=(C_word)C_i_cddr(t2);
C_apply(6,0,t1,C_retrieve2(lf[66],"list-prop"),t7,t3,t4);}}}

/* list-set! in k5838 in k5545 in k5542 in k5538 in k5247 in k5244 in k5241 in k5238 */
static void C_fcall f_6071(C_word t1,C_word t2,C_word t3,C_word t4){
C_word tmp;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_6071,NULL,4,t1,t2,t3,t4);}
t5=(C_word)C_i_list_tail(t2,t3);
t6=(C_word)C_i_set_car(t5,t4);
t7=t1;
((C_proc2)(void*)(*((C_word*)t7+1)))(2,t7,t4);}

/* list* in k5838 in k5545 in k5542 in k5538 in k5247 in k5244 in k5241 in k5238 */
static void C_ccall f_6031(C_word c,C_word t0,C_word t1,...){
C_word tmp;
C_word t2;
va_list v;
C_word *a,c2=c;
C_save_rest(t1,c2,2);
C_check_for_interrupt;
if(!C_demand(c*C_SIZEOF_PAIR+4)){
C_save_and_reclaim((void*)tr2r,(void*)f_6031r,2,t0,t1);}
else{
a=C_alloc((c-2)*3);
t2=C_restore_rest(a,C_rest_count(0));
f_6031r(t0,t1,t2);}}

static void C_ccall f_6031r(C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a=C_alloc(4);
if(C_truep((C_word)C_i_nullp(t2))){
C_trace("ChickenBridge.scm: 361  error");
t3=*((C_word*)lf[6]+1);
((C_proc3)C_retrieve_proc(t3))(3,t3,t1,lf[64]);}
else{
t3=(C_word)C_i_cdr(t2);
if(C_truep((C_word)C_i_nullp(t3))){
t4=t1;
((C_proc2)(void*)(*((C_word*)t4+1)))(2,t4,(C_word)C_i_car(t2));}
else{
t4=(C_word)C_i_car(t2);
t5=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_6061,a[2]=t4,a[3]=t1,tmp=(C_word)a,a+=4,tmp);
t6=(C_word)C_i_cdr(t2);
C_apply(4,0,t5,C_retrieve(lf[63]),t6);}}}

/* k6059 in list* in k5838 in k5545 in k5542 in k5538 in k5247 in k5244 in k5241 in k5238 */
static void C_ccall f_6061(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word ab[3],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_6061,2,t0,t1);}
t2=((C_word*)t0)[3];
((C_proc2)(void*)(*((C_word*)t2+1)))(2,t2,(C_word)C_a_i_cons(&a,2,((C_word*)t0)[2],t1));}

/* butlast in k5838 in k5545 in k5542 in k5538 in k5247 in k5244 in k5241 in k5238 */
static void C_ccall f_5983(C_word c,C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word ab[7],*a=ab;
if(c!=3) C_bad_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr3,(void*)f_5983,3,t0,t1,t2);}
t3=(C_word)C_i_cdr(t2);
if(C_truep((C_word)C_i_nullp(t3))){
t4=t1;
((C_proc2)(void*)(*((C_word*)t4+1)))(2,t4,C_SCHEME_END_OF_LIST);}
else{
t4=(C_word)C_i_cddr(t2);
if(C_truep((C_word)C_i_nullp(t4))){
t5=(C_word)C_i_car(t2);
t6=t1;
((C_proc2)(void*)(*((C_word*)t6+1)))(2,t6,(C_word)C_a_i_list(&a,1,t5));}
else{
t5=(C_word)C_i_car(t2);
t6=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_6017,a[2]=t5,a[3]=t1,tmp=(C_word)a,a+=4,tmp);
t7=(C_word)C_i_cdr(t2);
C_trace("ChickenBridge.scm: 361  butlast");
t8=C_retrieve(lf[62]);
((C_proc3)C_retrieve_proc(t8))(3,t8,t6,t7);}}}

/* k6015 in butlast in k5838 in k5545 in k5542 in k5538 in k5247 in k5244 in k5241 in k5238 */
static void C_ccall f_6017(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word ab[3],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_6017,2,t0,t1);}
t2=((C_word*)t0)[3];
((C_proc2)(void*)(*((C_word*)t2+1)))(2,t2,(C_word)C_a_i_cons(&a,2,((C_word*)t0)[2],t1));}

/* last in k5838 in k5545 in k5542 in k5538 in k5247 in k5244 in k5241 in k5238 */
static void C_ccall f_5960(C_word c,C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word t5;
C_word *a;
if(c!=3) C_bad_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr3,(void*)f_5960,3,t0,t1,t2);}
t3=(C_word)C_i_cdr(t2);
if(C_truep((C_word)C_i_nullp(t3))){
t4=t1;
((C_proc2)(void*)(*((C_word*)t4+1)))(2,t4,(C_word)C_i_car(t2));}
else{
t4=(C_word)C_i_cdr(t2);
C_trace("ChickenBridge.scm: 361  last");
t5=C_retrieve(lf[61]);
((C_proc3)C_retrieve_proc(t5))(3,t5,t1,t4);}}

/* tenth in k5838 in k5545 in k5542 in k5538 in k5247 in k5244 in k5241 in k5238 */
static void C_ccall f_5940(C_word c,C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word t5;
C_word *a;
if(c!=3) C_bad_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr3,(void*)f_5940,3,t0,t1,t2);}
t3=(C_word)C_i_cddddr(t2);
t4=(C_word)C_i_cddddr(t3);
t5=t1;
((C_proc2)(void*)(*((C_word*)t5+1)))(2,t5,(C_word)C_i_cadr(t4));}

/* ninth in k5838 in k5545 in k5542 in k5538 in k5247 in k5244 in k5241 in k5238 */
static void C_ccall f_5926(C_word c,C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word t5;
C_word *a;
if(c!=3) C_bad_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr3,(void*)f_5926,3,t0,t1,t2);}
t3=(C_word)C_i_cddddr(t2);
t4=(C_word)C_i_cddddr(t3);
t5=t1;
((C_proc2)(void*)(*((C_word*)t5+1)))(2,t5,(C_word)C_i_car(t4));}

/* eighth in k5838 in k5545 in k5542 in k5538 in k5247 in k5244 in k5241 in k5238 */
static void C_ccall f_5916(C_word c,C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word *a;
if(c!=3) C_bad_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr3,(void*)f_5916,3,t0,t1,t2);}
t3=(C_word)C_i_cddddr(t2);
t4=t1;
((C_proc2)(void*)(*((C_word*)t4+1)))(2,t4,(C_word)C_i_cadddr(t3));}

/* seventh in k5838 in k5545 in k5542 in k5538 in k5247 in k5244 in k5241 in k5238 */
static void C_ccall f_5906(C_word c,C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word *a;
if(c!=3) C_bad_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr3,(void*)f_5906,3,t0,t1,t2);}
t3=(C_word)C_i_cddddr(t2);
t4=t1;
((C_proc2)(void*)(*((C_word*)t4+1)))(2,t4,(C_word)C_i_caddr(t3));}

/* sixth in k5838 in k5545 in k5542 in k5538 in k5247 in k5244 in k5241 in k5238 */
static void C_ccall f_5896(C_word c,C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word *a;
if(c!=3) C_bad_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr3,(void*)f_5896,3,t0,t1,t2);}
t3=(C_word)C_i_cddddr(t2);
t4=t1;
((C_proc2)(void*)(*((C_word*)t4+1)))(2,t4,(C_word)C_i_cadr(t3));}

/* fifth in k5838 in k5545 in k5542 in k5538 in k5247 in k5244 in k5241 in k5238 */
static void C_ccall f_5886(C_word c,C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word *a;
if(c!=3) C_bad_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr3,(void*)f_5886,3,t0,t1,t2);}
t3=(C_word)C_i_cddddr(t2);
t4=t1;
((C_proc2)(void*)(*((C_word*)t4+1)))(2,t4,(C_word)C_i_car(t3));}

/* chdir in k5838 in k5545 in k5542 in k5538 in k5247 in k5244 in k5241 in k5238 */
static void C_ccall f_5853(C_word c,C_word t0,C_word t1,...){
C_word tmp;
C_word t2;
va_list v;
C_word *a,c2=c;
C_save_rest(t1,c2,2);
C_check_for_interrupt;
if(!C_demand(c*C_SIZEOF_PAIR+3)){
C_save_and_reclaim((void*)tr2rv,(void*)f_5853r,2,t0,t1);}
else{
a=C_alloc((c-2)*3);
t2=C_restore_rest_vector(a,C_rest_count(0));
f_5853r(t0,t1,t2);}}

static void C_ccall f_5853r(C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word t5;
C_word *a=C_alloc(3);
t3=(C_word)C_vemptyp(t2);
t4=(C_truep(t3)?lf[47]:(C_word)C_i_vector_ref(t2,C_fix(0)));
t5=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_5862,a[2]=((C_word)li15),tmp=(C_word)a,a+=3,tmp);
((C_proc3)(void*)(*((C_word*)t5+1)))(3,t5,t1,t4);}

/* f_5862 in chdir in k5838 in k5545 in k5542 in k5538 in k5247 in k5244 in k5241 in k5238 */
static void C_ccall f_5862(C_word c,C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word t5;
C_word ab[3],*a=ab;
if(c!=3) C_bad_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr3,(void*)f_5862,3,t0,t1,t2);}
t3=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_5867,a[2]=t1,tmp=(C_word)a,a+=3,tmp);
if(C_truep(t2)){
t4=(C_word)C_i_foreign_string_argumentp(t2);
C_trace("##sys#make-c-string");
t5=C_retrieve(lf[48]);
((C_proc3)C_retrieve_proc(t5))(3,t5,t3,t4);}
else{
t4=t3;
f_5867(2,t4,C_SCHEME_FALSE);}}

/* k5865 */
static void C_ccall f_5867(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
t2=((C_word*)t0)[2];
((C_proc2)(void*)(*((C_word*)t2+1)))(2,t2,(C_word)stub95(C_SCHEME_UNDEFINED,t1));}

/* cwd in k5838 in k5545 in k5542 in k5538 in k5247 in k5244 in k5241 in k5238 */
static void C_ccall f_5842(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word ab[3],*a=ab;
if(c!=2) C_bad_argc_2(c,2,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_5842,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_5847,a[2]=((C_word)li13),tmp=(C_word)a,a+=3,tmp);
((C_proc2)(void*)(*((C_word*)t2+1)))(2,t2,t1);}

/* f_5847 in cwd in k5838 in k5545 in k5542 in k5538 in k5247 in k5244 in k5241 in k5238 */
static void C_ccall f_5847(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[5],*a=ab;
if(c!=2) C_bad_argc_2(c,2,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_5847,2,t0,t1);}
t2=(C_word)C_a_i_bytevector(&a,1,C_fix(3));
C_trace("##sys#peek-c-string");
t3=*((C_word*)lf[45]+1);
((C_proc4)(void*)(*((C_word*)t3+1)))(4,t3,t1,(C_word)stub90(t2),C_fix(0));}

/* expand-send in k5545 in k5542 in k5538 in k5247 in k5244 in k5241 in k5238 */
static void C_ccall f_5549(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4){
C_word tmp;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word ab[17],*a=ab;
if(c!=5) C_bad_argc_2(c,5,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr5,(void*)f_5549,5,t0,t1,t2,t3,t4);}
t5=(*a=C_VECTOR_TYPE|1,a[1]=t3,tmp=(C_word)a,a+=2,tmp);
t6=t4;
t7=(C_truep(t6)?t6:(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_5829,a[2]=((C_word)li5),tmp=(C_word)a,a+=3,tmp));
t8=t4;
t9=(C_truep(t8)?(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_5818,a[2]=((C_word)li6),tmp=(C_word)a,a+=3,tmp):(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_5827,a[2]=((C_word)li7),tmp=(C_word)a,a+=3,tmp));
t10=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_5559,a[2]=t9,a[3]=t7,a[4]=t1,a[5]=t5,tmp=(C_word)a,a+=6,tmp);
if(C_truep((C_word)C_i_symbolp(t2))){
C_trace("ChickenBridge.scm: 267  symbol->string");
t11=*((C_word*)lf[27]+1);
((C_proc3)C_retrieve_proc(t11))(3,t11,t10,t2);}
else{
t11=t10;
f_5559(2,t11,t2);}}

/* k5557 in expand-send in k5545 in k5542 in k5538 in k5247 in k5244 in k5241 in k5238 */
static void C_ccall f_5559(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[10],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_5559,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_5562,a[2]=((C_word*)t0)[2],a[3]=t1,a[4]=((C_word*)t0)[3],a[5]=((C_word*)t0)[4],a[6]=((C_word*)t0)[5],tmp=(C_word)a,a+=7,tmp);
t3=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_5810,a[2]=((C_word)li11),tmp=(C_word)a,a+=3,tmp);
C_trace("ChickenBridge.scm: 268  hash-table-ref");
t4=*((C_word*)lf[43]+1);
((C_proc5)C_retrieve_proc(t4))(5,t4,t2,C_retrieve(lf[31]),t1,t3);}

/* a5809 in k5557 in expand-send in k5545 in k5542 in k5538 in k5247 in k5244 in k5241 in k5238 */
static void C_ccall f_5810(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
if(c!=2) C_bad_argc_2(c,2,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_5810,2,t0,t1);}
t2=t1;
((C_proc2)(void*)(*((C_word*)t2+1)))(2,t2,C_SCHEME_FALSE);}

/* k5560 in k5557 in expand-send in k5545 in k5542 in k5538 in k5247 in k5244 in k5241 in k5238 */
static void C_ccall f_5562(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[8],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_5562,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_5565,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=t1,a[7]=((C_word*)t0)[6],tmp=(C_word)a,a+=8,tmp);
t3=t1;
if(C_truep(t3)){
t4=t2;
f_5565(2,t4,C_SCHEME_UNDEFINED);}
else{
C_trace("ChickenBridge.scm: 269  ferror");
t4=((C_word*)t0)[4];
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[42],((C_word*)t0)[3]);}}

/* k5563 in k5560 in k5557 in expand-send in k5545 in k5542 in k5538 in k5247 in k5244 in k5241 in k5238 */
static void C_ccall f_5565(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word ab[14],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_5565,2,t0,t1);}
t2=((C_word*)((C_word*)t0)[7])[1];
t3=(C_word)C_i_car(((C_word*)t0)[6]);
t4=(C_word)C_i_cdr(((C_word*)t0)[6]);
t5=C_SCHEME_FALSE;
t6=(*a=C_VECTOR_TYPE|1,a[1]=t5,tmp=(C_word)a,a+=2,tmp);
t7=(C_word)C_i_length(t4);
t8=(*a=C_CLOSURE_TYPE|11,a[1]=(C_word)f_5580,a[2]=t2,a[3]=t7,a[4]=((C_word*)t0)[2],a[5]=((C_word*)t0)[3],a[6]=((C_word*)t0)[4],a[7]=t6,a[8]=t4,a[9]=((C_word*)t0)[7],a[10]=t3,a[11]=((C_word*)t0)[5],tmp=(C_word)a,a+=12,tmp);
if(C_truep((C_word)C_i_nequalp(t7,C_fix(1)))){
t9=(C_word)C_i_car(t4);
t10=t8;
f_5580(t10,(C_word)C_eqp(t9,lf[41]));}
else{
t9=t8;
f_5580(t9,C_SCHEME_FALSE);}}

/* k5578 in k5563 in k5560 in k5557 in expand-send in k5545 in k5542 in k5538 in k5247 in k5244 in k5241 in k5238 */
static void C_fcall f_5580(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[15],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_5580,NULL,2,t0,t1);}
if(C_truep(t1)){
t2=((C_word*)t0)[11];
((C_proc2)(void*)(*((C_word*)t2+1)))(2,t2,(C_word)C_a_i_cons(&a,2,((C_word*)t0)[10],((C_word*)((C_word*)t0)[9])[1]));}
else{
t2=(*a=C_CLOSURE_TYPE|11,a[1]=(C_word)f_5590,a[2]=((C_word*)t0)[11],a[3]=((C_word*)t0)[2],a[4]=((C_word*)t0)[3],a[5]=((C_word*)t0)[4],a[6]=((C_word*)t0)[5],a[7]=((C_word*)t0)[6],a[8]=((C_word*)t0)[7],a[9]=((C_word*)t0)[8],a[10]=((C_word*)t0)[10],a[11]=((C_word*)t0)[9],tmp=(C_word)a,a+=12,tmp);
C_trace("ChickenBridge.scm: 283  append");
t3=*((C_word*)lf[20]+1);
((C_proc4)C_retrieve_proc(t3))(4,t3,t2,((C_word*)t0)[8],C_SCHEME_END_OF_LIST);}}

/* k5588 in k5578 in k5563 in k5560 in k5557 in expand-send in k5545 in k5542 in k5538 in k5247 in k5244 in k5241 in k5238 */
static void C_ccall f_5590(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[15],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_5590,2,t0,t1);}
t2=C_SCHEME_UNDEFINED;
t3=(*a=C_VECTOR_TYPE|1,a[1]=t2,tmp=(C_word)a,a+=2,tmp);
t4=C_set_block_item(t3,0,(*a=C_CLOSURE_TYPE|12,a[1]=(C_word)f_5592,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],a[7]=((C_word*)t0)[8],a[8]=t3,a[9]=((C_word*)t0)[9],a[10]=((C_word*)t0)[10],a[11]=((C_word*)t0)[11],a[12]=((C_word)li10),tmp=(C_word)a,a+=13,tmp));
t5=((C_word*)t3)[1];
f_5592(t5,((C_word*)t0)[2],t1,C_SCHEME_FALSE,C_SCHEME_FALSE,C_fix(0));}

/* do63 in k5588 in k5578 in k5563 in k5560 in k5557 in expand-send in k5545 in k5542 in k5538 in k5247 in k5244 in k5241 in k5238 */
static void C_fcall f_5592(C_word t0,C_word t1,C_word t2,C_word t3,C_word t4,C_word t5){
C_word tmp;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word t14;
C_word t15;
C_word t16;
C_word ab[38],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_5592,NULL,6,t0,t1,t2,t3,t4,t5);}
t6=(*a=C_VECTOR_TYPE|1,a[1]=t3,tmp=(C_word)a,a+=2,tmp);
t7=(*a=C_VECTOR_TYPE|1,a[1]=t4,tmp=(C_word)a,a+=2,tmp);
t8=(*a=C_VECTOR_TYPE|1,a[1]=t5,tmp=(C_word)a,a+=2,tmp);
if(C_truep((C_word)C_i_nullp(((C_word*)((C_word*)t0)[11])[1]))){
t9=C_SCHEME_UNDEFINED;
t10=(*a=C_VECTOR_TYPE|1,a[1]=t9,tmp=(C_word)a,a+=2,tmp);
t11=C_set_block_item(t10,0,(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_5604,a[2]=((C_word*)t0)[9],a[3]=t10,a[4]=t2,a[5]=((C_word*)t0)[10],a[6]=((C_word)li8),tmp=(C_word)a,a+=7,tmp));
t12=((C_word*)t10)[1];
f_5604(t12,t1,t2);}
else{
t9=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_5645,a[2]=t8,a[3]=t7,a[4]=t6,a[5]=t2,a[6]=t1,a[7]=((C_word*)t0)[8],tmp=(C_word)a,a+=8,tmp);
t10=(*a=C_CLOSURE_TYPE|14,a[1]=(C_word)f_5651,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=t8,a[5]=((C_word*)t0)[4],a[6]=((C_word*)t0)[5],a[7]=((C_word*)t0)[6],a[8]=t2,a[9]=t7,a[10]=((C_word*)t0)[9],a[11]=t6,a[12]=((C_word*)t0)[11],a[13]=t9,a[14]=((C_word*)t0)[7],tmp=(C_word)a,a+=15,tmp);
t11=((C_word*)((C_word*)t0)[7])[1];
if(C_truep(t11)){
t12=t10;
f_5651(2,t12,C_SCHEME_FALSE);}
else{
t12=(C_word)C_i_car(((C_word*)((C_word*)t0)[11])[1]);
C_trace("ChickenBridge.scm: 298  keyword?");
t13=C_retrieve(lf[15]);
((C_proc3)C_retrieve_proc(t13))(3,t13,t10,t12);}}}

/* k5649 in do63 in k5588 in k5578 in k5563 in k5560 in k5557 in expand-send in k5545 in k5542 in k5538 in k5247 in k5244 in k5241 in k5238 */
static void C_ccall f_5651(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word t14;
C_word ab[26],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_5651,2,t0,t1);}
if(C_truep(t1)){
t2=C_set_block_item(((C_word*)t0)[14],0,C_SCHEME_TRUE);
t3=((C_word*)t0)[13];
f_5645(t3,t2);}
else{
t2=((C_word*)((C_word*)t0)[14])[1];
if(C_truep(t2)){
t3=(C_word)C_i_car(((C_word*)((C_word*)t0)[12])[1]);
t4=C_mutate(((C_word *)((C_word*)t0)[11])+1,t3);
t5=(C_word)C_i_assoc(((C_word*)((C_word*)t0)[11])[1],((C_word*)t0)[10]);
t6=C_mutate(((C_word *)((C_word*)t0)[9])+1,t5);
t7=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[12])[1]);
t8=C_mutate(((C_word *)((C_word*)t0)[12])+1,t7);
t9=(*a=C_CLOSURE_TYPE|9,a[1]=(C_word)f_5705,a[2]=((C_word*)t0)[11],a[3]=((C_word*)t0)[5],a[4]=((C_word*)t0)[6],a[5]=((C_word*)t0)[7],a[6]=((C_word*)t0)[13],a[7]=((C_word*)t0)[12],a[8]=((C_word*)t0)[8],a[9]=((C_word*)t0)[9],tmp=(C_word)a,a+=10,tmp);
t10=(*a=C_CLOSURE_TYPE|9,a[1]=(C_word)f_5778,a[2]=((C_word*)t0)[10],a[3]=((C_word*)t0)[9],a[4]=((C_word*)t0)[11],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],a[7]=t9,a[8]=((C_word*)t0)[7],a[9]=((C_word*)t0)[12],tmp=(C_word)a,a+=10,tmp);
C_trace("ChickenBridge.scm: 319  keyword?");
t11=C_retrieve(lf[15]);
((C_proc3)C_retrieve_proc(t11))(3,t11,t10,((C_word*)((C_word*)t0)[11])[1]);}
else{
t3=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_5661,a[2]=((C_word*)t0)[13],a[3]=((C_word*)t0)[12],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[8],tmp=(C_word)a,a+=6,tmp);
if(C_truep((C_word)C_i_nequalp(((C_word*)((C_word*)t0)[4])[1],((C_word*)t0)[3]))){
t4=(C_word)C_i_length(((C_word*)t0)[2]);
C_trace("ChickenBridge.scm: 309  ferror");
t5=((C_word*)t0)[7];
((C_proc6)C_retrieve_proc(t5))(6,t5,t3,lf[40],((C_word*)t0)[6],((C_word*)t0)[3],t4);}
else{
t4=t3;
f_5661(2,t4,C_SCHEME_UNDEFINED);}}}}

/* k5659 in k5649 in do63 in k5588 in k5578 in k5563 in k5560 in k5557 in expand-send in k5545 in k5542 in k5538 in k5247 in k5244 in k5241 in k5238 */
static void C_ccall f_5661(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word ab[4],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_5661,2,t0,t1);}
t2=(C_word)C_i_list_tail(((C_word*)t0)[5],((C_word*)((C_word*)t0)[4])[1]);
t3=(C_word)C_i_car(((C_word*)((C_word*)t0)[3])[1]);
t4=(C_word)C_i_set_car(t2,t3);
t5=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=(C_word)C_a_i_plus(&a,2,((C_word*)((C_word*)t0)[4])[1],C_fix(1));
t8=C_mutate(((C_word *)((C_word*)t0)[4])+1,t7);
t9=((C_word*)t0)[2];
f_5645(t9,t8);}

/* k5776 in k5649 in do63 in k5588 in k5578 in k5563 in k5560 in k5557 in expand-send in k5545 in k5542 in k5538 in k5247 in k5244 in k5241 in k5238 */
static void C_ccall f_5778(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[15],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_5778,2,t0,t1);}
if(C_truep(t1)){
if(C_truep((C_word)C_i_nullp(((C_word*)((C_word*)t0)[9])[1]))){
t2=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_5751,a[2]=((C_word*)t0)[6],a[3]=((C_word*)t0)[7],a[4]=((C_word*)t0)[8],tmp=(C_word)a,a+=5,tmp);
C_trace("ChickenBridge.scm: 324  keyname");
t3=((C_word*)t0)[5];
((C_proc3)C_retrieve_proc(t3))(3,t3,t2,((C_word*)((C_word*)t0)[4])[1]);}
else{
t2=((C_word*)((C_word*)t0)[3])[1];
if(C_truep(t2)){
t3=((C_word*)t0)[7];
f_5705(2,t3,C_SCHEME_UNDEFINED);}
else{
t3=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_5764,a[2]=((C_word*)t0)[4],a[3]=((C_word*)t0)[6],a[4]=((C_word*)t0)[7],a[5]=((C_word*)t0)[8],tmp=(C_word)a,a+=6,tmp);
t4=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_5766,a[2]=((C_word*)t0)[5],a[3]=((C_word)li9),tmp=(C_word)a,a+=4,tmp);
C_trace("map");
t5=*((C_word*)lf[19]+1);
((C_proc4)(void*)(*((C_word*)t5+1)))(4,t5,t3,t4,((C_word*)t0)[2]);}}}
else{
C_trace("ChickenBridge.scm: 320  ferror");
t2=((C_word*)t0)[8];
((C_proc5)C_retrieve_proc(t2))(5,t2,((C_word*)t0)[7],lf[39],((C_word*)t0)[6],((C_word*)((C_word*)t0)[4])[1]);}}

/* a5765 in k5776 in k5649 in do63 in k5588 in k5578 in k5563 in k5560 in k5557 in expand-send in k5545 in k5542 in k5538 in k5247 in k5244 in k5241 in k5238 */
static void C_ccall f_5766(C_word c,C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word *a;
if(c!=3) C_bad_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr3,(void*)f_5766,3,t0,t1,t2);}
t3=(C_word)C_i_car(t2);
C_trace("ChickenBridge.scm: 328  keyname");
t4=((C_word*)t0)[2];
((C_proc3)C_retrieve_proc(t4))(3,t4,t1,t3);}

/* k5762 in k5776 in k5649 in do63 in k5588 in k5578 in k5563 in k5560 in k5557 in expand-send in k5545 in k5542 in k5538 in k5247 in k5244 in k5241 in k5238 */
static void C_ccall f_5764(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 326  ferror");
t2=((C_word*)t0)[5];
((C_proc6)C_retrieve_proc(t2))(6,t2,((C_word*)t0)[4],lf[38],((C_word*)t0)[3],((C_word*)((C_word*)t0)[2])[1],t1);}

/* k5749 in k5776 in k5649 in do63 in k5588 in k5578 in k5563 in k5560 in k5557 in expand-send in k5545 in k5542 in k5538 in k5247 in k5244 in k5241 in k5238 */
static void C_ccall f_5751(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 323  ferror");
t2=((C_word*)t0)[4];
((C_proc5)C_retrieve_proc(t2))(5,t2,((C_word*)t0)[3],lf[37],((C_word*)t0)[2],t1);}

/* k5703 in k5649 in do63 in k5588 in k5578 in k5563 in k5560 in k5557 in expand-send in k5545 in k5542 in k5538 in k5247 in k5244 in k5241 in k5238 */
static void C_ccall f_5705(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[10],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_5705,2,t0,t1);}
t2=(C_word)C_i_member(((C_word*)((C_word*)t0)[9])[1],((C_word*)t0)[8]);
t3=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_5711,a[2]=((C_word*)t0)[6],a[3]=t2,a[4]=((C_word*)t0)[7],tmp=(C_word)a,a+=5,tmp);
if(C_truep(t2)){
t4=t3;
f_5711(2,t4,C_SCHEME_UNDEFINED);}
else{
t4=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_5732,a[2]=((C_word*)t0)[4],a[3]=t3,a[4]=((C_word*)t0)[5],tmp=(C_word)a,a+=5,tmp);
C_trace("ChickenBridge.scm: 335  keyname");
t5=((C_word*)t0)[3];
((C_proc3)C_retrieve_proc(t5))(3,t5,t4,((C_word*)((C_word*)t0)[2])[1]);}}

/* k5730 in k5703 in k5649 in do63 in k5588 in k5578 in k5563 in k5560 in k5557 in expand-send in k5545 in k5542 in k5538 in k5247 in k5244 in k5241 in k5238 */
static void C_ccall f_5732(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 334  ferror");
t2=((C_word*)t0)[4];
((C_proc5)C_retrieve_proc(t2))(5,t2,((C_word*)t0)[3],lf[36],((C_word*)t0)[2],t1);}

/* k5709 in k5703 in k5649 in do63 in k5588 in k5578 in k5563 in k5560 in k5557 in expand-send in k5545 in k5542 in k5538 in k5247 in k5244 in k5241 in k5238 */
static void C_ccall f_5711(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word *a;
t2=(C_word)C_i_car(((C_word*)((C_word*)t0)[4])[1]);
t3=(C_word)C_i_set_car(((C_word*)t0)[3],t2);
t4=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
t5=C_mutate(((C_word *)((C_word*)t0)[4])+1,t4);
t6=((C_word*)t0)[2];
f_5645(t6,t5);}

/* k5643 in do63 in k5588 in k5578 in k5563 in k5560 in k5557 in expand-send in k5545 in k5542 in k5538 in k5247 in k5244 in k5241 in k5238 */
static void C_fcall f_5645(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
t2=((C_word*)((C_word*)t0)[7])[1];
f_5592(t2,((C_word*)t0)[6],((C_word*)t0)[5],((C_word*)((C_word*)t0)[4])[1],((C_word*)((C_word*)t0)[3])[1],((C_word*)((C_word*)t0)[2])[1]);}

/* do69 in do63 in k5588 in k5578 in k5563 in k5560 in k5557 in expand-send in k5545 in k5542 in k5538 in k5247 in k5244 in k5241 in k5238 */
static void C_fcall f_5604(C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word ab[8],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_5604,NULL,3,t0,t1,t2);}
if(C_truep((C_word)C_i_nullp(t2))){
t3=t1;
((C_proc2)(void*)(*((C_word*)t3+1)))(2,t3,(C_word)C_a_i_cons(&a,2,((C_word*)t0)[5],((C_word*)t0)[4]));}
else{
t3=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_5617,a[2]=t1,a[3]=((C_word*)t0)[3],a[4]=t2,tmp=(C_word)a,a+=5,tmp);
t4=(C_word)C_i_car(t2);
if(C_truep((C_word)C_i_member(t4,((C_word*)t0)[2]))){
t5=(C_word)C_i_car(t2);
t6=(C_word)C_i_cadr(t5);
t7=t3;
f_5617(t7,(C_word)C_i_set_car(t2,t6));}
else{
t5=t3;
f_5617(t5,C_SCHEME_UNDEFINED);}}}

/* k5615 in do69 in do63 in k5588 in k5578 in k5563 in k5560 in k5557 in expand-send in k5545 in k5542 in k5538 in k5247 in k5244 in k5241 in k5238 */
static void C_fcall f_5617(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word *a;
t2=(C_word)C_i_cdr(((C_word*)t0)[4]);
t3=((C_word*)((C_word*)t0)[3])[1];
f_5604(t3,((C_word*)t0)[2],t2);}

/* f_5827 in expand-send in k5545 in k5542 in k5538 in k5247 in k5244 in k5241 in k5238 */
static void C_ccall f_5827(C_word c,C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word *a;
if(c!=3) C_bad_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr3,(void*)f_5827,3,t0,t1,t2);}
t3=t1;
((C_proc2)(void*)(*((C_word*)t3+1)))(2,t3,t2);}

/* f_5818 in expand-send in k5545 in k5542 in k5538 in k5247 in k5244 in k5241 in k5238 */
static void C_ccall f_5818(C_word c,C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word ab[3],*a=ab;
if(c!=3) C_bad_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr3,(void*)f_5818,3,t0,t1,t2);}
t3=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_5826,a[2]=t1,tmp=(C_word)a,a+=3,tmp);
C_trace("ChickenBridge.scm: 265  keyword->string");
t4=C_retrieve(lf[35]);
((C_proc3)C_retrieve_proc(t4))(3,t4,t3,t2);}

/* k5824 */
static void C_ccall f_5826(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 265  sprintf");
t2=C_retrieve(lf[33]);
((C_proc4)C_retrieve_proc(t2))(4,t2,((C_word*)t0)[2],lf[34],t1);}

/* f_5829 in expand-send in k5545 in k5542 in k5538 in k5247 in k5244 in k5241 in k5238 */
static void C_ccall f_5829(C_word c,C_word t0,C_word t1,C_word t2,...){
C_word tmp;
C_word t3;
va_list v;
C_word *a,c2=c;
C_save_rest(t2,c2,3);
if(c<3) C_bad_min_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_demand(c*C_SIZEOF_PAIR+3)){
C_save_and_reclaim((void*)tr3r,(void*)f_5829r,3,t0,t1,t2);}
else{
a=C_alloc((c-3)*3);
t3=C_restore_rest(a,C_rest_count(0));
f_5829r(t0,t1,t2,t3);}}

static void C_ccall f_5829r(C_word t0,C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word *a=C_alloc(3);
t4=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_5837,a[2]=t1,tmp=(C_word)a,a+=3,tmp);
C_apply(5,0,t4,C_retrieve(lf[33]),t2,t3);}

/* k5835 */
static void C_ccall f_5837(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 261  error");
t2=*((C_word*)lf[6]+1);
((C_proc3)C_retrieve_proc(t2))(3,t2,((C_word*)t0)[2],t1);}

/* expand-optkeys in k5247 in k5244 in k5241 in k5238 */
static void C_ccall f_5251(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4){
C_word tmp;
C_word t5;
C_word t6;
C_word t7;
C_word ab[8],*a=ab;
if(c!=5) C_bad_argc_2(c,5,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr5,(void*)f_5251,5,t0,t1,t2,t3,t4);}
t5=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_5412,a[2]=t4,a[3]=t2,a[4]=t1,tmp=(C_word)a,a+=5,tmp);
t6=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_5504,a[2]=((C_word)li3),tmp=(C_word)a,a+=3,tmp);
C_trace("map");
t7=*((C_word*)lf[19]+1);
((C_proc4)(void*)(*((C_word*)t7+1)))(4,t7,t5,t6,t3);}

/* a5503 in expand-optkeys in k5247 in k5244 in k5241 in k5238 */
static void C_ccall f_5504(C_word c,C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word ab[14],*a=ab;
if(c!=3) C_bad_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr3,(void*)f_5504,3,t0,t1,t2);}
if(C_truep((C_word)C_i_pairp(t2))){
t3=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_5518,a[2]=t2,a[3]=t1,tmp=(C_word)a,a+=4,tmp);
t4=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_5522,a[2]=t3,tmp=(C_word)a,a+=3,tmp);
t5=(C_word)C_i_car(t2);
C_trace("ChickenBridge.scm: 213  symbol->string");
t6=*((C_word*)lf[27]+1);
((C_proc3)C_retrieve_proc(t6))(3,t6,t4,t5);}
else{
t3=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_5533,a[2]=t2,a[3]=t1,tmp=(C_word)a,a+=4,tmp);
t4=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_5537,a[2]=t3,tmp=(C_word)a,a+=3,tmp);
C_trace("ChickenBridge.scm: 214  symbol->string");
t5=*((C_word*)lf[27]+1);
((C_proc3)C_retrieve_proc(t5))(3,t5,t4,t2);}}

/* k5535 in a5503 in expand-optkeys in k5247 in k5244 in k5241 in k5238 */
static void C_ccall f_5537(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 214  gensym");
t2=C_retrieve(lf[28]);
((C_proc3)C_retrieve_proc(t2))(3,t2,((C_word*)t0)[2],t1);}

/* k5531 in a5503 in expand-optkeys in k5247 in k5244 in k5241 in k5238 */
static void C_ccall f_5533(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_5533,2,t0,t1);}
t2=((C_word*)t0)[3];
((C_proc2)(void*)(*((C_word*)t2+1)))(2,t2,(C_word)C_a_i_list(&a,3,t1,((C_word*)t0)[2],C_SCHEME_FALSE));}

/* k5520 in a5503 in expand-optkeys in k5247 in k5244 in k5241 in k5238 */
static void C_ccall f_5522(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 213  gensym");
t2=C_retrieve(lf[28]);
((C_proc3)C_retrieve_proc(t2))(3,t2,((C_word*)t0)[2],t1);}

/* k5516 in a5503 in expand-optkeys in k5247 in k5244 in k5241 in k5238 */
static void C_ccall f_5518(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word ab[3],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_5518,2,t0,t1);}
t2=((C_word*)t0)[3];
((C_proc2)(void*)(*((C_word*)t2+1)))(2,t2,(C_word)C_a_i_cons(&a,2,t1,((C_word*)t0)[2]));}

/* k5410 in expand-optkeys in k5247 in k5244 in k5241 in k5238 */
static void C_ccall f_5412(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[6],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_5412,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_5415,a[2]=t1,a[3]=((C_word*)t0)[2],a[4]=((C_word*)t0)[3],a[5]=((C_word*)t0)[4],tmp=(C_word)a,a+=6,tmp);
C_trace("ChickenBridge.scm: 216  gensym");
t3=C_retrieve(lf[28]);
((C_proc3)C_retrieve_proc(t3))(3,t3,t2,lf[30]);}

/* k5413 in k5410 in expand-optkeys in k5247 in k5244 in k5241 in k5238 */
static void C_ccall f_5415(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_5415,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_5418,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=t1,a[6]=((C_word*)t0)[5],tmp=(C_word)a,a+=7,tmp);
C_trace("ChickenBridge.scm: 217  gensym");
t3=C_retrieve(lf[28]);
((C_proc3)C_retrieve_proc(t3))(3,t3,t2,lf[29]);}

/* k5416 in k5413 in k5410 in expand-optkeys in k5247 in k5244 in k5241 in k5238 */
static void C_ccall f_5418(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[14],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_5418,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_5421,a[2]=((C_word*)t0)[2],a[3]=t1,a[4]=((C_word*)t0)[3],a[5]=((C_word*)t0)[4],a[6]=((C_word*)t0)[5],a[7]=((C_word*)t0)[6],tmp=(C_word)a,a+=8,tmp);
t3=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_5498,a[2]=((C_word*)t0)[4],a[3]=((C_word*)t0)[5],a[4]=t1,a[5]=((C_word)li2),tmp=(C_word)a,a+=6,tmp);
C_trace("map");
t4=*((C_word*)lf[19]+1);
((C_proc4)(void*)(*((C_word*)t4+1)))(4,t4,t2,t3,((C_word*)t0)[2]);}

/* a5497 in k5416 in k5413 in k5410 in expand-optkeys in k5247 in k5244 in k5241 in k5238 */
static void C_ccall f_5498(C_word c,C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word ab[11],*a=ab;
if(c!=3) C_bad_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr3,(void*)f_5498,3,t0,t1,t2);}
t3=((C_word*)t0)[4];
t4=((C_word*)t0)[3];
t5=((C_word*)t0)[2];
t6=(C_word)C_i_car(t2);
t7=(C_word)C_i_cadr(t2);
t8=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_5264,a[2]=t1,a[3]=t3,a[4]=t7,a[5]=t5,a[6]=t4,a[7]=t6,tmp=(C_word)a,a+=8,tmp);
t9=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_5323,a[2]=t8,tmp=(C_word)a,a+=3,tmp);
C_trace("ChickenBridge.scm: 177  symbol->string");
t10=*((C_word*)lf[27]+1);
((C_proc3)C_retrieve_proc(t10))(3,t10,t9,t7);}

/* k5321 in a5497 in k5416 in k5413 in k5410 in expand-optkeys in k5247 in k5244 in k5241 in k5238 */
static void C_ccall f_5323(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 177  string->keyword");
t2=C_retrieve(lf[26]);
((C_proc3)C_retrieve_proc(t2))(3,t2,((C_word*)t0)[2],t1);}

/* k5262 in a5497 in k5416 in k5413 in k5410 in expand-optkeys in k5247 in k5244 in k5241 in k5238 */
static void C_ccall f_5264(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word t14;
C_word t15;
C_word ab[120],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_5264,2,t0,t1);}
t2=(C_word)C_a_i_list(&a,1,t1);
t3=(C_word)C_a_i_list(&a,3,lf[6],lf[21],t1);
t4=(C_word)C_a_i_list(&a,3,lf[22],((C_word*)t0)[7],t3);
t5=(C_word)C_a_i_list(&a,2,lf[17],((C_word*)t0)[6]);
t6=(C_word)C_a_i_list(&a,2,lf[5],t5);
t7=(C_word)C_a_i_list(&a,3,lf[6],lf[23],((C_word*)t0)[5]);
t8=(C_word)C_a_i_list(&a,2,lf[24],((C_word*)t0)[6]);
t9=(C_word)C_a_i_list(&a,4,lf[22],t6,t7,t8);
t10=(C_word)C_a_i_list(&a,3,lf[14],((C_word*)t0)[4],t9);
t11=(C_word)C_a_i_list(&a,3,lf[14],((C_word*)t0)[7],C_SCHEME_TRUE);
t12=(C_word)C_a_i_list(&a,3,lf[14],((C_word*)t0)[3],C_SCHEME_TRUE);
t13=(C_word)C_a_i_list(&a,2,lf[25],((C_word*)t0)[6]);
t14=(C_word)C_a_i_list(&a,3,lf[14],((C_word*)t0)[6],t13);
t15=((C_word*)t0)[2];
((C_proc2)(void*)(*((C_word*)t15+1)))(2,t15,(C_word)C_a_i_list(&a,6,t2,t4,t10,t11,t12,t14));}

/* k5419 in k5416 in k5413 in k5410 in expand-optkeys in k5247 in k5244 in k5241 in k5238 */
static void C_ccall f_5421(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_5421,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|8,a[1]=(C_word)f_5428,a[2]=((C_word*)t0)[2],a[3]=t1,a[4]=((C_word*)t0)[3],a[5]=((C_word*)t0)[4],a[6]=((C_word*)t0)[5],a[7]=((C_word*)t0)[6],a[8]=((C_word*)t0)[7],tmp=(C_word)a,a+=9,tmp);
C_trace("map");
t3=*((C_word*)lf[19]+1);
((C_proc4)(void*)(*((C_word*)t3+1)))(4,t3,t2,*((C_word*)lf[17]+1),((C_word*)t0)[2]);}

/* k5426 in k5419 in k5416 in k5413 in k5410 in expand-optkeys in k5247 in k5244 in k5241 in k5238 */
static void C_ccall f_5428(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[19],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_5428,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|9,a[1]=(C_word)f_5440,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],a[7]=((C_word*)t0)[7],a[8]=t1,a[9]=((C_word*)t0)[8],tmp=(C_word)a,a+=10,tmp);
t3=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_5474,a[2]=t2,a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[6],a[5]=((C_word*)t0)[7],tmp=(C_word)a,a+=6,tmp);
t4=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_5488,a[2]=((C_word)li1),tmp=(C_word)a,a+=3,tmp);
C_trace("map");
t5=*((C_word*)lf[19]+1);
((C_proc4)(void*)(*((C_word*)t5+1)))(4,t5,t3,t4,((C_word*)t0)[2]);}

/* a5487 in k5426 in k5419 in k5416 in k5413 in k5410 in expand-optkeys in k5247 in k5244 in k5241 in k5238 */
static void C_ccall f_5488(C_word c,C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word ab[6],*a=ab;
if(c!=3) C_bad_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr3,(void*)f_5488,3,t0,t1,t2);}
t3=(C_word)C_i_car(t2);
t4=t1;
((C_proc2)(void*)(*((C_word*)t4+1)))(2,t4,(C_word)C_a_i_list(&a,2,t3,C_SCHEME_FALSE));}

/* k5472 in k5426 in k5419 in k5416 in k5413 in k5410 in expand-optkeys in k5247 in k5244 in k5241 in k5238 */
static void C_ccall f_5474(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[18],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_5474,2,t0,t1);}
t2=(C_word)C_a_i_list(&a,2,((C_word*)t0)[5],((C_word*)t0)[4]);
t3=(C_word)C_a_i_list(&a,2,((C_word*)t0)[3],C_SCHEME_FALSE);
t4=(C_word)C_a_i_list(&a,2,t2,t3);
C_trace("ChickenBridge.scm: 223  append");
t5=*((C_word*)lf[20]+1);
((C_proc4)C_retrieve_proc(t5))(4,t5,((C_word*)t0)[2],t1,t4);}

/* k5438 in k5426 in k5419 in k5416 in k5413 in k5410 in expand-optkeys in k5247 in k5244 in k5241 in k5238 */
static void C_ccall f_5440(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[18],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_5440,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_5444,a[2]=((C_word*)t0)[8],a[3]=((C_word*)t0)[9],a[4]=t1,tmp=(C_word)a,a+=5,tmp);
t3=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_5448,a[2]=t2,a[3]=((C_word*)t0)[5],a[4]=((C_word*)t0)[6],a[5]=((C_word*)t0)[7],tmp=(C_word)a,a+=6,tmp);
t4=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_5466,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[6],a[4]=((C_word*)t0)[7],a[5]=((C_word*)t0)[4],a[6]=((C_word)li0),tmp=(C_word)a,a+=7,tmp);
C_trace("map");
t5=*((C_word*)lf[19]+1);
((C_proc4)(void*)(*((C_word*)t5+1)))(4,t5,t3,t4,((C_word*)t0)[2]);}

/* a5465 in k5438 in k5426 in k5419 in k5416 in k5413 in k5410 in expand-optkeys in k5247 in k5244 in k5241 in k5238 */
static void C_ccall f_5466(C_word c,C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word t14;
C_word t15;
C_word t16;
C_word t17;
C_word t18;
C_word t19;
C_word t20;
C_word t21;
C_word t22;
C_word t23;
C_word t24;
C_word ab[119],*a=ab;
if(c!=3) C_bad_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr3,(void*)f_5466,3,t0,t1,t2);}
t3=((C_word*)t0)[5];
t4=((C_word*)t0)[4];
t5=((C_word*)t0)[3];
t6=((C_word*)t0)[2];
t7=(C_word)C_a_i_list(&a,2,lf[5],t4);
t8=(C_word)C_a_i_list(&a,2,lf[10],t4);
t9=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_5401,a[2]=t7,a[3]=t1,a[4]=t8,tmp=(C_word)a,a+=5,tmp);
t10=(C_word)C_i_car(t2);
t11=(C_word)C_i_cadr(t2);
t12=(C_word)C_a_i_list(&a,3,lf[6],lf[12],t5);
t13=(C_word)C_a_i_list(&a,3,lf[13],t3,t12);
t14=(C_word)C_a_i_list(&a,2,lf[10],t4);
t15=(C_word)C_a_i_list(&a,3,lf[14],t11,t14);
t16=(C_word)C_a_i_list(&a,2,lf[15],t11);
t17=(C_word)C_a_i_list(&a,3,lf[6],lf[16],t11);
t18=(C_word)C_a_i_list(&a,3,lf[13],t16,t17);
t19=(C_word)C_a_i_list(&a,3,lf[14],t10,C_SCHEME_TRUE);
t20=(C_word)C_a_i_list(&a,2,lf[17],t4);
t21=(C_word)C_a_i_list(&a,3,lf[14],t4,t20);
t22=(C_word)C_a_i_list(&a,6,lf[18],t13,t15,t18,t19,t21);
t23=(C_word)C_a_i_list(&a,1,t22);
C_trace("##sys#append");
t24=*((C_word*)lf[9]+1);
((C_proc4)(void*)(*((C_word*)t24+1)))(4,t24,t9,t6,t23);}

/* k5399 in a5465 in k5438 in k5426 in k5419 in k5416 in k5413 in k5410 in expand-optkeys in k5247 in k5244 in k5241 in k5238 */
static void C_ccall f_5401(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[15],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_5401,2,t0,t1);}
t2=(C_word)C_a_i_cons(&a,2,((C_word*)t0)[4],t1);
t3=(C_word)C_a_i_cons(&a,2,lf[11],t2);
t4=((C_word*)t0)[3];
((C_proc2)(void*)(*((C_word*)t4+1)))(2,t4,(C_word)C_a_i_list(&a,3,lf[8],((C_word*)t0)[2],t3));}

/* k5446 in k5438 in k5426 in k5419 in k5416 in k5413 in k5410 in expand-optkeys in k5247 in k5244 in k5241 in k5238 */
static void C_ccall f_5448(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[27],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_5448,2,t0,t1);}
t2=(C_word)C_a_i_list(&a,2,lf[5],((C_word*)t0)[5]);
t3=(C_word)C_a_i_list(&a,3,lf[6],lf[7],((C_word*)t0)[4]);
t4=(C_word)C_a_i_list(&a,3,lf[8],t2,t3);
t5=(C_word)C_a_i_cons(&a,2,t4,((C_word*)t0)[3]);
C_trace("##sys#append");
t6=*((C_word*)lf[9]+1);
((C_proc4)(void*)(*((C_word*)t6+1)))(4,t6,((C_word*)t0)[2],t1,t5);}

/* k5442 in k5438 in k5426 in k5419 in k5416 in k5413 in k5410 in expand-optkeys in k5247 in k5244 in k5241 in k5238 */
static void C_ccall f_5444(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[15],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_5444,2,t0,t1);}
t2=(C_word)C_a_i_cons(&a,2,((C_word*)t0)[4],t1);
t3=(C_word)C_a_i_cons(&a,2,lf[3],t2);
t4=((C_word*)t0)[3];
((C_proc2)(void*)(*((C_word*)t4+1)))(2,t4,(C_word)C_a_i_list(&a,3,lf[4],((C_word*)t0)[2],t3));}

#ifdef C_ENABLE_PTABLES
static C_PTABLE_ENTRY ptable[2209] = {
{"toplevelChickenBridge.scm",(void*)C_grace_toplevel},
{"f_5240ChickenBridge.scm",(void*)f_5240},
{"f_5243ChickenBridge.scm",(void*)f_5243},
{"f_5246ChickenBridge.scm",(void*)f_5246},
{"f_5249ChickenBridge.scm",(void*)f_5249},
{"f_32850ChickenBridge.scm",(void*)f_32850},
{"f_5540ChickenBridge.scm",(void*)f_5540},
{"f_5544ChickenBridge.scm",(void*)f_5544},
{"f_32798ChickenBridge.scm",(void*)f_32798},
{"f_32845ChickenBridge.scm",(void*)f_32845},
{"f_32835ChickenBridge.scm",(void*)f_32835},
{"f_32802ChickenBridge.scm",(void*)f_32802},
{"f_5547ChickenBridge.scm",(void*)f_5547},
{"f_32792ChickenBridge.scm",(void*)f_32792},
{"f_5840ChickenBridge.scm",(void*)f_5840},
{"f_7606ChickenBridge.scm",(void*)f_7606},
{"f_32576ChickenBridge.scm",(void*)f_32576},
{"f_32790ChickenBridge.scm",(void*)f_32790},
{"f_32610ChickenBridge.scm",(void*)f_32610},
{"f_32622ChickenBridge.scm",(void*)f_32622},
{"f_32626ChickenBridge.scm",(void*)f_32626},
{"f_32630ChickenBridge.scm",(void*)f_32630},
{"f_32774ChickenBridge.scm",(void*)f_32774},
{"f_32636ChickenBridge.scm",(void*)f_32636},
{"f_32656ChickenBridge.scm",(void*)f_32656},
{"f_32659ChickenBridge.scm",(void*)f_32659},
{"f_32667ChickenBridge.scm",(void*)f_32667},
{"f_32674ChickenBridge.scm",(void*)f_32674},
{"f_32677ChickenBridge.scm",(void*)f_32677},
{"f_32681ChickenBridge.scm",(void*)f_32681},
{"f_32688ChickenBridge.scm",(void*)f_32688},
{"f_32691ChickenBridge.scm",(void*)f_32691},
{"f_32695ChickenBridge.scm",(void*)f_32695},
{"f_32702ChickenBridge.scm",(void*)f_32702},
{"f_32646ChickenBridge.scm",(void*)f_32646},
{"f_32599ChickenBridge.scm",(void*)f_32599},
{"f_32589ChickenBridge.scm",(void*)f_32589},
{"f_32592ChickenBridge.scm",(void*)f_32592},
{"f_7609ChickenBridge.scm",(void*)f_7609},
{"f_32562ChickenBridge.scm",(void*)f_32562},
{"f_32570ChickenBridge.scm",(void*)f_32570},
{"f_32574ChickenBridge.scm",(void*)f_32574},
{"f_14852ChickenBridge.scm",(void*)f_14852},
{"f_14903ChickenBridge.scm",(void*)f_14903},
{"f_32552ChickenBridge.scm",(void*)f_32552},
{"f_32560ChickenBridge.scm",(void*)f_32560},
{"f_15008ChickenBridge.scm",(void*)f_15008},
{"f_32449ChickenBridge.scm",(void*)f_32449},
{"f_32512ChickenBridge.scm",(void*)f_32512},
{"f_32516ChickenBridge.scm",(void*)f_32516},
{"f_32530ChickenBridge.scm",(void*)f_32530},
{"f_32452ChickenBridge.scm",(void*)f_32452},
{"f_32472ChickenBridge.scm",(void*)f_32472},
{"f_32476ChickenBridge.scm",(void*)f_32476},
{"f_15011ChickenBridge.scm",(void*)f_15011},
{"f_32435ChickenBridge.scm",(void*)f_32435},
{"f_32443ChickenBridge.scm",(void*)f_32443},
{"f_32447ChickenBridge.scm",(void*)f_32447},
{"f_15204ChickenBridge.scm",(void*)f_15204},
{"f_32409ChickenBridge.scm",(void*)f_32409},
{"f_32413ChickenBridge.scm",(void*)f_32413},
{"f_32419ChickenBridge.scm",(void*)f_32419},
{"f_32430ChickenBridge.scm",(void*)f_32430},
{"f_32426ChickenBridge.scm",(void*)f_32426},
{"f_15273ChickenBridge.scm",(void*)f_15273},
{"f_32387ChickenBridge.scm",(void*)f_32387},
{"f_16518ChickenBridge.scm",(void*)f_16518},
{"f_32367ChickenBridge.scm",(void*)f_32367},
{"f_16521ChickenBridge.scm",(void*)f_16521},
{"f_32327ChickenBridge.scm",(void*)f_32327},
{"f_16524ChickenBridge.scm",(void*)f_16524},
{"f_32233ChickenBridge.scm",(void*)f_32233},
{"f_32237ChickenBridge.scm",(void*)f_32237},
{"f_32240ChickenBridge.scm",(void*)f_32240},
{"f_32258ChickenBridge.scm",(void*)f_32258},
{"f_32261ChickenBridge.scm",(void*)f_32261},
{"f_32292ChickenBridge.scm",(void*)f_32292},
{"f_32264ChickenBridge.scm",(void*)f_32264},
{"f_32270ChickenBridge.scm",(void*)f_32270},
{"f_32223ChickenBridge.scm",(void*)f_32223},
{"f_32217ChickenBridge.scm",(void*)f_32217},
{"f_16527ChickenBridge.scm",(void*)f_16527},
{"f_32125ChickenBridge.scm",(void*)f_32125},
{"f_32127ChickenBridge.scm",(void*)f_32127},
{"f_32131ChickenBridge.scm",(void*)f_32131},
{"f_32134ChickenBridge.scm",(void*)f_32134},
{"f_32137ChickenBridge.scm",(void*)f_32137},
{"f_32177ChickenBridge.scm",(void*)f_32177},
{"f_32169ChickenBridge.scm",(void*)f_32169},
{"f_32140ChickenBridge.scm",(void*)f_32140},
{"f_32143ChickenBridge.scm",(void*)f_32143},
{"f_32146ChickenBridge.scm",(void*)f_32146},
{"f_32117ChickenBridge.scm",(void*)f_32117},
{"f_16530ChickenBridge.scm",(void*)f_16530},
{"f_32089ChickenBridge.scm",(void*)f_32089},
{"f_16533ChickenBridge.scm",(void*)f_16533},
{"f_32053ChickenBridge.scm",(void*)f_32053},
{"f_32065ChickenBridge.scm",(void*)f_32065},
{"f_32061ChickenBridge.scm",(void*)f_32061},
{"f_32035ChickenBridge.scm",(void*)f_32035},
{"f_32029ChickenBridge.scm",(void*)f_32029},
{"f_16536ChickenBridge.scm",(void*)f_16536},
{"f_31943ChickenBridge.scm",(void*)f_31943},
{"f_31947ChickenBridge.scm",(void*)f_31947},
{"f_31950ChickenBridge.scm",(void*)f_31950},
{"f_31953ChickenBridge.scm",(void*)f_31953},
{"f_31966ChickenBridge.scm",(void*)f_31966},
{"f_31912ChickenBridge.scm",(void*)f_31912},
{"f_31916ChickenBridge.scm",(void*)f_31916},
{"f_31931ChickenBridge.scm",(void*)f_31931},
{"f_31906ChickenBridge.scm",(void*)f_31906},
{"f_16539ChickenBridge.scm",(void*)f_16539},
{"f_31792ChickenBridge.scm",(void*)f_31792},
{"f_31808ChickenBridge.scm",(void*)f_31808},
{"f_31819ChickenBridge.scm",(void*)f_31819},
{"f_31786ChickenBridge.scm",(void*)f_31786},
{"f_16595ChickenBridge.scm",(void*)f_16595},
{"f_31653ChickenBridge.scm",(void*)f_31653},
{"f_31676ChickenBridge.scm",(void*)f_31676},
{"f_31673ChickenBridge.scm",(void*)f_31673},
{"f_31647ChickenBridge.scm",(void*)f_31647},
{"f_16598ChickenBridge.scm",(void*)f_16598},
{"f_31501ChickenBridge.scm",(void*)f_31501},
{"f_31519ChickenBridge.scm",(void*)f_31519},
{"f_31528ChickenBridge.scm",(void*)f_31528},
{"f_31495ChickenBridge.scm",(void*)f_31495},
{"f_16601ChickenBridge.scm",(void*)f_16601},
{"f_31448ChickenBridge.scm",(void*)f_31448},
{"f_31452ChickenBridge.scm",(void*)f_31452},
{"f_31455ChickenBridge.scm",(void*)f_31455},
{"f_31471ChickenBridge.scm",(void*)f_31471},
{"f_31430ChickenBridge.scm",(void*)f_31430},
{"f_31424ChickenBridge.scm",(void*)f_31424},
{"f_16604ChickenBridge.scm",(void*)f_16604},
{"f_31348ChickenBridge.scm",(void*)f_31348},
{"f_16743ChickenBridge.scm",(void*)f_16743},
{"f_31274ChickenBridge.scm",(void*)f_31274},
{"f_31281ChickenBridge.scm",(void*)f_31281},
{"f_31268ChickenBridge.scm",(void*)f_31268},
{"f_16746ChickenBridge.scm",(void*)f_16746},
{"f_31164ChickenBridge.scm",(void*)f_31164},
{"f_31172ChickenBridge.scm",(void*)f_31172},
{"f_31138ChickenBridge.scm",(void*)f_31138},
{"f_31155ChickenBridge.scm",(void*)f_31155},
{"f_31146ChickenBridge.scm",(void*)f_31146},
{"f_31132ChickenBridge.scm",(void*)f_31132},
{"f_16749ChickenBridge.scm",(void*)f_16749},
{"f_31088ChickenBridge.scm",(void*)f_31088},
{"f_16752ChickenBridge.scm",(void*)f_16752},
{"f_31006ChickenBridge.scm",(void*)f_31006},
{"f_31017ChickenBridge.scm",(void*)f_31017},
{"f_31019ChickenBridge.scm",(void*)f_31019},
{"f_31048ChickenBridge.scm",(void*)f_31048},
{"f_30984ChickenBridge.scm",(void*)f_30984},
{"f_31000ChickenBridge.scm",(void*)f_31000},
{"f_30978ChickenBridge.scm",(void*)f_30978},
{"f_16755ChickenBridge.scm",(void*)f_16755},
{"f_30931ChickenBridge.scm",(void*)f_30931},
{"f_30935ChickenBridge.scm",(void*)f_30935},
{"f_30942ChickenBridge.scm",(void*)f_30942},
{"f_30909ChickenBridge.scm",(void*)f_30909},
{"f_30925ChickenBridge.scm",(void*)f_30925},
{"f_30903ChickenBridge.scm",(void*)f_30903},
{"f_16758ChickenBridge.scm",(void*)f_16758},
{"f_30771ChickenBridge.scm",(void*)f_30771},
{"f_30811ChickenBridge.scm",(void*)f_30811},
{"f_30775ChickenBridge.scm",(void*)f_30775},
{"f_30791ChickenBridge.scm",(void*)f_30791},
{"f_30803ChickenBridge.scm",(void*)f_30803},
{"f_30807ChickenBridge.scm",(void*)f_30807},
{"f_30799ChickenBridge.scm",(void*)f_30799},
{"f_30710ChickenBridge.scm",(void*)f_30710},
{"f_30757ChickenBridge.scm",(void*)f_30757},
{"f_30717ChickenBridge.scm",(void*)f_30717},
{"f_30728ChickenBridge.scm",(void*)f_30728},
{"f_30704ChickenBridge.scm",(void*)f_30704},
{"f_16761ChickenBridge.scm",(void*)f_16761},
{"f_30684ChickenBridge.scm",(void*)f_30684},
{"f_30678ChickenBridge.scm",(void*)f_30678},
{"f_16764ChickenBridge.scm",(void*)f_16764},
{"f_30658ChickenBridge.scm",(void*)f_30658},
{"f_30662ChickenBridge.scm",(void*)f_30662},
{"f_30650ChickenBridge.scm",(void*)f_30650},
{"f_16767ChickenBridge.scm",(void*)f_16767},
{"f_30630ChickenBridge.scm",(void*)f_30630},
{"f_30634ChickenBridge.scm",(void*)f_30634},
{"f_30622ChickenBridge.scm",(void*)f_30622},
{"f_16770ChickenBridge.scm",(void*)f_16770},
{"f_30602ChickenBridge.scm",(void*)f_30602},
{"f_30606ChickenBridge.scm",(void*)f_30606},
{"f_30594ChickenBridge.scm",(void*)f_30594},
{"f_16773ChickenBridge.scm",(void*)f_16773},
{"f_30574ChickenBridge.scm",(void*)f_30574},
{"f_30578ChickenBridge.scm",(void*)f_30578},
{"f_30566ChickenBridge.scm",(void*)f_30566},
{"f_16776ChickenBridge.scm",(void*)f_16776},
{"f_30465ChickenBridge.scm",(void*)f_30465},
{"f_30435ChickenBridge.scm",(void*)f_30435},
{"f_30459ChickenBridge.scm",(void*)f_30459},
{"f_30429ChickenBridge.scm",(void*)f_30429},
{"f_16779ChickenBridge.scm",(void*)f_16779},
{"f_30379ChickenBridge.scm",(void*)f_30379},
{"f_30381ChickenBridge.scm",(void*)f_30381},
{"f_30385ChickenBridge.scm",(void*)f_30385},
{"f_30413ChickenBridge.scm",(void*)f_30413},
{"f_30405ChickenBridge.scm",(void*)f_30405},
{"f_30401ChickenBridge.scm",(void*)f_30401},
{"f_30388ChickenBridge.scm",(void*)f_30388},
{"f_30371ChickenBridge.scm",(void*)f_30371},
{"f_16782ChickenBridge.scm",(void*)f_16782},
{"f_30318ChickenBridge.scm",(void*)f_30318},
{"f_30320ChickenBridge.scm",(void*)f_30320},
{"f_30324ChickenBridge.scm",(void*)f_30324},
{"f_30355ChickenBridge.scm",(void*)f_30355},
{"f_30347ChickenBridge.scm",(void*)f_30347},
{"f_30343ChickenBridge.scm",(void*)f_30343},
{"f_30327ChickenBridge.scm",(void*)f_30327},
{"f_30330ChickenBridge.scm",(void*)f_30330},
{"f_30310ChickenBridge.scm",(void*)f_30310},
{"f_16785ChickenBridge.scm",(void*)f_16785},
{"f_30260ChickenBridge.scm",(void*)f_30260},
{"f_30274ChickenBridge.scm",(void*)f_30274},
{"f_30266ChickenBridge.scm",(void*)f_30266},
{"f_30225ChickenBridge.scm",(void*)f_30225},
{"f_30258ChickenBridge.scm",(void*)f_30258},
{"f_30219ChickenBridge.scm",(void*)f_30219},
{"f_16788ChickenBridge.scm",(void*)f_16788},
{"f_30166ChickenBridge.scm",(void*)f_30166},
{"f_30170ChickenBridge.scm",(void*)f_30170},
{"f_30183ChickenBridge.scm",(void*)f_30183},
{"f_30175ChickenBridge.scm",(void*)f_30175},
{"f_30123ChickenBridge.scm",(void*)f_30123},
{"f_30156ChickenBridge.scm",(void*)f_30156},
{"f_30117ChickenBridge.scm",(void*)f_30117},
{"f_16791ChickenBridge.scm",(void*)f_16791},
{"f_30037ChickenBridge.scm",(void*)f_30037},
{"f_30031ChickenBridge.scm",(void*)f_30031},
{"f_16794ChickenBridge.scm",(void*)f_16794},
{"f_29800ChickenBridge.scm",(void*)f_29800},
{"f_29804ChickenBridge.scm",(void*)f_29804},
{"f_29812ChickenBridge.scm",(void*)f_29812},
{"f_29835ChickenBridge.scm",(void*)f_29835},
{"f_29838ChickenBridge.scm",(void*)f_29838},
{"f_29841ChickenBridge.scm",(void*)f_29841},
{"f_29844ChickenBridge.scm",(void*)f_29844},
{"f_29904ChickenBridge.scm",(void*)f_29904},
{"f_29911ChickenBridge.scm",(void*)f_29911},
{"f_29921ChickenBridge.scm",(void*)f_29921},
{"f_29931ChickenBridge.scm",(void*)f_29931},
{"f_29945ChickenBridge.scm",(void*)f_29945},
{"f_29955ChickenBridge.scm",(void*)f_29955},
{"f_29965ChickenBridge.scm",(void*)f_29965},
{"f_29975ChickenBridge.scm",(void*)f_29975},
{"f_29847ChickenBridge.scm",(void*)f_29847},
{"f_29871ChickenBridge.scm",(void*)f_29871},
{"f_29850ChickenBridge.scm",(void*)f_29850},
{"f_29757ChickenBridge.scm",(void*)f_29757},
{"f_29790ChickenBridge.scm",(void*)f_29790},
{"f_29751ChickenBridge.scm",(void*)f_29751},
{"f_16797ChickenBridge.scm",(void*)f_16797},
{"f_29669ChickenBridge.scm",(void*)f_29669},
{"f_29673ChickenBridge.scm",(void*)f_29673},
{"f_29679ChickenBridge.scm",(void*)f_29679},
{"f_29699ChickenBridge.scm",(void*)f_29699},
{"f_29643ChickenBridge.scm",(void*)f_29643},
{"f_29653ChickenBridge.scm",(void*)f_29653},
{"f_29637ChickenBridge.scm",(void*)f_29637},
{"f_16800ChickenBridge.scm",(void*)f_16800},
{"f_29514ChickenBridge.scm",(void*)f_29514},
{"f_29518ChickenBridge.scm",(void*)f_29518},
{"f_29446ChickenBridge.scm",(void*)f_29446},
{"f_29465ChickenBridge.scm",(void*)f_29465},
{"f_29500ChickenBridge.scm",(void*)f_29500},
{"f_29471ChickenBridge.scm",(void*)f_29471},
{"f_29475ChickenBridge.scm",(void*)f_29475},
{"f_29489ChickenBridge.scm",(void*)f_29489},
{"f_29478ChickenBridge.scm",(void*)f_29478},
{"f_29459ChickenBridge.scm",(void*)f_29459},
{"f_29440ChickenBridge.scm",(void*)f_29440},
{"f_16803ChickenBridge.scm",(void*)f_16803},
{"f_29168ChickenBridge.scm",(void*)f_29168},
{"f_17326ChickenBridge.scm",(void*)f_17326},
{"f_29120ChickenBridge.scm",(void*)f_29120},
{"f_29112ChickenBridge.scm",(void*)f_29112},
{"f_17329ChickenBridge.scm",(void*)f_17329},
{"f_28992ChickenBridge.scm",(void*)f_28992},
{"f_17335ChickenBridge.scm",(void*)f_17335},
{"f_17810ChickenBridge.scm",(void*)f_17810},
{"f_17844ChickenBridge.scm",(void*)f_17844},
{"f_17836ChickenBridge.scm",(void*)f_17836},
{"f_17832ChickenBridge.scm",(void*)f_17832},
{"f_17817ChickenBridge.scm",(void*)f_17817},
{"f_17821ChickenBridge.scm",(void*)f_17821},
{"f_17814ChickenBridge.scm",(void*)f_17814},
{"f_17353ChickenBridge.scm",(void*)f_17353},
{"f_17803ChickenBridge.scm",(void*)f_17803},
{"f_17799ChickenBridge.scm",(void*)f_17799},
{"f_17360ChickenBridge.scm",(void*)f_17360},
{"f_17674ChickenBridge.scm",(void*)f_17674},
{"f_17695ChickenBridge.scm",(void*)f_17695},
{"f_17697ChickenBridge.scm",(void*)f_17697},
{"f_17711ChickenBridge.scm",(void*)f_17711},
{"f_17764ChickenBridge.scm",(void*)f_17764},
{"f_17714ChickenBridge.scm",(void*)f_17714},
{"f_17749ChickenBridge.scm",(void*)f_17749},
{"f_17717ChickenBridge.scm",(void*)f_17717},
{"f_17730ChickenBridge.scm",(void*)f_17730},
{"f_17742ChickenBridge.scm",(void*)f_17742},
{"f_17734ChickenBridge.scm",(void*)f_17734},
{"f_17720ChickenBridge.scm",(void*)f_17720},
{"f_17684ChickenBridge.scm",(void*)f_17684},
{"f_17363ChickenBridge.scm",(void*)f_17363},
{"f_17638ChickenBridge.scm",(void*)f_17638},
{"f_17664ChickenBridge.scm",(void*)f_17664},
{"f_17649ChickenBridge.scm",(void*)f_17649},
{"f_17366ChickenBridge.scm",(void*)f_17366},
{"f_17370ChickenBridge.scm",(void*)f_17370},
{"f_17582ChickenBridge.scm",(void*)f_17582},
{"f_17592ChickenBridge.scm",(void*)f_17592},
{"f_17595ChickenBridge.scm",(void*)f_17595},
{"f_17616ChickenBridge.scm",(void*)f_17616},
{"f_17598ChickenBridge.scm",(void*)f_17598},
{"f_17602ChickenBridge.scm",(void*)f_17602},
{"f_17373ChickenBridge.scm",(void*)f_17373},
{"f_17376ChickenBridge.scm",(void*)f_17376},
{"f_17545ChickenBridge.scm",(void*)f_17545},
{"f_17553ChickenBridge.scm",(void*)f_17553},
{"f_17549ChickenBridge.scm",(void*)f_17549},
{"f_17379ChickenBridge.scm",(void*)f_17379},
{"f_17407ChickenBridge.scm",(void*)f_17407},
{"f_17410ChickenBridge.scm",(void*)f_17410},
{"f_17413ChickenBridge.scm",(void*)f_17413},
{"f_17416ChickenBridge.scm",(void*)f_17416},
{"f_17419ChickenBridge.scm",(void*)f_17419},
{"f_17478ChickenBridge.scm",(void*)f_17478},
{"f_28946ChickenBridge.scm",(void*)f_28946},
{"f_28962ChickenBridge.scm",(void*)f_28962},
{"f_28965ChickenBridge.scm",(void*)f_28965},
{"f_28968ChickenBridge.scm",(void*)f_28968},
{"f_28971ChickenBridge.scm",(void*)f_28971},
{"f_28982ChickenBridge.scm",(void*)f_28982},
{"f_28940ChickenBridge.scm",(void*)f_28940},
{"f_17851ChickenBridge.scm",(void*)f_17851},
{"f_28801ChickenBridge.scm",(void*)f_28801},
{"f_28840ChickenBridge.scm",(void*)f_28840},
{"f_28814ChickenBridge.scm",(void*)f_28814},
{"f_28795ChickenBridge.scm",(void*)f_28795},
{"f_17854ChickenBridge.scm",(void*)f_17854},
{"f_28383ChickenBridge.scm",(void*)f_28383},
{"f_28387ChickenBridge.scm",(void*)f_28387},
{"f_28399ChickenBridge.scm",(void*)f_28399},
{"f_28457ChickenBridge.scm",(void*)f_28457},
{"f_28460ChickenBridge.scm",(void*)f_28460},
{"f_28463ChickenBridge.scm",(void*)f_28463},
{"f_28675ChickenBridge.scm",(void*)f_28675},
{"f_28613ChickenBridge.scm",(void*)f_28613},
{"f_28647ChickenBridge.scm",(void*)f_28647},
{"f_28622ChickenBridge.scm",(void*)f_28622},
{"f_28633ChickenBridge.scm",(void*)f_28633},
{"f_28629ChickenBridge.scm",(void*)f_28629},
{"f_28472ChickenBridge.scm",(void*)f_28472},
{"f_28550ChickenBridge.scm",(void*)f_28550},
{"f_28591ChickenBridge.scm",(void*)f_28591},
{"f_28595ChickenBridge.scm",(void*)f_28595},
{"f_28599ChickenBridge.scm",(void*)f_28599},
{"f_28554ChickenBridge.scm",(void*)f_28554},
{"f_28558ChickenBridge.scm",(void*)f_28558},
{"f_28585ChickenBridge.scm",(void*)f_28585},
{"f_28561ChickenBridge.scm",(void*)f_28561},
{"f_28475ChickenBridge.scm",(void*)f_28475},
{"f_28547ChickenBridge.scm",(void*)f_28547},
{"f_28489ChickenBridge.scm",(void*)f_28489},
{"f_28491ChickenBridge.scm",(void*)f_28491},
{"f_28539ChickenBridge.scm",(void*)f_28539},
{"f_28510ChickenBridge.scm",(void*)f_28510},
{"f_28527ChickenBridge.scm",(void*)f_28527},
{"f_28513ChickenBridge.scm",(void*)f_28513},
{"f_28506ChickenBridge.scm",(void*)f_28506},
{"f_28478ChickenBridge.scm",(void*)f_28478},
{"f_28408ChickenBridge.scm",(void*)f_28408},
{"f_28418ChickenBridge.scm",(void*)f_28418},
{"f_28424ChickenBridge.scm",(void*)f_28424},
{"f_28396ChickenBridge.scm",(void*)f_28396},
{"f_28344ChickenBridge.scm",(void*)f_28344},
{"f_28361ChickenBridge.scm",(void*)f_28361},
{"f_28377ChickenBridge.scm",(void*)f_28377},
{"f_28355ChickenBridge.scm",(void*)f_28355},
{"f_28338ChickenBridge.scm",(void*)f_28338},
{"f_17857ChickenBridge.scm",(void*)f_17857},
{"f_28262ChickenBridge.scm",(void*)f_28262},
{"f_17860ChickenBridge.scm",(void*)f_17860},
{"f_28238ChickenBridge.scm",(void*)f_28238},
{"f_28250ChickenBridge.scm",(void*)f_28250},
{"f_28246ChickenBridge.scm",(void*)f_28246},
{"f_28224ChickenBridge.scm",(void*)f_28224},
{"f_28232ChickenBridge.scm",(void*)f_28232},
{"f_28218ChickenBridge.scm",(void*)f_28218},
{"f_17863ChickenBridge.scm",(void*)f_17863},
{"f_28210ChickenBridge.scm",(void*)f_28210},
{"f_21653ChickenBridge.scm",(void*)f_21653},
{"f_21656ChickenBridge.scm",(void*)f_21656},
{"f_21822ChickenBridge.scm",(void*)f_21822},
{"f_21818ChickenBridge.scm",(void*)f_21818},
{"f_21808ChickenBridge.scm",(void*)f_21808},
{"f_21663ChickenBridge.scm",(void*)f_21663},
{"f_21667ChickenBridge.scm",(void*)f_21667},
{"f_21670ChickenBridge.scm",(void*)f_21670},
{"f_21681ChickenBridge.scm",(void*)f_21681},
{"f_21689ChickenBridge.scm",(void*)f_21689},
{"f_21761ChickenBridge.scm",(void*)f_21761},
{"f_21769ChickenBridge.scm",(void*)f_21769},
{"f_21765ChickenBridge.scm",(void*)f_21765},
{"f_21757ChickenBridge.scm",(void*)f_21757},
{"f_21753ChickenBridge.scm",(void*)f_21753},
{"f_21725ChickenBridge.scm",(void*)f_21725},
{"f_21721ChickenBridge.scm",(void*)f_21721},
{"f_21685ChickenBridge.scm",(void*)f_21685},
{"f_18300ChickenBridge.scm",(void*)f_18300},
{"f_28196ChickenBridge.scm",(void*)f_28196},
{"f_18303ChickenBridge.scm",(void*)f_18303},
{"f_28167ChickenBridge.scm",(void*)f_28167},
{"f_28171ChickenBridge.scm",(void*)f_28171},
{"f_18306ChickenBridge.scm",(void*)f_18306},
{"f_28164ChickenBridge.scm",(void*)f_28164},
{"f_18309ChickenBridge.scm",(void*)f_18309},
{"f_28022ChickenBridge.scm",(void*)f_28022},
{"f_21835ChickenBridge.scm",(void*)f_21835},
{"f_21967ChickenBridge.scm",(void*)f_21967},
{"f_21838ChickenBridge.scm",(void*)f_21838},
{"f_21849ChickenBridge.scm",(void*)f_21849},
{"f_21857ChickenBridge.scm",(void*)f_21857},
{"f_21881ChickenBridge.scm",(void*)f_21881},
{"f_21884ChickenBridge.scm",(void*)f_21884},
{"f_21892ChickenBridge.scm",(void*)f_21892},
{"f_21900ChickenBridge.scm",(void*)f_21900},
{"f_21920ChickenBridge.scm",(void*)f_21920},
{"f_21916ChickenBridge.scm",(void*)f_21916},
{"f_21896ChickenBridge.scm",(void*)f_21896},
{"f_21888ChickenBridge.scm",(void*)f_21888},
{"f_21877ChickenBridge.scm",(void*)f_21877},
{"f_21853ChickenBridge.scm",(void*)f_21853},
{"f_21829ChickenBridge.scm",(void*)f_21829},
{"f_26751ChickenBridge.scm",(void*)f_26751},
{"f_26754ChickenBridge.scm",(void*)f_26754},
{"f_26757ChickenBridge.scm",(void*)f_26757},
{"f_26760ChickenBridge.scm",(void*)f_26760},
{"f_26763ChickenBridge.scm",(void*)f_26763},
{"f_26766ChickenBridge.scm",(void*)f_26766},
{"f_26769ChickenBridge.scm",(void*)f_26769},
{"f_26772ChickenBridge.scm",(void*)f_26772},
{"f_26775ChickenBridge.scm",(void*)f_26775},
{"f_26778ChickenBridge.scm",(void*)f_26778},
{"f_26781ChickenBridge.scm",(void*)f_26781},
{"f_26906ChickenBridge.scm",(void*)f_26906},
{"f_26909ChickenBridge.scm",(void*)f_26909},
{"f_26912ChickenBridge.scm",(void*)f_26912},
{"f_28016ChickenBridge.scm",(void*)f_28016},
{"f_27570ChickenBridge.scm",(void*)f_27570},
{"f_27573ChickenBridge.scm",(void*)f_27573},
{"f_27851ChickenBridge.scm",(void*)f_27851},
{"f_27959ChickenBridge.scm",(void*)f_27959},
{"f_27871ChickenBridge.scm",(void*)f_27871},
{"f_27880ChickenBridge.scm",(void*)f_27880},
{"f_27884ChickenBridge.scm",(void*)f_27884},
{"f_27888ChickenBridge.scm",(void*)f_27888},
{"f_27896ChickenBridge.scm",(void*)f_27896},
{"f_27892ChickenBridge.scm",(void*)f_27892},
{"f_27861ChickenBridge.scm",(void*)f_27861},
{"f_27576ChickenBridge.scm",(void*)f_27576},
{"f_27579ChickenBridge.scm",(void*)f_27579},
{"f_27582ChickenBridge.scm",(void*)f_27582},
{"f_27585ChickenBridge.scm",(void*)f_27585},
{"f_27588ChickenBridge.scm",(void*)f_27588},
{"f_27845ChickenBridge.scm",(void*)f_27845},
{"f_27744ChickenBridge.scm",(void*)f_27744},
{"f_27751ChickenBridge.scm",(void*)f_27751},
{"f_27753ChickenBridge.scm",(void*)f_27753},
{"f_27825ChickenBridge.scm",(void*)f_27825},
{"f_27777ChickenBridge.scm",(void*)f_27777},
{"f_27780ChickenBridge.scm",(void*)f_27780},
{"f_27801ChickenBridge.scm",(void*)f_27801},
{"f_27767ChickenBridge.scm",(void*)f_27767},
{"f_27591ChickenBridge.scm",(void*)f_27591},
{"f_27733ChickenBridge.scm",(void*)f_27733},
{"f_27721ChickenBridge.scm",(void*)f_27721},
{"f_27717ChickenBridge.scm",(void*)f_27717},
{"f_27598ChickenBridge.scm",(void*)f_27598},
{"f_27555ChickenBridge.scm",(void*)f_27555},
{"f_28014ChickenBridge.scm",(void*)f_28014},
{"f_27545ChickenBridge.scm",(void*)f_27545},
{"f_27208ChickenBridge.scm",(void*)f_27208},
{"f_27549ChickenBridge.scm",(void*)f_27549},
{"f_27487ChickenBridge.scm",(void*)f_27487},
{"f_27505ChickenBridge.scm",(void*)f_27505},
{"f_27515ChickenBridge.scm",(void*)f_27515},
{"f_27491ChickenBridge.scm",(void*)f_27491},
{"f_27478ChickenBridge.scm",(void*)f_27478},
{"f_27186ChickenBridge.scm",(void*)f_27186},
{"f_27482ChickenBridge.scm",(void*)f_27482},
{"f_27472ChickenBridge.scm",(void*)f_27472},
{"f_27168ChickenBridge.scm",(void*)f_27168},
{"f_27463ChickenBridge.scm",(void*)f_27463},
{"f_27177ChickenBridge.scm",(void*)f_27177},
{"f_27467ChickenBridge.scm",(void*)f_27467},
{"f_27400ChickenBridge.scm",(void*)f_27400},
{"f_27425ChickenBridge.scm",(void*)f_27425},
{"f_27133ChickenBridge.scm",(void*)f_27133},
{"f_27413ChickenBridge.scm",(void*)f_27413},
{"f_27232ChickenBridge.scm",(void*)f_27232},
{"f_27351ChickenBridge.scm",(void*)f_27351},
{"f_27346ChickenBridge.scm",(void*)f_27346},
{"f_27234ChickenBridge.scm",(void*)f_27234},
{"f_27341ChickenBridge.scm",(void*)f_27341},
{"f_27345ChickenBridge.scm",(void*)f_27345},
{"f_27337ChickenBridge.scm",(void*)f_27337},
{"f_27305ChickenBridge.scm",(void*)f_27305},
{"f_27330ChickenBridge.scm",(void*)f_27330},
{"f_27334ChickenBridge.scm",(void*)f_27334},
{"f_27315ChickenBridge.scm",(void*)f_27315},
{"f_27294ChickenBridge.scm",(void*)f_27294},
{"f_27264ChickenBridge.scm",(void*)f_27264},
{"f_27236ChickenBridge.scm",(void*)f_27236},
{"f_27213ChickenBridge.scm",(void*)f_27213},
{"f_27218ChickenBridge.scm",(void*)f_27218},
{"f_27223ChickenBridge.scm",(void*)f_27223},
{"f_27191ChickenBridge.scm",(void*)f_27191},
{"f_27195ChickenBridge.scm",(void*)f_27195},
{"f_27147ChickenBridge.scm",(void*)f_27147},
{"f_27151ChickenBridge.scm",(void*)f_27151},
{"f_27138ChickenBridge.scm",(void*)f_27138},
{"f_27142ChickenBridge.scm",(void*)f_27142},
{"f_27126ChickenBridge.scm",(void*)f_27126},
{"f_27123ChickenBridge.scm",(void*)f_27123},
{"f_27109ChickenBridge.scm",(void*)f_27109},
{"f_27114ChickenBridge.scm",(void*)f_27114},
{"f_27095ChickenBridge.scm",(void*)f_27095},
{"f_27100ChickenBridge.scm",(void*)f_27100},
{"f_26914ChickenBridge.scm",(void*)f_26914},
{"f_26975ChickenBridge.scm",(void*)f_26975},
{"f_26977ChickenBridge.scm",(void*)f_26977},
{"f_27003ChickenBridge.scm",(void*)f_27003},
{"f_27043ChickenBridge.scm",(void*)f_27043},
{"f_27085ChickenBridge.scm",(void*)f_27085},
{"f_27055ChickenBridge.scm",(void*)f_27055},
{"f_27040ChickenBridge.scm",(void*)f_27040},
{"f_26961ChickenBridge.scm",(void*)f_26961},
{"f_26926ChickenBridge.scm",(void*)f_26926},
{"f_26953ChickenBridge.scm",(void*)f_26953},
{"f_26934ChickenBridge.scm",(void*)f_26934},
{"f_26941ChickenBridge.scm",(void*)f_26941},
{"f_26945ChickenBridge.scm",(void*)f_26945},
{"f_26949ChickenBridge.scm",(void*)f_26949},
{"f_27023ChickenBridge.scm",(void*)f_27023},
{"f_27001ChickenBridge.scm",(void*)f_27001},
{"f_26987ChickenBridge.scm",(void*)f_26987},
{"f_26990ChickenBridge.scm",(void*)f_26990},
{"f_26968ChickenBridge.scm",(void*)f_26968},
{"f_26897ChickenBridge.scm",(void*)f_26897},
{"f_26902ChickenBridge.scm",(void*)f_26902},
{"f_26840ChickenBridge.scm",(void*)f_26840},
{"f_26873ChickenBridge.scm",(void*)f_26873},
{"f_26853ChickenBridge.scm",(void*)f_26853},
{"f_26861ChickenBridge.scm",(void*)f_26861},
{"f_26844ChickenBridge.scm",(void*)f_26844},
{"f_26783ChickenBridge.scm",(void*)f_26783},
{"f_26816ChickenBridge.scm",(void*)f_26816},
{"f_26796ChickenBridge.scm",(void*)f_26796},
{"f_26804ChickenBridge.scm",(void*)f_26804},
{"f_26787ChickenBridge.scm",(void*)f_26787},
{"f_26693ChickenBridge.scm",(void*)f_26693},
{"f_26747ChickenBridge.scm",(void*)f_26747},
{"f_26742ChickenBridge.scm",(void*)f_26742},
{"f_26705ChickenBridge.scm",(void*)f_26705},
{"f_26711ChickenBridge.scm",(void*)f_26711},
{"f_26737ChickenBridge.scm",(void*)f_26737},
{"f_26741ChickenBridge.scm",(void*)f_26741},
{"f_26717ChickenBridge.scm",(void*)f_26717},
{"f_26735ChickenBridge.scm",(void*)f_26735},
{"f_26732ChickenBridge.scm",(void*)f_26732},
{"f_26728ChickenBridge.scm",(void*)f_26728},
{"f_26721ChickenBridge.scm",(void*)f_26721},
{"f_26678ChickenBridge.scm",(void*)f_26678},
{"f_26683ChickenBridge.scm",(void*)f_26683},
{"f_26650ChickenBridge.scm",(void*)f_26650},
{"f_26655ChickenBridge.scm",(void*)f_26655},
{"f_26622ChickenBridge.scm",(void*)f_26622},
{"f_26627ChickenBridge.scm",(void*)f_26627},
{"f_26594ChickenBridge.scm",(void*)f_26594},
{"f_26599ChickenBridge.scm",(void*)f_26599},
{"f_26566ChickenBridge.scm",(void*)f_26566},
{"f_26571ChickenBridge.scm",(void*)f_26571},
{"f_26538ChickenBridge.scm",(void*)f_26538},
{"f_26543ChickenBridge.scm",(void*)f_26543},
{"f_26510ChickenBridge.scm",(void*)f_26510},
{"f_26515ChickenBridge.scm",(void*)f_26515},
{"f_26482ChickenBridge.scm",(void*)f_26482},
{"f_26487ChickenBridge.scm",(void*)f_26487},
{"f_26454ChickenBridge.scm",(void*)f_26454},
{"f_26459ChickenBridge.scm",(void*)f_26459},
{"f_26426ChickenBridge.scm",(void*)f_26426},
{"f_26431ChickenBridge.scm",(void*)f_26431},
{"f_26403ChickenBridge.scm",(void*)f_26403},
{"f_26408ChickenBridge.scm",(void*)f_26408},
{"f_26407ChickenBridge.scm",(void*)f_26407},
{"f_26384ChickenBridge.scm",(void*)f_26384},
{"f_26389ChickenBridge.scm",(void*)f_26389},
{"f_26329ChickenBridge.scm",(void*)f_26329},
{"f_26336ChickenBridge.scm",(void*)f_26336},
{"f_26339ChickenBridge.scm",(void*)f_26339},
{"f_26363ChickenBridge.scm",(void*)f_26363},
{"f_26343ChickenBridge.scm",(void*)f_26343},
{"f_26333ChickenBridge.scm",(void*)f_26333},
{"f_26282ChickenBridge.scm",(void*)f_26282},
{"f_26289ChickenBridge.scm",(void*)f_26289},
{"f_26292ChickenBridge.scm",(void*)f_26292},
{"f_26312ChickenBridge.scm",(void*)f_26312},
{"f_26296ChickenBridge.scm",(void*)f_26296},
{"f_26259ChickenBridge.scm",(void*)f_26259},
{"f_26264ChickenBridge.scm",(void*)f_26264},
{"f_26263ChickenBridge.scm",(void*)f_26263},
{"f_26240ChickenBridge.scm",(void*)f_26240},
{"f_26245ChickenBridge.scm",(void*)f_26245},
{"f_26217ChickenBridge.scm",(void*)f_26217},
{"f_26222ChickenBridge.scm",(void*)f_26222},
{"f_26221ChickenBridge.scm",(void*)f_26221},
{"f_26198ChickenBridge.scm",(void*)f_26198},
{"f_26203ChickenBridge.scm",(void*)f_26203},
{"f_26179ChickenBridge.scm",(void*)f_26179},
{"f_26184ChickenBridge.scm",(void*)f_26184},
{"f_26183ChickenBridge.scm",(void*)f_26183},
{"f_26164ChickenBridge.scm",(void*)f_26164},
{"f_26169ChickenBridge.scm",(void*)f_26169},
{"f_26145ChickenBridge.scm",(void*)f_26145},
{"f_26150ChickenBridge.scm",(void*)f_26150},
{"f_26149ChickenBridge.scm",(void*)f_26149},
{"f_26130ChickenBridge.scm",(void*)f_26130},
{"f_26135ChickenBridge.scm",(void*)f_26135},
{"f_26115ChickenBridge.scm",(void*)f_26115},
{"f_26120ChickenBridge.scm",(void*)f_26120},
{"f_26097ChickenBridge.scm",(void*)f_26097},
{"f_26105ChickenBridge.scm",(void*)f_26105},
{"f_26101ChickenBridge.scm",(void*)f_26101},
{"f_25627ChickenBridge.scm",(void*)f_25627},
{"f_26055ChickenBridge.scm",(void*)f_26055},
{"f_26070ChickenBridge.scm",(void*)f_26070},
{"f_26062ChickenBridge.scm",(void*)f_26062},
{"f_26026ChickenBridge.scm",(void*)f_26026},
{"f_26030ChickenBridge.scm",(void*)f_26030},
{"f_25991ChickenBridge.scm",(void*)f_25991},
{"f_25995ChickenBridge.scm",(void*)f_25995},
{"f_25956ChickenBridge.scm",(void*)f_25956},
{"f_25960ChickenBridge.scm",(void*)f_25960},
{"f_25631ChickenBridge.scm",(void*)f_25631},
{"f_25920ChickenBridge.scm",(void*)f_25920},
{"f_25935ChickenBridge.scm",(void*)f_25935},
{"f_25927ChickenBridge.scm",(void*)f_25927},
{"f_25891ChickenBridge.scm",(void*)f_25891},
{"f_25895ChickenBridge.scm",(void*)f_25895},
{"f_25856ChickenBridge.scm",(void*)f_25856},
{"f_25860ChickenBridge.scm",(void*)f_25860},
{"f_25821ChickenBridge.scm",(void*)f_25821},
{"f_25825ChickenBridge.scm",(void*)f_25825},
{"f_25634ChickenBridge.scm",(void*)f_25634},
{"f_25785ChickenBridge.scm",(void*)f_25785},
{"f_25800ChickenBridge.scm",(void*)f_25800},
{"f_25792ChickenBridge.scm",(void*)f_25792},
{"f_25756ChickenBridge.scm",(void*)f_25756},
{"f_25760ChickenBridge.scm",(void*)f_25760},
{"f_25721ChickenBridge.scm",(void*)f_25721},
{"f_25725ChickenBridge.scm",(void*)f_25725},
{"f_25686ChickenBridge.scm",(void*)f_25686},
{"f_25690ChickenBridge.scm",(void*)f_25690},
{"f_25637ChickenBridge.scm",(void*)f_25637},
{"f_25640ChickenBridge.scm",(void*)f_25640},
{"f_25644ChickenBridge.scm",(void*)f_25644},
{"f_25608ChickenBridge.scm",(void*)f_25608},
{"f_25613ChickenBridge.scm",(void*)f_25613},
{"f_25157ChickenBridge.scm",(void*)f_25157},
{"f_25585ChickenBridge.scm",(void*)f_25585},
{"f_25600ChickenBridge.scm",(void*)f_25600},
{"f_25592ChickenBridge.scm",(void*)f_25592},
{"f_25556ChickenBridge.scm",(void*)f_25556},
{"f_25560ChickenBridge.scm",(void*)f_25560},
{"f_25521ChickenBridge.scm",(void*)f_25521},
{"f_25525ChickenBridge.scm",(void*)f_25525},
{"f_25486ChickenBridge.scm",(void*)f_25486},
{"f_25490ChickenBridge.scm",(void*)f_25490},
{"f_25161ChickenBridge.scm",(void*)f_25161},
{"f_25450ChickenBridge.scm",(void*)f_25450},
{"f_25465ChickenBridge.scm",(void*)f_25465},
{"f_25457ChickenBridge.scm",(void*)f_25457},
{"f_25421ChickenBridge.scm",(void*)f_25421},
{"f_25425ChickenBridge.scm",(void*)f_25425},
{"f_25386ChickenBridge.scm",(void*)f_25386},
{"f_25390ChickenBridge.scm",(void*)f_25390},
{"f_25351ChickenBridge.scm",(void*)f_25351},
{"f_25355ChickenBridge.scm",(void*)f_25355},
{"f_25164ChickenBridge.scm",(void*)f_25164},
{"f_25315ChickenBridge.scm",(void*)f_25315},
{"f_25330ChickenBridge.scm",(void*)f_25330},
{"f_25322ChickenBridge.scm",(void*)f_25322},
{"f_25286ChickenBridge.scm",(void*)f_25286},
{"f_25290ChickenBridge.scm",(void*)f_25290},
{"f_25251ChickenBridge.scm",(void*)f_25251},
{"f_25255ChickenBridge.scm",(void*)f_25255},
{"f_25216ChickenBridge.scm",(void*)f_25216},
{"f_25220ChickenBridge.scm",(void*)f_25220},
{"f_25167ChickenBridge.scm",(void*)f_25167},
{"f_25170ChickenBridge.scm",(void*)f_25170},
{"f_25174ChickenBridge.scm",(void*)f_25174},
{"f_25138ChickenBridge.scm",(void*)f_25138},
{"f_25143ChickenBridge.scm",(void*)f_25143},
{"f_24687ChickenBridge.scm",(void*)f_24687},
{"f_25115ChickenBridge.scm",(void*)f_25115},
{"f_25130ChickenBridge.scm",(void*)f_25130},
{"f_25122ChickenBridge.scm",(void*)f_25122},
{"f_25086ChickenBridge.scm",(void*)f_25086},
{"f_25090ChickenBridge.scm",(void*)f_25090},
{"f_25051ChickenBridge.scm",(void*)f_25051},
{"f_25055ChickenBridge.scm",(void*)f_25055},
{"f_25016ChickenBridge.scm",(void*)f_25016},
{"f_25020ChickenBridge.scm",(void*)f_25020},
{"f_24691ChickenBridge.scm",(void*)f_24691},
{"f_24980ChickenBridge.scm",(void*)f_24980},
{"f_24995ChickenBridge.scm",(void*)f_24995},
{"f_24987ChickenBridge.scm",(void*)f_24987},
{"f_24951ChickenBridge.scm",(void*)f_24951},
{"f_24955ChickenBridge.scm",(void*)f_24955},
{"f_24916ChickenBridge.scm",(void*)f_24916},
{"f_24920ChickenBridge.scm",(void*)f_24920},
{"f_24881ChickenBridge.scm",(void*)f_24881},
{"f_24885ChickenBridge.scm",(void*)f_24885},
{"f_24694ChickenBridge.scm",(void*)f_24694},
{"f_24845ChickenBridge.scm",(void*)f_24845},
{"f_24860ChickenBridge.scm",(void*)f_24860},
{"f_24852ChickenBridge.scm",(void*)f_24852},
{"f_24816ChickenBridge.scm",(void*)f_24816},
{"f_24820ChickenBridge.scm",(void*)f_24820},
{"f_24781ChickenBridge.scm",(void*)f_24781},
{"f_24785ChickenBridge.scm",(void*)f_24785},
{"f_24746ChickenBridge.scm",(void*)f_24746},
{"f_24750ChickenBridge.scm",(void*)f_24750},
{"f_24697ChickenBridge.scm",(void*)f_24697},
{"f_24700ChickenBridge.scm",(void*)f_24700},
{"f_24704ChickenBridge.scm",(void*)f_24704},
{"f_24668ChickenBridge.scm",(void*)f_24668},
{"f_24673ChickenBridge.scm",(void*)f_24673},
{"f_23939ChickenBridge.scm",(void*)f_23939},
{"f_24645ChickenBridge.scm",(void*)f_24645},
{"f_24660ChickenBridge.scm",(void*)f_24660},
{"f_24652ChickenBridge.scm",(void*)f_24652},
{"f_24616ChickenBridge.scm",(void*)f_24616},
{"f_24620ChickenBridge.scm",(void*)f_24620},
{"f_24581ChickenBridge.scm",(void*)f_24581},
{"f_24585ChickenBridge.scm",(void*)f_24585},
{"f_24546ChickenBridge.scm",(void*)f_24546},
{"f_24550ChickenBridge.scm",(void*)f_24550},
{"f_24511ChickenBridge.scm",(void*)f_24511},
{"f_24515ChickenBridge.scm",(void*)f_24515},
{"f_23943ChickenBridge.scm",(void*)f_23943},
{"f_24475ChickenBridge.scm",(void*)f_24475},
{"f_24490ChickenBridge.scm",(void*)f_24490},
{"f_24482ChickenBridge.scm",(void*)f_24482},
{"f_24446ChickenBridge.scm",(void*)f_24446},
{"f_24450ChickenBridge.scm",(void*)f_24450},
{"f_24411ChickenBridge.scm",(void*)f_24411},
{"f_24415ChickenBridge.scm",(void*)f_24415},
{"f_24376ChickenBridge.scm",(void*)f_24376},
{"f_24380ChickenBridge.scm",(void*)f_24380},
{"f_24341ChickenBridge.scm",(void*)f_24341},
{"f_24345ChickenBridge.scm",(void*)f_24345},
{"f_23946ChickenBridge.scm",(void*)f_23946},
{"f_24305ChickenBridge.scm",(void*)f_24305},
{"f_24320ChickenBridge.scm",(void*)f_24320},
{"f_24312ChickenBridge.scm",(void*)f_24312},
{"f_24276ChickenBridge.scm",(void*)f_24276},
{"f_24280ChickenBridge.scm",(void*)f_24280},
{"f_24241ChickenBridge.scm",(void*)f_24241},
{"f_24245ChickenBridge.scm",(void*)f_24245},
{"f_24206ChickenBridge.scm",(void*)f_24206},
{"f_24210ChickenBridge.scm",(void*)f_24210},
{"f_24171ChickenBridge.scm",(void*)f_24171},
{"f_24175ChickenBridge.scm",(void*)f_24175},
{"f_23949ChickenBridge.scm",(void*)f_23949},
{"f_24135ChickenBridge.scm",(void*)f_24135},
{"f_24150ChickenBridge.scm",(void*)f_24150},
{"f_24142ChickenBridge.scm",(void*)f_24142},
{"f_24106ChickenBridge.scm",(void*)f_24106},
{"f_24110ChickenBridge.scm",(void*)f_24110},
{"f_24071ChickenBridge.scm",(void*)f_24071},
{"f_24075ChickenBridge.scm",(void*)f_24075},
{"f_24036ChickenBridge.scm",(void*)f_24036},
{"f_24040ChickenBridge.scm",(void*)f_24040},
{"f_24001ChickenBridge.scm",(void*)f_24001},
{"f_24005ChickenBridge.scm",(void*)f_24005},
{"f_23952ChickenBridge.scm",(void*)f_23952},
{"f_23955ChickenBridge.scm",(void*)f_23955},
{"f_23959ChickenBridge.scm",(void*)f_23959},
{"f_23920ChickenBridge.scm",(void*)f_23920},
{"f_23925ChickenBridge.scm",(void*)f_23925},
{"f_23191ChickenBridge.scm",(void*)f_23191},
{"f_23897ChickenBridge.scm",(void*)f_23897},
{"f_23912ChickenBridge.scm",(void*)f_23912},
{"f_23904ChickenBridge.scm",(void*)f_23904},
{"f_23868ChickenBridge.scm",(void*)f_23868},
{"f_23872ChickenBridge.scm",(void*)f_23872},
{"f_23833ChickenBridge.scm",(void*)f_23833},
{"f_23837ChickenBridge.scm",(void*)f_23837},
{"f_23798ChickenBridge.scm",(void*)f_23798},
{"f_23802ChickenBridge.scm",(void*)f_23802},
{"f_23763ChickenBridge.scm",(void*)f_23763},
{"f_23767ChickenBridge.scm",(void*)f_23767},
{"f_23195ChickenBridge.scm",(void*)f_23195},
{"f_23727ChickenBridge.scm",(void*)f_23727},
{"f_23742ChickenBridge.scm",(void*)f_23742},
{"f_23734ChickenBridge.scm",(void*)f_23734},
{"f_23698ChickenBridge.scm",(void*)f_23698},
{"f_23702ChickenBridge.scm",(void*)f_23702},
{"f_23663ChickenBridge.scm",(void*)f_23663},
{"f_23667ChickenBridge.scm",(void*)f_23667},
{"f_23628ChickenBridge.scm",(void*)f_23628},
{"f_23632ChickenBridge.scm",(void*)f_23632},
{"f_23593ChickenBridge.scm",(void*)f_23593},
{"f_23597ChickenBridge.scm",(void*)f_23597},
{"f_23198ChickenBridge.scm",(void*)f_23198},
{"f_23557ChickenBridge.scm",(void*)f_23557},
{"f_23572ChickenBridge.scm",(void*)f_23572},
{"f_23564ChickenBridge.scm",(void*)f_23564},
{"f_23528ChickenBridge.scm",(void*)f_23528},
{"f_23532ChickenBridge.scm",(void*)f_23532},
{"f_23493ChickenBridge.scm",(void*)f_23493},
{"f_23497ChickenBridge.scm",(void*)f_23497},
{"f_23458ChickenBridge.scm",(void*)f_23458},
{"f_23462ChickenBridge.scm",(void*)f_23462},
{"f_23423ChickenBridge.scm",(void*)f_23423},
{"f_23427ChickenBridge.scm",(void*)f_23427},
{"f_23201ChickenBridge.scm",(void*)f_23201},
{"f_23387ChickenBridge.scm",(void*)f_23387},
{"f_23402ChickenBridge.scm",(void*)f_23402},
{"f_23394ChickenBridge.scm",(void*)f_23394},
{"f_23358ChickenBridge.scm",(void*)f_23358},
{"f_23362ChickenBridge.scm",(void*)f_23362},
{"f_23323ChickenBridge.scm",(void*)f_23323},
{"f_23327ChickenBridge.scm",(void*)f_23327},
{"f_23288ChickenBridge.scm",(void*)f_23288},
{"f_23292ChickenBridge.scm",(void*)f_23292},
{"f_23253ChickenBridge.scm",(void*)f_23253},
{"f_23257ChickenBridge.scm",(void*)f_23257},
{"f_23204ChickenBridge.scm",(void*)f_23204},
{"f_23207ChickenBridge.scm",(void*)f_23207},
{"f_23211ChickenBridge.scm",(void*)f_23211},
{"f_23172ChickenBridge.scm",(void*)f_23172},
{"f_23177ChickenBridge.scm",(void*)f_23177},
{"f_22721ChickenBridge.scm",(void*)f_22721},
{"f_23149ChickenBridge.scm",(void*)f_23149},
{"f_23164ChickenBridge.scm",(void*)f_23164},
{"f_23156ChickenBridge.scm",(void*)f_23156},
{"f_23120ChickenBridge.scm",(void*)f_23120},
{"f_23124ChickenBridge.scm",(void*)f_23124},
{"f_23085ChickenBridge.scm",(void*)f_23085},
{"f_23089ChickenBridge.scm",(void*)f_23089},
{"f_23050ChickenBridge.scm",(void*)f_23050},
{"f_23054ChickenBridge.scm",(void*)f_23054},
{"f_22725ChickenBridge.scm",(void*)f_22725},
{"f_23014ChickenBridge.scm",(void*)f_23014},
{"f_23029ChickenBridge.scm",(void*)f_23029},
{"f_23021ChickenBridge.scm",(void*)f_23021},
{"f_22985ChickenBridge.scm",(void*)f_22985},
{"f_22989ChickenBridge.scm",(void*)f_22989},
{"f_22950ChickenBridge.scm",(void*)f_22950},
{"f_22954ChickenBridge.scm",(void*)f_22954},
{"f_22915ChickenBridge.scm",(void*)f_22915},
{"f_22919ChickenBridge.scm",(void*)f_22919},
{"f_22728ChickenBridge.scm",(void*)f_22728},
{"f_22879ChickenBridge.scm",(void*)f_22879},
{"f_22894ChickenBridge.scm",(void*)f_22894},
{"f_22886ChickenBridge.scm",(void*)f_22886},
{"f_22850ChickenBridge.scm",(void*)f_22850},
{"f_22854ChickenBridge.scm",(void*)f_22854},
{"f_22815ChickenBridge.scm",(void*)f_22815},
{"f_22819ChickenBridge.scm",(void*)f_22819},
{"f_22780ChickenBridge.scm",(void*)f_22780},
{"f_22784ChickenBridge.scm",(void*)f_22784},
{"f_22731ChickenBridge.scm",(void*)f_22731},
{"f_22734ChickenBridge.scm",(void*)f_22734},
{"f_22738ChickenBridge.scm",(void*)f_22738},
{"f_22702ChickenBridge.scm",(void*)f_22702},
{"f_22707ChickenBridge.scm",(void*)f_22707},
{"f_21973ChickenBridge.scm",(void*)f_21973},
{"f_22679ChickenBridge.scm",(void*)f_22679},
{"f_22694ChickenBridge.scm",(void*)f_22694},
{"f_22686ChickenBridge.scm",(void*)f_22686},
{"f_22650ChickenBridge.scm",(void*)f_22650},
{"f_22654ChickenBridge.scm",(void*)f_22654},
{"f_22615ChickenBridge.scm",(void*)f_22615},
{"f_22619ChickenBridge.scm",(void*)f_22619},
{"f_22580ChickenBridge.scm",(void*)f_22580},
{"f_22584ChickenBridge.scm",(void*)f_22584},
{"f_22545ChickenBridge.scm",(void*)f_22545},
{"f_22549ChickenBridge.scm",(void*)f_22549},
{"f_21977ChickenBridge.scm",(void*)f_21977},
{"f_22509ChickenBridge.scm",(void*)f_22509},
{"f_22524ChickenBridge.scm",(void*)f_22524},
{"f_22516ChickenBridge.scm",(void*)f_22516},
{"f_22480ChickenBridge.scm",(void*)f_22480},
{"f_22484ChickenBridge.scm",(void*)f_22484},
{"f_22445ChickenBridge.scm",(void*)f_22445},
{"f_22449ChickenBridge.scm",(void*)f_22449},
{"f_22410ChickenBridge.scm",(void*)f_22410},
{"f_22414ChickenBridge.scm",(void*)f_22414},
{"f_22375ChickenBridge.scm",(void*)f_22375},
{"f_22379ChickenBridge.scm",(void*)f_22379},
{"f_21980ChickenBridge.scm",(void*)f_21980},
{"f_22339ChickenBridge.scm",(void*)f_22339},
{"f_22354ChickenBridge.scm",(void*)f_22354},
{"f_22346ChickenBridge.scm",(void*)f_22346},
{"f_22310ChickenBridge.scm",(void*)f_22310},
{"f_22314ChickenBridge.scm",(void*)f_22314},
{"f_22275ChickenBridge.scm",(void*)f_22275},
{"f_22279ChickenBridge.scm",(void*)f_22279},
{"f_22240ChickenBridge.scm",(void*)f_22240},
{"f_22244ChickenBridge.scm",(void*)f_22244},
{"f_22205ChickenBridge.scm",(void*)f_22205},
{"f_22209ChickenBridge.scm",(void*)f_22209},
{"f_21983ChickenBridge.scm",(void*)f_21983},
{"f_22169ChickenBridge.scm",(void*)f_22169},
{"f_22184ChickenBridge.scm",(void*)f_22184},
{"f_22176ChickenBridge.scm",(void*)f_22176},
{"f_22140ChickenBridge.scm",(void*)f_22140},
{"f_22144ChickenBridge.scm",(void*)f_22144},
{"f_22105ChickenBridge.scm",(void*)f_22105},
{"f_22109ChickenBridge.scm",(void*)f_22109},
{"f_22070ChickenBridge.scm",(void*)f_22070},
{"f_22074ChickenBridge.scm",(void*)f_22074},
{"f_22035ChickenBridge.scm",(void*)f_22035},
{"f_22039ChickenBridge.scm",(void*)f_22039},
{"f_21986ChickenBridge.scm",(void*)f_21986},
{"f_21989ChickenBridge.scm",(void*)f_21989},
{"f_21993ChickenBridge.scm",(void*)f_21993},
{"f_21635ChickenBridge.scm",(void*)f_21635},
{"f_21475ChickenBridge.scm",(void*)f_21475},
{"f_21510ChickenBridge.scm",(void*)f_21510},
{"f_21520ChickenBridge.scm",(void*)f_21520},
{"f_21524ChickenBridge.scm",(void*)f_21524},
{"f_21527ChickenBridge.scm",(void*)f_21527},
{"f_21588ChickenBridge.scm",(void*)f_21588},
{"f_21579ChickenBridge.scm",(void*)f_21579},
{"f_21530ChickenBridge.scm",(void*)f_21530},
{"f_21549ChickenBridge.scm",(void*)f_21549},
{"f_21556ChickenBridge.scm",(void*)f_21556},
{"f_21533ChickenBridge.scm",(void*)f_21533},
{"f_21539ChickenBridge.scm",(void*)f_21539},
{"f_21508ChickenBridge.scm",(void*)f_21508},
{"f_21483ChickenBridge.scm",(void*)f_21483},
{"f_21482ChickenBridge.scm",(void*)f_21482},
{"f_21643ChickenBridge.scm",(void*)f_21643},
{"f_21221ChickenBridge.scm",(void*)f_21221},
{"f_21243ChickenBridge.scm",(void*)f_21243},
{"f_21258ChickenBridge.scm",(void*)f_21258},
{"f_21261ChickenBridge.scm",(void*)f_21261},
{"f_21437ChickenBridge.scm",(void*)f_21437},
{"f_21431ChickenBridge.scm",(void*)f_21431},
{"f_21264ChickenBridge.scm",(void*)f_21264},
{"f_21413ChickenBridge.scm",(void*)f_21413},
{"f_21267ChickenBridge.scm",(void*)f_21267},
{"f_21270ChickenBridge.scm",(void*)f_21270},
{"f_21406ChickenBridge.scm",(void*)f_21406},
{"f_21394ChickenBridge.scm",(void*)f_21394},
{"f_21290ChickenBridge.scm",(void*)f_21290},
{"f_21297ChickenBridge.scm",(void*)f_21297},
{"f_21367ChickenBridge.scm",(void*)f_21367},
{"f_21353ChickenBridge.scm",(void*)f_21353},
{"f_21361ChickenBridge.scm",(void*)f_21361},
{"f_21300ChickenBridge.scm",(void*)f_21300},
{"f_21339ChickenBridge.scm",(void*)f_21339},
{"f_21303ChickenBridge.scm",(void*)f_21303},
{"f_21332ChickenBridge.scm",(void*)f_21332},
{"f_21309ChickenBridge.scm",(void*)f_21309},
{"f_21312ChickenBridge.scm",(void*)f_21312},
{"f_21316ChickenBridge.scm",(void*)f_21316},
{"f_21277ChickenBridge.scm",(void*)f_21277},
{"f_21280ChickenBridge.scm",(void*)f_21280},
{"f_21090ChickenBridge.scm",(void*)f_21090},
{"f_21099ChickenBridge.scm",(void*)f_21099},
{"f_21047ChickenBridge.scm",(void*)f_21047},
{"f_21053ChickenBridge.scm",(void*)f_21053},
{"f_21116ChickenBridge.scm",(void*)f_21116},
{"f_21202ChickenBridge.scm",(void*)f_21202},
{"f_21189ChickenBridge.scm",(void*)f_21189},
{"f_21197ChickenBridge.scm",(void*)f_21197},
{"f_21119ChickenBridge.scm",(void*)f_21119},
{"f_21123ChickenBridge.scm",(void*)f_21123},
{"f_21166ChickenBridge.scm",(void*)f_21166},
{"f_21128ChickenBridge.scm",(void*)f_21128},
{"f_21094ChickenBridge.scm",(void*)f_21094},
{"f_20989ChickenBridge.scm",(void*)f_20989},
{"f_20996ChickenBridge.scm",(void*)f_20996},
{"f_21027ChickenBridge.scm",(void*)f_21027},
{"f_21023ChickenBridge.scm",(void*)f_21023},
{"f_21015ChickenBridge.scm",(void*)f_21015},
{"f_20898ChickenBridge.scm",(void*)f_20898},
{"f_20905ChickenBridge.scm",(void*)f_20905},
{"f_20973ChickenBridge.scm",(void*)f_20973},
{"f_20916ChickenBridge.scm",(void*)f_20916},
{"f_20943ChickenBridge.scm",(void*)f_20943},
{"f_20927ChickenBridge.scm",(void*)f_20927},
{"f_20832ChickenBridge.scm",(void*)f_20832},
{"f_20843ChickenBridge.scm",(void*)f_20843},
{"f_20846ChickenBridge.scm",(void*)f_20846},
{"f_20853ChickenBridge.scm",(void*)f_20853},
{"f_20826ChickenBridge.scm",(void*)f_20826},
{"f_20280ChickenBridge.scm",(void*)f_20280},
{"f_20311ChickenBridge.scm",(void*)f_20311},
{"f_20775ChickenBridge.scm",(void*)f_20775},
{"f_20781ChickenBridge.scm",(void*)f_20781},
{"f_20322ChickenBridge.scm",(void*)f_20322},
{"f_20207ChickenBridge.scm",(void*)f_20207},
{"f_20232ChickenBridge.scm",(void*)f_20232},
{"f_20167ChickenBridge.scm",(void*)f_20167},
{"f_20180ChickenBridge.scm",(void*)f_20180},
{"f_20221ChickenBridge.scm",(void*)f_20221},
{"f_20326ChickenBridge.scm",(void*)f_20326},
{"f_20763ChickenBridge.scm",(void*)f_20763},
{"f_20759ChickenBridge.scm",(void*)f_20759},
{"f_20755ChickenBridge.scm",(void*)f_20755},
{"f_20329ChickenBridge.scm",(void*)f_20329},
{"f_20549ChickenBridge.scm",(void*)f_20549},
{"f_20658ChickenBridge.scm",(void*)f_20658},
{"f_20723ChickenBridge.scm",(void*)f_20723},
{"f_20665ChickenBridge.scm",(void*)f_20665},
{"f_20669ChickenBridge.scm",(void*)f_20669},
{"f_20673ChickenBridge.scm",(void*)f_20673},
{"f_20715ChickenBridge.scm",(void*)f_20715},
{"f_20711ChickenBridge.scm",(void*)f_20711},
{"f_20689ChickenBridge.scm",(void*)f_20689},
{"f_20552ChickenBridge.scm",(void*)f_20552},
{"f_20555ChickenBridge.scm",(void*)f_20555},
{"f_20454ChickenBridge.scm",(void*)f_20454},
{"f_20537ChickenBridge.scm",(void*)f_20537},
{"f_20504ChickenBridge.scm",(void*)f_20504},
{"f_20530ChickenBridge.scm",(void*)f_20530},
{"f_20512ChickenBridge.scm",(void*)f_20512},
{"f_20460ChickenBridge.scm",(void*)f_20460},
{"f_20500ChickenBridge.scm",(void*)f_20500},
{"f_20442ChickenBridge.scm",(void*)f_20442},
{"f_20413ChickenBridge.scm",(void*)f_20413},
{"f_20435ChickenBridge.scm",(void*)f_20435},
{"f_20421ChickenBridge.scm",(void*)f_20421},
{"f_20375ChickenBridge.scm",(void*)f_20375},
{"f_20332ChickenBridge.scm",(void*)f_20332},
{"f_20343ChickenBridge.scm",(void*)f_20343},
{"f_20347ChickenBridge.scm",(void*)f_20347},
{"f_20351ChickenBridge.scm",(void*)f_20351},
{"f_20355ChickenBridge.scm",(void*)f_20355},
{"f_20339ChickenBridge.scm",(void*)f_20339},
{"f_20299ChickenBridge.scm",(void*)f_20299},
{"f_20294ChickenBridge.scm",(void*)f_20294},
{"f_20289ChickenBridge.scm",(void*)f_20289},
{"f_20121ChickenBridge.scm",(void*)f_20121},
{"f_20132ChickenBridge.scm",(void*)f_20132},
{"f_20147ChickenBridge.scm",(void*)f_20147},
{"f_20083ChickenBridge.scm",(void*)f_20083},
{"f_20094ChickenBridge.scm",(void*)f_20094},
{"f_20109ChickenBridge.scm",(void*)f_20109},
{"f_20016ChickenBridge.scm",(void*)f_20016},
{"f_20036ChickenBridge.scm",(void*)f_20036},
{"f_20046ChickenBridge.scm",(void*)f_20046},
{"f_20059ChickenBridge.scm",(void*)f_20059},
{"f_20027ChickenBridge.scm",(void*)f_20027},
{"f_20034ChickenBridge.scm",(void*)f_20034},
{"f_19823ChickenBridge.scm",(void*)f_19823},
{"f_19883ChickenBridge.scm",(void*)f_19883},
{"f_19893ChickenBridge.scm",(void*)f_19893},
{"f_20007ChickenBridge.scm",(void*)f_20007},
{"f_19972ChickenBridge.scm",(void*)f_19972},
{"f_19964ChickenBridge.scm",(void*)f_19964},
{"f_19935ChickenBridge.scm",(void*)f_19935},
{"f_19913ChickenBridge.scm",(void*)f_19913},
{"f_19916ChickenBridge.scm",(void*)f_19916},
{"f_19904ChickenBridge.scm",(void*)f_19904},
{"f_19830ChickenBridge.scm",(void*)f_19830},
{"f_19881ChickenBridge.scm",(void*)f_19881},
{"f_19873ChickenBridge.scm",(void*)f_19873},
{"f_19833ChickenBridge.scm",(void*)f_19833},
{"f_19844ChickenBridge.scm",(void*)f_19844},
{"f_19848ChickenBridge.scm",(void*)f_19848},
{"f_19840ChickenBridge.scm",(void*)f_19840},
{"f_19681ChickenBridge.scm",(void*)f_19681},
{"f_19729ChickenBridge.scm",(void*)f_19729},
{"f_19739ChickenBridge.scm",(void*)f_19739},
{"f_19750ChickenBridge.scm",(void*)f_19750},
{"f_19787ChickenBridge.scm",(void*)f_19787},
{"f_19762ChickenBridge.scm",(void*)f_19762},
{"f_19753ChickenBridge.scm",(void*)f_19753},
{"f_19691ChickenBridge.scm",(void*)f_19691},
{"f_19727ChickenBridge.scm",(void*)f_19727},
{"f_19698ChickenBridge.scm",(void*)f_19698},
{"f_19330ChickenBridge.scm",(void*)f_19330},
{"f_19337ChickenBridge.scm",(void*)f_19337},
{"f_19571ChickenBridge.scm",(void*)f_19571},
{"f_19581ChickenBridge.scm",(void*)f_19581},
{"f_19592ChickenBridge.scm",(void*)f_19592},
{"f_19604ChickenBridge.scm",(void*)f_19604},
{"f_19607ChickenBridge.scm",(void*)f_19607},
{"f_19595ChickenBridge.scm",(void*)f_19595},
{"f_19343ChickenBridge.scm",(void*)f_19343},
{"f_19569ChickenBridge.scm",(void*)f_19569},
{"f_19565ChickenBridge.scm",(void*)f_19565},
{"f_19511ChickenBridge.scm",(void*)f_19511},
{"f_19476ChickenBridge.scm",(void*)f_19476},
{"f_19492ChickenBridge.scm",(void*)f_19492},
{"f_19447ChickenBridge.scm",(void*)f_19447},
{"f_19371ChickenBridge.scm",(void*)f_19371},
{"f_19374ChickenBridge.scm",(void*)f_19374},
{"f_19438ChickenBridge.scm",(void*)f_19438},
{"f_19434ChickenBridge.scm",(void*)f_19434},
{"f_19354ChickenBridge.scm",(void*)f_19354},
{"f_19365ChickenBridge.scm",(void*)f_19365},
{"f_19361ChickenBridge.scm",(void*)f_19361},
{"f_19283ChickenBridge.scm",(void*)f_19283},
{"f_19316ChickenBridge.scm",(void*)f_19316},
{"f_19298ChickenBridge.scm",(void*)f_19298},
{"f_19310ChickenBridge.scm",(void*)f_19310},
{"f_18901ChickenBridge.scm",(void*)f_18901},
{"f_19110ChickenBridge.scm",(void*)f_19110},
{"f_19120ChickenBridge.scm",(void*)f_19120},
{"f_19131ChickenBridge.scm",(void*)f_19131},
{"f_19251ChickenBridge.scm",(void*)f_19251},
{"f_19230ChickenBridge.scm",(void*)f_19230},
{"f_19209ChickenBridge.scm",(void*)f_19209},
{"f_19188ChickenBridge.scm",(void*)f_19188},
{"f_19167ChickenBridge.scm",(void*)f_19167},
{"f_19146ChickenBridge.scm",(void*)f_19146},
{"f_19134ChickenBridge.scm",(void*)f_19134},
{"f_18911ChickenBridge.scm",(void*)f_18911},
{"f_18914ChickenBridge.scm",(void*)f_18914},
{"f_19077ChickenBridge.scm",(void*)f_19077},
{"f_18917ChickenBridge.scm",(void*)f_18917},
{"f_19068ChickenBridge.scm",(void*)f_19068},
{"f_19048ChickenBridge.scm",(void*)f_19048},
{"f_18920ChickenBridge.scm",(void*)f_18920},
{"f_19013ChickenBridge.scm",(void*)f_19013},
{"f_19030ChickenBridge.scm",(void*)f_19030},
{"f_18923ChickenBridge.scm",(void*)f_18923},
{"f_18962ChickenBridge.scm",(void*)f_18962},
{"f_18996ChickenBridge.scm",(void*)f_18996},
{"f_18980ChickenBridge.scm",(void*)f_18980},
{"f_18965ChickenBridge.scm",(void*)f_18965},
{"f_18930ChickenBridge.scm",(void*)f_18930},
{"f_18941ChickenBridge.scm",(void*)f_18941},
{"f_18945ChickenBridge.scm",(void*)f_18945},
{"f_18937ChickenBridge.scm",(void*)f_18937},
{"f_18819ChickenBridge.scm",(void*)f_18819},
{"f_18823ChickenBridge.scm",(void*)f_18823},
{"f_18841ChickenBridge.scm",(void*)f_18841},
{"f_18659ChickenBridge.scm",(void*)f_18659},
{"f_18667ChickenBridge.scm",(void*)f_18667},
{"f_18677ChickenBridge.scm",(void*)f_18677},
{"f_18715ChickenBridge.scm",(void*)f_18715},
{"f_18718ChickenBridge.scm",(void*)f_18718},
{"f_18721ChickenBridge.scm",(void*)f_18721},
{"f_18796ChickenBridge.scm",(void*)f_18796},
{"f_18806ChickenBridge.scm",(void*)f_18806},
{"f_18724ChickenBridge.scm",(void*)f_18724},
{"f_18727ChickenBridge.scm",(void*)f_18727},
{"f_18730ChickenBridge.scm",(void*)f_18730},
{"f_18750ChickenBridge.scm",(void*)f_18750},
{"f_18760ChickenBridge.scm",(void*)f_18760},
{"f_18763ChickenBridge.scm",(void*)f_18763},
{"f_18766ChickenBridge.scm",(void*)f_18766},
{"f_18733ChickenBridge.scm",(void*)f_18733},
{"f_18736ChickenBridge.scm",(void*)f_18736},
{"f_18653ChickenBridge.scm",(void*)f_18653},
{"f_18647ChickenBridge.scm",(void*)f_18647},
{"f_18641ChickenBridge.scm",(void*)f_18641},
{"f_18570ChickenBridge.scm",(void*)f_18570},
{"f_18611ChickenBridge.scm",(void*)f_18611},
{"f_18615ChickenBridge.scm",(void*)f_18615},
{"f_18619ChickenBridge.scm",(void*)f_18619},
{"f_18623ChickenBridge.scm",(void*)f_18623},
{"f_18627ChickenBridge.scm",(void*)f_18627},
{"f_18631ChickenBridge.scm",(void*)f_18631},
{"f_18635ChickenBridge.scm",(void*)f_18635},
{"f_18639ChickenBridge.scm",(void*)f_18639},
{"f_18572ChickenBridge.scm",(void*)f_18572},
{"f_18578ChickenBridge.scm",(void*)f_18578},
{"f_18600ChickenBridge.scm",(void*)f_18600},
{"f_18589ChickenBridge.scm",(void*)f_18589},
{"f_18419ChickenBridge.scm",(void*)f_18419},
{"f_18434ChickenBridge.scm",(void*)f_18434},
{"f_18447ChickenBridge.scm",(void*)f_18447},
{"f_18407ChickenBridge.scm",(void*)f_18407},
{"f_18395ChickenBridge.scm",(void*)f_18395},
{"f_18383ChickenBridge.scm",(void*)f_18383},
{"f_18377ChickenBridge.scm",(void*)f_18377},
{"f_18371ChickenBridge.scm",(void*)f_18371},
{"f_18359ChickenBridge.scm",(void*)f_18359},
{"f_18347ChickenBridge.scm",(void*)f_18347},
{"f_18335ChickenBridge.scm",(void*)f_18335},
{"f_18323ChickenBridge.scm",(void*)f_18323},
{"f_18317ChickenBridge.scm",(void*)f_18317},
{"f_18281ChickenBridge.scm",(void*)f_18281},
{"f_18275ChickenBridge.scm",(void*)f_18275},
{"f_18228ChickenBridge.scm",(void*)f_18228},
{"f_18232ChickenBridge.scm",(void*)f_18232},
{"f_18248ChickenBridge.scm",(void*)f_18248},
{"f_18257ChickenBridge.scm",(void*)f_18257},
{"f_18235ChickenBridge.scm",(void*)f_18235},
{"f_18219ChickenBridge.scm",(void*)f_18219},
{"f_18223ChickenBridge.scm",(void*)f_18223},
{"f_18040ChickenBridge.scm",(void*)f_18040},
{"f_18193ChickenBridge.scm",(void*)f_18193},
{"f_18206ChickenBridge.scm",(void*)f_18206},
{"f_18188ChickenBridge.scm",(void*)f_18188},
{"f_18043ChickenBridge.scm",(void*)f_18043},
{"f_18185ChickenBridge.scm",(void*)f_18185},
{"f_18169ChickenBridge.scm",(void*)f_18169},
{"f_18162ChickenBridge.scm",(void*)f_18162},
{"f_18158ChickenBridge.scm",(void*)f_18158},
{"f_18071ChickenBridge.scm",(void*)f_18071},
{"f_18079ChickenBridge.scm",(void*)f_18079},
{"f_18089ChickenBridge.scm",(void*)f_18089},
{"f_18092ChickenBridge.scm",(void*)f_18092},
{"f_18074ChickenBridge.scm",(void*)f_18074},
{"f_17869ChickenBridge.scm",(void*)f_17869},
{"f_17875ChickenBridge.scm",(void*)f_17875},
{"f_17878ChickenBridge.scm",(void*)f_17878},
{"f_15678ChickenBridge.scm",(void*)f_15678},
{"f_15691ChickenBridge.scm",(void*)f_15691},
{"f_15698ChickenBridge.scm",(void*)f_15698},
{"f_15705ChickenBridge.scm",(void*)f_15705},
{"f_15684ChickenBridge.scm",(void*)f_15684},
{"f_17882ChickenBridge.scm",(void*)f_17882},
{"f_17916ChickenBridge.scm",(void*)f_17916},
{"f_18009ChickenBridge.scm",(void*)f_18009},
{"f_18019ChickenBridge.scm",(void*)f_18019},
{"f_17922ChickenBridge.scm",(void*)f_17922},
{"f_17979ChickenBridge.scm",(void*)f_17979},
{"f_17989ChickenBridge.scm",(void*)f_17989},
{"f_17930ChickenBridge.scm",(void*)f_17930},
{"f_17944ChickenBridge.scm",(void*)f_17944},
{"f_17948ChickenBridge.scm",(void*)f_17948},
{"f_17952ChickenBridge.scm",(void*)f_17952},
{"f_17956ChickenBridge.scm",(void*)f_17956},
{"f_17963ChickenBridge.scm",(void*)f_17963},
{"f_17940ChickenBridge.scm",(void*)f_17940},
{"f_17933ChickenBridge.scm",(void*)f_17933},
{"f_17885ChickenBridge.scm",(void*)f_17885},
{"f_16805ChickenBridge.scm",(void*)f_16805},
{"f_16818ChickenBridge.scm",(void*)f_16818},
{"f_16868ChickenBridge.scm",(void*)f_16868},
{"f_16965ChickenBridge.scm",(void*)f_16965},
{"f_17033ChickenBridge.scm",(void*)f_17033},
{"f_17290ChickenBridge.scm",(void*)f_17290},
{"f_17040ChickenBridge.scm",(void*)f_17040},
{"f_17278ChickenBridge.scm",(void*)f_17278},
{"f_17229ChickenBridge.scm",(void*)f_17229},
{"f_17235ChickenBridge.scm",(void*)f_17235},
{"f_17259ChickenBridge.scm",(void*)f_17259},
{"f_17255ChickenBridge.scm",(void*)f_17255},
{"f_17243ChickenBridge.scm",(void*)f_17243},
{"f_17043ChickenBridge.scm",(void*)f_17043},
{"f_17205ChickenBridge.scm",(void*)f_17205},
{"f_17209ChickenBridge.scm",(void*)f_17209},
{"f_17046ChickenBridge.scm",(void*)f_17046},
{"f_17182ChickenBridge.scm",(void*)f_17182},
{"f_17186ChickenBridge.scm",(void*)f_17186},
{"f_17049ChickenBridge.scm",(void*)f_17049},
{"f_17159ChickenBridge.scm",(void*)f_17159},
{"f_17163ChickenBridge.scm",(void*)f_17163},
{"f_17052ChickenBridge.scm",(void*)f_17052},
{"f_17084ChickenBridge.scm",(void*)f_17084},
{"f_17102ChickenBridge.scm",(void*)f_17102},
{"f_17120ChickenBridge.scm",(void*)f_17120},
{"f_17138ChickenBridge.scm",(void*)f_17138},
{"f_17055ChickenBridge.scm",(void*)f_17055},
{"f_17059ChickenBridge.scm",(void*)f_17059},
{"f_16969ChickenBridge.scm",(void*)f_16969},
{"f_16973ChickenBridge.scm",(void*)f_16973},
{"f_16977ChickenBridge.scm",(void*)f_16977},
{"f_16872ChickenBridge.scm",(void*)f_16872},
{"f_16876ChickenBridge.scm",(void*)f_16876},
{"f_16880ChickenBridge.scm",(void*)f_16880},
{"f_16899ChickenBridge.scm",(void*)f_16899},
{"f_16903ChickenBridge.scm",(void*)f_16903},
{"f_16883ChickenBridge.scm",(void*)f_16883},
{"f_16887ChickenBridge.scm",(void*)f_16887},
{"f_16822ChickenBridge.scm",(void*)f_16822},
{"f_16826ChickenBridge.scm",(void*)f_16826},
{"f_16830ChickenBridge.scm",(void*)f_16830},
{"f_16812ChickenBridge.scm",(void*)f_16812},
{"f_16627ChickenBridge.scm",(void*)f_16627},
{"f_16639ChickenBridge.scm",(void*)f_16639},
{"f_16658ChickenBridge.scm",(void*)f_16658},
{"f_16676ChickenBridge.scm",(void*)f_16676},
{"f_16708ChickenBridge.scm",(void*)f_16708},
{"f_16711ChickenBridge.scm",(void*)f_16711},
{"f_16704ChickenBridge.scm",(void*)f_16704},
{"f_16690ChickenBridge.scm",(void*)f_16690},
{"f_16661ChickenBridge.scm",(void*)f_16661},
{"f_16606ChickenBridge.scm",(void*)f_16606},
{"f_16613ChickenBridge.scm",(void*)f_16613},
{"f_16616ChickenBridge.scm",(void*)f_16616},
{"f_16622ChickenBridge.scm",(void*)f_16622},
{"f_16541ChickenBridge.scm",(void*)f_16541},
{"f_16550ChickenBridge.scm",(void*)f_16550},
{"f_16573ChickenBridge.scm",(void*)f_16573},
{"f_16563ChickenBridge.scm",(void*)f_16563},
{"f_16497ChickenBridge.scm",(void*)f_16497},
{"f_16485ChickenBridge.scm",(void*)f_16485},
{"f_16383ChickenBridge.scm",(void*)f_16383},
{"f_16335ChickenBridge.scm",(void*)f_16335},
{"f_15716ChickenBridge.scm",(void*)f_15716},
{"f_15720ChickenBridge.scm",(void*)f_15720},
{"f_15723ChickenBridge.scm",(void*)f_15723},
{"f_16149ChickenBridge.scm",(void*)f_16149},
{"f_16145ChickenBridge.scm",(void*)f_16145},
{"f_16141ChickenBridge.scm",(void*)f_16141},
{"f_15726ChickenBridge.scm",(void*)f_15726},
{"f_15849ChickenBridge.scm",(void*)f_15849},
{"f_15082ChickenBridge.scm",(void*)f_15082},
{"f_15855ChickenBridge.scm",(void*)f_15855},
{"f_15098ChickenBridge.scm",(void*)f_15098},
{"f_15943ChickenBridge.scm",(void*)f_15943},
{"f_16013ChickenBridge.scm",(void*)f_16013},
{"f_15114ChickenBridge.scm",(void*)f_15114},
{"f_16016ChickenBridge.scm",(void*)f_16016},
{"f_15146ChickenBridge.scm",(void*)f_15146},
{"f_16094ChickenBridge.scm",(void*)f_16094},
{"f_16120ChickenBridge.scm",(void*)f_16120},
{"f_16114ChickenBridge.scm",(void*)f_16114},
{"f_16103ChickenBridge.scm",(void*)f_16103},
{"f_16045ChickenBridge.scm",(void*)f_16045},
{"f_16055ChickenBridge.scm",(void*)f_16055},
{"f_16081ChickenBridge.scm",(void*)f_16081},
{"f_16075ChickenBridge.scm",(void*)f_16075},
{"f_16058ChickenBridge.scm",(void*)f_16058},
{"f_16068ChickenBridge.scm",(void*)f_16068},
{"f_16061ChickenBridge.scm",(void*)f_16061},
{"f_16022ChickenBridge.scm",(void*)f_16022},
{"f_16031ChickenBridge.scm",(void*)f_16031},
{"f_16025ChickenBridge.scm",(void*)f_16025},
{"f_15949ChickenBridge.scm",(void*)f_15949},
{"f_15967ChickenBridge.scm",(void*)f_15967},
{"f_16000ChickenBridge.scm",(void*)f_16000},
{"f_15986ChickenBridge.scm",(void*)f_15986},
{"f_15994ChickenBridge.scm",(void*)f_15994},
{"f_15977ChickenBridge.scm",(void*)f_15977},
{"f_15952ChickenBridge.scm",(void*)f_15952},
{"f_15864ChickenBridge.scm",(void*)f_15864},
{"f_15886ChickenBridge.scm",(void*)f_15886},
{"f_15933ChickenBridge.scm",(void*)f_15933},
{"f_15919ChickenBridge.scm",(void*)f_15919},
{"f_15927ChickenBridge.scm",(void*)f_15927},
{"f_15899ChickenBridge.scm",(void*)f_15899},
{"f_15902ChickenBridge.scm",(void*)f_15902},
{"f_15867ChickenBridge.scm",(void*)f_15867},
{"f_15884ChickenBridge.scm",(void*)f_15884},
{"f_15870ChickenBridge.scm",(void*)f_15870},
{"f_15735ChickenBridge.scm",(void*)f_15735},
{"f_15741ChickenBridge.scm",(void*)f_15741},
{"f_15799ChickenBridge.scm",(void*)f_15799},
{"f_15802ChickenBridge.scm",(void*)f_15802},
{"f_15823ChickenBridge.scm",(void*)f_15823},
{"f_15834ChickenBridge.scm",(void*)f_15834},
{"f_15813ChickenBridge.scm",(void*)f_15813},
{"f_15747ChickenBridge.scm",(void*)f_15747},
{"f_15757ChickenBridge.scm",(void*)f_15757},
{"f_15793ChickenBridge.scm",(void*)f_15793},
{"f_15763ChickenBridge.scm",(void*)f_15763},
{"f_15778ChickenBridge.scm",(void*)f_15778},
{"f_15782ChickenBridge.scm",(void*)f_15782},
{"f_15786ChickenBridge.scm",(void*)f_15786},
{"f_15770ChickenBridge.scm",(void*)f_15770},
{"f_15612ChickenBridge.scm",(void*)f_15612},
{"f_15614ChickenBridge.scm",(void*)f_15614},
{"f_15662ChickenBridge.scm",(void*)f_15662},
{"f_15618ChickenBridge.scm",(void*)f_15618},
{"f_15621ChickenBridge.scm",(void*)f_15621},
{"f_15626ChickenBridge.scm",(void*)f_15626},
{"f_15647ChickenBridge.scm",(void*)f_15647},
{"f_15604ChickenBridge.scm",(void*)f_15604},
{"f_15606ChickenBridge.scm",(void*)f_15606},
{"f_15396ChickenBridge.scm",(void*)f_15396},
{"f_15413ChickenBridge.scm",(void*)f_15413},
{"f_15417ChickenBridge.scm",(void*)f_15417},
{"f_15363ChickenBridge.scm",(void*)f_15363},
{"f_15370ChickenBridge.scm",(void*)f_15370},
{"f_15314ChickenBridge.scm",(void*)f_15314},
{"f_15321ChickenBridge.scm",(void*)f_15321},
{"f_15379ChickenBridge.scm",(void*)f_15379},
{"f_15602ChickenBridge.scm",(void*)f_15602},
{"f_15579ChickenBridge.scm",(void*)f_15579},
{"f_15595ChickenBridge.scm",(void*)f_15595},
{"f_15441ChickenBridge.scm",(void*)f_15441},
{"f_15444ChickenBridge.scm",(void*)f_15444},
{"f_15468ChickenBridge.scm",(void*)f_15468},
{"f_15525ChickenBridge.scm",(void*)f_15525},
{"f_15531ChickenBridge.scm",(void*)f_15531},
{"f_15540ChickenBridge.scm",(void*)f_15540},
{"f_15549ChickenBridge.scm",(void*)f_15549},
{"f_15558ChickenBridge.scm",(void*)f_15558},
{"f_15567ChickenBridge.scm",(void*)f_15567},
{"f_15519ChickenBridge.scm",(void*)f_15519},
{"f_15474ChickenBridge.scm",(void*)f_15474},
{"f_15480ChickenBridge.scm",(void*)f_15480},
{"f_15486ChickenBridge.scm",(void*)f_15486},
{"f_15492ChickenBridge.scm",(void*)f_15492},
{"f_15498ChickenBridge.scm",(void*)f_15498},
{"f_15504ChickenBridge.scm",(void*)f_15504},
{"f_15345ChickenBridge.scm",(void*)f_15345},
{"f_15352ChickenBridge.scm",(void*)f_15352},
{"f_15335ChickenBridge.scm",(void*)f_15335},
{"f_15323ChickenBridge.scm",(void*)f_15323},
{"f_15291ChickenBridge.scm",(void*)f_15291},
{"f_15298ChickenBridge.scm",(void*)f_15298},
{"f_15305ChickenBridge.scm",(void*)f_15305},
{"f_15275ChickenBridge.scm",(void*)f_15275},
{"f_15282ChickenBridge.scm",(void*)f_15282},
{"f_15289ChickenBridge.scm",(void*)f_15289},
{"f_15263ChickenBridge.scm",(void*)f_15263},
{"f_15245ChickenBridge.scm",(void*)f_15245},
{"f_15227ChickenBridge.scm",(void*)f_15227},
{"f_15212ChickenBridge.scm",(void*)f_15212},
{"f_15206ChickenBridge.scm",(void*)f_15206},
{"f_15194ChickenBridge.scm",(void*)f_15194},
{"f_15176ChickenBridge.scm",(void*)f_15176},
{"f_15155ChickenBridge.scm",(void*)f_15155},
{"f_15123ChickenBridge.scm",(void*)f_15123},
{"f_15130ChickenBridge.scm",(void*)f_15130},
{"f_15065ChickenBridge.scm",(void*)f_15065},
{"f_15073ChickenBridge.scm",(void*)f_15073},
{"f_15055ChickenBridge.scm",(void*)f_15055},
{"f_15063ChickenBridge.scm",(void*)f_15063},
{"f_15049ChickenBridge.scm",(void*)f_15049},
{"f_15037ChickenBridge.scm",(void*)f_15037},
{"f_15034ChickenBridge.scm",(void*)f_15034},
{"f_15013ChickenBridge.scm",(void*)f_15013},
{"f_14926ChickenBridge.scm",(void*)f_14926},
{"f_14905ChickenBridge.scm",(void*)f_14905},
{"f_14895ChickenBridge.scm",(void*)f_14895},
{"f_14883ChickenBridge.scm",(void*)f_14883},
{"f_14854ChickenBridge.scm",(void*)f_14854},
{"f_14842ChickenBridge.scm",(void*)f_14842},
{"f_14824ChickenBridge.scm",(void*)f_14824},
{"f_14806ChickenBridge.scm",(void*)f_14806},
{"f_14785ChickenBridge.scm",(void*)f_14785},
{"f_14691ChickenBridge.scm",(void*)f_14691},
{"f_14695ChickenBridge.scm",(void*)f_14695},
{"f_14724ChickenBridge.scm",(void*)f_14724},
{"f_14729ChickenBridge.scm",(void*)f_14729},
{"f_14754ChickenBridge.scm",(void*)f_14754},
{"f_14739ChickenBridge.scm",(void*)f_14739},
{"f_14173ChickenBridge.scm",(void*)f_14173},
{"f_14444ChickenBridge.scm",(void*)f_14444},
{"f_14448ChickenBridge.scm",(void*)f_14448},
{"f_14453ChickenBridge.scm",(void*)f_14453},
{"f_14659ChickenBridge.scm",(void*)f_14659},
{"f_14674ChickenBridge.scm",(void*)f_14674},
{"f_14666ChickenBridge.scm",(void*)f_14666},
{"f_14630ChickenBridge.scm",(void*)f_14630},
{"f_14634ChickenBridge.scm",(void*)f_14634},
{"f_14595ChickenBridge.scm",(void*)f_14595},
{"f_14599ChickenBridge.scm",(void*)f_14599},
{"f_14457ChickenBridge.scm",(void*)f_14457},
{"f_14559ChickenBridge.scm",(void*)f_14559},
{"f_14574ChickenBridge.scm",(void*)f_14574},
{"f_14566ChickenBridge.scm",(void*)f_14566},
{"f_14530ChickenBridge.scm",(void*)f_14530},
{"f_14534ChickenBridge.scm",(void*)f_14534},
{"f_14495ChickenBridge.scm",(void*)f_14495},
{"f_14499ChickenBridge.scm",(void*)f_14499},
{"f_14460ChickenBridge.scm",(void*)f_14460},
{"f_14463ChickenBridge.scm",(void*)f_14463},
{"f_14466ChickenBridge.scm",(void*)f_14466},
{"f_14435ChickenBridge.scm",(void*)f_14435},
{"f_14177ChickenBridge.scm",(void*)f_14177},
{"f_14404ChickenBridge.scm",(void*)f_14404},
{"f_14419ChickenBridge.scm",(void*)f_14419},
{"f_14411ChickenBridge.scm",(void*)f_14411},
{"f_14375ChickenBridge.scm",(void*)f_14375},
{"f_14379ChickenBridge.scm",(void*)f_14379},
{"f_14340ChickenBridge.scm",(void*)f_14340},
{"f_14344ChickenBridge.scm",(void*)f_14344},
{"f_14180ChickenBridge.scm",(void*)f_14180},
{"f_14304ChickenBridge.scm",(void*)f_14304},
{"f_14319ChickenBridge.scm",(void*)f_14319},
{"f_14311ChickenBridge.scm",(void*)f_14311},
{"f_14275ChickenBridge.scm",(void*)f_14275},
{"f_14279ChickenBridge.scm",(void*)f_14279},
{"f_14240ChickenBridge.scm",(void*)f_14240},
{"f_14244ChickenBridge.scm",(void*)f_14244},
{"f_14183ChickenBridge.scm",(void*)f_14183},
{"f_14186ChickenBridge.scm",(void*)f_14186},
{"f_14189ChickenBridge.scm",(void*)f_14189},
{"f_14201ChickenBridge.scm",(void*)f_14201},
{"f_14219ChickenBridge.scm",(void*)f_14219},
{"f_14207ChickenBridge.scm",(void*)f_14207},
{"f_14195ChickenBridge.scm",(void*)f_14195},
{"f_14110ChickenBridge.scm",(void*)f_14110},
{"f_13770ChickenBridge.scm",(void*)f_13770},
{"f_13952ChickenBridge.scm",(void*)f_13952},
{"f_13956ChickenBridge.scm",(void*)f_13956},
{"f_13958ChickenBridge.scm",(void*)f_13958},
{"f_13883ChickenBridge.scm",(void*)f_13883},
{"f_13893ChickenBridge.scm",(void*)f_13893},
{"f_13900ChickenBridge.scm",(void*)f_13900},
{"f_13968ChickenBridge.scm",(void*)f_13968},
{"f_13971ChickenBridge.scm",(void*)f_13971},
{"f_13975ChickenBridge.scm",(void*)f_13975},
{"f_13995ChickenBridge.scm",(void*)f_13995},
{"f_14011ChickenBridge.scm",(void*)f_14011},
{"f_13978ChickenBridge.scm",(void*)f_13978},
{"f_13773ChickenBridge.scm",(void*)f_13773},
{"f_13785ChickenBridge.scm",(void*)f_13785},
{"f_13821ChickenBridge.scm",(void*)f_13821},
{"f_13841ChickenBridge.scm",(void*)f_13841},
{"f_13846ChickenBridge.scm",(void*)f_13846},
{"f_13283ChickenBridge.scm",(void*)f_13283},
{"f_13210ChickenBridge.scm",(void*)f_13210},
{"f_13055ChickenBridge.scm",(void*)f_13055},
{"f_13061ChickenBridge.scm",(void*)f_13061},
{"f_13146ChickenBridge.scm",(void*)f_13146},
{"f_13073ChickenBridge.scm",(void*)f_13073},
{"f_13089ChickenBridge.scm",(void*)f_13089},
{"f_13093ChickenBridge.scm",(void*)f_13093},
{"f_13096ChickenBridge.scm",(void*)f_13096},
{"f_13076ChickenBridge.scm",(void*)f_13076},
{"f_13087ChickenBridge.scm",(void*)f_13087},
{"f_13227ChickenBridge.scm",(void*)f_13227},
{"f_13764ChickenBridge.scm",(void*)f_13764},
{"f_13287ChickenBridge.scm",(void*)f_13287},
{"f_13733ChickenBridge.scm",(void*)f_13733},
{"f_13748ChickenBridge.scm",(void*)f_13748},
{"f_13740ChickenBridge.scm",(void*)f_13740},
{"f_13704ChickenBridge.scm",(void*)f_13704},
{"f_13708ChickenBridge.scm",(void*)f_13708},
{"f_13669ChickenBridge.scm",(void*)f_13669},
{"f_13673ChickenBridge.scm",(void*)f_13673},
{"f_13634ChickenBridge.scm",(void*)f_13634},
{"f_13638ChickenBridge.scm",(void*)f_13638},
{"f_13290ChickenBridge.scm",(void*)f_13290},
{"f_13598ChickenBridge.scm",(void*)f_13598},
{"f_13613ChickenBridge.scm",(void*)f_13613},
{"f_13605ChickenBridge.scm",(void*)f_13605},
{"f_13569ChickenBridge.scm",(void*)f_13569},
{"f_13573ChickenBridge.scm",(void*)f_13573},
{"f_13534ChickenBridge.scm",(void*)f_13534},
{"f_13538ChickenBridge.scm",(void*)f_13538},
{"f_13499ChickenBridge.scm",(void*)f_13499},
{"f_13503ChickenBridge.scm",(void*)f_13503},
{"f_13293ChickenBridge.scm",(void*)f_13293},
{"f_13463ChickenBridge.scm",(void*)f_13463},
{"f_13478ChickenBridge.scm",(void*)f_13478},
{"f_13470ChickenBridge.scm",(void*)f_13470},
{"f_13434ChickenBridge.scm",(void*)f_13434},
{"f_13438ChickenBridge.scm",(void*)f_13438},
{"f_13399ChickenBridge.scm",(void*)f_13399},
{"f_13403ChickenBridge.scm",(void*)f_13403},
{"f_13364ChickenBridge.scm",(void*)f_13364},
{"f_13368ChickenBridge.scm",(void*)f_13368},
{"f_13296ChickenBridge.scm",(void*)f_13296},
{"f_13299ChickenBridge.scm",(void*)f_13299},
{"f_13302ChickenBridge.scm",(void*)f_13302},
{"f_13335ChickenBridge.scm",(void*)f_13335},
{"f_13343ChickenBridge.scm",(void*)f_13343},
{"f_13308ChickenBridge.scm",(void*)f_13308},
{"f_6093ChickenBridge.scm",(void*)f_6093},
{"f_6110ChickenBridge.scm",(void*)f_6110},
{"f_13321ChickenBridge.scm",(void*)f_13321},
{"f_13311ChickenBridge.scm",(void*)f_13311},
{"f_13314ChickenBridge.scm",(void*)f_13314},
{"f_12850ChickenBridge.scm",(void*)f_12850},
{"f_12854ChickenBridge.scm",(void*)f_12854},
{"f_12857ChickenBridge.scm",(void*)f_12857},
{"f_12860ChickenBridge.scm",(void*)f_12860},
{"f_13029ChickenBridge.scm",(void*)f_13029},
{"f_13042ChickenBridge.scm",(void*)f_13042},
{"f_13046ChickenBridge.scm",(void*)f_13046},
{"f_12866ChickenBridge.scm",(void*)f_12866},
{"f_13022ChickenBridge.scm",(void*)f_13022},
{"f_13003ChickenBridge.scm",(void*)f_13003},
{"f_13010ChickenBridge.scm",(void*)f_13010},
{"f_13014ChickenBridge.scm",(void*)f_13014},
{"f_12872ChickenBridge.scm",(void*)f_12872},
{"f_12878ChickenBridge.scm",(void*)f_12878},
{"f_12962ChickenBridge.scm",(void*)f_12962},
{"f_12964ChickenBridge.scm",(void*)f_12964},
{"f_12986ChickenBridge.scm",(void*)f_12986},
{"f_12993ChickenBridge.scm",(void*)f_12993},
{"f_12997ChickenBridge.scm",(void*)f_12997},
{"f_12983ChickenBridge.scm",(void*)f_12983},
{"f_12979ChickenBridge.scm",(void*)f_12979},
{"f_12920ChickenBridge.scm",(void*)f_12920},
{"f_12937ChickenBridge.scm",(void*)f_12937},
{"f_12947ChickenBridge.scm",(void*)f_12947},
{"f_12923ChickenBridge.scm",(void*)f_12923},
{"f_12882ChickenBridge.scm",(void*)f_12882},
{"f_12890ChickenBridge.scm",(void*)f_12890},
{"f_12892ChickenBridge.scm",(void*)f_12892},
{"f_12913ChickenBridge.scm",(void*)f_12913},
{"f_12738ChickenBridge.scm",(void*)f_12738},
{"f_12848ChickenBridge.scm",(void*)f_12848},
{"f_12807ChickenBridge.scm",(void*)f_12807},
{"f_12840ChickenBridge.scm",(void*)f_12840},
{"f_12836ChickenBridge.scm",(void*)f_12836},
{"f_12821ChickenBridge.scm",(void*)f_12821},
{"f_12745ChickenBridge.scm",(void*)f_12745},
{"f_12753ChickenBridge.scm",(void*)f_12753},
{"f_12798ChickenBridge.scm",(void*)f_12798},
{"f_12786ChickenBridge.scm",(void*)f_12786},
{"f_12770ChickenBridge.scm",(void*)f_12770},
{"f_11971ChickenBridge.scm",(void*)f_11971},
{"f_12288ChickenBridge.scm",(void*)f_12288},
{"f_12295ChickenBridge.scm",(void*)f_12295},
{"f_12700ChickenBridge.scm",(void*)f_12700},
{"f_12715ChickenBridge.scm",(void*)f_12715},
{"f_12707ChickenBridge.scm",(void*)f_12707},
{"f_12671ChickenBridge.scm",(void*)f_12671},
{"f_12675ChickenBridge.scm",(void*)f_12675},
{"f_12636ChickenBridge.scm",(void*)f_12636},
{"f_12640ChickenBridge.scm",(void*)f_12640},
{"f_12601ChickenBridge.scm",(void*)f_12601},
{"f_12605ChickenBridge.scm",(void*)f_12605},
{"f_12298ChickenBridge.scm",(void*)f_12298},
{"f_12565ChickenBridge.scm",(void*)f_12565},
{"f_12580ChickenBridge.scm",(void*)f_12580},
{"f_12572ChickenBridge.scm",(void*)f_12572},
{"f_12536ChickenBridge.scm",(void*)f_12536},
{"f_12540ChickenBridge.scm",(void*)f_12540},
{"f_12501ChickenBridge.scm",(void*)f_12501},
{"f_12505ChickenBridge.scm",(void*)f_12505},
{"f_12466ChickenBridge.scm",(void*)f_12466},
{"f_12470ChickenBridge.scm",(void*)f_12470},
{"f_12301ChickenBridge.scm",(void*)f_12301},
{"f_12430ChickenBridge.scm",(void*)f_12430},
{"f_12445ChickenBridge.scm",(void*)f_12445},
{"f_12437ChickenBridge.scm",(void*)f_12437},
{"f_12401ChickenBridge.scm",(void*)f_12401},
{"f_12405ChickenBridge.scm",(void*)f_12405},
{"f_12366ChickenBridge.scm",(void*)f_12366},
{"f_12370ChickenBridge.scm",(void*)f_12370},
{"f_12331ChickenBridge.scm",(void*)f_12331},
{"f_12335ChickenBridge.scm",(void*)f_12335},
{"f_12304ChickenBridge.scm",(void*)f_12304},
{"f_12307ChickenBridge.scm",(void*)f_12307},
{"f_11975ChickenBridge.scm",(void*)f_11975},
{"f_11978ChickenBridge.scm",(void*)f_11978},
{"f_12252ChickenBridge.scm",(void*)f_12252},
{"f_12256ChickenBridge.scm",(void*)f_12256},
{"f_12259ChickenBridge.scm",(void*)f_12259},
{"f_12262ChickenBridge.scm",(void*)f_12262},
{"f_12265ChickenBridge.scm",(void*)f_12265},
{"f_12278ChickenBridge.scm",(void*)f_12278},
{"f_12268ChickenBridge.scm",(void*)f_12268},
{"f_11984ChickenBridge.scm",(void*)f_11984},
{"f_11991ChickenBridge.scm",(void*)f_11991},
{"f_12222ChickenBridge.scm",(void*)f_12222},
{"f_12237ChickenBridge.scm",(void*)f_12237},
{"f_12229ChickenBridge.scm",(void*)f_12229},
{"f_12193ChickenBridge.scm",(void*)f_12193},
{"f_12197ChickenBridge.scm",(void*)f_12197},
{"f_12158ChickenBridge.scm",(void*)f_12158},
{"f_12162ChickenBridge.scm",(void*)f_12162},
{"f_11994ChickenBridge.scm",(void*)f_11994},
{"f_12122ChickenBridge.scm",(void*)f_12122},
{"f_12137ChickenBridge.scm",(void*)f_12137},
{"f_12129ChickenBridge.scm",(void*)f_12129},
{"f_12093ChickenBridge.scm",(void*)f_12093},
{"f_12097ChickenBridge.scm",(void*)f_12097},
{"f_12058ChickenBridge.scm",(void*)f_12058},
{"f_12062ChickenBridge.scm",(void*)f_12062},
{"f_11997ChickenBridge.scm",(void*)f_11997},
{"f_12000ChickenBridge.scm",(void*)f_12000},
{"f_12015ChickenBridge.scm",(void*)f_12015},
{"f_12037ChickenBridge.scm",(void*)f_12037},
{"f_12021ChickenBridge.scm",(void*)f_12021},
{"f_12029ChickenBridge.scm",(void*)f_12029},
{"f_12003ChickenBridge.scm",(void*)f_12003},
{"f_12006ChickenBridge.scm",(void*)f_12006},
{"f_11888ChickenBridge.scm",(void*)f_11888},
{"f_11879ChickenBridge.scm",(void*)f_11879},
{"f_11870ChickenBridge.scm",(void*)f_11870},
{"f_11852ChickenBridge.scm",(void*)f_11852},
{"f_11834ChickenBridge.scm",(void*)f_11834},
{"f_11816ChickenBridge.scm",(void*)f_11816},
{"f_11807ChickenBridge.scm",(void*)f_11807},
{"f_11798ChickenBridge.scm",(void*)f_11798},
{"f_11576ChickenBridge.scm",(void*)f_11576},
{"f_11626ChickenBridge.scm",(void*)f_11626},
{"f_11771ChickenBridge.scm",(void*)f_11771},
{"f_11652ChickenBridge.scm",(void*)f_11652},
{"f_11767ChickenBridge.scm",(void*)f_11767},
{"f_11752ChickenBridge.scm",(void*)f_11752},
{"f_11733ChickenBridge.scm",(void*)f_11733},
{"f_11706ChickenBridge.scm",(void*)f_11706},
{"f_11659ChickenBridge.scm",(void*)f_11659},
{"f_11629ChickenBridge.scm",(void*)f_11629},
{"f_11579ChickenBridge.scm",(void*)f_11579},
{"f_11585ChickenBridge.scm",(void*)f_11585},
{"f_11601ChickenBridge.scm",(void*)f_11601},
{"f_11604ChickenBridge.scm",(void*)f_11604},
{"f_11102ChickenBridge.scm",(void*)f_11102},
{"f_11566ChickenBridge.scm",(void*)f_11566},
{"f_11106ChickenBridge.scm",(void*)f_11106},
{"f_11538ChickenBridge.scm",(void*)f_11538},
{"f_11553ChickenBridge.scm",(void*)f_11553},
{"f_11545ChickenBridge.scm",(void*)f_11545},
{"f_11509ChickenBridge.scm",(void*)f_11509},
{"f_11513ChickenBridge.scm",(void*)f_11513},
{"f_11474ChickenBridge.scm",(void*)f_11474},
{"f_11478ChickenBridge.scm",(void*)f_11478},
{"f_11439ChickenBridge.scm",(void*)f_11439},
{"f_11443ChickenBridge.scm",(void*)f_11443},
{"f_11109ChickenBridge.scm",(void*)f_11109},
{"f_11403ChickenBridge.scm",(void*)f_11403},
{"f_11418ChickenBridge.scm",(void*)f_11418},
{"f_11410ChickenBridge.scm",(void*)f_11410},
{"f_11374ChickenBridge.scm",(void*)f_11374},
{"f_11378ChickenBridge.scm",(void*)f_11378},
{"f_11339ChickenBridge.scm",(void*)f_11339},
{"f_11343ChickenBridge.scm",(void*)f_11343},
{"f_11304ChickenBridge.scm",(void*)f_11304},
{"f_11308ChickenBridge.scm",(void*)f_11308},
{"f_11112ChickenBridge.scm",(void*)f_11112},
{"f_11268ChickenBridge.scm",(void*)f_11268},
{"f_11283ChickenBridge.scm",(void*)f_11283},
{"f_11275ChickenBridge.scm",(void*)f_11275},
{"f_11239ChickenBridge.scm",(void*)f_11239},
{"f_11243ChickenBridge.scm",(void*)f_11243},
{"f_11204ChickenBridge.scm",(void*)f_11204},
{"f_11208ChickenBridge.scm",(void*)f_11208},
{"f_11169ChickenBridge.scm",(void*)f_11169},
{"f_11173ChickenBridge.scm",(void*)f_11173},
{"f_11115ChickenBridge.scm",(void*)f_11115},
{"f_11118ChickenBridge.scm",(void*)f_11118},
{"f_11121ChickenBridge.scm",(void*)f_11121},
{"f_11136ChickenBridge.scm",(void*)f_11136},
{"f_11148ChickenBridge.scm",(void*)f_11148},
{"f_11127ChickenBridge.scm",(void*)f_11127},
{"f_11130ChickenBridge.scm",(void*)f_11130},
{"f_11026ChickenBridge.scm",(void*)f_11026},
{"f_11030ChickenBridge.scm",(void*)f_11030},
{"f_11049ChickenBridge.scm",(void*)f_11049},
{"f_11059ChickenBridge.scm",(void*)f_11059},
{"f_11061ChickenBridge.scm",(void*)f_11061},
{"f_11078ChickenBridge.scm",(void*)f_11078},
{"f_11081ChickenBridge.scm",(void*)f_11081},
{"f_11092ChickenBridge.scm",(void*)f_11092},
{"f_11033ChickenBridge.scm",(void*)f_11033},
{"f_10763ChickenBridge.scm",(void*)f_10763},
{"f_11016ChickenBridge.scm",(void*)f_11016},
{"f_10767ChickenBridge.scm",(void*)f_10767},
{"f_10988ChickenBridge.scm",(void*)f_10988},
{"f_11003ChickenBridge.scm",(void*)f_11003},
{"f_10995ChickenBridge.scm",(void*)f_10995},
{"f_10959ChickenBridge.scm",(void*)f_10959},
{"f_10963ChickenBridge.scm",(void*)f_10963},
{"f_10924ChickenBridge.scm",(void*)f_10924},
{"f_10928ChickenBridge.scm",(void*)f_10928},
{"f_10770ChickenBridge.scm",(void*)f_10770},
{"f_10888ChickenBridge.scm",(void*)f_10888},
{"f_10903ChickenBridge.scm",(void*)f_10903},
{"f_10895ChickenBridge.scm",(void*)f_10895},
{"f_10859ChickenBridge.scm",(void*)f_10859},
{"f_10863ChickenBridge.scm",(void*)f_10863},
{"f_10824ChickenBridge.scm",(void*)f_10824},
{"f_10828ChickenBridge.scm",(void*)f_10828},
{"f_10773ChickenBridge.scm",(void*)f_10773},
{"f_10776ChickenBridge.scm",(void*)f_10776},
{"f_10779ChickenBridge.scm",(void*)f_10779},
{"f_10791ChickenBridge.scm",(void*)f_10791},
{"f_10803ChickenBridge.scm",(void*)f_10803},
{"f_10785ChickenBridge.scm",(void*)f_10785},
{"f_10727ChickenBridge.scm",(void*)f_10727},
{"f_10731ChickenBridge.scm",(void*)f_10731},
{"f_10753ChickenBridge.scm",(void*)f_10753},
{"f_10747ChickenBridge.scm",(void*)f_10747},
{"f_10740ChickenBridge.scm",(void*)f_10740},
{"f_10480ChickenBridge.scm",(void*)f_10480},
{"f_10484ChickenBridge.scm",(void*)f_10484},
{"f_10697ChickenBridge.scm",(void*)f_10697},
{"f_10712ChickenBridge.scm",(void*)f_10712},
{"f_10704ChickenBridge.scm",(void*)f_10704},
{"f_10668ChickenBridge.scm",(void*)f_10668},
{"f_10672ChickenBridge.scm",(void*)f_10672},
{"f_10633ChickenBridge.scm",(void*)f_10633},
{"f_10637ChickenBridge.scm",(void*)f_10637},
{"f_10487ChickenBridge.scm",(void*)f_10487},
{"f_10597ChickenBridge.scm",(void*)f_10597},
{"f_10612ChickenBridge.scm",(void*)f_10612},
{"f_10604ChickenBridge.scm",(void*)f_10604},
{"f_10568ChickenBridge.scm",(void*)f_10568},
{"f_10572ChickenBridge.scm",(void*)f_10572},
{"f_10533ChickenBridge.scm",(void*)f_10533},
{"f_10537ChickenBridge.scm",(void*)f_10537},
{"f_10490ChickenBridge.scm",(void*)f_10490},
{"f_10493ChickenBridge.scm",(void*)f_10493},
{"f_10496ChickenBridge.scm",(void*)f_10496},
{"f_10504ChickenBridge.scm",(void*)f_10504},
{"f_10512ChickenBridge.scm",(void*)f_10512},
{"f_10502ChickenBridge.scm",(void*)f_10502},
{"f_10265ChickenBridge.scm",(void*)f_10265},
{"f_10269ChickenBridge.scm",(void*)f_10269},
{"f_10478ChickenBridge.scm",(void*)f_10478},
{"f_10431ChickenBridge.scm",(void*)f_10431},
{"f_10443ChickenBridge.scm",(void*)f_10443},
{"f_10299ChickenBridge.scm",(void*)f_10299},
{"f_10302ChickenBridge.scm",(void*)f_10302},
{"f_10308ChickenBridge.scm",(void*)f_10308},
{"f_10311ChickenBridge.scm",(void*)f_10311},
{"f_10399ChickenBridge.scm",(void*)f_10399},
{"f_10314ChickenBridge.scm",(void*)f_10314},
{"f_10393ChickenBridge.scm",(void*)f_10393},
{"f_10320ChickenBridge.scm",(void*)f_10320},
{"f_10323ChickenBridge.scm",(void*)f_10323},
{"f_10275ChickenBridge.scm",(void*)f_10275},
{"f_10278ChickenBridge.scm",(void*)f_10278},
{"f_10285ChickenBridge.scm",(void*)f_10285},
{"f_9795ChickenBridge.scm",(void*)f_9795},
{"f_9799ChickenBridge.scm",(void*)f_9799},
{"f_10235ChickenBridge.scm",(void*)f_10235},
{"f_10250ChickenBridge.scm",(void*)f_10250},
{"f_10242ChickenBridge.scm",(void*)f_10242},
{"f_10206ChickenBridge.scm",(void*)f_10206},
{"f_10210ChickenBridge.scm",(void*)f_10210},
{"f_10171ChickenBridge.scm",(void*)f_10171},
{"f_10175ChickenBridge.scm",(void*)f_10175},
{"f_10136ChickenBridge.scm",(void*)f_10136},
{"f_10140ChickenBridge.scm",(void*)f_10140},
{"f_9802ChickenBridge.scm",(void*)f_9802},
{"f_10100ChickenBridge.scm",(void*)f_10100},
{"f_10115ChickenBridge.scm",(void*)f_10115},
{"f_10107ChickenBridge.scm",(void*)f_10107},
{"f_10071ChickenBridge.scm",(void*)f_10071},
{"f_10075ChickenBridge.scm",(void*)f_10075},
{"f_10036ChickenBridge.scm",(void*)f_10036},
{"f_10040ChickenBridge.scm",(void*)f_10040},
{"f_10001ChickenBridge.scm",(void*)f_10001},
{"f_10005ChickenBridge.scm",(void*)f_10005},
{"f_9805ChickenBridge.scm",(void*)f_9805},
{"f_9965ChickenBridge.scm",(void*)f_9965},
{"f_9980ChickenBridge.scm",(void*)f_9980},
{"f_9972ChickenBridge.scm",(void*)f_9972},
{"f_9936ChickenBridge.scm",(void*)f_9936},
{"f_9940ChickenBridge.scm",(void*)f_9940},
{"f_9901ChickenBridge.scm",(void*)f_9901},
{"f_9905ChickenBridge.scm",(void*)f_9905},
{"f_9866ChickenBridge.scm",(void*)f_9866},
{"f_9870ChickenBridge.scm",(void*)f_9870},
{"f_9808ChickenBridge.scm",(void*)f_9808},
{"f_9811ChickenBridge.scm",(void*)f_9811},
{"f_9814ChickenBridge.scm",(void*)f_9814},
{"f_9837ChickenBridge.scm",(void*)f_9837},
{"f_9845ChickenBridge.scm",(void*)f_9845},
{"f_9820ChickenBridge.scm",(void*)f_9820},
{"f_9823ChickenBridge.scm",(void*)f_9823},
{"f_9715ChickenBridge.scm",(void*)f_9715},
{"f_9706ChickenBridge.scm",(void*)f_9706},
{"f_9634ChickenBridge.scm",(void*)f_9634},
{"f_9638ChickenBridge.scm",(void*)f_9638},
{"f_9641ChickenBridge.scm",(void*)f_9641},
{"f_9379ChickenBridge.scm",(void*)f_9379},
{"f_9383ChickenBridge.scm",(void*)f_9383},
{"f_9604ChickenBridge.scm",(void*)f_9604},
{"f_9619ChickenBridge.scm",(void*)f_9619},
{"f_9611ChickenBridge.scm",(void*)f_9611},
{"f_9575ChickenBridge.scm",(void*)f_9575},
{"f_9579ChickenBridge.scm",(void*)f_9579},
{"f_9540ChickenBridge.scm",(void*)f_9540},
{"f_9544ChickenBridge.scm",(void*)f_9544},
{"f_9386ChickenBridge.scm",(void*)f_9386},
{"f_9504ChickenBridge.scm",(void*)f_9504},
{"f_9519ChickenBridge.scm",(void*)f_9519},
{"f_9511ChickenBridge.scm",(void*)f_9511},
{"f_9475ChickenBridge.scm",(void*)f_9475},
{"f_9479ChickenBridge.scm",(void*)f_9479},
{"f_9440ChickenBridge.scm",(void*)f_9440},
{"f_9444ChickenBridge.scm",(void*)f_9444},
{"f_9389ChickenBridge.scm",(void*)f_9389},
{"f_9392ChickenBridge.scm",(void*)f_9392},
{"f_9395ChickenBridge.scm",(void*)f_9395},
{"f_9407ChickenBridge.scm",(void*)f_9407},
{"f_9419ChickenBridge.scm",(void*)f_9419},
{"f_9401ChickenBridge.scm",(void*)f_9401},
{"f_9264ChickenBridge.scm",(void*)f_9264},
{"f_9377ChickenBridge.scm",(void*)f_9377},
{"f_9274ChickenBridge.scm",(void*)f_9274},
{"f_9362ChickenBridge.scm",(void*)f_9362},
{"f_9373ChickenBridge.scm",(void*)f_9373},
{"f_9369ChickenBridge.scm",(void*)f_9369},
{"f_9277ChickenBridge.scm",(void*)f_9277},
{"f_9359ChickenBridge.scm",(void*)f_9359},
{"f_9285ChickenBridge.scm",(void*)f_9285},
{"f_9349ChickenBridge.scm",(void*)f_9349},
{"f_9294ChickenBridge.scm",(void*)f_9294},
{"f_9313ChickenBridge.scm",(void*)f_9313},
{"f_9342ChickenBridge.scm",(void*)f_9342},
{"f_9323ChickenBridge.scm",(void*)f_9323},
{"f_9338ChickenBridge.scm",(void*)f_9338},
{"f_9326ChickenBridge.scm",(void*)f_9326},
{"f_9297ChickenBridge.scm",(void*)f_9297},
{"f_9307ChickenBridge.scm",(void*)f_9307},
{"f_9288ChickenBridge.scm",(void*)f_9288},
{"f_9291ChickenBridge.scm",(void*)f_9291},
{"f_9218ChickenBridge.scm",(void*)f_9218},
{"f_9209ChickenBridge.scm",(void*)f_9209},
{"f_8908ChickenBridge.scm",(void*)f_8908},
{"f_8915ChickenBridge.scm",(void*)f_8915},
{"f_9204ChickenBridge.scm",(void*)f_9204},
{"f_8918ChickenBridge.scm",(void*)f_8918},
{"f_9189ChickenBridge.scm",(void*)f_9189},
{"f_9181ChickenBridge.scm",(void*)f_9181},
{"f_9173ChickenBridge.scm",(void*)f_9173},
{"f_9176ChickenBridge.scm",(void*)f_9176},
{"f_9144ChickenBridge.scm",(void*)f_9144},
{"f_9167ChickenBridge.scm",(void*)f_9167},
{"f_9150ChickenBridge.scm",(void*)f_9150},
{"f_9154ChickenBridge.scm",(void*)f_9154},
{"f_8921ChickenBridge.scm",(void*)f_8921},
{"f_8927ChickenBridge.scm",(void*)f_8927},
{"f_9019ChickenBridge.scm",(void*)f_9019},
{"f_9131ChickenBridge.scm",(void*)f_9131},
{"f_9138ChickenBridge.scm",(void*)f_9138},
{"f_9042ChickenBridge.scm",(void*)f_9042},
{"f_9044ChickenBridge.scm",(void*)f_9044},
{"f_9093ChickenBridge.scm",(void*)f_9093},
{"f_9128ChickenBridge.scm",(void*)f_9128},
{"f_9117ChickenBridge.scm",(void*)f_9117},
{"f_9262ChickenBridge.scm",(void*)f_9262},
{"f_9237ChickenBridge.scm",(void*)f_9237},
{"f_9258ChickenBridge.scm",(void*)f_9258},
{"f_9254ChickenBridge.scm",(void*)f_9254},
{"f_9246ChickenBridge.scm",(void*)f_9246},
{"f_9110ChickenBridge.scm",(void*)f_9110},
{"f_9103ChickenBridge.scm",(void*)f_9103},
{"f_9051ChickenBridge.scm",(void*)f_9051},
{"f_9091ChickenBridge.scm",(void*)f_9091},
{"f_9055ChickenBridge.scm",(void*)f_9055},
{"f_9087ChickenBridge.scm",(void*)f_9087},
{"f_9074ChickenBridge.scm",(void*)f_9074},
{"f_9082ChickenBridge.scm",(void*)f_9082},
{"f_9078ChickenBridge.scm",(void*)f_9078},
{"f_9058ChickenBridge.scm",(void*)f_9058},
{"f_9061ChickenBridge.scm",(void*)f_9061},
{"f_9035ChickenBridge.scm",(void*)f_9035},
{"f_9022ChickenBridge.scm",(void*)f_9022},
{"f_9031ChickenBridge.scm",(void*)f_9031},
{"f_9026ChickenBridge.scm",(void*)f_9026},
{"f_8933ChickenBridge.scm",(void*)f_8933},
{"f_9013ChickenBridge.scm",(void*)f_9013},
{"f_8993ChickenBridge.scm",(void*)f_8993},
{"f_8999ChickenBridge.scm",(void*)f_8999},
{"f_9010ChickenBridge.scm",(void*)f_9010},
{"f_8990ChickenBridge.scm",(void*)f_8990},
{"f_8978ChickenBridge.scm",(void*)f_8978},
{"f_8981ChickenBridge.scm",(void*)f_8981},
{"f_8936ChickenBridge.scm",(void*)f_8936},
{"f_8972ChickenBridge.scm",(void*)f_8972},
{"f_8967ChickenBridge.scm",(void*)f_8967},
{"f_8939ChickenBridge.scm",(void*)f_8939},
{"f_8952ChickenBridge.scm",(void*)f_8952},
{"f_8942ChickenBridge.scm",(void*)f_8942},
{"f_8945ChickenBridge.scm",(void*)f_8945},
{"f_8948ChickenBridge.scm",(void*)f_8948},
{"f_8785ChickenBridge.scm",(void*)f_8785},
{"f_8844ChickenBridge.scm",(void*)f_8844},
{"f_8854ChickenBridge.scm",(void*)f_8854},
{"f_8856ChickenBridge.scm",(void*)f_8856},
{"f_8885ChickenBridge.scm",(void*)f_8885},
{"f_8890ChickenBridge.scm",(void*)f_8890},
{"f_8875ChickenBridge.scm",(void*)f_8875},
{"f_8806ChickenBridge.scm",(void*)f_8806},
{"f_8838ChickenBridge.scm",(void*)f_8838},
{"f_8766ChickenBridge.scm",(void*)f_8766},
{"f_8773ChickenBridge.scm",(void*)f_8773},
{"f_8780ChickenBridge.scm",(void*)f_8780},
{"f_8747ChickenBridge.scm",(void*)f_8747},
{"f_8754ChickenBridge.scm",(void*)f_8754},
{"f_8761ChickenBridge.scm",(void*)f_8761},
{"f_8567ChickenBridge.scm",(void*)f_8567},
{"f_8571ChickenBridge.scm",(void*)f_8571},
{"f_8574ChickenBridge.scm",(void*)f_8574},
{"f_8577ChickenBridge.scm",(void*)f_8577},
{"f_8580ChickenBridge.scm",(void*)f_8580},
{"f_8737ChickenBridge.scm",(void*)f_8737},
{"f_8744ChickenBridge.scm",(void*)f_8744},
{"f_8583ChickenBridge.scm",(void*)f_8583},
{"f_8586ChickenBridge.scm",(void*)f_8586},
{"f_8592ChickenBridge.scm",(void*)f_8592},
{"f_8598ChickenBridge.scm",(void*)f_8598},
{"f_8661ChickenBridge.scm",(void*)f_8661},
{"f_8675ChickenBridge.scm",(void*)f_8675},
{"f_8601ChickenBridge.scm",(void*)f_8601},
{"f_8604ChickenBridge.scm",(void*)f_8604},
{"f_8610ChickenBridge.scm",(void*)f_8610},
{"f_8623ChickenBridge.scm",(void*)f_8623},
{"f_8613ChickenBridge.scm",(void*)f_8613},
{"f_8616ChickenBridge.scm",(void*)f_8616},
{"f_8557ChickenBridge.scm",(void*)f_8557},
{"f_8502ChickenBridge.scm",(void*)f_8502},
{"f_8493ChickenBridge.scm",(void*)f_8493},
{"f_8376ChickenBridge.scm",(void*)f_8376},
{"f_8367ChickenBridge.scm",(void*)f_8367},
{"f_8358ChickenBridge.scm",(void*)f_8358},
{"f_8349ChickenBridge.scm",(void*)f_8349},
{"f_8340ChickenBridge.scm",(void*)f_8340},
{"f_8322ChickenBridge.scm",(void*)f_8322},
{"f_8313ChickenBridge.scm",(void*)f_8313},
{"f_8304ChickenBridge.scm",(void*)f_8304},
{"f_8286ChickenBridge.scm",(void*)f_8286},
{"f_8277ChickenBridge.scm",(void*)f_8277},
{"f_8268ChickenBridge.scm",(void*)f_8268},
{"f_8253ChickenBridge.scm",(void*)f_8253},
{"f_8208ChickenBridge.scm",(void*)f_8208},
{"f_8190ChickenBridge.scm",(void*)f_8190},
{"f_8181ChickenBridge.scm",(void*)f_8181},
{"f_8154ChickenBridge.scm",(void*)f_8154},
{"f_8136ChickenBridge.scm",(void*)f_8136},
{"f_8118ChickenBridge.scm",(void*)f_8118},
{"f_8109ChickenBridge.scm",(void*)f_8109},
{"f_8097ChickenBridge.scm",(void*)f_8097},
{"f_7981ChickenBridge.scm",(void*)f_7981},
{"f_8095ChickenBridge.scm",(void*)f_8095},
{"f_7996ChickenBridge.scm",(void*)f_7996},
{"f_8026ChickenBridge.scm",(void*)f_8026},
{"f_8045ChickenBridge.scm",(void*)f_8045},
{"f_8030ChickenBridge.scm",(void*)f_8030},
{"f_8009ChickenBridge.scm",(void*)f_8009},
{"f_7859ChickenBridge.scm",(void*)f_7859},
{"f_7979ChickenBridge.scm",(void*)f_7979},
{"f_7874ChickenBridge.scm",(void*)f_7874},
{"f_7904ChickenBridge.scm",(void*)f_7904},
{"f_7923ChickenBridge.scm",(void*)f_7923},
{"f_7908ChickenBridge.scm",(void*)f_7908},
{"f_7887ChickenBridge.scm",(void*)f_7887},
{"f_7762ChickenBridge.scm",(void*)f_7762},
{"f_7857ChickenBridge.scm",(void*)f_7857},
{"f_7777ChickenBridge.scm",(void*)f_7777},
{"f_7823ChickenBridge.scm",(void*)f_7823},
{"f_7808ChickenBridge.scm",(void*)f_7808},
{"f_7790ChickenBridge.scm",(void*)f_7790},
{"f_7709ChickenBridge.scm",(void*)f_7709},
{"f_7747ChickenBridge.scm",(void*)f_7747},
{"f_7754ChickenBridge.scm",(void*)f_7754},
{"f_7732ChickenBridge.scm",(void*)f_7732},
{"f_7673ChickenBridge.scm",(void*)f_7673},
{"f_7683ChickenBridge.scm",(void*)f_7683},
{"f_7685ChickenBridge.scm",(void*)f_7685},
{"f_7663ChickenBridge.scm",(void*)f_7663},
{"f_7611ChickenBridge.scm",(void*)f_7611},
{"f_7648ChickenBridge.scm",(void*)f_7648},
{"f_7615ChickenBridge.scm",(void*)f_7615},
{"f_7631ChickenBridge.scm",(void*)f_7631},
{"f_7633ChickenBridge.scm",(void*)f_7633},
{"f_7598ChickenBridge.scm",(void*)f_7598},
{"f_7592ChickenBridge.scm",(void*)f_7592},
{"f_7573ChickenBridge.scm",(void*)f_7573},
{"f_7554ChickenBridge.scm",(void*)f_7554},
{"f_7548ChickenBridge.scm",(void*)f_7548},
{"f_7508ChickenBridge.scm",(void*)f_7508},
{"f_7489ChickenBridge.scm",(void*)f_7489},
{"f_7261ChickenBridge.scm",(void*)f_7261},
{"f_7466ChickenBridge.scm",(void*)f_7466},
{"f_7481ChickenBridge.scm",(void*)f_7481},
{"f_7473ChickenBridge.scm",(void*)f_7473},
{"f_7437ChickenBridge.scm",(void*)f_7437},
{"f_7441ChickenBridge.scm",(void*)f_7441},
{"f_7402ChickenBridge.scm",(void*)f_7402},
{"f_7406ChickenBridge.scm",(void*)f_7406},
{"f_7265ChickenBridge.scm",(void*)f_7265},
{"f_7366ChickenBridge.scm",(void*)f_7366},
{"f_7381ChickenBridge.scm",(void*)f_7381},
{"f_7373ChickenBridge.scm",(void*)f_7373},
{"f_7337ChickenBridge.scm",(void*)f_7337},
{"f_7341ChickenBridge.scm",(void*)f_7341},
{"f_7302ChickenBridge.scm",(void*)f_7302},
{"f_7306ChickenBridge.scm",(void*)f_7306},
{"f_7268ChickenBridge.scm",(void*)f_7268},
{"f_7271ChickenBridge.scm",(void*)f_7271},
{"f_7274ChickenBridge.scm",(void*)f_7274},
{"f_7255ChickenBridge.scm",(void*)f_7255},
{"f_7249ChickenBridge.scm",(void*)f_7249},
{"f_7243ChickenBridge.scm",(void*)f_7243},
{"f_7015ChickenBridge.scm",(void*)f_7015},
{"f_7220ChickenBridge.scm",(void*)f_7220},
{"f_7235ChickenBridge.scm",(void*)f_7235},
{"f_7227ChickenBridge.scm",(void*)f_7227},
{"f_7191ChickenBridge.scm",(void*)f_7191},
{"f_7195ChickenBridge.scm",(void*)f_7195},
{"f_7156ChickenBridge.scm",(void*)f_7156},
{"f_7160ChickenBridge.scm",(void*)f_7160},
{"f_7019ChickenBridge.scm",(void*)f_7019},
{"f_7120ChickenBridge.scm",(void*)f_7120},
{"f_7135ChickenBridge.scm",(void*)f_7135},
{"f_7127ChickenBridge.scm",(void*)f_7127},
{"f_7091ChickenBridge.scm",(void*)f_7091},
{"f_7095ChickenBridge.scm",(void*)f_7095},
{"f_7056ChickenBridge.scm",(void*)f_7056},
{"f_7060ChickenBridge.scm",(void*)f_7060},
{"f_7022ChickenBridge.scm",(void*)f_7022},
{"f_7025ChickenBridge.scm",(void*)f_7025},
{"f_7035ChickenBridge.scm",(void*)f_7035},
{"f_6967ChickenBridge.scm",(void*)f_6967},
{"f_7005ChickenBridge.scm",(void*)f_7005},
{"f_6994ChickenBridge.scm",(void*)f_6994},
{"f_6946ChickenBridge.scm",(void*)f_6946},
{"f_6922ChickenBridge.scm",(void*)f_6922},
{"f_6916ChickenBridge.scm",(void*)f_6916},
{"f_6857ChickenBridge.scm",(void*)f_6857},
{"f_6870ChickenBridge.scm",(void*)f_6870},
{"f_6906ChickenBridge.scm",(void*)f_6906},
{"f_6830ChickenBridge.scm",(void*)f_6830},
{"f_6735ChickenBridge.scm",(void*)f_6735},
{"f_6739ChickenBridge.scm",(void*)f_6739},
{"f_6742ChickenBridge.scm",(void*)f_6742},
{"f_6754ChickenBridge.scm",(void*)f_6754},
{"f_6776ChickenBridge.scm",(void*)f_6776},
{"f_6720ChickenBridge.scm",(void*)f_6720},
{"f_6705ChickenBridge.scm",(void*)f_6705},
{"f_6645ChickenBridge.scm",(void*)f_6645},
{"f_6657ChickenBridge.scm",(void*)f_6657},
{"f_6652ChickenBridge.scm",(void*)f_6652},
{"f_6647ChickenBridge.scm",(void*)f_6647},
{"f_6626ChickenBridge.scm",(void*)f_6626},
{"f_6620ChickenBridge.scm",(void*)f_6620},
{"f_6605ChickenBridge.scm",(void*)f_6605},
{"f_6523ChickenBridge.scm",(void*)f_6523},
{"f_6537ChickenBridge.scm",(void*)f_6537},
{"f_6489ChickenBridge.scm",(void*)f_6489},
{"f_6501ChickenBridge.scm",(void*)f_6501},
{"f_6476ChickenBridge.scm",(void*)f_6476},
{"f_6466ChickenBridge.scm",(void*)f_6466},
{"f_6448ChickenBridge.scm",(void*)f_6448},
{"f_6437ChickenBridge.scm",(void*)f_6437},
{"f_6399ChickenBridge.scm",(void*)f_6399},
{"f_6392ChickenBridge.scm",(void*)f_6392},
{"f_6368ChickenBridge.scm",(void*)f_6368},
{"f_6317ChickenBridge.scm",(void*)f_6317},
{"f_6283ChickenBridge.scm",(void*)f_6283},
{"f_6256ChickenBridge.scm",(void*)f_6256},
{"f_6215ChickenBridge.scm",(void*)f_6215},
{"f_6221ChickenBridge.scm",(void*)f_6221},
{"f_6231ChickenBridge.scm",(void*)f_6231},
{"f_6129ChickenBridge.scm",(void*)f_6129},
{"f_6071ChickenBridge.scm",(void*)f_6071},
{"f_6031ChickenBridge.scm",(void*)f_6031},
{"f_6061ChickenBridge.scm",(void*)f_6061},
{"f_5983ChickenBridge.scm",(void*)f_5983},
{"f_6017ChickenBridge.scm",(void*)f_6017},
{"f_5960ChickenBridge.scm",(void*)f_5960},
{"f_5940ChickenBridge.scm",(void*)f_5940},
{"f_5926ChickenBridge.scm",(void*)f_5926},
{"f_5916ChickenBridge.scm",(void*)f_5916},
{"f_5906ChickenBridge.scm",(void*)f_5906},
{"f_5896ChickenBridge.scm",(void*)f_5896},
{"f_5886ChickenBridge.scm",(void*)f_5886},
{"f_5853ChickenBridge.scm",(void*)f_5853},
{"f_5862ChickenBridge.scm",(void*)f_5862},
{"f_5867ChickenBridge.scm",(void*)f_5867},
{"f_5842ChickenBridge.scm",(void*)f_5842},
{"f_5847ChickenBridge.scm",(void*)f_5847},
{"f_5549ChickenBridge.scm",(void*)f_5549},
{"f_5559ChickenBridge.scm",(void*)f_5559},
{"f_5810ChickenBridge.scm",(void*)f_5810},
{"f_5562ChickenBridge.scm",(void*)f_5562},
{"f_5565ChickenBridge.scm",(void*)f_5565},
{"f_5580ChickenBridge.scm",(void*)f_5580},
{"f_5590ChickenBridge.scm",(void*)f_5590},
{"f_5592ChickenBridge.scm",(void*)f_5592},
{"f_5651ChickenBridge.scm",(void*)f_5651},
{"f_5661ChickenBridge.scm",(void*)f_5661},
{"f_5778ChickenBridge.scm",(void*)f_5778},
{"f_5766ChickenBridge.scm",(void*)f_5766},
{"f_5764ChickenBridge.scm",(void*)f_5764},
{"f_5751ChickenBridge.scm",(void*)f_5751},
{"f_5705ChickenBridge.scm",(void*)f_5705},
{"f_5732ChickenBridge.scm",(void*)f_5732},
{"f_5711ChickenBridge.scm",(void*)f_5711},
{"f_5645ChickenBridge.scm",(void*)f_5645},
{"f_5604ChickenBridge.scm",(void*)f_5604},
{"f_5617ChickenBridge.scm",(void*)f_5617},
{"f_5827ChickenBridge.scm",(void*)f_5827},
{"f_5818ChickenBridge.scm",(void*)f_5818},
{"f_5826ChickenBridge.scm",(void*)f_5826},
{"f_5829ChickenBridge.scm",(void*)f_5829},
{"f_5837ChickenBridge.scm",(void*)f_5837},
{"f_5251ChickenBridge.scm",(void*)f_5251},
{"f_5504ChickenBridge.scm",(void*)f_5504},
{"f_5537ChickenBridge.scm",(void*)f_5537},
{"f_5533ChickenBridge.scm",(void*)f_5533},
{"f_5522ChickenBridge.scm",(void*)f_5522},
{"f_5518ChickenBridge.scm",(void*)f_5518},
{"f_5412ChickenBridge.scm",(void*)f_5412},
{"f_5415ChickenBridge.scm",(void*)f_5415},
{"f_5418ChickenBridge.scm",(void*)f_5418},
{"f_5498ChickenBridge.scm",(void*)f_5498},
{"f_5323ChickenBridge.scm",(void*)f_5323},
{"f_5264ChickenBridge.scm",(void*)f_5264},
{"f_5421ChickenBridge.scm",(void*)f_5421},
{"f_5428ChickenBridge.scm",(void*)f_5428},
{"f_5488ChickenBridge.scm",(void*)f_5488},
{"f_5474ChickenBridge.scm",(void*)f_5474},
{"f_5440ChickenBridge.scm",(void*)f_5440},
{"f_5466ChickenBridge.scm",(void*)f_5466},
{"f_5401ChickenBridge.scm",(void*)f_5401},
{"f_5448ChickenBridge.scm",(void*)f_5448},
{"f_5444ChickenBridge.scm",(void*)f_5444},
{NULL,NULL}};
#endif

static C_PTABLE_ENTRY *create_ptable(void){
#ifdef C_ENABLE_PTABLES
return ptable;
#else
return NULL;
#endif
}
/* end of file */
